{"version":3,"file":"js/144.9f4e5b3a.js","mappings":";;;;;;;;;;;;;AAcA,IAAIA,EAAmBC,MAAQA,KAAKD,iBAAoB,SAAUE,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,IAExDE,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQE,SAAWF,EAAQG,YAAcH,EAAQI,QAAUJ,EAAQK,qBAAuBL,EAAQM,OAASN,EAAQO,OAASP,EAAQQ,eAAiBR,EAAQS,aAAeT,EAAQU,6BAA+BV,EAAQW,YAAcX,EAAQY,gBAAkBZ,EAAQa,WAAab,EAAQc,OAASd,EAAQe,WAAaf,EAAQgB,SAAWhB,EAAQiB,OAASjB,EAAQkB,YAAclB,EAAQmB,mBAAqBnB,EAAQoB,cAAgBpB,EAAQqB,8BAAgCrB,EAAQsB,qBAAuBtB,EAAQuB,gBAAkBvB,EAAQwB,cAAgBxB,EAAQyB,QAAUzB,EAAQ0B,cAAgB1B,EAAQ2B,SAAW3B,EAAQ4B,YAAc5B,EAAQ6B,eAAiB7B,EAAQ8B,UAAY9B,EAAQ+B,4BAA8B/B,EAAQgC,uBAAyBhC,EAAQiC,aAAejC,EAAQkC,kBAAoBlC,EAAQmC,eAAiBnC,EAAQoC,cAAgBpC,EAAQqC,eAAiBrC,EAAQsC,qBAAuBtC,EAAQuC,oBAAsBvC,EAAQwC,eAAiBxC,EAAQyC,gBAAkBzC,EAAQ0C,SAAW1C,EAAQ2C,YAAc3C,EAAQ4C,mBAAqB5C,EAAQ6C,SAAW7C,EAAQ8C,SAAW9C,EAAQ+C,iBAAmB/C,EAAQgD,KAAOhD,EAAQiD,YAAcjD,EAAQkD,YAAclD,EAAQmD,gBAAa,EACjrCnD,EAAQoD,cAAgBpD,EAAQqD,iBAAmBrD,EAAQsD,YAActD,EAAQuD,cAAgBvD,EAAQwD,UAAYxD,EAAQyD,KAAOzD,EAAQ0D,QAAU1D,EAAQ2D,eAAiB3D,EAAQ4D,UAAY5D,EAAQ6D,mBAAqB7D,EAAQ8D,eAAiB9D,EAAQ+D,UAAY/D,EAAQgE,yBAA2BhE,EAAQiE,OAASjE,EAAQkE,YAAclE,EAAQmE,cAAgBnE,EAAQoE,YAAcpE,EAAQqE,cAAgBrE,EAAQsE,eAAiBtE,EAAQuE,mBAAqBvE,EAAQwE,YAAcxE,EAAQyE,WAAazE,EAAQ0E,QAAU1E,EAAQ2E,cAAgB3E,EAAQ4E,SAAW5E,EAAQ6E,QAAU7E,EAAQ8E,wBAA0B9E,EAAQ+E,SAAW/E,EAAQgF,cAAgBhF,EAAQiF,KAAOjF,EAAQkF,oBAAiB,EAClsB,IAAIC,EAAczF,EAAgB0F,EAAQ,OACtCC,EAAUD,EAAQ,MAClBE,EAAUF,EAAQ,MAClBjC,EAAakC,EAAQE,gBAAgB,CACrCC,MAAO,CACHC,UAAWC,OACXC,mBAAoBC,QACpBC,sBAAuBD,QACvBE,oBAAqBF,QACrBG,yBAA0BH,QAC1BI,aAAcJ,QACdK,gBAAiBL,QACjBM,gBAAiBN,QACjBO,cAAerG,OACfsG,aAActG,OACduG,oBAAqBT,QACrBU,eAAgBC,OAChBC,mBAAoBd,OACpBe,QAASC,MACTC,YAAa,CAACJ,OAAQb,QACtBkB,iBAAkBC,SAClBC,oBAAqBD,SACrBE,gBAAiB,GACjBC,WAAY,CAACN,MAAO5G,OAAQ4F,QAC5BuB,wBAAyBvB,OACzBwB,SAAUtB,QACVuB,QAASrH,OACTsH,YAAatH,OACbuH,gBAAiBzB,QACjB0B,OAAQxH,OACRyH,cAAezH,OACf0H,mBAAoB1H,OACpB2H,YAAa3H,OACb4H,UAAW5H,OACX6H,kBAAmB,CAAC/B,QAASF,QAC7BkC,YAAa,CAAClB,MAAOG,SAAUnB,QAC/BmC,mBAAoBtB,OACpBuB,kBAAmBlC,QACnBmC,gBAAiBxB,OACjByB,cAAe,GACfC,kBAAmBrC,QACnBsC,SAAUpI,OACVqI,WAAYrI,OACZsI,aAActI,OACduI,OAAQ,CAACxB,SAAUN,OAAQb,QAC3B4C,iBAAkB1C,QAClB2C,KAAM7C,OACN8C,kBAAmB5C,QACnB6C,mBAAoB3I,OACpB4I,QAAS,CAAChC,MAAOhB,QACjBiD,UAAW7I,OACX8I,aAAc9I,OACd+I,WAAYnD,OACZoD,6BAA8BjC,SAC9BkC,YAAalC,SACbmC,eAAgBnC,SAChBoC,mBAAoBpC,SACpBqC,eAAgBrC,SAChBsC,eAAgBtC,SAChBuC,uBAAwBvC,SACxBwC,oBAAqBxC,SACrByC,YAAazC,SACb0C,eAAgB1C,SAChB2C,gBAAiB3C,SACjB4C,eAAgB5C,SAChB6C,iBAAkB7C,SAClB8C,kBAAmB9C,SACnB+C,WAAY/C,SACZgD,YAAahD,SACbiD,aAAcjD,SACdkD,qBAAsBlD,SACtBmD,sBAAuBnD,SACvBoD,oBAAqBpD,SACrBqD,qBAAsBrD,SACtBsD,cAAetD,SACfuD,aAAcvD,SACdwD,UAAWxD,SACXyD,gBAAiBzD,SACjB0D,WAAY1D,SACZ2D,eAAgB3D,SAChB4D,gBAAiB5D,SACjB6D,cAAe7D,SACf8D,cAAe9D,SACf+D,eAAgB/D,SAChBgE,cAAehE,SACfiE,eAAgBjE,SAChBkE,cAAelE,SACfmE,aAAcnE,SACdoE,cAAepE,SACfqE,aAAcrE,SACdsE,cAAetE,SACfuE,gBAAiBvE,SACjBwE,QAASxE,SACTyE,SAAUzE,SACV0E,mBAAoB1E,SACpB2E,mBAAoB3E,SACpB4E,MAAO3L,OACP4L,OAAQ5L,OACR6L,iBAAkB,CAAC/F,QAAS9F,OAAQ4F,QACpCkG,YAAahG,QACbiG,mBAAoBjG,QACpBkG,sBAAuBlG,QACvBmG,YAAajM,OACbkM,YAAa,GACbC,WAAYrG,QACZsG,UAAWpM,OACXqM,YAAarM,OACbsM,gBAAiB1F,MACjB2F,UAAWvM,OACXwM,gBAAiB,CAAC5F,MAAOG,SAAUnB,QACnC6G,YAAa3G,QACb4G,kBAAmB5G,QACnB6G,gBAAiB7G,QACjB8G,aAAc9G,QACd+G,uBAAwBjG,MACxBkG,QAAS9M,OACT+M,aAAc/M,OACdgN,QAAShN,OACTiN,SAAUxG,OACVyG,QAASlN,OACTmN,qBAAsBrH,QACtBsH,QAAStH,QACTuH,MAAO,CAACtG,SAAUN,OAAQb,QAC1B0H,gBAAiBxH,SAErByH,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,mBAAoB,KACpB,4BAA6B,KAC7B,+BAAgC,KAChC,6BAA8B,KAC9B,kCAAmC,KACnC,sBAAuB,KACvB,yBAA0B,KAC1B,yBAA0B,KAC1B,uBAAwB,KACxB,sBAAuB,KACvB,6BAA8B,KAC9B,wBAAyB,KACzB,4BAA6B,KAC7B,iBAAkB,KAClB,qBAAsB,KACtB,0BAA2B,KAC3B,6BAA8B,KAC9B,yBAA0B,KAC1B,oBAAqB,KACrB,iCAAkC,KAClC,kBAAmB,KACnB,iBAAkB,KAClB,qBAAsB,KACtB,yBAA0B,KAC1B,gBAAiB,KACjB,uBAAwB,KACxB,4BAA6B,KAC7B,qBAAsB,KACtB,mBAAoB,KACpB,2BAA4B,KAC5B,qBAAsB,KACtB,4BAA6B,KAC7B,2BAA4B,KAC5B,yBAA0B,KAC1B,uBAAwB,KACxB,2BAA4B,KAC5B,kBAAmB,KACnB,oBAAqB,KACrB,sBAAuB,KACvB,gBAAiB,KACjB,0BAA2B,KAC3B,cAAe,KACf,2BAA4B,KAC5B,4BAA6B,KAC7B,iBAAkB,KAClB,mBAAoB,KACpB,sBAAuB,KACvB,oBAAqB,KACrB,sCAAuC,KACvC,qBAAsB,KACtB,wBAAyB,KACzB,4BAA6B,KAC7B,wBAAyB,KACzB,wBAAyB,KACzB,gCAAiC,KACjC,6BAA8B,KAC9B,qBAAsB,KACtB,wBAAyB,KACzB,yBAA0B,KAC1B,wBAAyB,KACzB,0BAA2B,KAC3B,2BAA4B,KAC5B,oBAAqB,KACrB,qBAAsB,KACtB,sBAAuB,KACvB,8BAA+B,KAC/B,+BAAgC,KAChC,6BAA8B,KAC9B,8BAA+B,KAC/B,uBAAwB,KACxB,sBAAuB,KACvB,mBAAoB,KACpB,yBAA0B,KAC1B,oBAAqB,KACrB,wBAAyB,KACzB,yBAA0B,KAC1B,uBAAwB,KACxB,uBAAwB,KACxB,wBAAyB,KACzB,uBAAwB,KACxB,wBAAyB,KACzB,uBAAwB,KACxB,sBAAuB,KACvB,uBAAwB,KACxB,sBAAuB,KACvB,uBAAwB,KACxB,yBAA0B,KAC1B,iBAAkB,KAClB,kBAAmB,KACnB,4BAA6B,KAC7B,4BAA6B,KAC7B,eAAgB,KAChB,gBAAiB,KACjB,0BAA2B,KAC3B,qBAAsB,KACtB,4BAA6B,KAC7B,+BAAgC,KAChC,qBAAsB,KACtB,qBAAsB,KACtB,oBAAqB,KACrB,mBAAoB,KACpB,qBAAsB,KACtB,yBAA0B,KAC1B,mBAAoB,KACpB,yBAA0B,KAC1B,qBAAsB,KACtB,2BAA4B,KAC5B,yBAA0B,KAC1B,sBAAuB,KACvB,gCAAiC,KACjC,iBAAkB,KAClB,sBAAuB,KACvB,iBAAkB,KAClB,kBAAmB,KACnB,iBAAkB,KAClB,8BAA+B,KAC/B,iBAAkB,KAClB,eAAgB,KAChB,yBAA0B,MAE9BC,SAAU,CACNC,SAAU,WACN,OAAO5N,KAAK6N,aAGpBC,aAAc,WACV9N,KAAK+N,cAAgBvI,EAAYwI,QACjChO,KAAKiO,oBAAqB,EAC1BjO,KAAKkO,mBAAqB,CACtBC,OAAQ,CAAEC,kBAAkB,EAAMC,WAAY,WAC9C7H,cAAe,CAAE4H,kBAAkB,EAAOC,WAAY,iBACtD5H,aAAc,CAAE2H,kBAAkB,EAAOC,WAAY,gBACrDC,qBAAsB,CAAEF,kBAAkB,EAAOC,WAAY,gBAC7D7G,QAAS,CAAE4G,kBAAkB,EAAOC,WAAY,WAChD1G,OAAQ,CAAEyG,kBAAkB,EAAOC,WAAY,UAC/CzG,cAAe,CAAEwG,kBAAkB,EAAOC,WAAY,iBACtDxG,mBAAoB,CAAEuG,kBAAkB,EAAOC,WAAY,sBAC3DvG,YAAa,CAAEsG,kBAAkB,EAAOC,WAAY,eACpDtG,UAAW,CAAEqG,kBAAkB,EAAOC,WAAY,aAClD9F,SAAU,CAAE6F,kBAAkB,EAAOC,WAAY,YACjD7F,WAAY,CAAE4F,kBAAkB,EAAOC,WAAY,cACnD5F,aAAc,CAAE2F,kBAAkB,EAAOC,WAAY,gBACrDvF,mBAAoB,CAAEsF,kBAAkB,EAAOC,WAAY,sBAC3DrF,UAAW,CAAEoF,kBAAkB,EAAOC,WAAY,aAClDpF,aAAc,CAAEmF,kBAAkB,EAAOC,WAAY,gBACrDvC,MAAO,CAAEsC,kBAAkB,EAAOC,WAAY,SAC9CtC,OAAQ,CAAEqC,kBAAkB,EAAOC,WAAY,UAC/CrC,iBAAkB,CAAEoC,kBAAkB,EAAOC,WAAY,oBACzDjC,YAAa,CAAEgC,kBAAkB,EAAOC,WAAY,eACpD9B,UAAW,CAAE6B,kBAAkB,EAAOC,WAAY,aAClD7B,YAAa,CAAE4B,kBAAkB,EAAOC,WAAY,eACpD3B,UAAW,CAAE0B,kBAAkB,EAAOC,WAAY,aAClDrB,uBAAwB,CAAEoB,kBAAkB,EAAMC,WAAY,0BAC9DpB,QAAS,CAAEmB,kBAAkB,EAAOC,WAAY,WAChDnB,aAAc,CAAEkB,kBAAkB,EAAOC,WAAY,gBACrDlB,QAAS,CAAEiB,kBAAkB,EAAOC,WAAY,WAChDhB,QAAS,CAAEe,kBAAkB,EAAOC,WAAY,eAI5DhO,EAAQmD,WAAaA,EACrB,IAAID,EAAcoC,EAAQ4I,6BAA6B,CACnDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,cAAe,KACf,cAAe,MAEnB7H,MAAO,CACH2I,KAAM,CAACrO,OAAQyG,OAAQb,QACvB0I,KAAM,CAACtO,OAAQyG,OAAQb,WAG/B1F,EAAQkD,YAAcA,EACtBA,EAAYmL,aAAe,YAC3BnL,EAAY2K,mBAAqB,CAC7BM,KAAM,CAAEJ,kBAAkB,EAAOC,WAAY,QAC7CI,KAAM,CAAEL,kBAAkB,EAAOC,WAAY,SAEjD,IAAI/K,EAAcqC,EAAQ4I,6BAA6B,CACnDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,0BAA2B,KAC3B,iBAAkB,KAClB,oBAAqB,KACrB,cAAe,KACf,4BAA6B,MAEjC7H,MAAO,CACH8I,iBAAkB1I,QAClB2I,QAAS7I,OACT8I,WAAY5I,QACZ6I,KAAM/I,OACNgJ,mBAAoB7H,YAG5B7G,EAAQiD,YAAcA,EACtBA,EAAYoL,aAAe,kBAC3BpL,EAAY0L,oBAAqB,EACjC1L,EAAY2L,kBAAoB,CAC5BH,KAAM,SAEV,IAAIzL,EAAOsC,EAAQ4I,6BAA6B,CAC5Cb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,WAAY,KACZ,WAAY,MAEhB7H,MAAO,CACHqJ,EAAGnJ,OACHoJ,EAAGpJ,UAGX1F,EAAQgD,KAAOA,EACfA,EAAKqL,aAAe,KACpB,IAAItL,EAAmBuC,EAAQ4I,6BAA6B,CACxDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,WAAY,KACZ,WAAY,MAEhB7H,MAAO,CACHqJ,EAAGtI,OACHuI,EAAGvI,UAGXvG,EAAQ+C,iBAAmBA,EAC3BA,EAAiBsL,aAAe,iBAChC,IAAIvL,EAAWwC,EAAQ4I,6BAA6B,CAChDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,kBAAmB,KACnB,kBAAmB,KACnB,cAAe,KACf,cAAe,KACf,cAAe,KACf,iBAAkB,KAClB,kBAAmB,KACnB,cAAe,KACf,iBAAkB,MAEtB7H,MAAO,CACHuJ,SAAUrJ,OACVwB,SAAU,CAACtB,QAASiB,UACpB0B,KAAM7C,OACNsJ,KAAMtJ,OACNuJ,KAAMvJ,OACNwJ,QAASrI,SACTsI,SAAU,GACVC,KAAM1J,OACNwH,QAAS,CAACtH,QAASiB,aAG3B7G,EAAQ8C,SAAWA,EACnBA,EAASuL,aAAe,UACxBvL,EAAS6L,oBAAqB,EAC9B,IAAI9L,EAAWyC,EAAQ4I,6BAA6B,CAChDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,cAAe,KACf,wBAAyB,KACzB,yBAA0B,KAC1B,cAAe,MAEnB7H,MAAO,CACH6J,KAAM,GACNC,eAAgB,GAChBC,gBAAiB,GACjBd,KAAM/I,UAGd1F,EAAQ6C,SAAWA,EACnBA,EAASwL,aAAe,UACxBxL,EAAS8L,oBAAqB,EAC9B,IAAI/L,EAAqB0C,EAAQ4I,6BAA6B,CAC1Db,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,YAAa,KACb,YAAa,KACb,YAAa,KACb,YAAa,MAEjB7H,MAAO,CACHgK,GAAIjJ,OACJkJ,GAAIlJ,OACJmJ,GAAInJ,OACJoJ,GAAIpJ,UAGZvG,EAAQ4C,mBAAqBA,EAC7BA,EAAmByL,aAAe,mBAClC,IAAI1L,EAAc2C,EAAQ4I,6BAA6B,CACnDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,WAAY,KACZ,WAAY,MAEhB7H,MAAO,CACHqJ,EAAGnJ,OACHoJ,EAAGpJ,UAGX1F,EAAQ2C,YAAcA,EACtBA,EAAY0L,aAAe,YAC3B,IAAI3L,EAAW4C,EAAQ4I,6BAA6B,CAChDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,mBAAoB,KACpB,sBAAuB,KACvB,wBAAyB,KACzB,wBAAyB,KACzB,qBAAsB,KACtB,uBAAwB,KACxB,8BAA+B,KAC/B,qBAAsB,KACtB,yBAA0B,KAC1B,uBAAwB,KACxB,qBAAsB,KACtB,sBAAuB,KACvB,yBAA0B,KAC1B,iBAAkB,KAClB,4BAA6B,KAC7B,+BAAgC,KAChC,mCAAoC,KACpC,6BAA8B,KAC9B,4BAA6B,KAC7B,iBAAkB,KAClB,sBAAuB,KACvB,iBAAkB,KAClB,kBAAmB,KACnB,uBAAwB,KACxB,mBAAoB,KACpB,kBAAmB,KACnB,0BAA2B,KAC3B,uBAAwB,KACxB,oBAAqB,KACrB,mBAAoB,KACpB,0BAA2B,KAC3B,oBAAqB,KACrB,qBAAsB,KACtB,sBAAuB,KACvB,eAAgB,KAChB,uBAAwB,KACxB,gBAAiB,KACjB,kBAAmB,KACnB,2BAA4B,KAC5B,iBAAkB,KAClB,oBAAqB,KACrB,4BAA6B,KAC7B,sBAAuB,KACvB,wBAAyB,KACzB,gBAAiB,KACjB,gBAAiB,KACjB,kBAAmB,KACnB,cAAe,KACf,mBAAoB,KACpB,qBAAsB,KACtB,iBAAkB,KAClB,iCAAkC,KAClC,sBAAuB,KACvB,0BAA2B,KAC3B,6BAA8B,KAC9B,yBAA0B,KAC1B,mBAAoB,KACpB,uBAAwB,KACxB,mBAAoB,KACpB,kBAAmB,KACnB,cAAe,KACf,yBAA0B,KAC1B,iBAAkB,KAClB,sBAAuB,KACvB,eAAgB,MAEpB7H,MAAO,CACHoK,UAAWlK,OACXmK,aAAcjK,QACdkK,eAAgBlK,QAChBmK,eAAgBnK,QAChBoK,YAAapK,QACbqK,cAAerK,QACfsK,qBAAsBtK,QACtBuK,YAAavK,QACbwK,gBAAiBxK,QACjByK,cAAezK,QACf0K,YAAa1K,QACb2K,aAAc3K,QACd4K,gBAAiB5K,QACjB6K,QAAS/J,MACTgK,mBAAoB7J,SACpB8J,sBAAuB,CAAC9J,SAAUnB,QAClCkL,0BAA2B/J,SAC3BgK,oBAAqB,CAAChK,SAAUnB,QAChCoL,mBAAoB,CAACjK,SAAUnB,QAC/BqL,QAASrL,OACTsL,aAAc,GACdvK,QAASC,MACTqI,SAAUrJ,OACVuL,cAAepK,SACfqK,UAAWxL,OACXyL,SAAUzL,OACV0L,iBAAkB,GAClBC,cAAe,GACfC,WAAY1L,QACZ2L,UAAW7L,OACX8L,iBAAkB9K,MAClB+K,WAAY/L,OACZkC,YAAa,GACb8J,aAAchL,MACdiL,MAAO/L,QACPgM,cAAelM,OACfmM,OAAQ,CAAC/R,OAAQ+G,SAAUnB,QAC3BoM,SAAUhS,OACViS,kBAAmB,GACnBC,QAASpM,QACTqM,WAAY1L,OACZ2L,mBAAoB,GACpB9J,aAActI,OACdqS,eAAgB5L,OAChB6L,OAAQxM,QACRyM,OAAQvS,OACRwS,SAAU/L,OACV0I,KAAMvJ,OACN6M,UAAWhM,OACXqF,YAAahG,QACb4M,QAAS3L,SACT4L,wBAAyB/M,OACzBgN,aAAc7L,SACd8L,iBAAkB/M,QAClBgN,oBAAqBhN,QACrBiN,gBAAiBjN,QACjBkN,UAAWvM,OACXwM,cAAelM,SACfmM,UAAWtN,OACXuN,SAAUvN,OACV+I,KAAM/I,OACNwN,gBAAiBxM,MACjBwG,QAAStH,QACTuN,aAAc5M,OACd4G,MAAO,CAAC5G,OAAQb,WAGxB1F,EAAQ0C,SAAWA,EACnBA,EAAS2L,aAAe,UACxB3L,EAASiM,oBAAqB,EAC9BjM,EAASmL,mBAAqB,CAC1BuF,UAAW,CAAErF,kBAAkB,EAAMC,WAAY,mBACjDqF,OAAQ,CAAEtF,kBAAkB,EAAMC,WAAY,WAC9CsF,mBAAoB,CAAEvF,kBAAkB,EAAOC,WAAY,gBAC3DuF,aAAc,CAAExF,kBAAkB,EAAOC,WAAY,UACrDwF,YAAa,CAAEzF,kBAAkB,EAAMC,WAAY,mBACnDyF,WAAY,CAAE1F,kBAAkB,EAAMC,WAAY,mBAClD0F,UAAW,CAAE3F,kBAAkB,EAAMC,WAAY,mBACjD6D,OAAQ,CAAE9D,kBAAkB,EAAOC,WAAY,UAC/C8D,SAAU,CAAE/D,kBAAkB,EAAOC,WAAY,YACjD5F,aAAc,CAAE2F,kBAAkB,EAAOC,WAAY,gBACrDqE,OAAQ,CAAEtE,kBAAkB,EAAOC,WAAY,UAC/C2F,YAAa,CAAE5F,kBAAkB,EAAMC,WAAY,mBACnD4F,YAAa,CAAE7F,kBAAkB,EAAMC,WAAY,mBACnD6F,UAAW,CAAE9F,kBAAkB,EAAMC,WAAY,mBACjD8F,aAAc,CAAE/F,kBAAkB,EAAMC,WAAY,mBACpD+F,iBAAkB,CAAEhG,kBAAkB,EAAMC,WAAY,mBACxDgG,eAAgB,CAAEjG,kBAAkB,EAAMC,WAAY,oBAE1D,IAAIvL,EAAkB6C,EAAQ4I,6BAA6B,CACvDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,qBAAsB,KACtB,wBAAyB,KACzB,iBAAkB,KAClB,gBAAiB,KACjB,cAAe,KACf,uBAAwB,KACxB,mBAAoB,KACpB,eAAgB,KAChB,eAAgB,MAEpB7H,MAAO,CACH8K,YAAa1K,QACbqO,eAAgBvO,OAChBwO,QAAStO,QACTyC,OAAQ9B,OACR4N,KAAMzO,OACN0O,cAAe7N,OACfyM,UAAWtN,OACX2O,MAAO3O,OACPyH,MAAO5G,UAGfvG,EAAQyC,gBAAkBA,EAC1BA,EAAgB4L,aAAe,gBAC/B,IAAI7L,EAAiB8C,EAAQ4I,6BAA6B,CACtDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,iBAAkB,KAClB,eAAgB,MAEpB7H,MAAO,CACH0O,QAAStO,QACT0O,MAAOxU,UAGfE,EAAQwC,eAAiBA,EACzBA,EAAe6L,aAAe,eAC9B7L,EAAeqL,mBAAqB,CAChC0G,kBAAmB,CAAExG,kBAAkB,EAAOC,WAAY,SAC1DsG,MAAO,CAAEvG,kBAAkB,EAAOC,WAAY,UAElD,IAAIzL,EAAsB+C,EAAQ4I,6BAA6B,CAC3Db,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,aAAc,KACd,sBAAuB,KACvB,uBAAwB,KACxB,eAAgB,MAEpB7H,MAAO,CACHgP,IAAK9O,OACL+O,aAAc/O,OACdgP,cAAehP,OACfiP,MAAOjP,UAGf1F,EAAQuC,oBAAsBA,EAC9BA,EAAoB8L,aAAe,QACnC,IAAI/L,EAAuBgD,EAAQ4I,6BAA6B,CAC5Db,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,qBAAsB,KACtB,oBAAqB,KACrB,uBAAwB,KACxB,gBAAiB,KACjB,oBAAqB,KACrB,eAAgB,MAEpB7H,MAAO,CACH8K,YAAa1K,QACboB,WAAY,CAACN,MAAO5G,OAAQ+G,UAC5B+N,cAAe,CAACrO,OAAQb,QACxB2C,OAAQ9B,OACRsO,WAAYnP,OACZyH,MAAO5G,UAGfvG,EAAQsC,qBAAuBA,EAC/BA,EAAqB+L,aAAe,eACpC,IAAIhM,EAAiBiD,EAAQ4I,6BAA6B,CACtDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,uBAAwB,KACxB,4BAA6B,KAC7B,oBAAqB,KACrB,qBAAsB,KACtB,mBAAoB,MAExB7H,MAAO,CACHsP,cAAelP,QACf8K,mBAAoB7J,SACpBG,WAAY,CAACN,MAAO5G,OAAQ+G,UAC5BkO,YAAa,CAAClO,SAAUnB,QACxBsP,UAAWtP,UAGnB1F,EAAQqC,eAAiBA,EACzBA,EAAegM,aAAe,SAC9B,IAAIjM,EAAgBkD,EAAQ4I,6BAA6B,CACrDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,0BAA2B,KAC3B,wBAAyB,KACzB,0BAA2B,KAC3B,iBAAkB,KAClB,cAAe,MAEnB7H,MAAO,CACHyP,iBAAkBpO,SAClBqO,eAAgBxP,OAChB4I,iBAAkB1I,QAClB2I,QAAS7I,OACT+I,KAAM/I,UAGd1F,EAAQoC,cAAgBA,EACxBA,EAAciM,aAAe,kBAC7BjM,EAAcuM,oBAAqB,EACnCvM,EAAcwM,kBAAoB,CAC9BH,KAAM,WAEV,IAAItM,EAAiBmD,EAAQ4I,6BAA6B,CACtDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,WAAY,KACZ,WAAY,MAEhB7H,MAAO,CACHqJ,EAAGtI,OACHuI,EAAGvI,UAGXvG,EAAQmC,eAAiBA,EACzBA,EAAekM,aAAe,eAC9B,IAAInM,EAAoBoD,EAAQ4I,6BAA6B,CACzDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,mCAAoC,KACpC,iBAAkB,KAClB,uBAAwB,KACxB,mBAAoB,KACpB,wBAAyB,KACzB,kBAAmB,KACnB,cAAe,KACf,cAAe,MAEnB7H,MAAO,CACHoL,0BAA2B/J,SAC3BkK,QAASrL,OACTuL,cAAepK,SACfsO,UAAWzO,MACX0O,eAAgB,GAChBC,SAAUzP,QACVoJ,KAAMtJ,OACNuJ,KAAMvJ,UAGd1F,EAAQkC,kBAAoBA,EAC5BA,EAAkBmM,aAAe,mBACjCnM,EAAkByM,oBAAqB,EACvC,IAAI1M,EAAeqD,EAAQ4I,6BAA6B,CACpDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,0BAA2B,KAC3B,iBAAkB,KAClB,oBAAqB,KACrB,cAAe,KACf,4BAA6B,MAEjC7H,MAAO,CACH8I,iBAAkB1I,QAClB2I,QAAS7I,OACT8I,WAAY5I,QACZ6I,KAAM/I,OACNgJ,mBAAoB7H,YAG5B7G,EAAQiC,aAAeA,EACvBA,EAAaoM,aAAe,kBAC5BpM,EAAa0M,oBAAqB,EAClC1M,EAAa2M,kBAAoB,CAC7BH,KAAM,UAEV,IAAIzM,EAAyBsD,EAAQ4I,6BAA6B,CAC9Db,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,qBAAsB,KACtB,gBAAiB,KACjB,uBAAwB,KACxB,eAAgB,KAChB,iBAAkB,KAClB,eAAgB,MAEpB7H,MAAO,CACH8K,YAAa1K,QACbyC,OAAQ9B,OACR6N,cAAe7N,OACf+N,MAAOxU,OACPoN,QAAStH,QACTuH,MAAO5G,UAGfvG,EAAQgC,uBAAyBA,EACjCA,EAAuBqM,aAAe,eACtCrM,EAAuB6L,mBAAqB,CACxCyH,0BAA2B,CAAEvH,kBAAkB,EAAOC,WAAY,SAClEsG,MAAO,CAAEvG,kBAAkB,EAAOC,WAAY,UAElD,IAAIjM,EAA8BuD,EAAQ4I,6BAA6B,CACnEb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,gBAAiB,KACjB,oBAAqB,KACrB,YAAa,MAEjB7H,MAAO,CACH+P,OAAQ7P,OACR8P,WAAY9P,OACZ+P,GAAI/P,UAGZ1F,EAAQ+B,4BAA8BA,EACtCA,EAA4BsM,aAAe,QAC3C,IAAIvM,EAAYwD,EAAQ4I,6BAA6B,CACjDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,qBAAsB,KACtB,uBAAwB,KACxB,uBAAwB,KACxB,iBAAkB,KAClB,uBAAwB,KACxB,wBAAyB,KACzB,oBAAqB,KACrB,cAAe,KACf,cAAe,KACf,wBAAyB,KACzB,eAAgB,KAChB,qBAAsB,KACtB,+BAAgC,KAChC,yBAA0B,KAC1B,eAAgB,KAChB,kBAAmB,MAEvB7H,MAAO,CACHkQ,YAAa9P,QACb+P,cAAe,CAAC/P,QAASiB,UACzB+O,cAAe,CAAChQ,QAASiB,UACzBgP,QAASnP,MACToP,cAAelQ,QACfmQ,eAAgBrQ,OAChBsQ,WAAY,GACZC,KAAMnW,OACNqU,KAAMzO,OACNwQ,eAAgBxQ,OAChByQ,MAAOrW,OACPsW,YAAa1Q,OACb2Q,sBAAuBzQ,QACvB0Q,gBAAiB5Q,OACjB4O,MAAO,GACPiC,SAAU3Q,WAGlB5F,EAAQ8B,UAAYA,EACpBA,EAAUuM,aAAe,UACzBvM,EAAU+L,mBAAqB,CAC3B2I,OAAQ,CAAEzI,kBAAkB,EAAMC,WAAY,WAC9CyI,aAAc,CAAE1I,kBAAkB,EAAOC,WAAY,SACrDiI,KAAM,CAAElI,kBAAkB,EAAOC,WAAY,QAC7CmI,MAAO,CAAEpI,kBAAkB,EAAOC,WAAY,SAC9CsG,MAAO,CAAEvG,kBAAkB,EAAOC,WAAY,UAElD,IAAInM,EAAiByD,EAAQ4I,6BAA6B,CACtDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,gBAAiB,KACjB,0BAA2B,KAC3B,0BAA2B,KAC3B,8BAA+B,KAC/B,4BAA6B,KAC7B,mBAAoB,KACpB,iBAAkB,KAClB,wBAAyB,KACzB,wBAAyB,KACzB,qBAAsB,KACtB,iCAAkC,MAEtC7H,MAAO,CACHkR,OAAQhR,OACRiR,iBAAkBjR,OAClBkR,iBAAkBlR,OAClBmR,qBAAsBnR,OACtBoR,mBAAoBpR,OACpBqR,UAAWrR,OACXsR,QAAStR,OACTuR,eAAgBvR,OAChBwR,eAAgBxR,OAChByR,YAAazR,OACb0R,wBAAyB1R,UAGjC1F,EAAQ6B,eAAiBA,EACzBA,EAAewM,aAAe,QAC9B,IAAIzM,EAAc0D,EAAQ4I,6BAA6B,CACnDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,0BAA2B,KAC3B,iBAAkB,KAClB,cAAe,MAEnB7H,MAAO,CACH8I,iBAAkB1I,QAClB2I,QAAS7I,OACT+I,KAAM/I,UAGd1F,EAAQ4B,YAAcA,EACtBA,EAAYyM,aAAe,kBAC3BzM,EAAY+M,oBAAqB,EACjC/M,EAAYgN,kBAAoB,CAC5BH,KAAM,SAEV,IAAI9M,EAAW2D,EAAQ4I,6BAA6B,CAChDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,iCAAkC,KAClC,4BAA6B,KAC7B,iBAAkB,KAClB,4BAA6B,KAC7B,8BAA+B,KAC/B,kBAAmB,KACnB,2BAA4B,KAC5B,kBAAmB,KACnB,eAAgB,MAEpB7H,MAAO,CACH6R,wBAAyBzR,QACzB0R,mBAAoBzQ,SACpBqN,QAAStO,QACT2R,mBAAoB3R,QACpB4R,qBAAsB5R,QACtB6R,SAAU/R,OACVgS,kBAAmB9R,QACnB+R,SAAUjS,OACV4O,MAAOxU,UAGfE,EAAQ2B,SAAWA,EACnBA,EAAS0M,aAAe,SACxB1M,EAASkM,mBAAqB,CAC1B+J,YAAa,CAAE7J,kBAAkB,EAAOC,WAAY,SACpDsG,MAAO,CAAEvG,kBAAkB,EAAOC,WAAY,UAElD,IAAItM,EAAgB4D,EAAQ4I,6BAA6B,CACrDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,mBAAoB,KACpB,4BAA6B,KAC7B,kBAAmB,MAEvB7H,MAAO,CACHqS,UAAWnS,OACXoS,mBAAoBpS,OACpBqS,SAAUrS,UAGlB1F,EAAQ0B,cAAgBA,EACxBA,EAAc2M,aAAe,QAC7B,IAAI5M,EAAU6D,EAAQ4I,6BAA6B,CAC/Cb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,mCAAoC,KACpC,iBAAkB,KAClB,uBAAwB,KACxB,mBAAoB,KACpB,kBAAmB,KACnB,gCAAiC,KACjC,uBAAwB,KACxB,wBAAyB,KACzB,mBAAoB,KACpB,0BAA2B,KAC3B,gBAAiB,KACjB,gBAAiB,KACjB,cAAe,KACf,kBAAmB,MAEvB7H,MAAO,CACHoL,0BAA2B/J,SAC3BkK,QAASrL,OACTuL,cAAepK,SACfqK,UAAWxL,OACXyL,SAAUzL,OACVsS,uBAAwBtS,OACxB2L,cAAe,GACf+D,eAAgB,GAChB7D,UAAW7L,OACX8L,iBAAkB9K,MAClBmL,OAAQ,CAAC/R,OAAQ+G,SAAUnB,QAC3B2M,OAAQvS,OACRmP,KAAMvJ,OACNuN,SAAUvN,UAGlB1F,EAAQyB,QAAUA,EAClBA,EAAQ4M,aAAe,SACvB5M,EAAQkN,oBAAqB,EAC7BlN,EAAQoM,mBAAqB,CACzBoK,YAAa,CAAElK,kBAAkB,EAAOC,WAAY,UACpD6D,OAAQ,CAAE9D,kBAAkB,EAAOC,WAAY,UAC/CqE,OAAQ,CAAEtE,kBAAkB,EAAOC,WAAY,WAEnD,IAAIxM,EAAgB8D,EAAQ4I,6BAA6B,CACrDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,uBAAwB,KACxB,oBAAqB,KACrB,qBAAsB,KACtB,mBAAoB,MAExB7H,MAAO,CACHsP,cAAelP,QACfoB,WAAY,CAACN,MAAO5G,QACpBiV,YAAa,CAAClO,SAAUnB,QACxBsP,UAAW,CAACnO,SAAUnB,WAG9B1F,EAAQwB,cAAgBA,EACxBA,EAAc6M,aAAe,SAC7B,IAAI9M,EAAkB+D,EAAQ4I,6BAA6B,CACvDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,mBAAoB,KACpB,4BAA6B,KAC7B,iCAAkC,KAClC,wBAAyB,KACzB,0BAA2B,KAC3B,kBAAmB,KACnB,qBAAsB,KACtB,gBAAiB,KACjB,qCAAsC,KACtC,2BAA4B,KAC5B,oCAAqC,KACrC,yBAA0B,KAC1B,gBAAiB,KACjB,cAAe,KACf,2BAA4B,KAC5B,uBAAwB,KACxB,wBAAyB,KACzB,qBAAsB,KACtB,0BAA2B,KAC3B,2BAA4B,KAC5B,mBAAoB,KACpB,oBAAqB,KACrB,uBAAwB,KACxB,yBAA0B,KAC1B,wBAAyB,KACzB,oBAAqB,KACrB,kBAAmB,KACnB,eAAgB,KAChB,iBAAkB,KAClB,eAAgB,MAEpB7H,MAAO,CACHC,UAAWC,OACXC,mBAAoBC,QACpBsS,wBAAyBtS,QACzBuS,eAAgBrY,OAChBsY,iBAAkB1R,MAClBQ,SAAUtB,QACVwB,YAAatH,OACbuY,OAAQ3R,MACR4R,4BAA6BxY,OAC7BmI,kBAAmBrC,QACnB2S,2BAA4BzY,OAC5B0Y,gBAAiB9R,MACjB2B,OAAQ,CAACxB,SAAUN,OAAQb,QAC3B6C,KAAM7C,OACN8C,kBAAmB5C,QACnB6S,cAAelS,OACf4C,eAAgBtC,SAChByC,YAAazC,SACb6C,iBAAkB7C,SAClB8C,kBAAmB9C,SACnB6R,UAAW7R,SACX8R,WAAY9R,SACZsD,cAAetD,SACfyD,gBAAiBzD,SACjB+R,eAAgB/R,SAChBoF,WAAYrG,QACZmH,SAAUxG,OACVtG,MAAO,CAACyG,MAAOG,SAAUnB,QACzBwH,QAAStH,QACTuH,MAAO,CAACtG,SAAUN,OAAQb,WAGlC1F,EAAQuB,gBAAkBA,EAC1BA,EAAgB8M,aAAe,gBAC/B9M,EAAgBsM,mBAAqB,CACjCgL,gBAAiB,CAAE9K,kBAAkB,EAAMC,WAAY,oBACvD8K,MAAO,CAAE/K,kBAAkB,EAAMC,WAAY,UAC7CsK,4BAA6B,CAAEvK,kBAAkB,EAAOC,WAAY,+BACpEuK,2BAA4B,CAAExK,kBAAkB,EAAOC,WAAY,+BAEvE,IAAI1M,EAAuBgE,EAAQ4I,6BAA6B,CAC5Db,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,mBAAoB,KACpB,4BAA6B,KAC7B,mBAAoB,KACpB,wBAAyB,KACzB,6BAA8B,KAC9B,mBAAoB,KACpB,yBAA0B,KAC1B,kCAAmC,KACnC,wBAAyB,KACzB,kBAAmB,KACnB,2BAA4B,KAC5B,qBAAsB,KACtB,6BAA8B,KAC9B,qBAAsB,KACtB,2BAA4B,KAC5B,oBAAqB,KACrB,gBAAiB,KACjB,4BAA6B,KAC7B,cAAe,KACf,2BAA4B,KAC5B,mBAAoB,KACpB,kBAAmB,KACnB,mBAAoB,KACpB,kBAAmB,KACnB,wBAAyB,KACzB,qBAAsB,KACtB,mBAAoB,KACpB,oBAAqB,KACrB,kBAAmB,KACnB,kBAAmB,KACnB,uBAAwB,KACxB,yBAA0B,KAC1B,kBAAmB,KACnB,qBAAsB,KACtB,uBAAwB,KACxB,mBAAoB,KACpB,iBAAkB,KAClB,yBAA0B,KAC1B,kBAAmB,KACnB,uBAAwB,KACxB,yBAA0B,KAC1B,oBAAqB,KACrB,iBAAkB,KAClB,sBAAuB,KACvB,yBAA0B,KAC1B,mBAAoB,KACpB,kBAAmB,KACnB,eAAgB,KAChB,uBAAwB,KACxB,sBAAuB,KACvB,iBAAkB,KAClB,eAAgB,KAChB,qBAAsB,MAE1B7H,MAAO,CACHC,UAAWC,OACXC,mBAAoBC,QACpBmT,UAAWjZ,OACXqY,eAAgBrY,OAChBkZ,oBAAqB,CAACpT,QAASiB,UAC/BoS,UAAW,GACXC,gBAAiB,GACjBC,yBAA0BvT,QAC1BwT,eAAgBxT,QAChBsB,SAAUtB,QACVyT,kBAAmB,GACnBC,YAAa1T,QACb2T,oBAAqB3T,QACrBwB,YAAa,GACba,kBAAmBrC,QACnB4T,WAAY5T,QACZyC,OAAQ,CAACxB,SAAUN,OAAQb,QAC3B+T,mBAAoB7T,QACpB2C,KAAM7C,OACN8C,kBAAmB5C,QACnB8T,UAAW,CAAC7S,SAAUN,OAAQb,QAC9BiU,SAAU,CAAC9S,SAAUN,OAAQb,QAC7BkU,UAAW,CAAC/S,SAAUN,OAAQb,QAC9B4M,SAAU,CAACzL,SAAUN,OAAQb,QAC7ByD,eAAgBtC,SAChByC,YAAazC,SACb6R,UAAW7R,SACX8R,WAAY9R,SACZgT,SAAUhT,SACViT,SAAUjT,SACVsD,cAAetD,SACfyD,gBAAiBzD,SACjBkT,SAAUlT,SACVmT,YAAanT,SACboT,cAAepT,SACfqT,UAAWrT,SACXsT,QAAStT,SACTuT,gBAAiBvT,SACjBwT,SAAU,CAACxT,SAAU/G,OAAQ4F,QAC7B4U,cAAe1U,QACf2U,gBAAiB3U,QACjBqG,WAAYrG,QACZ4U,QAAS5U,QACT6U,aAAc/U,OACdgV,gBAAiB9U,QACjB+U,UAAW/U,QACXmH,SAAUxG,OACV8N,MAAO3O,OACPkV,cAAe,GACfC,aAAcnU,MACdwG,QAAStH,QACTuH,MAAO,CAACtG,SAAUN,OAAQb,QAC1BoV,YAAa,MAGrB9a,EAAQsB,qBAAuBA,EAC/BA,EAAqB+M,aAAe,qBACpC,IAAIhN,EAAgCiE,EAAQ4I,6BAA6B,CACrEb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,iBAAkB,KAClB,kBAAmB,KACnB,kBAAmB,KACnB,eAAgB,KAChB,qBAAsB,KACtB,4BAA6B,KAC7B,iBAAkB,KAClB,oBAAqB,KACrB,kBAAmB,KACnB,yBAA0B,KAC1B,qBAAsB,KACtB,kBAAmB,KACnB,oBAAqB,MAEzB7H,MAAO,CACHuV,QAASrV,OACTsV,SAAUtV,OACVuV,SAAUvV,OACVwV,MAAOxV,OACPyV,YAAazV,OACb0V,mBAAoB1V,OACpB2V,QAAS3V,OACT4V,WAAY5V,OACZ6V,SAAU7V,OACV8V,gBAAiB9V,OACjB+V,YAAa/V,OACbgW,SAAUhW,OACViW,WAAYjW,UAGpB1F,EAAQqB,8BAAgCA,EACxCA,EAA8BgN,aAAe,8BAC7C,IAAIjN,EAAgBkE,EAAQ4I,6BAA6B,CACrDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,uBAAwB,KACxB,uBAAwB,KACxB,eAAgB,KAChB,iBAAkB,MAEtB7H,MAAO,CACHyL,cAAepK,SACf+U,cAAehW,QACf0O,MAAOxU,OACPoN,QAAStH,WAGjB5F,EAAQoB,cAAgBA,EACxBA,EAAciN,aAAe,cAC7BjN,EAAcyM,mBAAqB,CAC/BgO,iBAAkB,CAAE9N,kBAAkB,EAAOC,WAAY,SACzDsG,MAAO,CAAEvG,kBAAkB,EAAOC,WAAY,UAElD,IAAI7M,EAAqBmE,EAAQ4I,6BAA6B,CAC1Db,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,qBAAsB,KACtB,sBAAuB,KACvB,2BAA4B,MAEhC7H,MAAO,CACHsW,YAAapW,OACbqW,aAAcrW,OACdsW,kBAAmBtW,UAG3B1F,EAAQmB,mBAAqBA,EAC7BA,EAAmBkN,aAAe,QAClC,IAAInN,EAAcoE,EAAQ4I,6BAA6B,CACnDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,qBAAsB,KACtB,yBAA0B,KAC1B,wBAAyB,KACzB,0BAA2B,KAC3B,+BAAgC,KAChC,4BAA6B,KAC7B,qBAAsB,KACtB,8BAA+B,KAC/B,iBAAkB,MAEtB7H,MAAO,CACHyW,YAAavW,OACbwW,gBAAiBxW,OACjByW,eAAgBzW,OAChB0W,iBAAkB1W,OAClB2W,sBAAuBvc,OACvBwc,mBAAoB5W,OACpB6W,YAAa7W,OACb8W,qBAAsB5W,QACtBsH,QAAStH,WAGjB5F,EAAQkB,YAAcA,EACtBA,EAAYmN,aAAe,YAC3BnN,EAAY2M,mBAAqB,CAC7BwO,sBAAuB,CAAEtO,kBAAkB,EAAOC,WAAY,0BAElE,IAAI/M,EAASqE,EAAQ4I,6BAA6B,CAC9Cb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,mBAAoB,KACpB,4BAA6B,KAC7B,yBAA0B,KAC1B,oCAAqC,KACrC,wBAAyB,KACzB,kBAAmB,KACnB,0BAA2B,KAC3B,uBAAwB,KACxB,kBAAmB,KACnB,qBAAsB,KACtB,2BAA4B,KAC5B,kBAAmB,KACnB,gBAAiB,KACjB,cAAe,KACf,2BAA4B,KAC5B,eAAgB,KAChB,uBAAwB,KACxB,mBAAoB,KACpB,qBAAsB,KACtB,wBAAyB,KACzB,qBAAsB,KACtB,0BAA2B,KAC3B,4BAA6B,KAC7B,mBAAoB,KACpB,oBAAqB,KACrB,uBAAwB,KACxB,yBAA0B,KAC1B,sBAAuB,KACvB,kBAAmB,KACnB,sBAAuB,KACvB,yBAA0B,KAC1B,oBAAqB,KACrB,uBAAwB,KACxB,0BAA2B,KAC3B,6BAA8B,KAC9B,0BAA2B,KAC3B,0BAA2B,KAC3B,+BAAgC,KAChC,kBAAmB,KACnB,yBAA0B,KAC1B,iBAAkB,KAClB,eAAgB,MAEpB7H,MAAO,CACHC,UAAWC,OACXC,mBAAoBC,QACpB6W,gBAAiB7W,QACjB8W,2BAA4B9W,QAC5BuS,eAAgBrY,OAChB6c,SAAU,CAACpW,OAAQb,QACnBkX,iBAAkB9c,OAClB+c,cAAehW,SACfK,SAAUtB,QACVwB,YAAatH,OACbmI,kBAAmBrC,QACnBkX,SAAU,GACVzU,OAAQ,CAACxB,SAAUN,OAAQb,QAC3B6C,KAAM7C,OACN8C,kBAAmB5C,QACnBmX,MAAOrW,MACPsW,cAAetX,OACfuX,UAAWvX,OACXwX,YAAa3W,OACb4C,eAAgBtC,SAChByC,YAAazC,SACbsW,iBAAkBtW,SAClBuW,mBAAoBvW,SACpB6R,UAAW7R,SACX8R,WAAY9R,SACZsD,cAAetD,SACfyD,gBAAiBzD,SACjBwW,aAAc3X,OACd4X,SAAU1X,QACV2X,aAAc7X,OACd8X,gBAAiB9X,OACjBuG,WAAYrG,QACZ6X,cAAe5W,SACf6W,iBAAkB9X,QAClB+X,oBAAqB/X,QACrBgY,iBAAkBhY,QAClBiY,iBAAkBjY,QAClBkY,sBAAuBlY,QACvBmH,SAAUxG,OACVwX,gBAAiBrY,OACjBwH,QAAStH,QACTuH,MAAO,CAACtG,SAAUN,OAAQb,WAGlC1F,EAAQiB,OAASA,EACjBA,EAAOoN,aAAe,OACtBpN,EAAO4M,mBAAqB,CACxB+O,iBAAkB,CAAE7O,kBAAkB,EAAOC,WAAY,qBAE7D,IAAIhN,EAAWsE,EAAQ4I,6BAA6B,CAChDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,kBAAmB,KACnB,mBAAoB,KACpB,gBAAiB,KACjB,mBAAoB,KACpB,cAAe,MAEnB7H,MAAO,CACHwY,SAAUtY,OACVuY,UAAWpX,SACXqX,OAAQrX,SACRsX,UAAW5X,OACXkI,KAAM/I,UAGd1F,EAAQgB,SAAWA,EACnBA,EAASqN,aAAe,SACxB,IAAItN,EAAauE,EAAQ4I,6BAA6B,CAClDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,iBAAkB,KAClB,kBAAmB,KACnB,mBAAoB,KACpB,uBAAwB,KACxB,oBAAqB,KACrB,kBAAmB,KACnB,oBAAqB,KACrB,kBAAmB,KACnB,eAAgB,KAChB,cAAe,KACf,kBAAmB,KACnB,yBAA0B,KAC1B,iBAAkB,KAClB,sBAAuB,MAE3B7H,MAAO,CACH4Y,QAAS7X,OACTwI,SAAUrJ,OACVwL,UAAWxL,OACX2L,cAAe,GACfgN,WAAY3Y,OACZ4Y,SAAU5Y,OACV6Y,WAAY3Y,QACZ4Y,SAAU9Y,OACV+Y,MAAO3e,OACPmP,KAAMvJ,OACNyJ,SAAU,GACV+D,gBAAiBxM,MACjBwG,QAAStH,QACTuN,aAAc5M,UAGtBvG,EAAQe,WAAaA,EACrBA,EAAWsN,aAAe,WAC1BtN,EAAW8M,mBAAqB,CAC5BuF,UAAW,CAAErF,kBAAkB,EAAMC,WAAY,mBACjDwF,YAAa,CAAEzF,kBAAkB,EAAMC,WAAY,mBACnDyF,WAAY,CAAE1F,kBAAkB,EAAMC,WAAY,mBAClD0F,UAAW,CAAE3F,kBAAkB,EAAMC,WAAY,mBACjDyQ,MAAO,CAAE1Q,kBAAkB,EAAOC,WAAY,SAC9C2F,YAAa,CAAE5F,kBAAkB,EAAMC,WAAY,mBACnD4F,YAAa,CAAE7F,kBAAkB,EAAMC,WAAY,mBACnD6F,UAAW,CAAE9F,kBAAkB,EAAMC,WAAY,mBACjD8F,aAAc,CAAE/F,kBAAkB,EAAMC,WAAY,mBACpD+F,iBAAkB,CAAEhG,kBAAkB,EAAMC,WAAY,mBACxDgG,eAAgB,CAAEjG,kBAAkB,EAAMC,WAAY,oBAE1D,IAAIlN,EAASwE,EAAQ4I,6BAA6B,CAC9Cb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,cAAe,KACf,iBAAkB,KAClB,kBAAmB,KACnB,eAAgB,KAChB,aAAc,MAElB7H,MAAO,CACHkZ,KAAMnY,OACNoY,QAASpY,OACT8T,SAAUva,OACV8e,MAAOrY,OACPsY,IAAKtY,UAGbvG,EAAQc,OAASA,EACjBA,EAAOuN,aAAe,OACtBvN,EAAO+M,mBAAqB,CACxBwM,SAAU,CAAEtM,kBAAkB,EAAOC,WAAY,aAErD,IAAInN,EAAayE,EAAQ4I,6BAA6B,CAClDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,yBAA0B,KAC1B,uBAAwB,KACxB,4BAA6B,KAC7B,oBAAqB,KACrB,eAAgB,MAEpB7H,MAAO,CACHsZ,gBAAiBlZ,QACjBmZ,cAAenZ,QACfoZ,mBAAoBpZ,QACpBqZ,WAAYvZ,OACZ4O,MAAOxU,UAGfE,EAAQa,WAAaA,EACrBA,EAAWwN,aAAe,WAC1BxN,EAAWgN,mBAAqB,CAC5BqR,cAAe,CAAEnR,kBAAkB,EAAOC,WAAY,SACtDsG,MAAO,CAAEvG,kBAAkB,EAAOC,WAAY,UAElD,IAAIpN,EAAkB0E,EAAQ4I,6BAA6B,CACvDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,2BAA4B,KAC5B,+BAAgC,KAChC,+BAAgC,KAChC,iBAAkB,KAClB,oBAAqB,MAEzB7H,MAAO,CACH2Z,kBAAmBzZ,OACnB0Z,sBAAuB1Z,OACvB2Z,sBAAuB3Z,OACvB4Z,QAAS5Z,OACT6Z,WAAY7Z,UAGpB1F,EAAQY,gBAAkBA,EAC1BA,EAAgByN,aAAe,QAC/B,IAAI1N,EAAc2E,EAAQ4I,6BAA6B,CACnDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,uBAAwB,KACxB,gBAAiB,KACjB,uBAAwB,KACxB,uBAAwB,KACxB,cAAe,KACf,sBAAuB,KACvB,2BAA4B,KAC5B,yBAA0B,KAC1B,qBAAsB,KACtB,qBAAsB,MAE1B7H,MAAO,CACHga,cAAe5Z,QACfkI,OAAQpI,OACRuL,cAAepK,SACf4Y,cAAe/Z,OACfuJ,KAAMvJ,OACNga,aAAcha,OACdia,kBAAmB/Z,QACnBga,gBAAiBha,QACjBia,YAAana,OACboa,YAAa,CAAChgB,OAAQ+G,SAAUnB,WAGxC1F,EAAQW,YAAcA,EACtBA,EAAY0N,aAAe,aAC3B1N,EAAYgO,oBAAqB,EACjChO,EAAYkN,mBAAqB,CAC7BiS,YAAa,CAAE/R,kBAAkB,EAAOC,WAAY,gBAExD,IAAItN,EAA+B4E,EAAQ4I,6BAA6B,CACpEb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,aAAc,KACd,gBAAiB,KACjB,eAAgB,KAChB,YAAa,MAEjB7H,MAAO,CACHua,IAAKra,OACLsa,OAAQta,OACRua,MAAOva,OACPwa,GAAIxa,UAGZ1F,EAAQU,6BAA+BA,EACvCA,EAA6B2N,aAAe,6BAC5C,IAAI5N,EAAe6E,EAAQ4I,6BAA6B,CACpDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,6BAA8B,KAC9B,wBAAyB,KACzB,iBAAkB,MAEtB7H,MAAO,CACH2a,oBAAqBva,QACrBqO,eAAgBvO,OAChBwH,QAAS,CAACtH,QAASF,WAG3B1F,EAAQS,aAAeA,EACvBA,EAAa4N,aAAe,aAC5B,IAAI7N,EAAiB8E,EAAQ4I,6BAA6B,CACtDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,qBAAsB,KACtB,oBAAqB,KACrB,uBAAwB,KACxB,gBAAiB,KACjB,oBAAqB,KACrB,uBAAwB,KACxB,eAAgB,KAChB,iBAAkB,KAClB,eAAgB,MAEpB7H,MAAO,CACH8K,YAAa1K,QACboB,WAAY,CAACN,MAAO5G,OAAQ+G,UAC5B+N,cAAe,CAACrO,OAAQb,QACxB2C,OAAQ9B,OACRsO,WAAYnP,OACZ0O,cAAe7N,OACf+N,MAAOxU,OACPoN,QAAStH,QACTuH,MAAO5G,UAGfvG,EAAQQ,eAAiBA,EACzBA,EAAe6N,aAAe,eAC9B,IAAI9N,EAAS+E,EAAQ4I,6BAA6B,CAC9Cb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,kBAAmB,KACnB,eAAgB,KAChB,mBAAoB,KACpB,kBAAmB,KACnB,gBAAiB,KACjB,cAAe,KACf,sBAAuB,KACvB,eAAgB,KAChB,YAAa,KACb,cAAe,MAEnB7H,MAAO,CACH4a,SAAUvZ,SACVwZ,MAAO9Z,OACP+Z,UAAW5a,OACX6a,SAAUha,OACVia,OAAQ9a,OACR+a,KAAM3gB,OACN4gB,aAAcna,OACdoa,MAAO9Z,SACP+Z,GAAI9gB,OACJ2O,KAAM/I,UAGd1F,EAAQO,OAASA,EACjBA,EAAO8N,aAAe,OACtB9N,EAAOsN,mBAAqB,CACxB4S,KAAM,CAAE1S,kBAAkB,EAAOC,WAAY,QAC7C4S,GAAI,CAAE7S,kBAAkB,EAAOC,WAAY,OAE/C,IAAI1N,EAASgF,EAAQ4I,6BAA6B,CAC9Cb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,kBAAmB,KACnB,kBAAmB,KACnB,cAAe,KACf,sBAAuB,KACvB,kBAAmB,KACnB,0BAA2B,KAC3B,cAAe,KACf,iBAAkB,KAClB,kBAAmB,KACnB,kBAAmB,KACnB,cAAe,KACf,iBAAkB,KAClB,gBAAiB,MAErB7H,MAAO,CACHuJ,SAAUrJ,OACVwB,SAAUtB,QACVib,KAAMnb,OACNob,aAAcpb,OACdqb,SAAUrb,OACVsb,iBAAkB,GAClB/R,KAAMvJ,OACNub,QAAS,GACTC,SAAUxb,OACVyJ,SAAU,GACVC,KAAM1J,OACNwH,QAAStH,QACTub,OAAQzb,UAGhB1F,EAAQM,OAASA,EACjBA,EAAO+N,aAAe,QACtB/N,EAAOqO,oBAAqB,EAC5B,IAAItO,EAAuBiF,EAAQ4I,6BAA6B,CAC5Db,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,wBAAyB,KACzB,iBAAkB,KAClB,wBAAyB,KACzB,2BAA4B,MAEhC7H,MAAO,CACH4b,eAAgBxb,QAChBsO,QAAStO,QACTyb,eAAgB3b,OAChB4b,kBAAmB5b,UAG3B1F,EAAQK,qBAAuBA,EAC/BA,EAAqBgO,aAAe,qBACpC,IAAIjO,GAAUkF,EAAQ4I,6BAA6B,CAC/Cb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,mBAAoB,KACpB,kBAAmB,KACnB,mBAAoB,KACpB,cAAe,KACf,iBAAkB,MAEtB7H,MAAO,CACHoK,UAAWlK,OACXqb,SAAUrb,OACV6b,UAAW3b,QACXwJ,KAAM1J,OACNwH,QAAStH,WAGjB5F,EAAQI,QAAUA,GAClBA,GAAQiO,aAAe,QACvB,IAAIlO,GAAcmF,EAAQ4I,6BAA6B,CACnDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,iBAAkB,KAClB,gBAAiB,KACjB,sBAAuB,KACvB,iBAAkB,KAClB,sBAAuB,KACvB,uBAAwB,KACxB,kBAAmB,KACnB,cAAe,KACf,eAAgB,MAEpB7H,MAAO,CACH0O,QAAS,CAACtO,QAASF,QACnB2C,OAAQ9B,OACRib,aAAc9b,OACd8U,QAAS5U,QACT6U,aAAc/U,OACd+b,cAAe7b,QACf8b,SAAU9b,QACVwJ,KAAM1J,OACNyH,MAAO5G,UAGfvG,EAAQG,YAAcA,GACtBA,GAAYkO,aAAe,YAC3B,IAAInO,GAAWoF,EAAQ4I,6BAA6B,CAChDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,uBAAwB,KACxB,4BAA6B,KAC7B,oBAAqB,KACrB,qBAAsB,KACtB,mBAAoB,MAExB7H,MAAO,CACHsP,cAAelP,QACf8K,mBAAoB7J,SACpBG,WAAY,CAACN,MAAO5G,OAAQ+G,UAC5BkO,YAAa,CAAClO,SAAUnB,QACxBsP,UAAWtP,UAGnB1F,EAAQE,SAAWA,GACnBA,GAASmO,aAAe,SACxB,IAAInJ,GAAiBI,EAAQ4I,6BAA6B,CACtDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,uBAAwB,KACxB,iBAAkB,KAClB,kBAAmB,MAEvB7H,MAAO,CACHuZ,cAAenZ,QACfsO,QAAStO,QACTuJ,SAAU,MAGlBnP,EAAQkF,eAAiBA,GACzBA,GAAemJ,aAAe,eAC9B,IAAIpJ,GAAOK,EAAQ4I,6BAA6B,CAC5Cb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,WAAY,KACZ,WAAY,MAEhB7H,MAAO,CACHqJ,EAAGnJ,OACHoJ,EAAGpJ,UAGX1F,EAAQiF,KAAOA,GACfA,GAAKoJ,aAAe,KACpB,IAAIrJ,GAAgBM,EAAQ4I,6BAA6B,CACrDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,0BAA2B,KAC3B,iBAAkB,KAClB,cAAe,MAEnB7H,MAAO,CACH8I,iBAAkB1I,QAClB2I,QAAS7I,OACT+I,KAAM/I,UAGd1F,EAAQgF,cAAgBA,GACxBA,GAAcqJ,aAAe,kBAC7BrJ,GAAc2J,oBAAqB,EACnC3J,GAAc4J,kBAAoB,CAC9BH,KAAM,WAEV,IAAI1J,GAAWO,EAAQ4I,6BAA6B,CAChDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,WAAY,KACZ,WAAY,MAEhB7H,MAAO,CACHqJ,EAAGtI,OACHuI,EAAGvI,UAGXvG,EAAQ+E,SAAWA,GACnBA,GAASsJ,aAAe,SACxB,IAAIvJ,GAA0BQ,EAAQ4I,6BAA6B,CAC/Db,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,iBAAkB,KAClB,kBAAmB,KACnB,kBAAmB,KACnB,eAAgB,KAChB,qBAAsB,KACtB,4BAA6B,KAC7B,kBAAmB,KACnB,yBAA0B,KAC1B,qBAAsB,KACtB,kBAAmB,KACnB,oBAAqB,MAEzB7H,MAAO,CACHuV,QAASrV,OACTsV,SAAUtV,OACVuV,SAAUvV,OACVwV,MAAOxV,OACPyV,YAAazV,OACb0V,mBAAoB1V,OACpB6V,SAAU7V,OACV8V,gBAAiB9V,OACjB+V,YAAa/V,OACbgW,SAAUhW,OACViW,WAAYjW,UAGpB1F,EAAQ8E,wBAA0BA,GAClCA,GAAwBuJ,aAAe,wBACvC,IAAIxJ,GAAUS,EAAQ4I,6BAA6B,CAC/Cb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,0BAA2B,KAC3B,qBAAsB,KACtB,kBAAmB,KACnB,kBAAmB,KACnB,+BAAgC,KAChC,8BAA+B,KAC/B,iBAAkB,MAEtB7H,MAAO,CACHmc,iBAAkB,CAACjb,MAAOhB,QAC1Bkc,YAAalc,OACbmc,SAAUnc,OACVoc,SAAUlc,QACVmc,sBAAuBnc,QACvBoc,qBAAsBpc,QACtBsH,QAAS,CAACtH,QAASF,WAG3B1F,EAAQ6E,QAAUA,GAClBA,GAAQwJ,aAAe,QACvB,IAAIzJ,GAAWU,EAAQ4I,6BAA6B,CAChDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,iBAAkB,KAClB,mBAAoB,KACpB,kBAAmB,MAEvB7H,MAAO,CACH0O,QAAStO,QACTqc,UAAW1b,OACX2b,SAAU3b,UAGlBvG,EAAQ4E,SAAWA,GACnBA,GAASyJ,aAAe,SACxB,IAAI1J,GAAgBW,EAAQ4I,6BAA6B,CACrDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,0BAA2B,KAC3B,iBAAkB,KAClB,iBAAkB,KAClB,cAAe,MAEnB7H,MAAO,CACH8I,iBAAkB1I,QAClB2I,QAAS7I,OACTyc,QAAS,GACT1T,KAAM/I,UAGd1F,EAAQ2E,cAAgBA,GACxBA,GAAc0J,aAAe,kBAC7B1J,GAAcgK,oBAAqB,EACnChK,GAAciK,kBAAoB,CAC9BH,KAAM,WAEV,IAAI/J,GAAUY,EAAQ4I,6BAA6B,CAC/Cb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,mBAAoB,KACpB,4BAA6B,KAC7B,mBAAoB,KACpB,wBAAyB,KACzB,6BAA8B,KAC9B,mBAAoB,KACpB,yBAA0B,KAC1B,kCAAmC,KACnC,wBAAyB,KACzB,kBAAmB,KACnB,2BAA4B,KAC5B,qBAAsB,KACtB,6BAA8B,KAC9B,qBAAsB,KACtB,2BAA4B,KAC5B,oBAAqB,KACrB,gBAAiB,KACjB,4BAA6B,KAC7B,cAAe,KACf,2BAA4B,KAC5B,mBAAoB,KACpB,kBAAmB,KACnB,mBAAoB,KACpB,kBAAmB,KACnB,wBAAyB,KACzB,qBAAsB,KACtB,mBAAoB,KACpB,oBAAqB,KACrB,kBAAmB,KACnB,kBAAmB,KACnB,uBAAwB,KACxB,yBAA0B,KAC1B,kBAAmB,KACnB,qBAAsB,KACtB,uBAAwB,KACxB,mBAAoB,KACpB,iBAAkB,KAClB,yBAA0B,KAC1B,kBAAmB,KACnB,uBAAwB,KACxB,yBAA0B,KAC1B,oBAAqB,KACrB,iBAAkB,KAClB,sBAAuB,KACvB,yBAA0B,KAC1B,mBAAoB,KACpB,kBAAmB,KACnB,eAAgB,KAChB,uBAAwB,KACxB,sBAAuB,KACvB,iBAAkB,KAClB,eAAgB,KAChB,qBAAsB,MAE1B7H,MAAO,CACHC,UAAWC,OACXC,mBAAoBC,QACpBmT,UAAWjZ,OACXqY,eAAgBrY,OAChBkZ,oBAAqB,CAACpT,QAASiB,UAC/BoS,UAAW,GACXC,gBAAiB,GACjBC,yBAA0BvT,QAC1BwT,eAAgBxT,QAChBsB,SAAUtB,QACVyT,kBAAmB,GACnBC,YAAa1T,QACb2T,oBAAqB3T,QACrBwB,YAAa,GACba,kBAAmBrC,QACnB4T,WAAY5T,QACZyC,OAAQ,CAACxB,SAAUN,OAAQb,QAC3B+T,mBAAoB7T,QACpB2C,KAAM7C,OACN8C,kBAAmB5C,QACnB8T,UAAW,CAAC7S,SAAUN,OAAQb,QAC9BiU,SAAU,CAAC9S,SAAUN,OAAQb,QAC7BkU,UAAW,CAAC/S,SAAUN,OAAQb,QAC9B4M,SAAU,CAACzL,SAAUN,OAAQb,QAC7ByD,eAAgBtC,SAChByC,YAAazC,SACb6R,UAAW7R,SACX8R,WAAY9R,SACZgT,SAAUhT,SACViT,SAAUjT,SACVsD,cAAetD,SACfyD,gBAAiBzD,SACjBkT,SAAUlT,SACVmT,YAAanT,SACboT,cAAepT,SACfqT,UAAWrT,SACXsT,QAAStT,SACTuT,gBAAiBvT,SACjBwT,SAAU,CAACxT,SAAU/G,OAAQ4F,QAC7B4U,cAAe1U,QACf2U,gBAAiB3U,QACjBqG,WAAYrG,QACZ4U,QAAS5U,QACT6U,aAAc/U,OACdgV,gBAAiB9U,QACjB+U,UAAW/U,QACXmH,SAAUxG,OACV8N,MAAO3O,OACPkV,cAAe,GACfC,aAAcnU,MACdwG,QAAStH,QACTuH,MAAO,CAACtG,SAAUN,OAAQb,QAC1BoV,YAAa,MAGrB9a,EAAQ0E,QAAUA,GAClBA,GAAQ2J,aAAe,QACvB3J,GAAQmJ,mBAAqB,CACzBkL,UAAW,CAAEhL,kBAAkB,EAAOC,WAAY,aAClDqM,SAAU,CAAEtM,kBAAkB,EAAOC,WAAY,YACjDoU,YAAa,CAAErU,kBAAkB,EAAMC,WAAY,iBAEvD,IAAIvJ,GAAaa,EAAQ4I,6BAA6B,CAClDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,YAAa,KACb,kBAAmB,KACnB,wBAAyB,KACzB,mBAAoB,KACpB,YAAa,KACb,YAAa,KACb,gBAAiB,MAErB7H,MAAO,CACH6c,GAAI,CAACviB,OAAQ4F,QACb4c,SAAU,GACVC,eAAgB,CAACziB,OAAQ4F,QACzB8c,UAAW,CAAC1iB,OAAQ4F,QACpB+c,GAAI,CAAC3iB,OAAQ4F,QACbgd,GAAI,GACJC,OAAQ,CAAC7iB,OAAQ4F,WAGzB1F,EAAQyE,WAAaA,GACrBA,GAAW4J,aAAe,WAC1B,IAAI7J,GAAcc,EAAQ4I,6BAA6B,CACnDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,0BAA2B,KAC3B,aAAc,KACd,iBAAkB,KAClB,aAAc,KACd,oBAAqB,KACrB,cAAe,MAEnB7H,MAAO,CACH8I,iBAAkB1I,QAClBgd,IAAK,GACLrU,QAAS7I,OACTmd,IAAK,GACLrU,WAAY5I,QACZ6I,KAAM/I,UAGd1F,EAAQwE,YAAcA,GACtBA,GAAY6J,aAAe,kBAC3B7J,GAAYmK,oBAAqB,EACjCnK,GAAYoK,kBAAoB,CAC5BH,KAAM,SAEV,IAAIlK,GAAqBe,EAAQ4I,6BAA6B,CAC1Db,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,mBAAoB,KACpB,kBAAmB,KACnB,qBAAsB,KACtB,gBAAiB,KACjB,iBAAkB,KAClB,iBAAkB,MAEtB7H,MAAO,CACHsd,UAAWld,QACXsC,SAAUtC,QACVmd,YAAand,QACb8F,OAAQ9F,QACRgH,QAAShH,QACTkH,QAASlH,WAGjB5F,EAAQuE,mBAAqBA,GAC7BA,GAAmB8J,aAAe,mBAClC,IAAI/J,GAAiBgB,EAAQ4I,6BAA6B,CACtDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,iBAAkB,KAClB,cAAe,KACf,cAAe,MAEnB7H,MAAO,CACH+I,QAAS7I,OACTsd,KAAMpd,QACN6I,KAAM/I,UAGd1F,EAAQsE,eAAiBA,GACzBA,GAAe+J,aAAe,kBAC9B/J,GAAeqK,oBAAqB,EACpCrK,GAAesK,kBAAoB,CAC/BH,KAAM,YAEV,IAAIpK,GAAgBiB,EAAQ4I,6BAA6B,CACrDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,6BAA8B,KAC9B,yBAA0B,KAC1B,oBAAqB,KACrB,kBAAmB,KACnB,mBAAoB,KACpB,sBAAuB,KACvB,cAAe,KACf,uBAAwB,KACxB,sBAAuB,KACvB,0BAA2B,KAC3B,gBAAiB,KACjB,eAAgB,KAChB,gBAAiB,KACjB,eAAgB,KAChB,sBAAuB,KACvB,mBAAoB,KACpB,oBAAqB,KACrB,qBAAsB,KACtB,kBAAmB,KACnB,mBAAoB,KACpB,2BAA4B,KAC5B,qBAAsB,KACtB,uBAAwB,MAE5B7H,MAAO,CACHyd,oBAAqBrd,QACrBwK,gBAAiBxK,QACjBsd,WAAYtd,QACZ0c,SAAU,GACVrJ,UAAW,GACXkK,aAAc,CAACrjB,OAAQ4F,QACvB2J,KAAM,GACN+T,cAAe1d,OACf2d,aAAc,GACdC,iBAAkB5d,OAClB6d,OAAQ7d,OACR8d,MAAO9d,OACP+d,OAAQ/d,OACRge,MAAO7c,SACP8c,aAAc9c,SACd+c,UAAW/c,SACXgd,WAAYhd,SACZid,YAAajd,SACbkd,SAAUld,SACVmd,UAAWnd,SACXod,kBAAmB1d,OACnB2d,YAAa3d,OACb4d,cAAeve,WAGvB5F,EAAQqE,cAAgBA,GACxBA,GAAcgK,aAAe,cAC7BhK,GAAcwJ,mBAAqB,CAC/BsV,aAAc,CAAEpV,kBAAkB,EAAOC,WAAY,iBAEzD,IAAI5J,GAAckB,EAAQ4I,6BAA6B,CACnDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,6BAA8B,KAC9B,cAAe,KACf,wBAAyB,KACzB,qBAAsB,KACtB,0BAA2B,KAC3B,yBAA0B,KAC1B,uBAAwB,KACxB,uBAAwB,KACxB,mBAAoB,MAExB7H,MAAO,CACH4e,oBAAqB1e,OACrByO,KAAMzO,OACN2e,eAAgBze,QAChBgG,YAAahG,QACb0e,iBAAkB5e,OAClB6e,gBAAiB3e,QACjB4e,cAAe5e,QACf6e,cAAe/e,OACfgf,UAAW,CAAC9e,QAASF,WAG7B1F,EAAQoE,YAAcA,GACtBA,GAAYiK,aAAe,YAC3B,IAAIlK,GAAgBmB,EAAQ4I,6BAA6B,CACrDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,gCAAiC,KACjC,6BAA8B,KAC9B,qBAAsB,KACtB,kCAAmC,KACnC,cAAe,KACf,iBAAkB,KAClB,eAAgB,MAEpB7H,MAAO,CACHmf,uBAAwB/e,QACxBgf,oBAAqBhf,QACrBif,YAAanf,OACbof,yBAA0Blf,QAC1BwJ,KAAM1J,OACNwH,QAAStH,QACTuH,MAAO5G,UAGfvG,EAAQmE,cAAgBA,GACxBA,GAAckK,aAAe,cAC7B,IAAInK,GAAcoB,EAAQ4I,6BAA6B,CACnDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,wBAAyB,KACzB,kBAAmB,KACnB,kCAAmC,KACnC,cAAe,KACf,uBAAwB,KACxB,4BAA6B,MAEjC7H,MAAO,CACHuf,eAAgBnf,QAChBof,SAAUpf,QACVqf,yBAA0B1e,OAC1B4N,KAAMzO,OACNwf,cAAexf,OACfyf,mBAAoBzf,UAG5B1F,EAAQkE,YAAcA,GACtBA,GAAYmK,aAAe,YAC3B,IAAIpK,GAASqB,EAAQ4I,6BAA6B,CAC9Cb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,kBAAmB,KACnB,eAAgB,KAChB,mBAAoB,KACpB,kBAAmB,KACnB,gBAAiB,KACjB,cAAe,KACf,sBAAuB,KACvB,eAAgB,KAChB,YAAa,KACb,cAAe,MAEnB7H,MAAO,CACH4a,SAAUvZ,SACVwZ,MAAO9Z,OACP+Z,UAAW5a,OACX6a,SAAUha,OACVia,OAAQ9a,OACR+a,KAAM3gB,OACN4gB,aAAcna,OACdoa,MAAO9Z,SACP+Z,GAAI9gB,OACJ2O,KAAM/I,UAGd1F,EAAQiE,OAASA,GACjBA,GAAOoK,aAAe,OACtB,IAAIrK,GAA2BsB,EAAQ4I,6BAA6B,CAChEb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,qBAAsB,KACtB,mBAAoB,KACpB,qBAAsB,MAE1B7H,MAAO,CACH4f,YAAa1f,OACbsN,UAAWtN,OACX2f,YAAa,CAAC9e,OAAQb,WAG9B1F,EAAQgE,yBAA2BA,GACnCA,GAAyBqK,aAAe,yBACxCrK,GAAyB2K,oBAAqB,EAC9C,IAAI5K,GAAYuB,EAAQ4I,6BAA6B,CACjDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,uBAAwB,KACxB,mBAAoB,KACpB,wBAAyB,KACzB,cAAe,KACf,yBAA0B,MAE9B7H,MAAO,CACH8f,cAAe5f,OACf6f,UAAW7f,OACX8f,eAAgB9f,OAChByO,KAAMzO,OACN+f,gBAAiB7f,WAGzB5F,EAAQ+D,UAAYA,GACpBA,GAAUsK,aAAe,UACzB,IAAIvK,GAAiBwB,EAAQ4I,6BAA6B,CACtDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,oBAAqB,KACrB,oBAAqB,KACrB,iBAAkB,KAClB,uBAAwB,KACxB,oBAAqB,KACrB,cAAe,MAEnB7H,MAAO,CACHkgB,WAAY7e,SACZ8e,WAAY9e,SACZqN,QAAStO,QACTggB,cAAerf,OACfsf,WAAYngB,OACZ+I,KAAM/I,UAGd1F,EAAQ8D,eAAiBA,GACzBA,GAAeuK,aAAe,eAC9B,IAAIxK,GAAqByB,EAAQ4I,6BAA6B,CAC1Db,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,0BAA2B,KAC3B,aAAc,KACd,iBAAkB,KAClB,aAAc,KACd,cAAe,KACf,cAAe,MAEnB7H,MAAO,CACH8I,iBAAkB1I,QAClBgd,IAAKrc,OACLgI,QAAS7I,OACTmd,IAAKtc,OACLyc,KAAMpd,QACN6I,KAAM/I,UAGd1F,EAAQ6D,mBAAqBA,GAC7BA,GAAmBwK,aAAe,kBAClCxK,GAAmB8K,oBAAqB,EACxC9K,GAAmB+K,kBAAoB,CACnCH,KAAM,gBAEV,IAAI7K,GAAY0B,EAAQ4I,6BAA6B,CACjDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,gCAAiC,KACjC,oBAAqB,KACrB,iCAAkC,KAClC,yBAA0B,KAC1B,eAAgB,KAChB,oBAAqB,MAEzB7H,MAAO,CACHsgB,uBAAwBjf,SACxBkf,WAAYrf,MACZsf,wBAAyBpgB,QACzBga,gBAAiBha,QACjB0O,MAAOxU,OACPmmB,WAAYvf,SAGpB1G,EAAQ4D,UAAYA,GACpBA,GAAUyK,aAAe,UACzBzK,GAAUiK,mBAAqB,CAC3BqY,UAAW,CAAEnY,kBAAkB,EAAMC,WAAY,cACjDmY,aAAc,CAAEpY,kBAAkB,EAAOC,WAAY,SACrDsG,MAAO,CAAEvG,kBAAkB,EAAOC,WAAY,SAC9CoY,UAAW,CAAErY,kBAAkB,EAAMC,WAAY,eAErD,IAAIrK,GAAiB2B,EAAQ4I,6BAA6B,CACtDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,aAAc,KACd,wBAAyB,KACzB,eAAgB,KAChB,aAAc,KACd,wBAAyB,KACzB,aAAc,KACd,wBAAyB,KACzB,aAAc,KACd,wBAAyB,MAE7B7H,MAAO,CACH6gB,IAAK3gB,OACL4gB,eAAgB5gB,OAChB6gB,MAAO7gB,OACPkd,IAAKld,OACL8gB,eAAgB9gB,OAChBmd,IAAKnd,OACL+gB,eAAgB/gB,OAChBghB,IAAKhhB,OACLihB,eAAgBjhB,UAGxB1F,EAAQ2D,eAAiBA,GACzBA,GAAe0K,aAAe,QAC9B,IAAI3K,GAAU4B,EAAQ4I,6BAA6B,CAC/Cb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,gBAAiB,KACjB,aAAc,KACd,wBAAyB,KACzB,gBAAiB,KACjB,0BAA2B,KAC3B,0BAA2B,KAC3B,qBAAsB,KACtB,8BAA+B,KAC/B,4BAA6B,KAC7B,eAAgB,KAChB,sBAAuB,KACvB,mBAAoB,KACpB,iBAAkB,KAClB,oBAAqB,KACrB,mBAAoB,KACpB,4BAA6B,KAC7B,kBAAmB,KACnB,2BAA4B,KAC5B,aAAc,KACd,2BAA4B,KAC5B,+BAAgC,KAChC,+BAAgC,KAChC,sBAAuB,KACvB,aAAc,KACd,wBAAyB,KACzB,aAAc,KACd,wBAAyB,KACzB,YAAa,KACb,uBAAwB,KACxB,wBAAyB,KACzB,wBAAyB,KACzB,aAAc,KACd,wBAAyB,KACzB,qBAAsB,KACtB,eAAgB,KAChB,iBAAkB,KAClB,oBAAqB,KACrB,iCAAkC,MAEtC7H,MAAO,CACHkR,OAAQhR,OACR2gB,IAAK3gB,OACL4gB,eAAgB5gB,OAChB6P,OAAQ7P,OACRiR,iBAAkBjR,OAClBkR,iBAAkBlR,OAClBoW,YAAapW,OACbmR,qBAAsBnR,OACtBoR,mBAAoBpR,OACpB6gB,MAAO7gB,OACPqW,aAAcrW,OACdqR,UAAWrR,OACXsR,QAAStR,OACT8P,WAAY9P,OACZmS,UAAWnS,OACXoS,mBAAoBpS,OACpBqS,SAAUrS,OACVsW,kBAAmBtW,OACnB8O,IAAK9O,OACLyZ,kBAAmBzZ,OACnB0Z,sBAAuB1Z,OACvB2Z,sBAAuB3Z,OACvB+O,aAAc/O,OACdkd,IAAKld,OACL8gB,eAAgB9gB,OAChBmd,IAAKnd,OACL+gB,eAAgB/gB,OAChB+P,GAAI/P,OACJgP,cAAehP,OACfuR,eAAgBvR,OAChBwR,eAAgBxR,OAChBghB,IAAKhhB,OACLihB,eAAgBjhB,OAChByR,YAAazR,OACbiP,MAAOjP,OACP4Z,QAAS5Z,OACT6Z,WAAY7Z,OACZ0R,wBAAyB1R,UAGjC1F,EAAQ0D,QAAUA,GAClBA,GAAQ2K,aAAe,QACvB,IAAI5K,GAAO6B,EAAQ4I,6BAA6B,CAC5Cb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,cAAe,KACf,iBAAkB,KAClB,kBAAmB,KACnB,eAAgB,KAChB,aAAc,MAElB7H,MAAO,CACHkZ,KAAMnY,OACNoY,QAASpY,OACT8T,SAAUva,OACV8e,MAAOrY,OACPsY,IAAKtY,UAGbvG,EAAQyD,KAAOA,GACfA,GAAK4K,aAAe,KACpB,IAAI7K,GAAY8B,EAAQ4I,6BAA6B,CACjDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,kBAAmB,KACnB,eAAgB,KAChB,iBAAkB,MAEtB7H,MAAO,CACH0B,SAAUtB,QACVmX,MAAOrW,MACPwG,QAAStH,WAGjB5F,EAAQwD,UAAYA,GACpBA,GAAU6K,aAAe,UACzB7K,GAAUqK,mBAAqB,CAC3B+Y,KAAM,CAAE7Y,kBAAkB,EAAMC,WAAY,UAEhD,IAAIzK,GAAgB+B,EAAQ4I,6BAA6B,CACrDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,kBAAmB,KACnB,cAAe,KACf,kBAAmB,KACnB,iBAAkB,KAClB,kBAAmB,KACnB,cAAe,KACf,iBAAkB,KAClB,iBAAkB,KAClB,gBAAiB,MAErB7H,MAAO,CACH0B,SAAUtB,QACVib,KAAMnb,OACNqb,SAAUrb,OACVub,QAAS,GACT9R,SAAU,GACVC,KAAM1J,OACNsH,QAAStH,OACTwH,QAAStH,QACTub,OAAQzb,UAGhB1F,EAAQuD,cAAgBA,GACxBA,GAAc8K,aAAe,eAC7B9K,GAAcoL,oBAAqB,EACnC,IAAIrL,GAAcgC,EAAQ4I,6BAA6B,CACnDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,mBAAoB,KACpB,gBAAiB,KACjB,kBAAmB,KACnB,uBAAwB,KACxB,uBAAwB,KACxB,cAAe,KACf,sBAAuB,KACvB,yBAA0B,KAC1B,qBAAsB,KACtB,qBAAsB,MAE1B7H,MAAO,CACHoK,UAAWlK,OACXoI,OAAQpI,OACRqJ,SAAUrJ,OACVuL,cAAepK,SACf4Y,cAAe/Z,OACfuJ,KAAMvJ,OACNga,aAAcha,OACdka,gBAAiBha,QACjBia,YAAana,OACboa,YAAa,CAAChgB,OAAQ+G,SAAUnB,WAGxC1F,EAAQsD,YAAcA,GACtBA,GAAY+K,aAAe,aAC3B/K,GAAYqL,oBAAqB,EACjCrL,GAAYuK,mBAAqB,CAC7BiS,YAAa,CAAE/R,kBAAkB,EAAOC,WAAY,gBAExD,IAAI3K,GAAmBiC,EAAQ4I,6BAA6B,CACxDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,0BAA2B,KAC3B,wBAAyB,KACzB,0BAA2B,KAC3B,aAAc,KACd,iBAAkB,KAClB,aAAc,KACd,iBAAkB,KAClB,oBAAqB,KACrB,cAAe,KACf,cAAe,KACf,4BAA6B,MAEjC7H,MAAO,CACHyP,iBAAkBpO,SAClBqO,eAAgBxP,OAChB4I,iBAAkB1I,QAClBgd,IAAK,GACLrU,QAAS7I,OACTmd,IAAK,GACLV,QAAS,GACT3T,WAAY5I,QACZod,KAAMpd,QACN6I,KAAM/I,OACNgJ,mBAAoB7H,YAG5B7G,EAAQqD,iBAAmBA,GAC3BA,GAAiBgL,aAAe,kBAChChL,GAAiBsL,oBAAqB,EACtCtL,GAAiBuL,kBAAoB,CACjCH,KAAM,YAEV,IAAIrL,GAAgBkC,EAAQ4I,6BAA6B,CACrDb,MAAO,CACH,kBAAmB,KACnB,wBAAyB,KACzB,kBAAmB,KACnB,mBAAoB,KACpB,gBAAiB,KACjB,mBAAoB,KACpB,cAAe,MAEnB7H,MAAO,CACHwY,SAAUtY,OACVuY,UAAWpX,SACXqX,OAAQrX,SACRsX,UAAW5X,OACXkI,KAAM/I,UAGd1F,EAAQoD,cAAgBA,GACxBA,GAAciL,aAAe,cAC7BrO,EAAAA,WAAkBmD,G,mCCxsFlB,OAAe0jB,EAAf,G,4LC6BIC,EAAa,0GACbC,EAAqB,uCACrBC,EAAqB,6EACrBC,EAAyB,iCACzBC,EAAYjnB,GAAS,YAAawO,EAAAA,EAAAA,IAAKxO,GAASA,EAAMknB,QAAUlnB,EAChEmnB,EAASvY,GAAK,KAAKwY,KAAKxY,GACxByY,EAAM,CAAClY,EAAMmY,EAAQC,KACrBpY,EAAO1J,OAAO0J,GACd,MAAOA,EAAKmY,OAASA,EACjBnY,EAAOoY,EAAQ,GAAGC,OAAOrY,EAAM,KAAO,IAAIqY,OAAOrY,GAErD,OAAOA,GAEPsY,EAAgB,CAACC,EAAMC,EAAcC,KACrC,IAAIC,EAAM,GACNC,EAAW3Y,GAAQkY,EAAIlY,EAAM,GAqBjC,OApBA0Y,EAAIE,KAAKL,EAAKM,eACdH,EAAIE,KAAK,KACTF,EAAIE,KAAKD,EAASJ,EAAKO,WAAa,IACpCJ,EAAIE,KAAK,KACTF,EAAIE,KAAKD,EAASJ,EAAKQ,YACjBP,GAAgBD,EAAKS,WAAaT,EAAKU,aAAeV,EAAKW,aAAeX,EAAKY,kBAAoB,IACrGT,EAAIE,KAAK,KACTF,EAAIE,KAAKD,EAASJ,EAAKS,aACvBN,EAAIE,KAAK,KACTF,EAAIE,KAAKD,EAASJ,EAAKU,eACvBP,EAAIE,KAAK,KACTF,EAAIE,KAAKD,EAASJ,EAAKW,eACnBX,EAAKY,oBACLT,EAAIE,KAAK,KACTF,EAAIE,KAAKV,EAAIK,EAAKY,kBAAmB,KAEpCV,GACDC,EAAIE,KAAK,MAGVF,EAAIU,KAAK,KAEhBC,EAAeC,IACf,IAAIC,EAAS,IAAIC,KAAK,GAAK,IAAIA,KAAK,GAAGC,oBAAsB,KACzDC,EAASJ,EAAUK,QAAQ,IAAK,IAAI5B,MAAM,KAC1CQ,EAAO,0BAA0BqB,KAAKF,EAAO,IAC7CG,EAAO,uCAAuCD,KAAKF,EAAO,IAI9D,GAHAH,EAAOO,YAAY3iB,OAAOohB,EAAK,KAC/BgB,EAAOQ,SAAS5iB,OAAOohB,EAAK,IAAM,GAClCgB,EAAOS,QAAQ7iB,OAAOohB,EAAK,KACvBjhB,MAAM2iB,QAAQJ,IAASA,EAAK1B,OAAQ,CACpCoB,EAAOW,SAAS/iB,OAAO0iB,EAAK,KAC5BN,EAAOY,WAAWhjB,OAAO0iB,EAAK,KAC9BN,EAAOa,WAAWjjB,OAAO0iB,EAAK,KAC9B,IAAIQ,GAAcR,EAAK,IAAM,IAAIS,MAAM,EAAG,GAC1CD,EAAanC,EAAImC,EAAY,GAAG,GAChCd,EAAOgB,gBAAgBpjB,OAAOkjB,IAElC,OAAOd,GAEPiB,EAAgBC,GAAO,qBAAqBxC,KAAKwC,GACjDC,EAAcD,IACd,IAAIE,EAAQF,EAAIG,QAAQ,KACxB,OAAID,GAAS,EACFF,EAAII,OAAO,EAAGF,GAElBF,GAEPK,EAAgB,CAACC,EAAUC,KAC3B,IAAIC,EACAC,EAAYR,EAAYK,GAAUhD,MAAM,KACxCoD,EAAgBH,EAAajD,MAAM,KACvCmD,EAAUE,MACV,MAAOD,EAAchD,OACjB8C,EAAOE,EAAcE,QACjB,OAASJ,EACTC,EAAUE,MAEVF,EAAUtC,KAAKqC,GAGvB,OAAOC,EAAU9B,KAAK,MAEtBkC,EAAQC,IACR,IAAIhC,EAAS,GACb,IAAK,IAAI1Z,KAAQ0b,EACbhC,EAAOX,KAAK/Y,EAAO,IAAM0b,EAAO1b,IAEpC,OAAO0Z,EAAOH,KAAK,MAEnBoC,EAAwB,SAASC,EAAiBC,GAClD,IAAIC,EACA9J,EAAU+J,UAAUzD,OAAS,QAAK,IAAWyD,UAAU,GAAKA,UAAU,GAAK,GAC3EC,EAAgBC,GAAWC,KAAKC,UAAUF,GAAU,SAASG,EAAKprB,GAClE,KAAMN,KAAK0rB,aAAgBzC,MACvB,OAAO3oB,EAGX,OADAA,EAAQynB,EAAc/nB,KAAK0rB,IACnBR,GACJ,KAAK,EACD,OAAO5qB,EAAMgqB,OAAO,EAAGhqB,EAAMsnB,OAAS,GAC1C,KAAK,EACL,KAAK,EACD,OAAOtnB,EACX,QACI,MAAMqrB,EAAAA,GAAAA,MAAa,aAG/BR,GAAUS,EAAAA,EAAAA,GAAO,CACbC,OAAO,EACPC,OAAQ,MACR5B,IAAK,GACLc,OAAQ,GACRO,QAAS,KACTQ,QAAS,GACTC,QAAS,KACVb,GACH,QAAUC,EAAsB9J,EAAQ2K,kBAAe,IAAWb,GAA+BA,EAAoBc,KAAK5K,EAAS6J,GACnI,IACIU,MAAOA,EACPG,QAASA,EACTD,QAASA,GACTZ,GAEAjB,IAAKA,EACL4B,OAAQA,GACRX,GAEAgB,MAAOA,EACPC,gBAAiBA,GACjB9K,EACJwK,GAAUA,GAAU,OAAOO,cAC3B,IAAIC,EAAQ,QAAUR,EAClBS,EAAWD,GAASH,EACpBnB,GAASY,EAAAA,EAAAA,GAAO,GAAIT,EAAQH,QAC5BwB,EAAWF,EAAQtB,EAASM,EAAcH,EAAQI,SAClDkB,GAAMH,GAASvB,EAAMC,GACrB0B,GAAeJ,GAAShF,EAO5B,OANImF,IACAvC,IAAQA,EAAIG,QAAQ,MAAQ,EAAI,IAAM,KAAOoC,GAE7CF,IACAC,EAASG,QAAU,QAEhB,CACHzC,IAAKA,EACLxa,KAAM8c,EACNhb,SAAU+a,EAAW,QAAU,OAC/BJ,MAAOI,GAAY,YACnBT,OAAQA,EACRD,MAAOA,EACPG,QAASA,EACTD,QAASA,EACTW,YAAaA,EACbE,QAAS,CACLC,KAAM,CAACvF,EAAwB,cAAcuB,QAEjDiE,UAAW,CACPV,gBAAiBA,KAIlBW,EAAc,CAAC7B,EAAiBC,EAAS7J,KAChD,IACI0L,iBAAkBA,EAClBC,WAAYA,EACZC,UAAWA,EACXC,QAASA,GACT7L,EACA8L,EAAI,IAAIC,EAAAA,GACRC,EAAcrC,EAAsBC,EAAiBC,EAAS7J,GAuClE,OAtCAiM,EAAAA,EAAAA,YAAiBD,GAAaE,QAAO,CAACC,EAAKC,KACvC,IAAIC,EAAmB,CACnBX,iBAAkBA,EAClBC,WAAYA,GAEZW,EAAQC,EAAoBJ,EAAKC,EAAYC,EAAkBL,IAE/DQ,MAAOA,EACPpe,KAAMA,EACNkX,MAAOA,GACPgH,GAEAG,QAASA,GACTH,EACJ,GAAIE,EACIA,EAAMlf,UAAYof,EAAAA,IAClBZ,EAAEa,OAAOH,QAEV,GAAIZ,EACHgB,SAAStH,GACTwG,EAAEe,QAAQvH,GAEVwG,EAAEa,OAAO,IAAItC,EAAAA,GAAAA,MAAa,eAE3B,GAAIoC,IAAYZ,EACdlD,EAAc8D,KACfA,EAAUxD,EAAc+C,EAAYpD,IAAK6D,IAE7ChB,EAAY7B,EAAiB,CACzBhB,IAAK6D,GACNzM,GAAS8M,KAAKhB,EAAEa,QAAQI,MAAKC,GAAYlB,EAAEe,QAAQze,EAAKoY,OAAOwG,UAC/D,CACH,IAAIC,EAAQL,SAAStH,GAAS,CAC1B4H,WAAY5H,QACZ,EACJwG,EAAEe,QAAQze,EAAM6e,OAGjBnB,EAAEqB,WAETC,EAAoBC,IACpB,IAAI/f,EAGIggB,EAFJC,EAAeF,EACf,YAAaA,IAEb/f,GAAW,QAAUggB,EAAoBD,EAAS/f,eAAY,IAAWggB,OAAoB,EAASA,EAAkBtuB,QAAUquB,EAAS/f,SAE/I,MAAOigB,EAAeA,EAAaC,YAAcD,EAAaE,kBAE1D,GADAngB,EAAUigB,EAAajgB,QACnBigB,EAAaE,oBAAsB,IAAMngB,EAAQyb,QAAQ,mBACzD,MAGR,OAAOzb,GAEPogB,EAAoB,CAACvB,EAAKC,EAAYJ,KACtC,IAAI2B,EAAWC,EAAYC,EAAYC,EACvC,GAAI,cAAgB1B,EAChB,OAAO,KAEX,IAAI9e,EAAU,gBACVygB,EAAW5B,EACX6B,EAAa,IACbC,EAAY,CACZC,eAAgBlC,GAEpB,GAAI,YAAcI,EAAY,CAC1B,IACI+B,OAAQA,EACRC,aAAcA,GACdjC,EACJ6B,EAAaG,EACb7gB,GAAU+gB,EAAAA,EAAAA,IAAoBlC,EAAKC,GACnC,IACI2B,EAAW7D,KAAKoE,MAAMF,GACxB,MAAOxgB,KAEb,IAAIyf,GAAY,QAAUM,EAAYI,SAAa,IAAWJ,OAAY,EAASA,EAAUY,QAAU,QAAUX,EAAaG,SAAa,IAAWH,OAAa,EAASA,EAAWpB,SAAW,QAAUqB,EAAaE,SAAa,IAAWF,OAAa,EAASA,EAAW,kBAAoB,QAAUC,EAAaC,SAAa,IAAWD,OAAa,EAASA,EAAW,iBACtX,GAAIT,EAAU,CACV/f,EAAU8f,EAAkBC,IAAa/f,EACzC2gB,EAAUO,aAAenB,EACrB,MAAQW,IACRA,EAAa,KAEjB,IAAIS,EAAanpB,OAAO+nB,EAASqB,MAC7B9B,SAAS6B,IAAeA,GAAc,MACtCT,EAAaS,GAGrB,OAAIT,GAAc,KAAO,IAAMA,GAC3BC,EAAUD,WAAaA,GAChB1D,EAAAA,EAAAA,GAAOqE,MAAMrhB,GAAU2gB,IAE3B,MAEP1B,EAAsB,CAACJ,EAAKC,EAAYC,EAAkBL,KAC1D,IAAIQ,EAAQkB,EAAkBvB,EAAKC,EAAYJ,GAC/C,GAAIQ,EACA,MAAO,CACHA,MAAOA,GAGf,KAAKoC,EAAAA,EAAAA,IAAczC,GACf,MAAO,CACH/d,KAAM+d,GAGd,IAAIntB,EAAQ,MAAOmtB,IAAQ1mB,MAAM2iB,QAAQ+D,EAAIL,KAAM+C,EAAAA,EAAAA,IAAS1C,EAAIL,IAAMgD,EAA2B3C,EAAKC,GAAc2C,EAAyB5C,EAAKC,GAElJ,OADA4C,EAAehwB,EAAOqtB,GACfrtB,GAEP8vB,EAA6BG,IAC7B,IAAIC,GAEApD,EAAG1d,GACH6gB,EACJ,OAAKE,EAAAA,EAAAA,IAAU/gB,GAKR,CACHA,KAAM,QAAU8gB,EAAgB9gB,EAAKghB,eAAY,IAAWF,EAAgBA,EAAgB9gB,EAC5Fqe,QAASre,EAAKihB,OACd/J,MAAOgK,SAASlhB,EAAKmhB,QAAS,KAPvB,CACH/C,MAAOmC,MAAM,qDASrBI,EAA2B5C,IAC3B,IAAIqD,EACJ,MAAO,CACHphB,KAAM,QAAUohB,EAAarD,EAAIntB,aAAU,IAAWwwB,EAAaA,EAAarD,EAChFM,QAASN,EAAI,mBACb7G,MAAOgK,SAASnD,EAAI,gBAAiB,MAGlCsD,EAAaC,EAAAA,EAAAA,QAAc,CAClCC,KAAK3wB,GACDN,KAAKkxB,OAAS5wB,GAElB6wB,UACI,OAAOnxB,KAAKkxB,UAGhBZ,EAAiB,SAASA,EAAe7C,GACzC,IAAInM,EAAU+J,UAAUzD,OAAS,QAAK,IAAWyD,UAAU,GAAKA,UAAU,GAAK,IAC/E+F,EAAAA,EAAAA,IAAK3D,GAAK,CAAC/B,EAAKprB,KACZ,GAAI,OAASA,GAAS,kBAAoBA,EAClC,YAAaA,IACbmtB,EAAI/B,GAAOprB,EAAMowB,SAErBJ,EAAe7C,EAAI/B,GAAMpK,QACtB,GAAI,kBAAoBhhB,EAAO,CAClC,IACI2sB,WAAYA,EACZD,iBAAkBA,GAClB1L,EACA+P,GAAapE,GAAc,WAAaA,EAAWvB,GAIvD,GAHI2F,GAAalK,EAAWO,KAAKpnB,KAC7BmtB,EAAI/B,GAAO,IAAI4F,EAAAA,EAAMhxB,KAErB,IAAU0sB,EACV,GAAI1sB,EAAMixB,MAAMnK,GAAqB,CACjC,IAAIY,EAAO,IAAIiB,KAAKriB,OAAO4qB,OAAOC,IAAM,GAAKD,OAAOE,GAAK,KACzDjE,EAAI/B,GAAO,IAAIzC,KAAKjB,EAAKmJ,UAAY,GAAKnJ,EAAKkB,oBAAsB,UAC9D7B,EAAmBK,KAAKpnB,KAC/BmtB,EAAI/B,GAAO,IAAIzC,KAAKH,EAAa2E,EAAI/B,IAAMyF,iBAM3DQ,EAAgB3J,GAAQ,YAAYF,OAAOC,EAAcC,GAAM,GAAM,GAAO,KAC5E4J,EAAkBtxB,GAAS,IAAIwnB,OAAOxnB,EAAM8oB,QAAQ,KAAM,MAAO,KAC1DyI,EAAoBC,GAAYA,aAAoBf,EAAae,EAASX,UAAYW,EAAS1I,QAAQ,MAAO,KACrH2I,EAAmBzxB,GACfA,aAAiB2oB,KACVlB,EAAcznB,GAAO,GAAO,GAEnCA,aAAiBgxB,EAAAA,EACVhxB,EAAM6wB,UAEbpqB,MAAM2iB,QAAQppB,GACP,IAAIwnB,OAAOxnB,EAAM0xB,KAAI/K,GAAQ8K,EAAiB9K,KAAO4B,KAAK,KAAM,KAEpEoJ,EAAiB3xB,GAExB2xB,EAAmB3xB,GACfA,aAAiB2oB,KACV0I,EAAcrxB,GAErBA,aAAiBgxB,EAAAA,EACV,QAAQxJ,OAAOxnB,EAAO,KAE7BA,aAAiBywB,EACVzwB,EAAM6wB,UAEb,kBAAoB7wB,EACbsxB,EAAgBtxB,GAEpByF,OAAOzF,GAEP4xB,EAAiB,CAAC5xB,EAAO4qB,KAChC,OAAQA,GACJ,KAAK,EACL,KAAK,EACD,OAAO+G,EAAiB3xB,GAC5B,KAAK,EACD,OAAOyxB,EAAiBzxB,GAC5B,QACI,MAAMqrB,EAAAA,GAAAA,MAAa,WAGpBwG,EAAe,CAACzG,EAAKR,KAC5B,IAAIgF,EAAAA,EAAAA,IAAcxE,GAAM,CACpB,IAAI0G,EAAQ,GAEZ,OADAhB,EAAAA,EAAAA,IAAK1F,GAAK,CAAC2G,EAAGC,IAAMF,EAAM/J,KAAK,GAAGP,OAAO+J,EAAkBQ,GAAI,KAAKvK,OAAOoK,EAAeI,EAAGpH,OACtFkH,EAAMvJ,OAEjB,OAAOqJ,EAAexG,EAAKR,IAEpBqH,EAAgB,CACvBxsB,OAAQzF,GAAS,GAAGwnB,OAAOxnB,GAC3BkyB,MAAOlyB,GAASmyB,KAAKC,MAAMpyB,GAC3BqyB,MAAOryB,GAASA,aAAiBywB,EAAazwB,EAAQ,IAAIywB,EAAW,GAAGjJ,OAAOxnB,EAAO,MACtFsyB,KAAMtyB,GAASA,aAAiBgxB,EAAAA,EAAQhxB,EAAQ,IAAIgxB,EAAAA,EAAMhxB,GAC1D2F,QAAS3F,KAAWA,EACpBuyB,OAAQvyB,GAASA,aAAiBywB,EAAazwB,EAAQ,IAAIywB,EAAWzwB,EAAQ,KAC9EwyB,QAASxyB,GAASA,aAAiBywB,EAAazwB,EAAQ,IAAIywB,EAAWzwB,EAAQ,MAExEyyB,EAAwB,CAACjkB,EAAMxO,KACtC,GAAI,OAASA,EACT,OAAO,KAEX,IAAI0yB,EAAYT,EAAczjB,GAC9B,IAAKkkB,EACD,MAAMrH,EAAAA,GAAAA,MAAa,QAAS7c,GAEhC,OAAOkkB,EAAU1yB,IAEV2yB,EAAiB,CAACC,EAAcC,KACvC,GAAKA,EAGL,OAAOD,EAAe,EAAIrB,EAAkBsB,EAAOtK,SAAUuK,EAAAA,EAAAA,IAAKD,EAAQ1L,GAAQ,GAAMoB,QAExFwK,EAAaC,IACb,IAAItK,EAAS,GACTuK,EAAc,GACdC,EAAc,GAsBlB,OArBApC,EAAAA,EAAAA,IAAKkC,GAAM,CAAC5H,EAAKprB,KACTyG,MAAM2iB,QAAQppB,IACd,GAAG+nB,KAAKoL,MAAMF,EAAajzB,IAE3B4vB,EAAAA,EAAAA,IAAc5vB,IACdkzB,EAAYnL,KAAK,GAAGP,OAAO4D,GAAK5D,OAAOuL,EAAW/yB,SAGtDizB,EAAY3L,QAAU4L,EAAY5L,UAClCoB,GAAU,IACNuK,EAAY3L,SACZoB,GAAU,WAAWlB,QAAOkK,EAAAA,EAAAA,IAAIuB,EAAa1B,GAAmBhJ,SAEhE2K,EAAY5L,SACR2L,EAAY3L,SACZoB,GAAU,KAEdA,GAAU,WAAWlB,QAAOkK,EAAAA,EAAAA,IAAIwB,EAAa3B,GAAmBhJ,SAEpEG,GAAU,KAEPA,GAEP9W,EAASohB,IACT,IAAItK,EAAS,GAEb,OADAoI,EAAAA,EAAAA,IAAKkC,GAAM,CAAC5H,EAAKprB,IAAU0oB,EAAOX,KAAK,GAAGP,OAAO4D,GAAK5D,OAAOuL,EAAW/yB,OACjE0oB,EAAOH,QAEd6K,EAAY,CAACC,EAAWC,EAAMC,KAC9B,IAAI7K,EAAS6K,EAAQD,EAAMD,EAAU7I,QAAS6I,IAC1C,IAAU3K,GAGd0K,EAAUC,EAAW3K,EAAQ6K,IAE7BC,EAAY,CAACC,EAAOH,EAAMC,KAAYzC,EAAAA,EAAAA,IAAK2C,GAAO,CAACC,EAAG9kB,IAAMwkB,EAAUxkB,EAAEsY,MAAM,KAAMoM,EAAMC,KAC1FI,EAAc,CAACC,EAAQf,KACvB,IAAIG,EAAO,GAgBX,OAfIY,IACA9C,EAAAA,EAAAA,IAAK7J,EAAU2M,IAAU,WACrBZ,EAAKzB,EAAkB7xB,OAAS,KAGpCmzB,IACA/B,EAAAA,EAAAA,IAAK7J,EAAU4L,IAAU,WACrB,IAAIgB,EAAOn0B,KAAKwnB,MAAM,KAClB2M,EAAKvM,OAAS,IAGlBuM,EAAKtJ,MACLyI,EAAKzB,EAAkBsC,EAAKtL,KAAK,OAAS,OAG3CmJ,EAAAA,EAAAA,IAAIsB,GAAM,CAACU,EAAG1B,IAAMA,IAAGzJ,QAE9BuL,EAAc,CAACF,EAAQf,KACvB,IAAIG,EAAO,GACX,GAAIY,GAAUf,EAiBV,OAhBIe,GACAJ,EAAUvM,EAAU2M,GAASZ,GAAM,CAACe,EAAM3I,EAAKyI,KAC3CE,EAAK3I,GAAO2I,EAAK3I,IAAQ,KACjByI,EAAKvM,QAAiByM,EAAK3I,MAGvCyH,GACAW,GAAUV,EAAAA,EAAAA,IAAK7L,EAAU4L,GAAS1L,GAAS6L,GAAM,CAACe,EAAM3I,EAAKyI,IACpDA,EAAKvM,OAKHyM,EAAK3I,GAAO2I,EAAK3I,IAAQ,IAJ5B2I,EAAK3I,GAAO2I,EAAK3I,IAAQ,GACzB2I,EAAK3I,GAAKrD,KAAKqD,IACR,KAKZxZ,EAAOohB,IAGXgB,EAAiB,CAACpB,EAAcgB,EAAQf,IAAWD,EAAe,EAAIe,EAAYC,EAAQf,GAAUiB,EAAYF,EAAQf,GACxHoB,GAA8B,CAACC,EAASC,KAASC,EAAAA,EAAAA,IAAa,WAAYF,GAASxC,EAAAA,EAAAA,IAAIyC,GAAQ,IAAI,CAACn0B,EAAOorB,KAAQgJ,EAAAA,EAAAA,IAAa,UAAWhJ,EAAKprB,KAAQuoB,KAAK,MAC7J8L,GAA+B,CAAC3J,EAAQ4J,KAC/C,IAAK5J,EACD,OAAOA,EAEX,IAAIhC,EAAS,GAIb,OAHAoI,EAAAA,EAAAA,IAAKpG,GAAQ,CAACqH,EAAGC,KACbtJ,EAAOqJ,GAAKH,EAAeI,EAAGsC,MAE3B5L,G,gCC5fP6L,GAA2B,EAC3BC,GAAmB,CAAC,WAAY,cAAe,aAAc,YAC7DC,GAAkB,MAClB,IAAI7J,EACA8J,EACA/H,EACAgI,EAAiCC,GAAM,CAACC,EAAMC,IAAQ,GAAGtN,OAAOqN,EAAM,KAAKrN,OAAOoN,EAAI,KAAKpN,OAAOsN,GAClGC,EAA4B,CAACH,EAAII,IAAY,CAACH,EAAMC,KACpD,IAAIjN,EAAM,CAAC+M,EAAI,KAWf,OAVIF,IACAG,GAAQ,IAAMA,EAAK9K,QAAQ,YAAc,WAAWvC,OAAOqN,EAAM,KAAOA,EACxEC,EAAMA,EAAI/I,eAEViJ,EACAnN,EAAIE,KAAK+M,EAAK,IAAKD,GAEnBhN,EAAIE,KAAK8M,EAAM,IAAKC,GAExBjN,EAAIE,KAAK,KACFF,EAAIU,KAAK,KAEhB0M,EAAa,CACb,IAAKN,EAA+B,MACpC,KAAMA,EAA+B,MACrC,IAAKA,EAA+B,MACpC,KAAMA,EAA+B,MACrC,IAAKA,EAA+B,MACpC,KAAMA,EAA+B,MACrCO,WAAYH,EAA0B,cACtCI,SAAUJ,EAA0B,aAEpCK,GAAe9J,EAAAA,EAAAA,GAAO,GAAI2J,EAAY,CACtCla,SAAUga,EAA0B,eAAe,GACnDM,YAAaN,EAA0B,mBAAmB,KAE1DO,GAAehK,EAAAA,EAAAA,GAAO,GAAI2J,EAAY,CACtCla,SAAUga,EAA0B,YACpCM,YAAaN,EAA0B,kBAEvCQ,EAAgBC,IAChB,IAAIC,EACJD,GAAWE,EAAAA,EAAAA,IAAyBF,GACpC,IAMIxmB,EANA4lB,EAAKY,EAAS,GACdG,EAAYH,EAAS,GACrBI,EAAYjJ,GAAcA,EAAWgJ,GACzC,GAAIC,IAAc5mB,EAAO4lB,EAAIJ,GAAiBqB,MAAKC,GAAYA,IAAa9mB,MAAU,WAAa4mB,EAC/F,MAAM,IAAIvK,EAAAA,GAAAA,MAAa,QAASuJ,EAAIe,EAAWC,GAGnD,IAAIX,EAAa,IAAMrK,EAAkB0K,EAAeF,EACpDpX,EAAYiX,EAAWL,EAAG7I,eAC9B,IAAK/N,EACD,MAAMqN,EAAAA,GAAAA,MAAa,QAASuJ,GAEhC,IAAI50B,EAAQw1B,EAAS,GAIrB,OAHI,QAAUC,EAAc9I,SAAe,IAAW8I,GAAeA,EAAYE,KAC7E31B,EAAQyyB,EAAsB9F,EAAWgJ,GAAY31B,IAElDge,EAAUuT,EAAkBoE,GAAY/D,EAAe5xB,EAAO4qB,KAErEmL,EAAeP,IACf,IACIQ,EACAC,EAFApO,EAAM,GAeV,OAZAiJ,EAAAA,EAAAA,IAAK0E,GAAW,SAAS1L,EAAOoM,GAC5B,GAAIzvB,MAAM2iB,QAAQ8M,GAAY,CAC1B,GAAIrO,EAAIP,OAAS,GAAK0O,IAAkBC,EACpC,MAAM,IAAI5K,EAAAA,GAAAA,MAAa,SAE3BxD,EAAIE,KAAK,IAAIP,OAAO2O,EAAYD,GAAY,MAC5CF,EAAgBC,EAChBA,EAAoB,WAEpBA,GAAoBG,EAAAA,EAAAA,IAAsB12B,MAAQ,MAAQ,QAG3DmoB,EAAIU,KAAK,IAAIf,OAAOwO,EAAe,OAE1CG,EAAcX,GACV/uB,MAAM2iB,QAAQoM,EAAS,IAChBO,EAAaP,IAEpBa,EAAAA,EAAAA,IAAiBb,GACV,CAACA,IACJ,IAAIZ,EAAKY,EAAS,GACdc,EAAOH,EAAYX,EAAS,IAChC,GAAI,MAAQZ,EACR,MAAO,QAAQpN,OAAO8O,EAAM,KAEhC,MAAMjL,EAAAA,GAAAA,MAAa,QAASuJ,IANzB,CAOJY,GAEAD,EAAcC,GAEzB,MAAO,CAACA,EAAUlB,EAASiC,EAAOC,KAC9B7J,EAAa4J,EACb7B,EAAiB,OAAS8B,QAAiB,IAAWA,EAAgBA,GAAgBC,EAAAA,EAAAA,KAASC,mBAC/F9L,EAAkB0J,EACX6B,EAAYX,KAhGL,GAmGlBmB,GAA0BC,IAC1B,IAGIC,EACAC,EACAC,EACAC,EANAC,EAAW,GACXC,EAAY,GACZC,EAAUP,EAAahD,OAKvBwD,EAAgBR,EAAatC,SAAWC,GACxC8C,EAAW,IAAMP,QAAS,IAAWC,EACrCO,EAAcpB,IACd,IAAK,IAAIqB,EAAI,EAAGA,EAAIrB,EAAU5O,OAAQiQ,IAAK,CACvC,IAAIC,EAAAA,EAAAA,IAAWtB,EAAUqB,IACrB,OAAO,EAEX,GAAI9wB,MAAM2iB,QAAQ8M,EAAUqB,KAAOD,EAAYpB,EAAUqB,IACrD,OAAO,EAGf,OAAO,GAEPE,EAAc,KACd,IAAI/O,EAAS,GAcb,GAbKsO,IACGC,EAAS3P,SACToB,EAAOgP,SAAWT,EAAS1O,KAAK,MAEhCuO,IACApO,EAAOiP,MAAQb,QAEf,IAAWC,IACXrO,EAAOkP,KAAOb,GAElBrO,EAAOmP,QAAUlF,EAAeyE,EAAeP,SAAY,EAC3DnO,EAAOoP,QAAU9D,EAAeoD,EAAeD,EAASN,SAAY,GAEpEK,EAAU5P,OAAQ,CAClB,IAAIkO,EAAW0B,EAAU5P,OAAS,EAAI4P,EAAU,GAAKA,EACjDvK,EAAa,OAASiK,QAAgB,IAAWA,OAAe,EAASA,EAAajK,WACtF6J,EAAgB,OAASI,QAAgB,IAAWA,OAAe,EAASA,EAAaJ,cAC7F9N,EAAOqP,QAAUtD,GAAgBe,EAAU4B,EAAezK,EAAY6J,GAY1E,OAVIQ,IACAtO,EAAOkP,KAAO,IAEdhB,EAAaoB,mBAAqBhB,KAC9B,IAAMI,EACN1O,EAAOuP,aAAe,WAEtBvP,EAAOwP,OAAS,QAGjBxP,GAEX,MAAO,CACHyP,SAAUC,IAEN,IADA,IAAIC,GAAe,EACVd,EAAI,EAAGA,EAAIa,EAAM9Q,OAAQiQ,IAC9B,GAAI,WAAaa,EAAMb,GAAGvoB,KAAM,CAC5BqpB,EAAcd,EACd,MAGR,KAAIc,EAAc,KAAMb,EAAAA,EAAAA,IAAWY,EAAMC,GAAalE,KAAK,IAA3D,CAGA,IAAImE,EAAWF,EAAM,EAAIC,GACpBC,GAAY,UAAYA,EAAStpB,OAGtCopB,EAAM,EAAIC,GAAeD,EAAMC,GAC/BD,EAAMC,GAAeC,KAEzBvP,KAAMa,GAAO6C,EAAY2K,EAAe,CACpCxN,IAAKA,EACLc,QAAQY,EAAAA,EAAAA,GAAOmM,IAAe,OAASb,QAAgB,IAAWA,OAAe,EAASA,EAAalM,SACxG,CACCiB,WAAYiL,EAAajL,WACzBE,MAAO+K,EAAa/K,MACpBC,gBAAiB8K,EAAa9K,gBAC9Bc,UAAWoK,EACXtK,iBAAkBkK,EAAalK,iBAC/BC,WAAYiK,EAAajK,WACzBE,QAASe,SAASmJ,KAEtBwB,UAAUpE,GACN,IAAIqE,EACJ,GAAInB,IACA,OAAO,EAEX,IAAK,IAAIE,EAAI,EAAGA,EAAIpD,EAAK7M,OAAQiQ,IAAK,CAClC,IAAIkB,EAAStE,EAAKoD,GAAG,GACjBmB,IAASvE,EAAKoD,GAAG,GACjBoB,OAAO,EACX,GAAI,kBAAoBF,EACpB,OAAO,EAEXE,EAAOpH,EAAkBkH,GACrBC,IACAC,GAAQ,SAEZH,EAAQA,GAAS,GACjBA,EAAMzQ,KAAK4Q,GAEf1B,EAAWuB,GAEf/O,MAAMmP,EAAWC,GACb,GAAIxB,IACA,OAAO,EAEXP,EAAQ8B,EACR7B,EAAQ8B,GAEZvV,OAAO4S,GACH,OAAImB,MAGC5wB,MAAM2iB,QAAQ8M,KACfA,EAAY,GAAGzM,MAAMmC,KAAKb,aAE1BuM,EAAYpB,KAGZgB,EAAU5P,QACV4P,EAAUnP,KAAK,YAEnBmP,EAAUnP,KAAKmO,MAEnBrD,OAAOiG,GACH,GAAIjC,IAAWW,EAAAA,EAAAA,IAAWsB,GACtB,OAAO,EAENryB,MAAM2iB,QAAQ0P,KACfA,EAAO,GAAGrP,MAAMmC,KAAKb,YAEzB8L,EAAUiC,GAEdxS,MAAO,IAAM0Q,GAAc,IAGnC+B,GAAAA,EAAAA,MAAsBpC,GACf,ICzQHpC,GAA2B,EAChB,MAAMyE,GACjBC,YAAYjY,GACRA,EAAUA,GAAW,GACrBthB,KAAKw5B,KAAOzzB,OAAOub,EAAQ4I,KAAKd,QAAQ,OAAQ,IAChDppB,KAAKy5B,YAAcnY,EAAQ2K,WAC3BjsB,KAAK05B,OAASpY,EAAQ6K,MACtBnsB,KAAK25B,SAAWrY,EAAQsT,SAAWC,GACnC70B,KAAK45B,iBAAmBtY,EAAQ8K,gBAChCpsB,KAAK65B,kBAAoBvY,EAAQ0L,iBACjChtB,KAAK85B,eAAiBxY,EAAQwV,cAElC/J,YAAY7C,EAAK4B,EAAQd,EAAQO,GAC7B,OAAOwB,EAAY/sB,KAAK40B,QAAS,CAC7B1K,IAAKA,EACL4B,OAAQA,EACRd,OAAQA,GAAU,GAClBO,QAASA,GACV,CACCU,WAAYjsB,KAAKy5B,YACjBtN,MAAOnsB,KAAK05B,OACZtN,gBAAiBpsB,KAAK45B,iBACtB5M,iBAAkBhtB,KAAK65B,oBAG3BjF,cACA,OAAO50B,KAAK25B,SAEZ1N,iBACA,OAAOjsB,KAAKy5B,YAEZvP,UACA,OAAOlqB,KAAKw5B,KAEZrN,YACA,OAAOnsB,KAAK05B,OAEZ5C,oBACA,OAAO92B,KAAK85B,gBCnBpB,IAAIC,GAAqB,uCACrBC,GAAgB,CAACtO,EAAKuO,KAAN,CAChB,CAACvO,GAAMuO,IAEPC,GAA6B,CAACjN,EAAYgN,KAC1C,IAAIjR,EAAS,GACb,IAAK,IAAI7P,KAAS8T,EACdjE,EAAO7P,GAAS8T,EAAW9T,GAE/B,IAAK,IAAIghB,KAAWF,EACZE,KAAWnR,EACPA,EAAOmR,KAAaF,EAAQE,IAC5BxO,EAAAA,GAAAA,IAAW,QAASwO,GAGxBnR,EAAOmR,GAAWF,EAAQE,GAGlC,OAAOnR,GAEPoR,GAAaC,GAAAA,EAAAA,QAAc,CAC3BpJ,KAAK3P,GACDthB,KAAKs6B,SAAShZ,GACdthB,KAAKu6B,mBAAqB,IAAIjB,GAAkBhY,GAChD,IAAIoK,EAAM1rB,KAAK0rB,MACXuB,EAAa3L,EAAQ2L,WACrBgN,EAAU3Y,EAAQ2Y,QACtB,GAAIA,EAAS,CACT,IAAIO,EAAkB,kBAAoBP,EACrCvO,IACDA,EAAM8O,EAAkBT,GAAqB55B,OAAOs6B,KAAKR,GACzDj6B,KAAK06B,oBAAsBhP,GAE3B8O,IACAP,EAAUD,GAActO,EAAKuO,IAEjChN,EAAaiN,GAA2BjN,EAAYgN,GAExDj6B,KAAK+1B,YAAc9I,GAAc,GAC7B,IAAMjtB,KAAK40B,UACX50B,KAAK26B,cAAgB,QAErB36B,KAAK26B,cAAgB,SAG7BC,mBAAoB,IAAM,CAAC,SAAU,qBACrCC,WAAWnP,EAAKoP,GACZ,IAAI9P,EAAS,GAKb,OAJI8P,IACA9P,EAAOoN,QAAU9D,EAAet0B,KAAK40B,UAAWkG,EAAa5G,OAAQ4G,EAAa3H,cAAW,EAC7FnI,EAAOmN,QAAUlF,EAAejzB,KAAK40B,UAAWkG,EAAa3H,cAAW,GAErEnzB,KAAKu6B,mBAAmBxN,YAAY/sB,KAAK+6B,UAAUrP,GAAM,MAAOV,IAE3EgQ,YAAYC,GACR,IAAIC,EACAhR,EACAgN,EAAe,CACfiE,QAAS,QACTlP,WAAYjsB,KAAKu6B,mBAAmBtO,WACpCmP,aAAcp7B,KAAKq7B,cACnBlP,MAAOnsB,KAAKu6B,mBAAmBpO,MAC/ByI,QAAS50B,KAAKu6B,mBAAmB3F,QACjCxI,gBAAiBpsB,KAAKu6B,mBAAmBX,iBACzC1F,OAAQ,OAAS+G,QAAe,IAAWA,OAAc,EAASA,EAAY/G,OAC9EoE,kBAAmB,OAAS2C,QAAe,IAAWA,OAAc,EAASA,EAAY3C,kBACzFtL,iBAAkBhtB,KAAKu6B,mBAAmBV,kBAC1C5M,WAAYjtB,KAAK+1B,aAMrB,GAJA7L,EAAM,QAAUgR,EAAwB,OAASD,QAAe,IAAWA,OAAc,EAASA,EAAYK,mBAAgB,IAAWJ,EAAwBA,EAAwBl7B,KAAKu6B,mBAAmBrQ,KAC7MuG,EAAAA,EAAAA,IAAUzwB,KAAKu6B,mBAAmBzD,iBAClCI,EAAaJ,cAAgB92B,KAAKu6B,mBAAmBzD,eAErD,OAASmE,QAAe,IAAWA,GAAeA,EAAYM,kBAAmB,CACjF,IAAIvQ,EAAS2J,GAA6B,OAASsG,QAAe,IAAWA,OAAc,EAASA,EAAYM,kBAAmBv7B,KAAK40B,WACpI,IAAM50B,KAAK40B,UACX1K,EAAMqK,GAA4BrK,EAAKc,GAEvCkM,EAAalM,OAASA,EAG9B,OAAOwQ,EAAAA,GAAAA,GAAMtR,EAAKgN,IAEtBuE,YAAYC,GACR17B,KAAK27B,cACL,IAAIvO,EAAI,IAAIC,EAAAA,GAEZ,OADAuO,EAAAA,EAAAA,IAAK57B,KAAKu6B,mBAAmBxN,YAAY/sB,KAAKu6B,mBAAmBrQ,IAAK,OAAQ,KAAMwR,IAASrN,MAAKwN,GAAkBzO,EAAEe,QAAQ0N,KAAmB9E,EAAAA,EAAAA,KAAS+E,qBAAuBD,EAAiBH,EAAQ17B,KAAK+7B,MAAMF,MAAkBzN,KAAKhB,EAAEa,QACvOb,EAAEqB,WAEbuN,YAAYtQ,EAAKgQ,GACb,IAAItO,EAAI,IAAIC,EAAAA,GAEZ,OADAuO,EAAAA,EAAAA,IAAK57B,KAAKu6B,mBAAmBxN,YAAY/sB,KAAK+6B,UAAUrP,GAAM1rB,KAAK26B,cAAe,KAAMe,IAASrN,MAAKwN,IAAkB9E,EAAAA,EAAAA,KAAS+E,qBAAuB1O,EAAEe,QAAQzC,EAAKgQ,GAAUtO,EAAEe,QAAQ0N,GAAkBH,EAAQhQ,KAAM0C,KAAKhB,EAAEa,QAC3Nb,EAAEqB,WAEbwN,YAAYvQ,GACR,IAAI0B,EAAI,IAAIC,EAAAA,GAEZ,OADAuO,EAAAA,EAAAA,IAAK57B,KAAKu6B,mBAAmBxN,YAAY/sB,KAAK+6B,UAAUrP,GAAM,WAAW2C,MAAK,IAAMjB,EAAEe,QAAQzC,KAAM0C,KAAKhB,EAAEa,QACpGb,EAAEqB,WAEbyN,YAAY57B,GACR,IAAI0oB,EAAS1oB,EACT2sB,EAAajtB,KAAK+1B,YAClBrK,EAAM1rB,KAAK0rB,OAAS1rB,KAAK06B,oBAC7B,GAAI3zB,MAAM2iB,QAAQgC,GAAM,CACpB1C,EAAS,GACT,IAAK,IAAI6O,EAAI,EAAGA,EAAInM,EAAI9D,OAAQiQ,IAAK,CACjC,IAAIsC,EAAUzO,EAAImM,GAClB7O,EAAOmR,GAAWpH,EAAsB9F,EAAWkN,GAAU75B,EAAM65B,UAEhElN,EAAWvB,KAClB1C,EAAS+J,EAAsB9F,EAAWvB,GAAMprB,IAEpD,OAAO0oB,GAEX+R,UAAUz6B,GACN,IAAIk0B,EAAUx0B,KAAKu6B,mBAAmBrQ,IAClCiS,EAAen8B,KAAKk8B,YAAY57B,GACpC,MAAO,GAAGwnB,OAAO0M,EAAS,KAAK1M,OAAOsU,mBAAmBjK,EAAagK,EAAcn8B,KAAK40B,YAAa,MAE1GA,UACI,OAAO50B,KAAKu6B,mBAAmB3F,UAEpC,SACH,O,uMCxIIyH,EAAwB,CAAC,OAAQ,QAAS,OAC1CC,EAA4B,CAAC,OAAQ,QAAS,MAAO,OAAQ,UAC7DC,EAAa,SAAS/qB,GACtB,MAAO,SAAWA,GAAY,aAAeA,GAE7CgrB,EAAmB,SAASruB,GAC5B,IAAIic,EACApB,EAAS,GACTyT,EAAgB,CAAC,OAAQ,QAAS,MAAO,OAAQ,SAAU,UAC3DxnB,EAAgB9G,EAAO1F,cAAgB0F,EAAO1F,aAAawM,cAC3DynB,EAAW,YAAcznB,EAAgB,QAAUA,EACvD,OAAIsnB,EAAWpuB,EAAOqD,WAAa,OAASyD,GACxC+T,EAAS,aAAe7a,EAAOqD,SAAW8qB,EAA4BD,EACtEjS,GAAQuS,EAAAA,EAAAA,IAAQD,EAAUD,GACtBrS,GAAS,GACTpB,EAASyT,EAAc1S,MAAM,EAAGK,GAChCpB,EAAOX,KAAKpT,GACL+T,GAEJA,IACAyH,EAAAA,EAAAA,IAAUxb,GACVlO,MAAM2iB,QAAQzU,GAAiBA,EAAgB,CAACA,QADpD,GAIX,EAAgB,WACZ,IAAI2nB,EAAoB,SAASzuB,EAAQ0uB,GACrC,IAAIC,EAAW3uB,EAAOoD,WAAapD,EAAO2uB,SAI1C,MAHI,WAAaD,IACbC,EAAW3uB,EAAO4uB,cAAgB5uB,EAAO6C,uBAAyB8rB,GAE/DA,GAEPE,EAA6B,SAAS/0B,EAAa40B,GACnD,IAAII,EACAC,EACAC,EAcAnV,EAbA8U,EAAWF,EAAkB58B,KAAM68B,GACvC,GAAI91B,MAAM2iB,QAAQzhB,KAAgBwoB,EAAAA,EAAAA,IAAUxoB,EAAY,MAAOwoB,EAAAA,EAAAA,IAAUxoB,EAAY,IAUjF,OATAi1B,EAAwB,CAACJ,EAAU,KAAM70B,EAAY,IACrDk1B,EAAsB,CAACL,EAAU,KAAM70B,EAAY,IAC/Cs0B,EAAWv8B,KAAKwR,YAAcwW,EAAO/f,EAAY,GAAI+f,EAAKS,WAAaT,EAAKU,aAAeV,EAAKW,aAAeX,EAAKY,kBAAoB,KACxIqU,EAAiB,IAAIhU,KAAKhhB,EAAY,GAAGm1B,WACrC,SAAWp9B,KAAKwR,UAChByrB,EAAexT,QAAQxhB,EAAY,GAAGugB,UAAY,GAEtD2U,EAAsB,CAACL,EAAU,IAAKG,IAEnC,CAACC,EAAuB,MAAOC,IAI1CE,EAA6B,SAASp1B,EAAa6K,EAAyB+pB,GAC5E,IAAIS,EACAC,EACAC,EACA9B,EAAS,SAAS+B,GAClB,OAAIC,EAAAA,EAAAA,IAAOD,GACA,CAACA,EAAUnV,cAAemV,EAAUlV,WAAYkV,EAAUjV,UAAWiV,EAAUhV,WAAYgV,EAAU/U,aAAc+U,EAAU9U,eAEjIqJ,EAAAA,EAAAA,KAAK,GAAKyL,GAAWjW,MAAM,MAAO,SAASlnB,EAAO8pB,GACrD,OAAO,IAAMA,EAAQxjB,OAAOtG,GAAS,EAAIsG,OAAOtG,MAL3C,CAOX2H,GACE60B,EAAWF,EAAkB58B,KAAM68B,GAMvC,OALI,iBAAmBA,EACnBW,EAAehB,EAAiBx8B,MAAM07B,EAAO9T,OAAS,GAC/C,aAAe5nB,KAAKwR,WAC3BgsB,EAAe,UAEXA,GACJ,IAAK,OACDF,EAAY,IAAIrU,KAAKyS,EAAO,GAAI,EAAG,GACnC6B,EAAU,IAAItU,KAAKyS,EAAO,GAAK,EAAG,EAAG,GACrC,MACJ,IAAK,QACD4B,EAAY,IAAIrU,KAAKyS,EAAO,GAAIA,EAAO,GAAI,GAC3C6B,EAAU,IAAItU,KAAKyS,EAAO,GAAIA,EAAO,GAAK,EAAG,GAC7C,MACJ,IAAK,UACD4B,EAAY,IAAIrU,KAAKyS,EAAO,GAAI,EAAIA,EAAO,GAAI,GAC/C6B,EAAU,IAAItU,KAAKyS,EAAO,GAAI,EAAIA,EAAO,GAAK,EAAG,GACjD,MACJ,IAAK,OACD4B,EAAY,IAAIrU,KAAKyS,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAC7D6B,EAAU,IAAItU,KAAKyS,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAK,GAChE,MACJ,IAAK,SACD4B,EAAY,IAAIrU,KAAKyS,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,IACxE6B,EAAU,IAAItU,KAAKyS,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAK,GAC3E,MACJ,IAAK,SACD4B,EAAY,IAAIrU,KAAKyS,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,IACnF6B,EAAU,IAAItU,KAAKyS,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAK,GACtF,MACJ,QACI4B,EAAY,IAAIrU,KAAKyS,EAAO,GAAIA,EAAO,GAAIA,EAAO,IAClD6B,EAAU,IAAItU,KAAKyS,EAAO,GAAIA,EAAO,GAAIA,EAAO,GAAK,GAE7D,OAAQ5oB,GACJ,IAAK,IACD,MAAO,CAACgqB,EAAU,IAAKQ,GAC3B,IAAK,KACD,MAAO,CAACR,EAAU,IAAKS,GAC3B,IAAK,IACD,MAAO,CAACT,EAAU,KAAMS,GAC5B,IAAK,KACD,MAAO,CAACT,EAAU,KAAMQ,GAC5B,IAAK,KACD,MAAO,CACH,CAACR,EAAU,IAAKQ,GAAY,KAAM,CAACR,EAAU,KAAMS,IAE3D,QACI,MAAO,CACH,CAACT,EAAU,KAAMQ,GAAY,MAAO,CAACR,EAAU,IAAKS,MAIhEI,EAA+B,SAAS11B,EAAa6K,EAAyB+pB,GAC9E,IAAIC,EAAWF,EAAkB58B,KAAM68B,GACnC5nB,EAAgBunB,EAAiBx8B,MACrC,GAAI,iBAAmB68B,GAAU5nB,IAAiBwb,EAAAA,EAAAA,IAAUxoB,GAAc,CACtE,IAAIyzB,GAAU,GAAKzzB,GAAauf,MAAM,KAClClnB,EAAQsG,OAAO80B,EAAOA,EAAO9T,OAAS,IACtC8U,EAAWznB,EAAcymB,EAAO9T,OAAS,GACzCgW,EAAmB,CAACd,EAAU,KAAMx8B,GACpC28B,EAAiB,CAACH,EAAU,IAAKx8B,EAAQo8B,GACzCmB,EAAY,CAACD,EAAkB,MAAOX,GAC1C,OAAOY,EAEX,MAAO,CAACf,EAAUhqB,GAA2B,IAAK7K,IAEtD,MAAO,CACH61B,iCAAkC,SAAS71B,EAAa6K,EAAyB+pB,GAC7E,IAAI1uB,EAASnO,KACT88B,EAAWF,EAAkBzuB,EAAQ0uB,GACrCkB,EAAyB5vB,EAAO6C,uBAAyB,WAAa6rB,EACtErrB,EAAWusB,GAA0B5vB,EAAOuE,QAAUvE,EAAOuE,OAAOlB,UAAYrD,EAAOqD,SACvFoS,EAAS,KACb,GAAK,iBAAmBiZ,GAAU,kBAAoBA,GAAW,OAAS50B,EAKnE,GAAI,WAAauJ,GAAcrD,EAAOuE,SAAUqrB,EAEhD,IAAI,YAAcjrB,EACrB,OAAOkqB,EAA2BvJ,MAAMtlB,EAAQ,CAAClG,EAAa40B,IAC3D,GAAIN,EAAW/qB,KAAaif,EAAAA,EAAAA,IAAUxoB,GACzC,OAAOo1B,EAA2B5J,MAAMtlB,EAAQkd,WAC7C,GAAI,WAAa7Z,EACpB,OAAOmsB,EAA6BlK,MAAMtlB,EAAQkd,WAC3C,WAAa7Z,IACpBoS,EAAS,CAACkZ,EAAUhqB,GAA2B,IAAK7K,SARpD2b,EAAS,CAACkZ,EAAUhqB,GAA2B,WAAY7K,QAL3D2b,EAAS,CAACkZ,EAAUhqB,GAA2B,IAAK,MAChD,WAAatB,IACboS,EAAS,CAACA,EAAQ,MAAQ9Q,EAA0B,KAAO,MAAO,CAACgqB,EAAUhqB,GAA2B,IAAK,MAarH,OAAO8Q,GAEX4Y,iBAAkBA,GApI1B,G,6ECKIwB,EAAoC,wBACpCC,EAA8B,2BAC9BC,EAA8B,2BAC9BC,EAAwB,qBACxBC,EAAgB,SAChBC,EAA0B,WAC1BC,EAAyB,UACzBC,EAAwB,uBACxBC,EAAwB,iBACxBC,EAA4B,6BAC5BC,EAA0B,CAC1BC,KAAM,SAASr+B,GACX,OAAOA,GAASA,EAAMgoB,eAE1BsW,MAAO,SAASt+B,GACZ,OAAOA,GAASA,EAAMioB,WAAa,GAEvCsW,IAAK,SAASv+B,GACV,OAAOA,GAASA,EAAMkoB,WAE1BsW,QAAS,SAASx+B,GACd,OAAOA,GAASmyB,KAAKC,MAAMpyB,EAAMioB,WAAa,GAAK,GAEvDwW,KAAM,SAASz+B,GACX,OAAOA,GAASA,EAAMmoB,YAE1BuW,OAAQ,SAAS1+B,GACb,OAAOA,GAASA,EAAMooB,cAE1BuW,OAAQ,SAAS3+B,GACb,OAAOA,GAASA,EAAMqoB,eAG1BuW,EAAsB,WACtB,IAAIxvB,EAAO2b,UAAU,GACjB/qB,EAAQN,KAAK+Q,mBAAmBrB,GACpC,KAAK+gB,EAAAA,EAAAA,IAAUnwB,GACX,OAAO,KACJ,GAAIi8B,EAAWv8B,KAAKwR,UAAW,CAClC,IAAI2tB,EAAuB9T,UAAU,GACrC,OAAOqT,EAAwBS,GAAsB7+B,GAClD,GAAI,WAAaN,KAAKwR,SAAU,CACnC,IAAIyD,EAAgBoW,UAAU,GAC9B,OAAOoH,KAAKC,MAAM9rB,OAAOtG,GAAS2U,GAAiBA,IAGvDmqB,EAAiB,SAASC,EAAWC,GACrC,OAAIxH,EAAAA,EAAAA,IAAWuH,KAAcvH,EAAAA,EAAAA,IAAWwH,IAChCD,EAAUE,kBAAoBD,EAAUC,iBACjCF,EAAUE,mBAAqBD,EAAUC,kBAAoBF,EAAUG,cAAgBF,EAAUE,YAGzGH,IAAcC,GAGzB,SAAS/C,EAAW/qB,GAChB,MAAO,SAAWA,GAAY,aAAeA,EAEjD,IAAIiuB,EAAe,SAASC,GACxBA,EAAWC,IAAI,GAAGC,YAAc,KAEhCC,EAAuB,SAASC,GAChCA,EAAOA,GAAQ,GAEf,IADA,IAAI9W,GAAS+W,EAAAA,EAAAA,IAA4BD,GAChCjI,EAAI,EAAGA,EAAIiI,EAAKlY,OAAQiQ,IACzBiI,GAAQA,EAAKjI,SAAM,IAAWiI,EAAKjI,GAAGmI,aACtChX,EAAO6O,GAAGmI,WAAaF,EAAKjI,GAAGmI,YAE/BF,GAAQA,EAAKjI,SAAM,IAAWiI,EAAKjI,GAAG5iB,gBACtC+T,EAAO6O,GAAG5iB,cAAgB6qB,EAAKjI,GAAG5iB,eAG1C,OAAO+T,GAEPiX,EAAc,SAAS3/B,EAAOghB,GAC9B,IAAI4e,EAAYC,EAAAA,EAAAA,OAAoB7/B,EAAOghB,EAAQpP,SAAW5R,GAASA,EAAM8/B,YAAc,GACvFC,EAAe,CACf//B,MAAOA,EACP4/B,UAAW5e,EAAQgf,iBAAmBhf,EAAQgf,iBAAiBJ,GAAaA,EAC5ErD,OAAQvb,EAAQub,QAAU,MAC1B5nB,cAAeqM,EAAQrM,eAE3B,OAAOqM,EAAQhQ,cAAgBgQ,EAAQhQ,cAAc4a,KAAK5K,EAAS+e,GAAgBA,EAAaH,WAEhGK,EAAiB,SAAS7a,EAAac,GACvC,IAAI1G,EAAgB4F,EAAY5F,eAAiB4F,EAAY8a,eAAiBha,EAAad,EAAYxF,YAAc,gBAAkBsG,EAAad,EAAYxF,aAChK,OAAO+f,EAAYva,EAAYplB,MAAO,CAClC4R,OAAQwT,EAAYvF,YACpBmgB,iBAAkB,SAASJ,GACvB,OAAOpgB,GAAgB5N,EAAAA,EAAAA,IAAO4N,EAAeogB,EAAWxa,EAAY8a,eAAiBN,GAEzF5uB,cAAeoU,EAAYpU,iBAG/BmvB,EAAoB,SAASC,GAC7B,IAAIC,EAAaD,EAAShxB,MAAQgxB,EAAShxB,OACvCkxB,EAAeD,GAAcA,EAAWC,aACxCC,EAAaD,GAAgBA,EAAa,GAC9C,OAAOC,GAAcF,EAAWE,IAEhCC,EAAwB,SAASA,EAAsBC,EAASC,GAChE,GAAIj6B,MAAM2iB,QAAQqX,IAAYh6B,MAAM2iB,QAAQsX,GAAU,CAClD,GAAID,EAAQnZ,SAAWoZ,EAAQpZ,OAC3B,OAAO,EAEP,IAAK,IAAIiQ,EAAI,EAAGA,EAAIkJ,EAAQnZ,OAAQiQ,IAChC,IAAKiJ,EAAsBC,EAAQlJ,GAAImJ,EAAQnJ,IAC3C,OAAO,EAInB,OAAO,EACJ,OAAIC,EAAAA,EAAAA,IAAWiJ,IAAYA,EAAQvB,aAAe,IAAK1H,EAAAA,EAAAA,IAAWkJ,IAAYA,EAAQxB,aAAe,EACjGuB,EAAQvB,cAAgBwB,EAAQxB,cAAeyB,EAAAA,EAAAA,IAAaF,EAAQ94B,gBAAiBg5B,EAAAA,EAAAA,IAAaD,EAAQ/4B,cAE1Gg5B,EAAAA,EAAAA,IAAaF,KAAYE,EAAAA,EAAAA,IAAaD,IAGrD,GACIE,iBAAkB,SAASR,GAEvB,GADAA,EAAWA,GAAY1gC,KAAKmhC,UACvBT,EAAL,CAGA,IAAIU,EAAcphC,KAAKqhC,gBAAgBjD,GACnCkD,EAAgBZ,EAASa,KAAK,IAAMH,GAAaI,OACjDC,EAAYzhC,KAAK0hC,gBAAgBC,UACjCC,EAAY5hC,KAAK0hC,gBAAgBE,YAChCN,EAAc1Z,SACf0Z,GAAgBO,EAAAA,EAAAA,GAAE,UAAUC,SAASV,GAAaW,SAASrB,IAE3De,IAAcG,EACdN,EAAcU,YAAY,aAAavyB,KAAKzP,KAAKiiC,kBAEjDX,EAAcQ,SAAS,eAG/BI,gBAAiB,SAASxB,EAAUhB,EAAYyC,GAC5C,IAAIC,EACJpiC,KAAKqiC,YAAcriC,KAAKqiC,WAAW3B,WAAW4B,SAC9CF,EAAmBpiC,KAAKuiC,OAAO,aAC3BH,IAAqB,SAAWA,EAAiB7tB,SAAW4tB,EAAeC,EAAiB7tB,UAC5F6tB,GAAmBxW,EAAAA,EAAAA,GAAO,CACtB/Q,SAAS,EACTjM,QAASwzB,EAAiB3yB,KAC1B6J,UAAWomB,GACZ0C,GACHpiC,KAAKqiC,WAAariC,KAAKwiC,kBAAiBX,EAAAA,EAAAA,GAAE,SAASE,SAASrC,GAAa+C,EAAAA,EAAWL,IAEpFpiC,KAAKqiC,WAAa,MAG1BK,2BAA2BhC,GACvB,IAAIiC,GAAUd,EAAAA,EAAAA,IAAEe,EAAAA,EAAAA,OAChB,OAAIC,EAAAA,EAAAA,IAAUnC,IAAYmC,EAAAA,EAAAA,IAAUF,GACzB,CACH5f,GAAI4f,EACJhgB,SAAU+d,EACV7d,UAAW,OAGZ,CACHE,GAAI2d,IAGZoC,cAAe,SAASpX,EAAKtO,EAAO+c,GAChC,IAAI/P,GAAS,EACb,QAAI,IAAWsB,GAAO3kB,MAAM2iB,QAAQtM,GAAQ,CACxC+c,EAAU9O,UAAUzD,QAAU,EAAI,MAAQuS,EAC1C,IAAK,IAAItC,EAAI,EAAGA,EAAIza,EAAMwK,OAAQiQ,IAAK,CACnC,IAAI5Q,GAAOwJ,EAAAA,EAAAA,IAAU0J,GAAW/c,EAAMya,GAAGsC,GAAW/c,EAAMya,GAC1D,IAAIkL,EAAAA,EAAAA,IAAarX,EAAKzE,GAAO,CACzBmD,EAAQyN,EACR,QAIZ,OAAOzN,GAEX4Y,eAAgB,SAASC,EAASC,GAC9B,IAAIC,EAAe,GACnBD,EAAYA,GAAa,MACzB,IAAK,IAAIrL,EAAI,EAAGA,EAAIoL,EAAQrb,OAAQiQ,IAAK,CACrC,IAAIuL,EACJ,GAAKH,EAAQpL,GAAb,CAGA,GAAI,KAAO,QAAUuL,EAAaH,EAAQpL,UAAO,IAAWuL,OAAa,EAASA,EAAWxb,SAAW,MAAQqb,EAAQpL,GAAG,GAAI,CAC3H,GAAI,QAAUqL,EACV,MAAO,CAAC,KACL,GAAI,OAASA,EAChB,SAGJC,EAAavb,QACbub,EAAa9a,KAAK6a,GAEtBC,EAAa9a,KAAK4a,EAAQpL,KAK9B,GAHI,IAAMsL,EAAavb,SACnBub,EAAeA,EAAa,IAE5BA,EAAavb,OACb,OAAOub,GAGfE,aAAc,SAASntB,EAASotB,GAE5B,IADA,IAAIC,EAA8B,EACzB1L,EAAI,EAAGA,EAAIyL,EAAY1b,OAAQiQ,IAChC3hB,EAAQotB,EAAYzL,KACpB0L,IAGR,OAAOrtB,EAAQ0R,QAAU1R,EAAQ0R,SAAW2b,GAEhDzC,sBAAuBA,EACvB0C,YAAa,SAAS51B,EAAU61B,EAAYC,GACnC91B,EAAS61B,KACV71B,EAAS61B,GAAc,WACnB,IAAIp8B,EAAarH,KAAK2jC,YACtB,OAAOt8B,EAAaA,EAAWo8B,GAAYhQ,MAAMpsB,EAAYgkB,WAAaqY,KAItFzD,YAAaA,EACb2D,yBAA0B,SAASz1B,EAAQ0uB,GACvC,MAAO,CACH3qB,OAAQ/D,EAAO+D,OACfouB,iBAAkBnyB,EAAOmyB,iBACzBhvB,cAAenD,EAAOmD,cACtBurB,OAAQA,EACRvpB,SAAUnF,EAAOmF,SACjB1B,UAAWzD,EAAOyD,YAG1BiyB,gBAAiB,SAAS11B,EAAQ7N,EAAOoP,EAAMo0B,GAC3C,OAAI31B,EAAO41B,sBAAmB,IAAW51B,EAAO41B,gBAAgBzjC,GACrD6N,EAAO41B,gBAAgBzjC,GACvB6N,EAAO6C,uBAAyBtB,GAAQ,UAAYo0B,EACpD31B,EAAO6C,sBAAsBtB,IAC7BvB,EAAOuE,QAAY,UAAYoxB,IAAY31B,EAAO+C,qBAAuB/C,EAAO6C,uBAGpF1Q,EAFI6N,EAAOuE,OAAO3B,mBAAmBzQ,IAIhD0jC,uBAAwB,SAASC,EAAczd,GAE3C,IADA,IAAIwC,EAAS,IACJ6O,EAAI,EAAGA,EAAIoM,EAAarc,OAAQiQ,IAAK,CAC1C,IAAInS,EAAcue,EAAapM,GAC/B7O,IAAW6O,EAAI,EAAI,KAAO,IAAM0I,EAAe7a,EAAac,GAEhE,OAAOwC,EAAS,KAEpBuX,eAAgBA,EAChBV,qBAAsBA,EACtBqE,oBAAqB,SAAS1yB,GAC1B,OAAQA,GACJ,IAAK,OACD,MAAO,YACX,IAAK,WACD,MAAO,uBAGnB2yB,+BAAgC,SAASh2B,EAAQi2B,GAC7C,IAAIpb,EAAS,GACTzX,EAAYpD,EAAOoD,WAAapD,EAAOmB,KACvC2F,EAAgBovB,EAAAA,iBAAiCl2B,GACrD,OAAI8G,IACAmc,EAAAA,EAAAA,IAAKnc,GAAgB,SAASmV,EAAOsS,GACjC1T,EAAOX,KAAK+b,EAAiB,CACzBtH,SAAUvrB,EACV0D,cAAeynB,EACfsD,WAAY5V,EAAQnV,EAAc2S,OAAS,GAC3CsX,EAAoBoF,KAAKn2B,EAAQuuB,OAElC1T,IAEPob,EACApb,EAAS,CAAC,CACN8T,SAAUvrB,EACVyuB,YAAY,KAGhBhX,EAAS,SAAStZ,GACd,IAAIsZ,EAAS7a,EAAO4C,mBAAmBrB,GAIvC,YAHI,IAAWsZ,GAAU,KAAOA,IAC5BA,EAAS,MAENA,GAEP7a,EAAOiF,gBACP4V,EAAS,CAAC,CACN8T,SAAU9T,EACVub,QAASp2B,EAAOiF,cAAckxB,KAAKn2B,OAIxC6a,IAEXwb,oBAAoBC,EAAiBC,EAAiBC,GAGlD,GAFAF,EAAkB5E,EAAqB4E,GACvCC,EAAkB7E,EAAqB6E,GACnC39B,MAAM2iB,QAAQ+a,IAAoB19B,MAAM2iB,QAAQgb,GAAkB,CAClE,GAAID,EAAgB7c,SAAW8c,EAAgB9c,OAC3C,OAAO,EAEP,IAAK,IAAIiQ,EAAI,EAAGA,EAAI4M,EAAgB7c,OAAQiQ,IACxC,IAAKuH,EAAeqF,EAAgB5M,GAAGiF,SAAU4H,EAAgB7M,GAAGiF,WAAa2H,EAAgB5M,GAAGmB,OAAS0L,EAAgB7M,GAAGmB,MAAQyL,EAAgB5M,GAAG5iB,gBAAkByvB,EAAgB7M,GAAG5iB,gBAAkB0vB,GAAoB1+B,QAAQw+B,EAAgB5M,GAAGmI,cAAgB/5B,QAAQy+B,EAAgB7M,GAAGmI,YACxS,OAAO,EAInB,OAAO,EAEP,QAASyE,IAAoBA,EAAgB7c,YAAc8c,IAAoBA,EAAgB9c,SAGvGgd,mBAAoB,SAASxnB,EAAOynB,EAAcC,EAAYC,GAQ1D,IAPA,IAEI9d,EACAjE,EAGA1W,EANA04B,EAAc5nB,EAAMwK,OACpBqd,GAAiB,EAGjBzF,EAAcuF,GAAoB,EAClC/b,EAAS,GAEJ6O,EAAI,EAAGA,GAAKmN,EAAanN,IAAK,CAC/BA,EAAImN,IACJ/d,EAAO7J,EAAM8nB,GAAGrN,GAChB7U,EAASiE,EAAKjE,SACd1W,EAAa,QAAU2a,EAAKke,IAAI,cAEpC,IAAIC,EAAQ,CACRhb,MAAOoV,EACPtwB,EAAG8T,EAASA,EAAOjE,OAAS+lB,GAAcx4B,EAAaurB,IAAMmN,GAAcK,EAAAA,EAAAA,GAAgBpe,EAAK,IAAIzZ,MAAQ,GAAK,EACjH2B,EAAG6T,EAASA,EAAO9D,KAAO4lB,GAAcjN,IAAMmN,GAAcK,EAAAA,EAAAA,GAAgBpe,EAAK,IAAIve,OAAS,GAAK,EACnG82B,YAAaA,GAEjB,IAAKsF,GAAcjN,EAAI,EAAG,CACtB,IAAIyN,EAAiBloB,EAAM8nB,GAAGrN,EAAI,GAAG7U,SACjCsiB,EAAepmB,IAAMkmB,EAAMj2B,IAC3Bi2B,EAAMj2B,EAAIm2B,EAAepmB,KAG7B2lB,IACAI,EAAiBJ,EAAaO,IAE7BH,GACDjc,EAAOX,KAAK+c,GAEhB5F,IAEJ,OAAOxW,GAEXuc,sBAAuB,WACnB,MAAO,CACHC,gCAAgC,EAChCC,OAAQ,SAASnsB,EAAWgI,GACxB,IAAIoe,GAAamC,EAAAA,EAAAA,GAAEvoB,GACnB,KAAImX,EAAAA,EAAAA,IAAUnP,EAAQhhB,QAAYghB,EAAQ5R,MAAQ4R,EAAQ5R,KAAKg2B,gBAAoBpkB,EAAQqkB,IAAIC,SAM3FnG,EAAaC,OANwF,CACrG,IAAImG,EAAWvkB,EAAQwkB,UAAUC,QAAQ,YACzCrG,EAAWoC,SAAS3D,GAAuB2D,SAAS9D,IACpD6D,EAAAA,EAAAA,GAAE,SAASC,SAASxgB,EAAQhhB,MAAQ29B,EAA8BC,GAA6B6D,SAASrC,GACxGmG,EAASG,QAAQ,QAAS1kB,EAAQhhB,MAAQulC,EAASI,SAAS,2BAA6BJ,EAASI,SAAS,yBAA0BvG,OAOrJD,aAAcA,EACdlD,WAAYA,EACZ2J,kBAAmB,SAASC,GACxB,IACI,GAAIA,EACA,MAAO,CACHC,eAAgBD,EAAeC,eAC/BC,aAAcF,EAAeE,cAGvC,MAAOC,IACT,MAAO,IAEXC,kBAAmB,SAASJ,EAAgBK,GACxC,IACQL,GAAkBA,EAAeI,mBACjCJ,EAAeI,kBAAkBC,EAAeJ,eAAgBI,EAAeH,cAErF,MAAOC,MAEbG,sBAAuB,SAASX,EAAWpF,GACvC,IAAIgG,EAAYhG,EAASiG,GAAG,UAC5BC,EAAAA,EAAAA,QAAqBlG,EAAU,SAC/B,IAAImG,EAA6Bf,EAAUvD,OAAO,iCAC9CpB,EAAUT,EAASf,IAAI,GAC3B,IAAK+G,GAAaG,GAA8BnG,EAASiG,GAAG,0BAA4BjG,EAASiG,GAAG,cAAe,CAC/G,IAAIG,EAASrG,EAAkBC,EAASqG,QAAQ,oBAChDnL,EAAAA,EAAAA,IAAKkL,GAAUA,EAAOE,mBAAmB3Y,MAAM,WAC3C8S,EAAQhO,cAIpBsN,kBAAmBA,EACnBwG,4BAA6B,SAASngC,EAASogC,GAC3C,IACIC,EADAC,EAAsBtgC,EAAQqvB,MAAKhoB,GAAUA,IAAWA,EAAOk5B,UAAYl5B,EAAO6D,QAAS,IAAU7D,EAAOuC,gBAEhH,IAAKy2B,EAAkBrgC,EAAQ8gB,OAAS,EAAG9gB,EAAQqgC,GAAkBA,IAAmB,CACpF,IAAIh5B,EAASrH,EAAQqgC,GACjB35B,EAAQ05B,GAAgBA,EAAaC,GACrCz2B,GAAiB02B,IAAuB,IAAUj5B,EAAOuC,cAC7D,IAAKvC,EAAOk5B,UAAYl5B,EAAO6D,OAAS,mBAAqBxE,GAASkD,EAClE,MAGR,OAAOy2B,GAEXG,uBAAwB,SAASC,EAAY7G,GACzC,GAAIA,GAAYA,EAAS9Y,OAAQ,CAC7B,IAAI4f,EAAQ9G,EAASqG,QAAQ,IAAMQ,EAAWE,2BAA2BC,SACzE,OAAOF,EAAMb,GAAGY,EAAWzB,UAAUpF,YAEzC,OAAO,GAEXiH,sBAAuB,SAASC,GAC5B,IAAIjjB,EAAmBijB,EAAKrF,OAAO9D,GAC/BoJ,EAAgBD,EAAKrF,OAAO/D,KAA2BF,EACvDwJ,EAAeF,EAAKrF,OAAO/D,KAA2BH,EAC1D,SAAI,IAAUuJ,EAAKrF,OAAOhE,KAA2BsJ,IAAiBC,IAG/DnjB,IAAqB2Z,GAEhCyJ,cAAe,SAASC,GACpB,OAAOA,EAAOC,kBAAoB,GAEtCC,sBAAsBC,GAClB,OAAIA,EAAQC,QACD,IAEJ,KAAOpoC,KAAK+nC,eAAcnF,EAAAA,EAAAA,S,sCCxcrCyF,GAAoC,aACpCC,GAAatX,EAAAA,EAAAA,QAAc,CAC3BuX,eAAgB,aAChBtX,KAAM,SAAS6U,GACX,IAAI8B,EAAO5nC,KACX4nC,EAAKY,iBAAmB,EACxBZ,EAAK9B,UAAYA,EACjB8B,EAAKa,SAAW,GAChBb,EAAKc,eAAiB,IACtBtX,EAAAA,EAAAA,IAAKpxB,KAAK2oC,iBAAmB,IAAK,SAASve,EAAO9a,GAC9C,IAAIs5B,EAAQhB,EAAKiB,cAAcv5B,IAAS,GACxCs5B,EAAME,QAAS,EAAMF,EAAMG,cAAe,EAC1CnB,EAAK5nC,OAAQgpC,EAAAA,EAAAA,YAAUJ,OAG/BK,KAAM,aACNN,cAAe,aACfE,cAAe,aACfK,cAAe,aACfC,YAAa,WACTnpC,KAAKwoC,oBAETY,UAAW,WACHppC,KAAKwoC,iBAAmB,IACxBxoC,KAAKwoC,mBACAxoC,KAAKwoC,kBACNxoC,KAAKuoC,mBAIjBhG,OAAQ,SAASjzB,GACb,IAAIw2B,EAAY9lC,KAAK8lC,UACjBuD,EAAcvD,EAAUwD,aAC5B,OAAI,IAAMje,UAAUzD,QAAUyhB,GACpB/5B,KAAQ+5B,IACVA,EAAY/5B,GAAQw2B,EAAUvD,OAAOjzB,IAElC+5B,EAAY/5B,IAEhBw2B,EAAUvD,OAAO9O,MAAMqS,EAAWza,YAE7Cke,cAAe,SAASj6B,EAAMhP,GAC1B,IAAIwlC,EAAY9lC,KAAK8lC,UACjBuD,EAAcvD,EAAUwD,aAI5B,OAHID,IACAA,EAAY/5B,GAAQhP,GAEjBwlC,EAAU0D,8BAA8Bl6B,EAAMhP,IAEzD2lC,SAAU,SAAS32B,GACf,IAAI+5B,EAAcrpC,KAAK8lC,UAAUwD,aACjC,OAAID,GACM/5B,KAAQ+5B,IACVA,EAAY/5B,GAAQm6B,EAAAA,EAAAA,OAA2Bn6B,IAE5C+5B,EAAY/5B,IAEhBm6B,EAAAA,EAAAA,OAA2Bn6B,IAEtCo6B,GAAI,WACA,OAAO1pC,KAAK8lC,UAAU4D,GAAGjW,MAAMzzB,KAAK8lC,UAAWza,YAEnDse,IAAK,WACD,OAAO3pC,KAAK8lC,UAAU6D,IAAIlW,MAAMzzB,KAAK8lC,UAAWza,YAEpDue,cAAe,SAASnV,GAChBA,EAAKnlB,QAAQtP,KAAKyoC,WAClBzoC,KAAK6pC,aAAapV,EAAKnlB,KAAMtP,KAAK0oC,eAAejU,EAAKnlB,OACtDmlB,EAAKqV,SAAU,IAGvBC,UAAW,SAASC,GAChB,OAAOhqC,KAAKyoC,SAASuB,IAEzBhE,QAAS,SAAS12B,EAAMhP,EAAO2pC,GAC3B,IAAIpN,EAASoN,EAAQtK,IAAI,GACrBuK,EAAS,SAAW56B,GAAQ,OAASA,EAAO,QAAU,GACtDutB,EAAOsN,aACPtN,EAAOsN,aAAaD,EAAS56B,EAAMhP,GAEnC2pC,EAAQG,KAAKF,EAAS56B,EAAMhP,IAGpCkiC,iBAAkB,WACd,OAAOxiC,KAAK8lC,UAAUtD,iBAAiB/O,MAAMzzB,KAAK8lC,UAAWza,YAEjEgf,cAAe,SAAS/6B,GACpB,OAAOtP,KAAK8lC,UAAUwE,aAAah7B,IAEvCu6B,aAAc,SAASG,EAAYjT,GAC/B,IAAIe,EAAAA,EAAAA,IAAWkS,GAAa,CACxB,IAAIO,EAASvqC,KAAK8lC,UAAU0E,cAAcR,EAAW1F,KAAKtkC,MAAO+2B,GACjE,OAAO,SAASuP,GACZiE,EAAO,CACHE,MAAOnE,KAIftmC,KAAKyoC,SAASuB,GAAchqC,KAAK8lC,UAAU4E,sBAAsBV,EAAYjT,GAC7E/2B,KAAK0oC,eAAesB,GAAcjT,GAG1C4T,cAAe,SAASX,EAAY1oB,GAChC,IAAIipB,EAASvqC,KAAKyoC,SAASuB,GAC3B,OAAOO,GAAUA,EAAOjpB,IAE5BspB,QAAS,WACL,IAAIhD,EAAO5nC,MACXoxB,EAAAA,EAAAA,IAAKwW,EAAKe,iBAAmB,IAAK,WAC9Bf,EAAK5nC,MAAM6qC,YAGnBxJ,gBAAiB,SAASyJ,GACtB,IAAIC,EAAgB/qC,KAAK8lC,UAAUkF,KACnC,MAAO,MAAQD,EAAchhB,MAAM,GAAGsC,eAAiBye,EAAY,IAAMA,EAAY,KAEzFrD,wBAAyB,WACrB,IAAIwD,EAAgBjrC,KAAK8lC,UAAUkF,OAAS3C,GAAoC,KAAO,YACvF,OAAOroC,KAAKqhC,gBAAgB4J,MAGhCC,GAAa5C,GACb6C,GAAiBD,GAAWE,QAAQ,CACpCrF,QAAS,SAASz2B,GACd,OAAOtP,KAAK8lC,UAAUuF,OAAO/7B,IAEjCg8B,SAAU,WACN,OAAOtrC,KAAK8lC,UAAUuF,UAG1BE,GAAOjD,GAAW8C,QAAQ,CAC1BI,SAAU,WACN,OAAOxrC,KAAK8lC,UAAU2F,WAE1BlD,eAAgB,WACZvoC,KAAKs6B,YACAt6B,KAAKwrC,YAAcxrC,KAAK0rC,gBACzB1rC,KAAK2rC,gBAAiB,EACtB3rC,KAAK8lC,UAAU8F,gBAAiB,GAEhC5rC,KAAK2rC,iBACL3rC,KAAK2rC,gBAAiB,EACtB3rC,KAAKylC,OAAOzlC,KAAK6rC,YAGzBC,YAAa,SAASC,EAAeC,GACjChsC,KAAK2rC,gBAAiB,EACtB3rC,KAAK8lC,UAAU8F,gBAAiBK,EAAAA,EAAAA,QAAgBjsC,KAAK8lC,UAAU8F,gBAAkBG,GACjF/rC,KAAK0rC,cAAgB1rC,KAAK0rC,eAAiBM,GAE/CE,YAAa,aACbC,YAAa,aACbC,eAAgB,WACZ,OAAOpsC,KAAK6rC,UAEhB5a,KAAM,SAAS6U,GACX9lC,KAAKs6B,SAASwL,GACd9lC,KAAKqsC,iBAAkBrD,EAAAA,EAAAA,cACvBhpC,KAAKssC,iBAAkBtD,EAAAA,EAAAA,eAE3B7H,QAAS,WACL,OAAOnhC,KAAKusC,WAEhBC,iBAAkB,WACd,IAAI9L,EAAW1gC,KAAKmhC,UACpB,IAAKT,EACD,OAAO,EAEX,IAAI+L,EAAYC,WAAWhM,EAASyE,IAAI,eAAiB,EACrDwH,EAAeD,WAAWhM,EAASyE,IAAI,kBAAoB,EAC3DyH,EAAelM,EAASf,IAAI,GAAGiN,aACnC,OAAOA,EAAeH,EAAYE,GAEtClL,UAAW,WACP,OAAO,GAEXoL,YAAa,SAASv9B,GAClB,OAAOtP,KAAK8lC,UAAUgH,aAAax9B,IAEvCm2B,OAAQ,SAASsH,EAASzrB,GACtB,IAAIof,EAAW1gC,KAAKusC,UAChB9K,EAAYzhC,KAAKyhC,aAChBf,GAAaqM,KAGlB/sC,KAAK0rC,eAAgB,EAChBhL,IACDA,EAAW1gC,KAAKusC,WAAY1K,EAAAA,EAAAA,GAAE,SAASE,SAASgL,GAChD/sC,KAAK6rC,SAAWkB,GAEpBrM,EAASsM,YAAY,aAAcvL,GAC/BA,IACAzhC,KAAK8lC,UAAUwD,aAAe,GAC9BtpC,KAAKksC,YAAY5qB,GACjBthB,KAAK8lC,UAAUwD,kBAAe,EAC9BtpC,KAAKqsC,gBAAgBY,KAAK3rB,MAGlC4rB,OAAQ,WACJltC,KAAKmtC,YAAa,EAClBntC,KAAKmsC,cACLnsC,KAAKssC,gBAAgBW,OACrBjtC,KAAKmtC,YAAa,GAEtBC,MAAO,WACHxG,EAAAA,EAAAA,QAAqB5mC,KAAKmhC,UAAW,YAGzCkM,GAA0B,IAC1BC,GAAiB,SAAS1F,EAAM2F,GAChC,IAAIC,EAAUD,EAAeC,QACzBC,EAAeF,EAAeE,aAC9BC,EAAkBH,EAAeG,iBAAmB,GACpDC,EAAYJ,EAAeI,WAAa,GACvCJ,EAAeG,kBACZD,GACAD,EAAQ1N,MAAM,SAAS8N,EAASC,GAC5B,IAAIC,GAAcnR,EAAAA,EAAAA,IAAQiR,EAAQt+B,KAAMm+B,GACpCM,GAAcpR,EAAAA,EAAAA,IAAQkR,EAAQv+B,KAAMm+B,GAOxC,OANIK,EAAc,IACdA,EAAcT,IAEdU,EAAc,IACdA,EAAcV,IAEXS,EAAcC,MAG7B3c,EAAAA,EAAAA,IAAKoc,GAAU,WACX,IAAIQ,EAAchuC,KAAKguC,YACnBC,EAAajuC,KAAKsP,KAClB4+B,EAAQluC,KAAKkuC,MACjBF,IAAe5c,EAAAA,EAAAA,IAAK4c,GAAc,SAAS1+B,EAAMR,GAC7C,GAAI4+B,EAAgBp+B,GAChB,MAAMqc,EAAAA,EAAAA,MAAa,QAASsiB,EAAY3+B,GACrC,KAAMR,GAAQA,EAAKq/B,YAAcr/B,EAAKq/B,WAAWjD,KAEpD,MADAp8B,EAAKq/B,WAAWjD,IACVvf,EAAAA,EAAAA,MAAa,QAASsiB,EAAY3+B,GAE5Co+B,EAAgBp+B,GAAQR,KAE5Bo/B,IAAS9c,EAAAA,EAAAA,IAAK8c,GAAQ,SAAS5+B,EAAMR,GACjC,GAAI6+B,EAAUr+B,GACV,MAAMqc,EAAAA,EAAAA,MAAa,QAASsiB,EAAY3+B,GACrC,KAAMR,GAAQA,EAAKq/B,YAAcr/B,EAAKq/B,WAAW5C,KACpD,MAAM5f,EAAAA,EAAAA,MAAa,QAASsiB,EAAY3+B,GAE5Cq+B,EAAUr+B,GAAQR,SAG1BsiB,EAAAA,EAAAA,IAAKoc,GAAU,WACX,IAAIY,EAAYpuC,KAAKouC,UACjBA,IACAA,EAAUJ,cAAe5c,EAAAA,EAAAA,IAAKgd,EAAUJ,aAAc,SAAS1+B,EAAM++B,GAC7DX,EAAgBp+B,KAChBo+B,EAAgBp+B,GAAQo+B,EAAgBp+B,GAAM87B,QAAQiD,OAG9DD,EAAUF,QAAS9c,EAAAA,EAAAA,IAAKgd,EAAUF,OAAQ,SAAS5+B,EAAM++B,GACjDV,EAAUr+B,KACVq+B,EAAUr+B,GAAQq+B,EAAUr+B,GAAM87B,QAAQiD,WAK1Dd,EAAeG,gBAAkBA,EACjCH,EAAeI,UAAYA,GAE/B,IAAIW,EAAoB,SAASC,GAC7B,IAAIC,EAAc,GAwBlB,OAvBApd,EAAAA,EAAAA,IAAKmd,GAAc,SAASj/B,EAAMm/B,GAC9B,IAAIC,EAAa,IAAID,EAAW7G,GAChC8G,EAAWp/B,KAAOA,EAChB,SAASs4B,EAAMt4B,EAAMo/B,GACnB,IAAIxF,EAAgBwF,EAAWxF,gBAC3BA,IACA9X,EAAAA,EAAAA,IAAK8X,GAAgB,SAAS9e,EAAOqZ,GACjC,IAAIiL,EAAWjL,GASX,MAAM9X,EAAAA,EAAAA,MAAa,QAASrc,EAAMm0B,GARlC,GAAKmE,EAAKnE,GAKN,MAAM9X,EAAAA,EAAAA,MAAa,QAAS8X,GAJ5BmE,EAAKnE,GAAc,WACf,OAAOiL,EAAWjL,GAAYhQ,MAAMib,EAAYrjB,eAPtE,CAiBAuc,EAAMt4B,EAAMo/B,GACdF,EAAYl/B,GAAQo/B,KAEjBF,GAEX5G,EAAK0C,aAAegE,EAAkBZ,GACtC9F,EAAKyD,OAASiD,EAAkBX,IAEhCgB,GAAwB,SAAS/G,EAAMnE,EAAYhP,GACnDA,EAAOA,GAAQ,GACXmT,EAAK0C,eACLlZ,EAAAA,EAAAA,IAAKwW,EAAK0C,cAAe,WACrBtqC,KAAKyjC,IAAezjC,KAAKyjC,GAAYhQ,MAAMzzB,KAAMy0B,MAGrDmT,EAAKyD,SACLja,EAAAA,EAAAA,IAAKwW,EAAKyD,QAAS,WACfrrC,KAAKyjC,IAAezjC,KAAKyjC,GAAYhQ,MAAMzzB,KAAMy0B,OAI7D,IACI+Y,QAAS,GACTjC,KAAMA,GACNJ,eAAgBA,GAChBD,WAAYA,GACZ0D,eAAgB,SAASt/B,EAAMu/B,GAE3B,IADA,IAAIrB,EAAUxtC,KAAKwtC,QACV3V,EAAI,EAAGA,EAAI2V,EAAQ5lB,OAAQiQ,IAChC,GAAI2V,EAAQ3V,GAAGvoB,OAASA,EACpB,OAGRu/B,EAAOv/B,KAAOA,EACdk+B,EAAQnlB,KAAKwmB,UACN7uC,KAAK0tC,uBACL1tC,KAAK2tC,WAEhBmB,qBAAsB,SAASC,GAC3B/uC,KAAKytC,aAAesB,GAExBC,iBAAkB,SAAS1/B,GACvBtP,KAAKwtC,SAAUpa,EAAAA,EAAAA,IAAKpzB,KAAKwtC,SAAU,SAASqB,GACxC,OAAOA,EAAOv/B,OAASA,YAEpBtP,KAAK0tC,uBACL1tC,KAAK2tC,WAEhBL,eAAgBA,GAChBqB,sBAAuBA,ICrW3B,IAAeM,EAAAA,EAAAA,GAAS,GAAIzB,GAAS0B,EAAe,CAChD1B,QAAS,K,qFCMT2B,GAA0B,uBAC1BC,GAAyB,sBAC7B,IACIC,kBAAmB,SAAS/tB,GACxB,IAAIguB,EACAhjC,EAAatM,KAAKuiC,OAAO,cACzBgN,EAAkBvvC,KAAKwvC,oBAAoBluB,EAAQnT,OAAO8B,UAAW3D,GACrEmjC,GAAa7jB,EAAAA,EAAAA,IAAO,EAAM,CAC1B2jB,gBAAiBA,GAClBjuB,GACCouB,EAAmBD,EAAWE,YAAYC,SAASR,IACnDS,EAAuB7vC,KAAK8vC,0BAA0BL,EAAYC,GAClEK,GAAQlO,EAAAA,EAAAA,GAAE,UAAUC,SAAS9hC,KAAKgwC,uBAAuB1uB,EAAQhS,OACjE2gC,EAAoB,QAAUX,EAAkBtvC,KAAK8lC,iBAAc,IAAWwJ,OAAkB,EAASA,EAAgBjF,cAAc,WACvI6F,GAAsB,OAASD,QAAqB,IAAWA,OAAoB,EAASA,EAAkBE,0BAA0BZ,KAAqBA,EAKjK,OAJAE,EAAWn2B,UAAYu2B,EACvBJ,EAAWW,UAAYL,EACvB/vC,KAAKqwC,iBAAiBZ,GACtBI,GAAsBH,GAAqBpuB,EAAQxU,iBAAoB,SAAWojC,EAAkC,YAAb,YAA0B5uB,EAAQquB,aAClII,GAEXC,uBAAwBM,EAAAA,GACxBd,oBAAqB,SAASv/B,EAAW3D,GAErC,OADAA,EAAaA,GAActM,KAAKuiC,OAAO,cAChCtyB,GAAa,WAAaA,EAAYA,GAAYsgC,EAAAA,EAAAA,GAAoBjkC,IAEjFwjC,0BAA2B,SAASxuB,EAASkvB,GACzC,IAAIX,EAAuB7vC,KAAKywC,uBAAuBnvB,EAAQquB,aAC3DO,EAAqB,SAAW5uB,EAAQiuB,gBAAkB,QAAU,OAKxE,OAJKM,EAAqBjoB,SACtBioB,GAAuBhO,EAAAA,EAAAA,GAAE,SAASC,SAASqN,KAE/CnvC,KAAKgmC,QAAQ,OAAQ,eAAgB6J,GAC9BA,EAAqB1K,IAAI,QAAS7jB,EAAQxU,kBAAoB0jC,EAA2BN,EAAqB,OAEzHO,uBAAwB,SAASC,GAC7B,OAAOA,GAASA,EAAMnP,KAAK,IAAM4N,KAErCwB,sBAAuB,SAASD,GAC5B,IAAIE,EAAsB5wC,KAAKywC,uBAAuBC,GACtD,OAAOE,GAAuBA,EAAoBC,YAEtDR,iBAAkB,SAAS/uB,GACvB,IAAIoe,EAAape,EAAQhI,UACrBw3B,EAAaxvB,EAAQ8uB,UACzB1Q,GAAcoR,GAAcpR,EAAWqR,OAAOD,IAElDE,kBAAmB,SAASC,GACxB,IAEIP,EAFA5pC,EAAU9G,KAAKkxC,aACfC,EAASnxC,KAAKoxC,oBAElB,GAAKD,GAAUrqC,EAAQ8gB,SAAWupB,EAAOvpB,OAGzC,IAAK,IAAIiQ,EAAI,EAAGA,EAAI/wB,EAAQ8gB,OAAQiQ,IAAK,CACrC6Y,EAAQS,EAAOjM,GAAGrN,GAClB73B,KAAKqxC,iBAAiBX,EAAO5pC,EAAQ+wB,GAAIoZ,GACzC,IAAIK,EAAaZ,EAAMhJ,SAASh4B,KAAK,WACjC4hC,GAAcA,EAAWC,QACzBD,EAAWC,MAAMb,EAAMtmB,SAASjc,OAASrH,EAAQ+wB,MAI7DwZ,iBAAkB,SAASX,EAAOviC,EAAQ8iC,GACtC,IAAK9iC,EAAOk5B,QACR,OAAOrnC,KAAKqvC,kBAAkB,CAC1B//B,KAAM2hC,EACNtB,YAAae,EACbviC,OAAQA,EACRrB,gBAAiB9M,KAAKuiC,OAAO,uB,WCtBzCiP,GAAyB,mBACzBC,GAA6B,uBAC7BC,GAAoB,cACpBC,GAAgB,UAChBC,GAAc,QACdC,GAAoB,cACpBC,GAAsB,gBACtBC,GAAY,SACZC,GAAkB,eAClBC,GAAmB,uBACnBC,GAAmB,aACnBC,GAAkB,eAClBC,GAA+B,yBAC/BC,GAAuB,WACvBC,GAAoB,oBACpBC,GAAgC,wBAChCC,GAAwB,CACxB/M,OAAQ,SAASnkB,GACbA,EAAQhI,UAAUy3B,OAAOzvB,EAAQmxB,WAGrCC,GAAuB,SAAS9K,EAAM+K,GACtC,IAAIC,EACAC,EACAC,EAEJ,SAASC,EAAkB/mB,GACvB,OAAOgnB,YAAY,WACfJ,EAAcC,EAAqB,OACnC7mB,GAER4a,EAAAA,EAAAA,GAAgB+L,EAAQ,sBAAuB,WAAY,SAASrM,GAChE2M,aAAaH,GACT,eAAiBxM,EAAEx3B,MACnB8jC,EAActM,EAAEzJ,OAChBgW,EAAqBvM,EAAE4M,cACvBJ,EAAYC,EAAkB,MAE9BD,EAAYC,OAGpBnM,EAAAA,EAAAA,GAAgB+L,EAAQ,CAACQ,GAAAA,EAAgBC,GAAAA,EAAeC,GAAAA,EAAAA,MAAoBxqB,KAAK,KAAM,UAAW,CAC9F9D,UAAW6iB,EAAK0L,kBACjB1L,EAAKiC,cAAc,SAASvD,GAC3B,IAAImE,EAAQnE,EAAEmE,MACVmI,IACAnI,EAAM5N,OAAS+V,EACfnI,EAAMyI,cAAgBL,IAErBhR,EAAAA,EAAAA,GAAE4I,EAAM5N,QAAQkK,QAAQ,KAAKnf,SAC9B0e,EAAEiN,SAAW3L,EAAK4L,YAAY/I,EAAMyI,eAChC5M,EAAEiN,UAAY,IACdjN,EAAEmN,YAAaC,EAAAA,GAAAA,IAAiB7R,EAAAA,EAAAA,GAAE4I,EAAMyI,gBACxC5M,EAAEx/B,QAAU8gC,EAAKsJ,aACbzG,EAAM37B,OAASukC,GAAAA,EAAAA,KACfzL,EAAK+L,gBAAgBrN,GACdmE,EAAM37B,OAASqkC,GAAAA,EACtBvL,EAAKgM,UAAUtN,GAEfsB,EAAKiM,aAAavN,UAMlCwN,GAAgB,SAAStmC,GACzB,MAAI,SAAWA,EACJ,IAEJumC,EAAAA,EAAAA,IAAUvmC,GAASA,EAAQ,KAAOA,GAEzCwmC,GAAe,SAASC,EAAM9lC,EAAQX,GACtCymC,EAAKC,MAAM1mC,MAAQymC,EAAKC,MAAMl6B,SAAW,SAAW7L,EAAOX,MAAQ,GAAKA,GAExE2mC,GAAiB,SAAShT,EAASiT,GACnC,GAAKjT,GAAYiT,EAAjB,CAGA,IAEIvc,EAFAwc,EAAgBlT,EAAQmT,WACxBC,EAAgBH,EAAWE,WAE/B,IAAKzc,EAAI,EAAGA,EAAIwc,EAAczsB,OAAQiQ,IAAK,CACvC,IAAIvoB,EAAO+kC,EAAcxc,GAAG2c,SACvBJ,EAAWK,aAAanlC,IACzB6xB,EAAQuT,gBAAgBplC,GAGhC,IAAKuoB,EAAI,EAAGA,EAAI0c,EAAc3sB,OAAQiQ,IAClCsJ,EAAQgJ,aAAaoK,EAAc1c,GAAG2c,SAAUD,EAAc1c,GAAG8c,aAG9DC,GAAcpH,GAAAA,KAAAA,QAAqBqH,IAAkBzJ,QAAQ,CACpE0J,yBAA0B,WACtB,IAAIC,EAAmB/0C,KAAKuiC,OAAO,aAC/ByS,EAAqBh1C,KAAKuiC,OAAO,uBACjCjhB,GAAUsK,EAAAA,EAAAA,GAAO,GAAImpB,EAAkB,CACvCp0B,UAAW,OACXs0B,eAAe,EACfC,aAAa,IAYjB,YAVI,IAAWF,IACXA,GAAqB,GAErB,SAAWA,UACJ1zB,EAAQyD,iBACRzD,EAAQ6zB,wBAEf7zB,EAAQyD,YAAciwB,EACtB1zB,EAAQ6zB,uBAAyBH,GAE9B1zB,GAEX8zB,YAAa,SAAS1E,EAAOjB,GACrBA,EAAW3L,SACX9jC,KAAKq1C,cAAc3E,EAAOjB,IAGlC6F,YAAa,SAASh0B,GAClB,IAAInT,EAASmT,EAAQnT,OACjB8B,EAAY9B,EAAO8B,YAAasgC,EAAAA,EAAAA,GAAoBvwC,KAAKuiC,OAAO,eAChE0R,EAAOsB,GAAAA,WAAAA,cAAyB,MACpCtB,EAAKC,MAAMsB,UAAYvlC,EACvB,IAAIygC,GAAQ7O,EAAAA,EAAAA,GAAEoS,GAuBd,MAtBI,SAAW3yB,EAAQwiB,SAAW31B,EAAOsnC,WAAatnC,EAAOW,MACrD9O,KAAK8lC,UAAUvD,OAAO,sBACtBviC,KAAKgmC,QAAQ,cAAe73B,EAAOsnC,SAAU/E,GAGjDviC,EAAOiB,UACPshC,EAAM5O,SAAS3zB,EAAOiB,UAEtB,WAAajB,EAAOk5B,UACpBqJ,EAAM5O,SAAS3zB,EAAOiB,UACtBshC,EAAM5O,SAAS9hC,KAAKqhC,gBAAgBqQ,MAEpCvjC,EAAOunC,QAAU,EACjBhF,EAAMtG,KAAK,UAAWj8B,EAAOunC,UACrBvnC,EAAOsE,QAAU,SAAWtE,EAAOwnC,cAAgB31C,KAAKuiC,OAAO,sBACnEp0B,EAAOX,OAASW,EAAOwE,YACvBshC,EAAKC,MAAMvhC,SAAWmhC,GAAc3lC,EAAOwE,UAAYxE,EAAOX,QAE9DW,EAAOX,OACPwmC,GAAaC,EAAM9lC,EAAQ2lC,GAAc3lC,EAAOX,SAGjDkjC,GAEXkF,WAAY,SAASC,EAAWC,GAC5BA,EAAUA,GAAW,KACrB,IAAIpV,GAAWmB,EAAAA,EAAAA,GAAE,IAAI/Z,OAAOguB,EAAS,MAAMhU,SAASiQ,IAEpD,OADA/xC,KAAKgmC,QAAQ,OAAQ,MAAOtF,GACrBA,GAEXqV,UAAW,SAASpQ,GAChB,OAAOA,GAAOA,EAAIqQ,UAAY,IAAM,GAExCC,aAAc,SAASnvC,EAASovC,GAC5B,IAAItO,EAAO5nC,KACP2yC,GAAS9Q,EAAAA,EAAAA,GAAE,WAAWC,SAAS8F,EAAKvG,gBAAgBuQ,KAAc9P,SAAS8F,EAAKvG,gBAAgBwQ,KAWpG,GAVI/qC,IAAYovC,GACZvD,EAAO5B,OAAOnJ,EAAKuO,gBAAgBrvC,IAC/BqhC,EAAAA,EAAAA,QACAwK,EAAO5B,QAAOlP,EAAAA,EAAAA,GAAE,WAAWkP,OAAO,SAEtCnJ,EAAK5B,QAAQ,OAAQ,eAAgB2M,IAErC/K,EAAK5B,QAAQ,UAAU,EAAM2M,GAEjC3yC,KAAKgmC,QAAQ,OAAQ,gBAAgBnE,EAAAA,EAAAA,GAAE,WAAWE,SAAS4Q,IACvDuD,EACA,OAAOvD,EAEPxK,EAAAA,EAAAA,SACAvB,EAAAA,EAAAA,GAAgB+L,EAAQ,YAAa,MAAO,SAASrM,GAC7CA,EAAE8P,SACF9P,EAAE+P,oBAIVzO,EAAKrF,OAAO,oBACZqE,EAAAA,EAAAA,GAAgB+L,EAAQ,YAAa,eAAgB3yC,KAAK6pC,cAAc,SAASpV,GAC7E,IAAI6R,EAAI7R,EAAKgW,MACT/J,GAAWmB,EAAAA,EAAAA,GAAEyE,EAAEzJ,QACf6T,GAAQ7O,EAAAA,EAAAA,GAAEyE,EAAE4M,eACZoD,EAAO5F,EAAMhJ,SACb6O,EAAYD,EAAK1G,SAAS,eAC1B4G,EAAcF,EAAK1G,SAAS,iBAC5B6G,EAAaH,EAAK1G,SAASoC,IAC3B0E,EAAoBJ,EAAK1G,SAASqC,IAClC0E,EAAcL,EAAK1G,SAAShI,EAAKvG,gBAAgB6Q,KACjD0E,EAAiBhP,EAAKiP,mBAAmBC,oBACzCxF,EAAagF,EAAK5mC,KAAK,WACvB8vB,EAAckR,EAAMtmB,QACpB2sB,EAAczF,GAAcA,EAAWC,OAASD,EAAWC,MAAM/R,GACjErxB,EAAS4oC,EAAcA,EAAY5oC,OAASyoC,EAAepX,GAC/D,IAAKkX,IAAsBC,KAAiBJ,GAAaA,GAAapoC,IAAWA,EAAOkD,iBAAmBmlC,GAAeA,GAAeroC,IAAWA,EAAOoE,uBAAyBkkC,GAAcA,GAActoC,SAAW,IAAWA,EAAOmE,aAAenE,EAAOiE,oBAAqB,CAChRsuB,EAAShxB,KAAK4iC,MACd5R,EAASsW,WAAW,SACpBtW,EAAShxB,KAAK4iC,IAAmB,IAErC,IAAI2E,EAAavW,EAAS,GAAGwW,YAAcxW,EAAS,GAAGyW,YACnDF,EAAa,KAAMxmB,EAAAA,EAAAA,IAAUiQ,EAAS0J,KAAK,YAC3C1J,EAAS0J,KAAK,QAAS1J,EAASjxB,QAChCixB,EAAShxB,KAAK4iC,IAAmB,SAKjD,IAAI8E,EAAa,SAAS3M,GACtB,IAAIiG,GAAQ7O,EAAAA,EAAAA,GAAE4I,EAAMyI,eAChBmE,GAAoBxV,EAAAA,EAAAA,GAAE4I,EAAM5N,QAAQkK,QAAQ,IAAMwL,IAClD+D,EAAO5F,EAAMhJ,SACb4J,EAAagF,EAAK5mC,KAAK,WACvB4R,EAAUgwB,GAAcA,EAAWC,OAASD,EAAWC,MAAMb,EAAMtmB,SACvE,GAAKsmB,EAAM3J,QAAQ,SAASJ,GAAG8D,EAAM6M,gBAArC,CAGA,IAAIC,GAAgB3rB,EAAAA,EAAAA,GAAO,GAAItK,EAAS,CACpCk2B,aAAa9D,EAAAA,GAAAA,GAAiBhD,GAC9BjG,MAAOA,EACPgN,UAAWhN,EAAM37B,OAGrB,GADAyoC,EAAchE,SAAW3L,EAAK4L,YAAY8C,GACtCe,EAAkBzvB,OAAQ,CAC1B,IAAI8vB,EAAkBL,EAAkB3nC,KAAK,gBACzCgoC,EAAgBvpC,SAChBopC,EAAcppC,OAASupC,EAAgBvpC,OACvCopC,EAAc/X,YAAcoI,EAAKiP,mBAAmBc,gBAAgBJ,EAAcppC,OAAOic,QAGjG,OAAOmtB,IAmBX,OAjBA3Q,EAAAA,EAAAA,GAAgB+L,EAAQ,YAAa,gBAAiB,SAASrM,GAC3D,IAAIhlB,EAAU81B,EAAW9Q,GACzBhlB,GAAWsmB,EAAK+C,cAAc,qBAAsBrpB,MAExDslB,EAAAA,EAAAA,GAAgB+L,EAAQ,WAAY,gBAAiB,SAASrM,GAC1D,IAAIhlB,EAAU81B,EAAW9Q,GACzBhlB,GAAWsmB,EAAK+C,cAAc,qBAAsBrpB,MAExDslB,EAAAA,EAAAA,GAAgB+L,EAAQQ,GAAAA,EAAgB,gBAAiB,SAAS7M,GAC9D,IAAIhlB,EAAU81B,EAAW9Q,GACzBhlB,GAAWsmB,EAAK+C,cAAc,cAAerpB,MAEjDslB,EAAAA,EAAAA,GAAgB+L,EAAQS,GAAAA,EAAe,gBAAiB,SAAS9M,GAC7D,IAAIhlB,EAAU81B,EAAW9Q,GACzBhlB,GAAWsmB,EAAK+C,cAAc,iBAAkBrpB,MAEpDoxB,GAAqB9K,EAAM+K,GACpBA,GAEXW,eAAgBhD,EAAAA,GAChBqD,gBAAiBrD,EAAAA,GACjBsD,UAAWtD,EAAAA,GACXuD,aAAcvD,EAAAA,GACd6F,gBAAiB,SAASrvC,GAEtB,IADA,IAAI8wC,GAAkB/V,EAAAA,EAAAA,GAAE,cACfhK,EAAI,EAAGA,EAAI/wB,EAAQ8gB,OAAQiQ,IAEhC,IADA,IAAI6d,EAAU5uC,EAAQ+wB,GAAG6d,SAAW,EAC3BmC,EAAI,EAAGA,EAAInC,EAASmC,IACzBD,EAAgB7G,OAAO/wC,KAAK83C,WAAWhxC,EAAQ+wB,KAGvD,OAAO+f,GAEXE,WAAY,SAAS3pC,GACjB,IAAIX,EAAQW,EAAOwnC,cAAgBxnC,EAAOX,MACtC,mBAAqBA,IACrBA,EAAQ6kC,IAEZ,IAAI0F,GAAMlW,EAAAA,EAAAA,GAAE,SAEZ,OADAmW,EAAAA,GAAAA,IAASD,EAAKvqC,GACPuqC,GAEXE,uBAAwB,SAASphC,GAC7B,IAAIqhC,EAAmBl4C,KAAKm4C,kBACxBC,EAAgBF,EAAiBt0B,QAAOpU,IAAaA,EAASqc,QAC9DwsB,EAAiBH,EAAiBt0B,QAAOpU,GAAYA,EAASqc,QAClE7rB,KAAKm4C,kBAAoB,GACzBn4C,KAAKs4C,4BAA4BF,GAAe,EAAOvhC,GACvD7W,KAAKu4C,iCAAiCF,IAE1CE,iCAAkC,SAASC,GACvC,IAAI5Q,EAAO5nC,KACPw4C,EAAU5wB,SACVgb,EAAAA,EAAAA,MAAYoQ,YAAY,WACpBpL,EAAK0Q,4BAA4BE,GAAW,OAIxDF,4BAA6B,SAASE,EAAWC,EAAS5hC,GACtD,IAAImR,EAAO,IAAIiB,KACf,MAAOuvB,EAAU5wB,OAAQ,CACrB,IAAI8wB,EAAqBF,EAAU1tB,QAC/BxJ,EAAUo3B,EAAmBp3B,QAC7Bq3B,EAAMpD,GAAAA,WAAAA,cAOV,GANKkD,KAAW5W,EAAAA,EAAAA,GAAEvgB,EAAQhI,WAAWytB,QAAQ4R,GAAK/wB,SAC1C/Q,IACAyK,EAAQzK,OAASA,GAErB6hC,EAAmBlpC,SAASi2B,OAAOnkB,IAEnCm3B,GAAW,IAAIxvB,KAAOjB,EAAO,GAAI,CACjChoB,KAAKu4C,iCAAiCC,GACtC,QAGHA,EAAU5wB,QAAU5nB,KAAKm4C,kBAAkBvwB,QAC5C5nB,KAAKi4C,0BAGbW,iBAAkB,SAASppC,GACvB,IAAIqpC,EACJ,GAAIrpC,GAAYA,EAASi2B,UAAWqT,EAAAA,EAAAA,IAAWtpC,GAC3CqpC,EAAoB,CAChBrT,+BAAgCh2B,EAASg2B,+BACzCC,OAAQ,SAASnkB,GACb9R,EAASi2B,OAAOnkB,EAAQhI,UAAWgI,EAAQy3B,MAAOz3B,EAAQzK,QAC1DyK,EAAQ+D,UAAY/D,EAAQ+D,SAAS8I,iBAG1C,IAAI2J,EAAAA,EAAAA,IAAWtoB,GAClBqpC,EAAoB,CAChBpT,OAAQ,SAASnkB,GACb,IAAI03B,EAAmBxpC,GAASkkC,EAAAA,GAAAA,GAAiBpyB,EAAQhI,WAAYgI,EAAQy3B,MAAOz3B,EAAQzK,QACxFmiC,IAAqBA,EAAiBC,WAAYH,EAAAA,EAAAA,IAAWE,KAC7D13B,EAAQhI,UAAUy3B,OAAOiI,GAE7B13B,EAAQ+D,UAAY/D,EAAQ+D,SAAS8I,gBAG1C,CACH,IAAI+qB,GAAaC,EAAAA,EAAAA,IAAS3pC,GAAYA,GAAWqyB,EAAAA,EAAAA,GAAEryB,GAAU46B,KAAK,MAC7D8O,GAGIl5C,KAAKo5C,gBAAgBF,KACtBl5C,KAAKo5C,gBAAgBF,GAAcl5C,KAAK6sC,YAAYr9B,IAExDqpC,EAAoB74C,KAAKo5C,gBAAgBF,IALzCL,EAAoB74C,KAAK6sC,YAAYr9B,GAQ7C,OAAOqpC,GAEXQ,eAAgB,SAAS//B,EAAW9J,EAAU8R,EAASkkB,EAAgC3uB,GACnF,IAAIgiC,EAAoB74C,KAAK44C,iBAAiBppC,EAAU8R,GACpDnT,EAASmT,EAAQnT,OACjBooC,EAAY,SAAWj1B,EAAQwiB,QAC/BwV,EAAmB,IAAIjsB,EAAAA,GACvBksB,EAAkB,CAClBjgC,UAAWA,EACXy/B,MAAOz3B,EACP+D,SAAUi0B,EACVE,WAAY,KACRF,EAAiBnrB,YAGzB,GAAI0qB,EAAmB,CACnBv3B,EAAQwkB,UAAY9lC,KAAK8lC,UACzB,IAAIja,EAAQ1d,IAAWA,EAAOlC,aAAesqC,GAAav2C,KAAKuiC,OAAO,kBAAmB,IAAUp0B,EAAOlC,cAAgBkC,EAAOk5B,SAAWl5B,EAAO6E,mBAAqBujC,GAAa,WAAaj1B,EAAQwiB,WACrM+U,EAAkBrT,iCAAkCA,GAAoC3Z,EAGzF7rB,KAAKm4C,kBAAkB9vB,KAAK,CACxB7Y,SAAUqpC,EACVv3B,QAASi4B,EACT1tB,MAAOA,IALXgtB,EAAkBpT,OAAO8T,GAQzB1iC,IACAA,EAAO4iC,kBAAoB5iC,EAAO4iC,mBAAqB,GACvD5iC,EAAO4iC,kBAAkBpxB,KAAKixB,SAGlCA,EAAiBrrB,SAErB,OAAOqrB,EAAiB7qB,WAE5BirB,WAAY,SAASC,GACjB,OAAO9X,EAAAA,EAAAA,GAAE8X,GAAc9I,SAAS,SAAS+I,IAAI,cAAcA,IAAI,eAEnEC,eAAgB,SAASlH,EAAQ2D,GAC7B,IAAIwD,EAAqB95C,KAAKuiC,SAASl2B,aAAerM,KAAKuiC,OAAO,mBAC9DwX,EAAWD,GAAsB95C,KAAK05C,WAAW15C,KAAKg6C,eAAiBrH,GAC3E,GAAIoH,GAAYA,EAASn2B,OAAO,IAAMmuB,IAAWnqB,OAAQ,CACrD,IAAIqyB,GAASpY,EAAAA,EAAAA,GAAE,WAAWC,SAASwU,EAAKlM,KAAK,UAE7C,OADApqC,KAAKgmC,QAAQ,OAAQ,eAAgBiU,GAC9BA,EAAOlJ,OAAOuF,GAEzB,OAAOA,GAEX4D,WAAY,SAASvH,EAAQ2D,EAAM6D,GAC/BA,EAAiBA,GAAkB3H,GACnC2H,EAAe1U,OAAO,CAClBgN,QAAS6D,EACTh9B,UAAWq5B,KAGnBxG,YAAa,WACT,IAAIiO,EAAap6C,KAAKq6C,YAClBD,GAAc,IACdp6C,KAAKq6C,YAAc,EACnBr6C,KAAKs6C,SAAS,CACVv7B,KAAMq7B,MAIlBlO,YAAa,SAAS5F,GAClB,IAAIiU,EAAQv6C,KAAKmhC,UAAUuG,SACtB6S,IAASA,EAAM7S,SAAS9f,QACzB5nB,KAAKi4C,uBAAuB3R,IAGpCkU,aAAc,SAASl5B,GACnBA,EAAUA,GAAW,GACrBA,EAAQxa,QAAU9G,KAAK62C,mBAAmBC,oBAC1C,IAAI2D,EAAan5B,EAAQzK,QAAUyK,EAAQzK,OAAO4jC,WAC9C9H,EAAS3yC,KAAKi2C,aAAa30B,EAAQxa,QAAS,WAAa2zC,GAAc,YAAcA,GAAc,WAAaA,GAEpH,OADAz6C,KAAK06C,YAAY/H,EAAQrxB,GAClBqxB,GAEX+H,YAAa,SAAS/H,EAAQrxB,GAI1B,IAHA,IAAIq5B,EAAO36C,KAAK46C,SAASt5B,EAAQzK,QAC7BgkC,EAAgBv5B,EAAQzK,QAAUyK,EAAQzK,OAAOgkC,eAAiB,GAClEC,EAAcx5B,EAAQzK,QAAUyK,EAAQzK,OAAOikC,aAAe,GACzDjjB,EAAI,EAAGA,EAAI8iB,EAAK/yB,OAAQiQ,IAC7B73B,KAAK+6C,WAAWpI,GAAQ/mB,EAAAA,EAAAA,GAAO,CAC3B+Z,IAAKgV,EAAK9iB,GACVgjB,cAAeA,EAAchjB,GAC7B4iB,WAAYK,EAAYjjB,IACzBvW,KAGXy5B,WAAY,SAASpI,EAAQrxB,GACpBA,EAAQu5B,gBACTv5B,EAAQqkB,IAAI4L,MAAQ,IAExB,IAAI+E,EAAOt2C,KAAK41C,WAAWt0B,EAAQqkB,KAC/BqV,EAAch7C,KAAK65C,eAAelH,EAAQ2D,GAC1C,WAAah1B,EAAQm5B,YACrBz6C,KAAKi7C,aAAa3E,EAAMh1B,GAE5BthB,KAAKk6C,WAAWvH,EAAQqI,GACxB,IAAI1J,GAAa1lB,EAAAA,EAAAA,GAAO,CACpB9kB,QAASwa,EAAQxa,SAClBwa,EAAQqkB,KACX3lC,KAAKk7C,gBAAgB5J,EAAYhwB,EAAQqkB,KACzC3lC,KAAKm7C,aAAaH,EAAa1J,EAAYhwB,EAAQqkB,MAEvDyV,gBAAiB,SAAS5b,EAAaqb,GACnC,OAAQA,GAAiBA,EAAcxwB,QAAQmV,IAAgB,GAEnEyb,aAAc,SAAS3E,EAAMh1B,GAIzB,IAHA,IAAIke,EAAc,EACdmG,EAAMrkB,EAAQqkB,IACd7+B,EAAUwa,EAAQxa,QACb+wB,EAAI,EAAGA,EAAI/wB,EAAQ8gB,OAAQiQ,IAC5B73B,KAAKo7C,gBAAgBvjB,EAAGvW,EAAQu5B,gBAChC76C,KAAKq7C,YAAY/E,GAAM1qB,EAAAA,EAAAA,GAAO,CAC1Bzd,OAAQrH,EAAQ+wB,GAChB2H,YAAaA,EACbl/B,MAAOqlC,EAAIjK,QAAUiK,EAAIjK,OAAO8D,GAChC8b,SAAU3V,EAAI4V,WAAa5V,EAAI4V,UAAU/b,IAC1Cle,IAEHxa,EAAQ+wB,GAAG6d,QAAU,EACrBlW,GAAe14B,EAAQ+wB,GAAG6d,QAE1BlW,KAIZgc,aAAc,SAASC,EAAaC,EAAgBb,GAChD,IAAI1J,EAASsK,EAAY5K,WACrB8K,EAAYD,EAAe7K,WAC3BloC,EAAmB3I,KAAKuiC,OAAO,oBAC/BqZ,EAAmB57C,KAAKqhC,gBAAgB+Q,IAC5CyI,EAAcgB,SAAS,SAASrc,EAAapV,GACzC,IAAIsmB,EAAQS,EAAOjM,GAAG1F,GAClBsc,EAAWH,EAAUzW,GAAG9a,GAC5BsmB,EAAMqL,YAAYD,GACdnzC,IAAqBmzC,EAASlM,SAAS,sBACvCkM,EAASha,SAAS8Z,MAG1BzH,GAAesH,EAAY9b,IAAI,GAAI+b,EAAe/b,IAAI,KAE1Dqc,uBAAwB,SAAStL,EAAOqG,GACpC,GAAI,cAAgBA,EAAYjT,QAAS,CACrC9jC,KAAKgmC,QAAQ,YAAY,EAAO0K,GAChC1wC,KAAKgmC,QAAQ,OAAQ,WAAY0K,GACjC,IAAIuL,EAAoBj8C,KAAK62C,mBAAmBqF,uBAC5CC,EAAepF,EAAYvX,YAAcyc,EAAoB,EACjEj8C,KAAKgmC,QAAQ,WAAYmW,EAAczL,KAG/C2K,YAAa,SAAS/E,EAAMh1B,GACxB,IAAIy1B,EAAc/2C,KAAKo8C,gBAAgB96B,GACnCA,EAAQu5B,cACJv5B,EAAQqkB,IAAI4L,QACZjwB,EAAQqkB,IAAI4L,MAAMwF,EAAYvX,aAAeuX,GAGjDz1B,EAAQqkB,IAAI4L,MAAMlpB,KAAK0uB,GAE3B,IAAIrG,EAAQ1wC,KAAKs1C,YAAYyB,GAI7B,OAHA/2C,KAAKg8C,uBAAuBtL,EAAOqG,GACnC/2C,KAAKq8C,mBAAmB3L,EAAOqG,GAC/BT,EAAK3W,IAAI,GAAG2c,YAAY5L,EAAM/Q,IAAI,IAC3B+Q,GAEX2L,mBAAoB,SAAS3L,EAAOpvB,GAChC,IAAI9R,EAAWxP,KAAKu8C,iBAAiBj7B,IACrCsa,EAAAA,EAAAA,KAAMpsB,GAAYxP,KAAKq5C,eAAe3I,EAAOlhC,EAAU8R,IAAU+M,MAAK,KAClEruB,KAAKo1C,YAAY1E,EAAOpvB,OAGhCi7B,iBAAkB,aAClB3B,SAAU,WACN,MAAO,IAEXwB,gBAAiB,SAAS96B,GACtB,IAAIy1B,EAAc,CACd5oC,OAAQmT,EAAQnT,OAChBqxB,YAAale,EAAQke,YACrBsE,QAASxiB,EAAQqkB,IAAI7B,QACrB0Y,SAAUx8C,KAAK+1C,UAAUz0B,EAAQqkB,MAGrC,OADA3lC,KAAKk7C,gBAAgBnE,GACdA,GAEXmE,gBAAiB,SAAS55B,EAASm7B,GAC/B,GAAKz8C,KAAKuiC,OAAO,sBAAjB,CAGA,IAAIma,EAAW,GAyCf,OAxCAD,EAASA,GAAUn7B,EACnBm7B,EAAOE,MAAQF,EAAOE,OAAS,SAAS5jB,EAAQ6jB,EAAiBC,GAC7D,IAAIvB,EAAWviB,EAAO0jB,EAAO/sC,MACzBotC,EAAU,SAASnX,GACfA,GAAOkX,GACPA,EAAclX,GAElB,IAAIoX,EAAWhkB,EAAO0jB,EAAO/sC,MACzB8b,KAAKC,UAAU6vB,KAAc9vB,KAAKC,UAAUsxB,KACxCpX,GACAiX,EAAgBG,GAEpBzB,EAAWyB,IAInB,OADAL,EAASr0B,KAAKy0B,GACP,WACH,IAAI1yB,EAAQsyB,EAASryB,QAAQyyB,GACzB1yB,GAAS,GACTsyB,EAASM,OAAO5yB,EAAO,KAInCqyB,EAAOQ,OAASR,EAAOQ,QAAU,SAAStX,EAAKuX,GACvCvX,IACA3lC,KAAK0P,KAAO4R,EAAQ5R,KAAOi2B,EAAIj2B,KAC/B1P,KAAKuzC,SAAWjyB,EAAQiyB,SAAW5N,EAAI4N,SACvCvzC,KAAKg2C,UAAY10B,EAAQ00B,UAAYrQ,EAAIqQ,UACzCh2C,KAAKggC,WAAa1e,EAAQ0e,WAAa2F,EAAI3F,WACvC1e,EAAQqkB,MAAQuX,IAChB57B,EAAQqkB,IAAMA,IAGtB+W,EAASb,SAAS,SAASiB,GACvBA,EAAQnX,OAGZ8W,IAAWn7B,IACXA,EAAQq7B,MAAQF,EAAOE,MAAMrY,KAAKmY,IAE/Bn7B,IAEX+zB,cAAe,SAASpB,EAAM3yB,GAC1BA,EAAQk2B,aAAc9D,EAAAA,GAAAA,IAAiB7R,EAAAA,EAAAA,GAAEoS,IACzCj0C,KAAK2qC,cAAc,iBAAkBrpB,IAEzC65B,aAAc,SAAS7E,EAAMh1B,IACzB67B,EAAAA,GAAAA,IAAY7G,EAAK3W,IAAI,GAAI,UAAWre,GACpCA,EAAQmyB,YAAaC,EAAAA,GAAAA,GAAiB4C,GACtCt2C,KAAK2qC,cAAc,gBAAiBrpB,IAExC87B,qBAAsB,SAAS9W,GAC3B,IAAI+W,EAAc/W,EAAE+W,YACpB,GAAInO,EAAAA,aAA2BmO,EAAa,CAAC,QAAS,iBAAtD,CACI,IAAIzG,EAAiB52C,KAAK62C,mBAAmBC,oBACzCwG,EAASC,EAAAA,GAAkB3G,GAAiB,SAASzoC,GACrD,IAAIX,EAAQW,EAAOwnC,cAAgBxnC,EAAOX,MAC1C,OAAOijB,EAAAA,EAAAA,IAAUjjB,GAASA,EAAQ,UAEtCxN,KAAKw9C,gBAAgB,CACjBF,OAAQA,EACRD,YAAaA,SAIhBr9C,KAAK0rC,eACN1rC,KAAKylC,UAGbgY,aAAc,SAAS/M,GACnB,IAAIgN,EAAYhN,EAAM9oB,OAAS8oB,EAAM,GAAGgN,WAAa,EACrD,OAAOA,GAEXC,iBAAkB,WACd,OAAO39C,KAAKg6C,gBAAiBnY,EAAAA,EAAAA,MAEjC+b,gBAAiB,WACb,OAAO59C,KAAKg6C,eAEhB6D,gBAAiB,SAASlE,GACtB35C,KAAKg6C,cAAgBL,GAEzB/P,cAAe,SAASnV,GAEpB,OADAz0B,KAAKs6B,SAAS7F,GACNA,EAAKnlB,MACT,IAAK,kBACL,IAAK,iBACL,IAAK,gBACL,IAAK,qBACDtP,KAAK8rC,aAAY,GAAM,GACvBrX,EAAKqV,SAAU,IAG3Bb,KAAM,WACF,IAAIrB,EAAO5nC,KACX4nC,EAAKyS,aAAe,EACpBzS,EAAKiP,mBAAqBjP,EAAKyC,cAAc,WAC7CzC,EAAKlG,gBAAkBkG,EAAKyC,cAAc,QAC1CzC,EAAKuQ,kBAAoB,GACzBvQ,EAAKwR,gBAAkB,GACvBxR,EAAKiC,aAAa,eAClBjC,EAAKiC,aAAa,cAClBjC,EAAKiC,aAAa,kBAClBjC,EAAKiC,aAAa,iBAClBjC,EAAKiC,aAAa,qBAAsB,CACpCiU,kBAAmB,CAAC,WAAY,cAEpClW,EAAKiC,aAAa,iBAAkB,CAChCiU,kBAAmB,CAAC,WAAY,YAChCC,SAAU,cAEdnW,EAAKiC,aAAa,gBAAiB,CAC/BiU,kBAAmB,CAAC,WAAY,YAChCC,SAAU,YACVC,aAAc,SAAS1X,GACnBsB,EAAKqW,kBAAkB3X,MAG/BsB,EAAKiP,mBAAmBqH,eAAeC,IAAIvW,EAAKwV,qBAAqB9Y,KAAKsD,IAC1EA,EAAKlG,iBAAmBkG,EAAKlG,gBAAgB0c,QAAQD,IAAIvW,EAAKyW,mBAAmB/Z,KAAKsD,KAE1FqW,kBAAmB3N,EAAAA,GACnB+N,mBAAoB,aACpB1V,cAAe,WACX,MAAO,CAAC,kBAEZ2V,0BAA2B,WACvB,IAAIlE,EAAap6C,KAAKq6C,YAClBD,GAAc,IACdp6C,KAAKq6C,YAAc,EACnBr6C,KAAKs6C,SAAS,CACVv7B,KAAMq7B,MAIlBE,SAAU,SAASiE,GACf,IAAI7d,EAAW1gC,KAAKmhC,UAChBqd,EAAmB9d,GAAYA,EAASmQ,SAAS,IAAM7wC,KAAKqhC,gBAAgBmQ,KAAyBoI,IAAI,IAAM55C,KAAKqhC,gBAAgByQ,MACpIrhB,EAAAA,EAAAA,IAAU8tB,KAAQ9tB,EAAAA,EAAAA,IAAU8tB,EAAIx/B,OAAS/e,KAAKq6C,cAAgBkE,EAAIx/B,OAClE/e,KAAKq6C,YAAckE,EAAIx/B,KACvBy/B,GAAoBA,EAAiBpE,WAAWmE,EAAIx/B,QAG5D0/B,4BAA6B,SAAS9L,GAClC,IAAI6L,GAAmB3c,EAAAA,EAAAA,GAAE,SACrB9c,EAAY/kB,KAAKuiC,OAAO,uBAc5B,QAbI,IAAUxd,GAAa,SAAWA,IAAc25B,GAAAA,kBAChDF,EAAiB1c,SAAS9hC,KAAKqhC,gBAAgBoQ,KAEnD7K,EAAAA,EAAAA,GAAgB4X,EAAkB,UAAU,KACxC,IAAIpE,EAAaoE,EAAiBpE,aAC9BA,IAAep6C,KAAKq6C,aACpBr6C,KAAK2+C,cAAc1R,KAAK,CACpBluB,KAAMq7B,GACPp6C,KAAKsP,SAGhBkvC,EAAiB1c,SAAS9hC,KAAKqhC,gBAAgBsQ,KAAgB7P,SAAS9hC,KAAKqhC,gBAAgBmQ,KAAyBT,OAAO4B,GAAQ5Q,SAAS/hC,KAAKmhC,WACnJnhC,KAAKgmC,QAAQ,OAAQ,eAAgBwY,GAC9BA,GAEXI,eAAgB,SAASC,GACrB7+C,KAAK69C,gBAAgBgB,GACrB7+C,KAAKy+C,4BAA4BI,IAErCC,oBAAqBxO,EAAAA,GACrByO,WAAY,SAASC,GACjB,IACIxxC,EADAwb,EAAS,GAcb,OAZIg2B,GACAzB,EAAAA,GAAmByB,GAAgB,SAAS50B,EAAOnD,GAE/C,GADAzZ,EAAQyZ,EAAKg4B,YACTh4B,EAAKi4B,sBAAuB,CAC5B,IAAIC,GAAa9Z,EAAAA,EAAAA,GAAgBpe,GAC7Bk4B,EAAW3xC,MAAQA,EAAQ,IAC3BA,EAAQ2xC,EAAW3xC,OAG3Bwb,EAAOX,KAAK7a,MAGbwb,GAEXo2B,gBAAiB,SAASC,GACtB,IACIC,EACAnO,EAFAnoB,EAAS,GAKb,IAFChpB,KAAKuiC,OAAO,uBAAyB+N,EAAAA,MACtC+O,EAAgBA,GAAiBr/C,KAAK49C,kBAClCyB,EAAe,CACfC,EAAQD,EAAcxO,SAAS,yBAAyBA,WACxD,IAAK,IAAIhZ,EAAI,EAAGA,EAAIynB,EAAM13B,OAAQiQ,IAAK,CACnC,IAAIye,EAAOgJ,EAAMpa,GAAGrN,GAChB0nB,EAAe,SAAWjJ,EAAK3W,IAAI,GAAGuU,MAAMsL,UAAYlJ,EAAK1G,SAAS,sBAC1E,IAAK0G,EAAK3P,GAAG,IAAMqL,MAAqBsE,EAAK3P,GAAG,IAAMsL,MAAsBqE,EAAK3P,GAAG,IAAMwL,KAAoBoN,EAAc,CACxHpO,EAASmF,EAAKzF,SAAS,MACvB,OAGR7nB,EAAShpB,KAAK++C,WAAW5N,GAE7B,OAAOnoB,GAEXy2B,sBAAuB,SAASjgB,EAAa+T,GACzC,OAAO/T,GAEXge,gBAAiB,SAASjtB,GACtB,IAMImvB,EACAlyC,EACAmF,EACA6sB,GARA8d,OAAQA,EACR+B,cAAeA,EACfv4C,QAASA,EACTkL,MAAOA,GACPue,EAKAhqB,EAAkBvG,KAAKuiC,OAAO,mBAElC,GADA8c,EAAgBA,GAAiBr/C,KAAK49C,kBAClCyB,GAAiBA,EAAcz3B,QAAU01B,EAAQ,CACjD9d,EAAc,EACdkgB,EAAQL,EAAcxO,SAAS,YAAYA,SAAS,QACpDmH,EAAAA,GAAAA,IAAS0H,EAAO,QAChB54C,EAAUA,GAAW9G,KAAKkxC,WAAW,KAAMmO,GAC3C,IAAK,IAAIxnB,EAAI,EAAGA,EAAI/wB,EAAQ8gB,OAAQiQ,IAAK,CACrC,GAAItxB,IAAoByL,IACpBxE,EAAQ1G,EAAQ+wB,GAAGrqB,MACfA,IAAU1G,EAAQ+wB,GAAGwP,SAAS,CAC9B75B,EAAQ1G,EAAQ+wB,GAAG8d,cAAgBnoC,EACnCA,EAAQsmC,GAActmC,GACtBmF,EAAWmhC,GAAchtC,EAAQ+wB,GAAGllB,UAAYnF,GAEhD,IADA,IAAI8xC,EAAQA,GAASD,EAAcxO,WAAWA,SAAS,WAAW+I,IAAI,IAAM3H,IACnEsB,EAAW,EAAGA,EAAW+L,EAAM13B,OAAQ2rB,IAAY,CACxD,IAAI5N,EAAM2Z,EAAM/L,GACZU,OAAO,EACPzgC,EAAexT,KAAKy/C,sBAAsB5nB,EAAG0b,GAC7C5N,EAAIga,UAAUtkC,SAAS22B,IACnB,IAAMx+B,IACNygC,EAAOtO,EAAIia,cAAc,qBAAqB93B,OAAOtU,EAAe,EAAG,QAG3EygC,EAAOtO,EAAI4L,MAAM/9B,GAEjBygC,IACAD,GAAaC,EAAMntC,EAAQ+wB,GAAIrqB,GAC/BymC,EAAKC,MAAMvhC,SAAWA,IAKlC7L,EAAQ+wB,GAAG6d,QACXlW,GAAe14B,EAAQ+wB,GAAG6d,SAG9BloC,EAAQ8vC,EAAO9d,GACX,mBAAqBhyB,IACrBA,EAAQ6kC,IAER,kBAAoB7kC,IACpBA,EAAQA,EAAMqyC,QAAQ,GAAK,OAE/B7H,EAAAA,GAAAA,IAAS0H,EAAMxa,GAAG1F,IAAc/O,EAAAA,EAAAA,IAAUjjB,GAASA,EAAQ,QAC3DgyB,QAIZsgB,gBAAiB,SAASvM,GACtB,OAAOvzC,KAAK+/C,qBAAqBxM,IAErCwM,qBAAsB,SAASxM,GAC3B,IAAI+C,EAAOt2C,KAAKggD,kBAAkB9a,GAAGqO,GACrC,OAAO+C,EAAKzF,YAEhBoP,gBAAiB,SAAS1M,EAAU2M,GAChC,IAAIxP,EACAS,EAASnxC,KAAK8/C,gBAAgBvM,GAC9B4M,EAAqBngD,KAAKogD,uBAAuBjP,EAAQoC,EAAU2M,GAIvE,GAHI/O,EAAOvpB,QAAUu4B,GAAsB,IACvCzP,EAAQS,EAAOjM,GAAGib,IAElBzP,GAASA,EAAM9oB,OACf,OAAO8oB,GAGf2P,eAAgB,SAAS9M,GACrB,IAAI3L,EAAO5nC,KACPy7C,GAAc5Z,EAAAA,EAAAA,KACdye,EAAiB1Y,EAAK+V,mBAI1B,GAHAJ,EAAAA,GAAmB+C,GAAiB,SAAStsB,EAAG2lB,GAC5C8B,EAAcA,EAAY0C,IAAIvW,EAAKoY,iBAAgBne,EAAAA,EAAAA,GAAE8X,IAAezU,GAAGqO,OAEvEkI,EAAY7zB,OACZ,OAAO6zB,GAGf8E,eAAgB,SAAShN,EAAU2M,GAC/B,OAAOxM,EAAAA,GAAAA,GAAiB1zC,KAAKigD,gBAAgB1M,EAAU2M,KAE3DM,cAAe,SAASjN,GACpB,IAAI+L,EAAQt/C,KAAKqgD,eAAe9M,GAC5BkN,EAAW,GACf,GAAInB,KAAU5L,EAAAA,GAAAA,GAAiB4L,GAAO3f,IAClC,IAAK,IAAI9H,EAAI,EAAGA,EAAIynB,EAAM13B,OAAQiQ,IAC9B4oB,EAASp4B,KAAKi3B,EAAMznB,SAGxB4oB,EAAWnB,EAEf,OAAOmB,GAEXL,uBAAwB,SAASjP,EAAQoC,EAAU2M,GAC/C,IAAI/G,EAAAA,EAAAA,IAAS+G,GAAmB,CAC5B,IAAI1gB,EAAcx/B,KAAK62C,mBAAmB6J,aAAaR,EAAkB,SACzE,OAAOlgD,KAAK62C,mBAAmBc,gBAAgBnY,GAEnD,OAAO0gB,GAEX9O,kBAAmB,aACnBF,WAAY,SAASqC,GACjB,OAAOvzC,KAAK62C,mBAAmBC,kBAAkBvD,IAErDoN,QAAS,SAASC,EAAcjG,GAC5B,IACIxJ,EADAmO,EAAQ3E,GAAQ36C,KAAKggD,kBAEzB,GAAIV,EAAM13B,OAAS,GAAKg5B,EAAarN,UAAY,IACzC,YAAcvzC,KAAKuiC,OAAO,mBAAqB,YAAcviC,KAAKuiC,OAAO,gCACzEqe,EAAarN,SAAWqN,EAAarN,SAAW+L,EAAM13B,OAASg5B,EAAarN,SAAW+L,EAAM13B,OAAS,GAE1GupB,EAASnxC,KAAK8/C,gBAAgBc,EAAarN,UACvCpC,GAAUA,EAAOvpB,OAAS,GAC1B,OAAOupB,EAAOjM,GAAGiM,EAAOvpB,OAASg5B,EAAaphB,YAAcohB,EAAaphB,YAAc2R,EAAOvpB,OAAS,IAInHi5B,aAAc,WACV,IAAIlH,EAAe35C,KAAK49C,kBACxB,OAAIjE,GAAgB,IAAMA,EAAa/xB,OAC5B+xB,EAAa,GAAGgB,KAAK/yB,OAEzB,GAEXk5B,oBAAqB,SAASnH,GAE1B,GADAA,EAAeA,GAAgB35C,KAAK49C,kBAChCjE,EAAc,CACd,IAAIoH,EAAiB/gD,KAAKuiC,SAASl2B,aAAerM,KAAKuiC,OAAO,mBAC1Dye,EAAUD,GAAkBpH,EAAapY,KAAK,WAAawQ,IAC/D,OAAOiP,GAAWA,EAAQp5B,OAASo5B,EAAUrH,EAAapY,KAAK,cAAgBwQ,GAAY,QAAUA,IAEzG,OAAOlQ,EAAAA,EAAAA,MAEXme,gBAAiB,SAASrG,GACtB,OAAO35C,KAAK8gD,oBAAoBnH,IAEpCnG,YAAa,SAAS8C,GAClB,OAAOt2C,KAAKggD,kBAAkB51B,MAAMksB,IAExCjR,gBAAiB,aACjB4b,QAAS,aACTC,mBAAoB,SAAS1zC,GACzB,IAAIkzB,EAAW1gC,KAAKmhC,UAChB70B,EAAatM,KAAKuiC,OAAO,cAC7B7B,GAAYA,EAASyE,IAAI,CACrBgc,YAAa70C,EAAakB,EAAQ,GAClC4zC,aAAe90C,EAAqB,GAARkB,KAGpC6zC,mBAAoB,SAASC,GACzB,IAAI5gB,EAAW1gC,KAAKmhC,UAChBke,EAAgBr/C,KAAKg6C,cACzB,SAAItZ,IAAY2e,KACLiC,GAAeC,EAAAA,EAAAA,IAAclC,IAAiBmC,EAAAA,EAAAA,IAAS9gB,GAAY,GAAI+gB,EAAAA,EAAAA,IAAepC,IAAiBxc,EAAAA,EAAAA,IAAUnC,GAAY,M,WCv7B5IghB,GAAoB,mBACpBC,GAAuB,yBACvBC,GAAuB,kBACvBC,GAAoB,gCACpBC,GAAqB,GAAGh6B,OAAO+5B,GAAmB,SAClDE,GAAwB,gCACxBC,GAAyB,GAAGl6B,OAAOi6B,GAAuB,SAC1DE,GAAsB,CACtBz5C,WAAY,CAAC,2DACb05C,cAAe,CAAC,8DAA+D,+DAC/En6C,UAAW,CAAC,oFAAqF,qFACjG89B,SAAU,CAAC,GAAG/d,OAAO85B,IAAuB,GAAG95B,OAAO+5B,GAAmB,cAAe,GAAG/5B,OAAOg6B,GAAoB,cAAe,GAAGh6B,OAAOg6B,IAAqB,GAAGh6B,OAAOi6B,GAAuB,cAAe,GAAGj6B,OAAOk6B,GAAwB,cAAe,GAAGl6B,OAAOk6B,KAC/QG,OAAQ,CAAC,sDAAuD,uDAChEr6C,YAAa,CAAC,4CAA6C,6CAC3DgE,MAAO,CAAC,gCAAiC,kCAEzCs2C,IAAc,EACdC,IAAmB,EACnBC,GAAqB,KAEzB,SAASC,GAAeC,EAAU50C,EAAU68B,EAAOF,EAAQkY,EAAcC,GACrE,IAAIC,EAAYC,GAAiBh1C,EAAU68B,EAAMoY,cAAeH,GAChE,IAAIC,EAAJ,CAGA,IAAIxoB,GAAU2oB,EAAAA,GAAAA,IAAiBrY,GAC3B,UAAYtQ,GAAW,UAAYA,GACnC4oB,GAAuBtY,EAAM5N,OAAQjvB,GACrC28B,GAAUA,EAAO,CACbE,MAAOA,KAEJ,QAAUtQ,EACjBsoB,EAAa3gB,SAAS4f,IAEtBsB,GAAWR,EAAU50C,EAAU68B,IAIvC,SAASsY,GAAuBlmB,EAAQjvB,GACpC,IAAIq8B,GAAUpI,EAAAA,EAAAA,GAAEhF,GACZomB,EAAYhZ,EAAQG,KAAK,cACzB8Y,EAAkBC,GAA4BF,EAAWr1C,EAASuzB,WAClEiiB,EAAcF,EAAgB94B,MAAM6f,GACxCqY,IAAqB12B,EAAAA,EAAAA,GAAO,GAAI,CAC5Bq3B,UAAWA,EACX74B,MAAOg5B,GACR,CACCC,aAAcz1C,IAItB,SAASu1C,GAA4BF,EAAWK,GAC5C,IACIJ,EADAK,GAAe1hB,EAAAA,EAAAA,GAAEyhB,GAOrB,OAJIJ,EADAD,EACkBM,EAAahiB,KAAK,gBAAgBzZ,OAAOm7B,EAAW,iBAEpDM,EAAahiB,KAAK,cAEjC2hB,EAGX,SAASM,GAAuBC,GAC5B,IAAK,IAAIr5B,KAASq5B,EAAe,CAC7B,IAAI3mB,EAAW2mB,EAAcr5B,GACzBs5B,GAAoB7hB,EAAAA,EAAAA,GAAE/E,GAAU6mB,QACpC,GAAID,EAAkB97B,OAClB,OAAO87B,GAKnB,SAASd,GAAiBh1C,EAAU68B,EAAOE,GACvC,IAAIlW,EAAO,CACPgW,MAAOA,EACPX,SAAS,GAOb,OALIa,EACAA,EAAclW,GAEd7mB,EAAS88B,sBAAsB,YAA/B98B,CAA4C6mB,GAEzCA,EAAKqV,QAGhB,SAAS8Z,KACLvB,GAAmB,YAAc9M,GAAAA,WAAAA,cAAyBsO,gBAEvD,SAASC,KACZld,EAAAA,EAAAA,GAAgB2O,GAAAA,WAAAA,cAA0B,mBAAoBqO,IAE3D,SAASG,KACZnd,EAAAA,EAAAA,IAAiB2O,GAAAA,WAAAA,cAA0B,mBAAoBqO,IAE5D,SAASI,GAAY7iB,GACxBkhB,IAAmB,EACnBlhB,EAAQiM,QACRiV,IAAmB,EAEhB,SAAS4B,GAAuBzB,EAAU50C,EAAU8yB,EAAU5D,EAAUyN,EAAQmY,GACnF,GAAI90C,EAAS20B,OAAO,+BAChB,OAAO+N,EAAAA,GAEX,IAAI4T,EAAiB,KAAMriB,EAAAA,EAAAA,GAAEj0B,EAASuzB,WAClCgjB,EAAiB7d,GAAKic,GAAeC,EAAU50C,EAAU04B,EAAGiE,EAAQ2Z,IAAkBxB,GACtF0B,EAAmB,KACnBhC,IAAc,EACd8B,IAAiBliB,YAAY0f,KAE7B2C,EAAiB,KACjB,IAAIC,GAAmBlC,KAAgBC,GACnCiC,GACAJ,IAAiBpiB,SAAS4f,IAE9BU,IAAc,GAKlB,OAHAxb,EAAAA,EAAAA,GAAgBlG,EAAU,UAAW5D,EAAUqnB,GAC/Cvd,EAAAA,EAAAA,GAAgBlG,EAAU,YAAa5D,EAAUsnB,GACjDxd,EAAAA,EAAAA,GAAgBlG,EAAU,UAAW5D,EAAUunB,GACxC,KACHzd,EAAAA,EAAAA,IAAiBlG,EAAU,UAAW5D,EAAUqnB,GAChDvd,EAAAA,EAAAA,IAAiBlG,EAAU,YAAa5D,EAAUsnB,GAClDxd,EAAAA,EAAAA,IAAiBlG,EAAU,UAAW5D,EAAUunB,IAGjD,SAASE,GAAa32C,GACzB,IAAKA,EAAS20B,OAAO,gCAAkC+f,GAAoB,CACvE,IAAIe,EAAef,GAAmBe,aACtC,GAAIA,EAAc,CACd,IAAIH,EAAkBC,GAA4Bb,GAAmBW,UAAWI,EAAaliB,WACzFqjB,EAAiBtB,EAAgBhe,GAAGod,GAAmBl4B,OAC3Dk4B,GAAqB,KACrB1b,EAAAA,EAAAA,QAAqB4d,EAAgB,WAI1C,SAASxB,GAAWR,EAAU50C,EAAU68B,GAC3C,IAAItQ,GAAU2oB,EAAAA,GAAAA,IAAiBrY,GAC/B,GAAIA,EAAM2L,UAAY,YAAcjc,GAAW,cAAgBA,GAAU,CACrE,IAAIsqB,EAAYtkD,OAAOs6B,KAAKwnB,IACxByC,EAAgBD,EAAUp6B,QAAQm4B,GACtC,MAAOkC,GAAiB,GAAKA,EAAgBD,EAAU78B,OAAQ,CAC3D88B,EAAgB,YAAcvqB,IAAYuqB,IAAkBA,EAC5D,IAAIC,EAAYF,EAAUC,GACtBjB,EAAgBxB,GAAoB0C,GACpCjB,EAAoBF,GAAuBC,GAC/C,GAAIC,GAAqBA,EAAkB97B,OAAQ,CAC/C87B,EAAkBtZ,KAAK,WAAYx8B,EAAS20B,OAAO,aAAe,GAClEqE,EAAAA,EAAAA,QAAqB8c,EAAmB,SACxCA,EAAkB1hB,YAAY2f,IAC9B,SAKT,SAASiD,GAAYh3C,EAAU8yB,GAC7B9yB,EAAS20B,OAAO,gCACjB7B,EAAS0J,KAAK,WAAYx8B,EAAS20B,OAAO,aAAe,GCxK1D,IAAI0hB,GAAyB,SAASzB,EAAU50C,EAAU8yB,EAAU5D,EAAUyN,GACjF,IAAIsa,EAAqBj3C,EAASy8B,cAAc,sBAC5Cz8B,EAAS20B,OAAO,gCAAkCsiB,IAAuBA,EAAmBC,sBAGhGl3C,EAASi8B,aAAa,aACtBkb,GAAqCvC,EAAU50C,EAAU8yB,EAAU5D,EAAUyN,GAAQ9V,IACjF7mB,EAAS+8B,cAAc,YAAalW,QCaxCuwB,GAAqB,eACrBC,GAAgB,UAChBC,GAAe,SACfC,GAAqB,UACrBC,GAAmB,gBACnBC,GAAqB,kBACrBC,GAA6B,wBAC7BC,GAA8B,yBAC9BC,GAA8B,yBAC9BC,GAA4B,yBAC5BC,GAA0B,uBAC1BC,GAAsC,6BACtCC,GAAuB,oBACvBC,GAA6B,0BAC7BC,GAA+B,oBAC/BC,GAAgC,6BAChCC,GAAyB,sBAClBC,GAAsB,CAC7BC,eAAgB,WACZ,MAAO,CACHr5C,mBAAmB,EACnBvG,iBAAiB,IAGzB4nC,MAAO,CACHiY,kBAAmBvR,GAAYxJ,QAAQ,WACnC,IAAIgb,EAAoB,SAASxe,EAAM8I,EAAOpvB,GAC1C,IAAI+kC,GAAexkB,EAAAA,EAAAA,GAAE,SAASC,SAAS8F,EAAKvG,gBAAgB2jB,KAC5Dpd,EAAK5B,QAAQ,OAAQ,eAAgBqgB,GACrCC,EAA2B1e,EAAM8I,EAAOpvB,EAAQnT,OAAQk4C,GACxD,IAAIv5C,EAAkB86B,EAAKrF,OAAO,mBAC9BgkB,EAAmB3e,EAAKyC,cAAc,WAAW8F,0BAA0B7uB,EAAQnT,OAAO8B,WAC9F,OAAOo2C,EAAav5C,GAAmB,UAAYy5C,EAAmB,WAAa,aAAa7V,IAGpG,SAAS4V,EAA2B1e,EAAM8I,EAAOviC,EAAQk4C,GACrD,IAAIG,EAAqB5e,EAAK+I,sBAAsBD,GAAO,GACvD+V,EAA4B7e,EAAK+I,sBAAsBD,GACvDgW,EAAiBF,GAAsBA,EAAmB5+B,OAC1D2nB,EAAkB3H,EAAK4H,oBAAoBrhC,EAAO8B,WAClD02C,EAAyB,IAAI7+B,OAAO8f,EAAKoI,uBAAuB,SAChE4W,EAA8B,IAAI9+B,OAAO8f,EAAKoI,uBAAuB,cACrE6W,EAAiBJ,EAA0B7iC,OAAO+iC,GAClDG,EAAsBL,EAA0B5V,WAAWjtB,OAAOgjC,GACtEP,EAAeA,GAAgB3V,EAAMG,SAAS,IAAMjJ,EAAKvG,gBAAgB2jB,KACzEqB,EAAarZ,YAAY2Y,GAAsCpW,EAAiBmX,EAAiB,GAAG1Z,YAAY2Y,IAAuC,SAAWpW,EAAkB,QAAU,QAASmX,EAAiB,GAAK,WAAav4C,EAAO8B,WAAW+8B,YAAY4Y,KAAwBiB,EAAej/B,QAAQolB,YAAY6Y,KAA8BiB,EAAoBl/B,QAAQolB,YAAY+Y,KAAiCU,EAA0B7iC,OAAO,IAAMgkB,EAAKoI,uBAAuB,iBAAiBpoB,QAElgB,MAAO,CACHquB,aAAc,WACV,IAAItD,EAAS3yC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAOvC,OANAub,EAAAA,EAAAA,GAAgB+L,EAAQ,wBAAyB3yC,KAAK6pC,cAAc,SAASvD,GACzE,IAAImE,EAAQnE,EAAEmE,MACVA,EAAMsc,UACNtc,EAAM4L,qBAGP1D,GAEXqU,8BACI,OAAOhnD,KAAKuiC,OAAO,gCAEvB0kB,oBAAqB,SAAS94C,GAC1B,IAAIy5B,EAAO5nC,KACX,OAAO,SAAS0/B,EAAYpe,GACxB,IAAI4lC,EAAW/4C,EAAOk5B,QAAU3H,EAAa0mB,EAAkBxe,EAAMlI,EAAYpe,GAC7ElQ,EAAU,WAAajD,EAAOk5B,SAAWl5B,EAAOiD,QAChDA,EACA81C,EAASz3C,KAAK2B,GACPjD,EAAOk5B,SACd3H,EAAWxe,KAAK,YAI5BimC,mBAAoB,SAASh5C,GACzB,OAAOA,EAAOoE,oBAAsB,CAChCizB,gCAAgC,EAChCC,OAAQzlC,KAAKinD,oBAAoB94C,KAGzCyqC,iBAAkB,SAASppC,EAAU8R,GACjC,IACI8lC,EADAxf,EAAO5nC,KAEPmO,EAASmT,EAAQnT,OACjB0qC,EAAoBjR,EAAKtN,SAAS9qB,GAatC,OAXI43C,EADA,WAAa9lC,EAAQwiB,SAAW+U,GAAqB1qC,EAAOoE,qBAAuBpE,EAAOk5B,QACzE,CACb5B,OAAQ,SAASnkB,GACb,IAAI4lC,EAAWd,EAAkBxe,EAAMtmB,EAAQhI,UAAWgI,EAAQy3B,OAClEF,EAAkBpT,QAAO7Z,EAAAA,EAAAA,GAAO,GAAItK,EAAS,CACzChI,UAAW4tC,OAKNrO,EAEduO,GAEX/I,mBAAoB,SAAS/X,GACrB,YAAcA,EAAEmU,aAGhBz6C,KAAKqnD,oBAAsBrnD,KAAK0rC,iBAChC1rC,KAAKqnD,oBAAqB,EAC1BrnD,KAAKylC,WAGb4V,YAAa,SAAS/E,EAAMh1B,GACxB,IAAIovB,EAAQ1wC,KAAKs6B,SAASgc,EAAMh1B,GAShC,MARI,WAAaA,EAAQqkB,IAAI7B,UACzB4M,EAAM5O,SAAS2jB,IACVzlD,KAAKgnD,+BACF1lC,EAAQnT,SAAWmT,EAAQnT,OAAOW,MAClC4hC,EAAMtG,KAAK,WAAYpqC,KAAKuiC,OAAO,aAAe,IAIvDmO,GAEXsL,uBAAwB,SAAStL,EAAOqG,GACpC/2C,KAAKs6B,SAASoW,EAAOqG,GACjB,WAAaA,EAAYjT,UACzB9jC,KAAKgmC,QAAQ,OAAQ,eAAgB0K,IACjCqG,EAAY5oC,QAAW4oC,EAAY5oC,OAAOk5B,SAAY0P,EAAY5oC,OAAOsE,SACzEi+B,EAAMtG,KAAK,KAAM2M,EAAY5oC,OAAOsnC,UACpCz1C,KAAKgmC,QAAQ,QAASyD,EAAAA,EAAAA,OAA2B,yBAA2B,IAAMsN,EAAY5oC,OAAOiD,QAASs/B,MAI1HkF,WAAY,SAASjQ,GACjB,IAAI2Q,EAAOt2C,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAQrC,OAPAirB,EAAKtJ,YAAYqY,GAAoBrlD,KAAKuiC,OAAO,oBAC7C,WAAaoD,EAAI7B,UACjBwS,EAAKxU,SAASsjB,IACTplD,KAAKgnD,+BACN/C,GAAuB,gBAAiBjkD,KAAMs2C,EAAM,KAAMt2C,KAAKsnD,qBAAqBhjB,KAAKtkC,QAG1Fs2C,GAEXgR,qBAAsB,SAAS7yB,GAC3B,IAAIgW,EAAQhW,EAAKgW,MACbR,GAAUpI,EAAAA,EAAAA,GAAE4I,EAAM5N,QAEtB,GADA78B,KAAKunD,mBAAqB9c,EAAM5N,OAC5BoN,EAAQtD,GAAGmf,IAA+B,CAC1C,IAAI0B,EAAyBxnD,KAAKqqC,cAAc,gBAC5Cod,EAAUxd,EAAQlD,QAAQ,MAC1BvH,EAAcx/B,KAAK0nD,wBAAwBD,GAC3CjoB,GAAe,GACfgoB,EAAuBG,qBAAqBnoB,GAAa,OAE1D,CACH,IAAI8W,EAAOrM,EAAQlD,QAAQoe,IAC3BnlD,KAAK4nD,qBAAqBnd,EAAO6L,GAErC7L,EAAM4L,kBAEVnK,YAAa,WACT,IAAItE,EAAO5nC,KACP0/B,EAAakI,EAAKzG,YAClByG,EAAKoS,eAAkBpS,EAAKlG,gBAAgBmmB,YAAejgB,EAAKkgB,mBAGpEpoB,EAAWoC,SAAS8F,EAAKvG,gBAAgB4jB,KAAgBjY,YAAYpF,EAAKvG,gBAAgB6jB,KAAgBtd,EAAKrF,OAAO,oBAAoBsI,QAC1IjD,EAAK5B,QAAQ,OAAQ,eAAgBtG,GACrCkI,EAAKgX,eAAehX,EAAK4S,gBACrB5S,EAAKmgB,cAAgB,GACrBroB,EAAWoC,SAASkkB,IAExBpe,EAAKtN,SAAS7G,MAAMmU,EAAMvc,aAE9BqvB,YAAa,WACT,IAAI9S,EAAO5nC,MACP4nC,EAAKlG,gBAAgBmmB,YAAcjgB,EAAKkgB,mBACxClgB,EAAKtN,SAAS7G,MAAMmU,EAAMvc,WAC1Buc,EAAKkgB,iBAAkB,IAG/BE,sBAAuB,SAASzU,GAC5B,OAAOvzC,KAAK62C,mBAAmBC,kBAAkBvD,IAErDwH,WAAY,SAASpI,EAAQrxB,GACzBA,EAAQxa,QAAU9G,KAAKgoD,sBAAsB1mC,EAAQqkB,IAAI4N,UACzDvzC,KAAKs6B,SAASqY,EAAQrxB,IAE1Bg0B,YAAa,SAASh0B,GAClB,IAAInT,EAASmT,EAAQnT,OACjB85C,EAAejoD,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAE7C,OADAld,EAAO+5C,QAAU,GAAK,WAAa5mC,EAAQwiB,SAAWmkB,EAAa7d,KAAK,UAAWj8B,EAAO+5C,SACnFD,GAEXrN,SAAU,WACN,IAAI5xB,EAAS,GACTm/B,EAAWnoD,KAAK+nD,cACpB,GAAI/nD,KAAKuiC,OAAO,qBACZ,IAAK,IAAI1K,EAAI,EAAGA,EAAIswB,EAAUtwB,IAC1B7O,EAAOX,KAAK,CACRyb,QAAS,SACTyP,SAAU1b,IAItB,OAAO7O,GAEXuzB,iBAAkB,SAASj7B,GACvB,GAAI,WAAaA,EAAQwiB,QACrB,OAAO9jC,KAAKmnD,mBAAmB7lC,EAAQnT,SAG/CivC,qBAAsB,SAAS9W,GAC3B,IAAIwU,EAAcxU,EAAEwU,YAChBuC,EAAc/W,EAAE+W,YAChBvC,EAAYvyC,UAAYuyC,EAAYsN,eAChCtN,EAAYvyC,WACZvI,KAAKqnD,oBAAqB,IAIlCrnD,KAAKs6B,SAASgM,IACV+W,EAAY7vC,OAAS6vC,EAAY9vC,UACjCvN,KAAKssC,gBAAgBW,SAG7Bob,kBAAmB,SAASC,GACxB,OAAOA,GAAkBA,EAAe/6C,SAE5Cg7C,sBAAuB,SAAS7X,GAC5B,IAAIb,EAAuB7vC,KAAKywC,uBAAuBC,GAAO,GAC1Db,GAAwBA,EAAqBjoB,SAC7CioB,EAAqBjsB,OAAO,IAAM8hC,IAAyBpjB,SAC3DuN,EAAuB7vC,KAAKywC,uBAAuBC,GACnDb,EAAqB2Y,QAAQ1mB,SAAS4jB,IAAyBvgB,IAAI,QAAS,IAAIsjB,aAAa/X,EAAMG,SAAS,IAAM7wC,KAAKqhC,gBAAgB2jB,QAG/I5P,YAAa,SAAS1E,EAAOpvB,GACrB,WAAaA,EAAQwiB,SAAW,WAAaxiB,EAAQnT,OAAO8B,WAC5DjQ,KAAKuoD,sBAAsB7X,GAE/B1wC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9BgmB,iBAAkB,SAASX,EAAOviC,EAAQ8iC,GACtC,IAAIyX,EAAoB1oD,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAKlD,MAJI,WAAald,EAAO8B,WACpBjQ,KAAKuoD,sBAAsB7X,GAE/B4V,EAA2BtmD,KAAM0wC,EAAOviC,GACjCu6C,GAEXjY,uBAAwB,SAASC,EAAOiY,GACpC,IAAI9Y,EAAuB7vC,KAAKs6B,SAASoW,GACzC,OAAOiY,EAAY9Y,EAAuBA,EAAqBjsB,OAAO,SAAW8hC,GAA0B,MAE/GkD,mBAAoB,WAChB,OAAO,GAEXC,oBAAqB,WACjB,IAAIxJ,EAAgBr/C,KAAK49C,kBACrBkL,EAAczJ,GAAiBA,EAAc9d,KAAK,IAAM6jB,IAC5D,OAAO0D,GAAeA,EAAYC,UAAUC,QAAQ,SAASjiC,EAAKkiC,GAC9D,OAAOliC,GAAM8b,EAAAA,EAAAA,IAAUomB,KACvB,IAAM,GAEdC,iBAAkB,SAAS9+B,GACvB,IAAI++B,EAAiBnpD,KAAKoxC,oBAC1B,OAAO+X,GAAkBA,EAAejkB,GAAG9a,IAE/CgnB,kBAAmB,SAAShnB,EAAOg/B,GAC/B,IACInB,EADArgB,EAAO5nC,KAEPiwC,EAAoBrI,EAAKiP,mBACzBsR,EAAWvgB,EAAKmgB,cACpB,GAAIngB,EAAKrF,OAAO,qBAAsB,CAClC,GAAI4lB,EAAW,MAAO13B,EAAAA,EAAAA,IAAUrG,KAAUqG,EAAAA,EAAAA,IAAU24B,IAAmB,CACnE,IAAIpgC,EAAS,GACT4tB,GAAiBnmB,EAAAA,EAAAA,IAAU24B,GAAmBnZ,EAAkBoZ,wBAAwBD,GAAiB,GAAQnZ,EAAkB6G,oBAMvI,OALA1lB,EAAAA,EAAAA,IAAKwlB,GAAiB,SAAS5iB,EAAG7lB,GAC9B,IAAIolC,GAAW9iB,EAAAA,EAAAA,IAAUrG,GAASA,EAAQ6lB,EAAkBuD,YAAYrlC,EAAOic,OAC/E69B,EAAergB,EAAKqY,gBAAgB1M,EAAUtD,EAAkB0H,gBAAgBxpC,EAAOic,MAAOmpB,IAC9F0U,GAAgBj/B,EAAOX,KAAK4/B,EAAatoB,IAAI,QAE1CkC,EAAAA,EAAAA,GAAE7Y,GACN,IAAKoB,GAASA,EAAQ+9B,EACzB,OAAOvgB,EAAKkY,gBAAgB11B,GAAS,KAIjDs9B,wBAAyB,SAAShX,GAC9B,IAAIgN,EAAY19C,KAAKy9C,aAAa/M,GAC9B4F,EAAO5F,EAAM3J,QAAQ,WACrBwM,EAAW+C,EAAK,GAAG/C,SACnBplC,EAASnO,KAAKkxC,WAAWqC,GAAUmK,GACvC,OAAOvvC,EAASA,EAAOic,OAAS,GAEpCq1B,sBAAuB,SAASjgB,EAAa+T,GACzC,IAAIplC,EAASnO,KAAKkxC,aAAa1R,GAC/B,OAAOrxB,EAASnO,KAAK62C,mBAAmBc,gBAAgBxpC,EAAOic,MAAOmpB,IAAa,GAEvF6L,gBAAiB,WACb,IAAIkK,EAAkBtpD,KAAKoxC,oBAC3B,OAAIkY,GAAmBA,EAAgB1hC,OAC5B5nB,KAAK++C,WAAWuK,GAEpBtpD,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCk+B,cAAe,SAASp7C,EAAQq7C,EAAgBC,GAC5C,IAAI5xB,EACA6xB,EAAuB,EACvBnW,EAAWplC,GAAUnO,KAAK62C,mBAAmBrD,YAAYrlC,EAAOic,OAChEtjB,EAAU9G,KAAKkxC,WAAW,IAAMqC,EAAW,EAAI,MAC/CoW,GAAiB,OAASx7C,QAAU,IAAWA,OAAS,EAASA,EAAOqC,cAAgB1J,EAAQ8gB,OAAS,EACzGgiC,EAAY,SAASz7C,GACrB,OAAOA,EAAOsC,iBAAmBtC,EAAOmC,eAAiBnC,EAAOqC,aAEpE,IAAKqnB,EAAI,EAAGA,EAAI/wB,EAAQ8gB,OAAQiQ,IACxB+xB,EAAU9iD,EAAQ+wB,KAClB6xB,IAGR,GAAIA,GAAwB,IAAMC,EAC9B,OAAO,EACJ,IAAKF,EACR,OAAQzpD,KAAKuiC,OAAO,0BAA4BviC,KAAK62C,mBAAmBgT,mBAAmB,qBAAuB17C,GAAUA,EAAOsC,gBAEvI,IAAKonB,EAAI,EAAGA,EAAI4xB,EAAe7hC,OAAQiQ,IAAK,CACxC,IAAIiyB,EAAgBL,EAAe5xB,GACnC,GAAIiyB,GAAiBA,EAAcP,cAAcp7C,EAAQq7C,GACrD,OAAO,EAGf,OAAO,GAEXnkB,gBAAiB,WACb,IAAIikB,EAAkBtpD,KAAKoxC,oBAC3B,GAAIkY,GAAmBA,EAAgB1hC,OAAQ,CAC3C,IAAI5E,EAAShjB,KAAK49C,kBAAkB56B,SACpC,MAAO,CACH9D,IAAK8D,EAAO9D,KAGpB,OAAO,MAEX+hC,QAAS,WACL,MAAO,WAEX8I,eAAgB,WACZ,IAAIT,EAAkBtpD,KAAKoxC,oBAC3B,OAAOkY,EAAkBA,EAAgB1hC,OAAS,GAEtD6Z,UAAW,WACP,OAAOzhC,KAAKuiC,OAAO,sBAEvBqH,cAAe,SAASnV,GACpB,OAAQA,EAAKnlB,MACT,IAAK,oBACL,IAAK,kBACL,IAAK,kBACDtP,KAAK8rC,aAAY,GAAM,GACvBrX,EAAKqV,SAAU,EACf,MACJ,QACI9pC,KAAKs6B,SAAS7F,KAG1BoO,UAAW,WACP,OAAO7iC,KAAKwsC,oBAEhBwd,oBAAqB,SAAS1oC,GAC1B,IAAIsmB,EAAO5nC,KACPmO,EAASmT,EAAQnT,OACrB,GAAImT,EAAQqkB,MAAQ,WAAarkB,EAAQqkB,IAAI7B,SAAW,mBAAqBxiB,EAAQqkB,IAAI7B,SAAU,CAC/F,IAAImmB,EAAiBriB,EAAKrF,OAAO,WACjC,GAAI0nB,GAAkB,SAAWA,EAAez1C,MAAQrG,GAAUA,EAAOyC,aAAc,CACnF,IAAIs5C,EAAc,SAASl/B,GACvBgoB,YAAY,WACRpL,EAAKiP,mBAAmBsT,gBAAgBh8C,EAAOic,MAAOY,EAAOo/B,SAAS9pD,WAG9E,MAAO,CAAC,CACJmP,KAAMw6C,EAAetkC,cACrBrlB,MAAO,MACPiH,SAAU,QAAU4G,EAAOkF,UAC3BhE,KAAMi2C,GACN4E,YAAaA,GACd,CACCz6C,KAAMw6C,EAAepkC,eACrBvlB,MAAO,OACPiH,SAAU,SAAW4G,EAAOkF,UAC5BhE,KAAMk2C,GACN2E,YAAaA,GACd,CACCz6C,KAAMw6C,EAAerkC,UACrBtlB,MAAO,OACPiH,UAAW4G,EAAOkF,UAClBhE,KAAMm2C,GACN0E,YAAaA,OAK7BnC,YAAa,WACT,OAAO/nD,KAAK62C,oBAAsB72C,KAAK62C,mBAAmBkR,eAE9DsC,eAAgB,SAAS7qB,EAAal/B,EAAOizC,GACzC,IACI1b,EACAsxB,EAFAvhB,EAAO5nC,KAGPmoD,EAAWvgB,EAAKmgB,cAChBjhD,EAAU8gC,EAAKiP,mBAAmB3F,aAClC/iC,EAASrH,GAAWA,EAAQ04B,GAC5B8qB,EAAWn8C,GAAUA,EAAOsE,QAAUtE,EAAOic,MAC7CmgC,EAAmB,SAASngC,EAAOjc,GAC/BA,EAAOyE,YAAc03C,IACrBnB,EAAejkB,GAAG9a,GAAO+a,IAAI,CACzBnmB,QAAS1e,IAET6N,EAAOsE,QACPm1B,EAAKyiB,eAAel8C,EAAOic,MAAO9pB,EAAOu3B,EAAI,KAIzD,IAAIpH,EAAAA,EAAAA,IAAU65B,GAEV,IADA/W,EAAWA,GAAY,EAClB1b,EAAI0b,EAAU1b,EAAIswB,EAAUtwB,IAC7BsxB,EAAiBvhB,EAAKkY,gBAAgBjoB,IACtCzG,EAAAA,EAAAA,IAAKwW,EAAKsJ,WAAWrZ,GAAI0yB,KA/YN,MC1ChBtE,GAAoB/X,MAAMiY,kBACzDqE,GAAAA,eAAwB,gBAAiBvE,I,iHCqDrCwE,GAA8B,CAAC,eAAgB,aAAc,QAAS,iBACtEC,GAAyB,CAAC,eAAgB,YAAa,OAAQ,WAAY,QAAS,UAAW,YAAa,gBAAiB,YAAa,aAAc,cAAe,0BAA2B,SAAS5iC,OAAO2iC,IAClNE,GAA6B,CAC7BhV,cAAc,EACdiV,cAAc,EACdC,qBAAqB,GAErBC,GAAuB,oBACvBC,GAAmBnkD,OAAOmkD,kBAAoB,iBAC9CC,GAA4B,cAC5BC,GAAS,wBACTC,GAAiB,EACVC,GAA0B,CACjCjF,eAAgB,WACZ,MAAO,CACHkF,qBAAsB,CAClBh7C,gBAAgB,EAChBI,aAAa,EACbI,cAAc,EACdV,cAAc,EACdyB,YAAY,EACZ2B,SAAUm2B,EAAAA,EAAAA,OAA2B,uBACrC73B,UAAW63B,EAAAA,EAAAA,OAA2B,yBAE1CvjC,uBAAuB,EACvBC,qBAAqB,EACrBU,mBAAoB,aACpBF,oBAAgB,EAChBK,iBAAa,EACbqkD,yBAAyB,EACzBvkD,aAAS,EACTwkD,iCAAiC,EACjCrkD,iBAAkB,KAClBK,6BAAyB,IAGjC0mC,YAAa,CACTlnC,QAAS0mC,GAAAA,WAAAA,QAA2B,WAChC,IAAI+d,EAAyB,CACzBh+C,SAAS,EACT0F,qBAAqB,GAErBu4C,EAAsB,CACtBC,OAAQ,CAAC,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,WAC1CC,OAAQ,CAAC,WAAY,cAAe,aAAc,WAAY,IAAK,MACnE1jC,KAAM,CAAC,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,WACxC2jC,SAAU,CAAC,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,YAE5CC,EAAuB,CACvBp4C,cAAc,EACdlB,YAAY,EACZD,SAAS,EACTc,WAAW,EACXE,WAAW,GAEXw4C,EAAqC,SAAS19C,GAC9CA,EAAO0D,iBAAmB1D,EAAO29C,yBAEjCC,EAAe,SAASnkB,EAAMokB,EAAeC,EAAwBC,GACrE,IAAIC,EAAsB,GAC1B,GAAIH,EAAe,EACX7S,EAAAA,EAAAA,IAAS6S,KACTA,EAAgB,CACZz6C,UAAWy6C,IAGnBpkB,EAAKwkB,QAAQJ,GACb,IAAIhjC,EAAS,GACb,GAAIgjC,EAAc3kB,QACdre,GAASqjC,EAAAA,GAAAA,IAAoBF,EAAqBH,OAC/C,CACHG,EAAsBvkB,EAAK0kB,kBAAkBN,GACzCC,GAA0BA,EAAuB38C,MAAQ28C,EAAuB16C,YAChFy6C,GAAgBpgC,EAAAA,EAAAA,GAAO,GAAIogC,EAAe,CACtCz6C,UAAW06C,EAAuB16C,aAG1C,IAAIg7C,EAA0B3kB,EAAK4kB,+BAA+BR,EAAeE,GAC5EF,EAAcl9C,OACfka,EAAS,CACLysB,SAAU,UAAU3tB,OAAOojC,QAGnCliC,GAASqjC,EAAAA,GAAAA,IAAoBrjC,EAAQuiC,IACrCc,EAAAA,GAAAA,IAAoBrjC,EAAQmjC,IAC5BE,EAAAA,GAAAA,IAAoBrjC,EAAQujC,IAC5BF,EAAAA,GAAAA,IAAoBrjC,EAAQgjC,IAC5BK,EAAAA,GAAAA,IAAoBrjC,EAAQ,CACxB8T,SAAU,OAMlB,OAHIkvB,EAAcn6C,mBAAqBm6C,EAAcF,yBACjDD,EAAmC7iC,GAEhCA,IAGXyjC,EAA2B,SAASA,EAAyB7kB,EAAM8kB,EAAgBR,GACnF,IAAIljC,EAAS,GAkBb,OAjBI0jC,IACAt7B,EAAAA,EAAAA,IAAKs7B,GAAiB,SAAStiC,EAAO4hC,GAClC,IAAIC,EAAyBrkB,EAAK+kB,mBAAqBC,EAAqBZ,EAAepkB,EAAK+kB,kBAAkBviC,KAAWwd,EAAK+kB,kBAAkBviC,GAChJjc,EAAS49C,EAAankB,EAAMokB,EAAeC,EAAwBC,GACnE/9C,IACI+9C,IACA/9C,EAAOyE,UAAYs5C,GAEvBljC,EAAOX,KAAKla,GACRA,EAAOrH,UACPkiB,EAASA,EAAOlB,OAAO2kC,EAAyB7kB,EAAMz5B,EAAOrH,QAASqH,WAC/DA,EAAOrH,QACdqH,EAAO0+C,YAAa,OAK7B7jC,GAEP8jC,EAAuB,SAASttB,EAAautB,GAC7C,IAAI/jC,EAAS,GACT0e,EAASqlB,EAAoBvtB,GACjC,MAAOkI,EACH1e,EAAOgkC,QAAQtlB,GACflI,EAAckI,EAAOtd,MACrBsd,EAASqlB,EAAoBvtB,GAEjC,OAAOxW,GAEPikC,EAA2B,SAASztB,EAAa0tB,EAAuBC,GACxE,IAAInkC,EAAS,GACT6nB,EAAWqc,EAAsB1tB,GACrC,GAAIqR,EACA,IAAK,IAAIhZ,EAAI,EAAGA,EAAIgZ,EAASjpB,OAAQiQ,IAAK,CACtC,IAAI1pB,EAAS0iC,EAAShZ,IACjBpH,EAAAA,EAAAA,IAAUtiB,EAAOmE,cAAenE,EAAO+E,kBACxC8V,EAAOX,KAAKla,GACRg/C,GAAah/C,EAAOsE,SACpBuW,EAASA,EAAOlB,OAAOmlC,EAAyB9+C,EAAOic,MAAO8iC,EAAuBC,MAKrG,OAAOnkC,GAEPokC,EAAoB,SAASxlB,EAAMz5B,GACnC,IACIrH,EADAkiB,EAAS,GAETqkC,EAAmBzlB,EAAK0lB,sBACxBC,EAAiB,SAAStmC,GAC1B,OAAOA,EAAKrU,YAAczE,EAAOyE,WAErC,GAAIy6C,EAAiBG,QAAS,CAC1B,IAAIhuB,EAAcoI,EAAK6lB,SAASpjC,QAAQlc,GACpCqxB,GAAe,IACfxW,EAAS,CAAC,WAAWlB,OAAO0X,EAAa,WAE1C,CACH14B,EAAU8gC,EAAK6lB,SAAS7pC,OAAO2pC,GAC/B,MAAOzmD,EAAQ8gB,SAAW,IAAM9gB,EAAQujB,QAAQlc,GAC5C6a,EAAOgkC,QAAQ,WAAWllC,OAAOhhB,EAAQujB,QAAQlc,GAAS,MAC1DA,EAASk/C,EAAiBN,oBAAoB5+C,EAAOic,OACrDtjB,EAAUqH,EAASy5B,EAAK6lB,SAAS7pC,OAAO2pC,GAAkB,GAGlE,OAAOvkC,EAAOH,KAAK,MAEnB6kC,EAAmB,SAASA,EAAiB9lB,EAAM0iB,GACnD,IAAI5U,EAAU,EACV5uC,EAAU8gC,EAAKyhB,wBAAwBiB,GAAU,GASrD,OARAl5B,EAAAA,EAAAA,IAAKtqB,GAAU,SAASktB,EAAG7lB,GACnBA,EAAOsE,QACPtE,EAAOunC,QAAUvnC,EAAOunC,SAAWgY,EAAiB9lB,EAAMz5B,EAAOic,OACjEsrB,GAAWvnC,EAAOunC,SAAW,GAE7BA,GAAW,KAGZA,GAEPiY,EAAmB,SAASrtD,GAC5B,IAAIkR,GAAW1C,EAAAA,EAAAA,IAAKxO,GAIpB,MAHI,WAAakR,GAAY,YAAcA,GAAY,WAAaA,GAAY,SAAWA,GAAY,WAAaA,IAChHA,OAAW,GAERA,GAEPo8C,EAAyB,SAASp8C,EAAUlR,GAC5C,OAAQkR,GACJ,IAAK,OACL,IAAK,WACD,OAAOq8C,GAAAA,EAAAA,2BAA6CvtD,GACxD,IAAK,SACD,IAAI64C,EAAAA,EAAAA,IAAS74C,GACT,MAAO,SAEX,IAAIyzC,EAAAA,EAAAA,IAAUzzC,GACV,OAAO,OAInBwtD,EAAoB,SAASxsC,EAAS9P,GACjC8P,EAAQysC,mBACL7e,EAAAA,WAAyB19B,KACzB8P,EAAQysC,iBAAmB,SAASztD,GAChC,OAAOutD,GAAAA,EAAAA,gBAAkCvtD,IAE7CghB,EAAQ4Q,eAAiB,SAAS5xB,GAC9B,OAAO64C,EAAAA,EAAAA,IAAS74C,GAASA,EAAQutD,GAAAA,EAAAA,cAAgCvtD,EAAON,KAAKguD,uBAGjF,WAAax8C,IACb8P,EAAQysC,iBAAmB,SAASztD,GAChC,IAAI2tD,EAAcvhB,WAAWpsC,GAC7B,OAAO4tD,MAAMD,GAAe3tD,EAAQ2tD,GAExC3sC,EAAQ4Q,eAAiB,SAAS5xB,EAAOu8B,GACrC,MAAI,WAAaA,EACNv8B,GAEJmwB,EAAAA,EAAAA,IAAUnwB,IAAU,WAAaN,KAAKguD,oBAAsB1tD,EAAM8/B,WAAa9/B,MAKlG6tD,EAAkC,SAAS7nB,GAC3C,OAAI,IAASA,EAAEhmC,MACJN,KAAKsT,UAAY,QACjB,IAAUgzB,EAAEhmC,MACZN,KAAK4R,WAAa,QAElB00B,EAAEpG,WAAa,IAG1BkuB,EAA6B,SAAS58C,GACtC,GAAI,YAAcA,EACd,OAAO28C,GAGXE,EAAsB,SAASzmB,IAC/BxW,EAAAA,EAAAA,IAAKwW,EAAK6lB,UAAW,SAASrjC,EAAOjc,GACjCA,EAAOic,MAAQA,MAEnBgH,EAAAA,EAAAA,IAAKwW,EAAK6lB,UAAW,SAASrjC,EAAOjc,IAC7BgiB,EAAAA,EAAAA,IAAShiB,EAAOyE,aAChBzE,EAAOyE,UAAYzE,EAAOyE,UAAUwX,WAG5CgH,EAAAA,EAAAA,IAAKwW,EAAK0mB,iBAAkB,SAASlkC,EAAOjc,GACxCA,EAAOic,QAAUA,EAAQ,OAG7BmkC,EAA2B,SAAS3mB,EAAM4mB,IAC1CC,EAAAA,EAAAA,IAAiB7mB,EAAK6lB,SAAU,aAAce,GAAgB,SAASrgD,GACnE,IAAIkE,EAAUlE,EAAOkE,QAErB,cADOlE,EAAOkE,QACPA,MAGXq8C,EAA+B,SAAS9mB,EAAMp0B,EAAc4N,GAC5D,IAEIjT,EAFAolC,GAAWpjB,EAAAA,EAAAA,IAAS3c,GAAgBA,EAAa+/B,SAAW,KAC5DzsC,EAAU,UAAYsa,EAAWwmB,EAAK+mB,kBAAoB,kBAAoBvtC,EAAWwmB,EAAKgnB,oBAAsBhnB,EAAKkP,kBAAkBvD,GAO/I,OALA//B,GAAe2c,EAAAA,EAAAA,IAAS3c,GAAgBA,EAAagsB,YAAchsB,EACnErF,EAASrH,EAAQ0M,GACbrF,GAAUA,EAAOW,OAASk8C,KAC1B78C,EAASy5B,EAAK6lB,SAAS7pC,QAAOm0B,GAAO5pC,EAAOW,OAASipC,EAAIjpC,OAAM,IAAMX,GAElEA,IAAUsiB,EAAAA,EAAAA,IAAUtiB,EAAOic,OAASjc,EAAOic,OAAS,GAG/D,SAASwiC,EAAqBz+C,EAAQ0gD,GAClC,OAAO1gD,GAAU0gD,GAAmBA,EAAgBv/C,QAAUnB,EAAOmB,MAAQnB,EAAOoD,aAAes9C,EAAgBt9C,YAAcpD,EAAOoD,WAAapD,EAAOmB,MAEhK,IAAIw/C,EAAiB,SAASlnB,GAC1B,IAOIz5B,EACA4gD,EACAl3B,EATAm3B,EAAmBpnB,EAAK+kB,kBACxBsC,EAA0BrnB,EAAKsnB,0BAA4B,GAC3DpoD,EAAU8gC,EAAK6lB,SACf0B,EAAkB,GAClBC,EAAgB,GAChBC,GAAsB,EACtBC,EAAyB,GAK7B,SAASC,EAAiBphD,EAAQ0gD,GAC9B,GAAKA,EAGL,IAAK,IAAIzkC,EAAQ,EAAGA,EAAQsgC,GAAuB9iC,OAAQwC,IAAS,CAChE,IAAI6L,EAAYy0B,GAAuBtgC,IACnCuS,EAAAA,EAAAA,IAAQ1G,EAAWg5B,IAA4B,IAG/C,aAAeh5B,EACf9nB,EAAO8nB,GAAa9nB,EAAO8nB,IAAc44B,EAAgB54B,IAClD0G,EAAAA,EAAAA,IAAQ1G,EAAWw0B,KAAgC,EACtDx0B,KAAa44B,IACb1gD,EAAO8nB,GAAa44B,EAAgB54B,KAGpC,4BAA8BA,GAAa44B,EAAgB54B,KAC3D9nB,EAAOqhD,+BAAiCrhD,EAAO8nB,IAAc,MAEjE9nB,EAAO8nB,GAAa44B,EAAgB54B,MAKhD,SAASw5B,EAAoBT,EAAkB7gD,GAG3C,IAFA,IAAIuhD,EAAKvhD,EAAOmB,MAAQnB,EAAOoD,UAC3BqV,EAAQuoC,EAAgBO,IAAO,EAC1B7X,EAAI,EAAGA,EAAImX,EAAiBpnC,OAAQiwB,IACzC,GAAI+U,EAAqBz+C,EAAQ6gD,EAAiBnX,IAAK,CACnD,IAAIjxB,EAKA,OAFAuoC,EAAgBO,GAAMP,EAAgBO,IAAO,EAC7CP,EAAgBO,KACT7X,EAJPjxB,IAQZ,OAAQ,EAEZ,GAAIooC,EAAkB,CAClB,IAAKn3B,EAAI,EAAGA,EAAI/wB,EAAQ8gB,OAAQiQ,IAC5Bk3B,EAAuBU,EAAoBT,EAAkBloD,EAAQ+wB,IACrEw3B,EAAsBA,GAAuBN,GAAwB,EACrEO,EAAuBjnC,KAAK0mC,GAEhC,IAAKl3B,EAAI,EAAGA,EAAI/wB,EAAQ8gB,OAAQiQ,IAC5B1pB,EAASrH,EAAQ+wB,GACjBk3B,EAAuBO,EAAuBz3B,IAC1C+P,EAAK+nB,eAAiBN,IACtBE,EAAiBphD,EAAQ6gD,EAAiBD,IAE1CA,GAAwB,IAAKt+B,EAAAA,EAAAA,IAAUu+B,EAAiBD,GAAsBa,cAC9ER,EAAcL,GAAwB5gD,EAEtCihD,EAAc/mC,KAAKla,GAG3B,IAAI0hD,GAAgB,EACpB,IAAKh4B,EAAI,EAAGA,EAAIm3B,EAAiBpnC,OAAQiQ,IAAK,CAC1C,IAAIi4B,EAAkBd,EAAiBn3B,GACnCi4B,EAAgBC,OAASN,EAAoB3oD,EAASgpD,GAAmB,IACzE3hD,EAAS49C,EAAankB,EAAMkoB,EAAgBC,OAC5CR,EAAiBphD,EAAQ2hD,GACzBV,EAAc/mC,KAAKla,GACf2hD,EAAgBC,MAAMjpD,UACtB+oD,GAAgB,IAIxBA,IACAxB,EAAoBzmB,GACpBwnB,EAAgB3C,EAAyB7kB,EAAMwnB,IAEnDY,EAAcpoB,EAAMwnB,KAGxBa,EAAgB,SAASroB,EAAMz5B,GAC/BkgD,EAAoBzmB,GACpB2mB,EAAyB3mB,EAAMz5B,GAC7B,SAASy5B,EAAM4mB,IACbp9B,EAAAA,EAAAA,IAAKwW,EAAK6lB,UAAW,SAASrjC,EAAOjc,IAC7BsiB,EAAAA,EAAAA,IAAUtiB,EAAOgF,aAAe+8C,EAAiB/hD,EAAOkF,mBACjDlF,EAAOgF,cAGtBs7C,EAAAA,EAAAA,IAAiB7mB,EAAK6lB,SAAU,YAAae,GAAgB,SAASrgD,GAClE,QAAQsiB,EAAAA,EAAAA,IAAUtiB,EAAOmE,aAAe49C,EAAiB/hD,EAAOkF,cAPtE,CASAu0B,EAAMz5B,GACRgiD,EAAsBvoB,GACpB,SAASA,EAAM4mB,GAOb,IANA,IAAI9iC,EACAvd,EACAiiD,EAAc,GACdpnC,EAAS,GACTqkC,EAAmBzlB,EAAK0lB,sBACxBxmD,EAAU8gC,EAAK6lB,SAAS7pC,QAAOzV,IAAWA,EAAOk5B,UAC5CxP,EAAI,EAAGA,EAAI/wB,EAAQ8gB,OAAQiQ,IAAK,CACrC1pB,EAASrH,EAAQ+wB,GACjB,IAAIw4B,EAAoBvD,EAAqBj1B,EAAGw1B,EAAiBN,qBACjE,GAAIsD,EAAkBzoC,OAAQ,CAC1B,IAAIwhC,EAAkBiH,EAAkBA,EAAkBzoC,OAAS,GAAGwC,MACtEgmC,EAAYhH,GAAmBgH,EAAYhH,IAAoB,GAC/DgH,EAAYhH,GAAiB/gC,KAAKla,QAElC6a,EAAOX,KAAKla,GAGpB,IAAKud,KAAO0kC,GACR3B,EAAAA,EAAAA,IAAiB2B,EAAY1kC,GAAM,eAAgB8iC,IAEvDC,EAAAA,EAAAA,IAAiBzlC,EAAQ,eAAgBwlC,GArB3C,CAsBA5mB,EAAMz5B,IAERmiD,EAAoB,SAAS1oB,GAC7BA,EAAK0oB,qBAGT,SAASN,EAAcpoB,EAAM9gC,GACzB8gC,EAAK6lB,SAAW3mD,EAChBwpD,EAAkB1oB,GAClBA,EAAK2oB,wBAET,IAAIC,EAAsB,SAAS5oB,EAAM6S,EAAYpsC,EAAYmxB,GAC7D,IAAIixB,EAAgB7oB,EAAK8oB,gBAAkB,CACvCrT,YAAa,CACTz1B,OAAQ,GAEZkzB,YAAa,CACTlzB,OAAQ,GAEZ4X,YAAaA,GAEjBnxB,EAAaA,GAAc,MAC3BA,EAAaA,EAAWmZ,MAAM,KAAK,GACnC,IAAIszB,EAAc2V,EAAc3V,YAC5BL,IAAeK,EAAYL,KAC3BK,EAAYL,IAAc,EAC1BK,EAAYlzB,UAEhB,IAAIy1B,EAAcoT,EAAcpT,YAC5BhvC,IAAegvC,EAAYhvC,KAC3BgvC,EAAYhvC,IAAc,EAC1BgvC,EAAYz1B,eAEZ,IAAW4X,GAAeA,IAAgBixB,EAAcjxB,oBACjDixB,EAAcjxB,YAEzBoI,EAAK8oB,eAAiBD,EACtBH,EAAkB1oB,IAElB+oB,EAAqB,SAAS/oB,GAC9B,IAkBItmB,EAlBAsvC,EAAoBhpB,EAAKrF,OAAO,qBAChCkuB,EAAgB7oB,EAAK8oB,eACrBG,EAAoB,CAAC,YAAa,SAAU,WAAY,WACxDjpB,EAAKkpB,kBAAoBlpB,EAAKY,kBAAoBioB,IAC9CG,IACAhpB,EAAKY,mBACLooB,GAAkBhlC,EAAAA,EAAAA,GAAO,CACrBka,UAAW8B,EAAK9B,WACjB2qB,IACH7oB,EAAKY,oBAETZ,EAAK8oB,oBAAiB,EAClBpvC,EAAUmvC,EAAcpT,YAAa/7B,GAAWuvC,EAAkB16B,MAAK7mB,GAAQgS,EAAQhS,KACvFs4B,EAAKmpB,SAELnpB,EAAKsW,eAAejR,KAAKwjB,KAKjCO,EAA8B,SAASppB,EAAMz5B,EAAQmE,EAAY2+C,GACjE,IAAIC,EAAmBD,GAAkB,EACzC,GAAI3+C,GAAc,EACT4+C,IACD/iD,EAAOgjD,cAAgBhjD,EAAOkF,eAE/B,CACH,IAAI+9C,EAAWxpB,EAAKrF,OAAO,gBACvBlvB,EAAYlF,EAAOgjD,cACvB,GAAI,WAAaC,EAAU,CACvB,IAAIC,EAAwBzpB,EAAK6lB,SAASt3B,MAAK4hB,GAAOA,IAAQ5pC,IAAUsiB,EAAAA,EAAAA,IAAUsnB,EAAI5kC,aAClFk+C,IACAh+C,OAAY,GAGpBlF,EAAOkF,UAAYA,IAGvBi+C,EAAoB,SAAS1pB,EAAMtmB,GACnC,IAAIhhB,EAAQghB,EAAQhhB,MAChB+N,EAAaiT,EAAQjT,WACrBkjD,EAAYjwC,EAAQiwC,UACpBC,EAAiBlwC,EAAQkwC,eACzBC,EAAiB,GAAG3pC,OAAO0pC,EAAgB,KAAK1pC,OAAOzZ,GACtDs8C,GAA2Bt8C,IAAeu5B,EAAK8pB,+BAAiCD,IACjF7pB,EAAK8pB,6BAA+BD,EACpC7pB,EAAK9B,UAAU6rB,qBAAqBF,EAAgBnxD,EAAOixD,GAC3D3pB,EAAK8pB,8BAA+B,IAGxCE,EAAmB,SAAShqB,EAAMz5B,EAAQE,EAAY/N,EAAOuxD,GAC7D,IAEI/qD,EACA2zC,EACAqX,EAJAC,GAAeC,EAAAA,EAAAA,IAAc3jD,GAC7BmxB,EAAcrxB,EAAOic,MAIzB,GAAI,IAAMiB,UAAUzD,OAChB,OAAOmqC,EAAa5jD,EAAQ,CACxB8jD,eAAe,IAGvB,IAAIV,EAAYQ,EAAa5jD,EAAQ,CACjC8jD,eAAe,IAEnB,GAAIV,IAAcjxD,EAAO,CACjB,eAAiB+N,GAAc,wBAA0BA,GACzDosC,EAAa,WACbuW,EAA4BppB,EAAMz5B,EAAQ7N,EAAOixD,IAEjD9W,EADO,cAAgBpsC,GAAc,cAAgBA,GAAc,uBAAyBA,EAC/E,UAEA,UAEjB,IAAI6jD,GAAeC,EAAAA,EAAAA,IAAc9jD,GACjC6jD,EAAa/jD,EAAQ7N,EAAO,CACxB2xD,eAAe,IAEnB,IAAIT,EAAiBpE,EAAkBxlB,EAAMz5B,GACzCy9C,EAAqBv9C,KACrB4hD,EAAcroB,EAAMz5B,GACpB7N,EAAQyxD,EAAa5jD,IAErB,SAAWE,GAAc,iBAAmBA,GAC5Cu5B,EAAKwqB,gBAETZ,GAAkBF,EAAkB1pB,EAAM,CACtC4pB,eAAgBA,EAChBnjD,WAAYA,EACZ/N,MAAOA,EACPixD,UAAWA,KAEV9gC,EAAAA,EAAAA,IAAU8gC,KAAe9gC,EAAAA,EAAAA,IAAUnwB,IAAU,IAAM+N,EAAWgc,QAAQ,YACvEwnC,GAAe,GAEdA,EAiBDvB,EAAkB1oB,KAhBdjL,EAAAA,EAAAA,IAAQtuB,EAAYq8C,IAA0B,GAAK,iBAAmBr8C,IACtEvH,EAAU8gC,EAAKrF,OAAO,WACtBuvB,EAAgBlqB,EAAKyqB,gBAAgBb,EAAgB1qD,IACjDqyC,EAAAA,EAAAA,IAAS2Y,KACTA,EAAgBhrD,EAAQ04B,GAAe,CACnCjuB,UAAWugD,IAGfA,GAAiBlF,EAAqBkF,EAAe3jD,IACrD+jD,EAAaJ,EAAexxD,EAAO,CAC/B2xD,eAAe,KAI3BzB,EAAoB5oB,EAAM6S,EAAYpsC,EAAYmxB,MAO9D,SAAS0wB,EAAiB78C,GACtB,MAAO,QAAUA,GAAa,SAAWA,EAE7C,IAAIi/C,EAAsB,SAAS5iD,EAAMpP,GACrC,IAAI6zB,EAAOn0B,KAAKuR,UAAUiW,MAAM,KAC5B+qC,EAAWp+B,EAAKvM,OAAS,EACzB5nB,KAAKkyB,iBACL5xB,EAAQN,KAAKkyB,eAAe5xB,IAEhC,IAAK,IAAIu3B,EAAI,EAAGA,EAAI06B,EAAU16B,IAAK,CAC/B,IAAIvoB,EAAO6kB,EAAK0D,GAChBnoB,EAAOA,EAAKJ,GAAQI,EAAKJ,IAAS,GAEtCI,EAAKykB,EAAKo+B,IAAajyD,GAEvBkyD,EAAwB,CAAC5qB,EAAM6qB,MAAoB7qB,EAAK6lB,SAAS7pC,QAAOzV,GAAUA,EAAOW,OAAS2jD,EAAc3jD,OAAM8Y,OACtH8qC,EAAmB,SAAS9qB,EAAMz5B,GAClC,IAAI7B,EAAas7B,EAAKrF,OAAO,cAC7B,OAAIp0B,EAAOk5B,UAAYmrB,EAAsB5qB,EAAMz5B,KAAYA,EAAO8D,cAC3D3F,EAAa,QAAU,OAE3B6B,EAAO8D,eAEd0gD,EAAuB,SAAS7rD,EAAS8rD,EAAe9jD,EAAM0wB,GAC9D,IAAIqzB,EACA1K,EAAWnoD,KAAK+nD,cAChBG,EAAUphD,EAAQ04B,IAAgB14B,EAAQ04B,GAAa0oB,QACvD4K,EAAsBF,EAAchvC,QAAOzV,GAAUA,EAAOW,OAASA,IAgBzE,OAfAhI,EAAQ+0C,SAAQ,CAAC1tC,EAAQic,KACjBjc,EAAOW,OAASA,IAChB+jD,EAAoBzoC,EACpB89B,EAAUphD,EAAQsjB,EAAQ,GAAKtjB,EAAQsjB,EAAQ,GAAG89B,QAAUC,MAGhED,EAAU,IACV4K,GAAsB9gC,EAAAA,EAAAA,IAAI8gC,GAAsB,SAASC,GACrD,OAAOnnC,EAAAA,EAAAA,GAAO,GAAImnC,EAAc,CAC5B7K,QAASA,QAIrB4K,EAAoB9F,QAAQv5B,MAAMq/B,GAAqBriC,EAAAA,EAAAA,IAAUoiC,GAAqB,CAACA,EAAmB,GAAK,CAACrzB,EAAa,IAC7H14B,EAAQk2C,OAAOvpB,MAAM3sB,EAASgsD,GACvB5K,GAAW,GAElB8K,EAAiB,SAASvH,EAAQwH,GAClC,IAAIC,EAAMzH,EAASA,EAAOrrB,WAAa,IACvC,MAAO8yB,EAAItrC,OAASqrC,EAChBC,EAAM,IAAMA,EAEhB,OAAOA,GAEPC,EAAe,CAACvrB,EAAM9gC,EAASssD,EAAgBC,KAa/C,IAZA,IAAIllD,EACAmlD,EACAtqC,EAASliB,EAAQijB,QAAQiI,KAAI7jB,IAAUyd,EAAAA,EAAAA,GAAO,GAAIzd,KAClDolD,EAAiB3rB,EAAK4rB,kBACtBC,EAAwBL,EAAerpC,QAAQiI,KAAI7jB,IAAUyd,EAAAA,EAAAA,GAAO,CACpE5Z,MAAOuhD,GACRplD,KACCulD,EAAwBvlD,GAAUilD,EAAepK,QAAO,CAAChgC,EAAQypC,EAAeroC,KAChF,IAAIupC,EAAaN,GAAgBllD,EAAOW,OAASk8C,GAA4B,SAAW78C,EAAOW,KAC/F,OAAO2jD,EAAc3jD,OAAS6kD,GAAclB,EAAcprB,UAAYl5B,EAAOk5B,QAAUjd,EAAQpB,KAC/F,GACAukC,EAAiBkF,GAAiBA,EAAcprB,UAAY+rB,EAAeE,GAAoBjsB,QAC1FxP,EAAI,EAAGA,EAAI/wB,EAAQ8gB,OAAQiQ,IAGhC,GAFA1pB,EAASrH,EAAQ+wB,GACjBy7B,EAAqBnlD,IAAWA,EAAOW,MAAQX,EAAOk5B,SAAWqsB,EAAsBvlD,IAAW,EAC9FmlD,GAAsB,EACtB,GAAID,EACArqC,EAAO6O,IAAKjM,EAAAA,EAAAA,GAAO,CACf5Z,MAAOuhD,GACRH,EAAeE,GAAqBnlD,GACnCA,EAAOW,OAASk8C,KAChByI,EAAwBA,EAAsB7vC,OAAO2pC,QAEtD,CACH,IAAIvB,EAAgB,CAChBx4C,aAAcrF,EAAOqF,aACrB4W,MAAOjc,EAAOic,MACdqrB,SAAUtnC,EAAOsnC,SACjBplC,YAAa,IAAMlC,EAAOmE,WAC1B7B,gBAAiB,IAAMtC,EAAOmE,WAC9BA,WAAYnE,EAAOmE,YAEvB0W,EAAO6O,IAAKjM,EAAAA,EAAAA,GAAO,GAAIzd,EAAQilD,EAAeE,GAAqBnlD,EAAOW,OAASk8C,IAA6BgB,GAO5H,OAHIllD,EAAQ8gB,QAAUyrC,GAAgBI,EAAsB7rC,SACxDoB,EAASA,EAAOlB,OAAO2rC,IAEpBzqC,GAEP4qC,EAAgB,CAAChsB,EAAMz5B,KAAWsiB,EAAAA,EAAAA,IAAUtiB,EAAO6D,SAAW7D,EAAOW,KAAOX,EAAO6D,MAAQ41B,EAAK4rB,kBAChGrD,EAAwBvoB,IACxBA,EAAKisB,uBAAoB,GAEzBC,EAAa,CAAChtD,EAASitD,KACvB,IACI5lD,EADA6lD,GAAuB7a,EAAAA,EAAAA,IAAS4a,IAAeA,EAAWzpC,OAAO,EAAGypC,EAAW1pC,QAAQ,MAE3F,QAAI,IAAW0pC,EAcf,OAXIC,IACAD,EAAaA,EAAWzpC,OAAO0pC,EAAqBpsC,OAAS,IAE7DosC,EACA7lD,EAASrH,EAAQ8c,QAAOzV,GAAU,GAAKA,EAAO6lD,KAA0BD,IAAY,GAEpF,CAAC,QAAS,OAAQ,YAAa,WAAW59B,MAAK9nB,IAC3CF,EAASrH,EAAQ8c,QAAOzV,GAAUA,EAAOE,KAAgB0lD,IAAY,KAC5D5lD,KAGVA,GAEX,MAAO,CACH8lD,wBAAyB,WACrB,MAAO,CACHnlD,KAAM,SACNu4B,QAAS,SACT75B,MAAO,OACP4B,SAAU07C,GACV56C,cAAc,EACdI,eAAe,EACfM,cAAc,EACdF,eAAe,EACfD,iBAAiB,EACjBD,aAAa,IAGrB0jD,eAAgB,SAAS7sD,GACrB,IAAI8sD,EACA/2C,EAAQ,GAeZ,OAdI/V,GAAcA,EAAW+V,QAAQwK,OAAS,IAC1CusC,EAAcjlB,EAAAA,qBAAmC7nC,EAAWwc,SAAS+D,OACrExK,EAAQ,SAASg3C,EAAkBh3C,EAAO+2C,GACtC,IAAK/2C,IAAU+2C,EACX,OAAO/2C,EAEX,IAAK,IAAIya,EAAI,EAAGA,EAAIza,EAAMwK,OAAQiQ,IAAK,CACnC,IAAIw8B,EAAaD,EAAkBh3C,EAAMya,GAAGza,OAASA,EAAMya,GAAGy8B,eAAgBH,EAAc,GAC5F,GAAIE,GAAcA,EAAWzsC,OACzB,OAAOysC,GAPX,CAUNhtD,EAAW+V,QAAS+2C,IAAgB,IAEnC/2C,GAEXmrB,eAAgB,YACXvoC,KAAK0xD,8BAAgCf,EAAmB3wD,OAE7DipC,KAAM,WACF,IAAIniC,EAAU9G,KAAKuiC,OAAO,WAC1BviC,KAAKsuD,gBAAkBtuD,KAAKsuD,iBAAmB,GAC/CtuD,KAAKytD,SAAWztD,KAAKytD,UAAY,GACjCztD,KAAKu0D,wBAA0BztD,EAC3B9G,KAAKu0D,uBACLvE,EAAchwD,KAAM8G,EAAU2lD,EAAyBzsD,KAAM8G,GAAW,IACxEgoD,EAAe9uD,OAEfgwD,EAAchwD,KAAMA,KAAK2sD,kBAAoBF,EAAyBzsD,KAAMA,KAAK2sD,mBAAqB3sD,KAAKytD,UAC5G,SAAS7lB,GACR,IAAItmB,EAAUsmB,EAAKqsB,0BACnBrsB,EAAK4sB,iBAAiBlzC,GAFvB,CAGDthB,MACEA,KAAKy0D,mBACLz0D,KAAK00D,gBAAgB10D,KAAK2jC,aAAa,GAEvCssB,EAAcjwD,MAElBA,KAAKoyD,iBAETzpB,cAAe,WACX,MAAO,CAAC,mBAEZ0pB,gBAAiB,SAASl+B,EAAMrtB,GAC5B,IAAIqH,EACAwmD,EAAgB,GAoCpB,OAnCAxgC,EAAK/K,QAAQ6hC,IAAS,SAASj3B,EAAGwL,GAE9B,OADAm1B,EAActsC,KAAKuI,SAAS4O,IACrB,MAEPm1B,EAAc/sC,SAEVzZ,EADArH,EACS6tD,EAAc3L,QAAQ,SAAS76C,EAAQic,GAC5C,OAAOjc,GAAUA,EAAOrH,SAAWqH,EAAOrH,QAAQsjB,KAClD,CACAtjB,QAASA,IAGJ,SAAS8gC,EAAM+sB,GACpB,IAAI3rC,EACAliB,EACAumD,EAAmBzlB,EAAK0lB,sBACxBC,EAAiB,SAASp/C,GAC1B,IAAIyE,EAAYoW,EAASA,EAAOoB,WAAQ,EACxC,OAAOjc,EAAOyE,YAAcA,GAEhC,GAAIy6C,EAAiBG,QACjBxkC,EAAS4e,EAAK6lB,SAASkH,EAAc,QAClC,CACH7tD,EAAU8gC,EAAK6lB,SAAS7pC,OAAO2pC,GAC/B,IAAK,IAAI11B,EAAI,EAAGA,EAAI88B,EAAc/sC,OAAQiQ,IACtC7O,EAASliB,EAAQ6tD,EAAc98B,IAC3B7O,IACAliB,EAAU8gC,EAAK6lB,SAAS7pC,OAAO2pC,IAI3C,OAAOvkC,EAnBF,CAoBPhpB,KAAM20D,IAGTxmD,GAEXy7B,cAAe,SAASnV,GACpB,IAAImgC,EACJ,OAAQngC,EAAKnlB,MACT,IAAK,0BACDmlB,EAAKqV,SAAU,EACf,MACJ,IAAK,aACGrV,EAAKn0B,QAAUm0B,EAAKogC,eAAkB70D,KAAKuiC,OAAO,YAAgBx7B,MAAM2iB,QAAQ+K,EAAKn0B,QAAWyG,MAAM2iB,QAAQ+K,EAAKogC,iBACnH70D,KAAKytD,SAAW,IAEpB,MACJ,IAAK,UACDmH,EAA0B50D,KAAK0xD,6BAC/Bj9B,EAAKqV,SAAU,EACV9pC,KAAK0xD,+BACFj9B,EAAKnlB,OAASmlB,EAAKqgC,UACnB90D,KAAK2sD,kBAAoB,KACzB3sD,KAAKkvD,yBAA2B,KAChClvD,KAAKipC,SAELjpC,KAAKo9C,qBAAqB3oB,GAC1BmgC,GAA0B,IAG9BA,GACA50D,KAAK+0D,qBAAqBtgC,GAE9B,MACJ,IAAK,uBACL,IAAK,kBACL,IAAK,sBACL,IAAK,wBACL,IAAK,eACL,IAAK,WACL,IAAK,aACL,IAAK,kCACL,IAAK,mBACL,IAAK,sBACL,IAAK,0BACL,IAAK,qBACL,IAAK,iBACL,IAAK,cACDA,EAAKqV,SAAU,EACf,IAAImlB,EAA0B,gBAAkBx6B,EAAKqgC,UAAY,CAAC,SAClE90D,KAAK+wD,OAAO9B,GACZ,MACJ,IAAK,aACDjvD,KAAK+wD,SACL,MACJ,QACI/wD,KAAKs6B,SAAS7F,KAG1B2oB,qBAAsB,SAAS3oB,GAC3B,IAAIugC,EAAoB,GACpB7mD,EAASnO,KAAKqyD,gBAAgB59B,EAAKqgC,UACnCG,EAAmBxgC,EAAKqgC,SAAS1rC,QAAQ6hC,GAAQ,IACjD98C,IACI8mD,EACAD,EAAkBC,GAAoBxgC,EAAKn0B,MAE3C00D,EAAoBvgC,EAAKn0B,MAE7BN,KAAK0xD,6BAA+Bj9B,EAAKqgC,SACzC90D,KAAK0gD,aAAavyC,EAAOic,MAAO4qC,GAChCh1D,KAAK0xD,8BAA+B,IAG5CqD,qBAAsB,SAAStgC,GAC3B,IAAIqR,EAAY9lC,KAAK8lC,UACjB,UAAYrR,EAAKqgC,SAAS1rC,QAAQ6hC,GAAQ,KAAOnlB,EAAU0C,mBAC3D1C,EAAU8F,gBAAiB,IAGnC1C,cAAe,WACX,MAAO,CAAC,YAAa,eAAgB,eAAgB,cAAe,eAAgB,gBAAiB,oBAAqB,0BAE9HwrB,gBAAiB,SAASrtD,EAAY6tD,GAClC,IAAIC,EAAqB9tD,GAAcA,EAAWwgD,WAElD,GADA7nD,KAAK2jC,YAAct8B,GACdrH,KAAKy0D,oBAAsB,IAAMz0D,KAAKo1D,yBAA2BF,GAAiBl1D,KAAKuiC,OAAO,mCAAoC,CACnI,GAAI4yB,EAAoB,CACpB,IAAKn1D,KAAKu0D,sBAAuB,CAC7B,IAAIc,EAAwB,SAASztB,EAAMvgC,GAKvC,IAJA,IACI4uB,EADAq/B,EAAa1tB,EAAKssB,eAAe7sD,GAEjCkuD,EAAkB,GAClBvsC,EAAS,GACJ6O,EAAI,EAAGA,EAAIy9B,EAAW1tC,OAAQiQ,IACnC,GAAIy9B,EAAWz9B,GACX,IAAK5B,KAAaq/B,EAAWz9B,IACpBC,EAAAA,EAAAA,IAAWw9B,EAAWz9B,GAAG5B,MAAeu/B,GAAAA,EAAAA,UAA0BF,EAAWz9B,GAAG5B,MACjFs/B,EAAgBt/B,IAAa,GAK7C,IAAKA,KAAas/B,EACd,GAAI,IAAMt/B,EAAU5L,QAAQ,MAAO,CAC/B,IAAIlc,EAAS49C,EAAankB,EAAM3R,GAChCjN,EAAOX,KAAKla,GAGpB,OAAO6a,EApBiB,CAqB1BhpB,KAAMqH,GACJguD,EAAsBztC,SACtBooC,EAAchwD,KAAMq1D,GACpBr1D,KAAKo1D,wBAA0Bp1D,KAAKytD,SAAS7lC,OAC7CknC,EAAe9uD,OAGvB,OAAOA,KAAKy1D,cAAcpuD,EAAY6tD,GAEtCl1D,KAAKy0D,oBAAqB,OAE3B,GAAIU,IAAuBn1D,KAAK01D,uBAAsB,IAAS11D,KAAKuwD,sBAAsBlpD,GAG7F,OAFAmpD,EAAoBxwD,KAAM,WAC1B2wD,EAAmB3wD,OACX,IAAIqtB,EAAAA,IAAUY,SAASQ,WAGvCknC,MAAO,WACH31D,KAAK2jC,YAAc,KACnB3jC,KAAKy0D,oBAAqB,EAC1Bz0D,KAAKo1D,6BAA0B,EAC/Bp1D,KAAK+wD,UAETT,kBAAmB,WACftwD,KAAK41D,qBAAkB,EACvB51D,KAAK61D,mBAAgB,EACrB71D,KAAK81D,eAAY,EACjB3F,EAAsBnwD,OAE1B+wD,OAAQ,SAAS9B,GACbjvD,KAAK2sD,kBAAoB3sD,KAAK+1D,eAC9B/1D,KAAKkvD,yBAA2BD,GAA2B,KAC3DjvD,KAAKipC,OACDgmB,IACAjvD,KAAKkvD,yBAA2B,OAGxC4B,cAAe,WACX,QAAS9wD,KAAKytD,SAAS7lC,UAAY5nB,KAAKuiC,OAAO,YAEnDyzB,oBAAqB,WACjB,OAAOh2D,KAAKy0D,oBAEhBnI,kBAAmB,SAASn+C,GACxB,IAAIi9C,IAAyBj9C,IAAWA,EAAOW,OAAS9O,KAAKuiC,OAAO,yBAA2B,GAC3F0zB,EAAkBj2D,KAAKuiC,OAAO,aAAe,GAC7C2zB,EAAoBl2D,KAAKuiC,OAAO,eAAiB,GACrD,OAAO3W,EAAAA,EAAAA,GAAO,CACVvb,YAAarQ,KAAKuiC,OAAO,wBACzB7xB,cAAe1Q,KAAKuiC,OAAO,6BAA0B,EACrD9xB,gBAAiBzQ,KAAKuiC,OAAO,yBAC7B5vB,SAAU3S,KAAKuiC,OAAO,kBACtB/0B,MAAOxN,KAAKuiC,OAAO,eACnB1xB,gBAAiBolD,EAAgB72C,cACjCD,gBAAiB82C,EAAgB92C,gBACjC7O,cAAe4lD,EAAkB11C,qBAAuB01C,EAAkB3oD,SAAW0oD,EAAgB52C,oBACtG+rC,IAEPvB,mBAAoB,SAASx7C,GACzB,IAAK,IAAIwpB,EAAI,EAAGA,EAAI73B,KAAKytD,SAAS7lC,OAAQiQ,IACtC,GAAI73B,KAAKytD,SAAS51B,GAAGxpB,GACjB,OAAO,GAInBqnD,sBAAuB,SAASS,GAC5B,IAAIrvD,EAAU9G,KAAKytD,SACnB,IAAK3mD,EAAQ8gB,OACT,OAAO,EAEX,IAAK,IAAIiQ,EAAI,EAAGA,EAAI/wB,EAAQ8gB,OAAQiQ,IAChC,IAAK/wB,EAAQ+wB,GAAGtmB,WAAazK,EAAQ+wB,GAAG9mB,qBAAuBjK,EAAQ+wB,GAAGu+B,8BAGrEtvD,EAAQ+wB,GAAGrmB,UAAY2kD,GAAoBrvD,EAAQ+wB,GAAGk2B,uBAAoB,IAAWjnD,EAAQ+wB,GAAGm2B,qBACjG,OAAO,EAGf,OAAO,GAEX9c,WAAY,WACR,OAAOlxC,KAAKytD,UAEhB4I,kBAAmB,WACf,OAAOr2D,KAAKkxC,aAAa/a,MAAM,SAAShoB,GACpC,OAAOA,EAAOsE,WAGtBk8C,gBAAiB,WACb,IAAI3lC,EAAS,GAMb,OALAoI,EAAAA,EAAAA,IAAKpxB,KAAKytD,UAAW,YACbh9B,EAAAA,EAAAA,IAAUzwB,KAAKsS,cACf0W,EAAOhpB,KAAKsS,YAActS,SAG3BgpB,GAEX8tB,kBAAmB,SAASvD,GAGxB,OAFAvzC,KAAK41D,gBAAkB51D,KAAK41D,iBAAmB51D,KAAKs2D,yBACpD/iB,GAAW9iB,EAAAA,EAAAA,IAAU8iB,GAAYA,EAAWvzC,KAAK41D,gBAAgBhuC,OAAS,EACnE5nB,KAAK41D,gBAAgBriB,IAAa,IAE7CgjB,gBAAiB,SAAShjB,GAGtB,OAFAvzC,KAAK61D,cAAgB71D,KAAK61D,eAAiB71D,KAAKw2D,uBAChDjjB,GAAW9iB,EAAAA,EAAAA,IAAU8iB,GAAYA,EAAWvzC,KAAK61D,cAAcjuC,OAAS,EACjE5nB,KAAK61D,cAActiB,IAAa,IAE3CkjB,oBAAqB,WACjB,OAAOz2D,KAAKkxC,aAAattB,QAAOqD,IAASA,EAAK1V,WAAa0V,EAAK3X,QAAU2X,EAAK7W,gBAAkB6W,EAAK1W,wBAAuByhB,KAAI/K,IAC7H,IAAI9N,GAAQyS,EAAAA,EAAAA,IAAO,EAAM,GAAI3E,GAK7B,OAJKwJ,EAAAA,EAAAA,IAAUtX,EAAM5H,aACjB4H,EAAM5H,UAAY4H,EAAM7J,MAE5B6J,EAAMtH,iBAAmBoV,EAAKpV,mBAAqBoV,EAAK6kC,wBAA0B3yC,EAAMtH,iBAAmB,KACpGsH,MAGf+iC,qBAAsB,WAClB,OAAO,GAEXsa,qBAAsB,WAClB,IAOIE,EACAC,EACAC,EATA5tC,EAAS,GACTm/B,EAAWnoD,KAAK+nD,cAChBwL,EAAiBvzD,KAAKwzD,kBACtBqD,EAAoB,CACpBxvB,QAAS,eAETyvB,EAAqB,EAIzB,GAAIvD,EACA,IAAK,IAAI17B,EAAI,EAAGA,GAAKswB,EAAUtwB,IAAK,CAChC6+B,EAAsB,EACtBE,EAAoB,KACpBD,EAAyB,KAEzB,IADA,IAAI/f,EAAiB52C,KAAK82C,kBAAkBjf,GAAG,GACtCggB,EAAI,EAAGA,EAAIjB,EAAehvB,OAAQiwB,IAAK,CAC5C,IAAIkf,EAAangB,EAAeiB,EAAI,GAChC1pC,EAASyoC,EAAeiB,GACvB1pC,EAAO6D,MAYD+kD,GAAcA,EAAW/kD,OAAS0gD,EAAiB1yD,KAAM+2D,KAAgBrE,EAAiB1yD,KAAMmO,IAClGsiB,EAAAA,EAAAA,IAAUkmC,KACXA,EAAyB9e,GAG7B+e,EAAoBzoD,EAAO8D,eAhBvB,IAAM4lB,IACF1pB,EAAOsE,QAAUtE,EAAOunC,QACxBohB,GAAsB3oD,EAAOunC,QAE7BohB,KAGRJ,KACKjmC,EAAAA,EAAAA,IAAUkmC,KACXA,EAAyB9e,IAUrC,GAAI,IAAMhgB,IAAM,IAAM6+B,GAAuBA,GAAuB9f,EAAehvB,QAC/E,MAAO,IAEN6I,EAAAA,EAAAA,IAAUkmC,KACXA,EAAyB,UAAYC,EAAoB,EAAIhgB,EAAehvB,QAEhFoB,EAAO6O,GAAK+e,EAAe7sB,MAAM,GAC5B8sC,EAAkBnhB,UACnBmhB,EAAkBnhB,QAAUohB,GAEhC9tC,EAAO6O,GAAGmlB,OAAO2Z,EAAwBD,EAAqBG,GAGtE,OAAO7tC,EAAOgJ,KAAIlrB,GAAWA,EAAQkrB,KAAI7jB,IACrC,IAAI6oD,GAAY/nB,EAAAA,EAAAA,GAAS,GAAI9gC,GAI7B,OAHI6oD,EAAUvhB,WACVuhB,EAAUvhB,UAAY,UAEnBuhB,QAGfxD,gBAAiB,WACb,IAAID,EAAiBvzD,KAAKuiC,OAAO,wBAOjC,OANCgxB,IAAkBniC,EAAAA,EAAAA,IAAKpxB,KAAKytD,UAAW,SAASz5B,EAAG7lB,GAChD,GAAIA,EAAO6D,MAEP,OADAuhD,GAAiB,GACV,KAGRA,GAEX0D,sBAAuB,WACnB,OAAOj3D,KAAK2uD,mBAEhBuI,iBAAkB,WACd,IACInE,EADAH,EAAgB5yD,KAAKi3D,wBAErBE,EAAmBvE,EAAchvC,QAAOzV,GAAU,IAAMA,EAAOmE,aAAY,GAC3E8kD,EAA0BD,GAAoBA,EAAiBnlD,MAC/DuhD,EAAiBvzD,KAAKwzD,kBAc1B,OAbIZ,EAAchrC,SACdmrC,EAAe/yD,KAAK0gD,aAAa,mBAErCkS,GAAgB5gC,EAAAA,EAAAA,IAAI4gC,GAAezkD,IAAUyd,EAAAA,EAAAA,GAAO,GAAIzd,EAAQ,CAC5DwnC,aAAc,KACdhjC,SAAU,KACVtB,cAAeof,EAAAA,EAAAA,IAAUtiB,EAAOmE,YAAoC,KAAtBnE,EAAOkD,aACrDkB,mBAAoB,KACpBP,UAAQye,EAAAA,EAAAA,IAAUtiB,EAAOmE,cAAgB8kD,IAA0B7D,GACpER,EAAc,CACb3oC,MAAOjc,EAAOic,MACdtb,KAAMX,EAAOW,MAAQk8C,OAElB4H,GAEXtF,oBAAqB,WACjB,IAAKttD,KAAK6zD,kBAAmB,CACzB,IAAI/sD,EAAU9G,KAAKytD,SACfP,EAAwB,GACxBH,EAAsB,GACtBS,GAAU,EACd1mD,EAAQ+0C,SAAS,SAAS1tC,GACtB,IAAIyE,EAAYzE,EAAOyE,UACnBykD,GAAclnC,EAAAA,EAAAA,IAASvd,GAAaA,EAAUwX,MAAQxX,EACtD80B,EAAS5gC,EAAQuwD,GACjBlpD,EAAO0+C,aACPW,GAAU,GAEVr/C,EAAOunC,UACPvnC,EAAOunC,aAAU,GAEjBvnC,EAAO+5C,UACP/5C,EAAO+5C,aAAU,GAEjBxgB,EACAqlB,EAAoB5+C,EAAOic,OAASsd,EAEpC2vB,GAAe,EAEnBnK,EAAsBmK,GAAenK,EAAsBmK,IAAgB,GAC3EnK,EAAsBmK,GAAahvC,KAAKla,MAE5CnO,KAAK6zD,kBAAoB,CACrBrG,QAASA,EACTN,sBAAuBA,EACvBH,oBAAqBA,GAG7B,OAAO/sD,KAAK6zD,mBAEhByD,iBAAkB,SAASnpD,GACvB,OAAOA,EAAOZ,SAAWvN,KAAKu3D,sBAAsBppD,EAAOic,QAE/DksC,uBAAwB,WACpB,IACIz+B,EAQA2/B,EATA5vB,EAAO5nC,KAEPgpB,EAAS,GACTyuC,EAAsB,EACtBC,EAAuB,EACvBvP,EAAWvgB,EAAKmgB,cAChB4P,EAAyB,GACzBC,EAAyB,GACzBC,EAAyB,EAEzBvrD,EAAas7B,EAAKrF,OAAO,cACzB8qB,EAAmBzlB,EAAK0lB,sBACxBsF,EAAgBO,EAAavrB,EAAMA,EAAKsvB,mBAAoBtvB,EAAK6lB,UACjE3mD,EAAUqsD,EAAavrB,EAAMA,EAAK6lB,SAAU7lB,EAAK0mB,iBAAiB,GAClEwJ,EAAoB,SAASrM,GAC7B,IAAI5zB,EACJ,IAAKA,EAAI,EAAG4zB,EAAS,EAAG5zB,IACpB4zB,GAAU,GAEd,OAAO5zB,EALa,CAMtB/wB,EAAQ8gB,QAqBV,IApBE,SAASggB,EAAM9gC,EAASumD,GAEtB,IADA,IAAInF,EACKrwB,EAAI,EAAGA,EAAI/wB,EAAQ8gB,OAAQiQ,IAAK,CACrC,IAAI1pB,EAASrH,EAAQ+wB,IACjB1pB,EAAOZ,SAAWY,EAAOk5B,WACrBl5B,EAAOsE,SACPtE,EAAOunC,QAAUvnC,EAAOunC,SAAWgY,EAAiB9lB,EAAMz5B,EAAOic,QAEhEjc,EAAOsE,QAAWtE,EAAOunC,UAC1BwS,EAAUtgB,EAAKmgB,cACV55C,EAAOk5B,UAAa5W,EAAAA,EAAAA,IAAUtiB,EAAOmE,cAAenE,EAAO+E,kBAC5Dg1C,GAAW4E,EAAqB3+C,EAAOic,MAAOijC,EAAiBN,qBAAqBnlC,QAEpFsgC,EAAU,IACV/5C,EAAO+5C,QAAUA,MAdnC,CAmBAtgB,EAAM9gC,EAASumD,GACZx1B,EAAI,EAAGA,EAAIswB,EAAUtwB,IACtB7O,EAAO6O,GAAK,GACZ+/B,EAAuB//B,GAAK,CAAC,IAC7B8/B,EAAuB9/B,GAAK,CAAC,GAAI,GAAI,IA8EzC,OA5EAzG,EAAAA,EAAAA,IAAKtqB,GAAU,WACX,IACIixD,EADAvkD,EAAexT,KAAKwT,aAEpB68C,EAAoBvD,EAAqB9sD,KAAKoqB,MAAOijC,EAAiBN,qBACtEx/C,EAAUq6B,EAAK0vB,iBAAiBt3D,MACpC,GAAIuN,MAAakjB,EAAAA,EAAAA,IAAUzwB,KAAKsS,aAAetS,KAAKkT,iBAAkB,CAClE,IAAIqgC,EAAW8c,EAAkBzoC,OAqBjC,GApBIpU,EAAe,GACfA,GAAgBA,EAChBukD,EAAiBH,EAAuBrkB,KAExCvzC,KAAKgS,MAAQq+C,EAAkBzoC,OAASyoC,EAAkB,GAAGr+C,MAAQhS,KAAKgS,MAC1EhS,KAAKiS,cAAgBo+C,EAAkBzoC,OAASyoC,EAAkB,GAAGp+C,cAAgBjS,KAAKiS,cACtFjS,KAAKgS,OACLwlD,EAAe,UAAYx3D,KAAKiS,eAC5B3F,GAAgBtM,KAAKqnC,UAAWmrB,EAAsB5qB,EAAM5nC,QAC5Dw3D,GAAgBA,GAGhBO,EADAP,EACiBG,EAAuBpkB,GAAU,GAEjCokB,EAAuBpkB,GAAU,IAGtDwkB,EAAiBJ,EAAuBpkB,GAAU,IAGtD8c,EAAkBzoC,OAElB,IADApU,EAAew/C,EAAex/C,EAAcskD,GACvCjgC,EAAIw4B,EAAkBzoC,OAAS,EAAGiQ,GAAK,EAAGA,IAC3CrkB,EAAew/C,EAAe3C,EAAkBx4B,GAAGrkB,aAAcskD,GAAqBtkD,EAG9FukD,EAAevkD,GAAgBukD,EAAevkD,IAAiB,GAC/DukD,EAAevkD,GAAc6U,KAAKroB,MAClC63D,SAGRzmC,EAAAA,EAAAA,IAAKpI,GAAS,SAASuqB,IACnBykB,EAAAA,GAAAA,IAAUJ,EAAuBrkB,IAAY,SAASvf,EAAGltB,GACrDkiB,EAAOuqB,GAAUyZ,QAAQv5B,MAAMzK,EAAOuqB,GAAWzsC,MAErD,IAAImxD,EAA2BjvC,EAAOuqB,GAAU3rB,QAChDwJ,EAAAA,EAAAA,IAAKumC,EAAuBpkB,IAAY,SAASnpB,EAAO8tC,IACpDF,EAAAA,GAAAA,IAAUE,GAAkB,SAASlkC,EAAGmkC,GACpCnvC,EAAOuqB,GAAUlrB,KAAKoL,MAAMzK,EAAOuqB,GAAW4kB,SAGlDT,EAAuBnkB,EAAW,IAClCmkB,GAAwB/E,EAAqBzmC,KAAK0b,EAAM5e,EAAOuqB,GAAWqf,EAAe,eAAgBqF,IAEzGR,EAAsBlkB,EAAW,IACjCkkB,GAAuB9E,EAAqBzmC,KAAK0b,EAAM5e,EAAOuqB,GAAWqf,EAAe5H,GAA2BiN,OAG3HjvC,EAAOX,KAAK,SAAS+vC,EAAetxD,EAASysC,EAAU8kB,GACnD,IAAIrvC,EAAS,GAab,OAZAuqB,EAAWA,GAAY,EACvBzsC,EAAQysC,KAAaniB,EAAAA,EAAAA,IAAKtqB,EAAQysC,IAAY,SAASvf,EAAG7lB,GAClDA,EAAOyE,YAAcylD,GAAgBlqD,EAAOW,OAASk8C,KAChD78C,EAAOsE,QAAWtE,EAAOunC,QAK1B1sB,EAAOX,KAAKoL,MAAMzK,EAAQovC,EAAetxD,EAASysC,EAAW,EAAGplC,EAAOic,UAJlEjc,EAAOk5B,SAAWkM,EAAW,IAC9BvqB,EAAOX,KAAKla,OAOrB6a,EAdC,CAeVA,KACG6uC,GAA0BjwB,EAAK6lB,SAAS7lC,QACzCoB,EAAOm/B,GAAU9/B,KAAK,CAClBgf,QAAS,UAGVre,GAEXsvC,oBAAqB,SAASxxD,EAASsiD,GACnC,IAEImP,EAFA3wB,EAAO5nC,KACPgpB,EAAS,GAuBb,OArBAliB,EAAUA,GAAW8gC,EAAK6lB,UAC1Br8B,EAAAA,EAAAA,IAAKtqB,GAAU,SAASktB,EAAG7lB,GACvB,GAAIA,EAAOyE,YAAcw2C,EAGzB,OAAIj7C,EAAOsE,QAIH8lD,EAHCpqD,EAAOZ,QAGcq6B,EAAK0wB,oBAAoB1wB,EAAKyhB,wBAAwBl7C,EAAOic,OAAQjc,EAAOic,OAF5Ewd,EAAKyhB,wBAAwBl7C,EAAOic,YAI1DmuC,EAAoB3wC,SACpBoB,EAAOX,KAAKla,GACZ6a,EAASA,EAAOlB,OAAOywC,WAI1BpqD,EAAOZ,SACRyb,EAAOX,KAAKla,OAGb6a,GAEX4lC,kBAAmB,SAAS4J,GACxB,IAAI1xD,EAAU0xD,EAAgBx4D,KAAKkxC,aAAelxC,KAAKs4D,sBACnDG,EAAuB3xD,EAAQ8c,QAAOzV,GAAUA,EAAO8E,sBACvDI,EAAYrT,KAAKuiC,OAAO,2BAC5B,MAAO,EAAEz7B,EAASuM,KACd,GAAI,QAAUA,GAAa,SAAWA,EAClC,OAAOvM,EAEX,IAAI4xD,EAAO,QAAUrlD,EAAY,GAAK,EAMtC,OALAvM,EAAQg5B,MAAM,SAAS64B,EAASC,GAC5B,IAAIC,EAAWF,EAAQvnD,SAAW,GAC9B0nD,EAAWF,EAAQxnD,SAAW,GAClC,OAAOsnD,EAAOG,EAASE,cAAcD,MAElChyD,GAVJ,CAWJ2xD,EAAsBplD,IAE7B2lD,gBAAiB,SAASC,EAAkBC,EAAgB1P,EAAgB2P,GACxE,IAAI35B,EAAckvB,EAA6B1uD,KAAMi5D,EAAkBzP,GACnE4P,EAAep5D,KAAKytD,SAASjuB,GACjC,SAAI45B,KAAiBA,EAAa3oD,iBAAmB2oD,EAAa9oD,eAAiB8oD,EAAa5oD,gBACxFg5C,IAAmB2P,EACf,kBAAoB3P,IAGxByP,GAAmB9oC,EAAAA,EAAAA,IAAS8oC,GAAoBA,EAAiBz5B,YAAcy5B,EAC/EC,GAAiB/oC,EAAAA,EAAAA,IAAS+oC,GAAkBA,EAAe15B,YAAc05B,EAClED,IAAqBC,GAAkBD,EAAmB,IAAMC,GAChE,UAAY1P,GAAkB,kBAAoB2P,GAAkB,UAAYA,EAChFC,GAAgBA,EAAa9oD,cAC7B,kBAAoBk5C,GAAkB,kBAAoB2P,GAC1DC,GAAgBA,EAAa5oD,cAMhD6oD,WAAY,SAASJ,EAAkBC,EAAgB1P,EAAgB2P,GACnE,IACIlI,EAGAqI,EAJAh4C,EAAU,GAEVi4C,EAAY7K,EAA6B1uD,KAAMi5D,EAAkBzP,GACjEgQ,EAAU9K,EAA6B1uD,KAAMk5D,EAAgBC,GAEjE,GAAII,GAAa,EAAG,CAChB,IAAIprD,EAASnO,KAAKytD,SAAS8L,GAe3B,GAdAL,GAAiB/oC,EAAAA,EAAAA,IAAS+oC,GAAkBA,EAAe15B,YAAc05B,EACzEI,EAAmBE,GAAW,EAAIx5D,KAAKytD,SAAS+L,GAASlnD,YAAc,GACnEme,EAAAA,EAAAA,IAAUtiB,EAAOmE,aAAe,UAAYk3C,IACxC8P,EAAmBnrD,EAAOmE,YAC1BgnD,IAEA,UAAYH,EACZ73C,EAAQhP,gBAAa,GAErB2+C,EAAiB9iD,EAAOmE,kBACjBnE,EAAOmE,WACdi8C,EAAyBvuD,QAG7B,UAAYm5D,EACZ73C,EAAQhP,WAAa,SAASs1B,EAAMz5B,EAAQmE,GACxC,IACIulB,EADA4hC,EAAe7xB,EAAK+mB,kBAExB,GAAIr8C,GAAc,EACd,IAAKulB,EAAI,EAAGA,EAAI4hC,EAAa7xC,OAAQiQ,IAC7B4hC,EAAa5hC,GAAGvlB,YAAcA,GAC9BmnD,EAAa5hC,GAAGvlB,kBAKxB,IADAA,EAAa,EACRulB,EAAI,EAAGA,EAAI4hC,EAAa7xC,OAAQiQ,IACjCvlB,EAAamgB,KAAKxP,IAAI3Q,EAAYmnD,EAAa5hC,GAAGvlB,WAAa,GAGvE,OAAOA,EAfU,CAgBnBtS,KAAM,EAAGs5D,GACXnrD,EAAOmE,WAAa2+C,OACjB,GAAIiI,GAAkB,EAAG,CAC5B,IAAIQ,EAAe15D,KAAKytD,SAAS+L,GAC5BE,GAAgBvrD,EAAOyE,YAAc8mD,EAAa9mD,UAE5CghD,EAAc5zD,KAAMmO,GAAUylD,EAAc5zD,KAAM05D,GACzDp4C,EAAQ9N,aAAeu3C,GAEvBzpC,EAAQ9N,aAAekmD,EAAalmD,aAJpC8N,EAAQ9N,aAAeu3C,GAO/B,IAAItpB,EAAY,kBAAoB03B,EAChChrD,EAAOZ,UAAYk0B,IACnBngB,EAAQ/T,QAAUk0B,GAEtBzhC,KAAK0gD,aAAavyC,EAAOic,MAAO9I,KAGxC6oC,gBAAiB,SAAS3qB,EAAansB,GACnC,IAAIiO,EAAU,GACV2oC,EAAiBjqD,KAAKuiC,OAAO,WAC7Bo3B,EAAc1P,GAAkBA,EAAez1C,KAC/ColD,EAAmB,WAAaD,IAAgBtmD,EAChDzC,EAAe,WAAa+oD,GAAe,aAAeA,EAC1DxrD,EAASnO,KAAKytD,SAASjuB,GACvB5uB,GAAgBzC,GAAUA,EAAOyC,eAC7BgpD,KAAqBnpC,EAAAA,EAAAA,IAAUtiB,EAAOmE,cACtC8e,EAAAA,EAAAA,IAAKpxB,KAAKytD,UAAW,SAASrjC,GACtBA,IAAUoV,GAAex/B,KAAKqT,aACzBod,EAAAA,EAAAA,IAAUzwB,KAAKsS,oBACTtS,KAAKqT,iBAETrT,KAAKmT,cAIpB+8C,EAAiB78C,GACblF,EAAOkF,YAAcA,IACrBiO,EAAQjO,UAAYA,GAEjB,SAAWA,EACdlF,EAAOkF,YACPiO,EAAQnO,eAAY,EACpBmO,EAAQjO,eAAY,GAGtB,SAASlF,GACP,GAAI,SAAWkF,EAAW,CACtB,KAAM,cAAelF,MAAU,cAAeA,GAC1C,OAAO,EAEXmT,EAAQjO,eAAY,EACpBiO,EAAQnO,eAAY,OACbsd,EAAAA,EAAAA,IAAUtiB,EAAOmE,cAAeme,EAAAA,EAAAA,IAAUtiB,EAAOgF,WACxDmO,EAAQjO,UAAY,SAAWlF,EAAOkF,UAAY,MAAQ,OAE1DiO,EAAQjO,UAAY,MAV1B,CAaAlF,IAGVnO,KAAK0gD,aAAavyC,EAAOic,MAAO9I,IAEpCu4C,4BAA6B,SAASC,GAClC,IAAIC,EAAc,GACdj6B,EAAO,GAmBX,OAlBA1O,EAAAA,EAAAA,IAAKpxB,KAAKytD,UAAW,YACZztD,KAAKuR,WAAavR,KAAK88B,UAAY98B,KAAK+Q,sBAAuB0f,EAAAA,EAAAA,IAAUzwB,KAAKmT,cAAesd,EAAAA,EAAAA,IAAUzwB,KAAKsS,cAC7GynD,EAAY/5D,KAAKmT,WAAanT,UAGtCoxB,EAAAA,EAAAA,IAAK2oC,GAAc,WACf,IAAI1mD,EAAYrT,MAAQA,KAAKqT,UAC7B,GAAI68C,EAAiB78C,GAAY,CAC7B,IAAI2mD,EAAW,CACXl9B,SAAU98B,KAAKmR,oBAAsBnR,KAAK+8B,cAAgB/8B,KAAKgR,uBAAyB8oD,GAAoB95D,KAAK88B,UAAY98B,KAAKuR,WAAavR,KAAK+Q,mBACpJioB,KAAM,SAAWh5B,KAAKqT,WAEtBrT,KAAKoT,gBACL4mD,EAASz1B,QAAUvkC,KAAKoT,cAAckxB,KAAKtkC,OAE/C8/B,EAAKzX,KAAK2xC,OAGXl6B,EAAKlY,OAAS,EAAIkY,EAAO,MAEpCm6B,6BAA8B,SAASH,GACnC,IAAIj2C,EAAQ,GAeZ,OAdAuN,EAAAA,EAAAA,IAAKpxB,KAAK2uD,mBAAoB,WAC1B,IAAI7xB,EAAW98B,KAAKkR,qBAAuBlR,KAAK+8B,cAAgB/8B,KAAKgR,uBAAyB8oD,GAAoB95D,KAAK88B,UAAY98B,KAAKuR,WAAavR,KAAK+Q,mBAC1J,GAAI+rB,EAAU,CACV,IAAIvW,EAAY,CACZuW,SAAUA,EACV9D,KAAM,SAAWh5B,KAAKqT,UACtB2sB,aAAchgC,KAAK6Q,iBAEnB7Q,KAAKoT,gBACLmT,EAAUge,QAAUvkC,KAAKoT,cAAckxB,KAAKtkC,OAEhD6jB,EAAMwE,KAAK9B,OAGZ1C,EAAM+D,OAAS,EAAI/D,EAAQ,MAEtCq2C,QAAS,SAASC,GACd,IAAIC,EAAY,GAYhB,OAXAhpC,EAAAA,EAAAA,IAAKpxB,KAAKytD,UAAW,WACjB,IAAI/6C,EAAS1S,KAAK0S,OAClB,GAAIA,IAAW1S,KAAKgR,sBAAuB,CACvC,GAAImpD,GAAwBznD,EAAO2nD,SAC/B,OAEA3nD,EAAOuqC,QACPmd,EAAU/xC,KAAK3V,EAAOuqC,cAI3BrhB,EAAAA,GAAAA,MAAWiG,EAAAA,EAAGu4B,GAAW/rC,KAAKiiC,EAAkBhsB,KAAK,KAAMtkC,QAEtEs6D,qBAAsB,SAASnsD,EAAQqxB,GACnCrxB,EAAO2uB,SAAW3uB,EAAO2uB,UAAY,SAASptB,GAC1C,OAAOvB,EAAO4C,mBAAmBrB,KAErC0hB,EAAAA,EAAAA,IAAK,CAAC,qBAAsB,sBAAuB,0BAA2B,SAAS4C,EAAGumC,GACtF,IAAIC,EAAoBrsD,EAAOosD,GAC/B,IAAIziC,EAAAA,EAAAA,IAAW0iC,GACX,GAAKA,EAAkBj7B,iBAWnBpxB,EAAOosD,GAAuBE,QAAQtsD,OAASA,MAXV,CACrC,IAAIssD,EAAU,CACVtsD,OAAQA,GAEZA,EAAOosD,GAAyB,SAAS7qD,GACrC,OAAO8qD,EAAkBtuC,KAAKuuC,EAAQtsD,OAAQuB,IAElDvB,EAAOosD,GAAuBh7B,iBAAmBi7B,EACjDrsD,EAAOosD,GAAuB/6B,YAAcA,EAC5CrxB,EAAOosD,GAAuBE,QAAUA,OAMhDthB,EAAAA,EAAAA,IAAShrC,EAAO6C,yBAChB7C,EAAO4uB,aAAe5uB,EAAO6C,sBAC7B7C,EAAO6C,uBAAwBghD,EAAAA,EAAAA,IAAc7jD,EAAO4uB,eAEpD5uB,EAAO6C,wBACP7C,EAAO41B,gBAAkB51B,EAAO41B,iBAAmB,IAEvD+pB,EAAkB3/C,EAAQA,EAAOqD,UACjC,IAAIkB,EAASvE,EAAOuE,OAChBA,GACAo7C,EAAkBp7C,EAAQA,EAAOlB,UAErC,IAAIA,EAAWkB,EAASA,EAAOlB,SAAWrD,EAAOqD,SAC7CA,IACArD,EAAO8B,UAAY9B,EAAO8B,WAAa,SAASuB,EAAUkpD,GACtD,OAAQlpD,GACJ,IAAK,SACD,MAAO,QACX,IAAK,UACD,MAAO,SACX,QACI,OAAO++B,EAAAA,EAAAA,GAAoBmqB,IAPA,CASrClpD,EAAUxR,KAAKuiC,OAAO,eACxBp0B,EAAO+D,OAAS/D,EAAO+D,QAAUg9B,EAAAA,oBAAkC19B,GACnErD,EAAOmD,cAAgBnD,EAAOmD,eAAiB88C,EAA2B58C,GAC1ErD,EAAO29C,wBAA0B39C,EAAO29C,0BAA4Bp5C,GAAU84C,EAAoBh6C,IAAa,IAC1Gif,EAAAA,EAAAA,IAAUtiB,EAAO0D,mBAClBg6C,EAAmC19C,GAEvCA,EAAOkK,uBAAyBlK,EAAO0D,kBAAoB1D,EAAO0D,iBAAiB,IAAM,IACzF1D,EAAO6E,kBAAmByd,EAAAA,EAAAA,IAAUtiB,EAAO6E,kBAAoB7E,EAAO6E,iBAAmB,YAAcxB,IAAarD,EAAOkD,eAAiBlD,EAAOuE,SAG3J69C,sBAAuB,SAASlpD,GAC5B,IAAIugC,EAAO5nC,KACPsH,EAA0BsgC,EAAKrF,OAAO,2BACtC+yB,EAAa1tB,EAAKssB,eAAe7sD,GACjCszD,GAA2B,EAyD/B,OAxDAvpC,EAAAA,EAAAA,IAAKwW,EAAK6lB,UAAW,SAASrjC,EAAOjc,GACjC,IAAI0pB,EACAv3B,EACAkR,EACAopD,EACAC,EACAnoD,EAASvE,EAAOuE,OAOpB,GANIw8B,EAAAA,WAAyB/gC,EAAOqD,gBAAa,IAAWrD,EAAO6/C,sBAC/D7/C,EAAO6/C,oBAAsB1mD,GAE7BoL,GAAUw8B,EAAAA,WAAyBx8B,EAAOlB,gBAAa,IAAWrD,EAAO6/C,sBACzEt7C,EAAOs7C,oBAAsB1mD,GAE7B6G,EAAO4C,oBAAsBukD,EAAW1tC,OAAQ,CAChD,IAAKzZ,EAAOqD,UAAYkB,IAAWA,EAAOlB,SAAU,CAChD,IAAKqmB,EAAI,EAAGA,EAAIy9B,EAAW1tC,OAAQiQ,IAC/Bv3B,EAAQ6N,EAAO4C,mBAAmBukD,EAAWz9B,IACxC1pB,EAAOqD,WACRqpD,EAAgBlN,EAAiBrtD,GACjCkR,EAAWA,GAAYqpD,EACnBrpD,GAAYqpD,GAAiBrpD,IAAaqpD,IAC1CrpD,EAAW,WAGfkB,IAAWA,EAAOlB,WAClBqpD,EAAgBlN,EAAiBze,EAAAA,gBAA8B/gC,EAAQ7N,EAAOg1D,EAAWz9B,KACzF+iC,EAAiBA,GAAkBC,EAC/BD,GAAkBC,GAAiBD,IAAmBC,IACtDD,EAAiB,YAIzBppD,GAAYopD,KACRppD,IACArD,EAAOqD,SAAWA,GAElBkB,GAAUkoD,IACVloD,EAAOlB,SAAWopD,GAEtBD,GAA2B,GAGnC,QAAI,IAAWxsD,EAAO6/C,qBAAuBt7C,QAAU,IAAWA,EAAOs7C,oBACrE,IAAKn2B,EAAI,EAAGA,EAAIy9B,EAAW1tC,OAAQiQ,IAC/Bv3B,EAAQ6N,EAAO4C,mBAAmBukD,EAAWz9B,IAAI,QAC7C,IAAW1pB,EAAO6/C,sBAClB7/C,EAAO6/C,oBAAsBJ,EAAuBz/C,EAAOqD,SAAUlR,IAErEoS,QAAU,IAAWA,EAAOs7C,sBAC5Bt7C,EAAOs7C,oBAAsBJ,EAAuBl7C,EAAOlB,SAAUkB,EAAO3B,mBAAmBzQ,GAAO,KAKtHsnC,EAAK0yB,qBAAqBnsD,EAAQic,MAE/BuwC,GAEXG,kBAAmB,SAASh0D,GACxB,IAAIG,EAAmBjH,KAAKuiC,OAAO,oBACnC,GAAIt7B,EAAkB,CAClB,IAAI8zD,EAAej0D,EAAQqvB,MAAM,SAAShoB,GACtC,OAAOgiB,EAAAA,EAAAA,IAAShiB,EAAOyE,cAEvBmoD,GACA9K,EAAcjwD,MAElBiH,EAAiBH,GACjBkpD,EAAchwD,KAAMysD,EAAyBzsD,KAAM8G,MAG3D2uD,cAAe,SAASpuD,EAAY6tD,GAIhC,GAHKA,GACDl1D,KAAKg7D,sBAAsB3zD,IAE1BA,GAAcA,EAAWwgD,WAAY,CACtC,IAAIoT,EAAiB5zD,EAAaA,EAAWy4B,QAAU,GAAK9/B,KAAK65D,8BAC7DqB,EAAkB7zD,EAAaA,EAAWwc,SAAW,GAAK7jB,KAAKi6D,+BAC/DkB,EAAmB,OAAS9zD,QAAc,IAAWA,OAAa,EAASA,EAAW+zD,kBAAkBx3C,OAC5G5jB,KAAK86D,kBAAkB96D,KAAKytD,UAC5BwC,EAAcjwD,MACd,IAAI8G,EAAU9G,KAAKytD,SACnB,OAAO7xB,EAAAA,EAAAA,IAAK57B,KAAKk6D,SAAQ,IAAO1sC,QAAO,KAC/BxtB,KAAKytD,WAAa3mD,IAGtB9G,KAAKq7D,eAAeh0D,EAAY,CAC5B4F,QAASguD,EACT1yD,SAAU2yD,EACV/3C,UAAWg4C,IAEfxK,EAAmB3wD,YAI/Bq7D,eAAgB,SAASh0D,EAAYooC,GAC7BpoC,IACArH,KAAKuwD,sBAAsBlpD,GAC3BrH,KAAKy0D,oBAAqB,GAEzBvlB,EAAAA,oBAAkCO,EAAWxiC,QAASjN,KAAK65D,gCAC5DrJ,EAAoBxwD,KAAM,WAEzBkvC,EAAAA,oBAAkCO,EAAWlnC,SAAUvI,KAAKi6D,iCAC7DzJ,EAAoBxwD,KAAM,YAE9B,IAAIs7D,EAAiBt7D,KAAKqqC,cAAc,QACpCixB,IAAmBpsB,EAAAA,sBAAoCO,EAAWtsB,UAAWm4C,EAAeC,sBAC5F/K,EAAoBxwD,KAAM,aAE9BwwD,EAAoBxwD,KAAM,YAE9Bg7D,sBAAuB,SAAS3zD,EAAYm0D,GACxC,IACIP,EACAQ,EAFA7zB,EAAO5nC,KAGP07D,EAAkC,SAAS50D,EAASm0D,EAAgBU,IACpEvqC,EAAAA,EAAAA,IAAKtqB,GAAU,SAASsjB,EAAOjc,GAE3B,UADOA,EAAOwtD,GACVV,EACA,IAAK,IAAIpjC,EAAI,EAAGA,EAAIojC,EAAerzC,OAAQiQ,IAAK,CAC5C,IAAIiF,EAAWm+B,EAAepjC,GAAGiF,SAC7BkD,EAAai7B,EAAepjC,GAAGmI,WACnC,GAAIlD,IAAa3uB,EAAOoD,WAAaurB,IAAa3uB,EAAOmB,MAAQwtB,IAAa3uB,EAAO2uB,UAAYA,IAAa3uB,EAAO4C,oBAAsB+rB,IAAa3uB,EAAO+C,qBAAuB4rB,IAAa3uB,EAAO6C,sBAAuB,CAC7N7C,EAAOkF,UAAYlF,EAAOkF,YAAc4nD,EAAepjC,GAAGmB,KAAO,OAAS,YACtE,IAAWgH,IACX7xB,EAAO0C,gBAAkBmvB,GAE7B7xB,EAAOwtD,GAAsB9jC,EAC7B,YAMpB,GAAIxwB,EAAY,CACZ4zD,EAAiB/rB,EAAAA,qBAAmC7nC,EAAWy4B,QAC/D,IAAIo7B,EAAkBhsB,EAAAA,qBAAmC7nC,EAAWwc,SAChE+3C,EAAyBh0B,EAAKqyB,+BAC9B4B,EAAwBj0B,EAAKiyB,8BAC7BiC,GAAmB5sB,EAAAA,oBAAkCgsB,EAAiBU,GAAwB,GAC9FG,GAAyBD,IAAoB5sB,EAAAA,oBAAkCgsB,EAAiBU,GAC/Fh0B,EAAK6lB,SAAS7lC,UACfwJ,EAAAA,EAAAA,IAAK8pC,GAAkB,SAAS9wC,EAAOvG,GACnC+jB,EAAK6lB,SAASplC,KAAKxE,EAAMiZ,cAE7B1L,EAAAA,EAAAA,IAAK6pC,GAAiB,SAAS7wC,EAAO0V,GAClC8H,EAAK6lB,SAASplC,KAAKyX,EAAKhD,aAE5BkzB,EAAcpoB,EAAM6kB,EAAyB7kB,EAAMA,EAAK6lB,aAEvD+N,IAAmBI,GAA2Bh0B,EAAK+nB,iBAAmBmM,IAAmBC,IAC1FL,EAAgC9zB,EAAK6lB,SAAUyN,EAAiB,cAC5DM,IACAM,GAAmBtL,EAAoB5oB,EAAM,YAC7Cm0B,GAAyBvL,EAAoB5oB,EAAM,kBACnD6zB,GAAmB,KAGtBD,IAAmBK,GAA0Bj0B,EAAK+nB,gBAAmBzgB,EAAAA,oBAAkC+rB,EAAgBY,KACxHH,EAAgC9zB,EAAK6lB,SAAUwN,EAAgB,aAC3DO,IACAhL,EAAoB5oB,EAAM,WAC1B6zB,GAAmB,IAGvBA,GACA9K,EAAmB/oB,KAI/Bo0B,aAAc,SAASp4C,EAAQq4C,EAAiBz8B,EAAav3B,GACzD,IAAKlB,MAAM2iB,QAAQ9F,GACf,OAAOA,EAKX,GAHAA,GAASgI,EAAAA,EAAAA,GAAO,GAAIhI,GACpB4b,OAAc,IAAW5b,EAAO4b,YAAc5b,EAAO4b,YAAcA,EACnEv3B,OAAc,IAAW2b,EAAO3b,YAAc2b,EAAO3b,YAAcA,GAC/DkxC,EAAAA,EAAAA,IAASv1B,EAAO,KAAO,MAAQA,EAAO,GAAI,CAC1C,IAAIzV,EAASnO,KAAK0gD,aAAa98B,EAAO,IAClCq4C,GACIllC,EAAAA,GAAAA,KAASmlC,qBAAuB/tD,GAAUA,EAAO+jB,gBAAkBtO,EAAOgE,OAAS,IACnFhE,EAAOA,EAAOgE,OAAS,GAAKzZ,EAAO+jB,eAAetO,EAAOA,EAAOgE,OAAS,GAAI,WAE1EzZ,GAAUA,EAAO2uB,WACxBlZ,EAAO,GAAKzV,EAAO2uB,SACnBlZ,EAAO,GAAG4b,YAAcrxB,EAAOic,YAE5B0N,EAAAA,EAAAA,IAAWlU,EAAO,MACzBA,EAAO,GAAG4b,YAAcA,EACxB5b,EAAO,GAAG3b,YAAcA,GAE5B,IAAK,IAAI4vB,EAAI,EAAGA,EAAIjU,EAAOgE,OAAQiQ,IAC/BjU,EAAOiU,GAAK73B,KAAKg8D,aAAap4C,EAAOiU,GAAIokC,EAAiBz8B,EAAav3B,GAE3E,OAAO2b,GAEXu4C,YAAa,WACT,OAAOn8D,KAAKytD,SAAWztD,KAAKytD,SAAS7lC,OAAS,GAElD84B,aAAc,SAASqT,EAAYxxB,EAAQjiC,EAAOuxD,GAC9C,IAAIjqB,EAAO5nC,KACP8G,EAAU8gC,EAAK6lB,SAAS3lC,OAAO8f,EAAK0mB,iBACpCngD,EAAS2lD,EAAWhtD,EAASitD,GACjC,GAAI5lD,EAAQ,CACR,GAAI,IAAMkd,UAAUzD,OAChB,OAAOgE,EAAAA,EAAAA,GAAO,GAAIzd,GAEtB,IAAIgrC,EAAAA,EAAAA,IAAS5W,GAAS,CAClB,GAAI,IAAMlX,UAAUzD,OAChB,OAAOgqC,EAAiBhqB,EAAMz5B,EAAQo0B,GAEtCqvB,EAAiBhqB,EAAMz5B,EAAQo0B,EAAQjiC,EAAOuxD,QAE3C1hC,EAAAA,EAAAA,IAASoS,KAChBnR,EAAAA,EAAAA,IAAKmR,GAAS,SAASl0B,EAAY/N,GAC/BsxD,EAAiBhqB,EAAMz5B,EAAQE,EAAY/N,EAAOuxD,MAG1DlB,EAAmB/oB,KAG3Bw0B,aAAc,WACV,IAAID,EAAcn8D,KAAKm8D,cACvBn8D,KAAKmpC,cACL,IAAK,IAAItR,EAAI,EAAGA,EAAIskC,EAAatkC,IAC7B73B,KAAK0gD,aAAa7oB,EAAG,iBAAa,GAEtC73B,KAAKopC,aAETizB,cAAe,WACX,IAAIF,EAAcn8D,KAAKm8D,cACvBn8D,KAAKmpC,cACL,IAAK,IAAItR,EAAI,EAAGA,EAAIskC,EAAatkC,IAC7B73B,KAAK0gD,aAAa7oB,EAAG,kBAAc,GAEvC73B,KAAKopC,aAETuO,gBAAiB,SAASvtB,EAAOmpB,GAE7B,IADA,IAAIzsC,EAAU9G,KAAK82C,kBAAkBvD,GAC5B1b,EAAI/wB,EAAQ8gB,OAAS,EAAGiQ,GAAK,EAAGA,IACrC,GAAI/wB,EAAQ+wB,GAAGzN,QAAUA,EACrB,OAAOyN,EAGf,OAAQ,GAEZykC,wBAAyB,SAASnuD,EAAQolC,GACtC,IAAIqD,EAAiB52C,KAAK82C,kBAAkBvD,GACxCgpB,EAAgB3lB,EAAehzB,QAAOm0B,GAAOA,EAAI3tB,QAAUjc,EAAOic,OAAS2tB,EAAI1Q,UAAYl5B,EAAOk5B,UAAS,GAC/G,OAAOuP,EAAevsB,QAAQkyC,IAElC9c,sBAAuB,SAASiQ,EAAInc,GAChC,IAAInpB,EAAQpqB,KAAK0gD,aAAagP,EAAI,SAClC,OAAO1vD,KAAK23C,gBAAgBvtB,EAAOmpB,IAEvCipB,UAAW,SAASl7C,GAChB,IAAInT,EAAS49C,EAAa/rD,KAAMshB,GAC5B8I,EAAQpqB,KAAKytD,SAAS7lC,OAC1B5nB,KAAKytD,SAASplC,KAAKla,GACfA,EAAOsE,SACPzS,KAAKytD,SAAWhB,EAAyBzsD,KAAMA,KAAKytD,UACpDt/C,EAASnO,KAAKytD,SAASrjC,IAE3Bjc,EAAO4hD,MAAQzuC,EACf2uC,EAAcjwD,KAAMmO,GACpBnO,KAAKy1D,cAAcz1D,KAAK2jC,aACxB3jC,KAAKoyD,iBAETqK,aAAc,SAAS/M,GACnB,IAeI5oD,EAfAqH,EAASnO,KAAK0gD,aAAagP,GAC/B,GAAIvhD,GAAUA,EAAOic,OAAS,EAAG,CAO7B,GANAtjB,EAAU9G,KAAKytD,SAAe3mD,EAAQ+0C,SAAQ1tC,KACtCsiB,EAAAA,EAAAA,IAAUtiB,EAAOyE,aACjBzE,EAAOyE,UAAY9L,EAAQqH,EAAOyE,eAG1C5S,KAAKytD,SAASzQ,OAAO7uC,EAAOic,MAAO,GAC/Bjc,EAAOsE,OAAQ,CACf,IAAIiqD,EAAe18D,KAAKqpD,wBAAwBl7C,EAAOic,OAAO4H,KAAI7jB,GAAUA,EAAOic,QACnFpqB,KAAKytD,SAAWztD,KAAKytD,SAAS7pC,QAAOzV,GAAUuuD,EAAaryC,QAAQlc,EAAOic,OAAS,IAExF6lC,EAAcjwD,MACdA,KAAKy1D,cAAcz1D,KAAK2jC,eAIhC6wB,iBAAkB,SAASlzC,GACvB,IAAImxC,EAAgBzyD,KAAKsuD,gBAAgB1qC,QAAOzV,GAAUA,EAAOk5B,UAAY/lB,EAAQ+lB,UAAS,GACzForB,IACDA,EAAgBnxC,EAChBthB,KAAKsuD,gBAAgBjmC,KAAKoqC,KAGlCsD,aAAc,WACV,IAEIl+B,EAFA/wB,EAAU9G,KAAKytD,SACfzkC,EAAS,GAGb,SAAS2zC,EAAiBvyC,EAAO9pB,QACzB,IAAWwG,EAAQ+wB,GAAGv3B,KACtB0oB,EAAO6O,GAAGv3B,GAASwG,EAAQ+wB,GAAGv3B,IAGtC,IAAKu3B,EAAI,EAAGA,EAAI/wB,EAAQ8gB,OAAQiQ,IAC5B7O,EAAO6O,GAAK,IACZzG,EAAAA,EAAAA,IAAKs5B,GAAwBiS,GAEjC,OAAO3zC,GAEXojC,QAAS,SAASj+C,GACdA,EAAOmB,KAAOnB,EAAOmB,MAAQnB,EAAOoD,WAAapD,EAAOW,MAE5D8tD,aAAc,SAASC,GACnB,IAAIx1D,EAAarH,KAAK2jC,YAClBsrB,EAA0BjvD,KAAKuiC,OAAO,wCAE1C,GADA,OAASs6B,QAAS,IAAWA,GAAiBA,EAAMhhB,QAAQ77C,KAAKosD,UAC5D6C,EAAyB,CAC1BA,EAA0B,GAC1B,IAAI7D,EAAuBprD,KAAKssD,oBAC3BtsD,KAAKuiC,OAAO,0BACb0sB,EAAwB5mC,KAAK,WAE7B,SAAWroB,KAAKuiC,OAAO,iBACvB0sB,EAAwB5mC,KAAK,YAAa,aAEzC+iC,EAAqB96C,eACtB2+C,EAAwB5mC,KAAK,cAE5B+iC,EAAqB/6C,aACtB4+C,EAAwB5mC,KAAK,QAAS,iBAErC+iC,EAAqB16C,eACtBu+C,EAAwB5mC,KAAK,QAAS,gBAE1C,IAAIy0C,GAAuB98D,KAAKuiC,OAAO,wBAClCviC,KAAKuiC,OAAO,sBAAwBu6B,GACrC7N,EAAwB5mC,KAAK,cAAe,4BAE3CroB,KAAKuiC,OAAO,yBAA2Bu6B,GACxC7N,EAAwB5mC,KAAK,eAAgB,cAGrDroB,KAAK2sD,kBAAoBkQ,EACzB78D,KAAKkvD,yBAA2BD,EAChCjvD,KAAK2vD,gBAAkBkN,EACvBrM,EAAoBxwD,KAAM,aAC1BA,KAAKipC,OACD5hC,IACAA,EAAWy4B,KAAK9/B,KAAK65D,+BACrBxyD,EAAWwc,MAAM7jB,KAAKi6D,kCAG9B7H,cAAe,WACX,IAAI2K,EAAY,GACZC,GAA+B,EAC/BC,EAAkB,GACtBj9D,KAAKytD,SAAS5R,SAAQ1tC,IAClB,IAAI+uD,EACA5tD,EAAOnB,EAAOmB,KACdmD,EAAS,QAAUyqD,EAAkB/uD,EAAOrH,eAAY,IAAWo2D,OAAkB,EAASA,EAAgBt1C,OAC9Gu1C,EAAahvD,EAAO+B,eAAiB/B,EAAOoD,WAAapD,EAAO4E,gBAAkBN,EAClFnD,GACIytD,EAAUztD,IACV2tD,EAAgB50C,KAAK,IAAIP,OAAOxY,EAAM,MAE1CytD,EAAUztD,IAAQ,GACX6tD,IACPH,GAA+B,MAGnCC,EAAgBr1C,QAChB+D,EAAAA,EAAAA,IAAW,QAASsxC,EAAgBp0C,KAAK,OAEzCm0C,GACArxC,EAAAA,EAAAA,IAAW,UAGnB6gC,+BAAgC,SAASR,EAAeE,GACpD,IAAIK,EAA0B,GAC1Bh7C,EAAYy6C,EAAcz6C,UAK9B,IAJIxK,MAAM2iB,QAAQsiC,EAAcllD,UAAYklD,EAAcllD,QAAQ8gB,QAAUokC,EAAcv5C,UACtF85C,EAAwB95C,QAAS,EACjClB,EAAY,MAEZA,EAAW,CACX,IAAI4nC,EAAAA,EAAAA,IAAS5nC,GAAY,CACrB,IAAIwnB,GAASi5B,EAAAA,EAAAA,IAAczgD,GAC3Bg7C,EAA0B,CACtBn7C,SAASgsD,EAAAA,GAAAA,IAAW7rD,GACpBR,mBAAoB,SAASrB,EAAM2tD,GAC/B,IAAI/8D,EAAQy4B,EAAOrpB,GACnB,OAAO1P,KAAK+tD,mBAAqBsP,EAAsBr9D,KAAK+tD,iBAAiBztD,GAASA,GAE1FyS,aAAcu/C,EACdgL,WAAY,SAAS7tD,GACjB,IAAIuZ,EACAilC,EA8BJ,MA7BI,WAAajuD,KAAKwR,UACd2nC,EAAAA,EAAAA,IAAS1pC,IAASzP,KAAKkS,OACvB8W,EAAS,SAASvZ,EAAMyC,GACpB,IAAI+7C,EAAcsP,GAAAA,EAAAA,MAAyB9tD,EAAMyC,GACjD,IAAI6hC,EAAAA,EAAAA,IAAUka,GAAc,CACxB,IAAIuP,EAAiBD,GAAAA,EAAAA,OAA0BtP,EAAa/7C,GACxDurD,EAAkCF,GAAAA,EAAAA,OAA0BtP,EAAa,WAC7E,GAAIuP,IAAmB/tD,GAAQguD,IAAoChuD,EAC/D,OAAOw+C,GANV,CASPx+C,EAAK4T,OAAQrjB,KAAKkS,SACbue,EAAAA,EAAAA,IAAUhhB,KAASskC,EAAAA,EAAAA,IAAUtkC,KACpCuZ,EAASpiB,OAAO6I,IAEb,YAAczP,KAAKwR,SACtB/B,IAASzP,KAAKsT,SACd0V,GAAS,EACFvZ,IAASzP,KAAK4R,YACrBoX,GAAS,GAENkmB,EAAAA,WAAyBlvC,KAAKwR,WACrCy8C,EAAcyP,GAAAA,EAAAA,MAAuBjuD,EAAMzP,KAAKkS,QAC5C+7C,IACAjlC,EAASilC,IAGbjlC,EAASvZ,EAENuZ,IAInBujC,EAAwBn8C,gBAAiB,OAEzCm8C,EAAwBn8C,iBAAmB47C,EAAc/6C,0BA8F7D,OA5FAs7C,EAAwBt7C,0BAA4B,WAChD,OAAO0sD,EAAAA,iCAAAA,MAAmD39D,KAAMqrB,YAEpEkhC,EAAwBqR,uBAAyB,SAAS31D,GACtD,IAAI+gB,EAWJ,OAVIhpB,KAAKiR,4BACL+X,EAAShpB,KAAKiR,0BAA0BwiB,MAAMzzB,KAAMqrB,aAEpDyM,EAAAA,EAAAA,IAAW9O,KACXA,EAAS,CAACA,EAAQ,KAAK,IAEvBA,IACAA,EAAOwW,YAAcx/B,KAAKoqB,MAC1BpB,EAAO/gB,YAAcA,GAElB+gB,GAENzX,IAAc4nC,EAAAA,EAAAA,IAAS5nC,KACxBqa,EAAAA,EAAAA,IAAO,EAAM2gC,EAAyB,CAClC37C,cAAc,EACdN,eAAe,EACfS,mBAAoB,WAChB,OAAO,QAIfm7C,IACAK,EAAwBl8C,aAAc,GAEtC27C,EAAcx6C,WACd+6C,EAAwBsR,aAAe7R,EAAcx6C,UAErDw6C,EAAcl5C,2BAA6B,mCAAoCy5C,KAC/EA,EAAwBiD,+BAAiCxD,EAAcl5C,yBAEvEk5C,EAAct5C,SACd65C,EAAwB75C,OAAS,CAC7B3B,mBAAoB,SAASzQ,EAAO+8D,GAIhC,OAHIr9D,KAAKqV,YACL/U,EAAQN,KAAKq6D,UAAYr6D,KAAKq6D,SAAS/5D,IAEpCN,KAAK+tD,mBAAqBsP,EAAsBr9D,KAAK+tD,iBAAiBztD,GAASA,GAE1Fw9D,eAAgB,WAEZ,GADA99D,KAAKq6D,SAAW,GACZr6D,KAAKod,MAGL,IAFA,IAAI2gD,GAAiB/L,EAAAA,EAAAA,IAAchyD,KAAKqV,WACpCrE,GAAwBghD,EAAAA,EAAAA,IAAchyD,KAAKoV,aACtCyiB,EAAI,EAAGA,EAAI73B,KAAKod,MAAMwK,OAAQiQ,IAAK,CACxC,IAAI5Q,EAAOjnB,KAAKod,MAAMya,GAClBmmC,EAAehtD,EAAsBiW,GACzCjnB,KAAKq6D,SAAS0D,EAAe92C,IAAS+2C,EACtCh+D,KAAKwR,SAAWxR,KAAKwR,UAAYm8C,EAAiBqQ,KAI9D/gB,OAAQ,WACJ,IAAIrV,EAAO5nC,KACPqH,EAAaugC,EAAKvgC,WACtB,GAAIA,EAIA,IAHIywB,EAAAA,EAAAA,IAAWzwB,KAAgBmuD,GAAAA,EAAAA,UAA0BnuD,KACrDA,EAAaA,EAAW,MAExB6oB,EAAAA,EAAAA,IAAc7oB,IAAeA,aAAsBgzB,GAAAA,GAAStzB,MAAM2iB,QAAQriB,IAC1E,GAAIugC,EAAKvyB,UAAW,CAChB,IAAI4oD,GAAoBC,EAAAA,GAAAA,IAA2B72D,GAGnD,OAFA42D,EAAkBE,UAAW,EAC7B92D,EAAa,IAAI6f,GAAAA,EAAW+2C,GACrB52D,EAAW+2D,OAAO/vC,MAAM,SAAS3e,GACpCk4B,EAAKxqB,MAAQ1N,EACbk4B,EAAKk2B,gBAAkBl2B,EAAKk2B,0BAIpCnyC,EAAAA,EAAAA,IAAW,cAGfic,EAAKk2B,gBAAkBl2B,EAAKk2B,oBAK5CvR,EAAwB8R,kBAAmBr1B,EAAAA,EAAAA,cACvCgjB,EAAcn5C,SACd05C,EAAwB8R,iBAAiBlgB,IAAI6N,EAAcn5C,QAAQyxB,KAAK0nB,KAE5E56B,EAAAA,EAAAA,IAAKm7B,GAA0B,SAASl+C,GACpC,IAAIypB,EAAAA,EAAAA,IAAWy0B,EAAwBl+C,KAAgB,IAAMA,EAAWgc,QAAQ,WAAY,CACxF,IAAIi0C,EAAoB,UAAYjwD,EAAWkwD,OAAO,GAAGC,cAAgBnwD,EAAWic,OAAO,GAC3FiiC,EAAwB+R,GAAqB/R,EAAwBl+C,OAGtEk+C,GAEXxE,YAAa,WAgBT,OAfA/nD,KAAK81D,UAAY91D,KAAK81D,WAAa,SAASluB,GACxC,IAAIugB,EAAW,EACXkF,EAAmBzlB,EAAK0lB,sBACxBP,EAAsBM,EAAiBN,oBAU3C,OATAnlB,EAAK6lB,SAAS5R,SAAS,SAAS1tC,GAC5B,IAAIswD,EAAU3R,EAAqB3+C,EAAOic,MAAO2iC,GAC7C2R,EAAmBD,EAAQ76C,QAAQ,SAASzV,GAC5C,OAAQA,EAAOZ,WAEfY,EAAOZ,UAAYmxD,EAAiB92C,SACpCugC,EAAW11B,KAAKxP,IAAIklC,EAAUsW,EAAQ72C,OAAS,OAGhDugC,EAbwB,CAcjCnoD,MACKA,KAAK81D,WAEhBtiB,YAAa,SAAShU,EAAam/B,GAC/B,IAAIxwD,EAASnO,KAAKytD,SAASjuB,GACvB6tB,EAAmBrtD,KAAKstD,sBAC5B,OAAOn/C,IAAWwwD,GAAqBxwD,EAAOZ,UAAaY,EAAOk5B,WAAW5W,EAAAA,EAAAA,IAAUtiB,EAAOmE,aAAgBw6C,EAAqBttB,EAAa6tB,EAAiBN,qBAAqBnlC,OAAS,GAEnMyhC,wBAAyB,SAASD,EAAiBwV,GAC/C,IAAIvR,EAAmBrtD,KAAKstD,sBACxBtkC,EAASikC,EAAyB7D,EAAiBiE,EAAiBH,uBAAwB0R,GAChG,OAAIA,EACO51C,EAAOpF,QAAQ,SAASzV,GAC3B,OAAOA,EAAOZ,UAAYY,EAAOk5B,WACjCvH,MAAM,SAAS64B,EAASC,GACxB,OAAOD,EAAQnlD,aAAeolD,EAAQplD,gBAGvCwV,GAEX61C,mBAAoB,SAASr/B,EAAa4pB,GACtC,IAAIpgC,GAAS,EACT7a,EAASnO,KAAKytD,SAASjuB,GACvB6tB,EAAmBrtD,KAAKstD,sBACxB+C,EAAoBliD,GAAU2+C,EAAqBttB,EAAa6tB,EAAiBN,qBASrF,OARIsD,IACAj/B,EAAAA,EAAAA,IAAKi/B,GAAoB,SAASr8B,EAAGk4B,GACjC,GAAIA,EAAW9hC,QAAUg/B,EAErB,OADApgC,GAAS,GACF,KAIZA,GAEXuuC,sBAAuB,SAAS/3B,GAC5B,IAAIxW,GAAS,EACTqkC,EAAmBrtD,KAAKstD,sBACxB8C,EAAc5wB,GAAe,GAAKstB,EAAqBttB,EAAa6tB,EAAiBN,qBAKzF,OAJAqD,IAAeh/B,EAAAA,EAAAA,IAAKg/B,GAAc,SAASp8B,EAAGk4B,GAE1C,OADAljC,EAASA,GAAUkjC,EAAW3+C,QACvByb,KAEJA,GAEX81C,YAAa,SAAS3wD,GAClB,OAAIA,EAAOk5B,SAAWl5B,EAAOW,OAASk8C,GAC9BwH,EAAsBxyD,KAAMmO,GACrB,QAAUA,EAAOW,KAErB,WAAaX,EAAOk5B,QAExBl5B,EAAOic,OAElBgkC,2BAA4BA,EAC5Bje,0BAA2B,SAASZ,GAChC,IAAIjjC,EAAatM,KAAKuiC,OAAO,cAC7B,OAAIj2B,EACO,SAAWijC,EAAkB,QAAU,OAE3CA,IA1jEiB,MCxF5Cib,GAAAA,eAAwB,UAAW,CAC/BtE,eAAgB,WACZ,OAAOt6B,EAAAA,EAAAA,IAAO,EAAM,GAAIu/B,GAAwBjF,iBAAkB,CAC9DkF,qBAAsB,CAClBj7C,gBAAgB,MAI5B69B,YAAamd,GAAwBnd,c,0BCWzC,GAAewc,GAAAA,WAAAA,QAA4B,WACvC,SAASuU,EAAW3hD,EAAO4hD,GACvB,GAAI5hD,IACAA,EAAQA,EAAM2M,MAAM,GAChBi1C,GACA,IAAK,IAAInnC,EAAI,EAAGA,EAAIza,EAAMwK,OAAQiQ,IAC9Bza,EAAMya,IAAKjM,EAAAA,EAAAA,GAAO,CACdF,IAAKtO,EAAMya,GAAGnM,KACftO,EAAMya,IACTza,EAAMya,GAAGza,MAAQ2hD,EAAW3hD,EAAMya,GAAGza,MAAO4hD,EAAa,GAIrE,OAAO5hD,EAGX,SAAS6hD,EAAwBhkC,EAAamgC,EAAiB8D,GAC3D,IAAIC,EAAiB,CACjBC,QAAQ,EACRC,YAAY,GAiBhB,OAfIjE,IACA+D,EAAiB,CACblyD,SAAUu9C,GAAAA,oBAA6BvvB,EAAY6E,KAAMs7B,EAAgBt7B,MACzEv3B,UAAWiiD,GAAAA,oBAA6BvvB,EAAYpX,MAAOu3C,EAAgBv3C,OAAO,GAClFukC,gBAAiBoC,GAAAA,oBAA6BvvB,EAAYpX,MAAOu3C,EAAgBv3C,QAAUu3C,EAAgBkE,YAC3Gn8C,WAAYqnC,GAAAA,sBAA+BvvB,EAAYrX,OAAQw3C,EAAgBx3C,QAC/EtB,UAAW2Y,EAAY3Y,YAAc84C,EAAgB94C,UACrDi9C,KAAMtkC,EAAYskC,OAASnE,EAAgBmE,KAC3CC,KAAMvkC,EAAYukC,OAASpE,EAAgBoE,KAC3Cj9C,SAAU0Y,EAAY1Y,WAAa64C,EAAgB74C,SACnD88C,WAAYH,GAEhBC,EAAeC,OAASF,GAAgBC,EAAelyD,SAAWkyD,EAAe52D,UAAY42D,EAAeh8C,UAC5Gg8C,EAAepzD,OAASozD,EAAe78C,WAAa68C,EAAe58C,UAAY48C,EAAeK,MAE3FL,EAGX,SAASM,EAAqBn+C,EAASo+C,GACnC,IAAIV,EAAaxU,GAAAA,qBAA8BlpC,EAAQuC,OAASvC,EAAQq+C,iBAAiB97C,OAASvC,EAAQ2Z,YAAYpX,OAAO+D,OACzHxK,EAAQ,GACZ,GAAIwiD,EAAmBxiD,EAAOkE,EAAS09C,GACnC,OAAO5hD,EACAsiD,GACL,SAASG,EAAqBv+C,EAAS09C,GACrC,IAAIc,EAAsBD,EAAoBj4C,QAE1C+3C,iBAAkBA,GAClBr+C,EACJ,QAAI,IAAWq+C,EAAiBJ,MAAQI,EAAiBH,OAASR,EAAY,CAC1E,IAAIe,EAAoB,GACxBH,EAAmBG,EAAmBz+C,EAAS09C,GAAY,GAC3D,IAEQgB,EAAgBC,EAFpBC,EAAoBH,EAAkBn4C,OAC1C,GAAIk4C,GAAuBI,EAEvB5+C,EAAQi+C,KAAO,QAAUS,EAAiB1+C,EAAQi+C,YAAS,IAAWS,EAAiBA,EAAiBL,EAAiBJ,KACzHj+C,EAAQk+C,KAAO,QAAUS,EAAiB3+C,EAAQk+C,YAAS,IAAWS,EAAiBA,EAAiBN,EAAiBH,KAEzHM,IACAH,EAAiBJ,MAAQO,EACzBH,EAAiBH,MAAQM,EACzBx+C,EAAQ6+C,oBAAsBN,GAE9BK,IACAP,EAAiBH,MAAQU,EACzB5+C,EAAQ8+C,kBAAoBL,EAAkBzqC,YArBxD,CAwBAlY,EAAOkE,EAAS09C,GAI1B,SAASY,EAAmBxiD,EAAOkE,EAAS09C,EAAYqB,GACpD,IAAI9vC,EAAM+vC,EAAeC,GAErBZ,iBAAkBA,GAClBr+C,EACAk+C,EAAO,QAAUjvC,EAAO,QAAU+vC,EAAgBh/C,EAAQk+C,YAAS,IAAWc,EAAgBA,EAAgBX,EAAiBH,YAAS,IAAWjvC,EAAOA,EAAO,EACjKiwC,EAAc,QAAUD,EAAsBj/C,EAAQm/C,kBAAe,IAAWF,OAAsB,EAASA,EAAoBnjD,MACvI,GAAIoiD,GAAQgB,EAAa,CAGrB,IAFA,IAAIE,EAAOC,EACPpB,EAAO,QAAUmB,EAAQ,QAAUC,EAAgBr/C,EAAQi+C,YAAS,IAAWoB,EAAgBA,EAAgBhB,EAAiBJ,YAAS,IAAWmB,EAAQA,EAAQ,EAC/J7oC,EAAI,EAAGA,EAAI2nC,EAAM3nC,IAAK,CAC3B,IAAI+oC,EAAaP,EAAUb,EAAO,EAAI3nC,EAAIA,EACtCgpC,EAAiBD,EAAarB,EAC9BuB,EAAYN,EAAYK,GAC5B,QAAI,IAAWC,GAAaD,KAAkBL,EAC1C,OAAO,EAEX,IAAIv5C,EAAO85C,EAAiBz/C,EAASw/C,EAAW9B,EAAY4B,EAAYpB,GACxE,IAAIv4C,EAGA,OAAO,EAFP7J,EAAMiL,KAAKpB,GAKnB,OAAO,EAEX,OAAO,EAGX,SAAS85C,EAAiBz/C,EAASw/C,EAAW9B,EAAY50C,EAAOo1C,GAC7D,GAAIR,GAAc8B,EAAW,CACzB,IAAIE,EAAQ,IAAM52C,GAAS9I,EAAQ0/C,OAAS,GACxCC,EAAQ72C,IAAUo1C,EAAO,GAAKl+C,EAAQ2/C,OAAS,GACnD,OAAO,SAASC,EAAsBJ,EAAW9B,EAAYgC,EAAOC,GAChE,GAAIjC,GAAc8B,EAAW,CACzB,IAAI93C,GAASimB,EAAAA,EAAAA,GAAS,GAAI6xB,GACtBvB,EAAOyB,EAAM,IAAM,EACnBxB,EAAOyB,EAAM,GACb7jD,EAAQ0jD,EAAU1jD,MACtB,GAAIA,EAAO,CACP,QAAI,IAAWoiD,IAASpiD,EAAMmiD,GAC1B,OAEJv2C,EAAO5L,MAAQ,GACX4jD,EAAMp5C,SACNoB,EAAO0c,gBAAiB,GAExBu7B,EAAMr5C,SACNoB,EAAOm4C,0BAA2B,GAEtC,IAAK,IAAItpC,EAAI,OAAG,IAAW2nC,EAAOpiD,EAAMya,EAAI0nC,GAAQ1nC,EAAI2nC,EAAM3nC,IAAK,CAC/D,IAAIupC,EAAiBhkD,EAAMya,EAAI0nC,GAC3Bt4C,EAAOi6C,EAAsBE,EAAgBpC,EAAa,EAAGgC,EAAMj3C,MAAM,GAAIk3C,EAAMl3C,MAAM,IAC7F,QAAI,IAAW9C,EAGX,OAFA+B,EAAO5L,MAAMiL,KAAKpB,IAM9B,OAAO+B,EAEX,OAAO83C,EA7BJ,CA8BLA,EAAW9B,EAAYgC,EAAOC,GAEhC,OAAOH,EAIf,SAASO,EAAaP,EAAWQ,EAAYtC,EAAYgC,GACrD,GAAIhC,GAAcsC,EAAY,CAC1B,IAAIt4C,GAASimB,EAAAA,EAAAA,GAAS,GAAIqyB,UACnBt4C,EAAO0c,sBACP1c,EAAOm4C,yBACd,IAAI5B,EAAOyB,EAAM,IAAM,EASvB,OARIM,EAAWlkD,QACX4L,EAAO5L,OAAS,OAAS0jD,QAAa,IAAWA,OAAY,EAASA,EAAU1jD,QAAU,GAC1FkkD,EAAWlkD,MAAMy+B,SAAQ,CAAC50B,EAAMmD,KAC5B,IAAIm3C,EAAcn3C,EAAQm1C,EACtBiC,EAAa,IAAMp3C,EAAQ42C,EAAMj3C,MAAM,GAAK,GAChDf,EAAO5L,MAAMmkD,GAAeF,EAAar4C,EAAO5L,MAAMmkD,GAAct6C,EAAM+3C,EAAa,EAAGwC,OAG3Fx4C,EAEX,OAAOs4C,EAEX,MAAO,CACHr4B,KAAM,SAAS5hC,EAAY2E,GACvB,IAAI47B,EAAO5nC,KACX4nC,EAAKjE,YAAct8B,EACnBugC,EAAK65B,kBAAoBz1D,GAAoB,GAC7C47B,EAAK85B,aAAer6D,EAAWs6D,aAC/B/5B,EAAKg6B,cAAe,EACpBh6B,EAAKi6B,mBAAqB,EAC1Bj6B,EAAKk6B,YAAc,CACf1kD,MAAO,IAEXwqB,EAAKm6B,oBAAsB,GAC3Bn6B,EAAKo6B,gBAAkB36D,EAAW26D,gBAClCp6B,EAAKq6B,sBAAwB,EAC7Br6B,EAAKs6B,eAAgB,EACrBt6B,EAAKwW,SAAUpV,EAAAA,EAAAA,cACfpB,EAAKu6B,gBAAiBn5B,EAAAA,EAAAA,cACtBpB,EAAKw6B,WAAYp5B,EAAAA,EAAAA,cACjBpB,EAAKy6B,2BAA4Br5B,EAAAA,EAAAA,cACjCpB,EAAK06B,UAAWt5B,EAAAA,EAAAA,cAChBpB,EAAK26B,QAASv5B,EAAAA,EAAAA,cACdpB,EAAK46B,oBAAsB56B,EAAKyW,mBAAmB/Z,KAAKsD,GACxDA,EAAK66B,kCAAoC76B,EAAK86B,iCAAiCp+B,KAAKsD,GACpFA,EAAK+6B,mBAAqB/6B,EAAKg7B,kBAAkBt+B,KAAKsD,GACtDA,EAAKi7B,uBAAyBj7B,EAAKk7B,sBAAsBx+B,KAAKsD,GAC9DA,EAAKm7B,kBAAoBn7B,EAAKo7B,iBAAiB1+B,KAAKsD,GACpDA,EAAKq7B,aAAer7B,EAAKs7B,YAAY5+B,KAAKsD,GAC1CA,EAAKu7B,iBAAmBv7B,EAAKw7B,gBAAgB9+B,KAAKsD,GAClDvgC,EAAWqiC,GAAG,UAAW9B,EAAK46B,qBAC9Bn7D,EAAWqiC,GAAG,4BAA6B9B,EAAK66B,mCAChDp7D,EAAWqiC,GAAG,sBAAuB9B,EAAK+6B,oBAC1Ct7D,EAAWqiC,GAAG,iBAAkB9B,EAAKi7B,wBACrCx7D,EAAWqiC,GAAG,YAAa9B,EAAKm7B,mBAChC17D,EAAWqiC,GAAG,WAAY9B,EAAKu7B,kBAC/B97D,EAAWg8D,QAAQ35B,GAAG,aAAc9B,EAAKq7B,eACzC7xC,EAAAA,EAAAA,IAAK/pB,GAAa,SAASi8D,EAAYC,IAC9B37B,EAAK07B,KAAexrC,EAAAA,EAAAA,IAAWyrC,KAChC37B,EAAK07B,GAAc,WACf,OAAOtjE,KAAK2jC,YAAY2/B,GAAY7vC,MAAMzzB,KAAK2jC,YAAatY,iBAK5Erf,iBAAkB,WACd,OAAOhM,KAAKyhE,mBAEhB72B,QAAS,SAAS44B,GACd,IAAIn8D,EAAarH,KAAK2jC,YAClB0/B,EAAQh8D,EAAWg8D,QACvBh8D,EAAWsiC,IAAI,UAAW3pC,KAAKwiE,qBAC/Bn7D,EAAWsiC,IAAI,4BAA6B3pC,KAAKyiE,mCACjDp7D,EAAWsiC,IAAI,sBAAuB3pC,KAAK2iE,oBAC3Ct7D,EAAWsiC,IAAI,iBAAkB3pC,KAAK6iE,wBACtCx7D,EAAWsiC,IAAI,YAAa3pC,KAAK+iE,mBACjC17D,EAAWsiC,IAAI,WAAY3pC,KAAKmjE,kBAChCE,GAASA,EAAM15B,IAAI,aAAc3pC,KAAKijE,cACjCO,GACDn8D,EAAWujC,WAGnBsvB,QAAS,SAAS54C,EAAS69C,GACvB,IAAI93D,EAAarH,KAAK2jC,YAClBw7B,EAAeC,SACfp/D,KAAKyjE,yBACLzjE,KAAK0hE,aAAer6D,EAAW82D,WAC/Bn+D,KAAK4hE,aAAe5hE,KAAK0hE,cAGjC+B,uBAAwB,WACpBzjE,KAAK6hE,mBAAqB,EAC1B7hE,KAAKiiE,sBAAwB,GAEjCyB,WAAY,WACR1jE,KAAK2jE,sBAAmB,EACxB3jE,KAAK4jE,uBAAoB,GAE7BC,gBAAiB,WACb7jE,KAAK8hE,YAAc,CACf1kD,MAAO,KAGf0mD,yBAA0B,WACtB,IAAI93D,EAAmBhM,KAAKgM,mBACxBmzD,EAAiBF,EAAwBj/D,KAAK+jE,kBAAoB,GAAI,IACtEC,EAAoB7jE,OAAOs6B,KAAKzuB,GAAkBi4D,OAAMC,IAAkB/E,EAAe+E,KAAmBl4D,EAAiBk4D,KACjI,OAAQF,GAEZ37C,KAAM,SAASnS,EAASiuD,GACpB,IAAId,EAAQrjE,KAAKqjE,QACbrjE,KAAK8jE,6BACL9jE,KAAK2jE,sBAAmB,GAE5B3jE,KAAK4jE,uBAAoB,EACzB5jE,KAAK6jE,iBAAgB,GACjB7jE,KAAK2jE,mBACLS,EAAAA,GAAAA,IAAW,CACPC,QAAShB,EACT3zD,KAAM1P,KAAK2jE,iBACXztD,QAASA,IAGZiuD,GACDnkE,KAAKskE,YAAYpuD,GAErBlW,KAAKuiE,OAAOt1B,KAAK/2B,IAErBquD,mBAAoB,WAChB,IAAKvkE,KAAKwkE,iBAAkB,CACxB,IAAIC,EACAC,EACArB,EAAQrjE,KAAKqjE,QACjBrjE,KAAKwkE,iBAAmB90D,IACpB,IAAIi1D,EAAiBD,GAAaA,IAAc1kE,KAAK2jE,iBACrD,IAAKc,GAAcE,EAAgB,CAC/BD,EAAY1kE,KAAK2jE,kBAAoB,GACrCc,EAAa,GACb,IAAK,IAAI5sC,EAAI,EAAGA,EAAI6sC,EAAU98C,OAAQiQ,IAClC4sC,GAAWG,EAAAA,EAAAA,IAAWvB,EAAMtnC,MAAM2oC,EAAU7sC,MAAQA,EAG5D,OAAO4sC,GAAWG,EAAAA,EAAAA,IAAWvB,EAAMtnC,MAAMrsB,MAGjD,OAAO1P,KAAKwkE,kBAEhBK,YAAa,WACT,OAAO7kE,KAAKqjE,SAEhBiB,YAAa,SAASpuD,GAClB,IAAImuD,EAAUrkE,KAAK6kE,cACfx9D,EAAarH,KAAK2jC,YAClBq7B,EAAaxU,GAAAA,qBAA8BxqD,KAAK6jB,SAAS+D,OACzD4G,EAAaxuB,KAAKwuB,aAClBqZ,EAAgB,YAAc7nC,KAAKuiC,OAAO,kBAC9CrsB,EAAUA,EAAQ0N,QAAQ,SAAS/M,GAC/B,OAAQxP,EAAW82D,YAAc,WAAatnD,EAAO/H,WAAQ,IAAW+H,EAAOuT,SAEnF,IAAI06C,EAAe,IAAM9F,EAAah/D,KAAK+kE,aAAe/kE,KAAKod,QAAQwK,OACnEo9C,EAAeF,KACnBV,EAAAA,GAAAA,IAAW,CACPC,QAASA,EACT30D,KAAM1P,KAAKilE,OACX/uD,QAASA,EACT8oD,WAAYA,EACZkG,gBAAgB,KAEpBd,EAAAA,GAAAA,IAAW,CACPC,QAASA,EACT30D,KAAMrI,EAAW+V,QACjBlH,QAASA,EACT8oD,WAAYA,EACZkG,gBAAgB,KAEhBllE,KAAK6hE,mBAAqB,GAAKh6B,GAAiBrZ,IAAew2C,KAC/DhlE,KAAKiiE,uBAAyB6C,IAAiBE,GAEnD9uD,EAAQ8mC,OAAO,EAAG9mC,EAAQ0R,SAE9Bs7C,YAAa,SAASiC,GAClB,IACIjvD,QAASA,GACTivD,EACJnlE,KAAKqoB,KAAKnS,GAAS,IAEvBktD,gBAAiB,SAAS98B,GACtBtmC,KAAKsiE,SAASr1B,KAAK3G,GACnBtmC,KAAKskE,YAAYh+B,EAAEpwB,UAEvBkvD,2BAA4B,SAASC,EAAer5D,GAChD,IAAIs5D,EAAwB,CAAC,YAAa,UAAW,UACjDC,EAAqBD,EAAsBj7C,QAAQg7C,GACnDG,EAAwBD,GAAsB,EAAID,EAAsBv7C,MAAMw7C,GAAsB,CAACF,GACzG,OAAOG,EAAsBrvC,MAAKkvC,GAAiBr5D,EAAiBq5D,MAExEI,2BAA4B,SAASnkD,EAAS69C,GAC1C,IAAIuG,EAAkB1lE,KAAK2jE,iBACvBgC,EAAmB3lE,KAAK4jE,kBACxBnD,EAAazgE,KAAK8hE,aAClBxgD,EAAQq+C,iBAAiB/7C,SAAWtC,EAAQtV,iBAAiBmX,WAAa7B,EAAQq+C,iBAAiB7/B,OAASxe,EAAQtV,iBAAiBiB,WACrIqU,EAAQtV,iBAAmB,CACvBmX,UAAW7B,EAAQtV,iBAAiBmX,YAGxCg8C,EAAeE,YACfqG,OAAkB,EAClBC,OAAmB,EACnBlF,EAAa,CACTrjD,MAAO,MAGP+hD,EAAeC,QACfuG,OAAmB,EACnBlF,EAAa,CACTrjD,MAAO,KAEJ+hD,EAAe/W,iBACtBqY,EAAa,CACTrjD,MAAO,MAGfgU,EAAAA,EAAAA,IAAK+tC,GAAgB,CAACkG,EAAe/kE,KAC7BA,GAASN,KAAKolE,2BAA2BC,EAAe/jD,EAAQtV,oBAChE05D,OAAkB,EAClBC,OAAmB,OAI3BA,IACArkD,EAAQtV,iBAAiBD,QAAS,GAEtCuV,EAAQokD,gBAAkBA,EAC1BpkD,EAAQqkD,iBAAmBA,EAC3BrkD,EAAQm/C,WAAaA,EAChBn/C,EAAQskD,kBACT5lE,KAAK2jE,iBAAmB+B,EACxB1lE,KAAK4jE,kBAAoB+B,EACzB3lE,KAAK8hE,YAAcrB,IAG3BiC,iCAAiCphD,GAC7B,IAAIukD,EACJ7lE,KAAK8lE,mBAAmBxkD,GAClB,KAAO,QAAUukD,EAAgBvkD,EAAQ5R,YAAS,IAAWm2D,OAAgB,EAASA,EAAcj+C,UACtGtG,EAAQ5R,KAAO+vD,EAAqBn+C,GAAS,IAASA,EAAQokD,kBAGtEI,mBAAoB,SAASxkD,GACzB,IAAIja,EAAarH,KAAK2jC,YAClBy3B,EAAkBp7D,KAAK+jE,iBAC3B/jE,KAAKqiE,0BAA0Bp1B,KAAK3rB,GACpCA,EAAQZ,MAAQ1gB,KAAKuiC,OAAO,kBAC5BjhB,EAAQykD,yBAA2BzkD,EAAQq+C,iBAC3Cr+C,EAAQtV,kBAAmB4f,EAAAA,EAAAA,GAAO,GAAI5rB,KAAKgM,oBAC3C,IAAIkzD,GAAgBl/D,KAAK6nD,aAAe7nD,KAAKgmE,cACzChmE,KAAKuiC,OAAO,yCAA2CviC,KAAK6nD,aAC5DvmC,EAAQZ,WAAQ,GAEpB,IAAIua,GAAcrP,EAAAA,EAAAA,GAAO,CACrBtJ,UAAWtiB,KAAKsiB,YAChBC,SAAUviB,KAAKuiB,YAChBjB,EAAQq+C,kBACPR,EAAiBF,EAAwBhkC,EAAamgC,EAAiB8D,GAE3E,GADAl/D,KAAKylE,2BAA2BnkD,EAAS69C,IACpC79C,EAAQskD,gBAAiB,CAC1B,IAAIK,EAAejmE,KAAKgmE,cACxB1kD,EAAQgB,UAAYjb,EAAWib,YAC/BhB,EAAQ85C,gBAAkBngC,EAC1B3Z,EAAQ69C,eAAiBA,EACzBn/D,KAAKkmE,uBAAyB/G,EAC9Bn/D,KAAKgmE,eAAgB,GACrBpqC,EAAAA,EAAAA,IAAKqqC,GAAgBjmE,KAAKmmE,cAAgBnmE,KAAKk6D,QAAQ54C,EAAS69C,IAAiB9wC,MAAK,KAC9EruB,KAAKomE,mBAAqB9kD,EAAQ+kD,cAClCrmE,KAAKmmE,cAAe,EACpBnmE,KAAKo+D,OAAO5wC,QAAO,KACfxtB,KAAKmmE,cAAe,SAG7B/3C,MAAK,KACJ/mB,EAAWuO,OAAO0L,EAAQ+kD,gBAC3B74C,QAAO,KACNxtB,KAAKgmE,eAAgB,KAEzB3+D,EAAWuO,OAAO5V,KAAKomE,kBACvBpmE,KAAKomE,iBAAmB9kD,EAAQ+kD,YAC5BrmE,KAAKgmE,eACL3+D,EAAWuO,OAAO5V,KAAKomE,kBAG/BpmE,KAAKsmE,uBAAuBhlD,IAEhCglD,uBAAwB,SAAShlD,GAC7B,IAAItV,EAAmBsV,EAAQtV,iBAC/BsV,EAAQ2Z,YAAc,GACtB,IAAIsrC,EAAcjlD,EAAQm/C,WAAWlyC,MACjCi4C,EAAuB,CACvB5iD,QAAS5X,EAAiBmX,UAC1B2c,MAAO9zB,EAAiBiB,QACxB4W,OAAQ7X,EAAiBzD,SACzB4E,SAAUnB,EAAiBmB,QAC3BoyD,MAAOvzD,EAAiBD,OACxByzD,MAAOxzD,EAAiBD,OACxBusB,kBAAmBiuC,GAAe,eAAgBA,IAAgBv6D,EAAiBD,SAEvFqlB,EAAAA,EAAAA,IAAK9P,EAAQq+C,kBAAmB,SAAStxD,EAAYo4D,GAC7CD,EAAqBn4D,KACrBiT,EAAQ2Z,YAAY5sB,GAAco4D,SAC3BnlD,EAAQq+C,iBAAiBtxD,OAGpCk4D,IACAjlD,EAAQiN,MAAQg4C,IAGxB3D,kBAAmB,SAASthD,GACxB,IAAI2Z,EAAc3Z,EAAQ2Z,YACtByrC,EAAcplD,EAAQtV,mBAAqBsV,EAAQtV,iBAAiBD,OACpE00D,EAAan/C,EAAQm/C,WACrBd,EAAmBr+C,EAAQq+C,iBAC3BgH,GAAY,IAAU3mE,KAAKuiC,OAAO,iBAAmBo9B,EACrDiH,EAAgBD,IAAcrlD,EAAQskD,iBAAmBnF,KAAgBiG,GAAe/G,EAAiB97C,OACzGgjD,EAAkBF,GAAaD,EAC/BI,EAAiBD,IAAoBvlD,EAAQskD,gBACjD,GAAK3qC,EAAL,CAIIyrC,IACAplD,EAAQi+C,KAAOtkC,EAAYskC,KAC3Bj+C,EAAQk+C,KAAOvkC,EAAYukC,YACpBvkC,EAAYskC,YACZtkC,EAAYukC,MAEnBvkC,EAAYpX,QACZoX,EAAYpX,MAAQvC,EAAQuC,OAASoX,EAAYpX,OAErD,IAAIm7C,EAAaxU,GAAAA,qBAA8BlpC,EAAQuC,OAAS87C,EAAiB97C,OAASoX,EAAYpX,OAAO+D,OACzGtG,EAAQ6+C,sBACR7+C,EAAQ5R,KAAO4R,EAAQ6+C,oBAAoBr4C,OAAOxG,EAAQ5R,OAE1D4R,EAAQ8+C,oBACR9+C,EAAQ5R,KAAO4R,EAAQ5R,KAAKoY,OAAOxG,EAAQ8+C,oBAE1CwG,GAAkBnH,EAAqBn+C,KACpCulD,GAAmBvlD,EAAQqkD,iBAC3BrkD,EAAQ5R,KAAOqvD,EAAWz9C,EAAQqkD,iBAAkB3G,IAEhD8H,IACK9mE,KAAK2jE,iBAECriD,EAAQylD,qBACfzlD,EAAQ5R,KAAO1P,KAAK2jE,iBAAmB3jE,KAAK2jE,iBAAiB77C,OAAOxG,EAAQ5R,OAF5E1P,KAAK2jE,iBAAmB5E,EAAWz9C,EAAQ5R,KAAM86C,GAAAA,qBAA8BmV,EAAiB97C,OAAO+D,SAK/G,IAAIo/C,GAAAA,EAAW1lD,EAAQ5R,MAAM0uD,KAAKnjC,GAAa5M,MAAK3e,IAChD4R,EAAQ5R,KAAOA,EACXo3D,IACA9mE,KAAK4jE,kBAAoB7E,EAAWz9C,EAAQ5R,KAAMsvD,OAEvD5wC,MAAKN,IACJxM,EAAQ5R,MAAQ,IAAI2d,EAAAA,IAAUY,OAAOH,OAGzCmN,EAAY3C,mBAAqBouC,IACjCplD,EAAQiN,OAAQ2B,EAAAA,EAAAA,IAAc5O,EAAQiN,OAASjN,EAAQiN,MAAQ,GAC/DjN,EAAQiN,MAAMC,WAAalN,EAAQ5R,KAAKkY,QAExCtG,EAAQiN,OAASjN,EAAQiN,MAAMC,YAAc,KAAM,IAAUmxC,EAAiBrnC,oBAAqB,IAAU2C,EAAY3C,qBACzHhX,EAAQiN,MAAMC,YAAc,GAEhCxuB,KAAKinE,sBAAsB3lD,GACvBslD,IACAnG,EAAWlyC,MAAQkyC,EAAWlyC,QAAS3C,EAAAA,EAAAA,GAAO,GAAItK,EAAQiN,QAC1DqN,EAAAA,EAAAA,IAAKta,EAAQ5R,MAAM2e,MAAK3e,KAClB,SAAS4R,EAAS5R,EAAMsvD,GAOtB,IANA,IAAIkI,EAAOC,EAAgBC,EAAOC,GAE9B1H,iBAAkBA,GAClBr+C,EACAi+C,EAAO,QAAU2H,EAAQ,QAAUC,EAAiB7lD,EAAQi+C,YAAS,IAAW4H,EAAiBA,EAAiBxH,EAAiBJ,YAAS,IAAW2H,EAAQA,EAAQ,EACvK1H,EAAO,QAAU4H,EAAQ,QAAUC,EAAiB/lD,EAAQk+C,YAAS,IAAW6H,EAAiBA,EAAiB1H,EAAiBH,YAAS,IAAW4H,EAAQA,EAAQ,EAClKvvC,EAAI,EAAGA,EAAI2nC,EAAM3nC,IAAK,CAC3B,IAAI0pC,EAAc1pC,EAAI0nC,EAClB+H,EAAahmD,EAAQm/C,WAAWrjD,MAChC4jD,EAAQ,IAAMnpC,GAAKvW,EAAQ0/C,OAAS,GACxCsG,EAAW/F,GAAeF,EAAaiG,EAAW/F,GAAc7xD,EAAKmoB,GAAImnC,EAAYgC,IAX3F,CAaA1/C,EAAS5R,EAAMsvD,SAI7BpjC,EAAAA,EAAAA,IAAKta,EAAQ5R,MAAM2e,MAAK,KAChB/M,EAAQ85C,kBACRp7D,KAAK+jE,iBAAmBziD,EAAQ85C,gBAChCj7D,OAAOs6B,KAAKnZ,EAAQ69C,gBAAgBtjB,SAAQwpB,IACxCrlE,KAAK+hE,oBAAoBsD,GAAiBrlE,KAAK+hE,oBAAoBsD,IAAkB/jD,EAAQ69C,eAAekG,UAIxH/jD,EAAQq+C,iBAAmBr+C,EAAQykD,8BA3E/B/lE,KAAK2jC,YAAY/tB,OAAO0L,EAAQ+kD,cA6ExCY,sBAAuB,SAAS3lD,GACxBA,EAAQtV,mBAAqBsV,EAAQtV,iBAAiBD,QAAUhF,MAAM2iB,QAAQpI,EAAQ5R,aAClF,IAAW4R,EAAQi+C,OACnBj+C,EAAQ5R,KAAO4R,EAAQ5R,KAAKqa,MAAMzI,EAAQi+C,YAE1C,IAAWj+C,EAAQk+C,OACnBl+C,EAAQ5R,KAAO4R,EAAQ5R,KAAKqa,MAAM,EAAGzI,EAAQk+C,SAIzDsD,sBAAuB,SAASlhC,GAC5B5hC,KAAKmiE,eAAel1B,KAAKrL,IAE7BohC,iBAAkB,SAASl1C,GACvB9tB,KAAKoiE,UAAUn1B,KAAKnf,GACpB9tB,KAAKo+C,QAAQnR,KAAK,CACdwN,WAAY,YACZ3sB,MAAOA,KAGfy5C,cAAe,WACX,OAAOvnE,KAAKuiB,YAEhB87B,mBAAoB,SAAS5pB,GACzB,IAAI+yC,EACAngE,EAAarH,KAAK2jC,YAClB/B,GAAY,EACZ6lC,GAAiBhzC,IAAQhE,EAAAA,EAAAA,IAAUgE,EAAKgmB,YACxCsqB,EAAa/kE,KAAK+kE,aAClB0C,IACAznE,KAAK0hE,aAAeqD,IAAe/kE,KAAKunE,iBAAmBxC,EAAa/kE,KAAKunE,gBACzEvnE,KAAK0hE,cACL1hE,KAAK4hE,cAAe,IAGxBv6D,EAAWmnB,cAAgB,EACvBnnB,EAAWib,aAAetiB,KAAK0nE,cAC/BrgE,EAAWib,UAAUtiB,KAAK0nE,YAAc,GACxC1nE,KAAKsiB,UAAUjb,EAAWib,aAC1BtiB,KAAK6jE,kBACLx8D,EAAW+2D,OACXx8B,GAAY,GAET6lC,IACPD,EAAoBngE,EAAWib,YAActiB,KAAKuiB,WAAawiD,EAC3DyC,EAAoBxnE,KAAK6hE,qBACzB7hE,KAAK6hE,mBAAqB2F,EACtB,IAAMngE,EAAWib,aAAgBtiB,KAAKuiC,OAAO,0BAC7CviC,KAAKiiE,sBAAwB,IAGjC,IAAM8C,GAAc19D,EAAWib,aAAetiB,KAAK0nE,cACnDrgE,EAAWib,UAAUtiB,KAAK0nE,YAAc,GACpC,aAAe1nE,KAAKuiC,OAAO,oBAC3Bl7B,EAAW+2D,OACXx8B,GAAY,KAInBA,IACD5hC,KAAK2nE,gBAAkB3nE,KAAK+hE,oBAC5B/hE,KAAK+hE,oBAAsB,GAC3B/hE,KAAK8lC,UAAUwD,aAAe,GAC9BtpC,KAAKo+C,QAAQnR,KAAKxY,GAClBz0B,KAAK8lC,UAAUwD,kBAAe,IAGtCs+B,6BAA8B,SAASviD,GACnC,IAAIuiB,EAAO5nC,KACX4nC,EAAKigC,kBAAmB,EACxBxiD,EAASmI,QAAQ,WACboa,EAAKigC,kBAAmB,MAGhCC,sBAAuB,WACnB,OAAO9nE,KAAKkmE,wBAEhB/G,eAAgB,WACZ,OAAOn/D,KAAK2nE,iBAEhBvM,gBAAiB,WACb,OAAOp7D,KAAK+jE,kBAAoB,IAEpCpC,WAAY,WACR,OAAO3hE,KAAK0hE,aAEhBlzC,WAAY,WACR,OAAOoC,UAAU5wB,KAAK6hE,oBAAsB7hE,KAAK2jC,YAAYnV,cAAgBxuB,KAAKiiE,wBAEtF8F,qBAAsB,WAClB,OAAO/nE,KAAKiiE,uBAEhB8C,WAAY,WACR,OAAO/kE,KAAK2jC,YAAYvmB,QAAQwK,QAEpCogD,gBAAiB,WACb,OAAOhoE,KAAKwuB,cAEhBjM,SAAU,WACN,IAAIlb,EAAarH,KAAK2jC,YACtB,OAAKtY,UAAUzD,QAAWvgB,EAAW82D,WAG9B92D,EAAWkb,SAASkR,MAAMpsB,EAAYgkB,WAFlC,GAIfq8C,UAAW,WACP,IAAI9gD,EAAQ5mB,KAAKgoE,kBAAoBhoE,KAAKiiE,sBACtC1/C,EAAWviB,KAAKuiB,WACpB,OAAIA,GAAYqE,EAAQ,EACb6L,KAAKxP,IAAI,EAAGwP,KAAKw1C,KAAKrhD,EAAQrE,IAElC,GAEX2lD,iBAAkB,WACd,OAAOloE,KAAK4hE,cAAgB5hE,KAAK2jC,YAAYnV,cAAgB,GAEjE25C,cAAe,SAASltC,EAAaooC,GACjC,IAAIh8D,EAAarH,KAAK2jC,YAClBvW,EAAI,IAAIC,EAAAA,GACZ,GAAKhmB,EAWL,OARAg8D,EAAQA,GAASh8D,EAAWg8D,QAC5BA,EAAMjF,KAAKnjC,GAAa5M,MAAM,SAAS3e,EAAM6e,GACrC7e,IAAS3I,MAAM2iB,QAAQha,IAAS3I,MAAM2iB,QAAQha,EAAKA,QACnD6e,EAAQ7e,EACRA,EAAOA,EAAKA,MAEhB0d,EAAEe,QAAQze,EAAM6e,MAChBH,KAAKhB,EAAEa,QACJb,GAEXw4C,gBAAiB,WACb,QAAS5lE,KAAK6nE,kBAElBzJ,KAAM,SAAS98C,GACX,IAAIsmB,EAAO5nC,KACPqH,EAAaugC,EAAKjE,YAClBvW,EAAI,IAAIC,EAAAA,GACZ,GAAI/L,EAAS,CACT,IAAI+hD,EAAQh8D,EAAWg8D,QACnB+E,EAAwB/gE,EAAW4zB,cACnCotC,EAAa,CACb1I,iBAAkBr+C,EAClBskD,iBAAiB,GAkCrB,OAhCAx0C,EAAAA,EAAAA,IAAKiyC,EAAMzoC,sBAAwB,IAAK,SAAS5G,EAAG3lB,GAC1CA,KAAcg6D,EAAW1I,mBAC3B0I,EAAW1I,iBAAiBtxD,GAAc+5D,EAAsB/5D,OAGxErO,KAAKkiE,cAAgB5gD,EAAQgnD,aAC7B1gC,EAAKggC,6BAA6Bx6C,GAClC/lB,EAAWkhE,uBAAuBn7C,GAClCwa,EAAK86B,iCAAiC2F,GACpC,SAAS99B,EAAQve,IACXyE,EAAAA,EAAAA,IAAUzE,IACVw8C,EAAAA,EAAAA,IAAaj+B,EAAQve,GAErBue,IAJN,EAMC,WACC,IAAKljC,EAAWg8D,QACZ,OAAOj2C,EAAEa,OAAO,aAEpB2N,EAAAA,EAAAA,IAAKysC,EAAW34D,MAAQk4B,EAAKugC,cAAcE,EAAW1I,mBAAmBtxC,MAAM,SAAS3e,EAAM6e,GAC1F85C,EAAW34D,KAAOA,EAClB24D,EAAW95C,MAAQA,GAAS,GAC5BqZ,EAAKg7B,kBAAkByF,GACnB/mD,EAAQgX,wBAAqB,IAAW+vC,EAAW95C,MAAMC,aACzD65C,EAAW95C,MAAMC,WAAa60C,EAAM70C,WAAW65C,EAAW1I,oBAE9D/jC,EAAAA,EAAAA,IAAKysC,EAAW34D,KAAM24D,EAAW95C,MAAMC,YAAYH,MAAM,SAAS3e,EAAM8e,GACpE65C,EAAW95C,MAAMC,WAAaA,EAC9BpB,EAAEe,QAAQze,EAAM24D,EAAW95C,UAC3BH,KAAKhB,EAAEa,WACXG,KAAKhB,EAAEa,UACX2Z,EAAKrF,OAAO,mBACTnV,EAAEgB,MAAM,WACXwZ,EAAKo6B,gBAAgByG,UAAU,YAAap9C,cAC5CmC,QAAO,KACPxtB,KAAKkiE,eAAgB,KACtBzzC,UAEH,OAAOpnB,EAAW+2D,QAG1BgB,OAAQ,SAASsJ,GACb,OAAOA,EAAO1oE,KAAK2jC,YAAYy7B,SAAWp/D,KAAK2jC,YAAYy6B,QAE/DuK,mBAAoB,WAChB,OAAO3oE,KAAK2jE,mBA3tBmB,ICzBvCiF,GAAwBC,GAC5B,IACIj9C,OAAQ,SAASyiB,GACbu6B,GAAwBA,GAAsBx9B,QAAQiD,IAE1Dy6B,OAAQ,SAAShjC,GACb,OAAO,IAAI8iC,GAAsB9iC,K,iCCqB9BijC,GAAuB,CAC9B7iB,eAAgB,WACZ,MAAO,CACH8iB,eAAgB,EAChB3hE,WAAY,KACZhB,cAAc,EACd6F,oBAAoB,EACpBvD,kBAAkB,EAClBe,oBAAqB,KACrBsC,iBAAkB,OAClBD,OAAQ,CACJwI,SAAS,EACTgO,cAAU,EACVD,eAAW,KAIvB0rB,YAAa,CACTt+B,KAAM89B,GAAAA,WAAAA,QAA2B,IAAIy7B,QAAQC,GAAAA,GAAiB99B,QAAQ,WAClE,IAAI+9B,EAAe,SAASvhC,EAAMv5B,EAAY/N,GAC1C,IAAI+G,EAAaugC,EAAKjE,YACtB,GAAIt8B,EAAY,CACZ,QAAI,IAAW/G,EAAO,CAClB,IAAIg7C,EAAW1T,EAAKwhC,sBAAsB/6D,GAC1C,GAAIitC,IAAah7C,EAAO,CAChB,aAAe+N,GACfhH,EAAWib,UAAU,GAEzBjb,EAAWgH,GAAY/N,GACvBsnC,EAAKyhC,6BAA8B,EACnCzhC,EAAKrF,OAAO,UAAYl0B,EAAY/N,GACpCsnC,EAAKyhC,6BAA8B,EACnC,IAAI/mD,EAAYjb,EAAWib,YAC3B,OAAOjb,EAAW,cAAgBgH,EAAa,OAAS,YAAYggB,MAAK,IAAMuZ,EAAK0hC,YAAYr8B,KAAK3qB,KAEzG,OAAO+K,EAAAA,EAAAA,MAAWc,UAAUM,UAEhC,OAAOpnB,EAAWgH,KAEtB,OAAO,GAEPk7D,EAAU,CACVtgC,KAAM,WACF,IAAIrB,EAAO5nC,KACX4nC,EAAKq9B,OAAS,GACdr9B,EAAK4hC,sBAAwB,KAC7B5hC,EAAKiP,mBAAqBjP,EAAKyC,cAAc,WAC7CzC,EAAK6hC,uBAAyB,KAC9B7hC,EAAK46B,oBAAsBl8B,IACvBsB,EAAK6hC,uBAAyBzpE,KAAK2jC,YAAYw7B,iBAC/Cv3B,EAAKyW,mBAAmB/X,GACxBsB,EAAK6hC,uBAAyB,MAElC7hC,EAAK8hC,uBAAyB9hC,EAAK+hC,sBAAsBrlC,KAAKsD,GAC9DA,EAAKi7B,uBAAyBj7B,EAAKk7B,sBAAsBx+B,KAAKsD,GAC9DA,EAAKm7B,kBAAoBn7B,EAAKo7B,iBAAiB1+B,KAAKsD,GACpDA,EAAK66B,kCAAoC76B,EAAK86B,iCAAiCp+B,KAAKsD,GACpFA,EAAKu7B,iBAAmBv7B,EAAKw7B,gBAAgB9+B,KAAKsD,GAClDA,EAAKgiC,mBAAqBhiC,EAAKiiC,kBAAkBvlC,KAAKsD,GACtDA,EAAKiP,mBAAmBqH,eAAeC,IAAIvW,EAAK8hC,wBAChD9hC,EAAKkiC,YAAa,EAClBliC,EAAKigC,kBAAmB,EACxBjgC,EAAKmiC,yBAAsB,EAC3BniC,EAAKoiC,SAAW,GAChBpiC,EAAKiC,aAAa,uBAClBjC,EAAKqiC,kBAAkB9rB,KAAK,SAASrwB,GACjC,OAAO8Z,EAAK+C,cAAc,sBAAuB,CAC7C7c,MAAOA,OAGf8Z,EAAKsiC,sBAETd,sBAAuB,SAAS/6D,GAC5B,OAAOrO,KAAK2jC,YAAYt1B,MAE5Bs6B,cAAe,WACX,MAAO,CAAC,UAAW,iBAAkB,oBAAqB,cAAe,oBAAqB,WAElGE,cAAe,SAASv5B,GACpB,GAAI,sBAAwBA,EACxB,MAAO,CACH66D,aAAa,IAIzBjhC,cAAe,WACX,MAAO,CAAC,qBAAsB,mBAAoB,UAAW,SAAU,cAAe,oBAAqB,QAAS,QAAS,gBAAiB,YAAa,WAAY,YAAa,aAAc,qBAAsB,mBAAoB,mBAAoB,gBAAiB,iBAAkB,gBAEvSysB,MAAO,WACH31D,KAAK62C,mBAAmB8e,QACxB31D,KAAKilE,OAAS,GACdjlE,KAAKkqE,sBAETtgC,cAAe,SAASnV,GACpB,IACIptB,EADAugC,EAAO5nC,KAGX,SAAS8pC,IACLrV,EAAKqV,SAAU,EAEnB,GAAI,eAAiBrV,EAAKnlB,MAAQmlB,EAAKnlB,OAASmlB,EAAKqgC,WAAargC,EAAKn0B,QAAUm0B,EAAKogC,eAAiBjtB,EAAKrF,OAAO,YAAcx7B,MAAM2iB,QAAQ+K,EAAKn0B,QAAUyG,MAAM2iB,QAAQ+K,EAAKogC,gBAAjL,CACI,IAAIuV,EACAC,EAAiB51C,EAAKn0B,QAAUm0B,EAAKogC,cACzC,GAAIwV,EAAgB,CAChB,IAAIhH,EAAQz7B,EAAKy7B,QACbA,IACAA,EAAMiH,OAAS71C,EAAKn0B,OAG5BwpC,IACA,IAAIygC,EAAmBxjE,MAAM2iB,QAAQ+K,EAAKn0B,SAAW+pE,IAAmB,QAAUD,EAAoBpqE,KAAK2jC,mBAAgB,IAAWymC,OAAoB,EAASA,EAAkBxoC,aAChL2oC,GACD3iC,EAAKsyB,QAAQtyB,EAAKrF,OAAO,4BAIjC,OAAQ9N,EAAKnlB,MACT,IAAK,eACL,IAAK,qBACL,IAAK,mBACL,IAAK,iBACDw6B,IACA,MACJ,IAAK,mBACL,IAAK,UACL,IAAK,aACL,IAAK,YACDA,IACAlC,EAAK+tB,QACL,MACJ,IAAK,SAED,GADAtuD,EAAaugC,EAAKvgC,aACdA,GAAcugC,EAAK4iC,kBAAkBnjE,GAAa,CAClD,IAAIib,EAAYjb,EAAWib,YAC3Bjb,EAAW+2D,OAAO/vC,MAAK,IAAMuZ,EAAK0hC,YAAYr8B,KAAK3qB,KAEvDwnB,IACA,MACJ,IAAK,aACDlC,EAAK+tB,QACL,MACJ,IAAK,UACDtuD,EAAaugC,EAAKvgC,aACdA,GAAcA,EAAWu6B,aAAenN,EAAKnlB,OAASmlB,EAAKqgC,WAC3D90D,KAAKyqE,gCAAiC,EACtCpjE,EAAW+2D,QAEf,MACJ,QACIx2B,EAAKtN,SAAS7F,KAG1BgX,QAAS,WACL,OAAQzrC,KAAK8pE,YAEjBY,cAAe,WACX,OAAO1qE,KAAK2jC,aAAe3jC,KAAK2jC,YAAYA,aAEhD43B,kBAAmB,SAASoP,GACxB,OAAO3qE,KAAK4qE,oBAAe,EAAQD,IAEvCC,eAAgB,SAAShnD,EAAQ+mD,GAC7B,IAAItjE,EAAarH,KAAK2jC,YAClBsM,EAAoBjwC,KAAK62C,mBAC7B,GAAIxvC,EAAY,MACR,IAAWuc,IACXA,EAASvc,EAAWuc,UAExB,IAAIinD,EAAmB7qE,KAAK8qE,6BACxBD,IACI56B,EAAkB+lB,uBAAyB/lB,EAAkBylB,2BAC7D9xC,EAASsrB,EAAAA,eAA6B,CAAC27B,EAAkBjnD,KAGjEA,EAASqsB,EAAkB+rB,aAAap4C,EAAQ+mD,GAAmBtjE,EAAW2E,mBAAmBmX,WAErG,OAAOS,GAEXmnD,UAAW,WACP,OAAI/qE,KAAKwoC,kBACLxoC,KAAKgrE,eAAiB,IAAI39C,EAAAA,GACnBrtB,KAAKgrE,iBAETpvC,EAAAA,EAAAA,OAEX2M,eAAgB,WACZ,IAAIryB,EAAUlW,KAAKgqE,SACnB,GAAI9zD,EAAQ0R,OAAQ,CAChB5nB,KAAKgqE,SAAW,GAChB,IAAI99D,EAAqBgK,EAAQ+tD,OAAMptD,GAAUA,EAAO3K,qBACxDlM,KAAKirE,YAAY,IAAM/0D,EAAQ0R,OAAS1R,EAAQ,GAAK,CACjDhK,mBAAoBA,IAGxBlM,KAAKgrE,iBACLhrE,KAAKgrE,eAAe78C,UACpBnuB,KAAKgrE,eAAiB,OAG9BtI,iCAAkC,SAASp8B,GACvC,IAAI4kC,EACAj7B,EAAoBjwC,KAAK62C,mBACzBxvC,EAAarH,KAAK2jC,YAClBg8B,EAAmBr5B,EAAEq5B,iBACrBr5B,EAAEs/B,kBAAoBjG,EAAiB2I,eAG3C3I,EAAiB/7C,OAAS5jB,KAAK4qE,eAAejL,EAAiB/7C,QAC3D,KAAO,QAAUsnD,EAAwBvL,EAAiB/7C,cAAW,IAAWsnD,OAAwB,EAASA,EAAsBtjD,SAAW,MAAQ+3C,EAAiB/7C,OAAO,KAClL0iB,EAAE52B,KAAO,GACT42B,EAAE/X,MAAQ+X,EAAE/X,OAAS,GACrB+X,EAAE/X,MAAMC,WAAa,GAEpByhB,EAAkB+lB,uBACnB/lB,EAAkBsgB,sBAAsBlpD,GAE5CrH,KAAKmrE,kBAAmB,EACxBl7B,EAAkB+qB,sBAAsB3zD,GAAarH,KAAKyqE,gCAC1DzqE,KAAKmrE,kBAAmB,EACxBxL,EAAiB7/B,KAAOmQ,EAAkB4pB,8BAC1C8F,EAAiB97C,MAAQosB,EAAkBgqB,+BAC3C5yD,EAAWy4B,KAAK6/B,EAAiB7/B,MACjCz4B,EAAWwc,MAAM87C,EAAiB97C,OAClC87C,EAAiB7/B,KAAOmQ,EAAkB4pB,6BAA6BxyD,EAAW2E,mBAAmBiB,SACrGq5B,EAAEziB,MAAQosB,EAAkBgqB,8BAA8B5yD,EAAW2E,mBAAmBzD,YAE5FohE,sBAAuB,SAASrjC,GAC5B,IAGIr+B,EACA8J,EACAq5D,EALAxjC,EAAO5nC,KACP86C,EAAcxU,EAAEwU,YAChBuC,EAAc/W,EAAE+W,YAIpB,GAAIvC,EAAY7tC,SAAW6tC,EAAYvyC,SAC/Bq/B,EAAKjE,cAAgBiE,EAAKujC,mBAC1BvjC,EAAKjE,YAAY9f,MAAM+jB,EAAKiP,mBAAmBojB,gCAC/CryB,EAAKjE,YAAY7D,KAAK8H,EAAKiP,mBAAmBgjB,+BAC9CjyB,EAAKw3B,eAEN,GAAItkB,EAAYh0C,UACnBiL,EAAe61B,EAAKiP,mBAAmB6J,aAAapa,EAAE9G,YAAa,iBAC/D6d,EAAYtrC,cAAgBsrC,EAAYvrC,YAAc/K,MAAM2iB,QAAQ3X,IAAiBsrC,EAAYp1C,aAAeo1C,EAAYvqC,yBAA2BuqC,EAAYjtC,kBACnKnI,EAAc2/B,EAAKiP,mBAAmB6J,aAAapa,EAAE9G,YAAa,gBAC9Dz4B,MAAM2iB,QAAQ3X,SAAiB,IAAWu0B,EAAE9G,cAAe/O,EAAAA,EAAAA,IAAUxoB,KAAiBo1C,EAAYvqC,yBAA2BuqC,EAAYp1C,eACzI2/B,EAAKyjC,eACLD,GAAgB,IAGnBxjC,EAAK0jC,kBAAqBp8B,EAAAA,aAA2BmO,EAAa,CAAC,QAAS,eAAgB,cAAe,sBAAuB,0BAA2B,eAAgB,gBAC9KzV,EAAKiP,mBAAmBqH,eAAeC,KAAK,SAASotB,IACjD3jC,EAAKiP,mBAAmBqH,eAAe5b,OAAOipC,GAC9C3jC,EAAKqjC,YAAY,CACbO,wBAAyBllC,EAAEwU,YAAY0wB,8BAI/C/6C,EAAAA,EAAAA,IAAU4sB,EAAY9vC,UAAU,CAChC,IAAIY,EAASy5B,EAAKiP,mBAAmB6J,aAAapa,EAAE9G,aAChDrxB,KAAWsiB,EAAAA,EAAAA,IAAUtiB,EAAOlG,eAAgBwoB,EAAAA,EAAAA,IAAUtiB,EAAO4D,iBAC7D61B,EAAKyjC,eACLD,GAAgB,IAIvBA,GAAiBtwB,EAAY33B,WAC9BykB,EAAKw3B,UAGb/gB,mBAAoB,SAAS/X,GACzB,IAAIsB,EAAO5nC,KACPqH,EAAaugC,EAAKjE,YAClBsM,EAAoBrI,EAAKiP,mBACzB40B,GAA4B,EAChCzrE,KAAKyqE,gCAAiC,EAClCpjE,IAAeugC,EAAK8jC,wBACpB9jC,EAAK8jC,uBAAwB,GAC7B9vC,EAAAA,EAAAA,IAAKgM,EAAKiP,mBAAmB6d,gBAAgBrtD,IAAagnB,MAAM,WACxDuZ,EAAKkiC,YACLliC,EAAKk7B,uBAAsB,GAE3B2I,GAA6BnlC,GAAKA,EAAEqlC,YACpCrlC,EAAEqlC,WAAY,GAElB/jC,EAAK8jC,uBAAwB,EAC7B,IAQIb,EARAe,EAAkBhkC,EAAK0jC,iBAC3B1jC,EAAK0jC,kBAAmB,EACpBM,IAAoBhkC,EAAKikC,yBAA2BhB,EAAmBjjC,EAAKkjC,6BAA8BD,GAAoBA,EAAiBjjD,SAC/I+D,EAAAA,EAAAA,IAAW,QAASic,EAAK9B,UAAUkF,MACnCpD,EAAKyjC,gBAELzjC,EAAKqjC,YAAY3kC,GAAG,MAGxBlY,MAAM,WACNwZ,EAAK8jC,uBAAwB,KAE7B9jC,EAAK8jC,wBACLD,GAA4B,EAC5B7jC,EAAKk7B,uBAAsB,IAE/Bl7B,EAAK0jC,kBAAoB1jC,EAAKiP,mBAAmBmf,sBACjDpuB,EAAKikC,uBAAyB57B,EAAkBylB,0BAGxDoN,sBAAuB,SAASlhC,GAC5B5hC,KAAK8pE,WAAaloC,EAClB5hC,KAAK8rE,uBAET9I,iBAAkB,SAAS18B,GACvBtmC,KAAKiqE,kBAAkBh9B,KAAK3G,IAEhCujC,kBAAmB,SAAS3zD,GACxBlW,KAAKuiE,OAAOt1B,KAAK/2B,IAErB61D,UAAW,WACP/rE,KAAKiqE,kBAAkBh9B,KAAKthB,EAAAA,EAAAA,MAAAA,MAAmBA,EAAAA,EAAQN,aAE3Dm/C,kBAAmB,SAASnjE,GACxB,IAAIib,EAAYtiB,KAAKuiC,OAAO,oBACxBhgB,EAAWviB,KAAKuiC,OAAO,mBACvBypC,EAAgBhsE,KAAKuiC,OAAO,kBAC5B0pC,EAAgBjsE,KAAKuiC,OAAO,kBAC5B2pC,EAAa,aAAeD,EAC5BE,EAAc,YAAcF,EAC5B9N,EAAW6N,GAAiBG,GAAeD,EAC3CE,GAAY,EAchB,OAbA/kE,EAAWixB,mBAAmB4zC,QAC1B,IAAWF,GAAiB3kE,EAAW82D,aAAeA,IACtD92D,EAAW82D,SAASA,GACpBiO,GAAY,QAEZ,IAAW7pD,GAAYlb,EAAWkb,aAAeA,IACjDlb,EAAWkb,SAASA,GACpB6pD,GAAY,QAEZ,IAAW9pD,GAAajb,EAAWib,cAAgBA,IACnDjb,EAAWib,UAAUA,GACrB8pD,GAAY,GAETA,GAEXC,6BAA8B,WAC1B,IAAIhlE,EAAarH,KAAKuiC,OAAO,cAC7B,OAAIx7B,MAAM2iB,QAAQriB,GACP,CACHg8D,MAAO,CACHv0D,KAAM,QACNY,KAAMrI,EACNqkB,IAAK1rB,KAAKuiC,OAAO,aAItBl7B,GAEXilE,gBAAiB,WACb,IAAIjlE,EAAarH,KAAKuiC,OAAO,cACzBgqC,EAAgBvsE,KAAK2jC,YACzB3jC,KAAKs6B,WACLjzB,EAAarH,KAAK2jC,YAClB3jC,KAAKyqE,gCAAiC,EACtCzqE,KAAKwpE,sBAAwB,KACzBniE,GACArH,KAAKwqE,kBAAkBnjE,GACvBrH,KAAKwsE,cAAcnlE,IACZklE,GACPvsE,KAAKirE,eAGbwB,gBAAiB,WACb,IAAIplE,EAAarH,KAAK2jC,YAClB3a,EAAS,IAAIqE,EAAAA,GAQjB,OAPAuO,EAAAA,EAAAA,IAAK57B,KAAK62C,mBAAmBqjB,SAAQ,IAAO1sC,QAAQ,WAC5CnmB,EACAA,EAAW+2D,OAAO/vC,KAAKrF,EAAOmF,SAASC,KAAKpF,EAAOiF,QAEnDjF,EAAOmF,aAGRnF,EAAOyF,WAElBi+C,oBAAqB,SAAStvD,GAC1B,OAAOA,EAAM2M,MAAM,IAEvB4iD,iBAAkB,WACd,OAAO,GAEXC,cAAe,SAASxvD,EAAOvG,GAC3B,IAAI+wB,EAAO5nC,KACP6sE,EAAgBjlC,EAAK+kC,mBACrBlyB,EAAa5jC,EAAO4jC,WACpB7D,EAAiBhP,EAAKiP,mBAAmBC,kBAAkB,KAAM,eAAiB2D,GAClFqyB,EAAellC,EAAKq9B,OACpB8H,EAAkB,WAAatyB,GAAcqyB,EAAallD,OAAS,EAAIklD,EAAaA,EAAallD,OAAS,GAAK,KAC/GouB,GAAYvlB,EAAAA,EAAAA,IAAU,OAASs8C,QAAmB,IAAWA,OAAkB,EAASA,EAAgB/2B,WAAa+2B,EAAgB/2B,UAAY,EAAI,EACrJ10B,EAAU,CACVs1B,eAAgBA,EAChBZ,UAAWA,GAEXhtB,EAAS,GAQb,OAPAoI,EAAAA,EAAAA,IAAKhU,GAAQ,SAASgN,EAAOnD,IACrBwJ,EAAAA,EAAAA,IAAUxJ,KACV3F,EAAQiyB,SAAWnpB,EAAQyiD,EAC3B5lD,EAAO2gB,EAAKolC,aAAa/lD,EAAM3F,GAC/B0H,EAAOX,KAAKpB,OAGb+B,GAEXgkD,aAAc,SAAS/lD,EAAM3F,GAIzB,OAHA2F,EAAOjnB,KAAKitE,kBAAkBhmD,EAAM3F,GACpC2F,EAAOjnB,KAAKktE,iBAAiBjmD,EAAM3F,GACnC2F,EAAK+uB,UAAY10B,EAAQ00B,YAClB/uB,GAEXgmD,kBAAmB,SAASv9D,GACxB,MAAO,CACHo0B,QAAS,OACTp0B,KAAMA,EACNgc,IAAK1rB,KAAK+7B,MAAMrsB,KAGxBw9D,iBAAkB,SAASC,EAAU7rD,GAEjC,OADA6rD,EAASzxC,OAAS17B,KAAKotE,mBAAmBD,EAASz9D,KAAM4R,EAAQs1B,gBAC1Du2B,GAEXC,mBAAoB,SAAS19D,EAAM5I,EAASumE,GAGxC,IAFA,IACI/sE,EADAo7B,EAAS,GAEJ7D,EAAI,EAAGA,EAAI/wB,EAAQ8gB,OAAQiQ,IAAK,CACrC,IAAI1pB,EAASrH,EAAQ+wB,GACrBv3B,EAAQ+sE,OAAa,EAAS,KACzBl/D,EAAOk5B,UACJl5B,EAAO4C,mBACPzQ,EAAQ6N,EAAO4C,mBAAmBrB,GAC3BvB,EAAOoD,YACdjR,EAAQoP,EAAKvB,EAAOoD,aAG5BmqB,EAAOrT,KAAK/nB,GAEhB,OAAOo7B,GAEX4xC,aAAc,SAASz2D,GACf,WAAaA,EAAO4jC,WACpBz6C,KAAKutE,mBAAmB12D,GACjB7W,KAAKod,QAAQwK,QAAU/Q,EAAO3K,oBAAsB,YAAc2K,EAAO4jC,WAChFz6C,KAAKwtE,kBAAkB32D,GAChB,YAAcA,EAAO4jC,YAC5Bz6C,KAAKytE,iBAAiB52D,IAG9B42D,iBAAkB,SAAS52D,GACvB7W,KAAKilE,OAASpuD,EAAOuG,MAAM2M,MAAM,IAErC2jD,eAAgB,SAAS72D,GACrB,IAAI82D,EAAa92D,EAAO82D,WAAW5jD,MAAM,GACrC8iD,EAAgB7sE,KAAK2sE,mBACzBgB,EAAW7tC,MAAM,SAAS8tC,EAAGC,GACzB,OAAOD,EAAIC,KAEf,IAAK,IAAIh2C,EAAI,EAAGA,EAAI81C,EAAW/lD,OAAQiQ,IAAK,CACxC,IAAIi2C,EAAoBH,EAAW91C,GAC/BhhB,EAAOk3D,2BACPD,GAAqBjB,GAErBiB,EAAoB,IACpBH,EAAW3wB,OAAOnlB,EAAG,GACrBA,KAGR,OAAO81C,GAEXJ,mBAAoB,SAAS12D,GACzB,IAOI4jC,EAPA7S,EAAO5nC,KACPod,EAAQvG,EAAOuG,MACfuwD,EAAa/lC,EAAK8lC,eAAe72D,GACjCg2D,EAAgBjlC,EAAK+kC,mBACrBzgE,EAAqB07B,EAAKrF,OAAO,sBACjCyrC,GAAa,EACbC,EAAqB,EAEzBp3D,EAAOuG,MAAQ,GACfvG,EAAO82D,WAAa,GACpB92D,EAAOgkC,cAAgB,GACvBhkC,EAAOikC,YAAc,GACrB,IAAIozB,EAAa,SAASC,EAAOC,EAAOC,GACpC,IAAIrlD,EAASmlD,GAASC,IAASrrC,EAAAA,EAAAA,IAAaorC,EAAMziD,IAAK0iD,EAAM1iD,KAI7D,OAHI1C,GAAUqlD,IACVrlD,EAASmlD,EAAMrqC,UAAYsqC,EAAMtqC,UAAY,WAAasqC,EAAMtqC,SAAWqqC,EAAMG,YAAcF,EAAME,YAElGtlD,IAEXoI,EAAAA,EAAAA,IAAKu8C,GAAa,SAASvjD,EAAOmpB,GAC9B,IAAIsH,EAEJ,GADAtH,GAAY06B,EAAqBpB,EAC7BmB,IAAcz6B,EAAlB,CAGAy6B,EAAYz6B,EACZ,IAAIg7B,EAAU3mC,EAAKq9B,OAAO1xB,GACtBi7B,EAAc5mC,EAAKq9B,OAAO1xB,EAAW,GACrCk7B,EAAUrxD,EAAMm2B,GAChBm7B,EAActxD,EAAMm2B,EAAW,GAC/B86B,EAASH,EAAWK,EAASC,IAAgBN,EAAWO,EAASC,GAKrE,GAJID,IACAA,EAAQl7B,SAAWA,EACnB18B,EAAOuG,MAAMiL,KAAKomD,IAElBF,GAAWE,GAAWP,EAAWK,EAASE,EAASJ,GACnD5zB,EAAa,SACb7S,EAAKq9B,OAAO1xB,GAAYk7B,EACpBF,EAAQhhE,UAAYkhE,EAAQlhE,QAC5BsJ,EAAOuG,MAAM4/B,QAAQ,EAAG,EAAG,CACvBzvC,QAASkhE,EAAQlhE,UAEdrB,IAAuB2K,EAAO83D,eACrC9zB,EAAgBjT,EAAKgnC,kBAAkBL,EAASE,EAASl7B,EAAWs5B,SAErE,GAAI4B,IAAYF,GAAWG,GAAeR,EAAWK,EAASG,EAAaL,GAC9E5zB,EAAa,SACb7S,EAAKq9B,OAAOjoB,OAAOzJ,EAAU,EAAGk7B,GAChCR,SACG,GAAIM,IAAYE,GAAWD,GAAeN,EAAWO,EAASD,EAAaH,GAC9E5zB,EAAa,SACb7S,EAAKq9B,OAAOjoB,OAAOzJ,EAAU,GAC7B06B,IACAD,GAAa,MACV,KAAIS,EAIP,OAHAh0B,EAAa,SACb7S,EAAKq9B,OAAO1xB,GAAYk7B,EAI5B53D,EAAO82D,WAAWtlD,KAAKkrB,EAAWs5B,GAClCh2D,EAAOikC,YAAYzyB,KAAKoyB,GACxB5jC,EAAOgkC,cAAcxyB,KAAKwyB,QAGlCg0B,eAAgB,SAASC,EAAQC,EAAQC,EAAiBxvC,EAAayvC,GACnE,GAAIzjD,KAAKC,UAAUqjD,EAAOpzC,OAAO8D,MAAkBhU,KAAKC,UAAUsjD,EAAOrzC,OAAO8D,IAC5E,OAAO,EAGX,SAAS0vC,EAAevpC,EAAKnG,GACzB,QAAOmG,EAAIwpC,qBAAiB,IAAWxpC,EAAIwpC,eAAe3vC,GAE9D,OAAI0vC,EAAeJ,EAAQtvC,KAAiB0vC,EAAeH,EAAQvvC,IAKvE4vC,yBAA0B,SAASb,EAASE,EAASO,EAAiBC,GAClE,IAAIp0B,EACJ,GAAI0zB,EAAQzqC,UAAY2qC,EAAQ3qC,QAAS,CACrC,GAAI,UAAY2qC,EAAQ3qC,SAAW,gBAAkB2qC,EAAQ3qC,UACzD+W,EAAgB,GACZ,WAAa4zB,EAAQ3qC,SACrB,IAAK,IAAItE,EAAc,EAAGA,EAAc+uC,EAAQ7yC,OAAO9T,OAAQ4X,IACvDx/B,KAAK6uE,eAAeN,EAASE,EAASO,EAAiBxvC,EAAayvC,IACpEp0B,EAAcxyB,KAAKmX,GAK/B,UAAYivC,EAAQ3qC,SAAW2qC,EAAQzuC,aAAeuuC,EAAQvuC,YAAcuuC,EAAQh9B,QACpFsJ,EAAgB0zB,EAAQh9B,MAAMvf,KAAI,CAACiiB,EAAM7pB,KACrC,IAAIilD,EACJ,MAAO,iBAAmB,QAAUA,EAAep7B,EAAK9lC,cAAW,IAAWkhE,OAAe,EAASA,EAAavgE,MAAQsb,GAAS,KACrIxG,QAAOwG,GAASA,GAAS,KAGpC,OAAOywB,GAEX+zB,kBAAmB,SAASL,EAASE,EAASO,EAAiBC,GAC3D,IAAIK,EACAC,EAAuBvvE,KAAKovE,yBAAyBb,EAASE,EAASO,EAAiBC,GAmB5F,OAlBI,QAAUK,EAAwBC,SAAyB,IAAWD,GAAyBA,EAAsB1nD,QAAU5nB,KAAKuiC,OAAO,qBAC3IgtC,OAAuB,GAEvBA,IACAhB,EAAQh9B,OAASg9B,EAAQh9B,MAAMsK,SAAS,SAAS5H,EAAMzU,GACnD,IAAIgwC,EAAgBD,EAAqBllD,QAAQmV,IAAgB,GAC5DgwC,GAAiBv7B,GAAQA,EAAKgJ,QAC/BhJ,EAAKgJ,OAAOwxB,MAGpBA,EAAQxxB,OAASsxB,EAAQtxB,OACzBwxB,EAAQ9xB,MAAQ4xB,EAAQ5xB,MACxB8xB,EAAQl9B,MAAQg9B,EAAQh9B,MACpB09B,IACAR,EAAQlzB,UAAYgzB,EAAQ7yC,QAEhC6yC,EAAQtxB,QAAUsxB,EAAQtxB,OAAOwxB,IAE9Bc,GAEXE,cAAe,SAAStB,EAAOC,GAC3B,GAAI5iD,KAAKC,UAAU0iD,EAAMzyC,UAAYlQ,KAAKC,UAAU2iD,EAAM1yC,QACtD,OAAO,EAEX,GAAI,CAAC,WAAY,WAAY,UAAW,aAAavF,MAAKhd,GAASg1D,EAAMh1D,KAAWi1D,EAAMj1D,KACtF,OAAO,EAEX,GAAI,UAAYg1D,EAAMrqC,SAAW,gBAAkBqqC,EAAMrqC,QAAS,CAC9D,IAAI4rC,EAAaC,EAAaC,EAAcC,EACxCC,EAAgB3B,EAAMnuC,aAAeouC,EAAMpuC,WAC3C+vC,EAAoBvkD,KAAKC,UAAU0iD,EAAM6B,gBAAkBxkD,KAAKC,UAAU2iD,EAAM4B,cAChFC,GAAqB,QAAUP,EAAcvB,EAAMz+D,YAAS,IAAWggE,OAAc,EAASA,EAAYhqC,mBAAqB,QAAUiqC,EAAcvB,EAAM1+D,YAAS,IAAWigE,OAAc,EAASA,EAAYjqC,kBAAoB,QAAUkqC,EAAezB,EAAMz+D,YAAS,IAAWkgE,OAAe,EAASA,EAAazO,6BAA+B,QAAU0O,EAAezB,EAAM1+D,YAAS,IAAWmgE,OAAe,EAASA,EAAa1O,0BAC3b,IAAK2O,IAAkBC,IAAsBE,EACzC,OAAO,EAGf,OAAO,GAEXzC,kBAAmB,SAAS32D,GACxB,IAAI82D,EAAa,GACb9yB,EAAgB,GAChBC,EAAc,GACd19B,EAAQ,GACR8yD,EAAgB,GAEpB,SAASC,EAAUxqC,GACf,GAAIA,EACA,OAAOA,EAAI7B,QAAU,IAAMtY,KAAKC,UAAUka,EAAIja,KAGtD,IAAI0kD,EAAepwE,KAAKilE,OACpBoL,EAAWD,EAAarmD,QAC5BlT,EAAOuG,MAAMy+B,SAAS,SAAS50B,EAAMmD,GACjC,IAAIsB,EAAMykD,EAAUlpD,GACpBipD,EAAcxkD,GAAOtB,EACrBnD,EAAKssB,SAAWnpB,KAEpB,IAAIpB,GAASsnD,EAAAA,GAAAA,GAAYD,EAAUx5D,EAAOuG,MAAO+yD,GAAW,CAAChC,EAAOC,MAC3DpuE,KAAKyvE,cAActB,EAAOC,KAG3BD,EAAM58B,QACN48B,EAAMlxB,QAAUkxB,EAAMlxB,OAAOmxB,GAC7BD,EAAM58B,MAAMsK,SAAS,SAAS5H,GACtBA,GAAQA,EAAKgJ,QACbhJ,EAAKgJ,OAAOmxB,GAAO,QAIxB,KAENplD,GAILA,EAAO6yB,SAAQhlC,IACX,OAAQA,EAAO/H,MACX,IAAK,SACD,IAAIsb,EAAQvT,EAAOuT,MACfqkD,EAAU53D,EAAOnH,KACjB6+D,EAAU13D,EAAO03D,QACjBgB,EAAuBvvE,KAAK4uE,kBAAkBL,EAASE,EAASrkD,GAAO,GAC3EujD,EAAWtlD,KAAK+B,GAChB0wB,EAAYzyB,KAAK,UACjBjL,EAAMiL,KAAKomD,GACX2B,EAAahmD,GAASqkD,EACtB5zB,EAAcxyB,KAAKknD,GACnB,MACJ,IAAK,SACD5B,EAAWtlD,KAAKxR,EAAOuT,OACvB0wB,EAAYzyB,KAAK,UACjBjL,EAAMiL,KAAKxR,EAAOnH,MAClBmrC,EAAcxyB,UAAK,GACnB+nD,EAAapzB,OAAOnmC,EAAOuT,MAAO,EAAGvT,EAAOnH,MAC5C,MACJ,IAAK,SACDi+D,EAAWtlD,KAAKxR,EAAOuT,OACvB0wB,EAAYzyB,KAAK,UACjB+nD,EAAapzB,OAAOnmC,EAAOuT,MAAO,GAClChN,EAAMiL,KAAKxR,EAAO03D,SAClB1zB,EAAcxyB,UAAK,OAG/BxR,EAAO3K,oBAAqB,EAC5B2K,EAAO4jC,WAAa,SACpB5jC,EAAO82D,WAAaA,EACpB92D,EAAOgkC,cAAgBA,EACvBhkC,EAAOikC,YAAcA,EACrBjkC,EAAOuG,MAAQA,EACXizD,EAASzoD,SACT/Q,EAAOo4D,cAAe,GAE1BjvE,KAAKuwE,oBAAmBh9B,IACpB,IAAIi9B,EAAoBxwE,KAAKywE,iBAAmB,EAC5CC,EAAiB1wE,KAAK2wE,oBACtBpC,EAAU8B,EAAS98B,EAAWi9B,GAC9B9kD,EAAMykD,EAAU5B,GAChBqC,EAAqBV,EAAcxkD,GACvC,OAAOklD,GAAsB,EAAIA,EAAqBF,EAAiBn9B,EAAW,MA9ClFvzC,KAAKytE,iBAAiB52D,IAiD9B05D,mBAAoBjgC,EAAAA,GACpBugC,mBAAoB,SAASzzD,GACzB,OAAOA,GAEX0zD,iBAAkB,SAASj6D,GACvB,IAAIuG,EACA/V,EAAarH,KAAK2jC,YAClB8W,EAAa5jC,EAAO4jC,YAAc,UAEtC,GADA5jC,EAAO4jC,WAAaA,EAChBpzC,EAAY,CACZ,IAAI0pE,EAAuB/wE,KAAKwpE,sBAC5B3yD,EAAOm6D,wBAA0BD,EACjC3zD,EAAQ2zD,GAER3zD,EAAQvG,EAAOuG,OAAS/V,EAAW+V,QACnCA,EAAQpd,KAAK0sE,oBAAoBtvD,GACjCA,EAAQpd,KAAK4sE,cAAcxvD,EAAOvG,GAClC7W,KAAKwpE,sBAAwBpsD,GAEjCA,EAAQpd,KAAK6wE,mBAAmBzzD,EAAOvG,GACvCA,EAAOuG,MAAQA,EACf,IAAIizD,EAAWrwE,KAAKilE,OAAOr9C,SAAWxK,EAAMwK,QAAU5nB,KAAKilE,OAC3DjlE,KAAKstE,aAAaz2D,GAClB,IAAIg2D,EAAgB7sE,KAAK2sE,oBACzBv7C,EAAAA,EAAAA,IAAKpxB,KAAKilE,QAAQ,CAAC76C,EAAOnD,KACtBA,EAAKssB,SAAWnpB,EAAQyiD,EACpBwD,IACAppD,EAAKsqB,MAAQ8+B,EAASjmD,GAAOmnB,OAAS,IAE1C,IAAIk9B,EAAUrxD,EAAMgN,GAChBqkD,IACAxnD,EAAKgqD,UAAYxC,EAAQwC,cAGjCjxE,KAAKywE,gBAAkBzwE,KAAK2wE,yBAE5B3wE,KAAKilE,OAAS,IAGtB7B,gBAAiB,SAAS98B,GACtB,IAAIqU,EAAO36C,KAAKkxE,iBACZ7pE,EAAarH,KAAKqH,aAClBA,GACAi/B,EAAEpwB,QAAQ2lC,SAAS,SAAShlC,GACxB,GAAI,WAAaA,EAAO/H,MAAQ+H,EAAOuT,OAAS,EAAG,CAE/C,IADA,IAAI4rB,EAAY,EACPne,EAAI,EAAGA,EAAIhhB,EAAOuT,MAAOyN,IAAK,CACnC,IAAI8N,EAAMgV,EAAK9iB,IACX8N,GAAQ,SAAWA,EAAI7B,SAAW,UAAY6B,EAAI7B,SAClDkS,IAGRn/B,EAAOuT,MAAQ4rB,OAK/Bi1B,YAAa,SAASp0D,EAAQs6D,GAE1B,GADAt6D,EAASA,GAAU,QACf,IAAW7W,KAAK+pE,oBAChBlzD,EAAO3K,mBAAqB2K,EAAO3K,oBAAsBlM,KAAK+pE,oBAC9DlzD,EAAOu6D,qBAAuBv6D,EAAOu6D,sBAAwBpxE,KAAKqxE,2BAC/D,GAAIx6D,EAAOX,QACdW,EAAO3K,mBAAqBlM,KAAKuiC,OAAO,2BACrC,GAAI4uC,EAAe,CACtB,IAAIhS,EAAiBn/D,KAAKqH,aAAa83D,iBACvCtoD,EAAO3K,mBAAqBizD,IAAmBA,EAAe52D,WAAa42D,EAAeh8C,WAAanjB,KAAKuiC,OAAO,sBACnH1rB,EAAOs6D,eAAgB,EACnBhS,IAAmBA,EAAeC,QAAUD,EAAepzD,QAAUozD,EAAe/W,kBACpFvxC,EAAOu6D,sBAAuB,GAGlCpxE,KAAKwoC,iBACLxoC,KAAKgqE,SAAS3hD,KAAKxR,IAGvB7W,KAAK8wE,iBAAiBj6D,GAClBA,EAAOjB,QAGX5V,KAAKsxE,aAAaz6D,KAEtBixD,sBAAuB,WACnB,IAAIzgE,EAAarH,KAAKqH,aACtB,OAAOA,GAAcA,EAAWygE,yBAA2B,IAE/DwJ,aAAc,SAASz6D,GACf7W,KAAKypE,yBACL5yD,EAAOsoD,eAAiBn/D,KAAKypE,uBAC7BzpE,KAAKypE,uBAAyB,OAElC8H,EAAAA,EAAAA,KAAY,KACRvxE,KAAKo+C,QAAQnR,KAAKp2B,OAG1B+qB,UAAW,WACP,OAAO5hC,KAAK8pE,YAAc9pE,KAAK6nE,kBAEnCiE,oBAAqB,WACjB9rE,KAAKmiE,eAAel1B,KAAKjtC,KAAK4hC,YAAa5hC,KAAKwxE,eAEpD1G,2BAA4B,WACxB,OAAO,MAEXO,aAAc,WACV,IAAIhkE,EAAarH,KAAK2jC,YACtB,GAAIt8B,EAGA,OAFAA,EAAWib,UAAU,GACrBtiB,KAAKyxE,mBAAoB,EAClBzxE,KAAKo/D,SAAS/wC,MAAK,KAClBruB,KAAKyxE,mBACLzxE,KAAKspE,YAAYr8B,WAKjCykC,oBAAqB,WACjB1xE,KAAKyxE,mBAAoB,GAE7B7tD,OAAQ,SAAS+tD,GACb,IAAItqE,EAAarH,KAAK2jC,YAClB/f,EAASvc,GAAcA,EAAWuc,SACtC,GAAI,IAAMyH,UAAUzD,OAChB,OAAOhE,EAEX+tD,EAAatmD,UAAUzD,OAAS,EAAI7gB,MAAM6qE,UAAU7nD,MAAMmC,KAAKb,UAAW,GAAKsmD,EAC3EziC,EAAAA,sBAAoCtrB,EAAQ+tD,KAG5CtqE,GACAA,EAAWuc,OAAO+tD,GAEtB3xE,KAAKqrE,iBAETlvD,YAAa,SAAS01D,GAClB,IAAIjqC,EAAO5nC,KACPiwC,EAAoBrI,EAAKiP,mBACzBi7B,EAAoB,SAASzjE,GAE7B,IADA,IAAI8tD,EAAclsB,EAAkBksB,cAC3B/xC,EAAQ,EAAGA,EAAQ+xC,EAAa/xC,IACrC6lB,EAAkByQ,aAAat2B,EAAO/b,OAAY,IAI1D,GADAu5B,EAAK9B,UAAUqD,cACX9d,UAAUzD,OAAS,EACnB,OAAQiqD,GACJ,IAAK,aACDjqC,EAAKhkB,OAAO,MACZ,MACJ,IAAK,SACDgkB,EAAKmqC,aAAa,IAClB,MACJ,IAAK,SACDD,EAAkB,gBAClB,MACJ,IAAK,MACDA,EAAkB,oBAG1BlqC,EAAKhkB,OAAO,MACZgkB,EAAKmqC,aAAa,IAClBD,EAAkB,eAClBA,EAAkB,uBAClBA,EAAkB,gBAEtBlqC,EAAK9B,UAAUsD,aAEnB4oC,uBAAwB,WACpB,IAAIpqC,EAAO5nC,KACX4nC,EAAKwW,QAAQD,KAAK,SAAS8zB,IACvBrqC,EAAKwW,QAAQ9b,OAAO2vC,GACpBrqC,EAAKsqC,kBAAkBjlC,WAG/BklC,sBAAuB7hC,EAAAA,GACvB8hC,6BAA8B,SAAS/qE,EAAY2E,GAC/C,IAAIqmE,EAA4BryE,KAAKmyE,wBACjCG,EAAoBD,EAA0BvJ,OAAO9oE,KAAK8lC,WAE9D,OADAwsC,EAAkBrpC,KAAK5hC,EAAY2E,GAC5BsmE,GAEXnwC,aAAc,SAASkhC,GAEnB,OADAA,EAAQA,GAASrjE,KAAKqjE,QACfA,aAAiB2D,GAAAA,GAE5BuL,cAAe,SAASlP,GAEpB,OADAA,EAAQA,GAASrjE,KAAKqjE,QACfA,aAAiBmP,GAAAA,GAE5BC,yBAA0B,SAASprE,GAC/B,IAAI2E,EAAmBhM,KAAKuiC,OAAO,oBAC/B8gC,EAAQh8D,EAAWg8D,QACnBqP,EAA0B,CAC1BvvD,WAAW,EACXlW,SAAS,EACTlB,QAAQ,EACRxD,UAAU,EACV4E,SAAS,GAeb,OAbInB,GAAoBA,EAAiBoX,cACrCpX,GAAmB4f,EAAAA,EAAAA,GAAO,GAAI8mD,EAAyB1mE,IAEvD,SAAWA,IACXA,EAAmBhM,KAAKmiC,aAAakhC,IAAUrjE,KAAKuyE,cAAclP,GAAS,GAAK,CAC5ElgD,WAAW,EACXlW,SAAS,EACTlB,QAAQ,KAGZ,IAASC,IACTA,EAAmB0mE,GAEhB1yE,KAAKoyE,6BAA6B/qE,EAAY2E,IAEzDwgE,cAAe,SAASnlE,GACpB,IAAIklE,EAAgBvsE,KAAK2jC,aACpBt8B,GAAcklE,IACfA,EAAcoG,YACdpG,EAAcnuB,QAAQ9b,OAAOtiC,KAAKwiE,qBAClC+J,EAAcpK,eAAe7/B,OAAOtiC,KAAK6iE,wBACzC0J,EAAcnK,UAAU9/B,OAAOtiC,KAAK+iE,mBACpCwJ,EAAclK,0BAA0B//B,OAAOtiC,KAAKyiE,mCACpD8J,EAAcjK,SAAShgC,OAAOtiC,KAAKmjE,kBACnCoJ,EAAchK,OAAOjgC,OAAOtiC,KAAK4pE,oBACjC2C,EAAc3hC,QAAQ5qC,KAAK4yE,sBAE3BvrE,IACAA,EAAarH,KAAKyyE,yBAAyBprE,IAE/CrH,KAAK2jC,YAAct8B,EACfA,IACArH,KAAKgyE,yBACLhyE,KAAK8pE,YAAcziE,EAAWwgD,WAC9B7nD,KAAKsrE,kBAAmB,EACxBtrE,KAAK6rE,uBAAyB7rE,KAAK62C,mBAAmB6e,wBACtDruD,EAAW+2C,QAAQD,IAAIn+C,KAAKwiE,qBAC5Bn7D,EAAW86D,eAAehkB,IAAIn+C,KAAK6iE,wBACnCx7D,EAAW+6D,UAAUjkB,IAAIn+C,KAAK+iE,mBAC9B17D,EAAWg7D,0BAA0BlkB,IAAIn+C,KAAKyiE,mCAC9Cp7D,EAAWi7D,SAASnkB,IAAIn+C,KAAKmjE,kBAC7B97D,EAAWk7D,OAAOpkB,IAAIn+C,KAAK4pE,sBAGnCxsD,MAAO,WACH,OAAOpd,KAAKilE,QAEhBtjC,QAAS,WACL,OAAQ3hC,KAAKod,QAAQwK,QAEzB8/C,UAAW,WACP,OAAO1nE,KAAK2jC,YAAc3jC,KAAK2jC,YAAY+jC,YAAc,GAE7DrgE,WAAY,WACR,OAAOrH,KAAK2jC,aAEhB0/B,MAAO,WACH,IAAIh8D,EAAarH,KAAK2jC,YACtB,OAAOt8B,GAAcA,EAAWg8D,SAEpCwP,QAAS,SAASnjE,GACd,IAAIk4B,EAAO5nC,KACPotB,EAAI,IAAIC,EAAAA,GACRhmB,EAAaugC,EAAKjE,YACtB,GAAIt8B,EACA,GAAIqI,EAAM,CACN,IAAI4R,EAAU,CACV5R,KAAMA,EACNk2D,iBAAiB,EACjBjG,iBAAkB,CACd2I,cAAc,GAElBrtC,YAAa,CACTrX,OAAQgkB,EAAK2zB,oBACb13C,MAAOxc,EAAWwc,QAClBic,KAAMz4B,EAAWy4B,SAGzBz4B,EAAWu7D,kBAAkBthD,IAC7Bsa,EAAAA,EAAAA,IAAKta,EAAQ5R,MAAM2e,MAAM,SAAS3e,GAC9BA,EAAOk4B,EAAK8kC,oBAAoBh9D,GAChC0d,EAAEe,QAAQyZ,EAAKglC,cAAcl9D,EAAM,CAC/B+qC,WAAY,eACZn5B,EAAQiN,OAASjN,EAAQiN,MAAMphB,YACnCihB,KAAKhB,EAAEa,aACR,GAAK5mB,EAAWu6B,YAanBxU,EAAEa,aAb8B,CAChC,IAAIgN,GAAcrP,EAAAA,EAAAA,GAAO,GAAIvkB,EAAW4zB,cAAe,CACnDqtC,cAAc,EACdhwC,mBAAmB,IAEvBjxB,EAAW+2D,KAAKnjC,GAAa5M,MAAM,SAASjR,EAAOmR,GAC/CnR,EAAQwqB,EAAK8kC,oBAAoBtvD,GACjCA,EAAQwqB,EAAKglC,cAAcxvD,EAAO,CAC9Bq9B,WAAY,eAEhBrtB,EAAEe,QAAQ/Q,EAAOmR,GAASA,EAAMphB,YAChCihB,KAAKhB,EAAEa,aAKfb,EAAEe,QAAQ,IAEd,OAAOf,GAEX0lD,iBAAkB,SAASv/B,EAAUw/B,GACjC,IAAI9rD,EAAOjnB,KAAKod,MAAM21D,GAAUx/B,GAChC,GAAItsB,EACA,OAAOA,EAAKyE,KAGpBsnD,iBAAkB,SAAStnD,EAAKqnD,GAC5B,OAAO7jC,EAAAA,cAA4BxjB,EAAK1rB,KAAKod,MAAM21D,KAEvDh3C,MAAO,SAASrsB,GACZ,IAAI2zD,EAAQrjE,KAAKqjE,QACjB,GAAIA,EACA,OAAOA,EAAMtnC,MAAMrsB,IAG3BujE,MAAO,SAASvnD,GACZ,IAEI1C,EAFAq6C,EAAQrjE,KAAKqjE,QACb9vB,EAAWvzC,KAAKgzE,iBAAiBtnD,GAErC,GAAK23C,EAML,OAHI9vB,GAAY,IACZvqB,GAAU,IAAIqE,EAAAA,IAAUc,QAAQnuB,KAAKod,QAAQm2B,GAAU7jC,OAEpDsZ,GAAUq6C,EAAM4P,MAAMvnD,IAEjCA,IAAK,WACD,IAAI23C,EAAQrjE,KAAKqjE,QACjB,GAAIA,EACA,OAAOA,EAAM33C,OAGrBilD,kBAAmB,WACf,OAAO,GAEXuC,cAAe,SAASC,GACpB,IAAIvrC,EAAO5nC,KACPgpB,EAAS,IAAIqE,EAAAA,GACb+sC,EAAY,GACZ1qD,EAAO,GASX,OARA0hB,EAAAA,EAAAA,IAAK+hD,GAAU,SAAS/oD,EAAOsB,GAC3B0uC,EAAU/xC,KAAKuf,EAAKqrC,MAAMvnD,GAAK2C,MAAM,SAAS+kD,GAC1C1jE,EAAK0a,GAASgpD,SAGtBx3C,EAAAA,GAAAA,MAAWiG,EAAAA,EAAGu4B,GAAW5sC,QAAQ,WAC7BxE,EAAOmF,QAAQze,MAEZsZ,GAEX1G,UAAW,SAAShiB,GAChB,OAAO6oE,EAAanpE,KAAM,YAAaM,IAE3CiiB,SAAU,SAASjiB,GACf,OAAO6oE,EAAanpE,KAAM,WAAYM,IAE1C+yE,mBAAoB,SAASC,GACzBtzE,KAAK6nE,kBAAmB,EACxB7nE,KAAKwxE,aAAe8B,GAAe,GACnCtzE,KAAK8rE,uBAETyH,iBAAkB,WACdvzE,KAAK6nE,kBAAmB,EACxB7nE,KAAKwxE,kBAAe,EACpBxxE,KAAK8rE,uBAET5R,QAAS,SAAS54C,IACV,IAASA,EACTA,EAAU,CACN89C,QAAQ,EACRoU,aAAa,GAETlyD,IACRA,EAAU,CACN5O,QAAQ,EACRhG,WAAW,EACX0yD,QAAQ,IAGhB,IAAIx3B,EAAO5nC,KACPqH,EAAaugC,EAAK8iC,gBAClB8I,EAAclyD,EAAQkyD,YACtBpmD,EAAI,IAAIC,EAAAA,GACRomD,EAAsB,WACtB7rC,EAAKmiC,sBAAwByJ,GAgBjC,OAdA53C,EAAAA,EAAAA,KAAMta,EAAQ5O,QAAUk1B,EAAKiP,mBAAmBqjB,WAAW1sC,QAAQ,WAC3DlM,EAAQ88C,MAAQ98C,EAAQ89C,QACxB/3D,GAAcA,EAAWqiC,GAAG,sBAAuB+pC,IACnD73C,EAAAA,EAAAA,IAAKgM,EAAKw3B,OAAO99C,EAAQ89C,OAAQoU,IAAchmD,QAAQ,WACnDnmB,GAAcA,EAAWsiC,IAAI,sBAAuB8pC,GACpD7rC,EAAKmiC,yBAAsB,KAC3B17C,KAAKjB,EAAEe,SAASC,KAAKhB,EAAEa,UAE3B2Z,EAAKqjC,YAAY,CACb/+D,mBAAoBoV,EAAQkyD,cAEhCpmD,EAAEe,cAGHf,EAAEqB,WAEbyiD,eAAgB,WACZ,OAAOlxE,KAAKod,SAEhBs2D,mBAAoB,WAChB1zE,KAAKwsE,cAAc,OAEvB5hC,QAAS,WACL5qC,KAAK0zE,qBACL1zE,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9BsoD,YAAa,SAASC,EAAYJ,GAC9BI,EAAa7sE,MAAM2iB,QAAQkqD,GAAcA,EAAa,CAACA,IACnDA,EAAWhsD,OAAS,IAAK6I,EAAAA,EAAAA,IAAUmjD,EAAW,MAC9C5zE,KAAKirE,YAAY,CACbxwB,WAAY,SACZkzB,WAAYiG,EACZjF,cAAe6E,KAI3BK,2BAA4B,SAAS/e,GACjC,OAAO90D,KAAKqpE,8BAAgC,qBAAuBvU,GAAY,oBAAsBA,IAEzGiB,aAAc,WACV,MAAO,CACH+d,WAAY9zE,KAAKuiC,OAAO,oBACxBjgB,UAAWtiB,KAAKsiB,YAChBC,SAAUviB,KAAKuiB,aAGvBomD,mBAAoB,WAChB,OAAO3oE,KAAK2jC,aAAe3jC,KAAK2jC,YAAYglC,sBAEhDoL,iBAAkB,WACd,IAAIzxD,EAAYtiB,KAAKsiB,YACjBolD,EAAY1nE,KAAK0nE,YACrB,OAAOplD,IAAcolD,EAAY,IAWzC,OARAx4B,EAAAA,YAA0Bq6B,EAAS,QACnCr6B,EAAAA,YAA0Bq6B,EAAS,UACnCr6B,EAAAA,YAA0Bq6B,EAAS,QACnCr6B,EAAAA,YAA0Bq6B,EAAS,aAAc,GACjDr6B,EAAAA,YAA0Bq6B,EAAS,kBAAmB,GACtDr6B,EAAAA,YAA0Bq6B,EAAS,oBAAoB,GACvDr6B,EAAAA,YAA0Bq6B,EAAS,YAAY,GAC/Cr6B,EAAAA,YAA0Bq6B,EAAS,aAAc,GAC1CA,EA7mC2D,MCxCnEyK,GAAiBjL,GAAqB/6B,YAAYt+B,KAAK07B,QAAQ,CACtE+mC,sBAAuB,WACnB,OAAOE,IAEXhG,6BAA8B,WAC1B,IAAIhlE,EAAarH,KAAKuiC,OAAO,cAI7B,OAHIl7B,IAAeN,MAAM2iB,QAAQriB,IAAerH,KAAKuiC,OAAO,YACxD5W,EAAAA,EAAAA,IAAW,SAER3rB,KAAKs6B,cAGpBkwB,GAAAA,eAAwB,OAAQ,CAC5BtE,eAAgB6iB,GAAqB7iB,eACrClY,YAAa,CACTt+B,KAAMskE,MCjBd,IAAIC,GAAa,UACbC,GAAkB,eAClBC,GAAe,aACfC,GAAiB,eACjBC,GAAmB,gBACnBC,GAAwB,qBACxBC,GAAuB,SAC3B,IACIllC,kBAAmB,SAAS/tB,GACxB,IAAIkzD,EACA3tB,EACA8S,EAAc35D,KAAKuiC,OAAO,gBAC1BoN,EAAcruB,EAAQquB,YACtBxhC,EAASmT,EAAQnT,OACjB0hC,EAAuB7vC,KAAKywC,uBAAuBd,GACvD,GAAI,SAAWruB,EAAQhS,KAAM,CACzBqgC,EAAYpO,KAAK,IAAM0yC,IAAY3xC,UAClCuN,EAAqBgB,WAAWjpB,QAAUioB,EAAqBvN,SAChE,IAAImyC,EAAmB,SAAW9a,GAAexrD,EAAOyC,aACxD,KAAK6f,EAAAA,EAAAA,IAAUtiB,EAAOmE,cAAgBmiE,IAAoBhkD,EAAAA,EAAAA,IAAUtiB,EAAOkF,YAAa,CACpFmhE,EAAgB,QAAUrmE,EAAOkF,UAAY,YAAc,aAC3DwzC,EAAiB7mD,KAAKs6B,SAAShZ,GAAS0rB,YAAYmnC,GAAc,QAAUhmE,EAAOkF,WAAW25B,YAAYonC,GAAgB,SAAWjmE,EAAOkF,WAC5I,IAAIqhE,EAAwB10E,KAAKqqC,iBAAmBrqC,KAAKqqC,cAAc,WAAWqW,aAAa,eAC3Fg0B,GAAyB10E,KAAKuiC,OAAO,4BAA8Bp0B,EAAOgF,WAAa,KACvF0uB,EAAAA,EAAAA,GAAE,UAAUC,SAASwyC,IAAuB7kE,KAAKtB,EAAOgF,UAAY,GAAG4uB,SAAS8kB,GAChFA,EAAe/kB,SAASuyC,KAExBI,GACAnzD,EAAQquB,YAAY7N,SAAS9hC,KAAKqhC,gBAAgBkzC,KAQ1D,OALK9jD,EAAAA,EAAAA,IAAUtiB,EAAOkF,WAGlBrT,KAAKgmC,QAAQ,OAAQwuC,EAAe7kC,GAFpC3vC,KAAKgmC,QAAQ,OAAQ,OAAQ2J,GAI1BkX,EAEP,OAAO7mD,KAAKs6B,SAAShZ,IAG7B0uB,uBAAwB,SAAS1gC,GAC7B,MAAI,SAAWA,EACJ2kE,GACA,cAAgB3kE,EAChBglE,GAEJt0E,KAAKs6B,SAAShrB,IAEzB+gC,iBAAkB,SAAS/uB,GACvB,IAAInT,EAASmT,EAAQnT,OACjBuxB,EAAape,EAAQhI,UACrBw3B,EAAaxvB,EAAQ8uB,UACzB,GAAI,SAAW9uB,EAAQhS,KAAM,CACzB,IAAIhD,EAAatM,KAAKuiC,OAAO,cAI7B,IAHK9R,EAAAA,EAAAA,IAAUtiB,EAAOkF,YAClBy9B,GAAcA,EAAWhP,SAASoyC,IAElCx0C,EAAWmR,WAAWjpB,UAAYtb,GAAc,SAAWgV,EAAQiuB,iBAAmBjjC,GAAc,UAAYgV,EAAQiuB,iBAExH,YADA7P,EAAWi1C,QAAQ7jC,GAI3B9wC,KAAKs6B,SAAShZ,IAElB+vB,iBAAkB,SAASX,EAAOviC,EAAQ8iC,GACtC,GAAI,SAAWA,KAAiBxgB,EAAAA,EAAAA,IAAUtiB,EAAOmE,YAGjD,OAAOtS,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCslB,sBAAuB,SAASD,EAAOiY,GACnC,IAAInC,EAAqBxmD,KAAKs6B,SAASoW,GACvC,OAAOiY,EAAYnC,EAAqBA,GAAsBA,EAAmB5M,IAAI,IAAMs6B,MC5D/FU,GAAgC,8BAChCC,IAAmCjpD,EAAAA,EAAAA,GAAO,GAAIkpD,GAAc,CAC5Dl/B,WAAWjQ,GACP,IAAI2Q,EAAOt2C,KAAKs6B,SAASqL,GAMzB,MALI,WAAaA,EAAI7B,SACjB8C,EAAAA,EAAAA,GAAgB0P,GAAMy+B,EAAAA,GAAAA,IAAa5hC,GAAAA,EAAgByhC,IAAgC,KAAM50E,KAAK6pC,cAAavD,IACvGtmC,KAAK4nD,qBAAqBthB,EAAEmE,MAAO6L,OAGpCA,GAEXsR,qBAAsB,SAASnd,EAAO6L,GAClC,IAAIzU,EAAAA,EAAAA,GAAE4I,EAAMyI,eAAexL,SAAS/H,IAAI,KAAO2W,EAAK3W,IAAI,GAAxD,CAGA,IAAIiI,EAAO5nC,KACPm6B,EAAU,KACV66C,GAAwBnzC,EAAAA,EAAAA,GAAE4I,EAAMyI,eAChCK,EAAWyhC,EAAsBttC,SAAStd,QAC1CoV,GAAe,EACnB,GAAGzV,MAAMmC,KAAK0b,EAAKkY,gBAAgBvM,IAAWpd,MAAK,CAAC8xB,EAAc79B,KAC9D,GAAI69B,IAAiB+sB,EAAsBr1C,IAAI,GAE3C,OADAH,EAAcpV,GACP,KAGf,IAAIwsB,EAAiBhP,EAAKiP,mBAAmBC,kBAAkBvD,GAC3DplC,EAASyoC,EAAepX,GACxBy1C,EAAoBrtC,EAAKyC,cAAc,WACvC6qC,EAActtC,EAAKrF,OAAO,gBAC1B4yC,EAAgBF,GAAqBA,EAAkB3G,cAAgB,UAAY4G,GAAe,SAAWA,IAC7GC,GAAkBvtC,EAAKghB,oBAAmB/mB,EAAAA,EAAAA,GAAE4I,EAAM5N,YAGlD1uB,IAAWsiB,EAAAA,EAAAA,IAAUtiB,EAAOmE,aAAgBnE,EAAOk5B,UAC/CoD,EAAMsc,SACN5sB,EAAU,SACHi7C,EAAAA,GAAAA,IAAoB3qC,KAC3BtQ,EAAU,QAEd6Y,YAAW,KACPpL,EAAKiP,mBAAmBsT,gBAAgBh8C,EAAOic,MAAO+P,UAIlEkiB,mBAAmB3L,EAAOpvB,GACtB,IAAInT,EAASmT,EAAQnT,OAChBA,EAAOk5B,SAAW,WAAa/lB,EAAQwiB,SACxC9jC,KAAKqvC,kBAAkB,CACnB//B,KAAM,OACNqgC,YAAae,EACbviC,OAAQA,EACRrB,gBAAiB9M,KAAKuiC,OAAO,qBAGrCviC,KAAKs6B,SAASoW,EAAOpvB,IAEzB87B,qBAAqB9W,GACjB,IAAIwU,EAAcxU,EAAEwU,YAChB,IAAMA,EAAYlzB,QAAUkzB,EAAY7tC,QACxCjN,KAAKgxC,kBAAkB,QAG3BhxC,KAAKs6B,SAASgM,IAElBsD,cAAcnV,GACV,OAAQA,EAAKnlB,MACT,IAAK,UACDtP,KAAK8rC,cACLrX,EAAKqV,SAAU,EACf,MACJ,QACI9pC,KAAKs6B,SAAS7F,OAI1B4gD,IAA6BzpD,EAAAA,EAAAA,GAAO,GAAIkpD,GAAc,CACtDQ,sBAAsBC,EAAc9vD,GAChC,IAAImiB,EAAO5nC,KACPw1E,EAAQ5tC,EAAKtN,YAAYjP,WAc7B,OAbAub,EAAAA,EAAAA,GAAgB4uC,GAAOT,EAAAA,GAAAA,IAAa5hC,GAAAA,EAAgB,yBAA0BvL,EAAKiC,cAAa,KAC5FjC,EAAK6tC,wBAAwBhwD,EAAY2E,WAE7Cwd,EAAKyH,kBAAkB,CACnB//B,KAAM,OACNqgC,YAAa6lC,EACbrnE,OAAQ,CACJ8B,UAAW23B,EAAKrF,OAAO,cAAgB,QAAU,OACjD3xB,aAAc6U,EAAY7U,aAC1ByC,UAAW,SAAWoS,EAAYpS,UAAY,OAAS,OAE3DvG,iBAAiB,IAEd0oE,GAEXC,wBAAwBC,GACpB1iC,YAAW,IAAMhzC,KAAKqqC,cAAc,WAAW8f,gBAAgBurB,MAEnE9rC,cAAcnV,GACV,OAAQA,EAAKnlB,MACT,IAAK,UACDtP,KAAK8rC,cACLrX,EAAKqV,SAAU,EACf,MACJ,QACI9pC,KAAKs6B,SAAS7F,OAInBkhD,GAAgB,CACvBzvB,eAAgB,KAAM,CAClBj5C,QAAS,CACLuH,KAAM,SACNmR,cAAe8jB,EAAAA,EAAAA,OAA2B,mCAC1C5jB,eAAgB4jB,EAAAA,EAAAA,OAA2B,oCAC3C7jB,UAAW6jB,EAAAA,EAAAA,OAA2B,+BACtC3jB,iBAAiB,KAGzBsoB,UAAW,CACPF,MAAO,CACHiY,kBAAmB0uB,GACnBe,YAAaP,MCvIzB7qB,GAAAA,eAAwB,UAAWmrB,I,0BC8C/BE,GAAkB,WAClBlkC,GAAgB,UAChBuT,GAAe,SACflT,GAAkB,eAClB8jC,GAAmB,gBACnBC,GAAiB,cACjBC,GAAmB,mBACnBC,GAAkB,eAClB5wB,GAAqB,kBACrB6wB,GAAwB,aACxBC,GAAkB,qBAClBC,GAAc,WACdC,GAA+B,yBAC/BC,GAAyB,IAE7B,SAASC,GAA6BC,GAClC,OAAOA,EAAa/jD,KAAKgkD,MAAMD,EAAWt/B,cAAgBs/B,EAAWr/B,eAAiB,EAEnF,IAAIu/B,GAAa,CACpBxwB,eAAgB,WACZ,MAAO,CACHr9C,mBAAmB,EACnB0D,UAAW,CACPwY,UAAW,QAEf/b,UAAW,CACPuL,QAAS,OACT9E,KAAMg6B,EAAAA,EAAAA,OAA2B,WACjCj8B,MAAO,IACP9E,OAAQ,GACRoZ,eAAe,EACfD,aAAc,GACdE,UAAU,GAEd3a,gBAAiB,KACjBb,iBAAiB,EACjB2C,WAAYugC,EAAAA,EAAAA,OAA2B,yBACvCh8B,iBAAiB,EACjBX,iBAAiB,EACjBC,cAAc,EACdZ,uBAAuB,EACvBnG,oBAAoB,EACpBsH,sBAAsB,IAG9B4gC,MAAO,CACHrI,SAAU+O,GAAYxJ,QAAQ,WAC1B,IAAIurC,EAAsB,SAASj3C,EAAYpe,GAC3C,IAAIs1D,GAAkBj1C,EAAAA,EAAAA,IAAQrgB,EAAQ7R,OAAS,SAAW6R,EAAQwiB,QAC9Dr0B,EAAO6R,EAAQ7R,KACf6J,EAAYomB,EAAWC,IAAI,GAC3Bi3C,EACA1nC,EAAAA,aAA2BxP,GACpBpe,EAAQnT,OAAOwD,WACtB2H,EAAUsmB,YAAcnwB,EAExB6J,EAAUu9D,UAAYpnE,GAG9B,MAAO,CACHw3C,oBAAqB,SAAS94C,GAC1B,OAAQA,EAAOk5B,SACX,IAAK,QACD,OAAO,SAAS/tB,GACZA,EAAU4H,KAAK,WAEvB,QACI,OAAOy1D,IAGnBG,yBAA0B,SAAS3oE,GAC/B,IAAIqY,EAAexmB,KAAKuiC,OAAO,iBAC/B,OAAO,SAAS7C,EAAYpe,GACxB,IAAI5R,EAAO4R,EAAQ5R,KACfD,EAAO6R,EAAQnT,OAAOiD,QAAU,KAAOkQ,EAAQ7R,KAC/C6J,EAAYomB,EAAWC,IAAI,GAC3Bre,EAAQ2iB,cAAgB3iB,EAAQ2iB,aAAarc,SAC7CnY,GAAQ,IAAMy/B,EAAAA,uBAAqC5tB,EAAQ2iB,aAAczd,IAEzE9W,IACI4R,EAAQ7B,uBAAyB6B,EAAQ5B,sBACzCjQ,GAAQ,KAAO6R,EAAQ7B,sBAAwB,KAAO6B,EAAQ5B,sBAAwB,IAC/E4B,EAAQ5B,sBACfjQ,GAAQ,KAAO6R,EAAQ5B,sBAAwB,IACxC4B,EAAQ7B,wBACfhQ,GAAQ,KAAO6R,EAAQ7B,sBAAwB,MAGvDigB,EAAWoC,SAASg0C,IAChB3nE,EAAOwD,WACP2H,EAAUsmB,YAAcnwB,EAExB6J,EAAUu9D,UAAYpnE,IAIlCsnE,QAAS,aACTx6B,iBAAkB,SAASj7B,GACvB,IACI9R,EADArB,EAASmT,EAAQnT,OAerB,OAPIqB,EANA,UAAY8R,EAAQwiB,WAAWrT,EAAAA,EAAAA,IAAUtiB,EAAOmE,aAAgBnE,EAAO+E,iBAAoB/E,EAAOk5B,SAK1F,SAAW/lB,EAAQwiB,SAAW31B,EAAOk5B,UAAYl5B,EAAOkD,aACrDlD,EAAOkD,aAEP,CACPm0B,gCAAgC,EAChCC,OAAQzlC,KAAKinD,oBAAoB94C,IAT1BA,EAAOiE,mBAAqB,CACnCozB,gCAAgC,EAChCC,OAAQzlC,KAAK82E,yBAAyB3oE,IAUvCqB,GAEXomC,WAAY,SAASjQ,GACjB,IAAI2Q,EAAOt2C,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACrC,GAAIsa,EAAK,CACL,IAAIqxC,EAAU,UAAYrxC,EAAI7B,QAC1ByS,EAAY,SAAW5Q,EAAI7B,QAO/B,GANAyS,GAAaD,EAAKxU,SAASi0C,IAC3Bx/B,GAAav2C,KAAKuiC,OAAO,iBAAmB+T,EAAKxU,SAASm0C,IAC1Dj2E,KAAKuiC,OAAO,oBAAsB+T,EAAKxU,SAASujB,KAC5C,IAAU1f,EAAIp4B,SACd+oC,EAAK9nC,OAELwoE,EAAS,CACT1gC,EAAKxU,SAASkQ,IACd,IAAIilC,EAAgBtxC,EAAI3F,WACxBhgC,KAAKgmC,QAAQ,OAAQ,MAAOsQ,GAC5Bt2C,KAAKgmC,QAAQ,YAAYvV,EAAAA,EAAAA,IAAUwmD,IAAkBA,EAAc72C,WAAYkW,IAGvF,OAAOA,GAEX6E,aAAc,SAAS7E,EAAMhF,EAAY3L,GACjC,SAAW2L,EAAWxN,UAClB9jC,KAAKuiC,OAAO,2BACZviC,KAAK+1C,UAAUpQ,IAAQ2Q,EAAKxU,SAASo0C,IACrC5kC,EAAWqL,OAASrL,EAAWqL,OAAM,IAAM38C,KAAK+1C,UAAUpQ,KAAMrlC,IAC5Dg2C,EAAKtJ,YAAYkpC,GAAuB51E,OAGhDN,KAAKk3E,iBAAiB5lC,EAAYgF,GAClChF,EAAWqL,OAASrL,EAAWqL,OAAM,IAAMrL,EAAWiC,WAAU,IAAMvzC,KAAKk3E,iBAAiB5lC,EAAYgF,MAE5Gt2C,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9B6rD,iBAAkB,SAASvxC,EAAK2Q,GAC5B,IAAIxQ,EAAY9lC,KAAK8lC,UACjBqxC,EAAc,aAAerxC,EAAUvD,OAAO,oBAAsB2M,EAAAA,sBAAoCpJ,GACxGyN,EAAW5N,EAAI4N,SAAW,EAC1B4jC,EACA5jC,EAAWzN,EAAUxjB,YAAcwjB,EAAUvjB,WAAagxB,EAE1DA,GAAYvzC,KAAK0hC,gBAAgBivC,oBAErC3wE,KAAKgmC,QAAQ,WAAYuN,EAAU+C,IAEvC2H,kBAAmB,SAAS3X,GACxB,IAAI8wC,EAAM9wC,EAAE7R,KAAK,GACb6mC,EAAiBt7D,KAAK0hC,gBACtBiE,EAAM21B,EAAe4V,iBAAiBkG,EAAI7jC,UAC1CoJ,EAAQ38C,KAAKuiC,OAAO,kCACxB,GAAK60C,EAAI1nE,MAAQ,SAAW0nE,EAAItzC,UAAWszC,EAAIxxC,UAAa5lC,KAAKuiC,OAAO,yBAA4Boa,GAAUhX,EAA9G,CAGA,IAAIiF,EAAU+R,GAAM,IAAM2e,EAAe8R,mBAAmBgK,EAAI1nE,KAAM0nE,EAAItwE,WAAU,KAChFw0D,EAAeqY,YAAY,CAAChuC,EAAI4N,UAAWvzC,KAAKuiC,OAAO,yBACxD,CACC80C,MAAM,EACNC,eAAe,IAEnB1wC,EAAAA,EAAAA,GAAgBwwC,EAAI3jC,WAAY8jC,GAAAA,EAAa3sC,KAEjD4sC,kBAAmB,SAASC,GACxB,IAAI/2C,EAAW1gC,KAAKmhC,UAOpB,GANKT,EAASmQ,WAAWjpB,QACrB8Y,EAASqQ,OAAO,UAEhB0mC,GAAUz3E,KAAKqiC,YACfriC,KAAK03E,iBAAiBh3C,EAAUA,EAASgH,SAAU1nC,KAAK0hC,gBAAgBS,iBAEvEs1C,IAAUz3E,KAAK23E,kBAAoB33E,KAAK0hC,gBAAgBmmB,WAAY,CAGrE,IAFA,IAAI/gD,EAAU9G,KAAKkxC,aACf0mC,GAAqB,EAChB//C,EAAI,EAAGA,EAAI/wB,EAAQ8gB,OAAQiQ,IAChC,IAAK/wB,EAAQ+wB,GAAGrqB,QAAU1G,EAAQ+wB,GAAGllB,SAAU,CAC3CilE,GAAqB,EACrB,OAGJ53E,KAAKuiC,OAAO,oBAAsBviC,KAAK63E,YAAcD,GAAsB53E,KAAK62C,mBAAmB2c,oBACnGxzD,KAAK83E,sBAAsBp3C,KAIvCq3C,cAAe,SAASzxC,GACpB,IAAIh6B,EAAatM,KAAKuiC,OAAO,cACzBy1C,EAAoB1xC,EAAER,UAAUvD,OAAO,aAC3CviC,KAAKi4E,WAAa3xC,EAAE4xC,aAAah5D,IACjClf,KAAKq6C,YAAc/T,EAAE4xC,aAAan5D,KAClC,IAAIq7B,EAAa9T,EAAE4xC,aAAan5D,KAC5BzS,IACAtM,KAAKm4E,aAAe5B,GAA6BjwC,EAAER,WAAa9lC,KAAKq6C,YACjE29B,IACA59B,GAAcp6C,KAAKm4E,cAElBn4E,KAAKqhD,oBAAmB,KACzBrhD,KAAKq6C,aAAe,IAG5Br6C,KAAK2+C,cAAc1R,MAAKgC,EAAAA,EAAAA,GAAS,GAAI3I,EAAE4xC,aAAc,CACjDn5D,KAAMq7B,IACNp6C,KAAKsP,OAEbwoE,sBAAuB,SAASp3C,GAC5B,IAAI03C,EAAsBp4E,KAAK80C,2BAC3BujC,EAAgBr4E,KAAK+3E,cAAczzC,KAAKtkC,MAC5Co4E,EAAoBE,SAAWD,EAC/Br4E,KAAKu4E,YAAcv4E,KAAKwiC,iBAAiB9B,EAAU83C,GAAAA,EAAYJ,GAC/Dp4E,KAAKy4E,qBAAuBz4E,KAAKu4E,cAAe12C,EAAAA,EAAAA,GAAE7hC,KAAKu4E,YAAYj/D,cAEvEo+D,iBAAkBxoC,EAAAA,gBAClBwpC,eAAgB,SAASC,EAAgBh/B,GAErC,OADAg/B,EAAe9tC,QAAQkG,OAAO4I,GACvB35C,KAAK8+C,uBAEhBF,eAAgB,SAASg6B,EAAiB/hE,GACtC,IAAI+wB,EAAO5nC,KACP25C,EAAe/R,EAAKgW,kBACpB+6B,EAAiB/wC,EAAKkX,sBACtBrE,EAAa5jC,GAAUA,EAAO4jC,WAC9Bo+B,EAAY,GACZlwE,EAAmB3I,KAAKuiC,OAAO,oBAC/Bu2C,EAAmB94E,KAAKqhC,gBAAgBg1C,IAC5C,OAAQ57B,GACJ,IAAK,UACDrpB,EAAAA,EAAAA,IAAKva,EAAO82D,YAAa,SAASvjD,EAAOmpB,GACrC,IAAImI,EAAiB9T,EAAKoY,gBAAgB44B,GAAiB1zC,GAAG9a,GAC1DqwB,EAAa5jC,EAAOikC,aAAejkC,EAAOikC,YAAY1wB,GACtDnD,EAAOpQ,EAAOuG,OAASvG,EAAOuG,MAAMgN,GACxCyuD,EAAUxwD,MAAM,WACZ,IAAI0wD,EAAenxC,EAAKoY,kBACpBvE,EAAcs9B,EAAa7zC,GAAGqO,GAClC,OAAQkH,GACJ,IAAK,SACD,GAAIxzB,EAAM,CACN,IAAI4zB,EAAgBhkC,EAAOgkC,eAAiBhkC,EAAOgkC,cAAczwB,IAC7DqG,EAAAA,EAAAA,IAAUxJ,EAAK1Z,UAAY0Z,EAAK1Z,UAAYkuC,EAAY9U,GAAG,YAC3D8U,EAAYu9B,OAAO/xD,EAAK1Z,SACjBstC,EACPjT,EAAK4T,aAAaC,EAAaC,EAAgBb,GAE/CY,EAAYM,YAAYL,GAGhC,MACJ,IAAK,SACD,GAAKq9B,EAAanxD,OAKP6zB,EAAY7zB,OACnB8zB,EAAe+M,aAAahN,GAE5BC,EAAeu9B,YAAYF,EAAav3C,aAPxC,GAAImY,EAAc,CACd,IAAI9c,EAAS6e,EAAe/U,GAAG,SAAWgT,EAAeA,EAAa9I,SAAS,SAC/E6K,EAAew9B,UAAUr8C,GAO7Bl0B,GAAoBkO,EAAOo4D,cAC3BvzB,EAAe5Z,SAASg3C,GAE5B,MACJ,IAAK,SACDr9B,EAAYnZ,iBAI5BlR,EAAAA,EAAAA,IAAKynD,GAAY,WACb74E,UAEJ44E,EAAgBt2C,SAChB,MACJ,QACIsF,EAAKiW,gBAAgB+6B,GACrBD,EAAe72C,SAAS8F,EAAKvG,gBAAgBsQ,KAC7C/J,EAAK8wC,eAAeC,EAAgBC,KAGhDO,gBAAiB,SAASruC,EAAWsuC,EAAS1wE,GAC1C,IAAIgoC,EACA4F,EAAOt2C,KAAK41C,aACZ9uC,EAAUsyE,EAAUp5E,KAAKu2D,kBAAoBv2D,KAAKkxC,aACtDoF,EAAKxU,SAASgJ,GAAWkC,YAAYqY,GAAoBrlD,KAAKuiC,OAAO,oBACrE,IAAK,IAAI1K,EAAI,EAAGA,EAAI/wB,EAAQ8gB,OAAQiQ,IAChC6Y,EAAQ1wC,KAAKs1C,YAAY,CACrBnnC,OAAQrH,EAAQ+wB,GAChBiM,QAAS,YACTtE,YAAa3H,EACb/wB,QAASA,KAEbitC,EAAAA,EAAAA,IAAUrrC,IAAWgoC,EAAMvL,IAAI,SAAUz8B,GACzC4tC,EAAKvF,OAAOL,GAGhB,OADA1wC,KAAKgmC,QAAQ,OAAQ,eAAgBsQ,GAC9BA,GAEX+iC,gBAAiB,SAAS1mC,EAAQ2mC,EAAWl4D,GACzC,IAAI24B,EAAW/5C,KAAK05C,WAAW/G,GAC3B4mC,GAAoBx/B,EAASnyB,QAAU0xD,EAAU3yC,GAAG,SACpDjH,EAAa65C,EAAmB5mC,EAASoH,EAC7C,GAAI,QAAU34B,GAEV,GADAse,EAAWikB,QAAQgxB,QAAQ2E,GACvBC,EAAkB,CAClB,IAAIC,EAAY95C,EAAWmR,SAAS,YACpCnR,EAAWi1C,QAAQ6E,SAGvB95C,EAAW8B,OAAOuP,OAAOuoC,IAGjCG,oBAAqB,SAASp6B,GAC1B,IAAIq6B,EAAuB15E,KAAKm5E,gBAAgBnD,IAChD0D,EAAuB15E,KAAK65C,eAAewF,EAAeq6B,GAC1D15E,KAAKq5E,gBAAgBh6B,EAAeq6B,IAExCC,cAAe,SAASr4D,GACpB,IAAIsmB,EAAO5nC,KACP26C,EAAO/S,EAAKgT,SAASt5B,GACrBvY,EAAU6+B,EAAKlG,gBAAgB2hC,SAAWz7B,EAAKlG,gBAAgB2hC,QAAQ33C,MAC3E3iB,GAAW4xC,EAAKxkB,MAAM,SAASwP,GAC3B,GAAI,SAAWA,EAAI7B,cAAW,IAAW6B,EAAIja,IAEzC,OADAkc,EAAKlG,gBAAgBqqC,UAAU,QAAShjE,IACjC,MAInB6wE,qBAAsB,SAAS7U,GAC3B,OAAOA,EAAa,IAAM/kE,KAAK65E,YAEnCC,eAAgB,SAASz6B,GACrB,IAAI06B,EAAe16B,EAAcxO,SAAS,SAASA,WAAW+I,IAAI,mBAAmBA,IAAI,IAAMo8B,IAC/F,OAAO+D,EAAahxB,UAAUC,QAAQ,SAASjiC,EAAK4e,GAChD,OAAO5e,GAAMse,EAAAA,EAAAA,GAAgBM,GAAKj9B,SAClC,IAERsxE,iBAAkB,WACd,IAAI36B,EAAgBr/C,KAAK49C,kBACrBmnB,EAAa/kE,KAAK0hC,gBAAgBtkB,QAAQwK,OAC9C,GAAIy3B,GAAiBr/C,KAAK45E,qBAAqB7U,GAAa,CACxD,IAAIkV,EAAaj6E,KAAK85E,eAAez6B,GACrCr/C,KAAK65E,WAAaI,EAAalV,IAGvCjmB,oBAAqB,WACjB,IAAIoI,EAAWlnD,KAAKmhC,UAChBq1C,EAAax2E,KAAK23E,gBACtB,GAAIzwB,EAIA,OAHIsvB,IACAtvB,GAAWrlB,EAAAA,EAAAA,GAAE20C,EAAW/jC,YAErByU,EAASrW,WAAW8S,SAGnC3D,gBAAiB,SAASrG,GACtB,IAAI2F,EAAQt/C,KAAKs6B,SAASqf,GAC1B,OAAO2F,GAASA,EAAM1F,IAAI,IAAMo8B,KAEpCkE,yBAA0B,SAASvnC,GAC/B,IAAIwnC,EAAgBxnC,GAAU3yC,KAAK29C,mBACnC,OAAOw8B,GAAiBA,EAActpC,SAAS,SAASA,SAAS,IAAMmlC,KAE3E/zC,eAAgB,WACZ,OAAOjiC,KAAKuiC,OAAO,eAEvBqR,UAAW,SAAStN,GAChB,IAAIrf,EAAOjnB,KAAK0hC,gBAAgBtkB,QAAQkpB,EAAEiN,WAAa,GACvDvzC,KAAK2qC,cAAc,cAAc/e,EAAAA,EAAAA,GAAO,CACpCwuD,SAAU,SAAShhD,GACf,IAAIL,GAASi5B,EAAAA,EAAAA,IAAc54B,GAC3B,OAAOL,EAAO9R,EAAKvX,QAExB42B,EAAGrf,KAEV4sB,aAAc,SAASvN,GACnB,IAAIrf,EAAOjnB,KAAK0hC,gBAAgBtkB,QAAQkpB,EAAEiN,WAAa,GACvDvzC,KAAK2qC,cAAc,iBAAiB/e,EAAAA,EAAAA,GAAO,GAAI0a,EAAGrf,KAEtDozD,6BAA8B,SAASvzE,GACnC,IAAK,IAAI+wB,EAAI,EAAGA,EAAI/wB,EAAQ8gB,OAAQiQ,IAChC,GAAI,gBAAkB/wB,EAAQ+wB,GAAG/oB,KAC7B,OAAO+oB,EAGf,OAAO,GAEXyiD,qBAAsB,SAASh5D,GAC3B,IAAIi5D,EAA2Bv6E,KAAKq6E,6BAA6B/4D,EAAQxa,SACrE04B,GAAele,EAAQqkB,IAAIrzB,YAAc,GAAKioE,EAClD,MAAO,CACH/6C,YAAaA,EACbkW,QAASp0B,EAAQxa,QAAQ8gB,OAAS4X,EAAc,IAGxDyb,aAAc,SAAS3E,EAAMh1B,GACrB,UAAYA,EAAQqkB,IAAI7B,QACxB9jC,KAAKw6E,oBAAoBlkC,EAAMh1B,GACxBA,EAAQqkB,IAAIjK,QACnB17B,KAAKs6B,SAASgc,EAAMh1B,IAG5Bk5D,oBAAqB,SAASlkC,EAAMh1B,GAOhC,IANA,IACIyxC,EAGA/yB,EAJA2F,EAAMrkB,EAAQqkB,IAEd7+B,EAAUwa,EAAQxa,QAClBysC,EAAW5N,EAAI4N,SAEfknC,EAAmBz6E,KAAKs6E,qBAAqBh5D,GACxCuW,EAAI,EAAGA,GAAK4iD,EAAiBj7C,YAAa3H,IAC3CA,IAAM4iD,EAAiBj7C,aAAe14B,EAAQ+wB,GAAG1Y,iBAAmB,aAAemC,EAAQ2qD,eAC3FjsC,IAAe2F,EAAI3F,WACnB+yB,EAAejsD,EAAQ+wB,KAEvBmI,EAAa,KACb+yB,EAAe,CACX1rB,QAAS,SACTj4B,SAAUtI,EAAQ+wB,GAAGzoB,WAGzBpP,KAAKo7C,gBAAgBvjB,EAAGvW,EAAQu5B,gBAChC76C,KAAKq7C,YAAY/E,EAAM,CACnBh2C,MAAO0/B,EACP2F,IAAKA,EACL4N,SAAUA,EACVplC,OAAQ4kD,EACRvzB,YAAa3H,EACbgjB,cAAev5B,EAAQu5B,gBAInC,IAAI6/B,GAAuBnqC,EAAAA,EAAAA,GAAoBvwC,KAAKuiC,OAAO,eACvD9c,GAAcmG,EAAAA,EAAAA,GAAO,GAAI9kB,EAAQ2zE,EAAiBj7C,aAAc,CAChE6H,QAAS,KACTv4B,KAAM,KACNM,SAAU,KACV5B,MAAO,KACP0F,iBAAiB,EACjBjD,UAAWyqE,IAEXD,EAAiB/kC,QAAU,IAC3BjwB,EAAYiwB,QAAU+kC,EAAiB/kC,SAEvC11C,KAAKo7C,gBAAgBq/B,EAAiBj7C,YAAc,EAAGle,EAAQu5B,gBAC/D76C,KAAKq7C,YAAY/E,EAAM,CACnBh2C,MAAOqlC,EAAIjK,OAAOiK,EAAIrzB,YACtBqzB,IAAKA,EACL4N,SAAUA,EACVplC,OAAQsX,EACR+Z,YAAai7C,EAAiBj7C,YAAc,EAC5Cqb,cAAev5B,EAAQu5B,iBAInCH,YAAa,SAAS/H,EAAQrxB,GAC1B,IAAI2qD,EAAgBjsE,KAAKuiC,OAAO,kBAChCviC,KAAKs6B,SAASqY,GAAQ/mB,EAAAA,EAAAA,GAAO,CACzBqgD,cAAeA,GAChB3qD,IACHthB,KAAK25E,cAAcr4D,EAAQzK,QAC3B7W,KAAKy5E,oBAAoB9mC,GACpB3yC,KAAK63E,YACN73E,KAAK26E,yBAAyBhoC,IAGtCioC,yBAAyBjoC,EAAQrxB,EAASla,GACtC,IAAIu+B,EAAMrkB,EAAQqkB,IACd2L,GAAa1lB,EAAAA,EAAAA,GAAO,CACpB9kB,QAASwa,EAAQxa,SAClB6+B,GACCsU,EAASj6C,KAAK41C,WAAWjQ,EAAK,SAClCsU,EAAOlY,SAAS4Q,GAChB3yC,KAAKq5C,eAAeY,EAAQ7yC,EAAiBkqC,GAAY,EAAMhwB,EAAQzK,QACvE7W,KAAKm7C,aAAalB,EAAQ3I,EAAYhwB,EAAQqkB,MAElDoV,WAAY,SAASpI,EAAQrxB,GACzB,IAAIqkB,EAAMrkB,EAAQqkB,IACdt5B,EAAcrM,KAAKuiC,SAASl2B,YAC5BjF,EAAkBpH,KAAKuiC,OAAO,mBAC9B,SAAWoD,EAAI7B,SAAW18B,EAC1BpH,KAAK46E,yBAAyBjoC,EAAQrxB,EAASla,GACvC,SAAWu+B,EAAI7B,SAAW,UAAY6B,EAAI7B,UAAarT,EAAAA,EAAAA,IAAUkV,EAAIrzB,cAAejG,EAK5FrM,KAAKs6B,SAASqY,EAAQrxB,GAJtBthB,KAAKq5C,eAAe1G,EAAQtmC,GAAauf,EAAAA,EAAAA,GAAO,CAC5C9kB,QAASwa,EAAQxa,SAClB6+B,IAAM,IAKjB6U,aAAc,SAASl5B,GACnB,IAAIsmB,EAAO5nC,KACP2yC,EAAS/K,EAAKtN,SAAShZ,GAc3B,OAbKmP,EAAAA,EAAAA,IAAUmX,EAAKgW,mBAWhBhW,EAAK4vC,qBAVL5vC,EAAKiW,gBAAgBlL,GACrB/K,EAAK4vC,mBAAkB,GACvB5vC,EAAK0E,gBAAgB6R,KAAK,SAAS08B,IAC/B,IAAIC,EAAqBlzC,EAAK+vC,gBAC1BmD,GAAsBlzC,EAAKzG,UAAU4F,SAAQnE,EAAAA,EAAAA,MAAYm4C,UAAUnzD,SACnEggB,EAAK0E,gBAAgBhK,OAAOu4C,GAC5BC,EAAmBE,oBAAmB,QAM3CroC,GAEXsD,aAAc,WACV,IAAItD,EAAS3yC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAIvC,OAHIrrB,KAAKuiC,SAASl2B,aAAerM,KAAKuiC,SAASn7B,kBAC3CurC,EAAO5Q,SAAS/hC,KAAK8lC,UAAUpF,YAE5BiS,GAEXzG,YAAa,SAASr1B,GAClB,IAAI6pB,EAAW1gC,KAAKmhC,UACpBT,EAASoB,SAAS9hC,KAAKqhC,gBAAgBw0C,KAAkB7oC,YAAYhtC,KAAKqhC,gBAAgB6jB,KAAgBllD,KAAKuiC,OAAO,oBACtH7B,EAASsM,YAAYopC,GAAap2E,KAAK0hC,gBAAgBC,WACvD3hC,KAAKgmC,QAAQ,OAAQ,eAAgBtF,GACrC,IAAIiS,EAAS3yC,KAAKw6C,aAAa,CAC3B3jC,OAAQA,IAEZ7W,KAAK4+C,eAAejM,EAAQ97B,GAC5B7W,KAAKs6B,SAASzjB,GACd7W,KAAKi7E,kBAAoB,MAE7BrgC,SAAU,SAAS/jC,GACf,OAAOA,GAAUA,EAAOuG,OAASpd,KAAK0hC,gBAAgBtkB,SAE1Dg/B,gBAAiB,SAAS96B,GACtB,IAAInT,EAASmT,EAAQnT,OACjBw3B,EAAMrkB,EAAQqkB,IACdj2B,EAAOi2B,EAAIj2B,KACXsgE,EAAerqC,GAAOA,EAAIqqC,aAC1B1vE,EAAQghB,EAAQhhB,MAChB09D,EAAe9uB,EAAAA,gBAA8B/gC,EAAQ7N,EAAOoP,EAAMi2B,EAAI7B,SACtE2L,EAAazvC,KAAKs6B,SAAShZ,GAa/B,GAZAmuB,EAAWnvC,MAAQA,EACnBmvC,EAAW6L,SAAWh6B,EAAQg6B,SAC9B7L,EAAWuuB,aAAeA,EAC1BvuB,EAAW9J,IAAMA,EACjB8J,EAAW/jB,IAAMia,EAAIja,IACrB+jB,EAAW//B,KAAOA,EAClB+/B,EAAW3L,QAAU6B,EAAI7B,QACzB2L,EAAW/T,OAASiK,EAAIjK,OACxB+T,EAAWhgC,KAAQtB,EAAOk5B,QAA4D,GAAlD6H,EAAAA,YAA0B8uB,EAAc7vD,GAC5EshC,EAAW8D,SAAW5N,EAAI4N,SAC1B9D,EAAWxL,aAAe+rC,GAAgBA,EAAa1uD,EAAQke,aAC/DiQ,EAAW58B,QAAU1E,EAAOkwD,kBACxB5tC,EAAAA,EAAAA,IAAUtiB,EAAOmE,cAAgBnE,EAAOk5B,QAAS,CACjD,IAAI6zC,EAAuBl7E,KAAKuiC,OAAO,kBACnC0pC,EAAgBjsE,KAAKuiC,OAAO,kBAC5B,YAAc0pC,GAAiB,aAAeA,IAC9Cx8B,EAAW/vB,sBAAwBhQ,GAAQA,EAAKyxD,0BAA4B+Z,GAAwBA,EAAqBx7D,sBACzH+vB,EAAWhwB,sBAAwB/P,GAAQA,EAAKg2B,gBAAkBw1C,GAAwBA,EAAqBz7D,uBAGvH,OAAOgwB,GAEX0rC,oBAAqB,SAAS77B,EAAO1I,EAAgBpX,EAAal/B,GAC9D,IAAI2vC,EAAoBjwC,KAAK62C,mBACzB/vC,EAAUmpC,EAAkBiB,aAC5B/iC,EAASrH,GAAWA,EAAQ04B,GAC5B8qB,EAAWn8C,GAAUA,EAAOsE,QAAUtE,EAAOic,OACjDgH,EAAAA,EAAAA,IAAKkuB,GAAQ,SAAS/L,EAAU5N,GAC5B,KAAK9D,EAAAA,EAAAA,GAAE8D,GAAKiK,SAASoC,IACjB,IAAK,IAAIna,EAAI,EAAGA,EAAI+e,EAAehvB,OAAQiQ,IACvC,KAAIkc,EAAAA,EAAAA,IAAUuW,IAAara,EAAkB4uB,mBAAmBjoB,EAAe/e,GAAGzN,MAAOkgC,IAAa1T,EAAe/e,GAAGzN,QAAUoV,KAC9H8f,EAAMpa,GAAGqO,GAAU1C,WAAW3L,GAAGrN,GAAGsN,IAAI,CACpCnmB,QAAS1e,MAERyzC,EAAAA,EAAAA,IAAUuW,IACX,UAOxB8wB,qBAAsB,WAClB,OAAOx4C,EAAAA,EAAAA,MAAYqF,kBAEvB/G,iBAAkBgO,EAAAA,iBAClBmsC,eAAgB,SAAS9nC,EAAU2M,GAC/B,IACInJ,EACA5oC,EAFAmjC,EAAatxC,KAAK0hC,gBAAgBtkB,QAAQm2B,GAkB9C,OAfIjC,IAEInjC,GADAgrC,EAAAA,EAAAA,IAAS+G,GACAlgD,KAAK62C,mBAAmB6J,aAAaR,GAErClgD,KAAK62C,mBAAmBC,oBAAoBoJ,GAErD/xC,IACA4oC,EAAc/2C,KAAKo8C,gBAAgB,CAC/B97C,MAAO6N,EAAO4C,mBAAmBugC,EAAW5hC,MAC5C6jC,SAAUjC,EAAWiC,SACrB5N,IAAK2L,EACLnjC,OAAQA,MAIb4oC,GAEXukC,OAAQ,SAASlxD,GACb,GAAIA,GAAS,EAAG,CACZ,IAAIuwB,EAAO36C,KAAKggD,kBAChB,GAAIrF,EAAK/yB,OAASwC,EACd,OAAOyX,EAAAA,EAAAA,GAAE8Y,EAAKvwB,MAI1BuwD,yBAA0B,SAAShoC,GAC/B,IAAI2oB,EAAiBt7D,KAAK0hC,gBACtB65C,EAAYjgB,EAAel+C,OAAM,GAAMwK,OACvC+wD,EAAiB34E,KAAK8+C,sBACtB08B,EAAuBx7E,KAAKk6E,yBAAyBvnC,GACzD,GAAI6oC,GAAwB7C,GAAkBrd,EAAe9sC,cAAgB,EAAG,CAC5E,IAAIitD,GAAwB,EAC5B,GAAIF,EAAY,EACZ,GAAKv7E,KAAK63E,WAcN2D,EAAqBhtE,QACrBktE,EAAAA,EAAAA,KAAY,KACR,IAAIC,EAAiB37E,KAAK47E,mBAAkB,GACxCC,GAAgCh5C,EAAAA,EAAAA,IAAU7iC,KAAKmhC,WAAaw6C,EAC5DG,GAAgBr6B,EAAAA,EAAAA,IAAek3B,GAC/BoD,EAAmBF,EAAgCC,EAAgB,EACnE7B,EAAaj6E,KAAK85E,eAAenB,EAAe9nC,WAAW8S,SAC3DtE,EAAgB1M,GAAU3yC,KAAK29C,mBAC/Bq+B,EAAiBvpD,KAAKw1C,KAAKv7B,WAAW2S,EAAcla,IAAI,oBACxD82C,EAAmBj8E,KAAKk8E,uBACxBC,EAAeN,EAAgC5B,EAAa+B,EAAiBC,EAC7EF,IACAxK,EAAAA,EAAAA,KAAY,KACRiK,EAAqBr2C,IAAI,SAAUg3C,GACnCV,GAAwB,EACxBD,EAAqB/sE,WAG7B8iE,EAAAA,EAAAA,KAAY,IAAMvxE,KAAKo8E,qBAAqBX,YAhC9B,CAClB,IAAIY,EAAoB/gB,EAAe/4C,WAAag5D,EAChDtP,EAAgBjsE,KAAKuiC,OAAO,kBAC5B85C,EAAoB,GAAK/gB,EAAeoM,YAAc,GAAK,YAAcuE,GAAiB,aAAeA,KACzGqQ,EAAAA,GAAAA,IAAUd,EAAsBa,EAAoBr8E,KAAK65E,YACzD4B,GAAwB,IAEvBA,GAAyB9oC,GAC1B2pC,EAAAA,GAAAA,IAAUd,EAAsB,GAEhCA,EAAqBxC,OAAOyC,GAEhCz7E,KAAKo8E,qBAAqBX,QAwB9BD,EAAqBr2C,IAAI,SAAU,GACnCq2C,EAAqB/sE,OACrBzO,KAAKo8E,sBAAqB,KAItCF,qBAAsB,WAClB,IAAIK,EAAiBp0C,EAAAA,EAAAA,QAAkBnoC,KAAKo7E,wBAA0B,EAClEoB,EAAiBr0C,EAAAA,EAAAA,QAAkBA,EAAAA,EAAAA,SAAmB,GACtDs0C,EAAoBt0C,EAAAA,EAAAA,SAAmBA,EAAAA,EAAAA,SAAmB,KAAOnoC,KAAKuiC,OAAO,gBACjF,OAAOg6C,GAAkBE,GAAqBD,EAAiB,EAAI,GAEvEp/B,qBAAsB,SAAS9W,GAC3B,IAAI+W,EAAc/W,EAAE+W,YAChB/W,EAAEwU,YAAYvyC,WAGd80C,EAAY7vC,OAAS6vC,EAAY1H,gBACjC31C,KAAKs6B,SAASgM,GACdtmC,KAAK08E,gCAGb/E,cAAe,WACX,OAAO33E,KAAKu4E,aAEhBtvC,KAAM,WACF,IAAIrB,EAAO5nC,KACPs7D,EAAiB1zB,EAAKyC,cAAc,QACxCzC,EAAKtN,WACLsN,EAAK+0C,yBAA2B/0C,EAAKyC,cAAc,iBACnDzC,EAAKiyC,WAAa,EAClBjyC,EAAKqwC,WAAa,EAClBrwC,EAAKyS,aAAe,EACpBzS,EAAKuwC,aAAe,EACpBvwC,EAAKiwC,YAAa,EAClBvc,EAAe6G,eAAehkB,KAAK,SAASvc,EAAW0xC,GACnD1rC,EAAKg1C,WAAWh7C,EAAW0xC,MAE/BhY,EAAe4W,kBAAkB/zB,KAAK,WAC9BvW,EAAKyS,aAAe,GACpBzS,EAAKmwC,cAAc,CACfjyC,UAAW8B,EAAK+vC,gBAChBO,aAAc,CACVh5D,IAAK0oB,EAAKqwC,WACVl5D,KAAM6oB,EAAKyS,mBAM/BgE,mBAAoB,SAASxnC,GACzB,OAAQA,EAAO4jC,YACX,IAAK,UACL,IAAK,UACL,IAAK,SACL,IAAK,SACDz6C,KAAKylC,OAAO,KAAM5uB,GAClB,MACJ,QACI7W,KAAK+2E,QAAQlgE,KAGzBqyB,cAAe,WACX,MAAO,CAAC,qBAAsB,uBAAwB,oBAAqB,iBAAkB,gBAAiB,kBAElH2zC,aAAc,WACV,OAAOr7B,EAAAA,EAAAA,IAASxhD,KAAKmhC,WAAanhC,KAAK47E,qBAE3CA,kBAAmB,SAASt6B,GACxB,IAUI1Z,EAAM4uC,EAVNsG,EAAsB98E,KAAKy4E,sBAAwBz4E,KAAKy4E,qBAAqB94C,IAAI,GACjFg8C,EAAiB,EAUrB,OATImB,IACKx7B,GAGDq6B,EAAiBmB,EAAoBC,aAAeD,EAAoBlwC,aAAekwC,EAAoBC,aAAe,EAC1HpB,IAAmB/zC,EAAO5nC,KAAMw2E,EAAa5uC,EAAK+vC,gBAAiBnB,EAAa/jD,KAAKw1C,KAAKv7B,YAAW7K,EAAAA,EAAAA,GAAE20C,EAAW/jC,WAAWtN,IAAI,mBAAqB,IAHtJw2C,EAAiBmB,EAAoB3lC,YAAc2lC,EAAoB79B,YAAc69B,EAAoB3lC,YAAc,GAOxHwkC,EAAiB,EAAIA,EAAiB,GAEjDe,4BAA6B,WAIzB,IAHA,IAAIM,EAAmBh9E,KAAKi7E,mBAAqB,GAC7CgC,EAAe,GACfn2E,EAAU9G,KAAKkxC,aACVrZ,EAAI,EAAGA,EAAI/wB,EAAQ8gB,OAAQiQ,IAChColD,EAAaplD,GAAK/wB,EAAQ+wB,GAAG8d,aACzB7uC,EAAQ+wB,GAAGwmC,oBAAqB5tC,EAAAA,EAAAA,IAAU3pB,EAAQ+wB,GAAGvlB,aAAe0qE,EAAiBnlD,KAAOolD,EAAaplD,IACzG/wB,EAAQ+wB,GAAGwmC,iBAAiBpxB,KAAKgwC,EAAaplD,IAGtD73B,KAAKi7E,kBAAoBgC,GAE7Bb,qBAAsB,SAASX,GACvBz7E,KAAKuiC,OAAO,gBAAkBviC,KAAKuiC,OAAO,kBAAoBk5C,EAC9Dz7E,KAAKmhC,UAAUW,SAASq0C,IAExBn2E,KAAKmhC,UAAUa,YAAYm0C,KAGnC+G,kBAAmB,WACf,IAAIC,EAAe3E,GAAAA,EAAAA,YAAuBx4E,KAAKmhC,WAC3Cg8C,IACAA,EAAalgC,SACbj9C,KAAKo9E,oCAGbA,gCAAiC,WAC7B,IAAI5G,EAAax2E,KAAK23E,gBAClBv9B,EAAao8B,GAAcA,EAAW0B,eAAen5D,KACrDzS,EAAatM,KAAKuiC,OAAO,cAC7B,GAAIj2B,EAAY,CACZ,IAAI+wE,EAA4B9G,GAA6BC,GACzD8G,EAAcD,EAA4BjjC,EAC1CkjC,IAAgBt9E,KAAKm4E,eACrBn4E,KAAKq6C,YAAcgjC,EAA4Br9E,KAAKm4E,cAGxDn4E,KAAKq6C,aAAe,GAAKD,IAAep6C,KAAKq6C,aAC7Cm8B,EAAWl8B,SAAS,CAChBprC,EAAGlP,KAAKq6C,eAIpBlO,YAAa,WACT,IAAIvE,EAAO5nC,KACX4nC,EAAK80C,8BACL90C,EAAKoyC,oBACLzI,EAAAA,EAAAA,KAAa,WACT3pC,EAAK4vC,oBACL5vC,EAAK1G,mBACL0G,EAAK+yC,4BACLe,EAAAA,EAAAA,KAAa,WACT9zC,EAAKs1C,2BAIjB5iC,SAAU,SAASl5B,GACf,IAAIsf,EAAW1gC,KAAKmhC,UAChBg8C,EAAez8C,GAAY83C,GAAAA,EAAAA,YAAuB93C,GAClDy8C,GACAA,EAAa7iC,SAASl5B,IAG9B1Y,OAAQ,SAAS60E,EAASC,GACtB,IAAI51C,EAAO5nC,KACP0gC,EAAW1gC,KAAKmhC,UACpB,GAAI,IAAM9V,UAAUzD,OAChB,OAAO8Y,GAAW+gB,EAAAA,EAAAA,IAAe/gB,GAAU,GAAQ,EAEvDkH,EAAKiwC,gBAAa,IAAW2F,EAAY,SAAWD,EAAUC,GAC1D/sD,EAAAA,EAAAA,IAAU8sD,IAAY78C,IACtB47C,EAAAA,GAAAA,IAAU57C,EAAU68C,IAG5BX,WAAY,SAASh7C,EAAW0xC,GAC5B,IAAItqE,EAAYhJ,KAAKqiC,WACjBi5B,EAAiBt7D,KAAK0hC,gBACtBU,EAAmBpiC,KAAKuiC,OAAO,cAAgB,GAC/CnpB,EAAYkiD,EAAezT,WAAazlB,EAAiBhpB,UAAY,KACrEsnB,EAAW1gC,KAAKmhC,UACpB,IAAK8K,EAAAA,EAAAA,SAGAjjC,QAAa,IAAWsqE,GAAehY,EAAen5B,gBAAkB,SAAWC,EAAiB7tB,SAAWmsB,IAChH1gC,KAAK03E,iBAAiBh3C,EAAUA,EAASgH,UACzC1+B,EAAYhJ,KAAKqiC,YAEjBr5B,GAAW,CACX,IAAIy0E,EAAoB,CACpB7uE,QAAS0kE,GAAelxC,EAAiB3yB,KACzC2J,UAAWA,EACX7L,QAASq0B,GAETA,IACA67C,EAAkB/iE,SAAWw0B,EAAAA,2BAAyCxO,IAE1EuS,aAAajzC,KAAK09E,uBACd10E,EAAUu5B,OAAO,aAAeX,EAChC5hC,KAAK09E,sBAAwB1qC,YAAY,WACrChqC,EAAUu5B,OAAOk7C,KACjBnH,IAEJttE,EAAUu5B,OAAOk7C,KAI7BpzB,eAAgB,SAAS7qB,EAAal/B,GAClC,IAAIg/C,EAAQt/C,KAAKggD,kBAAkBpG,IAAI,IAAM5H,KAAoB,GACjEhyC,KAAKm7E,oBAAoB77B,EAAOt/C,KAAKkxC,aAAc1R,EAAal/B,IAEpEy/C,qBAAsB,SAASxM,GAC3B,IAAIpC,EAASnxC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACvC,GAAI8lB,EAAQ,CACR,IAAIwsC,EAAiBxsC,EAAOvtB,OAAO,IAAMkyD,IAAkB1rD,QAC3D,GAAIuzD,GAAkB,GAAKxsC,EAAOvpB,OAAS+1D,EAAiB,EACxD,OAAOxsC,EAAOpnB,MAAM,EAAG4zD,EAAiB,GAGhD,OAAOxsC,GAEXysC,6BAA8B,SAASC,EAAOC,GAC1C,IAAIC,EAAY,EACZC,EAAa,EACbh7D,EAAS,EACTi7D,EAAmBj+E,KAAKi4E,WACxBiG,EAAkBl+E,KAAK8+C,sBACvBq/B,EAA0BD,GAAmBA,EAAgBl7D,SAAS9D,IACtEo8C,EAAiBt7D,KAAKqqC,cAAc,QACpCjtB,EAAQk+C,EAAel+C,QACvBu8B,EAAe35C,KAAK49C,kBACxB,GAAIxgC,EAAMwK,QAAU+xB,EAAc,CAC9B,IAAIykC,EAAcp+E,KAAKggD,gBAAgBrG,GAAc/1B,OAAO,YAC5D,IAAKi6D,EAAO,CACR,IAAIn1E,EAAS1I,KAAK63E,YAAap2B,EAAAA,EAAAA,IAAezhD,KAAKmhC,YAAaU,EAAAA,EAAAA,IAAEe,EAAAA,EAAAA,OAAay7C,cAC/EJ,GAAoBv1E,EAExB,IAAKq1E,EAAY,EAAGA,EAAY3gE,EAAMwK,OAAQm2D,IAAa,CACvDC,EAAah7D,EACb,IAAIy4B,GAAc5Z,EAAAA,EAAAA,GAAEu8C,GAAal5C,GAAG64C,GACpC,GAAItiC,EAAY7zB,SACZ5E,EAASy4B,EAAYz4B,SACrBA,GAAU66D,EAAQ76D,EAAO9D,IAAM8D,EAAO9D,KAAMuiC,EAAAA,EAAAA,IAAehG,IAAgB0iC,EACvEn7D,EAASi7D,GAAkB,CACvBF,IACID,GAAW,EAAIG,EAAmBxrD,KAAKgkD,MAAMzzD,EAASg7D,KACtDD,IAGR,OAIRA,GAAaA,IAAc3gE,EAAMwK,QACjCm2D,IAGR,OAAOA,GAEXO,uBAAwB,SAASR,GAC7B,OAAO99E,KAAK49E,8BAA6B,EAAME,IAEnDS,0BAA2B,SAAST,GAChC,OAAO99E,KAAK49E,8BAA6B,EAAOE,IAEpDU,qBAAsB,WAClB,IAAIT,EAAY/9E,KAAKs+E,yBACjBlhE,EAAQpd,KAAK0hC,gBAAgBtkB,QACjC,GAAIA,EAAM2gE,GACN,OAAO3gE,EAAM2gE,GAAWruE,MAGhC+uE,iBAAkB,SAAS/9C,EAAU1d,GACjC,IAAIwzD,EAAax2E,KAAK23E,gBACtBnB,GAAcA,EAAWkI,gBAAgBh+C,EAAU1d,IAEvD4mB,cAAe,SAASnV,GAEpB,OADAz0B,KAAKs6B,SAAS7F,GACNA,EAAKnlB,MACT,IAAK,kBACL,IAAK,kBACL,IAAK,eACL,IAAK,wBACL,IAAK,cACL,IAAK,kBACL,IAAK,uBACDtP,KAAK8rC,aAAY,GAAM,GACvBrX,EAAKqV,SAAU,EACf,MACJ,IAAK,YACD9pC,KAAK65E,WAAa,KAClB75E,KAAKg6C,cAAgB,KACrBvlB,EAAKqV,SAAU,EACf,MACJ,IAAK,aACD9pC,KAAK65E,WAAa,KAClB75E,KAAKg6C,cAAgB,KACrB,MACJ,IAAK,YACDh6C,KAAKg6C,cAAgB,KACrBh6C,KAAK8rC,aAAY,EAAM,sBAAwBrX,EAAKqgC,UACpDrgC,EAAKqV,SAAU,EACf,MACJ,IAAK,aACD9pC,KAAKkhC,mBACLzM,EAAKqV,SAAU,IAG3Bc,QAAS,WACLqI,aAAajzC,KAAK09E,uBAClB19E,KAAKu4E,aAAev4E,KAAKu4E,YAAY3tC,WAEzCsW,mBAAoB,aACpBy9B,iBAAkB,cAj5BI,MC5FhBjI,GAAWxoC,MAAMrI,SACvC2kB,GAAAA,eAAwB,OAAQksB,I,eCO5BkI,GAAe,kBACfp8B,GAAW,CACX2D,kBAAmB,SACnBtgB,SAAU,UACVg5C,WAAY,SACZjJ,YAAa,eAEbkJ,GAAa,CAAC,oBAAqB,WAAY,aAAc,eAC7DC,GAAwBvxC,GAAAA,eAAAA,QAA+B,CACvDvE,KAAM,WACFjpC,KAAK6pC,aAAa,2BAEtBmgB,oBAAqB,SAASg1B,GAC1B,IAAKA,EACD,OAAO,EAEX,IAEIt+C,EACAu+C,EACAC,EACAC,EALAv3C,EAAO5nC,KACPwkD,GAAiB3iB,EAAAA,EAAAA,GAAEm9C,EAAQniD,QAiC/B,OA5BAzL,EAAAA,EAAAA,IAAK0tD,IAAa,WACd,IAAIM,EAAOx3C,EAAK7B,QAAQ/lC,MAExB,GADA0gC,EAAW0+C,GAAQA,EAAKj+C,UACpBT,IAAaA,EAASiG,GAAG6d,IAAmB9jB,EAASa,KAAKijB,GAAgB58B,QAAS,CACnF,IAAIy3D,EACJH,EAAqB16B,EAAezd,QAAQ,8BAC5Ck4C,EAAoBC,EAAmBx3C,SACvC,IAAI6L,EAAW6rC,EAAK5rC,YAAYyrC,GAC5Bz/C,EAAc0/C,EAAmB,IAAMA,EAAmB,GAAGxhC,UAC7DpM,EAAa2tC,EAAkBvvE,KAAK,WACpC4R,EAAU,CACVmpB,MAAOu0C,EACPM,eAAe5rC,EAAAA,GAAAA,GAAiB8Q,GAChC3nB,OAAQ2lB,GAASxiD,MACjBuzC,SAAUA,EACV5N,IAAKy5C,EAAKxkC,WAAWrH,GACrB/T,YAAaA,EACbrxB,OAAQ,OAASmjC,QAAc,IAAWA,GAAsB,QAAU+tC,EAAoB/tC,EAAWC,aAAU,IAAW8tC,OAAvE,EAAoGA,EAAkB7/C,GAAarxB,QAM9L,GAJAmT,EAAQlE,MAAQgiE,EAAKp1B,qBAAuBo1B,EAAKp1B,oBAAoB1oC,GACrEsmB,EAAK+C,cAAc,yBAA0BrpB,GAC7CsmB,EAAK23C,qBAAqBj+D,GAC1B69D,EAAY79D,EAAQlE,MAChB+hE,EACA,OAAO,MAIZA,GAEXI,qBAAsBjvC,EAAAA,KAEtBkvC,GAAkBhyC,GAAAA,KAAAA,QAAqB,CACvCtB,YAAa,WACT,IAAItE,EAAO5nC,KACP0gC,EAAWkH,EAAKzG,UAAUW,SAAS88C,IACvC5+E,KAAKgmC,QAAQ,OAAQ,eAAgBtF,GACrC1gC,KAAKwiC,iBAAiB9B,EAAU++C,GAAAA,WAAa,CACzCC,cAAe,SAASC,GACpB,IAAIl1C,EAAQk1C,EAAWl1C,MACnBm1C,EAAsBD,EAAW75C,UACjC1oB,EAAQwqB,EAAKyC,cAAc,eAAe2f,oBAAoBvf,GAC9DrtB,GACAwiE,EAAoBr9C,OAAO,QAASnlB,GACpCqtB,EAAMo1C,mBAENF,EAAW/pE,QAAS,GAG5Bs0C,YAAa,SAASl/B,GAClBA,EAAOo/B,SAASF,aAAel/B,EAAOo/B,SAASF,YAAYl/B,IAE/D5b,SAAUw4B,EAAKH,0BACf5K,OAAQ+K,EAAK9B,UAAUpF,gBAIxBo/C,GAAoB,CAC3B55B,eAAgB,WACZ,MAAO,CACHz8C,uBAAwB,OAGhCukC,YAAa,CACT+xC,YAAahB,IAEjB7wC,MAAO,CACH8xC,gBAAiBR,KCjGzBS,GAAAA,eAA4B,cAAeH,ICK3C,IAAI3tC,GAAkB,eAClB+tC,GAAsB,mBACtBC,GAA0B,iBAC1BC,GAAe,SACfC,GAA0B7yC,GAAAA,eAAAA,QAA+B,CACzDvE,KAAM,WACFjpC,KAAKsgF,mBAAqBtgF,KAAK+lC,QAAQ,qBACvC/lC,KAAKugF,UAAYvgF,KAAK+lC,QAAQ,aAElCy6C,gBAAiB,SAAS1yD,EAAOwyB,GAC7B,IACImgC,EACAC,EAFA94C,EAAO5nC,KAGP2gF,EAAgB3gF,KAAK4gF,oBAAoB9yD,GAC7C,OAAIwyB,GACAmgC,GAAY5+C,EAAAA,EAAAA,GAAE,QAAQC,SAASqQ,IAC/BuuC,GAAe7+C,EAAAA,EAAAA,GAAE,SAASC,SAASq+C,IAAyBr+C,SAAS8F,EAAKvG,gBAAgB++C,KAC1Fx5C,EAAAA,EAAAA,GAAgB85C,EAAcvtC,GAAAA,EAAgBvL,EAAKiC,cAAc,SAASpV,GACtE,IACIgsD,EADAn6C,EAAI7R,EAAKgW,MAETo2C,GAAgBh/C,EAAAA,EAAAA,GAAEyE,EAAE4M,eAAenM,QAAQ,IAAMoL,IAAiB/nB,QACtEkc,EAAEu5C,mBACFzuD,EAAAA,EAAAA,IAAKkvB,GAAiB,SAAStsB,EAAG2lB,GAC9B8mC,GAAY5+C,EAAAA,EAAAA,GAAE8X,GAAc9I,SAAS,SAASA,SAAS,MAAM3L,GAAG27C,GAChEj5C,EAAKk5C,eAAeL,MAExB74C,EAAKyC,cAAc,aAAezC,EAAKyC,cAAc,YAAY02C,8BAErEl/C,EAAAA,EAAAA,GAAE,QAAQuI,KAAK,CACX3rB,QAASmpB,EAAKyC,cAAc,WAAWyM,oBAAoBlvB,OAC3Do5D,KAAM,iBACPrM,QAAQ+L,GAAc3vC,OAAO4vC,GAAe5+C,SAAS0+C,GACjDA,GAEJE,GAEXC,oBAAqB,SAAS9yD,GAC1B,IAAIlf,EAAUkf,EAAM5D,IAAM4D,EAAMlf,QAAQwa,QAAQ0E,EAAM5D,IAAK,IAAM4D,EAAMlf,SAAWkf,EAC9EmzD,GAAWp/C,EAAAA,EAAAA,GAAE,SAASC,SAASo+C,IAAqBzwE,KAAKb,GAI7D,OAHIkf,EAAM5D,MACN2X,EAAAA,EAAAA,GAAE,OAAOuI,KAAK,OAAQtc,EAAM5D,KAAKza,KAAKqe,EAAM5D,KAAK6X,SAASk/C,GAEvDA,GAEXC,eAAgB,SAASpzD,EAAOylB,EAAU4tC,GACtC,IACIC,EACAC,EAFAz5C,EAAO5nC,KAGX,GAAImhF,EAIA,OAHAA,EAAc5/C,KAAK,IAAM2+C,IAAqB59C,SAC9C8+C,EAAuBx5C,EAAK44C,gBAAgB1yD,GAC5CqzD,EAAcxM,QAAQyM,GACfA,EAEX,IAAI99B,EAAc/P,GAAY,IAAM3L,EAAK04C,mBAAmB7+C,YAAcmG,EAAK24C,UAAY34C,EAAK04C,mBAC5FhgC,EAAiBgD,EAAY3F,oBACjCvsB,EAAAA,EAAAA,IAAKkvB,GAAiB,SAAStsB,EAAG2lB,GAG9B,GAFAynC,EAAuBx5C,EAAK44C,gBAAgB1yD,EAAOwyB,GACnD+gC,EAAiBA,GAAkBD,EAC/B7tC,GAAY,EAAG,CACf,IAAI+C,EAAOgN,EAAYtD,iBAAgBne,EAAAA,EAAAA,GAAE8X,IAAezU,GAAGqO,GAC3D3L,EAAKk5C,eAAexqC,EAAKgrC,QACzBF,EAAqBnI,YAAY3iC,OAC9B,CACH,IAAI2D,GAASpY,EAAAA,EAAAA,GAAE8X,GAAc9I,SAAS,SAClCutC,EAAcnkC,EAAOpJ,SAAS,MAC9BjJ,EAAK04C,mBAAmB7+C,aACxBmG,EAAKk5C,eAAe1C,EAAY58C,SAChCK,EAAAA,EAAAA,GAAE8X,GAAc5I,OAAOqwC,KAEvBx5C,EAAKk5C,eAAe1C,EAAYz6B,SAChC1J,EAAO0J,QAAQgxB,QAAQyM,QAInC,IAAIG,EAAqB35C,EAAKyC,cAAc,YAE5C,OADAk3C,GAAsBA,EAAmBR,yBAClCM,GAEXP,eAAgB,SAASxqC,GACrB,IAAKA,EAAM,CACP,IAAIkrC,EAAiBxhF,KAAKsgF,oBAAsBtgF,KAAKsgF,mBAAmBn/C,UAExE,GADAmV,EAAOkrC,GAAkBA,EAAejgD,KAAK,IAAM4Q,KAC9CmE,IAASA,EAAK1uB,OAAQ,CACvB,IAAI65D,EAAmBzhF,KAAKugF,UAAUp/C,UACtCmV,EAAOmrC,GAAoBA,EAAiBlgD,KAAK,IAAM4Q,KAG/DmE,GAAQA,EAAK1G,SAASuC,KAAoBmE,EAAKhU,UAEnDsH,cAAe,SAASnV,GACpB,OAAQA,EAAKnlB,MACT,IAAK,kBACDmlB,EAAKqV,SAAU,EACf,MACJ,QACI9pC,KAAKs6B,SAAS7F,OAInBitD,GAAsB,CAC7Bx7B,eAAgB,WACZ,MAAO,CACHx+C,iBAAiB,IAGzBsmC,YAAa,CACT2zC,cAAetB,IAEnBjyC,UAAW,CACPJ,YAAa,CACTt+B,KAAM,CACFu5B,KAAM,WACF,IAAIrB,EAAO5nC,KACP4hF,EAA0Bh6C,EAAKyC,cAAc,iBACjDzC,EAAKtN,WACLsN,EAAKqiC,kBAAkB9rB,KAAK,SAASrwB,EAAOqzD,GACpCv5C,EAAKrF,OAAO,oBACZq/C,EAAwBV,eAAepzD,OAAO,EAAQqzD,MAG9Dv5C,EAAKwW,QAAQD,KAAK,SAAS7X,GACvB,IAAIA,GAAK,cAAgBA,EAAEmU,WAA3B,CAGA,IAAImnC,EAA0Bh6C,EAAKyC,cAAc,iBAC7C4qC,EAAoBrtC,EAAKyC,cAAc,WACvC4qC,IAAsBA,EAAkB4M,cACxCD,GAA2BA,EAAwBd,0BCrI/Et2B,GAAAA,eAAwB,gBAAiBk3B,ICiCzC,IAAII,GAAgB,UAChBjwC,GAAoB,cACpBkwC,GAAyB,mBACzBC,GAA2B,wBAC3B3vC,GAAuB,iBACvBysC,GAAa,CAAC,uBAAwB,qBAAsB,cAAe,cAAe,oBAAqB,WAAY,aAAc,oBAAqB,kBAAmB,YAAa,qBAAsB,kBAAmB,YAAa,mBAAoB,qBACxQmD,GAAiB,SAASz0E,GAC1B,OAAO2rC,EAAAA,EAAAA,IAAS3rC,IAAU,MAAQA,EAAMuc,OAAO,IAE/Cm4D,GAAe,SAAS10E,GACxB,OAAO2rC,EAAAA,EAAAA,IAAS3rC,IAAU,OAASA,EAAMuc,OAAO,IAEhDo4D,GAAqB,SAASziD,GAC9B,IAAIq9C,EAAer9C,EAAWC,IAAI,GAAGo9C,aACjCqF,EAAa11C,WAAWhN,EAAWyF,IAAI,eACvCk9C,EAAgB31C,WAAWhN,EAAWyF,IAAI,kBAC9C,OAAO43C,EAAeqF,EAAaC,GAEnCC,GAAqB,SAAS16C,EAAM0V,GACpC,IAAIu/B,EAAej1C,EAAK24C,UAAU1D,eAC9B0F,EAAa36C,EAAK46C,eAAellC,EAAQu/B,GAC7C,OAAOA,EAAe0F,GAEtBE,GAAwC,SAAS76C,EAAMpI,EAAakjD,EAAiBplC,GACrF,OAAOglC,GAAmB16C,EAAM0V,EAAOtrB,KAAK,SAASxkB,EAAO4c,GACxD,OAAOA,IAAUoV,EAAckjD,EAAkBl1E,OAGrD+2C,GAAe,SAASpe,EAAgBK,GACxCue,GAA0B5e,GAC1B+I,EAAAA,kBAAgC/I,EAAgBK,IAEhDm8C,GAAqBn1C,GAAAA,eAAAA,QAA+B,CACpDo1C,wBAAyB,WACrB,IAAItnB,EAAiBt7D,KAAK0hC,gBACrB1hC,KAAK6iF,uBACN7iF,KAAK6iF,qBAAuBv8C,IACxBg1B,EAAeld,QAAQ9b,OAAOtiC,KAAK6iF,sBACnC,IAAIppC,EAAoBnT,GAAKA,EAAEmT,mBAAqB,GACpD7d,EAAAA,GAAAA,MAAW57B,KAAMy5C,GAAmBprB,MAAK,KACrCruB,KAAK8iF,cAAcx8C,OAG3Bg1B,EAAeld,QAAQD,KAAI,KACvBmd,EAAeld,QAAQD,IAAIn+C,KAAK6iF,2BAI5CC,cAAe,SAASx8C,GACpB,IAAIy8C,EACAn7C,EAAO5nC,KACPy6C,EAAanU,GAAKA,EAAEmU,WACpBkxB,EAAYrlC,GAAKA,EAAEqlC,UACnBvuD,EAAQwqB,EAAKlG,gBAAgBtkB,QACjC,GAAKkpB,GAAK,YAAcmU,GAAc,YAAcA,GAAc,WAAaA,GAIxE,GAAI,WAAaA,EAAY,CAChC,IAAIuoC,EACJ,GAAI,KAAO,QAAUA,EAAiB18C,EAAEwU,mBAAgB,IAAWkoC,OAAiB,EAASA,EAAep7D,QACxG,SAECxK,EAAMwK,OAAS,GAAK,WAAa0e,EAAEwU,YAAY,KAAS,IAAM19B,EAAMwK,QAAU,WAAa0e,EAAEwU,YAAY,IAAQxU,EAAE8qC,qBAMpH2R,EAAiBn7C,EAAKsF,UALtBwuC,EAAAA,EAAAA,KAAY,KAAMnK,EAAAA,EAAAA,KAAY,KAAMmK,EAAAA,EAAAA,KAAY,KAC5C9zC,EAAKq7C,oBAAoBr7C,EAAKiwC,YAC9BjwC,EAAK24C,UAAUrzC,sBAXlBy+B,IACDoX,EAAiBn7C,EAAKsF,UAgB1BuN,GAAc,oBAAsBA,GAAc,qBAAuBA,GAAc,cAAgBA,IAAekxB,IACtH/vC,EAAAA,EAAAA,IAAKmnD,GAAgB10D,MAAM,WACvBuZ,EAAKs7C,sBACLt7C,EAAKm5C,6BAIjBA,uBAAwB,WACpB/gF,KAAK8lC,UAAUq9C,2BAEnBD,oBAAqB,WACjB,IAAIp9C,EAAY9lC,KAAK8lC,UACrBA,EAAUE,QAAQ,CACdmiB,SAAUnoD,KAAK0hC,gBAAgBsmC,kBAC/BhrD,SAAU8oB,EAAUq2B,eACrBr2B,EAAUpF,WAAWmQ,SAAS,IAAMmxC,MAE3CoB,kBAAmB,WACf,IAAIC,EACAx9C,EAAW7lC,KAAKugF,UAChBp6B,EAAoBnmD,KAAKsgF,mBACzBhjC,EAASzX,EAASuZ,kBACtB,GAAM,QAAUikC,EAAU/lC,SAAW,IAAW+lC,IAAWA,EAAQz7D,OAAS,CACxE,IAAI07D,EACAC,EAAsBp9B,EAAkBvI,kBAC5CuI,EAAkBtI,gBAAgB,QAAUylC,EAAwBz9C,EAAS+X,yBAAsB,IAAW0lC,OAAwB,EAASA,EAAsBzyC,SAAS,eAC9KyM,EAAS6I,EAAkB/G,kBAC3B+G,EAAkBtI,gBAAgB0lC,GAEtC,OAAOjmC,GAEXkmC,kBAAmB,SAAS5sC,EAAgB0G,GACxC,IAAIrN,EAAoBjwC,KAAK62C,mBAC7B5G,EAAkB9G,eAClB/X,EAAAA,EAAAA,IAAKwlB,GAAiB,SAASxsB,EAAOjc,GAClC,IAAIs1E,EAAWxzC,EAAkB6uB,YAAY3wD,GAC7C8hC,EAAkByQ,aAAa+iC,EAAU,eAAgBnmC,EAAOlzB,OAEpE6lB,EAAkB7G,aAEtBs6C,0BAA2B,SAAStE,EAAMt0C,EAAW64C,GACjD,GAAKvE,GAASA,EAAK39C,YAAnB,CAGA,IAAImiD,EAAc5jF,KAAKugF,UAAU5iC,mBAC7BkmC,EAAczE,EAAKzhC,oBACvBvsB,EAAAA,EAAAA,IAAKwyD,GAAa,CAACx5D,EAAOuvB,KACtB,IAAImqC,EACAC,GAAaliD,EAAAA,EAAAA,GAAE8X,GACfqqC,EAAaH,EAAY3+C,GAAG9a,GAC5B45D,GAAcA,EAAWp8D,SAErBk8D,EADAH,EACaK,EAAWnzC,SAAS,SAAS9O,SAASgiD,GAEtCA,EAAWlzC,SAAS,IAAM/F,GAAW/I,SAASiiD,GAE/DF,EAAW92C,YAAYlC,EAAW64C,GAClCG,EAAW92C,YAAYhtC,KAAKqhC,gBAAgB,YAAasiD,SAIrEM,mBAAoB,SAASN,GACzB,IAAII,EAAa/jF,KAAKugF,UAAU3iC,kBAC5BsmC,EAAkBlkF,KAAKugF,UAAU5iC,mBAAmBzY,GAAG,GACtD6+C,IAGLA,EAAW5+C,IAAI,cAAew+C,EAAY,OAAS,SACnDI,EAAWlzC,SAAS,YAAY1L,IAAI,UAAWw+C,EAAY,OAAS,IACpEO,EAAgBl3C,YAAYhtC,KAAKqhC,gBAAgBwQ,KAAqB8xC,GACtE3jF,KAAK0jF,0BAA0B1jF,KAAKsgF,mBAAoB,YAAaqD,GACrE3jF,KAAK0jF,0BAA0B1jF,KAAKmkF,YAAa,YAAaR,GAC9D3jF,KAAKokF,wBAAwBT,GACzB3jF,KAAKqkF,iBACLN,EAAWpkD,IAAI,GAAGuU,MAAM1mC,MAAQm2E,EAAY,OAAS,MAG7DS,wBAAyB,SAAST,GAC9B,GAAI3jF,KAAKuiC,OAAO,mBAAoB,CAChC,IAAIi0C,EAAax2E,KAAKugF,UAAU5I,gBAC5BuG,EAAkBl+E,KAAKugF,UAAUzhC,uBACjC,KAAW,OAAS03B,QAAc,IAAWA,OAAa,EAASA,EAAWj0C,OAAO,eACrF27C,EAAgB/4C,IAAI,CAChBlrB,UAAW0pE,EAAYz0C,EAAAA,sBAAoC/G,EAAAA,GAAW,OAKtFm8C,oBAAqB,WACjB,IAKIC,EAGAp+C,EACAK,EATAyJ,EAAoBjwC,KAAK62C,mBACzBD,EAAiB3G,EAAkB6G,oBACnCvwC,EAAkBvG,KAAKuiC,OAAO,mBAC9BiiD,EAAcxkF,KAAKykF,eACnBC,GAAc,EAEdC,GAA0B,EAC1Bz9C,EAAe,IAGlBs9C,IAAepzD,EAAAA,EAAAA,IAAKwlB,GAAiB,SAASxsB,EAAOjc,GAClD,GAAI,SAAWA,EAAOX,MAElB,OADAg3E,GAAc,GACP,MAGfpzD,EAAAA,EAAAA,IAAKwlB,GAAiB,SAASxsB,EAAOjc,GAClC,GAAIA,EAAOwE,SAEP,OADA+xE,GAAc,GACP,KAGf1kF,KAAKwjF,kBAAkB5sC,EAAgB,IACnC4tC,IACAr+C,EAAiBoP,GAAAA,WAAAA,mBACjB/O,EAAiB0I,EAAAA,kBAAgC/I,GACjDnmC,KAAKikF,oBAAmB,GACxBM,GAAmB,GAEvB,IAAI7jD,EAAW1gC,KAAK8lC,UAAUpF,WAC1BA,GAAYA,EAAS,IAAM1gC,KAAK4kF,mBACzB5kF,KAAK4kF,UACZlkD,EAAS,GAAGwT,MAAMl6B,SAAW,KAEjC0hE,EAAAA,EAAAA,KAAY,KAoBR,GAnBI8I,GACAt9C,EAAelnC,KAAKojF,qBACpBhyD,EAAAA,EAAAA,IAAKwlB,GAAiB,SAASxsB,EAAOjc,GAClC,IAAIs1E,EAAWxzC,EAAkB6uB,YAAY3wD,GAC7C8hC,EAAkByQ,aAAa+iC,EAAU,eAAgBv8C,EAAa9c,IAAQ,OAE3Es6D,IACPx9C,EAAelnC,KAAKojF,sBAExBhyD,EAAAA,EAAAA,IAAKwlB,GAAiB,SAASxsB,GAC3B,IAAI5c,EAAQxN,KAAKwN,MACb,SAAWA,KACPijB,EAAAA,EAAAA,IAAUjjB,GACV05B,EAAa9c,IAAS2pB,EAAAA,EAAAA,IAAUvmC,IAAU00E,GAAa10E,GAASk/B,WAAWl/B,GAASA,EAC5EjH,IACR2gC,EAAa9c,QAAS,OAI9Bm6D,IACAvkF,KAAKikF,oBAAmB,GACxBM,GAAmB,EACfp+C,GAAkBA,IAAmBoP,GAAAA,WAAAA,oBAA+B,CACpE,IAAIsvC,GAAuBx/C,EAAAA,EAAAA,GAAgBc,GAAgB2+C,OAAS,EAC/DD,GACDtgC,GAAape,EAAgBK,GAIzCm+C,EAA0B3kF,KAAK+kF,qBAAqB79C,EAAc0P,GAC9DrwC,KACE,WACE,IAAIy+E,GACJ5zD,EAAAA,EAAAA,IAAKwlB,GAAiB,SAASxsB,EAAOjc,GAC9B,gBAAkBA,EAAOW,OACzBk2E,EAAoB99C,EAAa9c,QAGzCgH,EAAAA,EAAAA,IAAKwlB,GAAiB,SAASxsB,EAAOjc,GAC9B,gBAAkBA,EAAOW,MAAQk2E,IACjC99C,EAAa9c,GAAS46D,MAThC,GAaEhlF,KAAKqkF,gBACLrkF,KAAKilF,gBAAgB/9C,EAAc0P,KAG3C26B,EAAAA,EAAAA,KAAY,MACJiT,GAAeG,IACf3kF,KAAKwjF,kBAAkB5sC,EAAgB1P,UAKvDu9C,aAAc,WACV,OAAOzkF,KAAKuiC,OAAO,oBAEvB8hD,aAAc,WACV,OAAOrkF,KAAK62C,mBAAmBC,oBAAoB3gB,MAAK+uD,GAAK,SAAWA,EAAE13E,QAAU03E,EAAE79C,WAE1F89C,wBAAyB,SAASj+C,GAC9B,IAAIk+C,EAAY9C,GAAmBtiF,KAAMknC,GACrCm+C,EAA0Bn+C,EAAatjB,QAAQ,SAASpW,GACxD,YAAO,IAAWA,KAClBoa,OACJ,OAAOw9D,EAAYC,GAEvBN,qBAAsB,SAAS79C,EAAc0P,GACzC,IACI/e,EADA+P,EAAO5nC,KAEPslF,GAAkB,EAClBC,GAAe,EACfZ,GAA0B,EAC1BjkD,EAAWkH,EAAK9B,UAAUpF,WAC1B8kD,EAAW59C,EAAK69C,UAChBC,EAAQ,WACR,IAAIt7D,EAAQyN,EACR1pB,EAASyoC,EAAexsB,GACxBu7D,EAAiBz+C,EAAa9c,KAAWioB,GACzC7kC,EAAQ05B,EAAa9c,GACrBzX,EAAWxE,EAAOwE,SACtB,GAAIA,EACA,QAAI,IAAWnF,EAAO,CAClB,IAAIo4E,EAAsBh+C,EAAKu9C,wBAAwBj+C,GACvD15B,EAAQo4E,OACL,GAAI3D,GAAez0E,GAAQ,CAC9B,IAAI43E,EAAY3C,GAAsC76C,EAAMxd,EAAOzX,EAAUu0B,GACzEk+C,EAAY,IACZ53E,GAAS,GAIrB,IAAIq4E,EAAkBj+C,EAAKk+C,oBAAoB17D,EAAO8c,EAAalV,KAAK,SAAShrB,EAAaw4B,GAC1F,OAAOpV,IAAUoV,EAAchyB,EAAQxG,MAEvC2L,IAAagzE,GAAkBE,EAAkBlzE,IACjDu0B,EAAa9c,GAASzX,EACtBgyE,GAA0B,EAC1B9sD,GAAK,IAEJpH,EAAAA,EAAAA,IAAUtiB,EAAOX,SAClB+3E,GAAe,GAEftD,GAAe9zE,EAAOX,SACtB83E,GAAkB,IAG1B,IAAKztD,EAAI,EAAGA,EAAI+e,EAAehvB,OAAQiQ,IACnC6tD,IAEJ,IAAKH,GAAgBr+C,EAAatf,OAAQ,CACtC,IAAI65D,EAAmB75C,EAAK24C,UAAUp/C,UAClC07C,EAAej1C,EAAK24C,UAAU1D,eAC9BlB,EAAiB/zC,EAAK24C,UAAU3E,oBAChC2G,EAAa36C,EAAK46C,eAAet7C,EAAc21C,GACnD,GAAI0F,EAAa1F,EAAc,CAC3B,IAAI11C,EAAkB+H,EAAAA,4BAA0C0H,EAAgB1P,GAChF,GAAIC,GAAmB,IACnBD,EAAaC,GAAmB,OAChCw9C,GAA0B,GACtB,IAAUa,IAAaF,GAAiB,CACxC,IAAIS,EAAcn+C,EAAKrF,OAAO,eAAiB9P,KAAKw1C,MAAK1mB,EAAAA,EAAAA,IAAckgC,IAAoBuE,EAAAA,EAAAA,IAAcvE,IAAqB,EAC9H75C,EAAKg9C,UAAYrC,EAAa5G,EAAiBoK,EAC/CrlD,EAASyE,IAAI,WAAYyC,EAAKg9C,aAK9C,OAAOD,GAEXM,gBAAiB,SAASgB,EAAarvC,GACnC,IAAIsvC,EAAYlmF,KAAKugF,UAAU1D,eAC3BsJ,EAAYnmF,KAAKwiF,eAAeyD,EAAaC,GAC7CE,EAAgB,CAChBx+D,OAAQ,GAEZ,GAAKq+D,EAAYr+D,OAAjB,EAGAwJ,EAAAA,EAAAA,IAAKwlB,GAAiB,SAASxsB,IACvBpqB,KAAKwN,OAASy4E,EAAY77D,KAAWioB,MACrC+zC,EAAch8D,IAAS,EACvBg8D,EAAcx+D,aAGtB,IAAIy+D,EAAOH,EAAYC,EACnBG,EAAc7zD,KAAKC,MAAM2zD,GAAQJ,EAAYr+D,OAASw+D,EAAcx+D,SACpE2+D,EAAwBF,EAAOC,GAAeL,EAAYr+D,OAASw+D,EAAcx+D,QACrF,GAAIy+D,GAAQ,EACR,IAAK,IAAIxuD,EAAI,EAAGA,EAAIouD,EAAYr+D,OAAQiQ,IAChCuuD,EAAcvuD,KAGlBouD,EAAYpuD,IAAMyuD,EACdC,EAAwB,IACpBA,EAAwB,GACxBN,EAAYpuD,IAAM0uD,EAClBA,EAAwB,IAExBN,EAAYpuD,KACZ0uD,SAMpBT,oBAAqB,SAAStmD,EAAay9C,EAAcuJ,GACrD,IAAIC,EAAQ,EACRj5E,EAAQyvE,EAAaz9C,GACzB,IAAKyiD,GAAez0E,GAChB,OAAOk/B,WAAWl/B,GAEtB,IAAIk5E,EAAoBzJ,EAAaj0B,QAAO,CAACjiC,EAAKvZ,EAAO4c,IAChD63D,GAAez0E,GAGbuZ,EAAM2lB,WAAWl/B,GAFbuZ,GAGZ,GACC4/D,EAAkB1J,EAAaj0B,QAAO,CAACjiC,EAAKvZ,KACvCA,GAASA,IAAU6kC,IAAwB4vC,GAAez0E,GACpDuZ,EAEJA,EAAM2lB,WAAWl/B,IACzB,GACHg5E,EAAaA,GAAcxmF,KAAKugF,UAAU1D,eAC1C,IAAI+J,EAAYJ,EAAaG,EACzBE,EAA2BH,EAAoBF,EAAa,IAIhE,OAHIG,EAAkB,GAAKE,EAA2BF,GAAmBH,IACrEC,EAAQI,EAA2BD,EAAYA,EAAYC,EAA2B,GAEnFn6C,WAAWl/B,GAASg5E,EAAaC,EAAQ,KAEpDjE,eAAgB,SAASllC,EAAQkpC,GAE7B,IADA,IAAIx9D,EAAS,EACJ6O,EAAI,EAAGA,EAAIylB,EAAO11B,OAAQiQ,IAAK,CACpC,IAAIrqB,EAAQ8vC,EAAOzlB,GACfrqB,GAASA,IAAU6kC,KACnBrpB,GAAUhpB,KAAK8lF,oBAAoBjuD,EAAGylB,EAAQkpC,IAGtD,OAAO/zD,KAAKw1C,KAAKj/C,IAErB89D,WAAY,SAASn3C,GACjB,IAAIo3C,EACAv5E,EACA+nE,GAAe1zC,EAAAA,EAAAA,GAAE8N,GACjBq3C,EAAuBhnF,KAAKqhC,gBAAgB0gD,SAC5C,IAAW/hF,KAAK63E,YAActC,GAAgBA,EAAa5uC,GAAG,cAAe6a,EAAAA,EAAAA,IAAS+zB,KACtFwR,EAAgBxR,EAAa1kC,SAAS,IAAM7wC,KAAKynC,2BAC7Cs/C,EAAcn/D,QACdm/D,EAAcE,SAElBjnF,KAAK63E,aAAesK,GAAmB5M,GACvC/nE,GAAQg0C,EAAAA,EAAAA,IAAS+zB,GACjBA,EAAazzC,SAASklD,GACtBhnF,KAAKylF,WAAYjkC,EAAAA,EAAAA,IAAS+zB,KAAkB/nE,EAC5C+nE,EAAavzC,YAAYglD,GACrBD,EAAcn/D,QACdm/D,EAAchlD,SAASwzC,KAInCrsC,cAAe,WACX,MAAO,CAAC,SAAU,qBAEtBgE,OAAQ,WACJ,OAAQltC,KAAK8lC,UAAU8F,gBAAkB5rC,KAAKknF,oBAElDA,iBAAkB,SAASC,GACvB,IAAIv/C,EAAO5nC,KAEX,GADA4nC,EAAKg7C,0BACAh7C,EAAKw/C,WAAWD,GAArB,CAGA,IAAIE,EAAaz/C,EAAK0/C,gBAClBt+D,EAAS4e,EAAK0/C,gBAAkB,IAAIj6D,EAAAA,GAgBxC,OAfAuO,EAAAA,EAAAA,IAAKyrD,GAAY75D,QAAQ,YACrB+jD,EAAAA,EAAAA,KAAa,WACL3pC,EAAKlG,gBAAgBmmB,YACrBjgB,EAAK08C,sBAET18C,EAAK2/C,4BACL7L,EAAAA,EAAAA,KAAa,YACTnK,EAAAA,EAAAA,KAAa,YACTmK,EAAAA,EAAAA,KAAa,WACT9zC,EAAK4/C,oCAIjBn5D,KAAKrF,EAAOmF,SAASC,KAAKpF,EAAOiF,WAElCjF,EAAOyF,YAElB84D,yBAA0B,WACtB,IAAIE,EAAeznF,KAAK8lC,UAAUpF,WAAWmQ,WAAWlR,IAAI,GACxD62C,EAAax2E,KAAKugF,UAAU5I,iBAC5B8P,IAAgBA,EAAavzC,MAAMxrC,QAAY8tE,GAAeA,EAAWkR,cACzED,EAAavzC,MAAMxrC,OAAS,KAGpC0+E,WAAY,SAASD,GACjB,IAAI5R,EAAev1E,KAAK8lC,UAAUpF,WAClC,QAAIymD,IAAcnnF,KAAK2nF,cAAenmC,EAAAA,EAAAA,IAAS+zB,IAAiBv1E,KAAK4nF,eAAgB/kD,EAAAA,EAAAA,IAAU0yC,IAAiBv1E,KAAK6nF,qBAAsBjlD,EAAAA,EAAAA,MAAYqF,mBAAqBstC,EAAa5uC,GAAG,eAKhMmhD,wBAAyB,SAAStK,GAC9B,IAAI51C,EAAO5nC,KACP+nF,EAAkBvK,EAAY51C,EAAK24C,UAAU3E,oBAAsB,EACnEoM,EAAkBpgD,EAAK24C,UAAU3E,mBAAkB,IACvDrK,EAAAA,EAAAA,KAAa,WACT3pC,EAAK04C,oBAAsB14C,EAAK04C,mBAAmBp/B,mBAAmB6mC,GACtEngD,EAAKu8C,aAAev8C,EAAKu8C,YAAYjjC,mBAAmB6mC,GACxDngD,EAAK24C,UAAUr/B,mBAAmB6mC,EAAiBC,OAG3D/E,oBAAqB,SAASzF,IACtB,IAASx9E,KAAKuiC,OAAO,wBACrBgvC,EAAAA,EAAAA,KAAY,MACRmK,EAAAA,EAAAA,KAAY,KACR17E,KAAK8nF,wBAAwBtK,SAIrCx9E,KAAK8nF,wBAAwBtK,IAGrCgK,sBAAuB,WACnB,IAWIS,EAXArgD,EAAO5nC,KACPs7D,EAAiB1zB,EAAKlG,gBACtBmE,EAAW+B,EAAK24C,UAChBhL,EAAe3tC,EAAK9B,UAAUpF,WAC9B+mD,EAAelS,EAAa1kC,WAAWlR,IAAI,GAC3CuoD,EAAoB3S,IAAiBA,EAAa51C,IAAI,GAAGo9C,eAAgBl6C,EAAAA,EAAAA,IAAU0yC,IACnFx7D,EAAY6W,SAAS2kD,EAAapwC,IAAI,cACtCgjD,EAAoBpuE,GAAamuE,GAAqBnuE,EACtDrR,EAASk/B,EAAKrF,OAAO,WAAagzC,EAAa51C,IAAI,GAAGuU,MAAMxrC,OAC5D0/E,EAAgBxgD,EAAKyC,cAAc,iBACnCg+C,EAAqBF,GAAqBV,EAAaa,eAAiBb,EAAa76C,aAEzFhF,EAAKk/C,WAAWvR,GAChB,IAAIiI,EAAY51C,EAAKiwC,YAAcsQ,EAC/Bz/E,GAAUk/B,EAAKiwC,WAAa,SAAWnvE,IACvCu/E,GAAWpmD,EAAAA,EAAAA,GAAE,UACby6C,EAAAA,EAAAA,IAAU2L,EAAUv/E,GACpBu/E,EAASlmD,SAASwzC,GAClB3tC,EAAKiwC,cAAeh1C,EAAAA,EAAAA,IAAUolD,GAC9BA,EAAS3lD,WAEbivC,EAAAA,EAAAA,KAAa,WACT1rC,EAASn9B,OAAO,KAAM80E,GAClB2K,IAAsBE,IACtBxmD,EAAAA,EAAAA,GAAE4lD,GAActiD,IAAI,SAAUprB,GAE7BuhD,EAAezT,YAIpB6zB,EAAAA,EAAAA,KAAa,WACT9zC,EAAK2gD,iBAAiBhT,GACtB3tC,EAAKq7C,oBAAoBzF,IACzBpsD,EAAAA,EAAAA,IAAK0tD,IAAa,SAAS10D,EAAOo4B,GAC9B,IAAI48B,EAAOx3C,EAAK7B,QAAQyc,GACpB48B,GACAA,EAAKlyC,YAGbk7C,GAAiBA,EAAcl7C,YAZ/BrH,EAAS+2C,WAAWthB,EAAe15B,iBAgB/C2mD,iBAAkB,SAAShT,GACvBv1E,KAAK2nF,YAAanmC,EAAAA,EAAAA,IAAS+zB,GAC3Bv1E,KAAK4nF,aAAc/kD,EAAAA,EAAAA,IAAU0yC,GAC7Bv1E,KAAK6nF,mBAAoBjlD,EAAAA,EAAAA,MAAYqF,kBAEzC2B,cAAe,SAASnV,GACpB,OAAQA,EAAKnlB,MACT,IAAK,QACL,IAAK,SACDtP,KAAK8lC,UAAU0iD,oBACfxoF,KAAKktC,SACT,IAAK,cAED,YADAzY,EAAKqV,SAAU,GAEnB,QACI9pC,KAAKs6B,SAAS7F,KAG1BwU,KAAM,WACFjpC,KAAK0hC,gBAAkB1hC,KAAKqqC,cAAc,QAC1CrqC,KAAK62C,mBAAqB72C,KAAKqqC,cAAc,WAC7CrqC,KAAKsgF,mBAAqBtgF,KAAK+lC,QAAQ,qBACvC/lC,KAAKmkF,YAAcnkF,KAAK+lC,QAAQ,cAChC/lC,KAAKugF,UAAYvgF,KAAK+lC,QAAQ,eAGlC0iD,GAAiCj7C,GAAAA,eAAAA,QAA+B,CAChEk7C,sBAAuB,SAASx6C,EAAOqQ,EAAKiE,GACxC,IAAK,IAAI3K,EAAI,EAAGA,EAAI3J,EAAMtmB,OAAQiwB,IAC1B3J,EAAM2J,IAAM3J,EAAM2J,GAAGvoC,OAASkzC,GAC9BtU,EAAM2J,GAAGyC,SAAS,CACdv7B,KAAMw/B,EAAIx/B,KACVG,IAAKq/B,EAAIr/B,OAKzB+pB,KAAM,WAEF,IADA,IAAIiF,EAAQ,CAACluC,KAAK+lC,QAAQ,qBAAsB/lC,KAAK+lC,QAAQ,cAAe/lC,KAAK+lC,QAAQ,aAChFlO,EAAI,EAAGA,EAAIqW,EAAMtmB,OAAQiQ,IAAK,CACnC,IAAIunD,EAAOlxC,EAAMrW,GACbunD,GACAA,EAAKzgC,cAAcR,IAAIn+C,KAAK0oF,sBAAsBpkD,KAAKtkC,KAAMkuC,QAKzEy6C,GAAWn7C,GAAAA,KAAAA,QAAqB,CAChCjF,eAAgB,WACRvoC,KAAK8lC,UAAU8F,iBACf5rC,KAAK8lC,UAAU8F,gBAAiB,EAChC5rC,KAAK4oF,oBAAoB17C,WAGjC27C,oBAAqB,WACjB,MAAO,2BAEX5/C,KAAM,WACFjpC,KAAK4oF,oBAAsB5oF,KAAKqqC,cAAc,YAC9CrqC,KAAK0hC,gBAAkB1hC,KAAKqqC,cAAc,SAE9CtE,QAAS,SAASz2B,GACd,OAAOtP,KAAK8lC,UAAUuF,OAAO/7B,IAEjC6xB,QAAS,WACL,OAAOnhC,KAAK8oF,eAEhBl/C,cAAe,SAASnV,IAChBhE,EAAAA,EAAAA,IAAUzwB,KAAK8oF,gBAAkB,gBAAkBr0D,EAAKnlB,MACxDtP,KAAK8oF,cAAc97C,YAAYhtC,KAAKqhC,gBAAgBygD,MAAkBrtD,EAAKn0B,OAC3Em0B,EAAKqV,SAAU,GAEf9pC,KAAKs6B,SAAS7F,IAGtBs0D,aAAc,SAAShC,GACnB,IAAIn/C,EAAO5nC,MACXoxB,EAAAA,EAAAA,IAAK0tD,IAAa,SAAS10D,EAAOo4B,GAC9B,IAAI48B,EAAOx3C,EAAK7B,QAAQyc,GACpB48B,GACAA,EAAK35C,OAAOshD,OAIxBiC,kBAAmB,WACf,MAAO,QAEXvjD,OAAQ,SAAS8vC,GACb,IAAI0T,GAAiBjpF,KAAK8oF,cACtB/B,EAAgB/mF,KAAK8oF,gBAAiBjnD,EAAAA,EAAAA,GAAE,SAASC,SAAS9hC,KAAKynC,2BACnEs/C,EAAcjlD,SAASkgD,IACvB+E,EAAc/5C,YAAYhtC,KAAKqhC,gBAAgBygD,MAAkB9hF,KAAKuiC,OAAO,gBAC7EviC,KAAKgmC,QAAQ,OAAQ,eAAgBuvC,GACrCv1E,KAAK8lC,UAAUE,QAAQ,CACnBg7C,KAAMhhF,KAAKgpF,oBACXlqE,MAAO2qB,EAAAA,EAAAA,OAA2BzpC,KAAK6oF,wBACxC9B,GACH/mF,KAAKkpF,aAAe3T,GAAgBv1E,KAAKkpF,aACrCD,IACAjpF,KAAK8oF,cAAgB/B,GACrB96C,EAAAA,EAAAA,OAAejsC,KAAKqqC,cAAc,YAAYy8C,WAAWvR,GACzDwR,EAAchlD,SAASwzC,IAE3Bv1E,KAAK+oF,aAAahC,IAEtB9pC,OAAQ,WACJ,IAAIs4B,EAAev1E,KAAKkpF,aACpBnC,EAAgB/mF,KAAK8oF,cACrBvH,EAAqBvhF,KAAKqqC,cAAc,YACxCkrC,GAAgBwR,IAChBxF,EAAmBr0C,SACfltC,KAAK0hC,gBAAgBmmB,YACrB7nD,KAAK4oF,oBAAoB7H,6BAK9BoI,GAAiB,CACxBjjC,eAAgB,WACZ,MAAO,CACHt5C,aAAa,EACbX,aAAa,IAGrB+hC,YAAa,CACTo7C,SAAUzG,GACV0G,qBAAsBZ,IAE1Bv6C,MAAO,CACHo7C,SAAUX,IAEd7J,WAAYA,ICrrBhBt0B,GAAAA,eAAwB,WAAY2+B,I,eCgBhCI,I,QAAqB,gBACrBC,GAAuB,iBACvBC,GAAqB,eACrBC,GAAc90C,GAAYxJ,QAAQ,CAClCu+C,iBAAkB,WACd,MAAO,IAEXC,oBAAqB,WACjB,OAAO/nD,EAAAA,EAAAA,GAAE,SAASC,SAAS9hC,KAAKqhC,gBAAgBmoD,MAEpDK,uBAAwB,SAASC,GAC7B,IAAIC,EAAcD,EAAgB,IAAMA,EAAgB,GACxD,OAAO9pF,KAAKqhC,gBAAgBmoD,IAAwBO,GAExDC,mBAAoB,WAChB,IAAIC,EAAqBjqF,KAAKuiC,OAAO,WACjCjhB,EAAU,CACV4oE,eAAgB,CACZ9sE,MAAOpd,KAAK2pF,mBACZp8E,QAAS,OAAS08E,QAAsB,IAAWA,OAAqB,EAASA,EAAmB18E,QACpGhG,SAAU,OAAS0iF,QAAsB,IAAWA,OAAqB,EAASA,EAAmB1iF,SACrG4iF,eAAgB,SAAS7jD,GACrB,IAAI8jD,EAAuB9jD,EAAE8jB,SAAS+/B,eAClCC,GACAA,EAAqB9jD,MAKjC+jD,EAAY,OAASJ,QAAsB,IAAWA,OAAqB,EAASA,EAAmB7sE,MAG3G,GAFAkE,EAAQ4oE,eAAe9sE,MAAQpd,KAAKsqF,uBAAuBhpE,EAAQ4oE,eAAe9sE,MAAOitE,GACzFrqF,KAAK2qC,cAAc,qBAAsBrpB,GACrCA,EAAQ4oE,kBAAmBz5D,EAAAA,EAAAA,IAAUnP,EAAQ4oE,eAAe38E,SAAU,CACtE,IAAI2N,EAAeoG,EAAQ4oE,eAAe9sE,MAC1CkE,EAAQ4oE,eAAe38E,UAAa,OAAS2N,QAAgB,IAAWA,IAAgBA,EAAa0M,QAEzG,OAAOtG,EAAQ4oE,gBAEnBI,uBAAuBC,EAAcF,GACjC,IAAIG,EAAe,CACfppE,SAAU,SAEVsI,EAAU3iB,MAAM2iB,QAAQ2gE,GAC5B,KAAK55D,EAAAA,EAAAA,IAAU45D,GACX,OAAOE,EAEN7gE,IACD2gE,EAAY,CAACA,IAEjB,IAAII,EAAwB,GAC5BF,EAAa1uC,SAAQnoC,IACjB+2E,EAAsB/2E,EAAOpE,MAAQoE,KAEzC,IAAIg3E,EAAkBL,EAAUr4D,KAAIte,IAChC,IAAIi3E,GAAiB,EAcrB,OAbIxxC,EAAAA,EAAAA,IAASzlC,KACTA,EAAS,CACLpE,KAAMoE,GAEVi3E,GAAiB,IAEjBl6D,EAAAA,EAAAA,IAAU/c,EAAOpE,SACbmhB,EAAAA,EAAAA,IAAUg6D,EAAsB/2E,EAAOpE,OACvCoE,GAASkY,EAAAA,EAAAA,IAAO,EAAM,GAAI6+D,EAAsB/2E,EAAOpE,MAAOoE,GACvDi3E,IACPj3E,EAAOnG,SAAU,KAGlBqe,EAAAA,EAAAA,IAAO,EAAM,GAAI4+D,EAAc92E,MAE1C,OAAOgW,EAAUghE,EAAkBA,EAAgB,IAEvDx+C,YAAa,WACT,GAAKlsC,KAAK4qF,SAON5qF,KAAK4qF,SAASroD,OAAOviC,KAAK6qF,qBAPV,CAChB,IAAIC,EAAe9qF,KAAKmhC,UACxB2pD,EAAahpD,SAAS9hC,KAAKqhC,gBAAgBkoD,KAC3C,IAAIzqE,EAAQ2qB,EAAAA,EAAAA,OAA2BzpC,KAAK8lC,UAAUkF,KAAOy+C,IACzDsB,GAAWlpD,EAAAA,EAAAA,GAAE,SAASuI,KAAK,aAActrB,GAAOijB,SAAS+oD,GAC7D9qF,KAAK4qF,SAAW5qF,KAAKwiC,iBAAiBuoD,EAAUC,GAAAA,WAAShrF,KAAK6qF,mBAKtEztC,qBAAsB9M,EAAAA,GACtB+N,mBAAoB,WACZr+C,KAAK0rC,eACL1rC,KAAKylC,UAGbwD,KAAM,WACFjpC,KAAKs6B,WACLt6B,KAAK6pC,aAAa,qBAAsB,CACpCiU,kBAAmB,CAAC,WAAY,eAGxCrY,OAAQ,WACJzlC,KAAK6qF,gBAAkB7qF,KAAKgqF,qBAC5BhqF,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9B4/D,uBAAwB,SAAS37E,EAAMm3D,GACnC,IAAIykB,EAAkBlrF,KAAK4qF,SAC3B,GAAIM,EAAiB,CACjB,IAAI9tE,EAAQ8tE,EAAgB3oD,OAAO,UAAY,GAC3Cw7C,EAAY3gE,EAAMiN,QAAQjN,EAAMwG,QAAQ,SAASqD,GACjD,OAAOA,EAAK3X,OAASA,KACrB,IACJ,GAAIyuE,GAAa,EAAG,CAChB,IAAIoN,EAAmB,SAAWpN,EAAY,IAC1CmN,EAAgB3oD,OAAO4oD,EAAmB,YAC1CD,EAAgB3oD,OAAO4oD,EAAmB,oBAAqB1kB,GAE/DykB,EAAgB3oD,OAAO4oD,EAAmB,YAAa1kB,MAKvE2kB,wBAAyB,WACrB,IAAIC,EACJ,QAAUA,EAAiBrrF,KAAK4qF,gBAAa,IAAWS,GAA0BA,EAAenE,oBAErGoE,eAAgB,WACZ,OAAOtrF,KAAKmhC,WAEhB0B,UAAW,WACP,OAAO7iC,KAAKwsC,oBAEhB5C,cAAe,SAASnV,GAKpB,GAJI,uBAAyBA,EAAKnlB,OAC9BtP,KAAK8rC,cACLrX,EAAKqV,SAAU,GAEf,YAAcrV,EAAKnlB,OACnBmlB,EAAKqV,SAAU,EACX9pC,KAAK4qF,UAAU,CACf,IAAIx4D,GAAQm5D,EAAAA,EAAAA,IAAa92D,EAAKqgC,UAC1BzmD,EAAaomB,EAAKqgC,SAAS1rC,QAAQ,aAAc,IACrD,GAAI,IAAMgJ,EAAMxK,OAAQ,CACpB,IAAIsiE,EAAiBlqF,KAAKgqF,qBAC1BhqF,KAAK4qF,SAASroD,OAAO2nD,QAClB,GAAI,UAAY93D,EAAM,GACzB,GAAI,IAAMA,EAAMxK,OAAQ,CACpB,IAAIijE,EAAkB7qF,KAAKgqF,qBAC3BhqF,KAAK4qF,SAASroD,OAAO,QAASsoD,EAAgBztE,YAC3C,GAAI,IAAMgV,EAAMxK,OAAQ,CAC3B,IAAI4jE,EAAiBxrF,KAAKsqF,uBAAuBtqF,KAAK2pF,mBAAoBl1D,EAAKn0B,OAC/EN,KAAK4qF,SAASroD,OAAOl0B,EAAYm9E,QAC1Bp5D,EAAMxK,QAAU,GACvB5nB,KAAK4qF,SAASroD,OAAOl0B,EAAYomB,EAAKn0B,YAG1CN,KAAK4qF,SAASroD,OAAOl0B,EAAYomB,EAAKn0B,OAIlDN,KAAKs6B,SAAS7F,IAElBgN,UAAW,WACP,OAAOzhC,KAAK6qF,iBAAmB7qF,KAAK6qF,gBAAgBt9E,SAExDg8C,cAAejZ,EAAAA,KAERm7C,GAAoB,CAC3BvlC,eAAgB,WACZ,MAAO,IAEXhY,MAAO,CACH0nC,YAAa8T,IAEjBt7C,UAAW,CACPJ,YAAa,CACTo7C,SAAU,CACN5B,sBAAuB,WACnBxnF,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1BrrB,KAAK+lC,QAAQ,eAAeqlD,+BC7LvBK,GAAkBv9C,MAAM0nC,YACjDprB,GAAAA,eAAwB,cAAeihC,ICoBvC,IAAIC,GAAwB,UACxBC,GAAuC,0JAU3CnhC,GAAAA,qBAA8B,CAAC,eAAgB,UAAW,YAAa,gBAAiB,gBAAiB,WAAY,UAAW,kBAAmB,mBAAoB,mBAAoB,eAAgB,aAAc,aAAc,OAAQ,mBAAoB,gBAAiB,YAAa,cAAe,eAAgB,UAAW,SAAU,OAAQ,QAAS,4BAA6B,cAAe,qBAAsB,gBAAiB,UAAW,eAAgB,SAAU,aAC9d,IAAIohC,GAAWC,EAAAA,EAAAA,QAAe,CAC1BC,iBAAkBJ,GAClBK,mBAAoB,WAChB,IAAI/iE,EAAShpB,KAAKs6B,WAMlB,OALAlJ,EAAAA,EAAAA,IAAKo5B,GAAAA,SAAmB,YAChB1yB,EAAAA,EAAAA,IAAW93B,KAAKkmD,kBAChBt6B,EAAAA,EAAAA,IAAO,EAAM5C,EAAQhpB,KAAKkmD,qBAG3Bl9B,GAEXgjE,sBAAuB,WACnBhsF,KAAKs6B,YACL1O,EAAAA,EAAAA,GAAO5rB,KAAKisF,mBAAoB,CAC5B/2C,YAAa,CACTg3C,MAAO,OACPC,MAAO,8BAEX9/E,YAAa,CACT6/E,MAAO,OACPt9E,QAAS,4CAEb/C,mBAAoB,CAChBqgF,MAAO,OACPt9E,QAAS,uCAIrBw9E,qBAAsB,WAClB,OAAOpsF,KAAKs6B,WAAWxS,OAAO,CAAC,CAC3BukE,OAAQ,CACJC,SAAU,OAEdhrE,QAAS,CACLvU,cAAc,IAEnB,CACCs/E,OAAQ,WACJ,OAAOE,EAAAA,GAAAA,OAEXjrE,QAAS,CACLvU,cAAc,EACdD,iBAAiB,EACjBrE,aAAc,CACVC,OAAQ,KAEZlB,QAAS,CACLoP,UAAU,GAEdlK,UAAW,CACP8Y,mBAAoB,YAG7B,CACC6mE,OAAQ,WACJ,OAAOlkD,EAAAA,EAAAA,QAEX7mB,QAAS,CACL0nD,eAAgB,GAChBhgE,UAAW,CACPoQ,UAAW,CACP3K,KAAM,CACFoS,OAAQ,2BACRD,SAAU,IACVE,KAAM,CACF9B,QAAS,GAEbiC,GAAI,CACAjC,QAAS,QAM9B,CACCqtE,OAAQ,SAASG,GACb,MAAO,YAAcA,EAAQC,YAEjCnrE,QAAS,CACL/Y,SAAU,CACN+W,WAAY,iBAK5BotE,MAAO,WACH1sF,KAAKs6B,WACLkwB,GAAAA,eAAwBxqD,KAAMwqD,IAC9BA,GAAAA,sBAA+BxqD,KAAM,SAEzC2sF,OAAQr8C,EAAAA,GACRs8C,eAAgB,SAASn4D,GACrB+1B,GAAAA,sBAA+BxqD,KAAM,gBAAiB,CAACy0B,IAClDA,EAAKqV,SACN9pC,KAAKs6B,SAAS7F,IAGtBo4D,kBAAmB,WACf7sF,KAAKknF,kBAAiB,IAE1BlM,mBAAoB,SAASztE,GACrBA,GACAvN,KAAKknF,oBAGb4F,YAAa,WACT9sF,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1BrrB,KAAK+lC,QAAQ,YAAYN,OAAOzlC,KAAK0gC,aAEzCqsD,mBAAoB,WAChB/sF,KAAK+lC,QAAQ,YAAYkX,UAE7By7B,eAAgB,WACZ,IAAI9wC,EAAO5nC,MACXuxE,EAAAA,EAAAA,KAAa,WACT3pC,EAAKmlD,yBAGbjgD,aAAc,SAASkgD,GACnB,IAAIx9E,EAAWw9E,EAKf,OAJI7zC,EAAAA,EAAAA,IAAS3pC,IAAa,MAAQA,EAAS,KACvCA,GAAWqyB,EAAAA,EAAAA,GAAEmrD,GACbC,EAAAA,EAAAA,KAAYtB,KAET3rF,KAAKs6B,SAAS9qB,IAEzB09E,SAAU,WACNltF,KAAKs6B,WACLkwB,GAAAA,sBAA+BxqD,KAAM,YAEzCyrC,QAAS,WACL,OAAOzrC,KAAKqqC,cAAc,QAAQoB,WAEtCtC,YAAa,WACTnpC,KAAKs6B,WACLkwB,GAAAA,sBAA+BxqD,KAAM,gBAEzCopC,UAAW,WACPohB,GAAAA,sBAA+BxqD,KAAM,aACrCA,KAAKs6B,YAET+P,cAAe,SAAS/6B,GACpB,OAAOtP,KAAKsqC,aAAah7B,IAE7By2B,QAAS,SAASz2B,GACd,OAAOtP,KAAKqrC,OAAO/7B,IAEvB89B,MAAO,SAASjM,GACZnhC,KAAKqqC,cAAc,sBAAsB+C,MAAMjM,MAGvDyqD,GAASh9C,eAAiB4b,GAAAA,eAAAA,KAA6BA,KACvD2iC,EAAAA,EAAAA,GAAkB,aAAcvB,IAChC,U,qBCvKIwB,GAAa,+DACbC,GAAa,SAASA,EAAWxwB,GAC5BA,IAGLzrC,EAAAA,EAAAA,IAAKyrC,GAAQ,SAASnxC,EAAKprB,GACvB,IAAI4vB,EAAAA,EAAAA,IAAc5vB,IAAUyG,MAAM2iB,QAAQppB,GACtC+sF,EAAW/sF,QACR,GAAI,kBAAoBA,EAAO,CAClC,IAAI0nB,EAAOolE,GAAW/jE,KAAK/oB,GACvB0nB,IACA60C,EAAMnxC,GAAO,IAAIzC,KAAKA,KAAKqkE,KAAKtlE,EAAK,IAAKA,EAAK,GAAK,GAAIA,EAAK,IAAKA,EAAK,IAAKA,EAAK,IAAKA,EAAK,WAKhGulE,GAAyB//C,GAAAA,eAAAA,QAA+B,WAC/D,IAAIggD,EAAa,SAASlsE,GACtB,IAAImsE,EAAU,mBAAqBnsE,EAAQxS,MAAO4+E,EAAAA,GAAAA,MAAmB9qD,EAAAA,EAAAA,MAAY+qD,aACjF,IAAKF,EACD,MAAM,IAAIx9D,MAAM,SAEpB,OAAOw9D,GAEPG,EAAsB,SAAStsE,GAC/B,OAAOmP,EAAAA,EAAAA,IAAUnP,EAAQ4E,YAAc5E,EAAQ4E,WAAa,WAEhE,MAAO,CACH2nE,WAAY,WACR,IAAIvsE,EAAUthB,KAAKuiC,OAAO,gBAC1B,GAAI,WAAajhB,EAAQxS,KACrB,OAAOwS,EAAQyE,YAAczE,EAAQyE,aAEzC,IACI,OAAOyF,KAAKoE,MAAM49D,EAAWlsE,GAASwsE,QAAQF,EAAoBtsE,KACpE,MAAOglB,GACL3a,EAAAA,EAAAA,IAAW2a,EAAE13B,WAGrBm/E,WAAY,SAASlxB,GACjB,IAAIv7C,EAAUthB,KAAKuiC,OAAO,gBAC1B,GAAI,WAAajhB,EAAQxS,KAIzB,IACI0+E,EAAWlsE,GAAS0sE,QAAQJ,EAAoBtsE,GAAUkK,KAAKC,UAAUoxC,IAC3E,MAAOv2B,GACL3a,EAAAA,EAAAA,IAAW2a,EAAE13B,cANb0S,EAAQ0E,YAAc1E,EAAQ0E,WAAW62C,IASjD3zB,cAAe,WACX,MAAO,CAAC,UAEZ+kD,UAAW,WACP,OAAOjuF,KAAKuiC,OAAO,yBAEvB0G,KAAM,WACF,IAAIrB,EAAO5nC,KAUX,OATA4nC,EAAKsmD,OAAS,GACdtmD,EAAKumD,WAAY,EACjBvmD,EAAKkiC,YAAa,EAClBliC,EAAKwmD,qBAAuB,gBACpB,IAAWxmD,EAAKymD,kBAChBzmD,EAAKmmD,WAAWnmD,EAAKi1B,UAG7Bj2B,EAAAA,EAAAA,IAAgBhE,EAAAA,EAAAA,MAAa,SAAUgF,EAAKwmD,sBACrCxmD,GAEXigB,SAAU,WACN,OAAO7nD,KAAKmuF,WAEhBvsD,UAAW,WACP,OAAO5hC,KAAK8pE,YAEhB1L,KAAM,WACFp+D,KAAK8pE,YAAa,EAClB,IAAIzB,GAAaimB,EAAAA,EAAAA,IAAYtuF,KAAK6tF,cASlC,OARAxlB,EAAW76C,QAAO,KACdxtB,KAAKmuF,WAAY,EACjBnuF,KAAK8pE,YAAa,KACnBz7C,MAAKwuC,IACA,OAASA,IAAU0xB,EAAAA,EAAAA,IAAc1xB,IACjC78D,KAAK68D,MAAMA,MAGZwL,GAEXxL,MAAO,SAASqxB,GACZ,IAAItmD,EAAO5nC,KACX,IAAKqrB,UAAUzD,OACX,OAAOgE,EAAAA,EAAAA,IAAO,EAAM,GAAIgc,EAAKsmD,QAE7BtmD,EAAKsmD,QAAStiE,EAAAA,EAAAA,GAAO,GAAIsiE,GACzBb,GAAWzlD,EAAKsmD,SAGxBM,KAAM,WACF,IAAI5mD,EAAO5nC,KACXizC,aAAarL,EAAKymD,kBAClBzmD,EAAKymD,iBAAmBr7C,YAAY,WAChCpL,EAAKmmD,WAAWnmD,EAAKi1B,SACrBj1B,EAAKymD,sBAAmB,IACxBzmD,EAAKrF,OAAO,gCAEpBqH,cAAe,SAASnV,GACpB,OAAQA,EAAKnlB,MACT,IAAK,eACGtP,KAAKiuF,cAAgBjuF,KAAK4hC,aAC1B5hC,KAAKo+D,OAET3pC,EAAKqV,SAAU,EACf,MACJ,QACI9pC,KAAKs6B,SAAS7F,KAG1BmW,QAAS,WACLqI,aAAajzC,KAAKquF,kBAClBznD,EAAAA,EAAAA,KAAiBhE,EAAAA,EAAAA,MAAa,SAAU5iC,KAAKouF,wBAxGU,ICvB/DK,GAAe7mD,IACf,IAAI8mD,EAAY9mD,EAAK7B,QAAQ,aACzBu1B,EAAiB1zB,EAAKyC,cAAc,QACpCwyB,EAAQ,CACR76C,iBAAkB0sE,EAAYA,EAAUC,oBAAiB,EACzD7mF,YAAa,CACTmU,cAAe2rB,EAAKrF,OAAO,8BAE/Bt6B,YAAa2/B,EAAKrF,OAAO,eACzBl6B,cAAeu/B,EAAKrF,OAAO,qBAAuBqF,EAAKrF,OAAO,sBAAmB,GAErF,OAAO3W,EAAAA,EAAAA,GAAOixC,EAAOvB,EAAevF,iBAEpC64B,GAAmBhnD,IACnB,IAAIqI,EAAoBrI,EAAKyC,cAAc,WACvCwkD,EAAsBjnD,EAAKyC,cAAc,aACzCykD,EAAmBlnD,EAAKyC,cAAc,UACtCixB,EAAiB1zB,EAAKyC,cAAc,QACpC4F,GACAA,EAAkBiO,eAAeC,KAAK,WAClCvW,EAAKmnD,YAAY,CACbjoF,QAASmpC,EAAkB8lB,oBAInC84B,GACAA,EAAoBG,iBAAiB7wC,KAAK,SAAS7X,GAC/CsB,EAAKmnD,YAAY,CACbtiF,gBAAiB65B,EAAE75B,gBACnBE,gBAAiB25B,EAAE35B,qBAI3B2uD,IACA1zB,EAAKqnD,iBAAmBrnD,EAAKrF,OAAO,mBACpCqF,EAAKsnD,oBAAsBtnD,EAAKrF,OAAO,eACvC+4B,EAAeld,QAAQD,KAAK,WACxB,IAAI0e,EAAQ4xB,GAAa7mD,GACzBA,EAAKmnD,YAAYlyB,OAGrBiyB,GACAA,EAAiBK,qBAAqBhxC,KAAK,WACvCvW,EAAKmnD,YAAY,CACbK,oBAAqBN,EAAiBO,sBAKlDC,GAAuB,KACvBC,GAAiB,CAAC3nD,EAAMi1B,KACxB,IAAI2yB,EAAuB5nD,EAAKyC,cAAc,cAC1C4F,EAAoBrI,EAAKyC,cAAc,WACvColD,EAAiB5yB,EAAM/1D,cAAW,IAAW+1D,EAAM50D,YACvD,OAAIunF,EACIC,EACO5yB,EAAM50D,aAAeunF,EAAqBE,0BAA0B7yB,EAAM/1D,SAE1E8gC,EAAKsnD,qBAAuBM,EAAqBE,0BAA0Bz/C,EAAkBiB,cAGrGo+C,IAEAK,GAAqB,CAC5BzpC,eAAgB,WACZ,MAAO,CACHh5C,aAAc,CACVqH,SAAS,EACT2R,WAAY,KACZpX,KAAM,eACNiX,WAAY,KACZC,WAAY,KACZC,cAAe,OAI3B+nB,YAAa,CACT9gC,aAAcqgF,IAElBn/C,UAAW,CACPF,MAAO,CACHrI,SAAU,CACNoD,KAAM,WACF,IAAIrB,EAAO5nC,KACPs7D,EAAiB1zB,EAAKyC,cAAc,QACxCzC,EAAKtN,WACLghC,EAAes0B,YAAYzxC,KAAK,WAC5B,GAAImd,EAAezT,aAAeyT,EAAeoP,gBAAiB,CAC9D9iC,EAAKg1C,YAAW,GAChBh1C,EAAK1G,mBACL,IAAIilB,EAAoBve,EAAK9B,UAAUC,QAAQ,qBAC/CogB,GAAqBA,EAAkB1gB,SACvCmC,EAAK9B,UAAUq9C,iCAMnCn1C,YAAa,CACT9gC,aAAc,CACV+7B,KAAM,WACFjpC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1BujE,GAAiB5uF,OAErB4hC,UAAW,WACP,OAAO5hC,KAAKs6B,YAAct6B,KAAKqqC,cAAc,QAAQwlD,kBAEzDhzB,MAAO,SAASqxB,GACZ,IAAIllE,EAAShpB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAIvC,YAHI,IAAW6iE,GACXluF,KAAK8vF,YAAWlkE,EAAAA,EAAAA,GAAO,GAAIsiE,IAExBllE,GAEX+lE,YAAa,SAASlyB,GAClB,GAAI78D,KAAKiuF,YAAa,CAClB,IAAI8B,EAAW/vF,KAAK68D,QAChBmzB,GAAWpkE,EAAAA,EAAAA,GAAO,GAAImkE,EAAUlzB,GAChCozB,GAAerrB,EAAAA,EAAAA,IAAWmrB,GAC1BG,GAAetrB,EAAAA,EAAAA,IAAWorB,IACzBjtD,EAAAA,EAAAA,IAAaktD,EAAcC,MAC5BtkE,EAAAA,EAAAA,GAAO5rB,KAAKkuF,OAAQrxB,GACpB78D,KAAKwuF,aAGT5iE,EAAAA,EAAAA,GAAO5rB,KAAKkuF,OAAQrxB,IAG5BizB,WAAY,SAASjzB,GACjB,IAAI76C,EAAmB66C,EAAM76C,iBACzB8xD,EAAajX,EAAMiX,WACnBrnE,EAAkBowD,EAAMpwD,gBACxBE,EAAkBkwD,EAAMlwD,gBACxBmiF,EAAmB9uF,KAAKqqC,cAAc,UACtC4F,EAAoBjwC,KAAKqqC,cAAc,WACvCixB,EAAiBt7D,KAAKqqC,cAAc,QACpC4hC,EAAgBjsE,KAAKuiC,OAAO,kBAC5B4tD,EAAyB,YAAclkB,GAAiB,aAAeA,EACvE5pD,GAAuB,IAASriB,KAAKuiC,OAAO,kBAAoBviC,KAAKuiC,OAAO,8BAChFviC,KAAK8lC,UAAUqD,cACX8G,GACAA,EAAkB2sB,aAAaC,EAAM/1D,SAErCgoF,GACAA,EAAiBO,cAAcxyB,EAAMuyB,qBAEpCpvF,KAAKuiC,OAAO,uBACbviC,KAAKuiC,OAAO,kBAAmB91B,GAAmB,IAEtDzM,KAAKuiC,OAAO,kBAAmB51B,GAC3BqV,GAAoB,SAAWhiB,KAAKuiC,OAAO,4BAC3CviC,KAAKuiC,OAAO,SAASvgB,iBAAmBA,GAExChiB,KAAKuiC,OAAO,uBACZviC,KAAKuiC,OAAO,mBAAoB,GAChCviC,KAAKuiC,OAAO,gBAAiBs6B,EAAMx0D,eAAiB,OAExDrI,KAAK8lC,UAAUsD,YACfppC,KAAKuiC,OAAO,mBAAoBuxC,GAAc,IAC9C9zE,KAAKuiC,OAAO,cAAegtD,GAAevvF,KAAM68D,IAChD78D,KAAKuiC,OAAO,6BAA6Bs6B,EAAM/0D,aAAc+0D,EAAM/0D,YAAYmU,eAC/Ejc,KAAKuiC,OAAO,mBAAoBs6B,EAAMv6C,WAAa,GACnDtiB,KAAKuiC,OAAO,kBAAqB4tD,IAA0B9tE,KAAyBoO,EAAAA,EAAAA,IAAUosC,EAAMt6C,UAA6BviB,KAAKivF,iBAAtBpyB,EAAMt6C,UACtH+4C,GAAkBA,EAAe3F,UAGzC7uD,QAAS,CACLgwC,kBAAmB,WACf,IAAIF,EAAiB52C,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC3C+kE,EAAyBpwF,KAAKqqC,cAAc,gBAChD,OAAO+lD,EAAuBnC,cAAgBmC,EAAuBvoC,WAAa,GAAKjR,IAG/FlnC,KAAM,CACFi5B,cAAe,WACX,OAAO3oC,KAAKs6B,WAAWxS,OAAO,CAAC,iBAEnCoiD,mBAAoB,WAChB,IAAI5vC,EAAWt6B,KAAKs6B,SAChB81D,EAAyBpwF,KAAKqqC,cAAc,gBAChD,GAAI+lD,EAAuBnC,cAAgBmC,EAAuBvoC,WAAY,CAC1E5U,aAAajzC,KAAKqwF,wBAClB,IAAIhrE,EAAW,IAAIgI,EAAAA,GAcnB,OAbArtB,KAAKqwF,uBAAyBr9C,YAAW,KACrCo9C,EAAuBhyB,OAAO5wC,QAAO,KACjCxtB,KAAKqwF,uBAAyB,QAC/BhiE,MAAK,KACJiM,EAASpO,KAAKlsB,MACdA,KAAK4vF,YAAY3iD,OACjB5nB,EAAS8I,aACVC,MAAKN,IACJ9tB,KAAK4vF,YAAY3iD,OACjBjtC,KAAKgjE,iBAAiBl1C,GAAS,iBAC/BzI,EAAS4I,eAGV5I,EAASoJ,UACRzuB,KAAK6vF,kBACbv1D,EAASpO,KAAKlsB,OAGtB4hC,UAAW,WACP,IAAIwuD,EAAyBpwF,KAAKqqC,cAAc,gBAChD,OAAOrqC,KAAKs6B,YAAc81D,EAAuBxuD,aAErDiuD,eAAgB,WACZ,OAAOp/D,EAAAA,EAAAA,IAAUzwB,KAAKqwF,yBAE1BxoC,SAAU,WACN,OAAO7nD,KAAKs6B,aAAet6B,KAAK6vF,kBAEpCjlD,QAAS,WACLqI,aAAajzC,KAAKqwF,wBAClBrwF,KAAKs6B,aAGb5tB,UAAW,CACP4jF,sBAAuB,SAAShvE,GAC5B,IAAI8uE,EAAyBpwF,KAAKqqC,cAAc,gBAC5CkmD,EAAsBvwF,KAAKuiC,OAAO,sBAClC6tD,EAAuBxuD,aAAe2uD,GAG1CvwF,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,gBC3O9Cm/B,GAAAA,eAAwB,eAAgBmlC,I,yBC0BpCa,GAAoB,iBACpBz+C,GAAY,SACZ0+C,GAAsB,eACtBC,GAAwB,qBACxBC,GAA0B,8BAC1BC,GAAuB,oBACvBC,GAA2B,wBAC3B9a,GAAiB,cACjB+a,GAAuB,+BACvBC,GAAiB,iBACjBC,GAAiB,SAASppD,EAAMo3C,GAChC,IAAI6P,EAAsBjnD,EAAKyC,cAAc,aACzCxE,EAAW+B,EAAK7B,QAAQ,YACxBuQ,GAAOzU,EAAAA,EAAAA,GAAEm9C,EAAQniD,QAAQkK,QAAQ,IAAMgvC,IACvCxiC,EAAW1N,EAAS2N,YAAY8C,GAChC/C,EAAW,IAGX,cAAgB3L,EAAKrF,OAAOuuD,IACxBjC,EAAoBoC,4BACpBpC,EAAoBqC,8BAEpBrC,EAAoBsC,gCAGpB,YAAcvpD,EAAKrF,OAAOuuD,KAC1BjC,EAAoBsC,+BAEpB,WAAavpD,EAAKrF,OAAOuuD,KACzBjC,EAAoBuC,oBAAoB79C,EAAU,CAC9C89C,SAAS,OAKrBC,GAAsB9mC,GAAAA,WAAAA,QAA4B,WAClD,IAAI+mC,EAAwB,CAACj4E,EAAWgI,KACpC,IAAIwkB,EAAYxkB,EAAQwkB,UACpBD,EAAWC,EAAUC,QAAQ,YAC7BD,EAAUvD,OAAO,iBAAmBuD,EAAUvD,OAAO,wBACrDjhB,EAAQhhB,MAAQwlC,EAAU0rD,cAAclwE,EAAQqkB,IAAIja,MAExDma,EAAS4rD,+BAA8B5vD,EAAAA,EAAAA,GAAEvoB,GAAYgI,IAErDowE,EAA0B,CAACp4E,EAAWgI,KACtC,IAAInT,EAASmT,EAAQnT,OACjB85C,GAAepmB,EAAAA,EAAAA,GAAEvoB,GACjB6sC,EAAoB7kC,EAAQwkB,UAAUC,QAAQ,qBAClDkiB,EAAanmB,SAAS0uD,IACtBrqC,EAAkBwrC,yBAAyB1pC,EAAc95C,GACzDg4C,EAAkByrC,mCAAmC3pC,IAEzD,MAAO,CACHhf,KAAM,WACF,IACI5jB,SAAUA,EACVE,cAAeA,EACf/Q,KAAMA,GACNxU,KAAKuiC,OAAO,cAAgB,GAC5B,aAAeviC,KAAKuiC,OAAO,mBAAsBld,GAAY,aAAe7Q,GAAQ,aAAe+Q,GACnGoG,EAAAA,EAAAA,IAAW,SAEf3rB,KAAK0hC,gBAAkB1hC,KAAKqqC,cAAc,QAC1CrqC,KAAK6xF,eAAiBr9E,EACtBxU,KAAK8xF,4BAA6B,EAClC9xF,KAAK+xF,WAAa/xF,KAAKgyF,mBACvBhyF,KAAKiyF,sBACLjyF,KAAK6pC,aAAa,qBAAsB,CACpCiU,kBAAmB,CAAC,WAAY,cAEpC99C,KAAK0hC,iBAAmB1hC,KAAK0hC,gBAAgB6gC,OAAOpkB,IAAIn+C,KAAK6pE,kBAAkBvlC,KAAKtkC,QAExF6pE,kBAAmB,SAAS3zD,GACxB,IAAIg8E,EAAch8E,EAAQ0N,QAAO/M,GAAU,WAAaA,EAAO/H,OAAMkjB,KAAInb,GAAUA,EAAO6U,MAC1FwmE,EAAYtqE,QAAU5nB,KAAKmyF,aAAaD,IAE5CE,oBAAqB,WACjB,IAAI92B,EAAiBt7D,KAAK0hC,gBACtBuO,EAAoBjwC,KAAKqqC,cAAc,WACvCgoD,EAAmBryF,KAAKuiC,OAAO,cAAgB,GAC/Cld,EAAWgtE,EAAiBhtE,SAC5B4mD,EAAgBjsE,KAAKuiC,OAAO,kBAC5B+vD,EAAgB,YAAcrmB,GAAiB,aAAeA,EAC9D7mD,EAAiBplB,KAAKuiC,OAAO,4BAC7BgwD,EAAsBvyF,KAAKuiC,OAAO,wBACtC,MAAO,CACHiwD,aAAcxyF,KAAKuiC,OAAO,mBAC1B/tB,KAAMxU,KAAK6xF,eACXxsE,SAAUA,EACVC,yBAA0B+sE,EAAiB/sE,yBAC3C3Y,gBAAiB3M,KAAKuiC,OAAO,mBAC7BkwD,qBAAqB,EACrBC,iBAAkB,WACd,IAAIC,EAAkB1iD,EAAkB0e,kBAAkB/mC,OAAS,EACnE,OAAO0qE,IAAkBC,IAAwBI,GAAmBvtE,IAAmBC,GAE3FqG,IAAK,WACD,OAAO,OAAS4vC,QAAkB,IAAWA,OAAiB,EAASA,EAAe5vC,OAE1FqQ,MAAO,SAAS9U,GACZ,OAAO,OAASq0C,QAAkB,IAAWA,OAAiB,EAASA,EAAev/B,MAAM9U,IAEhG2rE,WAAY,WACR,IAAIC,EACJ,OAAO,QAAUA,EAAwBv3B,EAAej0D,oBAAiB,IAAWwrF,OAAwB,EAASA,EAAsB1/D,UAE/IirC,KAAM,SAAS98C,GACX,IAAIwxE,EACJ,OAAQ,QAAUA,EAAyBx3B,EAAej0D,oBAAiB,IAAWyrF,OAAyB,EAASA,EAAuB10B,KAAK98C,MAAc,IAAI+L,EAAAA,IAAUc,QAAQ,KAE5L4kE,WAAY,WACR,OAAOz3B,EAAel+C,OAAM,IAEhC41E,eAAgB,SAAS/rE,GACrB,OAAOA,EAAKgsE,UAEhBC,iBAAkB,SAASjsE,GACvB,MAAO,UAAY,OAASA,QAAQ,IAAWA,OAAO,EAASA,EAAK6c,WAAa7c,EAAK2e,UAE1FutD,YAAa,SAASlsE,GAClB,OAAQ,OAASA,QAAQ,IAAWA,OAAO,EAASA,EAAKmsE,WAAa,OAASnsE,QAAQ,IAAWA,OAAO,EAASA,EAAKvX,OAASuX,GAEpIrD,OAAQ,WACJ,OAAO03C,EAAeC,kBAAkBl2C,IAE5CmJ,WAAY,IAAM8sC,EAAe9sC,aACjC6kE,eAAgB,SAASC,EAAeC,EAAkBC,GACtD,IAAIC,EAAwBC,GAExB5zD,KAAMA,EACNlc,OAAQA,GACR,QAAU6vE,EAAyB,QAAUC,EAAyBp4B,EAAej0D,oBAAiB,IAAWqsF,OAAyB,EAASA,EAAuBt4B,yBAAsB,IAAWq4B,EAAyBA,EAAyB,GAC7PE,EAAWlhE,KAAKvP,IAAIowE,EAAeC,GACnCK,EAAWnhE,KAAKxP,IAAIqwE,EAAeC,IACnC9iE,EAAAA,EAAAA,IAAU+iE,KACVG,EAAWlhE,KAAKvP,IAAIswE,EAAgBG,GACpCC,EAAWnhE,KAAKxP,IAAIuwE,EAAgBI,IAExC,IAAIp0B,EAAOo0B,EAAWD,EAAW,EACjC,MAAO,CACHp0B,KAAMo0B,EACNn0B,KAAMA,EACN57C,OAAQA,EACRkc,KAAMA,IAGdl0B,mBAAoB5L,KAAK6zF,qBAAqBvvD,KAAKtkC,QAG3DiyF,oBAAqB,WACjB,IAAIhiD,EAAoBjwC,KAAKqqC,cAAc,WACvCypD,EAAwB9zF,KAAK8zF,wBACjC7jD,EAAkBukB,iBAAiB,CAC/B1lD,KAAM,YACNu4B,QAAS,SACT95B,QAASumF,EACTtgF,cAAe,EACfhC,SAAU,UACVvB,UAAW,SACXb,SAAUwhF,GACVpjF,MAAO,OACP6D,aAAckgF,EACdh/E,mBAAoBm/E,IAExBzhD,EAAkByQ,aAAa,iBAAkB,UAAWozC,IAEhE9B,iBAAkB,WACd,IAAI1wE,EAAUthB,KAAKoyF,sBACnB,OAAO,IAAI2B,GAAAA,EAAUzyE,IAEzBgvE,sBAAuB,SAAShvE,GAC5B,IAAI0yE,EAAWh0F,KAAKuiC,OAAO,sBAAwB,CAC/C51B,gBAAiB3M,KAAKuiC,OAAO,oBAC7B,CACA91B,gBAAiBzM,KAAKuiC,OAAO,oBAEjCviC,KAAKgvF,iBAAiB/hD,KAAK+mD,GACvB1yE,GACAthB,KAAK2qC,cAAc,qBAAsBrpB,IAGjD2yE,uBAAwB,SAAS3yE,GAC7B,IAAI4yE,EAAiB5yE,EAAQ4yE,eACzBvnF,EAAkB2U,EAAQ3U,gBAC1BwnF,EAAmB7yE,EAAQ6yE,iBAC3BC,EAAkB9yE,EAAQ8yE,gBAC1B,YAAcp0F,KAAKuiC,OAAOuuD,OACtBoD,EAAiBvnF,GAAmB,SAASi7B,EAAMj7B,GAC/C,IAAI0nF,EAAW,EACXhxB,EAAQz7B,EAAKlG,gBAAgB2hC,QAC7B33C,EAAM23C,GAASA,EAAM33C,MACrB4oE,EAAevtF,MAAM2iB,QAAQgC,GACjC,IAAK/e,EAAgBib,OACjB,OAAO,EAEX,GAAI0sE,GAAgBvtF,MAAM2iB,QAAQ/c,EAAgB,KAAO,QAAUA,EAAgB,GAAI,CACnF,IAAK,IAAIkrB,EAAI,EAAGA,EAAIlrB,EAAgBib,OAAQiQ,IACxC,GAAI9wB,MAAM2iB,QAAQ/c,EAAgBkrB,IAAK,CACnC,GAAIlrB,EAAgBkrB,GAAG,KAAOnM,EAAI2oE,IAAa,MAAQ1nF,EAAgBkrB,GAAG,GACtE,OAAO,EAEXw8D,IAGR,OAAO,EAEX,OAAO3oE,IAAQ/e,EAAgB,GAnBC,CAoBlC3M,KAAM2M,GAAmBwnF,EAAiBvsE,OAAS,GACrD5nB,KAAKmxF,gCACE+C,EAAiBvnF,IAAoBA,EAAgBib,OAAS,IAAMusE,EAAiBvsE,QAAUwsE,EAAgBxsE,SACtH5nB,KAAKkxF,gCAIjB2C,qBAAsB,SAASp/D,GAC3B,IAAI8/D,EACAL,EAAiBl0F,KAAKuiC,OAAO,sBAC7B51B,EAAkB3M,KAAK+xF,WAAWplF,kBAClC2uD,EAAiBt7D,KAAK0hC,gBACtBtkB,EAAQk+C,EAAel+C,QAC3B,GAAKA,EAAL,CAGA,IAAI6zE,EAA4BjxF,KAAKixF,4BACjCuD,EAAqBx0F,KAAKy0F,sBAAsBr3E,GACpDpd,KAAKi0F,uBAAuB,CACxBE,iBAAkB1/D,EAAK0/D,iBACvBC,gBAAiB3/D,EAAK2/D,gBACtBznF,gBAAiBA,EACjBunF,eAAgBA,KAEhBM,EAAmB5sE,QAAUqpE,IAA8BjxF,KAAKixF,8BAChE31B,EAAe2P,YAAY,CACvBxwB,WAAY,kBACZi6C,YAAaF,IAGjBN,GACAl0F,KAAKuiC,OAAO,kBAAmB51B,GAC/B4nF,EAA0B,KACnB9/D,EAAKkgE,cAAc/sE,QAAU6M,EAAK2/D,gBAAgBxsE,UACzD5nB,KAAK40F,8BAA+B,EACpC50F,KAAKuiC,OAAO,kBAAmB9N,EAAK0/D,iBAAiBpqE,MAAM,IAC3D/pB,KAAK40F,8BAA+B,EACpCL,EAA0B,CACtBM,iBAAkBpgE,EAAKqgE,cAAc/qE,MAAM,GAC3Ctd,gBAAiBgoB,EAAK0/D,iBAAiBpqE,MAAM,GAC7CgrE,uBAAwBtgE,EAAKkgE,cAAc5qE,MAAM,GACjDirE,yBAA0BvgE,EAAK2/D,gBAAgBrqE,MAAM,KAG7D/pB,KAAKswF,sBAAsBiE,KAE/BE,sBAAuB,SAASr3E,GAG5B,IAFA,IAAIs3E,EAAc,GACdnE,EAAsBvwF,KAAKuiC,OAAO,sBAC7B1K,EAAI,EAAGjQ,EAASxK,EAAMwK,OAAQiQ,EAAIjQ,EAAQiQ,IAAK,CACpD,IAAI8N,EAAMvoB,EAAMya,GACZm7D,EAAiBhzF,KAAKwxF,cAAcjB,EAAsB5qD,EAAIj2B,KAAOi2B,EAAIja,KACzE1rB,KAAK+xF,WAAWkD,WAAWtvD,IAAQA,EAAIuvD,aAAelC,GACtD0B,EAAYrsE,KAAKwP,GAGzB,OAAO68D,GAEX/rD,cAAe,WACX,MAAO,CAAC,qBAEZiB,cAAe,SAASnV,GAEpB,OADAz0B,KAAKs6B,SAAS7F,GACNA,EAAKnlB,MACT,IAAK,YACD,IAAI6lF,EAAmBn1F,KAAK6xF,eAE5B,GADA7xF,KAAKipC,OACD,iCAAmCxU,EAAKqgC,SAAU,CAClD,IAAIsgC,EAAgBp1F,KAAK6xF,eACrBplF,EAAkBzM,KAAKuiC,OAAO,mBAC9B4yD,IAAqBC,IACjB,WAAaA,EACT3oF,EAAgBmb,OAAS,IACzBnb,EAAkB,CAACA,EAAgB,KAEhC,aAAe2oF,IACtB3oF,EAAkB,KAG1BzM,KAAKq1F,WAAW5oF,GAAiB+gB,QAAO,KACpCxtB,KAAKswF,2BAGbtwF,KAAKqqC,cAAc,WAAWorB,gBAC9BhhC,EAAKqV,SAAU,EACf,MACJ,IAAK,kBACD9pC,KAAK+xF,WAAWplF,gBAAgB8nB,EAAKn0B,OACrCm0B,EAAKqV,SAAU,EACf,MACJ,IAAK,kBACD,IAAIxpC,EAAQm0B,EAAKn0B,OAAS,IACtByG,MAAM2iB,QAAQppB,IAAWN,KAAK40F,+BAAiC50F,KAAK8lC,UAAU4kC,iBAAoBpqE,EAAMsnB,QACxG5nB,KAAKq1F,WAAW/0F,GAEpBm0B,EAAKqV,SAAU,IAG3BZ,cAAe,WACX,MAAO,CAAC,aAAc,eAAgB,sBAAuB,qBAAsB,sBAAuB,iBAAkB,YAAa,cAAe,+BAAgC,8BAA+B,kBAE3NsoD,cAAe,SAASpa,GACpB,OAAOp3E,KAAK+xF,WAAWiB,eAAe5b,IAE1C0c,sBAAuB,WACnB,MAAO,aAAe9zF,KAAKuiC,OAAOwuD,MAAoB,WAAa/wF,KAAKuiC,OAAOuuD,KAAyB,YAAc9wF,KAAKuiC,OAAOuuD,KAAyB9wF,KAAK8xF,6BAEpKwD,oBAAqB,WACjB,MAAO,SAAWt1F,KAAKuiC,OAAO,4BAElCgzD,YAAa,WACT,OAAOv1F,KAAK+xF,WAAWyD,kBAAkBx1F,KAAKs1F,wBAElDG,UAAW,WAIP,MAHI,YAAcz1F,KAAKuiC,OAAOuuD,KAC1B9wF,KAAKmxF,+BAEFnxF,KAAK+xF,WAAW0D,UAAUz1F,KAAKs1F,wBAE1CI,YAAa,WACT,OAAO11F,KAAK+xF,WAAW2D,YAAY11F,KAAKs1F,wBAE5CK,eAAgB,WACZ,OAAO31F,KAAKm0F,iBAAiB,KAEjCj6B,QAAS,WACL,IAAIztD,EAAkBzM,KAAKuiC,OAAO,oBAAsB,GACxD,OAAKviC,KAAKuiC,OAAO,uBAAyB91B,EAAgBmb,OAC/C5nB,KAAKm0F,iBAAiB1nF,IAEzB,IAAI4gB,EAAAA,IAAUc,UAAUM,WAEpC0lE,iBAAkB,SAAS7zF,EAAOs1F,EAAUC,EAAYN,GACpD,OAAOv1F,KAAK+xF,WAAWoC,iBAAiB7zF,EAAOs1F,EAAUC,EAAYN,IAEzEO,mBAAoB,WAChB,OAAO91F,KAAK+xF,WAAWgE,uBAE3BV,WAAY,SAAS56D,EAAMm7D,GACvB,OAAO51F,KAAKm0F,iBAAiB15D,EAAMm7D,IAEvCzD,aAAc,SAAS13D,GACnB,OAAOz6B,KAAKm0F,iBAAiB15D,GAAM,GAAM,IAE7Cu7D,oBAAqB,SAASC,GAC1B,IAAI74E,EAAQpd,KAAK0hC,gBAAgBtkB,QAC7Bqd,EAAO,GAUX,OATK1zB,MAAM2iB,QAAQusE,KACfA,EAAUlvF,MAAM6qE,UAAU7nD,MAAMmC,KAAKb,UAAW,KAEpD+F,EAAAA,EAAAA,IAAK6kE,GAAU,WACX,IAAIhvE,EAAO7J,EAAMpd,MACbinB,GAAQ,SAAWA,EAAK6c,SACxBrJ,EAAKpS,KAAKpB,EAAKyE,QAGhB1rB,KAAKq1F,WAAW56D,IAE3By7D,oBAAqB,WACjB,OAAOl2F,KAAK+xF,WAAWoE,oBAE3B/E,oBAAqB,SAASgF,EAAkB37D,GAC5CA,EAAOA,GAAQ,GACXz6B,KAAKixF,8BACLx2D,EAAK42D,SAAU,GAEnB,IAAIgF,EAAkBD,EAAmBp2F,KAAK0hC,gBAAgBivC,oBAAsB3wE,KAAK0hC,gBAAgBivC,mBAAkB,GAC3H,OAAO3wE,KAAK+xF,WAAWX,oBAAoBiF,EAAiB57D,IAEhE84D,iBAAkB,SAASxV,GACvB,KAAIttD,EAAAA,EAAAA,IAAUstD,GAGV,OAAO/9E,KAAK+xF,WAAWuE,kBAFvBt2F,KAAK+xF,WAAWuE,kBAAoBvY,GAK5CkT,0BAA2B,WACvB,MAAO,aAAejxF,KAAKuiC,OAAOwuD,MAAoB,WAAa/wF,KAAKuiC,OAAOuuD,KAAyB9wF,KAAK8xF,6BAEjHX,6BAA8B,WAC1B,MAAI,aAAenxF,KAAKuiC,OAAOwuD,MAAoB/wF,KAAKixF,8BACpDjxF,KAAK8xF,4BAA6B,EAClC9xF,KAAKiyF,uBACE,IAIff,4BAA6B,WACzB,QAAIlxF,KAAK8xF,6BACL9xF,KAAK8xF,4BAA6B,EAClC9xF,KAAKiyF,uBACE,KA3W+B,IAiX3CsE,GAAkB,CACzBrwC,eAAgB,WACZ,MAAO,CACHx5C,UAAW,CACP8H,KAAM,OACNgR,mBAAoB,UACpBJ,gBAAgB,EAChBG,cAAe,WACfD,yBAA0B,KAC1BD,UAAU,GAEd1Y,gBAAiB,GACjBF,gBAAiB,KAGzBuhC,YAAa,CACTthC,UAAW4kF,IAEfljD,UAAW,CACPJ,YAAa,CACTt+B,KAAM,CACFu5B,KAAM,WACF,IAAI4lD,EAAsB7uF,KAAKqqC,cAAc,aACzC6pD,EAAiBl0F,KAAKuiC,OAAO,sBACjCviC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACtB6oE,GACArF,EAAoBoF,uBAAuB,CACvCC,gBAAgB,EAChBvnF,gBAAiB3M,KAAKuiC,OAAO,sBAIzCkqC,gBAAiB,WACb,IAAI7kC,EAAO5nC,KACX,OAAO4nC,EAAKtN,WAAWjM,MAAM,WACzBuZ,EAAKyC,cAAc,aAAa6vB,cAGxCgT,iBAAkB,SAASjmD,EAAM3F,GAC7B,IAAIsmB,EAAO5nC,KACP6uF,EAAsBjnD,EAAKyC,cAAc,aACzCmsD,EAAkB3H,EAAoBiF,wBACtCvD,EAAsBjvE,EAAQivE,yBAAsB,IAAWjvE,EAAQivE,oBAAsBvwF,KAAKuiC,OAAO,sBAAwBjhB,EAAQivE,oBACzIpjB,EAAWntE,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAEzC,GADA8hD,EAAS+nB,WAAarG,EAAoB2C,cAAcjB,EAAsBpjB,EAASz9D,KAAOy9D,EAASzhD,KACnG8qE,GAAmBrpB,EAASzxC,OAC5B,IAAK,IAAI7D,EAAI,EAAGA,EAAIvW,EAAQs1B,eAAehvB,OAAQiQ,IAC/C,GAAI,WAAavW,EAAQs1B,eAAe/e,GAAGwP,QAAS,CAChD8lC,EAASzxC,OAAO7D,GAAKs1C,EAAS+nB,WAC9B,MAIZ,OAAO/nB,GAEXjT,QAAS,SAAS54C,GACd,IAAIsmB,EAAO5nC,KACPotB,EAAI,IAAIC,EAAAA,GAQZ,OAPArtB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAAWgD,MAAM,YAClC/M,GAAWA,EAAQ5U,UACpBk7B,EAAKyC,cAAc,aAAa6vB,UAAU7rC,KAAKjB,EAAEe,SAASC,KAAKhB,EAAEa,QAEjEb,EAAEe,aAENC,KAAKhB,EAAEa,QACJb,EAAEqB,WAEb4vB,mBAAoB,SAAS/X,GACzBtmC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACpBib,GAAK,YAAcA,EAAEmU,YAAgBz6C,KAAK+pE,qBAC5C/pE,KAAKqqC,cAAc,aAAakpD,kBAAkB,IAG1DjmB,aAAc,SAASz2D,GACnB,IAAIA,GAAU,oBAAsBA,EAAO4jC,WAU3C,OAAOz6C,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAT7BxU,EAAOuG,MAAMy+B,SAAQ,CAAC50B,EAAMmD,KACxB,IAAIqsE,EAAcz2F,KAAKilE,OAAO76C,GAC1BqsE,IACAA,EAAYvB,WAAajuE,EAAKiuE,WAC9BuB,EAAY/6D,OAASzU,EAAKyU,YAO1C6M,eAAgB,WACZ,IAAIryB,EAAUlW,KAAKgqE,SACf0sB,EAAoBxgF,EAAQ0R,OAAS,GAAK1R,EAAQ+tD,OAAMptD,GAAU,oBAAsBA,EAAO4jC,aACnG,GAAIi8C,EAAmB,CACnB,IAAIhC,EAAcx+E,EAAQ8b,KAAInb,GAAUA,EAAO69E,aAAe,KAAI1rC,QAAO,CAAC4kB,EAAGC,IAAMD,EAAE9lD,OAAO+lD,KAC5F7tE,KAAKgqE,SAAW,CAAC,CACbvvB,WAAY,kBACZi6C,YAAaA,IAGrB10F,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,aAGlC00D,YAAa,CACTR,qBAAsB,SAASj+D,GAC3B,IAAI09D,EAAU19D,EAAQmpB,MAClBu0C,EAAQn8B,eAAiB,WAAam8B,EAAQn8B,cAAc/zC,MAAQwS,EAAQlE,OAASkE,EAAQlE,MAAMwK,OAAS,GAGhHopE,GAAehxF,KAAMg/E,MAIjC9wC,MAAO,CACHiY,kBAAmB,CACfld,KAAM,WACFjpC,KAAKs6B,WACLt6B,KAAKqqC,cAAc,aAAa2kD,iBAAiB7wC,IAAIn+C,KAAK22F,sBAAsBryD,KAAKtkC,QAEzF22F,sBAAuB,WACnB,IAAIj2D,EAAW1gC,KAAKmhC,UAChBy1D,EAAUl2D,GAAYA,EAASa,KAAK,IAAMmvD,IAC9C,GAAIhwD,GAAYk2D,EAAQhvE,QAAU,aAAe5nB,KAAKuiC,OAAO,kBAAmB,CAC5E,IAAIs0D,EAAiB72F,KAAKqqC,cAAc,aAAakrD,cACjDuB,GAAe,IAAUD,EACzBp1D,EAAYzhC,KAAKuiC,OAAO,6BAA+BviC,KAAKqqC,cAAc,QAAQ1I,UAAYm1D,EAClGF,EAAQG,WAAW,YAAYx0D,OAAO,CAClCh1B,QAASk0B,EACTnhC,MAAOu2F,MAInBx4C,mBAAoB,SAAS/X,GACzBtmC,KAAKs6B,SAASgM,GACTA,GAAK,YAAcA,EAAEmU,YACtBz6C,KAAK22F,yBAGbhF,yBAA0B,SAASjyD,EAAYvxB,GAC3C,IAAIy5B,EAAO5nC,KACP6uF,EAAsBjnD,EAAKyC,cAAc,aACzC2sD,EAAcpvD,EAAKyC,cAAc,QAAQ1I,UACzC8lD,GAAe5lD,EAAAA,EAAAA,GAAE,SAASE,SAASrC,GAAYoC,SAAS4uD,IAwB5D,OAvBA9oD,EAAK5B,QAAQ,QAASyD,EAAAA,EAAAA,OAA2B,4BAA6B/J,GAC9EkI,EAAKyC,cAAc,iBAAiB4sD,aAAaxP,GAAc77D,EAAAA,EAAAA,GAAO,GAAIzd,EAAQ,CAC9E+oF,WAAY,YACZ1lF,SAAU,UACVlR,MAAOuuF,EAAoB0G,cAC3B7jF,cAAe,CACXnE,SAAUypF,IAAgBpvD,EAAKrF,OAAO,8BAA+B,IAAUssD,EAAoB0G,gBAEvGnoF,SAAUw6B,EAAKrF,OAAO,gCAAkC,EAAIqF,EAAKrF,OAAO,aAAe,EACvF40D,SAAU,SAAS72F,EAAOgmC,GACtB,IAAIlhB,EAAiBwiB,EAAKrF,OAAO,4BACjC+D,EAAER,UAAUvD,OAAO,UAAWnd,IAAkB,IAAUkhB,EAAER,UAAUvD,OAAO,UACxE+D,EAAEmE,OAASokD,EAAoB0G,gBAAkBj1F,IAGlDgmC,EAAEhmC,QAAU8kB,EACZkhB,EAAER,UAAUvD,OAAO,SAAS,GAE5B+D,EAAEhmC,MAAQuuF,EAAoB4G,YAAc5G,EAAoB6G,cAEpEpvD,EAAEmE,MAAM4L,sBAGToxC,GAEXmK,mCAAoC,SAASlxD,GACzCkG,EAAAA,EAAAA,GAAgBlG,EAAUyS,GAAAA,EAAgBnzC,KAAK6pC,cAAc,SAASvD,GAClE,IAAImE,EAAQnE,EAAEmE,OACT5I,EAAAA,EAAAA,GAAE4I,EAAM5N,QAAQkK,QAAQ,IAAM2pD,IAAuB9oE,QACtDgf,EAAAA,EAAAA,SAAqB/E,EAAAA,EAAAA,GAAE4I,EAAMyI,eAAerC,SAAS,IAAM6/C,IAAwBv9C,GAAAA,GAEvF1I,EAAM4L,uBAIlBxQ,SAAU,CACN4rD,8BAA+B,SAAS/xD,EAAYpe,GAC5C,SAAWA,EAAQwiB,SAAYxiB,EAAQqkB,IAAIC,SAM3CsJ,EAAAA,aAA2BxP,IAL3BA,EAAWoC,SAAS0uD,IACpBxwF,KAAKo3F,0BAA0B13D,GAC/B1/B,KAAKgmC,QAAQ,QAASyD,EAAAA,EAAAA,OAA2B,4BAA6B/J,GAC9E1/B,KAAKq3F,sBAAsB33D,EAAYpe,KAK/C+1E,sBAAuB,SAAS/9E,EAAWgI,GACvC,IAAImmE,GAAe5lD,EAAAA,EAAAA,GAAE,SAASC,SAAS4uD,IAAuB3uD,SAASzoB,GAcvE,OAbAtZ,KAAKqqC,cAAc,iBAAiB4sD,aAAaxP,GAAc77D,EAAAA,EAAAA,GAAO,GAAItK,EAAQnT,OAAQ,CACtF+oF,WAAY,UACZ1lF,SAAU,UACVkB,OAAQ,KACRpS,MAAOghB,EAAQhhB,MACf62F,SAAU,SAAS72F,EAAOgmC,GACtB,IAAIgxD,EACA,aAAe,OAAShxD,QAAK,IAAWA,GAAa,QAAUgxD,EAAWhxD,EAAEmE,aAAU,IAAW6sD,OAArD,EAAyEA,EAASxoF,OAC9H83B,EAAAA,EAAAA,QAAqBN,EAAEnF,QAASgS,GAAAA,EAAgB7M,IAGxDX,IAAKrkB,EAAQqkB,OAEV8hD,GAEX2P,0BAA2B,SAAS12D,GAChCkG,EAAAA,EAAAA,GAAgBlG,EAAUyS,GAAAA,EAAgBnzC,KAAK6pC,cAAc,SAASvD,GAClE,IAAIuoD,EAAsB7uF,KAAKqqC,cAAc,aACzCI,EAAQnE,EAAEmE,MACV8I,EAAWvzC,KAAKwzC,aAAY3R,EAAAA,EAAAA,GAAE4I,EAAMyI,eAAenM,QAAQ,IAAMgL,KACjEwB,GAAY,IACZs7C,EAAoBsC,+BACpBtC,EAAoBuC,oBAAoB79C,EAAU,CAC9CzoB,MAAO2f,EAAMsc,YAEbllB,EAAAA,EAAAA,GAAE4I,EAAM5N,QAAQkK,QAAQ,IAAM2pD,IAAuB9oE,QACrD5nB,KAAKqqC,cAAc,QAAQ4gC,YAAY,CACnCxwB,WAAY,kBACZi6C,YAAa,CAACnhD,WAMlCwjC,QAAS,SAASlgE,GACd,IAAI+wB,EAAO5nC,KACPm6E,EAAgBvyC,EAAK+V,mBACrB,oBAAsB9mC,EAAO4jC,WACzB0/B,EAAcvyD,OAAS,KACvBwJ,EAAAA,EAAAA,IAAK+oD,GAAgB,SAASnmD,EAAG2lB,IAC7BvoB,EAAAA,EAAAA,IAAKva,EAAO69E,aAAe,IAAK,SAAS1gE,EAAG5J,GACxC,IAAIksB,EACJ,GAAIz/B,EAAOuG,MAAMgN,KACbksB,EAAO1O,EAAKoY,iBAAgBne,EAAAA,EAAAA,GAAE8X,IAAezU,GAAG9a,GAC5CksB,EAAK1uB,QAAQ,CACb,IAAIstE,EAAar+E,EAAOuG,MAAMgN,GAAO8qE,WACrC5+C,EAAKtJ,YAAYyjD,QAAqB,IAAWyE,GAAqBA,GAAY3zD,KAAK,IAAMmvD,IAAuBqG,WAAW,SAAU,QAAS7B,GAClJttD,EAAK5B,QAAQ,WAAYkvD,EAAY5+C,UAKrD1O,EAAK2vD,0BAGT3vD,EAAKtN,SAASzjB,IAGtBo/B,aAAc,WACV,IAAIrO,EAAO5nC,KACPo1F,EAAgBxtD,EAAKrF,OAAO,kBAC5BoQ,EAAS/K,EAAKtN,SAAS7G,MAAMmU,EAAMvc,WAevC,MAdI,SAAW+pE,IACP,cAAgBxtD,EAAKrF,OAAOuuD,KAA0B0G,GAAAA,OACtD5wD,EAAAA,EAAAA,GAAgB+L,GAAQoiC,EAAAA,GAAAA,IAAa0iB,GAAAA,EAAAA,KAAgB,sBAAuB,IAAM1hB,GAAgBnuC,EAAKiC,cAAc,SAASvD,GAC1H0qD,GAAeppD,EAAK9B,UAAWQ,EAAEmE,OACjCnE,EAAEmE,MAAMo1C,sBAGhBj5C,EAAAA,EAAAA,GAAgB+L,EAAQ,wBAAyB/K,EAAKiC,cAAc,SAASvD,GACzE,IAAImE,EAAQnE,EAAEmE,MACVA,EAAMsc,UACNtc,EAAM4L,sBAIX1D,GAEXiD,WAAY,SAASjQ,GACjB,IAAI2Q,EAAOt2C,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACrC,GAAIsa,EAAK,CACL,IAAIuvD,IAAevvD,EAAIuvD,WACnBA,GACA5+C,EAAKxU,SAAS2uD,IAElBzwF,KAAKgmC,QAAQ,WAAYkvD,EAAY5+C,GAEzC,OAAOA,GAEX1C,UAAW,SAAStN,GAChB,IAAI04C,EAAU14C,EAAEmE,MACZitD,GAAsB71D,EAAAA,EAAAA,GAAEm9C,EAAQniD,QAAQkK,QAAQ,IAAM8pD,IAA0BjpE,OAC/E5nB,KAAK23F,oBAAmB91D,EAAAA,EAAAA,GAAEm9C,EAAQniD,WAC9B66D,GAAwB,aAAe13F,KAAKuiC,OAAOwuD,KAAmB,WAAa/wF,KAAKuiC,OAAOuuD,KAC5F9wF,KAAKqqC,cAAc,aAAa+mD,oBAAoB9qD,EAAEiN,SAAU,CAC5D89C,SAASjc,EAAAA,GAAAA,IAAoB4J,GAC7Bl0D,MAAOk0D,EAAQj4B,aAEnBi4B,EAAQ3oC,iBACR/P,EAAEwD,SAAU,GAGpB9pC,KAAKs6B,SAASgM,KAGtBqxD,mBAAoB,SAAS1tD,GACzB,IAAI2tD,EAAkB3tD,EAAQlD,QAAQ,IAAM6pD,IAAsBhpE,OAClE,QAASgwE,GAEb1rD,YAAa,SAASr1B,GAClB7W,KAAKs6B,SAASzjB,GACd7W,KAAKu3F,0BAETA,uBAAwB,WACpB,IAAIpd,EAAgBn6E,KAAK29C,mBACrBkxC,EAAsB7uF,KAAKqqC,cAAc,aACzCwtD,EAAqBhJ,EAAoBiF,0BAA4BjF,EAAoBoC,6BAC7F7/D,EAAAA,EAAAA,IAAK+oD,GAAgB,SAASnmD,EAAG2lB,IAC7B9X,EAAAA,EAAAA,GAAE8X,GAAc3M,YAAY2jD,GAAyBkH,WC/tB7ErtC,GAAAA,eAAwB,YAAa+rC,I,+CC4BjCuB,GAAuB,iBACvBC,GAA8B,wBAC9BC,GAAuB,iBACvBC,GAA4B,sBAC5BC,GAA6B,uBAC7BC,GAA4B,2BAC5BC,GAA8B,6BAC9BC,GAA2B,iBAC3BC,GAA4B,yBAC5BC,GAAyB,oBACzBC,GAAoB,eACpBC,GAAgB,IAChBC,GAAe,SAAS9wD,EAAM+wD,GAC9B,IAAIv7E,EAAQ,GACRw7E,EAAe,WAAahxD,EAAKrF,OAAO,sBAmB5C,OAlBIo2D,EAAe/wE,SACfwJ,EAAAA,EAAAA,IAAKunE,GAAiB,SAASvuE,EAAOjc,GAClC,IAAI8Y,EAAO,CACPxX,KAAMtB,EAAOiD,QACbhC,SAAUjB,EAAOiB,SACjBoB,YAAarC,EAAOqC,YACpBqoF,UAAU,EACVnpC,GAAIvhD,EAAOic,MACX7iB,UAAU,EACVuxF,iBAAiB,IAAU3qF,EAAOqC,YAClCuoF,UAAUtoE,EAAAA,EAAAA,IAAUtiB,EAAOyE,WAAazE,EAAOyE,UAAY,MAE3DgmF,IACA3xE,EAAKgsE,SAAW9kF,EAAOZ,SAE3B6P,EAAMiL,KAAKpB,MAGZ7J,GAEP47E,GAA0BxrD,GAAAA,eAAAA,QAA+B,CACzDyrD,8BAA+B,SAASv4D,GACpC,IAIIw4D,EAJAtxD,EAAO5nC,KACPm5F,EAA2BvxD,EAAKvG,gBAAgB02D,IAChDqB,EAAuBxxD,EAAKrF,OAAO,yBACnC82D,EAA2B34D,EAASa,KAAK,IAAM43D,GAE/CC,EACKC,EAAyBzxE,OAW1ByxE,EAAyB5qF,QAVzByqF,GAAuBr3D,EAAAA,EAAAA,GAAE,SAASC,SAASq3D,GAA0Bp3D,SAASrB,GAC9EkH,EAAKpF,iBAAiB02D,EAAsBI,GAAAA,WAAQ,CAChDjqF,KAAMgpF,GACN9oF,QAAS,WACLq4B,EAAK7B,QAAQ,qBAAqBwzD,qBAEtC3wF,KAAMg/B,EAAKrF,OAAO,uBAClBi3D,mBAAoB,MAM5BH,EAAyB7qF,QAGjCirF,YAAa,WACT,IAAI5zD,EAAW7lC,KAAK+lC,QAAQ,YAC5B,MAAO,CACHjjB,GAAI,eACJJ,GAAI,eACJK,GAAI8iB,GAAYA,EAAS1E,UACzBte,UAAW,MACXG,OAAQ,QACRJ,eAAgB,UAIxB82E,GAAoB9kD,GAAYxJ,QAAQ,CACxCe,YAAamE,EAAAA,GACbqpD,aAAc,WACV,QAASC,GAAAA,EAAAA,OAAeC,KAE5BC,YAAa,SAASjjF,GAClB,IAAIuG,EACA+jE,EAAgBnhF,KAAK+5F,gBAAgB7yC,WACrC0xC,EAAe,WAAa54F,KAAKuiC,OAAO,sBACxCy3D,EAAoBh6F,KAAKi6F,mBACzBtB,EAAiB34F,KAAK62C,mBAAmB+X,kBAAkBgqC,GAC/D,GAAIA,GAAgBoB,GAAqBnjF,GAAU,cAAgBA,EAAO4jC,WAAY,CAClFr9B,EAAQs7E,GAAa14F,KAAM24F,GAC3B,IAAK,IAAI9gE,EAAI,EAAGA,EAAIza,EAAMwK,OAAQiQ,IAAK,CACnC,IAAIo7D,EAAW71E,EAAMya,GAAGo7D,SACpBvjC,EAAKtyC,EAAMya,GAAG63B,GACdA,IAAO74C,EAAO2oB,cACVyzD,EACA+G,EAAkBE,WAAWxqC,EAAIujC,GAEjC+G,EAAkBG,aAAazqC,EAAIujC,UAIvC2F,GAAiBoB,GAAqB,SAAWnjF,IACzD7W,KAAK+5F,gBAAgBK,WAAWptD,YAAYhtC,KAAKqhC,gBAAgB82D,KAA6BS,GAAc5rD,YAAYhtC,KAAKqhC,gBAAgB+2D,IAA8BQ,GAC3Kx7E,EAAQs7E,GAAa14F,KAAM24F,GAC3B34F,KAAKq6F,gBAAgBlZ,EAAe/jE,KAG5Ck9E,0BAA2B,WACvB,IAAI1yD,EAAO5nC,KACP0gC,EAAWkH,EAAKzG,UAAUW,SAAS8F,EAAKvG,gBAAgBy2D,KACxDyC,EAAuB3yD,EAAKrF,OAAO,iBACnCi4D,GAAYC,EAAAA,GAAAA,MACZC,GAAiBC,EAAAA,GAAAA,IAAUH,GAC3BjO,GAAaqO,EAAAA,GAAAA,IAAgBJ,GAC7BK,EAAiB,CACjBttF,SAAS,EACTsN,SAAS,EACTE,iBAAiB,EACjBpB,aAAa,EACbgB,eAAe,EACfnB,0BAA0B,EAC1BshF,4CAA4C,EAC5C5/E,aAAc,CAAC,CACXzL,KAAM8qF,EAAqB7lF,MAC3BrH,QAAS,MACT+T,SAAUs5E,GAAkBnO,EAAa,SAAW,WAExD7xE,SAAUktB,EAAKyC,cAAc,iBAAiBovD,cAC9CjsF,MAAO+sF,EAAqB/sF,MAC5B9E,OAAQ6xF,EAAqB7xF,OAC7B4D,WAAYs7B,EAAKrF,OAAO,cACxBroB,SAAU,WACF0tB,EAAK+xD,iBACL93D,EAAAA,EAAAA,GAAE,QAAQG,YAAY4F,EAAKvG,gBAAgB22D,MAGnD1+E,UAAWihF,EAAqBjhF,WAEhCohF,GAAkBnO,GAClB3gE,EAAAA,EAAAA,GAAOivE,EAAgB,CACnB9/E,iBAAiB,IAGrB8/E,EAAe3/E,aAAa2/E,EAAe3/E,aAAa0M,QAAU,CAC9DmzE,SAAU,WAGbtqE,EAAAA,EAAAA,IAAUzwB,KAAK+5F,iBAQhB/5F,KAAK+5F,gBAAgBx3D,OAAOs4D,IAP5BjzD,EAAKmyD,gBAAkBnyD,EAAKpF,iBAAiB9B,EAAUs6D,GAAAA,EAAOH,GAC9DjzD,EAAKmyD,gBAAgBrwD,GAAG,iBAAkB,SAASjV,GAC3C,YAAcA,EAAKnlB,MACnBs4B,EAAKyE,gBAAgBY,YAOrCf,YAAa,SAASr1B,GACd7W,KAAK+5F,iBACL/5F,KAAK85F,YAAYjjF,IAGzBwjF,gBAAiB,SAAS36D,EAAYtiB,GAClC,IAAIwqB,EAAO5nC,KACPwG,EAAgBxG,KAAKuiC,OAAO,iBAC5Bq2D,EAAe,WAAapyF,EAAcgO,KAC1CymF,EAAiB,CACjB79E,MAAOA,EACP89E,cAAe,QACfl1F,oBAAoB,EACpBsC,mBAAmB,EACnBO,mBAAmB,EACnBsyF,aAAc,OACd31E,mBAAoB,OACpB41E,UAAW,KACXC,cAAe70F,EAAcmK,YAC7B8D,cAAejO,EAAciO,cAC7B01E,eAAgB,SAAS7jD,GACrB,GAAIA,EAAE8jB,SAAS0uC,gBAAiB,CAC5B,IACIwC,EADAC,GAAgB15D,EAAAA,EAAAA,GAAEyE,EAAEk1D,aAAaz0D,QAAQwxD,IAE7C,GAAIgD,EAAc3zE,SACd0zE,EAAYC,EAAch6D,KAAKi3D,IAC3B8C,EAAU1zE,QAAQ,CAClB,IAAI6zE,EAAmBH,EAAU5rF,KAAK,cACtC+rF,GAAoBA,EAAiBl5D,OAAO,YAAY,OAMxEu4C,EAAqBp7C,EAAW6B,KAAK,kBAAkB7xB,KAAK,gBAC5Dg4E,EAAY5M,GAAsBA,EAAmB4M,YACrDkR,IAAiB54F,KAAK62C,mBAAmBwf,qBACzC32B,EAAWoC,SAAS9hC,KAAKqhC,gBAAgB62D,KAE7C+C,EAAezxF,eAAiB,SAAS88B,IACrCo1C,EAAAA,EAAAA,KAAa,WACT,GAAIgM,EAAW,CACX,IAAIlR,GAAa30C,EAAAA,EAAAA,GAAEyE,EAAEnF,SAASI,KAAK,kBAAkB7xB,KAAK,gBAC1D8mE,GAAcA,EAAWl8B,SAAS,CAC9BnrC,EAAGu4E,IAGX9/C,EAAKyE,gBAAgBY,WAGzBjtC,KAAK25F,iBACLsB,EAAejmD,oBAAqB,IAExCppB,EAAAA,EAAAA,GAAOqvE,EAAgBrC,EAAe54F,KAAK07F,2BAA6B17F,KAAK27F,0BACzE37F,KAAKi6F,oBACAgB,EAAeI,gBAChBJ,EAAeW,YAAc,IAEjC57F,KAAKi6F,mBAAmB13D,OAAO04D,KAE/Bj7F,KAAKi6F,mBAAqBj6F,KAAKwiC,iBAAiB9C,EAAYm8D,GAAAA,WAAUZ,GACtEv7D,EAAWoC,SAAS9hC,KAAKqhC,gBAAgB42D,OAGjD0D,uBAAwB,WACpB,IAAIpB,EAAuBv6F,KAAKuiC,OAAO,iBACvC,MAAO,CACHr5B,WAAYqxF,EAAqBjmF,eACjCtO,oBAAoB,EACpBsC,mBAAmB,EACnBO,mBAAmB,EACnBsyF,aAAc,SAASzrF,EAAM0a,EAAOnD,IAChC4a,EAAAA,EAAAA,GAAE5a,GAAMxX,KAAKC,EAAKD,MAAMi4B,SAAS5F,SAASpyB,EAAKN,UAAU0yB,SAASw2D,OAI9EoD,yBAA0B,WACtB,IAAI9zD,EAAO5nC,KACX,MAAO,CACH87F,sBAAsB,EACtBt2E,mBAAoB,SACpBu2E,uBAAwB,SAASz1D,GAC7B,IAAIsQ,EAAiBhP,EAAKiP,mBAAmBC,oBAAoBlzB,QAAQ,SAASqD,GAC9E,OAAQA,EAAKogB,WAEb20D,EAAyB,IAAMplD,EAAehvB,SAAW0e,EAAE8jB,SAAS6oC,SACpE+I,EACA11D,EAAER,UAAUo0D,WAAW5zD,EAAEk1D,aAEzBxoD,YAAY,WACRpL,EAAKiP,mBAAmB6J,aAAapa,EAAE8jB,SAASsF,GAAI,UAAWppB,EAAE8jB,SAAS6oC,YAC1EwF,OAKpBr7C,qBAAsB,SAAS9W,GAC3B,IAAIwU,EAAcxU,EAAEwU,YAChBuC,EAAc/W,EAAE+W,YAChBu7C,EAAe,WAAa54F,KAAKuiC,OAAO,sBAE5C,GADAviC,KAAKs6B,SAASgM,GACVsyD,EAAc,CACd,IAAIqD,EAAoB5+C,EAAY9vC,SAAW,IAAM8vC,EAAYz1B,aAAU,IAAW0e,EAAE9G,YACpF08D,EAAiB7+C,EAAYpqC,qBAAuBoqC,EAAYjsC,SAAWisC,EAAY9vC,SAAWutC,EAAYh0C,SAAWu2C,EAAY8+C,IACrIF,EACAj8F,KAAKylC,OAAO,KAAM,CACdgV,WAAY,YACZjb,YAAa8G,EAAE9G,cAEZ08D,GACPl8F,KAAKylC,OAAO,KAAM,UAI9BmE,cAAe,SAASnV,GACpB,OAAQA,EAAKnlB,MACT,IAAK,gBACDtP,KAAKs6F,4BACLt6F,KAAKylC,OAAO,KAAM,QAClB,MACJ,QACIzlC,KAAKs6B,SAAS7F,KAG1B2c,kBAAmB,WACf,IACIgrD,EADApzE,EAAS,GAET4vE,EAAe,WAAa54F,KAAKuiC,OAAO,sBACxCo2D,EAAiB34F,KAAK62C,mBAAmB+X,kBAAkBgqC,GAC3D1xC,EAAWlnD,KAAK+5F,iBAAmB/5F,KAAK+5F,gBAAgB7yC,WACxDm1C,EAASn1C,GAAYA,EAAS3lB,KAAK,qBAQvC,OAPI86D,GACA1D,EAAe98C,SAAS,SAAS1tC,GAC7BiuF,EAAQC,EAAOz4E,OAAO,oBAAsBzV,EAAOic,MAAQ,MAC3D,IAAInD,EAAOm1E,EAAMx0E,OAASw0E,EAAMvrD,SAAS,IAAMynD,IAA2B34D,IAAI,GAAK,KACnF3W,EAAOX,KAAKpB,OAGb4a,EAAAA,EAAAA,GAAE7Y,IAEbi4B,QAAS,WACL,MAAO,iBAEX/P,WAAY,WACR,OAAOlxC,KAAK62C,mBAAmB+X,qBAEnCrF,cAAe,SAASp7C,EAAQq7C,GAC5B,IAAI8yC,EAAgBnuF,GAAUA,EAAOqC,cAAgB,kBAAoBg5C,IAAmBr7C,EAAOZ,SAAWvN,KAAK62C,mBAAmB0gB,sBAAsBppD,EAAOic,QACnK,OAAOpqB,KAAKu8F,0BAA4BD,GAE5Cj3D,gBAAiB,WACb,IAAI/rB,EAAYtZ,KAAK+5F,iBAAmB/5F,KAAK+5F,gBAAgByC,kBAC7D,GAAIljF,GAAaA,EAAUqtB,GAAG,YAAa,CACvC,IAAI3jB,EAAS1J,EAAU0J,SACvB,MAAO,CACHjE,KAAMiE,EAAOjE,KACbG,IAAK8D,EAAO9D,IACZ2I,MAAO7E,EAAOjE,MAAOwiC,EAAAA,EAAAA,IAAcjoC,GACnCwrE,OAAQ9hE,EAAO9D,KAAMuiC,EAAAA,EAAAA,IAAenoC,IAG5C,OAAO,MAEXigF,kBAAmB,WACVv5F,KAAK+5F,kBACN/5F,KAAKs6F,4BACLt6F,KAAKylC,UAETzlC,KAAK+5F,gBAAgBtrF,OACjBzO,KAAK25F,iBACL93D,EAAAA,EAAAA,GAAE,QAAQC,SAAS9hC,KAAKqhC,gBAAgB22D,MAGhDyE,kBAAmB,WACXz8F,KAAK+5F,iBACL/5F,KAAK+5F,gBAAgBvrF,QAG7B+tF,uBAAwB,WACpB,IAAIG,EAAiB18F,KAAK+5F,gBAC1B,OAAO2C,GAAkBA,EAAen6D,OAAO,YAEnD2G,cAAe,WACX,MAAO,CAAC,oBAAqB,wBAG1ByzD,GAAsB,CAC7Bz2C,eAAgB,WACZ,MAAO,CACH1/C,cAAe,CACX+N,SAAS,EACT5D,aAAa,EACb8D,cAAe,IACfD,KAAM,cACNhH,MAAO,IACP9E,OAAQ,IACRgM,MAAO+0B,EAAAA,EAAAA,OAA2B,iCAClCn1B,eAAgBm1B,EAAAA,EAAAA,OAA2B,qCAC3CnwB,eAAW,KAIvB00B,YAAa,CACTxnC,cAAewyF,IAEnB9qD,MAAO,CACH0uD,kBAAmBlD,IAEvBtrD,UAAW,CACPF,MAAO,CACH0nC,YAAa,CACT+T,iBAAkB,WACd,IAAIvsE,EAAQpd,KAAKs6B,WACjB,OAAOt6B,KAAK68F,yBAAyBz/E,IAEzCy/E,yBAA0B,SAASz/E,GAC/B,IAAIwqB,EAAO5nC,KACPo5F,EAAuBxxD,EAAKrF,OAAO,yBACvC,GAAI62D,EAAsB,CACtB,IAAI0D,EAAWl1D,EAAKrF,OAAO,uBACvB9f,EAAc,CACdjB,OAAQ,WACRF,QAAS,CACLjS,KAAMgpF,GACN9oF,QAAS,WACLq4B,EAAK9B,UAAUC,QAAQ,qBAAqBwzD,qBAEhD3wF,KAAMk0F,EACNrtF,KAAMqtF,EACNtyF,cAAe,SAAS87B,IACpBzE,EAAAA,EAAAA,GAAEyE,EAAEnF,SAASW,SAAS8F,EAAKiiD,uBAAuBjiD,EAAKvG,gBAAgB02D,QAG/Ex2E,SAAU,SACVH,SAAU,QACV9R,KAAM,sBACN6R,aAAc,OACdhO,UAAW,IAEfiK,EAAMiL,KAAK5F,GAEf,OAAOrF,GAEXwsB,cAAe,SAASnV,GACpB,OAAQA,EAAKnlB,MACT,IAAK,gBACDtP,KAAK8rC,cACLrX,EAAKqV,SAAU,EACf,MACJ,QACI9pC,KAAKs6B,SAAS7F,KAG1BgN,UAAW,WACP,IAAI23D,EAAuBp5F,KAAKuiC,OAAO,yBACvC,OAAOviC,KAAKs6B,YAAc8+D,KAItCprD,YAAa,CACTlnC,QAAS,CACLkyD,gBAAiB,SAASC,EAAkBC,EAAgB1P,EAAgB2P,GACxE,IAAI4jC,EAAoB/8F,KAAKuiC,OAAO,sBAChCy6D,EAAyB,WAAaD,GAAqB,kBAAoB5jC,EACnF,OAAO6jC,GAAiCh9F,KAAKs6B,SAAS2+B,EAAkBC,EAAgB1P,EAAgB2P,QC7bvFwjC,GAAoB3uD,YAAYxnC,cACtCm2F,GAAoBzuD,MAAM0uD,kBACzDpyC,GAAAA,eAAwB,gBAAiBmyC,I,eCGlC,SAASM,GAAmB9oE,EAAMwrC,EAAkBu9B,GAGvD,IAFA,IAAIC,GAASt9D,EAAAA,EAAAA,IAAqB8/B,EAAiB97C,OAC/CD,EAAS,GACJiU,EAAIqlE,EAAgB/oE,EAAKvM,OAAS,EAAI,EAAGiQ,EAAI1D,EAAKvM,OAAQiQ,IAAK,CAEpE,IADA,IAAIulE,EAAgB,GACXvlD,EAAI,EAAGA,GAAKhgB,EAAGggB,IAAK,CACzB,IAAI/a,EAAWqgE,EAAOtlD,GAAG/a,SACzB,GAAIjF,IAAMggB,GAAM,OAAS1jB,EAAK0jB,KAAM,IAAU1jB,EAAK0jB,KAAM,IAAS1jB,EAAK0jB,GAShE,CACH,IAAIwlD,EAAgB,CAACvgE,EAAUjF,IAAMggB,EAAIslD,EAAOtlD,GAAG7e,KAAO,IAAM,IAAM,IAAK7E,EAAK0jB,IAC5E,MAAQwlD,EAAc,GACtBD,EAAc/0E,KAAK,CAACg1E,EAAe,KAAM,CAACvgE,EAAU,IAAK,QAEzDsgE,EAAc/0E,KAAKg1E,QAbnB,IAAUlpE,EAAK0jB,GACfulD,EAAc/0E,KAAK,CAACyU,EAAU,MAAKqgE,EAAOtlD,GAAG7e,MAAc,QACpD7E,EAAK0jB,IAAMslD,EAAOtlD,GAAG7e,KAAOmkE,EAAOtlD,GAAG7e,MAC7CokE,EAAc/0E,KAAK,CAACyU,EAAU,KAAM3I,EAAK0jB,MAEzCulD,EAAc/0E,KAAK,CAACyU,EAAU,KAAM,OACpCsgE,EAAc/0E,KAAK,CAACyU,EAAU,IAAK,QAW/ClZ,EAAOyE,KAAKmiC,GAAAA,eAAwB4yC,IAGxC,OADAx5E,EAAS4mC,GAAAA,eAAwB5mC,EAAQ,MAClC4mC,GAAAA,eAAwB,CAAC5mC,EAAQ+7C,EAAiB/7C,SAEtD,IAAI05E,GAAiBtsE,EAAAA,EAAAA,QAAc,WACtC,IAAIusE,EAAqB,SAASC,EAAY9xE,GAC1C,IAAI4H,EAAOkqE,EAAWlqE,KACtB,OAAOA,GAAQA,EAAK9H,KAAKC,UAAUC,KAEnC+xE,EAA4B,SAASD,EAAYx6E,GACjD,IAaIoH,EAbAszE,EAAY,EACZC,EAAaH,EAAW51E,OAAS,EACrC,IAAK41E,EAAW51E,OACZ,OAAO,EAEX,EAAG,CACC,IAAIg2E,EAAcD,EAAaD,GAAa,EACxCF,EAAWI,GAAa56E,OAASA,EACjC26E,EAAaC,EAEbF,EAAYE,QAEXD,EAAaD,EAAY,GAElC,IAAKtzE,EAAQszE,EAAWtzE,GAASuzE,EAAYvzE,IACzC,GAAIozE,EAAWpzE,GAAOpH,OAASA,EAC3B,MAGR,OAAOoH,GAEX,MAAO,CACH6G,KAAM,SAASqhD,GACXtyE,KAAK2jC,YAAc2uC,EACnBtyE,KAAK21D,SAETA,MAAO,WACH31D,KAAK69F,YAAc,GACnB79F,KAAKiiE,sBAAwB,GAEjC8F,qBAAsB,WAClB,OAAO/nE,KAAKiiE,uBAEhB67B,sBAAuB,SAAS/1B,GAC5B/nE,KAAKiiE,sBAAwB8F,GAAwB,GAEzDg2B,qBAAsB,SAAS92E,GAC3B,OAAQjnB,KAAKg+F,qBAAuB/2E,EAAKye,gBAE7Cs4D,iBAAkB,WACd,IAAI/xB,EAAgBjsE,KAAK2jC,YAAYpB,OAAO,kBAC5C,MAAO,YAAc0pC,GAAiB,aAAeA,GAEzDlH,WAAY,WACR,IAAIuN,EAAoBtyE,KAAK2jC,YACzBt8B,EAAairE,EAAkB3uC,YAC/Bq7B,EAAaxU,GAAAA,qBAA8BnjD,EAAWwc,SAAW,IAAI+D,OACrEm9C,EAAa,SAASk5B,EAAoBr2D,EAAMxqB,EAAO+2C,GACvD,IAAInrC,EAAS,EACb,GAAI5L,EACA,GAAK+2C,EAGD,IAAK,IAAIt8B,EAAI,EAAGA,EAAIza,EAAMwK,OAAQiQ,IAC1B+P,EAAKm2D,qBAAqB3gF,EAAMya,KAChC7O,IAEJA,GAAUi1E,EAAoBr2D,EAAMxqB,EAAMya,GAAGza,MAAO+2C,EAAc,QANtEnrC,EAAS5L,EAAMwK,OAUvB,OAAOoB,EAdM,CAefhpB,KAAMqH,EAAW+V,QAAS4hD,GAC5B,OAAO+F,GAEXm5B,cAAe,SAASC,EAAUC,EAAiBC,EAAwBC,EAAeC,GACtF,IAAI32D,EAAO5nC,KACX,OAAO,SAASw+F,EAAkBhB,EAAYW,EAAUC,EAAiB3/B,GACrE,IAAIggC,EAAkB,GAEtB,SAASC,EAAgBP,EAAUzuF,EAAM+uD,EAASggC,GAC9C,IAAIE,EAAiBjvF,GAAQyuF,EAASzuF,EAAM+uD,GAE5C,OADAkgC,GAAkBF,EAAgBp2E,KAAKs2E,GAChCA,EAEX,IAAK,IAAI9mE,EAAI,EAAGA,EAAI2lE,EAAW51E,OAAQiQ,IAAK,CAExC,GADA4mC,EAAQp2C,KAAKm1E,EAAW3lE,GAAGnoB,OACtB0uF,IAAmB,IAAUM,EAAgBP,EAAUX,EAAW3lE,GAAGnoB,KAAM+uD,EAASggC,GACrF,OAAO,EAEX,IAAKjB,EAAW3lE,GAAGnoB,MAAQ8tF,EAAW3lE,GAAGnoB,KAAKswB,YAAcq+D,EAAwB,CAChF,IAAIxtD,EAAW2sD,EAAW3lE,GAAGgZ,SACzB8tD,EAAiB9tD,EAASjpB,QAAU42E,EAAkB3tD,EAAUstD,EAAUC,EAAiB3/B,GAE/F,GADAkgC,GAAkBF,EAAgBp2E,KAAKs2E,IACnC,IAAUA,EACV,OAAO,EAGf,GAAIP,IAAmB,IAAUM,EAAgBP,EAAUX,EAAW3lE,GAAGnoB,KAAM+uD,EAASggC,GACpF,OAAO,EAENjB,EAAW3lE,GAAGnoB,MAAQ8tF,EAAW3lE,GAAGnoB,KAAKsT,SAAWw6E,EAAW3lE,GAAG7U,SACnEs7E,GAAgB,GAEpB7/B,EAAQ5zC,MAEZ,IAAI+zE,EAAiBL,GAAuB9/B,EAAQ10C,MAAM,GAC1D,OAAOu0E,GAAiB1iE,EAAAA,GAAAA,MAAWiG,EAAAA,EAAG48D,GAAiBjxE,QAAQ,WAC3Doa,EAAKi3D,wBAAwBrB,EAAYoB,MA/B1C,CAiCLh3D,EAAKi2D,YAAaM,EAAUC,EAAiB,KAEnDS,wBAAyB,SAASrB,EAAY/+B,GAC1CA,EAAUA,GAAW,GACrB,IAAK,IAAIr0C,EAAQ,EAAGA,EAAQozE,EAAW51E,OAAQwC,IAAS,CACpD,IAAI00E,EAAYtB,EAAWpzE,GAC3B,GAAI00E,EAAUpvF,MAAQovF,EAAUpvF,KAAKsT,SAAW87E,EAAU97E,OAAQ,CAC9D87E,EAAU97E,OAAS87E,EAAUpvF,KAAKsT,OAClC,IAAK,IAAIq0C,EAAc,EAAGA,EAAcoH,EAAQ72C,OAAQyvC,IACpDoH,EAAQpH,GAAar0C,OAAS87E,EAAU97E,QAIpDw6E,EAAW19D,MAAM,SAAS8tC,EAAGC,GACzB,OAAOD,EAAE5qD,OAAS6qD,EAAE7qD,WAG5B+7E,cAAe,SAAS5qE,GAGpB,IAFA,IAAI2qE,EACAtB,EAAax9F,KAAK69F,YACbmB,EAAY,EAAGxB,GAAcwB,EAAY7qE,EAAKvM,OAAQo3E,IAC3DF,EAAYvB,EAAmBC,EAAYrpE,EAAK6qE,IAChDxB,EAAasB,GAAaA,EAAUjuD,SAExC,OAAOiuD,GAAaA,EAAUpvF,MAElCuvF,aAAc,SAASC,GAInB,IAHA,IAAIJ,EACA3qE,EAAO+qE,EAAc/qE,KACrBqpE,EAAax9F,KAAK69F,YACbmB,EAAY,EAAGA,EAAY7qE,EAAKvM,OAAQo3E,IAAa,CAE1D,GADAF,EAAYvB,EAAmBC,EAAYrpE,EAAK6qE,KAC3CF,EAAW,CACZA,EAAY,CACRpzE,IAAKyI,EAAK6qE,GACVh8E,OAAQk8E,EAAcl8E,OACtBtT,KAAM,CACFsT,OAAQk8E,EAAcl8E,OACtBgd,YAAY,EACZ7L,KAAMA,EAAKpK,MAAM,EAAGi1E,EAAY,IAEpCnuD,SAAU,IAEd,IAAIzmB,EAAQqzE,EAA0BD,EAAY0B,EAAcl8E,QAChEw6E,EAAWxgD,OAAO5yB,EAAO,EAAG00E,GAC5BtB,EAAWlqE,KAAOkqE,EAAWlqE,MAAQ,GACrCkqE,EAAWlqE,KAAK9H,KAAKC,UAAUqzE,EAAUpzE,MAAQozE,EAEjDE,IAAc7qE,EAAKvM,OAAS,IAC5Bk3E,EAAUpvF,KAAOwvF,EACbJ,EAAU97E,SAAWk8E,EAAcl8E,QACnChjB,KAAK6+F,wBAAwBrB,IAGrCA,EAAasB,EAAUjuD,WAG/BsuD,iBAAkB,WACd,OAAO,GAEXjlC,QAAS,SAAS54C,GACd,IAAIq+C,EAAmBr+C,EAAQq+C,iBAC3Bw9B,GAASt9D,EAAAA,EAAAA,IAAqB8/B,EAAiB97C,OAAS,IACxDu7E,EAAY,WAAYp/F,MAAO6/B,EAAAA,EAAAA,IAAqB7/B,KAAKq/F,QAAU,IAAMlC,EACzEhpC,EAAc1hC,KAAKvP,IAAIk8E,EAAUx3E,OAAQu1E,EAAOv1E,QACpD5nB,KAAKq/F,OAAS1/B,EAAiB97C,MAC/B,IAAK,IAAIvR,EAAa,EAAGA,EAAa6hD,EAAa7hD,IAC/C,GAAI8sF,EAAU9sF,GAAYwqB,WAAaqgE,EAAO7qF,GAAYwqB,SAAU,CAChEq3B,EAAc7hD,EACd,MAGH6hD,EAGC,SAASmrC,EAAgB9B,EAAYlrF,EAAY6hD,GAC/C,IAAK,IAAIt8B,EAAI,EAAGA,EAAI2lE,EAAW51E,OAAQiQ,IAC/BvlB,EAAa,GAAK6hD,EAClBqpC,EAAW3lE,GAAGgZ,SAAW,GAEzByuD,EAAgB9B,EAAW3lE,GAAGgZ,SAAUv+B,EAAa,EAAG6hD,GALlE,CAQAn0D,KAAK69F,YAAa,EAAG1pC,GAVvBn0D,KAAK21D,SAab4pC,kBAAmB,aACnBC,iBAAkB,SAASl+E,EAASgZ,GAChCA,EAAShZ,IAEbm+E,qBAAsB,SAASn+E,EAASgZ,GACpCA,EAAShZ,KArMqB,ICnCnC,SAASo+E,GAAkBvrE,EAAMwrC,GAGpC,IAFA,IAAIw9B,GAASt9D,EAAAA,EAAAA,IAAqB8/B,EAAiB97C,OAC/CD,EAAS,GACJiU,EAAI,EAAGA,EAAI1D,EAAKvM,OAAQiQ,IAC7BjU,EAAOyE,KAAK,CAAC80E,EAAOtlE,GAAGiF,SAAU,IAAK3I,EAAK0D,KAK/C,OAHI8nC,EAAiB/7C,QACjBA,EAAOyE,KAAKs3C,EAAiB/7C,QAE1BsrB,EAAAA,eAA6BtrB,G,cCapC+7E,GAAiB,SAASt4F,EAAYia,GACtC,IAAI8L,EAAI,IAAIC,EAAAA,GACR4N,GAAcrP,EAAAA,EAAAA,GAAO,CACrB2zC,KAAM,EACNC,KAAM,EACNlnC,mBAAmB,GACpBhX,GAIH,OAHAja,EAAW+2D,KAAKnjC,GAAa5M,MAAM,SAAS3e,EAAM6e,GAC9CnB,EAAEe,QAAQI,GAASA,EAAMC,eACzBJ,KAAKhB,EAAEa,OAAOqW,KAAKlX,IAChBA,GAEAkwE,GAAiBsC,GAAAA,QAA2B,WACnD,IAAIvB,EAAyB,SAASz2D,EAAMu2D,EAAUG,GAClD,OAAO12D,EAAKs2D,eAAe,SAASY,GAChC,IAAKA,EAAU9+D,WACX,OAAOm+D,EAASW,MAEpB,GAAO,EAAOR,GAAe,IAEjCuB,EAAwB,SAASj4D,EAAM23B,GACvC,IAAIugC,EAAiB,EACjBC,EAAaxgC,GAAQ,EAUzB,OATIA,IACA8+B,EAAuBz2D,GAAO,SAASk3D,GACnC,GAAIA,EAAU97E,OAAS88E,GAAkBvgC,EACrC,OAAO,EAEXugC,GAAkBhB,EAAUl4E,MAAQ,KAExCm5E,GAAcD,GAEXC,GAEPC,EAAa,SAASC,EAAOC,GAC7B,GAAID,EAAMr4E,SAAWs4E,EAAMt4E,OACvB,OAAO,EAEX,IAAK,IAAIiQ,EAAI,EAAGA,EAAIooE,EAAMr4E,OAAQiQ,IAC9B,KAAKsoE,EAAAA,EAAAA,IAAU,KAAMF,EAAMpoE,GAAIqoE,EAAMroE,IACjC,OAAO,EAGf,OAAO,GAEPuoE,EAAqB,SAASA,EAAmBx4D,EAAMxqB,EAAO+W,EAAMnR,EAAQq9E,GAC5E,GAAKjjF,EAAL,CAGA,IAAK,IAAIya,EAAI,EAAGA,EAAIza,EAAMwK,OAAQiQ,IAAK,CACnC,IAAI5Q,EAAO7J,EAAMya,GACjB,GAAI,QAAS5Q,QAAQ,IAAWA,EAAK7J,MAAO,CACxC+W,EAAK9L,KAAKpB,EAAKyE,KACX20E,GAAuBL,EAAWK,EAAoBlsE,KAAMA,KAAUlN,EAAKye,iBAC3E26D,EAAoBr9E,OAASA,GAEjC,IAAI87E,EAAYl3D,EAAKm3D,cAAc5qE,GAC/B2qE,IAAc73E,EAAKye,iBACnBo5D,EAAU97E,OAASA,GAEnB87E,IAAcA,EAAU9+D,WACxBhd,GAAU87E,EAAUl4E,MAEpB5D,EAASo9E,EAAmBx4D,EAAM3gB,EAAK7J,MAAO+W,EAAMnR,EAAQq9E,GAEhElsE,EAAKtJ,WAEL7H,IAGR,OAAOA,IAEPs9E,EAAgB,SAASA,EAAcr5E,EAAM+3C,GAC7C,IAAIp4C,EAAQK,EAAKL,OAASK,EAAK7J,MAAMwK,OACrC,IAAKX,EAAKL,OAASo4C,EAAa,EAAG,CAC/Bp4C,EAAQ,EACR,IAAK,IAAIiR,EAAI,EAAGA,EAAI5Q,EAAK7J,MAAMwK,OAAQiQ,IACnCjR,GAAS05E,EAAcr5E,EAAK7J,MAAMya,GAAImnC,EAAa,GAG3D,OAAOp4C,GAEX,MAAO,CACH24E,kBAAmB,SAASj+E,GACxB,IAIIk+C,EAJAG,EAAmBr+C,EAAQq+C,iBAC3B4gC,EAAkB,GAClBC,EAAsB,EACtBC,GAAgB,EAEhB58E,EAAQvC,EAAQ2Z,YAAYpX,MAC5Bi8E,EAAiB,EAUrB,GATE,SAASngC,EAAkB1kC,GACzB,GAAIA,EAAYpX,MAAO,CACnB,IAAIs5E,EAASuD,GAAAA,qBAAkCzlE,EAAYpX,OACvD88E,EAAQD,GAAAA,qBAAkC/gC,EAAiB7/B,MAC/D6/B,EAAiB7/B,KAAO8gE,GAAAA,EAAAA,mBAA+BzD,EAAQwD,UACxD1lE,EAAYpX,OALzB,CAOA87C,EAAkBr+C,EAAQ2Z,aAC5B3Z,EAAQuC,MAAQvC,EAAQuC,OAASA,GAC7BvC,EAAQskD,gBAAZ,CAGA,IAAI3qC,GAAcrP,EAAAA,EAAAA,GAAO,GAAI+zC,GAC7B1kC,EAAYskC,KAAOsgC,EAAsB7/F,KAAM2/D,EAAiBJ,MAC5DtkC,EAAYskC,MAAQtkC,EAAYukC,MAAQ37C,IACxCoX,EAAYskC,OACZtkC,EAAYukC,OACZihC,GAAgB,GAEhBxlE,EAAYukC,MAAQ37C,IACpB27C,EAAOvkC,EAAYukC,KACnBvkC,EAAYukC,QAEhB6+B,EAAuBr+F,MAAO,SAAS8+F,GACnC,GAAIA,EAAU97E,QAAUiY,EAAYskC,KAAOtkC,EAAYukC,KAAOsgC,EAC1D,OAAO,EACAhB,EAAU97E,QAAUiY,EAAYskC,KAAOugC,GAAkBhB,EAAUl4E,QAC1Ek5E,GAAkBhB,EAAUl4E,MAAQ,EACpC25E,EAAgBl4E,KAAKy2E,GACrB0B,GAAuB1B,EAAUl4E,WAGzCwK,EAAAA,EAAAA,IAAKmvE,GAAkB,WACnBtlE,EAAYrX,OAAS,SAASuQ,EAAMwrC,EAAkB97C,GAGlD,IAFA,IAAIs5E,EAASuD,GAAAA,qBAAkC78E,GAAS87C,EAAiB97C,OACrED,EAAS,GACJiU,EAAI,EAAGA,EAAI1D,EAAKvM,OAAQiQ,IAAK,CAElC,IADA,IAAIulE,EAAgB,GACXvlD,EAAI,EAAGA,GAAKhgB,EAAGggB,IACpBulD,EAAc/0E,KAAK,CAAC80E,EAAOtlD,GAAG/a,SAAUjF,IAAMggB,EAAI,KAAO,IAAK1jB,EAAK0jB,KAEvEj0B,EAAOyE,KAAKq4E,GAAAA,eAA4BtD,IAG5C,OADAx5E,EAAS88E,GAAAA,eAA4B98E,EAAQ,MACtC88E,GAAAA,eAA4B,CAAC98E,EAAQ+7C,EAAiB/7C,SAX5C,CAYnB5jB,KAAKm0B,KAAM8G,EAAapX,MAE9BvC,EAAQq+C,iBAAmB1kC,EAC3B3Z,EAAQi/E,gBAAkBA,EAC1Bj/E,EAAQk/E,oBAAsBA,EAC9Bl/E,EAAQi+C,KAAOtkC,EAAYskC,MAAQ,EACnCj+C,EAAQm/E,cAAgBA,EACxBn/E,EAAQk+C,KAAOA,IAEnBggC,iBAAkB,SAASl+E,EAASgZ,GAChC,IAAIimE,EAAkBj/E,EAAQi/E,gBAC1BpD,EAASuD,GAAAA,qBAAkCp/E,EAAQuC,OACnDm7C,EAAam+B,EAAOv1E,OAExB,SAASi5E,EAAoBnxF,EAAMykB,EAAMgpE,EAAQ2D,EAAgB99E,GAC7D,GAAKtT,GAASykB,EAAKvM,QAAWu1E,EAAOv1E,OAArC,CAGA,IAAIm5E,EACAlpE,EACAmpE,GAAY//D,EAAAA,EAAAA,IAAa9M,EAAK,IAAI,GACtC,IAAK0D,EAAI,EAAGA,EAAInoB,EAAKkY,OAAQiQ,IAAK,CAE9B,GADAkpE,GAAW9/D,EAAAA,EAAAA,IAAavxB,EAAKmoB,GAAGnM,KAAK,GACjC1I,GAAU89E,EAAe99E,QAAUg+E,IAAcD,EACjD,MAEA/9E,GAAUs9E,EAAc5wF,EAAKmoB,GAAIslE,EAAOv1E,QAG3ClY,EAAKkY,QAAUo5E,IAAcD,GAC9BrxF,EAAKstC,OAAOnlB,EAAG,EAAG,CACdnM,IAAKyI,EAAK,GACV/W,MAAO,GACPwJ,MAAO,IAAMuN,EAAKvM,OAASk5E,EAAel6E,WAAQ,IAG1Di6E,EAAoBnxF,EAAKmoB,GAAGza,MAAO+W,EAAKpK,MAAM,GAAIozE,EAAOpzE,MAAM,GAAI+2E,EAAgB99E,IAMvF,GAJI1B,EAAQk/E,qBAAuBl/E,EAAQiN,OAASjN,EAAQiN,MAAMC,YAAc,IAC5ElN,EAAQiN,MAAMC,YAAclN,EAAQk/E,qBAExClmE,EAAShZ,GACL09C,EAAY,CACZ,IAAItvD,EAAO4R,EAAQ5R,KACf8rB,GAAQylE,EAAAA,GAAAA,GAAUvxF,GAItB,GAHAkxF,GAAAA,EAAAA,gBAA4BplE,EAAO2hE,GAAQ+D,YAAY7yE,MAAM,SAAS8yE,GAClEzxF,EAAOyxF,KAEPZ,EACA,IAAK,IAAIvB,EAAY,EAAGA,EAAYuB,EAAgB34E,OAAQo3E,IACxD6B,EAAoBnxF,EAAM6wF,EAAgBvB,GAAW7qE,KAAMgpE,EAAQoD,EAAgBvB,GAAY19E,EAAQi+C,MAG1Gj+C,EAAQskD,iBACP,SAASw7B,EAAkBx5D,EAAMxqB,EAAO+W,EAAMnR,EAAQy9E,EAAejhC,GAGnE,IAFA,IAAI6hC,EAAuB,EACvBC,GAAsB,EACjBzpE,EAAI,EAAGA,EAAIza,EAAMwK,OAAQiQ,IAAK,CACnC,IAAI5Q,EAAO7J,EAAMya,GACjB,QAAI,IAAW5Q,EAAK7J,MAAO,CACvB+W,EAAK9L,KAAKpB,EAAKyE,KACf,IAAIozE,EAAYl3D,EAAKm3D,cAAc5qE,GACnC,GAAI2qE,IAAcA,EAAU9+D,WACxB/Y,EAAKqtC,eAAiBrtC,EAAK7J,MAC3B6J,EAAK7J,MAAQ,KACb4F,GAAU87E,EAAUl4E,MACpB44C,IACIA,EAAO,GACP6hC,IAEAZ,IACAa,GAAsB,QAEvB,GAAIr6E,EAAK7J,MAAO,CACnB,IAAImkF,EAAaH,EAAkBx5D,EAAM3gB,EAAK7J,MAAO+W,EAAMnR,EAAQy9E,EAAejhC,GAC9EihC,IACIc,EAAWv+E,OAASA,EAAS,EAC7BiE,EAAKye,gBAAiB,EAEtB47D,GAAsB,GAG9Bt+E,EAASu+E,EAAWv+E,OACpBw8C,EAAO+hC,EAAW/hC,KACdA,EAAO,IACHv4C,EAAK7J,MAAMwK,OACXX,EAAKk6C,0BAA2B,EAEhCkgC,KAIZltE,EAAKtJ,WAED41E,IACAa,GAAsB,GAE1Bt+E,IACAw8C,IACIA,EAAO,GACP6hC,IAGRZ,GAAgB,EAQpB,OANIa,GACAlkF,EAAM4/B,OAAO,EAAG,GAEhBqkD,GACAjkF,EAAM4/B,QAAQqkD,EAAsBA,GAEjC,CACHr+E,OAAQA,EACRw8C,KAAMA,GA3DZ,CA6DAx/D,KAAM0P,EAAM,GAAI4R,EAAQi+C,KAAMj+C,EAAQm/E,cAAen/E,EAAQk+C,MAEnEl+C,EAAQ5R,KAAOA,IAGvBquF,qBAAsB,SAAS92E,GAC3B,OAAO,OAASA,EAAK7J,OAEzB0gF,sBAAuB,WACnB,IAAI0D,EAAuB,EAC3BnD,EAAuBr+F,MAAO,SAAS8+F,GAC/BA,EAAUl4E,QACV46E,GAAwB1C,EAAUl4E,MAAQ,MAGlD5mB,KAAKs6B,SAASknE,IAElBC,gBAAiB,SAASttE,GACtB,IAMIutE,EANA95D,EAAO5nC,KACPqH,EAAaugC,EAAKjE,YAClBg+D,EAAiBt6F,EAAWs6F,eAAiBt6F,EAAWs6F,iBAAmBt6F,EAAWib,YACtFs/E,EAAkBv6F,EAAW+V,QAC7B4F,EAAS68E,EAAsBj4D,EAAM+5D,EAAiBt6F,EAAWkb,YACjEu8E,EAAYl3D,EAAKm3D,cAAc5qE,GAYnC,OATIutE,EADA5C,IAAcA,EAAU9+D,YACL,IAAI3S,EAAAA,IAAUc,QAAQ2wE,EAAUl4E,OAEjC+4E,GAAet4F,EAAY,CACzCuc,OAAQ87E,GAAkBvrE,EAAM,CAC5BvQ,OAAQvc,EAAWuc,SACnBC,MAAOxc,EAAWwc,aAIvB+X,EAAAA,EAAAA,IAAK8lE,GAAiBrzE,MAAM,SAASzH,GACxCA,EAAQgK,SAAShK,EAAMgB,OAAShB,EAAM,GAAKA,GACvCk4E,GACAsB,EAAmBx4D,EAAMg6D,EAAiB,GAAI5+E,GAC9C87E,EAAU9+D,YAAc8+D,EAAU9+D,WAClC8+D,EAAUl4E,MAAQA,IAElBk4E,EAAY,CACR97E,QAAS,EACT4D,MAAOA,EACPuN,KAAMA,EACN6L,YAAY,GAEhBogE,EAAmBx4D,EAAMg6D,EAAiB,GAAI5+E,EAAQ87E,GAClDA,EAAU97E,QAAU,GACpB4kB,EAAKq3D,aAAaH,IAG1Bl3D,EAAKk2D,2BACL1vE,MAAM,WACN/mB,EAAW26D,gBAAgByG,UAAU,YAAap9C,eAG1D8zE,iBAAkB,WACd,OAAO,GAEXjlC,QAAS,SAAS54C,EAAS69C,GACvB,IAAIv3B,EAAO5nC,KACP2/D,EAAmBr+C,EAAQq+C,iBAC3Bt4D,EAAaugC,EAAKjE,YAEtB,GADA3jC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACtB8zC,EAAeC,OACf,OAAOi/B,EAAuBz2D,GAAO,SAASk3D,GAC1C,IAAI4C,EAAkB/B,GAAet4F,EAAY,CAC7Cuc,OAAQ87E,GAAkBZ,EAAU3qE,KAAMwrC,KAE1CkiC,EAAmBlC,GAAet4F,EAAY,CAC9Cuc,OAAQq5E,GAAmB6B,EAAU3qE,KAAMwrC,KAE/C,OAAO/jC,EAAAA,EAAAA,IAAKimE,EAAkBH,GAAiBrzE,MAAM,SAASrL,EAAQ4D,GAClE5D,EAAS4N,SAAS5N,EAAO4E,OAAS5E,EAAO,GAAKA,GAC9C4D,EAAQgK,SAAShK,EAAMgB,OAAShB,EAAM,GAAKA,GAC3Ck4E,EAAU97E,OAASA,EACf87E,EAAUl4E,QAAUA,IACpBk4E,EAAUl4E,MAAQA,EAClBghB,EAAKk2D,+BAGb,KAlUmC,I,WCfvD,SAASgE,GAA0BC,EAAax/E,EAAU2jE,EAAW5zE,GAEjE,GADAA,EAAaA,GAAc,EACvBiQ,EAAW,GAAK2jE,EAAY,EAAG,CAC/B,IAAI8b,EAAaD,EAActvE,KAAKC,MAAMqvE,EAAcx/E,GAAYA,GAAYA,EAKhF,OAJAy/E,GAAc9b,EAAY5zE,EAAa,EACnC0vF,EAAa,IACbA,GAAcz/E,GAEXkQ,KAAKC,MAAMsvE,GAAcz/E,EAAWjQ,EAAa,IAE5D,OAAO,EAEJ,IAAIgrF,GAAiBsC,GAAAA,QAA2B,WACnD,IAAIqC,EAAwB,SAASr6D,EAAMu2D,EAAU+D,GACjD,OAAOt6D,EAAKs2D,eAAe,SAASY,EAAWrgC,GAC3C,GAAIqgC,EAAU9+D,WACV,OAAOm+D,EAASW,EAAWrgC,MAE/B,GAAM,EAAOyjC,EAAcA,IAE/Bd,EAAoB,SAASA,EAAkBx5D,EAAMxqB,EAAO+2C,EAAaguC,EAAchuE,EAAMyxC,EAAiBw8B,GAC9G,IAAIpiE,EAKJ,GAJAmiE,EAAa/kF,MAAQ+kF,EAAa/kF,OAAS,GAC3C+kF,EAAaE,MAAQF,EAAaE,OAAS,GAC3CF,EAAav7E,MAAQu7E,EAAav7E,OAAS,EAC3Cu7E,EAAaG,UAAYH,EAAaG,WAAa,EAC9CnuC,EAGL,IAAK,IAAIt8B,EAAI,EAAGA,EAAIza,EAAMwK,OAAQiQ,IAAK,CACnC,IAAI5Q,EAAO7J,EAAMya,GACjB,QAAI,IAAW5Q,EAAK7J,MAAO,CAEvB,GADA+W,EAAK9L,KAAKpB,EAAKyE,KACXk6C,EACA5lC,GAAa,MACV,CACH,IAAI8+D,EAAYl3D,EAAKm3D,cAAc5qE,GACnC6L,EAAa8+D,GAAaA,EAAU9+D,WAEnCA,EAGM/Y,EAAK7J,MACZgkF,EAAkBx5D,EAAM3gB,EAAK7J,MAAO+2C,EAAc,EAAGguC,EAAchuE,EAAMyxC,EAAiBw8B,GACnF,IAAMjuC,IAAeltC,EAAKL,OAAWg/C,IAAmBw8B,IAC/DD,EAAa/kF,MAAMiL,KAAKpB,GACxBk7E,EAAaE,MAAMh6E,KAAK8L,EAAKpK,MAAM,IACnCo4E,EAAav7E,OAASu7E,EAAaG,UACnCH,EAAaG,UAAYr7E,EAAKL,QAR9BK,EAAKqtC,eAAiBrtC,EAAK7J,MAC3B6J,EAAK7J,MAAQ,MASjB+W,EAAKtJ,SAIb03E,EAAsB,SAAS36D,EAAM3gB,EAAMu7E,EAAkBruE,EAAMnR,GACnE,IACI4D,EADAk4E,EAAYl3D,EAAKm3D,cAAc5qE,GAE9B2qE,GAWG0D,EACA1D,EAAUl4E,MAAQK,EAAKL,MAAQ,EAAIK,EAAKL,MAAQK,EAAK7J,OAAS6J,EAAK7J,MAAMwK,QAAU,EAEnFX,EAAKL,MAAQk4E,EAAUl4E,OAASK,EAAKL,MAEzCk4E,EAAU97E,OAASA,IAffw/E,IACA57E,EAAQK,EAAKL,MAAQ,EAAIK,EAAKL,MAAQK,EAAK7J,MAAMwK,QAErDggB,EAAKq3D,aAAa,CACdj/D,WAAY4H,EAAK66D,iBAAiBtuE,EAAKvM,OAAS,GAChDuM,KAAMA,EAAKpK,MAAM,GACjB/G,OAAQA,EACR4D,MAAOA,GAAS,MAWxB87E,EAAmB,SAASA,EAAiB96D,EAAMtmB,EAASlE,EAAOulF,EAAkBrwF,EAAY6hB,EAAMkjC,GACvG,IAKIzwC,EALAo4C,EAAa19C,EAAQuC,MAAQvC,EAAQuC,MAAM+D,OAAS,EACpD46E,EAAmBxjC,IAAe2jC,EAClCC,EAAethF,EAAQtV,iBAAiBD,OACxCiX,EAAS,EACTwL,EAAa,EAOjB,GALAlc,EAAaA,GAAc,EAC3B6hB,EAAOA,GAAQ,GACXyuE,IAAiBvrC,IACjBr0C,EAAS,IAAM1Q,EAAagP,EAAQi+C,MAAQ,EAAIj+C,EAAQ0/C,MAAM1uD,EAAa,IAAM,GAEjFA,GAAcqwF,EACd,OAAOvlF,EAAMwK,OAEjB,IAAK,IAAIiQ,EAAI,EAAGA,EAAIza,EAAMwK,OAAQiQ,IAAK,CACnC,IAAI5Q,EAAO7J,EAAMya,GACjB,GAAI5Q,EAAM,CAEN,GADAkN,EAAK9L,KAAKpB,EAAKyE,MACVzE,EAAKL,QAAUK,EAAK7J,YAAS,IAAW6J,EAAK7J,MAC9C,OAAQ,EAIZ,GAFAmlF,EAAoB36D,EAAM3gB,EAAMu7E,EAAkBruE,EAAMnR,EAAS6U,GACjEjR,EAAQK,EAAK7J,MAAQslF,EAAiB96D,EAAMtmB,EAAS2F,EAAK7J,MAAOulF,EAAkBrwF,EAAa,EAAG6hB,EAAM0D,GAAK5Q,EAAKL,QAAU,EACzHA,EAAQ,EACR,OAAQ,EAEZ4H,GAAc5H,EACduN,EAAKtJ,OAGb,OAAO2D,GAEPq0E,EAAkB,SAAS1F,EAAQ7qF,GACnC,OAAO6qF,GAAUA,EAAOv1E,QAAUu1E,EAAO7qF,MAAiB6qF,EAAO7qF,GAAY0tB,YAE7E8iE,EAAiB,SAASC,EAAYxgF,EAAUS,GAGhD,IAFA,IAAIkjE,EACA8c,EAAchgF,EACT1Q,EAAa,EAAGA,EAAaywF,EAAWn7E,OAAQtV,IACrD4zE,EAAY6c,EAAWzwF,GAAY0Q,OAAS,EACxC1Q,EAAa,IACb4zE,GAAa6c,EAAWzwF,EAAa,GAAG2wF,mBACpC1gF,IACA2jE,GAAa4b,GAA0BkB,EAAazgF,EAAU2jE,EAAW5zE,EAAa,GAAKA,IAGnG0wF,GAAe9c,EAEnB,OAAO8c,GAGX,SAASE,EAA6B5hF,EAAS6gF,EAAcgB,EAAYC,GACrE,IAAIn8E,EAAOk7E,EAAa/kF,MAAMgmF,GAC1B7jC,EAAOj+C,EAAQ0/C,OAAS1/C,EAAQ0/C,MAAMmiC,GACtC3jC,EAAOl+C,EAAQ2/C,OAAS3/C,EAAQ2/C,MAAMkiC,GACtCE,EAAqBD,IAAsBjB,EAAa/kF,MAAMwK,OAAS,EACvE07E,EAAsB,IAAMF,EAC5BG,EAAuBD,GAAuB/jC,GAAQ,EACtDikC,EAAyBv8E,EAAKL,MAAQ44C,EAAO+jC,EAC7CD,QAAuB,IAAW/jC,IAClCt4C,EAAKye,gBAAiB,GAEtB29D,QAAsB,IAAW7jC,GAAQgkC,IACzCv8E,EAAKk6C,0BAA2B,GAIxC,SAASsiC,EAAe/zF,GACpB,OAAQ3I,MAAM2iB,QAAQha,GAG1B,SAASg0F,EAAiBpiF,GACjBmiF,EAAeniF,EAAQ5R,QACxB4R,EAAQ5R,KAAO,IAAI2d,EAAAA,IAI3B,SAASs2E,EAAe/7D,EAAMtmB,EAASqhF,EAAkBR,EAAcgB,EAAYzzF,GAC1E4R,EAAQskD,kBACTu8B,EAAe,GACff,EAAkBx5D,EAAMl4B,EAAMizF,EAAkBR,EAAc,IAC5D,SAAS7gF,EAAS6gF,EAAcyB,GAC9B,IAAIC,EAAoBD,EAAoB,EACxC5kC,EAAa19C,EAAQuC,MAAQvC,EAAQuC,MAAM+D,OAAS,EACxDu6E,EAAa5iC,KAAOj+C,EAAQ0/C,OAAS1/C,EAAQ0/C,MAAM6iC,GAC/CviF,EAAQ2/C,YAAS,IAAW3/C,EAAQ2/C,MAAM4iC,KAEtC1B,EAAa3iC,KADbR,IAAe4kC,GACKzB,EAAav7E,MAAQu7E,EAAav7E,OAASu7E,EAAa5iC,MAAQ,GAEhE,EAExB4iC,EAAa3iC,MAAQl+C,EAAQ2/C,MAAM4iC,IAVzC,CAYAviF,EAAS6gF,EAAcQ,IAE7B,IAAI3jC,EAAa19C,EAAQuC,MAAQvC,EAAQuC,MAAM+D,OAAS,EACpDu6E,EAAaE,MAAMz6E,QAAUo3C,EAAa2jC,EAAmB,GAC7De,EAAiBpiF,GACf,SAASsmB,EAAMtmB,EAAS6gF,EAAcQ,EAAkBQ,EAAYzzF,GAClE,IAAIytF,EAAS77E,EAAQuC,OAAS,GAC1BigF,EAAe3G,EAAOgG,EAAa,GACnC/oC,EAAY,IAChBhpC,EAAAA,EAAAA,IAAK+wE,EAAaE,OAAQ,SAASe,GAC/B,IAAInoE,EAAc,CACd3C,mBAAmB,EACnByrE,mBAAmB,EACnBlgF,MAAO,CAACigF,GACRE,aAAc1iF,EAAQq+C,iBAAiBqkC,aACvCpgF,OAAQ87E,GAAkByC,EAAaE,MAAMe,GAAoB,CAC7Dx/E,OAAQtC,EAAQq+C,iBAAiB/7C,OACjCC,MAAOs5E,IAEXhqE,OAAQ7R,EAAQq+C,iBAAiBxsC,QAEjC,IAAMiwE,IACNnoE,EAAYskC,KAAO4iC,EAAa5iC,MAAQ,GAExC6jC,IAAsBjB,EAAaE,MAAMz6E,OAAS,IAClDqT,EAAYukC,KAAO2iC,EAAa3iC,MAEpC,IAAI6I,EAAa,IAAMptC,EAAYukC,KAAO,GAAK53B,EAAKjE,YAAYwkC,cAAcltC,IAC9EW,EAAAA,EAAAA,IAAKysC,GAAYh6C,MAAM,SAAS3e,GAC5B,IAAIuX,EAAOk7E,EAAa/kF,MAAMgmF,GAC9BF,EAA6B5hF,EAAS6gF,EAAcgB,EAAYC,GAChEn8E,EAAK7J,MAAQ1N,KAEjB0qD,EAAU/xC,KAAKggD,MAEnBzsC,EAAAA,GAAAA,MAAW,KAAMw+B,GAAW/rC,MAAM,WAC9Bq0E,EAAiB96D,EAAMtmB,EAAS5R,EAAMizF,EAAmB,GACzDgB,EAAe/7D,EAAMtmB,EAASqhF,EAAmB,EAAGR,EAAcgB,EAAa,EAAGzzF,MAhCxF,CAkCAk4B,EAAMtmB,EAAS6gF,EAAcQ,EAAkBQ,EAAYzzF,IACtDyyF,EAAaE,MAAMz6E,QAAUtG,EAAQq+C,iBAAiB97C,OAC7D6/E,EAAiBpiF,GACf,SAASsmB,EAAMtmB,EAAS6gF,EAAczyF,GACpC,IAAIu0F,EAAkB,GAClB9G,EAAS77E,EAAQuC,OAAS,IAC9BuN,EAAAA,EAAAA,IAAK+wE,EAAaE,OAAQ,SAASruE,EAAGkwE,GAClCD,EAAgB57E,KAAKq3E,GAAkBwE,EAAc,CACjDrgF,MAAOvC,EAAQskD,gBAAkBtkD,EAAQq+C,iBAAiB97C,MAAQs5E,QAG1E,IAAIv5E,EAAStC,EAAQq+C,iBAAiB/7C,OACjCtC,EAAQq+C,iBAAiB2I,eAC1B1kD,EAAS88E,GAAAA,eAA4B,CAAC98E,EAAQ88E,GAAAA,eAA4BuD,EAAiB,SAE/F,IAAIhpE,GAAcrP,EAAAA,EAAAA,GAAO,GAAItK,EAAQq+C,iBAAkB,CACnDrnC,mBAAmB,EACnByrE,mBAAmB,EACnBlgF,MAAO,KACPic,KAAMq9D,EAAOr1E,OAAO44E,GAAAA,qBAAkCp/E,EAAQq+C,iBAAiB7/B,MAAQ,KACvFlc,OAAQA,IAERugF,EAAgBv8D,EAAKjE,YAAYygE,mCAChCD,IACDlpE,EAAYskC,KAAO4iC,EAAa5iC,KAChCtkC,EAAYukC,KAAO2iC,EAAa3iC,OAEpC5jC,EAAAA,EAAAA,IAAK,IAAMumE,EAAa3iC,KAAO,GAAK53B,EAAKjE,YAAYwkC,cAAcltC,IAAc5M,MAAM,SAASjR,EAAOmR,GAC/F41E,IACA/mF,EAAQwqB,EAAKjE,YAAY0gE,wBAAwBjnF,EAAO+/E,EAAQgF,EAAaE,OAC7EjlF,EAAQ+kF,EAAa5iC,KAAOniD,EAAM2M,MAAMo4E,EAAa5iC,MAAQniD,EAC7DA,EAAQ+kF,EAAa3iC,KAAOpiD,EAAM2M,MAAM,EAAGo4E,EAAa3iC,MAAQpiD,IAEpEgU,EAAAA,EAAAA,IAAK+wE,EAAa/kF,OAAQ,SAASgN,EAAOnD,GACtC,IAAIs0D,EAAYt0D,EAAKL,OAAS,IAAMwD,GAAS+3E,EAAa5iC,MAAQ,GAC9D+kC,EAAgBlnF,EAAM4/B,OAAO,EAAGu+B,GACpC2nB,EAA6B5hF,EAAS6gF,EAAchF,EAAOv1E,OAAS,EAAGwC,GACvEnD,EAAK7J,MAAQknF,KAEjBhjF,EAAQ5R,KAAKye,QAAQze,MACrB0e,KAAK9M,EAAQ5R,KAAKue,QArCxB,CAsCA2Z,EAAMtmB,EAAS6gF,EAAczyF,IACxB+zF,EAAeniF,EAAQ5R,OAC9B4R,EAAQ5R,KAAKye,QAAQze,GAG7B,IAAI60F,EAAsB,SAASl9F,EAAYia,GAC3C,IAAI8L,EAAI,IAAIC,EAAAA,GACRm3E,KAAgBljF,EAAQuC,QAASvC,EAAQuC,MAAM+D,QAC/CqT,GAAcrP,EAAAA,EAAAA,GAAO,CACrB2zC,KAAM,EACNC,KAAM,EACNukC,kBAAmBS,EACnBlsE,mBAAoBksE,GACrBljF,EAAS,CACRuC,MAAO2gF,EAAaljF,EAAQuC,MAAQ,OAUxC,OARAxc,EAAW+2D,KAAKnjC,GAAa5M,MAAM,SAAS3e,EAAM6e,GAC9C,IAAI3H,EAAQ2H,IAAUi2E,EAAaj2E,EAAMywC,WAAazwC,EAAMC,YACvDN,SAAStH,GAIdwG,EAAEe,QAAQvH,GAHNwG,EAAEa,OAAOw2E,GAAAA,GAAAA,MAAiBD,EAAa,QAAU,aAIrDp2E,KAAKhB,EAAEa,OAAOqW,KAAKlX,IAChBA,GAEX,MAAO,CACH0wE,sBAAuB,SAASx8E,GAC5B,IAAI0mD,EAAkB,EAClBx5C,EAAalN,EAAQiN,OAASjN,EAAQiN,MAAMC,YAAc,EAC1DwwC,EAAa19C,EAAQiN,OAASjN,EAAQiN,MAAMywC,YAAc,EAC1Dz8C,EAAWviB,KAAK2jC,YAAYphB,WAC5BmiF,EAAkB1kG,KAAKg+F,mBAC3BiE,EAAsBjiG,MAAO,SAAS8+F,GAClCA,EAAUmE,mBAAqB,KAEnChB,EAAsBjiG,MAAO,SAAS8+F,EAAWrgC,GAC7C,IAAIukC,EAAcF,EAAerkC,EAASimC,EAAkB,EAAIniF,EAAUylD,GACtEphD,EAAQk4E,EAAUl4E,MAAQk4E,EAAUmE,mBACnCyB,IACD99E,GAASk7E,GAA0BkB,EAAazgF,EAAUqE,EAAO63C,EAAQ72C,OAAS,IAElF62C,EAAQA,EAAQ72C,OAAS,GACzB62C,EAAQA,EAAQ72C,OAAS,GAAGq7E,oBAAsBr8E,EAElDohD,GAAmBphD,KAG3B5mB,KAAKs6B,SAAS0tC,EAAkBx5C,EAAawwC,IAEjDyjC,iBAAkB,SAASnwF,GACvB,IAAI6qF,EAASn9F,KAAK2jC,YAAY9f,QAC9B,OAAOg/E,EAAgB1F,EAAQ7qF,IAEnCqyF,qBAAsB,SAASrjF,EAAS68E,GACpC,IAAIuG,EAAkB1kG,KAAKg+F,mBACvBz7E,EAAWviB,KAAK2jC,YAAYphB,WAC5By+C,EAAQ,GACRC,EAAQ,GACR2jC,EAAyB,EACzB3B,EAAqB,EACrB3hF,EAAQk+C,OACRyiC,EAAsBjiG,MAAO,SAAS8+F,GAClCA,EAAUmE,mBAAqB,EAC/BnE,EAAU8F,uBAAyB,KAEvC3C,EAAsBjiG,MAAO,SAAS8+F,EAAWrgC,GAC7C,IAAIe,EACAqlC,EAAiB,EACjBC,EAAuB,EACvB9B,EAAcF,EAAerkC,EAASimC,EAAkB,EAAIniF,EAAU0gF,GACtE8B,EAAyB,EACzBC,EAA6B,EAC7BC,EAAiBnG,EAAUl4E,MAAQk4E,EAAUmE,mBAC7CiC,EAAyBD,EAC7B9G,GAAYA,EAASW,EAAWkE,GAChC,IAAIzjC,EAAOj+C,EAAQi+C,KAAOyjC,EACtBA,GAAe1hF,EAAQi+C,KAAOj+C,EAAQk+C,MAAQylC,IAC9CzlC,EAAOl+C,EAAQk+C,KACVklC,IACDK,EAAyBjD,GAA0BkB,EAAazgF,EAAU0iF,EAAgBxmC,EAAQ72C,OAAS,GAC3Gq9E,GAAkBF,EAAyBtmC,EAAQ72C,OACnDs9E,GAA0BH,EACtBxiF,GAAYg9C,GAAQ,IACpBslC,EAAiBpmC,EAAQ72C,OACzBk9E,EAAuBrmC,EAAQ72C,OAAS,EACxCo9E,EAA6BvyE,KAAKC,MAAM6sC,EAAOh9C,KAGnDg9C,GAAQ,GACJyjC,EAAciC,EAAiB3jF,EAAQi+C,MACvCyB,EAAMhU,QAAQuS,EAAOylC,EAA6BH,EAAiB/F,EAAU8F,wBAE7E5B,EAAciC,GAAkB3jF,EAAQi+C,KAAOC,GAC/CyB,EAAMjU,QAAQwS,EAAOqlC,EAAiB/F,EAAUmE,mBAAqBnE,EAAU8F,yBAE5E5B,EAAciC,GAAkB3jF,EAAQi+C,KAAOC,GACtDyB,EAAMjU,QAAQwS,EAAOD,EAAOu/B,EAAUmE,qBAG1CD,GAAe1hF,EAAQi+C,OACnBd,EAAQA,EAAQ72C,OAAS,GACzB62C,EAAQA,EAAQ72C,OAAS,GAAGg9E,wBAA0BnyE,KAAKvP,IAAIgiF,EAAwB3lC,EAAO,EAAIylC,EAA6BF,GAE/HF,GAA0BnyE,KAAKvP,IAAIgiF,EAAwB3lC,EAAO,IAGtEyjC,GAAe1hF,EAAQi+C,KAAOC,IAC9BylC,EAAiBxyE,KAAKvP,IAAIgiF,EAAwB3lC,EAAOC,GAAQwlC,EAA6B,GAAKF,GAC/FrmC,EAAQA,EAAQ72C,OAAS,GACzB62C,EAAQA,EAAQ72C,OAAS,GAAGq7E,oBAAsBgC,EAElDhC,GAAsBgC,MAIlC3jF,EAAQi+C,MAAQqlC,EAChBtjF,EAAQk+C,MAAQyjC,EAAqB2B,GAEzCtjF,EAAQ0/C,MAAQA,EAChB1/C,EAAQ2/C,MAAQA,GAEpBwgC,gBAAiB,SAASttE,GACtB,IAAI2qE,EAAY9+F,KAAK++F,cAAc5qE,GAC/B9sB,EAAarH,KAAK2jC,YAClBwhE,EAAoB99F,EAAW2E,mBAAmBoX,YAClD+5E,EAASuD,GAAAA,qBAAkCr5F,EAAWwc,SAC1D,OAAIi7E,GACAA,EAAU9+D,YAAc8+D,EAAU9+D,WAC9BmlE,GAAqBrG,EAAU9+D,YAAc7L,EAAKvM,OAASu1E,EAAOv1E,OAC3D28E,EAAoBl9F,EAAY,CACnCuc,OAAQ87E,GAAkBvrE,EAAM,CAC5BvQ,OAAQvc,EAAW+zD,kBAAkBx3C,OACrCC,MAAOxc,EAAWwc,UAEtBA,MAAO,CAACs5E,EAAOhpE,EAAKvM,SACpBuL,OAAQ9rB,EAAW8rB,WACpB9E,MAAM,SAAS2wC,GACd8/B,EAAUl4E,MAAQo4C,MAGlB,IAAI3xC,EAAAA,IAAUc,YAElB,IAAId,EAAAA,IAAUY,UAE1BsxE,kBAAmB,SAASj+E,GACxB,IAAIq+C,EAAmBr+C,EAAQq+C,iBAC3Bw9B,EAASuD,GAAAA,qBAAkC/gC,EAAiB97C,OAASvC,EAAQ2Z,YAAYpX,OAC7F,IAAIvC,EAAQskD,iBAAoBu3B,EAAOv1E,OAAvC,CAGA,GAAItG,EAAQtV,iBAAiBzD,SAAU,CACnC,IAAIq6F,EAAe5iG,KAAK2jC,YAAY33B,mBAAmBD,OACvD4zD,EAAiB97C,MAAQ68E,GAAAA,qBAAkC/gC,EAAiB97C,OAC5E87C,EAAiB97C,MAAMg4B,SAAS,SAASh4B,EAAOuG,GAC5C,IAAIg7E,EAAch7E,IAAUu1C,EAAiB97C,MAAM+D,OAAS,EAC5D/D,EAAMmc,YAAc4iE,IAAiBwC,KAG7C9jF,EAAQuC,MAAQvC,EAAQuC,OAASs5E,EAC7B77E,EAAQtV,iBAAiBD,QACzBuV,EAAQi+C,KAAOI,EAAiBJ,KAChCj+C,EAAQk+C,KAAOG,EAAiBH,KAChCG,EAAiBokC,mBAAoB,EACrCpkC,EAAiB97C,MAAQs5E,EAAOpzE,MAAM,EAAG,GACzC/pB,KAAK2kG,qBAAqBrjF,GAC1Bq+C,EAAiBJ,KAAOj+C,EAAQi+C,KAChCI,EAAiBH,KAAOl+C,EAAQk+C,OAEhCl+C,EAAQi+C,KAAOj+C,EAAQ2Z,YAAYskC,KACnCj+C,EAAQk+C,KAAOl+C,EAAQ2Z,YAAYukC,KACnCx/D,KAAK2kG,qBAAqBrjF,MAGlCm+E,qBAAsB,SAASn+E,EAASgZ,GACpC,IAEI9L,EAFAm0E,EAAmBjC,GAAAA,qBAAkCp/E,EAAQq+C,iBAAiB97C,OAASvC,EAAQ2Z,YAAYpX,OAAO+D,OAClHo3C,EAAa19C,EAAQuC,MAAQvC,EAAQuC,MAAM+D,OAAS,EAEpDu6E,EAAe,GACnB,GAAI7gF,EAAQskD,gBACRtrC,EAAShZ,GACT8/E,EAAkBphG,KAAMshB,EAAQ5R,KAAMizF,EAAkBR,EAAc,GAAI7gF,EAAQskD,gBAAiBtkD,EAAQq+C,iBAAiB2I,kBACzH,CAOH,GANKhnD,EAAQtV,iBAAiBD,QAC1B/L,KAAKk+F,eAAe,SAASY,GACzBA,EAAUl4E,MAAQ,KAG1B4H,EAAak0E,EAAiB1iG,KAAMshB,EAASA,EAAQ5R,KAAMizF,GACvDn0E,EAAa,EAEb,YADAlN,EAAQ5R,MAAQ,IAAI2d,EAAAA,IAAUY,OAAOtC,EAAAA,EAAAA,MAAa,WAStD,GANKrK,EAAQtV,iBAAiBD,QACtB42F,GAAoBrhF,EAAQiN,OAASjN,EAAQ2Z,YAAY3C,oBACzDhX,EAAQiN,MAAMC,WAAaA,EAC3BlN,EAAQiN,MAAMywC,WAAa19C,EAAQ5R,KAAKkY,QAG5Co3C,GAAc19C,EAAQq+C,iBAAiBokC,oBAAsB71E,SAAS5M,EAAQiN,MAAMywC,YAEpF,YADA19C,EAAQ5R,MAAQ,IAAI2d,EAAAA,IAAUY,OAAOw2E,GAAAA,GAAAA,MAAiB,WAG1DzkG,KAAK89F,sBAAsBx8E,GACtBA,EAAQtV,iBAAiBD,QAC1B/L,KAAK2kG,qBAAqBrjF,GAE9BgZ,EAAShZ,GACJA,EAAQtV,iBAAiBD,QAC1B/L,KAAKqlG,eAAe/jF,EAASqhF,GAGrCgB,EAAe3jG,KAAMshB,EAASqhF,EAAkBR,EAAc,EAAG7gF,EAAQ5R,OAE7E41F,cAAe,SAASloF,EAAO4jD,EAAOhC,GAClC,GAAKA,EAAL,CAGA,IAAIumC,EAAYnoF,EAAM,GAClBmiD,EAAOyB,EAAM,GACbnwB,EAAW00D,GAAaA,EAAUnoF,WAClC,IAAWmiD,IACXgmC,EAAU7/D,gBAAiB,EACvBmL,IACA00D,EAAUnoF,MAAQyzB,EAAS9mB,MAAMw1C,GACjCv/D,KAAKslG,cAAcC,EAAUnoF,MAAO4jD,EAAMj3C,MAAM,GAAIi1C,EAAa,OAI7EwmC,cAAe,SAASpoF,EAAO4jD,EAAOC,EAAOjC,EAAYP,GACrD,GAAKO,GAAe5hD,EAApB,CAGAqhD,EAAUA,GAAW,GACrB,IAAIgnC,EAAWroF,EAAMA,EAAMwK,OAAS,GAChCipB,EAAW40D,GAAYA,EAASroF,MAChCoiD,EAAOyB,EAAM,GACb1B,EAAOyB,EAAM,GACjB,GAAIykC,EAAU,CACV,IAAIC,EAAeD,EAAS7+E,OAAS6+E,EAAS//D,gBAAkB65B,GAAQ,IAAM1uB,EAASjpB,YACnF,IAAW43C,GAAQkmC,EAAelmC,IAClCimC,EAAStkC,0BAA2B,EACpC1C,EAAQ5iB,SAAS,SAASnU,GACtBA,EAAOy5B,0BAA2B,KAElCtwB,IACAA,EAAWA,EAAS9mB,MAAM,EAAGy1C,GAC7BimC,EAASroF,MAAQyzB,IAGzB4tB,EAAQp2C,KAAKo9E,GACbzlG,KAAKwlG,cAAc30D,EAAUmwB,EAAMj3C,MAAM,GAAIk3C,EAAMl3C,MAAM,GAAIi1C,EAAa,EAAGP,MAGrF4mC,eAAgB,SAAS/jF,EAAS09C,GAC9Bh/D,KAAKslG,cAAchkF,EAAQ5R,KAAM4R,EAAQ0/C,MAAOhC,GAChDh/D,KAAKwlG,cAAclkF,EAAQ5R,KAAM4R,EAAQ0/C,MAAO1/C,EAAQ2/C,MAAOjC,IAEnEolC,iCAAkC,WAC9B,OAAO,GAEXC,wBAAyB,SAASjnF,GAC9B,OAAOA,GAEX88C,QAAS,SAAS54C,EAAS69C,GACvB,IAKIn/B,EACA1tB,EANAs1B,EAAO5nC,KACPqH,EAAaugC,EAAKjE,YAClBg8B,EAAmBr+C,EAAQq+C,iBAC3B97C,EAAQvC,EAAQuC,OAASvC,EAAQq+C,iBAAiB97C,MAClDu7E,EAAYsB,GAAAA,qBAAkC94D,EAAKy3D,QAIvD,SAASsG,EAAY7G,EAAWrgC,GACxBA,EAAQ72C,SAAWtV,EAAa,IAChCwsF,EAAU9+D,WAAaA,GAG/B,IAAK1tB,EAAa,EAAGA,EAAa8sF,EAAUx3E,OAAQtV,IAChD0tB,EAAa6iE,EAAgBh/E,EAAOvR,GAChCuwF,EAAgBj7D,EAAKy3D,OAAQ/sF,KAAgB0tB,GAC7C4H,EAAKs2D,cAAcyH,GAI3B,GADA/9D,EAAKtN,SAAS7G,MAAMzzB,KAAMqrB,WACtBxH,GAASvC,EAAQtV,iBAAiBD,QAAUozD,EAAeC,OAC3D,OAAO6iC,EAAsBr6D,GAAO,SAASk3D,GACzC,IAAI4C,EAAkB6C,EAAoBl9F,EAAY,CAClDuc,OAAQ87E,GAAkBZ,EAAU3qE,KAAM,CACtCvQ,OAAQ+7C,EAAiB/7C,OACzBC,MAAOA,IAEXA,MAAOA,EAAMkG,MAAM+0E,EAAU3qE,KAAKvM,QAClCuL,OAAQwsC,EAAiBxsC,SAEzB0uE,EAAmB0C,EAAoBl9F,EAAY,CACnDuc,OAAQq5E,GAAmB6B,EAAU3qE,KAAM,CACvCvQ,OAAQ+7C,EAAiB/7C,OACzBC,MAAOA,IACR,GACHA,MAAOA,EAAMkG,MAAM+0E,EAAU3qE,KAAKvM,OAAS,EAAGk3E,EAAU3qE,KAAKvM,QAC7DuL,OAAQwsC,EAAiBxsC,SAE7B,OAAOyI,EAAAA,EAAAA,IAAKimE,EAAkBH,GAAiBrzE,MAAM,SAASrL,EAAQ4D,GAClE5D,EAAS4N,SAAS5N,EAAO4E,OAAS5E,EAAO,GAAKA,GAC9C4D,EAAQgK,SAAShK,EAAMgB,OAAShB,EAAM,GAAKA,GAC3Ck4E,EAAU97E,OAASA,EACf87E,EAAUl4E,QAAUA,IACpBk4E,EAAUl4E,MAAQA,EAClBghB,EAAKk2D,sBAAsBx8E,UAGnC,KAtiBmC,ICHnDskF,GAA6B,0BAC7BC,GAAqC,yBACrCC,GAAkC,sBAClCC,GAAmC,mBACnC5nE,GAAwB,qBACxB6nE,GAA2B,eAC3BlgD,GAA+B,oBAC/BmgD,GAAoC,CACpCh9D,KAAM,WACFjpC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1BrrB,KAAKkmG,uBAETA,oBAAqB,SAAS5kF,GAC1B,IAAI/Y,EAAWvI,KAAKmmG,UAChBC,EAAkBpmG,KAAKuiC,OAAO,0BAC9B8jE,EAAsBrmG,KAAKuiC,OAAO,qBAClCv2B,EAAmBsV,EAAUA,EAAQtV,iBAAmBhM,KAAKgM,mBAC7Ds6F,EAA0Bt6F,EAAiBmX,WAAanX,EAAiBiB,SAAWjB,EAAiBD,QACrGu6F,GAA4Bt6F,EAAiBzD,WAAa69F,GAAoBC,IAItE99F,GAAYA,aAAoBg+F,MACxCvmG,KAAKmmG,UAAY,IAAIK,GAAwBxmG,SAJxCuI,GAAYA,aAAoBi+F,MACjCxmG,KAAKmmG,UAAY,IAAII,GAAuBvmG,QAMxDgoE,gBAAiB,WACb,IAAIx5C,EAAaxuB,KAAKs6B,WACtB,OAAO9L,EAAa,GAAKxuB,KAAK2jC,YAAY9f,SAAW7jB,KAAK2jC,YAAYrL,oBAAsB9J,EAAaxuB,KAAKmmG,UAAUp+B,uBAAyBv5C,GAErJu2C,WAAY,WACR,OAAO/kE,KAAK2jC,YAAY9f,QAAU7jB,KAAKmmG,UAAUphC,cAAgB,EAAI/kE,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAEnG8zE,iBAAkB,WACd,OAAOn/F,KAAKmmG,UAAUhH,oBAE1BpB,qBAAsB,SAAS92E,GAC3B,OAAOjnB,KAAKmmG,UAAUpI,qBAAqB92E,IAE/CgwD,cAAe,SAASvrD,GACpB,IAAIozE,EAAY9+F,KAAKmmG,UAAUpH,cAAcrzE,GAC7C,OAAOozE,EAAYA,EAAU9+D,YAAchgC,KAAKmmG,UAAUhH,oBAE9DsH,YAAa,SAASn0F,GAClB,OAAOtS,KAAK0mG,mBAAmBp0F,GAAY,IAE/Cq0F,UAAW,SAASr0F,GAChB,OAAOtS,KAAK0mG,mBAAmBp0F,GAAY,IAE/Co0F,mBAAoB,SAASp0F,EAAYs0F,GACrC,IAAIv/F,EAAarH,KAAK2jC,YAClB9f,EAAQxc,EAAWwc,QACnBs5E,EAAS3yC,GAAAA,qBAA8B3mC,GAAS,IACpD,GAAIs5E,EAAOv1E,OAAQ,CACf,IAAK,IAAIiQ,EAAI,EAAGA,EAAIslE,EAAOv1E,OAAQiQ,SAC3B,IAAWvlB,GAAcA,IAAeulB,EACxCslE,EAAOtlE,GAAGmI,WAAa4mE,EAChB/iF,GAASA,EAAMgU,KACtBslE,EAAOtlE,GAAGmI,WAAanc,EAAMgU,GAAGmI,YAGxC34B,EAAWwc,MAAMs5E,GACjBn9F,KAAKmmG,UAAUjI,eAAe,SAASY,EAAWrgC,QAC1C,IAAWnsD,GAAcA,IAAemsD,EAAQ72C,OAAS,IACzDk3E,EAAU9+D,WAAa4mE,MAE3B,GAAO,GACX5mG,KAAK6jE,kBAET,OAAO,GAEX3J,QAAS,WAEL,OADAl6D,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACnBrrB,KAAKmmG,UAAUjsC,QAAQzmC,MAAMzzB,KAAKmmG,UAAW96E,YAExDo2E,gBAAiB,SAASttE,GACtB,IAAI9sB,EAAarH,KAAK2jC,YACtB,GAAIt8B,EAAWwc,QAKX,OAJAxc,EAAWw/F,eACP7mG,KAAK+jE,mBACL/jE,KAAK+jE,iBAAiBzE,aAAc,GAEjCt/D,KAAK8mG,qBAAqB3yE,GAAM3G,QAAQ,WAC3CnmB,EAAW0/F,iBAIvBD,qBAAsB,SAAS3yE,GAC3B,OAAOn0B,KAAKmmG,UAAU1E,gBAAgBttE,IAE1C6yE,2BAA4B,SAASnjF,EAAOmc,GACxC,GAAInc,GAAS9c,MAAM2iB,QAAQ7F,GACvB,IAAK,IAAIgU,EAAI,EAAGA,EAAIhU,EAAM+D,OAAQiQ,IAC9B,GAAIhU,EAAMgU,GAAGmI,aAAeA,EACxB,OAAO,GAKvBylC,2BAA4B,SAASnkD,EAAS69C,GAC1C,IAAInzD,EAAmBsV,EAAQtV,iBAC3BsV,EAAQq+C,iBAAiB97C,OACrB7X,EAAiBzD,WAAa+Y,EAAQskD,kBACjC55D,EAAiBoX,cAAepjB,KAAKgnG,2BAA2B1lF,EAAQq+C,iBAAiB97C,OAAO,KACjG7X,EAAiBD,QAAS,IAG7BC,EAAiBzD,UAAcyD,EAAiBiB,SAAYjB,EAAiBmX,YAAa7B,EAAQskD,kBAAmB5lE,KAAKgnG,2BAA2B1lF,EAAQq+C,iBAAiB97C,OAAO,KACtL7X,EAAiBD,QAAS,KAEtBuV,EAAQskD,iBAAmB55D,EAAiBD,QAAUozD,EAAe52D,UAC7EvI,KAAK0jE,aAET1jE,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9By6C,mBAAoB,SAASxkD,GAGzB,OAFAthB,KAAKs6B,SAAShZ,GACdthB,KAAKkmG,oBAAoB5kF,GAClBthB,KAAKmmG,UAAU5G,kBAAkBj+E,IAE5CshD,kBAAmB,SAASthD,GACxB,OAAOthB,KAAKmmG,UAAU3G,iBAAiBl+E,EAASthB,KAAKs6B,SAASgK,KAAKtkC,QAEvEinE,sBAAuB,SAAS3lD,GAC5B,OAAOthB,KAAKmmG,UAAU1G,qBAAqBn+E,EAASthB,KAAKs6B,SAASgK,KAAKtkC,SAG/EsyE,GAAAA,OAAyB2zB,IACzB,IAAIgB,GAAiC,CACjCh+D,KAAM,WACFjpC,KAAKs6B,WACLt6B,KAAK6pC,aAAa,kBAClB7pC,KAAK6pC,aAAa,iBAClB7pC,KAAK6pC,aAAa,mBAClB7pC,KAAK6pC,aAAa,mBAEtB6iC,oBAAqB,SAAStvD,GAC1B,IAAIq8C,EAAez5D,KAAK62C,mBAAmB8X,kBAK3C,OAJAvxC,EAAQpd,KAAKs6B,SAASld,GAClBA,EAAMwK,QAAU6xC,EAAa7xC,SAC7BxK,EAAQpd,KAAKknG,mBAAmB9pF,EAAOq8C,EAAa7xC,SAEjDxK,GAEX4vD,aAAc,SAAS/lD,EAAM3F,GAOzB,OANImP,EAAAA,EAAAA,IAAUxJ,EAAK3U,cAAe6mC,EAAAA,EAAAA,IAASlyB,EAAK6c,UAAY,IAAM7c,EAAK6c,QAAQzZ,QAAQ,UACnFpD,EAAOjnB,KAAKmnG,kBAAkBlgF,EAAM3F,GACpCA,EAAQ00B,UAAY,GAEpB/uB,EAAOjnB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAE9BpE,GAEXkgF,kBAAmB,SAASlgF,GACxB,OAAOA,GAEXigF,mBAAoB,SAAS9pF,EAAO+2C,EAAa7yC,GAC7C,IAAI8lF,EAAiBpnG,KAAK62C,mBAAmB8X,kBACzCxgD,EAASi5F,EAAeA,EAAex/E,OAASusC,GACpD,IAAK7yC,EAAS,CACV,IAAI2qD,EAAgBjsE,KAAKuiC,OAAO,kBAChCjhB,EAAU,CACN+lF,yBAA0B,YAAcp7B,GAAiB,aAAeA,EACxEq7B,YAAa,GACbnzE,KAAM,GACNuH,OAAQ,IAGhB,IAAI4rE,EAAchmF,EAAQgmF,YAa1B,GAZIhmF,EAAQ5R,QACJ4R,EAAQ+lF,0BAA6B/lF,EAAQ5R,KAAKg2B,gBAClD4hE,EAAYj/E,KAAK,CACbyb,QAAS,QACTp0B,KAAM4R,EAAQ5R,KACd4C,WAAYgP,EAAQ6S,KAAKvM,OAAS,EAClCoY,aAAc1e,EAAQ5R,KAAK0N,MAC3BsO,IAAKpK,EAAQ6S,KAAKpK,MAAM,GACxB2R,OAAQpa,EAAQoa,OAAO3R,MAAM,MAIrC3M,EACA,GAAI,IAAM+2C,EACNmzC,EAAYj/E,KAAKoL,MAAM6zE,EAAalqF,QAEpC,IAAK,IAAIya,EAAI,EAAGA,EAAIza,EAAMwK,OAAQiQ,IAAK,CACnC,IAAI5Q,EAAO7J,EAAMya,GACb5Q,GAAQ,UAAWA,GACnB3F,EAAQ5R,KAAOuX,EACf3F,EAAQ6S,KAAK9L,KAAKpB,EAAKyE,KACvBpK,EAAQoa,OAAOrT,KAAKla,GAAUA,EAAO4/C,mBAAqB5/C,EAAO6C,sBAAwB7C,EAAO4/C,iBAAiB9mC,EAAKyE,KAAOzE,EAAKyE,KAClI1rB,KAAKknG,mBAAmBjgF,EAAK7J,MAAO+2C,EAAc,EAAG7yC,GACrDA,EAAQ5R,UAAO,EACf4R,EAAQ6S,KAAKtJ,MACbvJ,EAAQoa,OAAO7Q,OAEfy8E,EAAYj/E,KAAKpB,GAKjC,OAAOqgF,GAEXp+D,cAAe,WACX,OAAOlpC,KAAKs6B,WAAWxS,OAAO,CAAC,cAAe,YAAa,gBAAiB,YAAa,iBAE7F2+E,YAAa,SAASn0F,GAClB,IAAIjL,EAAarH,KAAK2jC,YAClBt8B,GAAcA,EAAWo/F,YAAYn0F,KACrCjL,EAAWib,UAAU,GACrBjb,EAAW+3D,WAGnBunC,UAAW,SAASr0F,GAChB,IAAIjL,EAAarH,KAAK2jC,YAClBt8B,GAAcA,EAAWs/F,UAAUr0F,KACnCjL,EAAWib,UAAU,GACrBjb,EAAW+3D,WAGnBqiC,gBAAiB,SAAS/1E,GACtB,IAAIkc,EAAO5nC,KACP64F,EAAWjxD,EAAKqvC,cAAcvrD,GAC9B+I,EAAO,CACP/I,IAAKA,EACLmtE,SAAUA,GAGd,OADAjxD,EAAK+C,cAAckuD,EAAW,kBAAoB,iBAAkBpkE,GAC/DA,EAAK7e,QAMF,IAAIyX,EAAAA,IAAUc,WALXyN,EAAAA,EAAAA,IAAKgM,EAAKk/D,qBAAqBp7E,IAAM2C,MAAM,WAC9CoG,EAAKokE,UAAYA,EACjBjxD,EAAK+C,cAAckuD,EAAW,iBAAmB,gBAAiBpkE,OAK9EqyE,qBAAsB,SAASp7E,GAC3B,IAAIkc,EAAO5nC,KACPqH,EAAarH,KAAK2jC,YAClBvW,EAAI,IAAIC,EAAAA,GAQZ,OAPKhmB,GAGDu0B,EAAAA,EAAAA,IAAKv0B,EAAWo6F,gBAAgB/1E,IAAM2C,MAAM,WACxCuZ,EAAKw2B,OAAO/vC,KAAKjB,EAAEe,SAASC,KAAKhB,EAAEa,WACnCG,KAAKhB,EAAEa,QAJXb,EAAEe,UAMCf,GAEX6pD,cAAe,SAASvrD,GACpB,IAAIrkB,EAAarH,KAAK2jC,YACtB,OAAOt8B,GAAcA,EAAW4vE,cAAcvrD,IAElD67E,UAAW,SAAS77E,GAChB,OAAK1rB,KAAKi3E,cAAcvrD,IAGhB,IAAI2B,EAAAA,IAAUc,UAFXnuB,KAAKyhG,gBAAgB/1E,IAIpC87E,YAAa,SAAS97E,GAClB,OAAI1rB,KAAKi3E,cAAcvrD,GACZ1rB,KAAKyhG,gBAAgB/1E,IAExB,IAAI2B,EAAAA,IAAUc,WAE1Byb,cAAe,SAASnV,GAChB,aAAeA,EAAKnlB,OACpBmlB,EAAKnlB,KAAO,cAEhBtP,KAAKs6B,SAAS7F,KAGlBgzE,GAA0B,SAASt5F,EAAQ6c,GAC3C,IAAIilB,EAAoBjwC,KAAK62C,mBAC7B,OAAQ7rB,EAAOo/B,SAAS9pD,OACpB,IAAK,QACD,IAAI68F,EAASltD,EAAkBtM,YAAY9f,SAAW,GACtDosB,EAAkByQ,aAAavyC,EAAOoD,UAAW,aAAc4rF,EAAOv1E,QACtE,MACJ,IAAK,UACDqoB,EAAkByQ,aAAavyC,EAAOoD,UAAW,cAAe,GAChE,MACJ,IAAK,aACDvR,KAAK8lC,UAAUu2B,kBAGhBqrC,GAA8B,CACrC/d,iBAAkB,WACd,IAAIvsE,EAAQpd,KAAKs6B,WACjB,OAAOt6B,KAAK2nG,oBAAoBvqF,IAEpCuqF,oBAAqB,SAASvqF,GAC1B,GAAIpd,KAAK4nG,uBAAwB,CAC7B,IAAIC,GAAa,EACbplF,EAAc,CACdjT,SAAU,KACN,IAAIs4F,GAAcjmE,EAAAA,EAAAA,GAAE,SAASC,SAAS8jE,IAGtC,OAFA5lG,KAAK+nG,yBAAyBD,GAC9B7jD,GAAuB,aAAcjkD,KAAM8nG,OAAa,EAAQ9nG,KAAKsnD,qBAAqBhjB,KAAKtkC,OACxF8nG,GAEXx4F,KAAM,aACN66E,eAAgB,KACZ0d,GAAc7nG,KAAKqsC,gBAAgBY,OACnC46D,GAAa,GAEjBzmF,SAAU,SACVD,aAAc,QACdhO,UAAW,GAEfiK,EAAMiL,KAAK5F,GAEf,OAAOrF,GAEXkqC,qBAAsB,SAAS7yB,GAC3B,IAAIgW,EAAQhW,EAAKgW,MACbR,GAAUpI,EAAAA,EAAAA,GAAE4I,EAAM5N,QAClB64C,EAAmBzrC,EAAQlD,QAAQ,IAAIjf,OAAOg+E,KAAkC17E,QAChFjc,EAASnO,KAAK62C,mBAAmB8X,kBAAkB+mB,GACnDl2C,EAAcrxB,GAAUA,EAAOic,MAC/B6f,EAAQtD,GAAGmf,IACX9lD,KAAKqqC,cAAc,gBAAgBsd,qBAAqBnoB,GAAa,GAErEx/B,KAAKy1E,wBAAwBj2C,GAEjCiL,EAAM4L,kBAEVuxD,qBAAsB,WAClB,IACInmE,EADAy0B,EAAoBl2D,KAAKuiC,OAAO,cAQpC,OANI2zB,IACAz0B,EAAYy0B,EAAkB3oD,QAC1B,SAAWk0B,IACXA,EAAY,YAAcm4D,GAAAA,EAAAA,UAAkBnN,aAG7ChrD,GAEXumE,uBAAwB,SAASF,EAAaruC,GAC1C,IAAI7xB,EAAO5nC,KACX8nG,EAAYj9D,SACZzZ,EAAAA,EAAAA,IAAKqoC,GAAe,SAASrvC,EAAO3E,GAChCmiB,EAAK0tC,sBAAsBwyB,EAAariF,MAE5C8+B,GAAavkD,OAEjBs1E,sBAAuB,SAASC,EAAc9vD,GAC1C,IAAIwiF,GAAkBpmE,EAAAA,EAAAA,GAAE,SAASC,SAASrc,EAAYrW,UAAU0yB,SAASgkE,IAAiCp2F,KAAK,aAAc+V,GAAasc,SAASwzC,GAAc9lE,KAAKgW,EAAYrU,SAElL,OADAwzC,GAAY5kD,KAAMioG,GACXA,GAEX7qD,qBAAsB,SAAS9W,GAC3B,IAAKtmC,KAAK0rC,gBAAkB8e,GAAAA,aAAsBlkB,EAAE+W,YAAa,CAAC,QAAS,iBAAkB,CACzF,IAAI6qD,EAAkBloG,KAAKmhC,UACvB2mE,EAAcI,GAAmBA,EAAgB3mE,KAAK,IAAMqkE,IAC5DkC,GAAeA,EAAYlgF,SAC3B5nB,KAAK+nG,yBAAyBD,GAC9B9nG,KAAKqsC,gBAAgBY,QAG7BjtC,KAAKs6B,YAETytE,yBAA0B,SAASD,GAC/B,IAAIruC,EAAez5D,KAAKqqC,cAAc,WAAWskB,kBAC7CuH,EAAoBl2D,KAAKuiC,OAAO,cACpCviC,KAAKgoG,uBAAuBF,EAAaruC,GACrCvD,EAAkB11C,sBAAwBi5C,EAAa7xC,UACvDia,EAAAA,EAAAA,GAAE,SAASC,SAAS+jE,IAAoCp2F,KAAKymD,EAAkB5hD,gBAAgBytB,SAAS+lE,GACxGA,EAAY/gE,QAAQ,IAAMg/D,IAAkC5gE,IAAI,WAAY,QAC5EnlC,KAAKorF,4BAGb7hC,cAAe,SAASp7C,GACpB,IAAI+nD,EAAoBl2D,KAAKuiC,OAAO,cACpC,OAAOviC,KAAK4nG,wBAA0B1xC,EAAkB11C,qBAAuBrS,GAAUA,EAAOmC,eAEpG8gC,kBAAmB,WACf,IAAI1Q,EAAW1gC,KAAKmhC,UACpB,OAAOT,GAAYA,EAASa,KAAK,IAAMukE,KAE3C50D,WAAY,WACR,OAAOlxC,KAAKqqC,cAAc,WAAWskB,mBAEzCtpB,gBAAiB,WACb,IAAI3E,EAAW1gC,KAAKmhC,UACpB,GAAIT,GAAYA,EAASa,KAAK,IAAMqkE,IAA4Bh+E,OAAQ,CACpE,IAAI5E,EAAS0d,EAAS1d,SACtB,MAAO,CACH9D,IAAK8D,EAAO9D,IACZ4lE,OAAQ9hE,EAAO9D,KAAM2jB,EAAAA,EAAAA,IAAUnC,IAGvC,OAAO,MAEXugB,QAAS,WACL,MAAO,SAEX+I,oBAAqB,SAAS1oC,GAC1B,IAEIlE,EAFAiC,EAAqBrf,KAAKuiC,OAAO,+BACjC4lE,GAAwBtmE,EAAAA,EAAAA,GAAEvgB,EAAQg+D,eAAev4C,QAAQ,IAAM++D,IAKnE,GAHIqC,EAAsBvgF,SACtBtG,EAAQnT,OAASg6F,EAAsBz4F,KAAK,eAE5C2P,GAAsBiC,EAAQnT,OAAQ,CACtC,IAAIA,EAASmT,EAAQnT,OACjBi6F,IAAoB33E,EAAAA,EAAAA,IAAUtiB,EAAOmC,gBAAiBnC,EAAOmC,cACjE,GAAI83F,EAAmB,CACnB,IAAIC,GAAkB53E,EAAAA,EAAAA,IAAUtiB,EAAOmE,aAAenE,EAAOmE,YAAc,EACvEiN,EAAgBvf,KAAKuiC,OAAO,kBAC5B2nB,EAAcu9C,GAAwBnjE,KAAKtkC,KAAMmO,GACrDiP,EAAQ,CAAC,CACL3N,KAAM8P,EAAcI,QACpBrf,MAAO,UACPiH,UAAW8gG,EACXn+C,YAAaA,GACd,CACCz6C,KAAM8P,EAAcK,WACpBtf,MAAO,aACP4pD,YAAaA,KAIzB,OAAO9sC,GAEXqkB,UAAW,WACP,OAAOzhC,KAAKs6B,YAAct6B,KAAK4nG,wBAEnCh+D,cAAe,SAASnV,GAChB,eAAiBA,EAAKnlB,MACtBtP,KAAK8rC,cACLrX,EAAKqV,SAAU,GAEf9pC,KAAKs6B,SAAS7F,KAItB6zE,GAA2B,CAC3Bt+C,oBAAqB,SAAS1oC,GAC1B,IACIlE,EADAiC,EAAqBrf,KAAKuiC,OAAO,+BAErC,GAAIljB,GAAsBiC,EAAQqkB,KAAO,UAAYrkB,EAAQqkB,IAAI7B,QAAS,CACtE,IAAImM,EAAoBjwC,KAAK62C,mBACzB1oC,EAAS8hC,EAAkByQ,aAAa,cAAgBp/B,EAAQqkB,IAAIrzB,YACxE,GAAInE,GAAUA,EAAOmC,cAAe,CAChC,IAAIiP,EAAgBvf,KAAKuiC,OAAO,kBAC5B2nB,EAAcu9C,GAAwBnjE,KAAKtkC,KAAMmO,GACrDiP,EAAQ,GACRA,EAAMiL,KAAK,CACP5Y,KAAM8P,EAAcI,QACpBrf,MAAO,UACP4pD,YAAaA,GACd,CACCz6C,KAAM8P,EAAcK,WACpBtf,MAAO,aACP4pD,YAAaA,KAIzB,OAAO9sC,GAEXw2B,UAAW,SAAStN,GAChB,IAAIhnB,EAAatf,KAAKuiC,OAAO,uBACzB0pC,EAAgBjsE,KAAKuiC,OAAO,kBAC5BgmE,EAAyB,aAAet8B,GAAiB,aAAe3sD,IAAcuiB,EAAAA,EAAAA,GAAEyE,EAAEmE,MAAM5N,QAAQkK,QAAQ,IAAMi/D,IAA0Bp+E,OAChJ4gF,GAAwB3mE,EAAAA,EAAAA,GAAEyE,EAAEmE,MAAM5N,QAAQkK,QAAQ,IAAM5I,IAAuBvW,QAC/E2gF,GAA0BC,IAC1BxoG,KAAKyoG,qBAAqBniE,GAE9BtmC,KAAKs6B,SAASgM,IAElBmiE,qBAAsB,SAASniE,GAC3B,IAAIg1B,EAAiBt7D,KAAKqqC,cAAc,QACpC1E,EAAM21B,EAAel+C,QAAQkpB,EAAEiN,UAC/Bp0B,EAAkBnf,KAAK62C,mBAAmB6J,aAAa,cAAgB/a,EAAIrzB,WAAY,oBACvF,SAAWqzB,EAAI7B,SAAW,UAAY6B,EAAI7B,UAAW,IAAU3kB,KAC/Dm8C,EAAemmC,gBAAgB97D,EAAIja,KAAK,GACxC4a,EAAEmE,MAAM4L,iBACR/P,EAAEwD,SAAU,KAIpB4+D,GAA4B,CAC5B1+C,oBAAqB,SAAS1oC,GAC1B,IAAIjC,EAAqBrf,KAAKuiC,OAAO,+BACjCnlB,EAAQpd,KAAKs6B,SAAShZ,GAC1B,GAAIjC,GAAsBiC,EAAQqkB,MAAQ,WAAarkB,EAAQqkB,IAAI7B,SAAW,mBAAqBxiB,EAAQqkB,IAAI7B,SAAU,CACrH,IAAI31B,EAASmT,EAAQnT,OACrB,IAAKA,EAAOk5B,YAAa5W,EAAAA,EAAAA,IAAUtiB,EAAOmC,gBAAkBnC,EAAOmC,eAAgB,CAC/E,IAAIiP,EAAgBvf,KAAKuiC,OAAO,kBAC5B8lE,GAAkB53E,EAAAA,EAAAA,IAAUtiB,EAAOmE,aAAenE,EAAOmE,YAAc,EACvE43C,EAAcu9C,GAAwBnjE,KAAKtkC,KAAMmO,GACrDiP,EAAQA,GAAS,GACjBA,EAAMiL,KAAK,CACP5Y,KAAM8P,EAAcC,kBACpBlf,MAAO,QACPqoG,YAAY,EACZphG,SAAU8gG,EACVn+C,YAAaA,IAEb/7C,EAAO+E,iBACPkK,EAAMiL,KAAK,CACP5Y,KAAM8P,EAAcI,QACpBrf,MAAO,UACPiH,UAAW8gG,EACXn+C,YAAaA,IAGrB9sC,EAAMiL,KAAK,CACP5Y,KAAM8P,EAAcK,WACpBtf,MAAO,aACP4pD,YAAaA,KAIzB,OAAO9sC,IAGfotC,GAAAA,eAAwB,WAAY,CAChCtE,eAAgB,WACZ,MAAO,CACH39C,SAAU,CACN6W,eAAe,EACfD,iBAAiB,EACjBE,oBAAoB,EACpBC,WAAY,cACZ3K,MAAO,CACH+K,sBAAuB+pB,EAAAA,EAAAA,OAA2B,oCAClDhqB,sBAAuBgqB,EAAAA,EAAAA,OAA2B,oCAClDjqB,kBAAmBiqB,EAAAA,EAAAA,OAA2B,8BAC9C9pB,QAAS8pB,EAAAA,EAAAA,OAA2B,gCACpC7pB,WAAY6pB,EAAAA,EAAAA,OAA2B,+BAG/CjhC,WAAY,CACR+E,SAAS,EACT+G,eAAgBm1B,EAAAA,EAAAA,OAA2B,kCAC3CjpB,qBAAqB,KAIjC4tB,UAAW,CACPJ,YAAa,CACTt+B,KAAMu3F,GACNngG,QAAS,CACLmtD,wBAAyB,WACrB,IAAI3yC,EAAUthB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAExC,OADA/J,EAAQjQ,aAAem5C,GAAAA,wBAChBlpC,IAGf9Z,QAAS,CACLohG,iBAAkB,SAAS3hF,GACvB,OAAOwJ,EAAAA,EAAAA,IAAUxJ,EAAK3U,cAAe6mC,EAAAA,EAAAA,IAASlyB,EAAK6c,UAAY,IAAM7c,EAAK6c,QAAQzZ,QAAQ,YAItG6jB,MAAO,CACH0nC,YAAa8xB,GACb7hE,SAAUyiE,GACVniD,kBAAmBuiD,OC7jB/B,IAAIG,GAA2B,wBAC3BC,GAA0B,uBAC1BrjD,GAA4B,yBAC5BwwB,GAAkB,eACX8yB,GAAqB,CAC5B7iD,eAAgB,WACZ,MAAO,CACHj9C,aAAc,CACVsL,SAAS,EACT6K,eAAe,EACf5P,SAAU,QAItB4+B,UAAW,CACPJ,YAAa,CACTlnC,QAAS,CACLmwD,sBAAuB,WACnB,IAAIrE,EAAgB5yD,KAAKs6B,WAOzB,OANIt6B,KAAKuiC,OAAO,yBACZqwB,EAAcvqC,KAAK,CACfvZ,KAAM,eACNuC,aAAc69B,EAAAA,0BAGf0jB,IAGfljD,KAAM,WACF,IAAIs5F,EAAmB,SAASphE,GAC5BA,EAAKqhE,eAAiB,GACtBrhE,EAAKshE,aAAethE,EAAKrF,OAAO,+BAEpC,MAAO,CACH0G,KAAM,WACF+/D,EAAiBhpG,MACjBA,KAAKs6B,YAETqsE,UAAW,SAASr0F,GAChB,IAAIs1B,EAAO5nC,KACPsS,EAAa,GACbs1B,EAAKshE,cAAe,EACpBthE,EAAKqhE,eAAiB,GACtBrhE,EAAKqjC,eAELrjC,EAAKtN,SAAS7G,MAAMmU,EAAMvc,YAGlCo7E,YAAa,SAASn0F,GAClB,IAAIs1B,EAAO5nC,KACPsS,EAAa,GACbs1B,EAAKshE,cAAe,EACpBthE,EAAKqhE,eAAiB,GACtBrhE,EAAKqjC,eAELrjC,EAAKtN,SAAS7G,MAAMmU,EAAMvc,YAGlC4rD,cAAe,SAASvrD,GACpB,IAAIkc,EAAO5nC,KACPmpG,EAAcj6D,EAAAA,cAA4BxjB,EAAKkc,EAAKqhE,gBACxD,OAAIliG,MAAM2iB,QAAQgC,GACPkc,EAAKtN,SAAS7G,MAAMmU,EAAMvc,cAEvBuc,EAAKshE,cAAgBC,GAAe,GAAKvhE,EAAKqhE,eAAeE,GAAa57F,WAG5F67F,wBAAyB,SAAS19E,GAC9B,IAAI6nB,EAAWvzC,KAAKgzE,iBAAiBtnD,GACrC,MAAO,CAAC6nB,EAAUA,EAAW,IAEjCuzD,qBAAsB,SAASp7E,GAC3B,IACI1C,EADA4e,EAAO5nC,KAEX,GAAI+G,MAAM2iB,QAAQgC,GACd1C,EAAS4e,EAAKtN,SAAS7G,MAAMmU,EAAMvc,eAChC,CACH,IAAI89E,EAAcj6D,EAAAA,cAA4BxjB,EAAKkc,EAAKqhE,gBACxD,GAAIE,GAAe,EAAG,CAClB,IAAI57F,EAAUq6B,EAAKqhE,eAAeE,GAAa57F,QAC/Cq6B,EAAKqhE,eAAeE,GAAa57F,SAAWA,OAE5Cq6B,EAAKqhE,eAAe5gF,KAAK,CACrBqD,IAAKA,EACLne,SAAS,IAGjBq6B,EAAKqjC,YAAY,CACbxwB,WAAY,SACZkzB,WAAY/lC,EAAKwhE,wBAAwB19E,KAE7C1C,GAAU,IAAIqE,EAAAA,IAAUc,UAE5B,OAAOnF,GAEXkkD,iBAAkB,SAASx9D,EAAM4R,GAC7B,IAAIsmB,EAAO5nC,KACPmtE,EAAWvlC,EAAKtN,SAAS7G,MAAMmU,EAAMvc,WAczC,OAbA8hD,EAASntC,WAAa4H,EAAKqvC,cAAc9J,EAASzhD,UAC9C,IAAWpK,EAAQ+nF,oBACnB/nF,EAAQ+nF,mBAAqB,GAC7Bj4E,EAAAA,EAAAA,IAAK9P,EAAQs1B,gBAAiB,SAASxsB,EAAOjc,GAC1C,GAAI,WAAaA,EAAOk5B,WAAY5W,EAAAA,EAAAA,IAAUtiB,EAAOmE,YAEjD,OADAgP,EAAQ+nF,kBAAoBj/E,GACrB,MAIf9I,EAAQ+nF,mBAAqB,IAC7Bl8B,EAASzxC,OAAOpa,EAAQ+nF,mBAAqBl8B,EAASntC,YAEnDmtC,GAEXP,cAAe,SAASxvD,EAAOvG,GAC3B,IAAI+wB,EAAO5nC,KACPy6C,EAAa5jC,EAAO4jC,WACpBzxB,EAAS,GAEb,OADA5L,EAAQwqB,EAAKtN,SAAS7G,MAAMmU,EAAMvc,WAC9B,eAAiBovB,EACVr9B,GAEP,YAAcq9B,IACd7S,EAAKqhE,gBAAiB71E,EAAAA,EAAAA,IAAKwU,EAAKqhE,gBAAiB,SAAShiF,GACtD,OAAOA,EAAK1Z,aAGpB6jB,EAAAA,EAAAA,IAAKhU,GAAQ,SAASgN,EAAOnD,GACzB+B,EAAOX,KAAKpB,GACZ,IAAIkiF,EAAcj6D,EAAAA,cAA4BjoB,EAAKyE,IAAKkc,EAAKqhE,gBACzD,SAAWhiF,EAAK6c,UAAY7c,EAAK+Y,YAAcmpE,GAAe,KAAOliF,EAAK2e,UAC1E5c,EAAOX,KAAK,CACR9a,QAAS0Z,EAAK+Y,WACd8D,QAAS,SACTpY,IAAKzE,EAAKyE,IACVhc,KAAMuX,EAAKvX,KACXgsB,OAAQ,QAIb1S,IAEX4gB,cAAe,SAASnV,GACpB,IAAI60E,EACAC,EACJ,GAAI,iBAAmB90E,EAAKnlB,KAAM,CAE9B,OADAmlB,EAAKnlB,KAAO,aACJmlB,EAAKqgC,UACT,IAAK,eACD,IAAIx0D,EAAQm0B,EAAKn0B,OAAS,GACtBu0D,EAAgBpgC,EAAKogC,eAAiB,GAC1Cy0C,EAAmBhpG,EAAMiU,UAAYsgD,EAActgD,QACnDg1F,EAAyBjpG,EAAM8e,gBAAkBy1C,EAAcz1C,cAC/D,MACJ,IAAK,wBACD4pF,EAAiBhpG,MACjB,MACJ,IAAK,uBACDspG,GAAmB,EACnB,MACJ,IAAK,6BACDC,GAAyB,GAE7BD,GAAoBC,IACpBP,EAAiBhpG,MAGzBA,KAAKs6B,SAAS7F,KA1IpB,GA8IN20D,SAAU,CACNrI,uBAAwB,WACpB/gF,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1BrrB,KAAKwpG,uBAAuBxpG,KAAK8lC,UAAUpF,aAE/C8oE,uBAAwB,SAAS9oE,GAC7B,IAAI+oE,EAAmB/oE,EAASqG,QAAQ,IAAM+hE,IAC1CW,EAAiB7hF,SACjBgU,EAAAA,EAAAA,IAAK57B,KAAK0pG,sBAAsBD,EAAkB/oE,IAAWrS,MAAK,KAC9DruB,KAAKwpG,uBAAuBC,EAAiB/hE,cAIzDgiE,sBAAuB,SAASD,EAAkBE,GAC9C,IAAIC,GAAmB/nE,EAAAA,EAAAA,GAAE4nE,GAAkB/5F,KAAK,WAC5Cm6F,GAAiBhoE,EAAAA,EAAAA,GAAE4nE,GAAkB1iE,QAAQ,IAAM/mC,KAAKynC,2BAA2BC,SAASh4B,KAAK,cACrG,GAAIk6F,GAAoBC,EAAgB,CACpC,GAAIA,EAAe9jE,QAAQ,YAAY+jE,iBACnC,OAAO9pG,KAAK+pG,8BAA8BF,EAAgBD,EAAiBr2D,SAAUo2D,GAErF,IAAI,IAASE,EAAetnE,OAAO,uBAC/B,OAAOsnE,EAAe3iB,mBAE1B,IAAI1Q,EAAaqzB,EAAelyB,gBAChC,OAAO,OAASnB,QAAc,IAAWA,OAAa,EAASA,EAAWv5B,WAItF8sD,8BAA+B,SAASF,EAAgBG,EAAgBL,GACpE,IAAIrqD,GAAQzd,EAAAA,EAAAA,GAAEgoE,EAAerpD,cAAcwpD,IACvCC,GAAUpoE,EAAAA,EAAAA,GAAEgoE,EAAe9jE,QAAQ,YAAY4X,oBAC/CusD,EAAe,KAAO,OAAS5qD,QAAS,IAAWA,OAAQ,EAASA,EAAM13B,UAAWib,EAAAA,EAAAA,IAAUyc,EAAMpa,GAAG,OAAQrC,EAAAA,EAAAA,IAAUyc,EAAMpa,GAAG,IACnIilE,EAAiB,KAAO,OAASF,QAAW,IAAWA,OAAU,EAASA,EAAQriF,UAAWib,EAAAA,EAAAA,IAAUonE,EAAQ/kE,GAAG,OAAQrC,EAAAA,EAAAA,IAAUonE,EAAQ/kE,GAAG,IACnJ,GAAIglE,GAAgBC,EAAgB,CAChC,IAAIC,GAAqB5oD,EAAAA,EAAAA,IAASmoD,GAClC,OAAOE,EAAe3iB,mBAAmB74D,MAAK,KAC1C,IAAIg8E,EAAqCrqG,KAAKuiC,OAAO,qBAAsB,IAASsnE,EAAetnE,OAAO,uBACtG+nE,EAA2BD,GAAsCD,KAAuB5oD,EAAAA,EAAAA,IAASmoD,GACjGU,GAAsCC,GACtCtqG,KAAKknF,wBAKrBjD,mBAAoB,SAASN,GAEzB,GADA3jF,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACtBrrB,KAAKuiC,OAAO,yBAA0B,CACtC,IAAIwhD,EAAa/jF,KAAKugF,UAAU3iC,kBAC5BmmC,GACAA,EAAWxiD,KAAK,0BAA0B4D,IAAI,WAAYw+C,EAAY,EAAI,QAM9Fz1C,MAAO,CACHrI,SAAU,CACN0W,iBAAkB,SAASj7B,GACvB,IAII9R,EAJAo4B,EAAO5nC,KACPmO,EAASmT,EAAQnT,OACjB8mE,EAAoBrtC,EAAKyC,cAAc,WACvCkgE,EAAYt1B,GAAqBA,EAAkBs1B,UAAUjpF,EAAQiyB,UAUzE,OAFI/jC,EANA,WAAarB,EAAOk5B,SAAYkjE,EAMrB3iE,EAAKtN,SAAS7G,MAAMmU,EAAMvc,WAL1Buc,EAAKrF,OAAO,0BAA4B,CAC/CiD,gCAAgC,EAChCC,OAAQmC,EAAKqf,oBAAoB94C,IAKlCqB,GAEXg7F,aAAc,SAAS7kE,GACnB,OAAOA,GAAOA,EAAI7B,SAAW,IAAM6B,EAAI7B,QAAQzZ,QAAQ,WAE3DurB,WAAY,SAASjQ,GACjB,IAAI2Q,EAAOt2C,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAQrC,OAPIsa,GAAO3lC,KAAKwqG,aAAa7kE,KACzB3lC,KAAKuiC,OAAO,iBAAmB+T,EAAKxU,SAASm0C,IAC7C3/B,EAAKxU,SAASgnE,KACVr4E,EAAAA,EAAAA,IAAUkV,EAAIp4B,UACd+oC,EAAK0iC,OAAOrzC,EAAIp4B,UAGjB+oC,GAEX2E,aAAc,SAAS3E,EAAMh1B,GACzB,IACImpF,EADA9kE,EAAMrkB,EAAQqkB,IAEdiR,EAAiB52C,KAAK62C,mBAAmBC,oBACzCnR,EAAI7B,SAAW9jC,KAAKwqG,aAAa7kE,GAC7B3lC,KAAKo7C,gBAAgB,EAAG95B,EAAQu5B,iBAChC4vD,EAAczqG,KAAKq7C,YAAY/E,EAAM,CACjCh2C,MAAO,KACPqlC,IAAKA,EACL4N,SAAU5N,EAAI4N,SACdplC,OAAQ,CACJk5B,QAAS,UAEb7H,YAAa,IAEjBirE,EAAY3oE,SAAS2jB,IAA2B3jB,SAAS+mE,IAA0Bz+D,KAAK,UAAWwM,EAAehvB,SAGtH5nB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,gBClSlDm/B,GAAAA,eAAwB,eAAgBu+C,I,0DCsBpC2B,UAAWA,K,QACXl1C,GAAAA,GAMAm1C,GAAsB,gBACtBC,GAAsB,yBACtBC,GAAqB,WACrB,IAAIC,EAAkB,SAAS/zE,EAAQzV,GACnC,OAAOsK,EAAAA,EAAAA,GAAOmL,EAAQ,CAClBpZ,SAAU2D,EAAQ3D,SAClBuH,YAAa5D,EAAQ4D,YACrB6lF,UAAW,CACPr7C,GAAIpuC,EAAQouC,IAEhBtiD,SAAUkU,EAAQlU,UACnBkU,EAAQ5P,gBAEXs5F,EAAgB,WAChB,OAAO7iE,EAAAA,EAAAA,SAAmByxD,GAAAA,EAAAA,OAAeqR,KAEzCC,EAAsB,SAAS5pF,GAC/B,IAAI5R,EAAO,GACPy7F,EAAaH,IACbI,EAAa9pF,EAAQ8pF,YAAc17F,EACvC,OAAOo7F,EAAgB,CACnB5lF,YAAa5D,EAAQ4D,YACrB1X,MAAO8T,EAAQ9T,MACflN,MAAOghB,EAAQhhB,MACf2Y,eAAgB,SAASqtB,GACrB,IAAI+kE,EAAoB,cAAgB/pF,EAAQ41E,YAAc,gBAAkB51E,EAAQ41E,WACpFoU,EAAsBhlE,EAAEmE,QAAU,UAAYnE,EAAEmE,MAAM37B,MAAQ,UAAYw3B,EAAEmE,MAAM37B,MAClFy8F,EAAc,SAASjlE,EAAGurB,GAC1BvwC,GAAWA,EAAQ61E,SAAS7wD,EAAEhmC,MAAOuxD,IAEzC5e,aAAavjC,EAAK87F,oBACdF,GAAuBD,EACvBD,EAAWI,mBAAqB97F,EAAK87F,mBAAqBx4D,YAAY,WAClEu4D,EAAYjlE,EAAG52B,EAAK87F,qBAAuBJ,EAAWI,uBACtD/6E,EAAAA,EAAAA,IAAUnP,EAAQmqF,oBAAsBnqF,EAAQmqF,mBAAqB,GAEzEF,EAAYjlE,IAGpB57B,UAAW,SAAS47B,GACZ6kE,GAAc,WAAYroD,EAAAA,GAAAA,IAAiBxc,EAAEmE,QAC7C7D,EAAAA,EAAAA,SAAqB/E,EAAAA,EAAAA,GAAEyE,EAAER,UAAU4lE,UAAW,WAGtDC,iBAAkB,UAAY,cAAgBrqF,EAAQ41E,WAAa,eAAiB,KACrF51E,IAEHsqF,EAAuB,SAAStqF,GAC5B,cAAgBA,EAAQ41E,YAAc,kBAAoB51E,EAAQ41E,WAClE2U,GAAiBjgF,EAAAA,EAAAA,GAAOtK,EAAS,CAC7B5O,OAAQ,CACJ0C,YAAa,SAAS1F,GAClB,OAAI,IAASA,EACF4R,EAAQhO,UAAY,QACpB,IAAU5D,EACV4R,EAAQ1P,WAAa,aADzB,GAIXvK,WAAY,EAAC,GAAM,OAIzB,SAASia,GACPA,EAAQwqF,WAAa,aACrBxqF,EAAQ5P,cAAgBo5F,EAAgB,CACpCrjG,YAAa,CACTioD,GAAIpuC,EAAQouC,IAEhBpvD,OAAOmwB,EAAAA,EAAAA,IAAUnP,EAAQhhB,OAASghB,EAAQhhB,WAAQ,EAClDuI,mBAAoByY,EAAQ3D,SAC5BrV,mBAAoBgZ,EAAQ3D,SAC5B3X,oBAAoB,EACpBiT,eAAgB,SAASqtB,GACrBhlB,EAAQ61E,UAAY71E,EAAQ61E,SAAS7wD,EAAEhmC,MAAOgmC,KAEnDhlB,GAbL,CAcAA,IAIV,SAASuqF,EAAiBvqF,GACtB,IACIyqF,EACA1kG,EACA2kG,EAHAt5F,EAAS4O,EAAQ5O,OAIjBikC,EAAc,cAAgBr1B,EAAQ41E,WAC1C,GAAIxkF,EAAQ,CACRq5F,GAAgB/5C,EAAAA,EAAAA,IAAct/C,EAAO0C,aACrC/N,EAAaqL,EAAOrL,YAChBywB,EAAAA,EAAAA,IAAWzwB,KAAgBqjG,GAAUrjG,KACrCA,EAAaA,EAAWia,EAAQqkB,KAAO,IACrC,SAASrkB,GACP,GAAIA,EAAQqkB,KAAOrkB,EAAQqkB,IAAIgX,OAAS,YAAcr7B,EAAQ41E,WAAY,CACtE,IAEI+U,EAFAv6F,EAAgB4P,EAAQ5P,eAAiB,GAC7C4P,EAAQ5P,cAAgBA,EAExB,IAMIrK,EANAmD,EAAgBkH,EAAclH,cAClCkH,EAAclH,cAAgB,SAAS87B,GACnC97B,GAAiBA,EAAcipB,MAAMzzB,KAAMqrB,WAC3C4gF,EAAY3lE,EAAER,UACdmmE,EAAUviE,GAAG,YAAawiE,IAG9B,IAAIA,EAAY5qF,EAAQqkB,IAAIgX,OAAM,KAC9Bt1C,EAAaia,EAAQ5O,OAAOrL,WAAWia,EAAQqkB,KACxCt+B,GAAcA,EAAWuc,UACjC,KACCqoF,EAAU1pE,OAAO,aAAcl7B,MAChCs+B,IACCrkB,EAAQqkB,IAAMA,MAlBxB,CAqBArkB,MAEF6O,EAAAA,EAAAA,IAAS9oB,IAAeN,MAAM2iB,QAAQriB,MACtCA,GAAa62D,EAAAA,GAAAA,IAA2B72D,GACpCsvC,IACAq1D,EAAc3kG,EAAW2kG,YACzB3kG,EAAW2kG,YAAc,SAAS5uF,GAK9B,OAJI,IAAMpd,KAAKsiB,cACXlF,EAAQA,EAAM2M,MAAM,GACpB3M,EAAM4vC,QAAQ,OAEdg/C,EACOA,EAAY9/E,KAAKlsB,KAAMod,GAE3BA,KAInB,IAAIjI,EAAgBlP,QAAQyM,EAAOyC,gBAAkBwhC,GACrDr1B,EAAQwqF,WAAa,cACrBxqF,EAAQ5P,cAAgBo5F,EAAgB,CACpCzP,eAAe,EACf/6F,MAAOghB,EAAQhhB,MACf+U,UAAWiM,EAAQ5O,OAAO2C,UAC1B82F,WAAY7qF,EAAQ5O,OAAOy5F,YAAc7qF,EAAQ5O,OAAO0C,YACxDD,cAAeA,EACfi3F,gBAAiBj3F,EACjBC,YAAa,SAAS1F,GAClB,OAAI,OAASA,EACF4R,EAAQ1E,YAEZmvF,EAAcr8F,IAEzBrI,WAAYA,EACZ4R,eAAgB,SAASqtB,GACrB,IAAItb,EAAS,CAACsb,EAAEhmC,QACfq2C,GAAe3rB,EAAO3C,KAAKie,EAAER,UAAUvD,OAAO,SAC/CjhB,EAAQ61E,SAAS1jE,MAAMzzB,KAAMgrB,KAElC1J,IAGX,MAAO,CACH21E,aAAc,SAASv3D,EAAYpe,GAM/B,GALAA,EAAQ1L,QAAS,EACjB0L,EAAQ+qF,eAAgB34D,EAAAA,GAAAA,GAAiBhU,IACpCjP,EAAAA,EAAAA,IAAUnP,EAAQlU,YACnBkU,EAAQlU,SAAWpN,KAAKuiC,OAAO,aAE/BjhB,EAAQ5O,OACRm5F,EAAiBvqF,QAEjB,OAAQA,EAAQ9P,UACZ,IAAK,OACL,IAAK,YACC,SAAS8P,GACPA,EAAQwqF,WAAa,YACrBxqF,EAAQ5P,cAAgBo5F,EAAgB,CACpCxqG,MAAOghB,EAAQhhB,MACf2Y,eAAgB,SAASwb,GACrBnT,EAAQ61E,SAAS1iE,EAAKn0B,QAE1BoK,UAAW,SAAS47B,GACZ0kE,KAAmB,WAAYloD,EAAAA,GAAAA,IAAiBxc,EAAEmE,SAClDnE,EAAER,UAAUwmE,OACZhmE,EAAER,UAAUsH,UAGpBttB,cAAewB,EAAQpP,OACvBpD,KAAMwS,EAAQ9P,SACdlK,wBAAyB,KACzBkG,MAAO,kBAAoB8T,EAAQ41E,gBAAa,EAAS,QAC1D51E,GAjBL,CAkBAA,GACF,MACJ,IAAK,UACDsqF,EAAqBtqF,GACrB,MACJ,IAAK,UACC,SAASA,GACP,IAAIyV,EAASm0E,EAAoB5pF,GACjCyV,EAAOz2B,OAAQmwB,EAAAA,EAAAA,IAAUnP,EAAQhhB,OAASghB,EAAQhhB,MAAQ,KAC1DghB,EAAQwqF,WAAa,cACrBxqF,EAAQ5P,cAAgBqlB,EAJ1B,CAKAzV,GACF,MACJ,SACM,SAASA,GACP,IAOIhhB,EAPAy2B,EAASm0E,EAAoB5pF,GAC7BirF,EAAc,gBAAkBjrF,EAAQ41E,WACxC51E,EAAQ5C,YAAc,cAAgB4C,EAAQ5C,WAC9CqY,EAAOz2B,MAAQghB,EAAQhhB,MAEvBy2B,EAAOz2B,OAASA,EAAQghB,EAAQhhB,OAAOmwB,EAAAA,EAAAA,IAAUnwB,GAASA,EAAM8/B,WAAa,IAGjFrJ,EAAO40E,kBAAoBY,EAAc,sBAAwB,GACjEx1E,EAAOviB,KAAOuiB,EAAOviB,OAAS+3F,EAAc,SAAW,QACvDjrF,EAAQwqF,WAAa,YACrBxqF,EAAQ5P,cAAgBqlB,EAZ1B,CAaAzV,GAGV,YAAcA,EAAQ41E,YAAc51E,EAAQ5C,aAC5C4C,EAAQwqF,WAAaxqF,EAAQ5C,YAEjC1e,KAAK2qC,cAAc,oBAAqBrpB,GACpCA,EAAQ1L,SAGR,YAAc0L,EAAQ41E,YAAe51E,EAAQkrF,WAAa/7E,EAAAA,EAAAA,IAAUnP,EAAQ5P,cAAc+6F,sBAC1FnrF,EAAQ5P,cAAc+6F,oBAAqB,GAC5C,SAAS7kE,EAAMtmB,GACd,IAAIorF,GAAiB7qE,EAAAA,EAAAA,GAAEvgB,EAAQ+qF,eAC/B,GAAI/qF,EAAQwqF,YAAcxqF,EAAQ5P,eAAiBg7F,EAAeprF,EAAQwqF,YAAa,CAQnF,GAPI,eAAiBxqF,EAAQwqF,YAAc,aAAexqF,EAAQwqF,YACzDxqF,EAAQkrF,WACTE,EAAe5qE,SAAS8F,EAAKvG,gBAAgBspE,KAC7C+B,EAAehlE,SAAS5F,SAAS8oE,KAGzChjE,EAAKpF,iBAAiBkqE,EAAgBprF,EAAQwqF,WAAYxqF,EAAQ5P,eAC9D,cAAgB4P,EAAQwqF,WAAY,CACpC,IAAIa,EAAUD,EAAeE,UAAU,YACnCC,EAAyBF,EAAQG,iBAAiBC,MACtDJ,EAAQK,mBAAmB,SAAS1mE,IAC5BqmE,EAAQpqE,OAAO,WACfsqE,EAAuBvmE,IAEpB,KAGX,eAAiBhlB,EAAQwqF,YACzBY,EAAeO,WAAW,YAAYD,mBAAmB,SAAU,SAASviE,GACpE,WAAYqY,EAAAA,GAAAA,IAAiBrY,IAAWA,EAAM2L,SAAY3L,EAAMsc,UAChEtc,EAAMo1C,sBAvBvB,CA4BD7/E,KAAMshB,GACRthB,KAAK2qC,cAAc,mBAAoBrpB,MA3P1B,GA+PzB,MCtQIspF,GAAsB,yBACtBnlD,GAA4B,yBAC5BynD,GAAsB,gBACtBv7D,GAAgB,UAChBw7D,GAAwB,aACxBp7D,GAAY,SACZq7D,GAAmB,0BACnBC,IAAsBt4B,EAAAA,GAAAA,IAAa,CAAC1hC,GAAAA,EAAAA,KAAoB,UAAWF,GAAAA,GAAgBtqB,KAAK,KAAMukF,IAC9FE,GAAY,YACZC,GAAgB//D,GAAAA,eAAAA,QAA+B,CAC/CggE,mBAAoB,SAASC,GACzB,IAAIC,EAAc1tG,KAAKuiC,OAAO,qBAAuB,qBAAuB,uCACxEorE,EAAyB,uBAAuB7lF,OAAO4lF,EAAa,yIACxE,OAAOD,EAAiBlsE,KAAKosE,IAEjCC,sBAAuB,WACnB,MAAO,gBAEXC,iBAAkB,WACd,IAEIC,EACAC,EAHAC,EAAShuG,KAAKiuG,iBACdR,EAAmBztG,KAAK8lC,WAAa9lC,KAAK8lC,UAAUpF,WAGpD+sE,IACAO,EAAShuG,KAAKwtG,mBAAmBC,GAC7BO,EAAOpmF,SACFomF,EAAOp+D,SAAS6V,KAA+BuoD,EAAOp+D,SAASmC,MAChE+7D,EAAaE,EAAOjnE,QAAQ/mC,KAAK4tG,wBAA0B,MAAQnoD,IACnEsoD,EAAcD,EAAWnuE,IAAI,KAAOquE,EAAOruE,IAAI,IAAMmuE,EAAWl+D,SAASg7D,IACzEoD,EAASF,GAETE,EAAOpmF,SAAWomF,EAAOp+D,SAAS6V,MAClCzlD,KAAKotC,MAAM4gE,EAAQD,GAK/B/tG,KAAKkuG,aAETC,aAAc,SAAS7nE,GACnB,IAAIsB,EAAO5nC,KACPouG,EAAiB9nE,GAAKA,EAAEmE,QAAS5I,EAAAA,EAAAA,GAAEyE,EAAEmE,MAAM5N,QAAQ+S,SAAShI,EAAKvG,gBAAgB6rE,KACrFtlE,EAAKymE,gBAAkBzmE,EAAKymE,iBAAmBD,EAC/Cn7D,aAAarL,EAAK0mE,uBAClB1mE,EAAK0mE,sBAAwBt7D,YAAY,kBAC9BpL,EAAK0mE,sBACP1mE,EAAKymE,iBACNzmE,EAAKimE,mBAETjmE,EAAKymE,iBAAkB,MAG/BE,wBAAyB,SAAS7tE,EAAUhmB,GACxCgmB,EAASlyB,OACT,IAAI4S,EAAWotF,GAAAA,EAAAA,UAAwB9tE,GAAU9U,EAAAA,EAAAA,GAAO,CACpD/I,UAAW,OACZnI,IACC0G,EAASqtF,EAAEC,SAAW,IACtBC,EAAAA,EAAAA,IAAcjuE,GAAU6gB,EAAAA,EAAAA,IAAc7gB,GAAYtf,EAASqtF,EAAEC,UAE7DttF,EAASkR,EAAEo8E,SAAW,IACtBE,EAAAA,EAAAA,IAAeluE,GAAU+gB,EAAAA,EAAAA,IAAe/gB,GAAYtf,EAASkR,EAAEo8E,UAEnEhuE,EAASjyB,QAEbk6B,cAAe,WACX,MAAO,CAAC,YAEZyE,MAAO,SAAS1M,EAAUmuE,GACtB,IAAIjnE,EAAO5nC,KACX,QAAI,IAAW0gC,EACX,OAAOkH,EAAKqmE,iBACLvtE,IACFA,EAASiG,GAAGiB,EAAKqmE,mBAClBrmE,EAAKqmE,kBAAoBrmE,EAAKqmE,iBAAiBjsE,YAAYmrE,IAE/DvlE,EAAKqmE,iBAAmBvtE,EACxBuS,aAAarL,EAAKknE,iBAClBlnE,EAAKknE,gBAAkB97D,YAAY,kBACxBpL,EAAKknE,gBACZlnE,EAAKmnE,mBAAmBruE,EAAUmuE,GAClCnuE,EAASoB,SAASqrE,IAClBvlE,EAAKonE,QAAQ/hE,KAAKvM,QAI9BuuE,QAAS,WACL,IAAIjB,EAAShuG,KAAKotC,QAClBptC,KAAKotC,MAAM4gE,IAEfe,mBAAoB,SAASruE,EAAUmuE,GACnC,GAAK3/D,EAAAA,uBAAqClvC,KAAM0gC,GAMhD,GAHK1gC,KAAKkvG,iBACNlvG,KAAKkvG,gBAAiBrtE,EAAAA,EAAAA,GAAE,SAASC,SAAS9hC,KAAKqhC,gBAAgB6rE,MAE/D2B,EACA7uG,KAAKkvG,eAAeptE,SAASwrE,SAC1B,GAAI5sE,EAAS9Y,OAAQ,CACxB,IAAIunF,EAAQhnE,EAAAA,EAAAA,QAAkB,eAAiB,WAC3C+e,EAAWxmB,EAASqG,QAAQ,IAAM/mC,KAAKqhC,gBAAgBsQ,KACvDy9D,GAAY/pE,EAAAA,EAAAA,GAAgB3E,EAASf,IAAI,IAC7C3/B,KAAKkvG,eAAeltE,YAAYsrE,IAAWvrE,SAASmlB,IACpD0nD,EAAAA,EAAAA,IAAe5uG,KAAKkvG,eAAgBE,EAAUtqB,OAASsqB,EAAUlwF,IAAM,IACvEyvF,EAAAA,EAAAA,IAAc3uG,KAAKkvG,eAAgBE,EAAUvnF,MAAQunF,EAAUrwF,KAAO,GACtE,IAAIswF,EAAuB,CACvBC,SAAS,EACTxsF,GAAIqsF,EACJzsF,GAAIysF,EACJpsF,GAAI2d,EACJ/d,SAAUukC,EAASt/B,QAAUs/B,GAEjClnD,KAAKuuG,wBAAwBvuG,KAAKkvG,eAAgBG,GAClDb,GAAAA,EAAAA,MAAoBxuG,KAAKkvG,eAAgBG,GACzCrvG,KAAKkvG,eAAe/pE,IAAI,aAAc,aAG9C+H,OAAQ,WACJ,IAAIqiE,EAAkBvvG,KAAKiuG,iBACvBsB,GACAvvG,KAAKotC,MAAMmiE,IAGnBrB,UAAW,WACPluG,KAAKiuG,kBAAoBjuG,KAAKiuG,iBAAiBjsE,YAAYmrE,IAC3DntG,KAAKiuG,iBAAmB,KACxBjuG,KAAKkvG,gBAAkBlvG,KAAKkvG,eAAeptE,SAASwrE,KAExDrkE,KAAM,WACFjpC,KAAK6pC,aAAa,oBAAqB,CACnCiU,kBAAmB,CAAC,WAAY,YAChCC,SAAU,cAEd/9C,KAAK6pC,aAAa,mBAAoB,CAClCiU,kBAAmB,CAAC,WAAY,YAChCC,SAAU,cAEd/9C,KAAKwvG,oBAAsBxvG,KAAKwvG,qBAAuBxvG,KAAK6pC,aAAa7pC,KAAKmuG,aAAa7pE,KAAKtkC,OAChG4mC,EAAAA,EAAAA,GAAgB2O,GAAAA,WAAAA,cAA0B83D,GAAqBrtG,KAAKwvG,qBACpExvG,KAAKyvG,iCAETA,8BAA+B,WAC3B,IAAI7nE,EAAO5nC,KACP0/B,EAAakI,EAAK9B,WAAa8B,EAAK9B,UAAUpF,WAC9ChB,GACAkH,EAAAA,EAAAA,GAAgBlH,GAAYq1C,EAAAA,GAAAA,IAAa,UAAWq4B,KAAoB,SAAS9mE,GACzE,SAAUwc,EAAAA,GAAAA,IAAiBxc,IAC3BsB,EAAK4nE,oBAAoBlpE,OAKzCsE,QAAS,WACLqI,aAAajzC,KAAK8uG,iBAClB77D,aAAajzC,KAAKsuG,uBAClB1nE,EAAAA,EAAAA,IAAiB2O,GAAAA,WAAAA,cAA0B83D,GAAqBrtG,KAAKwvG,wBAE1EvmC,QAAQ4hC,IACA6E,GAAsB,CAC7BxpD,eAAgB,WACZ,MAAO,IAEXlY,YAAa,CACTo6C,cAAemlB,KC5LvB/iD,GAAAA,eAAwB,gBAAiBklD,I,2DCmCrC1nE,IAASpF,EAAAA,EAAAA,MACT+sE,GAAiB,CACjBlgG,KAAM,KACNF,QAAS,WACL,OAAO,IAGXqgG,GAAsB,YACtBC,GAA8B,GAAG/nF,OAAO8nF,GAAqB,YAC7DE,GAA2B,GAAGhoF,OAAO8nF,GAAqB,SAC1DG,GAA8B,GAAGjoF,OAAO8nF,GAAqB,YAC7DI,GAA8B,GAAGloF,OAAO8nF,GAAqB,YAC7DK,GAA8B,GAAGnoF,OAAO8nF,GAAqB,YAC7DM,GAA6B,GAAGpoF,OAAO8nF,GAAqB,WAC5DO,GAAsB,YACfC,GAAsBC,GAAAA,EAAAA,QAAkB,CAC/Cp/E,KAAM,SAASkQ,EAAS7f,GACpBthB,KAAKs6B,SAAShZ,IAElB8qE,qBAAsB,WAClB,OAAOpsF,KAAKs6B,WAAWxS,OAAO,CAAC,CAC3BukE,OAAQ,CACJC,SAAU,OAEdhrE,QAAS,CACL9T,MAAO,WAKZ8iG,GAAS,SAAShvF,GACzB,IAAIivF,EACAlrF,EAAW,IAAIgI,EAAAA,GACf64B,GAAkB,IAAIkqD,IAAqB7tE,SAC/CjhB,GAAUsK,EAAAA,EAAAA,GAAOs6B,EAAgB5kC,GACjC,IAAIof,GAAWmB,EAAAA,EAAAA,GAAE,SAASC,SAAS8tE,IAAqB7tE,UAASyuE,EAAAA,GAAAA,OAC7DC,EAAmB,YAAanvF,EAChCovF,EAAuB,gBAAiBpvF,EACxCmvF,GACA9kF,EAAAA,EAAAA,IAAW,SAEf,IAAIglF,EAAc5qG,OAAO2qG,EAAuBpvF,EAAQqvF,YAAcrvF,EAAQ1S,SAC1EqyE,GAAWp/C,EAAAA,EAAAA,GAAE,SAASC,SAASkuE,IAA6B9uF,KAAKyvF,GACjEC,EAAoB,IACxBx/E,EAAAA,EAAAA,IAAK9P,EAAQxQ,SAAW,CAAC6+F,KAAkB,WACvC,IAAIplE,EAAS,IAAIsmE,GAAAA,EAAO7wG,KAAKuP,QAAS,CAClCkrD,QAASq2C,IAEbF,EAAkBvoF,KAAK,CACnBhb,QAAS,SACT+T,SAAUw4E,GAAAA,EAAAA,UAAkBmX,QAAU,QAAU,SAChDvvF,OAAQ,WACRF,SAASsK,EAAAA,EAAAA,GAAO,GAAI5rB,KAAM,CACtBuP,QAAS,WACL,IAAIyZ,EAASuhB,EAAOymE,WAAW3lF,WAC/B7c,EAAKwa,WAKrB,IAAI8nF,EAAgB,IAAI9V,GAAAA,EAAMt6D,GAAU9U,EAAAA,EAAAA,GAAO,CAC3ClX,MAAO,QAAU67F,EAAiBjvF,EAAQ5M,aAAU,IAAW67F,EAAiBA,EAAiB,GACjGv1F,WAAWi2F,EAAAA,EAAAA,IAAc3vF,EAAQtG,WAAW,GAC5CrB,aAAas3F,EAAAA,EAAAA,IAAc3vF,EAAQ3H,aAAa,GAChDjR,OAAQ,OACR8E,MAAO8T,EAAQ9T,MACfuN,gBAAiBuG,EAAQvG,kBAAmB,EAC5Cm2F,mBAAmB,EACnB1nG,eAAgB,SAASirB,GACrBA,EAAKqR,UAAUohB,WAAWplB,SAASiuE,IAA6Bh/D,OAAOkwC,IAE3E1mE,UAAW,SAAS+rB,GAChBA,EAAER,UAAUqrE,gBAAgBrvE,SAASmuE,IAA6B1uE,KAAK,IAAIzZ,OAAOqoF,KAAsBruE,SAASouE,KACjHkB,EAAAA,GAAAA,OAEJ52F,QAAS,SAAS8rB,GACd,IAAI+qE,EAAe/qE,EAAER,UAAUqrE,gBAAgB5vE,KAAK,IAAIzZ,OAAOqoF,KAAsBxsD,QACrF/c,EAAAA,EAAAA,QAAqByqE,EAAc,UAEvCl3F,SAAU,WACNkL,EAAS4I,UAEb/S,aAAc01F,EACdx3F,UAAW,CACP3K,KAAM,CACFK,KAAM,MACN8R,SAAU,KAEdpS,KAAM,CACFM,KAAM,MACN8R,SAAU,IACVK,GAAI,CACAjC,QAAS,EACTC,MAAO,GAEX6B,KAAM,CACF9B,QAAS,EACTC,MAAO,KAInB3S,YAAYyqB,EAAAA,GAAAA,KAASzqB,WACrBoO,SAAU,CACNkI,eAAgB,CACZ6rF,EAAG,GACHn8E,EAAG,KAGZhR,EAAQgwF,eAOX,SAAS9iG,EAAKlO,GACV+kB,EAAS8I,QAAQ7tB,GACjBwwG,EAActiG,OAAO6f,MAAM,WACvByiF,EAAcpwE,WAAW4B,YAGjC,OAZAwuE,EAAc1W,WAAWt4D,SAAS+tE,IAC9BvuF,EAAQ5G,UACRo2F,EAAcvuE,OAAO,WAAYjhB,EAAQ5G,UAE7Co2F,EAAc1W,WAAWt4D,SAASguE,IAQ3B,CACHrhG,KAAM,WACF,GAAI,YAAcmrF,GAAAA,EAAAA,OAAetN,SAAU,CACvC,IAAIilB,GAAa1uE,EAAAA,EAAAA,IAAUmF,KAAUwZ,EAAAA,EAAAA,IAASxZ,IAC1Cx6B,EAAQ+jG,EAAa,MAAQ,MACjCT,EAAcvuE,OAAO,CACjB/0B,MAAOA,IAIf,OADAsjG,EAAcriG,OACP4W,EAASoJ,WAEpBjgB,KAAMA,IAcHgjG,GAAU,SAASb,GAC1B,IAAIj8F,EAAQ2W,UAAUzD,OAAS,QAAK,IAAWyD,UAAU,GAAKA,UAAU,GAAK,GACzErQ,EAAYqQ,UAAUzD,OAAS,EAAIyD,UAAU,QAAK,EAClD/J,GAAU4O,EAAAA,EAAAA,IAAcygF,GAAeA,EAAc,CACrDj8F,MAAOA,EACPi8F,YAAaA,EACb31F,UAAWA,EACXlK,QAAS,CAAC,CACNrB,KAAMg6B,EAAAA,EAAAA,OAA2B,OACjCl6B,QAAS,WACL,OAAO,IAEZ,CACCE,KAAMg6B,EAAAA,EAAAA,OAA2B,MACjCl6B,QAAS,WACL,OAAO,KAGfoK,YAAaqB,GAEjB,OAAOs1F,GAAOhvF,GAAS7S,Q,UC9MhB+hF,GAAoB,iBACpBz+C,GAAY,SAEZ0/D,GAAqB,eACrBC,GAAkB,YAClBC,GAA6B,SAC7BC,GAA6B,SAC7BC,GAA4B,gBAC5BC,GAA2B,eAC3BC,GAAiC,qBACjCC,GAAqC,yBACrCC,GAAwB,kBACxBC,GAAyB,6BACzBC,GAA6B,eAAiBD,GAC9CE,GAAkB,QAClBC,GAAgB,MAChBC,GAAiB,OACjBC,GAAiB,OACjBC,GAAkB,QAClBC,GAAyB,QACzBC,GAAwB,OACxBC,GAA+B,aAC/BC,GAA4B,UAC5BC,GAAmC,iBACnCC,GAAgC,cAChCC,GAAa,CAACX,GAAiBC,GAAeC,GAAgBC,GAAgBC,IAC9EQ,GAAkB,CAACX,GAAeE,GAAgBC,IAClDS,GAA2B,CAACZ,GAAeE,IC0ClDW,GAAiB,WACjBC,GAAa,UACbC,GAAe,eACfC,GAAoB,iBACpBC,GAAqB,kBACrBC,GAAgCD,GAAqB,cACrDE,GAAe,sBACfC,GAAe,kBACfC,GAAe,kBACfC,GAAgB,mBAChBC,GAAoB,oBACpBnuD,GAA4B,yBAC5BouD,GAA6B,SAC7BC,GAA4B,QAC5BC,GAAkB,CAClBvlB,KAAM,eACN54E,OAAQ,iBACRo+F,KAAM,eACNC,SAAU,mBACVC,OAAQ,iBACR/1D,IAAK,eAELg2D,GAAkB,CAClB3lB,KAAM,OACN54E,OAAQ,SACRo+F,KAAM,OACNC,SAAU,SACVC,OAAQ,QACR/1D,IAAK,OAELi2D,GAAe,CACfJ,KAAM,UACNE,OAAQ,YACRD,SAAU,cACVzlB,KAAM,eACN54E,OAAQ,iBACRuoC,IAAK,oBAELk2D,GAAsB,CACtBl2D,IAAK,cACL61D,KAAM,gBACNE,OAAQ,iBAERI,GAAe,CAAC,OAAQ,OAAQ,SAAU,SAAU,YACpDC,GAA8B,kBAC9BC,GAAuB,SAASnvF,GAChC,OAAO,SAAS+xD,GACZ,IAAItpD,EAAQspD,aAAennD,MAAQmnD,EAAM,IAAInnD,MAAMmnD,GAAOrxE,OAAOqxE,IAAQ,iBACzE/xD,EAAS4I,OAAOH,KAGpB2mF,GAAgB,SAASlK,EAAWxzD,GACpC,OAAOA,EAAYu3B,WAAai8B,GAAaxzD,EAAY5oC,OAAO+B,cAEhEwkG,GAAsC,SAASnK,EAAWxzD,GAC1D,IAAI49D,IAAkB59D,EAAY5oC,OAAOk5B,QACrCinC,EAAYmmC,GAAclK,EAAWxzD,GACrC69D,GAAgBD,IAAkBrmC,GAAav3B,EAAY5oC,OAAO6E,kBACtE,MAAO,SAAW+jC,EAAYjT,SAAW8wE,GAEzCC,GAAoBrnE,GAAAA,eAAAA,QAA+B,WACnD,IAAIsnE,EAAiB,CAAChkG,EAASxB,KAC3B,IAAI0Z,GAAU,EAOd,OANAlY,EAAQqlB,MAAK,CAACziB,EAAQ0W,KAClB,GAAI2qF,EAAcrhG,KAAYpE,EAE1B,OADA0Z,EAASoB,GACF,KAGRpB,GAGX,SAAS+rF,EAAcrhG,GACnB,OAAOyc,EAAAA,EAAAA,IAASzc,GAAUA,EAAOpE,KAAOoE,EAE5C,MAAO,CACHu1B,KAAM,WACFjpC,KAAK62C,mBAAqB72C,KAAKqqC,cAAc,WAC7CrqC,KAAK0hC,gBAAkB1hC,KAAKqqC,cAAc,QAC1CrqC,KAAKugF,UAAYvgF,KAAK+lC,QAAQ,YAC9B/lC,KAAKg1G,eAAiB,KAClBh1G,KAAKi1G,YACLj1G,KAAKi1G,WAAWp5D,SAAQzuB,GAAKA,EAAEa,OAAO,YAE1CjuB,KAAKi1G,WAAa,GACbj1G,KAAKwiE,sBACNxiE,KAAKwiE,oBAAsBxiE,KAAKq+C,mBAAmB/Z,KAAKtkC,MACxDA,KAAK0hC,gBAAgB0c,QAAQD,IAAIn+C,KAAKwiE,sBAErCxiE,KAAKk1G,qBACNl1G,KAAK6pC,aAAa,eAAgB,CAC9BiU,kBAAmB,CAAC,WAAY,cAEpC99C,KAAK6pC,aAAa,iBAAkB,CAChCiU,kBAAmB,CAAC,WAAY,cAEpC99C,KAAK6pC,aAAa,gBAAiB,CAC/BiU,kBAAmB,CAAC,WAAY,cAEpC99C,KAAK6pC,aAAa,iBAAkB,CAChCiU,kBAAmB,CAAC,WAAY,cAEpC99C,KAAK6pC,aAAa,gBAAiB,CAC/BiU,kBAAmB,CAAC,WAAY,cAEpC99C,KAAK6pC,aAAa,eAAgB,CAC9BiU,kBAAmB,CAAC,WAAY,cAEpC99C,KAAK6pC,aAAa,gBAAiB,CAC/BiU,kBAAmB,CAAC,WAAY,cAEpC99C,KAAK6pC,aAAa,eAAgB,CAC9BiU,kBAAmB,CAAC,WAAY,cAEpC99C,KAAK6pC,aAAa,UAAW,CACzBiU,kBAAmB,CAAC,WAAY,cAEpC99C,KAAK6pC,aAAa,WAAY,CAC1BiU,kBAAmB,CAAC,WAAY,cAEpC99C,KAAK6pC,aAAa,kBAAmB,CACjCiU,kBAAmB,CAAC,WAAY,cAEpC99C,KAAK6pC,aAAa,iBAAkB,CAChCiU,kBAAmB,CAAC,WAAY,eAGxC99C,KAAKm1G,oBACLn1G,KAAKo1G,qBACAp1G,KAAKq1G,iBACNr1G,KAAKq1G,eAAiB,IAE1Br1G,KAAK8lC,UAAUwvE,oBAAoBvD,KAAkC,EACrE/xG,KAAK8lC,UAAUwvE,oBAAoBf,KAA+B,GAEtEgB,YAAa,WACT,IAAIC,EAAWx1G,KAAKuiC,OAAO,gBAC3B,OAAK,IAAMwwE,GAAW1oF,QAAQmrF,GACnBA,EAEJnD,IAEXoD,0BAA2B,WACvB,MAAO,CAACn8F,EAAWgI,KACf,IAAIs1E,GAAU/0D,EAAAA,EAAAA,GAAE,SAASE,SAASzoB,GAClCtZ,KAAKqqC,cAAc,iBAAiB4sD,aAAaL,GAAShrE,EAAAA,EAAAA,GAAO,GAAItK,EAAQnT,OAAQ,CACjF7N,MAAOghB,EAAQhhB,MACf62F,SAAU71E,EAAQ61E,SAClBxxD,IAAKrkB,EAAQqkB,IACbuxD,WAAY,UACZ1pF,MAAO,KACPmQ,UAAW2D,EAAQ61E,SACnBqV,SAAUlrF,EAAQkrF,SAClB98C,GAAIpuC,EAAQouC,QAIxBgmD,mBAAoB,WAChB,IAAIn/F,EAAiBvW,KAAKuiC,OAAO,0BAC7B0pC,EAAgBjsE,KAAKuiC,OAAO,kBAChC,GAAI,YAAc0pC,EACd,OAAQ11D,GACJ,KAAKq8F,GACD,OAAOE,GACX,KAAKH,GACD,OAAOE,GACX,QACI,OAAOt8F,EAGnB,OAAOA,GAEXo/F,WAAY,WACR,OAAO31G,KAAKuiC,OAAOgyE,KAEvBqB,kBAAmB,WACf,IAAI1/F,EAAUlW,KAAKuiC,OAAOgyE,IAC1B,OAAOr+F,EAAQ0N,QAAO/M,GAAU,WAAaA,EAAO/H,OAAM8Y,QAE9DiuF,aAAc,WACV,IAAI3/F,EAAUlW,KAAK21G,aACfG,EAAY,OAAS5/F,QAAW,IAAWA,OAAU,EAASA,EAAQ0R,OACtEkuF,GACA91G,KAAKupC,cAAcgrE,GAA6B,KAGxDwB,iBAAkB,SAASrqF,GACvB,OAAO1rB,KAAKq1G,eAAezxF,QAAOqD,IAAQ8b,EAAAA,EAAAA,IAAa9b,EAAKyE,IAAKA,KAAM,IAE3EsqF,iBAAkB,SAAShrF,GACvB,IAAIirF,EAAej2G,KAAK+1G,iBAAiB/qF,EAAOU,KAChD,OAAIuqF,GACOrqF,EAAAA,EAAAA,GAAOqqF,EAAcjrF,IAEhChrB,KAAKq1G,eAAehtF,KAAK2C,GAClBA,IAEXkrF,YAAa,SAASxqF,GAClB,IAAIyqF,EACJ,OAAO,QAAUA,EAAwBn2G,KAAK+1G,iBAAiBrqF,UAAS,IAAWyqF,OAAwB,EAASA,EAAsB/iB,SAE9IgjB,eAAgB,SAAS1mG,GACrB,IAAIgc,EAAM1rB,KAAK0hC,gBAAgB3F,MAAMrsB,GACjCwG,EAAUlW,KAAK21G,aACfU,EAAYnnE,EAAAA,cAA4BxjB,EAAKxV,GACjD,OAAIA,EAAQmgG,IACDC,EAAAA,GAAAA,IAAwB5mG,EAAMwG,EAAQmgG,GAAW3mG,MAErDA,GAEX6mG,gBAAiB,WACb,OAAOv2G,KAAK21G,aAAa/xF,QAAO/M,GAAUA,EAAOnH,MAAQmH,EAAO/H,OAAS6iG,KAA4B3/E,KAAInb,GAAUA,EAAOnH,QAE9H8mG,eAAgB,WACZ,OAAOx2G,KAAK21G,aAAa/xF,QAAO/M,GAAU7W,KAAKk2G,YAAYr/F,EAAO6U,MAAQ7U,EAAO/H,OAAS8iG,KAA4B5/E,KAAInb,GAAU7W,KAAKk2G,YAAYr/F,EAAO6U,QAEhK+qF,uBAAwB,SAASr/B,GAC7B,GAAI,WAAaA,EAAjB,CAGA,IAAI+J,EAAgBnhF,KAAK02G,kBACzB12G,KAAK0hC,gBAAgBuoC,kBAAkBh9B,KAAKmqC,EAAK+J,KAErDw1B,yBAA0BrmE,EAAAA,GAC1BsmE,eAAgBtmE,EAAAA,GAChB+N,mBAAoB/N,EAAAA,GACpBumE,wBAAyB,SAASnjG,EAAQ4N,GACtC,IAAI0H,GAAS,EACb,OAAQtV,EAAOpE,MACX,IAAK,SACD0Z,EAAShpB,KAAKgW,cAAcsL,GAC5B,MACJ,IAAK,WACD0H,GAAS,EAEjB,OAAOA,GAEX8tF,iBAAkB,SAASpjG,EAAQ4N,GAC/B,IAAI/T,EAAUmG,EAAOnG,QACrB,OAAKkjB,EAAAA,EAAAA,IAAUljB,IAGRuqB,EAAAA,EAAAA,IAAWvqB,GAAWA,EAAQ2e,KAAKxY,EAAQ,CAC9CoyB,UAAWxkB,EAAQwkB,UACnBH,IAAKrkB,EAAQqkB,IACbx3B,OAAQmT,EAAQnT,SACfZ,EANMvN,KAAK62G,wBAAwBnjG,EAAQ4N,IAQpDy1F,kBAAmB,SAASrjG,EAAQ4N,GAChC,IAAI/Z,EAAWmM,EAAOnM,SACtB,OAAOuwB,EAAAA,EAAAA,IAAWvwB,GAAYA,EAAS2kB,KAAKxY,EAAQ,CAChDoyB,UAAWxkB,EAAQwkB,UACnBH,IAAKrkB,EAAQqkB,IACbx3B,OAAQmT,EAAQnT,WACb5G,GAEXyvG,iBAAkB,SAAStjG,EAAQ4N,GAC/B,IAAIyV,GAAS5G,EAAAA,EAAAA,IAASzc,GAAUA,EAAS,GACrCujG,EAAalC,EAAcrhG,GAC3BoD,EAAe,CAACwK,IAChB,IAAIxK,EAAewK,EAAQwkB,UAAUvD,OAAO,kBAAoB,GAChE,MAAO,CACHisD,KAAM13E,EAAaS,eACnB3B,OAAQkB,EAAaG,iBACrB+8F,KAAMl9F,EAAaO,QACnB48F,SAAUn9F,EAAaU,YACvB08F,OAAQp9F,EAAaM,UACrB+mC,IAAKrnC,EAAaogG,eARP,CAUhB51F,GACCmiB,EAAa2wE,GAAa6C,GAC1BE,EAAiBn3G,KAAKuiC,OAAO,WAC7ByH,EAAaqqE,GAAoB4C,GACjCG,GAAcptE,GAAamtE,EAAentE,GAC9C,OAAOpe,EAAAA,EAAAA,GAAO,CACVtc,KAAM2nG,EACNxnG,KAAMqH,EAAamgG,GACnB7nG,SAAU2kG,GAAgBkD,IAC3B,CACC1nG,QAASk0B,GAAc,CAAC6C,IACpB,IAAImE,EAAQnE,EAAEmE,MACdA,EAAMo1C,kBACNp1C,EAAM4L,iBACNrD,YAAW,KACP1xB,EAAQqkB,KAAOyxE,GAAep3G,KAAKyjC,IAAezjC,KAAKyjC,GAAYniB,EAAQqkB,IAAI4N,gBAGxFxc,IAEPsgF,mBAAoB,SAAS/1F,GACzB,IAAIg2F,EACAC,IAAsBj2F,EAAQnT,OAAO2C,QACrCA,GAAWwQ,EAAQnT,OAAO2C,SAAW,IAAIiZ,QAkB7C,OAjBIwtF,GACAD,EAAcxC,EAAehkG,EAAS,QAClCwmG,GAAe,IACXxC,EAAehkG,EAAS,QAAU,GAClCA,EAAQksC,OAAOs6D,EAAc,EAAG,EAAG,QAEnCxC,EAAehkG,EAAS,UAAY,GACpCA,EAAQksC,OAAO83D,EAAehkG,EAAS,QAAU,EAAG,EAAG,WAG/DwmG,EAAcxC,EAAehkG,EAAS,UAClCwmG,GAAe,GAAKxC,EAAehkG,EAAS,YAAc,GAC1DA,EAAQksC,OAAOs6D,EAAc,EAAG,EAAG,aAGvCxmG,EAAUwjG,GAAavqF,QAEpBjZ,EAAQkhB,KAAIte,GAAU1T,KAAKg3G,iBAAiBtjG,EAAQ4N,MAE/Dk2F,sBAAuB,SAAS93E,EAAY5uB,EAASwQ,EAASzK,GAC1D/F,EAAQ+qC,SAAQnoC,IACR1T,KAAK82G,iBAAiBpjG,EAAQ4N,IAC9BthB,KAAKy3G,cAAc/3E,EAAYhsB,EAAQ4N,EAASzK,OAI5D6gG,4BAA6B,WACzB,MAAO,CAACp+F,EAAWgI,EAASzK,KACxB,IAAI6oB,GAAamC,EAAAA,EAAAA,GAAEvoB,GACnB,GAAI,SAAWgI,EAAQwiB,QAAS,CAC5B,IAAIhzB,EAAU9Q,KAAKq3G,mBAAmB/1F,GACtCthB,KAAKw3G,sBAAsB93E,EAAY5uB,EAASwQ,EAASzK,GACzDyK,EAAQq7B,OAASr7B,EAAQq7B,OAAM,IAAM7rC,EAAQkhB,KAAIte,GAAU1T,KAAK82G,iBAAiBpjG,EAAQ4N,OAAW,KAChGoe,EAAWmL,QACX7qC,KAAKw3G,sBAAsB93E,EAAY5uB,EAASwQ,WAGpD4tB,EAAAA,aAA2BxP,KAIvCi4E,mBAAoB,WAChB,IAAInC,EAAWx1G,KAAKu1G,cACpB,OAAQ,IAAMvC,GAAgB3oF,QAAQmrF,IAE1CoC,4BAA6B,WACzB,IACIp4E,EADAyQ,EAAoBjwC,KAAKqqC,cAAc,WAEvCuM,EAAiB3G,EAAkB6G,oBAOvC,OANA1lB,EAAAA,EAAAA,IAAKwlB,GAAiB,SAASxsB,EAAOjc,GAClC,GAAIA,EAAO+B,aAEP,OADAsvB,EAAcpV,GACP,KAGRoV,GAEXq4E,0BAA2B,SAAStkE,GAChC,IAAI1N,EAAW7lC,KAAK+lC,QAAQ,YAC5B,OAAOF,GAAYA,EAASoa,gBAAgB1M,GAAsB,EAAGvzC,KAAK43G,gCAE9EE,oBAAqB,SAASvkE,GAC1B,OAAOvzC,KAAK63G,0BAA0BtkE,IAE1CzQ,cAAe,SAASpX,EAAKtO,GACzB,OAAO8xB,EAAAA,cAA4BxjB,EAAKtO,IAE5CykE,WAAY,SAAStuC,GAGjB,IAFA,IAAIr9B,EAAUlW,KAAK21G,aACf3sF,GAAS,EACJ6O,EAAI,EAAGA,GAAK,OAAS3hB,QAAW,IAAWA,OAAU,EAASA,EAAQ0R,QAASiQ,IACpF,GAAI3hB,EAAQ2hB,GAAG/oB,SAAU2hB,EAAAA,EAAAA,IAAU8iB,IAAavzC,KAAK0hC,gBAAgBsxC,iBAAiB98D,EAAQ2hB,GAAGnM,OAAS6nB,GAAW,CACjHvqB,GAAS,EACT,MAGR,OAAOA,GAEX4hB,QAAS,WACL5qC,KAAKs6B,WACL2Y,aAAajzC,KAAK+3G,sBAClBnxE,EAAAA,EAAAA,IAAiB2O,GAAAA,WAAAA,cAA0BlC,GAAAA,EAAAA,GAAkBrzC,KAAKg4G,yBAClEpxE,EAAAA,EAAAA,IAAiB2O,GAAAA,WAAAA,cAA0BlC,GAAAA,EAAAA,KAAoBrzC,KAAKi4G,2BACpErxE,EAAAA,EAAAA,IAAiB2O,GAAAA,WAAAA,cAA0BpC,GAAAA,EAAgBnzC,KAAKk1G,qBAEpEtrE,cAAe,SAASnV,GACpB,GAAI,YAAcA,EAAKnlB,KAAM,CACzB,IAAIwlD,EAAWrgC,EAAKqgC,SAChBA,IAAai9C,GACb/xG,KAAKk4G,wBAAwBzjF,GACtBqgC,IAAay/C,GACpBv0G,KAAKm4G,qBAAqB1jF,GAClBA,EAAKqV,UACb9pC,KAAK62C,mBAAmBka,SACxB/wD,KAAKipC,OACLjpC,KAAK61G,eACL71G,KAAKo4G,uBACLp4G,KAAKq4G,oBAET5jF,EAAKqV,SAAU,OAEf9pC,KAAKs6B,SAAS7F,IAGtByjF,wBAAyB,SAASzjF,GAC9B,IAAI8e,EAAWvzC,KAAK0hC,gBAAgBsxC,iBAAiBv+C,EAAKn0B,OACtDg4G,EAAwBt4G,KAAKu4G,6BAC7BC,EAAcx4G,KAAK0hC,gBAAgBsxC,iBAAiBv+C,EAAKogC,eAAiByjD,GAC1E7nF,EAAAA,EAAAA,IAAUgE,EAAKn0B,OACXm0B,EAAKn0B,QAAUm0B,EAAKogC,eACpB70D,KAAKy4G,0BAA0BllE,EAAUilE,GAG7Cx4G,KAAK04G,kBAGbP,qBAAsB,SAAS1jF,GAC3B,IAAI6mC,EAAiBt7D,KAAK0hC,iBACrBjN,EAAKn0B,MAAMsnB,QAAW6M,EAAKogC,cAAcjtC,UAG9C5nB,KAAK24G,sBAAsBlkF,EAAKn0B,OAChCg7D,EAAe2P,YAAY,CACvB/+D,oBAAoB,MAG5BysG,sBAAuB,SAASziG,GAC5BA,EAAQ2lC,SAAQhlC,IACR,WAAaA,EAAO/H,MACpB9O,KAAK44G,eAAe/hG,OAIhCqyB,cAAe,WACX,MAAO,CAAC,SAAU,YAAa,cAAe,UAAW,eAAgB,iBAAkB,gBAE/FgxB,QAAS,SAAS2+C,IACTpoF,EAAAA,EAAAA,IAAUzwB,KAAK84G,aAGpB94G,KAAK+4G,aAAaF,IAEtBE,aAAczoE,EAAAA,GACdg+B,UAAW,WACP,IAAI0qC,GAAsBvoF,EAAAA,EAAAA,IAAUzwB,KAAKuiC,OAAOwvE,KAChD,OAAOiH,GAEXzO,UAAW,WACP,OAAO,GAEX0O,eAAgB,SAAS34G,EAAO44G,GACxBA,EACAl5G,KAAKupC,cAAcwoE,GAAgCzxG,GAEnDN,KAAKuiC,OAAOwvE,GAAgCzxG,IAGpD64G,sBAAuB,SAAS5lE,EAAU2lE,GACtC,IAAIxtF,EAAM1rB,KAAK0hC,gBAAgBoxC,iBAAiBv/B,QAC5C,IAAW7nB,EAIf1rB,KAAKi5G,eAAevtF,EAAKwtF,GAHrBl5G,KAAK0hC,gBAAgBqqC,UAAU,UAKvCqtC,gBAAiB,WACb,OAAOp5G,KAAKq5G,2BAEhBC,oBAAqB,WACjB,OAAQ,GAEZC,kBAAkBhmE,GACd,IAAI7nB,EAAM1rB,KAAK0hC,gBAAgBoxC,iBAAiBv/B,GAC5CimE,GAAa/oF,EAAAA,EAAAA,IAAU/E,KAAQqX,EAAAA,EAAAA,IAAa/iC,KAAKuiC,OAAOwvE,IAAiCrmF,GAC7F,OAAI8tF,EACOx5G,KAAKq5G,4BAA8B9lE,EAEvCimE,GAEXC,WAAY,SAASzqC,EAAiBxvC,GAClC,OAAOx/B,KAAKu5G,kBAAkBvqC,IAAoBhvE,KAAK05G,+BAAiCl6E,GAE5Fk3E,gBAAiBpmE,EAAAA,GACjBs4D,iBAAkB,SAAS3hF,GACvB,OAAO,GAEX0yF,mBAAoB,SAASv8F,EAAOvG,EAAQ+iG,GACxC,IAAI5wF,GAAU,EACVsyC,EAAiBt7D,KAAK0hC,gBACtBhW,EAAM1rB,KAAK65G,2BAA2BhjG,GA2B1C,OA1BK4Z,EAAAA,EAAAA,IAAU/E,IAAQ,IAAMtO,EAAMwK,QAExB6I,EAAAA,EAAAA,IAAU/E,IACjBtO,EAAM+Y,MAAK,CAAClP,EAAMmD,KACd,IAAI0vF,EAAkBF,GAAoB55G,KAAK4oG,iBAAiB3hF,GAUhE,IATIkJ,EAAAA,EAAAA,IAASlJ,KACL6yF,IAAmBrpF,EAAAA,EAAAA,IAAUxJ,EAAKusF,MAC9BzwE,EAAAA,EAAAA,IAAa9b,EAAKyE,IAAKA,KACvB1C,EAASoB,IAEN2Y,EAAAA,EAAAA,IAAau4B,EAAev/B,MAAM9U,GAAOyE,KAChD1C,EAASoB,IAGbpB,GAAU,EAAG,CACb,IAAI+wF,EAAW38F,EAAM4L,EAAS,GAC9B,GAAI+wF,IAAa,WAAaA,EAASj2E,SAAW,mBAAqBi2E,EAASj2E,WAAYrT,EAAAA,EAAAA,IAAU5Z,EAAOlH,gBACzG,OAKJ,OAHI8gB,EAAAA,EAAAA,IAAU5Z,EAAOlH,kBACjBqZ,GAAU,IAEP,MArBfA,EAAS,EAyBNA,GAEXgxF,iBAAkB,SAAStuF,GACvB,IAAIuuF,EACAhzF,EAAO,CACPyE,IAAKA,GAELwuF,EAAa,QAAUD,EAAyBj6G,KAAK+1G,iBAAiBrqF,UAAS,IAAWuuF,OAAyB,EAASA,EAAuBC,WAIvJ,OAHI,OAASA,QAAc,IAAWA,GAAcA,EAAW1G,MAC3DvsF,EAAKusF,IAAgB0G,EAAW1G,KAE7BvsF,GAEXkzF,mBAAoB,SAAS/8F,EAAOvG,EAAQ+iG,GACxC,IAAIQ,EAAiBp6G,KAAK25G,mBAAmBv8F,EAAOvG,EAAQ+iG,GACxDt+C,EAAiBt7D,KAAK0hC,gBAC1B,GAAI04E,EAAiB,EAAG,CACpB,IAAI7jG,EAAiBvW,KAAK01G,qBACtBpzF,EAAYg5C,EAAeh5C,YAC3B+3F,EAAyBr6G,KAAK65G,2BAA2BhjG,GACzDN,IAAmBm8F,IAAyB,IAAMpwF,IAAcmO,EAAAA,EAAAA,IAAU4pF,GAEnE9jG,IAAmBm8F,IAAyBp3C,EAAeyY,qBAClEqmC,EAAiBh9F,EAAMwK,QAFvBwyF,EAAiB,EAKzB,OAAOA,GAEX1hB,aAAc,SAASt7E,EAAOkpB,GAC1B,IAAImU,EAAanU,EAAEmU,WACnBz6C,KAAKi9C,OAAOxC,GACZ,IAAIvkC,EAAUlW,KAAK21G,aAmBnB,OAlBAz/F,EAAQ2lC,SAAQhlC,IACZ,IAAIyjG,EACAC,EAAW1jG,EAAO/H,OAAS6iG,GAC/B,GAAK4I,EAAL,CAGA,IAAI7uF,EAAM7U,EAAO6U,IACbwuF,EAAa,QAAUI,EAAyBt6G,KAAK+1G,iBAAiBrqF,UAAS,IAAW4uF,OAAyB,EAASA,EAAuBJ,YAClJzpF,EAAAA,EAAAA,IAAU/E,KAAS+E,EAAAA,EAAAA,IAAUypF,KAC9BA,EAAal6G,KAAK44G,eAAe/hG,GACjC6U,EAAMwuF,EAAWxuF,KAErB,IAAI0uF,EAAiBp6G,KAAKm6G,mBAAmB/8F,EAAOvG,GAChDoQ,EAAOjnB,KAAKg6G,iBAAiBtuF,GAC7B0uF,GAAkB,GAClBh9F,EAAM4/B,OAAOo9D,EAAgB,EAAGnzF,OAGjC7J,GAEXo9F,gBAAiB,SAASvzF,EAAM3F,EAAS8rD,GACrC,IAAItmE,EAAUwa,EAAQs1B,eAClBlrB,EAAMzE,EAAKvX,KAAK8jG,IAAgBvsF,EAAKvX,KAAKgc,IAAMzE,EAAKyE,IACrDxV,EAAUlW,KAAK21G,aACfU,EAAYnnE,EAAAA,cAA4BxjB,EAAKxV,GACjD+Q,EAAKqnD,WAAY,EACb+nC,GAAa,GACbr2G,KAAKy6G,qBAAqBxzF,EAAM/Q,EAAQmgG,GAAY3qF,EAAK5kB,EAASsmE,IAG1EqtC,qBAAsB,SAASxzF,EAAMpQ,EAAQ6U,EAAK5kB,EAASsmE,GACvD,IACI19D,KAAMA,EACNZ,KAAMA,GACN+H,EACJ,OAAQ/H,GACJ,KAAK6iG,GACD1qF,EAAK2e,UAAW,EAChB3e,EAAKyE,IAAMA,EACXzE,EAAKvX,KAAOA,EACZ,MACJ,KAAKmkG,GACD5sF,EAAKyzF,UAAW,EAChBzzF,EAAKmsE,QAAUnsE,EAAKvX,KACpBuX,EAAKvX,MAAO4mG,EAAAA,GAAAA,IAAwBrvF,EAAKvX,KAAMA,GAC/CuX,EAAKkoD,eAAiB/B,EAAmB19D,EAAM5I,GAAS,GACxD,MACJ,KAAK8qG,GACD3qF,EAAK0zF,SAAU,IAG3BC,YAAa,SAASt5F,GAElB,GADAthB,KAAK2qC,cAAc,eAAgBrpB,GAC/BA,EAAQmN,QAAS,CACjB,IAAIpJ,EAAW,IAAIgI,EAAAA,GAEnB,OADAuO,EAAAA,EAAAA,KAAK0yD,EAAAA,EAAAA,IAAYhtE,EAAQmN,UAAUJ,KAAKhJ,EAAS8I,SAASC,KAAKomF,GAAqBnvF,IAAW+I,MAAKgpD,GAAOp3E,KAAKy2G,uBAAuBr/B,KAChI/xD,IAGfw1F,kBAAmB,WACf,IAAIX,EAAa,GAEjB,OADAA,EAAW1G,IAAgBxzG,KAAK86G,kBACzBZ,GAEXtB,eAAgB,SAAS/hG,EAAQkkG,GAC7B,IAAIC,EACAd,GAEAxuF,IAAKA,GACL7U,EAMJ,IALK4Z,EAAAA,EAAAA,IAAU/E,KACXA,EAAM3lB,OAAO,IAAI6sB,GAAAA,GACjB/b,EAAO6U,IAAMA,GAEjBwuF,EAAa,QAAUc,EAAyBh7G,KAAK+1G,iBAAiBrqF,UAAS,IAAWsvF,OAAyB,EAASA,EAAuBd,aAC9IzpF,EAAAA,EAAAA,IAAUypF,GAAa,CACxB,IAAIG,EAAyBr6G,KAAK65G,2BAA2BhjG,GAC7DqjG,EAAal6G,KAAK66G,qBACbpqF,EAAAA,EAAAA,IAAU4pF,IACXr6G,KAAKi7G,2BAA2BpkG,EAAQkkG,GAOhD,OAJA/6G,KAAKg2G,iBAAiB,CAClBkE,WAAYA,EACZxuF,IAAKA,IAEF,CACHwuF,WAAYA,EACZxuF,IAAKA,IAGbuvF,2BAA4B,SAASpkG,EAAQkkG,GACzC,IAAIz/C,EAAiBt7D,KAAK0hC,gBACtBw5E,EAAW5/C,EAAel+C,OAAM,GAChCyoB,EAAW7lC,KAAK+lC,QAAQ,YACxBxvB,EAAiBvW,KAAK01G,qBAC1B,OAAQn/F,GACJ,KAAKk8F,GACL,KAAKC,GACD,MACJ,KAAKE,GACL,KAAKD,GACD,GAAIuI,EAAStzF,OAAQ,CACjB,IAAIm2D,EAAYxnE,IAAmBq8F,GAA4B,EAAIsI,EAAStzF,OAAS,EACrF/Q,EAAO,IAAMknE,EAAY,kBAAoB,kBAAoBm9B,EAASn9B,GAAWryD,IAEzF,MACJ,QACI,IAAIyvF,EAAmB5kG,IAAmBs8F,GACtCzc,EAAmB+kB,EAAmB,OAASt1E,QAAY,IAAWA,OAAW,EAASA,EAAS04C,4BAA8B,OAAS14C,QAAY,IAAWA,OAAW,EAASA,EAASy4C,yBAC9L34C,EAAM21B,EAAe4V,iBAAiBklB,GACtCzwD,KAASA,EAAI2oC,WAAa,WAAa3oC,EAAI7B,SAAW,mBAAqB6B,EAAI7B,UAC/EsyD,IAEJ,IAAIglB,EAAY9/C,EAAewX,iBAAiBsjB,IAC5C3lE,EAAAA,EAAAA,IAAU2qF,KACVvkG,EAAOjH,gBAAkBwrG,KAIzCN,gBAAiB,WACb,IAAIO,EAAiB,EAQrB,OAPAr7G,KAAK21G,aAAa95D,SAAQy/D,IACtB,IAAIC,EACArB,EAAa,QAAUqB,EAAyBv7G,KAAK+1G,iBAAiBuF,EAAS5vF,YAAS,IAAW6vF,OAAyB,EAASA,EAAuBrB,YAC5JzpF,EAAAA,EAAAA,IAAUypF,IAAeoB,EAASxsG,OAAS6iG,IAA8BuI,EAAW1G,IAAgB6H,IACpGA,EAAiBnB,EAAW1G,QAG7B6H,EAAiB,GAE5BxB,2BAA4B,SAAS2B,GACjC,IAAIC,EACJ,OAAO,QAAUA,EAAwBD,EAAa7rG,sBAAmB,IAAW8rG,EAAwBA,EAAwBD,EAAa5rG,iBAErJ8rG,yBAA0B,WACtB,IAAInlG,EAAiBvW,KAAK01G,qBACtBp6C,EAAiBt7D,KAAK0hC,gBACtBpf,EAAYg5C,EAAeh5C,YAC3Bq5F,EAAgBrgD,EAAeoM,YAAc,EACjD,OAAInxD,IAAmBk8F,IAA0B,IAAMnwF,EAC5C,EACA/L,IAAmBm8F,IAAyBpwF,IAAcq5F,EAC1DA,GAEH,GAEZ5kG,OAAQ,SAASgkG,GACb,IAAIz/C,EAAiBt7D,KAAK0hC,gBACtB2hC,EAAQ/H,EAAe+H,QAC3B,OAAKA,EAIErjE,KAAK47G,QAAQb,IAHhBz/C,EAAeyQ,UAAU,QAAS/rE,KAAK8lC,UAAUkF,OACzC,IAAI3d,EAAAA,IAAUY,WAI9B2tF,QAAS,SAASb,GACd,IAAIz/C,EAAiBt7D,KAAK0hC,gBACtB2hC,EAAQ/H,EAAe+H,QACvB33C,EAAM23C,GAASA,EAAM33C,MACrBX,EAAQ,CACRrb,KAAM,IAENmsG,EAAkB77G,KAAKq5G,0BACvBh0F,EAAW,IAAIgI,EAAAA,GAEnB,OADArtB,KAAKk6D,UACAl6D,KAAK87G,mBAILpwF,IACDX,EAAMrb,KAAKqsG,QAAUh2G,OAAO,IAAI6sB,GAAAA,KAEpCgJ,EAAAA,EAAAA,IAAK57B,KAAK46G,YAAY7vF,EAAOgwF,IAAY1sF,MAAK,KACtCruB,KAAK87G,mBACLlgF,EAAAA,EAAAA,IAAK57B,KAAKg8G,YAAYjxF,EAAMrb,KAAMqrG,EAAWc,IAAkBxtF,KAAKhJ,EAAS8I,SAASC,KAAK/I,EAAS4I,QAEpG5I,EAAS4I,OAAO,aAErBG,KAAK/I,EAAS4I,QACV5I,EAASoJ,aAbZmN,EAAAA,EAAAA,IAAK57B,KAAKi8G,kBAAkBJ,IAAkBxtF,KAAKhJ,EAAS8I,SAASC,KAAK/I,EAAS4I,QAC5E5I,EAASoJ,YAcxBqtF,gBAAiB,WACb,IAAII,EAAcl8G,KAAK86G,kBACvB,QAAIoB,EAAc,IAKtBF,YAAa,SAAStsG,EAAMqrG,EAAWoB,GACnC,IAAItlG,EAAS,CACTnH,KAAMA,EACNZ,KAAM6iG,IAENyK,EAAep8G,KAAKq5G,0BACpBa,EAAal6G,KAAK44G,eAAe/hG,EAAQkkG,GACzCrvF,EAAMwuF,EAAWxuF,IAGrB,OAFA1rB,KAAKi5G,eAAevtF,GAAK,GACzB1rB,KAAKq8G,WAAWxlG,GACT7W,KAAKi8G,kBAAkBE,EAAwBtlG,EAAQulG,IAElEH,kBAAmB,SAASJ,EAAiBhlG,EAAQulG,GACjD,IAAIE,EAAeC,EACfnvF,EAAI,IAAIC,EAAAA,GACRiuC,EAAiBt7D,KAAK0hC,gBACtB86E,EAAkBx8G,KAAKqqC,cAAc,SAGzC,GAFA+xE,EAAe,QAAUE,EAAgBF,SAAiB,IAAWE,EAAgBA,GAAiB,EACtGzlG,EAAS,QAAU0lG,EAAU1lG,SAAW,IAAW0lG,EAAUA,EAAUv8G,KAAK21G,aAAa/xF,QAAOshE,GAAKA,EAAEp2E,OAAS6iG,KAA4B,IACvI96F,EACD,OAAOuW,EAAEa,OAAO,UAAUQ,UAE9B,IAAIguF,EAAuBz8G,KAAK07G,2BAC5BnoE,EAAWvzC,KAAKm6G,mBAAmB7+C,EAAel+C,QAASvG,GAAQ,GACnE6lG,EAAqBhxF,KACrBkQ,EAAAA,EAAAA,IAAK,OAAS4gF,QAAmB,IAAWA,OAAkB,EAASA,EAAgBG,cAAcjxF,IAAM2C,MAAK,KAC5GklB,EAAW+nB,EAAe0X,iBAAiBn8D,EAAO6U,KAClD0B,EAAEe,cAGNksF,EAAyBr6G,KAAK65G,2BAA2BhjG,GAuB7D,OAtBI4lG,GAAwB,EACxBnhD,EAAeh5C,UAAUm6F,GAAsBpuF,MAAK,KAChDquF,EAAmB7lG,EAAO6U,QAC3B0C,KAAKhB,EAAEa,QACHslB,EAAW,IAAK9iB,EAAAA,EAAAA,IAAU4pF,GACjCqC,EAAmBrC,IAEnB/+C,EAAe2P,YAAY,CACvBxwB,WAAY,SACZkzB,WAAY,CAACkuC,EAAiBO,EAAc7oE,KAEhDA,EAAW+nB,EAAe0X,iBAAiBn8D,EAAO6U,KAC9C6nB,EAAW,EACXmpE,EAAmB7lG,EAAO6U,KAE1B0B,EAAEe,WAGVf,EAAEiB,MAAK,KACHruB,KAAK48G,cAAcrpE,GACnBvzC,KAAK68G,gBAAgBhmG,EAAO6U,QAEzB0B,EAAEqB,WAEbmuF,cAAe,SAASrpE,GACpBvzC,KAAK88G,6BAA6BvpE,IAEtCwpE,yBAA0BzsE,EAAAA,GAC1BwsE,6BAA8B,SAASvpE,GACnC,IAAI+nB,EAAiBt7D,KAAK0hC,gBACtBhW,EAAM4vC,EAAewX,iBAAiBv/B,GACtCypE,EAAah9G,KAAK63G,0BAA0BtkE,GAChDvzC,KAAKi9G,qBAAsB,EAC3Bj9G,KAAKk9G,mBAAmBF,GAAY,KAChCzpE,EAAW+nB,EAAe0X,iBAAiBtnD,GAC3C1rB,KAAKi9G,qBAAsB,EAC3Bj9G,KAAK+8G,yBAAyBxpE,OAGtC4pE,gBAAiB,SAAS77F,GAEtB,OADAthB,KAAK2qC,cAAc,iBAAkBrpB,GAC9BA,EAAQ1L,QAEnBwnG,mBAAoB9sE,EAAAA,GACpBopE,2BAA4B,WACxB,IAAItjG,EAAiBpW,KAAKuiC,OAAOyvE,IACjC,OAAKvhF,EAAAA,EAAAA,IAAUra,GAGRpW,KAAK62C,mBAAmB4I,sBAAsBrpC,IAFzC,GAIhBinG,0BAA2B,SAASjzF,EAAO8uF,GACvC,IAAIoE,EACA1mE,EAAiB52C,KAAK62C,mBAAmBC,oBAC7C92C,KAAKu9G,mBAAmB,QAAUD,EAAwB1mE,EAAexsB,UAAW,IAAWkzF,OAAwB,EAASA,EAAsBhuG,KAAM4pG,IAEhKqE,mBAAoB,SAASjuG,EAAM4pG,GAC3BA,EACAl5G,KAAKupC,cAAcyoE,GAAoC1iG,GAEvDtP,KAAKuiC,OAAOyvE,GAAoC1iG,IAGxD8oG,qBAAsB,WAClBp4G,KAAKu9G,mBAAmB,MAAM,IAElCC,eAAgB,WACZ,IAAIpnG,EAAiBpW,KAAKuiC,OAAOyvE,IACjC,OAAOhyG,KAAKy9G,iBAAiBrnG,IAEjCqnG,iBAAkB,SAASnuG,GACvB,IACIouG,EADA9mE,EAAiB52C,KAAK62C,mBAAmBC,oBAQ7C,OANArmB,EAAAA,EAAAA,IAAUnhB,IAASsnC,EAAezgB,MAAKhoB,IACnC,GAAIA,EAAOmB,OAASA,EAEhB,OADAouG,EAAavvG,GACN,KAGRuvG,GAEXrE,wBAAyB,SAASsE,GAC9B,IAAIriD,EAAiBt7D,KAAK0hC,gBACtBrrB,EAAarW,KAAKuiC,OAAOwvE,IACzBx+D,EAAW+nB,EAAe0X,iBAAiB38D,GAC/C,OAAK,IAAMk9B,EACAA,EAEJA,EAAWvzC,KAAKu4G,2BAA2BoF,IAEtDpF,2BAA4B,SAASoF,GACjC,IAAID,EAAaC,EAAa39G,KAAKy9G,iBAAiBE,GAAc39G,KAAKw9G,iBACnEI,EAAiB,oBAAsB,OAASF,QAAc,IAAWA,OAAa,EAASA,EAAW/nE,cAC9G,OAAOioE,EAAiB,EAAI,GAEhCvF,iBAAkB,WACdr4G,KAAKi5G,eAAe,MAAM,IAE9B4E,kBAAmB,WACf79G,KAAKo4G,uBACLp4G,KAAKq4G,oBAEThhG,QAAS,SAASk8B,GACd,IAAIuqE,EACAxiD,EAAiBt7D,KAAK0hC,gBACtBtkB,EAAQk+C,EAAel+C,QACvB6J,EAAO7J,EAAMm2B,GACbvoB,EAAS,CACTtb,KAAMuX,GAAQA,EAAKvX,KACnBkG,QAAQ,GAER4iG,EAAcx4G,KAAKq5G,0BACvB,GAAKpyF,EAGL,OAAIssB,IAAailE,aAGb,IAAWvxF,EAAKyE,KAIfzE,EAAK2e,WACN5a,EAAOU,IAAMzE,EAAKyE,KAElB1rB,KAAKm9G,gBAAgBnyF,KAGzBhrB,KAAK61G,eACL71G,KAAKipC,OACLjpC,KAAKo4G,uBACLp4G,KAAK84G,WAAax9C,EAAeh5C,YACjCtiB,KAAKg2G,iBAAiB,CAClBtqF,IAAKzE,EAAKyE,IACV0nE,QAAS,QAAU0qB,EAAgB72F,EAAKmsE,eAAY,IAAW0qB,EAAgBA,EAAgB72F,EAAKvX,OAExG1P,KAAKi5G,eAAehyF,EAAKyE,OAjBrB1rB,KAAK0hC,gBAAgBqqC,UAAU,WAmBvC0sC,0BAA2B,SAASllE,EAAUilE,GAC1C,IAAI7qC,EAAa,CAAC6qC,EAAajlE,GAC/BvzC,KAAKo9G,mBAAmBzvC,EAAYp6B,EAAUilE,GAC9Cx4G,KAAK+9G,8BAA8BpwC,EAAYp6B,EAAUilE,IAE7DuF,8BAA+B,SAASpwC,EAAYp6B,EAAUilE,GAC1Dx4G,KAAKg+G,kBAAmB,EACxBh+G,KAAK0hC,gBAAgBupC,YAAY,CAC7BxwB,WAAY,SACZkzB,WAAYA,KAGpBswC,mBAAoB3tE,EAAAA,GACpB4tE,eAAgB5tE,EAAAA,GAChB6tE,kBAAmB7tE,EAAAA,GACnB8tE,2BAA4B,WACxB,OAAO93E,IACCtmC,KAAKsuE,aACLtuE,KAAK04G,mBAIjB2F,0BAA2B/tE,EAAAA,GAC3BguE,qBAAsB,WAClB,MAAO,CACH7uG,KAAMzP,KAAKuiC,OAAO,gCAClBhzB,QAASvP,KAAKu+G,aAAaj6E,KAAKtkC,QAGxCw+G,uBAAwB,WACpB,MAAO,CACH/uG,KAAMzP,KAAKuiC,OAAO,kCAClBhzB,QAASvP,KAAK04G,eAAep0E,KAAKtkC,QAG1Cy+G,oBAAqB,SAAS/yF,GAC1B,IAAIuqF,EAAej2G,KAAK+1G,iBAAiBrqF,GACrCtB,EAAQpqB,KAAKq1G,eAAehrF,QAAQ4rF,GACpC7rF,GAAS,GACTpqB,KAAKq1G,eAAer4D,OAAO5yB,EAAO,IAG1Cs0F,+BAAgC,SAASxoG,EAASkU,GAC9C,IAAIu0F,EAAezoG,EAAQkU,GAC3BlU,EAAQ2lC,SAAQhlC,IACZ,IAAIwjG,EAAyBr6G,KAAK65G,2BAA2BhjG,IACzDksB,EAAAA,EAAAA,IAAas3E,EAAwBsE,EAAajzF,OAClD7U,GAAO4Z,EAAAA,EAAAA,IAAU5Z,EAAOlH,gBAAkB,iBAAmB,mBAAqB3P,KAAK65G,2BAA2B8E,QAI9HC,cAAe,SAASx0F,GACpB,GAAIA,GAAS,EAAG,CACZ,IAAIlU,EAAU,IAAIlW,KAAK21G,cACnBjqF,EAAMxV,EAAQkU,GAAOsB,IACzB1rB,KAAKy+G,oBAAoB/yF,GACzB1rB,KAAK0+G,+BAA+BxoG,EAASkU,GAC7ClU,EAAQ8mC,OAAO5yB,EAAO,GACtBpqB,KAAKupC,cAAcgrE,GAA6Br+F,IAC5C6sB,EAAAA,EAAAA,IAAa/iC,KAAKuiC,OAAOwvE,IAAiCrmF,IAC1D1rB,KAAK69G,sBAIjBgB,iBAAkB,SAASx5F,EAAUy5F,GACjC9+G,KAAKg1G,gBAAkBh1G,KAAKg1G,eAAe/mF,SAC3CjuB,KAAKg1G,eAAiB3vF,EACtBrlB,KAAK++G,4BAA4B1wF,MAAK,KAC9B,aAAehJ,EAASw3C,UAG5BiiD,IACA9+G,KAAKg1G,eAAiB,SACvB5mF,MAAK,KACJ/I,EAAS4I,SACTjuB,KAAKg1G,eAAiB,SAG9B+J,0BAA2B,WACvB,OAAOnjF,EAAAA,EAAAA,OAAQ57B,KAAKi1G,aAExB+J,4BAA6B1uE,EAAAA,GAC7B2uE,iBAAkB,SAAS9wG,EAAQ+wG,EAAWrD,GAC1C77G,KAAKg+G,kBAAmB,GACnB7vG,IAAWA,EAAO6E,kBAAoBksG,IAAcA,EAAUlsG,kBAC/DhT,KAAKi9G,qBAAsB,EAC3Bj9G,KAAKqqC,cAAc,iBAAiB6jE,YACpCluG,KAAK0hC,gBAAgBupC,YAAY,CAC7BxwB,WAAY,SACZkzB,WAAY,CAACkuC,EAAiB77G,KAAKq5G,8BAEhClrG,IAAW+wG,GAClBl/G,KAAK0hC,gBAAgBupC,YAAY,CAC7BxwB,WAAY,SACZkzB,WAAY,MAIxBuvC,mBAAoB,SAASxsE,EAAOyuE,EAAqBC,GACrD,IAAIC,EAAa,KAIb,GAHIF,GACAA,IAEAzuE,EAAO,CACP,IAAI4uE,EAAoB5uE,EAAMnP,KAAK4wE,IAA4BxuD,QAC/DzU,EAAAA,sBAAoClvC,KAAMs/G,GAE9Ct/G,KAAKu/G,qBAAuB,MAE5B3lB,GAAAA,EAAAA,OAAeqR,KAAOrR,GAAAA,EAAAA,OAAemX,QACrCsO,KAEIr/G,KAAKu/G,sBACLv/G,KAAKu/G,uBAETtsE,aAAajzC,KAAK+3G,sBACdqH,IACAp/G,KAAKu/G,qBAAuBJ,GAEhCn/G,KAAK+3G,qBAAuB/kE,WAAWqsE,KAG/CG,kBAAmB,SAASL,EAAqBM,EAAWL,GACxD,IAAIv5E,EAAW7lC,KAAK+lC,QAAQ,YACxB25E,EAAkB1/G,KAAK05G,6BAC3B+F,EAAYA,GAAa55E,GAAYA,EAASoa,gBAAgBjgD,KAAKq5G,0BAA2BqG,GAC1FD,GACAz/G,KAAKk9G,mBAAmBuC,EAAWN,EAAqBC,IAGhEhoG,UAAW,SAASm8B,GAChBvzC,KAAK2/G,mBAAmBpsE,IAE5BosE,mBAAoB,SAASpsE,GACzB,IAAI4jE,EAAiBn3G,KAAKuiC,OAAO,WAC7BzrB,EAAe,OAASqgG,QAAkB,IAAWA,OAAiB,EAASA,EAAexiG,MAC9FwB,EAAgB,OAASghG,QAAkB,IAAWA,OAAiB,EAASA,EAAehhG,cAC/Fe,EAAuB,OAASJ,QAAgB,IAAWA,OAAe,EAASA,EAAaI,qBAChG+P,EAAOjnB,KAAK0hC,gBAAgBtkB,QAAQm2B,GACpCv9B,GAAiBhW,KAAKsuE,aAAernD,EAAK2e,SAC9C,GAAI3e,GAAQjR,EACR,GAAKG,GAAkBe,EAEhB,CACH,IAAIC,EAAqBL,GAAgBA,EAAaK,mBAClDyoG,GAAkBnvF,EAAAA,EAAAA,IAAUtZ,IAAuBA,EAAmByQ,OAAS,EACnF4pF,GAAQt6F,EAAsBC,EAAoByoG,GAAiBvxF,MAAKwxF,IAChEA,GACA7/G,KAAK8/G,eAAevsE,WAN5BvzC,KAAK8/G,eAAevsE,IAYhCusE,eAAgB,SAASvsE,GACrB,IAAI+nB,EAAiBt7D,KAAK0hC,gBACtBza,EAAOq0C,EAAel+C,QAAQm2B,GAC9B7nB,EAAMzE,GAAQA,EAAKyE,IACnBmwF,EAAkB77G,KAAKq5G,0BAC3Br5G,KAAKk6D,UACL,IAAIhkD,EAAUlW,KAAK21G,aACfU,EAAYnnE,EAAAA,cAA4BxjB,EAAKxV,GAiBjD,OAhBImgG,GAAa,EACTngG,EAAQmgG,GAAWvnG,OAAS6iG,GAC5B3xG,KAAK4+G,cAAcvI,GAEnBr2G,KAAKq8G,WAAW,CACZ3wF,IAAKA,EACL5c,KAAM8iG,KAId5xG,KAAKq8G,WAAW,CACZ3wF,IAAKA,EACL0nE,QAASnsE,EAAKvX,KACdZ,KAAM8iG,KAGP5xG,KAAK+/G,gBAAgBxsE,EAAUsoE,IAE1CkE,gBAAiB,SAASxsE,EAAUsoE,GAChC,OAAO77G,KAAKu+G,gBAEhB/mG,YAAa,SAAS+7B,GAClB,IAAI+nB,EAAiBt7D,KAAK0hC,gBACtBza,EAAOq0C,EAAel+C,QAAQm2B,GAC9BsoE,EAAkB77G,KAAKq5G,0BACvB3tF,EAAMzE,GAAQA,EAAKyE,IACnBxV,EAAUlW,KAAK21G,aACnB,GAAI1uF,EAAM,CACN,IAAIovF,EAAYnnE,EAAAA,cAA4BxjB,EAAKxV,GACjD,GAAImgG,GAAa,EAAG,CAChB,IACI3mG,KAAMA,GACNwG,EAAQmgG,IACR9nB,EAAAA,EAAAA,IAAc7+E,GACd1P,KAAK4+G,cAAcvI,GAEnBr2G,KAAKq8G,WAAW,CACZ3wF,IAAKA,EACL5c,KAAM+kG,KAGdv4C,EAAe2P,YAAY,CACvBxwB,WAAY,SACZkzB,WAAY,CAACkuC,EAAiBtoE,QAK9CysE,cAAe,WACX,IAAIC,EAAiB,CACjBrqG,QAAQ,EACR6Y,QAAS,KACTvY,QAAS,IAAIlW,KAAK21G,eAEtB31G,KAAK2qC,cAAc,WAAYs1E,GAC/B,IAAI7yF,EAAI,IAAIC,EAAAA,GAUZ,OATAuO,EAAAA,EAAAA,KAAK0yD,EAAAA,EAAAA,IAAY2xB,EAAexxF,UAAUJ,MAAK,KAC3CjB,EAAEe,QAAQ8xF,MACX7xF,MAAKgpD,IACJo9B,GAAqBpnF,GACrBptB,KAAKy2G,uBAAuBr/B,GAC5BhqD,EAAEe,QAAQ,CACNvY,QAAQ,OAGTwX,GAEX8yF,sBAAuB,SAASl2E,EAAYhf,EAAQ8zF,GAChD,GAAI9+G,KAAK8lC,UAAUq6E,UACf,OAAO,KAEX,IAAI96F,EAAW,IAAIgI,EAAAA,GAWnB,OAVArtB,KAAK2qC,cAAcX,EAAYhf,IAC/B4Q,EAAAA,EAAAA,KAAK0yD,EAAAA,EAAAA,IAAYtjE,EAAOpV,SAASyY,MAAM,SAASzY,GACxCA,EACAo9B,YAAY,WACR3tB,EAAS8I,QAAQ,aAGrB2wF,EAAK9zF,GAAQqD,KAAKhJ,EAAS8I,SAASC,KAAKomF,GAAqBnvF,OAElE+I,KAAKomF,GAAqBnvF,IACvBA,GAEX+6F,gBAAiB,SAAShmD,EAAW1pC,EAAS2vF,EAAanqG,GACvD,IAAImtD,EAAQrjE,KAAK0hC,gBAAgB2hC,SACjCjyC,EAAAA,EAAAA,IAAKlb,GAAS,CAACkU,EAAOvT,KAClB,IAMIwO,EACA2F,EAPAooE,EAAUpzF,KAAKk2G,YAAYr/F,EAAO6U,MAElChc,KAAMA,EACNZ,KAAMA,GACN+H,EACAypG,GAAarxE,EAAAA,EAAAA,GAAS,GAAIp4B,GAG9B,IAAI7W,KAAKugH,oBAAoB1pG,EAAQuT,GAArC,CAGA,OAAQtb,GACJ,KAAK8iG,GACD5mF,EAAS,CACLtb,KAAM0jF,EACN1nE,IAAK7U,EAAO6U,IACZ9V,QAAQ,GAEZyP,EAAWrlB,KAAKkgH,sBAAsB,gBAAiBl1F,GAAS,WAC5D,OAAOq4C,EAAM/gC,OAAOzrB,EAAO6U,KAAK2C,MAAM,SAAS3C,GAC3C20F,EAAYh4F,KAAK,CACbvZ,KAAM,SACN4c,IAAKA,UAIjB,MACJ,KAAKimF,GACD3mF,EAAS,CACLtb,KAAMA,EACNkG,QAAQ,GAEZyP,EAAWrlB,KAAKkgH,sBAAsB,iBAAkBl1F,GAAS,WAC7D,OAAOq4C,EAAMm9C,OAAOx1F,EAAOtb,MAAM2e,MAAM,SAAS3e,EAAMgc,IAC9C+E,EAAAA,EAAAA,IAAU/E,KACV40F,EAAW50F,IAAMA,GAEjBhc,IAAQygB,EAAAA,EAAAA,IAASzgB,IAASA,IAASsb,EAAOtb,OAC1C4wG,EAAW5wG,KAAOA,GAEtB2wG,EAAYh4F,KAAK,CACbvZ,KAAM,SACNY,KAAMA,EACN0a,MAAO,UAInB,MACJ,KAAKypF,GACD7oF,EAAS,CACLy1F,QAAS/wG,EACT0jF,QAASA,EACT1nE,IAAK7U,EAAO6U,IACZ9V,QAAQ,GAEZyP,EAAWrlB,KAAKkgH,sBAAsB,gBAAiBl1F,GAAS,WAC5D,OAAOq4C,EAAMpmB,OAAOpmC,EAAO6U,IAAKV,EAAOy1F,SAASpyF,MAAM,SAAS3e,EAAMgc,GAC7Dhc,IAAQygB,EAAAA,EAAAA,IAASzgB,IAASA,IAASsb,EAAOy1F,UAC1CH,EAAW5wG,KAAOA,GAEtB2wG,EAAYh4F,KAAK,CACbvZ,KAAM,SACN4c,IAAKA,EACLhc,KAAMA,UAM1B,GADAwG,EAAQkU,GAASk2F,EACbj7F,EAAU,CACV,IAAIq7F,EAAe,IAAIrzF,EAAAA,GACvBhI,EAASmI,QAAQ,SAAS9d,GACtBghB,EAAQrI,KAAK,CACTqD,IAAK7U,EAAO6U,IACZ1C,OAAQtZ,OAEZ8d,OAAOkzF,EAAavyF,SACxBisC,EAAU/xC,KAAKq4F,EAAajyF,iBAIxCkyF,sBAAuB,SAASzqG,EAASmgG,GACrC,IAAIx/F,EAASX,EAAQmgG,GAMrB,OALK,OAASx/F,QAAU,IAAWA,OAAS,EAASA,EAAO/H,QAAU8iG,IAC9DyE,GAAa,GACbngG,EAAQ8mC,OAAOq5D,EAAW,IAG3B,GAEXuK,eAAgB,SAAS1qG,EAASmgG,EAAWzgG,GACzC,IAAIiB,EAASX,EAAQmgG,GACrB,IAAKzgG,IAAWiB,GAAUA,EAAO/H,OAAS8iG,GACtC,OAAO5xG,KAAK6gH,mBAAmB3qG,EAASmgG,GAAYzgG,IAAWiB,IAGvEgqG,mBAAoB,SAAS3qG,EAASmgG,GAIlC,OAHIA,GAAa,GACbngG,EAAQ8mC,OAAOq5D,EAAW,IAEvB,GAEXyK,2BAA4B,SAASpwF,GAIjC,IAHA,IAAIqwF,GAAe,EACf7qG,EAAU,IAAIlW,KAAK21G,cACnBqL,EAAgB9qG,EAAQ0R,OACnBiQ,EAAI,EAAGA,EAAInH,EAAQ9I,OAAQiQ,IAAK,CACrC,IAAIu/C,EAAM1mD,EAAQmH,GAAG7O,OACjBpT,EAAS,WAAawhE,EACtBi/B,EAAYnnE,EAAAA,cAA4Bxe,EAAQmH,GAAGnM,IAAKxV,GACxDW,EAASX,EAAQmgG,GACjB4K,EAAU7pC,GAAOA,aAAennD,MACpC,GAAIgxF,GAQA,GAPIpqG,GACA7W,KAAKg2G,iBAAiB,CAClBtqF,IAAK7U,EAAO6U,IACZoC,MAAOspD,IAGfp3E,KAAKy2G,uBAAuBr/B,GACxBp3E,KAAK2gH,sBAAsBzqG,EAASmgG,GACpC,WAEGr2G,KAAK4gH,eAAe1qG,EAASmgG,EAAWzgG,KAC/CmrG,GAAgBnrG,GAMxB,OAHIM,EAAQ0R,OAASo5F,GACjBhhH,KAAKupC,cAAcgrE,GAA6Br+F,GAE7C6qG,GAEXG,wBAAyB,SAAShrG,IAC9Bkb,EAAAA,EAAAA,IAAKlb,GAAS,CAAC8d,EAAGzD,KACd,IACI7gB,KAAMA,EACNgc,IAAKA,EACL5c,KAAMA,GACNyhB,EACA0lF,EAAej2G,KAAKg2G,iBAAiB,CACrCtqF,IAAKA,IAELV,EAAS,CACTU,IAAKA,EACLhc,KAAMA,GAKV,OAHIumG,EAAanoF,QACb9C,EAAO8C,MAAQmoF,EAAanoF,OAExBhf,GACJ,KAAK8iG,GACD5xG,KAAK2qC,cAAc,gBAAgB/e,EAAAA,EAAAA,GAAO,GAAIZ,EAAQ,CAClDtb,KAAMumG,EAAa7iB,WAEvB,MACJ,KAAKue,GACD3xG,KAAK2qC,cAAc,gBAAiB3f,GACpC,MACJ,KAAK6oF,GACD7zG,KAAK2qC,cAAc,eAAgB3f,OAG/ChrB,KAAK2qC,cAAc,UAAW,CAC1Bz0B,QAASA,KAGjBqoG,aAAc,WACV,IAAIl5F,EAAW,IAAIgI,EAAAA,GAqBnB,OApBArtB,KAAK++G,4BAA4B1wF,MAAK,KAC9BruB,KAAKmhH,WACLnhH,KAAKohH,kBAAkB/7F,IAG3BuW,EAAAA,EAAAA,IAAK57B,KAAKugH,uBAAuBlyF,MAAKzY,IAClC,GAAIA,EACA5V,KAAKohH,kBAAkB/7F,EAAU,CAC7BzP,OAAQA,QAFhB,CAMA5V,KAAKqhH,SAAU,EACf,IAAI//F,EAAU,GACdthB,KAAKshH,mBAAmBhgG,GAASkM,QAAO,KACpCxtB,KAAKqhH,SAAU,EACf//F,EAAQigG,mBAAqBvhH,KAAKw/G,uBACnCnxF,KAAKhJ,EAAS8I,SAASC,KAAK/I,EAAS4I,YACzCG,KAAK/I,EAAS4I,WAClBG,KAAK/I,EAAS4I,QACV5I,EAASoJ,WAEpB2yF,kBAAmB,SAAS/7F,GACxB,IACIzP,OAAQA,EACRkY,MAAOA,GACPzC,UAAUzD,OAAS,QAAK,IAAWyD,UAAU,GAAKA,UAAU,GAAK,IACrEuQ,EAAAA,EAAAA,IAAK57B,KAAKwhH,mBAAmB5rG,IAASyY,MAAM,WACxChJ,EAAS8I,QAAQL,MACjBM,KAAK/I,EAAS4I,SAEtBqzF,mBAAoB,SAAShgG,GACzB,IAAIoP,EAAU,GACV0pC,EAAY,GACZimD,EAAc,GACd/kD,EAAiBt7D,KAAK0hC,gBACtBr6B,EAAai0D,EAAej0D,aAC5B2hB,EAAS,IAAIqE,EAAAA,GA6BjB,OA5BAuO,EAAAA,EAAAA,IAAK57B,KAAKggH,iBAAiB3xF,MAAKqyC,IAC5B,IACI9qD,OAAQA,EACRM,QAASA,GACTwqD,EACJ,OAAI9qD,EACOoT,EAAOmF,UAAUM,WAE5BzuB,KAAKogH,gBAAgBhmD,EAAW1pC,EAAS2vF,EAAanqG,GAClDkkD,EAAUxyC,QACV,OAASvgB,QAAc,IAAWA,GAAsBA,EAAWw/F,gBACnEjrE,EAAAA,EAAAA,OAAQw+B,GAAW/rC,MAAK,KAChBruB,KAAK8gH,2BAA2BpwF,GAChC1wB,KAAKyhH,WAAWpB,EAAanqG,EAAS8S,IAEtC,OAAS3hB,QAAc,IAAWA,GAAsBA,EAAW0/F,aACnE/9E,EAAOmF,cAEZC,MAAKN,IACJ,OAASzmB,QAAc,IAAWA,GAAsBA,EAAW0/F,aACnE/9E,EAAOmF,QAAQL,MAEZ9E,EAAOwE,QAAO,KACjBlM,EAAQigG,mBAAoB,KAC7B9yF,gBAEPzuB,KAAK0hH,cAAc14F,OACpBoF,KAAKpF,EAAOiF,QACRjF,EAAOyF,WAElBkzF,iBAAkB,SAASzrG,GACvBlW,KAAK69G,qBAET4D,WAAY,SAASpB,EAAanqG,EAASmP,GACvC,IAAIhe,EAAarH,KAAK0hC,gBAAgBr6B,aACtCrH,KAAK2hH,iBAAiBzrG,GACtB,OAAS7O,QAAc,IAAWA,GAAsBA,EAAW0/F,aACnE/mG,KAAK4hH,sBAAsBvB,EAAanqG,EAASmP,IAErDq8F,cAAe,SAAS14F,GACpBhpB,KAAK2qC,cAAc,UAAW,CAC1Bz0B,QAAS,KAEblW,KAAKohH,kBAAkBp4F,IAE3B44F,sBAAuB,SAASvB,EAAanqG,EAASmP,GAClD,IAAIi2C,EAAiBt7D,KAAK0hC,gBACtBjrB,EAAczW,KAAKuiC,OAAO,uBAC1Bs/E,EAAgB,YAAcprG,GAAe,YAAcA,EAC1DorG,GACDvmD,EAAejzC,KAAKg4F,IAExBzkF,EAAAA,EAAAA,IAAK0/B,EAAepB,QAAQ,CACxBxtD,UAAWm1G,EACXziD,OAAQyiD,EACRzjD,KAAM,YAAc3nD,EACpB+8D,YAAaxzE,KAAKuiC,OAAO,yBACzB/U,QAAO,KACPxtB,KAAKkhH,wBAAwBhrG,MAC9BmY,MAAK,KACJruB,KAAKohH,kBAAkB/7F,MACxB+I,MAAKN,IACJ9tB,KAAKohH,kBAAkB/7F,EAAU,CAC7ByI,MAAOA,QAInBqzF,SAAU,WACN,OAAOnhH,KAAKqhH,SAEhBlM,kBAAmB,WACf,IAAI2M,EAAsB9hH,KAAK+hH,uBAC3BnrG,EAAW5W,KAAKuiC,OAAO,oBACvBnzB,EAAWkkG,IAAsB18F,EAAW,IAAM28F,GAAgC,IACtFvzG,KAAK62C,mBAAmB2d,iBAAiB,CACrC1lD,KAAM,UACNu4B,QAAS,OACT95B,QAASu0G,EACT1yG,SAAUA,EACV5B,MAAO,OACPyC,UAAW,SACXoB,aAAcrR,KAAK03G,8BACnBzlG,cAAe,UAEnBjS,KAAK62C,mBAAmB6J,aAAa,eAAgB,CACjDnzC,QAASu0G,EACT1yG,SAAUA,KAGlB2yG,qBAAsB,WAClB,IAAI5K,EAAiBn3G,KAAKuiC,OAAO,WACjC,OAAO40E,EAAenhG,eAE1BgsG,sBAAuB,WACnB,IAAIngC,EAAa7hF,KAAK6hF,aAClBogC,GAAmBxxF,EAAAA,EAAAA,IAAUzwB,KAAKuiC,OAAO,uBAC7C,QAAS0/E,GAAoBpgC,IAEjCuzB,mBAAoB,WAChB,IAAIx/B,EAAc51E,KAAK+lC,QAAQ,eAC3Bm8E,EAAmBliH,KAAKgiH,wBACxBpsC,IACAA,EAAYqV,uBAAuB,aAAci3B,GACjDtsC,EAAYqV,uBAAuB,eAAgBi3B,KAG3DC,eAAgB,SAASzhF,GACrBA,GAAYA,EAASoB,SAAS6xE,KAElCyO,gCAAiC9xE,EAAAA,GACjCooE,eAAgB,WACZ,IAAIxiG,EAAUlW,KAAK21G,aACf3qF,EAAS,CACTpV,QAAQ,EACRM,QAASA,GAEblW,KAAK2qC,cAAc,kBAAmB3f,GACjCA,EAAOpV,SACR5V,KAAKqiH,sBACLriH,KAAK2qC,cAAc,iBAAkB,CACjCz0B,QAASA,MAIrBmsG,oBAAqB,WACjB,IAAI9uE,EAAWvzC,KAAKq5G,0BACpBr5G,KAAKsiH,wBACLtiH,KAAKipC,OACLjpC,KAAK61G,eACL71G,KAAKo4G,uBACLp4G,KAAKq4G,mBACLr4G,KAAKuiH,qBAAqBhvE,IAE9BgvE,qBAAsB,SAAShvE,GAC3B,IAAI+nB,EAAiBt7D,KAAK0hC,gBAC1B45B,EAAe2P,YAAY,CACvB/+D,mBAAoBlM,KAAKuiC,OAAO,yBAGxCigF,eAAgBlyE,EAAAA,GAChBmyE,YAAa,WACT,OAAOziH,KAAK6hF,cAEhB5kC,OAAQ,SAASxC,GACb,IAAI6gB,EAAiBt7D,KAAK0hC,gBACtB45B,GAAkBt7D,KAAK84G,aAAex9C,EAAeh5C,cACjD,YAAcm4B,GACdz6C,KAAKk6D,SAAQ,GAEjBl6D,KAAK84G,WAAax9C,EAAeh5C,aAErCtiB,KAAKo1G,sBAETsN,iCAAkC,SAAS/8E,EAAKg9E,GAC5C,OAAOA,EAAiB,GAAK,CAACh9E,EAAI4N,WAEtCqvE,YAAa,SAASv9F,GACdrlB,KAAKi1G,WAAW5qF,QAAQhF,GAAY,IACpCrlB,KAAKi1G,WAAW5sF,KAAKhD,GACrBA,EAASmI,QAAO,KACZ,IAAIpD,EAAQpqB,KAAKi1G,WAAW5qF,QAAQhF,GAChC+E,GAAS,GACTpqB,KAAKi1G,WAAWj4D,OAAO5yB,EAAO,QAK9Cy4F,eAAgB,SAASvhG,EAAShhB,EAAOmP,GACrC,IAAIqzG,EACArC,EAAU,GACVrtB,EAAU,QAAU0vB,EAAexhG,EAAQqkB,WAAQ,IAAWm9E,OAAe,EAASA,EAAapzG,KACnGqzG,EAASzhG,EAAQoK,IACjBrG,EAAW,IAAIgI,EAAAA,GACnB,QAAI,IAAW01F,EAAQ,CACnBzhG,EAAQhhB,MAAQA,EAChB,IAAI0iH,GAAqB10B,EAAAA,EAAAA,IAAYhtE,EAAQnT,OAAO4E,aAAa0tG,EAASngH,GAAOsrB,EAAAA,EAAAA,IAAO,EAAM,GAAIwnE,GAAU3jF,IAC5GuzG,EAAmB30F,MAAM,WACrBhJ,EAAS8I,QAAQ,CACbze,KAAM+wG,EACN/0F,IAAKq3F,EACL3vB,QAASA,EACTtkF,KAAM+kG,QAEVzlF,KAAKomF,GAAqBnvF,IAAW+I,MAAKgpD,GAAOp3E,KAAKy2G,uBAAuBr/B,MAC7E3mD,EAAAA,EAAAA,IAAUhhB,IAAS6R,EAAQnT,OAAO41B,kBAClCziB,EAAQnT,OAAO41B,gBAAgBzjC,GAASmP,GAE5CzP,KAAKijH,iBAAiB3hG,GACtBthB,KAAK4iH,YAAYv9F,GAErB,OAAOA,GAEX49F,iBAAkB,SAAS3hG,GACvB,GAAIA,EAAQoa,OAAQ,CAChB,IAAI4/B,EAAiBt7D,KAAK0hC,gBACtB6R,EAAW+nB,EAAe0X,iBAAiB1xD,EAAQoK,KACnDia,EAAM21B,EAAe4V,iBAAiB39B,GACtC5N,IACArkB,EAAQoa,OAASiK,EAAIjK,QAEzBpa,EAAQoa,OAAOpa,EAAQke,aAAele,EAAQhhB,QAGtD4iH,iBAAkB,SAAS5hG,EAAShhB,EAAOmP,EAAM0zG,GAC7C,IAAIJ,EAASzhG,EAAQoK,IACjBrG,EAAW,IAAIgI,EAAAA,GAanB,YAZI,IAAW01F,GACX/iH,KAAK0hC,gBAAgBqqC,UAAU,SAE/BzqD,EAAQnT,OAAO4E,aACf/S,KAAK6iH,eAAevhG,EAAShhB,EAAOmP,GAAM4e,MAAKrD,KAC3C4Q,EAAAA,EAAAA,IAAK57B,KAAKstE,aAAahsD,EAAS0J,EAAQm4F,IAAiB31F,QAAO,KAC5DnI,EAAS8I,gBAIjB9I,EAAS8I,UAEN9I,EAASoJ,WAEpB20F,gCAAiC,SAAS9hG,GACtC,GAAIthB,KAAKyiH,gBAAkBziH,KAAKy5G,WAAWn4F,EAAQiyB,SAAUjyB,EAAQke,aAGjE,OAFAx/B,KAAKw/G,oBACLx/G,KAAKqjH,eAAe/hG,EAAQqkB,KAAK,IAC1B,GAGf29E,eAAgB,SAASn1G,GACrB,IAAIyoC,EAAiB52C,KAAK62C,mBAAmBC,oBACxC3oC,IACDA,EAASnO,KAAKw9G,kBAElB,IAAI+F,EAAuBp1G,GAAUA,EAAO4E,eAAiB5E,EAAOmkD,oBAChEkxD,EAA6B5sE,EAAezgB,MAAKomC,GAAiBA,EAAcxrD,qBAAuBwrD,EAAcnG,4BACzH,OAAOmtD,GAAwBC,GAEnCl2C,aAAc,SAAShsD,EAAS0J,EAAQm4F,GACpC,IAAIM,GAAgBx0E,EAAAA,EAAAA,GAAS,GAAI3tB,EAAS,CACtC6hG,eAAgBA,IAIpB,OAFAnjH,KAAKq8G,WAAWrxF,EAAQy4F,GACxBzjH,KAAKo1G,qBACEp1G,KAAK0jH,iBAAiBpiG,EAASmiG,EAAcN,iBAExDO,iBAAkB,SAASpiG,EAAS6hG,GAChC,IAAII,EAAuBjiG,EAAQnT,OAAO4E,eAAiBuO,EAAQnT,OAAOmkD,oBACtE3sB,EAAMrkB,EAAQqkB,IACdA,IACIw9E,GAAkBI,EAClBvjH,KAAKqjH,eAAe19E,EAAKw9E,EAAgBI,GAClC59E,EAAIsX,QACXtX,EAAIsX,WAIhB0mE,mBAAoB,SAASh+E,EAAKg9E,EAAgBY,GAC9CvjH,KAAK0hC,gBAAgBupC,YAAY,CAC7BxwB,WAAY,SACZkzB,WAAY3tE,KAAK0iH,iCAAiC/8E,EAAKg9E,MAG/DU,eAAgB,SAAS19E,EAAKw9E,EAAgBI,GACtCJ,EACAnjH,KAAK4jH,sBAAsBj+E,EAAKw9E,EAAgBI,GAEhDvjH,KAAK6jH,oBAAoBl+E,EAAK49E,IAGtCK,sBAAuB,SAASj+E,EAAKw9E,EAAgBI,GACjDvjH,KAAK2jH,mBAAmBh+E,GAAMw9E,EAAgBI,GAC9CvjH,KAAK8jH,6BAA6Bn+E,EAAK49E,GAClCJ,GACDnjH,KAAKw/G,qBAGbqE,oBAAqB,SAASl+E,EAAK49E,GAC/B,IAAIl+F,EAAW,IAAIgI,EAAAA,GACnBrtB,KAAK4iH,YAAYv9F,GACjB2tB,YAAW,KACP,IAAIu8D,GAAkB1tE,EAAAA,EAAAA,GAAE0T,GAAAA,WAAAA,oBACpB/V,EAAcx/B,KAAKugF,UAAU9iC,aAAa8xD,EAAiB5pE,EAAI4N,UAC/DpN,EAAiBopE,EAAgB5vE,IAAI,GACrC6G,EAAiB0I,EAAAA,kBAAgC/I,GAGrD,GAFAnmC,KAAK2jH,mBAAmBh+E,GAAK,EAAO49E,GACpCvjH,KAAK8jH,6BAA6Bn+E,EAAK49E,GACnC/jF,GAAe,EAAG,CAClB,IAAIukF,EAAe/jH,KAAKugF,UAAUtgC,gBAAgBta,EAAI4N,SAAU/T,GAChEx/B,KAAKk9G,mBAAmB6G,GAAc,KAClC/wE,YAAW,KACP7M,EAAiBoP,GAAAA,WAAAA,mBACb/O,EAAeJ,gBAAkB,GACjC8I,EAAAA,kBAAgC/I,EAAgBK,SAKhEnhB,EAAS8I,cAGjB21F,6BAA8BxzE,EAAAA,GAC9B+rE,WAAY,SAAS2H,EAAc1iG,GAC/B,IAAI2iG,EACAt+E,EAAM,OAASrkB,QAAW,IAAWA,OAAU,EAASA,EAAQqkB,IAChEzvB,EAAU,IAAIlW,KAAK21G,cACnBvrF,EAAQ8kB,EAAAA,cAA4B80E,EAAat4F,IAAKxV,GACtDkU,EAAQ,IACRA,EAAQlU,EAAQ0R,OAChB5nB,KAAKg2G,iBAAiB,CAClBtqF,IAAKs4F,EAAat4F,IAClB0nE,QAAS4wB,EAAa5wB,iBAEnB4wB,EAAa5wB,QACpBl9E,EAAQmS,KAAK27F,IAEjB,IAAIntG,GAASo4B,EAAAA,EAAAA,GAAS,GAAI/4B,EAAQkU,IAkBlC,OAjBIvT,IACImtG,EAAat0G,OACbmH,EAAOnH,MAAO4mG,EAAAA,GAAAA,IAAwBz/F,EAAOnH,KAAMs0G,EAAat0G,OAE9DmH,EAAO/H,MAASk1G,EAAat0G,OAASs0G,EAAal1G,OACrD+H,EAAO/H,KAAOk1G,EAAal1G,MAE3B62B,IACAA,EAAIytD,QAAUpzF,KAAKk2G,YAAYvwE,EAAIja,KACnCia,EAAIj2B,MAAO4mG,EAAAA,GAAAA,IAAwB3wE,EAAIj2B,KAAMs0G,EAAat0G,QAGlEwG,EAAQkU,GAASvT,EACjB7W,KAAKupC,cAAcgrE,GAA6Br+F,GAC5CoL,GAAWzK,KAAY,QAAUotG,EAAmBjkH,KAAK21G,oBAAiB,IAAWsO,OAAmB,EAASA,EAAiB75F,MAClI9I,EAAQ6hG,gBAAiB,GAEtBtsG,GAEXqtG,yBAA0B,SAASntE,EAAa5oC,GAC5C,OAAOA,EAAOsD,kBAAoBzR,KAAKy1G,6BAE3C0O,kBAAmB,SAAS7iG,GACxB,IAEI9R,EAIA40G,EANAj2G,EAASmT,EAAQnT,OACjBolC,EAAWjyB,EAAQqkB,KAAOrkB,EAAQqkB,IAAI4N,SAEtC8wE,EAAYrkH,KAAK23G,qBACjB2M,EAAetkH,KAAKuqG,UAAUh3D,GAC9B4hC,EAAgBn1E,KAAKy5G,WAAWlmE,EAAUjyB,EAAQke,aAEtD,KAAKrxB,EAAO6E,kBAAoB7E,EAAO4E,eAAiBuxG,GAAgBn2G,EAAO+B,cAAgBilE,KAAoB,SAAW7zD,EAAQwiB,SAAW,mBAAqBxiB,EAAQwiB,SAAa31B,EAAOk5B,QAmBvL,WAAal5B,EAAOk5B,SAAW,WAAa/lB,EAAQwiB,SAAWwgF,IACtE90G,EAAW,OAASxP,WAAQ,IAAWA,UAAO,EAASA,KAAKukH,oBAAoBjjG,QApBuH,CACvM,IAAIrL,EAAgBjW,KAAKiW,cAAcqL,MACjCrL,GAAiBquG,IAAiBn2G,EAAO+B,cAAgBilE,KAAmBmvC,GAAiBD,IAC3Fl2G,EAAO6E,mBAAqBqxG,IAC5BD,EAAsB,CAClBxuG,QAAQ,EACR8V,IAAKpK,EAAQqkB,IAAIC,cAAW,EAAStkB,EAAQqkB,IAAIja,IACjDhc,KAAM4R,EAAQqkB,IAAIj2B,KAClBvB,OAAQA,GAEZnO,KAAKm9G,gBAAgBiH,IAEpBA,GAAwBA,EAAoBxuG,SAC7C0L,EAAQ61E,SAAW,CAAC72F,EAAOmP,KACvBzP,KAAKkjH,iBAAiB5hG,EAAShhB,EAAOmP,MAIlDD,EAAWrB,EAAOsD,kBAAoBzR,KAAKy1G,4BAI/C,OAAOjmG,GAEXioG,cAAe,SAAS/3E,EAAYhsB,EAAQ4N,EAASzK,GACjD,IAAIxH,EAAO8kG,GAAgBzgG,EAAOpE,MAC9BsH,EAAW5W,KAAKuiC,OAAO,oBACvBiiF,EAAgCxkH,KAAKuiC,OAAO,iCAC5CkiF,GAAU5iF,EAAAA,EAAAA,GAAE,OAAOuI,KAAK,OAAQ,KAAKtI,SAASqxE,IAAYrxE,SAASpuB,EAAOtE,UAC9E,GAAIsE,EAAOlE,UAAYg1G,EACnBxkH,KAAKugF,UAAUlnC,eAAe3Z,EAAYhsB,EAAOlE,SAAU8R,GAAS,OACjE,CACH,GAAI5N,EAAOlE,SACPi1G,GAAU5iF,EAAAA,EAAAA,GAAE,UAAUC,SAASpuB,EAAOtE,eACnC,GAAIwH,GAAYvH,GAAQqE,EAAOrE,KAAM,CACxCA,EAAOqE,EAAOrE,MAAQA,EACtB,IAAIq1G,EAAWC,GAAAA,EAA6Bt1G,GACxC,UAAYq1G,GAAY,QAAUA,EAClCD,EAAUE,GAAAA,EAA4Bt1G,GAAMyyB,SAASpuB,EAAOtE,UAE5Dq1G,EAAQ3iF,SAAS,WAAa,WAAa4iF,EAAW,IAAM,KAAOr1G,GAAM+6B,KAAK,QAAS12B,EAAOjE,MAElGg1G,EAAQ3iF,SAAS,gBACjBpC,EAAWoC,SAASyxE,IACpB,IAAIqR,EAAmB5kH,KAAK6kH,6BAA6BnxG,EAAOpE,MAChEs1G,GAAoBH,EAAQr6E,KAAK,aAAcX,EAAAA,EAAAA,OAA2Bm7E,SAE1EH,EAAQh1G,KAAKiE,EAAOjE,OAEpBghB,EAAAA,EAAAA,IAAU/c,EAAO9K,OACjB67G,EAAQr6E,KAAK,QAAS12B,EAAO9K,MAE7B5I,KAAK+2G,kBAAkBrjG,EAAQ4N,GAC/BmjG,EAAQ3iF,SAAS,qBACTpuB,EAAOlE,WAAYkE,EAAOnE,SAClCq3B,EAAAA,EAAAA,GAAgB69E,GAAS1vC,EAAAA,GAAAA,IAAa,QAAS6+B,IAAoB5zG,KAAK6pC,cAAc,SAASvD,GAC3F,IAAIw+E,EACJ,QAAUA,EAAkBpxG,EAAOnE,eAAY,IAAWu1G,GAA2BA,EAAgB54F,KAAKxY,GAAQkY,EAAAA,EAAAA,GAAO,GAAI0a,EAAG,CAC5HX,IAAKrkB,EAAQqkB,IACbx3B,OAAQmT,EAAQnT,UAEpBm4B,EAAEmE,MAAM4L,iBACR/P,EAAEmE,MAAMo1C,sBAGhBngD,EAAWqR,OAAO0zE,EAAS,UACvB/wG,EAAOlE,UACPxP,KAAKugF,UAAUlnC,eAAeorE,EAAS/wG,EAAOlE,SAAU8R,GAAS,EAAMzK,KAInFguG,2BAA4B,KAAM,CAC9B7Q,KAAM,4BACNxlB,KAAM,mCACN0lB,OAAQ,8BACRD,SAAU,gCACVr+F,OAAQ,uCAEZmvG,kBAAmB,SAASnvC,EAAatmE,EAAMm0B,EAAYtwB,GACvD,IAAI2D,EAAe9W,KAAKuiC,OAAO,kBAAoB,GAC/CyiF,EAA8B,CAC9BC,OAAQnuG,EAAaE,iBACrBw3E,KAAM13E,EAAaQ,eACnBP,OAAQD,EAAaC,QAErB+zB,EAAY,CACZm6E,OAAQ,SACRz2B,KAAM,OACNz3E,OAAQ,UACTzH,GACCwtF,EAAWkoB,EAA4B11G,GACvC4yG,GAAoB,SAAWp3E,GAAa,WAAaA,IAAc9qC,KAAKgiH,wBAChF,MAAO,CACHxgG,OAAQ,WACRF,QAAS,CACL9W,cAAe87B,KACXzE,EAAAA,EAAAA,GAAEyE,EAAEnF,SAASW,SAAS8zC,EAAYiU,uBAAuBwpB,GAAoB,IAAMrzG,KAAKqhC,gBAAgByJ,GAAa,aAEzHz7B,KAAM,eAAiBy7B,EACvBvjC,SAAU26G,EACV3yG,QAAS,KACLyjC,YAAW,KACPhzC,KAAKyjC,SAGbh0B,KAAMqtF,EACNl0F,KAAMk0F,GAEVv7E,SAAU,SACVjS,KAAMA,EAAO,SACb8R,SAAU,QACVD,aAAc,OACdhO,UAAWA,IAGnB+xG,mBAAoB,SAAStvC,GACzB,IAAIuhC,EAAiBn3G,KAAKuiC,OAAO,YAAc,GAC3C4iF,EAAc,GAIlB,OAHIhO,EAAephG,aACfovG,EAAY98F,KAAKroB,KAAK+kH,kBAAkBnvC,EAAa,SAAU,SAAU,KAEtEuvC,GAEXC,kBAAmB,SAAS10E,EAAOjB,GAC/B,IAAI41E,EAAerlH,KAAKkvE,eAAez/B,GACnC61E,EAAkBD,GAAgB51E,EAAWthC,OAAO4E,eAAiB/S,KAAKu1G,gBAAkBlD,KAAkB5iE,EAAW9J,IAAI2oC,WACjIg3C,GAAmB50E,EAAM5O,SAAS6xE,KAEtCkJ,gBAAiBvsE,EAAAA,GACjBiwE,oBAAqB,SAAS1pG,GAC1B,GAAIA,KAAW4Z,EAAAA,EAAAA,IAAU5Z,EAAO6U,OAAQ+E,EAAAA,EAAAA,IAAU5Z,EAAO/H,MACrD,OAAO,GAGf0yG,mBAAoBlxE,EAAAA,GACpBgyE,sBAAuBhyE,EAAAA,GACvBi1E,iBAAkB,SAASv7E,EAAY1oB,GACnC,IAAIkkG,EAAkBxlH,KAAKuiC,OAAO,WAAayH,GAO/C,OANIlS,EAAAA,EAAAA,IAAW0tF,KACXA,EAAkBA,EAAgB,CAC9B1/E,UAAW9lC,KAAK8lC,UAChBH,IAAKrkB,EAAQqkB,OAGd6/E,GAEXvvG,cAAe,SAASqL,EAASmkG,GAC7B,IAAI9uG,EAAkB3W,KAAKuiC,OAAO,4BAA8BuxE,GAC5D4R,IAAer6F,UAAUzD,OAAS,KAAIjR,IAAoB8uG,GAAa,SAAWA,GACtF,OAAOC,GAAgB1lH,KAAKulH,iBAAiB,gBAAiBjkG,IAElEtL,cAAe,SAASsL,GACpB,OAAOthB,KAAKulH,iBAAiB,gBAAiBjkG,IAElD4tD,eAAgB,SAASz/B,GACrB,IAAIjQ,EAAciQ,EAAWjQ,YACzB2vC,EAAiB1/B,EAAW9J,MAAQ8J,EAAW9J,IAAIC,SAAW6J,EAAW9J,IAAIjK,OAAS+T,EAAW9J,IAAIwpC,gBACzG,QAASA,QAAkB,IAAWA,EAAe3vC,IAEzDmmF,mBAAoB,WAChB,IAAIC,EAAsB5lH,KAAKq5G,0BAC3B1+D,EAAO36C,KAAK0hC,gBAAgBtkB,QAChC,OAAOwoG,GAAuB,GAAIjrE,EAAKirE,GAAqBhgF,WAzwDjB,IA6wD5CigF,GAAgB,CACvB3/D,eAAgB,WACZ,MAAO,CACH1+C,QAAS,CACLgN,KAAM,MACNiC,YAAa,OACbF,eAAgBu8F,GAChB/8F,aAAa,EACbE,eAAe,EACfD,eAAe,EACfY,UAAU,EACVF,uBAAuB,EACvBP,eAAe,EACfxB,MAAO,CACH0C,QAASoyB,EAAAA,EAAAA,OAA2B,6BACpCnyB,eAAgBmyB,EAAAA,EAAAA,OAA2B,oCAC3ClyB,eAAgBkyB,EAAAA,EAAAA,OAA2B,oCAC3CzyB,iBAAkByyB,EAAAA,EAAAA,OAA2B,sCAC7CxyB,iBAAkBwyB,EAAAA,EAAAA,OAA2B,sCAC7C1yB,OAAQ0yB,EAAAA,EAAAA,OAA2B,4BACnCryB,UAAWqyB,EAAAA,EAAAA,OAA2B,+BACtCjyB,YAAaiyB,EAAAA,EAAAA,OAA2B,iCACxCvyB,qBAAsBuyB,EAAAA,EAAAA,OAA2B,0CACjDtyB,mBAAoB,IAExBb,KAAM,CACF0G,SAAU,GAEdxG,MAAO,GACPG,gBAAiB,QACjBN,WAAY,KACZD,eAAgB,KAChBF,QAAS,IAEbsuG,+BAA+B,IAGvCx2E,YAAa,CACTxmC,QAASqtG,IAEbzmE,UAAW,CACPJ,YAAa,CACTt+B,KAAM,CACFu5B,KAAM,WACFjpC,KAAK8lH,mBAAqB9lH,KAAKqqC,cAAc,WAC7CrqC,KAAKs6B,YAET8kC,OAAQ,SAASsJ,EAAMx8D,GAEnB,OADCA,GAAsBlM,KAAK8lH,mBAAmB5rD,UACxCl6D,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCsoD,YAAa,WACT,IAAI3zE,KAAKqqC,cAAc,WAAW82E,WAGlC,OAAOnhH,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCg4F,eAAgB,SAASjmG,GACrB,IAIQ2oG,EAJJ1vG,EAAarW,KAAKuiC,OAAOwvE,IACzBqK,EAAeltE,EAAAA,cAA4B74B,EAAY+G,GACvDk+F,EAAWl+F,EAAMg/F,GACjBd,IAEAA,EAAShtC,WAAY,EACrB,QAAUy3C,EAAwB/lH,KAAKgmH,uBAAoB,IAAWD,GAAiCA,EAAsB75F,KAAKlsB,KAAMs7G,KAGhJxqC,iBAAkB,SAASj6D,GACvB7W,KAAKs6B,SAASzjB,GACd7W,KAAKqjH,eAAerjH,KAAKod,OAAM,KAEnCmwD,mBAAoB,SAAS12D,GACzB7W,KAAKqjH,eAAexsG,EAAOuG,OAC3Bpd,KAAKs6B,SAASzjB,IAElB22D,kBAAmB,SAAS32D,GACxB7W,KAAKqjH,eAAexsG,EAAOuG,OAC3Bpd,KAAKs6B,SAASzjB,IAElB+1D,cAAe,SAASxvD,EAAOvG,GAE3B,OADAuG,EAAQpd,KAAK8lH,mBAAmBptB,aAAat7E,EAAOvG,GAC7C7W,KAAKs6B,SAASld,EAAOvG,IAEhCq2D,iBAAkB,SAASC,EAAU7rD,GAEjC,OADAthB,KAAK8lH,mBAAmBtL,gBAAgBrtC,EAAU7rD,EAASthB,KAAKotE,oBACzDptE,KAAKs6B,SAAS6yC,EAAU7rD,IAEnC0rD,aAAc,SAAS/lD,EAAM3F,GAMzB,OALA2F,EAAOjnB,KAAKs6B,SAASrT,EAAM3F,GACvB2F,EAAK2e,WACLtkB,EAAQ00B,mBACD/uB,EAAK+uB,WAET/uB,GAEXmoD,yBAA0B,SAASb,EAASE,EAASl7B,EAAU07B,GAC3D,GAAIV,EAAQ3oC,WAAa6oC,EAAQ7oC,UAAY2oC,EAAQosC,UAAYlsC,EAAQksC,QAGzE,OAAO36G,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCwjD,eAAgB,SAASC,EAAQC,EAAQC,EAAiBxvC,EAAayvC,GACnE,IAAIgG,EAAoBj1E,KAAKqqC,cAAc,WACvC4J,EAAO66B,EAAOv9B,OAASu9B,EAAOv9B,MAAM/R,GACpC8uC,EAAY2G,GAAqBA,EAAkBwkC,WAAWzqC,EAAiBxvC,GACnF,QAAIyvC,IAAgBX,QAGhBr6B,IAAQA,EAAK9lC,QAAW8lC,EAAK9lC,OAAO6E,kBAAoBihC,EAAKq6B,YAAcA,IAGxEtuE,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,eAI7C6iB,MAAO,CACHrI,SAAU,CACNoD,KAAM,WACFjpC,KAAKs6B,WACLt6B,KAAK8lH,mBAAqB9lH,KAAKqqC,cAAc,YAEjDoT,aAAc,SAAS/M,EAAO6C,GAC1B,IAAK7C,EAAM/J,GAAG,OAAS4M,GAAY,EAAG,CAClC,IAAIyL,EAAgBh/C,KAAK8/C,gBAAgBvM,GACrCmK,GAAa,EAMjB,OALAtsB,EAAAA,EAAAA,IAAK4tB,GAAgB,SAAS50B,EAAOotB,IAC7B3V,EAAAA,EAAAA,GAAE2V,GAAajW,KAAKmP,GAAO9oB,SAC3B81B,EAAYtzB,MAGbszB,EAEX,OAAO19C,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErC6d,cAAe,WACX,OAAOlpC,KAAKs6B,WAAWxS,OAAO,CAAC,eAEnCy0B,iBAAkB,SAASj7B,GACvB,IAAI9R,EAAWxP,KAAK8lH,mBAAmB3B,kBAAkB7iG,GACzD,OAAO9R,GAAYxP,KAAKs6B,SAAShZ,IAErCgyB,eAAgB,WACZ,OAAQsmD,GAAAA,EAAAA,OAAeqR,KAAOrR,GAAAA,EAAAA,OAAemX,UAAY/wG,KAAKuiC,OAAO,0BAEzEqT,WAAY,SAASjQ,GACjB,IAAI2Q,EAAOt2C,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACrC,GAAIsa,EAAK,CACL,IAAIsgF,IAAiBtgF,EAAIg1E,QACrBuL,IAAkBvgF,EAAIC,SACtBugF,IAAkBxgF,EAAI+0E,SAC1BwL,GAAiB5vE,EAAKxU,SAAS2xE,IAC/B0S,GAAiB7vE,EAAKxU,SAAS4xE,KAC3BwS,GAAiBD,IACjB3vE,EAAKtU,YAAYoxE,IAGzB,OAAO98D,GAEX8vE,yBAA0B,SAAS1lF,GAC/B,IAAI2e,EAAgB3e,EAASqG,QAAQ,SACjCuZ,EAAiBtgD,KAAK29C,mBAC1B,MAAO0B,EAAcz3B,SAAW04B,EAAe18B,OAAOy7B,GAAez3B,OACjE8Y,EAAW2e,EAActY,QAAQ,MACjCsY,EAAgB3e,EAASqG,QAAQ,SAErC,OAAO/mC,KAAKqmH,6BAA6B3lF,IAE7C2lF,6BAA8B,SAAS3lF,GACnC,IAAI8jB,EAAiB9jB,EAASqG,QAAQ,IAAMgL,GAAY,oCACxD,OAAO/xC,KAAKy9C,aAAa+G,IAE7B8hE,iBAAkB,SAAShgF,EAAGm/E,GAC1B,IAAIxwC,EAAoBj1E,KAAK8lH,mBACzBthE,GAAiB3iB,EAAAA,EAAAA,GAAEyE,EAAEmE,MAAM5N,QAC3B2C,EAAcx/B,KAAKomH,yBAAyB5hE,GAC5C7e,EAAM3lC,KAAK0hC,gBAAgBtkB,QAAQkpB,EAAEiN,UACrCt9B,EAAgBg/D,EAAkBh/D,cAAc,CAChD0vB,IAAKA,GACN8/E,IAAc9/E,GAAOA,EAAIC,SACxBz3B,EAASnO,KAAK62C,mBAAmBC,oBAAoBtX,GACrD+mF,EAAetxC,EAAkBwkC,WAAWnzE,EAAEiN,SAAU/T,GACxDtvB,EAAe+F,GAAiB9H,IAAWA,EAAO+B,cAAgBq2G,GAClE5vG,EAAkB3W,KAAKuiC,OAAO,4BAA8B,QAChE,GAAI,SAAWkjF,EAIX,OAHK7rB,GAAAA,EAAAA,OAAeqR,MAAOrR,GAAAA,EAAAA,OAAemX,SAAawV,IACnDnV,EAAAA,GAAAA,MAEGjjG,GAAUA,EAAO6E,kBAAoB9C,GAAgB+kE,EAAkBuxC,SAASlgF,EAAEiN,SAAU/T,GAEvG,GAAI,UAAYimF,GAAa,aAAe9uG,IAAoB4vG,EAAc,CAC1E,IAAIE,EAAsB,OAAS9gF,QAAO,IAAWA,OAAM,EAASA,EAAIC,SACxEqvC,EAAkByxC,eAAc,EAAOD,GAE3C,OAAIv2G,GAAgBu1G,IAAc9uG,EACvBs+D,EAAkBuxC,SAASlgF,EAAEiN,SAAU/T,IAAgBy1C,EAAkBs1B,UAAUjkE,EAAEiN,eADhG,GAIJI,gBAAiB,SAASrN,GACtBtmC,KAAK2mH,oBAAsB3zE,YAAW,KAClChzC,KAAKsmH,iBAAiBhgF,EAAG,YAGjCsN,UAAW,SAAStN,GAChB,IAAIsgF,GAAa/kF,EAAAA,EAAAA,GAAEyE,EAAEmN,YAAY7D,SAAS5vC,KAAKqhC,gBAAgBqwE,KAC/DprE,EAAEmE,MAAMwnE,IAAyBjyG,KAAK8lC,UACjC9lC,KAAKsmH,iBAAiBhgF,EAAG,UAAasgF,GACvC5mH,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAGlCwoB,aAAc,SAASvN,GACdtmC,KAAKsmH,iBAAiBhgF,EAAG,aAC1BtmC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAGlCgqB,cAAe,SAAS3E,EAAOjB,GAC3B,IAAIwlC,EAAoBj1E,KAAK8lH,mBACzBnR,IAAkBllE,EAAWthC,OAAOk5B,QACpCw/E,EAAiBp3E,EAAW0nD,SAC5BoT,EAAYt1B,EAAkBs1B,UAAU96D,EAAW8D,UACnD+6B,EAAYmmC,GAAclK,EAAW96D,GACzC,GAAIilE,GAAoCnK,EAAW96D,GAAa,CAC5D,IAAIx/B,EAAYw/B,EAAWthC,OAAO8B,UAClCygC,EAAM1D,YAAYhtC,KAAKqhC,gBAAgB6xE,KAAkB2T,GAAgB75E,YAAYyY,IAA4BohE,GAC7G52G,GACAygC,EAAMnP,KAAK2wE,IAAwBvuD,QAAQxe,IAAI,YAAal1B,GAGhEq+D,GACAtuE,KAAK8mH,kBAAkBp2E,GAEvBjB,EAAWthC,SAAWwmG,GACtB1/B,EAAkBmwC,kBAAkB10E,EAAOjB,GAE/CzvC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9By7F,kBAAmBx2E,EAAAA,GACnBy2E,kBAAmBz2E,EAAAA,GACnB8L,gBAAiB,SAAS96B,GACtB,IAAIy1B,EAAc/2C,KAAKs6B,SAAShZ,GAEhC,OADAy1B,EAAYu3B,UAAYtuE,KAAK8lH,mBAAmBrM,WAAW1iE,EAAYxD,SAAUwD,EAAYvX,aACtFuX,GAEXzB,YAAa,SAASh0B,GAClB,IAAIovB,EAAQ1wC,KAAKs6B,SAAShZ,GACtBipF,EAAYvqG,KAAK8lH,mBAAmBvb,UAAUjpF,EAAQiyB,UAE1D,OADAmhE,GAAoCnK,EAAWjpF,IAAYovB,EAAM5O,SAAS0uD,IACnE9/C,GAEXs2E,UAAW,SAASzzE,EAAU2M,EAAkB5/C,EAAOmP,GACnD,IAAIsnC,EAAc/2C,KAAKq7E,eAAe9nC,EAAU2M,GAChD,GAAInJ,EAAa,CACb,QAAI,IAAWz2C,EACX,OAAOy2C,EAAYz2C,MAEnBN,KAAK8lH,mBAAmB5C,iBAAiBnsE,EAAaz2C,EAAOmP,GAAM,KAI/Em7B,QAAS,WACL5qC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1B4nB,aAAajzC,KAAK2mH,sBAEtBz6E,YAAa,WACTlsC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1BrrB,KAAK8lH,mBAAmB7H,uBAGhCroC,YAAa,CACT+T,iBAAkB,WACd,IAAIvsE,EAAQpd,KAAKs6B,WACb2sF,EAAkBjnH,KAAKqqC,cAAc,WAAW66E,mBAAmBllH,MACvE,OAAOinH,EAAgBn/F,OAAO1K,IAElCwsB,cAAe,SAASnV,GACpB,IAAIqgC,EAAWrgC,EAAKqgC,SACpB,OAAQrgC,EAAKnlB,MACT,IAAK,UACD,IAAI43G,EAAkB,CAACrV,GAA2B0C,GAA6BvC,GAAoCD,IAC/GoV,EAAmBryD,IAAaoyD,EAAgB/wF,MAAK9nB,GAAcA,IAAeymD,IACtFqyD,GAAoBnnH,KAAK8rC,cACzB9rC,KAAKs6B,SAAS7F,GACd,MACJ,IAAK,gCACDA,EAAKqV,SAAU,EACf,MACJ,QACI9pC,KAAKs6B,SAAS7F,KAG1BgN,UAAW,WACP,IAAI01E,EAAiBn3G,KAAKqqC,cAAc,WAAW9H,OAAO,WAC1D,OAAOviC,KAAKs6B,aAAe,OAAS68E,QAAkB,IAAWA,OAAiB,EAASA,EAAephG,kBCzqE9Hy0C,GAAAA,eAAwB,WAAW5+B,EAAAA,EAAAA,IAAO,EAAM,GAAIi6F,GAAe,CAC/Dz3E,UAAW,CACPJ,YAAa,CACTt+B,KAAM,CACFo3F,qBAAsB,SAASp7E,GAC3B,IAAIupD,EAAoBj1E,KAAK8lH,mBAI7B,OAHI/+G,MAAM2iB,QAAQgC,IACdupD,GAAqBA,EAAkB/a,UAEpCl6D,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,kBCXrD,IAAI+7F,GAAW,cACJC,GAAwB,CAC/Bj5E,UAAW,CACPJ,YAAa,CACTxmC,QAAS,CACL8/G,cAAe,WACX,OAAOtnH,KAAKu1G,gBAAkBlD,IAElCkQ,qBAAsB,SAAShvE,GAC3B,IAAI+nB,EAAiBt7D,KAAK0hC,gBACtB1hC,KAAK23G,sBAAwBpkE,GAAY,EACzC+nB,EAAe2P,YAAY,CACvBxwB,WAAY,SACZkzB,WAAY,CAACp6B,EAAUA,EAAW,KAGtCvzC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAGlCwrF,wBAAyB,SAASnjG,EAAQ4N,GACtC,IAAI+iG,EAAYrkH,KAAK23G,qBACjBpN,EAAYjpF,EAAQqkB,KAAOrkB,EAAQqkB,IAAI4N,WAAavzC,KAAKq5G,0BAC7D,GAAIgL,EACA,OAAQ3wG,EAAOpE,MACX,IAAK,OACD,OAAQi7F,GAAavqG,KAAKiW,cAAcqL,GAC5C,IAAK,SACD,OAAOthB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,aAAek/E,EACpD,IAAK,OACL,IAAK,SACD,OAAOA,EACX,QACI,OAAOvqG,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAG7C,OAAOrrB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCk/E,UAAW,SAASh3D,GAChB,OAAOvzC,KAAK23G,sBAAwB33G,KAAKu5G,kBAAkBhmE,IAE/DmuE,cAAe,WACP1hH,KAAK23G,uBACA33G,KAAK6hF,cACN7hF,KAAKqiH,uBAGbriH,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9B0tF,aAAc,WACN/4G,KAAK23G,sBACL33G,KAAKipC,OAETjpC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9B02F,qBAAsB,WAClB,IAAI/4F,EAAShpB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACnC8rF,EAAiBn3G,KAAKuiC,OAAO,WAC7B+kF,EAAgBtnH,KAAKsnH,gBACrBC,EAAyBpQ,EAAelhG,eAAiBkhG,EAAephG,YAC5E,OAAOiT,GAAUs+F,GAAiBC,GAEtCtJ,mBAAoB,WAChB,IAAIzI,EAAWx1G,KAAKu1G,cACpB,GAAIv1G,KAAKg+G,iBAAkB,CACvB,IAAK,IAAM/K,GAAyB5oF,QAAQmrF,GAAW,CACnD,IAAIgS,EAAexnH,KAAK83G,oBAAoB93G,KAAKq5G,2BACjDr5G,KAAKk9G,mBAAmBsK,GAAc,KAClCA,GAAgBxnH,KAAK8lC,UAAUsH,MAAMo6E,MAG7CxnH,KAAKg+G,kBAAmB,KAIpCtuG,KAAM,CACF0/D,yBAA0B,SAASb,EAASE,EAASl7B,EAAU07B,GAC3D,IAAIgG,EAAoBj1E,KAAKqqC,cAAc,WAC3C,IAAI4qC,EAAkB0iC,sBAAwBppC,EAAQD,YAAcG,EAAQH,UAG5E,OAAOtuE,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,cAI7C6iB,MAAO,CACHrI,SAAU,CACN+P,WAAY,SAASjQ,GACjB,IAAI2Q,EAAOt2C,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACrC,GAAIsa,EAAK,CACL,IAAIsvC,EAAoBj1E,KAAK8lH,mBACzBvb,EAAYt1B,EAAkBs1B,UAAU5kE,EAAI4N,UAC5Cg3D,IACAj0D,EAAKxU,SAASslF,IACd9wE,EAAKtU,YAAYyvE,IACb,WAAa9rE,EAAI7B,SACjBwS,EAAKxU,SAAS9hC,KAAKqhC,gBAAgBqwE,MAI/C,OAAOp7D,GAEXygC,QAAS,SAASlgE,GACd7W,KAAKs6B,SAASzjB,GACV,oBAAsBA,EAAO4jC,YAC7Bz6C,KAAK29C,mBAAmB9M,SAAS,SAASA,SAAS,IAAMu2E,IAAUplF,YAAYyvE,SC1GvGjnD,GAAAA,eAAwB,kBAAmB68D,I,eC6BvCI,GAAuB,iBACvBC,GAAmB,aACnBC,GAA6B,0BAC7BC,GAAwB,kBACxBC,GAAe,YACfC,GAA+B,yBAC/BC,GAAgB9gG,IAChB,IAAI+gG,EACA75G,EAAS8Y,EAAK9Y,OAClB,OAAO8Y,EAAKghG,mBAAqBhhG,EAAKvI,WAAa,QAAUspG,EAAmB75G,EAAOgE,gBAAa,IAAW61G,OAAmB,EAASA,EAAiBtpG,YAE5JwpG,GAAmB,CAAC9qG,EAAO+qG,KAC3B/qG,EAAMy+B,SAAQ50B,IACNA,EAAK7J,OAAS6J,EAAKmhG,KACnBF,GAAiBjhG,EAAK7J,OAAS6J,EAAKmhG,KAAMD,GAE1CA,EAASlhG,OAIVohG,GAAyB,CAChCj6E,UAAW,CACPJ,YAAa,CACTxmC,QAAS,CACLyhC,KAAM,WACFjpC,KAAKsoH,UAAY,KACjBtoH,KAAKuoH,wBAA0B,KAC/BvoH,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9Bm9F,sBAAuB,WACnB,OAAOxoH,KAAKyoH,mBAAqBzoH,KAAK0oH,kBAE1CD,gBAAiB,WACb,IAAIjT,EAAWx1G,KAAKuiC,OAAO,gBAC3B,OAAOizE,IAAahD,IAExBkW,eAAgB,WACZ,IAAIlT,EAAWx1G,KAAKuiC,OAAO,gBAC3B,OAAOizE,IAAajD,IAExBqF,4BAA6B,WACzB,IAAI+Q,EAAgB3oH,KAAK4oH,eACzB,GAAI5oH,KAAK0oH,kBAAoBC,EAAe,CACxC,IAAItyG,EAAarW,KAAKuiC,OAAOwvE,IACzBqK,EAAep8G,KAAK0hC,gBAAgBsxC,iBAAiB38D,GACrDwyG,EAAoB7oH,KAAKugF,UAAUzgC,gBAAgBs8D,GACvD,OAAOp8G,KAAKugF,UAAUuoC,+BAA+BD,EAAmBF,EAAcx6G,QAE1F,OAAOnO,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCiuF,oBAAqB,WACjB,OAAOt5G,KAAKwoH,wBAA0BxoH,KAAKq5G,0BAA4Br5G,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErG02F,qBAAsB,WAClB,IAAI/4F,EAAShpB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACnC8rF,EAAiBn3G,KAAKuiC,OAAO,WACjC,OAAOviC,KAAKwoH,yBAA0BrR,EAAelhG,eAA0B+S,GAEnFq1B,mBAAoB,SAAS5pB,GACzB,IAAIs0F,EAAW/oH,KAAKsoH,UAChB,YAAc7zF,EAAKgmB,YAAcz6C,KAAKyoH,mBAAqB,OAASM,QAAY,IAAWA,GAAYA,EAASxmF,OAAO,YACvHviC,KAAKm+G,oBAETn+G,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9BqrF,gBAAiB,WACb,IAAIsS,EACAC,EAAe,QAAUD,EAAmBhpH,KAAKkpH,kBAAe,IAAWF,OAAmB,EAASA,EAAiBzmF,OAAO,WACnI,GAAIviC,KAAKyoH,mBAAqBQ,EAC1B,OAAOjpH,KAAKmpH,gBAGpBvM,cAAe,SAASrpE,GAChBvzC,KAAKyoH,kBACLzoH,KAAKk+G,eAAe3qE,GAEpBvzC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAGlCg3F,oBAAqB,WACjBriH,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACtBrrB,KAAKyoH,mBACLzoH,KAAKwiH,kBAGbmB,mBAAoB,SAASh+E,EAAKg9E,EAAgBY,GAC9C,IAGY6F,EAHRL,EAAW/oH,KAAKsoH,UAChBtoH,KAAKyoH,kBACDzoH,KAAKuiC,OAAO,sBAEZ,QAAU6mF,EAAczjF,EAAIsX,cAAW,IAAWmsE,GAAuBA,EAAYl9F,KAAKyZ,EAAKA,GACxFojF,IACP/oH,KAAKuoH,yBAA2B,IAAIl7F,EAAAA,IAAUgB,MAAK,IAAM06F,EAASM,YAC7DrpH,KAAKwoC,kBACNxoC,KAAKuoH,wBAAwBp6F,WAIrCnuB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAGlC6yF,eAAgB,SAAS3qE,EAAU+1E,GAC/B,IAAIC,EAAiB,YAAc3vB,GAAAA,EAAAA,UAAkBnN,WACjD6kB,GAAe1lF,EAAAA,EAAAA,GAAO,CACtB5Q,WAAW,EACXnB,WAAY0vG,EACZ/vG,0BAA0B,EAC1BshF,4CAA4C,EAC5C5/E,aAAc,CAAC,CACX7N,QAAS,SACT+T,SAAU,QACVI,OAAQ,WACRF,QAASthB,KAAKs+G,wBACf,CACCjxG,QAAS,SACT+T,SAAU,QACVI,OAAQ,WACRF,QAASthB,KAAKw+G,2BAElBjlG,gBAAiBvZ,KAAKq+G,0BAA0B9qE,IACjDvzC,KAAKuiC,OAAOsvE,KACf,IAAK7xG,KAAKkpH,WAAY,CAClB,IAAIM,GAAkB3nF,EAAAA,EAAAA,GAAE,SAASE,SAAS/hC,KAAK8lC,UAAUpF,YAAYoB,SAAS9hC,KAAKqhC,gBAAgBqmF,KACnG1nH,KAAKkpH,WAAalpH,KAAKwiC,iBAAiBgnF,EAAiBxuB,GAAAA,EAAO,CAC5DxhF,0BAA0B,EAC1BshF,4CAA4C,IAEhD96F,KAAKkpH,WAAWx/E,GAAG,SAAU1pC,KAAKo+G,8BAClCp+G,KAAKkpH,WAAWx/E,GAAG,SAASpD,IAGpB,IAAImjF,GAFR7iF,EAAAA,EAAAA,QAAqBN,EAAER,UAAUohB,WAAW3lB,KAAK4wE,IAA4Bv4D,IAAI,IAAM+tE,IAA4BhkE,QAAS,SACxH2lE,KAEA,QAAUG,EAAkBzpH,KAAKsoH,iBAAc,IAAWmB,GAA2BA,EAAgBJ,cAIjHrpH,KAAKkpH,WAAW3mF,OAAO+uE,GACvBtxG,KAAKkpH,WAAWz6G,OAChBzO,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9BgzF,0BAA2B,SAAS9qE,GAChC,IAAI5N,EAAM3lC,KAAK8lC,UAAUorC,iBAAiB39B,GACtCgG,EAAkB,CAClB5T,IAAKA,EACL7B,QAAS6B,EAAI7B,QACbpY,IAAKia,EAAIja,IACT6nB,SAAUA,GAGd,OADAvzC,KAAKugF,UAAUrlC,gBAAgB3B,EAAiB5T,GACzCrsB,IACH,IAAIowG,EAAe1pH,KAAKukH,sBACpB/tC,EAAax2E,KAAKwiC,kBAAiBX,EAAAA,EAAAA,GAAE,SAASE,SAASzoB,GAAYk/D,GAAAA,GACvEx4E,KAAKmpH,eAAiB3yC,EAAWtvB,WACjCwiE,EAAa1pH,KAAKmpH,eAAgB5vE,EAAiB,CAC/CowE,aAAa,IAEjB3pH,KAAKugF,UAAUtoC,2BAGvBkmE,kBAAmB,WACf,IAAIyL,EACAr2E,EAAWvzC,KAAKq5G,0BACpB,GAAI,QAAUuQ,EAAoB5pH,KAAKkpH,kBAAe,IAAWU,GAAqBA,EAAkBrnF,OAAO,YAAcgR,GAAY,EAAG,CACxI,IAAIs2E,EAAmB7pH,KAAKkpH,WAAW3mF,OAAO,aAC9CviC,KAAKkpH,WAAW3mF,OAAO,YAAa,MACpCviC,KAAKk+G,eAAe3qE,GAAU,GAC9BvzC,KAAKkpH,WAAW3mF,OAAO,YAAasnF,KAG5CrH,eAAgB,WACZ,IAAIsH,EACJ,QAAUA,EAAoB9pH,KAAKkpH,kBAAe,IAAWY,GAA6BA,EAAkBvnF,OAAO,WAAW,IAElIqH,cAAe,SAASnV,GACpB,GAAI,YAAcA,EAAKnlB,MAAQtP,KAAKwoH,wBAAyB,CACzD,IAAI1zD,EAAWrgC,EAAKqgC,SAChB,IAAMA,EAASzqC,QAAQynF,KACvB9xG,KAAK+pH,wBAAwBt1F,GAC7BA,EAAKqV,SAAU,GACR,IAAMgrB,EAASzqC,QAAQwnF,MAC9B7xG,KAAKgqH,yBAAyBv1F,GAC9BA,EAAKqV,SAAU,GAGvB9pC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9B0+F,wBAAyB,SAASt1F,GAC9B,IAAIw1F,EACJ,GAAIjqH,KAAK0oH,iBAAkB,CACvB,IAAItM,EAAep8G,KAAKq5G,0BACpB+C,GAAgB,GAChBp8G,KAAK0hC,gBAAgBupC,YAAY,CAC7BxwB,WAAY,SACZkzB,WAAY,CAACyuC,UAGd,QAAU6N,EAAoBjqH,KAAKkpH,kBAAe,IAAWe,GAAqBA,EAAkB1nF,OAAO,YAAc,IAAM9N,EAAKqgC,SAASzqC,QAAQynF,KAC5J9xG,KAAKm+G,qBAGb6L,yBAA0B,SAASv1F,GAC/B,IAAIy1F,EAAYlqH,KAAKkpH,WACrB,GAAIgB,EAAW,CACX,IAAIC,EAAkB11F,EAAKqgC,SAAS/qC,MAAM8nF,GAA0BjqF,OAAS,GACzEuiG,EACAD,EAAU3nF,OAAO4nF,EAAiB11F,EAAKn0B,OAEvC4pH,EAAU3nF,OAAO9N,EAAKn0B,SAIlC8pH,uBAAwB,SAASC,EAAmBpjG,EAAMqjG,EAAqBhxG,EAAWixG,GACtF,IAAI3iF,EAAO5nC,KACP0/B,GAAamC,EAAAA,EAAAA,GAAEvoB,GACfnL,EAAS8Y,EAAK9Y,OACduQ,EAAaqpG,GAAc9gG,GAC3BujG,EAAU,OAASH,QAAqB,IAAWA,OAAoB,EAASA,EAAkB1kF,IAAIj2B,KACtG4G,EAAOg0G,EAAoBxkF,WAE3BhnB,MAAOA,EACP2rG,UAAWA,EACXntG,UAAWA,GACXgtG,EAAoB54G,eAAiB,GACrCqlC,GAAcnrB,EAAAA,EAAAA,GAAO,GAAIy+F,EAAmB,CAC5C36G,KAAM86G,EACNhzE,YAAa,KACbg1D,UAAU,EACVvlF,KAAMA,EACNyoC,GAAIp5C,EAAKo0G,UAAUzjG,EAAK3X,MAAQ2X,EAAK1V,WACrCpD,QAAQyd,EAAAA,EAAAA,GAAO,GAAIzd,EAAQ,CACvBuQ,WAAYA,EACZhN,eAAeka,EAAAA,EAAAA,GAAO,CAClB9M,MAAOA,EACP2rG,UAAWA,EACXntG,UAAWA,GACZnP,EAAOuD,cAAeuV,EAAKvV,iBAElC8tB,YAAarxB,EAAOic,MACpB+sE,UAAWozB,GAAcp8G,EAAO+B,cAAgB,SAAS5P,GACrDsnC,EAAKs7E,iBAAiBnsE,EAAaz2C,MAG3Cy2C,EAAYz2C,MAAQ6N,EAAO4C,mBAAmBy5G,GAC9C,IAAIh7G,EAAWxP,KAAKkkH,yBAAyB5/E,KAAKtkC,KAAnCA,CAAyC+2C,EAAa5oC,GAIrE,OAHAnO,KAAKugF,UAAUlnC,eAAe3Z,EAAYlwB,EAAUunC,IAAerX,EAAWqH,SAAQnE,EAAAA,EAAAA,MAAYm4C,UAAUnzD,QAAQyG,MAAK,KACrHruB,KAAKugF,UAAUnrC,YAAY1V,EAAYqX,MAEpCA,GAEX4zE,sBAAuB,SAAS5zE,EAAa9vB,GACzC,IAAI9Y,EAASnO,KAAK8lC,UAAU4a,aAAaz5B,EAAK1V,WAC9C,MAAO,CAAC+P,EAAShI,KACb,IAAIsxG,EAAuBC,EACvBnrF,GAAamC,EAAAA,EAAAA,GAAEvoB,GACnB,QAAUsxG,GAAyBC,EAAmB9zE,EAAYpR,KAAKgX,aAAU,IAAWiuE,GAAiCA,EAAsB1+F,KAAK2+F,GAAmB,WACvK,OAAO18G,EAAO2uB,SAASia,EAAYpR,IAAIj2B,SACvC,KACA,IAAIo7G,EACApe,EAAiBhtE,EAAW6B,KAAK,cAAcoiB,QAC/ConE,EAAYre,EAAeh9F,KAAK,eAChCs7G,EAAmB,QAAUF,EAAaC,SAAc,IAAWD,OAAa,EAASA,EAAWvoF,SACxG7C,EAAWurF,WAAW3oF,SACtByU,EAAc/2C,KAAKoqH,uBAAuB9lF,KAAKtkC,KAAjCA,CAAuC+2C,EAAa9vB,EAAM3F,EAASoe,GACjFgtE,EAAiBhtE,EAAW6B,KAAK,cAAcoiB,QAC/ConE,EAAYre,EAAeh9F,KAAK,eAC5Bs7G,IAAqBD,GACrBre,EAAewe,YAAY,CACvB33G,gBAAiBy3G,EAAiBz3G,gBAClC6K,gBAAiB4sG,EAAiB5sG,gBAClC+sG,WAAYH,EAAiBG,gBAIzCp0E,EAAc/2C,KAAKoqH,uBAAuB9lF,KAAKtkC,KAAjCA,CAAuC+2C,EAAa9vB,EAAM3F,EAASoe,KAGzF0rF,mBAAoB,SAASC,GACzB,IAAIC,EACAC,EAAkB,QAAUD,EAAwBtrH,KAAKwrH,kCAA+B,IAAWF,OAAwB,EAASA,EAAsBp/F,KAAKlsB,KAAMqrH,GACrKI,EAAoBzrH,KAAKuiC,OAAO,8BAChCmpF,EAAoB1rH,KAAKqhC,gBAAgBomF,IACzCrqG,EAAQpd,KAAKuiC,OAAO,sBACpB0lF,EAAqB,GACzB,GAAK7qG,EAaD8qG,GAAiB9qG,GAAO6J,IACpB,IAAI0kG,GAAU,OAAS1kG,QAAQ,IAAWA,OAAO,EAASA,EAAK3X,QAAU,OAAS2X,QAAQ,IAAWA,OAAO,EAASA,EAAK1V,WACtHo6G,IACA1D,EAAmB0D,KAAY1kG,EAAKvI,mBAhBpC,CACR,IAAI5X,EAAU9G,KAAKqqC,cAAc,WAAW6G,aAC5C9zB,EAAQ,IACRgU,EAAAA,EAAAA,IAAKtqB,GAAU,SAASktB,EAAG7lB,GAClBA,EAAOsE,QAAWtE,EAAOW,MAC1BsO,EAAMiL,KAAK,CACPla,OAAQA,EACRmB,KAAMnB,EAAOmB,KACbiC,UAAWpD,EAAOoD,eAYlC,OAAOqa,EAAAA,EAAAA,GAAO,GAAI2/F,EAAiB,CAC/BnuG,MAAOA,EACPwuG,OAAQ,MAAQ,IAAIh5F,GAAAA,EACpB1V,cAAe+J,IACX,IAAI9Y,EACAw9G,EAAS1kG,EAAK3X,MAAQ2X,EAAK1V,UAI/B,IAHI0V,EAAK9Y,QAAUw9G,KACfx9G,EAAS8Y,EAAK9Y,QAAUnO,KAAK62C,mBAAmB6J,aAAaz5B,EAAK3X,KAAO,QAAU2X,EAAK3X,KAAO,aAAe2X,EAAK1V,YAEnHpD,EAAQ,CAGR,GAFA8Y,EAAKnI,MAAQmI,EAAKnI,OAAS,GAC3BmI,EAAKnI,MAAMrP,KAAOwX,EAAKnI,MAAMrP,MAAQtB,EAAOiD,QACxC,YAAcjD,EAAOqD,eAAY,IAAWyV,EAAKnI,MAAMvR,QAAS,CAChE,IAAI+P,EAAYtd,KAAKuiC,OAAO,0BACxB,aAAejlB,GAAa,WAAaA,IACzC2J,EAAKnI,MAAMvR,SAAU,GAG7B0Z,EAAKzX,SAAWyX,EAAKzX,UAAYxP,KAAK2qH,sBAAsBU,EAAepkG,GAC3EA,EAAK9Y,OAASA,EACd8Y,EAAKghG,mBAAqBA,EAAmB0D,GACzCx9G,EAAOgE,WACPyZ,EAAAA,EAAAA,GAAO3E,EAAM9Y,EAAOgE,eAEpB,IAAW8U,EAAKrI,YAAczQ,EAAOoF,kBACrC0T,EAAKrI,WAAazQ,EAAOoF,gBAAgB4iB,MAAM,SAAS8C,GACpD,MAAO,aAAeA,EAAKnqB,QAE/BmY,EAAK1T,gBAAkB,IAE3B,IAAIs4G,IAAcp7F,EAAAA,EAAAA,IAAUxJ,EAAK1Z,UAAW0Z,EAAK1Z,SAC5CvN,KAAK4oH,gBAAkBiD,IACxB7rH,KAAK4oH,eAAiB3hG,GAG9B,OAASwkG,QAAqB,IAAWA,GAA6BA,EAAkBv/F,KAAKlsB,KAAMinB,GACnGA,EAAK7X,UAAW+pC,EAAAA,EAAAA,IAASlyB,EAAK7X,UAAY6X,EAAK7X,SAAW,IAAMs8G,EAAoBA,MAIhGnH,oBAAqB,WACjB,MAAO,CAAC7kF,EAAY2rF,EAAe/pG,KAC/B,IAAIiqG,EAAkBvrH,KAAKuiC,OAAOuvE,IAC9Bga,EAAsB9rH,KAAKorH,mBAAmBC,GAC9CU,GAAiBlqF,EAAAA,EAAAA,GAAE,SAASE,SAASrC,GACrCiqF,EAAc,OAASroG,QAAW,IAAWA,OAAU,EAASA,EAAQqoG,YAM5E,GALA3pH,KAAK4oH,oBAAiB,EAClBe,GACAoC,EAAejqF,SAAS9hC,KAAKqhC,gBAAgBumF,KAEjD5nH,KAAKsoH,UAAYtoH,KAAKwiC,iBAAiBupF,EAAgBC,GAAAA,YAAMpgG,EAAAA,EAAAA,GAAO,GAAI2/F,EAAiBO,KACpFnC,EAAa,CACd,IAAIsC,GAAoBpqF,EAAAA,EAAAA,GAAE,SAASC,SAAS9hC,KAAKqhC,gBAAgBymF,KAA+B/lF,SAASrC,GACzG1/B,KAAKwiC,kBAAiBX,EAAAA,EAAAA,GAAE,SAASE,SAASkqF,GAAoB3yB,GAAAA,WAAQt5F,KAAKs+G,wBAC3Et+G,KAAKwiC,kBAAiBX,EAAAA,EAAAA,GAAE,SAASE,SAASkqF,GAAoB3yB,GAAAA,WAAQt5F,KAAKw+G,0BAE/Ex+G,KAAKsoH,UAAU5+E,GAAG,gBAAgB,KAC9B,IAAIwiF,EACJ,QAAUA,EAAoBlsH,KAAKkpH,kBAAe,IAAWgD,GAA6BA,EAAkB7C,eAIxH8C,YAAa,WACT,OAAOnsH,KAAKsoH,WAEhB//E,eAAgB,WACZ,IAAI6jF,EACJ,QAAUA,EAAwBpsH,KAAKuoH,+BAA4B,IAAW6D,GAAiCA,EAAsBj+F,WAEzIwzF,iBAAkB,WAGV,IAAI0K,GAFRrsH,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACtBrrB,KAAKyoH,qBAEL,QAAU4D,EAAoBrsH,KAAKkpH,kBAAe,IAAWmD,GAA6BA,EAAkB79G,SAGpHisG,qBAAsB,SAASxzF,EAAMsJ,GACjC,IACIzhB,KAAMA,GACNyhB,EACAvwB,KAAKyoH,mBAAqB35G,IAAS6iG,KACnC1qF,EAAK1Z,SAAU,GAEnBvN,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9B0yF,8BAA+B,SAASpwC,EAAYp6B,EAAUilE,GACtDx4G,KAAKyoH,kBACLzoH,KAAKk+G,eAAe3qE,GAEpBvzC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,aAItC3b,KAAM,CACFs2G,gBAAiB,SAAS/+F,GAClBjnB,KAAK8lH,mBAAmB4C,mBACxBzhG,EAAK6c,QAAU,aAK/BoK,MAAO,CACHrI,SAAU,CACNwW,mBAAoB,SAAS3L,EAAOpvB,GAC5B,SAAWA,EAAQwiB,SAAW9jC,KAAK8lH,mBAAmB2C,oBAAqB,IAAUnnG,EAAQqkB,IAAIp4B,SAGrGvN,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9By0B,gBAAiB,SAASvM,GACtB,IAAIyL,EAAgBh/C,KAAKs6B,SAASiZ,GAC9B0hC,EAAoBj1E,KAAK8lH,mBACzBiD,EAAW9zC,EAAkBk3C,cAC7BG,EAAmBr3C,EAAkBqkC,sBACzC,OAAIgT,IAAqB/4E,GAAYyL,GAAiB+pE,EAC3CA,EAASroF,WAAWa,KAAK,IAAMvhC,KAAKqhC,gBAAgBomF,IAAwB,MAAQI,IAExF7oE,GAEXoB,uBAAwB,SAASjP,EAAQoC,EAAU2M,GAC/C,IAAIosE,EAAmBtsH,KAAK8lH,mBAAmBxM,sBAC/C,GAAIgT,IAAqB/4E,IAAY4F,EAAAA,EAAAA,IAAS+G,GAAmB,CAC7D,IAAI/xC,EAASnO,KAAK62C,mBAAmB6J,aAAaR,GAClD,OAAOlgD,KAAK8oH,+BAA+B33E,EAAQhjC,GAEvD,OAAOnO,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCy9F,+BAAgC,SAAS33E,EAAQhjC,GAC7C,IAAIqF,GAAgB,EAQpB,OAPA4d,EAAAA,EAAAA,IAAK+f,GAAS,SAAS/mB,EAAOotB,GAC1B,IAAIvwB,GAAO4a,EAAAA,EAAAA,GAAE2V,GAAajW,KAAK,0BAA0B7xB,KAAK,gBAC9D,GAAI,OAASuX,QAAQ,IAAWA,GAAQA,EAAK9Y,QAAUA,GAAU8Y,EAAK9Y,OAAOic,QAAUjc,EAAOic,MAE1F,OADA5W,EAAe4W,GACR,KAGR5W,GAEX+4G,YAAa,SAAS98E,GAClB,IAAI+8E,EAAc,WAAa/8E,EAAW3L,SAAW,mBAAqB2L,EAAW3L,QACjF2oF,EAAiB,SAAWh9E,EAAW3L,SAAW9jC,KAAK8lH,mBAAmB2C,kBAC9E,OAAQ+D,GAAeC,IAAmBh9E,EAAWxoB,MAEzDmuB,YAAa,SAAS1E,EAAOjB,GACrBzvC,KAAKusH,YAAY98E,GACjBzvC,KAAK+mH,kBAAkBt3E,EAAYiB,GAEnC1wC,KAAKs6B,SAASoW,EAAOjB,QC/d7C+a,GAAAA,eAAwB,mBAAoB69D,IC6B5C,IAAInb,GAAsB,gBACtBwf,GAAuB,gBACvBC,GAAgC,4BAChCn8B,GAAoB,iBACpBz+C,GAAY,SACZ66E,GAAsB,mBACtB72C,GAAiB,cACjB82C,GAAc,iBACd9a,GAAiC,qBACjCC,GAAqC,yBACrCJ,GAA6B,SACjC,IACIxjE,UAAW,CACPJ,YAAa,CACTxmC,QAAS,CACLyhC,KAAM,WACF,IAGQ6jF,EACA3/E,EAJJ4/E,GAAsB/sH,KAAKk1G,oBAC/Bl1G,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACtB0hG,KAGA/sH,KAAKg4G,wBAA0B,KAC3B,IAAIgV,EACJ7/E,EAAa,QAAU6/E,EAAsBhtH,KAAKqqC,cAAc,yBAAsB,IAAW2iF,OAAsB,EAASA,EAAoB7/E,cAExJntC,KAAKi4G,0BAA4B3xE,GAAKwmF,GAAqBjrF,EAAAA,EAAAA,GAAEyE,EAAEzJ,QAC/D78B,KAAKk1G,mBAAqBl1G,KAAK6pC,cAAc,SAASvD,GAClD,IAAImE,EAAQnE,EAAEmE,MACVR,GAAUpI,EAAAA,EAAAA,GAAE4I,EAAM5N,QAClBowF,EAAkBxiF,EAAMwnE,IAC5B,KAAI6a,IAAsBA,EAAmBnmF,GAAG,UAAammF,EAAmBnmF,GAAGsD,KAO/EjqC,KAAKktH,0BAA4BltH,KAAKi9G,oBAAqB,CAC3D,IAAIkQ,EAAgBC,EAAiBnjF,IAAYmjF,EAAiB,OAASH,QAAmB,IAAWA,OAAkB,EAASA,EAAgBvsF,YAChJ2sF,IAAiBpjF,EAAQlD,SAAQnE,EAAAA,EAAAA,MAAYm4C,UAAUnzD,OACvD0lG,EAAqBL,IAAoBA,EAAgB9M,WAAa8M,IAAoBjtH,KAAK8lC,UAC/FynF,IAAmBtjF,EAAQlD,QAAQ,IAAIjf,OAAO9nB,KAAKqhC,gBAAgBqrF,MAAwB9kG,OAC3FwmF,EAAiBnkE,EAAQ2F,SAAS5vC,KAAKqhC,gBAAgB6rE,KACvDsgB,EAAiBxtH,KAAKwtH,iBACrBrgF,GAAeggF,GAAkB/e,GAAoBmf,GAAkBC,GAAkBxtH,KAAKsuE,cAAiB++C,IAAgBC,GAChIttH,KAAK42G,eAAetyE,KAAKtkC,KAAzBA,CAA+BiqC,GAXvC,SAASmjF,EAAiB1sF,GACtB,OAAOA,KAAcA,EAASqG,QAAQ,IAAIjf,OAAO6kG,KAAgC/kG,WAczFgf,EAAAA,EAAAA,GAAgB2O,GAAAA,WAAAA,cAA0BlC,GAAAA,EAAAA,GAAkBrzC,KAAKg4G,yBACjEpxE,EAAAA,EAAAA,GAAgB2O,GAAAA,WAAAA,cAA0BlC,GAAAA,EAAAA,KAAoBrzC,KAAKi4G,2BACnErxE,EAAAA,EAAAA,GAAgB2O,GAAAA,WAAAA,cAA0BpC,GAAAA,EAAgBnzC,KAAKk1G,sBAGvEsY,eAAgB,WACZ,OAAOxtH,KAAKuiC,OAAO,kBAAoB+vE,IAE3Cmb,gBAAiB,WACb,OAAOztH,KAAKuiC,OAAO,kBAAoB6vE,IAE3C8a,sBAAuB,WACnB,OAAOltH,KAAKwtH,kBAAoBxtH,KAAKytH,mBAEzC9W,yBAA0B,SAASnyD,GAC/B,IAAI9jB,EAAW1gC,KAAK8lC,UAAUpF,WAC1B1X,EAAShpB,KAAKsuE,YACdo/C,GAA6BhtF,KAAc8jB,EAAezd,QAAQrG,GAAU9Y,OAChF,GAAI8lG,EAA2B,CAC3B,IAAIn3E,EAAYiO,EAAezd,QAAQ,IAAMgvC,IAAgBnuD,OAC7D,GAAI2uB,EAAW,CACX,IAAI1Q,EAAW7lC,KAAK+lC,QAAQ,YACxB4nF,EAAcnpE,EAAezd,QAAQ,IAAMgL,GAAY,QACvDwB,EAAW1N,EAAS2N,YAAYm6E,EAAYjmF,UAC5ClI,EAAcqG,EAASia,gBAAgBvM,GAAUnpB,MAAMujG,GACvD/2E,EAAiB52C,KAAK62C,mBAAmBC,oBACzC5mC,EAAe0mC,EAAepX,IAAgBoX,EAAepX,GAAatvB,aAC9E8Y,EAASA,IAAW9Y,IAAiBlQ,KAAKy5G,WAAWlmE,EAAU/T,IAGvE,OAAOxW,GAAUhpB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE/CurF,eAAgB,SAASpyD,GACjBxkD,KAAK22G,yBAAyBnyD,IAC9BxkD,KAAK0mH,iBAGbzI,mBAAoB,WAChB,GAAIj+G,KAAKg+G,kBAAoBh+G,KAAKktH,wBAAyB,CACvD,IAAIU,EACAlO,EAAkB1/G,KAAK05G,6BACvBhpE,EAAQ,QAAUk9E,EAAkB5tH,KAAKugF,iBAAc,IAAWqtC,OAAkB,EAASA,EAAgB3tE,gBAAgBjgD,KAAKq5G,0BAA2BqG,GAC7JhvE,IAAUA,EAAMnP,KAAK,UAAU3Z,OAC/B5nB,KAAKw/G,mBAAkB,KACnBx/G,KAAKi9G,qBAAsB,IAC5BvsE,GAAO,GAEV1wC,KAAKi9G,qBAAsB,EAE/Bj9G,KAAKg+G,kBAAmB,OAExBh+G,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAGlCijD,UAAW,WACP,GAAItuE,KAAKktH,wBAAyB,CAC9B,IAAIlU,GAAsBvoF,EAAAA,EAAAA,IAAUzwB,KAAKuiC,OAAOwvE,KAC5C8b,GAA0Bp9F,EAAAA,EAAAA,IAAUzwB,KAAKuiC,OAAOyvE,KACpD,OAAOgH,GAAuB6U,EAElC,OAAO7tH,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCyiG,4BAA6B,SAASr5F,GAClC,IAAI+jF,EAAcx4G,KAAKq5G,wBAAwB5kF,EAAKogC,eACpD,GAAI70D,KAAKktH,0BAA4B,IAAM1U,IAAe/nF,EAAAA,EAAAA,IAAUgE,EAAKn0B,QAAUm0B,EAAKn0B,QAAUm0B,EAAKogC,cAAe,CAClH,IAAIr1B,EAAcx/B,KAAK62C,mBAAmB4I,sBAAsBhrB,EAAKn0B,OACjEytH,EAAiB/tH,KAAK62C,mBAAmB4I,sBAAsBhrB,EAAKogC,eACxE70D,KAAKguH,2BAA2BxuF,EAAauuF,EAAgBvV,KAGrEoD,QAAS,SAASb,EAAW11F,GACzB,GAAIrlB,KAAKwtH,kBAAoBxtH,KAAK6hF,aAAc,CAC5C,IAAIosC,EAAY,IAAI5gG,EAAAA,GAQpB,OAPArtB,KAAKu+G,eAAelwF,MAAK,KAChBruB,KAAK6hF,aAGNosC,EAAUhgG,OAAO,UAFjBjuB,KAAK+W,OAAOgkG,GAAW1sF,KAAK4/F,EAAU9/F,SAASC,KAAK6/F,EAAUhgG,WAK/DggG,EAAUx/F,UAErB,OAAOzuB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCm7F,SAAU,SAASjzE,EAAU/T,GACzB,OAAOx/B,KAAKkuH,UAAU,CAClB36E,SAAUA,EACV/T,YAAaA,KAGrB0uF,UAAW,SAAS5sG,GAChB,IACI6sG,EADA/gG,EAAI,IAAIC,EAAAA,GAMZ,OAJArtB,KAAK6+G,iBAAiBzxF,GAAG,KACrB+gG,EAAanuH,KAAKouH,cAAc9sG,IAChCsa,EAAAA,EAAAA,IAAKuyF,GAAY9/F,KAAKjB,EAAEe,SAASC,KAAKhB,EAAEa,gBAErC,IAAWkgG,EAAaA,EAAa/gG,EAAEqB,WAElD2/F,cAAe,SAAS9sG,GACpB,IAAIg6C,EAAiBt7D,KAAK0hC,gBACtB2sF,GAAwB59F,EAAAA,EAAAA,IAAUnP,EAAQysG,kBAAmBt9F,EAAAA,EAAAA,IAAUnP,EAAQk3F,cAE/Eh5E,YAAaA,EACb+T,SAAUA,EACVplC,OAAQA,EACR8Y,KAAMA,GACNjnB,KAAKsuH,8BAA8BhtG,GACnC0J,EAAS,CACTtb,KAAM,OAASuX,QAAQ,IAAWA,OAAO,EAASA,EAAKvX,KACvDkG,QAAQ,EACRzH,OAAQA,GAEZ,QAAI,IAAW8Y,EAAKyE,IAApB,CAIA,GAAIvd,IAAW,SAAW8Y,EAAK6c,SAAW,mBAAqB7c,EAAK6c,WAAa7c,EAAK0zF,SAAW36G,KAAKktH,wBAAyB,CAC3H,IAAKmB,GAAyBruH,KAAKy5G,WAAWlmE,EAAU/T,GACpD,OAAO,EAEX,IAAI48E,EAAe7oE,EAAW+nB,EAAeqV,oBAC7C,OAAO/0C,EAAAA,EAAAA,IAAK57B,KAAKuuH,gBAAgBh7E,EAAU/T,EAAavY,IAAOoH,MAAKzY,IAC5DA,GAGC5V,KAAKwuH,iBAAiBxjG,EAAQ/D,EAAMuY,EAAa48E,IAClDp8G,KAAKg/G,iCAIjB,OAAO,EAjBHh/G,KAAK0hC,gBAAgBqqC,UAAU,UAmBvCwiD,gBAAiB,SAASh7E,EAAU/T,EAAavY,GAC7C,GAAIjnB,KAAKwtH,mBAAqBvmG,EAAK2e,UAAY5lC,KAAK6hF,aAAc,CAC9D,IAAIz0D,EAAI,IAAIC,EAAAA,GAIZ,OAHArtB,KAAKu+G,eAAe/wF,QAAO,KACvBJ,EAAEe,QAAQnuB,KAAK6hF,iBAEZz0D,IAGf8b,cAAe,WACX,IAAIA,EAAgBlpC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC9C,OAAO6d,EAAcphB,OAAO,CAAC,WAAY,mBAE7CwmG,8BAA+B,SAAS/9F,GACpC,IAUI2uF,GATA6O,eAAgBA,EAChBvV,YAAaA,EACbh5E,YAAaA,EACb+T,SAAUA,GACVhjB,EACA0f,EAAoBjwC,KAAK62C,mBACzBD,EAAiB3G,EAAkB6G,oBACnC15B,EAAQpd,KAAK0hC,gBAAgBtkB,QAC7B6J,EAAO7J,EAAMm2B,GAGb2rE,GADAzuF,EAAAA,EAAAA,IAAUs9F,GACEn3E,EAAem3E,GAEf/tH,KAAKw9G,kBAEhB/sF,EAAAA,EAAAA,IAAU+nF,KACXA,EAAcx4G,KAAKq5G,4BAEnBlgE,EAAAA,EAAAA,IAAS3Z,KACTA,EAAcyQ,EAAkByQ,aAAalhB,EAAa,SAC1DA,EAAcyQ,EAAkB0H,gBAAgBnY,IAEpD,IAAIrxB,EAASyoC,EAAepX,GAC5B,MAAO,CACH0/E,UAAWA,EACX1/E,YAAaA,EACbg5E,YAAaA,EACbjlE,SAAUA,EACVplC,OAAQA,EACR8Y,KAAMA,IAGdunG,iBAAkB,SAASxjG,EAAQ/D,EAAMy4F,EAAiBtD,GAItD,GAHKn1F,EAAK2e,WACN5a,EAAOU,IAAMzE,EAAKyE,KAElB1rB,KAAKm9G,gBAAgBnyF,GACrB,OAAO,EAMP,IAAI8yF,GAJR99G,KAAK84G,WAAa94G,KAAK0hC,gBAAgBpf,YACvCtiB,KAAKi5G,eAAehyF,EAAKyE,KACzB1rB,KAAKq9G,0BAA0BqC,GAC1B10F,EAAO7c,OAAO6E,mBAEfhT,KAAKg2G,iBAAiB,CAClBtqF,IAAKzE,EAAKyE,IACV0nE,QAAS,QAAU0qB,EAAgB72F,EAAKmsE,eAAY,IAAW0qB,EAAgBA,EAAgB72F,EAAKvX,OAG5G,OAAO,GAEXg3G,cAAe,SAASzF,EAASwF,GAC7B,IAAIz9F,GAAS4S,EAAAA,EAAAA,MACTigF,EAAkB77G,KAAKq5G,0BAC3B,GAAIr5G,KAAKktH,wBAAyB,CAC9B,IAAI7nG,EAAW,IAAIgI,EAAAA,GACnBrE,EAAS,IAAIqE,EAAAA,GACbrtB,KAAK6+G,iBAAiBx5F,GAAU,KAC5BrlB,KAAKyuH,mBAAmBxN,EAASpF,EAAiB4K,GAAqBj5F,OAAOxE,EAAOmF,YAG7F,OAAOnF,EAAOyF,WAElBggG,mBAAoB,SAASxN,EAASpF,EAAiB4K,GACnD,IAAInrD,EAAiBt7D,KAAK0hC,gBACtBrc,EAAW,IAAIgI,EAAAA,GACfoB,EAAUpJ,EAASoJ,UACvB,GAAIzuB,KAAKwtH,kBAAoBxtH,KAAK6hF,cAC9B,IAAK4kC,EAQD,OAPAzmH,KAAKu+G,eAAelwF,MAAKP,IAChB9tB,KAAK6hF,aAIVx8D,EAAS8I,UAHLnuB,KAAK0mH,gBAAgB54F,GAAON,OAAOnI,EAAS8I,YAK7CM,OAKX,GAFAzuB,KAAKq4G,mBACLr4G,KAAKo4G,uBACDyD,GAAmB,EAAG,CACtB,IAAIluC,EAAa,CAACkuC,GAClB77G,KAAKoiH,gCAAgCz0C,GAChCszC,GACD3lD,EAAe2P,YAAY,CACvBxwB,WAAY,SACZkzB,WAAYA,IAM5B,OADAtoD,EAAS8I,UACFM,GAEXigG,yBAA0B,SAASx4G,GAC/B,GAAIlW,KAAKytH,kBAAmB,CACxB,IAAIkB,EAAe3uH,KAAK62C,mBAAmBC,oBAAoBlvB,OAC/D1R,EAAQ2lC,SAAQ6kB,IACZ,IACIh1C,IAAKA,GACLg1C,EACAntB,EAAWvzC,KAAK0hC,gBAAgBsxC,iBAAiBtnD,GACrD,IAAK,IAAM6nB,EACP,IAAK,IAAI/T,EAAc,EAAGA,EAAcmvF,EAAcnvF,IAClDx/B,KAAKugF,UAAUtgC,gBAAgB1M,EAAU/T,GAAawC,YAAY4qF,SAMtF/J,eAAgB,SAASvhG,EAAShhB,EAAOmP,GACrC,IAAIw4C,GAAepmB,EAAAA,EAAAA,GAAEvgB,EAAQk2B,aAI7B,OAHIx3C,KAAKytH,wBAAqB,IAAWnsG,EAAQoK,KAC7C1rB,KAAKmiH,eAAel6D,EAAc3mC,GAE/BthB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCq2F,cAAe,WACX,IAAIpmD,EAAiBt7D,KAAK0hC,gBACtB1hC,KAAKktH,0BACDltH,KAAKytH,mBACLztH,KAAK69G,oBAETviD,EAAe2P,eAEnBjrE,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9Bue,cAAe,SAASnV,GACpB,IAAIqgC,EAAWrgC,EAAKqgC,SAChB,YAAcrgC,EAAKnlB,MAAQwlD,IAAak9C,IACxChyG,KAAK8tH,4BAA4Br5F,GACjCA,EAAKqV,SAAU,GAEf9pC,KAAKs6B,SAAS7F,IAGtBu5F,2BAA4B,SAASxuF,EAAauuF,EAAgBvV,GAC9D,IAAI1xG,EAAU9G,KAAK62C,mBAAmBC,oBAClCtX,GAAe,IACf+xC,EAAAA,EAAAA,KAAY,KACRvxE,KAAKi/G,iBAAiBn4G,EAAQ04B,GAAc14B,EAAQinH,GAAiBvV,OAIjFN,wBAAyB,SAASzjF,GAC9B,GAAIz0B,KAAKktH,wBAAyB,CAC9B,IAIQ0B,EAJJpvF,EAAcx/B,KAAK05G,6BACnBpB,EAAwBt4G,KAAKu4G,6BAC7BC,EAAcx4G,KAAK0hC,gBAAgBsxC,iBAAiBv+C,EAAKogC,eAAiByjD,EAC9E,IAAI7nF,EAAAA,EAAAA,IAAUgE,EAAKn0B,QAAUm0B,EAAKn0B,QAAUm0B,EAAKogC,cAE7C,QAAU+5D,EAAwB5uH,KAAKguH,kCAA+B,IAAWY,GAAiCA,EAAsB1iG,KAAKlsB,KAAMw/B,EAAaA,EAAag5E,QAGjLx4G,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAGlCjU,UAAW,SAASm8B,GAChB,GAAIvzC,KAAKwtH,kBAAoBxtH,KAAKsuE,YAAa,CAC3C,IAAI1oC,EAAW5lC,KAAK0hC,gBAAgBtkB,QAAQm2B,GAAU3N,SAClDm9E,EAAS/iH,KAAK0hC,gBAAgBoxC,iBAAiBv/B,GACnDvzC,KAAK0mH,cAAc,KAAM9gF,GAAUpY,QAAO,KACtC+lB,EAAWvzC,KAAK0hC,gBAAgBsxC,iBAAiB+vC,GACjD/iH,KAAK2/G,mBAAmBpsE,WAG5BvzC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAGlCs0F,mBAAoB,SAASpsE,GACrBvzC,KAAKytH,kBACLztH,KAAK8/G,eAAevsE,GAEpBvzC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAGlC0tF,aAAc,SAASF,GACnB,IAAIgW,EAAmB7uH,KAAKytH,mBAAqB5U,GAAiB,YAAc74G,KAAKuiC,OAAO,kBACxFviC,KAAKktH,wBACD2B,IACA7uH,KAAKo4G,uBACLp4G,KAAKq4G,oBAGTr4G,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAGlCywF,gBAAiB,SAAS9wF,GACtB,QAAIhrB,KAAKytH,mBAGFztH,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErC00F,gBAAiB,SAASxsE,EAAUsoE,GAChC,IAAIvgD,EAAiBt7D,KAAK0hC,gBAC1B,OAAI1hC,KAAKytH,mBACLnyD,EAAe2P,YAAY,CACvBxwB,WAAY,SACZkzB,WAAY,CAACkuC,EAAiBtoE,MAE1B,IAAIlmB,EAAAA,IAAUc,WAEnBnuB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCg4F,eAAgB,SAAS19E,EAAKw9E,EAAgBI,GACtCvjH,KAAKktH,wBACLltH,KAAK4jH,sBAAsBj+E,EAAKw9E,EAAgBI,GAEhDvjH,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAGlCwrF,wBAAyB,SAASnjG,EAAQ4N,GACtC,GAAIthB,KAAKktH,wBAAyB,CAC9B,IAAI4B,EAAc9uH,KAAKytH,kBACvB,OAAQ/5G,EAAOpE,MACX,IAAK,OACL,IAAK,SACL,IAAK,OACD,OAAO,EACX,IAAK,SACD,OAAOtP,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,cAAgByjG,IAAgBxtG,EAAQqkB,IAAIg1E,SACjF,IAAK,WACD,OAAOmU,GAAe9uH,KAAKgW,cAAcsL,IAAYA,EAAQqkB,IAAIg1E,QACrE,QACI,OAAO36G,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAG7C,OAAOrrB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErC0jG,oBAAqB,WACjB,IAAIz0F,EAAWt6B,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACzC,OAAOiP,GAAYt6B,KAAKytH,mBAE5B9L,iBAAkB,SAASzrG,GAEnB,IAAI84G,EADJhvH,KAAKwtH,iBAED,YAAc,QAAUwB,EAAY94G,EAAQ,UAAO,IAAW84G,OAAY,EAASA,EAAUlgH,OAC7F9O,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAG1BrrB,KAAKytH,mBACLztH,KAAK0uH,yBAAyBx4G,GAElClW,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,aAGlC65F,mBAAoB,SAAStvC,GACzB,IAAIuhC,EAAiBn3G,KAAKuiC,OAAO,YAAc,GAC3C4iF,EAAcnlH,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAK5C,OAJK8rF,EAAelhG,eAAiBkhG,EAAephG,aAAeohG,EAAenhG,gBAAkBhW,KAAKytH,oBACrGtI,EAAY98F,KAAKroB,KAAK+kH,kBAAkBnvC,EAAa,OAAQ,eAAgB,KAC7EuvC,EAAY98F,KAAKroB,KAAK+kH,kBAAkBnvC,EAAa,SAAU,iBAAkB,MAE9EuvC,GAEX7D,mBAAoB,WAChB,IAAI2N,EAKA5pG,EAJAhO,EAAUrX,KAAK0hC,gBAAgBwvC,iBAAiBlxE,KAAKo5G,mBACrDsE,EAAa19G,KAAKw9G,iBAClBxqG,EAAmB,OAAS0qG,QAAc,IAAWA,OAAa,EAASA,EAAW1qG,iBACtFk8G,EAAqBlvH,KAAKwtH,oBAAsB,OAASn2G,QAAW,IAAWA,GAAWA,EAAQuuB,UAMtG,OAJIspF,GAAsBl8G,IACtBqS,EAAW,IAAIgI,EAAAA,GACfrtB,KAAK4iH,YAAYv9F,IAEdrlB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAAWmC,OAAO,QAAUyhG,EAAa5pG,SAAa,IAAW4pG,OAAa,EAASA,EAAW9gG,UAEvIm/C,aAAc,SAAShsD,EAAS0J,EAAQm4F,GACpC,IAAI+L,EAAqBlvH,KAAKwtH,kBAAoBlsG,EAAQqkB,MAAQrkB,EAAQqkB,IAAIC,SAC1E5yB,EAAmBsO,EAAQnT,OAAO6E,iBAClCuwG,EAAuBjiG,EAAQnT,OAAO4E,eAAiBuO,EAAQnT,OAAOmkD,oBACtE68D,EAA2Bn8G,IAAqBmwG,GAAkB+L,GAAsBlvH,KAAKyiH,gBAAkBziH,KAAKy5G,WAAWn4F,EAAQiyB,SAAUjyB,EAAQke,aAC7J,OAAI2vF,GACAnvH,KAAKw/G,yBACLx/G,KAAKqjH,eAAe/hG,EAAQqkB,KAAK,EAAM49E,IAGpCvjH,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCq4F,iBAAkB,SAASpiG,EAAS6hG,GAChC,IAAInwG,EAAmBsO,EAAQnT,OAAO6E,iBAClCk8G,EAAqBlvH,KAAKwtH,kBAAoBlsG,EAAQqkB,MAAQrkB,EAAQqkB,IAAIC,SAC9E,GAAI5yB,IAAqBmwG,EAAgB,CACrC,GAAI+L,EAGA,OAFAlvH,KAAKi5G,eAAe33F,EAAQqkB,IAAIja,KAAK,GACrC1rB,KAAKq9G,0BAA0B/7F,EAAQke,aAAa,GAC7Cx/B,KAAKu+G,eACT,GAAIv+G,KAAKytH,kBAEZ,OADAtK,EAAiBnjH,KAAKsjH,eAAehiG,EAAQnT,QACtCnO,KAAKs6B,SAAShZ,EAAS6hG,GAGtC,OAAOnjH,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCovF,qBAAsB,SAASxzF,EAAMigD,GACjC,IACIx3D,KAAMA,EACNZ,KAAMA,GACNo4D,EACAlnE,KAAKytH,mBAAqB3+G,IAAS8iG,KACnC3qF,EAAKvX,MAAO4mG,EAAAA,GAAAA,IAAwBrvF,EAAKvX,KAAMA,IAEnD1P,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9Bw1F,mBAAoB,SAAS3qG,EAASmgG,EAAW+Y,GAC7C,IAAIpvH,KAAKytH,mBAAsB2B,EAG/B,OAAOpvH,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCs1F,sBAAuB,WACnB,IAAI3gH,KAAKytH,kBAGT,OAAOztH,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErC0xF,yBAA0B,SAASxpE,GAC/BvzC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1B,IAAI+wF,EAAe7oE,GAAY,EAAIA,EAAW,EAC1C/T,EAAcx/B,KAAK43G,8BACvBp4E,GAAe,GAAKx/B,KAAKwmH,SAASpK,EAAc58E,MAI5D0O,MAAO,CACHrI,SAAU,CACNoQ,aAAc,WACV,IAAItD,EAAS3yC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACnC4pD,EAAoBj1E,KAAK8lH,mBAQ7B,OAPI7wC,EAAkBi4C,yBAA2BltH,KAAKuiC,OAAO,0BACzDqE,EAAAA,EAAAA,GAAgB+L,GAAQoiC,EAAAA,GAAAA,IAAa0iB,GAAAA,EAAAA,KAAgB,sBAAuB,WAAajH,GAAoB,IAAKxwF,KAAK6pC,cAAa,KAC5HorC,EAAkB3G,aAClB2G,EAAkByxC,oBAIvB/zE,GAEXiD,WAAY,SAASjQ,GACjB,IAAI2Q,EAAOt2C,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACrC,GAAIsa,EAAK,CACL,IAAIsvC,EAAoBj1E,KAAK8lH,mBACzBG,IAAiBtgF,EAAIg1E,QACrB1lC,EAAkBw4C,mBAClBxH,GAAgB3vE,EAAKxU,SAAS+qF,IAGtC,OAAOv2E,IAGfs/B,YAAa,CACTn0C,UAAW,WACP,IAAI01E,EAAiBn3G,KAAKqqC,cAAc,WAAW9H,OAAO,WAC1D,OAAOviC,KAAKs6B,YAAc68E,IAAmBA,EAAelhG,eAAiBkhG,EAAenhG,gBAAkBmhG,EAAe3iG,OAAS49F,QCvkB1J5nD,GAAAA,eAAwB,mBAAoB6kE,I,0DC+CxCC,GAAmB,UACnBC,GAAuB,iBACvB15C,GAAkB,WAClB25C,GAAwB,qBACxBC,GAA+B,kBAC/BC,GAA+B,4BAC/BC,GAAsB,mBACtBC,GAAkB,YAClBC,GAA0B,uBAC1BC,GAA2B,wBAC3Bn+E,GAAgB,UAChB6hE,GAAe,sBACfuc,GAA2B,EAC3B1d,GAAgB,MAChBE,GAAiB,OACjBH,GAAkB,QAClBE,GAAiB,OACjBE,GAAkB,QAClB18B,GAAmB,gBACnBk6C,GAAmB,CAACxd,GAAiBD,IACrC0d,GAAsB,cACtBC,GAAoB,CACpBC,MAAO,QACPC,QAAS,UACTC,QAAS,WAETC,GAAwB,SACxBC,GAAwB,SACxBC,GAAuB,SACvBC,GAA0B,SAASznG,GACnC,OAAOyH,EAAAA,EAAAA,IAAUzH,IAAWA,IAAWwnG,IAEvCE,GAA6B,SAASpwH,EAAOgxC,GAC7C,YAAO,IAAWhxC,QAAS,IAAWA,GAASgxC,IAAeA,EAAW1L,UAEzE+qF,GAAuBnjF,GAAAA,WAAAA,QAA2B,CAClDvE,KAAM,WACFjpC,KAAK8lH,mBAAqB9lH,KAAKqqC,cAAc,WAC7CrqC,KAAK6pC,aAAa,mBACb7pC,KAAK4wH,kBACN5wH,KAAK6wH,uBAGbA,sBACI7wH,KAAK4wH,iBAAmB,GACxB5wH,KAAK8wH,sBAAwB,IAEjCC,gBAAiB,SAASl6G,GACtB,IAAIm6G,EAAiBhxH,KAAKixH,mBAAmB,OAASp6G,QAAU,IAAWA,OAAS,EAASA,EAAO6U,KACpG,QAASslG,KAAoBA,EAAeE,WAEhDD,mBAAoB,SAASvlG,EAAKo9C,GAC9B,IAEIkoD,EAFAG,GAAUvsD,EAAAA,EAAAA,IAAWl5C,GACrB0lG,GAAkBjhG,EAAAA,EAAAA,IAASghG,GAiB/B,OAdIH,EADAI,EACiBpxH,KAAK4wH,iBAAiBhtG,QAAOlU,IAAQqzB,EAAAA,EAAAA,IAAarzB,EAAKgc,IAAKA,KAAM,GAElE1rB,KAAK8wH,sBAAsBK,IAE3CH,GAAkBloD,IACnBkoD,EAAiB,CACbtlG,IAAKA,EACL2lG,SAAS,GAEbrxH,KAAK4wH,iBAAiBvoG,KAAK2oG,GACtBI,IACDpxH,KAAK8wH,sBAAsBK,GAAWH,IAGvCA,GAEXM,gBAAiB,SAASN,EAAgBO,GACtC,IAAIC,EAMJ,OAJIA,EADAD,EACcA,EAAkBC,aAAeD,EAAkBE,YAAc,CAACF,EAAkBE,YAEpFT,EAAeQ,aAAe,GAEzCA,GAEXE,eAAgB,SAASV,EAAgBO,GACrC,IAAIlsG,EAAW,IAAIgI,EAAAA,GACfxW,EAAS7W,KAAK8lH,mBAAmB6L,eAAe,OAASX,QAAkB,IAAWA,OAAiB,EAASA,EAAetlG,KAC/H8lG,EAAcxxH,KAAKsxH,gBAAgBN,EAAgBO,GACnDF,EAAUE,EAAoBA,EAAkBF,QAAUL,EAAeK,QACzE5hF,EAAa,CACb+hF,YAAaA,EACbH,QAASA,EACT3lG,IAAK7U,EAAO6U,IACZ+0F,QAAS5pG,EAAOnH,KAChB0jF,QAASpzF,KAAK8lH,mBAAmB5P,YAAYr/F,EAAO6U,KACpD+C,QAAS,KACTmjG,UAAW5xH,KAAK6xH,6BAA6BL,IAQjD,OANAxxH,KAAK2qC,cAAc,kBAAmB8E,IACtC7T,EAAAA,EAAAA,KAAK0yD,EAAAA,EAAAA,IAAY7+C,EAAWhhB,UAAUjB,QAAQ,WAC1CwjG,EAAeK,QAAU5hF,EAAW4hF,QACpCL,EAAeY,UAAYniF,EAAWmiF,UACtCvsG,EAAS8I,QAAQshB,MAEdpqB,EAASoJ,WAEpBojG,6BAA8B,SAASL,GACnC,IAAIM,EAAsB,GAS1B,OARA1gG,EAAAA,EAAAA,IAAKogG,GAAc,SAASx9F,EAAGy9F,GAC3B,IAAItjH,EAASsjH,EAAWtjH,OACpB4jH,EAAsB5jH,QAAU,IAAWA,EAAOmE,aAAenE,EAAO+E,gBACxE8+G,EAAkB7jH,GAAUA,EAAOZ,QAClCkkH,EAAW1G,UAAUrqF,WAAWgH,SAAS9f,QAAYoqG,IAAmBD,GACzED,EAAoBzpG,KAAKopG,EAAW7iH,YAGrCkjH,EAAoBjpG,KAAK,OAEpCopG,SAAU,SAASC,GACf,IAAIb,GAAU,EACVp8C,EAAoBj1E,KAAK8lH,mBACzBzgG,EAAW,IAAIgI,EAAAA,GACf8kG,EAAe,GACf3c,EAAWvgC,EAAkBsgC,cAEjC,GADA2c,EAASA,GAAU1c,IAAanD,GAC5BryG,KAAKoyH,wBACL,OAAO/sG,EAAS8I,SAAQ,GAAOM,UAGnC,GADAzuB,KAAKoyH,yBAA0B,EAC3BF,EAAQ,CACRj9C,EAAkB2tC,YAAYv9F,GAC9B,IAAInP,EAAU++D,EAAkB0gC,cAChCvkF,EAAAA,EAAAA,IAAKlb,GAAS,CAACkU,EAAOmG,KAClB,IACIzhB,KAAMA,EACN4c,IAAKA,GACL6E,EACJ,GAAI,WAAazhB,EAAM,CACnB,IAAIkiH,EAAiBhxH,KAAKixH,mBAAmBvlG,GAAK,GAC9C2mG,EAAmBryH,KAAKsyH,cAActB,GAC1CmB,EAAa9pG,KAAKgqG,GAClBA,EAAiBhkG,MAAKgkG,IAClBrB,EAAeE,WAAY,EAC3BG,EAAUA,GAAWgB,EAAiBhB,oBAI/C,GAAIrxH,KAAKuyH,sBAAuB,CACnC,IAAIF,EAAmBryH,KAAKsyH,cAActyH,KAAKuyH,sBAAsBC,cACrEL,EAAa9pG,KAAKgqG,GAClBA,EAAiBhkG,MAAKgkG,IAClBhB,EAAUgB,EAAiBhB,WAOnC,OAJAz1F,EAAAA,EAAAA,OAAQu2F,GAAc9jG,MAAK,KACvBruB,KAAKoyH,yBAA0B,EAC/B/sG,EAAS8I,QAAQkjG,MAEdhsG,EAASoJ,WAEpB6jG,cAAe,SAAStB,GACpB,IAAIyB,EAGAJ,EAFArpG,EAAS,IAAIqE,EAAAA,GACbilG,EAAgBtB,GAAkB0B,GAAAA,EAAAA,eAAgC1B,GAStE,OAPI,OAASsB,QAAiB,IAAWA,GAAiBA,EAAcK,WAAW/qG,SAC/E5nB,KAAK4yH,0BAA0B5B,GAC/BqB,EAAmBK,GAAAA,EAAAA,cAA+B1B,KAEtDp1F,EAAAA,EAAAA,KAAM,QAAU62F,EAAoBJ,SAAqB,IAAWI,OAAoB,EAASA,EAAkBhyG,WAAa4xG,GAAkBhkG,MAAKgkG,KACnJz2F,EAAAA,EAAAA,IAAK57B,KAAK0xH,eAAeV,EAAgBqB,IAAmBhkG,KAAKrF,EAAOmF,YAErEnF,EAAOyF,WAElBokG,kBAAmBh8G,KAAW03E,EAAAA,EAAAA,IAAc13E,EAAOnH,MACnDojH,sBAAuB,SAASj8G,GAC5B,IAAI2+F,EAAWx1G,KAAK8lH,mBAAmBvQ,cACnC7pF,EAAM7U,EAAO6U,IACbslG,EAAiBhxH,KAAKixH,mBAAmBvlG,GAAK,GAClD,IAAK,IAAMskG,GAAiB3lG,QAAQmrF,GAAW,CAC3C,GAAI3+F,EAAO/H,OAASwhH,KAA0BtwH,KAAK6yH,kBAAkBh8G,GAEjE,YADAm6G,EAAeK,SAAU,GAG7BrxH,KAAK+yH,kCAAiC,GACtC,IAAIC,EAAcN,GAAAA,EAAAA,eAAgC1B,GAClD,GAAIgC,EAAa,CACb,IAAIX,EAAmBK,GAAAA,EAAAA,cAA+B1B,IACtDp1F,EAAAA,EAAAA,IAAKy2F,EAAiB5xG,UAAY4xG,GAAkBhkG,MAAKgkG,IACrDrB,EAAeK,QAAUgB,EAAiBhB,QAC1CL,EAAeQ,YAAca,EAAiBb,oBAE1CR,EAAeQ,aAAgBR,EAAeQ,YAAY5pG,SAClEopG,EAAeK,SAAU,GAE7BrxH,KAAK+yH,kCAAiC,QAEtC/B,EAAeK,SAAU,GAGjC4B,aAAc,SAASlI,GACnB/qH,KAAKuyH,sBAAwBxH,GAEjCmI,2BAA4B,SAASxzF,GACjC,IAAIoR,EAAapR,EAAW6B,KAAK,IAAMsuF,IACvC,IAAK/+E,EAAWlpB,OAAQ,CACpB,IAAIgpB,EAAsBlR,EAC1BoR,GAAajP,EAAAA,EAAAA,GAAE,SAASE,SAAS6O,GAAqB9O,SAAS+tF,IAC/D7vH,KAAKwiC,iBAAiBsO,EAAYqiF,GAAAA,YAClCzzF,EAAWoC,SAASguF,MAG5BsD,4BAA6B,SAAS1zF,GAClC,IAAIoR,EAAapR,EAAW6B,KAAK,IAAMsuF,IACvC,GAAI/+E,EAAWlpB,OAAQ,CACnB,IAAIwoB,EAAY+iF,GAAAA,WAAAA,YAA0BriF,GACtCV,IACAA,EAAUxF,UACVwF,EAAU1P,WAAW4B,UAEzB5C,EAAWsC,YAAY8tF,MAG/BuD,wBAAyB,SAASrqG,GAC9B,IAAI+hG,EAAY/hG,EAAO+hG,UACnB3sG,EAAkB2sG,EAAUxoF,OAAO,mBACnCp0B,EAAS48G,EAAUxoF,OAAO,aAAjBwoF,GAAiC58G,OAC9CnO,KAAKszH,2BAA2B,CAC5BvQ,OAAQ3kG,EAAgBsN,IACxB8T,YAAarxB,EAAOic,MACpBioG,iBAAkBrpG,KAG1BuqG,qBAAsB,SAASn8C,GAC3BA,EAAItxC,UAAU4D,GAAG,aAAc1pC,KAAKqzH,wBAAwB/uF,KAAKtkC,OACjEo3E,EAAItxC,UAAU4D,GAAG,YAAa1pC,KAAKqzH,wBAAwB/uF,KAAKtkC,QAEpEwzH,mBAAoB,SAASp8C,GACzB,IAAI2zC,EAAY3zC,EAAItxC,UAChB1nB,EAAkB2sG,EAAUxoF,OAAO,mBACnCp0B,EAAS48G,EAAUxoF,OAAO,aAAjBwoF,GAAiC58G,OAC1C6a,EAAShpB,KAAKyzH,wBAAwB,CACtC1Q,OAAQ,OAAS3kG,QAAmB,IAAWA,OAAkB,EAASA,EAAgBsN,IAC1F8T,YAAarxB,EAAOic,QAEpBqmG,GAAwBznG,IAAWA,EAAOyG,SAAWygG,GAAkBG,SACvErwH,KAAK0zH,2BAA2B,CAC5B78G,OAAQuH,EACRohB,YAAarxB,EAAOic,SAIhCupG,sBAAuB,SAASj0F,EAAY1W,GACxC,IAAI+hG,EAAY/hG,EAAO+hG,UACnB3sG,EAAkB2sG,EAAUxoF,OAAO,mBACnCp0B,EAAS48G,EAAUxoF,OAAO,aAAjBwoF,GAAiC58G,OAK9C,GAJA6a,EAAOwoG,aAAexoG,EAAOwoG,YAAY31E,SAAQ5iB,IAC7CA,EAAKuG,YAAcrxB,EAAOic,MAC1B6O,EAAK9qB,OAASA,KAEduxB,EAAY,CACZ,IAAI2yF,EAAmBryH,KAAKyzH,wBAAwB,CAChD1Q,OAAQ3kG,EAAgBsN,IACxB8T,YAAarxB,EAAOic,QAEpBwpG,EAAoBnD,GAAwB4B,IAAqBA,EAAiBwB,oBAAsB7qG,EAAO0mC,GACnH,GAAI1vD,KAAK8zH,gCAAkCF,EACvC,OAEJ,GAAI5qG,EAAOyG,SAAWygG,GAAkBE,QAAS,CAC7C,IAAIpiB,EAAStuE,EAAW6B,KAAK,WACxBytE,EAAAA,GAAAA,IAAQhB,KACTpnE,EAAAA,EAAAA,QAAqBonE,EAAQ,SAC7BpnE,EAAAA,EAAAA,QAAqBonE,EAAQ36D,GAAAA,EAAAA,OAGrC,IAAIvM,GAAU34B,EAAOsD,kBAAoBzR,KAAKqqC,cAAc,iBAAiB0pF,kBAAkBr0F,GAC3F1W,EAAOyG,SAAWygG,GAAkBG,QAChCvpF,EACAA,EAAOvE,OAAO,mBAAoB2tF,GAAkBG,SAEpDrwH,KAAKkzH,2BAA2BxzF,GAE7BoH,EACPA,EAAOvE,OAAO,mBAAoB2tF,GAAkBC,OAEpDnwH,KAAKozH,4BAA4B1zF,GAErCA,EAAWsN,YAAYhtC,KAAKqhC,gBAAgBiuF,IAAmBtmG,EAAOyG,SAAWygG,GAAkBE,WAG3G4D,yBAA0B,SAASvkF,GAC/B,IAAIwkF,EACAh/C,EAAoBj1E,KAAK8lH,mBACzBjvG,EAASo+D,EAAkB08C,eAAeliF,EAAW/jB,KACrDwoG,EAAmBj/C,EAAkBihC,YAAYzmE,EAAW/jB,KAC5D0nE,EAAU,QAAU6gC,EAAkBxkF,EAAW9J,WAAQ,IAAWsuF,OAAkB,EAASA,EAAgB7gC,QAC/Gv8E,GAAUu8E,IAAY8gC,GACtBj/C,EAAkB+gC,iBAAiB,CAC/BtqF,IAAK+jB,EAAW/jB,IAChB0nE,QAASA,KAIrB+gC,gBAAiB,SAAS1kF,EAAY/P,GAClC,IAAIu1C,EAAoBj1E,KAAK8lH,mBACzB33G,EAASshC,EAAWthC,OACpB6E,EAAmB7E,EAAO6E,iBAC9B,KAAIyd,EAAAA,EAAAA,IAAUtiB,EAAOk5B,UAAal5B,EAAOoF,iBAAoBxM,MAAM2iB,QAAQvb,EAAOoF,kBAAqBpF,EAAOoF,gBAAgBqU,OAA9H,CAGA,IAAIyuF,EAAYphC,EAAkBnyC,cAAc2M,EAAW/jB,IAAKupD,EAAkB0gC,cAC9Eye,EAAsB/d,GAAa,EACvC,IAAK+d,EAAqB,CACtB,IAAKphH,EAAkB,CACnB,IAAIi9B,EAAoBjwC,KAAKqqC,cAAc,WACvCuM,GAAkB,OAAS3G,QAAqB,IAAWA,OAAoB,EAASA,EAAkB6G,sBAAwB,GACtI9jC,EAAmB4jC,EAAezgB,MAAM,SAAShoB,GAC7C,OAAOA,EAAO6E,oBAGtB,IAMQqhH,EAAuBC,EAN3B/pB,GAAYxnE,EAAAA,EAAAA,IAAa/iC,KAAKuiC,OAAO,sBAAuBkN,EAAW/jB,KACvE6oG,EAA8Bt/C,EAAkBi4C,yBAA2Bj4C,EAAkBh/D,cAAc,CAC3G0vB,IAAK8J,EAAW9J,MAGpB,GADAyuF,EAAsB7pB,GAAagqB,GAA+BvhH,EAC9DuhH,GAA+BvhH,EAE/BiiE,EAAkB+gC,iBAAiB,CAC/BtqF,IAAK+jB,EAAW/jB,IAChB0nE,QAAS,QAAUihC,EAAwB,QAAUC,EAAmB7kF,EAAW9J,WAAQ,IAAW2uF,OAAmB,EAASA,EAAiBlhC,eAAY,IAAWihC,EAAwBA,EAAwB5kF,EAAW//B,OAIjP,GAAI0kH,EAAqB,CACrB,GAAI10F,IAAeA,EAAW9X,OAE1B,YADA+D,EAAAA,EAAAA,IAAW,SAGf3rB,KAAKg0H,yBAAyBvkF,GAC9B,IAAIuhF,EAAiBhxH,KAAKixH,mBAAmBxhF,EAAW/jB,KAAK,GACzD8oG,EAAW,KACX,IAAI39G,EAASo+D,EAAkB08C,eAAe,OAASX,QAAkB,IAAWA,OAAiB,EAASA,EAAetlG,KACzHprB,EAAQ6N,EAAO4C,oBAAoB,OAAS8F,QAAU,IAAWA,OAAS,EAASA,EAAOnH,OAAS,IACvG,YAAO,IAAWpP,EAAQA,EAAQmvC,EAAWnvC,OAE7Cm0H,EAAsB/0F,GAAcA,EAAWkQ,SAAS,aAC5DlQ,GAAcA,EAAWoC,SAAS9hC,KAAKqhC,gBAAgBuuF,KACvD,IAAI7E,EAAY,IAAI2J,GAAAA,EAAUh1F,IAAcmC,EAAAA,EAAAA,GAAE,SAAU,CACpDvyB,KAAMnB,EAAOiD,QACbmC,iBAAiBqY,EAAAA,EAAAA,IAAO,EAAM,GAAIzd,EAAOoF,iBACzC6K,gBAAiB4yG,EACjB71F,QAASs5F,EAAsB,KAAO,CAClCD,SAAUA,EACVG,uBAAwB3rG,IACpBhpB,KAAK2zH,sBAAsBj0F,EAAY1W,KAG/CmiG,WAAY,WACR,IAAIz/F,EAAM,OAASslG,QAAkB,IAAWA,OAAiB,EAASA,EAAetlG,IACrF7U,EAASo+D,EAAkB08C,eAAejmG,GAC1C0nE,EAAUne,EAAkBihC,YAAYxqF,GAC5C,MAAO,CACHhc,MAAM4mG,EAAAA,GAAAA,IAAwBljB,EAAS,OAASv8E,QAAU,IAAWA,OAAS,EAASA,EAAOnH,MAC9FvB,OAAQA,IAGhB3D,cAAexK,KAAKuzH,qBAAqBjvF,KAAKtkC,MAC9C2J,YAAa3J,KAAKwzH,mBAAmBlvF,KAAKtkC,QAE9C,GAAIy0H,EAAqB,CACrB,IAAIt5F,EAAU4vF,EAAUxoF,OAAO,WAC3BpH,IACAA,EAAQq5F,SAAWA,EACnBr5F,EAAQy5F,4BAA8B,IAG9C,OAAO7J,KAGfgI,iCAAkC,SAAS8B,GACvC70H,KAAK8zH,+BAAiCe,GAE1CC,iCAAkC,WAC9B,OAAO90H,KAAK8zH,gCAEhBiB,6BAA8B,SAASr0D,GACnC,IACIqiD,OAAQA,EACRvjF,YAAaA,GACbkhC,EACJ,OAAO1gE,KAAKuyH,wBAAyBxvF,EAAAA,EAAAA,IAAa/iC,KAAKuyH,sBAAsBhwF,OAAO,mBAAmB7W,IAAKq3F,IAAW/iH,KAAKuyH,sBAAsBhwF,OAAO,aAAlCviC,GAAkDmO,OAAOic,QAAUoV,GAE9Lw1F,aAAc,SAASjK,GACnB,IAAIkK,EAAa,CACblS,OAAQgI,EAAUxoF,OAAO,mBAAmB7W,IAC5C8T,YAAaurF,EAAUxoF,OAAO,aAAjBwoF,GAAiC58G,OAAOic,OAErDioG,EAAmBryH,KAAKyzH,wBAAwBwB,GAChDC,EAAgBzE,GAAwB4B,GACvC6C,IACD7C,EAAmBtH,EAAUkH,YAEjC,IAAI5sG,EAAW,IAAIgI,EAAAA,GACf8N,EAAU4vF,EAAUxoF,OAAO,WAS/B,OARI2yF,GAAiB7C,EAAiB5iG,SAAWygG,GAAkBG,UAC/DrwH,KAAKszH,2BAA2B2B,GAChC95F,EAAQw5F,uBAAuBtC,KAEnCz2F,EAAAA,EAAAA,IAAKy2F,EAAiB5xG,UAAY4xG,GAAkBhkG,MAAKgkG,IACrD6C,GAAiB/5F,EAAQw5F,uBAAuBtC,GAChDhtG,EAAS8I,QAAQkkG,MAEdhtG,EAASoJ,WAEpB6kG,2BAA4B,SAASpsD,GACjC,IACI67C,OAAQA,EACRvjF,YAAaA,EACb6yF,iBAAkBA,GAClBnrD,EACA8pD,EAAiBhxH,KAAKixH,mBAAmBlO,GAC7C,GAAKiO,EAAL,CAMA,IAAIhoG,EACJ,GAJKgoG,EAAeO,oBAChBP,EAAeO,kBAAoB,IAGnCc,GAGA,GAFArpG,GAAS4C,EAAAA,EAAAA,GAAO,GAAIymG,GACpBrB,EAAeO,kBAAkB/xF,GAAexW,EAC5CqpG,EAAiB5iG,SAAWygG,GAAkBG,UAC1CrwH,KAAK8lH,mBAAmBvQ,gBAAkBjD,KAC1CtpF,EAAO3D,SAAW,IAAIgI,EAAAA,GACtBrE,EAAOvI,SAAS+M,QAAO,KACnBxE,EAAO3D,SAAS8I,aAEpBnuB,KAAK8lH,mBAAmBlD,YAAY55F,EAAO3D,WAE3CrlB,KAAK8zH,gCAEL,YADA9qG,EAAO6qG,kBAAoBxB,EAAiB3iE,SAKpD1mC,EAASgoG,EAAeO,kBAAkB/xF,GAE1CxW,GAAUA,EAAO6qG,0BACV7qG,EAAO6qG,oBAGtBJ,wBAAyB,SAASrsD,GAC9B,IAAI+tD,GAEApS,OAAQA,EACRvjF,YAAaA,GACb4nC,EACA4pD,EAAiBhxH,KAAKixH,mBAAmBlO,GAAQ,GACrD,OAAO,OAASiO,QAAkB,IAAWA,GAA0B,QAAUmE,EAAwBnE,EAAeO,yBAAsB,IAAW4D,OAA3F,EAA4HA,EAAsB31F,IAEpN41F,2BAA4B,SAASjwD,GACjC,IACItuD,OAAQA,EACR2oB,YAAaA,GACb2lC,EACA6rD,EAAiBhxH,KAAKixH,mBAAmB,OAASp6G,QAAU,IAAWA,OAAS,EAASA,EAAO6U,KAChGslG,GAAkBA,EAAeO,oBACjCvxH,KAAK0zH,2BAA2B,CAC5B78G,OAAQA,EACR2oB,YAAaA,WAEVwxF,EAAeO,kBAAkB/xF,KAGhDk0F,2BAA4B,SAAS2B,GACjC,IACIx+G,OAAQA,EACR2oB,YAAaA,GACb61F,EACArE,EAAiBhxH,KAAKixH,mBAAmBp6G,EAAO6U,KACpD,GAAI7U,GAAUm6G,EAAeO,kBAAmB,CAC5C,IAAIvoG,EAASgoG,EAAeO,kBAAkB/xF,GAC1CxW,IACAA,EAAO3D,UAAY2D,EAAO3D,SAAS4I,OAAOuiG,IAC1CQ,EAAeO,kBAAkB/xF,GAAegxF,MAI5DoC,0BAA2B,SAAS5B,GAC5BA,IACAA,EAAeO,0BAA4BP,EAAeO,yBACnDP,EAAeE,YAG9BoE,cAAe,SAASC,GACpB,IACIxS,OAAQA,EACRvjF,YAAaA,GACb+1F,EACAvsG,EAAShpB,KAAKyzH,wBAAwB,CACtC1Q,OAAQA,EACRvjF,YAAaA,IAEjB,OAAOixF,GAAwBznG,IAAWA,EAAOyG,SAAWygG,GAAkBE,SAElFoF,iBAAkB,SAASC,GACvB,IACI1S,OAAQA,EACRvjF,YAAaA,GACbi2F,EACAzE,EAAiBhxH,KAAKixH,mBAAmBlO,GACzCiQ,EAAchC,GAAkB0B,GAAAA,EAAAA,eAAgC1B,GAChE2B,EAAaK,GAAeA,EAAYL,WAC5C,OAAOA,GAAcA,EAAW/uG,QAAO0O,IACnC,IAAInkB,EAASmkB,EAAEiQ,OAAO,aAATjQ,GAAyBnkB,OACtC,QAAOA,GAASA,EAAOic,QAAUoV,KAClC,IAEPk2F,wBAAyB,SAAS3+E,GAC9B,IAAIs7E,EAAmBryH,KAAKyzH,wBAAwB,CAChD1Q,OAAQhsE,EAAYrrB,IACpB8T,YAAauX,EAAY5oC,OAAOic,SAEhCqG,EAAAA,EAAAA,IAAU4hG,GACVt7E,EAAY4+E,iBAAmBtD,IAAqB7B,GAAuB6B,EAAiB5iG,OAAS+gG,UAE9Fz5E,EAAY4+E,oBAIpBC,GAAmB,CAC1B1vE,eAAgB,WACZ,MAAO,CACH1+C,QAAS,CACLmN,MAAO,CACH8C,wBAAyBgyB,EAAAA,EAAAA,OAA2B,0CAKpEuE,YAAa,CACT6nF,WAAYlF,IAEhBviF,UAAW,CACPJ,YAAa,CACTxmC,QAAS,CACL60G,WAAY,SAAS2H,GACjB,IAAIntG,EAAS7W,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACnCyqG,EAAuB91H,KAAKqqC,cAAc,cAI9C,OAHIxzB,GAAUmtG,EAAal1G,OAASyhH,IAChCuF,EAAqBhD,sBAAsBj8G,GAExCA,GAEXshG,qBAAsB,SAAS1jF,GAC3Bz0B,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1B,IAAIyqG,EAAuB91H,KAAKqqC,cAAc,cAC9C5V,EAAKn0B,MAAMu7C,SAAQhlC,SACX,IAAWi/G,EAAqB7E,mBAAmBp6G,EAAO6U,MAC1DoqG,EAAqBhD,sBAAsBj8G,OAIvDk/G,yBAA0B,WACtB,IAAInuF,EAAO5nC,KACPg2H,EAAmBpuF,EAAK7B,QAAQ,YAAYu4C,yBAC5C/qC,EAAWyiF,GACf5kG,EAAAA,EAAAA,IAAKwW,EAAK+tE,cAAc,CAAC3hF,EAAGiiG,KACxB,IACIvqG,IAAKA,EACL5c,KAAMA,GACNmnH,EACAjF,EAAiBhxH,KAAKqqC,cAAc,cAAc4mF,mBAAmBvlG,GACrEslG,IAAmBA,EAAeK,SAAWL,EAAe1uG,YAAcslB,EAAKkxE,aAC/EkY,EAAe1uG,UAAYslB,EAAKkxE,WAE5BkY,EAAez9E,SADfzkC,IAASwhH,GACiB0F,EAEAziF,EAE9BA,SAIZi4E,2BAA4B,SAASH,GACjC,IAAIyK,EAAuB91H,KAAKqqC,cAAc,cAC1C2mF,EAAiB8E,EAAqB7E,mBAAmB5F,EAAc3/F,KAAK,GAChF,MAAO,CACHtN,gBAAiB4yG,IAGzBlN,6BAA8B,SAASn+E,EAAK49E,GACpCA,GAAwBvjH,KAAKsoH,YAAc3iF,EAAIC,UAC/C5lC,KAAKsoH,UAAU2J,WAEnBjyH,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9BmjG,iBAAkB,SAASxjG,GACvB,IAAIkrG,EAAgBl2H,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1CyqG,EAAuB91H,KAAKqqC,cAAc,cAM9C,OALI6rF,GAAiBlrG,EAAO7c,OAAO6E,kBAC/B8iH,EAAqBhD,sBAAsB,CACvCpnG,IAAKV,EAAOU,MAGbwqG,GAEXx9B,aAAc,SAASt7E,EAAOq9B,GAC1B,IAAIvkC,EAAUlW,KAAK21G,aACfr6C,EAAiBt7D,KAAKqqC,cAAc,QACpCyrF,EAAuB91H,KAAKqqC,cAAc,cAC9CjtB,EAAQpd,KAAKs6B,SAASld,EAAOq9B,GAC7B,IAAIsqB,EAAa3nD,EAAMwK,OACnBuuG,EAAiB,SAASt/G,EAAQm6G,GAClC,IAAIthH,EAAO,CACPgc,IAAK7U,EAAO6U,KAEZtB,EAAQ,SAASvT,EAAQuG,GACzB,IAAIgN,GAAS,EACTmwF,EAAW1jG,EAAO/H,OAASwhH,GAC3B5kG,EAAM7U,EAAO6U,IAOjB,OANA0F,EAAAA,EAAAA,IAAKhU,GAAQ,SAASya,EAAG5Q,GACrB,IAAI8b,EAAAA,EAAAA,IAAarX,EAAK6uF,EAAWtzF,EAAKyE,IAAM4vC,EAAev/B,MAAM9U,IAE7D,OADAmD,EAAQyN,GACD,KAGRzN,EAVC,CAWVvT,EAAQuG,GACV,KAAIgN,GAAS,GAAb,CAGA4mG,EAAez9E,SAAWy9E,EAAez9E,SAAWwxB,EAAaisD,EAAez9E,SAAWwxB,EAAaisD,EAAez9E,SACvH,IAAIA,EAAWy9E,EAAez9E,SAC9B7jC,EAAK8jG,IAAgB,EACrBp2F,EAAM4/B,OAAOzJ,EAAU,EAAG7jC,KAW9B,OATI1P,KAAKu1G,gBAAkBnD,IAAmB,YAAc33D,GAAc,WAAaA,GACnFvkC,EAAQ2lC,SAAQhlC,IACZ,IAAI6U,EAAM7U,EAAO6U,IACbslG,EAAiB8E,EAAqB7E,mBAAmBvlG,GACzDslG,GAAkBn6G,EAAO/H,MAAQkiH,EAAe1uG,YAActiB,KAAK84G,aAAe,OAASjiG,QAAU,IAAWA,OAAS,EAASA,EAAOyL,aAAetiB,KAAK84G,YAC7Jqd,EAAet/G,EAAQm6G,MAI5B5zG,GAEXo9F,gBAAiB,SAASvzF,GACtB,IAAImvG,EAAanvG,EAAKvX,KAAK8jG,IACvB9nF,EAAM0qG,EAAanvG,EAAKvX,KAAKgc,IAAMzE,EAAKyE,IACxC8pF,EAAWx1G,KAAKu1G,cACpB,GAAIC,IAAapD,IAAmBgkB,GAAc1qG,EAAK,CACnD,IAAIxV,EAAUlW,KAAK21G,aACfU,EAAYnnE,EAAAA,cAA4BxjB,EAAKxV,GACjD,GAAImgG,GAAa,EAAG,CAChB,IAAIx/F,EAASX,EAAQmgG,GACrB,GAAIx/F,EAAO/H,OAASwhH,GAAuB,CACvC,IAAIl9B,EAAUpzF,KAAKk2G,YAAYr/F,EAAO6U,KACtCzE,EAAKvX,MAAOkc,EAAAA,EAAAA,IAAO,EAAM,GAAIwnE,EAASv8E,EAAOnH,MAC7CuX,EAAKyE,IAAMA,IAIvB1rB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9BgrG,iCAAkC,SAASngH,GACvC,IAAI0xB,EAAO5nC,KACP81H,EAAuB91H,KAAKqqC,cAAc,cAC1C4F,EAAoBjwC,KAAKqqC,cAAc,WACvCvjC,EAAUmpC,EAAkBiB,aAC5BolF,EAAmBrmF,EAAkBqoB,sBAAsB10C,QAAOzV,IAAWA,EAAOsE,SACpFgnD,EAAexpB,EAAkB0e,kBAAkB/qC,QAAOzV,IAAWA,EAAO+E,kBAAoB,IAAMojH,EAAiBjsG,QAAQlc,KAC/HooH,EAA4B,GAC5BC,EAAgB,CAACroH,EAAQ40G,IAAW/iH,KAAK0hC,gBAAgBsxC,iBAAiB+vC,IAAW,GAAKuT,EAAiBjsG,QAAQlc,GAAU,EA4BjI,OA3BAmoH,EAAiBjuG,QAAQoxC,IACpB,IAAMu2D,GAAiB3lG,QAAQrqB,KAAKu1G,iBACrCnkF,EAAAA,EAAAA,IAAKtqB,GAAU,SAASktB,EAAG7lB,GACvB+H,EAAQ2lC,SAAS,SAAShlC,GACtB,IAAInH,EACJ,IAAI8mH,EAAcroH,EAAQ0I,EAAO6U,KAAjC,CAGA,GAAI7U,EAAO/H,OAASwhH,GAChB5gH,EAAOmH,EAAOnH,UACX,GAAI,WAAamH,EAAO/H,KAAM,CACjC,IAAIskF,EAAUxrD,EAAKsuE,YAAYr/F,EAAO6U,KACtChc,GAAO4mG,EAAAA,GAAAA,IAAwBljB,EAASv8E,EAAOnH,MAEnD,GAAIA,EAAM,CACN,IAAIq7G,EAAY+K,EAAqB3B,gBAAgB,CACjDhmH,OAAQA,EACRud,IAAK7U,EAAO6U,IACZprB,MAAO6N,EAAO4C,mBAAmBrB,KAEjCq7G,GACAwL,EAA0BluG,KAAK0iG,WAM5C,WACHwL,EAA0B16E,SAAS,SAASkvE,GACxCA,EAAUngF,eAItB21E,oBAAqB,SAAS1pG,EAAQw/F,GAClC,IAAIrtF,EAAShpB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACnCyqG,EAAuB91H,KAAKqqC,cAAc,cAC1C2mF,EAAiB8E,EAAqB7E,mBAAmB,OAASp6G,QAAU,IAAWA,OAAS,EAASA,EAAO6U,KACpH,GAAI7U,EAAQ,CACR,IAAIw6G,EAAU,WAAax6G,EAAO/H,MAAQkiH,EAAeK,QACzDroG,EAASA,IAAWqoG,MACjB,CACH,IAAIoF,EAAoBz2H,KAAKq2H,iCAAiCr2H,KAAK21G,cACnE3sF,EAAS,IAAIqE,EAAAA,GACbrtB,KAAK6+G,iBAAiB71F,GAAQ,KAC1B8sG,EAAqB7D,UAAS,GAAM5jG,MAAKqoG,IAGrC,OAFAD,IACAz2H,KAAK+1H,2BACG/1H,KAAKu1G,eACT,KAAKjD,GACIokB,GACD12H,KAAKw/G,oBAET,MACJ,KAAKpN,GACIskB,IACD12H,KAAKq4G,mBACLr4G,KAAKo4G,uBACLp4G,KAAKqqC,cAAc,QAAQ4gC,eAGvCjiD,EAAOmF,SAASuoG,SAI5B,OAAO1tG,EAAOyF,QAAUzF,EAAOyF,UAAYzF,GAE/CulG,gBAAiB,SAASh7E,EAAU/T,EAAavY,GAC7C,IAAI+B,EAAShpB,KAAKs6B,SAASiZ,EAAU/T,EAAavY,GAClD,GAAIjnB,KAAKu1G,gBAAkBjD,GAAgB,CACvC,IAAI5hE,EAAQ1wC,KAAKugF,UAAUtgC,gBAAgB1M,EAAU/T,GACjDurF,EAAYr6E,GAASA,EAAMhhC,KAAK,eAChC4hC,EAAaZ,GAASA,EAAM3J,QAAQ,WAAWr3B,KAAK,WACpDpP,EAAQyqH,GAAaA,EAAUxoF,OAAO,WAAWiyF,WACrD,GAAIzJ,GAAa2F,GAA2BpwH,EAAOgxC,GAAa,CAC5D,IAAIwkF,EAAuB91H,KAAKqqC,cAAc,cAC1ChlB,EAAW,IAAIgI,EAAAA,GAInB,OAHAuO,EAAAA,EAAAA,IAAKk6F,EAAqBd,aAAajK,GAAY/hG,GAAQqF,MAAK,CAACgkG,EAAkBrpG,KAC/E3D,EAAS8I,QAAQkkG,EAAiB5iG,SAAWygG,GAAkBC,OAASnnG,MAErE3D,EAASoJ,UACb,IAAKs8F,EACR,OAAO/hG,IAInBw4F,mBAAoB,SAAS5rG,GACzB,IAAIyrE,EACAmsC,EAAiBxtH,KAAKu1G,gBAAkBjD,GAK5C,IAJAlhF,EAAAA,EAAAA,IAAKpxB,KAAK21G,cAAc,CAAC3hF,EAAGnd,KACxB,IAAI4pE,EAAYzgF,KAAK22H,cAAc9/G,GACnCwqE,EAAiBA,GAAkBZ,KAEnCY,EAAgB,CAChB,IAAI7K,EAAax2E,KAAKugF,UAAU5I,gBAC5BnB,IACAA,EAAWv5B,SACXu5B,EAAWkI,gBAAgB2C,IAGnC,GAAIzrE,GAAU43G,GAAkBxtH,KAAKsjH,iBAAkB,CACnD,IAAIlH,EAAep8G,KAAKo5G,kBACxBp5G,KAAK0hC,gBAAgBupC,YAAY,CAC7BxwB,WAAY,SACZkzB,WAAY,CAACyuC,KAEjBp8G,KAAKw/G,yBACF,IAAK5pG,EAAQ,CAChB,IAAIghH,GAA6B,EACjC,GAAIpJ,EAAgB,CAChB,IAAI1mH,EAAU9G,KAAKqqC,cAAc,WAAW6G,aACxC2lF,EAA+B/vH,EAAQ8c,QAAOm0B,IAC9C,IAAI++E,EACJ,OAAO/+E,EAAI/kC,mBAAqB,QAAU8jH,EAAuB/+E,EAAIxkC,uBAAoB,IAAWujH,OAAuB,EAASA,EAAqBlvG,QAAU,KACpKA,OAAS,EACZgvG,GAA8BC,EAE9BD,GACA52H,KAAKqqC,cAAc,cAAcwmF,wBAI7CxyE,mBAAoB,SAAS5pB,GACzB,IAAIsiG,EAAkB/2H,KAAKqqC,cAAc,cAAcumF,iBACnD,aAAe5wH,KAAKuiC,OAAO,mBAC3BviC,KAAKg3H,yBAEL,YAAcviG,EAAKgmB,aACnBrpB,EAAAA,EAAAA,IAAK2lG,GAAkB,SAAS/iG,EAAGg9F,GAC/BA,EAAez9E,UAAY9e,EAAKrX,MAAMwK,UAG9C5nB,KAAKs6B,SAAS7F,IAElBuiG,uBAAwB,WACpB,IAAID,EAAkB/2H,KAAKqqC,cAAc,cAAcumF,kBACvDx/F,EAAAA,EAAAA,IAAK2lG,GAAiB,CAAC/iG,EAAGg9F,KAClBA,EAAe1uG,YAActiB,KAAK84G,oBAC3BkY,EAAe1uG,iBACf0uG,EAAez9E,cAIlC+uE,sBAAuB,WACnBtiH,KAAKqqC,cAAc,cAAcwmF,sBACjC7wH,KAAKs6B,YAETq8F,cAAe,SAAS9/G,GACpB,IAAIsqE,EACAQ,EAAgB3hF,KAAKqqC,cAAc,iBACnCjtB,EAAQpd,KAAKqqC,cAAc,QAAQjtB,QACnCm2B,EAAWvzC,KAAK8iC,cAAcjsB,EAAO6U,IAAKtO,GAC1C4zG,EAAiBhxH,KAAKqqC,cAAc,cAAc4mF,mBAAmBp6G,EAAO6U,KAChF,IAAM,OAASslG,QAAkB,IAAWA,IAAkBA,EAAeK,UAAY,OAASL,QAAkB,IAAWA,GAAkBA,EAAeY,WAAar+E,GAAY,EAErL,OADA4tC,EAAgBnhF,KAAK02G,kBACd/0B,GAAiBA,EAAcT,eAAe,OAAS8vC,QAAkB,IAAWA,OAAiB,EAASA,EAAeY,UAAWr+E,EAAU4tC,IAGjK+hC,iBAAkB,SAAS58E,GACvB,IAAIwvF,EAAuB91H,KAAKqqC,cAAc,cAC1ChlB,EAAW,IAAIgI,EAAAA,GAenB,OAdAyoG,EAAqBV,2BAA2B,CAC5Cv+G,OAAQ7W,KAAK2xH,eAAerrF,EAAE5a,KAC9B8T,YAAa8G,EAAEn4B,OAAOic,QAE1BpqB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAAWgD,MAAK,KACtC,IAAI4oG,EAAmBnB,EAAqBN,iBAAiB,CACzDzS,OAAQz8E,EAAE5a,IACV8T,YAAa8G,EAAEn4B,OAAOic,SAE1BwR,EAAAA,EAAAA,IAAKq7F,GAAoBnB,EAAqBd,aAAaiC,IAAmB5oG,MAAKgkG,IAC/EryH,KAAKqqC,cAAc,iBAAiB4kE,UACpC5pF,EAAS8I,QAAQkkG,SAGlBhtG,EAASoJ,WAEpB22F,kBAAmB,SAAS10E,EAAOjB,GAC/BzvC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1B,IAAIyqG,EAAuB91H,KAAKqqC,cAAc,cAC9CyrF,EAAqBJ,wBAAwBjmF,GAC7C,IAAIo3E,IAAmBp3E,EAAW0nD,SAC9BkuB,EAAerlH,KAAKkvE,eAAez/B,GACnCynF,GAAczmG,EAAAA,EAAAA,IAAUgf,EAAWkmF,kBACnCwB,EAAiB9R,GAAgB51E,EAAWthC,OAAO4E,cAAgB8zG,IAAmBxB,KAAkB51E,EAAW9J,IAAIC,WAAasxF,GACxI,GAAIC,EAAgB,CAChB,IAAIpM,EAAYr6E,EAAMhhC,KAAK,eACvBq7G,IACAnvF,EAAAA,EAAAA,IAAK57B,KAAKqqC,cAAc,cAAc2qF,aAAajK,IAAY18F,MAAK,KAChEynG,EAAqBJ,wBAAwBjmF,QAK7DkiF,eAAgB,SAASjmG,GACrB,IAAIxV,EAAUlW,KAAK21G,aACnB,OAAOz/F,EAAQg5B,EAAAA,cAA4BxjB,EAAKxV,KAEpDg5D,eAAgB,SAASz/B,GACrB,IAAI41E,EAAerlH,KAAKs6B,SAASmV,GAC7B54B,EAAS7W,KAAK2xH,eAAeliF,EAAW/jB,KACxC0rG,IAAkB3nF,EAAW9J,KAAO3lC,KAAKqqC,cAAc,cAAcirF,cAAc,CACnFvS,OAAQtzE,EAAW/jB,IACnB8T,YAAaiQ,EAAWthC,OAAOic,QAEnC,OAAOi7F,GAAgBrlH,KAAKqqC,cAAc,cAAc0mF,gBAAgBl6G,IAAWugH,IAG3FhvC,cAAe,CACXivC,kBAAmB,SAAS33F,GACxB,GAAKA,GAAeA,EAAW9X,OAA/B,CAGA,IAAI0vG,EAAkBt3H,KAAKugF,UAAUp/C,UAAUI,KAAK,IAAMvhC,KAAKqhC,gBAAgBkuF,KAC3EgI,EAAoB73F,EAAWqH,QAAQ,IAAIjf,OAAO9nB,KAAKqhC,gBAAgBsQ,MAC3E2lF,GAAmBA,EAAgBh1F,SACnCg1F,GAAkBz1F,EAAAA,EAAAA,GAAE,SAASC,SAAS9hC,KAAKqhC,gBAAgBkuF,KAAuBxtF,SAASrC,GAC3F,IAAI83F,EAAiB,CACjBp+G,UAAW,KACX7L,SAAS,EACTC,MAAO,OACP9E,OAAQ,OACRm0B,OAAQ6C,EACR7kB,SAAS,EACTvB,UAAWi+G,EACXE,uBAAuB,EACvBp+G,qBAAqB,EACrBG,0BAA0B,EAC1BshF,4CAA4C,EAC5CvhF,gBAAiB,KACb,IAAIm+G,GAAiB71F,EAAAA,EAAAA,GAAE,SAASC,SAAS6tF,IACrCgI,EAAgB,CAChBtoH,KAAM,SACNzG,KAAM5I,KAAKuiC,OAAO,yCAClBhzB,QAAS,KACLvP,KAAK8lH,mBAAmBpN,mBAGhC,OAAO,IAAIpf,GAAAA,WAAOo+B,EAAgBC,GAAej3F,YAErDhmB,SAAU,CACNoI,GAAI,WACJJ,GAAI,YACJM,OAAQ,MACRH,UAAW,OACXD,eAAgB,MAChBD,SAAU3iB,KAAKugF,UAAUp/C,WAE7By2F,aAAc53H,KAAK63H,mBAAmBvzF,KAAKtkC,OAE/C,OAAO,IAAI83H,GAAAA,EAAQR,EAAiBE,KAExCO,oBAAqB,SAASrnF,EAAOsnF,GACjC,IAAIC,EACAC,EACApuB,EAAiB9pG,KAAKugF,UAAUupB,iBAChC0e,EAAwBxoH,KAAK8lH,mBAAmB0C,wBACpD,GAAI1e,IAAmB0e,EAAuB,CAC1C,IAAI2P,EAAiBznF,EAAM3J,QAAQ,WAAWu6C,OAAO5xE,KAAK,WACtDyoH,GAAkB,UAAYA,EAAer0F,UAC7Cm0F,GAAuBp2F,EAAAA,EAAAA,GAAE7hC,KAAKugF,UAAU//B,cAAc23E,EAAe5kF,WAAW/R,OAChF02F,EAAoBD,EAAqB12F,KAAK,IAAMu0C,IAChDoiD,EAAkBtwG,QAAU,WAAaswG,EAAkBv4F,IAAI,GAAGuU,MAAMkkF,aACxEF,EAAkB/yF,IAAI,aAAc,UACpC6yF,EAAeruH,YAAc,WACzBuuH,EAAkB/yF,IAAI,aAAc,SAMxD0yF,mBAAoB,SAASvxF,EAAG+xF,GAC5B,IAAK/xF,EAAER,UAAUwyF,yBAA0B,CACvC,IAAIC,GAAiB12F,EAAAA,EAAAA,GAAEyE,EAAEnF,SAASyO,SAAS5vC,KAAKqhC,gBAAgBkuF,KAC5DiJ,GAAeD,GAAkBv4H,KAAKugF,UAAU5F,2BAChD89C,EAAqBz4H,KAAK04H,+CAA+CpyF,EAAGiyF,EAAgBF,GAChG/xF,EAAER,UAAUwyF,4BAA8BE,IAAeC,GACrDA,EACAnyF,EAAER,UAAUvD,OAAOk2F,GACZD,GACPlyF,EAAER,UAAUujF,YAIxBsP,uBAAwB,SAASjoF,EAAOkoF,EAAU3oH,EAAW4oH,GACzD,IAAIC,EAAcpoF,EAAMnP,KAAK,8BAA8B7xB,KAAK,WAC5D2oH,EAAmBS,GAAeA,EAAYv2F,OAAO,WACrDw2F,EAAaV,EAAmB,YAAc,OAASpoH,EACvD+oH,EAAaX,EAAmB,WAAa,UAAYpoH,EACzDsnH,EAAoB7mF,EAAM3J,QAAQ,IAAIjf,OAAO9nB,KAAKqhC,gBAAgBsQ,MAClEsnF,EAAmB,GACvBL,GAAYA,EAAS/8E,SAAS,SAASjtC,GACnCqqH,IAAqBA,EAAiBrxG,OAAS,QAAU,KAAMjW,EAAAA,EAAAA,IAAW/C,MAE9E,IAAIsqH,EAAsBl5H,KAAKqhC,gBAAgBouF,IAC/CzvH,KAAKugF,UAAUp/C,UAAUI,KAAK,IAAM23F,GAAqB52F,SACzD,IAAI62F,GAAkBt3F,EAAAA,EAAAA,GAAE,SAASC,SAAS0tF,IAAuB1tF,SAAS4tF,IAA8B5tF,SAASo3F,GAAqBh4G,KAAK+3G,GAAkBl3F,SAAS2O,GAClKsnF,EAAiB,CACjBn7F,OAAQ6T,EACRp3B,UAAWi+G,EACX18G,SAAS,EACTrN,MAAO,OACP9E,OAAQ,OACR6E,SAAS,EACT6L,WAAW,EACXq+G,uBAAuB,EACvBp+G,qBAAqB,EACrBG,0BAA0B,EAC1BshF,4CAA4C,EAC5CpgF,SAAU,CACNmI,UAAW,OACXF,SAAU3iB,KAAKugF,UAAUp/C,UACzBve,eAAgB,MAChBI,OAAQ,CACJ9T,EAAG,EACHC,GAAIkpH,GAAoBlwF,EAAAA,EAAAA,SAAmB,EAAI,GAEnDrlB,GAAIi2G,EACJr2G,GAAIs2G,GAERpB,aAActxF,IACVtmC,KAAK63H,mBAAmBvxF,EAAG+xF,GAC3Br4H,KAAKo5H,8BAA8B9yF,EAAER,UAAUohB,WAAY2xE,GAAiBA,EAAc3xE,WAAYxW,KAG9G1wC,KAAK+3H,oBAAoBrnF,EAAOsnF,GAChC,IAAIF,GAAAA,EAAQqB,EAAiBnB,IAEjCU,+CAAgD,SAASp3G,EAASi3G,EAAgBF,GAC9E,IAAIgB,EAAer5H,KAAK62C,mBAAmB0f,kBAC3C,GAAK8iE,GAAiBA,EAAazxG,OAAnC,CAGA,IAAIlN,EAEAktB,EAAMzG,EAASoS,EAAUyL,EADzBs6E,GAAqBf,IAAmB3wF,EAAO5nC,KAAMmhC,EAAU7f,EAAQ6f,QAASoS,GAAW1R,EAAAA,EAAAA,GAAEV,GAAS4F,QAAQ,MAAM3c,QAAS40B,GAAgBnd,EAAAA,EAAAA,GAAE+F,EAAK24C,UAAU//B,cAAcjN,IAAWoQ,QAAQ9S,WAAWjtB,OAAO,yBAA0BgkB,EAAK24C,UAAUxhC,WAAWC,GAAegK,QAAO,CAACuwE,EAAIC,IAAOD,EAAKC,GAAI,IAEhTC,EAAyBn4G,EAAQwkB,UAAUohB,WAC3CwyE,GAAyBn4E,EAAAA,EAAAA,IAAck4E,GAAwB,GAC/DE,GAAgBpB,GAAkBmB,EAAyBJ,EAC3D95F,EAAcx/B,KAAKugF,UAAU9iC,cAAa5b,EAAAA,EAAAA,GAAEvgB,EAAQ6f,SAAS4F,QAAQ,OACrE6yF,EAA8B,SAASP,GACvC,IAAIQ,EACAC,EAQJ,OAPAT,EAAaljG,MAAK,CAAChoB,EAAQic,KACvB,GAAIjc,EAAOk5B,UAAY4oF,GAGnB,OAFA4J,EAA2B,IAAMzvG,GAAS,EAAIA,EAC9C0vG,EAA0B1vG,IAAUivG,EAAazxG,OAAS,GAAK,EAAIwC,EAAQjc,EAAOunC,QAAU,GACrF,KAGR,CACH3Q,iBAAkB80F,EAClBE,eAAgBD,GAZU,CAchCT,GAiBF,OAhBKd,GAAmB/4F,IAAgBo6F,EAA4B70F,mBAAoB40F,EAM7En6F,IAAgBo6F,EAA4BG,iBACnDr/G,EAAW,CACPmI,UAAW,YACXC,GAAI,YACJJ,GAAI61G,GAAkBF,EAAmB,WAAa,gBAEtDE,IACA79G,EAASsI,OAAS,SAZtBtI,EAAW,CACPmI,UAAW,YACXC,GAAI,WACJJ,GAAI21G,EAAmB,YAAc,eAYtC39G,GAAY,CACfA,SAAUA,EACVV,SAAU2/G,EAAeL,EAAoB,OAAI,KAGzDF,8BAA+B,SAASlyE,EAAU8yE,EAAgBtpF,GAC9D,GAAKspF,EAAL,CAGA,IAAIC,EAAgB/yE,EAASlkC,SACzBk3G,EAAsBF,EAAeh3G,SACzC,GAAIi3G,EAAc/6G,MAAQg7G,EAAoBh7G,KAAO+6G,EAAcl7G,MAAOyiC,EAAAA,EAAAA,IAAS0F,GAAYgzE,EAAoBn7G,KAAM,CACrH,IAAIA,GAAOyiC,EAAAA,EAAAA,IAASw4E,GAAkBjK,GACtC7oE,EAAS/hB,IAAI,OAAQ+0F,EAAoBn7G,KAAO2xB,EAAM1tB,SAASjE,MAAQA,EAAOA,MAGtFo7G,qBAAsB,WAClB,IAAIjB,EAAsBl5H,KAAKqhC,gBAAgBouF,IAC3C2K,EAAqBp6H,KAAKqhC,gBAAgBkuF,IAC9C,MAAO,oBAAsB6K,EAAqB,sBAAwBlB,EAAsB,wBAA0BA,GAE9HjwF,KAAM,WACFjpC,KAAKs6B,WACLt6B,KAAK8lH,mBAAqB9lH,KAAKqqC,cAAc,WAC7CrqC,KAAK62C,mBAAqB72C,KAAKqqC,cAAc,WAC7CrqC,KAAKugF,UAAYvgF,KAAK+lC,QAAQ,aAElCmoE,UAAW,SAASmsB,GACXA,GACDr6H,KAAKqqC,cAAc,cAAc4oF,aAAa,MAElDjzH,KAAKs6B,YAETggG,gBAAiB,SAAS55F,EAAU2xF,EAAkBxjB,GAClD,IAAI0rB,EAOA1B,EANA7qB,EAAS,OAASttE,QAAY,IAAWA,OAAW,EAASA,EAASqG,QAAQ/mC,KAAK4tG,yBACnFl9D,EAAQ,OAASs9D,QAAU,IAAWA,GAAUA,EAAOrnE,GAAG,MAAQqnE,EAAS,KAC3E18D,EAAa,OAAS08D,QAAU,IAAWA,OAAS,EAASA,EAAOjnE,QAAQ,WAAWr3B,KAAK,WAC5FmH,EAASy6B,EAAatxC,KAAKqqC,cAAc,WAAWsnF,eAAergF,EAAW5lB,KAAO,KACrFvd,EAASuiC,GAAS1wC,KAAKqqC,cAAc,WAAWyM,oBAAoBpG,EAAMtmB,SAC1E8kD,OAAiB,KAAY,OAASr4D,QAAU,IAAWA,GAAkB,QAAU0jH,EAAe1jH,EAAOnH,YAAS,IAAW6qH,OAA7D,EAAqFA,EAAa,OAASpsH,QAAU,IAAWA,OAAS,EAASA,EAAOmB,SAAWtP,KAAK8lH,mBAAmB3E,aAE/P,OAASkR,QAAoB,IAAWA,OAAmB,EAASA,EAAiB5iG,UAAYygG,GAAkBE,SAAWlhD,IAC3HlvE,KAAK8lH,mBAAmBvQ,gBAAkBjD,KAC1CumB,EAAgB74H,KAAKq3H,kBAAkBrpB,IAG/C,IAAIwsB,EAAwBnI,GAAoBA,EAAiB5iG,SAAWygG,GAAkBE,QAC9F,GAAIoK,GAAyB9pF,GAASviC,GAAUkkH,GAAoBA,EAAiBb,YAAa,CAC9F,IAAIiJ,EAAgB,GACpBpI,EAAiBb,YAAY31E,SAAS,SAAS5iB,GAC3CwhG,EAAcpyG,KAAK4Q,EAAKrqB,YAE5B5O,KAAK24H,uBAAuB3qB,EAAQysB,EAAetsH,EAAO8B,WAAa,OAAQ4oH,IACjFhqB,GAAc7uG,KAAKugF,UAAUp/C,WAAanhC,KAAKugF,UAAU5F,4BAE/DvtC,MAAO,SAAS1M,EAAUmuE,GACtB,IAAKxjF,UAAUzD,OACX,OAAO5nB,KAAKs6B,WAEhB,IAAIogG,EAAYh6F,GAAYA,EAASqG,QAAQ,IAAM/mC,KAAKqhC,gBAAgBw0C,KAAkBt0C,KAAKvhC,KAAKm6H,wBAEpG,GADAO,GAAaA,EAAUp4F,SACnB,OAAS5B,QAAY,IAAWA,GAAYA,EAASkP,SAAS,UAC9D,OAAO5vC,KAAKs6B,SAASoG,EAAUmuE,GAEnC,IAMIwjB,EANArkB,EAAS,OAASttE,QAAY,IAAWA,OAAW,EAASA,EAASqG,QAAQ/mC,KAAK4tG,yBACnFtzE,EAAWt6B,KAAKs6B,SAChBywF,EAAY/c,IAAWA,EAAOt+F,KAAK,gBAAkBgxB,EAASa,KAAK,IAAMvhC,KAAKqhC,gBAAgBuuF,KAAkB1qF,GAAG,GAAGx1B,KAAK,gBAC3H4hC,EAAa08D,GAAUA,EAAOjnE,QAAQ,WAAWr3B,KAAK,WACtDulE,EAAoBj1E,KAAKqqC,cAAc,WACvCxzB,EAASy6B,EAAa2jC,EAAkB08C,eAAergF,EAAW5lB,KAAO,KAEzEoqG,EAAuB91H,KAAKqqC,cAAc,cAC9C,GAAI0gF,EAAW,CACX+K,EAAqB7C,aAAalI,GAClC,IAAIzqH,EAAQyqH,EAAUxoF,OAAO,WAAWiyF,WACxC,GAAI9D,GAA2BpwH,EAAOgxC,IAAewkF,EAAqB/E,gBAAgBl6G,GAkBtF,OAjBAo+D,EAAkB8pC,4BAA4B1wF,MAAK,MAC/CuN,EAAAA,EAAAA,IAAKk6F,EAAqBd,aAAajK,IAAY18F,MAAKrF,IACpDqpG,EAAmBrpG,EACnB,IAAI7a,EAASkkH,EAAiBtH,UAAUxoF,OAAO,aAAlC8vF,GAAkDlkH,OAC3D0I,GAAU1I,IAAW2nH,EAAqBf,6BAA6B,CACnEhS,OAAQlsG,EAAO6U,IACf8T,YAAarxB,EAAOic,UAIxBioG,EAAiB5iG,SAAWygG,GAAkBE,UAC9CvhB,GAAa,GAEjB7uG,KAAKs6H,gBAAgB55F,EAAU2xF,EAAkBxjB,GACjDv0E,EAASpO,KAAKlsB,KAAM0gC,EAAUmuE,UAG/B7uG,KAAKs6B,SAASoG,EAAUmuE,GAIvC,OADA7uG,KAAKs6H,gBAAgB55F,EAAU2xF,EAAkBxjB,GAC1C7uG,KAAKs6B,SAASoG,EAAUmuE,IAEnCklB,kBAAmB,SAASr0F,GACxB,IAAIk3D,EAAUl3D,EAAW6B,KAAK,kBAAkB2D,GAAG,GACnD,OAAOgK,EAAAA,kBAAgC0nD,KAG/ClnF,KAAM,CACFm/D,eAAgB,SAASC,EAAQC,EAAQC,EAAiBxvC,EAAayvC,GACnE,IAAI0rD,EAAeC,EACf3mF,EAAO,QAAU0mF,EAAgB7rD,EAAOv9B,aAAU,IAAWopF,OAAgB,EAASA,EAAcn7F,GACpGq7F,EAAsB5mF,GAAQA,EAAK0hF,iBACnCG,EAAuB91H,KAAKqqC,cAAc,cAC1CgoF,EAAmByD,EAAqBrC,wBAAwB,CAChE1Q,OAAQj0C,EAAOpjD,IACf8T,YAAaA,IAEbwxF,EAAiB8E,EAAqB7E,mBAAmBniD,EAAOpjD,KAChEovG,EAAsBrK,GAAwB4B,GAAoBA,EAAiB5iG,OAAS4iG,EAC5F0I,EAAgBvvG,KAAKC,UAAUsjD,EAAOI,kBAAoB3jD,KAAKC,UAAUqjD,EAAOK,gBAChF6rD,GAAwBn5F,EAAAA,EAAAA,GAAE,OAASoS,QAAQ,IAAWA,OAAO,EAASA,EAAKuD,aAAa5H,SAAS5vC,KAAKqhC,gBAAgBiuF,KACtH2L,EAAiBnsD,EAAOR,YAAcS,EAAOT,UAC7C4sD,EAAqB,OAASjnF,QAAQ,IAAWA,GAAgB,QAAU2mF,EAAwB3mF,EAAK9lC,OAAOoF,uBAAoB,IAAWqnH,OAAtF,EAAuHA,EAAsBhzG,OACzM,SAAIqzG,GAAkBC,GAAsBL,IAAwBC,GAAuBC,GAAiB/J,EAAeK,SAAW2J,IAG/Hh7H,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,cAI7C6iB,MAAO,CACHrI,SAAU,CACN80C,yBAA0B,SAAShoC,GAC/B,IAAIonC,EACAL,EACAyhD,EACAz6F,EAAW1gC,KAAKmhC,UAChBi6F,EAAkB16F,GAAYA,EAASa,KAAK,IAAMvhC,KAAKqhC,gBAAgBouF,IAAgC,wBAE3G,GADAzvH,KAAKs6B,SAASqY,GACVyoF,GAAmBA,EAAgBxzG,SACnCmyD,EAAe/5E,KAAKggD,kBACpBm7E,EAAwBn7H,KAAKk6E,yBAAyBvnC,GACtD+mC,EAAuByhD,EAAsBx3E,QACzC+1B,GAAwB,IAAMK,EAAanyD,UAAY8xD,EAAqB/yC,GAAG,cAAe8a,EAAAA,EAAAA,IAAe25E,IAAmB35E,EAAAA,EAAAA,IAAei4B,KAG/I,OAFAyhD,EAAsB1sH,QACtB6tE,EAAAA,EAAAA,IAAU6+C,GAAuB15E,EAAAA,EAAAA,IAAe25E,KACzC,GAInBrU,kBAAmB,SAAShwE,EAAarX,GACrC1/B,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAC1BqwD,EAAAA,EAAAA,KAAY,KACR,IAAIkb,EAAUl3D,EAAW6B,KAAK,cAAcoiB,QACxC03E,EAAmBzkC,EAAQhvE,SAAWgvE,EAAQ/lD,WAAWjpB,OACxDyzG,GACDr7H,KAAKqqC,cAAc,cAAc8pF,gBAAgBp9E,EAAa6/C,OAI1EvhD,cAAe,SAAS3E,EAAOjB,GACtBzvC,KAAKqqC,cAAc,WAAWm+E,yBAC/BxoH,KAAKqqC,cAAc,cAAc8pF,gBAAgB1kF,EAAYiB,GAEjE1wC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9BszD,iBAAkB,SAAS28C,GACvB,IAAIrmD,EAAoBj1E,KAAKqqC,cAAc,WAC3C4qC,GAAqBA,EAAkB4M,cAAgB7hF,KAAKggD,gBAAgBs7E,GAAclqG,MAAK,CAAC4C,EAAG/M,KAC/F,IAAIqqB,GAAazP,EAAAA,EAAAA,GAAE5a,GAAMvX,KAAK,WAC9B,GAAI4hC,EAAY,CACZ,IAAIz6B,EAASo+D,EAAkB08C,eAAergF,EAAW5lB,KACzD7U,GAAUo+D,EAAkB0hD,cAAc9/G,YC1uCtE2zC,GAAAA,eAAwB,aAAcorE,ICItC,IAAIr3F,GAAwB,uBACxBg9F,GAAsB3zF,GAAQA,EAAKrF,OAAO,kCAAoCqF,EAAK4zF,YAAYC,aAAe7zF,EAAK4zF,YAAYE,uBAAyB,EACxJC,GAAoB/zF,GAAQA,EAAKg0F,OAAOh0G,OAASggB,EAAKg0F,OAAO,GAAGt5G,WAAa,EAC7Eu5G,GAAkBj0F,GAAQA,EAAKg0F,OAAOh0G,OAASggB,EAAKg0F,OAAOh0F,EAAKg0F,OAAOh0G,OAAS,GAAGtF,WAAa,EAChGw5G,GAAc,CAACl0F,EAAMwW,EAAS3pB,KAC9BmT,EAAKm0F,kBAAmB,EACxB39E,EAAQ3pB,GACRmT,EAAKm0F,kBAAmB,GAExBC,GAAsB,CAACp0F,EAAMwW,EAAS3pB,KACtC,GAAImT,EAAKq0F,gBAGL,OAFAr0F,EAAKq0F,iBAAkB,EACvBH,GAAYl0F,EAAMwW,EAAS3pB,IACpB,GAGXynG,GAAuBt0F,IACvB,IAAIrlB,EAAWqlB,EAAKu0F,aAAa55G,WAC7B65G,EAAiBx0F,EAAKrF,OAAO,4BACjC,GAAI65F,EACA,OAAO,EAEX,IAAIC,EAAmBz0F,EAAK4zF,YAAYc,eACxC,GAAI10F,EAAK4zF,YAAY3zF,iBAAmBD,EAAKrF,OAAO,kCAAmC,CACnF85F,EAAmB,EAMnB,IALA,IAAIC,EAAe10F,EAAK4zF,YAAYc,eAAiB10F,EAAK4zF,YAAYe,mBAClEv5G,EAAS4kB,EAAK4zF,YAAYgB,mBAC1B9hH,EAAWktB,EAAK4zF,YAAYiB,sBAC5BC,EAAoB90F,EAAK4zF,YAAYkB,oBACrC10D,EAAkBpgC,EAAKu0F,aAAan0D,kBAC/B+V,EAAY2+C,EAAkBC,MAAO5+C,EAAY/V,EAAiB+V,IAAa,CACpF,GAAI/6D,GAAUtI,EAAW4hH,EACrB,MAEJ,IAAIM,EAAWh1F,EAAK4zF,YAAYqB,eAAe9+C,IAAcn2C,EAAK4zF,YAAYe,mBAC9Ev5G,GAAU45G,EACN55G,GAAUtI,GACV2hH,KAIZ,OAAO95G,GAAY85G,EAAmB,EAAI5pG,KAAKw1C,KAAKo0D,EAAmB95G,GAAY,GAEnFu6G,GAAsB,CAACl1F,EAAMm1F,KAC7B,IAAIr4G,EAAiBkjB,EAAKrF,OAAO,4BAC7BmlC,EAAYw0D,GAAqBt0F,GACjCE,EAAeF,EAAK4zF,YAAY1zF,eAapC,OAZI4/B,IACIq1D,EACAr1D,EAAYhjD,EAAiB,EAAI,GAE7BA,GACAgjD,KAEA5/B,GAAiByzF,GAAoB3zF,IACrC8/B,MAILA,GAEPs1D,GAAsBp1F,IACtB,IAAI5e,GAAU,EACV24E,EAAiBg6B,GAAkB/zF,GACnCq1F,EAAcr1F,EAAKu0F,aACvB,GAAIx6B,EAAiB,EACjB34E,EAAS4e,EAAKkxE,gBACX,GAAKlxE,EAAKg0F,OAAOh0F,EAAKkxE,WAAanX,IAEnC,GAAIA,GAAkB,GAAK/5D,EAAK4zF,YAAYc,gBAAkB,EAAG,CACpE,GAAI36B,EAAiB,EAAG,CACpB,IAAIu7B,EAA2BrB,GAAgBj0F,GAAQ,IAAMq1F,EAAYv1D,aAAe9/B,EAAKg0F,OAAOh0G,OAASk1G,GAAoBl1F,GAAQ,EACrIu1F,EAAqBD,GAA4Bt1F,EAAKkxE,aAAenX,GAAkBm7B,GAAoBl1F,GAAM,GACjHu1F,IACAn0G,EAAS24E,EAAiB,GAGlC,GAAI34E,EAAS,EAAG,CACZ,IAAIo0G,EAAqBz7B,EAAiB/5D,EAAKg0F,OAAOh0G,QAAUggB,EAAKkxE,WAAagkB,GAAoBl1F,GAClGw1F,IACAp0G,EAAS24E,EAAiB/5D,EAAKg0F,OAAOh0G,eAZ9CoB,EAAS4e,EAAKkxE,WAmBlB,OAHIlxE,EAAKy1F,oBAAoBr0G,KACzBA,GAAU,GAEPA,GAEPs0G,GAAW,CAAC11F,EAAMtlB,KAClB,IAAI26G,EAAcr1F,EAAKu0F,aACvB,GAAI75G,IAAcslB,EAAKtlB,cAAgB26G,EAAYr7F,aAAetf,EAAY26G,EAAYv1D,cAAgBu1D,EAAY/0D,oBAAsB5lD,IAAc26G,EAAYv1D,YAGlK,OAFAu1D,EAAY36G,UAAUA,GACtBslB,EAAKy1F,oBAAoB/6G,IAAa,GAC/BsZ,EAAAA,EAAAA,IAAKqhG,EAAY7+D,QAAQ5wC,QAAO,KACnCoa,EAAKy1F,oBAAoB/6G,IAAa,MAI9Ci7G,GAAiB,CAAC31F,EAAMwW,EAAS3D,EAAY+iF,EAAgBC,KAC7D,IAAIR,EAAcr1F,EAAKu0F,aACnB/+G,EAAQ6/G,EAAY7/G,QAAQ2M,QAC5BlT,GAASsZ,EAAAA,EAAAA,IAASsqB,GAAcA,OAAa,EAC7CijF,EAAY,YAAcjjF,EAC1BkjF,EAAgBV,EAAYU,gBAC5BljF,IAActB,EAAAA,EAAAA,IAASsB,KAAgB7S,EAAKq0F,kBAC5CplH,EAAS,CACL4jC,WAAYA,EACZr9B,MAAOA,GAEPqgH,IACA5mH,EAAO+mH,YAAcH,EAAgB14D,WACjCluD,EAAO+mH,aAAeX,EAAYY,eAClChnH,EAAO+mH,YAAcX,EAAYY,aAAaF,EAAe9mH,EAAO+mH,YAAaF,MAI7F,IAAII,EAAkBL,EAAkBA,EAAgBM,YAAc,EAClED,GAAmBb,EAAYY,eAC/BC,EAAkBb,EAAYY,aAAaF,EAAeG,EAAiBJ,IAE3E,WAAajjF,GACbkjF,EAAct1G,KAAKoL,MAAMkqG,EAAevgH,GACpCqgH,GACAE,EAAc3gF,OAAO,EAAG8gF,IAErBJ,GACPC,EAAc3wE,QAAQv5B,MAAMkqG,EAAevgH,GACvCqgH,GACAE,EAAc3gF,QAAQ8gF,IAG1Bl2F,EAAKu0F,aAAawB,cAAcvgH,GAEpC6/G,EAAYe,gBACZp2F,EAAKq2F,eAAiBr2F,EAAKtlB,YAC3BslB,EAAKq0F,gBAAkBuB,EAClBA,GACD1B,GAAYl0F,EAAMwW,EAASvnC,IAG5B,MAAMqnH,GACT3kG,YAAYgO,EAAY01F,GACpBj9H,KAAKw7H,YAAcj0F,EACnBvnC,KAAKm8H,aAAec,EACpBj9H,KAAK84G,WAAa94G,KAAKi+H,eAAiBhB,EAAY36G,YACpDtiB,KAAK47H,OAAS,GACd57H,KAAKq9H,oBAAsB,GAE/B96F,SACI,OAAOviC,KAAKw7H,YAAYj5F,OAAO9O,MAAMzzB,KAAKw7H,YAAanwG,WAE3D8yG,yBAAyBpgD,GACrB,IAKIqgD,EALA77G,EAAWviB,KAAKm8H,aAAa55G,WAC7BmlD,EAAY1nE,KAAKm8H,aAAaz0D,YAC9ByE,EAAcnsE,KAAKw7H,YAAY3zF,gBAC/BqkC,EAAalsE,KAAKw7H,YAAY1zF,eAC9BkgC,EAAkBhoE,KAAKm8H,aAAan0D,kBAExC,GAAIzlD,IAAa4pD,GAAeD,IAAelE,GAAmB,EAAG,CACjE,IAAIs0D,EAAet8H,KAAKw7H,YAAYc,eACpC,GAAIA,GAAgBv+C,EAAYu+C,GAAgBt0D,IAAoBhoE,KAAKw7H,YAAYC,YACjF,GAAIz7H,KAAKm8H,aAAaj0D,mBAAoB,CACtCk2D,EAAe12D,EAAY,EAC3B,IAAI22D,EAAer2D,EAAkBzlD,EACjC67G,EAAe,GAAKC,EAAe,GAAKA,EAAe/B,GACvD8B,SAGJA,EAAe12D,MAEhB,CACH02D,EAAe3rG,KAAKC,MAAMqrD,EAAYx7D,GACtC,IAAI+7G,EAAe52D,EAAY,EAC/B02D,EAAe3rG,KAAKxP,IAAIm7G,EAAc,GACtCA,EAAe3rG,KAAKvP,IAAIk7G,EAAcE,GAG1C,OADAt+H,KAAKsiB,UAAU87G,GACRp+H,KAAKo+D,QAGpB97C,UAAUA,GACN,IAAIulB,EAAgB7nC,KAAKw7H,YAAY3zF,gBACjCC,EAAe9nC,KAAKw7H,YAAY1zF,eACpC,OAAI,IAAU9nC,KAAKuiC,OAAOhE,MAA2BsJ,GAAiBC,SAC9D,IAAWxlB,IACXtiB,KAAK84G,WAAax2F,GAEftiB,KAAK84G,YAEL94G,KAAKm8H,aAAa75G,UAAUA,GAG3Cq/E,eAAe48B,GACX,IAAI58B,EAAiBg6B,GAAkB37H,MAIvC,OAHI2hG,EAAiB,IACjBA,OAAiB,IAAW48B,EAAmBA,EAAmBv+H,KAAKsiB,aAEpEq/E,EAEX68B,eACI,IAAIA,EAAe3C,GAAgB77H,MACnC,OAAOw+H,EAAe,EAAIA,EAAex+H,KAAKi+H,eAElD17G,WACI,OAAOviB,KAAKm8H,aAAa55G,WAE7B67C,OACI,IACIp1C,EADAi0G,EAAcj9H,KAAKm8H,aAEnBt0F,EAAgB7nC,KAAKw7H,YAAY3zF,gBACjCC,EAAe9nC,KAAKw7H,YAAY1zF,eACpC,IAAI,IAAU9nC,KAAKuiC,OAAOhE,MAA2BsJ,GAAiBC,GAAe,CACjF,IAAI22F,EAAmBzB,GAAoBh9H,MAC3C,GAAIy+H,GAAoB,EAAG,CACvB,IAAIp2D,EAAai1D,GAASt9H,KAAMy+H,GAC5Bp2D,IACAr/C,EAAS,IAAIqE,EAAAA,GACbg7C,EAAWh6C,MAAK,KACZ,IAAIqwG,EAAgB1+H,KAAK2+H,eACrBD,EACAA,EAAcrwG,KAAKrF,EAAOmF,SAASC,KAAKpF,EAAOiF,QAE/CjF,EAAOmF,aAEZC,KAAKpF,EAAOiF,QACfgvG,EAAYe,uBAIpBh1G,EAASi0G,EAAY7+D,OAOzB,OALKp1C,GAAUhpB,KAAKi+H,iBAAmBj+H,KAAKsiB,aACxCtiB,KAAKm8H,aAAayC,UAAU,CACxBnkF,WAAY,cAGbzxB,IAAW,IAAIqE,EAAAA,IAAUc,UAEpC0wG,aACI,IAAIh3F,EAAgB7nC,KAAKw7H,YAAY3zF,gBACjCC,EAAe9nC,KAAKw7H,YAAY1zF,eACpC,IAAKD,GAAiBC,KAAkB9nC,KAAKm8H,aAAav6F,eAAiB5hC,KAAK+7H,kBAAoB/7H,KAAKw7H,YAAYC,aAAc,CAC/H,IAAI/gH,EAAW1a,KAAKw7H,YAAYiB,sBAC5B/hH,EAAW,EACX1a,KAAKw7H,YAAYsD,yBAAyBpkH,GAE1C1a,KAAKo+D,QAIjB2gE,kBAAkBzkG,EAAUgM,GACxB,IAEImU,EACAukF,EAHA/B,EAAcj9H,KAAKm8H,aACnB8C,EAAkBj/H,KAAK47H,OAAOh0G,OAG9BigB,EAAgB7nC,KAAKw7H,YAAY3zF,gBACjCC,EAAe9nC,KAAKw7H,YAAY1zF,eACpC,GAAIxB,GAAKA,EAAEpwB,QACP4lH,GAAY97H,KAAMs6B,EAAUgM,QACzB,IAAI,IAAUtmC,KAAKuiC,OAAOhE,MAA2BsJ,GAAiBC,GAAe,CACxF,IAAI65D,EAAiBg6B,GAAkB37H,MACvC,GAAI2hG,GAAkB,IACd95D,GAAiB85D,EAAiB3hG,KAAK47H,OAAOh0G,SAAWq1G,EAAY36G,aAAeq/E,EAAiB,IAAMs7B,EAAY36G,cACvH28G,EAAkB,EAClBj/H,KAAK47H,OAAS,IAEd9zF,GACA,GAAI,IAAMm1F,EAAY36G,YAClBtiB,KAAK47H,OAAS,QACX,GAAIqB,EAAY36G,YAAcu5G,GAAgB77H,MAKjD,YAJA87H,GAAY97H,KAAMs6B,EAAU,CACxBmgB,WAAY,SACZr9B,MAAO,KAMvB,IAYIqgH,EAZA38D,EAAY,CACZx+C,UAAW26G,EAAY36G,YACvBy7G,YAAad,EAAY7/G,OAAM,GAAMwK,OACrCm9C,WAAY/kE,KAAK+kE,YAAW,IAE5B/kE,KAAKuiC,OAAO,mCAAqCsF,EACjDm3F,EAAuBh/H,KAAK47H,OAAOh0G,OAAS6K,KAAKxP,IAAI65G,GAAoB98H,OAASA,KAAKuiC,OAAO,4BAA8B,EAAI,GAAI,GAEpIy5F,GAAoBh8H,KAAMs6B,EAAU,CAChCqxC,WAAW,IAIfg2B,IAAmBs7B,EAAY36G,YAAc,GACzC08G,IACAvB,EAAkBz9H,KAAK47H,OAAO/wG,OAElC4vB,EAAa,UACbz6C,KAAK47H,OAAO5uE,QAAQ8T,KAEhBk+D,IACAvB,EAAkBz9H,KAAK47H,OAAO9wG,SAElC2vB,EAAa,SACbz6C,KAAK47H,OAAOvzG,KAAKy4C,IAErB,IAAI08D,EAAiB31F,GAAiB,IAAMo3F,GAAmB1D,GAAoBv7H,MACnFu9H,GAAev9H,KAAMs6B,EAAUt6B,KAAK47H,OAAOh0G,OAAS,EAAI6yB,OAAa,EAAQ+iF,EAAgBC,GAC7Fz9H,KAAK2+H,eAAiB3+H,KAAKo+D,OAAO/vC,MAAK,KAC/B2tG,GAAoBh8H,KAAMs6B,IAC1Bt6B,KAAKo+D,eAIbm/D,GAAev9H,KAAMs6B,EAAUgM,GAGvC44F,mBACI,OAAOl/H,KAAK2+H,eAEhB55D,WAAWo6D,GACP,IAAIp6D,EAAa,EACbl9B,EAAgB7nC,KAAKw7H,YAAY3zF,gBAQrC,OAPKs3F,GAAUt3F,EACX7nC,KAAK47H,OAAO//E,SAAQilB,IAChBiE,GAAcjE,EAAUiE,cAG5BA,EAAa/kE,KAAKm8H,aAAap3D,aAE5BA,EAEX23D,oBACI,IAAIp6G,EAAYq5G,GAAkB37H,MAC9BsiB,EAAY,IACZA,EAAYtiB,KAAKm8H,aAAa75G,aAElC,IAAI88G,EAAkB98G,EAAYtiB,KAAKm8H,aAAa55G,WAChDwiD,EAAa/kE,KAAK47H,OAAOh0G,OAAS5nB,KAAKm8H,aAAa55G,WACpD88G,EAAgB5sG,KAAKxP,IAAI,EAAGjjB,KAAKm8H,aAAan0D,kBAAoBjD,EAAaq6D,GACnF,MAAO,CACHzC,MAAOyC,EACPE,IAAKD,GAGb1pE,QACI31D,KAAKq9H,oBAAsB,GAC3Br9H,KAAK47H,OAAS,IC5UtB,IAAIv9F,GAA0B,WAC1BC,GAAyB,UACzBC,GAAwB,uBACxBghG,GAAiB33F,GAAQA,EAAKrF,OAAO,oBAAsBjE,IAA0BsJ,EAAK43F,WAC1FC,GAAgB73F,GAAQA,EAAKrF,OAAO,oBAAsBlE,KAA4BuJ,EAAK43F,WACxF,SAASE,GAA6Bh/F,EAAUi/F,EAAsBn7E,GACzE,IAAIo7E,EACAC,EAAkB,GAClBC,EAAgB,GAChBC,EAAe,GAGnB,SAASC,EAAiBxpD,GACtB,IAAIypD,EAAqBzpD,EAAWr1C,QAAUq1C,EAAW91C,WAAa81C,EAClE0pD,EAAmB1xB,GAAAA,EAAAA,OAAqByxB,GAC5C,OAAKC,EAGE1pD,EAAWkR,aAAew4C,EAAiBhhH,IAAMwhB,EAAS1d,SAAS9D,KAF/DwhB,EAAS1d,SAAS9D,IANjCslC,EAAiBA,GAAkB9jB,EAUnC,IAAIy/F,EAAuB,CACvBz2F,GAAI,SAAS8sC,EAAYivC,EAAW2a,GAChC5pD,EAAW9sC,GAAG,SAAU02F,IAE5Bz2F,IAAK,SAAS6sC,EAAYivC,EAAW2a,GACjC5pD,EAAW7sC,IAAI,SAAUy2F,KAIjC,SAASC,EAAwBT,GAC7B,IAAIU,EAAa,cAAgBV,EAAejgG,IAAI,GAAG6U,SACnDgiC,EAAaopD,EAAelwH,KAAK,gBACjC6wH,EAAiBJ,EACrB,GAAK3pD,IACDA,EAAa8pD,IAAcz+F,EAAAA,EAAAA,IAAEe,EAAAA,EAAAA,QAAgB,SAAWg9F,EAAez6F,IAAI,cAAgBy6F,EAC3FW,EAAiB35F,EAAAA,EACZ4vC,GAHT,CAOA,IAAI4pD,EAAU,SAAS5pD,GACnB,OAAO,WACH,IAAIkR,EAAYlR,EAAWkR,YAAcs4C,EAAiBxpD,GAC1DkR,EAAYA,EAAY,EAAIA,EAAY,EACxCi4C,EAAqBj4C,IAJf,CAMZlR,GACF+pD,EAAe72F,GAAG8sC,EAAY,SAAU4pD,GACxCN,EAAcz3G,MAAM,SAASk2B,GACzB,IAAIiiF,EAAYR,EAAiBxpD,GAC7BiqD,EAAejqD,EAAWl8B,SAAW,WAAa,YAClDiE,EAAMiiF,GAAa,GACnBhqD,EAAWiqD,GAAcliF,EAAMiiF,MAGvCX,EAAgBx3G,KAAKmuD,GACrBupD,EAAa13G,MAAM,WACfk4G,EAAe52F,IAAI6sC,EAAY,SAAU4pD,OAGjD,IAAKR,EAAiBp7E,EAAe9c,SAAUk4F,EAAeh4G,OAAQg4G,EAAiBA,EAAel4F,SAClG24F,EAAwBT,GAE5B,MAAO,CACHtlF,SAAU,SAASiE,IACfntB,EAAAA,EAAAA,IAAK0uG,GAAgB,SAAS9rG,EAAGsmB,GAC7BA,EAASiE,OAGjB3T,QAAS,YACLxZ,EAAAA,EAAAA,IAAK2uG,GAAe,SAAS/rG,EAAG4W,GAC5BA,SAKT,IAAI81F,GAA0B1vG,EAAAA,EAAAA,QAAc,WAC/C,IAAIu4C,EAAU,CACVt4C,KAAM,SAAS6U,EAAWm3F,EAAaxB,GACnCz7H,KAAKm8H,aAAec,EACpBj9H,KAAK8lC,UAAYA,EACjB9lC,KAAK2gI,eAAgB,IAAU76F,EAAUvD,OAAOhE,IAAyB,GAAK,EAC9Ev+B,KAAK4gI,kBAAoB,GACzB5gI,KAAK6gI,mBAAqB,EAC1B7gI,KAAK8gI,UAAY,EACjB9gI,KAAK+gI,kBAAmB,EACxB/gI,KAAKghI,aAAe,EACpBhhI,KAAKihI,WAAa,GAClBjhI,KAAKkhI,WAAa,EAClBlhI,KAAKw/H,WAAa/D,EAClBz7H,KAAKmhI,iBAAkBn4F,EAAAA,EAAAA,cACvBhpC,KAAKohI,YAAc,IAAIlD,GAAkBl+H,KAAMA,KAAKm8H,eAExDU,aAAc,WACV,OAAO78H,KAAKihI,YAEhB1+F,OAAQ,WACJ,OAAOviC,KAAK8lC,UAAUvD,OAAO9O,MAAMzzB,KAAK8lC,UAAWza,YAEvDowG,UAAW,WACP,OAAOz7H,KAAKw/H,YAEhB9C,kBAAmB,WACf,GAAI6C,GAAev/H,MAAO,CACtB,IAAIi9H,EAAcj9H,KAAKm8H,aACnBn0D,EAAkBi1D,EAAYj1D,kBAClC,IAAI,IAAUhoE,KAAKuiC,OAAOhE,MAA2B,IAAMypC,EAAiB,CACxE,IAAIq5D,EAAiBrhI,KAAKshI,oBACtBC,EAAetE,EAAYsE,eAC3BC,EAAkBvE,EAAYuE,kBAC9BjiE,EAAO9sC,KAAKxP,IAAIo+G,EAAe9hE,KAAMgiE,GACrC/hE,EAAO/sC,KAAKvP,IAAIm+G,EAAe7hE,KAAMgiE,GACrCnC,EAAgB5sG,KAAKxP,IAAI+kD,GAAmBzI,EAAOC,GAAO,GAC9D,MAAO,CACHm9D,MAAOp9D,EACP+/D,IAAKD,GAGb,OAAOr/H,KAAKohI,YAAY1E,kBAAkBjpG,MAAMzzB,KAAKohI,YAAa/1G,aAG1Eo2G,oBAAqB,WACjB,IAAIx1H,EAAcjM,KAAKuiC,OAAO,yBAC1Bm/F,EAAmB,EACvB,IAAKjxG,EAAAA,EAAAA,IAAUxkB,IAKR,GAAIA,EAAa,CACpB,IAAI01H,EACJD,EAAmB,QAAUC,EAAe3hI,KAAKuiC,OAAO,4BAAyB,IAAWo/F,EAAeA,EAAe,QAN1HD,EAAmBjvG,KAAKvP,IAAIljB,KAAKuiC,OAAO,sBAAwB,EAAGviC,KAAKm8H,aAAayF,oBACjFF,EAAmB1hI,KAAKuiC,OAAO,kCAC/Bm/F,EAAmB1hI,KAAKuiC,OAAO,yBAA2B,GAMlE,OAAOm/F,GAEXG,oBAAqB,SAASnnH,GAC1B,IAAIsO,EAAS,IAAIqE,EAAAA,GACbq0G,EAAmB1hI,KAAKyhI,sBAW5B,OAVAxuF,aAAajzC,KAAK8hI,kBACdJ,EAAmB,EACnB1hI,KAAK8hI,iBAAmB9uF,YAAW,KAC/BhzC,KAAK8+H,yBAAyBpkH,GAC9BsO,EAAOmF,YACRuzG,IAEH1hI,KAAK8+H,yBAAyBpkH,GAC9BsO,EAAOmF,WAEJnF,EAAOyF,WAElBguG,oBAAqB,WACjB,OAAOz8H,KAAK8gI,WAEhBiB,uBAAwB,SAASrnH,GAC7B,IAAIomH,EACJpmH,EAAW,QAAUomH,EAAYpmH,SAAa,IAAWomH,EAAYA,EAAY9gI,KAAK8gI,UAKtF,IAJA,IAAIkB,EAAkBhiI,KAAKiiI,cACvBj/G,EAAS,EACTk/G,EAAa,EACbC,EAAsBhiI,OAAOs6B,KAAKz6B,KAAKihI,YAAYn5G,QAAQ,GACtD+P,EAAI,EAAGA,EAAIsqG,EAAoBv6G,QAAU5E,EAAStI,EAAUmd,IAAK,CACtE,IAAIuqG,EAAqBxxG,SAASuxG,EAAoBtqG,IAClDwqG,GAAkB3nH,EAAWsI,GAAUg/G,EAC3C,GAAII,EAAqB,GAAKF,EAAaG,EAAiBD,EAAoB,CAC5EF,GAAcG,EACd,MAEAA,EAAiBD,EAAqBF,EACtCl/G,GAAUq/G,EAAiBL,EAC3BE,GAAcG,EAElB,IAAIzF,EAAW58H,KAAKihI,WAAWmB,GAC/Bp/G,GAAU45G,EACVsF,GAAcl/G,EAAStI,EAAW,GAAKA,EAAWsI,EAAS45G,GAAYA,EAE3E,OAAOnqG,KAAKgkD,MAAM,GAAKyrD,GAAc,IAEzCI,gBAAiB,WACb,OAAOtiI,KAAK+gI,kBAEhBjC,yBAA0B,SAASpkH,GAC/B,IAAI6nH,EAAeviI,KAAK8gI,WAAa,EACrC9gI,KAAK8gI,UAAYpmH,EACb6nH,IAAiBviI,KAAK8gI,YACtB9gI,KAAK+gI,iBAAmB/gI,KAAK8gI,UAAYyB,GAE7C,IAAIxkD,EAAY/9E,KAAK+hI,yBACjB/4G,EAAShpB,KAAKwiI,qBAAqBzkD,GAEvC,OADA/9E,KAAKmhI,gBAAgBl0F,OACdjkB,GAEXy5G,oBAAqB,SAASC,GAC1B,IAAIhG,EAAoB18H,KAAK08H,oBAE7B,GADA18H,KAAKghI,aAAe0B,EAAM15E,QAAO,CAAC4kB,EAAGC,IAAMD,EAAIC,GAAG,GAC9C6uD,EAAmB,CACnBgG,EAAM7mF,SAAQ,CAAC8mF,EAAMv4G,KACjBpqB,KAAKihI,WAAWvE,EAAkBC,MAAQvyG,GAASu4G,KAEvD,IAAIC,GAAsBlG,EAAkBC,MAAQD,EAAkB4C,IAAMt/H,KAAK+kE,cAAgB/kE,KAAK4gI,kBAClGiC,EAAqB3zF,EAAAA,sBAAoC/G,EAAAA,GAEzDnoC,KAAKkhI,WADL0B,EAAqBC,EACHA,EAAqBD,EAErB,IAI9BX,YAAa,WACT,OAAOjiI,KAAK4gI,kBAAoB5gI,KAAKkhI,YAEzC4B,cAAe,SAAS/kD,EAAWglD,GAC/B,IAAIrG,EAAoB18H,KAAK08H,oBACzBnhD,EAAYwC,EAChB,IAAK2+C,EACD,OAAO,EAEX,IAAI15G,EAAS,EACTglD,EAAkBhoE,KAAKm8H,aAAan0D,kBAUxC,OATA7nE,OAAOs6B,KAAKz6B,KAAKihI,YAAYplF,SAAQmnF,IAC5BznD,IAGDwnD,EAAQC,GAAoBh7D,EAAkB+V,EAAYilD,EAAmBjlD,KAC7E/6D,GAAUhjB,KAAKihI,WAAW+B,GAC1BznD,QAGD9oD,KAAKC,MAAM1P,EAASu4D,EAAYv7E,KAAK4gI,kBAAoB5gI,KAAKkhI,aAEzE1E,iBAAkB,SAAS1tH,GACvB,IAAIi0H,EAAQ,QAAUj0H,EAClB4tH,EAAoB18H,KAAK08H,oBAC7B,OAAKA,EAGE18H,KAAK8iI,cAAcC,EAAQrG,EAAkB4C,IAAM5C,EAAkBC,MAAOoG,GAFxE,GAIfE,sBAAuB,WACnB,IAAIvG,EAAoB18H,KAAK08H,oBAC7B,OAAOA,EAAoB18H,KAAKw8H,iBAAiB,SAAWx8H,KAAKw8H,iBAAiB,OAASx8H,KAAKghI,aAAe,GAEnHtF,qBAAsB,WAClB,OAAO17H,KAAK6gI,oBAEhB2B,qBAAsB,SAASzkD,GAE3B,GADA/9E,KAAK6gI,mBAAqB9iD,GACtB,IAAU/9E,KAAKuiC,OAAOhE,IAG1B,OAAOv+B,KAAKohI,YAAYjD,yBAAyB1qG,MAAMzzB,KAAKohI,YAAa/1G,YAE7EkxG,iBAAkB,SAASoG,GAIvB,YAHI,IAAWA,IACX3iI,KAAK4gI,kBAAoB+B,GAEtB3iI,KAAK4gI,mBAEhBtE,aAAc,SAASqG,GAInB,YAHI,IAAWA,IACX3iI,KAAK2gI,cAAgBgC,GAElB3iI,KAAK2gI,eAEhBuC,eAAgB,SAASx6H,GACrB,IAAIi0H,EAAQ38H,KAAK+hI,yBACbzC,EAAMt/H,KAAK+hI,uBAAuB/hI,KAAK8gI,UAAYp4H,GACvD1I,KAAKs8H,aAAa7pG,KAAKw1C,KAAKq3D,EAAM3C,IAC9B38H,KAAK6gI,qBAAuBlE,GAC5B38H,KAAK8+H,yBAAyB9+H,KAAK8gI,YAG3CnrE,MAAO,SAASwtE,GACZnjI,KAAKohI,YAAYzrE,QACZwtE,IACDnjI,KAAKihI,WAAa,KAG1BmC,8BAA+B,SAAS1iG,GACpC1gC,KAAKqjI,cAAgBrjI,KAAKqjI,eAAiB3D,GAA6Bh/F,GAAUgnD,IAC1E1nF,KAAKu8H,oBACLv8H,KAAK6hI,oBAAoBn6C,OAIrC98C,QAAS,WACLqI,aAAajzC,KAAK8hI,kBAClB9hI,KAAKqjI,eAAiBrjI,KAAKqjI,cAAcz4F,UACzC5qC,KAAKqjI,cAAgB,MAEzB/oF,SAAU,SAASiE,GACfv+C,KAAKqjI,eAAiBrjI,KAAKqjI,cAAc/oF,SAASiE,IAEtD1W,cAAe,WACX,OAAO03F,GAAev/H,OAE1B8nC,aAAc,WACV,OAAO23F,GAAcz/H,OAEzBshI,kBAAmB,WACf,IAAIgC,EACAn3D,EAAcnsE,KAAKuiC,OAAO,oBAAsBjE,GAChD0pC,EAAkBhoE,KAAKm8H,aAAan0D,kBACpCu7D,EAAWvjI,KAAK6gI,mBAChB2C,EAAcxjI,KAAK2gI,cAAgB4C,EACnCE,EAASzjI,KAAKuiC,OAAO,sCAAwC,EAC7D+/F,EAAkBtiI,KAAKsiI,kBACvBoB,EAAS,QAAUJ,EAAgBtjI,KAAKuiC,OAAO,wCAAqC,IAAW+gG,EAAgBA,EAAgB,EAC/HK,EAAYrB,EAAkBoB,EAAS,EACvCE,EAAetB,EAAkB,EAAIoB,EACrCnkE,EAAO9sC,KAAKC,MAAMD,KAAKxP,IAAI,EAAGsgH,EAAWI,GAAaF,GAAUA,EAChEjkE,EAAO/sC,KAAKw1C,MAAMu7D,EAAcI,EAAerkE,GAAQkkE,GAAUA,EACrE,GAAIt3D,EAAa,CACb,IAAI03D,EAAgBpxG,KAAKxP,IAAI,EAAG+kD,EAAkBzI,GAClDC,EAAO/sC,KAAKvP,IAAIs8C,EAAMqkE,GAE1B,MAAO,CACHtkE,KAAMA,EACNC,KAAMA,IAGduF,WAAY,WACR,IAAI/7C,EAAS,EAMb,OAJIA,EADAhpB,KAAKuiC,OAAOhE,IACHv+B,KAAKohI,YAAYr8D,WAAWtxC,MAAMzzB,KAAKohI,YAAa/1G,WAEpDrrB,KAAKm8H,aAAap3D,aAExB/7C,IAQf,MALA,CAAC,YAAa,iBAAkB,eAAgB,WAAY,OAAQ,aAAc,oBAAqB,oBAAoB6yB,SAAS,SAASvsC,GACzIi6D,EAAQj6D,GAAQ,WACZ,OAAOtP,KAAKohI,YAAY9xH,GAAMmkB,MAAMzzB,KAAKohI,YAAa/1G,eAGvDk+C,EAnQwC,ICxE/Cu6D,GAA0B,oBAC1BC,GAAsB,gBACtBryF,GAAoB,cACpBC,GAAgB,UAChBqyF,GAAkB,mBAClB3+E,GAAqB,kBACrB4+E,GAAoB,iBACpB5lG,GAA0B,WAC1BC,GAAyB,UACzB4lG,GAAe,IACf3lG,GAAwB,uBACxB4lG,GAAqB,mBACrBt8F,GAAgB,SAASD,GACzB,OAAOA,EAAKrF,OAAO,oBAAsBjE,IAEzCwJ,GAAe,SAASF,GACxB,OAAOA,EAAKrF,OAAO,oBAAsBlE,IAEzCqmE,GAAkB,SAAS98D,GAC3B,OAAOC,GAAcD,IAASE,GAAaF,IAE3Cw8F,GAAgB,SAAShnH,EAAOwJ,EAAOy5C,EAASgkE,GAChD,IAAK,IAAIxsG,EAAI,EAAGA,EAAIjR,EAAQ,EAAGiR,IAAK,CAChC,IAAI5Q,EAAO7J,EAAMijD,EAAUjjD,EAAMwK,OAAS,EAAIiQ,EAAIA,GAC9C5Q,IAASo9G,EAAoBp9G,EAAM4Q,IAAMjR,EAAOy5C,IAChDz5C,IAGR,OAAOA,GAEP09G,GAA8B,SAASr9G,EAAM5f,GAC7C,MAAO,SAAW4f,EAAK6c,UAAY7c,EAAK2e,UAAY,UAAY3e,EAAK6c,SAAWz8B,EAAW02F,qBAAqB92E,EAAKvX,OAErH60H,GAAoB,SAASnnH,GAI7B,OAHAA,EAAMy+B,SAAS,SAAS50B,EAAMmD,GAC1BnD,EAAKssB,SAAWnpB,KAEbhN,GAEPonH,GAA4C,WAC5C,IAAIC,EAAiB,SAAS78F,GAC1B,IAAI+5D,EAAiB/5D,EAAK88F,yBAAyB/iC,gBAAgB,GAC/D95D,GAAcD,KACV+5D,EAAiB,GAAK/5D,EAAK00F,gBAAkB,GAAK10F,EAAK8zF,wBAA0B,IAAM/5B,EAAiB/5D,EAAKrlB,WAAaqlB,EAAK8zF,wBAA0B/5B,EAAiB/5D,EAAKrlB,WAAaqlB,EAAKm9B,aAAen9B,EAAK8zF,uBAAyB9zF,EAAK00F,iBAAmB10F,EAAKjE,YAAY/B,YAClRgG,EAAKkiC,aACNliC,EAAKkiC,YAAa,EAClBliC,EAAKu6B,eAAel1B,MAAK,IAEtBrF,EAAKkiC,aACZliC,EAAKkiC,YAAa,EAClBliC,EAAKu6B,eAAel1B,MAAK,MAIjCjkB,EAAS,CACTigB,KAAM,WACFjpC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1BrrB,KAAKilE,OAAS,GACdjlE,KAAKmuF,WAAY,EACjBnuF,KAAK2kI,eAAiB,EACtB3kI,KAAK0kI,yBAA2B,IAAIhE,GAAwB1gI,KAAK8lC,UAAW9lC,KAAK4kI,iCAErFA,6BAA8B,WAC1B,IAAIh9F,EAAO5nC,KACX,MAAO,CACHuiB,SAAU,WACN,OAAOqlB,EAAKrlB,YAEhBylD,gBAAiB,WACb,OAAOpgC,EAAKogC,mBAEhBE,iBAAkB,WACd,OAAOtgC,EAAKsgC,oBAEhB5lD,UAAW,SAAS8H,GAChB,OAAOwd,EAAKjE,YAAYrhB,UAAU8H,IAEtCwX,UAAW,WACP,OAAOgG,EAAKjE,YAAY/B,cAAgBgG,EAAKg+B,mBAEjD8B,UAAW,WACP,OAAO9/B,EAAK8/B,aAEhBtJ,KAAM,WACF,OAAOx2B,EAAKjE,YAAYy6B,QAE5B4/D,cAAe,WACXyG,EAAe78F,IAEnBm9B,WAAY,WACR,OAAOn9B,EAAKm9B,YAAW,IAE3B3nD,MAAO,WACH,OAAOwqB,EAAKjE,YAAYvmB,SAE5BugH,cAAe,SAASvgH,GAIpB,OAHIA,IACAwqB,EAAKq9B,OAAS7nD,GAEXwqB,EAAKq9B,QAEhB25D,UAAW,SAASt4F,GAChBsB,EAAKwW,QAAQnR,KAAK3G,IAEtBs7F,iBAAkB,SAASt7F,GACvB,OAAIsB,EAAKhG,YACEsiG,GAEJt8F,EAAKi9F,aAAe,KAIvC/hE,sBAAuB,SAASlhC,IACxB,IAAU5hC,KAAKuiC,OAAOhE,KAIrBsJ,GAAc7nC,QAASA,KAAKkiE,gBAC7BliE,KAAK8pE,WAAaloC,EAClB5hC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAG1BrrB,KAAK8kI,eADLljG,EACsB,IAAI3Y,UAEJ,GAVtBjpB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAalC23C,iBAAkB,YACV,IAAUhjE,KAAKuiC,OAAOhE,MACtBv+B,KAAK8pE,YAAa,EAClB9pE,KAAKmiE,eAAel1B,MAAK,IAE7BjtC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9BgzB,mBAAoB,SAAS/X,GACzB,IAAI,IAAUtmC,KAAKuiC,OAAOhE,IAGtB,OAFAv+B,KAAKilE,OAASjlE,KAAK2jC,YAAYvmB,QAAQ2M,aACvC/pB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAG9B,IAAIiP,EAAWt6B,KAAKs6B,SAASgK,KAAKtkC,MAClCA,KAAK0kI,yBAAyB3F,kBAAkBzkG,EAAUgM,IAE9Dm/B,2BAA4B,SAASnkD,EAAS69C,GAC1C,IAAI4lE,GAAU,IAAU/kI,KAAKuiC,OAAOhE,IAChCtyB,EAAcjM,KAAKuiC,OAAO,0BACzB9R,EAAAA,EAAAA,IAAUxkB,KACXA,EAAcjM,KAAK6kI,aAAe7kI,KAAKuiC,OAAO,mCAE7CsF,GAAc7nC,OAAS8nC,GAAa9nC,OAAS+kI,IAAa5lE,EAAeC,SAAWD,EAAeI,OAAQwlE,GAAa94H,IACzHqV,EAAQZ,WAAQ,GAEpB1gB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9BjO,MAAO,WACH,OAAOpd,KAAKilE,QAEhBF,WAAY,SAASo6D,GACjB,OAAIA,IAAU,IAAUn/H,KAAKuiC,OAAOhE,IACzBv+B,KAAKs6B,WAETt6B,KAAK0kI,yBAAyB3/D,cAEzC3G,KAAM,SAASnjC,GACX,OAAI,IAAUj7B,KAAKuiC,OAAOhE,KAA0BtD,EACzCj7B,KAAKs6B,SAASW,GAElBj7B,KAAK0kI,yBAAyBtmE,QAEzCx8B,UAAW,WACP,OAAO,IAAU5hC,KAAKuiC,OAAOhE,IAAyBv+B,KAAK2jC,YAAY/B,YAAc5hC,KAAK8pE,YAE9FjiB,SAAU,WACN,OAAO7nD,KAAK2jC,YAAYkkB,YAAc7nD,KAAKmuF,WAE/CtqB,gBAAiB,SAASoL,GACjBA,GACDjvE,KAAK0kI,yBAAyB/uE,OAAM,GAExC31D,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9By7E,qBAAsB,WAClB,IAAI99E,EAAShpB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACvC,OAAI,IAAUrrB,KAAKuiC,OAAOhE,MAG1Bv+B,KAAK6jE,kBACL4gE,EAAezkI,OAHJgpB,GAMfo2C,OAAQ,WACJp/D,KAAK2jC,YAAYrhB,UAAUtiB,KAAKsiB,aAChC,IAAI0iH,EAA0BhlI,KAAK0kI,yBACnC,IAAI,IAAU1kI,KAAKuiC,OAAOhE,KAA0BymG,EAAyB,CACzE,IAAI53G,EAAI,IAAIC,EAAAA,GASZ,OARArtB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAAWgD,MAAM,SAAS42G,GAChD,IAAIvG,EAAgBsG,EAAwB9F,mBACxCR,EACAA,EAAcrwG,KAAKjB,EAAEe,SAASC,KAAKhB,EAAEa,QAErCb,EAAEe,QAAQ82G,MAEd72G,KAAKhB,EAAEa,QACJb,EAEP,OAAOptB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAGzC6uC,QAAS,SAAS54C,EAAS69C,GACvB,IAAI,IAAUn/D,KAAKuiC,OAAOhE,IAAwB,CAC9C,IAAIohC,EAAmBr+C,EAAQq+C,iBAC3Bt4D,EAAarH,KAAK2jC,YAClBw7B,EAAeC,QACfp/D,KAAK0kI,yBAAyB/uE,QAC9BtuD,EAAW+V,QAAQwK,OAAS,EAC5B5nB,KAAKmuF,WAAY,EACjBs2C,EAAezkI,MACfA,KAAKmuF,WAAY,EACbrmD,GAAa9nC,OACbA,KAAKsiB,UAAU,GACfjb,EAAWib,UAAU,GACrBq9C,EAAiBr9C,UAAY,EAC7BhB,EAAQgB,UAAY,EACpBq9C,EAAiBJ,KAAO,IAExBl4D,EAAWib,UAAUtiB,KAAKsiB,aACtBjb,EAAW82D,aACX78C,EAAQgB,UAAYtiB,KAAKsiB,YACzBq9C,EAAiBJ,KAAOv/D,KAAKsiB,YAActiB,KAAKuiB,cAGjDulB,GAAa9nC,OAAS2/D,EAAiBJ,MAAQv/D,KAAKiiE,sBAAwB,IACnFtC,EAAiBJ,MAAQv/D,KAAKiiE,uBAGtC,OAAOjiE,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCuf,QAAS,WACL5qC,KAAK0kI,yBAAyB95F,UAC9B5qC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9B65G,cAAe,SAASt+G,GACpB,KAAK6J,EAAAA,EAAAA,IAAU7J,GACX,OAAO5mB,KAAK2kI,eAEhB3kI,KAAK2kI,eAAiB/9G,GAE1Bk/C,mBAAoB,SAASxkD,GACzB,IAAI4jH,EAAgBllI,KAAKklI,gBACrB3iH,EAAWviB,KAAKuiB,WAChBwiH,GAAU,IAAU/kI,KAAKuiC,OAAOhE,IAChCohC,EAAmBr+C,EAAQq+C,iBAC3BwlE,GAAgB10G,EAAAA,EAAAA,IAAUkvC,EAAiBH,MAC/Cl+C,EAAQ4jH,cAAgBA,GACnB5jH,EAAQskD,iBAAmBm/D,GAAWI,GAAiBD,EAAgB,GAAK3iH,EAAW,IACxFo9C,EAAiBH,KAAO0lE,EAAgB3iH,GAE5CviB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9Bk8C,cAAe,WACX,OAAOvnE,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAAarrB,KAAKklI,kBAmB3D,MAhBA,CAAC,iBAAkB,eAAgB,aAAarpF,SAAS,SAASvsC,GAC9D0Z,EAAO1Z,GAAQ,WACX,IAAI,IAAUtP,KAAKuiC,OAAOhE,IAAwB,CAC9C,IAAIl3B,EAAarH,KAAK2jC,YACtB,OAAOt8B,EAAWib,UAAUmR,MAAMpsB,EAAYgkB,WAElD,IAAI25G,EAA0BhlI,KAAK0kI,yBACnC,OAAOM,EAAwB11H,GAAMmkB,MAAMuxG,EAAyB35G,eAG5E,CAAC,oBAAqB,mBAAoB,wBAAyB,sBAAuB,sBAAuB,uBAAwB,uBAAwB,yBAA0B,eAAgB,mBAAoB,cAAe,eAAgB,cAAcwwB,SAAS,SAASvsC,GAC1R0Z,EAAO1Z,GAAQ,WACX,IAAI01H,EAA0BhlI,KAAK0kI,yBACnC,OAAOM,EAAwB11H,GAAMmkB,MAAMuxG,EAAyB35G,eAGrErC,EAhPqC,GAkP5Co8G,GAAmC,WACnC,IAAIC,EAAkB,SAASC,EAAYx6F,GACvC,IAAIkW,EAAUskF,EAAWv8E,UAAU/2B,KAAI2T,IAAO9D,EAAAA,EAAAA,GAAE8D,GAAK+B,OAAO,IAAMoD,GAAWnL,IAAI,KAAI/b,QAAO+hB,GAAOA,IAC/Fqb,EAAQp5B,SACR09G,GAAazjG,EAAAA,EAAAA,GAAEmf,IAGnB,IADA,IAAImH,EAAWrd,IAAck5F,GAAkBsB,EAAW19G,OAAS,EAAI09G,EAAW19G,OACzEiQ,EAAI,EAAGA,EAAIswB,EAAUtwB,IAC1BytG,EAAWpgG,GAAGrN,GAAGyK,UAGzB,MAAO,CACH2G,KAAM,WACF,IAAIs8F,EACAjqE,EAAiBt7D,KAAKqqC,cAAc,QACxCrqC,KAAKs6B,WACLghC,EAAegO,YAAYnrB,KAAI77B,IAC3BtiB,KAAKwlI,aAAa,OAASljH,QAAa,IAAWA,EAAYA,EAAYg5C,EAAeh5C,gBAE9Fg5C,EAAe4W,kBAAkB/zB,KAAI,MAChCn+C,KAAKi4E,YAAcj4E,KAAKylI,kCAE7B,QAAUF,EAAwBjqE,EAAes0B,mBAAgB,IAAW21C,GAAiCA,EAAsBpnF,KAAI,KACnIn+C,KAAKylI,kCAETzlI,KAAKylI,gCAETA,6BAA8B,WAC1B,IAAInqE,EAAiBt7D,KAAKqqC,cAAc,QACxC,GAAIixB,EAAeh5C,YAAc,EAAG,CAChC,IAAIojH,EAAgB,KAChB1lI,KAAKssC,gBAAgBhK,OAAOojG,GAC5B1lI,KAAKwlI,aAAalqE,EAAeh5C,cAErCtiB,KAAKssC,gBAAgB6R,IAAIunF,KAGjCF,aAAc,SAASljH,GACnB,IAEIqjH,EAFArqE,EAAiBt7D,KAAK0hC,gBACtBnf,EAAW+4C,EAAiBA,EAAe/4C,WAAa,EAE5D,GAAIslB,GAAc7nC,OAAS8nC,GAAa9nC,MAAO,CAC3C,IAAI48H,EAAWthE,EAAe2mE,cAC1B2D,EAAYtqE,EAAeuhE,eAC3B9+C,EAAYz7D,EAAYC,EAE5B,IAAK,IAAI6H,KADTu7G,EAAiB5nD,EAAY6+C,EACXgJ,EACVx7G,EAAQ2zD,IACR4nD,GAAkBC,EAAUx7G,GAASwyG,QAI7C+I,EAAiB,EAErB3lI,KAAKs6C,SAAS,CACVnrC,EAAGw2H,EACHz2H,EAAGlP,KAAKq6C,eAGhBpC,uBAAwB,SAAS3R,GAC7BtmC,KAAK6lI,wBAAuB,GAC5B7lI,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9B6gB,YAAa,SAAS5F,GAClB,IAAIw/F,EAAkB,IAAI78G,KAC1BjpB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1B,IAAIhkB,EAAarH,KAAK0hC,gBAAgBiC,YACtC,GAAIt8B,GAAci/B,EAAG,CACjB,IAAIi1C,EAAYj1C,EAAElpB,MAAQkpB,EAAElpB,MAAMwK,OAAS,GACvC00G,EAAet8H,KAAK0hC,gBAAgB46F,gBAAkB,GACtDptF,EAAAA,sBAAoClvC,OAASu7E,EAAY,IAAK,IAAUv7E,KAAKuiC,OAAOhE,IACpFl3B,EAAWw9H,aAAe,IAAI57G,KAAO68G,GAAmBxJ,EAAe/gD,EAEvEl0E,EAAWw9H,YAAc,IAAI57G,KAAO68G,IAIhD9lF,gBAAiB,SAASrG,GACtB,IAAI2F,EAAQt/C,KAAKs6B,SAASqf,GAC1B,OAAO2F,GAASA,EAAM1F,IAAI,IAAMqqF,KAEpC8B,oBAAqB,SAASzK,EAAcsC,EAAanjF,GACrD,IAAI2jC,EAAcp+E,KAAKggD,gBAAgBs7E,GAAcvyE,UAEjDq1B,EADA,WAAa3jC,EACC2jC,EAAYr0D,MAAM,EAAG6zG,GAErBx/C,EAAYr0D,OAAO6zG,GAErC,IAAIh8C,EAA0B5hF,KAAKqqC,cAAc,iBACjD+zC,EAAYpsD,KAAIyhB,IACZ,IAAIgI,GAAc5Z,EAAAA,EAAAA,GAAE4R,GACpBmuC,GAA2BA,EAAwBd,eAAerlC,EAAY6lC,QAC9E7lC,EAAYnZ,aAGpBsc,eAAgB,SAASjF,EAAc9iC,GACnC,IAAIskH,EACAxiD,EAAiB34E,KAAK8+C,sBACtBrE,EAAa5jC,GAAUA,EAAO4jC,WAC9B6gF,EAAe3iD,EAAe9nC,WAAW8S,QAC7C,GAAI,WAAalJ,GAAc,YAAcA,EAAY,CACrD,IAAIV,EAAW/5C,KAAK05C,WAAWC,GAC3B,IAAMI,EAASnyB,OACf5nB,KAAK05C,WAAW4hF,GAAc,WAAa7gF,EAAa,SAAW,WAAWV,EAASlJ,YAEvFkJ,EAAS,WAAaU,EAAa,WAAa,aAAa6gF,GAEjE3hF,EAAarX,SACb64F,EAAwBn7H,KAAKk6E,yBAAyBohD,GACtD+J,EAAgBlK,EAAuB6I,IACnCntH,EAAO+mH,aACP59H,KAAK+lI,oBAAoBzK,EAAczkH,EAAO+mH,YAAanjF,GAE/Dz6C,KAAK2+E,iBAAiB28C,QAEtBt7H,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACtB,WAAaovB,GACbz6C,KAAK2+E,iBAAiB28C,GAG9Bt7H,KAAKgmI,wBAETC,eAAgB,SAAStzF,EAAQymC,EAASh4D,EAAU1G,GAChD,GAAKA,EAAL,CAGA,IAAIwrH,EAAclmI,KAAKm5E,gBAAgB8qD,GAAmB7qD,EAAS1+D,GACnEwrH,EAAclmI,KAAK65C,eAAelH,EAAQuzF,GAC1ClmI,KAAKq5E,gBAAgB1mC,EAAQuzF,EAAa9kH,KAE9C+kH,eAAgB,WACZ,IAAIC,EAAapmI,KAAKggD,gBAAgBhgD,KAAKg6C,eAAe+O,UAAU/2B,KAAK,SAAS2T,GAC9E,OAAON,EAAAA,EAAAA,GAAgBM,GAAKj9B,UAEhC,OAAO09H,GAEXC,mBAAoB,SAASD,GAQzB,IAPA,IAAI9qE,EAAiBt7D,KAAK0hC,gBACtBr6B,EAAai0D,EAAe33B,YAC5B2iG,EAAsB,GACtBC,EAAcjrE,EAAe4V,iBAC7B0rD,EAAW,EACX4J,GAAqB,EACrBC,GAAiB,EACZ5uG,EAAI,EAAGA,EAAIuuG,EAAWx+G,OAAQiQ,IAAK,CACxC,IAAI4+D,EAAc8vC,EAAY1uG,IACzBpH,EAAAA,EAAAA,IAAUgmE,MAGX,IAAUz2F,KAAKuiC,OAAOhE,KAClBkoG,GAAiB,GAAKA,IAAkBhwC,EAAYxlB,YACpDq1D,EAAoBj+G,KAAKu0G,GACzBA,EAAW,GAEf6J,EAAgBhwC,EAAYxlB,WACrBqzD,GAA4B7tC,EAAapvF,KAC5Cm/H,EACAA,GAAqB,GAErBF,EAAoBj+G,KAAKu0G,GACzBA,EAAW,IAGnBA,GAAYwJ,EAAWvuG,IAG3B,OADA+kG,EAAW,GAAK0J,EAAoBj+G,KAAKu0G,GAClC0J,GAEXT,uBAAwB,SAASa,GAC7B,IAAIprE,EAAiBt7D,KAAK0hC,gBACtBilG,EAAY3mI,KAAK65E,YAAc,GAEnC,GADAve,EAAeihE,iBAAiBoK,GAC5B9+F,GAAc7nC,OAASkvC,EAAAA,sBAAoClvC,MAAO,CAClE,IAAK0mI,EAAU,CACX,IAAIN,EAAapmI,KAAKmmI,iBAClBG,EAAsBtmI,KAAKqmI,mBAAmBD,GAClD9qE,EAAemnE,oBAAoB6D,GAEvC,IAAIpnH,EAAMo8C,EAAekhE,iBAAiB,SACtC13C,EAASxpB,EAAekhE,iBAAiB,OACzCvyB,EAAUjqG,KAAK29C,mBACfipF,EAAe38B,EAAQp5D,SAAS,SAASA,SAAS,IAAMozF,IAC5DoB,EAAgBuB,EAAc3C,IAC9Bh6B,EAAQ74E,MAAK,CAAChH,EAAO+W,KACjB,IAAIi4C,EAAUhvD,EAAQ,EACtBpqB,KAAK6mI,uBAAyBztD,EAC9Bp5E,KAAKimI,gBAAepkG,EAAAA,EAAAA,GAAEV,GAAUi4C,EAAS,MAAOl6D,GAChDlf,KAAKimI,gBAAepkG,EAAAA,EAAAA,GAAEV,GAAUi4C,EAAS,SAAU0L,GACnD9kF,KAAK6mI,wBAAyB,OAI1CC,6BAA8B,SAASC,GACnC,IAAIC,EAAiBD,EAAMxlG,KAAK,IAAM8jB,IAAoBz9B,OAAS,EACnE,OAAOo/G,IAAmBhnI,KAAKuiC,OAAO,oBAE1C0kG,uBAAwB,SAASC,EAAUC,GACvC,IAAIn+G,EAASk+G,EAASt/G,SAAWu/G,EAAgBv/G,OASjD,OARIoB,IACAoI,EAAAA,EAAAA,IAAK81G,GAAW,SAAS98G,EAAO+W,GAC5B,GAAIA,EAAQ+S,MAAM1mC,QAAU25H,EAAgB/8G,GAAO8pB,MAAM1mC,MAErD,OADAwb,GAAS,EACFA,KAIZA,GAEXo+G,gBAAiB,SAASj5H,GACtB,IAAIk5H,EAAU,GACVj4H,EAAWjB,EAAOiB,SAClBk4H,EAAiB,WAAan5H,EAAOk5B,QAGzC,OAFAj4B,GAAYi4H,EAAQh/G,KAAKjZ,GACzBk4H,GAAkBD,EAAQh/G,KAAKroB,KAAKqhC,gBAAgBqQ,KAC7C21F,GAEXE,qBAAsB,SAASrpD,GAC3B,IAAIx9C,EAAWw9C,GAAmBl+E,KAAKmhC,UACnCqmG,EAAmB9mG,GAAYA,EAASa,KAAK,IAAMvhC,KAAKqhC,gBAAgByiG,KAC5E,GAAI0D,GAAoBA,EAAiB5/G,OACrC,OAAO4/G,GAGfxB,qBAAsB,WAClB,IAAI75D,EAActkC,GAAc7nC,MAC5BksE,EAAapkC,GAAa9nC,MAC1BynI,GAAqBznI,KAAK0hC,gBAAgBwmC,oBAAsBloE,KAAK0hC,gBAAgBmmB,aAAeskB,GAAeD,GACnHgS,EAAkBl+E,KAAK8+C,sBACvB4oF,EAAyB1nI,KAAKunI,qBAAqBrpD,GACnDupD,EACKC,IACD7lG,EAAAA,EAAAA,GAAE,SAASC,SAAS9hC,KAAKqhC,gBAAgByiG,KAA0B/yF,OAAO/wC,KAAKwiC,kBAAiBX,EAAAA,EAAAA,GAAE,SAAUsxF,GAAAA,YAAezyF,YAAYqB,SAASm8C,GAE7IwpD,GACPA,EAAuBplG,UAG/By1C,cAAe,SAASzxC,GACpB,IAAIisD,GAAsB,IAASvyF,KAAKuiC,OAAOhE,IAC3CopG,EAAkB,IAAMrhG,EAAE4xC,aAAah5D,KACtClf,KAAK63E,aAAe0a,GAAuBo1C,IAAoB3nI,KAAK65E,YACrE75E,KAAK0hC,gBAAgBmgG,oBAAoBv7F,EAAE4xC,aAAah5D,KAE5Dlf,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9BuuD,qBAAsB,SAAS7U,GAC3B,OAAO/kE,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAAc05C,EAAa,GAAKj9B,GAAa9nC,QAAUkvC,EAAAA,sBAAoClvC,OAEhIg6E,iBAAkB,WAEd,GADAh6E,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACtBrrB,KAAK65E,WAAY,CACjB75E,KAAK6lI,yBACL,IAAI3C,EAAiBljI,KAAK63E,YAAap2B,EAAAA,EAAAA,IAAezhD,KAAKmhC,YAAasgB,EAAAA,EAAAA,KAAe7e,EAAAA,EAAAA,OACnF04B,EAAiBt7D,KAAK0hC,iBACtB,IAAU1hC,KAAKuiC,OAAOhE,KACtB+8B,EAAe4nE,eAAeA,GAC9B5nE,EAAessE,kBAEftsE,EAAeghE,aAAa7pG,KAAKw1C,KAAKi7D,EAAiBljI,KAAK65E,eAIxEc,yBAA0B,WACtB,IAAI3xD,EAAShpB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAIvC,OAHIrC,GACAhpB,KAAK6lI,yBAEF78G,GAEX4zD,WAAY,SAASh7C,EAAW0xC,GAC5B,IAAIhY,EAAiBt7D,KAAK0hC,gBACtBmmG,EAAqBvsE,EAAeh5C,YAAc,GAAKg5C,EAAezT,cAAgB7nD,KAAKunI,wBAC3F,IAAUvnI,KAAKuiC,OAAOhE,KAA0BqD,GAAa05B,EAAewsE,uBAG5ED,IACAjmG,GAAY,GAEhB5hC,KAAKs6B,SAASpO,KAAKlsB,KAAM4hC,EAAW0xC,KAExCnnC,YAAa,WACT,IAAIvE,EAAO5nC,KACP0gC,EAAWkH,EAAKzG,UACpByG,EAAKtN,WACDsN,EAAK9B,UAAUpF,aAAekH,EAAKy7F,eAAiB3iG,EAASqG,SAAQnE,EAAAA,EAAAA,MAAYm4C,UAAUnzD,SAC3FggB,EAAKy7F,cAAgB3D,GAA6Bh/F,GAAW,SAASqnG,IAC7DngG,EAAKiwC,YAAcjwC,EAAKiyC,YACzBjyC,EAAKlG,gBAAgBmgG,oBAAoBkG,KAE7CngG,EAAK9B,UAAUpF,YACnBkH,EAAK8B,GAAG,aAAc,WAClB9B,EAAKy7F,cAAcz4F,eAGvB,IAAU5qC,KAAKuiC,OAAOhE,KACtBqJ,EAAKi3F,cAGbA,WAAY,WACR,IAAImJ,EACA1sE,EAAiBt7D,KAAK0hC,gBAC1B,OAAS45B,QAAkB,IAAWA,GAA0B,QAAU0sE,EAAwB1sE,EAAeujE,kBAAe,IAAWmJ,GAAiCA,EAAsB97G,KAAKovC,IAE3M9d,gBAAiB,SAASF,GACtB,IACI4J,EADAsvB,EAAax2E,KAAK23E,gBAEtB33E,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACtB,YAAcrrB,KAAKuiC,OAAO,oBAC1B2kB,EAAWsvB,GAAa30C,EAAAA,EAAAA,GAAE20C,EAAW/jC,WAAazyC,KAAKmhC,UACvDnhC,KAAKs6B,SAASgjB,EAAQ4J,EAASrW,SAAS,IAAM7wC,KAAKqhC,gBAAgBsQ,KAAgBd,SAAS,SAAW7wC,KAAKqhC,gBAAgB0iG,IAAuB,QAG3JplD,iBAAkB,WACd,IAAI,IAAU3+E,KAAKuiC,OAAOhE,IAAwB,CAC9C,IAAIojD,EAAgB3hF,KAAKqqC,cAAc,iBACvC,OAASs3C,QAAiB,IAAWA,GAAyBA,EAAcb,iBAEhF9gF,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9Buf,QAAS,WACLqI,aAAajzC,KAAK8hI,kBAClB9hI,KAAKs6B,aAjUsB,GAqU5B2tG,GAAyB,CAChC/hF,eAAgB,WACZ,MAAO,CACH35C,UAAW,CACPyf,QAAS,IACTk8G,cAAe,IACfC,WAAY,EACZC,mBAAoB,IACpBpJ,sBAAsB,EACtBqJ,YAAa,EACbC,wBAAyB,EACzB9zH,KAAM,WACNkQ,gBAAgB,EAChBC,iBAAkB,WAClB4jH,qBAAqB,EACrBC,YAAY,EACZC,oBAAqB,KAIjCr6F,UAAW,CACPkkC,kBAAmBkyD,GACnBx2F,YAAa,CACTt+B,KAAM,WACF,IAAI65D,EAAU,CACVW,mBAAoB,WAChB,IAAIw+D,EAAa1oI,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,aAAe,IAAIgC,EAAAA,IAAUc,UAAUM,UAElF,OADAi6G,EAAWr6G,KAAKruB,KAAK2oI,gBAAgBrkG,KAAKtkC,OACnC0oI,GAEXj8D,gBAAiB,WACb,GAAIzsE,KAAK4oI,sBAAuB,CAC5B,IAAIC,EAAuBz+D,GAEvB86D,cAAeA,GACf,QAAU2D,EAAwB7oI,KAAK8oI,2BAAwB,IAAWD,EAAwBA,EAAwB,GAC9H3D,GAAiB,IAAM,QAAU96D,EAAoBpqE,KAAK2jC,mBAAgB,IAAWymC,GAA6BA,EAAkB86D,cAAcA,IAEtJ,OAAOllI,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErC09G,eAAgB,WACZ,IAAIV,EAAcroI,KAAKuiC,OAAO,yBAC1BhgB,EAAWviB,KAAKuiB,WACpB,OAAOA,GAAYA,EAAW8lH,EAAc9lH,EAAW8lH,GAE3DjpE,OAAQ,WACJ,IAAI4pE,EAAuBhpI,KAAK4oI,uBAAyB5oI,KAAK2jC,YAC1Do6C,EAAYirD,GAAwBA,EAAqBjH,yBACzD/4G,EAAShpB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACvC,OAAOrC,GAAUA,EAAOqF,MAAK,KACzB,GAAIwZ,GAAc7nC,OAASkvC,EAAAA,sBAAoClvC,MAAO,CAClE,IAAI0wE,EAAiB1wE,KAAK2wE,oBACtBp9B,EAAW9gB,KAAKC,MAAMqrD,GAAarN,EACnC5qC,EAAY9lC,KAAK8lC,UACjB0wC,EAAa1wC,EAAU6xC,eAAiB7xC,EAAU6xC,gBAClDsxD,EAAqBjpI,KAAKqH,aAAa83D,iBAAiBlyD,QAC5D,GAAIupE,IAAeyyD,EAAoB,CACnC,IAAIx1F,EAAa3N,EAAU0a,cAAcjN,GACrCkI,EAAchI,GAAcA,EAAW,KAAM5R,EAAAA,EAAAA,GAAE4R,EAAW,IAC1Dv0B,EAAMu8B,GAAeA,EAAY/gC,WAAWwE,IAC5Cs9D,EAAiBr0C,EAAAA,EAAAA,QAAkBA,EAAAA,EAAAA,SAAmB,GACtD+gG,EAAmB/gG,EAAAA,EAAAA,SAAmBq0C,EAAiB,EAAI,EAC3Dt9D,EAAMgqH,IACNhqH,EAAMuT,KAAKgkD,MAAMv3D,GAAMuiC,EAAAA,EAAAA,IAAehG,IAAgBsiC,EAAY,IAClEvH,EAAWl8B,SAAS,CAChBnrC,EAAG+P,WAO3BypH,gBAAiB,WACb,IAAIQ,EAAuBj6F,EAAAA,sBAAoClvC,MAG/D,GAFAA,KAAKopI,UAAY,KACjBppI,KAAKqpI,oBAAsB,KACvB,YAAcrpI,KAAKuiC,OAAO,oBAAqB,IAAS4mG,IAAwB,IAAUA,IAAwB,IAAUnpI,KAAKuiC,OAAOhE,MAA2Bv+B,KAAKuiC,OAAO,yBAG/K,OAFAviC,KAAKspI,cAAgB,UACrBtpI,KAAK4oI,sBAAwB,MAGjC,IAAItmH,GAAaulB,GAAc7nC,OAASA,KAAKsiB,aAAetiB,KAAK0nE,YAAc1nE,KAAK0nE,YAAc,EAAI1nE,KAAKsiB,YAC3GtiB,KAAKupI,cAAgB92G,KAAKw1C,KAAK3lD,EAAYtiB,KAAKuiB,WAAaviB,KAAK+oI,kBAClE/oI,KAAKspI,eAAgB,IAAUtpI,KAAKuiC,OAAOhE,IAAyB,KAAO,GAC3Ev+B,KAAKwpI,mBAAoB,EACzBxpI,KAAKypI,iCAAkC,EAClCzpI,KAAK4oI,wBACN5oI,KAAK4oI,sBAAwB,IAAIlI,GAAwB1gI,KAAK8lC,UAAW9lC,KAAK0pI,6BAA6B,GAC3G1pI,KAAK4oI,sBAAsBzH,gBAAgBhjF,KAAI,KAC3C,IAAIwrF,EACJ,IAAI,IAAU3pI,KAAKuiC,OAAOhE,IAItB,OAHAv+B,KAAKwpI,mBAAoB,EACzBxpI,KAAK4pI,oBACL5pI,KAAKwpI,mBAAoB,GAG7B,QAAUG,EAAqB3pI,KAAK2jC,mBAAgB,IAAWgmG,GAA8BA,EAAmBnH,qBAAqBxiI,KAAK4oI,sBAAsBlN,6BAGpK,IAAU17H,KAAKuiC,OAAOhE,KACtBv+B,KAAK6pI,4BAEL7pI,KAAK6nD,aAAc,IAAU7nD,KAAKuiC,OAAOhE,KACzCv+B,KAAK4oI,sBAAsBxqE,QAGnC0pE,mBAAoB,WAChB,OAAO9nI,KAAKwpI,mBAEhBE,0BAA2B,WACvB,IAAI9hG,EAAO5nC,KACP8pI,EAAkB,SAAS7iH,GAC3B,OAAOq9G,GAA4Br9G,EAAM2gB,EAAKjE,cAElD,MAAO,CACHphB,SAAU,WACN,OAAOqlB,EAAKmhG,kBAEhBxH,aAAc,WACV,IAAIwI,EACJ,OAAOliG,GAAcD,KAAU,QAAUmiG,EAAoBniG,EAAKjE,mBAAgB,IAAWomG,OAAoB,EAASA,EAAkB3uE,kBAAkBmE,OAAS,GAE3KiiE,gBAAiB,WACb,OAAO55F,EAAKoiG,YAEhBhiE,gBAAiB,WACb,OAAI08B,GAAgB98D,GACTA,EAAKogC,mBAET,IAAUpgC,EAAKrF,OAAOhE,IAAyBqJ,EAAKoiG,WAAapiG,EAAKq9B,OAAOrhD,OAAOkmH,GAAiBliH,QAEhHsgD,iBAAkB,WACd,OAAO,GAEX5lD,UAAW,SAAS8H,GAIhB,YAHI,IAAWA,IACXwd,EAAK2hG,cAAgBn/G,GAElBwd,EAAK2hG,eAEhB3nG,UAAW,WACP,OAAOgG,EAAKhG,aAEhB8lC,UAAW,WACP,IAAIA,EAAYj1C,KAAKw1C,KAAKjoE,KAAKgoE,kBAAoBhoE,KAAKuiB,YACxD,OAAOmlD,GAAwB,GAEnCtJ,KAAM,WACEx2B,EAAKghG,sBAAsBtmH,aAAetiB,KAAK0nE,cAC/C9/B,EAAK2hG,cAAgBvpI,KAAK0nE,YAAc,EACxC9/B,EAAKghG,sBAAsBtmH,UAAUslB,EAAK2hG,iBAEzCvpI,KAAKod,QAAQwK,QAAU5nB,KAAKgoE,mBAGjCpgC,EAAKghG,sBAAsB7J,mBAAkBloH,IACzCA,EAASA,GAAU,GACnBA,EAAO4jC,WAAa5jC,EAAO4jC,YAAc,UACzC5jC,EAAOuG,MAAQvG,EAAOuG,OAASwqB,EAAK0hG,cACpC1hG,EAAK0hG,cAAcztF,SAAQ,CAAC50B,EAAMmD,KAC9BnD,EAAKssB,SAAWnpB,KAEpBwd,EAAK0pC,aAAaz6D,OAG1BmnH,cAAe,aACfj5D,WAAY,WACR,OAAO/kE,KAAKod,OAAM,GAAMwK,QAE5Bi2G,aAAc,SAASzgH,EAAOwJ,EAAOy5C,GACjC,OAAO+jE,GAAchnH,EAAOwJ,EAAOy5C,GAAS,CAACp5C,EAAMgjH,EAAiB5pE,IAC5Dp5C,EAAK2e,SACEqkG,IAAoB5pE,EAE3B4pE,GAAmB5pE,GACXp5C,EAAK2e,SAEVkkG,EAAgB7iH,MAG/B7J,MAAO,SAAS8sH,GACZ,IAAIlhH,EAAS4e,EAAKq9B,OAClB,GAAIr9B,EAAKrF,OAAOhE,IAAwB,CACpC,IAAIl3B,EAAaugC,EAAKvgC,aAClBq1H,EAAoB,OAASr1H,QAAc,IAAWA,OAAa,EAASA,EAAWq1H,oBACvFC,EAAQD,EAAoBA,EAAkBC,MAAQ,EACtD0L,EAAczgG,EAAKmhG,iBACnBxpE,EAAO33B,EAAK2hG,cAAgBlB,EAAc1L,EAC1Cn9D,EAAO6oE,EACX,GAAI9oE,EAAO,EACP,MAAO,GAEPA,IACAA,EAAOv/D,KAAK69H,aAAa70G,EAAQu2C,GACjCv2C,EAASA,EAAOe,MAAMw1C,IAEtBC,IACAA,EAAOx/D,KAAK69H,aAAa70G,EAAQw2C,GACjCx2C,EAASA,EAAOe,MAAM,EAAGy1C,IAGjC,OAAO0qE,EAAgBlhH,EAAOpF,OAAOkmH,GAAmB9gH,GAE5D20G,cAAe,SAASvgH,GAIpB,OAHIA,IAAS,IAAUwqB,EAAKrF,OAAOhE,MAC/BqJ,EAAK0hG,cAAgBlsH,GAElBwqB,EAAK0hG,eAEhB1K,UAAW,aACXgD,iBAAkB,SAASt7F,GACvB,IAAIj/B,EAAaugC,EAAKvgC,aACtB,OAAI,OAASA,QAAc,IAAWA,GAAcA,EAAWu6B,cAAe,IAAUgG,EAAKrF,OAAOhE,IACzF2lG,IAEH,OAAS78H,QAAc,IAAWA,OAAa,EAASA,EAAWw9H,cAAgB,KAIvG/zD,iBAAkB,SAASj6D,GACvB,IAAIszH,EAAQnqI,KAAK2sE,mBAEjB,GADA3sE,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YACtB,IAAUrrB,KAAKuiC,OAAOhE,KAA0B2Q,EAAAA,sBAAoClvC,MAChF,WAAa6W,EAAO4jC,YAAc,IAAM5jC,EAAO82D,WAAW/lD,QAAU/Q,EAAOuzH,qBAC3EvzH,EAAOjB,QAAS,OAFxB,CAMA,IAAIozH,EAAuBhpI,KAAK4oI,sBAChC,GAAII,EAAsB,CACtB,IAAIl8D,EAAe9sE,KAAKspI,cACpBnG,EAAY,YAActsH,EAAO4jC,YAAc5jC,EAAOo4D,aAC1D,GAAI,WAAap4D,EAAO4jC,YAAc5jC,EAAOuG,QAAUvG,EAAOuG,MAAMwK,OAChE,OAEAu7G,GAAa,WAAatsH,EAAO4jC,YAAc,YAAc5jC,EAAO4jC,YACpE5jC,EAAOjB,QAAS,EAChButH,GAAa6F,EAAqBrzE,OAAM,GACxCqzE,EAAqB5qE,SAEjB,WAAavnD,EAAO4jC,WACpB5jC,EAAO82D,WAAW9xB,SAAQ,CAACtI,EAAUnpB,KACjC,IAAIqwB,EAAa5jC,EAAOikC,YAAY1wB,GAChCqkD,EAAU53D,EAAOuG,MAAMgN,GACvB,WAAaqwB,EACbqyB,EAAav5B,GAAYk7B,EAClB,WAAah0B,EACpBqyB,EAAa9vB,OAAOzJ,EAAU,EAAGk7B,GAC1B,WAAah0B,GACpBqyB,EAAa9vB,OAAOzJ,EAAU,OAItCu5B,EAAajxB,SAAQ,CAAC50B,EAAMmD,KACxB0iD,EAAa1iD,GAASpqB,KAAKilE,OAAO76C,EAAQ+/G,IAAUr9D,EAAa1iD,MAErEvT,EAAOuG,MAAQ0vD,GAEnBy3D,GAAkBz3D,OAI9B+8D,0BAA2B,WACvB,IAAIxI,EAAiBrhI,KAAK4oI,sBAAsBtH,oBAC5C/+G,EAAWviB,KAAKuiB,WACpB,GAAI8+G,IAAmB38B,GAAgB1kG,OAASuiB,EAAW,EAAG,CAC1D,IAAIy/E,EAAahiG,KAAKsiB,YAAcC,EACpC8+G,EAAe9hE,MAAQyiC,EAE3BhiG,KAAKqpI,oBAAsBhI,GAE/Bz0D,cAAe,SAASxvD,GACpB,IAAIitH,EAAWrqI,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACzC,IAAI,IAAUrrB,KAAKuiC,OAAOhE,IAAwB,CAC9C,IAAI+rG,EAGAC,EACAC,EACAC,EAJApjI,EAAarH,KAAK2jC,YAClB+mG,EAAe,QAAUJ,EAAwB,OAASjjI,QAAc,IAAWA,OAAa,EAASA,EAAW+zD,kBAAkBmE,YAAS,IAAW+qE,EAAwBA,EAAwB,EAI1MK,GAAmB,EACvBN,EAASxuF,SAAQ50B,IACb,IAAI6c,EAAU7c,EAAK6c,QACf8mG,EAAgBtG,GAA4Br9G,EAAM5f,GACtD,IAAK4f,EAAK2e,WAAYnV,EAAAA,EAAAA,IAAU85G,GAAgB,CAC5C,IAAIM,EAAkB,UAAY/mG,IAAYymG,GAAiBK,GAAiB,UAAYJ,GAAeE,EAAe,GACtHI,EAAiB,SAAWhnG,GAAW8mG,IAAkBL,GAAiB,UAAYC,GACtFO,EAAoBN,IAAiBE,GACrCE,GAAmBC,KACnBH,GAAmB,EACdI,GACDL,KAIZzjH,EAAKgqD,UAAYy5D,EACjBH,EAAgBK,EAChBJ,EAAc1mG,EACd2mG,EAAexjH,EAAK2e,YAG5B,OAAOykG,GAEXx5D,mBAAoB,SAASzzD,GAEzB,GADApd,KAAKgqI,WAAa5sH,EAAMwG,QAAOqD,GAAQq9G,GAA4Br9G,EAAMjnB,KAAK2jC,eAAc/b,QACxF6I,EAAAA,EAAAA,IAAUzwB,KAAKqpI,qBAAsB,CACrCrpI,KAAK6pI,4BACL,IAAI7gH,EAAS5L,EAEb,GADApd,KAAKopI,UAAYhsH,EACbA,EAAMwK,OAAQ,CACd,IACIojH,mBAAoBA,GACpBhrI,KAAK8oI,mBAAkB,GACvBvpE,EAAOniD,EAAM,GAAG6zD,UAAY+5D,EAC5BxrE,EAAOx/D,KAAKqpI,oBAAoB7pE,KACpCx2C,EAAS5L,EAAMwG,QAAOqnH,IAClB,IAAIC,EAAkBD,EAAGrlG,UAAYqlG,EAAGh6D,WAAa1R,EAAO,EACxD4rE,EAAsBF,EAAGrlG,UAAYqlG,EAAGh6D,YAAc1R,GAAQ,IAAMC,EACpE4rE,EAA0BH,EAAGh6D,WAAa1R,GAAQ2rE,EAClDG,EAAqBJ,EAAGh6D,UAAY1R,EAAOC,GAAQ2rE,EACvD,OAAOC,GAA2BC,KAG1C,OAAOriH,EAEX,OAAOhpB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCiiD,aAAc,SAASz2D,GACnB,IAAI+wB,EAAO5nC,KACPod,EAAQvG,EAAOuG,MACfq9B,EAAa5jC,EAAO4jC,WACpBmjF,EAAc/mH,EAAO+mH,YACzB,GAAIA,EAAa,CACb,IAAIv9D,EAAU,YAAc5lB,EAC5BmjF,EAAcwG,GAAcx8F,EAAKq9B,OAAQ24D,EAAav9D,GAAU,SAASp5C,EAAMgjH,GAC3E,MAAO,SAAWhjH,EAAK6c,UAAY7c,EAAK2e,UAAY,UAAY3e,EAAK6c,UAAY8D,EAAKjE,YAAYo6D,qBAAqB92E,EAAKvX,OAASu6H,MAEzIpzH,EAAO+mH,YAAcA,EAEzB,OAAQnjF,GACJ,IAAK,UACD7S,EAAKq9B,OAAOjY,QAAQv5B,MAAMmU,EAAKq9B,OAAQ7nD,GACnCwgH,GACAh2F,EAAKq9B,OAAOjoB,QAAQ4gF,GAExB,MACJ,IAAK,SACDh2F,EAAKq9B,OAAO58C,KAAKoL,MAAMmU,EAAKq9B,OAAQ7nD,GAChCwgH,GACAh2F,EAAKq9B,OAAOjoB,OAAO,EAAG4gF,GAE1B,MACJ,QACIh2F,EAAKtN,SAASzjB,KAG1BuG,MAAO,SAAS89F,GACZ,OAAOA,EAAWl7G,KAAKopI,WAAappI,KAAKilE,OAASjlE,KAAKspI,eAAiBtpI,KAAKilE,QAEjF0H,iBAAkB,WACd,IAAIw9D,EAAQ,EACZ,GAAInqI,KAAKuiC,OAAOhE,IAAwB,CACpC,IAAIuuC,EAAe9sE,KAAKspI,cACpBx8D,GAAgBA,EAAa,KAC7Bq9D,EAAQnqI,KAAKilE,OAAO56C,QAAQyiD,EAAa,KAGjD,OAAOq9D,EAAQ,EAAI,EAAIA,GAE3Bx5D,kBAAmB,SAAS26D,GACxB,IAAItoH,EAAS,EACT3b,EAAarH,KAAKqH,aAClB2hI,EAAuBhpI,KAAK4oI,sBAC5B7D,GAAU,IAAU/kI,KAAKuiC,OAAOhE,IAChC+zD,EAAgBoS,GAAgB1kG,MACpC,GAAIgpI,IAAyBsC,EACzB,GAAIvG,IAAWt0G,EAAAA,EAAAA,IAAUzwB,KAAKqpI,qBAAsB,CAChD,IACI2B,mBAAoBA,EACpB1oH,UAAWA,GACXtiB,KAAK8oI,mBAAkB,GACvB1rH,EAAQpd,KAAKod,OAAM,GAEvB,GADA4F,EAASsvE,EAAgBhwE,EAAYtiB,KAAKuiB,WAAa,EACnDnF,EAAMwK,OAAQ,CACd,IAAI2jH,EAAiBnuH,EAAM,GAAG6zD,UAC9BjuD,GAAU5F,EAAMwG,QAAOqD,GAAQA,EAAKgqD,UAAYs6D,EAAiBP,IAAoBpjH,aAGzF5E,EAASgmH,EAAqBrnC,iBAAmBqnC,EAAqBzmH,gBAEvE,GAAI+vE,GAAiByyC,GAAW19H,EAAY,CAC/C,IAAImkI,EACJxoH,EAAS,QAAUwoH,EAAyBnkI,EAAW+zD,kBAAkBmE,YAAS,IAAWisE,EAAyBA,EAAyB,OACxI3jG,GAAc7nC,OAASqH,IAC9B2b,EAAS3b,EAAWs6F,iBAAmBt6F,EAAWkb,YAEtD,OAAOS,GAEXs5G,aAAc,WACV,IAAI0M,EAAuBhpI,KAAK4oI,sBAC5BvhI,EAAarH,KAAK2jC,YAClB3a,EAAS,OAASggH,QAAwB,IAAWA,OAAuB,EAASA,EAAqB1M,aAAa7oG,MAAMu1G,EAAsB39G,WACvJ,OAAI,IAAUrrB,KAAKuiC,OAAOhE,IACfvV,EAEJ,OAAS3hB,QAAc,IAAWA,OAAa,EAASA,EAAWi1H,aAAa7oG,MAAMpsB,EAAYgkB,YAE7G63G,eAAgB,SAASx6H,GACrB,IAAI+iI,EACJ,QAAUA,EAAwBzrI,KAAK4oI,6BAA0B,IAAW6C,GAAiCA,EAAsBvI,eAAex6H,IAEtJ6zH,iBAAkB,WACd,IAAIyM,EAAuBhpI,KAAK4oI,sBAC5BvhI,EAAarH,KAAK2jC,YAClB3a,EAAS,OAASggH,QAAwB,IAAWA,OAAuB,EAASA,EAAqBzM,iBAAiB9oG,MAAMu1G,EAAsB39G,WAC3J,OAAI,IAAUrrB,KAAKuiC,OAAOhE,IACfvV,EAEJ,OAAS3hB,QAAc,IAAWA,OAAa,EAASA,EAAWk1H,iBAAiB9oG,MAAMpsB,EAAYgkB,YAEjHw2G,oBAAqB,WACjB,IAAImH,EAAuBhpI,KAAK4oI,sBAC5BvhI,EAAarH,KAAK2jC,YAClBqlG,EACAA,EAAqBnH,oBAAoBpuG,MAAMu1G,EAAsB39G,WAErE,OAAShkB,QAAc,IAAWA,GAAsBA,EAAWw6H,oBAAoBpuG,MAAMpsB,EAAYgkB,YAGjHo3G,oBAAqB,SAASC,GAC1B,IAAIsG,EAAuBhpI,KAAK4oI,sBAC5BvhI,EAAarH,KAAK2jC,YAClB3a,EAAS,OAASggH,QAAwB,IAAWA,OAAuB,EAASA,EAAqBvG,oBAAoBC,GAClI,OAAI,IAAU1iI,KAAKuiC,OAAOhE,IACfvV,EAEJ,OAAS3hB,QAAc,IAAWA,OAAa,EAASA,EAAWo7H,oBAAoBC,IAElGgJ,qBAAsB,WAClB,IAAIC,EAAe3rI,KAAKuiC,OAAO,+BAC3B7d,EAAiB1kB,KAAKuiC,OAAO,4BACjC,IAAI9R,EAAAA,EAAAA,IAAUk7G,GACV,OAAOA,EAEX,IAAIrP,EAAet8H,KAAKs8H,eACxB,OAAO53G,EAAiB,EAAI43G,EAAeA,GAE/CwM,kBAAmB,SAAS8C,GACxB,IAAIC,EAAoBC,EACpBvpH,EAAWviB,KAAKuiB,WAChB8+G,EAAiBrhI,KAAKqpI,oBACtBjuE,EAAkB,QAAUywE,EAAqB7rI,KAAK2jC,mBAAgB,IAAWkoG,OAAqB,EAASA,EAAmBzwE,kBAClI2wE,GAAmB,OAAS3wE,QAAmB,IAAWA,OAAkB,EAASA,EAAgB94C,YAAc,EACnH0pH,GAAc,OAAS5wE,QAAmB,IAAWA,OAAkB,EAASA,EAAgBoE,OAAS,EACzG8iE,EAAkBtiI,KAAK4oI,sBAAsBtG,kBAC7C2J,EAAkB3J,EAAkBtiI,KAAK0rI,uBAAyB,EAClEQ,EAAqB5J,EAAkB,EAAItiI,KAAK0rI,uBAChD3jE,GAAwB,QAAU+jE,EAAqB9rI,KAAK2jC,mBAAgB,IAAWmoG,OAAqB,EAASA,EAAmB/jE,yBAA2B,EACnKokE,EAAkB15G,KAAKxP,IAAI,EAAGo+G,EAAe9hE,KAAO0sE,GACpD3pH,EAAYspH,EAAeG,EAAkBt5G,KAAKC,MAAMnQ,EAAW4pH,EAAkB5pH,EAAW,GAChGy/E,EAAa1/E,EAAYC,EACzByoH,EAAqB3J,EAAe9hE,KAAOyiC,EAC3CoqC,EAAc/K,EAAe7hE,KAAOwrE,EAAqBkB,EAAqBnkE,EAC9EvI,EAAOosE,EAAeI,EAAaI,EACnClH,EAAgBzyG,KAAKw1C,KAAK1lD,EAAWi9C,EAAOj9C,EAAW,GAC3D,MAAO,CACHD,UAAWA,EACX4iH,cAAezyG,KAAKxP,IAAI,EAAGiiH,GAC3B8F,mBAAoBv4G,KAAKxP,IAAI,EAAG+nH,KAGxCqB,wBAAyB,SAASC,GAC9B,GAAKtsI,KAAK4oI,sBAAV,CAGA,IAAIn4G,EAAAA,EAAAA,IAAU67G,GAGV,OAFAtsI,KAAKupC,cAAc46F,GAAoBmI,QACvCtsI,KAAKspE,YAAYr8B,OAGrB,IAAIs/F,EAAoBvsI,KAAK4oI,sBAAsBlN,uBAC/C0C,EAAe3rG,KAAKC,MAAM65G,EAAoBvsI,KAAKuiB,YACnDviB,KAAKsiB,cAAgB87G,IACrBp+H,KAAKupC,cAAc46F,GAAoB/F,GACvCp+H,KAAKirE,YAAY,CACbxwB,WAAY,iBAIxB+xF,sBAAuB,WACnB,IAAIC,EAAmBzsI,KAAK8oI,mBAAkB,IAE1CxmH,UAAWA,EACX4iH,cAAeA,GACfllI,KAAK8oI,oBACL9/G,EAAS,KAOb,OANKhpB,KAAK8pE,YAAexnD,IAAcmqH,EAAiBnqH,WAAa4iH,IAAkBuH,EAAiBvH,gBACpGl8G,EAAS,CACL1G,UAAWA,EACX4iH,cAAeA,IAGhBl8G,GAEX0jH,WAAY,SAASC,GACjB,IAAIC,EAAuBC,EACvBv6C,EAAgBoS,GAAgB1kG,MAChCsyE,EAAoBtyE,KAAK2jC,YACzBmpG,EAAgB9sI,KAAKwsI,wBACrBO,EAAuB,QAAUH,EAAwB,OAASt6D,QAAqB,IAAWA,OAAoB,EAASA,EAAkB4yD,uBAAoB,IAAW0H,EAAwBA,EAAwB,EAChOI,EAAwBhtI,KAAKuiB,WAAawqH,EAC1CT,EAAmB,QAAUO,EAAwB,OAASv6D,QAAqB,IAAWA,OAAoB,EAASA,EAAkBhwD,mBAAgB,IAAWuqH,EAAwBA,EAAwB,EACxNI,GAAuB,OAASH,QAAiB,IAAWA,OAAgB,EAASA,EAAcxqH,aAAegqH,EAClHY,EAAwBplG,GAAa9nC,OAASA,KAAKgoE,kBAAoBglE,EACvEhkH,GAAS,EACb,IAAKspD,GAAqBggB,GAAiBq6C,KAAkB,OAASG,QAAiB,IAAWA,OAAgB,EAASA,EAAcxqH,WAAagqH,GAAoBW,GAAuBC,GAC7L,OAAOlkH,EAKX,GAHIspE,GAAiBtyF,KAAK8pE,aACtB9pE,KAAKypI,iCAAkC,GAEvCn3C,GAAiBw6C,EAAe,CAChC9jH,GAAS,EACTspD,EAAkBhwD,UAAUwqH,EAAcxqH,WAC1CgwD,EAAkB4yD,cAAc4H,EAAc5H,eAC9CllI,KAAK+pE,qBAAsB,EAC3B/pE,KAAKqxE,uBAAwB,EAC7B,IAAI87D,EAAmBntI,KAAKwpI,kBAC5BxpI,KAAKo+D,OAAO5wC,QAAO,KACfxtB,KAAK+pE,yBAAsB,EAC3B/pE,KAAKqxE,2BAAwB,KAC9BhjD,MAAK,KACJ,IAAIszC,EAAa3hE,KAAK0nE,YAAc,GAAK1nE,KAAKsiB,cAAgBtiB,KAAK0nE,YAAc,GAChFylE,GAAoBxrE,IAAe3hE,KAAKqsI,0BACrCrsI,KAAKypI,kCACLzpI,KAAKypI,iCAAkC,EACvCzpI,KAAK4pI,aAAa,CACdwD,uBAAuB,QAKvC,OAAOpkH,GAEX4gH,aAAc,SAAS5+G,GACnB,IACIoiH,sBAAuBA,EACvBT,aAAcA,GACd,OAAS3hH,QAAU,IAAWA,EAASA,EAAS,GAChDsnE,EAAgBoS,GAAgB1kG,MACpC,GAAIsyF,GAAiBpjD,EAAAA,sBAAoClvC,MAAO,CAC5DA,KAAK6pI,4BACL,IAAIwD,EAAsBrtI,KAAK0sI,WAAWC,GACrCU,GAAyBrtI,KAAK8pE,YAAc6iE,GAAkBS,GAC/DptI,KAAKirE,YAAY,CACb/+D,oBAAoB,EACpBklE,sBAAsB,EACtBJ,wBAAwB,EACxBo5D,oBAAoB,MAKpCxC,eAAgB,WACZ,IAAI0F,EAAuBC,EACvBjR,EAAet8H,KAAKs8H,eACpB/gD,EAAYv7E,KAAKod,QAAQwK,OACzB4lH,EAAsBlR,EAAe/gD,EACrCkyD,EAAc,QAAUH,EAAwB,QAAUC,EAAyBvtI,KAAKqpI,2BAAwB,IAAWkE,OAAyB,EAASA,EAAuB/tE,YAAS,IAAW8tE,EAAwBA,EAAwB,EACxPtE,EAAuBhpI,KAAK4oI,sBAC5B8E,EAAU,OAAS1E,QAAwB,IAAWA,OAAuB,EAASA,EAAqB1H,oBAAoB9hE,MAClIguE,GAAuBC,EAAcC,IAAYnyD,GAAav7E,KAAK4pI,aAAa,CAC7E+C,cAAc,KAGtB9N,WAAY,WACR,IAAI,IAAU7+H,KAAKuiC,OAAOhE,IAA1B,CAGA,IAAIyqG,EAAuBhpI,KAAK4oI,sBAChCI,GAAwBA,EAAqBnK,aAC7C,IAAIx3H,EAAarH,KAAK2jC,YACtB,OAAOt8B,GAAcA,EAAWw3H,eAEpCoD,YAAa,WACT,IAAI+G,EAAuBhpI,KAAK4oI,sBAChC,GAAII,EACA,OAAOA,EAAqB/G,YAAYxuG,MAAMu1G,EAAsB39G,WAExE,IAAIhkB,EAAarH,KAAK2jC,YACtB,OAAOt8B,GAAcA,EAAW46H,YAAYxuG,MAAMpsB,EAAYgkB,YAElEwxG,aAAc,WACV,IAAImM,EAAuBhpI,KAAK4oI,sBAChC,GAAII,EACA,OAAOA,EAAqBnM,aAAappG,MAAMu1G,EAAsB39G,WAEzE,IAAIhkB,EAAarH,KAAK2jC,YACtB,OAAOt8B,GAAcA,EAAWw1H,aAAappG,MAAMpsB,EAAYgkB,YAEnEmxG,iBAAkB,WACd,IAAIwM,EAAuBhpI,KAAK4oI,sBAChC,GAAII,EACA,OAAOA,EAAqBxM,iBAAiB/oG,MAAMu1G,EAAsB39G,WAE7E,IAAIhkB,EAAarH,KAAK2jC,YACtB,OAAOt8B,GAAcA,EAAWm1H,iBAAiB/oG,MAAMpsB,EAAYgkB,YAEvE6uC,QAAS,SAAS54C,GACd,IAAIja,EAAarH,KAAK2jC,YAItB,OAHIt8B,GAAcia,GAAWA,EAAQ88C,MAAQt2B,GAAa9nC,OACtDqH,EAAWo8D,yBAERzjE,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCuf,QAAS,WACL,IAAIo+F,EAAuBhpI,KAAK4oI,sBAChCI,GAAwBA,EAAqBp+F,UAC7C5qC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9BsiH,aAAc,WACV,IAAIC,EACJ,OAAO,QAAUA,EAAyB5tI,KAAKqpI,2BAAwB,IAAWuE,OAAyB,EAASA,EAAuBruE,MAE/IsuE,gBAAiB,WACb,IAAIxM,EAAiBrhI,KAAKqpI,oBAC1B,OAAOhI,GAAkBA,EAAe9hE,KAAO8hE,EAAe7hE,MAElEk9D,kBAAmB,WACf,IAAIsM,EAAuBhpI,KAAK4oI,sBAChC,GAAII,EACA,OAAOA,EAAqBtM,kBAAkBjpG,MAAMu1G,EAAsB39G,WAE9E,IAAIhkB,EAAarH,KAAK2jC,YACtB,OAAO,OAASt8B,QAAc,IAAWA,OAAa,EAASA,EAAWq1H,kBAAkBjpG,MAAMpsB,EAAYgkB,YAElH/I,UAAW,SAASw2F,GAChB,IAIY6oB,EAJRrvC,EAAgBoS,GAAgB1kG,MAChCgpI,EAAuBhpI,KAAK4oI,sBAChC,IAAI,IAAU5oI,KAAKuiC,OAAOhE,KAA0B+zD,GAAiB02C,QAC7D,IAAWlwB,EAEX,OAAO,QAAU6oB,EAAe3hI,KAAKuiC,OAAO4hG,WAAwB,IAAWxC,EAAeA,EAAe,EAGrH,OAAO3hI,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCimD,aAAc,SAAShrC,GACnBtmC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1B,IACI8zC,eAAgBA,GAChB74B,EACJ,IAAI,IAAUtmC,KAAKuiC,OAAOhE,KAA0BmmE,GAAgB1kG,OAASm/D,EAAgB,CACzF,IACIE,WAAYA,EACZ/8C,UAAWA,GACX68C,EACA74B,EAAE6qC,gBAAkB9R,GAAc/8C,GAClCtiB,KAAKqsI,wBAAwBrsI,KAAK2jC,YAAYrhB,eAI1D8mD,sBAAuB,SAAS/6D,GAC5B,IAAI2a,EAAShpB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAIvC,OAHI,IAAUrrB,KAAKuiC,OAAOhE,KAA0BmmE,GAAgB1kG,QAChEgpB,EAAShpB,KAAKqO,MAEX2a,GAEX2Y,QAAS,WACL,OAAO,IAAU3hC,KAAKuiC,OAAOhE,KAA0Bv+B,KAAKod,OAAM,GAAMwK,OAAS5nB,KAAKs6B,SAASt6B,KAAMqrB,YAEzG0oD,iBAAkB,WACd,IAAI/qD,GAAS,EACb,IAAI,IAAUhpB,KAAKuiC,OAAOhE,KAA0BmmE,GAAgB1kG,MAAO,CACvE,IACIsiB,UAAWA,EACX4iH,cAAeA,GACfllI,KAAK8oI,mBAAkB,GACvBphE,EAAY1nE,KAAK0nE,YACrB1+C,EAAS1G,EAAY4iH,GAAiBx9D,OAEtC1+C,EAAShpB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAEvC,OAAOrC,GAEX2sC,MAAO,WACH31D,KAAKgqI,WAAa,EAClBhqI,KAAKopI,UAAY,KACjBppI,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,aAKlC,OAFA6jB,EAAAA,YAA0Bq6B,EAAS,yBACnCr6B,EAAAA,YAA0Bq6B,EAAS,wBAC5BA,EA/pBL,GAiqBN6f,SAAU,CACNl8C,OAAQ,WACJ,IAEIlkB,EAFA4e,EAAO5nC,KACPs6B,EAAWsN,EAAKtN,SAEpB,GAAIuN,GAAcD,IAASsH,EAAAA,sBAAoCtH,GAAO,CAClEqL,aAAarL,EAAKkmG,gBAClB,IAAIznD,EAAO,IAAIp9D,KAAO2e,EAAKmmG,UACvB7F,EAAgBtgG,EAAKrF,OAAO,2BAC5BqF,EAAKmmG,WAAa1nD,EAAO6hD,GACzBl/G,EAAS,IAAIqE,EAAAA,GACbua,EAAKkmG,eAAiB96F,YAAY,WAC9B1Y,EAAS7G,MAAMmU,GAAMvZ,KAAKrF,EAAOmF,SAASC,KAAKpF,EAAOiF,QACtD2Z,EAAKmmG,UAAY,IAAI9kH,OACrBi/G,GACJtgG,EAAKmmG,UAAY,IAAI9kH,OAErBD,EAASsR,EAAS7G,MAAMmU,GACpBA,EAAKlG,gBAAgBmmB,aACrBjgB,EAAKmmG,UAAY,IAAI9kH,YAI7BD,EAASsR,EAAS7G,MAAMmU,GAE5B,OAAO5e,GAEX4hB,QAAS,WACL5qC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1B4nB,aAAajzC,KAAK8tI,mBAI9B5/F,MAAO,CACHrI,SAAUu/F,MC70CtB56E,GAAAA,eAAwB,mBAAoBy9E,IAC5C31D,GAAAA,OAAyB21D,GAAuB75F,UAAUkkC,mB,eCKtD07D,I,gBAAwB,IACjBC,GAA8B,CAACvtG,EAAUwtG,KAChD,IAIIC,EAJAxrG,GAAUd,EAAAA,EAAAA,IAAEe,EAAAA,EAAAA,QAEZ1jB,IAAKkvH,GACL1tG,EAAS1d,SAEb,IAAI+wB,EAAAA,EAAAA,IAAUm6F,GAAgB,CAC1B,GAAIA,EAAgBE,EAChB,OAAOA,EAAgBF,EAEvBC,GAAeE,EAAAA,EAAAA,IAAe1rG,GAAWurG,EAAgBvrG,EAAQ+kD,gBAElE,CACH,IAAI4mD,EAAYF,EAAgBzrG,EAAQ+kD,YACpC6mD,GAAeF,EAAAA,EAAAA,IAAe1rG,GAAW2rG,GAAY7sF,EAAAA,EAAAA,IAAe/gB,GACxEytG,EAAe17G,KAAKxP,IAAIqrH,EAAWC,GAEvC,OAAOJ,EAAeH,I,sBCXtBQ,GAA0C,oCAC1CC,GAAmB,aACvB,MAAMC,WAAgBjvD,GAAAA,WAClBsM,qBACI,OAAOngE,EAAAA,EAAAA,GAAO+iH,MAAM5iD,qBAAsB,CACtC6iD,YAAa,aACbxhI,SAAU,KACVyhI,aAAcv+F,EAAAA,KAGtBw+F,mBACI9uI,KAAK+uI,aAAe/uI,KAAKuiC,OAAO,gBAC3BviC,KAAK+uI,cACNJ,MAAMG,mBAGd/hD,qBACI/sF,KAAKgvI,4BACLL,MAAM5hD,qBACN,IAAI14D,EAAOr0B,KAAK+uI,aAAaE,aAAajvI,KAAKuiC,OAAO,eACtDlO,GAAQr0B,KAAKkvI,aAAalvI,KAAKmvI,eAAe96G,IAC9Cr0B,KAAKovI,mBAETA,mBACIpvI,KAAKqvI,mBAAoBxtG,EAAAA,EAAAA,GAAE,SAASE,SAAS/hC,KAAKsvI,kBAAkBxtG,SAAS0sG,IAEjFe,qBACI,OAAO3jH,EAAAA,EAAAA,GAAO+iH,MAAMY,qBAAsB,CACtC3X,aAAc53H,KAAKwvI,gCAAgClrG,KAAKtkC,QAGhEwvI,gCAAgCp4D,GAC5Bp3E,KAAKyvI,eAAer4D,GAExBs4D,iBAAiBppG,GACbqoG,MAAMe,iBAAiBppG,GACvBtmC,KAAK2vI,mBAAkB,EAAOrpG,EAAE4M,eAEpC08F,oBACI,MAAO,eAAiB5vI,KAAKuiC,OAAO,eAExCstG,mBAAmBvpG,GACf,IAAIwpG,EAAmB9vI,KAAKuiC,OAAO,gBACnCutG,EAAiBxpG,GACjBqoG,MAAMkB,mBAAmBvpG,GACzBtmC,KAAK2vI,mBAAkB,EAAMrpG,EAAE4M,eAEnC68F,aAAaC,GACThwI,KAAKyoC,SAASluB,UAAU,CACpB01H,UAAUv8F,EAAAA,GAAAA,GAAiBs8F,GAC3BE,QAASlwI,OAEb2uI,MAAMoB,aAAaC,GACnBhwI,KAAKyoC,SAASjuB,QAAQ,CAClBy1H,UAAUv8F,EAAAA,GAAAA,GAAiBs8F,GAC3BE,QAASlwI,OAGjBmwI,aAAaH,GACThwI,KAAKyoC,SAAStuB,SAAS,CACnBvE,QAAQ,EACRq6H,UAAUv8F,EAAAA,GAAAA,GAAiBs8F,GAC3BE,QAASlwI,OAEb2uI,MAAMwB,aAAaH,GACnBhwI,KAAKyoC,SAASvuB,SAAS,CACnB+1H,UAAUv8F,EAAAA,GAAAA,GAAiBs8F,GAC3BE,QAASlwI,OAGjByvI,eAAer4D,GACX,GAAKp3E,KAAKqvI,kBAAV,CAGA,IAAIe,EAAWpwI,KAAKsvI,iBAAiBz+F,SAAS,IAAI/oB,OAAO2mH,KAAmBvpG,GAAG,GAC3E8qG,EAAYhwI,KAAKuiC,OAAO,YAAYxf,GACpCrI,EAAW,CACXqI,GAAIqtH,GAEJC,EAAkBj5D,EAAI18D,SACtB41H,EAAYD,EAAgB/9G,EAAElR,SAC9BmvH,EAAYF,EAAgB5hC,EAAErtF,SAC9BovH,EAAaR,EAAUhtH,SACvBytH,EAAah+G,KAAKgkD,MAAM+5D,EAAWzxH,MACnCuvH,EAAY77G,KAAKgkD,MAAM+5D,EAAWtxH,KAClCwxH,GAAYlvF,EAAAA,EAAAA,IAASwuF,GACrBW,GAAa9tG,EAAAA,EAAAA,IAAUmtG,GACvBY,GAAepvF,EAAAA,EAAAA,IAAS4uF,GACxBS,GAAgBhuG,EAAAA,EAAAA,IAAUutG,GAC9BpwI,KAAKqvI,kBAAkBlqG,IAAI,UAAW,UACtC6S,EAAAA,EAAAA,IAASh4C,KAAKqvI,kBAAmBrvI,KAAK4vI,oBAAsBc,EAAYE,EAAeF,EAAY,EAAIE,EAAe,IACtHt0D,EAAAA,EAAAA,IAAUt8E,KAAKqvI,kBAAmBrvI,KAAK4vI,oBAAsB,EAAIe,EAAaE,EAAgBF,EAAa,EAAIE,GAC3G7wI,KAAK4vI,oBACDU,EAAYhC,EACR77G,KAAKgkD,MAAM85D,KAAeE,GAC1B/1H,EAASsI,OAAS,OAClBtI,EAASgI,GAAKhI,EAASoI,GAAK,aAE5BpI,EAASsI,OAAS,QAClBtI,EAASgI,GAAKhI,EAASoI,GAAK,eAGhCw5D,EAAAA,EAAAA,IAAUt8E,KAAKqvI,kBAAmB,GAC9B58G,KAAKgkD,MAAM85D,KAAeE,GAC1B/1H,EAASsI,OAAS,MAClBtI,EAASgI,GAAKhI,EAASoI,GAAK,gBAE5BpI,EAASsI,OAAS,OAClBtI,EAASgI,GAAKhI,EAASoI,GAAK,iBAG7BytH,EAAYE,EACfh+G,KAAKgkD,MAAM65D,KAAehC,GAC1B5zH,EAASsI,OAAS,OAClBtI,EAASgI,GAAKhI,EAASoI,GAAK,aAE5BpI,EAASsI,OAAS,QAClBtI,EAASgI,GAAKhI,EAASoI,GAAK,eAEzB2P,KAAKgkD,MAAM65D,KAAehC,GACjC5zH,EAASsI,OAAS,MAClBtI,EAASgI,GAAKhI,EAASoI,GAAK,cAE5BpI,EAASsI,OAAS,OAClBtI,EAASgI,GAAKhI,EAASoI,GAAK,gBAEhCguH,GAAAA,EAAAA,MAAwB9wI,KAAKqvI,kBAAmB30H,IAEpDq2H,0BACI,OAAO/wI,KAAKuiC,OAAO,YAEvB81F,mBACI,OAAOr4H,KAAKgxI,SAASzuG,OAAO,WAEhC0uG,oBACI,OAAOjxI,KAAKgxI,SAAS9pF,YAG7B,UCtHIgqF,GAAgB,UAChBC,GAAyBD,GAAgB,YACzCE,GAA2BF,GAAgB,cAC3CG,GAAqBH,GAAgB,QACrCI,GAAgCJ,GAAgB,mBAChDK,GAA8BF,GAAqB,YACnDG,GAAwB,kBACxBC,GAAyCD,GAAwB,oBACjEhD,GAA0C,oCAC1CC,GAAmB,aACnBiD,GAA0B,oBAC1BC,GAAuB,iBACvBC,GAAwB,kBACxBC,GAAyBX,GAAgB,iBACzCY,GAAqCZ,GAAgB,oBACrDa,GAAyCF,GAAyB,mBAClEG,GAAW,KACXC,GAAa,OACbC,GAAa,OACbC,GAAc,QACdC,GAAyB,cACzBC,GAAqB,WACrBC,GAAqB,WACrBC,GAAgB,CAChB9jI,KAAM,GACND,KAAM,KAENgkI,GAAU,CAAC,mBAAoB,iBAAkB,kBAAmB,kBAAmB,oBAAqB,cAAe,qBAAsB,kBACrJ,MAAMC,WAAaC,GAAAA,EACf3mD,qBACI,OAAOngE,EAAAA,EAAAA,GAAO+iH,MAAM5iD,qBAAsB,CACtC6iD,YAAa,aACb+D,iBAAkB,OAClBC,qBAAsB,CAClBtjI,KAAM,UACNoR,MAAO,CACHjS,KAAM,GACND,KAAM,MAGdqkI,yBAAyB,EACzBC,iBAAkB,KAClBC,eAAgB,KAChBC,gBAAiB,KACjBC,gBAAiB,KACjBC,mBAAmB,IAG3BC,yBACIxE,MAAMwE,0BACNvnH,EAAAA,EAAAA,GAAO5rB,KAAKs1G,oBAAqB,CAC7Bl8F,WAAW,EACXg6H,cAAc,IAGtBC,gBACI,IAAIC,EAAmB3E,MAAM0E,gBACzBE,EAAkBvzI,KAAKwzI,uBAC3B,OAAOF,EAAiBn1F,IAAIo1F,GAEhCC,uBACI,IAAI/yF,EAAW,GACXgzF,EAAe,IAAI3rH,OAAOupH,IAC1BqC,EAAiB1zI,KAAK2zI,UAAU/rH,QAAU5nB,KAAK2zI,UAAU,GAI7D,OAHID,GAAkBA,EAAeE,mBACjCnzF,EAAWizF,EAAeE,iBAAiBryG,KAAKkyG,IAE7ChzF,EAEXozF,eACI,OAAO7zI,KAAK0gC,WAEhBkvG,oBACI,MAAO,eAAiB5vI,KAAKuiC,OAAO,eAExCuxG,WAAW1yH,GACP,IAGI4yE,EACA9wD,EACA6wG,EACAC,EANAC,EAASj0I,KAAKk0I,qBACdC,EAAmBn0I,KAAK4vI,oBACxBwE,EAAcp0I,KAAKq0I,gBAAe,GAKtC,OAAQjzH,GACJ,KAAK4wH,GACD9uG,EAAYixG,EAAmB/B,GAAyBpyI,KAAKs0I,6BAA6BhC,IAC1Ft+C,EAAWmgD,EAAmBC,EAAcH,EAC5CF,EAAmB/zI,KAAKu0I,6BAA6BrxG,EAAW8wD,GAChEggD,EAAaD,IACb,MACJ,KAAK9B,GACD/uG,EAAYixG,EAAmB/B,GAAyBpyI,KAAKs0I,6BAA6BjC,IAC1Fr+C,EAAWmgD,EAAmBC,EAAcH,EAC5CF,EAAmB/zI,KAAKu0I,6BAA6BrxG,EAAW8wD,GAChEggD,EAAaD,IACb,MACJ,KAAK5B,GACDjvG,EAAYixG,EAAmBn0I,KAAKs0I,6BAA6BjC,IAAsBD,GACvFp+C,EAAWmgD,EAAmBF,EAASG,EACvCL,EAAmB/zI,KAAKu0I,6BAA6BrxG,EAAW8wD,GAChEggD,EAAaD,IACb,MACJ,KAAK7B,GACDhvG,EAAYixG,EAAmBn0I,KAAKs0I,6BAA6BhC,IAAsBF,GACvFp+C,EAAWmgD,EAAmBF,EAASG,EACvCL,EAAmB/zI,KAAKu0I,6BAA6BrxG,EAAW8wD,GAChEggD,EAAaD,IACb,MACJ,QACI,OAAOpF,MAAMmF,WAAW1yH,GAE5B4yH,GAAc,IAAMA,EAAWpsH,QAC/B5nB,KAAKuiC,OAAO,kBAAkBmR,EAAAA,GAAAA,GAAiBsgG,IAGvDM,6BAA6BpxG,GACzB,IAAIsxG,EAAetxG,EAInB,OAHIljC,KAAKuiC,OAAO,gBACZiyG,EAAetxG,IAAcovG,GAAqBD,GAAqBC,IAEpEkC,EAEXD,6BAA6BrxG,EAAW8wD,GACpC,IAAIzpD,EAAS+F,EAAAA,GACb,OAAQpN,GACJ,KAAKkvG,GACIp+C,EAASpkD,SAAS8hG,MACnBnnG,EAASvqC,KAAKy0I,aAAanwG,KAAKtkC,KAAMg0F,IAE1C,MACJ,KAAKq+C,GACD9nG,EAASvqC,KAAK00I,UAAUpwG,KAAKtkC,KAAMg0F,GACnC,MACJ,KAAKs+C,GACD/nG,EAASvqC,KAAK20I,UAAUrwG,KAAKtkC,KAAMg0F,GAE3C,OAAOzpD,EAEXoiD,SACIgiD,MAAMhiD,SACN3sF,KAAKuiC,OAAO,kCAAoC0Q,aAAajzC,KAAK40I,mBAEtE55D,mBAAmBztE,GACXA,IACKvN,KAAK60I,iBACN70I,KAAK80I,yBAET90I,KAAK6sF,qBAGbkoD,uBACI,OAAO/0I,KAAKuiC,OAAO,sBAAwB,eAAiBviC,KAAKuiC,OAAO,eAE5EuyG,yBACI,IAAIE,EAAah1I,KAAK0gC,WAAWa,KAAK,MAAMoiB,QAAQ9S,SAAS,MAAMA,SAAS,IAAI/oB,OAAOupH,KACvFrxI,KAAK60I,gBAAkB70I,KAAKi1I,sBAAsBD,GAAY,GAElEnoD,oBACI,GAAK7sF,KAAK+0I,uBAAV,CAGA,IAAIG,GAAiB3zF,EAAAA,EAAAA,IAAcvhD,KAAK0gC,YACxC1gC,KAAKm1I,oBAAoBn1I,KAAK60I,gBAAkBK,IAEpDxoD,QACIiiD,MAAMjiD,QACN1sF,KAAK2zI,UAAY,GAErByB,eACIp1I,KAAKyoC,SAAW,IAChBrX,EAAAA,EAAAA,IAAKohH,IAAS,CAACpoH,EAAOmgB,KAClBvqC,KAAKyoC,SAAS8B,GAAUvqC,KAAK0qC,sBAAsBH,MAG3DuiD,cACI9sF,KAAKq1I,gBAAkB,KACvBr1I,KAAK0gC,WAAWoB,SAASovG,IACzBvC,MAAM7hD,cACN9sF,KAAKgmC,QAAQ,OAAQ,WAEzBsvG,UACI3G,MAAM2G,UACNt1I,KAAKu1I,kBAETC,yBAMI,OALAx1I,KAAKy1I,WAAa,IAAIn8C,GAAAA,YAAOz3D,EAAAA,EAAAA,GAAE,SAASC,SAASgwG,IAAqC,CAClFziI,KAAM,OACNrJ,oBAAoB,EACpBuJ,QAASvP,KAAK01I,gBAAgBpxG,KAAKtkC,QAEhCA,KAAKy1I,WAAW/0G,WAE3Bg1G,gBAAgB74E,IACR3sC,EAAAA,EAAAA,IAAc2sC,KACdA,GAAS78D,KAAKgxI,SAASzuG,OAAO,YAElCviC,KAAKgxI,SAASzuG,OAAO,UAAWs6B,GAChC78D,KAAK21I,4BAA4B94E,GAErC84E,4BAA4B94E,GACxB78D,KAAKy1I,YAAcz1I,KAAKy1I,WAAW/0G,WAAWsM,YAAY4kG,GAAuB/0E,GAErFs4E,oBAAoBt4E,GAChB,IAAI+4E,EAAsB51I,KAAK0gC,WAAWa,KAAK,IAAIzZ,OAAOspH,KACtDyE,EAAoB71I,KAAK0gC,WAAWa,KAAK,IAAIzZ,OAAO+pH,KACpDh1E,EACA78D,KAAK81I,uBAEL91I,KAAK+1I,WAAa/1I,KAAK+1I,UAAUtvC,cACjCzmG,KAAKgxI,UAAYhxI,KAAK01I,gBAAgB74E,IAE1C+4E,EAAoB58D,QAAQnc,GAC5Bg5E,EAAkB78D,OAAOnc,GAE7Bm5E,oBACSh2I,KAAKi2I,sBAGVj2I,KAAKm1I,qBAAoB,GACzBn1I,KAAKi2I,oBAAoB3zG,SACzBtiC,KAAKi2I,oBAAsB,KAC3Bj2I,KAAK+1I,UAAY,KACjB/1I,KAAKy1I,WAAa,KAClBz1I,KAAKgxI,SAAW,MAEpBkF,0BAA0B5vG,GACtBtmC,KAAKyoC,SAASyhB,YAAY5jB,GACrBA,EAAEjS,KAAKwc,SAASjpB,QACjB5nB,KAAK01I,iBAAgB,GAG7BS,6BACI,IAAIC,EAAMp2I,KAAKuiC,OAAO,cAClB7nB,EAAW07H,EAAM,QAAU,OAC/B,MAAO,CACHC,iCAAiC,EACjCt8H,UAAW,IAAMk0H,GAA4BjuI,KAAK0gC,YAClDjnB,gBAAgB,EAChBoB,SAAS,EACTzB,WAAW,EACXU,oBAAoB,EACpBI,SAAU,KACNla,KAAK21I,6BAA4B,IAErCjtI,OAAQ,OACR2Q,oBAAqBitB,KAAMzE,EAAAA,EAAAA,GAAEyE,EAAEzJ,QAAQkK,QAAQ,IAAIjf,OAAOgqH,KAAqClqH,OAC/FlN,SAAU,CACNmI,UAAW,UACXH,GAAI,UAAYhI,EAChBoI,GAAI,OAASpI,EACbqI,GAAI/iB,KAAKy1I,WAAW/0G,aAIhC41G,sBACI,IAAIC,EAAc,GASlB,OARAnlH,EAAAA,EAAAA,IAAK,CAAC,aAAc,QAAS,YAAa,qBAAsB,YAAa,aAAc,WAAY,cAAe,cAAe,oBAAqB,OAAQ,oBAAqB,YAAa,QAAS,eAAgB,eAAgB,gBAAiB,WAAY,YAAY,CAAC4C,EAAGuO,KACtRg0G,EAAYh0G,GAAUviC,KAAKuiC,OAAOA,OAEtCnR,EAAAA,EAAAA,IAAK,CAAC,oBAAqB,uBAAuB,CAAC4C,EAAGgW,KAClDusG,EAAYvsG,GAAc1D,IACtBtmC,KAAKyoC,SAASuB,GAAY1D,QAG3B1a,EAAAA,EAAAA,GAAO2qH,EAAa,CACvBlvI,WAAYrH,KAAK0qE,gBACjB8rE,mBAAoBx2I,KAAKuiC,OAAO,aAChC2nB,YAAalqD,KAAKk2I,0BAA0B5xG,KAAKtkC,MACjDy2I,eAAgBnwG,IACZtmC,KAAKgxI,SAAS3nB,UACdrpH,KAAKyoC,SAASsqG,eAAezsG,IAEjCowG,gBAAiBpwG,IACbtmC,KAAKgxI,SAAS3nB,UACdrpH,KAAKyoC,SAASwqG,gBAAgB3sG,IAElCw1D,sBAAsB,EACtB66C,cAAe32I,KAAKuiC,OAAO,iBAC3Bq0G,YAAa,UAGrBrB,kBACI,GAAKv1I,KAAK+0I,uBAAV,CAGA/0I,KAAKi2I,qBAAsBp0G,EAAAA,EAAAA,GAAE,SAASC,SAAS+vG,IAC/C,IAAIgF,EAAa72I,KAAKw1I,yBACtBx1I,KAAK+1I,UAAY/1I,KAAKwiC,kBAAiBX,EAAAA,EAAAA,GAAE,SAAUg6D,GAAAA,WAAU77F,KAAKs2I,uBAClEt2I,KAAKgxI,SAAWhxI,KAAKwiC,kBAAiBX,EAAAA,EAAAA,GAAE,SAAUi2F,GAAAA,EAAS93H,KAAKm2I,8BAChEn2I,KAAKgxI,SAAS9pF,WAAWnW,OAAO/wC,KAAK+1I,UAAUr1G,YAAYoB,SAAS+vG,IAAwB/vG,SAAS9hC,KAAKuiC,OAAO,aACjHviC,KAAKgxI,SAAS52C,WAAWt4D,SAASiwG,IAClC/xI,KAAKi2I,oBAAoBllG,OAAO8lG,GAChC72I,KAAKi2I,oBAAoBllG,OAAO/wC,KAAKgxI,SAAStwG,YAC9C1gC,KAAK0gC,WAAWqQ,OAAO/wC,KAAKi2I,qBAC5Bj2I,KAAK80I,yBACL90I,KAAK6sF,qBAETiqD,UAAUC,GACN,IAAIr2H,EAAQ1gB,KAAKuiC,OAAO,wBAAwB7hB,MAChD,OAAK+P,EAAAA,EAAAA,IAAU/P,IAGJyP,EAAAA,EAAAA,IAASzP,GAASA,EAAMq2H,GAAar2H,EAFrC6xH,GAAcwE,GAK7BC,iBAAiB1wG,GACb,OAAOqoG,MAAMqI,iBAAiB1wG,IAAKtmC,KAAKq1I,iBAE5C4B,mBACI,IAAI78C,GAAWv4D,EAAAA,EAAAA,GAAE,SAEjB,OADAu4D,EAASr4D,SAAS/hC,KAAK0gC,YAAYoB,SAAS9hC,KAAK4vI,oBAAsBwB,GAA2BD,IAC3FxC,MAAMsI,iBAAiB78C,GAElC88C,oBAAoB7iH,EAAM8iH,GACtB,IAAIjH,EAAUlwI,KAAKo3I,eAAe/iH,EAAM8iH,GAGxC,OAFAn3I,KAAK2zI,UAAUtrH,KAAK6nH,GACpBlwI,KAAKq3I,qBAAqBF,GACnBjH,EAEXoH,wBACI,OAAO3I,MAAM2I,wBAAwBxvH,OAAO9nB,KAAKq1I,iBAErD+B,eAAe/iH,EAAM27G,GACjB,IAAIuH,GAAoB11G,EAAAA,EAAAA,GAAE,SAASC,SAAS0vG,IAAuBzvG,SAASiuG,GACxE5yH,EAAQpd,KAAKmvI,eAAe96G,GAC5BrL,EAAShpB,KAAKwiC,iBAAiB+0G,EAAmB7I,IAAS9iH,EAAAA,EAAAA,GAAO5rB,KAAKw3I,qBAAsB,CAC7FzI,aAAc/uI,KAAK+uI,aACnB0I,WAAYpjH,EAAKqjH,eAAehsH,IAChCtO,MAAOA,EACPyxH,aAAc7uI,KAAK23I,eAAerzG,KAAKtkC,MACvC0a,SAAU1a,KAAK43I,mBAAmB5H,MAGtC,OADAhwI,KAAK63I,uBAAuB7H,EAAWhnH,GAChCA,EAEXwuH,qBACI,IAAIM,GAAiBj2G,EAAAA,EAAAA,GAAE,SACnBsyG,EAAmBn0I,KAAK4vI,oBAC5B,MAAO,CACHz0C,aAAcn7F,KAAKuiC,OAAO,gBAC1B1F,OAAQi7G,EACRlJ,YAAa5uI,KAAKuiC,OAAO,eACzB6yD,cAAep1F,KAAKuiC,OAAO,iBAC3BnzB,SAAUpP,KAAKuiC,OAAO,YACtBo0G,cAAe32I,KAAKuiC,OAAO,iBAC3B15B,kBAAmB7I,KAAKuiC,OAAO,qBAC/Bv8B,mBAAoBhG,KAAKuiC,OAAO,sBAChCj6B,kBAAmBtI,KAAKuiC,OAAO,qBAC/BnpB,UAAWpZ,KAAKuiC,OAAO,aACvBw1G,gBAAiB/3I,KAAKuiC,OAAO,mBAC7BntB,YAAapV,KAAKuiC,OAAO,eACzBy1G,aAAch4I,KAAKuiC,OAAO,gBAC1B01G,aAAcj4I,KAAKuiC,OAAO,gBAC1B21G,UAAWl4I,KAAKuiC,OAAO,aACvB41G,qBAAsB7xG,IACbA,EAAER,UAAUvD,OAAO,YAGxBviC,KAAKuiC,OAAO,iBAAkB+D,EAAER,UAAUvD,OAAO,oBAErD32B,mBAAoB5L,KAAKo4I,qCAAqC9zG,KAAKtkC,MACnEkqD,YAAalqD,KAAKq4I,8BAA8B/zG,KAAKtkC,MACrDmqF,eAAgBnqF,KAAKs4I,iCAAiCh0G,KAAKtkC,MAC3Du4I,gBAAiBpE,EAAmB,KAAOn0I,KAAKw4I,mBAAmBl0G,KAAKtkC,KAAMsyI,IAC9EmG,eAAgBtE,EAAmB,KAAOn0I,KAAKw4I,mBAAmBl0G,KAAKtkC,KAAMqyI,IAC7EqG,mBAAoB14I,KAAKw4I,mBAAmBl0G,KAAKtkC,KAAMm0I,EAAmB7B,GAAqB,MAC/FqG,oBAAqBxE,EAAmBn0I,KAAKw4I,mBAAmBl0G,KAAKtkC,KAAMqyI,IAAsB,MAGzGuG,2BACI,IAAK54I,KAAK64I,mBACN,MAAO,UAEX,IAAIpyE,EAAczmE,KAAKuiC,OAAO,wBAC9B,OAAOpS,EAAAA,EAAAA,IAASs2C,GAAeA,EAAYn3D,KAAOm3D,EAEtD+xE,mBAAmB73H,GACf,IAAIszH,EAASj0I,KAAKk0I,qBACd34D,EAAY04D,EAAOrsH,OACnBkxH,EAAe7E,EAAOrwH,OAAO,IAAIkE,OAAOypH,KAA8BrsG,GAAG,GACzE64C,EAAYk2D,EAAO7pH,MAAM0uH,GAC7B94I,KAAKmwI,aAAanwI,KAAKq1I,iBACvBt3D,GAAap9D,IAAc2xH,IAAsB,EAAI,EACjDv0D,GAAaxC,EACbwC,EAAY,EACLA,EAAY,IACnBA,EAAYxC,EAAY,GAE5B,IAAIw9D,EAAW9E,EAAO/uG,GAAG64C,GACzB/9E,KAAKuiC,OAAO,kBAAkBmR,EAAAA,GAAAA,GAAiBqlG,IAEnDX,qCAAqC3jH,GACjC,IAAI2+G,EAAe3+G,EAAKukH,WAAWpxH,QAAU6M,EAAKukH,WAAW,GACzD9I,EAAUxB,GAAAA,YAAoBj6G,EAAK0M,SACnCv1B,EAAqB5L,KAAKyoC,SAAS78B,mBACvCA,EAAmB6oB,GACnB2+G,GAAgBpzI,KAAKi5I,0BAA0B7F,EAAa,GAAIlD,GAChElwI,KAAKk5I,sBACLl5I,KAAKwpC,8BAA8B,eAAgB4pG,GAEvD6F,0BAA0BhyH,EAAMkyH,GAC5B,IAAIC,GAAoB/tH,UAAUzD,QAClCwJ,EAAAA,EAAAA,IAAKpxB,KAAK2zI,WAAW,CAACvpH,EAAO8lH,KACzB,IAAIE,EAAWF,EAAQZ,iBACnB+J,GAAejJ,EAASzpG,GAAGwyG,GAAiBA,EAAc7J,kBAC1DgK,EAAgBlJ,EAAS7uG,KAAK,IAAIzZ,OAAO9nB,KAAKu5I,uBAClD,GAAIF,GAAeC,EAAc1xH,QAAUwxH,EAAkB,CACzDE,EAAct3G,YAAYhiC,KAAKu5I,sBAC/B,IAAIC,EAAmBx5I,KAAKy5I,aAAaH,GACrCE,IACAA,EAAiBvmD,UAAW,GAEhCi9C,EAAQwJ,0BAIpBR,sBACI,IAAIS,EAAoB35I,KAAK0gC,WAAWa,KAAK,IAAIzZ,OAAOwpH,KAAgC3tF,QAAQ9S,WAAWA,WAAWjtB,OAAO,IAAIkE,OAAO9nB,KAAKu5I,uBAC7I,GAAII,EAAkB/xH,OAAQ,CAC1B,IAAIgyH,EAAuB55I,KAAKy5I,aAAaE,GAC7CC,EAAqB3mD,UAAW,EAChC0mD,EAAkB33G,YAAYhiC,KAAKu5I,uBAG3ClB,8BAA8B/xG,GAC1BtmC,KAAKyoC,SAASyhB,YAAY5jB,GAE9BgyG,iCAAiChyG,GAC7BtmC,KAAKyoC,SAAS0hD,eAAe7jD,GAEjCuxG,uBAAuB7H,EAAWE,GAC9B,IAAI2J,EAAyB3J,EAAQe,oBACjC6I,EAAWD,EAAuBt4G,KAAK,IAAIzZ,OAAO2mH,KAClDsL,GAAwBhlE,EAAAA,GAAAA,IAAailE,GAAAA,EAAeh6I,KAAKgrC,KAAO,YACpEklG,EAAQ3tG,OAAO,CACXhoB,UAAWva,KAAKi6I,yBAAyB31G,KAAKtkC,KAAMgwI,EAAWE,GAC/D11H,QAASxa,KAAKk6I,uBAAuB51G,KAAKtkC,KAAMgwI,EAAWE,GAC3D/1H,SAAUna,KAAKm6I,wBAAwB71G,KAAKtkC,KAAMgwI,EAAWE,GAC7Dh2H,SAAUla,KAAKo6I,wBAAwB91G,KAAKtkC,KAAMgwI,EAAWE,MAEjE9+G,EAAAA,EAAAA,IAAK0oH,GAAU,CAAC1vH,EAAO8lH,KACnBtpG,EAAAA,EAAAA,IAAiBspG,EAAS6J,GAC1BnzG,EAAAA,EAAAA,GAAgBspG,EAAS6J,EAAuB,KAAM/5I,KAAKq6I,0BAA0B/1G,KAAKtkC,KAAMgwI,OAGxGiK,yBAAyBjK,EAAWE,GAChC,IAAIoK,EAAUtK,EAAUn/F,SAAS,IAAI/oB,OAAO2pH,KAC5CzxI,KAAKyoC,SAASqqG,iBAAiB,CAC3B7C,UAAUv8F,EAAAA,GAAAA,GAAiBs8F,GAC3BE,QAASA,IAEboK,EAAQ7rI,OACRuhI,EAAUluG,SAASyvG,IAEvB2I,uBAAuBlK,EAAWE,GAC9BlwI,KAAKyoC,SAASsqG,eAAe,CACzB9C,UAAUv8F,EAAAA,GAAAA,GAAiBs8F,GAC3BE,QAASA,IAGjBiK,wBAAwBnK,EAAWE,EAASqK,GACxC,IAAID,EAAUtK,EAAUn/F,SAAS,IAAI/oB,OAAO2pH,KACxCh9G,EAAO8lH,EACX9lH,EAAKw7G,UAAWv8F,EAAAA,GAAAA,GAAiBs8F,GACjCv7G,EAAKy7G,QAAUA,EACflwI,KAAKyoC,SAASuqG,gBAAgBv+G,GAC9B8lH,EAAY9lH,EACP8lH,EAAU3kI,SACP5V,KAAKq1I,kBAAoBnF,IACzBlwI,KAAKq1I,gBAAkB,MAE3BiF,EAAQ9rI,OACRwhI,EAAUhuG,YAAYuvG,KAG9B6I,wBAAwBpK,EAAWE,GAC/BlwI,KAAKyoC,SAASwqG,gBAAgB,CAC1BhD,UAAUv8F,EAAAA,GAAAA,GAAiBs8F,GAC3BE,QAASA,IAGjBmK,0BAA0BrK,EAAWuK,GACjC,IAAI19G,GAASgF,EAAAA,EAAAA,GAAE04G,EAAUC,eAAe/7E,QAAQ,IAAI32C,OAAO0pH,KAAwB,GAC/EzxD,EAAc//E,KAAKy6I,yBAAyBzK,GAAWiB,oBAAoB,GAC3EjxI,KAAKuiC,OAAO,4BAA8B1F,IAAWkjD,IACrD//E,KAAK23I,iBACL3kG,WAAWhzC,KAAK06I,yBAAyBp2G,KAAKtkC,MAAOA,KAAK82I,UAAU,UAG5E4D,2BACI,GAAK16I,KAAKq1I,gBAAV,CAGA,IAAIsF,GAAoB94G,EAAAA,EAAAA,GAAE7hC,KAAKq1I,gBAAgB30G,WAAW+5B,SAAS7qB,SAAS+hG,IACxEiJ,EAAuB56I,KAAKq1I,gBAAgBpE,oBAAoB1vG,KAAK,IAAIzZ,OAAO6pH,KAAuB/pH,OACvGizH,EAA4B76I,KAAKq1I,gBAAgBpE,oBAAoBtxG,IAAI,GAAGigB,cAAc,UACzFi7F,GAA8BD,GAAyBD,GACxD36I,KAAKq1I,gBAAgB7mI,QAG7BisI,yBAAyBzK,GACrB,IAAKA,EACD,OAAO,EAEX,IAAII,EAAWJ,EAAUn/F,SAAS,IAAI/oB,OAAO0pH,KAC7C,OAAOpB,EAASxoH,QAAU8mH,GAAAA,YAAoB0B,GAElDwH,mBAAmB5H,GACf,IAAI8K,EAAmB96I,KAAK4vI,oBACxB+C,EAAmB3yI,KAAKuiC,OAAO,oBAAoBlW,cACnD/f,EAAatM,KAAKuiC,OAAO,cACzBw4G,EAAkB,CAClBl4H,UAAW,OACXE,GAAIitH,GAER,OAAQ2C,GACJ,IAAK,YACDoI,EAAgBr4H,GAAK,WACrBq4H,EAAgBj4H,GAAKg4H,EAAmB,cAAgB,YACxD,MACJ,IAAK,gBACDC,EAAgBr4H,GAAKo4H,EAAmB,cAAgB,YACxDC,EAAgBj4H,GAAK,WACrB,MACJ,QACQg4H,GACAC,EAAgBr4H,GAAKpW,EAAa,eAAiB,cACnDyuI,EAAgBj4H,GAAKxW,EAAa,YAAc,aAEhDyuI,EAAgBr4H,GAAKpW,EAAa,WAAa,YAC/CyuI,EAAgBj4H,GAAKxW,EAAa,YAAc,YAG5D,OAAOyuI,EAEX1D,qBAAqB7hE,IACjB3zC,EAAAA,EAAAA,GAAE,SAASE,SAASyzC,GAAO1zC,SAAS2vG,IAAwCjjI,OAEhFwsI,wBAAwB10G,GACpB,IAAI2D,GAAUpI,EAAAA,EAAAA,GAAEyE,EAAEzJ,QACdo+G,EAAehxG,EAAQlD,QAAQ/mC,KAAKqzI,iBACpC4H,EAAarrG,SAAS,4BACtB5vC,KAAKuiC,OAAO,iBAAkB,MAGlCosG,MAAMqM,wBAAwB10G,GAElCupG,mBAAmBvpG,GACf,IAAI40G,GAAqBnmE,EAAAA,GAAAA,IAAa1hC,GAAAA,EAAAA,KAAoBrzC,KAAKgrC,MAC3DwqC,EAAQx1E,KAAKm7I,2BAA2B70G,GACxCjS,EAAOr0B,KAAK+uI,aAAaqM,cAAcp7I,KAAKy5I,aAAajkE,IACzD6lE,GAAoB5qH,EAAAA,EAAAA,IAAU6V,EAAEx1B,UAAY,IAAMw1B,EAAEx1B,WAAY2f,EAAAA,EAAAA,IAAU6V,EAAEx1B,UAAY,IAAMw1B,EAAEg1G,MACpG,IAAIt7I,KAAKu7I,gBAAgB/lE,GAIzB,GADA5uC,EAAAA,EAAAA,IAAiB4uC,EAAO0lE,GACnBl7I,KAAKw7I,aAAannH,IAIvB,GAAI,YAAcr0B,KAAK44I,6BAA+ByC,EAAmB,CACrE,IAAInL,EAAUlwI,KAAKy7I,qBAAqBjmE,GACxCx1E,KAAK23I,iBACAzH,EAAQ7X,qBACTzxF,EAAAA,EAAAA,GAAgB4uC,EAAO0lE,EAAoBl7I,KAAK07I,sBAAsBp3G,KAAKtkC,OAC3EA,KAAK27I,kBAAoB37I,KAAK82I,UAAU,eAR5C92I,KAAK27I,kBAAoB3oG,WAAWhzC,KAAK06I,yBAAyBp2G,KAAKtkC,MAAOA,KAAK82I,UAAU,SAYrGpH,iBAAiBkM,GACb,IAAIpmE,EAAQx1E,KAAKm7I,2BAA2BS,GACxCpB,GAAgB34G,EAAAA,EAAAA,GAAE+5G,EAASpB,eAC/B7L,MAAMe,iBAAiBkM,GACvB57I,KAAK23I,iBACD33I,KAAKu7I,gBAAgB/lE,IAGrBglE,EAAc5qG,SAAS4+F,KAGvBxuI,KAAKuiC,OAAO,6BAA+Bi4G,EAAc5qG,SAAS0hG,MAClEtxI,KAAK67I,kBAAoB7oG,YAAW,KAChChzC,KAAK06I,6BACN16I,KAAK82I,UAAU,UAG1BhB,sBACI,QAAK91I,KAAKq1I,kBAGVr1I,KAAKmwI,aAAanwI,KAAKq1I,kBAChB,GAEXZ,aAAaqH,GACT,IAAI5L,EAAUlwI,KAAKy7I,qBAAqBK,GACpC97I,KAAKq1I,kBAAoBnF,GACzBlwI,KAAK81I,sBAEL5F,IACAlwI,KAAK23I,iBACLzH,EAAQzhI,OACRzO,KAAKuiC,OAAO,iBAAkB2tG,EAAQ3tG,OAAO,oBAEjDviC,KAAKq1I,gBAAkBnF,EACvBlwI,KAAK+7I,iBAAmBD,EAE5B3L,aAAaD,GACTA,GAAWA,EAAQ1hI,OACfxO,KAAKq1I,kBAAoBnF,IACzBlwI,KAAKq1I,gBAAkB,MAE3Br1I,KAAK+7I,iBAAmB,KAE5BL,sBAAsBp1G,GAClB,IAAIA,EAAE01G,WAAY11G,EAAE01G,SAASp0H,OAA7B,CAGA,IAAI4tD,GAAQ3zC,EAAAA,EAAAA,GAAEyE,EAAE4M,gBACXziB,EAAAA,EAAAA,IAAUzwB,KAAK27I,qBAGpB37I,KAAK23I,iBACL33I,KAAK27I,kBAAoB3oG,YAAW,KAChC,IAAIk9F,EAAUlwI,KAAKy7I,qBAAqBjmE,GACpC06D,IAAYA,EAAQ7X,oBACpBr4H,KAAKy0I,aAAaj/D,KAEvBx1E,KAAK82I,UAAU,WAEtBa,iBACI1kG,aAAajzC,KAAK67I,mBAClB5oG,aAAajzC,KAAK27I,mBAEtBF,qBAAqBK,EAAc1xF,GAC/B,IAAI8lF,EAAUlwI,KAAKy6I,yBAAyBqB,GAC5C,GAAI5L,EACA,OAAOA,EAEP9lF,EAAWA,GAAYpqD,KAAKy5I,aAAaqC,GACzC,IAAIznH,EAAOr0B,KAAK+uI,aAAaqM,cAAchxF,GAC3C,OAAOpqD,KAAKw7I,aAAannH,IAASr0B,KAAKk3I,oBAAoB7iH,EAAMynH,GAGzEG,gCAAgCt8D,GAC5B,IAAIlrD,EAAOkrD,EAAWlrD,KAAK7M,QAAU+3D,EAAWlrD,KAAK,GACrD,GAAKA,IAAQz0B,KAAKk8I,gBAAgBznH,EAAK21B,UAAvC,CAGA,IAAI0xF,GAAej6G,EAAAA,EAAAA,GAAEpN,EAAK+mE,aACtBk4C,EAAiB1zI,KAAKy7I,qBAAqBK,EAAcrnH,EAAK21B,UAElE,GADApqD,KAAKm8I,2BAA2Bx8D,GAC5B3/E,KAAKq1I,gBAAiB,CACtB,GAAIr1I,KAAKq1I,kBAAoB3B,EAIzB,YAHI,YAAc1zI,KAAKuiC,OAAO,yBAC1BviC,KAAKmwI,aAAanwI,KAAKq1I,kBAI3Br1I,KAAKmwI,aAAanwI,KAAKq1I,iBAG1B3B,IAGAA,EAAerb,oBAChBr4H,KAAKy0I,aAAaqH,KAI1BlvD,eAAen4D,GACX,GAAI+9G,GAAQnoH,QAAQoK,EAAKnlB,OAAS,EAC9BtP,KAAKo1I,oBAGT,OAAQ3gH,EAAKnlB,MACT,IAAK,cACL,IAAK,mBACDtP,KAAK8rC,cACL,MACJ,IAAK,uBACL,IAAK,0BACD,MACJ,IAAK,kBACD9rC,KAAKo8I,sBAAsB3nH,EAAKnlB,KAAMmlB,EAAKn0B,OAC3C,MACJ,IAAK,oBACDm0B,EAAKn0B,MAAQN,KAAKu1I,kBAAoBv1I,KAAKg2I,oBAC3C,MACJ,IAAK,QACGh2I,KAAK+0I,yBACL/0I,KAAK+1I,UAAUxzG,OAAO9N,EAAKnlB,KAAMmlB,EAAKn0B,OACtCN,KAAKgxI,SAASzuG,OAAO9N,EAAKnlB,KAAMmlB,EAAKn0B,QAEzCquI,MAAM/hD,eAAen4D,GACrBz0B,KAAK6sF,oBACL,MACJ,IAAK,YACG7sF,KAAK+0I,wBACL/0I,KAAK+1I,UAAUxzG,OAAO,qBAAsB9N,EAAKn0B,OAErDquI,MAAM/hD,eAAen4D,GACrB,MACJ,SACQz0B,KAAK+0I,wBAA2BtgH,EAAKnlB,OAASmlB,EAAKqgC,UAAY,UAAYrgC,EAAKnlB,MAChFtP,KAAK+1I,UAAUxzG,OAAO9N,EAAKqgC,SAAUrgC,EAAKn0B,OAE9CquI,MAAM/hD,eAAen4D,IAGjC2nH,sBAAsB9sI,EAAMhP,IACxB8wB,EAAAA,EAAAA,IAAKpxB,KAAK2zI,WAAW,CAACvpH,EAAO8lH,KACzBA,EAAQ3tG,OAAOjzB,EAAMhP,MAG7B45F,WAAWsB,GACPx7F,KAAKmwI,aAAanwI,KAAKq1I,iBACvB1G,MAAMz0C,WAAWsB,GAErBrB,aAAaqB,GACTx7F,KAAKmwI,aAAanwI,KAAKq1I,iBACvB1G,MAAMz0C,WAAWsB,KAGzBrO,EAAAA,EAAAA,GAAkB,SAAUslD,IAC5B,UCzvBA,MC0BI4J,GAAkB,CAClB,IAAK,0BACL,KAAM,8BACN,IAAK,wBACL,KAAM,8BACN,IAAK,2BACL,KAAM,iCACNruI,QAAS,2BACT2nB,YAAa,gCACbta,SAAU,4BACVma,WAAY,+BACZC,SAAU,6BACVra,QAAS,4BAETkhI,GAAwB,CACxB,IAAK,QACL,KAAM,WACN,IAAK,WACL,KAAM,kBACN,IAAK,cACL,KAAM,qBACN9mH,WAAY,aACZna,SAAU,WACVsa,YAAa,cACbF,SAAU,WACVra,QAAS,WAETmhI,GAAoB,IACpBC,GAAqC,EACrCtqG,GAAmB,aACnBuqG,GAA6B,uBAC7BC,GAA2B,qBAC3BC,GAAyB,mBACzBC,GAAa,UACbC,GAAyB,sBACzBC,GAAyB,sBACzBtsD,GAAoB,iBACpBusD,GAAc,iBACdC,GAAqB,kBACrBC,GAA0B,uBAC1BC,GAAgB,aAChBz3F,GAA4B,yBAC5B03F,GAA6B,0BAC7BC,GAAwB,qBACxBlrC,GAAyB,6BACzBmrC,GAA+B,CAAC,OAAQ,WAAY,UAExD,SAASC,GAAyB11G,GAC9B,MAAO,YAAcA,EAAKrF,OAAO,yBAErC,IAAIg7G,GAAqC,WACrC,IAAIxpB,EAAoB,SAASypB,GAC7B,IAAI5mD,EAAU4mD,GAAoBA,EAAiB3sG,WAC/C4sG,EAAiB7mD,GAAWA,EAAQlnF,KAAK,gBACzCo3B,EAAS22G,GAAkBA,EAAe71H,QAAUgvE,EAAQlnF,KAAK+tI,EAAe,IACpF,GAAI32G,aAAkB42G,GAAAA,EAClB,OAAO52G,GAGX62G,EAA4B,SAAS/1G,EAAMz5B,GAC3C,IAAI6a,EAAS,GACT40H,EAAW,GACX31I,EAAc41I,EAAqBj2G,EAAMz5B,GACzC2vI,EAAgB5uG,EAAAA,yBAAuC/gC,EAAQ,aAUnE,OATIpH,MAAM2iB,QAAQzhB,IACd+gB,EAASkmB,EAAAA,YAA0BjnC,EAAY,GAAI61I,GACnDF,EAAW1uG,EAAAA,YAA0BjnC,EAAY,GAAI61I,GACjD,KAAOF,IACP50H,GAAU,MAAQ40H,KAEfntH,EAAAA,EAAAA,IAAUxoB,KACjB+gB,EAASkmB,EAAAA,YAA0BjnC,EAAa61I,IAE7C90H,GAGX,SAAS60H,EAAqBj2G,EAAMz5B,GAChC,GAAIA,EACA,OAAOmvI,GAAyB11G,SAAS,IAAWz5B,EAAO08C,oBAAsB18C,EAAO08C,oBAAsB18C,EAAOlG,YAG7H,IAAI81I,EAAmC,SAASn2G,EAAMz5B,GAClD,GAAIA,EACA,OAAOmvI,GAAyB11G,SAAS,IAAWz5B,EAAO6vI,gCAAkC7vI,EAAO6vI,gCAAkC7vI,EAAO2E,yBAGjJy8E,EAAiB,SAAS3nD,EAAMpI,EAAag+G,GAC7C,IAAIrvI,EAASy5B,EAAKiP,mBAAmB6J,aAAalhB,GAC9Cv3B,EAAc41I,EAAqBj2G,EAAMz5B,GACzC8vI,EAAgBT,EAAiBz2G,QAAQ,IAAMa,EAAKvG,gBAAgBo7G,KAA6B70H,OACjGs2H,EAAeV,EAAiB5tG,SAAShI,EAAKvG,gBAAgBq7G,KAClE,OAAIz0I,GAAelB,MAAM2iB,QAAQzhB,IAAgB,YAAc81I,EAAiCn2G,EAAMz5B,GAC9F+vI,EACOj2I,EAAY,GAEZA,EAAY,IAGnBg2I,GAAiB,SAASh2I,EAAakG,GAC3C,QAAIA,GAAUkvI,GAA6BhzH,QAAQlc,EAAOqD,WAAa,GAAKzK,MAAM2iB,QAAQzhB,UAGnF,IAAWA,EAJG,CAKvBA,EAAakG,GAAUlG,EAAc,MAEvCk2I,EAAoB,SAASv2G,EAAMtmB,GACnC,IAAIhhB,EAAQ,KAAOghB,EAAQhhB,MAAQ,KAAOghB,EAAQhhB,MAC9Ck9I,EAAmBl8H,EAAQhI,UAC3BnL,EAASy5B,EAAKiP,mBAAmB6J,aAAap/B,EAAQnT,OAAOic,OAC7DniB,EAAcsnF,EAAe3nD,EAAMz5B,EAAOic,MAAOozH,GACrD,IAAK/sH,EAAAA,EAAAA,IAAUxoB,KAAiBwoB,EAAAA,EAAAA,IAAUnwB,GAA1C,CAGAsnC,EAAKw2G,2BAA2BC,aAAab,EAAkBv1I,IAAgB3H,GAC/E,IAAI20D,EAAmBqoF,GAAyB11G,GAAQ,sBAAwB,cAC5E02G,EAAkB,SAAS12G,EAAM3/B,EAAakG,EAAQqvI,GACtD,GAAI,YAAcO,EAAiCn2G,EAAMz5B,GAAS,CAC9D,IAAIowI,EAAoBV,EAAqBj2G,EAAMz5B,GACnD,OAAIqvI,EAAiB5tG,SAAShI,EAAKvG,gBAAgBq7G,KACxC,CAACz0I,EAAalB,MAAM2iB,QAAQ60H,GAAqBA,EAAkB,QAAK,GAExE,CAACx3I,MAAM2iB,QAAQ60H,GAAqBA,EAAkB,GAAKA,EAAmBt2I,GAG7F,OAAOA,EATW,CAUpB2/B,EAAMtnC,EAAO6N,EAAQqvI,GACnBgB,EAAY,YAAcT,EAAiCn2G,EAAMz5B,GACjE0jD,EAAevwC,EAAQuwC,cAAgB2sF,GAAaz3I,MAAM2iB,QAAQ40H,IAAoBA,EAAgBj0H,aAAQ,IAAW,EAC7Hud,EAAKiP,mBAAmB6J,aAAavyC,EAAOic,MAAO6qC,EAAkBqpF,EAAiBzsF,KAE1F,MAAO,CACH4sF,mBAAoB,SAAStwI,EAAQqvI,GACjC,IAAI12G,EAASitF,EAAkBypB,GAC/B12G,GAAUA,EAAOvE,OAAO,QAASgtD,EAAevvF,KAAMmO,EAAOic,MAAOozH,KAExEpgG,qBAAsB,SAAS9W,GAC3B,IACIoK,EACA8sG,EACAkB,EACAC,EAJAthG,EAAc/W,EAAE+W,YAKpB,GAAInO,EAAAA,aAA2BmO,EAAa,CAAC,cAAe,sBAAuB,0BAA2B,0CAAuC,IAAW/W,EAAE9G,YAAlK,CACI,IAAIhsB,EAAexT,KAAK62C,mBAAmBc,gBAAgBrR,EAAE9G,aACzDrxB,EAASnO,KAAK62C,mBAAmB6J,aAAapa,EAAE9G,aAGpD,GAFAkR,EAAQ1wC,KAAKigD,gBAAgBjgD,KAAKmhC,UAAUI,KAAK,IAAMvhC,KAAKqhC,gBAAgB6Q,KAAmB9nB,QAAS5W,KAAiBquB,EAAAA,EAAAA,KACzH27G,EAAmB9sG,EAAMnP,KAAK,IAAMu7G,IAAwBn5F,QACxDtG,EAAYp1C,aAAeo1C,EAAYwN,oBAAqB,CAC5D7qD,KAAKy+I,mBAAmBtwI,EAAQqvI,GAChC,IAAIoB,EAAkBluG,EAAMnP,KAAK,IAAMvhC,KAAKqhC,gBAAgBo7G,KAA6B/sI,KAAK,aAC1FkvI,IACAF,EAAuBE,EAAgB13F,WAAW3lB,KAAK,IAAMu7G,IAC7D98I,KAAKy+I,mBAAmBtwI,EAAQuwI,EAAqB/6F,SACrD3jD,KAAKy+I,mBAAmBtwI,EAAQuwI,EAAqBl9G,SAEpDo9G,GAAoBA,EAAgBr8G,OAAO,YAC5CviC,KAAK6+I,0BAA0BnuG,EAAOitG,EAA0B39I,KAAMmO,KAG1EkvC,EAAYvqC,yBAA2BuqC,EAAY2gG,kCAC/CxqI,GAAgB,GAAKrF,IACrBwwI,EAAQjuG,EAAMnP,KAAK,IAAMq7G,IACrB+B,EAAM/2H,SACN5nB,KAAK8+I,8BAA8BH,EAAOxwI,EAAQqvI,GAC9C,YAAcO,EAAiC/9I,KAAMmO,GACrDnO,KAAK++I,0BAA0BruG,EAAOviC,GAC/BqvI,EAAiBj8G,KAAK,IAAM47G,IAA4Bv1H,SAC/D5nB,KAAKg/I,cAAcxB,EAAkBx9I,KAAKi/I,kBAAkBzB,EAAkBrvI,IAC9EnO,KAAKk/I,2BAOzBl/I,KAAKs6B,SAASgM,IAElB4F,YAAa,WACTlsC,KAAKm/I,4BAA8B,KACnCn/I,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9B8gB,YAAa,WACTnsC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1BrrB,KAAKm/I,6BAA+Bn/I,KAAKm/I,4BAA4B91B,WAEzE+1B,mBAAoB,WAChB,OAAOp/I,KAAKqoD,kBAAkBroD,KAAKuiC,OAAO,eAE9Cd,UAAW,WACP,OAAOzhC,KAAKs6B,YAAct6B,KAAKo/I,sBAEnCn2G,KAAM,WACFjpC,KAAKs6B,WACLt6B,KAAKo+I,2BAA6Bp+I,KAAKqqC,cAAc,gBAEzDg1G,wBAAyB,SAAS3uG,EAAOviC,GACrC,IAAIy5B,EAAO5nC,KACPorG,EAAa,GACboyC,EAAmB9sG,EAAMnP,KAAK,wBAC9B+9G,GAAWz9G,EAAAA,EAAAA,GAAE,SAASC,SAAS8F,EAAKvG,gBAAgBo7G,KAA6B16G,SAAS2O,GAC9F,OAAO9I,EAAKpF,iBAAiB88G,EAAUxnB,GAAAA,EAAS,CAC5CpvH,OAAQ,OACRmS,SAAS,EACTG,WAAW,EACX1S,mBAAmB,EACnB+Q,qBAAqB,EACrBG,0BAA0B,EAC1BshF,4CAA4C,EAC5C1hF,WAAW,EACXsB,SAAU,CACNoI,GAAI,MACJJ,GAAI,MACJK,GAAIy6H,EAAiB51H,QAAU41H,GAAoB9sG,EACnD1tB,OAAQ,QAEZzJ,gBAAiB,SAASo/D,GACtB,IAAIjnE,EACAklF,GAAU/0D,EAAAA,EAAAA,GAAE,SAASC,SAASg7G,GAAyB,IAAMl1G,EAAKvG,gBAAgBq7G,KAA2B36G,SAAS42C,GA2B1H,OA1BAxqE,EAASy5B,EAAKiP,mBAAmB6J,aAAavyC,EAAOic,OACrD1Y,EAAgBk2B,EAAKq3G,kBAAkBroD,EAASzoF,GAChDuD,EAAc05F,WAAaA,EAC3BxjE,EAAKo3G,cAAcpoD,EAASllF,GAC5Bk1B,EAAAA,EAAAA,GAAgBgwD,EAAQr1D,KAAK2wE,IAAyB,WAAY,SAAS5rE,GACvE,IAAIi5G,EAAe7uG,EAAMnP,KAAK,cAAcqY,IAAItT,EAAEzJ,QAAQ8mB,QACtD,SAAUb,EAAAA,GAAAA,IAAiBxc,IAAMA,EAAEygB,WACnCzgB,EAAE+P,iBACFzO,EAAKs3G,mBACAK,EAAa33H,SACd23H,EAAe7uG,EAAM8uG,OAAOj+G,KAAK,cAAcC,QAEnDoF,EAAAA,EAAAA,QAAqB24G,EAAc,aAG3C3oD,GAAU/0D,EAAAA,EAAAA,GAAE,SAASC,SAASg7G,GAAyB,IAAMl1G,EAAKvG,gBAAgBs7G,KAAyB56G,SAAS42C,GACpHjnE,EAAgBk2B,EAAKq3G,kBAAkBroD,EAASzoF,GAChDuD,EAAc05F,WAAaA,EAC3BxjE,EAAKo3G,cAAcpoD,EAASllF,GAC5Bk1B,EAAAA,EAAAA,GAAgBgwD,EAAQr1D,KAAK2wE,IAAyB,WAAY,SAAS5rE,GACnE,SAAUwc,EAAAA,GAAAA,IAAiBxc,IAAOA,EAAEygB,WACpCzgB,EAAE+P,iBACFzO,EAAKs3G,mBACLt4G,EAAAA,EAAAA,QAAqB8J,EAAM4wC,OAAO//C,KAAK,cAAcoiB,QAAS,cAG/D9hB,EAAAA,EAAAA,GAAE82C,GAAgB72C,SAAS8F,EAAKH,4BAE3CjtB,QAAS,SAAS8rB,GACd,IAAIswD,EAAUtwD,EAAER,UAAUohB,WAAW3lB,KAAK,IAAMu7G,IAAwBn5F,QACxE/c,EAAAA,EAAAA,QAAqBgwD,EAAQr1D,KAAK2wE,IAAyB,UAE/Dh4F,SAAU,WACN/L,EAASy5B,EAAKiP,mBAAmB6J,aAAavyC,EAAOic,OACrDsmB,EAAMnP,KAAK,IAAMq7G,IAAYl1G,SAAS5F,SAAS+6G,IAC3C,YAAckB,EAAiCn2G,EAAMz5B,KACrDy5B,EAAKi3G,0BAA0BnuG,EAAOitG,EAA0B/1G,EAAMz5B,IACtEy5B,EAAK9B,UAAUohD,wBAK/Bu4D,0BAA2B,SAASn+H,GAChC,IAAIs9H,EAAkB5+I,KAAKm/I,4BAC3BP,GAAmBA,EAAgBr8G,OAAOjhB,IAE9Co+H,iBAAkB,SAAShvG,EAAOviC,GAC9B,IAAImxI,EAAW5uG,EAAMG,SAAS,IAAM7wC,KAAKqhC,gBAAgBo7G,KACrDmC,EAAkBU,EAAS13H,QAAU03H,EAAS5vI,KAAK,cAClDkvI,GAAmBzwI,IACpBywI,EAAkB5+I,KAAKq/I,wBAAwB3uG,EAAOviC,IAErDywI,EAAgBr8G,OAAO,aACxBviC,KAAKm/I,6BAA+Bn/I,KAAKm/I,4BAA4B3wI,OACrExO,KAAKm/I,4BAA8BP,EACnC5+I,KAAKy/I,0BAA0B,CAC3BjyI,OAAO+zC,EAAAA,EAAAA,IAAc7Q,GAAO,GAAQ8rG,KAExCx8I,KAAKm/I,6BAA+Bn/I,KAAKm/I,4BAA4B1wI,SAG7EywI,iBAAkB,WACd,IAAIN,EAAkB5+I,KAAKm/I,4BAC3BP,GAAmBA,EAAgBpwI,QAEvCmxI,8BAA+B,WAC3B,OAAO3/I,KAAKm/I,6BAEhBvpG,WAAY,SAASjQ,GACjB,IAAI2Q,EAAOt2C,KAAKs6B,SAASqL,GAOzB,MANI,WAAaA,EAAI7B,UACjBwS,EAAKxU,SAAS9hC,KAAKqhC,gBAAgB6Q,KAC9BlyC,KAAKuiC,OAAO,gCACbqE,EAAAA,EAAAA,GAAgB0P,EAAM,WAAW7L,GAASuY,GAAW,YAAahjD,KAAMyqC,MAGzE6L,GAEXsE,SAAU,WACN,IAAI5xB,EAAShpB,KAAKs6B,WAMlB,OALIt6B,KAAKo/I,sBACLp2H,EAAOX,KAAK,CACRyb,QAAS,WAGV9a,GAEX42H,kBAAmB,SAAS3rG,EAAM3yB,GAC9B,IAAInT,EAASmT,EAAQnT,OACjBuiC,GAAQ7O,EAAAA,EAAAA,GAAEoS,GACVj0C,KAAK8lC,UAAUvD,OAAO,sBACtBviC,KAAKgmC,QAAQ,cAAe73B,EAAOsnC,SAAU/E,GAEjD1wC,KAAKgmC,QAAQ,QAASyD,EAAAA,EAAAA,OAA2B,6BAA8BiH,GAC/EA,EAAM5O,SAAS0uD,IACf,IAAI9wD,GAAamC,EAAAA,EAAAA,GAAE,SAASE,SAAS2O,GACjC8sG,GAAmB37G,EAAAA,EAAAA,GAAE,SAASC,SAASg7G,IAAwB/6G,SAASrC,GAC5E,GAAI,YAAcq+G,EAAiC/9I,KAAMmO,GACrDnO,KAAK++I,0BAA0BruG,EAAOviC,OACnC,CACH,IAAIuD,EAAgB1R,KAAKi/I,kBAAkBzB,EAAkBrvI,GAC7DnO,KAAKg/I,cAAcxB,EAAkB9rI,GAEzC,IAAIzB,EAAY9B,EAAO8B,UACnBA,GAAa,WAAaA,GAC1BygC,EAAMnP,KAAK2wE,IAAwBvuD,QAAQxe,IAAI,YAAah3B,EAAO8B,WAEnE9B,EAAO0D,kBAAoB1D,EAAO0D,iBAAiB+V,QACnD5nB,KAAK6/I,8BAA8BngH,EAAYvxB,EAAQqvI,IAG/DnhG,mBAAoB,SAAS3L,EAAOpvB,GAChC,IAAIsmB,EAAO5nC,KACPmO,EAASmT,EAAQnT,OACrB,GAAI,WAAamT,EAAQwiB,QACrB,GAAI31B,EAAOk5B,QACPqJ,EAAMxvB,KAAK,eACR,GAAI/S,EAAOiC,eAId,YAHAw3B,EAAKyR,eAAe3I,EAAO9I,EAAKg4G,kBAAkBt7G,KAAKsD,GAAOtmB,GAAS+M,MAAK,KACxEuZ,EAAKwN,YAAY1E,EAAOpvB,MAKpCsmB,EAAKtN,SAASoW,EAAOpvB,IAEzB29H,kBAAmB,SAASzB,EAAkBrvI,GAC1C,IAAIy5B,EAAO5nC,KACP8/I,EAAuB,CACvBpuI,cAAe,CACXq5F,UAAWnjE,EAAKm4G,uCAAuC5xI,KAG3D6a,GAAS4C,EAAAA,EAAAA,GAAOk0H,EAAsB3xI,EAAQ,CAC9C7N,MAAOivF,EAAe3nD,EAAMz5B,EAAOic,MAAOozH,GAC1CtmD,WAAY,YACZt6E,YAAagrB,EAAKrF,OAAO,yBACzBkpE,mBAAoB,YAAc7jE,EAAKrF,OAAO,yBAA2B,EAAIg6G,GAC7E/uI,MAAO,KACP2pF,SAAU,SAAS72F,EAAOuxD,GACtBssF,EAAkBv2G,EAAM,CACpBz5B,OAAQA,EACR7N,MAAOA,EACPgZ,UAAWkkI,EACX3rF,aAAcA,OAW1B,MAPI,YAAcksF,EAAiCn2G,EAAMz5B,KACjDqvI,EAAiB5tG,SAAShI,EAAKvG,gBAAgBq7G,KAC/C1zH,EAAO9D,YAAc0iB,EAAKrF,OAAO,8BAEjCvZ,EAAO9D,YAAc0iB,EAAKrF,OAAO,6BAGlCvZ,GAEX+2H,uCAAwC,SAAS5xI,GAC7C,IAAI6xI,EAAkBv2G,EAAAA,EAAAA,OAA2B,6BACjD,OAAIzpC,KAAK8lC,UAAUvD,OAAO,qBACf,CACH,aAAcy9G,EACd,mBAAoB7xI,EAAOsnC,UAG5B,CACH,aAAcuqG,IAGtBhB,cAAe,SAASxB,EAAkBl8H,GAEtC,OADAk8H,EAAiB3yG,QACV7qC,KAAKqqC,cAAc,iBAAiB4sD,cAAap1D,EAAAA,EAAAA,GAAE,SAASE,SAASy7G,GAAmBl8H,IAEnGy9H,0BAA2B,SAASruG,EAAOviC,GACvC,IAAIy5B,EAAO5nC,KACPw9I,EAAmB9sG,EAAMnP,KAAK,IAAMu7G,IAAwBn5F,QAChE65F,EAAiB3yG,QACjB,IAAIo1G,GAAsBp+G,EAAAA,EAAAA,GAAE,SAASC,SAASq7G,IAA4B/yG,KAAK,WAAYpqC,KAAKuiC,OAAO,aACvGqE,EAAAA,EAAAA,GAAgBq5G,EAAqB,WAAY,WAC7Cr4G,EAAK83G,iBAAiBhvG,EAAOviC,MAEjC8xI,EAAoBl+G,SAASy7G,GAC7B51G,EAAKi3G,0BAA0BnuG,EAAOitG,EAA0B/1G,EAAMz5B,KAE1E0wI,0BAA2B,SAASnuG,EAAOpwC,GACvC,IAAI2/I,EAAsBvvG,EAAMnP,KAAK,IAAM47G,IACvC8C,EAAoBr4H,SAChB,KAAOtnB,EACP2/I,EAAoB/+H,KAAK,UAEzB++H,EAAoBxwI,KAAKnP,KAIrCw+I,8BAA+B,SAASH,EAAOxwI,EAAQqvI,GACnD,IACI0C,EADAt4G,EAAO5nC,KAEPukD,EAAe,WACf,IAAI47F,EAAO1N,GAAAA,YAAiBkM,GAC5BwB,GAAQA,EAAK59G,OAAO,iBAAkB,MACtC29G,GAAoBt4G,EAAKw4G,aAAa5C,IAE1C51G,EAAKpF,iBAAiBm8G,EAAOlM,GAAM,CAC/Bj5C,mBAAoB,GACpBxzF,oBAAoB,EACpBovF,cAAe,SACfhmF,SAAUw4B,EAAKH,0BAA4B,IAAMge,GAA4B,IAAMs3F,GACnFnK,qBAAsB,UACtBC,yBAAyB,EACzBz1H,MAAO,CAAC,CACJ7V,UAAU4G,EAAO0D,mBAAoB1D,EAAO0D,iBAAiB+V,OAC7DvY,KAAMgtI,GAAgB0B,EAAiCn2G,EAAMz5B,IAAW,WACxEkyI,YAAY,EACZjjI,MAAOwqB,EAAK04G,6BAA6BnyI,KAE7C+7C,YAAa,SAASq2F,GAClB,IAAIztI,EAA0BytI,EAAWn2F,SAAS96C,KAC9CkxI,EAAgCzC,EAAiCn2G,EAAMz5B,GACvEsyI,GAAiB,EACjBC,EAAgBpD,GAAyB11G,GACzCtmB,EAAU,GACd,KAAIi/H,EAAWn2F,SAAShtC,OAAStK,GAA2BA,IAA4B0tI,GAAxF,CAeA,GAZI1tI,GACAwO,EAAQo/H,EAAgB,kCAAoC,2BAA6B5tI,EACrF,YAAcA,GAA2B,YAAc0tI,IACvDC,EAAiB,YAAc3tI,EAC/BwO,EAAQo/H,EAAgB,sBAAwB,eAAiB,QAGrEp/H,EAAQo/H,EAAgB,sBAAwB,eAAiB,KACjEp/H,EAAQo/H,EAAgB,kCAAoC,2BAA6BvyI,EAAOqhD,gCAAkC,MAEtI5nB,EAAKiP,mBAAmB6J,aAAavyC,EAAOic,MAAO9I,GACnDsmB,EAAKw2G,2BAA2BC,aAAab,GAAkB,IAC1D1qI,EAAyB,CAC1B,IAAIg0B,EAASitF,EAAkBypB,GAC3B12G,GAAU,cAAgBA,EAAOkE,OAASlE,EAAOvE,OAAO,aACxDuE,EAAO6uB,QACP7uB,EAAOvE,OAAO,WAAW,IAG5Bk+G,EAGD74G,EAAK83G,iBAAiBlC,EAAiBz2G,QAAQ,IAAMypD,IAAoBriF,GAFzEy5B,EAAKw4G,aAAa5C,KAK1BzK,eAAgB,WACZmN,EAAmBt4G,EAAK+4G,iBAAiBnD,GACzC51G,EAAKyC,cAAc,iBAAiB6jE,aAExC8kC,gBAAiB,WACbpsG,EAAAA,EAAAA,QAAqB+3G,EAAO,QAC5Bp6F,KAEJ/6C,eAAgB,SAAS88B,GACrBM,EAAAA,EAAAA,GAAgB+3G,EAAO,QAAQ,KAC3B,IAAIwB,EAAO75G,EAAER,UACbq6G,EAAKhQ,aAAagQ,EAAK9K,iBACvB9wF,QAGRj4C,WAAYs7B,EAAKrF,OAAO,iBAGhCo+G,iBAAkB,SAASjhH,GACvB,OAAOA,EAAWkQ,SAASstG,KAAkBx9G,EAAW++B,QAAQ,IAAMy+E,IAAet1H,QAEzFw4H,aAAc,SAAS1gH,GACnB1/B,KAAKqqC,cAAc,iBAAiB+C,MAAM1N,GAC1CkH,EAAAA,EAAAA,QAAqBlH,EAAW6B,KAAK2wE,IAAyB,UAElE2tC,8BAA+B,SAASngH,EAAYvxB,EAAQqvI,GACxD,IAAImB,EACA3+I,KAAKuiC,OAAO,oCACZ7C,EAAWoC,SAAS+6G,IACpB8B,GAAQ98G,EAAAA,EAAAA,GAAE,SAASq3C,UAAUx5C,GAC7B1/B,KAAK8+I,8BAA8BH,EAAOxwI,EAAQqvI,KAG1D8C,6BAA8B,SAASnyI,GACnC,IAAIy5B,EAAO5nC,KACPgpB,EAAS,CAAC,IACV43H,EAAmBh5G,EAAKrF,OAAO,aAC/B7lB,EAAwBkkI,GAAoBA,EAAiBlkI,uBAAyB,GAC1F,GAAIvO,EAAO0D,kBAAoB1D,EAAO0D,iBAAiB+V,OAAQ,CAC3D,IAAIi5H,EAA4B1yI,EAAO0D,iBAAiB+R,QAAQ,SAAStjB,GACrE,OAAOmwB,EAAAA,EAAAA,IAAU6rH,GAAsBh8I,OAE3C0oB,GAASgJ,EAAAA,EAAAA,IAAI6uH,GAA4B,SAASvgJ,GAC9C,IAAIwgJ,EAAkBxE,GAAsBh8I,GAC5C,MAAO,CACHgP,KAAMhP,EACN2yF,UAAW8qD,EAAiCn2G,EAAMz5B,IAAWA,EAAOkK,0BAA4B/X,EAChGmP,KAAMiN,EAAsBokI,GAC5BzxI,KAAMgtI,GAAgB/7I,OAG9B0oB,EAAOX,KAAK,CACR/Y,KAAM,KACNG,KAAMmxI,GAAoBA,EAAiBjkI,mBAC3CtN,KAAMgtI,GAAgBruI,UAG9B,OAAOgb,GAEX4gB,cAAe,SAASnV,GACpB,OAAQA,EAAKnlB,MACT,IAAK,YACL,IAAK,kBACDtP,KAAK8rC,aAAY,GAAM,GACvBrX,EAAKqV,SAAU,EACf,MACJ,QACI9pC,KAAKs6B,SAAS7F,MAneO,GAwerCssH,GAAkC,CAClCC,2BAA4B,WACxB,OAAO,GAEXl2E,2BAA4B,WACxB,GAAI9qE,KAAKghJ,6BACL,OAAOhhJ,KAAKs6B,WAEhB,IAAI2I,EAAU,CAACjjC,KAAKs6B,YAChBxzB,EAAU9G,KAAK62C,mBAAmBC,kBAAkB,MAAM,GAO9D,OANA1lB,EAAAA,EAAAA,IAAKtqB,GAAU,WACX,GAAI9G,KAAKoQ,gBAAkBpQ,KAAKiR,4BAA6Bwf,EAAAA,EAAAA,IAAUzwB,KAAKiI,aAAc,CACtF,IAAI2b,EAAS5jB,KAAK49D,uBAAuB59D,KAAKiI,YAAajI,KAAK8S,yBAA2B9S,KAAKqY,uBAAwB,aACxH4qB,EAAQ5a,KAAKzE,OAGdsrB,EAAAA,eAA6BjM,KAGxCg+G,GAA4BzzG,GAAAA,eAAAA,QAA+B,CAC3D0zG,gBAAiB,WAIb,OAHKlhJ,KAAKmhJ,eACNnhJ,KAAKmhJ,aAAenhJ,KAAK+lC,QAAQ,gBAE9B/lC,KAAKmhJ,cAEhB9C,aAAc,SAAS39G,EAAUpgC,GACzBg9I,GAAyBt9I,QACzB0gC,GAAYA,EAASsM,YAAYiwG,GAAyB38I,IAAUogC,EAASqG,QAAQ,IAAMypD,IAAmBxjD,YAAYowG,GAAuB98I,GACjJN,KAAKkhJ,kBAAkBE,kBAAkB9gJ,KAGjDgc,YAAa,WACT,IAAI2zB,EAAoBjwC,KAAKqqC,cAAc,WACvCvjC,EAAUmpC,EAAkBiB,aAChCjB,EAAkB9G,cAClB,IAAK,IAAItR,EAAI,EAAGA,EAAI/wB,EAAQ8gB,OAAQiQ,IAAK,CACrC,IAAI1pB,EAASrH,EAAQ+wB,QACjB,IAAW1pB,EAAO08C,sBAClB5a,EAAkByQ,aAAa7oB,EAAG,cAAe1pB,EAAO08C,qBACxD18C,EAAO08C,yBAAsB,QAE7B,IAAW18C,EAAO6vI,kCAClB/tG,EAAkByQ,aAAa7oB,EAAG,0BAA2B1pB,EAAO6vI,iCACpE7vI,EAAO6vI,qCAAkC,GAGjD/tG,EAAkB7G,YAClBppC,KAAKqhJ,oBAETA,iBAAkB,WACd,GAAI/D,GAAyBt9I,MAAO,CAChC,IAAIshJ,EAA2BthJ,KAAK+lC,QAAQ,qBAAqB5E,UACjEmgH,EAAyB//G,KAAK,IAAMvhC,KAAKqhC,gBAAgB6Q,IAAoB,KAAO+qG,IAAyBj7G,YAAYi7G,IACzHqE,EAAyB//G,KAAK,IAAMvhC,KAAKqhC,gBAAgB6Q,IAAoB,KAAOkrG,IAAuBp7G,YAAYo7G,IACvHp9I,KAAKkhJ,kBAAkBE,mBAAkB,OAI1CG,GAAkB,CACzBr7F,eAAgB,WACZ,MAAO,CACHn+C,UAAW,CACPwF,SAAS,EACTsP,sBAAsB,EACtBD,YAAa6sB,EAAAA,EAAAA,OAA2B,mCACxC9sB,mBAAoB8sB,EAAAA,EAAAA,OAA2B,0CAC/CntB,YAAa,OACbC,gBAAiBktB,EAAAA,EAAAA,OAA2B,8BAC5C/sB,sBAAuB,CACnBnB,MAAOkuB,EAAAA,EAAAA,OAA2B,uCAClC1tB,SAAU0tB,EAAAA,EAAAA,OAA2B,0CACrC7tB,SAAU6tB,EAAAA,EAAAA,OAA2B,qCACrC5tB,gBAAiB4tB,EAAAA,EAAAA,OAA2B,6CAC5CjuB,YAAaiuB,EAAAA,EAAAA,OAA2B,wCACxChuB,mBAAoBguB,EAAAA,EAAAA,OAA2B,gDAC/CztB,WAAYytB,EAAAA,EAAAA,OAA2B,2CACvCpuB,SAAUouB,EAAAA,EAAAA,OAA2B,yCACrC3tB,YAAa2tB,EAAAA,EAAAA,OAA2B,4CACxCnuB,SAAUmuB,EAAAA,EAAAA,OAA2B,yCACrCruB,QAASquB,EAAAA,EAAAA,OAA2B,wCACpC/tB,QAAS+tB,EAAAA,EAAAA,OAA2B,0CACpC9tB,WAAY8tB,EAAAA,EAAAA,OAA2B,8CAE3ChtB,iBAAkBgtB,EAAAA,EAAAA,OAA2B,iDAC7CjtB,eAAgBitB,EAAAA,EAAAA,OAA2B,kDAIvDuE,YAAa,CACT1xB,YAAa2kI,IAEjB7yG,UAAW,CACPJ,YAAa,CACTt+B,KAAMqxI,GACNS,eAAgB,CACZC,eAAgB,WACZ,IAAI75G,EAAO5nC,KAEX,GADA4nC,EAAKtN,SAAS7G,MAAMmU,EAAMvc,WACtBuc,EAAKuF,aAAc,CACnB,IAAIyxG,EAAkBh3G,EAAK04C,mBAAmBq/D,gCAC9C,GAAIf,EAAiB,CACjB,IAAIlhG,EAAYkhG,EAAgBl+G,WAAWqG,QAAQ,MAAM3c,QACrDszB,IAAc9V,EAAK85G,aAAaliH,aAAeke,IAAc9V,EAAK85G,aAAaliH,YAAc,GAC7Fo/G,EAAgB13F,WAAW14C,UAK3CmzI,aAAc,WACV,IACIjxG,EADA9I,EAAO5nC,KAEX,GAAI4nC,EAAKuF,aAAc,CACnB,IAAIyxG,EAAkBh3G,EAAK04C,mBAAmBq/D,gCAC1Cf,IACAluG,EAAQkuG,EAAgBl+G,WAAWqG,QAAQ,MAC3Ca,EAAK04C,mBAAmBm/D,0BAA0B,CAC9CjyI,OAAO+zC,EAAAA,EAAAA,IAAc7Q,GAAO,GAAQ8rG,KAExCoC,EAAgB13F,WAAWz4C,QAGnCm5B,EAAKtN,SAAS7G,MAAMmU,EAAMvc,cAItC6iB,MAAO,CACHiY,kBAAmBo3F,GACnB3nE,YAAa,CACT+T,iBAAkB,WACd,IAAIvsE,EAAQpd,KAAKs6B,WACbsnH,EAAa5hJ,KAAK6hJ,mBAAmBzkI,GACzC,OAAOwkI,EAAW95H,OAAO1K,IAE7BykI,mBAAoB,WAChB,IAAIj6G,EAAO5nC,KACP4hJ,EAAa,GACjB,GAAIh6G,EAAKk6G,2BAA4B,CACjC,IAAIhlD,EAAWl1D,EAAKrF,OAAO,6BACvBz7B,EAAU8gC,EAAKiP,mBAAmB3F,aAClC3pC,GAAYT,EAAQ8c,QAAQ,SAASzV,GACrC,YAAO,IAAWA,EAAO08C,uBACzBjjC,OACAnF,EAAc,CACdjB,OAAQ,WACRF,QAAS,CACLjS,KAAM,eACN9H,SAAUA,EACVgI,QAAS,WACLq4B,EAAKw2G,2BAA2B9hI,eAEpC1T,KAAMk0F,EACNrtF,KAAMqtF,EACNtyF,cAAe,SAAS87B,IACpBzE,EAAAA,EAAAA,GAAEyE,EAAEnF,SAASW,SAAS8F,EAAKiiD,uBAAuBmzD,OAG1Dz7H,SAAU,SACVjS,KAAM,oBACN8R,SAAU,QACVD,aAAc,OACdhO,UAAW,IAEfyuI,EAAWv5H,KAAK5F,GAEpB,OAAOm/H,GAEXE,yBAA0B,WACtB,IAAIlB,EAAmB5gJ,KAAKuiC,OAAO,aACnC,OAAOq+G,GAAoBA,EAAiBrzI,SAAW,YAAcqzI,EAAiBtkI,aAE1F2sB,KAAM,WACFjpC,KAAKs6B,WACLt6B,KAAK0hC,gBAAkB1hC,KAAKqqC,cAAc,QAC1CrqC,KAAKo+I,2BAA6Bp+I,KAAKqqC,cAAc,gBAEzD+2G,kBAAmB,SAAS9gJ,GACxBN,KAAKirF,uBAAuB,qBAAsB3qF,IAEtDmhC,UAAW,WACP,OAAOzhC,KAAKs6B,YAAct6B,KAAK8hJ,4BAEnCl4G,cAAe,SAASnV,GAChB,cAAgBA,EAAKnlB,MACrBtP,KAAK8rC,cACLrX,EAAKqV,SAAU,GAEf9pC,KAAKs6B,SAAS7F,QC5uBtCstH,GAAAA,eAAoB,YAAaR,I,eCc7BS,I,gBAAsB,oBACtBC,GAA2B,wBAC3BC,GAA4B,OAEhC,SAASC,GAA2B/kI,GAChCA,EAAQA,GAAS,GACjB,IAAK,IAAIya,EAAI,EAAGA,EAAIza,EAAMwK,OAAQiQ,IAC9Bza,EAAMya,GAAGo7D,UAAW,EACpBkvD,GAA2B/kI,EAAMya,GAAGza,OAI5C,SAASglI,GAAqB97G,EAAGv0B,GAC7B,IAAIu0B,EAAER,UAAUvD,OAAO,eAAvB,CAGA,IAAI8/G,GAAoBxgH,EAAAA,EAAAA,GAAEyE,EAAEnF,SAASI,KAAK,gCAAgC7xB,KAAK,cAC3E2yI,GAAqBtwI,GAAgBA,EAAa6V,QAClDy6H,EAAkB9/G,OAAO,aAAS,IAI1C,SAAS+/G,GAAgB16G,EAAMtmB,GAC3B,IAAI7Y,EAAe6Y,EAAQ7Y,aAC3B,OAAIA,IAAgBgoB,EAAAA,EAAAA,IAAUhoB,EAAakI,aAChClI,EAAakI,YAEjBi3B,EAAKrF,OAAO,4BAEhB,SAASggH,GAAqCt7H,EAAMu7H,EAAmBC,GAC1E,GAAID,EAAoBC,GAEpB,GADAx7H,EAAKgsE,UAAW,EACZwvD,GAAmBx7H,EAAK7J,MACxB,IAAK,IAAIy6B,EAAI,EAAGA,EAAI5wB,EAAK7J,MAAMwK,OAAQiwB,IACnC,IAAK5wB,EAAK7J,MAAMy6B,GAAGo7C,SAAU,CACzBhsE,EAAKgsE,cAAW,EAChB,YAILwvD,GAAmBx7H,EAAKgsE,YAC/BhsE,EAAKgsE,UAAW,EAChBkvD,GAA2Bl7H,EAAK7J,QAGjC,IAAIslI,GAAmBl1G,GAAAA,KAAAA,QAAqB,CAC/Cm1G,kBAAmB,WACf,OAAO3iJ,KAAK+5F,iBAEhB6oD,iBAAkB,WACd,OAAO5iJ,KAAK6iJ,gBAEhBC,kBAAmB,SAASxhI,GACxB,IAAIyhI,EAAO/iJ,KAAK4iJ,mBACZhnD,EAAcmnD,EAAKxgH,OAAO,eAC1BgzD,GAAeqG,IAAgBt6E,EAAQ0hI,iBAAmBD,EAAKriH,WAAWa,KAAK,gBAAgB2D,GAAG,GAAG0K,SAAS,uBAC9G79B,EAAe,GACdwjF,GAuBG,SAAWj0E,EAAQxS,OACnBwS,EAAQxP,WAAa,WAErB/K,MAAM2iB,QAAQpI,EAAQvP,gBACtBuP,EAAQvP,aAAe,KA1BvB,SAAWuP,EAAQxS,OACfwS,EAAQxP,aACRwP,EAAQxP,WAAa,WACtB,SAASmxI,EAAqBlxI,EAAcqL,EAAO8lI,IAClD9xH,EAAAA,EAAAA,IAAKhU,GAAQ,SAAS4W,EAAG/M,GACrB,QAAI,IAAWA,EAAKgsE,YAAchsE,EAAKgsE,SAAWiwD,EAAW,CACzD,IAAI7uH,EAAO0uH,EAAKI,SAASl8H,GACrBm8H,EAAcL,EAAKvH,aAAannH,GAChCgvH,EAA2BD,GAAen8H,EAAK7J,OAAS6J,EAAK7J,MAAM+Y,MAAKlP,GAAQA,EAAKgsE,WACzF,IAAK2I,IAAgBynD,EAEjB,YADAtxI,EAAasW,KAAKpB,EAAK3mB,OAI3B2mB,EAAK7J,OAAS6J,EAAK7J,MAAMwK,QACzBq7H,EAAqBlxI,EAAckV,EAAK7J,MAAO8lI,MAZxD,CAeDnxI,EAAcgxI,EAAKxgH,OAAO,UAAU,GACtCjhB,EAAQvP,aAAeA,GAU3BuP,EAAQvP,eAAiBuP,EAAQvP,aAAa6V,SAC9CtG,EAAQvP,aAAe,MAE3BuP,EAAQmS,QACRzzB,KAAKsjJ,wBAET37F,qBAAsB,SAAS47F,EAAgBjiI,GAC3C,GAAIA,EAAS,CACTthB,KAAKs6F,0BAA0Bh5E,GAC/B,IAAIo7E,EAAiB18F,KAAK2iJ,oBAC1B3iJ,KAAKsjJ,uBACLtjJ,KAAKwjJ,YAAYD,EAAgBjiI,GACjCo7E,EAAejuF,SAGvB60I,qBAAsB,WAClB,IAAIG,EAAmBzjJ,KAAK2iJ,oBAC5Bc,GAAoBA,EAAiBj1I,QAEzCg1I,YAAa,SAAS9iH,EAAUpf,GAC5B,IAAIxU,EAAkB9M,KAAKuiC,OAAO,mBAC9BtyB,EAAY,UAAYqR,EAAQrR,WAAanD,EAAkB,OAAS,QACxE9M,KAAK+5F,kBACL/5F,KAAK0jJ,qBACL1jJ,KAAK+5F,gBAAgBx3D,OAAO,WAAY,CACpCzf,GAAI7S,EAAY,OAChByS,GAAIzS,EAAY,UAChB8S,GAAI2d,EACJ7d,UAAW,eAIvB8gI,eAAgB,SAASriI,GACrB,IAAI5O,EAAS4O,EAAQ5O,OACjBkxI,EAAuBtiI,EAAQsiI,qBAC/BC,EAAyBviI,EAAQ7Y,cAAgB6Y,EAAQ7Y,aAAapB,WAC1E,GAAIu8I,IAAwBnzH,EAAAA,EAAAA,IAAUozH,MAA4B/rH,EAAAA,EAAAA,IAAW+rH,GACzE,OAAO3B,GAEX,GAAIxvI,EACA,OAAOA,EAAO0C,aAAe,OAEjC,GAAIkM,EAAQja,WAAY,CACpB,IAAIwc,EAAQvC,EAAQja,WAAWwc,MAC/B,GAAI9c,MAAM2iB,QAAQ7F,IAAUA,EAAM+D,OAAS,EACvC,OAAO/D,EAAM,GAAGiZ,SACb,IAAIhF,EAAAA,EAAAA,IAAWjU,KAAWvC,EAAQ26C,gBACrC,OAAOp4C,EAGf,OAAOvC,EAAQ/P,WAAa+P,EAAQwb,UAExC4mH,mBAAoB,WAChB1jJ,KAAK+5F,iBAAmB/5F,KAAK+5F,gBAAgB7yC,WAAWrc,SAE5DyvD,0BAA2B,SAASh5E,GAChC,IAAIsmB,EAAO5nC,KACP0gC,EAAWkH,EAAKzG,UAChB2iH,EAAsBl8G,EAAKrF,OAAO,gBAClC/0B,EAAQ8T,EAAQ7Y,cAAgB6Y,EAAQ7Y,aAAa+E,OAASs2I,GAAuBA,EAAoBt2I,MACzG9E,EAAS4Y,EAAQ7Y,cAAgB6Y,EAAQ7Y,aAAaC,QAAUo7I,GAAuBA,EAAoBp7I,OAC3GmyF,EAAiB,CACjBrtF,MAAOA,EACP9E,OAAQA,EACR6E,SAAS,EACTsN,SAAS,EACTG,WAAW,EACXD,iBAAiB,EACjBjB,oBAAoB,EACpBH,aAAa,EACbN,qBAAqB,EACrB/Q,mBAAmB,EACnBkR,0BAA0B,EAC1BshF,4CAA4C,EAC5C5/E,aAAc,CAAC,CACX7N,QAAS,SACT+T,SAAU,QACVI,OAAQ,WACRF,QAAS,CACL7R,KAAMq0I,EAAoBnvI,MAAMmB,GAChCvG,QAAS,WACLq4B,EAAKk7G,kBAAkBxhI,MAGhC,CACCjU,QAAS,SACT+T,SAAU,QACVI,OAAQ,WACRF,QAAS,CACL7R,KAAMq0I,EAAoBnvI,MAAMiB,OAChCrG,QAAS,WACLq4B,EAAK07G,2BAIjB3oI,eAAe,EACfJ,UAAW,SAAS+rB,GAChBA,EAAER,UAAUohB,WAAWxf,SAAS5F,SAAS,6BACzC8F,EAAKm8G,yBAAyBziI,GAC9BA,EAAQ/G,WAAa+G,EAAQ/G,UAAU+rB,IAE3C9rB,QAAS,WACLotB,EAAKg7G,mBAAmBx1G,SAE5BlzB,SAAUoH,EAAQpH,SAClB1P,cAAe,SAAS87B,GACpB,IAAIR,EAAYQ,EAAER,UAClBA,EAAUvD,OAAO,YAAauD,EAAUimD,qBAAqB3yE,cAGhEqX,EAAAA,EAAAA,IAAUmX,EAAKmyD,iBAGhBnyD,EAAKmyD,gBAAgBx3D,OAAOs4D,GAF5BjzD,EAAKmyD,gBAAkBnyD,EAAKpF,iBAAiB9B,EAAUs6D,GAAAA,EAAOH,IAKtEkpD,yBAA0B,SAASziI,GAC/B,IAAIsmB,EAAO5nC,KACPknD,EAAWtf,EAAKmyD,gBAAgB7yC,WAChC88F,EAAgB,CAChB3oD,cAAeinD,GAAgB16G,EAAMtmB,GACrC7M,cAAemzB,EAAKrF,OAAO,8BAC3BrtB,WAAYoM,EAAQ7Y,cAAgB6Y,EAAQ7Y,aAAayM,YAAc,GACvE7N,WAAYia,EAAQja,WACpBmC,eAAgB,WACZo+B,EAAKyE,gBAAgBY,QAEzBkuD,aAAc,SAASzrF,EAAMskB,EAAGmN,GAC5B,IAAIT,GAAWmB,EAAAA,EAAAA,GAAEV,GACjB,OAAI7f,EAAQ3P,WACD+uB,EAASjxB,KAAKC,EAAKD,MAEvBixB,EAASxf,KAAKxR,EAAKD,QAIlC,SAAS9E,EAAgB27B,GACjB,gBAAkBA,EAAEwuB,UAAaxzC,EAAQ0hI,kBAAmB,IAAUp7G,EAAKrF,OAAO,wCAC9E,SAAWjhB,EAAQxS,KACnBw3B,EAAER,UAAUvD,OAAO,qBAAsB+D,EAAEhmC,MAAQ,SAAW,aAE9DgmC,EAAER,UAAUvD,OAAO,gBAAiB+D,EAAEhmC,MAAQ,WAAa,QAInE,SAAWghB,EAAQxS,KACnB84B,EAAKi7G,eAAiBj7G,EAAKpF,kBAAiBX,EAAAA,EAAAA,GAAE,SAASE,SAASmlB,GAAW20C,GAAAA,YAAUjwE,EAAAA,EAAAA,GAAOo4H,EAAe,CACvGx+H,mBAAoBlE,EAAQ0hI,gBAAkB,SAAW,YACzDr4I,gBAAiBA,EACjB5B,QAAS,QAGb6+B,EAAKi7G,eAAiBj7G,EAAKpF,kBAAiBX,EAAAA,EAAAA,GAAE,SAASE,SAASmlB,GAAW+8F,GAAAA,GAAMr4H,EAAAA,EAAAA,GAAOo4H,EAAe,CACnG73C,WAAYvkE,EAAK+7G,eAAeriI,GAChC4iI,aAAc,eACdC,uBAAuB,EACvB/uD,cAAe9zE,EAAQ0hI,gBAAkB,WAAa,MACtDr4I,gBAAiBA,EACjBiB,mBAAoB,SAAS06B,GACzB,IAAIlpB,EAAQkpB,EAAER,UAAUvD,OAAO,SAC3BuyD,EAAgBxuD,EAAER,UAAUvD,OAAO,iBACvC,IAAK+D,EAAER,UAAUs+G,yBAA2B99G,EAAER,UAAUvD,OAAO,iBAAmBjhB,EAAQ0hI,gBAAiB,CACvG,IAAIjxI,EAAeuP,EAAQvP,cAAgB,GACvCmxI,EAAY,YAAc5hI,EAAQxP,WAClC,IAAMgjF,EAAcltE,QAAUxK,EAAMwK,SAAW7V,EAAa6V,QAAU,GAAKs7H,GAAanxI,EAAa6V,SAAWxK,EAAMwK,OAAS,IAC/HtG,EAAQxP,WAAa,UACrBwP,EAAQvP,aAAe,IAChB+iF,EAAcltE,SAAWxK,EAAMwK,SACtCtG,EAAQxP,WAAa,UACrBwP,EAAQvP,aAAe,KAG/Bqf,EAAAA,EAAAA,IAAKhU,GAAQ,SAASgN,EAAOnD,GACzB,IAAIgsE,EAAW/jD,EAAAA,cAA4BjoB,EAAM6tE,EAAe,OAAS,EACrEuvD,IAAgBp9H,EAAKgsE,SACzB,GAAIoxD,IAAgBpxD,EAAU,CAC1BhsE,EAAKgsE,SAAWA,EAChB3xE,EAAQvP,aAAeuP,EAAQvP,cAAgB,GAC/C,IAAIuyI,EAAmBp1G,EAAAA,cAA4BjoB,EAAK3mB,MAAOghB,EAAQvP,aAAc,MACjFuyI,GAAoB,GACpBhjI,EAAQvP,aAAairC,OAAOsnG,EAAkB,GAE9CrxD,EAAW,YAAc3xE,EAAQxP,YACjCwP,EAAQvP,aAAasW,KAAKpB,EAAK3mB,WAI3C8hJ,GAAqB97G,EAAGhlB,EAAQvP,eAEpCvI,eAAgB,SAAS88B,GACrB,IAAIR,EAAYQ,EAAER,UACd1oB,EAAQ0oB,EAAUvD,OAAO,SACzBuyD,EAAgB,IACpB1jE,EAAAA,EAAAA,IAAKhU,GAAQ,WACLpd,KAAKizF,UACL6B,EAAczsE,KAAKroB,SAG3B8lC,EAAUs+G,wBAAyB,EACnCt+G,EAAUvD,OAAO,gBAAiBuyD,GAClChvD,EAAUs+G,wBAAyB,EACnChC,GAAqB97G,EAAGhlB,EAAQvP,mBAKhDm6B,YAAa,WACTlsC,KAAKmhC,UAAUW,SAASmgH,OAGrB1xI,GAAuB,SAASpC,GACvC,OAAOsiB,EAAAA,EAAAA,IAAUtiB,EAAOoC,sBAAwBpC,EAAOoC,qBAAuBpC,EAAOiC,gBAE9Em0I,GAAoB,CAC3Bl1G,kBAAmB,SAAS/tB,GACxB,IAAIkjI,EACA70G,EAAcruB,EAAQquB,YACtBxhC,EAASmT,EAAQnT,OACrB,MAAI,iBAAmBmT,EAAQhS,MAC3BqgC,EAAYpO,KAAK,IAAMygH,IAAqB1/G,SACxC/xB,GAAqBpC,KACrBq2I,EAAyBxkJ,KAAKs6B,SAAShZ,GAAS0rB,YAAY,yBAA0BhtC,KAAKykJ,qBAAqBt2I,IAC3GnO,KAAKuiC,OAAO,gCACbiiH,EAAuBp6G,KAAK,WAAYpqC,KAAKuiC,OAAO,aAAe,IAGpEiiH,GAEJxkJ,KAAKs6B,SAAShZ,IAEzBmjI,qBAAsB,SAASt2I,GAC3B,OAAQA,EAAO4D,eAAiB5D,EAAO4D,aAAa6V,QAExDooB,uBAAwB,SAAS1gC,GAC7B,MAAI,iBAAmBA,EACZ0yI,GAEJhiJ,KAAKs6B,SAAShrB,IAEzB+gC,iBAAkB,SAAS/uB,GACvB,IAAIoe,EAAape,EAAQhI,UACrBw3B,EAAaxvB,EAAQ8uB,UACzB,GAAI,iBAAmB9uB,EAAQhS,KAAM,CACjC,IAAIhD,EAAatM,KAAKuiC,OAAO,cAC7B,GAAI7C,EAAWmR,WAAWjpB,UAAYtb,GAAc,UAAYgV,EAAQiuB,iBAAmBjjC,GAAc,SAAWgV,EAAQiuB,iBAExH,YADA7P,EAAWi1C,QAAQ7jC,GAI3B9wC,KAAKs6B,SAAShZ,IAElBsoB,cAAe,SAASnV,GACpB,GAAI,iBAAmBA,EAAKnlB,KAAM,CAC9B,IAAI08B,EAAe,sBAAwBhsC,KAAKsP,KAChDtP,KAAK8rC,YAAYE,EAAcA,GAC/BvX,EAAKqV,SAAU,OAEf9pC,KAAKs6B,SAAS7F,KC7TtBiwH,GAAwB,CACxB9lH,MAAO,SAASt+B,GACZ,OAAOo9D,GAAAA,EAAAA,gBAAiCp9D,EAAQ,IAEpDw+B,QAAS,SAASx+B,GACd,OAAOo9D,GAAAA,EAAAA,OAAwB,IAAIz0C,KAAK,IAAK,EAAI3oB,EAAQ,GAAI,aAIrE,SAASqkJ,GAAgBvnI,EAAOwnI,EAAWC,GAkBvC,OAjBAD,EAAYA,GAAa,GACzBC,EAAQA,GAAS,GACjBznI,EAAMy+B,SAAQ50B,IACV,IAAIwJ,EAAAA,EAAAA,IAAUxJ,EAAKyE,KAAM,CACrB,IAAIo5H,EAAc,IAAMF,EAAUh9H,OAElC,GADAg9H,EAAUv8H,KAAKy8H,EAAc79H,EAAKyE,IAAM,EAAIzE,EAAKyE,KAC7CzE,EAAK7J,MACLunI,GAAgB19H,EAAK7J,MAAOwnI,EAAWC,OACpC,CACH,IAAI78H,EAAO,IAAIiB,KAAKA,KAAKqkE,IAAI75D,MAAMxK,KAAM27H,IACzCC,EAAMx8H,KAAKL,GAEf48H,EAAU/5H,WAEVg6H,EAAMx8H,KAAK,SAGZw8H,EAGX,SAASE,GAA0Br1I,EAAMvB,GACrC,IAAI02I,EAAQF,GAAgBj1I,GACxB8rB,GAAQylE,EAAAA,GAAAA,GAAU4jD,GAClBhhI,EAAQqrB,EAAAA,gCAA6CD,EAAAA,EAAAA,GAAS,GAAI9gC,EAAQ,CAC1E4C,mBAAoBiX,GAAQA,KAEhC,OAAO44E,GAAAA,EAAAA,eAA2BplE,EAAO,CACrC3X,MAAOA,IACRklC,UAGP,SAASi8F,GAAY9yI,GACjB,MAAO,OAAS,OAASA,QAAU,IAAWA,OAAS,EAASA,EAAO6X,OAAO,KAAO,SAAW,OAAS7X,QAAU,IAAWA,OAAS,EAASA,EAAO6X,OAAO,IAElK,IAAIk7H,GAAyBz3G,GAAAA,eAAAA,QAA+B,CACxDvE,KAAM,WACFjpC,KAAK62C,mBAAqB72C,KAAKqqC,cAAc,WAC7CrqC,KAAK0hC,gBAAkB1hC,KAAKqqC,cAAc,QAC1CrqC,KAAKklJ,kBAAoBllJ,KAAK+lC,QAAQ,qBAE1Co/G,qBAAsB,SAAS/nI,EAAOjP,GAClC,IAAI0pB,EAAIza,EAAMwK,OACVs7H,EAAY,YAAc/0I,EAAO2D,WACrC,MAAO+lB,IAAK,CACR,IAAI5Q,EAAO7J,EAAMya,GACb,UAAWza,EAAMya,IACjB73B,KAAKmlJ,qBAAqB/nI,EAAMya,GAAGza,MAAOjP,GAE9Co0I,GAAqCt7H,EAAMioB,EAAAA,cAA4B9xB,EAAMya,GAAGv3B,MAAO6N,EAAO4D,aAAc,OAAS,EAAGmxI,KAGhIkC,oBAAqB,SAASn+H,EAAMo+H,EAAc/jI,GAC9C,IAAIhhB,EACA09D,EACA7pC,EAAO7S,EAAQ6S,KACfmxH,EAAgBhkI,EAAQgkI,cACxBC,EAAkBjkI,EAAQikI,gBAC1Bp3I,EAASmT,EAAQnT,OAoBrB,OAnBIm3I,GAAiBC,GACjBjlJ,EAAQglJ,EAAcr+H,GACtB+2C,EAAeunF,EAAgBt+H,KAE/B3mB,EAAQ2mB,EAAKyE,IACbsyC,EAAe19D,GAKf2mB,GAHCkJ,EAAAA,EAAAA,IAASlJ,IAGH2E,EAAAA,EAAAA,GAAO,GAAI3E,GAFX,GAIXkN,EAAK9L,KAAK/nB,GACN,IAAM6zB,EAAKvM,OACXX,EAAK3mB,MAAQ6zB,EAAK,GAElBlN,EAAK3mB,MAAQ6zB,EAAKtL,KAAK,KAE3B5B,EAAKxX,KAAOzP,KAAKwlJ,kBAAkBxnF,EAAc7vD,EAAQk3I,EAAc/jI,EAAQwiI,qBACxE78H,GAEXu+H,kBAAmB,SAASxnF,EAAc7vD,EAAQk3I,EAAcvB,GAC5D,IAAIr0I,EAAOy/B,EAAAA,YAA0B8uB,EAAc,SAAS19D,EAAO6N,EAAQk3I,GACvE,IAAIpwI,EAAgB0oD,EAAAA,iBAA6BxvD,GAC7C6a,EAASkmB,EAAAA,yBAAuC/gC,EAAQ,gBAkB5D,OAjBI8G,IACA+T,EAAO/T,cAAgBA,EAAcowI,GACjCn2G,EAAAA,WAAyB/gC,EAAOqD,UAChCwX,EAAO9W,OAASwyI,GAAsBzvI,EAAcowI,IAC7C,WAAal3I,EAAOqD,WAC3BwX,EAAOsX,iBAAmB,WACtB,IAAIw9G,EAAgB,CAChB5rI,OAAQ/D,EAAO+D,OACf2qB,OAAQ,gBAER4oH,EAAiBv2G,EAAAA,YAA0B5uC,EAAOw9I,GAClD4H,EAAcplJ,EAAQ2U,EAAcowI,GACpCM,EAAkBz2G,EAAAA,YAA0Bw2G,EAAa5H,GAC7D,OAAO2H,GAAkBE,EAAkBF,EAAiB,MAAQE,EAAkB,MAI3F38H,EApBwC,CAqBjDg1C,EAAc7vD,EAAQk3I,IAIxB,OAHK51I,IACDA,EAAOq0I,EAAoBnvI,MAAMkB,YAE9BpG,GAEXy3F,mBAAoB,SAAS9gF,EAAYi/H,EAAclxH,EAAM7S,GACzD,IAAIikI,EACAD,EACAn3I,EAASmT,EAAQnT,OACjBuE,EAASvE,EAAOuE,OAChBkzI,EAAQtkI,EAAQskI,MACpBzxH,EAAOA,GAAQ,GACfkxH,EAAeA,GAAgB,EAC3B3yI,IACA6yI,GAAkBvzF,EAAAA,EAAAA,IAAct/C,EAAO0C,aACvCkwI,GAAgBtzF,EAAAA,EAAAA,IAAct/C,EAAO2C,YAEzC,IAAK,IAAIwiB,EAAI,EAAGA,EAAIzR,EAAWwB,OAAQiQ,IACnCzR,EAAWyR,GAAK73B,KAAKolJ,oBAAoBh/H,EAAWyR,GAAIwtH,EAAc,CAClEl3I,OAAQmT,EAAQnT,OAChB21I,oBAAqBxiI,EAAQwiI,oBAC7ByB,gBAAiBA,EACjBD,cAAeA,EACfnxH,KAAMA,IAEN,UAAW/N,EAAWyR,KAClBwtH,IAAiBO,IAAUn1H,EAAAA,EAAAA,IAAUrK,EAAWyR,GAAGv3B,OAGnDN,KAAKknG,mBAAmB9gF,EAAWyR,GAAGza,MAAOioI,EAAe,EAAGlxH,EAAM7S,UAF9D8E,EAAWyR,GAAGza,OAK7B+W,EAAKtJ,OAGb6/C,cAAe,SAASv8D,GACpB,IAAI03I,EACAj+G,EAAO5nC,KACPqH,EAAaugC,EAAKlG,gBAAgBr6B,aAClC+8B,EAAiB,OAAS/8B,QAAc,IAAWA,OAAa,EAASA,EAAW2E,mBAAmBzD,SACvGsb,EAAQqrB,EAAAA,+BAA6C/gC,EAAQi2B,GAC7Dy/G,EAAyB,QAAUgC,EAAuB13I,EAAO1F,oBAAiB,IAAWo9I,OAAuB,EAASA,EAAqBx+I,WAClJy8I,EAAsBl8G,EAAKrF,OAAO,gBAClCujH,GAAW,EACXxkI,EAAU,CACVwkB,UAAW8B,EAAK9B,WAEpB,GAAKz+B,EAAL,CAGA,IAAIopB,EAAAA,EAAAA,IAAUozH,MAA4B/rH,EAAAA,EAAAA,IAAW+rH,GACjDviI,EAAQja,YAAa62D,EAAAA,GAAAA,IAA2B2lF,QAC7C,GAAI11I,EAAOuE,OAAQ,CAEtB,IAAIqzI,EADJD,GAAW,EAEP33I,EAAOuE,OAAO0K,MACd2oI,EAA0B53I,EAAOuE,OAAO0K,OAExC2oI,EAA0B53I,EAAOuE,OAAOrL,YACpCywB,EAAAA,EAAAA,IAAWiuH,KAA6BvwF,GAAAA,EAAAA,UAA0BuwF,KAClEA,EAA0BA,EAAwB,MAG1DzkI,EAAQja,YAAa62D,EAAAA,GAAAA,IAA2B6nF,OAC7C,CACH,IAAIC,EAAcj/I,MAAM2iB,QAAQ7F,GAASA,EAAM+D,OAAS,EAAI,EAC5DggB,EAAKq+G,eAAiB93I,EACtB,IAAIyV,EAASgkB,EAAKlG,gBAAgB65B,oBAClC3zB,EAAKq+G,eAAiB,KACtB3kI,EAAQja,WAAa,CACjBuc,OAAQA,EACRC,MAAOA,EACPqiI,kBAAkB,EAClB9nF,KAAM,SAAS98C,GACX,IAAI8L,EAAI,IAAIC,EAAAA,GAcZ,OAbA/L,EAAQ/P,UAAYpD,EAAOoD,WAAapD,EAAOmB,KAC/CjI,EAAW+2D,KAAK98C,GAAS+M,MAAM,SAAS3e,GACpC,IAAIy2I,EAAkB/hH,GAAkB4gH,GAAY72I,EAAO6/C,sBAAwBg4F,EAAc,EAC7FG,IACAz2I,EAAOq1I,GAA0Br1I,EAAMvB,IAE3Cy5B,EAAKs/D,mBAAmBx3F,EAAM,KAAM,KAAM,CACtCk2I,MAAOI,EACP73I,OAAQA,EACR21I,oBAAqBA,IAEzB12H,EAAEe,QAAQze,MACV0e,KAAKhB,EAAEa,QACJb,KAIf0K,EAAAA,EAAAA,IAAW+rH,IACXA,EAAuB33H,KAAK/d,EAAQmT,GAExC,IAAI8kI,EAAkB9kI,EAAQja,WAAW2kG,YAkBzC,OAjBA1qF,EAAQja,WAAW2kG,YAAc,SAASt8F,GACtC,IAAI0N,EAAQ1N,EAcZ,OAbIo2I,IACI,IAAM9lJ,KAAKsiB,aAAgBtiB,KAAK47F,gBAChCx+E,EAAQA,EAAM2M,MAAM,GACpB3M,EAAM4vC,QAAQ,OAElBplB,EAAKs/D,mBAAmB9pF,EAAO,KAAM,KAAM,CACvCwoI,MAAO,EACPz3I,OAAQA,EACR21I,oBAAqBA,KAG7B1mI,EAAQgpI,GAAmBA,EAAgBl6H,KAAKlsB,KAAMod,IAAUA,EAChEwqB,EAAKu9G,qBAAqB/nI,EAAOjP,GAC1BiP,GAEJkE,EAAQja,aAEnBg/I,iBAAkB,WACd,OAAOrmJ,KAAKimJ,gBAEhBt+F,qBAAsB,SAASnoB,EAAa8mH,GACxC,IAAIr2G,EAAoBjwC,KAAK62C,mBACzB1oC,GAASyd,EAAAA,EAAAA,IAAO,EAAM,GAAI5rB,KAAK62C,mBAAmB3F,aAAa1R,IACnE,GAAIrxB,EAAQ,CACR,IAAIqF,EAAey8B,EAAkB0H,gBAAgBnY,GACjD4/C,EAAOknE,EAAetmJ,KAAK+lC,QAAQ,eAAiB/lC,KAAK+lC,QAAQ,qBACjEw9G,EAAiBA,GAAkBnkE,EAAKhuC,oBAAoBlM,GAAGohH,EAAen4I,EAAOmE,WAAakB,GACtGxT,KAAKumJ,yBAAyB,CAC1BC,cAAejD,EACfp1I,OAAQA,EACRmO,aAAa,EACbmX,MAAO,WACHwc,EAAkByQ,aAAalhB,EAAa,CACxCztB,aAAc/R,KAAK+R,aACnBD,WAAY9R,KAAK8R,kBAMrCy0I,yBAA0B,SAASjlI,GAC/B,IAAIsmB,EAAO5nC,KACPmO,EAASmT,EAAQnT,OACrB,GAAIA,EAAQ,CACR,IAAI8G,EAAgB0oD,EAAAA,iBAA6BxvD,GAC7C9G,EAAaugC,EAAKlG,gBAAgBr6B,aAClC40D,EAAkB50D,GAAcA,EAAW2E,mBAAmBmX,WAClEyI,EAAAA,EAAAA,GAAOtK,EAASnT,EAAQ,CACpBW,KAAMmG,GAAiBA,EAAc2S,OAAS,EAAI,OAAS,OAC3Dq0C,gBAAiBA,EACjB1hD,UAAW,SAAS+rB,GAChB,IAAImgH,EAAsBngH,EAAER,UAAU02D,kBAAkBkqD,YAAY,YACpED,GAAuBA,EAAoBlkH,OAAO,eAAgB,SAAS+D,GACvE,IAAI2J,EAAoBrI,EAAKyC,cAAc,WACvCs8G,EAAuB12G,EAAkByQ,aAAap/B,EAAQ/P,UAAW,gBAC7Eo1I,EAAuBA,GAAwB,GAC/CA,EAAqBn5I,MAAQ84B,EAAE94B,MAC/Bm5I,EAAqBj+I,OAAS49B,EAAE59B,OAChCunC,EAAkByQ,aAAap/B,EAAQ/P,UAAW,eAAgBo1I,GAAsB,OAGhGzsI,SAAU,IAAMqqC,GAAavkD,QAEjCshB,EAAQja,WAAaugC,EAAK8iC,cAAcppD,GACpCA,EAAQ0hI,kBACR1hI,EAAQja,WAAWuc,OAAS,KAC5BtC,EAAQrR,UAAY,SAExB23B,EAAKs9G,kBAAkBv9F,qBAAqBrmC,EAAQklI,cAAellI,KAG3EgiI,qBAAsB,WAClBtjJ,KAAKklJ,kBAAkB5B,0BAG3BsD,IAAwCh7H,EAAAA,EAAAA,GAAO,GAAI24H,GAAmB,CACtEloG,mBAAoB,SAAS3L,EAAOpvB,GAChC,IAAIkjI,EACAr2I,EAASmT,EAAQnT,QAChBA,EAAOk5B,SAAW92B,GAAqBpC,IAAWnO,KAAKuiC,OAAO,yBAA2B,WAAajhB,EAAQwiB,UAC/G0gH,EAAyBxkJ,KAAKqvC,kBAAkB,CAC5C//B,KAAM,eACNqgC,YAAae,EACbviC,OAAQA,EACRrB,gBAAiB9M,KAAKuiC,OAAO,qBAEjCiiH,GAA0BxkJ,KAAK6mJ,2BAA2BrC,EAAwBr2I,EAAQ,iBAE9FnO,KAAKs6B,SAASoW,EAAOpvB,IAEzBulI,2BAA4B,SAAS/1G,EAAY3iC,EAAQ8iC,GACrD,IAAIrJ,EAAO5nC,KACP,iBAAmBixC,GACnBrK,EAAAA,EAAAA,GAAgBkK,EAAYqC,GAAAA,EAAgBvL,EAAKiC,cAAc,SAASvD,GACpEA,EAAEmE,MAAMo1C,kBACRj4C,EAAKyC,cAAc,gBAAgBsd,qBAAqBx5C,EAAOic,OAAO,QAIlFinB,iBAAkB,SAASX,EAAOviC,EAAQ8iC,GACtC,IAAIH,EAAa9wC,KAAKs6B,SAASoW,EAAOviC,EAAQ8iC,GAC9CH,GAAc9wC,KAAK6mJ,2BAA2B/1G,EAAY3iC,EAAQ8iC,IAEtE61G,8BAA+B,WACvB9mJ,KAAKuiC,OAAO,yBACZviC,KAAKgxC,kBAAkB,iBAG/B+1G,4BAA6B,WACzB,OAAO,GAEX3pG,qBAAsB,SAAS9W,GAC3B,IAAI+W,EAAc/W,EAAE+W,YAChBnO,EAAAA,aAA2BmO,EAAa,CAAC,eAAgB,eACrDr9C,KAAK+mJ,+BACL/mJ,KAAK8mJ,gCAIb9mJ,KAAKs6B,SAASgM,MAGlB0gH,IAAkCp7H,EAAAA,EAAAA,GAAO,GAAI24H,GAAmB,CAChEjvE,sBAAuB,SAASC,EAAc9vD,GAC1C,IAEI++H,EAFA58G,EAAO5nC,KACPw1E,EAAQ5tC,EAAKtN,SAAS7G,MAAMmU,EAAMvc,WAmBtC,OAjBK5F,EAAY4hB,SAAW92B,GAAqBkV,IAAgBmiB,EAAKrF,OAAO,0BACzEiiH,EAAyB58G,EAAKyH,kBAAkB,CAC5C//B,KAAM,eACNqgC,YAAa6lC,EACbrnE,OAAQ,CACJ8B,WAAWsgC,EAAAA,EAAAA,GAAoB3I,EAAKrF,OAAO,eAC3CxwB,aAAc0T,EAAY1T,aAC1BxB,sBAAsB,GAE1BzD,iBAAiB,IAErB03I,GAA0B59G,EAAAA,EAAAA,GAAgB49G,EAAwBrxG,GAAAA,EAAgBvL,EAAKiC,cAAc,SAASvD,GAC1G,IAAImE,EAAQnE,EAAEmE,MACdA,EAAMo1C,kBACNj4C,EAAKyC,cAAc,gBAAgBsd,qBAAqBliC,EAAY2E,OAAO,QAG5EorD,KAMf,IAAIurE,GAAkC,CAClCC,2BAA4B,WACxB,OAAO,GAEXl2E,2BAA4B,WACxB,GAAI9qE,KAAKghJ,6BACL,OAAOhhJ,KAAKs6B,WAEhB,IAAI2I,EAAU,CAACjjC,KAAKs6B,YAChBxzB,EAAU9G,KAAK62C,mBAAmBC,kBAAkB,MAAM,GAC1D0Q,EAAyBxnD,KAAKqqC,cAAc,gBAC5CmkB,EAAgBhH,EAAuB6+F,mBA0B3C,OAzBAj1H,EAAAA,EAAAA,IAAKtqB,GAAU,SAASktB,EAAG7lB,GACvB,IAAIyV,EACJ,KAAI4qC,GAAiBA,EAAcpkC,QAAUjc,EAAOic,QAGhD7Z,GAAqBpC,IAAWA,EAAO8C,2BAA6BlK,MAAM2iB,QAAQvb,EAAO4D,eAAiB5D,EAAO4D,aAAa6V,OAAQ,CACtI,IAAI7V,EAAe,IACnBqf,EAAAA,EAAAA,IAAKjjB,EAAO4D,cAAe,SAASiiB,EAAG/rB,GAC/BlB,MAAM2iB,QAAQzhB,GACd2b,EAAS3b,GAELkG,EAAO4/C,mBAAqB7e,EAAAA,WAAyB/gC,EAAOqD,WAAa,WAAarD,EAAOqD,WAC7FvJ,EAAckG,EAAO4/C,iBAAiB9lD,IAE1C2b,EAASzV,EAAOyvD,uBAAuB31D,EAAa,IAAK,iBAEzD2b,IACAA,EAAO4b,YAAcrxB,EAAOic,OAEhCrY,EAAasW,KAAKzE,MAEtB7R,EAAem9B,EAAAA,eAA6Bn9B,EAAc,MAC1DkxB,EAAQ5a,KAAK,YAAcla,EAAO2D,WAAa,CAAC,IAAKC,GAAgBA,OAGtEm9B,EAAAA,eAA6BjM,KAGjCgkH,GAAqB,CAC5B/gG,eAAgB,WACZ,MAAO,CACHz9C,aAAc,CACV8E,SAAS,EACTC,MAAO,IACP9E,OAAQ,IACRiI,aAAa,EACb8D,cAAe,IACfE,MAAO,CACHkB,WAAY4zB,EAAAA,EAAAA,OAA2B,qCACvC3zB,GAAI2zB,EAAAA,EAAAA,OAA2B,6BAC/B7zB,OAAQ6zB,EAAAA,EAAAA,OAA2B,qCAKnDuE,YAAa,CACTvlC,aAAcw8I,IAElB/2G,MAAO,CACHg5G,iBAAkBxE,IAEtBt0G,UAAW,CACPJ,YAAa,CACTt+B,KAAMqxI,IAEV7yG,MAAO,CACHiY,kBAAmBygG,GACnBhxE,YAAaoxE,MCtdzBjF,GAAAA,eAAoB,eAAgBkF,ICApC,IAAIE,GAA6B,yBAC7BC,GAAmCD,GAA6B,SAChEE,GAAiCF,GAA6B,OAC9DG,GAAuCH,GAA6B,aACpEI,GAAY,IAEhB,SAAS9xI,GAAe+xI,EAAeluI,GACnC,IAAImuI,GAAe5lH,EAAAA,EAAAA,GAAE,SAASC,SAASslH,IACnCM,GAAa7lH,EAAAA,EAAAA,GAAE,SAASC,SAASulH,IACjC3rH,EAAS8rH,EAAclnJ,OAAS,GAChCqnJ,EAAgB,SAASjsH,GACzB,OAAOA,GAAUA,EAAO9T,OAAS,EAAI8T,EAAO,GAAK,MAEjDksH,EAAc,SAASlsH,GACvB,OAAOA,GAAU,IAAMA,EAAO9T,OAAS8T,EAAO,GAAK,MAEvDpiB,EAAUy3B,OAAO02G,GACjBnuI,EAAUy3B,QAAOlP,EAAAA,EAAAA,GAAE,UAAUC,SAASwlH,IAAsC73I,KAAK83I,KACjFjuI,EAAUy3B,OAAO22G,GACjBpuI,EAAUwoB,SAASqlH,IACnBnnJ,KAAK6nJ,eAAe5wD,aAAa/qE,KAAKlsB,KAAMynJ,GAAc77H,EAAAA,EAAAA,GAAO,GAAI47H,EAAcruI,MAAOquI,EAAe,CACrGlnJ,MAAOqnJ,EAAcjsH,GACrBw7D,WAAY,gBACZC,SAAU,SAAS72F,GACfo7B,EAAS,CAACp7B,EAAOsnJ,EAAYlsH,IAC7B8rH,EAAcrwD,SAASz7D,OAG/B17B,KAAK6nJ,eAAe5wD,aAAa/qE,KAAKlsB,KAAM0nJ,GAAY97H,EAAAA,EAAAA,GAAO,GAAI47H,EAAcruI,MAAOquI,EAAe,CACnGlnJ,MAAOsnJ,EAAYlsH,GACnBw7D,WAAY,gBACZC,SAAU,SAAS72F,GACfo7B,EAAS,CAACisH,EAAcjsH,GAASp7B,GACjCknJ,EAAcrwD,SAASz7D,OAI5B,SAASosH,GAAU12I,EAASqpD,GAC/B,MAAO,CACHnrD,KAAM,UACN8B,QAASA,EACT/B,KAAM,QACN04I,eAAgBR,GAChB/xI,UAAW,CAAC,SAAU,OAAQ,YAC9BC,eAAgBA,GAAe6uB,KAAKm2B,GACpCutF,cAAc,GCjDtB,IAAI3L,GAAkB,CAClB,IAAK,QACL,KAAM,WACN,IAAK,OACL,KAAM,cACN,IAAK,UACL,KAAM,iBACN1mH,YAAa,iBACbta,SAAU,WACVma,WAAY,aACZC,SAAU,WACVwyH,QAAS,UACTC,WAAY,cAEZC,GAAiB,CACjB,IAAK,QACL,KAAM,WACN,IAAK,WACL,KAAM,kBACN,IAAK,cACL,KAAM,qBACN3yH,WAAY,aACZna,SAAU,WACVsa,YAAa,cACbF,SAAU,WACVwyH,QAAS,UACTC,WAAY,aACZ9sI,QAAS,WAEb,IACIgtI,yBAA0B,SAASC,GAC/B,OAAOhM,GAAgBgM,IAE3BC,yBAA0B,SAASD,GAC/B,OAAOF,GAAeE,KCF1BE,GAAoB,SACpBC,GAAkB,YAClBC,GAAsB,MACtBC,GAAkB,IAClBC,GAAsB,KACtBn9F,GAAsB,CACtBC,OAAQ,CAAC,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,UAAW,cACrDC,OAAQ,CAAC,WAAY,cAAe,aAAc,WAAY,IAAK,KAAM,UAAW,cACpF1jC,KAAM,CAAC,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,UAAW,cACnD2jC,SAAU,CAAC,IAAK,KAAM,IAAK,IAAK,KAAM,KAAM,UAAW,cACvDi9F,QAAS,CAAC,IAAK,KAAM,UAAW,cAChCC,OAAQ,CAAC,UAAW,eAEpBC,GAAiB,CACjB9gI,KAAM,YACN2jC,SAAU,sBAEVo9F,GAAoB,CAAC,IAAK,KAAM,UAAW,cAC3CC,GAA6B,CAAC,UAAW,gBAAiB,YAAa,WAAY,iBAAkB,YAAa,gBAAiB,mBAAoB,SAAU,SAAU,WAAY,4BAA6B,QACpNC,GAAuB,mBACvBC,GAAiCD,GAAuB,QACxDE,GAAsCD,GAAiC,QACvEE,GAA2CF,GAAiC,aAC5EG,GAAiDD,GAA2C,SAEhG,SAASE,GAAsBnwI,EAAO7Y,GAClC,IAAIipJ,EAAcpwI,EAAMjH,QAAU42I,GAAe3vI,EAAM3H,UACvD,OAAO2uB,EAAAA,EAAAA,OAAoB7/B,EAAOipJ,GAGtC,SAASC,GAAgB3lI,GACrB,OAAOA,GAASA,EAAM+D,OAAS,GAAK,MAAQ/D,EAAM,KAAO4lI,GAAY5lI,GAElE,SAAS6lI,GAAiB7lI,GAC7B,OAAO2lI,GAAgB3lI,GAASA,EAAM,GAAKA,EAG/C,SAAS8lI,GAAiB9lI,EAAOiS,GAM7B,OALI0zH,GAAgB3lI,GAChBA,EAAM,GAAKiS,EAEXjS,EAAQiS,EAELjS,EAGX,SAAS+lI,GAA2B/lI,EAAOvjB,IACnC,SAASA,GACL,OAAQ,IAAMA,EAAM+pB,QAAQ,KADhC,CAEE/pB,GAQKkpJ,GAAgB3lI,IACrB,SAASA,GACP,IAAIiS,EAAW4zH,GAAiB7lI,GAChCA,EAAM+D,OAAS,EACf,GAAGS,KAAKoL,MAAM5P,EAAOiS,GAHvB,CAIAjS,GAZG2lI,GAAgB3lI,IACf,SAASA,GACP,IAAIiS,EAAWjS,EAAMkG,MAAM,GAC3BlG,EAAM+D,OAAS,EACf/D,EAAMwE,KAAK,IAAKyN,GAHlB,CAIAjS,GAUP,SAASgmI,GAAchmI,EAAOvjB,GACjCspJ,GAA2B/lI,EAAOvjB,GAClC,IACIu3B,EADA/B,EAAW4zH,GAAiB7lI,GAYhC,OAVAvjB,EAAQ,SAASA,GACb,OAAQ,IAAMA,EAAM+pB,QAAQ,KAAO/pB,EAAQA,EAAMwpJ,UAAU,GADvD,CAENxpJ,GACA,SAASw1B,EAAUx1B,GACjB,IAAKu3B,EAAI,EAAGA,EAAI/B,EAASlO,OAAQiQ,IACxB9wB,MAAM2iB,QAAQoM,EAAS+B,MACxB/B,EAAS+B,GAAKv3B,GAHxB,CAMAw1B,EAAUx1B,GACLujB,EAEJ,SAASkmI,GAAiBlmI,EAAOmmI,GACpC,IAAIC,EAAaC,GAAcrmI,GAC/B,OAAOmmI,EAAgBpmI,QAAQ,SAASqD,GACpC,OAAOA,EAAK3mB,QAAU2pJ,KACtB,GAGR,SAASE,GAAqBr0H,GAC1B,GAAI2zH,GAAY3zH,GACZ,OAAO2yH,GAGX,IADA,IAAInoJ,EAAQ,GACHu3B,EAAI,EAAGA,EAAI/B,EAASlO,OAAQiQ,IAAK,CACtC,IAAI5Q,EAAO6O,EAAS+B,GACpB,IAAK9wB,MAAM2iB,QAAQzC,GAAO,CACtB,GAAI3mB,GAASA,IAAU2mB,EACnB,MAAM,IAAIw9E,GAAAA,GAAAA,MAAiB,SAE3B,MAAQx9E,IACR3mB,EAAQ2mB,IAIpB,OAAO3mB,EAEJ,SAAS4pJ,GAAcrmI,GAC1B,IAAIiS,EAAW4zH,GAAiB7lI,GAC5BvjB,EAAQ6pJ,GAAqBr0H,GAOjC,OANKx1B,IACDA,EAAQmoJ,IAER3yH,IAAajS,IACbvjB,EAAQ,IAAMA,GAEXA,EAGX,SAAS8pJ,GAA2BjxI,GAChC,OAAOA,EAAMzG,QAAUq2I,IAAqBv9F,GAAoBryC,EAAM3H,UAAY+2I,IAGtF,SAAS8B,GAAaC,GAClB,OAAOvjJ,MAAM2iB,QAAQ4gI,IAAWA,EAAO1iI,OAEpC,SAAS2iI,GAAoBpxI,GAChC,IAAI6P,EAASqhI,GAAalxI,EAAMtH,kBAAoBsH,EAAMtH,iBAAmBu4I,GAA2BjxI,GACxG,OAAOyS,EAAAA,EAAAA,GAAO,GAAI5C,GAEf,SAASwhI,GAAsBtnH,EAAWvqB,GAC7C,IAAIurD,EAAgBumF,GAAAA,yBAAoDvnH,GACxE,OAAOvqB,GAA+BA,EAA4BurD,GAAiBvrD,EAA4BurD,GAAiBA,EAE7H,SAASwmF,GAA0BxnH,EAAWynH,GACjD,IAAK,IAAI9yH,EAAI,EAAGA,EAAI8yH,EAAoB/iI,OAAQiQ,IAC5C,GAAI8yH,EAAoB9yH,GAAGv3B,QAAU4iC,EACjC,OAAOynH,EAAoB9yH,GAGnC,MAAM,IAAIlM,EAAAA,EAAAA,MAAa,QAASuX,GAE7B,SAAS0nH,GAAmBnyI,EAAkBnJ,GACjD,IAAIu7I,EAAqBpyI,EAAiBmL,QAAQ,SAASqD,GACvD,OAAOA,EAAK3X,OAASA,KAEzB,OAAOu7I,EAAmBjjI,OAASijI,EAAmB,GAAK,KAExD,SAASC,GAAuB3xI,EAAOR,EAA6BF,GACvE,IAAI5G,EAAmB04I,GAAoBpxI,GACvC4xI,IAAkB5xI,EAAMzG,OAU5B,OATA+F,EAAiBojC,SAAS,SAAS3iC,GAC/B,IAAKC,EAAMtH,mBAAqB,IAAMA,EAAiBwY,QAAQnR,EAAgB5J,MAAO,CAClF,IAAIkG,EAAY0D,GAAmBA,EAAgB1D,UAC/Cw1I,IAAuBD,KAAkB7xI,EAAgB8uI,cACxDgD,GAAwBx1I,GAAaA,EAAU6U,QAAQlR,EAAM3H,UAAY+2I,KAAsB,GAChG12I,EAAiBwW,KAAKnP,EAAgB5J,UAI3CuC,EAAiBmgB,KAAK,SAASkR,GAClC,IAAIhqB,EAAkB0xI,GAAmBnyI,EAAkByqB,GAC3D,OAAIhqB,EACO,CACH7J,KAAM6J,EAAgB7J,MAAQm5I,GAC9B/4I,KAAMyJ,EAAgB9H,UAAWgsD,EAAAA,GAAAA,IAAWlkD,EAAgB5J,MAC5DhP,MAAO4Y,EAAgB5J,KACvB27I,UAAU,GAGP,CACH57I,KAAMo7I,GAAAA,yBAAoDvnH,IAAcslH,GACxE/4I,KAAM+6I,GAAsBtnH,EAAWvqB,GACvCrY,MAAO4iC,MAKhB,SAASgoH,GAAoB/xI,GAChC,OAAOA,EAAMd,wBAA0BkyI,GAAoBpxI,GAAO,GAE/D,SAASgyI,GAAgBhyI,EAAOV,GACnC,IAAIolB,EAAY,CAAC1kB,EAAM5H,UAAW,GAAI,IAClC82I,EAAkB6C,GAAoB/xI,GAE1C,OADAiyI,GAA2BvtH,EAAWwqH,EAAiB5vI,GAChDolB,EAEJ,SAASwtH,GAAWxnI,EAAOoD,GAC9B,IAAI6O,EAAW4zH,GAAiB7lI,GAC5BuG,EAAQ0L,EAASzL,QAAQpD,GAK7B,OAJA6O,EAASknB,OAAO5yB,EAAO,GACnB,IAAM0L,EAASlO,QACfkO,EAASknB,OAAO5yB,EAAO,GAEpBvG,EAEJ,SAASynI,GAAiBhrJ,GAC7B,IAAIirJ,EAAaC,GAAyBlrJ,GACtCmrJ,EAAiBF,EAAaG,GAAuCprJ,GAASA,EAClF,OAAOirJ,EAAa,CAAC,IAAK,CAACE,IAAmB,CAACA,GAY5C,SAASE,GAAQ1kI,EAAMpD,GAC1B,IAAIiS,EAAW4zH,GAAiB7lI,GAC5BomI,EAAaC,GAAcp0H,GAE/B,OADA,IAAMA,EAASlO,OAASkO,EAASk3B,QAAQ/lC,GAAQ6O,EAASzN,KAAKpB,EAAMgjI,GAC9DpmI,EAEJ,SAAS+nI,GAASr6I,EAAWmH,GAChC,IAAK,IAAImf,EAAI,EAAGA,EAAInf,EAAOkP,OAAQiQ,IAAK,CACpC,GAAInf,EAAOmf,GAAGvoB,OAASiC,EACnB,OAAOmH,EAAOmf,GAElB,GAAInf,EAAOmf,GAAGtmB,UAAU8a,gBAAkB9a,EAAU8a,cAChD,OAAO3T,EAAOmf,GAGtB,IAAIg0H,EAAiBC,GAASpzI,GAAQ,GAAMkL,QAAQ,SAASqD,GACzD,OAAOA,EAAK1V,UAAU8a,gBAAkB9a,EAAU8a,iBAEtD,GAAIw/H,EAAejkI,OAAS,EACxB,OAAOikI,EAAe,GAE1B,MAAM,IAAIlgI,EAAAA,EAAAA,MAAa,QAASpa,GAE7B,SAASylE,GAAQlhD,GACpB,QAAK/uB,MAAM2iB,QAAQoM,KAGZA,EAASlO,OAAS,GAAK7gB,MAAM2iB,QAAQoM,EAAS,KAAO/uB,MAAM2iB,QAAQoM,EAAS,KAEhF,SAAS2zH,GAAY3zH,GACxB,QAAK/uB,MAAM2iB,QAAQoM,KAGZA,EAASlO,OAAS,IAAM7gB,MAAM2iB,QAAQoM,EAAS,MAAQ/uB,MAAM2iB,QAAQoM,EAAS,KAGzF,SAASi2H,GAAoBloI,EAAOpL,EAAkBuzI,GAClDA,EAAwBA,GAAyBvD,GAGjD,IAFA,IAAIgD,EAAiBtB,GAAqBtmI,GAAOwI,eAAiB2/H,EAC9DC,EAAa,GACRp0H,EAAI,EAAGA,EAAIhU,EAAM+D,OAAQiQ,IAC1Bm/C,GAAQnzD,EAAMgU,KACdo0H,EAAW5jI,KAAK6jI,GAAwBroI,EAAMgU,GAAIpf,EAAkBuzI,IACpEC,EAAaE,GAA4BF,EAAYR,IAC9ChC,GAAY5lI,EAAMgU,MACzBo0H,EAAW5jI,KAAK+jI,GAAwBvoI,EAAMgU,GAAIpf,IAClDwzI,EAAaE,GAA4BF,EAAYR,IAM7D,OAHI,IAAMQ,EAAWrkI,SACjBqkI,EAAaE,GAA4BF,EAAYR,IAElDQ,EAGX,SAASI,GAA4BxuH,EAAWplB,GAC5C,IAAIS,EAAkB0xI,GAAmBnyI,EAAkBolB,EAAU,IACrE,OAAO3kB,GAAmBA,EAAgB5J,OAASuuB,EAAU,GAGjE,SAASuuH,GAAwBvuH,EAAWplB,GACxC,OAAI4zI,GAA4BxuH,EAAWplB,IAGvColB,EAAUjW,OAAS,IACnBiW,EAAU,GAAKA,EAAU,GACzBA,EAAU,GAAK6qH,IAJR7qH,EASf,SAAS2tH,GAAyBtoH,GAC9B,OAAQ,IAAMA,EAAU7Y,QAAQ,OAGpC,SAASqhI,GAAuCxoH,GAC5C,OAAOA,EAAU4mH,UAAU,GAAGz9H,cAGlC,SAASigI,GAA+Bx2H,EAAU21H,GAC9C,IAAIF,EAAaC,GAAyBC,GAE1C,OADAA,EAAiBF,EAAaG,GAAuCD,GAAkBA,EAChFF,EAAa,CAAC,IAAKz1H,EAAU21H,GAAkB,CAAC31H,EAAU21H,GAGrE,SAASU,GAA4BtoI,EAAO4nI,GACxC,IAAIF,EAAaC,GAAyBC,GAC1CA,EAAiBF,EAAaG,GAAuCD,GAAkBA,EACvF5nI,EAAMwE,KAAKojI,GACX,IAAIziI,EAASnF,EAIb,OAHI0nI,IACAviI,EAAS,CAAC,IAAKA,IAEZA,EAEJ,SAASkjI,GAAwB5rJ,EAAOmY,EAAkBuzI,GAE7D,OADAA,EAAwBA,GAAyBvD,GAC5CnoJ,GAGLA,GAAQsrB,EAAAA,EAAAA,IAAO,EAAM,GAAItrB,GACrBmpJ,GAAYnpJ,GACLgsJ,GAA+BF,GAAwB9rJ,EAAOmY,GAAmBuzI,GAExFxC,GAAgBlpJ,GACT,CAAC,IAAKmpJ,GAAYnpJ,EAAM,IAAMgsJ,GAA+BF,GAAwB9rJ,EAAM,GAAImY,GAAmBuzI,GAAyBxC,GAAgBlpJ,EAAM,IAAMgsJ,GAA+BJ,GAAwB5rJ,EAAM,GAAImY,GAAmBuzI,GAAyBD,GAAoBzrJ,EAAM,GAAImY,EAAkBuzI,IAExUD,GAAoBzrJ,EAAOmY,EAAkBuzI,IATzCV,GAAiBU,GAWzB,SAASO,GAAoB7zI,GAChC,OAAOA,EAAOswC,QAAQ,SAAShgC,EAAQ7P,GACnC,IAAIsX,EAAAA,EAAAA,IAAUtX,EAAM5H,WAAY,CAC5B,IAAIi7I,EAAkB,GACtB,IAAK,IAAI9gI,KAAOvS,EACRA,EAAMuS,IAAQs9H,GAA2B3+H,QAAQqB,IAAQ,IACzD8gI,EAAgB9gI,GAAOvS,EAAMuS,IAGrC8gI,EAAgB1uH,iCAAmC6/B,EAAAA,kCAC9CltC,EAAAA,EAAAA,IAAU+7H,EAAgBh7I,YAC3Bg7I,EAAgBh7I,SAAW+2I,KAE1B93H,EAAAA,EAAAA,IAAU+7H,EAAgBl5I,YAC3Bk5I,EAAgBl5I,SAAWm2B,EAAAA,EAAAA,OAA2B,yBAErDhZ,EAAAA,EAAAA,IAAU+7H,EAAgB56I,aAC3B46I,EAAgB56I,UAAY63B,EAAAA,EAAAA,OAA2B,yBAE3DzgB,EAAOX,KAAKmkI,GAEhB,OAAOxjI,IACP,IAGR,SAASyjI,GAA6B5uH,EAAWnlB,EAAQD,EAAkBokB,GACvE,IAAI1jB,EAAQyyI,GAAS/tH,EAAU,GAAInlB,GAC/Bg0I,EAAmBN,GAAwBvuH,EAAWplB,GACtDS,EAAkBT,EAAiBmP,QAAUgjI,GAAmBnyI,EAAkBi0I,EAAiB,IACvG,OAAIxzI,GAAmBA,EAAgBjI,0BAC5BiI,EAAgBjI,0BAA0BwiB,MAAMva,EAAiB,CAACwzI,EAAiB,GAAIvzI,EAAOT,IAC9FS,EAAMykD,uBACNzkD,EAAMykD,uBAAuBnqC,MAAMta,EAAO,CAACuzI,EAAiB,GAAIA,EAAiB,GAAI7vH,IACrF1jB,EAAMlI,0BACNkI,EAAMlI,0BAA0BwiB,MAAMta,EAAO,CAACuzI,EAAiB,GAAIA,EAAiB,GAAI7vH,IAExF1jB,EAAM2kB,iCAAiCrK,MAAMta,EAAO,CAACuzI,EAAiB,GAAIA,EAAiB,GAAI7vH,IAGvG,SAAS8vH,GAAoBrsJ,EAAOoY,EAAQD,EAAkBokB,GACjE,KAAKpM,EAAAA,EAAAA,IAAUnwB,GACX,OAAO,KAEX,GAAIkpJ,GAAgBlpJ,GAAQ,CACxB,IAAIosJ,EAAmBC,GAAoBrsJ,EAAM,GAAIoY,EAAQD,EAAkBokB,GAC/E,MAAO,CAAC,IAAK6vH,GAEjB,IAAI52H,EAAW4zH,GAAiBppJ,GAChC,GAAImpJ,GAAY3zH,GACZ,OAAO22H,GAA6B32H,EAAUpd,EAAQD,EAAkBokB,IAAW,KAKnF,IAHA,IACI+vH,EADA5jI,EAAS,GAETihI,EAAaC,GAAcp0H,GACtB+B,EAAI,EAAGA,EAAI/B,EAASlO,OAAQiQ,IAC7Bm/C,GAAQlhD,EAAS+B,KACjB+0H,EAAoBD,GAAoB72H,EAAS+B,GAAInf,EAAQD,EAAkBokB,GAC3E+vH,IACA/0H,GAAK7O,EAAOX,KAAK4hI,GACjBjhI,EAAOX,KAAKukI,KAETnD,GAAY3zH,EAAS+B,MAC5B+0H,EAAoBH,GAA6B32H,EAAS+B,GAAInf,EAAQD,EAAkBokB,GACpF+vH,IACA5jI,EAAOpB,QAAUoB,EAAOX,KAAK4hI,GAC7BjhI,EAAOX,KAAKukI,KAOxB,OAHI,IAAM5jI,EAAOpB,SACboB,EAASA,EAAO,IAEbA,EAAOpB,OAASoB,EAAS,KAGjC,SAAS6jI,GAAoBhpI,GAChC,IACIgU,EADA/B,EAAW4zH,GAAiB7lI,GAEhC,GAAI,IAAMiS,EAASlO,OACf,OAAO,KAEX,IAAIklI,EAAiB,GACrB,IAAKj1H,EAAI,EAAGA,EAAI/B,EAASlO,OAAQiQ,IAC7B,GAAIm/C,GAAQlhD,EAAS+B,IAAK,CACtB,IAAIk1H,EAAuBF,GAAoB/2H,EAAS+B,IACpDk1H,EACAj3H,EAAS+B,GAAKk1H,EAEdD,EAAezkI,KAAKyN,EAAS+B,SAE1B4xH,GAAY3zH,EAAS+B,MACvBm1H,GAAiBl3H,EAAS+B,KAC3Bi1H,EAAezkI,KAAKyN,EAAS+B,KAIzC,IAAKA,EAAI,EAAGA,EAAIi1H,EAAellI,OAAQiQ,IACnCwzH,GAAWv1H,EAAUg3H,EAAej1H,IAExC,OAAI,IAAM/B,EAASlO,OACR,MAEXkO,EAASknB,OAAOlnB,EAASlO,OAAS,EAAG,GACjC,IAAMkO,EAASlO,SACf/D,EAAQ8lI,GAAiB9lI,EAAOiS,EAAS,KAEzC,IAAMjS,EAAM+D,OACL,KAEJ/D,GAEJ,SAASopI,GAA0B9zI,EAAO7Y,EAAO8/H,GACpD,GAAI,KAAO9/H,EAAX,CAIA,IAAIoS,EAASyG,EAAMzG,OACnB,GAAIA,EAAO0K,MACPgjH,EAAQ1tH,EAAO3B,mBAAmBzQ,IAAU,QACzC,CACH,IAAI4sJ,GAAmBp1H,EAAAA,EAAAA,IAAWplB,EAAOrL,YAAcqL,EAAOrL,WAAW,IAAMqL,EAAOrL,WAClFA,EAAa,IAAI6f,GAAAA,EAAWgmI,GAChC7lJ,EAAW8lJ,WAAWz6I,EAAO2C,UAAW/U,GAAO+tB,MAAM,SAASrF,GAC1D,IAAIkX,EAAY,GACZlX,IACAkX,EAAYxtB,EAAO0C,aAAc48C,EAAAA,EAAAA,IAAct/C,EAAO0C,YAArB48C,CAAkChpC,GAAUA,GAE7E7P,EAAM7H,gBACN4uB,EAAY/mB,EAAM7H,cAAc,CAC5BhR,MAAOA,EACP4/B,UAAWA,KAGnBkgG,EAAQlgG,MACR9R,MAAM,WACNgyG,EAAQ,aAtBZA,EAAQ,IA2BhB,SAASgtB,GAAsBj0I,EAAO7Y,EAAO4Y,EAAiB2jB,EAAQvb,GAClE,IAAI4e,EAuBJ,OArBIA,GADA,IAAS5/B,EACG6Y,EAAM7F,UAAYm2B,EAAAA,EAAAA,OAA2B,wBAClD,IAAUnpC,EACL6Y,EAAMvH,WAAa63B,EAAAA,EAAAA,OAA2B,wBAE9C6/G,GAAsBnwI,EAAO7Y,GAEzC6Y,EAAM7H,gBACN4uB,EAAY/mB,EAAM7H,cAAc4a,KAAK/S,EAAO,CACxC7Y,MAAOA,EACP4/B,UAAWA,EACXrD,OAAQA,KAGZ3jB,GAAmBA,EAAgB5H,gBACnC4uB,EAAYhnB,EAAgB5H,cAAc4a,KAAKhT,EAAiB,CAC5D5Y,MAAOA,EACP4/B,UAAWA,EACX/mB,MAAOA,EACP0jB,OAAQA,GACTvb,IAEA4e,EAGX,SAASmtH,GAAkBl0I,EAAO7Y,EAAO4Y,EAAiB2jB,GACtD,IAAIvb,EAAU,CACVoa,OAAQp7B,GAEZ,OAAOA,EAAM0xB,KAAIM,GAAK86H,GAAsBj0I,EAAOmZ,EAAGpZ,EAAiB2jB,EAAQvb,KAGnF,SAASgsI,GAAkBhtJ,GACvB,MAAO,KAAOA,GAAS,OAASA,EAE7B,SAASitJ,GAAoBp0I,EAAO7Y,EAAO4Y,GAC9C,IAAI2jB,EAASxR,UAAUzD,OAAS,QAAK,IAAWyD,UAAU,GAAKA,UAAU,GAAK,gBAC9E,GAAIiiI,GAAkBhtJ,GAClB,MAAO,GAEX,GAAIyG,MAAM2iB,QAAQppB,GAAQ,CACtB,IAAI0oB,EAAS,IAAIqE,EAAAA,GAQjB,OAPAuO,EAAAA,GAAAA,MAAW57B,KAAMqtJ,GAAkBl0I,EAAO7Y,EAAO4Y,EAAiB2jB,IAASxO,MAAM,WAC7E,IAAK,IAAIm/H,EAAOniI,UAAUzD,OAAQ6M,EAAO,IAAI1tB,MAAMymJ,GAAOC,EAAO,EAAGA,EAAOD,EAAMC,IAC7Eh5H,EAAKg5H,GAAQpiI,UAAUoiI,GAE3B,IAAIh+I,EAAOglB,EAAK0B,MAAKlP,IAASqmI,GAAkBrmI,KAASwN,EAAKzC,KAAI/K,GAASqmI,GAAkBrmI,GAAe,IAAPA,IAAc,GACnH+B,EAAOmF,QAAQ1e,MAEZuZ,EAEP,OAAOokI,GAAsBj0I,EAAO7Y,EAAO4Y,EAAiB2jB,GAIpE,SAAS6wH,GAAW36D,EAAYgG,GAC5B,OAAOhG,EAAW58D,MAAM,SAASlP,GAC7B,OAAOA,EAAK1V,YAAcwnF,KAIlC,SAAS40D,GAAuBC,EAAe76D,EAAY9rE,GACvD,IAAI1V,EAAY0V,EAAK1V,UACjBs8I,GAAUt8I,KACV0V,EAAK8xE,SAAW+0D,GAA6Bv8I,GACxCm8I,GAAW36D,EAAY9rE,EAAK8xE,WAAc20D,GAAWE,EAAe3mI,EAAK8xE,WAC1E40D,GAAuBC,EAAe76D,EAAY,CAC9CrjC,GAAIzoC,EAAK8xE,SACTvnF,SAAU,SACVD,UAAW0V,EAAK8xE,SAChB3nF,QAAS28I,GAA2B9mI,EAAK8xE,UAAU,GACnDlnF,iBAAkB,CAAC,UAAW,iBAI1CkhF,EAAW1qE,KAAKpB,GAGpB,SAAS8mI,GAA2Bx8I,EAAWgH,GAC3C,IAAInH,EAAU,GACd,GAAImH,EACAhH,EAAYA,EAAUu4I,UAAUv4I,EAAUy8I,YAAY,KAAO,QAC1D,GAAIH,GAAUt8I,GAOjB,OANAA,EAAUiW,MAAM,KAAKq0B,SAAS,SAAS1iC,EAAOiR,EAAO6jI,GACjD78I,IAAWgsD,EAAAA,GAAAA,IAAWjkD,GAClBiR,IAAU6jI,EAAIrmI,OAAS,IACvBxW,GAAW,QAGZA,EAEX,OAAOgsD,EAAAA,GAAAA,IAAW7rD,GAEf,SAASu6I,GAASpzI,EAAQH,GAE7B,IADA,IAAI6E,EAAQ,GACHya,EAAI,EAAGA,EAAInf,EAAOkP,OAAQiQ,IAAK,CACpC,IAAI5Q,GAAO2E,EAAAA,EAAAA,IAAO,EAAM,CACpBxa,QAAS28I,GAA2Br1I,EAAOmf,GAAGtmB,UAAWgH,IAC1DG,EAAOmf,IACV5Q,EAAKyoC,GAAKzoC,EAAK3X,MAAQ2X,EAAK1V,UACxBgH,EACAo1I,GAAuBj1I,EAAQ0E,EAAO6J,GAEtC7J,EAAMiL,KAAKpB,GAGnB,OAAO7J,EAGX,SAASywI,GAAUt8I,GACf,OAAQ,IAAMA,EAAUy8I,YAAY,KAGxC,SAASF,GAA6Bv8I,GAClC,OAAOA,EAAUu4I,UAAU,EAAGv4I,EAAUy8I,YAAY,MAEjD,SAASE,GAAsBjnI,EAAM8rE,GACxC,GAAI86D,GAAU5mI,EAAK1V,WAEf,IADA,IAAIwnF,EAAW+0D,GAA6B7mI,EAAK1V,WACxCsmB,EAAI,EAAGA,EAAIk7D,EAAWnrE,OAAQiQ,IACnC,GAAIk7D,EAAWl7D,GAAGtmB,YAAcwnF,EAC5B,OAAOm1D,GAAsBn7D,EAAWl7D,GAAIk7D,GAAc,IAAM9rE,EAAK7V,QAIjF,OAAO6V,EAAK7V,QAET,SAASg6I,GAA2BvtH,EAAWqF,EAAWzqB,GAC7D,IAAIS,EAAkB0xI,GAAmBnyI,EAAkByqB,GAC3D,OAAIhqB,IACI,IAAUA,EAAgBxD,UAC1BmoB,EAAU,GAAKqF,EACfrF,EAAUjW,OAAS,IAEnBiW,EAAU,GAAKqF,EACfrF,EAAU,GAAK,IAEZA,IAEP,YAAcqF,GACdrF,EAAU,GAAK6qH,GACf7qH,EAAU,GAAK,MACR,eAAiBqF,GACxBrF,EAAU,GAAK8qH,GACf9qH,EAAU,GAAK,OAEf3kB,EAAkB0xI,GAAmBnyI,EAAkBolB,EAAU,KAC7D3kB,GAAmB,IAAM2kB,EAAUjW,QAAU,OAASiW,EAAU,MAChEA,EAAU,GAAK,IAEnBA,EAAU,GAAKqF,GAEZrF,GAEJ,SAASswH,GAAkBtwH,GAC9B,IAAIzsB,EAUJ,OAPQA,EAFJ,OAASysB,EAAU,GACfA,EAAU,KAAO6qH,GACP,UAEA,aAGJ7qH,EAAU,GAEjBzsB,EAEJ,SAAS47I,GAAiBnvH,GAC7B,MAAO,KAAOA,EAAU,GAErB,SAASuwH,GAAoB31I,EAAkB41I,EAAgB5zF,GAClE,IAAIzxC,GAAS4C,EAAAA,EAAAA,IAAO,EAAM,GAAInT,GAC1B61I,GAAgB,EAYpB,OAXAtlI,EAAOmN,MAAM,SAASjd,EAAiBkR,GACnC,GAAI,YAAclR,EAAgB5J,KAE9B,OADAg/I,EAAelkI,GACR,MAGV,IAAMkkI,EACPtlI,EAAOslI,IAAgB1iI,EAAAA,EAAAA,GAAOk8H,GAAUuG,EAAgB5zF,GAAUzxC,EAAOslI,IAEzEtlI,EAAOgkC,QAAQ86F,GAAUuG,EAAgB5zF,IAEtCzxC,EAGX,SAASulI,GAAmB3qI,EAAQ4qI,GAChC,OAAO5qI,EAAO,KAAO4qI,EAElB,SAASC,GAAgC7qI,EAAQrS,GACpD,IAAKqS,GAAU,IAAMA,EAAOgE,OACxB,OAAO,KAEX,GAAI6hI,GAAY7lI,GAAS,CACrB,IAAI8qI,EAAsBH,GAAmB3qI,EAAQrS,GACrD,OAAQm9I,EAA+B,KAAT9qI,EAE9B,OAAO+qI,GAAuB/qI,EAAQ,CAACrS,IAAY,GAI3D,SAASo9I,GAAuB/qI,EAAQgrI,EAAaC,GACjD,IAAI7lI,EAAS,GAiBb,OAhBApF,EAAOi4B,SAAS,SAAS50B,GACjBwiI,GAAYxiI,GACRsnI,GAAmBtnI,EAAM2nI,EAAY,IACjCC,GACA7lI,EAAOX,KAAKumI,GACZC,GAAU,GAEV7lI,EAAOg0B,OAAOh0B,EAAOpB,OAAS,EAAG,GAGrCoB,EAAOX,KAAKpB,IAGf+B,EAAOpB,QAAUovD,GAAQ/vD,KAAU+B,EAAOX,KAAKpB,MAGpD,IAAM+B,EAAOpB,OACN,MAEPinI,IACA7lI,EAAOX,KAAKogI,IACZz/H,EAAOX,KAAKumI,IAET,IAAM5lI,EAAOpB,OAASoB,EAAO,GAAKA,GAEtC,SAAS8lI,GAAYlrI,EAAQgrI,GAChC,GAAI,OAAShrI,GAAU,IAAMA,EAAOgE,OAChC,OAAOgnI,EAEX,GAAInF,GAAY7lI,GACZ,OAAI2qI,GAAmB3qI,EAAQgrI,EAAY,IAChCA,EAEA,CAAChrI,EAAQ6kI,GAAqBmG,GAG7C,IAAI3E,EAAaC,GAActmI,GAC/B,OAAIqmI,IAAexB,GACR,CAACmG,EAAa,MAAOhrI,GAEzB+qI,GAAuB/qI,EAAQgrI,GAAa,GAEhD,SAASG,GAAqBnrI,EAAQrS,GACzC,GAAI,OAASqS,GAAU,IAAMA,EAAOgE,OAChC,MAAO,GAEX,GAAI6hI,GAAY7lI,GACZ,OAAI2qI,GAAmB3qI,EAAQrS,GACpB,CAACqS,GAED,GAGf,IAAIqmI,EAAaC,GAActmI,GAC/B,GAAIqmI,IAAexB,GACf,MAAO,GAEX,IAAIz/H,EAASpF,EAAOA,QAAQ,SAASqD,GACjC,OAAOwiI,GAAYxiI,IAASsnI,GAAmBtnI,EAAM1V,MAEzD,OAAOyX,EAEJ,SAASgmI,GAAeprI,EAAQrS,GACnC,OAAI,OAASqS,GAAU,IAAMA,EAAOgE,SAGhC6hI,GAAY7lI,GACLA,EAAO,KAAOrS,EAElBqS,EAAOuS,MAAM,SAASlP,GACzB,OAAQwiI,GAAYxiI,IAAS+vD,GAAQ/vD,KAAU+nI,GAAe/nI,EAAM1V,OAGrE,IAAI09I,GAAkB,SAASvvH,EAAYp/B,EAAO4Y,GACrD,GAAInS,MAAM2iB,QAAQppB,GAAQ,CACtB,IAAI4uJ,EAAgB5uJ,EAAMsnB,OAAS,EACnC8X,EAAWmL,QACXvqC,EAAMu7C,SAAQ,CAACszG,EAAGt3H,MACdgK,EAAAA,EAAAA,GAAE,UAAUC,SAASqnH,IAAqC15I,KAAK0/I,GAAGptH,SAASrC,GACvE7H,IAAMq3H,IACNrtH,EAAAA,EAAAA,GAAE,UAAUC,SAASsnH,IAA0C35I,KAAKyJ,GAAmBA,EAAgB6uI,eAAiB7uI,EAAgB6uI,eAAiB,KAAKjmH,SAASunH,IAAgDtnH,SAASrC,WAGjOp/B,EACPo/B,EAAWjwB,KAAKnP,GAEhBo/B,EAAWjwB,KAAKg6B,EAAAA,EAAAA,OAA2B,oCC5vBnD,SAAS2lH,GAAcC,GACnB,IAAIC,EAAc,SAASC,EAAUC,GACjC,OAAOA,EAAaA,EAAa,IAAMD,EAAWA,GAElD/nG,EAAyB6nG,GAAQA,EAAKhlH,cAAc,gBACxD,MAAO,CACH70B,UAAW,CAAC,SAAU,OAAQ,WAAY,SAAU,UAAW,UAC/DvE,0BAA2B,SAAShJ,EAAakR,EAAOT,GACpD,IAAIsQ,EAAS,GACTymI,EAAYxnJ,EAAY2f,OAAS,EAarC,OAZA3f,GAAeA,EAAY4zC,SAAS,SAASv7C,EAAO8pB,GAChD,GAAIq/H,GAAYnpJ,IAAU02E,GAAQ12E,GAAQ,CACtC,IAAIosJ,EAAmBC,GAAoBrsJ,EAAOoY,EAAQ,GAAI,gBAC9DsQ,EAAOX,KAAKqkI,QAEZ1jI,EAAOX,KAAKskI,GAAoB,CAACxzI,EAAM5H,UAAW,IAAKjR,GAAQoY,EAAQ,GAAI,iBAE/E0R,IAAUqlI,GAAazmI,EAAOX,KAAK,SAEnC,IAAMW,EAAOpB,SACboB,EAASA,EAAO,IAEbA,GAEXvT,eAAgB,SAAS+xI,EAAeluI,GACpC,IAAIo2I,GAAM7tH,EAAAA,EAAAA,GAAE,SAASC,SAAS,oCAAoCC,SAASzoB,GACvEnL,GAASyd,EAAAA,EAAAA,IAAO,EAAM,GAAIyjI,EAAK3uG,aAAa8mG,EAAcruI,MAAM5H,YAkBpE,OAjBA09I,GAAgBS,EAAKlI,EAAc/3I,MAAQ+3I,EAAc/3I,KAAK+X,MAAM,MACpErZ,EAAO2D,WAAa,UACpB3D,EAAO4D,aAAey1I,EAAclnJ,MAAQknJ,EAAclnJ,MAAMypB,QAAU,GAC1Ey9B,EAAuB++F,yBAAyB,CAC5CC,cAAekJ,EACfvhJ,OAAQA,EACRslB,MAAO,WAEH,IAAInzB,EADJA,EAAQN,KAAK+R,aAAmBy1I,EAAcrwD,SAAS72F,GAEvDknD,EAAuB87F,uBACvBkE,EAAcmI,eAElBz1I,SAAU,WACNstI,EAAcmI,eAElB3M,iBAAiB,IAEd1pI,GAEXhI,cAAe,SAASs+I,EAAWtuI,GAC/BA,EAAUA,GAAW,GACrB,IAAIhhB,EAAQsvJ,EAAUtvJ,MAClB6N,EAASkhJ,EAAK3uG,aAAakvG,EAAUz2I,MAAM5H,WAC3C9I,EAAe0F,GAAUA,EAAO1F,aAChCiK,EAASvE,GAAUA,EAAOuE,OAC1BgpB,EAASpa,EAAQoa,QAAU,CAACp7B,GAChC,GAAImI,GAAgBA,EAAapB,YAAcqL,GAAUA,EAAOrL,WAAY,CACxE,IAAI2hB,EAAS,IAAIqE,EAAAA,GACbwiI,EAAgBvuI,EAAQlE,OAAS,IAAIiQ,EAAAA,GACzC,IAAK/L,EAAQlE,MAAO,CAChBjP,GAASyd,EAAAA,EAAAA,GAAO,GAAIzd,EAAQ,CACxB2D,WAAY,UACZC,aAAc2pB,IAElB,IAAIuiC,EAAoBzW,EAAuBkjB,cAAcv8D,GAC7D8vD,EAAkBE,UAAW,EAC7B,IAAI92D,EAAa,IAAI6f,GAAAA,EAAW+2C,GAC5BvyC,EAAMrkB,EAAWg8D,QAAQ33C,MAC7B,GAAIA,EAAK,CACL,IACIgQ,OAAQo0H,GACRxuI,EACJ,GAAIwuI,GAAWA,EAAQloI,OAAS,EAAG,CAC/B,IAAIhE,EAASksI,EAAQ9mG,QAAO,CAAChgC,EAAQ1oB,KAC7B0oB,EAAOpB,QACPoB,EAAOX,KAAK,MAEhBW,EAAOX,KAAK,CAACqD,EAAK,IAAKprB,IAChB0oB,IACR,IACH3hB,EAAWuc,OAAOA,QAElBvc,EAAWuc,OAAO,CAAC8H,EAAK,IAAKkkI,EAAUtvJ,aAEpCsvJ,EAAUz2I,MAAMnI,uBACvB2a,EAAAA,EAAAA,IAAW,SAEfrK,EAAQlE,MAAQyyI,EAChBxoJ,EAAW+2D,OAAO/vC,KAAKwhI,EAAc1hI,SAgBzC,OAdA0hI,EAAcxhI,MAAKjR,IACf,IAAIgN,EAAQsR,EAAOrR,QAAQulI,EAAUtvJ,OACrC0oB,EAAOmF,QAAQ,SAAS4hI,EAAsB3yI,EAAOoyI,GACjD,IAAIxmI,EAAS,GAQb,OAPA5L,EAAMy+B,SAAS,SAAS50B,GACpB,GAAIA,EAAK7J,MAAO,CACZ,IAAI4yI,EAAqBD,EAAsB9oI,EAAK7J,MAAOkyI,EAAYroI,EAAKxX,KAAM+/I,IAClFxmI,EAASA,EAAOlB,OAAOkoI,GAE3B/oI,EAAKgsE,UAAYjqE,EAAOX,KAAKinI,EAAYroI,EAAKxX,KAAM+/I,OAEjDxmI,EATI,CAUb5L,GAAOgN,OAENpB,EAEP,IAAIvZ,EAAO+3C,EAAuBg+F,kBAAkBllJ,EAAO6N,EAAQ,EAAGkhJ,EAAK9sH,OAAO,iBAClF,OAAO9yB,IAKhB,SAASwgJ,GAAMZ,GAClB,OAAOzjI,EAAAA,EAAAA,GAAOwjI,GAAcC,GAAO,CAC/B//I,KAAM,QACND,KAAM,YACN+B,QAASq4B,EAAAA,EAAAA,OAA2B,0CAGrC,SAASymH,GAAOb,GACnB,IAAIc,EAASf,GAAcC,GAC3B,OAAOzjI,EAAAA,EAAAA,GAAO,GAAIukI,EAAQ,CACtBl/I,0BAA2B,SAAShJ,EAAakR,EAAOT,GACpD,IAAI03I,EAAaD,EAAOl/I,0BAA0BhJ,EAAakR,EAAOT,GACtE,OAAK03I,GAAc,IAAMA,EAAWxoI,OAG7B,MAAQwoI,EAAW,GAAKA,EAAa,CAAC,IAAKA,GAFvC,MAIf9gJ,KAAM,SACND,KAAM,cACN+B,QAASq4B,EAAAA,EAAAA,OAA2B,2CC9H5C,IAAI4mH,GAAwB,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,cAAe,WAAY,aAAc,WAAY,WAC/GC,GAAuB,UACvBC,GAAuB,UAE3B,SAASC,GAAoBriJ,GACzB,OAAOA,EAAOmB,MAAQnB,EAAOoD,UAGjC,SAASk/I,GAAe3pJ,GACpBA,EAAQ+0C,SAAQ1tC,IACZ,IAAI4lD,EAAay8F,GAAoBriJ,GACrC,KAAKsiB,EAAAA,EAAAA,IAAUsjC,IAAe5lD,EAAOiC,eACjC,MAAM,IAAIub,EAAAA,EAAAA,MAAa,QAASxd,EAAOiD,YAInD,IAAIs/I,GAAuBljH,GAAAA,WAAAA,QAA2B,WAClD,IAAImjH,EAAuB,WACvB,MAAO,CACH7+I,WAAYw+I,GACZv+I,kBAAc,IAGlB6+I,EAAmC,SAASziJ,GAC5C,IAAI4D,EAAe5D,EAAO4D,cAAgB,GAC1C,OAAQ4rD,EAAAA,iBAA6BxvD,MAAaA,EAAO1F,cAAgB0F,EAAO1F,aAAapB,aAAe,IAAM0K,EAAa6V,QAAU,OAAS7V,EAAa,IAE/J8+I,EAA4B,SAAS1iJ,GACrC,IAAI7N,EAAQ6N,EAAOlG,YACnB,IAAIwoB,EAAAA,EAAAA,IAAUnwB,GAAQ,CAClB,IAAI4iC,EAAY/0B,EAAO2E,yBAA2B3E,EAAOkK,wBAA0B6yI,GAAoB/8I,GACnGyV,EAAS,CAAC4sI,GAAoBriJ,GAAS+0B,EAAW/0B,EAAOlG,aAC7D,OAAO2b,EAEP,OAAO,MAGXktI,EAA+B,SAAS3iJ,GACxC,IAAI4iJ,EACAzwJ,EACAyR,EAAe5D,EAAO4D,aAC1B,OAAKA,GAGD,IAAMA,EAAa6V,QAAUgpI,EAAiCziJ,KAAYpH,MAAM2iB,QAAQ3X,EAAa,KACxDg/I,EAA7C5iJ,EAAO2D,aAAey+I,GAA2C,KAA2B,IAC5FjwJ,EAAQyR,EAAa,KAEwBg/I,EAA7C5iJ,EAAO2D,aAAey+I,GAA2C,SAA+B,QAChGjwJ,EAAQyR,GAEL,CAACy+I,GAAoBriJ,GAAS4iJ,EAAmBzwJ,IAT7C,MAWX0wJ,EAA8B,SAAS/gH,EAAmB9hC,EAAQ8iJ,GAClE,IAAIxoJ,EAAe,SAASwoJ,EAAuB9iJ,GAC/C,IAAK8iJ,EACD,OAAON,IAEX,IAAI7+I,EACAgB,EAA0Bm+I,EAAsB,GAChD3wJ,EAAQ2wJ,EAAsB,GAC9BC,EAAgBnqJ,MAAM2iB,QAAQppB,GAClC,IAAK4wJ,IACIN,EAAiCziJ,GAClC,OAAOwiJ,IAGf,OAAQ79I,GACJ,IAAK,QACL,IAAK,IACDhB,EAAaw+I,GACb,MACJ,IAAK,SACL,IAAK,KACDx+I,EAAay+I,GACb,MACJ,QACI,OAAOI,IAEf,MAAO,CACH7+I,WAAYA,EACZC,aAAcm/I,EAAgB5wJ,EAAQ,CAACA,IA3B5B,CA6BjB2wJ,EAAuB9iJ,GACzB8hC,EAAkByQ,aAAa8vG,GAAoBriJ,GAAS1F,IAE5D0oJ,EAA2B,SAASlhH,EAAmB9hC,EAAQ0vB,GAC/D,IAAI+iH,EACA9tI,EAA0B,OAAS+qB,QAAa,IAAWA,OAAY,EAASA,EAAU,GAC1F51B,EAAc,OAAS41B,QAAa,IAAWA,OAAY,EAASA,EAAU,GAC9EhsB,EAAmB1D,EAAO0D,kBAAoB1D,EAAO29C,0BACnDj6C,GAAoBA,EAAiBwY,QAAQvX,IAA4B,GAAKA,IAA4B3E,EAAOkK,yBAA2Bg4I,GAAsBhmI,QAAQvX,IAA4B,GAAK,OAAS7K,GAClN6K,IAA4B3E,EAAOkK,yBAA2BoY,EAAAA,EAAAA,IAAUtiB,EAAO2E,2BAC/EA,EAA0B3E,EAAO2E,yBAErC8tI,EAAmB,CACf34I,YAAaA,EACb6K,wBAAyBA,IAG7B8tI,EAAmB,CACf34I,iBAAa,EACb6K,6BAAyB,GAGjCm9B,EAAkByQ,aAAa8vG,GAAoBriJ,GAASyyI,IAEhE,MAAO,CACHwQ,gBAAiB,WACb,IAAIxpH,EAAO5nC,KACPiwC,EAAoBrI,EAAKyC,cAAc,WACvCvjC,EAAUmpC,EAAkBwmB,sBAChCz2D,KAAKqxJ,wBAAyB,EAC9BvqJ,EAAQ+0C,SAAS,SAAS1tC,GACtB,IAAImjJ,EAAmBvC,GAAqBnnH,EAAKrF,OAAO,eAAgBiuH,GAAoBriJ,IAC5F,GAAI,IAAMmjJ,EAAiB1pI,OAAQ,CAC/B,IAAI2pI,EAAkBD,EAAiB,GACvCN,EAA4B/gH,EAAmB9hC,EAAQojJ,GACvDJ,EAAyBlhH,EAAmB9hC,EAAQojJ,QAEpD9gI,EAAAA,EAAAA,IAAUtiB,EAAO4D,eAAiBi/I,EAA4B/gH,EAAmB9hC,IACjFsiB,EAAAA,EAAAA,IAAUtiB,EAAOlG,cAAgBkpJ,EAAyBlhH,EAAmB9hC,MAGrFnO,KAAKqxJ,wBAAyB,GAElCG,UAAW,WACP,IAAI1qJ,EAAU9G,KAAKqqC,cAAc,WAAW6G,aACxCoqB,EAAiBt7D,KAAKqqC,cAAc,QACpC/nB,EAAYg5C,EAAeh5C,YAE/B,GADAmuI,GAAe3pJ,IACV9G,KAAKuiC,OAAO,eAAgB,CAC7B,IAAIkvH,EAAmBzxJ,KAAKqqC,cAAc,WAAWosB,sBACjDxuD,EAAcjI,KAAK0vF,0BAA0B+hE,GACjDzxJ,KAAKuiC,OAAO,cAAet6B,GAE/BjI,KAAKoxJ,kBACL91F,EAAeh5C,UAAUA,IAE7B2mB,KAAM,WACF,IAAIqyB,EAAiBt7D,KAAKqqC,cAAc,QACpCixB,EAAeo2F,uBACX1xJ,KAAKqqC,cAAc,WAAWqrB,wBAC9B11D,KAAKwxJ,YAELl2F,EAAe4W,kBAAkB/zB,KAAI,IAAMn+C,KAAKwxJ,gBAI5DG,kBAAmB,SAAS1pJ,EAAakG,GACrC,IAAIyV,EAASitI,EAA0B1iJ,GACvC,OAAIsiB,EAAAA,EAAAA,IAAU7M,GACHkrI,GAAY7mJ,EAAa2b,GAEzB6qI,GAAgCxmJ,EAAauoJ,GAAoBriJ,KAGhFyjJ,qBAAsB,SAAS3pJ,EAAakG,GACxC,IAAIyV,EAASktI,EAA6B3iJ,GAC1C,OAAIyV,EACOkrI,GAAY7mJ,EAAa2b,GAEzB6qI,GAAgCxmJ,EAAauoJ,GAAoBriJ,KAGhFuhF,0BAA2B,SAAS5oF,GAChC,IAAK9G,KAAKqqC,cAAc,QAAQqnH,qBAC5B,OAAO,KAEX,IAAIzpJ,EAAc,CAAC,OAOnB,OANAnB,GAAWA,EAAQ+0C,SAAQ1tC,IACvB,IAAI1F,EAAeqoJ,EAA6B3iJ,GAC5CpG,EAAY8oJ,EAA0B1iJ,GAC1C1F,GAAgBkjJ,GAAQljJ,EAAcR,GACtCF,GAAa4jJ,GAAQ5jJ,EAAWE,MAE7B4kJ,GAAoB5kJ,IAE/B4pJ,cAAe,SAAS1jJ,EAAQ7N,GAC5BN,KAAKuiC,OAAO,cAAeviC,KAAK2xJ,kBAAkB3xJ,KAAKuiC,OAAO,eAAgBp0B,KAElF2jJ,iBAAkB,SAAS3jJ,GACvBnO,KAAKuiC,OAAO,cAAeviC,KAAK4xJ,qBAAqB5xJ,KAAKuiC,OAAO,eAAgBp0B,KAErF4jJ,0BAA2B,WACvB,IAAIC,EAAgChyJ,KAAKuiC,OAAO,mCAAqC,GACrF,MAAO,CAAC0tH,GAAMjwJ,KAAK8lC,WAAYoqH,GAAOlwJ,KAAK8lC,YAAYhe,OAAOkqI,IAElE9oH,cAAe,WACX,MAAO,CAAC,+BA7KkC,IAiLlD+oH,GAAmC,CACnCP,mBAAoB,WAChB,IAAIQ,EAAyBlyJ,KAAKuiC,OAAO,qBACzC,MAAO,SAAW2vH,EAAyBlyJ,KAAKuiC,OAAO,uBAAyB2vH,GAEpFlR,2BAA4B,WACxB,OAAOvwH,EAAAA,EAAAA,IAAUzwB,KAAKuiC,OAAO,iBAAmBviC,KAAK0xJ,sBAEzD5mF,2BAA4B,WACxB,IAAI,IAAU9qE,KAAKuiC,OAAO,6BACtB,OAAOviC,KAAKs6B,WAEhB,IAAI2I,EAAU,CAACjjC,KAAKs6B,YAChBxzB,EAAU9G,KAAKqqC,cAAc,WAAWosB,sBACxCxuD,EAAcjI,KAAKuiC,OAAO,eAC9B,GAAIviC,KAAK0xJ,qBAAsB,CAC3B,IAAIljG,EAAgBxuD,KAAKqqC,cAAc,gBAAgBg8G,mBACnD73F,GAAiBvmD,IACjBA,EAAcwmJ,GAAgCxmJ,EAAauoJ,GAAoBhiG,KAGvF,IAAI/1C,EAAmBzY,KAAKqqC,cAAc,cAAc0nH,4BACpDI,EAAwBxF,GAAoB1kJ,EAAanB,EAAS2R,EAAkB,iBAIxF,OAHI05I,GACAlvH,EAAQ5a,KAAK8pI,GAEVjjH,EAAAA,eAA6BjM,IAExCmvH,yBAA0B,SAASt9F,GAC/B,IAAIu9F,EAAUv9F,EAASvjC,MAAM,YAC7B,OAAI8gI,EACOA,EAAQ,GAER,MAGfl2I,YAAa,SAAS01D,GAClB7xE,KAAK8lC,UAAUqD,cACX9d,UAAUzD,OAAS,GACf,gBAAkBiqD,GAClB7xE,KAAKuiC,OAAO,cAAe,MAE/BviC,KAAKs6B,SAASu3C,KAEd7xE,KAAKuiC,OAAO,cAAe,MAC3BviC,KAAKs6B,YAETt6B,KAAK8lC,UAAUsD,aAEnBQ,cAAe,SAASnV,GACpB,OAAQA,EAAKnlB,MACT,IAAK,cACDtP,KAAKqrE,eACLrrE,KAAK0xJ,sBAAwB1xJ,KAAKqqC,cAAc,cAAc+mH,kBAC9D38H,EAAKqV,SAAU,EACf,MACJ,IAAK,oBACDrV,EAAKqV,SAAU,EACf,MACJ,IAAK,UACD,GAAI9pC,KAAK0xJ,qBAAsB,CAC3B,IAAIvjJ,EAASnO,KAAKqqC,cAAc,WAAWgoB,gBAAgB59B,EAAKqgC,UAC5D06B,EAAuBxvF,KAAKqqC,cAAc,cAC9C,GAAIl8B,IAAWqhF,EAAqB6hE,uBAAwB,CACxD,IAAIiB,EAAetyJ,KAAKoyJ,yBAAyB39H,EAAKqgC,UACtD06B,EAAqB6hE,wBAAyB,EAC1C,eAAiBiB,EACb/B,KAAyB97H,EAAKn0B,OAASiwJ,KAAyB97H,EAAKogC,eACrE26B,EAAqBsiE,iBAAiB3jJ,GAEnC,iBAAmBmkJ,EAC1B9iE,EAAqBsiE,iBAAiB3jJ,GAC/B,CAAC,cAAe,2BAA2Bkc,QAAQioI,IAAiB,GAC3E9iE,EAAqBqiE,cAAc1jJ,EAAQA,EAAOlG,aAEtDunF,EAAqB6hE,wBAAyB,GAGtDrxJ,KAAKs6B,SAAS7F,GACd,MACJ,QACIz0B,KAAKs6B,SAAS7F,MAI1B89H,GAAsC,CACtC9N,qBAAsB,SAASt2I,GAC3B,OAAInO,KAAKqqC,cAAc,QAAQqnH,sBACnB1C,GAAehvJ,KAAKuiC,OAAO,eAAgBiuH,GAAoBriJ,IAEpEnO,KAAKs6B,SAASnsB,IAEzB44I,4BAA6B,WACzB,OAAQ/mJ,KAAKqqC,cAAc,QAAQqnH,sBAEvC9nH,cAAe,SAASnV,GAChB,gBAAkBA,EAAKnlB,KACvBtP,KAAK8mJ,gCAEL9mJ,KAAKs6B,SAAS7F,KAIf+9H,GAAmB,CAC1BtsG,eAAgB,WACZ,MAAO,CACHj+C,YAAa,KACbD,kBAAmB,SAG3BgmC,YAAa,CACTykH,WAAY/B,IAEhBtiH,UAAW,CACPJ,YAAa,CACTt+B,KAAMuiJ,IAEV/jH,MAAO,CACHiY,kBAAmBosG,MCxU/BxQ,GAAAA,eAAoB,aAAcyQ,ICkDlC,IAAIvJ,GAAuB,mBACvByJ,GAA6BzJ,GAAuB,SACpD0J,GAAkCD,GAA6B,QAC/DE,GAAqCF,GAA6B,WAClEG,GAAwCH,GAA6B,cACrEI,GAAuCJ,GAA6B,aACpEK,GAA8B9J,GAAuB,UACrD+J,GAA6BD,GAA8B,QAC3DE,GAAiC,eACjCC,GAAoC,iBACpChK,GAAiCD,GAAuB,QACxDkK,GAAkClK,GAAuB,cACzDmK,GAAsCnK,GAAuB,kBAC7DoK,GAAkCpK,GAAuB,cACzDqK,GAAuCrK,GAAuB,mBAC9DsK,GAA+BtK,GAAuB,WACtDuK,GAAyCvK,GAAuB,cAChEwK,GAA8BxK,GAAuB,UACrDyK,GAAqCzK,GAAuB,iBAC5D0K,GAAe,kBACfC,GAA6C3K,GAAuB,yBACpE4K,GAAS,gBACTC,GAAuB,oBACvBC,GAAU,MACVC,GAAY,QACZC,GAAa,SACbzhB,GAAU,CAAC,CACXljI,KAAM,oBACNynB,OAAQ,CACJ+mB,kBAAmB,CAAC,WAAY,YAChCC,SAAU,cAEf,CACCzuC,KAAM,mBACNynB,OAAQ,CACJ+mB,kBAAmB,CAAC,WAAY,YAChCC,SAAU,cAEf,CACCzuC,KAAM,iBACNynB,OAAQ,CACJ+mB,kBAAmB,CAAC,WAAY,eAGpCo2G,GAAY,CACZ9zI,IAAK,MACLG,GAAI,KACJF,OAAQ,OACRC,MAAO,OAEPitF,GAAgBv8E,EAAAA,EAAAA,QAAc65E,IAC9BspD,GAAgBtoE,EAAAA,EAAAA,QAAe,CAC/BE,mBAAoB,WAChB,OAAOngE,EAAAA,EAAAA,GAAO5rB,KAAKs6B,WAAY,CAC3BtwB,kBAAmB,KACnBD,iBAAkB,KAClBkP,eAAgB,KAChBP,OAAQ,GACRG,gBAAiB,CAAC,MAAO,KAAM,SAAU,SACzCC,mBAAe,EACfxY,MAAO,KACPiY,yBAAyB,EACzBK,2BAA4B,CACxBwH,IAAKqpB,EAAAA,EAAAA,OAA2B,uBAChClpB,GAAIkpB,EAAAA,EAAAA,OAA2B,sBAC/BppB,OAAQopB,EAAAA,EAAAA,OAA2B,0BACnCnpB,MAAOmpB,EAAAA,EAAAA,OAA2B,0BAEtChxB,iBAAkB,GAClB27I,0BAA0B,EAC1Bz7I,4BAA6B,CACzByC,QAASquB,EAAAA,EAAAA,OAA2B,0CACpCluB,MAAOkuB,EAAAA,EAAAA,OAA2B,yCAClC1tB,SAAU0tB,EAAAA,EAAAA,OAA2B,4CACrC7tB,SAAU6tB,EAAAA,EAAAA,OAA2B,uCACrC5tB,gBAAiB4tB,EAAAA,EAAAA,OAA2B,+CAC5CjuB,YAAaiuB,EAAAA,EAAAA,OAA2B,0CACxChuB,mBAAoBguB,EAAAA,EAAAA,OAA2B,kDAC/CztB,WAAYytB,EAAAA,EAAAA,OAA2B,6CACvCpuB,SAAUouB,EAAAA,EAAAA,OAA2B,2CACrC3tB,YAAa2tB,EAAAA,EAAAA,OAA2B,8CACxCnuB,SAAUmuB,EAAAA,EAAAA,OAA2B,2CACrC/tB,QAAS+tB,EAAAA,EAAAA,OAA2B,0CACpC9tB,WAAY8tB,EAAAA,EAAAA,OAA2B,iDAInDmjD,eAAgB,SAASn4D,GACrB,OAAQA,EAAKnlB,MACT,IAAK,2BACD,MACJ,IAAK,oBACL,IAAK,mBACL,IAAK,iBACDtP,KAAKo1I,eACL,MACJ,IAAK,mBACDp1I,KAAKq0J,wBACLr0J,KAAK8rC,cACL,MACJ,IAAK,SACL,IAAK,gBACL,IAAK,kBACL,IAAK,0BACL,IAAK,6BACL,IAAK,8BACD9rC,KAAK8rC,cACL,MACJ,IAAK,QACD,GAAIrX,EAAKn0B,QAAUm0B,EAAKogC,cAAe,CACnC,IAAIy/F,EAA4Bt0J,KAAKu0J,2BAChCD,IACDt0J,KAAKw0J,aACLx0J,KAAK8rC,eAET9rC,KAAKu0J,4BAA6B,EAClCv0J,KAAK2qC,cAAc,iBAAkB,CACjCrqC,MAAOm0B,EAAKn0B,MACZu0D,cAAepgC,EAAKogC,gBAExB70D,KAAKu0J,2BAA6BD,EAEtC,MACJ,QACIt0J,KAAKs6B,SAAS7F,KAG1Bk4H,oBAAqB,WACjB,IAAIj0I,EAAS1Y,KAAKy0J,uBACdn0J,GAAQsrB,EAAAA,EAAAA,IAAO,EAAM,GAAI5rB,KAAK00J,QAClC,OAAOC,GAAqB9H,GAAoBvsJ,GAAQoY,EAAQ1Y,KAAK40J,kBAAmBf,KAE5FY,qBAAsB,WAClB,OAAOlI,GAAoBvsJ,KAAKuiC,OAAO,YAE3CsyH,cAAe,WACX70J,KAAKu0J,4BAA6B,EAClC,IAAIj0J,GAAQsrB,EAAAA,EAAAA,IAAO,EAAM,GAAI5rB,KAAK00J,QAC9BpW,EAAkBuO,GAAoBvsJ,GACtCg7C,EAAWuxG,GAAoB7sJ,KAAK80J,UAAU90J,KAAKuiC,OAAO,WAC1D/W,KAAKC,UAAU6vB,KAAc9vB,KAAKC,UAAU6yH,IAC5Ct+I,KAAKuiC,OAAO,QAAS+7G,GAEzBt+I,KAAKu0J,4BAA6B,EAClCv0J,KAAKmjF,2BAETuJ,MAAO,WACH1sF,KAAKq0J,wBACLr0J,KAAKw0J,aACLx0J,KAAK+0J,qBACL/0J,KAAKo1I,eACLp1I,KAAKs6B,YAETy6H,mBAAoB,WAChB/0J,KAAK6nJ,eAAiB,IAAIt6C,IAE9B8mD,sBAAuB,WACnBr0J,KAAK40J,kBAAoBxG,GAAoBpuJ,KAAKuiC,OAAO,oBAAqBviC,KAAKuiC,OAAO,uCAAwCviC,OAEtIg1J,0BAA2B,WACvB,IAAIC,EAAetzB,EACnB,OAAO,QAAUszB,EAAgB,QAAUtzB,EAAe3hI,KAAKuiC,OAAO,0BAAuB,IAAWo/F,OAAe,EAASA,EAAa,UAAO,IAAWszB,EAAgBA,EAAgBf,GAAU9zI,KAE7M00I,UAAW,SAASx0J,GAChB,OAAO4rJ,GAAwB5rJ,EAAON,KAAK40J,kBAAmB50J,KAAKg1J,8BAEvER,WAAY,WACRx0J,KAAK00J,OAAS10J,KAAK80J,UAAU90J,KAAKuiC,OAAO,WAE7C6yG,aAAc,WACV,IAAIxtG,EAAO5nC,KACX4nC,EAAKa,SAAW,GAChB+pG,GAAQ32F,SAAS,SAAStR,GACtB,IAAI2qH,GAAetpI,EAAAA,EAAAA,GAAO,GAAI2e,EAAOxT,QACrC6Q,EAAKa,SAAS8B,EAAOj7B,MAAQs4B,EAAK8C,sBAAsBH,EAAOj7B,KAAM4lJ,OAG7EvqH,cAAe,SAASX,EAAY1oB,GAChC,IAAIipB,EAASvqC,KAAKyoC,SAASuB,GAC3B,OAAOO,GAAUA,EAAOjpB,IAE5BwrE,YAAa,WACT9sF,KAAK0gC,WAAWoB,SAASmnH,IACzBjpJ,KAAKs6B,WACLt6B,KAAKm1J,8BAA8Bn1J,KAAK00J,QAAQ3yH,SAAS/hC,KAAK0gC,aAElE00H,wBAAyB,SAASv3H,EAAW6J,GACzC,OAAO7F,EAAAA,EAAAA,GAAE,SAASC,SAAS4wH,IAA4B3hH,OAAO/wC,KAAKq1J,qBAAqBx3H,EAAW6J,KAEvGytH,8BAA+B,SAASr/H,EAAU4R,GAK9C,IAJA,IAAIy7D,EAAa93E,UAAUzD,OAAS,QAAK,IAAWyD,UAAU,GAAKA,UAAU,GAAK,EAC9EiqI,EAASt1J,KAAKu1J,oBAAoBz/H,EAAU4R,EAAQy7D,GACpDqyD,EAAgBF,EAAO/zH,KAAK,IAAMqxH,IAClC6C,EAAgB/L,GAAiB5zH,GAC5B+B,EAAI,EAAGA,EAAI49H,EAAc7tI,OAAQiQ,IAAK,CAC3C,IAAI69H,EAAgBD,EAAc59H,GAC9Bm/C,GAAQ0+E,GACR11J,KAAKm1J,8BAA8BO,EAAe5/H,EAAUqtE,EAAa,GAAGphE,SAASyzH,GAC9E/L,GAAYiM,IACnB11J,KAAKo1J,wBAAwBM,EAAe5/H,GAAUiM,SAASyzH,GAGvE,OAAOF,GAEXC,oBAAqB,SAASz/H,EAAU4R,EAAQy7D,GAC5C,IAAIwyD,GAAa9zH,EAAAA,EAAAA,GAAE,SAASC,SAAS6wH,IACjC6C,GAAgB3zH,EAAAA,EAAAA,GAAE,SAASC,SAAS8wH,IACpC0C,GAASzzH,EAAAA,EAAAA,GAAE,SAASC,SAAS4wH,IAA4B3hH,OAAO4kH,GAAY5kH,OAAOykH,GAqBvF,OApBI,MAAQ9tH,GACR1nC,KAAK41J,qBAAoB,KACrBvK,GAAW3jH,EAAQ5R,GACnBw/H,EAAOhzH,SACPtiC,KAAK60J,mBACN9yH,SAAS4zH,GAEhB31J,KAAK61J,4BAA4B//H,GAAUiM,SAAS4zH,GACpD31J,KAAK81J,kBAAiB,KAClB,IAAIC,EAAWzK,GAAiBtrJ,KAAKg1J,6BACrCrJ,GAAQoK,EAAUjgI,GAClB91B,KAAKu1J,oBAAoBQ,EAAUjgI,EAAUqtE,EAAa,GAAGphE,SAASyzH,GACtEx1J,KAAK60J,mBACN,KACC,IAAI17I,EAAQnZ,KAAKuiC,OAAO,UAAU,GAC9ByzH,EAAe7K,GAAgBhyI,EAAOnZ,KAAK40J,mBAC/CjJ,GAAQqK,EAAclgI,GACtB91B,KAAKo1J,wBAAwBY,EAAclgI,GAAUiM,SAASyzH,GAC9Dx1J,KAAK60J,kBACN1xD,GAAYphE,SAAS4zH,GACjBL,GAEX79C,cAAe,SAASrmG,GACpB,OAAOywB,EAAAA,EAAAA,GAAE,SAASpyB,KAAK2B,IAE3BykJ,4BAA6B,SAAS//H,GAClC,IAAIjd,EAAkB7Y,KAAKi2J,oBAAoBngI,GAC3CogI,EAAgBnM,GAAiBj0H,EAAUjd,GAC3CzH,EAAU8kJ,EAAczmJ,KACxB0mJ,EAAmBt9I,GAAmBA,EAAgB+O,OAAS,EAAI5nB,KAAKy3G,cAAcrmG,GAAS0wB,SAASgyH,IAAwB9zJ,KAAKo2J,sBAAsB,CAC3JhlJ,QAASA,EACT+uI,KAAM,CACF/iI,MAAOvE,EACPzD,YAAa,OACbrM,QAAS,QACTmhD,YAAa5jB,IACL4vH,IAAkB5vH,EAAE8jB,WACpBy/F,GAAc/zH,EAAUwQ,EAAE8jB,SAAS9pD,OACnC61J,EAAiB1mJ,KAAK62B,EAAE8jB,SAAS36C,MACjCymJ,EAAgB5vH,EAAE8jB,SAClBpqD,KAAK60J,kBAGbrrJ,eAAgB,SAAS88B,GACrBA,EAAER,UAAUo0D,WAAWg8D,IAE3B9mJ,SAAUyjJ,MAGlB,OAAOsD,EAAiBr0H,SAASonH,IAAgCpnH,SAASgxH,IAAsC1oH,KAAK,WAAY,IAErIgsH,sBAAuB,SAAS90I,GAC5B,IAmCI8+G,EAnCAx4F,EAAO5nC,KACPq2J,EAAa,WACbzuH,EAAKlH,WAAWa,KAAK,IAAMoyH,IAAc3xH,YAAY2xH,IACrD/rH,EAAKlH,WAAWa,KAAK,4BAA4Be,SACjDsF,EAAKlH,WAAWa,KAAK,eAAee,UAEpCh2B,EAAatM,KAAKuiC,OAAO,cACzB7nB,EAAWpO,EAAa,QAAU,OAClCm4G,EAAUzkH,KAAKy3G,cAAcn2F,EAAQlQ,SAgDzC,OA/CAwa,EAAAA,EAAAA,GAAOtK,EAAQ6+H,KAAM,CACjB73I,mBAAmB,EACnB8sF,cAAe,SACflrC,aAAck2E,EAAU9+G,EAAQ6+H,KAAKj2F,YAAa,SAAS5jB,GACvD85F,EAAQ95F,GACJ,YAAcA,EAAEmE,MAAM37B,MACtBunJ,MAGRl8I,SAAU,SAASmsB,GACfm+E,EAAQziF,YAAY2xH,KAExBj5I,SAAU,CACNoI,GAAIpI,EAAW,OACfgI,GAAIhI,EAAW,UACfsI,OAAQ,MACRD,GAAI0hG,EACJ5hG,UAAW,QAEfzJ,UAAW,KACXc,SAAU,WACNm8I,KAEJjnJ,SAAUmkJ,GAA+B,IAAMjyI,EAAQ6+H,KAAK/wI,SAC5D9C,WAAYA,IAGhBgV,EAAQ9K,MAAQ,CACZgE,QAAS,SAAS87I,GACd,IAAIC,GAAkB10H,EAAAA,EAAAA,GAAEy0H,EAAKxwH,UAAU2M,WAAWlR,KAAK,gBACnDi1H,EAAWD,EAAgBE,WAAW,YAC1C7vH,EAAAA,EAAAA,GAAgB2vH,EAAiB,iBAAkB,SAASjwH,GACxD,IAAInM,GAAU2oB,EAAAA,GAAAA,IAAiBxc,IAC3B,YAAcA,EAAEx3B,MAAQqrB,IAAY45H,IAAW,UAAYztH,EAAEx3B,OAASqrB,IAAY85H,IAAc95H,IAAY65H,OAC5GsC,EAAKxwH,UAAUt3B,OACfo4B,EAAAA,EAAAA,QAAqBtlB,EAAQ6+H,KAAKzlI,SAASqI,GAAI,aAGvDyzI,EAASppH,QACTopH,EAASj0H,OAAO,iBAAkB,QAG1CviC,KAAK02J,6BAA6BjyC,GAAU,WACxC4xC,IACAzuH,EAAK+uH,yBAAyBr1I,EAASsmB,EAAKlH,YAC5C+jF,EAAQ3iF,SAAS6xH,OAEdlvC,GAEXmyC,gBAAiB,SAAS/4H,GACtB,IAAI3kB,EAAkB0xI,GAAmB5qJ,KAAK40J,kBAAmB/2H,EAAU,IAC3E,OAAO3kB,GAAkB,IAAUA,EAAgBxD,SAAW,OAASmoB,EAAU,IAErFg5H,+BAAgC,SAASh5H,EAAW1kB,GAChD,IAAIyuB,EAAO5nC,KACP2qJ,EAAsBG,GAAuB3xI,EAAOnZ,KAAKuiC,OAAO,+BAAgCviC,KAAK40J,mBACrGkC,EAAmBpM,GAA0ByD,GAAkBtwH,GAAY8sH,GAC3EwL,EAAmBn2J,KAAKo2J,sBAAsB,CAC9ChlJ,QAAS0lJ,EAAiBrnJ,KAC1B0wI,KAAM,CACF/iI,MAAOutI,EACPv1I,YAAa,OACb+0E,eAAgB,SAAS7jD,GACrBA,EAAE8jB,SAAS6gG,WAAYppH,EAAAA,EAAAA,GAAEyE,EAAEk1D,aAAa15D,SAAS8xH,KAErDpqJ,eAAgB,SAAS88B,GACrBA,EAAER,UAAUo0D,WAAW48D,IAE3B5sG,YAAa5jB,IACT,GAAIwwH,IAAqBxwH,EAAE8jB,SAAU,CACjC0sG,EAAmBxwH,EAAE8jB,SACrBghG,GAA2BvtH,EAAWi5H,EAAiBx2J,MAAOsnC,EAAKgtH,mBACnE,IAAImC,EAAeZ,EAAiBa,WAAWpzI,OAAO,IAAMyvI,IACxDzrH,EAAKgvH,gBAAgB/4H,IACjB,IAAMk5H,EAAanvI,QACnBmvI,EAAaz0H,SAEjBsF,EAAKqvH,mBAAmBp5H,EAAW1kB,GAAO4oB,SAASo0H,EAAiBzuH,WAEpEqvH,EAAaz0H,SAEjB6zH,EAAiBj1I,KAAK41I,EAAiBrnJ,MACvCzP,KAAK60J,kBAGbzlJ,SAAUokJ,MAEf1xH,SAASonH,IAAgCpnH,SAASsxH,IAAqChpH,KAAK,WAAY,GAC3G,OAAO+rH,GAEXe,gCAAiC,SAASr5H,EAAW1kB,EAAOq8D,GACxDx1E,KAAK62J,+BAA+Bh5H,EAAW1kB,GAAO4oB,SAASyzC,GAC3Dx1E,KAAK42J,gBAAgB/4H,IACrB79B,KAAKi3J,mBAAmBp5H,EAAW1kB,GAAO4oB,SAASyzC,IAG3D2hF,2BAA4B,SAASz+I,EAAQmlB,EAAW1kB,GACpD,IAAIyuB,EAAO5nC,KACPuY,EAA0BvY,KAAKuiC,OAAO,2BACtCnlB,EAAQ0uI,GAASpzI,EAAQH,GACzB0O,EAAO2kI,GAASzyI,EAAM7J,MAAQ6J,EAAM5H,UAAW6L,GAC/Cg6I,EAAiB,SAASnwI,EAAM7J,GAChC,OAAO7E,EAA0B21I,GAAsBjnI,EAAM7J,GAAS6J,EAAK7V,SAE3EimJ,EAAer3J,KAAKo2J,sBAAsB,CAC1ChlJ,QAASgmJ,EAAenwI,EAAM7J,GAC9B+iI,KAAM,CACF/iI,MAAOA,EACP89E,cAAe,QACfnyF,QAAS,KACTgwF,SAAU,WACV3jF,YAAa,UACb80C,YAAa5jB,IACT,GAAIrf,IAASqf,EAAE8jB,SAAU,CACrBnjC,EAAOqf,EAAE8jB,SACTvsB,EAAU,GAAK5W,EAAK3X,MAAQ2X,EAAK1V,UACjCssB,EAAU,GAAK,WAAa5W,EAAKzV,SAAW,KAAO,GACnD45I,GAA2BvtH,EAAWqtH,GAAoBjkI,GAAO2gB,EAAKgtH,mBACtEyC,EAAaL,WAAWpzI,OAAO,IAAMslI,IAAgC5mH,SACrEsF,EAAKsvH,gCAAgCr5H,EAAW5W,EAAMowI,EAAa3vH,UACnE,IAAIt2B,EAAUgmJ,EAAenwI,EAAMqf,EAAER,UAAUvD,OAAO,UACtD80H,EAAan2I,KAAK9P,GAClBpR,KAAK60J,kBAGbrrJ,eAAgB,SAAS88B,GACrBA,EAAER,UAAUo0D,WAAWjzE,IAE3B7X,SAAUqkJ,MAEf3xH,SAASonH,IAAgCpnH,SAASqxH,IAAiC/oH,KAAK,WAAY,GACvG,OAAOitH,GAEXhC,qBAAsB,SAASx3H,EAAW6J,GACtC,IAAI8tC,GAAQ3zC,EAAAA,EAAAA,GAAE,SAASC,SAAS6wH,IAC5Bj6I,EAAS1Y,KAAKy0J,uBACdt7I,EAAQyyI,GAAS/tH,EAAU,GAAInlB,GAanC,OAZA1Y,KAAK41J,qBAAoB,KACrBvK,GAAW3jH,EAAQ7J,GACnB,IAAIy5H,EAAgB,IAAM9hF,EAAM9tC,SAASmJ,WAAWjpB,OAChD0vI,EACA9hF,EAAM9tC,SAASpF,SAEfkzC,EAAMlzC,SAEVtiC,KAAK60J,mBACN9yH,SAASyzC,GACZx1E,KAAKm3J,2BAA2Bz+I,EAAQmlB,EAAW1kB,GAAO4oB,SAASyzC,GACnEx1E,KAAKk3J,gCAAgCr5H,EAAW1kB,EAAOq8D,GAChDA,GAEXygF,oBAAqB,SAASngI,GAC1B,IAAIjd,EAAkB7Y,KAAKuiC,OAAO,mBAC9B3pB,EAA6B5Y,KAAKuiC,OAAO,8BAI7C,OAHK1pB,GAAoBA,EAAgB+O,SACrC/O,EAAkB,CAACqxI,GAAcp0H,GAAU1M,QAAQ,IAAK,SAErDvQ,EAAgBmZ,KAAIkR,IAAa,CACpCzzB,KAAMmJ,EAA2BsqB,GACjC5iC,MAAO4zJ,GAAUhxH,QAGzB0yH,oBAAqB,SAASx1B,GAC1B,IAAIm3B,GAAgB11H,EAAAA,EAAAA,GAAE,SAASC,SAASkxH,IAA4BlxH,SAASoxH,IAAmCpxH,SAASixH,IAA6B3oH,KAAK,WAAY,GAEvK,OADApqC,KAAK02J,6BAA6Ba,EAAen3B,GAC1Cm3B,GAEXzB,iBAAkB,SAAS0B,EAAiBC,EAAqBt0D,GAC7D,IAAIshB,EACA3rG,EAAgB9Y,KAAKuiC,OAAO,iBAsBhC,OArBI9R,EAAAA,EAAAA,IAAU3X,IAAkBqqF,GAAcrqF,GAC1C2rG,EAAUzkH,KAAKy3G,gBACfz3G,KAAK02J,6BAA6BjyC,EAASgzC,IAE3ChzC,EAAUzkH,KAAKo2J,sBAAsB,CACjCjW,KAAM,CACF/iI,MAAO,CAAC,CACJhM,QAASq4B,EAAAA,EAAAA,OAA2B,gCACpCiuH,MAAOD,GACR,CACCrmJ,QAASq4B,EAAAA,EAAAA,OAA2B,4BACpCiuH,MAAOF,IAEXpiJ,YAAa,UACb80C,YAAa,SAAS5jB,GAClBA,EAAE8jB,SAASstG,SAEftoJ,SAAUskJ,MAIfjvC,EAAQ3iF,SAASkxH,IAA4BlxH,SAASmxH,IAAgCnxH,SAASixH,IAA6B3oH,KAAK,WAAY,IAExJutH,iBAAkB,SAAS1wI,EAAM9N,EAAOumB,GACpC,IAAIkI,EAAO5nC,KACP43J,GAAQ/1H,EAAAA,EAAAA,GAAE,SAAS3gB,KAAK,UAAU4gB,SAASwxH,IAAsClpH,KAAK,WAAY,GAAGrI,SAASrC,GAC9Gp/B,EAAQ2mB,EAAK,GACb/N,EAAkB0xI,GAAmBhjH,EAAKgtH,kBAAmB3tI,EAAK,IAgBtE,OAfK/N,GAAmBC,EAAMzG,OAC1Bu6I,GAA0B9zI,EAAO7Y,GAAQ,SAAS0oB,GAC9CimI,GAAgB2I,EAAO5uI,OAG3B4S,EAAAA,EAAAA,IAAK2xH,GAAoBp0I,EAAO7Y,EAAO4Y,IAAkBmV,MAAKrF,IAC1DimI,GAAgB2I,EAAO5uI,EAAQ9P,MAGvC0uB,EAAK8uH,6BAA6BkB,GAAQ,SAAStxH,GAC3C,UAAYA,EAAEx3B,MACdw3B,EAAEu5C,kBAENj4C,EAAKiwH,6BAA6B5wI,EAAM9N,EAAOumB,MAE5Ck4H,GAEXE,sBAAuB,SAAS7wI,EAAM3mB,EAAO69F,GACzC,IAAI45D,EAAqB9wI,EAAK,KAAO3mB,EACjCy3J,IACA9wI,EAAK,GAAK3mB,GAEd69F,IACAn+F,KAAK60J,iBAETmD,kBAAmB,SAASphE,EAASwpC,GACjC,IAAI63B,GAAc,EACdC,GAA0B,EAC1Bn9E,EAAWxlC,GAAAA,WAAAA,cACX4iH,EAAuB7xH,IACnB2xH,GAAeC,EACfA,GAA0B,EAG9B93B,EAAQ95F,IAEZM,EAAAA,EAAAA,GAAgBm0C,EAAU,QAASo9E,GACnC,IAAIC,EAAQxhE,EAAQr1D,KAAK,SACzBqF,EAAAA,EAAAA,GAAgBwxH,EAAO,oBAAoB,KACvCH,GAAc,KAElBrxH,EAAAA,EAAAA,GAAgBwxH,EAAO,kBAAkB,KACrCH,GAAc,EACdC,GAA0B,KAE9BtxH,EAAAA,EAAAA,GAAgBwxH,EAAO,WAAW3tH,IAC1B,MAAQA,EAAM6wG,QACd4c,GAA0B,MAGlCl4J,KAAKq4J,sBAAwBF,GAEjCG,kBAAmB,SAAS1hE,EAAS2hE,GACjC,IAAIx9E,EAAWxlC,GAAAA,WAAAA,cACXijH,EAAuBlyH,IAClBtmC,KAAKy4J,sBAAsB7hE,EAAStwD,EAAEzJ,UACvC+J,EAAAA,EAAAA,QAAqBgwD,EAAQr1D,KAAK,SAAU,UAC5Cg3H,MAGR3xH,EAAAA,EAAAA,GAAgBm0C,EAAU,gBAAiBy9E,GAC3Cx4J,KAAK04J,sBAAwBF,GAEjCC,sBAAuB,SAAS7hE,EAAS/5D,GACrC,IAAI87H,EAAgB97H,GAAU0Y,GAAAA,WAAAA,mBAC9B,OAAO1T,EAAAA,EAAAA,GAAE82H,GAAe5xH,QAAQ6vD,EAAQ/lD,YAAYjpB,SAAUia,EAAAA,EAAAA,GAAE82H,GAAe5xH,QAAQ,8BAA8Bnf,QAEzHgxI,cAAe,WACX,IAAI79E,EAAWxlC,GAAAA,WAAAA,eACf9kB,EAAAA,EAAAA,IAAUzwB,KAAKq4J,wBAA0BzxH,EAAAA,EAAAA,IAAiBm0C,EAAU,QAAS/6E,KAAKq4J,wBAClF5nI,EAAAA,EAAAA,IAAUzwB,KAAK04J,wBAA0B9xH,EAAAA,EAAAA,IAAiBm0C,EAAU,gBAAiB/6E,KAAK04J,wBAE9FxrE,SAAU,WACNltF,KAAK44J,gBACL54J,KAAKs6B,YAETu9H,6BAA8B,SAAS5wI,EAAM9N,EAAOumB,GAChD,IAAIp/B,EAAQ2mB,EAAK,GACb4xI,EAAkB,KAClBn5H,EAAWmL,QACX7qC,KAAK44J,gBACE54J,KAAK23J,iBAAiB1wI,EAAM9N,EAAOumB,IAE1CiwH,EAAc,KACd3vJ,KAAK83J,sBAAsB7wI,EAAM3mB,GAAQ,WACrCu4J,QAGJv3I,EAAU,CACVhhB,MAAO,KAAOA,EAAQ,KAAOA,EAC7B+nJ,gBAAiB8F,GAAkBlnI,GACnCkwE,SAAU,SAASznF,GACfpP,EAAQ,OAASoP,EAAO,GAAKA,GAEjCigJ,YAAaA,EACblgJ,KAAMiwB,EAAWjwB,QAErBiwB,EAAWmL,QACX,IAAI+rD,EAAU52F,KAAK84J,mBAAmBp5H,EAAYvmB,EAAOmI,GACzDslB,EAAAA,EAAAA,QAAqBgwD,EAAQr1D,KAAK,SAASqY,IAAI,WAAW1U,GAAG,GAAI,SACjEllC,KAAK44J,gBACL54J,KAAKs4J,kBAAkB1hE,EAAS+4D,GAChC3vJ,KAAKg4J,kBAAkBphE,GAAStwD,IAC5B,IAAInM,GAAU2oB,EAAAA,GAAAA,IAAiBxc,GAC/B,GAAInM,IAAY45H,GAAS,CACrB,GAAI/zJ,KAAKy4J,sBAAsB7hE,GAC3B,OAEJ52F,KAAK83J,sBAAsB7wI,EAAM3mB,GAAQ,WACrCu4J,IACIvyH,EAAEygB,UACFngB,EAAAA,EAAAA,QAAqBlH,EAAW8/G,OAAQ,YAIhDrlH,IAAY85H,IACZrtH,EAAAA,EAAAA,QAAqBiyH,IAAmB,SAExC1+H,IAAY65H,IACZh0J,KAAK83J,sBAAsB7wI,EAAM3mB,GAAQ,WACrCsmC,EAAAA,EAAAA,QAAqBiyH,IAAmB,eAIpD74J,KAAKmjF,2BAET8zE,mBAAoB,SAAShwI,EAAM9N,GAC/B,IAAI49I,GAAel1H,EAAAA,EAAAA,GAAE,SAASC,SAASonH,IAAgCpnH,SAASuxH,IAEhF,OADArzJ,KAAK23J,iBAAiB1wI,EAAM9N,EAAO49I,GAC5BA,GAEX+B,mBAAoB,SAASp5H,EAAYvmB,EAAOmI,GAC5C,IAAIs1E,GAAU/0D,EAAAA,EAAAA,GAAE,SAASuI,KAAK,WAAY,GAAGrI,SAASrC,GAClDxmB,EAAkB0xI,GAAmB5qJ,KAAK40J,kBAAmBtzI,EAAQ+mI,iBACrE5yI,EAAiByD,GAAmBA,EAAgBzD,eAAiByD,EAAgBzD,eAAiB0D,EAAM1D,eAChH,GAAIA,EAAgB,CAChB,IAAIjG,EAAWxP,KAAK8sC,aAAar3B,GACjCjG,EAASi2B,OAAO,CACZsT,OAAOntB,EAAAA,EAAAA,GAAO,CACVzS,MAAOA,GACRmI,GACHhI,UAAWs9E,SAGf52F,KAAK6nJ,eAAe5wD,aAAa/qE,KAAKlsB,KAAM42F,GAAShrE,EAAAA,EAAAA,GAAO,GAAIzS,EAAOmI,EAAS,CAC5E41E,WAAY28D,MAGpB,OAAOj9D,GAEX+/D,yBAA0B,SAASr1I,EAASoe,GACxC,IAAIkI,EAAO5nC,KACP+4J,GAASl3H,EAAAA,EAAAA,GAAE,SAASC,SAASxgB,EAAQ6+H,KAAK/wI,UAAU2yB,SAASrC,GACjE1/B,KAAKwiC,iBAAiBu2H,EAAQ/9D,GAAAA,EAAO,CACjC7/E,YAAa,CACT69I,MAAO13I,EAAQ6+H,KAAK/wI,UAExB+K,SAAUmH,EAAQ6+H,KAAKhmI,SACvBD,SAAUoH,EAAQ6+H,KAAKjmI,SACvB5N,WAAYgV,EAAQ6+H,KAAK7zI,WACzBoO,SAAU4G,EAAQ6+H,KAAKzlI,SACvBtB,UAAWkI,EAAQ6+H,KAAK/mI,UACxBG,gBAAiB,SAASo/D,GACtB,IAAIsgF,GAAiBp3H,EAAAA,EAAAA,GAAE,SAASE,SAAS42C,GACzC/wC,EAAKpF,iBAAiBy2H,EAAgBp9D,GAAAA,WAAUv6E,EAAQ6+H,MACxDngJ,KAAKqpH,WAETgtB,iCAAiC,EACjCt8H,UAAW,WACP,OAAOk0H,GAA4B3sH,EAAQ6+H,KAAKzlI,SAASqI,KAE7DxV,SAAS,EACTjF,mBAAmB,EACnBwR,mBAAoB9Z,KAAKuiC,OAAO,4BAChClpB,qBAAqB,EACrBmB,QAAS8G,EAAQ9K,MAAMgE,QACvBK,SAAS,EACTrN,MAAO,OACP9E,OAAQ,OACRsS,WAAW,KAGnB07I,6BAA8B,SAASjyC,EAAS2b,GAC5Cx5F,EAAAA,EAAAA,GAAgB69E,EAAS,UAAW2b,GACpCx5F,EAAAA,EAAAA,GAAgB69E,EAAS,SAAU,SAASn+E,IACpCwc,EAAAA,GAAAA,IAAiBxc,KAAO0tH,IACxB5zB,EAAQ95F,UAKxB6mD,EAAAA,EAAAA,GAAkB,kBAAmBgnE,IACrC,UCxsBA,M,WCWI+E,GAAoB1rH,GAAAA,KAAAA,QAAqB,CACzCtB,YAAa,WACTlsC,KAAKm5J,uBAETA,oBAAqB,WACbn5J,KAAKuiC,OAAO,8BACZviC,KAAKo5J,aACEp5J,KAAKq5J,qBACZr5J,KAAKq5J,oBAAoB7qJ,QAGjC8qJ,cAAe,WACPt5J,KAAKq5J,sBACLr5J,KAAKq5J,oBAAoBzuH,UACzB5qC,KAAKq5J,yBAAsB,GAE3Br5J,KAAKu5J,iBACLv5J,KAAKu5J,eAAe3uH,UACpB5qC,KAAKu5J,oBAAiB,IAG9BH,WAAY,WACR,IAAIxxH,EAAO5nC,KACX4nC,EAAK0xH,gBACL1xH,EAAKyxH,oBAAsBzxH,EAAKpF,iBAAiBoF,EAAKzG,UAAW65D,GAAAA,GAAOpvE,EAAAA,EAAAA,GAAO,CAC3ElX,MAAO+0B,EAAAA,EAAAA,OAA2B,sCAClClwB,gBAAiB,SAAS2kE,GACtB,OAAOt2C,EAAK4xH,yBAAyBt7E,IAEzCvzE,gBAAiB,SAAS8pB,GAClB,YAAcA,EAAKnlB,MACnBs4B,EAAKrF,OAAO,6BAA8B9N,EAAKn0B,QAGvD4a,aAAc0sB,EAAK6xH,yBACpB7xH,EAAKrF,OAAO,sBAAuB,CAClCroB,SAAU,SAASosB,GACfie,GAAa3c,GACbA,EAAK0xH,qBAIjBE,yBAA0B,SAAS7gF,GAC/B,IAAIuF,GAAkBr8C,EAAAA,EAAAA,GAAE82C,GACpB+gF,GAA0B73H,EAAAA,EAAAA,GAAE,SAASE,UAASF,EAAAA,EAAAA,GAAE82C,IACpD34E,KAAKu5J,eAAiBv5J,KAAKwiC,iBAAiBk3H,EAAyBvF,IAAevoI,EAAAA,EAAAA,GAAO,CACvFtrB,MAAON,KAAKuiC,OAAO,eACnB7pB,OAAQ1Y,KAAKqqC,cAAc,WAAWosB,uBACvCz2D,KAAKuiC,OAAO,iBAAkB,CAC7B9pB,iBAAkBzY,KAAKqqC,cAAc,cAAc0nH,+BAEvD/xJ,KAAKwiC,iBAAiB07C,EAAiBy7E,GAAAA,WAAY,CAC/Ch5I,UAAW,UAGnB84I,sBAAuB,WACnB,IAAI7xH,EAAO5nC,KACX,MAAO,CAAC,CACJqN,QAAS,SACT+T,SAAU,QACVI,OAAQ,WACRF,QAAS,CACL7R,KAAMg6B,EAAAA,EAAAA,OAA2B,MACjCl6B,QAAS,SAAS+2B,GACd,IAAI1iB,EAASgkB,EAAK2xH,eAAeh3H,OAAO,SACxCqF,EAAKrF,OAAO,cAAe3e,GAC3BgkB,EAAKyxH,oBAAoB7qJ,UAGlC,CACCnB,QAAS,SACT+T,SAAU,QACVI,OAAQ,WACRF,QAAS,CACL7R,KAAMg6B,EAAAA,EAAAA,OAA2B,UACjCl6B,QAAS,SAAS+2B,GACdsB,EAAKyxH,oBAAoB7qJ,YAKzCo7B,cAAe,SAASnV,GACpB,OAAQA,EAAKnlB,MACT,IAAK,gBACL,IAAK,qBACDtP,KAAK8rC,cACLrX,EAAKqV,SAAU,EACf,MACJ,QACI9pC,KAAKs6B,SAAS7F,OAInBmlI,GAAsB,CAC7B1zG,eAAgB,WACZ,MAAO,CACHt+C,cAAe,CACXgR,2BAA4B,CACxBwH,IAAKqpB,EAAAA,EAAAA,OAA2B,uBAChClpB,GAAIkpB,EAAAA,EAAAA,OAA2B,sBAC/BppB,OAAQopB,EAAAA,EAAAA,OAA2B,0BACnCnpB,MAAOmpB,EAAAA,EAAAA,OAA2B,0BAEtC9wB,4BAA6B,CACzByC,QAASquB,EAAAA,EAAAA,OAA2B,0CACpCluB,MAAOkuB,EAAAA,EAAAA,OAA2B,yCAClC1tB,SAAU0tB,EAAAA,EAAAA,OAA2B,4CACrC7tB,SAAU6tB,EAAAA,EAAAA,OAA2B,uCACrC5tB,gBAAiB4tB,EAAAA,EAAAA,OAA2B,+CAC5CjuB,YAAaiuB,EAAAA,EAAAA,OAA2B,0CACxChuB,mBAAoBguB,EAAAA,EAAAA,OAA2B,kDAC/CztB,WAAYytB,EAAAA,EAAAA,OAA2B,6CACvCpuB,SAAUouB,EAAAA,EAAAA,OAA2B,2CACrC3tB,YAAa2tB,EAAAA,EAAAA,OAA2B,8CACxCnuB,SAAUmuB,EAAAA,EAAAA,OAA2B,2CACrC/tB,QAAS+tB,EAAAA,EAAAA,OAA2B,0CACpC9tB,WAAY8tB,EAAAA,EAAAA,OAA2B,+CAG/C5hC,mBAAoB,KAG5BqmC,MAAO,CACH2rH,kBAAmBX,KCnI3BnX,GAAAA,eAAoB,gBAAiB6X,ICyBrC,IAAIE,GAAqB,eACrBC,GAA0BD,GAAqB,QAC/CE,GAA8BF,GAAqB,YACnDG,GAAkCH,GAAqB,gBACvDI,GAA8BJ,GAAqB,QACnDK,GAAsB,cACtBC,GAAkB5sH,GAAAA,KAAAA,QAAqB,CACvC/L,UAAW,WACP,OAAOzhC,KAAKuiC,OAAO,wBAA0BviC,KAAKqqC,cAAc,QAAQhjC,cAE5E4hC,KAAM,WACFjpC,KAAKqqC,cAAc,QAAQ6nC,kBAAkB/zB,KAAI,IAAMn+C,KAAKylC,YAEhEyG,YAAa,WACT,IAAIxL,EAAW1gC,KAAKmhC,UACpBT,EAASmK,QAAQ/I,SAAS9hC,KAAKqhC,gBAAgBy4H,KAC/C,IAAIO,GAAiBx4H,EAAAA,EAAAA,GAAE,SAASC,SAAS9hC,KAAKqhC,gBAAgB64H,KAA8Bn4H,SAASrB,GACjG1gC,KAAKuiC,OAAO,gBAAkBviC,KAAKs6J,oBACnCD,EAAetpH,OAAO/wC,KAAKu6J,oBAAoBxpH,OAAO/wC,KAAKw6J,qBAAqBzpH,OAAO/wC,KAAKy6J,mBAC5F/5H,EAASqQ,OAAO/wC,KAAK06J,4BAErBL,EAAetpH,OAAO/wC,KAAKw6J,qBAAqBzpH,OAAO/wC,KAAKy6J,oBAGpEF,iBAAkB,WACd,IAAI3yH,EAAO5nC,KACP0gC,GAAWmB,EAAAA,EAAAA,GAAE,SAASC,SAAS9hC,KAAKqhC,gBAAgB24H,KAQxD,OAPApyH,EAAKpF,iBAAiB9B,EAAUi6H,GAAAA,EAAU,CACtCr6J,MAAOsnC,EAAKrF,OAAO,6BACnBtpB,eAAgB,SAASqtB,GACrBsB,EAAKrF,OAAO,4BAA6B+D,EAAEhmC,UAGnDogC,EAAS0J,KAAK,QAASpqC,KAAKuiC,OAAO,wCAC5B7B,GAEX85H,kBAAmB,WACf,IAAI5yH,EAAO5nC,KACP0gC,GAAWmB,EAAAA,EAAAA,GAAE,SAASC,SAAS,kBAInC,OAHA8E,EAAAA,EAAAA,GAAgBlG,EAAU,SAAS,IAAMkH,EAAKgzH,uBAC9C32G,GAAuB,cAAerc,EAAMlH,OAAU,GAAQ,IAAMkH,EAAKgzH,uBACzEhzH,EAAKizH,sBAAsBn6H,GACpBA,GAEX+5H,gBAAiB,WACb,IAEIK,EAFAlzH,EAAO5nC,KACP+6J,GAAel5H,EAAAA,EAAAA,GAAE,SAASC,SAAS8F,EAAKvG,gBAAgB04H,KAExD9xJ,EAAc2/B,EAAKrF,OAAO,eAuB9B,OAtBIt6B,GACA2zB,EAAAA,EAAAA,IAAKgM,EAAKozH,cAAc/yJ,EAAa2/B,EAAKyC,cAAc,cAAc0nH,8BAA8B1jI,MAAM,SAASysI,GAC/G,IAAIxpJ,EAAgBs2B,EAAKrF,OAAO,6BAChC,GAAIjxB,EAAe,CACf,IAAI2pJ,EAAa3pJ,EAAc,CAC3Bw0B,UAAW8B,EAAK9B,UAChB79B,YAAaA,EACbwH,KAAMqrJ,IAEN,kBAAoBG,IACpBH,EAAaG,GAGrBF,EAAatrJ,KAAKqrJ,OAGtBA,EAAalzH,EAAKrF,OAAO,kCACzBw4H,EAAatrJ,KAAKqrJ,IAEtBl0H,EAAAA,EAAAA,GAAgBm0H,EAAc,SAAS,IAAMnzH,EAAKgzH,uBAClD32G,GAAuB,cAAerc,EAAMmzH,OAAc,GAAQ,IAAMnzH,EAAKgzH,uBAC7EhzH,EAAKizH,sBAAsBE,GACpBA,GAEXH,mBAAoB,WAChB56J,KAAKuiC,OAAO,8BAA8B,IAE9Cm4H,wBAAyB,WACrB,IAAI9yH,EAAO5nC,KACPk7J,EAAmB,IAAMtzH,EAAKrF,OAAO,cAAe,MACpD7B,GAAWmB,EAAAA,EAAAA,GAAE,SAASC,SAAS8F,EAAKvG,gBAAgB44H,KAAkCxqJ,KAAKm4B,EAAKrF,OAAO,kCAI3G,OAHAqE,EAAAA,EAAAA,GAAgBlG,EAAU,QAASw6H,GACnCj3G,GAAuB,cAAejkD,KAAM0gC,OAAU,EAAQw6H,GAC9DtzH,EAAKizH,sBAAsBn6H,GACpBA,GAEXm6H,sBAAuB,SAASn6H,GAC5B,IAAK1gC,KAAKuiC,OAAO,+BAAgC,CAC7C,IAAI44H,EAAWn7J,KAAKuiC,OAAO,aAAe,EAC1C7B,EAAS0J,KAAK,WAAY+wH,KAGlCvxH,cAAe,SAASnV,GACpB,OAAQA,EAAKnlB,MACT,IAAK,cACDtP,KAAK8rC,cACL9rC,KAAKuiC,OAAO,6BAA6B,GACzC9N,EAAKqV,SAAU,EACf,MACJ,IAAK,cACD9pC,KAAK8rC,cACLrX,EAAKqV,SAAU,EACf,MACJ,QACI9pC,KAAKs6B,SAAS7F,KAG1B2mI,kBAAmB,SAASC,EAAWC,EAAep7H,GAClD,IAAIlX,EAAS,IAAIlB,OAAOuzI,EAAW,MAAMvzI,OAAOwzI,GAIhD,OAHI7qI,EAAAA,EAAAA,IAAUyP,KACVlX,GAAUkX,GAEPlX,GAEXuyI,oBAAqB,SAASj7J,GAC1B,OAAOyG,MAAM2iB,QAAQppB,GAAS,KAAKwnB,OAAOxnB,EAAMuoB,KAAK,QAAS,MAAQ,KAAKf,OAAOxnB,EAAO,MAE7Fk7J,cAAe,SAASriJ,EAAOD,EAAiB5Y,GAC5C,IAAI+kB,EAAW,IAAIgI,EAAAA,GACfouI,EAAqBviJ,GAAmBA,EAAgB5H,cAC5D,IAAImf,EAAAA,EAAAA,IAAUnwB,IAAUm7J,EACpB,IAAKA,GAAsBtiJ,EAAMzG,OAC7Bu6I,GAA0B9zI,EAAO7Y,GAAOoP,IACpC2V,EAAS8I,QAAQnuB,KAAKu7J,oBAAoB7rJ,WAE3C,CACH,IAAIsuD,EAAej3D,MAAM2iB,QAAQppB,GAASA,EAAQo7J,EAAAA,gBAA0BviJ,EAAO7Y,IACnFs7B,EAAAA,EAAAA,IAAK2xH,GAAoBp0I,EAAO6kD,EAAc9kD,EAAiBihJ,KAAsB9rI,MAAK3e,IACtF2V,EAAS8I,QAAQnuB,KAAKu7J,oBAAoB7rJ,YAIlD2V,EAAS8I,QAAQ,IAErB,OAAO9I,EAASoJ,WAEpBktI,iBAAkB,SAAS1zJ,EAAaqZ,GACpC,IAIIg6I,EAJA1zH,EAAO5nC,KACPkjC,EAAYj7B,EAAY,GACxBod,EAAW,IAAIgI,EAAAA,GACfnU,EAAkB0xI,GAAmBtpI,EAAQ7I,iBAAkByqB,GAE/D/pB,EAAQyyI,GAAS3jJ,EAAY,GAAIqZ,EAAQxa,SACzCu0J,EAAYliJ,EAAM/H,SAAW,GAC7B9Q,EAAQ2H,EAAY,GAWxB,OATIqzJ,EADApiJ,EACgBA,EAAgB9H,UAAWgsD,EAAAA,GAAAA,IAAWlkD,EAAgB5J,MAEtDk7I,GADT,OAASlqJ,EACsB,MAAQ4iC,EAAY,UAAY,aAEhCA,EAF8C5hB,EAAQ3I,6BAIhG3Y,KAAKw7J,cAAcriJ,EAAOD,EAAiB5Y,GAAO+tB,MAAK6R,IACnD7a,EAAS8I,QAAQyZ,EAAKwzH,kBAAkBC,EAAWC,EAAep7H,OAE/D7a,GAEXu2I,aAAc,SAAS3zJ,EAAaqZ,EAASu6I,GACzC,IAAIj0H,EAAO5nC,KACPgpB,EAAS,IAAIqE,EAAAA,GACbyuI,EAAY,GACZ7R,EAAaC,GAAcjiJ,GAwB/B,OAvBAA,EAAY4zC,SAAQ50B,IACZwiI,GAAYxiI,GACZ60I,EAAUzzI,KAAKuf,EAAK+zH,iBAAiB10I,EAAM3F,IACpC01D,GAAQ/vD,IACf60I,EAAUzzI,KAAKuf,EAAKg0H,aAAa30I,EAAM3F,GAAS,OAGxDsa,EAAAA,GAAAA,MAAW57B,KAAM87J,GAAWztI,MAAM,WAE9B,IADA,IAAI5e,EACK+9I,EAAOniI,UAAUzD,OAAQ6M,EAAO,IAAI1tB,MAAMymJ,GAAOC,EAAO,EAAGA,EAAOD,EAAMC,IAC7Eh5H,EAAKg5H,GAAQpiI,UAAUoiI,GAE3B,GAAI,MAAQxD,EAAW,GAAI,CACvB,IAAI8R,EAAYz6I,EAAQ1I,2BAA2B,MAAQqxI,EAAWH,UAAU,EAAG,GAAGtrF,cAAgByrF,EAAWH,UAAU,IAAItiI,MAAM,KACrI/X,EAAO,GAAGqY,OAAOi0I,EAAU,GAAI,KAAKj0I,OAAO2M,EAAK,SAEhDhlB,EAAOglB,EAAK5L,KAAK,IAAIf,OAAOxG,EAAQ1I,2BAA2BqxI,GAAa,MAE5E4R,IACApsJ,EAAO,IAAIqY,OAAOrY,EAAM,MAE5BuZ,EAAOmF,QAAQ1e,MAEZuZ,GAEXgyI,cAAe,SAAS/yJ,EAAawQ,GACjC,IAAI6I,EAAU,CACV7I,iBAAkBA,EAClB3R,QAAS9G,KAAKqqC,cAAc,WAAWosB,sBACvC99C,4BAA6B3Y,KAAKuiC,OAAO,6CACzC3pB,2BAA4B5Y,KAAKuiC,OAAO,6CAE5C,OAAOknH,GAAYxhJ,GAAejI,KAAK27J,iBAAiB1zJ,EAAaqZ,GAAWthB,KAAK47J,aAAa3zJ,EAAaqZ,MAG5G06I,GAAoB,CAC3B91G,eAAgB,WACZ,MAAO,CACHp+C,YAAa,CACTyF,SAAS,EACT0O,eAAe,EACftH,MAAO,CACHyH,aAAcqtB,EAAAA,EAAAA,OAA2B,sCACzCttB,YAAastB,EAAAA,EAAAA,OAA2B,qCACxCptB,kBAAmBotB,EAAAA,EAAAA,OAA2B,+CAK9DyE,MAAO,CACH+tH,gBAAiB7B,IAErBhsH,UAAW,CACPJ,YAAa,CACTt+B,KAAM,CACFk6B,cAAe,SAASnV,GACpB,OAAQA,EAAKnlB,MACT,IAAK,cACDtP,KAAKqrE,eACL52C,EAAKqV,SAAU,EACf,MACJ,QACI9pC,KAAKs6B,SAAS7F,SCxP1CstH,GAAAA,eAAoB,cAAeia,ICOnC,IAAIE,GAAqB,eACrBC,GAAoB,cACpB5yE,GAAqB,eACrBgzD,GAAoB,IAExB,SAAS5rI,GAAYxC,GACjB,OAAOsiB,EAAAA,EAAAA,IAAUtiB,EAAOwC,aAAexC,EAAOwC,YAAcxC,EAAOiC,eAGvE,SAASktD,GAAWnvD,EAAQsB,GACxB,IAAIiD,EAASvE,EAAOuE,OACpB,OAAKvE,EAAOmvD,WAGR5qD,EACOvE,EAAOmvD,WAAWpxC,KAAKxZ,EAAQjD,GAEnCtB,EAAOmvD,WAAW7tD,GALdA,EAOR,IAAI2sJ,GAAe,CACtBl2G,eAAgB,WACZ,MAAO,CACH15C,YAAa,CACTe,SAAS,EACTC,MAAO,IACP0X,YAAaukB,EAAAA,EAAAA,OAA2B,qCACxCxkB,qBAAqB,EACrBD,wBAAwB,EACxBvV,KAAM,GACN0V,0BAA0B,KAItCipB,UAAW,CACPJ,YAAa,CACTt+B,KAAM,CACFw5B,cAAe,WACX,OAAOlpC,KAAKs6B,WAAWxS,OAAO,CAAC,kBAEnCgjD,2BAA4B,WACxB,IAAIlnD,EAAS5jB,KAAKs6B,WACd+hI,EAAe,SAASz0H,EAAMn4B,GAC9B,IAAIooB,EACA1pB,EAGAuE,EAFA5L,EAAU8gC,EAAKiP,mBAAmB3F,aAClC/rB,EAA2ByiB,EAAKrF,OAAO,wCAEvCU,EAAU,GACd,IAAKxzB,EACD,OAAO,KAGX,SAAS6sJ,EAAYl/I,GAEjB,IADA,IAAIm/I,GAAcvqG,EAAAA,EAAAA,IAAct/C,EAAO2C,WAC9BmnJ,EAAK,EAAGA,EAAKp/I,EAAMwK,OAAQ40I,IAAM,CACtC,IAAIl8J,EAAQi8J,EAAYn/I,EAAMo/I,IAC9Bv5H,EAAQ5a,KAAKla,EAAOyvD,uBAAuBt9D,EAAO,KAAM,YAGhE,IAAKu3B,EAAI,EAAGA,EAAI/wB,EAAQ8gB,OAAQiQ,IAE5B,GADA1pB,EAASrH,EAAQ+wB,KACb1S,GAA6BhX,EAAOZ,UAGpCoD,GAAYxC,IAAWA,EAAO8C,0BAA2B,CACzDyB,EAASvE,EAAOuE,OAChB,IAAIzK,EAAcq1D,GAAWnvD,EAAQsB,GACjCiD,GAAUA,EAAO0K,OACjB6jF,EAAAA,GAAAA,GAAUvuF,EAAO0K,OAAOwG,OAAOzV,EAAOyvD,uBAAuB1xC,KAAK,CAC9D3a,UAAWmB,EAAO0C,YAClB5D,SAAUkB,EAAOlB,SACjBP,0BAA2B9C,EAAO8C,2BACnChJ,EAAa,KAAM,WAAWi5F,YAAY7yE,KAAKiuI,QAC3C,IAAWr0J,GAClBg7B,EAAQ5a,KAAKla,EAAOyvD,uBAAuB31D,EAAa,KAAM,WAI1E,OAAI,IAAMg7B,EAAQrb,OACP,CAAC,KAELsnB,EAAAA,eAA6BjM,EAAS,MAxC9B,CAyCjBjjC,KAAMA,KAAKuiC,OAAO,qBACpB,OAAO2M,EAAAA,eAA6B,CAACtrB,EAAQy4I,KAEjDtqF,aAAc,SAAStiE,GACnBzP,KAAKuiC,OAAO,mBAAoB9yB,IAEpCm6B,cAAe,SAASnV,GACpB,OAAQA,EAAKqgC,UACT,IAAK,mBACL,IAAK,cACD90D,KAAKqrE,eACL52C,EAAKqV,SAAU,EACf,MACJ,QACI9pC,KAAKs6B,SAAS7F,OAKlCyZ,MAAO,CACH0nC,YAAa,WACT,IAAI6mF,EAAwB,SAAS70H,GACjC,OAAOA,EAAKrF,OAAO,gBAEvB,MAAO,CACHonD,iBAAkB,WACd,IAAIvsE,EAAQpd,KAAKs6B,WACjB,OAAOt6B,KAAK08J,mBAAmBt/I,IAEnCs/I,mBAAoB,SAASt/I,GACzB,IAAIwqB,EAAO5nC,KACPs7D,EAAiB1zB,EAAKyC,cAAc,QACpCsyH,EAAqBF,EAAsB70H,GAC/C,GAAI+0H,GAAsBA,EAAmBpvJ,QAAS,CAClD,IAAIkV,EAAc,CACdjT,SAAU,SAASE,EAAM0a,EAAO9Q,GAC5B,IAAIsjJ,GAAU/6H,EAAAA,EAAAA,GAAE,SAASC,SAAS8F,EAAKvG,gBAAgB66H,KAAqBn6H,SAASzoB,GACrFsuB,EAAKyC,cAAc,iBAAiB4sD,aAAa2lE,EAAS,CACtDpvJ,MAAOmvJ,EAAmBnvJ,MAC1B0X,YAAay3I,EAAmBz3I,YAChCgyE,WAAY,cACZ52F,MAAOsnC,EAAKrF,OAAO,oBACnBkpE,mBAAoB8wC,GACpBplD,SAAU,SAAS72F,GACfg7D,EAAeyW,aAAazxE,IAEhCoR,cAAe,CACXq5F,UAAW,CACP,aAActhE,EAAAA,EAAAA,OAA2B,GAAG3hB,OAAO8f,EAAK9B,UAAUkF,KAAM,0BAIpFpD,EAAKsF,UAET59B,KAAM,cACN8R,SAAU,QACVD,aAAc,QACdhO,UAAW,IAEfiK,EAAMiL,KAAK5F,GAEf,OAAOrF,GAEXy/I,oBAAqB,WACjB,IAAIj1H,EAAO5nC,KACP0gC,EAAWkH,EAAKzG,UAChB27H,EAAep8H,EAASa,KAAK,IAAMqG,EAAKvG,gBAAgB66H,KAAqBt4I,QAAQ,WACrF,OAAOie,EAAAA,EAAAA,GAAE7hC,MAAM+mC,QAAQ,IAAMa,EAAKvG,gBAAgBkoD,KAAqB5iD,GAAGjG,MAE9E,OAAIo8H,EAAal1I,OACNk1I,EAAaC,UAAU,YAE3B,MAEXt7H,UAAW,WACP,IAAIk7H,EAAqBF,EAAsBz8J,MAC/C,OAAOA,KAAKs6B,YAAcqiI,GAAsBA,EAAmBpvJ,SAEvEq8B,cAAe,SAASnV,GACpB,GAAI,gBAAkBA,EAAKnlB,KAAM,CAC7B,GAAI,qBAAuBmlB,EAAKqgC,SAAU,CACtC,IAAIhuB,EAAS9mC,KAAK68J,sBACd/1H,GACAA,EAAOvE,OAAO,QAAS9N,EAAKn0B,YAGhCN,KAAK8rC,cAETrX,EAAKqV,SAAU,OAEf9pC,KAAKs6B,SAAS7F,KAtEjB,GA2EboR,SAAU,CACNoD,KAAM,WACFjpC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1BrrB,KAAKg9J,cAAgB,IAEzBC,wBAAyB,SAAS9uJ,EAAQ2lE,GACtC,IAAIxzE,EAAQg9D,GAAWnvD,EAAQ2lE,GAC3BgqE,EAAgB5uG,EAAAA,yBAAuC/gC,EAAQ,UACnE,OAAO+gC,EAAAA,YAA0B5uC,EAAOw9I,IAE5Cof,qBAAsB,WAClB,IAAIC,EAAkBn9J,KAAKuiC,OAAO,sCAClC,OAAO,SAAS2wB,GACZ,OAAOiqG,EAAkBjqG,EAAMA,EAAI7mC,gBAG3C+wI,2BAA4B,SAASjvJ,EAAQqpC,EAAas8B,GACtD,IAAIupF,EAEAppB,EADAlnG,EAAUyK,EAAY9P,SAEtB41H,EAAmBt9J,KAAKk9J,uBACxBK,EAAuBD,EAAiBxpF,GACxC0pF,EAAkB,GACtB,GAAKzwH,EAAQnlB,QAEN,GAAIzZ,EACP,GAAIA,EAAOmE,YAAc,IAAMnE,EAAO+E,gBAClC+gI,EAASz8F,MACN,CACH,IAAIhY,EAAcx/B,KAAK62C,mBAAmBc,gBAAgBxpC,EAAOic,OACjE6pH,EAASlnG,EAAQ8D,SAAS,MAAM3L,GAAG1F,GAAa+B,KAAK,WANzDwL,GAAUlL,EAAAA,EAAAA,GAAE,SAASkP,OAAOyG,GAsBhC,OAbAy8F,EAAS,QAAUopB,EAAUppB,SAAW,IAAWopB,GAAWA,EAAQz1I,OAASqsH,EAASlnG,EAAQxL,KAAK,KACrG0yG,EAAO7iH,MAAM,SAAS4C,EAAGmN,GAErB,IADA,IAAIs8H,GAAY57H,EAAAA,EAAAA,GAAEV,GAAS8pF,WAClBpzF,EAAI,EAAGA,EAAI4lI,EAAU71I,OAAQiQ,IAAK,CACvC,IAAIxD,EAAOopI,EAAU99H,IAAI9H,GACzB,GAAI,IAAMxD,EAAK4kB,SAAU,CACrB,IAAIykH,EAAiBJ,EAAiBjpI,EAAKuL,aAAevL,EAAKsgB,WAC3D+oH,EAAerzI,QAAQkzI,IAAyB,GAChDC,EAAgBn1I,KAAKgM,QAK9BmpI,GAEXG,yBAA0B,SAASC,EAAW9pF,GAC1C,IAAI+pF,GAAkBh8H,EAAAA,EAAAA,GAAE,UAAUC,SAAS9hC,KAAKqhC,gBAAgB86H,KAC5D1sJ,EAAOmuJ,EAAUnuJ,OACjBquJ,EAAsBF,EAAU,GAChCN,EAAmBt9J,KAAKk9J,uBACxB9yI,EAAQkzI,EAAiB7tJ,GAAM4a,QAAQizI,EAAiBxpF,IAC5D,GAAI1pD,GAAS,EAQT,OAPI0zI,EAAoBl+H,YACpBk+H,EAAoBl+H,YAAcnwB,EAAK6a,OAAO,EAAGF,GAEjD0zI,EAAoBnpH,UAAYllC,EAAK6a,OAAO,EAAGF,GAEnDwzI,EAAUG,MAAMF,EAAgBpuJ,KAAKA,EAAK6a,OAAOF,EAAO0pD,EAAWlsD,UACnEg2I,GAAY/7H,EAAAA,EAAAA,GAAE0T,GAAAA,WAAAA,eAA0B9lC,EAAK6a,OAAOF,EAAQ0pD,EAAWlsD,UAAUqxD,YAAY4kF,GACtF79J,KAAK29J,yBAAyBC,EAAW9pF,IAGxDkqF,qBAAsB,SAASxmH,EAAaymH,EAAU9vJ,GAClD,IAAIy5B,EAAO5nC,KACPs9J,EAAmBt9J,KAAKk9J,uBACxBppF,EAAalsC,EAAKrF,OAAO,oBAI7B,GAHI07H,GAAY9vJ,IACZ2lE,EAAaA,GAAclsC,EAAKq1H,wBAAwB9uJ,EAAQ2lE,IAEhEA,GAAclsC,EAAKrF,OAAO,mCAAoC,CAC9D,IAAI27H,EAAYt2H,EAAKw1H,2BAA2BjvJ,EAAQqpC,EAAas8B,GACrEoqF,EAAUriH,SAAQsiH,IACVF,EACIX,GAAiBz7H,EAAAA,EAAAA,GAAEs8H,GAAU1uJ,UAAY6tJ,EAAiBxpF,KAC1DjyC,EAAAA,EAAAA,GAAEs8H,GAAUpiH,aAAYla,EAAAA,EAAAA,GAAE,UAAUC,SAAS8F,EAAKvG,gBAAgB86H,KAAoB1sJ,MAAKoyB,EAAAA,EAAAA,GAAEs8H,GAAU1uJ,SAG3Gm4B,EAAK+1H,0BAAyB97H,EAAAA,EAAAA,GAAEs8H,GAAWrqF,QAK3D5nC,YAAa,WACTlsC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YACtBrrB,KAAKuiC,SAASl2B,aAAerM,KAAKuiC,OAAO,sBACrCviC,KAAKuiC,OAAO,kCACZ0Q,aAAajzC,KAAKo+J,iBAClBp+J,KAAKo+J,gBAAkBprH,WAAW,WAC9BhzC,KAAKg+J,qBAAqBh+J,KAAK49C,oBACjCtZ,KAAKtkC,QAEPA,KAAKg+J,qBAAqBh+J,KAAK49C,qBAI3CxI,YAAa,SAAS1E,EAAOjB,GACzB,IAAIthC,EAASshC,EAAWthC,OACpBqD,EAAWrD,EAAOuE,QAAUvE,EAAOuE,OAAOlB,UAAYrD,EAAOqD,SAC7DysJ,EAAW,WAAazsJ,EACxBb,GAAYxC,KAAYshC,EAAW+8D,WAC/BxsG,KAAKuiC,OAAO,kCACPviC,KAAKg9J,cAAcp1I,SACpBqrB,aAAajzC,KAAKo+J,iBAClBp+J,KAAKo+J,gBAAkBprH,WAAW,WAC9BhzC,KAAKg9J,cAAcnhH,QAAQ,SAAS7wB,GAChChrB,KAAKg+J,qBAAqBvqI,MAAMzzB,KAAMgrB,IACxCsZ,KAAKtkC,OACPA,KAAKg9J,cAAgB,IACvB14H,KAAKtkC,QAEXA,KAAKg9J,cAAc30I,KAAK,CAACqoB,EAAOutH,EAAU9vJ,KAE1CnO,KAAKg+J,qBAAqBttH,EAAOutH,EAAU9vJ,IAGnDnO,KAAKs6B,SAASoW,EAAOjB,IAEzB7E,QAAS,WACLqI,aAAajzC,KAAKo+J,iBAClBp+J,KAAKs6B,gBClTzBkwB,GAAAA,eAAwB,SAAU4xG,I,eCH3B,MAAMiC,WAAyBhuD,GAAAA,EAClCzjB,eAAen4D,GACX,OAAQA,EAAKnlB,MACT,IAAK,YACD,IAAIgvJ,EAAmBt+J,KAAKuiC,OAAO,oBAC/B+7H,GACAA,EAAiB7pI,EAAKn0B,OAE1B,MACJ,IAAK,WACD,IAAIi+J,EAAkBv+J,KAAKuiC,OAAO,mBAC9Bg8H,GACAA,EAAgB9pI,EAAKn0B,OAGjCquI,MAAM/hD,eAAen4D,I,yDChBtB,SAAS+pI,GAASC,GACrB,OAAOA,EAAY73J,OAAO63J,EAAUr1I,QAAQ,KAAM,KAAO,ECGtD,SAASs1I,GAAgBpvJ,EAAM6xB,GAClC,IAAIw9H,EACAC,EAAgB,QAAUD,GAAwBE,EAAAA,GAAAA,GAAwB19H,UAAa,IAAWw9H,EAAwBA,EAAwB,GACtJ,OAAOH,GAASI,EAActvJ,IAE3B,SAASwvJ,GAAgB39H,GAC5B,OAAOu9H,GAAgB,QAASv9H,GAE7B,SAAS49H,GAAmB59H,GAC/B,OAAOu9H,GAAgB,WAAYv9H,GCXvC,IAAI69H,GAAY,CAAC,kBAAmB,cAiBzBC,GAAe1uI,IACtB,IACI2uI,kBAAmBA,EACnBC,YAAaA,EACbC,gBAAiBA,EACjBC,mBAAoBA,EACpBC,aAAcA,EACdC,SAAUA,EACVC,UAAWA,EACX35J,OACI0T,gBAAiBkmJ,IAErBlvI,EACJ,OAAOkvI,GAAQxwH,EAAAA,EAAAA,GAAS,CACpBywH,eAAgBF,EAChBF,aAAcA,EACdH,YAAaA,EACbI,SAAUA,EACVH,gBAAiBA,EACjBC,mBAAoBA,GACrBH,KAEA,SAASS,GAAyBj/F,GACrC,IACI41F,KAAMsJ,EACNC,UAAWC,EACXC,MAAOC,EACPt4H,OAAQu4H,GACRv/F,EACAw/F,EAAeJ,EAAiBE,EAAaJ,EAC7CR,EAAkBa,EAAcC,EAAe,EAC/Cb,EAAqBY,GAAeH,EAAiBE,GAAc,EACvE,MAAO,CACHZ,gBAAiBA,EACjBC,mBAAoBA,GAI5B,SAASc,GAAiBj5F,GACtB,IACIovF,KAAMA,EACNuJ,UAAWA,EACXE,MAAOA,EACPr4H,OAAQA,GACRw/B,EACA+4F,EAAcnB,GAAgBp3H,GAC9Bo4H,EAAiBhB,GAAgBe,GACjCD,EAAYd,GAAgBxI,GAC5B8J,EAAiBtB,GAAgBiB,GACrC,MAAO,CACHr4H,OAAQu4H,EACRJ,UAAWC,EACXxJ,KAAMsJ,EAAYlB,GAAgB,aAAcpI,GAAQoI,GAAgB,cAAepI,GACvFyJ,MAAOK,GAGR,IAAIC,GAA0B,GAIjCxzH,GAAcyzH,GAAgBA,IAAiBA,EAAa91E,aAAe3kF,IAAS06J,EAAAA,GAAAA,KAAeC,EAAAA,GAAAA,IAAqB,EAAGF,GAAcrxH,EAAAA,EAAAA,GAAS,GAAIppC,KAAWy6J,GAC9J,MAAMG,WAA2BC,GAAAA,GACpCnnI,YAAY1zB,GACR8oI,MAAM9oI,GACN7F,KAAKw/J,WAAYmB,EAAAA,GAAAA,MACjB3gK,KAAKs/J,cAAeqB,EAAAA,GAAAA,MACpB3gK,KAAKm/J,aAAcwB,EAAAA,GAAAA,MACnB3gK,KAAKu/J,UAAWoB,EAAAA,GAAAA,MAChB3gK,KAAK68D,MAAQ,CACTuiG,iBAAiB,EACjBC,oBAAoB,GAExBr/J,KAAK4gK,kBAAoB5gK,KAAK4gK,kBAAkBt8H,KAAKtkC,MACrDA,KAAK6gK,uBAAyB7gK,KAAK6gK,uBAAuBv8H,KAAKtkC,MAC/DA,KAAK8gK,sBAAwB9gK,KAAK8gK,sBAAsBx8H,KAAKtkC,MAEjE+gK,gBACI,MAAO,CAAC,IAAIC,GAAAA,GAAchhK,KAAK4gK,kBAAmB,CAAC5gK,KAAK68D,MAAMuiG,gBAAiBp/J,KAAK68D,MAAMwiG,qBAAsB,IAAI2B,GAAAA,GAAchhK,KAAK6gK,uBAAwB,CAAC7gK,KAAK6F,MAAO7F,KAAK68D,MAAMuiG,gBAAiBp/J,KAAK68D,MAAMwiG,mBAAoBr/J,KAAK6F,MAAMo7J,WAAYjhK,KAAK6F,MAAM0T,mBAE7Q2nJ,gBACI,IAAIC,EAAiBC,EACrB,QAAUD,EAAkBnhK,KAAKqhK,SAAS,UAAO,IAAWF,GAA2BA,EAAgBlkH,OAAO,CAACj9C,KAAK68D,MAAMuiG,gBAAiBp/J,KAAK68D,MAAMwiG,qBACtJ,QAAU+B,EAAmBphK,KAAKqhK,SAAS,UAAO,IAAWD,GAA4BA,EAAiBnkH,OAAO,CAACj9C,KAAK6F,MAAO7F,KAAK68D,MAAMuiG,gBAAiBp/J,KAAK68D,MAAMwiG,mBAAoBr/J,KAAK6F,MAAMo7J,WAAYjhK,KAAK6F,MAAM0T,kBAE/NqnJ,oBACI,IAAIziE,EAAW,KACXn+F,KAAKigK,YAAc,GAAKjgK,KAAK8gK,yBAGjC,OADAQ,GAAAA,EAAAA,IAAoBnjE,GACb,KACHmjE,GAAAA,EAAAA,OAAuBnjE,IAG/B0iE,yBACQ7gK,KAAKigK,YAAc,GACnBjgK,KAAK8gK,wBAGT5B,wBACA,IACIp0H,UAAWA,EACX7oB,YAAaA,EACbs/I,kBAAmBA,EACnBr5F,iBAAkBA,EAClBhmD,SAAUA,EACVs/I,iBAAkBA,EAClBC,cAAeA,EACf/2J,UAAWA,EACXg9D,UAAWA,EACXplD,UAAWA,EACXo/I,gBAAiBA,EACjBn/I,SAAUA,EACVo/I,eAAgBA,EAChB9B,UAAWA,EACX+B,eAAgBA,EAChBC,sBAAuBA,EACvBv1J,WAAYA,EACZ6V,SAAUA,EACVC,sBAAuBA,EACvB0/I,cAAeA,EACftzI,WAAYA,EACZjhB,QAASA,GACTvN,KAAK6F,MAAMo7J,WACf,OAAOhyH,EAAAA,EAAAA,GAAS,GAAIjvC,KAAK+hK,eAAgB,CACrCx/I,SAAUA,EACVD,UAAWA,EACXo/I,gBAAiBA,EACjBC,eAAgBA,EAChBJ,kBAAmBA,EACnBz2H,UAAWA,EACX3oB,SAAUA,EACVD,SAAUA,EACVs/I,iBAAkBA,EAClBv/I,YAAaA,EACbw/I,cAAeA,EACf/5F,UAAWA,EACXk6F,eAAgBA,EAChBr0J,QAASA,EACT26D,iBAAkBA,EAClB25F,sBAAuBA,EACvBC,cAAeA,EACfjC,UAAWA,EACXvzJ,WAAYA,EACZ8V,sBAAuBA,EACvBoM,WAAYA,EACZ9jB,UAAWA,IAGfu1J,kBACA,OAAOjgK,KAAKw/J,UAAU/kE,QAAUqkE,GAAgB9+J,KAAKw/J,UAAU/kE,SAAW,EAE9EqmE,wBACI,IAAIkB,EAAuB7B,GAAiB,CACxCz4H,OAAQ1nC,KAAKw/J,UAAU/kE,QACvBolE,UAAW7/J,KAAKs/J,aAAa7kE,QAC7B67D,KAAMt2J,KAAKm/J,YAAY1kE,QACvBslE,MAAO//J,KAAKu/J,SAAS9kE,UAEzB,KAAIhqE,EAAAA,EAAAA,IAAUzwB,KAAKiiK,wBAA2BjiK,KAAKiiK,sBAAsB7C,kBAAoBp/J,KAAK68D,MAAMuiG,iBAAmBp/J,KAAKiiK,sBAAsB5C,qBAAuBr/J,KAAK68D,MAAMwiG,mBAAxL,CAGA,IAAI19H,IAAWlR,EAAAA,EAAAA,IAAUzwB,KAAKkiK,eAC1BvgI,IACA3hC,KAAKkiK,cAAgB,KAErBvgI,GAAW3hC,KAAK68D,MAAMwiG,sBACtBr/J,KAAKkiK,cAAcrC,UAAYmC,EAAqBnC,UACpD7/J,KAAKkiK,cAAcnC,MAAQiC,EAAqBjC,QAEhDp+H,GAAW3hC,KAAK68D,MAAMuiG,mBACtBp/J,KAAKkiK,cAAc5L,KAAO0L,EAAqB1L,MAEnDt2J,KAAKiiK,sBAAwBtC,IAAyB1wH,EAAAA,EAAAA,GAAS,CAC3DvH,OAAQs6H,EAAqBt6H,QAC9B1nC,KAAKkiK,gBACRliK,KAAKmiK,UAASC,IAAoB,CAC9BhD,gBAAiBp/J,KAAKiiK,sBAAsB7C,oBAEhDp/J,KAAKmiK,UAASC,IAAoB,CAC9B/C,mBAAoBr/J,KAAKiiK,sBAAsB5C,wBAGnD0C,qBACA,IAAIM,EAAcriK,KAAK6F,MACnBy8J,GAAYC,EAAAA,GAAAA,GAA8BF,EAAarD,IAC3D,OAAOsD,EAEX78H,SACI,IAAI5/B,EAAQ7F,KAAK6F,MACjB,OAAOo5J,GAAa,CAChBp5J,OAAOopC,EAAAA,EAAAA,GAAS,GAAIppC,EAAO,CACvB0T,gBAAiBszB,GAAYhnC,EAAM0T,mBAEvC6lJ,gBAAiBp/J,KAAK68D,MAAMuiG,gBAC5BC,mBAAoBr/J,KAAK68D,MAAMwiG,mBAC/BG,UAAWx/J,KAAKw/J,UAChBF,aAAct/J,KAAKs/J,aACnBH,YAAan/J,KAAKm/J,YAClBI,SAAUv/J,KAAKu/J,SACfL,kBAAmBl/J,KAAKk/J,kBACxBe,YAAajgK,KAAKigK,YAClBa,sBAAuB9gK,KAAK8gK,sBAC5BiB,eAAgB/hK,KAAK+hK,kBAIjCtB,GAAmBj2E,aAAe61E,GCjO3B,IAAImC,GAAiB,CACxBjB,mBAAmB,EACnBp/I,UAAU,EACVF,YAAa,WACbw/I,cAAe,GACf/5F,UAAW,GACXn6D,SAAS,EACT26D,kBAAkB,EAClB25F,sBAAuB,OACvBC,eAAe,EACXjC,gBACA,MAAO,CAAC,EAAG,KAEfz9I,uBAAuB,EACvBoM,WAAY,GCVLi0I,GAAatiK,OAAO2oE,OAAO3oE,OAAOyxE,WAAW3iC,EAAAA,EAAAA,GAAS9uC,OAAOuiK,0BAA0BF,IAAiBriK,OAAOuiK,0BAA0B,CAChJC,gBAAiB,EACjBhB,eAAgB,OAChBpjC,iBAAkB,EAClBmjC,gBAAiB,WAEVkB,GAAqBziK,OAAO2oE,OAAO3oE,OAAOyxE,WAAW3iC,EAAAA,EAAAA,GAAS9uC,OAAOuiK,0BAA0BF,IAAiBriK,OAAOuiK,0BAA0B,CACxJngJ,SAAU,EACVD,UAAW,MCVX08I,GAAY,CAAC,WAAY,YAAa,YAAa,iBAAkB,cAc9D6D,GAAmB,UACnB5D,GAAe1uI,IACtB,IACI1qB,OACI65J,eAAgBA,GAEpBjwJ,KAAMA,GACN8gB,EACJ,OAAOuyI,EAAAA,GAAAA,IAAY,EAAG,MAAOD,GAAkBpzJ,EAAM,EAAG,KAAM,KAAMiwJ,IAGpEqD,GAAoB,CAChBzgJ,gBACA,OAAOsgJ,GAAmBtgJ,WAE1BolD,gBACA,OAAOk7F,GAAmBl7F,WAE1Bl5C,iBACA,OAAOo0I,GAAmBp0I,aAG3B,MAAMw0I,WAAiBC,GAAAA,GAC1B1pI,YAAY1zB,GACR8oI,MAAM9oI,GACN7F,KAAK68D,MAAQ,GAEb36C,eACA,IAAIghJ,EACJ,OAAQ,QAAUA,EAAuBljK,KAAK6F,MAAMqc,gBAAa,IAAWghJ,EAAuBA,EAAuB,KAAOz5H,EAAAA,EAAAA,aAAiC,mBAAjCA,GAEjIh6B,WACA,IACIi4D,UAAWA,EACXplD,UAAWA,EACXkM,WAAYA,GACZxuB,KAAK6F,MACT,OAAOqM,EAAAA,EAAAA,IAAOlS,KAAKkiB,UAAWI,EAAY,GAAG8d,WAAYsnC,EAAUtnC,WAAY5R,EAAW4R,YAE1F2hI,qBACA,IAAIM,EAAcriK,KAAK6F,MACnBy8J,GAAYC,EAAAA,GAAAA,GAA8BF,EAAarD,IAC3D,OAAOsD,EAEX78H,SACI,IAAI5/B,EAAQ7F,KAAK6F,MACjB,OAAOo5J,GAAa,CAChBp5J,OAAOopC,EAAAA,EAAAA,GAAS,GAAIppC,GACpBqc,SAAUliB,KAAKkiB,SACfzS,KAAMzP,KAAKyP,KACXsyJ,eAAgB/hK,KAAK+hK,kBAIjCiB,GAASx4E,aAAeu4E,G,eCnEbI,IAAwBC,EAAAA,GAAAA,SAAc,GCD7CpE,GAAY,CAAC,WAAY,YAAa,QAAS,WAcxCC,GAAe1uI,IACtB,IACI1qB,OACIgrC,SAAUA,EACV/F,UAAWA,EACXhsB,MAAOA,GAEXukJ,UAAWA,GACX9yI,EACJ,OAAOuyI,EAAAA,GAAAA,IAAY,EAAG,MAAOh4H,EAAW+F,EAAU,EAAG,CACjDzjC,SAAU,EACV4zE,KAAM,SACN,aAAcliE,GACf,KAAMukJ,IAEFC,GAAmB,CAC1Bx4H,UAAW,GACXhsB,MAAO,IAKJ,MAAMykJ,WAAoB7C,GAAAA,GAC7BnnI,YAAY1zB,GACR8oI,MAAM9oI,GACN7F,KAAK68D,MAAQ,GACb78D,KAAKqjK,WAAY1C,EAAAA,GAAAA,MACjB3gK,KAAKwjK,eAAiBxjK,KAAKwjK,eAAel/H,KAAKtkC,MAC/CA,KAAKyjK,iBAAmBzjK,KAAKyjK,iBAAiBn/H,KAAKtkC,MAEnD0jK,sBACA,MAAI,0BAA2B1jK,KAAKy6D,QACzBz6D,KAAKy6D,QAAQ0oG,sBAEjBA,GAEXpC,gBACI,MAAO,CAAC,IAAIC,GAAAA,GAAchhK,KAAKwjK,eAAgB,CAACxjK,KAAK0jK,gBAAiB1jK,KAAK6F,MAAM0J,UAAW,IAAIyxJ,GAAAA,GAAchhK,KAAKyjK,iBAAkB,CAACzjK,KAAK6F,MAAM0J,WAErJ2xJ,gBACI,IAAIC,EAAiBC,EACrB,QAAUD,EAAkBnhK,KAAKqhK,SAAS,UAAO,IAAWF,GAA2BA,EAAgBlkH,OAAO,CAACj9C,KAAK0jK,gBAAiB1jK,KAAK6F,MAAM0J,UAChJ,QAAU6xJ,EAAmBphK,KAAKqhK,SAAS,UAAO,IAAWD,GAA4BA,EAAiBnkH,OAAO,CAACj9C,KAAK6F,MAAM0J,UAEjIi0J,iBACI,OAAOxjK,KAAK0jK,gBAAgBz/G,uBAAuBjkD,KAAKqjK,UAAU5oE,QAASz6F,KAAK6F,MAAM0J,SAE1Fk0J,mBACI,OAAOE,EAAAA,GAAAA,IAAsB3jK,KAAKqjK,UAAU5oE,QAASz6F,KAAK6F,MAAM0J,SAEhEwyJ,qBACA,IAAIM,EAAcriK,KAAK6F,MACnBy8J,GAAYC,EAAAA,GAAAA,GAA8BF,EAAarD,IAC3D,OAAOsD,EAEX78H,SACI,IAAI5/B,EAAQ7F,KAAK6F,MACjB,OAAOo5J,GAAa,CAChBp5J,OAAOopC,EAAAA,EAAAA,GAAS,GAAIppC,GACpBw9J,UAAWrjK,KAAKqjK,UAChBK,gBAAiB1jK,KAAK0jK,gBACtB3B,eAAgB/hK,KAAK+hK,kBAIjCwB,GAAY/4E,aAAe84E,GCjFpB,IAAIM,GAAc,WACdC,GAAmB,gBACnBC,GAAoB,WACpBC,GAA2B,kBAC3BC,GAAmB,UACnBC,GAAwB,eACxBC,GAAwB,eACxBC,GAAyB,gBACzBC,GAAiC,GAAGt8I,OAAOo8I,GAAuB,KAAKp8I,OAAOm8I,I,WCNrFjF,GAAY,CAAC,YAAa,QAAS,UAAW,YAiBvCC,GAAe1uI,IACtB,IACIua,UAAWA,EACXhsB,MAAOA,EACPjZ,OACI0J,QAASA,GAEbjP,MAAOA,GACPiwB,EACJ,OAAOiwI,EAAAA,GAAAA,IAAqB,EAAG+C,GAAa,CACxCz4H,UAAWA,EACXhsB,MAAOA,EACPvP,QAASA,EACTshC,SAAUvwC,KAGP+jK,GAAY,CACnBj6I,MAAO,EACP6oE,UAAU,EACVnoD,UAAWk5H,IAER,MAAMM,WAAarB,GAAAA,GACtB1pI,YAAY1zB,GACR8oI,MAAM9oI,GACN7F,KAAK68D,MAAQ,GAEb/9C,YACA,MAAO,QAAQgJ,OAAO9nB,KAAKM,OAE3BA,YACA,OAAON,KAAK6F,MAAMukB,MAAQ,EAE1B0gB,gBACA,IACImoD,SAAUA,GACVjzF,KAAK6F,MACT,OAAO0+J,EAAAA,GAAAA,GAAe,CAClB,CAAC,GAAGz8I,OAAO9nB,KAAK6F,MAAMilC,cAAe9qC,KAAK6F,MAAMilC,UAChD,CAACm5H,MAA0BhxE,IAG/B8uE,qBACA,IAAIM,EAAcriK,KAAK6F,MACnBy8J,GAAYC,EAAAA,GAAAA,GAA8BF,EAAarD,IAC3D,OAAOsD,EAEX78H,SACI,IAAI5/B,EAAQ7F,KAAK6F,MACjB,OAAOo5J,GAAa,CAChBp5J,OAAOopC,EAAAA,EAAAA,GAAS,GAAIppC,GACpBiZ,MAAO9e,KAAK8e,MACZxe,MAAON,KAAKM,MACZwqC,UAAW9qC,KAAK8qC,UAChBi3H,eAAgB/hK,KAAK+hK,kBAIjCuC,GAAK95E,aAAe65E,G,eC1EhBrF,GAAY,CAAC,eACbwF,GAAa,CAAC,gBAAiB,YAAa,YAAa,mBAqBzDC,GAA6B,eACtBxF,GAAe1uI,IACtB,IACIwvI,MAAOA,GACPxvI,EACAm0I,EAAc3E,EAAM/tI,KAAI0uC,IACxB,IACIh1C,IAAKA,EACLi5I,UAAWA,GACXjkG,EACJ,OAAOikG,GAAYnE,EAAAA,GAAAA,IAAqB,EAAG8D,GAAM,CAC7Cl6I,MAAOu6I,EAAUv6I,MACjB6oE,SAAU0xE,EAAU1xE,SACpB1jF,QAASo1J,EAAUp1J,SACpBmc,IAAOo3I,EAAAA,GAAAA,IAAY,EAAG,MAAO2B,GAA4B,QAAS,GAAI,KAAM/4I,MAEnF,OAAOk5I,EAAAA,GAAAA,IAAeF,EAAa,IAEnCG,GAAgB,EAEpB,SAASC,GAAiBC,EAAYC,EAAmBt9F,GACrD,OAAI,IAAMq9F,EACC,OAEPA,EAAaC,IAAsBt9F,EAAY,EACxC,MAEJ,OAGX,SAASu9F,GAAwCC,EAAsBx9F,EAAWy9F,GAC9E,IAAIC,EAAc,GACdC,EAAkB,GACtB,OAAQF,GACJ,IAAK,OACDC,EAAc,IAAIF,GAClB,MACJ,IAAK,OACDE,EAAc,CAAC,EAAG,SAAUF,EAAsB,OAAQx9F,EAAY,GACtE29F,EAAkBH,EAAqBn7I,MAAM,GAAI,GACjD,MACJ,IAAK,OACDq7I,EAAc,CAAC,KAAMF,EAAsB,OAAQx9F,EAAY,GAC/D29F,EAAkBH,EAAqBn7I,MAAM,GAAI,GACjD,MACJ,IAAK,MACDq7I,EAAc,CAAC,EAAG,SAAUF,EAAsBx9F,EAAY,GAC9D29F,EAAkBH,EAAqBn7I,MAAM,GAErD,MAAO,CACHm7I,qBAAsBA,EACtBG,gBAAiBA,EACjBD,YAAaA,GAIrB,SAASE,GAAkBP,EAAYC,EAAmBt9F,EAAWy9F,GAEjE,IADA,IAAID,EAAuB,GAClBrtI,EAAI,EAAGA,EAAImtI,EAAmBntI,GAAK,EACxCqtI,EAAqB78I,KAAKwP,EAAIktI,GAElC,OAAOE,GAAwCC,EAAsBx9F,EAAWy9F,GAEpF,IAAII,GAAsB,CAClBjjJ,gBACA,OAAOsgJ,GAAmBtgJ,WAE1Bm/I,oBACA,OAAOmB,GAAmBnB,eAE1B/5F,gBACA,OAAOk7F,GAAmBl7F,YAG3B,MAAM89F,WAAmBvC,GAAAA,GAC5B1pI,YAAY1zB,GACR8oI,MAAM9oI,GACN7F,KAAK68D,MAAQ,GACb78D,KAAKylK,sBAAwBzlK,KAAKylK,sBAAsBnhI,KAAKtkC,MAC7DA,KAAK0lK,oBAAsB1lK,KAAK0lK,oBAAoBphI,KAAKtkC,MACzDA,KAAK2lK,oBAAsB3lK,KAAK2lK,oBAAoBrhI,KAAKtkC,MACzDA,KAAK4lK,YAAc5lK,KAAK4lK,YAAYthI,KAAKtkC,MAEzC+2B,aACA,MAAI,kBAAmB/2B,KAAKy6D,QACjBz6D,KAAKy6D,QAAQorG,cAEjBA,GAAAA,EAEPC,yBACA,IAAIA,EAAqB9lK,KAAK+lK,yBAC9B,OAAKD,GACM,CACHT,gBAAiB,GACjBH,qBAAsB,IAKlCO,sBAAsBO,EAAkB1jJ,GACpC,IACI+iJ,gBAAiBA,GACjBrlK,KAAK8lK,mBACLG,GAAgCZ,EAAgBa,SAASF,GACzDG,EAA0Bd,EAAgBa,SAAS5jJ,GACvD,OAAO2jJ,GAAgCE,EAE3CT,sBACI,IACIh+F,UAAWA,EACXplD,UAAWA,GACXtiB,KAAK6F,MACLk/J,EAAa,GAEbG,qBAAsBA,GACtBllK,KAAK8lK,mBAELf,EADAziJ,IAAc4iJ,EAAqB,GACtB5iJ,EAAY,EAClBA,IAAc4iJ,EAAqBA,EAAqBt9I,OAAS,GAC3DtF,EAAY,EAAIuiJ,GACtBviJ,EAAYuiJ,GACN,EACNviJ,GAAaolD,EAAYm9F,GACnBn9F,EAAYm9F,GAAgB,EAE5BviJ,EAAY,EAE7B,IAAI0iJ,EAAoBH,GACpBM,EAAYL,GAAiBC,EAAYC,EAAmBt9F,GAC5D0+F,EAAqBd,GAAkBP,EAAYC,EAAmBt9F,EAAWy9F,IAE7EC,YAAaA,GACbgB,EACJN,GAAqBvD,EAAAA,GAAAA,GAA8B6D,EAAoBpH,IAE3E,OADAh/J,KAAK+lK,yBAA2BD,EACzBV,EAEXO,sBACI,IACIlE,cAAeA,EACf/5F,UAAWA,GACX1nE,KAAK6F,MACT,OAAO6hE,GAAam9F,IAAiBn9F,GAAa+5F,EAEtDmE,YAAYtjJ,GACRtiB,KAAK6F,MAAM67J,gBAAgBp/I,GAE3B8iJ,kBACA,IACI19F,UAAWA,GACX1nE,KAAK6F,MACT,GAAI7F,KAAK2lK,sBACL,OAAOL,GAAkB,EAAG59F,EAAWA,EAAW,QAAQ09F,YAE9D,GAAIplK,KAAKylK,sBAAsB/9F,EAAW1nE,KAAK6F,MAAMyc,WAAY,CAC7D,IACI4iJ,qBAAsBA,GACtBllK,KAAK8lK,mBACLX,EAAYL,GAAiBI,EAAqB,GAAIL,GAAen9F,GACzE,OAAOu9F,GAAwCC,EAAsBx9F,EAAWy9F,GAAWC,YAE/F,OAAOplK,KAAK0lK,sBAEZ3F,YACA,IAAIsG,GAEA/jJ,UAAWA,GACXtiB,KAAK6F,MACLygK,EAAal8I,IACb,IAAI62I,EAAa,QAAU72I,GAAS,SAAWA,EAAQ,KAAO,CAC1DA,MAAOA,EACP7a,QAAS,IAAMvP,KAAK4lK,YAAYx7I,GAChC6oE,SAAU3wE,IAAc8H,GAE5B,MAAO,CACHsB,IAAKtB,EAAMgW,WACXukI,UAAW1D,IAGfsF,EAAiB,QAAUF,EAAermK,KAAK+2B,cAAW,IAAWsvI,GAAgBA,EAAa/5J,WAAa,IAAItM,KAAKolK,aAAa9vI,UAAYt1B,KAAKolK,YAC1J,OAAOmB,EAAev0I,KAAI5H,GAASk8I,EAAWl8I,KAE9C23I,qBACA,IAAIM,EAAcriK,KAAK6F,MACnBy8J,GAAYC,EAAAA,GAAAA,GAA8BF,EAAamC,IAC3D,OAAOlC,EAEX78H,SACI,IAAI5/B,EAAQ7F,KAAK6F,MACjB,OAAOo5J,GAAa,CAChBp5J,OAAOopC,EAAAA,EAAAA,GAAS,GAAIppC,GACpBkxB,OAAQ/2B,KAAK+2B,OACbquI,YAAaplK,KAAKolK,YAClBrF,MAAO//J,KAAK+/J,MACZgC,eAAgB/hK,KAAK+hK,kBAIjCyD,GAAWh7E,aAAe+6E,G,0BC5NtBvG,GAAY,CAAC,YAAa,qBAAsB,YAAa,eAAgB,WAAY,oBAAqB,SAAU,OAAQ,oBAAqB,sBAAuB,MAAO,MAAO,OAAQ,UAAW,YAAa,aAAc,kBAAmB,OAAQ,WAAY,sBAAuB,QAAS,cAAe,UAAW,SAezUwH,GAAgB,EACTvH,GAAe1uI,IACtB,IACI1qB,MAAOA,EACPk8J,eAAgBA,GAChBxxI,EACJ,OAAOgwI,EAAAA,GAAAA,KAAeC,EAAAA,GAAAA,IAAqB,EAAGiG,GAAAA,IAAqBx3H,EAAAA,EAAAA,GAAS,CACxEy3H,cAAeC,GAAAA,EACfC,eAAgB/gK,EAChBghK,cAAe,IAChB9E,MAEI+E,GAAiB3mK,OAAO2oE,OAAO3oE,OAAOyxE,WAAW3iC,EAAAA,EAAAA,GAAS9uC,OAAOuiK,0BAA0BqE,GAAAA,GAAkB5mK,OAAOuiK,0BAA0B,CACrJp6J,mBAAmB,EACnBO,mBAAmB,EACnBm+J,aAAcR,GACdS,yBAAyB,MAEtB,MAAMC,WAAkBjE,GAAAA,GAC3B1pI,YAAY1zB,GACR8oI,MAAM9oI,GACN7F,KAAK68D,MAAQ,CACTv8D,WAAO,IAAWN,KAAK6F,MAAMvF,MAAQN,KAAK6F,MAAMvF,MAAQN,KAAK6F,MAAMmhK,cAGvEjF,qBACA,IAAIoF,GAAoBl4H,EAAAA,EAAAA,GAAS,GAAIjvC,KAAK6F,MAAO,CACzCvF,WAAO,IAAWN,KAAK6F,MAAMvF,MAAQN,KAAK6F,MAAMvF,MAAQN,KAAK68D,MAAMv8D,QAEvEgiK,GAAYC,EAAAA,GAAAA,GAA8B4E,EAAmBnI,IACjE,OAAOsD,EAEX78H,SACI,IAAI5/B,EAAQ7F,KAAK6F,MACjB,OAAOo5J,GAAa,CAChBp5J,OAAOopC,EAAAA,EAAAA,GAAS,GAAIppC,EAAO,CACvBvF,WAAO,IAAWN,KAAK6F,MAAMvF,MAAQN,KAAK6F,MAAMvF,MAAQN,KAAK68D,MAAMv8D,QAEvEyhK,eAAgB/hK,KAAK+hK,kBAIjCmF,GAAU18E,aAAes8E,GC3DlB,IAAIM,GAAgB,GACpB,SAASC,GAA2B10J,EAAU+oB,GACjD,OAAO/oB,EAAWy0J,GAAgB30I,KAAKxP,OAAOyY,GAAQ0E,WAAWxY,OCArE,IAAIo3I,GAAY,CAAC,YAAa,YAAa,kBAAmB,kBA4B1DsI,GAAwB,GAAGx/I,OAAO+6I,GAAkB,kBACpD0E,GAAyB,gBACzBC,GAAoB,iBACpBC,GAA0B,iBACnBxI,GAAe1uI,IACtB,IACIm3I,aAAcA,EACd9F,eAAgBA,EAChB/7J,OACI6hE,UAAWA,GAEfigG,oBAAqBA,EACrBrnK,MAAOA,EACPsnK,YAAaA,EACbp6J,MAAOA,GACP+iB,EACJ,OAAOuyI,EAAAA,GAAAA,IAAY,EAAG,MAAO0E,GAAmB,EAAChH,EAAAA,GAAAA,IAAqB,EAAG0G,GAAW,CAChFp8H,UAAWy8H,GACXrkJ,IAAK,EACLD,IAAKykD,EACLl6D,MAAOA,EACPlN,MAAOA,EACPsnK,YAAaA,KACb9E,EAAAA,GAAAA,IAAY,EAAG,OAAQwE,GAAuB1F,EAAgB,IAAIpB,EAAAA,GAAAA,IAAqB,EAAG8D,GAAM,CAChGx5H,UAAW28H,GACXx0E,UAAU,EACV7oE,MAAOs9C,EAAY,EACnBn4D,QAASo4J,KACR,EAAG,KAAM,KAAMD,IAEpBG,GAAkB,CACdvlJ,gBACA,OAAOsgJ,GAAmBtgJ,WAE1BolD,gBACA,OAAOk7F,GAAmBl7F,YAM3B,MAAMogG,WAAmBpH,GAAAA,GAC5BnnI,YAAY1zB,GACR8oI,MAAM9oI,GACN7F,KAAK0nK,cAAe/G,EAAAA,GAAAA,MACpB3gK,KAAK68D,MAAQ,CACTlqD,SAAU,IAEd3S,KAAK+nK,YAAc/nK,KAAK+nK,YAAYzjI,KAAKtkC,MACzCA,KAAK2nK,oBAAsB3nK,KAAK2nK,oBAAoBrjI,KAAKtkC,MACzDA,KAAK4nK,YAAc5nK,KAAK4nK,YAAYtjI,KAAKtkC,MAE7C+gK,gBACI,MAAO,CAAC,IAAIC,GAAAA,GAAchhK,KAAK+nK,YAAa,CAAC/nK,KAAK68D,MAAMlqD,YAE5DuuJ,gBACI,IAAIC,EACJ,QAAUA,EAAkBnhK,KAAKqhK,SAAS,UAAO,IAAWF,GAA2BA,EAAgBlkH,OAAO,CAACj9C,KAAK68D,MAAMlqD,WAE9Ho1J,cACI,IAAIC,EACAC,EAAK,QAAUD,EAAwBhoK,KAAK0nK,aAAajtE,eAAY,IAAWutE,OAAwB,EAASA,EAAsBpoH,cAAc,IAAI93B,OAAOy/I,KACpKvnK,KAAKmiK,UAASC,IAAoB,CAC9BzvJ,SAAUs1J,GAAMlJ,GAAmBkJ,IAAO7F,EAAiBzvJ,aAG/DrS,YACA,OAAON,KAAK6F,MAAMyc,UAAY,EAE9B9U,YACA,IACIk6D,UAAWA,GACX1nE,KAAK6F,MACT,OAAOwhK,GAA2BrnK,KAAK68D,MAAMlqD,SAAU,CAAC+0D,IAExDk6F,qBACA,IAAIsG,EACJ,OAAQ,QAAUA,EAAwBloK,KAAK6F,MAAM+7J,sBAAmB,IAAWsG,EAAwBA,EAAwB,KAAOz+H,EAAAA,EAAAA,aAAiC,yBAAjCA,GAE9Ik+H,sBACI3nK,KAAK6F,MAAM67J,gBAAgB1hK,KAAK6F,MAAM6hE,UAAY,GAEtDkgG,YAAYtnK,GACRN,KAAK6F,MAAM67J,gBAAgBphK,EAAQ,GAEnCyhK,qBACA,IAAIM,EAAcriK,KAAK6F,MACnBy8J,GAAYC,EAAAA,GAAAA,GAA8BF,EAAarD,IAC3D,OAAOsD,EAEX78H,SACI,IAAI5/B,EAAQ7F,KAAK6F,MACjB,OAAOo5J,GAAa,CAChBp5J,OAAOopC,EAAAA,EAAAA,GAAS,GAAIppC,GACpB6hK,aAAc1nK,KAAK0nK,aACnBpnK,MAAON,KAAKM,MACZkN,MAAOxN,KAAKwN,MACZo0J,eAAgB5hK,KAAK4hK,eACrB+F,oBAAqB3nK,KAAK2nK,oBAC1BC,YAAa5nK,KAAK4nK,YAClB7F,eAAgB/hK,KAAK+hK,kBAIjC+F,GAAWt9E,aAAeq9E,GCpI1B,IAAI7I,GAAY,CAAC,mBAAoB,qBAAsB,gBAAiB,YAAa,YAAa,kBAAmB,iBAAkB,wBAAyB,cA0BhKmJ,GAAwB,qBACxBC,GAA0B,iBAC1BC,GAA0B,iBACnBC,GAA6B,oBACpCC,GAAsB,GAAGzgJ,OAAOqgJ,GAAuB,KAAKrgJ,OAAOugJ,IACnEG,GAAsB,GAAG1gJ,OAAOqgJ,GAAuB,KAAKrgJ,OAAOsgJ,IACnEK,GAA8B,GAAG3gJ,OAAOwgJ,GAA4B,KAAKxgJ,OAAOqgJ,GAAuB,KAAKrgJ,OAAOugJ,IACnHK,GAA8B,GAAG5gJ,OAAOwgJ,GAA4B,KAAKxgJ,OAAOqgJ,GAAuB,KAAKrgJ,OAAOsgJ,IAC5GnJ,GAAe1uI,IACtB,IACIo4I,mBAAoBA,EACpBC,mBAAoBA,EACpBC,cAAeA,EACfnH,gBAAiBA,EACjBoH,cAAeA,EACfjjK,OACIw5J,mBAAoBA,EACpBoC,cAAeA,EACf/5F,UAAWA,EACXplD,UAAWA,EACXs/I,eAAgBA,GAEpBmH,iBAAkBA,EAClBC,iBAAkBA,GAClBz4I,EACJ,OAAOq0I,EAAAA,GAAAA,IAAe,CAACoE,IAAoBxI,EAAAA,GAAAA,IAAqB,EAAG+C,GAAa,CAC5Ez4H,UAAWg+H,EACXhqJ,MAAO,gBACPvP,QAASq5J,IACTvJ,IAAsBmB,EAAAA,GAAAA,IAAqB,EAAGgF,GAAY,CAC1D/D,cAAeA,EACf/5F,UAAWA,EACXplD,UAAWA,EACXo/I,gBAAiBA,KAChBrC,IAAsBmB,EAAAA,GAAAA,IAAqB,EAAGsH,GAAY,CAC3DpgG,UAAWA,EACXplD,UAAWA,EACXo/I,gBAAiBA,EACjBE,eAAgBA,IAChBmH,IAAoBvI,EAAAA,GAAAA,IAAqB,EAAG+C,GAAa,CACzDz4H,UAAW+9H,EACX/pJ,MAAO,YACPvP,QAASo5J,KACR,IAGT,SAASM,GAAatoJ,GAClB,MAAO,SAAWA,EAAY,GAAK,EAEhC,IAAIuoJ,GAAyB,CAChC7J,oBAAoB,GAEpB8J,GAA6B,CACzB7mJ,gBACA,OAAOsgJ,GAAmBtgJ,WAE1Bm/I,oBACA,OAAOmB,GAAmBnB,eAE1B/5F,gBACA,OAAOk7F,GAAmBl7F,WAE1BQ,uBACA,OAAO06F,GAAmB16F,kBAE1B9lD,4BACA,OAAOwgJ,GAAmBxgJ,uBAE1BoM,iBACA,OAAOo0I,GAAmBp0I,YAE1B6wI,yBACA,OAAO6J,GAAuB7J,qBAG/B,MAAM+J,WAA0BnG,GAAAA,GACnC1pI,YAAY1zB,GACR8oI,MAAM9oI,GACN7F,KAAK68D,MAAQ,GACb78D,KAAK0hK,gBAAkB1hK,KAAK0hK,gBAAgBp9H,KAAKtkC,MACjDA,KAAK2oK,mBAAqB3oK,KAAK2oK,mBAAmBrkI,KAAKtkC,MACvDA,KAAK4oK,mBAAqB5oK,KAAK4oK,mBAAmBtkI,KAAKtkC,MACvDA,KAAKqpK,iBAAmBrpK,KAAKqpK,iBAAiB/kI,KAAKtkC,MACnDA,KAAKspK,iBAAmBtpK,KAAKspK,iBAAiBhlI,KAAKtkC,MACnDA,KAAKupK,kBAAoBvpK,KAAKupK,kBAAkBjlI,KAAKtkC,MACrDA,KAAKwpK,iBAAmBxpK,KAAKwpK,iBAAiBllI,KAAKtkC,MACnDA,KAAKypK,cAAgBzpK,KAAKypK,cAAcnlI,KAAKtkC,MAC7CA,KAAK0pK,eAAiB1pK,KAAK0pK,eAAeplI,KAAKtkC,MAE/C+2B,aACA,MAAI,kBAAmB/2B,KAAKy6D,QACjBz6D,KAAKy6D,QAAQorG,cAEjBA,GAAAA,EAEXnE,gBAAgBp/I,GACRtiB,KAAKupK,kBAAkBjnJ,IACvBtiB,KAAK6F,MAAM67J,gBAAgBp/I,GAGnCqmJ,qBACI3oK,KAAK0pK,eAAe1pK,KAAKqpK,oBAE7BT,qBACI5oK,KAAK0pK,eAAe1pK,KAAKspK,oBAE7BD,mBACI,IAAIhD,EACJ,OAAS,QAAUA,EAAermK,KAAK+2B,cAAW,IAAWsvI,GAAgBA,EAAa/5J,WAAuB,OAAT,OAE5Gg9J,mBACI,IAAIK,EACJ,OAAS,QAAUA,EAAgB3pK,KAAK+2B,cAAW,IAAW4yI,GAAiBA,EAAcr9J,WAAuB,OAAT,OAE/Gi9J,kBAAkBjnJ,GACd,OAAKtiB,KAAK6F,MAAMqiE,iBAGT5lD,GAAa,GAAKA,GAAatiB,KAAK6F,MAAM6hE,UAAY,EAFlDplD,GAAa,EAI5BknJ,iBAAiB7oJ,GACb,OAAO3gB,KAAK6F,MAAMyc,UAAY2mJ,GAAatoJ,GAE/C8oJ,cAAc9oJ,GACV,OAAO3gB,KAAKupK,kBAAkBvpK,KAAKwpK,iBAAiB7oJ,IAExD+oJ,eAAe/oJ,GACX3gB,KAAK0hK,gBAAgB1hK,KAAKwpK,iBAAiB7oJ,IAE3CqoJ,uBACA,IACI3J,mBAAoBA,EACpBj9I,sBAAuBA,GACvBpiB,KAAK6F,MACT,OAAQw5J,GAAsBj9I,EAE9B2mJ,uBACA,OAAO/oK,KAAKgpK,mBAAqBhpK,KAAK6F,MAAMqiE,iBAE5C2gG,oBACA,IAAIloJ,EAAY3gB,KAAKqpK,mBACjBO,EAAc5pK,KAAKypK,cAAc9oJ,GACrC,OAAOipJ,EAAcrB,GAAsBE,GAE3CK,oBACA,IAAInoJ,EAAY3gB,KAAKspK,mBACjBM,EAAc5pK,KAAKypK,cAAc9oJ,GACrC,OAAOipJ,EAAcpB,GAAsBE,GAE3C3G,qBACA,IAAIM,EAAcriK,KAAK6F,MACnBy8J,GAAYC,EAAAA,GAAAA,GAA8BF,EAAarD,IAC3D,OAAOsD,EAEX78H,SACI,IAAI5/B,EAAQ7F,KAAK6F,MACjB,OAAOo5J,GAAa,CAChBp5J,OAAOopC,EAAAA,EAAAA,GAAS,GAAIppC,GACpBkxB,OAAQ/2B,KAAK+2B,OACb2qI,gBAAiB1hK,KAAK0hK,gBACtBiH,mBAAoB3oK,KAAK2oK,mBACzBC,mBAAoB5oK,KAAK4oK,mBACzBI,iBAAkBhpK,KAAKgpK,iBACvBD,iBAAkB/oK,KAAK+oK,iBACvBF,cAAe7oK,KAAK6oK,cACpBC,cAAe9oK,KAAK8oK,cACpB/G,eAAgB/hK,KAAK+hK,kBAIjCqH,GAAkB5+E,aAAe2+E,GCpMjC,IAAInK,GAAY,CAAC,YAAa,qBAAsB,YAAa,aAAc,eAAgB,WAAY,cAAe,oBAAqB,SAAU,OAAQ,oBAAqB,UAAW,YAAa,aAAc,WAAY,QAAS,cAAe,YAAa,UAAW,SAe7QC,GAAe1uI,IACtB,IACI1qB,MAAOA,EACPk8J,eAAgBA,GAChBxxI,EACJ,OAAOgwI,EAAAA,GAAAA,KAAeC,EAAAA,GAAAA,IAAqB,EAAGiG,GAAAA,IAAqBx3H,EAAAA,EAAAA,GAAS,CACxEy3H,cAAemD,GAAAA,EACfjD,eAAgB/gK,EAChBghK,cAAe,CAAC,yBAA0B,gBAAiB,iBAC5D9E,MAEI+H,GAAiB3pK,OAAO2oE,OAAO3oE,OAAOyxE,WAAW3iC,EAAAA,EAAAA,GAAS9uC,OAAOuiK,0BAA0BqE,GAAAA,GAAkB5mK,OAAOuiK,0BAA0B,CACrJp6J,mBAAmB,EACnBO,mBAAmB,EACnBm+J,aAAc,KACdC,yBAAyB,MAEtB,MAAM8C,WAAkB9G,GAAAA,GAC3B1pI,YAAY1zB,GACR8oI,MAAM9oI,GACN7F,KAAK68D,MAAQ,CACTv8D,WAAO,IAAWN,KAAK6F,MAAMvF,MAAQN,KAAK6F,MAAMvF,MAAQN,KAAK6F,MAAMmhK,cAGvEjF,qBACA,IAAIoF,GAAoBl4H,EAAAA,EAAAA,GAAS,GAAIjvC,KAAK6F,MAAO,CACzCvF,WAAO,IAAWN,KAAK6F,MAAMvF,MAAQN,KAAK6F,MAAMvF,MAAQN,KAAK68D,MAAMv8D,QAEvEgiK,GAAYC,EAAAA,GAAAA,GAA8B4E,EAAmBnI,IACjE,OAAOsD,EAEX78H,SACI,IAAI5/B,EAAQ7F,KAAK6F,MACjB,OAAOo5J,GAAa,CAChBp5J,OAAOopC,EAAAA,EAAAA,GAAS,GAAIppC,EAAO,CACvBvF,WAAO,IAAWN,KAAK6F,MAAMvF,MAAQN,KAAK6F,MAAMvF,MAAQN,KAAK68D,MAAMv8D,QAEvEyhK,eAAgB/hK,KAAK+hK,kBAIjCgI,GAAUv/E,aAAes/E,GCxDzB,IAAI9K,GAAY,CAAC,WAAY,iBAAkB,YAAa,aAoBjDC,GAAe1uI,IACtB,IACI1qB,OACI0c,SAAUA,EACVo/I,eAAgBA,EAChB9B,UAAWA,GAEfryJ,MAAOA,GACP+iB,EACJ,OAAOiwI,EAAAA,GAAAA,IAAqB,EAAGuJ,GAAW,CACtC30J,YAAa,OACbC,UAAW,QACXhO,WAAYw4J,EACZv/J,MAAOiiB,EACPqlJ,YAAajG,EACbn0J,MAAOA,KAIXw8J,GAAyB,CACrBznJ,eACA,OAAOqgJ,GAAmBrgJ,WAG3B,MAAM0nJ,WAAsBvJ,GAAAA,GAC/BnnI,YAAY1zB,GACR8oI,MAAM9oI,GACN7F,KAAK68D,MAAQ,CACTlqD,SAAU,IAEd3S,KAAK+nK,YAAc/nK,KAAK+nK,YAAYzjI,KAAKtkC,MAE7C+gK,gBACI,MAAO,CAAC,IAAIC,GAAAA,GAAchhK,KAAK+nK,YAAa,CAAC/nK,KAAK6F,MAAO7F,KAAK68D,MAAMlqD,SAAU3S,KAAK6F,MAAM0c,SAAUviB,KAAK6F,MAAM87J,eAAgB3hK,KAAK6F,MAAMg6J,aAE7IqB,gBACI,IAAIC,EACJ,QAAUA,EAAkBnhK,KAAKqhK,SAAS,UAAO,IAAWF,GAA2BA,EAAgBlkH,OAAO,CAACj9C,KAAK6F,MAAO7F,KAAK68D,MAAMlqD,SAAU3S,KAAK6F,MAAM0c,SAAUviB,KAAK6F,MAAM87J,eAAgB3hK,KAAK6F,MAAMg6J,YAE/MkI,cACI/nK,KAAKmiK,UAASC,IAAoB,CAC9BzvJ,SAAUosJ,GAAmB/+J,KAAK6F,MAAM25J,UAAU/kE,UAAY2nE,EAAiBzvJ,aAGnFnF,YACA,OAAO65J,GAA2BrnK,KAAK68D,MAAMlqD,SAAU3S,KAAK6F,MAAMg6J,UAAU7tI,KAAIk4I,GAAKA,EAAE5pK,SAEvFyhK,qBACA,IAAIM,EAAcriK,KAAK6F,MACnBy8J,GAAYC,EAAAA,GAAAA,GAA8BF,EAAarD,IAC3D,OAAOsD,EAEX78H,SACI,IAAI5/B,EAAQ7F,KAAK6F,MACjB,OAAOo5J,GAAa,CAChBp5J,OAAOopC,EAAAA,EAAAA,GAAS,GAAIppC,GACpB2H,MAAOxN,KAAKwN,MACZu0J,eAAgB/hK,KAAK+hK,kBAIjCkI,GAAcz/E,aAAew/E,GCjF7B,IAAIhL,GAAY,CAAC,WAAY,iBAAkB,aAqBpCC,GAAe1uI,IACtB,IACI45I,cAAeA,GACf55I,EACJ,OAAOq0I,EAAAA,GAAAA,IAAeuF,EAAcn4I,KAAI0uC,IACpC,IACI51B,UAAWA,EACX4sH,MAAOA,EACP54I,MAAOA,EACPrP,KAAMA,GACNixD,EACJ,OAAO8/F,EAAAA,GAAAA,IAAqB,EAAG+C,GAAa,CACxCz4H,UAAWA,EACXhsB,MAAOA,EACPvP,QAASmoJ,EACT7mH,SAAUphC,GACXA,MACH,IAGJ26J,GAAyB,CACrB7nJ,eACA,OAAOqgJ,GAAmBrgJ,WAG3B,MAAM8nJ,WAAsBpH,GAAAA,GAC/B1pI,YAAY1zB,GACR8oI,MAAM9oI,GACN7F,KAAK68D,MAAQ,GACb78D,KAAKsqK,cAAgB,GACrBtqK,KAAKuqK,iBAAmBvqK,KAAKuqK,iBAAiBjmI,KAAKtkC,MAEnDmqK,oBACA,YAAI,IAAWnqK,KAAKsqK,cAAcH,cACvBnqK,KAAKsqK,cAAcH,cAEvBnqK,KAAKsqK,cAAcH,cAAgB,MACtC,IACI5nJ,SAAUA,EACVs9I,UAAWA,GACX7/J,KAAK6F,MACT,OAAOg6J,EAAU7tI,KAAIk1C,IACjB,IACIz3D,KAAMA,EACNnP,MAAOkqK,GACPtjG,EACA+rB,EAAWu3E,IAAsBjoJ,EACjCuoB,EAAYmoD,EAAWmxE,GAAiCF,GAC5D,MAAO,CACHp5H,UAAWA,EACX4sH,MAAO13J,KAAKuqK,iBAAiBC,GAC7B1rJ,MAAO,WAAWgJ,OAAO0iJ,EAAmB,kBAC5C/6J,KAAMA,OAhBwB,GAqB9C86J,iBAAiBC,GACb,MAAO,KACHxqK,KAAK6F,MAAM87J,eAAe6I,GACnBxqK,KAAK6F,MAAM0c,UAGtBw/I,qBACA,IAAIM,EAAcriK,KAAK6F,MACnBy8J,GAAYC,EAAAA,GAAAA,GAA8BF,EAAarD,IAC3D,OAAOsD,EAEXmI,oBAAoBC,EAAWC,EAAWlwG,GAClCz6D,KAAK6F,MAAM0c,WAAamoJ,EAAUnoJ,UAAYviB,KAAK6F,MAAMg6J,YAAc6K,EAAU7K,WAAa7/J,KAAK6F,MAAM87J,iBAAmB+I,EAAU/I,iBACtI3hK,KAAKsqK,cAAcH,mBAAgB,GAG3C1kI,SACI,IAAI5/B,EAAQ7F,KAAK6F,MACjB,OAAOo5J,GAAa,CAChBp5J,OAAOopC,EAAAA,EAAAA,GAAS,GAAIppC,GACpBskK,cAAenqK,KAAKmqK,cACpBpI,eAAgB/hK,KAAK+hK,kBAIjCsI,GAAc7/E,aAAe4/E,GCvG7B,IAAIpL,GAAY,CAAC,qBAAsB,WAAY,iBAAkB,YAAa,kBAsBvEC,GAAe1uI,IACtB,IACIq6I,QAASA,EACTC,oBAAqBA,EACrBhlK,OACIw5J,mBAAoBA,EACpB98I,SAAUA,EACVo/I,eAAgBA,IAEpBpxI,EACJ,OAAOuyI,EAAAA,GAAAA,IAAY,EAAG,MAAOqB,GAAwB,CAAC9E,IAAsBmB,EAAAA,GAAAA,IAAqB,EAAG6J,GAAe,CAC/GxK,UAAWgL,EACXtoJ,SAAUA,EACVo/I,eAAgBA,KACftC,IAAsBmB,EAAAA,GAAAA,IAAqB,EAAGyJ,GAAe,CAC9DzK,UAAWoL,EACX/K,UAAWgL,EACXtoJ,SAAUA,EACVo/I,eAAgBA,KACf,EAAG,KAAM,KAAMiJ,IAGxB,SAASE,KACL,OAAOrhI,EAAAA,EAAAA,aAAiC,2BAAjCA,GAEX,IAAIshI,GAAwB,CACxB1L,oBAAoB,GAEpB2L,GAA4B,CACxBzoJ,eACA,OAAOqgJ,GAAmBrgJ,UAE1Bs9I,gBACA,OAAO+C,GAAmB/C,WAE1BR,yBACA,OAAO0L,GAAsB1L,qBAM9B,MAAM4L,WAAyBvK,GAAAA,GAClCnnI,YAAY1zB,GACR8oI,MAAM9oI,GACN7F,KAAK68D,MAAQ,GACb78D,KAAK4qK,SAAUjK,EAAAA,GAAAA,MACf3gK,KAAKsqK,cAAgB,GACrBtqK,KAAKkrK,kBAAoBlrK,KAAKkrK,kBAAkB5mI,KAAKtkC,MAEzD+gK,gBACI,MAAO,CAAC,IAAIC,GAAAA,GAAchhK,KAAKkrK,kBAAmB,KAEtDA,oBACI,IACIxL,eAAgBA,GAChB1/J,KAAK6F,MACL65J,IACAA,EAAejlE,QAAUz6F,KAAK4qK,QAAQnwE,SAG1CowE,0BACA,YAAI,IAAW7qK,KAAKsqK,cAAcO,oBACvB7qK,KAAKsqK,cAAcO,oBAEvB7qK,KAAKsqK,cAAcO,oBAAsB,MAC5C,IACIhL,UAAWA,GACX7/J,KAAK6F,MACT,OAAOg6J,EAAU7tI,KAAIk4I,GAAK,QAAUA,GAAK,IAAMA,EAAI,CAC/Cz6J,KAAMq7J,KACNxqK,MAAO,GACP,CACAmP,KAAM1J,OAAOmkK,GACb5pK,MAAO4pK,MATiC,GAahDnI,qBACA,IAAIM,EAAcriK,KAAK6F,MACnBy8J,GAAYC,EAAAA,GAAAA,GAA8BF,EAAarD,IAC3D,OAAOsD,EAEXmI,oBAAoBC,EAAWC,EAAWlwG,GACtCk0E,MAAM87B,sBACFzqK,KAAK6F,MAAMg6J,YAAc6K,EAAU7K,YACnC7/J,KAAKsqK,cAAcO,yBAAsB,GAGjDplI,SACI,IAAI5/B,EAAQ7F,KAAK6F,MACjB,OAAOo5J,GAAa,CAChBp5J,OAAOopC,EAAAA,EAAAA,GAAS,GAAIppC,GACpB+kK,QAAS5qK,KAAK4qK,QACdC,oBAAqB7qK,KAAK6qK,oBAC1B9I,eAAgB/hK,KAAK+hK,kBAIjCkJ,GAAiBzgF,aAAewgF,G,eCzH5BhM,GAAY,CAAC,YAAa,cAAe,oBAAqB,mBAAoB,WAAY,cAAe,kBAAmB,qBAAsB,mBAAoB,gBAAiB,YAAa,YAAa,YAAa,kBAAmB,WAAY,iBAAkB,YAAa,eAAgB,iBAAkB,wBAAyB,WAAY,iBAAkB,aAAc,WAAY,wBAAyB,gBAAiB,aAAc,WAsCpcC,GAAe1uI,IACtB,IACI82G,QAASA,EACT8jC,YAAaA,EACb9L,mBAAoBA,EACpB+L,yBAA0BA,EAC1BC,yBAA0BA,EAC1BC,sBAAuBA,EACvBzlK,OACIqiE,iBAAkBA,EAClBhmD,SAAUA,EACVi9I,YAAaA,EACbsC,cAAeA,EACf/5F,UAAWA,EACXplD,UAAWA,EACXo/I,gBAAiBA,EACjBn/I,SAAUA,EACVo/I,eAAgBA,EAChB9B,UAAWA,EACXP,aAAcA,EACdsC,eAAgBA,EAChBrC,SAAUA,EACVjzJ,WAAYA,EACZ8V,sBAAuBA,EACvB0/I,cAAeA,EACftzI,WAAYA,EACZjhB,QAASA,GAEbw0J,eAAgBA,EAChBwJ,qBAAsBA,GACtBh7I,EACJ,OAAOgwI,EAAAA,GAAAA,KAAeC,EAAAA,GAAAA,IAAqB,EAAG30E,GAAAA,IAAQ58C,EAAAA,EAAAA,GAAS,CAC3DywH,eAAgB6L,EAChBj/J,WAAYA,EACZ+6H,QAASA,EACT95H,QAASA,GACVw0J,EAAgB,CACflxH,SAAU,CAACixH,IAAiBtB,EAAAA,GAAAA,IAAqB,EAAGyK,GAAkB,CAClEvL,eAAgBJ,EAChBD,mBAAoBA,EACpB98I,SAAUA,EACVo/I,eAAgBA,EAChB9B,UAAWA,IACXyL,IAAyBxI,EAAAA,GAAAA,IAAY,EAAG,MAAOgB,GAAmB,CAACqH,IAAe3K,EAAAA,GAAAA,IAAqB,EAAGwC,GAAU,CACpHtD,eAAgBP,EAChBj9I,SAAUA,EACVwlD,UAAWA,EACXplD,UAAWA,EACXkM,WAAYA,IACZ48I,IAA4BtI,EAAAA,GAAAA,IAAY,EAAG,MAAOiB,IAA0BvD,EAAAA,GAAAA,IAAqB,EAAG4I,GAAmB,CACvHlhG,iBAAkBA,EAClBm3F,mBAAoBA,EACpBoC,cAAeA,EACf/5F,UAAWA,EACXplD,UAAWA,EACXo/I,gBAAiBA,EACjBE,eAAgBA,EAChBx/I,sBAAuBA,EACvBoM,WAAYA,IACZ,EAAG,KAAM,KAAM+wI,IAAY,EAAG,CAC9BrrH,OAAOs3H,EAAAA,GAAAA,IAAgB,CACnBpzC,WAAYizC,YAKjBI,GAAoBtrK,OAAO2oE,OAAO3oE,OAAOyxE,WAAW3iC,EAAAA,EAAAA,GAAS9uC,OAAOuiK,0BAA0BE,IAAqBziK,OAAOuiK,0BAA0B,CAC3JtD,iBAAiB,EACjBC,oBAAoB,MAKjB,MAAMqM,WAAqBhL,GAAAA,GAC9BnnI,YAAY1zB,GACR8oI,MAAM9oI,GACN7F,KAAK68D,MAAQ,GACb78D,KAAKurK,sBAAuB5K,EAAAA,GAAAA,MAC5B3gK,KAAKsqK,cAAgB,GACrBtqK,KAAKkrK,kBAAoBlrK,KAAKkrK,kBAAkB5mI,KAAKtkC,MACrDA,KAAK2rK,mBAAqB3rK,KAAK2rK,mBAAmBrnI,KAAKtkC,MAE3D+gK,gBACI,MAAO,CAAC,IAAIC,GAAAA,GAAchhK,KAAKkrK,kBAAmB,KAEtDU,kBACI,OAAO38H,EAAAA,EAAAA,GAAS,GAAIjvC,KAAKy6D,QAAS,CAC9B0oG,sBAAuBnjK,KAAK6rK,iBAGpCX,oBACI,IACIxL,eAAgBA,GAChB1/J,KAAK6F,MACL65J,IACAA,EAAejlE,QAAUz6F,KAAKurK,qBAAqB9wE,SAG3DkxE,qBACI,MAAO,CACHppI,OAAQ,KAAM,EACdpB,QAAS,IAAMnhC,KAAKurK,qBAAqB9wE,QACzC/vD,sBAAuB,IAAMpE,IACzB,IAAIwlI,EAAuBzJ,EAC3B,QAAUyJ,GAAyBzJ,EAAcriK,KAAK6F,OAAO6E,iBAAc,IAAWohK,GAAiCA,EAAsB5/I,KAAKm2I,EAAa/7H,KAIvKulI,qBACA,YAAI,IAAW7rK,KAAKsqK,cAAcuB,eACvB7rK,KAAKsqK,cAAcuB,eAEvB7rK,KAAKsqK,cAAcuB,eAAiB,MAAO,CAC9C5nH,uBAAwB,CAAC9iB,EAASoJ,KAC9B,IAAIwhI,EAAoB/rK,KAAK2rK,qBAC7B,OAAOK,GAAwB,QAASD,EAAmB5qI,OAAS,EAAQoJ,MAHzC,GAO3C4gI,kBACA,IACI/L,gBAAiBA,EACjBj9I,SAAUA,GACVniB,KAAK6F,MACT,OAAOsc,GAAYi9I,GAAmBp/J,KAAKq/J,mBAE3C+L,+BACA,OAAO,IAAMprK,KAAK6F,MAAM0c,SAExB0pJ,4BACA,IACIhqJ,YAAaA,EACbu/I,iBAAkBA,GAClBxhK,KAAK6F,MACT,MAAI,aAAeoc,QAAe,IAAWu/I,EAClCA,EAAmB,UAAY,OAEnCv/I,EAEPqpJ,4BACA,QAAStrK,KAAK6F,MAAMg8J,uBAAyB7hK,KAAK6F,MAAM6hE,UAAY,EAEpE2jG,+BACA,GAAI,SAAWrrK,KAAK6F,MAAMg8J,uBAAyB,IAAM7hK,KAAK6F,MAAM6hE,WAAa1nE,KAAK6F,MAAMqiE,iBACxF,MAAO,SAIXm3F,yBACA,IAAIp9I,EAAcjiB,KAAKisK,sBACnBjjJ,GAAS,EAMb,OAJIA,EADA,aAAe/G,EACNjiB,KAAK6F,MAAMw5J,mBAEX,SAAWp9I,EAEjB+G,EAEPq+G,cACA,IAAI6kC,EAAa,CACb,CAAC,GAAGpkJ,OAAO9nB,KAAK6F,MAAMilC,cAAe9qC,KAAK6F,MAAMilC,UAChD,CAAC84H,KAAc,EACf,CAACC,KAAoB7jK,KAAKq/J,oBAE9B,OAAOkF,EAAAA,GAAAA,GAAe2H,GAEtBnK,qBACA,IAAIoK,EAAensK,KAAK6F,MACpBy8J,GAAYC,EAAAA,GAAAA,GAA8B4J,EAAcnN,IAC5D,OAAOsD,EAEXmI,oBAAoBC,EAAWC,EAAWlwG,GACtCk0E,MAAM87B,sBACFzqK,KAAK6F,MAAM6E,YAAcggK,EAAUhgK,YACnC1K,KAAKsqK,cAAcuB,oBAAiB,GAG5CpmI,SACI,IAAI5/B,EAAQ7F,KAAK6F,MACjB,OAAOo5J,GAAa,CAChBp5J,OAAOopC,EAAAA,EAAAA,GAAS,GAAIppC,GACpB0lK,qBAAsBvrK,KAAKurK,qBAC3BM,eAAgB7rK,KAAK6rK,eACrBV,YAAanrK,KAAKmrK,YAClBC,yBAA0BprK,KAAKorK,yBAC/BE,sBAAuBtrK,KAAKsrK,sBAC5BD,yBAA0BrrK,KAAKqrK,yBAC/BhM,mBAAoBr/J,KAAKq/J,mBACzBh4B,QAASrnI,KAAKqnI,QACd06B,eAAgB/hK,KAAK+hK,kBAIjC2J,GAAalhF,aAAeihF,GCvO5B,IAAIzM,GAAY,CAAC,YAAa,mBAAoB,kBAAmB,cAAe,oBAAqB,mBAAoB,WAAY,mBAAoB,gBAAiB,YAAa,YAAa,YAAa,kBAAmB,WAAY,iBAAkB,YAAa,iBAAkB,wBAAyB,aAAc,WAAY,wBAAyB,gBAAiB,aAAc,WAoBrYC,GAAe1uI,IACtB,IACI0wI,WAAYA,EACZc,eAAgBA,GAChBxxI,EACJ,OAAOgwI,EAAAA,GAAAA,KAAeC,EAAAA,GAAAA,IAAqB,EAAGC,IAAoBxxH,EAAAA,EAAAA,GAAS,CACvE11B,gBAAiBmyJ,GACjBzK,WAAYA,GACbc,MAKA,MAAMqK,WAAcC,GAAAA,GACvB9yI,YAAY1zB,GACR8oI,MAAM9oI,GACN7F,KAAKsqK,cAAgB,GACrBtqK,KAAK68D,MAAQ,CACTt6C,cAAU,IAAWviB,KAAK6F,MAAM0c,SAAWviB,KAAK6F,MAAM0c,SAAWviB,KAAK6F,MAAM88J,gBAC5ErgJ,eAAW,IAAWtiB,KAAK6F,MAAMyc,UAAYtiB,KAAK6F,MAAMyc,UAAYtiB,KAAK6F,MAAM04H,kBAEnFv+H,KAAK0hK,gBAAkB1hK,KAAK0hK,gBAAgBp9H,KAAKtkC,MACjDA,KAAK2hK,eAAiB3hK,KAAK2hK,eAAer9H,KAAKtkC,MAEnD+gK,gBACI,MAAO,EAACuL,EAAAA,GAAAA,OAEZ5K,gBAAgBtjC,GAER,IAAImuC,EASAC,EAVJxsK,KAAK6F,MAAM07J,mBAEXvhK,KAAKmiK,UAASC,IACVmK,EAAanuC,EAAe,EACrB,CACH97G,UAAWiqJ,MAGnBvsK,KAAK6F,MAAM67J,gBAAgB6K,KAG3BvsK,KAAKmiK,UAASC,IACVoK,EAAYpuC,EACL,CACH97G,UAAWkqJ,MAGnBxsK,KAAK6F,MAAM67J,gBAAgB8K,IAG/BlqJ,gBACA,OAAItiB,KAAK6F,MAAM07J,wBACH,IAAWvhK,KAAK6F,MAAMyc,UAAYtiB,KAAK6F,MAAMyc,UAAYtiB,KAAK68D,MAAMv6C,WAAa,OAEtF,IAAWtiB,KAAK6F,MAAMyc,UAAYtiB,KAAK6F,MAAMyc,UAAYtiB,KAAK68D,MAAMv6C,UAE/Eq/I,eAAe8K,GACX,IAAIF,EACJvsK,KAAKmiK,UAASC,IACVmK,EAAaE,EACN,CACHlqJ,SAAUgqJ,MAGlBvsK,KAAK6F,MAAM87J,eAAe4K,GAE1BzhI,gBACA,OAAI9qC,KAAK6F,MAAM07J,mBACJgD,EAAAA,GAAAA,GAAe,CAClB,qBAAqB,EACrB,CAAC,GAAGz8I,OAAO9nB,KAAK6F,MAAMilC,cAAe9qC,KAAK6F,MAAMilC,YAGjD9qC,KAAK6F,MAAMilC,UAElBm2H,iBACA,YAAI,IAAWjhK,KAAKsqK,cAAcrJ,WACvBjhK,KAAKsqK,cAAcrJ,WAEvBjhK,KAAKsqK,cAAcrJ,WAAa,MAAOhyH,EAAAA,EAAAA,GAAS,IAAIA,EAAAA,EAAAA,GAAS,GAAIjvC,KAAK6F,MAAO,CAChF0c,cAAU,IAAWviB,KAAK6F,MAAM0c,SAAWviB,KAAK6F,MAAM0c,SAAWviB,KAAK68D,MAAMt6C,SAC5ED,eAAW,IAAWtiB,KAAK6F,MAAMyc,UAAYtiB,KAAK6F,MAAMyc,UAAYtiB,KAAK68D,MAAMv6C,YAC/E,CACAwoB,UAAW9qC,KAAK8qC,UAChBxoB,UAAWtiB,KAAKsiB,UAChBo/I,gBAAiBp/I,GAAatiB,KAAK0hK,gBAAgBp/I,GACnDq/I,eAAgBp/I,GAAYviB,KAAK2hK,eAAep/I,KAPb,GAUvCw/I,qBACA,IAAI2K,GAAwBz9H,EAAAA,EAAAA,GAAS,GAAIjvC,KAAK6F,MAAO,CAC7C0c,cAAU,IAAWviB,KAAK6F,MAAM0c,SAAWviB,KAAK6F,MAAM0c,SAAWviB,KAAK68D,MAAMt6C,SAC5ED,eAAW,IAAWtiB,KAAK6F,MAAMyc,UAAYtiB,KAAK6F,MAAMyc,UAAYtiB,KAAK68D,MAAMv6C,YAEnFggJ,GAAYC,EAAAA,GAAAA,GAA8BmK,EAAuB1N,IACrE,OAAOsD,EAEXmI,oBAAoBC,EAAWC,EAAWlwG,GACtCk0E,MAAM87B,sBACFzqK,KAAK6F,QAAU6kK,GAAa1qK,KAAK6F,MAAM07J,oBAAsBmJ,EAAUnJ,mBAAqBvhK,KAAK6F,MAAMilC,YAAc4/H,EAAU5/H,WAAa9qC,KAAK68D,MAAMv6C,YAAcqoJ,EAAUroJ,WAAatiB,KAAK6F,MAAMyc,YAAcooJ,EAAUpoJ,WAAatiB,KAAK6F,MAAM67J,kBAAoBgJ,EAAUhJ,iBAAmB1hK,KAAK6F,MAAM87J,iBAAmB+I,EAAU/I,iBAChV3hK,KAAKsqK,cAAcrJ,gBAAa,GAGxCx7H,SACI,IAAI5/B,EAAQ7F,KAAK6F,MACjB,OAAOo5J,GAAa,CAChBp5J,OAAOopC,EAAAA,EAAAA,GAAS,GAAIppC,EAAO,CACvB0c,cAAU,IAAWviB,KAAK6F,MAAM0c,SAAWviB,KAAK6F,MAAM0c,SAAWviB,KAAK68D,MAAMt6C,SAC5ED,eAAW,IAAWtiB,KAAK6F,MAAMyc,UAAYtiB,KAAK6F,MAAMyc,UAAYtiB,KAAK68D,MAAMv6C,YAEnFo/I,gBAAiB1hK,KAAK0hK,gBACtBp/I,UAAWtiB,KAAKsiB,UAChBq/I,eAAgB3hK,KAAK2hK,eACrB72H,UAAW9qC,KAAK8qC,UAChBm2H,WAAYjhK,KAAKihK,WACjBc,eAAgB/hK,KAAK+hK,kBAIjCqK,GAAM5hF,aAAei4E,GCpIN,MAAM2J,WAAc/N,GAC/BsO,WACI,IAAI9mK,EAAQ8oI,MAAMg+B,WAElB,OADA9mK,EAAM6E,UAAY1K,KAAK4sK,oBAAoB/mK,EAAM6E,WAC1C7E,EAEPgnK,iBACA,MAAO,CACHC,OAAQ,CACJ,CAAC,WAAY,kBAAmB,kBAChC,CAAC,YAAa,mBAAoB,oBAEtCC,UAAW,GACXtsH,SAAU,GACVjI,UAAW,GACX3yC,MAAO,CAAC,kBAAmB,iBAAkB,mBAAoB,kBAAmB,oBAAqB,YAAa,WAAY,WAAY,mBAAoB,cAAe,gBAAiB,YAAa,iBAAkB,UAAW,mBAAoB,wBAAyB,gBAAiB,YAAa,aAAc,wBAAyB,aAAc,YAAa,WAAY,cAGzYmnK,qBACA,OAAOC,KAGf9/E,EAAAA,EAAAA,GAAkB,UAAWi/E,IC5B7B,UCUIxI,GAAc,QACdsJ,GAAkB,GAClBC,GAAe,SAAS7xG,GACxB,OAAO,GAAK1qC,SAAS0qC,EAAeh5C,cAAgB,IAEpD8qJ,GAAY5/H,GAAAA,KAAAA,QAAqB,CACjCvE,KAAM,WACF,IAAIqyB,EAAiBt7D,KAAKqqC,cAAc,QACxCixB,EAAeld,QAAQD,KAAI7X,IACvB,GAAIA,GAAKA,EAAEp6B,mBAAoB,CAC3B,IAAIJ,EAAQ9L,KAAKqtK,YACbvhK,EACAA,EAAMy2B,OAAO,CACTjgB,UAAW6qJ,GAAa7xG,GACxB/4C,SAAU+4C,EAAe/4C,WACzBmlD,UAAWpM,EAAeoM,YAC1Bl5C,WAAY8sC,EAAe9sC,aAC3B05C,iBAAkB5M,EAAe4M,qBAGrCloE,KAAKylC,eAEDa,GAAK,WAAaA,EAAEmU,YAAc,oBAAsBnU,EAAEmU,YAAc,qBAAuBnU,EAAEmU,aACzGz6C,KAAKylC,aAIjB4nI,UAAW,WACP,IAAI3sI,EAAW1gC,KAAKmhC,UACpB,OAAOT,GAAYA,EAAShxB,KAAK,YAErCw8B,YAAa,WACT,IAAIxL,EAAW1gC,KAAKmhC,UAAUW,SAAS9hC,KAAKqhC,gBAAgBuiI,KACxD0J,EAAettK,KAAKuiC,OAAO,UAAY,GACvC+4B,EAAiBt7D,KAAKqqC,cAAc,QACpCwa,EAAqB7kD,KAAKqqC,cAAc,sBACxC/oB,EAAU,CACVmgJ,cAAeyL,GACf5qJ,UAAW6qJ,GAAa7xG,GACxBoM,UAAWpM,EAAeoM,YAC1BnlD,SAAU+4C,EAAe/4C,WACzBu/I,cAAewL,EAAajrJ,qBAC5BF,SAAUmrJ,EAAanrJ,SACvBF,YAAaqrJ,EAAarrJ,YAC1B4/I,sBAAuByL,EAAa//J,QACpC6U,sBAAuBkrJ,EAAalrJ,sBACpCy9I,UAAW7/J,KAAK2uF,eAChBngE,WAAY8sC,EAAe9sC,aAC3B05C,iBAAkB5M,EAAe4M,mBACjCo2F,iBAAkB,SAASh8I,GACnBg5C,EAAeh5C,cAAgBA,EAAY,GAC3C0wB,YAAY,WACRsoB,EAAeh5C,UAAUA,EAAY,OAIjDi8I,gBAAiB,SAASh8I,GACtBywB,YAAY,WACRsoB,EAAe/4C,SAASA,OAGhC7X,UAAW47B,GAAKue,GAAsBA,EAAmBla,cAAc,YAAarE,GACpFinI,4BAA6BvtK,KAAKuiC,OAAO,+BACzC2S,YAAal1C,KAAKuiC,OAAO,gCAEzB9R,EAAAA,EAAAA,IAAU68I,EAAaprJ,YACvBZ,EAAQY,SAAWorJ,EAAaprJ,WAEhC+pB,EAAAA,EAAAA,MACAjsC,KAAKwiC,iBAAiB9B,EAAU0rI,GAAO9qJ,GAEvCof,EAASoB,SAAS,YAAY5gB,KAAK,4DAG3CytE,aAAc,WACV,IAAIrzB,EAAiBt7D,KAAKqqC,cAAc,QACpCijI,EAAettK,KAAKuiC,OAAO,SAC3BvgB,EAAmBsrJ,GAAgBA,EAAatrJ,iBAChDO,EAAW+4C,EAAe/4C,WAW9B,OAVKkO,EAAAA,EAAAA,IAAUzwB,KAAKwtK,cAAgB,KAAM7wI,EAAAA,EAAAA,IAAQpa,EAAUviB,KAAKwtK,cAC7DxtK,KAAKwtK,WAAa,GACdF,IACIvmK,MAAM2iB,QAAQ1H,GACdhiB,KAAKwtK,WAAaxrJ,EACXA,GAAoBO,EAAW,IACtCviB,KAAKwtK,WAAa,CAAC/6I,KAAKC,MAAMnQ,EAAW,GAAIA,EAAU,EAAIA,MAIhEviB,KAAKwtK,YAEhB/rI,UAAW,WACP,IAAI65B,EAAiBt7D,KAAKqqC,cAAc,QACpCijI,EAAettK,KAAKuiC,OAAO,SAC3BkrI,EAAeH,GAAgBA,EAAa//J,QAC5ChB,EAAYvM,KAAKuiC,OAAO,aAQ5B,MAPI,SAAWkrI,IAIPA,IAHAlhK,GAAc,YAAcA,EAAUiI,MAAQ,aAAejI,EAAUiI,QAGxD8mD,EAAeoM,YAAc,GAAKpM,EAAezT,aAAeyT,EAAe4M,qBAG/FulG,GAEX5qI,UAAW,WACP,OAAO7iC,KAAKwsC,oBAEhB5C,cAAe,SAASnV,GACpB,IAAInlB,EAAOmlB,EAAKnlB,KACZo+J,EAAU,UAAYp+J,EACtBq+J,EAAW,WAAar+J,EACxBs+J,EAAe,eAAiBt+J,EAChCu+J,EAAc,cAAgBv+J,EAC9BgsD,EAAiBt7D,KAAKqqC,cAAc,QACxC,GAAIqjI,GAAWC,GAAYE,GAAeD,EAAc,CAEpD,GADAn5I,EAAKqV,SAAU,EACXwxB,EAAeuY,2BAA2Bp/C,EAAKqgC,UAC/C,QAEA44G,GAAWC,KACX3tK,KAAKwtK,WAAa,MAEjBI,IACD5tK,KAAK8rC,eACDG,EAAAA,EAAAA,OAAeyhI,GAAW1tK,KAAK8lC,WAC/B9lC,KAAK8lC,UAAUoH,cAMxB4gI,GAAc,CACrB5nH,eAAgB,WACZ,MAAO,CACHp6C,MAAO,CACHyB,QAAS,OACT8U,sBAAsB,EACtBL,iBAAkB,UAI9BksB,MAAO,CACHwgD,UAAW0+E,KCtJnB5iH,GAAAA,eAAwB,QAASsjH,I,oCCmC7BC,GAA0B,oBAC1BC,GAAgC,gCAChCC,GAAwB,cACxBjpH,GAAqB,eACrBkpH,GAA4B,cAC5BC,GAAgB,UAChBC,GAA+B,iBAC/BC,GAAwB,qBACxBjpH,GAAmB,gBACnBkpH,GAAe,YACfC,GAA8B,uBAC9BnhE,GAAmB,+BACnBohE,GAAwC,GACxCC,GAAiB,EACjBC,GAAiB,GACjBh+J,GAAgB,SAASk3B,GACzB,OAAOA,EAAKrF,OAAO,wBAA0BqF,EAAKyC,cAAc,WAAWwf,mBAAmB,kBAE9Fp5C,GAAkB,SAASm3B,GAC3B,OAAOA,EAAKrF,OAAO,0BAA4BqF,EAAKyC,cAAc,WAAWwf,mBAAmB,oBAEhG8kH,GAAcnhI,GAAAA,KAAAA,QAAqB,CACnCtB,YAAa,WACTlsC,KAAKs6B,WACLt6B,KAAKmhC,UAAUW,SAAS9hC,KAAKqhC,gBAAgB8sI,KAC7CnuK,KAAKwO,QAETogK,yBAA0B,WAClB5uK,KAAK6uK,kBACL7uK,KAAK8uK,yBAAyB3tC,gBAAgB7+F,OAAOtiC,KAAK6uK,mBAGlEE,qBAAsB,WAClB,IAAInnI,EAAO5nC,KACX4nC,EAAKinI,iBAAmB,SAASn0J,GAC7B,IAAIgmB,EAAWkH,EAAKzG,UAChBT,GAAYA,EAASkP,SAAShI,EAAKvG,gBAAgB8sI,OACnDztI,EAASyE,IAAI,CACTjmB,IAAKxE,EAASwE,OAElB8vJ,EAAAA,EAAAA,IAAWtuI,EAAUhmB,EAAShS,UAGtC1I,KAAK8uK,yBAAyB3tC,gBAAgBhjF,IAAIvW,EAAKinI,mBAE3DjlI,cAAe,SAASnV,GAChB,wBAA0BA,EAAKnlB,OAC/BtP,KAAK4uK,2BACDn6I,EAAKn0B,QACLN,KAAK+uK,uBACL/uK,KAAK8rC,gBAGb9rC,KAAKs6B,SAAS7F,IAElBwU,KAAM,WACFjpC,KAAKs6B,WACLt6B,KAAK8uK,yBAA2B9uK,KAAKqqC,cAAc,iBACnDrqC,KAAK+uK,wBAETttI,UAAW,WACP,OAAO/wB,GAAc1Q,OAEzByO,KAAM,WACFzO,KAAKmhC,UAAU1yB,QAEnBD,KAAM,WACFxO,KAAKmhC,WAAanhC,KAAKmhC,UAAU3yB,QAErC8tE,UAAW,SAASh8E,IAChB0uK,EAAAA,EAAAA,IAAWhvK,KAAKmhC,UAAW7gC,IAE/BsqC,QAAS,WACL5qC,KAAK4uK,2BACL5uK,KAAKs6B,cAGT20I,GAAgBzhI,GAAAA,KAAAA,QAAqB,CACrC0hI,iBAAkB,aAClBhjI,YAAa,SAAS5qB,GAClBthB,KAAKs6B,SAAShZ,GACdthB,KAAKmvK,UAAW,EAChBnvK,KAAKkvK,mBACLlvK,KAAKwO,QAETC,KAAM,WACFzO,KAAKmvK,UAAW,GAEpB3gK,KAAM,WACFxO,KAAKmvK,UAAW,GAEpBzmK,OAAQ,SAASpI,GACb,IAAIogC,EAAW1gC,KAAKmhC,UACpB,GAAIT,EAAU,CACV,KAAIjQ,EAAAA,EAAAA,IAAUnwB,GAGV,OAAOuiC,EAAAA,EAAAA,IAAUnC,IAFjBsuI,EAAAA,EAAAA,IAAWtuI,EAAUpgC,KAMjCkN,MAAO,SAASlN,GACZ,IAAIogC,EAAW1gC,KAAKmhC,UACpB,GAAIT,EAAU,CACV,KAAIjQ,EAAAA,EAAAA,IAAUnwB,GAGV,OAAOkhD,EAAAA,EAAAA,IAAS9gB,IAFhBsX,EAAAA,EAAAA,IAAStX,EAAUpgC,OAO/B8uK,GAAuBH,GAAc7jI,QAAQ,CAC7C8jI,iBAAkB,WACdlvK,KAAKs6B,WACL,IAAIoG,EAAW1gC,KAAKmhC,UACpBT,EAASoB,SAAS9hC,KAAKqhC,gBAAgB0sI,MAE3CgB,qBAAsB,WAClB,IACIruI,EADAkH,EAAO5nC,KAEX4nC,EAAKinI,iBAAmB,SAASn0J,GAC7BgmB,EAAWkH,EAAKzG,UACZT,IACAA,EAASyE,IAAI,CACTjmB,IAAKxE,EAASwE,OAElB8vJ,EAAAA,EAAAA,IAAWtuI,EAAUhmB,EAAShS,UAGtCk/B,EAAKknI,yBAAyB3tC,gBAAgBhjF,IAAIvW,EAAKinI,mBAE3DD,yBAA0B,WACtB5uK,KAAK6uK,kBAAoB7uK,KAAK8uK,yBAAyB3tC,gBAAgB7+F,OAAOtiC,KAAK6uK,mBAEvFniF,MAAO,WACH1sF,KAAKqvK,eAAiB3+J,GAAc1Q,MAChCA,KAAKyhC,aACLzhC,KAAK+uK,wBAGbttI,UAAW,WACP,OAAOzhC,KAAKuiC,OAAO,uBAAyB9xB,GAAgBzQ,OAAS0Q,GAAc1Q,QAEvF4pC,cAAe,SAASnV,GAChB,wBAA0BA,EAAKnlB,OAC3BmlB,EAAKn0B,OACLN,KAAK0sF,QACL1sF,KAAK8rC,cACL9rC,KAAKwO,MAAK,KAEVxO,KAAK4uK,2BACL5uK,KAAKqvK,eAAiB3+J,GAAc1Q,MACpCA,KAAKwO,MAAK,KAGlBxO,KAAKs6B,SAAS7F,IAElBwU,KAAM,WACFjpC,KAAKs6B,WACLt6B,KAAK8uK,yBAA2B9uK,KAAKqqC,cAAc,iBACnDrqC,KAAK0sF,SAETj+E,KAAM,WACF,IAAIiyB,EAAW1gC,KAAKmhC,UAChBT,IAAa1gC,KAAKmvK,WACdnvK,KAAKqvK,eACL3uI,EAASsB,YAAYhiC,KAAKqhC,gBAAgB2sI,KAE1CttI,EAASjyB,QAGjBzO,KAAKs6B,YAET9rB,KAAM,SAASipE,GACX,IAAI/2C,EAAW1gC,KAAKmhC,UAChBmuI,EAA8BtvK,KAAKqhC,gBAAgB2sI,IACnDttI,IAAa1gC,KAAKmvK,UAAY13F,KAC1Bz3E,KAAKqvK,gBACL3uI,EAASoB,SAASwtI,GAClB5uI,EAASyE,IAAI,OAAQ,IACrBzE,EAASjyB,SAELiyB,EAASkP,SAAS0/H,IAClB5uI,EAASsB,YAAYstI,GAEzB5uI,EAASlyB,SAGjBxO,KAAKs6B,YAETi1I,QAAS,SAASC,GACd,IAAI9uI,EAAW1gC,KAAKmhC,UAChBT,GACAA,EAASyE,IAAI,OAAQ,OAASqqI,EAAS,EAAIA,EAASxvK,KAAKosC,iBAAiBppB,SAASjE,OAG3F0wJ,aAAc,SAASC,GACnBA,GAAaj/I,EAAAA,EAAAA,IAAUi/I,GAAcA,EAAa,GAClD,IAAIhvI,EAAW1gC,KAAKmhC,UAChBT,GACAA,EAASyE,IAAI,SAAUuqI,IAG/B9kI,QAAS,WACL5qC,KAAK4uK,2BACL5uK,KAAKs6B,cAGTq1I,GAAqBV,GAAc7jI,QAAQ,CAC3CnC,KAAM,WACF,IAAIrB,EAAO5nC,KACXA,KAAKs6B,WACLt6B,KAAKqqC,cAAc,QAAQ83B,eAAehkB,KAAK,SAASvc,GAC/CA,GACDgG,EAAKp5B,WAIjB0gK,iBAAkB,WACdlvK,KAAKs6B,WACLt6B,KAAKmhC,UAAUW,SAASusI,IAAuBntJ,KAAK,WAExD1S,KAAM,WACF,IAAIu+B,EAAU/sC,KAAKosC,iBACf1L,EAAW1gC,KAAKmhC,UAChBT,GAAY1gC,KAAKmvK,UACjBzuI,EAASyE,IAAI,UAAW,QAExB4H,IAAYA,EAAQ8D,SAAS,IAAMw9H,IAAuBzmJ,QAC1DmlB,EAAQ4nC,QAAQ30E,KAAKmhC,WAEzBnhC,KAAKs6B,YAETmH,UAAW,WACP,IAAIy0B,EAAoBl2D,KAAKuiC,OAAO,cAChCg4D,EAAuBv6F,KAAKuiC,OAAO,iBACvC,OAAO2zB,GAAqBA,EAAkB3oD,SAAWgtF,GAAwBA,EAAqBhmF,SAE1G9F,KAAM,SAAS0qD,GACX,IAAIz4B,EAAW1gC,KAAKmhC,UAChByuI,EAAe,SAASC,GACxBC,GAAAA,EAAAA,KAAQpvI,GAAU,GAClBovI,GAAAA,EAAAA,QAAWpvI,EAAU,CACjB5xB,KAAM,QACNgS,KAAM,CACFtT,MAAO,EACPgyC,QAASqwH,EAAUrwH,SAEvBv+B,GAAI4uJ,EACJjvJ,SAAU,IACVC,OAAQ,WAGhB,GAAI6f,IAAa1gC,KAAKmvK,SAClB,OAAQh2G,GACJ,IAAK,QACDy2G,EAAa,CACTpiK,MAAO,OACPgyC,QAAS,iBAEb,MACJ,IAAK,gBACDowH,EAAa,CACTpiK,MAAO,OACPgyC,QAAS,UAEb,MACJ,QACI9e,EAASyE,IAAI,UAAW,IAGpCnlC,KAAKs6B,cAGTy1I,GAAqBviI,GAAAA,KAAAA,QAAqB,CAC1CwiI,aAAa,EACbC,WAAY,WACR,OAAOjwK,KAAKgwK,aAEhBE,uBAAwB,SAAS3xH,GAC7B,IAAIv1B,EAUJ,OATAoI,EAAAA,EAAAA,IAAKpxB,KAAKmwK,aAAa1mH,gBAAiB,SAASr/B,EAAO0/B,GACpD,GAAIA,EAAe,CACf,IAAIsmH,EAAetmH,EAAczkB,kBACjC,GAAI+qI,SAAiB,IAAWA,EAAatrF,QAAUvmC,EAAIpvC,EAAIihK,EAAatrF,eAAY,IAAWsrF,EAAalxJ,KAAOq/B,EAAIpvC,EAAIihK,EAAalxJ,YAAS,IAAWkxJ,EAAarxJ,MAAQw/B,EAAIrvC,EAAIkhK,EAAarxJ,aAAU,IAAWqxJ,EAAavoJ,OAAS02B,EAAIrvC,EAAIkhK,EAAavoJ,OAEtQ,OADAmB,EAAS8gC,GACF,MAIZ9gC,GAEXkjB,YAAa,WACTlsC,KAAKmhC,UAAUW,SAAS9hC,KAAKqhC,gBAAgB4sI,IAAyB,IAAMjuK,KAAKqhC,gBAAgB2jB,IAAsB,IAAMspH,IAAc9/J,QAE/I6hK,0BAA2B,WACvB,IAAIrlJ,EAAShrB,KAAKswK,aAClBtlJ,EAAOulJ,mBAAqB,SACrBvlJ,EAAOwlJ,2BACPxlJ,EAAOylJ,cACPzlJ,EAAO0lJ,YACP1lJ,EAAO2lJ,MAElBC,uBAAwB,SAASr9H,EAAU//B,GACvC,OAAIid,EAAAA,EAAAA,IAAU8iB,GACH,CACH/T,YAAahsB,EACb+/B,SAAUA,GAGX//B,GAEXo3B,QAAS,WACL,IAAIzJ,EAAUnhC,KAAKmhC,UACnBnhC,KAAKmwK,aAAe,KACpBhvI,GAAWA,EAAQuG,SAASnG,KAAK,IAAMvhC,KAAKqhC,gBAAgB4sI,KAAwB3rI,UAExFb,UAAW,WACP,IAAIwO,EAAoBjwC,KAAKqqC,cAAc,WACvC+gB,EAAuBnb,EAAkBqc,oBAC7C,OAAOtsD,KAAKuiC,OAAO,uBAAyB9xB,GAAgBzQ,OAASorD,EAAqB96C,eAAiB86C,EAAqB56C,cAEpIy4B,KAAM,WACF,IAAIrB,EAAO5nC,KACXA,KAAKs6B,WACLt6B,KAAKw7H,YAAcx7H,KAAKqqC,cAAc,kBACtCrqC,KAAK6wK,8BAAgC7wK,KAAKqqC,cAAc,kBACxDrqC,KAAKqqC,cAAc,QAAQ83B,eAAehkB,KAAK,SAASvc,GACpD,IAAIT,EAAUyG,EAAKzG,WACdS,GAAaT,GACdA,EAAQ3yB,WAIpBsiK,WAAY,SAASxvJ,GACjB,IAAIklI,EAAgBllI,EAAQklI,cACxBuqB,IAAoBzvJ,EAAQ83C,aAAatqD,KAC7C9O,KAAKgwK,aAAc,EACnBhwK,KAAKmwK,aAAe7uJ,EACpBthB,KAAKswK,aAAe,CAChBU,YAAa1vJ,EAAQ8I,MACrB6mJ,kBAAmBjxK,KAAK4wK,uBAAuBtvJ,EAAQiyB,SAAUjyB,EAAQke,aACzE0xI,oBAAqB5vJ,EAAQklI,cAC7Bh9F,eAAgBloC,EAAQkoC,gBAE5B,IAAIuxB,EAAWxlC,GAAAA,WAAAA,cACfv1C,KAAKmxK,eAAiBp2F,EAASq2F,cAC/Br2F,EAASq2F,cAAgB,WACrB,OAAO,GAEXpxK,KAAKw7H,YAAY61C,KAAKrxK,KAAKswK,cAC3BtwK,KAAKmhC,UAAUgE,IAAI,CACfqQ,UAAWgxG,GAAiBA,EAAcrhH,IAAI,aAC9Cz8B,OAAQ89I,IAAkBuqB,GAAmBvqB,EAAc7mH,IAAI,GAAGo9C,eAAgBl6C,EAAAA,EAAAA,IAAU2jH,IAC5Fh5I,MAAOg5I,IAAkBuqB,GAAmBvqB,EAAc7mH,IAAI,GAAGwX,cAAeqK,EAAAA,EAAAA,IAASglG,IACzF8qB,WAAY9qB,GAAiBA,EAAcrhH,IAAI,gBAChDrD,SAAS9hC,KAAKqhC,gBAAgB6sI,KAA4BlhI,YAAYuhI,GAA6BwC,GAAiBthK,KAAKshK,EAAkB,GAAKzvJ,EAAQ83C,aAAahoD,SACxKpR,KAAKmhC,UAAUY,SAASwvI,GAAAA,EAAAA,mBAAmC/qB,KAE/DgrB,WAAY,SAAS/8I,GACjB,IAAI6R,EAAI7R,EAAKgW,MACT7C,EAAOtB,EAAE52B,KAAKk4B,KACd6pI,GAAYC,EAAAA,GAAAA,IAAaprI,GACzB6G,IAAavF,EAAKipI,+BAAgCjpI,EAAKipI,8BAA8B1jI,aACrFwkI,EAAc/pI,EAAKuoI,aACvB,GAAIvoI,EAAKooI,cAAgB7iI,EAAY,CACjC,IAAIzM,EAAWkH,EAAKzG,UAChBywI,EAAan/I,KAAKo/I,IAAIJ,EAAUviK,EAAIyiK,EAAYnrB,cAAcxjI,SAASjE,KAAO4yJ,EAAYG,QAC1FC,EAAat/I,KAAKo/I,IAAIJ,EAAUtiK,EAAIwiK,EAAYnrB,cAAcxjI,SAAS9D,IAAMyyJ,EAAYK,QAC7F,GAAItxI,EAASiG,GAAG,aAAeirI,EAAanD,IAAkBsD,EAAatD,GAAgB,CACvF/tI,EAASjyB,OACT,IAAIwjK,EAAUR,EAAUviK,EAAIyiK,EAAYG,OACpCI,EAAST,EAAUtiK,EAAIwiK,EAAYK,OACvCtxI,EAASyE,IAAI,CACTpmB,KAAMkzJ,EACN/yJ,IAAKgzJ,IAETtqI,EAAKuqI,WAAWV,GAEpBnrI,EAAE+P,mBAGV87H,WAAY,SAASV,GACjB,IAAIW,EAAsBpyK,KAAKkwK,uBAAuBuB,GAClDlqI,EAAavnC,KAAKw7H,YAClBxwG,EAAShrB,KAAKswK,aACdqB,EAAc3xK,KAAKmwK,aACvB,GAAIiC,EAAqB,CACrB,IAAI9lK,EAAatM,KAAKuiC,OAAO,cACzB8vI,EAAwB,kBAAoBD,EAAoBnxH,UAChEqxH,EAAWD,EAAwB,IAAM,IACzCl5G,EAAiBi5G,EAAoBnxH,UACrC1N,EAAW,YAAc4lB,EAAiBw4G,EAAYp+H,cAAW,EACjE6lB,EAAeu4G,EAAYv4G,aAC3BjQ,EAAiBipH,EAAoBhhI,kBAAkBmC,EAAU,OAAS6lB,QAAgB,IAAWA,OAAe,EAASA,EAAaxmD,YAAc,GACxJ2/J,EAAiBZ,EAAYY,eAAiBZ,EAAYY,gBAAkB,GAC5EC,EAAkB,kBAAoBr5G,EAAiB,GAAKo5G,EAAep5G,IAAmB5xB,EAAWkrI,0BAAyB7mJ,EAAAA,EAAAA,GAAO,GAAI+lJ,EAAa,CAC1JS,oBAAqBA,EACrBtrK,QAASsrK,EAAoBlhI,WAAWqC,GACxC4V,eAAgBA,EAChBkpH,sBAAuBA,EACvBttI,iBAAkB,YAAco0B,IAAkBt3B,EAAAA,EAAAA,GAAEsnB,EAAe,IAAI/+B,WAI3E,GAFAmoJ,EAAep5G,GAAkBq5G,EACjCxnJ,EAAOmuC,eAAiBA,EACpBq5G,EAAgB5qJ,OAAS,EACzB,IAAK,IAAIiQ,EAAI,EAAGA,EAAI26I,EAAgB5qJ,OAAQiQ,IAAK,CAC7C,IAAI66I,EAAiBF,EAAgB36I,EAAI,KAAO26I,EAAgB36I,GAAGy6I,GAAYE,EAAgB36I,EAAI,GAAGy6I,IAAa,EACnH,QAAI,IAAWI,IAAmBpmK,GAAc,MAAQgmK,EAAWb,EAAUa,GAAYI,EAAiBjB,EAAUa,GAAYI,GAAiB,CAC7I1nJ,EAAOulJ,kBAAoBvwK,KAAK4wK,uBAAuBr9H,EAAUi/H,EAAgB36I,GAAG2H,aAChF2pB,EAAetxB,IACf7M,EAAOwlJ,oBAAsBrnH,EAAejkB,GAAGrN,GAC/C7M,EAAOylJ,QAAS,IAEhBzlJ,EAAOwlJ,oBAAsBrnH,EAAe3nB,OAC5CxW,EAAOylJ,QAAS,GAEpBzlJ,EAAO0lJ,KAAO8B,EAAgB36I,GAAG3oB,EACjC8b,EAAO2lJ,KAAO6B,EAAgB36I,GAAG1oB,EACjCo4B,EAAWorI,KAAK3nJ,GAChB,YAIRhrB,KAAKqwK,4BACL9oI,EAAWorI,KAAK3nJ,KAI5B4nJ,WAAY,SAASn+I,GACjB,IAAI6R,EAAI7R,EAAKgW,MACT7C,EAAOtB,EAAE52B,KAAKk4B,KACdL,EAAaK,EAAK4zF,YACtB5zF,EAAKzG,UAAU3yB,OACX+4B,GAAcK,EAAKooI,aACnBzoI,EAAWsrI,KAAKjrI,EAAK0oI,cAEzB1oI,EAAKzG,UAAUY,SAAS6F,EAAKwE,kBAC7BxE,EAAKuoI,aAAe,KACpBvoI,EAAK0oI,aAAe,KACpB1oI,EAAKooI,aAAc,EACnBz6H,GAAAA,WAAAA,cAAyB67H,cAAgBxpI,EAAKupI,gBAAkB,QAGpE2B,GAA2B,SAASlrI,GACpC,MAAO,WAAaA,EAAKrF,OAAO,uBAEhCwwI,GAA+BvlI,GAAAA,eAAAA,QAA+B,CAC9DwlI,kBAAmB,SAASrC,GACxB,GAAI3wK,KAAKsgF,mBAAoB,CACzB,IAAIn/C,EAAUnhC,KAAKsgF,mBAAmBn/C,UACtC,GAAIA,EAAS,CACT,IAAImtG,EAAYntG,EAAQne,SAAS9D,IAC7B+zJ,EAAmBjzK,KAAKsgF,mBAAmBz3B,sBAC/C,OAAO8nH,GAAQriC,GAAaqiC,GAAQriC,EAAY2kC,GAGxD,OAAO,GAEXC,kBAAmB,WACf,IAAIC,EACJ,OAAOnzK,KAAKuiC,OAAO,eAAiB,SAAW,QAAU4wI,EAAwBnzK,KAAKozK,yBAAsB,IAAWD,OAAwB,EAASA,EAAsBzrI,SAASvC,IAAI,eAE/LkuI,cAAe,SAASjuI,EAAOJ,EAAal+B,GACxC,IAAIwsK,EAAmBR,GAAyB9yK,MAC5CsM,EAAatM,KAAKuiC,OAAO,cACzBgxI,EAAmBvzK,KAAKkzK,oBACxBM,EAAyBF,IAAoBhnK,GAAeinK,EAAuB,EAAJ,EACnF,GAAInuI,EAAMhb,OAASopJ,GAAyBpuI,EAAMhb,MAAQ4a,GAAgBsuI,GAAsBhnK,IAAcinK,EAAwB,EAAJ,GAAQ,CACtInuI,EAAM5F,aAAeg0I,EACrB,IAAIhlH,EAAgB1nD,EAAQs+B,EAAM5F,cAAgB,GAC9Ci0I,EAAa3sK,EAAQs+B,EAAM5F,YAAc,IAAM,GACnD,QAAS8zI,EAAmB9kH,EAAc99C,eAAiB+iK,EAAW/iK,cAAgB89C,EAAc99C,eAExG,OAAO,GAEXgjK,gBAAiB,SAASlB,EAAiBmB,EAAU7B,GACjD,GAAIU,EACA,IAAK,IAAI36I,EAAI,EAAGA,EAAI26I,EAAgB5qJ,OAAQiQ,IACxC,IAAI26I,EAAgB36I,GAAG3oB,IAAMsjK,EAAgB,GAAGtjK,IAAKsjK,EAAgB36I,EAAI,IAAM26I,EAAgB36I,GAAG3oB,IAAMsjK,EAAgB36I,EAAI,GAAG3oB,IAG3HsjK,EAAgB36I,GAAG3oB,EAAI4iK,GAAU6B,GAAYA,GAAYnB,EAAgB36I,GAAG3oB,EAAI4iK,EAChF,OAAOU,EAAgB36I,GAInC,OAAO,MAEX+7I,eAAgB,SAASn/I,GACrB,IAAIo/I,EACAvtI,EAAI7R,EAAKgW,MACT7C,EAAOtB,EAAE52B,KACTokK,EAAwBlsI,EAAKmsI,sBAAsBvmK,QACnD8lK,EAAmBR,GAAyBlrI,GAC5CkqI,EAASgC,EAAwB,EACjCE,EAAepsI,EAAKwrI,kBAAkBpwJ,SACtCixJ,EAAmBD,EAAaj1J,KAChC0yJ,GAAYC,EAAAA,GAAAA,IAAaprI,GACzBh6B,EAAas7B,EAAKrF,OAAO,cACzBgxI,EAAmBvzK,KAAKkzK,oBACxBjD,EAAa,QAAU4D,EAAwBjsI,EAAKssI,2BAAwB,IAAWL,OAAwB,EAASA,EAAsB5D,aAClJ,GAAIroI,EAAKusI,aAAevsI,EAAKwsI,eACzB,IAAKH,GAAoBxC,EAAUviK,IAAMokK,GAAoBC,MAAuBD,GAAoB7B,EAAUviK,GAAK+kK,GAAmBzyH,EAAAA,EAAAA,IAAS5Z,EAAKwrI,qBAChJxrI,EAAKysI,4BAA4B5C,EAAUviK,GAAI,CAC/C,IAAIwhC,EAAQ9I,EAAK04C,mBAAmBlvC,oBAAoBlM,GAAG0C,EAAKwsI,cAAcE,oBAC1ErgI,EAAOvD,EAAM,GACjB,GAAIuD,EAAM,CACN,IAAIsgI,EAAatgI,EAAKiL,wBAAwB1xC,MAC9Co6B,EAAKmsI,sBAAsBxE,QAAQ7+H,EAAM1tB,SAASjE,OAASu0J,GAAoBC,IAAqBjnK,EAAa,EAAIioK,IACrH3sI,EAAKknI,yBAAyB7xH,OAAOrV,EAAK85G,aAAavyI,GACvDm3B,EAAE+P,wBAIN45H,IACJroI,EAAKorI,kBAAkBvB,EAAUtiK,IAC7By4B,EAAK4sI,wBACD5sI,EAAK4sI,sBAAsBz1J,OAASi1J,EAAaj1J,MAAQ6oB,EAAK4sI,sBAAsBt1J,MAAQ80J,EAAa90J,KACzG0oB,EAAK4qI,gBAAgB,OAG7B5qI,EAAK85G,aAAe95G,EAAK8rI,gBAAgB9rI,EAAK4qI,kBAAmBf,EAAUviK,EAAG4kK,GAC9ElsI,EAAK4sI,sBAAwBR,EAC7BpsI,EAAK6sI,kBAAmB,EACpB7sI,EAAK85G,cACL95G,EAAKmsI,sBAAsBtE,aAAa,cACxC7nI,EAAKmsI,sBAAsBxE,QAAQ3nI,EAAK85G,aAAaxyI,EAAI4iK,GACzDlqI,EAAKknI,yBAAyB7xH,OAAOrV,EAAK85G,aAAavyI,GACvDy4B,EAAK6sI,kBAAmB,EACxBnuI,EAAE+P,mBAEFzO,EAAKmsI,sBAAsBtE,eAC3B7nI,EAAKmsI,sBAAsBxE,QAAQ,SAGvC3nI,EAAK4qI,gBAAgB,MACrB5qI,EAAK6sI,kBAAmB,EACxB7sI,EAAKmsI,sBAAsBtE,eAC3B7nI,EAAKmsI,sBAAsBxE,QAAQ,SAI/C5tB,aAAc,SAASltH,GACnB,IAAI6R,EAAI7R,EAAKgW,MACT7C,EAAOtB,EAAE52B,KACTk4B,EAAKusI,cACLvsI,EAAK4qI,gBAAgB,MACrB5qI,EAAKwsI,cAAgB,KACrBxsI,EAAKmsI,sBAAsBvlK,OAC3Bo5B,EAAKmsI,sBAAsBtE,eAC3B7nI,EAAK8sI,aAAalmK,OAClBo5B,EAAK6sI,kBAAmB,EACxB7sI,EAAKusI,aAAc,IAG3BQ,oBAAqB,SAASL,GAC1B,OAAOA,EAAqB,GAEhCM,mBAAoB,SAASlE,GACzB,IAAI4D,EAAqBt0K,KAAK0hJ,aAAaliH,YACvCq1I,EAAkB70K,KAAK20K,oBAAoBL,GAC3CQ,EAAgB90K,KAAKsgF,mBAAmBp3B,iBAAiBorH,GACzDS,EAAa/0K,KAAKsgF,mBAAmBp3B,iBAAiB2rH,GAC1D70K,KAAKo0K,cAAgB,CACjBY,UAAWtE,EACX4D,mBAAoBA,EACpBW,mBAAoBH,GAAiBA,EAAcltJ,OAAS,GAAIyd,EAAAA,EAAAA,GAAgByvI,EAAc,IAAItnK,MAAQ,EAC1GqnK,gBAAiBA,EACjBK,gBAAiBH,GAAcA,EAAWntJ,OAAS,GAAIyd,EAAAA,EAAAA,GAAgB0vI,EAAW,IAAIvnK,MAAQ,IAGtGi0I,eAAgB,SAAShtH,GACrB,IAAI6R,EAAI7R,EAAKgW,MACT7C,EAAOtB,EAAE52B,KACT+hK,GAAYC,EAAAA,GAAAA,IAAaprI,GAY7B,IAXI6uI,EAAAA,GAAAA,IAAa7uI,KACTsB,EAAKorI,kBAAkBvB,EAAUtiK,IACjCy4B,EAAK85G,aAAe95G,EAAK8rI,gBAAgB9rI,EAAK4qI,kBAAmBf,EAAUviK,EAAGs/J,IAC1E5mI,EAAK85G,eACL95G,EAAKmsI,sBAAsBxE,QAAQ3nI,EAAK85G,aAAaxyI,EAAI04B,EAAKmsI,sBAAsBvmK,QAAU,GAC9Fo6B,EAAK6sI,kBAAmB,IAG5B7sI,EAAK6sI,kBAAmB,GAG5B7sI,EAAK6sI,iBAAkB,CACvB7sI,EAAKgtI,mBAAmBnD,EAAUviK,GAClC04B,EAAKusI,aAAc,EACnBvsI,EAAKknI,yBAAyB7xH,OAAOrV,EAAK85G,aAAavyI,GACvDy4B,EAAKmsI,sBAAsBtlK,OAC3Bm5B,EAAK8sI,aAAajmK,OAClB,IAAI+nE,EAAa5uC,EAAK9B,UAAU6xC,gBAC5BnB,GAAc5uC,EAAKsrI,sBACnBtrI,EAAKuwC,cAAe32B,EAAAA,EAAAA,IAASg1B,EAAWtvB,aAAc1F,EAAAA,EAAAA,IAASg1B,EAAWl9D,aAAek9D,EAAWp8B,cAExG9T,EAAE+P,iBACF/P,EAAEu5C,kBAEF7/E,KAAKmtC,cACLntC,KAAKqqC,cAAc,iBAAiB6jE,aAG5CukE,yBAA0B,WACtB,IAAI7qI,EAAO5nC,KACP8G,EAAU8gC,EAAKiP,mBAAqBjP,EAAKiP,mBAAmBC,oBAAsB,GAClFvF,EAAQ3J,EAAK04C,mBAAmBlvC,oBAChCohI,EAAkB,GAClBjhI,GAASA,EAAM3pB,OAAS,IACxB4qJ,EAAkBtjI,EAAAA,mBAAiCqC,GAAQ,SAASnM,GAChE,OAAOwC,EAAKyrI,cAAcjuI,EAAOmM,EAAM3pB,OAAQ9gB,OAGvD8gC,EAAKwtI,iBAAmB5C,GAE5B6C,uBAAwB,WACpBr1K,KAAKs1K,uBAAyB1uI,EAAAA,EAAAA,IAAiB2O,GAAAA,WAAAA,eAA0Bw/B,EAAAA,GAAAA,IAAa1hC,GAAAA,EAAAA,KAAoB+5D,IAAmBptG,KAAKs1K,uBAClIt1K,KAAKu1K,uBAAyB3uI,EAAAA,EAAAA,IAAiB5mC,KAAKozK,mBAAmBr+F,EAAAA,GAAAA,IAAa1hC,GAAAA,EAAAA,KAAoB+5D,IAAmBptG,KAAKu1K,uBAC5Hv1K,KAAKw1K,sBACL5uI,EAAAA,EAAAA,IAAiB5mC,KAAK+zK,sBAAsB5yI,WAAW4zC,EAAAA,GAAAA,IAAa1hC,GAAAA,EAAAA,GAAkB+5D,IAAmBptG,KAAKw1K,qBAC9G5uI,EAAAA,EAAAA,IAAiB2O,GAAAA,WAAAA,eAA0Bw/B,EAAAA,GAAAA,IAAa1hC,GAAAA,EAAAA,GAAkB+5D,IAAmBptG,KAAKw1K,uBAG1GC,mBAAoB,WAChBz1K,KAAKs1K,sBAAwBt1K,KAAK6pC,aAAa7pC,KAAK4zK,gBACpD5zK,KAAKu1K,sBAAwBv1K,KAAK6pC,aAAa7pC,KAAKyhJ,gBACpDzhJ,KAAKw1K,oBAAsBx1K,KAAK6pC,aAAa7pC,KAAK2hJ,cAClD/6G,EAAAA,EAAAA,GAAgB2O,GAAAA,WAAAA,eAA0Bw/B,EAAAA,GAAAA,IAAa1hC,GAAAA,EAAAA,KAAoB+5D,IAAmBptG,KAAMA,KAAKs1K,uBACzG1uI,EAAAA,EAAAA,GAAgB5mC,KAAKozK,mBAAmBr+F,EAAAA,GAAAA,IAAa1hC,GAAAA,EAAAA,KAAoB+5D,IAAmBptG,KAAMA,KAAKu1K,uBACvG3uI,EAAAA,EAAAA,GAAgB5mC,KAAK+zK,sBAAsB5yI,WAAW4zC,EAAAA,GAAAA,IAAa1hC,GAAAA,EAAAA,GAAkB+5D,IAAmBptG,KAAMA,KAAKw1K,qBACnH5uI,EAAAA,EAAAA,GAAgB2O,GAAAA,WAAAA,eAA0Bw/B,EAAAA,GAAAA,IAAa1hC,GAAAA,EAAAA,GAAkB+5D,IAAmBptG,KAAMA,KAAKw1K,sBAE3GnB,4BAA6B,SAAS3D,GAClC,IAAIoB,EAEA4D,EAQA/iK,EACA8gK,EACAkC,EAXAC,GAAa,EAEbC,EAAe71K,KAAKo0K,cACpBnkI,EAAoBjwC,KAAK62C,mBACzBD,EAAiB3G,EAAkB6G,oBACnCg9H,EAAwB9zK,KAAK+zK,sBAAsBvmK,QACnDqvE,EAAe78E,KAAKugF,UAAU1D,eAC9By2F,EAAmBR,GAAyB9yK,MAC5CqrD,EAA0BioH,GAAoBtzK,KAAKuiC,OAAO,6BAA+BviC,KAAKuiC,OAAO,mBAIrGj2B,EAAatM,KAAKuiC,OAAO,cACzBgxI,EAAmBvzK,KAAKkzK,oBAE5B,SAASjxF,EAAez0E,GACpB,OAAO2rC,EAAAA,EAAAA,IAAS3rC,IAAU,MAAQA,EAAMuc,OAAO,GAGnD,SAAS+rJ,EAAe3nK,EAAQnH,EAAa61E,EAAcxxB,GACvD,GAAIl9C,EAAQ,CACR,IAAI4nK,EAAiB5nK,EAAOX,MACxBuoK,IACA1qH,EAA0B42B,EAAe8zF,IAEzC1qH,GACApb,EAAkByQ,aAAavyC,EAAOic,MAAO,eAAgBpjB,GAC7DipC,EAAkByQ,aAAavyC,EAAOic,MAAO,SAAUpjB,EAAc61E,EAAe,KAAKh9B,QAAQ,GAAK,OAEtG5P,EAAkByQ,aAAavyC,EAAOic,MAAO,eAAgB,MAC7D6lB,EAAkByQ,aAAavyC,EAAOic,MAAO,QAASpjB,KAIlE8qK,EAASpB,EAAOmF,EAAab,WACxB1B,GAAoBC,IAAqBjnK,IAC1CwlK,GAAUA,GAEd6D,EAAYE,EAAaZ,mBAAqBnD,EAC9C,IAAI3jK,EAASyoC,EAAei/H,EAAavB,oBASzC,GARA3hK,EAAWxE,GAAUA,EAAOwE,UAAYmhK,EACxC8B,EAAaD,GAAahjK,EACtB2gK,IACAoC,EAAgBG,EAAaX,gBAAkBpD,EAC/C2B,EAAa78H,EAAei/H,EAAahB,iBACzCliK,EAAW8gK,GAAcA,EAAW9gK,UAAYmhK,EAChD8B,EAAaA,GAAcF,GAAiB/iK,GAE5CijK,EAAY,CAmBZ,GAlBA3lI,EAAkB9G,cAClBwsI,EAAYljJ,KAAKC,MAAMijJ,GACvB94F,EAAe,SAASA,EAAcjmC,GAClC,IAAIo/H,EAAsBp/H,EAAeqtB,OAAM91D,GAAUA,EAAOX,QAChE,GAAIwoK,EAAqB,CACrB,IAAIC,EAAer/H,EAAeoS,QAAO,CAACjiC,EAAK5Y,KACvC8zE,EAAe9zE,EAAOX,SACtBuZ,GAAO2lB,WAAWv+B,EAAOX,QAEtBuZ,IACR,GACCkvJ,EAAe,MACfp5F,EAAeA,EAAeo5F,EAAe,KAGrD,OAAOp5F,EAbI,CAcbA,EAAcjmC,GAChBk/H,EAAe3nK,EAAQwnK,EAAW94F,EAAcxxB,GAC5CioH,EACAoC,EAAgBjjJ,KAAKC,MAAMgjJ,GAC3BI,EAAerC,EAAYiC,EAAe74F,EAAcxxB,OACrD,CACH,IAAI4xB,EAAej9E,KAAKsgF,mBAAmBlhC,kBAC3C69B,EAAa44F,EAAavB,oBAAsBqB,EAChD,IAAIO,EAAYj5F,EAAaj0B,QAAO,CAACu5B,EAAY/0E,IAAU+0E,EAAa/0E,GAAO,GAAKxN,KAAKugF,UAAU1D,eACnG,IAAKq5F,EAAW,CACZ,IAAI/uI,EAAkB+H,EAAAA,4BAA0C0H,GAC5DzP,GAAmB,GACnB8I,EAAkByQ,aAAa9J,EAAezP,GAAiB/c,MAAO,eAAgB,QAG9F,IAAK,IAAIyN,EAAI,EAAGA,EAAIolD,EAAar1D,OAAQiQ,IACjC+e,EAAe/e,IAAM+e,EAAe/e,KAAO1pB,QAAU,IAAWyoC,EAAe/e,GAAGrqB,OAClFyiC,EAAkByQ,aAAa9J,EAAe/e,GAAGzN,MAAO,QAAS6yD,EAAaplD,IAK1F,GADAoY,EAAkB7G,aACbkqI,EAAkB,CACnBtzK,KAAK8lC,UAAUohD,mBACf,IAAI1Q,EAAax2E,KAAK8lC,UAAU6xC,gBAChC,GAAInB,GAAc+8F,EAAkB,CAChC,IAAIx0J,GAAOyiC,EAAAA,EAAAA,IAASg1B,EAAWtvB,aAAc1F,EAAAA,EAAAA,IAASg1B,EAAWl9D,aAAetZ,KAAKm4E,aACrF3B,EAAWl8B,SAAS,CAChBv7B,KAAMA,MAKtB,OAAO62J,GAEX7G,qBAAsB,SAAS5wE,EAAUiiC,GACrCjiC,EAAShgD,IAAIiiF,GACbpgI,KAAKm2K,uBAAuB9tJ,KAAK,CAC7B81E,SAAUA,EACViiC,QAASA,KAGjBg2C,0BAA2B,WACvB,IAAK,IAAIv+I,EAAI,EAAGA,EAAI73B,KAAKm2K,uBAAuBvuJ,OAAQiQ,IAAK,CACzD,IAAIw+I,EAAYr2K,KAAKm2K,uBAAuBt+I,GAC5Cw+I,EAAUl4E,SAAS77D,OAAO+zI,EAAUj2C,SAExCpgI,KAAKm2K,uBAAyB,IAElCG,cAAe,WACXt2K,KAAKq1K,yBACLr1K,KAAKo2K,6BAET1pF,MAAO,WACH,IAAI9kD,EAAO5nC,KACPu2K,EAAiC,WAC5B3uI,EAAKusI,aACNvsI,EAAK4qI,gBAAgB,OAGzBgE,EAAuC,SAASxzJ,GAC5C4kB,EAAKyS,cAAgBr3B,EAAOjE,OAC5B6oB,EAAKyS,YAAcr3B,EAAOjE,KAC1B6oB,EAAK4qI,gBAAgB,QAG7B5qI,EAAKmsI,sBAAwBnsI,EAAK7B,QAAQ,wBAC1C6B,EAAK04C,mBAAqB14C,EAAK7B,QAAQ,qBACvC6B,EAAK8sI,aAAe9sI,EAAK7B,QAAQ,eACjC6B,EAAK24C,UAAY34C,EAAK7B,QAAQ,YAC9B6B,EAAKiP,mBAAqBjP,EAAKyC,cAAc,WAC7CzC,EAAKknI,yBAA2BlnI,EAAKyC,cAAc,iBACnDzC,EAAKwrI,kBAAoBxrI,EAAK9B,UAAUpF,WACxCkH,EAAKssI,oBAAsBtsI,EAAK9B,UAAUC,QAAQ,sBAClD6B,EAAKmnI,qBAAqBnnI,EAAK04C,mBAAmBj0C,gBAAiBkqI,GACnE3uI,EAAKmnI,qBAAqBnnI,EAAK04C,mBAAmBh0C,gBAAiBiqI,GACnE3uI,EAAKmnI,qBAAqBnnI,EAAKmsI,sBAAsB1nI,iBAAkB,WACnEzE,EAAKytI,yBACLztI,EAAK6tI,wBAET7tI,EAAKmnI,qBAAqBnnI,EAAK24C,UAAUl0C,iBAAkB,WACvDzE,EAAK24C,UAAU5hC,cAAcrc,OAAOk0I,GACpC5uI,EAAK24C,UAAU5hC,cAAcR,IAAIq4H,MAErC,IAAIC,EAA8B,IAAM7uI,EAAK24C,UAAU3E,oBACnD86F,EAAsB,EAC1B9uI,EAAKmnI,qBAAqBnnI,EAAKyC,cAAc,iBAAiB82F,iBAAkB,SAAS76F,GACrF,GAAIsB,EAAKusI,cAAgBvsI,EAAK24C,UAAUpzC,WAAY,CAChD,IAAIwpI,EAAsB,IAAM/uI,EAAK24C,UAAU3E,oBAC3C66F,IAAgCE,GAAuBD,GAAuBA,IAAwBpwI,EAAE59B,QACxG+tK,EAA8BE,EAC9BD,EAAsBpwI,EAAE59B,OACxBk/B,EAAK9B,UAAUohD,oBAEft/C,EAAK24C,UAAU5F,2BAGvB+7F,EAAsBpwI,EAAE59B,WAGhCkhC,cAAe,SAASnV,GACpBz0B,KAAKs6B,SAAS7F,GACV,wBAA0BA,EAAKnlB,OAC3BmlB,EAAKn0B,OACLN,KAAK0sF,QACL1sF,KAAKy1K,sBAELz1K,KAAKs2K,kBAIjBnpI,WAAY,WACR,OAAOntC,KAAKm0K,aAEhBlrI,KAAM,WACFjpC,KAAKm2K,uBAAyB,GAC1BzlK,GAAc1Q,OACdA,KAAK0sF,SAGb8lF,gBAAiB,SAASlyK,GACtB,QAAI,IAAWA,EAMX,OAHKN,KAAKo1K,kBACNp1K,KAAKyyK,2BAEFzyK,KAAKo1K,iBALZp1K,KAAKo1K,iBAAmB90K,GAQhCsqC,QAAS,WACL5qC,KAAKs2K,gBACLt2K,KAAKs6B,cAGTs8I,GAA8BppI,GAAAA,eAAAA,QAA+B,CAC7DyP,OAAQ,SAAS/9B,GACb,IAAI8L,EAAS,GACT0V,EAAW1gC,KAAKsgF,mBAAmBn/C,UACnCne,EAAS0d,GAAYA,EAAS1d,SAC9BsrH,EAAYtrH,GAAUA,EAAO9D,KAAO,EACpC23J,GAAgBpmJ,EAAAA,EAAAA,IAAUvR,GAAOuT,KAAKo/I,IAAI3yJ,EAAMovH,GAAa,EAC7DwoC,EAAuB92K,KAAKsgF,mBAAqBtgF,KAAKsgF,mBAAmBz9C,YAAc,EACvFk0I,EAAiB/2K,KAAKugF,UAAU3E,mBAAkB,GAClD3B,EAAaj6E,KAAKugF,UAAYvgF,KAAKugF,UAAU73E,SAAWquK,EAAiB,EACzEC,EAA2Bh3K,KAAK8lC,UAAUuE,cAAc,kBACxD4sI,EAAqBj3K,KAAK8lC,UAAUC,QAAQ,sBAChD/a,EAAOtiB,OAASouK,EAChB,IAAII,GAAuB,IAAUF,EAAyB7pI,cAAgB8pI,EAAmBhH,aAC7FiH,IACAlsJ,EAAOtiB,QAAUuxE,EAAa48F,GAE9B,OAAS33J,GAAOwhB,GAAYA,EAAS9Y,SACrCoD,EAAO9L,IAAMwhB,EAAS,GAAG4tG,UAAYuoC,GAEzC72K,KAAKmhI,gBAAgBl0F,KAAKjiB,IAE9Bie,KAAM,WACF,IAAIrB,EAAO5nC,KACX4nC,EAAKtN,WACLsN,EAAK04C,mBAAqBtgF,KAAK+lC,QAAQ,qBACvC6B,EAAK24C,UAAYvgF,KAAK+lC,QAAQ,YAC9B6B,EAAKuvI,WAAan3K,KAAK+lC,QAAQ,aAC/B6B,EAAK24C,UAAUj0C,gBAAgB6R,KAAK,WAChC,GAAIvW,EAAKrF,OAAO,uBAAwB,CACpC,IAAI60I,EAAcxvI,EAAKyC,cAAc,kBAAkBq3G,aACvD95G,EAAKqV,OAAOm6H,EAAcA,EAAYjoK,EAAI,WAItD8hB,KAAM,SAAS6U,GACX9lC,KAAKs6B,SAASwL,GACd9lC,KAAKmhI,iBAAkBn4F,EAAAA,EAAAA,iBAG3BquI,GAA+B7pI,GAAAA,eAAAA,QAA+B,CAC9DilI,yBAA0B,SAASnxJ,GAC/B,IAAIsmB,EAAO5nC,KACX,OAAOkvC,EAAAA,mBAAiC5tB,EAAQ6nC,gBAAiB,SAAS/jB,GACtE,OAAOwC,EAAKyrI,cAAcjuI,EAAO9jB,EAAQxa,QAASwa,EAAQ8wJ,oBAAoBnxH,UAAW3/B,EAAQ83C,gBACjG93C,EAAQ+wJ,sBAAuB/wJ,EAAQyjB,mBAE/CsuI,cAAe,SAASjuI,EAAOt+B,EAASsa,EAAUg4C,GAC9C,IAAIM,EAAe5yD,EAAQs+B,EAAM5F,aAC7Bu3B,EAAajwD,EAAQs+B,EAAM5F,YAAc,GAC7C,OAAQpe,GACJ,IAAK,gBACD,OAAO,EACX,IAAK,UACD,OAAOg4C,IAAiBA,EAAa3oD,mBAAqBipD,IAAiBA,EAAajpD,oBAAsBsmD,IAAeA,EAAWtmD,iBAC5I,QACI,OAAO,IAAM3J,EAAQ8gB,SAGjC6tJ,mBAAoB,SAAS6B,EAAgB7tH,GACzC,IAAI7hB,EAAO5nC,MACXoxB,EAAAA,EAAAA,IAAKq4B,GAAiB,SAASz1B,EAAG81B,GAC9B,GAAIA,EAmCA,IAlCA,IAAIhjD,EACAqhD,EAAW2B,EAAc/B,YAAc+B,EAAc/B,cAAgB,EACrEwvH,EAAoBztH,EAAc7I,UAClCu2H,EAAoB,SAASptJ,EAAOo8H,GACpC,GAAKA,EAAL,CAGA,IAAIjD,GAAiB1hH,EAAAA,EAAAA,GAAE2kH,GACnBr4I,EAASrH,EAAQsjB,GACjB0/B,EAAcP,cAAcp7C,EAAQopK,EAAmB9tH,KACvD85F,EAAezhH,SAAS8F,EAAKvG,gBAAgB6sI,KAC7CtnI,EAAAA,EAAAA,GAAgB28G,GAAgBxuE,EAAAA,GAAAA,IAAa0iG,GAAAA,GAAgBrqE,IAAmBxlE,EAAKiC,cAAc,SAASpV,GACxG,IAAI6R,EAAI7R,EAAKgW,MACTgnI,GAAYC,EAAAA,GAAAA,IAAaprI,GAC7BgxI,EAAexG,WAAW,CACtBgB,OAAQL,EAAUviK,GAAI2yB,EAAAA,EAAAA,GAAEyE,EAAE4M,eAAelwB,SAASjE,KAClDizJ,OAAQP,EAAUtiK,GAAI0yB,EAAAA,EAAAA,GAAEyE,EAAE4M,eAAelwB,SAAS9D,IAClDk6C,aAAcjrD,EACdic,MAAOjc,EAAOic,MACdoV,YAAapV,EACbo8H,cAAejD,EACf/5F,eAAgB+tH,EAChB9tH,eAAgBA,EAChBlW,SAAU3L,EAAKiP,mBAAmBrD,YAAYrlC,EAAOic,OAAO,SAGpEwc,EAAAA,EAAAA,GAAgB28G,GAAgBxuE,EAAAA,GAAAA,IAAa2iG,GAAAA,GAAetqE,IAAmB,CAC3ExlE,KAAM0vI,GACP1vI,EAAKiC,aAAaytI,EAAe9F,aACpC5qI,EAAAA,EAAAA,GAAgB28G,GAAgBxuE,EAAAA,GAAAA,IAAa4iG,GAAAA,GAAcvqE,IAAmB,CAC1ExlE,KAAM0vI,GACP1vI,EAAKiC,aAAaytI,EAAe1E,gBAGnC/6I,EAAI,EAAGA,EAAIswB,EAAUtwB,IAAK,CAC/B,IAAIsxB,EAAiBW,EAAc1Y,kBAAkBvZ,IAAM,GACvDsxB,EAAevhC,SACf9gB,EAAUgjD,EAAc5Y,WAAWrZ,IAAM,IACzCzG,EAAAA,EAAAA,IAAK+3B,EAAgBquH,SAMzCnC,uBAAwB,SAASiC,EAAgB7tH,GAC7C,IAAI7hB,EAAO5nC,MACXoxB,EAAAA,EAAAA,IAAKq4B,GAAiB,SAASz1B,EAAG81B,GAC9B,GAAIA,EAAe,CACf,IAAIX,EAAiBW,EAAc1Y,qBAAuB,IAC1DhgB,EAAAA,EAAAA,IAAK+3B,GAAiB,SAAS/+B,EAAOo8H,GAClC,IAAIjD,GAAiB1hH,EAAAA,EAAAA,GAAE2kH,GACvB5/G,EAAAA,EAAAA,IAAiB28G,GAAgBxuE,EAAAA,GAAAA,IAAa0iG,GAAAA,GAAgBrqE,KAC9DxmE,EAAAA,EAAAA,IAAiB28G,GAAgBxuE,EAAAA,GAAAA,IAAa2iG,GAAAA,GAAetqE,KAC7DxmE,EAAAA,EAAAA,IAAiB28G,GAAgBxuE,EAAAA,GAAAA,IAAa4iG,GAAAA,GAAcvqE,KAC5Dm2C,EAAevhH,YAAY4F,EAAKvG,gBAAgB6sI,aAKhE0J,cAAe,SAASz+G,GACpB,MAAO,YAAcA,EAAiBn5D,KAAK+zK,sBAAwB/zK,KAAK63K,qBAE5EC,eAAgB,SAAShpK,GACrB,IAAIipK,EAAiB/3K,KAAK63K,oBACtBG,EAAmBh4K,KAAK+zK,sBAC5B/zK,KAAKi4K,sBAAwB,KAC7BF,GAAkBA,EAAevpK,OACjC,UAAYM,GAAQkpK,GAAoBA,EAAiBxpK,QAE7Dy6B,KAAM,WACF,IAAIrB,EAAO5nC,KACX4nC,EAAKtN,WACLsN,EAAKiP,mBAAqBjP,EAAKyC,cAAc,WAC7CzC,EAAK04C,mBAAqB14C,EAAK7B,QAAQ,qBACvC6B,EAAKmsI,sBAAwBnsI,EAAK7B,QAAQ,wBAC1C6B,EAAKssI,oBAAsBtsI,EAAK7B,QAAQ,sBACxC6B,EAAK24C,UAAY34C,EAAK7B,QAAQ,YAC9B6B,EAAKiwI,oBAAsBjwI,EAAK7B,QAAQ,sBACxC6B,EAAKswI,iBAAmBtwI,EAAK7B,QAAQ,eACrC6B,EAAKuwI,mBAAqBvwI,EAAK7B,QAAQ,qBACvC,IAAIyxI,EAAoB,WACpB,GAAI5vI,EAAKssI,oBAAqB,CAC1B,IAAIzqH,EAAiB,CAAC7hB,EAAKuwI,mBAAoBvwI,EAAK04C,mBAAoB14C,EAAKswI,kBAC7EtwI,EAAKytI,uBAAuBztI,EAAKssI,oBAAqBzqH,GACtD7hB,EAAK6tI,mBAAmB7tI,EAAKssI,oBAAqBzqH,KAG1D7hB,EAAK04C,mBAAmBj0C,gBAAgB8R,IAAIq5H,GAC5C5vI,EAAKswI,kBAAoBtwI,EAAKswI,iBAAiB7rI,gBAAgB8R,IAAIq5H,GACnE5vI,EAAKuwI,oBAAsBvwI,EAAKuwI,mBAAmB9rI,gBAAgB8R,IAAIq5H,IAE3EY,UAAW,SAAS3oI,GAChB,OAAOzvC,KAAK62C,mBAAmBmiB,gBAAgBvpB,EAAWwhI,kBAAmBxhI,EAAW8gI,kBAAmB9gI,EAAW+Z,eAAgB/Z,EAAW0pB,iBAErJk4G,KAAM,SAAS5hI,GACX,IAAIuhI,EAAcvhI,EAAWuhI,YACzBxnH,EAAiB/Z,EAAW+Z,eAC5B0nH,EAAsBzhI,EAAWyhI,oBACjCmH,EAAcr4K,KAAKsgF,mBACnBz6C,EAAW7lC,KAAKugF,UAChB2wF,IACAA,EAAoB/rI,IAAI,CACpBnmB,QAAS0vJ,KAET,YAAcllH,IACd6uH,GAAeA,EAAYhuH,eAAe2mH,EAAatC,IACvD7oI,GAAYA,EAASwkB,eAAe2mH,EAAatC,OAI7DiE,KAAM,SAASljI,GACX,IAAI7H,EAAO5nC,KACPuwK,GAAoBpgJ,EAAAA,EAAAA,IAASsf,EAAW8gI,mBAAqB9gI,EAAW8gI,kBAAkB/wI,YAAciQ,EAAW8gI,kBACnH/mH,EAAiB/Z,EAAW+Z,eAC5B2P,EAAiB1pB,EAAW0pB,eAC5Bm/G,EAAY1wI,EAAKgwI,cAAcz+G,GAC/Bo/G,EAAwBhI,GAAqB,EACjD3oI,EAAK04C,mBAAmBn/C,UAAUI,KAAK,IAAM6jB,IAAkBpY,YAAYpF,EAAKvG,gBAAgB+sI,IAA+B,YAAc5kH,GAAkB,YAAc2P,IAAmBo/G,GAC5LD,IACI1wI,EAAKwwI,UAAU3oI,IAAe8oI,EAC1B,UAAYp/G,GAAkB,kBAAoBA,EAChD,WACMvxB,EAAKqwI,wBAA0B1H,IAC/B3oI,EAAKkwI,iBACLQ,EAAUn3I,UAAUsO,EAAWghI,OAAS,cAAgB,gBAAgBhhI,EAAW+gI,qBACnF5oI,EAAKqwI,sBAAwB1H,EAC7B+H,EAAU7pK,KAAK0qD,IALrB,IASFvxB,EAAKkwI,eAAe,SACpBlwI,EAAKyC,cAAc,iBAAiB4S,OAAOxN,EAAWkhI,MACtD2H,EAAU/I,QAAQ9/H,EAAWihI,KAAO4H,EAAU9qK,SAC9C8qK,EAAU7pK,QAGdm5B,EAAKkwI,mBAIjBjF,KAAM,SAASpjI,GACX,IAAIyhI,EAAsBzhI,EAAWyhI,oBASrC,GARIA,IACAA,EAAoB/rI,IAAI,CACpBnmB,QAAS,KAEbhf,KAAKsgF,mBAAmBj2B,eAAe5a,EAAWuhI,YAAa,IAC/DhxK,KAAKugF,UAAUl2B,eAAe5a,EAAWuhI,YAAa,IACtDhxK,KAAKsgF,mBAAmBn/C,UAAUI,KAAK,IAAM6jB,IAAkBpjB,YAAYhiC,KAAKqhC,gBAAgB+sI,MAEhGpuK,KAAKo4K,UAAU3oI,GAAa,CAC5B,IAAI6oI,EAAYt4K,KAAK43K,cAAcnoI,EAAW0pB,gBAC1Cm/G,GACAA,EAAU9pK,OAEdxO,KAAK62C,mBAAmBwiB,WAAW5pB,EAAWwhI,kBAAmBxhI,EAAW8gI,kBAAmB9gI,EAAW+Z,eAAgB/Z,EAAW0pB,kBAG7IvuB,QAAS,WACD5qC,KAAKk0K,qBACLl0K,KAAKq1K,uBAAuBr1K,KAAKk0K,oBAAqB,CAACl0K,KAAKm4K,mBAAoBn4K,KAAKsgF,mBAAoBtgF,KAAKk4K,sBAI/GM,GAAkC,CACzCtqI,MAAO,CACHuqI,qBAAsBrJ,GACtBsJ,mBAAoB/I,GACpBsH,mBAAoBlH,GACpB4I,YAAahK,IAEjB3gI,YAAa,CACTspI,eAAgBD,GAChBuB,cAAehC,GACfp1B,eAAgBuxB,IAEpB3kI,UAAW,CACPF,MAAO,CACHrI,SAAU,CACN+zC,qBAAsB,SAAS2B,GAC3B,IAAI9tE,EAAkBzN,KAAKuiC,OAAO,mBAC9By0I,EAA2Bh3K,KAAKqqC,cAAc,kBAC9C8C,EAAa6pI,EAAyB7pI,aAC1C,OAAOntC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAAckwD,EAAY,GAAK9tE,GAAmB0/B,KAI/Fa,YAAa,CACTo6C,cAAe,CACX2mB,mBAAoB,WAChB,IAAI/uG,KAAKqqC,cAAc,kBAAkB8C,aAGzC,OAAOntC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,gBCvmCrBmtJ,GAAgCtqI,MAAM+oI,mBAC5BuB,GAAgCxqI,YAAYspI,eACpDkB,GAAgCtqI,MAAMuqI,qBAC/BD,GAAgCxqI,YAAY4qI,cAC3CJ,GAAgCxqI,YAAYwzG,eAC7Dg3B,GAAgCtqI,MAAMyqI,YAC/DnuH,GAAAA,eAAwB,4BAA6BguH,I,eC6BjD3iG,GAAkB,WAClB67B,GAAkB,YAClBmnE,GAAqB,eACrB9mI,GAAY,SACZgkC,GAAiB,cACjB/jC,GAAkB,eAClBoT,GAAmB,gBACnBqiE,GAAuB,iBACvB3e,GAA0B,uBAC1BgwE,GAAsB,mBACtB70C,GAAoB,iBACpBp7B,GAA2B,wBAC3BrY,GAAoB,iBACpBm8B,GAAgC,4BAChC7hE,GAAuB,oBACvB8lC,GAAuB,oBACvB0iB,GAAqB,kBACrBylE,GAAwB,sBACxBtzH,GAA4B,yBAC5BuzH,GAAsB,YACtBt3H,GAAoB,mBACpB4sH,GAAe,YACf3+C,GAAsB,mBACtBspD,GAA0B,SAC1BC,GAAgC,oFAChCC,GAAkC,GAAGrxJ,OAAOoxJ,GAA+B,6BAC3E7mE,GAAgB,MAChBE,GAAiB,OACjBH,GAAkB,QAClBE,GAAiB,OACjB8mE,GAAiB,MACjBC,GAAkB,OAClBC,GAAsB,oBAE1B,SAAS7iI,GAAWH,GAChB,OAAOA,GAAQA,EAAK1G,SAASoC,IAGjC,SAASw6E,GAAYl2E,GACjB,OAAOA,GAAQA,EAAK1G,SAASk5D,IAGjC,SAASvyD,GAAUD,GACf,OAAOA,IAASG,GAAWH,KAAUk2E,GAAYl2E,GAGrD,SAASijI,GAAgBjjI,GACrB,OAAQA,GAAQA,EAAK1G,SAASkpI,KAAwBxiI,EAAK1G,SAASq0F,IAGxE,SAASu1C,GAAc94I,GACnB,OAAOA,EAAS9Y,QAAU,OAAS8Y,EAAS,GAAGoV,QAGnD,SAAS8+D,GAAahtE,EAAM8I,GACxB,OAAQ9I,EAAK6xI,kBAAoB/oI,IAAUA,EAAMd,SAASghD,KAAyBlgD,EAAMd,SAAS4gD,IAGtG,SAASkpF,GAAiBh5I,GACtB,OAAOjQ,EAAAA,EAAAA,IAAUiQ,IAAaA,EAAS9Y,OAAS,EAGpD,SAAS+xJ,KACL,MAAO,YAAc//E,GAAAA,EAAAA,UAAkBnN,WAG3C,SAASmtF,GAAkBlpI,GACvB,QAASA,EAAMhJ,OAAO,IAAI5f,OAAOs9B,KAAmBx9B,OAGxD,SAASiyJ,GAAiCjyI,EAAMz5B,GAC5C,IAAI7B,EAAas7B,EAAKrF,OAAO,cACzBvZ,GAAS,EAMb,OAJIA,EADA1c,IACW,UAAY6B,EAAO8D,gBAAiBwe,EAAAA,EAAAA,IAAUtiB,EAAOk5B,YAAa5W,EAAAA,EAAAA,IAAUtiB,EAAO8D,oBAElFwe,EAAAA,EAAAA,IAAUtiB,EAAO8D,gBAAkB,SAAW9D,EAAO8D,eAE9D+W,EAGX,SAAS8wJ,GAAoBlyI,GACzB,IAAIid,EAAqBjd,EAAKyC,cAAc,sBAC5C,QAAOwa,EAAmBk1H,uBAAwBnyI,EAAKrF,OAAO,qBAAuBsiB,EAAmBrR,cAE5G,IAAIwmI,GAA+Bj4B,GAAAA,eAAAA,QAA4B,CAC3D94G,KAAM,WACFjpC,KAAK0hC,gBAAkB1hC,KAAKqqC,cAAc,QAC1CrqC,KAAKi6K,qBAAuBj6K,KAAKqqC,cAAc,aAC/CrqC,KAAK8lH,mBAAqB9lH,KAAKqqC,cAAc,WAC7CrqC,KAAKmhJ,aAAenhJ,KAAK+lC,QAAQ,eACjC/lC,KAAK62C,mBAAqB72C,KAAKqqC,cAAc,WAC7CrqC,KAAK6nJ,eAAiB7nJ,KAAKqqC,cAAc,iBACrCrqC,KAAK8kD,sBACLC,KACA/kD,KAAKk6K,oBAAsB,KAC3Bl6K,KAAKm6K,qBAAsB,EAC3Bn6K,KAAKo6K,qBAAuB,GAC5Bp6K,KAAKq6K,sBAAwB,KAC7Br6K,KAAK6nJ,eAAe74C,QAAQ7wD,KAAIzd,IAC5B1gC,KAAKs6K,mBACDt6K,KAAKu6K,eACD75I,EAASiG,GAAG,aAAe3mC,KAAKw6K,cAAgBx6K,KAAKw6K,aAAa7iG,gBAClE33E,KAAKw6K,aAAa/7F,iBAAiB/9C,GACnC1gC,KAAKu6K,eAAgB,MAIjCv6K,KAAKy6K,oBACLz6K,KAAK06K,wBACL16K,KAAK6pC,aAAa,eAG1B4wI,kBAAmB,WACf,IAAI50I,EAAW7lC,KAAK+lC,QAAQ,YACxB40I,EAAuBlwI,IACvB,IAAI/J,GAAWmB,EAAAA,EAAAA,GAAE4I,EAAM5N,QACnB+9I,GAA4B/4I,EAAAA,EAAAA,GAAE4I,EAAM+vG,eAAezzG,QAAQlB,EAAS1E,WAAWvZ,OAC/EizJ,EAAkBn6I,EAASkP,SAAS,WACxC,GAAIirI,IAAoBD,GAA6B56K,KAAK86K,sBAAsBrwI,GAAQ,CACpF,IAAIswI,EAAe/6K,KAAKg7K,kBACxBD,EAAgBrB,GAAiBqB,GAAyEA,EAAzDl1I,EAASia,gBAAgB,GAAGl8B,OAAO,cAAcshB,GAAG,GAChGxE,EAASqG,QAAQg0I,GAAcnzJ,SAChC6iB,EAAM4L,iBACNzP,EAAAA,EAAAA,QAAqBm0I,EAAc,YAI/Cl1I,EAASwG,gBAAgB8R,KAAI7X,IACzB,IAAI20I,EAAYp1I,EAAS1E,UACrBwtC,GAAgBroC,GAAK,YAAcA,EAAEmU,WACrCygI,EAAuBl7K,KAAKw6K,cAAgBx6K,KAAKw6K,aAAalrK,OAASu2B,EAASv2B,KAChF6rK,GAAkB,EAClBjlI,EAAW5P,IAAM,WAAaA,EAAEmU,YAAc,YAAcnU,EAAEmU,YAC9D80D,GAAkB1tE,EAAAA,EAAAA,GAAE,UACpBu5I,GAA2B7rE,EAAgB3nF,QAAU2nF,EAAgBxoE,QAAQk0I,GAAWrzJ,OAC5Fgf,EAAAA,EAAAA,IAAiBq0I,EAAW,UAAWN,GACvC/zI,EAAAA,EAAAA,GAAgBq0I,EAAW,UAAWN,GACtC36K,KAAKq7K,2BACLr7K,KAAKs7K,sBACLt7K,KAAKu7K,yBACDL,GAAwBE,IACxBD,EAAkBn7K,KAAKw7K,cAAgBtlI,EAAWl2C,KAAKy7K,gBAAkB9sG,EACzEwsG,GAAmBn7K,KAAKmuG,cAAa,QAIjDusE,sBAAuB,WACnB,IAAI3/F,EAAWxlC,GAAAA,WAAAA,cACfv1C,KAAK04J,sBAAwB14J,KAAK6pC,cAAavD,IAC3C,IAAI2D,GAAUpI,EAAAA,EAAAA,GAAEyE,EAAEmE,MAAM5N,QACpB6+I,EAAyB17K,KAAK86K,sBAAsBx0I,EAAEmE,QAAUR,EAAQlD,QAAQ,IAAIjf,OAAO9nB,KAAKqhC,gBAAgBw0C,MAAmBjuD,OACnI+zJ,EAAkB1xI,EAAQlD,QAAQ,IAAIjf,OAAO6kG,KAAgC/kG,OAC7EovJ,EAA2Bh3K,KAAKqqC,cAAc,kBAC9CuxI,IAAqB5E,GAA4BA,EAAyB7pI,aAC9E,IAAKuuI,IAA2BC,IAAoBC,EAAkB,CAClE,IAAIC,IAA0B77K,KAAKw6K,cAAevwI,EAAQw0B,UAAU76C,OAAO5jB,KAAKw6K,aAAar5I,WAAWvZ,OAAS,GAChHi0J,GAA2B77K,KAAK87K,mBAAkB,GACnD97K,KAAK+7K,wBAGbn1I,EAAAA,EAAAA,GAAgBm0C,GAAUhG,EAAAA,GAAAA,IAAa1hC,GAAAA,EAAAA,KAAoB,gCAAiCrzC,KAAK04J,wBAErG6iB,uBAAwB,WACpB,IAAIN,EAAYj7K,KAAKg8K,sBACjBC,GAAej8K,KAAK0hC,gBAAgBwvC,iBAAiBtpD,OACrDq0J,GACAj8K,KAAKk8K,wBAAwBjB,IAGrCI,yBAA0B,WACtB,IAAIc,EAAoBxC,KAAkCxmI,GAAAA,EAArBE,GAAAA,EAAAA,KACjC+oI,EAAgB,IAAIt0J,OAAOiqB,GAAW,YAAYjqB,OAAOiqB,IACzDkpI,EAAYj7K,KAAKg8K,uBAChBvrJ,EAAAA,EAAAA,IAAUzwB,KAAKq8K,uBAChBr8K,KAAKq8K,oBAAsBr8K,KAAK6pC,aAAa7pC,KAAKs8K,uBAEtD11I,EAAAA,EAAAA,IAAiBq0I,GAAWlmG,EAAAA,GAAAA,IAAaonG,EAAkB,gCAAiCn8K,KAAKq8K,qBACjGz1I,EAAAA,EAAAA,GAAgBq0I,GAAWlmG,EAAAA,GAAAA,IAAaonG,EAAkB,gCAAiCC,EAAep8K,KAAKq8K,sBAEnHf,oBAAqB,WACjB,IAAIL,EAAYj7K,KAAKg8K,sBACrBO,GAAAA,GAAAA,IAAav8K,KAAKw8K,kBAClBx8K,KAAKw8K,iBAAmBD,GAAAA,GAAAA,GAAYtB,EAAW,MAAM30I,GAAKtmC,KAAKy8K,gBAAgBn2I,MAEnFsE,QAAS,WACL5qC,KAAKs6B,WACLt6B,KAAK+7K,oBACLQ,GAAAA,GAAAA,IAAav8K,KAAKw8K,kBAClB51I,EAAAA,EAAAA,IAAiB2O,GAAAA,WAAAA,eAA0Bw/B,EAAAA,GAAAA,IAAa1hC,GAAAA,EAAAA,KAAoB,gCAAiCrzC,KAAK04J,uBAClHzlH,aAAajzC,KAAKk6K,qBAClBn1H,MAEJnb,cAAe,SAASnV,GACpB,OAAQA,EAAKnlB,MACT,IAAK,qBACL,IAAK,8BACDmlB,EAAKqV,SAAU,EACf,MACJ,QACI9pC,KAAKs6B,SAAS7F,KAG1BioJ,eAAgB,WACZ,OAAO18K,KAAK28K,YAAcvD,IAE9BwD,gBAAiB,WACb,OAAO58K,KAAK28K,YAActD,IAE9BwD,gBAAiB,WACT78K,KAAKuiC,OAAO,uBACZviC,KAAK28K,UAAYvD,KAGzB0D,iBAAkB,WACd98K,KAAK28K,UAAYtD,IAErBoD,gBAAiB,SAASn2I,GACtB,IAAIy2I,GAAsB,EACtBp6H,EAAY3iD,KAAKg9K,kBAAkB12I,GACnCgoC,EAAYtuE,KAAK8lH,mBAAmBx3C,YACpCzrB,EAAgBvc,EAAEuc,cACtB,IAAIA,EAAco6H,uBAGlBj9K,KAAKw7K,cAAe,EACpBx7K,KAAKu6K,eAAgB,EACrBv6K,KAAKk9K,mCAAmCr6H,EAAchmB,SACjD8lB,GAAW,CACZ,OAAQrc,EAAEnM,SACN,IAAK,YACL,IAAK,aACDn6B,KAAKm9K,sBAAsB72I,EAAGgoC,GAC9B3rB,GAAY,EACZ,MACJ,IAAK,UACL,IAAK,YACGrc,EAAE82I,KACFr4H,GAAyB,WAAY/kD,KAAM6iD,GAE3C7iD,KAAKq9K,mBAAmB/2I,EAAGgoC,GAE/B3rB,GAAY,EACZ,MACJ,IAAK,SACL,IAAK,WACD3iD,KAAKs9K,sBAAsBh3I,GAC3Bqc,GAAY,EACZ,MACJ,IAAK,QACD3iD,KAAKu9K,iBAAiBj3I,EAAGgoC,GACzB3rB,GAAY,EACZ,MACJ,IAAK,KACGyyB,EAAAA,GAAAA,IAAoB9uC,EAAEuc,gBACtB7iD,KAAKw9K,iBAAiBl3I,EAAGgoC,GACzB3rB,GAAY,GAEZA,EAAY3iD,KAAKy9K,kBAAkBn3I,EAAEuc,eAEzC,MACJ,IAAK,MACD7iD,KAAK09K,eAAep3I,EAAGgoC,GACvB3rB,GAAY,EACZ,MACJ,IAAK,QACD3iD,KAAK29K,iBAAiBr3I,EAAGgoC,GACzB3rB,GAAY,EACZ,MACJ,IAAK,SACD3iD,KAAK49K,kBAAkBt3I,EAAGgoC,GAC1B3rB,GAAY,EACZ,MACJ,IAAK,KACGyyB,EAAAA,GAAAA,IAAoB9uC,EAAEuc,gBACtB7iD,KAAK69K,iBAAiBv3I,GACtBqc,GAAY,GAEZA,EAAY3iD,KAAKy9K,kBAAkBn3I,EAAEuc,eAEzC,MACJ,IAAK,KACD7iD,KAAK89K,gBACLn7H,GAAY,EACZ,MACJ,IAAK,MACL,IAAK,YACG3iD,KAAK+9K,0BAA4B/9K,KAAKg+K,0BACtCr7H,EAAY3iD,KAAKy9K,kBAAkB56H,GAAe,IAGzDF,GAAc3iD,KAAKy9K,kBAAkB56H,KACtC7iD,KAAKw7K,cAAe,EACpBx7K,KAAKu6K,eAAgB,EACrBwC,GAAsB,GAEtBA,GACAl6H,EAAcg9B,oBAI1Bm9F,kBAAmB,SAASziC,GACxB,IAAI13F,EAAgB03F,EAAU13F,cAC1BpuB,EAAO,CACPqV,SAAS,EACTW,MAAOoY,GAMX,OAJA7iD,KAAK2qC,cAAc,YAAalW,GAChC8lH,EAAU6iC,KAAOv6H,EAAczM,QAC/BmkG,EAAU0jC,IAAMp7H,EAAcq7H,OAC9B3jC,EAAUzvH,MAAQ+3B,EAAckE,WACvBtyB,EAAKqV,SAElBq0I,eAAgB,WACZnrI,YAAW,KACPhzC,KAAK8lH,mBAAmBY,oBAGhCy2D,sBAAuB,SAAS5iC,EAAWjsE,GACvC,IAAI/6B,EAAWvzC,KAAKo+K,qBAChBC,EAAS9jC,EAAU13F,cACnBvM,EAAOt2C,KAAKw6K,cAAgBx6K,KAAKw6K,aAAal/F,OAAO/nC,GACrD+qI,EAAgBt+K,KAAKu+K,uBAAuBhkC,EAAUpgH,SACtDqkJ,EAA0Bx+K,KAAKg+K,wBAC/BS,IAAkBnwG,GAAakwG,IAA4BjoI,GAAUD,GACzE,GAAImoI,EAAe,CACfz+K,KAAK88K,mBACL0B,GAA2Bx+K,KAAKm+K,iBAC5Bn+K,KAAK0+K,0BACL1+K,KAAK2+K,kCAAkCL,GAE3C,IAAI5tI,EAAQ1wC,KAAK4+K,aAAaN,GAC1B5E,GAAiBhpI,IACjB1wC,KAAK6+K,2BAA2BR,EAAQ3tI,EAAO4tI,GAEnDD,GAAUA,EAAOhoI,mBAGzBgnI,mBAAoB,SAAS9iC,EAAWjsE,GACpC,IAAI/6B,EAAWvzC,KAAKo6K,qBAAqB7mI,SACrCy7B,EAAkBhvE,KAAKo+K,qBACvB9nI,EAAOt2C,KAAKw6K,cAAgBx6K,KAAKw6K,aAAal/F,OAAOtM,GACrDqvG,EAAS9jC,EAAU13F,cACnBi8H,EAAY,YAAcvkC,EAAUpgH,QACpC9yB,EAAarH,KAAK0hC,gBAAgBr6B,aAClCm3K,EAA0Bx+K,KAAKg+K,wBAC/BS,IAAkBnwG,GAAakwG,IAA4BloI,IAASk2E,GAAYl2E,GACpF,GAAImoI,EAAe,CAEf,GADAD,GAA2Bx+K,KAAKm+K,kBAC3Bn+K,KAAK++K,kBAAkBV,EAAQ9jC,EAAUpgH,UACtCn6B,KAAKg/K,uBAAyBF,GAAaz3K,IAAeA,EAAWu6B,YAAa,CAClF,IAAI+kG,GAAYllF,EAAAA,EAAAA,IAAenL,GAC/B/C,EAAWvzC,KAAKo6K,qBAAqB7mI,SAAW,EAChDvzC,KAAKi/K,UAAU,GAAIt4C,EAAWpzF,EAAU8qI,GAGhDA,GAAUA,EAAOhoI,mBAGzBinI,sBAAuB,SAAS/iC,GAC5B,IAAIj4H,EAAYtiB,KAAK0hC,gBAAgBpf,YACjColD,EAAY1nE,KAAK0hC,gBAAgBgmC,YACjCsE,EAAgBhsE,KAAKuiC,OAAO,kBAC5B28I,EAAW,WAAa3kC,EAAUpgH,QAClCglJ,EAAWD,GAAY,EAAI,EAC3B1oG,EAAax2E,KAAK+lC,QAAQ,YAAY4xC,gBACtC3L,IAAkBhsE,KAAK+5K,uBAClBmF,EAAW58J,EAAY,EAAIA,EAAYolD,EAAY,KAAO1nE,KAAK+5K,wBAChE/5K,KAAK0hC,gBAAgBpf,UAAUA,EAAY68J,GAC3C5kC,EAAU13F,cAAcxM,kBAErBmgC,IAAc3zC,EAAAA,EAAAA,IAAU2zC,EAAWl9D,cAAeupB,EAAAA,EAAAA,IAAU2zC,EAAWtvB,cAC9ElnD,KAAKi/K,UAAU,GAAGp8I,EAAAA,EAAAA,IAAU2zC,EAAWl9D,aAAe6lK,GACtD5kC,EAAU13F,cAAcxM,mBAGhCknI,iBAAkB,SAAShjC,EAAWjsE,GAClC,IAAI/6B,EAAWvzC,KAAKo+K,qBAChBn0I,GAAUpI,EAAAA,EAAAA,GAAE04G,EAAU13F,eAAiB03F,EAAU13F,cAAchmB,QACnE,GAAI78B,KAAKuiC,OAAO,cAAgB,SAAWviC,KAAKuiC,OAAO,aAAa/tB,OAAS85D,EAAW,CACpF,IAAI8wG,EAAsB,QAAUp/K,KAAKq/K,gBAAgBp1I,IAAYjqC,KAAK08K,kBAAoBnmI,GAAUtM,GACpGq1I,EAAyBr1I,EAAQ2F,SAASghD,IAC1C0uF,GAA0B,YAAct/K,KAAKuiC,OAAO,iCACpDviC,KAAKi6K,qBAAqB9oF,gCAE1BiuF,GAAuBn1I,EAAQvC,SAASkI,SAASmmC,KAAmB9rC,EAAQ2F,SAAS5vC,KAAKqhC,gBAAgBw0C,QAC1G71E,KAAKi6K,qBAAqB7oF,oBAAoB79C,EAAU,CACpDzoB,MAAOyvH,EAAUzvH,MACjBumE,QAASkpD,EAAU6iC,OAEvB7iC,EAAU13F,cAAcxM,uBAG5Br2C,KAAKy9K,kBAAkBljC,EAAU13F,gBAGzC26H,iBAAkB,SAASjjC,EAAWjsE,GAC7BA,GAAcisE,EAAU0jC,KAAO,aAAej+K,KAAKuiC,OAAO,oBAAqBviC,KAAKuiC,OAAO,8BAC5FviC,KAAKi6K,qBAAqBxkF,YAC1B8kD,EAAU13F,cAAcxM,mBAGhCqnI,eAAgB,SAASnjC,EAAWjsE,GAChC,IAAI6oC,EAAiBn3G,KAAKuiC,OAAO,WAC7B5hB,EAAY45H,EAAUzvH,MAAQ,WAAa,OAC3Cy0J,GAAwB9uJ,EAAAA,EAAAA,IAAUzwB,KAAKo6K,yBAA0B7rF,EAAAA,EAAAA,IAAcvuF,KAAKo6K,sBACpFoF,GAA6BD,IAA0BhlC,EAAUzvH,OAAS9qB,KAAKy/K,iBAAiBz/K,KAAKo6K,uBAAyB7/B,EAAUzvH,OAAS9qB,KAAK0/K,kBAAkB1/K,KAAKo6K,sBAC7KuF,EAAcplC,EAAU13F,cAAchmB,OACtC+iJ,EAAqB5/K,KAAKw6K,cAAgBx6K,KAAKw6K,aAAar5I,UAChE,IAAInhC,KAAK6/K,gCAAgCF,EAAah/J,GAAtD,CAIA,IADAkhB,EAAAA,EAAAA,GAAE+9I,GAAoB99I,SAAS4f,IAC3By1D,GAAkBwoE,IAAgBH,EAOlC,IANI39I,EAAAA,EAAAA,GAAE89I,GAAa/vI,SAAS5vC,KAAKqhC,gBAAgBw0C,MAC7C71E,KAAK87K,oBAEL97K,KAAK0+K,0BACL1+K,KAAK2+K,kCAAkCh+J,GAEvC2tD,GACA,IAAKtuE,KAAK8/K,uBAAuBvlC,EAAW55H,GACxC,YAEG3gB,KAAK+/K,sBAAsBxlC,EAAW55H,KAC7C6+J,GAA4B,GAGhCA,GACAx/K,KAAK6nJ,eAAe35C,YAChBluG,KAAK8lH,mBAAmBx3C,cAAgBtuE,KAAKy5K,mBAC7Cz5K,KAAK87K,mBAAkB,GACvB97K,KAAK+7K,oBACL/7K,KAAKm+K,mBAGT5jC,EAAU13F,cAAcxM,mBAGhC2pI,wBAAyB,WACrB,IAAIxpG,EAAax2E,KAAK8lC,UAAU6xC,gBAC5B9xC,EAAW7lC,KAAK+lC,QAAQ,YACxB/iB,EAASwzD,EAAaA,EAAWt/B,eAAgBsK,EAAAA,EAAAA,IAAS3b,EAAS1E,WAAa,EACpF,OAAOne,GAEXi9J,kBAAmB,SAASzgJ,GACxB,IAAI0gJ,EAAoBlgL,KAAK62C,mBAAmBC,kBAAkB,MAAM,GACpEqpI,EAAyBngL,KAAK62C,mBAAmBC,oBACjD3oC,EAAS+xK,EAAkB1gJ,GAC3BxW,GAAS,EAIb,OAHI7a,IACA6a,EAASm3J,EAAuB91J,QAAQlc,IAAW,GAEhD6a,GAEXo3J,eAAgB,SAAS5gJ,GACrB,IAAI0gJ,EAAoBlgL,KAAK62C,mBAAmBC,kBAAkB,MAAM,GACpE3oC,EAAS+xK,EAAkB1gJ,GAC/B,QAASrxB,KAAYA,EAAO6D,OAEhCquK,iBAAkB,SAAS7gJ,GACvB,IAAI8gJ,EAAmB9gJ,EAAcx/B,KAAK62C,mBAAmBqF,uBACzDtF,EAAiB52C,KAAK62C,mBAAmBC,oBACzC3oC,EAASyoC,EAAe0pI,GAC5B,QAASnyK,GAAU,YAAcA,EAAOk5B,SAE5Cs3I,kCAAmC,SAASh+J,GACxC,IAEIk0J,EAFAr+F,EAAax2E,KAAK8lC,UAAU6xC,gBAC5Bn4C,EAAcx/B,KAAKugL,iBAEnBC,EAA2B,EAC3BC,GAAe,EACnB,OAAQ9/J,GACJ,IAAK,OACL,IAAK,YACD,IAAIguG,EAAe3uH,KAAK0gL,yBACxB7L,EAAkBr1I,EAAc,EAChCghJ,EAA2BxgL,KAAKuiC,OAAO,cAAgBviC,KAAKggL,0BAA4B,EAEpFS,EADA,SAAW9/J,EACIguG,IAAiBkmD,GAAmB70K,KAAKogL,eAAe5gJ,KAAiBx/B,KAAKigL,kBAAkBpL,GAEhGlmD,EAAekmD,GAAmB70K,KAAKogL,eAAe5gJ,KAAiBx/B,KAAKigL,kBAAkBpL,GAEjH,MACJ,IAAK,WACL,IAAK,gBAGD,GAFAA,EAAkBr1I,EAAc,EAChCghJ,EAA2BxgL,KAAKuiC,OAAO,cAAgB,EAAIviC,KAAKggL,0BAC5D,aAAer/J,EAAW,CAC1B,IAAIs7B,EAAoBj8C,KAAK62C,mBAAmBqF,uBAC5CykI,EAAmB9L,EAAkB,GAAK,IAAM54H,EACpDwkI,EAAeE,GAAoB3gL,KAAKogL,eAAe5gJ,KAAiBx/B,KAAKigL,kBAAkBpL,QAE/F4L,EAAe5L,GAAmB,GAAK70K,KAAKogL,eAAe5gJ,KAAiBx/B,KAAKigL,kBAAkBpL,GAG3G4L,EACAjqG,EAAWl8B,SAAS,CAChBv7B,KAAMyhK,KAEH/vJ,EAAAA,EAAAA,IAAUokJ,KAAoBpkJ,EAAAA,EAAAA,IAAU9P,IAAc3gB,KAAKqgL,iBAAiBxL,KACnF2L,EAA2BxgL,KAAK4gL,mCAAmCjgK,GACnE,IAAM6/J,GAA4BhqG,EAAWqqG,SAAS,CAClD9hK,KAAMyhK,EACNthK,IAAK,MAIjB0hK,mCAAoC,SAASjgK,GACzC,IAAImgK,EAAiB,EACjBC,EAAe/gL,KAAKghL,SAAShhL,KAAKo6K,sBAClC6G,EAAmBF,IAAgBx/H,EAAAA,EAAAA,IAAcw/H,GACrD,GAAIE,EAAmB,EAAG,CACtB,IAAIC,EAAgBlhL,KAAKuiC,OAAO,eAAiB,EAAI,EACrDu+I,EAAiB,cAAgBngK,GAAa,SAAWA,EAAYsgK,EAAmBC,EAAgBD,EAAmBC,GAAiB,EAEhJ,OAAOJ,GAEXhB,uBAAwB,SAASvlC,EAAW55H,GACxC,IAEIwgK,EAFAxB,EAAcplC,EAAU13F,cAAchmB,OACtC6T,EAAQ1wC,KAAKohL,0BAA0BzB,GAEvCtB,EAAS9jC,EAAU13F,cACnBw+H,EAAcrhL,KAAKq/K,gBAAgBM,GACvC,GAAIjvI,EAAM/J,GAAGoyI,IACT,OAAQ/4K,KAAK+/K,sBAAsBxlC,EAAW55H,GAElD3gB,KAAKshL,2BAA2B5wI,GAChC,IAAI6wI,EAAevhL,KAAKwhL,qBAAqBnD,EAAQ19J,EAAW0gK,GAEhE,GADA3wI,EAAQ6wI,EAAa7wI,OAChBA,GAAS1wC,KAAK6/K,gCAAgCnvI,EAAO/vB,GACtD,OAAO,EAEX,IAAIsvB,EAAoBjwC,KAAK62C,mBACzB6G,EAAY19C,KAAK+lC,QAAQ,YAAY0X,aAAa/M,GAClDlR,EAAcke,EAAYzN,EAAkBiM,uBAC5C/tC,EAAS8hC,EAAkB6G,kBAAkB,MAAM,GAAMtX,GACzD8W,EAAO5F,EAAMhJ,SACb6L,EAAWvzC,KAAKyhL,aAAanrI,GAC7B3Q,EAAM3lC,KAAK0hC,gBAAgBtkB,QAAQm2B,GACnC0hC,EAAoBj1E,KAAK8lH,mBAC7B,GAAI33G,GAAUA,EAAO+B,aAAc,CAC/B,IAAIwxK,GAAc/7I,GAAO,SAAWA,EAAI7B,QACxCq9I,EAAmBlsG,EAAkBh/D,cAAc,CAC/C0vB,IAAKA,IACJ+7I,EAAa/7I,GAAOA,EAAIC,SAYjC,OAVKu7I,GACDnhL,KAAKm+K,iBAELn+K,KAAK2hL,WAAWjxI,GAAQ6wI,EAAaK,kBAChC5hL,KAAKy5K,kBAAoB0H,EAC1BnhL,KAAK6hL,mBAEL7hL,KAAK8hL,yBAAyBpxI,EAAO6pG,EAAUzvH,SAGhD,GAEXi1J,sBAAuB,SAASxlC,EAAW55H,GACvC,IAKI0gK,EALAhD,EAAS9jC,EAAU13F,cACnB88H,EAActB,EAAOxhJ,OACrB6T,EAAQ1wC,KAAKohL,0BAA0BzB,GACvCoC,EAA0B/hL,KAAKgiL,uBAAuBtxI,GAAQ6pG,EAAUzvH,OACxE00J,GAA4B,EAEhC,IAAK5qE,GAAa50G,KAAM0wC,IAAUqxI,EAAwBn6J,QAAU+3J,IAAgBoC,EAAwBpiJ,IAAI,GAC5G6/I,GAA4B,MACzB,MACC,IAAWx/K,KAAKo6K,qBAAqB7mI,WAAY1R,EAAAA,EAAAA,GAAE89I,GAAa/vI,SAASmC,KACzE/xC,KAAKshL,2BAA2B5wI,GAEpC2wI,EAAcrhL,KAAKq/K,gBAAgBM,GAC/B3/K,KAAK08K,mBACL18K,KAAK88K,mBACD,QAAUuE,GAAe9qI,IAAU1U,EAAAA,EAAAA,GAAE89I,MACrCA,EAAc3/K,KAAKiiL,wBAAuBpgJ,EAAAA,EAAAA,GAAE89I,IAC5C0B,EAAcrhL,KAAKq/K,gBAAgBM,KAG3C,IAAI4B,EAAevhL,KAAKwhL,qBAAqBnD,EAAQ19J,EAAW0gK,GAEhE,GADA3wI,EAAQ6wI,EAAa7wI,OAChBA,EACD,OAAO,EAGX,GADAA,EAAQ1wC,KAAKkiL,wBAAwB7D,EAAQ3tI,IACxCA,EACD,OAAO,EAEX1wC,KAAK2hL,WAAWjxI,GAAQ6wI,EAAaK,eAChChtE,GAAa50G,KAAM0wC,IACpB1wC,KAAK8hL,yBAAyBpxI,EAAO6pG,EAAUzvH,OAGvD,OAAO00J,GAEXgC,qBAAsB,SAASnD,EAAQ19J,EAAW0gK,GAC9C,IAAI3wI,EAAQ1wC,KAAK4+K,aAAaj+J,EAAW0gK,GACrC5sJ,EAAOic,GAAS1wC,KAAKmiL,yBAAyB9D,EAAQ3tI,GAAO,GACjE,OAAKjc,GAAQA,EAAK7e,OACP,IAEP6e,EAAK2tJ,kBACL1xI,EAAQjc,EAAK2tJ,iBAEV,CACH1xI,MAAOA,EACPkxI,cAAentJ,EAAKmtJ,iBAG5BM,wBAAyB,SAAS7D,EAAQ3tI,GACtC,IAAI6C,EAAWvzC,KAAKo+K,qBAChB9nI,EAAO5F,EAAMhJ,SACjB,GAAI6L,IAAavzC,KAAKyhL,aAAanrI,GAAO,CACtC,IAAIsK,EAAe5gD,KAAKqiL,iBAAiB3xI,GACrCjc,EAAOz0B,KAAKsiL,wBAAwBjE,EAAQ/nI,GAChD,GAAI7hB,EAAK7e,OACL,OAEA6e,EAAK8tJ,kBACLviL,KAAKwiL,sBAAsB5hI,EAAaphB,aACxCkR,EAAQ1wC,KAAKg7K,mBAGrB,OAAOtqI,GAEXitI,iBAAkB,SAASpjC,EAAWjsE,GAClC,IAAI59B,EAAQ1wC,KAAKg7K,kBACbznI,EAAWvzC,KAAKo+K,qBAChB9nI,EAAOt2C,KAAKw6K,cAAgBx6K,KAAKw6K,aAAal/F,OAAO/nC,GACzD,GAAIvzC,KAAKuiC,OAAO,6BAA+BkU,GAAWH,IAASt2C,KAAKuiC,OAAO,yBAA2BmO,GAASA,EAAMd,SAASkb,IAAuB,CACrJ,IAAIp/B,EAAM1rB,KAAK0hC,gBAAgBoxC,iBAAiBv/B,GAC5CtsB,EAAOjnB,KAAK0hC,gBAAgBtkB,QAAQm2B,QACpC,IAAW7nB,GAAOzE,GAAQA,EAAKvX,OAASuX,EAAKvX,KAAKg2B,gBAClD1lC,KAAK0hC,gBAAgB+/D,gBAAgB/1E,QAGzC1rB,KAAKyiL,4BAA4BloC,EAAWjsE,IAGpDm0G,4BAA6B,SAASloC,EAAWjsE,GAC7C,IAAI3tD,EAAY3gB,KAAK0iL,sBAAsBnoC,GACvCooC,EAAyB3iL,KAAK4iL,0BAC9Bt0G,IAAcq0G,GAA0BhiK,GACxC3gB,KAAK6iL,2BAA2BtoC,EAAU13F,eACtC,SAAWliC,GAAa,aAAeA,EACvC3gB,KAAK+/K,sBAAsBxlC,EAAW55H,GAC/B,YAAcA,GAAa,cAAgBA,GAClD3gB,KAAK++K,kBAAkBxkC,EAAU13F,cAAeliC,IAE7CgiK,GACP3iL,KAAK8iL,cAAcvoC,IAG3BmoC,sBAAuB,SAASnoC,GAC5B,IAAI54H,EAAoB3hB,KAAKuiC,OAAO,wCAChCwgJ,EAAUxoC,EAAUzvH,MACxB,MAAI,WAAanJ,EACNohK,EAAU,UAAY,YAE7B,QAAUphK,EACHohK,EAAU,WAAa,YADlC,GAIJF,2BAA4B,SAASp4I,GACjC,IAAI5N,EAAS4N,EAAM5N,OACf6T,EAAQ1wC,KAAKohL,0BAA0BvkJ,GACvCyqF,EAAgBtnH,KAAKy5K,iBACzBz5K,KAAKshL,2BAA2B5wI,GAC5B42E,GACAtnH,KAAKgjL,mBAAmBtyI,GACxBsC,WAAWhzC,KAAK8lH,mBAAmBvH,aAAaj6E,KAAKtkC,KAAK8lH,uBAE1Dl/E,EAAAA,EAAAA,SAAqB/E,EAAAA,EAAAA,GAAEhF,GAAS,UAChC78B,KAAKm+K,iBACL1zI,EAAM4L,mBAGdunI,kBAAmB,SAASrjC,EAAWjsE,GACnC,IAAI59B,EAAQ1wC,KAAKohL,0BAA0B7mC,EAAU13F,cAAchmB,QAC/DyxC,IACAtuE,KAAKshL,2BAA2B5wI,GAC3B1wC,KAAKy5K,kBAONz5K,KAAKgjL,mBAAmBtyI,GACxB1wC,KAAK8lH,mBAAmBpN,iBACpB,IAAM14G,KAAK0hC,gBAAgBtkB,QAAQwK,SACnC5nB,KAAK87K,oBACL97K,KAAK6nJ,eAAe35C,cAVpB,SAAWluG,KAAK8lH,mBAAmBvQ,cACnCv1G,KAAK8lH,mBAAmBpN,iBAExB14G,KAAKm+K,iBAUb5jC,EAAU13F,cAAcxM,mBAGhCwnI,iBAAkB,SAAStjC,GACvB,GAAIv6I,KAAKuiC,OAAO,uBAAwB,CACpC,IAAI0gJ,EAAmBjjL,KAAKmhJ,aAAa0b,sBACrComB,IACAA,EAAiB71I,QACjBmtG,EAAU13F,cAAcxM,oBAIpCynI,cAAe,WACX,IAAIxvG,EAAYtuE,KAAK8lH,mBAAmBx3C,YACpC/6B,EAAWvzC,KAAKo+K,qBAChB9nI,EAAOt2C,KAAKw6K,cAAgBx6K,KAAKw6K,aAAal/F,OAAO/nC,IACpD+6B,GAAa/3B,GAAUD,IACxBt2C,KAAK8iL,iBAGb/D,kBAAmB,SAASV,EAAQ6E,GAChC,IAAIxyI,EAAQ1wC,KAAK4+K,aAAasE,GAC1B5E,EAAgBt+K,KAAKu+K,uBAAuB2E,GAC5CC,EAAczyI,GAAS1wC,KAAKojL,aAAa1yI,GACzC1nB,IAASm6J,GAAcnjL,KAAK6+K,2BAA2BR,EAAQ3tI,EAAO4tI,GAC1E,OAAOt1J,GAEX61J,2BAA4B,SAASR,EAAQgF,EAAW1iK,GACpD,IAAI2iK,EAAsB,YAAc3iK,GAAa,YAAcA,EAC/D8T,EAAOz0B,KAAKujL,yBAAyBlF,EAAQgF,EAAWC,GAAqB,GAEjF,OADAD,EAAY5uJ,EAAK2tJ,kBACZ3tJ,EAAK7e,SAAU5V,KAAKojL,aAAaC,MAClCrjL,KAAKwjL,OAAOH,GAAY5uJ,EAAKmtJ,gBACtB,IAIfnE,kBAAmB,SAAS56H,EAAe4gI,GACvC,IAAKzjL,KAAK+9K,yBAA2Bl7H,EAAcq7H,QAAUr7H,EAAczM,SAAWp2C,KAAK8lH,mBAAmBx3C,YAC1G,OAAO,EAEX,GAAIm1G,EACAzjL,KAAK8iL,cAAcjgI,EAAeo2H,QAC/B,CACH,IAAIvtJ,EAAMm3B,EAAcn3B,IACpBw3J,EAAUrgI,EAAcqgI,SAAWrgI,EAAcy4F,MACjDooC,EAAiBh4J,GAAOw3J,GAAWn9K,OAAO49K,aAAaT,IACvDQ,GAAmB,IAAMA,EAAe97J,QAAU87J,IAAmBzK,IACrEj5K,KAAK8iL,cAAcjgI,EAAe6gI,GAG1C,OAAO,GAEXpH,qBAAsB,SAASh2I,GAC3B,IAAImE,EAAQnE,EAAEmE,OAASnE,EACnB2D,GAAUpI,EAAAA,EAAAA,GAAE4I,EAAMyI,eAClBrN,EAAW7lC,KAAK+lC,QAAQ,YACxB65I,EAAqB/5I,GAAYA,EAAS1E,UAC1C4L,EAAU9C,EAAQvC,SAClBk8I,GAAuB/hJ,EAAAA,EAAAA,GAAE4I,EAAM5N,QAAQ8J,GAAGuyI,IAC1C3gD,KAAmB12F,EAAAA,EAAAA,GAAE4I,EAAM5N,QAAQkK,QAAQ,IAAIjf,OAAO6nG,KAAsB/nG,OAC5Ei8J,EAAsB55I,EAAQ2F,SAASkb,IACtC9qD,KAAK86K,sBAAsBrwI,KAG3B8tF,IAAmBv4H,KAAKojL,aAAan5I,GAAU25I,KAAyBC,EAalE55I,EAAQtD,GAAG,OAClB3mC,KAAK87K,qBAbL7xI,EAAUjqC,KAAK8jL,kBAAkB75I,IAAWpI,EAAAA,EAAAA,GAAE4I,EAAM5N,QAAUoN,EAC9DjqC,KAAK+jL,cACLliJ,EAAAA,EAAAA,GAAE+9I,GAAoB59I,YAAY0f,IAC9B3U,EAAQ6C,SAASkpI,KACjB94K,KAAKshL,2BAA2Br3I,GAChCjqC,KAAKk8K,wBAAwBl8K,KAAKw6K,aAAar5I,WAC/CnhC,KAAKw6K,aAAaptI,SACVptC,KAAKgkL,oBAAoB/5I,GAGjCjqC,KAAKshL,2BAA2Br3I,GAFhCjqC,KAAKikL,wBAAwBx5I,EAAOR,MAQhDg6I,wBAAyB,SAASx5I,EAAOiG,GACrC,IAAIlR,EAAcx/B,KAAK+lC,QAAQ,YAAY0X,aAAa/M,GACpDviC,EAASnO,KAAK62C,mBAAmBC,oBAAoBtX,GACrDguF,EAAiBxtH,KAAKkkL,kBAC1BlkL,KAAK88K,mBACL,IAAIroJ,EAAOz0B,KAAKujL,yBAAyB94I,EAAOiG,GAAO,GAEvD,GADAA,EAAQjc,EAAK2tJ,gBACR3tJ,EAAK7e,OAuBN5V,KAAK68K,kBACL78K,KAAKmkL,mBAAmB1vJ,EAAK2vJ,cAC7B1zI,EAAQ1wC,KAAKg7K,kBACTh7K,KAAK8lH,mBAAmBx3C,aAAek/C,GACvCxtH,KAAKm+K,qBA3BK,CACd,GAAI1pJ,EAAK4vJ,gBAEL,YADArkL,KAAKqqC,cAAc,SAASi6I,mBAUhC,GAPI7vJ,EAAK8tJ,kBACL7xI,EAAQ1wC,KAAKg7K,mBAEZvmJ,EAAKmtJ,eAAkBp0D,GACxBxtH,KAAK68K,kBAET78K,KAAKshL,2BAA2B5wI,GAC5B1wC,KAAKukL,qBAAuB/2D,GAAkBr/G,GAAUA,EAAO+B,aAC/DlQ,KAAKw7K,cAAe,EACpBx7K,KAAKy7K,gBAAiB,MACnB,CACH,IAAIxxI,EAAUQ,IAAS5I,EAAAA,EAAAA,GAAE4I,EAAM5N,QAAQkK,QAAQoyI,GAAkC,QAC7EqL,EAAiBv6I,GAAWA,EAAQ2P,IAAIlJ,GAAO/J,GAAGwyI,IAClDsL,IAAat2K,IAAWA,EAAOk5B,SAAWqJ,EAAMd,SAAS4gD,IACzDk0F,GAAcD,KAAchwJ,EAAKmtJ,eAAiB4C,GACtDxkL,KAAKwjL,OAAO9yI,EAAOg0I,EAAYF,MAW3CD,kBAAmB,WACf,IAAIhxI,EAAWvzC,KAAKo+K,qBAChBz4I,EAAM3lC,KAAK0hC,gBAAgBtkB,QAAQm2B,GACvC,OAAOvzC,KAAK8lH,mBAAmB7vG,cAAc,CACzC0vB,IAAKA,GACN,UAEPyH,MAAO,SAASjM,GACZ,IAAIwjJ,EACAx8K,EAAoBnI,KAAKuiC,OAAO,qBAChCq/I,EAAgBpI,IAAc33I,EAAAA,EAAAA,GAAEV,IAC/BA,IACDwjJ,EAAwB,0CACnBx8K,IACDw8K,GAAyB,kDAE7BxjJ,EAAUnhC,KAAK8lC,UAAUpF,WAAWa,KAAKojJ,GAAuBhhI,SAEpExiB,GAAWnhC,KAAK4kL,eAAc/iJ,EAAAA,EAAAA,GAAEV,GAAUygJ,IAE9CiD,eAAgB,WACZ,OAAO7kL,KAAKw6K,cAEhBF,iBAAkB,WACVt6K,KAAK8kD,uBAAwBr0B,EAAAA,EAAAA,IAAUzwB,KAAKw6K,eAC5Cx6K,KAAK+jL,cAGba,cAAe,SAASlkJ,EAAUkhJ,GAC9B,IAAIkD,GAAkBjjJ,EAAAA,EAAAA,GAAE7hC,KAAKg8K,uBACzB+I,EAAerkJ,EAASqG,QAAQ+9I,GAChCpI,EAAiB18K,KAAK08K,iBACtBjoJ,EAAO,IACNswJ,EAAan9J,QAAU4xJ,GAAc94I,KAAc1gC,KAAKojL,aAAa1iJ,KAG1E1gC,KAAK+jL,aACL/jL,KAAKw7K,cAAe,EACpBx7K,KAAKu6K,eAAgB,GACjBf,GAAc94I,IAAa+V,GAAW/V,MACtC1gC,KAAK88K,mBACLroJ,EAAOz0B,KAAKujL,yBAAyB,KAAM7iJ,GAAU,EAAOkhJ,GAC5DlhJ,EAAWjM,EAAK2tJ,gBACZ1F,IAAmBjoJ,EAAKmtJ,eACxB5hL,KAAK68K,mBAGRpoJ,EAAK7e,SACN5V,KAAKwjL,OAAO9iJ,GAAWjM,EAAKmtJ,eAC5B5hL,KAAK8hL,yBAAyBphJ,MAGtCskJ,yBAA0B,SAAStkJ,GAC/B,IAAI0+C,EAAOp/E,KAAK6kL,iBACZI,EAAQ7lG,IAAQv9C,EAAAA,EAAAA,GAAEu9C,EAAKj+C,WAC3B,OAAOT,GAAY,IAAMA,EAASqG,QAAQk+I,GAAOr9J,QAErDm8J,WAAY,WACR/jL,KAAKw6K,aAAex6K,KAAK+lC,QAAQ,aAErCg2I,kBAAmB,WACf/7K,KAAK68K,kBACL78K,KAAKw6K,aAAe,MAExBsH,yBAA0B,SAASpxI,EAAO+/H,GACtC,GAAK//H,EAAL,CAGA,IAAI6+D,EAAkBvvG,KAAKgiL,uBAAuBtxI,EAAO+/H,GACzDvhI,EAAAA,sBAAoClvC,KAAMuvG,KAE9Ci0E,OAAQ,SAAS9yI,EAAOw0I,EAAcV,GAClC,IAAIluI,EAAO5F,IAAUA,EAAMd,SAASmC,IAAarB,EAAM3J,QAAQ,IAAIjf,OAAOiqB,KAAcrB,EACxF,IAAI4F,IAAQijI,GAAgBjjI,GAA5B,CAGA,IAEI6uI,EAFAC,EAAcplL,KAAKw6K,aACnB92H,EAAoB0hI,GAAeA,EAAYjkJ,UAEnDnhC,KAAKy7K,eAAiByJ,EACtB,IAAIG,EAAa5uI,GAAWH,IAASt2C,KAAK08K,iBACtC2I,GACAF,EAAgB7uI,EACZ8uI,GACAplL,KAAKmkL,mBAAmBnkL,KAAKyhL,aAAanrI,KAEvCkjI,GAAc9oI,KACrBy0I,EAAgBz0I,EAChB1wC,KAAKshL,2BAA2B5wI,IAEhCy0I,IACIzhI,GACAA,EAAkBniB,KAAK,6CAA6CqY,IAAIurI,GAAenjJ,YAAYyjB,IAA2BzO,WAAW,YAE7IpQ,EAAAA,EAAAA,IAAiBu+I,EAAe,QAAQ7+I,IAChCA,EAAEk0G,eACF2qC,EAAcnjJ,YAAYyjB,OAG7B++H,IACDxkL,KAAKk8K,wBAAwBiJ,GAC7Bv+I,EAAAA,EAAAA,QAAqBu+I,EAAe,UAEpCD,GACAC,EAAcrjJ,SAAS2jB,IACnB4/H,GACA30I,EAAM5O,SAAS2jB,KAGnBzlD,KAAK6nJ,eAAez6G,MAAM+3I,MAItCh3E,aAAc,SAASm3E,GACnBtlL,KAAKk6K,oBAAsBlnI,YAAW,KAClC,IAAIiiC,EAAoBj1E,KAAK8lH,mBACzB0H,EAAiBv4C,EAAkBsgC,gBAAkBjD,GACrDmb,EAAkBx4C,EAAkBsgC,gBAAkBnD,GAC1D,GAAIob,GAAkBv4C,EAAkB4M,cAAgB4rC,GAAmBx4C,EAAkB0wC,qBACzF1wC,EAAkBuqC,wBADtB,CAIA,IAAI9uE,EAAQ1wC,KAAKg7K,kBACb1sG,EAAY2G,EAAkB3G,YAClC,GAAI59B,KAAW1wC,KAAKgkL,oBAAoBtzI,IAAW1wC,KAAKy5K,kBAAmB,CACvE,GAAIz5K,KAAKulL,YAAY70I,EAAMhJ,UAAW,CAClC,IAAI/mB,EAAY3gB,KAAKo6K,sBAAwBp6K,KAAKo6K,qBAAqB7mI,SAAW,EAAI,UAAY,YAClG7C,EAAQ1wC,KAAK4+K,aAAaj+J,GAE9B,GAAI+4J,GAAiBhpI,GAAQ,CACzB,GAAI40I,IAAiBh3G,GAAatuE,KAAKwlL,qBAAqB90I,GACxD,OAEJ,GAAIA,EAAM/J,GAAG,OAAS+J,EAAMd,SAAS5vC,KAAKqhC,gBAAgBomF,KAAwB,CAC9E,IAAI9S,EAAgBjkE,EAAM/J,GAAGoyI,IACzB0M,EAA4B/0I,EAAMnP,KAAK,UACvCmkJ,EAA0BhM,GAAiB+L,GAC/C,IAAKH,GAAiB3wE,IAAkB30G,KAAK6nJ,eAAez6G,QAKhDs4I,IAA4B1lL,KAAKw7K,eAAgBx7K,KAAKy7K,gBAC9Dz7K,KAAKwjL,OAAO9yI,EAAO1wC,KAAKy7K,oBANyC,CACjE,GAAI9mE,GAAiB+wE,EAEjB,YADAx2I,EAAAA,sBAAoClvC,KAAMylL,IAE5CC,GAA2B1lL,KAAKwjL,OAAO9yI,GAIzC49B,GACAtuE,KAAK8hL,yBAAyBx9I,KAAKtkC,KAAnCA,CAAyC0wC,QAG7C9J,EAAAA,EAAAA,QAAqB8J,EAAO,gBAMhD80I,qBAAsB,SAAS90I,GAC3B,IAAIi1I,EAAaj1I,EAAM1tB,SACnB4iK,EAAgB5lL,KAAK8lC,UAAU6xC,eAAiB33E,KAAK8lC,UAAU6xC,gBAC/DkuG,GAAe,EAQnB,OAPID,IACID,EAAW5mK,KAAO,EAClB8mK,GAAerkI,EAAAA,EAAAA,IAAS9Q,GAASi1I,EAAW5mK,MAAQ,EAC7C4mK,EAAWzmK,IAAM,IACxB2mK,GAAehjJ,EAAAA,EAAAA,IAAU6N,GAASi1I,EAAWzmK,KAAO,IAGrD2mK,GAEX7K,gBAAiB,WACb,OAAOn5I,EAAAA,EAAAA,GAAE7hC,KAAKghL,SAAShhL,KAAKo6K,wBAEhC8C,mCAAoC,SAASrgJ,GACzC,IAAIipJ,EACAzE,EAAcrhL,KAAKq/K,gBAAgBxiJ,GACvC,GAAI,QAAUwkJ,IAAe5wJ,EAAAA,EAAAA,IAAU,QAAUq1J,EAAwB9lL,KAAKo6K,4BAAyB,IAAW0L,OAAwB,EAASA,EAAsBtmJ,aAAc,CACnL,IAAI8W,GAAOzU,EAAAA,EAAAA,GAAEhF,GACb78B,KAAKw6K,cAAgB/jI,GAAWH,IAASt2C,KAAKmkL,mBAAmBnkL,KAAKyhL,aAAanrI,SAEnFt2C,KAAKshL,2BAA2BthL,KAAKohL,0BAA0BvkJ,KAGvEykJ,2BAA4B,SAAS5wI,EAAO/vB,GACxC,IAAIjG,EAAW1a,KAAKqiL,iBAAiB3xI,EAAO/vB,GAM5C,OALIjG,KACKg2B,EAAM9oB,QAAUlN,EAAS64B,UAAY,GAAK74B,EAAS8kB,aAAe,IACnEx/B,KAAK+lL,uBAAuBrrK,EAAS64B,SAAU74B,EAAS8kB,aAGzD9kB,GAEXsrK,6BAA8B,SAASxmJ,GACnC,IAAIxc,EAAS,EACT7U,EAASnO,KAAK62C,mBAAmBC,oBAAoBtX,GAMzD,OALIrxB,GAAUA,EAAO6D,MACjBgR,EAAShjB,KAAKimL,2BAA2B93K,GAClCqxB,GAAe,IACtBxc,EAAShjB,KAAK62C,mBAAmBqF,wBAE9Bl5B,GAEXijK,2BAA4B,SAAS93K,GACjC,IAAI6U,EAAS62J,GAAiC75K,KAAMmO,GAAUnO,KAAK0gL,yBAA2B1gL,KAAK62C,mBAAmBC,oBAAoBlvB,OAAS,EACnJ,OAAO5E,GAEXq/J,iBAAkB,SAAS3xI,EAAO/vB,GAC9B,IAAI6e,EACA8W,EAAOojI,GAAiBhpI,IAAUA,EAAM3J,QAAQ,MAChDlB,EAAW7lC,KAAK+lC,QAAQ,YAC5B,GAAI2zI,GAAiBpjI,GAAO,CACxB,IAAI/C,EAAWvzC,KAAKyhL,aAAanrI,GAOjC,OANA9W,EAAcqG,EAAS4X,aAAa/M,EAAO6C,GAC3C/T,GAAex/B,KAAKgmL,6BAA6BxmJ,GAC7C7e,IACA6e,EAAc,aAAe7e,EAAY6e,EAAc,EAAIA,EAAc,EACzEA,EAAcx/B,KAAKkmL,4BAA4B1mJ,IAE5C,CACH+T,SAAUA,EACV/T,YAAaA,KAIzBmiJ,WAAY,SAASjxI,EAAOg0I,GACxB,GAAI1kL,KAAKojL,aAAa1yI,GAElB,OADA1wC,KAAKwjL,OAAO9yI,EAAOg0I,IACZ,GAGf1B,mBAAoB,SAAStyI,GACrBA,EAAMd,SAASi5D,KACf7oG,KAAK6nJ,eAAez6G,MAAMsD,GAAO,IAGzCorI,kBAAmB,SAASqK,GACxB,IAAIC,EACA11I,EAAQ1wC,KAAKg7K,kBACjBtB,GAAiBhpI,IAAUA,EAAMsG,WAAW,YAC5Ch3C,KAAKw7K,cAAe,EACpBx7K,KAAKu6K,eAAgB,EACrBv6K,KAAKo6K,qBAAuB,GAC5BnnI,aAAajzC,KAAKk6K,qBAClB,QAAUkM,EAAqBpmL,KAAKw6K,oBAAiB,IAAW4L,GAA8BA,EAAmBC,iBAAiB,CAC9HF,cAAeA,KAGvBG,wBAAyB,SAAS/yI,EAAU8qI,GACxC,IAAI5pJ,EACAgnB,EACAqjI,GAAYruJ,EAAAA,EAAAA,IAAU8iB,GACtB1N,EAAW7lC,KAAK+lC,QAAQ,YACxB07C,EAAmB57C,EAAS1E,UAC5B3B,EAAcx/B,KAAKo6K,qBAAqB56I,YACxCkxC,EAAiB1wE,KAAK0hC,gBAAgBivC,oBAC1Cp9B,EAAWurI,EAAYvrI,EAAW1N,EAASy4C,yBAA2B5N,EACjEouG,GAKDrjI,EAAc5V,EAASy1C,OAAO/nC,EAAWm9B,GACzCj8C,EAAOz0B,KAAKsiL,wBAAwBjE,EAAQ5iI,IACvChnB,EAAK7e,QAAU6e,EAAK8tJ,kBACrBhvI,EAAW9e,EAAK8xJ,eAPpBvmL,KAAK6nJ,eAAe35C,YACpBluG,KAAKk8K,wBAAwBz6F,GAC7B76C,EAAAA,EAAAA,QAAqB66C,EAAkB,UAQtCq9F,GAAcrqJ,EAAK7e,QACpB5V,KAAK+lL,uBAAuBxyI,EAAU/T,GAE1Cs/I,GAAa9+K,KAAKmuG,gBAEtBq4E,sBAAuB,SAAS5lI,EAAcygI,EAAarxJ,GACvD,IAEIy2J,EAFAjnJ,EAAcohB,EAAaphB,YAC3B+T,EAAWqN,EAAarN,SAE5B,QAAI,IAAWqN,EAAarN,UAAY,SAAWvjB,EAC/C,MAAO,CACHwP,YAAa,EACb+T,SAAU,GAGlB,OAAQvjB,GACJ,IAAK,YACL,IAAK,OACDy2J,EAAsBzmL,KAAK0gL,yBACvBlhJ,EAAcinJ,EAAsB,GAAK,QAAUpF,GAAerhL,KAAK0mL,2BAA2B,CAC9FlnJ,YAAaA,EACb+T,SAAUA,IAEd/T,IACQx/B,KAAK2mL,WAAWpzI,IAAa,SAAWvjB,IAChDwP,EAAc,EACd+T,KAEJ,MACJ,IAAK,gBACL,IAAK,WACG/T,EAAc,GAAK,QAAU6hJ,GAAerhL,KAAK4mL,4BAA4B,CACzEpnJ,YAAaA,EACb+T,SAAUA,IAEd/T,IACO+T,EAAW,GAAK,aAAevjB,IACtCujB,IACAkzI,EAAsBzmL,KAAK0gL,yBAC3BlhJ,EAAcinJ,EAAsB,GAExC,MACJ,IAAK,UACDlzI,EAAWA,EAAW,EAAIA,EAAW,EAAIA,EACzC,MACJ,IAAK,YACDA,EAAYvzC,KAAK2mL,WAAWpzI,GAA2BA,EAAfA,EAAW,EAE3D,MAAO,CACH/T,YAAaA,EACb+T,SAAUA,IAGlBwyI,uBAAwB,SAASxyI,EAAU/T,GACvCx/B,KAAKmkL,mBAAmB5wI,GACxBvzC,KAAKwiL,sBAAsBhjJ,IAE/B2kJ,mBAAoB,SAAS5wI,GACpBvzC,KAAKo6K,uBACNp6K,KAAKo6K,qBAAuB,IAEhCp6K,KAAKo6K,qBAAqB7mI,SAAWA,GAEzCivI,sBAAuB,SAAShjJ,GACvBx/B,KAAKo6K,uBACNp6K,KAAKo6K,qBAAuB,IAEhCp6K,KAAKo6K,qBAAqB56I,YAAcA,GAE5CgU,YAAa,WACT,OAAOxzC,KAAKo6K,qBAAuBp6K,KAAKo6K,qBAAqB7mI,UAAY,GAE7EgtI,eAAgB,WACZ,OAAOvgL,KAAKo6K,qBAAuBp6K,KAAKo6K,qBAAqB56I,aAAe,GAEhF4+I,mBAAoB,WAChB,IAAI7qI,EAAWvzC,KAAKo6K,sBAAwBp6K,KAAKo6K,qBAAqB7mI,SACtE,QAAK9iB,EAAAA,EAAAA,IAAU8iB,IAAaA,EAAW,GAC3B,EAELA,EAAWvzC,KAAK0hC,gBAAgBivC,qBAE3ClxB,sBAAuB,WACnB,IAAIjgB,EAAcx/B,KAAKo6K,sBAAwBp6K,KAAKo6K,qBAAqB56I,YACzE,OAAK/O,EAAAA,EAAAA,IAAU+O,GAGRA,EAAcx/B,KAAK62C,mBAAmBqF,wBAFjC,GAIhBgqI,4BAA6B,SAAS1mJ,GAClC,IAAIinJ,EAAsBzmL,KAAK0gL,yBAM/B,OALIlhJ,EAAc,EACdA,EAAc,EACPA,GAAeinJ,IACtBjnJ,EAAcinJ,EAAsB,GAEjCjnJ,GAEXqnJ,uBAAwB,SAASjmI,GAC7B,IAAIlQ,GAAQ7O,EAAAA,EAAAA,GAAE7hC,KAAKghL,SAASpgI,IAC5B,OAAO5gD,KAAKojL,aAAa1yI,IAE7Bi2I,WAAY,SAASpzI,GACjB,IAAI+nB,EAAiBt7D,KAAK0hC,gBAC1B,OAAI1hC,KAAKg/K,sBACEzrI,GAAY+nB,EAAewrH,iBAE/BvzI,IAAa+nB,EAAel+C,QAAQwK,OAAS,GAExD83J,kBAAmB,SAAS9+H,GACxB,IAAImmI,GAAmB,EAIvB,OAHI,IAAMnmI,EAAarN,UAAYqN,EAAaphB,aAAe,IAC3DunJ,EAAmBA,IAAqB/mL,KAAK4mL,4BAA4BhmI,IAEtEmmI,GAEXH,4BAA6B,SAAShmI,GAClC,IAAIphB,EAAcohB,EAAaphB,YAC3BwnJ,GAAgB,EACpB,MAAOxnJ,EAAc,IAAMwnJ,EAAe,CACtC,IAAIC,EAAmB,CACnBznJ,cAAeA,EACf+T,SAAUqN,EAAarN,UAE3ByzI,EAAgBhnL,KAAK6mL,uBAAuBI,GAEhD,OAAOD,GAEXN,2BAA4B,SAAS9lI,GACjC,IAAIphB,EAAcohB,EAAaphB,YAC3BwnJ,GAAgB,EAChBE,EAAqBlnL,KAAK0gL,yBAC9B,MAAOlhJ,EAAc0nJ,EAAqB,IAAMF,EAAe,CAC3D,IAAIC,EAAmB,CACnBznJ,cAAeA,EACf+T,SAAUqN,EAAarN,UAE3ByzI,EAAgBhnL,KAAK6mL,uBAAuBI,GAEhD,OAAOD,GAEXvH,iBAAkB,SAAS7+H,GACvB,IAAIi0H,EAAkBj0H,EAAaphB,aAAe,EAAIohB,EAAaphB,YAAc,EAAI,EACjF+T,EAAWqN,EAAarN,SACxB0zI,EAAmB,CACnBznJ,YAAaq1I,EACbthI,SAAUA,GAEVgzF,EAAcvmI,KAAK0hC,gBAAgBwvC,iBACnCvrC,EAAM4gG,GAAeA,EAAYhzF,GACjC4zI,EAAYnnL,KAAK2mL,WAAWpzI,GAChC,QAAK4zI,OAGDxhJ,GAAO,UAAYA,EAAI7B,SAAW8c,EAAaphB,YAAc,KAG7DohB,EAAaphB,cAAgBx/B,KAAK0gL,yBAA2B,IAG7D1gL,KAAK6mL,uBAAuBI,IAGzBjnL,KAAKy/K,iBAAiBwH,MAEjC7D,aAAc,SAAS1yI,EAAO02I,GAC1B,GAAI1N,GAAiBhpI,GAAQ,CACzB,IAAI7K,EAAW7lC,KAAK+lC,QAAQ,YACxBuQ,EAAO5F,EAAMhJ,SACbuI,EAAoBjwC,KAAK62C,mBACzBrX,EAAcqG,EAAS4X,aAAa/M,GAAST,EAAkBiM,uBAC/D/tC,EAAS8hC,EAAkB6G,kBAAkB,MAAM,GAAMtX,GACzD0nJ,EAAqBlnL,KAAK0gL,yBAC1BzrG,EAAoBj1E,KAAK8lH,mBACzBpvE,EAAoB81E,GAAYl2E,GAChC+wI,EAAoBl5K,GAAUA,EAAO+E,gBACrCo0K,EAAan5K,IAAWuiC,EAAMd,SAASkb,KAAyBvU,GAAUD,GAC9E,GAAIt2C,KAAKgkL,oBAAoBtzI,GACzB,OAAO,EAEX,GAAIw2I,EAAqB1nJ,KAAiBkX,GAAqBvoC,MAAYsiB,EAAAA,EAAAA,IAAUtiB,EAAOmE,aAAe+0K,GAAqBC,IAAe12J,SAAS8f,EAAMtG,KAAK,YAAc,GAAI,CACjL,IAAIm9I,EAAWvnL,KAAK0hC,gBAAgBtkB,QAChC4xD,EAAkBnpC,EAAS2N,YAAY8C,GACvC3Q,EAAM4hJ,EAASv4G,GACfmG,EAAgBF,GAAqBj1E,KAAKkkL,mBAAqBjvG,EAAkB3G,YACjFk5G,EAA2BvyG,GAAqBA,EAAkBs1B,UAAUv7B,GAC5EV,EAAYk5G,GAA4BryG,EAC5C,OAAIhnE,EAAOk5B,QACHrnC,KAAKynL,uBACGn5G,GAAa,WAAangE,EAAOk5B,SAEzC8tC,IAGAqyG,EACO,WAAar5K,EAAOk5B,SAEvBinC,KAER6G,IAAiBxvC,GAAO,SAAWA,EAAI7B,YAGnCwqC,GAAangE,EAAO+B,cAAgBk3K,MAIxDnF,uBAAwB,SAAS3rI,EAAM9W,GACnC,IACIkR,EACAg3I,EAFAv2I,EAASmF,EAAK/U,KAAK,QAGvB/B,EAAcA,GAAe,EAC7B,IAAK,IAAI3H,EAAI2H,EAAa3H,EAAIsZ,EAAOvpB,SAAUiQ,EAE3C,GADA6Y,EAAQS,EAAOjM,GAAGrN,GACd73B,KAAKojL,aAAa1yI,GAAQ,CAC1Bg3I,EAAUh3I,EACV,MAGR,OAAOg3I,GAEX9I,aAAc,SAASsE,EAAS7B,EAAazgI,GACzC,IAGIlQ,EACA4F,EAJAqxI,EAAsB/mI,GAAgB5gD,KAAKo6K,qBAC3CsC,EAAiB18K,KAAK08K,iBACtBkL,EAAsBlL,IAAkB//I,EAAAA,EAAAA,IAAQumJ,EAAS,CAAC,OAAQ,cAAgB,EAGtF,GAAIljL,KAAKw6K,cAAgBmN,EAAqB,CAC1C,IAAIE,EAAyB7nL,KAAKwmL,sBAAsBmB,EAAqBtG,EAAa6B,GAC1FxyI,GAAQ7O,EAAAA,EAAAA,GAAE7hC,KAAKghL,SAAS6G,IACxB,IAAIC,EAAwB,aAAe5E,EAAUljL,KAAK0/K,kBAAkBmI,GAA0B7nL,KAAKy/K,iBAAiBoI,GAS5H,GARInO,GAAiBhpI,KAAW1wC,KAAKojL,aAAa1yI,IAAU1wC,KAAK+nL,aAAaF,EAAwBD,KAAyBE,IAEvHp3I,EADAgsI,EACQ18K,KAAKiiL,uBAAuBvxI,EAAMhJ,SAAUmgJ,EAAuBroJ,aAEnEx/B,KAAK4+K,aAAasE,EAAS,OAAQ2E,IAGnDvxI,EAAOojI,GAAiBhpI,IAAUA,EAAMhJ,SACpC1nC,KAAKulL,YAAYjvI,GAAO,CACxB,IAAI/C,EAAWvzC,KAAKyhL,aAAanrI,GACjC,GAAKt2C,KAAK2mL,WAAWpzI,GAMjB,OAAO,KALP7C,EAAQ1wC,KAAK4+K,aAAasE,EAAS,MAAO,CACtC1jJ,YAAamoJ,EAAoBnoJ,YACjC+T,SAAUA,IAMtB,OAAOmmI,GAAiBhpI,GAASA,EAAQ,KAE7C,OAAO,MAEXoyI,cAAe,SAASvoC,EAAWmpC,GAC/B,IAAIiE,EAAsB3nL,KAAKo6K,qBAC3BprG,EAAkBhvE,KAAKo+K,qBACvB4J,EAAqBhoL,KAAKy/C,wBAC1B9Z,EAAM3lC,KAAK0hC,gBAAgBtkB,QAAQ4xD,GACnC7gE,EAASnO,KAAK62C,mBAAmBC,oBAAoBkxI,GACrDhoL,KAAKioL,gBAAgBtiJ,EAAKx3B,KACtBnO,KAAKy5K,iBACLz5K,KAAK8lH,mBAAmBzuG,QAAQ23D,GACzB24G,GACP3nL,KAAKkoL,eAAe3tC,EAAWmpC,KAI3CuE,gBAAiB,SAAStiJ,EAAKx3B,GAC3B,OAAOnO,KAAK8lH,mBAAmB7vG,cAAc,CACzC0vB,IAAKA,KACHx3B,GAAUA,EAAO+B,cAE3B2xK,iBAAkB,WACd,IAAItuI,EAAWvzC,KAAKo+K,qBAChB+J,EAAWnoL,KAAKy/C,wBACpB,OAAOz/C,KAAK8lH,mBAAmBU,SAASjzE,EAAU40I,IAEtDD,eAAgB,SAAS3tC,EAAWmpC,GAChC1jL,KAAKm6K,qBAAsB1pJ,EAAAA,EAAAA,IAAUizJ,GACrC,IAAI0E,EAAapoL,KAAK6hL,mBACtB,GAAI7hL,KAAKg+K,wBACL,IAAI,IAASoK,EACTpoL,KAAKqoL,oBAAoB9tC,EAAWmpC,QACjC,GAAI0E,GAAcA,EAAW/5J,KAAM,CACtC,IAAIi6J,EAAc5E,IAAmBzK,GAA0ByK,EAAiB,GAChF0E,EAAW/5J,MAAK,IAAMruB,KAAKqoL,oBAAoB9tC,EAAW+tC,OAItED,oBAAqB,SAAS9tC,EAAW+tC,GACrC,IAAIC,EAAoBC,EACpBC,EAASzoL,KAAKg7K,kBAAkBz5I,KAAK23I,IAA+Bh0I,GAAG,GACvEwjJ,GAAeC,EAAAA,GAAAA,IAAYpuC,EAAW,CACtCzrI,KAAM,UACN+tB,OAAQ4rJ,EAAO9oJ,IAAI,KAEnBipJ,GAAgBD,EAAAA,GAAAA,IAAYpuC,EAAW,CACvCzrI,KAAM,WACN+tB,OAAQ4rJ,EAAO9oJ,IAAI,KAEnBkpJ,GAAaF,EAAAA,GAAAA,IAAYpuC,EAAW,CACpCzrI,KAAM,QACN+tB,OAAQ4rJ,EAAO9oJ,IAAI,KAIvB,GAFA,QAAU4oJ,GAAsBC,EAAcC,EAAO9oJ,IAAI,IAAIxM,cAAW,IAAWo1J,GAA8BA,EAAmBr8J,KAAKs8J,GACzI5hJ,EAAAA,EAAAA,QAAqB6hJ,EAAQC,IACxBA,EAAazL,uBACdr2I,EAAAA,EAAAA,QAAqB6hJ,EAAQG,IACxBA,EAAc3L,sBAAsB,CACrC,IAAIjxJ,EAAUmc,EAAAA,EAAAA,QAAkB,GAAK,EACrC6K,YAAW,KACPy1I,EAAOrzJ,IAAIkzJ,GACX,IAAIQ,EAAmBL,EAAO1hJ,QAAQ,IAAIjf,OAAOwmJ,KACjD1nI,EAAAA,EAAAA,IAAiBkiJ,EAAkB,YACnCliJ,EAAAA,EAAAA,IAAiBkiJ,EAAkB,YAAa,WAC5CliJ,EAAAA,EAAAA,QAAqB6hJ,EAAQ,aAEjC7hJ,EAAAA,EAAAA,QAAqB6hJ,EAAQI,KAC9B78J,KAIfu3J,yBAA0B,SAASlF,EAAQ3tI,EAAOq4I,EAAcnH,GAC5D,IAAIntJ,EAAO,GACPmsB,EAAe5gD,KAAKqiL,iBAAiB3xI,IAAU,GAqBnD,OApBI1wC,KAAK48K,oBACLnoJ,EAAOz0B,KAAKmiL,yBAAyB9D,EAAQ3tI,EAAOkxI,GAC/CntJ,EAAK7e,SACNgrC,EAAaphB,YAAc/K,EAAKu0J,eAChCpoI,EAAarN,SAAW9e,EAAK8xJ,YAC7B3E,EAAgBntJ,EAAKmtJ,cACrBlxI,GAAQ7O,EAAAA,EAAAA,GAAE7hC,KAAKghL,SAASpgI,OAG3BnsB,EAAK7e,QAAUmzK,GAAgBr4I,IAChCjc,EAAOz0B,KAAKsiL,wBAAwBjE,EAAQ3tI,EAAMhJ,UAC7CjT,EAAK7e,SACNgrC,EAAarN,SAAW9e,EAAK8xJ,YAC7B9xJ,EAAKmtJ,cAAgBA,IAG7BntJ,EAAK2tJ,iBAAkBvgJ,EAAAA,EAAAA,GAAE7hC,KAAKghL,SAASpgI,IAClCnsB,EAAK2tJ,gBAAgBx6J,SACtB6M,EAAK2tJ,gBAAkB1xI,GAEpBjc,GAEX0tJ,yBAA0B,SAAS9D,EAAQp2H,EAAc25H,GACrD,IAAIqH,EAAgBjpL,KAAKuiC,OAAO,sBAC5B6hJ,EAAepkL,KAAKuiC,OAAO,mBAC3Bqe,EAAe5gD,KAAKqiL,iBAAiBp6H,GACrCzoB,EAAcohB,EAAeA,EAAaphB,aAAe,EACzD+T,EAAWqN,EAAeA,EAAarN,UAAY,EACnD9e,EAAO,CACP+iB,YAAayQ,EACbihI,gBAAiBD,EACjB7E,aAAcA,EACd4E,eAAgBxpJ,EAChB+mJ,YAAahzI,EACboH,KAAM36C,KAAK0hC,gBAAgBwvC,iBAC3BpqE,QAAS9G,KAAK62C,mBAAmBC,oBACjCrM,MAAO4zI,EACPuD,cAAeA,IAAiB,EAChChsK,QAAQ,GAgBZ,OAdA5V,KAAKq6K,sBAAwB,KAC7Br6K,KAAK2qC,cAAc,wBAAyBlW,GACxCA,EAAKu0J,iBAAmBxpJ,GAAe/K,EAAK8xJ,cAAgBhzI,IAC5D9e,EAAK2tJ,iBAAkBvgJ,EAAAA,EAAAA,GAAE7hC,KAAKghL,SAAS,CACnCxhJ,YAAa/K,EAAKu0J,eAClBz1I,SAAU9e,EAAK8xJ,gBAGnB9xJ,EAAK7e,SACL5V,KAAKq6K,sBAAwB,CACzB9mI,SAAUA,EACV/T,YAAaA,IAGd/K,GAEX00J,wBAAyB,SAASlhI,EAAcghI,EAAe7E,GAC3D,IAAI9oH,EAAiBt7D,KAAK0hC,gBACtBlC,EAAcx/B,KAAK+lC,QAAQ,YAAY0X,aAAawK,GACpD1U,EAAWvzC,KAAKyhL,aAAax5H,GAAgBA,EAAavgB,UAC1D0hJ,EAAgB32J,KAAKvP,IAAIqwB,EAAW+nB,EAAeqV,oBAAqBrV,EAAel+C,QAAQwK,OAAS,GACxG6sF,EAAgBz0G,KAAK8lH,mBAAmBrM,WAAW2vE,EAAe5pJ,GAClEmG,EAAM21B,EAAel+C,QAAQgsK,GAC5B30E,GAAkBw0E,IAAkBzpJ,GAAe4kJ,IAAiB7wI,GACrEvzC,KAAK2qC,cAAc,uBAAwB,CACvC6M,YAAayQ,EACbzoB,YAAaA,EACb+T,SAAUA,EACV5N,IAAKA,EACLx3B,OAAQnO,KAAK62C,mBAAmBC,oBAAoBtX,MAIhE8iJ,wBAAyB,SAAS/nC,EAAW8uC,GACzC,IAAI9C,EAAcvmL,KAAKyhL,aAAa4H,GAChC/tH,EAAiBt7D,KAAK0hC,gBACtB4nJ,EAAsBtpL,KAAKuiC,OAAO,mBAClCulC,EAAwBxM,EAAewM,wBACvCrzC,EAAO,CACPgf,WAAY41I,EACZjF,aAAckF,EACd/C,YAAaA,EACb97I,MAAO8vG,EACP5/F,KAAM2gB,EAAe4V,iBACrBt7D,QAAQ,GAEZ,OAAK0lD,GAAkBA,EAAe15B,cAAgBkmC,EAAsB1I,QAAU0I,EAAsB/7D,SACxG0oB,EAAK7e,QAAS,EACP6e,IAEPz0B,KAAKuiC,OAAO,uBACZviC,KAAK2qC,cAAc,uBAAwBlW,GACtCA,EAAK7e,QAAU6e,EAAK8xJ,cAAgBA,IACrC9xJ,EAAK4vJ,gBAAkB5vJ,EAAK8xJ,YAAc,EACrC9xJ,EAAK4vJ,iBACNrkL,KAAKmkL,mBAAmB1vJ,EAAK8xJ,aAEjC9xJ,EAAK8tJ,iBAAkB,IAGxB9tJ,IAEX80J,uBAAwB,SAAS9tI,GAC7B,IAAI9V,EACAt9B,EAAgBrI,KAAKuiC,OAAO,iBAC5Bi6E,EAAkBx8G,KAAKqqC,cAAc,SACrCjiC,EAAkB,OAASo0G,QAAmB,IAAWA,OAAkB,EAASA,EAAgBgtE,wBAAwBnhL,GAChI,GAAIrI,KAAKuiC,OAAO,qBAAsB,CAClC,GAAIn6B,GAAmB,EAAG,CACtB,IAAIkzD,EAAiBt7D,KAAK0hC,gBAC1BiE,EAAMv9B,GAAmB,GAAKkzD,EAAe4V,iBAAiB9oE,EAAkBkzD,EAAeqV,qBAEnG3wE,KAAK2qC,cAAc,sBAAuB,CACtC8I,WAAYgI,EACZlI,SAAUnrC,EACVu9B,IAAKA,MAIjBm1I,sBAAuB,SAASrwI,GAC5B,OAAOyE,EAAAA,uBAAqClvC,MAAM6hC,EAAAA,EAAAA,GAAE4I,EAAM5N,UAE9D48I,eAAgB,WACZ,IAAIjkE,EAAWx1G,KAAK8lH,mBAAmBvQ,cACvC,OAAOC,IAAanD,IAAiBmD,IAAajD,IAEtD2xE,gBAAiB,WACb,IAAI1uE,EAAWx1G,KAAK8lH,mBAAmBvQ,cACvC,OAAOC,IAAalD,IAAkBkD,IAAapD,IAEvD2rE,sBAAuB,WACnB,OAAO/9K,KAAKkkL,mBAAqBlkL,KAAKuiC,OAAO,sCAEjDy/I,uBAAwB,SAAStxI,EAAO+/H,GACpC,IAAIlhE,EAAkB7+D,EAAMnP,KAAK23I,IAA+Bt1J,OAAO,YACvE,OAAO6sJ,EAASlhE,EAAgB/tE,OAAS+tE,EAAgB5rD,SAE7Du4H,wBAAyB,SAASx7I,GAC9B,IAAItzB,EAAWpN,KAAKuiC,OAAO,aAAe,EAC1C7B,EAAS0J,KAAK,YAAY3Z,EAAAA,EAAAA,IAAUrjB,GAAYA,EAAW,IAE/D4zK,SAAU,SAASpgI,GACf,GAAI5gD,KAAKw6K,cAAgB55H,EAAc,CACnC,IAAI8vB,EAAiB1wE,KAAK0hC,gBAAgBivC,oBACtCxiE,EAASnO,KAAK62C,mBAAmBC,kBAAkB,MAAM,GAAM8J,EAAaphB,aAC5Eyc,EAAoB9tC,GAAUA,EAAO6D,MAAQhS,KAAKimL,2BAA2B93K,GAAUnO,KAAK62C,mBAAmBqF,uBAC/G3I,EAAWqN,EAAarN,UAAY,EAAIqN,EAAarN,SAAWm9B,GAAkB,EAClFlxC,EAAcohB,EAAaphB,aAAe,EAAIohB,EAAaphB,YAAcyc,GAAqB,EAClG,OAAOj8C,KAAKw6K,aAAa75H,QAAQ,CAC7BpN,SAAUA,EACV/T,YAAaA,MAIzBiiJ,aAAc,SAASnrI,GACnB,IAAIzQ,EAAW7lC,KAAK+lC,QAAQ,YACxBwN,EAAW1N,EAAS2N,YAAY8C,GAIpC,OAHI/C,GAAY,IACZA,GAAYvzC,KAAK0hC,gBAAgBivC,qBAE9Bp9B,GAEXgyI,YAAa,SAASjvI,GAClB,IAAI3Q,EAAM2Q,GAAQA,EAAK3W,IAAI,GAC3B,OAAOgG,IAAQ,SAAWA,EAAIuO,MAAMsL,SAAWlJ,EAAK1G,SAAS5vC,KAAKqhC,gBAAgBw3I,MAAwBrsD,GAAYl2E,KAAUA,EAAK1G,SAAS5vC,KAAKqhC,gBAAgBqwE,OAEvKkxE,wBAAyB,WACrB,MAAO,cAAgB5iL,KAAKuiC,OAAO,sCAEvCklJ,oBAAqB,WACjB,OAAOznL,KAAKuiC,OAAO,gCAEvBg8I,uBAAwB,SAAS7yJ,GAC7B,IAAI4yJ,EACJ,OAAQ5yJ,GACJ,IAAK,UACD4yJ,EAAgB,UAChB,MACJ,IAAK,YACDA,EAAgB,UAChB,MACJ,IAAK,YACDA,EAAgBt+K,KAAKuiC,OAAO,cAAgB,YAAc,gBAC1D,MACJ,IAAK,aACD+7I,EAAgBt+K,KAAKuiC,OAAO,cAAgB,gBAAkB,YAEtE,OAAO+7I,GAEXvE,oBAAqB,WACjB,IAAI9tG,EAAgBjsE,KAAKuiC,OAAO,kBAChC,MAAO,YAAc0pC,GAAiB,aAAeA,GAEzD+yG,oBAAqB,WACjB,OAAOh/K,KAAK+5K,uBAAyB7qI,EAAAA,sBAAoClvC,OAE7E0+K,uBAAwB,WACpB,MAAO,YAAc1+K,KAAKuiC,OAAO,kCAErC08I,UAAW,SAASlgK,EAAMG,EAAKq0B,EAAU8qI,GACrC,IAAIz2I,EAAO5nC,KACPw2E,EAAax2E,KAAK+lC,QAAQ,YAAY4xC,gBAO1C,OANI/vC,EAAKwyI,sBACL5jG,EAAW9sC,GAAG,UAAW,SAAS2uC,IAC9B7B,EAAW7sC,IAAI,SAAU0uC,GACzBrlC,WAAWpL,EAAK0+I,wBAAwBhiJ,KAAKsD,EAAM2L,EAAU8qI,OAG9D7nG,EAAWqqG,SAAS,CACvB9hK,KAAMA,EACNG,IAAKA,KAGb4kK,kBAAmB,SAAS3iJ,GACxB,OAAOU,EAAAA,EAAAA,GAAEV,GAAS4F,QAAQ,IAAM/mC,KAAKqhC,gBAAgBqwE,KAAkB9pF,OAAS,GAEpFo8J,oBAAqB,SAAS7iJ,GAC1B,IAAIsoJ,GAAoB5nJ,EAAAA,EAAAA,GAAEV,GAAS4F,QAAQ,IAAM8hE,IAC7C6gF,EAAoBD,EAAkB1iJ,QAAQ,IAAM/mC,KAAKynC,2BAA2BC,SACxF,OAAO+hJ,EAAkB7hK,QAAU8hK,EAAkB/iJ,GAAG3mC,KAAK8lC,UAAUpF,aAE3EipJ,+BAAgC,SAAStG,IAChCrjL,KAAK8jL,kBAAkBT,IAAcA,GACtCrjL,KAAKk8K,wBAAwBmH,IAGrCxD,gCAAiC,SAAShjJ,EAAQlc,GAC9C,GAAI3gB,KAAKgkL,oBAAoBnnJ,GAAS,CAClC78B,KAAKshL,4BAA2Bz/I,EAAAA,EAAAA,GAAEhF,GAASlc,GAC3C,IAAI0iK,EAAYrjL,KAAK4+K,aAAaj+J,EAAW,OAE7C,OADA3gB,KAAK2pL,+BAA+BtG,IAC7B,EAEX,OAAO,GAEXhE,gBAAiB,SAASxiJ,GACtB,OAAOgF,EAAAA,EAAAA,GAAEhF,GAAQ8J,GAAG,MAAQ,MAAQ,QAExCq3I,sBAAuB,WACnB,OAAOh+K,KAAK+9K,yBAA2B/9K,KAAKm6K,qBAEhDuG,uBAAwB,WACpB,OAAO1gL,KAAK62C,mBAAmBC,kBAAkB,MAAM,GAAMlvB,QAEjEmgK,aAAc,SAASnnI,EAAcgnI,GACjC,IAAIpoJ,EAAcohB,EAAaphB,YAC3BinJ,EAAsBzmL,KAAK0gL,yBAC/B,OAAOkH,EAAsBpoJ,GAAe,GAAKA,GAAeinJ,EAAsB,EAAIjnJ,EAAc,GAAKA,EAAcinJ,EAAsB,GAErJrF,0BAA2B,SAASvkJ,GAChC,IAEI6T,EAFA2wI,EAAcrhL,KAAKq/K,gBAAgBxiJ,GACnC2nB,GAAiB3iB,EAAAA,EAAAA,GAAEhF,GAOvB,OAJI6T,EADA,SAAW2wI,EACH78H,EAAezd,QAAQ,IAAIjf,OAAOiqB,GAAW,UAE7CyS,EAAe3T,WAAW+I,IAAI,IAAMkR,IAAsBnH,QAE/DjT,GAEXsrI,oBAAqB,WACjB,IAAIn2I,EAAW7lC,KAAK+lC,QAAQ,YAC5B,OAAOF,GAAYA,EAAS1E,WAEhC2jB,kBAAmB,WACf,OAAO9kD,KAAKuiC,OAAO,+BAEvBqnJ,iCAAkC,SAASr2I,EAAU/T,GACjD,GAAIx/B,KAAKq6K,sBAAuB,CAC5B,IAAIwP,EAAa7pL,KAAKq6K,sBAAsB9mI,WAAaA,GAAYvzC,KAAKq6K,sBAAsB76I,cAAgBA,EAEhH,OADAx/B,KAAKq6K,sBAAwB,KACtBwP,IAGfC,sBAAuB,WACnB,IAAIxuH,EAAiBt7D,KAAK0hC,gBACtBstC,EAAkBhvE,KAAKo+K,qBACvBtxG,EAAexR,EAAel+C,QAC9B2sK,EAAmBj9G,EAAallD,OAASklD,EAAallD,OAAS,GAAK,EACpE8oD,EAAiBpV,EAAeqV,oBACpCo5G,GAAoB,GAAK/6G,EAAkB+6G,GAAoB/pL,KAAKmkL,mBAAmB4F,EAAmBr5G,MAGvGs5G,GAA2B,CAClC9jI,eAAgB,WACZ,MAAO,CACHqnH,6BAA6B,EAC7BzkK,mBAAoB,CAChByL,SAAS,EACTmN,eAAgB,YAChBC,kBAAmB,OACnBF,gBAAgB,KAI5BusB,YAAa,CACTllC,mBAAoBkxK,IAExB5rI,UAAW,CACPF,MAAO,CACHrI,SAAU,CACN+N,UAAW,SAAStN,GAChB,IAAI81E,EAAep8G,KAAKqqC,cAAc,WAAW+uE,kBAC7Cv0D,EAAqB7kD,KAAKqqC,cAAc,sBACxC+xE,IAAiB91E,EAAEiN,UACnBsR,EAAmBi4H,mBAEvB,IAAImN,EAAiCtQ,MAAc35K,KAAKuiC,OAAO,qBAC3D0nJ,GACAjqL,KAAKkqL,gCAAgC5jJ,GAEzCtmC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9B6+J,gCAAiC,SAAS5jJ,GACtC,IAAIuc,EAAgBvc,EAAEmE,MAAMoY,cAC5B,GAAIA,EAAe,CACf,IAAIgC,EAAqB7kD,KAAKqqC,cAAc,sBACxCqG,GAAQ7O,EAAAA,EAAAA,GAAEghB,EAAchmB,QACxB2C,EAAcx/B,KAAKy9C,aAAa/M,GAChCviC,EAASnO,KAAKqqC,cAAc,WAAWyM,oBAAoBtX,GAC3DmG,EAAM3lC,KAAKqqC,cAAc,QAAQjtB,QAAQkpB,EAAEiN,UAC/C,GAAIsR,EAAmBojI,gBAAgBtiJ,EAAKx3B,GAAS,CACjD,IAAIosI,GAAYouC,EAAAA,GAAAA,IAAY9lI,EAAe,CACvC3P,cAAe2P,EAAchmB,SAEjCgoB,EAAmBy3H,qBAAqB/hC,MAIpD8rC,iBAAkB,SAASr7J,GACvB,IACIm7J,cAAeA,EACf5nB,gBAAiBA,GACjB,OAASvzI,QAAU,IAAWA,EAASA,EAAS,GAChD65B,EAAqB7kD,KAAKqqC,cAAc,sBACxCo3C,EAAmBzhF,KAAKmhC,UACxBsgD,KAAqButB,EAAAA,GAAAA,IAAQvtB,IAC7BA,EAAiBr3C,KAAK,WAAY,MAEtCm0H,GAAmB15G,EAAmBilI,wBACtC,IAAIv2I,EAAWsR,EAAmBu5H,wBAC7B3tJ,EAAAA,EAAAA,IAAU8iB,IAAaA,EAAW,KACnCA,EAAW,GAEf,IAAI42I,EAAenqL,KAAK8/C,gBAAgBvM,GACpCsR,EAAmBC,qBAAuBqlI,EAAaviK,QACvD5nB,KAAKoqL,2BAA2BD,EAAchE,IAGtDiE,2BAA4B,SAASD,GACjC,IAAItlI,EAAqB7kD,KAAKqqC,cAAc,sBACxCiM,EAAO6zI,EAAajlJ,GAAG,GAAGwC,SAC9B,GAAI+O,GAAWH,GACXuO,EAAmBq3H,wBAAwB5lI,OACxC,CACH,IAAI9W,EAAcqlB,EAAmB07H,oBAChC9vJ,EAAAA,EAAAA,IAAU+O,IAAgBA,EAAc,KACzCA,EAAc,GAElBx/B,KAAKqqL,2BAA2BF,EAAc3qJ,KAGtD6qJ,2BAA4B,SAASF,EAAc3qJ,GAC/C,IAAIqlB,EAAqB7kD,KAAKqqC,cAAc,sBACxCigJ,EAAqBH,EAAeA,EAAaviK,QAAU,EAC3D2iK,EAAqB,SAAS75I,GAC9B,IAAI85I,EAAqB3lI,EAAmBm/H,oBAAoBtzI,GAC5D+5I,EAAc5lI,EAAmBu+H,aAAa1yI,GAClD,IAAK85I,GAAsBC,GAAejR,GAAc9oI,GAGpD,OAFAmU,EAAmBq3H,wBAAwBxrI,GAC3CmU,EAAmBi4H,oBACZ,GAGXpsI,EAAQy5I,EAAavmK,OAAO,mBAAmBkE,OAAO0X,EAAc,EAAG,OAC3E,GAAIkR,EAAM9oB,OACN2iK,EAAmB75I,OAChB,CACC45I,GAAsB9qJ,IACtBA,EAAc8qJ,EAAqB,GAEvC,IAAK,IAAIzyJ,EAAI2H,EAAa3H,EAAIyyJ,IAAsBzyJ,EAChD,GAAI0yJ,GAAmB1oJ,EAAAA,EAAAA,GAAEsoJ,EAAatyJ,KAClC,QAKhBogB,uBAAwB,SAASphC,GAC7B7W,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1BrrB,KAAK0qL,qBAAqB7zK,IAE9B6zK,qBAAqB7zK,GACjB,IACIsoD,eAAgBA,EAChBjzD,mBAAoBA,GACpB,OAAS2K,QAAU,IAAWA,EAASA,EAAS,IAEhDwoD,WAAYA,EACZ98C,SAAUA,GACV,OAAS48C,QAAkB,IAAWA,EAAiBA,EAAiB,GAC5E,IAAKtoD,IAAW3K,GAAsBmzD,GAAc98C,EAAU,CAC1D,IAAI4jK,EAAgBrM,GAAoB95K,MACxCA,KAAKqmL,iBAAiB,CAClBF,cAAeA,EACf5nB,gBAAiBh8I,MAI7B2pB,YAAa,SAASr1B,GAClB7W,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1BrrB,KAAK0qL,qBAAqB7zK,IAE9BiwG,kBAAmB,SAASp2E,GACxB,IAAIi6I,EAAiB3qL,KAAK4qL,mBAAmBl6I,GACzCmU,EAAqB7kD,KAAKqqC,cAAc,sBACxCm0I,EAA0B35H,GAAsBA,EAAmBm5H,wBACnE2M,GAAkBnM,GAClBx+K,KAAK6qL,6BAA6BF,GAEtC3qL,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9Bw/J,6BAA8B,SAASF,GACnC,CAAC,YAAa,WAAW9uI,SAAS,SAAS1hB,GACvC,IAAI2wJ,EAAqBH,EAAe79E,iBAAiB3yE,GACzDwwJ,EAAe39E,mBAAmB7yE,GAASmM,IACvC,IAAIykJ,EAAmB,SAAWJ,EAAej/E,SAASthE,KAAK,iBAC/D,GAAI2gJ,EACA,OAAOD,GAAsBA,EAAmB5+J,KAAKy+J,EAAgBrkJ,SAIjFqkJ,EAAe39E,mBAAmB,YAAa18D,EAAAA,IAC/Cq6I,EAAe39E,mBAAmB,aAAc18D,EAAAA,IAChD,IAAI06I,EAAoBL,EAAe3/I,OAASguI,IAAuB2R,EAAepoJ,OAAO,mBACzFyoJ,GACAL,EAAe39E,mBAAmB,QAAS18D,EAAAA,KAGnDs6I,mBAAoB,SAASl6I,GACzB,IAAIkmD,EAAUlmD,EAAMnP,KAAK,kBAAkB2D,GAAG,GAC9C,OAAOgK,EAAAA,kBAAgC0nD,MAInD5oD,YAAa,CACTxmC,QAAS,CACLg/G,SAAU,SAASjzE,EAAU/T,GACzB,IAAIqlB,EAAqB7kD,KAAKqqC,cAAc,sBAC5C,GAAIwa,EAAmB+kI,iCAAiCr2I,EAAU/T,GAC9D,OAAO,EAEX,IAAI21C,EAAgBn1E,KAAKs6B,SAASiZ,EAAU/T,GAI5C,OAHI21C,GACAtwB,EAAmBy1H,mBAEhBnlG,GAEX99D,QAAS,SAASk8B,GACd,IAAIsR,EAAqB7kD,KAAKqqC,cAAc,sBACxC29I,EAAqBnjI,EAAmBpF,wBACxCtxC,EAASnO,KAAK62C,mBAAmBC,oBAAoBkxI,IACrD75K,GAAUA,EAAOW,MAAQ9O,KAAKuiC,OAAO,kBAAoBgwE,KACzD1tD,EAAmBi3H,oBAEvB97K,KAAKs6B,SAASiZ,IAElBx8B,OAAQ,SAASgkG,GACb,IAAIl2D,EAAqB7kD,KAAKqqC,cAAc,sBAG5C,OAFAwa,EAAmBy1H,mBACnBz1H,EAAmBi4H,mBACZ98K,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCysF,oBAAqB,SAASvkE,GAC1B,IAAI03I,EAA+BjrL,KAAKqqC,cAAc,sBAClDqG,EAAQ1wC,KAAKs6B,SAASiZ,GAC1B,GAAI03I,EAA6BnmI,qBAAuBmmI,EAA6B7Q,qBAAqB7mI,WAAaA,EAAU,CAC7H,IAAIwnI,EAAekQ,EAA6BjQ,kBAC5CtB,GAAiBqB,KAAkBA,EAAanrI,SAAS0jE,MACzD5iE,EAAQqqI,GAGhB,OAAOrqI,GAEXsuE,4BAA6B,WACzBh/G,KAAK0mH,gBAAgBr4F,MAAK,KACtB,IAAIvlB,EAAqB9I,KAAKqqC,cAAc,sBAC5CvhC,EAAmBqlG,mBAG3BllE,KAAM,WACFjpC,KAAKs6B,WACLt6B,KAAKkrL,8BAAgClrL,KAAKqqC,cAAc,uBAE5Dq8E,cAAe,WACX,IAAI59G,EAAqB9I,KAAKkrL,8BAC9BpiL,EAAmBqxK,qBAAsB,EACzC,IAAInxJ,EAAShpB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAEvC,OADAviB,EAAmBqlG,eACZnlF,GAEXk0F,mBAAoB,WAChBl9G,KAAKkrL,8BAA8B3Q,eAAgB,EACnDv6K,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAE9B8xF,gBAAiB,WACb,IAAIr0G,EAAqB9I,KAAKqqC,cAAc,sBACxCz0B,EAAS5V,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACvC,GAAIzV,IAAW9M,EAAmB0yK,aAAc,CAC5C,IAAI9qI,EAAQ5nC,EAAmBkyK,kBAC/BlyK,EAAmB06K,OAAO9yI,GAAO,GAErC,OAAO96B,IAGflG,KAAM,CACF6gE,mBAAoB,SAAS46G,GACzB,IAAIvjJ,EAAO5nC,KACPirL,EAA+BrjJ,EAAKyC,cAAc,sBAClD+9C,EAAgBxgD,EAAKyC,cAAc,iBACnCs9I,EAAsBsD,EAA6B7Q,qBAEvD,GADAxyI,EAAKtN,SAAS7G,MAAMmU,EAAMvc,WACtBs8J,GAAuBA,EAAoBp0I,UAAY,EAAG,CAC1D,IAAI63I,EAA4BD,EAAsBxD,EAAoBp0I,UACtE63I,IACAzD,EAAoBp0I,UAAY63I,EAChChjG,EAAc6mB,aAI1B63E,eAAgB,WACZ,IAAI99J,EAAShpB,KAAKod,QAAQwK,OAAS,EAC/B80G,EAAoB18H,KAAK08H,oBAI7B,OAHIA,IACA1zG,GAAU0zG,EAAkBC,MAAQD,EAAkB4C,KAEnDt2G,IAGfqiK,gBAAiB,CACbC,uBAAwB,SAAS/6J,GAC7B,IACIiyB,SAAUA,EACVrR,OAAQA,EACR4/H,gBAAiBA,GACjBxgJ,EACJvwB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1Bm3B,IAAa82H,KAAwBvI,GAAmB5/H,EAAO/f,MAAK,CAAC4C,EAAGwjB,KACpE,IAAI9G,GAAQ7O,EAAAA,EAAAA,GAAE2V,GACdoiI,GAAkBlpI,IAAUA,EAAMtG,KAAK,WAAY,OAG3DmhJ,uBAAwB,SAAS7qH,GAC7B,IACIle,SAAUA,EACV9R,MAAOA,EACPqgI,gBAAiBA,GACjBrwG,EACJ1gE,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACtBm3B,IAAa82H,KAAwBvI,GAAmB6I,GAAkBlpI,IAC1EA,EAAMsG,WAAW,iBCv8DzC,SAASw0I,GAAiB3zJ,EAAG4zJ,EAAO73J,EAAMuqE,GACtC,IAAItmD,EAAI,EACR,GAAIhgB,EAAI4zJ,EACJ,KAAO5zI,EAAIjkB,EAAKxW,MAAMwK,OAAQiwB,IAC1B2zI,GAAiB3zJ,EAAI,EAAG4zJ,EAAO73J,EAAKxW,MAAMy6B,GAAIsmD,GAGlDtmE,IAAM4zJ,GACNttF,EAASvqE,GAIjB,SAAS5B,GAAI05J,EAAOvtF,GAChB,IAAItmE,EACJ,GAAI,QAAS6zJ,EACT,OAAOA,EAAM15J,IAAImsE,GAErB,IAAIn1E,EAAS,IAAIjiB,MAAM2kL,EAAM9jK,QAC7B,IAAKiQ,KAAK6zJ,EACN1iK,EAAO6O,GAAKsmE,EAASutF,EAAM7zJ,GAAIA,GAEnC,OAAO7O,EAGX,SAAS2Y,GAAQzyB,GACb,OAAOA,IAAMA,GAAK,KAAOA,GAAK,OAASA,QAAK,IAAWA,EAG3D,SAASy8K,GAAQC,GACb,OAAOA,IAAeC,EAAAA,GAAAA,MAG1B,SAASC,GAAmBC,GACxB,IAAIjvJ,GAAWk1B,EAAAA,EAAAA,IAAc+5H,EAAUjvJ,UACnC7c,IAAkB,oBAAqB8rK,IAAYA,EAAU9rK,gBAC7D2rK,EAAaG,EAAUH,WAC3B,GAAI,kBAAoBA,IACpBA,EAAaC,EAAAA,GAAYD,IACpBA,GACD,MAAMjgK,GAAAA,GAAAA,MAAa,QAASogK,EAAUH,YAG9C,MAAO,CACH9uJ,SAAUA,EACV8uJ,WAAYA,EACZ3rK,gBAAiBA,GCvDzBuqC,GAAAA,eAAwB,qBAAsBw/H,ID0D9C,OAAeh5J,EAAAA,EAAAA,QAAc,CACzBC,KAAM,SAAS3P,GACXthB,KAAKgsL,MAAQ1qK,EAAQ5R,KACrB1P,KAAKisL,YAAc3qK,EAAQ6hF,YAAc,EACzCnjG,KAAKksL,iBAAmBl6J,GAAI1Q,EAAQ6qK,iBAAmB,GAAIL,IAC3D9rL,KAAKosL,iBAAmBp6J,GAAI1Q,EAAQ+qK,iBAAmB,GAAIP,IAC3D9rL,KAAKssL,QAAU,IAEnBC,UAAW,WACHvsL,KAAKksL,iBAAiBtkK,QACtB5nB,KAAKwsL,iBAAiB,EAAG,CACrBpvK,MAAOpd,KAAKgsL,QAGhBhsL,KAAKosL,iBAAiBxkK,QAAU5nB,KAAKisL,YAAc,GACnDjsL,KAAKysL,iBAAiB,CAClBrvK,MAAOpd,KAAKgsL,SAIxBG,gBAAiB,WACb,OAAOnsL,KAAKssL,SAEhBI,WAAY,SAASC,EAAYj9K,EAAM4J,GAEnC,IADA,IAAIsO,EAASlY,EAAK0N,MAAQ1N,EAAK0N,MAAMwK,OAAS,EACrCiQ,EAAI,EAAGA,EAAI80J,EAAW/kK,OAAQiQ,IACnC,GAAI8zJ,GAAQgB,EAAW90J,GAAG+zJ,YACtBtyK,EAAUue,IAAMve,EAAUue,IAAM,GAAKjQ,OAGzC,IAAK,IAAIiwB,EAAI,EAAGA,EAAIjwB,EAAQiwB,IACxB73C,KAAK4sL,YAAY/0J,EAAG80J,EAAW90J,GAAIve,EAAW5J,EAAK0N,MAAMy6B,KAIrE20I,iBAAkB,SAAS5mC,EAAOl2I,GAI9B,GAHI,IAAMk2I,IACN5lJ,KAAKssL,QAAUtsL,KAAK6sL,MAAM7sL,KAAKksL,mBAE/BtmC,IAAU5lJ,KAAKisL,YACfjsL,KAAK0sL,WAAW1sL,KAAKksL,iBAAkBx8K,EAAM1P,KAAKssL,cAElD,IAAK,IAAIz0J,EAAI,EAAGA,EAAInoB,EAAK0N,MAAMwK,OAAQiQ,IACnC73B,KAAKwsL,iBAAiB5mC,EAAQ,EAAGl2I,EAAK0N,MAAMya,IAGhD,IAAM+tH,IACN5lJ,KAAKssL,QAAUtsL,KAAK8sL,UAAU9sL,KAAKksL,iBAAkBlsL,KAAKssL,WAGlEG,iBAAkB,SAAS74J,GACvB,IAAIm5J,EAAW/sL,KAAKisL,YAChB5mC,EAAe0nC,EAAW,EAC1BC,EAAShtL,KAAK6sL,MAAMvoJ,KAAKtkC,KAAMA,KAAKosL,kBACpCa,EAASjtL,KAAK0sL,WAAWpoJ,KAAKtkC,KAAMA,KAAKosL,kBACzCc,EAAaltL,KAAK8sL,UAAUxoJ,KAAKtkC,KAAMA,KAAKosL,kBAEhD,SAASR,EAAWv3J,GAChBA,EAAKs4J,WAAaK,EAAO3nC,EAAe,GACpCA,IAAiB0nC,EACjBE,EAAO54J,EAAMA,EAAKs4J,YAElBnB,GAAiBnmC,EAAc0nC,EAAU14J,GAAO,SAAS84J,GACrDF,EAAOE,EAAW94J,EAAKs4J,eAG/Bt4J,EAAKs4J,WAAaO,EAAW74J,EAAKs4J,YAEtC,QAAStnC,EAAe,EACpBmmC,GAAiB,EAAGnmC,EAAczxH,EAAMg4J,IAGhDiB,MAAO,SAASF,EAAYr6K,GACxB,OAAO0f,GAAI26J,GAAa,SAASZ,GAC7B,IAAIH,EAAaG,EAAUH,WACvBwB,EAAO,SAAUxB,GAAa9zJ,EAAAA,EAAAA,IAAW8zJ,EAAWwB,MAAQxB,EAAWwB,KAAK96K,GAAcs5K,EAAWwB,KAAOC,IAChH,OAAOD,MAGfR,YAAa,SAASU,EAAgBvB,EAAWr7J,EAASzJ,GACtD,IAAI3mB,EAAQyrL,EAAUjvJ,SAAS7V,GAC3B2kK,EAAaG,EAAUH,WACvB3rK,EAAkB8rK,EAAU9rK,gBAC5BA,GAAmB0hB,GAAQrhC,KAG3BowB,EAAQ48J,KAAoB58J,EAAQ48J,GACpC58J,EAAQ48J,GAAkBhtL,EAE1BowB,EAAQ48J,GAAkB1B,EAAW2B,KAAK78J,EAAQ48J,GAAiBhtL,KAG3EwsL,UAAW,SAASH,EAAYj8J,GAC5B,OAAOsB,GAAI26J,GAAa,SAASZ,EAAW3hK,GACxC,IAAIojK,EAAMzB,EAAUH,WAAW6B,SAC/B,OAAOD,EAAMA,EAAI98J,EAAQtG,IAAUsG,EAAQtG,SE3HnDsjK,GAA8B,2BAC9BC,GAA8B,2BAC9BC,GAA8B,2BAC9BC,GAA8B,2BAC9BC,GAAoC,iCACpCC,GAAwB,qBACxBC,GAAiC,cAC1BC,GAAoB,SAASh6I,EAAM3yB,GAC1C,IAAIovB,GAAQ7O,EAAAA,EAAAA,GAAEoS,GACV9lC,EAASmT,EAAQnT,OACjB81B,EAAe3iB,EAAQ2iB,aACvBiqJ,EAAgB,GACpB,IAAK//K,EAAOk5B,SAAWpD,EAAc,CACjC,IAAK,IAAIpM,EAAI,EAAGA,EAAIoM,EAAarc,OAAQiQ,IAAK,CAC1C,IAAInS,EAAcue,EAAapM,GAC/Bq2J,EAAc7lK,MAAKwZ,EAAAA,EAAAA,GAAE,SAASsD,IAAI,YAAazf,EAAYzV,WAAa9B,EAAO8B,WAAW6xB,SAAS6rJ,IAA6B7rJ,SAAS8rJ,IAA6B9rJ,SAASpc,EAAYtW,UAAU49B,YAAY8gJ,GAAmC,UAAYxsK,EAAQwiB,SAASr0B,KAAK+6C,GAAAA,eAAwB9kC,EAAapE,EAAQkF,gBAEvUkqB,EAAMK,OAAOm9I,KAGjBC,GAAwB,SAASvmJ,EAAMtmB,GACvC,IAAIkF,EAAeohB,EAAKrF,OAAO,kBAAoB,GACnD,MAAO,CACH9b,UAAWnF,EAAQqkB,IACnB1B,aAAc3iB,EAAQqkB,IAAIqqC,aAAa1uD,EAAQke,aAC/ChZ,aAAcA,IAGlB4nK,GAAqB,SAAS1+K,GAC9B,OAAOA,EAAKvC,SAAWuC,EAAKi9K,YAAc,IAE1CtmK,GAA0B,SAASuhB,GACnC,OAAOA,EAAKrF,OAAO,oCAEZ8rJ,GAAaz5I,GAAYxJ,QAAQ,CACxCwP,SAAU,WACN,OAAO56C,KAAK0hC,gBAAgB4sJ,eAEhClyI,gBAAiB,SAAS96B,GACtB,OAAOsK,EAAAA,EAAAA,GAAO5rB,KAAKs6B,SAAShZ,GAAU6sK,GAAsBnuL,KAAMshB,KAEtE+6B,mBAAoB,SAAS3L,EAAOpvB,GAChC2sK,GAAkBv9I,EAAOpvB,GACzBthB,KAAKs6B,SAASoW,EAAOpvB,IAEzB4qB,YAAa,SAASr1B,GAClB,IAAI03K,GAAuB,EACvB9nK,EAAYzmB,KAAK0hC,gBAAgB4sJ,cAAc,GAC9Cz3K,GAAWA,EAAOgkC,gBACnB76C,KAAKmhC,UAAU0J,QAAQ/I,SAAS4rJ,IAA6B1gJ,YAAY+gJ,IAAwB/tL,KAAKuiC,OAAO,oBAC7GgsJ,GAAuB,GAEvB9nK,GAAaA,EAAUupD,cAAgBvpD,EAAUupD,aAAapoD,SAC9D5nB,KAAK4+C,eAAe5+C,KAAKw6C,aAAa,CAClC3jC,OAAQA,IACRA,GACJ03K,GAAwBvuL,KAAKs+C,8BAGrCM,eAAgB,SAAS4vI,EAAW33K,GAChC,IAAIA,GAAU,WAAaA,EAAO4jC,aAAc5jC,EAAOgkC,cAKnD,OAAO76C,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAJjC,IAAIirB,EAAOt2C,KAAK49C,kBAAkBrc,KAAK,WACnCktJ,EAAUD,EAAUjtJ,KAAK,WAC7BvhC,KAAKw7C,aAAalF,EAAMm4I,EAAS53K,EAAOgkC,cAAc,KAK9DjH,UAAW,SAAStN,GAChB,IAAIrf,EAAOjnB,KAAK0hC,gBAAgB4sJ,cAAchoJ,EAAEiN,WAAa,GAC7DvzC,KAAK2qC,cAAc,cAAc/e,EAAAA,EAAAA,GAAO,GAAI0a,EAAGrf,KAEnDm2B,qBAAsB,SAAS9W,GAC3B,IAAI+W,EAAc/W,EAAE+W,YAChB/W,EAAEwU,YAAYvyC,WAGd80C,EAAY7vC,OAAS6vC,EAAY1H,eACjC31C,KAAKs6B,SAASgM,IAGtB+X,mBAAoB,SAAS/X,GACzB,IAAImU,EAAanU,EAAEmU,WACf,WAAanU,EAAEmU,YAAcnU,EAAEp6B,mBAC1Bo6B,EAAEooJ,mBAEIpoJ,EAAEooJ,mBAAmB9mK,QAC5B5nB,KAAKylC,OAAO,KAAM,CACdgV,WAAY,SACZI,cAAe,CAACvU,EAAEooJ,sBAJtB1uL,KAAKylC,SAOF,YAAcgV,GAAc,WAAaA,GAAc,YAAcA,GAC5Ez6C,KAAKylC,UAGb5C,UAAW,WACP,OAAO7iC,KAAKwsC,oBAEhB/K,UAAW,WACP,QAASzhC,KAAK0hC,gBAAgB4sJ,cAAc1mK,UAGhD+mK,GAAmC,CACnC1lJ,KAAM,WACFjpC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1BrrB,KAAKksL,iBAAmB,GACxBlsL,KAAK4uL,eAAiBt+I,EAAAA,IAE1Bu+I,cAAe,SAASD,GACpB,IAAKvjK,UAAUzD,OACX,OAAO5nB,KAAK4uL,gBAEZ92J,EAAAA,EAAAA,IAAW82J,KACX5uL,KAAK4uL,eAAiBA,IAG9BzhL,QAAS,SAAS2hL,GACd,IAAKzjK,UAAUzD,OACX,OAAO5nB,KAAK4uL,iBAEhB5uL,KAAK4uL,eAAiB,WAClB,OAAOE,IAGf3C,gBAAiB,WACb,OAAOnsL,KAAKksL,kBAEhB9nF,iCAAkC,WAC9B,IAAIj3F,EAAUnN,KAAKmN,UACf4hL,EAAmB5hL,GAAWA,EAAQ6hL,eAC1C,OAAOD,GAAoBA,EAAiBnnK,QAEhDy8E,wBAAyB,SAASjnF,EAAO+/E,EAAQkF,GAC7C,IAAI4sF,EAAeruF,GAAAA,EAAAA,iBAA4BK,EAAAA,GAAAA,GAAU7jF,GAAQ+/E,GAAQp0C,UACrE//B,EAAS,GAmBb,OAlBAq5E,EAAMxmD,SAAS,SAAS1nB,IAClB,SAAS+6J,EAAa/xF,EAAQn+B,EAAYm/B,EAAUhqE,GAClDA,EAAOA,GAAQ,GACf,IAAK,IAAI0D,EAAI,EAAGA,EAAIslE,EAAOv1E,OAAQiQ,IAC/B1D,EAAK9L,KAAK80E,EAAOtlE,GAAGnM,KAChB,IAAMszC,EACNm/B,EAAShqE,EAAMgpE,EAAOtlE,GAAGza,OAEzB8xK,EAAa/xF,EAAOtlE,GAAGza,MAAO4hD,EAAa,EAAGm/B,EAAUhqE,GAE5DA,EAAKtJ,MATX,CAWAokK,EAAc9xF,EAAOv1E,QAAS,SAASunK,EAAW/xK,GAC5C+W,EAAKiM,aAAe+uJ,EAAU/uJ,aAC9BpX,EAASA,EAAOlB,OAAO1K,UAI5B4L,IAGXomK,GAAyC,WACzC,IAAIC,EAAsB,SAASznJ,EAAMz6B,EAASuC,EAAMyzF,GACpD,IAAImsF,EACJ,GAAIjpK,GAAwBuhB,GAAO,CAC/B,IAAIqtC,EAAoBrtC,EAAKyC,cAAc,WAC3C,GAAI4qC,EAAmB,CACnB,IAAIs6G,EAAet6G,EAAkBshC,kBACjCg5E,EAAa3nK,SACblY,EAAO,SAAS8/K,EAAe9/K,EAAM6/K,EAAcpsF,GAC/C,OAAIA,EACOqsF,EAAe9/K,EAAM6/K,EAAav9J,KAAI/K,IAAQ,CACjD7J,MAAO,CAAC6J,MACRk8E,EAAa,IAEdzzF,EAAKoY,OAAOynK,GANhB,CAOL7/K,EAAM6/K,EAAcpsF,IAE1B,IAAIssF,EAAcx6G,EAAkBuhC,iBAChCi5E,EAAY7nK,SACZlY,EAAO,SAASggL,EAAiBhgL,EAAM+/K,EAAatsF,GAChD,OAAIA,EACOzzF,EAAKsiB,KAAItiB,IACZ,IAAIigL,EAAc,GACdC,EAAeF,EAAiBhgL,EAAK0N,OAAS,GAAIqyK,EAAatsF,EAAa,GAOhF,OANAhjG,OAAOC,eAAeuvL,EAAa,aAAc,CAC7ChwJ,IAAK,IAAMjwB,EAAKi9K,WAChBkD,IAAKvvL,IACDoP,EAAKi9K,WAAarsL,MAGnBsrB,EAAAA,EAAAA,GAAO+jK,EAAajgL,EAAM,CAC7B0N,MAAOwyK,OAIZlgL,EAAKkU,QAAOlU,GAAQ+/K,EAAYplK,QAAQ3a,GAAQ,IAhBpD,CAiBLA,EAAM+/K,EAAatsF,KAajC,OATIh2F,IACAmiL,EAAa,IAAIQ,GAAoB,CACjC3D,gBAAiBh/K,EAAQg/K,gBACzBE,gBAAiBl/K,EAAQk/K,gBACzB38K,KAAMA,EACNyzF,WAAYA,IAEhBmsF,EAAW/C,aAER+C,EAAaA,EAAWnD,kBAAoB,IAEnD4D,EAAsB,SAASrgL,EAAMmU,EAAO1W,GAC5C,IAAI6hL,EAAe7hL,GAAWA,EAAQ6hL,cAAgB7hL,EAAQ6hL,eAC9D,OAAIA,GAAgBA,EAAapnK,OACtB,SAASooK,EAAwB5yK,EAAO+/E,EAAQ6xF,GACnD,IAAK5xK,IAAU+/E,EAAOv1E,OAClB,OAAOxK,EAEX,IAEIoe,EAFA3X,EAAQs5E,EAAO,GACfwD,EAAQquF,EAAa,GAsBzB,OApBInrK,GAAS88E,GAASA,EAAM/4E,SACxB4T,GAAQylE,EAAAA,GAAAA,GAAU7jF,IAClBgU,EAAAA,EAAAA,IAAKuvE,GAAQ,SAASv2E,GAEdoR,EADA,IAAMpR,EACEoR,EAAMy0J,OAAOjwL,KAAK88B,SAAU98B,KAAKg5B,MAEjCwC,EAAM00J,OAAOlwL,KAAK88B,SAAU98B,KAAKg5B,SAGjDwC,EAAM0lE,YAAY7yE,MAAM,SAAS8hK,GAC7B/yK,EAAQ+yK,MAGhBhzF,EAASA,EAAOpzE,MAAM,GACtBilK,EAAeA,EAAajlK,MAAM,GAC9BozE,EAAOv1E,QAAUonK,EAAapnK,SAC9BwJ,EAAAA,EAAAA,IAAKhU,GAAQ,WACTpd,KAAKod,MAAQ4yK,EAAwBhwL,KAAKod,MAAO+/E,EAAQ6xF,MAG1D5xK,EA3BJ,CA4BL1N,EAAMmU,EAAOmrK,GAEZt/K,GAEX,MAAO,CACH+1D,2BAA4B,SAASnkD,GACjC,IAAInU,EAAUnN,KAAKmN,UACfA,IACImU,EAAQtV,iBAAiBmB,QACpBmU,EAAQskD,kBAAmBtkD,EAAQq+C,iBAAiB2I,eACjDhnD,EAAQq+C,iBAAiB97C,QACrBvC,EAAQtV,iBAAiBzD,SACzB+Y,EAAQq+C,iBAAiBqkC,aAAe72F,EAAQk/K,gBACzCl/K,EAAQk/K,gBAAgBzkK,SAC/BtG,EAAQtV,iBAAiBD,QAAS,IAG1CuV,EAAQq+C,iBAAiBywH,aAAejjL,EAAQg/K,kBAE7Ch/K,EAAQg/K,gBAAgBvkK,QAAUza,EAAQk/K,gBAAgBzkK,QAAUtG,EAAQq+C,iBAAiB97C,SACpGvC,EAAQtV,iBAAiBD,QAAS,IAG1C/L,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1B,IAAIk7C,EAAcjlD,EAAQm/C,WAAWlyC,MACjCg4C,GAAeA,EAAYp5D,UAAYmU,EAAQskD,kBAC/CtkD,EAAQq+C,iBAAiBywH,kBAAe,IAGhDnpH,sBAAuB,SAAS3lD,GAC5B,IAAI67E,GAASt9D,EAAAA,EAAAA,IAAqBve,EAAQq+C,iBAAiB97C,OAASvC,EAAQ2Z,YAAYpX,OAAS,IAC7F7X,EAAmBsV,EAAQtV,kBAAoB,GAC/CmB,EAAUnN,KAAK6uL,eAAL7uL,CAAqBgM,GACnC,IAAKsV,EAAQskD,iBAAmBtkD,EAAQq+C,iBAAiB2I,aACrD,GAAIt8D,EAAiBmB,SACZnB,EAAiBD,QAAUoxF,EAAOv1E,QAAUza,IACxCnB,EAAiBzD,UAClB8mL,EAAoBrvL,KAAM,CACtBqsL,gBAAiBl/K,EAAQk/K,iBAC1B/qK,EAAQ5R,KAAMytF,EAAOv1E,QAE5BtG,EAAQ5R,KAAOqgL,EAAoBzuK,EAAQ5R,KAAMytF,EAAQhwF,SAE1D,IAAKnB,EAAiBD,QAAUoB,EAAS,CAC5C,IAAIozD,EAAqB8vH,EACrBlxH,EAAiB79C,EAAQ69C,gBAAkB,GAC3CmxH,EAAgBnwL,OAAOs6B,KAAK0kC,GAAgBhpC,MAAKrnB,GAAQqwD,EAAerwD,KAC5E,IAAKwhL,GAAmB,QAAU/vH,EAAsBj/C,EAAQm/C,kBAAe,IAAWF,GAAuB,QAAU8vH,EAAwB9vH,EAAoBhyC,aAAU,IAAW8hK,IAAyBA,EAAsBljL,SAAYgwF,EAAOv1E,QAAUza,EAAQk/K,gBAAgBzkK,OAAQ,CACpS,IAAIukK,EAAkBkD,EAAoBrvL,KAAMmN,EAASmU,EAAQ5R,KAAMytF,EAAOv1E,QAC9EtG,EAAQiN,OAAQ2B,EAAAA,EAAAA,IAAc5O,EAAQiN,OAASjN,EAAQiN,MAAQ,GAC/DjN,EAAQiN,MAAMphB,QAAUg/K,EACpB7qK,EAAQm/C,aACRn/C,EAAQm/C,WAAWlyC,MAAQjN,EAAQiN,OAG3CjN,EAAQ5R,KAAOqgL,EAAoBzuK,EAAQ5R,KAAMytF,EAAQhwF,GAG5DmU,EAAQskD,kBACT5lE,KAAKksL,iBAAmB5qK,EAAQiN,OAASjN,EAAQiN,MAAMphB,SAAWnN,KAAKksL,kBAE3ElsL,KAAKs6B,SAAShZ,KA/ImB,GAmJ7CgxD,GAAAA,OAAyBq8G,IACzBr8G,GAAAA,OAAyB88G,IACzB5kI,GAAAA,eAAwB,UAAW,CAC/BtE,eAAgB,WACZ,MAAO,CACH/4C,QAAS,CACLiZ,gBAAY,EACZE,gBAAY,EACZH,4BAAwB,EACxBlG,iBAAiB,EACjBoG,yBAAyB,EACzB1R,MAAO,CACHoS,IAAK0iB,EAAAA,EAAAA,OAA2B,yBAChCziB,eAAgByiB,EAAAA,EAAAA,OAA2B,oCAC3CvmB,IAAKumB,EAAAA,EAAAA,OAA2B,yBAChC3iB,eAAgB2iB,EAAAA,EAAAA,OAA2B,oCAC3CxmB,IAAKwmB,EAAAA,EAAAA,OAA2B,yBAChC5iB,eAAgB4iB,EAAAA,EAAAA,OAA2B,oCAC3C/iB,IAAK+iB,EAAAA,EAAAA,OAA2B,yBAChC9iB,eAAgB8iB,EAAAA,EAAAA,OAA2B,oCAC3C7iB,MAAO6iB,EAAAA,EAAAA,OAA2B,6BAG1Cz8B,4BAAwB,IAGhCkhC,MAAO,CACH2wC,WAAYwvG,IAEhBjgJ,UAAW,CACPJ,YAAa,CACTt+B,KAAM,CACF6gL,cAAe,SAASpiL,GACpB,OAAOA,MAAYsiB,EAAAA,EAAAA,IAAUtiB,EAAOmE,aAAenE,EAAO+E,kBAE9Ds9K,sBAAuB,WAEnB,IADA,IAAIpqK,EAAapmB,KAAKuiC,OAAO,uBAAyB,GAC7C1K,EAAI,EAAGA,EAAIzR,EAAWwB,OAAQiQ,IAAK,CACxC,IAAItR,EAAYH,EAAWyR,GACvB1pB,EAASnO,KAAK62C,mBAAmB6J,aAAan6B,EAAUxG,cAAgBwG,EAAUpY,QACtF,GAAIoY,EAAUvG,mBAAqBhgB,KAAKuwL,cAAcpiL,GAClD,OAAO,EAGf,OAAO,GAEX+4F,mBAAoB,SAAS9pF,EAAO4hD,EAAY19C,GAC5C,IAAI5R,EAAO4R,GAAWA,EAAQ5R,KAC1BsZ,EAAShpB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAevC,OAdI/J,SACI,IAAWA,EAAQmvK,uBACnBnvK,EAAQmvK,qBAAuBzwL,KAAKwwL,yBAEpC9gL,GAAQA,EAAK0N,OAASkE,EAAQmvK,uBAAyBnvK,EAAQ+lF,2BAA6B33F,EAAKyxD,2BACjGn4C,EAAOX,KAAK,CACRyb,QAASkqJ,GACTtiK,IAAKpK,EAAQ6S,KAAKpK,QAClBra,KAAMA,EACN4C,WAAYgP,EAAQ6S,KAAKvM,OAAS,EAClC8T,OAAQ,MAIb1S,GAEXm+E,kBAAmB,SAAS5gF,EAAWjF,GACnC,IAAIsmB,EAAO5nC,KAIX,GAHKshB,EAAQovK,oBACTpvK,EAAQovK,kBAAoB9oJ,EAAKrF,OAAO,uBAAyB,IAEjE,UAAYhc,EAAUud,QAAS,CAC/B,IAAI4xC,GAAoB,EACpBi7G,GAAyB,GAC7Bv/J,EAAAA,EAAAA,IAAK9P,EAAQs1B,gBAAiB,SAASpjC,GACnC,IAAIujD,EAAaz1C,EAAQs1B,eAAepjC,EAAe,GACnD+S,EAAUjU,aAAetS,KAAKsS,aAC9BojE,EAAmB11E,KAAKoqB,OAExB5W,EAAe,GAAK,WAAaujD,EAAW1vB,SAAW,WAAarnC,KAAKqnC,UACzEspJ,EAAwB3wL,KAAKoqB,UAGrC7D,EAAUypD,aAAehwE,KAAK4wL,uBAAuBtvK,EAAQovK,kBAAmBtC,GAAmB7nK,EAAU7W,MAAO4R,EAAQs1B,gBAAiB,SAASlxB,EAAavX,GAC/J,OAAIuX,EAAY1F,mBACJ,EAER0F,EAAY7F,eAAiB1R,KAAWsiB,EAAAA,EAAAA,IAAUtiB,EAAOmE,aAAenE,EAAOic,QAAUumK,EAClFxiL,EAAOic,MAEPsrD,KAEX,GAOR,OALInvD,EAAUud,UAAYkqJ,KACtBznK,EAAUypD,aAAehwE,KAAK4wL,uBAAuBtvK,EAAQovK,kBAAmBtC,GAAmB7nK,EAAU7W,MAAO4R,EAAQs1B,gBAAiB,SAASlxB,EAAavX,GAC/J,OAAOuX,EAAY1F,mBAAqB4nB,EAAK2oJ,cAAcpiL,GAAUA,EAAOic,OAAS,MAGtF7D,GAEXqqK,uBAAwB,SAAS3sJ,EAAc0oJ,EAAY/1I,EAAgBi6I,EAA4Bp6I,GACnG,IAAI7O,EAAO5nC,KACPgwE,EAAe,GACf8gH,EAAwB,GAgC5B,OA/BA1/J,EAAAA,EAAAA,IAAK6S,GAAe,SAAS8sJ,EAAcrrK,GACvC,IAAIvX,EAASy5B,EAAKiP,mBAAmB6J,aAAah7B,EAAYvX,QAC1D4R,EAAe2F,EAAY3F,cAAgB6nB,EAAKiP,mBAAmB6J,aAAah7B,EAAY3F,eAAiB5R,EAC7GqxB,EAAcqxJ,EAA2BnrK,EAAa3F,GAC1D,GAAIyf,GAAe,EAAG,CACbsxJ,EAAsBtxJ,KACvBsxJ,EAAsBtxJ,GAAe,IAEzC,IAEQrf,EAFJ4rK,EAAYY,EAAWoE,GAC3B,GAAIhF,IAAcA,GAEVt7J,EAAAA,EAAAA,IAAU/K,EAAYvF,aACtBA,EAAcuF,EAAYvF,YACnB,UAAYuF,EAAYxF,cAC/BC,EAAcqqC,GAAAA,oBAA6Br8C,GAAUA,EAAOqD,WAEhEs/K,EAAsBtxJ,GAAanX,MAAKuD,EAAAA,EAAAA,GAAO,GAAIlG,EAAa,CAC5DplB,OAAO64C,EAAAA,EAAAA,IAAS4yI,IAAc59K,GAAUA,EAAO4/C,iBAAmB5/C,EAAO4/C,iBAAiBg+H,GAAaA,EACvG5rK,YAAaA,EACbqgB,cAAeryB,GAAUA,EAAOic,QAAUoV,EAAcrxB,EAAOiD,aAAU,UAKpFm9E,EAAAA,EAAAA,IAAcuiG,IACfl6I,EAAeiF,SAAQ,CAAC1tC,EAAQqF,KAC5B,IAAIujD,EAAangB,EAAepjC,EAAe,GAC3CgsB,GAAciX,GAAe,YAAc,OAASsgB,QAAc,IAAWA,OAAa,EAASA,EAAW1vB,UAAY,WAAal5B,EAAOk5B,QAAsFl5B,EAAOic,MAAlF,OAAS2sC,QAAc,IAAWA,OAAa,EAASA,EAAW3sC,MAChO4lD,EAAa3nD,KAAKyoK,EAAsBtxJ,IAAgB,OAGzDwwC,GAEXghH,iBAAkB,SAASC,EAAmB9E,GAC1C,IAAIvkJ,EAAO5nC,KACPiwC,EAAoBrI,EAAKiP,mBAC7B,OAAOjP,EAAKgpJ,uBAAuBK,EAAmB9E,EAAiBl8I,EAAkB6G,qBAAsB,SAASpxB,EAAavX,GACjI,OAAOy5B,EAAK2oJ,cAAcpiL,GAAUA,EAAOic,OAAS,MAG5D0mD,iBAAkB,SAASj6D,GACvB,IAAIm5D,EACA3oE,EAAarH,KAAK2jC,YAClB2qJ,EAActuL,KAAKkxL,aACnBC,EAAkB7C,GAAeA,EAAY,IAAMA,EAAY,GAAGt+G,aAClEihH,EAAoBjxL,KAAKuiC,OAAO,sBAEpC,GADAviC,KAAKkxL,aAAe,GAChB7pL,GAAc4pL,GAAqBA,EAAkBrpK,OAAQ,CAC7D,IAAIukK,EAAkB9kL,EAAW8kL,kBACjCn8G,EAAehwE,KAAKgxL,iBAAiBC,EAAmB9E,GACpDt1K,GAAUA,EAAO3K,oBAAsBilL,IACvCt6K,EAAO63K,mBAAqB1+G,EAAah+C,KAAK,SAASo/J,EAAahnK,GAChE,OAAIoB,KAAKC,UAAU2lK,KAAiB5lK,KAAKC,UAAU0lK,EAAgB/mK,IACxDA,GAEH,KACRxG,QAAOwG,GAASA,GAAS,KAE7B4lD,EAAapoD,QACb5nB,KAAKkxL,aAAa7oK,KAAK,CACnByb,QAAS,cACTksC,aAAcA,IAI1BhwE,KAAKs6B,SAASzjB,IAElBw6K,4BAA6B,SAASv0J,GAClC,GAAIzW,GAAwBrmB,MAAO,CAC/B,IAAIi1E,EAAoBj1E,KAAKqqC,cAAc,WAC3C,GAAI4qC,EACA,OAAO,SAASvlE,GAEZ,OADAA,EAAOulE,EAAkBmhC,eAAe1mG,GACjCotB,EAASptB,IAI5B,OAAOotB,GAEXw0J,0BAA2B,SAASx0J,EAAU8uJ,GAE1C,OADA9uJ,EAAW98B,KAAKqxL,4BAA4Bv0J,GACxC,QAAU8uJ,GAAc,QAAUA,EAC3B,SAASl8K,GACZ,IAAIpP,EAAQw8B,EAASptB,GACrB,OAAO+gB,EAAAA,EAAAA,IAAUnwB,GAASsG,OAAOtG,GAASA,GAG3Cw8B,GAEXy0J,eAAgB,SAASttJ,EAAcj4B,GACnC,IAAI47B,EAAO5nC,KACPiwC,EAAoBrI,EAAKyC,cAAc,WACvClkB,EAAyByhB,EAAKrF,OAAO,kCACrCivJ,EAAwB5pJ,EAAKrF,OAAO,2BACxC,OAAOvQ,EAAAA,EAAAA,IAAIiS,GAAgB,IAAK,SAASve,GACrC,IAAIvX,EAAS8hC,EAAkByQ,aAAah7B,EAAYvX,QACpD4C,EAAqB5C,GAAUA,EAAO4C,mBAAqB5C,EAAO4C,mBAAmBuzB,KAAKn2B,IAAU6jD,EAAAA,EAAAA,IAAc7jD,EAASA,EAAOoD,UAAYmU,EAAYvX,QAC1Jy9K,EAAalmK,EAAYxF,aAAe,QACxC4c,EAAWpX,EAAYvX,OACvB8R,GAAkBwQ,EAAAA,EAAAA,IAAU/K,EAAYzF,iBAAmByF,EAAYzF,gBAAkBuxK,EAC7F,GAAIxlL,EACA,MAAO,CACH8wB,SAAUpX,EAAYvX,OACtB+R,YAAa0rK,GAIjB,GADA9uJ,EAAW8K,EAAK0pJ,0BAA0BvgL,EAAoB66K,GAC1D,WAAaA,EAAY,CACpBzlK,IACDwF,EAAAA,EAAAA,IAAW,SACXxF,EAAyB,cAE7B,IAAI7E,EAAU,CACVwkB,UAAW8B,EAAK9B,UAChBx2B,KAAMoW,EAAYpW,MAEtB6W,EAAuB7E,GACvBA,EAAQmwK,eAAiB,YACzB7F,EAAa,CACTwB,KAAM,SAAS96K,GAMX,OALAgP,EAAQmwK,eAAiB,QACzBnwK,EAAQowK,gBAAa,EACrBpwK,EAAQhP,WAAaA,SACdgP,EAAQhhB,MACf6lB,EAAuB7E,GAChBA,EAAQowK,YAEnBnE,KAAM,SAASmE,EAAYpxL,GAKvB,OAJAghB,EAAQmwK,eAAiB,YACzBnwK,EAAQowK,WAAaA,EACrBpwK,EAAQhhB,MAAQA,EAChB6lB,EAAuB7E,GAChBA,EAAQowK,YAEnBjE,SAAU,SAASiE,GAKf,OAJApwK,EAAQmwK,eAAiB,WACzBnwK,EAAQowK,WAAaA,SACdpwK,EAAQhhB,MACf6lB,EAAuB7E,GAChBA,EAAQowK,aAI3B,MAAO,CACH50J,SAAUA,EACV8uJ,WAAYA,EACZ3rK,gBAAiBA,OAKjC0xK,aAAc,SAAS3C,EAAcvpK,EAAaqX,EAAUzpB,GACxD,GAAIoS,EAAa,CACb,IAAInT,EAAamT,EAAYnT,WAC7Be,EAAYA,GAAaoS,EAAYpS,WACjCod,EAAAA,EAAAA,IAAUne,KACV08K,EAAa18K,GAAc08K,EAAa18K,IAAe,GACvD08K,EAAa18K,GAAY+V,KAAK,CAC1ByU,SAAUA,EACV9D,KAAM,SAAW3lB,OAKjCu+K,iBAAkB,SAAS3tJ,EAAc30B,GACrC,IAAIuiL,GAAoB,EAUxB,OATIphK,EAAAA,EAAAA,IAAUnhB,KACV8hB,EAAAA,EAAAA,IAAK6S,GAAgB,IAAK,SAAS7Z,GAC/B,GAAIpqB,KAAKsP,OAASA,GAAQ8a,IAAU9a,GAAQtP,KAAKkgB,cAAgB5Q,GAAQtP,KAAKmO,SAAWmB,IAASoW,EAAc1lB,KAAMkgB,EAAcwF,EAAYxF,YAAa/R,EAASuX,EAAYvX,QAAQ+R,GAAe/R,GAAU+R,EAAc,IAAM/R,KAAYmB,GAE/O,OADAuiL,EAAmBznK,GACZ,EAEX,IAAI1E,EAAaxF,EAAa/R,KAG/B0jL,GAEXC,wBAAyB,SAAS9kL,EAAwB+kL,GACtD,IAAInqJ,EAAO5nC,KACPiwC,EAAoBrI,EAAKiP,mBACzB4iB,EAAexpB,EAAkB0e,kBACjCqgI,EAAe,GACnB,GAAK+C,GAAsBA,EAAkBnqK,OAsB7C,OAnBAwJ,EAAAA,EAAAA,IAAKpkB,GAA0B,IAAK,WAChC,IAAIqG,EAAYrT,KAAKqT,UACjBoS,EAAczlB,KAAKylB,YACnBosK,EAAmBjqJ,EAAKgqJ,iBAAiBG,EAAmB/xL,KAAK0lB,aACrE,KAAImsK,EAAmB,GAAvB,CAGA,IAAI/0J,EAAW,SAASptB,GACpB,OAAO0+K,GAAmB1+K,GAAMmiL,KAEhCphK,EAAAA,EAAAA,IAAUhL,IACVA,EAAcwqB,EAAkByQ,aAAaj7B,GAC7CmiB,EAAK+pJ,aAAa3C,EAAcvpK,EAAaqX,EAAUzpB,KAEvD+d,EAAAA,EAAAA,IAAKqoC,GAAe,SAASnnD,EAAYmT,GACrCmiB,EAAK+pJ,aAAa3C,EAAcvpK,EAAaqX,EAAUzpB,UAI5D27K,GAEX58G,6BAA8B,SAAS/qE,EAAY2E,GAC/C,IAAI47B,EAAO5nC,KACPsyE,EAAoBtyE,KAAKs6B,SAASjzB,EAAY2E,GAIlD,OAHAsmE,EAAkBu8G,eAAe,SAASmD,GACtC,OAAOpqJ,EAAKqqJ,mBAAmBD,GAA2BhmL,MAEvDsmE,GAEX2/G,mBAAoB,SAASjmL,GACzB,IAAI47B,EAAO5nC,KACP+xL,EAAoBnqJ,EAAKrF,OAAO,sBAChC2vJ,EAAoBtqJ,EAAKrF,OAAO,sBAChCv1B,EAAyB46B,EAAKrF,OAAO,0BACrC8pJ,EAAkBzkJ,EAAK2pJ,eAAeQ,EAAmB/lL,GAAoBA,EAAiBzD,UAAYyD,EAAiBmB,SAC3Hg/K,EAAkBvkJ,EAAK2pJ,eAAeW,EAAmBlmL,GAAoBA,EAAiBmB,SAClG,GAAIk/K,EAAgBzkK,QAAUukK,EAAgBvkK,OAC1C,MAAO,CACHykK,gBAAiBA,EACjBF,gBAAiBA,EACjB6C,aAAc,WACV,OAAOpnJ,EAAKkqJ,wBAAwB9kL,EAAwB+kL,MAK5E7oJ,cAAe,WACX,IAAIipJ,EAAUnyL,KAAKs6B,WAEnB,OADA63J,EAAQ9pK,KAAK,wBACN8pK,GAEXC,qBAAsB,SAASC,GAC3B,IAAIR,EAAmB7xL,KAAK4xL,iBAAiB5xL,KAAKuiC,OAAO,sBAAuB8vJ,GAC5E1F,EAAa3sL,KAAK2jC,YAAYwoJ,kBAClC,GAAIQ,EAAW/kK,QAAUiqK,GAAoB,EACzC,OAAOlF,EAAWkF,IAG1BjoJ,cAAe,SAASnV,GAChB,YAAcA,EAAKnlB,MAAQ,2BAA6BmlB,EAAKnlB,OAC7DmlB,EAAKnlB,KAAO,cAEhBtP,KAAKs6B,SAAS7F,IAElBwU,KAAM,WACFjpC,KAAKkxL,aAAe,GACpBlxL,KAAKs6B,YAETg0J,YAAa,WACT,OAAOtuL,KAAKkxL,eAGpB1pL,QAAS,CACL8qL,gBAAiB,WACTjsK,GAAwBrmB,QAAUA,KAAKmhH,YACvCnhH,KAAK0hC,gBAAgBw4B,QAAQ,CACzBkE,MAAM,EACNoV,aAAa,KAIzB6oC,WAAY,SAASrxF,GACjB,IAAIhC,EAAShpB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAIvC,OAHIL,EAAOlc,MACP9O,KAAKsyL,kBAEFtpK,GAEX41F,cAAe,WACX,IAAI51F,EAAShpB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAEvC,OADArrB,KAAKsyL,kBACEtpK,GAEX0vF,eAAgB,WACZ,IAAI1vF,EAAShpB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAEvC,OADArrB,KAAKsyL,kBACEtpK,KAInBklB,MAAO,CACHrI,SAAU,CACN+P,WAAY,SAASjQ,GACjB,IAAI2Q,EAAOt2C,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAErC,OADAsa,GAAO2Q,EAAKxU,SAAS6D,EAAI7B,UAAYkqJ,GAAiCH,GAA8B,IAC7Fv3I,GAEX2E,aAAc,SAAS3E,EAAMh1B,GACzBthB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACtB,UAAY/J,EAAQqkB,IAAI7B,SAAWxiB,EAAQqkB,IAAIqqC,cAAgB1uD,EAAQqkB,IAAIqqC,aAAapoD,QACxF5nB,KAAKuyL,yBAAyBj8I,EAAMh1B,IAG5CkxK,8BAA+B,SAAShzJ,EAAale,GACjD,QAAQmP,EAAAA,EAAAA,IAAUnP,EAAQxa,QAAQ04B,GAAaltB,aAAegP,EAAQqkB,IAAIqqC,aAAaxwC,GAAa5X,QAExG6qK,2BAA4B,SAASC,EAAkBpxK,GAEnD,IADA,IAAIqxK,EAAyB,EACpB96J,EAAI,EAAGA,EAAI66J,EAAkB76J,IAAK,CACvC,IAAI2H,EAAcle,EAAQqkB,IAAIqqC,aAAapoD,OAASiQ,EACpD86J,EAAyB3yL,KAAKwyL,8BAA8BhzJ,EAAale,GAAWuW,EAAI86J,EAE5F,OAAOA,GAEXJ,yBAA0B,SAASj8I,EAAMh1B,GACrC,IAAIsxK,EAAat8I,EAAKzF,WAAWrP,OAC7BkxJ,EAAmB9rL,OAAOgsL,EAAWxoJ,KAAK,aAAe,EACzDuoJ,EAAyB3yL,KAAKyyL,2BAA2BC,EAAkBpxK,GAC/EthB,KAAK6yL,6BAA6BD,EAAYtxK,EAASoxK,EAAkBC,IAE7EE,6BAA8B,SAASD,EAAYtxK,EAASoxK,EAAkBC,GAC1E,GAAIA,EAAyB,EAAG,CAC5BC,EAAWxoJ,KAAK,UAAWsoJ,EAAmBC,GAC9C,IAAK,IAAI96J,EAAI,EAAGA,EAAI86J,EAAwB96J,IAAK,CAC7C,IAAI2H,EAAcle,EAAQxa,QAAQ8gB,OAAS+qK,EAAyB96J,EACpE73B,KAAKq7C,YAAYu3I,EAAWlrJ,UAAU9b,EAAAA,EAAAA,GAAO,CACzCzd,OAAQmT,EAAQxa,QAAQ04B,GACxBA,YAAax/B,KAAK8yL,qBAAqBtzJ,EAAale,EAAQxa,UAC7Dwa,OAIfwxK,qBAAsB,SAAStzJ,GAC3B,OAAOA,GAEX+c,iBAAkB,SAASj7B,GACvB,OAAKA,EAAQnT,OAAOk5B,WAAY5W,EAAAA,EAAAA,IAAUnP,EAAQnT,OAAOmE,aAAegP,EAAQ2iB,cAAgB3iB,EAAQ2iB,aAAarc,OAC1GqmK,GAEAjuL,KAAKs6B,SAAShZ,IAG7B86B,gBAAiB,SAAS96B,GACtB,IAAImuB,EAAazvC,KAAKs6B,SAAShZ,GAC/B,OAAIA,EAAQqkB,IAAIqqC,cACLpkD,EAAAA,EAAAA,GAAO6jB,EAAY0+I,GAAsBnuL,KAAMshB,IAE/CmuB,Q,0BCpvB3BkC,GAAgB,UAChBG,GAAsB,gBACtB+2D,GAA2B,wBAC3BkqF,GAAmB,gBACnBC,GAAkB,eAClBC,GAAoB,iBACpBC,GAAkB,eAClBC,GAAsB,mBACtBC,GAA4B,yBAC5BnjE,GAAsB,cACtBj+E,GAAkB,eAClBqhJ,GAA4B,SAASh6D,GACrC,IAAI1iE,GAA0B,EAO9B,OANAvlC,EAAAA,EAAAA,IAAKioG,GAAe,SAASjvG,EAAOjc,GAChC,GAAIA,EAAOk5B,UAAY4oF,GAEnB,OADAt5D,EAAyBvsC,GAClB,KAGRusC,GAEP28H,GAAwB,SAASj6D,EAAc/7E,EAAQi2I,GACvD,IAAIC,EAAmB,EACvB,GAAIn6D,GAAgB/7E,GAAUi2I,EAC1B,IAAK,IAAI17J,EAAI,EAAGA,EAAIwhG,EAAazxG,OAAQiQ,IACjCwhG,EAAaxhG,GAAGwP,UAAY4oF,GAC5BujE,GAAoBn6D,EAAaxhG,GAAG6d,SAEhC4H,EAAOk2I,GAAoBD,EAAY17J,KACvCylB,EAAOk2I,GAAoBD,EAAY17J,IAE3C27J,KAIZ,OAAOl2I,GAEPm2I,GAAmB,CACnBxqJ,KAAM,WACFjpC,KAAKs6B,WACLt6B,KAAK6mI,wBAAyB,EAC9B7mI,KAAK0zL,iBAAkB,GAE3B57I,WAAY,SAAS3pC,GACjB,OAAOnO,KAAKs6B,SAASnsB,GAAQ6+B,YAAYkmJ,MAAoBlzL,KAAK6mI,0BAA2B14H,EAAO6D,OAAS7D,EAAOk5B,SAAWl5B,EAAOk5B,UAAY4oF,OAEtJ0jE,qCAAsC,SAASt6D,EAAcxiH,GACzD,IAAI8/C,EAAyB08H,GAA0Bh6D,GACnDviE,EAAqBuiE,EAAa1iE,GAAwBjhB,QAC1DmF,EAAgBhkC,GAAUA,EAAOgkC,cACjCA,IACAhkC,EAAOgkC,cAAgBA,EAAc7oB,KAAK,SAAS6oB,GAC/C,GAAIA,EACA,OAAOA,EAAc7oB,KAAK,SAASwN,GAC/B,OAAIA,EAAcm3B,EACPn3B,EACAA,GAAem3B,EAAyBG,EACxCt3B,EAAcs3B,EAAqB,GAEtC,KACRlzC,QAAQ,SAAS4b,GACjB,OAAOA,GAAe,UAM1Co0J,yBAAyBv6D,GACrB,IAAIw6D,EAAoB7zL,KAAK8zL,mBACzBn9H,EAAyB08H,GAA0Bh6D,GACnDxiE,EAAoBwiE,EAAa1iE,GACjC1a,EAAoBj8C,KAAK62C,mBAAmBqF,uBAC5CoD,EAAQt/C,KAAK8gD,oBAAoB+yI,GACjCr6G,EAAYq6G,EAAkBhjJ,SAAS,YAC3C2oC,EAAUz9B,YAAY/7C,KAAKm2C,gBAAgBkjF,IAC3C,IAAK,IAAIxhG,EAAI,EAAGA,EAAIynB,EAAM13B,OAAQiQ,IAG9B,IAFA,IAAIsyJ,EAAe7qI,EAAMznB,GAAGk8J,WACxB5L,EAAWlsI,EAAoB,EAC1BpE,EAAI,EAAGA,EAAIsyI,EAAaviK,OAAQiwB,IACrCsyI,EAAatyI,GAAG1N,aAAa,gBAAiBg+I,GAC1CtwI,IAAM8e,GACNwzH,EAAatyI,GAAG1N,aAAa,UAAW0sB,EAAkBnhB,SAC1DyyI,GAAYtxH,EAAkBnhB,SAE9ByyI,KAKhB3tI,aAAc,SAASl5B,GACnB,IAAI0yK,EACA36D,EAAer5H,KAAKu2D,kBACxBv2D,KAAK0zL,kBAAoBr6D,EAAazxG,OACtC,IAAI+qB,EAAS3yC,KAAKs6B,SAAShZ,GAC3B,GAAIthB,KAAK0zL,gBAAiB,CACtB,IAAI78K,EAAS,OAASyK,QAAW,IAAWA,OAAU,EAASA,EAAQzK,OAEvE,GADA7W,KAAK6mI,wBAAyB,EAC1B,OAAShwH,QAAU,IAAWA,GAAUA,EAAO20D,0BAA2B,IAASxrE,KAAKuiC,OAAO,wBAC/FviC,KAAK4zL,yBAAyBv6D,OAC3B,CACH,IAAIx+E,EAAgB,OAAShkC,QAAU,IAAWA,OAAS,EAASA,EAAOgkC,cAC3E76C,KAAK2zL,qCAAqCt6D,EAAcxiH,GACxDm9K,EAAch0L,KAAKi2C,aAAaojF,GAChCr5H,KAAK06C,YAAYs5I,GAAapoK,EAAAA,EAAAA,GAAO,GAAItK,EAAS,CAC9Cxa,QAASuyH,KAEbr5H,KAAK4+C,eAAeo1I,EAAan9K,GAC7BgkC,IACAhkC,EAAOgkC,cAAgBA,GAG/B76C,KAAK6mI,wBAAyB,OAE9B7mI,KAAK8zL,oBAAsB9zL,KAAK8zL,mBAAmBpsJ,SAASpF,SAC5DtiC,KAAK8zL,mBAAqB,KAE9B,OAAOnhJ,GAEXoI,WAAY,SAASpI,EAAQrxB,GACzB,IAAI2yK,EACA1iJ,EAAQjwB,EAAQqkB,IAAI4L,MAExB,GADAvxC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACtBrrB,KAAK6mI,wBAA0Bt1F,GAASA,EAAM3pB,OAAQ,CACtDqsK,EAAkB,EAClB,IAAIC,EAAa5yK,EAAQqkB,IAAI4L,OAAS,GACtCA,EAAQA,EAAMxnB,QACdzI,EAAQqkB,IAAI4L,MAAQA,EACpB,IAAK,IAAI1Z,EAAI,EAAGA,EAAIq8J,EAAWtsK,OAAQiQ,IAC/Bq8J,EAAWr8J,GAAG1pB,QAAU+lL,EAAWr8J,GAAG1pB,OAAOk5B,UAAY4oF,GACzDgkE,GAAmBC,EAAWr8J,GAAG1pB,OAAOunC,SAAW,GAAK,EAG5DnE,EAAM1Z,EAAIo8J,GAAmBC,EAAWr8J,KAIpDyd,YAAa,SAASh0B,GAClB,IAKI+3G,EACA86D,EACAx9H,EAPA/uB,EAAO5nC,KACPmO,EAASmT,EAAQnT,OACjBimL,EAAgBjmL,GAAUA,EAAOk5B,QACjCvD,EAAUxiB,EAAQwiB,QAClB4M,EAAQ9I,EAAKtN,SAAS7G,MAAMmU,EAAMvc,YAIlCuc,EAAKi/F,wBAA0B,WAAa/iG,KAC5Cu1F,EAAezxF,EAAK2uB,kBACpBI,EAAyB08H,GAA0Bh6D,GACnD86D,EAAkB96D,EAAa1iE,EAAyB,IAExD/uB,EAAKi/F,uBACDutD,IAAkBnkE,KAClBv/E,EAAM5O,SAASsxJ,IAA2BpmJ,YAAY+lJ,GAAkB,IAAMp8H,GAA0Bw9H,GAAmB,WAAaA,EAAgB9sJ,SAAS2F,YAAYgmJ,GAAiB35D,EAAazxG,QAAU+uC,IAA2B0iE,EAAazxG,OAAS,GAClQ,cAAgBkc,GAChBoL,EAAAA,aAA2BwB,IAG5B,WAAa5M,GACpB4M,EAAM1D,YAAY+lJ,GAAkBzxK,EAAQke,cAAgBm3B,GAEhE,IAAI09H,EAAgBzsJ,EAAKrF,OAAO,0BAA4BjhB,EAAQk7B,SAIpE,OAHIrU,EAAAA,EAAAA,SAAmB7mB,EAAQnT,OAAO6D,OAAS,UAAYsP,EAAQwiB,UAAYuwJ,GAC3E3jJ,EAAM5O,SAASoxJ,IAEZxiJ,GAEX+N,4BAA6B,WACzB,IAAID,EAAmBx+C,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAIjD,OAHIrrB,KAAK6mI,wBACLroF,EAAiB1c,SAAS9hC,KAAKqhC,gBAAgByQ,KAE5C0M,GAEXnC,mBAAoB,SAAS3L,EAAOpvB,GAChC,IAAIgzK,EACAnmL,EAASmT,EAAQnT,OACjBomL,EAAwBv0L,KAAK6mI,uBAC7B2tD,EAAc,UAAYlzK,EAAQwiB,UAAWrT,EAAAA,EAAAA,IAAUtiB,EAAOmE,YAIlE,GAHIiiL,GAAyBC,IAAgBrmL,EAAOk5B,UAAYl5B,EAAOiE,mBACnEs+B,EAAMvL,IAAI,gBAAiB,SAE1BovJ,GAAyBv0L,KAAK0zL,gBAAiB,CAEhD,GADAY,EAAcnmL,EAAO6D,OAAS7D,EAAOk5B,UAAW,IAAUl5B,EAAO6D,MAC7DwiL,IACAF,GAAc,EACVhzK,EAAQqkB,IAAIqqC,cAAgB1uD,EAAQqkB,IAAIqqC,aAAapoD,QAAQ,CAC7D,IAAI9gB,EAAU9G,KAAK62C,mBAAmBC,oBAClC29I,EAA8Bz0L,KAAKyyL,2BAA6BzyL,KAAKyyL,2BAA2BtkL,EAAOunC,QAAS,CAChH5uC,QAASA,EACT6+B,IAAKrkB,EAAQqkB,IACbyzC,SAAS,IACR,EACL,GAAIq7G,EAA8B,EAAG,CACjC,IAAI99H,EAAyB08H,GAA0BrzL,KAAK62C,mBAAmB0f,mBAC/E+9H,EAAcxtL,EAAQ8gB,OAAS6sK,EAA8B99H,GAIzE,GAAI29H,EAAa,CACb,GAAInmL,EAAOk5B,SAAW,YAAcl5B,EAAOW,MAAQ,UAAYwS,EAAQwiB,QAEnE,YADA4M,EAAMxvB,KAAK,UAAU4gB,SAAS3zB,EAAOiB,UAGrCshC,EAAM5O,SAAS,mBAIvB3zB,EAAOk5B,UAAY4oF,IACnBjwH,KAAKs6B,SAASoW,EAAOpvB,IAG7By+B,qBAAsB,SAASxM,GAC3B,IAAI42I,EAAenqL,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACzCorB,EAAa0zI,EAAaziJ,SAASkI,SAASoC,IAC5C0iJ,EAAiB,sBAAwB10L,KAAKsP,KAAOikC,OAAW,EACpE,GAAIvzC,KAAK8zL,oBAAsB3J,EAAc,CACzC,IAAI9wD,EAAer5H,KAAKu2D,gBAAgBm+H,GACpCC,EAAoB30L,KAAKggD,gBAAgBhgD,KAAK8zL,oBAAoB5uJ,GAAGqO,GAAU1C,SAAS,OAC5Fzf,EAAAA,EAAAA,IAAKujK,GAAmB,CAACn1J,EAAayU,KAClC,GAAIwC,EACI0zI,EAAa3qJ,IAAgB,WAAayU,EAAKC,MAAMkkF,aACrD+xD,EAAa3qJ,GAAeyU,OAE7B,CACH,IAAI2gJ,EAAcv7D,EAAa75F,GAC/B,GAAIo1J,EACA,GAAIA,EAAYvtJ,UAAY4oF,GACpB0kE,EAAkBzvJ,GAAG1F,GAAaoQ,SAASi5D,MAC3CshF,EAAa3qJ,GAAeyU,GAAQk2I,EAAa3qJ,QAElD,CACH,IAAIg0J,EAAmBxzL,KAAK62C,mBAAmBylB,wBAAwBs4H,EAAaF,GACpFvK,EAAaqJ,GAAoBv/I,GAAQk2I,EAAaqJ,QAM1E,OAAOrJ,GAEX/qI,gBAAiB,WACb,IAAIm0I,EACAvqK,EAAShpB,KAAKs6B,WACd++F,EAAer5H,KAAKu2D,kBAIxB,OAHIv2D,KAAK8zL,oBAAsB9qK,EAAOpB,SAClC2rK,EAAcvzL,KAAKs6B,SAASt6B,KAAK8zL,qBAE9BR,GAAsBj6D,EAAcrwG,EAAQuqK,IAEvD31I,gBAAiB,WACb,IAAIjE,EAAe35C,KAAK6mI,uBAAyB7mI,KAAK8zL,mBAAqB9zL,KAAKs6B,WAChF,OAAOqf,GAEXkE,gBAAiB,SAASlE,GAClB35C,KAAK6mI,uBACL7mI,KAAK8zL,mBAAqBn6I,EAAa7X,SAASsxJ,IAEhDpzL,KAAKs6B,SAASqf,IAGtBzI,WAAY,SAASqC,EAAU8L,GAE3B,OADAA,EAAgBA,GAAiBr/C,KAAK49C,kBAClC59C,KAAK6mI,wBAA0BxnF,GAAiBA,EAActY,QAAQ,SAASW,OAAO,IAAM1nC,KAAKqhC,gBAAgByQ,KAAsBlqB,OAChI5nB,KAAKu2D,gBAAgBhjB,GAEzBvzC,KAAKs6B,SAASiZ,EAAU8L,IAEnC7L,YAAa,SAAS8C,GAClB,IAAI09I,EAAch0L,KAAK8zL,mBACvB,OAAIE,GAAeA,EAAYzyJ,KAAK+U,GAAM1uB,OAC/B5nB,KAAKggD,gBAAgBg0I,GAAa5pK,MAAMksB,GAE5Ct2C,KAAKs6B,SAASgc,IAEzBqH,iBAAkB,WACd,IAAI30B,EAAShpB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAIvC,OAHIrrB,KAAK8zL,qBACL9qK,GAAS6Y,EAAAA,EAAAA,GAAE,CAAC7Y,EAAO2W,IAAI,GAAI3/B,KAAK8zL,mBAAmBn0J,IAAI,MAEpD3W,GAEXutC,gBAAiB,SAAShjB,GACtB,OAAOvzC,KAAK62C,mBAAmB0f,gBAAgBhjB,IAEnDshJ,sBAAuB,WACnB,IAIIC,EAJA9xK,EAAS,CACTjE,KAAM,EACN8I,MAAO,GAGX,GAAI7nB,KAAK8zL,mBAAoB,CACzBgB,EAAqB90L,KAAK+0L,8BAC1B,IAAIC,EAA4BF,EAAmBp6K,WACnDsI,EAAS,CACLjE,KAAMi2K,EAA0Bj2K,KAChC8I,OAAO05B,EAAAA,EAAAA,IAAcvhD,KAAKmhC,WAAW,KAASogB,EAAAA,EAAAA,IAAcuzI,GAAoB,GAAQE,EAA0Bj2K,OAG1H,OAAOiE,GAEX+xK,4BAA6B,WACzB,OAAO/0L,KAAK8zL,oBAAsB9zL,KAAK8zL,mBAAmBvyJ,KAAK,IAAM6xJ,IAA2BzvI,SAEpGsxI,qBAAsB,WAClB,OAAOj1L,KAAK8zL,oBAEhBhqF,eAAgB,WACZ,OAAO9pG,KAAK0zL,iBAEhBvnJ,YAAa,WACTnsC,KAAKs6B,WACLt6B,KAAKk1L,mBAET13I,gBAAiB,SAASl8B,GACtB,IAAIxa,EACA8vC,EAAiB52C,KAAK62C,mBAAmBC,oBACzCwG,EAASh8B,EAAQg8B,OACjB63I,EAAuB73I,GAAUA,EAAO11B,SAAU6I,EAAAA,EAAAA,IAAUmmB,EAAe,GAAGjB,cAC9E0H,EAAc/7B,EAAQ+7B,YACtB+3I,EAAuB/3I,GAAeA,EAAY7vC,MAClD6nL,GAAoB,EAExB,GADAr1L,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACtBrrB,KAAK8zL,mBAAoB,CACzB,IAAIvuG,EAAejoC,GAAUA,EAAOnnB,MAAM,SAAS3oB,GAC/C,MAAO,SAAWA,KAEtB6nL,EAAoB9vG,KAAkB4vG,IAAyBn1L,KAAKqhD,oBAAmB,IACnFg0I,IACAvuL,EAAU8vC,GAEd52C,KAAKs6B,UAAS1O,EAAAA,EAAAA,GAAO,GAAItK,EAAS,CAC9B+9B,cAAer/C,KAAK8zL,mBACpBhtL,QAASA,EACTkL,OAAO,MAGXmjL,GAAwBC,GAAwBp1L,KAAKuiC,OAAO,qBAC5DviC,KAAKk1L,mBAGb/+I,gBAAiB,SAASrvC,GACtB,GAAI9G,KAAK6mI,yBAA2B7mI,KAAKuiC,OAAO,mBAAoB,CAChE,IAAIqU,EAAiB52C,KAAK62C,mBAAmBC,oBACzCu+I,EAAoBz+I,EAAehzB,QAAQ,SAASzV,GACpD,OAAQA,EAAOX,SACfoa,OACAytK,IACAvuL,EAAU8vC,GAGlB,OAAO52C,KAAKs6B,SAASxzB,IAEzBwuL,iBAAkB,SAASn0J,GACvB,IAAIo0J,EAA4Bp0J,EAAQ+d,wBAAyB7Z,EAAAA,EAAAA,GAAgBlE,GACjF,OAAOo0J,GAA6BA,EAA0B7sL,OAAS6sL,EAA0B7sL,OAASy4B,EAAQ47C,cAEtHm4G,gBAAiB,WACb,IAEI3hJ,EACAwmC,EACAy7G,EACAt3G,EALAkoD,EAAa,GACbqvD,EAAkB,GAKtB,GAAIz1L,KAAK0zL,iBAAmB1zL,KAAKg6C,eAAiBh6C,KAAK8zL,mBAAoB,CACvE,IAAI4B,EAAc11L,KAAKs1L,iBAAiBt1L,KAAKg6C,cAAcra,IAAI,IAC3Dg2J,EAAmB31L,KAAKs1L,iBAAiBt1L,KAAK8zL,mBAAmBn0J,IAAI,IAIzE,GAHAo6C,EAAe/5E,KAAKggD,gBAAgBhgD,KAAKg6C,eACzCw7I,EAAoBx1L,KAAKggD,gBAAgBhgD,KAAK8zL,oBAC9C51G,EAAkBl+E,KAAK8+C,sBACnB42I,IAAgBC,EAAkB,CAIlC,IAHAz3G,GAAmBA,EAAgB/4C,IAAI,SAAUuwJ,GACjD37G,EAAa50C,IAAI,SAAU,IAC3BqwJ,EAAkBrwJ,IAAI,SAAU,IAC3BoO,EAAW,EAAGA,EAAWwmC,EAAanyD,OAAQ2rB,IAC/C6yF,EAAW/9G,KAAKroB,KAAKs1L,iBAAiBv7G,EAAap6C,IAAI4T,KACvDkiJ,EAAgBptK,KAAKroB,KAAKs1L,iBAAiBE,EAAkB71J,IAAI4T,KAErE,IAAKA,EAAW,EAAGA,EAAWwmC,EAAanyD,OAAQ2rB,IAAY,CAC3D,IAAIozF,EAAYP,EAAW7yF,GACvBqiJ,EAAiBH,EAAgBliJ,GACjCozF,EAAYivD,EACZJ,EAAkBtwJ,GAAGqO,GAAUpO,IAAI,SAAUwhG,GACtCA,EAAYivD,GACnB77G,EAAa70C,GAAGqO,GAAUpO,IAAI,SAAUywJ,GAGhD13G,GAAmBA,EAAgB/4C,IAAI,SAAU,OAI7D+b,mBAAoB,SAAS1zC,GACzB,IAAIlB,EAAatM,KAAKuiC,OAAO,cAC7BviC,KAAKs6B,SAAS9sB,GACdxN,KAAKmhC,UAAU0P,SAAS,IAAM7wC,KAAKqhC,gBAAgByQ,KAAsB3M,IAAI,CACzEgc,YAAa70C,EAAakB,EAAQ,GAClC4zC,aAAe90C,EAAqB,GAARkB,MAIpCqoL,IAAwCjqK,EAAAA,EAAAA,GAAO,GAAI6nK,GAAkB,CACrEzrI,sBAAuB,SAASzU,GAC5B,OAAIvzC,KAAK6mI,uBACE7mI,KAAKu2D,gBAAgBhjB,GAEzBvzC,KAAKs6B,SAASiZ,IAEzByW,oBAAqB,SAAS1oC,GAC1B,IAAInT,EAASmT,EAAQnT,OACjB2nL,EAAsB91L,KAAKuiC,OAAO,gBAClCnlB,EAAQpd,KAAKs6B,SAAShZ,GAC1B,GAAIA,EAAQqkB,KAAO,WAAarkB,EAAQqkB,IAAI7B,UACpC,IAASgyJ,EAAoBvhL,SAAWpG,GAAUA,EAAOkC,YAAa,CACtE,IAAI65C,EAAcl/B,IACd,OAAQA,EAAOo/B,SAAS9pD,OACpB,IAAK,OACDN,KAAK62C,mBAAmB6J,aAAavyC,EAAOic,MAAO,SAAS,GAC5D,MACJ,IAAK,OACDpqB,KAAK62C,mBAAmB6J,aAAavyC,EAAOic,MAAO,CAC/CpY,OAAO,EACPC,cAAe,SAEnB,MACJ,IAAK,QACDjS,KAAK62C,mBAAmB6J,aAAavyC,EAAOic,MAAO,CAC/CpY,OAAO,EACPC,cAAe,YAI/BmL,EAAQA,GAAS,GACjBA,EAAMiL,KAAK,CACP5Y,KAAMqmL,EAAoBnhL,MAAME,IAChC8zF,YAAY,EACZvrF,MAAO,CAAC,CACJ3N,KAAMqmL,EAAoBnhL,MAAMG,aAChCxU,MAAO,OACPiH,SAAU4G,EAAO6D,SAAW7D,EAAO8D,eAAiB,SAAW9D,EAAO8D,eACtEi4C,YAAaA,GACd,CACCz6C,KAAMqmL,EAAoBnhL,MAAMI,cAChCzU,MAAO,QACPiH,SAAU4G,EAAO6D,OAAS,UAAY7D,EAAO8D,cAC7Ci4C,YAAaA,KAElB,CACCz6C,KAAMqmL,EAAoBnhL,MAAMK,MAChC1U,MAAO,OACPiH,UAAW4G,EAAO6D,MAClBk4C,YAAaA,IAIzB,OAAO9sC,GAEX24K,uBAAwB,SAASxiJ,GAC7B,IAAI9iB,EAAAA,EAAAA,IAAU8iB,GACV,OAAOvzC,KAAK8zL,oBAAsB9zL,KAAKggD,gBAAgBhgD,KAAK8zL,oBAAoB5uJ,GAAGqO,GAAU1C,WAEjG,IAAIsY,EAAiBnpD,KAAKoxC,oBACtB4kJ,EAA4Bh2L,KAAK+0L,8BACrC,GAAI5rI,GAAkB6sI,GAA6BA,EAA0BpuK,OAAQ,CACjF,IAAI+uC,EAAyB08H,GAA0BrzL,KAAKu2D,mBAC5DpN,EAAenM,OAAO2Z,EAAwBq/H,EAA0Br2J,IAAI,GAAGlhB,QAASu3K,EAA0Br2J,IAAI,IAE1H,OAAOwpB,GAEX/J,gBAAiB,WACb,IAAIm0I,EACAvqK,EAAShpB,KAAKs6B,WACd27J,EAAuBj2L,KAAK+1L,yBAC5B18D,EAAer5H,KAAKu2D,kBAQxB,OAPIv2D,KAAK8zL,qBAEDP,EADA0C,GAAwBA,EAAqBruK,OAC/B5nB,KAAK++C,WAAWk3I,GAEhBj2L,KAAKs6B,SAASt6B,KAAK8zL,qBAGlCR,GAAsBj6D,EAAcrwG,EAAQuqK,MAGvD2C,IAA+BtqK,EAAAA,EAAAA,GAAO,GAAI6nK,GAAkB,CAC5D0C,mBAAoB,WAChBn2L,KAAK8zL,oBAAsBltJ,EAAAA,EAAAA,IAAiB5mC,KAAK8zL,mBAAoB,qBAAsB,gBAC3F9zL,KAAKg6C,eAAiBpT,EAAAA,EAAAA,IAAiB5mC,KAAKg6C,cAAe,qBAAsB,iBAErFo8I,mBAAoB,WAChB,IAAIxuJ,EAAO5nC,KACPq2L,EAAmB,SAAS1jJ,GAC5B/L,EAAAA,EAAAA,GAAgB+L,EAAQ,qBAAsB,eAAgB/K,EAAKiC,cAAc,SAASpV,GACtF,IAAIgW,EAAQhW,EAAKgW,MACb8I,EAAW3L,EAAK4L,aAAY3R,EAAAA,EAAAA,GAAE4I,EAAM5N,QAAQkK,QAAQ,YACpDuvJ,EAAU,cAAgB7rJ,EAAM37B,KAChCykC,GAAY,IACZ3L,EAAKoS,eAAiBpS,EAAKoY,gBAAgBpY,EAAKoS,eAAe9U,GAAGqO,GAAUvG,YAAYimJ,GAAmBqD,GAC3G1uJ,EAAKksJ,oBAAsBlsJ,EAAKoY,gBAAgBpY,EAAKksJ,oBAAoB5uJ,GAAGqO,GAAUvG,YAAYimJ,GAAmBqD,SAI7H1uJ,EAAKksJ,oBAAsBlsJ,EAAKoS,gBAChCq8I,EAAiBzuJ,EAAKksJ,oBACtBuC,EAAiBzuJ,EAAKoS,iBAG9B8E,oBAAqB,WACjB,IACIoI,EACAwgC,EAFA9/C,EAAO5nC,KAGPu2L,EAAe3uJ,EAAKvG,gBAAgBsQ,IACpCxQ,EAAUyG,EAAKzG,UACfq1J,EAAcruJ,EAAAA,EAAAA,QAAkB,GAAK,EACzC,GAAIhH,GAAWyG,EAAKi/F,uBAAwB,CACxC3/E,EAAW/lB,EAAQ0P,SAAS,IAAM0lJ,GAClC,IAAI//G,EAAa5uC,EAAK+vC,gBAkCtB,OAjCKzwB,EAASt/B,QAAU4uD,IACpBtvB,GAAWrlB,EAAAA,EAAAA,GAAE,SAASC,SAASy0J,GAC/B3vJ,EAAAA,EAAAA,GAAgBsgB,EAAU,UAAW,SAAS5gB,GAC1C2M,aAAarL,EAAK6uJ,qBAClB7uJ,EAAK6uJ,oBAAsBzjJ,YAAY,WACnC00C,GAAY7lD,EAAAA,EAAAA,GAAEyE,EAAEzJ,QAAQ6qD,YACxBlR,EAAWl8B,SAAS,CAChBnrC,EAAGu4E,MAEP8uG,MAER5vJ,EAAAA,EAAAA,GAAgBsgB,EAAUwvI,GAAAA,GAAiB,SAASpwJ,GAChD,IAAIqwJ,GAAqB90J,EAAAA,EAAAA,GAAEyE,EAAEzJ,QAAQkK,QAAQ,kBACzC6vJ,GAAe,EACnB,GAAIpgH,GAAcA,EAAW91C,WAAWiG,GAAGgwJ,GACvCC,GAAe,MACZ,CACH,IAAIC,EAA4BF,EAAmB/uK,QAAU4wD,GAAAA,EAAAA,YAAuBm+G,EAAmBh3J,IAAI,IACvGm3J,EAAwCD,GAA6BA,EAA0BvuG,eAAiBuuG,EAA0B95G,eAAiB,EAC/J65G,EAAeC,IAA8BC,EAEjD,GAAIF,IACAlvG,EAAYlR,EAAWkR,YACvBlR,EAAWl8B,SAAS,CAChBnrC,EAAGu4E,EAAYphD,EAAE6jG,QAEjB3zD,EAAWkR,YAAc,GAAKlR,EAAWkR,YAAclR,EAAWuG,eAAiBvG,EAAW8R,eAAiB1gD,EAAKg0C,qBACpH,OAAO,KAInB10B,EAASnlB,SAASZ,IAEf+lB,EAEX,OAAOtf,EAAKtN,YAEhB4iD,kBAAmB,WACfl9E,KAAKs6B,WACL,IAAIk8C,EAAax2E,KAAK23E,gBACtB,GAAI,OAASnB,QAAc,IAAWA,IAAcA,EAAW2pC,UAA/D,CAGA,IAAIz4B,EAAYlR,GAAcA,EAAW0B,eAAeh5D,IACxDlf,KAAK+2L,0BAA0BrvG,KAEnChP,eAAgB,SAASC,EAAgBh/B,GACrC,OAAI35C,KAAK6mI,uBACEluD,EAAe9tC,QAAQ/I,SAAS9hC,KAAKqhC,gBAAgBsQ,IAAiB,IAAM3xC,KAAKqhC,gBAAgByQ,KAAsBf,OAAO4I,GAElI35C,KAAKs6B,SAASq+C,EAAgBh/B,IAEzC2gC,qBAAsB,SAASh5D,GAC3B,OAAIthB,KAAK6mI,uBACE7mI,KAAKs6B,UAAS1O,EAAAA,EAAAA,GAAO,GAAItK,EAAS,CACrCxa,QAAS9G,KAAK62C,mBAAmBC,uBAGlC92C,KAAKs6B,SAAShZ,IAEzBk5D,oBAAqB,SAASlkC,EAAMh1B,GAChC,OAAOthB,KAAKs6B,SAASgc,GAAM1qB,EAAAA,EAAAA,GAAO,GAAItK,EAAS,CAC3Cxa,QAAS9G,KAAK62C,mBAAmBC,wBAGzCy7I,yBAA0B,SAASj8I,EAAMh1B,GACjCthB,KAAK6mI,uBACL7mI,KAAKs6B,SAASgc,GAAM1qB,EAAAA,EAAAA,GAAO,GAAItK,EAAS,CACpCxa,QAAS9G,KAAK62C,mBAAmBC,uBAGrC92C,KAAKs6B,SAASgc,EAAMh1B,IAG5BkxK,8BAA+B,SAAShzJ,EAAale,GACjD,IAAI0H,EAAShpB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACnCld,EAASmT,EAAQxa,QAAQ04B,GAC7B,OAAIle,EAAQ83D,QACDjrE,EAAO6D,QAAUgX,GAAU,UAAY7a,EAAO8D,eAElD+W,KAAYhpB,KAAK0zL,kBAAoBvlL,EAAO6D,QAEvD6gL,6BAA8B,SAASD,EAAYtxK,EAASoxK,EAAkBC,GAC1E,IAAI8B,EACJ,GAAIz0L,KAAK6mI,uBAAwB,CAC7BvlH,EAAQ83D,SAAU,EAClBq7G,EAA8Bz0L,KAAKyyL,2BAA2BC,EAAkBpxK,GAChFA,EAAQ83D,SAAU,EAClB,IAAIr0C,EAAmBzjB,EAAQxa,QAAQ8gB,OAAS6sK,EAChDnzK,GAAUsK,EAAAA,EAAAA,GAAO,GAAItK,EAAS,CAC1Bxa,QAAS9G,KAAKu2D,oBAElB,IAAII,EAAyB08H,GAA0B/xK,EAAQxa,SAC3Di+B,EAAmB4xB,GACnB89H,GAA+BnzK,EAAQxa,QAAQ6vD,GAAwBjhB,QAAU,GAAK,EACtFg9I,GAAoBpxK,EAAQxa,QAAQ6vD,GAAwBjhB,QAAU,GAAK,GACpEi9I,EAAyB,GAChCC,EAAWztJ,IAAI,aAAc,UAEjCwtJ,EAAyB8B,EAE7Bz0L,KAAKs6B,SAASs4J,EAAYtxK,EAASoxK,EAAkBC,IAEzDG,qBAAsB,SAAStzJ,EAAa14B,GACxC,GAAI9G,KAAK6mI,uBAAwB,CAC7B,IAAIlwE,EAAyB08H,GAA0BvsL,GAIvD,OAHI04B,EAAcm3B,IACdn3B,GAAe14B,EAAQ6vD,GAAwBjhB,QAAU,GAEtDlW,EAEX,OAAOx/B,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErC6gB,YAAa,SAASr1B,GAClB7W,KAAKm2L,qBACLn2L,KAAKs6B,SAASzjB,GACd,IAAIizF,EAAiB9pG,KAAK0zL,gBAC1B1zL,KAAKmhC,UAAU6L,YAAYmmJ,GAAqBrpF,GAC5C9pG,KAAKuiC,OAAO,sBAAwBunE,GACpC9pG,KAAKo2L,sBAGb/rI,eAAgB,SAAS7qB,EAAal/B,GAClCN,KAAKs6B,SAASkF,EAAal/B,GAC3B,IAAIg/C,EAAQt/C,KAAKggD,gBAAgBhgD,KAAK8zL,oBACtC9zL,KAAKm7E,oBAAoB77B,EAAOt/C,KAAKu2D,kBAAmB/2B,EAAal/B,IAEzEspC,cAAe,SAASnV,GACpBz0B,KAAKs6B,SAAS7F,GACV,sBAAwBA,EAAKnlB,MAAQtP,KAAK0zL,kBAC1Cj/J,EAAKn0B,MAAQN,KAAKo2L,qBAAuBp2L,KAAKm2L,uBAGtD14I,aAAc,SAAS/M,GACnB,IAAIsjJ,EAAch0L,KAAK8zL,mBACnBp2I,EAAY,EAChB,GAAIs2I,GAAetjJ,EAAM/J,GAAG,OAAS+J,EAAM3J,QAAQitJ,GAAapsK,OAAQ,CACpE,IAAI9gB,EAAU9G,KAAKu2D,kBAWnB,OAVAnlC,EAAAA,EAAAA,IAAKtqB,GAAU,SAASsjB,EAAOjc,GAC3B,GAAIic,IAAUsmB,EAAM,GAAGgN,UACnB,OAAO,EAEPvvC,EAAOunC,QACPgI,GAAavvC,EAAOunC,QAGxBgI,OAEGA,EAEX,OAAO19C,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErC0rK,0BAA2B,SAASrvG,EAAWsvG,GAC3C,GAAIh3L,KAAK8zL,oBAAsB9zL,KAAKg6C,cAAe,CAC/C,IAAIu1D,EACAnnB,EAAgBpoF,KAAKqqC,cAAc,iBACvCrqC,KAAK8zL,mBAAmBpsJ,SAASggD,UAAUA,GACvCsvG,GAAa5uG,IACbmnB,EAAkBnnB,EAAch7C,QAChCmiE,GAAmBnnB,EAAch7C,MAAMmiE,MAInDruD,mBAAoB,SAAS+1I,EAAQC,GACjC,IAAIC,EAAS,CACTxqJ,aAAc,GAEdyqJ,EAAgBp3L,KAAKmhC,UAAU0P,SAAS,IAAM7wC,KAAKqhC,gBAAgByQ,KACvE,GAAIslJ,EAAcxvK,QAAU5nB,KAAK8zL,mBAAoB,CACjDsD,EAAcjyJ,IAAIgyJ,GAClBn3L,KAAK8zL,mBAAmB3uJ,IAAIgyJ,GAC5BA,EAAOn3L,KAAKuiC,OAAO,cAAgB,aAAe,eAAiB00J,EACnEE,EAAOxqJ,aAAeuqJ,EACtB,IAAIliJ,EAAqBh1C,KAAKu4E,aAAev4E,KAAKu4E,YAAYh2C,OAAO,cACpEyS,EAAqBoiJ,EAAgBp3L,KAAK8zL,oBAAoB3uJ,IAAIgyJ,KAG3EE,qBAAsB,SAAS/wJ,GAC3B,IAAIgxJ,EAAmB,EACnB37G,EAAiB37E,KAAK47E,mBAAkB,GAC5C,GAAIt1C,EAAE4xC,aAAah5D,IAAM,EACrBo4K,GAAoBhxJ,EAAE4xC,aAAah5D,SAChC,GAAIonB,EAAEixJ,cAAe,CACxB,IAAIC,EAAoBx3L,KAAK8+C,sBACzB24I,GAAuB51J,EAAAA,EAAAA,GAAEyE,EAAER,UAAUxsB,aACrCo+K,EAAejlK,KAAKxP,KAAI4f,EAAAA,EAAAA,IAAU20J,GAAqB77G,GAAiB94C,EAAAA,EAAAA,IAAU40J,GAAuB,GAC7GH,EAAmBI,EAAepxJ,EAAE4xC,aAAah5D,IAErD,OAAOo4K,GAEXK,uBAAwB,SAASrxJ,GAC7B,GAAItmC,KAAK8zL,mBAAoB,CACzB,IAAIwD,EAAmBt3L,KAAKq3L,qBAAqB/wJ,GAC7C,IAAM7T,KAAKw1C,KAAKqvH,IAChBM,EAAAA,GAAAA,IAAK53L,KAAK8zL,mBAAoB,CAC1B50K,IAAKo4K,IAGTt3L,KAAK8zL,mBAAmB3uJ,IAAI,YAAa,MAIrD4yC,cAAe,SAASzxC,GACpBtmC,KAAK+2L,0BAA0BzwJ,EAAE4xC,aAAah5D,KAAK,GACnDlf,KAAK23L,uBAAuBrxJ,GAC5BtmC,KAAKs6B,SAASgM,IAElBu/F,uBAAwB,SAASa,GAC7B1mI,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACrBq7G,GACD1mI,KAAK+2L,0BAA0B/2L,KAAKi4E,aAG5Ch6B,kBAAmB,SAAS3X,GACpBtmC,KAAK6mI,wBAGT7mI,KAAKs6B,SAASgM,IAElBm4C,iBAAkB,SAAS/9C,GACvB1gC,KAAKs6B,SAASoG,EAAU1gC,KAAK60L,0BAEjCjqJ,QAAS,WACL5qC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1B4nB,aAAajzC,KAAKy2L,wBAGtBoB,GAAiCpE,GAC1BqE,GAAqB,CAC5B5xI,eAAgB,WACZ,MAAO,CACHz/C,aAAc,CACV8N,SAAS,EACTI,MAAO,CACHE,IAAK40B,EAAAA,EAAAA,OAA2B,8BAChCz0B,MAAOy0B,EAAAA,EAAAA,OAA2B,gCAClC30B,aAAc20B,EAAAA,EAAAA,OAA2B,uCACzC10B,cAAe00B,EAAAA,EAAAA,OAA2B,4CAK1D2E,UAAW,CACPF,MAAO,CACHiY,kBAAmB0vI,GACnBhwJ,SAAUqwJ,GACVr3G,WAAYg5G,IAEhB7pJ,YAAa,WACT,IAAI+pJ,EAAiC,SAASjxL,EAASuyH,EAAcm5C,GACjE,IAAI77G,EAAyB08H,GAA0Bh6D,GACnD2+D,EAAelxL,EAAQ8gB,OAASyxG,EAAazxG,OAOjD,OANAwJ,EAAAA,EAAAA,IAAKohJ,GAAkB,SAASx+I,EAAGoR,GAC3BA,EAAMhb,MAAQusC,IACdvxB,EAAM5F,aAAew4J,EACrB5yJ,EAAMhb,OAAS4tK,MAGhBxlB,GAEX,MAAO,CACH8E,eAAgB,CACZ7E,yBAA0B,SAASnxJ,GAC/B,IAAIs1B,EAAiBt1B,EAAQxa,QACzBsrK,EAAsB9wJ,EAAQ8wJ,oBAClC,GAAIA,GAAuB,YAAcA,EAAoBnxH,WAAamxH,EAAoBtoE,kBACtFxoF,EAAQ83C,aAAapnD,MAAO,CACvBsP,EAAQiyB,WACTjyB,EAAQ6nC,eAAiBipH,EAAoB2jB,uBAAuB,IAExEz0K,EAAQxa,QAAUsrK,EAAoB77G,gBAAgBj1C,EAAQiyB,UAC9D,IAAIi/H,EAAkBxyK,KAAKs6B,SAAShZ,GAEpC,OADAy2K,EAA+BnhJ,EAAgBt1B,EAAQxa,QAAS0rK,GACzDA,EAGf,OAAOxyK,KAAKs6B,SAAShZ,IAEzB+xJ,cAAe,SAASjuI,EAAOt+B,EAASsa,EAAUg4C,GAC9C,IAAIpwC,EAAShpB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACnCquC,EAAe5yD,EAAQs+B,EAAM5F,aAC7Bs1J,EAAqB90L,KAAKsgF,mBAAmBy0G,8BACjD,IAAK/rK,GAAU,YAAc5H,GAAY0zK,GAAsBA,EAAmBltK,OAAQ,CACtF,IAAIwoJ,GAAe/qI,EAAAA,EAAAA,GAAgByvJ,EAAmBn1J,IAAI,IAC1D,OAAIy5B,GAAgBA,EAAapnD,MACtB,UAAYonD,EAAannD,cAAgBmzB,EAAMl2B,EAAIkhK,EAAavoJ,MAAQud,EAAMl2B,EAAIkhK,EAAarxJ,QAElG26C,IAAgBA,EAAa1nD,OAAS,UAAY0nD,EAAaznD,iBAG5DmzB,EAAMl2B,EAAIkhK,EAAarxJ,MAAQqmB,EAAMl2B,EAAIkhK,EAAavoJ,OAGrE,OAAOmB,IAGfw4H,eAAgB,CACZixB,yBAA0B,WACtB,IAAI7qI,EAAO5nC,KACPiwC,EAAoBrI,EAAKiP,mBACzB/vC,EAAUmpC,GAAqBrI,EAAKiP,mBAAmBC,oBACvDuiF,EAAeppF,GAAqBrI,EAAKiP,mBAAmB0f,kBAC5DhlB,EAAQ3J,EAAK04C,mBAAmBy1G,yBAChCkC,EAAuB,GAC3BrwJ,EAAKtN,WACDiX,GAASA,EAAM3pB,OAAS,IACxBqwK,EAAuB/oJ,EAAAA,mBAAiCqC,GAAQ,SAASnM,GACrE,OAAOwC,EAAKyrI,cAAcjuI,EAAOmM,EAAM3pB,OAAQyxG,MAEnDzxF,EAAKswJ,sBAAwBH,EAA+BjxL,EAASuyH,EAAc4+D,KAG3F5kB,cAAe,SAASjuI,EAAOJ,EAAal+B,GACxC,IAAIqxL,EAAuB,WAAan4L,KAAKuiC,OAAO,sBACpD,GAAI6C,EAAMhb,MAAQ,GAAKgb,EAAMhb,MAAQ4a,EAAa,CAC9C,IAAIwpB,EAAgB1nD,EAAQs+B,EAAM5F,YAAc,IAAM,GAClDi0I,EAAa3sK,EAAQs+B,EAAM5F,cAAgB,GAC/C,GAAIgvB,EAAcx8C,OAASyhK,EAAWzhK,MAElC,OADAozB,EAAM5F,aAAe,KACXgvB,EAAc99C,eAAiB89C,EAAcnnB,UAAY4oF,MAAyBkoE,GAAwB1kB,EAAW/iK,eAAiB+iK,EAAWpsI,UAAY4oF,KAG/K,OAAOjwH,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCqoJ,gBAAiB,SAASlB,EAAiBmB,EAAU7B,GACjD,IAAIgjB,EAAqB90L,KAAKsgF,mBAAmBy0G,8BACjD,GAAID,GAAsBA,EAAmBltK,OAAQ,CACjD,IAAIwoJ,GAAe/qI,EAAAA,EAAAA,GAAgByvJ,EAAmBn1J,IAAI,IAC1D,GAAIg0I,GAAYvD,EAAarxJ,MAAQ40J,GAAYvD,EAAavoJ,MAC1D,OAAO7nB,KAAKs6B,SAASt6B,KAAKk4L,sBAAuBvkB,EAAU7B,GAGnE,OAAO9xK,KAAKs6B,SAASk4I,EAAiBmB,EAAU7B,MApFnD,KCnxBrBtnH,GAAAA,eAAwB,eAAgBstI,ICmCxC,IAAIxe,GAAsB,oBACtB8e,GAAY,WACZC,GAAc,aACdC,GAAe,CAAChf,GAAqB8e,GAAWC,IAChDE,GAAqB,uBACrBlmJ,GAAuB,iBACvBmmJ,GAAoB,iBACpBC,GAA0B,wBAC1BC,GAAqB,mBACrBC,GAAsB,gBACtBC,GAA+B,gBAC/BC,GAA6B,sBAC7BC,GAAgC,6BAChCC,GAA4B,yBAC5BC,GAA2B,wBAC3BnwF,GAA2B,wBAC3BowF,GAAuB,oBACvBC,GAAuB,WACvB9mF,GAAkB,QAClBC,GAAgB,MAChBE,GAAiB,OACjBC,GAAkB,QAClB+c,GAAuB,iBACvBz5C,GAAmB,gBACnB9jC,GAAkB,eAClBmnJ,GAAmB,gCACnBC,GAAqB,kCACrB76J,GAAwB,uBAE5B,SAASugC,GAAYl3B,EAAMz5B,GACvB,OAAOy5B,EAAKiP,mBAAmBioB,YAAY3wD,GAG/C,SAASkrL,GAAoB/iJ,GACzB,OAAOA,EAAK/U,KAAK,kEAGrB,SAAS+3J,GAAqBhgL,EAAWgI,GACrC,IAAIi4K,EACA75J,GAAamC,EAAAA,EAAAA,GAAEvoB,GACfkgL,EAA4Bl4K,EAAQwkB,UAAUuE,cAAc,mBAC5D,SAAW/oB,EAAQwiB,SACnBy1J,GAAwB13J,EAAAA,EAAAA,GAAE,UAAUC,SAAS03J,EAA0Bn4J,gBAAgBu3J,KACvFhyJ,EAAAA,EAAAA,GAAgB2yJ,GAAuBxkH,EAAAA,GAAAA,IAAa5hC,GAAAA,EAAgBolJ,IAAqBiB,EAA0B3vJ,cAAc,WAC7H2vJ,EAA0BC,8BAA8Bn4K,EAAQoK,SAEpE6tK,EAAsBx3J,SAASrC,IAE/BwP,EAAAA,aAA2BxP,GAGnC,IAAIg6J,GAA4BlsJ,GAAAA,eAAAA,QAA+B,CAC3DisI,eAAgB,WACZ,IAAIjkE,EAAWx1G,KAAK25L,eACpB,OAAOnkF,IAAanD,IAExBunF,gBAAiB,SAAS3yK,EAAM8vB,GAC5B,IAAIvX,EAAcx/B,KAAK62C,mBAAmBc,gBAAgB1wB,EAAK9Y,OAAOic,OAClEmpB,EAAWvzC,KAAK0hC,gBAAgBsxC,iBAAiBj8B,EAAYrrB,KAC7Dia,EAAM3lC,KAAK0hC,gBAAgBtkB,QAAQm2B,EAAW,GAClD,OAAO5N,GAAOA,EAAIwpC,iBAAkB1+C,EAAAA,EAAAA,IAAUkV,EAAIwpC,eAAe3vC,KAErEq6J,wBAAyB,SAAS5yK,EAAM8vB,EAAarX,GACjD,IAAIvxB,EAAS8Y,EAAK9Y,OACd2rL,EAAc95L,KAAK6pC,cAAc,WACjCjD,EAAAA,EAAAA,QAAqBlH,EAAYyT,GAAAA,MAEjC7yC,EAAQ6N,EAAO4C,mBAAmBgmC,EAAYrnC,MAC9CsuD,EAAe9uB,EAAAA,gBAA8B/gC,EAAQ7N,EAAOy2C,EAAYrnC,KAAMqnC,EAAYjT,SAC1Fr0B,EAAOy/B,EAAAA,YAA0B8uB,EAAc7vD,GAC/C++G,EAAwBltH,KAAK8lH,mBAAmBoH,wBAChDrnF,EAAW7lC,KAAKugF,UAQpB,GAPIpyE,EAAO+B,cAAgBlQ,KAAKqqC,cAAc,sBAAsBya,sBAChEplB,EAAW0K,KAAK,WAAYpqC,KAAKuiC,OAAO,aACpC2qF,IACAtmF,EAAAA,EAAAA,IAAiBlH,EAAY,QAASo6J,GACtClzJ,EAAAA,EAAAA,GAAgBlH,EAAY,QAASo6J,KAGzC3rL,EAAOkD,aAAc,CACrB,IAAIkoC,GAAkB3tB,EAAAA,EAAAA,GAAO,GAAImrB,EAAa,CAC1Cz2C,MAAOA,EACP09D,aAAcA,EACdvuD,KAAMA,EACNtB,OAAQA,IAERk/G,IAAiB3tF,EAAWqH,SAAQnE,EAAAA,EAAAA,MAAYm4C,UAAUnzD,OAC9Die,EAASwT,eAAe3Z,EAAYvxB,EAAOkD,aAAckoC,EAAiB8zE,GAAch/F,MAAK,KACzFwX,EAASwP,cAAc3V,EAAYqX,UAEpC,CACH,IAAIz9B,EAAYomB,EAAWC,IAAI,GAC3BxxB,EAAOwD,WACP2H,EAAUsmB,YAAcnwB,EAExB6J,EAAUu9D,UAAYpnE,EAE1BiwB,EAAWoC,SAASk3J,KACfvoK,EAAAA,EAAAA,IAAUhhB,IAAS,KAAOA,GAC3BiwB,EAAWxe,KAAK,UAEflhB,KAAKy5K,kBACFz5K,KAAK45L,gBAAgB3yK,EAAM8vB,IAC3BrX,EAAWoC,SAAS42J,IAG5B7yJ,EAASwP,cAAc3V,EAAYqX,KAG3CjK,aAAc,SAAS7lB,EAAM8vB,GACzB,IAAInP,EAAO5nC,KACPmO,EAAS8Y,EAAK9Y,OACd8mE,EAAoBj1E,KAAKqqC,cAAc,WAC3C,OAAO,SAAS/oB,EAAShI,GACrB,IAAIomB,GAAamC,EAAAA,EAAAA,GAAEvoB,GACfkmB,EAAcoI,EAAKiP,mBAAmBc,gBAAgBxpC,EAAOic,OAC7DmvB,GAAkB3tB,EAAAA,EAAAA,GAAO,GAAImrB,GAC7BgjJ,EAAqB,WACrB,IAAIC,EAAepyJ,EAAKqyJ,cAAchzK,GACtCsyB,EAAgBj5C,MAAQy2C,EAAYpR,IAAIjK,OAAO8D,GAC3Cw6J,GAAgB7rL,EAAO6E,iBACvBiiE,EAAkBm1C,uBAAuB7wE,EAAiBtyB,EAAM3F,EAASoe,GAAas6J,IAEtFzgJ,EAAgBprC,OAASA,EACzBorC,EAAgB/Z,YAAcA,EAC9BoI,EAAKiyJ,wBAAwB5yK,EAAMsyB,EAAiB7Z,KAG5Dq6J,IACAxgJ,EAAgBoD,OAASpD,EAAgBoD,OAAO,WAC5C,MAAO,CACHq9I,aAAcpyJ,EAAKqyJ,cAAchzK,GACjC3mB,MAAOy2C,EAAYpR,IAAIjK,OAAO8D,OAEjC,WACDE,EAAWurF,WAAW3oF,SACtB5C,EAAWsC,YAAYg3J,IACvBe,SAIZG,uBAAwB,SAAStjJ,GAC7B,QAAIA,EAAiB,MAGjBA,EAAehvB,OAAS,WAEpB,IADA,IAAIoB,EAAS,EACJ6uB,EAAI,EAAGA,EAAIjB,EAAehvB,OAAQiwB,IAAK,CAC5C,IAAI0kB,EAAgB3lB,EAAeiB,GAC/B0kB,EAAcl1B,SACdre,IAGR,OAAOA,EARa,IASjB,IAKfmxK,wBAAyB,SAAS78I,EAAQ1G,GACtC,IAAIhP,EAAO5nC,KACPo6L,EAAgB,EAMpB,OALAxjJ,EAAeiF,SAAS,SAAS50B,EAAMmD,GAC/BkzB,EAAOlzB,KAAWioB,KAClB+nJ,GAAiBxyJ,EAAKyyJ,qBAAqBpzK,OAG5CmzK,GAEXE,gBAAiB,SAAS9sL,GACtB,OAAO2rC,EAAAA,EAAAA,IAAS3rC,IAAU,MAAQA,EAAMuc,OAAO,IAEnDwwK,gBAAiB,SAASpsL,GACtB,OAAOnO,KAAKw6L,eAAe52K,QAAQ,SAAS62K,GACxC,OAAOA,EAAarwK,QAAUjc,EAAOic,SACrCxC,OAAS,GAEjBu9D,wBAAyB,SAAS+vD,EAAgBpuI,EAAS4zL,GACvD,IAAI9yJ,EAAO5nC,KACP26L,EAAoB,EACpBC,EAAgC,EAkBpC,OAjBA9zL,EAAQ+0C,SAAS,SAAS1tC,GACtB,IAAKy5B,EAAK2yJ,gBAAgBpsL,GAAS,CAC/B,IAAIX,EAAQW,EAAOX,OACfijB,EAAAA,EAAAA,IAAUjjB,KAAW0gD,MAAMxhB,WAAWl/B,IACtCmtL,GAAqB/yJ,EAAK0yJ,gBAAgB9sL,GAASo6B,EAAKizJ,uBAAuB,CAC3ErnL,aAAcrF,EAAOqF,aACrBm7G,aAAc7nH,EAAQ8gB,OACtB8yK,cAAeA,EACf9vI,aAAcz8C,EAAOy8C,aACrB5jD,YAAawG,EACb0nI,eAAgBA,IACfxoG,WAAWl/B,GAEhBotL,SAIJ1lD,EAAiBylD,GAAqBC,GAElDE,sBAAuB,SAAS3sL,EAAQ+mI,EAAgB6lD,EAAgBL,GACpE,IAIIM,EAJAv3G,EAAW3kB,GAAY9+D,KAAMmO,GAC7B8sL,EAAcj7L,KAAK62C,mBAAmB6J,aAAa+iC,EAAU,SAC7D74B,EAAe5qD,KAAK62C,mBAAmB6J,aAAa+iC,EAAU,gBAC9DkrC,EAAeosE,EAAenzK,OAElC,GAAIqzK,GAAe,SAAWA,EAAa,CACvC,IAAIj7L,KAAKs6L,gBAAgBW,GAUrB,OAAOvuJ,WAAWuuJ,GATlBD,EAAWh7L,KAAK66L,uBAAuB,CACnCrnL,aAAcrF,EAAOqF,aACrBm7G,aAAcA,EACd+rE,cAAeA,EACf9vI,aAAcA,EACd5jD,YAAai0L,EACb/lD,eAAgBA,QAKrB,CACH,IAAI3uI,EAAkBvG,KAAKuiC,OAAO,mBAClCy4J,EAAWz0L,GAAqB4H,EAAOk5B,QAAUujB,EAAe5qD,KAAKmlF,wBAAwB+vD,EAAgB6lD,EAAgBL,GAEjI,OAAOM,GAEXH,uBAAwB,SAASv5K,GAC7B,IAAI45K,EAAe55K,EAAQ9N,aAAe8N,EAAQqtG,aAAe,GAAKrtG,EAAQo5K,cAC1ES,EAAe75K,EAAQ4zH,eAAiBxoG,WAAWprB,EAAQta,aAAe,IAC1Eo0L,EAAc95K,EAAQo5K,eAAiBS,EAAe75K,EAAQspC,aAAetpC,EAAQspC,aAAeuwI,EACxG,OAAOD,EAAe55K,EAAQ4zH,eAAiBxoG,WAAWprB,EAAQta,aAAe,IAAMo0L,GAE3FC,4BAA6B,SAASltL,EAAQ+mI,EAAgB6lD,EAAgBL,GAC1E,IAAIj3G,EAAW3kB,GAAY9+D,KAAMmO,GAC7B8sL,EAAcj7L,KAAK62C,mBAAmB6J,aAAa+iC,EAAU,SAC7D74B,EAAe5qD,KAAK62C,mBAAmB6J,aAAa+iC,EAAU,gBAClE,GAAIw3G,GAAe,SAAWA,IAAgBj7L,KAAKs6L,gBAAgBW,GAC/D,OAAOvuJ,WAAWuuJ,GAEtB,IAAID,EAAWh7L,KAAK86L,sBAAsB3sL,EAAQ+mI,EAAgB6lD,EAAgBL,GAClF,OAAOM,EAAWpwI,EAAe,KAAOowI,GAE5CX,qBAAsB,SAASpzK,GAC3B,IAAI+B,EAAS,EAIb,OAHI/B,EAAKzZ,OAASxN,KAAKs6L,gBAAgBrzK,EAAKzZ,SACxCwb,EAAS0jB,WAAWzlB,EAAKzZ,QAEtBwb,GAEXsyK,wBAAyB,WACrB,IAAI1zJ,EAAO5nC,KACP8G,EAAU8gC,EAAKiP,mBAAmBC,oBAClCkkJ,EAAW,EAMf,OALA5pK,EAAAA,EAAAA,IAAKtqB,GAAU,SAASsjB,EAAOjc,IACvBA,EAAOic,MAAQ,GAAKjc,EAAOk5B,WAC3B2zJ,GAAYpzJ,EAAKiP,mBAAmB6J,aAAaoe,GAAYl3B,EAAMz5B,GAAS,iBAAmB,MAGhG6sL,GAEXf,cAAe,SAAShzK,GACpB,GAAIjnB,KAAKwoH,wBACL,OAAO,EAEX,IAAIxoH,KAAKy5K,iBAKF,CACH,IAAIlmI,EAAWvzC,KAAK0hC,gBAAgBsxC,iBAAiBhzE,KAAK0hC,gBAAgB65J,uBAAyB,EAC/F/7J,EAAcx/B,KAAK62C,mBAAmBc,gBAAgB1wB,EAAK9Y,OAAOic,OACtE,OAAOpqB,KAAK8lH,mBAAmBrM,WAAWlmE,EAAU/T,GAPpD,IAAInpB,EAAarW,KAAKuiC,OAAO,sBAC7B,SAAIQ,EAAAA,EAAAA,IAAa1sB,EAAYrW,KAAK0hC,gBAAgB65J,6BAAlD,GASRC,6BAA8B,SAASC,GACnC,IAAIr+K,EAAQ,GASZ,OARAgU,EAAAA,EAAAA,IAAKqqK,GAAgB,SAASznK,EAAG7lB,GAC7BiP,EAAMiL,KAAK,CACPla,OAAQA,EACRmB,KAAMnB,EAAOmB,KACbiC,UAAWpD,EAAOoD,UAClBiC,aAAcrF,EAAOqF,kBAGtB4J,GAEXs+K,+BAAgC,SAAS9kJ,GACrC,IAAK,IAAI/e,EAAI,EAAGA,EAAI+e,EAAehvB,OAAQiQ,IAAK,CAC5C,IAAI1pB,EAASyoC,EAAe/e,GAC5B,GAAI1pB,EAAOk5B,UAAY6xJ,GACnB,OAAOrhK,IAInB8jK,oBAAqB,SAASz0J,EAAc0P,GACxC,IAAIpjC,EAAexT,KAAK07L,+BAA+B9kJ,IACnDnmB,EAAAA,EAAAA,IAAUjd,KACV0zB,EAAa1zB,GAAgB6+B,GAC7BryC,KAAK47L,mBAAmB,CACpB7qB,iBAAiB,EACjBv9J,aAAcA,MAI1B83K,uBAAwB,SAAS/6J,GAC7B,IACI4gB,OAAQA,EACR4/H,gBAAiBA,GACjBxgJ,EACAsrK,EAAuB9qB,EAAkB+nB,GAAgC94L,KAAKqhC,gBAAgBs3J,IAClGxnJ,EAAOnP,YAAY65J,IAEvBC,mBAAoB,WAChB,IAAK,IAAIjkK,EAAI,EAAGA,EAAIygK,GAAa1wK,OAAQiQ,IAAK,CAC1C,IAAIunD,EAAOp/E,KAAK+lC,QAAQuyJ,GAAazgK,IACrC,GAAIunD,GAAQA,EAAK39C,aAAe29C,EAAKj+C,UAAW,CAC5C,IAAIqhB,EAAW48B,EAAK9vE,KAChBysL,EAAsB38G,EAAKj+C,UAAUI,KAAK,IAAMu3J,IACpD94L,KAAKsrL,uBAAuB,CACxB9oI,SAAUA,EACVrR,OAAQ4qJ,EACRhrB,iBAAiB,IAErB,IAAIirB,EAAe58G,EAAKj+C,UAAUI,KAAK,IAAMvhC,KAAKqhC,gBAAgBs3J,KAClE34L,KAAKsrL,uBAAuB,CACxB9oI,SAAUA,EACVrR,OAAQ6qJ,OAKxB5Y,aAAc,SAAS1yI,GACnB,OAAOA,GAASA,EAAM9oB,SAAW8oB,EAAMd,SAASi5D,MAA8Bn4D,EAAMd,SAASkmC,KAEjG8lH,mBAAoB,SAASl7H,GACzB,IACIqwG,gBAAiBA,EACjBv9J,aAAcA,GACdktD,EACA94B,EAAO5nC,KACXs4L,GAAaz8I,SAAS,SAAS2G,GAC3B,IAAI48B,EAAOx3C,EAAK7B,QAAQyc,GACxB48B,GAAQx3C,EAAKq0J,yBAAyB,CAClC78G,KAAMA,EACN2xF,gBAAiBA,EACjBv9J,aAAcA,QAI1ByoL,yBAA0B,SAAS/0H,GAC/B,IAMIjf,GALAm3B,KAAMA,EACN2xF,gBAAiBA,EACjBv9J,aAAcA,GACd0zD,EACA1kB,EAAW48B,EAAK9vE,KAEhBnB,EAASnO,KAAK62C,mBAAmBC,oBAAoBtjC,GACrD84G,EAAmBtsH,KAAK8lH,oBAAsB9lH,KAAK8lH,mBAAmBxM,sBAC1E,GAAIl6B,GAAQA,EAAK39C,aAAetzB,EAG5B,IAFA,IAAI+tL,EAAY98G,EAAKv+B,eACjBk5B,EAAeqF,EAAKp/B,kBACfzM,EAAW,EAAGA,EAAW2oJ,EAAW3oJ,IAAY,CACrD,IAAI4oJ,EAAoB5oJ,IAAa+4E,GAAoB9pE,IAAa41I,IAAa,UAAYp4L,KAAKuiC,OAAO,gBAC3G,IAAK45J,EAAmB,CACpB,IAAIC,EAAsB55I,IAAa82H,GAAsBt5K,KAAK62C,mBAAmBc,gBAAgBxpC,EAAOic,MAAOmpB,GAAY//B,EAC/H,GAAI4oL,GAAuB,EAAG,CAC1B,IAAI3gJ,EAAcs+B,EAAa70C,GAAGqO,GAClC0U,EAAejoD,KAAKq8L,sBAAsB5gJ,EAAa2gJ,GACvDp8L,KAAKojL,aAAan7H,IAAiBjoD,KAAKurL,uBAAuB,CAC3D/oI,SAAUA,EACVuuH,gBAAiBA,EACjBrgI,MAAOuX,QAO/Bo0I,sBAAsB5gJ,EAAausI,GAC/B,IAAIsU,EAAY7gJ,EAAY5K,WACxBr9B,EAAew0K,EACfuU,GAAoB,EACxB,GAAI9gJ,EAAY7L,SAASoC,IAAkB,CACvC,IAAI4gJ,EAAan3I,EAAYla,KAAK,IAAIzZ,OAAOguD,KACzCr3D,EAAUm0K,EAAWxoJ,KAAK,WAC9B,GAAIwoJ,EAAWhrK,SAAU6I,EAAAA,EAAAA,IAAUhS,GAAU,CACzC,IAAI+9K,EAAkB5rK,SAASnS,GAC3Bg+K,EAAgB7J,EAAWxoK,QAAUoyK,EAAkB,EACvDxU,EAAqByU,EACrBjpL,EAAew0K,EAAqBwU,EAAkB,EAEtDD,GAAoB,GAIhC,IAAIt0I,EAAgBs0I,OAAiD,EAA7BD,EAAUp3J,GAAG1xB,GACrD,OAAOy0C,GAEXsjI,uBAAwB,SAASnkH,GAC7B,IACI12B,MAAOA,EACPqgI,gBAAiBA,GACjB3pG,EACAs1H,EAAoB3rB,EAAkB+nB,GAAgC94L,KAAKqhC,gBAAgBs3J,IAC/FjoJ,EAAM5O,SAAS46J,IAEnB/C,aAAc,WACV,OAAO35L,KAAK8lH,mBAAmBvQ,eAEnCiT,sBAAuB,WACnB,IAAIhT,EAAWx1G,KAAK25L,eACpB,OAAOnkF,IAAajD,IAAkBiD,IAAahD,IAEvDmqF,qBAAsB,SAASz1J,EAAc0P,EAAgBgmJ,GAEzD,GADA58L,KAAKw6L,eAAiB,GAClBx6L,KAAKk6L,uBAAuBtjJ,IAAmBgmJ,EAAYh1K,OAAQ,CACnE,IAQIiQ,EACAglK,EACAC,EAVAv6G,EAAa,EACbhN,EAAev1E,KAAK8lC,UAAUpF,WAC9Bq8J,GAAmBv7I,EAAAA,EAAAA,IAAS+zB,GAAgBv1E,KAAKs7L,0BACjD0B,EAA2B,WAC3B,OAAOpmJ,EAAehzB,QAAOqD,IAASA,EAAKogB,SAAW,IAAMrnC,KAAKw6L,eAAe52K,QAAOiU,GAAKA,EAAEzN,QAAUnD,EAAKmD,QAAOxC,UACtH0c,KAAKtkC,MACHi9L,EAAwBD,IACxBE,EAAsBD,EAAsBr1K,OAIhD,EAAG,CACCk1K,GAAiB,EACjBv6G,EAAa,EACb,IAAI63G,EAAgBp6L,KAAKm6L,wBAAwBjzJ,EAAc0P,GAC3D8jJ,EAAgBN,EAAgB,KAAO,IAAMA,EACjD,IAAKviK,EAAI,EAAGA,EAAI+e,EAAehvB,OAAQiQ,IAAK,CACxC,IAAI0kC,EAAgB3lB,EAAe/e,GAC/B7wB,EAAchH,KAAKq7L,4BAA4B9+H,EAAewgI,EAAkBE,EAAuBvC,GACvGj3G,EAAW3kB,GAAY9+D,KAAMu8D,GAC7B0+H,EAAcj7L,KAAK62C,mBAAmB6J,aAAa+iC,EAAU,SAC7D9wE,EAAW3S,KAAK62C,mBAAmB6J,aAAa+iC,EAAU,YAC1D05G,EAAqBn9L,KAAK62C,mBAAmB6J,aAAa+iC,EAAU,gBACxE,GAAIv8C,EAAarP,KAAOwa,GAAxB,CAIA,IAAKrrC,IAAgBu1D,EAAcl1B,UAAYk1B,EAAcvqD,MAAO,CAChE8qL,GAAiB,EACjB,MAEC7B,GAAe,SAAWA,IAC3Bj0L,EAAcyrB,KAAKxP,IAAIk6K,GAAsB,EAAGxqL,GAAY,KAE5D4pD,EAAcl1B,UAAY6xJ,IAAwB2D,KAClDt6G,GAAcv7E,QAXd61L,GAAmB,EAe3B,GADAC,EAAiBA,GAAkBv6G,GAAa/gC,EAAAA,EAAAA,IAAS+zB,GACrDunH,EAAgB,CAChB,IAAI3uL,EAASyuL,EAAY/xK,MACrBrX,EAAexT,KAAK62C,mBAAmBc,gBAAgBxpC,EAAOic,OAClE2yK,GAAoB/8L,KAAK86L,sBAAsB3sL,EAAQ4uL,EAAkBE,EAAuBvC,GAChG16L,KAAK47L,mBAAmB,CACpBpoL,aAAcA,IAElB0zB,EAAa1zB,GAAgB6+B,GAC7BryC,KAAKw6L,eAAenyK,KAAKla,GACzB8uL,EAAwBD,WAEvBF,GAAkBG,EAAsBr1K,OAAS,GAAKg1K,EAAYh1K,QACvEs1K,IAAwBD,EAAsBr1K,QAC9C5nB,KAAK27L,oBAAoBz0J,EAAc0P,QAG3C52C,KAAK27L,oBAAoBz0J,EAAc0P,IAG/CwmJ,4BAA6B,SAASpV,GAElC,IADA,IAAIqV,EACKxlK,EAAI,EAAGA,EAAI73B,KAAKs9L,eAAe11K,OAAQiQ,IAAK,CACjDwlK,EAAer9L,KAAKs9L,eAAep4J,GAAGrN,GACtC,IAAI5Q,EAAOo2K,EAAa3tL,KAAK,gBAC7B,GAAIuX,GAAQA,EAAK9Y,QAAUnO,KAAK62C,mBAAmBc,gBAAgB1wB,EAAK9Y,OAAOic,SAAW49J,EACtF,OAAOqV,IAInB5D,8BAA+B,SAAS/tK,EAAK6xK,GACnCv9L,KAAKwoH,yBAA2BxoH,KAAK8lH,mBAAmBx3C,aAC1DtuE,KAAKqqC,cAAc,QAAQovJ,8BAA8B/tK,EAAK6xK,IAGtEC,0BAA2B,SAASlkL,EAAWgI,GAC3C,IAAIsmB,EAAO5nC,KACP0/B,GAAamC,EAAAA,EAAAA,GAAEvoB,GACfmkL,EAAkB,CAClBrgL,MAAOwqB,EAAK4zJ,6BAA6B5zJ,EAAK4yJ,gBAC9C5uE,OAAQ,MAAQ,IAAIh5F,GAAAA,GAEpB8qK,GAAqBnxG,EAAAA,GAAAA,MAAe,CACpCvvE,SAAU,GACV,GACJhd,KAAK2qC,cAAc,+BAAgC,CAC/CgzJ,YAAaF,IAEjB71J,EAAK01J,eAAiB,KACtB11J,EAAKg2J,MAAQh2J,EAAKpF,kBAAiBX,EAAAA,EAAAA,GAAE,SAASE,SAASrC,GAAassF,GAAAA,YAAMpgG,EAAAA,EAAAA,GAAO8xK,EAAoBD,EAAiB,CAClHvgL,cAAe,SAAS+J,GACpB,IAAI9Y,EAAS8Y,EAAK9Y,QAAUy5B,EAAKiP,mBAAmB6J,aAAaz5B,EAAK3X,MAAQ2X,EAAK1V,WAC/EpD,IACA8Y,EAAKnI,MAAQmI,EAAKnI,OAAS,GAC3BmI,EAAKnI,MAAMrP,KAAOwX,EAAKnI,MAAMrP,MAAQtB,EAAOiD,QAC5C6V,EAAK9Y,OAASA,EACd8Y,EAAKzX,SAAWo4B,EAAKkF,aAAa7lB,EAAM3F,EAASsmB,EAAKi2J,WAAWv5J,KAAKsD,KAE1E61J,EAAgBvgL,eAAiBugL,EAAgBvgL,cAAcgP,KAAKlsB,KAAMinB,IAE9Ezd,eAAgB,SAAS88B,GACrBm3J,EAAgBj0L,gBAAkBi0L,EAAgBj0L,eAAe0iB,KAAKlsB,KAAMsmC,GAC5EsB,EAAK01J,eAAiB59J,EAAW6B,KAAK,IAAMk3J,SAIxDqF,6BAA8B,WAC1B,OAAOrtK,EAAAA,EAAAA,IAAUzwB,KAAK0hC,gBAAgB65J,wBAE1CsC,WAAY,SAASpC,GACbz7L,KAAK89L,gCACD99L,KAAK49L,QAASntK,EAAAA,EAAAA,IAAUzwB,KAAK49L,MAAMG,uBAC/BtC,GAAiBA,EAAc7zK,OAC/B5nB,KAAK49L,MAAMr7J,OAAO,QAASviC,KAAKw7L,6BAA6BC,IAE7Dz7L,KAAK49L,MAAMv0E,YAK3B20E,kBAAmB,SAASl3L,GACxB,IAGIm3L,EACApmK,EAJAqmK,EAAkBp3L,EAAQ8c,QAAQ,SAASzV,GAC3C,OAAOA,EAAOZ,UAAYY,EAAOW,OAASX,EAAO6D,UAAWye,EAAAA,EAAAA,IAAUtiB,EAAOmE,aAAenE,EAAOmE,YAAc,MAKrH,GADAtS,KAAKm+L,oBAAsB,GACvBn+L,KAAKuiC,OAAO,wBAA0B,WAAaviC,KAAKuiC,OAAO,sBAC/D,OAAOviC,KAAKm+L,oBAEhB,IAAKtmK,EAAI,EAAGA,EAAIqmK,EAAgBt2K,OAAQiQ,KAChCpH,EAAAA,EAAAA,IAAUytK,EAAgBrmK,GAAGrlB,iBAAmB0rL,EAAgBrmK,GAAGrlB,gBAAkB,IACrFyrL,GAA2B,EAC3Bj+L,KAAKm+L,oBAAoBD,EAAgBrmK,GAAGrlB,gBAAkB0rL,EAAgBrmK,IAGtF,GAAIomK,EACAj+L,KAAKm+L,oBAAoB7oK,eACtB,GAAIt1B,KAAKuiC,OAAO,uBACnB,IAAK1K,EAAI,EAAGA,EAAIqmK,EAAgBt2K,OAAQiQ,IAAK,CACzC,IAAIrkB,EAAexT,KAAK62C,mBAAmBc,gBAAgBumJ,EAAgBrmK,GAAGzN,OAC9EpqB,KAAKm+L,oBAAoB3qL,GAAgB0qL,EAAgBrmK,GAIjE,OADA73B,KAAKm+L,oBAAsBn+L,KAAKm+L,oBAAoBv6K,OAAOzjB,QACpDH,KAAKm+L,qBAEhBC,iBAAkB,WACd,OAAOp+L,KAAKw6L,gBAEhBqC,iBAAkB,WACd,OAAO78L,KAAKw6L,eAAe5yK,OAAS,GAExCy2K,sBAAuB,WACnB,OAAOr+L,KAAKm+L,qBAEhBl1J,KAAM,WACF,IAAIrB,EAAO5nC,KACX4nC,EAAKiP,mBAAqBjP,EAAKyC,cAAc,WAC7CzC,EAAKlG,gBAAkBkG,EAAKyC,cAAc,QAC1CzC,EAAK24C,UAAY34C,EAAK7B,QAAQ,YAC9B6B,EAAKiP,mBAAmB2d,iBAAiB,CACrC1lD,KAAMoqL,GACN7xJ,QAAS6xJ,GACT3rL,SAAS,EACT+wL,gBAAgB,EAChBlvL,SAAUypL,GACV5oL,UAAW,SACXzC,MAAO,OACP6D,aAAcioL,GACdrnL,cAAe,UAEnB21B,EAAKiP,mBAAmBqH,eAAeC,KAAK,WACxC,IAAIogJ,IAAsB32J,EAAKo2J,kBAAkBp2J,EAAKiP,mBAAmB3F,cAActpB,OACvFggB,EAAKiP,mBAAmB6J,aAAa,mBAAoB,kBAAmB69I,GAAmB,MAEnG32J,EAAKk+E,mBAAqBl+E,EAAKyC,cAAc,WAC7CzC,EAAKu2J,oBAAsB,GAC3Bv2J,EAAK4yJ,eAAiB,GACtB5yJ,EAAKiC,aAAa,gCAClBjC,EAAKtN,YAETsP,cAAe,SAASnV,GAChB,wBAA0BA,EAAKnlB,MAC/BtP,KAAK62C,mBAAmB6J,aAAa,mBAAoB,kBAAmBjsB,EAAKn0B,OAErFN,KAAKs6B,SAAS7F,IAElByU,cAAe,WACX,MAAO,CAAC,8BAA+B,0BAA2B,8BAEtEs1J,4BAA6B,SAAS9yK,GAClC,OAAO1rB,KAAK0hC,gBAAgB65J,wBAAyBx4J,EAAAA,EAAAA,IAAa/iC,KAAK0hC,gBAAgB65J,sBAAuB7vK,IAElH+yK,wBAAyB,SAAS/yK,GACzB1rB,KAAK89L,gCACN99L,KAAKy5L,8BAA8B/tK,IAG3CgzK,0BAA2B,WACnB1+L,KAAK89L,gCACL99L,KAAKy5L,iCAGbkF,+BAAgC,SAASjzK,EAAK5M,GAC1C,IAAIy0B,EAAWvzC,KAAK0hC,gBAAgBsxC,iBAAiBtnD,GACrD,IAAK,IAAM6nB,EAAX,CAGA,IAAI+C,GAAOzU,EAAAA,EAAAA,GAAE7hC,KAAK8lC,UAAU0a,cAAcjN,IAC1CvzC,KAAK4+L,4BAA4BtoJ,EAAMx3B,KAE3C8/K,4BAA6B,SAAStoJ,EAAMuoJ,GACxC,IAAIC,EAAmBxoJ,EAAK/U,KAAK,wBACjCu9J,EAAiB10J,KAAK,aAAcX,EAAAA,EAAAA,OAA2Bo1J,OAG5DE,GAAmB,CAC1B74I,eAAgB,WACZ,MAAO,CACHx/C,qBAAqB,EACrByC,6BAA8B,OAGtC6kC,YAAa,CACTq9I,gBAAiBqO,IAErBtrJ,UAAW,CACPF,MAAO,CACHrI,SAAU,CACN0W,iBAAkB,SAASj7B,GACvB,IAAIsmB,EAAO5nC,KACPmO,EAASmT,EAAQnT,OACrB,OAAImT,EAAQwiB,UAAY00J,IAAqB,WAAarqL,EAAOk5B,QACtD,SAAS/tB,EAAWgI,GACvBsmB,EAAKo3J,2BAA2BxB,2BAA0B37J,EAAAA,EAAAA,GAAEvoB,GAAYgI,IAGzEsmB,EAAKtN,SAAShZ,IAEzBs0B,WAAY,SAASjQ,GACjB,IAAI2Q,EAAOt2C,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAIrC,OAHIsa,GAAOA,EAAI7B,UAAY00J,IAAqB7yJ,EAAIja,MAAQ1rB,KAAK0hC,gBAAgB65J,uBAC7EjlJ,EAAKxU,SAASi3J,IAEXziJ,GAEX2E,aAAc,SAAS3E,EAAMh1B,GACzBthB,KAAKs6B,SAASgc,EAAMh1B,GACpB,IAAIk4K,EAA4Bx5L,KAAKg/L,2BACjCC,EAA2BzF,EAA0B6E,wBAAwBz2K,OAC7Es3K,EAAsB1F,EAA0B4E,mBAAmBx2K,OACnEq3K,IAA6BC,GAC7B7F,GAAoB/iJ,GAAM9U,OAAOM,SAASm3J,IAE1C,SAAW33K,EAAQqkB,IAAI7B,SACvB01J,EAA0BoF,4BAA4BtoJ,EAAM6iJ,KAGpE9yE,6BAA8B,SAAS3lF,GACnC,IAAI28J,EAAe38J,EAASqG,QAAQ,IAAM0xJ,IAC1C,GAAI4E,EAAaz1K,QAAUy1K,EAAat2J,QAAQ/mC,KAAK8lC,UAAUpF,YAAY9Y,OAAQ,CAC/E,IAAIzV,EAAWkrL,EAAaz1K,OAASy1K,EAAa15I,QAAQj0C,KAAK,gBAAkB,KACjF,OAAOyC,GAAYA,EAAShE,QAAUnO,KAAK62C,mBAAmBc,gBAAgBxlC,EAAShE,OAAOic,OAE9F,OAAOpqB,KAAKs6B,SAASoG,IAG7B2U,cAAe,SAAS3E,EAAOpvB,GAC3BthB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACtB/J,EAAQqkB,IAAI7B,UAAY00J,IAAqBl3K,EAAQnT,OAAOwnC,eAAiBtD,IAC7E3B,EAAM5O,SAAS9hC,KAAKqhC,gBAAgBs3J,MAG5C14I,gBAAiB,SAAS1M,EAAU2M,GAChC,IAAIj5B,EAAOjnB,KAAK0hC,gBAAgBtkB,QAAQm2B,GACxC,OAAItsB,GAAQA,EAAK6c,UAAY00J,GAClBx4L,KAAKg/L,2BAA2B5B,4BAA4Bl9I,GAE5DlgD,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAGzC2+B,oBAAqB,SAAS1oC,GAC1B,GAAIA,EAAQqkB,KAAO,mBAAqBrkB,EAAQqkB,IAAI7B,QAAS,CACzD,IAAIs7C,EAAOp/E,KAAK8lC,UAAUC,QAAQ,qBAC9B5zB,GAAW0vB,EAAAA,EAAAA,GAAEvgB,EAAQg+D,eAAev4C,QAAQ,wBAAwBu6C,OAAO5xE,KAAK,gBAEpF,OADA4R,EAAQnT,OAASgE,EAAWA,EAAShE,OAASmT,EAAQnT,OAC/CixE,EAAKp1B,qBAAuBo1B,EAAKp1B,oBAAoB1oC,GAEhE,OAAOthB,KAAKs6B,UAAYt6B,KAAKs6B,SAAShZ,IAE1Cq2E,mBAAoB,SAAS1tD,GACzB,IAAIk1J,IAAcn/L,KAAKs6B,UAAWt6B,KAAKs6B,SAAS2P,GAChD,OAAOk1J,KAAiBl1J,EAAQlD,QAAQ,IAAM8xJ,IAA4BjxK,QAE9EqhB,KAAM,WACFjpC,KAAKs6B,WACLt6B,KAAKg/L,2BAA6Bh/L,KAAKqqC,cAAc,sBAIjE2D,YAAa,CACTrmC,OAAQ,CACJy3L,mBAAoB,SAASjxL,EAAQX,GACjCxN,KAAKs6B,SAASnsB,EAAQA,EAAOwnC,eAAiBtD,GAAuBlkC,EAAOy8C,aAAep9C,KAGnGg0I,eAAgB,CACZ6xB,cAAe,SAASjuI,EAAOJ,EAAal+B,GACxC,IAAIkiB,EAAShpB,KAAKs6B,SAAS8K,EAAOJ,EAAal+B,GAC3C0nD,EAAgB1nD,EAAQs+B,EAAM5F,cAAgB,GAC9Cq1I,EAAkB70K,KAAK20K,oBAAoBvvI,EAAM5F,aACjDi0I,EAAa3sK,EAAQ+tK,IAAoB,GACzCwqB,EAAuBxqB,IAAoBzvI,EAAM5F,YAAc,GAAKi0I,EAAWpsI,QAC/Ei4J,EAAyB9wI,EAAc7Y,eAAiBtD,IAAwBgtJ,EACpF,OAAOr2K,GAAUs2K,GAErB3qB,oBAAqB,SAASL,GAC1B,IAAI19H,EAAiB52C,KAAK62C,mBAAmBC,oBACzC1sB,EAAQpqB,KAAKs6B,SAASg6I,GAC1B,MAAO19H,EAAexsB,IAAUwsB,EAAexsB,GAAOurB,eAAiBtD,GACnEjoB,IAEJ,OAAOA,IAGfktJ,eAAgB,CACZjE,cAAe,SAASjuI,EAAOt+B,EAASsa,EAAUg4C,GAC9C,IAAIpwC,EAAShpB,KAAKs6B,SAAS8K,EAAOt+B,EAASsa,EAAUg4C,GACjDjrD,EAASrH,EAAQs+B,EAAM5F,YAAc,IAAM,GAC3C8/J,EAAyBnxL,EAAOwnC,eAAiBtD,GACrD,OAAOrpB,GAAUs2K,IAGzB93L,QAAS,CACLiyK,eAAgB,WACZ,OAAOz5K,KAAKu1G,gBAAkBlD,IAElC6R,yBAA0B,SAASntE,EAAa5oC,GAC5C,OAAInO,KAAKu1G,gBAAkBlD,IAAiB,mBAAqBt7D,EAAYjT,SACzEiT,EAAYvX,YAAcx/B,KAAK62C,mBAAmBc,gBAAgBxpC,EAAOic,OAClEpqB,KAAKmkH,kBAAkBptE,IAE3B/2C,KAAKs6B,SAASyc,EAAa5oC,IAEtCyoG,eAAgB,SAASpyD,GACrB,IAAI+6I,EAAgB/6I,EAAezd,QAAQ,IAAM0xJ,IAC7CllJ,EAAWvzC,KAAK0hC,gBAAgBsxC,iBAAiBhzE,KAAK0hC,gBAAgB65J,uBAAyB,EAC/FppL,EAAWotL,EAAc33K,OAAS23K,EAAc57I,QAAQj0C,KAAK,gBAAkB,KAC/E8vB,EAAcrtB,GAAYA,EAAShE,QAAUnO,KAAK62C,mBAAmBc,gBAAgBxlC,EAAShE,OAAOic,OACpGpqB,KAAKy5G,WAAWlmE,EAAU/T,IAC3Bx/B,KAAKs6B,SAASkqB,IAGtB44D,mBAAoB,SAASzvC,EAAYp6B,GACrC,IAAKvzC,KAAKw/L,oBAAoBh3E,yBAA2BxoH,KAAKw/L,oBAAoB3C,mBAAoB,CAClG,IAAIz/K,EAAQpd,KAAK0hC,gBAAgBtkB,QAC7B6J,EAAO7J,EAAMm2B,GACbksJ,EAAoBvwJ,EAAAA,cAA4BlvC,KAAK0hC,gBAAgB65J,sBAAuBn+K,GAChGpd,KAAK0/L,2BAA6B1/L,KAAKw/L,oBAAoB1B,+BACvD2B,GAAqB,GACrB9xH,EAAWtlD,KAAKo3K,EAAoB,GAExC9xH,EAAWtlD,KAAKkrB,EAAW,GAC3BvzC,KAAK0hC,gBAAgB65J,oBAAoBt0K,EAAKyE,OAGtDmxF,gBAAiB,SAASnxF,GACtB1rB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACtBrrB,KAAKw/L,oBAAoB3C,qBACzB78L,KAAKw/L,oBAAoB/F,8BAA8B/tK,EAAK1rB,KAAKsnH,iBACjEtnH,KAAK0/L,2BAA4B,IAGzCC,2BAA4B,WACpB3/L,KAAKy5K,kBAAoBz5K,KAAK0/L,4BAC9B1/L,KAAKw/L,oBAAoBd,4BACzB1+L,KAAK0/L,2BAA4B,IAGzCE,6BAA8B,WACtB5/L,KAAKw/L,oBAAoB3C,oBACzB78L,KAAK2/L,8BAGbn+E,mBAAoB,WAChBxhH,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1B,IAAIhG,EAAW,IAAIgI,EAAAA,GAWnB,OAVIrtB,KAAKy5K,kBAAoBz5K,KAAKw/L,oBAAoB3C,oBAClDjhK,EAAAA,EAAAA,IAAK57B,KAAKqqC,cAAc,cAAc4nF,UAAS,IAAO5jG,MAAKgjG,IACnDA,GACArxH,KAAK4/L,+BAETv6K,EAAS8I,aAGb9I,EAAS8I,UAEN9I,EAASoJ,WAEpB6zF,sBAAuB,WACnBtiH,KAAKs6B,WACLt6B,KAAK4/L,gCAETl9E,iCAAkC,SAAS/8E,GACvC,IAAIgoC,EAAa3tE,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAI3C,OAHIrrB,KAAKw/L,oBAAoBhB,4BAA4B74J,EAAIja,MACzDiiD,EAAWtlD,KAAKsd,EAAI7B,UAAY00J,GAAoB7yJ,EAAI4N,SAAW,EAAI5N,EAAI4N,SAAW,GAEnFo6B,GAEXy0C,gCAAiC,SAASz0C,GACtC,IAAIkyH,EAAc7/L,KAAK0hC,gBAAgBo+J,qBACvC,GAAID,EAAa,CACb,IAAItsJ,EAAWrE,EAAAA,cAA4B2wJ,EAAa7/L,KAAK0hC,gBAAgBtkB,SACzEm2B,GAAY,GACZo6B,EAAW3gB,QAAQzZ,KAI/Bl8B,QAAS,SAASk8B,GACVvzC,KAAKw/L,oBAAoBh3E,yBACzBxoH,KAAKw/L,oBAAoBd,4BAE7B1+L,KAAKs6B,SAASiZ,IAElBn8B,UAAW,SAASm8B,GAChB,IAAIwvE,EAAS/iH,KAAK0hC,gBAAgBoxC,iBAAiBv/B,GAC/CvzC,KAAKu1G,gBAAkBnD,IAAmBpyG,KAAKw/L,oBAAoBhB,4BAA4Bz7E,IAC/F/iH,KAAKw/L,oBAAoBd,4BAE7B1+L,KAAKs6B,SAASiZ,IAElBtK,KAAM,WACFjpC,KAAKs6B,WACLt6B,KAAKw/L,oBAAsBx/L,KAAKqqC,cAAc,qBAGtD++C,SAAU,CACN3E,aAAc,WACV,OAAOzkF,KAAKs6B,cAAgBt6B,KAAKg/L,2BAA2BX,wBAAwBz2K,QAExFm9D,qBAAsB,SAAS79C,EAAc0P,GACzC,IAAImpJ,EAAqB//L,KAAKg/L,2BAC1BgB,EAAmBD,EAAmB3B,mBACtC6B,EAAqBF,EAAmB/B,kBAAkBh+L,KAAK62C,mBAAmB3F,cACtF6uJ,EAAmBpD,qBAAqBz1J,EAAc0P,EAAgBqpJ,GACtE,IAAIxE,EAAgBsE,EAAmB3B,mBAMvC,OALI2B,EAAmBjC,gCACfkC,EAAiBp4K,SAAW6zK,EAAc7zK,QAC1Cm4K,EAAmBlC,WAAWpC,IAEpCA,EAAc7zK,QAAUm4K,EAAmBrB,4BACtC1+L,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErC44D,mBAAoB,SAASN,GACzBA,GAAa3jF,KAAKg/L,2BAA2BlD,qBAC7C97L,KAAKs6B,SAASqpD,IAElBU,aAAc,WACV,IAAIm1G,EAA4Bx5L,KAAKg/L,2BACrC,OAAOh/L,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAAcmuK,EAA0B6E,wBAAwBz2K,QAAU4xK,EAA0BqD,oBAEzI5zJ,KAAM,WACFjpC,KAAKg/L,2BAA6Bh/L,KAAKqqC,cAAc,mBACrDrqC,KAAKs6B,YAETsQ,QAAS,WACL5qC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1B4nB,aAAajzC,KAAKkgM,8BAG1BxwL,KAAM,CACFk9D,cAAe,SAASxvD,EAAOvG,GAC3B,IAAI4jC,EAAa5jC,EAAO4jC,WAExB,GADAr9B,EAAQpd,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC9B,eAAiBovB,KAAehqB,EAAAA,EAAAA,IAAUzwB,KAAK8/L,sBAC/C,OAAO1iL,EAEX,IAAI+iL,EAAiBjxJ,EAAAA,cAA4BlvC,KAAK8/L,qBAAsB1iL,GACxE2nH,GAAU,IAAU/kI,KAAKuiC,OAAOhE,IACpC,GAAI4hK,GAAkB,EAAG,CACrB,IAAIl5K,EAAO7J,EAAM+iL,GACjB/iL,EAAM4/B,OAAOmjJ,EAAiB,EAAG,EAAG,CAChC5yL,SAAS,EACTu2B,QAAS00J,GACT9sK,IAAKzE,EAAKyE,IACVhc,KAAMuX,EAAKvX,KACX2kB,KAAMpN,EAAKoN,KACX86C,eAAgBloD,EAAKkoD,eACrBvpC,SAAU3e,EAAK2e,SACflK,OAAQzU,EAAKyU,aAEV,YAAc+e,GAAgBsqF,GAAWluH,EAAO3K,qBACvDlM,KAAK8/L,0BAAuB,GAEhC,OAAO1iL,GAEXgsF,wBAAyB,SAAS19E,GAC9B,IAAIiiD,EAAa3tE,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC3C,GAAIrrB,KAAKqqC,cAAc,mBAAmBm0J,4BAA4B9yK,GAAM,CACxE,IAAI00K,EAAezyH,EAAWA,EAAW/lD,OAAS,GAClD+lD,EAAWtlD,KAAK+3K,EAAe,GAEnC,OAAOzyH,GAEX4tH,oBAAqB,SAASj7L,GAC1B,KAAImwB,EAAAA,EAAAA,IAAUnwB,GAGV,OAAON,KAAK8/L,qBAFZ9/L,KAAK8/L,qBAAuBx/L,GAKpCm5L,8BAA+B,SAAS/tK,EAAK6xK,GACzC,IAAI8C,EAA0BnxJ,EAAAA,cAA4BlvC,KAAK8/L,qBAAsB9/L,KAAKilE,QACtFq7H,EAA0BpxJ,EAAAA,cAA4BxjB,EAAK1rB,KAAKilE,QAChEo7H,GAA2B,GAAKA,IAA4BC,IAA4B/C,IACxF7xK,OAAM,EACN40K,GAA2B,GAE/B,IAAIC,EAASvgM,KAAK8/L,qBAClB9/L,KAAK8/L,qBAAuBp0K,EACxB20K,GAA2B,GAC3BA,IAEAC,GAA2B,GAC3BA,IAEJ,IAAIzzH,EAAgB7sE,KAAK2sE,mBACzB3sE,KAAKirE,YAAY,CACb8C,0BAA0B,EAC1BtzB,WAAY,SACZkzB,WAAY,CAAC0yH,EAA0BxzH,EAAeyzH,EAA0BzzH,KAEpF,IAAI2sH,EAA4Bx5L,KAAKqqC,cAAc,mBACnDmvJ,EAA0BmF,+BAA+BjzK,EAAK0tK,IAC9DI,EAA0BmF,+BAA+B4B,EAAQpH,KAErElwJ,KAAM,WACFjpC,KAAKs6B,WACLt6B,KAAK8/L,0BAAuB,IAGpC13G,cAAe,CACXwlB,sBAAuB,WACnB,OAAO5tG,KAAKs6B,WAAa,qEAE7B6/F,qBAAsB,WAClB,OAAOn6H,KAAKs6B,WAAa,6BAA+Bt6B,KAAKqhC,gBAAgBkuF,MAGrFzoH,QAAS,CACLwwD,iBAAkB,SAASnpD,GACvB,OAAOnO,KAAKs6B,SAASnsB,KAAYA,EAAOmwL,iBAGhDx1L,mBAAoB,CAChBs6K,aAAc,SAAS1yI,GACnB,OAAO1wC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,aAAeqlB,EAAMd,SAAS5vC,KAAKqhC,gBAAgBs3J,MAExFhP,+BAAgC,SAAStG,GACrCrjL,KAAKs6B,SAAS+oJ,GACd,IAAImd,EAAoBxgM,KAAK8lH,mBAAmBoH,yBAC3CltH,KAAK8jL,kBAAkBT,IAAcA,GAAamd,GACnD55J,EAAAA,EAAAA,GAAgBy8I,EAAW,SAAU,SAASod,IAC1C75J,EAAAA,EAAAA,IAAiBy8I,EAAW,QAASod,GACrC75J,EAAAA,EAAAA,QAAqBy8I,EAAW,eAI5CxD,gCAAiC,SAASF,EAAah/J,GACnD,IAAIqI,EAAShpB,KAAKs6B,SAASqlJ,EAAah/J,GACpCogK,EAAe/gL,KAAKg7K,kBACpB1kI,EAAOyqI,GAAgBA,EAAar5I,SACxC,IAAK1e,GAAUstB,GAAQA,EAAK1uB,OAAQ,CAChC,IAAI84K,EAAarH,GAAoB/iJ,GACjCq3E,EAAc,SAAWhtG,EAAY+/K,EAAWl/J,OAASk/J,EAAW/8I,QACpEpQ,EAAW+C,EAAK3W,IAAI,GAAG4T,SACvBwsJ,EAAqB//L,KAAKw/L,oBAC1B9zK,EAAM1rB,KAAK0hC,gBAAgBoxC,iBAAiB,SAAWnyD,EAAY4yB,EAAWA,EAAW,GACzFotJ,EAAuB5f,GAAgBpzD,GAAeozD,EAAaphJ,IAAI,KAAOguF,EAAYhuF,IAAI,GAClG,OAAOogK,EAAmBvB,4BAA4B9yK,IAAQi1K,EAElE,OAAO33K,GAEXigB,KAAM,WACFjpC,KAAKs6B,WACLt6B,KAAKw/L,oBAAsBx/L,KAAKqqC,cAAc,wBC9gC3D,SAASu2J,GAAkBtqC,EAAMn4D,EAAU5qD,EAAUstJ,EAAS1kI,EAAa2kI,GAC9EvtJ,EAAWA,GAAY,EACvBstJ,EAAUA,GAAW,GACrBC,EAAuBA,GAAwB,GAC/CD,EAAQttJ,GAAYstJ,EAAQttJ,IAAa,EACzC,IAGI40I,EAHAxiJ,EAAM2wH,EAAK/iH,GACXwxH,EAAa+7B,EAAqBvtJ,GAAY,GAAK,EACnDwtJ,EAAuB,EAE3B,GAAKp7J,EAAL,CAGA,IAAKwiJ,EAAWpjB,EAAYojB,EAAWxiJ,EAAI/d,OAAQugK,IAAY,CAC3D,IAAIl0I,EAAOtO,EAAIwiJ,GACX30K,EAAe20K,EAAW0Y,EAAQttJ,GAClCmC,EAAUzB,EAAKyB,SAAW,EAI9B,GAHAkrJ,GAAkBtqC,EAAMn4D,EAAU5qD,GAAYU,EAAKiU,SAAW,GAAI24I,EAASnrJ,EAASorJ,GACpFD,EAAQttJ,IAAamC,EAAU,EAC/BqrJ,GAAwBrrJ,EACpBzB,EAAKiU,QACL,IAAK,IAAIrwB,EAAI0b,EAAW,EAAG1b,EAAI0b,EAAWU,EAAKiU,QAASrwB,IACpDgpK,EAAQhpK,GAAKgpK,EAAQhpK,IAAM,EAC3BgpK,EAAQhpK,IAAMoc,EAAKyB,SAAW,EAGtC,IAAI,IAAUyoD,EAASlqD,EAAMzgC,EAAc+/B,EAAU40I,GACjD,MAEJ,QAAI,IAAWhsH,GAAe4kI,GAAwB5kI,EAClD,MAGR2kI,EAAqBvtJ,GAAY40I,GAE9B,SAAS6Y,GAAkB1qC,EAAMyO,EAAYk8B,GAChD,IAAIC,EAAU,GACdN,GAAkBtqC,GAAO,SAAS6qC,EAAY3tL,EAAc+/B,GACxD,IACImC,EADAzB,EAAOktJ,EAEPC,EAAcntJ,EAAKyB,SAAW,EAC9BjU,EAAYjuB,EAAe4tL,EAAc,GAAKr8B,GAAcvxJ,EAAeytL,EAE/E,GADAC,EAAQ3tJ,GAAY2tJ,EAAQ3tJ,IAAa,GACrC9R,EACIjuB,EAAeuxJ,GACfrvH,EAAU0rJ,GAAer8B,EAAavxJ,GACtCA,EAAeuxJ,GAEfrvH,EAAU0rJ,EAEV5tL,EAAekiC,EAAUurJ,IACzBvrJ,EAAUurJ,EAAWztL,GAErBkiC,IAAY0rJ,IACZntJ,GAAOroB,EAAAA,EAAAA,GAAO,GAAIqoB,EAAM,CACpByB,QAASA,KAGjBwrJ,EAAQ3tJ,GAAUlrB,KAAK4rB,QACpB,GAAIzgC,EAAeytL,EACtB,OAAO,KAGf,IAAK,IAAIppK,EAAI,EAAGA,EAAIqpK,EAAQt5K,OAAQiQ,IAChCqpK,EAAQrpK,GAAKqpK,EAAQrpK,IAAM,GAE/B,OAAOqpK,EChEX12I,GAAAA,eAAwB,aAAcu0I,ICStC,IAAIsC,GAAuB,GACvBj8D,GAAmC,CACnCj5F,YAAa,WACTnsC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1BrrB,KAAK62C,mBAAmB3J,UAE5B6qC,cAAe,SAASzxC,GACpB,IAAIsB,EAAO5nC,KACPw2E,EAAax2E,KAAK23E,gBAClB54D,EAAOunB,EAAE4xC,aAAan5D,KAC1B6oB,EAAKtN,SAAS7G,MAAMmU,EAAMvc,WACtBuc,EAAKrF,OAAO,eAAiBi0C,IAC7Bz3D,GAAOyiC,EAAAA,EAAAA,IAASg1B,EAAWtvB,aAAc1F,EAAAA,EAAAA,IAASg1B,EAAW91C,YAAc3hB,GAE/E6oB,EAAKiP,mBAAmByqJ,kBAAkBviL,KAG9CwiL,GAAqB,CACrBr1J,YAAa,WACTlsC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACtBrrB,KAAK62C,mBAAmBhP,iBACxB7nC,KAAKs+C,8BAIbkjJ,GAA4B,WAC5B,IAAIC,EAAY,SAAS36L,GACrB,OAAOA,EAAQkrB,KAAI7jB,GAAUA,EAAOwnC,cAAgBjJ,WAAWv+B,EAAOX,QAAU6zL,MAEhF93H,EAAU,CACVtgC,KAAM,WACFjpC,KAAKs6B,WACLt6B,KAAK0hM,gBAAkB,EACvB1hM,KAAK2hM,cAAgB,EACrB3hM,KAAK8gI,UAAY,EACjB9gI,KAAK4hM,uBAAyB,IAElCtxI,kBAAmB,WACftwD,KAAKs6B,WACLt6B,KAAK4hM,uBAAyB,IAElCjmE,kBAAmB,SAASjhH,GAIxB,IAHA,IAAIk8B,EAAiB52C,KAAK82C,uBAAkB,GAAQ,GAChDwG,EAASmkJ,EAAU7qJ,GACnBirJ,EAAkB,EACbz3K,EAAQ,EAAGA,EAAQkzB,EAAO11B,OAAQwC,IAAS,CAChD,GAAIy3K,GAAmBnnL,EACnB,OAAO+X,KAAKC,MAAMtI,EAAQpqB,KAAK8hM,qBAEnCD,GAAmBvkJ,EAAOlzB,GAE9B,OAAO,GAEX23K,cAAe,WACX,IAAIv0L,EAAQxN,KAAKuiC,OAAO,SACxB,MAAI,kBAAoB/0B,EACbA,EAEJxN,KAAKqqC,cAAc,YAAYs9C,aAAcpmC,EAAAA,EAAAA,IAAcvhD,KAAK8lC,UAAUpF,aAErFm7F,gBAAiB,SAASnhH,GACtB,IAAIk8B,EAAiB52C,KAAK82C,uBAAkB,GAAQ,GAChDwG,EAASmkJ,EAAU7qJ,GACnBirJ,EAAkB,EACtBnnL,GAAY1a,KAAK+hM,gBACjB,IAAK,IAAI33K,EAAQ,EAAGA,EAAQkzB,EAAO11B,OAAQwC,IAAS,CAChD,GAAIy3K,GAAmBnnL,EACnB,OAAO+X,KAAKw1C,KAAK79C,EAAQpqB,KAAK8hM,qBAElCD,GAAmBvkJ,EAAOlzB,GAE9B,OAAOqI,KAAKw1C,KAAK3qB,EAAO11B,OAAS5nB,KAAK8hM,sBAE1CA,kBAAmB,WACf,OAAO9hM,KAAKuiC,OAAO,6BAEvBy/J,oBAAqB,WACjB,IAAIh6K,EAAO,IAAIiB,KACfjpB,KAAKk+C,eAAejR,KAAK,CACrBoQ,YAAa,CACT8+C,KAAK,EACLv0E,OAAQ,GAEZkzB,YAAa,CACTh0C,SAAS,EACT0kE,yBAAyB,EACzB5jD,OAAQ,KAGhB5nB,KAAK6kI,YAAc,IAAI57G,KAAOjB,GAElCy5G,oBAAqB,WACjB,IAAI2G,EAAqBpoI,KAAKuiC,OAAO,sCACjCt2B,EAAcjM,KAAKuiC,OAAO,yBAC1Bm/F,EAAmB,EAIvB,SAHKjxG,EAAAA,EAAAA,IAAUxkB,IAAgBjM,KAAK6kI,YAAcuD,GAAsBn8H,KACpEy1H,EAAmB1hI,KAAKuiC,OAAO,sBAE5Bm/F,GAEX4/D,kBAAmB,SAAS5mL,GACxB,IAAIgnH,EAAmB1hI,KAAKyhI,sBACxBC,EAAmB,GACnBzuF,aAAajzC,KAAKiiM,iBAClBjiM,KAAKiiM,gBAAkBjvJ,YAAW,KAC9BhzC,KAAKkiM,uBAAuBxnL,KAC7BgnH,IAEH1hI,KAAKkiM,uBAAuBxnL,IAGpCmtB,cAAe,WACX,OAAOoE,EAAAA,EAAAA,OAAe,YAAcjsC,KAAKuiC,OAAO,kCAEpD2K,OAAQ,WACJltC,KAAKkiM,uBAAuBliM,KAAK8gI,YAErCohE,uBAAwB,SAASxnL,GAC7B,GAAI1a,KAAK6nC,gBAAiB,CACtB,IAAI85D,EAAiB3hG,KAAK27H,kBAAkBjhH,GACxC8jH,EAAex+H,KAAK67H,gBAAgBnhH,GACpCynL,EAAqBznL,EAAW1a,KAAK8gI,UAAY9gI,KAAK0hM,gBAAkB//F,EAAiB3hG,KAAK2hM,cAAgBnjE,EAClHx+H,KAAK8gI,UAAYpmH,EACbynL,IACAniM,KAAK0hM,gBAAkB//F,EACvB3hG,KAAK2hM,cAAgBnjE,EACrBx+H,KAAKgiM,yBAIjBzrI,gBAAiB,SAAShjB,EAAU4rF,GAChC,IAAI9F,EAAer5H,KAAKs6B,SAASiZ,GACjC,GAAIvzC,KAAK6nC,kBAAoBs3F,GAAU9F,EAAazxG,OAAQ,CACxD,IAAI+uC,EAAyB0iE,EAAarnG,KAAIkzD,GAAKA,EAAE79C,UAAShd,QAAQ,eAEtE,OADAgvG,EAAa1iE,GAAwBjhB,QAAU11C,KAAK82C,oBAAoBlvB,OAAS5nB,KAAKs6B,WAAW1S,OAAS,EACnGyxG,EAEX,OAAOA,GAEXviF,kBAAmB,SAASvD,EAAU4rF,GAClC,GAAIA,IAAWn/H,KAAK6nC,gBAChB,OAAO7nC,KAAKs6B,SAASiZ,GAEpBvzC,KAAK0hM,iBAAoB1hM,KAAK2hM,gBAC/B3hM,KAAK0hM,gBAAkB1hM,KAAK27H,kBAAkB37H,KAAK8gI,WACnD9gI,KAAK2hM,cAAgB3hM,KAAK67H,gBAAgB77H,KAAK8gI,YAEnD,IAAIn/B,EAAiB3hG,KAAK0hM,gBACtBljE,EAAex+H,KAAK2hM,cACpBS,EAAqB7uJ,EAAW,IAAMouD,EAAiB,IAAM68B,EACjE,GAAIx+H,KAAK4hM,uBAAuBQ,GAC5B,OAAOpiM,KAAK4hM,uBAAuBQ,GAEvC,IAAIxrJ,EAAiB52C,KAAKs6B,WACtB6tB,EAAWnoD,KAAK+nD,cAChBxlC,EAAWviB,KAAK8hM,oBAChB/8B,EAAapjE,EAAiBp/E,EAC9B0+K,EAAWziE,EAAej8G,EAC1B82G,EAAer5H,KAAKu2D,qBAAgB,GAAQ,GAC5CI,EAAyB0iE,EAAarnG,KAAIkzD,GAAKA,EAAE79C,UAAShd,QAAQ,eAClEg4K,EAAwBhpE,EAAazxG,OAAS+uC,EAAyB,EACvE2rI,EAAoB1rJ,EAAe7sB,MAAM,EAAGs4K,GAC5CE,EAAe3rJ,EAAe7sB,MAAMs4K,EAAuBt9B,GAC3Dy9B,EAAaf,EAAUc,GAAcv5I,QAAO,CAAC4kB,EAAGC,IAAMD,EAAIC,GAAG,GAC5D20H,IACDz9B,EAAa,GAEjB,IAAI09B,EAAsBppE,EAAazxG,OAASyxG,EAAazxG,OAAS+uC,EAAyB,EAAI,EAC/F+rI,EAAkB9rJ,EAAe7sB,MAAM6sB,EAAehvB,OAAS66K,GAC/DE,EAAa/rJ,EAAe7sB,MAAMk3K,EAAUrqJ,EAAehvB,OAAS66K,GACpEG,EAAWnB,EAAUkB,GAAY35I,QAAO,CAAC4kB,EAAGC,IAAMD,EAAIC,GAAG,GAI7D,GAHK+0H,IACD3B,EAAWrqJ,EAAehvB,QAE1BugC,EAAW,GAAK,kBAAoB5U,EAAU,CAE9C,IADA,IAAIsvJ,EAAc,GACThrK,EAAI,EAAGA,EAAIswB,EAAUtwB,IAC1BgrK,EAAYx6K,KAAKroB,KAAKs6B,SAASzC,IAEnCyqK,EAAoBtB,GAAkB6B,EAAa,EAAGP,EAAkB16K,QAAQ2rB,IAAa,GAC7FmvJ,EAAkB1B,GAAkB6B,EAAajsJ,EAAehvB,OAAS86K,EAAgB96K,OAAQgvB,EAAehvB,QAAQ2rB,IAAa,GACrIqD,EAAiBoqJ,GAAkB6B,EAAa99B,EAAYk8B,GAAU1tJ,IAAa,QAEnFqD,EAAiBA,EAAe7sB,MAAMg7I,EAAYk8B,GAiBtD,OAfIuB,IACA5rJ,EAAeoW,QAAQ,CACnB3lB,QAAS,UACT75B,MAAOg1L,IAEX5rJ,EAAiB0rJ,EAAkBx6K,OAAO8uB,IAE1CgsJ,IACAhsJ,EAAevuB,KAAK,CAChBgf,QAAS,UACT75B,MAAOo1L,IAEXhsJ,EAAiBA,EAAe9uB,OAAO46K,IAE3C1iM,KAAK4hM,uBAAuBQ,GAAsBxrJ,EAC3CA,GAEXsF,qBAAsB,WAClB,IAAIl5B,EAAS,EACb,GAAIhjB,KAAK0hM,gBAAkB,EAAG,CAC1B,IAAIroE,EAAer5H,KAAKu2D,kBACpBI,EAAyB0iE,EAAarnG,KAAIkzD,GAAKA,EAAE79C,UAAShd,QAAQ,eAClEy4K,EAAuBnsI,GAA0B,EAAIA,EAAyB,EAClF3zC,EAAShjB,KAAK0hM,gBAAkB1hM,KAAK8hM,oBAAsBgB,EAAuB,EAEtF,OAAO9/K,EAAS,EAAIA,EAAS,GAEjC4nB,QAAS,WACLqI,aAAajzC,KAAKiiM,iBAClBjiM,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,aAGlC,OAAOk+C,EAhMqB,GAkMrBw5H,GAAuB,CAC9B78I,eAAgB,WACZ,MAAO,CACH35C,UAAW,CACPkY,oBAAqB,WACrBu+K,eAAgB,EAChBC,yBAA0B,OAItC70J,UAAW,CACPJ,YAAa,CACTlnC,QAAS06L,IAEbtzJ,MAAO,CACHiY,kBAAmBo7I,GACnB17J,SAAUu/F,MCpPtB56E,GAAAA,eAAwB,iBAAkBu4I,ICD1C,QACIG,cAAe,WACX,MAAO,CACHzzL,KAAM,GACNnP,WAAO,EACPo1C,QAAS,EACTwS,QAAS,IAGjBi7I,eAAgB,SAAS7iM,GACrB,OAAQA,GAAQ,GAEpB8iM,WAAY,SAASn8K,GACjB,OAAO2E,EAAAA,EAAAA,GAAO,GAAI3E,EAAMjnB,KAAKkjM,kBAEjCG,cAAe,SAASjmL,GACpB,IAAIwqB,EAAO5nC,KACPsnG,EAAc,GACdg8F,GAAQlmL,EAAM,IAAM,IAAI4rC,QAAO,CAACjiC,EAAKE,IAASF,EAAM6gB,EAAKu7J,eAAel8K,EAAKyuB,UAAU,GACvFo4C,EAAU,SAAS1wE,GACnB,IAAIm2B,EAAW,EACXmK,EAAY,EAChB,OAAO,WACH,IAAI/X,EAAMvoB,EAAMm2B,IAAa,GACzBtsB,EAAO0e,EAAI+X,KASf,OARIA,GAAa/X,EAAI/d,SACjB2rB,IACAmK,EAAY,GAEZz2B,IACAA,EAAKyuB,QAAU9N,EAAKu7J,eAAel8K,EAAKyuB,SACxCzuB,EAAKihC,QAAUtgB,EAAKu7J,eAAel8K,EAAKihC,UAErCjhC,GAdD,CAgBZ7J,GAEF,SAASuuI,EAAQp4G,EAAUmK,EAAWz2B,GAClC,IAAI0e,EAAM2hE,EAAY/zD,GAAY+zD,EAAY/zD,IAAa,GAE3D,GADA5N,EAAI+X,GAAaz2B,EACbA,EAAKyuB,QAAU,GAAKzuB,EAAKihC,QAAU,EAAG,CAEtC,IADA,IAAIM,EAAQ5gB,EAAKw7J,WAAWn8K,GACnBi+D,EAAI,EAAGA,EAAIj+D,EAAKyuB,QAASwvC,IAC9BymE,EAAQp4G,EAAUmK,EAAYwnC,EAAG18B,GAErC,IAAK,IAAIy8E,EAAI,EAAGA,EAAIh+G,EAAKihC,QAAS+8E,IAC9B,IAAK,IAAIs+D,EAAK,EAAGA,EAAKt8K,EAAKyuB,QAAS6tJ,IAChC53C,EAAQp4G,EAAW0xF,EAAGvnF,EAAY6lJ,EAAI/6I,IAKtD,IAAIvhC,EAAO6mE,IACPv6C,EAAW,EACf,MAAOtsB,EAAM,CACT,IAAK,IAAIy2B,EAAY,EAAGA,EAAY4lJ,EAAM5lJ,IAAa,CACnD,IAAKz2B,EACD,MAEAqgF,EAAY/zD,IAAa+zD,EAAY/zD,GAAUmK,KAGnDiuG,EAAQp4G,EAAUmK,EAAWz2B,GAC7By2B,GAAaz2B,EAAKyuB,QAAU,EAC5BzuB,EAAO6mE,KAEXv6C,IAEJ,OAAO+zD,I,4CCxDXk8F,GAAqB,iBACrBC,GAA6BD,GAAqB,WAClDE,GAA0BF,GAAqB,QAC/CG,GAAgCH,GAAqB,cACrDI,GAA+BJ,GAAqB,aACpDK,GAA8BH,GAA0B,aACxDI,GAAuB,oBACvBC,GAAmBC,GAAAA,EAAAA,QAAyB,CAC5CC,iBACIjkM,KAAKs6B,WACLt6B,KAAKkkM,iBAAiBC,oBAAoB,CACtCl9K,KAAM,IAAIm9K,GAAAA,GAAiB,CAAC1kK,EAAYhwB,EAAMqpC,KAC1C/4C,KAAKqkM,mBAAmB3kK,GACxB,IAAIlwB,EAAWxP,KAAKuiC,OAAO,kBAC3BviC,KAAKwiC,iBAAiB9C,EAAY45D,GAAAA,YAAQ1tE,EAAAA,EAAAA,GAAO,GAAImtB,EAAOrpC,EAAM1P,KAAKskM,yBAA0B,CAC7FC,cAAevkM,KAAKwkM,mBAAmBh1L,GAAYupC,EAAQ,GAC3DvpC,SAAUupC,EAAMvpC,UAAYA,OAEjC,CAAC,OAAQ,OAAQ,OAAQ,WAAY,UAAW,QAASxP,KAAKuiC,OAAO,sCAGhF+hK,yBACI,MAAO,CACHh8L,mBAAmB,EACnBiH,QAAS,KACT1G,kBAAmB7I,KAAKuiC,OAAO,qBAC/Bv8B,mBAAoBhG,KAAKuiC,OAAO,sBAChCkiK,YAAazkM,KAAKuiC,OAAO,iBAGjCwpD,mBAAoB,WAChB,OAAOngE,EAAAA,EAAAA,GAAO5rB,KAAKs6B,WAAY,CAC3BoqK,qBAAsB,QAG9BF,mBAAmBh1L,GACf,OAAOsoB,EAAAA,EAAAA,IAAWtoB,IAAaxP,KAAKuiC,OAAO,gCAAgC/yB,IAE/E60L,mBAAmB7uH,GACf,IAAIuI,EAAYvI,EAAM9lE,KAAK,eAC3B,IAAMquE,GAAavI,EAAM1zC,SAAS6hK,IAClC,IAAIvmL,EAAQpd,KAAKuiC,OAAO,SACxBnlB,GAAS2gE,IAAc3gE,EAAMwK,OAAS,GAAK4tD,EAAM1zC,SAAS8hK,IAC1DpuH,EAAM1zC,SAASgiK,KAEnBa,mBAAmBlwK,GAEf,OADAA,EAAKnb,WAAYuoB,EAAAA,EAAAA,GAAEpN,EAAKnb,WAAWouB,SAC5B1nC,KAAKs6B,SAAS7F,IAEzBmwK,yBAA0B,SAASnwK,EAAM2nE,GAErC,OADA3nE,EAAKnb,WAAYuoB,EAAAA,EAAAA,GAAEpN,EAAKnb,UAAUu3B,WAAW8S,SACtC3jD,KAAKs6B,SAAS7F,EAAM2nE,IAE/By3C,eACI,OAAO7zI,KAAK0gC,WAAWgH,UAE3Bm9J,8BACI,OAAO7kM,KAAK6zI,gBAEhBixD,kBACI9kM,KAAK+kM,kBACL/kM,KAAK04E,kBAETssH,WAAY,IAAMtB,GAClBuB,mBAAoB,SAAS3+J,GACrB,WAAatmC,KAAKuiC,OAAO,kBAAoBviC,KAAKgzF,eAAe1sD,EAAE4M,gBAGvElzC,KAAKs6B,SAASgM,MAGlB4+J,GAAcr5G,EAAAA,EAAAA,QAAe,CAC7BE,qBACI,OAAOngE,EAAAA,EAAAA,GAAO5rB,KAAKs6B,WAAY,CAC3BzxB,mBAAmB,EACnBP,mBAAmB,EACnB8sF,cAAe,SACfN,cAAe,GACfX,iBAAkB,GAClBswG,YAAa,YACb17L,QAAS,OACTqU,MAAO,GACP+nL,eAAgB,UAChBv5L,mBAAoB,KACpBs+C,YAAa,QAGrBwiC,QACI1sF,KAAKs6B,WACLt6B,KAAKolM,0BAETA,yBACIplM,KAAKqlM,iBAAmBrlM,KAAK0qC,sBAAsB,gBAEvDoiD,cACI9sF,KAAKgmC,QAAQ,OAAQ,SACrBhmC,KAAK0gC,WAAWoB,SAAS0hK,IACzBxjM,KAAKslM,iBACLtlM,KAAKulM,wBACLvlM,KAAKs6B,YAETkrK,0BAA2B,SAASxsD,EAAYysD,GAC5CzlM,KAAK0qC,sBAAsB,qBAAsB,CAC7CoT,kBAAmB,CAAC,WAAY,aADpC99C,CAEG,CACCg5I,WAAYA,EACZysD,aAAcA,KAGtBH,iBACI,IAAII,GAAW7jK,EAAAA,EAAAA,GAAE,SAASC,SAAS2hK,IAA4B1hK,SAAS/hC,KAAK0gC,YACzEo0D,EAAgB90F,KAAKuiC,OAAO,iBAC5BjhB,EAAU,CACV8zE,cAAep1F,KAAKuiC,OAAO,iBAC3BnlB,MAAOpd,KAAKuiC,OAAO,SACnBx5B,QAAS/I,KAAKuiC,OAAO,WACrB4iK,eAAgBnlM,KAAKuiC,OAAO,kBAC5BxkB,kBAAkB,EAClBo2E,iBAAkBn0F,KAAKuiC,OAAO,oBAC9Bj6B,kBAAmBtI,KAAKuiC,OAAO,qBAC/B15B,kBAAmB7I,KAAKuiC,OAAO,qBAC/Bv8B,mBAAoBhG,KAAKuiC,OAAO,sBAChCkiK,YAAazkM,KAAKuiC,OAAO,eACzBz8B,UAAW9F,KAAKuiC,OAAO,aACvBn1B,SAAUpN,KAAKuiC,OAAO,YACtBr5B,WAAY,GACZy8L,mBAAmB,EACnBx7G,eAAgB7jD,IACZ,IAAI94B,EAAQxN,KAAKuiC,OAAO,UACxB9R,EAAAA,EAAAA,IAAUjjB,KAAUq0B,EAAAA,EAAAA,GAAEyE,EAAEk1D,aAAa15D,SAAS+hK,KAElDj4L,mBAAoB06B,IAChBtmC,KAAKulM,wBACLvlM,KAAKwlM,0BAA0Bl/J,EAAE0yG,WAAY1yG,EAAEm/J,eAEnDv7I,YAAa5jB,IACTtmC,KAAKqlM,iBAAiB/+J,MAG1B7V,EAAAA,EAAAA,IAAUqkE,IAAkBA,EAAcltE,SAC1CtG,EAAQwzE,cAAgBA,GAE5B90F,KAAK4lM,mBAAqB5lM,KAAKwiC,iBAAiBkjK,EAAU3B,GAAkBziL,IAEhFikL,wBACIvlM,KAAKwpC,8BAA8B,gBAAiBxpC,KAAK4lM,mBAAmBrjK,OAAO,kBACnFviC,KAAKwpC,8BAA8B,mBAAoBxpC,KAAK4lM,mBAAmBrjK,OAAO,sBAE1FqqD,eAAen4D,GACX,OAAQA,EAAKnlB,MACT,IAAK,cACL,IAAK,gBACL,IAAK,UACL,IAAK,iBACL,IAAK,QACL,IAAK,qBACL,IAAK,oBACL,IAAK,oBACL,IAAK,WACDtP,KAAK8rC,cACL,MACJ,IAAK,mBACL,IAAK,gBACD9rC,KAAK4lM,mBAAmBrjK,OAAO9N,EAAKnlB,KAAMmlB,EAAKn0B,OAC/C,MACJ,IAAK,cACDN,KAAKolM,yBACL,MACJ,IAAK,qBACD,MACJ,IAAK,QACDplM,KAAKs6B,SAAS7F,GACdz0B,KAAK4lM,mBAAmBC,eAAe74J,YAAY62J,KAA+BpvK,EAAKn0B,OACvF,MACJ,QACIN,KAAKs6B,SAAS7F,QAI9B04D,EAAAA,EAAAA,GAAkB,gBAAiB+3G,IACnC,U,WCxJIY,GAAyB,oBACzBC,GAA2B,4BAC3BC,GAAgC,2BAChCC,GAAgC,2BAChCC,GAAmC,8BACnCC,GAAuC,kCACvCC,GAAiC,4BACjCC,GAAuB,iBACvBC,GAAsB,gBACtBC,GAAiB16G,EAAAA,EAAAA,QAAe,CAChCE,qBACI,OAAOngE,EAAAA,EAAAA,GAAO5rB,KAAKs6B,WAAY,CAC3B6gE,aAAc,OACdpyF,QAAS,OACTqM,iBAAa,EACbg+H,aAAc,KACdozD,gBAAiB,KACjB/B,YAAa,WACbhrL,gBAAgB,EAChBvQ,WAAYugC,EAAAA,EAAAA,OAA2B,iCACvCg9J,eAAe,EACfC,aAAa,EACbC,eAAe,EACfl3L,KAAM,GACNJ,UAAM,EACNu3L,cAAe,KACfh7L,mBAAoB,KACpBs+C,YAAa,KACb28I,QAAQ,EACRzpL,MAAO,KACP/V,WAAY,KACZiB,mBAAmB,EACnBO,mBAAmB,EACnBi+L,gBAAiB,GACjBC,wBAAyB,UACzBC,cAAc,EACdC,oBAAoB,EACpB50L,SAAS,EACT60L,cAAe,QACfC,mBAAoB,MAG5Bh0D,yBACInzI,KAAKs6B,YACL1O,EAAAA,EAAAA,GAAO5rB,KAAKs1G,oBAAqB,CAC7B89B,cAAc,KAGtB1mD,QACI1sF,KAAKs6B,WACLt6B,KAAKolM,yBACLplM,KAAKonM,2BACLpnM,KAAKqnM,gCACLrnM,KAAKssE,kBACLtsE,KAAKsnM,oBACLtnM,KAAKunM,wBACLvnM,KAAKwnM,mBAAmBxnM,KAAKuiC,OAAO,UACpCviC,KAAKynM,SAASC,MAAM,qBAAsB1nM,KAAKuiC,OAAO,uBACtDviC,KAAKynM,SAASC,MAAM,kBAAmB1nM,KAAKuiC,OAAO,qBAEvD0hK,iBACIjkM,KAAKkkM,iBAAiBC,oBAAoB,CACtC1xJ,QAAS,IAAIk1J,GAAAA,GAAiBrmL,IAC1B,IAAI6/D,GAAgBt/C,EAAAA,EAAAA,GAAEvgB,EAAQhI,WAC1BsuL,GAAiB/lK,EAAAA,EAAAA,GAAE,SAASE,SAASo/C,GACzCnhF,KAAK6nM,MAAQ7nM,KAAKwiC,iBAAiBolK,EAAgB3jD,GAAAA,EAAMjkJ,KAAK8nM,gBAC9D9nM,KAAK6nM,MAAM76F,mBAAmB,SAAUhtG,KAAK+nM,YAAYzjK,KAAKtkC,OAC9DA,KAAK6nM,MAAM76F,mBAAmB,MAAOhtG,KAAK+nM,YAAYzjK,KAAKtkC,OAC3DA,KAAK6nM,MAAM76F,mBAAmB,YAAahtG,KAAK+nM,YAAYzjK,KAAKtkC,OACjEA,KAAK6nM,MAAM76F,mBAAmB,aAAchtG,KAAK+nM,YAAYzjK,KAAKtkC,YAG1EA,KAAKs6B,YAETktK,mBAAoB,SAASlnM,GACpBN,KAAK2jC,cACN3jC,KAAK2jC,YAAc,IAAIzc,GAAAA,EAAW,CAC9Bm8C,MAAO,IAAI2D,GAAAA,EAAW,CAClBt7C,IAAK1rB,KAAKgoM,UACVt4L,KAAMpP,IAEViiB,SAAU,MAItBylL,QAAS,WACL,IAAI59H,EACArhE,EAAU/I,KAAKuiC,OAAO,WACtB0lK,EAAW,QAAU79H,EAAoBpqE,KAAK2jC,mBAAgB,IAAWymC,OAAoB,EAASA,EAAkB1+C,MAC5H,QAAO+E,EAAAA,EAAAA,IAAUw3K,KAAex3K,EAAAA,EAAAA,IAAU1nB,IAAY,SAAWA,EAAsBA,EAAXk/L,GAEhFX,oBACItnM,KAAKkoM,YAAal2I,EAAAA,EAAAA,IAAchyD,KAAKgoM,YAEzCT,wBACIvnM,KAAKmoM,gBAAiBn2I,EAAAA,EAAAA,IAAchyD,KAAKuiC,OAAO,iBAEpDuqD,cACI9sF,KAAKs6B,WACLt6B,KAAK0gC,WAAWoB,SAASgkK,IACzB9lM,KAAKooM,qBACLpoM,KAAKqoM,qBACD53K,EAAAA,EAAAA,IAAUzwB,KAAKuiC,OAAO,qBACtBviC,KAAKsoM,oBAAoBj6K,KAAKruB,KAAKuoM,oBAAoBjkK,KAAKtkC,QAGpEwoM,mBAAoBl4J,EAAAA,GACpBglG,UACSt1I,KAAKuiC,OAAO,oBAAqBviC,KAAKuiC,OAAO,WAC9CviC,KAAKyoM,eAETzoM,KAAKs6B,YAETyyD,qBAII,OAHI/sF,KAAK0oM,QACL1oM,KAAK2oM,sBAEF3oM,KAAKs6B,YAEhBguK,oBACI,IAAIM,EACJ,QAAUA,EAAwB5oM,KAAK6oM,2BAAwB,IAAWD,GAAiCA,EAAsB36K,SACjI,IAAIb,EAAI,IAAIC,EAAAA,GACZ,GAAIrtB,KAAK6nM,YAAS,IAAW7nM,KAAK8oM,sBAAuB,CACrD,IAAIC,EAAe/oM,KAAKuiC,OAAO,iBAAmBviC,KAAK6nM,MAAMtlK,OAAO,gBAAkBviC,KAAK8oM,sBAC3F,OAAO17K,EAAEe,QAAQ46K,GAErB/oM,KAAK8oM,2BAAwB,EAC7B,IAAItC,EAAkBxmM,KAAKuiC,OAAO,mBAKlC,OAJAviC,KAAKgpM,YAAYhpM,KAAKgoM,UAAWxB,GAAiBn4K,KAAKjB,EAAEe,SAASC,MAAK,KACnEhB,EAAEe,QAAQ,SAEdnuB,KAAK6oM,oBAAsBz7K,EACpBA,EAAEqB,WAEb24K,2BACIpnM,KAAKipM,mBAAqBjpM,KAAK0qC,sBAAsB,kBAEzD28J,gCACIrnM,KAAKkpM,wBAA0BlpM,KAAK0qC,sBAAsB,uBAE9D06J,yBACIplM,KAAKqlM,iBAAmBrlM,KAAK0qC,sBAAsB,gBAEvDy+J,4BAA4B54K,GACxB,IACIskC,cAAeA,EACfv0D,MAAOA,GACPiwB,EACJvwB,KAAKkpM,wBAAwB,CACzBjiL,KAAM3mB,EACN8oM,aAAcv0I,KAGtBw0I,qBAAqB3oI,GACjB,IACIj2B,MAAOA,EACP+wD,YAAaA,EACbpxC,SAAUA,GACVsW,EACJ,OAAO1gE,KAAKqlM,iBAAiB,CACzB56J,MAAOA,EACP+wD,YAAaA,EACbpxC,SAAUpqD,KAAKspM,aAAel/I,KAGtCm/I,sBACI,MAAO,CACH95L,KAAMzP,KAAKuiC,OAAO,QAClBlzB,KAAMrP,KAAKuiC,OAAO,QAClB96B,YAAa,CACTuxJ,MAAOgtC,MAInBwD,uBACI,IAAIpsL,EAAQ,GAUZ,OATAA,EAAMiL,KAAKroB,KAAKupM,uBACZvpM,KAAKuiC,OAAO,gBACZnlB,EAAMiL,KAAK,CACPhZ,KAAM,WACN5H,YAAa,CACTuxJ,MAAOitC,MAIZ7oL,GAEXqsL,sBAAsBviI,GAClB,IACIz8B,MAAOA,EACP2f,SAAUA,GACV8c,EACAwiI,EAAiBt/I,EAAS3iD,YAAYuxJ,QAAUgtC,GAChD2D,EAAiBv/I,EAAS3iD,YAAYuxJ,QAAUitC,GAChD0D,EACA3pM,KAAKg5E,SACE0wH,IACP1pM,KAAKipM,mBAAmB,CACpBx+J,MAAOA,EACP2oG,aAAcpzI,KAAKuiC,OAAO,kBAEzBviC,KAAKuiC,OAAO,gBACbviC,KAAKg5E,WAIjB4wH,sBACI,IAAIzE,EAAiBnlM,KAAKuiC,OAAO,iBAAmBviC,KAAKuiC,OAAO,iBAAmB,UAAY,CAAC6kC,EAAOyiI,KACnG,IACIp6L,KAAMA,EACNJ,KAAMA,GACN+3D,EACA0iI,GAAaC,EAAAA,GAAAA,GAAkB16L,GAC/B26L,EAAiBv6L,GAAOoyB,EAAAA,EAAAA,GAAE,UAAUpyB,KAAKA,GAAMqyB,SAASukK,SAAwB,EAChF4D,GAAcF,EAAAA,GAAAA,GAAkB,YAAYjoK,SAASwkK,KACzDzkK,EAAAA,EAAAA,GAAEgoK,GAAe94J,OAAO+4J,EAAYE,EAAgBC,IAExD,OAAOr+K,EAAAA,EAAAA,GAAO,CACVxO,MAAOpd,KAAKwpM,uBACZlhM,kBAAmBtI,KAAKuiC,OAAO,qBAC/B15B,kBAAmB7I,KAAKuiC,OAAO,qBAC/B2nB,YAAalqD,KAAKypM,sBAAsBnlK,KAAKtkC,MAC7CwN,MAAO,OACP9E,OAAQ,OACR+7L,YAAazkM,KAAKuiC,OAAO,eACzB6yD,cAAe,OACfhoF,SAAUpN,KAAKuiC,OAAO,YACtB2nK,kBAAmB5jK,GAAKtmC,KAAKg3I,iBAAiB1wG,GAC9C6+J,eAAgBA,GACjBnlM,KAAKynM,SAASC,MAAM,wBAE3BiB,sBACI,IAAIzhJ,EAAWlnD,KAAK0oM,OAAOxhJ,WACvB13C,EAAWxP,KAAKmqM,qBAAqB,2BAIzC,OAHAjjJ,EAASrc,QACT7qC,KAAKoqM,gBAAkB,MAAQ,IAAIx3K,GAAAA,EACnC5yB,KAAKgmC,QAAQ,KAAMhmC,KAAKoqM,gBAAiBljJ,GAClC13C,EAASi2B,OAAO,CACnBnsB,WAAWo6B,EAAAA,GAAAA,GAAiBwT,GAC5BnO,MAAO/4C,KAAKuiC,OAAO,UAAYviC,KAAK2jC,eAG5C0mK,gBACI,IAAIC,EAAsBtqM,KAAKuiC,OAAO,cAAgB,QAAU,OAChE,OAAO3W,EAAAA,EAAAA,GAAO,CACVjS,aAAa,EACbrR,mBAAmB,EACnBmR,eAAgBzZ,KAAKuiC,OAAO,kBAC5BlpB,oBAAqBitB,IACjB,IAAI5F,EAAW1gC,KAAK0gC,WAChB6pK,GAAiB1oK,EAAAA,EAAAA,GAAEyE,EAAEzJ,QAAQkK,QAAQ,IAAIjf,OAAOg+K,KACpD,OAAQyE,EAAe5jK,GAAGjG,IAE9B1lB,WAAW,EACX5B,UAAW,CACP3K,KAAM,CACFK,KAAM,OACN8R,SAAU,EACVE,KAAM,EACNG,GAAI,GAERzS,KAAM,CACFM,KAAM,OACN8R,SAAU,IACVE,KAAM,EACNG,GAAI,IAGZo1H,iCAAiC,EACjC7oI,MAAO,KAAMsxJ,EAAAA,GAAAA,GAAgB9+J,KAAK0gC,YAClCh4B,OAAQ,OACRmS,SAAS,EACTH,SAAU,CACNqI,GAAI/iB,KAAK0gC,WACT7d,UAAW,UACXC,GAAIwnL,EAAsB,OAC1B5nL,GAAI4nL,EAAsB,WAE9BnvL,YAAa,CACT69I,MAAOotC,KAEZpmM,KAAKynM,SAASC,MAAM,mBAAoB,CACvCn6L,QAASvN,KAAKuiC,OAAO,aAG7BulK,eACI,IAAItB,EAAkBxmM,KAAKuiC,OAAO,mBAC9BkkK,EAAgBzmM,KAAKuiC,OAAO,iBAChC,MAAO,CACH6yD,cAAeqxG,EAAgB,SAAW,OAC1CO,aAAchnM,KAAKuiC,OAAO,gBAC1Bj6B,kBAAmBtI,KAAKuiC,OAAO,qBAC/B15B,kBAAmB7I,KAAKuiC,OAAO,qBAC/B0kK,mBAAoBjnM,KAAKuiC,OAAO,sBAChC/4B,eAAgB,IAAMxJ,KAAKmjF,0BAC3BgR,kBAAkB1jE,EAAAA,EAAAA,IAAU+1K,IAAoBC,EAAgB,CAACD,GAAmB,GACpFn0L,QAASrS,KAAKuiC,OAAO,WACrB2kK,cAAelnM,KAAKuiC,OAAO,iBAC3Bx5B,QAAS/I,KAAKgoM,UACd9+L,WAAYlJ,KAAKuiC,OAAO,cACxBntB,YAAapV,KAAKuiC,OAAO,eACzB44D,aAAcn7F,KAAKuiC,OAAO,gBAC1BnlB,MAAOpd,KAAKuiC,OAAO,SACnBl7B,WAAYrH,KAAK2jC,YACjBumB,YAAa5jB,IACJtmC,KAAKuiC,OAAO,mBACbviC,KAAK8oM,sBAAwBxiK,EAAE8jB,UAEnCpqD,KAAKuiC,OAAO,kBAAmBviC,KAAKkoM,WAAW5hK,EAAE8jB,WACjD,IAAIogJ,EAAexqM,KAAKqpM,qBAAqB/iK,IACzC,IAAUkkK,IACVxqM,KAAKg5E,QAAO,GACZh5E,KAAKyqM,aAAar9J,YAKlCs9J,oBAMI,OALI1qM,KAAK0oM,QAAU1oM,KAAK0oM,OAAOnmK,OAAO,YAAcviC,KAAK6nM,MACrD7nM,KAAK6nM,MAAMz6J,QAEXptC,KAAK2qM,QAEF,GAEX5C,cAGI,OAFA/nM,KAAK4qM,QACL5qM,KAAKyqM,aAAar9J,SACX,GAEXy9J,cAEI,OADA7qM,KAAK4qM,SACE,GAEXnC,eACI,IAAI1vC,GAASl3H,EAAAA,EAAAA,GAAE,SACf7hC,KAAK0gC,WAAWqQ,OAAOgoH,GACvB/4J,KAAK0oM,OAAS1oM,KAAKwiC,iBAAiBu2H,EAAQ/9D,GAAAA,EAAOh7F,KAAKqqM,iBACxDrqM,KAAK0oM,OAAOxhJ,WAAWplB,SAASikK,IAChC/lM,KAAK0oM,OAAOtuG,WAAWt4D,SAASqkK,IAChCnmM,KAAK0oM,OAAOh/J,GAAG,SAAU1pC,KAAK8qM,oBAAoBxmK,KAAKtkC,OACvDA,KAAK0oM,OAAOh/J,GAAG,UAAW1pC,KAAK+qM,qBAAqBzmK,KAAKtkC,OACzDA,KAAKgrM,wBAAwBhrM,KAAK0oM,OAAQ,oBAE9CoC,sBACI9qM,KAAKuiC,OAAO,UAAU,GACtBviC,KAAKirM,kBAAiB,IAE1BC,oBAAqB,SAASz2K,GAC1B,IAAInT,EAAUuqE,EAAAA,EAAAA,wBAA+Bp3D,GAC7Cz0B,KAAKmrM,gBAAgB7pL,GACrB,IAAI8pL,EAAcjrM,OAAOs6B,KAAKnZ,IACzB,IAAM8pL,EAAY/gL,QAAQ,WAAa,IAAM+gL,EAAY/gL,QAAQ,WAClErqB,KAAK6sF,qBAGbA,kBAAmB,WACf,IAAIw+G,GAAaC,EAAAA,GAAAA,GAAatrM,KAAKuiC,OAAO,+BACtC,IAAW8oK,GACXrrM,KAAKmrM,gBAAgB,SAAS,KAAMrsC,EAAAA,GAAAA,GAAgB9+J,KAAK0gC,eAGjEyqK,gBAAiB,SAAS98L,EAAY/N,GAClCN,KAAKurM,iBAAiB,SAAUlgL,YAEpC0/K,uBACI/qM,KAAKuiC,OAAO,UAAU,GACtBviC,KAAKirM,kBAAiB,IAE1BA,iBAAiB3qM,GACbN,KAAKwrM,sBAAsB3vJ,SAAQ4vJ,IAC/BzrM,KAAKgmC,QAAQ,CACT6yD,SAAUv4F,EACVorM,KAAMprM,EAAQN,KAAKoqM,qBAAkB,IACtCvoK,EAAAA,EAAAA,GAAE4pK,QAGbrD,qBACI,IAAIuD,EAAe3rM,KAAKyqM,cAAgBzqM,KAAKyqM,aAAa/pK,aAAcmB,EAAAA,EAAAA,GAAE,SACrE7hC,KAAKyqM,cACNzqM,KAAK0gC,WAAWqQ,OAAO46J,GAE3B3rM,KAAKyqM,aAAezqM,KAAKwiC,iBAAiBmpK,EAAczG,GAAallM,KAAK4pM,uBAC1E,IAAIgC,EAAiB5rM,KAAKyqM,aAAa/pK,WAAWa,KAAK,cAAcwnB,UACrE/oD,KAAKwrM,sBAAwB,IAAII,EAAgB5rM,KAAK0gC,YACtD1gC,KAAKyqM,aAAaz9F,mBAAmB,YAAahtG,KAAK0qM,kBAAkBpmK,KAAKtkC,OAC9EA,KAAKyqM,aAAaz9F,mBAAmB,MAAOhtG,KAAK6qM,YAAYvmK,KAAKtkC,OAClEA,KAAKyqM,aAAaz9F,mBAAmB,UAAWhtG,KAAK0qM,kBAAkBpmK,KAAKtkC,OAC5EA,KAAKyqM,aAAaz9F,mBAAmB,SAAUhtG,KAAK+nM,YAAYzjK,KAAKtkC,OACrEA,KAAKgrM,wBAAwBhrM,KAAKyqM,aAAc,sBAChDzqM,KAAKirM,iBAAiBjrM,KAAKuiC,OAAO,YAEtC8lK,oBACI,IAAIwD,EAAW7rM,KAAKuiC,OAAO,gBAAkBviC,KAAKuiC,OAAO,iBACzDviC,KAAK0gC,WAAWsM,YAAYk5J,GAAkC2F,IAElE7yH,OAAOzrE,GAKH,OAJKvN,KAAK0oM,SACN1oM,KAAKyoM,eACLzoM,KAAK04E,kBAEF14E,KAAK0oM,OAAO1vH,OAAOzrE,IAE9Bo9L,OACI,OAAO3qM,KAAKg5E,QAAO,IAEvB4xH,QACI,OAAO5qM,KAAKg5E,QAAO,IAEvB8yH,eAAex8L,EAAMhP,GACjBN,KAAK6nM,OAAS7nM,KAAK6nM,MAAMtlK,OAAOjzB,EAAMhP,IAE1CyrM,iBAAiB9kL,GACb,IAAI+kL,IAAmB97K,EAAAA,EAAAA,IAAcjJ,GACjC+2C,EAAeguI,EAAkB/kL,EAAOjnB,KAAKmoM,eAAelhL,GAChE,OAAQiJ,EAAAA,EAAAA,IAAc8tC,GAA0D,GAA1Cj4D,QAAOkrG,EAAAA,EAAAA,IAAcjzC,EAAc,MAE7EuqI,oBAAoBn1D,GACZpzI,KAAKuiC,OAAO,kBACZviC,KAAKuiC,OAAO,CACR9yB,KAAMzP,KAAK+rM,iBAAiB34D,GAC5B/jI,MAAM6gB,EAAAA,EAAAA,IAAckjH,GAAgBA,EAAa/jI,UAAO,IAGhErP,KAAKwpC,8BAA8B,eAAgB4pG,GACnDpzI,KAAKwpC,8BAA8B,kBAAmBxpC,KAAKkoM,WAAW90D,KAE1EzmD,SACI3sF,KAAK6nM,OAAS7nM,KAAK6nM,MAAMnnK,WAAW4B,SACpCtiC,KAAK0oM,QAAU1oM,KAAK0oM,OAAOhoK,WAAW4B,UAE1C2pK,wBAAwB3rM,GACpBN,KAAK8rM,eAAe,mBAAoB9rM,KAAKuiC,OAAO,mBAAoB9R,EAAAA,EAAAA,IAAUnwB,GAAS,CAACA,GAAS,IACrG,IAAI8oM,EAAeppM,KAAKuiC,OAAO,gBAC/BviC,KAAKsoM,oBAAoBj6K,MAAK+kH,IAC1BpzI,KAAKuoM,oBAAoBn1D,GACrBpzI,KAAKmoM,eAAeiB,KAAkBppM,KAAKmoM,eAAe/0D,IAC1DpzI,KAAKmpM,4BAA4B,CAC7Bt0I,cAAeu0I,EACf9oM,MAAO8yI,QAKvB84D,2BAA2B/mI,GACvB,IACI71D,KAAMA,EACNhP,MAAOA,GACP6kE,EACAgnI,EAAY,GAChBA,EAAU78L,GAAQhP,EAClBN,KAAKyqM,aAAaloK,OAAO,YAAY3W,EAAAA,EAAAA,GAAO,GAAI5rB,KAAKupM,sBAAuB4C,IAC5EnsM,KAAK0oM,QAAU1oM,KAAK0oM,OAAOr/E,WAE/B+iF,mBAAmB9rM,GACf,GAAIA,EAAO,CACPN,KAAK8rM,eAAe,gBAAiB,UACrC,IAAItF,EAAkBxmM,KAAKuiC,OAAO,mBAClCviC,KAAK8rM,eAAe,oBAAoBr7K,EAAAA,EAAAA,IAAU+1K,GAAmB,CAACA,GAAmB,IACzFxmM,KAAKisM,wBAAwBjsM,KAAKuiC,OAAO,yBAEzCviC,KAAK8rM,eAAe,gBAAiB,QACrC9rM,KAAKuiC,OAAO,CACRikK,qBAAiB,EACjBpzD,kBAAc,IAElBpzI,KAAKksM,2BAA2B,CAC5Bz8L,KAAMzP,KAAKuiC,OAAO,WAI9B8pK,sBAAsBh+L,GAClB,IAAIm4L,EAAkBxmM,KAAKuiC,OAAO,mBAClCviC,KAAK8rM,eAAe,eAAgB,MACpC9rM,KAAKurM,iBAAiB,QAAS,CAACl9L,KAC5BoiB,EAAAA,EAAAA,IAAU+1K,IACVxmM,KAAKsoM,oBAAoBj6K,MAAK+kH,IAC1BpzI,KAAK8rM,eAAe,mBAAoB,CAACtF,IACzCxmM,KAAK8rM,eAAe,eAAgB14D,MACrChlH,MAAKN,IACJ9tB,KAAK8rM,eAAe,mBAAoB,OACzCt+K,OAAOxtB,KAAKuoM,oBAAoBjkK,KAAKtkC,QAGhDssM,kBAAmB,WACf,IAAIlvL,EAAQiO,UAAUzD,OAAS,QAAK,IAAWyD,UAAU,GAAKA,UAAU,GAAKrrB,KAAK2jC,YAAYvmB,QAC9Fpd,KAAK2jC,iBAAc,EACnB3jC,KAAKwnM,mBAAmBpqL,GACxBpd,KAAKusM,kBAETA,eAAgB,WACZvsM,KAAKsnM,oBACLtnM,KAAK8rM,eAAe,UAAW9rM,KAAKgoM,YAExC56J,MAAO,WACHptC,KAAKyqM,aAAar9J,SAEtBw/C,eAAen4D,GACX,IAAI+3K,GAEAl9L,KAAMA,EACNhP,MAAOA,GACPm0B,EACJ,OAAQnlB,GACJ,IAAK,gBACDtP,KAAKosM,mBAAmB9rM,GACxB,MACJ,IAAK,cACDN,KAAKqoM,oBACLroM,KAAKooM,qBACL,MACJ,IAAK,cACDpoM,KAAKunM,wBACLvnM,KAAK8rM,eAAex8L,EAAMhP,GAC1BN,KAAKuoM,oBAAoBvoM,KAAKuiC,OAAO,iBACrC,MACJ,IAAK,UACDviC,KAAKssM,oBACL,MACJ,IAAK,qBACDtsM,KAAKysM,0BAA0BzsM,KAAKyqM,aAAch2K,GAClD,MACJ,IAAK,kBACD,GAAI,4BAA8BA,EAAKqgC,SACnC,WAEA,IAAWrgC,EAAKn0B,MAAMiN,gBACfknB,EAAKn0B,MAAMiN,QAEtBvN,KAAKkrM,oBAAoBz2K,GACzBz0B,KAAKysM,0BAA0BzsM,KAAK0oM,OAAQj0K,GAC5C,MACJ,IAAK,SACDz0B,KAAKg5E,OAAO14E,GACZ,MACJ,IAAK,oBACL,IAAK,oBACDN,KAAK8rM,eAAex8L,EAAMhP,GAC1BN,KAAKyqM,aAAaloK,OAAOjzB,EAAMhP,GAC/BN,KAAKs6B,SAAS7F,GACd,MACJ,IAAK,QACDz0B,KAAKssM,kBAAkBtsM,KAAKuiC,OAAO,UACnCviC,KAAKqsM,sBAAsB/8L,GAC3B,MACJ,IAAK,aACGvI,MAAM2iB,QAAQppB,GACdN,KAAKssM,kBAAkBtsM,KAAKuiC,OAAO,gBAEnCviC,KAAKssE,kBACLtsE,KAAKusM,kBAETvsM,KAAKqsM,sBAAsB/8L,GAC3B,MACJ,IAAK,OACL,IAAK,OACDtP,KAAKksM,2BAA2Bz3K,GAChC,MACJ,IAAK,gBACDz0B,KAAKqoM,oBACLroM,KAAKooM,qBACLpoM,KAAK0oM,QAAU1oM,KAAK0oM,OAAOr/E,UAC3B,MACJ,IAAK,QACL,IAAK,SACDrpH,KAAKs6B,SAAS7F,GACd,QAAU+3K,EAAexsM,KAAK0oM,cAAW,IAAW8D,GAAwBA,EAAanjF,UACzF,MACJ,IAAK,cACDrpH,KAAKyqM,aAAaloK,OAAOjzB,EAAMhP,GAC/B,MACJ,IAAK,eACL,IAAK,UACL,IAAK,aACL,IAAK,gBACL,IAAK,eACL,IAAK,qBACDN,KAAK8rM,eAAex8L,EAAMhP,GAC1B,MACJ,IAAK,0BACDN,KAAK04E,iBACL,MACJ,IAAK,kBACD14E,KAAKisM,wBAAwB3rM,GAC7B,MACJ,IAAK,eACD,MACJ,IAAK,cACDN,KAAKolM,yBACL,MACJ,IAAK,gBACDplM,KAAKonM,2BACL,MACJ,IAAK,qBACDpnM,KAAKqnM,gCACL,MACJ,IAAK,iBACDrnM,KAAKg5E,OAAOh5E,KAAKuiC,OAAO,WACxB,MACJ,IAAK,WACDviC,KAAKyqM,aAAaloK,OAAOjzB,EAAMhP,GAC/B,MACJ,QACIN,KAAKs6B,SAAS7F,OAG3Bw0C,QAAQC,GAAAA,IACXikB,EAAAA,EAAAA,GAAkB,mBAAoBo5G,IACtC,IC/mBImG,GAA6B,0BAC7BC,GAA+B,4BAC/BC,GAAsC,eACtCC,GAAuB,YACvBC,GAA6B,WAC7BC,GAAgC,iBAChCC,GAAoC,sBAC7BC,GAAej8K,EAAAA,EAAAA,QAAc,CACpCC,KAAM,SAAS69D,EAAkBo+G,EAAkCC,GAC/DntM,KAAKotM,kBAAoBt+G,EACzB9uF,KAAKqtM,kCAAoCH,EACzCltM,KAAKstM,kBAAoBH,GAE7BI,eAAgB,SAAStmL,GACrB,IACIyE,IAAKA,EACLhc,KAAMA,EACNo0B,QAASA,EACTxxB,WAAYA,EACZ09D,aAAcA,GACd/oD,EACAxB,EAAczlB,KAAKynM,SAAShuI,aAAannD,GACzChS,EAAQogG,GAAAA,gBAA6Bj7E,EAAaA,EAAYsoC,iBAAmBtoC,EAAYsoC,iBAAiBriC,EAAIpZ,IAAeoZ,EAAIpZ,GAAa5C,EAAMo0B,GACxJ9a,EAASvD,EAAYrU,QAAU,KAAOsvF,GAAAA,YAAyBpgG,EAAOmlB,GAI1E,OAHIuqD,GAAgBA,EAAa,IAAMA,EAAa,GAAGpoD,SACnDoB,GAAU,IAAM03E,GAAAA,uBAAoC1wB,EAAa,GAAIhwE,KAAKynM,SAASjhL,eAEhFwC,GAEXwkL,kBAAmB,SAAS9vJ,GACxB,OAAOA,GAEX+vJ,aAAc,WACV,IAAI3+G,EAAmB9uF,KAAKotM,kBACxB3zI,EAAeq1B,EAAiBj4C,mBAAmB8X,kBACnD92C,EAAuBi3E,EAAiBvsD,OAAO,+BACnDviC,KAAKynM,SAAW,CACZ3gM,QAASgoF,EAAiB4+G,YAAY1tM,KAAKqtM,mCAC3C5zI,aAAcA,EACdr8C,MAAOpd,KAAKstM,mBAAqBx+G,EAAiB6+G,eAAiB7+G,EAAiB8+G,oBAAsB9+G,EAAiB++G,eAC3Hl2J,gBAAiBm3C,EAAiBj4C,mBAAmBc,gBAAgBrT,KAAKwqD,EAAiBj4C,oBAC3Fi3J,iBAAkBh/G,EAAiBvsD,OAAO,qBAC1C/b,aAAcsoE,EAAiBvsD,OAAO,iBACtCp7B,oBAAqB2nF,EAAiBvsD,OAAO,uBAC7Cj2B,WAAYwiF,EAAiBvsD,OAAO,cACpCwrK,iBAAiBt9K,EAAAA,EAAAA,IAAU5Y,GAAwBA,IAAyBi3E,EAAiBvsD,OAAO,mBACpG5qB,mBAAoBm3E,EAAiBvsD,OAAO,+BAGpDyrK,sBAAuB,WACnB,OAAOv9K,EAAAA,EAAAA,IAAUzwB,KAAKynM,SAAS9vL,qBAEnCA,mBAAoB,SAAS2uB,EAAG2nK,GACxBjuM,KAAKynM,SAAS9vL,qBACd2uB,EAAE4nK,SAAWD,GACTx9K,EAAAA,EAAAA,IAAUzwB,KAAKotM,qBAAsB38K,EAAAA,EAAAA,IAAUzwB,KAAKotM,kBAAkBtnK,aACtEQ,EAAER,UAAY9lC,KAAKotM,kBAAkBtnK,WAEzC9lC,KAAKynM,SAAS9vL,mBAAmB2uB,KAGzC6nK,gBAAiB,IAAM,CAAC,CACpBC,MAAM,EACNn+L,UAAW,SACXo+L,UAAU,GACX,CACCD,MAAM,EACNn+L,UAAW,OACXo+L,UAAU,GACX,CACCD,MAAM,EACNn+L,UAAW,QACXo+L,UAAU,IAEdC,mBACI,MAAO,CACHF,MAAM,EACNC,UAAU,EACVp+L,WAAWsgC,EAAAA,EAAAA,GAAoBvwC,KAAKynM,SAASn7L,cAGrDiiM,kBACI,IAAIR,EAAkB/tM,KAAKynM,SAASsG,gBAChCS,EAAe,GASnB,OARAxuM,KAAKkxC,aAAa2K,SAAQ1tC,IACtBqgM,EAAanmL,KAAK,CACdpY,UAAW9B,EAAO8B,WAAa,OAC/BiC,OAAQ/D,EAAO+D,OACfm8L,SAAUN,EACVv8L,SAAUrD,EAAOqD,cAGlBg9L,GAEXC,UAAW,WACP,MAAO,IAAIzuM,KAAKmuM,qBAAsBnuM,KAAKuuM,kBAAmBvuM,KAAKsuM,qBAEvEI,qBAAsB,SAAShxJ,GAC3B,IAAIixJ,EACA1+L,GAAa,QAAU0+L,EAAwB3uM,KAAKkxC,aAAawM,UAAe,IAAWixJ,OAAwB,EAASA,EAAsB1+L,YAAc,QACpK,OAAOjQ,KAAKmuM,kBAAkBn8K,KAAIkiB,GAASA,EAAMjkC,YAAWoa,QAAQpa,IAExE2+L,WAAY,SAASr7J,EAAUmK,GAC3B,OAAInK,EAAWvzC,KAAK6uM,oBACT,EACA7uM,KAAK8uM,YAAYv7J,EAAWvzC,KAAK6uM,oBAAqBnxJ,GACtD19C,KAAK0uM,qBAAqBhxJ,GAC1B19C,KAAKy2C,WAAWlD,EAAWvzC,KAAK6uM,qBAChC7uM,KAAKmuM,kBAAkBvmL,OAAS5nB,KAAKkxC,aAAatpB,OAElD81B,EAAY19C,KAAKmuM,kBAAkBvmL,QAGlDspB,WAAY,SAAS69J,GACjB,IACIjoM,QAASA,GACT9G,KAAKynM,SACT,OAAOsH,EAAsBjoM,EAAUA,EAAQA,EAAQ8gB,OAAS,IAEpEonL,iBAAkB,WACd,IAAIloM,EAAU9G,KAAKkxC,aACnB,OAAOzgB,EAAAA,EAAAA,IAAU3pB,GAAWA,EAAQkrB,KAAIkzD,GAAKA,EAAE13E,aAAS,GAE5DqzC,aAAc,WACV,OAAO7gD,KAAKynM,SAASrqL,MAAMwK,OAAS5nB,KAAK6uM,qBAE7CA,kBAAmB,WACf,OAAI7uM,KAAK8tM,mBACE9tM,KAAKynM,SAAS3gM,QAAQ8gB,OAAS,EAEnC,GAEX6uB,WAAY,SAASlD,GACjB,OAAOA,EAAWvzC,KAAKynM,SAASrqL,MAAMwK,QAAU,UAAY5nB,KAAKynM,SAASrqL,MAAMm2B,GAAUzP,SAE9FmrK,cAAe,SAAS17J,GACpB,IAAItsB,EAAOjnB,KAAKynM,SAASrqL,MAAMm2B,EAAWvzC,KAAK6uM,qBAC3Cv8L,EAAa2U,GAAQA,EAAK3U,WAC9B,OAAI2U,GAAQ,gBAAkBA,EAAK6c,QACxB,GAEJrT,EAAAA,EAAAA,IAAUne,GAAcA,EAAatS,KAAKynM,SAAShuI,aAAa7xC,QAE3EsnL,YAAa,SAAS37J,EAAUmK,GAC5B,IAAI52C,EAAU9G,KAAKkxC,aACnB,GAAIqC,EAAWvzC,KAAK6uM,oBAChB,MAAO,SAIX,GAFIt7J,GAAYvzC,KAAK6uM,oBAEjBnxJ,EAAY52C,EAAQ8gB,OAAQ,CAC5B,IAAIX,EAAOjnB,KAAKynM,SAASrqL,MAAMwK,QAAU5nB,KAAKynM,SAASrqL,MAAMm2B,GACzDplC,EAASrH,EAAQ42C,GACrB,OAAIz2B,GAAQ,SAAWA,EAAK6c,SACpB5V,SAASjH,EAAKyU,OAAO17B,KAAKwtM,kBAAkB9vJ,QAAiBjtB,EAAAA,EAAAA,IAAUtiB,EAAOmD,gBACvEmf,EAAAA,EAAAA,IAAUtiB,EAAOuE,QAAUvE,EAAOuE,OAAOlB,SAAWrD,EAAOqD,SAGnE,WAGf29L,MAAO,WACH,IAAIvnK,EAAO5nC,KACX4nC,EAAK6lK,eACL,IAAInsL,EAAUsmB,EAAK6/J,SACnB,OAAO7rK,EAAAA,EAAAA,IAAKta,EAAQlE,OAAOiR,MAAM,SAASjR,GACtCkE,EAAQna,qBAAuBma,EAAQna,oBAAoBygC,EAAKsJ,WAAWtJ,EAAKinK,oBAAsB,GAAIzxL,GAC1GkE,EAAQlE,MAAQA,KAChBgR,MAAM,WACN9M,EAAQlE,MAAQ,OAGxBgyL,kCAAmC,SAASC,GACxC,IAAI5+K,EAAAA,EAAAA,IAAU4+K,IAA0BA,EAAsBznL,OAAS,EACnE,OAAOynL,EAAsBr9K,KAAK,SAAS/K,GACvC,MAAO,CACH3mB,MAAO2mB,EAAK3mB,MACZgP,KAAM2X,EAAK3X,UAK3BggM,YAAa,SAAS/7J,EAAUmK,EAAW6xJ,GACvC,IAAIjvM,EACA6N,EACA6a,EAAS,CACTilL,eAAgB,GAChB3tM,MAAOA,GAEPwG,EAAU9G,KAAKkxC,aACfs+J,EAAqBxvM,KAAKwtM,kBAAkB9vJ,GAChD,GAAInK,EAAWvzC,KAAK6uM,oBAAqB,CACrC,IAAIY,EAAazvM,KAAKkxC,YAAW,GAAMqC,GACvCplC,EAASshM,EAAW/xJ,GACpB10B,EAAOilL,eAAenqK,QAAU,SAChC9a,EAAOilL,eAAe9/L,OAASA,GAAUA,EAAOuhM,WAChD1mL,EAAO1oB,MAAQ6N,GAAUA,EAAOiD,YAC7B,CACHmiC,GAAYvzC,KAAK6uM,oBACjB,IAAI5nL,EAAOjnB,KAAKynM,SAASrqL,MAAMwK,QAAU5nB,KAAKynM,SAASrqL,MAAMm2B,GAC7D,GAAItsB,EAAM,CACN,IAAI0oL,EAAa1oL,EAAKyU,OAGtB,OAFA1S,EAAOilL,eAAenqK,QAAU7c,EAAK6c,QACrC9a,EAAOilL,eAAe9/L,OAASrH,EAAQ42C,IAAc52C,EAAQ42C,GAAWgyJ,WAChEzoL,EAAK6c,SACT,IAAK,cACL,IAAK,cACG0rK,EAAqBG,EAAW/nL,SAChCtnB,EAAQqvM,EAAWH,IACf/+K,EAAAA,EAAAA,IAAUnwB,IACV0oB,EAAOilL,eAAe3tM,MAAQA,EAAMA,MACpC0oB,EAAOilL,eAAe2B,qBAAuBtvM,EAAMgP,KACnD0Z,EAAO1oB,MAAQogG,GAAAA,eAA4BpgG,EAAON,KAAKynM,SAASjhL,eAEhEwC,EAAOilL,eAAe3tM,WAAQ,GAGtC,MACJ,IAAK,QAED,GADA0oB,EAAOilL,eAAe37L,WAAa2U,EAAK3U,WACpCorC,EAAY,EACZ10B,EAAOilL,eAAe9/L,OAASnO,KAAKynM,SAAShuI,aAAaxyC,EAAK3U,YAC/D0W,EAAOilL,eAAe3tM,MAAQ2mB,EAAKyE,IAAIzE,EAAK3U,YAC5C0W,EAAOilL,eAAelc,kBAAoB/xL,KAAKovM,kCAAkCnoL,EAAK+oD,aAAa,IACnGhnD,EAAO1oB,MAAQN,KAAKutM,eAAetmL,OAChC,CACH,IAAIgd,EAAehd,EAAKyU,OAAO8zK,GAC/B,GAAIzoM,MAAM2iB,QAAQua,GAAe,CAC7Bjb,EAAOilL,eAAelc,kBAAoB/xL,KAAKovM,kCAAkCnrK,GACjF3jC,EAAQ,GACR,IAAK,IAAIu3B,EAAI,EAAGA,EAAIoM,EAAarc,OAAQiQ,IACrCv3B,IAAUu3B,EAAI,EAAI03K,EAAY,KAAO,OAAS,IAAM7uG,GAAAA,eAA4Bz8D,EAAapM,GAAI73B,KAAKynM,SAASjhL,cAEnHwC,EAAO1oB,MAAQA,OAEf0oB,EAAOilL,eAAe3tM,WAAQ,EAGtC,MACJ,QAEI,GADA6N,EAASrH,EAAQ42C,GACbvvC,EAAQ,CACR,IAAI+iB,EAASy+K,EAAWH,GACpBxxI,EAAe0iC,GAAAA,gBAA6BvyF,EAAQ+iB,EAAQjK,EAAKvX,KAAMuX,EAAK6c,UAC3E5V,SAAS8vC,KAAiBvtC,EAAAA,EAAAA,IAAUtiB,EAAOmD,eACxCi+L,IAAa9+K,EAAAA,EAAAA,IAAUtiB,EAAOmD,gBAAkBnD,EAAOmD,gBAAkBtR,KAAKotM,kBAAkBv2J,mBAAmBuX,2BAA2B,WAC9IplC,EAAO1oB,MAAQ09D,EAEfh1C,EAAO1oB,MAAQogG,GAAAA,YAAyB1iC,EAAc7vD,GAG1D6a,EAAO1oB,MAAQ09D,EAEnBh1C,EAAOilL,eAAe3tM,MAAQ4wB,EAElClI,EAAOilL,eAAev+L,KAAOuX,EAAKvX,OAIlD,OAAOsZ,GAEX8kL,iBAAkB,WACd,OAAO9tM,KAAKynM,SAASqG,kBAEzBgB,YAAa,SAASv7J,EAAUmK,GAC5B,IAAItgC,EAAQpd,KAAKynM,SAASrqL,MACtB6J,EAAO7J,EAAMm2B,GACbs8J,EAAmB7vM,KAAKwtM,kBAAkB9vJ,GAC1CoyJ,EAAyB7oL,EAAK+oD,cAAgB/oD,EAAK+oD,aAAa6/H,IAAqB5oL,EAAK+oD,aAAa6/H,GAAkBjoL,OAAS,GAAKX,EAAK+oD,aAAa6/H,GAAkB,GAAGhwL,cAClL,OAAOoH,GAAQ,gBAAkBA,EAAK6c,SAAW,gBAAkB7c,EAAK6c,SAAWgsK,GAEvFC,eAAgB,SAASx8J,EAAUmK,GAC/B,IAAI52C,EAAU9G,KAAKynM,SAAS3gM,QACxBqH,EAASrH,EAAQysC,IAAazsC,EAAQysC,GAAUmK,GACpD,OAAOvvC,EAAS,CACZunC,SAAUvnC,EAAO6hM,eAAiB,GAAK,EACvC9nJ,SAAU/5C,EAAO+5C,SAAW,GAAK,GACjC,CACAxS,QAAS,EACTwS,QAAS,IAGjB+nJ,cAAe,WACX,MAAO,CACH/gM,EAAG,EACHC,EAAGnP,KAAK6uM,wBAITqB,GAAmBxvG,GAAAA,eAAAA,QAAoC,IAAIz3B,QAAQknI,IAAa/kK,QAAQ,CAC/F83J,cAAe,WACX,MAAO,CACH9xL,QAAS,GACTskC,QAAS,EACTwS,QAAS,IAGjBk3I,mBAAoB,SAASjxL,EAAQX,GACjCW,EAAOX,MAAQA,GAEnBkgM,YAAa,SAASR,GAClB,IACIr1K,EACA/wB,EAFAkiB,EAAS,GAGTinB,EAAoBjwC,KAAK62C,mBACzBsR,EAAWlY,EAAkB8X,cACjC,IAAKlwB,EAAI,EAAGA,GAAKswB,EAAUtwB,IAAK,CAC5B,IAAIu4K,EAAmB,GACvBtpM,EAAUmpC,EAAkB6G,kBAAkBjf,GAAG,GACjD,IAAIw4K,OAA4B,EAChC,GAAIx4K,IAAMswB,EACN,GAAInoD,KAAKwoC,iBACL6nK,EAA4BnD,MACzB,CACH,IAAIjwH,EAAej9E,KAAKswM,iBAAiBtwM,KAAKuwM,aAAcvwM,KAAKugF,WACjE,GAAItD,GAAgBA,EAAar1D,OAAQ,CACrCyoL,EAA4B,GAC5B,IAAK,IAAI7zC,EAAK,EAAGA,EAAK11J,EAAQ8gB,OAAQ40I,IAClC6zC,EAA0BvpM,EAAQ01J,GAAIpyI,OAAS6yD,EAAau/E,IAK5E,IAAK,IAAI3kH,EAAI,EAAGA,EAAI/wC,EAAQ8gB,OAAQiwB,IAAK,CACrC,IAAI1pC,GAASyd,EAAAA,EAAAA,GAAO,GAAI9kB,EAAQ+wC,GAAI,CAChCrmC,SAAU,aAAe1K,EAAQ+wC,GAAGrmC,SAAW,OAAS1K,EAAQ+wC,GAAGrmC,SACnEk+L,WAAY5oM,EAAQ+wC,KAExB,GAAI73C,KAAKwwM,qBAAqBriM,GAAS,CACnC,IAAIsiM,EAAiBzwM,KAAK0wM,wBAAwBviM,IAC9CsiB,EAAAA,EAAAA,IAAUggL,KACVtiM,EAAO6hM,cAAgBS,GAEvBJ,GACArwM,KAAKo/L,mBAAmBjxL,EAAQkiM,EAA0BliM,EAAOic,QAErEgmL,EAAiB/nL,KAAKla,IAG9B6a,EAAOX,KAAK+nL,GAKhB,OAHAtpM,EAAUkiB,EAAOm/B,GACjBn/B,EAAShpB,KAAKqjM,cAAcr6K,EAAOe,MAAM,GAAI,IAC7Cf,EAAOX,KAAKvhB,GACLkiB,GAEX0nL,wBAAyB,SAASviM,GAC9B,GAAKA,EAAOsE,OAAZ,CAGA,IAAIk+L,EAAe3wM,KAAK62C,mBAAmBwS,wBAAwBl7C,EAAOic,OAAO,GACjF,IAAKqG,EAAAA,EAAAA,IAAUkgL,GAGf,OAAOA,EAAa3nJ,QAAO,CAAChgC,EAAQ4nL,IAC5B5wM,KAAKwwM,qBAAqBI,GACnB5nL,GAAUhpB,KAAK0wM,wBAAwBE,IAAgB,GAEvD5nL,GAEZ,KAEPwnL,qBAAsB,SAASriM,GAC3B,OAAQA,EAAOk5B,UAAYl5B,EAAOgC,qBAAkB,IAAWhC,EAAOgC,iBAE1E0gM,uBAAwB,SAAS7gI,EAAc8gI,GAC3C,IAAI9nL,EAAS,GACT+nL,EAAsB,EACtBl5K,EAAI,EACR,EAAG,CAEC,IADA,IAAI6D,EAAS,GACJmc,EAAI,EAAGA,EAAIm4B,EAAapoD,OAAQiwB,IAAK,CAC1C,IAAIu5I,EAAcphH,EAAan4B,GAC3BkmF,EAAcqzD,EAAYxpK,OAC1BmpL,EAAsBhzE,IACtBgzE,EAAsBhzE,GAE1BriG,EAAOrT,KAAK+oK,EAAYv5J,IAE5B7O,EAAOX,KAAK,CACRqT,OAAQA,EACRoI,QAASgtK,EAAU,cAAgB,sBAElCj5K,IAAMk5K,EAAsB,GACrC,OAAO/nL,GAEXgoL,wBAAyB,WACrB,IAAI5qL,EAAapmB,KAAKuiC,OAAO,sBAC7B,IAAI9R,EAAAA,EAAAA,IAAUrK,GACV,IAAK,IAAIyR,EAAI,EAAGA,EAAIzR,EAAWwB,OAAQiQ,IACnC,GAAIzR,EAAWyR,GAAG7X,kBACd,OAAO,EAInB,OAAO,GAEXixL,iCAAkC,SAASC,GAIvC,IAHA,IAAIloL,EAAS,GACTmoL,EAAyB,GACzBC,EAAmB,GACdv5K,EAAI,EAAGA,EAAIq5K,EAAYtpL,OAAQiQ,IAAK,CACzC,IAAI5Q,EAAOiqL,EAAYr5K,GACnB,gBAAkB5Q,EAAK6c,SACvBstK,EAAmBpxM,KAAK6wM,uBAAuB5pL,EAAK+oD,cACpDhnD,EAASA,EAAOlB,OAAOqpL,EAAwBC,GAC/CD,EAAyB,IAEzBA,EAAuB9oL,KAAKpB,GAGpC,OAAO+B,EAAOpB,OAASoB,EAASmoL,GAEpCE,sCAAuC,SAASH,GAE5C,IADA,IAAII,EAAgB,GACXz5K,EAAI,EAAGA,EAAIq5K,EAAYtpL,OAAQiQ,IAAK,CACzC,IAAI5Q,EAAOiqL,EAAYr5K,GACnBm4C,EAAe/oD,EAAK+oD,aACxB,GAAI,UAAY/oD,EAAK6c,SAAWksC,GAAgBA,EAAapoD,OAAS,EAAG,CAErE,IADA,IAAI2pL,EAAmBtqL,EAAKyU,OAAO9T,OAC1BiwB,EAAI,EAAGA,EAAIm4B,EAAapoD,OAAQiwB,IACrC,IAAK,IAAIxlB,EAAI,EAAGA,EAAI29C,EAAan4B,GAAGjwB,OAAQyK,IAAK,CAC7C,IAAI3M,EAAcsqD,EAAan4B,GAAGxlB,GAC9B3M,GAAeA,EAAY7F,gBACtB9Y,MAAM2iB,QAAQ4nL,EAAcz5J,EAAI05J,MACjCD,EAAcz5J,EAAI05J,GAAoB,IAE1CD,EAAcz5J,EAAI05J,GAAkBlpL,KAAK3C,IAIjD4rL,EAAc1pL,OAAS,KACvB4pL,EAAAA,EAAAA,IAAMvqL,EAAKyU,OAAQ41K,GACnBA,EAAgB,OAKhCG,wBAAyB,SAASr0L,GAK9B,IAJA,IAEIse,EACAs0C,EAHAlpE,EAAU9G,KAAK62C,mBAAmBC,kBAAkB,MAAM,GAC1D2iB,EAAez5D,KAAK62C,mBAAmB8X,kBAGlC92B,EAAI,EAAGA,EAAIza,EAAMwK,OAAQiQ,IAAK,CACnC,IAAI5Q,EAAO7J,EAAMya,GACb65K,GAAuB,EAC3Bh2K,EAAS,GACTs0C,EAAe,GACf,IAAK,IAAIn4B,EAAI,EAAGA,EAAI/wC,EAAQ8gB,OAAQiwB,IAAK,CACrC,IAAI1pC,EAASrH,EAAQ+wC,GAErB,GADA65J,EAAuBA,GAAwB,iBAAmBvjM,EAAOW,KACrE9O,KAAKwwM,qBAAqBriM,KACtB8Y,EAAKyU,SACD,UAAYzU,EAAK6c,SAAYpI,EAAO9T,OAGpC8T,EAAOrT,KAAKpB,EAAKyU,OAAOmc,IAFxBnc,EAAOrT,KAAKpB,EAAKyE,IAAIzE,EAAK3U,cAK9B2U,EAAK+oD,cACL,GAAI,UAAY/oD,EAAK6c,SAAYksC,EAAapoD,OAI1CooD,EAAa3nD,KAAKpB,EAAK+oD,aAAan4B,QAJc,CAClD,IAAIztB,EAAQytB,EAAI4hB,EAAa7xC,OAASX,EAAK3U,WAC3C09D,EAAa3nD,KAAKpB,EAAK+oD,aAAa0hI,EAAuBtnL,EAAQA,EAAQ,KAOvFsR,EAAO9T,SACPX,EAAKyU,OAASA,GAEds0C,EAAapoD,SACbX,EAAK+oD,aAAeA,KAIhC69H,aAAc,SAASn+L,GACnB,IAMIsgE,EANApoC,EAAO5nC,KACPotB,EAAI,IAAIC,EAAAA,GACRiuC,EAAiBt7D,KAAKqqC,cAAc,QACpCikJ,EAAchzH,EAAegzH,cAC7B7nK,EAAY6nK,EAAY1mK,QAAU0mK,EAAY,GAC9C2C,EAAoBrpJ,EAAKrF,OAAO,sBAoBpC,OAlBA3G,EAAAA,EAAAA,IAAKlsB,GAAM2e,MAAM,SAAS3e,GACtB4rD,EAAeuX,QAAQnjE,GAAM2e,MAAM,SAAS6iL,EAAa/kB,GACrDvkJ,EAAKypK,sCAAsCH,GACvCtpK,EAAKopK,4BACLE,EAActpK,EAAKqpK,iCAAiCC,IAExDlhI,EAAevpD,GAAaA,EAAUupD,cAClCv/C,EAAAA,EAAAA,IAAU07J,IAAoB8E,IAC9BjhH,EAAepoC,EAAKopJ,iBAAiBC,EAAmB9E,IAE5D,IAAIloJ,EAAexd,GAAamhB,EAAKipK,uBAAuB7gI,GAAc,GACtE/rC,IACAitK,EAAcA,EAAYppL,OAAOmc,IAErC2D,EAAK6pK,wBAAwBP,GAC7B9jL,EAAEe,QAAQ+iL,MACV9iL,KAAKhB,EAAEa,WACXG,KAAKhB,EAAEa,QACJb,GAEX4jK,iBAAkB,SAASC,EAAmB9E,GAC1C,IAAI7wH,EAAiBt7D,KAAKqqC,cAAc,QACpC4F,EAAoBqrB,EAAezkB,mBACvC,OAAOykB,EAAes1H,uBAAuBK,EAAmB9E,EAAiBl8I,EAAkB6G,kBAAkB,MAAM,IAAQ,SAASpxB,EAAavX,GACrJ,OAAOmtD,EAAei1H,cAAcpiL,GAAUA,EAAOic,OAAS,MAGtEwjL,kBAAmB,WACf,IAAI/+G,EAAsB7uF,KAAKqqC,cAAc,aACzCsnK,EAAkB9iH,EAAoBqH,sBAC1C,OAAOl2F,KAAK6tM,aAAa8D,IAE7BrB,iBAAkB,SAASj4B,EAAaxyI,GACpC,OAAOwyI,GAAeA,EAAY52I,YAAc42I,EAAYj5H,kBAAoBvZ,EAASuZ,mBAE7FnW,KAAM,WACFjpC,KAAK62C,mBAAqB72C,KAAKqqC,cAAc,WAC7CrqC,KAAKugF,UAAYvgF,KAAK+lC,QAAQ,YAC9B/lC,KAAKuwM,aAAevwM,KAAK+lC,QAAQ,qBACjC/lC,KAAK6pC,aAAa,cAAe,CAC7BiU,kBAAmB,CAAC,WAAY,cAEpC99C,KAAK6pC,aAAa,aAAc,CAC5BiU,kBAAmB,CAAC,WAAY,cAEpC99C,KAAK6pC,aAAa,eAAgB,CAC9BiU,kBAAmB,CAAC,WAAY,eAGxCnV,cAAe,WACX,MAAO,CAAC,yBAEZipK,gBAAiB,WACb,MAAO,CAAC,UAEZC,gBAAiB,SAAS1E,GACtB,IACID,EADAjwH,EAAej9E,KAAKswM,iBAAiBtwM,KAAKuwM,aAAcvwM,KAAKugF,WAEjE,GAAItD,GAAgBA,EAAar1D,OAAQ,CACrCslL,EAAmC,GAEnC,IADA,IAAI4E,EAA+B9xM,KAAK62C,mBAAmBC,kBAAkB92C,KAAK62C,mBAAmBkR,eAAe,GAC3GlwB,EAAI,EAAGA,EAAIi6K,EAA6BlqL,OAAQiQ,IACrDq1K,EAAiC4E,EAA6Bj6K,GAAGzN,OAAS6yD,EAAaplD,GAG/F,OAAO,IAAIo1K,GAAajtM,KAAMktM,EAAkCC,IAEpE4E,cAAe,SAAS1iH,GACpBrvF,KAAK2tM,eAAiBt+G,GACtB2iH,EAAAA,GAAAA,IAAahyM,KAAK8lC,UAAU+rK,kBAAmB,CAC3C/5L,SAAU9X,KAAKuiC,OAAO,mBACtBvqB,SAAUhY,KAAKuiC,OAAO,mBACtBrwB,OAAQ,QACR+/L,oBAAqBjyM,KAAKuiC,OAAO,6BACjCj2B,WAAYtM,KAAKuiC,OAAO,cACxB2vK,aAAclyM,KAAKuiC,OAAO,4BAC1B4vK,gBAAiBnyM,KAAK+pC,UAAU,eAChCqoK,eAAgBpyM,KAAK+pC,UAAU,cAC/BsoK,iBAAkBryM,KAAK+pC,UAAU,iBAClCuoK,GAAAA,GAAAA,UAEPppK,cAAe,WACX,MAAO,CAAC,kBAAmB,kBAAmB,kBAElDmmD,cAAe,SAAS/uF,GACpB,KAAImwB,EAAAA,EAAAA,IAAUnwB,GAIV,OAAON,KAAKuyM,gBAHZvyM,KAAKuyM,gBAAkBjyM,EACvBN,KAAKmvF,qBAAqBliD,UAMtCyzD,GAAAA,eAA4B,SAAU,CAClCx6C,eAAgB,WACZ,MAAO,CACHv+C,OAAQ,CACJ4M,SAAS,EACTuD,SAAU,WACVF,oBAAoB,EACpBC,0BAAsB,EACtBG,cAAU,EACVN,yBAAyB,EACzBK,mBAAmB,EACnBpD,MAAO,CACHyD,SAAUqxB,EAAAA,EAAAA,OAA2B,uBACrCvxB,UAAWuxB,EAAAA,EAAAA,OAA2B,wBACtCtxB,mBAAoBsxB,EAAAA,EAAAA,OAA2B,qCAK/DuE,YAAa,CACTrmC,OAAQuoM,IAEZ9hK,UAAW,CACPJ,YAAa,CACTxmC,QAAS,CACLmhC,cAAe,WACX,IAAI6pK,EAAexyM,KAAKs6B,WACxB,OAAO7J,EAAAA,EAAAA,IAAU+hL,GAAgBA,EAAanqL,KAAK,kBAAoB,CAAC,mBAE5E+sF,mBAAoB,WAChBp1G,KAAKs6B,WACLt6B,KAAKi7H,eAAehuF,KAAKjtC,KAAK6hF,iBAI1C3zC,MAAO,CACH0nC,YAAa,CACT+T,iBAAkB,WACd,IAAIvsE,EAAQpd,KAAKs6B,WACbm4K,EAAezyM,KAAK0yM,0BAKxB,OAJID,IACAr1L,EAAMiL,KAAKoqL,GACXzyM,KAAK2yM,sBAAsBv1L,IAExBA,GAEXs1L,wBAAyB,WACrB,IAAIt1L,EAAQpd,KAAK4yM,yBACjB,GAAI,IAAMx1L,EAAMwK,OACZ,OAAO,KAEX,IAAIirL,EAAuB,CACvBvjM,KAAMs9L,GACNxrL,SAAU,QACVD,aAAc,OACdhO,UAAW,GACXmO,QAAS,CACLlE,MAAOA,IAGf,GAAI,IAAMA,EAAMwK,OAAQ,CACpB,IAAIo8H,GAAgB/0G,EAAAA,EAAAA,GAAS,GAAI7xB,EAAM,GAAI,CACvCxU,KAAMwU,EAAM,GAAG3N,KACfhI,YAAa,CACTuxJ,MAAO2zC,MAGfkG,EAAqBrxL,OAAS,WAC9BqxL,EAAqBtxL,SAAW,SAChCsxL,EAAqBvxL,QAAU0iI,MAC5B,CACH,IAAI8uD,EAAiB,CACjBzjM,KAAMw9L,GACNz3L,YAAa,OACbgI,MAAOA,EACPxU,KAAM5I,KAAKuiC,OAAO,yBAClB96B,YAAa,CACTuxJ,MAAO2zC,IAEX7F,gBAAiB,CACb3rL,YAAa,CACT69I,MAAO0zC,IAEXl/L,MAAO,SAGfqlM,EAAqBvxL,QAAUwxL,EAC/BD,EAAqBrxL,OAAS,mBAC9BqxL,EAAqBxxL,iBAAmB,CAAC2qK,EAAO+mB,EAAQz5L,KACpDtZ,KAAKwiC,kBAAiBX,EAAAA,EAAAA,GAAEvoB,GAAY2qI,GAAAA,EAAM,CACtC7mI,MAAOA,KAInB,OAAOy1L,GAEXD,uBAAwB,WACpB,IAAII,EAAgBhzM,KAAKuiC,OAAO,UAC5B5tB,EAAQ3U,KAAKuiC,OAAO,gBACpBnlB,EAAQ,GAmBZ,OAlBI41L,EAAcz+L,UACd6I,EAAMiL,KAAK,CACP5Y,KAAMkF,EAAMuD,UACZ7I,KAAMy9L,GACNv9L,QAAS,KACLvP,KAAKotM,kBAAkB2E,mBAG3BiB,EAAct7L,yBACd0F,EAAMiL,KAAK,CACP5Y,KAAMkF,EAAMwD,mBACZ9I,KAAM09L,GACNx9L,QAAS,KACLvP,KAAKotM,kBAAkB2E,eAAc,OAK9C30L,GAEXu1L,sBAAuB,SAASv1L,GAC5BA,EAAM0iB,MAAM,SAASmzK,EAAOC,GACxB,OAAOD,EAAM9/L,UAAY+/L,EAAM//L,cAGvCggM,uBAAwB,WACpB,OAAOnzM,KAAKuiC,OAAO,mBAEvB6wK,kBAAmB,SAASC,GACxB,IAEI/xL,EAFAsmB,EAAO5nC,KACP2U,EAAQizB,EAAKrF,OAAO,gBAgBxB,OAbIjhB,EADA+xL,EACU,CACNzqM,KAAM+L,EAAMyD,SACZ/I,KAAMw9L,IAGA,CACNjkM,KAAM+L,EAAMuD,UACZ7I,KAAM29L,GACNz9L,QAAS,WACLq4B,EAAKwlK,kBAAkB2E,kBAI5BzwL,GAEXsoB,cAAe,SAASnV,GACpBz0B,KAAKs6B,SAAS7F,GACV,WAAaA,EAAKnlB,OAClBmlB,EAAKqV,SAAU,EACf9pC,KAAK8rC,gBAGb7C,KAAM,WACF,IAAIrB,EAAO5nC,KACXA,KAAKs6B,WACLt6B,KAAKotM,kBAAoBptM,KAAKqqC,cAAc,UAC5CrqC,KAAK8lH,mBAAqB9lH,KAAKqqC,cAAc,WAC7CrqC,KAAK8lH,mBAAmBmV,eAAe98E,KAAK,SAAS0jC,GACjDj6C,EAAKqjD,uBAAuB,eAAgBpJ,OAGpDpgD,UAAW,WACP,OAAOzhC,KAAKs6B,YAAct6B,KAAKmzM,+BCnvBnD,IAAIG,GAAoB,iBACpB1xJ,GAAuB,WAAa0xJ,GACpCC,GAAsB,QACtB9tJ,GAA4B,yBAC5B+tJ,GAAkBzxD,GAAAA,eAAAA,QAA4B,CAC9C94G,KAAM,WACFjpC,KAAK0hC,gBAAkB1hC,KAAKqqC,cAAc,QAC1CrqC,KAAKyzM,oBAAsBzzM,KAAKqqC,cAAc,sBAC9CrqC,KAAK8lC,UAAUwvE,oBAAoBjtG,eAAgB,GAEvDuhC,cAAe,SAASnV,GACpB,GAAI,oBAAsBA,EAAKnlB,KAAM,CACjC,IAAIjH,EAAgBrI,KAAKuiC,OAAO,iBAChCviC,KAAK0zM,iBAAiBj/K,EAAKn0B,OAC3BN,KAAK2zM,gCAAgCtrM,EAAeosB,EAAKn0B,OACzDm0B,EAAKqV,SAAU,OACZ,GAAI,kBAAoBrV,EAAKnlB,KAAM,CAEtC,GADAmlB,EAAKqV,SAAU,EACX/iC,MAAM2iB,QAAQ+K,EAAKn0B,QAAUkrB,KAAKC,UAAUgJ,EAAKn0B,SAAWkrB,KAAKC,UAAUgJ,EAAKogC,eAChF,OAEJ,IAAIzsD,EAAkBpI,KAAKuiC,OAAO,mBAClCviC,KAAK4zM,eAAen/K,EAAKn0B,OACzBN,KAAK2zM,gCAAgCl/K,EAAKn0B,MAAO8H,OAC1C,uBAAyBqsB,EAAKnlB,MAE9B,sBAAwBmlB,EAAKnlB,MAE7B,6BAA+BmlB,EAAKnlB,KAH3CmlB,EAAKqV,SAAU,EAMf9pC,KAAKs6B,SAAS7F,IAGtBk/K,gCAAiC,SAAStrM,EAAeD,GACrD,IAAIyrM,EAAuB7zM,KAAKwpL,wBAAwBnhL,GACxD,GAAID,IAAoByrM,EAAsB,CAC1C,IAAItgK,EAAWvzC,KAAK0hC,gBAAgBsxC,iBAAiB3qE,GACrD,GAAIkrC,GAAY,EAAG,CACf,IAAIkI,GAAc5Z,EAAAA,EAAAA,GAAE7hC,KAAK+lC,QAAQ,YAAYya,cAAcjN,IAC3DvzC,KAAKqqC,cAAc,sBAAsBk/I,uBAAuB9tI,EAAarzC,MAIzF0rM,2BAA4B,WACxB,MAAO,aAAe9zM,KAAKuiC,OAAO,mBAAqBviC,KAAKuiC,OAAO,6BAEvEmxK,iBAAkB,SAAStpL,EAAO+0C,GACzBn/D,KAAKuiC,OAAO,uBAGjBnY,OAAQ,IAAWA,EAAQA,EAAQpqB,KAAKuiC,OAAO,mBAC3CnY,EAAQ,EACJpqB,KAAK8zM,8BACL9zM,KAAKskL,mBAGTtkL,KAAK+zM,qBAAqB3pL,EAAO+0C,KAGzC40I,qBAAsB,SAAS3pL,EAAO+0C,GAClC,IAAI7D,EAAiBt7D,KAAKqqC,cAAc,QACpC9nB,EAAW+4C,EAAe/4C,WAC1ByxL,EAAgB,KAChB,GAAIh0M,KAAKi0M,wBAAwB7pL,GAAQ,CACrC,IAAImpB,EAAWnpB,EAAQkxC,EAAeqV,mBAAkB,GACxD,IAAKxR,GAAkBA,EAAepzD,SAAWozD,EAAeh8C,UAAW,CACvE,IAAI+rI,EAAgB5zF,EAAe44I,oBACnC3gK,EAAW9gB,KAAKvP,IAAIqwB,EAAU27G,GAElC,IAAI7mJ,EAAgBizD,EAAewX,iBAAiBv/B,GAAU,IAC1D9iB,EAAAA,EAAAA,IAAUpoB,KAAmBrI,KAAKm0M,aAAa9rM,IAC/CrI,KAAKuiC,OAAO,gBAAiBl6B,KAIzC,GAAIka,GAAY,EACZ,GAAKviB,KAAKo0M,iBAAiBhqL,GAMvB4pL,QAN+B,CAC/B,IAAI1xL,EAAYmQ,KAAKC,MAAMtI,EAAQkxC,EAAe/4C,aAClDqZ,EAAAA,EAAAA,IAAK0/B,EAAeh5C,UAAUA,GAAYg5C,EAAeyP,aAAa18C,MAAK,KACvE2lL,SAOhBI,iBAAiBhqL,GACb,IAAIkxC,EAAiBt7D,KAAKqqC,cAAc,QACpCgqK,EAAqBr0M,KAAKqqC,cAAc,sBAAsB0vI,sBAClE,GAAIs6B,EAAoB,CACpB,IAAI/xL,EAAYmQ,KAAKC,MAAMtI,EAAQkxC,EAAe/4C,YAC9C+xL,EAAeh5I,EAAeohE,oBAC9B63E,EAAoBD,EAAeA,EAAa33E,OAAS,EACzD63E,EAAmBl5I,EAAe4V,iBAAiBtpD,OAAS0zC,EAAeqV,oBAC3E8jI,EAAoBhiL,KAAKw1C,KAAKusI,EAAmBl5I,EAAe/4C,YACpE,OAAOgyL,GAAqBnqL,GAASqqL,EAAoBnyL,EAE7D,OAAO,GAEXoyL,yBAA0B,SAAStqL,GAC/B,IAAIkxC,EAAiBt7D,KAAKqqC,cAAc,QACxC,GAAIrqC,KAAKi0M,wBAAwB7pL,GAAQ,CACrC,IAAImpB,EAAW9gB,KAAKvP,IAAIkH,EAAQkxC,EAAeqV,oBAAqBrV,EAAel+C,QAAQwK,OAAS,GAChGvf,EAAgBizD,EAAewX,iBAAiBv/B,IAChD9iB,EAAAA,EAAAA,IAAUpoB,KAAmBrI,KAAKm0M,aAAa9rM,IAC/CrI,KAAKuiC,OAAO,gBAAiBl6B,KAIzCurM,eAAgB,SAASloL,IAChB+E,EAAAA,EAAAA,IAAU/E,GAGX1rB,KAAK20M,eAAejpL,GAAK,GAFzB1rB,KAAKskL,oBAKbA,iBAAkB,WACd,IAAIj8K,EAAgBrI,KAAKuiC,OAAO,iBAC5BqyK,GAAyBnkL,EAAAA,EAAAA,IAAUpoB,GACvC,GAAKusM,KAA0B50M,KAAKuiC,OAAO,mBAAqB,GAAhE,CAGA,IAAIsiB,EAAqB7kD,KAAKqqC,cAAc,sBACxCuqK,GACA50M,KAAKuiC,OAAO,gBAAiB,MAEjCsiB,EAAmBs/H,oBAAoB,GACvCnkL,KAAKuiC,OAAO,mBAAoB,GAChCviC,KAAKqqC,cAAc,QAAQ4gC,YAAY,CACnCxwB,WAAY,mBACZpyC,cAAe,OAEnBw8C,EAAmB0kI,4BAAuB,GAAS,KAEvD0qB,wBAAyB,SAAS1gK,GAC9B,IAAI+nB,EAAiBt7D,KAAKqqC,cAAc,QACpC1E,EAAM21B,EAAe4V,iBAAiB39B,GAC1C,OAAQ5N,GAAO,SAAWA,EAAI7B,SAAW,UAAY6B,EAAI7B,SAE7DoF,cAAe,WACX,MAAO,CAAC,gBAAiB,iBAE7ByzE,cAAe,SAASjxF,GAIpB,OAHK1rB,KAAK8zM,8BACN9zM,KAAKuiC,OAAO,mBAAoB,GAE7BviC,KAAK20M,eAAejpL,IAE/BipL,eAAgB,SAASjpL,EAAKmpL,GAC1B,IAAIjtK,EAAO5nC,KACPs7D,EAAiB1zB,EAAKyC,cAAc,QACpCyqK,EAAiBltK,EAAKksK,6BACtB1mL,EAAI,IAAIC,EAAAA,GACZ,QAAI,IAAW3B,IAAQ4vC,EAAej0D,aAClC,OAAO+lB,EAAEa,SAASQ,UAEtB,IAAIsmL,EAAgBntK,EAAK4hJ,wBAAwB99J,GAwBjD,OAvBKopL,GAAkBD,GAAgBE,GAAiB,EACpDntK,EAAKotK,YAAYtpL,EAAK0B,EAAGynL,GAEzBv5I,EAAe25I,kBAAkBvpL,GAAK2C,MAAM,SAAS/L,GAC7CA,EAAY,EACZ8K,EAAEe,SAAS,GAGX7L,IAAcg5C,EAAeh5C,YAC7Bg5C,EAAe8D,SAAS/wC,MAAM,WACtBuZ,EAAKusK,aAAazoL,IAAQ4vC,EAAe0X,iBAAiBtnD,IAAQ,EAClE0B,EAAEe,QAAQyZ,EAAK4hJ,wBAAwB99J,IAEvCkc,EAAKotK,YAAYtpL,EAAK0B,EAAGynL,MAE7BzmL,KAAKhB,EAAEa,QAEXqtC,EAAeh5C,UAAUA,GAAW+L,MAAM,WACtCuZ,EAAKotK,YAAYtpL,EAAK0B,EAAGynL,MACzBzmL,KAAKhB,EAAEa,WAEfG,KAAKhB,EAAEa,QAERb,EAAEqB,WAEbumL,YAAa,SAAStpL,EAAKrG,EAAUwvL,GACjC,IAAI7lI,EAAkBhvE,KAAKqqC,cAAc,QAAQ2oC,iBAAiBtnD,GAC9DwpL,EAA4BhmK,EAAAA,sBAAoClvC,MAChE80M,EAAiB90M,KAAK8zM,6BACtBgB,GAAkBI,GAA6BlmI,EAAkB,EACjEhvE,KAAKm1M,sBAAsBzpL,EAAKrG,EAAUwvL,GAE1C70M,KAAKo1M,sBAAsB1pL,EAAKrG,EAAUwvL,IAGlDO,sBAAuB,SAAS1pL,EAAKrG,EAAUwvL,GAC3C,GAAIA,EACA70M,KAAKq1M,yBAAyB3pL,EAAKrG,OAChC,CACH,IAAIjd,EAAkBpI,KAAKwpL,wBAAwB99J,GACnD1rB,KAAK+lC,QAAQ,YAAYuvK,mBAAmB5pL,EAAKrG,GAAUgJ,MAAM,WAC7DhJ,EAAS8I,QAAQ/lB,QAI7B+sM,sBAAuB,SAASzpL,EAAKrG,EAAUwvL,GAC3C,IAAIjtK,EAAO5nC,KACPs7D,EAAiBt7D,KAAKqqC,cAAc,QACpC2+F,EAAuB1tE,EAAestE,sBACtCr1F,EAAWrE,EAAAA,cAA4BxjB,EAAK4vC,EAAel+C,OAAM,IACjEo5D,EAAa5uC,EAAK7B,QAAQ,YAAY4xC,gBAC1C,GAAIqxD,GAAwBxyD,GAAcjjC,GAAY,EAAG,CACrD,IAAInrC,EAAkBmrC,EAAW+nB,EAAeqV,mBAAkB,GAC9D3tD,EAASgmH,EAAqBlG,cAAc16H,GAChDw/B,EAAK9B,UAAU4D,GAAG,gBAAiB,SAAS6rK,IACxC3tK,EAAK9B,UAAU6D,IAAI,eAAgB4rK,GAC/BV,EACAjtK,EAAKytK,yBAAyB3pL,EAAKrG,GAEnCA,EAAS8I,QAAQ/lB,MAGzBpI,KAAK+lC,QAAQ,YAAYyvK,kBAAkBxyL,QAE3CqC,EAAS8I,SAAS,IAG1BknL,yBAA0B,SAAS3pL,EAAKrG,GACpC,IAGQ+H,EAHJkuC,EAAiBt7D,KAAKqqC,cAAc,QACpCjiC,EAAkBpI,KAAKwpL,wBAAwB99J,GAC/C1rB,KAAKi0M,wBAAwB7rM,IAEzBpI,KAAKuiC,OAAO,qBACZ+4B,EAAe2P,YAAY,CACvBxwB,WAAY,mBACZpyC,cAAeqjB,IAGnB0B,EAAIptB,KAAK+lC,QAAQ,YAAYuvK,mBAAmB5pL,IAEpDkQ,EAAAA,EAAAA,IAAKxO,GAAGiB,MAAK,KACTruB,KAAKqqC,cAAc,sBAAsB85I,mBAAmB/7K,GAC5Did,GAAYA,EAAS8I,QAAQ/lB,OAGjCid,GAAYA,EAAS8I,SAAS,IAGtCq7J,wBAAyB,SAAS99J,GAC9B,IAAI4vC,EAAiBt7D,KAAKqqC,cAAc,QACpC+vE,EAAiB9+C,EAAe0X,iBAAiBtnD,GAAK,GAC1D,OAAO0uF,GAAkB,EAAIA,EAAiB9+C,EAAeqV,mBAAkB,IAAS,GAE5F8kI,sBAAuB,WACnB,IAAIptM,EAAgBrI,KAAKuiC,OAAO,iBAC5BmzK,EAAyB11M,KAAKuiC,OAAO,mBACrCsiB,EAAqB7kD,KAAKqqC,cAAc,sBACxCixB,EAAiBt7D,KAAKqqC,cAAc,QACxC,IAAI5Z,EAAAA,EAAAA,IAAUpoB,GAAgB,CAC1B,IAAI2mE,EAAkB1T,EAAe0X,iBAAiB3qE,GAClD2mE,GAAmB,GACfnqB,EAAmBk1H,wBACnB27B,EAAyB1mI,EAAkB1T,EAAeqV,qBAE9D9rB,EAAmBs/H,mBAAmBuxB,GACtC11M,KAAKq1M,yBAAyBhtM,IAE9BrI,KAAK20M,eAAetsM,GAAe,GAAMgmB,MAAKjmB,IACtCstM,GAA0B,GAAKttM,EAAkB,EACjDpI,KAAK0zM,mBACEgC,EAAyB,GAAKttM,GAAmB,GACxDy8C,EAAmBs/H,mBAAmB/7K,WAI3CstM,GAA0B,GACjC11M,KAAKqqC,cAAc,SAASqpK,iBAAiBgC,IAGrDvB,aAAc,SAASzoL,GACnB,IAAIrjB,EAAgBrI,KAAKuiC,OAAO,iBAChC,IAAI9R,EAAAA,EAAAA,IAAUpoB,GACV,OAAO06B,EAAAA,EAAAA,IAAarX,EAAK1rB,KAAKuiC,OAAO,mBAG7CozK,iBAAkB,SAAS9+L,GACvB,IAGIwoC,EAHAzX,EAAO5nC,KACPoI,EAAkBw/B,EAAKlG,gBAAgBsxC,iBAAiBn8D,EAAOxO,eAC/Dw9B,EAAW+B,EAAK7B,QAAQ,aAE5B3U,EAAAA,EAAAA,IAAKyU,EAAS8X,oBAAqB,SAASvzB,EAAO+W,GAC/C,IAAIy0K,EAAc,IAAMxrL,EACxBi1B,GAAgBxd,EAAAA,EAAAA,GAAEV,GAClByG,EAAKiuK,yBAAyBx2J,EAAej3C,GAC7Cw/B,EAAKkuK,mBAAmB,CACpBC,YAAanuK,EAAKlG,gBAAgBwvC,iBAAiB9oE,GACnDi3C,cAAeA,EACfj3C,gBAAiBA,EACjBwtM,YAAaA,QAIzBC,yBAA0B,SAASx2J,EAAej3C,GAC9C,IAAI4tM,EAAyB32J,EAAc9d,KAAKqgB,IAAsBh+B,QAAO,CAACoQ,EAAGiiL,KAC7E,IAAIC,GAAmBr0K,EAAAA,EAAAA,GAAEo0K,GAAYlvK,QAAQ,IAAIjf,OAAO9nB,KAAKqhC,gBAAgBkyK,MAC7E,OAAOl0J,EAAc1Y,GAAGuvK,MAI5B,GAFAF,EAAuBh0K,YAAYsxK,IAAmBtxK,YAAYyjB,IAA2BzO,WAAW,YACxGg/J,EAAuBnlK,SAAS,MAAMmG,WAAW,YAC7C,IAAM5uC,EAAiB,CACvB,IAAI+tM,GAAYt0K,EAAAA,EAAAA,GAAE7hC,KAAK+lC,QAAQ,YAAYya,cAAc,IACzD21J,EAAUn0K,YAAYyjB,IAA2BzO,WAAW,cAGpE8+J,mBAAoB,SAASx0L,GACzB,IAAIg1B,EACAy/J,EAAcz0L,EAAQy0L,YAC1B,GAAIA,IAAgB,SAAWA,EAAYjyK,SAAW,UAAYiyK,EAAYjyK,SAAU,CACpF,IAAI17B,EAAkBkZ,EAAQlZ,gBAC1Bi3C,EAAgB/9B,EAAQ+9B,cACxBu2J,EAAct0L,EAAQs0L,YACtBxoM,EAAWpN,KAAKuiC,OAAO,aAAe,EACtCsD,EAAW7lC,KAAK+lC,QAAQ,YAC5BuQ,GAAOzU,EAAAA,EAAAA,GAAEgE,EAASma,gBAAgBX,GAAena,GAAG98B,IACpDkuC,EAAKxU,SAASwxK,IAAmBlpK,KAAK,WAAYh9B,GAC9CwoM,GACA/vK,EAASuwK,0BAA0B9/J,GAG3C,OAAOA,KAGJ+/J,GAAc,CACrBnwJ,eAAgB,WACZ,MAAO,CACH/9C,mBAAmB,EACnB/B,0BAA0B,EAC1BiC,cAAe,KACfD,iBAAkB,EAClBF,oBAAqB,IAG7B8lC,YAAa,CACTZ,MAAOomK,IAEXplK,UAAW,CACPJ,YAAa,CACTllC,mBAAoB,CAChBmgC,KAAM,WACF,IAAIsK,EAAWvzC,KAAKuiC,OAAO,mBACvB/C,EAAcx/B,KAAKuiC,OAAO,sBAC9BviC,KAAK6pC,aAAa,uBAAwB,CACtCiU,kBAAmB,CAAC,WAAY,cAEpC99C,KAAK6pC,aAAa,sBAAuB,CACrCiU,kBAAmB,CAAC,WAAY,cAEpC99C,KAAK6pC,aAAa,wBAAyB,CACvCiU,kBAAmB,CAAC,WAAY,cAEpC99C,KAAK6pC,aAAa,uBAAwB,CACtCiU,kBAAmB,CAAC,WAAY,cAEpC99C,KAAKs6B,WACLt6B,KAAK68K,kBACL78K,KAAKo6K,qBAAuB,IACxB3pJ,EAAAA,EAAAA,IAAU8iB,KACVvzC,KAAKo6K,qBAAqB7mI,SAAWvzC,KAAKuiC,OAAO,qBAEjD9R,EAAAA,EAAAA,IAAU+O,KACVx/B,KAAKo6K,qBAAqB56I,YAAcx/B,KAAKuiC,OAAO,wBAG5D4hJ,mBAAoB,SAAS5wI,GACzB,IAAI+nB,EAAiBt7D,KAAKqqC,cAAc,QACxCrqC,KAAKs6B,SAASiZ,GACd,IAAIy7B,EAAkBz7B,EAAW+nB,EAAeqV,oBAC5C2lI,EAAah7I,EAAe4V,iBAAiBlC,GAC5CsnI,GAAeA,EAAW1wK,UAC3B5lC,KAAKuiC,OAAO,kBAAmBgR,IAGvCivI,sBAAuB,SAAShjJ,GAC5Bx/B,KAAKs6B,SAASkF,GACdx/B,KAAKuiC,OAAO,qBAAsB/C,IAEtCo+I,kBAAmB,SAASrjC,EAAWjsE,IAC/BA,GAActuE,KAAKuiC,OAAO,qBAI1BviC,KAAK48K,oBACL58K,KAAK68K,kBACL78K,KAAKwjL,OAAOxjL,KAAKohL,0BAA0B7mC,EAAU13F,cAAchmB,SAAS,IAL5E78B,KAAKs6B,SAASigH,EAAWjsE,IAQjCgzG,2BAA4B,SAAS5wI,EAAO/vB,GACxC,IAAIyjK,EAAepkL,KAAKuiC,OAAO,mBAC3B2mJ,EAAkBlpL,KAAKuiC,OAAO,sBAC9B7nB,EAAW1a,KAAKs6B,SAASoW,EAAO/vB,GAChCjG,GAAYA,EAAS8kB,aAAe,GACpCx/B,KAAKmpL,wBAAwBz4I,EAAOw4I,EAAiB9E,KAIjEh8F,cAAe,CACX2mB,mBAAoB,SAASruE,EAAUmuE,GACnC,IAGIn+D,EAHAmU,EAAqB7kD,KAAKqqC,cAAc,sBACxCliC,EAAoBnI,KAAKuiC,OAAO,qBAChC0yC,EAAoBj1E,KAAKqqC,cAAc,WAE3C,GAAKliC,GAAuB,OAAS08C,QAAsB,IAAWA,GAAsBA,EAAmB63H,mBAAqBznG,EAAkB3G,aAE/I,GAAInmE,EAAmB,CAC1B,IAAIouM,EAAe,QAAU1xJ,EAAmBw6H,gBAAgB3+I,GAC5D61K,IAAiB71K,EAASkP,SAAS0jK,MACnC5iK,EAAQmU,EAAmBo9H,uBAAuBvhJ,GAClDmkB,EAAmBzX,MAAMsD,UAL7B1wC,KAAKs6B,SAASoG,EAAUmuE,KAUpC/nG,QAAS,CACL+yD,4BAA6B,SAAS7lC,EAAGwiL,GACrC,IAAIxtL,EAAShpB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACnCiwC,EAAiBt7D,KAAKqqC,cAAc,QACpChjC,EAAai0D,EAAe33B,YAC5B0/B,EAAQ/H,EAAe+H,QACvB33C,EAAM23C,GAASA,EAAM33C,MACrB1f,EAAmB3E,GAAcA,EAAW2E,oBAAsB,GAClEg4D,EAAoB7jE,OAAOs6B,KAAKzuB,GAAkBi4D,OAAMC,IAAkBl4D,EAAiBk4D,KAC/F,GAAIx4C,IAAQ1rB,KAAKuiC,OAAO,uBAAwB,IAAUviC,KAAKqqC,cAAc,SAASypK,8BAAgC0C,GAAY,CAC9H9qL,EAAM3kB,MAAM2iB,QAAQgC,GAAOA,EAAM,CAACA,GAClC,IAAI+qL,EAAgB/qL,EAAI9H,QAAO8H,IAAQ1rB,KAAK0gD,aAAah1B,EAAK,eAC1D+qL,EAAc7uL,SACdoB,EAASA,GAAU,GACfg7C,EACAh7C,EAAOX,KAAK,CACRyU,SAAUz1B,EAAWk9D,qBACrBvrC,MAAM,IAGVy9K,EAAc56J,SAAQ66J,GAAgB1tL,EAAOX,KAAK,CAC9CyU,SAAU45K,EACV19K,MAAM,OAKtB,OAAOhQ,IAGftZ,KAAM,CACF49D,aAAc,SAASz2D,GACnB,IAAIA,GAAU,qBAAuBA,EAAO4jC,WAG5C,OAAOz6C,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCimD,aAAc,SAAShrC,GAEnB,GADAtmC,KAAKs6B,SAASgM,GACVtmC,KAAKuiC,OAAO,sBAAwBviC,KAAK2jC,YAAa,CACtD,IAAIgzK,EAAkB,WAAarwK,EAAEmU,YAAcnU,EAAEp6B,mBACjD0qM,EAA8BD,GAAmBrwK,EAAEwU,aAAexU,EAAEwU,YAAYzwB,QAAQ,WAAa,EACrG,YAAcic,EAAEmU,YAAcnU,EAAElpB,MAAMwK,QAAUgvL,GAChD52M,KAAK62M,qBACL72M,KAAK82M,wBAAwBxwK,IACtB,WAAaA,EAAEmU,YAAc,YAAcnU,EAAEmU,WACpDz6C,KAAK62M,qBACE,WAAavwK,EAAEmU,YAAcnU,EAAEp6B,oBACtClM,KAAK82M,wBAAwBxwK,KAIzCuwK,mBAAoB,WAChB,IAAIE,EAAyB/2M,KAAKg3M,yBAA2B,EACzDC,EAAqBj3M,KAAK4oI,sBAAwB5oI,KAAK4oI,sBAAsBtmH,YAAc,EAC/FtiB,KAAKg3M,wBAA0BC,EAC/Bj3M,KAAKk3M,qBAAuBD,IAAuBF,GAEvDI,oBAAqB,WACjB,OAAOn3M,KAAKk3M,sBAEhBJ,wBAAyB,SAASxwK,GAC9B,IAAI64B,EAAiB74B,EAAE64B,gBAAkB,GACrCq9C,EAAkBx8G,KAAKqqC,cAAc,UAErC+0B,OAAQA,EACRC,WAAYA,GACZF,EACAta,EAAqB7kD,KAAKqqC,cAAc,sBACxCgqK,EAAqBxvJ,EAAmBk1H,sBACxC1xK,EAAgBrI,KAAKuiC,OAAO,iBAC5BuyK,EAAiBt4F,EAAgBs3F,6BACrC,GAAI10I,IAAWC,IAAc5uC,EAAAA,EAAAA,IAAUpoB,GACnCm0G,EAAgBm4F,eAAetsM,GAAe,GAAMgmB,MAAM,SAASjmB,GAC3DA,EAAkB,GAClBo0G,EAAgBk3F,sBAAiB,EAAQv0I,WAG9C,GAAIA,EAAepzD,SAAWsoM,EACjC,GAAIS,EAAgB,CAChB,IAAIC,EAAgB/0M,KAAKgzE,iBAAiB3qE,GACtC+uM,EAAuBrC,GAAiB,EACxC3sM,EAAkBpI,KAAKuiC,OAAO,mBAC9B80K,EAAsBjvM,GAAmB,IAAMA,IAAoB2sM,IAAkBqC,GACrFC,GACA76F,EAAgBk3F,sBAAiB,EAAQv0I,QAEtCn/D,KAAKgzE,iBAAiB3qE,GAAiB,GAC9CrI,KAAKuiC,OAAO,mBAAoB,QAE7B48B,EAAeE,YACtBm9C,EAAgBi5F,yBAGxBR,kBAAmB,SAASvpL,GACxB,IAAIkc,EAAO5nC,KACPotB,EAAI,IAAIC,EAAAA,GAIZ,OAHAua,EAAK0vK,uBAAuB5rL,GAAK2C,MAAM,SAASkzC,GAC5Cn0C,EAAEe,QAAQozC,GAAe,EAAI9uC,KAAKC,MAAM6uC,EAAc35B,EAAKrlB,aAAe,MAC1E6L,KAAKhB,EAAEa,QACJb,EAAEqB,WAEb6oL,uBAAwB,SAAS5rL,GAC7B,OAAI1rB,KAAK2jC,YAAY9f,QACV7jB,KAAKu3M,sCAAsC7rL,GAE/C1rB,KAAKw3M,mCAAmC9rL,IAEnD8rL,mCAAoC,SAAS9rL,EAAK+rL,EAAaC,GAC3D,IAAI9vK,EAAO5nC,KACPqlB,EAAW,IAAIgI,EAAAA,GACfhmB,EAAaugC,EAAKjE,YACtB,GAAI58B,MAAM2iB,QAAQgC,GACd,OAAOrG,EAAS8I,SAAS,GAAGM,UAEhC,IAAI7K,EAASgkB,EAAK+vK,qBAAqBjsL,GAoBvC,OAnBArkB,EAAW+2D,KAAK,CACZx6C,OAAQgkB,EAAKgwK,0BAA0Bh0L,GACvC27C,KAAM,EACNC,KAAM,IACPnxC,MAAM,SAAS3e,GACVA,EAAKkY,OAAS,GACdhE,EAASgkB,EAAKiwK,8BAA8BnsL,EAAKhc,EAAK,GAAIgoM,GAC1DrwM,EAAW+2D,KAAK,CACZx6C,OAAQgkB,EAAKgwK,0BAA0Bh0L,EAAQ6zL,GAC/Cl4I,KAAM,EACNC,KAAM,EACNlnC,mBAAmB,IACpBjK,MAAM,SAAS2F,EAAGzF,GACjBlJ,EAAS8I,QAAQI,EAAMC,gBAG3BnJ,EAAS8I,SAAS,MAGnB9I,EAASoJ,WAEpBmpL,0BAA2B,SAASh0L,EAAQ6zL,GACxC,IAAI7sI,EAAiB5qE,KAAKu7D,oBAC1B,OAAOrsB,EAAAA,eAA6B,CAACtrB,EAAQgnD,EAAgB6sI,KAEjEK,uBAAwB,SAASh7K,EAAUx8B,EAAOy3M,GAC9C,IAAI/uL,EAMJ,OALI,IAAU1oB,EACV0oB,EAAS,CAAC8T,EAAU,MAAKi7K,EAAS/+K,MAAc,QACzC,IAAS14B,GAASy3M,EAAS/+K,KAAO++K,EAAS/+K,QAClDhQ,EAAS,CAAC8T,EAAU,KAAMx8B,IAEvB0oB,GAEX6uL,8BAA+B,SAASnsL,EAAK8+F,EAASktF,GAClD,IAAI9vK,EAAO5nC,KACPqH,EAAaugC,EAAKjE,YAClB/f,EAASgkB,EAAK+vK,qBAAqBjsL,EAAK,KACxCoU,EAAO8H,EAAKiP,mBAAmBgjB,6BAA6BxyD,EAAW2E,mBAAmBmX,WAAW,GACzG,GAAIu0L,EAAU,CACV,IAAI7zL,EAAQ+jB,EAAKiP,mBAAmBojB,8BAA8B5yD,EAAW2E,mBAAmBmX,WAC5FU,IACAic,EAAOA,EAAOjc,EAAMiE,OAAOgY,GAAQjc,GA+B3C,OA5BIic,GACAA,EAAK/V,QAAQuL,UAAUumB,SAAS,SAASk8J,GACrC,IACIh/K,EADA+D,EAAWi7K,EAASj7K,SAGpB/D,EADA,oBAAsB+D,EACbA,EAEA8K,EAAKiP,mBAAmB6J,aAAa5jB,EAAU,YAE5D,IAAIx8B,EAAQy4B,EAASA,EAAOyxF,GAAWA,EAAQ1tF,GAI/C,GAHAlZ,EAAS,CACL,CAACkZ,EAAU,IAAKx8B,GAAQ,MAAOsjB,GAE/B,OAAStjB,IAAS03M,EAAAA,EAAAA,IAAU13M,GAAQ,CACpC,IAAI23M,EAAgBrwK,EAAKkwK,uBAAuBh7K,EAAUx8B,EAAOy3M,GAC7DE,IACAr0L,EAAS,CAACq0L,EAAe,KAAMr0L,QAEhC,CACH,IAAIykI,EAAkB0vD,EAAS/+K,KAAO,IAAM,IACxCk/K,EAAa,CAACp7K,EAAUurH,EAAiB/nJ,GACxCy3M,EAAS/+K,OACVk/K,EAAa,CAACA,EAAY,KAAM,CAACp7K,EAAU,IAAK,QAEpDlZ,EAAS,CAACs0L,EAAY,KAAMt0L,OAIjCA,GAEX+zL,qBAAsB,SAASjsL,EAAKwX,GAChC,IAAIi1K,EAAgBn4M,KAAK2jC,YAAYjY,MACjC9H,EAAS,GAIb,GAHKsf,IACDA,EAAY,KAEZn8B,MAAM2iB,QAAQyuL,GACd,IAAK,IAAItgL,EAAI,EAAGA,EAAIsgL,EAAcvwL,SAAUiQ,EAAG,CAC3C,IAAIugL,EAAU1sL,EAAIysL,EAActgL,IAC5BugL,IACIx0L,EAAOgE,OAAS,GAChBhE,EAAOyE,KAAK,OAEhBzE,EAAOyE,KAAK,CAAC8vL,EAActgL,GAAIqL,EAAWk1K,UAIlDx0L,EAAS,CAACu0L,EAAej1K,EAAWxX,GAExC,OAAO9H,GAEXswL,kBAAmB,WACf,OAAOl0M,KAAKod,OAAM,GAAMwK,OAAS,IAGzCpgB,QAAS,CACLs4G,eAAgB,SAASvsE,GACrB,IAAIluB,EAAWrlB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACrCiwC,EAAiBt7D,KAAKqqC,cAAc,QACpC04E,EAASznD,EAAewX,iBAAiBv/B,GAC7CluB,EAASgJ,MAAK,KACV,IAAIklB,EAAW+nB,EAAe0X,iBAAiB+vC,GAC3CwjB,EAAcjrE,EAAe4V,kBAC5B,IAAM39B,GAAagzF,EAAY3+G,QAChC5nB,KAAKqqC,cAAc,SAASi6I,yBAMhDp2I,MAAO,CACHrI,SAAU,CACN+P,WAAY,SAASjQ,GACjB,IAAI2Q,EAAOt2C,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAMrC,OALIrrB,KAAKuiC,OAAO,sBAAwBoD,GAChC3lC,KAAKqqC,cAAc,SAAS8pK,aAAaxuK,EAAIja,MAC7C4qB,EAAKxU,SAASwxK,IAGfh9J,GAEXqjC,cAAe,SAASr4D,GAEpB,GADAthB,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACtBrrB,KAAKuiC,OAAO,sBAAwBviC,KAAKuiC,OAAO,cAAe,CAC/D,IAAI8gC,EAAQrjE,KAAK0hC,gBAAgB2hC,QAC7BA,IAAUA,EAAM33C,OAChB1rB,KAAK0hC,gBAAgBqqC,UAAU,QAAS,kBAIpDgL,QAAS,SAASlgE,GACV,qBAAuBA,EAAO4jC,WAC1Bz6C,KAAKuiC,OAAO,sBACZviC,KAAKqqC,cAAc,SAASsrK,iBAAiB9+L,GAGjD7W,KAAKs6B,SAASzjB,IAGtBuzK,2BAA4B,SAASprI,EAAemnI,GAChD,IAAI5yI,EAAWvzC,KAAKqqC,cAAc,sBAAsB+zI,qBACpDz4I,EAAM3lC,KAAK0hC,gBAAgBwvC,iBAAiB39B,IAC5CvzC,KAAKuiC,OAAO,sBAA0B,OAASoD,QAAO,IAAWA,GAAOA,EAAIC,SAG5E5lC,KAAKs6B,SAAS0kB,GAFdh/C,KAAKq4M,8BAA8BlyB,IAK3CkyB,8BAA+B,SAASlyB,GACpC,IAAI99K,EAAgBrI,KAAKuiC,OAAO,iBAC5Bn1B,EAAWpN,KAAKuiC,OAAO,aAAe,EACtC+4B,EAAiBt7D,KAAK0hC,gBACtBuO,EAAoBjwC,KAAK62C,mBACzBtD,EAAW+nB,EAAe0X,iBAAiB3qE,GAC3Cm3B,EAAcx/B,KAAKuiC,OAAO,sBAC1B+T,EAAOt2C,KAAKs4M,6BAQhB,IAPK7nL,EAAAA,EAAAA,IAAUzwB,KAAKu4M,0BAChBv4M,KAAKu4M,uBAAyB,KAC1Bv4M,KAAKo2M,0BAA0Bp2M,KAAKs4M,8BACpCt4M,KAAKssC,gBAAgBhK,OAAOtiC,KAAKu4M,0BAGzCjiK,EAAKlM,KAAK,WAAYh9B,GAClBmmC,GAAY,IAAM4yI,IACd3mJ,EAAc,IACdA,EAAc,GAElB+T,GAAY+nB,EAAeqV,oBAC3BnxC,GAAeyQ,EAAkBiM,uBACjCl8C,KAAKqqC,cAAc,sBAAsB07I,uBAAuBxyI,EAAU/T,GACtEx/B,KAAKqqC,cAAc,SAASypK,8BAA8B,CAC1D,IAAIzsM,EAAai0D,EAAej0D,aAC5B83D,EAAiB93D,GAAcA,EAAW83D,kBAC1CA,GAAmBA,EAAepzD,QAAWuvD,EAAe67I,wBAC5Dn3M,KAAKssC,gBAAgBhK,OAAOtiC,KAAKu4M,wBACjCv4M,KAAKssC,gBAAgB6R,IAAIn+C,KAAKu4M,2BAK9CD,2BAA4B,WACxB,IAAIjwM,EAAgBrI,KAAKuiC,OAAO,iBAC5BgR,EAAWvzC,KAAK0hC,gBAAgBsxC,iBAAiB3qE,GACrD,OAAOw5B,EAAAA,EAAAA,GAAE7hC,KAAKwgD,cAAcjN,GAAY,EAAIA,EAAW,KAE3D+hK,mBAAoB,SAAS5pL,GACzB,IAAI6nB,EAAWvzC,KAAKqqC,cAAc,QAAQ2oC,iBAAiBtnD,GACvD4qB,GAAOzU,EAAAA,EAAAA,GAAE7hC,KAAKs7E,OAAO/nC,IACzB,OAAOvzC,KAAKo2M,0BAA0B9/J,IAE1C8/J,0BAA2B,SAAS9/J,GAChC,IAAIkgC,EAAax2E,KAAK23E,gBACtB,GAAInB,GAAclgC,EAAK1uB,OAAQ,CAC3B,IAAIlN,EAAW87D,EAAWgiI,yBAAyBliK,EAAM,YACzD,OAAOt2C,KAAKw1M,kBAAkB96L,GAElC,OAAQ,IAAI2S,EAAAA,IAAUc,WAE1BqnL,kBAAmB,SAAS9tH,GACxB,IAAIt6D,EAAI,IAAIC,EAAAA,GACRmpD,EAAax2E,KAAK23E,gBACtB,GAAInB,EAAY,CACZ,IAAIiiI,EAAmBjiI,EAAWkR,YAC9BrP,EAAgB,KAChB7B,EAAW7sC,IAAI,SAAU0uC,GACzBjrD,EAAEe,WAEN,GAAIu5D,IAAc+wH,EAMd,OALAjiI,EAAW9sC,GAAG,SAAU2uC,GACxBr4E,KAAK0hC,gBAAgBgwC,sBACrB8E,EAAWl8B,SAAS,CAChBp7B,IAAKwoE,IAEFt6D,EAAEqB,UAGjB,OAAOrB,EAAEe,eChvBzB48B,GAAmBnkD,OAAOmkD,kBAAoB,iBAClDP,GAAAA,eAAwB,SAAS5+B,EAAAA,EAAAA,IAAO,EAAM,GAAIyqL,GAAa,CAC3DjoK,UAAW,CACPJ,YAAa,CACTt+B,KAAM,CACF+xF,gBAAiB,SAASttE,EAAMukL,GAC5B,GAAI14M,KAAKuiC,OAAO,sBAAwBx7B,MAAM2iB,QAAQyK,IAASn0B,KAAKi3E,cAAc9iD,GAAO,CACrF,IAAIrrB,EAAqB9I,KAAKqqC,cAAc,sBACtCquK,GAAe5vM,EAAmBg8C,sBAAwB9kD,KAAK24M,yBAAyBxkL,IAC1Fn0B,KAAKuiC,OAAO,gBAAiBpO,GAGrC,OAAOn0B,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,YAErCstL,yBAA0B,SAASxkL,GAC/B,IAAI8b,EAAoBjwC,KAAKqqC,cAAc,WACvChiC,EAAgBrI,KAAKuiC,OAAO,iBAC5BgR,EAAWvzC,KAAKgzE,iBAAiB3qE,GACjC4tM,EAAa1iK,GAAY,GAAKvzC,KAAKkxE,iBAAiB39B,GACpD4pD,EAASltD,EAAkBgqB,8BAA6B,GAC5D,GAAIg8I,EACA,IAAK,IAAIp+K,EAAI,EAAGA,EAAI1D,EAAKvM,SAAUiQ,EAAG,CAClC,IAAIkB,GAASi5B,EAAAA,EAAAA,IAAcmrC,EAAOtlE,IAAMslE,EAAOtlE,GAAGiF,UAClD,GAAI/D,EAAOk9K,EAAWvmM,QAAUykB,EAAK0D,GACjC,OAAO,EAInB,OAAO,GAEX+gL,cAAe,SAAS/0L,GACpB,IAAIg1L,EAAY,CAACh1L,EAAM6H,KACnBtO,EAAQyG,EAAMzG,MAClB,MAAOA,GAASA,EAAM,GAAI,CACtB,IAAI6J,EAAO7J,EAAM,QACb,IAAW6J,EAAKyE,KAChBmtL,EAAUxwL,KAAKpB,EAAKyE,KAExBtO,EAAQ6J,EAAK7J,MAEjB,OAAOy7L,GAEXC,mBAAoB,SAASlxK,EAAMixK,EAAWjzD,GAC1C,IAAIx4H,EAAI,IAAIC,EAAAA,GASZ,OARAu4H,IACAh+G,EAAK2/D,UAAUsxG,EAAU9uL,MAAM,EAAG67H,IAAQv3H,MAAM,WACxCu3H,IAAUizD,EAAUjxL,OACpBwF,EAAEe,UAEFyZ,EAAKkxK,mBAAmBlxK,EAAMixK,EAAWjzD,GAAOv3H,KAAKjB,EAAEe,SAASC,KAAKhB,EAAEa,WAE3EG,KAAKhB,EAAEa,QACJb,EAAEqB,WAEb8oL,sCAAuC,SAAS7rL,GAC5C,IAAIkc,EAAO5nC,KACPqH,EAAaugC,EAAKjE,YAClB/f,EAASgkB,EAAK+vK,qBAAqBjsL,GACnCrG,EAAW,IAAIgI,EAAAA,GACf0rL,EAAahyM,MAAM2iB,QAAQgC,GAC3B7H,EAAQxc,EAAWwc,QACvB,OAAIk1L,EACO1zL,EAAS8I,SAAS,GAAGM,UAE3BpnB,EAAW8+F,UAAUxB,sBAI1Bt9F,EAAW+2D,KAAK,CACZx6C,OAAQgkB,EAAKgwK,0BAA0Bh0L,GACvCC,MAAOA,IACRwK,MAAM,SAAS3e,GACd,IAAKA,GAAQ,IAAMA,EAAKkY,UAAW6I,EAAAA,EAAAA,IAAU/gB,EAAK,GAAGgc,OAAS,IAAMhc,EAAK,GAAGgc,IACxE,OAAOrG,EAAS8I,SAAS,GAAGM,UAEhC,IAAIoqL,EAAYjxK,EAAKgxK,cAAclpM,EAAK,IACxCk4B,EAAKkxK,mBAAmBlxK,EAAMixK,EAAW,GAAGxqL,MAAM,WAC9CuZ,EAAKoxK,iCAAiC3zL,EAAUqG,EAAKmtL,EAAWh1L,MAChEuK,KAAK/I,EAAS4I,WAClBG,KAAK/I,EAAS4I,QACX5I,EAASoJ,YAfZmZ,EAAK4vK,mCAAmC9rL,EAAK,MAAM,GAAM2C,KAAKhJ,EAAS8I,SAASC,KAAK/I,EAAS4I,QACvF5I,IAgBf2zL,iCAAkC,SAAS3zL,EAAUqG,EAAKmtL,EAAWh1L,GACjE,IAOIk+E,EAPA01G,EAAc/3G,GAAkBm5G,EAAW,CAC3Ch1L,MAAOA,IAEPxc,EAAarH,KAAK2jC,YAClBsoC,EAAgBjsE,KAAKuiC,OAAO,kBAC5B8xK,EAAqB,YAAcpoI,GAAiB,aAAeA,EACnE1pD,EAAWlb,EAAWkb,WAE1Blb,EAAW8+F,UAAUxB,qBAAqB,CACtCplC,KAAM,EACNC,KAAMzU,KACN,SAAS+zC,EAAWkE,IAChBjgE,EAAAA,EAAAA,IAAa+7D,EAAU3qE,KAAM0kL,KAC7B92G,EAAciB,MAGtBhjG,KAAKw3M,mCAAmC9rL,EAAK+rL,GAAappL,MAAM,SAAS4qL,GACrE,IAAIryL,EACAsyL,EACJ,GAAID,EAAa,EACb5zL,EAAS8I,SAAS,OADtB,CAIA,IAAIgrL,EAAoBp3G,EAAcx/E,GAAYA,EAClDqE,EAAQuyL,EAAoBF,EAAaJ,EAAUjxL,OAE/CsxL,EADA7E,EACyB,EAEA5hL,KAAKC,MAAM9L,GAASrE,EAAWs2L,EAAUjxL,SAAWixL,EAAUjxL,OAE3FhB,EAAQm7E,EAAck3G,EAAaC,EACnC7zL,EAAS8I,QAAQvH,OACjBwH,KAAK/I,EAAS4I,e,eC5HlCmrL,GAAuB,kBACvB3zJ,GAA4B,yBAC5B4zJ,GAAoB,YACpBjhB,GAAY,WACZkhB,GAAgC,6BAChCC,GAAsB,CACtBtwK,KAAM,WACFjpC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1BrrB,KAAKw5M,uBAETC,iBAAkB,WACd,IAAIrtM,EAAcpM,KAAKuiC,OAAO,eAC9B,SAAUn2B,KAAgBA,EAAYqE,iBAAmBrE,EAAYkX,qBAAuBlX,EAAYyX,SAE5G21L,oBAAqB,WACjB,IAAIptM,EAAcpM,KAAKuiC,OAAO,eAC1B9xB,EAAkBzQ,KAAKy5M,mBACvBxpK,EAAoBjwC,KAAK62C,mBACzB6iK,EAAwBjpM,GAAmBrE,EAAYoY,cAC3DyrB,GAAqBA,EAAkBukB,iBAAiB,CACpD1lD,KAAM,OACNu4B,QAAS,OACT7zB,cAAe,EACfvD,UAAW,SACXb,SAAUgqM,GACV5rM,MAAO,OACP6D,aAAcrR,KAAK25M,qBACnBpsM,QAASmsM,IAEbzpK,EAAkByQ,aAAa,YAAa,UAAWg5J,IAE3DhhI,eAAgB,WACZ,IAAItsE,EAAcpM,KAAKuiC,OAAO,eAC1B9xB,EAAkBzQ,KAAKy5M,mBACvBvyJ,EAAWlnD,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACrCkpK,EAAwBv0L,KAAK6mI,uBAC7B+yE,EAAe,YACfC,EAAoB,iBACpBC,EAAsBvlB,EAAwBslB,EAAoBD,EAClEG,EAAsBxlB,EAAwBqlB,EAAeC,EAC7DG,EAA2BhhI,IAC3B,IAAIihI,EACJ,QAAUA,EAAwBj6M,KAAK65M,UAAuB,IAAWI,GAAiCA,EAAsBv5K,WAAWyE,IAAI,gBAAiB6zC,EAAS,OAAS,KAElLp1D,EAAS5jB,KAAKuiC,OAAO,mBAAqB,qEAAuE,wEAgDrH,OA/CK9xB,GAAmBzQ,KAAK85M,KAAyB5yJ,EAASt/B,SAC3D5nB,KAAK85M,GAAuB95M,KAAKwiC,iBAAiB0kB,EAAUgzJ,GAAAA,GAAUtuL,EAAAA,EAAAA,GAAO,CACzEka,UAAW9lC,KAAK8lC,UAChBvsB,gBAAiB,KACjBqK,OAAQA,EACRF,aAAc1jB,KAAKm6M,2BACnBr2L,OAAQ1X,EAAYoY,eAAiB,IAAIsD,OAAOsxL,IAChDz1L,iBAAkB,YACnBvX,EAAa,CACZ+X,YAAamiB,IACT,IAAI0mF,EAAqBotF,EACzB,QAAUptF,EAAsBhtH,KAAKqqC,cAAc,6BAA0B,IAAW2iF,GAA+BA,EAAoB8uD,oBAC3I,IAAIn2I,EAAMW,EAAER,UAAUorC,iBAAiB5qC,EAAEizB,WACzCjzB,EAAE8jB,SAAWzkB,GAAOA,EAAIj2B,KACxB,IAAI6mC,EAAY5Q,GAAO,SAAWA,EAAI7B,QACtCwC,EAAE1wB,QAAUnF,IAAoB8lC,EAChC,QAAU6jK,EAAwBhuM,EAAY+X,mBAAgB,IAAWi2L,GAAiCA,EAAsBluL,KAAK9f,EAAak6B,IAEtJ+zK,YAAa,KACTL,GAAyB,IAE7BM,YAAa,KACTN,GAAyB,IAE7B/1L,UAAWqiB,IACP,IAAIi0K,EACJP,GAAyB,GACzB,QAAUO,EAAwBnuM,EAAY6X,iBAAc,IAAWs2L,GAAiCA,EAAsBruL,KAAK9f,EAAak6B,IAEpJviB,MAAOuiB,IACH,IAAIk0K,EACJR,GAAyB,GACzB,QAAUQ,EAAqBpuM,EAAY2X,aAAU,IAAWy2L,GAA8BA,EAAmBtuL,KAAK9f,EAAak6B,IAEvI3iB,iBAAkBvX,EAAYuX,iBAC9BhZ,gBAAiB27B,IACb,IAAIm0K,EAAmBz6M,KAAK65M,GACxBY,IACI,cAAgBn0K,EAAEh3B,MAAQ,YAAcg3B,EAAEh3B,MAC1CtP,KAAK+5M,GAAqBx3K,OAAO+D,EAAEh3B,KAAMg3B,EAAEhmC,YAK3D4mD,EAASla,YAAY,0BAA2BunJ,GAChDrtI,EAASla,YAAYssK,GAA+B7oM,IAAoBrE,EAAYoY,gBAEjF0iC,GAEXhb,YAAY5F,GACRtmC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WACtBib,GAAK,WAAaA,EAAEmU,YAAcnU,EAAEp6B,oBAAsBgjC,EAAAA,sBAAoClvC,QAC9F07E,EAAAA,EAAAA,KAAY,KACR17E,KAAK06M,sBAIjBA,kBACI,IAAI13L,EAAShjB,KAAK0hC,gBAAgBivC,oBAClC,CAAC3wE,KAAK26M,UAAW36M,KAAK46M,gBAAgB/+J,SAAQg/J,IAC1C,OAASA,QAAY,IAAWA,GAAoBA,EAASt4K,OAAO,SAAUvf,GAC9E,OAAS63L,QAAY,IAAWA,GAAoBA,EAAS59J,aAGrE9Q,YAAa,WACTnsC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,WAC1BrrB,KAAK06M,mBAETI,yBAA0B,SAASx5L,GAC/B,IAAIy5L,EAAc/6M,KAAKuiC,SACnBz7B,EAAU9G,KAAKkxC,aACfuK,GAAc5Z,EAAAA,EAAAA,GAAE7hC,KAAKwgD,cAAcl/B,EAAQiyB,WAC/C,MAAO,CACHlsC,WAAY,CAAC,CACTqoD,GAAI,EACJqpC,SAAU,IAEdnsF,aAAa,EACbC,mBAAmB,EACnBN,UAAW,CACPwY,WAAW,EACXD,cAAe,SAEnBhZ,MAAO,CACHyB,SAAS,GAEby7D,eAAgB,KAChBviE,aAAcs0M,EAAYt0M,aAC1BF,gBAAiBw0M,EAAYx0M,gBAC7BuG,gBAAiBiuM,EAAYjuM,gBAC7BhG,QAASA,EAAQkrB,KAAI7jB,IAAU,CAC3BX,MAAOW,EAAOX,OAASW,EAAOwnC,aAC9B3jC,MAAO7D,EAAO6D,MACdC,cAAe9D,EAAO8D,kBAE1B7G,cAAek7B,IACX,IAAIT,EAAWS,EAAER,UAAUC,QAAQ,aACnClE,EAAAA,EAAAA,GAAEyE,EAAEmN,YAAYsI,YAAYN,EAAYvW,GAAGW,EAASghG,uBAAyB,EAAI,GAAGr+E,YAIhG2xJ,yBAA0B,WACtB,OAAO74L,IACH,IAAIi0D,EAAev1E,KAAK8lC,UAAUpF,WAC9Bs6K,GAAqBn5K,EAAAA,EAAAA,GAAE,UAC3BmW,EAAAA,EAAAA,IAASgjK,GAAoBx5J,EAAAA,EAAAA,IAAS+zB,IACtC,IAAIn4D,EAAQpd,KAAK0hC,gBAAgBtkB,QAC7BuoB,EAAMvoB,GAASA,EAAMkE,EAAQi4C,WAC7BwhJ,EAAc/6M,KAAK86M,yBAAyBn1K,GAGhD,OAFA3lC,KAAKwiC,iBAAiBw4K,EAAoBh7M,KAAK8lC,UAAUkF,KAAM+vK,GAC/DC,EAAmBz5K,KAAK,0BAA0BsP,SAAS,SAAS/oB,OAAO9nB,KAAKqhC,gBAAgB+2J,IAAY,MAAM5pL,OAC3GwsM,IAGfrB,mBAAoB,WAChB,MAAO,CAACrgM,EAAWgI,KACf,GAAI,SAAWA,EAAQwiB,QAEnB,OADAjC,EAAAA,EAAAA,GAAEvoB,GAAWwoB,SAAS2jB,KACf5jB,EAAAA,EAAAA,GAAE,UAAUC,SAAS9hC,KAAKqhC,gBAAgBg4K,KAEjDnqK,EAAAA,cAA2BrN,EAAAA,EAAAA,GAAEvoB,MAIzCswB,cAAe,SAASnV,GAChB,gBAAkBA,EAAKnlB,OACvBtP,KAAKw5M,sBACLx5M,KAAK8rC,aAAY,GAAM,GACvBrX,EAAKqV,SAAU,GAEnB9pC,KAAKs6B,SAAS7G,MAAMzzB,KAAMqrB,aAGvB4vL,GAAoB,CAC3B/0J,eAAgB,WACZ,MAAO,CACH95C,YAAa,CACToY,eAAe,EACfb,iBAAkB,WAClBlT,iBAAiB,EACjB6S,qBAAqB,KAIjC8qB,UAAW,CACPF,MAAO,CACHrI,SAAU0zK,MCxMtB/uJ,GAAAA,eAAwB,cAAeywJ,ICHvC,UCAA","sources":["webpack://siforeca/./node_modules/devextreme-vue/data-grid.js","webpack://siforeca/./node_modules/devextreme/esm/data/data_source.js","webpack://siforeca/./node_modules/devextreme/esm/data/odata/utils.js","webpack://siforeca/./node_modules/devextreme/esm/data/odata/query_adapter.js","webpack://siforeca/./node_modules/devextreme/esm/data/odata/request_dispatcher.js","webpack://siforeca/./node_modules/devextreme/esm/data/odata/store.js","webpack://siforeca/./node_modules/devextreme/esm/ui/shared/filtering.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.utils.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.modules.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.column_state_mixin.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.columns_view.js","webpack://siforeca/./node_modules/devextreme/esm/ui/shared/accessibility.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.accessibility.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.column_headers.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.column_headers.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.columns_controller.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.columns_controller.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.data_source_adapter.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.data_source_adapter.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.data_controller.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.data_controller.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.sorting_mixin.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.sorting.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.sorting.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.rows.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.rows.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.context_menu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.context_menu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.error_handling.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.error_handling.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.grid_view.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grid_view.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.header_panel.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.header_panel.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.base.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.state_storing_core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.state_storing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.state_storing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.selection.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.selection.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.column_chooser.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.column_chooser.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grouping.core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.utils.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grouping.expanded.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grouping.collapsed.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grouping.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.master_detail.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.master_detail.js","webpack://siforeca/./node_modules/devextreme/esm/ui/shared/ui.editor_factory_mixin.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editor_factory.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editor_factory.js","webpack://siforeca/./node_modules/devextreme/esm/ui/dialog.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing_constants.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing_row_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editing_row_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing_form_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editing_form_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing_cell_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editing_cell_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.validating.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.validating.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid.core.virtual_data_loader.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_scrolling_core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_scrolling.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.virtual_scrolling.js","webpack://siforeca/./node_modules/devextreme/esm/ui/overlay/utils.js","webpack://siforeca/./node_modules/devextreme/esm/ui/menu/ui.submenu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/menu/ui.menu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/menu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_row.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.filter_row.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.header_filter_core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.header_filter.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.header_filter.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder/between.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder/ui.filter_operations_dictionary.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder/utils.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_custom_operations.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_sync.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.filter_sync.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder/filter_builder.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_builder.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.filter_builder.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_panel.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.filter_panel.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.search.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.search.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/component_wrapper/grid_pager.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/utils/type_conversion.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/utils/get_element_width.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/resizable_container.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/base_pager_props.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/pager_props.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/info.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/keyboard_action_context.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/light_button.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/consts.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pages/page.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pages/large.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/editors/number_box.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/utils/calculate_values_fitted_width.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pages/small.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pages/page_index_selector.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/editors/drop_down_editors/select_box.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/page_size/small.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/page_size/large.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/page_size/selector.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/content.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pager.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pager.j.js","webpack://siforeca/./node_modules/devextreme/esm/ui/pager.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.pager.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.pager.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.columns_resizing_reordering.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.columns_resizing_reordering.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.keyboard_navigation.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/aggregate_calculator.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.keyboard_navigation.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.summary.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.column_fixing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.column_fixing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.adaptivity.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_columns_core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.adaptivity.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_columns.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.virtual_columns.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.export_mixin.js","webpack://siforeca/./node_modules/devextreme/esm/ui/button_group.js","webpack://siforeca/./node_modules/devextreme/esm/ui/drop_down_button.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.export.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.focus.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.focus.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.row_dragging.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.row_dragging.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid.js"],"sourcesContent":["/*!\n * devextreme-vue\n * Version: 21.2.6\n * Build date: Tue Mar 01 2022\n *\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-vue\n */\n\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DxLookup = exports.DxLoadPanel = exports.DxLabel = exports.DxKeyboardNavigation = exports.DxItem = exports.DxHide = exports.DxHeaderFilter = exports.DxGroupPanel = exports.DxGroupOperationDescriptions = exports.DxGroupItem = exports.DxGroupingTexts = exports.DxGrouping = exports.DxFrom = exports.DxFormItem = exports.DxFormat = exports.DxForm = exports.DxFilterRow = exports.DxFilterPanelTexts = exports.DxFilterPanel = exports.DxFilterOperationDescriptions = exports.DxFilterBuilderPopup = exports.DxFilterBuilder = exports.DxFieldLookup = exports.DxField = exports.DxExportTexts = exports.DxExport = exports.DxEmailRule = exports.DxEditingTexts = exports.DxEditing = exports.DxDataGridHeaderFilterTexts = exports.DxDataGridHeaderFilter = exports.DxCustomRule = exports.DxCustomOperation = exports.DxCursorOffset = exports.DxCompareRule = exports.DxColumnLookup = exports.DxColumnHeaderFilter = exports.DxColumnFixingTexts = exports.DxColumnFixing = exports.DxColumnChooser = exports.DxColumn = exports.DxCollision = exports.DxColCountByScreen = exports.DxChange = exports.DxButton = exports.DxBoundaryOffset = exports.DxAt = exports.DxAsyncRule = exports.DxAnimation = exports.DxDataGrid = void 0;\nexports.DxValueFormat = exports.DxValidationRule = exports.DxTotalItem = exports.DxToolbarItem = exports.DxToolbar = exports.DxTo = exports.DxTexts = exports.DxSummaryTexts = exports.DxSummary = exports.DxStringLengthRule = exports.DxStateStoring = exports.DxSorting = exports.DxSortByGroupSummaryInfo = exports.DxShow = exports.DxSelection = exports.DxSearchPanel = exports.DxScrolling = exports.DxRowDragging = exports.DxRequiredRule = exports.DxRemoteOperations = exports.DxRangeRule = exports.DxPosition = exports.DxPopup = exports.DxPatternRule = exports.DxPaging = exports.DxPager = exports.DxOperationDescriptions = exports.DxOffset = exports.DxNumericRule = exports.DxMy = exports.DxMasterDetail = void 0;\nvar data_grid_1 = __importDefault(require(\"devextreme/ui/data_grid\"));\nvar index_1 = require(\"./core/index\");\nvar index_2 = require(\"./core/index\");\nvar DxDataGrid = index_1.createComponent({\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        allowColumnReordering: Boolean,\n        allowColumnResizing: Boolean,\n        autoNavigateToFocusedRow: Boolean,\n        cacheEnabled: Boolean,\n        cellHintEnabled: Boolean,\n        columnAutoWidth: Boolean,\n        columnChooser: Object,\n        columnFixing: Object,\n        columnHidingEnabled: Boolean,\n        columnMinWidth: Number,\n        columnResizingMode: String,\n        columns: Array,\n        columnWidth: [Number, String],\n        customizeColumns: Function,\n        customizeExportData: Function,\n        dataRowTemplate: {},\n        dataSource: [Array, Object, String],\n        dateSerializationFormat: String,\n        disabled: Boolean,\n        editing: Object,\n        elementAttr: Object,\n        errorRowEnabled: Boolean,\n        export: Object,\n        filterBuilder: Object,\n        filterBuilderPopup: Object,\n        filterPanel: Object,\n        filterRow: Object,\n        filterSyncEnabled: [Boolean, String],\n        filterValue: [Array, Function, String],\n        focusedColumnIndex: Number,\n        focusedRowEnabled: Boolean,\n        focusedRowIndex: Number,\n        focusedRowKey: {},\n        focusStateEnabled: Boolean,\n        grouping: Object,\n        groupPanel: Object,\n        headerFilter: Object,\n        height: [Function, Number, String],\n        highlightChanges: Boolean,\n        hint: String,\n        hoverStateEnabled: Boolean,\n        keyboardNavigation: Object,\n        keyExpr: [Array, String],\n        loadPanel: Object,\n        masterDetail: Object,\n        noDataText: String,\n        onAdaptiveDetailRowPreparing: Function,\n        onCellClick: Function,\n        onCellDblClick: Function,\n        onCellHoverChanged: Function,\n        onCellPrepared: Function,\n        onContentReady: Function,\n        onContextMenuPreparing: Function,\n        onDataErrorOccurred: Function,\n        onDisposing: Function,\n        onEditCanceled: Function,\n        onEditCanceling: Function,\n        onEditingStart: Function,\n        onEditorPrepared: Function,\n        onEditorPreparing: Function,\n        onExported: Function,\n        onExporting: Function,\n        onFileSaving: Function,\n        onFocusedCellChanged: Function,\n        onFocusedCellChanging: Function,\n        onFocusedRowChanged: Function,\n        onFocusedRowChanging: Function,\n        onInitialized: Function,\n        onInitNewRow: Function,\n        onKeyDown: Function,\n        onOptionChanged: Function,\n        onRowClick: Function,\n        onRowCollapsed: Function,\n        onRowCollapsing: Function,\n        onRowDblClick: Function,\n        onRowExpanded: Function,\n        onRowExpanding: Function,\n        onRowInserted: Function,\n        onRowInserting: Function,\n        onRowPrepared: Function,\n        onRowRemoved: Function,\n        onRowRemoving: Function,\n        onRowUpdated: Function,\n        onRowUpdating: Function,\n        onRowValidating: Function,\n        onSaved: Function,\n        onSaving: Function,\n        onSelectionChanged: Function,\n        onToolbarPreparing: Function,\n        pager: Object,\n        paging: Object,\n        remoteOperations: [Boolean, Object, String],\n        renderAsync: Boolean,\n        repaintChangesOnly: Boolean,\n        rowAlternationEnabled: Boolean,\n        rowDragging: Object,\n        rowTemplate: {},\n        rtlEnabled: Boolean,\n        scrolling: Object,\n        searchPanel: Object,\n        selectedRowKeys: Array,\n        selection: Object,\n        selectionFilter: [Array, Function, String],\n        showBorders: Boolean,\n        showColumnHeaders: Boolean,\n        showColumnLines: Boolean,\n        showRowLines: Boolean,\n        sortByGroupSummaryInfo: Array,\n        sorting: Object,\n        stateStoring: Object,\n        summary: Object,\n        tabIndex: Number,\n        toolbar: Object,\n        twoWayBindingEnabled: Boolean,\n        visible: Boolean,\n        width: [Function, Number, String],\n        wordWrapEnabled: Boolean\n    },\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:allowColumnReordering\": null,\n        \"update:allowColumnResizing\": null,\n        \"update:autoNavigateToFocusedRow\": null,\n        \"update:cacheEnabled\": null,\n        \"update:cellHintEnabled\": null,\n        \"update:columnAutoWidth\": null,\n        \"update:columnChooser\": null,\n        \"update:columnFixing\": null,\n        \"update:columnHidingEnabled\": null,\n        \"update:columnMinWidth\": null,\n        \"update:columnResizingMode\": null,\n        \"update:columns\": null,\n        \"update:columnWidth\": null,\n        \"update:customizeColumns\": null,\n        \"update:customizeExportData\": null,\n        \"update:dataRowTemplate\": null,\n        \"update:dataSource\": null,\n        \"update:dateSerializationFormat\": null,\n        \"update:disabled\": null,\n        \"update:editing\": null,\n        \"update:elementAttr\": null,\n        \"update:errorRowEnabled\": null,\n        \"update:export\": null,\n        \"update:filterBuilder\": null,\n        \"update:filterBuilderPopup\": null,\n        \"update:filterPanel\": null,\n        \"update:filterRow\": null,\n        \"update:filterSyncEnabled\": null,\n        \"update:filterValue\": null,\n        \"update:focusedColumnIndex\": null,\n        \"update:focusedRowEnabled\": null,\n        \"update:focusedRowIndex\": null,\n        \"update:focusedRowKey\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:grouping\": null,\n        \"update:groupPanel\": null,\n        \"update:headerFilter\": null,\n        \"update:height\": null,\n        \"update:highlightChanges\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:keyboardNavigation\": null,\n        \"update:keyExpr\": null,\n        \"update:loadPanel\": null,\n        \"update:masterDetail\": null,\n        \"update:noDataText\": null,\n        \"update:onAdaptiveDetailRowPreparing\": null,\n        \"update:onCellClick\": null,\n        \"update:onCellDblClick\": null,\n        \"update:onCellHoverChanged\": null,\n        \"update:onCellPrepared\": null,\n        \"update:onContentReady\": null,\n        \"update:onContextMenuPreparing\": null,\n        \"update:onDataErrorOccurred\": null,\n        \"update:onDisposing\": null,\n        \"update:onEditCanceled\": null,\n        \"update:onEditCanceling\": null,\n        \"update:onEditingStart\": null,\n        \"update:onEditorPrepared\": null,\n        \"update:onEditorPreparing\": null,\n        \"update:onExported\": null,\n        \"update:onExporting\": null,\n        \"update:onFileSaving\": null,\n        \"update:onFocusedCellChanged\": null,\n        \"update:onFocusedCellChanging\": null,\n        \"update:onFocusedRowChanged\": null,\n        \"update:onFocusedRowChanging\": null,\n        \"update:onInitialized\": null,\n        \"update:onInitNewRow\": null,\n        \"update:onKeyDown\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onRowClick\": null,\n        \"update:onRowCollapsed\": null,\n        \"update:onRowCollapsing\": null,\n        \"update:onRowDblClick\": null,\n        \"update:onRowExpanded\": null,\n        \"update:onRowExpanding\": null,\n        \"update:onRowInserted\": null,\n        \"update:onRowInserting\": null,\n        \"update:onRowPrepared\": null,\n        \"update:onRowRemoved\": null,\n        \"update:onRowRemoving\": null,\n        \"update:onRowUpdated\": null,\n        \"update:onRowUpdating\": null,\n        \"update:onRowValidating\": null,\n        \"update:onSaved\": null,\n        \"update:onSaving\": null,\n        \"update:onSelectionChanged\": null,\n        \"update:onToolbarPreparing\": null,\n        \"update:pager\": null,\n        \"update:paging\": null,\n        \"update:remoteOperations\": null,\n        \"update:renderAsync\": null,\n        \"update:repaintChangesOnly\": null,\n        \"update:rowAlternationEnabled\": null,\n        \"update:rowDragging\": null,\n        \"update:rowTemplate\": null,\n        \"update:rtlEnabled\": null,\n        \"update:scrolling\": null,\n        \"update:searchPanel\": null,\n        \"update:selectedRowKeys\": null,\n        \"update:selection\": null,\n        \"update:selectionFilter\": null,\n        \"update:showBorders\": null,\n        \"update:showColumnHeaders\": null,\n        \"update:showColumnLines\": null,\n        \"update:showRowLines\": null,\n        \"update:sortByGroupSummaryInfo\": null,\n        \"update:sorting\": null,\n        \"update:stateStoring\": null,\n        \"update:summary\": null,\n        \"update:tabIndex\": null,\n        \"update:toolbar\": null,\n        \"update:twoWayBindingEnabled\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n        \"update:wordWrapEnabled\": null,\n    },\n    computed: {\n        instance: function () {\n            return this.$_instance;\n        }\n    },\n    beforeCreate: function () {\n        this.$_WidgetClass = data_grid_1.default;\n        this.$_hasAsyncTemplate = true;\n        this.$_expectedChildren = {\n            column: { isCollectionItem: true, optionName: \"columns\" },\n            columnChooser: { isCollectionItem: false, optionName: \"columnChooser\" },\n            columnFixing: { isCollectionItem: false, optionName: \"columnFixing\" },\n            dataGridHeaderFilter: { isCollectionItem: false, optionName: \"headerFilter\" },\n            editing: { isCollectionItem: false, optionName: \"editing\" },\n            export: { isCollectionItem: false, optionName: \"export\" },\n            filterBuilder: { isCollectionItem: false, optionName: \"filterBuilder\" },\n            filterBuilderPopup: { isCollectionItem: false, optionName: \"filterBuilderPopup\" },\n            filterPanel: { isCollectionItem: false, optionName: \"filterPanel\" },\n            filterRow: { isCollectionItem: false, optionName: \"filterRow\" },\n            grouping: { isCollectionItem: false, optionName: \"grouping\" },\n            groupPanel: { isCollectionItem: false, optionName: \"groupPanel\" },\n            headerFilter: { isCollectionItem: false, optionName: \"headerFilter\" },\n            keyboardNavigation: { isCollectionItem: false, optionName: \"keyboardNavigation\" },\n            loadPanel: { isCollectionItem: false, optionName: \"loadPanel\" },\n            masterDetail: { isCollectionItem: false, optionName: \"masterDetail\" },\n            pager: { isCollectionItem: false, optionName: \"pager\" },\n            paging: { isCollectionItem: false, optionName: \"paging\" },\n            remoteOperations: { isCollectionItem: false, optionName: \"remoteOperations\" },\n            rowDragging: { isCollectionItem: false, optionName: \"rowDragging\" },\n            scrolling: { isCollectionItem: false, optionName: \"scrolling\" },\n            searchPanel: { isCollectionItem: false, optionName: \"searchPanel\" },\n            selection: { isCollectionItem: false, optionName: \"selection\" },\n            sortByGroupSummaryInfo: { isCollectionItem: true, optionName: \"sortByGroupSummaryInfo\" },\n            sorting: { isCollectionItem: false, optionName: \"sorting\" },\n            stateStoring: { isCollectionItem: false, optionName: \"stateStoring\" },\n            summary: { isCollectionItem: false, optionName: \"summary\" },\n            toolbar: { isCollectionItem: false, optionName: \"toolbar\" }\n        };\n    }\n});\nexports.DxDataGrid = DxDataGrid;\nvar DxAnimation = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:hide\": null,\n        \"update:show\": null,\n    },\n    props: {\n        hide: [Object, Number, String],\n        show: [Object, Number, String]\n    }\n});\nexports.DxAnimation = DxAnimation;\nDxAnimation.$_optionName = \"animation\";\nDxAnimation.$_expectedChildren = {\n    hide: { isCollectionItem: false, optionName: \"hide\" },\n    show: { isCollectionItem: false, optionName: \"show\" }\n};\nvar DxAsyncRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:reevaluate\": null,\n        \"update:type\": null,\n        \"update:validationCallback\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        reevaluate: Boolean,\n        type: String,\n        validationCallback: Function\n    }\n});\nexports.DxAsyncRule = DxAsyncRule;\nDxAsyncRule.$_optionName = \"validationRules\";\nDxAsyncRule.$_isCollectionItem = true;\nDxAsyncRule.$_predefinedProps = {\n    type: \"async\"\n};\nvar DxAt = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: String,\n        y: String\n    }\n});\nexports.DxAt = DxAt;\nDxAt.$_optionName = \"at\";\nvar DxBoundaryOffset = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: Number,\n        y: Number\n    }\n});\nexports.DxBoundaryOffset = DxBoundaryOffset;\nDxBoundaryOffset.$_optionName = \"boundaryOffset\";\nvar DxButton = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:cssClass\": null,\n        \"update:disabled\": null,\n        \"update:hint\": null,\n        \"update:icon\": null,\n        \"update:name\": null,\n        \"update:onClick\": null,\n        \"update:template\": null,\n        \"update:text\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        cssClass: String,\n        disabled: [Boolean, Function],\n        hint: String,\n        icon: String,\n        name: String,\n        onClick: Function,\n        template: {},\n        text: String,\n        visible: [Boolean, Function]\n    }\n});\nexports.DxButton = DxButton;\nDxButton.$_optionName = \"buttons\";\nDxButton.$_isCollectionItem = true;\nvar DxChange = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:data\": null,\n        \"update:insertAfterKey\": null,\n        \"update:insertBeforeKey\": null,\n        \"update:type\": null,\n    },\n    props: {\n        data: {},\n        insertAfterKey: {},\n        insertBeforeKey: {},\n        type: String\n    }\n});\nexports.DxChange = DxChange;\nDxChange.$_optionName = \"changes\";\nDxChange.$_isCollectionItem = true;\nvar DxColCountByScreen = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:lg\": null,\n        \"update:md\": null,\n        \"update:sm\": null,\n        \"update:xs\": null,\n    },\n    props: {\n        lg: Number,\n        md: Number,\n        sm: Number,\n        xs: Number\n    }\n});\nexports.DxColCountByScreen = DxColCountByScreen;\nDxColCountByScreen.$_optionName = \"colCountByScreen\";\nvar DxCollision = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: String,\n        y: String\n    }\n});\nexports.DxCollision = DxCollision;\nDxCollision.$_optionName = \"collision\";\nvar DxColumn = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignment\": null,\n        \"update:allowEditing\": null,\n        \"update:allowExporting\": null,\n        \"update:allowFiltering\": null,\n        \"update:allowFixing\": null,\n        \"update:allowGrouping\": null,\n        \"update:allowHeaderFiltering\": null,\n        \"update:allowHiding\": null,\n        \"update:allowReordering\": null,\n        \"update:allowResizing\": null,\n        \"update:allowSearch\": null,\n        \"update:allowSorting\": null,\n        \"update:autoExpandGroup\": null,\n        \"update:buttons\": null,\n        \"update:calculateCellValue\": null,\n        \"update:calculateDisplayValue\": null,\n        \"update:calculateFilterExpression\": null,\n        \"update:calculateGroupValue\": null,\n        \"update:calculateSortValue\": null,\n        \"update:caption\": null,\n        \"update:cellTemplate\": null,\n        \"update:columns\": null,\n        \"update:cssClass\": null,\n        \"update:customizeText\": null,\n        \"update:dataField\": null,\n        \"update:dataType\": null,\n        \"update:editCellTemplate\": null,\n        \"update:editorOptions\": null,\n        \"update:encodeHtml\": null,\n        \"update:falseText\": null,\n        \"update:filterOperations\": null,\n        \"update:filterType\": null,\n        \"update:filterValue\": null,\n        \"update:filterValues\": null,\n        \"update:fixed\": null,\n        \"update:fixedPosition\": null,\n        \"update:format\": null,\n        \"update:formItem\": null,\n        \"update:groupCellTemplate\": null,\n        \"update:grouped\": null,\n        \"update:groupIndex\": null,\n        \"update:headerCellTemplate\": null,\n        \"update:headerFilter\": null,\n        \"update:hidingPriority\": null,\n        \"update:isBand\": null,\n        \"update:lookup\": null,\n        \"update:minWidth\": null,\n        \"update:name\": null,\n        \"update:ownerBand\": null,\n        \"update:renderAsync\": null,\n        \"update:resized\": null,\n        \"update:selectedFilterOperation\": null,\n        \"update:setCellValue\": null,\n        \"update:showEditorAlways\": null,\n        \"update:showInColumnChooser\": null,\n        \"update:showWhenGrouped\": null,\n        \"update:sortIndex\": null,\n        \"update:sortingMethod\": null,\n        \"update:sortOrder\": null,\n        \"update:trueText\": null,\n        \"update:type\": null,\n        \"update:validationRules\": null,\n        \"update:visible\": null,\n        \"update:visibleIndex\": null,\n        \"update:width\": null,\n    },\n    props: {\n        alignment: String,\n        allowEditing: Boolean,\n        allowExporting: Boolean,\n        allowFiltering: Boolean,\n        allowFixing: Boolean,\n        allowGrouping: Boolean,\n        allowHeaderFiltering: Boolean,\n        allowHiding: Boolean,\n        allowReordering: Boolean,\n        allowResizing: Boolean,\n        allowSearch: Boolean,\n        allowSorting: Boolean,\n        autoExpandGroup: Boolean,\n        buttons: Array,\n        calculateCellValue: Function,\n        calculateDisplayValue: [Function, String],\n        calculateFilterExpression: Function,\n        calculateGroupValue: [Function, String],\n        calculateSortValue: [Function, String],\n        caption: String,\n        cellTemplate: {},\n        columns: Array,\n        cssClass: String,\n        customizeText: Function,\n        dataField: String,\n        dataType: String,\n        editCellTemplate: {},\n        editorOptions: {},\n        encodeHtml: Boolean,\n        falseText: String,\n        filterOperations: Array,\n        filterType: String,\n        filterValue: {},\n        filterValues: Array,\n        fixed: Boolean,\n        fixedPosition: String,\n        format: [Object, Function, String],\n        formItem: Object,\n        groupCellTemplate: {},\n        grouped: Boolean,\n        groupIndex: Number,\n        headerCellTemplate: {},\n        headerFilter: Object,\n        hidingPriority: Number,\n        isBand: Boolean,\n        lookup: Object,\n        minWidth: Number,\n        name: String,\n        ownerBand: Number,\n        renderAsync: Boolean,\n        resized: Function,\n        selectedFilterOperation: String,\n        setCellValue: Function,\n        showEditorAlways: Boolean,\n        showInColumnChooser: Boolean,\n        showWhenGrouped: Boolean,\n        sortIndex: Number,\n        sortingMethod: Function,\n        sortOrder: String,\n        trueText: String,\n        type: String,\n        validationRules: Array,\n        visible: Boolean,\n        visibleIndex: Number,\n        width: [Number, String]\n    }\n});\nexports.DxColumn = DxColumn;\nDxColumn.$_optionName = \"columns\";\nDxColumn.$_isCollectionItem = true;\nDxColumn.$_expectedChildren = {\n    AsyncRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    button: { isCollectionItem: true, optionName: \"buttons\" },\n    columnHeaderFilter: { isCollectionItem: false, optionName: \"headerFilter\" },\n    columnLookup: { isCollectionItem: false, optionName: \"lookup\" },\n    CompareRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    CustomRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    EmailRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    format: { isCollectionItem: false, optionName: \"format\" },\n    formItem: { isCollectionItem: false, optionName: \"formItem\" },\n    headerFilter: { isCollectionItem: false, optionName: \"headerFilter\" },\n    lookup: { isCollectionItem: false, optionName: \"lookup\" },\n    NumericRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    PatternRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    RangeRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    RequiredRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    StringLengthRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    validationRule: { isCollectionItem: true, optionName: \"validationRules\" }\n};\nvar DxColumnChooser = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSearch\": null,\n        \"update:emptyPanelText\": null,\n        \"update:enabled\": null,\n        \"update:height\": null,\n        \"update:mode\": null,\n        \"update:searchTimeout\": null,\n        \"update:sortOrder\": null,\n        \"update:title\": null,\n        \"update:width\": null,\n    },\n    props: {\n        allowSearch: Boolean,\n        emptyPanelText: String,\n        enabled: Boolean,\n        height: Number,\n        mode: String,\n        searchTimeout: Number,\n        sortOrder: String,\n        title: String,\n        width: Number\n    }\n});\nexports.DxColumnChooser = DxColumnChooser;\nDxColumnChooser.$_optionName = \"columnChooser\";\nvar DxColumnFixing = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:enabled\": null,\n        \"update:texts\": null,\n    },\n    props: {\n        enabled: Boolean,\n        texts: Object\n    }\n});\nexports.DxColumnFixing = DxColumnFixing;\nDxColumnFixing.$_optionName = \"columnFixing\";\nDxColumnFixing.$_expectedChildren = {\n    columnFixingTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxColumnFixingTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:fix\": null,\n        \"update:leftPosition\": null,\n        \"update:rightPosition\": null,\n        \"update:unfix\": null,\n    },\n    props: {\n        fix: String,\n        leftPosition: String,\n        rightPosition: String,\n        unfix: String\n    }\n});\nexports.DxColumnFixingTexts = DxColumnFixingTexts;\nDxColumnFixingTexts.$_optionName = \"texts\";\nvar DxColumnHeaderFilter = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSearch\": null,\n        \"update:dataSource\": null,\n        \"update:groupInterval\": null,\n        \"update:height\": null,\n        \"update:searchMode\": null,\n        \"update:width\": null,\n    },\n    props: {\n        allowSearch: Boolean,\n        dataSource: [Array, Object, Function],\n        groupInterval: [Number, String],\n        height: Number,\n        searchMode: String,\n        width: Number\n    }\n});\nexports.DxColumnHeaderFilter = DxColumnHeaderFilter;\nDxColumnHeaderFilter.$_optionName = \"headerFilter\";\nvar DxColumnLookup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowClearing\": null,\n        \"update:calculateCellValue\": null,\n        \"update:dataSource\": null,\n        \"update:displayExpr\": null,\n        \"update:valueExpr\": null,\n    },\n    props: {\n        allowClearing: Boolean,\n        calculateCellValue: Function,\n        dataSource: [Array, Object, Function],\n        displayExpr: [Function, String],\n        valueExpr: String\n    }\n});\nexports.DxColumnLookup = DxColumnLookup;\nDxColumnLookup.$_optionName = \"lookup\";\nvar DxCompareRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:comparisonTarget\": null,\n        \"update:comparisonType\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:type\": null,\n    },\n    props: {\n        comparisonTarget: Function,\n        comparisonType: String,\n        ignoreEmptyValue: Boolean,\n        message: String,\n        type: String\n    }\n});\nexports.DxCompareRule = DxCompareRule;\nDxCompareRule.$_optionName = \"validationRules\";\nDxCompareRule.$_isCollectionItem = true;\nDxCompareRule.$_predefinedProps = {\n    type: \"compare\"\n};\nvar DxCursorOffset = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: Number,\n        y: Number\n    }\n});\nexports.DxCursorOffset = DxCursorOffset;\nDxCursorOffset.$_optionName = \"cursorOffset\";\nvar DxCustomOperation = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:calculateFilterExpression\": null,\n        \"update:caption\": null,\n        \"update:customizeText\": null,\n        \"update:dataTypes\": null,\n        \"update:editorTemplate\": null,\n        \"update:hasValue\": null,\n        \"update:icon\": null,\n        \"update:name\": null,\n    },\n    props: {\n        calculateFilterExpression: Function,\n        caption: String,\n        customizeText: Function,\n        dataTypes: Array,\n        editorTemplate: {},\n        hasValue: Boolean,\n        icon: String,\n        name: String\n    }\n});\nexports.DxCustomOperation = DxCustomOperation;\nDxCustomOperation.$_optionName = \"customOperations\";\nDxCustomOperation.$_isCollectionItem = true;\nvar DxCustomRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:reevaluate\": null,\n        \"update:type\": null,\n        \"update:validationCallback\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        reevaluate: Boolean,\n        type: String,\n        validationCallback: Function\n    }\n});\nexports.DxCustomRule = DxCustomRule;\nDxCustomRule.$_optionName = \"validationRules\";\nDxCustomRule.$_isCollectionItem = true;\nDxCustomRule.$_predefinedProps = {\n    type: \"custom\"\n};\nvar DxDataGridHeaderFilter = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSearch\": null,\n        \"update:height\": null,\n        \"update:searchTimeout\": null,\n        \"update:texts\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        allowSearch: Boolean,\n        height: Number,\n        searchTimeout: Number,\n        texts: Object,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxDataGridHeaderFilter = DxDataGridHeaderFilter;\nDxDataGridHeaderFilter.$_optionName = \"headerFilter\";\nDxDataGridHeaderFilter.$_expectedChildren = {\n    dataGridHeaderFilterTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxDataGridHeaderFilterTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:cancel\": null,\n        \"update:emptyValue\": null,\n        \"update:ok\": null,\n    },\n    props: {\n        cancel: String,\n        emptyValue: String,\n        ok: String\n    }\n});\nexports.DxDataGridHeaderFilterTexts = DxDataGridHeaderFilterTexts;\nDxDataGridHeaderFilterTexts.$_optionName = \"texts\";\nvar DxEditing = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowAdding\": null,\n        \"update:allowDeleting\": null,\n        \"update:allowUpdating\": null,\n        \"update:changes\": null,\n        \"update:confirmDelete\": null,\n        \"update:editColumnName\": null,\n        \"update:editRowKey\": null,\n        \"update:form\": null,\n        \"update:mode\": null,\n        \"update:newRowPosition\": null,\n        \"update:popup\": null,\n        \"update:refreshMode\": null,\n        \"update:selectTextOnEditStart\": null,\n        \"update:startEditAction\": null,\n        \"update:texts\": null,\n        \"update:useIcons\": null,\n    },\n    props: {\n        allowAdding: Boolean,\n        allowDeleting: [Boolean, Function],\n        allowUpdating: [Boolean, Function],\n        changes: Array,\n        confirmDelete: Boolean,\n        editColumnName: String,\n        editRowKey: {},\n        form: Object,\n        mode: String,\n        newRowPosition: String,\n        popup: Object,\n        refreshMode: String,\n        selectTextOnEditStart: Boolean,\n        startEditAction: String,\n        texts: {},\n        useIcons: Boolean\n    }\n});\nexports.DxEditing = DxEditing;\nDxEditing.$_optionName = \"editing\";\nDxEditing.$_expectedChildren = {\n    change: { isCollectionItem: true, optionName: \"changes\" },\n    editingTexts: { isCollectionItem: false, optionName: \"texts\" },\n    form: { isCollectionItem: false, optionName: \"form\" },\n    popup: { isCollectionItem: false, optionName: \"popup\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxEditingTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:addRow\": null,\n        \"update:cancelAllChanges\": null,\n        \"update:cancelRowChanges\": null,\n        \"update:confirmDeleteMessage\": null,\n        \"update:confirmDeleteTitle\": null,\n        \"update:deleteRow\": null,\n        \"update:editRow\": null,\n        \"update:saveAllChanges\": null,\n        \"update:saveRowChanges\": null,\n        \"update:undeleteRow\": null,\n        \"update:validationCancelChanges\": null,\n    },\n    props: {\n        addRow: String,\n        cancelAllChanges: String,\n        cancelRowChanges: String,\n        confirmDeleteMessage: String,\n        confirmDeleteTitle: String,\n        deleteRow: String,\n        editRow: String,\n        saveAllChanges: String,\n        saveRowChanges: String,\n        undeleteRow: String,\n        validationCancelChanges: String\n    }\n});\nexports.DxEditingTexts = DxEditingTexts;\nDxEditingTexts.$_optionName = \"texts\";\nvar DxEmailRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        type: String\n    }\n});\nexports.DxEmailRule = DxEmailRule;\nDxEmailRule.$_optionName = \"validationRules\";\nDxEmailRule.$_isCollectionItem = true;\nDxEmailRule.$_predefinedProps = {\n    type: \"email\"\n};\nvar DxExport = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowExportSelectedData\": null,\n        \"update:customizeExcelCell\": null,\n        \"update:enabled\": null,\n        \"update:excelFilterEnabled\": null,\n        \"update:excelWrapTextEnabled\": null,\n        \"update:fileName\": null,\n        \"update:ignoreExcelErrors\": null,\n        \"update:proxyUrl\": null,\n        \"update:texts\": null,\n    },\n    props: {\n        allowExportSelectedData: Boolean,\n        customizeExcelCell: Function,\n        enabled: Boolean,\n        excelFilterEnabled: Boolean,\n        excelWrapTextEnabled: Boolean,\n        fileName: String,\n        ignoreExcelErrors: Boolean,\n        proxyUrl: String,\n        texts: Object\n    }\n});\nexports.DxExport = DxExport;\nDxExport.$_optionName = \"export\";\nDxExport.$_expectedChildren = {\n    exportTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxExportTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:exportAll\": null,\n        \"update:exportSelectedRows\": null,\n        \"update:exportTo\": null,\n    },\n    props: {\n        exportAll: String,\n        exportSelectedRows: String,\n        exportTo: String\n    }\n});\nexports.DxExportTexts = DxExportTexts;\nDxExportTexts.$_optionName = \"texts\";\nvar DxField = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:calculateFilterExpression\": null,\n        \"update:caption\": null,\n        \"update:customizeText\": null,\n        \"update:dataField\": null,\n        \"update:dataType\": null,\n        \"update:defaultFilterOperation\": null,\n        \"update:editorOptions\": null,\n        \"update:editorTemplate\": null,\n        \"update:falseText\": null,\n        \"update:filterOperations\": null,\n        \"update:format\": null,\n        \"update:lookup\": null,\n        \"update:name\": null,\n        \"update:trueText\": null,\n    },\n    props: {\n        calculateFilterExpression: Function,\n        caption: String,\n        customizeText: Function,\n        dataField: String,\n        dataType: String,\n        defaultFilterOperation: String,\n        editorOptions: {},\n        editorTemplate: {},\n        falseText: String,\n        filterOperations: Array,\n        format: [Object, Function, String],\n        lookup: Object,\n        name: String,\n        trueText: String\n    }\n});\nexports.DxField = DxField;\nDxField.$_optionName = \"fields\";\nDxField.$_isCollectionItem = true;\nDxField.$_expectedChildren = {\n    fieldLookup: { isCollectionItem: false, optionName: \"lookup\" },\n    format: { isCollectionItem: false, optionName: \"format\" },\n    lookup: { isCollectionItem: false, optionName: \"lookup\" }\n};\nvar DxFieldLookup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowClearing\": null,\n        \"update:dataSource\": null,\n        \"update:displayExpr\": null,\n        \"update:valueExpr\": null,\n    },\n    props: {\n        allowClearing: Boolean,\n        dataSource: [Array, Object],\n        displayExpr: [Function, String],\n        valueExpr: [Function, String]\n    }\n});\nexports.DxFieldLookup = DxFieldLookup;\nDxFieldLookup.$_optionName = \"lookup\";\nvar DxFilterBuilder = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:allowHierarchicalFields\": null,\n        \"update:bindingOptions\": null,\n        \"update:customOperations\": null,\n        \"update:disabled\": null,\n        \"update:elementAttr\": null,\n        \"update:fields\": null,\n        \"update:filterOperationDescriptions\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:groupOperationDescriptions\": null,\n        \"update:groupOperations\": null,\n        \"update:height\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:maxGroupLevel\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onEditorPrepared\": null,\n        \"update:onEditorPreparing\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onValueChanged\": null,\n        \"update:rtlEnabled\": null,\n        \"update:tabIndex\": null,\n        \"update:value\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        allowHierarchicalFields: Boolean,\n        bindingOptions: Object,\n        customOperations: Array,\n        disabled: Boolean,\n        elementAttr: Object,\n        fields: Array,\n        filterOperationDescriptions: Object,\n        focusStateEnabled: Boolean,\n        groupOperationDescriptions: Object,\n        groupOperations: Array,\n        height: [Function, Number, String],\n        hint: String,\n        hoverStateEnabled: Boolean,\n        maxGroupLevel: Number,\n        onContentReady: Function,\n        onDisposing: Function,\n        onEditorPrepared: Function,\n        onEditorPreparing: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        onValueChanged: Function,\n        rtlEnabled: Boolean,\n        tabIndex: Number,\n        value: [Array, Function, String],\n        visible: Boolean,\n        width: [Function, Number, String]\n    }\n});\nexports.DxFilterBuilder = DxFilterBuilder;\nDxFilterBuilder.$_optionName = \"filterBuilder\";\nDxFilterBuilder.$_expectedChildren = {\n    customOperation: { isCollectionItem: true, optionName: \"customOperations\" },\n    field: { isCollectionItem: true, optionName: \"fields\" },\n    filterOperationDescriptions: { isCollectionItem: false, optionName: \"filterOperationDescriptions\" },\n    groupOperationDescriptions: { isCollectionItem: false, optionName: \"groupOperationDescriptions\" }\n};\nvar DxFilterBuilderPopup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:animation\": null,\n        \"update:bindingOptions\": null,\n        \"update:closeOnOutsideClick\": null,\n        \"update:container\": null,\n        \"update:contentTemplate\": null,\n        \"update:copyRootClassesToWrapper\": null,\n        \"update:deferRendering\": null,\n        \"update:disabled\": null,\n        \"update:dragAndResizeArea\": null,\n        \"update:dragEnabled\": null,\n        \"update:dragOutsideBoundary\": null,\n        \"update:elementAttr\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:fullScreen\": null,\n        \"update:height\": null,\n        \"update:hideOnParentScroll\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:maxHeight\": null,\n        \"update:maxWidth\": null,\n        \"update:minHeight\": null,\n        \"update:minWidth\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onHidden\": null,\n        \"update:onHiding\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onResize\": null,\n        \"update:onResizeEnd\": null,\n        \"update:onResizeStart\": null,\n        \"update:onShowing\": null,\n        \"update:onShown\": null,\n        \"update:onTitleRendered\": null,\n        \"update:position\": null,\n        \"update:resizeEnabled\": null,\n        \"update:restorePosition\": null,\n        \"update:rtlEnabled\": null,\n        \"update:shading\": null,\n        \"update:shadingColor\": null,\n        \"update:showCloseButton\": null,\n        \"update:showTitle\": null,\n        \"update:tabIndex\": null,\n        \"update:title\": null,\n        \"update:titleTemplate\": null,\n        \"update:toolbarItems\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n        \"update:wrapperAttr\": null,\n    },\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        animation: Object,\n        bindingOptions: Object,\n        closeOnOutsideClick: [Boolean, Function],\n        container: {},\n        contentTemplate: {},\n        copyRootClassesToWrapper: Boolean,\n        deferRendering: Boolean,\n        disabled: Boolean,\n        dragAndResizeArea: {},\n        dragEnabled: Boolean,\n        dragOutsideBoundary: Boolean,\n        elementAttr: {},\n        focusStateEnabled: Boolean,\n        fullScreen: Boolean,\n        height: [Function, Number, String],\n        hideOnParentScroll: Boolean,\n        hint: String,\n        hoverStateEnabled: Boolean,\n        maxHeight: [Function, Number, String],\n        maxWidth: [Function, Number, String],\n        minHeight: [Function, Number, String],\n        minWidth: [Function, Number, String],\n        onContentReady: Function,\n        onDisposing: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onHidden: Function,\n        onHiding: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        onResize: Function,\n        onResizeEnd: Function,\n        onResizeStart: Function,\n        onShowing: Function,\n        onShown: Function,\n        onTitleRendered: Function,\n        position: [Function, Object, String],\n        resizeEnabled: Boolean,\n        restorePosition: Boolean,\n        rtlEnabled: Boolean,\n        shading: Boolean,\n        shadingColor: String,\n        showCloseButton: Boolean,\n        showTitle: Boolean,\n        tabIndex: Number,\n        title: String,\n        titleTemplate: {},\n        toolbarItems: Array,\n        visible: Boolean,\n        width: [Function, Number, String],\n        wrapperAttr: {}\n    }\n});\nexports.DxFilterBuilderPopup = DxFilterBuilderPopup;\nDxFilterBuilderPopup.$_optionName = \"filterBuilderPopup\";\nvar DxFilterOperationDescriptions = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:between\": null,\n        \"update:contains\": null,\n        \"update:endsWith\": null,\n        \"update:equal\": null,\n        \"update:greaterThan\": null,\n        \"update:greaterThanOrEqual\": null,\n        \"update:isBlank\": null,\n        \"update:isNotBlank\": null,\n        \"update:lessThan\": null,\n        \"update:lessThanOrEqual\": null,\n        \"update:notContains\": null,\n        \"update:notEqual\": null,\n        \"update:startsWith\": null,\n    },\n    props: {\n        between: String,\n        contains: String,\n        endsWith: String,\n        equal: String,\n        greaterThan: String,\n        greaterThanOrEqual: String,\n        isBlank: String,\n        isNotBlank: String,\n        lessThan: String,\n        lessThanOrEqual: String,\n        notContains: String,\n        notEqual: String,\n        startsWith: String\n    }\n});\nexports.DxFilterOperationDescriptions = DxFilterOperationDescriptions;\nDxFilterOperationDescriptions.$_optionName = \"filterOperationDescriptions\";\nvar DxFilterPanel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:customizeText\": null,\n        \"update:filterEnabled\": null,\n        \"update:texts\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        customizeText: Function,\n        filterEnabled: Boolean,\n        texts: Object,\n        visible: Boolean\n    }\n});\nexports.DxFilterPanel = DxFilterPanel;\nDxFilterPanel.$_optionName = \"filterPanel\";\nDxFilterPanel.$_expectedChildren = {\n    filterPanelTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxFilterPanelTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:clearFilter\": null,\n        \"update:createFilter\": null,\n        \"update:filterEnabledHint\": null,\n    },\n    props: {\n        clearFilter: String,\n        createFilter: String,\n        filterEnabledHint: String\n    }\n});\nexports.DxFilterPanelTexts = DxFilterPanelTexts;\nDxFilterPanelTexts.$_optionName = \"texts\";\nvar DxFilterRow = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:applyFilter\": null,\n        \"update:applyFilterText\": null,\n        \"update:betweenEndText\": null,\n        \"update:betweenStartText\": null,\n        \"update:operationDescriptions\": null,\n        \"update:resetOperationText\": null,\n        \"update:showAllText\": null,\n        \"update:showOperationChooser\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        applyFilter: String,\n        applyFilterText: String,\n        betweenEndText: String,\n        betweenStartText: String,\n        operationDescriptions: Object,\n        resetOperationText: String,\n        showAllText: String,\n        showOperationChooser: Boolean,\n        visible: Boolean\n    }\n});\nexports.DxFilterRow = DxFilterRow;\nDxFilterRow.$_optionName = \"filterRow\";\nDxFilterRow.$_expectedChildren = {\n    operationDescriptions: { isCollectionItem: false, optionName: \"operationDescriptions\" }\n};\nvar DxForm = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:alignItemLabels\": null,\n        \"update:alignItemLabelsInAllGroups\": null,\n        \"update:bindingOptions\": null,\n        \"update:colCount\": null,\n        \"update:colCountByScreen\": null,\n        \"update:customizeItem\": null,\n        \"update:disabled\": null,\n        \"update:elementAttr\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:formData\": null,\n        \"update:height\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:items\": null,\n        \"update:labelLocation\": null,\n        \"update:labelMode\": null,\n        \"update:minColWidth\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onEditorEnterKey\": null,\n        \"update:onFieldDataChanged\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:optionalMark\": null,\n        \"update:readOnly\": null,\n        \"update:requiredMark\": null,\n        \"update:requiredMessage\": null,\n        \"update:rtlEnabled\": null,\n        \"update:screenByWidth\": null,\n        \"update:scrollingEnabled\": null,\n        \"update:showColonAfterLabel\": null,\n        \"update:showOptionalMark\": null,\n        \"update:showRequiredMark\": null,\n        \"update:showValidationSummary\": null,\n        \"update:tabIndex\": null,\n        \"update:validationGroup\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        alignItemLabels: Boolean,\n        alignItemLabelsInAllGroups: Boolean,\n        bindingOptions: Object,\n        colCount: [Number, String],\n        colCountByScreen: Object,\n        customizeItem: Function,\n        disabled: Boolean,\n        elementAttr: Object,\n        focusStateEnabled: Boolean,\n        formData: {},\n        height: [Function, Number, String],\n        hint: String,\n        hoverStateEnabled: Boolean,\n        items: Array,\n        labelLocation: String,\n        labelMode: String,\n        minColWidth: Number,\n        onContentReady: Function,\n        onDisposing: Function,\n        onEditorEnterKey: Function,\n        onFieldDataChanged: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        optionalMark: String,\n        readOnly: Boolean,\n        requiredMark: String,\n        requiredMessage: String,\n        rtlEnabled: Boolean,\n        screenByWidth: Function,\n        scrollingEnabled: Boolean,\n        showColonAfterLabel: Boolean,\n        showOptionalMark: Boolean,\n        showRequiredMark: Boolean,\n        showValidationSummary: Boolean,\n        tabIndex: Number,\n        validationGroup: String,\n        visible: Boolean,\n        width: [Function, Number, String]\n    }\n});\nexports.DxForm = DxForm;\nDxForm.$_optionName = \"form\";\nDxForm.$_expectedChildren = {\n    colCountByScreen: { isCollectionItem: false, optionName: \"colCountByScreen\" }\n};\nvar DxFormat = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:currency\": null,\n        \"update:formatter\": null,\n        \"update:parser\": null,\n        \"update:precision\": null,\n        \"update:type\": null,\n    },\n    props: {\n        currency: String,\n        formatter: Function,\n        parser: Function,\n        precision: Number,\n        type: String\n    }\n});\nexports.DxFormat = DxFormat;\nDxFormat.$_optionName = \"format\";\nvar DxFormItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:colSpan\": null,\n        \"update:cssClass\": null,\n        \"update:dataField\": null,\n        \"update:editorOptions\": null,\n        \"update:editorType\": null,\n        \"update:helpText\": null,\n        \"update:isRequired\": null,\n        \"update:itemType\": null,\n        \"update:label\": null,\n        \"update:name\": null,\n        \"update:template\": null,\n        \"update:validationRules\": null,\n        \"update:visible\": null,\n        \"update:visibleIndex\": null,\n    },\n    props: {\n        colSpan: Number,\n        cssClass: String,\n        dataField: String,\n        editorOptions: {},\n        editorType: String,\n        helpText: String,\n        isRequired: Boolean,\n        itemType: String,\n        label: Object,\n        name: String,\n        template: {},\n        validationRules: Array,\n        visible: Boolean,\n        visibleIndex: Number\n    }\n});\nexports.DxFormItem = DxFormItem;\nDxFormItem.$_optionName = \"formItem\";\nDxFormItem.$_expectedChildren = {\n    AsyncRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    CompareRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    CustomRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    EmailRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    label: { isCollectionItem: false, optionName: \"label\" },\n    NumericRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    PatternRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    RangeRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    RequiredRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    StringLengthRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    validationRule: { isCollectionItem: true, optionName: \"validationRules\" }\n};\nvar DxFrom = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:left\": null,\n        \"update:opacity\": null,\n        \"update:position\": null,\n        \"update:scale\": null,\n        \"update:top\": null,\n    },\n    props: {\n        left: Number,\n        opacity: Number,\n        position: Object,\n        scale: Number,\n        top: Number\n    }\n});\nexports.DxFrom = DxFrom;\nDxFrom.$_optionName = \"from\";\nDxFrom.$_expectedChildren = {\n    position: { isCollectionItem: false, optionName: \"position\" }\n};\nvar DxGrouping = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowCollapsing\": null,\n        \"update:autoExpandAll\": null,\n        \"update:contextMenuEnabled\": null,\n        \"update:expandMode\": null,\n        \"update:texts\": null,\n    },\n    props: {\n        allowCollapsing: Boolean,\n        autoExpandAll: Boolean,\n        contextMenuEnabled: Boolean,\n        expandMode: String,\n        texts: Object\n    }\n});\nexports.DxGrouping = DxGrouping;\nDxGrouping.$_optionName = \"grouping\";\nDxGrouping.$_expectedChildren = {\n    groupingTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxGroupingTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:groupByThisColumn\": null,\n        \"update:groupContinuedMessage\": null,\n        \"update:groupContinuesMessage\": null,\n        \"update:ungroup\": null,\n        \"update:ungroupAll\": null,\n    },\n    props: {\n        groupByThisColumn: String,\n        groupContinuedMessage: String,\n        groupContinuesMessage: String,\n        ungroup: String,\n        ungroupAll: String\n    }\n});\nexports.DxGroupingTexts = DxGroupingTexts;\nDxGroupingTexts.$_optionName = \"texts\";\nvar DxGroupItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignByColumn\": null,\n        \"update:column\": null,\n        \"update:customizeText\": null,\n        \"update:displayFormat\": null,\n        \"update:name\": null,\n        \"update:showInColumn\": null,\n        \"update:showInGroupFooter\": null,\n        \"update:skipEmptyValues\": null,\n        \"update:summaryType\": null,\n        \"update:valueFormat\": null,\n    },\n    props: {\n        alignByColumn: Boolean,\n        column: String,\n        customizeText: Function,\n        displayFormat: String,\n        name: String,\n        showInColumn: String,\n        showInGroupFooter: Boolean,\n        skipEmptyValues: Boolean,\n        summaryType: String,\n        valueFormat: [Object, Function, String]\n    }\n});\nexports.DxGroupItem = DxGroupItem;\nDxGroupItem.$_optionName = \"groupItems\";\nDxGroupItem.$_isCollectionItem = true;\nDxGroupItem.$_expectedChildren = {\n    valueFormat: { isCollectionItem: false, optionName: \"valueFormat\" }\n};\nvar DxGroupOperationDescriptions = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:and\": null,\n        \"update:notAnd\": null,\n        \"update:notOr\": null,\n        \"update:or\": null,\n    },\n    props: {\n        and: String,\n        notAnd: String,\n        notOr: String,\n        or: String\n    }\n});\nexports.DxGroupOperationDescriptions = DxGroupOperationDescriptions;\nDxGroupOperationDescriptions.$_optionName = \"groupOperationDescriptions\";\nvar DxGroupPanel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowColumnDragging\": null,\n        \"update:emptyPanelText\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        allowColumnDragging: Boolean,\n        emptyPanelText: String,\n        visible: [Boolean, String]\n    }\n});\nexports.DxGroupPanel = DxGroupPanel;\nDxGroupPanel.$_optionName = \"groupPanel\";\nvar DxHeaderFilter = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSearch\": null,\n        \"update:dataSource\": null,\n        \"update:groupInterval\": null,\n        \"update:height\": null,\n        \"update:searchMode\": null,\n        \"update:searchTimeout\": null,\n        \"update:texts\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        allowSearch: Boolean,\n        dataSource: [Array, Object, Function],\n        groupInterval: [Number, String],\n        height: Number,\n        searchMode: String,\n        searchTimeout: Number,\n        texts: Object,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxHeaderFilter = DxHeaderFilter;\nDxHeaderFilter.$_optionName = \"headerFilter\";\nvar DxHide = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:complete\": null,\n        \"update:delay\": null,\n        \"update:direction\": null,\n        \"update:duration\": null,\n        \"update:easing\": null,\n        \"update:from\": null,\n        \"update:staggerDelay\": null,\n        \"update:start\": null,\n        \"update:to\": null,\n        \"update:type\": null,\n    },\n    props: {\n        complete: Function,\n        delay: Number,\n        direction: String,\n        duration: Number,\n        easing: String,\n        from: Object,\n        staggerDelay: Number,\n        start: Function,\n        to: Object,\n        type: String\n    }\n});\nexports.DxHide = DxHide;\nDxHide.$_optionName = \"hide\";\nDxHide.$_expectedChildren = {\n    from: { isCollectionItem: false, optionName: \"from\" },\n    to: { isCollectionItem: false, optionName: \"to\" }\n};\nvar DxItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:cssClass\": null,\n        \"update:disabled\": null,\n        \"update:html\": null,\n        \"update:locateInMenu\": null,\n        \"update:location\": null,\n        \"update:menuItemTemplate\": null,\n        \"update:name\": null,\n        \"update:options\": null,\n        \"update:showText\": null,\n        \"update:template\": null,\n        \"update:text\": null,\n        \"update:visible\": null,\n        \"update:widget\": null,\n    },\n    props: {\n        cssClass: String,\n        disabled: Boolean,\n        html: String,\n        locateInMenu: String,\n        location: String,\n        menuItemTemplate: {},\n        name: String,\n        options: {},\n        showText: String,\n        template: {},\n        text: String,\n        visible: Boolean,\n        widget: String\n    }\n});\nexports.DxItem = DxItem;\nDxItem.$_optionName = \"items\";\nDxItem.$_isCollectionItem = true;\nvar DxKeyboardNavigation = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:editOnKeyPress\": null,\n        \"update:enabled\": null,\n        \"update:enterKeyAction\": null,\n        \"update:enterKeyDirection\": null,\n    },\n    props: {\n        editOnKeyPress: Boolean,\n        enabled: Boolean,\n        enterKeyAction: String,\n        enterKeyDirection: String\n    }\n});\nexports.DxKeyboardNavigation = DxKeyboardNavigation;\nDxKeyboardNavigation.$_optionName = \"keyboardNavigation\";\nvar DxLabel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignment\": null,\n        \"update:location\": null,\n        \"update:showColon\": null,\n        \"update:text\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        alignment: String,\n        location: String,\n        showColon: Boolean,\n        text: String,\n        visible: Boolean\n    }\n});\nexports.DxLabel = DxLabel;\nDxLabel.$_optionName = \"label\";\nvar DxLoadPanel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:enabled\": null,\n        \"update:height\": null,\n        \"update:indicatorSrc\": null,\n        \"update:shading\": null,\n        \"update:shadingColor\": null,\n        \"update:showIndicator\": null,\n        \"update:showPane\": null,\n        \"update:text\": null,\n        \"update:width\": null,\n    },\n    props: {\n        enabled: [Boolean, String],\n        height: Number,\n        indicatorSrc: String,\n        shading: Boolean,\n        shadingColor: String,\n        showIndicator: Boolean,\n        showPane: Boolean,\n        text: String,\n        width: Number\n    }\n});\nexports.DxLoadPanel = DxLoadPanel;\nDxLoadPanel.$_optionName = \"loadPanel\";\nvar DxLookup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowClearing\": null,\n        \"update:calculateCellValue\": null,\n        \"update:dataSource\": null,\n        \"update:displayExpr\": null,\n        \"update:valueExpr\": null,\n    },\n    props: {\n        allowClearing: Boolean,\n        calculateCellValue: Function,\n        dataSource: [Array, Object, Function],\n        displayExpr: [Function, String],\n        valueExpr: String\n    }\n});\nexports.DxLookup = DxLookup;\nDxLookup.$_optionName = \"lookup\";\nvar DxMasterDetail = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:autoExpandAll\": null,\n        \"update:enabled\": null,\n        \"update:template\": null,\n    },\n    props: {\n        autoExpandAll: Boolean,\n        enabled: Boolean,\n        template: {}\n    }\n});\nexports.DxMasterDetail = DxMasterDetail;\nDxMasterDetail.$_optionName = \"masterDetail\";\nvar DxMy = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: String,\n        y: String\n    }\n});\nexports.DxMy = DxMy;\nDxMy.$_optionName = \"my\";\nvar DxNumericRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        type: String\n    }\n});\nexports.DxNumericRule = DxNumericRule;\nDxNumericRule.$_optionName = \"validationRules\";\nDxNumericRule.$_isCollectionItem = true;\nDxNumericRule.$_predefinedProps = {\n    type: \"numeric\"\n};\nvar DxOffset = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: Number,\n        y: Number\n    }\n});\nexports.DxOffset = DxOffset;\nDxOffset.$_optionName = \"offset\";\nvar DxOperationDescriptions = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:between\": null,\n        \"update:contains\": null,\n        \"update:endsWith\": null,\n        \"update:equal\": null,\n        \"update:greaterThan\": null,\n        \"update:greaterThanOrEqual\": null,\n        \"update:lessThan\": null,\n        \"update:lessThanOrEqual\": null,\n        \"update:notContains\": null,\n        \"update:notEqual\": null,\n        \"update:startsWith\": null,\n    },\n    props: {\n        between: String,\n        contains: String,\n        endsWith: String,\n        equal: String,\n        greaterThan: String,\n        greaterThanOrEqual: String,\n        lessThan: String,\n        lessThanOrEqual: String,\n        notContains: String,\n        notEqual: String,\n        startsWith: String\n    }\n});\nexports.DxOperationDescriptions = DxOperationDescriptions;\nDxOperationDescriptions.$_optionName = \"operationDescriptions\";\nvar DxPager = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowedPageSizes\": null,\n        \"update:displayMode\": null,\n        \"update:infoText\": null,\n        \"update:showInfo\": null,\n        \"update:showNavigationButtons\": null,\n        \"update:showPageSizeSelector\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        allowedPageSizes: [Array, String],\n        displayMode: String,\n        infoText: String,\n        showInfo: Boolean,\n        showNavigationButtons: Boolean,\n        showPageSizeSelector: Boolean,\n        visible: [Boolean, String]\n    }\n});\nexports.DxPager = DxPager;\nDxPager.$_optionName = \"pager\";\nvar DxPaging = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:enabled\": null,\n        \"update:pageIndex\": null,\n        \"update:pageSize\": null,\n    },\n    props: {\n        enabled: Boolean,\n        pageIndex: Number,\n        pageSize: Number\n    }\n});\nexports.DxPaging = DxPaging;\nDxPaging.$_optionName = \"paging\";\nvar DxPatternRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:pattern\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        pattern: {},\n        type: String\n    }\n});\nexports.DxPatternRule = DxPatternRule;\nDxPatternRule.$_optionName = \"validationRules\";\nDxPatternRule.$_isCollectionItem = true;\nDxPatternRule.$_predefinedProps = {\n    type: \"pattern\"\n};\nvar DxPopup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:animation\": null,\n        \"update:bindingOptions\": null,\n        \"update:closeOnOutsideClick\": null,\n        \"update:container\": null,\n        \"update:contentTemplate\": null,\n        \"update:copyRootClassesToWrapper\": null,\n        \"update:deferRendering\": null,\n        \"update:disabled\": null,\n        \"update:dragAndResizeArea\": null,\n        \"update:dragEnabled\": null,\n        \"update:dragOutsideBoundary\": null,\n        \"update:elementAttr\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:fullScreen\": null,\n        \"update:height\": null,\n        \"update:hideOnParentScroll\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:maxHeight\": null,\n        \"update:maxWidth\": null,\n        \"update:minHeight\": null,\n        \"update:minWidth\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onHidden\": null,\n        \"update:onHiding\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onResize\": null,\n        \"update:onResizeEnd\": null,\n        \"update:onResizeStart\": null,\n        \"update:onShowing\": null,\n        \"update:onShown\": null,\n        \"update:onTitleRendered\": null,\n        \"update:position\": null,\n        \"update:resizeEnabled\": null,\n        \"update:restorePosition\": null,\n        \"update:rtlEnabled\": null,\n        \"update:shading\": null,\n        \"update:shadingColor\": null,\n        \"update:showCloseButton\": null,\n        \"update:showTitle\": null,\n        \"update:tabIndex\": null,\n        \"update:title\": null,\n        \"update:titleTemplate\": null,\n        \"update:toolbarItems\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n        \"update:wrapperAttr\": null,\n    },\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        animation: Object,\n        bindingOptions: Object,\n        closeOnOutsideClick: [Boolean, Function],\n        container: {},\n        contentTemplate: {},\n        copyRootClassesToWrapper: Boolean,\n        deferRendering: Boolean,\n        disabled: Boolean,\n        dragAndResizeArea: {},\n        dragEnabled: Boolean,\n        dragOutsideBoundary: Boolean,\n        elementAttr: {},\n        focusStateEnabled: Boolean,\n        fullScreen: Boolean,\n        height: [Function, Number, String],\n        hideOnParentScroll: Boolean,\n        hint: String,\n        hoverStateEnabled: Boolean,\n        maxHeight: [Function, Number, String],\n        maxWidth: [Function, Number, String],\n        minHeight: [Function, Number, String],\n        minWidth: [Function, Number, String],\n        onContentReady: Function,\n        onDisposing: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onHidden: Function,\n        onHiding: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        onResize: Function,\n        onResizeEnd: Function,\n        onResizeStart: Function,\n        onShowing: Function,\n        onShown: Function,\n        onTitleRendered: Function,\n        position: [Function, Object, String],\n        resizeEnabled: Boolean,\n        restorePosition: Boolean,\n        rtlEnabled: Boolean,\n        shading: Boolean,\n        shadingColor: String,\n        showCloseButton: Boolean,\n        showTitle: Boolean,\n        tabIndex: Number,\n        title: String,\n        titleTemplate: {},\n        toolbarItems: Array,\n        visible: Boolean,\n        width: [Function, Number, String],\n        wrapperAttr: {}\n    }\n});\nexports.DxPopup = DxPopup;\nDxPopup.$_optionName = \"popup\";\nDxPopup.$_expectedChildren = {\n    animation: { isCollectionItem: false, optionName: \"animation\" },\n    position: { isCollectionItem: false, optionName: \"position\" },\n    toolbarItem: { isCollectionItem: true, optionName: \"toolbarItems\" }\n};\nvar DxPosition = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:at\": null,\n        \"update:boundary\": null,\n        \"update:boundaryOffset\": null,\n        \"update:collision\": null,\n        \"update:my\": null,\n        \"update:of\": null,\n        \"update:offset\": null,\n    },\n    props: {\n        at: [Object, String],\n        boundary: {},\n        boundaryOffset: [Object, String],\n        collision: [Object, String],\n        my: [Object, String],\n        of: {},\n        offset: [Object, String]\n    }\n});\nexports.DxPosition = DxPosition;\nDxPosition.$_optionName = \"position\";\nvar DxRangeRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:max\": null,\n        \"update:message\": null,\n        \"update:min\": null,\n        \"update:reevaluate\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        max: {},\n        message: String,\n        min: {},\n        reevaluate: Boolean,\n        type: String\n    }\n});\nexports.DxRangeRule = DxRangeRule;\nDxRangeRule.$_optionName = \"validationRules\";\nDxRangeRule.$_isCollectionItem = true;\nDxRangeRule.$_predefinedProps = {\n    type: \"range\"\n};\nvar DxRemoteOperations = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:filtering\": null,\n        \"update:grouping\": null,\n        \"update:groupPaging\": null,\n        \"update:paging\": null,\n        \"update:sorting\": null,\n        \"update:summary\": null,\n    },\n    props: {\n        filtering: Boolean,\n        grouping: Boolean,\n        groupPaging: Boolean,\n        paging: Boolean,\n        sorting: Boolean,\n        summary: Boolean\n    }\n});\nexports.DxRemoteOperations = DxRemoteOperations;\nDxRemoteOperations.$_optionName = \"remoteOperations\";\nvar DxRequiredRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:message\": null,\n        \"update:trim\": null,\n        \"update:type\": null,\n    },\n    props: {\n        message: String,\n        trim: Boolean,\n        type: String\n    }\n});\nexports.DxRequiredRule = DxRequiredRule;\nDxRequiredRule.$_optionName = \"validationRules\";\nDxRequiredRule.$_isCollectionItem = true;\nDxRequiredRule.$_predefinedProps = {\n    type: \"required\"\n};\nvar DxRowDragging = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowDropInsideItem\": null,\n        \"update:allowReordering\": null,\n        \"update:autoScroll\": null,\n        \"update:boundary\": null,\n        \"update:container\": null,\n        \"update:cursorOffset\": null,\n        \"update:data\": null,\n        \"update:dragDirection\": null,\n        \"update:dragTemplate\": null,\n        \"update:dropFeedbackMode\": null,\n        \"update:filter\": null,\n        \"update:group\": null,\n        \"update:handle\": null,\n        \"update:onAdd\": null,\n        \"update:onDragChange\": null,\n        \"update:onDragEnd\": null,\n        \"update:onDragMove\": null,\n        \"update:onDragStart\": null,\n        \"update:onRemove\": null,\n        \"update:onReorder\": null,\n        \"update:scrollSensitivity\": null,\n        \"update:scrollSpeed\": null,\n        \"update:showDragIcons\": null,\n    },\n    props: {\n        allowDropInsideItem: Boolean,\n        allowReordering: Boolean,\n        autoScroll: Boolean,\n        boundary: {},\n        container: {},\n        cursorOffset: [Object, String],\n        data: {},\n        dragDirection: String,\n        dragTemplate: {},\n        dropFeedbackMode: String,\n        filter: String,\n        group: String,\n        handle: String,\n        onAdd: Function,\n        onDragChange: Function,\n        onDragEnd: Function,\n        onDragMove: Function,\n        onDragStart: Function,\n        onRemove: Function,\n        onReorder: Function,\n        scrollSensitivity: Number,\n        scrollSpeed: Number,\n        showDragIcons: Boolean\n    }\n});\nexports.DxRowDragging = DxRowDragging;\nDxRowDragging.$_optionName = \"rowDragging\";\nDxRowDragging.$_expectedChildren = {\n    cursorOffset: { isCollectionItem: false, optionName: \"cursorOffset\" }\n};\nvar DxScrolling = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:columnRenderingMode\": null,\n        \"update:mode\": null,\n        \"update:preloadEnabled\": null,\n        \"update:renderAsync\": null,\n        \"update:rowRenderingMode\": null,\n        \"update:scrollByContent\": null,\n        \"update:scrollByThumb\": null,\n        \"update:showScrollbar\": null,\n        \"update:useNative\": null,\n    },\n    props: {\n        columnRenderingMode: String,\n        mode: String,\n        preloadEnabled: Boolean,\n        renderAsync: Boolean,\n        rowRenderingMode: String,\n        scrollByContent: Boolean,\n        scrollByThumb: Boolean,\n        showScrollbar: String,\n        useNative: [Boolean, String]\n    }\n});\nexports.DxScrolling = DxScrolling;\nDxScrolling.$_optionName = \"scrolling\";\nvar DxSearchPanel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:highlightCaseSensitive\": null,\n        \"update:highlightSearchText\": null,\n        \"update:placeholder\": null,\n        \"update:searchVisibleColumnsOnly\": null,\n        \"update:text\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        highlightCaseSensitive: Boolean,\n        highlightSearchText: Boolean,\n        placeholder: String,\n        searchVisibleColumnsOnly: Boolean,\n        text: String,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxSearchPanel = DxSearchPanel;\nDxSearchPanel.$_optionName = \"searchPanel\";\nvar DxSelection = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSelectAll\": null,\n        \"update:deferred\": null,\n        \"update:maxFilterLengthInRequest\": null,\n        \"update:mode\": null,\n        \"update:selectAllMode\": null,\n        \"update:showCheckBoxesMode\": null,\n    },\n    props: {\n        allowSelectAll: Boolean,\n        deferred: Boolean,\n        maxFilterLengthInRequest: Number,\n        mode: String,\n        selectAllMode: String,\n        showCheckBoxesMode: String\n    }\n});\nexports.DxSelection = DxSelection;\nDxSelection.$_optionName = \"selection\";\nvar DxShow = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:complete\": null,\n        \"update:delay\": null,\n        \"update:direction\": null,\n        \"update:duration\": null,\n        \"update:easing\": null,\n        \"update:from\": null,\n        \"update:staggerDelay\": null,\n        \"update:start\": null,\n        \"update:to\": null,\n        \"update:type\": null,\n    },\n    props: {\n        complete: Function,\n        delay: Number,\n        direction: String,\n        duration: Number,\n        easing: String,\n        from: Object,\n        staggerDelay: Number,\n        start: Function,\n        to: Object,\n        type: String\n    }\n});\nexports.DxShow = DxShow;\nDxShow.$_optionName = \"show\";\nvar DxSortByGroupSummaryInfo = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:groupColumn\": null,\n        \"update:sortOrder\": null,\n        \"update:summaryItem\": null,\n    },\n    props: {\n        groupColumn: String,\n        sortOrder: String,\n        summaryItem: [Number, String]\n    }\n});\nexports.DxSortByGroupSummaryInfo = DxSortByGroupSummaryInfo;\nDxSortByGroupSummaryInfo.$_optionName = \"sortByGroupSummaryInfo\";\nDxSortByGroupSummaryInfo.$_isCollectionItem = true;\nvar DxSorting = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ascendingText\": null,\n        \"update:clearText\": null,\n        \"update:descendingText\": null,\n        \"update:mode\": null,\n        \"update:showSortIndexes\": null,\n    },\n    props: {\n        ascendingText: String,\n        clearText: String,\n        descendingText: String,\n        mode: String,\n        showSortIndexes: Boolean\n    }\n});\nexports.DxSorting = DxSorting;\nDxSorting.$_optionName = \"sorting\";\nvar DxStateStoring = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:customLoad\": null,\n        \"update:customSave\": null,\n        \"update:enabled\": null,\n        \"update:savingTimeout\": null,\n        \"update:storageKey\": null,\n        \"update:type\": null,\n    },\n    props: {\n        customLoad: Function,\n        customSave: Function,\n        enabled: Boolean,\n        savingTimeout: Number,\n        storageKey: String,\n        type: String\n    }\n});\nexports.DxStateStoring = DxStateStoring;\nDxStateStoring.$_optionName = \"stateStoring\";\nvar DxStringLengthRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:max\": null,\n        \"update:message\": null,\n        \"update:min\": null,\n        \"update:trim\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        max: Number,\n        message: String,\n        min: Number,\n        trim: Boolean,\n        type: String\n    }\n});\nexports.DxStringLengthRule = DxStringLengthRule;\nDxStringLengthRule.$_optionName = \"validationRules\";\nDxStringLengthRule.$_isCollectionItem = true;\nDxStringLengthRule.$_predefinedProps = {\n    type: \"stringLength\"\n};\nvar DxSummary = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:calculateCustomSummary\": null,\n        \"update:groupItems\": null,\n        \"update:recalculateWhileEditing\": null,\n        \"update:skipEmptyValues\": null,\n        \"update:texts\": null,\n        \"update:totalItems\": null,\n    },\n    props: {\n        calculateCustomSummary: Function,\n        groupItems: Array,\n        recalculateWhileEditing: Boolean,\n        skipEmptyValues: Boolean,\n        texts: Object,\n        totalItems: Array\n    }\n});\nexports.DxSummary = DxSummary;\nDxSummary.$_optionName = \"summary\";\nDxSummary.$_expectedChildren = {\n    groupItem: { isCollectionItem: true, optionName: \"groupItems\" },\n    summaryTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" },\n    totalItem: { isCollectionItem: true, optionName: \"totalItems\" }\n};\nvar DxSummaryTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:avg\": null,\n        \"update:avgOtherColumn\": null,\n        \"update:count\": null,\n        \"update:max\": null,\n        \"update:maxOtherColumn\": null,\n        \"update:min\": null,\n        \"update:minOtherColumn\": null,\n        \"update:sum\": null,\n        \"update:sumOtherColumn\": null,\n    },\n    props: {\n        avg: String,\n        avgOtherColumn: String,\n        count: String,\n        max: String,\n        maxOtherColumn: String,\n        min: String,\n        minOtherColumn: String,\n        sum: String,\n        sumOtherColumn: String\n    }\n});\nexports.DxSummaryTexts = DxSummaryTexts;\nDxSummaryTexts.$_optionName = \"texts\";\nvar DxTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:addRow\": null,\n        \"update:avg\": null,\n        \"update:avgOtherColumn\": null,\n        \"update:cancel\": null,\n        \"update:cancelAllChanges\": null,\n        \"update:cancelRowChanges\": null,\n        \"update:clearFilter\": null,\n        \"update:confirmDeleteMessage\": null,\n        \"update:confirmDeleteTitle\": null,\n        \"update:count\": null,\n        \"update:createFilter\": null,\n        \"update:deleteRow\": null,\n        \"update:editRow\": null,\n        \"update:emptyValue\": null,\n        \"update:exportAll\": null,\n        \"update:exportSelectedRows\": null,\n        \"update:exportTo\": null,\n        \"update:filterEnabledHint\": null,\n        \"update:fix\": null,\n        \"update:groupByThisColumn\": null,\n        \"update:groupContinuedMessage\": null,\n        \"update:groupContinuesMessage\": null,\n        \"update:leftPosition\": null,\n        \"update:max\": null,\n        \"update:maxOtherColumn\": null,\n        \"update:min\": null,\n        \"update:minOtherColumn\": null,\n        \"update:ok\": null,\n        \"update:rightPosition\": null,\n        \"update:saveAllChanges\": null,\n        \"update:saveRowChanges\": null,\n        \"update:sum\": null,\n        \"update:sumOtherColumn\": null,\n        \"update:undeleteRow\": null,\n        \"update:unfix\": null,\n        \"update:ungroup\": null,\n        \"update:ungroupAll\": null,\n        \"update:validationCancelChanges\": null,\n    },\n    props: {\n        addRow: String,\n        avg: String,\n        avgOtherColumn: String,\n        cancel: String,\n        cancelAllChanges: String,\n        cancelRowChanges: String,\n        clearFilter: String,\n        confirmDeleteMessage: String,\n        confirmDeleteTitle: String,\n        count: String,\n        createFilter: String,\n        deleteRow: String,\n        editRow: String,\n        emptyValue: String,\n        exportAll: String,\n        exportSelectedRows: String,\n        exportTo: String,\n        filterEnabledHint: String,\n        fix: String,\n        groupByThisColumn: String,\n        groupContinuedMessage: String,\n        groupContinuesMessage: String,\n        leftPosition: String,\n        max: String,\n        maxOtherColumn: String,\n        min: String,\n        minOtherColumn: String,\n        ok: String,\n        rightPosition: String,\n        saveAllChanges: String,\n        saveRowChanges: String,\n        sum: String,\n        sumOtherColumn: String,\n        undeleteRow: String,\n        unfix: String,\n        ungroup: String,\n        ungroupAll: String,\n        validationCancelChanges: String\n    }\n});\nexports.DxTexts = DxTexts;\nDxTexts.$_optionName = \"texts\";\nvar DxTo = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:left\": null,\n        \"update:opacity\": null,\n        \"update:position\": null,\n        \"update:scale\": null,\n        \"update:top\": null,\n    },\n    props: {\n        left: Number,\n        opacity: Number,\n        position: Object,\n        scale: Number,\n        top: Number\n    }\n});\nexports.DxTo = DxTo;\nDxTo.$_optionName = \"to\";\nvar DxToolbar = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:disabled\": null,\n        \"update:items\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        disabled: Boolean,\n        items: Array,\n        visible: Boolean\n    }\n});\nexports.DxToolbar = DxToolbar;\nDxToolbar.$_optionName = \"toolbar\";\nDxToolbar.$_expectedChildren = {\n    item: { isCollectionItem: true, optionName: \"items\" }\n};\nvar DxToolbarItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:disabled\": null,\n        \"update:html\": null,\n        \"update:location\": null,\n        \"update:options\": null,\n        \"update:template\": null,\n        \"update:text\": null,\n        \"update:toolbar\": null,\n        \"update:visible\": null,\n        \"update:widget\": null,\n    },\n    props: {\n        disabled: Boolean,\n        html: String,\n        location: String,\n        options: {},\n        template: {},\n        text: String,\n        toolbar: String,\n        visible: Boolean,\n        widget: String\n    }\n});\nexports.DxToolbarItem = DxToolbarItem;\nDxToolbarItem.$_optionName = \"toolbarItems\";\nDxToolbarItem.$_isCollectionItem = true;\nvar DxTotalItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignment\": null,\n        \"update:column\": null,\n        \"update:cssClass\": null,\n        \"update:customizeText\": null,\n        \"update:displayFormat\": null,\n        \"update:name\": null,\n        \"update:showInColumn\": null,\n        \"update:skipEmptyValues\": null,\n        \"update:summaryType\": null,\n        \"update:valueFormat\": null,\n    },\n    props: {\n        alignment: String,\n        column: String,\n        cssClass: String,\n        customizeText: Function,\n        displayFormat: String,\n        name: String,\n        showInColumn: String,\n        skipEmptyValues: Boolean,\n        summaryType: String,\n        valueFormat: [Object, Function, String]\n    }\n});\nexports.DxTotalItem = DxTotalItem;\nDxTotalItem.$_optionName = \"totalItems\";\nDxTotalItem.$_isCollectionItem = true;\nDxTotalItem.$_expectedChildren = {\n    valueFormat: { isCollectionItem: false, optionName: \"valueFormat\" }\n};\nvar DxValidationRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:comparisonTarget\": null,\n        \"update:comparisonType\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:max\": null,\n        \"update:message\": null,\n        \"update:min\": null,\n        \"update:pattern\": null,\n        \"update:reevaluate\": null,\n        \"update:trim\": null,\n        \"update:type\": null,\n        \"update:validationCallback\": null,\n    },\n    props: {\n        comparisonTarget: Function,\n        comparisonType: String,\n        ignoreEmptyValue: Boolean,\n        max: {},\n        message: String,\n        min: {},\n        pattern: {},\n        reevaluate: Boolean,\n        trim: Boolean,\n        type: String,\n        validationCallback: Function\n    }\n});\nexports.DxValidationRule = DxValidationRule;\nDxValidationRule.$_optionName = \"validationRules\";\nDxValidationRule.$_isCollectionItem = true;\nDxValidationRule.$_predefinedProps = {\n    type: \"required\"\n};\nvar DxValueFormat = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:currency\": null,\n        \"update:formatter\": null,\n        \"update:parser\": null,\n        \"update:precision\": null,\n        \"update:type\": null,\n    },\n    props: {\n        currency: String,\n        formatter: Function,\n        parser: Function,\n        precision: Number,\n        type: String\n    }\n});\nexports.DxValueFormat = DxValueFormat;\nDxValueFormat.$_optionName = \"valueFormat\";\nexports.default = DxDataGrid;\n","/**\r\n * DevExtreme (esm/data/data_source.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    DataSource\r\n} from \"./data_source/data_source\";\r\nexport default DataSource;\r\n","/**\r\n * DevExtreme (esm/data/odata/utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    type,\r\n    isObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nimport ajax from \"../../core/utils/ajax\";\r\nimport _Guid from \"../../core/guid\";\r\nimport {\r\n    grep\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    errors\r\n} from \"../errors\";\r\nimport {\r\n    errorMessageFromXhr,\r\n    XHR_ERROR_UNLOAD\r\n} from \"../utils\";\r\nimport {\r\n    format as stringFormat\r\n} from \"../../core/utils/string\";\r\nvar GUID_REGEX = /^(\\{{0,1}([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}\\}{0,1})$/;\r\nvar VERBOSE_DATE_REGEX = /^\\/Date\\((-?\\d+)((\\+|-)?(\\d+)?)\\)\\/$/;\r\nvar ISO8601_DATE_REGEX = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]{1}\\d{2}(:?)(\\d{2})?)?$/;\r\nvar JSON_VERBOSE_MIME_TYPE = \"application/json;odata=verbose\";\r\nvar makeArray = value => \"string\" === type(value) ? value.split() : value;\r\nvar hasDot = x => /\\./.test(x);\r\nvar pad = (text, length, right) => {\r\n    text = String(text);\r\n    while (text.length < length) {\r\n        text = right ? \"\".concat(text, \"0\") : \"0\".concat(text)\r\n    }\r\n    return text\r\n};\r\nvar formatISO8601 = (date, skipZeroTime, skipTimezone) => {\r\n    var bag = [];\r\n    var padLeft2 = text => pad(text, 2);\r\n    bag.push(date.getFullYear());\r\n    bag.push(\"-\");\r\n    bag.push(padLeft2(date.getMonth() + 1));\r\n    bag.push(\"-\");\r\n    bag.push(padLeft2(date.getDate()));\r\n    if (!(skipZeroTime && date.getHours() + date.getMinutes() + date.getSeconds() + date.getMilliseconds() < 1)) {\r\n        bag.push(\"T\");\r\n        bag.push(padLeft2(date.getHours()));\r\n        bag.push(\":\");\r\n        bag.push(padLeft2(date.getMinutes()));\r\n        bag.push(\":\");\r\n        bag.push(padLeft2(date.getSeconds()));\r\n        if (date.getMilliseconds()) {\r\n            bag.push(\".\");\r\n            bag.push(pad(date.getMilliseconds(), 3))\r\n        }\r\n        if (!skipTimezone) {\r\n            bag.push(\"Z\")\r\n        }\r\n    }\r\n    return bag.join(\"\")\r\n};\r\nvar parseISO8601 = isoString => {\r\n    var result = new Date(60 * new Date(0).getTimezoneOffset() * 1e3);\r\n    var chunks = isoString.replace(\"Z\", \"\").split(\"T\");\r\n    var date = /(\\d{4})-(\\d{2})-(\\d{2})/.exec(chunks[0]);\r\n    var time = /(\\d{2}):(\\d{2}):(\\d{2})\\.?(\\d{0,7})?/.exec(chunks[1]);\r\n    result.setFullYear(Number(date[1]));\r\n    result.setMonth(Number(date[2]) - 1);\r\n    result.setDate(Number(date[3]));\r\n    if (Array.isArray(time) && time.length) {\r\n        result.setHours(Number(time[1]));\r\n        result.setMinutes(Number(time[2]));\r\n        result.setSeconds(Number(time[3]));\r\n        var fractional = (time[4] || \"\").slice(0, 3);\r\n        fractional = pad(fractional, 3, true);\r\n        result.setMilliseconds(Number(fractional))\r\n    }\r\n    return result\r\n};\r\nvar isAbsoluteUrl = url => /^(?:[a-z]+:)?\\/\\//i.test(url);\r\nvar stripParams = url => {\r\n    var index = url.indexOf(\"?\");\r\n    if (index > -1) {\r\n        return url.substr(0, index)\r\n    }\r\n    return url\r\n};\r\nvar toAbsoluteUrl = (basePath, relativePath) => {\r\n    var part;\r\n    var baseParts = stripParams(basePath).split(\"/\");\r\n    var relativeParts = relativePath.split(\"/\");\r\n    baseParts.pop();\r\n    while (relativeParts.length) {\r\n        part = relativeParts.shift();\r\n        if (\"..\" === part) {\r\n            baseParts.pop()\r\n        } else {\r\n            baseParts.push(part)\r\n        }\r\n    }\r\n    return baseParts.join(\"/\")\r\n};\r\nvar param = params => {\r\n    var result = [];\r\n    for (var name in params) {\r\n        result.push(name + \"=\" + params[name])\r\n    }\r\n    return result.join(\"&\")\r\n};\r\nvar ajaxOptionsForRequest = function(protocolVersion, request) {\r\n    var _options$beforeSend;\r\n    var options = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\r\n    var formatPayload = payload => JSON.stringify(payload, (function(key, value) {\r\n        if (!(this[key] instanceof Date)) {\r\n            return value\r\n        }\r\n        value = formatISO8601(this[key]);\r\n        switch (protocolVersion) {\r\n            case 2:\r\n                return value.substr(0, value.length - 1);\r\n            case 3:\r\n            case 4:\r\n                return value;\r\n            default:\r\n                throw errors.Error(\"E4002\")\r\n        }\r\n    }));\r\n    request = extend({\r\n        async: true,\r\n        method: \"get\",\r\n        url: \"\",\r\n        params: {},\r\n        payload: null,\r\n        headers: {},\r\n        timeout: 3e4\r\n    }, request);\r\n    null === (_options$beforeSend = options.beforeSend) || void 0 === _options$beforeSend ? void 0 : _options$beforeSend.call(options, request);\r\n    var {\r\n        async: async,\r\n        timeout: timeout,\r\n        headers: headers\r\n    } = request;\r\n    var {\r\n        url: url,\r\n        method: method\r\n    } = request;\r\n    var {\r\n        jsonp: jsonp,\r\n        withCredentials: withCredentials\r\n    } = options;\r\n    method = (method || \"get\").toLowerCase();\r\n    var isGet = \"get\" === method;\r\n    var useJsonp = isGet && jsonp;\r\n    var params = extend({}, request.params);\r\n    var ajaxData = isGet ? params : formatPayload(request.payload);\r\n    var qs = !isGet && param(params);\r\n    var contentType = !isGet && JSON_VERBOSE_MIME_TYPE;\r\n    if (qs) {\r\n        url += (url.indexOf(\"?\") > -1 ? \"&\" : \"?\") + qs\r\n    }\r\n    if (useJsonp) {\r\n        ajaxData.$format = \"json\"\r\n    }\r\n    return {\r\n        url: url,\r\n        data: ajaxData,\r\n        dataType: useJsonp ? \"jsonp\" : \"json\",\r\n        jsonp: useJsonp && \"$callback\",\r\n        method: method,\r\n        async: async,\r\n        timeout: timeout,\r\n        headers: headers,\r\n        contentType: contentType,\r\n        accepts: {\r\n            json: [JSON_VERBOSE_MIME_TYPE, \"text/plain\"].join()\r\n        },\r\n        xhrFields: {\r\n            withCredentials: withCredentials\r\n        }\r\n    }\r\n};\r\nexport var sendRequest = (protocolVersion, request, options) => {\r\n    var {\r\n        deserializeDates: deserializeDates,\r\n        fieldTypes: fieldTypes,\r\n        countOnly: countOnly,\r\n        isPaged: isPaged\r\n    } = options;\r\n    var d = new Deferred;\r\n    var ajaxOptions = ajaxOptionsForRequest(protocolVersion, request, options);\r\n    ajax.sendRequest(ajaxOptions).always((obj, textStatus) => {\r\n        var transformOptions = {\r\n            deserializeDates: deserializeDates,\r\n            fieldTypes: fieldTypes\r\n        };\r\n        var tuple = interpretJsonFormat(obj, textStatus, transformOptions, ajaxOptions);\r\n        var {\r\n            error: error,\r\n            data: data,\r\n            count: count\r\n        } = tuple;\r\n        var {\r\n            nextUrl: nextUrl\r\n        } = tuple;\r\n        if (error) {\r\n            if (error.message !== XHR_ERROR_UNLOAD) {\r\n                d.reject(error)\r\n            }\r\n        } else if (countOnly) {\r\n            if (isFinite(count)) {\r\n                d.resolve(count)\r\n            } else {\r\n                d.reject(new errors.Error(\"E4018\"))\r\n            }\r\n        } else if (nextUrl && !isPaged) {\r\n            if (!isAbsoluteUrl(nextUrl)) {\r\n                nextUrl = toAbsoluteUrl(ajaxOptions.url, nextUrl)\r\n            }\r\n            sendRequest(protocolVersion, {\r\n                url: nextUrl\r\n            }, options).fail(d.reject).done(nextData => d.resolve(data.concat(nextData)))\r\n        } else {\r\n            var extra = isFinite(count) ? {\r\n                totalCount: count\r\n            } : void 0;\r\n            d.resolve(data, extra)\r\n        }\r\n    });\r\n    return d.promise()\r\n};\r\nvar formatDotNetError = errorObj => {\r\n    var message;\r\n    var currentError = errorObj;\r\n    if (\"message\" in errorObj) {\r\n        var _errorObj$message;\r\n        message = (null === (_errorObj$message = errorObj.message) || void 0 === _errorObj$message ? void 0 : _errorObj$message.value) || errorObj.message\r\n    }\r\n    while (currentError = currentError.innererror || currentError.internalexception) {\r\n        message = currentError.message;\r\n        if (currentError.internalexception && -1 === message.indexOf(\"inner exception\")) {\r\n            break\r\n        }\r\n    }\r\n    return message\r\n};\r\nvar errorFromResponse = (obj, textStatus, ajaxOptions) => {\r\n    var _response, _response2, _response3, _response4;\r\n    if (\"nocontent\" === textStatus) {\r\n        return null\r\n    }\r\n    var message = \"Unknown error\";\r\n    var response = obj;\r\n    var httpStatus = 200;\r\n    var errorData = {\r\n        requestOptions: ajaxOptions\r\n    };\r\n    if (\"success\" !== textStatus) {\r\n        var {\r\n            status: status,\r\n            responseText: responseText\r\n        } = obj;\r\n        httpStatus = status;\r\n        message = errorMessageFromXhr(obj, textStatus);\r\n        try {\r\n            response = JSON.parse(responseText)\r\n        } catch (x) {}\r\n    }\r\n    var errorObj = (null === (_response = response) || void 0 === _response ? void 0 : _response.then) || (null === (_response2 = response) || void 0 === _response2 ? void 0 : _response2.error) || (null === (_response3 = response) || void 0 === _response3 ? void 0 : _response3[\"odata.error\"]) || (null === (_response4 = response) || void 0 === _response4 ? void 0 : _response4[\"@odata.error\"]);\r\n    if (errorObj) {\r\n        message = formatDotNetError(errorObj) || message;\r\n        errorData.errorDetails = errorObj;\r\n        if (200 === httpStatus) {\r\n            httpStatus = 500\r\n        }\r\n        var customCode = Number(errorObj.code);\r\n        if (isFinite(customCode) && customCode >= 400) {\r\n            httpStatus = customCode\r\n        }\r\n    }\r\n    if (httpStatus >= 400 || 0 === httpStatus) {\r\n        errorData.httpStatus = httpStatus;\r\n        return extend(Error(message), errorData)\r\n    }\r\n    return null\r\n};\r\nvar interpretJsonFormat = (obj, textStatus, transformOptions, ajaxOptions) => {\r\n    var error = errorFromResponse(obj, textStatus, ajaxOptions);\r\n    if (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n    if (!isPlainObject(obj)) {\r\n        return {\r\n            data: obj\r\n        }\r\n    }\r\n    var value = \"d\" in obj && (Array.isArray(obj.d) || isObject(obj.d)) ? interpretVerboseJsonFormat(obj, textStatus) : interpretLightJsonFormat(obj, textStatus);\r\n    transformTypes(value, transformOptions);\r\n    return value\r\n};\r\nvar interpretVerboseJsonFormat = _ref => {\r\n    var _data$results;\r\n    var {\r\n        d: data\r\n    } = _ref;\r\n    if (!isDefined(data)) {\r\n        return {\r\n            error: Error(\"Malformed or unsupported JSON response received\")\r\n        }\r\n    }\r\n    return {\r\n        data: null !== (_data$results = data.results) && void 0 !== _data$results ? _data$results : data,\r\n        nextUrl: data.__next,\r\n        count: parseInt(data.__count, 10)\r\n    }\r\n};\r\nvar interpretLightJsonFormat = obj => {\r\n    var _obj$value;\r\n    return {\r\n        data: null !== (_obj$value = obj.value) && void 0 !== _obj$value ? _obj$value : obj,\r\n        nextUrl: obj[\"@odata.nextLink\"],\r\n        count: parseInt(obj[\"@odata.count\"], 10)\r\n    }\r\n};\r\nexport var EdmLiteral = Class.inherit({\r\n    ctor(value) {\r\n        this._value = value\r\n    },\r\n    valueOf() {\r\n        return this._value\r\n    }\r\n});\r\nvar transformTypes = function transformTypes(obj) {\r\n    var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\r\n    each(obj, (key, value) => {\r\n        if (null !== value && \"object\" === typeof value) {\r\n            if (\"results\" in value) {\r\n                obj[key] = value.results\r\n            }\r\n            transformTypes(obj[key], options)\r\n        } else if (\"string\" === typeof value) {\r\n            var {\r\n                fieldTypes: fieldTypes,\r\n                deserializeDates: deserializeDates\r\n            } = options;\r\n            var canBeGuid = !fieldTypes || \"String\" !== fieldTypes[key];\r\n            if (canBeGuid && GUID_REGEX.test(value)) {\r\n                obj[key] = new _Guid(value)\r\n            }\r\n            if (false !== deserializeDates) {\r\n                if (value.match(VERBOSE_DATE_REGEX)) {\r\n                    var date = new Date(Number(RegExp.$1) + 60 * RegExp.$2 * 1e3);\r\n                    obj[key] = new Date(date.valueOf() + 60 * date.getTimezoneOffset() * 1e3)\r\n                } else if (ISO8601_DATE_REGEX.test(value)) {\r\n                    obj[key] = new Date(parseISO8601(obj[key]).valueOf())\r\n                }\r\n            }\r\n        }\r\n    })\r\n};\r\nvar serializeDate = date => \"datetime'\".concat(formatISO8601(date, true, true), \"'\");\r\nvar serializeString = value => \"'\".concat(value.replace(/'/g, \"''\"), \"'\");\r\nexport var serializePropName = propName => propName instanceof EdmLiteral ? propName.valueOf() : propName.replace(/\\./g, \"/\");\r\nvar serializeValueV4 = value => {\r\n    if (value instanceof Date) {\r\n        return formatISO8601(value, false, false)\r\n    }\r\n    if (value instanceof _Guid) {\r\n        return value.valueOf()\r\n    }\r\n    if (Array.isArray(value)) {\r\n        return \"[\".concat(value.map(item => serializeValueV4(item)).join(\",\"), \"]\")\r\n    }\r\n    return serializeValueV2(value)\r\n};\r\nvar serializeValueV2 = value => {\r\n    if (value instanceof Date) {\r\n        return serializeDate(value)\r\n    }\r\n    if (value instanceof _Guid) {\r\n        return \"guid'\".concat(value, \"'\")\r\n    }\r\n    if (value instanceof EdmLiteral) {\r\n        return value.valueOf()\r\n    }\r\n    if (\"string\" === typeof value) {\r\n        return serializeString(value)\r\n    }\r\n    return String(value)\r\n};\r\nexport var serializeValue = (value, protocolVersion) => {\r\n    switch (protocolVersion) {\r\n        case 2:\r\n        case 3:\r\n            return serializeValueV2(value);\r\n        case 4:\r\n            return serializeValueV4(value);\r\n        default:\r\n            throw errors.Error(\"E4002\")\r\n    }\r\n};\r\nexport var serializeKey = (key, protocolVersion) => {\r\n    if (isPlainObject(key)) {\r\n        var parts = [];\r\n        each(key, (k, v) => parts.push(\"\".concat(serializePropName(k), \"=\").concat(serializeValue(v, protocolVersion))));\r\n        return parts.join()\r\n    }\r\n    return serializeValue(key, protocolVersion)\r\n};\r\nexport var keyConverters = {\r\n    String: value => \"\".concat(value),\r\n    Int32: value => Math.floor(value),\r\n    Int64: value => value instanceof EdmLiteral ? value : new EdmLiteral(\"\".concat(value, \"L\")),\r\n    Guid: value => value instanceof _Guid ? value : new _Guid(value),\r\n    Boolean: value => !!value,\r\n    Single: value => value instanceof EdmLiteral ? value : new EdmLiteral(value + \"f\"),\r\n    Decimal: value => value instanceof EdmLiteral ? value : new EdmLiteral(value + \"m\")\r\n};\r\nexport var convertPrimitiveValue = (type, value) => {\r\n    if (null === value) {\r\n        return null\r\n    }\r\n    var converter = keyConverters[type];\r\n    if (!converter) {\r\n        throw errors.Error(\"E4014\", type)\r\n    }\r\n    return converter(value)\r\n};\r\nexport var generateSelect = (oDataVersion, select) => {\r\n    if (!select) {\r\n        return\r\n    }\r\n    return oDataVersion < 4 ? serializePropName(select.join()) : grep(select, hasDot, true).join()\r\n};\r\nvar formatCore = hash => {\r\n    var result = \"\";\r\n    var selectValue = [];\r\n    var expandValue = [];\r\n    each(hash, (key, value) => {\r\n        if (Array.isArray(value)) {\r\n            [].push.apply(selectValue, value)\r\n        }\r\n        if (isPlainObject(value)) {\r\n            expandValue.push(\"\".concat(key).concat(formatCore(value)))\r\n        }\r\n    });\r\n    if (selectValue.length || expandValue.length) {\r\n        result += \"(\";\r\n        if (selectValue.length) {\r\n            result += \"$select=\".concat(map(selectValue, serializePropName).join())\r\n        }\r\n        if (expandValue.length) {\r\n            if (selectValue.length) {\r\n                result += \";\"\r\n            }\r\n            result += \"$expand=\".concat(map(expandValue, serializePropName).join())\r\n        }\r\n        result += \")\"\r\n    }\r\n    return result\r\n};\r\nvar format = hash => {\r\n    var result = [];\r\n    each(hash, (key, value) => result.push(\"\".concat(key).concat(formatCore(value))));\r\n    return result.join()\r\n};\r\nvar parseCore = (exprParts, root, stepper) => {\r\n    var result = stepper(root, exprParts.shift(), exprParts);\r\n    if (false === result) {\r\n        return\r\n    }\r\n    parseCore(exprParts, result, stepper)\r\n};\r\nvar parseTree = (exprs, root, stepper) => each(exprs, (_, x) => parseCore(x.split(\".\"), root, stepper));\r\nvar generatorV2 = (expand, select) => {\r\n    var hash = {};\r\n    if (expand) {\r\n        each(makeArray(expand), (function() {\r\n            hash[serializePropName(this)] = 1\r\n        }))\r\n    }\r\n    if (select) {\r\n        each(makeArray(select), (function() {\r\n            var path = this.split(\".\");\r\n            if (path.length < 2) {\r\n                return\r\n            }\r\n            path.pop();\r\n            hash[serializePropName(path.join(\".\"))] = 1\r\n        }))\r\n    }\r\n    return map(hash, (_, v) => v).join()\r\n};\r\nvar generatorV4 = (expand, select) => {\r\n    var hash = {};\r\n    if (expand || select) {\r\n        if (expand) {\r\n            parseTree(makeArray(expand), hash, (node, key, path) => {\r\n                node[key] = node[key] || {};\r\n                return !path.length ? false : node[key]\r\n            })\r\n        }\r\n        if (select) {\r\n            parseTree(grep(makeArray(select), hasDot), hash, (node, key, path) => {\r\n                if (!path.length) {\r\n                    node[key] = node[key] || [];\r\n                    node[key].push(key);\r\n                    return false\r\n                }\r\n                return node[key] = node[key] || {}\r\n            })\r\n        }\r\n        return format(hash)\r\n    }\r\n};\r\nexport var generateExpand = (oDataVersion, expand, select) => oDataVersion < 4 ? generatorV2(expand, select) : generatorV4(expand, select);\r\nexport var formatFunctionInvocationUrl = (baseUrl, args) => stringFormat(\"{0}({1})\", baseUrl, map(args || {}, (value, key) => stringFormat(\"{0}={1}\", key, value)).join(\",\"));\r\nexport var escapeServiceOperationParams = (params, version) => {\r\n    if (!params) {\r\n        return params\r\n    }\r\n    var result = {};\r\n    each(params, (k, v) => {\r\n        result[k] = serializeValue(v, version)\r\n    });\r\n    return result\r\n};\r\n","/**\r\n * DevExtreme (esm/data/odata/query_adapter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport config from \"../../core/config\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport queryAdapters from \"../query_adapters\";\r\nimport {\r\n    sendRequest,\r\n    generateSelect,\r\n    generateExpand,\r\n    serializeValue,\r\n    convertPrimitiveValue,\r\n    serializePropName\r\n} from \"./utils\";\r\nimport {\r\n    errors\r\n} from \"../errors\";\r\nimport {\r\n    isConjunctiveOperator,\r\n    normalizeBinaryCriterion,\r\n    isUnaryOperation\r\n} from \"../utils\";\r\nvar DEFAULT_PROTOCOL_VERSION = 2;\r\nvar STRING_FUNCTIONS = [\"contains\", \"notcontains\", \"startswith\", \"endswith\"];\r\nvar compileCriteria = (() => {\r\n    var protocolVersion;\r\n    var forceLowerCase;\r\n    var fieldTypes;\r\n    var createBinaryOperationFormatter = op => (prop, val) => \"\".concat(prop, \" \").concat(op, \" \").concat(val);\r\n    var createStringFuncFormatter = (op, reverse) => (prop, val) => {\r\n        var bag = [op, \"(\"];\r\n        if (forceLowerCase) {\r\n            prop = -1 === prop.indexOf(\"tolower(\") ? \"tolower(\".concat(prop, \")\") : prop;\r\n            val = val.toLowerCase()\r\n        }\r\n        if (reverse) {\r\n            bag.push(val, \",\", prop)\r\n        } else {\r\n            bag.push(prop, \",\", val)\r\n        }\r\n        bag.push(\")\");\r\n        return bag.join(\"\")\r\n    };\r\n    var formatters = {\r\n        \"=\": createBinaryOperationFormatter(\"eq\"),\r\n        \"<>\": createBinaryOperationFormatter(\"ne\"),\r\n        \">\": createBinaryOperationFormatter(\"gt\"),\r\n        \">=\": createBinaryOperationFormatter(\"ge\"),\r\n        \"<\": createBinaryOperationFormatter(\"lt\"),\r\n        \"<=\": createBinaryOperationFormatter(\"le\"),\r\n        startswith: createStringFuncFormatter(\"startswith\"),\r\n        endswith: createStringFuncFormatter(\"endswith\")\r\n    };\r\n    var formattersV2 = extend({}, formatters, {\r\n        contains: createStringFuncFormatter(\"substringof\", true),\r\n        notcontains: createStringFuncFormatter(\"not substringof\", true)\r\n    });\r\n    var formattersV4 = extend({}, formatters, {\r\n        contains: createStringFuncFormatter(\"contains\"),\r\n        notcontains: createStringFuncFormatter(\"not contains\")\r\n    });\r\n    var compileBinary = criteria => {\r\n        var _fieldTypes;\r\n        criteria = normalizeBinaryCriterion(criteria);\r\n        var op = criteria[1];\r\n        var fieldName = criteria[0];\r\n        var fieldType = fieldTypes && fieldTypes[fieldName];\r\n        if (fieldType && (name = op, STRING_FUNCTIONS.some(funcName => funcName === name)) && \"String\" !== fieldType) {\r\n            throw new errors.Error(\"E4024\", op, fieldName, fieldType)\r\n        }\r\n        var name;\r\n        var formatters = 4 === protocolVersion ? formattersV4 : formattersV2;\r\n        var formatter = formatters[op.toLowerCase()];\r\n        if (!formatter) {\r\n            throw errors.Error(\"E4003\", op)\r\n        }\r\n        var value = criteria[2];\r\n        if (null !== (_fieldTypes = fieldTypes) && void 0 !== _fieldTypes && _fieldTypes[fieldName]) {\r\n            value = convertPrimitiveValue(fieldTypes[fieldName], value)\r\n        }\r\n        return formatter(serializePropName(fieldName), serializeValue(value, protocolVersion))\r\n    };\r\n    var compileGroup = criteria => {\r\n        var bag = [];\r\n        var groupOperator;\r\n        var nextGroupOperator;\r\n        each(criteria, (function(index, criterion) {\r\n            if (Array.isArray(criterion)) {\r\n                if (bag.length > 1 && groupOperator !== nextGroupOperator) {\r\n                    throw new errors.Error(\"E4019\")\r\n                }\r\n                bag.push(\"(\".concat(compileCore(criterion), \")\"));\r\n                groupOperator = nextGroupOperator;\r\n                nextGroupOperator = \"and\"\r\n            } else {\r\n                nextGroupOperator = isConjunctiveOperator(this) ? \"and\" : \"or\"\r\n            }\r\n        }));\r\n        return bag.join(\" \".concat(groupOperator, \" \"))\r\n    };\r\n    var compileCore = criteria => {\r\n        if (Array.isArray(criteria[0])) {\r\n            return compileGroup(criteria)\r\n        }\r\n        if (isUnaryOperation(criteria)) {\r\n            return (criteria => {\r\n                var op = criteria[0];\r\n                var crit = compileCore(criteria[1]);\r\n                if (\"!\" === op) {\r\n                    return \"not (\".concat(crit, \")\")\r\n                }\r\n                throw errors.Error(\"E4003\", op)\r\n            })(criteria)\r\n        }\r\n        return compileBinary(criteria)\r\n    };\r\n    return (criteria, version, types, filterToLower) => {\r\n        fieldTypes = types;\r\n        forceLowerCase = null !== filterToLower && void 0 !== filterToLower ? filterToLower : config().oDataFilterToLower;\r\n        protocolVersion = version;\r\n        return compileCore(criteria)\r\n    }\r\n})();\r\nvar createODataQueryAdapter = queryOptions => {\r\n    var _sorting = [];\r\n    var _criteria = [];\r\n    var _expand = queryOptions.expand;\r\n    var _select;\r\n    var _skip;\r\n    var _take;\r\n    var _countQuery;\r\n    var _oDataVersion = queryOptions.version || DEFAULT_PROTOCOL_VERSION;\r\n    var hasSlice = () => _skip || void 0 !== _take;\r\n    var hasFunction = criterion => {\r\n        for (var i = 0; i < criterion.length; i++) {\r\n            if (isFunction(criterion[i])) {\r\n                return true\r\n            }\r\n            if (Array.isArray(criterion[i]) && hasFunction(criterion[i])) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    };\r\n    var requestData = () => {\r\n        var result = {};\r\n        if (!_countQuery) {\r\n            if (_sorting.length) {\r\n                result.$orderby = _sorting.join(\",\")\r\n            }\r\n            if (_skip) {\r\n                result.$skip = _skip\r\n            }\r\n            if (void 0 !== _take) {\r\n                result.$top = _take\r\n            }\r\n            result.$select = generateSelect(_oDataVersion, _select) || void 0;\r\n            result.$expand = generateExpand(_oDataVersion, _expand, _select) || void 0\r\n        }\r\n        if (_criteria.length) {\r\n            var criteria = _criteria.length < 2 ? _criteria[0] : _criteria;\r\n            var fieldTypes = null === queryOptions || void 0 === queryOptions ? void 0 : queryOptions.fieldTypes;\r\n            var filterToLower = null === queryOptions || void 0 === queryOptions ? void 0 : queryOptions.filterToLower;\r\n            result.$filter = compileCriteria(criteria, _oDataVersion, fieldTypes, filterToLower)\r\n        }\r\n        if (_countQuery) {\r\n            result.$top = 0\r\n        }\r\n        if (queryOptions.requireTotalCount || _countQuery) {\r\n            if (4 !== _oDataVersion) {\r\n                result.$inlinecount = \"allpages\"\r\n            } else {\r\n                result.$count = \"true\"\r\n            }\r\n        }\r\n        return result\r\n    };\r\n    return {\r\n        optimize: tasks => {\r\n            var selectIndex = -1;\r\n            for (var i = 0; i < tasks.length; i++) {\r\n                if (\"select\" === tasks[i].name) {\r\n                    selectIndex = i;\r\n                    break\r\n                }\r\n            }\r\n            if (selectIndex < 0 || !isFunction(tasks[selectIndex].args[0])) {\r\n                return\r\n            }\r\n            var nextTask = tasks[1 + selectIndex];\r\n            if (!nextTask || \"slice\" !== nextTask.name) {\r\n                return\r\n            }\r\n            tasks[1 + selectIndex] = tasks[selectIndex];\r\n            tasks[selectIndex] = nextTask\r\n        },\r\n        exec: url => sendRequest(_oDataVersion, {\r\n            url: url,\r\n            params: extend(requestData(), null === queryOptions || void 0 === queryOptions ? void 0 : queryOptions.params)\r\n        }, {\r\n            beforeSend: queryOptions.beforeSend,\r\n            jsonp: queryOptions.jsonp,\r\n            withCredentials: queryOptions.withCredentials,\r\n            countOnly: _countQuery,\r\n            deserializeDates: queryOptions.deserializeDates,\r\n            fieldTypes: queryOptions.fieldTypes,\r\n            isPaged: isFinite(_take)\r\n        }),\r\n        multiSort(args) {\r\n            var rules;\r\n            if (hasSlice()) {\r\n                return false\r\n            }\r\n            for (var i = 0; i < args.length; i++) {\r\n                var getter = args[i][0];\r\n                var desc = !!args[i][1];\r\n                var rule = void 0;\r\n                if (\"string\" !== typeof getter) {\r\n                    return false\r\n                }\r\n                rule = serializePropName(getter);\r\n                if (desc) {\r\n                    rule += \" desc\"\r\n                }\r\n                rules = rules || [];\r\n                rules.push(rule)\r\n            }\r\n            _sorting = rules\r\n        },\r\n        slice(skipCount, takeCount) {\r\n            if (hasSlice()) {\r\n                return false\r\n            }\r\n            _skip = skipCount;\r\n            _take = takeCount\r\n        },\r\n        filter(criterion) {\r\n            if (hasSlice()) {\r\n                return false\r\n            }\r\n            if (!Array.isArray(criterion)) {\r\n                criterion = [].slice.call(arguments)\r\n            }\r\n            if (hasFunction(criterion)) {\r\n                return false\r\n            }\r\n            if (_criteria.length) {\r\n                _criteria.push(\"and\")\r\n            }\r\n            _criteria.push(criterion)\r\n        },\r\n        select(expr) {\r\n            if (_select || isFunction(expr)) {\r\n                return false\r\n            }\r\n            if (!Array.isArray(expr)) {\r\n                expr = [].slice.call(arguments)\r\n            }\r\n            _select = expr\r\n        },\r\n        count: () => _countQuery = true\r\n    }\r\n};\r\nqueryAdapters.odata = createODataQueryAdapter;\r\nexport var odata = createODataQueryAdapter;\r\n","/**\r\n * DevExtreme (esm/data/odata/request_dispatcher.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    sendRequest\r\n} from \"./utils\";\r\nimport \"./query_adapter\";\r\nvar DEFAULT_PROTOCOL_VERSION = 2;\r\nexport default class RequestDispatcher {\r\n    constructor(options) {\r\n        options = options || {};\r\n        this._url = String(options.url).replace(/\\/+$/, \"\");\r\n        this._beforeSend = options.beforeSend;\r\n        this._jsonp = options.jsonp;\r\n        this._version = options.version || DEFAULT_PROTOCOL_VERSION;\r\n        this._withCredentials = options.withCredentials;\r\n        this._deserializeDates = options.deserializeDates;\r\n        this._filterToLower = options.filterToLower\r\n    }\r\n    sendRequest(url, method, params, payload) {\r\n        return sendRequest(this.version, {\r\n            url: url,\r\n            method: method,\r\n            params: params || {},\r\n            payload: payload\r\n        }, {\r\n            beforeSend: this._beforeSend,\r\n            jsonp: this._jsonp,\r\n            withCredentials: this._withCredentials,\r\n            deserializeDates: this._deserializeDates\r\n        })\r\n    }\r\n    get version() {\r\n        return this._version\r\n    }\r\n    get beforeSend() {\r\n        return this._beforeSend\r\n    }\r\n    get url() {\r\n        return this._url\r\n    }\r\n    get jsonp() {\r\n        return this._jsonp\r\n    }\r\n    get filterToLower() {\r\n        return this._filterToLower\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (esm/data/odata/store.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport config from \"../../core/config\";\r\nimport {\r\n    generateExpand,\r\n    generateSelect,\r\n    serializeKey,\r\n    convertPrimitiveValue,\r\n    formatFunctionInvocationUrl,\r\n    escapeServiceOperationParams\r\n} from \"./utils\";\r\nimport {\r\n    errors\r\n} from \"../errors\";\r\nimport query from \"../query\";\r\nimport Store from \"../abstract_store\";\r\nimport RequestDispatcher from \"./request_dispatcher\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport \"./query_adapter\";\r\nvar ANONYMOUS_KEY_NAME = \"5d46402c-7899-4ea9-bd81-8b73c47c7683\";\r\nvar expandKeyType = (key, keyType) => ({\r\n    [key]: keyType\r\n});\r\nvar mergeFieldTypesWithKeyType = (fieldTypes, keyType) => {\r\n    var result = {};\r\n    for (var field in fieldTypes) {\r\n        result[field] = fieldTypes[field]\r\n    }\r\n    for (var keyName in keyType) {\r\n        if (keyName in result) {\r\n            if (result[keyName] !== keyType[keyName]) {\r\n                errors.log(\"W4001\", keyName)\r\n            }\r\n        } else {\r\n            result[keyName] = keyType[keyName]\r\n        }\r\n    }\r\n    return result\r\n};\r\nvar ODataStore = Store.inherit({\r\n    ctor(options) {\r\n        this.callBase(options);\r\n        this._requestDispatcher = new RequestDispatcher(options);\r\n        var key = this.key();\r\n        var fieldTypes = options.fieldTypes;\r\n        var keyType = options.keyType;\r\n        if (keyType) {\r\n            var keyTypeIsString = \"string\" === typeof keyType;\r\n            if (!key) {\r\n                key = keyTypeIsString ? ANONYMOUS_KEY_NAME : Object.keys(keyType);\r\n                this._legacyAnonymousKey = key\r\n            }\r\n            if (keyTypeIsString) {\r\n                keyType = expandKeyType(key, keyType)\r\n            }\r\n            fieldTypes = mergeFieldTypesWithKeyType(fieldTypes, keyType)\r\n        }\r\n        this._fieldTypes = fieldTypes || {};\r\n        if (2 === this.version()) {\r\n            this._updateMethod = \"MERGE\"\r\n        } else {\r\n            this._updateMethod = \"PATCH\"\r\n        }\r\n    },\r\n    _customLoadOptions: () => [\"expand\", \"customQueryParams\"],\r\n    _byKeyImpl(key, extraOptions) {\r\n        var params = {};\r\n        if (extraOptions) {\r\n            params.$expand = generateExpand(this.version(), extraOptions.expand, extraOptions.select) || void 0;\r\n            params.$select = generateSelect(this.version(), extraOptions.select) || void 0\r\n        }\r\n        return this._requestDispatcher.sendRequest(this._byKeyUrl(key), \"GET\", params)\r\n    },\r\n    createQuery(loadOptions) {\r\n        var _loadOptions$urlOverr;\r\n        var url;\r\n        var queryOptions = {\r\n            adapter: \"odata\",\r\n            beforeSend: this._requestDispatcher.beforeSend,\r\n            errorHandler: this._errorHandler,\r\n            jsonp: this._requestDispatcher.jsonp,\r\n            version: this._requestDispatcher.version,\r\n            withCredentials: this._requestDispatcher._withCredentials,\r\n            expand: null === loadOptions || void 0 === loadOptions ? void 0 : loadOptions.expand,\r\n            requireTotalCount: null === loadOptions || void 0 === loadOptions ? void 0 : loadOptions.requireTotalCount,\r\n            deserializeDates: this._requestDispatcher._deserializeDates,\r\n            fieldTypes: this._fieldTypes\r\n        };\r\n        url = null !== (_loadOptions$urlOverr = null === loadOptions || void 0 === loadOptions ? void 0 : loadOptions.urlOverride) && void 0 !== _loadOptions$urlOverr ? _loadOptions$urlOverr : this._requestDispatcher.url;\r\n        if (isDefined(this._requestDispatcher.filterToLower)) {\r\n            queryOptions.filterToLower = this._requestDispatcher.filterToLower\r\n        }\r\n        if (null !== loadOptions && void 0 !== loadOptions && loadOptions.customQueryParams) {\r\n            var params = escapeServiceOperationParams(null === loadOptions || void 0 === loadOptions ? void 0 : loadOptions.customQueryParams, this.version());\r\n            if (4 === this.version()) {\r\n                url = formatFunctionInvocationUrl(url, params)\r\n            } else {\r\n                queryOptions.params = params\r\n            }\r\n        }\r\n        return query(url, queryOptions)\r\n    },\r\n    _insertImpl(values) {\r\n        this._requireKey();\r\n        var d = new Deferred;\r\n        when(this._requestDispatcher.sendRequest(this._requestDispatcher.url, \"POST\", null, values)).done(serverResponse => d.resolve(serverResponse && !config().useLegacyStoreResult ? serverResponse : values, this.keyOf(serverResponse))).fail(d.reject);\r\n        return d.promise()\r\n    },\r\n    _updateImpl(key, values) {\r\n        var d = new Deferred;\r\n        when(this._requestDispatcher.sendRequest(this._byKeyUrl(key), this._updateMethod, null, values)).done(serverResponse => config().useLegacyStoreResult ? d.resolve(key, values) : d.resolve(serverResponse || values, key)).fail(d.reject);\r\n        return d.promise()\r\n    },\r\n    _removeImpl(key) {\r\n        var d = new Deferred;\r\n        when(this._requestDispatcher.sendRequest(this._byKeyUrl(key), \"DELETE\")).done(() => d.resolve(key)).fail(d.reject);\r\n        return d.promise()\r\n    },\r\n    _convertKey(value) {\r\n        var result = value;\r\n        var fieldTypes = this._fieldTypes;\r\n        var key = this.key() || this._legacyAnonymousKey;\r\n        if (Array.isArray(key)) {\r\n            result = {};\r\n            for (var i = 0; i < key.length; i++) {\r\n                var keyName = key[i];\r\n                result[keyName] = convertPrimitiveValue(fieldTypes[keyName], value[keyName])\r\n            }\r\n        } else if (fieldTypes[key]) {\r\n            result = convertPrimitiveValue(fieldTypes[key], value)\r\n        }\r\n        return result\r\n    },\r\n    _byKeyUrl(value) {\r\n        var baseUrl = this._requestDispatcher.url;\r\n        var convertedKey = this._convertKey(value);\r\n        return \"\".concat(baseUrl, \"(\").concat(encodeURIComponent(serializeKey(convertedKey, this.version())), \")\")\r\n    },\r\n    version() {\r\n        return this._requestDispatcher.version\r\n    }\r\n}, \"odata\");\r\nexport default ODataStore;\r\n","/**\r\n * DevExtreme (esm/ui/shared/filtering.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDate,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nvar DEFAULT_DATE_INTERVAL = [\"year\", \"month\", \"day\"];\r\nvar DEFAULT_DATETIME_INTERVAL = [\"year\", \"month\", \"day\", \"hour\", \"minute\"];\r\nvar isDateType = function(dataType) {\r\n    return \"date\" === dataType || \"datetime\" === dataType\r\n};\r\nvar getGroupInterval = function(column) {\r\n    var index;\r\n    var result = [];\r\n    var dateIntervals = [\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\"];\r\n    var groupInterval = column.headerFilter && column.headerFilter.groupInterval;\r\n    var interval = \"quarter\" === groupInterval ? \"month\" : groupInterval;\r\n    if (isDateType(column.dataType) && null !== groupInterval) {\r\n        result = \"datetime\" === column.dataType ? DEFAULT_DATETIME_INTERVAL : DEFAULT_DATE_INTERVAL;\r\n        index = inArray(interval, dateIntervals);\r\n        if (index >= 0) {\r\n            result = dateIntervals.slice(0, index);\r\n            result.push(groupInterval);\r\n            return result\r\n        }\r\n        return result\r\n    } else if (isDefined(groupInterval)) {\r\n        return Array.isArray(groupInterval) ? groupInterval : [groupInterval]\r\n    }\r\n};\r\nexport default (function() {\r\n    var getFilterSelector = function(column, target) {\r\n        var selector = column.dataField || column.selector;\r\n        if (\"search\" === target) {\r\n            selector = column.displayField || column.calculateDisplayValue || selector\r\n        }\r\n        return selector\r\n    };\r\n    var getFilterExpressionByRange = function(filterValue, target) {\r\n        var endFilterValue;\r\n        var startFilterExpression;\r\n        var endFilterExpression;\r\n        var selector = getFilterSelector(this, target);\r\n        if (Array.isArray(filterValue) && isDefined(filterValue[0]) && isDefined(filterValue[1])) {\r\n            startFilterExpression = [selector, \">=\", filterValue[0]];\r\n            endFilterExpression = [selector, \"<=\", filterValue[1]];\r\n            if (isDateType(this.dataType) && (date = filterValue[1], date.getHours() + date.getMinutes() + date.getSeconds() + date.getMilliseconds() < 1)) {\r\n                endFilterValue = new Date(filterValue[1].getTime());\r\n                if (\"date\" === this.dataType) {\r\n                    endFilterValue.setDate(filterValue[1].getDate() + 1)\r\n                }\r\n                endFilterExpression = [selector, \"<\", endFilterValue]\r\n            }\r\n            return [startFilterExpression, \"and\", endFilterExpression]\r\n        }\r\n        var date\r\n    };\r\n    var getFilterExpressionForDate = function(filterValue, selectedFilterOperation, target) {\r\n        var dateStart;\r\n        var dateEnd;\r\n        var dateInterval;\r\n        var values = function(dateValue) {\r\n            if (isDate(dateValue)) {\r\n                return [dateValue.getFullYear(), dateValue.getMonth(), dateValue.getDate(), dateValue.getHours(), dateValue.getMinutes(), dateValue.getSeconds()]\r\n            }\r\n            return map((\"\" + dateValue).split(\"/\"), (function(value, index) {\r\n                return 1 === index ? Number(value) - 1 : Number(value)\r\n            }))\r\n        }(filterValue);\r\n        var selector = getFilterSelector(this, target);\r\n        if (\"headerFilter\" === target) {\r\n            dateInterval = getGroupInterval(this)[values.length - 1]\r\n        } else if (\"datetime\" === this.dataType) {\r\n            dateInterval = \"minute\"\r\n        }\r\n        switch (dateInterval) {\r\n            case \"year\":\r\n                dateStart = new Date(values[0], 0, 1);\r\n                dateEnd = new Date(values[0] + 1, 0, 1);\r\n                break;\r\n            case \"month\":\r\n                dateStart = new Date(values[0], values[1], 1);\r\n                dateEnd = new Date(values[0], values[1] + 1, 1);\r\n                break;\r\n            case \"quarter\":\r\n                dateStart = new Date(values[0], 3 * values[1], 1);\r\n                dateEnd = new Date(values[0], 3 * values[1] + 3, 1);\r\n                break;\r\n            case \"hour\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3] + 1);\r\n                break;\r\n            case \"minute\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3], values[4]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3], values[4] + 1);\r\n                break;\r\n            case \"second\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3], values[4], values[5]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3], values[4], values[5] + 1);\r\n                break;\r\n            default:\r\n                dateStart = new Date(values[0], values[1], values[2]);\r\n                dateEnd = new Date(values[0], values[1], values[2] + 1)\r\n        }\r\n        switch (selectedFilterOperation) {\r\n            case \"<\":\r\n                return [selector, \"<\", dateStart];\r\n            case \"<=\":\r\n                return [selector, \"<\", dateEnd];\r\n            case \">\":\r\n                return [selector, \">=\", dateEnd];\r\n            case \">=\":\r\n                return [selector, \">=\", dateStart];\r\n            case \"<>\":\r\n                return [\r\n                    [selector, \"<\", dateStart], \"or\", [selector, \">=\", dateEnd]\r\n                ];\r\n            default:\r\n                return [\r\n                    [selector, \">=\", dateStart], \"and\", [selector, \"<\", dateEnd]\r\n                ]\r\n        }\r\n    };\r\n    var getFilterExpressionForNumber = function(filterValue, selectedFilterOperation, target) {\r\n        var selector = getFilterSelector(this, target);\r\n        var groupInterval = getGroupInterval(this);\r\n        if (\"headerFilter\" === target && groupInterval && isDefined(filterValue)) {\r\n            var values = (\"\" + filterValue).split(\"/\");\r\n            var value = Number(values[values.length - 1]);\r\n            var interval = groupInterval[values.length - 1];\r\n            var startFilterValue = [selector, \">=\", value];\r\n            var endFilterValue = [selector, \"<\", value + interval];\r\n            var condition = [startFilterValue, \"and\", endFilterValue];\r\n            return condition\r\n        }\r\n        return [selector, selectedFilterOperation || \"=\", filterValue]\r\n    };\r\n    return {\r\n        defaultCalculateFilterExpression: function(filterValue, selectedFilterOperation, target) {\r\n            var column = this;\r\n            var selector = getFilterSelector(column, target);\r\n            var isSearchByDisplayValue = column.calculateDisplayValue && \"search\" === target;\r\n            var dataType = isSearchByDisplayValue && column.lookup && column.lookup.dataType || column.dataType;\r\n            var filter = null;\r\n            if ((\"headerFilter\" === target || \"filterBuilder\" === target) && null === filterValue) {\r\n                filter = [selector, selectedFilterOperation || \"=\", null];\r\n                if (\"string\" === dataType) {\r\n                    filter = [filter, \"=\" === selectedFilterOperation ? \"or\" : \"and\", [selector, selectedFilterOperation || \"=\", \"\"]]\r\n                }\r\n            } else if (\"string\" === dataType && (!column.lookup || isSearchByDisplayValue)) {\r\n                filter = [selector, selectedFilterOperation || \"contains\", filterValue]\r\n            } else if (\"between\" === selectedFilterOperation) {\r\n                return getFilterExpressionByRange.apply(column, [filterValue, target])\r\n            } else if (isDateType(dataType) && isDefined(filterValue)) {\r\n                return getFilterExpressionForDate.apply(column, arguments)\r\n            } else if (\"number\" === dataType) {\r\n                return getFilterExpressionForNumber.apply(column, arguments)\r\n            } else if (\"object\" !== dataType) {\r\n                filter = [selector, selectedFilterOperation || \"=\", filterValue]\r\n            }\r\n            return filter\r\n        },\r\n        getGroupInterval: getGroupInterval\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    isDefined,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport sharedFiltering from \"../shared/filtering\";\r\nimport {\r\n    format\r\n} from \"../../core/utils/string\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    toComparable\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport LoadPanel from \"../load_panel\";\r\nimport {\r\n    normalizeSortingInfo as normalizeSortingInfoUtility\r\n} from \"../../data/utils\";\r\nimport formatHelper from \"../../format_helper\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nvar DATAGRID_SELECTION_DISABLED_CLASS = \"dx-selection-disabled\";\r\nvar DATAGRID_GROUP_OPENED_CLASS = \"dx-datagrid-group-opened\";\r\nvar DATAGRID_GROUP_CLOSED_CLASS = \"dx-datagrid-group-closed\";\r\nvar DATAGRID_EXPAND_CLASS = \"dx-datagrid-expand\";\r\nvar NO_DATA_CLASS = \"nodata\";\r\nvar SCROLLING_MODE_INFINITE = \"infinite\";\r\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\nvar SCROLLING_MODE_OPTION = \"scrolling.mode\";\r\nvar ROW_RENDERING_MODE_OPTION = \"scrolling.rowRenderingMode\";\r\nvar DATE_INTERVAL_SELECTORS = {\r\n    year: function(value) {\r\n        return value && value.getFullYear()\r\n    },\r\n    month: function(value) {\r\n        return value && value.getMonth() + 1\r\n    },\r\n    day: function(value) {\r\n        return value && value.getDate()\r\n    },\r\n    quarter: function(value) {\r\n        return value && Math.floor(value.getMonth() / 3) + 1\r\n    },\r\n    hour: function(value) {\r\n        return value && value.getHours()\r\n    },\r\n    minute: function(value) {\r\n        return value && value.getMinutes()\r\n    },\r\n    second: function(value) {\r\n        return value && value.getSeconds()\r\n    }\r\n};\r\nvar getIntervalSelector = function() {\r\n    var data = arguments[1];\r\n    var value = this.calculateCellValue(data);\r\n    if (!isDefined(value)) {\r\n        return null\r\n    } else if (isDateType(this.dataType)) {\r\n        var nameIntervalSelector = arguments[0];\r\n        return DATE_INTERVAL_SELECTORS[nameIntervalSelector](value)\r\n    } else if (\"number\" === this.dataType) {\r\n        var groupInterval = arguments[0];\r\n        return Math.floor(Number(value) / groupInterval) * groupInterval\r\n    }\r\n};\r\nvar equalSelectors = function(selector1, selector2) {\r\n    if (isFunction(selector1) && isFunction(selector2)) {\r\n        if (selector1.originalCallback && selector2.originalCallback) {\r\n            return selector1.originalCallback === selector2.originalCallback && selector1.columnIndex === selector2.columnIndex\r\n        }\r\n    }\r\n    return selector1 === selector2\r\n};\r\n\r\nfunction isDateType(dataType) {\r\n    return \"date\" === dataType || \"datetime\" === dataType\r\n}\r\nvar setEmptyText = function($container) {\r\n    $container.get(0).textContent = \"\\xa0\"\r\n};\r\nvar normalizeSortingInfo = function(sort) {\r\n    sort = sort || [];\r\n    var result = normalizeSortingInfoUtility(sort);\r\n    for (var i = 0; i < sort.length; i++) {\r\n        if (sort && sort[i] && void 0 !== sort[i].isExpanded) {\r\n            result[i].isExpanded = sort[i].isExpanded\r\n        }\r\n        if (sort && sort[i] && void 0 !== sort[i].groupInterval) {\r\n            result[i].groupInterval = sort[i].groupInterval\r\n        }\r\n    }\r\n    return result\r\n};\r\nvar formatValue = function(value, options) {\r\n    var valueText = formatHelper.format(value, options.format) || value && value.toString() || \"\";\r\n    var formatObject = {\r\n        value: value,\r\n        valueText: options.getDisplayFormat ? options.getDisplayFormat(valueText) : valueText,\r\n        target: options.target || \"row\",\r\n        groupInterval: options.groupInterval\r\n    };\r\n    return options.customizeText ? options.customizeText.call(options, formatObject) : formatObject.valueText\r\n};\r\nvar getSummaryText = function(summaryItem, summaryTexts) {\r\n    var displayFormat = summaryItem.displayFormat || summaryItem.columnCaption && summaryTexts[summaryItem.summaryType + \"OtherColumn\"] || summaryTexts[summaryItem.summaryType];\r\n    return formatValue(summaryItem.value, {\r\n        format: summaryItem.valueFormat,\r\n        getDisplayFormat: function(valueText) {\r\n            return displayFormat ? format(displayFormat, valueText, summaryItem.columnCaption) : valueText\r\n        },\r\n        customizeText: summaryItem.customizeText\r\n    })\r\n};\r\nvar getWidgetInstance = function($element) {\r\n    var editorData = $element.data && $element.data();\r\n    var dxComponents = editorData && editorData.dxComponents;\r\n    var widgetName = dxComponents && dxComponents[0];\r\n    return widgetName && editorData[widgetName]\r\n};\r\nvar equalFilterParameters = function equalFilterParameters(filter1, filter2) {\r\n    if (Array.isArray(filter1) && Array.isArray(filter2)) {\r\n        if (filter1.length !== filter2.length) {\r\n            return false\r\n        } else {\r\n            for (var i = 0; i < filter1.length; i++) {\r\n                if (!equalFilterParameters(filter1[i], filter2[i])) {\r\n                    return false\r\n                }\r\n            }\r\n        }\r\n        return true\r\n    } else if (isFunction(filter1) && filter1.columnIndex >= 0 && isFunction(filter2) && filter2.columnIndex >= 0) {\r\n        return filter1.columnIndex === filter2.columnIndex && toComparable(filter1.filterValue) === toComparable(filter2.filterValue)\r\n    } else {\r\n        return toComparable(filter1) == toComparable(filter2)\r\n    }\r\n};\r\nexport default {\r\n    renderNoDataText: function($element) {\r\n        $element = $element || this.element();\r\n        if (!$element) {\r\n            return\r\n        }\r\n        var noDataClass = this.addWidgetPrefix(NO_DATA_CLASS);\r\n        var noDataElement = $element.find(\".\" + noDataClass).last();\r\n        var isVisible = this._dataController.isEmpty();\r\n        var isLoading = this._dataController.isLoading();\r\n        if (!noDataElement.length) {\r\n            noDataElement = $(\"<span>\").addClass(noDataClass).appendTo($element)\r\n        }\r\n        if (isVisible && !isLoading) {\r\n            noDataElement.removeClass(\"dx-hidden\").text(this._getNoDataText())\r\n        } else {\r\n            noDataElement.addClass(\"dx-hidden\")\r\n        }\r\n    },\r\n    renderLoadPanel: function($element, $container, isLocalStore) {\r\n        var loadPanelOptions;\r\n        this._loadPanel && this._loadPanel.$element().remove();\r\n        loadPanelOptions = this.option(\"loadPanel\");\r\n        if (loadPanelOptions && (\"auto\" === loadPanelOptions.enabled ? !isLocalStore : loadPanelOptions.enabled)) {\r\n            loadPanelOptions = extend({\r\n                shading: false,\r\n                message: loadPanelOptions.text,\r\n                container: $container\r\n            }, loadPanelOptions);\r\n            this._loadPanel = this._createComponent($(\"<div>\").appendTo($container), LoadPanel, loadPanelOptions)\r\n        } else {\r\n            this._loadPanel = null\r\n        }\r\n    },\r\n    calculateLoadPanelPosition($element) {\r\n        var $window = $(getWindow());\r\n        if (getHeight($element) > getHeight($window)) {\r\n            return {\r\n                of: $window,\r\n                boundary: $element,\r\n                collision: \"fit\"\r\n            }\r\n        }\r\n        return {\r\n            of: $element\r\n        }\r\n    },\r\n    getIndexByKey: function(key, items, keyName) {\r\n        var index = -1;\r\n        if (void 0 !== key && Array.isArray(items)) {\r\n            keyName = arguments.length <= 2 ? \"key\" : keyName;\r\n            for (var i = 0; i < items.length; i++) {\r\n                var item = isDefined(keyName) ? items[i][keyName] : items[i];\r\n                if (equalByValue(key, item)) {\r\n                    index = i;\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        return index\r\n    },\r\n    combineFilters: function(filters, operation) {\r\n        var resultFilter = [];\r\n        operation = operation || \"and\";\r\n        for (var i = 0; i < filters.length; i++) {\r\n            var _filters$i;\r\n            if (!filters[i]) {\r\n                continue\r\n            }\r\n            if (1 === (null === (_filters$i = filters[i]) || void 0 === _filters$i ? void 0 : _filters$i.length) && \"!\" === filters[i][0]) {\r\n                if (\"and\" === operation) {\r\n                    return [\"!\"]\r\n                } else if (\"or\" === operation) {\r\n                    continue\r\n                }\r\n            }\r\n            if (resultFilter.length) {\r\n                resultFilter.push(operation)\r\n            }\r\n            resultFilter.push(filters[i])\r\n        }\r\n        if (1 === resultFilter.length) {\r\n            resultFilter = resultFilter[0]\r\n        }\r\n        if (resultFilter.length) {\r\n            return resultFilter\r\n        }\r\n    },\r\n    checkChanges: function(changes, changeNames) {\r\n        var changesWithChangeNamesCount = 0;\r\n        for (var i = 0; i < changeNames.length; i++) {\r\n            if (changes[changeNames[i]]) {\r\n                changesWithChangeNamesCount++\r\n            }\r\n        }\r\n        return changes.length && changes.length === changesWithChangeNamesCount\r\n    },\r\n    equalFilterParameters: equalFilterParameters,\r\n    proxyMethod: function(instance, methodName, defaultResult) {\r\n        if (!instance[methodName]) {\r\n            instance[methodName] = function() {\r\n                var dataSource = this._dataSource;\r\n                return dataSource ? dataSource[methodName].apply(dataSource, arguments) : defaultResult\r\n            }\r\n        }\r\n    },\r\n    formatValue: formatValue,\r\n    getFormatOptionsByColumn: function(column, target) {\r\n        return {\r\n            format: column.format,\r\n            getDisplayFormat: column.getDisplayFormat,\r\n            customizeText: column.customizeText,\r\n            target: target,\r\n            trueText: column.trueText,\r\n            falseText: column.falseText\r\n        }\r\n    },\r\n    getDisplayValue: function(column, value, data, rowType) {\r\n        if (column.displayValueMap && void 0 !== column.displayValueMap[value]) {\r\n            return column.displayValueMap[value]\r\n        } else if (column.calculateDisplayValue && data && \"group\" !== rowType) {\r\n            return column.calculateDisplayValue(data)\r\n        } else if (column.lookup && !(\"group\" === rowType && (column.calculateGroupValue || column.calculateDisplayValue))) {\r\n            return column.lookup.calculateCellValue(value)\r\n        }\r\n        return value\r\n    },\r\n    getGroupRowSummaryText: function(summaryItems, summaryTexts) {\r\n        var result = \"(\";\r\n        for (var i = 0; i < summaryItems.length; i++) {\r\n            var summaryItem = summaryItems[i];\r\n            result += (i > 0 ? \", \" : \"\") + getSummaryText(summaryItem, summaryTexts)\r\n        }\r\n        return result + \")\"\r\n    },\r\n    getSummaryText: getSummaryText,\r\n    normalizeSortingInfo: normalizeSortingInfo,\r\n    getFormatByDataType: function(dataType) {\r\n        switch (dataType) {\r\n            case \"date\":\r\n                return \"shortDate\";\r\n            case \"datetime\":\r\n                return \"shortDateShortTime\"\r\n        }\r\n    },\r\n    getHeaderFilterGroupParameters: function(column, remoteGrouping) {\r\n        var result = [];\r\n        var dataField = column.dataField || column.name;\r\n        var groupInterval = sharedFiltering.getGroupInterval(column);\r\n        if (groupInterval) {\r\n            each(groupInterval, (function(index, interval) {\r\n                result.push(remoteGrouping ? {\r\n                    selector: dataField,\r\n                    groupInterval: interval,\r\n                    isExpanded: index < groupInterval.length - 1\r\n                } : getIntervalSelector.bind(column, interval))\r\n            }));\r\n            return result\r\n        }\r\n        if (remoteGrouping) {\r\n            result = [{\r\n                selector: dataField,\r\n                isExpanded: false\r\n            }]\r\n        } else {\r\n            result = function(data) {\r\n                var result = column.calculateCellValue(data);\r\n                if (void 0 === result || \"\" === result) {\r\n                    result = null\r\n                }\r\n                return result\r\n            };\r\n            if (column.sortingMethod) {\r\n                result = [{\r\n                    selector: result,\r\n                    compare: column.sortingMethod.bind(column)\r\n                }]\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    equalSortParameters(sortParameters1, sortParameters2, ignoreIsExpanded) {\r\n        sortParameters1 = normalizeSortingInfo(sortParameters1);\r\n        sortParameters2 = normalizeSortingInfo(sortParameters2);\r\n        if (Array.isArray(sortParameters1) && Array.isArray(sortParameters2)) {\r\n            if (sortParameters1.length !== sortParameters2.length) {\r\n                return false\r\n            } else {\r\n                for (var i = 0; i < sortParameters1.length; i++) {\r\n                    if (!equalSelectors(sortParameters1[i].selector, sortParameters2[i].selector) || sortParameters1[i].desc !== sortParameters2[i].desc || sortParameters1[i].groupInterval !== sortParameters2[i].groupInterval || !ignoreIsExpanded && Boolean(sortParameters1[i].isExpanded) !== Boolean(sortParameters2[i].isExpanded)) {\r\n                        return false\r\n                    }\r\n                }\r\n            }\r\n            return true\r\n        } else {\r\n            return (!sortParameters1 || !sortParameters1.length) === (!sortParameters2 || !sortParameters2.length)\r\n        }\r\n    },\r\n    getPointsByColumns: function(items, pointCreated, isVertical, startColumnIndex) {\r\n        var cellsLength = items.length;\r\n        var notCreatePoint = false;\r\n        var item;\r\n        var offset;\r\n        var columnIndex = startColumnIndex || 0;\r\n        var result = [];\r\n        var rtlEnabled;\r\n        for (var i = 0; i <= cellsLength; i++) {\r\n            if (i < cellsLength) {\r\n                item = items.eq(i);\r\n                offset = item.offset();\r\n                rtlEnabled = \"rtl\" === item.css(\"direction\")\r\n            }\r\n            var point = {\r\n                index: columnIndex,\r\n                x: offset ? offset.left + (!isVertical && rtlEnabled ^ i === cellsLength ? getBoundingRect(item[0]).width : 0) : 0,\r\n                y: offset ? offset.top + (isVertical && i === cellsLength ? getBoundingRect(item[0]).height : 0) : 0,\r\n                columnIndex: columnIndex\r\n            };\r\n            if (!isVertical && i > 0) {\r\n                var prevItemOffset = items.eq(i - 1).offset();\r\n                if (prevItemOffset.top < point.y) {\r\n                    point.y = prevItemOffset.top\r\n                }\r\n            }\r\n            if (pointCreated) {\r\n                notCreatePoint = pointCreated(point)\r\n            }\r\n            if (!notCreatePoint) {\r\n                result.push(point)\r\n            }\r\n            columnIndex++\r\n        }\r\n        return result\r\n    },\r\n    getExpandCellTemplate: function() {\r\n        return {\r\n            allowRenderToDetachedContainer: true,\r\n            render: function(container, options) {\r\n                var $container = $(container);\r\n                if (isDefined(options.value) && !(options.data && options.data.isContinuation) && !options.row.isNewRow) {\r\n                    var rowsView = options.component.getView(\"rowsView\");\r\n                    $container.addClass(DATAGRID_EXPAND_CLASS).addClass(DATAGRID_SELECTION_DISABLED_CLASS);\r\n                    $(\"<div>\").addClass(options.value ? DATAGRID_GROUP_OPENED_CLASS : DATAGRID_GROUP_CLOSED_CLASS).appendTo($container);\r\n                    rowsView.setAria(\"label\", options.value ? rowsView.localize(\"dxDataGrid-ariaCollapse\") : rowsView.localize(\"dxDataGrid-ariaExpand\"), $container)\r\n                } else {\r\n                    setEmptyText($container)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    setEmptyText: setEmptyText,\r\n    isDateType: isDateType,\r\n    getSelectionRange: function(focusedElement) {\r\n        try {\r\n            if (focusedElement) {\r\n                return {\r\n                    selectionStart: focusedElement.selectionStart,\r\n                    selectionEnd: focusedElement.selectionEnd\r\n                }\r\n            }\r\n        } catch (e) {}\r\n        return {}\r\n    },\r\n    setSelectionRange: function(focusedElement, selectionRange) {\r\n        try {\r\n            if (focusedElement && focusedElement.setSelectionRange) {\r\n                focusedElement.setSelectionRange(selectionRange.selectionStart, selectionRange.selectionEnd)\r\n            }\r\n        } catch (e) {}\r\n    },\r\n    focusAndSelectElement: function(component, $element) {\r\n        var isFocused = $element.is(\":focus\");\r\n        eventsEngine.trigger($element, \"focus\");\r\n        var isSelectTextOnEditingStart = component.option(\"editing.selectTextOnEditStart\");\r\n        var element = $element.get(0);\r\n        if (!isFocused && isSelectTextOnEditingStart && $element.is(\".dx-texteditor-input\") && !$element.is(\"[readonly]\")) {\r\n            var editor = getWidgetInstance($element.closest(\".dx-texteditor\"));\r\n            when(editor && editor._loadItemDeferred).done((function() {\r\n                element.select()\r\n            }))\r\n        }\r\n    },\r\n    getWidgetInstance: getWidgetInstance,\r\n    getLastResizableColumnIndex: function(columns, resultWidths) {\r\n        var hasResizableColumns = columns.some(column => column && !column.command && !column.fixed && false !== column.allowResizing);\r\n        var lastColumnIndex;\r\n        for (lastColumnIndex = columns.length - 1; columns[lastColumnIndex]; lastColumnIndex--) {\r\n            var column = columns[lastColumnIndex];\r\n            var width = resultWidths && resultWidths[lastColumnIndex];\r\n            var allowResizing = !hasResizableColumns || false !== column.allowResizing;\r\n            if (!column.command && !column.fixed && \"adaptiveHidden\" !== width && allowResizing) {\r\n                break\r\n            }\r\n        }\r\n        return lastColumnIndex\r\n    },\r\n    isElementInCurrentGrid: function(controller, $element) {\r\n        if ($element && $element.length) {\r\n            var $grid = $element.closest(\".\" + controller.getWidgetContainerClass()).parent();\r\n            return $grid.is(controller.component.$element())\r\n        }\r\n        return false\r\n    },\r\n    isVirtualRowRendering: function(that) {\r\n        var rowRenderingMode = that.option(ROW_RENDERING_MODE_OPTION);\r\n        var isVirtualMode = that.option(SCROLLING_MODE_OPTION) === SCROLLING_MODE_VIRTUAL;\r\n        var isAppendMode = that.option(SCROLLING_MODE_OPTION) === SCROLLING_MODE_INFINITE;\r\n        if (false === that.option(LEGACY_SCROLLING_MODE) && (isVirtualMode || isAppendMode)) {\r\n            return true\r\n        }\r\n        return rowRenderingMode === SCROLLING_MODE_VIRTUAL\r\n    },\r\n    getPixelRatio: function(window) {\r\n        return window.devicePixelRatio || 1\r\n    },\r\n    getContentHeightLimit(browser) {\r\n        if (browser.mozilla) {\r\n            return 8e6\r\n        }\r\n        return 15e6 / this.getPixelRatio(getWindow())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.modules.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Class from \"../../core/class\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    grep\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nvar WIDGET_WITH_LEGACY_CONTAINER_NAME = \"dxDataGrid\";\r\nvar ModuleItem = Class.inherit({\r\n    _endUpdateCore: function() {},\r\n    ctor: function(component) {\r\n        var that = this;\r\n        that._updateLockCount = 0;\r\n        that.component = component;\r\n        that._actions = {};\r\n        that._actionConfigs = {};\r\n        each(this.callbackNames() || [], (function(index, name) {\r\n            var flags = that.callbackFlags(name) || {};\r\n            flags.unique = true, flags.syncStrategy = true;\r\n            that[this] = Callbacks(flags)\r\n        }))\r\n    },\r\n    init: function() {},\r\n    callbackNames: function() {},\r\n    callbackFlags: function() {},\r\n    publicMethods: function() {},\r\n    beginUpdate: function() {\r\n        this._updateLockCount++\r\n    },\r\n    endUpdate: function() {\r\n        if (this._updateLockCount > 0) {\r\n            this._updateLockCount--;\r\n            if (!this._updateLockCount) {\r\n                this._endUpdateCore()\r\n            }\r\n        }\r\n    },\r\n    option: function(name) {\r\n        var component = this.component;\r\n        var optionCache = component._optionCache;\r\n        if (1 === arguments.length && optionCache) {\r\n            if (!(name in optionCache)) {\r\n                optionCache[name] = component.option(name)\r\n            }\r\n            return optionCache[name]\r\n        }\r\n        return component.option.apply(component, arguments)\r\n    },\r\n    _silentOption: function(name, value) {\r\n        var component = this.component;\r\n        var optionCache = component._optionCache;\r\n        if (optionCache) {\r\n            optionCache[name] = value\r\n        }\r\n        return component._setOptionWithoutOptionChange(name, value)\r\n    },\r\n    localize: function(name) {\r\n        var optionCache = this.component._optionCache;\r\n        if (optionCache) {\r\n            if (!(name in optionCache)) {\r\n                optionCache[name] = messageLocalization.format(name)\r\n            }\r\n            return optionCache[name]\r\n        }\r\n        return messageLocalization.format(name)\r\n    },\r\n    on: function() {\r\n        return this.component.on.apply(this.component, arguments)\r\n    },\r\n    off: function() {\r\n        return this.component.off.apply(this.component, arguments)\r\n    },\r\n    optionChanged: function(args) {\r\n        if (args.name in this._actions) {\r\n            this.createAction(args.name, this._actionConfigs[args.name]);\r\n            args.handled = true\r\n        }\r\n    },\r\n    getAction: function(actionName) {\r\n        return this._actions[actionName]\r\n    },\r\n    setAria: function(name, value, $target) {\r\n        var target = $target.get(0);\r\n        var prefix = \"role\" !== name && \"id\" !== name ? \"aria-\" : \"\";\r\n        if (target.setAttribute) {\r\n            target.setAttribute(prefix + name, value)\r\n        } else {\r\n            $target.attr(prefix + name, value)\r\n        }\r\n    },\r\n    _createComponent: function() {\r\n        return this.component._createComponent.apply(this.component, arguments)\r\n    },\r\n    getController: function(name) {\r\n        return this.component._controllers[name]\r\n    },\r\n    createAction: function(actionName, config) {\r\n        if (isFunction(actionName)) {\r\n            var action = this.component._createAction(actionName.bind(this), config);\r\n            return function(e) {\r\n                action({\r\n                    event: e\r\n                })\r\n            }\r\n        } else {\r\n            this._actions[actionName] = this.component._createActionByOption(actionName, config);\r\n            this._actionConfigs[actionName] = config\r\n        }\r\n    },\r\n    executeAction: function(actionName, options) {\r\n        var action = this._actions[actionName];\r\n        return action && action(options)\r\n    },\r\n    dispose: function() {\r\n        var that = this;\r\n        each(that.callbackNames() || [], (function() {\r\n            that[this].empty()\r\n        }))\r\n    },\r\n    addWidgetPrefix: function(className) {\r\n        var componentName = this.component.NAME;\r\n        return \"dx-\" + componentName.slice(2).toLowerCase() + (className ? \"-\" + className : \"\")\r\n    },\r\n    getWidgetContainerClass: function() {\r\n        var containerName = this.component.NAME === WIDGET_WITH_LEGACY_CONTAINER_NAME ? null : \"container\";\r\n        return this.addWidgetPrefix(containerName)\r\n    }\r\n});\r\nvar Controller = ModuleItem;\r\nvar ViewController = Controller.inherit({\r\n    getView: function(name) {\r\n        return this.component._views[name]\r\n    },\r\n    getViews: function() {\r\n        return this.component._views\r\n    }\r\n});\r\nvar View = ModuleItem.inherit({\r\n    _isReady: function() {\r\n        return this.component.isReady()\r\n    },\r\n    _endUpdateCore: function() {\r\n        this.callBase();\r\n        if (!this._isReady() && this._requireReady) {\r\n            this._requireRender = false;\r\n            this.component._requireResize = false\r\n        }\r\n        if (this._requireRender) {\r\n            this._requireRender = false;\r\n            this.render(this._$parent)\r\n        }\r\n    },\r\n    _invalidate: function(requireResize, requireReady) {\r\n        this._requireRender = true;\r\n        this.component._requireResize = hasWindow() && (this.component._requireResize || requireResize);\r\n        this._requireReady = this._requireReady || requireReady\r\n    },\r\n    _renderCore: function() {},\r\n    _resizeCore: function() {},\r\n    _parentElement: function() {\r\n        return this._$parent\r\n    },\r\n    ctor: function(component) {\r\n        this.callBase(component);\r\n        this.renderCompleted = Callbacks();\r\n        this.resizeCompleted = Callbacks()\r\n    },\r\n    element: function() {\r\n        return this._$element\r\n    },\r\n    getElementHeight: function() {\r\n        var $element = this.element();\r\n        if (!$element) {\r\n            return 0\r\n        }\r\n        var marginTop = parseFloat($element.css(\"marginTop\")) || 0;\r\n        var marginBottom = parseFloat($element.css(\"marginBottom\")) || 0;\r\n        var offsetHeight = $element.get(0).offsetHeight;\r\n        return offsetHeight + marginTop + marginBottom\r\n    },\r\n    isVisible: function() {\r\n        return true\r\n    },\r\n    getTemplate: function(name) {\r\n        return this.component._getTemplate(name)\r\n    },\r\n    render: function($parent, options) {\r\n        var $element = this._$element;\r\n        var isVisible = this.isVisible();\r\n        if (!$element && !$parent) {\r\n            return\r\n        }\r\n        this._requireReady = false;\r\n        if (!$element) {\r\n            $element = this._$element = $(\"<div>\").appendTo($parent);\r\n            this._$parent = $parent\r\n        }\r\n        $element.toggleClass(\"dx-hidden\", !isVisible);\r\n        if (isVisible) {\r\n            this.component._optionCache = {};\r\n            this._renderCore(options);\r\n            this.component._optionCache = void 0;\r\n            this.renderCompleted.fire(options)\r\n        }\r\n    },\r\n    resize: function() {\r\n        this.isResizing = true;\r\n        this._resizeCore();\r\n        this.resizeCompleted.fire();\r\n        this.isResizing = false\r\n    },\r\n    focus: function() {\r\n        eventsEngine.trigger(this.element(), \"focus\")\r\n    }\r\n});\r\nvar MODULES_ORDER_MAX_INDEX = 1e6;\r\nvar processModules = function(that, componentClass) {\r\n    var modules = componentClass.modules;\r\n    var modulesOrder = componentClass.modulesOrder;\r\n    var controllerTypes = componentClass.controllerTypes || {};\r\n    var viewTypes = componentClass.viewTypes || {};\r\n    if (!componentClass.controllerTypes) {\r\n        if (modulesOrder) {\r\n            modules.sort((function(module1, module2) {\r\n                var orderIndex1 = inArray(module1.name, modulesOrder);\r\n                var orderIndex2 = inArray(module2.name, modulesOrder);\r\n                if (orderIndex1 < 0) {\r\n                    orderIndex1 = MODULES_ORDER_MAX_INDEX\r\n                }\r\n                if (orderIndex2 < 0) {\r\n                    orderIndex2 = MODULES_ORDER_MAX_INDEX\r\n                }\r\n                return orderIndex1 - orderIndex2\r\n            }))\r\n        }\r\n        each(modules, (function() {\r\n            var controllers = this.controllers;\r\n            var moduleName = this.name;\r\n            var views = this.views;\r\n            controllers && each(controllers, (function(name, type) {\r\n                if (controllerTypes[name]) {\r\n                    throw errors.Error(\"E1001\", moduleName, name)\r\n                } else if (!(type && type.subclassOf && type.subclassOf(Controller))) {\r\n                    type.subclassOf(Controller);\r\n                    throw errors.Error(\"E1002\", moduleName, name)\r\n                }\r\n                controllerTypes[name] = type\r\n            }));\r\n            views && each(views, (function(name, type) {\r\n                if (viewTypes[name]) {\r\n                    throw errors.Error(\"E1003\", moduleName, name)\r\n                } else if (!(type && type.subclassOf && type.subclassOf(View))) {\r\n                    throw errors.Error(\"E1004\", moduleName, name)\r\n                }\r\n                viewTypes[name] = type\r\n            }))\r\n        }));\r\n        each(modules, (function() {\r\n            var extenders = this.extenders;\r\n            if (extenders) {\r\n                extenders.controllers && each(extenders.controllers, (function(name, extender) {\r\n                    if (controllerTypes[name]) {\r\n                        controllerTypes[name] = controllerTypes[name].inherit(extender)\r\n                    }\r\n                }));\r\n                extenders.views && each(extenders.views, (function(name, extender) {\r\n                    if (viewTypes[name]) {\r\n                        viewTypes[name] = viewTypes[name].inherit(extender)\r\n                    }\r\n                }))\r\n            }\r\n        }));\r\n        componentClass.controllerTypes = controllerTypes;\r\n        componentClass.viewTypes = viewTypes\r\n    }\r\n    var createModuleItems = function(moduleTypes) {\r\n        var moduleItems = {};\r\n        each(moduleTypes, (function(name, moduleType) {\r\n            var moduleItem = new moduleType(that);\r\n            moduleItem.name = name;\r\n            ! function(that, name, moduleItem) {\r\n                var publicMethods = moduleItem.publicMethods();\r\n                if (publicMethods) {\r\n                    each(publicMethods, (function(index, methodName) {\r\n                        if (moduleItem[methodName]) {\r\n                            if (!that[methodName]) {\r\n                                that[methodName] = function() {\r\n                                    return moduleItem[methodName].apply(moduleItem, arguments)\r\n                                }\r\n                            } else {\r\n                                throw errors.Error(\"E1005\", methodName)\r\n                            }\r\n                        } else {\r\n                            throw errors.Error(\"E1006\", name, methodName)\r\n                        }\r\n                    }))\r\n                }\r\n            }(that, name, moduleItem);\r\n            moduleItems[name] = moduleItem\r\n        }));\r\n        return moduleItems\r\n    };\r\n    that._controllers = createModuleItems(controllerTypes);\r\n    that._views = createModuleItems(viewTypes)\r\n};\r\nvar callModuleItemsMethod = function(that, methodName, args) {\r\n    args = args || [];\r\n    if (that._controllers) {\r\n        each(that._controllers, (function() {\r\n            this[methodName] && this[methodName].apply(this, args)\r\n        }))\r\n    }\r\n    if (that._views) {\r\n        each(that._views, (function() {\r\n            this[methodName] && this[methodName].apply(this, args)\r\n        }))\r\n    }\r\n};\r\nexport default {\r\n    modules: [],\r\n    View: View,\r\n    ViewController: ViewController,\r\n    Controller: Controller,\r\n    registerModule: function(name, module) {\r\n        var modules = this.modules;\r\n        for (var i = 0; i < modules.length; i++) {\r\n            if (modules[i].name === name) {\r\n                return\r\n            }\r\n        }\r\n        module.name = name;\r\n        modules.push(module);\r\n        delete this.controllerTypes;\r\n        delete this.viewTypes\r\n    },\r\n    registerModulesOrder: function(moduleNames) {\r\n        this.modulesOrder = moduleNames\r\n    },\r\n    unregisterModule: function(name) {\r\n        this.modules = grep(this.modules, (function(module) {\r\n            return module.name !== name\r\n        }));\r\n        delete this.controllerTypes;\r\n        delete this.viewTypes\r\n    },\r\n    processModules: processModules,\r\n    callModuleItemsMethod: callModuleItemsMethod\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\r\nimport modules from \"../grid_core/ui.grid_core.modules\";\r\nexport default _extends({}, modules, gridCoreUtils, {\r\n    modules: []\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_state_mixin.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nvar COLUMN_INDICATORS_CLASS = \"dx-column-indicators\";\r\nvar GROUP_PANEL_ITEM_CLASS = \"dx-group-panel-item\";\r\nexport default {\r\n    _applyColumnState: function(options) {\r\n        var _that$component;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var columnAlignment = this._getColumnAlignment(options.column.alignment, rtlEnabled);\r\n        var parameters = extend(true, {\r\n            columnAlignment: columnAlignment\r\n        }, options);\r\n        var isGroupPanelItem = parameters.rootElement.hasClass(GROUP_PANEL_ITEM_CLASS);\r\n        var $indicatorsContainer = this._createIndicatorContainer(parameters, isGroupPanelItem);\r\n        var $span = $(\"<span>\").addClass(this._getIndicatorClassName(options.name));\r\n        var columnsController = null === (_that$component = this.component) || void 0 === _that$component ? void 0 : _that$component.getController(\"columns\");\r\n        var indicatorAlignment = (null === columnsController || void 0 === columnsController ? void 0 : columnsController.getHeaderContentAlignment(columnAlignment)) || columnAlignment;\r\n        parameters.container = $indicatorsContainer;\r\n        parameters.indicator = $span;\r\n        this._renderIndicator(parameters);\r\n        $indicatorsContainer[(isGroupPanelItem || !options.showColumnLines) && \"left\" === indicatorAlignment ? \"appendTo\" : \"prependTo\"](options.rootElement);\r\n        return $span\r\n    },\r\n    _getIndicatorClassName: noop,\r\n    _getColumnAlignment: function(alignment, rtlEnabled) {\r\n        rtlEnabled = rtlEnabled || this.option(\"rtlEnabled\");\r\n        return alignment && \"center\" !== alignment ? alignment : getDefaultAlignment(rtlEnabled)\r\n    },\r\n    _createIndicatorContainer: function(options, ignoreIndicatorAlignment) {\r\n        var $indicatorsContainer = this._getIndicatorContainer(options.rootElement);\r\n        var indicatorAlignment = \"left\" === options.columnAlignment ? \"right\" : \"left\";\r\n        if (!$indicatorsContainer.length) {\r\n            $indicatorsContainer = $(\"<div>\").addClass(COLUMN_INDICATORS_CLASS)\r\n        }\r\n        this.setAria(\"role\", \"presentation\", $indicatorsContainer);\r\n        return $indicatorsContainer.css(\"float\", options.showColumnLines && !ignoreIndicatorAlignment ? indicatorAlignment : null)\r\n    },\r\n    _getIndicatorContainer: function($cell) {\r\n        return $cell && $cell.find(\".\" + COLUMN_INDICATORS_CLASS)\r\n    },\r\n    _getIndicatorElements: function($cell) {\r\n        var $indicatorContainer = this._getIndicatorContainer($cell);\r\n        return $indicatorContainer && $indicatorContainer.children()\r\n    },\r\n    _renderIndicator: function(options) {\r\n        var $container = options.container;\r\n        var $indicator = options.indicator;\r\n        $container && $indicator && $container.append($indicator)\r\n    },\r\n    _updateIndicators: function(indicatorName) {\r\n        var columns = this.getColumns();\r\n        var $cells = this.getColumnElements();\r\n        var $cell;\r\n        if (!$cells || columns.length !== $cells.length) {\r\n            return\r\n        }\r\n        for (var i = 0; i < columns.length; i++) {\r\n            $cell = $cells.eq(i);\r\n            this._updateIndicator($cell, columns[i], indicatorName);\r\n            var rowOptions = $cell.parent().data(\"options\");\r\n            if (rowOptions && rowOptions.cells) {\r\n                rowOptions.cells[$cell.index()].column = columns[i]\r\n            }\r\n        }\r\n    },\r\n    _updateIndicator: function($cell, column, indicatorName) {\r\n        if (!column.command) {\r\n            return this._applyColumnState({\r\n                name: indicatorName,\r\n                rootElement: $cell,\r\n                column: column,\r\n                showColumnLines: this.option(\"showColumnLines\")\r\n            })\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_view.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getWidth,\r\n    getOuterHeight,\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    data as elementData\r\n} from \"../../core/element_data\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    name as dblclickEvent\r\n} from \"../../events/double_click\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    setWidth\r\n} from \"../../core/utils/style\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    isRenderer,\r\n    isFunction,\r\n    isString,\r\n    isDefined,\r\n    isNumeric\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getBoundingRect,\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport * as iteratorUtils from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport columnStateMixin from \"./ui.grid_core.column_state_mixin\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    nativeScrolling\r\n} from \"../../core/utils/support\";\r\nvar SCROLL_CONTAINER_CLASS = \"scroll-container\";\r\nvar SCROLLABLE_SIMULATED_CLASS = \"scrollable-simulated\";\r\nvar GROUP_SPACE_CLASS = \"group-space\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar TABLE_CLASS = \"table\";\r\nvar TABLE_FIXED_CLASS = \"table-fixed\";\r\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar FILTER_ROW_CLASS = \"filter-row\";\r\nvar ERROR_ROW_CLASS = \"dx-error-row\";\r\nvar CELL_UPDATED_ANIMATION_CLASS = \"cell-updated-animation\";\r\nvar HIDDEN_COLUMNS_WIDTH = \"0.0001px\";\r\nvar CELL_HINT_VISIBLE = \"dxCellHintVisible\";\r\nvar FORM_FIELD_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\r\nvar appendElementTemplate = {\r\n    render: function(options) {\r\n        options.container.append(options.content)\r\n    }\r\n};\r\nvar subscribeToRowEvents = function(that, $table) {\r\n    var touchTarget;\r\n    var touchCurrentTarget;\r\n    var timeoutId;\r\n\r\n    function clearTouchTargets(timeout) {\r\n        return setTimeout((function() {\r\n            touchTarget = touchCurrentTarget = null\r\n        }), timeout)\r\n    }\r\n    eventsEngine.on($table, \"touchstart touchend\", \".dx-row\", (function(e) {\r\n        clearTimeout(timeoutId);\r\n        if (\"touchstart\" === e.type) {\r\n            touchTarget = e.target;\r\n            touchCurrentTarget = e.currentTarget;\r\n            timeoutId = clearTouchTargets(1e3)\r\n        } else {\r\n            timeoutId = clearTouchTargets()\r\n        }\r\n    }));\r\n    eventsEngine.on($table, [clickEventName, dblclickEvent, pointerEvents.down].join(\" \"), \".dx-row\", {\r\n        useNative: that._isNativeClick()\r\n    }, that.createAction((function(e) {\r\n        var event = e.event;\r\n        if (touchTarget) {\r\n            event.target = touchTarget;\r\n            event.currentTarget = touchCurrentTarget\r\n        }\r\n        if (!$(event.target).closest(\"a\").length) {\r\n            e.rowIndex = that.getRowIndex(event.currentTarget);\r\n            if (e.rowIndex >= 0) {\r\n                e.rowElement = getPublicElement($(event.currentTarget));\r\n                e.columns = that.getColumns();\r\n                if (event.type === pointerEvents.down) {\r\n                    that._rowPointerDown(e)\r\n                } else if (event.type === clickEventName) {\r\n                    that._rowClick(e)\r\n                } else {\r\n                    that._rowDblClick(e)\r\n                }\r\n            }\r\n        }\r\n    })))\r\n};\r\nvar getWidthStyle = function(width) {\r\n    if (\"auto\" === width) {\r\n        return \"\"\r\n    }\r\n    return isNumeric(width) ? width + \"px\" : width\r\n};\r\nvar setCellWidth = function(cell, column, width) {\r\n    cell.style.width = cell.style.maxWidth = \"auto\" === column.width ? \"\" : width\r\n};\r\nvar copyAttributes = function(element, newElement) {\r\n    if (!element || !newElement) {\r\n        return\r\n    }\r\n    var oldAttributes = element.attributes;\r\n    var newAttributes = newElement.attributes;\r\n    var i;\r\n    for (i = 0; i < oldAttributes.length; i++) {\r\n        var name = oldAttributes[i].nodeName;\r\n        if (!newElement.hasAttribute(name)) {\r\n            element.removeAttribute(name)\r\n        }\r\n    }\r\n    for (i = 0; i < newAttributes.length; i++) {\r\n        element.setAttribute(newAttributes[i].nodeName, newAttributes[i].nodeValue)\r\n    }\r\n};\r\nexport var ColumnsView = modules.View.inherit(columnStateMixin).inherit({\r\n    _createScrollableOptions: function() {\r\n        var scrollingOptions = this.option(\"scrolling\");\r\n        var useNativeScrolling = this.option(\"scrolling.useNative\");\r\n        var options = extend({}, scrollingOptions, {\r\n            direction: \"both\",\r\n            bounceEnabled: false,\r\n            useKeyboard: false\r\n        });\r\n        if (void 0 === useNativeScrolling) {\r\n            useNativeScrolling = true\r\n        }\r\n        if (\"auto\" === useNativeScrolling) {\r\n            delete options.useNative;\r\n            delete options.useSimulatedScrollbar\r\n        } else {\r\n            options.useNative = !!useNativeScrolling;\r\n            options.useSimulatedScrollbar = !useNativeScrolling\r\n        }\r\n        return options\r\n    },\r\n    _updateCell: function($cell, parameters) {\r\n        if (parameters.rowType) {\r\n            this._cellPrepared($cell, parameters)\r\n        }\r\n    },\r\n    _createCell: function(options) {\r\n        var column = options.column;\r\n        var alignment = column.alignment || getDefaultAlignment(this.option(\"rtlEnabled\"));\r\n        var cell = domAdapter.createElement(\"td\");\r\n        cell.style.textAlign = alignment;\r\n        var $cell = $(cell);\r\n        if (\"data\" === options.rowType && column.headerId && !column.type) {\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                this.setAria(\"describedby\", column.headerId, $cell)\r\n            }\r\n        }\r\n        if (column.cssClass) {\r\n            $cell.addClass(column.cssClass)\r\n        }\r\n        if (\"expand\" === column.command) {\r\n            $cell.addClass(column.cssClass);\r\n            $cell.addClass(this.addWidgetPrefix(GROUP_SPACE_CLASS))\r\n        }\r\n        if (column.colspan > 1) {\r\n            $cell.attr(\"colSpan\", column.colspan)\r\n        } else if (!column.isBand && \"auto\" !== column.visibleWidth && this.option(\"columnAutoWidth\")) {\r\n            if (column.width || column.minWidth) {\r\n                cell.style.minWidth = getWidthStyle(column.minWidth || column.width)\r\n            }\r\n            if (column.width) {\r\n                setCellWidth(cell, column, getWidthStyle(column.width))\r\n            }\r\n        }\r\n        return $cell\r\n    },\r\n    _createRow: function(rowObject, tagName) {\r\n        tagName = tagName || \"tr\";\r\n        var $element = $(\"<\".concat(tagName, \">\")).addClass(ROW_CLASS);\r\n        this.setAria(\"role\", \"row\", $element);\r\n        return $element\r\n    },\r\n    _isAltRow: function(row) {\r\n        return row && row.dataIndex % 2 === 1\r\n    },\r\n    _createTable: function(columns, isAppend) {\r\n        var that = this;\r\n        var $table = $(\"<table>\").addClass(that.addWidgetPrefix(TABLE_CLASS)).addClass(that.addWidgetPrefix(TABLE_FIXED_CLASS));\r\n        if (columns && !isAppend) {\r\n            $table.append(that._createColGroup(columns));\r\n            if (browser.safari) {\r\n                $table.append($(\"<thead>\").append(\"<tr>\"))\r\n            }\r\n            that.setAria(\"role\", \"presentation\", $table)\r\n        } else {\r\n            that.setAria(\"hidden\", true, $table)\r\n        }\r\n        this.setAria(\"role\", \"presentation\", $(\"<tbody>\").appendTo($table));\r\n        if (isAppend) {\r\n            return $table\r\n        }\r\n        if (browser.mozilla) {\r\n            eventsEngine.on($table, \"mousedown\", \"td\", (function(e) {\r\n                if (e.ctrlKey) {\r\n                    e.preventDefault()\r\n                }\r\n            }))\r\n        }\r\n        if (that.option(\"cellHintEnabled\")) {\r\n            eventsEngine.on($table, \"mousemove\", \".dx-row > td\", this.createAction((function(args) {\r\n                var e = args.event;\r\n                var $element = $(e.target);\r\n                var $cell = $(e.currentTarget);\r\n                var $row = $cell.parent();\r\n                var isDataRow = $row.hasClass(\"dx-data-row\");\r\n                var isHeaderRow = $row.hasClass(\"dx-header-row\");\r\n                var isGroupRow = $row.hasClass(GROUP_ROW_CLASS);\r\n                var isMasterDetailRow = $row.hasClass(DETAIL_ROW_CLASS);\r\n                var isFilterRow = $row.hasClass(that.addWidgetPrefix(FILTER_ROW_CLASS));\r\n                var visibleColumns = that._columnsController.getVisibleColumns();\r\n                var rowOptions = $row.data(\"options\");\r\n                var columnIndex = $cell.index();\r\n                var cellOptions = rowOptions && rowOptions.cells && rowOptions.cells[columnIndex];\r\n                var column = cellOptions ? cellOptions.column : visibleColumns[columnIndex];\r\n                if (!isMasterDetailRow && !isFilterRow && (!isDataRow || isDataRow && column && !column.cellTemplate) && (!isHeaderRow || isHeaderRow && column && !column.headerCellTemplate) && (!isGroupRow || isGroupRow && column && (void 0 === column.groupIndex || !column.groupCellTemplate))) {\r\n                    if ($element.data(CELL_HINT_VISIBLE)) {\r\n                        $element.removeAttr(\"title\");\r\n                        $element.data(CELL_HINT_VISIBLE, false)\r\n                    }\r\n                    var difference = $element[0].scrollWidth - $element[0].clientWidth;\r\n                    if (difference > 0 && !isDefined($element.attr(\"title\"))) {\r\n                        $element.attr(\"title\", $element.text());\r\n                        $element.data(CELL_HINT_VISIBLE, true)\r\n                    }\r\n                }\r\n            })))\r\n        }\r\n        var getOptions = function(event) {\r\n            var $cell = $(event.currentTarget);\r\n            var $fieldItemContent = $(event.target).closest(\".\" + FORM_FIELD_ITEM_CONTENT_CLASS);\r\n            var $row = $cell.parent();\r\n            var rowOptions = $row.data(\"options\");\r\n            var options = rowOptions && rowOptions.cells && rowOptions.cells[$cell.index()];\r\n            if (!$cell.closest(\"table\").is(event.delegateTarget)) {\r\n                return\r\n            }\r\n            var resultOptions = extend({}, options, {\r\n                cellElement: getPublicElement($cell),\r\n                event: event,\r\n                eventType: event.type\r\n            });\r\n            resultOptions.rowIndex = that.getRowIndex($row);\r\n            if ($fieldItemContent.length) {\r\n                var formItemOptions = $fieldItemContent.data(\"dx-form-item\");\r\n                if (formItemOptions.column) {\r\n                    resultOptions.column = formItemOptions.column;\r\n                    resultOptions.columnIndex = that._columnsController.getVisibleIndex(resultOptions.column.index)\r\n                }\r\n            }\r\n            return resultOptions\r\n        };\r\n        eventsEngine.on($table, \"mouseover\", \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellHoverChanged\", options)\r\n        }));\r\n        eventsEngine.on($table, \"mouseout\", \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellHoverChanged\", options)\r\n        }));\r\n        eventsEngine.on($table, clickEventName, \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellClick\", options)\r\n        }));\r\n        eventsEngine.on($table, dblclickEvent, \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellDblClick\", options)\r\n        }));\r\n        subscribeToRowEvents(that, $table);\r\n        return $table\r\n    },\r\n    _isNativeClick: noop,\r\n    _rowPointerDown: noop,\r\n    _rowClick: noop,\r\n    _rowDblClick: noop,\r\n    _createColGroup: function(columns) {\r\n        var colgroupElement = $(\"<colgroup>\");\r\n        for (var i = 0; i < columns.length; i++) {\r\n            var colspan = columns[i].colspan || 1;\r\n            for (var j = 0; j < colspan; j++) {\r\n                colgroupElement.append(this._createCol(columns[i]))\r\n            }\r\n        }\r\n        return colgroupElement\r\n    },\r\n    _createCol: function(column) {\r\n        var width = column.visibleWidth || column.width;\r\n        if (\"adaptiveHidden\" === width) {\r\n            width = HIDDEN_COLUMNS_WIDTH\r\n        }\r\n        var col = $(\"<col>\");\r\n        setWidth(col, width);\r\n        return col\r\n    },\r\n    renderDelayedTemplates: function(change) {\r\n        var delayedTemplates = this._delayedTemplates;\r\n        var syncTemplates = delayedTemplates.filter(template => !template.async);\r\n        var asyncTemplates = delayedTemplates.filter(template => template.async);\r\n        this._delayedTemplates = [];\r\n        this._renderDelayedTemplatesCore(syncTemplates, false, change);\r\n        this._renderDelayedTemplatesCoreAsync(asyncTemplates)\r\n    },\r\n    _renderDelayedTemplatesCoreAsync: function(templates) {\r\n        var that = this;\r\n        if (templates.length) {\r\n            getWindow().setTimeout((function() {\r\n                that._renderDelayedTemplatesCore(templates, true)\r\n            }))\r\n        }\r\n    },\r\n    _renderDelayedTemplatesCore: function(templates, isAsync, change) {\r\n        var date = new Date;\r\n        while (templates.length) {\r\n            var templateParameters = templates.shift();\r\n            var options = templateParameters.options;\r\n            var doc = domAdapter.getDocument();\r\n            if (!isAsync || $(options.container).closest(doc).length) {\r\n                if (change) {\r\n                    options.change = change\r\n                }\r\n                templateParameters.template.render(options)\r\n            }\r\n            if (isAsync && new Date - date > 30) {\r\n                this._renderDelayedTemplatesCoreAsync(templates);\r\n                break\r\n            }\r\n        }\r\n        if (!templates.length && this._delayedTemplates.length) {\r\n            this.renderDelayedTemplates()\r\n        }\r\n    },\r\n    _processTemplate: function(template) {\r\n        var renderingTemplate;\r\n        if (template && template.render && !isRenderer(template)) {\r\n            renderingTemplate = {\r\n                allowRenderToDetachedContainer: template.allowRenderToDetachedContainer,\r\n                render: function(options) {\r\n                    template.render(options.container, options.model, options.change);\r\n                    options.deferred && options.deferred.resolve()\r\n                }\r\n            }\r\n        } else if (isFunction(template)) {\r\n            renderingTemplate = {\r\n                render: function(options) {\r\n                    var renderedTemplate = template(getPublicElement(options.container), options.model, options.change);\r\n                    if (renderedTemplate && (renderedTemplate.nodeType || isRenderer(renderedTemplate))) {\r\n                        options.container.append(renderedTemplate)\r\n                    }\r\n                    options.deferred && options.deferred.resolve()\r\n                }\r\n            }\r\n        } else {\r\n            var templateID = isString(template) ? template : $(template).attr(\"id\");\r\n            if (!templateID) {\r\n                renderingTemplate = this.getTemplate(template)\r\n            } else {\r\n                if (!this._templatesCache[templateID]) {\r\n                    this._templatesCache[templateID] = this.getTemplate(template)\r\n                }\r\n                renderingTemplate = this._templatesCache[templateID]\r\n            }\r\n        }\r\n        return renderingTemplate\r\n    },\r\n    renderTemplate: function(container, template, options, allowRenderToDetachedContainer, change) {\r\n        var renderingTemplate = this._processTemplate(template, options);\r\n        var column = options.column;\r\n        var isDataRow = \"data\" === options.rowType;\r\n        var templateDeferred = new Deferred;\r\n        var templateOptions = {\r\n            container: container,\r\n            model: options,\r\n            deferred: templateDeferred,\r\n            onRendered: () => {\r\n                templateDeferred.resolve()\r\n            }\r\n        };\r\n        if (renderingTemplate) {\r\n            options.component = this.component;\r\n            var async = column && (column.renderAsync && isDataRow || this.option(\"renderAsync\") && (false !== column.renderAsync && (column.command || column.showEditorAlways) && isDataRow || \"filter\" === options.rowType));\r\n            if ((renderingTemplate.allowRenderToDetachedContainer || allowRenderToDetachedContainer) && !async) {\r\n                renderingTemplate.render(templateOptions)\r\n            } else {\r\n                this._delayedTemplates.push({\r\n                    template: renderingTemplate,\r\n                    options: templateOptions,\r\n                    async: async\r\n                })\r\n            }\r\n            if (change) {\r\n                change.templateDeferreds = change.templateDeferreds || [];\r\n                change.templateDeferreds.push(templateDeferred)\r\n            }\r\n        } else {\r\n            templateDeferred.reject()\r\n        }\r\n        return templateDeferred.promise()\r\n    },\r\n    _getBodies: function(tableElement) {\r\n        return $(tableElement).children(\"tbody\").not(\".dx-header\").not(\".dx-footer\")\r\n    },\r\n    _wrapRowIfNeed: function($table, $row) {\r\n        var hasDataRowTemplate = this.option().rowTemplate || this.option(\"dataRowTemplate\");\r\n        var $tBodies = hasDataRowTemplate && this._getBodies(this._tableElement || $table);\r\n        if ($tBodies && $tBodies.filter(\".\" + ROW_CLASS).length) {\r\n            var $tbody = $(\"<tbody>\").addClass($row.attr(\"class\"));\r\n            this.setAria(\"role\", \"presentation\", $tbody);\r\n            return $tbody.append($row)\r\n        }\r\n        return $row\r\n    },\r\n    _appendRow: function($table, $row, appendTemplate) {\r\n        appendTemplate = appendTemplate || appendElementTemplate;\r\n        appendTemplate.render({\r\n            content: $row,\r\n            container: $table\r\n        })\r\n    },\r\n    _resizeCore: function() {\r\n        var scrollLeft = this._scrollLeft;\r\n        if (scrollLeft >= 0) {\r\n            this._scrollLeft = 0;\r\n            this.scrollTo({\r\n                left: scrollLeft\r\n            })\r\n        }\r\n    },\r\n    _renderCore: function(e) {\r\n        var $root = this.element().parent();\r\n        if (!$root || $root.parent().length) {\r\n            this.renderDelayedTemplates(e)\r\n        }\r\n    },\r\n    _renderTable: function(options) {\r\n        options = options || {};\r\n        options.columns = this._columnsController.getVisibleColumns();\r\n        var changeType = options.change && options.change.changeType;\r\n        var $table = this._createTable(options.columns, \"append\" === changeType || \"prepend\" === changeType || \"update\" === changeType);\r\n        this._renderRows($table, options);\r\n        return $table\r\n    },\r\n    _renderRows: function($table, options) {\r\n        var rows = this._getRows(options.change);\r\n        var columnIndices = options.change && options.change.columnIndices || [];\r\n        var changeTypes = options.change && options.change.changeTypes || [];\r\n        for (var i = 0; i < rows.length; i++) {\r\n            this._renderRow($table, extend({\r\n                row: rows[i],\r\n                columnIndices: columnIndices[i],\r\n                changeType: changeTypes[i]\r\n            }, options))\r\n        }\r\n    },\r\n    _renderRow: function($table, options) {\r\n        if (!options.columnIndices) {\r\n            options.row.cells = []\r\n        }\r\n        var $row = this._createRow(options.row);\r\n        var $wrappedRow = this._wrapRowIfNeed($table, $row);\r\n        if (\"remove\" !== options.changeType) {\r\n            this._renderCells($row, options)\r\n        }\r\n        this._appendRow($table, $wrappedRow);\r\n        var rowOptions = extend({\r\n            columns: options.columns\r\n        }, options.row);\r\n        this._addWatchMethod(rowOptions, options.row);\r\n        this._rowPrepared($wrappedRow, rowOptions, options.row)\r\n    },\r\n    _needRenderCell: function(columnIndex, columnIndices) {\r\n        return !columnIndices || columnIndices.indexOf(columnIndex) >= 0\r\n    },\r\n    _renderCells: function($row, options) {\r\n        var columnIndex = 0;\r\n        var row = options.row;\r\n        var columns = options.columns;\r\n        for (var i = 0; i < columns.length; i++) {\r\n            if (this._needRenderCell(i, options.columnIndices)) {\r\n                this._renderCell($row, extend({\r\n                    column: columns[i],\r\n                    columnIndex: columnIndex,\r\n                    value: row.values && row.values[columnIndex],\r\n                    oldValue: row.oldValues && row.oldValues[columnIndex]\r\n                }, options))\r\n            }\r\n            if (columns[i].colspan > 1) {\r\n                columnIndex += columns[i].colspan\r\n            } else {\r\n                columnIndex++\r\n            }\r\n        }\r\n    },\r\n    _updateCells: function($rowElement, $newRowElement, columnIndices) {\r\n        var $cells = $rowElement.children();\r\n        var $newCells = $newRowElement.children();\r\n        var highlightChanges = this.option(\"highlightChanges\");\r\n        var cellUpdatedClass = this.addWidgetPrefix(CELL_UPDATED_ANIMATION_CLASS);\r\n        columnIndices.forEach((function(columnIndex, index) {\r\n            var $cell = $cells.eq(columnIndex);\r\n            var $newCell = $newCells.eq(index);\r\n            $cell.replaceWith($newCell);\r\n            if (highlightChanges && !$newCell.hasClass(\"dx-command-expand\")) {\r\n                $newCell.addClass(cellUpdatedClass)\r\n            }\r\n        }));\r\n        copyAttributes($rowElement.get(0), $newRowElement.get(0))\r\n    },\r\n    _setCellAriaAttributes: function($cell, cellOptions) {\r\n        if (\"freeSpace\" !== cellOptions.rowType) {\r\n            this.setAria(\"selected\", false, $cell);\r\n            this.setAria(\"role\", \"gridcell\", $cell);\r\n            var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n            var ariaColIndex = cellOptions.columnIndex + columnIndexOffset + 1;\r\n            this.setAria(\"colindex\", ariaColIndex, $cell)\r\n        }\r\n    },\r\n    _renderCell: function($row, options) {\r\n        var cellOptions = this._getCellOptions(options);\r\n        if (options.columnIndices) {\r\n            if (options.row.cells) {\r\n                options.row.cells[cellOptions.columnIndex] = cellOptions\r\n            }\r\n        } else {\r\n            options.row.cells.push(cellOptions)\r\n        }\r\n        var $cell = this._createCell(cellOptions);\r\n        this._setCellAriaAttributes($cell, cellOptions);\r\n        this._renderCellContent($cell, cellOptions);\r\n        $row.get(0).appendChild($cell.get(0));\r\n        return $cell\r\n    },\r\n    _renderCellContent: function($cell, options) {\r\n        var template = this._getCellTemplate(options);\r\n        when(!template || this.renderTemplate($cell, template, options)).done(() => {\r\n            this._updateCell($cell, options)\r\n        })\r\n    },\r\n    _getCellTemplate: function() {},\r\n    _getRows: function() {\r\n        return []\r\n    },\r\n    _getCellOptions: function(options) {\r\n        var cellOptions = {\r\n            column: options.column,\r\n            columnIndex: options.columnIndex,\r\n            rowType: options.row.rowType,\r\n            isAltRow: this._isAltRow(options.row)\r\n        };\r\n        this._addWatchMethod(cellOptions);\r\n        return cellOptions\r\n    },\r\n    _addWatchMethod: function(options, source) {\r\n        if (!this.option(\"repaintChangesOnly\")) {\r\n            return\r\n        }\r\n        var watchers = [];\r\n        source = source || options;\r\n        source.watch = source.watch || function(getter, updateValueFunc, updateRowFunc) {\r\n            var oldValue = getter(source.data);\r\n            var watcher = function(row) {\r\n                if (row && updateRowFunc) {\r\n                    updateRowFunc(row)\r\n                }\r\n                var newValue = getter(source.data);\r\n                if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\r\n                    if (row) {\r\n                        updateValueFunc(newValue)\r\n                    }\r\n                    oldValue = newValue\r\n                }\r\n            };\r\n            watchers.push(watcher);\r\n            return function() {\r\n                var index = watchers.indexOf(watcher);\r\n                if (index >= 0) {\r\n                    watchers.splice(index, 1)\r\n                }\r\n            }\r\n        };\r\n        source.update = source.update || function(row, keepRow) {\r\n            if (row) {\r\n                this.data = options.data = row.data;\r\n                this.rowIndex = options.rowIndex = row.rowIndex;\r\n                this.dataIndex = options.dataIndex = row.dataIndex;\r\n                this.isExpanded = options.isExpanded = row.isExpanded;\r\n                if (options.row && !keepRow) {\r\n                    options.row = row\r\n                }\r\n            }\r\n            watchers.forEach((function(watcher) {\r\n                watcher(row)\r\n            }))\r\n        };\r\n        if (source !== options) {\r\n            options.watch = source.watch.bind(source)\r\n        }\r\n        return options\r\n    },\r\n    _cellPrepared: function(cell, options) {\r\n        options.cellElement = getPublicElement($(cell));\r\n        this.executeAction(\"onCellPrepared\", options)\r\n    },\r\n    _rowPrepared: function($row, options) {\r\n        elementData($row.get(0), \"options\", options);\r\n        options.rowElement = getPublicElement($row);\r\n        this.executeAction(\"onRowPrepared\", options)\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var optionNames = e.optionNames;\r\n        if (gridCoreUtils.checkChanges(optionNames, [\"width\", \"visibleWidth\"])) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var widths = iteratorUtils.map(visibleColumns, (function(column) {\r\n                var width = column.visibleWidth || column.width;\r\n                return isDefined(width) ? width : \"auto\"\r\n            }));\r\n            this.setColumnWidths({\r\n                widths: widths,\r\n                optionNames: optionNames\r\n            });\r\n            return\r\n        }\r\n        if (!this._requireReady) {\r\n            this.render()\r\n        }\r\n    },\r\n    getCellIndex: function($cell) {\r\n        var cellIndex = $cell.length ? $cell[0].cellIndex : -1;\r\n        return cellIndex\r\n    },\r\n    getTableElements: function() {\r\n        return this._tableElement || $()\r\n    },\r\n    getTableElement: function() {\r\n        return this._tableElement\r\n    },\r\n    setTableElement: function(tableElement) {\r\n        this._tableElement = tableElement\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        switch (args.name) {\r\n            case \"cellHintEnabled\":\r\n            case \"onCellPrepared\":\r\n            case \"onRowPrepared\":\r\n            case \"onCellHoverChanged\":\r\n                this._invalidate(true, true);\r\n                args.handled = true\r\n        }\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that._scrollLeft = -1;\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._dataController = that.getController(\"data\");\r\n        that._delayedTemplates = [];\r\n        that._templatesCache = {};\r\n        that.createAction(\"onCellClick\");\r\n        that.createAction(\"onRowClick\");\r\n        that.createAction(\"onCellDblClick\");\r\n        that.createAction(\"onRowDblClick\");\r\n        that.createAction(\"onCellHoverChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        that.createAction(\"onCellPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        that.createAction(\"onRowPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\",\r\n            afterExecute: function(e) {\r\n                that._afterRowPrepared(e)\r\n            }\r\n        });\r\n        that._columnsController.columnsChanged.add(that._columnOptionChanged.bind(that));\r\n        that._dataController && that._dataController.changed.add(that._handleDataChanged.bind(that))\r\n    },\r\n    _afterRowPrepared: noop,\r\n    _handleDataChanged: function() {},\r\n    callbackNames: function() {\r\n        return [\"scrollChanged\"]\r\n    },\r\n    _updateScrollLeftPosition: function() {\r\n        var scrollLeft = this._scrollLeft;\r\n        if (scrollLeft >= 0) {\r\n            this._scrollLeft = 0;\r\n            this.scrollTo({\r\n                left: scrollLeft\r\n            })\r\n        }\r\n    },\r\n    scrollTo: function(pos) {\r\n        var $element = this.element();\r\n        var $scrollContainer = $element && $element.children(\".\" + this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).not(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\r\n        if (isDefined(pos) && isDefined(pos.left) && this._scrollLeft !== pos.left) {\r\n            this._scrollLeft = pos.left;\r\n            $scrollContainer && $scrollContainer.scrollLeft(pos.left)\r\n        }\r\n    },\r\n    _wrapTableInScrollContainer: function($table) {\r\n        var $scrollContainer = $(\"<div>\");\r\n        var useNative = this.option(\"scrolling.useNative\");\r\n        if (false === useNative || \"auto\" === useNative && !nativeScrolling) {\r\n            $scrollContainer.addClass(this.addWidgetPrefix(SCROLLABLE_SIMULATED_CLASS))\r\n        }\r\n        eventsEngine.on($scrollContainer, \"scroll\", () => {\r\n            var scrollLeft = $scrollContainer.scrollLeft();\r\n            if (scrollLeft !== this._scrollLeft) {\r\n                this.scrollChanged.fire({\r\n                    left: scrollLeft\r\n                }, this.name)\r\n            }\r\n        });\r\n        $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_CLASS)).addClass(this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).append($table).appendTo(this.element());\r\n        this.setAria(\"role\", \"presentation\", $scrollContainer);\r\n        return $scrollContainer\r\n    },\r\n    _updateContent: function($newTableElement) {\r\n        this.setTableElement($newTableElement);\r\n        this._wrapTableInScrollContainer($newTableElement)\r\n    },\r\n    _findContentElement: noop,\r\n    _getWidths: function($cellElements) {\r\n        var result = [];\r\n        var width;\r\n        if ($cellElements) {\r\n            iteratorUtils.each($cellElements, (function(index, item) {\r\n                width = item.offsetWidth;\r\n                if (item.getBoundingClientRect) {\r\n                    var clientRect = getBoundingRect(item);\r\n                    if (clientRect.width > width - 1) {\r\n                        width = clientRect.width\r\n                    }\r\n                }\r\n                result.push(width)\r\n            }))\r\n        }\r\n        return result\r\n    },\r\n    getColumnWidths: function($tableElement) {\r\n        var result = [];\r\n        var $rows;\r\n        var $cells;\r\n        (this.option(\"forceApplyBindings\") || noop)();\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if ($tableElement) {\r\n            $rows = $tableElement.children(\"tbody:not(.dx-header)\").children();\r\n            for (var i = 0; i < $rows.length; i++) {\r\n                var $row = $rows.eq(i);\r\n                var isRowVisible = \"none\" !== $row.get(0).style.display && !$row.hasClass(\"dx-state-invisible\");\r\n                if (!$row.is(\".\" + GROUP_ROW_CLASS) && !$row.is(\".\" + DETAIL_ROW_CLASS) && !$row.is(\".\" + ERROR_ROW_CLASS) && isRowVisible) {\r\n                    $cells = $row.children(\"td\");\r\n                    break\r\n                }\r\n            }\r\n            result = this._getWidths($cells)\r\n        }\r\n        return result\r\n    },\r\n    getVisibleColumnIndex: function(columnIndex, rowIndex) {\r\n        return columnIndex\r\n    },\r\n    setColumnWidths: function(_ref) {\r\n        var {\r\n            widths: widths,\r\n            $tableElement: $tableElement,\r\n            columns: columns,\r\n            fixed: fixed\r\n        } = _ref;\r\n        var $cols;\r\n        var width;\r\n        var minWidth;\r\n        var columnIndex;\r\n        var columnAutoWidth = this.option(\"columnAutoWidth\");\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if ($tableElement && $tableElement.length && widths) {\r\n            columnIndex = 0;\r\n            $cols = $tableElement.children(\"colgroup\").children(\"col\");\r\n            setWidth($cols, \"auto\");\r\n            columns = columns || this.getColumns(null, $tableElement);\r\n            for (var i = 0; i < columns.length; i++) {\r\n                if (columnAutoWidth && !fixed) {\r\n                    width = columns[i].width;\r\n                    if (width && !columns[i].command) {\r\n                        width = columns[i].visibleWidth || width;\r\n                        width = getWidthStyle(width);\r\n                        minWidth = getWidthStyle(columns[i].minWidth || width);\r\n                        var $rows = $rows || $tableElement.children().children(\".dx-row\").not(\".\" + DETAIL_ROW_CLASS);\r\n                        for (var rowIndex = 0; rowIndex < $rows.length; rowIndex++) {\r\n                            var row = $rows[rowIndex];\r\n                            var cell = void 0;\r\n                            var visibleIndex = this.getVisibleColumnIndex(i, rowIndex);\r\n                            if (row.classList.contains(GROUP_ROW_CLASS)) {\r\n                                if (1 !== visibleIndex) {\r\n                                    cell = row.querySelector(\"td[aria-colindex='\".concat(visibleIndex + 1, \"']\"))\r\n                                }\r\n                            } else {\r\n                                cell = row.cells[visibleIndex]\r\n                            }\r\n                            if (cell) {\r\n                                setCellWidth(cell, columns[i], width);\r\n                                cell.style.minWidth = minWidth\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (columns[i].colspan) {\r\n                    columnIndex += columns[i].colspan;\r\n                    continue\r\n                }\r\n                width = widths[columnIndex];\r\n                if (\"adaptiveHidden\" === width) {\r\n                    width = HIDDEN_COLUMNS_WIDTH\r\n                }\r\n                if (\"number\" === typeof width) {\r\n                    width = width.toFixed(3) + \"px\"\r\n                }\r\n                setWidth($cols.eq(columnIndex), isDefined(width) ? width : \"auto\");\r\n                columnIndex++\r\n            }\r\n        }\r\n    },\r\n    getCellElements: function(rowIndex) {\r\n        return this._getCellElementsCore(rowIndex)\r\n    },\r\n    _getCellElementsCore: function(rowIndex) {\r\n        var $row = this._getRowElements().eq(rowIndex);\r\n        return $row.children()\r\n    },\r\n    _getCellElement: function(rowIndex, columnIdentifier) {\r\n        var $cell;\r\n        var $cells = this.getCellElements(rowIndex);\r\n        var columnVisibleIndex = this._getVisibleColumnIndex($cells, rowIndex, columnIdentifier);\r\n        if ($cells.length && columnVisibleIndex >= 0) {\r\n            $cell = $cells.eq(columnVisibleIndex)\r\n        }\r\n        if ($cell && $cell.length) {\r\n            return $cell\r\n        }\r\n    },\r\n    _getRowElement: function(rowIndex) {\r\n        var that = this;\r\n        var $rowElement = $();\r\n        var $tableElements = that.getTableElements();\r\n        iteratorUtils.each($tableElements, (function(_, tableElement) {\r\n            $rowElement = $rowElement.add(that._getRowElements($(tableElement)).eq(rowIndex))\r\n        }));\r\n        if ($rowElement.length) {\r\n            return $rowElement\r\n        }\r\n    },\r\n    getCellElement: function(rowIndex, columnIdentifier) {\r\n        return getPublicElement(this._getCellElement(rowIndex, columnIdentifier))\r\n    },\r\n    getRowElement: function(rowIndex) {\r\n        var $rows = this._getRowElement(rowIndex);\r\n        var elements = [];\r\n        if ($rows && !getPublicElement($rows).get) {\r\n            for (var i = 0; i < $rows.length; i++) {\r\n                elements.push($rows[i])\r\n            }\r\n        } else {\r\n            elements = $rows\r\n        }\r\n        return elements\r\n    },\r\n    _getVisibleColumnIndex: function($cells, rowIndex, columnIdentifier) {\r\n        if (isString(columnIdentifier)) {\r\n            var columnIndex = this._columnsController.columnOption(columnIdentifier, \"index\");\r\n            return this._columnsController.getVisibleIndex(columnIndex)\r\n        }\r\n        return columnIdentifier\r\n    },\r\n    getColumnElements: function() {},\r\n    getColumns: function(rowIndex) {\r\n        return this._columnsController.getVisibleColumns(rowIndex)\r\n    },\r\n    getCell: function(cellPosition, rows) {\r\n        var $rows = rows || this._getRowElements();\r\n        var $cells;\r\n        if ($rows.length > 0 && cellPosition.rowIndex >= 0) {\r\n            if (\"virtual\" !== this.option(\"scrolling.mode\") && \"virtual\" !== this.option(\"scrolling.rowRenderingMode\")) {\r\n                cellPosition.rowIndex = cellPosition.rowIndex < $rows.length ? cellPosition.rowIndex : $rows.length - 1\r\n            }\r\n            $cells = this.getCellElements(cellPosition.rowIndex);\r\n            if ($cells && $cells.length > 0) {\r\n                return $cells.eq($cells.length > cellPosition.columnIndex ? cellPosition.columnIndex : $cells.length - 1)\r\n            }\r\n        }\r\n    },\r\n    getRowsCount: function() {\r\n        var tableElement = this.getTableElement();\r\n        if (tableElement && 1 === tableElement.length) {\r\n            return tableElement[0].rows.length\r\n        }\r\n        return 0\r\n    },\r\n    _getRowElementsCore: function(tableElement) {\r\n        tableElement = tableElement || this.getTableElement();\r\n        if (tableElement) {\r\n            var hasRowTemplate = this.option().rowTemplate || this.option(\"dataRowTemplate\");\r\n            var tBodies = hasRowTemplate && tableElement.find(\"> tbody.\" + ROW_CLASS);\r\n            return tBodies && tBodies.length ? tBodies : tableElement.find(\"> tbody > .\" + ROW_CLASS + \", > .\" + ROW_CLASS)\r\n        }\r\n        return $()\r\n    },\r\n    _getRowElements: function(tableElement) {\r\n        return this._getRowElementsCore(tableElement)\r\n    },\r\n    getRowIndex: function($row) {\r\n        return this._getRowElements().index($row)\r\n    },\r\n    getBoundingRect: function() {},\r\n    getName: function() {},\r\n    setScrollerSpacing: function(width) {\r\n        var $element = this.element();\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        $element && $element.css({\r\n            paddingLeft: rtlEnabled ? width : \"\",\r\n            paddingRight: !rtlEnabled ? width : \"\"\r\n        })\r\n    },\r\n    isScrollbarVisible: function(isHorizontal) {\r\n        var $element = this.element();\r\n        var $tableElement = this._tableElement;\r\n        if ($element && $tableElement) {\r\n            return isHorizontal ? getOuterWidth($tableElement) - getWidth($element) > 0 : getOuterHeight($tableElement) - getHeight($element) > 0\r\n        }\r\n        return false\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/shared/accessibility.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nvar FOCUS_STATE_CLASS = \"dx-state-focused\";\r\nvar FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FOCUSED_ROW_SELECTOR = \".dx-row-focused\";\r\nvar GRID_ROW_SELECTOR = \".dx-datagrid-rowsview .dx-row\";\r\nvar GRID_CELL_SELECTOR = \"\".concat(GRID_ROW_SELECTOR, \" > td\");\r\nvar TREELIST_ROW_SELECTOR = \".dx-treelist-rowsview .dx-row\";\r\nvar TREELIST_CELL_SELECTOR = \"\".concat(TREELIST_ROW_SELECTOR, \" > td\");\r\nvar viewItemSelectorMap = {\r\n    groupPanel: [\".dx-datagrid-group-panel .dx-group-panel-item[tabindex]\"],\r\n    columnHeaders: [\".dx-datagrid-headers .dx-header-row > td.dx-datagrid-action\", \".dx-treelist-headers .dx-header-row > td.dx-treelist-action\"],\r\n    filterRow: [\".dx-datagrid-headers .dx-datagrid-filter-row .dx-editor-cell .dx-texteditor-input\", \".dx-treelist-headers .dx-treelist-filter-row .dx-editor-cell .dx-texteditor-input\"],\r\n    rowsView: [\"\".concat(FOCUSED_ROW_SELECTOR), \"\".concat(GRID_ROW_SELECTOR, \"[tabindex]\"), \"\".concat(GRID_CELL_SELECTOR, \"[tabindex]\"), \"\".concat(GRID_CELL_SELECTOR), \"\".concat(TREELIST_ROW_SELECTOR, \"[tabindex]\"), \"\".concat(TREELIST_CELL_SELECTOR, \"[tabindex]\"), \"\".concat(TREELIST_CELL_SELECTOR)],\r\n    footer: [\".dx-datagrid-total-footer .dx-datagrid-summary-item\", \".dx-treelist-total-footer .dx-treelist-summary-item\"],\r\n    filterPanel: [\".dx-datagrid-filter-panel .dx-icon-filter\", \".dx-treelist-filter-panel .dx-icon-filter\"],\r\n    pager: [\".dx-datagrid-pager [tabindex]\", \".dx-treelist-pager [tabindex]\"]\r\n};\r\nvar isMouseDown = false;\r\nvar isHiddenFocusing = false;\r\nvar focusedElementInfo = null;\r\n\r\nfunction processKeyDown(viewName, instance, event, action, $mainElement, executeKeyDown) {\r\n    var isHandled = fireKeyDownEvent(instance, event.originalEvent, executeKeyDown);\r\n    if (isHandled) {\r\n        return\r\n    }\r\n    var keyName = normalizeKeyName(event);\r\n    if (\"enter\" === keyName || \"space\" === keyName) {\r\n        saveFocusedElementInfo(event.target, instance);\r\n        action && action({\r\n            event: event\r\n        })\r\n    } else if (\"tab\" === keyName) {\r\n        $mainElement.addClass(FOCUS_STATE_CLASS)\r\n    } else {\r\n        selectView(viewName, instance, event)\r\n    }\r\n}\r\n\r\nfunction saveFocusedElementInfo(target, instance) {\r\n    var $target = $(target);\r\n    var ariaLabel = $target.attr(\"aria-label\");\r\n    var $activeElements = getActiveAccessibleElements(ariaLabel, instance.element());\r\n    var targetIndex = $activeElements.index($target);\r\n    focusedElementInfo = extend({}, {\r\n        ariaLabel: ariaLabel,\r\n        index: targetIndex\r\n    }, {\r\n        viewInstance: instance\r\n    })\r\n}\r\n\r\nfunction getActiveAccessibleElements(ariaLabel, viewElement) {\r\n    var $viewElement = $(viewElement);\r\n    var $activeElements;\r\n    if (ariaLabel) {\r\n        $activeElements = $viewElement.find('[aria-label=\"'.concat(ariaLabel, '\"][tabindex]'))\r\n    } else {\r\n        $activeElements = $viewElement.find(\"[tabindex]\")\r\n    }\r\n    return $activeElements\r\n}\r\n\r\nfunction findFocusedViewElement(viewSelectors) {\r\n    for (var index in viewSelectors) {\r\n        var selector = viewSelectors[index];\r\n        var $focusViewElement = $(selector).first();\r\n        if ($focusViewElement.length) {\r\n            return $focusViewElement\r\n        }\r\n    }\r\n}\r\n\r\nfunction fireKeyDownEvent(instance, event, executeAction) {\r\n    var args = {\r\n        event: event,\r\n        handled: false\r\n    };\r\n    if (executeAction) {\r\n        executeAction(args)\r\n    } else {\r\n        instance._createActionByOption(\"onKeyDown\")(args)\r\n    }\r\n    return args.handled\r\n}\r\n\r\nfunction onDocumentVisibilityChange() {\r\n    isHiddenFocusing = \"visible\" === domAdapter.getDocument().visibilityState\r\n}\r\nexport function subscribeVisibilityChange() {\r\n    eventsEngine.on(domAdapter.getDocument(), \"visibilitychange\", onDocumentVisibilityChange)\r\n}\r\nexport function unsubscribeVisibilityChange() {\r\n    eventsEngine.off(domAdapter.getDocument(), \"visibilitychange\", onDocumentVisibilityChange)\r\n}\r\nexport function hiddenFocus(element) {\r\n    isHiddenFocusing = true;\r\n    element.focus();\r\n    isHiddenFocusing = false\r\n}\r\nexport function registerKeyboardAction(viewName, instance, $element, selector, action, executeKeyDown) {\r\n    if (instance.option(\"useLegacyKeyboardNavigation\")) {\r\n        return noop\r\n    }\r\n    var getMainElement = () => $(instance.element());\r\n    var keyDownHandler = e => processKeyDown(viewName, instance, e, action, getMainElement(), executeKeyDown);\r\n    var mouseDownHandler = () => {\r\n        isMouseDown = true;\r\n        getMainElement().removeClass(FOCUS_STATE_CLASS)\r\n    };\r\n    var focusinHandler = () => {\r\n        var needShowOverlay = !isMouseDown && !isHiddenFocusing;\r\n        if (needShowOverlay) {\r\n            getMainElement().addClass(FOCUS_STATE_CLASS)\r\n        }\r\n        isMouseDown = false\r\n    };\r\n    eventsEngine.on($element, \"keydown\", selector, keyDownHandler);\r\n    eventsEngine.on($element, \"mousedown\", selector, mouseDownHandler);\r\n    eventsEngine.on($element, \"focusin\", selector, focusinHandler);\r\n    return () => {\r\n        eventsEngine.off($element, \"keydown\", selector, keyDownHandler);\r\n        eventsEngine.off($element, \"mousedown\", selector, mouseDownHandler);\r\n        eventsEngine.off($element, \"focusin\", selector, focusinHandler)\r\n    }\r\n}\r\nexport function restoreFocus(instance) {\r\n    if (!instance.option(\"useLegacyKeyboardNavigation\") && focusedElementInfo) {\r\n        var viewInstance = focusedElementInfo.viewInstance;\r\n        if (viewInstance) {\r\n            var $activeElements = getActiveAccessibleElements(focusedElementInfo.ariaLabel, viewInstance.element());\r\n            var $targetElement = $activeElements.eq(focusedElementInfo.index);\r\n            focusedElementInfo = null;\r\n            eventsEngine.trigger($targetElement, \"focus\")\r\n        }\r\n    }\r\n}\r\nexport function selectView(viewName, instance, event) {\r\n    var keyName = normalizeKeyName(event);\r\n    if (event.ctrlKey && (\"upArrow\" === keyName || \"downArrow\" === keyName)) {\r\n        var viewNames = Object.keys(viewItemSelectorMap);\r\n        var viewItemIndex = viewNames.indexOf(viewName);\r\n        while (viewItemIndex >= 0 && viewItemIndex < viewNames.length) {\r\n            viewItemIndex = \"upArrow\" === keyName ? --viewItemIndex : ++viewItemIndex;\r\n            var _viewName = viewNames[viewItemIndex];\r\n            var viewSelectors = viewItemSelectorMap[_viewName];\r\n            var $focusViewElement = findFocusedViewElement(viewSelectors);\r\n            if ($focusViewElement && $focusViewElement.length) {\r\n                $focusViewElement.attr(\"tabindex\", instance.option(\"tabindex\") || 0);\r\n                eventsEngine.trigger($focusViewElement, \"focus\");\r\n                $focusViewElement.removeClass(FOCUS_DISABLED_CLASS);\r\n                break\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function setTabIndex(instance, $element) {\r\n    if (!instance.option(\"useLegacyKeyboardnavigation\")) {\r\n        $element.attr(\"tabindex\", instance.option(\"tabindex\") || 0)\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.accessibility.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport * as accessibility from \"../../ui/shared/accessibility\";\r\nexport var registerKeyboardAction = function(viewName, instance, $element, selector, action) {\r\n    var keyboardController = instance.getController(\"keyboardNavigation\");\r\n    if (instance.option(\"useLegacyKeyboardNavigation\") || keyboardController && !keyboardController.isKeyboardEnabled()) {\r\n        return\r\n    }\r\n    instance.createAction(\"onKeyDown\");\r\n    accessibility.registerKeyboardAction(viewName, instance, $element, selector, action, args => {\r\n        instance.executeAction(\"onKeyDown\", args)\r\n    })\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_headers.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    ColumnsView\r\n} from \"./ui.grid_core.columns_view\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    registerKeyboardAction\r\n} from \"./ui.grid_core.accessibility\";\r\nvar CELL_CONTENT_CLASS = \"text-content\";\r\nvar HEADERS_CLASS = \"headers\";\r\nvar NOWRAP_CLASS = \"nowrap\";\r\nvar ROW_CLASS_SELECTOR = \".dx-row\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar COLUMN_LINES_CLASS = \"dx-column-lines\";\r\nvar CONTEXT_MENU_SORT_ASC_ICON = \"context-menu-sort-asc\";\r\nvar CONTEXT_MENU_SORT_DESC_ICON = \"context-menu-sort-desc\";\r\nvar CONTEXT_MENU_SORT_NONE_ICON = \"context-menu-sort-none\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar VISIBILITY_HIDDEN_CLASS = \"dx-visibility-hidden\";\r\nvar TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX = \"dx-text-content-alignment-\";\r\nvar SORT_INDICATOR_CLASS = \"dx-sort-indicator\";\r\nvar SORT_INDEX_INDICATOR_CLASS = \"dx-sort-index-indicator\";\r\nvar HEADER_FILTER_CLASS_SELECTOR = \".dx-header-filter\";\r\nvar HEADER_FILTER_INDICATOR_CLASS = \"dx-header-filter-indicator\";\r\nvar MULTI_ROW_HEADER_CLASS = \"dx-header-multi-row\";\r\nexport var columnHeadersModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            showColumnHeaders: true,\r\n            cellHintEnabled: true\r\n        }\r\n    },\r\n    views: {\r\n        columnHeadersView: ColumnsView.inherit(function() {\r\n            var createCellContent = function(that, $cell, options) {\r\n                var $cellContent = $(\"<div>\").addClass(that.addWidgetPrefix(CELL_CONTENT_CLASS));\r\n                that.setAria(\"role\", \"presentation\", $cellContent);\r\n                addCssClassesToCellContent(that, $cell, options.column, $cellContent);\r\n                var showColumnLines = that.option(\"showColumnLines\");\r\n                var contentAlignment = that.getController(\"columns\").getHeaderContentAlignment(options.column.alignment);\r\n                return $cellContent[showColumnLines || \"right\" === contentAlignment ? \"appendTo\" : \"prependTo\"]($cell)\r\n            };\r\n\r\n            function addCssClassesToCellContent(that, $cell, column, $cellContent) {\r\n                var $indicatorElements = that._getIndicatorElements($cell, true);\r\n                var $visibleIndicatorElements = that._getIndicatorElements($cell);\r\n                var indicatorCount = $indicatorElements && $indicatorElements.length;\r\n                var columnAlignment = that._getColumnAlignment(column.alignment);\r\n                var sortIndicatorClassName = \".\".concat(that._getIndicatorClassName(\"sort\"));\r\n                var sortIndexIndicatorClassName = \".\".concat(that._getIndicatorClassName(\"sortIndex\"));\r\n                var $sortIndicator = $visibleIndicatorElements.filter(sortIndicatorClassName);\r\n                var $sortIndexIndicator = $visibleIndicatorElements.children().filter(sortIndexIndicatorClassName);\r\n                $cellContent = $cellContent || $cell.children(\".\" + that.addWidgetPrefix(CELL_CONTENT_CLASS));\r\n                $cellContent.toggleClass(TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX + columnAlignment, indicatorCount > 0).toggleClass(TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX + (\"left\" === columnAlignment ? \"right\" : \"left\"), indicatorCount > 0 && \"center\" === column.alignment).toggleClass(SORT_INDICATOR_CLASS, !!$sortIndicator.length).toggleClass(SORT_INDEX_INDICATOR_CLASS, !!$sortIndexIndicator.length).toggleClass(HEADER_FILTER_INDICATOR_CLASS, !!$visibleIndicatorElements.filter(\".\" + that._getIndicatorClassName(\"headerFilter\")).length)\r\n            }\r\n            return {\r\n                _createTable: function() {\r\n                    var $table = this.callBase.apply(this, arguments);\r\n                    eventsEngine.on($table, \"mousedown selectstart\", this.createAction((function(e) {\r\n                        var event = e.event;\r\n                        if (event.shiftKey) {\r\n                            event.preventDefault()\r\n                        }\r\n                    })));\r\n                    return $table\r\n                },\r\n                _isLegacyKeyboardNavigation() {\r\n                    return this.option(\"useLegacyKeyboardNavigation\")\r\n                },\r\n                _getDefaultTemplate: function(column) {\r\n                    var that = this;\r\n                    return function($container, options) {\r\n                        var $content = column.command ? $container : createCellContent(that, $container, options);\r\n                        var caption = \"expand\" !== column.command && column.caption;\r\n                        if (caption) {\r\n                            $content.text(caption)\r\n                        } else if (column.command) {\r\n                            $container.html(\"&nbsp;\")\r\n                        }\r\n                    }\r\n                },\r\n                _getHeaderTemplate: function(column) {\r\n                    return column.headerCellTemplate || {\r\n                        allowRenderToDetachedContainer: true,\r\n                        render: this._getDefaultTemplate(column)\r\n                    }\r\n                },\r\n                _processTemplate: function(template, options) {\r\n                    var that = this;\r\n                    var resultTemplate;\r\n                    var column = options.column;\r\n                    var renderingTemplate = that.callBase(template);\r\n                    if (\"header\" === options.rowType && renderingTemplate && column.headerCellTemplate && !column.command) {\r\n                        resultTemplate = {\r\n                            render: function(options) {\r\n                                var $content = createCellContent(that, options.container, options.model);\r\n                                renderingTemplate.render(extend({}, options, {\r\n                                    container: $content\r\n                                }))\r\n                            }\r\n                        }\r\n                    } else {\r\n                        resultTemplate = renderingTemplate\r\n                    }\r\n                    return resultTemplate\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    if (\"refresh\" !== e.changeType) {\r\n                        return\r\n                    }\r\n                    if (this._isGroupingChanged || this._requireReady) {\r\n                        this._isGroupingChanged = false;\r\n                        this.render()\r\n                    }\r\n                },\r\n                _renderCell: function($row, options) {\r\n                    var $cell = this.callBase($row, options);\r\n                    if (\"header\" === options.row.rowType) {\r\n                        $cell.addClass(CELL_FOCUS_DISABLED_CLASS);\r\n                        if (!this._isLegacyKeyboardNavigation()) {\r\n                            if (options.column && !options.column.type) {\r\n                                $cell.attr(\"tabindex\", this.option(\"tabindex\") || 0)\r\n                            }\r\n                        }\r\n                    }\r\n                    return $cell\r\n                },\r\n                _setCellAriaAttributes: function($cell, cellOptions) {\r\n                    this.callBase($cell, cellOptions);\r\n                    if (\"header\" === cellOptions.rowType) {\r\n                        this.setAria(\"role\", \"columnheader\", $cell);\r\n                        if (cellOptions.column && !cellOptions.column.command && !cellOptions.column.isBand) {\r\n                            $cell.attr(\"id\", cellOptions.column.headerId);\r\n                            this.setAria(\"label\", messageLocalization.format(\"dxDataGrid-ariaColumn\") + \" \" + cellOptions.column.caption, $cell)\r\n                        }\r\n                    }\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    $row.toggleClass(COLUMN_LINES_CLASS, this.option(\"showColumnLines\"));\r\n                    if (\"header\" === row.rowType) {\r\n                        $row.addClass(HEADER_ROW_CLASS);\r\n                        if (!this._isLegacyKeyboardNavigation()) {\r\n                            registerKeyboardAction(\"columnHeaders\", this, $row, \"td\", this._handleActionKeyDown.bind(this))\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _handleActionKeyDown: function(args) {\r\n                    var event = args.event;\r\n                    var $target = $(event.target);\r\n                    this._lastActionElement = event.target;\r\n                    if ($target.is(HEADER_FILTER_CLASS_SELECTOR)) {\r\n                        var headerFilterController = this.getController(\"headerFilter\");\r\n                        var $column = $target.closest(\"td\");\r\n                        var columnIndex = this.getColumnIndexByElement($column);\r\n                        if (columnIndex >= 0) {\r\n                            headerFilterController.showHeaderFilterMenu(columnIndex, false)\r\n                        }\r\n                    } else {\r\n                        var $row = $target.closest(ROW_CLASS_SELECTOR);\r\n                        this._processHeaderAction(event, $row)\r\n                    }\r\n                    event.preventDefault()\r\n                },\r\n                _renderCore: function() {\r\n                    var that = this;\r\n                    var $container = that.element();\r\n                    if (that._tableElement && !that._dataController.isLoaded() && !that._hasRowElements) {\r\n                        return\r\n                    }\r\n                    $container.addClass(that.addWidgetPrefix(HEADERS_CLASS)).toggleClass(that.addWidgetPrefix(NOWRAP_CLASS), !that.option(\"wordWrapEnabled\")).empty();\r\n                    that.setAria(\"role\", \"presentation\", $container);\r\n                    that._updateContent(that._renderTable());\r\n                    if (that.getRowCount() > 1) {\r\n                        $container.addClass(MULTI_ROW_HEADER_CLASS)\r\n                    }\r\n                    that.callBase.apply(that, arguments)\r\n                },\r\n                _renderRows: function() {\r\n                    var that = this;\r\n                    if (that._dataController.isLoaded() || that._hasRowElements) {\r\n                        that.callBase.apply(that, arguments);\r\n                        that._hasRowElements = true\r\n                    }\r\n                },\r\n                _getRowVisibleColumns: function(rowIndex) {\r\n                    return this._columnsController.getVisibleColumns(rowIndex)\r\n                },\r\n                _renderRow: function($table, options) {\r\n                    options.columns = this._getRowVisibleColumns(options.row.rowIndex);\r\n                    this.callBase($table, options)\r\n                },\r\n                _createCell: function(options) {\r\n                    var column = options.column;\r\n                    var $cellElement = this.callBase.apply(this, arguments);\r\n                    column.rowspan > 1 && \"header\" === options.rowType && $cellElement.attr(\"rowSpan\", column.rowspan);\r\n                    return $cellElement\r\n                },\r\n                _getRows: function() {\r\n                    var result = [];\r\n                    var rowCount = this.getRowCount();\r\n                    if (this.option(\"showColumnHeaders\")) {\r\n                        for (var i = 0; i < rowCount; i++) {\r\n                            result.push({\r\n                                rowType: \"header\",\r\n                                rowIndex: i\r\n                            })\r\n                        }\r\n                    }\r\n                    return result\r\n                },\r\n                _getCellTemplate: function(options) {\r\n                    if (\"header\" === options.rowType) {\r\n                        return this._getHeaderTemplate(options.column)\r\n                    }\r\n                },\r\n                _columnOptionChanged: function(e) {\r\n                    var changeTypes = e.changeTypes;\r\n                    var optionNames = e.optionNames;\r\n                    if (changeTypes.grouping || changeTypes.groupExpanding) {\r\n                        if (changeTypes.grouping) {\r\n                            this._isGroupingChanged = true\r\n                        }\r\n                        return\r\n                    }\r\n                    this.callBase(e);\r\n                    if (optionNames.width || optionNames.visible) {\r\n                        this.resizeCompleted.fire()\r\n                    }\r\n                },\r\n                _isElementVisible: function(elementOptions) {\r\n                    return elementOptions && elementOptions.visible\r\n                },\r\n                _alignCaptionByCenter: function($cell) {\r\n                    var $indicatorsContainer = this._getIndicatorContainer($cell, true);\r\n                    if ($indicatorsContainer && $indicatorsContainer.length) {\r\n                        $indicatorsContainer.filter(\".\" + VISIBILITY_HIDDEN_CLASS).remove();\r\n                        $indicatorsContainer = this._getIndicatorContainer($cell);\r\n                        $indicatorsContainer.clone().addClass(VISIBILITY_HIDDEN_CLASS).css(\"float\", \"\").insertBefore($cell.children(\".\" + this.addWidgetPrefix(CELL_CONTENT_CLASS)))\r\n                    }\r\n                },\r\n                _updateCell: function($cell, options) {\r\n                    if (\"header\" === options.rowType && \"center\" === options.column.alignment) {\r\n                        this._alignCaptionByCenter($cell)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _updateIndicator: function($cell, column, indicatorName) {\r\n                    var $indicatorElement = this.callBase.apply(this, arguments);\r\n                    if (\"center\" === column.alignment) {\r\n                        this._alignCaptionByCenter($cell)\r\n                    }\r\n                    addCssClassesToCellContent(this, $cell, column);\r\n                    return $indicatorElement\r\n                },\r\n                _getIndicatorContainer: function($cell, returnAll) {\r\n                    var $indicatorsContainer = this.callBase($cell);\r\n                    return returnAll ? $indicatorsContainer : $indicatorsContainer.filter(\":not(.\" + VISIBILITY_HIDDEN_CLASS + \")\")\r\n                },\r\n                _isSortableElement: function() {\r\n                    return true\r\n                },\r\n                getHeadersRowHeight: function() {\r\n                    var $tableElement = this.getTableElement();\r\n                    var $headerRows = $tableElement && $tableElement.find(\".\" + HEADER_ROW_CLASS);\r\n                    return $headerRows && $headerRows.toArray().reduce((function(sum, headerRow) {\r\n                        return sum + getHeight(headerRow)\r\n                    }), 0) || 0\r\n                },\r\n                getHeaderElement: function(index) {\r\n                    var columnElements = this.getColumnElements();\r\n                    return columnElements && columnElements.eq(index)\r\n                },\r\n                getColumnElements: function(index, bandColumnIndex) {\r\n                    var that = this;\r\n                    var $cellElement;\r\n                    var columnsController = that._columnsController;\r\n                    var rowCount = that.getRowCount();\r\n                    if (that.option(\"showColumnHeaders\")) {\r\n                        if (rowCount > 1 && (!isDefined(index) || isDefined(bandColumnIndex))) {\r\n                            var result = [];\r\n                            var visibleColumns = isDefined(bandColumnIndex) ? columnsController.getChildrenByBandColumn(bandColumnIndex, true) : columnsController.getVisibleColumns();\r\n                            each(visibleColumns, (function(_, column) {\r\n                                var rowIndex = isDefined(index) ? index : columnsController.getRowIndex(column.index);\r\n                                $cellElement = that._getCellElement(rowIndex, columnsController.getVisibleIndex(column.index, rowIndex));\r\n                                $cellElement && result.push($cellElement.get(0))\r\n                            }));\r\n                            return $(result)\r\n                        } else if (!index || index < rowCount) {\r\n                            return that.getCellElements(index || 0)\r\n                        }\r\n                    }\r\n                },\r\n                getColumnIndexByElement: function($cell) {\r\n                    var cellIndex = this.getCellIndex($cell);\r\n                    var $row = $cell.closest(\".dx-row\");\r\n                    var rowIndex = $row[0].rowIndex;\r\n                    var column = this.getColumns(rowIndex)[cellIndex];\r\n                    return column ? column.index : -1\r\n                },\r\n                getVisibleColumnIndex: function(columnIndex, rowIndex) {\r\n                    var column = this.getColumns()[columnIndex];\r\n                    return column ? this._columnsController.getVisibleIndex(column.index, rowIndex) : -1\r\n                },\r\n                getColumnWidths: function() {\r\n                    var $columnElements = this.getColumnElements();\r\n                    if ($columnElements && $columnElements.length) {\r\n                        return this._getWidths($columnElements)\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                allowDragging: function(column, sourceLocation, draggingPanels) {\r\n                    var i;\r\n                    var draggableColumnCount = 0;\r\n                    var rowIndex = column && this._columnsController.getRowIndex(column.index);\r\n                    var columns = this.getColumns(0 === rowIndex ? 0 : null);\r\n                    var canHideColumn = (null === column || void 0 === column ? void 0 : column.allowHiding) && columns.length > 1;\r\n                    var allowDrag = function(column) {\r\n                        return column.allowReordering || column.allowGrouping || column.allowHiding\r\n                    };\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        if (allowDrag(columns[i])) {\r\n                            draggableColumnCount++\r\n                        }\r\n                    }\r\n                    if (draggableColumnCount <= 1 && !canHideColumn) {\r\n                        return false\r\n                    } else if (!draggingPanels) {\r\n                        return (this.option(\"allowColumnReordering\") || this._columnsController.isColumnOptionUsed(\"allowReordering\")) && column && column.allowReordering\r\n                    }\r\n                    for (i = 0; i < draggingPanels.length; i++) {\r\n                        var draggingPanel = draggingPanels[i];\r\n                        if (draggingPanel && draggingPanel.allowDragging(column, sourceLocation)) {\r\n                            return true\r\n                        }\r\n                    }\r\n                    return false\r\n                },\r\n                getBoundingRect: function() {\r\n                    var $columnElements = this.getColumnElements();\r\n                    if ($columnElements && $columnElements.length) {\r\n                        var offset = this.getTableElement().offset();\r\n                        return {\r\n                            top: offset.top\r\n                        }\r\n                    }\r\n                    return null\r\n                },\r\n                getName: function() {\r\n                    return \"headers\"\r\n                },\r\n                getColumnCount: function() {\r\n                    var $columnElements = this.getColumnElements();\r\n                    return $columnElements ? $columnElements.length : 0\r\n                },\r\n                isVisible: function() {\r\n                    return this.option(\"showColumnHeaders\")\r\n                },\r\n                optionChanged: function(args) {\r\n                    switch (args.name) {\r\n                        case \"showColumnHeaders\":\r\n                        case \"wordWrapEnabled\":\r\n                        case \"showColumnLines\":\r\n                            this._invalidate(true, true);\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                getHeight: function() {\r\n                    return this.getElementHeight()\r\n                },\r\n                getContextMenuItems: function(options) {\r\n                    var that = this;\r\n                    var column = options.column;\r\n                    if (options.row && (\"header\" === options.row.rowType || \"detailAdaptive\" === options.row.rowType)) {\r\n                        var sortingOptions = that.option(\"sorting\");\r\n                        if (sortingOptions && \"none\" !== sortingOptions.mode && column && column.allowSorting) {\r\n                            var onItemClick = function(params) {\r\n                                setTimeout((function() {\r\n                                    that._columnsController.changeSortOrder(column.index, params.itemData.value)\r\n                                }))\r\n                            };\r\n                            return [{\r\n                                text: sortingOptions.ascendingText,\r\n                                value: \"asc\",\r\n                                disabled: \"asc\" === column.sortOrder,\r\n                                icon: CONTEXT_MENU_SORT_ASC_ICON,\r\n                                onItemClick: onItemClick\r\n                            }, {\r\n                                text: sortingOptions.descendingText,\r\n                                value: \"desc\",\r\n                                disabled: \"desc\" === column.sortOrder,\r\n                                icon: CONTEXT_MENU_SORT_DESC_ICON,\r\n                                onItemClick: onItemClick\r\n                            }, {\r\n                                text: sortingOptions.clearText,\r\n                                value: \"none\",\r\n                                disabled: !column.sortOrder,\r\n                                icon: CONTEXT_MENU_SORT_NONE_ICON,\r\n                                onItemClick: onItemClick\r\n                            }]\r\n                        }\r\n                    }\r\n                },\r\n                getRowCount: function() {\r\n                    return this._columnsController && this._columnsController.getRowCount()\r\n                },\r\n                setRowsOpacity: function(columnIndex, value, rowIndex) {\r\n                    var that = this;\r\n                    var i;\r\n                    var columnElements;\r\n                    var rowCount = that.getRowCount();\r\n                    var columns = that._columnsController.getColumns();\r\n                    var column = columns && columns[columnIndex];\r\n                    var columnID = column && column.isBand && column.index;\r\n                    var setColumnOpacity = function(index, column) {\r\n                        if (column.ownerBand === columnID) {\r\n                            columnElements.eq(index).css({\r\n                                opacity: value\r\n                            });\r\n                            if (column.isBand) {\r\n                                that.setRowsOpacity(column.index, value, i + 1)\r\n                            }\r\n                        }\r\n                    };\r\n                    if (isDefined(columnID)) {\r\n                        rowIndex = rowIndex || 0;\r\n                        for (i = rowIndex; i < rowCount; i++) {\r\n                            columnElements = that.getCellElements(i);\r\n                            each(that.getColumns(i), setColumnOpacity)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.column_headers.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnHeadersModule\r\n} from \"../grid_core/ui.grid_core.column_headers\";\r\nexport var ColumnHeadersView = columnHeadersModule.views.columnHeadersView;\r\ngridCore.registerModule(\"columnHeaders\", columnHeadersModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_controller.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../../core/renderer\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\r\nimport {\r\n    compileGetter,\r\n    compileSetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    isDefined,\r\n    isString,\r\n    isNumeric,\r\n    isFunction,\r\n    isObject,\r\n    isPlainObject,\r\n    type\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    inArray,\r\n    normalizeIndexes\r\n} from \"../../core/utils/array\";\r\nimport config from \"../../core/config\";\r\nimport {\r\n    orderEach,\r\n    deepExtendArraySafe\r\n} from \"../../core/utils/object\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    captionize\r\n} from \"../../core/utils/inflector\";\r\nimport dateSerialization from \"../../core/utils/date_serialization\";\r\nimport numberLocalization from \"../../localization/number\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport Store from \"../../data/abstract_store\";\r\nimport {\r\n    DataSource\r\n} from \"../../data/data_source/data_source\";\r\nimport {\r\n    normalizeDataSourceOptions\r\n} from \"../../data/data_source/utils\";\r\nimport filterUtils from \"../shared/filtering\";\r\nvar USER_STATE_FIELD_NAMES_15_1 = [\"filterValues\", \"filterType\", \"fixed\", \"fixedPosition\"];\r\nvar USER_STATE_FIELD_NAMES = [\"visibleIndex\", \"dataField\", \"name\", \"dataType\", \"width\", \"visible\", \"sortOrder\", \"lastSortOrder\", \"sortIndex\", \"groupIndex\", \"filterValue\", \"selectedFilterOperation\", \"added\"].concat(USER_STATE_FIELD_NAMES_15_1);\r\nvar IGNORE_COLUMN_OPTION_NAMES = {\r\n    visibleWidth: true,\r\n    bestFitWidth: true,\r\n    bufferedFilterValue: true\r\n};\r\nvar COMMAND_EXPAND_CLASS = \"dx-command-expand\";\r\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\r\nvar GROUP_COMMAND_COLUMN_NAME = \"groupExpand\";\r\nvar regExp = /columns\\[(\\d+)\\]\\.?/gi;\r\nvar globalColumnId = 1;\r\nexport var columnsControllerModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            commonColumnSettings: {\r\n                allowFiltering: true,\r\n                allowHiding: true,\r\n                allowSorting: true,\r\n                allowEditing: true,\r\n                encodeHtml: true,\r\n                trueText: messageLocalization.format(\"dxDataGrid-trueText\"),\r\n                falseText: messageLocalization.format(\"dxDataGrid-falseText\")\r\n            },\r\n            allowColumnReordering: false,\r\n            allowColumnResizing: false,\r\n            columnResizingMode: \"nextColumn\",\r\n            columnMinWidth: void 0,\r\n            columnWidth: void 0,\r\n            adaptColumnWidthByRatio: true,\r\n            columns: void 0,\r\n            regenerateColumnsByVisibleItems: false,\r\n            customizeColumns: null,\r\n            dateSerializationFormat: void 0\r\n        }\r\n    },\r\n    controllers: {\r\n        columns: modules.Controller.inherit(function() {\r\n            var DEFAULT_COLUMN_OPTIONS = {\r\n                visible: true,\r\n                showInColumnChooser: true\r\n            };\r\n            var DATATYPE_OPERATIONS = {\r\n                number: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"between\"],\r\n                string: [\"contains\", \"notcontains\", \"startswith\", \"endswith\", \"=\", \"<>\"],\r\n                date: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"between\"],\r\n                datetime: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"between\"]\r\n            };\r\n            var COLUMN_INDEX_OPTIONS = {\r\n                visibleIndex: true,\r\n                groupIndex: true,\r\n                grouped: true,\r\n                sortIndex: true,\r\n                sortOrder: true\r\n            };\r\n            var setFilterOperationsAsDefaultValues = function(column) {\r\n                column.filterOperations = column.defaultFilterOperations\r\n            };\r\n            var createColumn = function(that, columnOptions, userStateColumnOptions, bandColumn) {\r\n                var commonColumnOptions = {};\r\n                if (columnOptions) {\r\n                    if (isString(columnOptions)) {\r\n                        columnOptions = {\r\n                            dataField: columnOptions\r\n                        }\r\n                    }\r\n                    that.setName(columnOptions);\r\n                    var result = {};\r\n                    if (columnOptions.command) {\r\n                        result = deepExtendArraySafe(commonColumnOptions, columnOptions)\r\n                    } else {\r\n                        commonColumnOptions = that.getCommonSettings(columnOptions);\r\n                        if (userStateColumnOptions && userStateColumnOptions.name && userStateColumnOptions.dataField) {\r\n                            columnOptions = extend({}, columnOptions, {\r\n                                dataField: userStateColumnOptions.dataField\r\n                            })\r\n                        }\r\n                        var calculatedColumnOptions = that._createCalculatedColumnOptions(columnOptions, bandColumn);\r\n                        if (!columnOptions.type) {\r\n                            result = {\r\n                                headerId: \"dx-col-\".concat(globalColumnId++)\r\n                            }\r\n                        }\r\n                        result = deepExtendArraySafe(result, DEFAULT_COLUMN_OPTIONS);\r\n                        deepExtendArraySafe(result, commonColumnOptions);\r\n                        deepExtendArraySafe(result, calculatedColumnOptions);\r\n                        deepExtendArraySafe(result, columnOptions);\r\n                        deepExtendArraySafe(result, {\r\n                            selector: null\r\n                        })\r\n                    }\r\n                    if (columnOptions.filterOperations === columnOptions.defaultFilterOperations) {\r\n                        setFilterOperationsAsDefaultValues(result)\r\n                    }\r\n                    return result\r\n                }\r\n            };\r\n            var createColumnsFromOptions = function createColumnsFromOptions(that, columnsOptions, bandColumn) {\r\n                var result = [];\r\n                if (columnsOptions) {\r\n                    each(columnsOptions, (function(index, columnOptions) {\r\n                        var userStateColumnOptions = that._columnsUserState && checkUserStateColumn(columnOptions, that._columnsUserState[index]) && that._columnsUserState[index];\r\n                        var column = createColumn(that, columnOptions, userStateColumnOptions, bandColumn);\r\n                        if (column) {\r\n                            if (bandColumn) {\r\n                                column.ownerBand = bandColumn\r\n                            }\r\n                            result.push(column);\r\n                            if (column.columns) {\r\n                                result = result.concat(createColumnsFromOptions(that, column.columns, column));\r\n                                delete column.columns;\r\n                                column.hasColumns = true\r\n                            }\r\n                        }\r\n                    }))\r\n                }\r\n                return result\r\n            };\r\n            var getParentBandColumns = function(columnIndex, columnParentByIndex) {\r\n                var result = [];\r\n                var parent = columnParentByIndex[columnIndex];\r\n                while (parent) {\r\n                    result.unshift(parent);\r\n                    columnIndex = parent.index;\r\n                    parent = columnParentByIndex[columnIndex]\r\n                }\r\n                return result\r\n            };\r\n            var _getChildrenByBandColumn = function(columnIndex, columnChildrenByIndex, recursive) {\r\n                var result = [];\r\n                var children = columnChildrenByIndex[columnIndex];\r\n                if (children) {\r\n                    for (var i = 0; i < children.length; i++) {\r\n                        var column = children[i];\r\n                        if (!isDefined(column.groupIndex) || column.showWhenGrouped) {\r\n                            result.push(column);\r\n                            if (recursive && column.isBand) {\r\n                                result = result.concat(_getChildrenByBandColumn(column.index, columnChildrenByIndex, recursive))\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return result\r\n            };\r\n            var getColumnFullPath = function(that, column) {\r\n                var result = [];\r\n                var columns;\r\n                var bandColumnsCache = that.getBandColumnsCache();\r\n                var callbackFilter = function(item) {\r\n                    return item.ownerBand === column.ownerBand\r\n                };\r\n                if (bandColumnsCache.isPlain) {\r\n                    var columnIndex = that._columns.indexOf(column);\r\n                    if (columnIndex >= 0) {\r\n                        result = [\"columns[\".concat(columnIndex, \"]\")]\r\n                    }\r\n                } else {\r\n                    columns = that._columns.filter(callbackFilter);\r\n                    while (columns.length && -1 !== columns.indexOf(column)) {\r\n                        result.unshift(\"columns[\".concat(columns.indexOf(column), \"]\"));\r\n                        column = bandColumnsCache.columnParentByIndex[column.index];\r\n                        columns = column ? that._columns.filter(callbackFilter) : []\r\n                    }\r\n                }\r\n                return result.join(\".\")\r\n            };\r\n            var calculateColspan = function calculateColspan(that, columnID) {\r\n                var colspan = 0;\r\n                var columns = that.getChildrenByBandColumn(columnID, true);\r\n                each(columns, (function(_, column) {\r\n                    if (column.isBand) {\r\n                        column.colspan = column.colspan || calculateColspan(that, column.index);\r\n                        colspan += column.colspan || 1\r\n                    } else {\r\n                        colspan += 1\r\n                    }\r\n                }));\r\n                return colspan\r\n            };\r\n            var getValueDataType = function(value) {\r\n                var dataType = type(value);\r\n                if (\"string\" !== dataType && \"boolean\" !== dataType && \"number\" !== dataType && \"date\" !== dataType && \"object\" !== dataType) {\r\n                    dataType = void 0\r\n                }\r\n                return dataType\r\n            };\r\n            var getSerializationFormat = function(dataType, value) {\r\n                switch (dataType) {\r\n                    case \"date\":\r\n                    case \"datetime\":\r\n                        return dateSerialization.getDateSerializationFormat(value);\r\n                    case \"number\":\r\n                        if (isString(value)) {\r\n                            return \"string\"\r\n                        }\r\n                        if (isNumeric(value)) {\r\n                            return null\r\n                        }\r\n                }\r\n            };\r\n            var updateSerializers = function(options, dataType) {\r\n                if (!options.deserializeValue) {\r\n                    if (gridCoreUtils.isDateType(dataType)) {\r\n                        options.deserializeValue = function(value) {\r\n                            return dateSerialization.deserializeDate(value)\r\n                        };\r\n                        options.serializeValue = function(value) {\r\n                            return isString(value) ? value : dateSerialization.serializeDate(value, this.serializationFormat)\r\n                        }\r\n                    }\r\n                    if (\"number\" === dataType) {\r\n                        options.deserializeValue = function(value) {\r\n                            var parsedValue = parseFloat(value);\r\n                            return isNaN(parsedValue) ? value : parsedValue\r\n                        };\r\n                        options.serializeValue = function(value, target) {\r\n                            if (\"filter\" === target) {\r\n                                return value\r\n                            }\r\n                            return isDefined(value) && \"string\" === this.serializationFormat ? value.toString() : value\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            var customizeTextForBooleanDataType = function(e) {\r\n                if (true === e.value) {\r\n                    return this.trueText || \"true\"\r\n                } else if (false === e.value) {\r\n                    return this.falseText || \"false\"\r\n                } else {\r\n                    return e.valueText || \"\"\r\n                }\r\n            };\r\n            var getCustomizeTextByDataType = function(dataType) {\r\n                if (\"boolean\" === dataType) {\r\n                    return customizeTextForBooleanDataType\r\n                }\r\n            };\r\n            var updateColumnIndexes = function(that) {\r\n                each(that._columns, (function(index, column) {\r\n                    column.index = index\r\n                }));\r\n                each(that._columns, (function(index, column) {\r\n                    if (isObject(column.ownerBand)) {\r\n                        column.ownerBand = column.ownerBand.index\r\n                    }\r\n                }));\r\n                each(that._commandColumns, (function(index, column) {\r\n                    column.index = -(index + 1)\r\n                }))\r\n            };\r\n            var updateColumnGroupIndexes = function(that, currentColumn) {\r\n                normalizeIndexes(that._columns, \"groupIndex\", currentColumn, (function(column) {\r\n                    var grouped = column.grouped;\r\n                    delete column.grouped;\r\n                    return grouped\r\n                }))\r\n            };\r\n            var getColumnIndexByVisibleIndex = function(that, visibleIndex, location) {\r\n                var rowIndex = isObject(visibleIndex) ? visibleIndex.rowIndex : null;\r\n                var columns = \"group\" === location ? that.getGroupColumns() : \"columnChooser\" === location ? that.getChooserColumns() : that.getVisibleColumns(rowIndex);\r\n                var column;\r\n                visibleIndex = isObject(visibleIndex) ? visibleIndex.columnIndex : visibleIndex;\r\n                column = columns[visibleIndex];\r\n                if (column && column.type === GROUP_COMMAND_COLUMN_NAME) {\r\n                    column = that._columns.filter(col => column.type === col.type)[0] || column\r\n                }\r\n                return column && isDefined(column.index) ? column.index : -1\r\n            };\r\n\r\n            function checkUserStateColumn(column, userStateColumn) {\r\n                return column && userStateColumn && userStateColumn.name === (column.name || column.dataField) && (userStateColumn.dataField === column.dataField || column.name)\r\n            }\r\n            var applyUserState = function(that) {\r\n                var columnsUserState = that._columnsUserState;\r\n                var ignoreColumnOptionNames = that._ignoreColumnOptionNames || [];\r\n                var columns = that._columns;\r\n                var columnCountById = {};\r\n                var resultColumns = [];\r\n                var allColumnsHaveState = true;\r\n                var userStateColumnIndexes = [];\r\n                var column;\r\n                var userStateColumnIndex;\r\n                var i;\r\n\r\n                function applyFieldsState(column, userStateColumn) {\r\n                    if (!userStateColumn) {\r\n                        return\r\n                    }\r\n                    for (var index = 0; index < USER_STATE_FIELD_NAMES.length; index++) {\r\n                        var fieldName = USER_STATE_FIELD_NAMES[index];\r\n                        if (inArray(fieldName, ignoreColumnOptionNames) >= 0) {\r\n                            continue\r\n                        }\r\n                        if (\"dataType\" === fieldName) {\r\n                            column[fieldName] = column[fieldName] || userStateColumn[fieldName]\r\n                        } else if (inArray(fieldName, USER_STATE_FIELD_NAMES_15_1) >= 0) {\r\n                            if (fieldName in userStateColumn) {\r\n                                column[fieldName] = userStateColumn[fieldName]\r\n                            }\r\n                        } else {\r\n                            if (\"selectedFilterOperation\" === fieldName && userStateColumn[fieldName]) {\r\n                                column.defaultSelectedFilterOperation = column[fieldName] || null\r\n                            }\r\n                            column[fieldName] = userStateColumn[fieldName]\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function findUserStateColumn(columnsUserState, column) {\r\n                    var id = column.name || column.dataField;\r\n                    var count = columnCountById[id] || 0;\r\n                    for (var j = 0; j < columnsUserState.length; j++) {\r\n                        if (checkUserStateColumn(column, columnsUserState[j])) {\r\n                            if (count) {\r\n                                count--\r\n                            } else {\r\n                                columnCountById[id] = columnCountById[id] || 0;\r\n                                columnCountById[id]++;\r\n                                return j\r\n                            }\r\n                        }\r\n                    }\r\n                    return -1\r\n                }\r\n                if (columnsUserState) {\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        userStateColumnIndex = findUserStateColumn(columnsUserState, columns[i]);\r\n                        allColumnsHaveState = allColumnsHaveState && userStateColumnIndex >= 0;\r\n                        userStateColumnIndexes.push(userStateColumnIndex)\r\n                    }\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        column = columns[i];\r\n                        userStateColumnIndex = userStateColumnIndexes[i];\r\n                        if (that._hasUserState || allColumnsHaveState) {\r\n                            applyFieldsState(column, columnsUserState[userStateColumnIndex])\r\n                        }\r\n                        if (userStateColumnIndex >= 0 && isDefined(columnsUserState[userStateColumnIndex].initialIndex)) {\r\n                            resultColumns[userStateColumnIndex] = column\r\n                        } else {\r\n                            resultColumns.push(column)\r\n                        }\r\n                    }\r\n                    var hasAddedBands = false;\r\n                    for (i = 0; i < columnsUserState.length; i++) {\r\n                        var columnUserState = columnsUserState[i];\r\n                        if (columnUserState.added && findUserStateColumn(columns, columnUserState) < 0) {\r\n                            column = createColumn(that, columnUserState.added);\r\n                            applyFieldsState(column, columnUserState);\r\n                            resultColumns.push(column);\r\n                            if (columnUserState.added.columns) {\r\n                                hasAddedBands = true\r\n                            }\r\n                        }\r\n                    }\r\n                    if (hasAddedBands) {\r\n                        updateColumnIndexes(that);\r\n                        resultColumns = createColumnsFromOptions(that, resultColumns)\r\n                    }\r\n                    assignColumns(that, resultColumns)\r\n                }\r\n            };\r\n            var updateIndexes = function(that, column) {\r\n                updateColumnIndexes(that);\r\n                updateColumnGroupIndexes(that, column);\r\n                ! function(that, currentColumn) {\r\n                    each(that._columns, (function(index, column) {\r\n                        if (isDefined(column.sortIndex) && !isSortOrderValid(column.sortOrder)) {\r\n                            delete column.sortIndex\r\n                        }\r\n                    }));\r\n                    normalizeIndexes(that._columns, \"sortIndex\", currentColumn, (function(column) {\r\n                        return !isDefined(column.groupIndex) && isSortOrderValid(column.sortOrder)\r\n                    }))\r\n                }(that, column);\r\n                resetBandColumnsCache(that);\r\n                ! function(that, currentColumn) {\r\n                    var key;\r\n                    var column;\r\n                    var bandColumns = {};\r\n                    var result = [];\r\n                    var bandColumnsCache = that.getBandColumnsCache();\r\n                    var columns = that._columns.filter(column => !column.command);\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        column = columns[i];\r\n                        var parentBandColumns = getParentBandColumns(i, bandColumnsCache.columnParentByIndex);\r\n                        if (parentBandColumns.length) {\r\n                            var bandColumnIndex = parentBandColumns[parentBandColumns.length - 1].index;\r\n                            bandColumns[bandColumnIndex] = bandColumns[bandColumnIndex] || [];\r\n                            bandColumns[bandColumnIndex].push(column)\r\n                        } else {\r\n                            result.push(column)\r\n                        }\r\n                    }\r\n                    for (key in bandColumns) {\r\n                        normalizeIndexes(bandColumns[key], \"visibleIndex\", currentColumn)\r\n                    }\r\n                    normalizeIndexes(result, \"visibleIndex\", currentColumn)\r\n                }(that, column)\r\n            };\r\n            var resetColumnsCache = function(that) {\r\n                that.resetColumnsCache()\r\n            };\r\n\r\n            function assignColumns(that, columns) {\r\n                that._columns = columns;\r\n                resetColumnsCache(that);\r\n                that.updateColumnDataTypes()\r\n            }\r\n            var updateColumnChanges = function(that, changeType, optionName, columnIndex) {\r\n                var columnChanges = that._columnChanges || {\r\n                    optionNames: {\r\n                        length: 0\r\n                    },\r\n                    changeTypes: {\r\n                        length: 0\r\n                    },\r\n                    columnIndex: columnIndex\r\n                };\r\n                optionName = optionName || \"all\";\r\n                optionName = optionName.split(\".\")[0];\r\n                var changeTypes = columnChanges.changeTypes;\r\n                if (changeType && !changeTypes[changeType]) {\r\n                    changeTypes[changeType] = true;\r\n                    changeTypes.length++\r\n                }\r\n                var optionNames = columnChanges.optionNames;\r\n                if (optionName && !optionNames[optionName]) {\r\n                    optionNames[optionName] = true;\r\n                    optionNames.length++\r\n                }\r\n                if (void 0 === columnIndex || columnIndex !== columnChanges.columnIndex) {\r\n                    delete columnChanges.columnIndex\r\n                }\r\n                that._columnChanges = columnChanges;\r\n                resetColumnsCache(that)\r\n            };\r\n            var fireColumnsChanged = function(that) {\r\n                var onColumnsChanging = that.option(\"onColumnsChanging\");\r\n                var columnChanges = that._columnChanges;\r\n                var reinitOptionNames = [\"dataField\", \"lookup\", \"dataType\", \"columns\"];\r\n                if (that.isInitialized() && !that._updateLockCount && columnChanges) {\r\n                    if (onColumnsChanging) {\r\n                        that._updateLockCount++;\r\n                        onColumnsChanging(extend({\r\n                            component: that.component\r\n                        }, columnChanges));\r\n                        that._updateLockCount--\r\n                    }\r\n                    that._columnChanges = void 0;\r\n                    if (options = columnChanges.optionNames, options && reinitOptionNames.some(name => options[name])) {\r\n                        that.reinit()\r\n                    } else {\r\n                        that.columnsChanged.fire(columnChanges)\r\n                    }\r\n                }\r\n                var options\r\n            };\r\n            var updateSortOrderWhenGrouping = function(that, column, groupIndex, prevGroupIndex) {\r\n                var columnWasGrouped = prevGroupIndex >= 0;\r\n                if (groupIndex >= 0) {\r\n                    if (!columnWasGrouped) {\r\n                        column.lastSortOrder = column.sortOrder\r\n                    }\r\n                } else {\r\n                    var sortMode = that.option(\"sorting.mode\");\r\n                    var sortOrder = column.lastSortOrder;\r\n                    if (\"single\" === sortMode) {\r\n                        var sortedByAnotherColumn = that._columns.some(col => col !== column && isDefined(col.sortIndex));\r\n                        if (sortedByAnotherColumn) {\r\n                            sortOrder = void 0\r\n                        }\r\n                    }\r\n                    column.sortOrder = sortOrder\r\n                }\r\n            };\r\n            var fireOptionChanged = function(that, options) {\r\n                var value = options.value;\r\n                var optionName = options.optionName;\r\n                var prevValue = options.prevValue;\r\n                var fullOptionName = options.fullOptionName;\r\n                var fullOptionPath = \"\".concat(fullOptionName, \".\").concat(optionName);\r\n                if (!IGNORE_COLUMN_OPTION_NAMES[optionName] && that._skipProcessingColumnsChange !== fullOptionPath) {\r\n                    that._skipProcessingColumnsChange = fullOptionPath;\r\n                    that.component._notifyOptionChanged(fullOptionPath, value, prevValue);\r\n                    that._skipProcessingColumnsChange = false\r\n                }\r\n            };\r\n            var columnOptionCore = function(that, column, optionName, value, notFireEvent) {\r\n                var optionGetter = compileGetter(optionName);\r\n                var columnIndex = column.index;\r\n                var columns;\r\n                var changeType;\r\n                var initialColumn;\r\n                if (3 === arguments.length) {\r\n                    return optionGetter(column, {\r\n                        functionsAsIs: true\r\n                    })\r\n                }\r\n                var prevValue = optionGetter(column, {\r\n                    functionsAsIs: true\r\n                });\r\n                if (prevValue !== value) {\r\n                    if (\"groupIndex\" === optionName || \"calculateGroupValue\" === optionName) {\r\n                        changeType = \"grouping\";\r\n                        updateSortOrderWhenGrouping(that, column, value, prevValue)\r\n                    } else if (\"sortIndex\" === optionName || \"sortOrder\" === optionName || \"calculateSortValue\" === optionName) {\r\n                        changeType = \"sorting\"\r\n                    } else {\r\n                        changeType = \"columns\"\r\n                    }\r\n                    var optionSetter = compileSetter(optionName);\r\n                    optionSetter(column, value, {\r\n                        functionsAsIs: true\r\n                    });\r\n                    var fullOptionName = getColumnFullPath(that, column);\r\n                    if (COLUMN_INDEX_OPTIONS[optionName]) {\r\n                        updateIndexes(that, column);\r\n                        value = optionGetter(column)\r\n                    }\r\n                    if (\"name\" === optionName || \"allowEditing\" === optionName) {\r\n                        that._checkColumns()\r\n                    }\r\n                    fullOptionName && fireOptionChanged(that, {\r\n                        fullOptionName: fullOptionName,\r\n                        optionName: optionName,\r\n                        value: value,\r\n                        prevValue: prevValue\r\n                    });\r\n                    if (!isDefined(prevValue) && !isDefined(value) && 0 !== optionName.indexOf(\"buffer\")) {\r\n                        notFireEvent = true\r\n                    }\r\n                    if (!notFireEvent) {\r\n                        if (inArray(optionName, USER_STATE_FIELD_NAMES) < 0 && \"visibleWidth\" !== optionName) {\r\n                            columns = that.option(\"columns\");\r\n                            initialColumn = that.getColumnByPath(fullOptionName, columns);\r\n                            if (isString(initialColumn)) {\r\n                                initialColumn = columns[columnIndex] = {\r\n                                    dataField: initialColumn\r\n                                }\r\n                            }\r\n                            if (initialColumn && checkUserStateColumn(initialColumn, column)) {\r\n                                optionSetter(initialColumn, value, {\r\n                                    functionsAsIs: true\r\n                                })\r\n                            }\r\n                        }\r\n                        updateColumnChanges(that, changeType, optionName, columnIndex)\r\n                    } else {\r\n                        resetColumnsCache(that)\r\n                    }\r\n                }\r\n            };\r\n\r\n            function isSortOrderValid(sortOrder) {\r\n                return \"asc\" === sortOrder || \"desc\" === sortOrder\r\n            }\r\n            var defaultSetCellValue = function(data, value) {\r\n                var path = this.dataField.split(\".\");\r\n                var dotCount = path.length - 1;\r\n                if (this.serializeValue) {\r\n                    value = this.serializeValue(value)\r\n                }\r\n                for (var i = 0; i < dotCount; i++) {\r\n                    var name = path[i];\r\n                    data = data[name] = data[name] || {}\r\n                }\r\n                data[path[dotCount]] = value\r\n            };\r\n            var isCustomCommandColumn = (that, commandColumn) => !!that._columns.filter(column => column.type === commandColumn.type).length;\r\n            var getFixedPosition = function(that, column) {\r\n                var rtlEnabled = that.option(\"rtlEnabled\");\r\n                if (column.command && !isCustomCommandColumn(that, column) || !column.fixedPosition) {\r\n                    return rtlEnabled ? \"right\" : \"left\"\r\n                }\r\n                return column.fixedPosition\r\n            };\r\n            var processExpandColumns = function(columns, expandColumns, type, columnIndex) {\r\n                var customColumnIndex;\r\n                var rowCount = this.getRowCount();\r\n                var rowspan = columns[columnIndex] && columns[columnIndex].rowspan;\r\n                var expandColumnsByType = expandColumns.filter(column => column.type === type);\r\n                columns.forEach((column, index) => {\r\n                    if (column.type === type) {\r\n                        customColumnIndex = index;\r\n                        rowspan = columns[index + 1] ? columns[index + 1].rowspan : rowCount\r\n                    }\r\n                });\r\n                if (rowspan > 1) {\r\n                    expandColumnsByType = map(expandColumnsByType, (function(expandColumn) {\r\n                        return extend({}, expandColumn, {\r\n                            rowspan: rowspan\r\n                        })\r\n                    }))\r\n                }\r\n                expandColumnsByType.unshift.apply(expandColumnsByType, isDefined(customColumnIndex) ? [customColumnIndex, 1] : [columnIndex, 0]);\r\n                columns.splice.apply(columns, expandColumnsByType);\r\n                return rowspan || 1\r\n            };\r\n            var numberToString = function(number, digitsCount) {\r\n                var str = number ? number.toString() : \"0\";\r\n                while (str.length < digitsCount) {\r\n                    str = \"0\" + str\r\n                }\r\n                return str\r\n            };\r\n            var mergeColumns = (that, columns, commandColumns, needToExtend) => {\r\n                var column;\r\n                var commandColumnIndex;\r\n                var result = columns.slice().map(column => extend({}, column));\r\n                var isColumnFixing = that._isColumnFixing();\r\n                var defaultCommandColumns = commandColumns.slice().map(column => extend({\r\n                    fixed: isColumnFixing\r\n                }, column));\r\n                var getCommandColumnIndex = column => commandColumns.reduce((result, commandColumn, index) => {\r\n                    var columnType = needToExtend && column.type === GROUP_COMMAND_COLUMN_NAME ? \"expand\" : column.type;\r\n                    return commandColumn.type === columnType || commandColumn.command === column.command ? index : result\r\n                }, -1);\r\n                var callbackFilter = commandColumn => commandColumn.command !== commandColumns[commandColumnIndex].command;\r\n                for (var i = 0; i < columns.length; i++) {\r\n                    column = columns[i];\r\n                    commandColumnIndex = column && (column.type || column.command) ? getCommandColumnIndex(column) : -1;\r\n                    if (commandColumnIndex >= 0) {\r\n                        if (needToExtend) {\r\n                            result[i] = extend({\r\n                                fixed: isColumnFixing\r\n                            }, commandColumns[commandColumnIndex], column);\r\n                            if (column.type !== GROUP_COMMAND_COLUMN_NAME) {\r\n                                defaultCommandColumns = defaultCommandColumns.filter(callbackFilter)\r\n                            }\r\n                        } else {\r\n                            var columnOptions = {\r\n                                visibleIndex: column.visibleIndex,\r\n                                index: column.index,\r\n                                headerId: column.headerId,\r\n                                allowFixing: 0 === column.groupIndex,\r\n                                allowReordering: 0 === column.groupIndex,\r\n                                groupIndex: column.groupIndex\r\n                            };\r\n                            result[i] = extend({}, column, commandColumns[commandColumnIndex], column.type === GROUP_COMMAND_COLUMN_NAME && columnOptions)\r\n                        }\r\n                    }\r\n                }\r\n                if (columns.length && needToExtend && defaultCommandColumns.length) {\r\n                    result = result.concat(defaultCommandColumns)\r\n                }\r\n                return result\r\n            };\r\n            var isColumnFixed = (that, column) => isDefined(column.fixed) || !column.type ? column.fixed : that._isColumnFixing();\r\n            var resetBandColumnsCache = that => {\r\n                that._bandColumnsCache = void 0\r\n            };\r\n            var findColumn = (columns, identifier) => {\r\n                var identifierOptionName = isString(identifier) && identifier.substr(0, identifier.indexOf(\":\"));\r\n                var column;\r\n                if (void 0 === identifier) {\r\n                    return\r\n                }\r\n                if (identifierOptionName) {\r\n                    identifier = identifier.substr(identifierOptionName.length + 1)\r\n                }\r\n                if (identifierOptionName) {\r\n                    column = columns.filter(column => \"\" + column[identifierOptionName] === identifier)[0]\r\n                } else {\r\n                    [\"index\", \"name\", \"dataField\", \"caption\"].some(optionName => {\r\n                        column = columns.filter(column => column[optionName] === identifier)[0];\r\n                        return !!column\r\n                    })\r\n                }\r\n                return column\r\n            };\r\n            return {\r\n                _getExpandColumnOptions: function() {\r\n                    return {\r\n                        type: \"expand\",\r\n                        command: \"expand\",\r\n                        width: \"auto\",\r\n                        cssClass: COMMAND_EXPAND_CLASS,\r\n                        allowEditing: false,\r\n                        allowGrouping: false,\r\n                        allowSorting: false,\r\n                        allowResizing: false,\r\n                        allowReordering: false,\r\n                        allowHiding: false\r\n                    }\r\n                },\r\n                _getFirstItems: function(dataSource) {\r\n                    var groupsCount;\r\n                    var items = [];\r\n                    if (dataSource && dataSource.items().length > 0) {\r\n                        groupsCount = gridCoreUtils.normalizeSortingInfo(dataSource.group()).length;\r\n                        items = function getFirstItemsCore(items, groupsCount) {\r\n                            if (!items || !groupsCount) {\r\n                                return items\r\n                            }\r\n                            for (var i = 0; i < items.length; i++) {\r\n                                var childItems = getFirstItemsCore(items[i].items || items[i].collapsedItems, groupsCount - 1);\r\n                                if (childItems && childItems.length) {\r\n                                    return childItems\r\n                                }\r\n                            }\r\n                        }(dataSource.items(), groupsCount) || []\r\n                    }\r\n                    return items\r\n                },\r\n                _endUpdateCore: function() {\r\n                    !this._skipProcessingColumnsChange && fireColumnsChanged(this)\r\n                },\r\n                init: function() {\r\n                    var columns = this.option(\"columns\");\r\n                    this._commandColumns = this._commandColumns || [];\r\n                    this._columns = this._columns || [];\r\n                    this._isColumnsFromOptions = !!columns;\r\n                    if (this._isColumnsFromOptions) {\r\n                        assignColumns(this, columns ? createColumnsFromOptions(this, columns) : []);\r\n                        applyUserState(this)\r\n                    } else {\r\n                        assignColumns(this, this._columnsUserState ? createColumnsFromOptions(this, this._columnsUserState) : this._columns)\r\n                    }! function(that) {\r\n                        var options = that._getExpandColumnOptions();\r\n                        that.addCommandColumn(options)\r\n                    }(this);\r\n                    if (this._dataSourceApplied) {\r\n                        this.applyDataSource(this._dataSource, true)\r\n                    } else {\r\n                        updateIndexes(this)\r\n                    }\r\n                    this._checkColumns()\r\n                },\r\n                callbackNames: function() {\r\n                    return [\"columnsChanged\"]\r\n                },\r\n                getColumnByPath: function(path, columns) {\r\n                    var column;\r\n                    var columnIndexes = [];\r\n                    path.replace(regExp, (function(_, columnIndex) {\r\n                        columnIndexes.push(parseInt(columnIndex));\r\n                        return \"\"\r\n                    }));\r\n                    if (columnIndexes.length) {\r\n                        if (columns) {\r\n                            column = columnIndexes.reduce((function(column, index) {\r\n                                return column && column.columns && column.columns[index]\r\n                            }), {\r\n                                columns: columns\r\n                            })\r\n                        } else {\r\n                            column = function(that, columnIndexes) {\r\n                                var result;\r\n                                var columns;\r\n                                var bandColumnsCache = that.getBandColumnsCache();\r\n                                var callbackFilter = function(column) {\r\n                                    var ownerBand = result ? result.index : void 0;\r\n                                    return column.ownerBand === ownerBand\r\n                                };\r\n                                if (bandColumnsCache.isPlain) {\r\n                                    result = that._columns[columnIndexes[0]]\r\n                                } else {\r\n                                    columns = that._columns.filter(callbackFilter);\r\n                                    for (var i = 0; i < columnIndexes.length; i++) {\r\n                                        result = columns[columnIndexes[i]];\r\n                                        if (result) {\r\n                                            columns = that._columns.filter(callbackFilter)\r\n                                        }\r\n                                    }\r\n                                }\r\n                                return result\r\n                            }(this, columnIndexes)\r\n                        }\r\n                    }\r\n                    return column\r\n                },\r\n                optionChanged: function(args) {\r\n                    var needUpdateRequireResize;\r\n                    switch (args.name) {\r\n                        case \"adaptColumnWidthByRatio\":\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"dataSource\":\r\n                            if (args.value !== args.previousValue && !this.option(\"columns\") && (!Array.isArray(args.value) || !Array.isArray(args.previousValue))) {\r\n                                this._columns = []\r\n                            }\r\n                            break;\r\n                        case \"columns\":\r\n                            needUpdateRequireResize = this._skipProcessingColumnsChange;\r\n                            args.handled = true;\r\n                            if (!this._skipProcessingColumnsChange) {\r\n                                if (args.name === args.fullName) {\r\n                                    this._columnsUserState = null;\r\n                                    this._ignoreColumnOptionNames = null;\r\n                                    this.init()\r\n                                } else {\r\n                                    this._columnOptionChanged(args);\r\n                                    needUpdateRequireResize = true\r\n                                }\r\n                            }\r\n                            if (needUpdateRequireResize) {\r\n                                this._updateRequireResize(args)\r\n                            }\r\n                            break;\r\n                        case \"commonColumnSettings\":\r\n                        case \"columnAutoWidth\":\r\n                        case \"allowColumnResizing\":\r\n                        case \"allowColumnReordering\":\r\n                        case \"columnFixing\":\r\n                        case \"grouping\":\r\n                        case \"groupPanel\":\r\n                        case \"regenerateColumnsByVisibleItems\":\r\n                        case \"customizeColumns\":\r\n                        case \"columnHidingEnabled\":\r\n                        case \"dateSerializationFormat\":\r\n                        case \"columnResizingMode\":\r\n                        case \"columnMinWidth\":\r\n                        case \"columnWidth\":\r\n                            args.handled = true;\r\n                            var ignoreColumnOptionNames = \"columnWidth\" === args.fullName && [\"width\"];\r\n                            this.reinit(ignoreColumnOptionNames);\r\n                            break;\r\n                        case \"rtlEnabled\":\r\n                            this.reinit();\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                _columnOptionChanged: function(args) {\r\n                    var columnOptionValue = {};\r\n                    var column = this.getColumnByPath(args.fullName);\r\n                    var columnOptionName = args.fullName.replace(regExp, \"\");\r\n                    if (column) {\r\n                        if (columnOptionName) {\r\n                            columnOptionValue[columnOptionName] = args.value\r\n                        } else {\r\n                            columnOptionValue = args.value\r\n                        }\r\n                        this._skipProcessingColumnsChange = args.fullName;\r\n                        this.columnOption(column.index, columnOptionValue);\r\n                        this._skipProcessingColumnsChange = false\r\n                    }\r\n                },\r\n                _updateRequireResize: function(args) {\r\n                    var component = this.component;\r\n                    if (\"width\" === args.fullName.replace(regExp, \"\") && component._updateLockCount) {\r\n                        component._requireResize = true\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    return [\"addColumn\", \"deleteColumn\", \"columnOption\", \"columnCount\", \"clearSorting\", \"clearGrouping\", \"getVisibleColumns\", \"getVisibleColumnIndex\"]\r\n                },\r\n                applyDataSource: function(dataSource, forceApplying) {\r\n                    var isDataSourceLoaded = dataSource && dataSource.isLoaded();\r\n                    this._dataSource = dataSource;\r\n                    if (!this._dataSourceApplied || 0 === this._dataSourceColumnsCount || forceApplying || this.option(\"regenerateColumnsByVisibleItems\")) {\r\n                        if (isDataSourceLoaded) {\r\n                            if (!this._isColumnsFromOptions) {\r\n                                var columnsFromDataSource = function(that, dataSource) {\r\n                                    var firstItems = that._getFirstItems(dataSource);\r\n                                    var fieldName;\r\n                                    var processedFields = {};\r\n                                    var result = [];\r\n                                    for (var i = 0; i < firstItems.length; i++) {\r\n                                        if (firstItems[i]) {\r\n                                            for (fieldName in firstItems[i]) {\r\n                                                if (!isFunction(firstItems[i][fieldName]) || variableWrapper.isWrapped(firstItems[i][fieldName])) {\r\n                                                    processedFields[fieldName] = true\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    for (fieldName in processedFields) {\r\n                                        if (0 !== fieldName.indexOf(\"__\")) {\r\n                                            var column = createColumn(that, fieldName);\r\n                                            result.push(column)\r\n                                        }\r\n                                    }\r\n                                    return result\r\n                                }(this, dataSource);\r\n                                if (columnsFromDataSource.length) {\r\n                                    assignColumns(this, columnsFromDataSource);\r\n                                    this._dataSourceColumnsCount = this._columns.length;\r\n                                    applyUserState(this)\r\n                                }\r\n                            }\r\n                            return this.updateColumns(dataSource, forceApplying)\r\n                        } else {\r\n                            this._dataSourceApplied = false\r\n                        }\r\n                    } else if (isDataSourceLoaded && !this.isAllDataTypesDefined(true) && this.updateColumnDataTypes(dataSource)) {\r\n                        updateColumnChanges(this, \"columns\");\r\n                        fireColumnsChanged(this);\r\n                        return (new Deferred).reject().promise()\r\n                    }\r\n                },\r\n                reset: function() {\r\n                    this._dataSource = null;\r\n                    this._dataSourceApplied = false;\r\n                    this._dataSourceColumnsCount = void 0;\r\n                    this.reinit()\r\n                },\r\n                resetColumnsCache: function() {\r\n                    this._visibleColumns = void 0;\r\n                    this._fixedColumns = void 0;\r\n                    this._rowCount = void 0;\r\n                    resetBandColumnsCache(this)\r\n                },\r\n                reinit: function(ignoreColumnOptionNames) {\r\n                    this._columnsUserState = this.getUserState();\r\n                    this._ignoreColumnOptionNames = ignoreColumnOptionNames || null;\r\n                    this.init();\r\n                    if (ignoreColumnOptionNames) {\r\n                        this._ignoreColumnOptionNames = null\r\n                    }\r\n                },\r\n                isInitialized: function() {\r\n                    return !!this._columns.length || !!this.option(\"columns\")\r\n                },\r\n                isDataSourceApplied: function() {\r\n                    return this._dataSourceApplied\r\n                },\r\n                getCommonSettings: function(column) {\r\n                    var commonColumnSettings = (!column || !column.type) && this.option(\"commonColumnSettings\") || {};\r\n                    var groupingOptions = this.option(\"grouping\") || {};\r\n                    var groupPanelOptions = this.option(\"groupPanel\") || {};\r\n                    return extend({\r\n                        allowFixing: this.option(\"columnFixing.enabled\"),\r\n                        allowResizing: this.option(\"allowColumnResizing\") || void 0,\r\n                        allowReordering: this.option(\"allowColumnReordering\"),\r\n                        minWidth: this.option(\"columnMinWidth\"),\r\n                        width: this.option(\"columnWidth\"),\r\n                        autoExpandGroup: groupingOptions.autoExpandAll,\r\n                        allowCollapsing: groupingOptions.allowCollapsing,\r\n                        allowGrouping: groupPanelOptions.allowColumnDragging && groupPanelOptions.visible || groupingOptions.contextMenuEnabled\r\n                    }, commonColumnSettings)\r\n                },\r\n                isColumnOptionUsed: function(optionName) {\r\n                    for (var i = 0; i < this._columns.length; i++) {\r\n                        if (this._columns[i][optionName]) {\r\n                            return true\r\n                        }\r\n                    }\r\n                },\r\n                isAllDataTypesDefined: function(checkSerializers) {\r\n                    var columns = this._columns;\r\n                    if (!columns.length) {\r\n                        return false\r\n                    }\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        if (!columns[i].dataField && columns[i].calculateCellValue === columns[i].defaultCalculateCellValue) {\r\n                            continue\r\n                        }\r\n                        if (!columns[i].dataType || checkSerializers && columns[i].deserializeValue && void 0 === columns[i].serializationFormat) {\r\n                            return false\r\n                        }\r\n                    }\r\n                    return true\r\n                },\r\n                getColumns: function() {\r\n                    return this._columns\r\n                },\r\n                isBandColumnsUsed: function() {\r\n                    return this.getColumns().some((function(column) {\r\n                        return column.isBand\r\n                    }))\r\n                },\r\n                getGroupColumns: function() {\r\n                    var result = [];\r\n                    each(this._columns, (function() {\r\n                        if (isDefined(this.groupIndex)) {\r\n                            result[this.groupIndex] = this\r\n                        }\r\n                    }));\r\n                    return result\r\n                },\r\n                getVisibleColumns: function(rowIndex) {\r\n                    this._visibleColumns = this._visibleColumns || this._getVisibleColumnsCore();\r\n                    rowIndex = isDefined(rowIndex) ? rowIndex : this._visibleColumns.length - 1;\r\n                    return this._visibleColumns[rowIndex] || []\r\n                },\r\n                getFixedColumns: function(rowIndex) {\r\n                    this._fixedColumns = this._fixedColumns || this._getFixedColumnsCore();\r\n                    rowIndex = isDefined(rowIndex) ? rowIndex : this._fixedColumns.length - 1;\r\n                    return this._fixedColumns[rowIndex] || []\r\n                },\r\n                getFilteringColumns: function() {\r\n                    return this.getColumns().filter(item => (item.dataField || item.name) && (item.allowFiltering || item.allowHeaderFiltering)).map(item => {\r\n                        var field = extend(true, {}, item);\r\n                        if (!isDefined(field.dataField)) {\r\n                            field.dataField = field.name\r\n                        }\r\n                        field.filterOperations = item.filterOperations !== item.defaultFilterOperations ? field.filterOperations : null;\r\n                        return field\r\n                    })\r\n                },\r\n                getColumnIndexOffset: function() {\r\n                    return 0\r\n                },\r\n                _getFixedColumnsCore: function() {\r\n                    var result = [];\r\n                    var rowCount = this.getRowCount();\r\n                    var isColumnFixing = this._isColumnFixing();\r\n                    var transparentColumn = {\r\n                        command: \"transparent\"\r\n                    };\r\n                    var transparentColspan = 0;\r\n                    var notFixedColumnCount;\r\n                    var transparentColumnIndex;\r\n                    var lastFixedPosition;\r\n                    if (isColumnFixing) {\r\n                        for (var i = 0; i <= rowCount; i++) {\r\n                            notFixedColumnCount = 0;\r\n                            lastFixedPosition = null;\r\n                            transparentColumnIndex = null;\r\n                            var visibleColumns = this.getVisibleColumns(i, true);\r\n                            for (var j = 0; j < visibleColumns.length; j++) {\r\n                                var prevColumn = visibleColumns[j - 1];\r\n                                var column = visibleColumns[j];\r\n                                if (!column.fixed) {\r\n                                    if (0 === i) {\r\n                                        if (column.isBand && column.colspan) {\r\n                                            transparentColspan += column.colspan\r\n                                        } else {\r\n                                            transparentColspan++\r\n                                        }\r\n                                    }\r\n                                    notFixedColumnCount++;\r\n                                    if (!isDefined(transparentColumnIndex)) {\r\n                                        transparentColumnIndex = j\r\n                                    }\r\n                                } else if (prevColumn && prevColumn.fixed && getFixedPosition(this, prevColumn) !== getFixedPosition(this, column)) {\r\n                                    if (!isDefined(transparentColumnIndex)) {\r\n                                        transparentColumnIndex = j\r\n                                    }\r\n                                } else {\r\n                                    lastFixedPosition = column.fixedPosition\r\n                                }\r\n                            }\r\n                            if (0 === i && (0 === notFixedColumnCount || notFixedColumnCount >= visibleColumns.length)) {\r\n                                return []\r\n                            }\r\n                            if (!isDefined(transparentColumnIndex)) {\r\n                                transparentColumnIndex = \"right\" === lastFixedPosition ? 0 : visibleColumns.length\r\n                            }\r\n                            result[i] = visibleColumns.slice(0);\r\n                            if (!transparentColumn.colspan) {\r\n                                transparentColumn.colspan = transparentColspan\r\n                            }\r\n                            result[i].splice(transparentColumnIndex, notFixedColumnCount, transparentColumn)\r\n                        }\r\n                    }\r\n                    return result.map(columns => columns.map(column => {\r\n                        var newColumn = _extends({}, column);\r\n                        if (newColumn.headerId) {\r\n                            newColumn.headerId += \"-fixed\"\r\n                        }\r\n                        return newColumn\r\n                    }))\r\n                },\r\n                _isColumnFixing: function() {\r\n                    var isColumnFixing = this.option(\"columnFixing.enabled\");\r\n                    !isColumnFixing && each(this._columns, (function(_, column) {\r\n                        if (column.fixed) {\r\n                            isColumnFixing = true;\r\n                            return false\r\n                        }\r\n                    }));\r\n                    return isColumnFixing\r\n                },\r\n                _getExpandColumnsCore: function() {\r\n                    return this.getGroupColumns()\r\n                },\r\n                getExpandColumns: function() {\r\n                    var expandColumns = this._getExpandColumnsCore();\r\n                    var expandColumn;\r\n                    var firstGroupColumn = expandColumns.filter(column => 0 === column.groupIndex)[0];\r\n                    var isFixedFirstGroupColumn = firstGroupColumn && firstGroupColumn.fixed;\r\n                    var isColumnFixing = this._isColumnFixing();\r\n                    if (expandColumns.length) {\r\n                        expandColumn = this.columnOption(\"command:expand\")\r\n                    }\r\n                    expandColumns = map(expandColumns, column => extend({}, column, {\r\n                        visibleWidth: null,\r\n                        minWidth: null,\r\n                        cellTemplate: !isDefined(column.groupIndex) ? column.cellTemplate : null,\r\n                        headerCellTemplate: null,\r\n                        fixed: !isDefined(column.groupIndex) || !isFixedFirstGroupColumn ? isColumnFixing : true\r\n                    }, expandColumn, {\r\n                        index: column.index,\r\n                        type: column.type || GROUP_COMMAND_COLUMN_NAME\r\n                    }));\r\n                    return expandColumns\r\n                },\r\n                getBandColumnsCache: function() {\r\n                    if (!this._bandColumnsCache) {\r\n                        var columns = this._columns;\r\n                        var columnChildrenByIndex = {};\r\n                        var columnParentByIndex = {};\r\n                        var isPlain = true;\r\n                        columns.forEach((function(column) {\r\n                            var ownerBand = column.ownerBand;\r\n                            var parentIndex = isObject(ownerBand) ? ownerBand.index : ownerBand;\r\n                            var parent = columns[parentIndex];\r\n                            if (column.hasColumns) {\r\n                                isPlain = false\r\n                            }\r\n                            if (column.colspan) {\r\n                                column.colspan = void 0\r\n                            }\r\n                            if (column.rowspan) {\r\n                                column.rowspan = void 0\r\n                            }\r\n                            if (parent) {\r\n                                columnParentByIndex[column.index] = parent\r\n                            } else {\r\n                                parentIndex = -1\r\n                            }\r\n                            columnChildrenByIndex[parentIndex] = columnChildrenByIndex[parentIndex] || [];\r\n                            columnChildrenByIndex[parentIndex].push(column)\r\n                        }));\r\n                        this._bandColumnsCache = {\r\n                            isPlain: isPlain,\r\n                            columnChildrenByIndex: columnChildrenByIndex,\r\n                            columnParentByIndex: columnParentByIndex\r\n                        }\r\n                    }\r\n                    return this._bandColumnsCache\r\n                },\r\n                _isColumnVisible: function(column) {\r\n                    return column.visible && this.isParentColumnVisible(column.index)\r\n                },\r\n                _getVisibleColumnsCore: function() {\r\n                    var that = this;\r\n                    var i;\r\n                    var result = [];\r\n                    var rowspanGroupColumns = 0;\r\n                    var rowspanExpandColumns = 0;\r\n                    var rowCount = that.getRowCount();\r\n                    var positiveIndexedColumns = [];\r\n                    var negativeIndexedColumns = [];\r\n                    var notGroupedColumnsCount = 0;\r\n                    var isFixedToEnd;\r\n                    var rtlEnabled = that.option(\"rtlEnabled\");\r\n                    var bandColumnsCache = that.getBandColumnsCache();\r\n                    var expandColumns = mergeColumns(that, that.getExpandColumns(), that._columns);\r\n                    var columns = mergeColumns(that, that._columns, that._commandColumns, true);\r\n                    var columnDigitsCount = function(number) {\r\n                        var i;\r\n                        for (i = 0; number > 1; i++) {\r\n                            number /= 10\r\n                        }\r\n                        return i\r\n                    }(columns.length);\r\n                    ! function(that, columns, bandColumnsCache) {\r\n                        var rowspan;\r\n                        for (var i = 0; i < columns.length; i++) {\r\n                            var column = columns[i];\r\n                            if (column.visible || column.command) {\r\n                                if (column.isBand) {\r\n                                    column.colspan = column.colspan || calculateColspan(that, column.index)\r\n                                }\r\n                                if (!column.isBand || !column.colspan) {\r\n                                    rowspan = that.getRowCount();\r\n                                    if (!column.command && (!isDefined(column.groupIndex) || column.showWhenGrouped)) {\r\n                                        rowspan -= getParentBandColumns(column.index, bandColumnsCache.columnParentByIndex).length\r\n                                    }\r\n                                    if (rowspan > 1) {\r\n                                        column.rowspan = rowspan\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }(that, columns, bandColumnsCache);\r\n                    for (i = 0; i < rowCount; i++) {\r\n                        result[i] = [];\r\n                        negativeIndexedColumns[i] = [{}];\r\n                        positiveIndexedColumns[i] = [{}, {}, {}]\r\n                    }\r\n                    each(columns, (function() {\r\n                        var visibleIndex = this.visibleIndex;\r\n                        var indexedColumns;\r\n                        var parentBandColumns = getParentBandColumns(this.index, bandColumnsCache.columnParentByIndex);\r\n                        var visible = that._isColumnVisible(this);\r\n                        if (visible && (!isDefined(this.groupIndex) || this.showWhenGrouped)) {\r\n                            var rowIndex = parentBandColumns.length;\r\n                            if (visibleIndex < 0) {\r\n                                visibleIndex = -visibleIndex;\r\n                                indexedColumns = negativeIndexedColumns[rowIndex]\r\n                            } else {\r\n                                this.fixed = parentBandColumns.length ? parentBandColumns[0].fixed : this.fixed;\r\n                                this.fixedPosition = parentBandColumns.length ? parentBandColumns[0].fixedPosition : this.fixedPosition;\r\n                                if (this.fixed) {\r\n                                    isFixedToEnd = \"right\" === this.fixedPosition;\r\n                                    if (rtlEnabled && (!this.command || isCustomCommandColumn(that, this))) {\r\n                                        isFixedToEnd = !isFixedToEnd\r\n                                    }\r\n                                    if (isFixedToEnd) {\r\n                                        indexedColumns = positiveIndexedColumns[rowIndex][2]\r\n                                    } else {\r\n                                        indexedColumns = positiveIndexedColumns[rowIndex][0]\r\n                                    }\r\n                                } else {\r\n                                    indexedColumns = positiveIndexedColumns[rowIndex][1]\r\n                                }\r\n                            }\r\n                            if (parentBandColumns.length) {\r\n                                visibleIndex = numberToString(visibleIndex, columnDigitsCount);\r\n                                for (i = parentBandColumns.length - 1; i >= 0; i--) {\r\n                                    visibleIndex = numberToString(parentBandColumns[i].visibleIndex, columnDigitsCount) + visibleIndex\r\n                                }\r\n                            }\r\n                            indexedColumns[visibleIndex] = indexedColumns[visibleIndex] || [];\r\n                            indexedColumns[visibleIndex].push(this);\r\n                            notGroupedColumnsCount++\r\n                        }\r\n                    }));\r\n                    each(result, (function(rowIndex) {\r\n                        orderEach(negativeIndexedColumns[rowIndex], (function(_, columns) {\r\n                            result[rowIndex].unshift.apply(result[rowIndex], columns)\r\n                        }));\r\n                        var firstPositiveIndexColumn = result[rowIndex].length;\r\n                        each(positiveIndexedColumns[rowIndex], (function(index, columnsByFixing) {\r\n                            orderEach(columnsByFixing, (function(_, columnsByVisibleIndex) {\r\n                                result[rowIndex].push.apply(result[rowIndex], columnsByVisibleIndex)\r\n                            }))\r\n                        }));\r\n                        if (rowspanExpandColumns < rowIndex + 1) {\r\n                            rowspanExpandColumns += processExpandColumns.call(that, result[rowIndex], expandColumns, \"detailExpand\", firstPositiveIndexColumn)\r\n                        }\r\n                        if (rowspanGroupColumns < rowIndex + 1) {\r\n                            rowspanGroupColumns += processExpandColumns.call(that, result[rowIndex], expandColumns, GROUP_COMMAND_COLUMN_NAME, firstPositiveIndexColumn)\r\n                        }\r\n                    }));\r\n                    result.push(function getDataColumns(columns, rowIndex, bandColumnID) {\r\n                        var result = [];\r\n                        rowIndex = rowIndex || 0;\r\n                        columns[rowIndex] && each(columns[rowIndex], (function(_, column) {\r\n                            if (column.ownerBand === bandColumnID || column.type === GROUP_COMMAND_COLUMN_NAME) {\r\n                                if (!column.isBand || !column.colspan) {\r\n                                    if (!column.command || rowIndex < 1) {\r\n                                        result.push(column)\r\n                                    }\r\n                                } else {\r\n                                    result.push.apply(result, getDataColumns(columns, rowIndex + 1, column.index))\r\n                                }\r\n                            }\r\n                        }));\r\n                        return result\r\n                    }(result));\r\n                    if (!notGroupedColumnsCount && that._columns.length) {\r\n                        result[rowCount].push({\r\n                            command: \"empty\"\r\n                        })\r\n                    }\r\n                    return result\r\n                },\r\n                getInvisibleColumns: function(columns, bandColumnIndex) {\r\n                    var that = this;\r\n                    var result = [];\r\n                    var hiddenColumnsByBand;\r\n                    columns = columns || that._columns;\r\n                    each(columns, (function(_, column) {\r\n                        if (column.ownerBand !== bandColumnIndex) {\r\n                            return\r\n                        }\r\n                        if (column.isBand) {\r\n                            if (!column.visible) {\r\n                                hiddenColumnsByBand = that.getChildrenByBandColumn(column.index)\r\n                            } else {\r\n                                hiddenColumnsByBand = that.getInvisibleColumns(that.getChildrenByBandColumn(column.index), column.index)\r\n                            }\r\n                            if (hiddenColumnsByBand.length) {\r\n                                result.push(column);\r\n                                result = result.concat(hiddenColumnsByBand)\r\n                            }\r\n                            return\r\n                        }\r\n                        if (!column.visible) {\r\n                            result.push(column)\r\n                        }\r\n                    }));\r\n                    return result\r\n                },\r\n                getChooserColumns: function(getAllColumns) {\r\n                    var columns = getAllColumns ? this.getColumns() : this.getInvisibleColumns();\r\n                    var columnChooserColumns = columns.filter(column => column.showInColumnChooser);\r\n                    var sortOrder = this.option(\"columnChooser.sortOrder\");\r\n                    return ((columns, sortOrder) => {\r\n                        if (\"asc\" !== sortOrder && \"desc\" !== sortOrder) {\r\n                            return columns\r\n                        }\r\n                        var sign = \"asc\" === sortOrder ? 1 : -1;\r\n                        columns.sort((function(column1, column2) {\r\n                            var caption1 = column1.caption || \"\";\r\n                            var caption2 = column2.caption || \"\";\r\n                            return sign * caption1.localeCompare(caption2)\r\n                        }));\r\n                        return columns\r\n                    })(columnChooserColumns, sortOrder)\r\n                },\r\n                allowMoveColumn: function(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation) {\r\n                    var columnIndex = getColumnIndexByVisibleIndex(this, fromVisibleIndex, sourceLocation);\r\n                    var sourceColumn = this._columns[columnIndex];\r\n                    if (sourceColumn && (sourceColumn.allowReordering || sourceColumn.allowGrouping || sourceColumn.allowHiding)) {\r\n                        if (sourceLocation === targetLocation) {\r\n                            if (\"columnChooser\" === sourceLocation) {\r\n                                return false\r\n                            }\r\n                            fromVisibleIndex = isObject(fromVisibleIndex) ? fromVisibleIndex.columnIndex : fromVisibleIndex;\r\n                            toVisibleIndex = isObject(toVisibleIndex) ? toVisibleIndex.columnIndex : toVisibleIndex;\r\n                            return fromVisibleIndex !== toVisibleIndex && fromVisibleIndex + 1 !== toVisibleIndex\r\n                        } else if (\"group\" === sourceLocation && \"columnChooser\" !== targetLocation || \"group\" === targetLocation) {\r\n                            return sourceColumn && sourceColumn.allowGrouping\r\n                        } else if (\"columnChooser\" === sourceLocation || \"columnChooser\" === targetLocation) {\r\n                            return sourceColumn && sourceColumn.allowHiding\r\n                        }\r\n                        return true\r\n                    }\r\n                    return false\r\n                },\r\n                moveColumn: function(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation) {\r\n                    var options = {};\r\n                    var prevGroupIndex;\r\n                    var fromIndex = getColumnIndexByVisibleIndex(this, fromVisibleIndex, sourceLocation);\r\n                    var toIndex = getColumnIndexByVisibleIndex(this, toVisibleIndex, targetLocation);\r\n                    var targetGroupIndex;\r\n                    if (fromIndex >= 0) {\r\n                        var column = this._columns[fromIndex];\r\n                        toVisibleIndex = isObject(toVisibleIndex) ? toVisibleIndex.columnIndex : toVisibleIndex;\r\n                        targetGroupIndex = toIndex >= 0 ? this._columns[toIndex].groupIndex : -1;\r\n                        if (isDefined(column.groupIndex) && \"group\" === sourceLocation) {\r\n                            if (targetGroupIndex > column.groupIndex) {\r\n                                targetGroupIndex--\r\n                            }\r\n                            if (\"group\" !== targetLocation) {\r\n                                options.groupIndex = void 0\r\n                            } else {\r\n                                prevGroupIndex = column.groupIndex;\r\n                                delete column.groupIndex;\r\n                                updateColumnGroupIndexes(this)\r\n                            }\r\n                        }\r\n                        if (\"group\" === targetLocation) {\r\n                            options.groupIndex = function(that, column, groupIndex) {\r\n                                var groupColumns = that.getGroupColumns();\r\n                                var i;\r\n                                if (groupIndex >= 0) {\r\n                                    for (i = 0; i < groupColumns.length; i++) {\r\n                                        if (groupColumns[i].groupIndex >= groupIndex) {\r\n                                            groupColumns[i].groupIndex++\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    groupIndex = 0;\r\n                                    for (i = 0; i < groupColumns.length; i++) {\r\n                                        groupIndex = Math.max(groupIndex, groupColumns[i].groupIndex + 1)\r\n                                    }\r\n                                }\r\n                                return groupIndex\r\n                            }(this, 0, targetGroupIndex);\r\n                            column.groupIndex = prevGroupIndex\r\n                        } else if (toVisibleIndex >= 0) {\r\n                            var targetColumn = this._columns[toIndex];\r\n                            if (!targetColumn || column.ownerBand !== targetColumn.ownerBand) {\r\n                                options.visibleIndex = MAX_SAFE_INTEGER\r\n                            } else if (isColumnFixed(this, column) ^ isColumnFixed(this, targetColumn)) {\r\n                                options.visibleIndex = MAX_SAFE_INTEGER\r\n                            } else {\r\n                                options.visibleIndex = targetColumn.visibleIndex\r\n                            }\r\n                        }\r\n                        var isVisible = \"columnChooser\" !== targetLocation;\r\n                        if (column.visible !== isVisible) {\r\n                            options.visible = isVisible\r\n                        }\r\n                        this.columnOption(column.index, options)\r\n                    }\r\n                },\r\n                changeSortOrder: function(columnIndex, sortOrder) {\r\n                    var options = {};\r\n                    var sortingOptions = this.option(\"sorting\");\r\n                    var sortingMode = sortingOptions && sortingOptions.mode;\r\n                    var needResetSorting = \"single\" === sortingMode || !sortOrder;\r\n                    var allowSorting = \"single\" === sortingMode || \"multiple\" === sortingMode;\r\n                    var column = this._columns[columnIndex];\r\n                    if (allowSorting && column && column.allowSorting) {\r\n                        if (needResetSorting && !isDefined(column.groupIndex)) {\r\n                            each(this._columns, (function(index) {\r\n                                if (index !== columnIndex && this.sortOrder) {\r\n                                    if (!isDefined(this.groupIndex)) {\r\n                                        delete this.sortOrder\r\n                                    }\r\n                                    delete this.sortIndex\r\n                                }\r\n                            }))\r\n                        }\r\n                        if (isSortOrderValid(sortOrder)) {\r\n                            if (column.sortOrder !== sortOrder) {\r\n                                options.sortOrder = sortOrder\r\n                            }\r\n                        } else if (\"none\" === sortOrder) {\r\n                            if (column.sortOrder) {\r\n                                options.sortIndex = void 0;\r\n                                options.sortOrder = void 0\r\n                            }\r\n                        } else {\r\n                            ! function(column) {\r\n                                if (\"ctrl\" === sortOrder) {\r\n                                    if (!(\"sortOrder\" in column && \"sortIndex\" in column)) {\r\n                                        return false\r\n                                    }\r\n                                    options.sortOrder = void 0;\r\n                                    options.sortIndex = void 0\r\n                                } else if (isDefined(column.groupIndex) || isDefined(column.sortIndex)) {\r\n                                    options.sortOrder = \"desc\" === column.sortOrder ? \"asc\" : \"desc\"\r\n                                } else {\r\n                                    options.sortOrder = \"asc\"\r\n                                }\r\n                                return true\r\n                            }(column)\r\n                        }\r\n                    }\r\n                    this.columnOption(column.index, options)\r\n                },\r\n                getSortDataSourceParameters: function(useLocalSelector) {\r\n                    var sortColumns = [];\r\n                    var sort = [];\r\n                    each(this._columns, (function() {\r\n                        if ((this.dataField || this.selector || this.calculateCellValue) && isDefined(this.sortIndex) && !isDefined(this.groupIndex)) {\r\n                            sortColumns[this.sortIndex] = this\r\n                        }\r\n                    }));\r\n                    each(sortColumns, (function() {\r\n                        var sortOrder = this && this.sortOrder;\r\n                        if (isSortOrderValid(sortOrder)) {\r\n                            var sortItem = {\r\n                                selector: this.calculateSortValue || this.displayField || this.calculateDisplayValue || useLocalSelector && this.selector || this.dataField || this.calculateCellValue,\r\n                                desc: \"desc\" === this.sortOrder\r\n                            };\r\n                            if (this.sortingMethod) {\r\n                                sortItem.compare = this.sortingMethod.bind(this)\r\n                            }\r\n                            sort.push(sortItem)\r\n                        }\r\n                    }));\r\n                    return sort.length > 0 ? sort : null\r\n                },\r\n                getGroupDataSourceParameters: function(useLocalSelector) {\r\n                    var group = [];\r\n                    each(this.getGroupColumns(), (function() {\r\n                        var selector = this.calculateGroupValue || this.displayField || this.calculateDisplayValue || useLocalSelector && this.selector || this.dataField || this.calculateCellValue;\r\n                        if (selector) {\r\n                            var groupItem = {\r\n                                selector: selector,\r\n                                desc: \"desc\" === this.sortOrder,\r\n                                isExpanded: !!this.autoExpandGroup\r\n                            };\r\n                            if (this.sortingMethod) {\r\n                                groupItem.compare = this.sortingMethod.bind(this)\r\n                            }\r\n                            group.push(groupItem)\r\n                        }\r\n                    }));\r\n                    return group.length > 0 ? group : null\r\n                },\r\n                refresh: function(updateNewLookupsOnly) {\r\n                    var deferreds = [];\r\n                    each(this._columns, (function() {\r\n                        var lookup = this.lookup;\r\n                        if (lookup && !this.calculateDisplayValue) {\r\n                            if (updateNewLookupsOnly && lookup.valueMap) {\r\n                                return\r\n                            }\r\n                            if (lookup.update) {\r\n                                deferreds.push(lookup.update())\r\n                            }\r\n                        }\r\n                    }));\r\n                    return when.apply($, deferreds).done(resetColumnsCache.bind(null, this))\r\n                },\r\n                _updateColumnOptions: function(column, columnIndex) {\r\n                    column.selector = column.selector || function(data) {\r\n                        return column.calculateCellValue(data)\r\n                    };\r\n                    each([\"calculateSortValue\", \"calculateGroupValue\", \"calculateDisplayValue\"], (function(_, calculateCallbackName) {\r\n                        var calculateCallback = column[calculateCallbackName];\r\n                        if (isFunction(calculateCallback)) {\r\n                            if (!calculateCallback.originalCallback) {\r\n                                var context = {\r\n                                    column: column\r\n                                };\r\n                                column[calculateCallbackName] = function(data) {\r\n                                    return calculateCallback.call(context.column, data)\r\n                                };\r\n                                column[calculateCallbackName].originalCallback = calculateCallback;\r\n                                column[calculateCallbackName].columnIndex = columnIndex;\r\n                                column[calculateCallbackName].context = context\r\n                            } else {\r\n                                column[calculateCallbackName].context.column = column\r\n                            }\r\n                        }\r\n                    }));\r\n                    if (isString(column.calculateDisplayValue)) {\r\n                        column.displayField = column.calculateDisplayValue;\r\n                        column.calculateDisplayValue = compileGetter(column.displayField)\r\n                    }\r\n                    if (column.calculateDisplayValue) {\r\n                        column.displayValueMap = column.displayValueMap || {}\r\n                    }\r\n                    updateSerializers(column, column.dataType);\r\n                    var lookup = column.lookup;\r\n                    if (lookup) {\r\n                        updateSerializers(lookup, lookup.dataType)\r\n                    }\r\n                    var dataType = lookup ? lookup.dataType : column.dataType;\r\n                    if (dataType) {\r\n                        column.alignment = column.alignment || function(dataType, isRTL) {\r\n                            switch (dataType) {\r\n                                case \"number\":\r\n                                    return \"right\";\r\n                                case \"boolean\":\r\n                                    return \"center\";\r\n                                default:\r\n                                    return getDefaultAlignment(isRTL)\r\n                            }\r\n                        }(dataType, this.option(\"rtlEnabled\"));\r\n                        column.format = column.format || gridCoreUtils.getFormatByDataType(dataType);\r\n                        column.customizeText = column.customizeText || getCustomizeTextByDataType(dataType);\r\n                        column.defaultFilterOperations = column.defaultFilterOperations || !lookup && DATATYPE_OPERATIONS[dataType] || [];\r\n                        if (!isDefined(column.filterOperations)) {\r\n                            setFilterOperationsAsDefaultValues(column)\r\n                        }\r\n                        column.defaultFilterOperation = column.filterOperations && column.filterOperations[0] || \"=\";\r\n                        column.showEditorAlways = isDefined(column.showEditorAlways) ? column.showEditorAlways : \"boolean\" === dataType && !column.cellTemplate && !column.lookup\r\n                    }\r\n                },\r\n                updateColumnDataTypes: function(dataSource) {\r\n                    var that = this;\r\n                    var dateSerializationFormat = that.option(\"dateSerializationFormat\");\r\n                    var firstItems = that._getFirstItems(dataSource);\r\n                    var isColumnDataTypesUpdated = false;\r\n                    each(that._columns, (function(index, column) {\r\n                        var i;\r\n                        var value;\r\n                        var dataType;\r\n                        var lookupDataType;\r\n                        var valueDataType;\r\n                        var lookup = column.lookup;\r\n                        if (gridCoreUtils.isDateType(column.dataType) && void 0 === column.serializationFormat) {\r\n                            column.serializationFormat = dateSerializationFormat\r\n                        }\r\n                        if (lookup && gridCoreUtils.isDateType(lookup.dataType) && void 0 === column.serializationFormat) {\r\n                            lookup.serializationFormat = dateSerializationFormat\r\n                        }\r\n                        if (column.calculateCellValue && firstItems.length) {\r\n                            if (!column.dataType || lookup && !lookup.dataType) {\r\n                                for (i = 0; i < firstItems.length; i++) {\r\n                                    value = column.calculateCellValue(firstItems[i]);\r\n                                    if (!column.dataType) {\r\n                                        valueDataType = getValueDataType(value);\r\n                                        dataType = dataType || valueDataType;\r\n                                        if (dataType && valueDataType && dataType !== valueDataType) {\r\n                                            dataType = \"string\"\r\n                                        }\r\n                                    }\r\n                                    if (lookup && !lookup.dataType) {\r\n                                        valueDataType = getValueDataType(gridCoreUtils.getDisplayValue(column, value, firstItems[i]));\r\n                                        lookupDataType = lookupDataType || valueDataType;\r\n                                        if (lookupDataType && valueDataType && lookupDataType !== valueDataType) {\r\n                                            lookupDataType = \"string\"\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (dataType || lookupDataType) {\r\n                                    if (dataType) {\r\n                                        column.dataType = dataType\r\n                                    }\r\n                                    if (lookup && lookupDataType) {\r\n                                        lookup.dataType = lookupDataType\r\n                                    }\r\n                                    isColumnDataTypesUpdated = true\r\n                                }\r\n                            }\r\n                            if (void 0 === column.serializationFormat || lookup && void 0 === lookup.serializationFormat) {\r\n                                for (i = 0; i < firstItems.length; i++) {\r\n                                    value = column.calculateCellValue(firstItems[i], true);\r\n                                    if (void 0 === column.serializationFormat) {\r\n                                        column.serializationFormat = getSerializationFormat(column.dataType, value)\r\n                                    }\r\n                                    if (lookup && void 0 === lookup.serializationFormat) {\r\n                                        lookup.serializationFormat = getSerializationFormat(lookup.dataType, lookup.calculateCellValue(value, true))\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        that._updateColumnOptions(column, index)\r\n                    }));\r\n                    return isColumnDataTypesUpdated\r\n                },\r\n                _customizeColumns: function(columns) {\r\n                    var customizeColumns = this.option(\"customizeColumns\");\r\n                    if (customizeColumns) {\r\n                        var hasOwnerBand = columns.some((function(column) {\r\n                            return isObject(column.ownerBand)\r\n                        }));\r\n                        if (hasOwnerBand) {\r\n                            updateIndexes(this)\r\n                        }\r\n                        customizeColumns(columns);\r\n                        assignColumns(this, createColumnsFromOptions(this, columns))\r\n                    }\r\n                },\r\n                updateColumns: function(dataSource, forceApplying) {\r\n                    if (!forceApplying) {\r\n                        this.updateSortingGrouping(dataSource)\r\n                    }\r\n                    if (!dataSource || dataSource.isLoaded()) {\r\n                        var sortParameters = dataSource ? dataSource.sort() || [] : this.getSortDataSourceParameters();\r\n                        var groupParameters = dataSource ? dataSource.group() || [] : this.getGroupDataSourceParameters();\r\n                        var filterParameters = null === dataSource || void 0 === dataSource ? void 0 : dataSource.lastLoadOptions().filter;\r\n                        this._customizeColumns(this._columns);\r\n                        updateIndexes(this);\r\n                        var columns = this._columns;\r\n                        return when(this.refresh(true)).always(() => {\r\n                            if (this._columns !== columns) {\r\n                                return\r\n                            }\r\n                            this._updateChanges(dataSource, {\r\n                                sorting: sortParameters,\r\n                                grouping: groupParameters,\r\n                                filtering: filterParameters\r\n                            });\r\n                            fireColumnsChanged(this)\r\n                        })\r\n                    }\r\n                },\r\n                _updateChanges: function(dataSource, parameters) {\r\n                    if (dataSource) {\r\n                        this.updateColumnDataTypes(dataSource);\r\n                        this._dataSourceApplied = true\r\n                    }\r\n                    if (!gridCoreUtils.equalSortParameters(parameters.sorting, this.getSortDataSourceParameters())) {\r\n                        updateColumnChanges(this, \"sorting\")\r\n                    }\r\n                    if (!gridCoreUtils.equalSortParameters(parameters.grouping, this.getGroupDataSourceParameters())) {\r\n                        updateColumnChanges(this, \"grouping\")\r\n                    }\r\n                    var dataController = this.getController(\"data\");\r\n                    if (dataController && !gridCoreUtils.equalFilterParameters(parameters.filtering, dataController.getCombinedFilter())) {\r\n                        updateColumnChanges(this, \"filtering\")\r\n                    }\r\n                    updateColumnChanges(this, \"columns\")\r\n                },\r\n                updateSortingGrouping: function(dataSource, fromDataSource) {\r\n                    var that = this;\r\n                    var sortParameters;\r\n                    var isColumnsChanged;\r\n                    var updateSortGroupParameterIndexes = function(columns, sortParameters, indexParameterName) {\r\n                        each(columns, (function(index, column) {\r\n                            delete column[indexParameterName];\r\n                            if (sortParameters) {\r\n                                for (var i = 0; i < sortParameters.length; i++) {\r\n                                    var selector = sortParameters[i].selector;\r\n                                    var isExpanded = sortParameters[i].isExpanded;\r\n                                    if (selector === column.dataField || selector === column.name || selector === column.selector || selector === column.calculateCellValue || selector === column.calculateGroupValue || selector === column.calculateDisplayValue) {\r\n                                        column.sortOrder = column.sortOrder || (sortParameters[i].desc ? \"desc\" : \"asc\");\r\n                                        if (void 0 !== isExpanded) {\r\n                                            column.autoExpandGroup = isExpanded\r\n                                        }\r\n                                        column[indexParameterName] = i;\r\n                                        break\r\n                                    }\r\n                                }\r\n                            }\r\n                        }))\r\n                    };\r\n                    if (dataSource) {\r\n                        sortParameters = gridCoreUtils.normalizeSortingInfo(dataSource.sort());\r\n                        var groupParameters = gridCoreUtils.normalizeSortingInfo(dataSource.group());\r\n                        var columnsGroupParameters = that.getGroupDataSourceParameters();\r\n                        var columnsSortParameters = that.getSortDataSourceParameters();\r\n                        var groupingChanged = !gridCoreUtils.equalSortParameters(groupParameters, columnsGroupParameters, true);\r\n                        var groupExpandingChanged = !groupingChanged && !gridCoreUtils.equalSortParameters(groupParameters, columnsGroupParameters);\r\n                        if (!that._columns.length) {\r\n                            each(groupParameters, (function(index, group) {\r\n                                that._columns.push(group.selector)\r\n                            }));\r\n                            each(sortParameters, (function(index, sort) {\r\n                                that._columns.push(sort.selector)\r\n                            }));\r\n                            assignColumns(that, createColumnsFromOptions(that, that._columns))\r\n                        }\r\n                        if ((fromDataSource || !columnsGroupParameters && !that._hasUserState) && (groupingChanged || groupExpandingChanged)) {\r\n                            updateSortGroupParameterIndexes(that._columns, groupParameters, \"groupIndex\");\r\n                            if (fromDataSource) {\r\n                                groupingChanged && updateColumnChanges(that, \"grouping\");\r\n                                groupExpandingChanged && updateColumnChanges(that, \"groupExpanding\");\r\n                                isColumnsChanged = true\r\n                            }\r\n                        }\r\n                        if ((fromDataSource || !columnsSortParameters && !that._hasUserState) && !gridCoreUtils.equalSortParameters(sortParameters, columnsSortParameters)) {\r\n                            updateSortGroupParameterIndexes(that._columns, sortParameters, \"sortIndex\");\r\n                            if (fromDataSource) {\r\n                                updateColumnChanges(that, \"sorting\");\r\n                                isColumnsChanged = true\r\n                            }\r\n                        }\r\n                        if (isColumnsChanged) {\r\n                            fireColumnsChanged(that)\r\n                        }\r\n                    }\r\n                },\r\n                updateFilter: function(filter, remoteFiltering, columnIndex, filterValue) {\r\n                    if (!Array.isArray(filter)) {\r\n                        return filter\r\n                    }\r\n                    filter = extend([], filter);\r\n                    columnIndex = void 0 !== filter.columnIndex ? filter.columnIndex : columnIndex;\r\n                    filterValue = void 0 !== filter.filterValue ? filter.filterValue : filterValue;\r\n                    if (isString(filter[0]) && \"!\" !== filter[0]) {\r\n                        var column = this.columnOption(filter[0]);\r\n                        if (remoteFiltering) {\r\n                            if (config().forceIsoDateParsing && column && column.serializeValue && filter.length > 1) {\r\n                                filter[filter.length - 1] = column.serializeValue(filter[filter.length - 1], \"filter\")\r\n                            }\r\n                        } else if (column && column.selector) {\r\n                            filter[0] = column.selector;\r\n                            filter[0].columnIndex = column.index\r\n                        }\r\n                    } else if (isFunction(filter[0])) {\r\n                        filter[0].columnIndex = columnIndex;\r\n                        filter[0].filterValue = filterValue\r\n                    }\r\n                    for (var i = 0; i < filter.length; i++) {\r\n                        filter[i] = this.updateFilter(filter[i], remoteFiltering, columnIndex, filterValue)\r\n                    }\r\n                    return filter\r\n                },\r\n                columnCount: function() {\r\n                    return this._columns ? this._columns.length : 0\r\n                },\r\n                columnOption: function(identifier, option, value, notFireEvent) {\r\n                    var that = this;\r\n                    var columns = that._columns.concat(that._commandColumns);\r\n                    var column = findColumn(columns, identifier);\r\n                    if (column) {\r\n                        if (1 === arguments.length) {\r\n                            return extend({}, column)\r\n                        }\r\n                        if (isString(option)) {\r\n                            if (2 === arguments.length) {\r\n                                return columnOptionCore(that, column, option)\r\n                            } else {\r\n                                columnOptionCore(that, column, option, value, notFireEvent)\r\n                            }\r\n                        } else if (isObject(option)) {\r\n                            each(option, (function(optionName, value) {\r\n                                columnOptionCore(that, column, optionName, value, notFireEvent)\r\n                            }))\r\n                        }\r\n                        fireColumnsChanged(that)\r\n                    }\r\n                },\r\n                clearSorting: function() {\r\n                    var columnCount = this.columnCount();\r\n                    this.beginUpdate();\r\n                    for (var i = 0; i < columnCount; i++) {\r\n                        this.columnOption(i, \"sortOrder\", void 0)\r\n                    }\r\n                    this.endUpdate()\r\n                },\r\n                clearGrouping: function() {\r\n                    var columnCount = this.columnCount();\r\n                    this.beginUpdate();\r\n                    for (var i = 0; i < columnCount; i++) {\r\n                        this.columnOption(i, \"groupIndex\", void 0)\r\n                    }\r\n                    this.endUpdate()\r\n                },\r\n                getVisibleIndex: function(index, rowIndex) {\r\n                    var columns = this.getVisibleColumns(rowIndex);\r\n                    for (var i = columns.length - 1; i >= 0; i--) {\r\n                        if (columns[i].index === index) {\r\n                            return i\r\n                        }\r\n                    }\r\n                    return -1\r\n                },\r\n                getVisibleIndexByColumn: function(column, rowIndex) {\r\n                    var visibleColumns = this.getVisibleColumns(rowIndex);\r\n                    var visibleColumn = visibleColumns.filter(col => col.index === column.index && col.command === column.command)[0];\r\n                    return visibleColumns.indexOf(visibleColumn)\r\n                },\r\n                getVisibleColumnIndex: function(id, rowIndex) {\r\n                    var index = this.columnOption(id, \"index\");\r\n                    return this.getVisibleIndex(index, rowIndex)\r\n                },\r\n                addColumn: function(options) {\r\n                    var column = createColumn(this, options);\r\n                    var index = this._columns.length;\r\n                    this._columns.push(column);\r\n                    if (column.isBand) {\r\n                        this._columns = createColumnsFromOptions(this, this._columns);\r\n                        column = this._columns[index]\r\n                    }\r\n                    column.added = options;\r\n                    updateIndexes(this, column);\r\n                    this.updateColumns(this._dataSource);\r\n                    this._checkColumns()\r\n                },\r\n                deleteColumn: function(id) {\r\n                    var column = this.columnOption(id);\r\n                    if (column && column.index >= 0) {\r\n                        columns = this._columns, void columns.forEach(column => {\r\n                            if (isDefined(column.ownerBand)) {\r\n                                column.ownerBand = columns[column.ownerBand]\r\n                            }\r\n                        });\r\n                        this._columns.splice(column.index, 1);\r\n                        if (column.isBand) {\r\n                            var childIndexes = this.getChildrenByBandColumn(column.index).map(column => column.index);\r\n                            this._columns = this._columns.filter(column => childIndexes.indexOf(column.index) < 0)\r\n                        }\r\n                        updateIndexes(this);\r\n                        this.updateColumns(this._dataSource)\r\n                    }\r\n                    var columns\r\n                },\r\n                addCommandColumn: function(options) {\r\n                    var commandColumn = this._commandColumns.filter(column => column.command === options.command)[0];\r\n                    if (!commandColumn) {\r\n                        commandColumn = options;\r\n                        this._commandColumns.push(commandColumn)\r\n                    }\r\n                },\r\n                getUserState: function() {\r\n                    var columns = this._columns;\r\n                    var result = [];\r\n                    var i;\r\n\r\n                    function handleStateField(index, value) {\r\n                        if (void 0 !== columns[i][value]) {\r\n                            result[i][value] = columns[i][value]\r\n                        }\r\n                    }\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        result[i] = {};\r\n                        each(USER_STATE_FIELD_NAMES, handleStateField)\r\n                    }\r\n                    return result\r\n                },\r\n                setName: function(column) {\r\n                    column.name = column.name || column.dataField || column.type\r\n                },\r\n                setUserState: function(state) {\r\n                    var dataSource = this._dataSource;\r\n                    var ignoreColumnOptionNames = this.option(\"stateStoring.ignoreColumnOptionNames\");\r\n                    null === state || void 0 === state ? void 0 : state.forEach(this.setName);\r\n                    if (!ignoreColumnOptionNames) {\r\n                        ignoreColumnOptionNames = [];\r\n                        var commonColumnSettings = this.getCommonSettings();\r\n                        if (!this.option(\"columnChooser.enabled\")) {\r\n                            ignoreColumnOptionNames.push(\"visible\")\r\n                        }\r\n                        if (\"none\" === this.option(\"sorting.mode\")) {\r\n                            ignoreColumnOptionNames.push(\"sortIndex\", \"sortOrder\")\r\n                        }\r\n                        if (!commonColumnSettings.allowGrouping) {\r\n                            ignoreColumnOptionNames.push(\"groupIndex\")\r\n                        }\r\n                        if (!commonColumnSettings.allowFixing) {\r\n                            ignoreColumnOptionNames.push(\"fixed\", \"fixedPosition\")\r\n                        }\r\n                        if (!commonColumnSettings.allowResizing) {\r\n                            ignoreColumnOptionNames.push(\"width\", \"visibleWidth\")\r\n                        }\r\n                        var isFilterPanelHidden = !this.option(\"filterPanel.visible\");\r\n                        if (!this.option(\"filterRow.visible\") && isFilterPanelHidden) {\r\n                            ignoreColumnOptionNames.push(\"filterValue\", \"selectedFilterOperation\")\r\n                        }\r\n                        if (!this.option(\"headerFilter.visible\") && isFilterPanelHidden) {\r\n                            ignoreColumnOptionNames.push(\"filterValues\", \"filterType\")\r\n                        }\r\n                    }\r\n                    this._columnsUserState = state;\r\n                    this._ignoreColumnOptionNames = ignoreColumnOptionNames;\r\n                    this._hasUserState = !!state;\r\n                    updateColumnChanges(this, \"filtering\");\r\n                    this.init();\r\n                    if (dataSource) {\r\n                        dataSource.sort(this.getSortDataSourceParameters());\r\n                        dataSource.group(this.getGroupDataSourceParameters())\r\n                    }\r\n                },\r\n                _checkColumns: function() {\r\n                    var usedNames = {};\r\n                    var hasEditableColumnWithoutName = false;\r\n                    var duplicatedNames = [];\r\n                    this._columns.forEach(column => {\r\n                        var _column$columns;\r\n                        var name = column.name;\r\n                        var isBand = null === (_column$columns = column.columns) || void 0 === _column$columns ? void 0 : _column$columns.length;\r\n                        var isEditable = column.allowEditing && (column.dataField || column.setCellValue) && !isBand;\r\n                        if (name) {\r\n                            if (usedNames[name]) {\r\n                                duplicatedNames.push('\"'.concat(name, '\"'))\r\n                            }\r\n                            usedNames[name] = true\r\n                        } else if (isEditable) {\r\n                            hasEditableColumnWithoutName = true\r\n                        }\r\n                    });\r\n                    if (duplicatedNames.length) {\r\n                        errors.log(\"E1059\", duplicatedNames.join(\", \"))\r\n                    }\r\n                    if (hasEditableColumnWithoutName) {\r\n                        errors.log(\"E1060\")\r\n                    }\r\n                },\r\n                _createCalculatedColumnOptions: function(columnOptions, bandColumn) {\r\n                    var calculatedColumnOptions = {};\r\n                    var dataField = columnOptions.dataField;\r\n                    if (Array.isArray(columnOptions.columns) && columnOptions.columns.length || columnOptions.isBand) {\r\n                        calculatedColumnOptions.isBand = true;\r\n                        dataField = null\r\n                    }\r\n                    if (dataField) {\r\n                        if (isString(dataField)) {\r\n                            var getter = compileGetter(dataField);\r\n                            calculatedColumnOptions = {\r\n                                caption: captionize(dataField),\r\n                                calculateCellValue: function(data, skipDeserialization) {\r\n                                    var value = getter(data);\r\n                                    return this.deserializeValue && !skipDeserialization ? this.deserializeValue(value) : value\r\n                                },\r\n                                setCellValue: defaultSetCellValue,\r\n                                parseValue: function(text) {\r\n                                    var result;\r\n                                    var parsedValue;\r\n                                    if (\"number\" === this.dataType) {\r\n                                        if (isString(text) && this.format) {\r\n                                            result = function(text, format) {\r\n                                                var parsedValue = numberLocalization.parse(text, format);\r\n                                                if (isNumeric(parsedValue)) {\r\n                                                    var formattedValue = numberLocalization.format(parsedValue, format);\r\n                                                    var formattedValueWithDefaultFormat = numberLocalization.format(parsedValue, \"decimal\");\r\n                                                    if (formattedValue === text || formattedValueWithDefaultFormat === text) {\r\n                                                        return parsedValue\r\n                                                    }\r\n                                                }\r\n                                            }(text.trim(), this.format)\r\n                                        } else if (isDefined(text) && isNumeric(text)) {\r\n                                            result = Number(text)\r\n                                        }\r\n                                    } else if (\"boolean\" === this.dataType) {\r\n                                        if (text === this.trueText) {\r\n                                            result = true\r\n                                        } else if (text === this.falseText) {\r\n                                            result = false\r\n                                        }\r\n                                    } else if (gridCoreUtils.isDateType(this.dataType)) {\r\n                                        parsedValue = dateLocalization.parse(text, this.format);\r\n                                        if (parsedValue) {\r\n                                            result = parsedValue\r\n                                        }\r\n                                    } else {\r\n                                        result = text\r\n                                    }\r\n                                    return result\r\n                                }\r\n                            }\r\n                        }\r\n                        calculatedColumnOptions.allowFiltering = true\r\n                    } else {\r\n                        calculatedColumnOptions.allowFiltering = !!columnOptions.calculateFilterExpression\r\n                    }\r\n                    calculatedColumnOptions.calculateFilterExpression = function() {\r\n                        return filterUtils.defaultCalculateFilterExpression.apply(this, arguments)\r\n                    };\r\n                    calculatedColumnOptions.createFilterExpression = function(filterValue) {\r\n                        var result;\r\n                        if (this.calculateFilterExpression) {\r\n                            result = this.calculateFilterExpression.apply(this, arguments)\r\n                        }\r\n                        if (isFunction(result)) {\r\n                            result = [result, \"=\", true]\r\n                        }\r\n                        if (result) {\r\n                            result.columnIndex = this.index;\r\n                            result.filterValue = filterValue\r\n                        }\r\n                        return result\r\n                    };\r\n                    if (!dataField || !isString(dataField)) {\r\n                        extend(true, calculatedColumnOptions, {\r\n                            allowSorting: false,\r\n                            allowGrouping: false,\r\n                            calculateCellValue: function() {\r\n                                return null\r\n                            }\r\n                        })\r\n                    }\r\n                    if (bandColumn) {\r\n                        calculatedColumnOptions.allowFixing = false\r\n                    }\r\n                    if (columnOptions.dataType) {\r\n                        calculatedColumnOptions.userDataType = columnOptions.dataType\r\n                    }\r\n                    if (columnOptions.selectedFilterOperation && !(\"defaultSelectedFilterOperation\" in calculatedColumnOptions)) {\r\n                        calculatedColumnOptions.defaultSelectedFilterOperation = columnOptions.selectedFilterOperation\r\n                    }\r\n                    if (columnOptions.lookup) {\r\n                        calculatedColumnOptions.lookup = {\r\n                            calculateCellValue: function(value, skipDeserialization) {\r\n                                if (this.valueExpr) {\r\n                                    value = this.valueMap && this.valueMap[value]\r\n                                }\r\n                                return this.deserializeValue && !skipDeserialization ? this.deserializeValue(value) : value\r\n                            },\r\n                            updateValueMap: function() {\r\n                                this.valueMap = {};\r\n                                if (this.items) {\r\n                                    var calculateValue = compileGetter(this.valueExpr);\r\n                                    var calculateDisplayValue = compileGetter(this.displayExpr);\r\n                                    for (var i = 0; i < this.items.length; i++) {\r\n                                        var item = this.items[i];\r\n                                        var displayValue = calculateDisplayValue(item);\r\n                                        this.valueMap[calculateValue(item)] = displayValue;\r\n                                        this.dataType = this.dataType || getValueDataType(displayValue)\r\n                                    }\r\n                                }\r\n                            },\r\n                            update: function() {\r\n                                var that = this;\r\n                                var dataSource = that.dataSource;\r\n                                if (dataSource) {\r\n                                    if (isFunction(dataSource) && !variableWrapper.isWrapped(dataSource)) {\r\n                                        dataSource = dataSource({})\r\n                                    }\r\n                                    if (isPlainObject(dataSource) || dataSource instanceof Store || Array.isArray(dataSource)) {\r\n                                        if (that.valueExpr) {\r\n                                            var dataSourceOptions = normalizeDataSourceOptions(dataSource);\r\n                                            dataSourceOptions.paginate = false;\r\n                                            dataSource = new DataSource(dataSourceOptions);\r\n                                            return dataSource.load().done((function(data) {\r\n                                                that.items = data;\r\n                                                that.updateValueMap && that.updateValueMap()\r\n                                            }))\r\n                                        }\r\n                                    } else {\r\n                                        errors.log(\"E1016\")\r\n                                    }\r\n                                } else {\r\n                                    that.updateValueMap && that.updateValueMap()\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    calculatedColumnOptions.resizedCallbacks = Callbacks();\r\n                    if (columnOptions.resized) {\r\n                        calculatedColumnOptions.resizedCallbacks.add(columnOptions.resized.bind(columnOptions))\r\n                    }\r\n                    each(calculatedColumnOptions, (function(optionName) {\r\n                        if (isFunction(calculatedColumnOptions[optionName]) && 0 !== optionName.indexOf(\"default\")) {\r\n                            var defaultOptionName = \"default\" + optionName.charAt(0).toUpperCase() + optionName.substr(1);\r\n                            calculatedColumnOptions[defaultOptionName] = calculatedColumnOptions[optionName]\r\n                        }\r\n                    }));\r\n                    return calculatedColumnOptions\r\n                },\r\n                getRowCount: function() {\r\n                    this._rowCount = this._rowCount || function(that) {\r\n                        var rowCount = 1;\r\n                        var bandColumnsCache = that.getBandColumnsCache();\r\n                        var columnParentByIndex = bandColumnsCache.columnParentByIndex;\r\n                        that._columns.forEach((function(column) {\r\n                            var parents = getParentBandColumns(column.index, columnParentByIndex);\r\n                            var invisibleParents = parents.filter((function(column) {\r\n                                return !column.visible\r\n                            }));\r\n                            if (column.visible && !invisibleParents.length) {\r\n                                rowCount = Math.max(rowCount, parents.length + 1)\r\n                            }\r\n                        }));\r\n                        return rowCount\r\n                    }(this);\r\n                    return this._rowCount\r\n                },\r\n                getRowIndex: function(columnIndex, alwaysGetRowIndex) {\r\n                    var column = this._columns[columnIndex];\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    return column && (alwaysGetRowIndex || column.visible && !(column.command || isDefined(column.groupIndex))) ? getParentBandColumns(columnIndex, bandColumnsCache.columnParentByIndex).length : 0\r\n                },\r\n                getChildrenByBandColumn: function(bandColumnIndex, onlyVisibleDirectChildren) {\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    var result = _getChildrenByBandColumn(bandColumnIndex, bandColumnsCache.columnChildrenByIndex, !onlyVisibleDirectChildren);\r\n                    if (onlyVisibleDirectChildren) {\r\n                        return result.filter((function(column) {\r\n                            return column.visible && !column.command\r\n                        })).sort((function(column1, column2) {\r\n                            return column1.visibleIndex - column2.visibleIndex\r\n                        }))\r\n                    }\r\n                    return result\r\n                },\r\n                isParentBandColumn: function(columnIndex, bandColumnIndex) {\r\n                    var result = false;\r\n                    var column = this._columns[columnIndex];\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    var parentBandColumns = column && getParentBandColumns(columnIndex, bandColumnsCache.columnParentByIndex);\r\n                    if (parentBandColumns) {\r\n                        each(parentBandColumns, (function(_, bandColumn) {\r\n                            if (bandColumn.index === bandColumnIndex) {\r\n                                result = true;\r\n                                return false\r\n                            }\r\n                        }))\r\n                    }\r\n                    return result\r\n                },\r\n                isParentColumnVisible: function(columnIndex) {\r\n                    var result = true;\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    var bandColumns = columnIndex >= 0 && getParentBandColumns(columnIndex, bandColumnsCache.columnParentByIndex);\r\n                    bandColumns && each(bandColumns, (function(_, bandColumn) {\r\n                        result = result && bandColumn.visible;\r\n                        return result\r\n                    }));\r\n                    return result\r\n                },\r\n                getColumnId: function(column) {\r\n                    if (column.command && column.type === GROUP_COMMAND_COLUMN_NAME) {\r\n                        if (isCustomCommandColumn(this, column)) {\r\n                            return \"type:\" + column.type\r\n                        }\r\n                        return \"command:\" + column.command\r\n                    }\r\n                    return column.index\r\n                },\r\n                getCustomizeTextByDataType: getCustomizeTextByDataType,\r\n                getHeaderContentAlignment: function(columnAlignment) {\r\n                    var rtlEnabled = this.option(\"rtlEnabled\");\r\n                    if (rtlEnabled) {\r\n                        return \"left\" === columnAlignment ? \"right\" : \"left\"\r\n                    }\r\n                    return columnAlignment\r\n                }\r\n            }\r\n        }())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.columns_controller.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnsControllerModule\r\n} from \"../grid_core/ui.grid_core.columns_controller\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\ngridCore.registerModule(\"columns\", {\r\n    defaultOptions: function() {\r\n        return extend(true, {}, columnsControllerModule.defaultOptions(), {\r\n            commonColumnSettings: {\r\n                allowExporting: true\r\n            }\r\n        })\r\n    },\r\n    controllers: columnsControllerModule.controllers\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.data_source_adapter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport gridCore from \"../data_grid/ui.data_grid.core\";\r\nimport {\r\n    executeAsync,\r\n    getKeyHash\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport ArrayStore from \"../../data/array_store\";\r\nimport {\r\n    applyBatch\r\n} from \"../../data/array_utils\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nexport default gridCore.Controller.inherit(function() {\r\n    function cloneItems(items, groupCount) {\r\n        if (items) {\r\n            items = items.slice(0);\r\n            if (groupCount) {\r\n                for (var i = 0; i < items.length; i++) {\r\n                    items[i] = extend({\r\n                        key: items[i].key\r\n                    }, items[i]);\r\n                    items[i].items = cloneItems(items[i].items, groupCount - 1)\r\n                }\r\n            }\r\n        }\r\n        return items\r\n    }\r\n\r\n    function calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload) {\r\n        var operationTypes = {\r\n            reload: true,\r\n            fullReload: true\r\n        };\r\n        if (lastLoadOptions) {\r\n            operationTypes = {\r\n                sorting: !gridCore.equalSortParameters(loadOptions.sort, lastLoadOptions.sort),\r\n                grouping: !gridCore.equalSortParameters(loadOptions.group, lastLoadOptions.group, true),\r\n                groupExpanding: !gridCore.equalSortParameters(loadOptions.group, lastLoadOptions.group) || lastLoadOptions.groupExpand,\r\n                filtering: !gridCore.equalFilterParameters(loadOptions.filter, lastLoadOptions.filter),\r\n                pageIndex: loadOptions.pageIndex !== lastLoadOptions.pageIndex,\r\n                skip: loadOptions.skip !== lastLoadOptions.skip,\r\n                take: loadOptions.take !== lastLoadOptions.take,\r\n                pageSize: loadOptions.pageSize !== lastLoadOptions.pageSize,\r\n                fullReload: isFullReload\r\n            };\r\n            operationTypes.reload = isFullReload || operationTypes.sorting || operationTypes.grouping || operationTypes.filtering;\r\n            operationTypes.paging = operationTypes.pageIndex || operationTypes.pageSize || operationTypes.take\r\n        }\r\n        return operationTypes\r\n    }\r\n\r\n    function getPageDataFromCache(options, updatePaging) {\r\n        var groupCount = gridCore.normalizeSortingInfo(options.group || options.storeLoadOptions.group || options.loadOptions.group).length;\r\n        var items = [];\r\n        if (fillItemsFromCache(items, options, groupCount)) {\r\n            return items\r\n        } else if (updatePaging) {\r\n            ! function(cacheItemsFromBegin, options, groupCount) {\r\n                var cacheItemBeginCount = cacheItemsFromBegin.length;\r\n                var {\r\n                    storeLoadOptions: storeLoadOptions\r\n                } = options;\r\n                if (void 0 !== storeLoadOptions.skip && storeLoadOptions.take && !groupCount) {\r\n                    var cacheItemsFromEnd = [];\r\n                    fillItemsFromCache(cacheItemsFromEnd, options, groupCount, true);\r\n                    var cacheItemEndCount = cacheItemsFromEnd.length;\r\n                    if (cacheItemBeginCount || cacheItemEndCount) {\r\n                        var _options$skip2, _options$take2;\r\n                        options.skip = null !== (_options$skip2 = options.skip) && void 0 !== _options$skip2 ? _options$skip2 : storeLoadOptions.skip;\r\n                        options.take = null !== (_options$take2 = options.take) && void 0 !== _options$take2 ? _options$take2 : storeLoadOptions.take\r\n                    }\r\n                    if (cacheItemBeginCount) {\r\n                        storeLoadOptions.skip += cacheItemBeginCount;\r\n                        storeLoadOptions.take -= cacheItemBeginCount;\r\n                        options.cachedDataPartBegin = cacheItemsFromBegin\r\n                    }\r\n                    if (cacheItemEndCount) {\r\n                        storeLoadOptions.take -= cacheItemEndCount;\r\n                        options.cachedDataPartEnd = cacheItemsFromEnd.reverse()\r\n                    }\r\n                }\r\n            }(items, options, groupCount)\r\n        }\r\n    }\r\n\r\n    function fillItemsFromCache(items, options, groupCount, fromEnd) {\r\n        var _ref, _options$take, _options$cachedData;\r\n        var {\r\n            storeLoadOptions: storeLoadOptions\r\n        } = options;\r\n        var take = null !== (_ref = null !== (_options$take = options.take) && void 0 !== _options$take ? _options$take : storeLoadOptions.take) && void 0 !== _ref ? _ref : 0;\r\n        var cachedItems = null === (_options$cachedData = options.cachedData) || void 0 === _options$cachedData ? void 0 : _options$cachedData.items;\r\n        if (take && cachedItems) {\r\n            var _ref2, _options$skip;\r\n            var skip = null !== (_ref2 = null !== (_options$skip = options.skip) && void 0 !== _options$skip ? _options$skip : storeLoadOptions.skip) && void 0 !== _ref2 ? _ref2 : 0;\r\n            for (var i = 0; i < take; i++) {\r\n                var localIndex = fromEnd ? take - 1 - i : i;\r\n                var cacheItemIndex = localIndex + skip;\r\n                var cacheItem = cachedItems[cacheItemIndex];\r\n                if (void 0 === cacheItem && cacheItemIndex in cachedItems) {\r\n                    return true\r\n                }\r\n                var item = getItemFromCache(options, cacheItem, groupCount, localIndex, take);\r\n                if (item) {\r\n                    items.push(item)\r\n                } else {\r\n                    return false\r\n                }\r\n            }\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    function getItemFromCache(options, cacheItem, groupCount, index, take) {\r\n        if (groupCount && cacheItem) {\r\n            var skips = 0 === index && options.skips || [];\r\n            var takes = index === take - 1 && options.takes || [];\r\n            return function getGroupItemFromCache(cacheItem, groupCount, skips, takes) {\r\n                if (groupCount && cacheItem) {\r\n                    var result = _extends({}, cacheItem);\r\n                    var skip = skips[0] || 0;\r\n                    var take = takes[0];\r\n                    var items = cacheItem.items;\r\n                    if (items) {\r\n                        if (void 0 === take && !items[skip]) {\r\n                            return\r\n                        }\r\n                        result.items = [];\r\n                        if (skips.length) {\r\n                            result.isContinuation = true\r\n                        }\r\n                        if (takes.length) {\r\n                            result.isContinuationOnNextPage = true\r\n                        }\r\n                        for (var i = 0; void 0 === take ? items[i + skip] : i < take; i++) {\r\n                            var childCacheItem = items[i + skip];\r\n                            var item = getGroupItemFromCache(childCacheItem, groupCount - 1, skips.slice(1), takes.slice(1));\r\n                            if (void 0 !== item) {\r\n                                result.items.push(item)\r\n                            } else {\r\n                                return\r\n                            }\r\n                        }\r\n                    }\r\n                    return result\r\n                }\r\n                return cacheItem\r\n            }(cacheItem, groupCount, skips, takes)\r\n        } else {\r\n            return cacheItem\r\n        }\r\n    }\r\n\r\n    function getCacheItem(cacheItem, loadedItem, groupCount, skips) {\r\n        if (groupCount && loadedItem) {\r\n            var result = _extends({}, loadedItem);\r\n            delete result.isContinuation;\r\n            delete result.isContinuationOnNextPage;\r\n            var skip = skips[0] || 0;\r\n            if (loadedItem.items) {\r\n                result.items = (null === cacheItem || void 0 === cacheItem ? void 0 : cacheItem.items) || {};\r\n                loadedItem.items.forEach((item, index) => {\r\n                    var globalIndex = index + skip;\r\n                    var childSkips = 0 === index ? skips.slice(1) : [];\r\n                    result.items[globalIndex] = getCacheItem(result.items[globalIndex], item, groupCount - 1, childSkips)\r\n                })\r\n            }\r\n            return result\r\n        }\r\n        return loadedItem\r\n    }\r\n    return {\r\n        init: function(dataSource, remoteOperations) {\r\n            var that = this;\r\n            that._dataSource = dataSource;\r\n            that._remoteOperations = remoteOperations || {};\r\n            that._isLastPage = !dataSource.isLastPage();\r\n            that._hasLastPage = false;\r\n            that._currentTotalCount = 0;\r\n            that._cachedData = {\r\n                items: {}\r\n            };\r\n            that._lastOperationTypes = {};\r\n            that._eventsStrategy = dataSource._eventsStrategy;\r\n            that._totalCountCorrection = 0;\r\n            that._isLoadingAll = false;\r\n            that.changed = Callbacks();\r\n            that.loadingChanged = Callbacks();\r\n            that.loadError = Callbacks();\r\n            that.customizeStoreLoadOptions = Callbacks();\r\n            that.changing = Callbacks();\r\n            that.pushed = Callbacks();\r\n            that._dataChangedHandler = that._handleDataChanged.bind(that);\r\n            that._customizeStoreLoadOptionsHandler = that._handleCustomizeStoreLoadOptions.bind(that);\r\n            that._dataLoadedHandler = that._handleDataLoaded.bind(that);\r\n            that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\r\n            that._loadErrorHandler = that._handleLoadError.bind(that);\r\n            that._pushHandler = that._handlePush.bind(that);\r\n            that._changingHandler = that._handleChanging.bind(that);\r\n            dataSource.on(\"changed\", that._dataChangedHandler);\r\n            dataSource.on(\"customizeStoreLoadOptions\", that._customizeStoreLoadOptionsHandler);\r\n            dataSource.on(\"customizeLoadResult\", that._dataLoadedHandler);\r\n            dataSource.on(\"loadingChanged\", that._loadingChangedHandler);\r\n            dataSource.on(\"loadError\", that._loadErrorHandler);\r\n            dataSource.on(\"changing\", that._changingHandler);\r\n            dataSource.store().on(\"beforePush\", that._pushHandler);\r\n            each(dataSource, (function(memberName, member) {\r\n                if (!that[memberName] && isFunction(member)) {\r\n                    that[memberName] = function() {\r\n                        return this._dataSource[memberName].apply(this._dataSource, arguments)\r\n                    }\r\n                }\r\n            }))\r\n        },\r\n        remoteOperations: function() {\r\n            return this._remoteOperations\r\n        },\r\n        dispose: function(isSharedDataSource) {\r\n            var dataSource = this._dataSource;\r\n            var store = dataSource.store();\r\n            dataSource.off(\"changed\", this._dataChangedHandler);\r\n            dataSource.off(\"customizeStoreLoadOptions\", this._customizeStoreLoadOptionsHandler);\r\n            dataSource.off(\"customizeLoadResult\", this._dataLoadedHandler);\r\n            dataSource.off(\"loadingChanged\", this._loadingChangedHandler);\r\n            dataSource.off(\"loadError\", this._loadErrorHandler);\r\n            dataSource.off(\"changing\", this._changingHandler);\r\n            store && store.off(\"beforePush\", this._pushHandler);\r\n            if (!isSharedDataSource) {\r\n                dataSource.dispose()\r\n            }\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            var dataSource = this._dataSource;\r\n            if (operationTypes.reload) {\r\n                this.resetCurrentTotalCount();\r\n                this._isLastPage = !dataSource.paginate();\r\n                this._hasLastPage = this._isLastPage\r\n            }\r\n        },\r\n        resetCurrentTotalCount: function() {\r\n            this._currentTotalCount = 0;\r\n            this._totalCountCorrection = 0\r\n        },\r\n        resetCache: function() {\r\n            this._cachedStoreData = void 0;\r\n            this._cachedPagingData = void 0\r\n        },\r\n        resetPagesCache: function() {\r\n            this._cachedData = {\r\n                items: {}\r\n            }\r\n        },\r\n        _needClearStoreDataCache: function() {\r\n            var remoteOperations = this.remoteOperations();\r\n            var operationTypes = calculateOperationTypes(this._lastLoadOptions || {}, {});\r\n            var isLocalOperations = Object.keys(remoteOperations).every(operationName => !operationTypes[operationName] || !remoteOperations[operationName]);\r\n            return !isLocalOperations\r\n        },\r\n        push: function(changes, fromStore) {\r\n            var store = this.store();\r\n            if (this._needClearStoreDataCache()) {\r\n                this._cachedStoreData = void 0\r\n            }\r\n            this._cachedPagingData = void 0;\r\n            this.resetPagesCache(true);\r\n            if (this._cachedStoreData) {\r\n                applyBatch({\r\n                    keyInfo: store,\r\n                    data: this._cachedStoreData,\r\n                    changes: changes\r\n                })\r\n            }\r\n            if (!fromStore) {\r\n                this._applyBatch(changes)\r\n            }\r\n            this.pushed.fire(changes)\r\n        },\r\n        getDataIndexGetter: function() {\r\n            if (!this._dataIndexGetter) {\r\n                var indexByKey;\r\n                var storeData;\r\n                var store = this.store();\r\n                this._dataIndexGetter = data => {\r\n                    var isCacheUpdated = storeData && storeData !== this._cachedStoreData;\r\n                    if (!indexByKey || isCacheUpdated) {\r\n                        storeData = this._cachedStoreData || [];\r\n                        indexByKey = {};\r\n                        for (var i = 0; i < storeData.length; i++) {\r\n                            indexByKey[getKeyHash(store.keyOf(storeData[i]))] = i\r\n                        }\r\n                    }\r\n                    return indexByKey[getKeyHash(store.keyOf(data))]\r\n                }\r\n            }\r\n            return this._dataIndexGetter\r\n        },\r\n        _getKeyInfo: function() {\r\n            return this.store()\r\n        },\r\n        _applyBatch: function(changes) {\r\n            var keyInfo = this._getKeyInfo();\r\n            var dataSource = this._dataSource;\r\n            var groupCount = gridCore.normalizeSortingInfo(this.group()).length;\r\n            var totalCount = this.totalCount();\r\n            var isVirtualMode = \"virtual\" === this.option(\"scrolling.mode\");\r\n            changes = changes.filter((function(change) {\r\n                return !dataSource.paginate() || \"insert\" !== change.type || void 0 !== change.index\r\n            }));\r\n            var getItemCount = () => groupCount ? this.itemsCount() : this.items().length;\r\n            var oldItemCount = getItemCount();\r\n            applyBatch({\r\n                keyInfo: keyInfo,\r\n                data: this._items,\r\n                changes: changes,\r\n                groupCount: groupCount,\r\n                useInsertIndex: true\r\n            });\r\n            applyBatch({\r\n                keyInfo: keyInfo,\r\n                data: dataSource.items(),\r\n                changes: changes,\r\n                groupCount: groupCount,\r\n                useInsertIndex: true\r\n            });\r\n            if (this._currentTotalCount > 0 || isVirtualMode && totalCount === oldItemCount) {\r\n                this._totalCountCorrection += getItemCount() - oldItemCount\r\n            }\r\n            changes.splice(0, changes.length)\r\n        },\r\n        _handlePush: function(_ref5) {\r\n            var {\r\n                changes: changes\r\n            } = _ref5;\r\n            this.push(changes, true)\r\n        },\r\n        _handleChanging: function(e) {\r\n            this.changing.fire(e);\r\n            this._applyBatch(e.changes)\r\n        },\r\n        _needCleanCacheByOperation: function(operationType, remoteOperations) {\r\n            var operationTypesByOrder = [\"filtering\", \"sorting\", \"paging\"];\r\n            var operationTypeIndex = operationTypesByOrder.indexOf(operationType);\r\n            var currentOperationTypes = operationTypeIndex >= 0 ? operationTypesByOrder.slice(operationTypeIndex) : [operationType];\r\n            return currentOperationTypes.some(operationType => remoteOperations[operationType])\r\n        },\r\n        _customizeRemoteOperations: function(options, operationTypes) {\r\n            var cachedStoreData = this._cachedStoreData;\r\n            var cachedPagingData = this._cachedPagingData;\r\n            var cachedData = this._cachedData;\r\n            if (options.storeLoadOptions.filter && !options.remoteOperations.filtering || options.storeLoadOptions.sort && !options.remoteOperations.sorting) {\r\n                options.remoteOperations = {\r\n                    filtering: options.remoteOperations.filtering\r\n                }\r\n            }\r\n            if (operationTypes.fullReload) {\r\n                cachedStoreData = void 0;\r\n                cachedPagingData = void 0;\r\n                cachedData = {\r\n                    items: {}\r\n                }\r\n            } else {\r\n                if (operationTypes.reload) {\r\n                    cachedPagingData = void 0;\r\n                    cachedData = {\r\n                        items: {}\r\n                    }\r\n                } else if (operationTypes.groupExpanding) {\r\n                    cachedData = {\r\n                        items: {}\r\n                    }\r\n                }\r\n                each(operationTypes, (operationType, value) => {\r\n                    if (value && this._needCleanCacheByOperation(operationType, options.remoteOperations)) {\r\n                        cachedStoreData = void 0;\r\n                        cachedPagingData = void 0\r\n                    }\r\n                })\r\n            }\r\n            if (cachedPagingData) {\r\n                options.remoteOperations.paging = false\r\n            }\r\n            options.cachedStoreData = cachedStoreData;\r\n            options.cachedPagingData = cachedPagingData;\r\n            options.cachedData = cachedData;\r\n            if (!options.isCustomLoading) {\r\n                this._cachedStoreData = cachedStoreData;\r\n                this._cachedPagingData = cachedPagingData;\r\n                this._cachedData = cachedData\r\n            }\r\n        },\r\n        _handleCustomizeStoreLoadOptions(options) {\r\n            var _options$data;\r\n            this._handleDataLoading(options);\r\n            if (!(0 === (null === (_options$data = options.data) || void 0 === _options$data ? void 0 : _options$data.length))) {\r\n                options.data = getPageDataFromCache(options, true) || options.cachedStoreData\r\n            }\r\n        },\r\n        _handleDataLoading: function(options) {\r\n            var dataSource = this._dataSource;\r\n            var lastLoadOptions = this._lastLoadOptions;\r\n            this.customizeStoreLoadOptions.fire(options);\r\n            options.delay = this.option(\"loadingTimeout\");\r\n            options.originalStoreLoadOptions = options.storeLoadOptions;\r\n            options.remoteOperations = extend({}, this.remoteOperations());\r\n            var isFullReload = !this.isLoaded() && !this._isRefreshing;\r\n            if (this.option(\"integrationOptions.renderedOnServer\") && !this.isLoaded()) {\r\n                options.delay = void 0\r\n            }\r\n            var loadOptions = extend({\r\n                pageIndex: this.pageIndex(),\r\n                pageSize: this.pageSize()\r\n            }, options.storeLoadOptions);\r\n            var operationTypes = calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload);\r\n            this._customizeRemoteOperations(options, operationTypes);\r\n            if (!options.isCustomLoading) {\r\n                var isRefreshing = this._isRefreshing;\r\n                options.pageIndex = dataSource.pageIndex();\r\n                options.lastLoadOptions = loadOptions;\r\n                options.operationTypes = operationTypes;\r\n                this._loadingOperationTypes = operationTypes;\r\n                this._isRefreshing = true;\r\n                when(isRefreshing || this._isRefreshed || this.refresh(options, operationTypes)).done(() => {\r\n                    if (this._lastOperationId === options.operationId) {\r\n                        this._isRefreshed = true;\r\n                        this.load().always(() => {\r\n                            this._isRefreshed = false\r\n                        })\r\n                    }\r\n                }).fail(() => {\r\n                    dataSource.cancel(options.operationId)\r\n                }).always(() => {\r\n                    this._isRefreshing = false\r\n                });\r\n                dataSource.cancel(this._lastOperationId);\r\n                this._lastOperationId = options.operationId;\r\n                if (this._isRefreshing) {\r\n                    dataSource.cancel(this._lastOperationId)\r\n                }\r\n            }\r\n            this._handleDataLoadingCore(options)\r\n        },\r\n        _handleDataLoadingCore: function(options) {\r\n            var remoteOperations = options.remoteOperations;\r\n            options.loadOptions = {};\r\n            var cachedExtra = options.cachedData.extra;\r\n            var localLoadOptionNames = {\r\n                filter: !remoteOperations.filtering,\r\n                sort: !remoteOperations.sorting,\r\n                group: !remoteOperations.grouping,\r\n                summary: !remoteOperations.summary,\r\n                skip: !remoteOperations.paging,\r\n                take: !remoteOperations.paging,\r\n                requireTotalCount: cachedExtra && \"totalCount\" in cachedExtra || !remoteOperations.paging\r\n            };\r\n            each(options.storeLoadOptions, (function(optionName, optionValue) {\r\n                if (localLoadOptionNames[optionName]) {\r\n                    options.loadOptions[optionName] = optionValue;\r\n                    delete options.storeLoadOptions[optionName]\r\n                }\r\n            }));\r\n            if (cachedExtra) {\r\n                options.extra = cachedExtra\r\n            }\r\n        },\r\n        _handleDataLoaded: function(options) {\r\n            var loadOptions = options.loadOptions;\r\n            var localPaging = options.remoteOperations && !options.remoteOperations.paging;\r\n            var cachedData = options.cachedData;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var needCache = false !== this.option(\"cacheEnabled\") && storeLoadOptions;\r\n            var needPageCache = needCache && !options.isCustomLoading && cachedData && (!localPaging || storeLoadOptions.group);\r\n            var needPagingCache = needCache && localPaging;\r\n            var needStoreCache = needPagingCache && !options.isCustomLoading;\r\n            if (!loadOptions) {\r\n                this._dataSource.cancel(options.operationId);\r\n                return\r\n            }\r\n            if (localPaging) {\r\n                options.skip = loadOptions.skip;\r\n                options.take = loadOptions.take;\r\n                delete loadOptions.skip;\r\n                delete loadOptions.take\r\n            }\r\n            if (loadOptions.group) {\r\n                loadOptions.group = options.group || loadOptions.group\r\n            }\r\n            var groupCount = gridCore.normalizeSortingInfo(options.group || storeLoadOptions.group || loadOptions.group).length;\r\n            if (options.cachedDataPartBegin) {\r\n                options.data = options.cachedDataPartBegin.concat(options.data)\r\n            }\r\n            if (options.cachedDataPartEnd) {\r\n                options.data = options.data.concat(options.cachedDataPartEnd)\r\n            }\r\n            if (!needPageCache || !getPageDataFromCache(options)) {\r\n                if (needPagingCache && options.cachedPagingData) {\r\n                    options.data = cloneItems(options.cachedPagingData, groupCount)\r\n                } else {\r\n                    if (needStoreCache) {\r\n                        if (!this._cachedStoreData) {\r\n                            this._cachedStoreData = cloneItems(options.data, gridCore.normalizeSortingInfo(storeLoadOptions.group).length)\r\n                        } else if (options.mergeStoreLoadData) {\r\n                            options.data = this._cachedStoreData = this._cachedStoreData.concat(options.data)\r\n                        }\r\n                    }\r\n                    new ArrayStore(options.data).load(loadOptions).done(data => {\r\n                        options.data = data;\r\n                        if (needStoreCache) {\r\n                            this._cachedPagingData = cloneItems(options.data, groupCount)\r\n                        }\r\n                    }).fail(error => {\r\n                        options.data = (new Deferred).reject(error)\r\n                    })\r\n                }\r\n                if (loadOptions.requireTotalCount && localPaging) {\r\n                    options.extra = isPlainObject(options.extra) ? options.extra : {};\r\n                    options.extra.totalCount = options.data.length\r\n                }\r\n                if (options.extra && options.extra.totalCount >= 0 && (false === storeLoadOptions.requireTotalCount || false === loadOptions.requireTotalCount)) {\r\n                    options.extra.totalCount = -1\r\n                }\r\n                this._handleDataLoadedCore(options);\r\n                if (needPageCache) {\r\n                    cachedData.extra = cachedData.extra || extend({}, options.extra);\r\n                    when(options.data).done(data => {\r\n                        ! function(options, data, groupCount) {\r\n                            var _ref3, _options$skip3, _ref4, _options$take3;\r\n                            var {\r\n                                storeLoadOptions: storeLoadOptions\r\n                            } = options;\r\n                            var skip = null !== (_ref3 = null !== (_options$skip3 = options.skip) && void 0 !== _options$skip3 ? _options$skip3 : storeLoadOptions.skip) && void 0 !== _ref3 ? _ref3 : 0;\r\n                            var take = null !== (_ref4 = null !== (_options$take3 = options.take) && void 0 !== _options$take3 ? _options$take3 : storeLoadOptions.take) && void 0 !== _ref4 ? _ref4 : 0;\r\n                            for (var i = 0; i < take; i++) {\r\n                                var globalIndex = i + skip;\r\n                                var cacheItems = options.cachedData.items;\r\n                                var skips = 0 === i && options.skips || [];\r\n                                cacheItems[globalIndex] = getCacheItem(cacheItems[globalIndex], data[i], groupCount, skips)\r\n                            }\r\n                        }(options, data, groupCount)\r\n                    })\r\n                }\r\n            }\r\n            when(options.data).done(() => {\r\n                if (options.lastLoadOptions) {\r\n                    this._lastLoadOptions = options.lastLoadOptions;\r\n                    Object.keys(options.operationTypes).forEach(operationType => {\r\n                        this._lastOperationTypes[operationType] = this._lastOperationTypes[operationType] || options.operationTypes[operationType]\r\n                    })\r\n                }\r\n            });\r\n            options.storeLoadOptions = options.originalStoreLoadOptions\r\n        },\r\n        _handleDataLoadedCore: function(options) {\r\n            if (options.remoteOperations && !options.remoteOperations.paging && Array.isArray(options.data)) {\r\n                if (void 0 !== options.skip) {\r\n                    options.data = options.data.slice(options.skip)\r\n                }\r\n                if (void 0 !== options.take) {\r\n                    options.data = options.data.slice(0, options.take)\r\n                }\r\n            }\r\n        },\r\n        _handleLoadingChanged: function(isLoading) {\r\n            this.loadingChanged.fire(isLoading)\r\n        },\r\n        _handleLoadError: function(error) {\r\n            this.loadError.fire(error);\r\n            this.changed.fire({\r\n                changeType: \"loadError\",\r\n                error: error\r\n            })\r\n        },\r\n        _loadPageSize: function() {\r\n            return this.pageSize()\r\n        },\r\n        _handleDataChanged: function(args) {\r\n            var currentTotalCount;\r\n            var dataSource = this._dataSource;\r\n            var isLoading = false;\r\n            var isDataLoading = !args || isDefined(args.changeType);\r\n            var itemsCount = this.itemsCount();\r\n            if (isDataLoading) {\r\n                this._isLastPage = !itemsCount || !this._loadPageSize() || itemsCount < this._loadPageSize();\r\n                if (this._isLastPage) {\r\n                    this._hasLastPage = true\r\n                }\r\n            }\r\n            if (dataSource.totalCount() >= 0) {\r\n                if (dataSource.pageIndex() >= this.pageCount()) {\r\n                    dataSource.pageIndex(this.pageCount() - 1);\r\n                    this.pageIndex(dataSource.pageIndex());\r\n                    this.resetPagesCache();\r\n                    dataSource.load();\r\n                    isLoading = true\r\n                }\r\n            } else if (isDataLoading) {\r\n                currentTotalCount = dataSource.pageIndex() * this.pageSize() + itemsCount;\r\n                if (currentTotalCount > this._currentTotalCount) {\r\n                    this._currentTotalCount = currentTotalCount;\r\n                    if (0 === dataSource.pageIndex() || !this.option(\"scrolling.legacyMode\")) {\r\n                        this._totalCountCorrection = 0\r\n                    }\r\n                }\r\n                if (0 === itemsCount && dataSource.pageIndex() >= this.pageCount()) {\r\n                    dataSource.pageIndex(this.pageCount() - 1);\r\n                    if (\"infinite\" !== this.option(\"scrolling.mode\")) {\r\n                        dataSource.load();\r\n                        isLoading = true\r\n                    }\r\n                }\r\n            }\r\n            if (!isLoading) {\r\n                this._operationTypes = this._lastOperationTypes;\r\n                this._lastOperationTypes = {};\r\n                this.component._optionCache = {};\r\n                this.changed.fire(args);\r\n                this.component._optionCache = void 0\r\n            }\r\n        },\r\n        _scheduleCustomLoadCallbacks: function(deferred) {\r\n            var that = this;\r\n            that._isCustomLoading = true;\r\n            deferred.always((function() {\r\n                that._isCustomLoading = false\r\n            }))\r\n        },\r\n        loadingOperationTypes: function() {\r\n            return this._loadingOperationTypes\r\n        },\r\n        operationTypes: function() {\r\n            return this._operationTypes\r\n        },\r\n        lastLoadOptions: function() {\r\n            return this._lastLoadOptions || {}\r\n        },\r\n        isLastPage: function() {\r\n            return this._isLastPage\r\n        },\r\n        totalCount: function() {\r\n            return parseInt((this._currentTotalCount || this._dataSource.totalCount()) + this._totalCountCorrection)\r\n        },\r\n        totalCountCorrection: function() {\r\n            return this._totalCountCorrection\r\n        },\r\n        itemsCount: function() {\r\n            return this._dataSource.items().length\r\n        },\r\n        totalItemsCount: function() {\r\n            return this.totalCount()\r\n        },\r\n        pageSize: function() {\r\n            var dataSource = this._dataSource;\r\n            if (!arguments.length && !dataSource.paginate()) {\r\n                return 0\r\n            }\r\n            return dataSource.pageSize.apply(dataSource, arguments)\r\n        },\r\n        pageCount: function() {\r\n            var count = this.totalItemsCount() - this._totalCountCorrection;\r\n            var pageSize = this.pageSize();\r\n            if (pageSize && count > 0) {\r\n                return Math.max(1, Math.ceil(count / pageSize))\r\n            }\r\n            return 1\r\n        },\r\n        hasKnownLastPage: function() {\r\n            return this._hasLastPage || this._dataSource.totalCount() >= 0\r\n        },\r\n        loadFromStore: function(loadOptions, store) {\r\n            var dataSource = this._dataSource;\r\n            var d = new Deferred;\r\n            if (!dataSource) {\r\n                return\r\n            }\r\n            store = store || dataSource.store();\r\n            store.load(loadOptions).done((function(data, extra) {\r\n                if (data && !Array.isArray(data) && Array.isArray(data.data)) {\r\n                    extra = data;\r\n                    data = data.data\r\n                }\r\n                d.resolve(data, extra)\r\n            })).fail(d.reject);\r\n            return d\r\n        },\r\n        isCustomLoading: function() {\r\n            return !!this._isCustomLoading\r\n        },\r\n        load: function(options) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var d = new Deferred;\r\n            if (options) {\r\n                var store = dataSource.store();\r\n                var dataSourceLoadOptions = dataSource.loadOptions();\r\n                var loadResult = {\r\n                    storeLoadOptions: options,\r\n                    isCustomLoading: true\r\n                };\r\n                each(store._customLoadOptions() || [], (function(_, optionName) {\r\n                    if (!(optionName in loadResult.storeLoadOptions)) {\r\n                        loadResult.storeLoadOptions[optionName] = dataSourceLoadOptions[optionName]\r\n                    }\r\n                }));\r\n                this._isLoadingAll = options.isLoadingAll;\r\n                that._scheduleCustomLoadCallbacks(d);\r\n                dataSource._scheduleLoadCallbacks(d);\r\n                that._handleCustomizeStoreLoadOptions(loadResult);\r\n                ! function(action, timeout) {\r\n                    if (isDefined(timeout)) {\r\n                        executeAsync(action, timeout)\r\n                    } else {\r\n                        action()\r\n                    }\r\n                }((function() {\r\n                    if (!dataSource.store()) {\r\n                        return d.reject(\"canceled\")\r\n                    }\r\n                    when(loadResult.data || that.loadFromStore(loadResult.storeLoadOptions)).done((function(data, extra) {\r\n                        loadResult.data = data;\r\n                        loadResult.extra = extra || {};\r\n                        that._handleDataLoaded(loadResult);\r\n                        if (options.requireTotalCount && void 0 === loadResult.extra.totalCount) {\r\n                            loadResult.extra.totalCount = store.totalCount(loadResult.storeLoadOptions)\r\n                        }\r\n                        when(loadResult.data, loadResult.extra.totalCount).done((function(data, totalCount) {\r\n                            loadResult.extra.totalCount = totalCount;\r\n                            d.resolve(data, loadResult.extra)\r\n                        })).fail(d.reject)\r\n                    })).fail(d.reject)\r\n                }), that.option(\"loadingTimeout\"));\r\n                return d.fail((function() {\r\n                    that._eventsStrategy.fireEvent(\"loadError\", arguments)\r\n                })).always(() => {\r\n                    this._isLoadingAll = false\r\n                }).promise()\r\n            } else {\r\n                return dataSource.load()\r\n            }\r\n        },\r\n        reload: function(full) {\r\n            return full ? this._dataSource.reload() : this._dataSource.load()\r\n        },\r\n        getCachedStoreData: function() {\r\n            return this._cachedStoreData\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.data_source_adapter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport DataSourceAdapter from \"../grid_core/ui.grid_core.data_source_adapter\";\r\nvar dataSourceAdapterType = DataSourceAdapter;\r\nexport default {\r\n    extend: function(extender) {\r\n        dataSourceAdapterType = dataSourceAdapterType.inherit(extender)\r\n    },\r\n    create: function(component) {\r\n        return new dataSourceAdapterType(component)\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.data_controller.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport ArrayStore from \"../../data/array_store\";\r\nimport CustomStore from \"../../data/custom_store\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    noop,\r\n    deferRender,\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport DataHelperMixin from \"../../data_helper\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    findChanges\r\n} from \"../../core/utils/array_compare\";\r\nexport var dataControllerModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            loadingTimeout: 0,\r\n            dataSource: null,\r\n            cacheEnabled: true,\r\n            repaintChangesOnly: false,\r\n            highlightChanges: false,\r\n            onDataErrorOccurred: null,\r\n            remoteOperations: \"auto\",\r\n            paging: {\r\n                enabled: true,\r\n                pageSize: void 0,\r\n                pageIndex: void 0\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        data: modules.Controller.inherit({}).include(DataHelperMixin).inherit(function() {\r\n            var changePaging = function(that, optionName, value) {\r\n                var dataSource = that._dataSource;\r\n                if (dataSource) {\r\n                    if (void 0 !== value) {\r\n                        var oldValue = that._getPagingOptionValue(optionName);\r\n                        if (oldValue !== value) {\r\n                            if (\"pageSize\" === optionName) {\r\n                                dataSource.pageIndex(0)\r\n                            }\r\n                            dataSource[optionName](value);\r\n                            that._skipProcessingPagingChange = true;\r\n                            that.option(\"paging.\" + optionName, value);\r\n                            that._skipProcessingPagingChange = false;\r\n                            var pageIndex = dataSource.pageIndex();\r\n                            return dataSource[\"pageIndex\" === optionName ? \"load\" : \"reload\"]().done(() => that.pageChanged.fire(pageIndex))\r\n                        }\r\n                        return Deferred().resolve().promise()\r\n                    }\r\n                    return dataSource[optionName]()\r\n                }\r\n                return 0\r\n            };\r\n            var members = {\r\n                init: function() {\r\n                    var that = this;\r\n                    that._items = [];\r\n                    that._cachedProcessedItems = null;\r\n                    that._columnsController = that.getController(\"columns\");\r\n                    that._currentOperationTypes = null;\r\n                    that._dataChangedHandler = e => {\r\n                        that._currentOperationTypes = this._dataSource.operationTypes();\r\n                        that._handleDataChanged(e);\r\n                        that._currentOperationTypes = null\r\n                    };\r\n                    that._columnsChangedHandler = that._handleColumnsChanged.bind(that);\r\n                    that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\r\n                    that._loadErrorHandler = that._handleLoadError.bind(that);\r\n                    that._customizeStoreLoadOptionsHandler = that._handleCustomizeStoreLoadOptions.bind(that);\r\n                    that._changingHandler = that._handleChanging.bind(that);\r\n                    that._dataPushedHandler = that._handleDataPushed.bind(that);\r\n                    that._columnsController.columnsChanged.add(that._columnsChangedHandler);\r\n                    that._isLoading = false;\r\n                    that._isCustomLoading = false;\r\n                    that._repaintChangesOnly = void 0;\r\n                    that._changes = [];\r\n                    that.createAction(\"onDataErrorOccurred\");\r\n                    that.dataErrorOccurred.add((function(error) {\r\n                        return that.executeAction(\"onDataErrorOccurred\", {\r\n                            error: error\r\n                        })\r\n                    }));\r\n                    that._refreshDataSource()\r\n                },\r\n                _getPagingOptionValue: function(optionName) {\r\n                    return this._dataSource[optionName]()\r\n                },\r\n                callbackNames: function() {\r\n                    return [\"changed\", \"loadingChanged\", \"dataErrorOccurred\", \"pageChanged\", \"dataSourceChanged\", \"pushed\"]\r\n                },\r\n                callbackFlags: function(name) {\r\n                    if (\"dataErrorOccurred\" === name) {\r\n                        return {\r\n                            stopOnFalse: true\r\n                        }\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    return [\"beginCustomLoading\", \"endCustomLoading\", \"refresh\", \"filter\", \"clearFilter\", \"getCombinedFilter\", \"keyOf\", \"byKey\", \"getDataByKeys\", \"pageIndex\", \"pageSize\", \"pageCount\", \"totalCount\", \"_disposeDataSource\", \"getKeyByRowIndex\", \"getRowIndexByKey\", \"getDataSource\", \"getVisibleRows\", \"repaintRows\"]\r\n                },\r\n                reset: function() {\r\n                    this._columnsController.reset();\r\n                    this._items = [];\r\n                    this._refreshDataSource()\r\n                },\r\n                optionChanged: function(args) {\r\n                    var that = this;\r\n                    var dataSource;\r\n\r\n                    function handled() {\r\n                        args.handled = true\r\n                    }\r\n                    if (\"dataSource\" === args.name && args.name === args.fullName && (args.value === args.previousValue || that.option(\"columns\") && Array.isArray(args.value) && Array.isArray(args.previousValue))) {\r\n                        var _this$_dataSource;\r\n                        var isValueChanged = args.value !== args.previousValue;\r\n                        if (isValueChanged) {\r\n                            var store = that.store();\r\n                            if (store) {\r\n                                store._array = args.value\r\n                            }\r\n                        }\r\n                        handled();\r\n                        var isParasiteChange = Array.isArray(args.value) && !isValueChanged && (null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.isLoading());\r\n                        if (!isParasiteChange) {\r\n                            that.refresh(that.option(\"repaintChangesOnly\"))\r\n                        }\r\n                        return\r\n                    }\r\n                    switch (args.name) {\r\n                        case \"cacheEnabled\":\r\n                        case \"repaintChangesOnly\":\r\n                        case \"highlightChanges\":\r\n                        case \"loadingTimeout\":\r\n                            handled();\r\n                            break;\r\n                        case \"remoteOperations\":\r\n                        case \"keyExpr\":\r\n                        case \"dataSource\":\r\n                        case \"scrolling\":\r\n                            handled();\r\n                            that.reset();\r\n                            break;\r\n                        case \"paging\":\r\n                            dataSource = that.dataSource();\r\n                            if (dataSource && that._setPagingOptions(dataSource)) {\r\n                                var pageIndex = dataSource.pageIndex();\r\n                                dataSource.load().done(() => that.pageChanged.fire(pageIndex))\r\n                            }\r\n                            handled();\r\n                            break;\r\n                        case \"rtlEnabled\":\r\n                            that.reset();\r\n                            break;\r\n                        case \"columns\":\r\n                            dataSource = that.dataSource();\r\n                            if (dataSource && dataSource.isLoading() && args.name === args.fullName) {\r\n                                this._useSortingGroupingFromColumns = true;\r\n                                dataSource.load()\r\n                            }\r\n                            break;\r\n                        default:\r\n                            that.callBase(args)\r\n                    }\r\n                },\r\n                isReady: function() {\r\n                    return !this._isLoading\r\n                },\r\n                getDataSource: function() {\r\n                    return this._dataSource && this._dataSource._dataSource\r\n                },\r\n                getCombinedFilter: function(returnDataField) {\r\n                    return this.combinedFilter(void 0, returnDataField)\r\n                },\r\n                combinedFilter: function(filter, returnDataField) {\r\n                    var dataSource = this._dataSource;\r\n                    var columnsController = this._columnsController;\r\n                    if (dataSource) {\r\n                        if (void 0 === filter) {\r\n                            filter = dataSource.filter()\r\n                        }\r\n                        var additionalFilter = this._calculateAdditionalFilter();\r\n                        if (additionalFilter) {\r\n                            if (columnsController.isDataSourceApplied() || columnsController.isAllDataTypesDefined()) {\r\n                                filter = gridCoreUtils.combineFilters([additionalFilter, filter])\r\n                            }\r\n                        }\r\n                        filter = columnsController.updateFilter(filter, returnDataField || dataSource.remoteOperations().filtering)\r\n                    }\r\n                    return filter\r\n                },\r\n                waitReady: function() {\r\n                    if (this._updateLockCount) {\r\n                        this._readyDeferred = new Deferred;\r\n                        return this._readyDeferred\r\n                    }\r\n                    return when()\r\n                },\r\n                _endUpdateCore: function() {\r\n                    var changes = this._changes;\r\n                    if (changes.length) {\r\n                        this._changes = [];\r\n                        var repaintChangesOnly = changes.every(change => change.repaintChangesOnly);\r\n                        this.updateItems(1 === changes.length ? changes[0] : {\r\n                            repaintChangesOnly: repaintChangesOnly\r\n                        })\r\n                    }\r\n                    if (this._readyDeferred) {\r\n                        this._readyDeferred.resolve();\r\n                        this._readyDeferred = null\r\n                    }\r\n                },\r\n                _handleCustomizeStoreLoadOptions: function(e) {\r\n                    var _storeLoadOptions$fil;\r\n                    var columnsController = this._columnsController;\r\n                    var dataSource = this._dataSource;\r\n                    var storeLoadOptions = e.storeLoadOptions;\r\n                    if (e.isCustomLoading && !storeLoadOptions.isLoadingAll) {\r\n                        return\r\n                    }\r\n                    storeLoadOptions.filter = this.combinedFilter(storeLoadOptions.filter);\r\n                    if (1 === (null === (_storeLoadOptions$fil = storeLoadOptions.filter) || void 0 === _storeLoadOptions$fil ? void 0 : _storeLoadOptions$fil.length) && \"!\" === storeLoadOptions.filter[0]) {\r\n                        e.data = [];\r\n                        e.extra = e.extra || {};\r\n                        e.extra.totalCount = 0\r\n                    }\r\n                    if (!columnsController.isDataSourceApplied()) {\r\n                        columnsController.updateColumnDataTypes(dataSource)\r\n                    }\r\n                    this._columnsUpdating = true;\r\n                    columnsController.updateSortingGrouping(dataSource, !this._useSortingGroupingFromColumns);\r\n                    this._columnsUpdating = false;\r\n                    storeLoadOptions.sort = columnsController.getSortDataSourceParameters();\r\n                    storeLoadOptions.group = columnsController.getGroupDataSourceParameters();\r\n                    dataSource.sort(storeLoadOptions.sort);\r\n                    dataSource.group(storeLoadOptions.group);\r\n                    storeLoadOptions.sort = columnsController.getSortDataSourceParameters(!dataSource.remoteOperations().sorting);\r\n                    e.group = columnsController.getGroupDataSourceParameters(!dataSource.remoteOperations().grouping)\r\n                },\r\n                _handleColumnsChanged: function(e) {\r\n                    var that = this;\r\n                    var changeTypes = e.changeTypes;\r\n                    var optionNames = e.optionNames;\r\n                    var filterValue;\r\n                    var filterValues;\r\n                    var filterApplied;\r\n                    if (changeTypes.sorting || changeTypes.grouping) {\r\n                        if (that._dataSource && !that._columnsUpdating) {\r\n                            that._dataSource.group(that._columnsController.getGroupDataSourceParameters());\r\n                            that._dataSource.sort(that._columnsController.getSortDataSourceParameters());\r\n                            that.reload()\r\n                        }\r\n                    } else if (changeTypes.columns) {\r\n                        filterValues = that._columnsController.columnOption(e.columnIndex, \"filterValues\");\r\n                        if (optionNames.filterValues || optionNames.filterType && Array.isArray(filterValues) || optionNames.filterValue || optionNames.selectedFilterOperation || optionNames.allowFiltering) {\r\n                            filterValue = that._columnsController.columnOption(e.columnIndex, \"filterValue\");\r\n                            if (Array.isArray(filterValues) || void 0 === e.columnIndex || isDefined(filterValue) || !optionNames.selectedFilterOperation || optionNames.filterValue) {\r\n                                that._applyFilter();\r\n                                filterApplied = true\r\n                            }\r\n                        }\r\n                        if (!that._needApplyFilter && !gridCoreUtils.checkChanges(optionNames, [\"width\", \"visibleWidth\", \"filterValue\", \"bufferedFilterValue\", \"selectedFilterOperation\", \"filterValues\", \"filterType\"])) {\r\n                            that._columnsController.columnsChanged.add((function updateItemsHandler() {\r\n                                that._columnsController.columnsChanged.remove(updateItemsHandler);\r\n                                that.updateItems({\r\n                                    virtualColumnsScrolling: e.changeTypes.virtualColumnsScrolling\r\n                                })\r\n                            }))\r\n                        }\r\n                        if (isDefined(optionNames.visible)) {\r\n                            var column = that._columnsController.columnOption(e.columnIndex);\r\n                            if (column && (isDefined(column.filterValue) || isDefined(column.filterValues))) {\r\n                                that._applyFilter();\r\n                                filterApplied = true\r\n                            }\r\n                        }\r\n                    }\r\n                    if (!filterApplied && changeTypes.filtering) {\r\n                        that.reload()\r\n                    }\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var columnsController = that._columnsController;\r\n                    var isAsyncDataSourceApplying = false;\r\n                    this._useSortingGroupingFromColumns = false;\r\n                    if (dataSource && !that._isDataSourceApplying) {\r\n                        that._isDataSourceApplying = true;\r\n                        when(that._columnsController.applyDataSource(dataSource)).done((function() {\r\n                            if (that._isLoading) {\r\n                                that._handleLoadingChanged(false)\r\n                            }\r\n                            if (isAsyncDataSourceApplying && e && e.isDelayed) {\r\n                                e.isDelayed = false\r\n                            }\r\n                            that._isDataSourceApplying = false;\r\n                            var needApplyFilter = that._needApplyFilter;\r\n                            that._needApplyFilter = false;\r\n                            if (needApplyFilter && !that._isAllDataTypesDefined && (additionalFilter = that._calculateAdditionalFilter(), additionalFilter && additionalFilter.length)) {\r\n                                errors.log(\"W1005\", that.component.NAME);\r\n                                that._applyFilter()\r\n                            } else {\r\n                                that.updateItems(e, true)\r\n                            }\r\n                            var additionalFilter\r\n                        })).fail((function() {\r\n                            that._isDataSourceApplying = false\r\n                        }));\r\n                        if (that._isDataSourceApplying) {\r\n                            isAsyncDataSourceApplying = true;\r\n                            that._handleLoadingChanged(true)\r\n                        }\r\n                        that._needApplyFilter = !that._columnsController.isDataSourceApplied();\r\n                        that._isAllDataTypesDefined = columnsController.isAllDataTypesDefined()\r\n                    }\r\n                },\r\n                _handleLoadingChanged: function(isLoading) {\r\n                    this._isLoading = isLoading;\r\n                    this._fireLoadingChanged()\r\n                },\r\n                _handleLoadError: function(e) {\r\n                    this.dataErrorOccurred.fire(e)\r\n                },\r\n                _handleDataPushed: function(changes) {\r\n                    this.pushed.fire(changes)\r\n                },\r\n                fireError: function() {\r\n                    this.dataErrorOccurred.fire(errors.Error.apply(errors, arguments))\r\n                },\r\n                _setPagingOptions: function(dataSource) {\r\n                    var pageIndex = this.option(\"paging.pageIndex\");\r\n                    var pageSize = this.option(\"paging.pageSize\");\r\n                    var pagingEnabled = this.option(\"paging.enabled\");\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    var appendMode = \"infinite\" === scrollingMode;\r\n                    var virtualMode = \"virtual\" === scrollingMode;\r\n                    var paginate = pagingEnabled || virtualMode || appendMode;\r\n                    var isChanged = false;\r\n                    dataSource.requireTotalCount(!appendMode);\r\n                    if (void 0 !== pagingEnabled && dataSource.paginate() !== paginate) {\r\n                        dataSource.paginate(paginate);\r\n                        isChanged = true\r\n                    }\r\n                    if (void 0 !== pageSize && dataSource.pageSize() !== pageSize) {\r\n                        dataSource.pageSize(pageSize);\r\n                        isChanged = true\r\n                    }\r\n                    if (void 0 !== pageIndex && dataSource.pageIndex() !== pageIndex) {\r\n                        dataSource.pageIndex(pageIndex);\r\n                        isChanged = true\r\n                    }\r\n                    return isChanged\r\n                },\r\n                _getSpecificDataSourceOption: function() {\r\n                    var dataSource = this.option(\"dataSource\");\r\n                    if (Array.isArray(dataSource)) {\r\n                        return {\r\n                            store: {\r\n                                type: \"array\",\r\n                                data: dataSource,\r\n                                key: this.option(\"keyExpr\")\r\n                            }\r\n                        }\r\n                    }\r\n                    return dataSource\r\n                },\r\n                _initDataSource: function() {\r\n                    var dataSource = this.option(\"dataSource\");\r\n                    var oldDataSource = this._dataSource;\r\n                    this.callBase();\r\n                    dataSource = this._dataSource;\r\n                    this._useSortingGroupingFromColumns = true;\r\n                    this._cachedProcessedItems = null;\r\n                    if (dataSource) {\r\n                        this._setPagingOptions(dataSource);\r\n                        this.setDataSource(dataSource)\r\n                    } else if (oldDataSource) {\r\n                        this.updateItems()\r\n                    }\r\n                },\r\n                _loadDataSource: function() {\r\n                    var dataSource = this._dataSource;\r\n                    var result = new Deferred;\r\n                    when(this._columnsController.refresh(true)).always((function() {\r\n                        if (dataSource) {\r\n                            dataSource.load().done(result.resolve).fail(result.reject)\r\n                        } else {\r\n                            result.resolve()\r\n                        }\r\n                    }));\r\n                    return result.promise()\r\n                },\r\n                _beforeProcessItems: function(items) {\r\n                    return items.slice(0)\r\n                },\r\n                getRowIndexDelta: function() {\r\n                    return 0\r\n                },\r\n                _processItems: function(items, change) {\r\n                    var that = this;\r\n                    var rowIndexDelta = that.getRowIndexDelta();\r\n                    var changeType = change.changeType;\r\n                    var visibleColumns = that._columnsController.getVisibleColumns(null, \"loadingAll\" === changeType);\r\n                    var visibleItems = that._items;\r\n                    var lastVisibleItem = \"append\" === changeType && visibleItems.length > 0 ? visibleItems[visibleItems.length - 1] : null;\r\n                    var dataIndex = isDefined(null === lastVisibleItem || void 0 === lastVisibleItem ? void 0 : lastVisibleItem.dataIndex) ? lastVisibleItem.dataIndex + 1 : 0;\r\n                    var options = {\r\n                        visibleColumns: visibleColumns,\r\n                        dataIndex: dataIndex\r\n                    };\r\n                    var result = [];\r\n                    each(items, (function(index, item) {\r\n                        if (isDefined(item)) {\r\n                            options.rowIndex = index - rowIndexDelta;\r\n                            item = that._processItem(item, options);\r\n                            result.push(item)\r\n                        }\r\n                    }));\r\n                    return result\r\n                },\r\n                _processItem: function(item, options) {\r\n                    item = this._generateDataItem(item, options);\r\n                    item = this._processDataItem(item, options);\r\n                    item.dataIndex = options.dataIndex++;\r\n                    return item\r\n                },\r\n                _generateDataItem: function(data) {\r\n                    return {\r\n                        rowType: \"data\",\r\n                        data: data,\r\n                        key: this.keyOf(data)\r\n                    }\r\n                },\r\n                _processDataItem: function(dataItem, options) {\r\n                    dataItem.values = this.generateDataValues(dataItem.data, options.visibleColumns);\r\n                    return dataItem\r\n                },\r\n                generateDataValues: function(data, columns, isModified) {\r\n                    var values = [];\r\n                    var value;\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        var column = columns[i];\r\n                        value = isModified ? void 0 : null;\r\n                        if (!column.command) {\r\n                            if (column.calculateCellValue) {\r\n                                value = column.calculateCellValue(data)\r\n                            } else if (column.dataField) {\r\n                                value = data[column.dataField]\r\n                            }\r\n                        }\r\n                        values.push(value)\r\n                    }\r\n                    return values\r\n                },\r\n                _applyChange: function(change) {\r\n                    if (\"update\" === change.changeType) {\r\n                        this._applyChangeUpdate(change)\r\n                    } else if (this.items().length && change.repaintChangesOnly && \"refresh\" === change.changeType) {\r\n                        this._applyChangesOnly(change)\r\n                    } else if (\"refresh\" === change.changeType) {\r\n                        this._applyChangeFull(change)\r\n                    }\r\n                },\r\n                _applyChangeFull: function(change) {\r\n                    this._items = change.items.slice(0)\r\n                },\r\n                _getRowIndices: function(change) {\r\n                    var rowIndices = change.rowIndices.slice(0);\r\n                    var rowIndexDelta = this.getRowIndexDelta();\r\n                    rowIndices.sort((function(a, b) {\r\n                        return a - b\r\n                    }));\r\n                    for (var i = 0; i < rowIndices.length; i++) {\r\n                        var correctedRowIndex = rowIndices[i];\r\n                        if (change.allowInvisibleRowIndices) {\r\n                            correctedRowIndex += rowIndexDelta\r\n                        }\r\n                        if (correctedRowIndex < 0) {\r\n                            rowIndices.splice(i, 1);\r\n                            i--\r\n                        }\r\n                    }\r\n                    return rowIndices\r\n                },\r\n                _applyChangeUpdate: function(change) {\r\n                    var that = this;\r\n                    var items = change.items;\r\n                    var rowIndices = that._getRowIndices(change);\r\n                    var rowIndexDelta = that.getRowIndexDelta();\r\n                    var repaintChangesOnly = that.option(\"repaintChangesOnly\");\r\n                    var prevIndex = -1;\r\n                    var rowIndexCorrection = 0;\r\n                    var changeType;\r\n                    change.items = [];\r\n                    change.rowIndices = [];\r\n                    change.columnIndices = [];\r\n                    change.changeTypes = [];\r\n                    var equalItems = function(item1, item2, strict) {\r\n                        var result = item1 && item2 && equalByValue(item1.key, item2.key);\r\n                        if (result && strict) {\r\n                            result = item1.rowType === item2.rowType && (\"detail\" !== item2.rowType || item1.isEditing === item2.isEditing)\r\n                        }\r\n                        return result\r\n                    };\r\n                    each(rowIndices, (function(index, rowIndex) {\r\n                        var columnIndices;\r\n                        rowIndex += rowIndexCorrection + rowIndexDelta;\r\n                        if (prevIndex === rowIndex) {\r\n                            return\r\n                        }\r\n                        prevIndex = rowIndex;\r\n                        var oldItem = that._items[rowIndex];\r\n                        var oldNextItem = that._items[rowIndex + 1];\r\n                        var newItem = items[rowIndex];\r\n                        var newNextItem = items[rowIndex + 1];\r\n                        var strict = equalItems(oldItem, oldNextItem) || equalItems(newItem, newNextItem);\r\n                        if (newItem) {\r\n                            newItem.rowIndex = rowIndex;\r\n                            change.items.push(newItem)\r\n                        }\r\n                        if (oldItem && newItem && equalItems(oldItem, newItem, strict)) {\r\n                            changeType = \"update\";\r\n                            that._items[rowIndex] = newItem;\r\n                            if (oldItem.visible !== newItem.visible) {\r\n                                change.items.splice(-1, 1, {\r\n                                    visible: newItem.visible\r\n                                })\r\n                            } else if (repaintChangesOnly && !change.isFullUpdate) {\r\n                                columnIndices = that._partialUpdateRow(oldItem, newItem, rowIndex - rowIndexDelta)\r\n                            }\r\n                        } else if (newItem && !oldItem || newNextItem && equalItems(oldItem, newNextItem, strict)) {\r\n                            changeType = \"insert\";\r\n                            that._items.splice(rowIndex, 0, newItem);\r\n                            rowIndexCorrection++\r\n                        } else if (oldItem && !newItem || oldNextItem && equalItems(newItem, oldNextItem, strict)) {\r\n                            changeType = \"remove\";\r\n                            that._items.splice(rowIndex, 1);\r\n                            rowIndexCorrection--;\r\n                            prevIndex = -1\r\n                        } else if (newItem) {\r\n                            changeType = \"update\";\r\n                            that._items[rowIndex] = newItem\r\n                        } else {\r\n                            return\r\n                        }\r\n                        change.rowIndices.push(rowIndex - rowIndexDelta);\r\n                        change.changeTypes.push(changeType);\r\n                        change.columnIndices.push(columnIndices)\r\n                    }))\r\n                },\r\n                _isCellChanged: function(oldRow, newRow, visibleRowIndex, columnIndex, isLiveUpdate) {\r\n                    if (JSON.stringify(oldRow.values[columnIndex]) !== JSON.stringify(newRow.values[columnIndex])) {\r\n                        return true\r\n                    }\r\n\r\n                    function isCellModified(row, columnIndex) {\r\n                        return row.modifiedValues ? void 0 !== row.modifiedValues[columnIndex] : false\r\n                    }\r\n                    if (isCellModified(oldRow, columnIndex) !== isCellModified(newRow, columnIndex)) {\r\n                        return true\r\n                    }\r\n                    return false\r\n                },\r\n                _getChangedColumnIndices: function(oldItem, newItem, visibleRowIndex, isLiveUpdate) {\r\n                    var columnIndices;\r\n                    if (oldItem.rowType === newItem.rowType) {\r\n                        if (\"group\" !== newItem.rowType && \"groupFooter\" !== newItem.rowType) {\r\n                            columnIndices = [];\r\n                            if (\"detail\" !== newItem.rowType) {\r\n                                for (var columnIndex = 0; columnIndex < oldItem.values.length; columnIndex++) {\r\n                                    if (this._isCellChanged(oldItem, newItem, visibleRowIndex, columnIndex, isLiveUpdate)) {\r\n                                        columnIndices.push(columnIndex)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        if (\"group\" === newItem.rowType && newItem.isExpanded === oldItem.isExpanded && oldItem.cells) {\r\n                            columnIndices = oldItem.cells.map((cell, index) => {\r\n                                var _cell$column;\r\n                                return \"groupExpand\" !== (null === (_cell$column = cell.column) || void 0 === _cell$column ? void 0 : _cell$column.type) ? index : -1\r\n                            }).filter(index => index >= 0)\r\n                        }\r\n                    }\r\n                    return columnIndices\r\n                },\r\n                _partialUpdateRow: function(oldItem, newItem, visibleRowIndex, isLiveUpdate) {\r\n                    var _changedColumnIndices;\r\n                    var changedColumnIndices = this._getChangedColumnIndices(oldItem, newItem, visibleRowIndex, isLiveUpdate);\r\n                    if (null !== (_changedColumnIndices = changedColumnIndices) && void 0 !== _changedColumnIndices && _changedColumnIndices.length && this.option(\"dataRowTemplate\")) {\r\n                        changedColumnIndices = void 0\r\n                    }\r\n                    if (changedColumnIndices) {\r\n                        oldItem.cells && oldItem.cells.forEach((function(cell, columnIndex) {\r\n                            var isCellChanged = changedColumnIndices.indexOf(columnIndex) >= 0;\r\n                            if (!isCellChanged && cell && cell.update) {\r\n                                cell.update(newItem)\r\n                            }\r\n                        }));\r\n                        newItem.update = oldItem.update;\r\n                        newItem.watch = oldItem.watch;\r\n                        newItem.cells = oldItem.cells;\r\n                        if (isLiveUpdate) {\r\n                            newItem.oldValues = oldItem.values\r\n                        }\r\n                        oldItem.update && oldItem.update(newItem)\r\n                    }\r\n                    return changedColumnIndices\r\n                },\r\n                _isItemEquals: function(item1, item2) {\r\n                    if (JSON.stringify(item1.values) !== JSON.stringify(item2.values)) {\r\n                        return false\r\n                    }\r\n                    if ([\"modified\", \"isNewRow\", \"removed\", \"isEditing\"].some(field => item1[field] !== item2[field])) {\r\n                        return false\r\n                    }\r\n                    if (\"group\" === item1.rowType || \"groupFooter\" === item1.rowType) {\r\n                        var _item1$data, _item2$data, _item1$data2, _item2$data2;\r\n                        var expandedMatch = item1.isExpanded === item2.isExpanded;\r\n                        var summaryCellsMatch = JSON.stringify(item1.summaryCells) === JSON.stringify(item2.summaryCells);\r\n                        var continuationMatch = (null === (_item1$data = item1.data) || void 0 === _item1$data ? void 0 : _item1$data.isContinuation) === (null === (_item2$data = item2.data) || void 0 === _item2$data ? void 0 : _item2$data.isContinuation) && (null === (_item1$data2 = item1.data) || void 0 === _item1$data2 ? void 0 : _item1$data2.isContinuationOnNextPage) === (null === (_item2$data2 = item2.data) || void 0 === _item2$data2 ? void 0 : _item2$data2.isContinuationOnNextPage);\r\n                        if (!expandedMatch || !summaryCellsMatch || !continuationMatch) {\r\n                            return false\r\n                        }\r\n                    }\r\n                    return true\r\n                },\r\n                _applyChangesOnly: function(change) {\r\n                    var rowIndices = [];\r\n                    var columnIndices = [];\r\n                    var changeTypes = [];\r\n                    var items = [];\r\n                    var newIndexByKey = {};\r\n\r\n                    function getRowKey(row) {\r\n                        if (row) {\r\n                            return row.rowType + \",\" + JSON.stringify(row.key)\r\n                        }\r\n                    }\r\n                    var currentItems = this._items;\r\n                    var oldItems = currentItems.slice();\r\n                    change.items.forEach((function(item, index) {\r\n                        var key = getRowKey(item);\r\n                        newIndexByKey[key] = index;\r\n                        item.rowIndex = index\r\n                    }));\r\n                    var result = findChanges(oldItems, change.items, getRowKey, (item1, item2) => {\r\n                        if (!this._isItemEquals(item1, item2)) {\r\n                            return false\r\n                        }\r\n                        if (item1.cells) {\r\n                            item1.update && item1.update(item2);\r\n                            item1.cells.forEach((function(cell) {\r\n                                if (cell && cell.update) {\r\n                                    cell.update(item2, true)\r\n                                }\r\n                            }))\r\n                        }\r\n                        return true\r\n                    });\r\n                    if (!result) {\r\n                        this._applyChangeFull(change);\r\n                        return\r\n                    }\r\n                    result.forEach(change => {\r\n                        switch (change.type) {\r\n                            case \"update\":\r\n                                var index = change.index;\r\n                                var newItem = change.data;\r\n                                var oldItem = change.oldItem;\r\n                                var changedColumnIndices = this._partialUpdateRow(oldItem, newItem, index, true);\r\n                                rowIndices.push(index);\r\n                                changeTypes.push(\"update\");\r\n                                items.push(newItem);\r\n                                currentItems[index] = newItem;\r\n                                columnIndices.push(changedColumnIndices);\r\n                                break;\r\n                            case \"insert\":\r\n                                rowIndices.push(change.index);\r\n                                changeTypes.push(\"insert\");\r\n                                items.push(change.data);\r\n                                columnIndices.push(void 0);\r\n                                currentItems.splice(change.index, 0, change.data);\r\n                                break;\r\n                            case \"remove\":\r\n                                rowIndices.push(change.index);\r\n                                changeTypes.push(\"remove\");\r\n                                currentItems.splice(change.index, 1);\r\n                                items.push(change.oldItem);\r\n                                columnIndices.push(void 0)\r\n                        }\r\n                    });\r\n                    change.repaintChangesOnly = true;\r\n                    change.changeType = \"update\";\r\n                    change.rowIndices = rowIndices;\r\n                    change.columnIndices = columnIndices;\r\n                    change.changeTypes = changeTypes;\r\n                    change.items = items;\r\n                    if (oldItems.length) {\r\n                        change.isLiveUpdate = true\r\n                    }\r\n                    this._correctRowIndices(rowIndex => {\r\n                        var oldRowIndexOffset = this._rowIndexOffset || 0;\r\n                        var rowIndexOffset = this.getRowIndexOffset();\r\n                        var oldItem = oldItems[rowIndex - oldRowIndexOffset];\r\n                        var key = getRowKey(oldItem);\r\n                        var newVisibleRowIndex = newIndexByKey[key];\r\n                        return newVisibleRowIndex >= 0 ? newVisibleRowIndex + rowIndexOffset - rowIndex : 0\r\n                    })\r\n                },\r\n                _correctRowIndices: noop,\r\n                _afterProcessItems: function(items) {\r\n                    return items\r\n                },\r\n                _updateItemsCore: function(change) {\r\n                    var items;\r\n                    var dataSource = this._dataSource;\r\n                    var changeType = change.changeType || \"refresh\";\r\n                    change.changeType = changeType;\r\n                    if (dataSource) {\r\n                        var cachedProcessedItems = this._cachedProcessedItems;\r\n                        if (change.useProcessedItemsCache && cachedProcessedItems) {\r\n                            items = cachedProcessedItems\r\n                        } else {\r\n                            items = change.items || dataSource.items();\r\n                            items = this._beforeProcessItems(items);\r\n                            items = this._processItems(items, change);\r\n                            this._cachedProcessedItems = items\r\n                        }\r\n                        items = this._afterProcessItems(items, change);\r\n                        change.items = items;\r\n                        var oldItems = this._items.length === items.length && this._items;\r\n                        this._applyChange(change);\r\n                        var rowIndexDelta = this.getRowIndexDelta();\r\n                        each(this._items, (index, item) => {\r\n                            item.rowIndex = index - rowIndexDelta;\r\n                            if (oldItems) {\r\n                                item.cells = oldItems[index].cells || []\r\n                            }\r\n                            var newItem = items[index];\r\n                            if (newItem) {\r\n                                item.loadIndex = newItem.loadIndex\r\n                            }\r\n                        });\r\n                        this._rowIndexOffset = this.getRowIndexOffset()\r\n                    } else {\r\n                        this._items = []\r\n                    }\r\n                },\r\n                _handleChanging: function(e) {\r\n                    var rows = this.getVisibleRows();\r\n                    var dataSource = this.dataSource();\r\n                    if (dataSource) {\r\n                        e.changes.forEach((function(change) {\r\n                            if (\"insert\" === change.type && change.index >= 0) {\r\n                                var dataIndex = 0;\r\n                                for (var i = 0; i < change.index; i++) {\r\n                                    var row = rows[i];\r\n                                    if (row && (\"data\" === row.rowType || \"group\" === row.rowType)) {\r\n                                        dataIndex++\r\n                                    }\r\n                                }\r\n                                change.index = dataIndex\r\n                            }\r\n                        }))\r\n                    }\r\n                },\r\n                updateItems: function(change, isDataChanged) {\r\n                    change = change || {};\r\n                    if (void 0 !== this._repaintChangesOnly) {\r\n                        change.repaintChangesOnly = change.repaintChangesOnly || this._repaintChangesOnly;\r\n                        change.needUpdateDimensions = change.needUpdateDimensions || this._needUpdateDimensions\r\n                    } else if (change.changes) {\r\n                        change.repaintChangesOnly = this.option(\"repaintChangesOnly\")\r\n                    } else if (isDataChanged) {\r\n                        var operationTypes = this.dataSource().operationTypes();\r\n                        change.repaintChangesOnly = operationTypes && !operationTypes.grouping && !operationTypes.filtering && this.option(\"repaintChangesOnly\");\r\n                        change.isDataChanged = true;\r\n                        if (operationTypes && (operationTypes.reload || operationTypes.paging || operationTypes.groupExpanding)) {\r\n                            change.needUpdateDimensions = true\r\n                        }\r\n                    }\r\n                    if (this._updateLockCount) {\r\n                        this._changes.push(change);\r\n                        return\r\n                    }\r\n                    this._updateItemsCore(change);\r\n                    if (change.cancel) {\r\n                        return\r\n                    }\r\n                    this._fireChanged(change)\r\n                },\r\n                loadingOperationTypes: function() {\r\n                    var dataSource = this.dataSource();\r\n                    return dataSource && dataSource.loadingOperationTypes() || {}\r\n                },\r\n                _fireChanged: function(change) {\r\n                    if (this._currentOperationTypes) {\r\n                        change.operationTypes = this._currentOperationTypes;\r\n                        this._currentOperationTypes = null\r\n                    }\r\n                    deferRender(() => {\r\n                        this.changed.fire(change)\r\n                    })\r\n                },\r\n                isLoading: function() {\r\n                    return this._isLoading || this._isCustomLoading\r\n                },\r\n                _fireLoadingChanged: function() {\r\n                    this.loadingChanged.fire(this.isLoading(), this._loadingText)\r\n                },\r\n                _calculateAdditionalFilter: function() {\r\n                    return null\r\n                },\r\n                _applyFilter: function() {\r\n                    var dataSource = this._dataSource;\r\n                    if (dataSource) {\r\n                        dataSource.pageIndex(0);\r\n                        this._isFilterApplying = true;\r\n                        return this.reload().done(() => {\r\n                            if (this._isFilterApplying) {\r\n                                this.pageChanged.fire()\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                resetFilterApplying: function() {\r\n                    this._isFilterApplying = false\r\n                },\r\n                filter: function(filterExpr) {\r\n                    var dataSource = this._dataSource;\r\n                    var filter = dataSource && dataSource.filter();\r\n                    if (0 === arguments.length) {\r\n                        return filter\r\n                    }\r\n                    filterExpr = arguments.length > 1 ? Array.prototype.slice.call(arguments, 0) : filterExpr;\r\n                    if (gridCoreUtils.equalFilterParameters(filter, filterExpr)) {\r\n                        return\r\n                    }\r\n                    if (dataSource) {\r\n                        dataSource.filter(filterExpr)\r\n                    }\r\n                    this._applyFilter()\r\n                },\r\n                clearFilter: function(filterName) {\r\n                    var that = this;\r\n                    var columnsController = that._columnsController;\r\n                    var clearColumnOption = function(optionName) {\r\n                        var columnCount = columnsController.columnCount();\r\n                        for (var index = 0; index < columnCount; index++) {\r\n                            columnsController.columnOption(index, optionName, void 0)\r\n                        }\r\n                    };\r\n                    that.component.beginUpdate();\r\n                    if (arguments.length > 0) {\r\n                        switch (filterName) {\r\n                            case \"dataSource\":\r\n                                that.filter(null);\r\n                                break;\r\n                            case \"search\":\r\n                                that.searchByText(\"\");\r\n                                break;\r\n                            case \"header\":\r\n                                clearColumnOption(\"filterValues\");\r\n                                break;\r\n                            case \"row\":\r\n                                clearColumnOption(\"filterValue\")\r\n                        }\r\n                    } else {\r\n                        that.filter(null);\r\n                        that.searchByText(\"\");\r\n                        clearColumnOption(\"filterValue\");\r\n                        clearColumnOption(\"bufferedFilterValue\");\r\n                        clearColumnOption(\"filterValues\")\r\n                    }\r\n                    that.component.endUpdate()\r\n                },\r\n                _fireDataSourceChanged: function() {\r\n                    var that = this;\r\n                    that.changed.add((function changedHandler() {\r\n                        that.changed.remove(changedHandler);\r\n                        that.dataSourceChanged.fire()\r\n                    }))\r\n                },\r\n                _getDataSourceAdapter: noop,\r\n                _createDataSourceAdapterCore: function(dataSource, remoteOperations) {\r\n                    var dataSourceAdapterProvider = this._getDataSourceAdapter();\r\n                    var dataSourceAdapter = dataSourceAdapterProvider.create(this.component);\r\n                    dataSourceAdapter.init(dataSource, remoteOperations);\r\n                    return dataSourceAdapter\r\n                },\r\n                isLocalStore: function(store) {\r\n                    store = store || this.store();\r\n                    return store instanceof ArrayStore\r\n                },\r\n                isCustomStore: function(store) {\r\n                    store = store || this.store();\r\n                    return store instanceof CustomStore\r\n                },\r\n                _createDataSourceAdapter: function(dataSource) {\r\n                    var remoteOperations = this.option(\"remoteOperations\");\r\n                    var store = dataSource.store();\r\n                    var enabledRemoteOperations = {\r\n                        filtering: true,\r\n                        sorting: true,\r\n                        paging: true,\r\n                        grouping: true,\r\n                        summary: true\r\n                    };\r\n                    if (remoteOperations && remoteOperations.groupPaging) {\r\n                        remoteOperations = extend({}, enabledRemoteOperations, remoteOperations)\r\n                    }\r\n                    if (\"auto\" === remoteOperations) {\r\n                        remoteOperations = this.isLocalStore(store) || this.isCustomStore(store) ? {} : {\r\n                            filtering: true,\r\n                            sorting: true,\r\n                            paging: true\r\n                        }\r\n                    }\r\n                    if (true === remoteOperations) {\r\n                        remoteOperations = enabledRemoteOperations\r\n                    }\r\n                    return this._createDataSourceAdapterCore(dataSource, remoteOperations)\r\n                },\r\n                setDataSource: function(dataSource) {\r\n                    var oldDataSource = this._dataSource;\r\n                    if (!dataSource && oldDataSource) {\r\n                        oldDataSource.cancelAll();\r\n                        oldDataSource.changed.remove(this._dataChangedHandler);\r\n                        oldDataSource.loadingChanged.remove(this._loadingChangedHandler);\r\n                        oldDataSource.loadError.remove(this._loadErrorHandler);\r\n                        oldDataSource.customizeStoreLoadOptions.remove(this._customizeStoreLoadOptionsHandler);\r\n                        oldDataSource.changing.remove(this._changingHandler);\r\n                        oldDataSource.pushed.remove(this._dataPushedHandler);\r\n                        oldDataSource.dispose(this._isSharedDataSource)\r\n                    }\r\n                    if (dataSource) {\r\n                        dataSource = this._createDataSourceAdapter(dataSource)\r\n                    }\r\n                    this._dataSource = dataSource;\r\n                    if (dataSource) {\r\n                        this._fireDataSourceChanged();\r\n                        this._isLoading = !dataSource.isLoaded();\r\n                        this._needApplyFilter = true;\r\n                        this._isAllDataTypesDefined = this._columnsController.isAllDataTypesDefined();\r\n                        dataSource.changed.add(this._dataChangedHandler);\r\n                        dataSource.loadingChanged.add(this._loadingChangedHandler);\r\n                        dataSource.loadError.add(this._loadErrorHandler);\r\n                        dataSource.customizeStoreLoadOptions.add(this._customizeStoreLoadOptionsHandler);\r\n                        dataSource.changing.add(this._changingHandler);\r\n                        dataSource.pushed.add(this._dataPushedHandler)\r\n                    }\r\n                },\r\n                items: function() {\r\n                    return this._items\r\n                },\r\n                isEmpty: function() {\r\n                    return !this.items().length\r\n                },\r\n                pageCount: function() {\r\n                    return this._dataSource ? this._dataSource.pageCount() : 1\r\n                },\r\n                dataSource: function() {\r\n                    return this._dataSource\r\n                },\r\n                store: function() {\r\n                    var dataSource = this._dataSource;\r\n                    return dataSource && dataSource.store()\r\n                },\r\n                loadAll: function(data) {\r\n                    var that = this;\r\n                    var d = new Deferred;\r\n                    var dataSource = that._dataSource;\r\n                    if (dataSource) {\r\n                        if (data) {\r\n                            var options = {\r\n                                data: data,\r\n                                isCustomLoading: true,\r\n                                storeLoadOptions: {\r\n                                    isLoadingAll: true\r\n                                },\r\n                                loadOptions: {\r\n                                    filter: that.getCombinedFilter(),\r\n                                    group: dataSource.group(),\r\n                                    sort: dataSource.sort()\r\n                                }\r\n                            };\r\n                            dataSource._handleDataLoaded(options);\r\n                            when(options.data).done((function(data) {\r\n                                data = that._beforeProcessItems(data);\r\n                                d.resolve(that._processItems(data, {\r\n                                    changeType: \"loadingAll\"\r\n                                }), options.extra && options.extra.summary)\r\n                            })).fail(d.reject)\r\n                        } else if (!dataSource.isLoading()) {\r\n                            var loadOptions = extend({}, dataSource.loadOptions(), {\r\n                                isLoadingAll: true,\r\n                                requireTotalCount: false\r\n                            });\r\n                            dataSource.load(loadOptions).done((function(items, extra) {\r\n                                items = that._beforeProcessItems(items);\r\n                                items = that._processItems(items, {\r\n                                    changeType: \"loadingAll\"\r\n                                });\r\n                                d.resolve(items, extra && extra.summary)\r\n                            })).fail(d.reject)\r\n                        } else {\r\n                            d.reject()\r\n                        }\r\n                    } else {\r\n                        d.resolve([])\r\n                    }\r\n                    return d\r\n                },\r\n                getKeyByRowIndex: function(rowIndex, byLoaded) {\r\n                    var item = this.items(byLoaded)[rowIndex];\r\n                    if (item) {\r\n                        return item.key\r\n                    }\r\n                },\r\n                getRowIndexByKey: function(key, byLoaded) {\r\n                    return gridCoreUtils.getIndexByKey(key, this.items(byLoaded))\r\n                },\r\n                keyOf: function(data) {\r\n                    var store = this.store();\r\n                    if (store) {\r\n                        return store.keyOf(data)\r\n                    }\r\n                },\r\n                byKey: function(key) {\r\n                    var store = this.store();\r\n                    var rowIndex = this.getRowIndexByKey(key);\r\n                    var result;\r\n                    if (!store) {\r\n                        return\r\n                    }\r\n                    if (rowIndex >= 0) {\r\n                        result = (new Deferred).resolve(this.items()[rowIndex].data)\r\n                    }\r\n                    return result || store.byKey(key)\r\n                },\r\n                key: function() {\r\n                    var store = this.store();\r\n                    if (store) {\r\n                        return store.key()\r\n                    }\r\n                },\r\n                getRowIndexOffset: function() {\r\n                    return 0\r\n                },\r\n                getDataByKeys: function(rowKeys) {\r\n                    var that = this;\r\n                    var result = new Deferred;\r\n                    var deferreds = [];\r\n                    var data = [];\r\n                    each(rowKeys, (function(index, key) {\r\n                        deferreds.push(that.byKey(key).done((function(keyData) {\r\n                            data[index] = keyData\r\n                        })))\r\n                    }));\r\n                    when.apply($, deferreds).always((function() {\r\n                        result.resolve(data)\r\n                    }));\r\n                    return result\r\n                },\r\n                pageIndex: function(value) {\r\n                    return changePaging(this, \"pageIndex\", value)\r\n                },\r\n                pageSize: function(value) {\r\n                    return changePaging(this, \"pageSize\", value)\r\n                },\r\n                beginCustomLoading: function(messageText) {\r\n                    this._isCustomLoading = true;\r\n                    this._loadingText = messageText || \"\";\r\n                    this._fireLoadingChanged()\r\n                },\r\n                endCustomLoading: function() {\r\n                    this._isCustomLoading = false;\r\n                    this._loadingText = void 0;\r\n                    this._fireLoadingChanged()\r\n                },\r\n                refresh: function(options) {\r\n                    if (true === options) {\r\n                        options = {\r\n                            reload: true,\r\n                            changesOnly: true\r\n                        }\r\n                    } else if (!options) {\r\n                        options = {\r\n                            lookup: true,\r\n                            selection: true,\r\n                            reload: true\r\n                        }\r\n                    }\r\n                    var that = this;\r\n                    var dataSource = that.getDataSource();\r\n                    var changesOnly = options.changesOnly;\r\n                    var d = new Deferred;\r\n                    var customizeLoadResult = function() {\r\n                        that._repaintChangesOnly = !!changesOnly\r\n                    };\r\n                    when(!options.lookup || that._columnsController.refresh()).always((function() {\r\n                        if (options.load || options.reload) {\r\n                            dataSource && dataSource.on(\"customizeLoadResult\", customizeLoadResult);\r\n                            when(that.reload(options.reload, changesOnly)).always((function() {\r\n                                dataSource && dataSource.off(\"customizeLoadResult\", customizeLoadResult);\r\n                                that._repaintChangesOnly = void 0\r\n                            })).done(d.resolve).fail(d.reject)\r\n                        } else {\r\n                            that.updateItems({\r\n                                repaintChangesOnly: options.changesOnly\r\n                            });\r\n                            d.resolve()\r\n                        }\r\n                    }));\r\n                    return d.promise()\r\n                },\r\n                getVisibleRows: function() {\r\n                    return this.items()\r\n                },\r\n                _disposeDataSource: function() {\r\n                    this.setDataSource(null)\r\n                },\r\n                dispose: function() {\r\n                    this._disposeDataSource();\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                repaintRows: function(rowIndexes, changesOnly) {\r\n                    rowIndexes = Array.isArray(rowIndexes) ? rowIndexes : [rowIndexes];\r\n                    if (rowIndexes.length > 1 || isDefined(rowIndexes[0])) {\r\n                        this.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: rowIndexes,\r\n                            isFullUpdate: !changesOnly\r\n                        })\r\n                    }\r\n                },\r\n                skipProcessingPagingChange: function(fullName) {\r\n                    return this._skipProcessingPagingChange && (\"paging.pageIndex\" === fullName || \"paging.pageSize\" === fullName)\r\n                },\r\n                getUserState: function() {\r\n                    return {\r\n                        searchText: this.option(\"searchPanel.text\"),\r\n                        pageIndex: this.pageIndex(),\r\n                        pageSize: this.pageSize()\r\n                    }\r\n                },\r\n                getCachedStoreData: function() {\r\n                    return this._dataSource && this._dataSource.getCachedStoreData()\r\n                },\r\n                isLastPageLoaded: function() {\r\n                    var pageIndex = this.pageIndex();\r\n                    var pageCount = this.pageCount();\r\n                    return pageIndex === pageCount - 1\r\n                }\r\n            };\r\n            gridCoreUtils.proxyMethod(members, \"load\");\r\n            gridCoreUtils.proxyMethod(members, \"reload\");\r\n            gridCoreUtils.proxyMethod(members, \"push\");\r\n            gridCoreUtils.proxyMethod(members, \"itemsCount\", 0);\r\n            gridCoreUtils.proxyMethod(members, \"totalItemsCount\", 0);\r\n            gridCoreUtils.proxyMethod(members, \"hasKnownLastPage\", true);\r\n            gridCoreUtils.proxyMethod(members, \"isLoaded\", true);\r\n            gridCoreUtils.proxyMethod(members, \"totalCount\", 0);\r\n            return members\r\n        }())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.data_controller.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport dataSourceAdapterProvider from \"./ui.data_grid.data_source_adapter\";\r\nimport {\r\n    dataControllerModule\r\n} from \"../grid_core/ui.grid_core.data_controller\";\r\nexport var DataController = dataControllerModule.controllers.data.inherit({\r\n    _getDataSourceAdapter: function() {\r\n        return dataSourceAdapterProvider\r\n    },\r\n    _getSpecificDataSourceOption: function() {\r\n        var dataSource = this.option(\"dataSource\");\r\n        if (dataSource && !Array.isArray(dataSource) && this.option(\"keyExpr\")) {\r\n            errors.log(\"W1011\")\r\n        }\r\n        return this.callBase()\r\n    }\r\n});\r\ngridCore.registerModule(\"data\", {\r\n    defaultOptions: dataControllerModule.defaultOptions,\r\n    controllers: {\r\n        data: DataController\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.sorting_mixin.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport $ from \"../../core/renderer\";\r\nvar SORT_CLASS = \"dx-sort\";\r\nvar SORT_NONE_CLASS = \"dx-sort-none\";\r\nvar SORTUP_CLASS = \"dx-sort-up\";\r\nvar SORTDOWN_CLASS = \"dx-sort-down\";\r\nvar SORT_INDEX_CLASS = \"dx-sort-index\";\r\nvar SORT_INDEX_ICON_CLASS = \"dx-sort-index-icon\";\r\nvar HEADERS_ACTION_CLASS = \"action\";\r\nexport default {\r\n    _applyColumnState: function(options) {\r\n        var ariaSortState;\r\n        var $sortIndicator;\r\n        var sortingMode = this.option(\"sorting.mode\");\r\n        var rootElement = options.rootElement;\r\n        var column = options.column;\r\n        var $indicatorsContainer = this._getIndicatorContainer(rootElement);\r\n        if (\"sort\" === options.name) {\r\n            rootElement.find(\".\" + SORT_CLASS).remove();\r\n            !$indicatorsContainer.children().length && $indicatorsContainer.remove();\r\n            var isSortingAllowed = \"none\" !== sortingMode && column.allowSorting;\r\n            if (!isDefined(column.groupIndex) && (isSortingAllowed || isDefined(column.sortOrder))) {\r\n                ariaSortState = \"asc\" === column.sortOrder ? \"ascending\" : \"descending\";\r\n                $sortIndicator = this.callBase(options).toggleClass(SORTUP_CLASS, \"asc\" === column.sortOrder).toggleClass(SORTDOWN_CLASS, \"desc\" === column.sortOrder);\r\n                var hasSeveralSortIndexes = this.getController && !!this.getController(\"columns\").columnOption(\"sortIndex:1\");\r\n                if (hasSeveralSortIndexes && this.option(\"sorting.showSortIndexes\") && column.sortIndex >= 0) {\r\n                    $(\"<span>\").addClass(SORT_INDEX_ICON_CLASS).text(column.sortIndex + 1).appendTo($sortIndicator);\r\n                    $sortIndicator.addClass(SORT_INDEX_CLASS)\r\n                }\r\n                if (isSortingAllowed) {\r\n                    options.rootElement.addClass(this.addWidgetPrefix(HEADERS_ACTION_CLASS))\r\n                }\r\n            }\r\n            if (!isDefined(column.sortOrder)) {\r\n                this.setAria(\"sort\", \"none\", rootElement)\r\n            } else {\r\n                this.setAria(\"sort\", ariaSortState, rootElement)\r\n            }\r\n            return $sortIndicator\r\n        } else {\r\n            return this.callBase(options)\r\n        }\r\n    },\r\n    _getIndicatorClassName: function(name) {\r\n        if (\"sort\" === name) {\r\n            return SORT_CLASS\r\n        } else if (\"sortIndex\" === name) {\r\n            return SORT_INDEX_ICON_CLASS\r\n        }\r\n        return this.callBase(name)\r\n    },\r\n    _renderIndicator: function(options) {\r\n        var column = options.column;\r\n        var $container = options.container;\r\n        var $indicator = options.indicator;\r\n        if (\"sort\" === options.name) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\");\r\n            if (!isDefined(column.sortOrder)) {\r\n                $indicator && $indicator.addClass(SORT_NONE_CLASS)\r\n            }\r\n            if ($container.children().length && (!rtlEnabled && \"left\" === options.columnAlignment || rtlEnabled && \"right\" === options.columnAlignment)) {\r\n                $container.prepend($indicator);\r\n                return\r\n            }\r\n        }\r\n        this.callBase(options)\r\n    },\r\n    _updateIndicator: function($cell, column, indicatorName) {\r\n        if (\"sort\" === indicatorName && isDefined(column.groupIndex)) {\r\n            return\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _getIndicatorElements: function($cell, returnAll) {\r\n        var $indicatorElements = this.callBase($cell);\r\n        return returnAll ? $indicatorElements : $indicatorElements && $indicatorElements.not(\".\" + SORT_NONE_CLASS)\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.sorting.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport sortingMixin from \"../grid_core/ui.grid_core.sorting_mixin\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    addNamespace,\r\n    isCommandKeyPressed\r\n} from \"../../events/utils/index\";\r\nvar COLUMN_HEADERS_VIEW_NAMESPACE = \"dxDataGridColumnHeadersView\";\r\nvar ColumnHeadersViewSortingExtender = extend({}, sortingMixin, {\r\n    _createRow(row) {\r\n        var $row = this.callBase(row);\r\n        if (\"header\" === row.rowType) {\r\n            eventsEngine.on($row, addNamespace(clickEventName, COLUMN_HEADERS_VIEW_NAMESPACE), \"td\", this.createAction(e => {\r\n                this._processHeaderAction(e.event, $row)\r\n            }))\r\n        }\r\n        return $row\r\n    },\r\n    _processHeaderAction: function(event, $row) {\r\n        if ($(event.currentTarget).parent().get(0) !== $row.get(0)) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var keyName = null;\r\n        var $cellElementFromEvent = $(event.currentTarget);\r\n        var rowIndex = $cellElementFromEvent.parent().index();\r\n        var columnIndex = -1;\r\n        [].slice.call(that.getCellElements(rowIndex)).some(($cellElement, index) => {\r\n            if ($cellElement === $cellElementFromEvent.get(0)) {\r\n                columnIndex = index;\r\n                return true\r\n            }\r\n        });\r\n        var visibleColumns = that._columnsController.getVisibleColumns(rowIndex);\r\n        var column = visibleColumns[columnIndex];\r\n        var editingController = that.getController(\"editing\");\r\n        var editingMode = that.option(\"editing.mode\");\r\n        var isCellEditing = editingController && editingController.isEditing() && (\"batch\" === editingMode || \"cell\" === editingMode);\r\n        if (isCellEditing || !that._isSortableElement($(event.target))) {\r\n            return\r\n        }\r\n        if (column && !isDefined(column.groupIndex) && !column.command) {\r\n            if (event.shiftKey) {\r\n                keyName = \"shift\"\r\n            } else if (isCommandKeyPressed(event)) {\r\n                keyName = \"ctrl\"\r\n            }\r\n            setTimeout(() => {\r\n                that._columnsController.changeSortOrder(column.index, keyName)\r\n            })\r\n        }\r\n    },\r\n    _renderCellContent($cell, options) {\r\n        var column = options.column;\r\n        if (!column.command && \"header\" === options.rowType) {\r\n            this._applyColumnState({\r\n                name: \"sort\",\r\n                rootElement: $cell,\r\n                column: column,\r\n                showColumnLines: this.option(\"showColumnLines\")\r\n            })\r\n        }\r\n        this.callBase($cell, options)\r\n    },\r\n    _columnOptionChanged(e) {\r\n        var changeTypes = e.changeTypes;\r\n        if (1 === changeTypes.length && changeTypes.sorting) {\r\n            this._updateIndicators(\"sort\");\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"sorting\":\r\n                this._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nvar HeaderPanelSortingExtender = extend({}, sortingMixin, {\r\n    _createGroupPanelItem($rootElement, groupColumn) {\r\n        var that = this;\r\n        var $item = that.callBase(...arguments);\r\n        eventsEngine.on($item, addNamespace(clickEventName, \"dxDataGridHeaderPanel\"), that.createAction(() => {\r\n            that._processGroupItemAction(groupColumn.index)\r\n        }));\r\n        that._applyColumnState({\r\n            name: \"sort\",\r\n            rootElement: $item,\r\n            column: {\r\n                alignment: that.option(\"rtlEnabled\") ? \"right\" : \"left\",\r\n                allowSorting: groupColumn.allowSorting,\r\n                sortOrder: \"desc\" === groupColumn.sortOrder ? \"desc\" : \"asc\"\r\n            },\r\n            showColumnLines: true\r\n        });\r\n        return $item\r\n    },\r\n    _processGroupItemAction(groupColumnIndex) {\r\n        setTimeout(() => this.getController(\"columns\").changeSortOrder(groupColumnIndex))\r\n    },\r\n    optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"sorting\":\r\n                this._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nexport var sortingModule = {\r\n    defaultOptions: () => ({\r\n        sorting: {\r\n            mode: \"single\",\r\n            ascendingText: messageLocalization.format(\"dxDataGrid-sortingAscendingText\"),\r\n            descendingText: messageLocalization.format(\"dxDataGrid-sortingDescendingText\"),\r\n            clearText: messageLocalization.format(\"dxDataGrid-sortingClearText\"),\r\n            showSortIndexes: true\r\n        }\r\n    }),\r\n    extenders: {\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewSortingExtender,\r\n            headerPanel: HeaderPanelSortingExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.sorting.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    sortingModule\r\n} from \"../grid_core/ui.grid_core.sorting\";\r\ngridCore.registerModule(\"sorting\", sortingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.rows.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    getHeight,\r\n    getOuterHeight,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow,\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    deferRender,\r\n    deferUpdate\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    setHeight\r\n} from \"../../core/utils/style\";\r\nimport {\r\n    isDefined,\r\n    isNumeric,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect,\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    isEmpty\r\n} from \"../../core/utils/string\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    ColumnsView\r\n} from \"./ui.grid_core.columns_view\";\r\nimport Scrollable from \"../scroll_view/ui.scrollable\";\r\nimport {\r\n    removeEvent\r\n} from \"../../events/remove\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport browser from \"../../core/utils/browser\";\r\nvar ROWS_VIEW_CLASS = \"rowsview\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar NOWRAP_CLASS = \"nowrap\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar GROUP_CELL_CLASS = \"dx-group-cell\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar FREE_SPACE_CLASS = \"dx-freespace-row\";\r\nvar ROW_LINES_CLASS = \"dx-row-lines\";\r\nvar COLUMN_LINES_CLASS = \"dx-column-lines\";\r\nvar ROW_ALTERNATION_CLASS = \"dx-row-alt\";\r\nvar LAST_ROW_BORDER = \"dx-last-row-border\";\r\nvar EMPTY_CLASS = \"dx-empty\";\r\nvar ROW_INSERTED_ANIMATION_CLASS = \"row-inserted-animation\";\r\nvar LOADPANEL_HIDE_TIMEOUT = 200;\r\n\r\nfunction getMaxHorizontalScrollOffset(scrollable) {\r\n    return scrollable ? Math.round(scrollable.scrollWidth() - scrollable.clientWidth()) : 0\r\n}\r\nexport var rowsModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            hoverStateEnabled: false,\r\n            scrolling: {\r\n                useNative: \"auto\"\r\n            },\r\n            loadPanel: {\r\n                enabled: \"auto\",\r\n                text: messageLocalization.format(\"Loading\"),\r\n                width: 200,\r\n                height: 90,\r\n                showIndicator: true,\r\n                indicatorSrc: \"\",\r\n                showPane: true\r\n            },\r\n            dataRowTemplate: null,\r\n            columnAutoWidth: false,\r\n            noDataText: messageLocalization.format(\"dxDataGrid-noDataText\"),\r\n            wordWrapEnabled: false,\r\n            showColumnLines: true,\r\n            showRowLines: false,\r\n            rowAlternationEnabled: false,\r\n            activeStateEnabled: false,\r\n            twoWayBindingEnabled: true\r\n        }\r\n    },\r\n    views: {\r\n        rowsView: ColumnsView.inherit(function() {\r\n            var defaultCellTemplate = function($container, options) {\r\n                var isDataTextEmpty = isEmpty(options.text) && \"data\" === options.rowType;\r\n                var text = options.text;\r\n                var container = $container.get(0);\r\n                if (isDataTextEmpty) {\r\n                    gridCoreUtils.setEmptyText($container)\r\n                } else if (options.column.encodeHtml) {\r\n                    container.textContent = text\r\n                } else {\r\n                    container.innerHTML = text\r\n                }\r\n            };\r\n            return {\r\n                _getDefaultTemplate: function(column) {\r\n                    switch (column.command) {\r\n                        case \"empty\":\r\n                            return function(container) {\r\n                                container.html(\"&nbsp;\")\r\n                            };\r\n                        default:\r\n                            return defaultCellTemplate\r\n                    }\r\n                },\r\n                _getDefaultGroupTemplate: function(column) {\r\n                    var summaryTexts = this.option(\"summary.texts\");\r\n                    return function($container, options) {\r\n                        var data = options.data;\r\n                        var text = options.column.caption + \": \" + options.text;\r\n                        var container = $container.get(0);\r\n                        if (options.summaryItems && options.summaryItems.length) {\r\n                            text += \" \" + gridCoreUtils.getGroupRowSummaryText(options.summaryItems, summaryTexts)\r\n                        }\r\n                        if (data) {\r\n                            if (options.groupContinuedMessage && options.groupContinuesMessage) {\r\n                                text += \" (\" + options.groupContinuedMessage + \". \" + options.groupContinuesMessage + \")\"\r\n                            } else if (options.groupContinuesMessage) {\r\n                                text += \" (\" + options.groupContinuesMessage + \")\"\r\n                            } else if (options.groupContinuedMessage) {\r\n                                text += \" (\" + options.groupContinuedMessage + \")\"\r\n                            }\r\n                        }\r\n                        $container.addClass(GROUP_CELL_CLASS);\r\n                        if (column.encodeHtml) {\r\n                            container.textContent = text\r\n                        } else {\r\n                            container.innerHTML = text\r\n                        }\r\n                    }\r\n                },\r\n                _update: function() {},\r\n                _getCellTemplate: function(options) {\r\n                    var column = options.column;\r\n                    var template;\r\n                    if (\"group\" === options.rowType && isDefined(column.groupIndex) && !column.showWhenGrouped && !column.command) {\r\n                        template = column.groupCellTemplate || {\r\n                            allowRenderToDetachedContainer: true,\r\n                            render: this._getDefaultGroupTemplate(column)\r\n                        }\r\n                    } else if ((\"data\" === options.rowType || column.command) && column.cellTemplate) {\r\n                        template = column.cellTemplate\r\n                    } else {\r\n                        template = {\r\n                            allowRenderToDetachedContainer: true,\r\n                            render: this._getDefaultTemplate(column)\r\n                        }\r\n                    }\r\n                    return template\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var isGroup = \"group\" === row.rowType;\r\n                        var isDataRow = \"data\" === row.rowType;\r\n                        isDataRow && $row.addClass(DATA_ROW_CLASS);\r\n                        isDataRow && this.option(\"showRowLines\") && $row.addClass(ROW_LINES_CLASS);\r\n                        this.option(\"showColumnLines\") && $row.addClass(COLUMN_LINES_CLASS);\r\n                        if (false === row.visible) {\r\n                            $row.hide()\r\n                        }\r\n                        if (isGroup) {\r\n                            $row.addClass(GROUP_ROW_CLASS);\r\n                            var isRowExpanded = row.isExpanded;\r\n                            this.setAria(\"role\", \"row\", $row);\r\n                            this.setAria(\"expanded\", isDefined(isRowExpanded) && isRowExpanded.toString(), $row)\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _rowPrepared: function($row, rowOptions, row) {\r\n                    if (\"data\" === rowOptions.rowType) {\r\n                        if (this.option(\"rowAlternationEnabled\")) {\r\n                            this._isAltRow(row) && $row.addClass(ROW_ALTERNATION_CLASS);\r\n                            rowOptions.watch && rowOptions.watch(() => this._isAltRow(row), value => {\r\n                                $row.toggleClass(ROW_ALTERNATION_CLASS, value)\r\n                            })\r\n                        }\r\n                        this._setAriaRowIndex(rowOptions, $row);\r\n                        rowOptions.watch && rowOptions.watch(() => rowOptions.rowIndex, () => this._setAriaRowIndex(rowOptions, $row))\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _setAriaRowIndex: function(row, $row) {\r\n                    var component = this.component;\r\n                    var isPagerMode = \"standard\" === component.option(\"scrolling.mode\") && !gridCoreUtils.isVirtualRowRendering(component);\r\n                    var rowIndex = row.rowIndex + 1;\r\n                    if (isPagerMode) {\r\n                        rowIndex = component.pageIndex() * component.pageSize() + rowIndex\r\n                    } else {\r\n                        rowIndex += this._dataController.getRowIndexOffset()\r\n                    }\r\n                    this.setAria(\"rowindex\", rowIndex, $row)\r\n                },\r\n                _afterRowPrepared: function(e) {\r\n                    var arg = e.args[0];\r\n                    var dataController = this._dataController;\r\n                    var row = dataController.getVisibleRows()[arg.rowIndex];\r\n                    var watch = this.option(\"integrationOptions.watchMethod\");\r\n                    if (!arg.data || \"data\" !== arg.rowType || arg.isNewRow || !this.option(\"twoWayBindingEnabled\") || !watch || !row) {\r\n                        return\r\n                    }\r\n                    var dispose = watch(() => dataController.generateDataValues(arg.data, arg.columns), () => {\r\n                        dataController.repaintRows([row.rowIndex], this.option(\"repaintChangesOnly\"))\r\n                    }, {\r\n                        deep: true,\r\n                        skipImmediate: true\r\n                    });\r\n                    eventsEngine.on(arg.rowElement, removeEvent, dispose)\r\n                },\r\n                _renderScrollable: function(force) {\r\n                    var $element = this.element();\r\n                    if (!$element.children().length) {\r\n                        $element.append(\"<div>\")\r\n                    }\r\n                    if (force || !this._loadPanel) {\r\n                        this._renderLoadPanel($element, $element.parent(), this._dataController.isLocalStore())\r\n                    }\r\n                    if ((force || !this.getScrollable()) && this._dataController.isLoaded()) {\r\n                        var columns = this.getColumns();\r\n                        var allColumnsHasWidth = true;\r\n                        for (var i = 0; i < columns.length; i++) {\r\n                            if (!columns[i].width && !columns[i].minWidth) {\r\n                                allColumnsHasWidth = false;\r\n                                break\r\n                            }\r\n                        }\r\n                        if (this.option(\"columnAutoWidth\") || this._hasHeight || allColumnsHasWidth || this._columnsController._isColumnFixing()) {\r\n                            this._renderScrollableCore($element)\r\n                        }\r\n                    }\r\n                },\r\n                _handleScroll: function(e) {\r\n                    var rtlEnabled = this.option(\"rtlEnabled\");\r\n                    var isNativeScrolling = e.component.option(\"useNative\");\r\n                    this._scrollTop = e.scrollOffset.top;\r\n                    this._scrollLeft = e.scrollOffset.left;\r\n                    var scrollLeft = e.scrollOffset.left;\r\n                    if (rtlEnabled) {\r\n                        this._scrollRight = getMaxHorizontalScrollOffset(e.component) - this._scrollLeft;\r\n                        if (isNativeScrolling) {\r\n                            scrollLeft = -this._scrollRight\r\n                        }\r\n                        if (!this.isScrollbarVisible(true)) {\r\n                            this._scrollLeft = -1\r\n                        }\r\n                    }\r\n                    this.scrollChanged.fire(_extends({}, e.scrollOffset, {\r\n                        left: scrollLeft\r\n                    }), this.name)\r\n                },\r\n                _renderScrollableCore: function($element) {\r\n                    var dxScrollableOptions = this._createScrollableOptions();\r\n                    var scrollHandler = this._handleScroll.bind(this);\r\n                    dxScrollableOptions.onScroll = scrollHandler;\r\n                    this._scrollable = this._createComponent($element, Scrollable, dxScrollableOptions);\r\n                    this._scrollableContainer = this._scrollable && $(this._scrollable.container())\r\n                },\r\n                _renderLoadPanel: gridCoreUtils.renderLoadPanel,\r\n                _renderContent: function(contentElement, tableElement) {\r\n                    contentElement.empty().append(tableElement);\r\n                    return this._findContentElement()\r\n                },\r\n                _updateContent: function(newTableElement, change) {\r\n                    var that = this;\r\n                    var tableElement = that.getTableElement();\r\n                    var contentElement = that._findContentElement();\r\n                    var changeType = change && change.changeType;\r\n                    var executors = [];\r\n                    var highlightChanges = this.option(\"highlightChanges\");\r\n                    var rowInsertedClass = this.addWidgetPrefix(ROW_INSERTED_ANIMATION_CLASS);\r\n                    switch (changeType) {\r\n                        case \"update\":\r\n                            each(change.rowIndices, (function(index, rowIndex) {\r\n                                var $newRowElement = that._getRowElements(newTableElement).eq(index);\r\n                                var changeType = change.changeTypes && change.changeTypes[index];\r\n                                var item = change.items && change.items[index];\r\n                                executors.push((function() {\r\n                                    var $rowsElement = that._getRowElements();\r\n                                    var $rowElement = $rowsElement.eq(rowIndex);\r\n                                    switch (changeType) {\r\n                                        case \"update\":\r\n                                            if (item) {\r\n                                                var columnIndices = change.columnIndices && change.columnIndices[index];\r\n                                                if (isDefined(item.visible) && item.visible !== $rowElement.is(\":visible\")) {\r\n                                                    $rowElement.toggle(item.visible)\r\n                                                } else if (columnIndices) {\r\n                                                    that._updateCells($rowElement, $newRowElement, columnIndices)\r\n                                                } else {\r\n                                                    $rowElement.replaceWith($newRowElement)\r\n                                                }\r\n                                            }\r\n                                            break;\r\n                                        case \"insert\":\r\n                                            if (!$rowsElement.length) {\r\n                                                if (tableElement) {\r\n                                                    var target = $newRowElement.is(\"tbody\") ? tableElement : tableElement.children(\"tbody\");\r\n                                                    $newRowElement.prependTo(target)\r\n                                                }\r\n                                            } else if ($rowElement.length) {\r\n                                                $newRowElement.insertBefore($rowElement)\r\n                                            } else {\r\n                                                $newRowElement.insertAfter($rowsElement.last())\r\n                                            }\r\n                                            if (highlightChanges && change.isLiveUpdate) {\r\n                                                $newRowElement.addClass(rowInsertedClass)\r\n                                            }\r\n                                            break;\r\n                                        case \"remove\":\r\n                                            $rowElement.remove()\r\n                                    }\r\n                                }))\r\n                            }));\r\n                            each(executors, (function() {\r\n                                this()\r\n                            }));\r\n                            newTableElement.remove();\r\n                            break;\r\n                        default:\r\n                            that.setTableElement(newTableElement);\r\n                            contentElement.addClass(that.addWidgetPrefix(CONTENT_CLASS));\r\n                            that._renderContent(contentElement, newTableElement)\r\n                    }\r\n                },\r\n                _createEmptyRow: function(className, isFixed, height) {\r\n                    var $cell;\r\n                    var $row = this._createRow();\r\n                    var columns = isFixed ? this.getFixedColumns() : this.getColumns();\r\n                    $row.addClass(className).toggleClass(COLUMN_LINES_CLASS, this.option(\"showColumnLines\"));\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        $cell = this._createCell({\r\n                            column: columns[i],\r\n                            rowType: \"freeSpace\",\r\n                            columnIndex: i,\r\n                            columns: columns\r\n                        });\r\n                        isNumeric(height) && $cell.css(\"height\", height);\r\n                        $row.append($cell)\r\n                    }\r\n                    this.setAria(\"role\", \"presentation\", $row);\r\n                    return $row\r\n                },\r\n                _appendEmptyRow: function($table, $emptyRow, location) {\r\n                    var $tBodies = this._getBodies($table);\r\n                    var isTableContainer = !$tBodies.length || $emptyRow.is(\"tbody\");\r\n                    var $container = isTableContainer ? $table : $tBodies;\r\n                    if (\"top\" === location) {\r\n                        $container.first().prepend($emptyRow);\r\n                        if (isTableContainer) {\r\n                            var $colgroup = $container.children(\"colgroup\");\r\n                            $container.prepend($colgroup)\r\n                        }\r\n                    } else {\r\n                        $container.last().append($emptyRow)\r\n                    }\r\n                },\r\n                _renderFreeSpaceRow: function($tableElement) {\r\n                    var $freeSpaceRowElement = this._createEmptyRow(FREE_SPACE_CLASS);\r\n                    $freeSpaceRowElement = this._wrapRowIfNeed($tableElement, $freeSpaceRowElement);\r\n                    this._appendEmptyRow($tableElement, $freeSpaceRowElement)\r\n                },\r\n                _checkRowKeys: function(options) {\r\n                    var that = this;\r\n                    var rows = that._getRows(options);\r\n                    var keyExpr = that._dataController.store() && that._dataController.store().key();\r\n                    keyExpr && rows.some((function(row) {\r\n                        if (\"data\" === row.rowType && void 0 === row.key) {\r\n                            that._dataController.fireError(\"E1046\", keyExpr);\r\n                            return true\r\n                        }\r\n                    }))\r\n                },\r\n                _needUpdateRowHeight: function(itemsCount) {\r\n                    return itemsCount > 0 && !this._rowHeight\r\n                },\r\n                _getRowsHeight: function($tableElement) {\r\n                    var $rowElements = $tableElement.children(\"tbody\").children().not(\".dx-virtual-row\").not(\".\" + FREE_SPACE_CLASS);\r\n                    return $rowElements.toArray().reduce((function(sum, row) {\r\n                        return sum + getBoundingRect(row).height\r\n                    }), 0)\r\n                },\r\n                _updateRowHeight: function() {\r\n                    var $tableElement = this.getTableElement();\r\n                    var itemsCount = this._dataController.items().length;\r\n                    if ($tableElement && this._needUpdateRowHeight(itemsCount)) {\r\n                        var rowsHeight = this._getRowsHeight($tableElement);\r\n                        this._rowHeight = rowsHeight / itemsCount\r\n                    }\r\n                },\r\n                _findContentElement: function() {\r\n                    var $content = this.element();\r\n                    var scrollable = this.getScrollable();\r\n                    if ($content) {\r\n                        if (scrollable) {\r\n                            $content = $(scrollable.content())\r\n                        }\r\n                        return $content.children().first()\r\n                    }\r\n                },\r\n                _getRowElements: function(tableElement) {\r\n                    var $rows = this.callBase(tableElement);\r\n                    return $rows && $rows.not(\".\" + FREE_SPACE_CLASS)\r\n                },\r\n                _getFreeSpaceRowElements: function($table) {\r\n                    var tableElements = $table || this.getTableElements();\r\n                    return tableElements && tableElements.children(\"tbody\").children(\".\" + FREE_SPACE_CLASS)\r\n                },\r\n                _getNoDataText: function() {\r\n                    return this.option(\"noDataText\")\r\n                },\r\n                _rowClick: function(e) {\r\n                    var item = this._dataController.items()[e.rowIndex] || {};\r\n                    this.executeAction(\"onRowClick\", extend({\r\n                        evaluate: function(expr) {\r\n                            var getter = compileGetter(expr);\r\n                            return getter(item.data)\r\n                        }\r\n                    }, e, item))\r\n                },\r\n                _rowDblClick: function(e) {\r\n                    var item = this._dataController.items()[e.rowIndex] || {};\r\n                    this.executeAction(\"onRowDblClick\", extend({}, e, item))\r\n                },\r\n                _getColumnsCountBeforeGroups: function(columns) {\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        if (\"groupExpand\" === columns[i].type) {\r\n                            return i\r\n                        }\r\n                    }\r\n                    return 0\r\n                },\r\n                _getGroupCellOptions: function(options) {\r\n                    var columnsCountBeforeGroups = this._getColumnsCountBeforeGroups(options.columns);\r\n                    var columnIndex = (options.row.groupIndex || 0) + columnsCountBeforeGroups;\r\n                    return {\r\n                        columnIndex: columnIndex,\r\n                        colspan: options.columns.length - columnIndex - 1\r\n                    }\r\n                },\r\n                _renderCells: function($row, options) {\r\n                    if (\"group\" === options.row.rowType) {\r\n                        this._renderGroupedCells($row, options)\r\n                    } else if (options.row.values) {\r\n                        this.callBase($row, options)\r\n                    }\r\n                },\r\n                _renderGroupedCells: function($row, options) {\r\n                    var row = options.row;\r\n                    var expandColumn;\r\n                    var columns = options.columns;\r\n                    var rowIndex = row.rowIndex;\r\n                    var isExpanded;\r\n                    var groupCellOptions = this._getGroupCellOptions(options);\r\n                    for (var i = 0; i <= groupCellOptions.columnIndex; i++) {\r\n                        if (i === groupCellOptions.columnIndex && columns[i].allowCollapsing && \"infinite\" !== options.scrollingMode) {\r\n                            isExpanded = !!row.isExpanded;\r\n                            expandColumn = columns[i]\r\n                        } else {\r\n                            isExpanded = null;\r\n                            expandColumn = {\r\n                                command: \"expand\",\r\n                                cssClass: columns[i].cssClass\r\n                            }\r\n                        }\r\n                        if (this._needRenderCell(i, options.columnIndices)) {\r\n                            this._renderCell($row, {\r\n                                value: isExpanded,\r\n                                row: row,\r\n                                rowIndex: rowIndex,\r\n                                column: expandColumn,\r\n                                columnIndex: i,\r\n                                columnIndices: options.columnIndices\r\n                            })\r\n                        }\r\n                    }\r\n                    var groupColumnAlignment = getDefaultAlignment(this.option(\"rtlEnabled\"));\r\n                    var groupColumn = extend({}, columns[groupCellOptions.columnIndex], {\r\n                        command: null,\r\n                        type: null,\r\n                        cssClass: null,\r\n                        width: null,\r\n                        showWhenGrouped: false,\r\n                        alignment: groupColumnAlignment\r\n                    });\r\n                    if (groupCellOptions.colspan > 1) {\r\n                        groupColumn.colspan = groupCellOptions.colspan\r\n                    }\r\n                    if (this._needRenderCell(groupCellOptions.columnIndex + 1, options.columnIndices)) {\r\n                        this._renderCell($row, {\r\n                            value: row.values[row.groupIndex],\r\n                            row: row,\r\n                            rowIndex: rowIndex,\r\n                            column: groupColumn,\r\n                            columnIndex: groupCellOptions.columnIndex + 1,\r\n                            columnIndices: options.columnIndices\r\n                        })\r\n                    }\r\n                },\r\n                _renderRows: function($table, options) {\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    this.callBase($table, extend({\r\n                        scrollingMode: scrollingMode\r\n                    }, options));\r\n                    this._checkRowKeys(options.change);\r\n                    this._renderFreeSpaceRow($table);\r\n                    if (!this._hasHeight) {\r\n                        this.updateFreeSpaceRowHeight($table)\r\n                    }\r\n                },\r\n                _renderDataRowByTemplate($table, options, dataRowTemplate) {\r\n                    var row = options.row;\r\n                    var rowOptions = extend({\r\n                        columns: options.columns\r\n                    }, row);\r\n                    var $tbody = this._createRow(row, \"tbody\");\r\n                    $tbody.appendTo($table);\r\n                    this.renderTemplate($tbody, dataRowTemplate, rowOptions, true, options.change);\r\n                    this._rowPrepared($tbody, rowOptions, options.row)\r\n                },\r\n                _renderRow: function($table, options) {\r\n                    var row = options.row;\r\n                    var rowTemplate = this.option().rowTemplate;\r\n                    var dataRowTemplate = this.option(\"dataRowTemplate\");\r\n                    if (\"data\" === row.rowType && dataRowTemplate) {\r\n                        this._renderDataRowByTemplate($table, options, dataRowTemplate)\r\n                    } else if ((\"data\" === row.rowType || \"group\" === row.rowType) && !isDefined(row.groupIndex) && rowTemplate) {\r\n                        this.renderTemplate($table, rowTemplate, extend({\r\n                            columns: options.columns\r\n                        }, row), true)\r\n                    } else {\r\n                        this.callBase($table, options)\r\n                    }\r\n                },\r\n                _renderTable: function(options) {\r\n                    var that = this;\r\n                    var $table = that.callBase(options);\r\n                    if (!isDefined(that.getTableElement())) {\r\n                        that.setTableElement($table);\r\n                        that._renderScrollable(true);\r\n                        that.resizeCompleted.add((function resizeCompletedHandler() {\r\n                            var scrollableInstance = that.getScrollable();\r\n                            if (scrollableInstance && that.element().closest(getWindow().document).length) {\r\n                                that.resizeCompleted.remove(resizeCompletedHandler);\r\n                                scrollableInstance._visibilityChanged(true)\r\n                            }\r\n                        }))\r\n                    } else {\r\n                        that._renderScrollable()\r\n                    }\r\n                    return $table\r\n                },\r\n                _createTable: function() {\r\n                    var $table = this.callBase.apply(this, arguments);\r\n                    if (this.option().rowTemplate || this.option().dataRowTemplate) {\r\n                        $table.appendTo(this.component.$element())\r\n                    }\r\n                    return $table\r\n                },\r\n                _renderCore: function(change) {\r\n                    var $element = this.element();\r\n                    $element.addClass(this.addWidgetPrefix(ROWS_VIEW_CLASS)).toggleClass(this.addWidgetPrefix(NOWRAP_CLASS), !this.option(\"wordWrapEnabled\"));\r\n                    $element.toggleClass(EMPTY_CLASS, this._dataController.isEmpty());\r\n                    this.setAria(\"role\", \"presentation\", $element);\r\n                    var $table = this._renderTable({\r\n                        change: change\r\n                    });\r\n                    this._updateContent($table, change);\r\n                    this.callBase(change);\r\n                    this._lastColumnWidths = null\r\n                },\r\n                _getRows: function(change) {\r\n                    return change && change.items || this._dataController.items()\r\n                },\r\n                _getCellOptions: function(options) {\r\n                    var column = options.column;\r\n                    var row = options.row;\r\n                    var data = row.data;\r\n                    var summaryCells = row && row.summaryCells;\r\n                    var value = options.value;\r\n                    var displayValue = gridCoreUtils.getDisplayValue(column, value, data, row.rowType);\r\n                    var parameters = this.callBase(options);\r\n                    parameters.value = value;\r\n                    parameters.oldValue = options.oldValue;\r\n                    parameters.displayValue = displayValue;\r\n                    parameters.row = row;\r\n                    parameters.key = row.key;\r\n                    parameters.data = data;\r\n                    parameters.rowType = row.rowType;\r\n                    parameters.values = row.values;\r\n                    parameters.text = !column.command ? gridCoreUtils.formatValue(displayValue, column) : \"\";\r\n                    parameters.rowIndex = row.rowIndex;\r\n                    parameters.summaryItems = summaryCells && summaryCells[options.columnIndex];\r\n                    parameters.resized = column.resizedCallbacks;\r\n                    if (isDefined(column.groupIndex) && !column.command) {\r\n                        var groupingTextsOptions = this.option(\"grouping.texts\");\r\n                        var scrollingMode = this.option(\"scrolling.mode\");\r\n                        if (\"virtual\" !== scrollingMode && \"infinite\" !== scrollingMode) {\r\n                            parameters.groupContinuesMessage = data && data.isContinuationOnNextPage && groupingTextsOptions && groupingTextsOptions.groupContinuesMessage;\r\n                            parameters.groupContinuedMessage = data && data.isContinuation && groupingTextsOptions && groupingTextsOptions.groupContinuedMessage\r\n                        }\r\n                    }\r\n                    return parameters\r\n                },\r\n                _setRowsOpacityCore: function($rows, visibleColumns, columnIndex, value) {\r\n                    var columnsController = this._columnsController;\r\n                    var columns = columnsController.getColumns();\r\n                    var column = columns && columns[columnIndex];\r\n                    var columnID = column && column.isBand && column.index;\r\n                    each($rows, (function(rowIndex, row) {\r\n                        if (!$(row).hasClass(GROUP_ROW_CLASS)) {\r\n                            for (var i = 0; i < visibleColumns.length; i++) {\r\n                                if (isNumeric(columnID) && columnsController.isParentBandColumn(visibleColumns[i].index, columnID) || visibleColumns[i].index === columnIndex) {\r\n                                    $rows.eq(rowIndex).children().eq(i).css({\r\n                                        opacity: value\r\n                                    });\r\n                                    if (!isNumeric(columnID)) {\r\n                                        break\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }))\r\n                },\r\n                _getDevicePixelRatio: function() {\r\n                    return getWindow().devicePixelRatio\r\n                },\r\n                renderNoDataText: gridCoreUtils.renderNoDataText,\r\n                getCellOptions: function(rowIndex, columnIdentifier) {\r\n                    var rowOptions = this._dataController.items()[rowIndex];\r\n                    var cellOptions;\r\n                    var column;\r\n                    if (rowOptions) {\r\n                        if (isString(columnIdentifier)) {\r\n                            column = this._columnsController.columnOption(columnIdentifier)\r\n                        } else {\r\n                            column = this._columnsController.getVisibleColumns()[columnIdentifier]\r\n                        }\r\n                        if (column) {\r\n                            cellOptions = this._getCellOptions({\r\n                                value: column.calculateCellValue(rowOptions.data),\r\n                                rowIndex: rowOptions.rowIndex,\r\n                                row: rowOptions,\r\n                                column: column\r\n                            })\r\n                        }\r\n                    }\r\n                    return cellOptions\r\n                },\r\n                getRow: function(index) {\r\n                    if (index >= 0) {\r\n                        var rows = this._getRowElements();\r\n                        if (rows.length > index) {\r\n                            return $(rows[index])\r\n                        }\r\n                    }\r\n                },\r\n                updateFreeSpaceRowHeight: function($table) {\r\n                    var dataController = this._dataController;\r\n                    var itemCount = dataController.items(true).length;\r\n                    var contentElement = this._findContentElement();\r\n                    var freeSpaceRowElements = this._getFreeSpaceRowElements($table);\r\n                    if (freeSpaceRowElements && contentElement && dataController.totalCount() >= 0) {\r\n                        var isFreeSpaceRowVisible = false;\r\n                        if (itemCount > 0) {\r\n                            if (!this._hasHeight) {\r\n                                var freeSpaceRowCount = dataController.pageSize() - itemCount;\r\n                                var scrollingMode = this.option(\"scrolling.mode\");\r\n                                if (freeSpaceRowCount > 0 && dataController.pageCount() > 1 && \"virtual\" !== scrollingMode && \"infinite\" !== scrollingMode) {\r\n                                    setHeight(freeSpaceRowElements, freeSpaceRowCount * this._rowHeight);\r\n                                    isFreeSpaceRowVisible = true\r\n                                }\r\n                                if (!isFreeSpaceRowVisible && $table) {\r\n                                    setHeight(freeSpaceRowElements, 0)\r\n                                } else {\r\n                                    freeSpaceRowElements.toggle(isFreeSpaceRowVisible)\r\n                                }\r\n                                this._updateLastRowBorder(isFreeSpaceRowVisible)\r\n                            } else {\r\n                                freeSpaceRowElements.hide();\r\n                                deferUpdate(() => {\r\n                                    var scrollbarWidth = this.getScrollbarWidth(true);\r\n                                    var elementHeightWithoutScrollbar = getHeight(this.element()) - scrollbarWidth;\r\n                                    var contentHeight = getOuterHeight(contentElement);\r\n                                    var showFreeSpaceRow = elementHeightWithoutScrollbar - contentHeight > 0;\r\n                                    var rowsHeight = this._getRowsHeight(contentElement.children().first());\r\n                                    var $tableElement = $table || this.getTableElements();\r\n                                    var borderTopWidth = Math.ceil(parseFloat($tableElement.css(\"borderTopWidth\")));\r\n                                    var heightCorrection = this._getHeightCorrection();\r\n                                    var resultHeight = elementHeightWithoutScrollbar - rowsHeight - borderTopWidth - heightCorrection;\r\n                                    if (showFreeSpaceRow) {\r\n                                        deferRender(() => {\r\n                                            freeSpaceRowElements.css(\"height\", resultHeight);\r\n                                            isFreeSpaceRowVisible = true;\r\n                                            freeSpaceRowElements.show()\r\n                                        })\r\n                                    }\r\n                                    deferRender(() => this._updateLastRowBorder(isFreeSpaceRowVisible))\r\n                                })\r\n                            }\r\n                        } else {\r\n                            freeSpaceRowElements.css(\"height\", 0);\r\n                            freeSpaceRowElements.show();\r\n                            this._updateLastRowBorder(true)\r\n                        }\r\n                    }\r\n                },\r\n                _getHeightCorrection: function() {\r\n                    var isZoomedWebkit = browser.webkit && this._getDevicePixelRatio() >= 2;\r\n                    var isChromeLatest = browser.chrome && browser.version >= 91;\r\n                    var hasExtraBorderTop = browser.mozilla && browser.version >= 70 && !this.option(\"showRowLines\");\r\n                    return isZoomedWebkit || hasExtraBorderTop || isChromeLatest ? 1 : 0\r\n                },\r\n                _columnOptionChanged: function(e) {\r\n                    var optionNames = e.optionNames;\r\n                    if (e.changeTypes.grouping) {\r\n                        return\r\n                    }\r\n                    if (optionNames.width || optionNames.visibleWidth) {\r\n                        this.callBase(e);\r\n                        this._fireColumnResizedCallbacks()\r\n                    }\r\n                },\r\n                getScrollable: function() {\r\n                    return this._scrollable\r\n                },\r\n                init: function() {\r\n                    var that = this;\r\n                    var dataController = that.getController(\"data\");\r\n                    that.callBase();\r\n                    that._editorFactoryController = that.getController(\"editorFactory\");\r\n                    that._rowHeight = 0;\r\n                    that._scrollTop = 0;\r\n                    that._scrollLeft = -1;\r\n                    that._scrollRight = 0;\r\n                    that._hasHeight = false;\r\n                    dataController.loadingChanged.add((function(isLoading, messageText) {\r\n                        that.setLoading(isLoading, messageText)\r\n                    }));\r\n                    dataController.dataSourceChanged.add((function() {\r\n                        if (that._scrollLeft >= 0) {\r\n                            that._handleScroll({\r\n                                component: that.getScrollable(),\r\n                                scrollOffset: {\r\n                                    top: that._scrollTop,\r\n                                    left: that._scrollLeft\r\n                                }\r\n                            })\r\n                        }\r\n                    }))\r\n                },\r\n                _handleDataChanged: function(change) {\r\n                    switch (change.changeType) {\r\n                        case \"refresh\":\r\n                        case \"prepend\":\r\n                        case \"append\":\r\n                        case \"update\":\r\n                            this.render(null, change);\r\n                            break;\r\n                        default:\r\n                            this._update(change)\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    return [\"isScrollbarVisible\", \"getTopVisibleRowData\", \"getScrollbarWidth\", \"getCellElement\", \"getRowElement\", \"getScrollable\"]\r\n                },\r\n                contentWidth: function() {\r\n                    return getWidth(this.element()) - this.getScrollbarWidth()\r\n                },\r\n                getScrollbarWidth: function(isHorizontal) {\r\n                    var scrollableContainer = this._scrollableContainer && this._scrollableContainer.get(0);\r\n                    var scrollbarWidth = 0;\r\n                    if (scrollableContainer) {\r\n                        if (!isHorizontal) {\r\n                            scrollbarWidth = scrollableContainer.clientWidth ? scrollableContainer.offsetWidth - scrollableContainer.clientWidth : 0\r\n                        } else {\r\n                            scrollbarWidth = scrollableContainer.clientHeight ? scrollableContainer.offsetHeight - scrollableContainer.clientHeight : 0;\r\n                            scrollbarWidth += (that = this, scrollable = that.getScrollable(), scrollable ? Math.ceil(parseFloat($(scrollable.content()).css(\"paddingBottom\"))) : 0)\r\n                        }\r\n                    }\r\n                    var that, scrollable;\r\n                    return scrollbarWidth > 0 ? scrollbarWidth : 0\r\n                },\r\n                _fireColumnResizedCallbacks: function() {\r\n                    var lastColumnWidths = this._lastColumnWidths || [];\r\n                    var columnWidths = [];\r\n                    var columns = this.getColumns();\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        columnWidths[i] = columns[i].visibleWidth;\r\n                        if (columns[i].resizedCallbacks && !isDefined(columns[i].groupIndex) && lastColumnWidths[i] !== columnWidths[i]) {\r\n                            columns[i].resizedCallbacks.fire(columnWidths[i])\r\n                        }\r\n                    }\r\n                    this._lastColumnWidths = columnWidths\r\n                },\r\n                _updateLastRowBorder: function(isFreeSpaceRowVisible) {\r\n                    if (this.option(\"showBorders\") && this.option(\"showRowLines\") && !isFreeSpaceRowVisible) {\r\n                        this.element().addClass(LAST_ROW_BORDER)\r\n                    } else {\r\n                        this.element().removeClass(LAST_ROW_BORDER)\r\n                    }\r\n                },\r\n                _updateScrollable: function() {\r\n                    var dxScrollable = Scrollable.getInstance(this.element());\r\n                    if (dxScrollable) {\r\n                        dxScrollable.update();\r\n                        this._updateHorizontalScrollPosition()\r\n                    }\r\n                },\r\n                _updateHorizontalScrollPosition: function() {\r\n                    var scrollable = this.getScrollable();\r\n                    var scrollLeft = scrollable && scrollable.scrollOffset().left;\r\n                    var rtlEnabled = this.option(\"rtlEnabled\");\r\n                    if (rtlEnabled) {\r\n                        var maxHorizontalScrollOffset = getMaxHorizontalScrollOffset(scrollable);\r\n                        var scrollRight = maxHorizontalScrollOffset - scrollLeft;\r\n                        if (scrollRight !== this._scrollRight) {\r\n                            this._scrollLeft = maxHorizontalScrollOffset - this._scrollRight\r\n                        }\r\n                    }\r\n                    if (this._scrollLeft >= 0 && scrollLeft !== this._scrollLeft) {\r\n                        scrollable.scrollTo({\r\n                            x: this._scrollLeft\r\n                        })\r\n                    }\r\n                },\r\n                _resizeCore: function() {\r\n                    var that = this;\r\n                    that._fireColumnResizedCallbacks();\r\n                    that._updateRowHeight();\r\n                    deferRender((function() {\r\n                        that._renderScrollable();\r\n                        that.renderNoDataText();\r\n                        that.updateFreeSpaceRowHeight();\r\n                        deferUpdate((function() {\r\n                            that._updateScrollable()\r\n                        }))\r\n                    }))\r\n                },\r\n                scrollTo: function(location) {\r\n                    var $element = this.element();\r\n                    var dxScrollable = $element && Scrollable.getInstance($element);\r\n                    if (dxScrollable) {\r\n                        dxScrollable.scrollTo(location)\r\n                    }\r\n                },\r\n                height: function(_height, hasHeight) {\r\n                    var that = this;\r\n                    var $element = this.element();\r\n                    if (0 === arguments.length) {\r\n                        return $element ? getOuterHeight($element, true) : 0\r\n                    }\r\n                    that._hasHeight = void 0 === hasHeight ? \"auto\" !== _height : hasHeight;\r\n                    if (isDefined(_height) && $element) {\r\n                        setHeight($element, _height)\r\n                    }\r\n                },\r\n                setLoading: function(isLoading, messageText) {\r\n                    var loadPanel = this._loadPanel;\r\n                    var dataController = this._dataController;\r\n                    var loadPanelOptions = this.option(\"loadPanel\") || {};\r\n                    var animation = dataController.isLoaded() ? loadPanelOptions.animation : null;\r\n                    var $element = this.element();\r\n                    if (!hasWindow()) {\r\n                        return\r\n                    }\r\n                    if (!loadPanel && void 0 !== messageText && dataController.isLocalStore() && \"auto\" === loadPanelOptions.enabled && $element) {\r\n                        this._renderLoadPanel($element, $element.parent());\r\n                        loadPanel = this._loadPanel\r\n                    }\r\n                    if (loadPanel) {\r\n                        var visibilityOptions = {\r\n                            message: messageText || loadPanelOptions.text,\r\n                            animation: animation,\r\n                            visible: isLoading\r\n                        };\r\n                        if (isLoading) {\r\n                            visibilityOptions.position = gridCoreUtils.calculateLoadPanelPosition($element)\r\n                        }\r\n                        clearTimeout(this._hideLoadingTimeoutID);\r\n                        if (loadPanel.option(\"visible\") && !isLoading) {\r\n                            this._hideLoadingTimeoutID = setTimeout((function() {\r\n                                loadPanel.option(visibilityOptions)\r\n                            }), LOADPANEL_HIDE_TIMEOUT)\r\n                        } else {\r\n                            loadPanel.option(visibilityOptions)\r\n                        }\r\n                    }\r\n                },\r\n                setRowsOpacity: function(columnIndex, value) {\r\n                    var $rows = this._getRowElements().not(\".\" + GROUP_ROW_CLASS) || [];\r\n                    this._setRowsOpacityCore($rows, this.getColumns(), columnIndex, value)\r\n                },\r\n                _getCellElementsCore: function(rowIndex) {\r\n                    var $cells = this.callBase.apply(this, arguments);\r\n                    if ($cells) {\r\n                        var groupCellIndex = $cells.filter(\".\" + GROUP_CELL_CLASS).index();\r\n                        if (groupCellIndex >= 0 && $cells.length > groupCellIndex + 1) {\r\n                            return $cells.slice(0, groupCellIndex + 1)\r\n                        }\r\n                    }\r\n                    return $cells\r\n                },\r\n                _getBoundaryVisibleItemIndex: function(isTop, isFloor) {\r\n                    var itemIndex = 0;\r\n                    var prevOffset = 0;\r\n                    var offset = 0;\r\n                    var viewportBoundary = this._scrollTop;\r\n                    var $contentElement = this._findContentElement();\r\n                    var contentElementOffsetTop = $contentElement && $contentElement.offset().top;\r\n                    var dataController = this.getController(\"data\");\r\n                    var items = dataController.items();\r\n                    var tableElement = this.getTableElement();\r\n                    if (items.length && tableElement) {\r\n                        var rowElements = this._getRowElements(tableElement).filter(\":visible\");\r\n                        if (!isTop) {\r\n                            var height = this._hasHeight ? getOuterHeight(this.element()) : $(getWindow()).outerHeight();\r\n                            viewportBoundary += height\r\n                        }\r\n                        for (itemIndex = 0; itemIndex < items.length; itemIndex++) {\r\n                            prevOffset = offset;\r\n                            var $rowElement = $(rowElements).eq(itemIndex);\r\n                            if ($rowElement.length) {\r\n                                offset = $rowElement.offset();\r\n                                offset = (isTop ? offset.top : offset.top + getOuterHeight($rowElement)) - contentElementOffsetTop;\r\n                                if (offset > viewportBoundary) {\r\n                                    if (itemIndex) {\r\n                                        if (isFloor || 2 * viewportBoundary < Math.round(offset + prevOffset)) {\r\n                                            itemIndex--\r\n                                        }\r\n                                    }\r\n                                    break\r\n                                }\r\n                            }\r\n                        }\r\n                        if (itemIndex && itemIndex === items.length) {\r\n                            itemIndex--\r\n                        }\r\n                    }\r\n                    return itemIndex\r\n                },\r\n                getTopVisibleItemIndex: function(isFloor) {\r\n                    return this._getBoundaryVisibleItemIndex(true, isFloor)\r\n                },\r\n                getBottomVisibleItemIndex: function(isFloor) {\r\n                    return this._getBoundaryVisibleItemIndex(false, isFloor)\r\n                },\r\n                getTopVisibleRowData: function() {\r\n                    var itemIndex = this.getTopVisibleItemIndex();\r\n                    var items = this._dataController.items();\r\n                    if (items[itemIndex]) {\r\n                        return items[itemIndex].data\r\n                    }\r\n                },\r\n                _scrollToElement: function($element, offset) {\r\n                    var scrollable = this.getScrollable();\r\n                    scrollable && scrollable.scrollToElement($element, offset)\r\n                },\r\n                optionChanged: function(args) {\r\n                    this.callBase(args);\r\n                    switch (args.name) {\r\n                        case \"wordWrapEnabled\":\r\n                        case \"showColumnLines\":\r\n                        case \"showRowLines\":\r\n                        case \"rowAlternationEnabled\":\r\n                        case \"rowTemplate\":\r\n                        case \"dataRowTemplate\":\r\n                        case \"twoWayBindingEnabled\":\r\n                            this._invalidate(true, true);\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"scrolling\":\r\n                            this._rowHeight = null;\r\n                            this._tableElement = null;\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"rtlEnabled\":\r\n                            this._rowHeight = null;\r\n                            this._tableElement = null;\r\n                            break;\r\n                        case \"loadPanel\":\r\n                            this._tableElement = null;\r\n                            this._invalidate(true, \"loadPanel.enabled\" !== args.fullName);\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"noDataText\":\r\n                            this.renderNoDataText();\r\n                            args.handled = true\r\n                    }\r\n                },\r\n                dispose: function() {\r\n                    clearTimeout(this._hideLoadingTimeoutID);\r\n                    this._scrollable && this._scrollable.dispose()\r\n                },\r\n                setScrollerSpacing: function() {},\r\n                _restoreErrorRow: function() {}\r\n            }\r\n        }())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.rows.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    rowsModule\r\n} from \"../grid_core/ui.grid_core.rows\";\r\nexport var RowsView = rowsModule.views.rowsView;\r\ngridCore.registerModule(\"rows\", rowsModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.context_menu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport ContextMenu from \"../context_menu\";\r\nvar CONTEXT_MENU = \"dx-context-menu\";\r\nvar viewName = {\r\n    columnHeadersView: \"header\",\r\n    rowsView: \"content\",\r\n    footerView: \"footer\",\r\n    headerPanel: \"headerPanel\"\r\n};\r\nvar VIEW_NAMES = [\"columnHeadersView\", \"rowsView\", \"footerView\", \"headerPanel\"];\r\nvar ContextMenuController = modules.ViewController.inherit({\r\n    init: function() {\r\n        this.createAction(\"onContextMenuPreparing\")\r\n    },\r\n    getContextMenuItems: function(dxEvent) {\r\n        if (!dxEvent) {\r\n            return false\r\n        }\r\n        var that = this;\r\n        var $targetElement = $(dxEvent.target);\r\n        var $element;\r\n        var $targetRowElement;\r\n        var $targetCellElement;\r\n        var menuItems;\r\n        each(VIEW_NAMES, (function() {\r\n            var view = that.getView(this);\r\n            $element = view && view.element();\r\n            if ($element && ($element.is($targetElement) || $element.find($targetElement).length)) {\r\n                var _rowOptions$cells;\r\n                $targetCellElement = $targetElement.closest(\".dx-row > td, .dx-row > tr\");\r\n                $targetRowElement = $targetCellElement.parent();\r\n                var rowIndex = view.getRowIndex($targetRowElement);\r\n                var columnIndex = $targetCellElement[0] && $targetCellElement[0].cellIndex;\r\n                var rowOptions = $targetRowElement.data(\"options\");\r\n                var options = {\r\n                    event: dxEvent,\r\n                    targetElement: getPublicElement($targetElement),\r\n                    target: viewName[this],\r\n                    rowIndex: rowIndex,\r\n                    row: view._getRows()[rowIndex],\r\n                    columnIndex: columnIndex,\r\n                    column: null === rowOptions || void 0 === rowOptions ? void 0 : null === (_rowOptions$cells = rowOptions.cells) || void 0 === _rowOptions$cells ? void 0 : _rowOptions$cells[columnIndex].column\r\n                };\r\n                options.items = view.getContextMenuItems && view.getContextMenuItems(options);\r\n                that.executeAction(\"onContextMenuPreparing\", options);\r\n                that._contextMenuPrepared(options);\r\n                menuItems = options.items;\r\n                if (menuItems) {\r\n                    return false\r\n                }\r\n            }\r\n        }));\r\n        return menuItems\r\n    },\r\n    _contextMenuPrepared: noop\r\n});\r\nvar ContextMenuView = modules.View.inherit({\r\n    _renderCore: function() {\r\n        var that = this;\r\n        var $element = that.element().addClass(CONTEXT_MENU);\r\n        this.setAria(\"role\", \"presentation\", $element);\r\n        this._createComponent($element, ContextMenu, {\r\n            onPositioning: function(actionArgs) {\r\n                var event = actionArgs.event;\r\n                var contextMenuInstance = actionArgs.component;\r\n                var items = that.getController(\"contextMenu\").getContextMenuItems(event);\r\n                if (items) {\r\n                    contextMenuInstance.option(\"items\", items);\r\n                    event.stopPropagation()\r\n                } else {\r\n                    actionArgs.cancel = true\r\n                }\r\n            },\r\n            onItemClick: function(params) {\r\n                params.itemData.onItemClick && params.itemData.onItemClick(params)\r\n            },\r\n            cssClass: that.getWidgetContainerClass(),\r\n            target: that.component.$element()\r\n        })\r\n    }\r\n});\r\nexport var contextMenuModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            onContextMenuPreparing: null\r\n        }\r\n    },\r\n    controllers: {\r\n        contextMenu: ContextMenuController\r\n    },\r\n    views: {\r\n        contextMenuView: ContextMenuView\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.context_menu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport treeListCore from \"./ui.data_grid.core\";\r\nimport {\r\n    contextMenuModule\r\n} from \"../grid_core/ui.grid_core.context_menu\";\r\ntreeListCore.registerModule(\"contextMenu\", contextMenuModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.error_handling.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nvar ERROR_ROW_CLASS = \"dx-error-row\";\r\nvar ERROR_MESSAGE_CLASS = \"dx-error-message\";\r\nvar ERROR_CLOSEBUTTON_CLASS = \"dx-closebutton\";\r\nvar ACTION_CLASS = \"action\";\r\nvar ErrorHandlingController = modules.ViewController.inherit({\r\n    init: function() {\r\n        this._columnHeadersView = this.getView(\"columnHeadersView\");\r\n        this._rowsView = this.getView(\"rowsView\")\r\n    },\r\n    _createErrorRow: function(error, $tableElements) {\r\n        var that = this;\r\n        var $errorRow;\r\n        var $closeButton;\r\n        var $errorMessage = this._renderErrorMessage(error);\r\n        if ($tableElements) {\r\n            $errorRow = $(\"<tr>\").addClass(ERROR_ROW_CLASS);\r\n            $closeButton = $(\"<div>\").addClass(ERROR_CLOSEBUTTON_CLASS).addClass(that.addWidgetPrefix(ACTION_CLASS));\r\n            eventsEngine.on($closeButton, clickEventName, that.createAction((function(args) {\r\n                var e = args.event;\r\n                var $errorRow;\r\n                var errorRowIndex = $(e.currentTarget).closest(\".\" + ERROR_ROW_CLASS).index();\r\n                e.stopPropagation();\r\n                each($tableElements, (function(_, tableElement) {\r\n                    $errorRow = $(tableElement).children(\"tbody\").children(\"tr\").eq(errorRowIndex);\r\n                    that.removeErrorRow($errorRow)\r\n                }));\r\n                that.getController(\"resizing\") && that.getController(\"resizing\").fireContentReadyAction()\r\n            })));\r\n            $(\"<td>\").attr({\r\n                colSpan: that.getController(\"columns\").getVisibleColumns().length,\r\n                role: \"presentation\"\r\n            }).prepend($closeButton).append($errorMessage).appendTo($errorRow);\r\n            return $errorRow\r\n        }\r\n        return $errorMessage\r\n    },\r\n    _renderErrorMessage: function(error) {\r\n        var message = error.url ? error.message.replace(error.url, \"\") : error.message || error;\r\n        var $message = $(\"<div>\").addClass(ERROR_MESSAGE_CLASS).text(message);\r\n        if (error.url) {\r\n            $(\"<a>\").attr(\"href\", error.url).text(error.url).appendTo($message)\r\n        }\r\n        return $message\r\n    },\r\n    renderErrorRow: function(error, rowIndex, $popupContent) {\r\n        var that = this;\r\n        var $errorMessageElement;\r\n        var $firstErrorRow;\r\n        if ($popupContent) {\r\n            $popupContent.find(\".\" + ERROR_MESSAGE_CLASS).remove();\r\n            $errorMessageElement = that._createErrorRow(error);\r\n            $popupContent.prepend($errorMessageElement);\r\n            return $errorMessageElement\r\n        }\r\n        var viewElement = rowIndex >= 0 || !that._columnHeadersView.isVisible() ? that._rowsView : that._columnHeadersView;\r\n        var $tableElements = viewElement.getTableElements();\r\n        each($tableElements, (function(_, tableElement) {\r\n            $errorMessageElement = that._createErrorRow(error, $tableElements);\r\n            $firstErrorRow = $firstErrorRow || $errorMessageElement;\r\n            if (rowIndex >= 0) {\r\n                var $row = viewElement._getRowElements($(tableElement)).eq(rowIndex);\r\n                that.removeErrorRow($row.next());\r\n                $errorMessageElement.insertAfter($row)\r\n            } else {\r\n                var $tbody = $(tableElement).children(\"tbody\");\r\n                var rowElements = $tbody.children(\"tr\");\r\n                if (that._columnHeadersView.isVisible()) {\r\n                    that.removeErrorRow(rowElements.last());\r\n                    $(tableElement).append($errorMessageElement)\r\n                } else {\r\n                    that.removeErrorRow(rowElements.first());\r\n                    $tbody.first().prepend($errorMessageElement)\r\n                }\r\n            }\r\n        }));\r\n        var resizingController = that.getController(\"resizing\");\r\n        resizingController && resizingController.fireContentReadyAction();\r\n        return $firstErrorRow\r\n    },\r\n    removeErrorRow: function($row) {\r\n        if (!$row) {\r\n            var $columnHeaders = this._columnHeadersView && this._columnHeadersView.element();\r\n            $row = $columnHeaders && $columnHeaders.find(\".\" + ERROR_ROW_CLASS);\r\n            if (!$row || !$row.length) {\r\n                var $rowsViewElement = this._rowsView.element();\r\n                $row = $rowsViewElement && $rowsViewElement.find(\".\" + ERROR_ROW_CLASS)\r\n            }\r\n        }\r\n        $row && $row.hasClass(ERROR_ROW_CLASS) && $row.remove()\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"errorRowEnabled\":\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nexport var errorHandlingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            errorRowEnabled: true\r\n        }\r\n    },\r\n    controllers: {\r\n        errorHandling: ErrorHandlingController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                init: function() {\r\n                    var that = this;\r\n                    var errorHandlingController = that.getController(\"errorHandling\");\r\n                    that.callBase();\r\n                    that.dataErrorOccurred.add((function(error, $popupContent) {\r\n                        if (that.option(\"errorRowEnabled\")) {\r\n                            errorHandlingController.renderErrorRow(error, void 0, $popupContent)\r\n                        }\r\n                    }));\r\n                    that.changed.add((function(e) {\r\n                        if (e && \"loadError\" === e.changeType) {\r\n                            return\r\n                        }\r\n                        var errorHandlingController = that.getController(\"errorHandling\");\r\n                        var editingController = that.getController(\"editing\");\r\n                        if (editingController && !editingController.hasChanges()) {\r\n                            errorHandlingController && errorHandlingController.removeErrorRow()\r\n                        }\r\n                    }))\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.error_handling.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    errorHandlingModule\r\n} from \"../grid_core/ui.grid_core.error_handling\";\r\ngridCore.registerModule(\"errorHandling\", errorHandlingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.grid_view.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getInnerWidth,\r\n    getWidth,\r\n    getHeight,\r\n    setHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    deferRender,\r\n    deferUpdate\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    hasWindow,\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isString,\r\n    isDefined,\r\n    isNumeric\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport * as accessibility from \"../shared/accessibility\";\r\nimport browser from \"../../core/utils/browser\";\r\nvar BORDERS_CLASS = \"borders\";\r\nvar TABLE_FIXED_CLASS = \"table-fixed\";\r\nvar IMPORTANT_MARGIN_CLASS = \"important-margin\";\r\nvar GRIDBASE_CONTAINER_CLASS = \"dx-gridbase-container\";\r\nvar HIDDEN_COLUMNS_WIDTH = \"adaptiveHidden\";\r\nvar VIEW_NAMES = [\"columnsSeparatorView\", \"blockSeparatorView\", \"trackerView\", \"headerPanel\", \"columnHeadersView\", \"rowsView\", \"footerView\", \"columnChooserView\", \"filterPanelView\", \"pagerView\", \"draggingHeaderView\", \"contextMenuView\", \"errorView\", \"headerFilterView\", \"filterBuilderView\"];\r\nvar isPercentWidth = function(width) {\r\n    return isString(width) && \"%\" === width.slice(-1)\r\n};\r\nvar isPixelWidth = function(width) {\r\n    return isString(width) && \"px\" === width.slice(-2)\r\n};\r\nvar getContainerHeight = function($container) {\r\n    var clientHeight = $container.get(0).clientHeight;\r\n    var paddingTop = parseFloat($container.css(\"paddingTop\"));\r\n    var paddingBottom = parseFloat($container.css(\"paddingBottom\"));\r\n    return clientHeight - paddingTop - paddingBottom\r\n};\r\nvar calculateFreeWidth = function(that, widths) {\r\n    var contentWidth = that._rowsView.contentWidth();\r\n    var totalWidth = that._getTotalWidth(widths, contentWidth);\r\n    return contentWidth - totalWidth\r\n};\r\nvar calculateFreeWidthWithCurrentMinWidth = function(that, columnIndex, currentMinWidth, widths) {\r\n    return calculateFreeWidth(that, widths.map((function(width, index) {\r\n        return index === columnIndex ? currentMinWidth : width\r\n    })))\r\n};\r\nvar restoreFocus = function(focusedElement, selectionRange) {\r\n    accessibility.hiddenFocus(focusedElement);\r\n    gridCoreUtils.setSelectionRange(focusedElement, selectionRange)\r\n};\r\nvar ResizingController = modules.ViewController.inherit({\r\n    _initPostRenderHandlers: function() {\r\n        var dataController = this._dataController;\r\n        if (!this._refreshSizesHandler) {\r\n            this._refreshSizesHandler = e => {\r\n                dataController.changed.remove(this._refreshSizesHandler);\r\n                var templateDeferreds = e && e.templateDeferreds || [];\r\n                when.apply(this, templateDeferreds).done(() => {\r\n                    this._refreshSizes(e)\r\n                })\r\n            };\r\n            dataController.changed.add(() => {\r\n                dataController.changed.add(this._refreshSizesHandler)\r\n            })\r\n        }\r\n    },\r\n    _refreshSizes: function(e) {\r\n        var resizeDeferred;\r\n        var that = this;\r\n        var changeType = e && e.changeType;\r\n        var isDelayed = e && e.isDelayed;\r\n        var items = that._dataController.items();\r\n        if (!e || \"refresh\" === changeType || \"prepend\" === changeType || \"append\" === changeType) {\r\n            if (!isDelayed) {\r\n                resizeDeferred = that.resize()\r\n            }\r\n        } else if (\"update\" === changeType) {\r\n            var _e$changeTypes;\r\n            if (0 === (null === (_e$changeTypes = e.changeTypes) || void 0 === _e$changeTypes ? void 0 : _e$changeTypes.length)) {\r\n                return\r\n            }\r\n            if ((items.length > 1 || \"insert\" !== e.changeTypes[0]) && !(0 === items.length && \"remove\" === e.changeTypes[0]) && !e.needUpdateDimensions) {\r\n                deferUpdate(() => deferRender(() => deferUpdate(() => {\r\n                    that._setScrollerSpacing(that._hasHeight);\r\n                    that._rowsView.resize()\r\n                })))\r\n            } else {\r\n                resizeDeferred = that.resize()\r\n            }\r\n        }\r\n        if (changeType && \"updateSelection\" !== changeType && \"updateFocusedRow\" !== changeType && \"pageIndex\" !== changeType && !isDelayed) {\r\n            when(resizeDeferred).done((function() {\r\n                that._setAriaRowColCount();\r\n                that.fireContentReadyAction()\r\n            }))\r\n        }\r\n    },\r\n    fireContentReadyAction: function() {\r\n        this.component._fireContentReadyAction()\r\n    },\r\n    _setAriaRowColCount: function() {\r\n        var component = this.component;\r\n        component.setAria({\r\n            rowCount: this._dataController.totalItemsCount(),\r\n            colCount: component.columnCount()\r\n        }, component.$element().children(\".\" + GRIDBASE_CONTAINER_CLASS))\r\n    },\r\n    _getBestFitWidths: function() {\r\n        var _widths;\r\n        var rowsView = this._rowsView;\r\n        var columnHeadersView = this._columnHeadersView;\r\n        var widths = rowsView.getColumnWidths();\r\n        if (!(null !== (_widths = widths) && void 0 !== _widths && _widths.length)) {\r\n            var _rowsView$getTableEle;\r\n            var headersTableElement = columnHeadersView.getTableElement();\r\n            columnHeadersView.setTableElement(null === (_rowsView$getTableEle = rowsView.getTableElement()) || void 0 === _rowsView$getTableEle ? void 0 : _rowsView$getTableEle.children(\".dx-header\"));\r\n            widths = columnHeadersView.getColumnWidths();\r\n            columnHeadersView.setTableElement(headersTableElement)\r\n        }\r\n        return widths\r\n    },\r\n    _setVisibleWidths: function(visibleColumns, widths) {\r\n        var columnsController = this._columnsController;\r\n        columnsController.beginUpdate();\r\n        each(visibleColumns, (function(index, column) {\r\n            var columnId = columnsController.getColumnId(column);\r\n            columnsController.columnOption(columnId, \"visibleWidth\", widths[index])\r\n        }));\r\n        columnsController.endUpdate()\r\n    },\r\n    _toggleBestFitModeForView: function(view, className, isBestFit) {\r\n        if (!view || !view.isVisible()) {\r\n            return\r\n        }\r\n        var $rowsTables = this._rowsView.getTableElements();\r\n        var $viewTables = view.getTableElements();\r\n        each($rowsTables, (index, tableElement) => {\r\n            var $tableBody;\r\n            var $rowsTable = $(tableElement);\r\n            var $viewTable = $viewTables.eq(index);\r\n            if ($viewTable && $viewTable.length) {\r\n                if (isBestFit) {\r\n                    $tableBody = $viewTable.children(\"tbody\").appendTo($rowsTable)\r\n                } else {\r\n                    $tableBody = $rowsTable.children(\".\" + className).appendTo($viewTable)\r\n                }\r\n                $tableBody.toggleClass(className, isBestFit);\r\n                $tableBody.toggleClass(this.addWidgetPrefix(\"best-fit\"), isBestFit)\r\n            }\r\n        })\r\n    },\r\n    _toggleBestFitMode: function(isBestFit) {\r\n        var $rowsTable = this._rowsView.getTableElement();\r\n        var $rowsFixedTable = this._rowsView.getTableElements().eq(1);\r\n        if (!$rowsTable) {\r\n            return\r\n        }\r\n        $rowsTable.css(\"tableLayout\", isBestFit ? \"auto\" : \"fixed\");\r\n        $rowsTable.children(\"colgroup\").css(\"display\", isBestFit ? \"none\" : \"\");\r\n        $rowsFixedTable.toggleClass(this.addWidgetPrefix(TABLE_FIXED_CLASS), !isBestFit);\r\n        this._toggleBestFitModeForView(this._columnHeadersView, \"dx-header\", isBestFit);\r\n        this._toggleBestFitModeForView(this._footerView, \"dx-footer\", isBestFit);\r\n        this._toggleContentMinHeight(isBestFit);\r\n        if (this._needStretch()) {\r\n            $rowsTable.get(0).style.width = isBestFit ? \"auto\" : \"\"\r\n        }\r\n    },\r\n    _toggleContentMinHeight: function(isBestFit) {\r\n        if (this.option(\"wordWrapEnabled\")) {\r\n            var scrollable = this._rowsView.getScrollable();\r\n            var $contentElement = this._rowsView._findContentElement();\r\n            if (false === (null === scrollable || void 0 === scrollable ? void 0 : scrollable.option(\"useNative\"))) {\r\n                $contentElement.css({\r\n                    minHeight: isBestFit ? gridCoreUtils.getContentHeightLimit(browser) : \"\"\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _synchronizeColumns: function() {\r\n        var columnsController = this._columnsController;\r\n        var visibleColumns = columnsController.getVisibleColumns();\r\n        var columnAutoWidth = this.option(\"columnAutoWidth\");\r\n        var needBestFit = this._needBestFit();\r\n        var hasMinWidth = false;\r\n        var resetBestFitMode;\r\n        var isColumnWidthsCorrected = false;\r\n        var resultWidths = [];\r\n        var focusedElement;\r\n        var selectionRange;\r\n        !needBestFit && each(visibleColumns, (function(index, column) {\r\n            if (\"auto\" === column.width) {\r\n                needBestFit = true;\r\n                return false\r\n            }\r\n        }));\r\n        each(visibleColumns, (function(index, column) {\r\n            if (column.minWidth) {\r\n                hasMinWidth = true;\r\n                return false\r\n            }\r\n        }));\r\n        this._setVisibleWidths(visibleColumns, []);\r\n        if (needBestFit) {\r\n            focusedElement = domAdapter.getActiveElement();\r\n            selectionRange = gridCoreUtils.getSelectionRange(focusedElement);\r\n            this._toggleBestFitMode(true);\r\n            resetBestFitMode = true\r\n        }\r\n        var $element = this.component.$element();\r\n        if ($element && $element[0] && this._maxWidth) {\r\n            delete this._maxWidth;\r\n            $element[0].style.maxWidth = \"\"\r\n        }\r\n        deferUpdate(() => {\r\n            if (needBestFit) {\r\n                resultWidths = this._getBestFitWidths();\r\n                each(visibleColumns, (function(index, column) {\r\n                    var columnId = columnsController.getColumnId(column);\r\n                    columnsController.columnOption(columnId, \"bestFitWidth\", resultWidths[index], true)\r\n                }))\r\n            } else if (hasMinWidth) {\r\n                resultWidths = this._getBestFitWidths()\r\n            }\r\n            each(visibleColumns, (function(index) {\r\n                var width = this.width;\r\n                if (\"auto\" !== width) {\r\n                    if (isDefined(width)) {\r\n                        resultWidths[index] = isNumeric(width) || isPixelWidth(width) ? parseFloat(width) : width\r\n                    } else if (!columnAutoWidth) {\r\n                        resultWidths[index] = void 0\r\n                    }\r\n                }\r\n            }));\r\n            if (resetBestFitMode) {\r\n                this._toggleBestFitMode(false);\r\n                resetBestFitMode = false;\r\n                if (focusedElement && focusedElement !== domAdapter.getActiveElement()) {\r\n                    var isFocusOutsideWindow = getBoundingRect(focusedElement).bottom < 0;\r\n                    if (!isFocusOutsideWindow) {\r\n                        restoreFocus(focusedElement, selectionRange)\r\n                    }\r\n                }\r\n            }\r\n            isColumnWidthsCorrected = this._correctColumnWidths(resultWidths, visibleColumns);\r\n            if (columnAutoWidth) {\r\n                ! function() {\r\n                    var expandColumnWidth;\r\n                    each(visibleColumns, (function(index, column) {\r\n                        if (\"groupExpand\" === column.type) {\r\n                            expandColumnWidth = resultWidths[index]\r\n                        }\r\n                    }));\r\n                    each(visibleColumns, (function(index, column) {\r\n                        if (\"groupExpand\" === column.type && expandColumnWidth) {\r\n                            resultWidths[index] = expandColumnWidth\r\n                        }\r\n                    }))\r\n                }();\r\n                if (this._needStretch()) {\r\n                    this._processStretch(resultWidths, visibleColumns)\r\n                }\r\n            }\r\n            deferRender(() => {\r\n                if (needBestFit || isColumnWidthsCorrected) {\r\n                    this._setVisibleWidths(visibleColumns, resultWidths)\r\n                }\r\n            })\r\n        })\r\n    },\r\n    _needBestFit: function() {\r\n        return this.option(\"columnAutoWidth\")\r\n    },\r\n    _needStretch: function() {\r\n        return this._columnsController.getVisibleColumns().some(c => \"auto\" === c.width && !c.command)\r\n    },\r\n    _getAverageColumnsWidth: function(resultWidths) {\r\n        var freeWidth = calculateFreeWidth(this, resultWidths);\r\n        var columnCountWithoutWidth = resultWidths.filter((function(width) {\r\n            return void 0 === width\r\n        })).length;\r\n        return freeWidth / columnCountWithoutWidth\r\n    },\r\n    _correctColumnWidths: function(resultWidths, visibleColumns) {\r\n        var that = this;\r\n        var i;\r\n        var hasPercentWidth = false;\r\n        var hasAutoWidth = false;\r\n        var isColumnWidthsCorrected = false;\r\n        var $element = that.component.$element();\r\n        var hasWidth = that._hasWidth;\r\n        var _loop = function() {\r\n            var index = i;\r\n            var column = visibleColumns[index];\r\n            var isHiddenColumn = resultWidths[index] === HIDDEN_COLUMNS_WIDTH;\r\n            var width = resultWidths[index];\r\n            var minWidth = column.minWidth;\r\n            if (minWidth) {\r\n                if (void 0 === width) {\r\n                    var averageColumnsWidth = that._getAverageColumnsWidth(resultWidths);\r\n                    width = averageColumnsWidth\r\n                } else if (isPercentWidth(width)) {\r\n                    var freeWidth = calculateFreeWidthWithCurrentMinWidth(that, index, minWidth, resultWidths);\r\n                    if (freeWidth < 0) {\r\n                        width = -1\r\n                    }\r\n                }\r\n            }\r\n            var realColumnWidth = that._getRealColumnWidth(index, resultWidths.map((function(columnWidth, columnIndex) {\r\n                return index === columnIndex ? width : columnWidth\r\n            })));\r\n            if (minWidth && !isHiddenColumn && realColumnWidth < minWidth) {\r\n                resultWidths[index] = minWidth;\r\n                isColumnWidthsCorrected = true;\r\n                i = -1\r\n            }\r\n            if (!isDefined(column.width)) {\r\n                hasAutoWidth = true\r\n            }\r\n            if (isPercentWidth(column.width)) {\r\n                hasPercentWidth = true\r\n            }\r\n        };\r\n        for (i = 0; i < visibleColumns.length; i++) {\r\n            _loop()\r\n        }\r\n        if (!hasAutoWidth && resultWidths.length) {\r\n            var $rowsViewElement = that._rowsView.element();\r\n            var contentWidth = that._rowsView.contentWidth();\r\n            var scrollbarWidth = that._rowsView.getScrollbarWidth();\r\n            var totalWidth = that._getTotalWidth(resultWidths, contentWidth);\r\n            if (totalWidth < contentWidth) {\r\n                var lastColumnIndex = gridCoreUtils.getLastResizableColumnIndex(visibleColumns, resultWidths);\r\n                if (lastColumnIndex >= 0) {\r\n                    resultWidths[lastColumnIndex] = \"auto\";\r\n                    isColumnWidthsCorrected = true;\r\n                    if (false === hasWidth && !hasPercentWidth) {\r\n                        var borderWidth = that.option(\"showBorders\") ? Math.ceil(getOuterWidth($rowsViewElement) - getInnerWidth($rowsViewElement)) : 0;\r\n                        that._maxWidth = totalWidth + scrollbarWidth + borderWidth;\r\n                        $element.css(\"maxWidth\", that._maxWidth)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return isColumnWidthsCorrected\r\n    },\r\n    _processStretch: function(resultSizes, visibleColumns) {\r\n        var groupSize = this._rowsView.contentWidth();\r\n        var tableSize = this._getTotalWidth(resultSizes, groupSize);\r\n        var unusedIndexes = {\r\n            length: 0\r\n        };\r\n        if (!resultSizes.length) {\r\n            return\r\n        }\r\n        each(visibleColumns, (function(index) {\r\n            if (this.width || resultSizes[index] === HIDDEN_COLUMNS_WIDTH) {\r\n                unusedIndexes[index] = true;\r\n                unusedIndexes.length++\r\n            }\r\n        }));\r\n        var diff = groupSize - tableSize;\r\n        var diffElement = Math.floor(diff / (resultSizes.length - unusedIndexes.length));\r\n        var onePixelElementsCount = diff - diffElement * (resultSizes.length - unusedIndexes.length);\r\n        if (diff >= 0) {\r\n            for (var i = 0; i < resultSizes.length; i++) {\r\n                if (unusedIndexes[i]) {\r\n                    continue\r\n                }\r\n                resultSizes[i] += diffElement;\r\n                if (onePixelElementsCount > 0) {\r\n                    if (onePixelElementsCount < 1) {\r\n                        resultSizes[i] += onePixelElementsCount;\r\n                        onePixelElementsCount = 0\r\n                    } else {\r\n                        resultSizes[i]++;\r\n                        onePixelElementsCount--\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _getRealColumnWidth: function(columnIndex, columnWidths, groupWidth) {\r\n        var ratio = 1;\r\n        var width = columnWidths[columnIndex];\r\n        if (!isPercentWidth(width)) {\r\n            return parseFloat(width)\r\n        }\r\n        var percentTotalWidth = columnWidths.reduce((sum, width, index) => {\r\n            if (!isPercentWidth(width)) {\r\n                return sum\r\n            }\r\n            return sum + parseFloat(width)\r\n        }, 0);\r\n        var pixelTotalWidth = columnWidths.reduce((sum, width) => {\r\n            if (!width || width === HIDDEN_COLUMNS_WIDTH || isPercentWidth(width)) {\r\n                return sum\r\n            }\r\n            return sum + parseFloat(width)\r\n        }, 0);\r\n        groupWidth = groupWidth || this._rowsView.contentWidth();\r\n        var freeSpace = groupWidth - pixelTotalWidth;\r\n        var percentTotalWidthInPixel = percentTotalWidth * groupWidth / 100;\r\n        if (pixelTotalWidth > 0 && percentTotalWidthInPixel + pixelTotalWidth >= groupWidth) {\r\n            ratio = percentTotalWidthInPixel > freeSpace ? freeSpace / percentTotalWidthInPixel : 1\r\n        }\r\n        return parseFloat(width) * groupWidth * ratio / 100\r\n    },\r\n    _getTotalWidth: function(widths, groupWidth) {\r\n        var result = 0;\r\n        for (var i = 0; i < widths.length; i++) {\r\n            var width = widths[i];\r\n            if (width && width !== HIDDEN_COLUMNS_WIDTH) {\r\n                result += this._getRealColumnWidth(i, widths, groupWidth)\r\n            }\r\n        }\r\n        return Math.ceil(result)\r\n    },\r\n    updateSize: function(rootElement) {\r\n        var $groupElement;\r\n        var width;\r\n        var $rootElement = $(rootElement);\r\n        var importantMarginClass = this.addWidgetPrefix(IMPORTANT_MARGIN_CLASS);\r\n        if (void 0 === this._hasHeight && $rootElement && $rootElement.is(\":visible\") && getWidth($rootElement)) {\r\n            $groupElement = $rootElement.children(\".\" + this.getWidgetContainerClass());\r\n            if ($groupElement.length) {\r\n                $groupElement.detach()\r\n            }\r\n            this._hasHeight = !!getContainerHeight($rootElement);\r\n            width = getWidth($rootElement);\r\n            $rootElement.addClass(importantMarginClass);\r\n            this._hasWidth = getWidth($rootElement) === width;\r\n            $rootElement.removeClass(importantMarginClass);\r\n            if ($groupElement.length) {\r\n                $groupElement.appendTo($rootElement)\r\n            }\r\n        }\r\n    },\r\n    publicMethods: function() {\r\n        return [\"resize\", \"updateDimensions\"]\r\n    },\r\n    resize: function() {\r\n        return !this.component._requireResize && this.updateDimensions()\r\n    },\r\n    updateDimensions: function(checkSize) {\r\n        var that = this;\r\n        that._initPostRenderHandlers();\r\n        if (!that._checkSize(checkSize)) {\r\n            return\r\n        }\r\n        var prevResult = that._resizeDeferred;\r\n        var result = that._resizeDeferred = new Deferred;\r\n        when(prevResult).always((function() {\r\n            deferRender((function() {\r\n                if (that._dataController.isLoaded()) {\r\n                    that._synchronizeColumns()\r\n                }\r\n                that._resetGroupElementHeight();\r\n                deferUpdate((function() {\r\n                    deferRender((function() {\r\n                        deferUpdate((function() {\r\n                            that._updateDimensionsCore()\r\n                        }))\r\n                    }))\r\n                }))\r\n            })).done(result.resolve).fail(result.reject)\r\n        }));\r\n        return result.promise()\r\n    },\r\n    _resetGroupElementHeight: function() {\r\n        var groupElement = this.component.$element().children().get(0);\r\n        var scrollable = this._rowsView.getScrollable();\r\n        if (groupElement && groupElement.style.height && (!scrollable || !scrollable.scrollTop())) {\r\n            groupElement.style.height = \"\"\r\n        }\r\n    },\r\n    _checkSize: function(checkSize) {\r\n        var $rootElement = this.component.$element();\r\n        if (checkSize && (this._lastWidth === getWidth($rootElement) && this._lastHeight === getHeight($rootElement) && this._devicePixelRatio === getWindow().devicePixelRatio || !$rootElement.is(\":visible\"))) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    _setScrollerSpacingCore: function(hasHeight) {\r\n        var that = this;\r\n        var vScrollbarWidth = hasHeight ? that._rowsView.getScrollbarWidth() : 0;\r\n        var hScrollbarWidth = that._rowsView.getScrollbarWidth(true);\r\n        deferRender((function() {\r\n            that._columnHeadersView && that._columnHeadersView.setScrollerSpacing(vScrollbarWidth);\r\n            that._footerView && that._footerView.setScrollerSpacing(vScrollbarWidth);\r\n            that._rowsView.setScrollerSpacing(vScrollbarWidth, hScrollbarWidth)\r\n        }))\r\n    },\r\n    _setScrollerSpacing: function(hasHeight) {\r\n        if (true === this.option(\"scrolling.useNative\")) {\r\n            deferRender(() => {\r\n                deferUpdate(() => {\r\n                    this._setScrollerSpacingCore(hasHeight)\r\n                })\r\n            })\r\n        } else {\r\n            this._setScrollerSpacingCore(hasHeight)\r\n        }\r\n    },\r\n    _updateDimensionsCore: function() {\r\n        var that = this;\r\n        var dataController = that._dataController;\r\n        var rowsView = that._rowsView;\r\n        var $rootElement = that.component.$element();\r\n        var groupElement = $rootElement.children().get(0);\r\n        var rootElementHeight = $rootElement && ($rootElement.get(0).clientHeight || getHeight($rootElement));\r\n        var maxHeight = parseInt($rootElement.css(\"maxHeight\"));\r\n        var maxHeightHappened = maxHeight && rootElementHeight >= maxHeight;\r\n        var height = that.option(\"height\") || $rootElement.get(0).style.height;\r\n        var editorFactory = that.getController(\"editorFactory\");\r\n        var isMaxHeightApplied = maxHeightHappened && groupElement.scrollHeight === groupElement.offsetHeight;\r\n        var $testDiv;\r\n        that.updateSize($rootElement);\r\n        var hasHeight = that._hasHeight || maxHeightHappened;\r\n        if (height && that._hasHeight ^ \"auto\" !== height) {\r\n            $testDiv = $(\"<div>\");\r\n            setHeight($testDiv, height);\r\n            $testDiv.appendTo($rootElement);\r\n            that._hasHeight = !!getHeight($testDiv);\r\n            $testDiv.remove()\r\n        }\r\n        deferRender((function() {\r\n            rowsView.height(null, hasHeight);\r\n            if (maxHeightHappened && !isMaxHeightApplied) {\r\n                $(groupElement).css(\"height\", maxHeight)\r\n            }\r\n            if (!dataController.isLoaded()) {\r\n                rowsView.setLoading(dataController.isLoading());\r\n                return\r\n            }\r\n            deferUpdate((function() {\r\n                that._updateLastSizes($rootElement);\r\n                that._setScrollerSpacing(hasHeight);\r\n                each(VIEW_NAMES, (function(index, viewName) {\r\n                    var view = that.getView(viewName);\r\n                    if (view) {\r\n                        view.resize()\r\n                    }\r\n                }));\r\n                editorFactory && editorFactory.resize()\r\n            }))\r\n        }))\r\n    },\r\n    _updateLastSizes: function($rootElement) {\r\n        this._lastWidth = getWidth($rootElement);\r\n        this._lastHeight = getHeight($rootElement);\r\n        this._devicePixelRatio = getWindow().devicePixelRatio\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"width\":\r\n            case \"height\":\r\n                this.component._renderDimensions();\r\n                this.resize();\r\n            case \"renderAsync\":\r\n                args.handled = true;\r\n                return;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    init: function() {\r\n        this._dataController = this.getController(\"data\");\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._columnHeadersView = this.getView(\"columnHeadersView\");\r\n        this._footerView = this.getView(\"footerView\");\r\n        this._rowsView = this.getView(\"rowsView\")\r\n    }\r\n});\r\nvar SynchronizeScrollingController = modules.ViewController.inherit({\r\n    _scrollChangedHandler: function(views, pos, viewName) {\r\n        for (var j = 0; j < views.length; j++) {\r\n            if (views[j] && views[j].name !== viewName) {\r\n                views[j].scrollTo({\r\n                    left: pos.left,\r\n                    top: pos.top\r\n                })\r\n            }\r\n        }\r\n    },\r\n    init: function() {\r\n        var views = [this.getView(\"columnHeadersView\"), this.getView(\"footerView\"), this.getView(\"rowsView\")];\r\n        for (var i = 0; i < views.length; i++) {\r\n            var view = views[i];\r\n            if (view) {\r\n                view.scrollChanged.add(this._scrollChangedHandler.bind(this, views))\r\n            }\r\n        }\r\n    }\r\n});\r\nvar GridView = modules.View.inherit({\r\n    _endUpdateCore: function() {\r\n        if (this.component._requireResize) {\r\n            this.component._requireResize = false;\r\n            this._resizingController.resize()\r\n        }\r\n    },\r\n    _getWidgetAriaLabel: function() {\r\n        return \"dxDataGrid-ariaDataGrid\"\r\n    },\r\n    init: function() {\r\n        this._resizingController = this.getController(\"resizing\");\r\n        this._dataController = this.getController(\"data\")\r\n    },\r\n    getView: function(name) {\r\n        return this.component._views[name]\r\n    },\r\n    element: function() {\r\n        return this._groupElement\r\n    },\r\n    optionChanged: function(args) {\r\n        if (isDefined(this._groupElement) && \"showBorders\" === args.name) {\r\n            this._groupElement.toggleClass(this.addWidgetPrefix(BORDERS_CLASS), !!args.value);\r\n            args.handled = true\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    },\r\n    _renderViews: function($groupElement) {\r\n        var that = this;\r\n        each(VIEW_NAMES, (function(index, viewName) {\r\n            var view = that.getView(viewName);\r\n            if (view) {\r\n                view.render($groupElement)\r\n            }\r\n        }))\r\n    },\r\n    _getTableRoleName: function() {\r\n        return \"grid\"\r\n    },\r\n    render: function($rootElement) {\r\n        var isFirstRender = !this._groupElement;\r\n        var $groupElement = this._groupElement || $(\"<div>\").addClass(this.getWidgetContainerClass());\r\n        $groupElement.addClass(GRIDBASE_CONTAINER_CLASS);\r\n        $groupElement.toggleClass(this.addWidgetPrefix(BORDERS_CLASS), !!this.option(\"showBorders\"));\r\n        this.setAria(\"role\", \"presentation\", $rootElement);\r\n        this.component.setAria({\r\n            role: this._getTableRoleName(),\r\n            label: messageLocalization.format(this._getWidgetAriaLabel())\r\n        }, $groupElement);\r\n        this._rootElement = $rootElement || this._rootElement;\r\n        if (isFirstRender) {\r\n            this._groupElement = $groupElement;\r\n            hasWindow() && this.getController(\"resizing\").updateSize($rootElement);\r\n            $groupElement.appendTo($rootElement)\r\n        }\r\n        this._renderViews($groupElement)\r\n    },\r\n    update: function() {\r\n        var $rootElement = this._rootElement;\r\n        var $groupElement = this._groupElement;\r\n        var resizingController = this.getController(\"resizing\");\r\n        if ($rootElement && $groupElement) {\r\n            resizingController.resize();\r\n            if (this._dataController.isLoaded()) {\r\n                this._resizingController.fireContentReadyAction()\r\n            }\r\n        }\r\n    }\r\n});\r\nexport var gridViewModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            showBorders: false,\r\n            renderAsync: false\r\n        }\r\n    },\r\n    controllers: {\r\n        resizing: ResizingController,\r\n        synchronizeScrolling: SynchronizeScrollingController\r\n    },\r\n    views: {\r\n        gridView: GridView\r\n    },\r\n    VIEW_NAMES: VIEW_NAMES\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grid_view.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    gridViewModule\r\n} from \"../grid_core/ui.grid_core.grid_view\";\r\ngridCore.registerModule(\"gridView\", gridViewModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.header_panel.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport Toolbar from \"../toolbar\";\r\nimport {\r\n    ColumnsView\r\n} from \"./ui.grid_core.columns_view\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport \"../drop_down_menu\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getPathParts\r\n} from \"../../core/utils/data\";\r\nvar HEADER_PANEL_CLASS = \"header-panel\";\r\nvar TOOLBAR_BUTTON_CLASS = \"toolbar-button\";\r\nvar TOOLBAR_ARIA_LABEL = \"-ariaToolbar\";\r\nvar HeaderPanel = ColumnsView.inherit({\r\n    _getToolbarItems: function() {\r\n        return []\r\n    },\r\n    _getButtonContainer: function() {\r\n        return $(\"<div>\").addClass(this.addWidgetPrefix(TOOLBAR_BUTTON_CLASS))\r\n    },\r\n    _getToolbarButtonClass: function(specificClass) {\r\n        var secondClass = specificClass ? \" \" + specificClass : \"\";\r\n        return this.addWidgetPrefix(TOOLBAR_BUTTON_CLASS) + secondClass\r\n    },\r\n    _getToolbarOptions: function() {\r\n        var userToolbarOptions = this.option(\"toolbar\");\r\n        var options = {\r\n            toolbarOptions: {\r\n                items: this._getToolbarItems(),\r\n                visible: null === userToolbarOptions || void 0 === userToolbarOptions ? void 0 : userToolbarOptions.visible,\r\n                disabled: null === userToolbarOptions || void 0 === userToolbarOptions ? void 0 : userToolbarOptions.disabled,\r\n                onItemRendered: function(e) {\r\n                    var itemRenderedCallback = e.itemData.onItemRendered;\r\n                    if (itemRenderedCallback) {\r\n                        itemRenderedCallback(e)\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        var userItems = null === userToolbarOptions || void 0 === userToolbarOptions ? void 0 : userToolbarOptions.items;\r\n        options.toolbarOptions.items = this._normalizeToolbarItems(options.toolbarOptions.items, userItems);\r\n        this.executeAction(\"onToolbarPreparing\", options);\r\n        if (options.toolbarOptions && !isDefined(options.toolbarOptions.visible)) {\r\n            var toolbarItems = options.toolbarOptions.items;\r\n            options.toolbarOptions.visible = !!(null !== toolbarItems && void 0 !== toolbarItems && toolbarItems.length)\r\n        }\r\n        return options.toolbarOptions\r\n    },\r\n    _normalizeToolbarItems(defaultItems, userItems) {\r\n        var defaultProps = {\r\n            location: \"after\"\r\n        };\r\n        var isArray = Array.isArray(userItems);\r\n        if (!isDefined(userItems)) {\r\n            return defaultItems\r\n        }\r\n        if (!isArray) {\r\n            userItems = [userItems]\r\n        }\r\n        var defaultButtonsByNames = {};\r\n        defaultItems.forEach(button => {\r\n            defaultButtonsByNames[button.name] = button\r\n        });\r\n        var normalizedItems = userItems.map(button => {\r\n            var needHideButton = false;\r\n            if (isString(button)) {\r\n                button = {\r\n                    name: button\r\n                };\r\n                needHideButton = true\r\n            }\r\n            if (isDefined(button.name)) {\r\n                if (isDefined(defaultButtonsByNames[button.name])) {\r\n                    button = extend(true, {}, defaultButtonsByNames[button.name], button)\r\n                } else if (needHideButton) {\r\n                    button.visible = false\r\n                }\r\n            }\r\n            return extend(true, {}, defaultProps, button)\r\n        });\r\n        return isArray ? normalizedItems : normalizedItems[0]\r\n    },\r\n    _renderCore: function() {\r\n        if (!this._toolbar) {\r\n            var $headerPanel = this.element();\r\n            $headerPanel.addClass(this.addWidgetPrefix(HEADER_PANEL_CLASS));\r\n            var label = messageLocalization.format(this.component.NAME + TOOLBAR_ARIA_LABEL);\r\n            var $toolbar = $(\"<div>\").attr(\"aria-label\", label).appendTo($headerPanel);\r\n            this._toolbar = this._createComponent($toolbar, Toolbar, this._toolbarOptions)\r\n        } else {\r\n            this._toolbar.option(this._toolbarOptions)\r\n        }\r\n    },\r\n    _columnOptionChanged: noop,\r\n    _handleDataChanged: function() {\r\n        if (this._requireReady) {\r\n            this.render()\r\n        }\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this.createAction(\"onToolbarPreparing\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    render: function() {\r\n        this._toolbarOptions = this._getToolbarOptions();\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    setToolbarItemDisabled: function(name, optionValue) {\r\n        var toolbarInstance = this._toolbar;\r\n        if (toolbarInstance) {\r\n            var items = toolbarInstance.option(\"items\") || [];\r\n            var itemIndex = items.indexOf(items.filter((function(item) {\r\n                return item.name === name\r\n            }))[0]);\r\n            if (itemIndex >= 0) {\r\n                var itemOptionPrefix = \"items[\" + itemIndex + \"]\";\r\n                if (toolbarInstance.option(itemOptionPrefix + \".options\")) {\r\n                    toolbarInstance.option(itemOptionPrefix + \".options.disabled\", optionValue)\r\n                } else {\r\n                    toolbarInstance.option(itemOptionPrefix + \".disabled\", optionValue)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    updateToolbarDimensions: function() {\r\n        var _this$_toolbar;\r\n        null === (_this$_toolbar = this._toolbar) || void 0 === _this$_toolbar ? void 0 : _this$_toolbar.updateDimensions()\r\n    },\r\n    getHeaderPanel: function() {\r\n        return this.element()\r\n    },\r\n    getHeight: function() {\r\n        return this.getElementHeight()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"onToolbarPreparing\" === args.name) {\r\n            this._invalidate();\r\n            args.handled = true\r\n        }\r\n        if (\"toolbar\" === args.name) {\r\n            args.handled = true;\r\n            if (this._toolbar) {\r\n                var parts = getPathParts(args.fullName);\r\n                var optionName = args.fullName.replace(/^toolbar\\./, \"\");\r\n                if (1 === parts.length) {\r\n                    var toolbarOptions = this._getToolbarOptions();\r\n                    this._toolbar.option(toolbarOptions)\r\n                } else if (\"items\" === parts[1]) {\r\n                    if (2 === parts.length) {\r\n                        var _toolbarOptions = this._getToolbarOptions();\r\n                        this._toolbar.option(\"items\", _toolbarOptions.items)\r\n                    } else if (3 === parts.length) {\r\n                        var normalizedItem = this._normalizeToolbarItems(this._getToolbarItems(), args.value);\r\n                        this._toolbar.option(optionName, normalizedItem)\r\n                    } else if (parts.length >= 4) {\r\n                        this._toolbar.option(optionName, args.value)\r\n                    }\r\n                } else {\r\n                    this._toolbar.option(optionName, args.value)\r\n                }\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    isVisible: function() {\r\n        return this._toolbarOptions && this._toolbarOptions.visible\r\n    },\r\n    allowDragging: noop\r\n});\r\nexport var headerPanelModule = {\r\n    defaultOptions: function() {\r\n        return {}\r\n    },\r\n    views: {\r\n        headerPanel: HeaderPanel\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            resizing: {\r\n                _updateDimensionsCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this.getView(\"headerPanel\").updateToolbarDimensions()\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.header_panel.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    headerPanelModule\r\n} from \"../grid_core/ui.grid_core.header_panel\";\r\nexport var HeaderPanel = headerPanelModule.views.headerPanel;\r\ngridCore.registerModule(\"headerPanel\", headerPanelModule);\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.base.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    deferRender,\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isFunction,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    logger\r\n} from \"../../core/utils/console\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    isMaterial\r\n} from \"../themes\";\r\nvar DATAGRID_ROW_SELECTOR = \".dx-row\";\r\nvar DATAGRID_DEPRECATED_TEMPLATE_WARNING = \"Specifying grid templates with the jQuery selector name is now deprecated. Use the DOM Node or the jQuery object that references this selector instead.\";\r\nimport \"./ui.data_grid.column_headers\";\r\nimport \"./ui.data_grid.columns_controller\";\r\nimport \"./ui.data_grid.data_controller\";\r\nimport \"./ui.data_grid.sorting\";\r\nimport \"./ui.data_grid.rows\";\r\nimport \"./ui.data_grid.context_menu\";\r\nimport \"./ui.data_grid.error_handling\";\r\nimport \"./ui.data_grid.grid_view\";\r\nimport \"./ui.data_grid.header_panel\";\r\ngridCore.registerModulesOrder([\"stateStoring\", \"columns\", \"selection\", \"editorFactory\", \"columnChooser\", \"grouping\", \"editing\", \"editingRowBased\", \"editingFormBased\", \"editingCellBased\", \"masterDetail\", \"validating\", \"adaptivity\", \"data\", \"virtualScrolling\", \"columnHeaders\", \"filterRow\", \"headerPanel\", \"headerFilter\", \"sorting\", \"search\", \"rows\", \"pager\", \"columnsResizingReordering\", \"contextMenu\", \"keyboardNavigation\", \"errorHandling\", \"summary\", \"columnFixing\", \"export\", \"gridView\"]);\r\nvar DataGrid = Widget.inherit({\r\n    _activeStateUnit: DATAGRID_ROW_SELECTOR,\r\n    _getDefaultOptions: function() {\r\n        var result = this.callBase();\r\n        each(gridCore.modules, (function() {\r\n            if (isFunction(this.defaultOptions)) {\r\n                extend(true, result, this.defaultOptions())\r\n            }\r\n        }));\r\n        return result\r\n    },\r\n    _setDeprecatedOptions: function() {\r\n        this.callBase();\r\n        extend(this._deprecatedOptions, {\r\n            useKeyboard: {\r\n                since: \"19.2\",\r\n                alias: \"keyboardNavigation.enabled\"\r\n            },\r\n            rowTemplate: {\r\n                since: \"21.2\",\r\n                message: 'Use the \"dataRowTemplate\" option instead'\r\n            },\r\n            onToolbarPreparing: {\r\n                since: \"21.2\",\r\n                message: 'Use the \"toolbar\" option instead'\r\n            }\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                showRowLines: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return isMaterial()\r\n            },\r\n            options: {\r\n                showRowLines: true,\r\n                showColumnLines: false,\r\n                headerFilter: {\r\n                    height: 315\r\n                },\r\n                editing: {\r\n                    useIcons: true\r\n                },\r\n                selection: {\r\n                    showCheckBoxesMode: \"always\"\r\n                }\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return browser.webkit\r\n            },\r\n            options: {\r\n                loadingTimeout: 30,\r\n                loadPanel: {\r\n                    animation: {\r\n                        show: {\r\n                            easing: \"cubic-bezier(1, 0, 1, 0)\",\r\n                            duration: 500,\r\n                            from: {\r\n                                opacity: 0\r\n                            },\r\n                            to: {\r\n                                opacity: 1\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            device: function(_device) {\r\n                return \"desktop\" !== _device.deviceType\r\n            },\r\n            options: {\r\n                grouping: {\r\n                    expandMode: \"rowClick\"\r\n                }\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        gridCore.processModules(this, gridCore);\r\n        gridCore.callModuleItemsMethod(this, \"init\")\r\n    },\r\n    _clean: noop,\r\n    _optionChanged: function(args) {\r\n        gridCore.callModuleItemsMethod(this, \"optionChanged\", [args]);\r\n        if (!args.handled) {\r\n            this.callBase(args)\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        this.updateDimensions(true)\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this.updateDimensions()\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this.getView(\"gridView\").render(this.$element())\r\n    },\r\n    _renderContentImpl: function() {\r\n        this.getView(\"gridView\").update()\r\n    },\r\n    _renderContent: function() {\r\n        var that = this;\r\n        deferRender((function() {\r\n            that._renderContentImpl()\r\n        }))\r\n    },\r\n    _getTemplate: function(templateName) {\r\n        var template = templateName;\r\n        if (isString(template) && \"#\" === template[0]) {\r\n            template = $(templateName);\r\n            logger.warn(DATAGRID_DEPRECATED_TEMPLATE_WARNING)\r\n        }\r\n        return this.callBase(template)\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        gridCore.callModuleItemsMethod(this, \"dispose\")\r\n    },\r\n    isReady: function() {\r\n        return this.getController(\"data\").isReady()\r\n    },\r\n    beginUpdate: function() {\r\n        this.callBase();\r\n        gridCore.callModuleItemsMethod(this, \"beginUpdate\")\r\n    },\r\n    endUpdate: function() {\r\n        gridCore.callModuleItemsMethod(this, \"endUpdate\");\r\n        this.callBase()\r\n    },\r\n    getController: function(name) {\r\n        return this._controllers[name]\r\n    },\r\n    getView: function(name) {\r\n        return this._views[name]\r\n    },\r\n    focus: function(element) {\r\n        this.getController(\"keyboardNavigation\").focus(element)\r\n    }\r\n});\r\nDataGrid.registerModule = gridCore.registerModule.bind(gridCore);\r\nregisterComponent(\"dxDataGrid\", DataGrid);\r\nexport default DataGrid;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.state_storing_core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    sessionStorage\r\n} from \"../../core/utils/storage\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    isEmptyObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    fromPromise\r\n} from \"../../core/utils/deferred\";\r\nvar DATE_REGEX = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/;\r\nvar parseDates = function parseDates(state) {\r\n    if (!state) {\r\n        return\r\n    }\r\n    each(state, (function(key, value) {\r\n        if (isPlainObject(value) || Array.isArray(value)) {\r\n            parseDates(value)\r\n        } else if (\"string\" === typeof value) {\r\n            var date = DATE_REGEX.exec(value);\r\n            if (date) {\r\n                state[key] = new Date(Date.UTC(+date[1], +date[2] - 1, +date[3], +date[4], +date[5], +date[6]))\r\n            }\r\n        }\r\n    }))\r\n};\r\nexport var StateStoringController = modules.ViewController.inherit(function() {\r\n    var getStorage = function(options) {\r\n        var storage = \"sessionStorage\" === options.type ? sessionStorage() : getWindow().localStorage;\r\n        if (!storage) {\r\n            throw new Error(\"E1007\")\r\n        }\r\n        return storage\r\n    };\r\n    var getUniqueStorageKey = function(options) {\r\n        return isDefined(options.storageKey) ? options.storageKey : \"storage\"\r\n    };\r\n    return {\r\n        _loadState: function() {\r\n            var options = this.option(\"stateStoring\");\r\n            if (\"custom\" === options.type) {\r\n                return options.customLoad && options.customLoad()\r\n            }\r\n            try {\r\n                return JSON.parse(getStorage(options).getItem(getUniqueStorageKey(options)))\r\n            } catch (e) {\r\n                errors.log(e.message)\r\n            }\r\n        },\r\n        _saveState: function(state) {\r\n            var options = this.option(\"stateStoring\");\r\n            if (\"custom\" === options.type) {\r\n                options.customSave && options.customSave(state);\r\n                return\r\n            }\r\n            try {\r\n                getStorage(options).setItem(getUniqueStorageKey(options), JSON.stringify(state))\r\n            } catch (e) {\r\n                errors.log(e.message)\r\n            }\r\n        },\r\n        publicMethods: function() {\r\n            return [\"state\"]\r\n        },\r\n        isEnabled: function() {\r\n            return this.option(\"stateStoring.enabled\")\r\n        },\r\n        init: function() {\r\n            var that = this;\r\n            that._state = {};\r\n            that._isLoaded = false;\r\n            that._isLoading = false;\r\n            that._windowUnloadHandler = function() {\r\n                if (void 0 !== that._savingTimeoutID) {\r\n                    that._saveState(that.state())\r\n                }\r\n            };\r\n            eventsEngine.on(getWindow(), \"unload\", that._windowUnloadHandler);\r\n            return that\r\n        },\r\n        isLoaded: function() {\r\n            return this._isLoaded\r\n        },\r\n        isLoading: function() {\r\n            return this._isLoading\r\n        },\r\n        load: function() {\r\n            this._isLoading = true;\r\n            var loadResult = fromPromise(this._loadState());\r\n            loadResult.always(() => {\r\n                this._isLoaded = true;\r\n                this._isLoading = false\r\n            }).done(state => {\r\n                if (null !== state && !isEmptyObject(state)) {\r\n                    this.state(state)\r\n                }\r\n            });\r\n            return loadResult\r\n        },\r\n        state: function(_state) {\r\n            var that = this;\r\n            if (!arguments.length) {\r\n                return extend(true, {}, that._state)\r\n            } else {\r\n                that._state = extend({}, _state);\r\n                parseDates(that._state)\r\n            }\r\n        },\r\n        save: function() {\r\n            var that = this;\r\n            clearTimeout(that._savingTimeoutID);\r\n            that._savingTimeoutID = setTimeout((function() {\r\n                that._saveState(that.state());\r\n                that._savingTimeoutID = void 0\r\n            }), that.option(\"stateStoring.savingTimeout\"))\r\n        },\r\n        optionChanged: function(args) {\r\n            switch (args.name) {\r\n                case \"stateStoring\":\r\n                    if (this.isEnabled() && !this.isLoading()) {\r\n                        this.load()\r\n                    }\r\n                    args.handled = true;\r\n                    break;\r\n                default:\r\n                    this.callBase(args)\r\n            }\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._savingTimeoutID);\r\n            eventsEngine.off(getWindow(), \"unload\", this._windowUnloadHandler)\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.state_storing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getKeyHash,\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    StateStoringController\r\n} from \"./ui.grid_core.state_storing_core\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar getDataState = that => {\r\n    var pagerView = that.getView(\"pagerView\");\r\n    var dataController = that.getController(\"data\");\r\n    var state = {\r\n        allowedPageSizes: pagerView ? pagerView.getPageSizes() : void 0,\r\n        filterPanel: {\r\n            filterEnabled: that.option(\"filterPanel.filterEnabled\")\r\n        },\r\n        filterValue: that.option(\"filterValue\"),\r\n        focusedRowKey: that.option(\"focusedRowEnabled\") ? that.option(\"focusedRowKey\") : void 0\r\n    };\r\n    return extend(state, dataController.getUserState())\r\n};\r\nvar processLoadState = that => {\r\n    var columnsController = that.getController(\"columns\");\r\n    var selectionController = that.getController(\"selection\");\r\n    var exportController = that.getController(\"export\");\r\n    var dataController = that.getController(\"data\");\r\n    if (columnsController) {\r\n        columnsController.columnsChanged.add((function() {\r\n            that.updateState({\r\n                columns: columnsController.getUserState()\r\n            })\r\n        }))\r\n    }\r\n    if (selectionController) {\r\n        selectionController.selectionChanged.add((function(e) {\r\n            that.updateState({\r\n                selectedRowKeys: e.selectedRowKeys,\r\n                selectionFilter: e.selectionFilter\r\n            })\r\n        }))\r\n    }\r\n    if (dataController) {\r\n        that._initialPageSize = that.option(\"paging.pageSize\");\r\n        that._initialFilterValue = that.option(\"filterValue\");\r\n        dataController.changed.add((function() {\r\n            var state = getDataState(that);\r\n            that.updateState(state)\r\n        }))\r\n    }\r\n    if (exportController) {\r\n        exportController.selectionOnlyChanged.add((function() {\r\n            that.updateState({\r\n                exportSelectionOnly: exportController.selectionOnly()\r\n            })\r\n        }))\r\n    }\r\n};\r\nvar DEFAULT_FILTER_VALUE = null;\r\nvar getFilterValue = (that, state) => {\r\n    var filterSyncController = that.getController(\"filterSync\");\r\n    var columnsController = that.getController(\"columns\");\r\n    var hasFilterState = state.columns || void 0 !== state.filterValue;\r\n    if (filterSyncController) {\r\n        if (hasFilterState) {\r\n            return state.filterValue || filterSyncController.getFilterValueFromColumns(state.columns)\r\n        } else {\r\n            return that._initialFilterValue || filterSyncController.getFilterValueFromColumns(columnsController.getColumns())\r\n        }\r\n    }\r\n    return DEFAULT_FILTER_VALUE\r\n};\r\nexport var stateStoringModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            stateStoring: {\r\n                enabled: false,\r\n                storageKey: null,\r\n                type: \"localStorage\",\r\n                customLoad: null,\r\n                customSave: null,\r\n                savingTimeout: 2e3\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        stateStoring: StateStoringController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                init: function() {\r\n                    var that = this;\r\n                    var dataController = that.getController(\"data\");\r\n                    that.callBase();\r\n                    dataController.stateLoaded.add((function() {\r\n                        if (dataController.isLoaded() && !dataController.getDataSource()) {\r\n                            that.setLoading(false);\r\n                            that.renderNoDataText();\r\n                            var columnHeadersView = that.component.getView(\"columnHeadersView\");\r\n                            columnHeadersView && columnHeadersView.render();\r\n                            that.component._fireContentReadyAction()\r\n                        }\r\n                    }))\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            stateStoring: {\r\n                init: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    processLoadState(this)\r\n                },\r\n                isLoading: function() {\r\n                    return this.callBase() || this.getController(\"data\").isStateLoading()\r\n                },\r\n                state: function(_state) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    if (void 0 !== _state) {\r\n                        this.applyState(extend({}, _state))\r\n                    }\r\n                    return result\r\n                },\r\n                updateState: function(state) {\r\n                    if (this.isEnabled()) {\r\n                        var oldState = this.state();\r\n                        var newState = extend({}, oldState, state);\r\n                        var oldStateHash = getKeyHash(oldState);\r\n                        var newStateHash = getKeyHash(newState);\r\n                        if (!equalByValue(oldStateHash, newStateHash)) {\r\n                            extend(this._state, state);\r\n                            this.save()\r\n                        }\r\n                    } else {\r\n                        extend(this._state, state)\r\n                    }\r\n                },\r\n                applyState: function(state) {\r\n                    var allowedPageSizes = state.allowedPageSizes;\r\n                    var searchText = state.searchText;\r\n                    var selectedRowKeys = state.selectedRowKeys;\r\n                    var selectionFilter = state.selectionFilter;\r\n                    var exportController = this.getController(\"export\");\r\n                    var columnsController = this.getController(\"columns\");\r\n                    var dataController = this.getController(\"data\");\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    var isVirtualScrollingMode = \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\r\n                    var showPageSizeSelector = true === this.option(\"pager.visible\") && this.option(\"pager.showPageSizeSelector\");\r\n                    this.component.beginUpdate();\r\n                    if (columnsController) {\r\n                        columnsController.setUserState(state.columns)\r\n                    }\r\n                    if (exportController) {\r\n                        exportController.selectionOnly(state.exportSelectionOnly)\r\n                    }\r\n                    if (!this.option(\"selection.deferred\")) {\r\n                        this.option(\"selectedRowKeys\", selectedRowKeys || [])\r\n                    }\r\n                    this.option(\"selectionFilter\", selectionFilter);\r\n                    if (allowedPageSizes && \"auto\" === this.option(\"pager.allowedPageSizes\")) {\r\n                        this.option(\"pager\").allowedPageSizes = allowedPageSizes\r\n                    }\r\n                    if (this.option(\"focusedRowEnabled\")) {\r\n                        this.option(\"focusedRowIndex\", -1);\r\n                        this.option(\"focusedRowKey\", state.focusedRowKey || null)\r\n                    }\r\n                    this.component.endUpdate();\r\n                    this.option(\"searchPanel.text\", searchText || \"\");\r\n                    this.option(\"filterValue\", getFilterValue(this, state));\r\n                    this.option(\"filterPanel.filterEnabled\", state.filterPanel ? state.filterPanel.filterEnabled : true);\r\n                    this.option(\"paging.pageIndex\", state.pageIndex || 0);\r\n                    this.option(\"paging.pageSize\", (!isVirtualScrollingMode || showPageSizeSelector) && isDefined(state.pageSize) ? state.pageSize : this._initialPageSize);\r\n                    dataController && dataController.reset()\r\n                }\r\n            },\r\n            columns: {\r\n                getVisibleColumns: function() {\r\n                    var visibleColumns = this.callBase.apply(this, arguments);\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    return stateStoringController.isEnabled() && !stateStoringController.isLoaded() ? [] : visibleColumns\r\n                }\r\n            },\r\n            data: {\r\n                callbackNames: function() {\r\n                    return this.callBase().concat([\"stateLoaded\"])\r\n                },\r\n                _refreshDataSource: function() {\r\n                    var callBase = this.callBase;\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    if (stateStoringController.isEnabled() && !stateStoringController.isLoaded()) {\r\n                        clearTimeout(this._restoreStateTimeoutID);\r\n                        var deferred = new Deferred;\r\n                        this._restoreStateTimeoutID = setTimeout(() => {\r\n                            stateStoringController.load().always(() => {\r\n                                this._restoreStateTimeoutID = null\r\n                            }).done(() => {\r\n                                callBase.call(this);\r\n                                this.stateLoaded.fire();\r\n                                deferred.resolve()\r\n                            }).fail(error => {\r\n                                this.stateLoaded.fire();\r\n                                this._handleLoadError(error || \"Unknown error\");\r\n                                deferred.reject()\r\n                            })\r\n                        });\r\n                        return deferred.promise()\r\n                    } else if (!this.isStateLoading()) {\r\n                        callBase.call(this)\r\n                    }\r\n                },\r\n                isLoading: function() {\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    return this.callBase() || stateStoringController.isLoading()\r\n                },\r\n                isStateLoading: function() {\r\n                    return isDefined(this._restoreStateTimeoutID)\r\n                },\r\n                isLoaded: function() {\r\n                    return this.callBase() && !this.isStateLoading()\r\n                },\r\n                dispose: function() {\r\n                    clearTimeout(this._restoreStateTimeoutID);\r\n                    this.callBase()\r\n                }\r\n            },\r\n            selection: {\r\n                _fireSelectionChanged: function(options) {\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    var isDeferredSelection = this.option(\"selection.deferred\");\r\n                    if (stateStoringController.isLoading() && isDeferredSelection) {\r\n                        return\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.state_storing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    stateStoringModule\r\n} from \"../grid_core/ui.grid_core.state_storing\";\r\ngridCore.registerModule(\"stateStoring\", stateStoringModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.selection.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport gridCore from \"../data_grid/ui.data_grid.core\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    touch\r\n} from \"../../core/utils/support\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    addNamespace,\r\n    isCommandKeyPressed\r\n} from \"../../events/utils/index\";\r\nimport holdEvent from \"../../events/hold\";\r\nimport Selection from \"../selection/selection\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport errors from \"../widget/ui.errors\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar ROW_SELECTION_CLASS = \"dx-selection\";\r\nvar SELECT_CHECKBOX_CLASS = \"dx-select-checkbox\";\r\nvar CHECKBOXES_HIDDEN_CLASS = \"dx-select-checkboxes-hidden\";\r\nvar COMMAND_SELECT_CLASS = \"dx-command-select\";\r\nvar SELECTION_DISABLED_CLASS = \"dx-selection-disabled\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar SHOW_CHECKBOXES_MODE = \"selection.showCheckBoxesMode\";\r\nvar SELECTION_MODE = \"selection.mode\";\r\nvar processLongTap = function(that, dxEvent) {\r\n    var selectionController = that.getController(\"selection\");\r\n    var rowsView = that.getView(\"rowsView\");\r\n    var $row = $(dxEvent.target).closest(\".\" + DATA_ROW_CLASS);\r\n    var rowIndex = rowsView.getRowIndex($row);\r\n    if (rowIndex < 0) {\r\n        return\r\n    }\r\n    if (\"onLongTap\" === that.option(SHOW_CHECKBOXES_MODE)) {\r\n        if (selectionController.isSelectionWithCheckboxes()) {\r\n            selectionController.stopSelectionWithCheckboxes()\r\n        } else {\r\n            selectionController.startSelectionWithCheckboxes()\r\n        }\r\n    } else {\r\n        if (\"onClick\" === that.option(SHOW_CHECKBOXES_MODE)) {\r\n            selectionController.startSelectionWithCheckboxes()\r\n        }\r\n        if (\"always\" !== that.option(SHOW_CHECKBOXES_MODE)) {\r\n            selectionController.changeItemSelection(rowIndex, {\r\n                control: true\r\n            })\r\n        }\r\n    }\r\n};\r\nvar SelectionController = gridCore.Controller.inherit(function() {\r\n    var selectionCellTemplate = (container, options) => {\r\n        var component = options.component;\r\n        var rowsView = component.getView(\"rowsView\");\r\n        if (component.option(\"renderAsync\") && !component.option(\"selection.deferred\")) {\r\n            options.value = component.isRowSelected(options.row.key)\r\n        }\r\n        rowsView.renderSelectCheckBoxContainer($(container), options)\r\n    };\r\n    var selectionHeaderTemplate = (container, options) => {\r\n        var column = options.column;\r\n        var $cellElement = $(container);\r\n        var columnHeadersView = options.component.getView(\"columnHeadersView\");\r\n        $cellElement.addClass(EDITOR_CELL_CLASS);\r\n        columnHeadersView._renderSelectAllCheckBox($cellElement, column);\r\n        columnHeadersView._attachSelectAllCheckBoxClickEvent($cellElement)\r\n    };\r\n    return {\r\n        init: function() {\r\n            var {\r\n                deferred: deferred,\r\n                selectAllMode: selectAllMode,\r\n                mode: mode\r\n            } = this.option(\"selection\") || {};\r\n            if (\"infinite\" === this.option(\"scrolling.mode\") && !deferred && \"multiple\" === mode && \"allPages\" === selectAllMode) {\r\n                errors.log(\"W1018\")\r\n            }\r\n            this._dataController = this.getController(\"data\");\r\n            this._selectionMode = mode;\r\n            this._isSelectionWithCheckboxes = false;\r\n            this._selection = this._createSelection();\r\n            this._updateSelectColumn();\r\n            this.createAction(\"onSelectionChanged\", {\r\n                excludeValidators: [\"disabled\", \"readOnly\"]\r\n            });\r\n            this._dataController && this._dataController.pushed.add(this._handleDataPushed.bind(this))\r\n        },\r\n        _handleDataPushed: function(changes) {\r\n            var removedKeys = changes.filter(change => \"remove\" === change.type).map(change => change.key);\r\n            removedKeys.length && this.deselectRows(removedKeys)\r\n        },\r\n        _getSelectionConfig: function() {\r\n            var dataController = this._dataController;\r\n            var columnsController = this.getController(\"columns\");\r\n            var selectionOptions = this.option(\"selection\") || {};\r\n            var deferred = selectionOptions.deferred;\r\n            var scrollingMode = this.option(\"scrolling.mode\");\r\n            var virtualPaging = \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\r\n            var allowSelectAll = this.option(\"selection.allowSelectAll\");\r\n            var legacyScrollingMode = this.option(\"scrolling.legacyMode\");\r\n            return {\r\n                selectedKeys: this.option(\"selectedRowKeys\"),\r\n                mode: this._selectionMode,\r\n                deferred: deferred,\r\n                maxFilterLengthInRequest: selectionOptions.maxFilterLengthInRequest,\r\n                selectionFilter: this.option(\"selectionFilter\"),\r\n                ignoreDisabledItems: true,\r\n                allowLoadByRange: function() {\r\n                    var hasGroupColumns = columnsController.getGroupColumns().length > 0;\r\n                    return virtualPaging && !legacyScrollingMode && !hasGroupColumns && allowSelectAll && !deferred\r\n                },\r\n                key: function() {\r\n                    return null === dataController || void 0 === dataController ? void 0 : dataController.key()\r\n                },\r\n                keyOf: function(item) {\r\n                    return null === dataController || void 0 === dataController ? void 0 : dataController.keyOf(item)\r\n                },\r\n                dataFields: function() {\r\n                    var _dataController$dataS;\r\n                    return null === (_dataController$dataS = dataController.dataSource()) || void 0 === _dataController$dataS ? void 0 : _dataController$dataS.select()\r\n                },\r\n                load: function(options) {\r\n                    var _dataController$dataS2;\r\n                    return (null === (_dataController$dataS2 = dataController.dataSource()) || void 0 === _dataController$dataS2 ? void 0 : _dataController$dataS2.load(options)) || (new Deferred).resolve([])\r\n                },\r\n                plainItems: function() {\r\n                    return dataController.items(true)\r\n                },\r\n                isItemSelected: function(item) {\r\n                    return item.selected\r\n                },\r\n                isSelectableItem: function(item) {\r\n                    return \"data\" === (null === item || void 0 === item ? void 0 : item.rowType) && !item.isNewRow\r\n                },\r\n                getItemData: function(item) {\r\n                    return (null === item || void 0 === item ? void 0 : item.oldData) || (null === item || void 0 === item ? void 0 : item.data) || item\r\n                },\r\n                filter: function() {\r\n                    return dataController.getCombinedFilter(deferred)\r\n                },\r\n                totalCount: () => dataController.totalCount(),\r\n                getLoadOptions: function(loadItemIndex, focusedItemIndex, shiftItemIndex) {\r\n                    var _dataController$dataS3, _dataController$dataS4;\r\n                    var {\r\n                        sort: sort,\r\n                        filter: filter\r\n                    } = null !== (_dataController$dataS3 = null === (_dataController$dataS4 = dataController.dataSource()) || void 0 === _dataController$dataS4 ? void 0 : _dataController$dataS4.lastLoadOptions()) && void 0 !== _dataController$dataS3 ? _dataController$dataS3 : {};\r\n                    var minIndex = Math.min(loadItemIndex, focusedItemIndex);\r\n                    var maxIndex = Math.max(loadItemIndex, focusedItemIndex);\r\n                    if (isDefined(shiftItemIndex)) {\r\n                        minIndex = Math.min(shiftItemIndex, minIndex);\r\n                        maxIndex = Math.max(shiftItemIndex, maxIndex)\r\n                    }\r\n                    var take = maxIndex - minIndex + 1;\r\n                    return {\r\n                        skip: minIndex,\r\n                        take: take,\r\n                        filter: filter,\r\n                        sort: sort\r\n                    }\r\n                },\r\n                onSelectionChanged: this._updateSelectedItems.bind(this)\r\n            }\r\n        },\r\n        _updateSelectColumn: function() {\r\n            var columnsController = this.getController(\"columns\");\r\n            var isSelectColumnVisible = this.isSelectColumnVisible();\r\n            columnsController.addCommandColumn({\r\n                type: \"selection\",\r\n                command: \"select\",\r\n                visible: isSelectColumnVisible,\r\n                visibleIndex: -1,\r\n                dataType: \"boolean\",\r\n                alignment: \"center\",\r\n                cssClass: COMMAND_SELECT_CLASS,\r\n                width: \"auto\",\r\n                cellTemplate: selectionCellTemplate,\r\n                headerCellTemplate: selectionHeaderTemplate\r\n            });\r\n            columnsController.columnOption(\"command:select\", \"visible\", isSelectColumnVisible)\r\n        },\r\n        _createSelection: function() {\r\n            var options = this._getSelectionConfig();\r\n            return new Selection(options)\r\n        },\r\n        _fireSelectionChanged: function(options) {\r\n            var argument = this.option(\"selection.deferred\") ? {\r\n                selectionFilter: this.option(\"selectionFilter\")\r\n            } : {\r\n                selectedRowKeys: this.option(\"selectedRowKeys\")\r\n            };\r\n            this.selectionChanged.fire(argument);\r\n            if (options) {\r\n                this.executeAction(\"onSelectionChanged\", options)\r\n            }\r\n        },\r\n        _updateCheckboxesState: function(options) {\r\n            var isDeferredMode = options.isDeferredMode;\r\n            var selectionFilter = options.selectionFilter;\r\n            var selectedItemKeys = options.selectedItemKeys;\r\n            var removedItemKeys = options.removedItemKeys;\r\n            if (\"onClick\" === this.option(SHOW_CHECKBOXES_MODE)) {\r\n                if (isDeferredMode ? selectionFilter && function(that, selectionFilter) {\r\n                        var keyIndex = 0;\r\n                        var store = that._dataController.store();\r\n                        var key = store && store.key();\r\n                        var isComplexKey = Array.isArray(key);\r\n                        if (!selectionFilter.length) {\r\n                            return false\r\n                        }\r\n                        if (isComplexKey && Array.isArray(selectionFilter[0]) && \"and\" === selectionFilter[1]) {\r\n                            for (var i = 0; i < selectionFilter.length; i++) {\r\n                                if (Array.isArray(selectionFilter[i])) {\r\n                                    if (selectionFilter[i][0] !== key[keyIndex] || \"=\" !== selectionFilter[i][1]) {\r\n                                        return true\r\n                                    }\r\n                                    keyIndex++\r\n                                }\r\n                            }\r\n                            return false\r\n                        }\r\n                        return key !== selectionFilter[0]\r\n                    }(this, selectionFilter) : selectedItemKeys.length > 1) {\r\n                    this.startSelectionWithCheckboxes()\r\n                } else if (isDeferredMode ? selectionFilter && !selectionFilter.length : 0 === selectedItemKeys.length && removedItemKeys.length) {\r\n                    this.stopSelectionWithCheckboxes()\r\n                }\r\n            }\r\n        },\r\n        _updateSelectedItems: function(args) {\r\n            var selectionChangedOptions;\r\n            var isDeferredMode = this.option(\"selection.deferred\");\r\n            var selectionFilter = this._selection.selectionFilter();\r\n            var dataController = this._dataController;\r\n            var items = dataController.items();\r\n            if (!items) {\r\n                return\r\n            }\r\n            var isSelectionWithCheckboxes = this.isSelectionWithCheckboxes();\r\n            var changedItemIndexes = this.getChangedItemIndexes(items);\r\n            this._updateCheckboxesState({\r\n                selectedItemKeys: args.selectedItemKeys,\r\n                removedItemKeys: args.removedItemKeys,\r\n                selectionFilter: selectionFilter,\r\n                isDeferredMode: isDeferredMode\r\n            });\r\n            if (changedItemIndexes.length || isSelectionWithCheckboxes !== this.isSelectionWithCheckboxes()) {\r\n                dataController.updateItems({\r\n                    changeType: \"updateSelection\",\r\n                    itemIndexes: changedItemIndexes\r\n                })\r\n            }\r\n            if (isDeferredMode) {\r\n                this.option(\"selectionFilter\", selectionFilter);\r\n                selectionChangedOptions = {}\r\n            } else if (args.addedItemKeys.length || args.removedItemKeys.length) {\r\n                this._selectedItemsInternalChange = true;\r\n                this.option(\"selectedRowKeys\", args.selectedItemKeys.slice(0));\r\n                this._selectedItemsInternalChange = false;\r\n                selectionChangedOptions = {\r\n                    selectedRowsData: args.selectedItems.slice(0),\r\n                    selectedRowKeys: args.selectedItemKeys.slice(0),\r\n                    currentSelectedRowKeys: args.addedItemKeys.slice(0),\r\n                    currentDeselectedRowKeys: args.removedItemKeys.slice(0)\r\n                }\r\n            }\r\n            this._fireSelectionChanged(selectionChangedOptions)\r\n        },\r\n        getChangedItemIndexes: function(items) {\r\n            var itemIndexes = [];\r\n            var isDeferredSelection = this.option(\"selection.deferred\");\r\n            for (var i = 0, length = items.length; i < length; i++) {\r\n                var row = items[i];\r\n                var isItemSelected = this.isRowSelected(isDeferredSelection ? row.data : row.key);\r\n                if (this._selection.isDataItem(row) && row.isSelected !== isItemSelected) {\r\n                    itemIndexes.push(i)\r\n                }\r\n            }\r\n            return itemIndexes\r\n        },\r\n        callbackNames: function() {\r\n            return [\"selectionChanged\"]\r\n        },\r\n        optionChanged: function(args) {\r\n            this.callBase(args);\r\n            switch (args.name) {\r\n                case \"selection\":\r\n                    var oldSelectionMode = this._selectionMode;\r\n                    this.init();\r\n                    if (\"selection.showCheckBoxesMode\" !== args.fullName) {\r\n                        var selectionMode = this._selectionMode;\r\n                        var selectedRowKeys = this.option(\"selectedRowKeys\");\r\n                        if (oldSelectionMode !== selectionMode) {\r\n                            if (\"single\" === selectionMode) {\r\n                                if (selectedRowKeys.length > 1) {\r\n                                    selectedRowKeys = [selectedRowKeys[0]]\r\n                                }\r\n                            } else if (\"multiple\" !== selectionMode) {\r\n                                selectedRowKeys = []\r\n                            }\r\n                        }\r\n                        this.selectRows(selectedRowKeys).always(() => {\r\n                            this._fireSelectionChanged()\r\n                        })\r\n                    }\r\n                    this.getController(\"columns\").updateColumns();\r\n                    args.handled = true;\r\n                    break;\r\n                case \"selectionFilter\":\r\n                    this._selection.selectionFilter(args.value);\r\n                    args.handled = true;\r\n                    break;\r\n                case \"selectedRowKeys\":\r\n                    var value = args.value || [];\r\n                    if (Array.isArray(value) && !this._selectedItemsInternalChange && (this.component.getDataSource() || !value.length)) {\r\n                        this.selectRows(value)\r\n                    }\r\n                    args.handled = true\r\n            }\r\n        },\r\n        publicMethods: function() {\r\n            return [\"selectRows\", \"deselectRows\", \"selectRowsByIndexes\", \"getSelectedRowKeys\", \"getSelectedRowsData\", \"clearSelection\", \"selectAll\", \"deselectAll\", \"startSelectionWithCheckboxes\", \"stopSelectionWithCheckboxes\", \"isRowSelected\"]\r\n        },\r\n        isRowSelected: function(arg) {\r\n            return this._selection.isItemSelected(arg)\r\n        },\r\n        isSelectColumnVisible: function() {\r\n            return \"multiple\" === this.option(SELECTION_MODE) && (\"always\" === this.option(SHOW_CHECKBOXES_MODE) || \"onClick\" === this.option(SHOW_CHECKBOXES_MODE) || this._isSelectionWithCheckboxes)\r\n        },\r\n        _isOnePageSelectAll: function() {\r\n            return \"page\" === this.option(\"selection.selectAllMode\")\r\n        },\r\n        isSelectAll: function() {\r\n            return this._selection.getSelectAllState(this._isOnePageSelectAll())\r\n        },\r\n        selectAll: function() {\r\n            if (\"onClick\" === this.option(SHOW_CHECKBOXES_MODE)) {\r\n                this.startSelectionWithCheckboxes()\r\n            }\r\n            return this._selection.selectAll(this._isOnePageSelectAll())\r\n        },\r\n        deselectAll: function() {\r\n            return this._selection.deselectAll(this._isOnePageSelectAll())\r\n        },\r\n        clearSelection: function() {\r\n            return this.selectedItemKeys([])\r\n        },\r\n        refresh: function() {\r\n            var selectedRowKeys = this.option(\"selectedRowKeys\") || [];\r\n            if (!this.option(\"selection.deferred\") && selectedRowKeys.length) {\r\n                return this.selectedItemKeys(selectedRowKeys)\r\n            }\r\n            return (new Deferred).resolve().promise()\r\n        },\r\n        selectedItemKeys: function(value, preserve, isDeselect, isSelectAll) {\r\n            return this._selection.selectedItemKeys(value, preserve, isDeselect, isSelectAll)\r\n        },\r\n        getSelectedRowKeys: function() {\r\n            return this._selection.getSelectedItemKeys()\r\n        },\r\n        selectRows: function(keys, preserve) {\r\n            return this.selectedItemKeys(keys, preserve)\r\n        },\r\n        deselectRows: function(keys) {\r\n            return this.selectedItemKeys(keys, true, true)\r\n        },\r\n        selectRowsByIndexes: function(indexes) {\r\n            var items = this._dataController.items();\r\n            var keys = [];\r\n            if (!Array.isArray(indexes)) {\r\n                indexes = Array.prototype.slice.call(arguments, 0)\r\n            }\r\n            each(indexes, (function() {\r\n                var item = items[this];\r\n                if (item && \"data\" === item.rowType) {\r\n                    keys.push(item.key)\r\n                }\r\n            }));\r\n            return this.selectRows(keys)\r\n        },\r\n        getSelectedRowsData: function() {\r\n            return this._selection.getSelectedItems()\r\n        },\r\n        changeItemSelection: function(visibleItemIndex, keys) {\r\n            keys = keys || {};\r\n            if (this.isSelectionWithCheckboxes()) {\r\n                keys.control = true\r\n            }\r\n            var loadedItemIndex = visibleItemIndex + this._dataController.getRowIndexOffset() - this._dataController.getRowIndexOffset(true);\r\n            return this._selection.changeItemSelection(loadedItemIndex, keys)\r\n        },\r\n        focusedItemIndex: function(itemIndex) {\r\n            if (isDefined(itemIndex)) {\r\n                this._selection._focusedItemIndex = itemIndex\r\n            } else {\r\n                return this._selection._focusedItemIndex\r\n            }\r\n        },\r\n        isSelectionWithCheckboxes: function() {\r\n            return \"multiple\" === this.option(SELECTION_MODE) && (\"always\" === this.option(SHOW_CHECKBOXES_MODE) || this._isSelectionWithCheckboxes)\r\n        },\r\n        startSelectionWithCheckboxes: function() {\r\n            if (\"multiple\" === this.option(SELECTION_MODE) && !this.isSelectionWithCheckboxes()) {\r\n                this._isSelectionWithCheckboxes = true;\r\n                this._updateSelectColumn();\r\n                return true\r\n            }\r\n            return false\r\n        },\r\n        stopSelectionWithCheckboxes: function() {\r\n            if (this._isSelectionWithCheckboxes) {\r\n                this._isSelectionWithCheckboxes = false;\r\n                this._updateSelectColumn();\r\n                return true\r\n            }\r\n            return false\r\n        }\r\n    }\r\n}());\r\nexport var selectionModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            selection: {\r\n                mode: \"none\",\r\n                showCheckBoxesMode: \"onClick\",\r\n                allowSelectAll: true,\r\n                selectAllMode: \"allPages\",\r\n                maxFilterLengthInRequest: 1500,\r\n                deferred: false\r\n            },\r\n            selectionFilter: [],\r\n            selectedRowKeys: []\r\n        }\r\n    },\r\n    controllers: {\r\n        selection: SelectionController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                init: function() {\r\n                    var selectionController = this.getController(\"selection\");\r\n                    var isDeferredMode = this.option(\"selection.deferred\");\r\n                    this.callBase.apply(this, arguments);\r\n                    if (isDeferredMode) {\r\n                        selectionController._updateCheckboxesState({\r\n                            isDeferredMode: true,\r\n                            selectionFilter: this.option(\"selectionFilter\")\r\n                        })\r\n                    }\r\n                },\r\n                _loadDataSource: function() {\r\n                    var that = this;\r\n                    return that.callBase().done((function() {\r\n                        that.getController(\"selection\").refresh()\r\n                    }))\r\n                },\r\n                _processDataItem: function(item, options) {\r\n                    var that = this;\r\n                    var selectionController = that.getController(\"selection\");\r\n                    var hasSelectColumn = selectionController.isSelectColumnVisible();\r\n                    var isDeferredSelection = options.isDeferredSelection = void 0 === options.isDeferredSelection ? this.option(\"selection.deferred\") : options.isDeferredSelection;\r\n                    var dataItem = this.callBase.apply(this, arguments);\r\n                    dataItem.isSelected = selectionController.isRowSelected(isDeferredSelection ? dataItem.data : dataItem.key);\r\n                    if (hasSelectColumn && dataItem.values) {\r\n                        for (var i = 0; i < options.visibleColumns.length; i++) {\r\n                            if (\"select\" === options.visibleColumns[i].command) {\r\n                                dataItem.values[i] = dataItem.isSelected;\r\n                                break\r\n                            }\r\n                        }\r\n                    }\r\n                    return dataItem\r\n                },\r\n                refresh: function(options) {\r\n                    var that = this;\r\n                    var d = new Deferred;\r\n                    this.callBase.apply(this, arguments).done((function() {\r\n                        if (!options || options.selection) {\r\n                            that.getController(\"selection\").refresh().done(d.resolve).fail(d.reject)\r\n                        } else {\r\n                            d.resolve()\r\n                        }\r\n                    })).fail(d.reject);\r\n                    return d.promise()\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if ((!e || \"refresh\" === e.changeType) && !this._repaintChangesOnly) {\r\n                        this.getController(\"selection\").focusedItemIndex(-1)\r\n                    }\r\n                },\r\n                _applyChange: function(change) {\r\n                    if (change && \"updateSelection\" === change.changeType) {\r\n                        change.items.forEach((item, index) => {\r\n                            var currentItem = this._items[index];\r\n                            if (currentItem) {\r\n                                currentItem.isSelected = item.isSelected;\r\n                                currentItem.values = item.values\r\n                            }\r\n                        });\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _endUpdateCore: function() {\r\n                    var changes = this._changes;\r\n                    var isUpdateSelection = changes.length > 1 && changes.every(change => \"updateSelection\" === change.changeType);\r\n                    if (isUpdateSelection) {\r\n                        var itemIndexes = changes.map(change => change.itemIndexes || []).reduce((a, b) => a.concat(b));\r\n                        this._changes = [{\r\n                            changeType: \"updateSelection\",\r\n                            itemIndexes: itemIndexes\r\n                        }]\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                }\r\n            },\r\n            contextMenu: {\r\n                _contextMenuPrepared: function(options) {\r\n                    var dxEvent = options.event;\r\n                    if (dxEvent.originalEvent && \"dxhold\" !== dxEvent.originalEvent.type || options.items && options.items.length > 0) {\r\n                        return\r\n                    }\r\n                    processLongTap(this, dxEvent)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            columnHeadersView: {\r\n                init: function() {\r\n                    this.callBase();\r\n                    this.getController(\"selection\").selectionChanged.add(this._updateSelectAllValue.bind(this))\r\n                },\r\n                _updateSelectAllValue: function() {\r\n                    var $element = this.element();\r\n                    var $editor = $element && $element.find(\".\" + SELECT_CHECKBOX_CLASS);\r\n                    if ($element && $editor.length && \"multiple\" === this.option(\"selection.mode\")) {\r\n                        var selectAllValue = this.getController(\"selection\").isSelectAll();\r\n                        var hasSelection = false !== selectAllValue;\r\n                        var isVisible = this.option(\"selection.allowSelectAll\") ? !this.getController(\"data\").isEmpty() : hasSelection;\r\n                        $editor.dxCheckBox(\"instance\").option({\r\n                            visible: isVisible,\r\n                            value: selectAllValue\r\n                        })\r\n                    }\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    this.callBase(e);\r\n                    if (!e || \"refresh\" === e.changeType) {\r\n                        this._updateSelectAllValue()\r\n                    }\r\n                },\r\n                _renderSelectAllCheckBox: function($container, column) {\r\n                    var that = this;\r\n                    var selectionController = that.getController(\"selection\");\r\n                    var isEmptyData = that.getController(\"data\").isEmpty();\r\n                    var groupElement = $(\"<div>\").appendTo($container).addClass(SELECT_CHECKBOX_CLASS);\r\n                    that.setAria(\"label\", messageLocalization.format(\"dxDataGrid-ariaSelectAll\"), $container);\r\n                    that.getController(\"editorFactory\").createEditor(groupElement, extend({}, column, {\r\n                        parentType: \"headerRow\",\r\n                        dataType: \"boolean\",\r\n                        value: selectionController.isSelectAll(),\r\n                        editorOptions: {\r\n                            visible: !isEmptyData && (that.option(\"selection.allowSelectAll\") || false !== selectionController.isSelectAll())\r\n                        },\r\n                        tabIndex: that.option(\"useLegacyKeyboardNavigation\") ? -1 : that.option(\"tabIndex\") || 0,\r\n                        setValue: function(value, e) {\r\n                            var allowSelectAll = that.option(\"selection.allowSelectAll\");\r\n                            e.component.option(\"visible\", allowSelectAll || false !== e.component.option(\"value\"));\r\n                            if (!e.event || selectionController.isSelectAll() === value) {\r\n                                return\r\n                            }\r\n                            if (e.value && !allowSelectAll) {\r\n                                e.component.option(\"value\", false)\r\n                            } else {\r\n                                e.value ? selectionController.selectAll() : selectionController.deselectAll()\r\n                            }\r\n                            e.event.preventDefault()\r\n                        }\r\n                    }));\r\n                    return groupElement\r\n                },\r\n                _attachSelectAllCheckBoxClickEvent: function($element) {\r\n                    eventsEngine.on($element, clickEventName, this.createAction((function(e) {\r\n                        var event = e.event;\r\n                        if (!$(event.target).closest(\".\" + SELECT_CHECKBOX_CLASS).length) {\r\n                            eventsEngine.trigger($(event.currentTarget).children(\".\" + SELECT_CHECKBOX_CLASS), clickEventName)\r\n                        }\r\n                        event.preventDefault()\r\n                    })))\r\n                }\r\n            },\r\n            rowsView: {\r\n                renderSelectCheckBoxContainer: function($container, options) {\r\n                    if (\"data\" === options.rowType && !options.row.isNewRow) {\r\n                        $container.addClass(EDITOR_CELL_CLASS);\r\n                        this._attachCheckBoxClickEvent($container);\r\n                        this.setAria(\"label\", messageLocalization.format(\"dxDataGrid-ariaSelectRow\"), $container);\r\n                        this._renderSelectCheckBox($container, options)\r\n                    } else {\r\n                        gridCoreUtils.setEmptyText($container)\r\n                    }\r\n                },\r\n                _renderSelectCheckBox: function(container, options) {\r\n                    var groupElement = $(\"<div>\").addClass(SELECT_CHECKBOX_CLASS).appendTo(container);\r\n                    this.getController(\"editorFactory\").createEditor(groupElement, extend({}, options.column, {\r\n                        parentType: \"dataRow\",\r\n                        dataType: \"boolean\",\r\n                        lookup: null,\r\n                        value: options.value,\r\n                        setValue: function(value, e) {\r\n                            var _e$event;\r\n                            if (\"keydown\" === (null === e || void 0 === e ? void 0 : null === (_e$event = e.event) || void 0 === _e$event ? void 0 : _e$event.type)) {\r\n                                eventsEngine.trigger(e.element, clickEventName, e)\r\n                            }\r\n                        },\r\n                        row: options.row\r\n                    }));\r\n                    return groupElement\r\n                },\r\n                _attachCheckBoxClickEvent: function($element) {\r\n                    eventsEngine.on($element, clickEventName, this.createAction((function(e) {\r\n                        var selectionController = this.getController(\"selection\");\r\n                        var event = e.event;\r\n                        var rowIndex = this.getRowIndex($(event.currentTarget).closest(\".\" + ROW_CLASS));\r\n                        if (rowIndex >= 0) {\r\n                            selectionController.startSelectionWithCheckboxes();\r\n                            selectionController.changeItemSelection(rowIndex, {\r\n                                shift: event.shiftKey\r\n                            });\r\n                            if ($(event.target).closest(\".\" + SELECT_CHECKBOX_CLASS).length) {\r\n                                this.getController(\"data\").updateItems({\r\n                                    changeType: \"updateSelection\",\r\n                                    itemIndexes: [rowIndex]\r\n                                })\r\n                            }\r\n                        }\r\n                    })))\r\n                },\r\n                _update: function(change) {\r\n                    var that = this;\r\n                    var tableElements = that.getTableElements();\r\n                    if (\"updateSelection\" === change.changeType) {\r\n                        if (tableElements.length > 0) {\r\n                            each(tableElements, (function(_, tableElement) {\r\n                                each(change.itemIndexes || [], (function(_, index) {\r\n                                    var $row;\r\n                                    if (change.items[index]) {\r\n                                        $row = that._getRowElements($(tableElement)).eq(index);\r\n                                        if ($row.length) {\r\n                                            var isSelected = change.items[index].isSelected;\r\n                                            $row.toggleClass(ROW_SELECTION_CLASS, void 0 === isSelected ? false : isSelected).find(\".\" + SELECT_CHECKBOX_CLASS).dxCheckBox(\"option\", \"value\", isSelected);\r\n                                            that.setAria(\"selected\", isSelected, $row)\r\n                                        }\r\n                                    }\r\n                                }))\r\n                            }));\r\n                            that._updateCheckboxesClass()\r\n                        }\r\n                    } else {\r\n                        that.callBase(change)\r\n                    }\r\n                },\r\n                _createTable: function() {\r\n                    var that = this;\r\n                    var selectionMode = that.option(\"selection.mode\");\r\n                    var $table = that.callBase.apply(that, arguments);\r\n                    if (\"none\" !== selectionMode) {\r\n                        if (\"onLongTap\" === that.option(SHOW_CHECKBOXES_MODE) || !touch) {\r\n                            eventsEngine.on($table, addNamespace(holdEvent.name, \"dxDataGridRowsView\"), \".\" + DATA_ROW_CLASS, that.createAction((function(e) {\r\n                                processLongTap(that.component, e.event);\r\n                                e.event.stopPropagation()\r\n                            })))\r\n                        }\r\n                        eventsEngine.on($table, \"mousedown selectstart\", that.createAction((function(e) {\r\n                            var event = e.event;\r\n                            if (event.shiftKey) {\r\n                                event.preventDefault()\r\n                            }\r\n                        })))\r\n                    }\r\n                    return $table\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var isSelected = !!row.isSelected;\r\n                        if (isSelected) {\r\n                            $row.addClass(ROW_SELECTION_CLASS)\r\n                        }\r\n                        this.setAria(\"selected\", isSelected, $row)\r\n                    }\r\n                    return $row\r\n                },\r\n                _rowClick: function(e) {\r\n                    var dxEvent = e.event;\r\n                    var isSelectionDisabled = $(dxEvent.target).closest(\".\" + SELECTION_DISABLED_CLASS).length;\r\n                    if (!this.isClickableElement($(dxEvent.target))) {\r\n                        if (!isSelectionDisabled && (\"multiple\" !== this.option(SELECTION_MODE) || \"always\" !== this.option(SHOW_CHECKBOXES_MODE))) {\r\n                            if (this.getController(\"selection\").changeItemSelection(e.rowIndex, {\r\n                                    control: isCommandKeyPressed(dxEvent),\r\n                                    shift: dxEvent.shiftKey\r\n                                })) {\r\n                                dxEvent.preventDefault();\r\n                                e.handled = true\r\n                            }\r\n                        }\r\n                        this.callBase(e)\r\n                    }\r\n                },\r\n                isClickableElement: function($target) {\r\n                    var isCommandSelect = $target.closest(\".\" + COMMAND_SELECT_CLASS).length;\r\n                    return !!isCommandSelect\r\n                },\r\n                _renderCore: function(change) {\r\n                    this.callBase(change);\r\n                    this._updateCheckboxesClass()\r\n                },\r\n                _updateCheckboxesClass: function() {\r\n                    var tableElements = this.getTableElements();\r\n                    var selectionController = this.getController(\"selection\");\r\n                    var isCheckBoxesHidden = selectionController.isSelectColumnVisible() && !selectionController.isSelectionWithCheckboxes();\r\n                    each(tableElements, (function(_, tableElement) {\r\n                        $(tableElement).toggleClass(CHECKBOXES_HIDDEN_CLASS, isCheckBoxesHidden)\r\n                    }))\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.selection.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    selectionModule\r\n} from \"../grid_core/ui.grid_core.selection\";\r\ngridCore.registerModule(\"selection\", selectionModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_chooser.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    deferUpdate,\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    ColumnsView\r\n} from \"./ui.grid_core.columns_view\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    isMaterial as isMaterialTheme,\r\n    isGeneric,\r\n    current\r\n} from \"../themes\";\r\nimport Button from \"../button\";\r\nimport TreeView from \"../tree_view\";\r\nimport devices from \"../../core/devices\";\r\nimport Popup from \"../popup\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nvar COLUMN_CHOOSER_CLASS = \"column-chooser\";\r\nvar COLUMN_CHOOSER_BUTTON_CLASS = \"column-chooser-button\";\r\nvar NOTOUCH_ACTION_CLASS = \"notouch-action\";\r\nvar COLUMN_CHOOSER_LIST_CLASS = \"column-chooser-list\";\r\nvar COLUMN_CHOOSER_PLAIN_CLASS = \"column-chooser-plain\";\r\nvar COLUMN_CHOOSER_DRAG_CLASS = \"column-chooser-mode-drag\";\r\nvar COLUMN_CHOOSER_SELECT_CLASS = \"column-chooser-mode-select\";\r\nvar COLUMN_CHOOSER_ICON_NAME = \"column-chooser\";\r\nvar COLUMN_CHOOSER_ITEM_CLASS = \"dx-column-chooser-item\";\r\nvar TREEVIEW_NODE_SELECTOR = \".dx-treeview-node\";\r\nvar CHECKBOX_SELECTOR = \".dx-checkbox\";\r\nvar CLICK_TIMEOUT = 300;\r\nvar processItems = function(that, chooserColumns) {\r\n    var items = [];\r\n    var isSelectMode = \"select\" === that.option(\"columnChooser.mode\");\r\n    if (chooserColumns.length) {\r\n        each(chooserColumns, (function(index, column) {\r\n            var item = {\r\n                text: column.caption,\r\n                cssClass: column.cssClass,\r\n                allowHiding: column.allowHiding,\r\n                expanded: true,\r\n                id: column.index,\r\n                disabled: false,\r\n                disableCheckBox: false === column.allowHiding,\r\n                parentId: isDefined(column.ownerBand) ? column.ownerBand : null\r\n            };\r\n            if (isSelectMode) {\r\n                item.selected = column.visible\r\n            }\r\n            items.push(item)\r\n        }))\r\n    }\r\n    return items\r\n};\r\nvar ColumnChooserController = modules.ViewController.inherit({\r\n    renderShowColumnChooserButton: function($element) {\r\n        var that = this;\r\n        var columnChooserButtonClass = that.addWidgetPrefix(COLUMN_CHOOSER_BUTTON_CLASS);\r\n        var columnChooserEnabled = that.option(\"columnChooser.enabled\");\r\n        var $showColumnChooserButton = $element.find(\".\" + columnChooserButtonClass);\r\n        var $columnChooserButton;\r\n        if (columnChooserEnabled) {\r\n            if (!$showColumnChooserButton.length) {\r\n                $columnChooserButton = $(\"<div>\").addClass(columnChooserButtonClass).appendTo($element);\r\n                that._createComponent($columnChooserButton, Button, {\r\n                    icon: COLUMN_CHOOSER_ICON_NAME,\r\n                    onClick: function() {\r\n                        that.getView(\"columnChooserView\").showColumnChooser()\r\n                    },\r\n                    hint: that.option(\"columnChooser.title\"),\r\n                    integrationOptions: {}\r\n                })\r\n            } else {\r\n                $showColumnChooserButton.show()\r\n            }\r\n        } else {\r\n            $showColumnChooserButton.hide()\r\n        }\r\n    },\r\n    getPosition: function() {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        return {\r\n            my: \"right bottom\",\r\n            at: \"right bottom\",\r\n            of: rowsView && rowsView.element(),\r\n            collision: \"fit\",\r\n            offset: \"-2 -2\",\r\n            boundaryOffset: \"2 2\"\r\n        }\r\n    }\r\n});\r\nvar ColumnChooserView = ColumnsView.inherit({\r\n    _resizeCore: noop,\r\n    _isWinDevice: function() {\r\n        return !!devices.real().win\r\n    },\r\n    _updateList: function(change) {\r\n        var items;\r\n        var $popupContent = this._popupContainer.$content();\r\n        var isSelectMode = \"select\" === this.option(\"columnChooser.mode\");\r\n        var columnChooserList = this._columnChooserList;\r\n        var chooserColumns = this._columnsController.getChooserColumns(isSelectMode);\r\n        if (isSelectMode && columnChooserList && change && \"selection\" === change.changeType) {\r\n            items = processItems(this, chooserColumns);\r\n            for (var i = 0; i < items.length; i++) {\r\n                var selected = items[i].selected;\r\n                var id = items[i].id;\r\n                if (id === change.columnIndex) {\r\n                    if (selected) {\r\n                        columnChooserList.selectItem(id, selected)\r\n                    } else {\r\n                        columnChooserList.unselectItem(id, selected)\r\n                    }\r\n                }\r\n            }\r\n        } else if (!isSelectMode || !columnChooserList || \"full\" === change) {\r\n            this._popupContainer.$wrapper().toggleClass(this.addWidgetPrefix(COLUMN_CHOOSER_DRAG_CLASS), !isSelectMode).toggleClass(this.addWidgetPrefix(COLUMN_CHOOSER_SELECT_CLASS), isSelectMode);\r\n            items = processItems(this, chooserColumns);\r\n            this._renderTreeView($popupContent, items)\r\n        }\r\n    },\r\n    _initializePopupContainer: function() {\r\n        var that = this;\r\n        var $element = that.element().addClass(that.addWidgetPrefix(COLUMN_CHOOSER_CLASS));\r\n        var columnChooserOptions = that.option(\"columnChooser\");\r\n        var themeName = current();\r\n        var isGenericTheme = isGeneric(themeName);\r\n        var isMaterial = isMaterialTheme(themeName);\r\n        var dxPopupOptions = {\r\n            visible: false,\r\n            shading: false,\r\n            showCloseButton: false,\r\n            dragEnabled: true,\r\n            resizeEnabled: true,\r\n            copyRootClassesToWrapper: true,\r\n            _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n            toolbarItems: [{\r\n                text: columnChooserOptions.title,\r\n                toolbar: \"top\",\r\n                location: isGenericTheme || isMaterial ? \"before\" : \"center\"\r\n            }],\r\n            position: that.getController(\"columnChooser\").getPosition(),\r\n            width: columnChooserOptions.width,\r\n            height: columnChooserOptions.height,\r\n            rtlEnabled: that.option(\"rtlEnabled\"),\r\n            onHidden: function() {\r\n                if (that._isWinDevice()) {\r\n                    $(\"body\").removeClass(that.addWidgetPrefix(NOTOUCH_ACTION_CLASS))\r\n                }\r\n            },\r\n            container: columnChooserOptions.container\r\n        };\r\n        if (isGenericTheme || isMaterial) {\r\n            extend(dxPopupOptions, {\r\n                showCloseButton: true\r\n            })\r\n        } else {\r\n            dxPopupOptions.toolbarItems[dxPopupOptions.toolbarItems.length] = {\r\n                shortcut: \"cancel\"\r\n            }\r\n        }\r\n        if (!isDefined(this._popupContainer)) {\r\n            that._popupContainer = that._createComponent($element, Popup, dxPopupOptions);\r\n            that._popupContainer.on(\"optionChanged\", (function(args) {\r\n                if (\"visible\" === args.name) {\r\n                    that.renderCompleted.fire()\r\n                }\r\n            }))\r\n        } else {\r\n            this._popupContainer.option(dxPopupOptions)\r\n        }\r\n    },\r\n    _renderCore: function(change) {\r\n        if (this._popupContainer) {\r\n            this._updateList(change)\r\n        }\r\n    },\r\n    _renderTreeView: function($container, items) {\r\n        var that = this;\r\n        var columnChooser = this.option(\"columnChooser\");\r\n        var isSelectMode = \"select\" === columnChooser.mode;\r\n        var treeViewConfig = {\r\n            items: items,\r\n            dataStructure: \"plain\",\r\n            activeStateEnabled: true,\r\n            focusStateEnabled: true,\r\n            hoverStateEnabled: true,\r\n            itemTemplate: \"item\",\r\n            showCheckBoxesMode: \"none\",\r\n            rootValue: null,\r\n            searchEnabled: columnChooser.allowSearch,\r\n            searchTimeout: columnChooser.searchTimeout,\r\n            onItemRendered: function(e) {\r\n                if (e.itemData.disableCheckBox) {\r\n                    var $treeViewNode = $(e.itemElement).closest(TREEVIEW_NODE_SELECTOR);\r\n                    var $checkBox;\r\n                    if ($treeViewNode.length) {\r\n                        $checkBox = $treeViewNode.find(CHECKBOX_SELECTOR);\r\n                        if ($checkBox.length) {\r\n                            var checkBoxInstance = $checkBox.data(\"dxCheckBox\");\r\n                            checkBoxInstance && checkBoxInstance.option(\"disabled\", true)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        var scrollableInstance = $container.find(\".dx-scrollable\").data(\"dxScrollable\");\r\n        var scrollTop = scrollableInstance && scrollableInstance.scrollTop();\r\n        if (isSelectMode && !this._columnsController.isBandColumnsUsed()) {\r\n            $container.addClass(this.addWidgetPrefix(COLUMN_CHOOSER_PLAIN_CLASS))\r\n        }\r\n        treeViewConfig.onContentReady = function(e) {\r\n            deferUpdate((function() {\r\n                if (scrollTop) {\r\n                    var scrollable = $(e.element).find(\".dx-scrollable\").data(\"dxScrollable\");\r\n                    scrollable && scrollable.scrollTo({\r\n                        y: scrollTop\r\n                    })\r\n                }\r\n                that.renderCompleted.fire()\r\n            }))\r\n        };\r\n        if (this._isWinDevice()) {\r\n            treeViewConfig.useNativeScrolling = false\r\n        }\r\n        extend(treeViewConfig, isSelectMode ? this._prepareSelectModeConfig() : this._prepareDragModeConfig());\r\n        if (this._columnChooserList) {\r\n            if (!treeViewConfig.searchEnabled) {\r\n                treeViewConfig.searchValue = \"\"\r\n            }\r\n            this._columnChooserList.option(treeViewConfig)\r\n        } else {\r\n            this._columnChooserList = this._createComponent($container, TreeView, treeViewConfig);\r\n            $container.addClass(this.addWidgetPrefix(COLUMN_CHOOSER_LIST_CLASS))\r\n        }\r\n    },\r\n    _prepareDragModeConfig: function() {\r\n        var columnChooserOptions = this.option(\"columnChooser\");\r\n        return {\r\n            noDataText: columnChooserOptions.emptyPanelText,\r\n            activeStateEnabled: false,\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            itemTemplate: function(data, index, item) {\r\n                $(item).text(data.text).parent().addClass(data.cssClass).addClass(COLUMN_CHOOSER_ITEM_CLASS)\r\n            }\r\n        }\r\n    },\r\n    _prepareSelectModeConfig: function() {\r\n        var that = this;\r\n        return {\r\n            selectNodesRecursive: false,\r\n            showCheckBoxesMode: \"normal\",\r\n            onItemSelectionChanged: function(e) {\r\n                var visibleColumns = that._columnsController.getVisibleColumns().filter((function(item) {\r\n                    return !item.command\r\n                }));\r\n                var isLastColumnUnselected = 1 === visibleColumns.length && !e.itemData.selected;\r\n                if (isLastColumnUnselected) {\r\n                    e.component.selectItem(e.itemElement)\r\n                } else {\r\n                    setTimeout((function() {\r\n                        that._columnsController.columnOption(e.itemData.id, \"visible\", e.itemData.selected)\r\n                    }), CLICK_TIMEOUT)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var changeTypes = e.changeTypes;\r\n        var optionNames = e.optionNames;\r\n        var isSelectMode = \"select\" === this.option(\"columnChooser.mode\");\r\n        this.callBase(e);\r\n        if (isSelectMode) {\r\n            var needPartialRender = optionNames.visible && 1 === optionNames.length && void 0 !== e.columnIndex;\r\n            var needFullRender = optionNames.showInColumnChooser || optionNames.caption || optionNames.visible || changeTypes.columns && optionNames.all;\r\n            if (needPartialRender) {\r\n                this.render(null, {\r\n                    changeType: \"selection\",\r\n                    columnIndex: e.columnIndex\r\n                })\r\n            } else if (needFullRender) {\r\n                this.render(null, \"full\")\r\n            }\r\n        }\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"columnChooser\":\r\n                this._initializePopupContainer();\r\n                this.render(null, \"full\");\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    getColumnElements: function() {\r\n        var result = [];\r\n        var $node;\r\n        var isSelectMode = \"select\" === this.option(\"columnChooser.mode\");\r\n        var chooserColumns = this._columnsController.getChooserColumns(isSelectMode);\r\n        var $content = this._popupContainer && this._popupContainer.$content();\r\n        var $nodes = $content && $content.find(\".dx-treeview-node\");\r\n        if ($nodes) {\r\n            chooserColumns.forEach((function(column) {\r\n                $node = $nodes.filter(\"[data-item-id = '\" + column.index + \"']\");\r\n                var item = $node.length ? $node.children(\".\" + COLUMN_CHOOSER_ITEM_CLASS).get(0) : null;\r\n                result.push(item)\r\n            }))\r\n        }\r\n        return $(result)\r\n    },\r\n    getName: function() {\r\n        return \"columnChooser\"\r\n    },\r\n    getColumns: function() {\r\n        return this._columnsController.getChooserColumns()\r\n    },\r\n    allowDragging: function(column, sourceLocation) {\r\n        var columnVisible = column && column.allowHiding && (\"columnChooser\" !== sourceLocation || !column.visible && this._columnsController.isParentColumnVisible(column.index));\r\n        return this.isColumnChooserVisible() && columnVisible\r\n    },\r\n    getBoundingRect: function() {\r\n        var container = this._popupContainer && this._popupContainer.$overlayContent();\r\n        if (container && container.is(\":visible\")) {\r\n            var offset = container.offset();\r\n            return {\r\n                left: offset.left,\r\n                top: offset.top,\r\n                right: offset.left + getOuterWidth(container),\r\n                bottom: offset.top + getOuterHeight(container)\r\n            }\r\n        }\r\n        return null\r\n    },\r\n    showColumnChooser: function() {\r\n        if (!this._popupContainer) {\r\n            this._initializePopupContainer();\r\n            this.render()\r\n        }\r\n        this._popupContainer.show();\r\n        if (this._isWinDevice()) {\r\n            $(\"body\").addClass(this.addWidgetPrefix(NOTOUCH_ACTION_CLASS))\r\n        }\r\n    },\r\n    hideColumnChooser: function() {\r\n        if (this._popupContainer) {\r\n            this._popupContainer.hide()\r\n        }\r\n    },\r\n    isColumnChooserVisible: function() {\r\n        var popupContainer = this._popupContainer;\r\n        return popupContainer && popupContainer.option(\"visible\")\r\n    },\r\n    publicMethods: function() {\r\n        return [\"showColumnChooser\", \"hideColumnChooser\"]\r\n    }\r\n});\r\nexport var columnChooserModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            columnChooser: {\r\n                enabled: false,\r\n                allowSearch: false,\r\n                searchTimeout: 500,\r\n                mode: \"dragAndDrop\",\r\n                width: 250,\r\n                height: 260,\r\n                title: messageLocalization.format(\"dxDataGrid-columnChooserTitle\"),\r\n                emptyPanelText: messageLocalization.format(\"dxDataGrid-columnChooserEmptyText\"),\r\n                container: void 0\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        columnChooser: ColumnChooserController\r\n    },\r\n    views: {\r\n        columnChooserView: ColumnChooserView\r\n    },\r\n    extenders: {\r\n        views: {\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    return this._appendColumnChooserItem(items)\r\n                },\r\n                _appendColumnChooserItem: function(items) {\r\n                    var that = this;\r\n                    var columnChooserEnabled = that.option(\"columnChooser.enabled\");\r\n                    if (columnChooserEnabled) {\r\n                        var hintText = that.option(\"columnChooser.title\");\r\n                        var toolbarItem = {\r\n                            widget: \"dxButton\",\r\n                            options: {\r\n                                icon: COLUMN_CHOOSER_ICON_NAME,\r\n                                onClick: function() {\r\n                                    that.component.getView(\"columnChooserView\").showColumnChooser()\r\n                                },\r\n                                hint: hintText,\r\n                                text: hintText,\r\n                                onInitialized: function(e) {\r\n                                    $(e.element).addClass(that._getToolbarButtonClass(that.addWidgetPrefix(COLUMN_CHOOSER_BUTTON_CLASS)))\r\n                                }\r\n                            },\r\n                            showText: \"inMenu\",\r\n                            location: \"after\",\r\n                            name: \"columnChooserButton\",\r\n                            locateInMenu: \"auto\",\r\n                            sortIndex: 40\r\n                        };\r\n                        items.push(toolbarItem)\r\n                    }\r\n                    return items\r\n                },\r\n                optionChanged: function(args) {\r\n                    switch (args.name) {\r\n                        case \"columnChooser\":\r\n                            this._invalidate();\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                isVisible: function() {\r\n                    var columnChooserEnabled = this.option(\"columnChooser.enabled\");\r\n                    return this.callBase() || columnChooserEnabled\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            columns: {\r\n                allowMoveColumn: function(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation) {\r\n                    var columnChooserMode = this.option(\"columnChooser.mode\");\r\n                    var isMoveColumnDisallowed = \"select\" === columnChooserMode && \"columnChooser\" === targetLocation;\r\n                    return isMoveColumnDisallowed ? false : this.callBase(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.column_chooser.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnChooserModule\r\n} from \"../grid_core/ui.grid_core.column_chooser\";\r\nexport var ColumnChooserController = columnChooserModule.controllers.columnChooser;\r\nexport var ColumnChooserView = columnChooserModule.views.columnChooserView;\r\ngridCore.registerModule(\"columnChooser\", columnChooserModule);\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grouping.core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport Class from \"../../core/class\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    normalizeSortingInfo\r\n} from \"../../data/utils\";\r\nimport {\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nexport function createOffsetFilter(path, storeLoadOptions, lastLevelOnly) {\r\n    var groups = normalizeSortingInfo(storeLoadOptions.group);\r\n    var filter = [];\r\n    for (var i = lastLevelOnly ? path.length - 1 : 0; i < path.length; i++) {\r\n        var filterElement = [];\r\n        for (var j = 0; j <= i; j++) {\r\n            var selector = groups[j].selector;\r\n            if (i === j && (null === path[j] || false === path[j] || true === path[j])) {\r\n                if (false === path[j]) {\r\n                    filterElement.push([selector, \"=\", groups[j].desc ? true : null])\r\n                } else if (path[j] ? !groups[j].desc : groups[j].desc) {\r\n                    filterElement.push([selector, \"<>\", path[j]])\r\n                } else {\r\n                    filterElement.push([selector, \"<>\", null]);\r\n                    filterElement.push([selector, \"=\", null])\r\n                }\r\n            } else {\r\n                var currentFilter = [selector, i === j ? groups[j].desc ? \">\" : \"<\" : \"=\", path[j]];\r\n                if (\"<\" === currentFilter[1]) {\r\n                    filterElement.push([currentFilter, \"or\", [selector, \"=\", null]])\r\n                } else {\r\n                    filterElement.push(currentFilter)\r\n                }\r\n            }\r\n        }\r\n        filter.push(gridCore.combineFilters(filterElement))\r\n    }\r\n    filter = gridCore.combineFilters(filter, \"or\");\r\n    return gridCore.combineFilters([filter, storeLoadOptions.filter])\r\n}\r\nexport var GroupingHelper = Class.inherit(function() {\r\n    var findGroupInfoByKey = function(groupsInfo, key) {\r\n        var hash = groupsInfo.hash;\r\n        return hash && hash[JSON.stringify(key)]\r\n    };\r\n    var getGroupInfoIndexByOffset = function(groupsInfo, offset) {\r\n        var leftIndex = 0;\r\n        var rightIndex = groupsInfo.length - 1;\r\n        if (!groupsInfo.length) {\r\n            return 0\r\n        }\r\n        do {\r\n            var middleIndex = rightIndex + leftIndex >> 1;\r\n            if (groupsInfo[middleIndex].offset > offset) {\r\n                rightIndex = middleIndex\r\n            } else {\r\n                leftIndex = middleIndex\r\n            }\r\n        } while (rightIndex - leftIndex > 1);\r\n        var index;\r\n        for (index = leftIndex; index <= rightIndex; index++) {\r\n            if (groupsInfo[index].offset > offset) {\r\n                break\r\n            }\r\n        }\r\n        return index\r\n    };\r\n    return {\r\n        ctor: function(dataSourceAdapter) {\r\n            this._dataSource = dataSourceAdapter;\r\n            this.reset()\r\n        },\r\n        reset: function() {\r\n            this._groupsInfo = [];\r\n            this._totalCountCorrection = 0\r\n        },\r\n        totalCountCorrection: function() {\r\n            return this._totalCountCorrection\r\n        },\r\n        updateTotalItemsCount: function(totalCountCorrection) {\r\n            this._totalCountCorrection = totalCountCorrection || 0\r\n        },\r\n        isGroupItemCountable: function(item) {\r\n            return !this._isVirtualPaging() || !item.isContinuation\r\n        },\r\n        _isVirtualPaging: function() {\r\n            var scrollingMode = this._dataSource.option(\"scrolling.mode\");\r\n            return \"virtual\" === scrollingMode || \"infinite\" === scrollingMode\r\n        },\r\n        itemsCount: function() {\r\n            var dataSourceAdapter = this._dataSource;\r\n            var dataSource = dataSourceAdapter._dataSource;\r\n            var groupCount = gridCore.normalizeSortingInfo(dataSource.group() || []).length;\r\n            var itemsCount = function calculateItemsCount(that, items, groupsCount) {\r\n                var result = 0;\r\n                if (items) {\r\n                    if (!groupsCount) {\r\n                        result = items.length\r\n                    } else {\r\n                        for (var i = 0; i < items.length; i++) {\r\n                            if (that.isGroupItemCountable(items[i])) {\r\n                                result++\r\n                            }\r\n                            result += calculateItemsCount(that, items[i].items, groupsCount - 1)\r\n                        }\r\n                    }\r\n                }\r\n                return result\r\n            }(this, dataSource.items(), groupCount);\r\n            return itemsCount\r\n        },\r\n        foreachGroups: function(callback, childrenAtFirst, foreachCollapsedGroups, updateOffsets, updateParentOffsets) {\r\n            var that = this;\r\n            return function foreachGroupsCore(groupsInfo, callback, childrenAtFirst, parents) {\r\n                var callbackResults = [];\r\n\r\n                function executeCallback(callback, data, parents, callbackResults) {\r\n                    var callbackResult = data && callback(data, parents);\r\n                    callbackResult && callbackResults.push(callbackResult);\r\n                    return callbackResult\r\n                }\r\n                for (var i = 0; i < groupsInfo.length; i++) {\r\n                    parents.push(groupsInfo[i].data);\r\n                    if (!childrenAtFirst && false === executeCallback(callback, groupsInfo[i].data, parents, callbackResults)) {\r\n                        return false\r\n                    }\r\n                    if (!groupsInfo[i].data || groupsInfo[i].data.isExpanded || foreachCollapsedGroups) {\r\n                        var children = groupsInfo[i].children;\r\n                        var callbackResult = children.length && foreachGroupsCore(children, callback, childrenAtFirst, parents);\r\n                        callbackResult && callbackResults.push(callbackResult);\r\n                        if (false === callbackResult) {\r\n                            return false\r\n                        }\r\n                    }\r\n                    if (childrenAtFirst && false === executeCallback(callback, groupsInfo[i].data, parents, callbackResults)) {\r\n                        return false\r\n                    }\r\n                    if (!groupsInfo[i].data || groupsInfo[i].data.offset !== groupsInfo[i].offset) {\r\n                        updateOffsets = true\r\n                    }\r\n                    parents.pop()\r\n                }\r\n                var currentParents = updateParentOffsets && parents.slice(0);\r\n                return updateOffsets && when.apply($, callbackResults).always((function() {\r\n                    that._updateGroupInfoOffsets(groupsInfo, currentParents)\r\n                }))\r\n            }(that._groupsInfo, callback, childrenAtFirst, [])\r\n        },\r\n        _updateGroupInfoOffsets: function(groupsInfo, parents) {\r\n            parents = parents || [];\r\n            for (var index = 0; index < groupsInfo.length; index++) {\r\n                var groupInfo = groupsInfo[index];\r\n                if (groupInfo.data && groupInfo.data.offset !== groupInfo.offset) {\r\n                    groupInfo.offset = groupInfo.data.offset;\r\n                    for (var parentIndex = 0; parentIndex < parents.length; parentIndex++) {\r\n                        parents[parentIndex].offset = groupInfo.offset\r\n                    }\r\n                }\r\n            }\r\n            groupsInfo.sort((function(a, b) {\r\n                return a.offset - b.offset\r\n            }))\r\n        },\r\n        findGroupInfo: function(path) {\r\n            var groupInfo;\r\n            var groupsInfo = this._groupsInfo;\r\n            for (var pathIndex = 0; groupsInfo && pathIndex < path.length; pathIndex++) {\r\n                groupInfo = findGroupInfoByKey(groupsInfo, path[pathIndex]);\r\n                groupsInfo = groupInfo && groupInfo.children\r\n            }\r\n            return groupInfo && groupInfo.data\r\n        },\r\n        addGroupInfo: function(groupInfoData) {\r\n            var groupInfo;\r\n            var path = groupInfoData.path;\r\n            var groupsInfo = this._groupsInfo;\r\n            for (var pathIndex = 0; pathIndex < path.length; pathIndex++) {\r\n                groupInfo = findGroupInfoByKey(groupsInfo, path[pathIndex]);\r\n                if (!groupInfo) {\r\n                    groupInfo = {\r\n                        key: path[pathIndex],\r\n                        offset: groupInfoData.offset,\r\n                        data: {\r\n                            offset: groupInfoData.offset,\r\n                            isExpanded: true,\r\n                            path: path.slice(0, pathIndex + 1)\r\n                        },\r\n                        children: []\r\n                    };\r\n                    var index = getGroupInfoIndexByOffset(groupsInfo, groupInfoData.offset);\r\n                    groupsInfo.splice(index, 0, groupInfo);\r\n                    groupsInfo.hash = groupsInfo.hash || {};\r\n                    groupsInfo.hash[JSON.stringify(groupInfo.key)] = groupInfo\r\n                }\r\n                if (pathIndex === path.length - 1) {\r\n                    groupInfo.data = groupInfoData;\r\n                    if (groupInfo.offset !== groupInfoData.offset) {\r\n                        this._updateGroupInfoOffsets(groupsInfo)\r\n                    }\r\n                }\r\n                groupsInfo = groupInfo.children\r\n            }\r\n        },\r\n        allowCollapseAll: function() {\r\n            return true\r\n        },\r\n        refresh: function(options) {\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var groups = normalizeSortingInfo(storeLoadOptions.group || []);\r\n            var oldGroups = \"_group\" in this ? normalizeSortingInfo(this._group || []) : groups;\r\n            var groupsCount = Math.min(oldGroups.length, groups.length);\r\n            this._group = storeLoadOptions.group;\r\n            for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\r\n                if (oldGroups[groupIndex].selector !== groups[groupIndex].selector) {\r\n                    groupsCount = groupIndex;\r\n                    break\r\n                }\r\n            }\r\n            if (!groupsCount) {\r\n                this.reset()\r\n            } else {\r\n                ! function cleanGroupsInfo(groupsInfo, groupIndex, groupsCount) {\r\n                    for (var i = 0; i < groupsInfo.length; i++) {\r\n                        if (groupIndex + 1 >= groupsCount) {\r\n                            groupsInfo[i].children = []\r\n                        } else {\r\n                            cleanGroupsInfo(groupsInfo[i].children, groupIndex + 1, groupsCount)\r\n                        }\r\n                    }\r\n                }(this._groupsInfo, 0, groupsCount)\r\n            }\r\n        },\r\n        handleDataLoading: function() {},\r\n        handleDataLoaded: function(options, callBase) {\r\n            callBase(options)\r\n        },\r\n        handleDataLoadedCore: function(options, callBase) {\r\n            callBase(options)\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\r\nimport {\r\n    normalizeSortingInfo\r\n} from \"../../data/utils\";\r\nexport function createGroupFilter(path, storeLoadOptions) {\r\n    var groups = normalizeSortingInfo(storeLoadOptions.group);\r\n    var filter = [];\r\n    for (var i = 0; i < path.length; i++) {\r\n        filter.push([groups[i].selector, \"=\", path[i]])\r\n    }\r\n    if (storeLoadOptions.filter) {\r\n        filter.push(storeLoadOptions.filter)\r\n    }\r\n    return gridCoreUtils.combineFilters(filter)\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grouping.expanded.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    toComparable\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    keysEqual\r\n} from \"../../data/utils\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport storeHelper from \"../../data/store_helper\";\r\nimport dataGridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    GroupingHelper as GroupingHelperCore,\r\n    createOffsetFilter\r\n} from \"./ui.data_grid.grouping.core\";\r\nimport {\r\n    createGroupFilter\r\n} from \"./ui.data_grid.utils\";\r\nimport dataQuery from \"../../data/query\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar loadTotalCount = function(dataSource, options) {\r\n    var d = new Deferred;\r\n    var loadOptions = extend({\r\n        skip: 0,\r\n        take: 1,\r\n        requireTotalCount: true\r\n    }, options);\r\n    dataSource.load(loadOptions).done((function(data, extra) {\r\n        d.resolve(extra && extra.totalCount)\r\n    })).fail(d.reject.bind(d));\r\n    return d\r\n};\r\nexport var GroupingHelper = GroupingHelperCore.inherit(function() {\r\n    var foreachCollapsedGroups = function(that, callback, updateOffsets) {\r\n        return that.foreachGroups((function(groupInfo) {\r\n            if (!groupInfo.isExpanded) {\r\n                return callback(groupInfo)\r\n            }\r\n        }), false, false, updateOffsets, true)\r\n    };\r\n    var correctSkipLoadOption = function(that, skip) {\r\n        var skipCorrection = 0;\r\n        var resultSkip = skip || 0;\r\n        if (skip) {\r\n            foreachCollapsedGroups(that, (function(groupInfo) {\r\n                if (groupInfo.offset - skipCorrection >= skip) {\r\n                    return false\r\n                }\r\n                skipCorrection += groupInfo.count - 1\r\n            }));\r\n            resultSkip += skipCorrection\r\n        }\r\n        return resultSkip\r\n    };\r\n    var pathEquals = function(path1, path2) {\r\n        if (path1.length !== path2.length) {\r\n            return false\r\n        }\r\n        for (var i = 0; i < path1.length; i++) {\r\n            if (!keysEqual(null, path1[i], path2[i])) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    };\r\n    var updateGroupOffsets = function updateGroupOffsets(that, items, path, offset, additionalGroupInfo) {\r\n        if (!items) {\r\n            return\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (\"key\" in item && void 0 !== item.items) {\r\n                path.push(item.key);\r\n                if (additionalGroupInfo && pathEquals(additionalGroupInfo.path, path) && !item.isContinuation) {\r\n                    additionalGroupInfo.offset = offset\r\n                }\r\n                var groupInfo = that.findGroupInfo(path);\r\n                if (groupInfo && !item.isContinuation) {\r\n                    groupInfo.offset = offset\r\n                }\r\n                if (groupInfo && !groupInfo.isExpanded) {\r\n                    offset += groupInfo.count\r\n                } else {\r\n                    offset = updateGroupOffsets(that, item.items, path, offset, additionalGroupInfo)\r\n                }\r\n                path.pop()\r\n            } else {\r\n                offset++\r\n            }\r\n        }\r\n        return offset\r\n    };\r\n    var getGroupCount = function getGroupCount(item, groupCount) {\r\n        var count = item.count || item.items.length;\r\n        if (!item.count && groupCount > 1) {\r\n            count = 0;\r\n            for (var i = 0; i < item.items.length; i++) {\r\n                count += getGroupCount(item.items[i], groupCount - 1)\r\n            }\r\n        }\r\n        return count\r\n    };\r\n    return {\r\n        handleDataLoading: function(options) {\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var collapsedGroups = [];\r\n            var collapsedItemsCount = 0;\r\n            var skipFirstItem = false;\r\n            var take;\r\n            var group = options.loadOptions.group;\r\n            var skipCorrection = 0;\r\n            ! function(storeLoadOptions, loadOptions) {\r\n                if (loadOptions.group) {\r\n                    var groups = dataGridCore.normalizeSortingInfo(loadOptions.group);\r\n                    var sorts = dataGridCore.normalizeSortingInfo(storeLoadOptions.sort);\r\n                    storeLoadOptions.sort = storeHelper.arrangeSortingInfo(groups, sorts);\r\n                    delete loadOptions.group\r\n                }\r\n            }(storeLoadOptions, options.loadOptions);\r\n            options.group = options.group || group;\r\n            if (options.isCustomLoading) {\r\n                return\r\n            }\r\n            var loadOptions = extend({}, storeLoadOptions);\r\n            loadOptions.skip = correctSkipLoadOption(this, storeLoadOptions.skip);\r\n            if (loadOptions.skip && loadOptions.take && group) {\r\n                loadOptions.skip--;\r\n                loadOptions.take++;\r\n                skipFirstItem = true\r\n            }\r\n            if (loadOptions.take && group) {\r\n                take = loadOptions.take;\r\n                loadOptions.take++\r\n            }\r\n            foreachCollapsedGroups(this, (function(groupInfo) {\r\n                if (groupInfo.offset >= loadOptions.skip + loadOptions.take + skipCorrection) {\r\n                    return false\r\n                } else if (groupInfo.offset >= loadOptions.skip + skipCorrection && groupInfo.count) {\r\n                    skipCorrection += groupInfo.count - 1;\r\n                    collapsedGroups.push(groupInfo);\r\n                    collapsedItemsCount += groupInfo.count\r\n                }\r\n            }));\r\n            each(collapsedGroups, (function() {\r\n                loadOptions.filter = function(path, storeLoadOptions, group) {\r\n                    var groups = dataGridCore.normalizeSortingInfo(group || storeLoadOptions.group);\r\n                    var filter = [];\r\n                    for (var i = 0; i < path.length; i++) {\r\n                        var filterElement = [];\r\n                        for (var j = 0; j <= i; j++) {\r\n                            filterElement.push([groups[j].selector, i === j ? \"<>\" : \"=\", path[j]])\r\n                        }\r\n                        filter.push(dataGridCore.combineFilters(filterElement))\r\n                    }\r\n                    filter = dataGridCore.combineFilters(filter, \"or\");\r\n                    return dataGridCore.combineFilters([filter, storeLoadOptions.filter])\r\n                }(this.path, loadOptions, group)\r\n            }));\r\n            options.storeLoadOptions = loadOptions;\r\n            options.collapsedGroups = collapsedGroups;\r\n            options.collapsedItemsCount = collapsedItemsCount;\r\n            options.skip = loadOptions.skip || 0;\r\n            options.skipFirstItem = skipFirstItem;\r\n            options.take = take\r\n        },\r\n        handleDataLoaded: function(options, callBase) {\r\n            var collapsedGroups = options.collapsedGroups;\r\n            var groups = dataGridCore.normalizeSortingInfo(options.group);\r\n            var groupCount = groups.length;\r\n\r\n            function appendCollapsedPath(data, path, groups, collapsedGroup, offset) {\r\n                if (!data || !path.length || !groups.length) {\r\n                    return\r\n                }\r\n                var keyValue;\r\n                var i;\r\n                var pathValue = toComparable(path[0], true);\r\n                for (i = 0; i < data.length; i++) {\r\n                    keyValue = toComparable(data[i].key, true);\r\n                    if (offset >= collapsedGroup.offset || pathValue === keyValue) {\r\n                        break\r\n                    } else {\r\n                        offset += getGroupCount(data[i], groups.length)\r\n                    }\r\n                }\r\n                if (!data.length || pathValue !== keyValue) {\r\n                    data.splice(i, 0, {\r\n                        key: path[0],\r\n                        items: [],\r\n                        count: 1 === path.length ? collapsedGroup.count : void 0\r\n                    })\r\n                }\r\n                appendCollapsedPath(data[i].items, path.slice(1), groups.slice(1), collapsedGroup, offset)\r\n            }\r\n            if (options.collapsedItemsCount && options.extra && options.extra.totalCount >= 0) {\r\n                options.extra.totalCount += options.collapsedItemsCount\r\n            }\r\n            callBase(options);\r\n            if (groupCount) {\r\n                var data = options.data;\r\n                var query = dataQuery(data);\r\n                storeHelper.multiLevelGroup(query, groups).enumerate().done((function(groupedData) {\r\n                    data = groupedData\r\n                }));\r\n                if (collapsedGroups) {\r\n                    for (var pathIndex = 0; pathIndex < collapsedGroups.length; pathIndex++) {\r\n                        appendCollapsedPath(data, collapsedGroups[pathIndex].path, groups, collapsedGroups[pathIndex], options.skip)\r\n                    }\r\n                }\r\n                if (!options.isCustomLoading) {\r\n                    ! function processGroupItems(that, items, path, offset, skipFirstItem, take) {\r\n                        var removeLastItemsCount = 0;\r\n                        var needRemoveFirstItem = false;\r\n                        for (var i = 0; i < items.length; i++) {\r\n                            var item = items[i];\r\n                            if (void 0 !== item.items) {\r\n                                path.push(item.key);\r\n                                var groupInfo = that.findGroupInfo(path);\r\n                                if (groupInfo && !groupInfo.isExpanded) {\r\n                                    item.collapsedItems = item.items;\r\n                                    item.items = null;\r\n                                    offset += groupInfo.count;\r\n                                    take--;\r\n                                    if (take < 0) {\r\n                                        removeLastItemsCount++\r\n                                    }\r\n                                    if (skipFirstItem) {\r\n                                        needRemoveFirstItem = true\r\n                                    }\r\n                                } else if (item.items) {\r\n                                    var offsetInfo = processGroupItems(that, item.items, path, offset, skipFirstItem, take);\r\n                                    if (skipFirstItem) {\r\n                                        if (offsetInfo.offset - offset > 1) {\r\n                                            item.isContinuation = true\r\n                                        } else {\r\n                                            needRemoveFirstItem = true\r\n                                        }\r\n                                    }\r\n                                    offset = offsetInfo.offset;\r\n                                    take = offsetInfo.take;\r\n                                    if (take < 0) {\r\n                                        if (item.items.length) {\r\n                                            item.isContinuationOnNextPage = true\r\n                                        } else {\r\n                                            removeLastItemsCount++\r\n                                        }\r\n                                    }\r\n                                }\r\n                                path.pop()\r\n                            } else {\r\n                                if (skipFirstItem) {\r\n                                    needRemoveFirstItem = true\r\n                                }\r\n                                offset++;\r\n                                take--;\r\n                                if (take < 0) {\r\n                                    removeLastItemsCount++\r\n                                }\r\n                            }\r\n                            skipFirstItem = false\r\n                        }\r\n                        if (needRemoveFirstItem) {\r\n                            items.splice(0, 1)\r\n                        }\r\n                        if (removeLastItemsCount) {\r\n                            items.splice(-removeLastItemsCount, removeLastItemsCount)\r\n                        }\r\n                        return {\r\n                            offset: offset,\r\n                            take: take\r\n                        }\r\n                    }(this, data, [], options.skip, options.skipFirstItem, options.take)\r\n                }\r\n                options.data = data\r\n            }\r\n        },\r\n        isGroupItemCountable: function(item) {\r\n            return null === item.items\r\n        },\r\n        updateTotalItemsCount: function() {\r\n            var itemsCountCorrection = 0;\r\n            foreachCollapsedGroups(this, (function(groupInfo) {\r\n                if (groupInfo.count) {\r\n                    itemsCountCorrection -= groupInfo.count - 1\r\n                }\r\n            }));\r\n            this.callBase(itemsCountCorrection)\r\n        },\r\n        changeRowExpand: function(path) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var beginPageIndex = dataSource.beginPageIndex ? dataSource.beginPageIndex() : dataSource.pageIndex();\r\n            var dataSourceItems = dataSource.items();\r\n            var offset = correctSkipLoadOption(that, beginPageIndex * dataSource.pageSize());\r\n            var groupInfo = that.findGroupInfo(path);\r\n            var groupCountQuery;\r\n            if (groupInfo && !groupInfo.isExpanded) {\r\n                groupCountQuery = (new Deferred).resolve(groupInfo.count)\r\n            } else {\r\n                groupCountQuery = loadTotalCount(dataSource, {\r\n                    filter: createGroupFilter(path, {\r\n                        filter: dataSource.filter(),\r\n                        group: dataSource.group()\r\n                    })\r\n                })\r\n            }\r\n            return when(groupCountQuery).done((function(count) {\r\n                count = parseInt(count.length ? count[0] : count);\r\n                if (groupInfo) {\r\n                    updateGroupOffsets(that, dataSourceItems, [], offset);\r\n                    groupInfo.isExpanded = !groupInfo.isExpanded;\r\n                    groupInfo.count = count\r\n                } else {\r\n                    groupInfo = {\r\n                        offset: -1,\r\n                        count: count,\r\n                        path: path,\r\n                        isExpanded: false\r\n                    };\r\n                    updateGroupOffsets(that, dataSourceItems, [], offset, groupInfo);\r\n                    if (groupInfo.offset >= 0) {\r\n                        that.addGroupInfo(groupInfo)\r\n                    }\r\n                }\r\n                that.updateTotalItemsCount()\r\n            })).fail((function() {\r\n                dataSource._eventsStrategy.fireEvent(\"loadError\", arguments)\r\n            }))\r\n        },\r\n        allowCollapseAll: function() {\r\n            return false\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            var that = this;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var dataSource = that._dataSource;\r\n            this.callBase.apply(this, arguments);\r\n            if (operationTypes.reload) {\r\n                return foreachCollapsedGroups(that, (function(groupInfo) {\r\n                    var groupCountQuery = loadTotalCount(dataSource, {\r\n                        filter: createGroupFilter(groupInfo.path, storeLoadOptions)\r\n                    });\r\n                    var groupOffsetQuery = loadTotalCount(dataSource, {\r\n                        filter: createOffsetFilter(groupInfo.path, storeLoadOptions)\r\n                    });\r\n                    return when(groupOffsetQuery, groupCountQuery).done((function(offset, count) {\r\n                        offset = parseInt(offset.length ? offset[0] : offset);\r\n                        count = parseInt(count.length ? count[0] : count);\r\n                        groupInfo.offset = offset;\r\n                        if (groupInfo.count !== count) {\r\n                            groupInfo.count = count;\r\n                            that.updateTotalItemsCount()\r\n                        }\r\n                    }))\r\n                }), true)\r\n            }\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grouping.collapsed.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport dataGridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    GroupingHelper as GroupingHelperCore,\r\n    createOffsetFilter\r\n} from \"./ui.data_grid.grouping.core\";\r\nimport {\r\n    createGroupFilter\r\n} from \"./ui.data_grid.utils\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    errors as dataErrors\r\n} from \"../../data/errors\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\n\r\nfunction getContinuationGroupCount(groupOffset, pageSize, groupSize, groupIndex) {\r\n    groupIndex = groupIndex || 0;\r\n    if (pageSize > 1 && groupSize > 0) {\r\n        var pageOffset = groupOffset - Math.floor(groupOffset / pageSize) * pageSize || pageSize;\r\n        pageOffset += groupSize - groupIndex - 2;\r\n        if (pageOffset < 0) {\r\n            pageOffset += pageSize\r\n        }\r\n        return Math.floor(pageOffset / (pageSize - groupIndex - 1))\r\n    }\r\n    return 0\r\n}\r\nexport var GroupingHelper = GroupingHelperCore.inherit(function() {\r\n    var foreachExpandedGroups = function(that, callback, updateGroups) {\r\n        return that.foreachGroups((function(groupInfo, parents) {\r\n            if (groupInfo.isExpanded) {\r\n                return callback(groupInfo, parents)\r\n            }\r\n        }), true, false, updateGroups, updateGroups)\r\n    };\r\n    var processGroupItems = function processGroupItems(that, items, groupsCount, expandedInfo, path, isCustomLoading, isLastGroupExpanded) {\r\n        var isExpanded;\r\n        expandedInfo.items = expandedInfo.items || [];\r\n        expandedInfo.paths = expandedInfo.paths || [];\r\n        expandedInfo.count = expandedInfo.count || 0;\r\n        expandedInfo.lastCount = expandedInfo.lastCount || 0;\r\n        if (!groupsCount) {\r\n            return\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (void 0 !== item.items) {\r\n                path.push(item.key);\r\n                if (isCustomLoading) {\r\n                    isExpanded = true\r\n                } else {\r\n                    var groupInfo = that.findGroupInfo(path);\r\n                    isExpanded = groupInfo && groupInfo.isExpanded\r\n                }\r\n                if (!isExpanded) {\r\n                    item.collapsedItems = item.items;\r\n                    item.items = null\r\n                } else if (item.items) {\r\n                    processGroupItems(that, item.items, groupsCount - 1, expandedInfo, path, isCustomLoading, isLastGroupExpanded)\r\n                } else if (1 === groupsCount && item.count && (!isCustomLoading || isLastGroupExpanded)) {\r\n                    expandedInfo.items.push(item);\r\n                    expandedInfo.paths.push(path.slice(0));\r\n                    expandedInfo.count += expandedInfo.lastCount;\r\n                    expandedInfo.lastCount = item.count\r\n                }\r\n                path.pop()\r\n            }\r\n        }\r\n    };\r\n    var updateGroupInfoItem = function(that, item, isLastGroupLevel, path, offset) {\r\n        var groupInfo = that.findGroupInfo(path);\r\n        var count;\r\n        if (!groupInfo) {\r\n            if (isLastGroupLevel) {\r\n                count = item.count > 0 ? item.count : item.items.length\r\n            }\r\n            that.addGroupInfo({\r\n                isExpanded: that._isGroupExpanded(path.length - 1),\r\n                path: path.slice(0),\r\n                offset: offset,\r\n                count: count || 0\r\n            })\r\n        } else {\r\n            if (isLastGroupLevel) {\r\n                groupInfo.count = item.count > 0 ? item.count : item.items && item.items.length || 0\r\n            } else {\r\n                item.count = groupInfo.count || item.count\r\n            }\r\n            groupInfo.offset = offset\r\n        }\r\n    };\r\n    var updateGroupInfos = function updateGroupInfos(that, options, items, loadedGroupCount, groupIndex, path, parentIndex) {\r\n        var groupCount = options.group ? options.group.length : 0;\r\n        var isLastGroupLevel = groupCount === loadedGroupCount;\r\n        var remotePaging = options.remoteOperations.paging;\r\n        var offset = 0;\r\n        var totalCount = 0;\r\n        var count;\r\n        groupIndex = groupIndex || 0;\r\n        path = path || [];\r\n        if (remotePaging && !parentIndex) {\r\n            offset = 0 === groupIndex ? options.skip || 0 : options.skips[groupIndex - 1] || 0\r\n        }\r\n        if (groupIndex >= loadedGroupCount) {\r\n            return items.length\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (item) {\r\n                path.push(item.key);\r\n                if (!item.count && !item.items || void 0 === item.items) {\r\n                    return -1\r\n                }\r\n                updateGroupInfoItem(that, item, isLastGroupLevel, path, offset + i);\r\n                count = item.items ? updateGroupInfos(that, options, item.items, loadedGroupCount, groupIndex + 1, path, i) : item.count || -1;\r\n                if (count < 0) {\r\n                    return -1\r\n                }\r\n                totalCount += count;\r\n                path.pop()\r\n            }\r\n        }\r\n        return totalCount\r\n    };\r\n    var isGroupExpanded = function(groups, groupIndex) {\r\n        return groups && groups.length && groups[groupIndex] && !!groups[groupIndex].isExpanded\r\n    };\r\n    var getTotalOffset = function(groupInfos, pageSize, offset) {\r\n        var groupSize;\r\n        var totalOffset = offset;\r\n        for (var groupIndex = 0; groupIndex < groupInfos.length; groupIndex++) {\r\n            groupSize = groupInfos[groupIndex].offset + 1;\r\n            if (groupIndex > 0) {\r\n                groupSize += groupInfos[groupIndex - 1].childrenTotalCount;\r\n                if (pageSize) {\r\n                    groupSize += getContinuationGroupCount(totalOffset, pageSize, groupSize, groupIndex - 1) * groupIndex\r\n                }\r\n            }\r\n            totalOffset += groupSize\r\n        }\r\n        return totalOffset\r\n    };\r\n\r\n    function applyContinuationToGroupItem(options, expandedInfo, groupLevel, expandedItemIndex) {\r\n        var item = expandedInfo.items[expandedItemIndex];\r\n        var skip = options.skips && options.skips[groupLevel];\r\n        var take = options.takes && options.takes[groupLevel];\r\n        var isLastExpandedItem = expandedItemIndex === expandedInfo.items.length - 1;\r\n        var isFirstExpandedItem = 0 === expandedItemIndex;\r\n        var lastExpandedItemSkip = isFirstExpandedItem && skip || 0;\r\n        var isItemsTruncatedByTake = item.count > take + lastExpandedItemSkip;\r\n        if (isFirstExpandedItem && void 0 !== skip) {\r\n            item.isContinuation = true\r\n        }\r\n        if (isLastExpandedItem && void 0 !== take && isItemsTruncatedByTake) {\r\n            item.isContinuationOnNextPage = true\r\n        }\r\n    }\r\n\r\n    function isDataDeferred(data) {\r\n        return !Array.isArray(data)\r\n    }\r\n\r\n    function makeDataDeferred(options) {\r\n        if (!isDataDeferred(options.data)) {\r\n            options.data = new Deferred\r\n        }\r\n    }\r\n\r\n    function loadGroupItems(that, options, loadedGroupCount, expandedInfo, groupLevel, data) {\r\n        if (!options.isCustomLoading) {\r\n            expandedInfo = {};\r\n            processGroupItems(that, data, loadedGroupCount, expandedInfo, []);\r\n            ! function(options, expandedInfo, currentGroupCount) {\r\n                var currentGroupIndex = currentGroupCount - 1;\r\n                var groupCount = options.group ? options.group.length : 0;\r\n                expandedInfo.skip = options.skips && options.skips[currentGroupIndex];\r\n                if (options.takes && void 0 !== options.takes[currentGroupIndex]) {\r\n                    if (groupCount === currentGroupCount) {\r\n                        expandedInfo.take = expandedInfo.count ? expandedInfo.count - (expandedInfo.skip || 0) : 0\r\n                    } else {\r\n                        expandedInfo.take = 0\r\n                    }\r\n                    expandedInfo.take += options.takes[currentGroupIndex]\r\n                }\r\n            }(options, expandedInfo, loadedGroupCount)\r\n        }\r\n        var groupCount = options.group ? options.group.length : 0;\r\n        if (expandedInfo.paths.length && groupCount - loadedGroupCount > 0) {\r\n            makeDataDeferred(options);\r\n            ! function(that, options, expandedInfo, loadedGroupCount, groupLevel, data) {\r\n                var groups = options.group || [];\r\n                var currentGroup = groups[groupLevel + 1];\r\n                var deferreds = [];\r\n                each(expandedInfo.paths, (function(expandedItemIndex) {\r\n                    var loadOptions = {\r\n                        requireTotalCount: false,\r\n                        requireGroupCount: true,\r\n                        group: [currentGroup],\r\n                        groupSummary: options.storeLoadOptions.groupSummary,\r\n                        filter: createGroupFilter(expandedInfo.paths[expandedItemIndex], {\r\n                            filter: options.storeLoadOptions.filter,\r\n                            group: groups\r\n                        }),\r\n                        select: options.storeLoadOptions.select\r\n                    };\r\n                    if (0 === expandedItemIndex) {\r\n                        loadOptions.skip = expandedInfo.skip || 0\r\n                    }\r\n                    if (expandedItemIndex === expandedInfo.paths.length - 1) {\r\n                        loadOptions.take = expandedInfo.take\r\n                    }\r\n                    var loadResult = 0 === loadOptions.take ? [] : that._dataSource.loadFromStore(loadOptions);\r\n                    when(loadResult).done((function(data) {\r\n                        var item = expandedInfo.items[expandedItemIndex];\r\n                        applyContinuationToGroupItem(options, expandedInfo, groupLevel, expandedItemIndex);\r\n                        item.items = data\r\n                    }));\r\n                    deferreds.push(loadResult)\r\n                }));\r\n                when.apply(null, deferreds).done((function() {\r\n                    updateGroupInfos(that, options, data, loadedGroupCount + 1);\r\n                    loadGroupItems(that, options, loadedGroupCount + 1, expandedInfo, groupLevel + 1, data)\r\n                }))\r\n            }(that, options, expandedInfo, loadedGroupCount, groupLevel, data)\r\n        } else if (expandedInfo.paths.length && options.storeLoadOptions.group) {\r\n            makeDataDeferred(options);\r\n            ! function(that, options, expandedInfo, data) {\r\n                var expandedFilters = [];\r\n                var groups = options.group || [];\r\n                each(expandedInfo.paths, (function(_, expandedPath) {\r\n                    expandedFilters.push(createGroupFilter(expandedPath, {\r\n                        group: options.isCustomLoading ? options.storeLoadOptions.group : groups\r\n                    }))\r\n                }));\r\n                var filter = options.storeLoadOptions.filter;\r\n                if (!options.storeLoadOptions.isLoadingAll) {\r\n                    filter = dataGridCore.combineFilters([filter, dataGridCore.combineFilters(expandedFilters, \"or\")])\r\n                }\r\n                var loadOptions = extend({}, options.storeLoadOptions, {\r\n                    requireTotalCount: false,\r\n                    requireGroupCount: false,\r\n                    group: null,\r\n                    sort: groups.concat(dataGridCore.normalizeSortingInfo(options.storeLoadOptions.sort || [])),\r\n                    filter: filter\r\n                });\r\n                var isPagingLocal = that._dataSource.isLastLevelGroupItemsPagingLocal();\r\n                if (!isPagingLocal) {\r\n                    loadOptions.skip = expandedInfo.skip;\r\n                    loadOptions.take = expandedInfo.take\r\n                }\r\n                when(0 === expandedInfo.take ? [] : that._dataSource.loadFromStore(loadOptions)).done((function(items, extra) {\r\n                    if (isPagingLocal) {\r\n                        items = that._dataSource.sortLastLevelGroupItems(items, groups, expandedInfo.paths);\r\n                        items = expandedInfo.skip ? items.slice(expandedInfo.skip) : items;\r\n                        items = expandedInfo.take ? items.slice(0, expandedInfo.take) : items\r\n                    }\r\n                    each(expandedInfo.items, (function(index, item) {\r\n                        var itemCount = item.count - (0 === index && expandedInfo.skip || 0);\r\n                        var expandedItems = items.splice(0, itemCount);\r\n                        applyContinuationToGroupItem(options, expandedInfo, groups.length - 1, index);\r\n                        item.items = expandedItems\r\n                    }));\r\n                    options.data.resolve(data)\r\n                })).fail(options.data.reject)\r\n            }(that, options, expandedInfo, data)\r\n        } else if (isDataDeferred(options.data)) {\r\n            options.data.resolve(data)\r\n        }\r\n    }\r\n    var loadGroupTotalCount = function(dataSource, options) {\r\n        var d = new Deferred;\r\n        var isGrouping = !!(options.group && options.group.length);\r\n        var loadOptions = extend({\r\n            skip: 0,\r\n            take: 1,\r\n            requireGroupCount: isGrouping,\r\n            requireTotalCount: !isGrouping\r\n        }, options, {\r\n            group: isGrouping ? options.group : null\r\n        });\r\n        dataSource.load(loadOptions).done((function(data, extra) {\r\n            var count = extra && (isGrouping ? extra.groupCount : extra.totalCount);\r\n            if (!isFinite(count)) {\r\n                d.reject(dataErrors.Error(isGrouping ? \"E4022\" : \"E4021\"));\r\n                return\r\n            }\r\n            d.resolve(count)\r\n        })).fail(d.reject.bind(d));\r\n        return d\r\n    };\r\n    return {\r\n        updateTotalItemsCount: function(options) {\r\n            var totalItemsCount = 0;\r\n            var totalCount = options.extra && options.extra.totalCount || 0;\r\n            var groupCount = options.extra && options.extra.groupCount || 0;\r\n            var pageSize = this._dataSource.pageSize();\r\n            var isVirtualPaging = this._isVirtualPaging();\r\n            foreachExpandedGroups(this, (function(groupInfo) {\r\n                groupInfo.childrenTotalCount = 0\r\n            }));\r\n            foreachExpandedGroups(this, (function(groupInfo, parents) {\r\n                var totalOffset = getTotalOffset(parents, isVirtualPaging ? 0 : pageSize, totalItemsCount);\r\n                var count = groupInfo.count + groupInfo.childrenTotalCount;\r\n                if (!isVirtualPaging) {\r\n                    count += getContinuationGroupCount(totalOffset, pageSize, count, parents.length - 1)\r\n                }\r\n                if (parents[parents.length - 2]) {\r\n                    parents[parents.length - 2].childrenTotalCount += count\r\n                } else {\r\n                    totalItemsCount += count\r\n                }\r\n            }));\r\n            this.callBase(totalItemsCount - totalCount + groupCount)\r\n        },\r\n        _isGroupExpanded: function(groupIndex) {\r\n            var groups = this._dataSource.group();\r\n            return isGroupExpanded(groups, groupIndex)\r\n        },\r\n        _updatePagingOptions: function(options, callback) {\r\n            var isVirtualPaging = this._isVirtualPaging();\r\n            var pageSize = this._dataSource.pageSize();\r\n            var skips = [];\r\n            var takes = [];\r\n            var skipChildrenTotalCount = 0;\r\n            var childrenTotalCount = 0;\r\n            if (options.take) {\r\n                foreachExpandedGroups(this, (function(groupInfo) {\r\n                    groupInfo.childrenTotalCount = 0;\r\n                    groupInfo.skipChildrenTotalCount = 0\r\n                }));\r\n                foreachExpandedGroups(this, (function(groupInfo, parents) {\r\n                    var take;\r\n                    var takeCorrection = 0;\r\n                    var parentTakeCorrection = 0;\r\n                    var totalOffset = getTotalOffset(parents, isVirtualPaging ? 0 : pageSize, childrenTotalCount);\r\n                    var continuationGroupCount = 0;\r\n                    var skipContinuationGroupCount = 0;\r\n                    var groupInfoCount = groupInfo.count + groupInfo.childrenTotalCount;\r\n                    var childrenGroupInfoCount = groupInfoCount;\r\n                    callback && callback(groupInfo, totalOffset);\r\n                    var skip = options.skip - totalOffset;\r\n                    if (totalOffset <= options.skip + options.take && groupInfoCount) {\r\n                        take = options.take;\r\n                        if (!isVirtualPaging) {\r\n                            continuationGroupCount = getContinuationGroupCount(totalOffset, pageSize, groupInfoCount, parents.length - 1);\r\n                            groupInfoCount += continuationGroupCount * parents.length;\r\n                            childrenGroupInfoCount += continuationGroupCount;\r\n                            if (pageSize && skip >= 0) {\r\n                                takeCorrection = parents.length;\r\n                                parentTakeCorrection = parents.length - 1;\r\n                                skipContinuationGroupCount = Math.floor(skip / pageSize)\r\n                            }\r\n                        }\r\n                        if (skip >= 0) {\r\n                            if (totalOffset + groupInfoCount > options.skip) {\r\n                                skips.unshift(skip - skipContinuationGroupCount * takeCorrection - groupInfo.skipChildrenTotalCount)\r\n                            }\r\n                            if (totalOffset + groupInfoCount >= options.skip + take) {\r\n                                takes.unshift(take - takeCorrection - groupInfo.childrenTotalCount + groupInfo.skipChildrenTotalCount)\r\n                            }\r\n                        } else if (totalOffset + groupInfoCount >= options.skip + take) {\r\n                            takes.unshift(take + skip - groupInfo.childrenTotalCount)\r\n                        }\r\n                    }\r\n                    if (totalOffset <= options.skip) {\r\n                        if (parents[parents.length - 2]) {\r\n                            parents[parents.length - 2].skipChildrenTotalCount += Math.min(childrenGroupInfoCount, skip + 1 - skipContinuationGroupCount * parentTakeCorrection)\r\n                        } else {\r\n                            skipChildrenTotalCount += Math.min(childrenGroupInfoCount, skip + 1)\r\n                        }\r\n                    }\r\n                    if (totalOffset <= options.skip + take) {\r\n                        groupInfoCount = Math.min(childrenGroupInfoCount, skip + take - (skipContinuationGroupCount + 1) * parentTakeCorrection);\r\n                        if (parents[parents.length - 2]) {\r\n                            parents[parents.length - 2].childrenTotalCount += groupInfoCount\r\n                        } else {\r\n                            childrenTotalCount += groupInfoCount\r\n                        }\r\n                    }\r\n                }));\r\n                options.skip -= skipChildrenTotalCount;\r\n                options.take -= childrenTotalCount - skipChildrenTotalCount\r\n            }\r\n            options.skips = skips;\r\n            options.takes = takes\r\n        },\r\n        changeRowExpand: function(path) {\r\n            var groupInfo = this.findGroupInfo(path);\r\n            var dataSource = this._dataSource;\r\n            var remoteGroupPaging = dataSource.remoteOperations().groupPaging;\r\n            var groups = dataGridCore.normalizeSortingInfo(dataSource.group());\r\n            if (groupInfo) {\r\n                groupInfo.isExpanded = !groupInfo.isExpanded;\r\n                if (remoteGroupPaging && groupInfo.isExpanded && path.length < groups.length) {\r\n                    return loadGroupTotalCount(dataSource, {\r\n                        filter: createGroupFilter(path, {\r\n                            filter: dataSource.lastLoadOptions().filter,\r\n                            group: dataSource.group()\r\n                        }),\r\n                        group: [groups[path.length]],\r\n                        select: dataSource.select()\r\n                    }).done((function(groupCount) {\r\n                        groupInfo.count = groupCount\r\n                    }))\r\n                }\r\n                return (new Deferred).resolve()\r\n            }\r\n            return (new Deferred).reject()\r\n        },\r\n        handleDataLoading: function(options) {\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var groups = dataGridCore.normalizeSortingInfo(storeLoadOptions.group || options.loadOptions.group);\r\n            if (options.isCustomLoading || !groups.length) {\r\n                return\r\n            }\r\n            if (options.remoteOperations.grouping) {\r\n                var remotePaging = this._dataSource.remoteOperations().paging;\r\n                storeLoadOptions.group = dataGridCore.normalizeSortingInfo(storeLoadOptions.group);\r\n                storeLoadOptions.group.forEach((function(group, index) {\r\n                    var isLastGroup = index === storeLoadOptions.group.length - 1;\r\n                    group.isExpanded = !remotePaging || !isLastGroup\r\n                }))\r\n            }\r\n            options.group = options.group || groups;\r\n            if (options.remoteOperations.paging) {\r\n                options.skip = storeLoadOptions.skip;\r\n                options.take = storeLoadOptions.take;\r\n                storeLoadOptions.requireGroupCount = true;\r\n                storeLoadOptions.group = groups.slice(0, 1);\r\n                this._updatePagingOptions(options);\r\n                storeLoadOptions.skip = options.skip;\r\n                storeLoadOptions.take = options.take\r\n            } else {\r\n                options.skip = options.loadOptions.skip;\r\n                options.take = options.loadOptions.take;\r\n                this._updatePagingOptions(options)\r\n            }\r\n        },\r\n        handleDataLoadedCore: function(options, callBase) {\r\n            var loadedGroupCount = dataGridCore.normalizeSortingInfo(options.storeLoadOptions.group || options.loadOptions.group).length;\r\n            var groupCount = options.group ? options.group.length : 0;\r\n            var totalCount;\r\n            var expandedInfo = {};\r\n            if (options.isCustomLoading) {\r\n                callBase(options);\r\n                processGroupItems(this, options.data, loadedGroupCount, expandedInfo, [], options.isCustomLoading, options.storeLoadOptions.isLoadingAll)\r\n            } else {\r\n                if (!options.remoteOperations.paging) {\r\n                    this.foreachGroups((function(groupInfo) {\r\n                        groupInfo.count = 0\r\n                    }))\r\n                }\r\n                totalCount = updateGroupInfos(this, options, options.data, loadedGroupCount);\r\n                if (totalCount < 0) {\r\n                    options.data = (new Deferred).reject(errors.Error(\"E1037\"));\r\n                    return\r\n                }\r\n                if (!options.remoteOperations.paging) {\r\n                    if (loadedGroupCount && options.extra && options.loadOptions.requireTotalCount) {\r\n                        options.extra.totalCount = totalCount;\r\n                        options.extra.groupCount = options.data.length\r\n                    }\r\n                }\r\n                if (groupCount && options.storeLoadOptions.requireGroupCount && !isFinite(options.extra.groupCount)) {\r\n                    options.data = (new Deferred).reject(dataErrors.Error(\"E4022\"));\r\n                    return\r\n                }\r\n                this.updateTotalItemsCount(options);\r\n                if (!options.remoteOperations.paging) {\r\n                    this._updatePagingOptions(options)\r\n                }\r\n                callBase(options);\r\n                if (!options.remoteOperations.paging) {\r\n                    this._processPaging(options, loadedGroupCount)\r\n                }\r\n            }\r\n            loadGroupItems(this, options, loadedGroupCount, expandedInfo, 0, options.data)\r\n        },\r\n        _processSkips: function(items, skips, groupCount) {\r\n            if (!groupCount) {\r\n                return\r\n            }\r\n            var firstItem = items[0];\r\n            var skip = skips[0];\r\n            var children = firstItem && firstItem.items;\r\n            if (void 0 !== skip) {\r\n                firstItem.isContinuation = true;\r\n                if (children) {\r\n                    firstItem.items = children.slice(skip);\r\n                    this._processSkips(firstItem.items, skips.slice(1), groupCount - 1)\r\n                }\r\n            }\r\n        },\r\n        _processTakes: function(items, skips, takes, groupCount, parents) {\r\n            if (!groupCount || !items) {\r\n                return\r\n            }\r\n            parents = parents || [];\r\n            var lastItem = items[items.length - 1];\r\n            var children = lastItem && lastItem.items;\r\n            var take = takes[0];\r\n            var skip = skips[0];\r\n            if (lastItem) {\r\n                var maxTakeCount = lastItem.count - (lastItem.isContinuation && skip || 0) || children.length;\r\n                if (void 0 !== take && maxTakeCount > take) {\r\n                    lastItem.isContinuationOnNextPage = true;\r\n                    parents.forEach((function(parent) {\r\n                        parent.isContinuationOnNextPage = true\r\n                    }));\r\n                    if (children) {\r\n                        children = children.slice(0, take);\r\n                        lastItem.items = children\r\n                    }\r\n                }\r\n                parents.push(lastItem);\r\n                this._processTakes(children, skips.slice(1), takes.slice(1), groupCount - 1, parents)\r\n            }\r\n        },\r\n        _processPaging: function(options, groupCount) {\r\n            this._processSkips(options.data, options.skips, groupCount);\r\n            this._processTakes(options.data, options.skips, options.takes, groupCount)\r\n        },\r\n        isLastLevelGroupItemsPagingLocal: function() {\r\n            return false\r\n        },\r\n        sortLastLevelGroupItems: function(items) {\r\n            return items\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var group = options.group || options.storeLoadOptions.group;\r\n            var oldGroups = dataGridCore.normalizeSortingInfo(that._group);\r\n            var isExpanded;\r\n            var groupIndex;\r\n\r\n            function handleGroup(groupInfo, parents) {\r\n                if (parents.length === groupIndex + 1) {\r\n                    groupInfo.isExpanded = isExpanded\r\n                }\r\n            }\r\n            for (groupIndex = 0; groupIndex < oldGroups.length; groupIndex++) {\r\n                isExpanded = isGroupExpanded(group, groupIndex);\r\n                if (isGroupExpanded(that._group, groupIndex) !== isExpanded) {\r\n                    that.foreachGroups(handleGroup)\r\n                }\r\n            }\r\n            that.callBase.apply(this, arguments);\r\n            if (group && options.remoteOperations.paging && operationTypes.reload) {\r\n                return foreachExpandedGroups(that, (function(groupInfo) {\r\n                    var groupCountQuery = loadGroupTotalCount(dataSource, {\r\n                        filter: createGroupFilter(groupInfo.path, {\r\n                            filter: storeLoadOptions.filter,\r\n                            group: group\r\n                        }),\r\n                        group: group.slice(groupInfo.path.length),\r\n                        select: storeLoadOptions.select\r\n                    });\r\n                    var groupOffsetQuery = loadGroupTotalCount(dataSource, {\r\n                        filter: createOffsetFilter(groupInfo.path, {\r\n                            filter: storeLoadOptions.filter,\r\n                            group: group\r\n                        }, true),\r\n                        group: group.slice(groupInfo.path.length - 1, groupInfo.path.length),\r\n                        select: storeLoadOptions.select\r\n                    });\r\n                    return when(groupOffsetQuery, groupCountQuery).done((function(offset, count) {\r\n                        offset = parseInt(offset.length ? offset[0] : offset);\r\n                        count = parseInt(count.length ? count[0] : count);\r\n                        groupInfo.offset = offset;\r\n                        if (groupInfo.count !== count) {\r\n                            groupInfo.count = count;\r\n                            that.updateTotalItemsCount(options)\r\n                        }\r\n                    }))\r\n                }), true)\r\n            }\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grouping.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    GroupingHelper as ExpandedGroupingHelper\r\n} from \"./ui.data_grid.grouping.expanded\";\r\nimport {\r\n    GroupingHelper as CollapsedGroupingHelper\r\n} from \"./ui.data_grid.grouping.collapsed\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport dataSourceAdapter from \"./ui.data_grid.data_source_adapter\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport devices from \"../../core/devices\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    registerKeyboardAction\r\n} from \"../grid_core/ui.grid_core.accessibility\";\r\nimport {\r\n    setTabIndex,\r\n    restoreFocus\r\n} from \"../shared/accessibility\";\r\nvar DATAGRID_GROUP_PANEL_CLASS = \"dx-datagrid-group-panel\";\r\nvar DATAGRID_GROUP_PANEL_MESSAGE_CLASS = \"dx-group-panel-message\";\r\nvar DATAGRID_GROUP_PANEL_ITEM_CLASS = \"dx-group-panel-item\";\r\nvar DATAGRID_GROUP_PANEL_LABEL_CLASS = \"dx-toolbar-label\";\r\nvar DATAGRID_EXPAND_CLASS = \"dx-datagrid-expand\";\r\nvar DATAGRID_GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar HEADER_FILTER_CLASS_SELECTOR = \".dx-header-filter\";\r\nvar GroupingDataSourceAdapterExtender = {\r\n    init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._initGroupingHelper()\r\n    },\r\n    _initGroupingHelper: function(options) {\r\n        var grouping = this._grouping;\r\n        var isAutoExpandAll = this.option(\"grouping.autoExpandAll\");\r\n        var isFocusedRowEnabled = this.option(\"focusedRowEnabled\");\r\n        var remoteOperations = options ? options.remoteOperations : this.remoteOperations();\r\n        var isODataRemoteOperations = remoteOperations.filtering && remoteOperations.sorting && remoteOperations.paging;\r\n        if (isODataRemoteOperations && !remoteOperations.grouping && (isAutoExpandAll || !isFocusedRowEnabled)) {\r\n            if (!grouping || grouping instanceof CollapsedGroupingHelper) {\r\n                this._grouping = new ExpandedGroupingHelper(this)\r\n            }\r\n        } else if (!grouping || grouping instanceof ExpandedGroupingHelper) {\r\n            this._grouping = new CollapsedGroupingHelper(this)\r\n        }\r\n    },\r\n    totalItemsCount: function() {\r\n        var totalCount = this.callBase();\r\n        return totalCount > 0 && this._dataSource.group() && this._dataSource.requireTotalCount() ? totalCount + this._grouping.totalCountCorrection() : totalCount\r\n    },\r\n    itemsCount: function() {\r\n        return this._dataSource.group() ? this._grouping.itemsCount() || 0 : this.callBase.apply(this, arguments)\r\n    },\r\n    allowCollapseAll: function() {\r\n        return this._grouping.allowCollapseAll()\r\n    },\r\n    isGroupItemCountable: function(item) {\r\n        return this._grouping.isGroupItemCountable(item)\r\n    },\r\n    isRowExpanded: function(key) {\r\n        var groupInfo = this._grouping.findGroupInfo(key);\r\n        return groupInfo ? groupInfo.isExpanded : !this._grouping.allowCollapseAll()\r\n    },\r\n    collapseAll: function(groupIndex) {\r\n        return this._collapseExpandAll(groupIndex, false)\r\n    },\r\n    expandAll: function(groupIndex) {\r\n        return this._collapseExpandAll(groupIndex, true)\r\n    },\r\n    _collapseExpandAll: function(groupIndex, isExpand) {\r\n        var dataSource = this._dataSource;\r\n        var group = dataSource.group();\r\n        var groups = gridCore.normalizeSortingInfo(group || []);\r\n        if (groups.length) {\r\n            for (var i = 0; i < groups.length; i++) {\r\n                if (void 0 === groupIndex || groupIndex === i) {\r\n                    groups[i].isExpanded = isExpand\r\n                } else if (group && group[i]) {\r\n                    groups[i].isExpanded = group[i].isExpanded\r\n                }\r\n            }\r\n            dataSource.group(groups);\r\n            this._grouping.foreachGroups((function(groupInfo, parents) {\r\n                if (void 0 === groupIndex || groupIndex === parents.length - 1) {\r\n                    groupInfo.isExpanded = isExpand\r\n                }\r\n            }), false, true);\r\n            this.resetPagesCache()\r\n        }\r\n        return true\r\n    },\r\n    refresh: function() {\r\n        this.callBase.apply(this, arguments);\r\n        return this._grouping.refresh.apply(this._grouping, arguments)\r\n    },\r\n    changeRowExpand: function(path) {\r\n        var dataSource = this._dataSource;\r\n        if (dataSource.group()) {\r\n            dataSource.beginLoading();\r\n            if (this._lastLoadOptions) {\r\n                this._lastLoadOptions.groupExpand = true\r\n            }\r\n            return this._changeRowExpandCore(path).always((function() {\r\n                dataSource.endLoading()\r\n            }))\r\n        }\r\n    },\r\n    _changeRowExpandCore: function(path) {\r\n        return this._grouping.changeRowExpand(path)\r\n    },\r\n    _hasGroupLevelsExpandState: function(group, isExpanded) {\r\n        if (group && Array.isArray(group)) {\r\n            for (var i = 0; i < group.length; i++) {\r\n                if (group[i].isExpanded === isExpanded) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _customizeRemoteOperations: function(options, operationTypes) {\r\n        var remoteOperations = options.remoteOperations;\r\n        if (options.storeLoadOptions.group) {\r\n            if (remoteOperations.grouping && !options.isCustomLoading) {\r\n                if (!remoteOperations.groupPaging || this._hasGroupLevelsExpandState(options.storeLoadOptions.group, true)) {\r\n                    remoteOperations.paging = false\r\n                }\r\n            }\r\n            if (!remoteOperations.grouping && (!remoteOperations.sorting || !remoteOperations.filtering || options.isCustomLoading || this._hasGroupLevelsExpandState(options.storeLoadOptions.group, false))) {\r\n                remoteOperations.paging = false\r\n            }\r\n        } else if (!options.isCustomLoading && remoteOperations.paging && operationTypes.grouping) {\r\n            this.resetCache()\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _handleDataLoading: function(options) {\r\n        this.callBase(options);\r\n        this._initGroupingHelper(options);\r\n        return this._grouping.handleDataLoading(options)\r\n    },\r\n    _handleDataLoaded: function(options) {\r\n        return this._grouping.handleDataLoaded(options, this.callBase.bind(this))\r\n    },\r\n    _handleDataLoadedCore: function(options) {\r\n        return this._grouping.handleDataLoadedCore(options, this.callBase.bind(this))\r\n    }\r\n};\r\ndataSourceAdapter.extend(GroupingDataSourceAdapterExtender);\r\nvar GroupingDataControllerExtender = {\r\n    init: function() {\r\n        this.callBase();\r\n        this.createAction(\"onRowExpanding\");\r\n        this.createAction(\"onRowExpanded\");\r\n        this.createAction(\"onRowCollapsing\");\r\n        this.createAction(\"onRowCollapsed\")\r\n    },\r\n    _beforeProcessItems: function(items) {\r\n        var groupColumns = this._columnsController.getGroupColumns();\r\n        items = this.callBase(items);\r\n        if (items.length && groupColumns.length) {\r\n            items = this._processGroupItems(items, groupColumns.length)\r\n        }\r\n        return items\r\n    },\r\n    _processItem: function(item, options) {\r\n        if (isDefined(item.groupIndex) && isString(item.rowType) && 0 === item.rowType.indexOf(\"group\")) {\r\n            item = this._processGroupItem(item, options);\r\n            options.dataIndex = 0\r\n        } else {\r\n            item = this.callBase.apply(this, arguments)\r\n        }\r\n        return item\r\n    },\r\n    _processGroupItem: function(item) {\r\n        return item\r\n    },\r\n    _processGroupItems: function(items, groupsCount, options) {\r\n        var groupedColumns = this._columnsController.getGroupColumns();\r\n        var column = groupedColumns[groupedColumns.length - groupsCount];\r\n        if (!options) {\r\n            var scrollingMode = this.option(\"scrolling.mode\");\r\n            options = {\r\n                collectContinuationItems: \"virtual\" !== scrollingMode && \"infinite\" !== scrollingMode,\r\n                resultItems: [],\r\n                path: [],\r\n                values: []\r\n            }\r\n        }\r\n        var resultItems = options.resultItems;\r\n        if (options.data) {\r\n            if (options.collectContinuationItems || !options.data.isContinuation) {\r\n                resultItems.push({\r\n                    rowType: \"group\",\r\n                    data: options.data,\r\n                    groupIndex: options.path.length - 1,\r\n                    isExpanded: !!options.data.items,\r\n                    key: options.path.slice(0),\r\n                    values: options.values.slice(0)\r\n                })\r\n            }\r\n        }\r\n        if (items) {\r\n            if (0 === groupsCount) {\r\n                resultItems.push.apply(resultItems, items)\r\n            } else {\r\n                for (var i = 0; i < items.length; i++) {\r\n                    var item = items[i];\r\n                    if (item && \"items\" in item) {\r\n                        options.data = item;\r\n                        options.path.push(item.key);\r\n                        options.values.push(column && column.deserializeValue && !column.calculateDisplayValue ? column.deserializeValue(item.key) : item.key);\r\n                        this._processGroupItems(item.items, groupsCount - 1, options);\r\n                        options.data = void 0;\r\n                        options.path.pop();\r\n                        options.values.pop()\r\n                    } else {\r\n                        resultItems.push(item)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return resultItems\r\n    },\r\n    publicMethods: function() {\r\n        return this.callBase().concat([\"collapseAll\", \"expandAll\", \"isRowExpanded\", \"expandRow\", \"collapseRow\"])\r\n    },\r\n    collapseAll: function(groupIndex) {\r\n        var dataSource = this._dataSource;\r\n        if (dataSource && dataSource.collapseAll(groupIndex)) {\r\n            dataSource.pageIndex(0);\r\n            dataSource.reload()\r\n        }\r\n    },\r\n    expandAll: function(groupIndex) {\r\n        var dataSource = this._dataSource;\r\n        if (dataSource && dataSource.expandAll(groupIndex)) {\r\n            dataSource.pageIndex(0);\r\n            dataSource.reload()\r\n        }\r\n    },\r\n    changeRowExpand: function(key) {\r\n        var that = this;\r\n        var expanded = that.isRowExpanded(key);\r\n        var args = {\r\n            key: key,\r\n            expanded: expanded\r\n        };\r\n        that.executeAction(expanded ? \"onRowCollapsing\" : \"onRowExpanding\", args);\r\n        if (!args.cancel) {\r\n            return when(that._changeRowExpandCore(key)).done((function() {\r\n                args.expanded = !expanded;\r\n                that.executeAction(expanded ? \"onRowCollapsed\" : \"onRowExpanded\", args)\r\n            }))\r\n        }\r\n        return (new Deferred).resolve()\r\n    },\r\n    _changeRowExpandCore: function(key) {\r\n        var that = this;\r\n        var dataSource = this._dataSource;\r\n        var d = new Deferred;\r\n        if (!dataSource) {\r\n            d.resolve()\r\n        } else {\r\n            when(dataSource.changeRowExpand(key)).done((function() {\r\n                that.load().done(d.resolve).fail(d.reject)\r\n            })).fail(d.reject)\r\n        }\r\n        return d\r\n    },\r\n    isRowExpanded: function(key) {\r\n        var dataSource = this._dataSource;\r\n        return dataSource && dataSource.isRowExpanded(key)\r\n    },\r\n    expandRow: function(key) {\r\n        if (!this.isRowExpanded(key)) {\r\n            return this.changeRowExpand(key)\r\n        }\r\n        return (new Deferred).resolve()\r\n    },\r\n    collapseRow: function(key) {\r\n        if (this.isRowExpanded(key)) {\r\n            return this.changeRowExpand(key)\r\n        }\r\n        return (new Deferred).resolve()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"grouping\" === args.name) {\r\n            args.name = \"dataSource\"\r\n        }\r\n        this.callBase(args)\r\n    }\r\n};\r\nvar onGroupingMenuItemClick = function(column, params) {\r\n    var columnsController = this._columnsController;\r\n    switch (params.itemData.value) {\r\n        case \"group\":\r\n            var groups = columnsController._dataSource.group() || [];\r\n            columnsController.columnOption(column.dataField, \"groupIndex\", groups.length);\r\n            break;\r\n        case \"ungroup\":\r\n            columnsController.columnOption(column.dataField, \"groupIndex\", -1);\r\n            break;\r\n        case \"ungroupAll\":\r\n            this.component.clearGrouping()\r\n    }\r\n};\r\nexport var GroupingHeaderPanelExtender = {\r\n    _getToolbarItems: function() {\r\n        var items = this.callBase();\r\n        return this._appendGroupingItem(items)\r\n    },\r\n    _appendGroupingItem: function(items) {\r\n        if (this._isGroupPanelVisible()) {\r\n            var isRendered = false;\r\n            var toolbarItem = {\r\n                template: () => {\r\n                    var $groupPanel = $(\"<div>\").addClass(DATAGRID_GROUP_PANEL_CLASS);\r\n                    this._updateGroupPanelContent($groupPanel);\r\n                    registerKeyboardAction(\"groupPanel\", this, $groupPanel, void 0, this._handleActionKeyDown.bind(this));\r\n                    return $groupPanel\r\n                },\r\n                name: \"groupPanel\",\r\n                onItemRendered: () => {\r\n                    isRendered && this.renderCompleted.fire();\r\n                    isRendered = true\r\n                },\r\n                location: \"before\",\r\n                locateInMenu: \"never\",\r\n                sortIndex: 1\r\n            };\r\n            items.push(toolbarItem)\r\n        }\r\n        return items\r\n    },\r\n    _handleActionKeyDown: function(args) {\r\n        var event = args.event;\r\n        var $target = $(event.target);\r\n        var groupColumnIndex = $target.closest(\".\".concat(DATAGRID_GROUP_PANEL_ITEM_CLASS)).index();\r\n        var column = this._columnsController.getGroupColumns()[groupColumnIndex];\r\n        var columnIndex = column && column.index;\r\n        if ($target.is(HEADER_FILTER_CLASS_SELECTOR)) {\r\n            this.getController(\"headerFilter\").showHeaderFilterMenu(columnIndex, true)\r\n        } else {\r\n            this._processGroupItemAction(columnIndex)\r\n        }\r\n        event.preventDefault()\r\n    },\r\n    _isGroupPanelVisible: function() {\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        var isVisible;\r\n        if (groupPanelOptions) {\r\n            isVisible = groupPanelOptions.visible;\r\n            if (\"auto\" === isVisible) {\r\n                isVisible = \"desktop\" === devices.current().deviceType ? true : false\r\n            }\r\n        }\r\n        return isVisible\r\n    },\r\n    _renderGroupPanelItems: function($groupPanel, groupColumns) {\r\n        var that = this;\r\n        $groupPanel.empty();\r\n        each(groupColumns, (function(index, groupColumn) {\r\n            that._createGroupPanelItem($groupPanel, groupColumn)\r\n        }));\r\n        restoreFocus(this)\r\n    },\r\n    _createGroupPanelItem: function($rootElement, groupColumn) {\r\n        var $groupPanelItem = $(\"<div>\").addClass(groupColumn.cssClass).addClass(DATAGRID_GROUP_PANEL_ITEM_CLASS).data(\"columnData\", groupColumn).appendTo($rootElement).text(groupColumn.caption);\r\n        setTabIndex(this, $groupPanelItem);\r\n        return $groupPanelItem\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        if (!this._requireReady && !gridCore.checkChanges(e.optionNames, [\"width\", \"visibleWidth\"])) {\r\n            var $toolbarElement = this.element();\r\n            var $groupPanel = $toolbarElement && $toolbarElement.find(\".\" + DATAGRID_GROUP_PANEL_CLASS);\r\n            if ($groupPanel && $groupPanel.length) {\r\n                this._updateGroupPanelContent($groupPanel);\r\n                this.renderCompleted.fire()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    _updateGroupPanelContent: function($groupPanel) {\r\n        var groupColumns = this.getController(\"columns\").getGroupColumns();\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        this._renderGroupPanelItems($groupPanel, groupColumns);\r\n        if (groupPanelOptions.allowColumnDragging && !groupColumns.length) {\r\n            $(\"<div>\").addClass(DATAGRID_GROUP_PANEL_MESSAGE_CLASS).text(groupPanelOptions.emptyPanelText).appendTo($groupPanel);\r\n            $groupPanel.closest(\".\" + DATAGRID_GROUP_PANEL_LABEL_CLASS).css(\"maxWidth\", \"none\");\r\n            this.updateToolbarDimensions()\r\n        }\r\n    },\r\n    allowDragging: function(column) {\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        return this._isGroupPanelVisible() && groupPanelOptions.allowColumnDragging && column && column.allowGrouping\r\n    },\r\n    getColumnElements: function() {\r\n        var $element = this.element();\r\n        return $element && $element.find(\".\" + DATAGRID_GROUP_PANEL_ITEM_CLASS)\r\n    },\r\n    getColumns: function() {\r\n        return this.getController(\"columns\").getGroupColumns()\r\n    },\r\n    getBoundingRect: function() {\r\n        var $element = this.element();\r\n        if ($element && $element.find(\".\" + DATAGRID_GROUP_PANEL_CLASS).length) {\r\n            var offset = $element.offset();\r\n            return {\r\n                top: offset.top,\r\n                bottom: offset.top + getHeight($element)\r\n            }\r\n        }\r\n        return null\r\n    },\r\n    getName: function() {\r\n        return \"group\"\r\n    },\r\n    getContextMenuItems: function(options) {\r\n        var contextMenuEnabled = this.option(\"grouping.contextMenuEnabled\");\r\n        var $groupedColumnElement = $(options.targetElement).closest(\".\" + DATAGRID_GROUP_PANEL_ITEM_CLASS);\r\n        var items;\r\n        if ($groupedColumnElement.length) {\r\n            options.column = $groupedColumnElement.data(\"columnData\")\r\n        }\r\n        if (contextMenuEnabled && options.column) {\r\n            var column = options.column;\r\n            var isGroupingAllowed = isDefined(column.allowGrouping) ? column.allowGrouping : true;\r\n            if (isGroupingAllowed) {\r\n                var isColumnGrouped = isDefined(column.groupIndex) && column.groupIndex > -1;\r\n                var groupingTexts = this.option(\"grouping.texts\");\r\n                var onItemClick = onGroupingMenuItemClick.bind(this, column);\r\n                items = [{\r\n                    text: groupingTexts.ungroup,\r\n                    value: \"ungroup\",\r\n                    disabled: !isColumnGrouped,\r\n                    onItemClick: onItemClick\r\n                }, {\r\n                    text: groupingTexts.ungroupAll,\r\n                    value: \"ungroupAll\",\r\n                    onItemClick: onItemClick\r\n                }]\r\n            }\r\n        }\r\n        return items\r\n    },\r\n    isVisible: function() {\r\n        return this.callBase() || this._isGroupPanelVisible()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"groupPanel\" === args.name) {\r\n            this._invalidate();\r\n            args.handled = true\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    }\r\n};\r\nvar GroupingRowsViewExtender = {\r\n    getContextMenuItems: function(options) {\r\n        var contextMenuEnabled = this.option(\"grouping.contextMenuEnabled\");\r\n        var items;\r\n        if (contextMenuEnabled && options.row && \"group\" === options.row.rowType) {\r\n            var columnsController = this._columnsController;\r\n            var column = columnsController.columnOption(\"groupIndex:\" + options.row.groupIndex);\r\n            if (column && column.allowGrouping) {\r\n                var groupingTexts = this.option(\"grouping.texts\");\r\n                var onItemClick = onGroupingMenuItemClick.bind(this, column);\r\n                items = [];\r\n                items.push({\r\n                    text: groupingTexts.ungroup,\r\n                    value: \"ungroup\",\r\n                    onItemClick: onItemClick\r\n                }, {\r\n                    text: groupingTexts.ungroupAll,\r\n                    value: \"ungroupAll\",\r\n                    onItemClick: onItemClick\r\n                })\r\n            }\r\n        }\r\n        return items\r\n    },\r\n    _rowClick: function(e) {\r\n        var expandMode = this.option(\"grouping.expandMode\");\r\n        var scrollingMode = this.option(\"scrolling.mode\");\r\n        var isGroupRowStateChanged = \"infinite\" !== scrollingMode && \"rowClick\" === expandMode && $(e.event.target).closest(\".\" + DATAGRID_GROUP_ROW_CLASS).length;\r\n        var isExpandButtonClicked = $(e.event.target).closest(\".\" + DATAGRID_EXPAND_CLASS).length;\r\n        if (isGroupRowStateChanged || isExpandButtonClicked) {\r\n            this._changeGroupRowState(e)\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _changeGroupRowState: function(e) {\r\n        var dataController = this.getController(\"data\");\r\n        var row = dataController.items()[e.rowIndex];\r\n        var allowCollapsing = this._columnsController.columnOption(\"groupIndex:\" + row.groupIndex, \"allowCollapsing\");\r\n        if (\"data\" === row.rowType || \"group\" === row.rowType && false !== allowCollapsing) {\r\n            dataController.changeRowExpand(row.key, true);\r\n            e.event.preventDefault();\r\n            e.handled = true\r\n        }\r\n    }\r\n};\r\nvar columnHeadersViewExtender = {\r\n    getContextMenuItems: function(options) {\r\n        var contextMenuEnabled = this.option(\"grouping.contextMenuEnabled\");\r\n        var items = this.callBase(options);\r\n        if (contextMenuEnabled && options.row && (\"header\" === options.row.rowType || \"detailAdaptive\" === options.row.rowType)) {\r\n            var column = options.column;\r\n            if (!column.command && (!isDefined(column.allowGrouping) || column.allowGrouping)) {\r\n                var groupingTexts = this.option(\"grouping.texts\");\r\n                var isColumnGrouped = isDefined(column.groupIndex) && column.groupIndex > -1;\r\n                var onItemClick = onGroupingMenuItemClick.bind(this, column);\r\n                items = items || [];\r\n                items.push({\r\n                    text: groupingTexts.groupByThisColumn,\r\n                    value: \"group\",\r\n                    beginGroup: true,\r\n                    disabled: isColumnGrouped,\r\n                    onItemClick: onItemClick\r\n                });\r\n                if (column.showWhenGrouped) {\r\n                    items.push({\r\n                        text: groupingTexts.ungroup,\r\n                        value: \"ungroup\",\r\n                        disabled: !isColumnGrouped,\r\n                        onItemClick: onItemClick\r\n                    })\r\n                }\r\n                items.push({\r\n                    text: groupingTexts.ungroupAll,\r\n                    value: \"ungroupAll\",\r\n                    onItemClick: onItemClick\r\n                })\r\n            }\r\n        }\r\n        return items\r\n    }\r\n};\r\ngridCore.registerModule(\"grouping\", {\r\n    defaultOptions: function() {\r\n        return {\r\n            grouping: {\r\n                autoExpandAll: true,\r\n                allowCollapsing: true,\r\n                contextMenuEnabled: false,\r\n                expandMode: \"buttonClick\",\r\n                texts: {\r\n                    groupContinuesMessage: messageLocalization.format(\"dxDataGrid-groupContinuesMessage\"),\r\n                    groupContinuedMessage: messageLocalization.format(\"dxDataGrid-groupContinuedMessage\"),\r\n                    groupByThisColumn: messageLocalization.format(\"dxDataGrid-groupHeaderText\"),\r\n                    ungroup: messageLocalization.format(\"dxDataGrid-ungroupHeaderText\"),\r\n                    ungroupAll: messageLocalization.format(\"dxDataGrid-ungroupAllText\")\r\n                }\r\n            },\r\n            groupPanel: {\r\n                visible: false,\r\n                emptyPanelText: messageLocalization.format(\"dxDataGrid-groupPanelEmptyText\"),\r\n                allowColumnDragging: true\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: GroupingDataControllerExtender,\r\n            columns: {\r\n                _getExpandColumnOptions: function() {\r\n                    var options = this.callBase.apply(this, arguments);\r\n                    options.cellTemplate = gridCore.getExpandCellTemplate();\r\n                    return options\r\n                }\r\n            },\r\n            editing: {\r\n                _isProcessedItem: function(item) {\r\n                    return isDefined(item.groupIndex) && isString(item.rowType) && 0 === item.rowType.indexOf(\"group\")\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            headerPanel: GroupingHeaderPanelExtender,\r\n            rowsView: GroupingRowsViewExtender,\r\n            columnHeadersView: columnHeadersViewExtender\r\n        }\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.master_detail.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    grep\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar MASTER_DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar ROW_LINES_CLASS = \"dx-row-lines\";\r\nexport var masterDetailModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            masterDetail: {\r\n                enabled: false,\r\n                autoExpandAll: false,\r\n                template: null\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            columns: {\r\n                _getExpandColumnsCore: function() {\r\n                    var expandColumns = this.callBase();\r\n                    if (this.option(\"masterDetail.enabled\")) {\r\n                        expandColumns.push({\r\n                            type: \"detailExpand\",\r\n                            cellTemplate: gridCoreUtils.getExpandCellTemplate()\r\n                        })\r\n                    }\r\n                    return expandColumns\r\n                }\r\n            },\r\n            data: function() {\r\n                var initMasterDetail = function(that) {\r\n                    that._expandedItems = [];\r\n                    that._isExpandAll = that.option(\"masterDetail.autoExpandAll\")\r\n                };\r\n                return {\r\n                    init: function() {\r\n                        initMasterDetail(this);\r\n                        this.callBase()\r\n                    },\r\n                    expandAll: function(groupIndex) {\r\n                        var that = this;\r\n                        if (groupIndex < 0) {\r\n                            that._isExpandAll = true;\r\n                            that._expandedItems = [];\r\n                            that.updateItems()\r\n                        } else {\r\n                            that.callBase.apply(that, arguments)\r\n                        }\r\n                    },\r\n                    collapseAll: function(groupIndex) {\r\n                        var that = this;\r\n                        if (groupIndex < 0) {\r\n                            that._isExpandAll = false;\r\n                            that._expandedItems = [];\r\n                            that.updateItems()\r\n                        } else {\r\n                            that.callBase.apply(that, arguments)\r\n                        }\r\n                    },\r\n                    isRowExpanded: function(key) {\r\n                        var that = this;\r\n                        var expandIndex = gridCoreUtils.getIndexByKey(key, that._expandedItems);\r\n                        if (Array.isArray(key)) {\r\n                            return that.callBase.apply(that, arguments)\r\n                        } else {\r\n                            return !!(that._isExpandAll ^ (expandIndex >= 0 && that._expandedItems[expandIndex].visible))\r\n                        }\r\n                    },\r\n                    _getRowIndicesForExpand: function(key) {\r\n                        var rowIndex = this.getRowIndexByKey(key);\r\n                        return [rowIndex, rowIndex + 1]\r\n                    },\r\n                    _changeRowExpandCore: function(key) {\r\n                        var that = this;\r\n                        var result;\r\n                        if (Array.isArray(key)) {\r\n                            result = that.callBase.apply(that, arguments)\r\n                        } else {\r\n                            var expandIndex = gridCoreUtils.getIndexByKey(key, that._expandedItems);\r\n                            if (expandIndex >= 0) {\r\n                                var visible = that._expandedItems[expandIndex].visible;\r\n                                that._expandedItems[expandIndex].visible = !visible\r\n                            } else {\r\n                                that._expandedItems.push({\r\n                                    key: key,\r\n                                    visible: true\r\n                                })\r\n                            }\r\n                            that.updateItems({\r\n                                changeType: \"update\",\r\n                                rowIndices: that._getRowIndicesForExpand(key)\r\n                            });\r\n                            result = (new Deferred).resolve()\r\n                        }\r\n                        return result\r\n                    },\r\n                    _processDataItem: function(data, options) {\r\n                        var that = this;\r\n                        var dataItem = that.callBase.apply(that, arguments);\r\n                        dataItem.isExpanded = that.isRowExpanded(dataItem.key);\r\n                        if (void 0 === options.detailColumnIndex) {\r\n                            options.detailColumnIndex = -1;\r\n                            each(options.visibleColumns, (function(index, column) {\r\n                                if (\"expand\" === column.command && !isDefined(column.groupIndex)) {\r\n                                    options.detailColumnIndex = index;\r\n                                    return false\r\n                                }\r\n                            }))\r\n                        }\r\n                        if (options.detailColumnIndex >= 0) {\r\n                            dataItem.values[options.detailColumnIndex] = dataItem.isExpanded\r\n                        }\r\n                        return dataItem\r\n                    },\r\n                    _processItems: function(items, change) {\r\n                        var that = this;\r\n                        var changeType = change.changeType;\r\n                        var result = [];\r\n                        items = that.callBase.apply(that, arguments);\r\n                        if (\"loadingAll\" === changeType) {\r\n                            return items\r\n                        }\r\n                        if (\"refresh\" === changeType) {\r\n                            that._expandedItems = grep(that._expandedItems, (function(item) {\r\n                                return item.visible\r\n                            }))\r\n                        }\r\n                        each(items, (function(index, item) {\r\n                            result.push(item);\r\n                            var expandIndex = gridCoreUtils.getIndexByKey(item.key, that._expandedItems);\r\n                            if (\"data\" === item.rowType && (item.isExpanded || expandIndex >= 0) && !item.isNewRow) {\r\n                                result.push({\r\n                                    visible: item.isExpanded,\r\n                                    rowType: \"detail\",\r\n                                    key: item.key,\r\n                                    data: item.data,\r\n                                    values: []\r\n                                })\r\n                            }\r\n                        }));\r\n                        return result\r\n                    },\r\n                    optionChanged: function(args) {\r\n                        var isEnabledChanged;\r\n                        var isAutoExpandAllChanged;\r\n                        if (\"masterDetail\" === args.name) {\r\n                            args.name = \"dataSource\";\r\n                            switch (args.fullName) {\r\n                                case \"masterDetail\":\r\n                                    var value = args.value || {};\r\n                                    var previousValue = args.previousValue || {};\r\n                                    isEnabledChanged = value.enabled !== previousValue.enabled;\r\n                                    isAutoExpandAllChanged = value.autoExpandAll !== previousValue.autoExpandAll;\r\n                                    break;\r\n                                case \"masterDetail.template\":\r\n                                    initMasterDetail(this);\r\n                                    break;\r\n                                case \"masterDetail.enabled\":\r\n                                    isEnabledChanged = true;\r\n                                    break;\r\n                                case \"masterDetail.autoExpandAll\":\r\n                                    isAutoExpandAllChanged = true\r\n                            }\r\n                            if (isEnabledChanged || isAutoExpandAllChanged) {\r\n                                initMasterDetail(this)\r\n                            }\r\n                        }\r\n                        this.callBase(args)\r\n                    }\r\n                }\r\n            }(),\r\n            resizing: {\r\n                fireContentReadyAction: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._updateParentDataGrids(this.component.$element())\r\n                },\r\n                _updateParentDataGrids: function($element) {\r\n                    var $masterDetailRow = $element.closest(\".\" + MASTER_DETAIL_ROW_CLASS);\r\n                    if ($masterDetailRow.length) {\r\n                        when(this._updateMasterDataGrid($masterDetailRow, $element)).done(() => {\r\n                            this._updateParentDataGrids($masterDetailRow.parent())\r\n                        })\r\n                    }\r\n                },\r\n                _updateMasterDataGrid: function($masterDetailRow, $detailElement) {\r\n                    var masterRowOptions = $($masterDetailRow).data(\"options\");\r\n                    var masterDataGrid = $($masterDetailRow).closest(\".\" + this.getWidgetContainerClass()).parent().data(\"dxDataGrid\");\r\n                    if (masterRowOptions && masterDataGrid) {\r\n                        if (masterDataGrid.getView(\"rowsView\").isFixedColumns()) {\r\n                            return this._updateFixedMasterDetailGrids(masterDataGrid, masterRowOptions.rowIndex, $detailElement)\r\n                        } else {\r\n                            if (true === masterDataGrid.option(\"scrolling.useNative\")) {\r\n                                return masterDataGrid.updateDimensions()\r\n                            }\r\n                            var scrollable = masterDataGrid.getScrollable();\r\n                            return null === scrollable || void 0 === scrollable ? void 0 : scrollable.update()\r\n                        }\r\n                    }\r\n                },\r\n                _updateFixedMasterDetailGrids: function(masterDataGrid, masterRowIndex, $detailElement) {\r\n                    var $rows = $(masterDataGrid.getRowElement(masterRowIndex));\r\n                    var $tables = $(masterDataGrid.getView(\"rowsView\").getTableElements());\r\n                    var rowsNotEqual = 2 === (null === $rows || void 0 === $rows ? void 0 : $rows.length) && getHeight($rows.eq(0)) !== getHeight($rows.eq(1));\r\n                    var tablesNotEqual = 2 === (null === $tables || void 0 === $tables ? void 0 : $tables.length) && getHeight($tables.eq(0)) !== getHeight($tables.eq(1));\r\n                    if (rowsNotEqual || tablesNotEqual) {\r\n                        var detailElementWidth = getWidth($detailElement);\r\n                        return masterDataGrid.updateDimensions().done(() => {\r\n                            var isDetailHorizontalScrollCanBeShown = this.option(\"columnAutoWidth\") && true === masterDataGrid.option(\"scrolling.useNative\");\r\n                            var isDetailGridWidthChanged = isDetailHorizontalScrollCanBeShown && detailElementWidth !== getWidth($detailElement);\r\n                            if (isDetailHorizontalScrollCanBeShown && isDetailGridWidthChanged) {\r\n                                this.updateDimensions()\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                _toggleBestFitMode: function(isBestFit) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.option(\"masterDetail.template\")) {\r\n                        var $rowsTable = this._rowsView.getTableElement();\r\n                        if ($rowsTable) {\r\n                            $rowsTable.find(\".dx-master-detail-cell\").css(\"maxWidth\", isBestFit ? 0 : \"\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _getCellTemplate: function(options) {\r\n                    var that = this;\r\n                    var column = options.column;\r\n                    var editingController = that.getController(\"editing\");\r\n                    var isEditRow = editingController && editingController.isEditRow(options.rowIndex);\r\n                    var template;\r\n                    if (\"detail\" === column.command && !isEditRow) {\r\n                        template = that.option(\"masterDetail.template\") || {\r\n                            allowRenderToDetachedContainer: false,\r\n                            render: that._getDefaultTemplate(column)\r\n                        }\r\n                    } else {\r\n                        template = that.callBase.apply(that, arguments)\r\n                    }\r\n                    return template\r\n                },\r\n                _isDetailRow: function(row) {\r\n                    return row && row.rowType && 0 === row.rowType.indexOf(\"detail\")\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row && this._isDetailRow(row)) {\r\n                        this.option(\"showRowLines\") && $row.addClass(ROW_LINES_CLASS);\r\n                        $row.addClass(MASTER_DETAIL_ROW_CLASS);\r\n                        if (isDefined(row.visible)) {\r\n                            $row.toggle(row.visible)\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _renderCells: function($row, options) {\r\n                    var row = options.row;\r\n                    var $detailCell;\r\n                    var visibleColumns = this._columnsController.getVisibleColumns();\r\n                    if (row.rowType && this._isDetailRow(row)) {\r\n                        if (this._needRenderCell(0, options.columnIndices)) {\r\n                            $detailCell = this._renderCell($row, {\r\n                                value: null,\r\n                                row: row,\r\n                                rowIndex: row.rowIndex,\r\n                                column: {\r\n                                    command: \"detail\"\r\n                                },\r\n                                columnIndex: 0\r\n                            });\r\n                            $detailCell.addClass(CELL_FOCUS_DISABLED_CLASS).addClass(MASTER_DETAIL_CELL_CLASS).attr(\"colSpan\", visibleColumns.length)\r\n                        }\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.master_detail.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    masterDetailModule\r\n} from \"../grid_core/ui.grid_core.master_detail\";\r\ngridCore.registerModule(\"masterDetail\", masterDetailModule);\r\n","/**\r\n * DevExtreme (esm/ui/shared/ui.editor_factory_mixin.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDefined,\r\n    isObject,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport devices from \"../../core/devices\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    normalizeDataSourceOptions\r\n} from \"../../data/data_source/utils\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nvar {\r\n    isWrapped: isWrapped\r\n} = variableWrapper;\r\nimport \"../text_box\";\r\nimport \"../number_box\";\r\nimport \"../check_box\";\r\nimport \"../select_box\";\r\nimport \"../date_box\";\r\nvar CHECKBOX_SIZE_CLASS = \"checkbox-size\";\r\nvar EDITOR_INLINE_BLOCK = \"dx-editor-inline-block\";\r\nvar EditorFactoryMixin = function() {\r\n    var getResultConfig = function(config, options) {\r\n        return extend(config, {\r\n            readOnly: options.readOnly,\r\n            placeholder: options.placeholder,\r\n            inputAttr: {\r\n                id: options.id\r\n            },\r\n            tabIndex: options.tabIndex\r\n        }, options.editorOptions)\r\n    };\r\n    var checkEnterBug = function() {\r\n        return browser.mozilla || devices.real().ios\r\n    };\r\n    var getTextEditorConfig = function(options) {\r\n        var data = {};\r\n        var isEnterBug = checkEnterBug();\r\n        var sharedData = options.sharedData || data;\r\n        return getResultConfig({\r\n            placeholder: options.placeholder,\r\n            width: options.width,\r\n            value: options.value,\r\n            onValueChanged: function(e) {\r\n                var needDelayedUpdate = \"filterRow\" === options.parentType || \"searchPanel\" === options.parentType;\r\n                var isInputOrKeyUpEvent = e.event && (\"input\" === e.event.type || \"keyup\" === e.event.type);\r\n                var updateValue = function(e, notFireEvent) {\r\n                    options && options.setValue(e.value, notFireEvent)\r\n                };\r\n                clearTimeout(data.valueChangeTimeout);\r\n                if (isInputOrKeyUpEvent && needDelayedUpdate) {\r\n                    sharedData.valueChangeTimeout = data.valueChangeTimeout = setTimeout((function() {\r\n                        updateValue(e, data.valueChangeTimeout !== sharedData.valueChangeTimeout)\r\n                    }), isDefined(options.updateValueTimeout) ? options.updateValueTimeout : 0)\r\n                } else {\r\n                    updateValue(e)\r\n                }\r\n            },\r\n            onKeyDown: function(e) {\r\n                if (isEnterBug && \"enter\" === normalizeKeyName(e.event)) {\r\n                    eventsEngine.trigger($(e.component._input()), \"change\")\r\n                }\r\n            },\r\n            valueChangeEvent: \"change\" + (\"filterRow\" === options.parentType ? \" keyup input\" : \"\")\r\n        }, options)\r\n    };\r\n    var prepareBooleanEditor = function(options) {\r\n        if (\"filterRow\" === options.parentType || \"filterBuilder\" === options.parentType) {\r\n            prepareSelectBox(extend(options, {\r\n                lookup: {\r\n                    displayExpr: function(data) {\r\n                        if (true === data) {\r\n                            return options.trueText || \"true\"\r\n                        } else if (false === data) {\r\n                            return options.falseText || \"false\"\r\n                        }\r\n                    },\r\n                    dataSource: [true, false]\r\n                }\r\n            }))\r\n        } else {\r\n            ! function(options) {\r\n                options.editorName = \"dxCheckBox\";\r\n                options.editorOptions = getResultConfig({\r\n                    elementAttr: {\r\n                        id: options.id\r\n                    },\r\n                    value: isDefined(options.value) ? options.value : void 0,\r\n                    hoverStateEnabled: !options.readOnly,\r\n                    focusStateEnabled: !options.readOnly,\r\n                    activeStateEnabled: false,\r\n                    onValueChanged: function(e) {\r\n                        options.setValue && options.setValue(e.value, e)\r\n                    }\r\n                }, options)\r\n            }(options)\r\n        }\r\n    };\r\n\r\n    function prepareSelectBox(options) {\r\n        var lookup = options.lookup;\r\n        var displayGetter;\r\n        var dataSource;\r\n        var postProcess;\r\n        var isFilterRow = \"filterRow\" === options.parentType;\r\n        if (lookup) {\r\n            displayGetter = compileGetter(lookup.displayExpr);\r\n            dataSource = lookup.dataSource;\r\n            if (isFunction(dataSource) && !isWrapped(dataSource)) {\r\n                dataSource = dataSource(options.row || {});\r\n                ! function(options) {\r\n                    if (options.row && options.row.watch && \"dataRow\" === options.parentType) {\r\n                        var editorOptions = options.editorOptions || {};\r\n                        options.editorOptions = editorOptions;\r\n                        var selectBox;\r\n                        var onInitialized = editorOptions.onInitialized;\r\n                        editorOptions.onInitialized = function(e) {\r\n                            onInitialized && onInitialized.apply(this, arguments);\r\n                            selectBox = e.component;\r\n                            selectBox.on(\"disposing\", stopWatch)\r\n                        };\r\n                        var dataSource;\r\n                        var stopWatch = options.row.watch(() => {\r\n                            dataSource = options.lookup.dataSource(options.row);\r\n                            return dataSource && dataSource.filter\r\n                        }, () => {\r\n                            selectBox.option(\"dataSource\", dataSource)\r\n                        }, row => {\r\n                            options.row = row\r\n                        })\r\n                    }\r\n                }(options)\r\n            }\r\n            if (isObject(dataSource) || Array.isArray(dataSource)) {\r\n                dataSource = normalizeDataSourceOptions(dataSource);\r\n                if (isFilterRow) {\r\n                    postProcess = dataSource.postProcess;\r\n                    dataSource.postProcess = function(items) {\r\n                        if (0 === this.pageIndex()) {\r\n                            items = items.slice(0);\r\n                            items.unshift(null)\r\n                        }\r\n                        if (postProcess) {\r\n                            return postProcess.call(this, items)\r\n                        }\r\n                        return items\r\n                    }\r\n                }\r\n            }\r\n            var allowClearing = Boolean(lookup.allowClearing && !isFilterRow);\r\n            options.editorName = \"dxSelectBox\";\r\n            options.editorOptions = getResultConfig({\r\n                searchEnabled: true,\r\n                value: options.value,\r\n                valueExpr: options.lookup.valueExpr,\r\n                searchExpr: options.lookup.searchExpr || options.lookup.displayExpr,\r\n                allowClearing: allowClearing,\r\n                showClearButton: allowClearing,\r\n                displayExpr: function(data) {\r\n                    if (null === data) {\r\n                        return options.showAllText\r\n                    }\r\n                    return displayGetter(data)\r\n                },\r\n                dataSource: dataSource,\r\n                onValueChanged: function(e) {\r\n                    var params = [e.value];\r\n                    !isFilterRow && params.push(e.component.option(\"text\"));\r\n                    options.setValue.apply(this, params)\r\n                }\r\n            }, options)\r\n        }\r\n    }\r\n    return {\r\n        createEditor: function($container, options) {\r\n            options.cancel = false;\r\n            options.editorElement = getPublicElement($container);\r\n            if (!isDefined(options.tabIndex)) {\r\n                options.tabIndex = this.option(\"tabIndex\")\r\n            }\r\n            if (options.lookup) {\r\n                prepareSelectBox(options)\r\n            } else {\r\n                switch (options.dataType) {\r\n                    case \"date\":\r\n                    case \"datetime\":\r\n                        ! function(options) {\r\n                            options.editorName = \"dxDateBox\";\r\n                            options.editorOptions = getResultConfig({\r\n                                value: options.value,\r\n                                onValueChanged: function(args) {\r\n                                    options.setValue(args.value)\r\n                                },\r\n                                onKeyDown: function(e) {\r\n                                    if (checkEnterBug() && \"enter\" === normalizeKeyName(e.event)) {\r\n                                        e.component.blur();\r\n                                        e.component.focus()\r\n                                    }\r\n                                },\r\n                                displayFormat: options.format,\r\n                                type: options.dataType,\r\n                                dateSerializationFormat: null,\r\n                                width: \"filterBuilder\" === options.parentType ? void 0 : \"auto\"\r\n                            }, options)\r\n                        }(options);\r\n                        break;\r\n                    case \"boolean\":\r\n                        prepareBooleanEditor(options);\r\n                        break;\r\n                    case \"number\":\r\n                        ! function(options) {\r\n                            var config = getTextEditorConfig(options);\r\n                            config.value = isDefined(options.value) ? options.value : null;\r\n                            options.editorName = \"dxNumberBox\";\r\n                            options.editorOptions = config\r\n                        }(options);\r\n                        break;\r\n                    default:\r\n                        ! function(options) {\r\n                            var config = getTextEditorConfig(options);\r\n                            var isSearching = \"searchPanel\" === options.parentType;\r\n                            if (options.editorType && \"dxTextBox\" !== options.editorType) {\r\n                                config.value = options.value\r\n                            } else {\r\n                                config.value = (value = options.value, isDefined(value) ? value.toString() : \"\")\r\n                            }\r\n                            var value;\r\n                            config.valueChangeEvent += isSearching ? \" keyup input search\" : \"\";\r\n                            config.mode = config.mode || (isSearching ? \"search\" : \"text\");\r\n                            options.editorName = \"dxTextBox\";\r\n                            options.editorOptions = config\r\n                        }(options)\r\n                }\r\n            }\r\n            if (\"dataRow\" === options.parentType && options.editorType) {\r\n                options.editorName = options.editorType\r\n            }\r\n            this.executeAction(\"onEditorPreparing\", options);\r\n            if (options.cancel) {\r\n                return\r\n            }\r\n            if (\"dataRow\" === options.parentType && !options.isOnForm && !isDefined(options.editorOptions.showValidationMark)) {\r\n                options.editorOptions.showValidationMark = false\r\n            }! function(that, options) {\r\n                var $editorElement = $(options.editorElement);\r\n                if (options.editorName && options.editorOptions && $editorElement[options.editorName]) {\r\n                    if (\"dxCheckBox\" === options.editorName || \"dxSwitch\" === options.editorName) {\r\n                        if (!options.isOnForm) {\r\n                            $editorElement.addClass(that.addWidgetPrefix(CHECKBOX_SIZE_CLASS));\r\n                            $editorElement.parent().addClass(EDITOR_INLINE_BLOCK)\r\n                        }\r\n                    }\r\n                    that._createComponent($editorElement, options.editorName, options.editorOptions);\r\n                    if (\"dxDateBox\" === options.editorName) {\r\n                        var dateBox = $editorElement.dxDateBox(\"instance\");\r\n                        var defaultEnterKeyHandler = dateBox._supportedKeys().enter;\r\n                        dateBox.registerKeyHandler(\"enter\", e => {\r\n                            if (dateBox.option(\"opened\")) {\r\n                                defaultEnterKeyHandler(e)\r\n                            }\r\n                            return true\r\n                        })\r\n                    }\r\n                    if (\"dxTextArea\" === options.editorName) {\r\n                        $editorElement.dxTextArea(\"instance\").registerKeyHandler(\"enter\", (function(event) {\r\n                            if (\"enter\" === normalizeKeyName(event) && !event.ctrlKey && !event.shiftKey) {\r\n                                event.stopPropagation()\r\n                            }\r\n                        }))\r\n                    }\r\n                }\r\n            }(this, options);\r\n            this.executeAction(\"onEditorPrepared\", options)\r\n        }\r\n    }\r\n}();\r\nexport default EditorFactoryMixin;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editor_factory.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    setOuterWidth,\r\n    getOuterWidth,\r\n    setOuterHeight,\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport positionUtils from \"../../animation/position\";\r\nimport {\r\n    addNamespace,\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport EditorFactoryMixin from \"../shared/ui.editor_factory_mixin\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nvar EDITOR_INLINE_BLOCK = \"dx-editor-inline-block\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FOCUS_OVERLAY_CLASS = \"focus-overlay\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar FOCUSED_ELEMENT_CLASS = \"dx-focused\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar MODULE_NAMESPACE = \"dxDataGridEditorFactory\";\r\nvar UPDATE_FOCUS_EVENTS = addNamespace([pointerEvents.down, \"focusin\", clickEventName].join(\" \"), MODULE_NAMESPACE);\r\nvar DX_HIDDEN = \"dx-hidden\";\r\nvar EditorFactory = modules.ViewController.inherit({\r\n    _getFocusedElement: function($dataGridElement) {\r\n        var rowSelector = this.option(\"focusedRowEnabled\") ? \"tr[tabindex]:focus\" : \"tr[tabindex]:not(.dx-data-row):focus\";\r\n        var focusedElementSelector = \"td[tabindex]:focus, \".concat(rowSelector, \", input:focus, textarea:focus, .dx-lookup-field:focus, .dx-checkbox:focus, .dx-switch:focus, .dx-dropdownbutton .dx-buttongroup:focus\");\r\n        return $dataGridElement.find(focusedElementSelector)\r\n    },\r\n    _getFocusCellSelector: function() {\r\n        return \".dx-row > td\"\r\n    },\r\n    _updateFocusCore: function() {\r\n        var $focus = this._$focusedElement;\r\n        var $dataGridElement = this.component && this.component.$element();\r\n        var $focusCell;\r\n        var hideBorders;\r\n        if ($dataGridElement) {\r\n            $focus = this._getFocusedElement($dataGridElement);\r\n            if ($focus.length) {\r\n                if (!$focus.hasClass(CELL_FOCUS_DISABLED_CLASS) && !$focus.hasClass(ROW_CLASS)) {\r\n                    $focusCell = $focus.closest(this._getFocusCellSelector() + \", .\" + CELL_FOCUS_DISABLED_CLASS);\r\n                    hideBorders = $focusCell.get(0) !== $focus.get(0) && $focusCell.hasClass(EDITOR_INLINE_BLOCK);\r\n                    $focus = $focusCell\r\n                }\r\n                if ($focus.length && !$focus.hasClass(CELL_FOCUS_DISABLED_CLASS)) {\r\n                    this.focus($focus, hideBorders);\r\n                    return\r\n                }\r\n            }\r\n        }\r\n        this.loseFocus()\r\n    },\r\n    _updateFocus: function(e) {\r\n        var that = this;\r\n        var isFocusOverlay = e && e.event && $(e.event.target).hasClass(that.addWidgetPrefix(FOCUS_OVERLAY_CLASS));\r\n        that._isFocusOverlay = that._isFocusOverlay || isFocusOverlay;\r\n        clearTimeout(that._updateFocusTimeoutID);\r\n        that._updateFocusTimeoutID = setTimeout((function() {\r\n            delete that._updateFocusTimeoutID;\r\n            if (!that._isFocusOverlay) {\r\n                that._updateFocusCore()\r\n            }\r\n            that._isFocusOverlay = false\r\n        }))\r\n    },\r\n    _updateFocusOverlaySize: function($element, position) {\r\n        $element.hide();\r\n        var location = positionUtils.calculate($element, extend({\r\n            collision: \"fit\"\r\n        }, position));\r\n        if (location.h.oversize > 0) {\r\n            setOuterWidth($element, getOuterWidth($element) - location.h.oversize)\r\n        }\r\n        if (location.v.oversize > 0) {\r\n            setOuterHeight($element, getOuterHeight($element) - location.v.oversize)\r\n        }\r\n        $element.show()\r\n    },\r\n    callbackNames: function() {\r\n        return [\"focused\"]\r\n    },\r\n    focus: function($element, hideBorder) {\r\n        var that = this;\r\n        if (void 0 === $element) {\r\n            return that._$focusedElement\r\n        } else if ($element) {\r\n            if (!$element.is(that._$focusedElement)) {\r\n                that._$focusedElement && that._$focusedElement.removeClass(FOCUSED_ELEMENT_CLASS)\r\n            }\r\n            that._$focusedElement = $element;\r\n            clearTimeout(that._focusTimeoutID);\r\n            that._focusTimeoutID = setTimeout((function() {\r\n                delete that._focusTimeoutID;\r\n                that.renderFocusOverlay($element, hideBorder);\r\n                $element.addClass(FOCUSED_ELEMENT_CLASS);\r\n                that.focused.fire($element)\r\n            }))\r\n        }\r\n    },\r\n    refocus: function() {\r\n        var $focus = this.focus();\r\n        this.focus($focus)\r\n    },\r\n    renderFocusOverlay: function($element, hideBorder) {\r\n        if (!gridCoreUtils.isElementInCurrentGrid(this, $element)) {\r\n            return\r\n        }\r\n        if (!this._$focusOverlay) {\r\n            this._$focusOverlay = $(\"<div>\").addClass(this.addWidgetPrefix(FOCUS_OVERLAY_CLASS))\r\n        }\r\n        if (hideBorder) {\r\n            this._$focusOverlay.addClass(DX_HIDDEN)\r\n        } else if ($element.length) {\r\n            var align = browser.mozilla ? \"right bottom\" : \"left top\";\r\n            var $content = $element.closest(\".\" + this.addWidgetPrefix(CONTENT_CLASS));\r\n            var elemCoord = getBoundingRect($element.get(0));\r\n            this._$focusOverlay.removeClass(DX_HIDDEN).appendTo($content);\r\n            setOuterHeight(this._$focusOverlay, elemCoord.bottom - elemCoord.top + 1);\r\n            setOuterWidth(this._$focusOverlay, elemCoord.right - elemCoord.left + 1);\r\n            var focusOverlayPosition = {\r\n                precise: true,\r\n                my: align,\r\n                at: align,\r\n                of: $element,\r\n                boundary: $content.length && $content\r\n            };\r\n            this._updateFocusOverlaySize(this._$focusOverlay, focusOverlayPosition);\r\n            positionUtils.setup(this._$focusOverlay, focusOverlayPosition);\r\n            this._$focusOverlay.css(\"visibility\", \"visible\")\r\n        }\r\n    },\r\n    resize: function() {\r\n        var $focusedElement = this._$focusedElement;\r\n        if ($focusedElement) {\r\n            this.focus($focusedElement)\r\n        }\r\n    },\r\n    loseFocus: function() {\r\n        this._$focusedElement && this._$focusedElement.removeClass(FOCUSED_ELEMENT_CLASS);\r\n        this._$focusedElement = null;\r\n        this._$focusOverlay && this._$focusOverlay.addClass(DX_HIDDEN)\r\n    },\r\n    init: function() {\r\n        this.createAction(\"onEditorPreparing\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        this.createAction(\"onEditorPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        this._updateFocusHandler = this._updateFocusHandler || this.createAction(this._updateFocus.bind(this));\r\n        eventsEngine.on(domAdapter.getDocument(), UPDATE_FOCUS_EVENTS, this._updateFocusHandler);\r\n        this._attachContainerEventHandlers()\r\n    },\r\n    _attachContainerEventHandlers: function() {\r\n        var that = this;\r\n        var $container = that.component && that.component.$element();\r\n        if ($container) {\r\n            eventsEngine.on($container, addNamespace(\"keydown\", MODULE_NAMESPACE), (function(e) {\r\n                if (\"tab\" === normalizeKeyName(e)) {\r\n                    that._updateFocusHandler(e)\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    dispose: function() {\r\n        clearTimeout(this._focusTimeoutID);\r\n        clearTimeout(this._updateFocusTimeoutID);\r\n        eventsEngine.off(domAdapter.getDocument(), UPDATE_FOCUS_EVENTS, this._updateFocusHandler)\r\n    }\r\n}).include(EditorFactoryMixin);\r\nexport var editorFactoryModule = {\r\n    defaultOptions: function() {\r\n        return {}\r\n    },\r\n    controllers: {\r\n        editorFactory: EditorFactory\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editor_factory.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    editorFactoryModule\r\n} from \"../grid_core/ui.grid_core.editor_factory\";\r\ngridCore.registerModule(\"editorFactory\", editorFactoryModule);\r\n","/**\r\n * DevExtreme (esm/ui/dialog.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight,\r\n    getWidth\r\n} from \"../core/utils/size\";\r\nimport $ from \"../core/renderer\";\r\nimport {\r\n    Component\r\n} from \"../core/component\";\r\nimport Action from \"../core/action\";\r\nimport devices from \"../core/devices\";\r\nimport config from \"../core/config\";\r\nimport {\r\n    resetActiveElement\r\n} from \"../core/utils/dom\";\r\nimport {\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nimport {\r\n    isPlainObject\r\n} from \"../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    getWindow\r\n} from \"../core/utils/window\";\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport {\r\n    value as getViewport\r\n} from \"../core/utils/view_port\";\r\nimport messageLocalization from \"../localization/message\";\r\nimport errors from \"./widget/ui.errors\";\r\nimport Popup from \"./popup\";\r\nimport {\r\n    ensureDefined\r\n} from \"../core/utils/common\";\r\nvar window = getWindow();\r\nvar DEFAULT_BUTTON = {\r\n    text: \"OK\",\r\n    onClick: function() {\r\n        return true\r\n    }\r\n};\r\nvar DX_DIALOG_CLASSNAME = \"dx-dialog\";\r\nvar DX_DIALOG_WRAPPER_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-wrapper\");\r\nvar DX_DIALOG_ROOT_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-root\");\r\nvar DX_DIALOG_CONTENT_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-content\");\r\nvar DX_DIALOG_MESSAGE_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-message\");\r\nvar DX_DIALOG_BUTTONS_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-buttons\");\r\nvar DX_DIALOG_BUTTON_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-button\");\r\nvar DX_BUTTON_CLASSNAME = \"dx-button\";\r\nexport var FakeDialogComponent = Component.inherit({\r\n    ctor: function(element, options) {\r\n        this.callBase(options)\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                width: 276\r\n            }\r\n        }])\r\n    }\r\n});\r\nexport var custom = function(options) {\r\n    var _options$title;\r\n    var deferred = new Deferred;\r\n    var defaultOptions = (new FakeDialogComponent).option();\r\n    options = extend(defaultOptions, options);\r\n    var $element = $(\"<div>\").addClass(DX_DIALOG_CLASSNAME).appendTo(getViewport());\r\n    var isMessageDefined = \"message\" in options;\r\n    var isMessageHtmlDefined = \"messageHtml\" in options;\r\n    if (isMessageDefined) {\r\n        errors.log(\"W1013\")\r\n    }\r\n    var messageHtml = String(isMessageHtmlDefined ? options.messageHtml : options.message);\r\n    var $message = $(\"<div>\").addClass(DX_DIALOG_MESSAGE_CLASSNAME).html(messageHtml);\r\n    var popupToolbarItems = [];\r\n    each(options.buttons || [DEFAULT_BUTTON], (function() {\r\n        var action = new Action(this.onClick, {\r\n            context: popupInstance\r\n        });\r\n        popupToolbarItems.push({\r\n            toolbar: \"bottom\",\r\n            location: devices.current().android ? \"after\" : \"center\",\r\n            widget: \"dxButton\",\r\n            options: extend({}, this, {\r\n                onClick: function() {\r\n                    var result = action.execute(...arguments);\r\n                    hide(result)\r\n                }\r\n            })\r\n        })\r\n    }));\r\n    var popupInstance = new Popup($element, extend({\r\n        title: null !== (_options$title = options.title) && void 0 !== _options$title ? _options$title : \"\",\r\n        showTitle: ensureDefined(options.showTitle, true),\r\n        dragEnabled: ensureDefined(options.dragEnabled, true),\r\n        height: \"auto\",\r\n        width: options.width,\r\n        showCloseButton: options.showCloseButton || false,\r\n        ignoreChildEvents: false,\r\n        onContentReady: function(args) {\r\n            args.component.$content().addClass(DX_DIALOG_CONTENT_CLASSNAME).append($message)\r\n        },\r\n        onShowing: function(e) {\r\n            e.component.bottomToolbar().addClass(DX_DIALOG_BUTTONS_CLASSNAME).find(\".\".concat(DX_BUTTON_CLASSNAME)).addClass(DX_DIALOG_BUTTON_CLASSNAME);\r\n            resetActiveElement()\r\n        },\r\n        onShown: function(e) {\r\n            var $firstButton = e.component.bottomToolbar().find(\".\".concat(DX_BUTTON_CLASSNAME)).first();\r\n            eventsEngine.trigger($firstButton, \"focus\")\r\n        },\r\n        onHiding: function() {\r\n            deferred.reject()\r\n        },\r\n        toolbarItems: popupToolbarItems,\r\n        animation: {\r\n            show: {\r\n                type: \"pop\",\r\n                duration: 400\r\n            },\r\n            hide: {\r\n                type: \"pop\",\r\n                duration: 400,\r\n                to: {\r\n                    opacity: 0,\r\n                    scale: 0\r\n                },\r\n                from: {\r\n                    opacity: 1,\r\n                    scale: 1\r\n                }\r\n            }\r\n        },\r\n        rtlEnabled: config().rtlEnabled,\r\n        position: {\r\n            boundaryOffset: {\r\n                h: 10,\r\n                v: 0\r\n            }\r\n        }\r\n    }, options.popupOptions));\r\n    popupInstance.$wrapper().addClass(DX_DIALOG_WRAPPER_CLASSNAME);\r\n    if (options.position) {\r\n        popupInstance.option(\"position\", options.position)\r\n    }\r\n    popupInstance.$wrapper().addClass(DX_DIALOG_ROOT_CLASSNAME);\r\n\r\n    function hide(value) {\r\n        deferred.resolve(value);\r\n        popupInstance.hide().done((function() {\r\n            popupInstance.$element().remove()\r\n        }))\r\n    }\r\n    return {\r\n        show: function() {\r\n            if (\"android\" === devices.real().platform) {\r\n                var isPortrait = getHeight(window) > getWidth(window);\r\n                var width = isPortrait ? \"80%\" : \"60%\";\r\n                popupInstance.option({\r\n                    width: width\r\n                })\r\n            }\r\n            popupInstance.show();\r\n            return deferred.promise()\r\n        },\r\n        hide: hide\r\n    }\r\n};\r\nexport var alert = function(messageHtml) {\r\n    var title = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"\";\r\n    var showTitle = arguments.length > 2 ? arguments[2] : void 0;\r\n    var options = isPlainObject(messageHtml) ? messageHtml : {\r\n        title: title,\r\n        messageHtml: messageHtml,\r\n        showTitle: showTitle,\r\n        dragEnabled: showTitle\r\n    };\r\n    return custom(options).show()\r\n};\r\nexport var confirm = function(messageHtml) {\r\n    var title = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"\";\r\n    var showTitle = arguments.length > 2 ? arguments[2] : void 0;\r\n    var options = isPlainObject(messageHtml) ? messageHtml : {\r\n        title: title,\r\n        messageHtml: messageHtml,\r\n        showTitle: showTitle,\r\n        buttons: [{\r\n            text: messageLocalization.format(\"Yes\"),\r\n            onClick: function() {\r\n                return true\r\n            }\r\n        }, {\r\n            text: messageLocalization.format(\"No\"),\r\n            onClick: function() {\r\n                return false\r\n            }\r\n        }],\r\n        dragEnabled: showTitle\r\n    };\r\n    return custom(options).show()\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing_constants.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport var EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nexport var ROW_CLASS = \"dx-row\";\r\nexport var CELL_MODIFIED_CLASS = \"dx-cell-modified\";\r\nexport var ROW_SELECTED_CLASS = \"dx-selection\";\r\nexport var EDIT_FORM_CLASS = \"edit-form\";\r\nexport var DATA_EDIT_DATA_INSERT_TYPE = \"insert\";\r\nexport var DATA_EDIT_DATA_REMOVE_TYPE = \"remove\";\r\nexport var EDITING_POPUP_OPTION_NAME = \"editing.popup\";\r\nexport var EDITING_FORM_OPTION_NAME = \"editing.form\";\r\nexport var EDITING_EDITROWKEY_OPTION_NAME = \"editing.editRowKey\";\r\nexport var EDITING_EDITCOLUMNNAME_OPTION_NAME = \"editing.editColumnName\";\r\nexport var TARGET_COMPONENT_NAME = \"targetComponent\";\r\nexport var EDITORS_INPUT_SELECTOR = \"input:not([type='hidden'])\";\r\nexport var FOCUSABLE_ELEMENT_SELECTOR = \"[tabindex], \" + EDITORS_INPUT_SELECTOR;\r\nexport var EDIT_MODE_BATCH = \"batch\";\r\nexport var EDIT_MODE_ROW = \"row\";\r\nexport var EDIT_MODE_CELL = \"cell\";\r\nexport var EDIT_MODE_FORM = \"form\";\r\nexport var EDIT_MODE_POPUP = \"popup\";\r\nexport var FIRST_NEW_ROW_POSITION = \"first\";\r\nexport var LAST_NEW_ROW_POSITION = \"last\";\r\nexport var PAGE_BOTTOM_NEW_ROW_POSITION = \"pageBottom\";\r\nexport var PAGE_TOP_NEW_ROW_POSITION = \"pageTop\";\r\nexport var VIEWPORT_BOTTOM_NEW_ROW_POSITION = \"viewportBottom\";\r\nexport var VIEWPORT_TOP_NEW_ROW_POSITION = \"viewportTop\";\r\nexport var EDIT_MODES = [EDIT_MODE_BATCH, EDIT_MODE_ROW, EDIT_MODE_CELL, EDIT_MODE_FORM, EDIT_MODE_POPUP];\r\nexport var ROW_BASED_MODES = [EDIT_MODE_ROW, EDIT_MODE_FORM, EDIT_MODE_POPUP];\r\nexport var MODES_WITH_DELAYED_FOCUS = [EDIT_MODE_ROW, EDIT_MODE_FORM];\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Guid from \"../../core/guid\";\r\nimport {\r\n    resetActiveElement\r\n} from \"../../core/utils/dom\";\r\nimport {\r\n    isDefined,\r\n    isObject,\r\n    isFunction,\r\n    isEmptyObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    createObjectWithChanges\r\n} from \"../../data/array_utils\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    confirm\r\n} from \"../dialog\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport devices from \"../../core/devices\";\r\nimport {\r\n    when,\r\n    Deferred,\r\n    fromPromise\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    equalByValue,\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport * as iconUtils from \"../../core/utils/icon\";\r\nimport {\r\n    EDITOR_CELL_CLASS,\r\n    ROW_CLASS,\r\n    EDIT_FORM_CLASS,\r\n    DATA_EDIT_DATA_INSERT_TYPE,\r\n    DATA_EDIT_DATA_REMOVE_TYPE,\r\n    EDITING_POPUP_OPTION_NAME,\r\n    EDITING_EDITROWKEY_OPTION_NAME,\r\n    EDITING_EDITCOLUMNNAME_OPTION_NAME,\r\n    TARGET_COMPONENT_NAME,\r\n    EDITORS_INPUT_SELECTOR,\r\n    FOCUSABLE_ELEMENT_SELECTOR,\r\n    EDIT_MODE_ROW,\r\n    EDIT_MODES,\r\n    ROW_BASED_MODES,\r\n    FIRST_NEW_ROW_POSITION,\r\n    LAST_NEW_ROW_POSITION,\r\n    PAGE_BOTTOM_NEW_ROW_POSITION,\r\n    PAGE_TOP_NEW_ROW_POSITION,\r\n    VIEWPORT_BOTTOM_NEW_ROW_POSITION,\r\n    VIEWPORT_TOP_NEW_ROW_POSITION\r\n} from \"./ui.grid_core.editing_constants\";\r\nvar READONLY_CLASS = \"readonly\";\r\nvar LINK_CLASS = \"dx-link\";\r\nvar ROW_SELECTED = \"dx-selection\";\r\nvar EDIT_BUTTON_CLASS = \"dx-edit-button\";\r\nvar COMMAND_EDIT_CLASS = \"dx-command-edit\";\r\nvar COMMAND_EDIT_WITH_ICONS_CLASS = COMMAND_EDIT_CLASS + \"-with-icons\";\r\nvar INSERT_INDEX = \"__DX_INSERT_INDEX__\";\r\nvar ROW_INSERTED = \"dx-row-inserted\";\r\nvar ROW_MODIFIED = \"dx-row-modified\";\r\nvar CELL_MODIFIED = \"dx-cell-modified\";\r\nvar EDITING_NAMESPACE = \"dxDataGridEditing\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar DATA_EDIT_DATA_UPDATE_TYPE = \"update\";\r\nvar DEFAULT_START_EDIT_ACTION = \"click\";\r\nvar EDIT_LINK_CLASS = {\r\n    save: \"dx-link-save\",\r\n    cancel: \"dx-link-cancel\",\r\n    edit: \"dx-link-edit\",\r\n    undelete: \"dx-link-undelete\",\r\n    delete: \"dx-link-delete\",\r\n    add: \"dx-link-add\"\r\n};\r\nvar EDIT_ICON_CLASS = {\r\n    save: \"save\",\r\n    cancel: \"revert\",\r\n    edit: \"edit\",\r\n    undelete: \"revert\",\r\n    delete: \"trash\",\r\n    add: \"add\"\r\n};\r\nvar METHOD_NAMES = {\r\n    edit: \"editRow\",\r\n    delete: \"deleteRow\",\r\n    undelete: \"undeleteRow\",\r\n    save: \"saveEditData\",\r\n    cancel: \"cancelEditData\",\r\n    add: \"addRowByRowIndex\"\r\n};\r\nvar ACTION_OPTION_NAMES = {\r\n    add: \"allowAdding\",\r\n    edit: \"allowUpdating\",\r\n    delete: \"allowDeleting\"\r\n};\r\nvar BUTTON_NAMES = [\"edit\", \"save\", \"cancel\", \"delete\", \"undelete\"];\r\nvar EDITING_CHANGES_OPTION_NAME = \"editing.changes\";\r\nvar createFailureHandler = function(deferred) {\r\n    return function(arg) {\r\n        var error = arg instanceof Error ? arg : new Error(arg && String(arg) || \"Unknown error\");\r\n        deferred.reject(error)\r\n    }\r\n};\r\nvar isEditingCell = function(isEditRow, cellOptions) {\r\n    return cellOptions.isEditing || isEditRow && cellOptions.column.allowEditing\r\n};\r\nvar isEditingOrShowEditorAlwaysDataCell = function(isEditRow, cellOptions) {\r\n    var isCommandCell = !!cellOptions.column.command;\r\n    var isEditing = isEditingCell(isEditRow, cellOptions);\r\n    var isEditorCell = !isCommandCell && (isEditing || cellOptions.column.showEditorAlways);\r\n    return \"data\" === cellOptions.rowType && isEditorCell\r\n};\r\nvar EditingController = modules.ViewController.inherit(function() {\r\n    var getButtonIndex = (buttons, name) => {\r\n        var result = -1;\r\n        buttons.some((button, index) => {\r\n            if (getButtonName(button) === name) {\r\n                result = index;\r\n                return true\r\n            }\r\n        });\r\n        return result\r\n    };\r\n\r\n    function getButtonName(button) {\r\n        return isObject(button) ? button.name : button\r\n    }\r\n    return {\r\n        init: function() {\r\n            this._columnsController = this.getController(\"columns\");\r\n            this._dataController = this.getController(\"data\");\r\n            this._rowsView = this.getView(\"rowsView\");\r\n            this._lastOperation = null;\r\n            if (this._deferreds) {\r\n                this._deferreds.forEach(d => d.reject(\"cancel\"))\r\n            }\r\n            this._deferreds = [];\r\n            if (!this._dataChangedHandler) {\r\n                this._dataChangedHandler = this._handleDataChanged.bind(this);\r\n                this._dataController.changed.add(this._dataChangedHandler)\r\n            }\r\n            if (!this._saveEditorHandler) {\r\n                this.createAction(\"onInitNewRow\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowInserting\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowInserted\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onEditingStart\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowUpdating\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowUpdated\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowRemoving\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowRemoved\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onSaved\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onSaving\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onEditCanceling\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onEditCanceled\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                })\r\n            }\r\n            this._updateEditColumn();\r\n            this._updateEditButtons();\r\n            if (!this._internalState) {\r\n                this._internalState = []\r\n            }\r\n            this.component._optionsByReference[EDITING_EDITROWKEY_OPTION_NAME] = true;\r\n            this.component._optionsByReference[EDITING_CHANGES_OPTION_NAME] = true\r\n        },\r\n        getEditMode: function() {\r\n            var editMode = this.option(\"editing.mode\");\r\n            if (-1 !== EDIT_MODES.indexOf(editMode)) {\r\n                return editMode\r\n            }\r\n            return EDIT_MODE_ROW\r\n        },\r\n        _getDefaultEditorTemplate: function() {\r\n            return (container, options) => {\r\n                var $editor = $(\"<div>\").appendTo(container);\r\n                this.getController(\"editorFactory\").createEditor($editor, extend({}, options.column, {\r\n                    value: options.value,\r\n                    setValue: options.setValue,\r\n                    row: options.row,\r\n                    parentType: \"dataRow\",\r\n                    width: null,\r\n                    readOnly: !options.setValue,\r\n                    isOnForm: options.isOnForm,\r\n                    id: options.id\r\n                }))\r\n            }\r\n        },\r\n        _getNewRowPosition: function() {\r\n            var newRowPosition = this.option(\"editing.newRowPosition\");\r\n            var scrollingMode = this.option(\"scrolling.mode\");\r\n            if (\"virtual\" === scrollingMode) {\r\n                switch (newRowPosition) {\r\n                    case PAGE_TOP_NEW_ROW_POSITION:\r\n                        return VIEWPORT_TOP_NEW_ROW_POSITION;\r\n                    case PAGE_BOTTOM_NEW_ROW_POSITION:\r\n                        return VIEWPORT_BOTTOM_NEW_ROW_POSITION;\r\n                    default:\r\n                        return newRowPosition\r\n                }\r\n            }\r\n            return newRowPosition\r\n        },\r\n        getChanges: function() {\r\n            return this.option(EDITING_CHANGES_OPTION_NAME)\r\n        },\r\n        getInsertRowCount: function() {\r\n            var changes = this.option(EDITING_CHANGES_OPTION_NAME);\r\n            return changes.filter(change => \"insert\" === change.type).length\r\n        },\r\n        resetChanges: function() {\r\n            var changes = this.getChanges();\r\n            var needReset = null === changes || void 0 === changes ? void 0 : changes.length;\r\n            if (needReset) {\r\n                this._silentOption(EDITING_CHANGES_OPTION_NAME, [])\r\n            }\r\n        },\r\n        _getInternalData: function(key) {\r\n            return this._internalState.filter(item => equalByValue(item.key, key))[0]\r\n        },\r\n        _addInternalData: function(params) {\r\n            var internalData = this._getInternalData(params.key);\r\n            if (internalData) {\r\n                return extend(internalData, params)\r\n            }\r\n            this._internalState.push(params);\r\n            return params\r\n        },\r\n        _getOldData: function(key) {\r\n            var _this$_getInternalDat;\r\n            return null === (_this$_getInternalDat = this._getInternalData(key)) || void 0 === _this$_getInternalDat ? void 0 : _this$_getInternalDat.oldData\r\n        },\r\n        getUpdatedData: function(data) {\r\n            var key = this._dataController.keyOf(data);\r\n            var changes = this.getChanges();\r\n            var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n            if (changes[editIndex]) {\r\n                return createObjectWithChanges(data, changes[editIndex].data)\r\n            }\r\n            return data\r\n        },\r\n        getInsertedData: function() {\r\n            return this.getChanges().filter(change => change.data && change.type === DATA_EDIT_DATA_INSERT_TYPE).map(change => change.data)\r\n        },\r\n        getRemovedData: function() {\r\n            return this.getChanges().filter(change => this._getOldData(change.key) && change.type === DATA_EDIT_DATA_REMOVE_TYPE).map(change => this._getOldData(change.key))\r\n        },\r\n        _fireDataErrorOccurred: function(arg) {\r\n            if (\"cancel\" === arg) {\r\n                return\r\n            }\r\n            var $popupContent = this.getPopupContent();\r\n            this._dataController.dataErrorOccurred.fire(arg, $popupContent)\r\n        },\r\n        _needToCloseEditableCell: noop,\r\n        _closeEditItem: noop,\r\n        _handleDataChanged: noop,\r\n        _isDefaultButtonVisible: function(button, options) {\r\n            var result = true;\r\n            switch (button.name) {\r\n                case \"delete\":\r\n                    result = this.allowDeleting(options);\r\n                    break;\r\n                case \"undelete\":\r\n                    result = false\r\n            }\r\n            return result\r\n        },\r\n        _isButtonVisible: function(button, options) {\r\n            var visible = button.visible;\r\n            if (!isDefined(visible)) {\r\n                return this._isDefaultButtonVisible(button, options)\r\n            }\r\n            return isFunction(visible) ? visible.call(button, {\r\n                component: options.component,\r\n                row: options.row,\r\n                column: options.column\r\n            }) : visible\r\n        },\r\n        _isButtonDisabled: function(button, options) {\r\n            var disabled = button.disabled;\r\n            return isFunction(disabled) ? disabled.call(button, {\r\n                component: options.component,\r\n                row: options.row,\r\n                column: options.column\r\n            }) : !!disabled\r\n        },\r\n        _getButtonConfig: function(button, options) {\r\n            var config = isObject(button) ? button : {};\r\n            var buttonName = getButtonName(button);\r\n            var editingTexts = (options => {\r\n                var editingTexts = options.component.option(\"editing.texts\") || {};\r\n                return {\r\n                    save: editingTexts.saveRowChanges,\r\n                    cancel: editingTexts.cancelRowChanges,\r\n                    edit: editingTexts.editRow,\r\n                    undelete: editingTexts.undeleteRow,\r\n                    delete: editingTexts.deleteRow,\r\n                    add: editingTexts.addRowToNode\r\n                }\r\n            })(options);\r\n            var methodName = METHOD_NAMES[buttonName];\r\n            var editingOptions = this.option(\"editing\");\r\n            var actionName = ACTION_OPTION_NAMES[buttonName];\r\n            var allowAction = actionName ? editingOptions[actionName] : true;\r\n            return extend({\r\n                name: buttonName,\r\n                text: editingTexts[buttonName],\r\n                cssClass: EDIT_LINK_CLASS[buttonName]\r\n            }, {\r\n                onClick: methodName && (e => {\r\n                    var event = e.event;\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    setTimeout(() => {\r\n                        options.row && allowAction && this[methodName] && this[methodName](options.row.rowIndex)\r\n                    })\r\n                })\r\n            }, config)\r\n        },\r\n        _getEditingButtons: function(options) {\r\n            var buttonIndex;\r\n            var haveCustomButtons = !!options.column.buttons;\r\n            var buttons = (options.column.buttons || []).slice();\r\n            if (haveCustomButtons) {\r\n                buttonIndex = getButtonIndex(buttons, \"edit\");\r\n                if (buttonIndex >= 0) {\r\n                    if (getButtonIndex(buttons, \"save\") < 0) {\r\n                        buttons.splice(buttonIndex + 1, 0, \"save\")\r\n                    }\r\n                    if (getButtonIndex(buttons, \"cancel\") < 0) {\r\n                        buttons.splice(getButtonIndex(buttons, \"save\") + 1, 0, \"cancel\")\r\n                    }\r\n                }\r\n                buttonIndex = getButtonIndex(buttons, \"delete\");\r\n                if (buttonIndex >= 0 && getButtonIndex(buttons, \"undelete\") < 0) {\r\n                    buttons.splice(buttonIndex + 1, 0, \"undelete\")\r\n                }\r\n            } else {\r\n                buttons = BUTTON_NAMES.slice()\r\n            }\r\n            return buttons.map(button => this._getButtonConfig(button, options))\r\n        },\r\n        _renderEditingButtons: function($container, buttons, options, change) {\r\n            buttons.forEach(button => {\r\n                if (this._isButtonVisible(button, options)) {\r\n                    this._createButton($container, button, options, change)\r\n                }\r\n            })\r\n        },\r\n        _getEditCommandCellTemplate: function() {\r\n            return (container, options, change) => {\r\n                var $container = $(container);\r\n                if (\"data\" === options.rowType) {\r\n                    var buttons = this._getEditingButtons(options);\r\n                    this._renderEditingButtons($container, buttons, options, change);\r\n                    options.watch && options.watch(() => buttons.map(button => this._isButtonVisible(button, options)), () => {\r\n                        $container.empty();\r\n                        this._renderEditingButtons($container, buttons, options)\r\n                    })\r\n                } else {\r\n                    gridCoreUtils.setEmptyText($container)\r\n                }\r\n            }\r\n        },\r\n        isRowBasedEditMode: function() {\r\n            var editMode = this.getEditMode();\r\n            return -1 !== ROW_BASED_MODES.indexOf(editMode)\r\n        },\r\n        getFirstEditableColumnIndex: function() {\r\n            var columnsController = this.getController(\"columns\");\r\n            var columnIndex;\r\n            var visibleColumns = columnsController.getVisibleColumns();\r\n            each(visibleColumns, (function(index, column) {\r\n                if (column.allowEditing) {\r\n                    columnIndex = index;\r\n                    return false\r\n                }\r\n            }));\r\n            return columnIndex\r\n        },\r\n        getFirstEditableCellInRow: function(rowIndex) {\r\n            var rowsView = this.getView(\"rowsView\");\r\n            return rowsView && rowsView._getCellElement(rowIndex ? rowIndex : 0, this.getFirstEditableColumnIndex())\r\n        },\r\n        getFocusedCellInRow: function(rowIndex) {\r\n            return this.getFirstEditableCellInRow(rowIndex)\r\n        },\r\n        getIndexByKey: function(key, items) {\r\n            return gridCoreUtils.getIndexByKey(key, items)\r\n        },\r\n        hasChanges: function(rowIndex) {\r\n            var changes = this.getChanges();\r\n            var result = false;\r\n            for (var i = 0; i < (null === changes || void 0 === changes ? void 0 : changes.length); i++) {\r\n                if (changes[i].type && (!isDefined(rowIndex) || this._dataController.getRowIndexByKey(changes[i].key) === rowIndex)) {\r\n                    result = true;\r\n                    break\r\n                }\r\n            }\r\n            return result\r\n        },\r\n        dispose: function() {\r\n            this.callBase();\r\n            clearTimeout(this._inputFocusTimeoutID);\r\n            eventsEngine.off(domAdapter.getDocument(), pointerEvents.up, this._pointerUpEditorHandler);\r\n            eventsEngine.off(domAdapter.getDocument(), pointerEvents.down, this._pointerDownEditorHandler);\r\n            eventsEngine.off(domAdapter.getDocument(), clickEventName, this._saveEditorHandler)\r\n        },\r\n        optionChanged: function(args) {\r\n            if (\"editing\" === args.name) {\r\n                var fullName = args.fullName;\r\n                if (fullName === EDITING_EDITROWKEY_OPTION_NAME) {\r\n                    this._handleEditRowKeyChange(args)\r\n                } else if (fullName === EDITING_CHANGES_OPTION_NAME) {\r\n                    this._handleChangesChange(args)\r\n                } else if (!args.handled) {\r\n                    this._columnsController.reinit();\r\n                    this.init();\r\n                    this.resetChanges();\r\n                    this._resetEditColumnName();\r\n                    this._resetEditRowKey()\r\n                }\r\n                args.handled = true\r\n            } else {\r\n                this.callBase(args)\r\n            }\r\n        },\r\n        _handleEditRowKeyChange: function(args) {\r\n            var rowIndex = this._dataController.getRowIndexByKey(args.value);\r\n            var oldRowIndexCorrection = this._getEditRowIndexCorrection();\r\n            var oldRowIndex = this._dataController.getRowIndexByKey(args.previousValue) + oldRowIndexCorrection;\r\n            if (isDefined(args.value)) {\r\n                if (args.value !== args.previousValue) {\r\n                    this._editRowFromOptionChanged(rowIndex, oldRowIndex)\r\n                }\r\n            } else {\r\n                this.cancelEditData()\r\n            }\r\n        },\r\n        _handleChangesChange: function(args) {\r\n            var dataController = this._dataController;\r\n            if (!args.value.length && !args.previousValue.length) {\r\n                return\r\n            }\r\n            this._processInsertChanges(args.value);\r\n            dataController.updateItems({\r\n                repaintChangesOnly: true\r\n            })\r\n        },\r\n        _processInsertChanges: function(changes) {\r\n            changes.forEach(change => {\r\n                if (\"insert\" === change.type) {\r\n                    this._addInsertInfo(change)\r\n                }\r\n            })\r\n        },\r\n        publicMethods: function() {\r\n            return [\"addRow\", \"deleteRow\", \"undeleteRow\", \"editRow\", \"saveEditData\", \"cancelEditData\", \"hasEditData\"]\r\n        },\r\n        refresh: function(isPageChanged) {\r\n            if (!isDefined(this._pageIndex)) {\r\n                return\r\n            }\r\n            this._refreshCore(isPageChanged)\r\n        },\r\n        _refreshCore: noop,\r\n        isEditing: function() {\r\n            var isEditRowKeyDefined = isDefined(this.option(EDITING_EDITROWKEY_OPTION_NAME));\r\n            return isEditRowKeyDefined\r\n        },\r\n        isEditRow: function() {\r\n            return false\r\n        },\r\n        _setEditRowKey: function(value, silent) {\r\n            if (silent) {\r\n                this._silentOption(EDITING_EDITROWKEY_OPTION_NAME, value)\r\n            } else {\r\n                this.option(EDITING_EDITROWKEY_OPTION_NAME, value)\r\n            }\r\n        },\r\n        _setEditRowKeyByIndex: function(rowIndex, silent) {\r\n            var key = this._dataController.getKeyByRowIndex(rowIndex);\r\n            if (void 0 === key) {\r\n                this._dataController.fireError(\"E1043\");\r\n                return\r\n            }\r\n            this._setEditRowKey(key, silent)\r\n        },\r\n        getEditRowIndex: function() {\r\n            return this._getVisibleEditRowIndex()\r\n        },\r\n        getEditFormRowIndex: function() {\r\n            return -1\r\n        },\r\n        _isEditRowByIndex(rowIndex) {\r\n            var key = this._dataController.getKeyByRowIndex(rowIndex);\r\n            var isKeyEqual = isDefined(key) && equalByValue(this.option(EDITING_EDITROWKEY_OPTION_NAME), key);\r\n            if (isKeyEqual) {\r\n                return this._getVisibleEditRowIndex() === rowIndex\r\n            }\r\n            return isKeyEqual\r\n        },\r\n        isEditCell: function(visibleRowIndex, columnIndex) {\r\n            return this._isEditRowByIndex(visibleRowIndex) && this._getVisibleEditColumnIndex() === columnIndex\r\n        },\r\n        getPopupContent: noop,\r\n        _isProcessedItem: function(item) {\r\n            return false\r\n        },\r\n        _getInsertRowIndex: function(items, change, isProcessedItems) {\r\n            var result = -1;\r\n            var dataController = this._dataController;\r\n            var key = this._getInsertAfterOrBeforeKey(change);\r\n            if (!isDefined(key) && 0 === items.length) {\r\n                result = 0\r\n            } else if (isDefined(key)) {\r\n                items.some((item, index) => {\r\n                    var isProcessedItem = isProcessedItems || this._isProcessedItem(item);\r\n                    if (isObject(item)) {\r\n                        if (isProcessedItem || isDefined(item[INSERT_INDEX])) {\r\n                            if (equalByValue(item.key, key)) {\r\n                                result = index\r\n                            }\r\n                        } else if (equalByValue(dataController.keyOf(item), key)) {\r\n                            result = index\r\n                        }\r\n                    }\r\n                    if (result >= 0) {\r\n                        var nextItem = items[result + 1];\r\n                        if (nextItem && (\"detail\" === nextItem.rowType || \"detailAdaptive\" === nextItem.rowType) && isDefined(change.insertAfterKey)) {\r\n                            return\r\n                        }\r\n                        if (isDefined(change.insertAfterKey)) {\r\n                            result += 1\r\n                        }\r\n                        return true\r\n                    }\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        _generateNewItem: function(key) {\r\n            var _this$_getInternalDat2;\r\n            var item = {\r\n                key: key\r\n            };\r\n            var insertInfo = null === (_this$_getInternalDat2 = this._getInternalData(key)) || void 0 === _this$_getInternalDat2 ? void 0 : _this$_getInternalDat2.insertInfo;\r\n            if (null !== insertInfo && void 0 !== insertInfo && insertInfo[INSERT_INDEX]) {\r\n                item[INSERT_INDEX] = insertInfo[INSERT_INDEX]\r\n            }\r\n            return item\r\n        },\r\n        _getLoadedRowIndex: function(items, change, isProcessedItems) {\r\n            var loadedRowIndex = this._getInsertRowIndex(items, change, isProcessedItems);\r\n            var dataController = this._dataController;\r\n            if (loadedRowIndex < 0) {\r\n                var newRowPosition = this._getNewRowPosition();\r\n                var pageIndex = dataController.pageIndex();\r\n                var insertAfterOrBeforeKey = this._getInsertAfterOrBeforeKey(change);\r\n                if (newRowPosition !== LAST_NEW_ROW_POSITION && 0 === pageIndex && !isDefined(insertAfterOrBeforeKey)) {\r\n                    loadedRowIndex = 0\r\n                } else if (newRowPosition === LAST_NEW_ROW_POSITION && dataController.isLastPageLoaded()) {\r\n                    loadedRowIndex = items.length\r\n                }\r\n            }\r\n            return loadedRowIndex\r\n        },\r\n        processItems: function(items, e) {\r\n            var changeType = e.changeType;\r\n            this.update(changeType);\r\n            var changes = this.getChanges();\r\n            changes.forEach(change => {\r\n                var _this$_getInternalDat3;\r\n                var isInsert = change.type === DATA_EDIT_DATA_INSERT_TYPE;\r\n                if (!isInsert) {\r\n                    return\r\n                }\r\n                var key = change.key;\r\n                var insertInfo = null === (_this$_getInternalDat3 = this._getInternalData(key)) || void 0 === _this$_getInternalDat3 ? void 0 : _this$_getInternalDat3.insertInfo;\r\n                if (!isDefined(key) || !isDefined(insertInfo)) {\r\n                    insertInfo = this._addInsertInfo(change);\r\n                    key = insertInfo.key\r\n                }\r\n                var loadedRowIndex = this._getLoadedRowIndex(items, change);\r\n                var item = this._generateNewItem(key);\r\n                if (loadedRowIndex >= 0) {\r\n                    items.splice(loadedRowIndex, 0, item)\r\n                }\r\n            });\r\n            return items\r\n        },\r\n        processDataItem: function(item, options, generateDataValues) {\r\n            var columns = options.visibleColumns;\r\n            var key = item.data[INSERT_INDEX] ? item.data.key : item.key;\r\n            var changes = this.getChanges();\r\n            var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n            item.isEditing = false;\r\n            if (editIndex >= 0) {\r\n                this._processDataItemCore(item, changes[editIndex], key, columns, generateDataValues)\r\n            }\r\n        },\r\n        _processDataItemCore: function(item, change, key, columns, generateDataValues) {\r\n            var {\r\n                data: data,\r\n                type: type\r\n            } = change;\r\n            switch (type) {\r\n                case DATA_EDIT_DATA_INSERT_TYPE:\r\n                    item.isNewRow = true;\r\n                    item.key = key;\r\n                    item.data = data;\r\n                    break;\r\n                case DATA_EDIT_DATA_UPDATE_TYPE:\r\n                    item.modified = true;\r\n                    item.oldData = item.data;\r\n                    item.data = createObjectWithChanges(item.data, data);\r\n                    item.modifiedValues = generateDataValues(data, columns, true);\r\n                    break;\r\n                case DATA_EDIT_DATA_REMOVE_TYPE:\r\n                    item.removed = true\r\n            }\r\n        },\r\n        _initNewRow: function(options) {\r\n            this.executeAction(\"onInitNewRow\", options);\r\n            if (options.promise) {\r\n                var deferred = new Deferred;\r\n                when(fromPromise(options.promise)).done(deferred.resolve).fail(createFailureHandler(deferred)).fail(arg => this._fireDataErrorOccurred(arg));\r\n                return deferred\r\n            }\r\n        },\r\n        _createInsertInfo: function() {\r\n            var insertInfo = {};\r\n            insertInfo[INSERT_INDEX] = this._getInsertIndex();\r\n            return insertInfo\r\n        },\r\n        _addInsertInfo: function(change, parentKey) {\r\n            var _this$_getInternalDat4;\r\n            var insertInfo;\r\n            var {\r\n                key: key\r\n            } = change;\r\n            if (!isDefined(key)) {\r\n                key = String(new Guid);\r\n                change.key = key\r\n            }\r\n            insertInfo = null === (_this$_getInternalDat4 = this._getInternalData(key)) || void 0 === _this$_getInternalDat4 ? void 0 : _this$_getInternalDat4.insertInfo;\r\n            if (!isDefined(insertInfo)) {\r\n                var insertAfterOrBeforeKey = this._getInsertAfterOrBeforeKey(change);\r\n                insertInfo = this._createInsertInfo();\r\n                if (!isDefined(insertAfterOrBeforeKey)) {\r\n                    this._setInsertAfterOrBeforeKey(change, parentKey)\r\n                }\r\n            }\r\n            this._addInternalData({\r\n                insertInfo: insertInfo,\r\n                key: key\r\n            });\r\n            return {\r\n                insertInfo: insertInfo,\r\n                key: key\r\n            }\r\n        },\r\n        _setInsertAfterOrBeforeKey: function(change, parentKey) {\r\n            var dataController = this._dataController;\r\n            var allItems = dataController.items(true);\r\n            var rowsView = this.getView(\"rowsView\");\r\n            var newRowPosition = this._getNewRowPosition();\r\n            switch (newRowPosition) {\r\n                case FIRST_NEW_ROW_POSITION:\r\n                case LAST_NEW_ROW_POSITION:\r\n                    break;\r\n                case PAGE_TOP_NEW_ROW_POSITION:\r\n                case PAGE_BOTTOM_NEW_ROW_POSITION:\r\n                    if (allItems.length) {\r\n                        var itemIndex = newRowPosition === PAGE_TOP_NEW_ROW_POSITION ? 0 : allItems.length - 1;\r\n                        change[0 === itemIndex ? \"insertBeforeKey\" : \"insertAfterKey\"] = allItems[itemIndex].key\r\n                    }\r\n                    break;\r\n                default:\r\n                    var isViewportBottom = newRowPosition === VIEWPORT_BOTTOM_NEW_ROW_POSITION;\r\n                    var visibleItemIndex = isViewportBottom ? null === rowsView || void 0 === rowsView ? void 0 : rowsView.getBottomVisibleItemIndex() : null === rowsView || void 0 === rowsView ? void 0 : rowsView.getTopVisibleItemIndex();\r\n                    var row = dataController.getVisibleRows()[visibleItemIndex];\r\n                    if (row && (!row.isEditing && \"detail\" === row.rowType || \"detailAdaptive\" === row.rowType)) {\r\n                        visibleItemIndex++\r\n                    }\r\n                    var insertKey = dataController.getKeyByRowIndex(visibleItemIndex);\r\n                    if (isDefined(insertKey)) {\r\n                        change.insertBeforeKey = insertKey\r\n                    }\r\n            }\r\n        },\r\n        _getInsertIndex: function() {\r\n            var maxInsertIndex = 0;\r\n            this.getChanges().forEach(editItem => {\r\n                var _this$_getInternalDat5;\r\n                var insertInfo = null === (_this$_getInternalDat5 = this._getInternalData(editItem.key)) || void 0 === _this$_getInternalDat5 ? void 0 : _this$_getInternalDat5.insertInfo;\r\n                if (isDefined(insertInfo) && editItem.type === DATA_EDIT_DATA_INSERT_TYPE && insertInfo[INSERT_INDEX] > maxInsertIndex) {\r\n                    maxInsertIndex = insertInfo[INSERT_INDEX]\r\n                }\r\n            });\r\n            return maxInsertIndex + 1\r\n        },\r\n        _getInsertAfterOrBeforeKey: function(insertChange) {\r\n            var _insertChange$insertA;\r\n            return null !== (_insertChange$insertA = insertChange.insertAfterKey) && void 0 !== _insertChange$insertA ? _insertChange$insertA : insertChange.insertBeforeKey\r\n        },\r\n        _getPageIndexToInsertRow: function() {\r\n            var newRowPosition = this._getNewRowPosition();\r\n            var dataController = this._dataController;\r\n            var pageIndex = dataController.pageIndex();\r\n            var lastPageIndex = dataController.pageCount() - 1;\r\n            if (newRowPosition === FIRST_NEW_ROW_POSITION && 0 !== pageIndex) {\r\n                return 0\r\n            } else if (newRowPosition === LAST_NEW_ROW_POSITION && pageIndex !== lastPageIndex) {\r\n                return lastPageIndex\r\n            }\r\n            return -1\r\n        },\r\n        addRow: function(parentKey) {\r\n            var dataController = this._dataController;\r\n            var store = dataController.store();\r\n            if (!store) {\r\n                dataController.fireError(\"E1052\", this.component.NAME);\r\n                return (new Deferred).reject()\r\n            }\r\n            return this._addRow(parentKey)\r\n        },\r\n        _addRow: function(parentKey) {\r\n            var dataController = this._dataController;\r\n            var store = dataController.store();\r\n            var key = store && store.key();\r\n            var param = {\r\n                data: {}\r\n            };\r\n            var oldEditRowIndex = this._getVisibleEditRowIndex();\r\n            var deferred = new Deferred;\r\n            this.refresh();\r\n            if (!this._allowRowAdding()) {\r\n                when(this._navigateToNewRow(oldEditRowIndex)).done(deferred.resolve).fail(deferred.reject);\r\n                return deferred.promise()\r\n            }\r\n            if (!key) {\r\n                param.data.__KEY__ = String(new Guid)\r\n            }\r\n            when(this._initNewRow(param, parentKey)).done(() => {\r\n                if (this._allowRowAdding()) {\r\n                    when(this._addRowCore(param.data, parentKey, oldEditRowIndex)).done(deferred.resolve).fail(deferred.reject)\r\n                } else {\r\n                    deferred.reject(\"cancel\")\r\n                }\r\n            }).fail(deferred.reject);\r\n            return deferred.promise()\r\n        },\r\n        _allowRowAdding: function() {\r\n            var insertIndex = this._getInsertIndex();\r\n            if (insertIndex > 1) {\r\n                return false\r\n            }\r\n            return true\r\n        },\r\n        _addRowCore: function(data, parentKey, initialOldEditRowIndex) {\r\n            var change = {\r\n                data: data,\r\n                type: DATA_EDIT_DATA_INSERT_TYPE\r\n            };\r\n            var editRowIndex = this._getVisibleEditRowIndex();\r\n            var insertInfo = this._addInsertInfo(change, parentKey);\r\n            var key = insertInfo.key;\r\n            this._setEditRowKey(key, true);\r\n            this._addChange(change);\r\n            return this._navigateToNewRow(initialOldEditRowIndex, change, editRowIndex)\r\n        },\r\n        _navigateToNewRow: function(oldEditRowIndex, change, editRowIndex) {\r\n            var _editRowIndex, _change;\r\n            var d = new Deferred;\r\n            var dataController = this._dataController;\r\n            var focusController = this.getController(\"focus\");\r\n            editRowIndex = null !== (_editRowIndex = editRowIndex) && void 0 !== _editRowIndex ? _editRowIndex : -1;\r\n            change = null !== (_change = change) && void 0 !== _change ? _change : this.getChanges().filter(c => c.type === DATA_EDIT_DATA_INSERT_TYPE)[0];\r\n            if (!change) {\r\n                return d.reject(\"cancel\").promise()\r\n            }\r\n            var pageIndexToInsertRow = this._getPageIndexToInsertRow();\r\n            var rowIndex = this._getLoadedRowIndex(dataController.items(), change, true);\r\n            var navigateToRowByKey = key => {\r\n                when(null === focusController || void 0 === focusController ? void 0 : focusController.navigateToRow(key)).done(() => {\r\n                    rowIndex = dataController.getRowIndexByKey(change.key);\r\n                    d.resolve()\r\n                })\r\n            };\r\n            var insertAfterOrBeforeKey = this._getInsertAfterOrBeforeKey(change);\r\n            if (pageIndexToInsertRow >= 0) {\r\n                dataController.pageIndex(pageIndexToInsertRow).done(() => {\r\n                    navigateToRowByKey(change.key)\r\n                }).fail(d.reject)\r\n            } else if (rowIndex < 0 && isDefined(insertAfterOrBeforeKey)) {\r\n                navigateToRowByKey(insertAfterOrBeforeKey)\r\n            } else {\r\n                dataController.updateItems({\r\n                    changeType: \"update\",\r\n                    rowIndices: [oldEditRowIndex, editRowIndex, rowIndex]\r\n                });\r\n                rowIndex = dataController.getRowIndexByKey(change.key);\r\n                if (rowIndex < 0) {\r\n                    navigateToRowByKey(change.key)\r\n                } else {\r\n                    d.resolve()\r\n                }\r\n            }\r\n            d.done(() => {\r\n                this._showAddedRow(rowIndex);\r\n                this._afterInsertRow(change.key)\r\n            });\r\n            return d.promise()\r\n        },\r\n        _showAddedRow: function(rowIndex) {\r\n            this._focusFirstEditableCellInRow(rowIndex)\r\n        },\r\n        _beforeFocusElementInRow: noop,\r\n        _focusFirstEditableCellInRow: function(rowIndex) {\r\n            var dataController = this._dataController;\r\n            var key = dataController.getKeyByRowIndex(rowIndex);\r\n            var $firstCell = this.getFirstEditableCellInRow(rowIndex);\r\n            this._editCellInProgress = true;\r\n            this._delayedInputFocus($firstCell, () => {\r\n                rowIndex = dataController.getRowIndexByKey(key);\r\n                this._editCellInProgress = false;\r\n                this._beforeFocusElementInRow(rowIndex)\r\n            })\r\n        },\r\n        _isEditingStart: function(options) {\r\n            this.executeAction(\"onEditingStart\", options);\r\n            return options.cancel\r\n        },\r\n        _beforeUpdateItems: noop,\r\n        _getVisibleEditColumnIndex: function() {\r\n            var editColumnName = this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME);\r\n            if (!isDefined(editColumnName)) {\r\n                return -1\r\n            }\r\n            return this._columnsController.getVisibleColumnIndex(editColumnName)\r\n        },\r\n        _setEditColumnNameByIndex: function(index, silent) {\r\n            var _visibleColumns$index;\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            this._setEditColumnName(null === (_visibleColumns$index = visibleColumns[index]) || void 0 === _visibleColumns$index ? void 0 : _visibleColumns$index.name, silent)\r\n        },\r\n        _setEditColumnName: function(name, silent) {\r\n            if (silent) {\r\n                this._silentOption(EDITING_EDITCOLUMNNAME_OPTION_NAME, name)\r\n            } else {\r\n                this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME, name)\r\n            }\r\n        },\r\n        _resetEditColumnName: function() {\r\n            this._setEditColumnName(null, true)\r\n        },\r\n        _getEditColumn: function() {\r\n            var editColumnName = this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME);\r\n            return this._getColumnByName(editColumnName)\r\n        },\r\n        _getColumnByName: function(name) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var editColumn;\r\n            isDefined(name) && visibleColumns.some(column => {\r\n                if (column.name === name) {\r\n                    editColumn = column;\r\n                    return true\r\n                }\r\n            });\r\n            return editColumn\r\n        },\r\n        _getVisibleEditRowIndex: function(columnName) {\r\n            var dataController = this._dataController;\r\n            var editRowKey = this.option(EDITING_EDITROWKEY_OPTION_NAME);\r\n            var rowIndex = dataController.getRowIndexByKey(editRowKey);\r\n            if (-1 === rowIndex) {\r\n                return rowIndex\r\n            }\r\n            return rowIndex + this._getEditRowIndexCorrection(columnName)\r\n        },\r\n        _getEditRowIndexCorrection: function(columnName) {\r\n            var editColumn = columnName ? this._getColumnByName(columnName) : this._getEditColumn();\r\n            var isColumnHidden = \"adaptiveHidden\" === (null === editColumn || void 0 === editColumn ? void 0 : editColumn.visibleWidth);\r\n            return isColumnHidden ? 1 : 0\r\n        },\r\n        _resetEditRowKey: function() {\r\n            this._setEditRowKey(null, true)\r\n        },\r\n        _resetEditIndices: function() {\r\n            this._resetEditColumnName();\r\n            this._resetEditRowKey()\r\n        },\r\n        editRow: function(rowIndex) {\r\n            var _item$oldData;\r\n            var dataController = this._dataController;\r\n            var items = dataController.items();\r\n            var item = items[rowIndex];\r\n            var params = {\r\n                data: item && item.data,\r\n                cancel: false\r\n            };\r\n            var oldRowIndex = this._getVisibleEditRowIndex();\r\n            if (!item) {\r\n                return\r\n            }\r\n            if (rowIndex === oldRowIndex) {\r\n                return true\r\n            }\r\n            if (void 0 === item.key) {\r\n                this._dataController.fireError(\"E1043\");\r\n                return\r\n            }\r\n            if (!item.isNewRow) {\r\n                params.key = item.key\r\n            }\r\n            if (this._isEditingStart(params)) {\r\n                return\r\n            }\r\n            this.resetChanges();\r\n            this.init();\r\n            this._resetEditColumnName();\r\n            this._pageIndex = dataController.pageIndex();\r\n            this._addInternalData({\r\n                key: item.key,\r\n                oldData: null !== (_item$oldData = item.oldData) && void 0 !== _item$oldData ? _item$oldData : item.data\r\n            });\r\n            this._setEditRowKey(item.key)\r\n        },\r\n        _editRowFromOptionChanged: function(rowIndex, oldRowIndex) {\r\n            var rowIndices = [oldRowIndex, rowIndex];\r\n            this._beforeUpdateItems(rowIndices, rowIndex, oldRowIndex);\r\n            this._editRowFromOptionChangedCore(rowIndices, rowIndex, oldRowIndex)\r\n        },\r\n        _editRowFromOptionChangedCore: function(rowIndices, rowIndex, oldRowIndex) {\r\n            this._needFocusEditor = true;\r\n            this._dataController.updateItems({\r\n                changeType: \"update\",\r\n                rowIndices: rowIndices\r\n            })\r\n        },\r\n        _focusEditorIfNeed: noop,\r\n        _showEditPopup: noop,\r\n        _repaintEditPopup: noop,\r\n        _getEditPopupHiddenHandler: function() {\r\n            return e => {\r\n                if (this.isEditing()) {\r\n                    this.cancelEditData()\r\n                }\r\n            }\r\n        },\r\n        _getPopupEditFormTemplate: noop,\r\n        _getSaveButtonConfig: function() {\r\n            return {\r\n                text: this.option(\"editing.texts.saveRowChanges\"),\r\n                onClick: this.saveEditData.bind(this)\r\n            }\r\n        },\r\n        _getCancelButtonConfig: function() {\r\n            return {\r\n                text: this.option(\"editing.texts.cancelRowChanges\"),\r\n                onClick: this.cancelEditData.bind(this)\r\n            }\r\n        },\r\n        _removeInternalData: function(key) {\r\n            var internalData = this._getInternalData(key);\r\n            var index = this._internalState.indexOf(internalData);\r\n            if (index > -1) {\r\n                this._internalState.splice(index, 1)\r\n            }\r\n        },\r\n        _updateInsertAfterOrBeforeKeys: function(changes, index) {\r\n            var removeChange = changes[index];\r\n            changes.forEach(change => {\r\n                var insertAfterOrBeforeKey = this._getInsertAfterOrBeforeKey(change);\r\n                if (equalByValue(insertAfterOrBeforeKey, removeChange.key)) {\r\n                    change[isDefined(change.insertAfterKey) ? \"insertAfterKey\" : \"insertBeforeKey\"] = this._getInsertAfterOrBeforeKey(removeChange)\r\n                }\r\n            })\r\n        },\r\n        _removeChange: function(index) {\r\n            if (index >= 0) {\r\n                var changes = [...this.getChanges()];\r\n                var key = changes[index].key;\r\n                this._removeInternalData(key);\r\n                this._updateInsertAfterOrBeforeKeys(changes, index);\r\n                changes.splice(index, 1);\r\n                this._silentOption(EDITING_CHANGES_OPTION_NAME, changes);\r\n                if (equalByValue(this.option(EDITING_EDITROWKEY_OPTION_NAME), key)) {\r\n                    this._resetEditIndices()\r\n                }\r\n            }\r\n        },\r\n        executeOperation: function(deferred, func) {\r\n            this._lastOperation && this._lastOperation.reject();\r\n            this._lastOperation = deferred;\r\n            this.waitForDeferredOperations().done(() => {\r\n                if (\"rejected\" === deferred.state()) {\r\n                    return\r\n                }\r\n                func();\r\n                this._lastOperation = null\r\n            }).fail(() => {\r\n                deferred.reject();\r\n                this._lastOperation = null\r\n            })\r\n        },\r\n        waitForDeferredOperations: function() {\r\n            return when(...this._deferreds)\r\n        },\r\n        _processCanceledEditingCell: noop,\r\n        _repaintEditCell: function(column, oldColumn, oldEditRowIndex) {\r\n            this._needFocusEditor = true;\r\n            if (!column || !column.showEditorAlways || oldColumn && !oldColumn.showEditorAlways) {\r\n                this._editCellInProgress = true;\r\n                this.getController(\"editorFactory\").loseFocus();\r\n                this._dataController.updateItems({\r\n                    changeType: \"update\",\r\n                    rowIndices: [oldEditRowIndex, this._getVisibleEditRowIndex()]\r\n                })\r\n            } else if (column !== oldColumn) {\r\n                this._dataController.updateItems({\r\n                    changeType: \"update\",\r\n                    rowIndices: []\r\n                })\r\n            }\r\n        },\r\n        _delayedInputFocus: function($cell, beforeFocusCallback, callBeforeFocusCallbackAlways) {\r\n            var inputFocus = () => {\r\n                if (beforeFocusCallback) {\r\n                    beforeFocusCallback()\r\n                }\r\n                if ($cell) {\r\n                    var $focusableElement = $cell.find(FOCUSABLE_ELEMENT_SELECTOR).first();\r\n                    gridCoreUtils.focusAndSelectElement(this, $focusableElement)\r\n                }\r\n                this._beforeFocusCallback = null\r\n            };\r\n            if (devices.real().ios || devices.real().android) {\r\n                inputFocus()\r\n            } else {\r\n                if (this._beforeFocusCallback) {\r\n                    this._beforeFocusCallback()\r\n                }\r\n                clearTimeout(this._inputFocusTimeoutID);\r\n                if (callBeforeFocusCallbackAlways) {\r\n                    this._beforeFocusCallback = beforeFocusCallback\r\n                }\r\n                this._inputFocusTimeoutID = setTimeout(inputFocus)\r\n            }\r\n        },\r\n        _focusEditingCell: function(beforeFocusCallback, $editCell, callBeforeFocusCallbackAlways) {\r\n            var rowsView = this.getView(\"rowsView\");\r\n            var editColumnIndex = this._getVisibleEditColumnIndex();\r\n            $editCell = $editCell || rowsView && rowsView._getCellElement(this._getVisibleEditRowIndex(), editColumnIndex);\r\n            if ($editCell) {\r\n                this._delayedInputFocus($editCell, beforeFocusCallback, callBeforeFocusCallbackAlways)\r\n            }\r\n        },\r\n        deleteRow: function(rowIndex) {\r\n            this._checkAndDeleteRow(rowIndex)\r\n        },\r\n        _checkAndDeleteRow: function(rowIndex) {\r\n            var editingOptions = this.option(\"editing\");\r\n            var editingTexts = null === editingOptions || void 0 === editingOptions ? void 0 : editingOptions.texts;\r\n            var confirmDelete = null === editingOptions || void 0 === editingOptions ? void 0 : editingOptions.confirmDelete;\r\n            var confirmDeleteMessage = null === editingTexts || void 0 === editingTexts ? void 0 : editingTexts.confirmDeleteMessage;\r\n            var item = this._dataController.items()[rowIndex];\r\n            var allowDeleting = !this.isEditing() || item.isNewRow;\r\n            if (item && allowDeleting) {\r\n                if (!confirmDelete || !confirmDeleteMessage) {\r\n                    this._deleteRowCore(rowIndex)\r\n                } else {\r\n                    var confirmDeleteTitle = editingTexts && editingTexts.confirmDeleteTitle;\r\n                    var showDialogTitle = isDefined(confirmDeleteTitle) && confirmDeleteTitle.length > 0;\r\n                    confirm(confirmDeleteMessage, confirmDeleteTitle, showDialogTitle).done(confirmResult => {\r\n                        if (confirmResult) {\r\n                            this._deleteRowCore(rowIndex)\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        _deleteRowCore: function(rowIndex) {\r\n            var dataController = this._dataController;\r\n            var item = dataController.items()[rowIndex];\r\n            var key = item && item.key;\r\n            var oldEditRowIndex = this._getVisibleEditRowIndex();\r\n            this.refresh();\r\n            var changes = this.getChanges();\r\n            var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n            if (editIndex >= 0) {\r\n                if (changes[editIndex].type === DATA_EDIT_DATA_INSERT_TYPE) {\r\n                    this._removeChange(editIndex)\r\n                } else {\r\n                    this._addChange({\r\n                        key: key,\r\n                        type: DATA_EDIT_DATA_REMOVE_TYPE\r\n                    })\r\n                }\r\n            } else {\r\n                this._addChange({\r\n                    key: key,\r\n                    oldData: item.data,\r\n                    type: DATA_EDIT_DATA_REMOVE_TYPE\r\n                })\r\n            }\r\n            return this._afterDeleteRow(rowIndex, oldEditRowIndex)\r\n        },\r\n        _afterDeleteRow: function(rowIndex, oldEditRowIndex) {\r\n            return this.saveEditData()\r\n        },\r\n        undeleteRow: function(rowIndex) {\r\n            var dataController = this._dataController;\r\n            var item = dataController.items()[rowIndex];\r\n            var oldEditRowIndex = this._getVisibleEditRowIndex();\r\n            var key = item && item.key;\r\n            var changes = this.getChanges();\r\n            if (item) {\r\n                var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n                if (editIndex >= 0) {\r\n                    var {\r\n                        data: data\r\n                    } = changes[editIndex];\r\n                    if (isEmptyObject(data)) {\r\n                        this._removeChange(editIndex)\r\n                    } else {\r\n                        this._addChange({\r\n                            key: key,\r\n                            type: DATA_EDIT_DATA_UPDATE_TYPE\r\n                        })\r\n                    }\r\n                    dataController.updateItems({\r\n                        changeType: \"update\",\r\n                        rowIndices: [oldEditRowIndex, rowIndex]\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        _fireOnSaving: function() {\r\n            var onSavingParams = {\r\n                cancel: false,\r\n                promise: null,\r\n                changes: [...this.getChanges()]\r\n            };\r\n            this.executeAction(\"onSaving\", onSavingParams);\r\n            var d = new Deferred;\r\n            when(fromPromise(onSavingParams.promise)).done(() => {\r\n                d.resolve(onSavingParams)\r\n            }).fail(arg => {\r\n                createFailureHandler(d);\r\n                this._fireDataErrorOccurred(arg);\r\n                d.resolve({\r\n                    cancel: true\r\n                })\r\n            });\r\n            return d\r\n        },\r\n        _executeEditingAction: function(actionName, params, func) {\r\n            if (this.component._disposed) {\r\n                return null\r\n            }\r\n            var deferred = new Deferred;\r\n            this.executeAction(actionName, params);\r\n            when(fromPromise(params.cancel)).done((function(cancel) {\r\n                if (cancel) {\r\n                    setTimeout((function() {\r\n                        deferred.resolve(\"cancel\")\r\n                    }))\r\n                } else {\r\n                    func(params).done(deferred.resolve).fail(createFailureHandler(deferred))\r\n                }\r\n            })).fail(createFailureHandler(deferred));\r\n            return deferred\r\n        },\r\n        _processChanges: function(deferreds, results, dataChanges, changes) {\r\n            var store = this._dataController.store();\r\n            each(changes, (index, change) => {\r\n                var oldData = this._getOldData(change.key);\r\n                var {\r\n                    data: data,\r\n                    type: type\r\n                } = change;\r\n                var changeCopy = _extends({}, change);\r\n                var deferred;\r\n                var params;\r\n                if (this._beforeSaveEditData(change, index)) {\r\n                    return\r\n                }\r\n                switch (type) {\r\n                    case DATA_EDIT_DATA_REMOVE_TYPE:\r\n                        params = {\r\n                            data: oldData,\r\n                            key: change.key,\r\n                            cancel: false\r\n                        };\r\n                        deferred = this._executeEditingAction(\"onRowRemoving\", params, (function() {\r\n                            return store.remove(change.key).done((function(key) {\r\n                                dataChanges.push({\r\n                                    type: \"remove\",\r\n                                    key: key\r\n                                })\r\n                            }))\r\n                        }));\r\n                        break;\r\n                    case DATA_EDIT_DATA_INSERT_TYPE:\r\n                        params = {\r\n                            data: data,\r\n                            cancel: false\r\n                        };\r\n                        deferred = this._executeEditingAction(\"onRowInserting\", params, (function() {\r\n                            return store.insert(params.data).done((function(data, key) {\r\n                                if (isDefined(key)) {\r\n                                    changeCopy.key = key\r\n                                }\r\n                                if (data && isObject(data) && data !== params.data) {\r\n                                    changeCopy.data = data\r\n                                }\r\n                                dataChanges.push({\r\n                                    type: \"insert\",\r\n                                    data: data,\r\n                                    index: 0\r\n                                })\r\n                            }))\r\n                        }));\r\n                        break;\r\n                    case DATA_EDIT_DATA_UPDATE_TYPE:\r\n                        params = {\r\n                            newData: data,\r\n                            oldData: oldData,\r\n                            key: change.key,\r\n                            cancel: false\r\n                        };\r\n                        deferred = this._executeEditingAction(\"onRowUpdating\", params, (function() {\r\n                            return store.update(change.key, params.newData).done((function(data, key) {\r\n                                if (data && isObject(data) && data !== params.newData) {\r\n                                    changeCopy.data = data\r\n                                }\r\n                                dataChanges.push({\r\n                                    type: \"update\",\r\n                                    key: key,\r\n                                    data: data\r\n                                })\r\n                            }))\r\n                        }))\r\n                }\r\n                changes[index] = changeCopy;\r\n                if (deferred) {\r\n                    var doneDeferred = new Deferred;\r\n                    deferred.always((function(data) {\r\n                        results.push({\r\n                            key: change.key,\r\n                            result: data\r\n                        })\r\n                    })).always(doneDeferred.resolve);\r\n                    deferreds.push(doneDeferred.promise())\r\n                }\r\n            })\r\n        },\r\n        _processRemoveIfError: function(changes, editIndex) {\r\n            var change = changes[editIndex];\r\n            if ((null === change || void 0 === change ? void 0 : change.type) === DATA_EDIT_DATA_REMOVE_TYPE) {\r\n                if (editIndex >= 0) {\r\n                    changes.splice(editIndex, 1)\r\n                }\r\n            }\r\n            return true\r\n        },\r\n        _processRemove: function(changes, editIndex, cancel) {\r\n            var change = changes[editIndex];\r\n            if (!cancel || !change || change.type === DATA_EDIT_DATA_REMOVE_TYPE) {\r\n                return this._processRemoveCore(changes, editIndex, !cancel || !change)\r\n            }\r\n        },\r\n        _processRemoveCore: function(changes, editIndex) {\r\n            if (editIndex >= 0) {\r\n                changes.splice(editIndex, 1)\r\n            }\r\n            return true\r\n        },\r\n        _processSaveEditDataResult: function(results) {\r\n            var hasSavedData = false;\r\n            var changes = [...this.getChanges()];\r\n            var changesLength = changes.length;\r\n            for (var i = 0; i < results.length; i++) {\r\n                var arg = results[i].result;\r\n                var cancel = \"cancel\" === arg;\r\n                var editIndex = gridCoreUtils.getIndexByKey(results[i].key, changes);\r\n                var change = changes[editIndex];\r\n                var isError = arg && arg instanceof Error;\r\n                if (isError) {\r\n                    if (change) {\r\n                        this._addInternalData({\r\n                            key: change.key,\r\n                            error: arg\r\n                        })\r\n                    }\r\n                    this._fireDataErrorOccurred(arg);\r\n                    if (this._processRemoveIfError(changes, editIndex)) {\r\n                        break\r\n                    }\r\n                } else if (this._processRemove(changes, editIndex, cancel)) {\r\n                    hasSavedData = !cancel\r\n                }\r\n            }\r\n            if (changes.length < changesLength) {\r\n                this._silentOption(EDITING_CHANGES_OPTION_NAME, changes)\r\n            }\r\n            return hasSavedData\r\n        },\r\n        _fireSaveEditDataEvents: function(changes) {\r\n            each(changes, (_, _ref) => {\r\n                var {\r\n                    data: data,\r\n                    key: key,\r\n                    type: type\r\n                } = _ref;\r\n                var internalData = this._addInternalData({\r\n                    key: key\r\n                });\r\n                var params = {\r\n                    key: key,\r\n                    data: data\r\n                };\r\n                if (internalData.error) {\r\n                    params.error = internalData.error\r\n                }\r\n                switch (type) {\r\n                    case DATA_EDIT_DATA_REMOVE_TYPE:\r\n                        this.executeAction(\"onRowRemoved\", extend({}, params, {\r\n                            data: internalData.oldData\r\n                        }));\r\n                        break;\r\n                    case DATA_EDIT_DATA_INSERT_TYPE:\r\n                        this.executeAction(\"onRowInserted\", params);\r\n                        break;\r\n                    case DATA_EDIT_DATA_UPDATE_TYPE:\r\n                        this.executeAction(\"onRowUpdated\", params)\r\n                }\r\n            });\r\n            this.executeAction(\"onSaved\", {\r\n                changes: changes\r\n            })\r\n        },\r\n        saveEditData: function() {\r\n            var deferred = new Deferred;\r\n            this.waitForDeferredOperations().done(() => {\r\n                if (this.isSaving()) {\r\n                    this._resolveAfterSave(deferred);\r\n                    return\r\n                }\r\n                when(this._beforeSaveEditData()).done(cancel => {\r\n                    if (cancel) {\r\n                        this._resolveAfterSave(deferred, {\r\n                            cancel: cancel\r\n                        });\r\n                        return\r\n                    }\r\n                    this._saving = true;\r\n                    var options = {};\r\n                    this._saveEditDataInner(options).always(() => {\r\n                        this._saving = false;\r\n                        options.needFocusEditCell && this._focusEditingCell()\r\n                    }).done(deferred.resolve).fail(deferred.reject)\r\n                }).fail(deferred.reject)\r\n            }).fail(deferred.reject);\r\n            return deferred.promise()\r\n        },\r\n        _resolveAfterSave: function(deferred) {\r\n            var {\r\n                cancel: cancel,\r\n                error: error\r\n            } = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\r\n            when(this._afterSaveEditData(cancel)).done((function() {\r\n                deferred.resolve(error)\r\n            })).fail(deferred.reject)\r\n        },\r\n        _saveEditDataInner: function(options) {\r\n            var results = [];\r\n            var deferreds = [];\r\n            var dataChanges = [];\r\n            var dataController = this._dataController;\r\n            var dataSource = dataController.dataSource();\r\n            var result = new Deferred;\r\n            when(this._fireOnSaving()).done(_ref2 => {\r\n                var {\r\n                    cancel: cancel,\r\n                    changes: changes\r\n                } = _ref2;\r\n                if (cancel) {\r\n                    return result.resolve().promise()\r\n                }\r\n                this._processChanges(deferreds, results, dataChanges, changes);\r\n                if (deferreds.length) {\r\n                    null === dataSource || void 0 === dataSource ? void 0 : dataSource.beginLoading();\r\n                    when(...deferreds).done(() => {\r\n                        if (this._processSaveEditDataResult(results)) {\r\n                            this._endSaving(dataChanges, changes, result)\r\n                        } else {\r\n                            null === dataSource || void 0 === dataSource ? void 0 : dataSource.endLoading();\r\n                            result.resolve()\r\n                        }\r\n                    }).fail(error => {\r\n                        null === dataSource || void 0 === dataSource ? void 0 : dataSource.endLoading();\r\n                        result.resolve(error)\r\n                    });\r\n                    return result.always(() => {\r\n                        options.needFocusEditCell = true\r\n                    }).promise()\r\n                }\r\n                this._cancelSaving(result)\r\n            }).fail(result.reject);\r\n            return result.promise()\r\n        },\r\n        _beforeEndSaving: function(changes) {\r\n            this._resetEditIndices()\r\n        },\r\n        _endSaving: function(dataChanges, changes, deferred) {\r\n            var dataSource = this._dataController.dataSource();\r\n            this._beforeEndSaving(changes);\r\n            null === dataSource || void 0 === dataSource ? void 0 : dataSource.endLoading();\r\n            this._refreshDataAfterSave(dataChanges, changes, deferred)\r\n        },\r\n        _cancelSaving: function(result) {\r\n            this.executeAction(\"onSaved\", {\r\n                changes: []\r\n            });\r\n            this._resolveAfterSave(result)\r\n        },\r\n        _refreshDataAfterSave: function(dataChanges, changes, deferred) {\r\n            var dataController = this._dataController;\r\n            var refreshMode = this.option(\"editing.refreshMode\");\r\n            var isFullRefresh = \"reshape\" !== refreshMode && \"repaint\" !== refreshMode;\r\n            if (!isFullRefresh) {\r\n                dataController.push(dataChanges)\r\n            }\r\n            when(dataController.refresh({\r\n                selection: isFullRefresh,\r\n                reload: isFullRefresh,\r\n                load: \"reshape\" === refreshMode,\r\n                changesOnly: this.option(\"repaintChangesOnly\")\r\n            })).always(() => {\r\n                this._fireSaveEditDataEvents(changes)\r\n            }).done(() => {\r\n                this._resolveAfterSave(deferred)\r\n            }).fail(error => {\r\n                this._resolveAfterSave(deferred, {\r\n                    error: error\r\n                })\r\n            })\r\n        },\r\n        isSaving: function() {\r\n            return this._saving\r\n        },\r\n        _updateEditColumn: function() {\r\n            var isEditColumnVisible = this._isEditColumnVisible();\r\n            var useIcons = this.option(\"editing.useIcons\");\r\n            var cssClass = COMMAND_EDIT_CLASS + (useIcons ? \" \" + COMMAND_EDIT_WITH_ICONS_CLASS : \"\");\r\n            this._columnsController.addCommandColumn({\r\n                type: \"buttons\",\r\n                command: \"edit\",\r\n                visible: isEditColumnVisible,\r\n                cssClass: cssClass,\r\n                width: \"auto\",\r\n                alignment: \"center\",\r\n                cellTemplate: this._getEditCommandCellTemplate(),\r\n                fixedPosition: \"right\"\r\n            });\r\n            this._columnsController.columnOption(\"command:edit\", {\r\n                visible: isEditColumnVisible,\r\n                cssClass: cssClass\r\n            })\r\n        },\r\n        _isEditColumnVisible: function() {\r\n            var editingOptions = this.option(\"editing\");\r\n            return editingOptions.allowDeleting\r\n        },\r\n        _isEditButtonDisabled: function() {\r\n            var hasChanges = this.hasChanges();\r\n            var isEditRowDefined = isDefined(this.option(\"editing.editRowKey\"));\r\n            return !(isEditRowDefined || hasChanges)\r\n        },\r\n        _updateEditButtons: function() {\r\n            var headerPanel = this.getView(\"headerPanel\");\r\n            var isButtonDisabled = this._isEditButtonDisabled();\r\n            if (headerPanel) {\r\n                headerPanel.setToolbarItemDisabled(\"saveButton\", isButtonDisabled);\r\n                headerPanel.setToolbarItemDisabled(\"revertButton\", isButtonDisabled)\r\n            }\r\n        },\r\n        _applyModified: function($element) {\r\n            $element && $element.addClass(CELL_MODIFIED)\r\n        },\r\n        _beforeCloseEditCellInBatchMode: noop,\r\n        cancelEditData: function() {\r\n            var changes = this.getChanges();\r\n            var params = {\r\n                cancel: false,\r\n                changes: changes\r\n            };\r\n            this.executeAction(\"onEditCanceling\", params);\r\n            if (!params.cancel) {\r\n                this._cancelEditDataCore();\r\n                this.executeAction(\"onEditCanceled\", {\r\n                    changes: changes\r\n                })\r\n            }\r\n        },\r\n        _cancelEditDataCore: function() {\r\n            var rowIndex = this._getVisibleEditRowIndex();\r\n            this._beforeCancelEditData();\r\n            this.init();\r\n            this.resetChanges();\r\n            this._resetEditColumnName();\r\n            this._resetEditRowKey();\r\n            this._afterCancelEditData(rowIndex)\r\n        },\r\n        _afterCancelEditData: function(rowIndex) {\r\n            var dataController = this._dataController;\r\n            dataController.updateItems({\r\n                repaintChangesOnly: this.option(\"repaintChangesOnly\")\r\n            })\r\n        },\r\n        _hideEditPopup: noop,\r\n        hasEditData: function() {\r\n            return this.hasChanges()\r\n        },\r\n        update: function(changeType) {\r\n            var dataController = this._dataController;\r\n            if (dataController && this._pageIndex !== dataController.pageIndex()) {\r\n                if (\"refresh\" === changeType) {\r\n                    this.refresh(true)\r\n                }\r\n                this._pageIndex = dataController.pageIndex()\r\n            }\r\n            this._updateEditButtons()\r\n        },\r\n        _getRowIndicesForCascadeUpdating: function(row, skipCurrentRow) {\r\n            return skipCurrentRow ? [] : [row.rowIndex]\r\n        },\r\n        addDeferred: function(deferred) {\r\n            if (this._deferreds.indexOf(deferred) < 0) {\r\n                this._deferreds.push(deferred);\r\n                deferred.always(() => {\r\n                    var index = this._deferreds.indexOf(deferred);\r\n                    if (index >= 0) {\r\n                        this._deferreds.splice(index, 1)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        _prepareChange: function(options, value, text) {\r\n            var _options$row;\r\n            var newData = {};\r\n            var oldData = null === (_options$row = options.row) || void 0 === _options$row ? void 0 : _options$row.data;\r\n            var rowKey = options.key;\r\n            var deferred = new Deferred;\r\n            if (void 0 !== rowKey) {\r\n                options.value = value;\r\n                var setCellValueResult = fromPromise(options.column.setCellValue(newData, value, extend(true, {}, oldData), text));\r\n                setCellValueResult.done((function() {\r\n                    deferred.resolve({\r\n                        data: newData,\r\n                        key: rowKey,\r\n                        oldData: oldData,\r\n                        type: DATA_EDIT_DATA_UPDATE_TYPE\r\n                    })\r\n                })).fail(createFailureHandler(deferred)).fail(arg => this._fireDataErrorOccurred(arg));\r\n                if (isDefined(text) && options.column.displayValueMap) {\r\n                    options.column.displayValueMap[value] = text\r\n                }\r\n                this._updateRowValues(options);\r\n                this.addDeferred(deferred)\r\n            }\r\n            return deferred\r\n        },\r\n        _updateRowValues: function(options) {\r\n            if (options.values) {\r\n                var dataController = this._dataController;\r\n                var rowIndex = dataController.getRowIndexByKey(options.key);\r\n                var row = dataController.getVisibleRows()[rowIndex];\r\n                if (row) {\r\n                    options.values = row.values\r\n                }\r\n                options.values[options.columnIndex] = options.value\r\n            }\r\n        },\r\n        updateFieldValue: function(options, value, text, forceUpdateRow) {\r\n            var rowKey = options.key;\r\n            var deferred = new Deferred;\r\n            if (void 0 === rowKey) {\r\n                this._dataController.fireError(\"E1043\")\r\n            }\r\n            if (options.column.setCellValue) {\r\n                this._prepareChange(options, value, text).done(params => {\r\n                    when(this._applyChange(options, params, forceUpdateRow)).always(() => {\r\n                        deferred.resolve()\r\n                    })\r\n                })\r\n            } else {\r\n                deferred.resolve()\r\n            }\r\n            return deferred.promise()\r\n        },\r\n        _focusPreviousEditingCellIfNeed: function(options) {\r\n            if (this.hasEditData() && !this.isEditCell(options.rowIndex, options.columnIndex)) {\r\n                this._focusEditingCell();\r\n                this._updateEditRow(options.row, true);\r\n                return true\r\n            }\r\n        },\r\n        _needUpdateRow: function(column) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            if (!column) {\r\n                column = this._getEditColumn()\r\n            }\r\n            var isCustomSetCellValue = column && column.setCellValue !== column.defaultSetCellValue;\r\n            var isCustomCalculateCellValue = visibleColumns.some(visibleColumn => visibleColumn.calculateCellValue !== visibleColumn.defaultCalculateCellValue);\r\n            return isCustomSetCellValue || isCustomCalculateCellValue\r\n        },\r\n        _applyChange: function(options, params, forceUpdateRow) {\r\n            var changeOptions = _extends({}, options, {\r\n                forceUpdateRow: forceUpdateRow\r\n            });\r\n            this._addChange(params, changeOptions);\r\n            this._updateEditButtons();\r\n            return this._applyChangeCore(options, changeOptions.forceUpdateRow)\r\n        },\r\n        _applyChangeCore: function(options, forceUpdateRow) {\r\n            var isCustomSetCellValue = options.column.setCellValue !== options.column.defaultSetCellValue;\r\n            var row = options.row;\r\n            if (row) {\r\n                if (forceUpdateRow || isCustomSetCellValue) {\r\n                    this._updateEditRow(row, forceUpdateRow, isCustomSetCellValue)\r\n                } else if (row.update) {\r\n                    row.update()\r\n                }\r\n            }\r\n        },\r\n        _updateEditRowCore: function(row, skipCurrentRow, isCustomSetCellValue) {\r\n            this._dataController.updateItems({\r\n                changeType: \"update\",\r\n                rowIndices: this._getRowIndicesForCascadeUpdating(row, skipCurrentRow)\r\n            })\r\n        },\r\n        _updateEditRow: function(row, forceUpdateRow, isCustomSetCellValue) {\r\n            if (forceUpdateRow) {\r\n                this._updateRowImmediately(row, forceUpdateRow, isCustomSetCellValue)\r\n            } else {\r\n                this._updateRowWithDelay(row, isCustomSetCellValue)\r\n            }\r\n        },\r\n        _updateRowImmediately: function(row, forceUpdateRow, isCustomSetCellValue) {\r\n            this._updateEditRowCore(row, !forceUpdateRow, isCustomSetCellValue);\r\n            this._validateEditFormAfterUpdate(row, isCustomSetCellValue);\r\n            if (!forceUpdateRow) {\r\n                this._focusEditingCell()\r\n            }\r\n        },\r\n        _updateRowWithDelay: function(row, isCustomSetCellValue) {\r\n            var deferred = new Deferred;\r\n            this.addDeferred(deferred);\r\n            setTimeout(() => {\r\n                var $focusedElement = $(domAdapter.getActiveElement());\r\n                var columnIndex = this._rowsView.getCellIndex($focusedElement, row.rowIndex);\r\n                var focusedElement = $focusedElement.get(0);\r\n                var selectionRange = gridCoreUtils.getSelectionRange(focusedElement);\r\n                this._updateEditRowCore(row, false, isCustomSetCellValue);\r\n                this._validateEditFormAfterUpdate(row, isCustomSetCellValue);\r\n                if (columnIndex >= 0) {\r\n                    var $focusedItem = this._rowsView._getCellElement(row.rowIndex, columnIndex);\r\n                    this._delayedInputFocus($focusedItem, () => {\r\n                        setTimeout(() => {\r\n                            focusedElement = domAdapter.getActiveElement();\r\n                            if (selectionRange.selectionStart >= 0) {\r\n                                gridCoreUtils.setSelectionRange(focusedElement, selectionRange)\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n                deferred.resolve()\r\n            })\r\n        },\r\n        _validateEditFormAfterUpdate: noop,\r\n        _addChange: function(changeParams, options) {\r\n            var _this$getChanges;\r\n            var row = null === options || void 0 === options ? void 0 : options.row;\r\n            var changes = [...this.getChanges()];\r\n            var index = gridCoreUtils.getIndexByKey(changeParams.key, changes);\r\n            if (index < 0) {\r\n                index = changes.length;\r\n                this._addInternalData({\r\n                    key: changeParams.key,\r\n                    oldData: changeParams.oldData\r\n                });\r\n                delete changeParams.oldData;\r\n                changes.push(changeParams)\r\n            }\r\n            var change = _extends({}, changes[index]);\r\n            if (change) {\r\n                if (changeParams.data) {\r\n                    change.data = createObjectWithChanges(change.data, changeParams.data)\r\n                }\r\n                if ((!change.type || !changeParams.data) && changeParams.type) {\r\n                    change.type = changeParams.type\r\n                }\r\n                if (row) {\r\n                    row.oldData = this._getOldData(row.key);\r\n                    row.data = createObjectWithChanges(row.data, changeParams.data)\r\n                }\r\n            }\r\n            changes[index] = change;\r\n            this._silentOption(EDITING_CHANGES_OPTION_NAME, changes);\r\n            if (options && change !== (null === (_this$getChanges = this.getChanges()) || void 0 === _this$getChanges ? void 0 : _this$getChanges[index])) {\r\n                options.forceUpdateRow = true\r\n            }\r\n            return change\r\n        },\r\n        _getFormEditItemTemplate: function(cellOptions, column) {\r\n            return column.editCellTemplate || this._getDefaultEditorTemplate()\r\n        },\r\n        getColumnTemplate: function(options) {\r\n            var column = options.column;\r\n            var rowIndex = options.row && options.row.rowIndex;\r\n            var template;\r\n            var isRowMode = this.isRowBasedEditMode();\r\n            var isRowEditing = this.isEditRow(rowIndex);\r\n            var isCellEditing = this.isEditCell(rowIndex, options.columnIndex);\r\n            var editingStartOptions;\r\n            if ((column.showEditorAlways || column.setCellValue && (isRowEditing && column.allowEditing || isCellEditing)) && (\"data\" === options.rowType || \"detailAdaptive\" === options.rowType) && !column.command) {\r\n                var allowUpdating = this.allowUpdating(options);\r\n                if (((allowUpdating || isRowEditing) && column.allowEditing || isCellEditing) && (isRowEditing || !isRowMode)) {\r\n                    if (column.showEditorAlways && !isRowMode) {\r\n                        editingStartOptions = {\r\n                            cancel: false,\r\n                            key: options.row.isNewRow ? void 0 : options.row.key,\r\n                            data: options.row.data,\r\n                            column: column\r\n                        };\r\n                        this._isEditingStart(editingStartOptions)\r\n                    }\r\n                    if (!editingStartOptions || !editingStartOptions.cancel) {\r\n                        options.setValue = (value, text) => {\r\n                            this.updateFieldValue(options, value, text)\r\n                        }\r\n                    }\r\n                }\r\n                template = column.editCellTemplate || this._getDefaultEditorTemplate()\r\n            } else if (\"detail\" === column.command && \"detail\" === options.rowType && isRowEditing) {\r\n                template = null === this || void 0 === this ? void 0 : this.getEditFormTemplate(options)\r\n            }\r\n            return template\r\n        },\r\n        _createButton: function($container, button, options, change) {\r\n            var icon = EDIT_ICON_CLASS[button.name];\r\n            var useIcons = this.option(\"editing.useIcons\");\r\n            var useLegacyColumnButtonTemplate = this.option(\"useLegacyColumnButtonTemplate\");\r\n            var $button = $(\"<a>\").attr(\"href\", \"#\").addClass(LINK_CLASS).addClass(button.cssClass);\r\n            if (button.template && useLegacyColumnButtonTemplate) {\r\n                this._rowsView.renderTemplate($container, button.template, options, true)\r\n            } else {\r\n                if (button.template) {\r\n                    $button = $(\"<span>\").addClass(button.cssClass)\r\n                } else if (useIcons && icon || button.icon) {\r\n                    icon = button.icon || icon;\r\n                    var iconType = iconUtils.getImageSourceType(icon);\r\n                    if (\"image\" === iconType || \"svg\" === iconType) {\r\n                        $button = iconUtils.getImageContainer(icon).addClass(button.cssClass)\r\n                    } else {\r\n                        $button.addClass(\"dx-icon\" + (\"dxIcon\" === iconType ? \"-\" : \" \") + icon).attr(\"title\", button.text)\r\n                    }\r\n                    $button.addClass(\"dx-link-icon\");\r\n                    $container.addClass(COMMAND_EDIT_WITH_ICONS_CLASS);\r\n                    var localizationName = this.getButtonLocalizationNames()[button.name];\r\n                    localizationName && $button.attr(\"aria-label\", messageLocalization.format(localizationName))\r\n                } else {\r\n                    $button.text(button.text)\r\n                }\r\n                if (isDefined(button.hint)) {\r\n                    $button.attr(\"title\", button.hint)\r\n                }\r\n                if (this._isButtonDisabled(button, options)) {\r\n                    $button.addClass(\"dx-state-disabled\")\r\n                } else if (!button.template || button.onClick) {\r\n                    eventsEngine.on($button, addNamespace(\"click\", EDITING_NAMESPACE), this.createAction((function(e) {\r\n                        var _button$onClick;\r\n                        null === (_button$onClick = button.onClick) || void 0 === _button$onClick ? void 0 : _button$onClick.call(button, extend({}, e, {\r\n                            row: options.row,\r\n                            column: options.column\r\n                        }));\r\n                        e.event.preventDefault();\r\n                        e.event.stopPropagation()\r\n                    })))\r\n                }\r\n                $container.append($button, \"&nbsp;\");\r\n                if (button.template) {\r\n                    this._rowsView.renderTemplate($button, button.template, options, true, change)\r\n                }\r\n            }\r\n        },\r\n        getButtonLocalizationNames: () => ({\r\n            edit: \"dxDataGrid-editingEditRow\",\r\n            save: \"dxDataGrid-editingSaveRowChanges\",\r\n            delete: \"dxDataGrid-editingDeleteRow\",\r\n            undelete: \"dxDataGrid-editingUndeleteRow\",\r\n            cancel: \"dxDataGrid-editingCancelRowChanges\"\r\n        }),\r\n        prepareButtonItem: function(headerPanel, name, methodName, sortIndex) {\r\n            var editingTexts = this.option(\"editing.texts\") || {};\r\n            var titleButtonTextByClassNames = {\r\n                revert: editingTexts.cancelAllChanges,\r\n                save: editingTexts.saveAllChanges,\r\n                addRow: editingTexts.addRow\r\n            };\r\n            var className = {\r\n                revert: \"cancel\",\r\n                save: \"save\",\r\n                addRow: \"addrow\"\r\n            } [name];\r\n            var hintText = titleButtonTextByClassNames[name];\r\n            var isButtonDisabled = (\"save\" === className || \"cancel\" === className) && this._isEditButtonDisabled();\r\n            return {\r\n                widget: \"dxButton\",\r\n                options: {\r\n                    onInitialized: e => {\r\n                        $(e.element).addClass(headerPanel._getToolbarButtonClass(EDIT_BUTTON_CLASS + \" \" + this.addWidgetPrefix(className) + \"-button\"))\r\n                    },\r\n                    icon: \"edit-button-\" + className,\r\n                    disabled: isButtonDisabled,\r\n                    onClick: () => {\r\n                        setTimeout(() => {\r\n                            this[methodName]()\r\n                        })\r\n                    },\r\n                    text: hintText,\r\n                    hint: hintText\r\n                },\r\n                showText: \"inMenu\",\r\n                name: name + \"Button\",\r\n                location: \"after\",\r\n                locateInMenu: \"auto\",\r\n                sortIndex: sortIndex\r\n            }\r\n        },\r\n        prepareEditButtons: function(headerPanel) {\r\n            var editingOptions = this.option(\"editing\") || {};\r\n            var buttonItems = [];\r\n            if (editingOptions.allowAdding) {\r\n                buttonItems.push(this.prepareButtonItem(headerPanel, \"addRow\", \"addRow\", 20))\r\n            }\r\n            return buttonItems\r\n        },\r\n        highlightDataCell: function($cell, parameters) {\r\n            var cellModified = this.isCellModified(parameters);\r\n            var shouldHighlight = cellModified && parameters.column.setCellValue && (this.getEditMode() !== EDIT_MODE_ROW || !parameters.row.isEditing);\r\n            shouldHighlight && $cell.addClass(CELL_MODIFIED)\r\n        },\r\n        _afterInsertRow: noop,\r\n        _beforeSaveEditData: function(change) {\r\n            if (change && !isDefined(change.key) && isDefined(change.type)) {\r\n                return true\r\n            }\r\n        },\r\n        _afterSaveEditData: noop,\r\n        _beforeCancelEditData: noop,\r\n        _allowEditAction: function(actionName, options) {\r\n            var allowEditAction = this.option(\"editing.\" + actionName);\r\n            if (isFunction(allowEditAction)) {\r\n                allowEditAction = allowEditAction({\r\n                    component: this.component,\r\n                    row: options.row\r\n                })\r\n            }\r\n            return allowEditAction\r\n        },\r\n        allowUpdating: function(options, eventName) {\r\n            var startEditAction = this.option(\"editing.startEditAction\") || DEFAULT_START_EDIT_ACTION;\r\n            var needCallback = arguments.length > 1 ? startEditAction === eventName || \"down\" === eventName : true;\r\n            return needCallback && this._allowEditAction(\"allowUpdating\", options)\r\n        },\r\n        allowDeleting: function(options) {\r\n            return this._allowEditAction(\"allowDeleting\", options)\r\n        },\r\n        isCellModified: function(parameters) {\r\n            var columnIndex = parameters.columnIndex;\r\n            var modifiedValues = parameters.row && (parameters.row.isNewRow ? parameters.row.values : parameters.row.modifiedValues);\r\n            return !!modifiedValues && void 0 !== modifiedValues[columnIndex]\r\n        },\r\n        isNewRowInEditMode: function() {\r\n            var visibleEditRowIndex = this._getVisibleEditRowIndex();\r\n            var rows = this._dataController.items();\r\n            return visibleEditRowIndex >= 0 ? rows[visibleEditRowIndex].isNewRow : false\r\n        }\r\n    }\r\n}());\r\nexport var editingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            editing: {\r\n                mode: \"row\",\r\n                refreshMode: \"full\",\r\n                newRowPosition: VIEWPORT_TOP_NEW_ROW_POSITION,\r\n                allowAdding: false,\r\n                allowUpdating: false,\r\n                allowDeleting: false,\r\n                useIcons: false,\r\n                selectTextOnEditStart: false,\r\n                confirmDelete: true,\r\n                texts: {\r\n                    editRow: messageLocalization.format(\"dxDataGrid-editingEditRow\"),\r\n                    saveAllChanges: messageLocalization.format(\"dxDataGrid-editingSaveAllChanges\"),\r\n                    saveRowChanges: messageLocalization.format(\"dxDataGrid-editingSaveRowChanges\"),\r\n                    cancelAllChanges: messageLocalization.format(\"dxDataGrid-editingCancelAllChanges\"),\r\n                    cancelRowChanges: messageLocalization.format(\"dxDataGrid-editingCancelRowChanges\"),\r\n                    addRow: messageLocalization.format(\"dxDataGrid-editingAddRow\"),\r\n                    deleteRow: messageLocalization.format(\"dxDataGrid-editingDeleteRow\"),\r\n                    undeleteRow: messageLocalization.format(\"dxDataGrid-editingUndeleteRow\"),\r\n                    confirmDeleteMessage: messageLocalization.format(\"dxDataGrid-editingConfirmDeleteMessage\"),\r\n                    confirmDeleteTitle: \"\"\r\n                },\r\n                form: {\r\n                    colCount: 2\r\n                },\r\n                popup: {},\r\n                startEditAction: \"click\",\r\n                editRowKey: null,\r\n                editColumnName: null,\r\n                changes: []\r\n            },\r\n            useLegacyColumnButtonTemplate: false\r\n        }\r\n    },\r\n    controllers: {\r\n        editing: EditingController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                init: function() {\r\n                    this._editingController = this.getController(\"editing\");\r\n                    this.callBase()\r\n                },\r\n                reload: function(full, repaintChangesOnly) {\r\n                    !repaintChangesOnly && this._editingController.refresh();\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                repaintRows: function() {\r\n                    if (this.getController(\"editing\").isSaving()) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _updateEditRow: function(items) {\r\n                    var editRowKey = this.option(EDITING_EDITROWKEY_OPTION_NAME);\r\n                    var editRowIndex = gridCoreUtils.getIndexByKey(editRowKey, items);\r\n                    var editItem = items[editRowIndex];\r\n                    if (editItem) {\r\n                        var _this$_updateEditItem;\r\n                        editItem.isEditing = true;\r\n                        null === (_this$_updateEditItem = this._updateEditItem) || void 0 === _this$_updateEditItem ? void 0 : _this$_updateEditItem.call(this, editItem)\r\n                    }\r\n                },\r\n                _updateItemsCore: function(change) {\r\n                    this.callBase(change);\r\n                    this._updateEditRow(this.items(true))\r\n                },\r\n                _applyChangeUpdate: function(change) {\r\n                    this._updateEditRow(change.items);\r\n                    this.callBase(change)\r\n                },\r\n                _applyChangesOnly: function(change) {\r\n                    this._updateEditRow(change.items);\r\n                    this.callBase(change)\r\n                },\r\n                _processItems: function(items, change) {\r\n                    items = this._editingController.processItems(items, change);\r\n                    return this.callBase(items, change)\r\n                },\r\n                _processDataItem: function(dataItem, options) {\r\n                    this._editingController.processDataItem(dataItem, options, this.generateDataValues);\r\n                    return this.callBase(dataItem, options)\r\n                },\r\n                _processItem: function(item, options) {\r\n                    item = this.callBase(item, options);\r\n                    if (item.isNewRow) {\r\n                        options.dataIndex--;\r\n                        delete item.dataIndex\r\n                    }\r\n                    return item\r\n                },\r\n                _getChangedColumnIndices: function(oldItem, newItem, rowIndex, isLiveUpdate) {\r\n                    if (oldItem.isNewRow !== newItem.isNewRow || oldItem.removed !== newItem.removed) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _isCellChanged: function(oldRow, newRow, visibleRowIndex, columnIndex, isLiveUpdate) {\r\n                    var editingController = this.getController(\"editing\");\r\n                    var cell = oldRow.cells && oldRow.cells[columnIndex];\r\n                    var isEditing = editingController && editingController.isEditCell(visibleRowIndex, columnIndex);\r\n                    if (isLiveUpdate && isEditing) {\r\n                        return false\r\n                    }\r\n                    if (cell && cell.column && !cell.column.showEditorAlways && cell.isEditing !== isEditing) {\r\n                        return true\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._editingController = this.getController(\"editing\")\r\n                },\r\n                getCellIndex: function($cell, rowIndex) {\r\n                    if (!$cell.is(\"td\") && rowIndex >= 0) {\r\n                        var $cellElements = this.getCellElements(rowIndex);\r\n                        var cellIndex = -1;\r\n                        each($cellElements, (function(index, cellElement) {\r\n                            if ($(cellElement).find($cell).length) {\r\n                                cellIndex = index\r\n                            }\r\n                        }));\r\n                        return cellIndex\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                publicMethods: function() {\r\n                    return this.callBase().concat([\"cellValue\"])\r\n                },\r\n                _getCellTemplate: function(options) {\r\n                    var template = this._editingController.getColumnTemplate(options);\r\n                    return template || this.callBase(options)\r\n                },\r\n                _isNativeClick: function() {\r\n                    return (devices.real().ios || devices.real().android) && this.option(\"editing.allowUpdating\")\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var isRowRemoved = !!row.removed;\r\n                        var isRowInserted = !!row.isNewRow;\r\n                        var isRowModified = !!row.modified;\r\n                        isRowInserted && $row.addClass(ROW_INSERTED);\r\n                        isRowModified && $row.addClass(ROW_MODIFIED);\r\n                        if (isRowInserted || isRowRemoved) {\r\n                            $row.removeClass(ROW_SELECTED)\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _getColumnIndexByElement: function($element) {\r\n                    var $tableElement = $element.closest(\"table\");\r\n                    var $tableElements = this.getTableElements();\r\n                    while ($tableElement.length && !$tableElements.filter($tableElement).length) {\r\n                        $element = $tableElement.closest(\"td\");\r\n                        $tableElement = $element.closest(\"table\")\r\n                    }\r\n                    return this._getColumnIndexByElementCore($element)\r\n                },\r\n                _getColumnIndexByElementCore: function($element) {\r\n                    var $targetElement = $element.closest(\".\" + ROW_CLASS + \"> td:not(.dx-master-detail-cell)\");\r\n                    return this.getCellIndex($targetElement)\r\n                },\r\n                _editCellByClick: function(e, eventName) {\r\n                    var editingController = this._editingController;\r\n                    var $targetElement = $(e.event.target);\r\n                    var columnIndex = this._getColumnIndexByElement($targetElement);\r\n                    var row = this._dataController.items()[e.rowIndex];\r\n                    var allowUpdating = editingController.allowUpdating({\r\n                        row: row\r\n                    }, eventName) || row && row.isNewRow;\r\n                    var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n                    var isEditedCell = editingController.isEditCell(e.rowIndex, columnIndex);\r\n                    var allowEditing = allowUpdating && column && (column.allowEditing || isEditedCell);\r\n                    var startEditAction = this.option(\"editing.startEditAction\") || \"click\";\r\n                    if (\"down\" === eventName) {\r\n                        if ((devices.real().ios || devices.real().android) && !isEditedCell) {\r\n                            resetActiveElement()\r\n                        }\r\n                        return column && column.showEditorAlways && allowEditing && editingController.editCell(e.rowIndex, columnIndex)\r\n                    }\r\n                    if (\"click\" === eventName && \"dblClick\" === startEditAction && !isEditedCell) {\r\n                        var withoutSaveEditData = null === row || void 0 === row ? void 0 : row.isNewRow;\r\n                        editingController.closeEditCell(false, withoutSaveEditData)\r\n                    }\r\n                    if (allowEditing && eventName === startEditAction) {\r\n                        return editingController.editCell(e.rowIndex, columnIndex) || editingController.isEditRow(e.rowIndex)\r\n                    }\r\n                },\r\n                _rowPointerDown: function(e) {\r\n                    this._pointerDownTimeout = setTimeout(() => {\r\n                        this._editCellByClick(e, \"down\")\r\n                    })\r\n                },\r\n                _rowClick: function(e) {\r\n                    var isEditForm = $(e.rowElement).hasClass(this.addWidgetPrefix(EDIT_FORM_CLASS));\r\n                    e.event[TARGET_COMPONENT_NAME] = this.component;\r\n                    if (!this._editCellByClick(e, \"click\") && !isEditForm) {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _rowDblClick: function(e) {\r\n                    if (!this._editCellByClick(e, \"dblClick\")) {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _cellPrepared: function($cell, parameters) {\r\n                    var editingController = this._editingController;\r\n                    var isCommandCell = !!parameters.column.command;\r\n                    var isEditableCell = parameters.setValue;\r\n                    var isEditRow = editingController.isEditRow(parameters.rowIndex);\r\n                    var isEditing = isEditingCell(isEditRow, parameters);\r\n                    if (isEditingOrShowEditorAlwaysDataCell(isEditRow, parameters)) {\r\n                        var alignment = parameters.column.alignment;\r\n                        $cell.toggleClass(this.addWidgetPrefix(READONLY_CLASS), !isEditableCell).toggleClass(CELL_FOCUS_DISABLED_CLASS, !isEditableCell);\r\n                        if (alignment) {\r\n                            $cell.find(EDITORS_INPUT_SELECTOR).first().css(\"textAlign\", alignment)\r\n                        }\r\n                    }\r\n                    if (isEditing) {\r\n                        this._editCellPrepared($cell)\r\n                    }\r\n                    if (parameters.column && !isCommandCell) {\r\n                        editingController.highlightDataCell($cell, parameters)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _editCellPrepared: noop,\r\n                _formItemPrepared: noop,\r\n                _getCellOptions: function(options) {\r\n                    var cellOptions = this.callBase(options);\r\n                    cellOptions.isEditing = this._editingController.isEditCell(cellOptions.rowIndex, cellOptions.columnIndex);\r\n                    return cellOptions\r\n                },\r\n                _createCell: function(options) {\r\n                    var $cell = this.callBase(options);\r\n                    var isEditRow = this._editingController.isEditRow(options.rowIndex);\r\n                    isEditingOrShowEditorAlwaysDataCell(isEditRow, options) && $cell.addClass(EDITOR_CELL_CLASS);\r\n                    return $cell\r\n                },\r\n                cellValue: function(rowIndex, columnIdentifier, value, text) {\r\n                    var cellOptions = this.getCellOptions(rowIndex, columnIdentifier);\r\n                    if (cellOptions) {\r\n                        if (void 0 === value) {\r\n                            return cellOptions.value\r\n                        } else {\r\n                            this._editingController.updateFieldValue(cellOptions, value, text, true)\r\n                        }\r\n                    }\r\n                },\r\n                dispose: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    clearTimeout(this._pointerDownTimeout)\r\n                },\r\n                _renderCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._editingController._focusEditorIfNeed()\r\n                }\r\n            },\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    var editButtonItems = this.getController(\"editing\").prepareEditButtons(this);\r\n                    return editButtonItems.concat(items)\r\n                },\r\n                optionChanged: function(args) {\r\n                    var fullName = args.fullName;\r\n                    switch (args.name) {\r\n                        case \"editing\":\r\n                            var excludedOptions = [EDITING_POPUP_OPTION_NAME, EDITING_CHANGES_OPTION_NAME, EDITING_EDITCOLUMNNAME_OPTION_NAME, EDITING_EDITROWKEY_OPTION_NAME];\r\n                            var shouldInvalidate = fullName && !excludedOptions.some(optionName => optionName === fullName);\r\n                            shouldInvalidate && this._invalidate();\r\n                            this.callBase(args);\r\n                            break;\r\n                        case \"useLegacyColumnButtonTemplate\":\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                isVisible: function() {\r\n                    var editingOptions = this.getController(\"editing\").option(\"editing\");\r\n                    return this.callBase() || (null === editingOptions || void 0 === editingOptions ? void 0 : editingOptions.allowAdding)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport \"./ui.data_grid.editor_factory\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    editingModule\r\n} from \"../grid_core/ui.grid_core.editing\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\ngridCore.registerModule(\"editing\", extend(true, {}, editingModule, {\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                _changeRowExpandCore: function(key) {\r\n                    var editingController = this._editingController;\r\n                    if (Array.isArray(key)) {\r\n                        editingController && editingController.refresh()\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}));\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing_row_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    EDIT_MODE_ROW,\r\n    MODES_WITH_DELAYED_FOCUS,\r\n    ROW_SELECTED_CLASS,\r\n    EDIT_FORM_CLASS\r\n} from \"./ui.grid_core.editing_constants\";\r\nvar EDIT_ROW = \"dx-edit-row\";\r\nexport var editingRowBasedModule = {\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                isRowEditMode: function() {\r\n                    return this.getEditMode() === EDIT_MODE_ROW\r\n                },\r\n                _afterCancelEditData: function(rowIndex) {\r\n                    var dataController = this._dataController;\r\n                    if (this.isRowBasedEditMode() && rowIndex >= 0) {\r\n                        dataController.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: [rowIndex, rowIndex + 1]\r\n                        })\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _isDefaultButtonVisible: function(button, options) {\r\n                    var isRowMode = this.isRowBasedEditMode();\r\n                    var isEditRow = options.row && options.row.rowIndex === this._getVisibleEditRowIndex();\r\n                    if (isRowMode) {\r\n                        switch (button.name) {\r\n                            case \"edit\":\r\n                                return !isEditRow && this.allowUpdating(options);\r\n                            case \"delete\":\r\n                                return this.callBase.apply(this, arguments) && !isEditRow;\r\n                            case \"save\":\r\n                            case \"cancel\":\r\n                                return isEditRow;\r\n                            default:\r\n                                return this.callBase.apply(this, arguments)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                isEditRow: function(rowIndex) {\r\n                    return this.isRowBasedEditMode() && this._isEditRowByIndex(rowIndex)\r\n                },\r\n                _cancelSaving: function() {\r\n                    if (this.isRowBasedEditMode()) {\r\n                        if (!this.hasChanges()) {\r\n                            this._cancelEditDataCore()\r\n                        }\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _refreshCore: function() {\r\n                    if (this.isRowBasedEditMode()) {\r\n                        this.init()\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _isEditColumnVisible: function() {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var editingOptions = this.option(\"editing\");\r\n                    var isRowEditMode = this.isRowEditMode();\r\n                    var isVisibleInRowEditMode = editingOptions.allowUpdating || editingOptions.allowAdding;\r\n                    return result || isRowEditMode && isVisibleInRowEditMode\r\n                },\r\n                _focusEditorIfNeed: function() {\r\n                    var editMode = this.getEditMode();\r\n                    if (this._needFocusEditor) {\r\n                        if (-1 !== MODES_WITH_DELAYED_FOCUS.indexOf(editMode)) {\r\n                            var $editingCell = this.getFocusedCellInRow(this._getVisibleEditRowIndex());\r\n                            this._delayedInputFocus($editingCell, () => {\r\n                                $editingCell && this.component.focus($editingCell)\r\n                            })\r\n                        }\r\n                        this._needFocusEditor = false\r\n                    }\r\n                }\r\n            },\r\n            data: {\r\n                _getChangedColumnIndices: function(oldItem, newItem, rowIndex, isLiveUpdate) {\r\n                    var editingController = this.getController(\"editing\");\r\n                    if (editingController.isRowBasedEditMode() && oldItem.isEditing !== newItem.isEditing) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var editingController = this._editingController;\r\n                        var isEditRow = editingController.isEditRow(row.rowIndex);\r\n                        if (isEditRow) {\r\n                            $row.addClass(EDIT_ROW);\r\n                            $row.removeClass(ROW_SELECTED_CLASS);\r\n                            if (\"detail\" === row.rowType) {\r\n                                $row.addClass(this.addWidgetPrefix(EDIT_FORM_CLASS))\r\n                            }\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _update: function(change) {\r\n                    this.callBase(change);\r\n                    if (\"updateSelection\" === change.changeType) {\r\n                        this.getTableElements().children(\"tbody\").children(\".\" + EDIT_ROW).removeClass(ROW_SELECTED_CLASS)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editing_row_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    editingRowBasedModule\r\n} from \"../grid_core/ui.grid_core.editing_row_based\";\r\ngridCore.registerModule(\"editingRowBased\", editingRowBasedModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing_form_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Guid from \"../../core/guid\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport Button from \"../button\";\r\nimport devices from \"../../core/devices\";\r\nimport Form from \"../form\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport Scrollable from \"../scroll_view/ui.scrollable\";\r\nimport Popup from \"../popup\";\r\nimport {\r\n    EDIT_MODE_FORM,\r\n    EDIT_MODE_POPUP,\r\n    FOCUSABLE_ELEMENT_SELECTOR,\r\n    EDITING_EDITROWKEY_OPTION_NAME,\r\n    EDITING_POPUP_OPTION_NAME,\r\n    DATA_EDIT_DATA_INSERT_TYPE,\r\n    EDITING_FORM_OPTION_NAME\r\n} from \"./ui.grid_core.editing_constants\";\r\nvar EDIT_FORM_ITEM_CLASS = \"edit-form-item\";\r\nvar EDIT_POPUP_CLASS = \"edit-popup\";\r\nvar SCROLLABLE_CONTAINER_CLASS = \"dx-scrollable-container\";\r\nvar EDIT_POPUP_FORM_CLASS = \"edit-popup-form\";\r\nvar BUTTON_CLASS = \"dx-button\";\r\nvar FORM_BUTTONS_CONTAINER_CLASS = \"form-buttons-container\";\r\nvar getEditorType = item => {\r\n    var _column$formItem;\r\n    var column = item.column;\r\n    return item.isCustomEditorType ? item.editorType : null === (_column$formItem = column.formItem) || void 0 === _column$formItem ? void 0 : _column$formItem.editorType\r\n};\r\nvar forEachFormItems = (items, callBack) => {\r\n    items.forEach(item => {\r\n        if (item.items || item.tabs) {\r\n            forEachFormItems(item.items || item.tabs, callBack)\r\n        } else {\r\n            callBack(item)\r\n        }\r\n    })\r\n};\r\nexport var editingFormBasedModule = {\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                init: function() {\r\n                    this._editForm = null;\r\n                    this._updateEditFormDeferred = null;\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                isFormOrPopupEditMode: function() {\r\n                    return this.isPopupEditMode() || this.isFormEditMode()\r\n                },\r\n                isPopupEditMode: function() {\r\n                    var editMode = this.option(\"editing.mode\");\r\n                    return editMode === EDIT_MODE_POPUP\r\n                },\r\n                isFormEditMode: function() {\r\n                    var editMode = this.option(\"editing.mode\");\r\n                    return editMode === EDIT_MODE_FORM\r\n                },\r\n                getFirstEditableColumnIndex: function() {\r\n                    var firstFormItem = this._firstFormItem;\r\n                    if (this.isFormEditMode() && firstFormItem) {\r\n                        var editRowKey = this.option(EDITING_EDITROWKEY_OPTION_NAME);\r\n                        var editRowIndex = this._dataController.getRowIndexByKey(editRowKey);\r\n                        var $editFormElements = this._rowsView.getCellElements(editRowIndex);\r\n                        return this._rowsView._getEditFormEditorVisibleIndex($editFormElements, firstFormItem.column)\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                getEditFormRowIndex: function() {\r\n                    return this.isFormOrPopupEditMode() ? this._getVisibleEditRowIndex() : this.callBase.apply(this, arguments)\r\n                },\r\n                _isEditColumnVisible: function() {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var editingOptions = this.option(\"editing\");\r\n                    return this.isFormOrPopupEditMode() ? editingOptions.allowUpdating || result : result\r\n                },\r\n                _handleDataChanged: function(args) {\r\n                    var editForm = this._editForm;\r\n                    if (\"refresh\" === args.changeType && this.isPopupEditMode() && null !== editForm && void 0 !== editForm && editForm.option(\"visible\")) {\r\n                        this._repaintEditPopup()\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                getPopupContent: function() {\r\n                    var _this$_editPopup;\r\n                    var popupVisible = null === (_this$_editPopup = this._editPopup) || void 0 === _this$_editPopup ? void 0 : _this$_editPopup.option(\"visible\");\r\n                    if (this.isPopupEditMode() && popupVisible) {\r\n                        return this._$popupContent\r\n                    }\r\n                },\r\n                _showAddedRow: function(rowIndex) {\r\n                    if (this.isPopupEditMode()) {\r\n                        this._showEditPopup(rowIndex)\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _cancelEditDataCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.isPopupEditMode()) {\r\n                        this._hideEditPopup()\r\n                    }\r\n                },\r\n                _updateEditRowCore: function(row, skipCurrentRow, isCustomSetCellValue) {\r\n                    var editForm = this._editForm;\r\n                    if (this.isPopupEditMode()) {\r\n                        if (this.option(\"repaintChangesOnly\")) {\r\n                            var _row$update;\r\n                            null === (_row$update = row.update) || void 0 === _row$update ? void 0 : _row$update.call(row, row)\r\n                        } else if (editForm) {\r\n                            this._updateEditFormDeferred = (new Deferred).done(() => editForm.repaint());\r\n                            if (!this._updateLockCount) {\r\n                                this._updateEditFormDeferred.resolve()\r\n                            }\r\n                        }\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _showEditPopup: function(rowIndex, repaintForm) {\r\n                    var isMobileDevice = \"desktop\" !== devices.current().deviceType;\r\n                    var popupOptions = extend({\r\n                        showTitle: false,\r\n                        fullScreen: isMobileDevice,\r\n                        copyRootClassesToWrapper: true,\r\n                        _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n                        toolbarItems: [{\r\n                            toolbar: \"bottom\",\r\n                            location: \"after\",\r\n                            widget: \"dxButton\",\r\n                            options: this._getSaveButtonConfig()\r\n                        }, {\r\n                            toolbar: \"bottom\",\r\n                            location: \"after\",\r\n                            widget: \"dxButton\",\r\n                            options: this._getCancelButtonConfig()\r\n                        }],\r\n                        contentTemplate: this._getPopupEditFormTemplate(rowIndex)\r\n                    }, this.option(EDITING_POPUP_OPTION_NAME));\r\n                    if (!this._editPopup) {\r\n                        var $popupContainer = $(\"<div>\").appendTo(this.component.$element()).addClass(this.addWidgetPrefix(EDIT_POPUP_CLASS));\r\n                        this._editPopup = this._createComponent($popupContainer, Popup, {\r\n                            copyRootClassesToWrapper: true,\r\n                            _ignoreCopyRootClassesToWrapperDeprecation: true\r\n                        });\r\n                        this._editPopup.on(\"hiding\", this._getEditPopupHiddenHandler());\r\n                        this._editPopup.on(\"shown\", e => {\r\n                            eventsEngine.trigger(e.component.$content().find(FOCUSABLE_ELEMENT_SELECTOR).not(\".\" + SCROLLABLE_CONTAINER_CLASS).first(), \"focus\");\r\n                            if (repaintForm) {\r\n                                var _this$_editForm;\r\n                                null === (_this$_editForm = this._editForm) || void 0 === _this$_editForm ? void 0 : _this$_editForm.repaint()\r\n                            }\r\n                        })\r\n                    }\r\n                    this._editPopup.option(popupOptions);\r\n                    this._editPopup.show();\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _getPopupEditFormTemplate: function(rowIndex) {\r\n                    var row = this.component.getVisibleRows()[rowIndex];\r\n                    var templateOptions = {\r\n                        row: row,\r\n                        rowType: row.rowType,\r\n                        key: row.key,\r\n                        rowIndex: rowIndex\r\n                    };\r\n                    this._rowsView._addWatchMethod(templateOptions, row);\r\n                    return container => {\r\n                        var formTemplate = this.getEditFormTemplate();\r\n                        var scrollable = this._createComponent($(\"<div>\").appendTo(container), Scrollable);\r\n                        this._$popupContent = scrollable.$content();\r\n                        formTemplate(this._$popupContent, templateOptions, {\r\n                            isPopupForm: true\r\n                        });\r\n                        this._rowsView.renderDelayedTemplates()\r\n                    }\r\n                },\r\n                _repaintEditPopup: function() {\r\n                    var _this$_editPopup2;\r\n                    var rowIndex = this._getVisibleEditRowIndex();\r\n                    if (null !== (_this$_editPopup2 = this._editPopup) && void 0 !== _this$_editPopup2 && _this$_editPopup2.option(\"visible\") && rowIndex >= 0) {\r\n                        var defaultAnimation = this._editPopup.option(\"animation\");\r\n                        this._editPopup.option(\"animation\", null);\r\n                        this._showEditPopup(rowIndex, true);\r\n                        this._editPopup.option(\"animation\", defaultAnimation)\r\n                    }\r\n                },\r\n                _hideEditPopup: function() {\r\n                    var _this$_editPopup3;\r\n                    null === (_this$_editPopup3 = this._editPopup) || void 0 === _this$_editPopup3 ? void 0 : _this$_editPopup3.option(\"visible\", false)\r\n                },\r\n                optionChanged: function(args) {\r\n                    if (\"editing\" === args.name && this.isFormOrPopupEditMode()) {\r\n                        var fullName = args.fullName;\r\n                        if (0 === fullName.indexOf(EDITING_FORM_OPTION_NAME)) {\r\n                            this._handleFormOptionChange(args);\r\n                            args.handled = true\r\n                        } else if (0 === fullName.indexOf(EDITING_POPUP_OPTION_NAME)) {\r\n                            this._handlePopupOptionChange(args);\r\n                            args.handled = true\r\n                        }\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _handleFormOptionChange: function(args) {\r\n                    var _this$_editPopup4;\r\n                    if (this.isFormEditMode()) {\r\n                        var editRowIndex = this._getVisibleEditRowIndex();\r\n                        if (editRowIndex >= 0) {\r\n                            this._dataController.updateItems({\r\n                                changeType: \"update\",\r\n                                rowIndices: [editRowIndex]\r\n                            })\r\n                        }\r\n                    } else if (null !== (_this$_editPopup4 = this._editPopup) && void 0 !== _this$_editPopup4 && _this$_editPopup4.option(\"visible\") && 0 === args.fullName.indexOf(EDITING_FORM_OPTION_NAME)) {\r\n                        this._repaintEditPopup()\r\n                    }\r\n                },\r\n                _handlePopupOptionChange: function(args) {\r\n                    var editPopup = this._editPopup;\r\n                    if (editPopup) {\r\n                        var popupOptionName = args.fullName.slice(EDITING_POPUP_OPTION_NAME.length + 1);\r\n                        if (popupOptionName) {\r\n                            editPopup.option(popupOptionName, args.value)\r\n                        } else {\r\n                            editPopup.option(args.value)\r\n                        }\r\n                    }\r\n                },\r\n                renderFormEditTemplate: function(detailCellOptions, item, formTemplateOptions, container, isReadOnly) {\r\n                    var that = this;\r\n                    var $container = $(container);\r\n                    var column = item.column;\r\n                    var editorType = getEditorType(item);\r\n                    var rowData = null === detailCellOptions || void 0 === detailCellOptions ? void 0 : detailCellOptions.row.data;\r\n                    var form = formTemplateOptions.component;\r\n                    var {\r\n                        label: label,\r\n                        labelMark: labelMark,\r\n                        labelMode: labelMode\r\n                    } = formTemplateOptions.editorOptions || {};\r\n                    var cellOptions = extend({}, detailCellOptions, {\r\n                        data: rowData,\r\n                        cellElement: null,\r\n                        isOnForm: true,\r\n                        item: item,\r\n                        id: form.getItemID(item.name || item.dataField),\r\n                        column: extend({}, column, {\r\n                            editorType: editorType,\r\n                            editorOptions: extend({\r\n                                label: label,\r\n                                labelMark: labelMark,\r\n                                labelMode: labelMode\r\n                            }, column.editorOptions, item.editorOptions)\r\n                        }),\r\n                        columnIndex: column.index,\r\n                        setValue: !isReadOnly && column.allowEditing && function(value) {\r\n                            that.updateFieldValue(cellOptions, value)\r\n                        }\r\n                    });\r\n                    cellOptions.value = column.calculateCellValue(rowData);\r\n                    var template = this._getFormEditItemTemplate.bind(this)(cellOptions, column);\r\n                    this._rowsView.renderTemplate($container, template, cellOptions, !!$container.closest(getWindow().document).length).done(() => {\r\n                        this._rowsView._updateCell($container, cellOptions)\r\n                    });\r\n                    return cellOptions\r\n                },\r\n                getFormEditorTemplate: function(cellOptions, item) {\r\n                    var column = this.component.columnOption(item.dataField);\r\n                    return (options, container) => {\r\n                        var _cellOptions$row$watc, _cellOptions$row;\r\n                        var $container = $(container);\r\n                        null === (_cellOptions$row$watc = (_cellOptions$row = cellOptions.row).watch) || void 0 === _cellOptions$row$watc ? void 0 : _cellOptions$row$watc.call(_cellOptions$row, (function() {\r\n                            return column.selector(cellOptions.row.data)\r\n                        }), () => {\r\n                            var _validator;\r\n                            var $editorElement = $container.find(\".dx-widget\").first();\r\n                            var validator = $editorElement.data(\"dxValidator\");\r\n                            var validatorOptions = null === (_validator = validator) || void 0 === _validator ? void 0 : _validator.option();\r\n                            $container.contents().remove();\r\n                            cellOptions = this.renderFormEditTemplate.bind(this)(cellOptions, item, options, $container);\r\n                            $editorElement = $container.find(\".dx-widget\").first();\r\n                            validator = $editorElement.data(\"dxValidator\");\r\n                            if (validatorOptions && !validator) {\r\n                                $editorElement.dxValidator({\r\n                                    validationRules: validatorOptions.validationRules,\r\n                                    validationGroup: validatorOptions.validationGroup,\r\n                                    dataGetter: validatorOptions.dataGetter\r\n                                })\r\n                            }\r\n                        });\r\n                        cellOptions = this.renderFormEditTemplate.bind(this)(cellOptions, item, options, $container)\r\n                    }\r\n                },\r\n                getEditFormOptions: function(detailOptions) {\r\n                    var _this$_getValidationG;\r\n                    var editFormOptions = null === (_this$_getValidationG = this._getValidationGroupsInForm) || void 0 === _this$_getValidationG ? void 0 : _this$_getValidationG.call(this, detailOptions);\r\n                    var userCustomizeItem = this.option(\"editing.form.customizeItem\");\r\n                    var editFormItemClass = this.addWidgetPrefix(EDIT_FORM_ITEM_CLASS);\r\n                    var items = this.option(\"editing.form.items\");\r\n                    var isCustomEditorType = {};\r\n                    if (!items) {\r\n                        var columns = this.getController(\"columns\").getColumns();\r\n                        items = [];\r\n                        each(columns, (function(_, column) {\r\n                            if (!column.isBand && !column.type) {\r\n                                items.push({\r\n                                    column: column,\r\n                                    name: column.name,\r\n                                    dataField: column.dataField\r\n                                })\r\n                            }\r\n                        }))\r\n                    } else {\r\n                        forEachFormItems(items, item => {\r\n                            var itemId = (null === item || void 0 === item ? void 0 : item.name) || (null === item || void 0 === item ? void 0 : item.dataField);\r\n                            if (itemId) {\r\n                                isCustomEditorType[itemId] = !!item.editorType\r\n                            }\r\n                        })\r\n                    }\r\n                    return extend({}, editFormOptions, {\r\n                        items: items,\r\n                        formID: \"dx-\" + new Guid,\r\n                        customizeItem: item => {\r\n                            var column;\r\n                            var itemId = item.name || item.dataField;\r\n                            if (item.column || itemId) {\r\n                                column = item.column || this._columnsController.columnOption(item.name ? \"name:\" + item.name : \"dataField:\" + item.dataField)\r\n                            }\r\n                            if (column) {\r\n                                item.label = item.label || {};\r\n                                item.label.text = item.label.text || column.caption;\r\n                                if (\"boolean\" === column.dataType && void 0 === item.label.visible) {\r\n                                    var labelMode = this.option(\"editing.form.labelMode\");\r\n                                    if (\"floating\" === labelMode || \"static\" === labelMode) {\r\n                                        item.label.visible = true\r\n                                    }\r\n                                }\r\n                                item.template = item.template || this.getFormEditorTemplate(detailOptions, item);\r\n                                item.column = column;\r\n                                item.isCustomEditorType = isCustomEditorType[itemId];\r\n                                if (column.formItem) {\r\n                                    extend(item, column.formItem)\r\n                                }\r\n                                if (void 0 === item.isRequired && column.validationRules) {\r\n                                    item.isRequired = column.validationRules.some((function(rule) {\r\n                                        return \"required\" === rule.type\r\n                                    }));\r\n                                    item.validationRules = []\r\n                                }\r\n                                var itemVisible = isDefined(item.visible) ? item.visible : true;\r\n                                if (!this._firstFormItem && itemVisible) {\r\n                                    this._firstFormItem = item\r\n                                }\r\n                            }\r\n                            null === userCustomizeItem || void 0 === userCustomizeItem ? void 0 : userCustomizeItem.call(this, item);\r\n                            item.cssClass = isString(item.cssClass) ? item.cssClass + \" \" + editFormItemClass : editFormItemClass\r\n                        }\r\n                    })\r\n                },\r\n                getEditFormTemplate: function() {\r\n                    return ($container, detailOptions, options) => {\r\n                        var editFormOptions = this.option(EDITING_FORM_OPTION_NAME);\r\n                        var baseEditFormOptions = this.getEditFormOptions(detailOptions);\r\n                        var $formContainer = $(\"<div>\").appendTo($container);\r\n                        var isPopupForm = null === options || void 0 === options ? void 0 : options.isPopupForm;\r\n                        this._firstFormItem = void 0;\r\n                        if (isPopupForm) {\r\n                            $formContainer.addClass(this.addWidgetPrefix(EDIT_POPUP_FORM_CLASS))\r\n                        }\r\n                        this._editForm = this._createComponent($formContainer, Form, extend({}, editFormOptions, baseEditFormOptions));\r\n                        if (!isPopupForm) {\r\n                            var $buttonsContainer = $(\"<div>\").addClass(this.addWidgetPrefix(FORM_BUTTONS_CONTAINER_CLASS)).appendTo($container);\r\n                            this._createComponent($(\"<div>\").appendTo($buttonsContainer), Button, this._getSaveButtonConfig());\r\n                            this._createComponent($(\"<div>\").appendTo($buttonsContainer), Button, this._getCancelButtonConfig())\r\n                        }\r\n                        this._editForm.on(\"contentReady\", () => {\r\n                            var _this$_editPopup5;\r\n                            null === (_this$_editPopup5 = this._editPopup) || void 0 === _this$_editPopup5 ? void 0 : _this$_editPopup5.repaint()\r\n                        })\r\n                    }\r\n                },\r\n                getEditForm: function() {\r\n                    return this._editForm\r\n                },\r\n                _endUpdateCore: function() {\r\n                    var _this$_updateEditForm;\r\n                    null === (_this$_updateEditForm = this._updateEditFormDeferred) || void 0 === _this$_updateEditForm ? void 0 : _this$_updateEditForm.resolve()\r\n                },\r\n                _beforeEndSaving: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.isPopupEditMode()) {\r\n                        var _this$_editPopup6;\r\n                        null === (_this$_editPopup6 = this._editPopup) || void 0 === _this$_editPopup6 ? void 0 : _this$_editPopup6.hide()\r\n                    }\r\n                },\r\n                _processDataItemCore: function(item, _ref) {\r\n                    var {\r\n                        type: type\r\n                    } = _ref;\r\n                    if (this.isPopupEditMode() && type === DATA_EDIT_DATA_INSERT_TYPE) {\r\n                        item.visible = false\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _editRowFromOptionChangedCore: function(rowIndices, rowIndex, oldRowIndex) {\r\n                    if (this.isPopupEditMode()) {\r\n                        this._showEditPopup(rowIndex)\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                }\r\n            },\r\n            data: {\r\n                _updateEditItem: function(item) {\r\n                    if (this._editingController.isFormEditMode()) {\r\n                        item.rowType = \"detail\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _renderCellContent: function($cell, options) {\r\n                    if (\"data\" === options.rowType && this._editingController.isPopupEditMode() && false === options.row.visible) {\r\n                        return\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                getCellElements: function(rowIndex) {\r\n                    var $cellElements = this.callBase(rowIndex);\r\n                    var editingController = this._editingController;\r\n                    var editForm = editingController.getEditForm();\r\n                    var editFormRowIndex = editingController.getEditFormRowIndex();\r\n                    if (editFormRowIndex === rowIndex && $cellElements && editForm) {\r\n                        return editForm.$element().find(\".\" + this.addWidgetPrefix(EDIT_FORM_ITEM_CLASS) + \", .\" + BUTTON_CLASS)\r\n                    }\r\n                    return $cellElements\r\n                },\r\n                _getVisibleColumnIndex: function($cells, rowIndex, columnIdentifier) {\r\n                    var editFormRowIndex = this._editingController.getEditFormRowIndex();\r\n                    if (editFormRowIndex === rowIndex && isString(columnIdentifier)) {\r\n                        var column = this._columnsController.columnOption(columnIdentifier);\r\n                        return this._getEditFormEditorVisibleIndex($cells, column)\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _getEditFormEditorVisibleIndex: function($cells, column) {\r\n                    var visibleIndex = -1;\r\n                    each($cells, (function(index, cellElement) {\r\n                        var item = $(cellElement).find(\".dx-field-item-content\").data(\"dx-form-item\");\r\n                        if (null !== item && void 0 !== item && item.column && column && item.column.index === column.index) {\r\n                            visibleIndex = index;\r\n                            return false\r\n                        }\r\n                    }));\r\n                    return visibleIndex\r\n                },\r\n                _isFormItem: function(parameters) {\r\n                    var isDetailRow = \"detail\" === parameters.rowType || \"detailAdaptive\" === parameters.rowType;\r\n                    var isPopupEditing = \"data\" === parameters.rowType && this._editingController.isPopupEditMode();\r\n                    return (isDetailRow || isPopupEditing) && parameters.item\r\n                },\r\n                _updateCell: function($cell, parameters) {\r\n                    if (this._isFormItem(parameters)) {\r\n                        this._formItemPrepared(parameters, $cell)\r\n                    } else {\r\n                        this.callBase($cell, parameters)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editing_form_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    editingFormBasedModule\r\n} from \"../grid_core/ui.grid_core.editing_form_based\";\r\ngridCore.registerModule(\"editingFormBased\", editingFormBasedModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing_cell_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport holdEvent from \"../../events/hold\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    deferRender\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    createObjectWithChanges\r\n} from \"../../data/array_utils\";\r\nimport {\r\n    EDIT_MODE_BATCH,\r\n    EDIT_MODE_CELL,\r\n    TARGET_COMPONENT_NAME\r\n} from \"./ui.grid_core.editing_constants\";\r\nvar FOCUS_OVERLAY_CLASS = \"focus-overlay\";\r\nvar ADD_ROW_BUTTON_CLASS = \"addrow-button\";\r\nvar DROPDOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar CELL_MODIFIED_CLASS = \"dx-cell-modified\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar ROW_REMOVED = \"dx-row-removed\";\r\nvar EDITING_EDITROWKEY_OPTION_NAME = \"editing.editRowKey\";\r\nvar EDITING_EDITCOLUMNNAME_OPTION_NAME = \"editing.editColumnName\";\r\nvar DATA_EDIT_DATA_REMOVE_TYPE = \"remove\";\r\nexport default {\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                init: function() {\r\n                    var needCreateHandlers = !this._saveEditorHandler;\r\n                    this.callBase.apply(this, arguments);\r\n                    if (needCreateHandlers) {\r\n                        var $pointerDownTarget;\r\n                        var isResizing;\r\n                        this._pointerUpEditorHandler = () => {\r\n                            var _this$getController;\r\n                            isResizing = null === (_this$getController = this.getController(\"columnsResizer\")) || void 0 === _this$getController ? void 0 : _this$getController.isResizing()\r\n                        };\r\n                        this._pointerDownEditorHandler = e => $pointerDownTarget = $(e.target);\r\n                        this._saveEditorHandler = this.createAction((function(e) {\r\n                            var event = e.event;\r\n                            var $target = $(event.target);\r\n                            var targetComponent = event[TARGET_COMPONENT_NAME];\r\n                            if ($pointerDownTarget && $pointerDownTarget.is(\"input\") && !$pointerDownTarget.is($target)) {\r\n                                return\r\n                            }\r\n\r\n                            function checkEditorPopup($element) {\r\n                                return $element && !!$element.closest(\".\".concat(DROPDOWN_EDITOR_OVERLAY_CLASS)).length\r\n                            }\r\n                            if (this.isCellOrBatchEditMode() && !this._editCellInProgress) {\r\n                                var isEditorPopup = checkEditorPopup($target) || checkEditorPopup(null === targetComponent || void 0 === targetComponent ? void 0 : targetComponent.$element());\r\n                                var isDomElement = !!$target.closest(getWindow().document).length;\r\n                                var isAnotherComponent = targetComponent && !targetComponent._disposed && targetComponent !== this.component;\r\n                                var isAddRowButton = !!$target.closest(\".\".concat(this.addWidgetPrefix(ADD_ROW_BUTTON_CLASS))).length;\r\n                                var isFocusOverlay = $target.hasClass(this.addWidgetPrefix(FOCUS_OVERLAY_CLASS));\r\n                                var isCellEditMode = this.isCellEditMode();\r\n                                if (!isResizing && !isEditorPopup && !isFocusOverlay && !(isAddRowButton && isCellEditMode && this.isEditing()) && (isDomElement || isAnotherComponent)) {\r\n                                    this._closeEditItem.bind(this)($target)\r\n                                }\r\n                            }\r\n                        }));\r\n                        eventsEngine.on(domAdapter.getDocument(), pointerEvents.up, this._pointerUpEditorHandler);\r\n                        eventsEngine.on(domAdapter.getDocument(), pointerEvents.down, this._pointerDownEditorHandler);\r\n                        eventsEngine.on(domAdapter.getDocument(), clickEventName, this._saveEditorHandler)\r\n                    }\r\n                },\r\n                isCellEditMode: function() {\r\n                    return this.option(\"editing.mode\") === EDIT_MODE_CELL\r\n                },\r\n                isBatchEditMode: function() {\r\n                    return this.option(\"editing.mode\") === EDIT_MODE_BATCH\r\n                },\r\n                isCellOrBatchEditMode: function() {\r\n                    return this.isCellEditMode() || this.isBatchEditMode()\r\n                },\r\n                _needToCloseEditableCell: function($targetElement) {\r\n                    var $element = this.component.$element();\r\n                    var result = this.isEditing();\r\n                    var isCurrentComponentElement = !$element || !!$targetElement.closest($element).length;\r\n                    if (isCurrentComponentElement) {\r\n                        var isDataRow = $targetElement.closest(\".\" + DATA_ROW_CLASS).length;\r\n                        if (isDataRow) {\r\n                            var rowsView = this.getView(\"rowsView\");\r\n                            var $targetCell = $targetElement.closest(\".\" + ROW_CLASS + \"> td\");\r\n                            var rowIndex = rowsView.getRowIndex($targetCell.parent());\r\n                            var columnIndex = rowsView.getCellElements(rowIndex).index($targetCell);\r\n                            var visibleColumns = this._columnsController.getVisibleColumns();\r\n                            var allowEditing = visibleColumns[columnIndex] && visibleColumns[columnIndex].allowEditing;\r\n                            result = result && !allowEditing && !this.isEditCell(rowIndex, columnIndex)\r\n                        }\r\n                    }\r\n                    return result || this.callBase.apply(this, arguments)\r\n                },\r\n                _closeEditItem: function($targetElement) {\r\n                    if (this._needToCloseEditableCell($targetElement)) {\r\n                        this.closeEditCell()\r\n                    }\r\n                },\r\n                _focusEditorIfNeed: function() {\r\n                    if (this._needFocusEditor && this.isCellOrBatchEditMode()) {\r\n                        var _this$_rowsView;\r\n                        var editColumnIndex = this._getVisibleEditColumnIndex();\r\n                        var $cell = null === (_this$_rowsView = this._rowsView) || void 0 === _this$_rowsView ? void 0 : _this$_rowsView._getCellElement(this._getVisibleEditRowIndex(), editColumnIndex);\r\n                        if ($cell && !$cell.find(\":focus\").length) {\r\n                            this._focusEditingCell(() => {\r\n                                this._editCellInProgress = false\r\n                            }, $cell, true)\r\n                        } else {\r\n                            this._editCellInProgress = false\r\n                        }\r\n                        this._needFocusEditor = false\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                isEditing: function() {\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        var isEditRowKeyDefined = isDefined(this.option(EDITING_EDITROWKEY_OPTION_NAME));\r\n                        var isEditColumnNameDefined = isDefined(this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME));\r\n                        return isEditRowKeyDefined && isEditColumnNameDefined\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _handleEditColumnNameChange: function(args) {\r\n                    var oldRowIndex = this._getVisibleEditRowIndex(args.previousValue);\r\n                    if (this.isCellOrBatchEditMode() && -1 !== oldRowIndex && isDefined(args.value) && args.value !== args.previousValue) {\r\n                        var columnIndex = this._columnsController.getVisibleColumnIndex(args.value);\r\n                        var oldColumnIndex = this._columnsController.getVisibleColumnIndex(args.previousValue);\r\n                        this._editCellFromOptionChanged(columnIndex, oldColumnIndex, oldRowIndex)\r\n                    }\r\n                },\r\n                _addRow: function(parentKey, deferred) {\r\n                    if (this.isCellEditMode() && this.hasChanges()) {\r\n                        var _deferred = new Deferred;\r\n                        this.saveEditData().done(() => {\r\n                            if (!this.hasChanges()) {\r\n                                this.addRow(parentKey).done(_deferred.resolve).fail(_deferred.reject)\r\n                            } else {\r\n                                _deferred.reject(\"cancel\")\r\n                            }\r\n                        });\r\n                        return _deferred.promise()\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                editCell: function(rowIndex, columnIndex) {\r\n                    return this._editCell({\r\n                        rowIndex: rowIndex,\r\n                        columnIndex: columnIndex\r\n                    })\r\n                },\r\n                _editCell: function(options) {\r\n                    var d = new Deferred;\r\n                    var coreResult;\r\n                    this.executeOperation(d, () => {\r\n                        coreResult = this._editCellCore(options);\r\n                        when(coreResult).done(d.resolve).fail(d.reject)\r\n                    });\r\n                    return void 0 !== coreResult ? coreResult : d.promise()\r\n                },\r\n                _editCellCore: function(options) {\r\n                    var dataController = this._dataController;\r\n                    var isEditByOptionChanged = isDefined(options.oldColumnIndex) || isDefined(options.oldRowIndex);\r\n                    var {\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex,\r\n                        column: column,\r\n                        item: item\r\n                    } = this._getNormalizedEditCellOptions(options);\r\n                    var params = {\r\n                        data: null === item || void 0 === item ? void 0 : item.data,\r\n                        cancel: false,\r\n                        column: column\r\n                    };\r\n                    if (void 0 === item.key) {\r\n                        this._dataController.fireError(\"E1043\");\r\n                        return\r\n                    }\r\n                    if (column && (\"data\" === item.rowType || \"detailAdaptive\" === item.rowType) && !item.removed && this.isCellOrBatchEditMode()) {\r\n                        if (!isEditByOptionChanged && this.isEditCell(rowIndex, columnIndex)) {\r\n                            return true\r\n                        }\r\n                        var editRowIndex = rowIndex + dataController.getRowIndexOffset();\r\n                        return when(this._beforeEditCell(rowIndex, columnIndex, item)).done(cancel => {\r\n                            if (cancel) {\r\n                                return\r\n                            }\r\n                            if (!this._prepareEditCell(params, item, columnIndex, editRowIndex)) {\r\n                                this._processCanceledEditingCell()\r\n                            }\r\n                        })\r\n                    }\r\n                    return false\r\n                },\r\n                _beforeEditCell: function(rowIndex, columnIndex, item) {\r\n                    if (this.isCellEditMode() && !item.isNewRow && this.hasChanges()) {\r\n                        var d = new Deferred;\r\n                        this.saveEditData().always(() => {\r\n                            d.resolve(this.hasChanges())\r\n                        });\r\n                        return d\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    var publicMethods = this.callBase.apply(this, arguments);\r\n                    return publicMethods.concat([\"editCell\", \"closeEditCell\"])\r\n                },\r\n                _getNormalizedEditCellOptions: function(_ref) {\r\n                    var {\r\n                        oldColumnIndex: oldColumnIndex,\r\n                        oldRowIndex: oldRowIndex,\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    } = _ref;\r\n                    var columnsController = this._columnsController;\r\n                    var visibleColumns = columnsController.getVisibleColumns();\r\n                    var items = this._dataController.items();\r\n                    var item = items[rowIndex];\r\n                    var oldColumn;\r\n                    if (isDefined(oldColumnIndex)) {\r\n                        oldColumn = visibleColumns[oldColumnIndex]\r\n                    } else {\r\n                        oldColumn = this._getEditColumn()\r\n                    }\r\n                    if (!isDefined(oldRowIndex)) {\r\n                        oldRowIndex = this._getVisibleEditRowIndex()\r\n                    }\r\n                    if (isString(columnIndex)) {\r\n                        columnIndex = columnsController.columnOption(columnIndex, \"index\");\r\n                        columnIndex = columnsController.getVisibleIndex(columnIndex)\r\n                    }\r\n                    var column = visibleColumns[columnIndex];\r\n                    return {\r\n                        oldColumn: oldColumn,\r\n                        columnIndex: columnIndex,\r\n                        oldRowIndex: oldRowIndex,\r\n                        rowIndex: rowIndex,\r\n                        column: column,\r\n                        item: item\r\n                    }\r\n                },\r\n                _prepareEditCell: function(params, item, editColumnIndex, editRowIndex) {\r\n                    if (!item.isNewRow) {\r\n                        params.key = item.key\r\n                    }\r\n                    if (this._isEditingStart(params)) {\r\n                        return false\r\n                    }\r\n                    this._pageIndex = this._dataController.pageIndex();\r\n                    this._setEditRowKey(item.key);\r\n                    this._setEditColumnNameByIndex(editColumnIndex);\r\n                    if (!params.column.showEditorAlways) {\r\n                        var _item$oldData;\r\n                        this._addInternalData({\r\n                            key: item.key,\r\n                            oldData: null !== (_item$oldData = item.oldData) && void 0 !== _item$oldData ? _item$oldData : item.data\r\n                        })\r\n                    }\r\n                    return true\r\n                },\r\n                closeEditCell: function(isError, withoutSaveEditData) {\r\n                    var result = when();\r\n                    var oldEditRowIndex = this._getVisibleEditRowIndex();\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        var deferred = new Deferred;\r\n                        result = new Deferred;\r\n                        this.executeOperation(deferred, () => {\r\n                            this._closeEditCellCore(isError, oldEditRowIndex, withoutSaveEditData).always(result.resolve)\r\n                        })\r\n                    }\r\n                    return result.promise()\r\n                },\r\n                _closeEditCellCore: function(isError, oldEditRowIndex, withoutSaveEditData) {\r\n                    var dataController = this._dataController;\r\n                    var deferred = new Deferred;\r\n                    var promise = deferred.promise();\r\n                    if (this.isCellEditMode() && this.hasChanges()) {\r\n                        if (!withoutSaveEditData) {\r\n                            this.saveEditData().done(error => {\r\n                                if (!this.hasChanges()) {\r\n                                    this.closeEditCell(!!error).always(deferred.resolve);\r\n                                    return\r\n                                }\r\n                                deferred.resolve()\r\n                            });\r\n                            return promise\r\n                        }\r\n                    } else {\r\n                        this._resetEditRowKey();\r\n                        this._resetEditColumnName();\r\n                        if (oldEditRowIndex >= 0) {\r\n                            var rowIndices = [oldEditRowIndex];\r\n                            this._beforeCloseEditCellInBatchMode(rowIndices);\r\n                            if (!isError) {\r\n                                dataController.updateItems({\r\n                                    changeType: \"update\",\r\n                                    rowIndices: rowIndices\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                    deferred.resolve();\r\n                    return promise\r\n                },\r\n                _resetModifiedClassCells: function(changes) {\r\n                    if (this.isBatchEditMode()) {\r\n                        var columnsCount = this._columnsController.getVisibleColumns().length;\r\n                        changes.forEach(_ref2 => {\r\n                            var {\r\n                                key: key\r\n                            } = _ref2;\r\n                            var rowIndex = this._dataController.getRowIndexByKey(key);\r\n                            if (-1 !== rowIndex) {\r\n                                for (var columnIndex = 0; columnIndex < columnsCount; columnIndex++) {\r\n                                    this._rowsView._getCellElement(rowIndex, columnIndex).removeClass(CELL_MODIFIED_CLASS)\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                _prepareChange: function(options, value, text) {\r\n                    var $cellElement = $(options.cellElement);\r\n                    if (this.isBatchEditMode() && void 0 !== options.key) {\r\n                        this._applyModified($cellElement, options)\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _cancelSaving: function() {\r\n                    var dataController = this._dataController;\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        if (this.isBatchEditMode()) {\r\n                            this._resetEditIndices()\r\n                        }\r\n                        dataController.updateItems()\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                optionChanged: function(args) {\r\n                    var fullName = args.fullName;\r\n                    if (\"editing\" === args.name && fullName === EDITING_EDITCOLUMNNAME_OPTION_NAME) {\r\n                        this._handleEditColumnNameChange(args);\r\n                        args.handled = true\r\n                    } else {\r\n                        this.callBase(args)\r\n                    }\r\n                },\r\n                _editCellFromOptionChanged: function(columnIndex, oldColumnIndex, oldRowIndex) {\r\n                    var columns = this._columnsController.getVisibleColumns();\r\n                    if (columnIndex > -1) {\r\n                        deferRender(() => {\r\n                            this._repaintEditCell(columns[columnIndex], columns[oldColumnIndex], oldRowIndex)\r\n                        })\r\n                    }\r\n                },\r\n                _handleEditRowKeyChange: function(args) {\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        var columnIndex = this._getVisibleEditColumnIndex();\r\n                        var oldRowIndexCorrection = this._getEditRowIndexCorrection();\r\n                        var oldRowIndex = this._dataController.getRowIndexByKey(args.previousValue) + oldRowIndexCorrection;\r\n                        if (isDefined(args.value) && args.value !== args.previousValue) {\r\n                            var _this$_editCellFromOp;\r\n                            null === (_this$_editCellFromOp = this._editCellFromOptionChanged) || void 0 === _this$_editCellFromOp ? void 0 : _this$_editCellFromOp.call(this, columnIndex, columnIndex, oldRowIndex)\r\n                        }\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                deleteRow: function(rowIndex) {\r\n                    if (this.isCellEditMode() && this.isEditing()) {\r\n                        var isNewRow = this._dataController.items()[rowIndex].isNewRow;\r\n                        var rowKey = this._dataController.getKeyByRowIndex(rowIndex);\r\n                        this.closeEditCell(null, isNewRow).always(() => {\r\n                            rowIndex = this._dataController.getRowIndexByKey(rowKey);\r\n                            this._checkAndDeleteRow(rowIndex)\r\n                        })\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _checkAndDeleteRow: function(rowIndex) {\r\n                    if (this.isBatchEditMode()) {\r\n                        this._deleteRowCore(rowIndex)\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _refreshCore: function(isPageChanged) {\r\n                    var needResetIndexes = this.isBatchEditMode() || isPageChanged && \"virtual\" !== this.option(\"scrolling.mode\");\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        if (needResetIndexes) {\r\n                            this._resetEditColumnName();\r\n                            this._resetEditRowKey()\r\n                        }\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _allowRowAdding: function(params) {\r\n                    if (this.isBatchEditMode()) {\r\n                        return true\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _afterDeleteRow: function(rowIndex, oldEditRowIndex) {\r\n                    var dataController = this._dataController;\r\n                    if (this.isBatchEditMode()) {\r\n                        dataController.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: [oldEditRowIndex, rowIndex]\r\n                        });\r\n                        return (new Deferred).resolve()\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _updateEditRow: function(row, forceUpdateRow, isCustomSetCellValue) {\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        this._updateRowImmediately(row, forceUpdateRow, isCustomSetCellValue)\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _isDefaultButtonVisible: function(button, options) {\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        var isBatchMode = this.isBatchEditMode();\r\n                        switch (button.name) {\r\n                            case \"save\":\r\n                            case \"cancel\":\r\n                            case \"edit\":\r\n                                return false;\r\n                            case \"delete\":\r\n                                return this.callBase.apply(this, arguments) && (!isBatchMode || !options.row.removed);\r\n                            case \"undelete\":\r\n                                return isBatchMode && this.allowDeleting(options) && options.row.removed;\r\n                            default:\r\n                                return this.callBase.apply(this, arguments)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _isRowDeleteAllowed: function() {\r\n                    var callBase = this.callBase.apply(this, arguments);\r\n                    return callBase || this.isBatchEditMode()\r\n                },\r\n                _beforeEndSaving: function(changes) {\r\n                    if (this.isCellEditMode()) {\r\n                        var _changes$;\r\n                        if (\"update\" !== (null === (_changes$ = changes[0]) || void 0 === _changes$ ? void 0 : _changes$.type)) {\r\n                            this.callBase.apply(this, arguments)\r\n                        }\r\n                    } else {\r\n                        if (this.isBatchEditMode()) {\r\n                            this._resetModifiedClassCells(changes)\r\n                        }\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                prepareEditButtons: function(headerPanel) {\r\n                    var editingOptions = this.option(\"editing\") || {};\r\n                    var buttonItems = this.callBase.apply(this, arguments);\r\n                    if ((editingOptions.allowUpdating || editingOptions.allowAdding || editingOptions.allowDeleting) && this.isBatchEditMode()) {\r\n                        buttonItems.push(this.prepareButtonItem(headerPanel, \"save\", \"saveEditData\", 21));\r\n                        buttonItems.push(this.prepareButtonItem(headerPanel, \"revert\", \"cancelEditData\", 22))\r\n                    }\r\n                    return buttonItems\r\n                },\r\n                _saveEditDataInner: function() {\r\n                    var _deferred2;\r\n                    var editRow = this._dataController.getVisibleRows()[this.getEditRowIndex()];\r\n                    var editColumn = this._getEditColumn();\r\n                    var showEditorAlways = null === editColumn || void 0 === editColumn ? void 0 : editColumn.showEditorAlways;\r\n                    var isUpdateInCellMode = this.isCellEditMode() && !(null !== editRow && void 0 !== editRow && editRow.isNewRow);\r\n                    var deferred;\r\n                    if (isUpdateInCellMode && showEditorAlways) {\r\n                        deferred = new Deferred;\r\n                        this.addDeferred(deferred)\r\n                    }\r\n                    return this.callBase.apply(this, arguments).always(null === (_deferred2 = deferred) || void 0 === _deferred2 ? void 0 : _deferred2.resolve)\r\n                },\r\n                _applyChange: function(options, params, forceUpdateRow) {\r\n                    var isUpdateInCellMode = this.isCellEditMode() && options.row && !options.row.isNewRow;\r\n                    var showEditorAlways = options.column.showEditorAlways;\r\n                    var isCustomSetCellValue = options.column.setCellValue !== options.column.defaultSetCellValue;\r\n                    var focusPreviousEditingCell = showEditorAlways && !forceUpdateRow && isUpdateInCellMode && this.hasEditData() && !this.isEditCell(options.rowIndex, options.columnIndex);\r\n                    if (focusPreviousEditingCell) {\r\n                        this._focusEditingCell();\r\n                        this._updateEditRow(options.row, true, isCustomSetCellValue);\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _applyChangeCore: function(options, forceUpdateRow) {\r\n                    var showEditorAlways = options.column.showEditorAlways;\r\n                    var isUpdateInCellMode = this.isCellEditMode() && options.row && !options.row.isNewRow;\r\n                    if (showEditorAlways && !forceUpdateRow) {\r\n                        if (isUpdateInCellMode) {\r\n                            this._setEditRowKey(options.row.key, true);\r\n                            this._setEditColumnNameByIndex(options.columnIndex, true);\r\n                            return this.saveEditData()\r\n                        } else if (this.isBatchEditMode()) {\r\n                            forceUpdateRow = this._needUpdateRow(options.column);\r\n                            return this.callBase(options, forceUpdateRow)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _processDataItemCore: function(item, _ref3) {\r\n                    var {\r\n                        data: data,\r\n                        type: type\r\n                    } = _ref3;\r\n                    if (this.isBatchEditMode() && type === DATA_EDIT_DATA_REMOVE_TYPE) {\r\n                        item.data = createObjectWithChanges(item.data, data)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _processRemoveCore: function(changes, editIndex, processIfBatch) {\r\n                    if (this.isBatchEditMode() && !processIfBatch) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _processRemoveIfError: function() {\r\n                    if (this.isBatchEditMode()) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _beforeFocusElementInRow: function(rowIndex) {\r\n                    this.callBase.apply(this, arguments);\r\n                    var editRowIndex = rowIndex >= 0 ? rowIndex : 0;\r\n                    var columnIndex = this.getFirstEditableColumnIndex();\r\n                    columnIndex >= 0 && this.editCell(editRowIndex, columnIndex)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _createTable: function() {\r\n                    var $table = this.callBase.apply(this, arguments);\r\n                    var editingController = this._editingController;\r\n                    if (editingController.isCellOrBatchEditMode() && this.option(\"editing.allowUpdating\")) {\r\n                        eventsEngine.on($table, addNamespace(holdEvent.name, \"dxDataGridRowsView\"), \"td:not(.\" + EDITOR_CELL_CLASS + \")\", this.createAction(() => {\r\n                            if (editingController.isEditing()) {\r\n                                editingController.closeEditCell()\r\n                            }\r\n                        }))\r\n                    }\r\n                    return $table\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var editingController = this._editingController;\r\n                        var isRowRemoved = !!row.removed;\r\n                        if (editingController.isBatchEditMode()) {\r\n                            isRowRemoved && $row.addClass(ROW_REMOVED)\r\n                        }\r\n                    }\r\n                    return $row\r\n                }\r\n            },\r\n            headerPanel: {\r\n                isVisible: function() {\r\n                    var editingOptions = this.getController(\"editing\").option(\"editing\");\r\n                    return this.callBase() || editingOptions && (editingOptions.allowUpdating || editingOptions.allowDeleting) && editingOptions.mode === EDIT_MODE_BATCH\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editing_cell_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport editingCellBasedModule from \"../grid_core/ui.grid_core.editing_cell_based\";\r\ngridCore.registerModule(\"editingCellBased\", editingCellBasedModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.validating.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getWidth,\r\n    getOuterHeight,\r\n    setHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    createObjectWithChanges\r\n} from \"../../data/array_utils\";\r\nimport {\r\n    deferUpdate,\r\n    equalByValue,\r\n    getKeyHash\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined,\r\n    isEmptyObject,\r\n    isObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    focused\r\n} from \"../widget/selectors\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport Button from \"../button\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport ValidationEngine from \"../validation_engine\";\r\nimport Validator from \"../validator\";\r\nimport Overlay from \"../overlay/ui.overlay\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    Deferred,\r\n    when,\r\n    fromPromise\r\n} from \"../../core/utils/deferred\";\r\nimport LoadIndicator from \"../load_indicator\";\r\nimport {\r\n    encodeHtml\r\n} from \"../../core/utils/string\";\r\nimport browser from \"../../core/utils/browser\";\r\nvar INVALIDATE_CLASS = \"invalid\";\r\nvar REVERT_TOOLTIP_CLASS = \"revert-tooltip\";\r\nvar ROWS_VIEW_CLASS = \"rowsview\";\r\nvar INVALID_MESSAGE_CLASS = \"dx-invalid-message\";\r\nvar WIDGET_INVALID_MESSAGE_CLASS = \"invalid-message\";\r\nvar INVALID_MESSAGE_ALWAYS_CLASS = \"dx-invalid-message-always\";\r\nvar REVERT_BUTTON_CLASS = \"dx-revert-button\";\r\nvar VALIDATOR_CLASS = \"validator\";\r\nvar PENDING_INDICATOR_CLASS = \"dx-pending-indicator\";\r\nvar VALIDATION_PENDING_CLASS = \"dx-validation-pending\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar INSERT_INDEX = \"__DX_INSERT_INDEX__\";\r\nvar PADDING_BETWEEN_TOOLTIPS = 2;\r\nvar EDIT_MODE_ROW = \"row\";\r\nvar EDIT_MODE_FORM = \"form\";\r\nvar EDIT_MODE_BATCH = \"batch\";\r\nvar EDIT_MODE_CELL = \"cell\";\r\nvar EDIT_MODE_POPUP = \"popup\";\r\nvar GROUP_CELL_CLASS = \"dx-group-cell\";\r\nvar FORM_BASED_MODES = [EDIT_MODE_POPUP, EDIT_MODE_FORM];\r\nvar COMMAND_TRANSPARENT = \"transparent\";\r\nvar VALIDATION_STATUS = {\r\n    valid: \"valid\",\r\n    invalid: \"invalid\",\r\n    pending: \"pending\"\r\n};\r\nvar EDIT_DATA_INSERT_TYPE = \"insert\";\r\nvar EDIT_DATA_REMOVE_TYPE = \"remove\";\r\nvar VALIDATION_CANCELLED = \"cancel\";\r\nvar validationResultIsValid = function(result) {\r\n    return isDefined(result) && result !== VALIDATION_CANCELLED\r\n};\r\nvar cellValueShouldBeValidated = function(value, rowOptions) {\r\n    return void 0 !== value || void 0 === value && rowOptions && !rowOptions.isNewRow\r\n};\r\nvar ValidatingController = modules.Controller.inherit({\r\n    init: function() {\r\n        this._editingController = this.getController(\"editing\");\r\n        this.createAction(\"onRowValidating\");\r\n        if (!this._validationState) {\r\n            this.initValidationState()\r\n        }\r\n    },\r\n    initValidationState() {\r\n        this._validationState = [];\r\n        this._validationStateCache = {}\r\n    },\r\n    _rowIsValidated: function(change) {\r\n        var validationData = this._getValidationData(null === change || void 0 === change ? void 0 : change.key);\r\n        return !!validationData && !!validationData.validated\r\n    },\r\n    _getValidationData: function(key, create) {\r\n        var keyHash = getKeyHash(key);\r\n        var isObjectKeyHash = isObject(keyHash);\r\n        var validationData;\r\n        if (isObjectKeyHash) {\r\n            validationData = this._validationState.filter(data => equalByValue(data.key, key))[0]\r\n        } else {\r\n            validationData = this._validationStateCache[keyHash]\r\n        }\r\n        if (!validationData && create) {\r\n            validationData = {\r\n                key: key,\r\n                isValid: true\r\n            };\r\n            this._validationState.push(validationData);\r\n            if (!isObjectKeyHash) {\r\n                this._validationStateCache[keyHash] = validationData\r\n            }\r\n        }\r\n        return validationData\r\n    },\r\n    _getBrokenRules: function(validationData, validationResults) {\r\n        var brokenRules;\r\n        if (validationResults) {\r\n            brokenRules = validationResults.brokenRules || validationResults.brokenRule && [validationResults.brokenRule]\r\n        } else {\r\n            brokenRules = validationData.brokenRules || []\r\n        }\r\n        return brokenRules\r\n    },\r\n    _rowValidating: function(validationData, validationResults) {\r\n        var deferred = new Deferred;\r\n        var change = this._editingController.getChangeByKey(null === validationData || void 0 === validationData ? void 0 : validationData.key);\r\n        var brokenRules = this._getBrokenRules(validationData, validationResults);\r\n        var isValid = validationResults ? validationResults.isValid : validationData.isValid;\r\n        var parameters = {\r\n            brokenRules: brokenRules,\r\n            isValid: isValid,\r\n            key: change.key,\r\n            newData: change.data,\r\n            oldData: this._editingController._getOldData(change.key),\r\n            promise: null,\r\n            errorText: this.getHiddenValidatorsErrorText(brokenRules)\r\n        };\r\n        this.executeAction(\"onRowValidating\", parameters);\r\n        when(fromPromise(parameters.promise)).always((function() {\r\n            validationData.isValid = parameters.isValid;\r\n            validationData.errorText = parameters.errorText;\r\n            deferred.resolve(parameters)\r\n        }));\r\n        return deferred.promise()\r\n    },\r\n    getHiddenValidatorsErrorText: function(brokenRules) {\r\n        var brokenRulesMessages = [];\r\n        each(brokenRules, (function(_, brokenRule) {\r\n            var column = brokenRule.column;\r\n            var isGroupExpandColumn = column && void 0 !== column.groupIndex && !column.showWhenGrouped;\r\n            var isVisibleColumn = column && column.visible;\r\n            if (!brokenRule.validator.$element().parent().length && (!isVisibleColumn || isGroupExpandColumn)) {\r\n                brokenRulesMessages.push(brokenRule.message)\r\n            }\r\n        }));\r\n        return brokenRulesMessages.join(\", \")\r\n    },\r\n    validate: function(isFull) {\r\n        var isValid = true;\r\n        var editingController = this._editingController;\r\n        var deferred = new Deferred;\r\n        var completeList = [];\r\n        var editMode = editingController.getEditMode();\r\n        isFull = isFull || editMode === EDIT_MODE_ROW;\r\n        if (this._isValidationInProgress) {\r\n            return deferred.resolve(false).promise()\r\n        }\r\n        this._isValidationInProgress = true;\r\n        if (isFull) {\r\n            editingController.addDeferred(deferred);\r\n            var changes = editingController.getChanges();\r\n            each(changes, (index, _ref) => {\r\n                var {\r\n                    type: type,\r\n                    key: key\r\n                } = _ref;\r\n                if (\"remove\" !== type) {\r\n                    var validationData = this._getValidationData(key, true);\r\n                    var validationResult = this.validateGroup(validationData);\r\n                    completeList.push(validationResult);\r\n                    validationResult.done(validationResult => {\r\n                        validationData.validated = true;\r\n                        isValid = isValid && validationResult.isValid\r\n                    })\r\n                }\r\n            })\r\n        } else if (this._currentCellValidator) {\r\n            var validationResult = this.validateGroup(this._currentCellValidator._findGroup());\r\n            completeList.push(validationResult);\r\n            validationResult.done(validationResult => {\r\n                isValid = validationResult.isValid\r\n            })\r\n        }\r\n        when(...completeList).done(() => {\r\n            this._isValidationInProgress = false;\r\n            deferred.resolve(isValid)\r\n        });\r\n        return deferred.promise()\r\n    },\r\n    validateGroup: function(validationData) {\r\n        var _validationResult;\r\n        var result = new Deferred;\r\n        var validateGroup = validationData && ValidationEngine.getGroupConfig(validationData);\r\n        var validationResult;\r\n        if (null !== validateGroup && void 0 !== validateGroup && validateGroup.validators.length) {\r\n            this.resetRowValidationResults(validationData);\r\n            validationResult = ValidationEngine.validateGroup(validationData)\r\n        }\r\n        when((null === (_validationResult = validationResult) || void 0 === _validationResult ? void 0 : _validationResult.complete) || validationResult).done(validationResult => {\r\n            when(this._rowValidating(validationData, validationResult)).done(result.resolve)\r\n        });\r\n        return result.promise()\r\n    },\r\n    isRowDataModified: change => !isEmptyObject(change.data),\r\n    updateValidationState: function(change) {\r\n        var editMode = this._editingController.getEditMode();\r\n        var key = change.key;\r\n        var validationData = this._getValidationData(key, true);\r\n        if (-1 === FORM_BASED_MODES.indexOf(editMode)) {\r\n            if (change.type === EDIT_DATA_INSERT_TYPE && !this.isRowDataModified(change)) {\r\n                validationData.isValid = true;\r\n                return\r\n            }\r\n            this.setDisableApplyValidationResults(true);\r\n            var groupConfig = ValidationEngine.getGroupConfig(validationData);\r\n            if (groupConfig) {\r\n                var validationResult = ValidationEngine.validateGroup(validationData);\r\n                when(validationResult.complete || validationResult).done(validationResult => {\r\n                    validationData.isValid = validationResult.isValid;\r\n                    validationData.brokenRules = validationResult.brokenRules\r\n                })\r\n            } else if (!validationData.brokenRules || !validationData.brokenRules.length) {\r\n                validationData.isValid = true\r\n            }\r\n            this.setDisableApplyValidationResults(false)\r\n        } else {\r\n            validationData.isValid = true\r\n        }\r\n    },\r\n    setValidator: function(validator) {\r\n        this._currentCellValidator = validator\r\n    },\r\n    renderCellPendingIndicator: function($container) {\r\n        var $indicator = $container.find(\".\" + PENDING_INDICATOR_CLASS);\r\n        if (!$indicator.length) {\r\n            var $indicatorContainer = $container;\r\n            $indicator = $(\"<div>\").appendTo($indicatorContainer).addClass(PENDING_INDICATOR_CLASS);\r\n            this._createComponent($indicator, LoadIndicator);\r\n            $container.addClass(VALIDATION_PENDING_CLASS)\r\n        }\r\n    },\r\n    disposeCellPendingIndicator: function($container) {\r\n        var $indicator = $container.find(\".\" + PENDING_INDICATOR_CLASS);\r\n        if ($indicator.length) {\r\n            var indicator = LoadIndicator.getInstance($indicator);\r\n            if (indicator) {\r\n                indicator.dispose();\r\n                indicator.$element().remove()\r\n            }\r\n            $container.removeClass(VALIDATION_PENDING_CLASS)\r\n        }\r\n    },\r\n    validationStatusChanged: function(result) {\r\n        var validator = result.validator;\r\n        var validationGroup = validator.option(\"validationGroup\");\r\n        var column = validator.option(\"dataGetter\")().column;\r\n        this.updateCellValidationResult({\r\n            rowKey: validationGroup.key,\r\n            columnIndex: column.index,\r\n            validationResult: result\r\n        })\r\n    },\r\n    validatorInitialized: function(arg) {\r\n        arg.component.on(\"validating\", this.validationStatusChanged.bind(this));\r\n        arg.component.on(\"validated\", this.validationStatusChanged.bind(this))\r\n    },\r\n    validatorDisposing: function(arg) {\r\n        var validator = arg.component;\r\n        var validationGroup = validator.option(\"validationGroup\");\r\n        var column = validator.option(\"dataGetter\")().column;\r\n        var result = this.getCellValidationResult({\r\n            rowKey: null === validationGroup || void 0 === validationGroup ? void 0 : validationGroup.key,\r\n            columnIndex: column.index\r\n        });\r\n        if (validationResultIsValid(result) && result.status === VALIDATION_STATUS.pending) {\r\n            this.cancelCellValidationResult({\r\n                change: validationGroup,\r\n                columnIndex: column.index\r\n            })\r\n        }\r\n    },\r\n    applyValidationResult: function($container, result) {\r\n        var validator = result.validator;\r\n        var validationGroup = validator.option(\"validationGroup\");\r\n        var column = validator.option(\"dataGetter\")().column;\r\n        result.brokenRules && result.brokenRules.forEach(rule => {\r\n            rule.columnIndex = column.index;\r\n            rule.column = column\r\n        });\r\n        if ($container) {\r\n            var validationResult = this.getCellValidationResult({\r\n                rowKey: validationGroup.key,\r\n                columnIndex: column.index\r\n            });\r\n            var requestIsDisabled = validationResultIsValid(validationResult) && validationResult.disabledPendingId === result.id;\r\n            if (this._disableApplyValidationResults || requestIsDisabled) {\r\n                return\r\n            }\r\n            if (result.status === VALIDATION_STATUS.invalid) {\r\n                var $focus = $container.find(\":focus\");\r\n                if (!focused($focus)) {\r\n                    eventsEngine.trigger($focus, \"focus\");\r\n                    eventsEngine.trigger($focus, pointerEvents.down)\r\n                }\r\n            }\r\n            var editor = !column.editCellTemplate && this.getController(\"editorFactory\").getEditorInstance($container);\r\n            if (result.status === VALIDATION_STATUS.pending) {\r\n                if (editor) {\r\n                    editor.option(\"validationStatus\", VALIDATION_STATUS.pending)\r\n                } else {\r\n                    this.renderCellPendingIndicator($container)\r\n                }\r\n            } else if (editor) {\r\n                editor.option(\"validationStatus\", VALIDATION_STATUS.valid)\r\n            } else {\r\n                this.disposeCellPendingIndicator($container)\r\n            }\r\n            $container.toggleClass(this.addWidgetPrefix(INVALIDATE_CLASS), result.status === VALIDATION_STATUS.invalid)\r\n        }\r\n    },\r\n    _syncInternalEditingData: function(parameters) {\r\n        var _parameters$row;\r\n        var editingController = this._editingController;\r\n        var change = editingController.getChangeByKey(parameters.key);\r\n        var oldDataFromState = editingController._getOldData(parameters.key);\r\n        var oldData = null === (_parameters$row = parameters.row) || void 0 === _parameters$row ? void 0 : _parameters$row.oldData;\r\n        if (change && oldData && !oldDataFromState) {\r\n            editingController._addInternalData({\r\n                key: parameters.key,\r\n                oldData: oldData\r\n            })\r\n        }\r\n    },\r\n    createValidator: function(parameters, $container) {\r\n        var editingController = this._editingController;\r\n        var column = parameters.column;\r\n        var showEditorAlways = column.showEditorAlways;\r\n        if (isDefined(column.command) || !column.validationRules || !Array.isArray(column.validationRules) || !column.validationRules.length) {\r\n            return\r\n        }\r\n        var editIndex = editingController.getIndexByKey(parameters.key, editingController.getChanges());\r\n        var needCreateValidator = editIndex > -1;\r\n        if (!needCreateValidator) {\r\n            if (!showEditorAlways) {\r\n                var columnsController = this.getController(\"columns\");\r\n                var visibleColumns = (null === columnsController || void 0 === columnsController ? void 0 : columnsController.getVisibleColumns()) || [];\r\n                showEditorAlways = visibleColumns.some((function(column) {\r\n                    return column.showEditorAlways\r\n                }))\r\n            }\r\n            var isEditRow = equalByValue(this.option(\"editing.editRowKey\"), parameters.key);\r\n            var isCellOrBatchEditingAllowed = editingController.isCellOrBatchEditMode() && editingController.allowUpdating({\r\n                row: parameters.row\r\n            });\r\n            needCreateValidator = isEditRow || isCellOrBatchEditingAllowed && showEditorAlways;\r\n            if (isCellOrBatchEditingAllowed && showEditorAlways) {\r\n                var _parameters$row$oldDa, _parameters$row2;\r\n                editingController._addInternalData({\r\n                    key: parameters.key,\r\n                    oldData: null !== (_parameters$row$oldDa = null === (_parameters$row2 = parameters.row) || void 0 === _parameters$row2 ? void 0 : _parameters$row2.oldData) && void 0 !== _parameters$row$oldDa ? _parameters$row$oldDa : parameters.data\r\n                })\r\n            }\r\n        }\r\n        if (needCreateValidator) {\r\n            if ($container && !$container.length) {\r\n                errors.log(\"E1050\");\r\n                return\r\n            }\r\n            this._syncInternalEditingData(parameters);\r\n            var validationData = this._getValidationData(parameters.key, true);\r\n            var getValue = () => {\r\n                var change = editingController.getChangeByKey(null === validationData || void 0 === validationData ? void 0 : validationData.key);\r\n                var value = column.calculateCellValue((null === change || void 0 === change ? void 0 : change.data) || {});\r\n                return void 0 !== value ? value : parameters.value\r\n            };\r\n            var useDefaultValidator = $container && $container.hasClass(\"dx-widget\");\r\n            $container && $container.addClass(this.addWidgetPrefix(VALIDATOR_CLASS));\r\n            var validator = new Validator($container || $(\"<div>\"), {\r\n                name: column.caption,\r\n                validationRules: extend(true, [], column.validationRules),\r\n                validationGroup: validationData,\r\n                adapter: useDefaultValidator ? null : {\r\n                    getValue: getValue,\r\n                    applyValidationResults: result => {\r\n                        this.applyValidationResult($container, result)\r\n                    }\r\n                },\r\n                dataGetter: function() {\r\n                    var key = null === validationData || void 0 === validationData ? void 0 : validationData.key;\r\n                    var change = editingController.getChangeByKey(key);\r\n                    var oldData = editingController._getOldData(key);\r\n                    return {\r\n                        data: createObjectWithChanges(oldData, null === change || void 0 === change ? void 0 : change.data),\r\n                        column: column\r\n                    }\r\n                },\r\n                onInitialized: this.validatorInitialized.bind(this),\r\n                onDisposing: this.validatorDisposing.bind(this)\r\n            });\r\n            if (useDefaultValidator) {\r\n                var adapter = validator.option(\"adapter\");\r\n                if (adapter) {\r\n                    adapter.getValue = getValue;\r\n                    adapter.validationRequestsCallbacks = []\r\n                }\r\n            }\r\n            return validator\r\n        }\r\n    },\r\n    setDisableApplyValidationResults: function(flag) {\r\n        this._disableApplyValidationResults = flag\r\n    },\r\n    getDisableApplyValidationResults: function() {\r\n        return this._disableApplyValidationResults\r\n    },\r\n    isCurrentValidatorProcessing: function(_ref2) {\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        } = _ref2;\r\n        return this._currentCellValidator && equalByValue(this._currentCellValidator.option(\"validationGroup\").key, rowKey) && this._currentCellValidator.option(\"dataGetter\")().column.index === columnIndex\r\n    },\r\n    validateCell: function(validator) {\r\n        var cellParams = {\r\n            rowKey: validator.option(\"validationGroup\").key,\r\n            columnIndex: validator.option(\"dataGetter\")().column.index\r\n        };\r\n        var validationResult = this.getCellValidationResult(cellParams);\r\n        var stateRestored = validationResultIsValid(validationResult);\r\n        if (!stateRestored) {\r\n            validationResult = validator.validate()\r\n        }\r\n        var deferred = new Deferred;\r\n        var adapter = validator.option(\"adapter\");\r\n        if (stateRestored && validationResult.status === VALIDATION_STATUS.pending) {\r\n            this.updateCellValidationResult(cellParams);\r\n            adapter.applyValidationResults(validationResult)\r\n        }\r\n        when(validationResult.complete || validationResult).done(validationResult => {\r\n            stateRestored && adapter.applyValidationResults(validationResult);\r\n            deferred.resolve(validationResult)\r\n        });\r\n        return deferred.promise()\r\n    },\r\n    updateCellValidationResult: function(_ref3) {\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex,\r\n            validationResult: validationResult\r\n        } = _ref3;\r\n        var validationData = this._getValidationData(rowKey);\r\n        if (!validationData) {\r\n            return\r\n        }\r\n        if (!validationData.validationResults) {\r\n            validationData.validationResults = {}\r\n        }\r\n        var result;\r\n        if (validationResult) {\r\n            result = extend({}, validationResult);\r\n            validationData.validationResults[columnIndex] = result;\r\n            if (validationResult.status === VALIDATION_STATUS.pending) {\r\n                if (this._editingController.getEditMode() === EDIT_MODE_CELL) {\r\n                    result.deferred = new Deferred;\r\n                    result.complete.always(() => {\r\n                        result.deferred.resolve()\r\n                    });\r\n                    this._editingController.addDeferred(result.deferred)\r\n                }\r\n                if (this._disableApplyValidationResults) {\r\n                    result.disabledPendingId = validationResult.id;\r\n                    return\r\n                }\r\n            }\r\n        } else {\r\n            result = validationData.validationResults[columnIndex]\r\n        }\r\n        if (result && result.disabledPendingId) {\r\n            delete result.disabledPendingId\r\n        }\r\n    },\r\n    getCellValidationResult: function(_ref4) {\r\n        var _validationData$valid;\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        } = _ref4;\r\n        var validationData = this._getValidationData(rowKey, true);\r\n        return null === validationData || void 0 === validationData ? void 0 : null === (_validationData$valid = validationData.validationResults) || void 0 === _validationData$valid ? void 0 : _validationData$valid[columnIndex]\r\n    },\r\n    removeCellValidationResult: function(_ref5) {\r\n        var {\r\n            change: change,\r\n            columnIndex: columnIndex\r\n        } = _ref5;\r\n        var validationData = this._getValidationData(null === change || void 0 === change ? void 0 : change.key);\r\n        if (validationData && validationData.validationResults) {\r\n            this.cancelCellValidationResult({\r\n                change: change,\r\n                columnIndex: columnIndex\r\n            });\r\n            delete validationData.validationResults[columnIndex]\r\n        }\r\n    },\r\n    cancelCellValidationResult: function(_ref6) {\r\n        var {\r\n            change: change,\r\n            columnIndex: columnIndex\r\n        } = _ref6;\r\n        var validationData = this._getValidationData(change.key);\r\n        if (change && validationData.validationResults) {\r\n            var result = validationData.validationResults[columnIndex];\r\n            if (result) {\r\n                result.deferred && result.deferred.reject(VALIDATION_CANCELLED);\r\n                validationData.validationResults[columnIndex] = VALIDATION_CANCELLED\r\n            }\r\n        }\r\n    },\r\n    resetRowValidationResults: function(validationData) {\r\n        if (validationData) {\r\n            validationData.validationResults && delete validationData.validationResults;\r\n            delete validationData.validated\r\n        }\r\n    },\r\n    isInvalidCell: function(_ref7) {\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        } = _ref7;\r\n        var result = this.getCellValidationResult({\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        });\r\n        return validationResultIsValid(result) && result.status === VALIDATION_STATUS.invalid\r\n    },\r\n    getCellValidator: function(_ref8) {\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        } = _ref8;\r\n        var validationData = this._getValidationData(rowKey);\r\n        var groupConfig = validationData && ValidationEngine.getGroupConfig(validationData);\r\n        var validators = groupConfig && groupConfig.validators;\r\n        return validators && validators.filter(v => {\r\n            var column = v.option(\"dataGetter\")().column;\r\n            return column ? column.index === columnIndex : false\r\n        })[0]\r\n    },\r\n    setCellValidationStatus: function(cellOptions) {\r\n        var validationResult = this.getCellValidationResult({\r\n            rowKey: cellOptions.key,\r\n            columnIndex: cellOptions.column.index\r\n        });\r\n        if (isDefined(validationResult)) {\r\n            cellOptions.validationStatus = validationResult !== VALIDATION_CANCELLED ? validationResult.status : VALIDATION_CANCELLED\r\n        } else {\r\n            delete cellOptions.validationStatus\r\n        }\r\n    }\r\n});\r\nexport var validatingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            editing: {\r\n                texts: {\r\n                    validationCancelChanges: messageLocalization.format(\"dxDataGrid-validationCancelChanges\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        validating: ValidatingController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                _addChange: function(changeParams) {\r\n                    var change = this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    if (change && changeParams.type !== EDIT_DATA_REMOVE_TYPE) {\r\n                        validatingController.updateValidationState(change)\r\n                    }\r\n                    return change\r\n                },\r\n                _handleChangesChange: function(args) {\r\n                    this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    args.value.forEach(change => {\r\n                        if (void 0 === validatingController._getValidationData(change.key)) {\r\n                            validatingController.updateValidationState(change)\r\n                        }\r\n                    })\r\n                },\r\n                _updateRowAndPageIndices: function() {\r\n                    var that = this;\r\n                    var startInsertIndex = that.getView(\"rowsView\").getTopVisibleItemIndex();\r\n                    var rowIndex = startInsertIndex;\r\n                    each(that.getChanges(), (_, _ref9) => {\r\n                        var {\r\n                            key: key,\r\n                            type: type\r\n                        } = _ref9;\r\n                        var validationData = this.getController(\"validating\")._getValidationData(key);\r\n                        if (validationData && !validationData.isValid && validationData.pageIndex !== that._pageIndex) {\r\n                            validationData.pageIndex = that._pageIndex;\r\n                            if (type === EDIT_DATA_INSERT_TYPE) {\r\n                                validationData.rowIndex = startInsertIndex\r\n                            } else {\r\n                                validationData.rowIndex = rowIndex\r\n                            }\r\n                            rowIndex++\r\n                        }\r\n                    })\r\n                },\r\n                _getValidationGroupsInForm: function(detailOptions) {\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var validationData = validatingController._getValidationData(detailOptions.key, true);\r\n                    return {\r\n                        validationGroup: validationData\r\n                    }\r\n                },\r\n                _validateEditFormAfterUpdate: function(row, isCustomSetCellValue) {\r\n                    if (isCustomSetCellValue && this._editForm && !row.isNewRow) {\r\n                        this._editForm.validate()\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _prepareEditCell: function(params) {\r\n                    var isNotCanceled = this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    if (isNotCanceled && params.column.showEditorAlways) {\r\n                        validatingController.updateValidationState({\r\n                            key: params.key\r\n                        })\r\n                    }\r\n                    return isNotCanceled\r\n                },\r\n                processItems: function(items, changeType) {\r\n                    var changes = this.getChanges();\r\n                    var dataController = this.getController(\"data\");\r\n                    var validatingController = this.getController(\"validating\");\r\n                    items = this.callBase(items, changeType);\r\n                    var itemsCount = items.length;\r\n                    var addInValidItem = function(change, validationData) {\r\n                        var data = {\r\n                            key: change.key\r\n                        };\r\n                        var index = function(change, items) {\r\n                            var index = -1;\r\n                            var isInsert = change.type === EDIT_DATA_INSERT_TYPE;\r\n                            var key = change.key;\r\n                            each(items, (function(i, item) {\r\n                                if (equalByValue(key, isInsert ? item.key : dataController.keyOf(item))) {\r\n                                    index = i;\r\n                                    return false\r\n                                }\r\n                            }));\r\n                            return index\r\n                        }(change, items);\r\n                        if (index >= 0) {\r\n                            return\r\n                        }\r\n                        validationData.rowIndex = validationData.rowIndex > itemsCount ? validationData.rowIndex % itemsCount : validationData.rowIndex;\r\n                        var rowIndex = validationData.rowIndex;\r\n                        data[INSERT_INDEX] = 1;\r\n                        items.splice(rowIndex, 0, data)\r\n                    };\r\n                    if (this.getEditMode() === EDIT_MODE_BATCH && \"prepend\" !== changeType && \"append\" !== changeType) {\r\n                        changes.forEach(change => {\r\n                            var key = change.key;\r\n                            var validationData = validatingController._getValidationData(key);\r\n                            if (validationData && change.type && validationData.pageIndex === this._pageIndex && (null === change || void 0 === change ? void 0 : change.pageIndex) !== this._pageIndex) {\r\n                                addInValidItem(change, validationData)\r\n                            }\r\n                        })\r\n                    }\r\n                    return items\r\n                },\r\n                processDataItem: function(item) {\r\n                    var isInserted = item.data[INSERT_INDEX];\r\n                    var key = isInserted ? item.data.key : item.key;\r\n                    var editMode = this.getEditMode();\r\n                    if (editMode === EDIT_MODE_BATCH && isInserted && key) {\r\n                        var changes = this.getChanges();\r\n                        var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n                        if (editIndex >= 0) {\r\n                            var change = changes[editIndex];\r\n                            if (change.type !== EDIT_DATA_INSERT_TYPE) {\r\n                                var oldData = this._getOldData(change.key);\r\n                                item.data = extend(true, {}, oldData, change.data);\r\n                                item.key = key\r\n                            }\r\n                        }\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _createInvisibleColumnValidators: function(changes) {\r\n                    var that = this;\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var columnsController = this.getController(\"columns\");\r\n                    var columns = columnsController.getColumns();\r\n                    var invisibleColumns = columnsController.getInvisibleColumns().filter(column => !column.isBand);\r\n                    var groupColumns = columnsController.getGroupColumns().filter(column => !column.showWhenGrouped && -1 === invisibleColumns.indexOf(column));\r\n                    var invisibleColumnValidators = [];\r\n                    var isCellVisible = (column, rowKey) => this._dataController.getRowIndexByKey(rowKey) >= 0 && invisibleColumns.indexOf(column) < 0;\r\n                    invisibleColumns.push(...groupColumns);\r\n                    if (-1 === FORM_BASED_MODES.indexOf(this.getEditMode())) {\r\n                        each(columns, (function(_, column) {\r\n                            changes.forEach((function(change) {\r\n                                var data;\r\n                                if (isCellVisible(column, change.key)) {\r\n                                    return\r\n                                }\r\n                                if (change.type === EDIT_DATA_INSERT_TYPE) {\r\n                                    data = change.data\r\n                                } else if (\"update\" === change.type) {\r\n                                    var oldData = that._getOldData(change.key);\r\n                                    data = createObjectWithChanges(oldData, change.data)\r\n                                }\r\n                                if (data) {\r\n                                    var validator = validatingController.createValidator({\r\n                                        column: column,\r\n                                        key: change.key,\r\n                                        value: column.calculateCellValue(data)\r\n                                    });\r\n                                    if (validator) {\r\n                                        invisibleColumnValidators.push(validator)\r\n                                    }\r\n                                }\r\n                            }))\r\n                        }))\r\n                    }\r\n                    return function() {\r\n                        invisibleColumnValidators.forEach((function(validator) {\r\n                            validator.dispose()\r\n                        }))\r\n                    }\r\n                },\r\n                _beforeSaveEditData: function(change, editIndex) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var validationData = validatingController._getValidationData(null === change || void 0 === change ? void 0 : change.key);\r\n                    if (change) {\r\n                        var isValid = \"remove\" === change.type || validationData.isValid;\r\n                        result = result || !isValid\r\n                    } else {\r\n                        var disposeValidators = this._createInvisibleColumnValidators(this.getChanges());\r\n                        result = new Deferred;\r\n                        this.executeOperation(result, () => {\r\n                            validatingController.validate(true).done(isFullValid => {\r\n                                disposeValidators();\r\n                                this._updateRowAndPageIndices();\r\n                                switch (this.getEditMode()) {\r\n                                    case EDIT_MODE_CELL:\r\n                                        if (!isFullValid) {\r\n                                            this._focusEditingCell()\r\n                                        }\r\n                                        break;\r\n                                    case EDIT_MODE_BATCH:\r\n                                        if (!isFullValid) {\r\n                                            this._resetEditRowKey();\r\n                                            this._resetEditColumnName();\r\n                                            this.getController(\"data\").updateItems()\r\n                                        }\r\n                                }\r\n                                result.resolve(!isFullValid)\r\n                            })\r\n                        })\r\n                    }\r\n                    return result.promise ? result.promise() : result\r\n                },\r\n                _beforeEditCell: function(rowIndex, columnIndex, item) {\r\n                    var result = this.callBase(rowIndex, columnIndex, item);\r\n                    if (this.getEditMode() === EDIT_MODE_CELL) {\r\n                        var $cell = this._rowsView._getCellElement(rowIndex, columnIndex);\r\n                        var validator = $cell && $cell.data(\"dxValidator\");\r\n                        var rowOptions = $cell && $cell.closest(\".dx-row\").data(\"options\");\r\n                        var value = validator && validator.option(\"adapter\").getValue();\r\n                        if (validator && cellValueShouldBeValidated(value, rowOptions)) {\r\n                            var validatingController = this.getController(\"validating\");\r\n                            var deferred = new Deferred;\r\n                            when(validatingController.validateCell(validator), result).done((validationResult, result) => {\r\n                                deferred.resolve(validationResult.status === VALIDATION_STATUS.valid && result)\r\n                            });\r\n                            return deferred.promise()\r\n                        } else if (!validator) {\r\n                            return result\r\n                        }\r\n                    }\r\n                },\r\n                _afterSaveEditData: function(cancel) {\r\n                    var $firstErrorRow;\r\n                    var isCellEditMode = this.getEditMode() === EDIT_MODE_CELL;\r\n                    each(this.getChanges(), (_, change) => {\r\n                        var $errorRow = this._showErrorRow(change);\r\n                        $firstErrorRow = $firstErrorRow || $errorRow\r\n                    });\r\n                    if ($firstErrorRow) {\r\n                        var scrollable = this._rowsView.getScrollable();\r\n                        if (scrollable) {\r\n                            scrollable.update();\r\n                            scrollable.scrollToElement($firstErrorRow)\r\n                        }\r\n                    }\r\n                    if (cancel && isCellEditMode && this._needUpdateRow()) {\r\n                        var editRowIndex = this.getEditRowIndex();\r\n                        this._dataController.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: [editRowIndex]\r\n                        });\r\n                        this._focusEditingCell()\r\n                    } else if (!cancel) {\r\n                        var shouldResetValidationState = true;\r\n                        if (isCellEditMode) {\r\n                            var columns = this.getController(\"columns\").getColumns();\r\n                            var columnsWithValidatingEditors = columns.filter(col => {\r\n                                var _col$validationRules;\r\n                                return col.showEditorAlways && (null === (_col$validationRules = col.validationRules) || void 0 === _col$validationRules ? void 0 : _col$validationRules.length) > 0\r\n                            }).length > 0;\r\n                            shouldResetValidationState = !columnsWithValidatingEditors\r\n                        }\r\n                        if (shouldResetValidationState) {\r\n                            this.getController(\"validating\").initValidationState()\r\n                        }\r\n                    }\r\n                },\r\n                _handleDataChanged: function(args) {\r\n                    var validationState = this.getController(\"validating\")._validationState;\r\n                    if (\"standard\" === this.option(\"scrolling.mode\")) {\r\n                        this.resetRowAndPageIndices()\r\n                    }\r\n                    if (\"prepend\" === args.changeType) {\r\n                        each(validationState, (function(_, validationData) {\r\n                            validationData.rowIndex += args.items.length\r\n                        }))\r\n                    }\r\n                    this.callBase(args)\r\n                },\r\n                resetRowAndPageIndices: function() {\r\n                    var validationState = this.getController(\"validating\")._validationState;\r\n                    each(validationState, (_, validationData) => {\r\n                        if (validationData.pageIndex !== this._pageIndex) {\r\n                            delete validationData.pageIndex;\r\n                            delete validationData.rowIndex\r\n                        }\r\n                    })\r\n                },\r\n                _beforeCancelEditData: function() {\r\n                    this.getController(\"validating\").initValidationState();\r\n                    this.callBase()\r\n                },\r\n                _showErrorRow: function(change) {\r\n                    var $popupContent;\r\n                    var errorHandling = this.getController(\"errorHandling\");\r\n                    var items = this.getController(\"data\").items();\r\n                    var rowIndex = this.getIndexByKey(change.key, items);\r\n                    var validationData = this.getController(\"validating\")._getValidationData(change.key);\r\n                    if (!(null !== validationData && void 0 !== validationData && validationData.isValid) && null !== validationData && void 0 !== validationData && validationData.errorText && rowIndex >= 0) {\r\n                        $popupContent = this.getPopupContent();\r\n                        return errorHandling && errorHandling.renderErrorRow(null === validationData || void 0 === validationData ? void 0 : validationData.errorText, rowIndex, $popupContent)\r\n                    }\r\n                },\r\n                updateFieldValue: function(e) {\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var deferred = new Deferred;\r\n                    validatingController.removeCellValidationResult({\r\n                        change: this.getChangeByKey(e.key),\r\n                        columnIndex: e.column.index\r\n                    });\r\n                    this.callBase.apply(this, arguments).done(() => {\r\n                        var currentValidator = validatingController.getCellValidator({\r\n                            rowKey: e.key,\r\n                            columnIndex: e.column.index\r\n                        });\r\n                        when(currentValidator && validatingController.validateCell(currentValidator)).done(validationResult => {\r\n                            this.getController(\"editorFactory\").refocus();\r\n                            deferred.resolve(validationResult)\r\n                        })\r\n                    });\r\n                    return deferred.promise()\r\n                },\r\n                highlightDataCell: function($cell, parameters) {\r\n                    this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    validatingController.setCellValidationStatus(parameters);\r\n                    var isEditableCell = !!parameters.setValue;\r\n                    var cellModified = this.isCellModified(parameters);\r\n                    var isValidated = isDefined(parameters.validationStatus);\r\n                    var needValidation = cellModified && parameters.column.setCellValue || isEditableCell && !cellModified && !(parameters.row.isNewRow || !isValidated);\r\n                    if (needValidation) {\r\n                        var validator = $cell.data(\"dxValidator\");\r\n                        if (validator) {\r\n                            when(this.getController(\"validating\").validateCell(validator)).done(() => {\r\n                                validatingController.setCellValidationStatus(parameters)\r\n                            })\r\n                        }\r\n                    }\r\n                },\r\n                getChangeByKey: function(key) {\r\n                    var changes = this.getChanges();\r\n                    return changes[gridCoreUtils.getIndexByKey(key, changes)]\r\n                },\r\n                isCellModified: function(parameters) {\r\n                    var cellModified = this.callBase(parameters);\r\n                    var change = this.getChangeByKey(parameters.key);\r\n                    var isCellInvalid = !!parameters.row && this.getController(\"validating\").isInvalidCell({\r\n                        rowKey: parameters.key,\r\n                        columnIndex: parameters.column.index\r\n                    });\r\n                    return cellModified || this.getController(\"validating\")._rowIsValidated(change) && isCellInvalid\r\n                }\r\n            },\r\n            editorFactory: {\r\n                _showRevertButton: function($container) {\r\n                    if (!$container || !$container.length) {\r\n                        return\r\n                    }\r\n                    var $tooltipElement = this._rowsView.element().find(\".\" + this.addWidgetPrefix(REVERT_TOOLTIP_CLASS));\r\n                    var $overlayContainer = $container.closest(\".\".concat(this.addWidgetPrefix(CONTENT_CLASS)));\r\n                    $tooltipElement && $tooltipElement.remove();\r\n                    $tooltipElement = $(\"<div>\").addClass(this.addWidgetPrefix(REVERT_TOOLTIP_CLASS)).appendTo($container);\r\n                    var tooltipOptions = {\r\n                        animation: null,\r\n                        visible: true,\r\n                        width: \"auto\",\r\n                        height: \"auto\",\r\n                        target: $container,\r\n                        shading: false,\r\n                        container: $overlayContainer,\r\n                        propagateOutsideClick: true,\r\n                        closeOnOutsideClick: false,\r\n                        copyRootClassesToWrapper: true,\r\n                        _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n                        contentTemplate: () => {\r\n                            var $buttonElement = $(\"<div>\").addClass(REVERT_BUTTON_CLASS);\r\n                            var buttonOptions = {\r\n                                icon: \"revert\",\r\n                                hint: this.option(\"editing.texts.validationCancelChanges\"),\r\n                                onClick: () => {\r\n                                    this._editingController.cancelEditData()\r\n                                }\r\n                            };\r\n                            return new Button($buttonElement, buttonOptions).$element()\r\n                        },\r\n                        position: {\r\n                            my: \"left top\",\r\n                            at: \"right top\",\r\n                            offset: \"1 0\",\r\n                            collision: \"flip\",\r\n                            boundaryOffset: \"0 0\",\r\n                            boundary: this._rowsView.element()\r\n                        },\r\n                        onPositioned: this._positionedHandler.bind(this)\r\n                    };\r\n                    return new Overlay($tooltipElement, tooltipOptions)\r\n                },\r\n                _hideFixedGroupCell: function($cell, overlayOptions) {\r\n                    var $nextFixedRowElement;\r\n                    var $groupCellElement;\r\n                    var isFixedColumns = this._rowsView.isFixedColumns();\r\n                    var isFormOrPopupEditMode = this._editingController.isFormOrPopupEditMode();\r\n                    if (isFixedColumns && !isFormOrPopupEditMode) {\r\n                        var nextRowOptions = $cell.closest(\".dx-row\").next().data(\"options\");\r\n                        if (nextRowOptions && \"group\" === nextRowOptions.rowType) {\r\n                            $nextFixedRowElement = $(this._rowsView.getRowElement(nextRowOptions.rowIndex)).last();\r\n                            $groupCellElement = $nextFixedRowElement.find(\".\" + GROUP_CELL_CLASS);\r\n                            if ($groupCellElement.length && \"hidden\" !== $groupCellElement.get(0).style.visibility) {\r\n                                $groupCellElement.css(\"visibility\", \"hidden\");\r\n                                overlayOptions.onDisposing = function() {\r\n                                    $groupCellElement.css(\"visibility\", \"\")\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _positionedHandler: function(e, isOverlayVisible) {\r\n                    if (!e.component.__skipPositionProcessing) {\r\n                        var isRevertButton = $(e.element).hasClass(this.addWidgetPrefix(REVERT_TOOLTIP_CLASS));\r\n                        var needRepaint = !isRevertButton && this._rowsView.updateFreeSpaceRowHeight();\r\n                        var normalizedPosition = this._normalizeValidationMessagePositionAndMaxWidth(e, isRevertButton, isOverlayVisible);\r\n                        e.component.__skipPositionProcessing = !!(needRepaint || normalizedPosition);\r\n                        if (normalizedPosition) {\r\n                            e.component.option(normalizedPosition)\r\n                        } else if (needRepaint) {\r\n                            e.component.repaint()\r\n                        }\r\n                    }\r\n                },\r\n                _showValidationMessage: function($cell, messages, alignment, revertTooltip) {\r\n                    var editorPopup = $cell.find(\".dx-dropdowneditor-overlay\").data(\"dxPopup\");\r\n                    var isOverlayVisible = editorPopup && editorPopup.option(\"visible\");\r\n                    var myPosition = isOverlayVisible ? \"top right\" : \"top \" + alignment;\r\n                    var atPosition = isOverlayVisible ? \"top left\" : \"bottom \" + alignment;\r\n                    var $overlayContainer = $cell.closest(\".\".concat(this.addWidgetPrefix(CONTENT_CLASS)));\r\n                    var errorMessageText = \"\";\r\n                    messages && messages.forEach((function(message) {\r\n                        errorMessageText += (errorMessageText.length ? \"<br/>\" : \"\") + encodeHtml(message)\r\n                    }));\r\n                    var invalidMessageClass = this.addWidgetPrefix(WIDGET_INVALID_MESSAGE_CLASS);\r\n                    this._rowsView.element().find(\".\" + invalidMessageClass).remove();\r\n                    var $overlayElement = $(\"<div>\").addClass(INVALID_MESSAGE_CLASS).addClass(INVALID_MESSAGE_ALWAYS_CLASS).addClass(invalidMessageClass).html(errorMessageText).appendTo($cell);\r\n                    var overlayOptions = {\r\n                        target: $cell,\r\n                        container: $overlayContainer,\r\n                        shading: false,\r\n                        width: \"auto\",\r\n                        height: \"auto\",\r\n                        visible: true,\r\n                        animation: false,\r\n                        propagateOutsideClick: true,\r\n                        closeOnOutsideClick: false,\r\n                        copyRootClassesToWrapper: true,\r\n                        _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n                        position: {\r\n                            collision: \"flip\",\r\n                            boundary: this._rowsView.element(),\r\n                            boundaryOffset: \"0 0\",\r\n                            offset: {\r\n                                x: 0,\r\n                                y: !isOverlayVisible && browser.mozilla ? -1 : 0\r\n                            },\r\n                            my: myPosition,\r\n                            at: atPosition\r\n                        },\r\n                        onPositioned: e => {\r\n                            this._positionedHandler(e, isOverlayVisible);\r\n                            this._shiftValidationMessageIfNeed(e.component.$content(), revertTooltip && revertTooltip.$content(), $cell)\r\n                        }\r\n                    };\r\n                    this._hideFixedGroupCell($cell, overlayOptions);\r\n                    new Overlay($overlayElement, overlayOptions)\r\n                },\r\n                _normalizeValidationMessagePositionAndMaxWidth: function(options, isRevertButton, isOverlayVisible) {\r\n                    var fixedColumns = this._columnsController.getFixedColumns();\r\n                    if (!fixedColumns || !fixedColumns.length) {\r\n                        return\r\n                    }\r\n                    var position;\r\n                    var visibleTableWidth = !isRevertButton && (that = this, element = options.element, rowIndex = $(element).closest(\"tr\").index(), $cellElements = $(that._rowsView.getRowElement(rowIndex)).first().children().filter(\":not(.dx-hidden-cell)\"), that._rowsView._getWidths($cellElements).reduce((w1, w2) => w1 + w2, 0));\r\n                    var that, element, rowIndex, $cellElements;\r\n                    var $overlayContentElement = options.component.$content();\r\n                    var validationMessageWidth = getOuterWidth($overlayContentElement, true);\r\n                    var needMaxWidth = !isRevertButton && validationMessageWidth > visibleTableWidth;\r\n                    var columnIndex = this._rowsView.getCellIndex($(options.element).closest(\"td\"));\r\n                    var boundaryNonFixedColumnsInfo = function(fixedColumns) {\r\n                        var firstNonFixedColumnIndex;\r\n                        var lastNonFixedColumnIndex;\r\n                        fixedColumns.some((column, index) => {\r\n                            if (column.command === COMMAND_TRANSPARENT) {\r\n                                firstNonFixedColumnIndex = 0 === index ? -1 : index;\r\n                                lastNonFixedColumnIndex = index === fixedColumns.length - 1 ? -1 : index + column.colspan - 1;\r\n                                return true\r\n                            }\r\n                        });\r\n                        return {\r\n                            startColumnIndex: firstNonFixedColumnIndex,\r\n                            endColumnIndex: lastNonFixedColumnIndex\r\n                        }\r\n                    }(fixedColumns);\r\n                    if (!isRevertButton && (columnIndex === boundaryNonFixedColumnsInfo.startColumnIndex || needMaxWidth)) {\r\n                        position = {\r\n                            collision: \"none flip\",\r\n                            my: \"top left\",\r\n                            at: isOverlayVisible ? \"top right\" : \"bottom left\"\r\n                        }\r\n                    } else if (columnIndex === boundaryNonFixedColumnsInfo.endColumnIndex) {\r\n                        position = {\r\n                            collision: \"none flip\",\r\n                            my: \"top right\",\r\n                            at: isRevertButton || isOverlayVisible ? \"top left\" : \"bottom right\"\r\n                        };\r\n                        if (isRevertButton) {\r\n                            position.offset = \"-1 0\"\r\n                        }\r\n                    }\r\n                    return position && {\r\n                        position: position,\r\n                        maxWidth: needMaxWidth ? visibleTableWidth - 2 : void 0\r\n                    }\r\n                },\r\n                _shiftValidationMessageIfNeed: function($content, $revertContent, $cell) {\r\n                    if (!$revertContent) {\r\n                        return\r\n                    }\r\n                    var contentOffset = $content.offset();\r\n                    var revertContentOffset = $revertContent.offset();\r\n                    if (contentOffset.top === revertContentOffset.top && contentOffset.left + getWidth($content) > revertContentOffset.left) {\r\n                        var left = getWidth($revertContent) + PADDING_BETWEEN_TOOLTIPS;\r\n                        $content.css(\"left\", revertContentOffset.left < $cell.offset().left ? -left : left)\r\n                    }\r\n                },\r\n                _getTooltipsSelector: function() {\r\n                    var invalidMessageClass = this.addWidgetPrefix(WIDGET_INVALID_MESSAGE_CLASS);\r\n                    var revertTooltipClass = this.addWidgetPrefix(REVERT_TOOLTIP_CLASS);\r\n                    return \".dx-editor-cell .\" + revertTooltipClass + \", .dx-editor-cell .\" + invalidMessageClass + \", .dx-cell-modified .\" + invalidMessageClass\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._editingController = this.getController(\"editing\");\r\n                    this._columnsController = this.getController(\"columns\");\r\n                    this._rowsView = this.getView(\"rowsView\")\r\n                },\r\n                loseFocus: function(skipValidator) {\r\n                    if (!skipValidator) {\r\n                        this.getController(\"validating\").setValidator(null)\r\n                    }\r\n                    this.callBase()\r\n                },\r\n                updateCellState: function($element, validationResult, hideBorder) {\r\n                    var _change$data;\r\n                    var $focus = null === $element || void 0 === $element ? void 0 : $element.closest(this._getFocusCellSelector());\r\n                    var $cell = null !== $focus && void 0 !== $focus && $focus.is(\"td\") ? $focus : null;\r\n                    var rowOptions = null === $focus || void 0 === $focus ? void 0 : $focus.closest(\".dx-row\").data(\"options\");\r\n                    var change = rowOptions ? this.getController(\"editing\").getChangeByKey(rowOptions.key) : null;\r\n                    var column = $cell && this.getController(\"columns\").getVisibleColumns()[$cell.index()];\r\n                    var isCellModified = void 0 !== (null === change || void 0 === change ? void 0 : null === (_change$data = change.data) || void 0 === _change$data ? void 0 : _change$data[null === column || void 0 === column ? void 0 : column.name]) && !this._editingController.isSaving();\r\n                    var revertTooltip;\r\n                    if ((null === validationResult || void 0 === validationResult ? void 0 : validationResult.status) === VALIDATION_STATUS.invalid || isCellModified) {\r\n                        if (this._editingController.getEditMode() === EDIT_MODE_CELL) {\r\n                            revertTooltip = this._showRevertButton($focus)\r\n                        }\r\n                    }\r\n                    var showValidationMessage = validationResult && validationResult.status === VALIDATION_STATUS.invalid;\r\n                    if (showValidationMessage && $cell && column && validationResult && validationResult.brokenRules) {\r\n                        var errorMessages = [];\r\n                        validationResult.brokenRules.forEach((function(rule) {\r\n                            errorMessages.push(rule.message)\r\n                        }));\r\n                        this._showValidationMessage($focus, errorMessages, column.alignment || \"left\", revertTooltip)\r\n                    }!hideBorder && this._rowsView.element() && this._rowsView.updateFreeSpaceRowHeight()\r\n                },\r\n                focus: function($element, hideBorder) {\r\n                    if (!arguments.length) {\r\n                        return this.callBase()\r\n                    }\r\n                    var $tooltips = $element && $element.closest(\".\" + this.addWidgetPrefix(ROWS_VIEW_CLASS)).find(this._getTooltipsSelector());\r\n                    $tooltips && $tooltips.remove();\r\n                    if (null !== $element && void 0 !== $element && $element.hasClass(\"dx-row\")) {\r\n                        return this.callBase($element, hideBorder)\r\n                    }\r\n                    var $focus = null === $element || void 0 === $element ? void 0 : $element.closest(this._getFocusCellSelector());\r\n                    var callBase = this.callBase;\r\n                    var validator = $focus && ($focus.data(\"dxValidator\") || $element.find(\".\" + this.addWidgetPrefix(VALIDATOR_CLASS)).eq(0).data(\"dxValidator\"));\r\n                    var rowOptions = $focus && $focus.closest(\".dx-row\").data(\"options\");\r\n                    var editingController = this.getController(\"editing\");\r\n                    var change = rowOptions ? editingController.getChangeByKey(rowOptions.key) : null;\r\n                    var validationResult;\r\n                    var validatingController = this.getController(\"validating\");\r\n                    if (validator) {\r\n                        validatingController.setValidator(validator);\r\n                        var value = validator.option(\"adapter\").getValue();\r\n                        if (cellValueShouldBeValidated(value, rowOptions) || validatingController._rowIsValidated(change)) {\r\n                            editingController.waitForDeferredOperations().done(() => {\r\n                                when(validatingController.validateCell(validator)).done(result => {\r\n                                    validationResult = result;\r\n                                    var column = validationResult.validator.option(\"dataGetter\")().column;\r\n                                    if (change && column && !validatingController.isCurrentValidatorProcessing({\r\n                                            rowKey: change.key,\r\n                                            columnIndex: column.index\r\n                                        })) {\r\n                                        return\r\n                                    }\r\n                                    if (validationResult.status === VALIDATION_STATUS.invalid) {\r\n                                        hideBorder = true\r\n                                    }\r\n                                    this.updateCellState($element, validationResult, hideBorder);\r\n                                    callBase.call(this, $element, hideBorder)\r\n                                })\r\n                            });\r\n                            return this.callBase($element, hideBorder)\r\n                        }\r\n                    }\r\n                    this.updateCellState($element, validationResult, hideBorder);\r\n                    return this.callBase($element, hideBorder)\r\n                },\r\n                getEditorInstance: function($container) {\r\n                    var $editor = $container.find(\".dx-texteditor\").eq(0);\r\n                    return gridCoreUtils.getWidgetInstance($editor)\r\n                }\r\n            },\r\n            data: {\r\n                _isCellChanged: function(oldRow, newRow, visibleRowIndex, columnIndex, isLiveUpdate) {\r\n                    var _oldRow$cells, _cell$column$validati;\r\n                    var cell = null === (_oldRow$cells = oldRow.cells) || void 0 === _oldRow$cells ? void 0 : _oldRow$cells[columnIndex];\r\n                    var oldValidationStatus = cell && cell.validationStatus;\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var validationResult = validatingController.getCellValidationResult({\r\n                        rowKey: oldRow.key,\r\n                        columnIndex: columnIndex\r\n                    });\r\n                    var validationData = validatingController._getValidationData(oldRow.key);\r\n                    var newValidationStatus = validationResultIsValid(validationResult) ? validationResult.status : validationResult;\r\n                    var rowIsModified = JSON.stringify(newRow.modifiedValues) !== JSON.stringify(oldRow.modifiedValues);\r\n                    var cellIsMarkedAsInvalid = $(null === cell || void 0 === cell ? void 0 : cell.cellElement).hasClass(this.addWidgetPrefix(INVALIDATE_CLASS));\r\n                    var editingChanged = oldRow.isEditing !== newRow.isEditing;\r\n                    var hasValidationRules = null === cell || void 0 === cell ? void 0 : null === (_cell$column$validati = cell.column.validationRules) || void 0 === _cell$column$validati ? void 0 : _cell$column$validati.length;\r\n                    if (editingChanged && hasValidationRules || oldValidationStatus !== newValidationStatus && rowIsModified || validationData.isValid && cellIsMarkedAsInvalid) {\r\n                        return true\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                updateFreeSpaceRowHeight: function($table) {\r\n                    var $rowElements;\r\n                    var $freeSpaceRowElement;\r\n                    var $freeSpaceRowElements;\r\n                    var $element = this.element();\r\n                    var $tooltipContent = $element && $element.find(\".\" + this.addWidgetPrefix(WIDGET_INVALID_MESSAGE_CLASS) + \" .dx-overlay-content\");\r\n                    this.callBase($table);\r\n                    if ($tooltipContent && $tooltipContent.length) {\r\n                        $rowElements = this._getRowElements();\r\n                        $freeSpaceRowElements = this._getFreeSpaceRowElements($table);\r\n                        $freeSpaceRowElement = $freeSpaceRowElements.first();\r\n                        if ($freeSpaceRowElement && 1 === $rowElements.length && (!$freeSpaceRowElement.is(\":visible\") || getOuterHeight($tooltipContent) > getOuterHeight($freeSpaceRowElement))) {\r\n                            $freeSpaceRowElements.show();\r\n                            setHeight($freeSpaceRowElements, getOuterHeight($tooltipContent));\r\n                            return true\r\n                        }\r\n                    }\r\n                },\r\n                _formItemPrepared: function(cellOptions, $container) {\r\n                    this.callBase.apply(this, arguments);\r\n                    deferUpdate(() => {\r\n                        var $editor = $container.find(\".dx-widget\").first();\r\n                        var isEditorDisposed = $editor.length && !$editor.children().length;\r\n                        if (!isEditorDisposed) {\r\n                            this.getController(\"validating\").createValidator(cellOptions, $editor)\r\n                        }\r\n                    })\r\n                },\r\n                _cellPrepared: function($cell, parameters) {\r\n                    if (!this.getController(\"editing\").isFormOrPopupEditMode()) {\r\n                        this.getController(\"validating\").createValidator(parameters, $cell)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _restoreErrorRow: function(contentTable) {\r\n                    var editingController = this.getController(\"editing\");\r\n                    editingController && editingController.hasChanges() && this._getRowElements(contentTable).each((_, item) => {\r\n                        var rowOptions = $(item).data(\"options\");\r\n                        if (rowOptions) {\r\n                            var change = editingController.getChangeByKey(rowOptions.key);\r\n                            change && editingController._showErrorRow(change)\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.validating.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    validatingModule\r\n} from \"../grid_core/ui.grid_core.validating\";\r\ngridCore.registerModule(\"validating\", validatingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid.core.virtual_data_loader.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isObject,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\nvar needTwoPagesLoading = that => that.option(\"scrolling.loadTwoPagesOnStart\") || that._controller.isVirtual() || that._controller.getViewportItemIndex() > 0;\r\nvar getBeginPageIndex = that => that._cache.length ? that._cache[0].pageIndex : -1;\r\nvar getEndPageIndex = that => that._cache.length ? that._cache[that._cache.length - 1].pageIndex : -1;\r\nvar fireChanged = (that, changed, args) => {\r\n    that._isChangedFiring = true;\r\n    changed(args);\r\n    that._isChangedFiring = false\r\n};\r\nvar processDelayChanged = (that, changed, args) => {\r\n    if (that._isDelayChanged) {\r\n        that._isDelayChanged = false;\r\n        fireChanged(that, changed, args);\r\n        return true\r\n    }\r\n};\r\nvar getViewportPageCount = that => {\r\n    var pageSize = that._dataOptions.pageSize();\r\n    var preventPreload = that.option(\"scrolling.preventPreload\");\r\n    if (preventPreload) {\r\n        return 0\r\n    }\r\n    var realViewportSize = that._controller.viewportSize();\r\n    if (that._controller.isVirtualMode() && that.option(\"scrolling.removeInvisiblePages\")) {\r\n        realViewportSize = 0;\r\n        var viewportSize = that._controller.viewportSize() * that._controller.viewportItemSize();\r\n        var offset = that._controller.getContentOffset();\r\n        var position = that._controller.getViewportPosition();\r\n        var virtualItemsCount = that._controller.virtualItemsCount();\r\n        var totalItemsCount = that._dataOptions.totalItemsCount();\r\n        for (var itemIndex = virtualItemsCount.begin; itemIndex < totalItemsCount; itemIndex++) {\r\n            if (offset >= position + viewportSize) {\r\n                break\r\n            }\r\n            var itemSize = that._controller.getItemSizes()[itemIndex] || that._controller.viewportItemSize();\r\n            offset += itemSize;\r\n            if (offset >= position) {\r\n                realViewportSize++\r\n            }\r\n        }\r\n    }\r\n    return pageSize && realViewportSize > 0 ? Math.ceil(realViewportSize / pageSize) : 1\r\n};\r\nvar getPreloadPageCount = (that, previous) => {\r\n    var preloadEnabled = that.option(\"scrolling.preloadEnabled\");\r\n    var pageCount = getViewportPageCount(that);\r\n    var isAppendMode = that._controller.isAppendMode();\r\n    if (pageCount) {\r\n        if (previous) {\r\n            pageCount = preloadEnabled ? 1 : 0\r\n        } else {\r\n            if (preloadEnabled) {\r\n                pageCount++\r\n            }\r\n            if (isAppendMode || !needTwoPagesLoading(that)) {\r\n                pageCount--\r\n            }\r\n        }\r\n    }\r\n    return pageCount\r\n};\r\nvar getPageIndexForLoad = that => {\r\n    var result = -1;\r\n    var beginPageIndex = getBeginPageIndex(that);\r\n    var dataOptions = that._dataOptions;\r\n    if (beginPageIndex < 0) {\r\n        result = that._pageIndex\r\n    } else if (!that._cache[that._pageIndex - beginPageIndex]) {\r\n        result = that._pageIndex\r\n    } else if (beginPageIndex >= 0 && that._controller.viewportSize() >= 0) {\r\n        if (beginPageIndex > 0) {\r\n            var needToLoadPageBeforeLast = getEndPageIndex(that) + 1 === dataOptions.pageCount() && that._cache.length < getPreloadPageCount(that) + 1;\r\n            var needToLoadPrevPage = needToLoadPageBeforeLast || that._pageIndex === beginPageIndex && getPreloadPageCount(that, true);\r\n            if (needToLoadPrevPage) {\r\n                result = beginPageIndex - 1\r\n            }\r\n        }\r\n        if (result < 0) {\r\n            var needToLoadNextPage = beginPageIndex + that._cache.length <= that._pageIndex + getPreloadPageCount(that);\r\n            if (needToLoadNextPage) {\r\n                result = beginPageIndex + that._cache.length\r\n            }\r\n        }\r\n    }\r\n    if (that._loadingPageIndexes[result]) {\r\n        result = -1\r\n    }\r\n    return result\r\n};\r\nvar loadCore = (that, pageIndex) => {\r\n    var dataOptions = that._dataOptions;\r\n    if (pageIndex === that.pageIndex() || !dataOptions.isLoading() && pageIndex < dataOptions.pageCount() || !dataOptions.hasKnownLastPage() && pageIndex === dataOptions.pageCount()) {\r\n        dataOptions.pageIndex(pageIndex);\r\n        that._loadingPageIndexes[pageIndex] = true;\r\n        return when(dataOptions.load()).always(() => {\r\n            that._loadingPageIndexes[pageIndex] = false\r\n        })\r\n    }\r\n};\r\nvar processChanged = (that, changed, changeType, isDelayChanged, removeCacheItem) => {\r\n    var dataOptions = that._dataOptions;\r\n    var items = dataOptions.items().slice();\r\n    var change = isObject(changeType) ? changeType : void 0;\r\n    var isPrepend = \"prepend\" === changeType;\r\n    var viewportItems = dataOptions.viewportItems();\r\n    if (changeType && isString(changeType) && !that._isDelayChanged) {\r\n        change = {\r\n            changeType: changeType,\r\n            items: items\r\n        };\r\n        if (removeCacheItem) {\r\n            change.removeCount = removeCacheItem.itemsCount;\r\n            if (change.removeCount && dataOptions.correctCount) {\r\n                change.removeCount = dataOptions.correctCount(viewportItems, change.removeCount, isPrepend)\r\n            }\r\n        }\r\n    }\r\n    var removeItemCount = removeCacheItem ? removeCacheItem.itemsLength : 0;\r\n    if (removeItemCount && dataOptions.correctCount) {\r\n        removeItemCount = dataOptions.correctCount(viewportItems, removeItemCount, isPrepend)\r\n    }\r\n    if (\"append\" === changeType) {\r\n        viewportItems.push.apply(viewportItems, items);\r\n        if (removeCacheItem) {\r\n            viewportItems.splice(0, removeItemCount)\r\n        }\r\n    } else if (isPrepend) {\r\n        viewportItems.unshift.apply(viewportItems, items);\r\n        if (removeCacheItem) {\r\n            viewportItems.splice(-removeItemCount)\r\n        }\r\n    } else {\r\n        that._dataOptions.viewportItems(items)\r\n    }\r\n    dataOptions.updateLoading();\r\n    that._lastPageIndex = that.pageIndex();\r\n    that._isDelayChanged = isDelayChanged;\r\n    if (!isDelayChanged) {\r\n        fireChanged(that, changed, change)\r\n    }\r\n};\r\nexport class VirtualDataLoader {\r\n    constructor(controller, dataOptions) {\r\n        this._controller = controller;\r\n        this._dataOptions = dataOptions;\r\n        this._pageIndex = this._lastPageIndex = dataOptions.pageIndex();\r\n        this._cache = [];\r\n        this._loadingPageIndexes = {}\r\n    }\r\n    option() {\r\n        return this._controller.option.apply(this._controller, arguments)\r\n    }\r\n    viewportItemIndexChanged(itemIndex) {\r\n        var pageSize = this._dataOptions.pageSize();\r\n        var pageCount = this._dataOptions.pageCount();\r\n        var virtualMode = this._controller.isVirtualMode();\r\n        var appendMode = this._controller.isAppendMode();\r\n        var totalItemsCount = this._dataOptions.totalItemsCount();\r\n        var newPageIndex;\r\n        if (pageSize && (virtualMode || appendMode) && totalItemsCount >= 0) {\r\n            var viewportSize = this._controller.viewportSize();\r\n            if (viewportSize && itemIndex + viewportSize >= totalItemsCount && !this._controller.isVirtual()) {\r\n                if (this._dataOptions.hasKnownLastPage()) {\r\n                    newPageIndex = pageCount - 1;\r\n                    var lastPageSize = totalItemsCount % pageSize;\r\n                    if (newPageIndex > 0 && lastPageSize > 0 && lastPageSize < viewportSize) {\r\n                        newPageIndex--\r\n                    }\r\n                } else {\r\n                    newPageIndex = pageCount\r\n                }\r\n            } else {\r\n                newPageIndex = Math.floor(itemIndex / pageSize);\r\n                var maxPageIndex = pageCount - 1;\r\n                newPageIndex = Math.max(newPageIndex, 0);\r\n                newPageIndex = Math.min(newPageIndex, maxPageIndex)\r\n            }\r\n            this.pageIndex(newPageIndex);\r\n            return this.load()\r\n        }\r\n    }\r\n    pageIndex(pageIndex) {\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        var isAppendMode = this._controller.isAppendMode();\r\n        if (false !== this.option(LEGACY_SCROLLING_MODE) && (isVirtualMode || isAppendMode)) {\r\n            if (void 0 !== pageIndex) {\r\n                this._pageIndex = pageIndex\r\n            }\r\n            return this._pageIndex\r\n        } else {\r\n            return this._dataOptions.pageIndex(pageIndex)\r\n        }\r\n    }\r\n    beginPageIndex(defaultPageIndex) {\r\n        var beginPageIndex = getBeginPageIndex(this);\r\n        if (beginPageIndex < 0) {\r\n            beginPageIndex = void 0 !== defaultPageIndex ? defaultPageIndex : this.pageIndex()\r\n        }\r\n        return beginPageIndex\r\n    }\r\n    endPageIndex() {\r\n        var endPageIndex = getEndPageIndex(this);\r\n        return endPageIndex > 0 ? endPageIndex : this._lastPageIndex\r\n    }\r\n    pageSize() {\r\n        return this._dataOptions.pageSize()\r\n    }\r\n    load() {\r\n        var dataOptions = this._dataOptions;\r\n        var result;\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        var isAppendMode = this._controller.isAppendMode();\r\n        if (false !== this.option(LEGACY_SCROLLING_MODE) && (isVirtualMode || isAppendMode)) {\r\n            var pageIndexForLoad = getPageIndexForLoad(this);\r\n            if (pageIndexForLoad >= 0) {\r\n                var loadResult = loadCore(this, pageIndexForLoad);\r\n                if (loadResult) {\r\n                    result = new Deferred;\r\n                    loadResult.done(() => {\r\n                        var delayDeferred = this._delayDeferred;\r\n                        if (delayDeferred) {\r\n                            delayDeferred.done(result.resolve).fail(result.reject)\r\n                        } else {\r\n                            result.resolve()\r\n                        }\r\n                    }).fail(result.reject);\r\n                    dataOptions.updateLoading()\r\n                }\r\n            }\r\n        } else {\r\n            result = dataOptions.load()\r\n        }\r\n        if (!result && this._lastPageIndex !== this.pageIndex()) {\r\n            this._dataOptions.onChanged({\r\n                changeType: \"pageIndex\"\r\n            })\r\n        }\r\n        return result || (new Deferred).resolve()\r\n    }\r\n    loadIfNeed() {\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        var isAppendMode = this._controller.isAppendMode();\r\n        if ((isVirtualMode || isAppendMode) && !this._dataOptions.isLoading() && (!this._isChangedFiring || this._controller.isVirtual())) {\r\n            var position = this._controller.getViewportPosition();\r\n            if (position > 0) {\r\n                this._controller._setViewportPositionCore(position)\r\n            } else {\r\n                this.load()\r\n            }\r\n        }\r\n    }\r\n    handleDataChanged(callBase, e) {\r\n        var dataOptions = this._dataOptions;\r\n        var lastCacheLength = this._cache.length;\r\n        var changeType;\r\n        var removeInvisiblePages;\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        var isAppendMode = this._controller.isAppendMode();\r\n        if (e && e.changes) {\r\n            fireChanged(this, callBase, e)\r\n        } else if (false !== this.option(LEGACY_SCROLLING_MODE) && (isVirtualMode || isAppendMode)) {\r\n            var beginPageIndex = getBeginPageIndex(this);\r\n            if (beginPageIndex >= 0) {\r\n                if (isVirtualMode && beginPageIndex + this._cache.length !== dataOptions.pageIndex() && beginPageIndex - 1 !== dataOptions.pageIndex()) {\r\n                    lastCacheLength = 0;\r\n                    this._cache = []\r\n                }\r\n                if (isAppendMode) {\r\n                    if (0 === dataOptions.pageIndex()) {\r\n                        this._cache = []\r\n                    } else if (dataOptions.pageIndex() < getEndPageIndex(this)) {\r\n                        fireChanged(this, callBase, {\r\n                            changeType: \"append\",\r\n                            items: []\r\n                        });\r\n                        return\r\n                    }\r\n                }\r\n            }\r\n            var cacheItem = {\r\n                pageIndex: dataOptions.pageIndex(),\r\n                itemsLength: dataOptions.items(true).length,\r\n                itemsCount: this.itemsCount(true)\r\n            };\r\n            if (this.option(\"scrolling.removeInvisiblePages\") && isVirtualMode) {\r\n                removeInvisiblePages = this._cache.length > Math.max(getPreloadPageCount(this) + (this.option(\"scrolling.preloadEnabled\") ? 1 : 0), 2)\r\n            } else {\r\n                processDelayChanged(this, callBase, {\r\n                    isDelayed: true\r\n                })\r\n            }\r\n            var removeCacheItem;\r\n            if (beginPageIndex === dataOptions.pageIndex() + 1) {\r\n                if (removeInvisiblePages) {\r\n                    removeCacheItem = this._cache.pop()\r\n                }\r\n                changeType = \"prepend\";\r\n                this._cache.unshift(cacheItem)\r\n            } else {\r\n                if (removeInvisiblePages) {\r\n                    removeCacheItem = this._cache.shift()\r\n                }\r\n                changeType = \"append\";\r\n                this._cache.push(cacheItem)\r\n            }\r\n            var isDelayChanged = isVirtualMode && 0 === lastCacheLength && needTwoPagesLoading(this);\r\n            processChanged(this, callBase, this._cache.length > 1 ? changeType : void 0, isDelayChanged, removeCacheItem);\r\n            this._delayDeferred = this.load().done(() => {\r\n                if (processDelayChanged(this, callBase)) {\r\n                    this.load()\r\n                }\r\n            })\r\n        } else {\r\n            processChanged(this, callBase, e)\r\n        }\r\n    }\r\n    getDelayDeferred() {\r\n        return this._delayDeferred\r\n    }\r\n    itemsCount(isBase) {\r\n        var itemsCount = 0;\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        if (!isBase && isVirtualMode) {\r\n            this._cache.forEach(cacheItem => {\r\n                itemsCount += cacheItem.itemsCount\r\n            })\r\n        } else {\r\n            itemsCount = this._dataOptions.itemsCount()\r\n        }\r\n        return itemsCount\r\n    }\r\n    virtualItemsCount() {\r\n        var pageIndex = getBeginPageIndex(this);\r\n        if (pageIndex < 0) {\r\n            pageIndex = this._dataOptions.pageIndex()\r\n        }\r\n        var beginItemsCount = pageIndex * this._dataOptions.pageSize();\r\n        var itemsCount = this._cache.length * this._dataOptions.pageSize();\r\n        var endItemsCount = Math.max(0, this._dataOptions.totalItemsCount() - itemsCount - beginItemsCount);\r\n        return {\r\n            begin: beginItemsCount,\r\n            end: endItemsCount\r\n        }\r\n    }\r\n    reset() {\r\n        this._loadingPageIndexes = {};\r\n        this._cache = []\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_scrolling_core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport positionUtils from \"../../animation/position\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    VirtualDataLoader\r\n} from \"./ui.grid.core.virtual_data_loader\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nvar SCROLLING_MODE_INFINITE = \"infinite\";\r\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\nvar _isVirtualMode = that => that.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL || that._isVirtual;\r\nvar _isAppendMode = that => that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE && !that._isVirtual;\r\nexport function subscribeToExternalScrollers($element, scrollChangedHandler, $targetElement) {\r\n    var $scrollElement;\r\n    var scrollableArray = [];\r\n    var scrollToArray = [];\r\n    var disposeArray = [];\r\n    $targetElement = $targetElement || $element;\r\n\r\n    function getElementOffset(scrollable) {\r\n        var $scrollableElement = scrollable.element ? scrollable.$element() : scrollable;\r\n        var scrollableOffset = positionUtils.offset($scrollableElement);\r\n        if (!scrollableOffset) {\r\n            return $element.offset().top\r\n        }\r\n        return scrollable.scrollTop() - (scrollableOffset.top - $element.offset().top)\r\n    }\r\n    var widgetScrollStrategy = {\r\n        on: function(scrollable, eventName, handler) {\r\n            scrollable.on(\"scroll\", handler)\r\n        },\r\n        off: function(scrollable, eventName, handler) {\r\n            scrollable.off(\"scroll\", handler)\r\n        }\r\n    };\r\n\r\n    function subscribeToScrollEvents($scrollElement) {\r\n        var isDocument = \"#document\" === $scrollElement.get(0).nodeName;\r\n        var scrollable = $scrollElement.data(\"dxScrollable\");\r\n        var eventsStrategy = widgetScrollStrategy;\r\n        if (!scrollable) {\r\n            scrollable = isDocument && $(getWindow()) || \"auto\" === $scrollElement.css(\"overflowY\") && $scrollElement;\r\n            eventsStrategy = eventsEngine;\r\n            if (!scrollable) {\r\n                return\r\n            }\r\n        }\r\n        var handler = function(scrollable) {\r\n            return function() {\r\n                var scrollTop = scrollable.scrollTop() - getElementOffset(scrollable);\r\n                scrollTop = scrollTop > 0 ? scrollTop : 0;\r\n                scrollChangedHandler(scrollTop)\r\n            }\r\n        }(scrollable);\r\n        eventsStrategy.on(scrollable, \"scroll\", handler);\r\n        scrollToArray.push((function(pos) {\r\n            var topOffset = getElementOffset(scrollable);\r\n            var scrollMethod = scrollable.scrollTo ? \"scrollTo\" : \"scrollTop\";\r\n            if (pos - topOffset >= 0) {\r\n                scrollable[scrollMethod](pos + topOffset)\r\n            }\r\n        }));\r\n        scrollableArray.push(scrollable);\r\n        disposeArray.push((function() {\r\n            eventsStrategy.off(scrollable, \"scroll\", handler)\r\n        }))\r\n    }\r\n    for ($scrollElement = $targetElement.parent(); $scrollElement.length; $scrollElement = $scrollElement.parent()) {\r\n        subscribeToScrollEvents($scrollElement)\r\n    }\r\n    return {\r\n        scrollTo: function(pos) {\r\n            each(scrollToArray, (function(_, scrollTo) {\r\n                scrollTo(pos)\r\n            }))\r\n        },\r\n        dispose: function() {\r\n            each(disposeArray, (function(_, dispose) {\r\n                dispose()\r\n            }))\r\n        }\r\n    }\r\n}\r\nexport var VirtualScrollController = Class.inherit(function() {\r\n    var members = {\r\n        ctor: function(component, dataOptions, isVirtual) {\r\n            this._dataOptions = dataOptions;\r\n            this.component = component;\r\n            this._viewportSize = false === component.option(LEGACY_SCROLLING_MODE) ? 15 : 0;\r\n            this._viewportItemSize = 20;\r\n            this._viewportItemIndex = 0;\r\n            this._position = 0;\r\n            this._isScrollingBack = false;\r\n            this._contentSize = 0;\r\n            this._itemSizes = {};\r\n            this._sizeRatio = 1;\r\n            this._isVirtual = isVirtual;\r\n            this.positionChanged = Callbacks();\r\n            this._dataLoader = new VirtualDataLoader(this, this._dataOptions)\r\n        },\r\n        getItemSizes: function() {\r\n            return this._itemSizes\r\n        },\r\n        option: function() {\r\n            return this.component.option.apply(this.component, arguments)\r\n        },\r\n        isVirtual: function() {\r\n            return this._isVirtual\r\n        },\r\n        virtualItemsCount: function() {\r\n            if (_isVirtualMode(this)) {\r\n                var dataOptions = this._dataOptions;\r\n                var totalItemsCount = dataOptions.totalItemsCount();\r\n                if (false === this.option(LEGACY_SCROLLING_MODE) && -1 !== totalItemsCount) {\r\n                    var viewportParams = this.getViewportParams();\r\n                    var loadedOffset = dataOptions.loadedOffset();\r\n                    var loadedItemCount = dataOptions.loadedItemCount();\r\n                    var skip = Math.max(viewportParams.skip, loadedOffset);\r\n                    var take = Math.min(viewportParams.take, loadedItemCount);\r\n                    var endItemsCount = Math.max(totalItemsCount - (skip + take), 0);\r\n                    return {\r\n                        begin: skip,\r\n                        end: endItemsCount\r\n                    }\r\n                }\r\n                return this._dataLoader.virtualItemsCount.apply(this._dataLoader, arguments)\r\n            }\r\n        },\r\n        getScrollingTimeout: function() {\r\n            var renderAsync = this.option(\"scrolling.renderAsync\");\r\n            var scrollingTimeout = 0;\r\n            if (!isDefined(renderAsync)) {\r\n                scrollingTimeout = Math.min(this.option(\"scrolling.timeout\") || 0, this._dataOptions.changingDuration());\r\n                if (scrollingTimeout < this.option(\"scrolling.renderingThreshold\")) {\r\n                    scrollingTimeout = this.option(\"scrolling.minTimeout\") || 0\r\n                }\r\n            } else if (renderAsync) {\r\n                var _this$option;\r\n                scrollingTimeout = null !== (_this$option = this.option(\"scrolling.timeout\")) && void 0 !== _this$option ? _this$option : 0\r\n            }\r\n            return scrollingTimeout\r\n        },\r\n        setViewportPosition: function(position) {\r\n            var result = new Deferred;\r\n            var scrollingTimeout = this.getScrollingTimeout();\r\n            clearTimeout(this._scrollTimeoutID);\r\n            if (scrollingTimeout > 0) {\r\n                this._scrollTimeoutID = setTimeout(() => {\r\n                    this._setViewportPositionCore(position);\r\n                    result.resolve()\r\n                }, scrollingTimeout)\r\n            } else {\r\n                this._setViewportPositionCore(position);\r\n                result.resolve()\r\n            }\r\n            return result.promise()\r\n        },\r\n        getViewportPosition: function() {\r\n            return this._position\r\n        },\r\n        getItemIndexByPosition: function(position) {\r\n            var _position;\r\n            position = null !== (_position = position) && void 0 !== _position ? _position : this._position;\r\n            var defaultItemSize = this.getItemSize();\r\n            var offset = 0;\r\n            var itemOffset = 0;\r\n            var itemOffsetsWithSize = Object.keys(this._itemSizes).concat(-1);\r\n            for (var i = 0; i < itemOffsetsWithSize.length && offset < position; i++) {\r\n                var itemOffsetWithSize = parseInt(itemOffsetsWithSize[i]);\r\n                var itemOffsetDiff = (position - offset) / defaultItemSize;\r\n                if (itemOffsetWithSize < 0 || itemOffset + itemOffsetDiff < itemOffsetWithSize) {\r\n                    itemOffset += itemOffsetDiff;\r\n                    break\r\n                } else {\r\n                    itemOffsetDiff = itemOffsetWithSize - itemOffset;\r\n                    offset += itemOffsetDiff * defaultItemSize;\r\n                    itemOffset += itemOffsetDiff\r\n                }\r\n                var itemSize = this._itemSizes[itemOffsetWithSize];\r\n                offset += itemSize;\r\n                itemOffset += offset < position ? 1 : (position - offset + itemSize) / itemSize\r\n            }\r\n            return Math.round(50 * itemOffset) / 50\r\n        },\r\n        isScrollingBack: function() {\r\n            return this._isScrollingBack\r\n        },\r\n        _setViewportPositionCore: function(position) {\r\n            var prevPosition = this._position || 0;\r\n            this._position = position;\r\n            if (prevPosition !== this._position) {\r\n                this._isScrollingBack = this._position < prevPosition\r\n            }\r\n            var itemIndex = this.getItemIndexByPosition();\r\n            var result = this.setViewportItemIndex(itemIndex);\r\n            this.positionChanged.fire();\r\n            return result\r\n        },\r\n        setContentItemSizes: function(sizes) {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            this._contentSize = sizes.reduce((a, b) => a + b, 0);\r\n            if (virtualItemsCount) {\r\n                sizes.forEach((size, index) => {\r\n                    this._itemSizes[virtualItemsCount.begin + index] = size\r\n                });\r\n                var virtualContentSize = (virtualItemsCount.begin + virtualItemsCount.end + this.itemsCount()) * this._viewportItemSize;\r\n                var contentHeightLimit = gridCoreUtils.getContentHeightLimit(browser);\r\n                if (virtualContentSize > contentHeightLimit) {\r\n                    this._sizeRatio = contentHeightLimit / virtualContentSize\r\n                } else {\r\n                    this._sizeRatio = 1\r\n                }\r\n            }\r\n        },\r\n        getItemSize: function() {\r\n            return this._viewportItemSize * this._sizeRatio\r\n        },\r\n        getItemOffset: function(itemIndex, isEnd) {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            var itemCount = itemIndex;\r\n            if (!virtualItemsCount) {\r\n                return 0\r\n            }\r\n            var offset = 0;\r\n            var totalItemsCount = this._dataOptions.totalItemsCount();\r\n            Object.keys(this._itemSizes).forEach(currentItemIndex => {\r\n                if (!itemCount) {\r\n                    return\r\n                }\r\n                if (isEnd ? currentItemIndex >= totalItemsCount - itemIndex : currentItemIndex < itemIndex) {\r\n                    offset += this._itemSizes[currentItemIndex];\r\n                    itemCount--\r\n                }\r\n            });\r\n            return Math.floor(offset + itemCount * this._viewportItemSize * this._sizeRatio)\r\n        },\r\n        getContentOffset: function(type) {\r\n            var isEnd = \"end\" === type;\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            if (!virtualItemsCount) {\r\n                return 0\r\n            }\r\n            return this.getItemOffset(isEnd ? virtualItemsCount.end : virtualItemsCount.begin, isEnd)\r\n        },\r\n        getVirtualContentSize: function() {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            return virtualItemsCount ? this.getContentOffset(\"begin\") + this.getContentOffset(\"end\") + this._contentSize : 0\r\n        },\r\n        getViewportItemIndex: function() {\r\n            return this._viewportItemIndex\r\n        },\r\n        setViewportItemIndex: function(itemIndex) {\r\n            this._viewportItemIndex = itemIndex;\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                return\r\n            }\r\n            return this._dataLoader.viewportItemIndexChanged.apply(this._dataLoader, arguments)\r\n        },\r\n        viewportItemSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._viewportItemSize = size\r\n            }\r\n            return this._viewportItemSize\r\n        },\r\n        viewportSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._viewportSize = size\r\n            }\r\n            return this._viewportSize\r\n        },\r\n        viewportHeight: function(height) {\r\n            var begin = this.getItemIndexByPosition();\r\n            var end = this.getItemIndexByPosition(this._position + height);\r\n            this.viewportSize(Math.ceil(end - begin));\r\n            if (this._viewportItemIndex !== begin) {\r\n                this._setViewportPositionCore(this._position)\r\n            }\r\n        },\r\n        reset: function(isRefresh) {\r\n            this._dataLoader.reset();\r\n            if (!isRefresh) {\r\n                this._itemSizes = {}\r\n            }\r\n        },\r\n        subscribeToWindowScrollEvents: function($element) {\r\n            this._windowScroll = this._windowScroll || subscribeToExternalScrollers($element, scrollTop => {\r\n                if (this.viewportItemSize()) {\r\n                    this.setViewportPosition(scrollTop)\r\n                }\r\n            })\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._scrollTimeoutID);\r\n            this._windowScroll && this._windowScroll.dispose();\r\n            this._windowScroll = null\r\n        },\r\n        scrollTo: function(pos) {\r\n            this._windowScroll && this._windowScroll.scrollTo(pos)\r\n        },\r\n        isVirtualMode: function() {\r\n            return _isVirtualMode(this)\r\n        },\r\n        isAppendMode: function() {\r\n            return _isAppendMode(this)\r\n        },\r\n        getViewportParams: function() {\r\n            var _this$option2;\r\n            var virtualMode = this.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL;\r\n            var totalItemsCount = this._dataOptions.totalItemsCount();\r\n            var topIndex = this._viewportItemIndex;\r\n            var bottomIndex = this._viewportSize + topIndex;\r\n            var maxGap = this.option(\"scrolling.prerenderedRowChunkSize\") || 1;\r\n            var isScrollingBack = this.isScrollingBack();\r\n            var minGap = null !== (_this$option2 = this.option(\"scrolling.prerenderedRowCount\")) && void 0 !== _this$option2 ? _this$option2 : 1;\r\n            var topMinGap = isScrollingBack ? minGap : 0;\r\n            var bottomMinGap = isScrollingBack ? 0 : minGap;\r\n            var skip = Math.floor(Math.max(0, topIndex - topMinGap) / maxGap) * maxGap;\r\n            var take = Math.ceil((bottomIndex + bottomMinGap - skip) / maxGap) * maxGap;\r\n            if (virtualMode) {\r\n                var remainedItems = Math.max(0, totalItemsCount - skip);\r\n                take = Math.min(take, remainedItems)\r\n            }\r\n            return {\r\n                skip: skip,\r\n                take: take\r\n            }\r\n        },\r\n        itemsCount: function() {\r\n            var result = 0;\r\n            if (this.option(LEGACY_SCROLLING_MODE)) {\r\n                result = this._dataLoader.itemsCount.apply(this._dataLoader, arguments)\r\n            } else {\r\n                result = this._dataOptions.itemsCount()\r\n            }\r\n            return result\r\n        }\r\n    };\r\n    [\"pageIndex\", \"beginPageIndex\", \"endPageIndex\", \"pageSize\", \"load\", \"loadIfNeed\", \"handleDataChanged\", \"getDelayDeferred\"].forEach((function(name) {\r\n        members[name] = function() {\r\n            return this._dataLoader[name].apply(this._dataLoader, arguments)\r\n        }\r\n    }));\r\n    return members\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_scrolling.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    VirtualScrollController,\r\n    subscribeToExternalScrollers\r\n} from \"./ui.grid_core.virtual_scrolling_core\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport LoadIndicator from \"../load_indicator\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nvar BOTTOM_LOAD_PANEL_CLASS = \"bottom-load-panel\";\r\nvar TABLE_CONTENT_CLASS = \"table-content\";\r\nvar GROUP_SPACE_CLASS = \"group-space\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar FREESPACE_CLASS = \"dx-freespace-row\";\r\nvar COLUMN_LINES_CLASS = \"dx-column-lines\";\r\nvar VIRTUAL_ROW_CLASS = \"dx-virtual-row\";\r\nvar SCROLLING_MODE_INFINITE = \"infinite\";\r\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\r\nvar LOAD_TIMEOUT = 300;\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\nvar VISIBLE_PAGE_INDEX = \"paging.pageIndex\";\r\nvar isVirtualMode = function(that) {\r\n    return that.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL\r\n};\r\nvar isAppendMode = function(that) {\r\n    return that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE\r\n};\r\nvar isVirtualPaging = function(that) {\r\n    return isVirtualMode(that) || isAppendMode(that)\r\n};\r\nvar _correctCount = function(items, count, fromEnd, isItemCountableFunc) {\r\n    for (var i = 0; i < count + 1; i++) {\r\n        var item = items[fromEnd ? items.length - 1 - i : i];\r\n        if (item && !isItemCountableFunc(item, i === count, fromEnd)) {\r\n            count++\r\n        }\r\n    }\r\n    return count\r\n};\r\nvar isItemCountableByDataSource = function(item, dataSource) {\r\n    return \"data\" === item.rowType && !item.isNewRow || \"group\" === item.rowType && dataSource.isGroupItemCountable(item.data)\r\n};\r\nvar updateItemIndices = function(items) {\r\n    items.forEach((function(item, index) {\r\n        item.rowIndex = index\r\n    }));\r\n    return items\r\n};\r\nvar VirtualScrollingDataSourceAdapterExtender = function() {\r\n    var _updateLoading = function(that) {\r\n        var beginPageIndex = that._virtualScrollController.beginPageIndex(-1);\r\n        if (isVirtualMode(that)) {\r\n            if (beginPageIndex < 0 || that.viewportSize() >= 0 && that.getViewportItemIndex() >= 0 && (beginPageIndex * that.pageSize() > that.getViewportItemIndex() || beginPageIndex * that.pageSize() + that.itemsCount() < that.getViewportItemIndex() + that.viewportSize()) && that._dataSource.isLoading()) {\r\n                if (!that._isLoading) {\r\n                    that._isLoading = true;\r\n                    that.loadingChanged.fire(true)\r\n                }\r\n            } else if (that._isLoading) {\r\n                that._isLoading = false;\r\n                that.loadingChanged.fire(false)\r\n            }\r\n        }\r\n    };\r\n    var result = {\r\n        init: function() {\r\n            this.callBase.apply(this, arguments);\r\n            this._items = [];\r\n            this._isLoaded = true;\r\n            this._loadPageCount = 1;\r\n            this._virtualScrollController = new VirtualScrollController(this.component, this._getVirtualScrollDataOptions())\r\n        },\r\n        _getVirtualScrollDataOptions: function() {\r\n            var that = this;\r\n            return {\r\n                pageSize: function() {\r\n                    return that.pageSize()\r\n                },\r\n                totalItemsCount: function() {\r\n                    return that.totalItemsCount()\r\n                },\r\n                hasKnownLastPage: function() {\r\n                    return that.hasKnownLastPage()\r\n                },\r\n                pageIndex: function(index) {\r\n                    return that._dataSource.pageIndex(index)\r\n                },\r\n                isLoading: function() {\r\n                    return that._dataSource.isLoading() && !that.isCustomLoading()\r\n                },\r\n                pageCount: function() {\r\n                    return that.pageCount()\r\n                },\r\n                load: function() {\r\n                    return that._dataSource.load()\r\n                },\r\n                updateLoading: function() {\r\n                    _updateLoading(that)\r\n                },\r\n                itemsCount: function() {\r\n                    return that.itemsCount(true)\r\n                },\r\n                items: function() {\r\n                    return that._dataSource.items()\r\n                },\r\n                viewportItems: function(items) {\r\n                    if (items) {\r\n                        that._items = items\r\n                    }\r\n                    return that._items\r\n                },\r\n                onChanged: function(e) {\r\n                    that.changed.fire(e)\r\n                },\r\n                changingDuration: function(e) {\r\n                    if (that.isLoading()) {\r\n                        return LOAD_TIMEOUT\r\n                    }\r\n                    return that._renderTime || 0\r\n                }\r\n            }\r\n        },\r\n        _handleLoadingChanged: function(isLoading) {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                this.callBase.apply(this, arguments);\r\n                return\r\n            }\r\n            if (!isVirtualMode(this) || this._isLoadingAll) {\r\n                this._isLoading = isLoading;\r\n                this.callBase.apply(this, arguments)\r\n            }\r\n            if (isLoading) {\r\n                this._startLoadTime = new Date\r\n            } else {\r\n                this._startLoadTime = void 0\r\n            }\r\n        },\r\n        _handleLoadError: function() {\r\n            if (false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                this._isLoading = false;\r\n                this.loadingChanged.fire(false)\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _handleDataChanged: function(e) {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                this._items = this._dataSource.items().slice();\r\n                this.callBase.apply(this, arguments);\r\n                return\r\n            }\r\n            var callBase = this.callBase.bind(this);\r\n            this._virtualScrollController.handleDataChanged(callBase, e)\r\n        },\r\n        _customizeRemoteOperations: function(options, operationTypes) {\r\n            var newMode = false === this.option(LEGACY_SCROLLING_MODE);\r\n            var renderAsync = this.option(\"scrolling.renderAsync\");\r\n            if (!isDefined(renderAsync)) {\r\n                renderAsync = this._renderTime >= this.option(\"scrolling.renderingThreshold\")\r\n            }\r\n            if ((isVirtualMode(this) || isAppendMode(this) && newMode) && !operationTypes.reload && (operationTypes.skip || newMode) && !renderAsync) {\r\n                options.delay = void 0\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        items: function() {\r\n            return this._items\r\n        },\r\n        itemsCount: function(isBase) {\r\n            if (isBase || false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                return this.callBase()\r\n            }\r\n            return this._virtualScrollController.itemsCount()\r\n        },\r\n        load: function(loadOptions) {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE) || loadOptions) {\r\n                return this.callBase(loadOptions)\r\n            }\r\n            return this._virtualScrollController.load()\r\n        },\r\n        isLoading: function() {\r\n            return false === this.option(LEGACY_SCROLLING_MODE) ? this._dataSource.isLoading() : this._isLoading\r\n        },\r\n        isLoaded: function() {\r\n            return this._dataSource.isLoaded() && this._isLoaded\r\n        },\r\n        resetPagesCache: function(isLiveUpdate) {\r\n            if (!isLiveUpdate) {\r\n                this._virtualScrollController.reset(true)\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _changeRowExpandCore: function() {\r\n            var result = this.callBase.apply(this, arguments);\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                return result\r\n            }\r\n            this.resetPagesCache();\r\n            _updateLoading(this);\r\n            return result\r\n        },\r\n        reload: function() {\r\n            this._dataSource.pageIndex(this.pageIndex());\r\n            var virtualScrollController = this._virtualScrollController;\r\n            if (false !== this.option(LEGACY_SCROLLING_MODE) && virtualScrollController) {\r\n                var d = new Deferred;\r\n                this.callBase.apply(this, arguments).done((function(r) {\r\n                    var delayDeferred = virtualScrollController.getDelayDeferred();\r\n                    if (delayDeferred) {\r\n                        delayDeferred.done(d.resolve).fail(d.reject)\r\n                    } else {\r\n                        d.resolve(r)\r\n                    }\r\n                })).fail(d.reject);\r\n                return d\r\n            } else {\r\n                return this.callBase.apply(this, arguments)\r\n            }\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            if (false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                var storeLoadOptions = options.storeLoadOptions;\r\n                var dataSource = this._dataSource;\r\n                if (operationTypes.reload) {\r\n                    this._virtualScrollController.reset();\r\n                    dataSource.items().length = 0;\r\n                    this._isLoaded = false;\r\n                    _updateLoading(this);\r\n                    this._isLoaded = true;\r\n                    if (isAppendMode(this)) {\r\n                        this.pageIndex(0);\r\n                        dataSource.pageIndex(0);\r\n                        storeLoadOptions.pageIndex = 0;\r\n                        options.pageIndex = 0;\r\n                        storeLoadOptions.skip = 0\r\n                    } else {\r\n                        dataSource.pageIndex(this.pageIndex());\r\n                        if (dataSource.paginate()) {\r\n                            options.pageIndex = this.pageIndex();\r\n                            storeLoadOptions.skip = this.pageIndex() * this.pageSize()\r\n                        }\r\n                    }\r\n                } else if (isAppendMode(this) && storeLoadOptions.skip && this._totalCountCorrection < 0) {\r\n                    storeLoadOptions.skip += this._totalCountCorrection\r\n                }\r\n            }\r\n            return this.callBase.apply(this, arguments)\r\n        },\r\n        dispose: function() {\r\n            this._virtualScrollController.dispose();\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        loadPageCount: function(count) {\r\n            if (!isDefined(count)) {\r\n                return this._loadPageCount\r\n            }\r\n            this._loadPageCount = count\r\n        },\r\n        _handleDataLoading: function(options) {\r\n            var loadPageCount = this.loadPageCount();\r\n            var pageSize = this.pageSize();\r\n            var newMode = false === this.option(LEGACY_SCROLLING_MODE);\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var takeIsDefined = isDefined(storeLoadOptions.take);\r\n            options.loadPageCount = loadPageCount;\r\n            if (!options.isCustomLoading && newMode && takeIsDefined && loadPageCount > 1 && pageSize > 0) {\r\n                storeLoadOptions.take = loadPageCount * pageSize\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _loadPageSize: function() {\r\n            return this.callBase.apply(this, arguments) * this.loadPageCount()\r\n        }\r\n    };\r\n    [\"beginPageIndex\", \"endPageIndex\", \"pageIndex\"].forEach((function(name) {\r\n        result[name] = function() {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                var dataSource = this._dataSource;\r\n                return dataSource.pageIndex.apply(dataSource, arguments)\r\n            }\r\n            var virtualScrollController = this._virtualScrollController;\r\n            return virtualScrollController[name].apply(virtualScrollController, arguments)\r\n        }\r\n    }));\r\n    [\"virtualItemsCount\", \"getContentOffset\", \"getVirtualContentSize\", \"setContentItemSizes\", \"setViewportPosition\", \"getViewportItemIndex\", \"setViewportItemIndex\", \"getItemIndexByPosition\", \"viewportSize\", \"viewportItemSize\", \"getItemSize\", \"getItemSizes\", \"loadIfNeed\"].forEach((function(name) {\r\n        result[name] = function() {\r\n            var virtualScrollController = this._virtualScrollController;\r\n            return virtualScrollController[name].apply(virtualScrollController, arguments)\r\n        }\r\n    }));\r\n    return result\r\n}();\r\nvar VirtualScrollingRowsViewExtender = function() {\r\n    var removeEmptyRows = function($emptyRows, className) {\r\n        var tBodies = $emptyRows.toArray().map(row => $(row).parent(\".\" + className).get(0)).filter(row => row);\r\n        if (tBodies.length) {\r\n            $emptyRows = $(tBodies)\r\n        }\r\n        var rowCount = className === FREESPACE_CLASS ? $emptyRows.length - 1 : $emptyRows.length;\r\n        for (var i = 0; i < rowCount; i++) {\r\n            $emptyRows.eq(i).remove()\r\n        }\r\n    };\r\n    return {\r\n        init: function() {\r\n            var _dataController$state;\r\n            var dataController = this.getController(\"data\");\r\n            this.callBase();\r\n            dataController.pageChanged.add(pageIndex => {\r\n                this.scrollToPage(null !== pageIndex && void 0 !== pageIndex ? pageIndex : dataController.pageIndex())\r\n            });\r\n            dataController.dataSourceChanged.add(() => {\r\n                !this._scrollTop && this._scrollToCurrentPageOnResize()\r\n            });\r\n            null === (_dataController$state = dataController.stateLoaded) || void 0 === _dataController$state ? void 0 : _dataController$state.add(() => {\r\n                this._scrollToCurrentPageOnResize()\r\n            });\r\n            this._scrollToCurrentPageOnResize()\r\n        },\r\n        _scrollToCurrentPageOnResize: function() {\r\n            var dataController = this.getController(\"data\");\r\n            if (dataController.pageIndex() > 0) {\r\n                var resizeHandler = () => {\r\n                    this.resizeCompleted.remove(resizeHandler);\r\n                    this.scrollToPage(dataController.pageIndex())\r\n                };\r\n                this.resizeCompleted.add(resizeHandler)\r\n            }\r\n        },\r\n        scrollToPage: function(pageIndex) {\r\n            var dataController = this._dataController;\r\n            var pageSize = dataController ? dataController.pageSize() : 0;\r\n            var scrollPosition;\r\n            if (isVirtualMode(this) || isAppendMode(this)) {\r\n                var itemSize = dataController.getItemSize();\r\n                var itemSizes = dataController.getItemSizes();\r\n                var itemIndex = pageIndex * pageSize;\r\n                scrollPosition = itemIndex * itemSize;\r\n                for (var index in itemSizes) {\r\n                    if (index < itemIndex) {\r\n                        scrollPosition += itemSizes[index] - itemSize\r\n                    }\r\n                }\r\n            } else {\r\n                scrollPosition = 0\r\n            }\r\n            this.scrollTo({\r\n                y: scrollPosition,\r\n                x: this._scrollLeft\r\n            })\r\n        },\r\n        renderDelayedTemplates: function(e) {\r\n            this._updateContentPosition(true);\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _renderCore: function(e) {\r\n            var startRenderTime = new Date;\r\n            this.callBase.apply(this, arguments);\r\n            var dataSource = this._dataController._dataSource;\r\n            if (dataSource && e) {\r\n                var itemCount = e.items ? e.items.length : 20;\r\n                var viewportSize = this._dataController.viewportSize() || 20;\r\n                if (gridCoreUtils.isVirtualRowRendering(this) && itemCount > 0 && false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                    dataSource._renderTime = (new Date - startRenderTime) * viewportSize / itemCount\r\n                } else {\r\n                    dataSource._renderTime = new Date - startRenderTime\r\n                }\r\n            }\r\n        },\r\n        _getRowElements: function(tableElement) {\r\n            var $rows = this.callBase(tableElement);\r\n            return $rows && $rows.not(\".\" + VIRTUAL_ROW_CLASS)\r\n        },\r\n        _removeRowsElements: function(contentTable, removeCount, changeType) {\r\n            var rowElements = this._getRowElements(contentTable).toArray();\r\n            if (\"append\" === changeType) {\r\n                rowElements = rowElements.slice(0, removeCount)\r\n            } else {\r\n                rowElements = rowElements.slice(-removeCount)\r\n            }\r\n            var errorHandlingController = this.getController(\"errorHandling\");\r\n            rowElements.map(rowElement => {\r\n                var $rowElement = $(rowElement);\r\n                errorHandlingController && errorHandlingController.removeErrorRow($rowElement.next());\r\n                $rowElement.remove()\r\n            })\r\n        },\r\n        _updateContent: function(tableElement, change) {\r\n            var $freeSpaceRowElements;\r\n            var contentElement = this._findContentElement();\r\n            var changeType = change && change.changeType;\r\n            var contentTable = contentElement.children().first();\r\n            if (\"append\" === changeType || \"prepend\" === changeType) {\r\n                var $tBodies = this._getBodies(tableElement);\r\n                if (1 === $tBodies.length) {\r\n                    this._getBodies(contentTable)[\"append\" === changeType ? \"append\" : \"prepend\"]($tBodies.children())\r\n                } else {\r\n                    $tBodies[\"append\" === changeType ? \"appendTo\" : \"prependTo\"](contentTable)\r\n                }\r\n                tableElement.remove();\r\n                $freeSpaceRowElements = this._getFreeSpaceRowElements(contentTable);\r\n                removeEmptyRows($freeSpaceRowElements, FREESPACE_CLASS);\r\n                if (change.removeCount) {\r\n                    this._removeRowsElements(contentTable, change.removeCount, changeType)\r\n                }\r\n                this._restoreErrorRow(contentTable)\r\n            } else {\r\n                this.callBase.apply(this, arguments);\r\n                if (\"update\" === changeType) {\r\n                    this._restoreErrorRow(contentTable)\r\n                }\r\n            }\r\n            this._updateBottomLoading()\r\n        },\r\n        _addVirtualRow: function($table, isFixed, location, position) {\r\n            if (!position) {\r\n                return\r\n            }\r\n            var $virtualRow = this._createEmptyRow(VIRTUAL_ROW_CLASS, isFixed, position);\r\n            $virtualRow = this._wrapRowIfNeed($table, $virtualRow);\r\n            this._appendEmptyRow($table, $virtualRow, location)\r\n        },\r\n        _getRowHeights: function() {\r\n            var rowHeights = this._getRowElements(this._tableElement).toArray().map((function(row) {\r\n                return getBoundingRect(row).height\r\n            }));\r\n            return rowHeights\r\n        },\r\n        _correctRowHeights: function(rowHeights) {\r\n            var dataController = this._dataController;\r\n            var dataSource = dataController._dataSource;\r\n            var correctedRowHeights = [];\r\n            var visibleRows = dataController.getVisibleRows();\r\n            var itemSize = 0;\r\n            var firstCountableItem = true;\r\n            var lastLoadIndex = -1;\r\n            for (var i = 0; i < rowHeights.length; i++) {\r\n                var currentItem = visibleRows[i];\r\n                if (!isDefined(currentItem)) {\r\n                    continue\r\n                }\r\n                if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                    if (lastLoadIndex >= 0 && lastLoadIndex !== currentItem.loadIndex) {\r\n                        correctedRowHeights.push(itemSize);\r\n                        itemSize = 0\r\n                    }\r\n                    lastLoadIndex = currentItem.loadIndex\r\n                } else if (isItemCountableByDataSource(currentItem, dataSource)) {\r\n                    if (firstCountableItem) {\r\n                        firstCountableItem = false\r\n                    } else {\r\n                        correctedRowHeights.push(itemSize);\r\n                        itemSize = 0\r\n                    }\r\n                }\r\n                itemSize += rowHeights[i]\r\n            }\r\n            itemSize > 0 && correctedRowHeights.push(itemSize);\r\n            return correctedRowHeights\r\n        },\r\n        _updateContentPosition: function(isRender) {\r\n            var dataController = this._dataController;\r\n            var rowHeight = this._rowHeight || 20;\r\n            dataController.viewportItemSize(rowHeight);\r\n            if (isVirtualMode(this) || gridCoreUtils.isVirtualRowRendering(this)) {\r\n                if (!isRender) {\r\n                    var rowHeights = this._getRowHeights();\r\n                    var correctedRowHeights = this._correctRowHeights(rowHeights);\r\n                    dataController.setContentItemSizes(correctedRowHeights)\r\n                }\r\n                var top = dataController.getContentOffset(\"begin\");\r\n                var bottom = dataController.getContentOffset(\"end\");\r\n                var $tables = this.getTableElements();\r\n                var $virtualRows = $tables.children(\"tbody\").children(\".\" + VIRTUAL_ROW_CLASS);\r\n                removeEmptyRows($virtualRows, VIRTUAL_ROW_CLASS);\r\n                $tables.each((index, element) => {\r\n                    var isFixed = index > 0;\r\n                    this._isFixedTableRendering = isFixed;\r\n                    this._addVirtualRow($(element), isFixed, \"top\", top);\r\n                    this._addVirtualRow($(element), isFixed, \"bottom\", bottom);\r\n                    this._isFixedTableRendering = false\r\n                })\r\n            }\r\n        },\r\n        _isTableLinesDisplaysCorrect: function(table) {\r\n            var hasColumnLines = table.find(\".\" + COLUMN_LINES_CLASS).length > 0;\r\n            return hasColumnLines === this.option(\"showColumnLines\")\r\n        },\r\n        _isColumnElementsEqual: function($columns, $virtualColumns) {\r\n            var result = $columns.length === $virtualColumns.length;\r\n            if (result) {\r\n                each($columns, (function(index, element) {\r\n                    if (element.style.width !== $virtualColumns[index].style.width) {\r\n                        result = false;\r\n                        return result\r\n                    }\r\n                }))\r\n            }\r\n            return result\r\n        },\r\n        _getCellClasses: function(column) {\r\n            var classes = [];\r\n            var cssClass = column.cssClass;\r\n            var isExpandColumn = \"expand\" === column.command;\r\n            cssClass && classes.push(cssClass);\r\n            isExpandColumn && classes.push(this.addWidgetPrefix(GROUP_SPACE_CLASS));\r\n            return classes\r\n        },\r\n        _findBottomLoadPanel: function($contentElement) {\r\n            var $element = $contentElement || this.element();\r\n            var $bottomLoadPanel = $element && $element.find(\".\" + this.addWidgetPrefix(BOTTOM_LOAD_PANEL_CLASS));\r\n            if ($bottomLoadPanel && $bottomLoadPanel.length) {\r\n                return $bottomLoadPanel\r\n            }\r\n        },\r\n        _updateBottomLoading: function() {\r\n            var virtualMode = isVirtualMode(this);\r\n            var appendMode = isAppendMode(this);\r\n            var showBottomLoading = !this._dataController.hasKnownLastPage() && this._dataController.isLoaded() && (virtualMode || appendMode);\r\n            var $contentElement = this._findContentElement();\r\n            var bottomLoadPanelElement = this._findBottomLoadPanel($contentElement);\r\n            if (showBottomLoading) {\r\n                if (!bottomLoadPanelElement) {\r\n                    $(\"<div>\").addClass(this.addWidgetPrefix(BOTTOM_LOAD_PANEL_CLASS)).append(this._createComponent($(\"<div>\"), LoadIndicator).$element()).appendTo($contentElement)\r\n                }\r\n            } else if (bottomLoadPanelElement) {\r\n                bottomLoadPanelElement.remove()\r\n            }\r\n        },\r\n        _handleScroll: function(e) {\r\n            var legacyScrollingMode = true === this.option(LEGACY_SCROLLING_MODE);\r\n            var zeroTopPosition = 0 === e.scrollOffset.top;\r\n            if ((this._hasHeight || !legacyScrollingMode && zeroTopPosition) && this._rowHeight) {\r\n                this._dataController.setViewportPosition(e.scrollOffset.top)\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _needUpdateRowHeight: function(itemsCount) {\r\n            return this.callBase.apply(this, arguments) || itemsCount > 0 && isAppendMode(this) && !gridCoreUtils.isVirtualRowRendering(this)\r\n        },\r\n        _updateRowHeight: function() {\r\n            this.callBase.apply(this, arguments);\r\n            if (this._rowHeight) {\r\n                this._updateContentPosition();\r\n                var viewportHeight = this._hasHeight ? getOuterHeight(this.element()) : getOuterHeight(getWindow());\r\n                var dataController = this._dataController;\r\n                if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                    dataController.viewportHeight(viewportHeight);\r\n                    dataController.updateViewport()\r\n                } else {\r\n                    dataController.viewportSize(Math.ceil(viewportHeight / this._rowHeight))\r\n                }\r\n            }\r\n        },\r\n        updateFreeSpaceRowHeight: function() {\r\n            var result = this.callBase.apply(this, arguments);\r\n            if (result) {\r\n                this._updateContentPosition()\r\n            }\r\n            return result\r\n        },\r\n        setLoading: function(isLoading, messageText) {\r\n            var dataController = this._dataController;\r\n            var hasBottomLoadPanel = dataController.pageIndex() > 0 && dataController.isLoaded() && !!this._findBottomLoadPanel();\r\n            if (false === this.option(LEGACY_SCROLLING_MODE) && isLoading && dataController.isViewportChanging()) {\r\n                return\r\n            }\r\n            if (hasBottomLoadPanel) {\r\n                isLoading = false\r\n            }\r\n            this.callBase.call(this, isLoading, messageText)\r\n        },\r\n        _resizeCore: function() {\r\n            var that = this;\r\n            var $element = that.element();\r\n            that.callBase();\r\n            if (that.component.$element() && !that._windowScroll && $element.closest(getWindow().document).length) {\r\n                that._windowScroll = subscribeToExternalScrollers($element, (function(scrollPos) {\r\n                    if (!that._hasHeight && that._rowHeight) {\r\n                        that._dataController.setViewportPosition(scrollPos)\r\n                    }\r\n                }), that.component.$element());\r\n                that.on(\"disposing\", (function() {\r\n                    that._windowScroll.dispose()\r\n                }))\r\n            }\r\n            if (false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                that.loadIfNeed()\r\n            }\r\n        },\r\n        loadIfNeed: function() {\r\n            var _dataController$loadI;\r\n            var dataController = this._dataController;\r\n            null === dataController || void 0 === dataController ? void 0 : null === (_dataController$loadI = dataController.loadIfNeed) || void 0 === _dataController$loadI ? void 0 : _dataController$loadI.call(dataController)\r\n        },\r\n        setColumnWidths: function(widths) {\r\n            var scrollable = this.getScrollable();\r\n            var $content;\r\n            this.callBase.apply(this, arguments);\r\n            if (\"virtual\" === this.option(\"scrolling.mode\")) {\r\n                $content = scrollable ? $(scrollable.content()) : this.element();\r\n                this.callBase(widths, $content.children(\".\" + this.addWidgetPrefix(CONTENT_CLASS)).children(\":not(.\" + this.addWidgetPrefix(TABLE_CONTENT_CLASS) + \")\"))\r\n            }\r\n        },\r\n        _restoreErrorRow: function() {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                var errorHandling = this.getController(\"errorHandling\");\r\n                null === errorHandling || void 0 === errorHandling ? void 0 : errorHandling.removeErrorRow()\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._scrollTimeoutID);\r\n            this.callBase()\r\n        }\r\n    }\r\n}();\r\nexport var virtualScrollingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            scrolling: {\r\n                timeout: 300,\r\n                updateTimeout: 300,\r\n                minTimeout: 0,\r\n                renderingThreshold: 100,\r\n                removeInvisiblePages: true,\r\n                rowPageSize: 5,\r\n                prerenderedRowChunkSize: 1,\r\n                mode: \"standard\",\r\n                preloadEnabled: false,\r\n                rowRenderingMode: \"standard\",\r\n                loadTwoPagesOnStart: false,\r\n                legacyMode: false,\r\n                prerenderedRowCount: 1\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        dataSourceAdapter: VirtualScrollingDataSourceAdapterExtender,\r\n        controllers: {\r\n            data: function() {\r\n                var members = {\r\n                    _refreshDataSource: function() {\r\n                        var baseResult = this.callBase.apply(this, arguments) || (new Deferred).resolve().promise();\r\n                        baseResult.done(this.initVirtualRows.bind(this));\r\n                        return baseResult\r\n                    },\r\n                    _loadDataSource: function() {\r\n                        if (this._rowsScrollController) {\r\n                            var _this$getLoadPagePara, _this$_dataSource;\r\n                            var {\r\n                                loadPageCount: loadPageCount\r\n                            } = null !== (_this$getLoadPagePara = this.getLoadPageParams()) && void 0 !== _this$getLoadPagePara ? _this$getLoadPagePara : {};\r\n                            loadPageCount >= 1 && (null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.loadPageCount(loadPageCount))\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    getRowPageSize: function() {\r\n                        var rowPageSize = this.option(\"scrolling.rowPageSize\");\r\n                        var pageSize = this.pageSize();\r\n                        return pageSize && pageSize < rowPageSize ? pageSize : rowPageSize\r\n                    },\r\n                    reload: function() {\r\n                        var rowsScrollController = this._rowsScrollController || this._dataSource;\r\n                        var itemIndex = rowsScrollController && rowsScrollController.getItemIndexByPosition();\r\n                        var result = this.callBase.apply(this, arguments);\r\n                        return result && result.done(() => {\r\n                            if (isVirtualMode(this) || gridCoreUtils.isVirtualRowRendering(this)) {\r\n                                var rowIndexOffset = this.getRowIndexOffset();\r\n                                var rowIndex = Math.floor(itemIndex) - rowIndexOffset;\r\n                                var component = this.component;\r\n                                var scrollable = component.getScrollable && component.getScrollable();\r\n                                var isSortingOperation = this.dataSource().operationTypes().sorting;\r\n                                if (scrollable && !isSortingOperation) {\r\n                                    var rowElement = component.getRowElement(rowIndex);\r\n                                    var $rowElement = rowElement && rowElement[0] && $(rowElement[0]);\r\n                                    var top = $rowElement && $rowElement.position().top;\r\n                                    var isChromeLatest = browser.chrome && browser.version >= 91;\r\n                                    var allowedTopOffset = browser.mozilla || isChromeLatest ? 1 : 0;\r\n                                    if (top > allowedTopOffset) {\r\n                                        top = Math.round(top + getOuterHeight($rowElement) * (itemIndex % 1));\r\n                                        scrollable.scrollTo({\r\n                                            y: top\r\n                                        })\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                    },\r\n                    initVirtualRows: function() {\r\n                        var virtualRowsRendering = gridCoreUtils.isVirtualRowRendering(this);\r\n                        this._allItems = null;\r\n                        this._loadViewportParams = null;\r\n                        if (\"virtual\" !== this.option(\"scrolling.mode\") && true !== virtualRowsRendering || false === virtualRowsRendering || false !== this.option(LEGACY_SCROLLING_MODE) && !this.option(\"scrolling.rowPageSize\")) {\r\n                            this._visibleItems = null;\r\n                            this._rowsScrollController = null;\r\n                            return\r\n                        }\r\n                        var pageIndex = !isVirtualMode(this) && this.pageIndex() >= this.pageCount() ? this.pageCount() - 1 : this.pageIndex();\r\n                        this._rowPageIndex = Math.ceil(pageIndex * this.pageSize() / this.getRowPageSize());\r\n                        this._visibleItems = false === this.option(LEGACY_SCROLLING_MODE) ? null : [];\r\n                        this._viewportChanging = false;\r\n                        this._needUpdateViewportAfterLoading = false;\r\n                        if (!this._rowsScrollController) {\r\n                            this._rowsScrollController = new VirtualScrollController(this.component, this._getRowsScrollDataOptions(), true);\r\n                            this._rowsScrollController.positionChanged.add(() => {\r\n                                var _this$_dataSource2;\r\n                                if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                                    this._viewportChanging = true;\r\n                                    this.loadViewport();\r\n                                    this._viewportChanging = false;\r\n                                    return\r\n                                }\r\n                                null === (_this$_dataSource2 = this._dataSource) || void 0 === _this$_dataSource2 ? void 0 : _this$_dataSource2.setViewportItemIndex(this._rowsScrollController.getViewportItemIndex())\r\n                            })\r\n                        }\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            this._updateLoadViewportParams()\r\n                        }\r\n                        if (this.isLoaded() && false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                            this._rowsScrollController.load()\r\n                        }\r\n                    },\r\n                    isViewportChanging: function() {\r\n                        return this._viewportChanging\r\n                    },\r\n                    _getRowsScrollDataOptions: function() {\r\n                        var that = this;\r\n                        var isItemCountable = function(item) {\r\n                            return isItemCountableByDataSource(item, that._dataSource)\r\n                        };\r\n                        return {\r\n                            pageSize: function() {\r\n                                return that.getRowPageSize()\r\n                            },\r\n                            loadedOffset: function() {\r\n                                var _that$_dataSource;\r\n                                return isVirtualMode(that) && (null === (_that$_dataSource = that._dataSource) || void 0 === _that$_dataSource ? void 0 : _that$_dataSource.lastLoadOptions().skip) || 0\r\n                            },\r\n                            loadedItemCount: function() {\r\n                                return that._itemCount\r\n                            },\r\n                            totalItemsCount: function() {\r\n                                if (isVirtualPaging(that)) {\r\n                                    return that.totalItemsCount()\r\n                                }\r\n                                return false === that.option(LEGACY_SCROLLING_MODE) ? that._itemCount : that._items.filter(isItemCountable).length\r\n                            },\r\n                            hasKnownLastPage: function() {\r\n                                return true\r\n                            },\r\n                            pageIndex: function(index) {\r\n                                if (void 0 !== index) {\r\n                                    that._rowPageIndex = index\r\n                                }\r\n                                return that._rowPageIndex\r\n                            },\r\n                            isLoading: function() {\r\n                                return that.isLoading()\r\n                            },\r\n                            pageCount: function() {\r\n                                var pageCount = Math.ceil(this.totalItemsCount() / this.pageSize());\r\n                                return pageCount ? pageCount : 1\r\n                            },\r\n                            load: function() {\r\n                                if (that._rowsScrollController.pageIndex() >= this.pageCount()) {\r\n                                    that._rowPageIndex = this.pageCount() - 1;\r\n                                    that._rowsScrollController.pageIndex(that._rowPageIndex)\r\n                                }\r\n                                if (!this.items().length && this.totalItemsCount()) {\r\n                                    return\r\n                                }\r\n                                that._rowsScrollController.handleDataChanged(change => {\r\n                                    change = change || {};\r\n                                    change.changeType = change.changeType || \"refresh\";\r\n                                    change.items = change.items || that._visibleItems;\r\n                                    that._visibleItems.forEach((item, index) => {\r\n                                        item.rowIndex = index\r\n                                    });\r\n                                    that._fireChanged(change)\r\n                                })\r\n                            },\r\n                            updateLoading: function() {},\r\n                            itemsCount: function() {\r\n                                return this.items(true).length\r\n                            },\r\n                            correctCount: function(items, count, fromEnd) {\r\n                                return _correctCount(items, count, fromEnd, (item, isNextAfterLast, fromEnd) => {\r\n                                    if (item.isNewRow) {\r\n                                        return isNextAfterLast && !fromEnd\r\n                                    }\r\n                                    if (isNextAfterLast && fromEnd) {\r\n                                        return !item.isNewRow\r\n                                    }\r\n                                    return isItemCountable(item)\r\n                                })\r\n                            },\r\n                            items: function(countableOnly) {\r\n                                var result = that._items;\r\n                                if (that.option(LEGACY_SCROLLING_MODE)) {\r\n                                    var dataSource = that.dataSource();\r\n                                    var virtualItemsCount = null === dataSource || void 0 === dataSource ? void 0 : dataSource.virtualItemsCount();\r\n                                    var begin = virtualItemsCount ? virtualItemsCount.begin : 0;\r\n                                    var rowPageSize = that.getRowPageSize();\r\n                                    var skip = that._rowPageIndex * rowPageSize - begin;\r\n                                    var take = rowPageSize;\r\n                                    if (skip < 0) {\r\n                                        return []\r\n                                    }\r\n                                    if (skip) {\r\n                                        skip = this.correctCount(result, skip);\r\n                                        result = result.slice(skip)\r\n                                    }\r\n                                    if (take) {\r\n                                        take = this.correctCount(result, take);\r\n                                        result = result.slice(0, take)\r\n                                    }\r\n                                }\r\n                                return countableOnly ? result.filter(isItemCountable) : result\r\n                            },\r\n                            viewportItems: function(items) {\r\n                                if (items && false !== that.option(LEGACY_SCROLLING_MODE)) {\r\n                                    that._visibleItems = items\r\n                                }\r\n                                return that._visibleItems\r\n                            },\r\n                            onChanged: function() {},\r\n                            changingDuration: function(e) {\r\n                                var dataSource = that.dataSource();\r\n                                if (null !== dataSource && void 0 !== dataSource && dataSource.isLoading() && false !== that.option(LEGACY_SCROLLING_MODE)) {\r\n                                    return LOAD_TIMEOUT\r\n                                }\r\n                                return (null === dataSource || void 0 === dataSource ? void 0 : dataSource._renderTime) || 0\r\n                            }\r\n                        }\r\n                    },\r\n                    _updateItemsCore: function(change) {\r\n                        var delta = this.getRowIndexDelta();\r\n                        this.callBase.apply(this, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && gridCoreUtils.isVirtualRowRendering(this)) {\r\n                            if (\"update\" === change.changeType && 0 === change.rowIndices.length && change.cancelEmptyChanges) {\r\n                                change.cancel = true\r\n                            }\r\n                            return\r\n                        }\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            var visibleItems = this._visibleItems;\r\n                            var isRefresh = \"refresh\" === change.changeType || change.isLiveUpdate;\r\n                            if (\"append\" === change.changeType && change.items && !change.items.length) {\r\n                                return\r\n                            }\r\n                            if (isRefresh || \"append\" === change.changeType || \"prepend\" === change.changeType) {\r\n                                change.cancel = true;\r\n                                isRefresh && rowsScrollController.reset(true);\r\n                                rowsScrollController.load()\r\n                            } else {\r\n                                if (\"update\" === change.changeType) {\r\n                                    change.rowIndices.forEach((rowIndex, index) => {\r\n                                        var changeType = change.changeTypes[index];\r\n                                        var newItem = change.items[index];\r\n                                        if (\"update\" === changeType) {\r\n                                            visibleItems[rowIndex] = newItem\r\n                                        } else if (\"insert\" === changeType) {\r\n                                            visibleItems.splice(rowIndex, 0, newItem)\r\n                                        } else if (\"remove\" === changeType) {\r\n                                            visibleItems.splice(rowIndex, 1)\r\n                                        }\r\n                                    })\r\n                                } else {\r\n                                    visibleItems.forEach((item, index) => {\r\n                                        visibleItems[index] = this._items[index + delta] || visibleItems[index]\r\n                                    });\r\n                                    change.items = visibleItems\r\n                                }\r\n                                updateItemIndices(visibleItems)\r\n                            }\r\n                        }\r\n                    },\r\n                    _updateLoadViewportParams: function() {\r\n                        var viewportParams = this._rowsScrollController.getViewportParams();\r\n                        var pageSize = this.pageSize();\r\n                        if (viewportParams && !isVirtualPaging(this) && pageSize > 0) {\r\n                            var pageOffset = this.pageIndex() * pageSize;\r\n                            viewportParams.skip += pageOffset\r\n                        }\r\n                        this._loadViewportParams = viewportParams\r\n                    },\r\n                    _processItems: function(items) {\r\n                        var newItems = this.callBase.apply(this, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            var _dataSource$lastLoadO;\r\n                            var dataSource = this._dataSource;\r\n                            var currentIndex = null !== (_dataSource$lastLoadO = null === dataSource || void 0 === dataSource ? void 0 : dataSource.lastLoadOptions().skip) && void 0 !== _dataSource$lastLoadO ? _dataSource$lastLoadO : 0;\r\n                            var prevCountable;\r\n                            var prevRowType;\r\n                            var isPrevRowNew;\r\n                            var wasCountableItem = false;\r\n                            newItems.forEach(item => {\r\n                                var rowType = item.rowType;\r\n                                var itemCountable = isItemCountableByDataSource(item, dataSource);\r\n                                if (!item.isNewRow && isDefined(prevCountable)) {\r\n                                    var isNextGroupItem = \"group\" === rowType && (prevCountable || itemCountable || \"group\" !== prevRowType && currentIndex > 0);\r\n                                    var isNextDataItem = \"data\" === rowType && itemCountable && (prevCountable || \"group\" !== prevRowType);\r\n                                    var isPrevNewRowFirst = isPrevRowNew && !wasCountableItem;\r\n                                    if (isNextGroupItem || isNextDataItem) {\r\n                                        wasCountableItem = true;\r\n                                        if (!isPrevNewRowFirst) {\r\n                                            currentIndex++\r\n                                        }\r\n                                    }\r\n                                }\r\n                                item.loadIndex = currentIndex;\r\n                                prevCountable = itemCountable;\r\n                                prevRowType = rowType;\r\n                                isPrevRowNew = item.isNewRow\r\n                            })\r\n                        }\r\n                        return newItems\r\n                    },\r\n                    _afterProcessItems: function(items) {\r\n                        this._itemCount = items.filter(item => isItemCountableByDataSource(item, this._dataSource)).length;\r\n                        if (isDefined(this._loadViewportParams)) {\r\n                            this._updateLoadViewportParams();\r\n                            var result = items;\r\n                            this._allItems = items;\r\n                            if (items.length) {\r\n                                var {\r\n                                    skipForCurrentPage: skipForCurrentPage\r\n                                } = this.getLoadPageParams(true);\r\n                                var skip = items[0].loadIndex + skipForCurrentPage;\r\n                                var take = this._loadViewportParams.take;\r\n                                result = items.filter(it => {\r\n                                    var isNewRowOnStart = it.isNewRow && it.loadIndex >= skip - 1;\r\n                                    var isNewRowInEmptyData = it.isNewRow && it.loadIndex === skip && 0 === take;\r\n                                    var isLoadIndexGreaterStart = it.loadIndex >= skip || isNewRowOnStart;\r\n                                    var isLoadIndexLessEnd = it.loadIndex < skip + take || isNewRowInEmptyData;\r\n                                    return isLoadIndexGreaterStart && isLoadIndexLessEnd\r\n                                })\r\n                            }\r\n                            return result\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    _applyChange: function(change) {\r\n                        var that = this;\r\n                        var items = change.items;\r\n                        var changeType = change.changeType;\r\n                        var removeCount = change.removeCount;\r\n                        if (removeCount) {\r\n                            var fromEnd = \"prepend\" === changeType;\r\n                            removeCount = _correctCount(that._items, removeCount, fromEnd, (function(item, isNextAfterLast) {\r\n                                return \"data\" === item.rowType && !item.isNewRow || \"group\" === item.rowType && (that._dataSource.isGroupItemCountable(item.data) || isNextAfterLast)\r\n                            }));\r\n                            change.removeCount = removeCount\r\n                        }\r\n                        switch (changeType) {\r\n                            case \"prepend\":\r\n                                that._items.unshift.apply(that._items, items);\r\n                                if (removeCount) {\r\n                                    that._items.splice(-removeCount)\r\n                                }\r\n                                break;\r\n                            case \"append\":\r\n                                that._items.push.apply(that._items, items);\r\n                                if (removeCount) {\r\n                                    that._items.splice(0, removeCount)\r\n                                }\r\n                                break;\r\n                            default:\r\n                                that.callBase(change)\r\n                        }\r\n                    },\r\n                    items: function(allItems) {\r\n                        return allItems ? this._allItems || this._items : this._visibleItems || this._items\r\n                    },\r\n                    getRowIndexDelta: function() {\r\n                        var delta = 0;\r\n                        if (this.option(LEGACY_SCROLLING_MODE)) {\r\n                            var visibleItems = this._visibleItems;\r\n                            if (visibleItems && visibleItems[0]) {\r\n                                delta = this._items.indexOf(visibleItems[0])\r\n                            }\r\n                        }\r\n                        return delta < 0 ? 0 : delta\r\n                    },\r\n                    getRowIndexOffset: function(byLoadedRows) {\r\n                        var offset = 0;\r\n                        var dataSource = this.dataSource();\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var newMode = false === this.option(LEGACY_SCROLLING_MODE);\r\n                        var virtualPaging = isVirtualPaging(this);\r\n                        if (rowsScrollController && !byLoadedRows) {\r\n                            if (newMode && isDefined(this._loadViewportParams)) {\r\n                                var {\r\n                                    skipForCurrentPage: skipForCurrentPage,\r\n                                    pageIndex: pageIndex\r\n                                } = this.getLoadPageParams(true);\r\n                                var items = this.items(true);\r\n                                offset = virtualPaging ? pageIndex * this.pageSize() : 0;\r\n                                if (items.length) {\r\n                                    var firstLoadIndex = items[0].loadIndex;\r\n                                    offset += items.filter(item => item.loadIndex < firstLoadIndex + skipForCurrentPage).length\r\n                                }\r\n                            } else {\r\n                                offset = rowsScrollController.beginPageIndex() * rowsScrollController.pageSize()\r\n                            }\r\n                        } else if (virtualPaging && newMode && dataSource) {\r\n                            var _dataSource$lastLoadO2;\r\n                            offset = null !== (_dataSource$lastLoadO2 = dataSource.lastLoadOptions().skip) && void 0 !== _dataSource$lastLoadO2 ? _dataSource$lastLoadO2 : 0\r\n                        } else if (isVirtualMode(this) && dataSource) {\r\n                            offset = dataSource.beginPageIndex() * dataSource.pageSize()\r\n                        }\r\n                        return offset\r\n                    },\r\n                    viewportSize: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var dataSource = this._dataSource;\r\n                        var result = null === rowsScrollController || void 0 === rowsScrollController ? void 0 : rowsScrollController.viewportSize.apply(rowsScrollController, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            return result\r\n                        }\r\n                        return null === dataSource || void 0 === dataSource ? void 0 : dataSource.viewportSize.apply(dataSource, arguments)\r\n                    },\r\n                    viewportHeight: function(height) {\r\n                        var _this$_rowsScrollCont;\r\n                        null === (_this$_rowsScrollCont = this._rowsScrollController) || void 0 === _this$_rowsScrollCont ? void 0 : _this$_rowsScrollCont.viewportHeight(height)\r\n                    },\r\n                    viewportItemSize: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var dataSource = this._dataSource;\r\n                        var result = null === rowsScrollController || void 0 === rowsScrollController ? void 0 : rowsScrollController.viewportItemSize.apply(rowsScrollController, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            return result\r\n                        }\r\n                        return null === dataSource || void 0 === dataSource ? void 0 : dataSource.viewportItemSize.apply(dataSource, arguments)\r\n                    },\r\n                    setViewportPosition: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var dataSource = this._dataSource;\r\n                        if (rowsScrollController) {\r\n                            rowsScrollController.setViewportPosition.apply(rowsScrollController, arguments)\r\n                        } else {\r\n                            null === dataSource || void 0 === dataSource ? void 0 : dataSource.setViewportPosition.apply(dataSource, arguments)\r\n                        }\r\n                    },\r\n                    setContentItemSizes: function(sizes) {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var dataSource = this._dataSource;\r\n                        var result = null === rowsScrollController || void 0 === rowsScrollController ? void 0 : rowsScrollController.setContentItemSizes(sizes);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            return result\r\n                        }\r\n                        return null === dataSource || void 0 === dataSource ? void 0 : dataSource.setContentItemSizes(sizes)\r\n                    },\r\n                    getPreloadedRowCount: function() {\r\n                        var preloadCount = this.option(\"scrolling.preloadedRowCount\");\r\n                        var preloadEnabled = this.option(\"scrolling.preloadEnabled\");\r\n                        if (isDefined(preloadCount)) {\r\n                            return preloadCount\r\n                        }\r\n                        var viewportSize = this.viewportSize();\r\n                        return preloadEnabled ? 2 * viewportSize : viewportSize\r\n                    },\r\n                    getLoadPageParams: function(byLoadedPage) {\r\n                        var _this$_dataSource3, _this$_dataSource4;\r\n                        var pageSize = this.pageSize();\r\n                        var viewportParams = this._loadViewportParams;\r\n                        var lastLoadOptions = null === (_this$_dataSource3 = this._dataSource) || void 0 === _this$_dataSource3 ? void 0 : _this$_dataSource3.lastLoadOptions();\r\n                        var loadedPageIndex = (null === lastLoadOptions || void 0 === lastLoadOptions ? void 0 : lastLoadOptions.pageIndex) || 0;\r\n                        var loadedTake = (null === lastLoadOptions || void 0 === lastLoadOptions ? void 0 : lastLoadOptions.take) || 0;\r\n                        var isScrollingBack = this._rowsScrollController.isScrollingBack();\r\n                        var topPreloadCount = isScrollingBack ? this.getPreloadedRowCount() : 0;\r\n                        var bottomPreloadCount = isScrollingBack ? 0 : this.getPreloadedRowCount();\r\n                        var totalCountCorrection = (null === (_this$_dataSource4 = this._dataSource) || void 0 === _this$_dataSource4 ? void 0 : _this$_dataSource4.totalCountCorrection()) || 0;\r\n                        var skipWithPreload = Math.max(0, viewportParams.skip - topPreloadCount);\r\n                        var pageIndex = byLoadedPage ? loadedPageIndex : Math.floor(pageSize ? skipWithPreload / pageSize : 0);\r\n                        var pageOffset = pageIndex * pageSize;\r\n                        var skipForCurrentPage = viewportParams.skip - pageOffset;\r\n                        var loadingTake = viewportParams.take + skipForCurrentPage + bottomPreloadCount - totalCountCorrection;\r\n                        var take = byLoadedPage ? loadedTake : loadingTake;\r\n                        var loadPageCount = Math.ceil(pageSize ? take / pageSize : 0);\r\n                        return {\r\n                            pageIndex: pageIndex,\r\n                            loadPageCount: Math.max(1, loadPageCount),\r\n                            skipForCurrentPage: Math.max(0, skipForCurrentPage)\r\n                        }\r\n                    },\r\n                    _updateVisiblePageIndex: function(currentPageIndex) {\r\n                        if (!this._rowsScrollController) {\r\n                            return\r\n                        }\r\n                        if (isDefined(currentPageIndex)) {\r\n                            this._silentOption(VISIBLE_PAGE_INDEX, currentPageIndex);\r\n                            this.pageChanged.fire();\r\n                            return\r\n                        }\r\n                        var viewPortItemIndex = this._rowsScrollController.getViewportItemIndex();\r\n                        var newPageIndex = Math.floor(viewPortItemIndex / this.pageSize());\r\n                        if (this.pageIndex() !== newPageIndex) {\r\n                            this._silentOption(VISIBLE_PAGE_INDEX, newPageIndex);\r\n                            this.updateItems({\r\n                                changeType: \"pageIndex\"\r\n                            })\r\n                        }\r\n                    },\r\n                    _getChangedLoadParams: function() {\r\n                        var loadedPageParams = this.getLoadPageParams(true);\r\n                        var {\r\n                            pageIndex: pageIndex,\r\n                            loadPageCount: loadPageCount\r\n                        } = this.getLoadPageParams();\r\n                        var result = null;\r\n                        if (!this._isLoading && (pageIndex !== loadedPageParams.pageIndex || loadPageCount !== loadedPageParams.loadPageCount)) {\r\n                            result = {\r\n                                pageIndex: pageIndex,\r\n                                loadPageCount: loadPageCount\r\n                            }\r\n                        }\r\n                        return result\r\n                    },\r\n                    _loadItems: function(checkLoading) {\r\n                        var _dataSourceAdapter$lo, _dataSourceAdapter$pa;\r\n                        var virtualPaging = isVirtualPaging(this);\r\n                        var dataSourceAdapter = this._dataSource;\r\n                        var changedParams = this._getChangedLoadParams();\r\n                        var currentLoadPageCount = null !== (_dataSourceAdapter$lo = null === dataSourceAdapter || void 0 === dataSourceAdapter ? void 0 : dataSourceAdapter.loadPageCount()) && void 0 !== _dataSourceAdapter$lo ? _dataSourceAdapter$lo : 0;\r\n                        var lastRequiredItemCount = this.pageSize() * currentLoadPageCount;\r\n                        var currentPageIndex = null !== (_dataSourceAdapter$pa = null === dataSourceAdapter || void 0 === dataSourceAdapter ? void 0 : dataSourceAdapter.pageIndex()) && void 0 !== _dataSourceAdapter$pa ? _dataSourceAdapter$pa : 0;\r\n                        var pageIndexNotChanged = (null === changedParams || void 0 === changedParams ? void 0 : changedParams.pageIndex) === currentPageIndex;\r\n                        var allLoadedInAppendMode = isAppendMode(this) && this.totalItemsCount() < lastRequiredItemCount;\r\n                        var result = false;\r\n                        if (!dataSourceAdapter || virtualPaging && checkLoading && ((null === changedParams || void 0 === changedParams ? void 0 : changedParams.pageIndex) > currentPageIndex || pageIndexNotChanged && allLoadedInAppendMode)) {\r\n                            return result\r\n                        }\r\n                        if (virtualPaging && this._isLoading) {\r\n                            this._needUpdateViewportAfterLoading = true\r\n                        }\r\n                        if (virtualPaging && changedParams) {\r\n                            result = true;\r\n                            dataSourceAdapter.pageIndex(changedParams.pageIndex);\r\n                            dataSourceAdapter.loadPageCount(changedParams.loadPageCount);\r\n                            this._repaintChangesOnly = true;\r\n                            this._needUpdateDimensions = true;\r\n                            var viewportChanging = this._viewportChanging;\r\n                            this.load().always(() => {\r\n                                this._repaintChangesOnly = void 0;\r\n                                this._needUpdateDimensions = void 0\r\n                            }).done(() => {\r\n                                var isLastPage = this.pageCount() > 0 && this.pageIndex() === this.pageCount() - 1;\r\n                                (viewportChanging || isLastPage) && this._updateVisiblePageIndex();\r\n                                if (this._needUpdateViewportAfterLoading) {\r\n                                    this._needUpdateViewportAfterLoading = false;\r\n                                    this.loadViewport({\r\n                                        checkLoadedParamsOnly: true\r\n                                    })\r\n                                }\r\n                            })\r\n                        }\r\n                        return result\r\n                    },\r\n                    loadViewport: function(params) {\r\n                        var {\r\n                            checkLoadedParamsOnly: checkLoadedParamsOnly,\r\n                            checkLoading: checkLoading\r\n                        } = null !== params && void 0 !== params ? params : {};\r\n                        var virtualPaging = isVirtualPaging(this);\r\n                        if (virtualPaging || gridCoreUtils.isVirtualRowRendering(this)) {\r\n                            this._updateLoadViewportParams();\r\n                            var loadingItemsStarted = this._loadItems(checkLoading);\r\n                            if (!loadingItemsStarted && !(this._isLoading && checkLoading) && !checkLoadedParamsOnly) {\r\n                                this.updateItems({\r\n                                    repaintChangesOnly: true,\r\n                                    needUpdateDimensions: true,\r\n                                    useProcessedItemsCache: true,\r\n                                    cancelEmptyChanges: true\r\n                                })\r\n                            }\r\n                        }\r\n                    },\r\n                    updateViewport: function() {\r\n                        var _this$_loadViewportPa, _this$_loadViewportPa2;\r\n                        var viewportSize = this.viewportSize();\r\n                        var itemCount = this.items().length;\r\n                        var viewportIsNotFilled = viewportSize > itemCount;\r\n                        var currentTake = null !== (_this$_loadViewportPa = null === (_this$_loadViewportPa2 = this._loadViewportParams) || void 0 === _this$_loadViewportPa2 ? void 0 : _this$_loadViewportPa2.take) && void 0 !== _this$_loadViewportPa ? _this$_loadViewportPa : 0;\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var newTake = null === rowsScrollController || void 0 === rowsScrollController ? void 0 : rowsScrollController.getViewportParams().take;\r\n                        (viewportIsNotFilled || currentTake < newTake) && itemCount && this.loadViewport({\r\n                            checkLoading: true\r\n                        })\r\n                    },\r\n                    loadIfNeed: function() {\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            return\r\n                        }\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        rowsScrollController && rowsScrollController.loadIfNeed();\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.loadIfNeed()\r\n                    },\r\n                    getItemSize: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.getItemSize.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.getItemSize.apply(dataSource, arguments)\r\n                    },\r\n                    getItemSizes: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.getItemSizes.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.getItemSizes.apply(dataSource, arguments)\r\n                    },\r\n                    getContentOffset: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.getContentOffset.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.getContentOffset.apply(dataSource, arguments)\r\n                    },\r\n                    refresh: function(options) {\r\n                        var dataSource = this._dataSource;\r\n                        if (dataSource && options && options.load && isAppendMode(this)) {\r\n                            dataSource.resetCurrentTotalCount()\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    dispose: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        rowsScrollController && rowsScrollController.dispose();\r\n                        this.callBase.apply(this, arguments)\r\n                    },\r\n                    topItemIndex: function() {\r\n                        var _this$_loadViewportPa3;\r\n                        return null === (_this$_loadViewportPa3 = this._loadViewportParams) || void 0 === _this$_loadViewportPa3 ? void 0 : _this$_loadViewportPa3.skip\r\n                    },\r\n                    bottomItemIndex: function() {\r\n                        var viewportParams = this._loadViewportParams;\r\n                        return viewportParams && viewportParams.skip + viewportParams.take\r\n                    },\r\n                    virtualItemsCount: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.virtualItemsCount.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return null === dataSource || void 0 === dataSource ? void 0 : dataSource.virtualItemsCount.apply(dataSource, arguments)\r\n                    },\r\n                    pageIndex: function(_pageIndex) {\r\n                        var virtualPaging = isVirtualPaging(this);\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && virtualPaging && rowsScrollController) {\r\n                            if (void 0 === _pageIndex) {\r\n                                var _this$option;\r\n                                return null !== (_this$option = this.option(VISIBLE_PAGE_INDEX)) && void 0 !== _this$option ? _this$option : 0\r\n                            }\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    _fireChanged: function(e) {\r\n                        this.callBase.apply(this, arguments);\r\n                        var {\r\n                            operationTypes: operationTypes\r\n                        } = e;\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && isVirtualPaging(this) && operationTypes) {\r\n                            var {\r\n                                fullReload: fullReload,\r\n                                pageIndex: pageIndex\r\n                            } = operationTypes;\r\n                            if (e.isDataChanged && !fullReload && pageIndex) {\r\n                                this._updateVisiblePageIndex(this._dataSource.pageIndex())\r\n                            }\r\n                        }\r\n                    },\r\n                    _getPagingOptionValue: function(optionName) {\r\n                        var result = this.callBase.apply(this, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && isVirtualPaging(this)) {\r\n                            result = this[optionName]()\r\n                        }\r\n                        return result\r\n                    },\r\n                    isEmpty: function() {\r\n                        return false === this.option(LEGACY_SCROLLING_MODE) ? !this.items(true).length : this.callBase(this, arguments)\r\n                    },\r\n                    isLastPageLoaded: function() {\r\n                        var result = false;\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && isVirtualPaging(this)) {\r\n                            var {\r\n                                pageIndex: pageIndex,\r\n                                loadPageCount: loadPageCount\r\n                            } = this.getLoadPageParams(true);\r\n                            var pageCount = this.pageCount();\r\n                            result = pageIndex + loadPageCount >= pageCount\r\n                        } else {\r\n                            result = this.callBase.apply(this, arguments)\r\n                        }\r\n                        return result\r\n                    },\r\n                    reset: function() {\r\n                        this._itemCount = 0;\r\n                        this._allItems = null;\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                };\r\n                gridCoreUtils.proxyMethod(members, \"getVirtualContentSize\");\r\n                gridCoreUtils.proxyMethod(members, \"setViewportItemIndex\");\r\n                return members\r\n            }(),\r\n            resizing: {\r\n                resize: function() {\r\n                    var that = this;\r\n                    var callBase = that.callBase;\r\n                    var result;\r\n                    if (isVirtualMode(that) || gridCoreUtils.isVirtualRowRendering(that)) {\r\n                        clearTimeout(that._resizeTimeout);\r\n                        var diff = new Date - that._lastTime;\r\n                        var updateTimeout = that.option(\"scrolling.updateTimeout\");\r\n                        if (that._lastTime && diff < updateTimeout) {\r\n                            result = new Deferred;\r\n                            that._resizeTimeout = setTimeout((function() {\r\n                                callBase.apply(that).done(result.resolve).fail(result.reject);\r\n                                that._lastTime = new Date\r\n                            }), updateTimeout);\r\n                            that._lastTime = new Date\r\n                        } else {\r\n                            result = callBase.apply(that);\r\n                            if (that._dataController.isLoaded()) {\r\n                                that._lastTime = new Date\r\n                            }\r\n                        }\r\n                    } else {\r\n                        result = callBase.apply(that)\r\n                    }\r\n                    return result\r\n                },\r\n                dispose: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    clearTimeout(this._resizeTimeout)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: VirtualScrollingRowsViewExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.virtual_scrolling.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport dataSourceAdapter from \"./ui.data_grid.data_source_adapter\";\r\nimport {\r\n    virtualScrollingModule\r\n} from \"../grid_core/ui.grid_core.virtual_scrolling\";\r\ngridCore.registerModule(\"virtualScrolling\", virtualScrollingModule);\r\ndataSourceAdapter.extend(virtualScrollingModule.extenders.dataSourceAdapter);\r\n","/**\r\n * DevExtreme (esm/ui/overlay/utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getInnerHeight,\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    isNumeric\r\n} from \"../../core/utils/type\";\r\nvar WINDOW_HEIGHT_PERCENT = .9;\r\nexport var getElementMaxHeightByWindow = ($element, startLocation) => {\r\n    var $window = $(getWindow());\r\n    var {\r\n        top: elementOffset\r\n    } = $element.offset();\r\n    var actualOffset;\r\n    if (isNumeric(startLocation)) {\r\n        if (startLocation < elementOffset) {\r\n            return elementOffset - startLocation\r\n        } else {\r\n            actualOffset = getInnerHeight($window) - startLocation + $window.scrollTop()\r\n        }\r\n    } else {\r\n        var offsetTop = elementOffset - $window.scrollTop();\r\n        var offsetBottom = getInnerHeight($window) - offsetTop - getOuterHeight($element);\r\n        actualOffset = Math.max(offsetTop, offsetBottom)\r\n    }\r\n    return actualOffset * WINDOW_HEIGHT_PERCENT\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/menu/ui.submenu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth,\r\n    getHeight,\r\n    setWidth,\r\n    setHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport animationPosition from \"../../animation/position\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport ContextMenu from \"../context_menu\";\r\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\";\r\nvar DX_SUBMENU_CLASS = \"dx-submenu\";\r\nclass Submenu extends ContextMenu {\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            orientation: \"horizontal\",\r\n            tabIndex: null,\r\n            onHoverStart: noop\r\n        })\r\n    }\r\n    _initDataAdapter() {\r\n        this._dataAdapter = this.option(\"_dataAdapter\");\r\n        if (!this._dataAdapter) {\r\n            super._initDataAdapter()\r\n        }\r\n    }\r\n    _renderContentImpl() {\r\n        this._renderContextMenuOverlay();\r\n        super._renderContentImpl();\r\n        var node = this._dataAdapter.getNodeByKey(this.option(\"_parentKey\"));\r\n        node && this._renderItems(this._getChildNodes(node));\r\n        this._renderDelimiter()\r\n    }\r\n    _renderDelimiter() {\r\n        this.$contentDelimiter = $(\"<div>\").appendTo(this._itemContainer()).addClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)\r\n    }\r\n    _getOverlayOptions() {\r\n        return extend(super._getOverlayOptions(), {\r\n            onPositioned: this._overlayPositionedActionHandler.bind(this)\r\n        })\r\n    }\r\n    _overlayPositionedActionHandler(arg) {\r\n        this._showDelimiter(arg)\r\n    }\r\n    _hoverEndHandler(e) {\r\n        super._hoverEndHandler(e);\r\n        this._toggleFocusClass(false, e.currentTarget)\r\n    }\r\n    _isMenuHorizontal() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    }\r\n    _hoverStartHandler(e) {\r\n        var hoverStartAction = this.option(\"onHoverStart\");\r\n        hoverStartAction(e);\r\n        super._hoverStartHandler(e);\r\n        this._toggleFocusClass(true, e.currentTarget)\r\n    }\r\n    _drawSubmenu($rootItem) {\r\n        this._actions.onShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        });\r\n        super._drawSubmenu($rootItem);\r\n        this._actions.onShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        })\r\n    }\r\n    _hideSubmenu($rootItem) {\r\n        this._actions.onHiding({\r\n            cancel: true,\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        });\r\n        super._hideSubmenu($rootItem);\r\n        this._actions.onHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        })\r\n    }\r\n    _showDelimiter(arg) {\r\n        if (!this.$contentDelimiter) {\r\n            return\r\n        }\r\n        var $submenu = this._itemContainer().children(\".\".concat(DX_SUBMENU_CLASS)).eq(0);\r\n        var $rootItem = this.option(\"position\").of;\r\n        var position = {\r\n            of: $submenu\r\n        };\r\n        var containerOffset = arg.position;\r\n        var vLocation = containerOffset.v.location;\r\n        var hLocation = containerOffset.h.location;\r\n        var rootOffset = $rootItem.offset();\r\n        var offsetLeft = Math.round(rootOffset.left);\r\n        var offsetTop = Math.round(rootOffset.top);\r\n        var rootWidth = getWidth($rootItem);\r\n        var rootHeight = getHeight($rootItem);\r\n        var submenuWidth = getWidth($submenu);\r\n        var submenuHeight = getHeight($submenu);\r\n        this.$contentDelimiter.css(\"display\", \"block\");\r\n        setWidth(this.$contentDelimiter, this._isMenuHorizontal() ? rootWidth < submenuWidth ? rootWidth - 2 : submenuWidth : 2);\r\n        setHeight(this.$contentDelimiter, this._isMenuHorizontal() ? 2 : rootHeight < submenuHeight ? rootHeight - 2 : submenuHeight);\r\n        if (this._isMenuHorizontal()) {\r\n            if (vLocation > offsetTop) {\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 -1\";\r\n                    position.at = position.my = \"left top\"\r\n                } else {\r\n                    position.offset = \"-1 -1\";\r\n                    position.at = position.my = \"right top\"\r\n                }\r\n            } else {\r\n                setHeight(this.$contentDelimiter, 5);\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 4\";\r\n                    position.at = position.my = \"left bottom\"\r\n                } else {\r\n                    position.offset = \"-1 2\";\r\n                    position.at = position.my = \"right bottom\"\r\n                }\r\n            }\r\n        } else if (hLocation > offsetLeft) {\r\n            if (Math.round(vLocation) === offsetTop) {\r\n                position.offset = \"-1 1\";\r\n                position.at = position.my = \"left top\"\r\n            } else {\r\n                position.offset = \"-1 -1\";\r\n                position.at = position.my = \"left bottom\"\r\n            }\r\n        } else if (Math.round(vLocation) === offsetTop) {\r\n            position.offset = \"1 1\";\r\n            position.at = position.my = \"right top\"\r\n        } else {\r\n            position.offset = \"1 -1\";\r\n            position.at = position.my = \"right bottom\"\r\n        }\r\n        animationPosition.setup(this.$contentDelimiter, position)\r\n    }\r\n    _getContextMenuPosition() {\r\n        return this.option(\"position\")\r\n    }\r\n    isOverlayVisible() {\r\n        return this._overlay.option(\"visible\")\r\n    }\r\n    getOverlayContent() {\r\n        return this._overlay.$content()\r\n    }\r\n}\r\nexport default Submenu;\r\n","/**\r\n * DevExtreme (esm/ui/menu/ui.menu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isPlainObject,\r\n    isObject,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getElementMaxHeightByWindow\r\n} from \"../overlay/utils\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    end as hoverEventEnd\r\n} from \"../../events/hover\";\r\nimport MenuBase from \"../context_menu/ui.menu_base\";\r\nimport Overlay from \"../overlay/ui.overlay\";\r\nimport Submenu from \"./ui.submenu\";\r\nimport Button from \"../button\";\r\nimport TreeView from \"../tree_view\";\r\nvar DX_MENU_CLASS = \"dx-menu\";\r\nvar DX_MENU_VERTICAL_CLASS = DX_MENU_CLASS + \"-vertical\";\r\nvar DX_MENU_HORIZONTAL_CLASS = DX_MENU_CLASS + \"-horizontal\";\r\nvar DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\";\r\nvar DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\";\r\nvar DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\";\r\nvar DX_CONTEXT_MENU_CLASS = \"dx-context-menu\";\r\nvar DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS = DX_CONTEXT_MENU_CLASS + \"-container-border\";\r\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\";\r\nvar DX_SUBMENU_CLASS = \"dx-submenu\";\r\nvar DX_STATE_DISABLED_CLASS = \"dx-state-disabled\";\r\nvar DX_STATE_HOVER_CLASS = \"dx-state-hover\";\r\nvar DX_STATE_ACTIVE_CLASS = \"dx-state-active\";\r\nvar DX_ADAPTIVE_MODE_CLASS = DX_MENU_CLASS + \"-adaptive-mode\";\r\nvar DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS = DX_MENU_CLASS + \"-hamburger-button\";\r\nvar DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS = DX_ADAPTIVE_MODE_CLASS + \"-overlay-wrapper\";\r\nvar FOCUS_UP = \"up\";\r\nvar FOCUS_DOWN = \"down\";\r\nvar FOCUS_LEFT = \"left\";\r\nvar FOCUS_RIGHT = \"right\";\r\nvar SHOW_SUBMENU_OPERATION = \"showSubmenu\";\r\nvar NEXTITEM_OPERATION = \"nextItem\";\r\nvar PREVITEM_OPERATION = \"prevItem\";\r\nvar DEFAULT_DELAY = {\r\n    show: 50,\r\n    hide: 300\r\n};\r\nvar ACTIONS = [\"onSubmenuShowing\", \"onSubmenuShown\", \"onSubmenuHiding\", \"onSubmenuHidden\", \"onItemContextMenu\", \"onItemClick\", \"onSelectionChanged\", \"onItemRendered\"];\r\nclass Menu extends MenuBase {\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            orientation: \"horizontal\",\r\n            submenuDirection: \"auto\",\r\n            showFirstSubmenuMode: {\r\n                name: \"onClick\",\r\n                delay: {\r\n                    show: 50,\r\n                    hide: 300\r\n                }\r\n            },\r\n            hideSubmenuOnMouseLeave: false,\r\n            onSubmenuShowing: null,\r\n            onSubmenuShown: null,\r\n            onSubmenuHiding: null,\r\n            onSubmenuHidden: null,\r\n            adaptivityEnabled: false\r\n        })\r\n    }\r\n    _setOptionsByReference() {\r\n        super._setOptionsByReference();\r\n        extend(this._optionsByReference, {\r\n            animation: true,\r\n            selectedItem: true\r\n        })\r\n    }\r\n    _itemElements() {\r\n        var rootMenuElements = super._itemElements();\r\n        var submenuElements = this._submenuItemElements();\r\n        return rootMenuElements.add(submenuElements)\r\n    }\r\n    _submenuItemElements() {\r\n        var elements = [];\r\n        var itemSelector = \".\".concat(DX_MENU_ITEM_CLASS);\r\n        var currentSubmenu = this._submenus.length && this._submenus[0];\r\n        if (currentSubmenu && currentSubmenu.itemsContainer()) {\r\n            elements = currentSubmenu.itemsContainer().find(itemSelector)\r\n        }\r\n        return elements\r\n    }\r\n    _focusTarget() {\r\n        return this.$element()\r\n    }\r\n    _isMenuHorizontal() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    }\r\n    _moveFocus(location) {\r\n        var $items = this._getAvailableItems();\r\n        var isMenuHorizontal = this._isMenuHorizontal();\r\n        var $activeItem = this._getActiveItem(true);\r\n        var argument;\r\n        var operation;\r\n        var navigationAction;\r\n        var $newTarget;\r\n        switch (location) {\r\n            case FOCUS_UP:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(PREVITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_DOWN:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(NEXTITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_RIGHT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(NEXTITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_LEFT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(PREVITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            default:\r\n                return super._moveFocus(location)\r\n        }\r\n        if ($newTarget && 0 !== $newTarget.length) {\r\n            this.option(\"focusedElement\", getPublicElement($newTarget))\r\n        }\r\n    }\r\n    _getItemsNavigationOperation(operation) {\r\n        var navOperation = operation;\r\n        if (this.option(\"rtlEnabled\")) {\r\n            navOperation = operation === PREVITEM_OPERATION ? NEXTITEM_OPERATION : PREVITEM_OPERATION\r\n        }\r\n        return navOperation\r\n    }\r\n    _getKeyboardNavigationAction(operation, argument) {\r\n        var action = noop;\r\n        switch (operation) {\r\n            case SHOW_SUBMENU_OPERATION:\r\n                if (!argument.hasClass(DX_STATE_DISABLED_CLASS)) {\r\n                    action = this._showSubmenu.bind(this, argument)\r\n                }\r\n                break;\r\n            case NEXTITEM_OPERATION:\r\n                action = this._nextItem.bind(this, argument);\r\n                break;\r\n            case PREVITEM_OPERATION:\r\n                action = this._prevItem.bind(this, argument)\r\n        }\r\n        return action\r\n    }\r\n    _clean() {\r\n        super._clean();\r\n        this.option(\"templatesRenderAsynchronously\") && clearTimeout(this._resizeEventTimer)\r\n    }\r\n    _visibilityChanged(visible) {\r\n        if (visible) {\r\n            if (!this._menuItemsWidth) {\r\n                this._updateItemsWidthCache()\r\n            }\r\n            this._dimensionChanged()\r\n        }\r\n    }\r\n    _isAdaptivityEnabled() {\r\n        return this.option(\"adaptivityEnabled\") && \"horizontal\" === this.option(\"orientation\")\r\n    }\r\n    _updateItemsWidthCache() {\r\n        var $menuItems = this.$element().find(\"ul\").first().children(\"li\").children(\".\".concat(DX_MENU_ITEM_CLASS));\r\n        this._menuItemsWidth = this._getSummaryItemsWidth($menuItems, true)\r\n    }\r\n    _dimensionChanged() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        var containerWidth = getOuterWidth(this.$element());\r\n        this._toggleAdaptiveMode(this._menuItemsWidth > containerWidth)\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this._submenus = []\r\n    }\r\n    _initActions() {\r\n        this._actions = {};\r\n        each(ACTIONS, (index, action) => {\r\n            this._actions[action] = this._createActionByOption(action)\r\n        })\r\n    }\r\n    _initMarkup() {\r\n        this._visibleSubmenu = null;\r\n        this.$element().addClass(DX_MENU_CLASS);\r\n        super._initMarkup();\r\n        this.setAria(\"role\", \"menubar\")\r\n    }\r\n    _render() {\r\n        super._render();\r\n        this._initAdaptivity()\r\n    }\r\n    _renderHamburgerButton() {\r\n        this._hamburger = new Button($(\"<div>\").addClass(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS), {\r\n            icon: \"menu\",\r\n            activeStateEnabled: false,\r\n            onClick: this._toggleTreeView.bind(this)\r\n        });\r\n        return this._hamburger.$element()\r\n    }\r\n    _toggleTreeView(state) {\r\n        if (isPlainObject(state)) {\r\n            state = !this._overlay.option(\"visible\")\r\n        }\r\n        this._overlay.option(\"visible\", state);\r\n        this._toggleHamburgerActiveState(state)\r\n    }\r\n    _toggleHamburgerActiveState(state) {\r\n        this._hamburger && this._hamburger.$element().toggleClass(DX_STATE_ACTIVE_CLASS, state)\r\n    }\r\n    _toggleAdaptiveMode(state) {\r\n        var $menuItemsContainer = this.$element().find(\".\".concat(DX_MENU_HORIZONTAL_CLASS));\r\n        var $adaptiveElements = this.$element().find(\".\".concat(DX_ADAPTIVE_MODE_CLASS));\r\n        if (state) {\r\n            this._hideVisibleSubmenu()\r\n        } else {\r\n            this._treeView && this._treeView.collapseAll();\r\n            this._overlay && this._toggleTreeView(state)\r\n        }\r\n        $menuItemsContainer.toggle(!state);\r\n        $adaptiveElements.toggle(state)\r\n    }\r\n    _removeAdaptivity() {\r\n        if (!this._$adaptiveContainer) {\r\n            return\r\n        }\r\n        this._toggleAdaptiveMode(false);\r\n        this._$adaptiveContainer.remove();\r\n        this._$adaptiveContainer = null;\r\n        this._treeView = null;\r\n        this._hamburger = null;\r\n        this._overlay = null\r\n    }\r\n    _treeviewItemClickHandler(e) {\r\n        this._actions.onItemClick(e);\r\n        if (!e.node.children.length) {\r\n            this._toggleTreeView(false)\r\n        }\r\n    }\r\n    _getAdaptiveOverlayOptions() {\r\n        var rtl = this.option(\"rtlEnabled\");\r\n        var position = rtl ? \"right\" : \"left\";\r\n        return {\r\n            _ignoreFunctionValueDeprecation: true,\r\n            maxHeight: () => getElementMaxHeightByWindow(this.$element()),\r\n            deferRendering: false,\r\n            shading: false,\r\n            animation: false,\r\n            hideOnParentScroll: true,\r\n            onHidden: () => {\r\n                this._toggleHamburgerActiveState(false)\r\n            },\r\n            height: \"auto\",\r\n            closeOnOutsideClick: e => !$(e.target).closest(\".\".concat(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS)).length,\r\n            position: {\r\n                collision: \"flipfit\",\r\n                at: \"bottom \" + position,\r\n                my: \"top \" + position,\r\n                of: this._hamburger.$element()\r\n            }\r\n        }\r\n    }\r\n    _getTreeViewOptions() {\r\n        var menuOptions = {};\r\n        each([\"rtlEnabled\", \"width\", \"accessKey\", \"activeStateEnabled\", \"animation\", \"dataSource\", \"disabled\", \"displayExpr\", \"displayExpr\", \"focusStateEnabled\", \"hint\", \"hoverStateEnabled\", \"itemsExpr\", \"items\", \"itemTemplate\", \"selectedExpr\", \"selectionMode\", \"tabIndex\", \"visible\"], (_, option) => {\r\n            menuOptions[option] = this.option(option)\r\n        });\r\n        each([\"onItemContextMenu\", \"onSelectionChanged\"], (_, actionName) => {\r\n            menuOptions[actionName] = e => {\r\n                this._actions[actionName](e)\r\n            }\r\n        });\r\n        return extend(menuOptions, {\r\n            dataSource: this.getDataSource(),\r\n            animationEnabled: !!this.option(\"animation\"),\r\n            onItemClick: this._treeviewItemClickHandler.bind(this),\r\n            onItemExpanded: e => {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuShown(e)\r\n            },\r\n            onItemCollapsed: e => {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuHidden(e)\r\n            },\r\n            selectNodesRecursive: false,\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            expandEvent: \"click\"\r\n        })\r\n    }\r\n    _initAdaptivity() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        this._$adaptiveContainer = $(\"<div>\").addClass(DX_ADAPTIVE_MODE_CLASS);\r\n        var $hamburger = this._renderHamburgerButton();\r\n        this._treeView = this._createComponent($(\"<div>\"), TreeView, this._getTreeViewOptions());\r\n        this._overlay = this._createComponent($(\"<div>\"), Overlay, this._getAdaptiveOverlayOptions());\r\n        this._overlay.$content().append(this._treeView.$element()).addClass(DX_ADAPTIVE_MODE_CLASS).addClass(this.option(\"cssClass\"));\r\n        this._overlay.$wrapper().addClass(DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS);\r\n        this._$adaptiveContainer.append($hamburger);\r\n        this._$adaptiveContainer.append(this._overlay.$element());\r\n        this.$element().append(this._$adaptiveContainer);\r\n        this._updateItemsWidthCache();\r\n        this._dimensionChanged()\r\n    }\r\n    _getDelay(delayType) {\r\n        var delay = this.option(\"showFirstSubmenuMode\").delay;\r\n        if (!isDefined(delay)) {\r\n            return DEFAULT_DELAY[delayType]\r\n        } else {\r\n            return isObject(delay) ? delay[delayType] : delay\r\n        }\r\n    }\r\n    _keyboardHandler(e) {\r\n        return super._keyboardHandler(e, !!this._visibleSubmenu)\r\n    }\r\n    _renderContainer() {\r\n        var $wrapper = $(\"<div>\");\r\n        $wrapper.appendTo(this.$element()).addClass(this._isMenuHorizontal() ? DX_MENU_HORIZONTAL_CLASS : DX_MENU_VERTICAL_CLASS);\r\n        return super._renderContainer($wrapper)\r\n    }\r\n    _renderSubmenuItems(node, $itemFrame) {\r\n        var submenu = this._createSubmenu(node, $itemFrame);\r\n        this._submenus.push(submenu);\r\n        this._renderBorderElement($itemFrame);\r\n        return submenu\r\n    }\r\n    _getKeyboardListeners() {\r\n        return super._getKeyboardListeners().concat(this._visibleSubmenu)\r\n    }\r\n    _createSubmenu(node, $rootItem) {\r\n        var $submenuContainer = $(\"<div>\").addClass(DX_CONTEXT_MENU_CLASS).appendTo($rootItem);\r\n        var items = this._getChildNodes(node);\r\n        var result = this._createComponent($submenuContainer, Submenu, extend(this._getSubmenuOptions(), {\r\n            _dataAdapter: this._dataAdapter,\r\n            _parentKey: node.internalFields.key,\r\n            items: items,\r\n            onHoverStart: this._clearTimeouts.bind(this),\r\n            position: this.getSubmenuPosition($rootItem)\r\n        }));\r\n        this._attachSubmenuHandlers($rootItem, result);\r\n        return result\r\n    }\r\n    _getSubmenuOptions() {\r\n        var $submenuTarget = $(\"<div>\");\r\n        var isMenuHorizontal = this._isMenuHorizontal();\r\n        return {\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            target: $submenuTarget,\r\n            orientation: this.option(\"orientation\"),\r\n            selectionMode: this.option(\"selectionMode\"),\r\n            cssClass: this.option(\"cssClass\"),\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            animation: this.option(\"animation\"),\r\n            showSubmenuMode: this.option(\"showSubmenuMode\"),\r\n            displayExpr: this.option(\"displayExpr\"),\r\n            disabledExpr: this.option(\"disabledExpr\"),\r\n            selectedExpr: this.option(\"selectedExpr\"),\r\n            itemsExpr: this.option(\"itemsExpr\"),\r\n            onFocusedItemChanged: e => {\r\n                if (!e.component.option(\"visible\")) {\r\n                    return\r\n                }\r\n                this.option(\"focusedElement\", e.component.option(\"focusedElement\"))\r\n            },\r\n            onSelectionChanged: this._nestedItemOnSelectionChangedHandler.bind(this),\r\n            onItemClick: this._nestedItemOnItemClickHandler.bind(this),\r\n            onItemRendered: this._nestedItemOnItemRenderedHandler.bind(this),\r\n            onLeftFirstItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, PREVITEM_OPERATION),\r\n            onLeftLastItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION),\r\n            onCloseRootSubmenu: this._moveMainMenuFocus.bind(this, isMenuHorizontal ? PREVITEM_OPERATION : null),\r\n            onExpandLastSubmenu: isMenuHorizontal ? this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION) : null\r\n        }\r\n    }\r\n    _getShowFirstSubmenuMode() {\r\n        if (!this._isDesktopDevice()) {\r\n            return \"onClick\"\r\n        }\r\n        var optionValue = this.option(\"showFirstSubmenuMode\");\r\n        return isObject(optionValue) ? optionValue.name : optionValue\r\n    }\r\n    _moveMainMenuFocus(direction) {\r\n        var $items = this._getAvailableItems();\r\n        var itemCount = $items.length;\r\n        var $currentItem = $items.filter(\".\".concat(DX_MENU_ITEM_EXPANDED_CLASS)).eq(0);\r\n        var itemIndex = $items.index($currentItem);\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        itemIndex += direction === PREVITEM_OPERATION ? -1 : 1;\r\n        if (itemIndex >= itemCount) {\r\n            itemIndex = 0\r\n        } else if (itemIndex < 0) {\r\n            itemIndex = itemCount - 1\r\n        }\r\n        var $newItem = $items.eq(itemIndex);\r\n        this.option(\"focusedElement\", getPublicElement($newItem))\r\n    }\r\n    _nestedItemOnSelectionChangedHandler(args) {\r\n        var selectedItem = args.addedItems.length && args.addedItems[0];\r\n        var submenu = Submenu.getInstance(args.element);\r\n        var onSelectionChanged = this._actions.onSelectionChanged;\r\n        onSelectionChanged(args);\r\n        selectedItem && this._clearSelectionInSubmenus(selectedItem[0], submenu);\r\n        this._clearRootSelection();\r\n        this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem)\r\n    }\r\n    _clearSelectionInSubmenus(item, targetSubmenu) {\r\n        var cleanAllSubmenus = !arguments.length;\r\n        each(this._submenus, (index, submenu) => {\r\n            var $submenu = submenu._itemContainer();\r\n            var isOtherItem = !$submenu.is(targetSubmenu && targetSubmenu._itemContainer());\r\n            var $selectedItem = $submenu.find(\".\".concat(this._selectedItemClass()));\r\n            if (isOtherItem && $selectedItem.length || cleanAllSubmenus) {\r\n                $selectedItem.removeClass(this._selectedItemClass());\r\n                var selectedItemData = this._getItemData($selectedItem);\r\n                if (selectedItemData) {\r\n                    selectedItemData.selected = false\r\n                }\r\n                submenu._clearSelectedItems()\r\n            }\r\n        })\r\n    }\r\n    _clearRootSelection() {\r\n        var $prevSelectedItem = this.$element().find(\".\".concat(DX_MENU_ITEMS_CONTAINER_CLASS)).first().children().children().filter(\".\".concat(this._selectedItemClass()));\r\n        if ($prevSelectedItem.length) {\r\n            var prevSelectedItemData = this._getItemData($prevSelectedItem);\r\n            prevSelectedItemData.selected = false;\r\n            $prevSelectedItem.removeClass(this._selectedItemClass())\r\n        }\r\n    }\r\n    _nestedItemOnItemClickHandler(e) {\r\n        this._actions.onItemClick(e)\r\n    }\r\n    _nestedItemOnItemRenderedHandler(e) {\r\n        this._actions.onItemRendered(e)\r\n    }\r\n    _attachSubmenuHandlers($rootItem, submenu) {\r\n        var $submenuOverlayContent = submenu.getOverlayContent();\r\n        var submenus = $submenuOverlayContent.find(\".\".concat(DX_SUBMENU_CLASS));\r\n        var submenuMouseLeaveName = addNamespace(hoverEventEnd, this.NAME + \"_submenu\");\r\n        submenu.option({\r\n            onShowing: this._submenuOnShowingHandler.bind(this, $rootItem, submenu),\r\n            onShown: this._submenuOnShownHandler.bind(this, $rootItem, submenu),\r\n            onHiding: this._submenuOnHidingHandler.bind(this, $rootItem, submenu),\r\n            onHidden: this._submenuOnHiddenHandler.bind(this, $rootItem, submenu)\r\n        });\r\n        each(submenus, (index, submenu) => {\r\n            eventsEngine.off(submenu, submenuMouseLeaveName);\r\n            eventsEngine.on(submenu, submenuMouseLeaveName, null, this._submenuMouseLeaveHandler.bind(this, $rootItem))\r\n        })\r\n    }\r\n    _submenuOnShowingHandler($rootItem, submenu) {\r\n        var $border = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS));\r\n        this._actions.onSubmenuShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        });\r\n        $border.show();\r\n        $rootItem.addClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n    }\r\n    _submenuOnShownHandler($rootItem, submenu) {\r\n        this._actions.onSubmenuShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    }\r\n    _submenuOnHidingHandler($rootItem, submenu, eventArgs) {\r\n        var $border = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS));\r\n        var args = eventArgs;\r\n        args.rootItem = getPublicElement($rootItem);\r\n        args.submenu = submenu;\r\n        this._actions.onSubmenuHiding(args);\r\n        eventArgs = args;\r\n        if (!eventArgs.cancel) {\r\n            if (this._visibleSubmenu === submenu) {\r\n                this._visibleSubmenu = null\r\n            }\r\n            $border.hide();\r\n            $rootItem.removeClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n        }\r\n    }\r\n    _submenuOnHiddenHandler($rootItem, submenu) {\r\n        this._actions.onSubmenuHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    }\r\n    _submenuMouseLeaveHandler($rootItem, eventArgs) {\r\n        var target = $(eventArgs.relatedTarget).parents(\".\".concat(DX_CONTEXT_MENU_CLASS))[0];\r\n        var contextMenu = this._getSubmenuByRootElement($rootItem).getOverlayContent()[0];\r\n        if (this.option(\"hideSubmenuOnMouseLeave\") && target !== contextMenu) {\r\n            this._clearTimeouts();\r\n            setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"))\r\n        }\r\n    }\r\n    _hideSubmenuAfterTimeout() {\r\n        if (!this._visibleSubmenu) {\r\n            return\r\n        }\r\n        var isRootItemHovered = $(this._visibleSubmenu.$element().context).hasClass(DX_STATE_HOVER_CLASS);\r\n        var isSubmenuItemHovered = this._visibleSubmenu.getOverlayContent().find(\".\".concat(DX_STATE_HOVER_CLASS)).length;\r\n        var hoveredElementFromSubMenu = this._visibleSubmenu.getOverlayContent().get(0).querySelector(\":hover\");\r\n        if (!hoveredElementFromSubMenu && !isSubmenuItemHovered && !isRootItemHovered) {\r\n            this._visibleSubmenu.hide()\r\n        }\r\n    }\r\n    _getSubmenuByRootElement($rootItem) {\r\n        if (!$rootItem) {\r\n            return false\r\n        }\r\n        var $submenu = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CLASS));\r\n        return $submenu.length && Submenu.getInstance($submenu)\r\n    }\r\n    getSubmenuPosition($rootItem) {\r\n        var isHorizontalMenu = this._isMenuHorizontal();\r\n        var submenuDirection = this.option(\"submenuDirection\").toLowerCase();\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var submenuPosition = {\r\n            collision: \"flip\",\r\n            of: $rootItem\r\n        };\r\n        switch (submenuDirection) {\r\n            case \"leftortop\":\r\n                submenuPosition.at = \"left top\";\r\n                submenuPosition.my = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                break;\r\n            case \"rightorbottom\":\r\n                submenuPosition.at = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                submenuPosition.my = \"left top\";\r\n                break;\r\n            default:\r\n                if (isHorizontalMenu) {\r\n                    submenuPosition.at = rtlEnabled ? \"right bottom\" : \"left bottom\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                } else {\r\n                    submenuPosition.at = rtlEnabled ? \"left top\" : \"right top\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                }\r\n        }\r\n        return submenuPosition\r\n    }\r\n    _renderBorderElement($item) {\r\n        $(\"<div>\").appendTo($item).addClass(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS).hide()\r\n    }\r\n    _itemPointerDownHandler(e) {\r\n        var $target = $(e.target);\r\n        var $closestItem = $target.closest(this._itemElements());\r\n        if ($closestItem.hasClass(\"dx-menu-item-has-submenu\")) {\r\n            this.option(\"focusedElement\", null);\r\n            return\r\n        }\r\n        super._itemPointerDownHandler(e)\r\n    }\r\n    _hoverStartHandler(e) {\r\n        var mouseMoveEventName = addNamespace(pointerEvents.move, this.NAME);\r\n        var $item = this._getItemElementByEventArgs(e);\r\n        var node = this._dataAdapter.getNodeByItem(this._getItemData($item));\r\n        var isSelectionActive = isDefined(e.buttons) && 1 === e.buttons || !isDefined(e.buttons) && 1 === e.which;\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        eventsEngine.off($item, mouseMoveEventName);\r\n        if (!this._hasChildren(node)) {\r\n            this._showSubmenuTimer = setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"));\r\n            return\r\n        }\r\n        if (\"onHover\" === this._getShowFirstSubmenuMode() && !isSelectionActive) {\r\n            var submenu = this._getSubmenuByElement($item);\r\n            this._clearTimeouts();\r\n            if (!submenu.isOverlayVisible()) {\r\n                eventsEngine.on($item, mouseMoveEventName, this._itemMouseMoveHandler.bind(this));\r\n                this._showSubmenuTimer = this._getDelay(\"hide\")\r\n            }\r\n        }\r\n    }\r\n    _hoverEndHandler(eventArg) {\r\n        var $item = this._getItemElementByEventArgs(eventArg);\r\n        var relatedTarget = $(eventArg.relatedTarget);\r\n        super._hoverEndHandler(eventArg);\r\n        this._clearTimeouts();\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        if (relatedTarget.hasClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)) {\r\n            return\r\n        }\r\n        if (this.option(\"hideSubmenuOnMouseLeave\") && !relatedTarget.hasClass(DX_MENU_ITEMS_CONTAINER_CLASS)) {\r\n            this._hideSubmenuTimer = setTimeout(() => {\r\n                this._hideSubmenuAfterTimeout()\r\n            }, this._getDelay(\"hide\"))\r\n        }\r\n    }\r\n    _hideVisibleSubmenu() {\r\n        if (!this._visibleSubmenu) {\r\n            return false\r\n        }\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        return true\r\n    }\r\n    _showSubmenu($itemElement) {\r\n        var submenu = this._getSubmenuByElement($itemElement);\r\n        if (this._visibleSubmenu !== submenu) {\r\n            this._hideVisibleSubmenu()\r\n        }\r\n        if (submenu) {\r\n            this._clearTimeouts();\r\n            submenu.show();\r\n            this.option(\"focusedElement\", submenu.option(\"focusedElement\"))\r\n        }\r\n        this._visibleSubmenu = submenu;\r\n        this._hoveredRootItem = $itemElement\r\n    }\r\n    _hideSubmenu(submenu) {\r\n        submenu && submenu.hide();\r\n        if (this._visibleSubmenu === submenu) {\r\n            this._visibleSubmenu = null\r\n        }\r\n        this._hoveredRootItem = null\r\n    }\r\n    _itemMouseMoveHandler(e) {\r\n        if (e.pointers && e.pointers.length) {\r\n            return\r\n        }\r\n        var $item = $(e.currentTarget);\r\n        if (!isDefined(this._showSubmenuTimer)) {\r\n            return\r\n        }\r\n        this._clearTimeouts();\r\n        this._showSubmenuTimer = setTimeout(() => {\r\n            var submenu = this._getSubmenuByElement($item);\r\n            if (submenu && !submenu.isOverlayVisible()) {\r\n                this._showSubmenu($item)\r\n            }\r\n        }, this._getDelay(\"show\"))\r\n    }\r\n    _clearTimeouts() {\r\n        clearTimeout(this._hideSubmenuTimer);\r\n        clearTimeout(this._showSubmenuTimer)\r\n    }\r\n    _getSubmenuByElement($itemElement, itemData) {\r\n        var submenu = this._getSubmenuByRootElement($itemElement);\r\n        if (submenu) {\r\n            return submenu\r\n        } else {\r\n            itemData = itemData || this._getItemData($itemElement);\r\n            var node = this._dataAdapter.getNodeByItem(itemData);\r\n            return this._hasChildren(node) && this._renderSubmenuItems(node, $itemElement)\r\n        }\r\n    }\r\n    _updateSubmenuVisibilityOnClick(actionArgs) {\r\n        var args = actionArgs.args.length && actionArgs.args[0];\r\n        if (!args || this._disabledGetter(args.itemData)) {\r\n            return\r\n        }\r\n        var $itemElement = $(args.itemElement);\r\n        var currentSubmenu = this._getSubmenuByElement($itemElement, args.itemData);\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (this._visibleSubmenu) {\r\n            if (this._visibleSubmenu === currentSubmenu) {\r\n                if (\"onClick\" === this.option(\"showFirstSubmenuMode\")) {\r\n                    this._hideSubmenu(this._visibleSubmenu)\r\n                }\r\n                return\r\n            } else {\r\n                this._hideSubmenu(this._visibleSubmenu)\r\n            }\r\n        }\r\n        if (!currentSubmenu) {\r\n            return\r\n        }\r\n        if (!currentSubmenu.isOverlayVisible()) {\r\n            this._showSubmenu($itemElement);\r\n            return\r\n        }\r\n    }\r\n    _optionChanged(args) {\r\n        if (ACTIONS.indexOf(args.name) >= 0) {\r\n            this._initActions();\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"orientation\":\r\n            case \"submenuDirection\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showFirstSubmenuMode\":\r\n            case \"hideSubmenuOnMouseLeave\":\r\n                break;\r\n            case \"showSubmenuMode\":\r\n                this._changeSubmenusOption(args.name, args.value);\r\n                break;\r\n            case \"adaptivityEnabled\":\r\n                args.value ? this._initAdaptivity() : this._removeAdaptivity();\r\n                break;\r\n            case \"width\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(args.name, args.value);\r\n                    this._overlay.option(args.name, args.value)\r\n                }\r\n                super._optionChanged(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"animation\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(\"animationEnabled\", !!args.value)\r\n                }\r\n                super._optionChanged(args);\r\n                break;\r\n            default:\r\n                if (this._isAdaptivityEnabled() && (args.name === args.fullName || \"items\" === args.name)) {\r\n                    this._treeView.option(args.fullName, args.value)\r\n                }\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _changeSubmenusOption(name, value) {\r\n        each(this._submenus, (index, submenu) => {\r\n            submenu.option(name, value)\r\n        })\r\n    }\r\n    selectItem(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        super.selectItem(itemElement)\r\n    }\r\n    unselectItem(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        super.selectItem(itemElement)\r\n    }\r\n}\r\nregisterComponent(\"dxMenu\", Menu);\r\nexport default Menu;\r\n","/**\r\n * DevExtreme (esm/ui/menu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Menu from \"./menu/ui.menu\";\r\nexport default Menu;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_row.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport Editor from \"../editor/editor\";\r\nimport Overlay from \"../overlay/ui.overlay\";\r\nimport Menu from \"../menu\";\r\nimport {\r\n    selectView\r\n} from \"../shared/accessibility\";\r\nvar OPERATION_ICONS = {\r\n    \"=\": \"filter-operation-equals\",\r\n    \"<>\": \"filter-operation-not-equals\",\r\n    \"<\": \"filter-operation-less\",\r\n    \"<=\": \"filter-operation-less-equal\",\r\n    \">\": \"filter-operation-greater\",\r\n    \">=\": \"filter-operation-greater-equal\",\r\n    default: \"filter-operation-default\",\r\n    notcontains: \"filter-operation-not-contains\",\r\n    contains: \"filter-operation-contains\",\r\n    startswith: \"filter-operation-starts-with\",\r\n    endswith: \"filter-operation-ends-with\",\r\n    between: \"filter-operation-between\"\r\n};\r\nvar OPERATION_DESCRIPTORS = {\r\n    \"=\": \"equal\",\r\n    \"<>\": \"notEqual\",\r\n    \"<\": \"lessThan\",\r\n    \"<=\": \"lessThanOrEqual\",\r\n    \">\": \"greaterThan\",\r\n    \">=\": \"greaterThanOrEqual\",\r\n    startswith: \"startsWith\",\r\n    contains: \"contains\",\r\n    notcontains: \"notContains\",\r\n    endswith: \"endsWith\",\r\n    between: \"between\"\r\n};\r\nvar FILTERING_TIMEOUT = 700;\r\nvar CORRECT_FILTER_RANGE_OVERLAY_WIDTH = 1;\r\nvar FILTER_ROW_CLASS = \"filter-row\";\r\nvar FILTER_RANGE_OVERLAY_CLASS = \"filter-range-overlay\";\r\nvar FILTER_RANGE_START_CLASS = \"filter-range-start\";\r\nvar FILTER_RANGE_END_CLASS = \"filter-range-end\";\r\nvar MENU_CLASS = \"dx-menu\";\r\nvar EDITOR_WITH_MENU_CLASS = \"dx-editor-with-menu\";\r\nvar EDITOR_CONTAINER_CLASS = \"dx-editor-container\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar FILTER_MENU = \"dx-filter-menu\";\r\nvar APPLY_BUTTON_CLASS = \"dx-apply-button\";\r\nvar HIGHLIGHT_OUTLINE_CLASS = \"dx-highlight-outline\";\r\nvar FOCUSED_CLASS = \"dx-focused\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FILTER_RANGE_CONTENT_CLASS = \"dx-filter-range-content\";\r\nvar FILTER_MODIFIED_CLASS = \"dx-filter-modified\";\r\nvar EDITORS_INPUT_SELECTOR = \"input:not([type='hidden'])\";\r\nvar BETWEEN_OPERATION_DATA_TYPES = [\"date\", \"datetime\", \"number\"];\r\n\r\nfunction isOnClickApplyFilterMode(that) {\r\n    return \"onClick\" === that.option(\"filterRow.applyFilter\")\r\n}\r\nvar ColumnHeadersViewFilterRowExtender = function() {\r\n    var getEditorInstance = function($editorContainer) {\r\n        var $editor = $editorContainer && $editorContainer.children();\r\n        var componentNames = $editor && $editor.data(\"dxComponents\");\r\n        var editor = componentNames && componentNames.length && $editor.data(componentNames[0]);\r\n        if (editor instanceof Editor) {\r\n            return editor\r\n        }\r\n    };\r\n    var getRangeTextByFilterValue = function(that, column) {\r\n        var result = \"\";\r\n        var rangeEnd = \"\";\r\n        var filterValue = getColumnFilterValue(that, column);\r\n        var formatOptions = gridCoreUtils.getFormatOptionsByColumn(column, \"filterRow\");\r\n        if (Array.isArray(filterValue)) {\r\n            result = gridCoreUtils.formatValue(filterValue[0], formatOptions);\r\n            rangeEnd = gridCoreUtils.formatValue(filterValue[1], formatOptions);\r\n            if (\"\" !== rangeEnd) {\r\n                result += \" - \" + rangeEnd\r\n            }\r\n        } else if (isDefined(filterValue)) {\r\n            result = gridCoreUtils.formatValue(filterValue, formatOptions)\r\n        }\r\n        return result\r\n    };\r\n\r\n    function getColumnFilterValue(that, column) {\r\n        if (column) {\r\n            return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedFilterValue ? column.bufferedFilterValue : column.filterValue\r\n        }\r\n    }\r\n    var getColumnSelectedFilterOperation = function(that, column) {\r\n        if (column) {\r\n            return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedSelectedFilterOperation ? column.bufferedSelectedFilterOperation : column.selectedFilterOperation\r\n        }\r\n    };\r\n    var getFilterValue = function(that, columnIndex, $editorContainer) {\r\n        var column = that._columnsController.columnOption(columnIndex);\r\n        var filterValue = getColumnFilterValue(that, column);\r\n        var isFilterRange = $editorContainer.closest(\".\" + that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).length;\r\n        var isRangeStart = $editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS));\r\n        if (filterValue && Array.isArray(filterValue) && \"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n            if (isRangeStart) {\r\n                return filterValue[0]\r\n            } else {\r\n                return filterValue[1]\r\n            }\r\n        }\r\n        return !isFilterRange && function(filterValue, column) {\r\n            if (column && BETWEEN_OPERATION_DATA_TYPES.indexOf(column.dataType) >= 0 && Array.isArray(filterValue)) {\r\n                return false\r\n            }\r\n            return void 0 !== filterValue\r\n        }(filterValue, column) ? filterValue : null\r\n    };\r\n    var updateFilterValue = function(that, options) {\r\n        var value = \"\" === options.value ? null : options.value;\r\n        var $editorContainer = options.container;\r\n        var column = that._columnsController.columnOption(options.column.index);\r\n        var filterValue = getFilterValue(that, column.index, $editorContainer);\r\n        if (!isDefined(filterValue) && !isDefined(value)) {\r\n            return\r\n        }\r\n        that._applyFilterViewController.setHighLight($editorContainer, filterValue !== value);\r\n        var columnOptionName = isOnClickApplyFilterMode(that) ? \"bufferedFilterValue\" : \"filterValue\";\r\n        var normalizedValue = function(that, filterValue, column, $editorContainer) {\r\n            if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                var columnFilterValue = getColumnFilterValue(that, column);\r\n                if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\r\n                    return [filterValue, Array.isArray(columnFilterValue) ? columnFilterValue[1] : void 0]\r\n                } else {\r\n                    return [Array.isArray(columnFilterValue) ? columnFilterValue[0] : columnFilterValue, filterValue]\r\n                }\r\n            }\r\n            return filterValue\r\n        }(that, value, column, $editorContainer);\r\n        var isBetween = \"between\" === getColumnSelectedFilterOperation(that, column);\r\n        var notFireEvent = options.notFireEvent || isBetween && Array.isArray(normalizedValue) && normalizedValue.indexOf(void 0) >= 0;\r\n        that._columnsController.columnOption(column.index, columnOptionName, normalizedValue, notFireEvent)\r\n    };\r\n    return {\r\n        _updateEditorValue: function(column, $editorContainer) {\r\n            var editor = getEditorInstance($editorContainer);\r\n            editor && editor.option(\"value\", getFilterValue(this, column.index, $editorContainer))\r\n        },\r\n        _columnOptionChanged: function(e) {\r\n            var optionNames = e.optionNames;\r\n            var $cell;\r\n            var $editorContainer;\r\n            var $editorRangeElements;\r\n            var $menu;\r\n            if (gridCoreUtils.checkChanges(optionNames, [\"filterValue\", \"bufferedFilterValue\", \"selectedFilterOperation\", \"bufferedSelectedFilterOperation\"]) && void 0 !== e.columnIndex) {\r\n                var visibleIndex = this._columnsController.getVisibleIndex(e.columnIndex);\r\n                var column = this._columnsController.columnOption(e.columnIndex);\r\n                $cell = this._getCellElement(this.element().find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS)).index(), visibleIndex) || $();\r\n                $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n                if (optionNames.filterValue || optionNames.bufferedFilterValue) {\r\n                    this._updateEditorValue(column, $editorContainer);\r\n                    var overlayInstance = $cell.find(\".\" + this.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).data(\"dxOverlay\");\r\n                    if (overlayInstance) {\r\n                        $editorRangeElements = overlayInstance.$content().find(\".\" + EDITOR_CONTAINER_CLASS);\r\n                        this._updateEditorValue(column, $editorRangeElements.first());\r\n                        this._updateEditorValue(column, $editorRangeElements.last())\r\n                    }\r\n                    if (!overlayInstance || !overlayInstance.option(\"visible\")) {\r\n                        this._updateFilterRangeContent($cell, getRangeTextByFilterValue(this, column))\r\n                    }\r\n                }\r\n                if (optionNames.selectedFilterOperation || optionNames.bufferedSelectedFilterOperation) {\r\n                    if (visibleIndex >= 0 && column) {\r\n                        $menu = $cell.find(\".\" + MENU_CLASS);\r\n                        if ($menu.length) {\r\n                            this._updateFilterOperationChooser($menu, column, $editorContainer);\r\n                            if (\"between\" === getColumnSelectedFilterOperation(this, column)) {\r\n                                this._renderFilterRangeContent($cell, column)\r\n                            } else if ($editorContainer.find(\".\" + FILTER_RANGE_CONTENT_CLASS).length) {\r\n                                this._renderEditor($editorContainer, this._getEditorOptions($editorContainer, column));\r\n                                this._hideFilterRange()\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return\r\n            }\r\n            this.callBase(e)\r\n        },\r\n        _renderCore: function() {\r\n            this._filterRangeOverlayInstance = null;\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _resizeCore: function() {\r\n            this.callBase.apply(this, arguments);\r\n            this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.repaint()\r\n        },\r\n        isFilterRowVisible: function() {\r\n            return this._isElementVisible(this.option(\"filterRow\"))\r\n        },\r\n        isVisible: function() {\r\n            return this.callBase() || this.isFilterRowVisible()\r\n        },\r\n        init: function() {\r\n            this.callBase();\r\n            this._applyFilterViewController = this.getController(\"applyFilter\")\r\n        },\r\n        _initFilterRangeOverlay: function($cell, column) {\r\n            var that = this;\r\n            var sharedData = {};\r\n            var $editorContainer = $cell.find(\".dx-editor-container\");\r\n            var $overlay = $(\"<div>\").addClass(that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).appendTo($cell);\r\n            return that._createComponent($overlay, Overlay, {\r\n                height: \"auto\",\r\n                shading: false,\r\n                showTitle: false,\r\n                focusStateEnabled: false,\r\n                closeOnOutsideClick: true,\r\n                copyRootClassesToWrapper: true,\r\n                _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n                animation: false,\r\n                position: {\r\n                    my: \"top\",\r\n                    at: \"top\",\r\n                    of: $editorContainer.length && $editorContainer || $cell,\r\n                    offset: \"0 -1\"\r\n                },\r\n                contentTemplate: function(contentElement) {\r\n                    var editorOptions;\r\n                    var $editor = $(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_START_CLASS)).appendTo(contentElement);\r\n                    column = that._columnsController.columnOption(column.index);\r\n                    editorOptions = that._getEditorOptions($editor, column);\r\n                    editorOptions.sharedData = sharedData;\r\n                    that._renderEditor($editor, editorOptions);\r\n                    eventsEngine.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", (function(e) {\r\n                        var $prevElement = $cell.find(\"[tabindex]\").not(e.target).first();\r\n                        if (\"tab\" === normalizeKeyName(e) && e.shiftKey) {\r\n                            e.preventDefault();\r\n                            that._hideFilterRange();\r\n                            if (!$prevElement.length) {\r\n                                $prevElement = $cell.prev().find(\"[tabindex]\").last()\r\n                            }\r\n                            eventsEngine.trigger($prevElement, \"focus\")\r\n                        }\r\n                    }));\r\n                    $editor = $(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_END_CLASS)).appendTo(contentElement);\r\n                    editorOptions = that._getEditorOptions($editor, column);\r\n                    editorOptions.sharedData = sharedData;\r\n                    that._renderEditor($editor, editorOptions);\r\n                    eventsEngine.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", (function(e) {\r\n                        if (\"tab\" === normalizeKeyName(e) && !e.shiftKey) {\r\n                            e.preventDefault();\r\n                            that._hideFilterRange();\r\n                            eventsEngine.trigger($cell.next().find(\"[tabindex]\").first(), \"focus\")\r\n                        }\r\n                    }));\r\n                    return $(contentElement).addClass(that.getWidgetContainerClass())\r\n                },\r\n                onShown: function(e) {\r\n                    var $editor = e.component.$content().find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n                    eventsEngine.trigger($editor.find(EDITORS_INPUT_SELECTOR), \"focus\")\r\n                },\r\n                onHidden: function() {\r\n                    column = that._columnsController.columnOption(column.index);\r\n                    $cell.find(\".\" + MENU_CLASS).parent().addClass(EDITOR_WITH_MENU_CLASS);\r\n                    if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                        that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column));\r\n                        that.component.updateDimensions()\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        _updateFilterRangeOverlay: function(options) {\r\n            var overlayInstance = this._filterRangeOverlayInstance;\r\n            overlayInstance && overlayInstance.option(options)\r\n        },\r\n        _showFilterRange: function($cell, column) {\r\n            var $overlay = $cell.children(\".\" + this.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS));\r\n            var overlayInstance = $overlay.length && $overlay.data(\"dxOverlay\");\r\n            if (!overlayInstance && column) {\r\n                overlayInstance = this._initFilterRangeOverlay($cell, column)\r\n            }\r\n            if (!overlayInstance.option(\"visible\")) {\r\n                this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.hide();\r\n                this._filterRangeOverlayInstance = overlayInstance;\r\n                this._updateFilterRangeOverlay({\r\n                    width: getOuterWidth($cell, true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\r\n                });\r\n                this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.show()\r\n            }\r\n        },\r\n        _hideFilterRange: function() {\r\n            var overlayInstance = this._filterRangeOverlayInstance;\r\n            overlayInstance && overlayInstance.hide()\r\n        },\r\n        getFilterRangeOverlayInstance: function() {\r\n            return this._filterRangeOverlayInstance\r\n        },\r\n        _createRow: function(row) {\r\n            var $row = this.callBase(row);\r\n            if (\"filter\" === row.rowType) {\r\n                $row.addClass(this.addWidgetPrefix(FILTER_ROW_CLASS));\r\n                if (!this.option(\"useLegacyKeyboardNavigation\")) {\r\n                    eventsEngine.on($row, \"keydown\", event => selectView(\"filterRow\", this, event))\r\n                }\r\n            }\r\n            return $row\r\n        },\r\n        _getRows: function() {\r\n            var result = this.callBase();\r\n            if (this.isFilterRowVisible()) {\r\n                result.push({\r\n                    rowType: \"filter\"\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        _renderFilterCell: function(cell, options) {\r\n            var column = options.column;\r\n            var $cell = $(cell);\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                this.setAria(\"describedby\", column.headerId, $cell)\r\n            }\r\n            this.setAria(\"label\", messageLocalization.format(\"dxDataGrid-ariaFilterCell\"), $cell);\r\n            $cell.addClass(EDITOR_CELL_CLASS);\r\n            var $container = $(\"<div>\").appendTo($cell);\r\n            var $editorContainer = $(\"<div>\").addClass(EDITOR_CONTAINER_CLASS).appendTo($container);\r\n            if (\"between\" === getColumnSelectedFilterOperation(this, column)) {\r\n                this._renderFilterRangeContent($cell, column)\r\n            } else {\r\n                var editorOptions = this._getEditorOptions($editorContainer, column);\r\n                this._renderEditor($editorContainer, editorOptions)\r\n            }\r\n            var alignment = column.alignment;\r\n            if (alignment && \"center\" !== alignment) {\r\n                $cell.find(EDITORS_INPUT_SELECTOR).first().css(\"textAlign\", column.alignment)\r\n            }\r\n            if (column.filterOperations && column.filterOperations.length) {\r\n                this._renderFilterOperationChooser($container, column, $editorContainer)\r\n            }\r\n        },\r\n        _renderCellContent: function($cell, options) {\r\n            var that = this;\r\n            var column = options.column;\r\n            if (\"filter\" === options.rowType) {\r\n                if (column.command) {\r\n                    $cell.html(\"&nbsp;\")\r\n                } else if (column.allowFiltering) {\r\n                    that.renderTemplate($cell, that._renderFilterCell.bind(that), options).done(() => {\r\n                        that._updateCell($cell, options)\r\n                    });\r\n                    return\r\n                }\r\n            }\r\n            that.callBase($cell, options)\r\n        },\r\n        _getEditorOptions: function($editorContainer, column) {\r\n            var that = this;\r\n            var accessibilityOptions = {\r\n                editorOptions: {\r\n                    inputAttr: that._getFilterInputAccessibilityAttributes(column)\r\n                }\r\n            };\r\n            var result = extend(accessibilityOptions, column, {\r\n                value: getFilterValue(that, column.index, $editorContainer),\r\n                parentType: \"filterRow\",\r\n                showAllText: that.option(\"filterRow.showAllText\"),\r\n                updateValueTimeout: \"onClick\" === that.option(\"filterRow.applyFilter\") ? 0 : FILTERING_TIMEOUT,\r\n                width: null,\r\n                setValue: function(value, notFireEvent) {\r\n                    updateFilterValue(that, {\r\n                        column: column,\r\n                        value: value,\r\n                        container: $editorContainer,\r\n                        notFireEvent: notFireEvent\r\n                    })\r\n                }\r\n            });\r\n            if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\r\n                    result.placeholder = that.option(\"filterRow.betweenStartText\")\r\n                } else {\r\n                    result.placeholder = that.option(\"filterRow.betweenEndText\")\r\n                }\r\n            }\r\n            return result\r\n        },\r\n        _getFilterInputAccessibilityAttributes: function(column) {\r\n            var columnAriaLabel = messageLocalization.format(\"dxDataGrid-ariaFilterCell\");\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                return {\r\n                    \"aria-label\": columnAriaLabel,\r\n                    \"aria-describedby\": column.headerId\r\n                }\r\n            }\r\n            return {\r\n                \"aria-label\": columnAriaLabel\r\n            }\r\n        },\r\n        _renderEditor: function($editorContainer, options) {\r\n            $editorContainer.empty();\r\n            return this.getController(\"editorFactory\").createEditor($(\"<div>\").appendTo($editorContainer), options)\r\n        },\r\n        _renderFilterRangeContent: function($cell, column) {\r\n            var that = this;\r\n            var $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n            $editorContainer.empty();\r\n            var $filterRangeContent = $(\"<div>\").addClass(FILTER_RANGE_CONTENT_CLASS).attr(\"tabindex\", this.option(\"tabIndex\"));\r\n            eventsEngine.on($filterRangeContent, \"focusin\", (function() {\r\n                that._showFilterRange($cell, column)\r\n            }));\r\n            $filterRangeContent.appendTo($editorContainer);\r\n            that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column))\r\n        },\r\n        _updateFilterRangeContent: function($cell, value) {\r\n            var $filterRangeContent = $cell.find(\".\" + FILTER_RANGE_CONTENT_CLASS);\r\n            if ($filterRangeContent.length) {\r\n                if (\"\" === value) {\r\n                    $filterRangeContent.html(\"&nbsp;\")\r\n                } else {\r\n                    $filterRangeContent.text(value)\r\n                }\r\n            }\r\n        },\r\n        _updateFilterOperationChooser: function($menu, column, $editorContainer) {\r\n            var that = this;\r\n            var isCellWasFocused;\r\n            var restoreFocus = function() {\r\n                var menu = Menu.getInstance($menu);\r\n                menu && menu.option(\"focusedElement\", null);\r\n                isCellWasFocused && that._focusEditor($editorContainer)\r\n            };\r\n            that._createComponent($menu, Menu, {\r\n                integrationOptions: {},\r\n                activeStateEnabled: false,\r\n                selectionMode: \"single\",\r\n                cssClass: that.getWidgetContainerClass() + \" \" + CELL_FOCUS_DISABLED_CLASS + \" \" + FILTER_MENU,\r\n                showFirstSubmenuMode: \"onHover\",\r\n                hideSubmenuOnMouseLeave: true,\r\n                items: [{\r\n                    disabled: column.filterOperations && column.filterOperations.length ? false : true,\r\n                    icon: OPERATION_ICONS[getColumnSelectedFilterOperation(that, column) || \"default\"],\r\n                    selectable: false,\r\n                    items: that._getFilterOperationMenuItems(column)\r\n                }],\r\n                onItemClick: function(properties) {\r\n                    var selectedFilterOperation = properties.itemData.name;\r\n                    var columnSelectedFilterOperation = getColumnSelectedFilterOperation(that, column);\r\n                    var notFocusEditor = false;\r\n                    var isOnClickMode = isOnClickApplyFilterMode(that);\r\n                    var options = {};\r\n                    if (properties.itemData.items || selectedFilterOperation && selectedFilterOperation === columnSelectedFilterOperation) {\r\n                        return\r\n                    }\r\n                    if (selectedFilterOperation) {\r\n                        options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = selectedFilterOperation;\r\n                        if (\"between\" === selectedFilterOperation || \"between\" === columnSelectedFilterOperation) {\r\n                            notFocusEditor = \"between\" === selectedFilterOperation;\r\n                            options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null\r\n                        }\r\n                    } else {\r\n                        options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null;\r\n                        options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = column.defaultSelectedFilterOperation || null\r\n                    }\r\n                    that._columnsController.columnOption(column.index, options);\r\n                    that._applyFilterViewController.setHighLight($editorContainer, true);\r\n                    if (!selectedFilterOperation) {\r\n                        var editor = getEditorInstance($editorContainer);\r\n                        if (editor && \"dxDateBox\" === editor.NAME && !editor.option(\"isValid\")) {\r\n                            editor.reset();\r\n                            editor.option(\"isValid\", true)\r\n                        }\r\n                    }\r\n                    if (!notFocusEditor) {\r\n                        that._focusEditor($editorContainer)\r\n                    } else {\r\n                        that._showFilterRange($editorContainer.closest(\".\" + EDITOR_CELL_CLASS), column)\r\n                    }\r\n                },\r\n                onSubmenuShown: function() {\r\n                    isCellWasFocused = that._isEditorFocused($editorContainer);\r\n                    that.getController(\"editorFactory\").loseFocus()\r\n                },\r\n                onSubmenuHiding: function() {\r\n                    eventsEngine.trigger($menu, \"blur\");\r\n                    restoreFocus()\r\n                },\r\n                onContentReady: function(e) {\r\n                    eventsEngine.on($menu, \"blur\", () => {\r\n                        var menu = e.component;\r\n                        menu._hideSubmenu(menu._visibleSubmenu);\r\n                        restoreFocus()\r\n                    })\r\n                },\r\n                rtlEnabled: that.option(\"rtlEnabled\")\r\n            })\r\n        },\r\n        _isEditorFocused: function($container) {\r\n            return $container.hasClass(FOCUSED_CLASS) || $container.parents(\".\" + FOCUSED_CLASS).length\r\n        },\r\n        _focusEditor: function($container) {\r\n            this.getController(\"editorFactory\").focus($container);\r\n            eventsEngine.trigger($container.find(EDITORS_INPUT_SELECTOR), \"focus\")\r\n        },\r\n        _renderFilterOperationChooser: function($container, column, $editorContainer) {\r\n            var $menu;\r\n            if (this.option(\"filterRow.showOperationChooser\")) {\r\n                $container.addClass(EDITOR_WITH_MENU_CLASS);\r\n                $menu = $(\"<div>\").prependTo($container);\r\n                this._updateFilterOperationChooser($menu, column, $editorContainer)\r\n            }\r\n        },\r\n        _getFilterOperationMenuItems: function(column) {\r\n            var that = this;\r\n            var result = [{}];\r\n            var filterRowOptions = that.option(\"filterRow\");\r\n            var operationDescriptions = filterRowOptions && filterRowOptions.operationDescriptions || {};\r\n            if (column.filterOperations && column.filterOperations.length) {\r\n                var availableFilterOperations = column.filterOperations.filter((function(value) {\r\n                    return isDefined(OPERATION_DESCRIPTORS[value])\r\n                }));\r\n                result = map(availableFilterOperations, (function(value) {\r\n                    var descriptionName = OPERATION_DESCRIPTORS[value];\r\n                    return {\r\n                        name: value,\r\n                        selected: (getColumnSelectedFilterOperation(that, column) || column.defaultFilterOperation) === value,\r\n                        text: operationDescriptions[descriptionName],\r\n                        icon: OPERATION_ICONS[value]\r\n                    }\r\n                }));\r\n                result.push({\r\n                    name: null,\r\n                    text: filterRowOptions && filterRowOptions.resetOperationText,\r\n                    icon: OPERATION_ICONS.default\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        optionChanged: function(args) {\r\n            switch (args.name) {\r\n                case \"filterRow\":\r\n                case \"showColumnLines\":\r\n                    this._invalidate(true, true);\r\n                    args.handled = true;\r\n                    break;\r\n                default:\r\n                    this.callBase(args)\r\n            }\r\n        }\r\n    }\r\n}();\r\nvar DataControllerFilterRowExtender = {\r\n    skipCalculateColumnFilters: function() {\r\n        return false\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        if (this.skipCalculateColumnFilters()) {\r\n            return this.callBase()\r\n        }\r\n        var filters = [this.callBase()];\r\n        var columns = this._columnsController.getVisibleColumns(null, true);\r\n        each(columns, (function() {\r\n            if (this.allowFiltering && this.calculateFilterExpression && isDefined(this.filterValue)) {\r\n                var filter = this.createFilterExpression(this.filterValue, this.selectedFilterOperation || this.defaultFilterOperation, \"filterRow\");\r\n                filters.push(filter)\r\n            }\r\n        }));\r\n        return gridCoreUtils.combineFilters(filters)\r\n    }\r\n};\r\nvar ApplyFilterViewController = modules.ViewController.inherit({\r\n    _getHeaderPanel: function() {\r\n        if (!this._headerPanel) {\r\n            this._headerPanel = this.getView(\"headerPanel\")\r\n        }\r\n        return this._headerPanel\r\n    },\r\n    setHighLight: function($element, value) {\r\n        if (isOnClickApplyFilterMode(this)) {\r\n            $element && $element.toggleClass(HIGHLIGHT_OUTLINE_CLASS, value) && $element.closest(\".\" + EDITOR_CELL_CLASS).toggleClass(FILTER_MODIFIED_CLASS, value);\r\n            this._getHeaderPanel().enableApplyButton(value)\r\n        }\r\n    },\r\n    applyFilter: function() {\r\n        var columnsController = this.getController(\"columns\");\r\n        var columns = columnsController.getColumns();\r\n        columnsController.beginUpdate();\r\n        for (var i = 0; i < columns.length; i++) {\r\n            var column = columns[i];\r\n            if (void 0 !== column.bufferedFilterValue) {\r\n                columnsController.columnOption(i, \"filterValue\", column.bufferedFilterValue);\r\n                column.bufferedFilterValue = void 0\r\n            }\r\n            if (void 0 !== column.bufferedSelectedFilterOperation) {\r\n                columnsController.columnOption(i, \"selectedFilterOperation\", column.bufferedSelectedFilterOperation);\r\n                column.bufferedSelectedFilterOperation = void 0\r\n            }\r\n        }\r\n        columnsController.endUpdate();\r\n        this.removeHighLights()\r\n    },\r\n    removeHighLights: function() {\r\n        if (isOnClickApplyFilterMode(this)) {\r\n            var columnHeadersViewElement = this.getView(\"columnHeadersView\").element();\r\n            columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + HIGHLIGHT_OUTLINE_CLASS).removeClass(HIGHLIGHT_OUTLINE_CLASS);\r\n            columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + FILTER_MODIFIED_CLASS).removeClass(FILTER_MODIFIED_CLASS);\r\n            this._getHeaderPanel().enableApplyButton(false)\r\n        }\r\n    }\r\n});\r\nexport var filterRowModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterRow: {\r\n                visible: false,\r\n                showOperationChooser: true,\r\n                showAllText: messageLocalization.format(\"dxDataGrid-filterRowShowAllText\"),\r\n                resetOperationText: messageLocalization.format(\"dxDataGrid-filterRowResetOperationText\"),\r\n                applyFilter: \"auto\",\r\n                applyFilterText: messageLocalization.format(\"dxDataGrid-applyFilterText\"),\r\n                operationDescriptions: {\r\n                    equal: messageLocalization.format(\"dxDataGrid-filterRowOperationEquals\"),\r\n                    notEqual: messageLocalization.format(\"dxDataGrid-filterRowOperationNotEquals\"),\r\n                    lessThan: messageLocalization.format(\"dxDataGrid-filterRowOperationLess\"),\r\n                    lessThanOrEqual: messageLocalization.format(\"dxDataGrid-filterRowOperationLessOrEquals\"),\r\n                    greaterThan: messageLocalization.format(\"dxDataGrid-filterRowOperationGreater\"),\r\n                    greaterThanOrEqual: messageLocalization.format(\"dxDataGrid-filterRowOperationGreaterOrEquals\"),\r\n                    startsWith: messageLocalization.format(\"dxDataGrid-filterRowOperationStartsWith\"),\r\n                    contains: messageLocalization.format(\"dxDataGrid-filterRowOperationContains\"),\r\n                    notContains: messageLocalization.format(\"dxDataGrid-filterRowOperationNotContains\"),\r\n                    endsWith: messageLocalization.format(\"dxDataGrid-filterRowOperationEndsWith\"),\r\n                    between: messageLocalization.format(\"dxDataGrid-filterRowOperationBetween\"),\r\n                    isBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsBlank\"),\r\n                    isNotBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\r\n                },\r\n                betweenStartText: messageLocalization.format(\"dxDataGrid-filterRowOperationBetweenStartText\"),\r\n                betweenEndText: messageLocalization.format(\"dxDataGrid-filterRowOperationBetweenEndText\")\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        applyFilter: ApplyFilterViewController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterRowExtender,\r\n            columnsResizer: {\r\n                _startResizing: function() {\r\n                    var that = this;\r\n                    that.callBase.apply(that, arguments);\r\n                    if (that.isResizing()) {\r\n                        var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\r\n                        if (overlayInstance) {\r\n                            var cellIndex = overlayInstance.$element().closest(\"td\").index();\r\n                            if (cellIndex === that._targetPoint.columnIndex || cellIndex === that._targetPoint.columnIndex + 1) {\r\n                                overlayInstance.$content().hide()\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _endResizing: function() {\r\n                    var that = this;\r\n                    var $cell;\r\n                    if (that.isResizing()) {\r\n                        var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\r\n                        if (overlayInstance) {\r\n                            $cell = overlayInstance.$element().closest(\"td\");\r\n                            that._columnHeadersView._updateFilterRangeOverlay({\r\n                                width: getOuterWidth($cell, true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\r\n                            });\r\n                            overlayInstance.$content().show()\r\n                        }\r\n                    }\r\n                    that.callBase.apply(that, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFilterRowExtender,\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    var filterItem = this._prepareFilterItem(items);\r\n                    return filterItem.concat(items)\r\n                },\r\n                _prepareFilterItem: function() {\r\n                    var that = this;\r\n                    var filterItem = [];\r\n                    if (that._isShowApplyFilterButton()) {\r\n                        var hintText = that.option(\"filterRow.applyFilterText\");\r\n                        var columns = that._columnsController.getColumns();\r\n                        var disabled = !columns.filter((function(column) {\r\n                            return void 0 !== column.bufferedFilterValue\r\n                        })).length;\r\n                        var toolbarItem = {\r\n                            widget: \"dxButton\",\r\n                            options: {\r\n                                icon: \"apply-filter\",\r\n                                disabled: disabled,\r\n                                onClick: function() {\r\n                                    that._applyFilterViewController.applyFilter()\r\n                                },\r\n                                hint: hintText,\r\n                                text: hintText,\r\n                                onInitialized: function(e) {\r\n                                    $(e.element).addClass(that._getToolbarButtonClass(APPLY_BUTTON_CLASS))\r\n                                }\r\n                            },\r\n                            showText: \"inMenu\",\r\n                            name: \"applyFilterButton\",\r\n                            location: \"after\",\r\n                            locateInMenu: \"auto\",\r\n                            sortIndex: 10\r\n                        };\r\n                        filterItem.push(toolbarItem)\r\n                    }\r\n                    return filterItem\r\n                },\r\n                _isShowApplyFilterButton: function() {\r\n                    var filterRowOptions = this.option(\"filterRow\");\r\n                    return filterRowOptions && filterRowOptions.visible && \"onClick\" === filterRowOptions.applyFilter\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._dataController = this.getController(\"data\");\r\n                    this._applyFilterViewController = this.getController(\"applyFilter\")\r\n                },\r\n                enableApplyButton: function(value) {\r\n                    this.setToolbarItemDisabled(\"applyFilterButton\", !value)\r\n                },\r\n                isVisible: function() {\r\n                    return this.callBase() || this._isShowApplyFilterButton()\r\n                },\r\n                optionChanged: function(args) {\r\n                    if (\"filterRow\" === args.name) {\r\n                        this._invalidate();\r\n                        args.handled = true\r\n                    } else {\r\n                        this.callBase(args)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.filter_row.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    filterRowModule\r\n} from \"../grid_core/ui.grid_core.filter_row\";\r\ncore.registerModule(\"filterRow\", filterRowModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.header_filter_core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    isDefined,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport Popup from \"../popup\";\r\nimport TreeView from \"../tree_view\";\r\nimport List from \"../list_light\";\r\nimport \"../list/modules/search\";\r\nimport \"../list/modules/selection\";\r\nvar HEADER_FILTER_CLASS = \"dx-header-filter\";\r\nvar HEADER_FILTER_MENU_CLASS = \"dx-header-filter-menu\";\r\nvar DEFAULT_SEARCH_EXPRESSION = \"text\";\r\n\r\nfunction resetChildrenItemSelection(items) {\r\n    items = items || [];\r\n    for (var i = 0; i < items.length; i++) {\r\n        items[i].selected = false;\r\n        resetChildrenItemSelection(items[i].items)\r\n    }\r\n}\r\n\r\nfunction updateSelectAllState(e, filterValues) {\r\n    if (e.component.option(\"searchValue\")) {\r\n        return\r\n    }\r\n    var selectAllCheckBox = $(e.element).find(\".dx-list-select-all-checkbox\").data(\"dxCheckBox\");\r\n    if (selectAllCheckBox && filterValues && filterValues.length) {\r\n        selectAllCheckBox.option(\"value\", void 0)\r\n    }\r\n}\r\n\r\nfunction isSearchEnabled(that, options) {\r\n    var headerFilter = options.headerFilter;\r\n    if (headerFilter && isDefined(headerFilter.allowSearch)) {\r\n        return headerFilter.allowSearch\r\n    }\r\n    return that.option(\"headerFilter.allowSearch\")\r\n}\r\nexport function updateHeaderFilterItemSelectionState(item, filterValuesMatch, isExcludeFilter) {\r\n    if (filterValuesMatch ^ isExcludeFilter) {\r\n        item.selected = true;\r\n        if (isExcludeFilter && item.items) {\r\n            for (var j = 0; j < item.items.length; j++) {\r\n                if (!item.items[j].selected) {\r\n                    item.selected = void 0;\r\n                    break\r\n                }\r\n            }\r\n        }\r\n    } else if (isExcludeFilter || item.selected) {\r\n        item.selected = false;\r\n        resetChildrenItemSelection(item.items)\r\n    }\r\n}\r\nexport var HeaderFilterView = modules.View.inherit({\r\n    getPopupContainer: function() {\r\n        return this._popupContainer\r\n    },\r\n    getListContainer: function() {\r\n        return this._listContainer\r\n    },\r\n    applyHeaderFilter: function(options) {\r\n        var list = this.getListContainer();\r\n        var searchValue = list.option(\"searchValue\");\r\n        var isSelectAll = !searchValue && !options.isFilterBuilder && list.$element().find(\".dx-checkbox\").eq(0).hasClass(\"dx-checkbox-checked\");\r\n        var filterValues = [];\r\n        if (!isSelectAll) {\r\n            if (\"tree\" === options.type) {\r\n                if (options.filterType) {\r\n                    options.filterType = \"include\"\r\n                }! function fillSelectedItemKeys(filterValues, items, isExclude) {\r\n                    each(items, (function(_, item) {\r\n                        if (void 0 !== item.selected && !!item.selected ^ isExclude) {\r\n                            var node = list._getNode(item);\r\n                            var hasChildren = list._hasChildren(node);\r\n                            var hasChildrenWithSelection = hasChildren && item.items && item.items.some(item => item.selected);\r\n                            if (!searchValue || !hasChildrenWithSelection) {\r\n                                filterValues.push(item.value);\r\n                                return\r\n                            }\r\n                        }\r\n                        if (item.items && item.items.length) {\r\n                            fillSelectedItemKeys(filterValues, item.items, isExclude)\r\n                        }\r\n                    }))\r\n                }(filterValues, list.option(\"items\"), false);\r\n                options.filterValues = filterValues\r\n            }\r\n        } else {\r\n            if (\"tree\" === options.type) {\r\n                options.filterType = \"exclude\"\r\n            }\r\n            if (Array.isArray(options.filterValues)) {\r\n                options.filterValues = []\r\n            }\r\n        }\r\n        if (options.filterValues && !options.filterValues.length) {\r\n            options.filterValues = null\r\n        }\r\n        options.apply();\r\n        this.hideHeaderFilterMenu()\r\n    },\r\n    showHeaderFilterMenu: function($columnElement, options) {\r\n        if (options) {\r\n            this._initializePopupContainer(options);\r\n            var popupContainer = this.getPopupContainer();\r\n            this.hideHeaderFilterMenu();\r\n            this.updatePopup($columnElement, options);\r\n            popupContainer.show()\r\n        }\r\n    },\r\n    hideHeaderFilterMenu: function() {\r\n        var headerFilterMenu = this.getPopupContainer();\r\n        headerFilterMenu && headerFilterMenu.hide()\r\n    },\r\n    updatePopup: function($element, options) {\r\n        var showColumnLines = this.option(\"showColumnLines\");\r\n        var alignment = \"right\" === options.alignment ^ !showColumnLines ? \"left\" : \"right\";\r\n        if (this._popupContainer) {\r\n            this._cleanPopupContent();\r\n            this._popupContainer.option(\"position\", {\r\n                my: alignment + \" top\",\r\n                at: alignment + \" bottom\",\r\n                of: $element,\r\n                collision: \"flip fit\"\r\n            })\r\n        }\r\n    },\r\n    _getSearchExpr: function(options) {\r\n        var lookup = options.lookup;\r\n        var useDefaultSearchExpr = options.useDefaultSearchExpr;\r\n        var headerFilterDataSource = options.headerFilter && options.headerFilter.dataSource;\r\n        if (useDefaultSearchExpr || isDefined(headerFilterDataSource) && !isFunction(headerFilterDataSource)) {\r\n            return DEFAULT_SEARCH_EXPRESSION\r\n        }\r\n        if (lookup) {\r\n            return lookup.displayExpr || \"this\"\r\n        }\r\n        if (options.dataSource) {\r\n            var group = options.dataSource.group;\r\n            if (Array.isArray(group) && group.length > 0) {\r\n                return group[0].selector\r\n            } else if (isFunction(group) && !options.remoteFiltering) {\r\n                return group\r\n            }\r\n        }\r\n        return options.dataField || options.selector\r\n    },\r\n    _cleanPopupContent: function() {\r\n        this._popupContainer && this._popupContainer.$content().empty()\r\n    },\r\n    _initializePopupContainer: function(options) {\r\n        var that = this;\r\n        var $element = that.element();\r\n        var headerFilterOptions = that.option(\"headerFilter\");\r\n        var width = options.headerFilter && options.headerFilter.width || headerFilterOptions && headerFilterOptions.width;\r\n        var height = options.headerFilter && options.headerFilter.height || headerFilterOptions && headerFilterOptions.height;\r\n        var dxPopupOptions = {\r\n            width: width,\r\n            height: height,\r\n            visible: false,\r\n            shading: false,\r\n            showTitle: false,\r\n            showCloseButton: false,\r\n            hideOnParentScroll: false,\r\n            dragEnabled: false,\r\n            closeOnOutsideClick: true,\r\n            focusStateEnabled: false,\r\n            copyRootClassesToWrapper: true,\r\n            _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n            toolbarItems: [{\r\n                toolbar: \"bottom\",\r\n                location: \"after\",\r\n                widget: \"dxButton\",\r\n                options: {\r\n                    text: headerFilterOptions.texts.ok,\r\n                    onClick: function() {\r\n                        that.applyHeaderFilter(options)\r\n                    }\r\n                }\r\n            }, {\r\n                toolbar: \"bottom\",\r\n                location: \"after\",\r\n                widget: \"dxButton\",\r\n                options: {\r\n                    text: headerFilterOptions.texts.cancel,\r\n                    onClick: function() {\r\n                        that.hideHeaderFilterMenu()\r\n                    }\r\n                }\r\n            }],\r\n            resizeEnabled: true,\r\n            onShowing: function(e) {\r\n                e.component.$content().parent().addClass(\"dx-dropdowneditor-overlay\");\r\n                that._initializeListContainer(options);\r\n                options.onShowing && options.onShowing(e)\r\n            },\r\n            onShown: function() {\r\n                that.getListContainer().focus()\r\n            },\r\n            onHidden: options.onHidden,\r\n            onInitialized: function(e) {\r\n                var component = e.component;\r\n                component.option(\"animation\", component._getDefaultOptions().animation)\r\n            }\r\n        };\r\n        if (!isDefined(that._popupContainer)) {\r\n            that._popupContainer = that._createComponent($element, Popup, dxPopupOptions)\r\n        } else {\r\n            that._popupContainer.option(dxPopupOptions)\r\n        }\r\n    },\r\n    _initializeListContainer: function(options) {\r\n        var that = this;\r\n        var $content = that._popupContainer.$content();\r\n        var widgetOptions = {\r\n            searchEnabled: isSearchEnabled(that, options),\r\n            searchTimeout: that.option(\"headerFilter.searchTimeout\"),\r\n            searchMode: options.headerFilter && options.headerFilter.searchMode || \"\",\r\n            dataSource: options.dataSource,\r\n            onContentReady: function() {\r\n                that.renderCompleted.fire()\r\n            },\r\n            itemTemplate: function(data, _, element) {\r\n                var $element = $(element);\r\n                if (options.encodeHtml) {\r\n                    return $element.text(data.text)\r\n                }\r\n                return $element.html(data.text)\r\n            }\r\n        };\r\n\r\n        function onOptionChanged(e) {\r\n            if (\"searchValue\" === e.fullName && !options.isFilterBuilder && false !== that.option(\"headerFilter.hideSelectAllOnSearch\")) {\r\n                if (\"tree\" === options.type) {\r\n                    e.component.option(\"showCheckBoxesMode\", e.value ? \"normal\" : \"selectAll\")\r\n                } else {\r\n                    e.component.option(\"selectionMode\", e.value ? \"multiple\" : \"all\")\r\n                }\r\n            }\r\n        }\r\n        if (\"tree\" === options.type) {\r\n            that._listContainer = that._createComponent($(\"<div>\").appendTo($content), TreeView, extend(widgetOptions, {\r\n                showCheckBoxesMode: options.isFilterBuilder ? \"normal\" : \"selectAll\",\r\n                onOptionChanged: onOptionChanged,\r\n                keyExpr: \"id\"\r\n            }))\r\n        } else {\r\n            that._listContainer = that._createComponent($(\"<div>\").appendTo($content), List, extend(widgetOptions, {\r\n                searchExpr: that._getSearchExpr(options),\r\n                pageLoadMode: \"scrollBottom\",\r\n                showSelectionControls: true,\r\n                selectionMode: options.isFilterBuilder ? \"multiple\" : \"all\",\r\n                onOptionChanged: onOptionChanged,\r\n                onSelectionChanged: function(e) {\r\n                    var items = e.component.option(\"items\");\r\n                    var selectedItems = e.component.option(\"selectedItems\");\r\n                    if (!e.component._selectedItemsUpdating && !e.component.option(\"searchValue\") && !options.isFilterBuilder) {\r\n                        var filterValues = options.filterValues || [];\r\n                        var isExclude = \"exclude\" === options.filterType;\r\n                        if (0 === selectedItems.length && items.length && (filterValues.length <= 1 || isExclude && filterValues.length === items.length - 1)) {\r\n                            options.filterType = \"include\";\r\n                            options.filterValues = []\r\n                        } else if (selectedItems.length === items.length) {\r\n                            options.filterType = \"exclude\";\r\n                            options.filterValues = []\r\n                        }\r\n                    }\r\n                    each(items, (function(index, item) {\r\n                        var selected = gridCoreUtils.getIndexByKey(item, selectedItems, null) >= 0;\r\n                        var oldSelected = !!item.selected;\r\n                        if (oldSelected !== selected) {\r\n                            item.selected = selected;\r\n                            options.filterValues = options.filterValues || [];\r\n                            var filterValueIndex = gridCoreUtils.getIndexByKey(item.value, options.filterValues, null);\r\n                            if (filterValueIndex >= 0) {\r\n                                options.filterValues.splice(filterValueIndex, 1)\r\n                            }\r\n                            if (selected ^ \"exclude\" === options.filterType) {\r\n                                options.filterValues.push(item.value)\r\n                            }\r\n                        }\r\n                    }));\r\n                    updateSelectAllState(e, options.filterValues)\r\n                },\r\n                onContentReady: function(e) {\r\n                    var component = e.component;\r\n                    var items = component.option(\"items\");\r\n                    var selectedItems = [];\r\n                    each(items, (function() {\r\n                        if (this.selected) {\r\n                            selectedItems.push(this)\r\n                        }\r\n                    }));\r\n                    component._selectedItemsUpdating = true;\r\n                    component.option(\"selectedItems\", selectedItems);\r\n                    component._selectedItemsUpdating = false;\r\n                    updateSelectAllState(e, options.filterValues)\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    _renderCore: function() {\r\n        this.element().addClass(HEADER_FILTER_MENU_CLASS)\r\n    }\r\n});\r\nexport var allowHeaderFiltering = function(column) {\r\n    return isDefined(column.allowHeaderFiltering) ? column.allowHeaderFiltering : column.allowFiltering\r\n};\r\nexport var headerFilterMixin = {\r\n    _applyColumnState: function(options) {\r\n        var $headerFilterIndicator;\r\n        var rootElement = options.rootElement;\r\n        var column = options.column;\r\n        if (\"headerFilter\" === options.name) {\r\n            rootElement.find(\".\" + HEADER_FILTER_CLASS).remove();\r\n            if (allowHeaderFiltering(column)) {\r\n                $headerFilterIndicator = this.callBase(options).toggleClass(\"dx-header-filter-empty\", this._isHeaderFilterEmpty(column));\r\n                if (!this.option(\"useLegacyKeyboardNavigation\")) {\r\n                    $headerFilterIndicator.attr(\"tabindex\", this.option(\"tabindex\") || 0)\r\n                }\r\n            }\r\n            return $headerFilterIndicator\r\n        }\r\n        return this.callBase(options)\r\n    },\r\n    _isHeaderFilterEmpty: function(column) {\r\n        return !column.filterValues || !column.filterValues.length\r\n    },\r\n    _getIndicatorClassName: function(name) {\r\n        if (\"headerFilter\" === name) {\r\n            return HEADER_FILTER_CLASS\r\n        }\r\n        return this.callBase(name)\r\n    },\r\n    _renderIndicator: function(options) {\r\n        var $container = options.container;\r\n        var $indicator = options.indicator;\r\n        if (\"headerFilter\" === options.name) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\");\r\n            if ($container.children().length && (!rtlEnabled && \"right\" === options.columnAlignment || rtlEnabled && \"left\" === options.columnAlignment)) {\r\n                $container.prepend($indicator);\r\n                return\r\n            }\r\n        }\r\n        this.callBase(options)\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"headerFilter\" === args.name) {\r\n            var requireReady = \"columnHeadersView\" === this.name;\r\n            this._invalidate(requireReady, requireReady);\r\n            args.handled = true\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.header_filter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport filterUtils from \"../shared/filtering\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    headerFilterMixin,\r\n    HeaderFilterView,\r\n    updateHeaderFilterItemSelectionState,\r\n    allowHeaderFiltering\r\n} from \"./ui.grid_core.header_filter_core\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined,\r\n    isObject,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    normalizeDataSourceOptions\r\n} from \"../../data/data_source/utils\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    restoreFocus\r\n} from \"../shared/accessibility\";\r\nimport dataQuery from \"../../data/query\";\r\nimport storeHelper from \"../../data/store_helper\";\r\nvar DATE_INTERVAL_FORMATS = {\r\n    month: function(value) {\r\n        return dateLocalization.getMonthNames()[value - 1]\r\n    },\r\n    quarter: function(value) {\r\n        return dateLocalization.format(new Date(2e3, 3 * value - 1), \"quarter\")\r\n    }\r\n};\r\n\r\nfunction ungroupUTCDates(items, dateParts, dates) {\r\n    dateParts = dateParts || [];\r\n    dates = dates || [];\r\n    items.forEach(item => {\r\n        if (isDefined(item.key)) {\r\n            var isMonthPart = 1 === dateParts.length;\r\n            dateParts.push(isMonthPart ? item.key - 1 : item.key);\r\n            if (item.items) {\r\n                ungroupUTCDates(item.items, dateParts, dates)\r\n            } else {\r\n                var date = new Date(Date.UTC.apply(Date, dateParts));\r\n                dates.push(date)\r\n            }\r\n            dateParts.pop()\r\n        } else {\r\n            dates.push(null)\r\n        }\r\n    });\r\n    return dates\r\n}\r\n\r\nfunction convertDataFromUTCToLocal(data, column) {\r\n    var dates = ungroupUTCDates(data);\r\n    var query = dataQuery(dates);\r\n    var group = gridCoreUtils.getHeaderFilterGroupParameters(_extends({}, column, {\r\n        calculateCellValue: date => date\r\n    }));\r\n    return storeHelper.queryByOptions(query, {\r\n        group: group\r\n    }).toArray()\r\n}\r\n\r\nfunction isUTCFormat(format) {\r\n    return \"Z\" === (null === format || void 0 === format ? void 0 : format.slice(-1)) || \"'Z'\" === (null === format || void 0 === format ? void 0 : format.slice(-3))\r\n}\r\nvar HeaderFilterController = modules.ViewController.inherit({\r\n    init: function() {\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._dataController = this.getController(\"data\");\r\n        this._headerFilterView = this.getView(\"headerFilterView\")\r\n    },\r\n    _updateSelectedState: function(items, column) {\r\n        var i = items.length;\r\n        var isExclude = \"exclude\" === column.filterType;\r\n        while (i--) {\r\n            var item = items[i];\r\n            if (\"items\" in items[i]) {\r\n                this._updateSelectedState(items[i].items, column)\r\n            }\r\n            updateHeaderFilterItemSelectionState(item, gridCoreUtils.getIndexByKey(items[i].value, column.filterValues, null) > -1, isExclude)\r\n        }\r\n    },\r\n    _normalizeGroupItem: function(item, currentLevel, options) {\r\n        var value;\r\n        var displayValue;\r\n        var path = options.path;\r\n        var valueSelector = options.valueSelector;\r\n        var displaySelector = options.displaySelector;\r\n        var column = options.column;\r\n        if (valueSelector && displaySelector) {\r\n            value = valueSelector(item);\r\n            displayValue = displaySelector(item)\r\n        } else {\r\n            value = item.key;\r\n            displayValue = value\r\n        }\r\n        if (!isObject(item)) {\r\n            item = {}\r\n        } else {\r\n            item = extend({}, item)\r\n        }\r\n        path.push(value);\r\n        if (1 === path.length) {\r\n            item.value = path[0]\r\n        } else {\r\n            item.value = path.join(\"/\")\r\n        }\r\n        item.text = this.getHeaderItemText(displayValue, column, currentLevel, options.headerFilterOptions);\r\n        return item\r\n    },\r\n    getHeaderItemText: function(displayValue, column, currentLevel, headerFilterOptions) {\r\n        var text = gridCoreUtils.formatValue(displayValue, function(value, column, currentLevel) {\r\n            var groupInterval = filterUtils.getGroupInterval(column);\r\n            var result = gridCoreUtils.getFormatOptionsByColumn(column, \"headerFilter\");\r\n            if (groupInterval) {\r\n                result.groupInterval = groupInterval[currentLevel];\r\n                if (gridCoreUtils.isDateType(column.dataType)) {\r\n                    result.format = DATE_INTERVAL_FORMATS[groupInterval[currentLevel]]\r\n                } else if (\"number\" === column.dataType) {\r\n                    result.getDisplayFormat = function() {\r\n                        var formatOptions = {\r\n                            format: column.format,\r\n                            target: \"headerFilter\"\r\n                        };\r\n                        var firstValueText = gridCoreUtils.formatValue(value, formatOptions);\r\n                        var secondValue = value + groupInterval[currentLevel];\r\n                        var secondValueText = gridCoreUtils.formatValue(secondValue, formatOptions);\r\n                        return firstValueText && secondValueText ? firstValueText + \" - \" + secondValueText : \"\"\r\n                    }\r\n                }\r\n            }\r\n            return result\r\n        }(displayValue, column, currentLevel));\r\n        if (!text) {\r\n            text = headerFilterOptions.texts.emptyValue\r\n        }\r\n        return text\r\n    },\r\n    _processGroupItems: function(groupItems, currentLevel, path, options) {\r\n        var displaySelector;\r\n        var valueSelector;\r\n        var column = options.column;\r\n        var lookup = column.lookup;\r\n        var level = options.level;\r\n        path = path || [];\r\n        currentLevel = currentLevel || 0;\r\n        if (lookup) {\r\n            displaySelector = compileGetter(lookup.displayExpr);\r\n            valueSelector = compileGetter(lookup.valueExpr)\r\n        }\r\n        for (var i = 0; i < groupItems.length; i++) {\r\n            groupItems[i] = this._normalizeGroupItem(groupItems[i], currentLevel, {\r\n                column: options.column,\r\n                headerFilterOptions: options.headerFilterOptions,\r\n                displaySelector: displaySelector,\r\n                valueSelector: valueSelector,\r\n                path: path\r\n            });\r\n            if (\"items\" in groupItems[i]) {\r\n                if (currentLevel === level || !isDefined(groupItems[i].value)) {\r\n                    delete groupItems[i].items\r\n                } else {\r\n                    this._processGroupItems(groupItems[i].items, currentLevel + 1, path, options)\r\n                }\r\n            }\r\n            path.pop()\r\n        }\r\n    },\r\n    getDataSource: function(column) {\r\n        var _column$headerFilter;\r\n        var that = this;\r\n        var dataSource = that._dataController.dataSource();\r\n        var remoteGrouping = null === dataSource || void 0 === dataSource ? void 0 : dataSource.remoteOperations().grouping;\r\n        var group = gridCoreUtils.getHeaderFilterGroupParameters(column, remoteGrouping);\r\n        var headerFilterDataSource = null === (_column$headerFilter = column.headerFilter) || void 0 === _column$headerFilter ? void 0 : _column$headerFilter.dataSource;\r\n        var headerFilterOptions = that.option(\"headerFilter\");\r\n        var isLookup = false;\r\n        var options = {\r\n            component: that.component\r\n        };\r\n        if (!dataSource) {\r\n            return\r\n        }\r\n        if (isDefined(headerFilterDataSource) && !isFunction(headerFilterDataSource)) {\r\n            options.dataSource = normalizeDataSourceOptions(headerFilterDataSource)\r\n        } else if (column.lookup) {\r\n            isLookup = true;\r\n            var lookupDataSourceOptions;\r\n            if (column.lookup.items) {\r\n                lookupDataSourceOptions = column.lookup.items\r\n            } else {\r\n                lookupDataSourceOptions = column.lookup.dataSource;\r\n                if (isFunction(lookupDataSourceOptions) && !variableWrapper.isWrapped(lookupDataSourceOptions)) {\r\n                    lookupDataSourceOptions = lookupDataSourceOptions({})\r\n                }\r\n            }\r\n            options.dataSource = normalizeDataSourceOptions(lookupDataSourceOptions)\r\n        } else {\r\n            var cutoffLevel = Array.isArray(group) ? group.length - 1 : 0;\r\n            that._currentColumn = column;\r\n            var filter = that._dataController.getCombinedFilter();\r\n            that._currentColumn = null;\r\n            options.dataSource = {\r\n                filter: filter,\r\n                group: group,\r\n                useDefaultSearch: true,\r\n                load: function(options) {\r\n                    var d = new Deferred;\r\n                    options.dataField = column.dataField || column.name;\r\n                    dataSource.load(options).done((function(data) {\r\n                        var convertUTCDates = remoteGrouping && isUTCFormat(column.serializationFormat) && cutoffLevel > 3;\r\n                        if (convertUTCDates) {\r\n                            data = convertDataFromUTCToLocal(data, column)\r\n                        }\r\n                        that._processGroupItems(data, null, null, {\r\n                            level: cutoffLevel,\r\n                            column: column,\r\n                            headerFilterOptions: headerFilterOptions\r\n                        });\r\n                        d.resolve(data)\r\n                    })).fail(d.reject);\r\n                    return d\r\n                }\r\n            }\r\n        }\r\n        if (isFunction(headerFilterDataSource)) {\r\n            headerFilterDataSource.call(column, options)\r\n        }\r\n        var origPostProcess = options.dataSource.postProcess;\r\n        options.dataSource.postProcess = function(data) {\r\n            var items = data;\r\n            if (isLookup) {\r\n                if (0 === this.pageIndex() && !this.searchValue()) {\r\n                    items = items.slice(0);\r\n                    items.unshift(null)\r\n                }\r\n                that._processGroupItems(items, null, null, {\r\n                    level: 0,\r\n                    column: column,\r\n                    headerFilterOptions: headerFilterOptions\r\n                })\r\n            }\r\n            items = origPostProcess && origPostProcess.call(this, items) || items;\r\n            that._updateSelectedState(items, column);\r\n            return items\r\n        };\r\n        return options.dataSource\r\n    },\r\n    getCurrentColumn: function() {\r\n        return this._currentColumn\r\n    },\r\n    showHeaderFilterMenu: function(columnIndex, isGroupPanel) {\r\n        var columnsController = this._columnsController;\r\n        var column = extend(true, {}, this._columnsController.getColumns()[columnIndex]);\r\n        if (column) {\r\n            var visibleIndex = columnsController.getVisibleIndex(columnIndex);\r\n            var view = isGroupPanel ? this.getView(\"headerPanel\") : this.getView(\"columnHeadersView\");\r\n            var $columnElement = $columnElement || view.getColumnElements().eq(isGroupPanel ? column.groupIndex : visibleIndex);\r\n            this.showHeaderFilterMenuBase({\r\n                columnElement: $columnElement,\r\n                column: column,\r\n                applyFilter: true,\r\n                apply: function() {\r\n                    columnsController.columnOption(columnIndex, {\r\n                        filterValues: this.filterValues,\r\n                        filterType: this.filterType\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    },\r\n    showHeaderFilterMenuBase: function(options) {\r\n        var that = this;\r\n        var column = options.column;\r\n        if (column) {\r\n            var groupInterval = filterUtils.getGroupInterval(column);\r\n            var dataSource = that._dataController.dataSource();\r\n            var remoteFiltering = dataSource && dataSource.remoteOperations().filtering;\r\n            extend(options, column, {\r\n                type: groupInterval && groupInterval.length > 1 ? \"tree\" : \"list\",\r\n                remoteFiltering: remoteFiltering,\r\n                onShowing: function(e) {\r\n                    var dxResizableInstance = e.component.$overlayContent().dxResizable(\"instance\");\r\n                    dxResizableInstance && dxResizableInstance.option(\"onResizeEnd\", (function(e) {\r\n                        var columnsController = that.getController(\"columns\");\r\n                        var headerFilterByColumn = columnsController.columnOption(options.dataField, \"headerFilter\");\r\n                        headerFilterByColumn = headerFilterByColumn || {};\r\n                        headerFilterByColumn.width = e.width;\r\n                        headerFilterByColumn.height = e.height;\r\n                        columnsController.columnOption(options.dataField, \"headerFilter\", headerFilterByColumn, true)\r\n                    }))\r\n                },\r\n                onHidden: () => restoreFocus(this)\r\n            });\r\n            options.dataSource = that.getDataSource(options);\r\n            if (options.isFilterBuilder) {\r\n                options.dataSource.filter = null;\r\n                options.alignment = \"right\"\r\n            }\r\n            that._headerFilterView.showHeaderFilterMenu(options.columnElement, options)\r\n        }\r\n    },\r\n    hideHeaderFilterMenu: function() {\r\n        this._headerFilterView.hideHeaderFilterMenu()\r\n    }\r\n});\r\nvar ColumnHeadersViewHeaderFilterExtender = extend({}, headerFilterMixin, {\r\n    _renderCellContent: function($cell, options) {\r\n        var $headerFilterIndicator;\r\n        var column = options.column;\r\n        if (!column.command && allowHeaderFiltering(column) && this.option(\"headerFilter.visible\") && \"header\" === options.rowType) {\r\n            $headerFilterIndicator = this._applyColumnState({\r\n                name: \"headerFilter\",\r\n                rootElement: $cell,\r\n                column: column,\r\n                showColumnLines: this.option(\"showColumnLines\")\r\n            });\r\n            $headerFilterIndicator && this._subscribeToIndicatorEvent($headerFilterIndicator, column, \"headerFilter\")\r\n        }\r\n        this.callBase($cell, options)\r\n    },\r\n    _subscribeToIndicatorEvent: function($indicator, column, indicatorName) {\r\n        var that = this;\r\n        if (\"headerFilter\" === indicatorName) {\r\n            eventsEngine.on($indicator, clickEventName, that.createAction((function(e) {\r\n                e.event.stopPropagation();\r\n                that.getController(\"headerFilter\").showHeaderFilterMenu(column.index, false)\r\n            })))\r\n        }\r\n    },\r\n    _updateIndicator: function($cell, column, indicatorName) {\r\n        var $indicator = this.callBase($cell, column, indicatorName);\r\n        $indicator && this._subscribeToIndicatorEvent($indicator, column, indicatorName)\r\n    },\r\n    _updateHeaderFilterIndicators: function() {\r\n        if (this.option(\"headerFilter.visible\")) {\r\n            this._updateIndicators(\"headerFilter\")\r\n        }\r\n    },\r\n    _needUpdateFilterIndicators: function() {\r\n        return true\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var optionNames = e.optionNames;\r\n        if (gridCoreUtils.checkChanges(optionNames, [\"filterValues\", \"filterType\"])) {\r\n            if (this._needUpdateFilterIndicators()) {\r\n                this._updateHeaderFilterIndicators()\r\n            }\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    }\r\n});\r\nvar HeaderPanelHeaderFilterExtender = extend({}, headerFilterMixin, {\r\n    _createGroupPanelItem: function($rootElement, groupColumn) {\r\n        var that = this;\r\n        var $item = that.callBase.apply(that, arguments);\r\n        var $headerFilterIndicator;\r\n        if (!groupColumn.command && allowHeaderFiltering(groupColumn) && that.option(\"headerFilter.visible\")) {\r\n            $headerFilterIndicator = that._applyColumnState({\r\n                name: \"headerFilter\",\r\n                rootElement: $item,\r\n                column: {\r\n                    alignment: getDefaultAlignment(that.option(\"rtlEnabled\")),\r\n                    filterValues: groupColumn.filterValues,\r\n                    allowHeaderFiltering: true\r\n                },\r\n                showColumnLines: true\r\n            });\r\n            $headerFilterIndicator && eventsEngine.on($headerFilterIndicator, clickEventName, that.createAction((function(e) {\r\n                var event = e.event;\r\n                event.stopPropagation();\r\n                that.getController(\"headerFilter\").showHeaderFilterMenu(groupColumn.index, true)\r\n            })))\r\n        }\r\n        return $item\r\n    }\r\n});\r\nexport function invertFilterExpression(filter) {\r\n    return [\"!\", filter]\r\n}\r\nvar DataControllerFilterRowExtender = {\r\n    skipCalculateColumnFilters: function() {\r\n        return false\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        if (this.skipCalculateColumnFilters()) {\r\n            return this.callBase()\r\n        }\r\n        var filters = [this.callBase()];\r\n        var columns = this._columnsController.getVisibleColumns(null, true);\r\n        var headerFilterController = this.getController(\"headerFilter\");\r\n        var currentColumn = headerFilterController.getCurrentColumn();\r\n        each(columns, (function(_, column) {\r\n            var filter;\r\n            if (currentColumn && currentColumn.index === column.index) {\r\n                return\r\n            }\r\n            if (allowHeaderFiltering(column) && column.calculateFilterExpression && Array.isArray(column.filterValues) && column.filterValues.length) {\r\n                var filterValues = [];\r\n                each(column.filterValues, (function(_, filterValue) {\r\n                    if (Array.isArray(filterValue)) {\r\n                        filter = filterValue\r\n                    } else {\r\n                        if (column.deserializeValue && !gridCoreUtils.isDateType(column.dataType) && \"number\" !== column.dataType) {\r\n                            filterValue = column.deserializeValue(filterValue)\r\n                        }\r\n                        filter = column.createFilterExpression(filterValue, \"=\", \"headerFilter\")\r\n                    }\r\n                    if (filter) {\r\n                        filter.columnIndex = column.index\r\n                    }\r\n                    filterValues.push(filter)\r\n                }));\r\n                filterValues = gridCoreUtils.combineFilters(filterValues, \"or\");\r\n                filters.push(\"exclude\" === column.filterType ? [\"!\", filterValues] : filterValues)\r\n            }\r\n        }));\r\n        return gridCoreUtils.combineFilters(filters)\r\n    }\r\n};\r\nexport var headerFilterModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            headerFilter: {\r\n                visible: false,\r\n                width: 252,\r\n                height: 325,\r\n                allowSearch: false,\r\n                searchTimeout: 500,\r\n                texts: {\r\n                    emptyValue: messageLocalization.format(\"dxDataGrid-headerFilterEmptyValue\"),\r\n                    ok: messageLocalization.format(\"dxDataGrid-headerFilterOK\"),\r\n                    cancel: messageLocalization.format(\"dxDataGrid-headerFilterCancel\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        headerFilter: HeaderFilterController\r\n    },\r\n    views: {\r\n        headerFilterView: HeaderFilterView\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterRowExtender\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewHeaderFilterExtender,\r\n            headerPanel: HeaderPanelHeaderFilterExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.header_filter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    headerFilterModule\r\n} from \"../grid_core/ui.grid_core.header_filter\";\r\ncore.registerModule(\"headerFilter\", headerFilterModule);\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder/between.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nvar FILTER_BUILDER_RANGE_CLASS = \"dx-filterbuilder-range\";\r\nvar FILTER_BUILDER_RANGE_START_CLASS = FILTER_BUILDER_RANGE_CLASS + \"-start\";\r\nvar FILTER_BUILDER_RANGE_END_CLASS = FILTER_BUILDER_RANGE_CLASS + \"-end\";\r\nvar FILTER_BUILDER_RANGE_SEPARATOR_CLASS = FILTER_BUILDER_RANGE_CLASS + \"-separator\";\r\nvar SEPARATOR = \"\\u2013\";\r\n\r\nfunction editorTemplate(conditionInfo, container) {\r\n    var $editorStart = $(\"<div>\").addClass(FILTER_BUILDER_RANGE_START_CLASS);\r\n    var $editorEnd = $(\"<div>\").addClass(FILTER_BUILDER_RANGE_END_CLASS);\r\n    var values = conditionInfo.value || [];\r\n    var getStartValue = function(values) {\r\n        return values && values.length > 0 ? values[0] : null\r\n    };\r\n    var getEndValue = function(values) {\r\n        return values && 2 === values.length ? values[1] : null\r\n    };\r\n    container.append($editorStart);\r\n    container.append($(\"<span>\").addClass(FILTER_BUILDER_RANGE_SEPARATOR_CLASS).text(SEPARATOR));\r\n    container.append($editorEnd);\r\n    container.addClass(FILTER_BUILDER_RANGE_CLASS);\r\n    this._editorFactory.createEditor.call(this, $editorStart, extend({}, conditionInfo.field, conditionInfo, {\r\n        value: getStartValue(values),\r\n        parentType: \"filterBuilder\",\r\n        setValue: function(value) {\r\n            values = [value, getEndValue(values)];\r\n            conditionInfo.setValue(values)\r\n        }\r\n    }));\r\n    this._editorFactory.createEditor.call(this, $editorEnd, extend({}, conditionInfo.field, conditionInfo, {\r\n        value: getEndValue(values),\r\n        parentType: \"filterBuilder\",\r\n        setValue: function(value) {\r\n            values = [getStartValue(values), value];\r\n            conditionInfo.setValue(values)\r\n        }\r\n    }))\r\n}\r\nexport function getConfig(caption, context) {\r\n    return {\r\n        name: \"between\",\r\n        caption: caption,\r\n        icon: \"range\",\r\n        valueSeparator: SEPARATOR,\r\n        dataTypes: [\"number\", \"date\", \"datetime\"],\r\n        editorTemplate: editorTemplate.bind(context),\r\n        notForLookup: true\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder/ui.filter_operations_dictionary.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nvar OPERATION_ICONS = {\r\n    \"=\": \"equal\",\r\n    \"<>\": \"notequal\",\r\n    \"<\": \"less\",\r\n    \"<=\": \"lessorequal\",\r\n    \">\": \"greater\",\r\n    \">=\": \"greaterorequal\",\r\n    notcontains: \"doesnotcontain\",\r\n    contains: \"contains\",\r\n    startswith: \"startswith\",\r\n    endswith: \"endswith\",\r\n    isblank: \"isblank\",\r\n    isnotblank: \"isnotblank\"\r\n};\r\nvar OPERATION_NAME = {\r\n    \"=\": \"equal\",\r\n    \"<>\": \"notEqual\",\r\n    \"<\": \"lessThan\",\r\n    \"<=\": \"lessThanOrEqual\",\r\n    \">\": \"greaterThan\",\r\n    \">=\": \"greaterThanOrEqual\",\r\n    startswith: \"startsWith\",\r\n    contains: \"contains\",\r\n    notcontains: \"notContains\",\r\n    endswith: \"endsWith\",\r\n    isblank: \"isBlank\",\r\n    isnotblank: \"isNotBlank\",\r\n    between: \"between\"\r\n};\r\nexport default {\r\n    getIconByFilterOperation: function(filterOperation) {\r\n        return OPERATION_ICONS[filterOperation]\r\n    },\r\n    getNameByFilterOperation: function(filterOperation) {\r\n        return OPERATION_NAME[filterOperation]\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder/utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    errors as dataErrors\r\n} from \"../../data/errors\";\r\nimport {\r\n    isDefined,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport filterUtils from \"../shared/filtering\";\r\nimport formatHelper from \"../../format_helper\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    captionize\r\n} from \"../../core/utils/inflector\";\r\nimport {\r\n    getConfig\r\n} from \"./between\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    DataSource\r\n} from \"../../data/data_source/data_source\";\r\nimport filterOperationsDictionary from \"./ui.filter_operations_dictionary\";\r\nvar DEFAULT_DATA_TYPE = \"string\";\r\nvar EMPTY_MENU_ICON = \"icon-none\";\r\nvar AND_GROUP_OPERATION = \"and\";\r\nvar EQUAL_OPERATION = \"=\";\r\nvar NOT_EQUAL_OPERATION = \"<>\";\r\nvar DATATYPE_OPERATIONS = {\r\n    number: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"isblank\", \"isnotblank\"],\r\n    string: [\"contains\", \"notcontains\", \"startswith\", \"endswith\", \"=\", \"<>\", \"isblank\", \"isnotblank\"],\r\n    date: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"isblank\", \"isnotblank\"],\r\n    datetime: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"isblank\", \"isnotblank\"],\r\n    boolean: [\"=\", \"<>\", \"isblank\", \"isnotblank\"],\r\n    object: [\"isblank\", \"isnotblank\"]\r\n};\r\nvar DEFAULT_FORMAT = {\r\n    date: \"shortDate\",\r\n    datetime: \"shortDateShortTime\"\r\n};\r\nvar LOOKUP_OPERATIONS = [\"=\", \"<>\", \"isblank\", \"isnotblank\"];\r\nvar AVAILABLE_FIELD_PROPERTIES = [\"caption\", \"customizeText\", \"dataField\", \"dataType\", \"editorTemplate\", \"falseText\", \"editorOptions\", \"filterOperations\", \"format\", \"lookup\", \"trueText\", \"calculateFilterExpression\", \"name\"];\r\nvar FILTER_BUILDER_CLASS = \"dx-filterbuilder\";\r\nvar FILTER_BUILDER_ITEM_TEXT_CLASS = FILTER_BUILDER_CLASS + \"-text\";\r\nvar FILTER_BUILDER_ITEM_TEXT_PART_CLASS = FILTER_BUILDER_ITEM_TEXT_CLASS + \"-part\";\r\nvar FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS = FILTER_BUILDER_ITEM_TEXT_CLASS + \"-separator\";\r\nvar FILTER_BUILDER_ITEM_TEXT_SEPARATOR_EMPTY_CLASS = FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS + \"-empty\";\r\n\r\nfunction getFormattedValueText(field, value) {\r\n    var fieldFormat = field.format || DEFAULT_FORMAT[field.dataType];\r\n    return formatHelper.format(value, fieldFormat)\r\n}\r\n\r\nfunction isNegationGroup(group) {\r\n    return group && group.length > 1 && \"!\" === group[0] && !isCondition(group)\r\n}\r\nexport function getGroupCriteria(group) {\r\n    return isNegationGroup(group) ? group[1] : group\r\n}\r\n\r\nfunction setGroupCriteria(group, criteria) {\r\n    if (isNegationGroup(group)) {\r\n        group[1] = criteria\r\n    } else {\r\n        group = criteria\r\n    }\r\n    return group\r\n}\r\n\r\nfunction convertGroupToNewStructure(group, value) {\r\n    if (function(value) {\r\n            return -1 !== value.indexOf(\"!\")\r\n        }(value)) {\r\n        if (!isNegationGroup(group)) {\r\n            ! function(group) {\r\n                var criteria = group.slice(0);\r\n                group.length = 0;\r\n                group.push(\"!\", criteria)\r\n            }(group)\r\n        }\r\n    } else if (isNegationGroup(group)) {\r\n        ! function(group) {\r\n            var criteria = getGroupCriteria(group);\r\n            group.length = 0;\r\n            [].push.apply(group, criteria)\r\n        }(group)\r\n    }\r\n}\r\nexport function setGroupValue(group, value) {\r\n    convertGroupToNewStructure(group, value);\r\n    var criteria = getGroupCriteria(group);\r\n    var i;\r\n    value = function(value) {\r\n        return -1 === value.indexOf(\"!\") ? value : value.substring(1)\r\n    }(value);\r\n    ! function(criteria, value) {\r\n        for (i = 0; i < criteria.length; i++) {\r\n            if (!Array.isArray(criteria[i])) {\r\n                criteria[i] = value\r\n            }\r\n        }\r\n    }(criteria, value);\r\n    return group\r\n}\r\nexport function getGroupMenuItem(group, availableGroups) {\r\n    var groupValue = getGroupValue(group);\r\n    return availableGroups.filter((function(item) {\r\n        return item.value === groupValue\r\n    }))[0]\r\n}\r\n\r\nfunction getCriteriaOperation(criteria) {\r\n    if (isCondition(criteria)) {\r\n        return AND_GROUP_OPERATION\r\n    }\r\n    var value = \"\";\r\n    for (var i = 0; i < criteria.length; i++) {\r\n        var item = criteria[i];\r\n        if (!Array.isArray(item)) {\r\n            if (value && value !== item) {\r\n                throw new dataErrors.Error(\"E4019\")\r\n            }\r\n            if (\"!\" !== item) {\r\n                value = item\r\n            }\r\n        }\r\n    }\r\n    return value\r\n}\r\nexport function getGroupValue(group) {\r\n    var criteria = getGroupCriteria(group);\r\n    var value = getCriteriaOperation(criteria);\r\n    if (!value) {\r\n        value = AND_GROUP_OPERATION\r\n    }\r\n    if (criteria !== group) {\r\n        value = \"!\" + value\r\n    }\r\n    return value\r\n}\r\n\r\nfunction getDefaultFilterOperations(field) {\r\n    return field.lookup && LOOKUP_OPERATIONS || DATATYPE_OPERATIONS[field.dataType || DEFAULT_DATA_TYPE]\r\n}\r\n\r\nfunction containItems(entity) {\r\n    return Array.isArray(entity) && entity.length\r\n}\r\nexport function getFilterOperations(field) {\r\n    var result = containItems(field.filterOperations) ? field.filterOperations : getDefaultFilterOperations(field);\r\n    return extend([], result)\r\n}\r\nexport function getCaptionByOperation(operation, filterOperationDescriptions) {\r\n    var operationName = filterOperationsDictionary.getNameByFilterOperation(operation);\r\n    return filterOperationDescriptions && filterOperationDescriptions[operationName] ? filterOperationDescriptions[operationName] : operationName\r\n}\r\nexport function getOperationFromAvailable(operation, availableOperations) {\r\n    for (var i = 0; i < availableOperations.length; i++) {\r\n        if (availableOperations[i].value === operation) {\r\n            return availableOperations[i]\r\n        }\r\n    }\r\n    throw new errors.Error(\"E1048\", operation)\r\n}\r\nexport function getCustomOperation(customOperations, name) {\r\n    var filteredOperations = customOperations.filter((function(item) {\r\n        return item.name === name\r\n    }));\r\n    return filteredOperations.length ? filteredOperations[0] : null\r\n}\r\nexport function getAvailableOperations(field, filterOperationDescriptions, customOperations) {\r\n    var filterOperations = getFilterOperations(field);\r\n    var isLookupField = !!field.lookup;\r\n    customOperations.forEach((function(customOperation) {\r\n        if (!field.filterOperations && -1 === filterOperations.indexOf(customOperation.name)) {\r\n            var dataTypes = customOperation && customOperation.dataTypes;\r\n            var isOperationForbidden = isLookupField ? !!customOperation.notForLookup : false;\r\n            if (!isOperationForbidden && dataTypes && dataTypes.indexOf(field.dataType || DEFAULT_DATA_TYPE) >= 0) {\r\n                filterOperations.push(customOperation.name)\r\n            }\r\n        }\r\n    }));\r\n    return filterOperations.map((function(operation) {\r\n        var customOperation = getCustomOperation(customOperations, operation);\r\n        if (customOperation) {\r\n            return {\r\n                icon: customOperation.icon || EMPTY_MENU_ICON,\r\n                text: customOperation.caption || captionize(customOperation.name),\r\n                value: customOperation.name,\r\n                isCustom: true\r\n            }\r\n        } else {\r\n            return {\r\n                icon: filterOperationsDictionary.getIconByFilterOperation(operation) || EMPTY_MENU_ICON,\r\n                text: getCaptionByOperation(operation, filterOperationDescriptions),\r\n                value: operation\r\n            }\r\n        }\r\n    }))\r\n}\r\nexport function getDefaultOperation(field) {\r\n    return field.defaultFilterOperation || getFilterOperations(field)[0]\r\n}\r\nexport function createCondition(field, customOperations) {\r\n    var condition = [field.dataField, \"\", \"\"];\r\n    var filterOperation = getDefaultOperation(field);\r\n    updateConditionByOperation(condition, filterOperation, customOperations);\r\n    return condition\r\n}\r\nexport function removeItem(group, item) {\r\n    var criteria = getGroupCriteria(group);\r\n    var index = criteria.indexOf(item);\r\n    criteria.splice(index, 1);\r\n    if (1 !== criteria.length) {\r\n        criteria.splice(index, 1)\r\n    }\r\n    return group\r\n}\r\nexport function createEmptyGroup(value) {\r\n    var isNegation = isNegationGroupOperation(value);\r\n    var groupOperation = isNegation ? getGroupOperationFromNegationOperation(value) : value;\r\n    return isNegation ? [\"!\", [groupOperation]] : [groupOperation]\r\n}\r\nexport function isEmptyGroup(group) {\r\n    var criteria = getGroupCriteria(group);\r\n    if (isCondition(criteria)) {\r\n        return false\r\n    }\r\n    var hasConditions = criteria.some((function(item) {\r\n        return isCondition(item)\r\n    }));\r\n    return !hasConditions\r\n}\r\nexport function addItem(item, group) {\r\n    var criteria = getGroupCriteria(group);\r\n    var groupValue = getGroupValue(criteria);\r\n    1 === criteria.length ? criteria.unshift(item) : criteria.push(item, groupValue);\r\n    return group\r\n}\r\nexport function getField(dataField, fields) {\r\n    for (var i = 0; i < fields.length; i++) {\r\n        if (fields[i].name === dataField) {\r\n            return fields[i]\r\n        }\r\n        if (fields[i].dataField.toLowerCase() === dataField.toLowerCase()) {\r\n            return fields[i]\r\n        }\r\n    }\r\n    var extendedFields = getItems(fields, true).filter((function(item) {\r\n        return item.dataField.toLowerCase() === dataField.toLowerCase()\r\n    }));\r\n    if (extendedFields.length > 0) {\r\n        return extendedFields[0]\r\n    }\r\n    throw new errors.Error(\"E1047\", dataField)\r\n}\r\nexport function isGroup(criteria) {\r\n    if (!Array.isArray(criteria)) {\r\n        return false\r\n    }\r\n    return criteria.length < 2 || Array.isArray(criteria[0]) || Array.isArray(criteria[1])\r\n}\r\nexport function isCondition(criteria) {\r\n    if (!Array.isArray(criteria)) {\r\n        return false\r\n    }\r\n    return criteria.length > 1 && !Array.isArray(criteria[0]) && !Array.isArray(criteria[1])\r\n}\r\n\r\nfunction convertToInnerGroup(group, customOperations, defaultGroupOperation) {\r\n    defaultGroupOperation = defaultGroupOperation || AND_GROUP_OPERATION;\r\n    var groupOperation = getCriteriaOperation(group).toLowerCase() || defaultGroupOperation;\r\n    var innerGroup = [];\r\n    for (var i = 0; i < group.length; i++) {\r\n        if (isGroup(group[i])) {\r\n            innerGroup.push(convertToInnerStructure(group[i], customOperations, defaultGroupOperation));\r\n            innerGroup = appendGroupOperationToGroup(innerGroup, groupOperation)\r\n        } else if (isCondition(group[i])) {\r\n            innerGroup.push(convertToInnerCondition(group[i], customOperations));\r\n            innerGroup = appendGroupOperationToGroup(innerGroup, groupOperation)\r\n        }\r\n    }\r\n    if (0 === innerGroup.length) {\r\n        innerGroup = appendGroupOperationToGroup(innerGroup, groupOperation)\r\n    }\r\n    return innerGroup\r\n}\r\n\r\nfunction conditionHasCustomOperation(condition, customOperations) {\r\n    var customOperation = getCustomOperation(customOperations, condition[1]);\r\n    return customOperation && customOperation.name === condition[1]\r\n}\r\n\r\nfunction convertToInnerCondition(condition, customOperations) {\r\n    if (conditionHasCustomOperation(condition, customOperations)) {\r\n        return condition\r\n    }\r\n    if (condition.length < 3) {\r\n        condition[2] = condition[1];\r\n        condition[1] = EQUAL_OPERATION\r\n    }\r\n    return condition\r\n}\r\n\r\nfunction isNegationGroupOperation(operation) {\r\n    return -1 !== operation.indexOf(\"not\")\r\n}\r\n\r\nfunction getGroupOperationFromNegationOperation(operation) {\r\n    return operation.substring(3).toLowerCase()\r\n}\r\n\r\nfunction appendGroupOperationToCriteria(criteria, groupOperation) {\r\n    var isNegation = isNegationGroupOperation(groupOperation);\r\n    groupOperation = isNegation ? getGroupOperationFromNegationOperation(groupOperation) : groupOperation;\r\n    return isNegation ? [\"!\", criteria, groupOperation] : [criteria, groupOperation]\r\n}\r\n\r\nfunction appendGroupOperationToGroup(group, groupOperation) {\r\n    var isNegation = isNegationGroupOperation(groupOperation);\r\n    groupOperation = isNegation ? getGroupOperationFromNegationOperation(groupOperation) : groupOperation;\r\n    group.push(groupOperation);\r\n    var result = group;\r\n    if (isNegation) {\r\n        result = [\"!\", result]\r\n    }\r\n    return result\r\n}\r\nexport function convertToInnerStructure(value, customOperations, defaultGroupOperation) {\r\n    defaultGroupOperation = defaultGroupOperation || AND_GROUP_OPERATION;\r\n    if (!value) {\r\n        return createEmptyGroup(defaultGroupOperation)\r\n    }\r\n    value = extend(true, [], value);\r\n    if (isCondition(value)) {\r\n        return appendGroupOperationToCriteria(convertToInnerCondition(value, customOperations), defaultGroupOperation)\r\n    }\r\n    if (isNegationGroup(value)) {\r\n        return [\"!\", isCondition(value[1]) ? appendGroupOperationToCriteria(convertToInnerCondition(value[1], customOperations), defaultGroupOperation) : isNegationGroup(value[1]) ? appendGroupOperationToCriteria(convertToInnerStructure(value[1], customOperations), defaultGroupOperation) : convertToInnerGroup(value[1], customOperations, defaultGroupOperation)]\r\n    }\r\n    return convertToInnerGroup(value, customOperations, defaultGroupOperation)\r\n}\r\nexport function getNormalizedFields(fields) {\r\n    return fields.reduce((function(result, field) {\r\n        if (isDefined(field.dataField)) {\r\n            var normalizedField = {};\r\n            for (var key in field) {\r\n                if (field[key] && AVAILABLE_FIELD_PROPERTIES.indexOf(key) > -1) {\r\n                    normalizedField[key] = field[key]\r\n                }\r\n            }\r\n            normalizedField.defaultCalculateFilterExpression = filterUtils.defaultCalculateFilterExpression;\r\n            if (!isDefined(normalizedField.dataType)) {\r\n                normalizedField.dataType = DEFAULT_DATA_TYPE\r\n            }\r\n            if (!isDefined(normalizedField.trueText)) {\r\n                normalizedField.trueText = messageLocalization.format(\"dxDataGrid-trueText\")\r\n            }\r\n            if (!isDefined(normalizedField.falseText)) {\r\n                normalizedField.falseText = messageLocalization.format(\"dxDataGrid-falseText\")\r\n            }\r\n            result.push(normalizedField)\r\n        }\r\n        return result\r\n    }), [])\r\n}\r\n\r\nfunction getConditionFilterExpression(condition, fields, customOperations, target) {\r\n    var field = getField(condition[0], fields);\r\n    var filterExpression = convertToInnerCondition(condition, customOperations);\r\n    var customOperation = customOperations.length && getCustomOperation(customOperations, filterExpression[1]);\r\n    if (customOperation && customOperation.calculateFilterExpression) {\r\n        return customOperation.calculateFilterExpression.apply(customOperation, [filterExpression[2], field, fields])\r\n    } else if (field.createFilterExpression) {\r\n        return field.createFilterExpression.apply(field, [filterExpression[2], filterExpression[1], target])\r\n    } else if (field.calculateFilterExpression) {\r\n        return field.calculateFilterExpression.apply(field, [filterExpression[2], filterExpression[1], target])\r\n    } else {\r\n        return field.defaultCalculateFilterExpression.apply(field, [filterExpression[2], filterExpression[1], target])\r\n    }\r\n}\r\nexport function getFilterExpression(value, fields, customOperations, target) {\r\n    if (!isDefined(value)) {\r\n        return null\r\n    }\r\n    if (isNegationGroup(value)) {\r\n        var filterExpression = getFilterExpression(value[1], fields, customOperations, target);\r\n        return [\"!\", filterExpression]\r\n    }\r\n    var criteria = getGroupCriteria(value);\r\n    if (isCondition(criteria)) {\r\n        return getConditionFilterExpression(criteria, fields, customOperations, target) || null\r\n    } else {\r\n        var result = [];\r\n        var _filterExpression;\r\n        var groupValue = getGroupValue(criteria);\r\n        for (var i = 0; i < criteria.length; i++) {\r\n            if (isGroup(criteria[i])) {\r\n                _filterExpression = getFilterExpression(criteria[i], fields, customOperations, target);\r\n                if (_filterExpression) {\r\n                    i && result.push(groupValue);\r\n                    result.push(_filterExpression)\r\n                }\r\n            } else if (isCondition(criteria[i])) {\r\n                _filterExpression = getConditionFilterExpression(criteria[i], fields, customOperations, target);\r\n                if (_filterExpression) {\r\n                    result.length && result.push(groupValue);\r\n                    result.push(_filterExpression)\r\n                }\r\n            }\r\n        }\r\n        if (1 === result.length) {\r\n            result = result[0]\r\n        }\r\n        return result.length ? result : null\r\n    }\r\n}\r\nexport function getNormalizedFilter(group) {\r\n    var criteria = getGroupCriteria(group);\r\n    var i;\r\n    if (0 === criteria.length) {\r\n        return null\r\n    }\r\n    var itemsForRemove = [];\r\n    for (i = 0; i < criteria.length; i++) {\r\n        if (isGroup(criteria[i])) {\r\n            var normalizedGroupValue = getNormalizedFilter(criteria[i]);\r\n            if (normalizedGroupValue) {\r\n                criteria[i] = normalizedGroupValue\r\n            } else {\r\n                itemsForRemove.push(criteria[i])\r\n            }\r\n        } else if (isCondition(criteria[i])) {\r\n            if (!isValidCondition(criteria[i])) {\r\n                itemsForRemove.push(criteria[i])\r\n            }\r\n        }\r\n    }\r\n    for (i = 0; i < itemsForRemove.length; i++) {\r\n        removeItem(criteria, itemsForRemove[i])\r\n    }\r\n    if (1 === criteria.length) {\r\n        return null\r\n    }\r\n    criteria.splice(criteria.length - 1, 1);\r\n    if (1 === criteria.length) {\r\n        group = setGroupCriteria(group, criteria[0])\r\n    }\r\n    if (0 === group.length) {\r\n        return null\r\n    }\r\n    return group\r\n}\r\nexport function getCurrentLookupValueText(field, value, handler) {\r\n    if (\"\" === value) {\r\n        handler(\"\");\r\n        return\r\n    }\r\n    var lookup = field.lookup;\r\n    if (lookup.items) {\r\n        handler(lookup.calculateCellValue(value) || \"\")\r\n    } else {\r\n        var lookupDataSource = isFunction(lookup.dataSource) ? lookup.dataSource({}) : lookup.dataSource;\r\n        var dataSource = new DataSource(lookupDataSource);\r\n        dataSource.loadSingle(lookup.valueExpr, value).done((function(result) {\r\n            var valueText = \"\";\r\n            if (result) {\r\n                valueText = lookup.displayExpr ? compileGetter(lookup.displayExpr)(result) : result\r\n            }\r\n            if (field.customizeText) {\r\n                valueText = field.customizeText({\r\n                    value: value,\r\n                    valueText: valueText\r\n                })\r\n            }\r\n            handler(valueText)\r\n        })).fail((function() {\r\n            handler(\"\")\r\n        }))\r\n    }\r\n}\r\n\r\nfunction getPrimitiveValueText(field, value, customOperation, target, options) {\r\n    var valueText;\r\n    if (true === value) {\r\n        valueText = field.trueText || messageLocalization.format(\"dxDataGrid-trueText\")\r\n    } else if (false === value) {\r\n        valueText = field.falseText || messageLocalization.format(\"dxDataGrid-falseText\")\r\n    } else {\r\n        valueText = getFormattedValueText(field, value)\r\n    }\r\n    if (field.customizeText) {\r\n        valueText = field.customizeText.call(field, {\r\n            value: value,\r\n            valueText: valueText,\r\n            target: target\r\n        })\r\n    }\r\n    if (customOperation && customOperation.customizeText) {\r\n        valueText = customOperation.customizeText.call(customOperation, {\r\n            value: value,\r\n            valueText: valueText,\r\n            field: field,\r\n            target: target\r\n        }, options)\r\n    }\r\n    return valueText\r\n}\r\n\r\nfunction getArrayValueText(field, value, customOperation, target) {\r\n    var options = {\r\n        values: value\r\n    };\r\n    return value.map(v => getPrimitiveValueText(field, v, customOperation, target, options))\r\n}\r\n\r\nfunction checkDefaultValue(value) {\r\n    return \"\" === value || null === value\r\n}\r\nexport function getCurrentValueText(field, value, customOperation) {\r\n    var target = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : \"filterBuilder\";\r\n    if (checkDefaultValue(value)) {\r\n        return \"\"\r\n    }\r\n    if (Array.isArray(value)) {\r\n        var result = new Deferred;\r\n        when.apply(this, getArrayValueText(field, value, customOperation, target)).done((function() {\r\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n                args[_key] = arguments[_key]\r\n            }\r\n            var text = args.some(item => !checkDefaultValue(item)) ? args.map(item => !checkDefaultValue(item) ? item : \"?\") : \"\";\r\n            result.resolve(text)\r\n        }));\r\n        return result\r\n    } else {\r\n        return getPrimitiveValueText(field, value, customOperation, target)\r\n    }\r\n}\r\n\r\nfunction itemExists(plainItems, parentId) {\r\n    return plainItems.some((function(item) {\r\n        return item.dataField === parentId\r\n    }))\r\n}\r\n\r\nfunction pushItemAndCheckParent(originalItems, plainItems, item) {\r\n    var dataField = item.dataField;\r\n    if (hasParent(dataField)) {\r\n        item.parentId = getParentIdFromItemDataField(dataField);\r\n        if (!itemExists(plainItems, item.parentId) && !itemExists(originalItems, item.parentId)) {\r\n            pushItemAndCheckParent(originalItems, plainItems, {\r\n                id: item.parentId,\r\n                dataType: \"object\",\r\n                dataField: item.parentId,\r\n                caption: generateCaptionByDataField(item.parentId, true),\r\n                filterOperations: [\"isblank\", \"isnotblank\"]\r\n            })\r\n        }\r\n    }\r\n    plainItems.push(item)\r\n}\r\n\r\nfunction generateCaptionByDataField(dataField, allowHierarchicalFields) {\r\n    var caption = \"\";\r\n    if (allowHierarchicalFields) {\r\n        dataField = dataField.substring(dataField.lastIndexOf(\".\") + 1)\r\n    } else if (hasParent(dataField)) {\r\n        dataField.split(\".\").forEach((function(field, index, arr) {\r\n            caption += captionize(field);\r\n            if (index !== arr.length - 1) {\r\n                caption += \".\"\r\n            }\r\n        }));\r\n        return caption\r\n    }\r\n    return captionize(dataField)\r\n}\r\nexport function getItems(fields, allowHierarchicalFields) {\r\n    var items = [];\r\n    for (var i = 0; i < fields.length; i++) {\r\n        var item = extend(true, {\r\n            caption: generateCaptionByDataField(fields[i].dataField, allowHierarchicalFields)\r\n        }, fields[i]);\r\n        item.id = item.name || item.dataField;\r\n        if (allowHierarchicalFields) {\r\n            pushItemAndCheckParent(fields, items, item)\r\n        } else {\r\n            items.push(item)\r\n        }\r\n    }\r\n    return items\r\n}\r\n\r\nfunction hasParent(dataField) {\r\n    return -1 !== dataField.lastIndexOf(\".\")\r\n}\r\n\r\nfunction getParentIdFromItemDataField(dataField) {\r\n    return dataField.substring(0, dataField.lastIndexOf(\".\"))\r\n}\r\nexport function getCaptionWithParents(item, plainItems) {\r\n    if (hasParent(item.dataField)) {\r\n        var parentId = getParentIdFromItemDataField(item.dataField);\r\n        for (var i = 0; i < plainItems.length; i++) {\r\n            if (plainItems[i].dataField === parentId) {\r\n                return getCaptionWithParents(plainItems[i], plainItems) + \".\" + item.caption\r\n            }\r\n        }\r\n    }\r\n    return item.caption\r\n}\r\nexport function updateConditionByOperation(condition, operation, customOperations) {\r\n    var customOperation = getCustomOperation(customOperations, operation);\r\n    if (customOperation) {\r\n        if (false === customOperation.hasValue) {\r\n            condition[1] = operation;\r\n            condition.length = 2\r\n        } else {\r\n            condition[1] = operation;\r\n            condition[2] = \"\"\r\n        }\r\n        return condition\r\n    }\r\n    if (\"isblank\" === operation) {\r\n        condition[1] = EQUAL_OPERATION;\r\n        condition[2] = null\r\n    } else if (\"isnotblank\" === operation) {\r\n        condition[1] = NOT_EQUAL_OPERATION;\r\n        condition[2] = null\r\n    } else {\r\n        customOperation = getCustomOperation(customOperations, condition[1]);\r\n        if (customOperation || 2 === condition.length || null === condition[2]) {\r\n            condition[2] = \"\"\r\n        }\r\n        condition[1] = operation\r\n    }\r\n    return condition\r\n}\r\nexport function getOperationValue(condition) {\r\n    var caption;\r\n    if (null === condition[2]) {\r\n        if (condition[1] === EQUAL_OPERATION) {\r\n            caption = \"isblank\"\r\n        } else {\r\n            caption = \"isnotblank\"\r\n        }\r\n    } else {\r\n        caption = condition[1]\r\n    }\r\n    return caption\r\n}\r\nexport function isValidCondition(condition) {\r\n    return \"\" !== condition[2]\r\n}\r\nexport function getMergedOperations(customOperations, betweenCaption, context) {\r\n    var result = extend(true, [], customOperations);\r\n    var betweenIndex = -1;\r\n    result.some((function(customOperation, index) {\r\n        if (\"between\" === customOperation.name) {\r\n            betweenIndex = index;\r\n            return true\r\n        }\r\n    }));\r\n    if (-1 !== betweenIndex) {\r\n        result[betweenIndex] = extend(getConfig(betweenCaption, context), result[betweenIndex])\r\n    } else {\r\n        result.unshift(getConfig(betweenCaption, context))\r\n    }\r\n    return result\r\n}\r\n\r\nfunction isMatchedCondition(filter, addedFilterDataField) {\r\n    return filter[0] === addedFilterDataField\r\n}\r\nexport function removeFieldConditionsFromFilter(filter, dataField) {\r\n    if (!filter || 0 === filter.length) {\r\n        return null\r\n    }\r\n    if (isCondition(filter)) {\r\n        var hasMatchedCondition = isMatchedCondition(filter, dataField);\r\n        return !hasMatchedCondition ? filter : null\r\n    } else {\r\n        return syncConditionIntoGroup(filter, [dataField], false)\r\n    }\r\n}\r\n\r\nfunction syncConditionIntoGroup(filter, addedFilter, canPush) {\r\n    var result = [];\r\n    filter.forEach((function(item) {\r\n        if (isCondition(item)) {\r\n            if (isMatchedCondition(item, addedFilter[0])) {\r\n                if (canPush) {\r\n                    result.push(addedFilter);\r\n                    canPush = false\r\n                } else {\r\n                    result.splice(result.length - 1, 1)\r\n                }\r\n            } else {\r\n                result.push(item)\r\n            }\r\n        } else {\r\n            (result.length || isGroup(item)) && result.push(item)\r\n        }\r\n    }));\r\n    if (0 === result.length) {\r\n        return null\r\n    }\r\n    if (canPush) {\r\n        result.push(AND_GROUP_OPERATION);\r\n        result.push(addedFilter)\r\n    }\r\n    return 1 === result.length ? result[0] : result\r\n}\r\nexport function syncFilters(filter, addedFilter) {\r\n    if (null === filter || 0 === filter.length) {\r\n        return addedFilter\r\n    }\r\n    if (isCondition(filter)) {\r\n        if (isMatchedCondition(filter, addedFilter[0])) {\r\n            return addedFilter\r\n        } else {\r\n            return [filter, AND_GROUP_OPERATION, addedFilter]\r\n        }\r\n    }\r\n    var groupValue = getGroupValue(filter);\r\n    if (groupValue !== AND_GROUP_OPERATION) {\r\n        return [addedFilter, \"and\", filter]\r\n    }\r\n    return syncConditionIntoGroup(filter, addedFilter, true)\r\n}\r\nexport function getMatchedConditions(filter, dataField) {\r\n    if (null === filter || 0 === filter.length) {\r\n        return []\r\n    }\r\n    if (isCondition(filter)) {\r\n        if (isMatchedCondition(filter, dataField)) {\r\n            return [filter]\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n    var groupValue = getGroupValue(filter);\r\n    if (groupValue !== AND_GROUP_OPERATION) {\r\n        return []\r\n    }\r\n    var result = filter.filter((function(item) {\r\n        return isCondition(item) && isMatchedCondition(item, dataField)\r\n    }));\r\n    return result\r\n}\r\nexport function filterHasField(filter, dataField) {\r\n    if (null === filter || 0 === filter.length) {\r\n        return false\r\n    }\r\n    if (isCondition(filter)) {\r\n        return filter[0] === dataField\r\n    }\r\n    return filter.some((function(item) {\r\n        return (isCondition(item) || isGroup(item)) && filterHasField(item, dataField)\r\n    }))\r\n}\r\nexport var renderValueText = function($container, value, customOperation) {\r\n    if (Array.isArray(value)) {\r\n        var lastItemIndex = value.length - 1;\r\n        $container.empty();\r\n        value.forEach((t, i) => {\r\n            $(\"<span>\").addClass(FILTER_BUILDER_ITEM_TEXT_PART_CLASS).text(t).appendTo($container);\r\n            if (i !== lastItemIndex) {\r\n                $(\"<span>\").addClass(FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS).text(customOperation && customOperation.valueSeparator ? customOperation.valueSeparator : \"|\").addClass(FILTER_BUILDER_ITEM_TEXT_SEPARATOR_EMPTY_CLASS).appendTo($container)\r\n            }\r\n        })\r\n    } else if (value) {\r\n        $container.text(value)\r\n    } else {\r\n        $container.text(messageLocalization.format(\"dxFilterBuilder-enterValueText\"))\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_custom_operations.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    DataSource\r\n} from \"../../data/data_source/data_source\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isGroup,\r\n    isCondition,\r\n    getFilterExpression,\r\n    renderValueText\r\n} from \"../filter_builder/utils\";\r\nimport errors from \"../widget/ui.errors\";\r\n\r\nfunction baseOperation(grid) {\r\n    var getFullText = function(itemText, parentText) {\r\n        return parentText ? parentText + \"/\" + itemText : itemText\r\n    };\r\n    var headerFilterController = grid && grid.getController(\"headerFilter\");\r\n    return {\r\n        dataTypes: [\"string\", \"date\", \"datetime\", \"number\", \"boolean\", \"object\"],\r\n        calculateFilterExpression: function(filterValue, field, fields) {\r\n            var result = [];\r\n            var lastIndex = filterValue.length - 1;\r\n            filterValue && filterValue.forEach((function(value, index) {\r\n                if (isCondition(value) || isGroup(value)) {\r\n                    var filterExpression = getFilterExpression(value, fields, [], \"headerFilter\");\r\n                    result.push(filterExpression)\r\n                } else {\r\n                    result.push(getFilterExpression([field.dataField, \"=\", value], fields, [], \"headerFilter\"))\r\n                }\r\n                index !== lastIndex && result.push(\"or\")\r\n            }));\r\n            if (1 === result.length) {\r\n                result = result[0]\r\n            }\r\n            return result\r\n        },\r\n        editorTemplate: function(conditionInfo, container) {\r\n            var div = $(\"<div>\").addClass(\"dx-filterbuilder-item-value-text\").appendTo(container);\r\n            var column = extend(true, {}, grid.columnOption(conditionInfo.field.dataField));\r\n            renderValueText(div, conditionInfo.text && conditionInfo.text.split(\"|\"));\r\n            column.filterType = \"include\";\r\n            column.filterValues = conditionInfo.value ? conditionInfo.value.slice() : [];\r\n            headerFilterController.showHeaderFilterMenuBase({\r\n                columnElement: div,\r\n                column: column,\r\n                apply: function() {\r\n                    value = this.filterValues, void conditionInfo.setValue(value);\r\n                    var value;\r\n                    headerFilterController.hideHeaderFilterMenu();\r\n                    conditionInfo.closeEditor()\r\n                },\r\n                onHidden: function() {\r\n                    conditionInfo.closeEditor()\r\n                },\r\n                isFilterBuilder: true\r\n            });\r\n            return container\r\n        },\r\n        customizeText: function(fieldInfo, options) {\r\n            options = options || {};\r\n            var value = fieldInfo.value;\r\n            var column = grid.columnOption(fieldInfo.field.dataField);\r\n            var headerFilter = column && column.headerFilter;\r\n            var lookup = column && column.lookup;\r\n            var values = options.values || [value];\r\n            if (headerFilter && headerFilter.dataSource || lookup && lookup.dataSource) {\r\n                var result = new Deferred;\r\n                var itemsDeferred = options.items || new Deferred;\r\n                if (!options.items) {\r\n                    column = extend({}, column, {\r\n                        filterType: \"include\",\r\n                        filterValues: values\r\n                    });\r\n                    var dataSourceOptions = headerFilterController.getDataSource(column);\r\n                    dataSourceOptions.paginate = false;\r\n                    var dataSource = new DataSource(dataSourceOptions);\r\n                    var key = dataSource.store().key();\r\n                    if (key) {\r\n                        var {\r\n                            values: _values\r\n                        } = options;\r\n                        if (_values && _values.length > 1) {\r\n                            var filter = _values.reduce((result, value) => {\r\n                                if (result.length) {\r\n                                    result.push(\"or\")\r\n                                }\r\n                                result.push([key, \"=\", value]);\r\n                                return result\r\n                            }, []);\r\n                            dataSource.filter(filter)\r\n                        } else {\r\n                            dataSource.filter([key, \"=\", fieldInfo.value])\r\n                        }\r\n                    } else if (fieldInfo.field.calculateDisplayValue) {\r\n                        errors.log(\"W1017\")\r\n                    }\r\n                    options.items = itemsDeferred;\r\n                    dataSource.load().done(itemsDeferred.resolve)\r\n                }\r\n                itemsDeferred.done(items => {\r\n                    var index = values.indexOf(fieldInfo.value);\r\n                    result.resolve(function getSelectedItemsTexts(items, parentText) {\r\n                        var result = [];\r\n                        items.forEach((function(item) {\r\n                            if (item.items) {\r\n                                var selectedItemsTexts = getSelectedItemsTexts(item.items, getFullText(item.text, parentText));\r\n                                result = result.concat(selectedItemsTexts)\r\n                            }\r\n                            item.selected && result.push(getFullText(item.text, parentText))\r\n                        }));\r\n                        return result\r\n                    }(items)[index])\r\n                });\r\n                return result\r\n            } else {\r\n                var text = headerFilterController.getHeaderItemText(value, column, 0, grid.option(\"headerFilter\"));\r\n                return text\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function anyOf(grid) {\r\n    return extend(baseOperation(grid), {\r\n        name: \"anyof\",\r\n        icon: \"selectall\",\r\n        caption: messageLocalization.format(\"dxFilterBuilder-filterOperationAnyOf\")\r\n    })\r\n}\r\nexport function noneOf(grid) {\r\n    var baseOp = baseOperation(grid);\r\n    return extend({}, baseOp, {\r\n        calculateFilterExpression: function(filterValue, field, fields) {\r\n            var baseFilter = baseOp.calculateFilterExpression(filterValue, field, fields);\r\n            if (!baseFilter || 0 === baseFilter.length) {\r\n                return null\r\n            }\r\n            return \"!\" === baseFilter[0] ? baseFilter : [\"!\", baseFilter]\r\n        },\r\n        name: \"noneof\",\r\n        icon: \"unselectall\",\r\n        caption: messageLocalization.format(\"dxFilterBuilder-filterOperationNoneOf\")\r\n    })\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_sync.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    getDefaultOperation,\r\n    getMatchedConditions,\r\n    syncFilters,\r\n    removeFieldConditionsFromFilter,\r\n    addItem,\r\n    getNormalizedFilter,\r\n    getFilterExpression,\r\n    filterHasField\r\n} from \"../filter_builder/utils\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport filterUtils from \"../shared/filtering\";\r\nimport {\r\n    anyOf,\r\n    noneOf\r\n} from \"./ui.grid_core.filter_custom_operations\";\r\nvar FILTER_ROW_OPERATIONS = [\"=\", \"<>\", \"<\", \"<=\", \">\", \">=\", \"notcontains\", \"contains\", \"startswith\", \"endswith\", \"between\"];\r\nvar FILTER_TYPES_INCLUDE = \"include\";\r\nvar FILTER_TYPES_EXCLUDE = \"exclude\";\r\n\r\nfunction getColumnIdentifier(column) {\r\n    return column.name || column.dataField\r\n}\r\n\r\nfunction checkForErrors(columns) {\r\n    columns.forEach(column => {\r\n        var identifier = getColumnIdentifier(column);\r\n        if (!isDefined(identifier) && column.allowFiltering) {\r\n            throw new errors.Error(\"E1049\", column.caption)\r\n        }\r\n    })\r\n}\r\nvar FilterSyncController = modules.Controller.inherit(function() {\r\n    var getEmptyFilterValues = function() {\r\n        return {\r\n            filterType: FILTER_TYPES_INCLUDE,\r\n            filterValues: void 0\r\n        }\r\n    };\r\n    var canSyncHeaderFilterWithFilterRow = function(column) {\r\n        var filterValues = column.filterValues || [];\r\n        return !filterUtils.getGroupInterval(column) && !(column.headerFilter && column.headerFilter.dataSource) || 1 === filterValues.length && null === filterValues[0]\r\n    };\r\n    var getConditionFromFilterRow = function(column) {\r\n        var value = column.filterValue;\r\n        if (isDefined(value)) {\r\n            var operation = column.selectedFilterOperation || column.defaultFilterOperation || getDefaultOperation(column);\r\n            var filter = [getColumnIdentifier(column), operation, column.filterValue];\r\n            return filter\r\n        } else {\r\n            return null\r\n        }\r\n    };\r\n    var getConditionFromHeaderFilter = function(column) {\r\n        var selectedOperation;\r\n        var value;\r\n        var filterValues = column.filterValues;\r\n        if (!filterValues) {\r\n            return null\r\n        }\r\n        if (1 === filterValues.length && canSyncHeaderFilterWithFilterRow(column) && !Array.isArray(filterValues[0])) {\r\n            column.filterType === FILTER_TYPES_EXCLUDE ? selectedOperation = \"<>\" : selectedOperation = \"=\";\r\n            value = filterValues[0]\r\n        } else {\r\n            column.filterType === FILTER_TYPES_EXCLUDE ? selectedOperation = \"noneof\" : selectedOperation = \"anyof\";\r\n            value = filterValues\r\n        }\r\n        return [getColumnIdentifier(column), selectedOperation, value]\r\n    };\r\n    var updateHeaderFilterCondition = function(columnsController, column, headerFilterCondition) {\r\n        var headerFilter = function(headerFilterCondition, column) {\r\n            if (!headerFilterCondition) {\r\n                return getEmptyFilterValues()\r\n            }\r\n            var filterType;\r\n            var selectedFilterOperation = headerFilterCondition[1];\r\n            var value = headerFilterCondition[2];\r\n            var hasArrayValue = Array.isArray(value);\r\n            if (!hasArrayValue) {\r\n                if (!canSyncHeaderFilterWithFilterRow(column)) {\r\n                    return getEmptyFilterValues()\r\n                }\r\n            }\r\n            switch (selectedFilterOperation) {\r\n                case \"anyof\":\r\n                case \"=\":\r\n                    filterType = FILTER_TYPES_INCLUDE;\r\n                    break;\r\n                case \"noneof\":\r\n                case \"<>\":\r\n                    filterType = FILTER_TYPES_EXCLUDE;\r\n                    break;\r\n                default:\r\n                    return getEmptyFilterValues()\r\n            }\r\n            return {\r\n                filterType: filterType,\r\n                filterValues: hasArrayValue ? value : [value]\r\n            }\r\n        }(headerFilterCondition, column);\r\n        columnsController.columnOption(getColumnIdentifier(column), headerFilter)\r\n    };\r\n    var updateFilterRowCondition = function(columnsController, column, condition) {\r\n        var filterRowOptions;\r\n        var selectedFilterOperation = null === condition || void 0 === condition ? void 0 : condition[1];\r\n        var filterValue = null === condition || void 0 === condition ? void 0 : condition[2];\r\n        var filterOperations = column.filterOperations || column.defaultFilterOperations;\r\n        if ((!filterOperations || filterOperations.indexOf(selectedFilterOperation) >= 0 || selectedFilterOperation === column.defaultFilterOperation) && FILTER_ROW_OPERATIONS.indexOf(selectedFilterOperation) >= 0 && null !== filterValue) {\r\n            if (selectedFilterOperation === column.defaultFilterOperation && !isDefined(column.selectedFilterOperation)) {\r\n                selectedFilterOperation = column.selectedFilterOperation\r\n            }\r\n            filterRowOptions = {\r\n                filterValue: filterValue,\r\n                selectedFilterOperation: selectedFilterOperation\r\n            }\r\n        } else {\r\n            filterRowOptions = {\r\n                filterValue: void 0,\r\n                selectedFilterOperation: void 0\r\n            }\r\n        }\r\n        columnsController.columnOption(getColumnIdentifier(column), filterRowOptions)\r\n    };\r\n    return {\r\n        syncFilterValue: function() {\r\n            var that = this;\r\n            var columnsController = that.getController(\"columns\");\r\n            var columns = columnsController.getFilteringColumns();\r\n            this._skipSyncColumnOptions = true;\r\n            columns.forEach((function(column) {\r\n                var filterConditions = getMatchedConditions(that.option(\"filterValue\"), getColumnIdentifier(column));\r\n                if (1 === filterConditions.length) {\r\n                    var filterCondition = filterConditions[0];\r\n                    updateHeaderFilterCondition(columnsController, column, filterCondition);\r\n                    updateFilterRowCondition(columnsController, column, filterCondition)\r\n                } else {\r\n                    isDefined(column.filterValues) && updateHeaderFilterCondition(columnsController, column);\r\n                    isDefined(column.filterValue) && updateFilterRowCondition(columnsController, column)\r\n                }\r\n            }));\r\n            this._skipSyncColumnOptions = false\r\n        },\r\n        _initSync: function() {\r\n            var columns = this.getController(\"columns\").getColumns();\r\n            var dataController = this.getController(\"data\");\r\n            var pageIndex = dataController.pageIndex();\r\n            checkForErrors(columns);\r\n            if (!this.option(\"filterValue\")) {\r\n                var filteringColumns = this.getController(\"columns\").getFilteringColumns();\r\n                var filterValue = this.getFilterValueFromColumns(filteringColumns);\r\n                this.option(\"filterValue\", filterValue)\r\n            }\r\n            this.syncFilterValue();\r\n            dataController.pageIndex(pageIndex)\r\n        },\r\n        init: function() {\r\n            var dataController = this.getController(\"data\");\r\n            if (dataController.isFilterSyncActive()) {\r\n                if (this.getController(\"columns\").isAllDataTypesDefined()) {\r\n                    this._initSync()\r\n                } else {\r\n                    dataController.dataSourceChanged.add(() => this._initSync())\r\n                }\r\n            }\r\n        },\r\n        _getSyncFilterRow: function(filterValue, column) {\r\n            var filter = getConditionFromFilterRow(column);\r\n            if (isDefined(filter)) {\r\n                return syncFilters(filterValue, filter)\r\n            } else {\r\n                return removeFieldConditionsFromFilter(filterValue, getColumnIdentifier(column))\r\n            }\r\n        },\r\n        _getSyncHeaderFilter: function(filterValue, column) {\r\n            var filter = getConditionFromHeaderFilter(column);\r\n            if (filter) {\r\n                return syncFilters(filterValue, filter)\r\n            } else {\r\n                return removeFieldConditionsFromFilter(filterValue, getColumnIdentifier(column))\r\n            }\r\n        },\r\n        getFilterValueFromColumns: function(columns) {\r\n            if (!this.getController(\"data\").isFilterSyncActive()) {\r\n                return null\r\n            }\r\n            var filterValue = [\"and\"];\r\n            columns && columns.forEach(column => {\r\n                var headerFilter = getConditionFromHeaderFilter(column);\r\n                var filterRow = getConditionFromFilterRow(column);\r\n                headerFilter && addItem(headerFilter, filterValue);\r\n                filterRow && addItem(filterRow, filterValue)\r\n            });\r\n            return getNormalizedFilter(filterValue)\r\n        },\r\n        syncFilterRow: function(column, value) {\r\n            this.option(\"filterValue\", this._getSyncFilterRow(this.option(\"filterValue\"), column))\r\n        },\r\n        syncHeaderFilter: function(column) {\r\n            this.option(\"filterValue\", this._getSyncHeaderFilter(this.option(\"filterValue\"), column))\r\n        },\r\n        getCustomFilterOperations: function() {\r\n            var filterBuilderCustomOperations = this.option(\"filterBuilder.customOperations\") || [];\r\n            return [anyOf(this.component), noneOf(this.component)].concat(filterBuilderCustomOperations)\r\n        },\r\n        publicMethods: function() {\r\n            return [\"getCustomFilterOperations\"]\r\n        }\r\n    }\r\n}());\r\nvar DataControllerFilterSyncExtender = {\r\n    isFilterSyncActive: function() {\r\n        var filterSyncEnabledValue = this.option(\"filterSyncEnabled\");\r\n        return \"auto\" === filterSyncEnabledValue ? this.option(\"filterPanel.visible\") : filterSyncEnabledValue\r\n    },\r\n    skipCalculateColumnFilters: function() {\r\n        return isDefined(this.option(\"filterValue\")) && this.isFilterSyncActive()\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        if (false === this.option(\"filterPanel.filterEnabled\")) {\r\n            return this.callBase()\r\n        }\r\n        var filters = [this.callBase()];\r\n        var columns = this.getController(\"columns\").getFilteringColumns();\r\n        var filterValue = this.option(\"filterValue\");\r\n        if (this.isFilterSyncActive()) {\r\n            var currentColumn = this.getController(\"headerFilter\").getCurrentColumn();\r\n            if (currentColumn && filterValue) {\r\n                filterValue = removeFieldConditionsFromFilter(filterValue, getColumnIdentifier(currentColumn))\r\n            }\r\n        }\r\n        var customOperations = this.getController(\"filterSync\").getCustomFilterOperations();\r\n        var calculatedFilterValue = getFilterExpression(filterValue, columns, customOperations, \"filterBuilder\");\r\n        if (calculatedFilterValue) {\r\n            filters.push(calculatedFilterValue)\r\n        }\r\n        return gridCoreUtils.combineFilters(filters)\r\n    },\r\n    _parseColumnPropertyName: function(fullName) {\r\n        var matched = fullName.match(/.*\\.(.*)/);\r\n        if (matched) {\r\n            return matched[1]\r\n        } else {\r\n            return null\r\n        }\r\n    },\r\n    clearFilter: function(filterName) {\r\n        this.component.beginUpdate();\r\n        if (arguments.length > 0) {\r\n            if (\"filterValue\" === filterName) {\r\n                this.option(\"filterValue\", null)\r\n            }\r\n            this.callBase(filterName)\r\n        } else {\r\n            this.option(\"filterValue\", null);\r\n            this.callBase()\r\n        }\r\n        this.component.endUpdate()\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"filterValue\":\r\n                this._applyFilter();\r\n                this.isFilterSyncActive() && this.getController(\"filterSync\").syncFilterValue();\r\n                args.handled = true;\r\n                break;\r\n            case \"filterSyncEnabled\":\r\n                args.handled = true;\r\n                break;\r\n            case \"columns\":\r\n                if (this.isFilterSyncActive()) {\r\n                    var column = this.getController(\"columns\").getColumnByPath(args.fullName);\r\n                    var filterSyncController = this.getController(\"filterSync\");\r\n                    if (column && !filterSyncController._skipSyncColumnOptions) {\r\n                        var propertyName = this._parseColumnPropertyName(args.fullName);\r\n                        filterSyncController._skipSyncColumnOptions = true;\r\n                        if (\"filterType\" === propertyName) {\r\n                            if (FILTER_TYPES_EXCLUDE === args.value || FILTER_TYPES_EXCLUDE === args.previousValue) {\r\n                                filterSyncController.syncHeaderFilter(column)\r\n                            }\r\n                        } else if (\"filterValues\" === propertyName) {\r\n                            filterSyncController.syncHeaderFilter(column)\r\n                        } else if ([\"filterValue\", \"selectedFilterOperation\"].indexOf(propertyName) > -1) {\r\n                            filterSyncController.syncFilterRow(column, column.filterValue)\r\n                        }\r\n                        filterSyncController._skipSyncColumnOptions = false\r\n                    }\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n};\r\nvar ColumnHeadersViewFilterSyncExtender = {\r\n    _isHeaderFilterEmpty: function(column) {\r\n        if (this.getController(\"data\").isFilterSyncActive()) {\r\n            return !filterHasField(this.option(\"filterValue\"), getColumnIdentifier(column))\r\n        }\r\n        return this.callBase(column)\r\n    },\r\n    _needUpdateFilterIndicators: function() {\r\n        return !this.getController(\"data\").isFilterSyncActive()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"filterValue\" === args.name) {\r\n            this._updateHeaderFilterIndicators()\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    }\r\n};\r\nexport var filterSyncModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterValue: null,\r\n            filterSyncEnabled: \"auto\"\r\n        }\r\n    },\r\n    controllers: {\r\n        filterSync: FilterSyncController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterSyncExtender\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFilterSyncExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.filter_sync.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    filterSyncModule\r\n} from \"../grid_core/ui.grid_core.filter_sync\";\r\ncore.registerModule(\"filterSync\", filterSyncModule);\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder/filter_builder.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport Class from \"../../core/class\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport TreeView from \"../tree_view\";\r\nimport Popup from \"../popup\";\r\nimport {\r\n    getElementMaxHeightByWindow\r\n} from \"../overlay/utils\";\r\nimport EditorFactoryMixin from \"../shared/ui.editor_factory_mixin\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    renderValueText,\r\n    getFilterExpression as _getFilterExpression,\r\n    getNormalizedFilter,\r\n    getNormalizedFields,\r\n    getMergedOperations,\r\n    convertToInnerStructure,\r\n    getGroupCriteria,\r\n    isGroup,\r\n    isCondition,\r\n    removeItem,\r\n    createEmptyGroup,\r\n    addItem,\r\n    createCondition,\r\n    getGroupMenuItem,\r\n    setGroupValue,\r\n    getCustomOperation,\r\n    getAvailableOperations,\r\n    getOperationFromAvailable,\r\n    getOperationValue,\r\n    updateConditionByOperation,\r\n    getItems,\r\n    getField,\r\n    getCaptionWithParents,\r\n    getDefaultOperation,\r\n    getGroupValue,\r\n    getCurrentLookupValueText,\r\n    getCurrentValueText\r\n} from \"./utils\";\r\nvar FILTER_BUILDER_CLASS = \"dx-filterbuilder\";\r\nvar FILTER_BUILDER_GROUP_CLASS = FILTER_BUILDER_CLASS + \"-group\";\r\nvar FILTER_BUILDER_GROUP_ITEM_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-item\";\r\nvar FILTER_BUILDER_GROUP_CONTENT_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-content\";\r\nvar FILTER_BUILDER_GROUP_OPERATIONS_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-operations\";\r\nvar FILTER_BUILDER_GROUP_OPERATION_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-operation\";\r\nvar FILTER_BUILDER_ACTION_CLASS = FILTER_BUILDER_CLASS + \"-action\";\r\nvar FILTER_BUILDER_IMAGE_CLASS = FILTER_BUILDER_ACTION_CLASS + \"-icon\";\r\nvar FILTER_BUILDER_IMAGE_ADD_CLASS = \"dx-icon-plus\";\r\nvar FILTER_BUILDER_IMAGE_REMOVE_CLASS = \"dx-icon-remove\";\r\nvar FILTER_BUILDER_ITEM_TEXT_CLASS = FILTER_BUILDER_CLASS + \"-text\";\r\nvar FILTER_BUILDER_ITEM_FIELD_CLASS = FILTER_BUILDER_CLASS + \"-item-field\";\r\nvar FILTER_BUILDER_ITEM_OPERATION_CLASS = FILTER_BUILDER_CLASS + \"-item-operation\";\r\nvar FILTER_BUILDER_ITEM_VALUE_CLASS = FILTER_BUILDER_CLASS + \"-item-value\";\r\nvar FILTER_BUILDER_ITEM_VALUE_TEXT_CLASS = FILTER_BUILDER_CLASS + \"-item-value-text\";\r\nvar FILTER_BUILDER_OVERLAY_CLASS = FILTER_BUILDER_CLASS + \"-overlay\";\r\nvar FILTER_BUILDER_FILTER_OPERATIONS_CLASS = FILTER_BUILDER_CLASS + \"-operations\";\r\nvar FILTER_BUILDER_FIELDS_CLASS = FILTER_BUILDER_CLASS + \"-fields\";\r\nvar FILTER_BUILDER_ADD_CONDITION_CLASS = FILTER_BUILDER_CLASS + \"-add-condition\";\r\nvar ACTIVE_CLASS = \"dx-state-active\";\r\nvar FILTER_BUILDER_MENU_CUSTOM_OPERATION_CLASS = FILTER_BUILDER_CLASS + \"-menu-custom-operation\";\r\nvar SOURCE = \"filterBuilder\";\r\nvar DISABLED_STATE_CLASS = \"dx-state-disabled\";\r\nvar TAB_KEY = \"tab\";\r\nvar ENTER_KEY = \"enter\";\r\nvar ESCAPE_KEY = \"escape\";\r\nvar ACTIONS = [{\r\n    name: \"onEditorPreparing\",\r\n    config: {\r\n        excludeValidators: [\"disabled\", \"readOnly\"],\r\n        category: \"rendering\"\r\n    }\r\n}, {\r\n    name: \"onEditorPrepared\",\r\n    config: {\r\n        excludeValidators: [\"disabled\", \"readOnly\"],\r\n        category: \"rendering\"\r\n    }\r\n}, {\r\n    name: \"onValueChanged\",\r\n    config: {\r\n        excludeValidators: [\"disabled\", \"readOnly\"]\r\n    }\r\n}];\r\nvar OPERATORS = {\r\n    and: \"and\",\r\n    or: \"or\",\r\n    notAnd: \"!and\",\r\n    notOr: \"!or\"\r\n};\r\nvar EditorFactory = Class.inherit(EditorFactoryMixin);\r\nvar FilterBuilder = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            onEditorPreparing: null,\r\n            onEditorPrepared: null,\r\n            onValueChanged: null,\r\n            fields: [],\r\n            groupOperations: [\"and\", \"or\", \"notAnd\", \"notOr\"],\r\n            maxGroupLevel: void 0,\r\n            value: null,\r\n            allowHierarchicalFields: false,\r\n            groupOperationDescriptions: {\r\n                and: messageLocalization.format(\"dxFilterBuilder-and\"),\r\n                or: messageLocalization.format(\"dxFilterBuilder-or\"),\r\n                notAnd: messageLocalization.format(\"dxFilterBuilder-notAnd\"),\r\n                notOr: messageLocalization.format(\"dxFilterBuilder-notOr\")\r\n            },\r\n            customOperations: [],\r\n            closePopupOnTargetScroll: true,\r\n            filterOperationDescriptions: {\r\n                between: messageLocalization.format(\"dxFilterBuilder-filterOperationBetween\"),\r\n                equal: messageLocalization.format(\"dxFilterBuilder-filterOperationEquals\"),\r\n                notEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationNotEquals\"),\r\n                lessThan: messageLocalization.format(\"dxFilterBuilder-filterOperationLess\"),\r\n                lessThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationLessOrEquals\"),\r\n                greaterThan: messageLocalization.format(\"dxFilterBuilder-filterOperationGreater\"),\r\n                greaterThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationGreaterOrEquals\"),\r\n                startsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationStartsWith\"),\r\n                contains: messageLocalization.format(\"dxFilterBuilder-filterOperationContains\"),\r\n                notContains: messageLocalization.format(\"dxFilterBuilder-filterOperationNotContains\"),\r\n                endsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationEndsWith\"),\r\n                isBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsBlank\"),\r\n                isNotBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\r\n            }\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"closePopupOnTargetScroll\":\r\n                break;\r\n            case \"onEditorPreparing\":\r\n            case \"onEditorPrepared\":\r\n            case \"onValueChanged\":\r\n                this._initActions();\r\n                break;\r\n            case \"customOperations\":\r\n                this._initCustomOperations();\r\n                this._invalidate();\r\n                break;\r\n            case \"fields\":\r\n            case \"maxGroupLevel\":\r\n            case \"groupOperations\":\r\n            case \"allowHierarchicalFields\":\r\n            case \"groupOperationDescriptions\":\r\n            case \"filterOperationDescriptions\":\r\n                this._invalidate();\r\n                break;\r\n            case \"value\":\r\n                if (args.value !== args.previousValue) {\r\n                    var disableInvalidateForValue = this._disableInvalidateForValue;\r\n                    if (!disableInvalidateForValue) {\r\n                        this._initModel();\r\n                        this._invalidate()\r\n                    }\r\n                    this._disableInvalidateForValue = false;\r\n                    this.executeAction(\"onValueChanged\", {\r\n                        value: args.value,\r\n                        previousValue: args.previousValue\r\n                    });\r\n                    this._disableInvalidateForValue = disableInvalidateForValue\r\n                }\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    getFilterExpression: function() {\r\n        var fields = this._getNormalizedFields();\r\n        var value = extend(true, [], this._model);\r\n        return _getFilterExpression(getNormalizedFilter(value), fields, this._customOperations, SOURCE)\r\n    },\r\n    _getNormalizedFields: function() {\r\n        return getNormalizedFields(this.option(\"fields\"))\r\n    },\r\n    _updateFilter: function() {\r\n        this._disableInvalidateForValue = true;\r\n        var value = extend(true, [], this._model);\r\n        var normalizedValue = getNormalizedFilter(value);\r\n        var oldValue = getNormalizedFilter(this._getModel(this.option(\"value\")));\r\n        if (JSON.stringify(oldValue) !== JSON.stringify(normalizedValue)) {\r\n            this.option(\"value\", normalizedValue)\r\n        }\r\n        this._disableInvalidateForValue = false;\r\n        this._fireContentReadyAction()\r\n    },\r\n    _init: function() {\r\n        this._initCustomOperations();\r\n        this._initModel();\r\n        this._initEditorFactory();\r\n        this._initActions();\r\n        this.callBase()\r\n    },\r\n    _initEditorFactory: function() {\r\n        this._editorFactory = new EditorFactory\r\n    },\r\n    _initCustomOperations: function() {\r\n        this._customOperations = getMergedOperations(this.option(\"customOperations\"), this.option(\"filterOperationDescriptions.between\"), this)\r\n    },\r\n    _getDefaultGroupOperation: function() {\r\n        var _this$option$, _this$option;\r\n        return null !== (_this$option$ = null === (_this$option = this.option(\"groupOperations\")) || void 0 === _this$option ? void 0 : _this$option[0]) && void 0 !== _this$option$ ? _this$option$ : OPERATORS.and\r\n    },\r\n    _getModel: function(value) {\r\n        return convertToInnerStructure(value, this._customOperations, this._getDefaultGroupOperation())\r\n    },\r\n    _initModel: function() {\r\n        this._model = this._getModel(this.option(\"value\"))\r\n    },\r\n    _initActions: function() {\r\n        var that = this;\r\n        that._actions = {};\r\n        ACTIONS.forEach((function(action) {\r\n            var actionConfig = extend({}, action.config);\r\n            that._actions[action.name] = that._createActionByOption(action.name, actionConfig)\r\n        }))\r\n    },\r\n    executeAction: function(actionName, options) {\r\n        var action = this._actions[actionName];\r\n        return action && action(options)\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(FILTER_BUILDER_CLASS);\r\n        this.callBase();\r\n        this._createGroupElementByCriteria(this._model).appendTo(this.$element())\r\n    },\r\n    _createConditionElement: function(condition, parent) {\r\n        return $(\"<div>\").addClass(FILTER_BUILDER_GROUP_CLASS).append(this._createConditionItem(condition, parent))\r\n    },\r\n    _createGroupElementByCriteria: function(criteria, parent) {\r\n        var groupLevel = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;\r\n        var $group = this._createGroupElement(criteria, parent, groupLevel);\r\n        var $groupContent = $group.find(\".\" + FILTER_BUILDER_GROUP_CONTENT_CLASS);\r\n        var groupCriteria = getGroupCriteria(criteria);\r\n        for (var i = 0; i < groupCriteria.length; i++) {\r\n            var innerCriteria = groupCriteria[i];\r\n            if (isGroup(innerCriteria)) {\r\n                this._createGroupElementByCriteria(innerCriteria, criteria, groupLevel + 1).appendTo($groupContent)\r\n            } else if (isCondition(innerCriteria)) {\r\n                this._createConditionElement(innerCriteria, criteria).appendTo($groupContent)\r\n            }\r\n        }\r\n        return $group\r\n    },\r\n    _createGroupElement: function(criteria, parent, groupLevel) {\r\n        var $groupItem = $(\"<div>\").addClass(FILTER_BUILDER_GROUP_ITEM_CLASS);\r\n        var $groupContent = $(\"<div>\").addClass(FILTER_BUILDER_GROUP_CONTENT_CLASS);\r\n        var $group = $(\"<div>\").addClass(FILTER_BUILDER_GROUP_CLASS).append($groupItem).append($groupContent);\r\n        if (null != parent) {\r\n            this._createRemoveButton(() => {\r\n                removeItem(parent, criteria);\r\n                $group.remove();\r\n                this._updateFilter()\r\n            }).appendTo($groupItem)\r\n        }\r\n        this._createGroupOperationButton(criteria).appendTo($groupItem);\r\n        this._createAddButton(() => {\r\n            var newGroup = createEmptyGroup(this._getDefaultGroupOperation());\r\n            addItem(newGroup, criteria);\r\n            this._createGroupElement(newGroup, criteria, groupLevel + 1).appendTo($groupContent);\r\n            this._updateFilter()\r\n        }, () => {\r\n            var field = this.option(\"fields\")[0];\r\n            var newCondition = createCondition(field, this._customOperations);\r\n            addItem(newCondition, criteria);\r\n            this._createConditionElement(newCondition, criteria).appendTo($groupContent);\r\n            this._updateFilter()\r\n        }, groupLevel).appendTo($groupItem);\r\n        return $group\r\n    },\r\n    _createButton: function(caption) {\r\n        return $(\"<div>\").text(caption)\r\n    },\r\n    _createGroupOperationButton: function(criteria) {\r\n        var groupOperations = this._getGroupOperations(criteria);\r\n        var groupMenuItem = getGroupMenuItem(criteria, groupOperations);\r\n        var caption = groupMenuItem.text;\r\n        var $operationButton = groupOperations && groupOperations.length < 2 ? this._createButton(caption).addClass(DISABLED_STATE_CLASS) : this._createButtonWithMenu({\r\n            caption: caption,\r\n            menu: {\r\n                items: groupOperations,\r\n                displayExpr: \"text\",\r\n                keyExpr: \"value\",\r\n                onItemClick: e => {\r\n                    if (groupMenuItem !== e.itemData) {\r\n                        setGroupValue(criteria, e.itemData.value);\r\n                        $operationButton.text(e.itemData.text);\r\n                        groupMenuItem = e.itemData;\r\n                        this._updateFilter()\r\n                    }\r\n                },\r\n                onContentReady: function(e) {\r\n                    e.component.selectItem(groupMenuItem)\r\n                },\r\n                cssClass: FILTER_BUILDER_GROUP_OPERATIONS_CLASS\r\n            }\r\n        });\r\n        return $operationButton.addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_GROUP_OPERATION_CLASS).attr(\"tabindex\", 0)\r\n    },\r\n    _createButtonWithMenu: function(options) {\r\n        var that = this;\r\n        var removeMenu = function() {\r\n            that.$element().find(\".\" + ACTIVE_CLASS).removeClass(ACTIVE_CLASS);\r\n            that.$element().find(\".dx-overlay .dx-treeview\").remove();\r\n            that.$element().find(\".dx-overlay\").remove()\r\n        };\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var position = rtlEnabled ? \"right\" : \"left\";\r\n        var $button = this._createButton(options.caption);\r\n        extend(options.menu, {\r\n            focusStateEnabled: true,\r\n            selectionMode: \"single\",\r\n            onItemClick: (handler = options.menu.onItemClick, function(e) {\r\n                handler(e);\r\n                if (\"dxclick\" === e.event.type) {\r\n                    removeMenu()\r\n                }\r\n            }),\r\n            onHiding: function(e) {\r\n                $button.removeClass(ACTIVE_CLASS)\r\n            },\r\n            position: {\r\n                my: position + \" top\",\r\n                at: position + \" bottom\",\r\n                offset: \"0 1\",\r\n                of: $button,\r\n                collision: \"flip\"\r\n            },\r\n            animation: null,\r\n            onHidden: function() {\r\n                removeMenu()\r\n            },\r\n            cssClass: FILTER_BUILDER_OVERLAY_CLASS + \" \" + options.menu.cssClass,\r\n            rtlEnabled: rtlEnabled\r\n        });\r\n        var handler;\r\n        options.popup = {\r\n            onShown: function(info) {\r\n                var treeViewElement = $(info.component.content()).find(\".dx-treeview\");\r\n                var treeView = treeViewElement.dxTreeView(\"instance\");\r\n                eventsEngine.on(treeViewElement, \"keyup keydown\", (function(e) {\r\n                    var keyName = normalizeKeyName(e);\r\n                    if (\"keydown\" === e.type && keyName === TAB_KEY || \"keyup\" === e.type && (keyName === ESCAPE_KEY || keyName === ENTER_KEY)) {\r\n                        info.component.hide();\r\n                        eventsEngine.trigger(options.menu.position.of, \"focus\")\r\n                    }\r\n                }));\r\n                treeView.focus();\r\n                treeView.option(\"focusedElement\", null)\r\n            }\r\n        };\r\n        this._subscribeOnClickAndEnterKey($button, (function() {\r\n            removeMenu();\r\n            that._createPopupWithTreeView(options, that.$element());\r\n            $button.addClass(ACTIVE_CLASS)\r\n        }));\r\n        return $button\r\n    },\r\n    _hasValueButton: function(condition) {\r\n        var customOperation = getCustomOperation(this._customOperations, condition[1]);\r\n        return customOperation ? false !== customOperation.hasValue : null !== condition[2]\r\n    },\r\n    _createOperationButtonWithMenu: function(condition, field) {\r\n        var that = this;\r\n        var availableOperations = getAvailableOperations(field, this.option(\"filterOperationDescriptions\"), this._customOperations);\r\n        var currentOperation = getOperationFromAvailable(getOperationValue(condition), availableOperations);\r\n        var $operationButton = this._createButtonWithMenu({\r\n            caption: currentOperation.text,\r\n            menu: {\r\n                items: availableOperations,\r\n                displayExpr: \"text\",\r\n                onItemRendered: function(e) {\r\n                    e.itemData.isCustom && $(e.itemElement).addClass(FILTER_BUILDER_MENU_CUSTOM_OPERATION_CLASS)\r\n                },\r\n                onContentReady: function(e) {\r\n                    e.component.selectItem(currentOperation)\r\n                },\r\n                onItemClick: e => {\r\n                    if (currentOperation !== e.itemData) {\r\n                        currentOperation = e.itemData;\r\n                        updateConditionByOperation(condition, currentOperation.value, that._customOperations);\r\n                        var $valueButton = $operationButton.siblings().filter(\".\" + FILTER_BUILDER_ITEM_VALUE_CLASS);\r\n                        if (that._hasValueButton(condition)) {\r\n                            if (0 !== $valueButton.length) {\r\n                                $valueButton.remove()\r\n                            }\r\n                            that._createValueButton(condition, field).appendTo($operationButton.parent())\r\n                        } else {\r\n                            $valueButton.remove()\r\n                        }\r\n                        $operationButton.html(currentOperation.text);\r\n                        this._updateFilter()\r\n                    }\r\n                },\r\n                cssClass: FILTER_BUILDER_FILTER_OPERATIONS_CLASS\r\n            }\r\n        }).addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_ITEM_OPERATION_CLASS).attr(\"tabindex\", 0);\r\n        return $operationButton\r\n    },\r\n    _createOperationAndValueButtons: function(condition, field, $item) {\r\n        this._createOperationButtonWithMenu(condition, field).appendTo($item);\r\n        if (this._hasValueButton(condition)) {\r\n            this._createValueButton(condition, field).appendTo($item)\r\n        }\r\n    },\r\n    _createFieldButtonWithMenu: function(fields, condition, field) {\r\n        var that = this;\r\n        var allowHierarchicalFields = this.option(\"allowHierarchicalFields\");\r\n        var items = getItems(fields, allowHierarchicalFields);\r\n        var item = getField(field.name || field.dataField, items);\r\n        var getFullCaption = function(item, items) {\r\n            return allowHierarchicalFields ? getCaptionWithParents(item, items) : item.caption\r\n        };\r\n        var $fieldButton = this._createButtonWithMenu({\r\n            caption: getFullCaption(item, items),\r\n            menu: {\r\n                items: items,\r\n                dataStructure: \"plain\",\r\n                keyExpr: \"id\",\r\n                parentId: \"parentId\",\r\n                displayExpr: \"caption\",\r\n                onItemClick: e => {\r\n                    if (item !== e.itemData) {\r\n                        item = e.itemData;\r\n                        condition[0] = item.name || item.dataField;\r\n                        condition[2] = \"object\" === item.dataType ? null : \"\";\r\n                        updateConditionByOperation(condition, getDefaultOperation(item), that._customOperations);\r\n                        $fieldButton.siblings().filter(\".\" + FILTER_BUILDER_ITEM_TEXT_CLASS).remove();\r\n                        that._createOperationAndValueButtons(condition, item, $fieldButton.parent());\r\n                        var caption = getFullCaption(item, e.component.option(\"items\"));\r\n                        $fieldButton.html(caption);\r\n                        this._updateFilter()\r\n                    }\r\n                },\r\n                onContentReady: function(e) {\r\n                    e.component.selectItem(item)\r\n                },\r\n                cssClass: FILTER_BUILDER_FIELDS_CLASS\r\n            }\r\n        }).addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_ITEM_FIELD_CLASS).attr(\"tabindex\", 0);\r\n        return $fieldButton\r\n    },\r\n    _createConditionItem: function(condition, parent) {\r\n        var $item = $(\"<div>\").addClass(FILTER_BUILDER_GROUP_ITEM_CLASS);\r\n        var fields = this._getNormalizedFields();\r\n        var field = getField(condition[0], fields);\r\n        this._createRemoveButton(() => {\r\n            removeItem(parent, condition);\r\n            var isSingleChild = 1 === $item.parent().children().length;\r\n            if (isSingleChild) {\r\n                $item.parent().remove()\r\n            } else {\r\n                $item.remove()\r\n            }\r\n            this._updateFilter()\r\n        }).appendTo($item);\r\n        this._createFieldButtonWithMenu(fields, condition, field).appendTo($item);\r\n        this._createOperationAndValueButtons(condition, field, $item);\r\n        return $item\r\n    },\r\n    _getGroupOperations: function(criteria) {\r\n        var groupOperations = this.option(\"groupOperations\");\r\n        var groupOperationDescriptions = this.option(\"groupOperationDescriptions\");\r\n        if (!groupOperations || !groupOperations.length) {\r\n            groupOperations = [getGroupValue(criteria).replace(\"!\", \"not\")]\r\n        }\r\n        return groupOperations.map(operation => ({\r\n            text: groupOperationDescriptions[operation],\r\n            value: OPERATORS[operation]\r\n        }))\r\n    },\r\n    _createRemoveButton: function(handler) {\r\n        var $removeButton = $(\"<div>\").addClass(FILTER_BUILDER_IMAGE_CLASS).addClass(FILTER_BUILDER_IMAGE_REMOVE_CLASS).addClass(FILTER_BUILDER_ACTION_CLASS).attr(\"tabindex\", 0);\r\n        this._subscribeOnClickAndEnterKey($removeButton, handler);\r\n        return $removeButton\r\n    },\r\n    _createAddButton: function(addGroupHandler, addConditionHandler, groupLevel) {\r\n        var $button;\r\n        var maxGroupLevel = this.option(\"maxGroupLevel\");\r\n        if (isDefined(maxGroupLevel) && groupLevel >= maxGroupLevel) {\r\n            $button = this._createButton();\r\n            this._subscribeOnClickAndEnterKey($button, addConditionHandler)\r\n        } else {\r\n            $button = this._createButtonWithMenu({\r\n                menu: {\r\n                    items: [{\r\n                        caption: messageLocalization.format(\"dxFilterBuilder-addCondition\"),\r\n                        click: addConditionHandler\r\n                    }, {\r\n                        caption: messageLocalization.format(\"dxFilterBuilder-addGroup\"),\r\n                        click: addGroupHandler\r\n                    }],\r\n                    displayExpr: \"caption\",\r\n                    onItemClick: function(e) {\r\n                        e.itemData.click()\r\n                    },\r\n                    cssClass: FILTER_BUILDER_ADD_CONDITION_CLASS\r\n                }\r\n            })\r\n        }\r\n        return $button.addClass(FILTER_BUILDER_IMAGE_CLASS).addClass(FILTER_BUILDER_IMAGE_ADD_CLASS).addClass(FILTER_BUILDER_ACTION_CLASS).attr(\"tabindex\", 0)\r\n    },\r\n    _createValueText: function(item, field, $container) {\r\n        var that = this;\r\n        var $text = $(\"<div>\").html(\"&nbsp;\").addClass(FILTER_BUILDER_ITEM_VALUE_TEXT_CLASS).attr(\"tabindex\", 0).appendTo($container);\r\n        var value = item[2];\r\n        var customOperation = getCustomOperation(that._customOperations, item[1]);\r\n        if (!customOperation && field.lookup) {\r\n            getCurrentLookupValueText(field, value, (function(result) {\r\n                renderValueText($text, result)\r\n            }))\r\n        } else {\r\n            when(getCurrentValueText(field, value, customOperation)).done(result => {\r\n                renderValueText($text, result, customOperation)\r\n            })\r\n        }\r\n        that._subscribeOnClickAndEnterKey($text, (function(e) {\r\n            if (\"keyup\" === e.type) {\r\n                e.stopPropagation()\r\n            }\r\n            that._createValueEditorWithEvents(item, field, $container)\r\n        }));\r\n        return $text\r\n    },\r\n    _updateConditionValue: function(item, value, callback) {\r\n        var areValuesDifferent = item[2] !== value;\r\n        if (areValuesDifferent) {\r\n            item[2] = value\r\n        }\r\n        callback();\r\n        this._updateFilter()\r\n    },\r\n    _addDocumentKeyUp: function($editor, handler) {\r\n        var isComposing = false;\r\n        var hasCompositionJustEnded = false;\r\n        var document = domAdapter.getDocument();\r\n        var documentKeyUpHandler = e => {\r\n            if (isComposing || hasCompositionJustEnded) {\r\n                hasCompositionJustEnded = false;\r\n                return\r\n            }\r\n            handler(e)\r\n        };\r\n        eventsEngine.on(document, \"keyup\", documentKeyUpHandler);\r\n        var input = $editor.find(\"input\");\r\n        eventsEngine.on(input, \"compositionstart\", () => {\r\n            isComposing = true\r\n        });\r\n        eventsEngine.on(input, \"compositionend\", () => {\r\n            isComposing = false;\r\n            hasCompositionJustEnded = true\r\n        });\r\n        eventsEngine.on(input, \"keydown\", event => {\r\n            if (229 !== event.which) {\r\n                hasCompositionJustEnded = false\r\n            }\r\n        });\r\n        this._documentKeyUpHandler = documentKeyUpHandler\r\n    },\r\n    _addDocumentClick: function($editor, closeEditorFunc) {\r\n        var document = domAdapter.getDocument();\r\n        var documentClickHandler = e => {\r\n            if (!this._isFocusOnEditorParts($editor, e.target)) {\r\n                eventsEngine.trigger($editor.find(\"input\"), \"change\");\r\n                closeEditorFunc()\r\n            }\r\n        };\r\n        eventsEngine.on(document, \"dxpointerdown\", documentClickHandler);\r\n        this._documentClickHandler = documentClickHandler\r\n    },\r\n    _isFocusOnEditorParts: function($editor, target) {\r\n        var activeElement = target || domAdapter.getActiveElement();\r\n        return $(activeElement).closest($editor.children()).length || $(activeElement).closest(\".dx-dropdowneditor-overlay\").length\r\n    },\r\n    _removeEvents: function() {\r\n        var document = domAdapter.getDocument();\r\n        isDefined(this._documentKeyUpHandler) && eventsEngine.off(document, \"keyup\", this._documentKeyUpHandler);\r\n        isDefined(this._documentClickHandler) && eventsEngine.off(document, \"dxpointerdown\", this._documentClickHandler)\r\n    },\r\n    _dispose: function() {\r\n        this._removeEvents();\r\n        this.callBase()\r\n    },\r\n    _createValueEditorWithEvents: function(item, field, $container) {\r\n        var value = item[2];\r\n        var createValueText = () => {\r\n            $container.empty();\r\n            this._removeEvents();\r\n            return this._createValueText(item, field, $container)\r\n        };\r\n        var closeEditor = () => {\r\n            this._updateConditionValue(item, value, (function() {\r\n                createValueText()\r\n            }))\r\n        };\r\n        var options = {\r\n            value: \"\" === value ? null : value,\r\n            filterOperation: getOperationValue(item),\r\n            setValue: function(data) {\r\n                value = null === data ? \"\" : data\r\n            },\r\n            closeEditor: closeEditor,\r\n            text: $container.text()\r\n        };\r\n        $container.empty();\r\n        var $editor = this._createValueEditor($container, field, options);\r\n        eventsEngine.trigger($editor.find(\"input\").not(\":hidden\").eq(0), \"focus\");\r\n        this._removeEvents();\r\n        this._addDocumentClick($editor, closeEditor);\r\n        this._addDocumentKeyUp($editor, e => {\r\n            var keyName = normalizeKeyName(e);\r\n            if (keyName === TAB_KEY) {\r\n                if (this._isFocusOnEditorParts($editor)) {\r\n                    return\r\n                }\r\n                this._updateConditionValue(item, value, (function() {\r\n                    createValueText();\r\n                    if (e.shiftKey) {\r\n                        eventsEngine.trigger($container.prev(), \"focus\")\r\n                    }\r\n                }))\r\n            }\r\n            if (keyName === ESCAPE_KEY) {\r\n                eventsEngine.trigger(createValueText(), \"focus\")\r\n            }\r\n            if (keyName === ENTER_KEY) {\r\n                this._updateConditionValue(item, value, (function() {\r\n                    eventsEngine.trigger(createValueText(), \"focus\")\r\n                }))\r\n            }\r\n        });\r\n        this._fireContentReadyAction()\r\n    },\r\n    _createValueButton: function(item, field) {\r\n        var $valueButton = $(\"<div>\").addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_ITEM_VALUE_CLASS);\r\n        this._createValueText(item, field, $valueButton);\r\n        return $valueButton\r\n    },\r\n    _createValueEditor: function($container, field, options) {\r\n        var $editor = $(\"<div>\").attr(\"tabindex\", 0).appendTo($container);\r\n        var customOperation = getCustomOperation(this._customOperations, options.filterOperation);\r\n        var editorTemplate = customOperation && customOperation.editorTemplate ? customOperation.editorTemplate : field.editorTemplate;\r\n        if (editorTemplate) {\r\n            var template = this._getTemplate(editorTemplate);\r\n            template.render({\r\n                model: extend({\r\n                    field: field\r\n                }, options),\r\n                container: $editor\r\n            })\r\n        } else {\r\n            this._editorFactory.createEditor.call(this, $editor, extend({}, field, options, {\r\n                parentType: SOURCE\r\n            }))\r\n        }\r\n        return $editor\r\n    },\r\n    _createPopupWithTreeView: function(options, $container) {\r\n        var that = this;\r\n        var $popup = $(\"<div>\").addClass(options.menu.cssClass).appendTo($container);\r\n        this._createComponent($popup, Popup, {\r\n            wrapperAttr: {\r\n                class: options.menu.cssClass\r\n            },\r\n            onHiding: options.menu.onHiding,\r\n            onHidden: options.menu.onHidden,\r\n            rtlEnabled: options.menu.rtlEnabled,\r\n            position: options.menu.position,\r\n            animation: options.menu.animation,\r\n            contentTemplate: function(contentElement) {\r\n                var $menuContainer = $(\"<div>\").appendTo(contentElement);\r\n                that._createComponent($menuContainer, TreeView, options.menu);\r\n                this.repaint()\r\n            },\r\n            _ignoreFunctionValueDeprecation: true,\r\n            maxHeight: function() {\r\n                return getElementMaxHeightByWindow(options.menu.position.of)\r\n            },\r\n            visible: true,\r\n            focusStateEnabled: false,\r\n            hideOnParentScroll: this.option(\"closePopupOnTargetScroll\"),\r\n            closeOnOutsideClick: true,\r\n            onShown: options.popup.onShown,\r\n            shading: false,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            showTitle: false\r\n        })\r\n    },\r\n    _subscribeOnClickAndEnterKey: function($button, handler) {\r\n        eventsEngine.on($button, \"dxclick\", handler);\r\n        eventsEngine.on($button, \"keyup\", (function(e) {\r\n            if (normalizeKeyName(e) === ENTER_KEY) {\r\n                handler(e)\r\n            }\r\n        }))\r\n    }\r\n});\r\nregisterComponent(\"dxFilterBuilder\", FilterBuilder);\r\nexport default FilterBuilder;\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport FilterBuilder from \"./filter_builder/filter_builder\";\r\nexport default FilterBuilder;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_builder.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport FilterBuilder from \"./../filter_builder\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport ScrollView from \"./../scroll_view\";\r\nimport Popup from \"./../popup\";\r\nimport {\r\n    restoreFocus\r\n} from \"../shared/accessibility\";\r\nvar FilterBuilderView = modules.View.inherit({\r\n    _renderCore: function() {\r\n        this._updatePopupOptions()\r\n    },\r\n    _updatePopupOptions: function() {\r\n        if (this.option(\"filterBuilderPopup.visible\")) {\r\n            this._initPopup()\r\n        } else if (this._filterBuilderPopup) {\r\n            this._filterBuilderPopup.hide()\r\n        }\r\n    },\r\n    _disposePopup: function() {\r\n        if (this._filterBuilderPopup) {\r\n            this._filterBuilderPopup.dispose();\r\n            this._filterBuilderPopup = void 0\r\n        }\r\n        if (this._filterBuilder) {\r\n            this._filterBuilder.dispose();\r\n            this._filterBuilder = void 0\r\n        }\r\n    },\r\n    _initPopup: function() {\r\n        var that = this;\r\n        that._disposePopup();\r\n        that._filterBuilderPopup = that._createComponent(that.element(), Popup, extend({\r\n            title: messageLocalization.format(\"dxDataGrid-filterBuilderPopupTitle\"),\r\n            contentTemplate: function($contentElement) {\r\n                return that._getPopupContentTemplate($contentElement)\r\n            },\r\n            onOptionChanged: function(args) {\r\n                if (\"visible\" === args.name) {\r\n                    that.option(\"filterBuilderPopup.visible\", args.value)\r\n                }\r\n            },\r\n            toolbarItems: that._getPopupToolbarItems()\r\n        }, that.option(\"filterBuilderPopup\"), {\r\n            onHidden: function(e) {\r\n                restoreFocus(that);\r\n                that._disposePopup()\r\n            }\r\n        }))\r\n    },\r\n    _getPopupContentTemplate: function(contentElement) {\r\n        var $contentElement = $(contentElement);\r\n        var $filterBuilderContainer = $(\"<div>\").appendTo($(contentElement));\r\n        this._filterBuilder = this._createComponent($filterBuilderContainer, FilterBuilder, extend({\r\n            value: this.option(\"filterValue\"),\r\n            fields: this.getController(\"columns\").getFilteringColumns()\r\n        }, this.option(\"filterBuilder\"), {\r\n            customOperations: this.getController(\"filterSync\").getCustomFilterOperations()\r\n        }));\r\n        this._createComponent($contentElement, ScrollView, {\r\n            direction: \"both\"\r\n        })\r\n    },\r\n    _getPopupToolbarItems: function() {\r\n        var that = this;\r\n        return [{\r\n            toolbar: \"bottom\",\r\n            location: \"after\",\r\n            widget: \"dxButton\",\r\n            options: {\r\n                text: messageLocalization.format(\"OK\"),\r\n                onClick: function(e) {\r\n                    var filter = that._filterBuilder.option(\"value\");\r\n                    that.option(\"filterValue\", filter);\r\n                    that._filterBuilderPopup.hide()\r\n                }\r\n            }\r\n        }, {\r\n            toolbar: \"bottom\",\r\n            location: \"after\",\r\n            widget: \"dxButton\",\r\n            options: {\r\n                text: messageLocalization.format(\"Cancel\"),\r\n                onClick: function(e) {\r\n                    that._filterBuilderPopup.hide()\r\n                }\r\n            }\r\n        }]\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"filterBuilder\":\r\n            case \"filterBuilderPopup\":\r\n                this._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nexport var filterBuilderModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterBuilder: {\r\n                groupOperationDescriptions: {\r\n                    and: messageLocalization.format(\"dxFilterBuilder-and\"),\r\n                    or: messageLocalization.format(\"dxFilterBuilder-or\"),\r\n                    notAnd: messageLocalization.format(\"dxFilterBuilder-notAnd\"),\r\n                    notOr: messageLocalization.format(\"dxFilterBuilder-notOr\")\r\n                },\r\n                filterOperationDescriptions: {\r\n                    between: messageLocalization.format(\"dxFilterBuilder-filterOperationBetween\"),\r\n                    equal: messageLocalization.format(\"dxFilterBuilder-filterOperationEquals\"),\r\n                    notEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationNotEquals\"),\r\n                    lessThan: messageLocalization.format(\"dxFilterBuilder-filterOperationLess\"),\r\n                    lessThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationLessOrEquals\"),\r\n                    greaterThan: messageLocalization.format(\"dxFilterBuilder-filterOperationGreater\"),\r\n                    greaterThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationGreaterOrEquals\"),\r\n                    startsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationStartsWith\"),\r\n                    contains: messageLocalization.format(\"dxFilterBuilder-filterOperationContains\"),\r\n                    notContains: messageLocalization.format(\"dxFilterBuilder-filterOperationNotContains\"),\r\n                    endsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationEndsWith\"),\r\n                    isBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsBlank\"),\r\n                    isNotBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\r\n                }\r\n            },\r\n            filterBuilderPopup: {}\r\n        }\r\n    },\r\n    views: {\r\n        filterBuilderView: FilterBuilderView\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.filter_builder.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    filterBuilderModule\r\n} from \"../grid_core/ui.grid_core.filter_builder\";\r\ncore.registerModule(\"filterBuilder\", filterBuilderModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_panel.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridUtils from \"./ui.grid_core.utils\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport CheckBox from \"../check_box\";\r\nimport {\r\n    getCurrentLookupValueText,\r\n    getCustomOperation,\r\n    getCurrentValueText,\r\n    getField,\r\n    getCaptionByOperation,\r\n    getGroupValue,\r\n    isCondition,\r\n    isGroup\r\n} from \"../filter_builder/utils\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    captionize\r\n} from \"../../core/utils/inflector\";\r\nimport {\r\n    registerKeyboardAction\r\n} from \"./ui.grid_core.accessibility\";\r\nvar FILTER_PANEL_CLASS = \"filter-panel\";\r\nvar FILTER_PANEL_TEXT_CLASS = FILTER_PANEL_CLASS + \"-text\";\r\nvar FILTER_PANEL_CHECKBOX_CLASS = FILTER_PANEL_CLASS + \"-checkbox\";\r\nvar FILTER_PANEL_CLEAR_FILTER_CLASS = FILTER_PANEL_CLASS + \"-clear-filter\";\r\nvar FILTER_PANEL_LEFT_CONTAINER = FILTER_PANEL_CLASS + \"-left\";\r\nvar FILTER_PANEL_TARGET = \"filterPanel\";\r\nvar FilterPanelView = modules.View.inherit({\r\n    isVisible: function() {\r\n        return this.option(\"filterPanel.visible\") && this.getController(\"data\").dataSource()\r\n    },\r\n    init: function() {\r\n        this.getController(\"data\").dataSourceChanged.add(() => this.render())\r\n    },\r\n    _renderCore: function() {\r\n        var $element = this.element();\r\n        $element.empty().addClass(this.addWidgetPrefix(FILTER_PANEL_CLASS));\r\n        var $leftContainer = $(\"<div>\").addClass(this.addWidgetPrefix(FILTER_PANEL_LEFT_CONTAINER)).appendTo($element);\r\n        if (this.option(\"filterValue\") || this._filterValueBuffer) {\r\n            $leftContainer.append(this._getCheckElement()).append(this._getFilterElement()).append(this._getTextElement());\r\n            $element.append(this._getRemoveButtonElement())\r\n        } else {\r\n            $leftContainer.append(this._getFilterElement()).append(this._getTextElement())\r\n        }\r\n    },\r\n    _getCheckElement: function() {\r\n        var that = this;\r\n        var $element = $(\"<div>\").addClass(this.addWidgetPrefix(FILTER_PANEL_CHECKBOX_CLASS));\r\n        that._createComponent($element, CheckBox, {\r\n            value: that.option(\"filterPanel.filterEnabled\"),\r\n            onValueChanged: function(e) {\r\n                that.option(\"filterPanel.filterEnabled\", e.value)\r\n            }\r\n        });\r\n        $element.attr(\"title\", this.option(\"filterPanel.texts.filterEnabledHint\"));\r\n        return $element\r\n    },\r\n    _getFilterElement: function() {\r\n        var that = this;\r\n        var $element = $(\"<div>\").addClass(\"dx-icon-filter\");\r\n        eventsEngine.on($element, \"click\", () => that._showFilterBuilder());\r\n        registerKeyboardAction(\"filterPanel\", that, $element, void 0, () => that._showFilterBuilder());\r\n        that._addTabIndexToElement($element);\r\n        return $element\r\n    },\r\n    _getTextElement: function() {\r\n        var that = this;\r\n        var $textElement = $(\"<div>\").addClass(that.addWidgetPrefix(FILTER_PANEL_TEXT_CLASS));\r\n        var filterText;\r\n        var filterValue = that.option(\"filterValue\");\r\n        if (filterValue) {\r\n            when(that.getFilterText(filterValue, that.getController(\"filterSync\").getCustomFilterOperations())).done((function(filterText) {\r\n                var customizeText = that.option(\"filterPanel.customizeText\");\r\n                if (customizeText) {\r\n                    var customText = customizeText({\r\n                        component: that.component,\r\n                        filterValue: filterValue,\r\n                        text: filterText\r\n                    });\r\n                    if (\"string\" === typeof customText) {\r\n                        filterText = customText\r\n                    }\r\n                }\r\n                $textElement.text(filterText)\r\n            }))\r\n        } else {\r\n            filterText = that.option(\"filterPanel.texts.createFilter\");\r\n            $textElement.text(filterText)\r\n        }\r\n        eventsEngine.on($textElement, \"click\", () => that._showFilterBuilder());\r\n        registerKeyboardAction(\"filterPanel\", that, $textElement, void 0, () => that._showFilterBuilder());\r\n        that._addTabIndexToElement($textElement);\r\n        return $textElement\r\n    },\r\n    _showFilterBuilder: function() {\r\n        this.option(\"filterBuilderPopup.visible\", true)\r\n    },\r\n    _getRemoveButtonElement: function() {\r\n        var that = this;\r\n        var clearFilterValue = () => that.option(\"filterValue\", null);\r\n        var $element = $(\"<div>\").addClass(that.addWidgetPrefix(FILTER_PANEL_CLEAR_FILTER_CLASS)).text(that.option(\"filterPanel.texts.clearFilter\"));\r\n        eventsEngine.on($element, \"click\", clearFilterValue);\r\n        registerKeyboardAction(\"filterPanel\", this, $element, void 0, clearFilterValue);\r\n        that._addTabIndexToElement($element);\r\n        return $element\r\n    },\r\n    _addTabIndexToElement: function($element) {\r\n        if (!this.option(\"useLegacyKeyboardNavigation\")) {\r\n            var tabindex = this.option(\"tabindex\") || 0;\r\n            $element.attr(\"tabindex\", tabindex)\r\n        }\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"filterValue\":\r\n                this._invalidate();\r\n                this.option(\"filterPanel.filterEnabled\", true);\r\n                args.handled = true;\r\n                break;\r\n            case \"filterPanel\":\r\n                this._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _getConditionText: function(fieldText, operationText, valueText) {\r\n        var result = \"[\".concat(fieldText, \"] \").concat(operationText);\r\n        if (isDefined(valueText)) {\r\n            result += valueText\r\n        }\r\n        return result\r\n    },\r\n    _getValueMaskedText: function(value) {\r\n        return Array.isArray(value) ? \"('\".concat(value.join(\"', '\"), \"')\") : \" '\".concat(value, \"'\")\r\n    },\r\n    _getValueText: function(field, customOperation, value) {\r\n        var deferred = new Deferred;\r\n        var hasCustomOperation = customOperation && customOperation.customizeText;\r\n        if (isDefined(value) || hasCustomOperation) {\r\n            if (!hasCustomOperation && field.lookup) {\r\n                getCurrentLookupValueText(field, value, data => {\r\n                    deferred.resolve(this._getValueMaskedText(data))\r\n                })\r\n            } else {\r\n                var displayValue = Array.isArray(value) ? value : gridUtils.getDisplayValue(field, value);\r\n                when(getCurrentValueText(field, displayValue, customOperation, FILTER_PANEL_TARGET)).done(data => {\r\n                    deferred.resolve(this._getValueMaskedText(data))\r\n                })\r\n            }\r\n        } else {\r\n            deferred.resolve(\"\")\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    getConditionText: function(filterValue, options) {\r\n        var that = this;\r\n        var operation = filterValue[1];\r\n        var deferred = new Deferred;\r\n        var customOperation = getCustomOperation(options.customOperations, operation);\r\n        var operationText;\r\n        var field = getField(filterValue[0], options.columns);\r\n        var fieldText = field.caption || \"\";\r\n        var value = filterValue[2];\r\n        if (customOperation) {\r\n            operationText = customOperation.caption || captionize(customOperation.name)\r\n        } else if (null === value) {\r\n            operationText = getCaptionByOperation(\"=\" === operation ? \"isblank\" : \"isnotblank\", options.filterOperationDescriptions)\r\n        } else {\r\n            operationText = getCaptionByOperation(operation, options.filterOperationDescriptions)\r\n        }\r\n        this._getValueText(field, customOperation, value).done(valueText => {\r\n            deferred.resolve(that._getConditionText(fieldText, operationText, valueText))\r\n        });\r\n        return deferred\r\n    },\r\n    getGroupText: function(filterValue, options, isInnerGroup) {\r\n        var that = this;\r\n        var result = new Deferred;\r\n        var textParts = [];\r\n        var groupValue = getGroupValue(filterValue);\r\n        filterValue.forEach(item => {\r\n            if (isCondition(item)) {\r\n                textParts.push(that.getConditionText(item, options))\r\n            } else if (isGroup(item)) {\r\n                textParts.push(that.getGroupText(item, options, true))\r\n            }\r\n        });\r\n        when.apply(this, textParts).done((function() {\r\n            var text;\r\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n                args[_key] = arguments[_key]\r\n            }\r\n            if (\"!\" === groupValue[0]) {\r\n                var groupText = options.groupOperationDescriptions[\"not\" + groupValue.substring(1, 2).toUpperCase() + groupValue.substring(2)].split(\" \");\r\n                text = \"\".concat(groupText[0], \" \").concat(args[0])\r\n            } else {\r\n                text = args.join(\" \".concat(options.groupOperationDescriptions[groupValue], \" \"))\r\n            }\r\n            if (isInnerGroup) {\r\n                text = \"(\".concat(text, \")\")\r\n            }\r\n            result.resolve(text)\r\n        }));\r\n        return result\r\n    },\r\n    getFilterText: function(filterValue, customOperations) {\r\n        var options = {\r\n            customOperations: customOperations,\r\n            columns: this.getController(\"columns\").getFilteringColumns(),\r\n            filterOperationDescriptions: this.option(\"filterBuilder.filterOperationDescriptions\"),\r\n            groupOperationDescriptions: this.option(\"filterBuilder.groupOperationDescriptions\")\r\n        };\r\n        return isCondition(filterValue) ? this.getConditionText(filterValue, options) : this.getGroupText(filterValue, options)\r\n    }\r\n});\r\nexport var filterPanelModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterPanel: {\r\n                visible: false,\r\n                filterEnabled: true,\r\n                texts: {\r\n                    createFilter: messageLocalization.format(\"dxDataGrid-filterPanelCreateFilter\"),\r\n                    clearFilter: messageLocalization.format(\"dxDataGrid-filterPanelClearFilter\"),\r\n                    filterEnabledHint: messageLocalization.format(\"dxDataGrid-filterPanelFilterEnabledHint\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    views: {\r\n        filterPanelView: FilterPanelView\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                optionChanged: function(args) {\r\n                    switch (args.name) {\r\n                        case \"filterPanel\":\r\n                            this._applyFilter();\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.filter_panel.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    filterPanelModule\r\n} from \"../grid_core/ui.grid_core.filter_panel\";\r\ncore.registerModule(\"filterPanel\", filterPanelModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.search.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport dataQuery from \"../../data/query\";\r\nvar SEARCH_PANEL_CLASS = \"search-panel\";\r\nvar SEARCH_TEXT_CLASS = \"search-text\";\r\nvar HEADER_PANEL_CLASS = \"header-panel\";\r\nvar FILTERING_TIMEOUT = 700;\r\n\r\nfunction allowSearch(column) {\r\n    return isDefined(column.allowSearch) ? column.allowSearch : column.allowFiltering\r\n}\r\n\r\nfunction parseValue(column, text) {\r\n    var lookup = column.lookup;\r\n    if (!column.parseValue) {\r\n        return text\r\n    }\r\n    if (lookup) {\r\n        return column.parseValue.call(lookup, text)\r\n    }\r\n    return column.parseValue(text)\r\n}\r\nexport var searchModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            searchPanel: {\r\n                visible: false,\r\n                width: 160,\r\n                placeholder: messageLocalization.format(\"dxDataGrid-searchPanelPlaceholder\"),\r\n                highlightSearchText: true,\r\n                highlightCaseSensitive: false,\r\n                text: \"\",\r\n                searchVisibleColumnsOnly: false\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                publicMethods: function() {\r\n                    return this.callBase().concat([\"searchByText\"])\r\n                },\r\n                _calculateAdditionalFilter: function() {\r\n                    var filter = this.callBase();\r\n                    var searchFilter = function(that, text) {\r\n                        var i;\r\n                        var column;\r\n                        var columns = that._columnsController.getColumns();\r\n                        var searchVisibleColumnsOnly = that.option(\"searchPanel.searchVisibleColumnsOnly\");\r\n                        var lookup;\r\n                        var filters = [];\r\n                        if (!text) {\r\n                            return null\r\n                        }\r\n\r\n                        function onQueryDone(items) {\r\n                            var valueGetter = compileGetter(lookup.valueExpr);\r\n                            for (var _i = 0; _i < items.length; _i++) {\r\n                                var value = valueGetter(items[_i]);\r\n                                filters.push(column.createFilterExpression(value, null, \"search\"))\r\n                            }\r\n                        }\r\n                        for (i = 0; i < columns.length; i++) {\r\n                            column = columns[i];\r\n                            if (searchVisibleColumnsOnly && !column.visible) {\r\n                                continue\r\n                            }\r\n                            if (allowSearch(column) && column.calculateFilterExpression) {\r\n                                lookup = column.lookup;\r\n                                var filterValue = parseValue(column, text);\r\n                                if (lookup && lookup.items) {\r\n                                    dataQuery(lookup.items).filter(column.createFilterExpression.call({\r\n                                        dataField: lookup.displayExpr,\r\n                                        dataType: lookup.dataType,\r\n                                        calculateFilterExpression: column.calculateFilterExpression\r\n                                    }, filterValue, null, \"search\")).enumerate().done(onQueryDone)\r\n                                } else if (void 0 !== filterValue) {\r\n                                    filters.push(column.createFilterExpression(filterValue, null, \"search\"))\r\n                                }\r\n                            }\r\n                        }\r\n                        if (0 === filters.length) {\r\n                            return [\"!\"]\r\n                        }\r\n                        return gridCoreUtils.combineFilters(filters, \"or\")\r\n                    }(this, this.option(\"searchPanel.text\"));\r\n                    return gridCoreUtils.combineFilters([filter, searchFilter])\r\n                },\r\n                searchByText: function(text) {\r\n                    this.option(\"searchPanel.text\", text)\r\n                },\r\n                optionChanged: function(args) {\r\n                    switch (args.fullName) {\r\n                        case \"searchPanel.text\":\r\n                        case \"searchPanel\":\r\n                            this._applyFilter();\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            headerPanel: function() {\r\n                var getSearchPanelOptions = function(that) {\r\n                    return that.option(\"searchPanel\")\r\n                };\r\n                return {\r\n                    _getToolbarItems: function() {\r\n                        var items = this.callBase();\r\n                        return this._prepareSearchItem(items)\r\n                    },\r\n                    _prepareSearchItem: function(items) {\r\n                        var that = this;\r\n                        var dataController = that.getController(\"data\");\r\n                        var searchPanelOptions = getSearchPanelOptions(that);\r\n                        if (searchPanelOptions && searchPanelOptions.visible) {\r\n                            var toolbarItem = {\r\n                                template: function(data, index, container) {\r\n                                    var $search = $(\"<div>\").addClass(that.addWidgetPrefix(SEARCH_PANEL_CLASS)).appendTo(container);\r\n                                    that.getController(\"editorFactory\").createEditor($search, {\r\n                                        width: searchPanelOptions.width,\r\n                                        placeholder: searchPanelOptions.placeholder,\r\n                                        parentType: \"searchPanel\",\r\n                                        value: that.option(\"searchPanel.text\"),\r\n                                        updateValueTimeout: FILTERING_TIMEOUT,\r\n                                        setValue: function(value) {\r\n                                            dataController.searchByText(value)\r\n                                        },\r\n                                        editorOptions: {\r\n                                            inputAttr: {\r\n                                                \"aria-label\": messageLocalization.format(\"\".concat(that.component.NAME, \"-ariaSearchInGrid\"))\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                    that.resize()\r\n                                },\r\n                                name: \"searchPanel\",\r\n                                location: \"after\",\r\n                                locateInMenu: \"never\",\r\n                                sortIndex: 40\r\n                            };\r\n                            items.push(toolbarItem)\r\n                        }\r\n                        return items\r\n                    },\r\n                    getSearchTextEditor: function() {\r\n                        var that = this;\r\n                        var $element = that.element();\r\n                        var $searchPanel = $element.find(\".\" + that.addWidgetPrefix(SEARCH_PANEL_CLASS)).filter((function() {\r\n                            return $(this).closest(\".\" + that.addWidgetPrefix(HEADER_PANEL_CLASS)).is($element)\r\n                        }));\r\n                        if ($searchPanel.length) {\r\n                            return $searchPanel.dxTextBox(\"instance\")\r\n                        }\r\n                        return null\r\n                    },\r\n                    isVisible: function() {\r\n                        var searchPanelOptions = getSearchPanelOptions(this);\r\n                        return this.callBase() || searchPanelOptions && searchPanelOptions.visible\r\n                    },\r\n                    optionChanged: function(args) {\r\n                        if (\"searchPanel\" === args.name) {\r\n                            if (\"searchPanel.text\" === args.fullName) {\r\n                                var editor = this.getSearchTextEditor();\r\n                                if (editor) {\r\n                                    editor.option(\"value\", args.value)\r\n                                }\r\n                            } else {\r\n                                this._invalidate()\r\n                            }\r\n                            args.handled = true\r\n                        } else {\r\n                            this.callBase(args)\r\n                        }\r\n                    }\r\n                }\r\n            }(),\r\n            rowsView: {\r\n                init: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._searchParams = []\r\n                },\r\n                _getFormattedSearchText: function(column, searchText) {\r\n                    var value = parseValue(column, searchText);\r\n                    var formatOptions = gridCoreUtils.getFormatOptionsByColumn(column, \"search\");\r\n                    return gridCoreUtils.formatValue(value, formatOptions)\r\n                },\r\n                _getStringNormalizer: function() {\r\n                    var isCaseSensitive = this.option(\"searchPanel.highlightCaseSensitive\");\r\n                    return function(str) {\r\n                        return isCaseSensitive ? str : str.toLowerCase()\r\n                    }\r\n                },\r\n                _findHighlightingTextNodes: function(column, cellElement, searchText) {\r\n                    var _$items;\r\n                    var $parent = cellElement.parent();\r\n                    var $items;\r\n                    var stringNormalizer = this._getStringNormalizer();\r\n                    var normalizedSearchText = stringNormalizer(searchText);\r\n                    var resultTextNodes = [];\r\n                    if (!$parent.length) {\r\n                        $parent = $(\"<div>\").append(cellElement)\r\n                    } else if (column) {\r\n                        if (column.groupIndex >= 0 && !column.showWhenGrouped) {\r\n                            $items = cellElement\r\n                        } else {\r\n                            var columnIndex = this._columnsController.getVisibleIndex(column.index);\r\n                            $items = $parent.children(\"td\").eq(columnIndex).find(\"*\")\r\n                        }\r\n                    }\r\n                    $items = null !== (_$items = $items) && void 0 !== _$items && _$items.length ? $items : $parent.find(\"*\");\r\n                    $items.each((function(_, element) {\r\n                        var $contents = $(element).contents();\r\n                        for (var i = 0; i < $contents.length; i++) {\r\n                            var node = $contents.get(i);\r\n                            if (3 === node.nodeType) {\r\n                                var normalizedText = stringNormalizer(node.textContent || node.nodeValue);\r\n                                if (normalizedText.indexOf(normalizedSearchText) > -1) {\r\n                                    resultTextNodes.push(node)\r\n                                }\r\n                            }\r\n                        }\r\n                    }));\r\n                    return resultTextNodes\r\n                },\r\n                _highlightSearchTextCore: function($textNode, searchText) {\r\n                    var $searchTextSpan = $(\"<span>\").addClass(this.addWidgetPrefix(SEARCH_TEXT_CLASS));\r\n                    var text = $textNode.text();\r\n                    var firstContentElement = $textNode[0];\r\n                    var stringNormalizer = this._getStringNormalizer();\r\n                    var index = stringNormalizer(text).indexOf(stringNormalizer(searchText));\r\n                    if (index >= 0) {\r\n                        if (firstContentElement.textContent) {\r\n                            firstContentElement.textContent = text.substr(0, index)\r\n                        } else {\r\n                            firstContentElement.nodeValue = text.substr(0, index)\r\n                        }\r\n                        $textNode.after($searchTextSpan.text(text.substr(index, searchText.length)));\r\n                        $textNode = $(domAdapter.createTextNode(text.substr(index + searchText.length))).insertAfter($searchTextSpan);\r\n                        return this._highlightSearchTextCore($textNode, searchText)\r\n                    }\r\n                },\r\n                _highlightSearchText: function(cellElement, isEquals, column) {\r\n                    var that = this;\r\n                    var stringNormalizer = this._getStringNormalizer();\r\n                    var searchText = that.option(\"searchPanel.text\");\r\n                    if (isEquals && column) {\r\n                        searchText = searchText && that._getFormattedSearchText(column, searchText)\r\n                    }\r\n                    if (searchText && that.option(\"searchPanel.highlightSearchText\")) {\r\n                        var textNodes = that._findHighlightingTextNodes(column, cellElement, searchText);\r\n                        textNodes.forEach(textNode => {\r\n                            if (isEquals) {\r\n                                if (stringNormalizer($(textNode).text()) === stringNormalizer(searchText)) {\r\n                                    $(textNode).replaceWith($(\"<span>\").addClass(that.addWidgetPrefix(SEARCH_TEXT_CLASS)).text($(textNode).text()))\r\n                                }\r\n                            } else {\r\n                                that._highlightSearchTextCore($(textNode), searchText)\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                _renderCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.option().rowTemplate || this.option(\"dataRowTemplate\")) {\r\n                        if (this.option(\"templatesRenderAsynchronously\")) {\r\n                            clearTimeout(this._highlightTimer);\r\n                            this._highlightTimer = setTimeout(function() {\r\n                                this._highlightSearchText(this.getTableElement())\r\n                            }.bind(this))\r\n                        } else {\r\n                            this._highlightSearchText(this.getTableElement())\r\n                        }\r\n                    }\r\n                },\r\n                _updateCell: function($cell, parameters) {\r\n                    var column = parameters.column;\r\n                    var dataType = column.lookup && column.lookup.dataType || column.dataType;\r\n                    var isEquals = \"string\" !== dataType;\r\n                    if (allowSearch(column) && !parameters.isOnForm) {\r\n                        if (this.option(\"templatesRenderAsynchronously\")) {\r\n                            if (!this._searchParams.length) {\r\n                                clearTimeout(this._highlightTimer);\r\n                                this._highlightTimer = setTimeout(function() {\r\n                                    this._searchParams.forEach(function(params) {\r\n                                        this._highlightSearchText.apply(this, params)\r\n                                    }.bind(this));\r\n                                    this._searchParams = []\r\n                                }.bind(this))\r\n                            }\r\n                            this._searchParams.push([$cell, isEquals, column])\r\n                        } else {\r\n                            this._highlightSearchText($cell, isEquals, column)\r\n                        }\r\n                    }\r\n                    this.callBase($cell, parameters)\r\n                },\r\n                dispose: function() {\r\n                    clearTimeout(this._highlightTimer);\r\n                    this.callBase()\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.search.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    searchModule\r\n} from \"../grid_core/ui.grid_core.search\";\r\ngridCore.registerModule(\"search\", searchModule);\r\n","/**\r\n * DevExtreme (esm/renovation/component_wrapper/grid_pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Component from \"./common/component\";\r\nexport class GridPagerWrapper extends Component {\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"pageIndex\":\r\n                var pageIndexChanged = this.option(\"pageIndexChanged\");\r\n                if (pageIndexChanged) {\r\n                    pageIndexChanged(args.value)\r\n                }\r\n                break;\r\n            case \"pageSize\":\r\n                var pageSizeChanged = this.option(\"pageSizeChanged\");\r\n                if (pageSizeChanged) {\r\n                    pageSizeChanged(args.value)\r\n                }\r\n        }\r\n        super._optionChanged(args)\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (esm/renovation/utils/type_conversion.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport function toNumber(attribute) {\r\n    return attribute ? Number(attribute.replace(\"px\", \"\")) : 0\r\n}\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/utils/get_element_width.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport getElementComputedStyle from \"../../../utils/get_computed_style\";\r\nimport {\r\n    toNumber\r\n} from \"../../../utils/type_conversion\";\r\nexport function getElementStyle(name, element) {\r\n    var _getElementComputedSt;\r\n    var computedStyle = null !== (_getElementComputedSt = getElementComputedStyle(element)) && void 0 !== _getElementComputedSt ? _getElementComputedSt : {};\r\n    return toNumber(computedStyle[name])\r\n}\r\nexport function getElementWidth(element) {\r\n    return getElementStyle(\"width\", element)\r\n}\r\nexport function getElementMinWidth(element) {\r\n    return getElementStyle(\"minWidth\", element)\r\n}\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/resizable_container.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"contentTemplate\", \"pagerProps\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport resizeCallbacks from \"../../../core/utils/resize_callbacks\";\r\nimport {\r\n    getElementWidth,\r\n    getElementStyle\r\n} from \"./utils/get_element_width\";\r\nimport {\r\n    isDefined\r\n} from \"../../../core/utils/type\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        contentAttributes: contentAttributes,\r\n        infoTextRef: infoTextRef,\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode,\r\n        pageSizesRef: pageSizesRef,\r\n        pagesRef: pagesRef,\r\n        parentRef: parentRef,\r\n        props: {\r\n            contentTemplate: Content\r\n        }\r\n    } = _ref;\r\n    return Content(_extends({\r\n        rootElementRef: parentRef,\r\n        pageSizesRef: pageSizesRef,\r\n        infoTextRef: infoTextRef,\r\n        pagesRef: pagesRef,\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode\r\n    }, contentAttributes))\r\n};\r\nexport function calculateAdaptivityProps(_ref2) {\r\n    var {\r\n        info: infoWidth,\r\n        pageSizes: pageSizesWidth,\r\n        pages: pagesWidth,\r\n        parent: parentWidth\r\n    } = _ref2;\r\n    var minimalWidth = pageSizesWidth + pagesWidth + infoWidth;\r\n    var infoTextVisible = parentWidth - minimalWidth > 0;\r\n    var isLargeDisplayMode = parentWidth - (pageSizesWidth + pagesWidth) > 0;\r\n    return {\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode\r\n    }\r\n}\r\n\r\nfunction getElementsWidth(_ref3) {\r\n    var {\r\n        info: info,\r\n        pageSizes: pageSizes,\r\n        pages: pages,\r\n        parent: parent\r\n    } = _ref3;\r\n    var parentWidth = getElementWidth(parent);\r\n    var pageSizesWidth = getElementWidth(pageSizes);\r\n    var infoWidth = getElementWidth(info);\r\n    var pagesHtmlWidth = getElementWidth(pages);\r\n    return {\r\n        parent: parentWidth,\r\n        pageSizes: pageSizesWidth,\r\n        info: infoWidth + getElementStyle(\"marginLeft\", info) + getElementStyle(\"marginRight\", info),\r\n        pages: pagesHtmlWidth\r\n    }\r\n}\r\nexport var ResizableContainerProps = {};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\r\nexport class ResizableContainer extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.parentRef = infernoCreateRef();\r\n        this.pageSizesRef = infernoCreateRef();\r\n        this.infoTextRef = infernoCreateRef();\r\n        this.pagesRef = infernoCreateRef();\r\n        this.state = {\r\n            infoTextVisible: true,\r\n            isLargeDisplayMode: true\r\n        };\r\n        this.subscribeToResize = this.subscribeToResize.bind(this);\r\n        this.effectUpdateChildProps = this.effectUpdateChildProps.bind(this);\r\n        this.updateAdaptivityProps = this.updateAdaptivityProps.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.subscribeToResize, [this.state.infoTextVisible, this.state.isLargeDisplayMode]), new InfernoEffect(this.effectUpdateChildProps, [this.props, this.state.infoTextVisible, this.state.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$, _this$_effects$2;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.state.infoTextVisible, this.state.isLargeDisplayMode]);\r\n        null === (_this$_effects$2 = this._effects[1]) || void 0 === _this$_effects$2 ? void 0 : _this$_effects$2.update([this.props, this.state.infoTextVisible, this.state.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate])\r\n    }\r\n    subscribeToResize() {\r\n        var callback = () => {\r\n            this.parentWidth > 0 && this.updateAdaptivityProps()\r\n        };\r\n        resizeCallbacks.add(callback);\r\n        return () => {\r\n            resizeCallbacks.remove(callback)\r\n        }\r\n    }\r\n    effectUpdateChildProps() {\r\n        if (this.parentWidth > 0) {\r\n            this.updateAdaptivityProps()\r\n        }\r\n    }\r\n    get contentAttributes() {\r\n        var {\r\n            className: className,\r\n            displayMode: displayMode,\r\n            gridCompatibility: gridCompatibility,\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            infoText: infoText,\r\n            lightModeEnabled: lightModeEnabled,\r\n            maxPagesCount: maxPagesCount,\r\n            onKeyDown: onKeyDown,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes,\r\n            pagesCountText: pagesCountText,\r\n            pagesNavigatorVisible: pagesNavigatorVisible,\r\n            rtlEnabled: rtlEnabled,\r\n            showInfo: showInfo,\r\n            showNavigationButtons: showNavigationButtons,\r\n            showPageSizes: showPageSizes,\r\n            totalCount: totalCount,\r\n            visible: visible\r\n        } = this.props.pagerProps;\r\n        return _extends({}, this.restAttributes, {\r\n            pageSize: pageSize,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pageSizeChange: pageSizeChange,\r\n            gridCompatibility: gridCompatibility,\r\n            className: className,\r\n            showInfo: showInfo,\r\n            infoText: infoText,\r\n            lightModeEnabled: lightModeEnabled,\r\n            displayMode: displayMode,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pagesCountText: pagesCountText,\r\n            visible: visible,\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            pagesNavigatorVisible: pagesNavigatorVisible,\r\n            showPageSizes: showPageSizes,\r\n            pageSizes: pageSizes,\r\n            rtlEnabled: rtlEnabled,\r\n            showNavigationButtons: showNavigationButtons,\r\n            totalCount: totalCount,\r\n            onKeyDown: onKeyDown\r\n        })\r\n    }\r\n    get parentWidth() {\r\n        return this.parentRef.current ? getElementWidth(this.parentRef.current) : 0\r\n    }\r\n    updateAdaptivityProps() {\r\n        var currentElementsWidth = getElementsWidth({\r\n            parent: this.parentRef.current,\r\n            pageSizes: this.pageSizesRef.current,\r\n            info: this.infoTextRef.current,\r\n            pages: this.pagesRef.current\r\n        });\r\n        if (isDefined(this.actualAdaptivityProps) && (this.actualAdaptivityProps.infoTextVisible !== this.state.infoTextVisible || this.actualAdaptivityProps.isLargeDisplayMode !== this.state.isLargeDisplayMode)) {\r\n            return\r\n        }\r\n        var isEmpty = !isDefined(this.elementsWidth);\r\n        if (isEmpty) {\r\n            this.elementsWidth = {}\r\n        }\r\n        if (isEmpty || this.state.isLargeDisplayMode) {\r\n            this.elementsWidth.pageSizes = currentElementsWidth.pageSizes;\r\n            this.elementsWidth.pages = currentElementsWidth.pages\r\n        }\r\n        if (isEmpty || this.state.infoTextVisible) {\r\n            this.elementsWidth.info = currentElementsWidth.info\r\n        }\r\n        this.actualAdaptivityProps = calculateAdaptivityProps(_extends({\r\n            parent: currentElementsWidth.parent\r\n        }, this.elementsWidth));\r\n        this.setState(__state_argument => ({\r\n            infoTextVisible: this.actualAdaptivityProps.infoTextVisible\r\n        }));\r\n        this.setState(__state_argument => ({\r\n            isLargeDisplayMode: this.actualAdaptivityProps.isLargeDisplayMode\r\n        }))\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                contentTemplate: getTemplate(props.contentTemplate)\r\n            }),\r\n            infoTextVisible: this.state.infoTextVisible,\r\n            isLargeDisplayMode: this.state.isLargeDisplayMode,\r\n            parentRef: this.parentRef,\r\n            pageSizesRef: this.pageSizesRef,\r\n            infoTextRef: this.infoTextRef,\r\n            pagesRef: this.pagesRef,\r\n            contentAttributes: this.contentAttributes,\r\n            parentWidth: this.parentWidth,\r\n            updateAdaptivityProps: this.updateAdaptivityProps,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nResizableContainer.defaultProps = ResizableContainerProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/base_pager_props.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport var BasePagerProps = {\r\n    gridCompatibility: true,\r\n    showInfo: false,\r\n    displayMode: \"adaptive\",\r\n    maxPagesCount: 10,\r\n    pageCount: 10,\r\n    visible: true,\r\n    hasKnownLastPage: true,\r\n    pagesNavigatorVisible: \"auto\",\r\n    showPageSizes: true,\r\n    get pageSizes() {\r\n        return [5, 10]\r\n    },\r\n    showNavigationButtons: false,\r\n    totalCount: 0\r\n};\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/pager_props.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    BasePagerProps\r\n} from \"./base_pager_props\";\r\nexport var PagerProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(BasePagerProps), Object.getOwnPropertyDescriptors({\r\n    defaultPageSize: 5,\r\n    pageSizeChange: () => {},\r\n    defaultPageIndex: 1,\r\n    pageIndexChange: () => {}\r\n})));\r\nexport var InternalPagerProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(BasePagerProps), Object.getOwnPropertyDescriptors({\r\n    pageSize: 5,\r\n    pageIndex: 1\r\n})));\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/info.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"infoText\", \"pageCount\", \"pageIndex\", \"rootElementRef\", \"totalCount\"];\r\nimport {\r\n    createVNode\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    format\r\n} from \"../../../core/utils/string\";\r\nimport messageLocalization from \"../../../localization/message\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"./common/pager_props\";\r\nexport var PAGER_INFO_CLASS = \"dx-info\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: {\r\n            rootElementRef: rootElementRef\r\n        },\r\n        text: text\r\n    } = _ref;\r\n    return createVNode(1, \"div\", PAGER_INFO_CLASS, text, 0, null, null, rootElementRef)\r\n};\r\nexport var InfoTextProps = {};\r\nvar InfoTextPropsType = {\r\n    get pageIndex() {\r\n        return InternalPagerProps.pageIndex\r\n    },\r\n    get pageCount() {\r\n        return InternalPagerProps.pageCount\r\n    },\r\n    get totalCount() {\r\n        return InternalPagerProps.totalCount\r\n    }\r\n};\r\nexport class InfoText extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    get infoText() {\r\n        var _this$props$infoText;\r\n        return (null !== (_this$props$infoText = this.props.infoText) && void 0 !== _this$props$infoText ? _this$props$infoText : \"\") || messageLocalization.getFormatter(\"dxPager-infoText\")()\r\n    }\r\n    get text() {\r\n        var {\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            totalCount: totalCount\r\n        } = this.props;\r\n        return format(this.infoText, (pageIndex + 1).toString(), pageCount.toString(), totalCount.toString())\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            infoText: this.infoText,\r\n            text: this.text,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nInfoText.defaultProps = InfoTextPropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/keyboard_action_context.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    createContext\r\n} from \"@devextreme/runtime/inferno\";\r\nexport var KeyboardActionContext = createContext(void 0);\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/light_button.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"children\", \"className\", \"label\", \"onClick\"];\r\nimport {\r\n    createVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    subscribeToClickEvent\r\n} from \"../../../utils/subscribe_to_event\";\r\nimport {\r\n    KeyboardActionContext\r\n} from \"./keyboard_action_context\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: {\r\n            children: children,\r\n            className: className,\r\n            label: label\r\n        },\r\n        widgetRef: widgetRef\r\n    } = _ref;\r\n    return createVNode(1, \"div\", className, children, 0, {\r\n        tabIndex: 0,\r\n        role: \"button\",\r\n        \"aria-label\": label\r\n    }, null, widgetRef)\r\n};\r\nexport var LightButtonProps = {\r\n    className: \"\",\r\n    label: \"\"\r\n};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class LightButton extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.widgetRef = infernoCreateRef();\r\n        this.keyboardEffect = this.keyboardEffect.bind(this);\r\n        this.subscribeToClick = this.subscribeToClick.bind(this)\r\n    }\r\n    get keyboardContext() {\r\n        if (\"KeyboardActionContext\" in this.context) {\r\n            return this.context.KeyboardActionContext\r\n        }\r\n        return KeyboardActionContext\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.keyboardEffect, [this.keyboardContext, this.props.onClick]), new InfernoEffect(this.subscribeToClick, [this.props.onClick])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$, _this$_effects$2;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.keyboardContext, this.props.onClick]);\r\n        null === (_this$_effects$2 = this._effects[1]) || void 0 === _this$_effects$2 ? void 0 : _this$_effects$2.update([this.props.onClick])\r\n    }\r\n    keyboardEffect() {\r\n        return this.keyboardContext.registerKeyboardAction(this.widgetRef.current, this.props.onClick)\r\n    }\r\n    subscribeToClick() {\r\n        return subscribeToClickEvent(this.widgetRef.current, this.props.onClick)\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            widgetRef: this.widgetRef,\r\n            keyboardContext: this.keyboardContext,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nLightButton.defaultProps = LightButtonProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/consts.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport var PAGER_CLASS = \"dx-pager\";\r\nexport var LIGHT_MODE_CLASS = \"dx-light-mode\";\r\nexport var PAGER_PAGES_CLASS = \"dx-pages\";\r\nexport var PAGER_PAGE_INDEXES_CLASS = \"dx-page-indexes\";\r\nexport var PAGER_PAGE_CLASS = \"dx-page\";\r\nexport var PAGER_SELECTION_CLASS = \"dx-selection\";\r\nexport var PAGER_PAGE_SIZE_CLASS = \"dx-page-size\";\r\nexport var PAGER_PAGE_SIZES_CLASS = \"dx-page-sizes\";\r\nexport var PAGER_SELECTED_PAGE_SIZE_CLASS = \"\".concat(PAGER_PAGE_SIZE_CLASS, \" \").concat(PAGER_SELECTION_CLASS);\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/page.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"className\", \"index\", \"onClick\", \"selected\"];\r\nimport {\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    LightButton\r\n} from \"../common/light_button\";\r\nimport {\r\n    PAGER_PAGE_CLASS,\r\n    PAGER_SELECTION_CLASS\r\n} from \"../common/consts\";\r\nimport {\r\n    combineClasses\r\n} from \"../../../utils/combine_classes\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        className: className,\r\n        label: label,\r\n        props: {\r\n            onClick: onClick\r\n        },\r\n        value: value\r\n    } = _ref;\r\n    return createComponentVNode(2, LightButton, {\r\n        className: className,\r\n        label: label,\r\n        onClick: onClick,\r\n        children: value\r\n    })\r\n};\r\nexport var PageProps = {\r\n    index: 0,\r\n    selected: false,\r\n    className: PAGER_PAGE_CLASS\r\n};\r\nexport class Page extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    get label() {\r\n        return \"Page \".concat(this.value)\r\n    }\r\n    get value() {\r\n        return this.props.index + 1\r\n    }\r\n    get className() {\r\n        var {\r\n            selected: selected\r\n        } = this.props;\r\n        return combineClasses({\r\n            [\"\".concat(this.props.className)]: !!this.props.className,\r\n            [PAGER_SELECTION_CLASS]: !!selected\r\n        })\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            label: this.label,\r\n            value: this.value,\r\n            className: this.className,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPage.defaultProps = PageProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/large.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"pageIndexes\"],\r\n    _excluded2 = [\"maxPagesCount\", \"pageCount\", \"pageIndex\", \"pageIndexChange\"];\r\nimport {\r\n    createVNode,\r\n    createFragment,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    Page\r\n} from \"./page\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nimport {\r\n    ConfigContext\r\n} from \"../../../common/config_context\";\r\nvar PAGER_PAGE_SEPARATOR_CLASS = \"dx-separator\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        pages: pages\r\n    } = _ref;\r\n    var PagesMarkup = pages.map(_ref2 => {\r\n        var {\r\n            key: key,\r\n            pageProps: pageProps\r\n        } = _ref2;\r\n        return pageProps ? createComponentVNode(2, Page, {\r\n            index: pageProps.index,\r\n            selected: pageProps.selected,\r\n            onClick: pageProps.onClick\r\n        }, key) : createVNode(1, \"div\", PAGER_PAGE_SEPARATOR_CLASS, \". . .\", 16, null, key)\r\n    });\r\n    return createFragment(PagesMarkup, 0)\r\n};\r\nvar PAGES_LIMITER = 4;\r\n\r\nfunction getDelimiterType(startIndex, slidingWindowSize, pageCount) {\r\n    if (1 === startIndex) {\r\n        return \"high\"\r\n    }\r\n    if (startIndex + slidingWindowSize === pageCount - 1) {\r\n        return \"low\"\r\n    }\r\n    return \"both\"\r\n}\r\n\r\nfunction createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter) {\r\n    var pageIndexes = [];\r\n    var indexesForReuse = [];\r\n    switch (delimiter) {\r\n        case \"none\":\r\n            pageIndexes = [...slidingWindowIndexes];\r\n            break;\r\n        case \"both\":\r\n            pageIndexes = [0, \"low\", ...slidingWindowIndexes, \"high\", pageCount - 1];\r\n            indexesForReuse = slidingWindowIndexes.slice(1, -1);\r\n            break;\r\n        case \"high\":\r\n            pageIndexes = [0, ...slidingWindowIndexes, \"high\", pageCount - 1];\r\n            indexesForReuse = slidingWindowIndexes.slice(0, -1);\r\n            break;\r\n        case \"low\":\r\n            pageIndexes = [0, \"low\", ...slidingWindowIndexes, pageCount - 1];\r\n            indexesForReuse = slidingWindowIndexes.slice(1)\r\n    }\r\n    return {\r\n        slidingWindowIndexes: slidingWindowIndexes,\r\n        indexesForReuse: indexesForReuse,\r\n        pageIndexes: pageIndexes\r\n    }\r\n}\r\n\r\nfunction createPageIndexes(startIndex, slidingWindowSize, pageCount, delimiter) {\r\n    var slidingWindowIndexes = [];\r\n    for (var i = 0; i < slidingWindowSize; i += 1) {\r\n        slidingWindowIndexes.push(i + startIndex)\r\n    }\r\n    return createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter)\r\n}\r\nvar PagesLargePropsType = {\r\n    get pageIndex() {\r\n        return InternalPagerProps.pageIndex\r\n    },\r\n    get maxPagesCount() {\r\n        return InternalPagerProps.maxPagesCount\r\n    },\r\n    get pageCount() {\r\n        return InternalPagerProps.pageCount\r\n    }\r\n};\r\nexport class PagesLarge extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.canReuseSlidingWindow = this.canReuseSlidingWindow.bind(this);\r\n        this.generatePageIndexes = this.generatePageIndexes.bind(this);\r\n        this.isSlidingWindowMode = this.isSlidingWindowMode.bind(this);\r\n        this.onPageClick = this.onPageClick.bind(this)\r\n    }\r\n    get config() {\r\n        if (\"ConfigContext\" in this.context) {\r\n            return this.context.ConfigContext\r\n        }\r\n        return ConfigContext\r\n    }\r\n    get slidingWindowState() {\r\n        var slidingWindowState = this.slidingWindowStateHolder;\r\n        if (!slidingWindowState) {\r\n            return {\r\n                indexesForReuse: [],\r\n                slidingWindowIndexes: []\r\n            }\r\n        }\r\n        return slidingWindowState\r\n    }\r\n    canReuseSlidingWindow(currentPageCount, pageIndex) {\r\n        var {\r\n            indexesForReuse: indexesForReuse\r\n        } = this.slidingWindowState;\r\n        var currentPageNotExistInIndexes = !indexesForReuse.includes(currentPageCount);\r\n        var pageIndexExistInIndexes = indexesForReuse.includes(pageIndex);\r\n        return currentPageNotExistInIndexes && pageIndexExistInIndexes\r\n    }\r\n    generatePageIndexes() {\r\n        var {\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex\r\n        } = this.props;\r\n        var startIndex = 0;\r\n        var {\r\n            slidingWindowIndexes: slidingWindowIndexes\r\n        } = this.slidingWindowState;\r\n        if (pageIndex === slidingWindowIndexes[0]) {\r\n            startIndex = pageIndex - 1\r\n        } else if (pageIndex === slidingWindowIndexes[slidingWindowIndexes.length - 1]) {\r\n            startIndex = pageIndex + 2 - PAGES_LIMITER\r\n        } else if (pageIndex < PAGES_LIMITER) {\r\n            startIndex = 1\r\n        } else if (pageIndex >= pageCount - PAGES_LIMITER) {\r\n            startIndex = pageCount - PAGES_LIMITER - 1\r\n        } else {\r\n            startIndex = pageIndex - 1\r\n        }\r\n        var slidingWindowSize = PAGES_LIMITER;\r\n        var delimiter = getDelimiterType(startIndex, slidingWindowSize, pageCount);\r\n        var _createPageIndexes = createPageIndexes(startIndex, slidingWindowSize, pageCount, delimiter),\r\n            {\r\n                pageIndexes: pageIndexes\r\n            } = _createPageIndexes,\r\n            slidingWindowState = _objectWithoutPropertiesLoose(_createPageIndexes, _excluded);\r\n        this.slidingWindowStateHolder = slidingWindowState;\r\n        return pageIndexes\r\n    }\r\n    isSlidingWindowMode() {\r\n        var {\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount\r\n        } = this.props;\r\n        return pageCount <= PAGES_LIMITER || pageCount <= maxPagesCount\r\n    }\r\n    onPageClick(pageIndex) {\r\n        this.props.pageIndexChange(pageIndex)\r\n    }\r\n    get pageIndexes() {\r\n        var {\r\n            pageCount: pageCount\r\n        } = this.props;\r\n        if (this.isSlidingWindowMode()) {\r\n            return createPageIndexes(0, pageCount, pageCount, \"none\").pageIndexes\r\n        }\r\n        if (this.canReuseSlidingWindow(pageCount, this.props.pageIndex)) {\r\n            var {\r\n                slidingWindowIndexes: slidingWindowIndexes\r\n            } = this.slidingWindowState;\r\n            var delimiter = getDelimiterType(slidingWindowIndexes[0], PAGES_LIMITER, pageCount);\r\n            return createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter).pageIndexes\r\n        }\r\n        return this.generatePageIndexes()\r\n    }\r\n    get pages() {\r\n        var _this$config;\r\n        var {\r\n            pageIndex: pageIndex\r\n        } = this.props;\r\n        var createPage = index => {\r\n            var pagerProps = \"low\" === index || \"high\" === index ? null : {\r\n                index: index,\r\n                onClick: () => this.onPageClick(index),\r\n                selected: pageIndex === index\r\n            };\r\n            return {\r\n                key: index.toString(),\r\n                pageProps: pagerProps\r\n            }\r\n        };\r\n        var rtlPageIndexes = null !== (_this$config = this.config) && void 0 !== _this$config && _this$config.rtlEnabled ? [...this.pageIndexes].reverse() : this.pageIndexes;\r\n        return rtlPageIndexes.map(index => createPage(index))\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded2);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            config: this.config,\r\n            pageIndexes: this.pageIndexes,\r\n            pages: this.pages,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPagesLarge.defaultProps = PagesLargePropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/editors/number_box.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"accessKey\", \"activeStateEnabled\", \"className\", \"defaultValue\", \"disabled\", \"focusStateEnabled\", \"height\", \"hint\", \"hoverStateEnabled\", \"invalidValueMessage\", \"max\", \"min\", \"mode\", \"onClick\", \"onKeyDown\", \"rtlEnabled\", \"showSpinButtons\", \"step\", \"tabIndex\", \"useLargeSpinButtons\", \"value\", \"valueChange\", \"visible\", \"width\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport LegacyNumberBox from \"../../../ui/number_box\";\r\nimport {\r\n    DomComponentWrapper\r\n} from \"../common/dom_component_wrapper\";\r\nimport {\r\n    BaseWidgetProps\r\n} from \"../common/base_props\";\r\nvar DEFAULT_VALUE = 0;\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: props,\r\n        restAttributes: restAttributes\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, DomComponentWrapper, _extends({\r\n        componentType: LegacyNumberBox,\r\n        componentProps: props,\r\n        templateNames: []\r\n    }, restAttributes)))\r\n};\r\nexport var NumberBoxProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(BaseWidgetProps), Object.getOwnPropertyDescriptors({\r\n    focusStateEnabled: true,\r\n    hoverStateEnabled: true,\r\n    defaultValue: DEFAULT_VALUE,\r\n    isReactComponentWrapper: true\r\n})));\r\nexport class NumberBox extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: void 0 !== this.props.value ? this.props.value : this.props.defaultValue\r\n        }\r\n    }\r\n    get restAttributes() {\r\n        var _this$props$value = _extends({}, this.props, {\r\n                value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n            }),\r\n            restProps = _objectWithoutPropertiesLoose(_this$props$value, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n            }),\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nNumberBox.defaultProps = NumberBoxProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/utils/calculate_values_fitted_width.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport var oneDigitWidth = 10;\r\nexport function calculateValuesFittedWidth(minWidth, values) {\r\n    return minWidth + oneDigitWidth * Math.max(...values).toString().length\r\n}\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/small.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pagesCountText\"];\r\nimport {\r\n    createVNode,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    Page\r\n} from \"./page\";\r\nimport {\r\n    PAGER_INFO_CLASS\r\n} from \"../info\";\r\nimport {\r\n    NumberBox\r\n} from \"../../editors/number_box\";\r\nimport messageLocalization from \"../../../../localization/message\";\r\nimport {\r\n    calculateValuesFittedWidth\r\n} from \"../utils/calculate_values_fitted_width\";\r\nimport {\r\n    getElementMinWidth\r\n} from \"../utils/get_element_width\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nvar PAGER_INFO_TEXT_CLASS = \"\".concat(PAGER_INFO_CLASS, \"  dx-info-text\");\r\nvar PAGER_PAGE_INDEX_CLASS = \"dx-page-index\";\r\nvar LIGHT_PAGES_CLASS = \"dx-light-pages\";\r\nvar PAGER_PAGES_COUNT_CLASS = \"dx-pages-count\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        pageIndexRef: pageIndexRef,\r\n        pagesCountText: pagesCountText,\r\n        props: {\r\n            pageCount: pageCount\r\n        },\r\n        selectLastPageIndex: selectLastPageIndex,\r\n        value: value,\r\n        valueChange: valueChange,\r\n        width: width\r\n    } = _ref;\r\n    return createVNode(1, \"div\", LIGHT_PAGES_CLASS, [createComponentVNode(2, NumberBox, {\r\n        className: PAGER_PAGE_INDEX_CLASS,\r\n        min: 1,\r\n        max: pageCount,\r\n        width: width,\r\n        value: value,\r\n        valueChange: valueChange\r\n    }), createVNode(1, \"span\", PAGER_INFO_TEXT_CLASS, pagesCountText, 0), createComponentVNode(2, Page, {\r\n        className: PAGER_PAGES_COUNT_CLASS,\r\n        selected: false,\r\n        index: pageCount - 1,\r\n        onClick: selectLastPageIndex\r\n    })], 4, null, null, pageIndexRef)\r\n};\r\nvar PagerSmallProps = {\r\n    get pageIndex() {\r\n        return InternalPagerProps.pageIndex\r\n    },\r\n    get pageCount() {\r\n        return InternalPagerProps.pageCount\r\n    }\r\n};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class PagesSmall extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.pageIndexRef = infernoCreateRef();\r\n        this.state = {\r\n            minWidth: 10\r\n        };\r\n        this.updateWidth = this.updateWidth.bind(this);\r\n        this.selectLastPageIndex = this.selectLastPageIndex.bind(this);\r\n        this.valueChange = this.valueChange.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.updateWidth, [this.state.minWidth])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.state.minWidth])\r\n    }\r\n    updateWidth() {\r\n        var _this$pageIndexRef$cu;\r\n        var el = null === (_this$pageIndexRef$cu = this.pageIndexRef.current) || void 0 === _this$pageIndexRef$cu ? void 0 : _this$pageIndexRef$cu.querySelector(\".\".concat(PAGER_PAGE_INDEX_CLASS));\r\n        this.setState(__state_argument => ({\r\n            minWidth: el && getElementMinWidth(el) || __state_argument.minWidth\r\n        }))\r\n    }\r\n    get value() {\r\n        return this.props.pageIndex + 1\r\n    }\r\n    get width() {\r\n        var {\r\n            pageCount: pageCount\r\n        } = this.props;\r\n        return calculateValuesFittedWidth(this.state.minWidth, [pageCount])\r\n    }\r\n    get pagesCountText() {\r\n        var _this$props$pagesCoun;\r\n        return (null !== (_this$props$pagesCoun = this.props.pagesCountText) && void 0 !== _this$props$pagesCoun ? _this$props$pagesCoun : \"\") || messageLocalization.getFormatter(\"dxPager-pagesCountText\")()\r\n    }\r\n    selectLastPageIndex() {\r\n        this.props.pageIndexChange(this.props.pageCount - 1)\r\n    }\r\n    valueChange(value) {\r\n        this.props.pageIndexChange(value - 1)\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            pageIndexRef: this.pageIndexRef,\r\n            value: this.value,\r\n            width: this.width,\r\n            pagesCountText: this.pagesCountText,\r\n            selectLastPageIndex: this.selectLastPageIndex,\r\n            valueChange: this.valueChange,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPagesSmall.defaultProps = PagerSmallProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/page_index_selector.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"hasKnownLastPage\", \"isLargeDisplayMode\", \"maxPagesCount\", \"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pagesCountText\", \"showNavigationButtons\", \"totalCount\"];\r\nimport {\r\n    createFragment,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    LightButton\r\n} from \"../common/light_button\";\r\nimport {\r\n    PagesLarge\r\n} from \"./large\";\r\nimport {\r\n    PagesSmall\r\n} from \"./small\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nimport {\r\n    ConfigContext\r\n} from \"../../../common/config_context\";\r\nvar PAGER_NAVIGATE_BUTTON = \"dx-navigate-button\";\r\nvar PAGER_PREV_BUTTON_CLASS = \"dx-prev-button\";\r\nvar PAGER_NEXT_BUTTON_CLASS = \"dx-next-button\";\r\nexport var PAGER_BUTTON_DISABLE_CLASS = \"dx-button-disable\";\r\nvar nextButtonClassName = \"\".concat(PAGER_NAVIGATE_BUTTON, \" \").concat(PAGER_NEXT_BUTTON_CLASS);\r\nvar prevButtonClassName = \"\".concat(PAGER_NAVIGATE_BUTTON, \" \").concat(PAGER_PREV_BUTTON_CLASS);\r\nvar nextButtonDisabledClassName = \"\".concat(PAGER_BUTTON_DISABLE_CLASS, \" \").concat(PAGER_NAVIGATE_BUTTON, \" \").concat(PAGER_NEXT_BUTTON_CLASS);\r\nvar prevButtonDisabledClassName = \"\".concat(PAGER_BUTTON_DISABLE_CLASS, \" \").concat(PAGER_NAVIGATE_BUTTON, \" \").concat(PAGER_PREV_BUTTON_CLASS);\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        navigateToNextPage: navigateToNextPage,\r\n        navigateToPrevPage: navigateToPrevPage,\r\n        nextClassName: nextClassName,\r\n        pageIndexChange: pageIndexChange,\r\n        prevClassName: prevClassName,\r\n        props: {\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pagesCountText: pagesCountText\r\n        },\r\n        renderNextButton: renderNextButton,\r\n        renderPrevButton: renderPrevButton\r\n    } = _ref;\r\n    return createFragment([renderPrevButton && createComponentVNode(2, LightButton, {\r\n        className: prevClassName,\r\n        label: \"Previous page\",\r\n        onClick: navigateToPrevPage\r\n    }), isLargeDisplayMode && createComponentVNode(2, PagesLarge, {\r\n        maxPagesCount: maxPagesCount,\r\n        pageCount: pageCount,\r\n        pageIndex: pageIndex,\r\n        pageIndexChange: pageIndexChange\r\n    }), !isLargeDisplayMode && createComponentVNode(2, PagesSmall, {\r\n        pageCount: pageCount,\r\n        pageIndex: pageIndex,\r\n        pageIndexChange: pageIndexChange,\r\n        pagesCountText: pagesCountText\r\n    }), renderNextButton && createComponentVNode(2, LightButton, {\r\n        className: nextClassName,\r\n        label: \"Next page\",\r\n        onClick: navigateToNextPage\r\n    })], 0)\r\n};\r\n\r\nfunction getIncrement(direction) {\r\n    return \"next\" === direction ? 1 : -1\r\n}\r\nexport var PageIndexSelectorProps = {\r\n    isLargeDisplayMode: true\r\n};\r\nvar PageIndexSelectorPropsType = {\r\n    get pageIndex() {\r\n        return InternalPagerProps.pageIndex\r\n    },\r\n    get maxPagesCount() {\r\n        return InternalPagerProps.maxPagesCount\r\n    },\r\n    get pageCount() {\r\n        return InternalPagerProps.pageCount\r\n    },\r\n    get hasKnownLastPage() {\r\n        return InternalPagerProps.hasKnownLastPage\r\n    },\r\n    get showNavigationButtons() {\r\n        return InternalPagerProps.showNavigationButtons\r\n    },\r\n    get totalCount() {\r\n        return InternalPagerProps.totalCount\r\n    },\r\n    get isLargeDisplayMode() {\r\n        return PageIndexSelectorProps.isLargeDisplayMode\r\n    }\r\n};\r\nexport class PageIndexSelector extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.pageIndexChange = this.pageIndexChange.bind(this);\r\n        this.navigateToNextPage = this.navigateToNextPage.bind(this);\r\n        this.navigateToPrevPage = this.navigateToPrevPage.bind(this);\r\n        this.getNextDirection = this.getNextDirection.bind(this);\r\n        this.getPrevDirection = this.getPrevDirection.bind(this);\r\n        this.canNavigateToPage = this.canNavigateToPage.bind(this);\r\n        this.getNextPageIndex = this.getNextPageIndex.bind(this);\r\n        this.canNavigateTo = this.canNavigateTo.bind(this);\r\n        this.navigateToPage = this.navigateToPage.bind(this)\r\n    }\r\n    get config() {\r\n        if (\"ConfigContext\" in this.context) {\r\n            return this.context.ConfigContext\r\n        }\r\n        return ConfigContext\r\n    }\r\n    pageIndexChange(pageIndex) {\r\n        if (this.canNavigateToPage(pageIndex)) {\r\n            this.props.pageIndexChange(pageIndex)\r\n        }\r\n    }\r\n    navigateToNextPage() {\r\n        this.navigateToPage(this.getNextDirection())\r\n    }\r\n    navigateToPrevPage() {\r\n        this.navigateToPage(this.getPrevDirection())\r\n    }\r\n    getNextDirection() {\r\n        var _this$config;\r\n        return !(null !== (_this$config = this.config) && void 0 !== _this$config && _this$config.rtlEnabled) ? \"next\" : \"prev\"\r\n    }\r\n    getPrevDirection() {\r\n        var _this$config2;\r\n        return !(null !== (_this$config2 = this.config) && void 0 !== _this$config2 && _this$config2.rtlEnabled) ? \"prev\" : \"next\"\r\n    }\r\n    canNavigateToPage(pageIndex) {\r\n        if (!this.props.hasKnownLastPage) {\r\n            return pageIndex >= 0\r\n        }\r\n        return pageIndex >= 0 && pageIndex <= this.props.pageCount - 1\r\n    }\r\n    getNextPageIndex(direction) {\r\n        return this.props.pageIndex + getIncrement(direction)\r\n    }\r\n    canNavigateTo(direction) {\r\n        return this.canNavigateToPage(this.getNextPageIndex(direction))\r\n    }\r\n    navigateToPage(direction) {\r\n        this.pageIndexChange(this.getNextPageIndex(direction))\r\n    }\r\n    get renderPrevButton() {\r\n        var {\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            showNavigationButtons: showNavigationButtons\r\n        } = this.props;\r\n        return !isLargeDisplayMode || showNavigationButtons\r\n    }\r\n    get renderNextButton() {\r\n        return this.renderPrevButton || !this.props.hasKnownLastPage\r\n    }\r\n    get nextClassName() {\r\n        var direction = this.getNextDirection();\r\n        var canNavigate = this.canNavigateTo(direction);\r\n        return canNavigate ? nextButtonClassName : nextButtonDisabledClassName\r\n    }\r\n    get prevClassName() {\r\n        var direction = this.getPrevDirection();\r\n        var canNavigate = this.canNavigateTo(direction);\r\n        return canNavigate ? prevButtonClassName : prevButtonDisabledClassName\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            config: this.config,\r\n            pageIndexChange: this.pageIndexChange,\r\n            navigateToNextPage: this.navigateToNextPage,\r\n            navigateToPrevPage: this.navigateToPrevPage,\r\n            renderPrevButton: this.renderPrevButton,\r\n            renderNextButton: this.renderNextButton,\r\n            nextClassName: this.nextClassName,\r\n            prevClassName: this.prevClassName,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPageIndexSelector.defaultProps = PageIndexSelectorPropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/editors/drop_down_editors/select_box.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"accessKey\", \"activeStateEnabled\", \"className\", \"dataSource\", \"defaultValue\", \"disabled\", \"displayExpr\", \"focusStateEnabled\", \"height\", \"hint\", \"hoverStateEnabled\", \"onClick\", \"onKeyDown\", \"rtlEnabled\", \"tabIndex\", \"value\", \"valueChange\", \"valueExpr\", \"visible\", \"width\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport LegacySelectBox from \"../../../../ui/select_box\";\r\nimport {\r\n    DomComponentWrapper\r\n} from \"../../common/dom_component_wrapper\";\r\nimport {\r\n    BaseWidgetProps\r\n} from \"../../common/base_props\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: props,\r\n        restAttributes: restAttributes\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, DomComponentWrapper, _extends({\r\n        componentType: LegacySelectBox,\r\n        componentProps: props,\r\n        templateNames: [\"dropDownButtonTemplate\", \"groupTemplate\", \"itemTemplate\"]\r\n    }, restAttributes)))\r\n};\r\nexport var SelectBoxProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(BaseWidgetProps), Object.getOwnPropertyDescriptors({\r\n    focusStateEnabled: true,\r\n    hoverStateEnabled: true,\r\n    defaultValue: null,\r\n    isReactComponentWrapper: true\r\n})));\r\nexport class SelectBox extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: void 0 !== this.props.value ? this.props.value : this.props.defaultValue\r\n        }\r\n    }\r\n    get restAttributes() {\r\n        var _this$props$value = _extends({}, this.props, {\r\n                value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n            }),\r\n            restProps = _objectWithoutPropertiesLoose(_this$props$value, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n            }),\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nSelectBox.defaultProps = SelectBoxProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/page_size/small.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"pageSize\", \"pageSizeChange\", \"pageSizes\", \"parentRef\"];\r\nimport {\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    SelectBox\r\n} from \"../../editors/drop_down_editors/select_box\";\r\nimport {\r\n    calculateValuesFittedWidth\r\n} from \"../utils/calculate_values_fitted_width\";\r\nimport {\r\n    getElementMinWidth\r\n} from \"../utils/get_element_width\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: {\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes\r\n        },\r\n        width: width\r\n    } = _ref;\r\n    return createComponentVNode(2, SelectBox, {\r\n        displayExpr: \"text\",\r\n        valueExpr: \"value\",\r\n        dataSource: pageSizes,\r\n        value: pageSize,\r\n        valueChange: pageSizeChange,\r\n        width: width\r\n    })\r\n};\r\nexport var PageSizeSmallProps = {};\r\nvar PageSizeSmallPropsType = {\r\n    get pageSize() {\r\n        return InternalPagerProps.pageSize\r\n    }\r\n};\r\nexport class PageSizeSmall extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            minWidth: 10\r\n        };\r\n        this.updateWidth = this.updateWidth.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.updateWidth, [this.props, this.state.minWidth, this.props.pageSize, this.props.pageSizeChange, this.props.pageSizes])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props, this.state.minWidth, this.props.pageSize, this.props.pageSizeChange, this.props.pageSizes])\r\n    }\r\n    updateWidth() {\r\n        this.setState(__state_argument => ({\r\n            minWidth: getElementMinWidth(this.props.parentRef.current) || __state_argument.minWidth\r\n        }))\r\n    }\r\n    get width() {\r\n        return calculateValuesFittedWidth(this.state.minWidth, this.props.pageSizes.map(p => p.value))\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            width: this.width,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPageSizeSmall.defaultProps = PageSizeSmallPropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/page_size/large.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"pageSize\", \"pageSizeChange\", \"pageSizes\"];\r\nimport {\r\n    createFragment,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    LightButton\r\n} from \"../common/light_button\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nimport {\r\n    PAGER_SELECTED_PAGE_SIZE_CLASS,\r\n    PAGER_PAGE_SIZE_CLASS\r\n} from \"../common/consts\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        pageSizesText: pageSizesText\r\n    } = _ref;\r\n    return createFragment(pageSizesText.map(_ref2 => {\r\n        var {\r\n            className: className,\r\n            click: click,\r\n            label: label,\r\n            text: text\r\n        } = _ref2;\r\n        return createComponentVNode(2, LightButton, {\r\n            className: className,\r\n            label: label,\r\n            onClick: click,\r\n            children: text\r\n        }, text)\r\n    }), 0)\r\n};\r\nexport var PageSizeLargeProps = {};\r\nvar PageSizeLargePropsType = {\r\n    get pageSize() {\r\n        return InternalPagerProps.pageSize\r\n    }\r\n};\r\nexport class PageSizeLarge extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.__getterCache = {};\r\n        this.onPageSizeChange = this.onPageSizeChange.bind(this)\r\n    }\r\n    get pageSizesText() {\r\n        if (void 0 !== this.__getterCache.pageSizesText) {\r\n            return this.__getterCache.pageSizesText\r\n        }\r\n        return this.__getterCache.pageSizesText = (() => {\r\n            var {\r\n                pageSize: pageSize,\r\n                pageSizes: pageSizes\r\n            } = this.props;\r\n            return pageSizes.map(_ref3 => {\r\n                var {\r\n                    text: text,\r\n                    value: processedPageSize\r\n                } = _ref3;\r\n                var selected = processedPageSize === pageSize;\r\n                var className = selected ? PAGER_SELECTED_PAGE_SIZE_CLASS : PAGER_PAGE_SIZE_CLASS;\r\n                return {\r\n                    className: className,\r\n                    click: this.onPageSizeChange(processedPageSize),\r\n                    label: \"Display \".concat(processedPageSize, \" items on page\"),\r\n                    text: text\r\n                }\r\n            })\r\n        })()\r\n    }\r\n    onPageSizeChange(processedPageSize) {\r\n        return () => {\r\n            this.props.pageSizeChange(processedPageSize);\r\n            return this.props.pageSize\r\n        }\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        if (this.props.pageSize !== nextProps.pageSize || this.props.pageSizes !== nextProps.pageSizes || this.props.pageSizeChange !== nextProps.pageSizeChange) {\r\n            this.__getterCache.pageSizesText = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            pageSizesText: this.pageSizesText,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPageSizeLarge.defaultProps = PageSizeLargePropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/page_size/selector.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"isLargeDisplayMode\", \"pageSize\", \"pageSizeChange\", \"pageSizes\", \"rootElementRef\"];\r\nimport {\r\n    createVNode,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    PageSizeSmall\r\n} from \"./small\";\r\nimport {\r\n    PageSizeLarge\r\n} from \"./large\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nimport messageLocalization from \"../../../../localization/message\";\r\nimport {\r\n    PAGER_PAGE_SIZES_CLASS\r\n} from \"../common/consts\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        htmlRef: htmlRef,\r\n        normalizedPageSizes: normalizedPageSizes,\r\n        props: {\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange\r\n        }\r\n    } = _ref;\r\n    return createVNode(1, \"div\", PAGER_PAGE_SIZES_CLASS, [isLargeDisplayMode && createComponentVNode(2, PageSizeLarge, {\r\n        pageSizes: normalizedPageSizes,\r\n        pageSize: pageSize,\r\n        pageSizeChange: pageSizeChange\r\n    }), !isLargeDisplayMode && createComponentVNode(2, PageSizeSmall, {\r\n        parentRef: htmlRef,\r\n        pageSizes: normalizedPageSizes,\r\n        pageSize: pageSize,\r\n        pageSizeChange: pageSizeChange\r\n    })], 0, null, null, htmlRef)\r\n};\r\n\r\nfunction getAllText() {\r\n    return messageLocalization.getFormatter(\"dxPager-pageSizesAllText\")()\r\n}\r\nvar PageSizeSelectorProps = {\r\n    isLargeDisplayMode: true\r\n};\r\nvar PageSizeSelectorPropsType = {\r\n    get pageSize() {\r\n        return InternalPagerProps.pageSize\r\n    },\r\n    get pageSizes() {\r\n        return InternalPagerProps.pageSizes\r\n    },\r\n    get isLargeDisplayMode() {\r\n        return PageSizeSelectorProps.isLargeDisplayMode\r\n    }\r\n};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class PageSizeSelector extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.htmlRef = infernoCreateRef();\r\n        this.__getterCache = {};\r\n        this.setRootElementRef = this.setRootElementRef.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.setRootElementRef, [])]\r\n    }\r\n    setRootElementRef() {\r\n        var {\r\n            rootElementRef: rootElementRef\r\n        } = this.props;\r\n        if (rootElementRef) {\r\n            rootElementRef.current = this.htmlRef.current\r\n        }\r\n    }\r\n    get normalizedPageSizes() {\r\n        if (void 0 !== this.__getterCache.normalizedPageSizes) {\r\n            return this.__getterCache.normalizedPageSizes\r\n        }\r\n        return this.__getterCache.normalizedPageSizes = (() => {\r\n            var {\r\n                pageSizes: pageSizes\r\n            } = this.props;\r\n            return pageSizes.map(p => \"all\" === p || 0 === p ? {\r\n                text: getAllText(),\r\n                value: 0\r\n            } : {\r\n                text: String(p),\r\n                value: p\r\n            })\r\n        })()\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        super.componentWillUpdate();\r\n        if (this.props.pageSizes !== nextProps.pageSizes) {\r\n            this.__getterCache.normalizedPageSizes = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            htmlRef: this.htmlRef,\r\n            normalizedPageSizes: this.normalizedPageSizes,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPageSizeSelector.defaultProps = PageSizeSelectorPropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/content.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"className\", \"displayMode\", \"gridCompatibility\", \"hasKnownLastPage\", \"infoText\", \"infoTextRef\", \"infoTextVisible\", \"isLargeDisplayMode\", \"lightModeEnabled\", \"maxPagesCount\", \"onKeyDown\", \"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pageSize\", \"pageSizeChange\", \"pageSizes\", \"pageSizesRef\", \"pagesCountText\", \"pagesNavigatorVisible\", \"pagesRef\", \"rootElementRef\", \"rtlEnabled\", \"showInfo\", \"showNavigationButtons\", \"showPageSizes\", \"totalCount\", \"visible\"];\r\nimport {\r\n    createVNode,\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent,\r\n    normalizeStyles\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    InfoText\r\n} from \"./info\";\r\nimport {\r\n    PageIndexSelector\r\n} from \"./pages/page_index_selector\";\r\nimport {\r\n    PageSizeSelector\r\n} from \"./page_size/selector\";\r\nimport {\r\n    PAGER_PAGES_CLASS,\r\n    PAGER_PAGE_INDEXES_CLASS,\r\n    LIGHT_MODE_CLASS,\r\n    PAGER_CLASS\r\n} from \"./common/consts\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"./common/pager_props\";\r\nimport {\r\n    combineClasses\r\n} from \"../../utils/combine_classes\";\r\nimport {\r\n    Widget\r\n} from \"../common/widget\";\r\nimport {\r\n    registerKeyboardAction as _registerKeyboardAction\r\n} from \"../../../ui/shared/accessibility\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        classes: classes,\r\n        infoVisible: infoVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode,\r\n        pageIndexSelectorVisible: pageIndexSelectorVisible,\r\n        pagesContainerVisibility: pagesContainerVisibility,\r\n        pagesContainerVisible: pagesContainerVisible,\r\n        props: {\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            infoText: infoText,\r\n            infoTextRef: infoTextRef,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes,\r\n            pageSizesRef: pageSizesRef,\r\n            pagesCountText: pagesCountText,\r\n            pagesRef: pagesRef,\r\n            rtlEnabled: rtlEnabled,\r\n            showNavigationButtons: showNavigationButtons,\r\n            showPageSizes: showPageSizes,\r\n            totalCount: totalCount,\r\n            visible: visible\r\n        },\r\n        restAttributes: restAttributes,\r\n        widgetRootElementRef: widgetRootElementRef\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, Widget, _extends({\r\n        rootElementRef: widgetRootElementRef,\r\n        rtlEnabled: rtlEnabled,\r\n        classes: classes,\r\n        visible: visible\r\n    }, restAttributes, {\r\n        children: [showPageSizes && createComponentVNode(2, PageSizeSelector, {\r\n            rootElementRef: pageSizesRef,\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes\r\n        }), pagesContainerVisible && createVNode(1, \"div\", PAGER_PAGES_CLASS, [infoVisible && createComponentVNode(2, InfoText, {\r\n            rootElementRef: infoTextRef,\r\n            infoText: infoText,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            totalCount: totalCount\r\n        }), pageIndexSelectorVisible && createVNode(1, \"div\", PAGER_PAGE_INDEXES_CLASS, createComponentVNode(2, PageIndexSelector, {\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pagesCountText: pagesCountText,\r\n            showNavigationButtons: showNavigationButtons,\r\n            totalCount: totalCount\r\n        }), 2, null, null, pagesRef)], 0, {\r\n            style: normalizeStyles({\r\n                visibility: pagesContainerVisibility\r\n            })\r\n        })]\r\n    })))\r\n};\r\nexport var PagerContentProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(InternalPagerProps), Object.getOwnPropertyDescriptors({\r\n    infoTextVisible: true,\r\n    isLargeDisplayMode: true\r\n})));\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class PagerContent extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.widgetRootElementRef = infernoCreateRef();\r\n        this.__getterCache = {};\r\n        this.setRootElementRef = this.setRootElementRef.bind(this);\r\n        this.createFakeInstance = this.createFakeInstance.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.setRootElementRef, [])]\r\n    }\r\n    getChildContext() {\r\n        return _extends({}, this.context, {\r\n            KeyboardActionContext: this.keyboardAction\r\n        })\r\n    }\r\n    setRootElementRef() {\r\n        var {\r\n            rootElementRef: rootElementRef\r\n        } = this.props;\r\n        if (rootElementRef) {\r\n            rootElementRef.current = this.widgetRootElementRef.current\r\n        }\r\n    }\r\n    createFakeInstance() {\r\n        return {\r\n            option: () => false,\r\n            element: () => this.widgetRootElementRef.current,\r\n            _createActionByOption: () => e => {\r\n                var _this$props$onKeyDown, _this$props;\r\n                null === (_this$props$onKeyDown = (_this$props = this.props).onKeyDown) || void 0 === _this$props$onKeyDown ? void 0 : _this$props$onKeyDown.call(_this$props, e)\r\n            }\r\n        }\r\n    }\r\n    get keyboardAction() {\r\n        if (void 0 !== this.__getterCache.keyboardAction) {\r\n            return this.__getterCache.keyboardAction\r\n        }\r\n        return this.__getterCache.keyboardAction = (() => ({\r\n            registerKeyboardAction: (element, action) => {\r\n                var fakePagerInstance = this.createFakeInstance();\r\n                return _registerKeyboardAction(\"pager\", fakePagerInstance, element, void 0, action)\r\n            }\r\n        }))()\r\n    }\r\n    get infoVisible() {\r\n        var {\r\n            infoTextVisible: infoTextVisible,\r\n            showInfo: showInfo\r\n        } = this.props;\r\n        return showInfo && infoTextVisible && this.isLargeDisplayMode\r\n    }\r\n    get pageIndexSelectorVisible() {\r\n        return 0 !== this.props.pageSize\r\n    }\r\n    get normalizedDisplayMode() {\r\n        var {\r\n            displayMode: displayMode,\r\n            lightModeEnabled: lightModeEnabled\r\n        } = this.props;\r\n        if (\"adaptive\" === displayMode && void 0 !== lightModeEnabled) {\r\n            return lightModeEnabled ? \"compact\" : \"full\"\r\n        }\r\n        return displayMode\r\n    }\r\n    get pagesContainerVisible() {\r\n        return !!this.props.pagesNavigatorVisible && this.props.pageCount > 0\r\n    }\r\n    get pagesContainerVisibility() {\r\n        if (\"auto\" === this.props.pagesNavigatorVisible && 1 === this.props.pageCount && this.props.hasKnownLastPage) {\r\n            return \"hidden\"\r\n        }\r\n        return\r\n    }\r\n    get isLargeDisplayMode() {\r\n        var displayMode = this.normalizedDisplayMode;\r\n        var result = false;\r\n        if (\"adaptive\" === displayMode) {\r\n            result = this.props.isLargeDisplayMode\r\n        } else {\r\n            result = \"full\" === displayMode\r\n        }\r\n        return result\r\n    }\r\n    get classes() {\r\n        var classesMap = {\r\n            [\"\".concat(this.props.className)]: !!this.props.className,\r\n            [PAGER_CLASS]: true,\r\n            [LIGHT_MODE_CLASS]: !this.isLargeDisplayMode\r\n        };\r\n        return combineClasses(classesMap)\r\n    }\r\n    get restAttributes() {\r\n        var _this$props2 = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props2, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        super.componentWillUpdate();\r\n        if (this.props.onKeyDown !== nextProps.onKeyDown) {\r\n            this.__getterCache.keyboardAction = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            widgetRootElementRef: this.widgetRootElementRef,\r\n            keyboardAction: this.keyboardAction,\r\n            infoVisible: this.infoVisible,\r\n            pageIndexSelectorVisible: this.pageIndexSelectorVisible,\r\n            pagesContainerVisible: this.pagesContainerVisible,\r\n            pagesContainerVisibility: this.pagesContainerVisibility,\r\n            isLargeDisplayMode: this.isLargeDisplayMode,\r\n            classes: this.classes,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPagerContent.defaultProps = PagerContentProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"className\", \"defaultPageIndex\", \"defaultPageSize\", \"displayMode\", \"gridCompatibility\", \"hasKnownLastPage\", \"infoText\", \"lightModeEnabled\", \"maxPagesCount\", \"onKeyDown\", \"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pageSize\", \"pageSizeChange\", \"pageSizes\", \"pagesCountText\", \"pagesNavigatorVisible\", \"rtlEnabled\", \"showInfo\", \"showNavigationButtons\", \"showPageSizes\", \"totalCount\", \"visible\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    InfernoWrapperComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    ResizableContainer\r\n} from \"./resizable_container\";\r\nimport {\r\n    PagerProps\r\n} from \"./common/pager_props\";\r\nimport {\r\n    PagerContent\r\n} from \"./content\";\r\nimport {\r\n    combineClasses\r\n} from \"../../utils/combine_classes\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        pagerProps: pagerProps,\r\n        restAttributes: restAttributes\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, ResizableContainer, _extends({\r\n        contentTemplate: PagerContent,\r\n        pagerProps: pagerProps\r\n    }, restAttributes)))\r\n};\r\nimport {\r\n    createReRenderEffect\r\n} from \"@devextreme/runtime/inferno\";\r\nexport class Pager extends InfernoWrapperComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.__getterCache = {};\r\n        this.state = {\r\n            pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.props.defaultPageSize,\r\n            pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.props.defaultPageIndex\r\n        };\r\n        this.pageIndexChange = this.pageIndexChange.bind(this);\r\n        this.pageSizeChange = this.pageSizeChange.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [createReRenderEffect()]\r\n    }\r\n    pageIndexChange(newPageIndex) {\r\n        if (this.props.gridCompatibility) {\r\n            var __newValue;\r\n            this.setState(__state_argument => {\r\n                __newValue = newPageIndex + 1;\r\n                return {\r\n                    pageIndex: __newValue\r\n                }\r\n            });\r\n            this.props.pageIndexChange(__newValue)\r\n        } else {\r\n            var _newValue;\r\n            this.setState(__state_argument => {\r\n                _newValue = newPageIndex;\r\n                return {\r\n                    pageIndex: _newValue\r\n                }\r\n            });\r\n            this.props.pageIndexChange(_newValue)\r\n        }\r\n    }\r\n    get pageIndex() {\r\n        if (this.props.gridCompatibility) {\r\n            return (void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex) - 1\r\n        }\r\n        return void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex\r\n    }\r\n    pageSizeChange(newPageSize) {\r\n        var __newValue;\r\n        this.setState(__state_argument => {\r\n            __newValue = newPageSize;\r\n            return {\r\n                pageSize: __newValue\r\n            }\r\n        });\r\n        this.props.pageSizeChange(__newValue)\r\n    }\r\n    get className() {\r\n        if (this.props.gridCompatibility) {\r\n            return combineClasses({\r\n                \"dx-datagrid-pager\": true,\r\n                [\"\".concat(this.props.className)]: !!this.props.className\r\n            })\r\n        }\r\n        return this.props.className\r\n    }\r\n    get pagerProps() {\r\n        if (void 0 !== this.__getterCache.pagerProps) {\r\n            return this.__getterCache.pagerProps\r\n        }\r\n        return this.__getterCache.pagerProps = (() => _extends({}, _extends({}, this.props, {\r\n            pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.state.pageSize,\r\n            pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex\r\n        }), {\r\n            className: this.className,\r\n            pageIndex: this.pageIndex,\r\n            pageIndexChange: pageIndex => this.pageIndexChange(pageIndex),\r\n            pageSizeChange: pageSize => this.pageSizeChange(pageSize)\r\n        }))()\r\n    }\r\n    get restAttributes() {\r\n        var _this$props$pageSize$ = _extends({}, this.props, {\r\n                pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.state.pageSize,\r\n                pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex\r\n            }),\r\n            restProps = _objectWithoutPropertiesLoose(_this$props$pageSize$, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        super.componentWillUpdate();\r\n        if (this.props !== nextProps || this.props.gridCompatibility !== nextProps.gridCompatibility || this.props.className !== nextProps.className || this.state.pageIndex !== nextState.pageIndex || this.props.pageIndex !== nextProps.pageIndex || this.props.pageIndexChange !== nextProps.pageIndexChange || this.props.pageSizeChange !== nextProps.pageSizeChange) {\r\n            this.__getterCache.pagerProps = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.state.pageSize,\r\n                pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex\r\n            }),\r\n            pageIndexChange: this.pageIndexChange,\r\n            pageIndex: this.pageIndex,\r\n            pageSizeChange: this.pageSizeChange,\r\n            className: this.className,\r\n            pagerProps: this.pagerProps,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPager.defaultProps = PagerProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pager.j.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport {\r\n    GridPagerWrapper\r\n} from \"../../component_wrapper/grid_pager\";\r\nimport {\r\n    Pager as PagerComponent\r\n} from \"./pager\";\r\nexport default class Pager extends GridPagerWrapper {\r\n    getProps() {\r\n        var props = super.getProps();\r\n        props.onKeyDown = this._wrapKeyDownHandler(props.onKeyDown);\r\n        return props\r\n    }\r\n    get _propsInfo() {\r\n        return {\r\n            twoWay: [\r\n                [\"pageSize\", \"defaultPageSize\", \"pageSizeChange\"],\r\n                [\"pageIndex\", \"defaultPageIndex\", \"pageIndexChange\"]\r\n            ],\r\n            allowNull: [],\r\n            elements: [],\r\n            templates: [],\r\n            props: [\"defaultPageSize\", \"pageSizeChange\", \"defaultPageIndex\", \"pageIndexChange\", \"gridCompatibility\", \"className\", \"showInfo\", \"infoText\", \"lightModeEnabled\", \"displayMode\", \"maxPagesCount\", \"pageCount\", \"pagesCountText\", \"visible\", \"hasKnownLastPage\", \"pagesNavigatorVisible\", \"showPageSizes\", \"pageSizes\", \"rtlEnabled\", \"showNavigationButtons\", \"totalCount\", \"onKeyDown\", \"pageSize\", \"pageIndex\"]\r\n        }\r\n    }\r\n    get _viewComponent() {\r\n        return PagerComponent\r\n    }\r\n}\r\nregisterComponent(\"dxPager\", Pager);\r\n","/**\r\n * DevExtreme (esm/ui/pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Widget from \"../renovation/ui/pager/pager.j\";\r\nexport default Widget;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport Pager from \"../pager\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nvar PAGER_CLASS = \"pager\";\r\nvar MAX_PAGES_COUNT = 10;\r\nvar getPageIndex = function(dataController) {\r\n    return 1 + (parseInt(dataController.pageIndex()) || 0)\r\n};\r\nvar PagerView = modules.View.inherit({\r\n    init: function() {\r\n        var dataController = this.getController(\"data\");\r\n        dataController.changed.add(e => {\r\n            if (e && e.repaintChangesOnly) {\r\n                var pager = this._getPager();\r\n                if (pager) {\r\n                    pager.option({\r\n                        pageIndex: getPageIndex(dataController),\r\n                        pageSize: dataController.pageSize(),\r\n                        pageCount: dataController.pageCount(),\r\n                        totalCount: dataController.totalCount(),\r\n                        hasKnownLastPage: dataController.hasKnownLastPage()\r\n                    })\r\n                } else {\r\n                    this.render()\r\n                }\r\n            } else if (!e || \"update\" !== e.changeType && \"updateSelection\" !== e.changeType && \"updateFocusedRow\" !== e.changeType) {\r\n                this.render()\r\n            }\r\n        })\r\n    },\r\n    _getPager: function() {\r\n        var $element = this.element();\r\n        return $element && $element.data(\"dxPager\")\r\n    },\r\n    _renderCore: function() {\r\n        var $element = this.element().addClass(this.addWidgetPrefix(PAGER_CLASS));\r\n        var pagerOptions = this.option(\"pager\") || {};\r\n        var dataController = this.getController(\"data\");\r\n        var keyboardController = this.getController(\"keyboardNavigation\");\r\n        var options = {\r\n            maxPagesCount: MAX_PAGES_COUNT,\r\n            pageIndex: getPageIndex(dataController),\r\n            pageCount: dataController.pageCount(),\r\n            pageSize: dataController.pageSize(),\r\n            showPageSizes: pagerOptions.showPageSizeSelector,\r\n            showInfo: pagerOptions.showInfo,\r\n            displayMode: pagerOptions.displayMode,\r\n            pagesNavigatorVisible: pagerOptions.visible,\r\n            showNavigationButtons: pagerOptions.showNavigationButtons,\r\n            pageSizes: this.getPageSizes(),\r\n            totalCount: dataController.totalCount(),\r\n            hasKnownLastPage: dataController.hasKnownLastPage(),\r\n            pageIndexChanged: function(pageIndex) {\r\n                if (dataController.pageIndex() !== pageIndex - 1) {\r\n                    setTimeout((function() {\r\n                        dataController.pageIndex(pageIndex - 1)\r\n                    }))\r\n                }\r\n            },\r\n            pageSizeChanged: function(pageSize) {\r\n                setTimeout((function() {\r\n                    dataController.pageSize(pageSize)\r\n                }))\r\n            },\r\n            onKeyDown: e => keyboardController && keyboardController.executeAction(\"onKeyDown\", e),\r\n            useLegacyKeyboardNavigation: this.option(\"useLegacyKeyboardNavigation\"),\r\n            useKeyboard: this.option(\"keyboardNavigation.enabled\")\r\n        };\r\n        if (isDefined(pagerOptions.infoText)) {\r\n            options.infoText = pagerOptions.infoText\r\n        }\r\n        if (hasWindow()) {\r\n            this._createComponent($element, Pager, options)\r\n        } else {\r\n            $element.addClass(\"dx-pager\").html('<div class=\"dx-pages\"><div class=\"dx-page\"></div></div>')\r\n        }\r\n    },\r\n    getPageSizes: function() {\r\n        var dataController = this.getController(\"data\");\r\n        var pagerOptions = this.option(\"pager\");\r\n        var allowedPageSizes = pagerOptions && pagerOptions.allowedPageSizes;\r\n        var pageSize = dataController.pageSize();\r\n        if (!isDefined(this._pageSizes) || -1 === inArray(pageSize, this._pageSizes)) {\r\n            this._pageSizes = [];\r\n            if (pagerOptions) {\r\n                if (Array.isArray(allowedPageSizes)) {\r\n                    this._pageSizes = allowedPageSizes\r\n                } else if (allowedPageSizes && pageSize > 1) {\r\n                    this._pageSizes = [Math.floor(pageSize / 2), pageSize, 2 * pageSize]\r\n                }\r\n            }\r\n        }\r\n        return this._pageSizes\r\n    },\r\n    isVisible: function() {\r\n        var dataController = this.getController(\"data\");\r\n        var pagerOptions = this.option(\"pager\");\r\n        var pagerVisible = pagerOptions && pagerOptions.visible;\r\n        var scrolling = this.option(\"scrolling\");\r\n        if (\"auto\" === pagerVisible) {\r\n            if (scrolling && (\"virtual\" === scrolling.mode || \"infinite\" === scrolling.mode)) {\r\n                pagerVisible = false\r\n            } else {\r\n                pagerVisible = dataController.pageCount() > 1 || dataController.isLoaded() && !dataController.hasKnownLastPage()\r\n            }\r\n        }\r\n        return pagerVisible\r\n    },\r\n    getHeight: function() {\r\n        return this.getElementHeight()\r\n    },\r\n    optionChanged: function(args) {\r\n        var name = args.name;\r\n        var isPager = \"pager\" === name;\r\n        var isPaging = \"paging\" === name;\r\n        var isDataSource = \"dataSource\" === name;\r\n        var isScrolling = \"scrolling\" === name;\r\n        var dataController = this.getController(\"data\");\r\n        if (isPager || isPaging || isScrolling || isDataSource) {\r\n            args.handled = true;\r\n            if (dataController.skipProcessingPagingChange(args.fullName)) {\r\n                return\r\n            }\r\n            if (isPager || isPaging) {\r\n                this._pageSizes = null\r\n            }\r\n            if (!isDataSource) {\r\n                this._invalidate();\r\n                if (hasWindow() && isPager && this.component) {\r\n                    this.component.resize()\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\nexport var pagerModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            pager: {\r\n                visible: \"auto\",\r\n                showPageSizeSelector: false,\r\n                allowedPageSizes: \"auto\"\r\n            }\r\n        }\r\n    },\r\n    views: {\r\n        pagerView: PagerView\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    pagerModule\r\n} from \"../grid_core/ui.grid_core.pager\";\r\ngridCore.registerModule(\"pager\", pagerModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_resizing_reordering.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    setHeight as _setHeight,\r\n    getHeight,\r\n    setWidth,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    isDefined,\r\n    isString,\r\n    isObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    addNamespace,\r\n    eventData as getEventData,\r\n    isTouchEvent\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    start as dragEventStart,\r\n    move as dragEventMove,\r\n    end as dragEventEnd\r\n} from \"../../events/drag\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport fx from \"../../animation/fx\";\r\nimport swatchContainer from \"../widget/swatch_container\";\r\nvar COLUMNS_SEPARATOR_CLASS = \"columns-separator\";\r\nvar COLUMNS_SEPARATOR_TRANSPARENT = \"columns-separator-transparent\";\r\nvar DRAGGING_HEADER_CLASS = \"drag-header\";\r\nvar CELL_CONTENT_CLASS = \"text-content\";\r\nvar HEADERS_DRAG_ACTION_CLASS = \"drag-action\";\r\nvar TRACKER_CLASS = \"tracker\";\r\nvar HEADERS_DROP_HIGHLIGHT_CLASS = \"drop-highlight\";\r\nvar BLOCK_SEPARATOR_CLASS = \"dx-block-separator\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar WIDGET_CLASS = \"dx-widget\";\r\nvar DRAGGING_COMMAND_CELL_CLASS = \"dx-drag-command-cell\";\r\nvar MODULE_NAMESPACE = \"dxDataGridResizingReordering\";\r\nvar COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH = 10;\r\nvar DRAGGING_DELTA = 5;\r\nvar COLUMN_OPACITY = .5;\r\nvar allowResizing = function(that) {\r\n    return that.option(\"allowColumnResizing\") || that.getController(\"columns\").isColumnOptionUsed(\"allowResizing\")\r\n};\r\nvar allowReordering = function(that) {\r\n    return that.option(\"allowColumnReordering\") || that.getController(\"columns\").isColumnOptionUsed(\"allowReordering\")\r\n};\r\nvar TrackerView = modules.View.inherit({\r\n    _renderCore: function() {\r\n        this.callBase();\r\n        this.element().addClass(this.addWidgetPrefix(TRACKER_CLASS));\r\n        this.hide()\r\n    },\r\n    _unsubscribeFromCallback: function() {\r\n        if (this._positionChanged) {\r\n            this._tablePositionController.positionChanged.remove(this._positionChanged)\r\n        }\r\n    },\r\n    _subscribeToCallback: function() {\r\n        var that = this;\r\n        that._positionChanged = function(position) {\r\n            var $element = that.element();\r\n            if ($element && $element.hasClass(that.addWidgetPrefix(TRACKER_CLASS))) {\r\n                $element.css({\r\n                    top: position.top\r\n                });\r\n                _setHeight($element, position.height)\r\n            }\r\n        };\r\n        this._tablePositionController.positionChanged.add(that._positionChanged)\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            this._unsubscribeFromCallback();\r\n            if (args.value) {\r\n                this._subscribeToCallback();\r\n                this._invalidate()\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this._tablePositionController = this.getController(\"tablePosition\");\r\n        this._subscribeToCallback()\r\n    },\r\n    isVisible: function() {\r\n        return allowResizing(this)\r\n    },\r\n    show: function() {\r\n        this.element().show()\r\n    },\r\n    hide: function() {\r\n        this.element() && this.element().hide()\r\n    },\r\n    setHeight: function(value) {\r\n        _setHeight(this.element(), value)\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribeFromCallback();\r\n        this.callBase()\r\n    }\r\n});\r\nvar SeparatorView = modules.View.inherit({\r\n    _renderSeparator: function() {},\r\n    _renderCore: function(options) {\r\n        this.callBase(options);\r\n        this._isShown = true;\r\n        this._renderSeparator();\r\n        this.hide()\r\n    },\r\n    show: function() {\r\n        this._isShown = true\r\n    },\r\n    hide: function() {\r\n        this._isShown = false\r\n    },\r\n    height: function(value) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            if (isDefined(value)) {\r\n                _setHeight($element, value)\r\n            } else {\r\n                return getHeight($element)\r\n            }\r\n        }\r\n    },\r\n    width: function(value) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            if (isDefined(value)) {\r\n                setWidth($element, value)\r\n            } else {\r\n                return getWidth($element)\r\n            }\r\n        }\r\n    }\r\n});\r\nvar ColumnsSeparatorView = SeparatorView.inherit({\r\n    _renderSeparator: function() {\r\n        this.callBase();\r\n        var $element = this.element();\r\n        $element.addClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_CLASS))\r\n    },\r\n    _subscribeToCallback: function() {\r\n        var that = this;\r\n        var $element;\r\n        that._positionChanged = function(position) {\r\n            $element = that.element();\r\n            if ($element) {\r\n                $element.css({\r\n                    top: position.top\r\n                });\r\n                _setHeight($element, position.height)\r\n            }\r\n        };\r\n        that._tablePositionController.positionChanged.add(that._positionChanged)\r\n    },\r\n    _unsubscribeFromCallback: function() {\r\n        this._positionChanged && this._tablePositionController.positionChanged.remove(this._positionChanged)\r\n    },\r\n    _init: function() {\r\n        this._isTransparent = allowResizing(this);\r\n        if (this.isVisible()) {\r\n            this._subscribeToCallback()\r\n        }\r\n    },\r\n    isVisible: function() {\r\n        return this.option(\"showColumnHeaders\") && (allowReordering(this) || allowResizing(this))\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            if (args.value) {\r\n                this._init();\r\n                this._invalidate();\r\n                this.hide(true)\r\n            } else {\r\n                this._unsubscribeFromCallback();\r\n                this._isTransparent = allowResizing(this);\r\n                this.hide(true)\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this._tablePositionController = this.getController(\"tablePosition\");\r\n        this._init()\r\n    },\r\n    show: function() {\r\n        var $element = this.element();\r\n        if ($element && !this._isShown) {\r\n            if (this._isTransparent) {\r\n                $element.removeClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT))\r\n            } else {\r\n                $element.show()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    hide: function(force) {\r\n        var $element = this.element();\r\n        var columnsSeparatorTransparent = this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT);\r\n        if ($element && (this._isShown || force)) {\r\n            if (this._isTransparent) {\r\n                $element.addClass(columnsSeparatorTransparent);\r\n                $element.css(\"left\", \"\");\r\n                $element.show()\r\n            } else {\r\n                if ($element.hasClass(columnsSeparatorTransparent)) {\r\n                    $element.removeClass(columnsSeparatorTransparent)\r\n                }\r\n                $element.hide()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    moveByX: function(outerX) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            $element.css(\"left\", null === outerX ? 0 : outerX - this._parentElement().offset().left)\r\n        }\r\n    },\r\n    changeCursor: function(cursorName) {\r\n        cursorName = isDefined(cursorName) ? cursorName : \"\";\r\n        var $element = this.element();\r\n        if ($element) {\r\n            $element.css(\"cursor\", cursorName)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribeFromCallback();\r\n        this.callBase()\r\n    }\r\n});\r\nvar BlockSeparatorView = SeparatorView.inherit({\r\n    init: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        this.getController(\"data\").loadingChanged.add((function(isLoading) {\r\n            if (!isLoading) {\r\n                that.hide()\r\n            }\r\n        }))\r\n    },\r\n    _renderSeparator: function() {\r\n        this.callBase();\r\n        this.element().addClass(BLOCK_SEPARATOR_CLASS).html(\"&nbsp;\")\r\n    },\r\n    hide: function() {\r\n        var $parent = this._parentElement();\r\n        var $element = this.element();\r\n        if ($element && this._isShown) {\r\n            $element.css(\"display\", \"none\")\r\n        }\r\n        if ($parent && !$parent.children(\".\" + BLOCK_SEPARATOR_CLASS).length) {\r\n            $parent.prepend(this.element())\r\n        }\r\n        this.callBase()\r\n    },\r\n    isVisible: function() {\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        var columnChooserOptions = this.option(\"columnChooser\");\r\n        return groupPanelOptions && groupPanelOptions.visible || columnChooserOptions && columnChooserOptions.enabled\r\n    },\r\n    show: function(targetLocation) {\r\n        var $element = this.element();\r\n        var startAnimate = function(toOptions) {\r\n            fx.stop($element, true);\r\n            fx.animate($element, {\r\n                type: \"slide\",\r\n                from: {\r\n                    width: 0,\r\n                    display: toOptions.display\r\n                },\r\n                to: toOptions,\r\n                duration: 300,\r\n                easing: \"swing\"\r\n            })\r\n        };\r\n        if ($element && !this._isShown) {\r\n            switch (targetLocation) {\r\n                case \"group\":\r\n                    startAnimate({\r\n                        width: \"50px\",\r\n                        display: \"inline-block\"\r\n                    });\r\n                    break;\r\n                case \"columnChooser\":\r\n                    startAnimate({\r\n                        width: \"100%\",\r\n                        display: \"block\"\r\n                    });\r\n                    break;\r\n                default:\r\n                    $element.css(\"display\", \"\")\r\n            }\r\n        }\r\n        this.callBase()\r\n    }\r\n});\r\nvar DraggingHeaderView = modules.View.inherit({\r\n    _isDragging: false,\r\n    isDragging: function() {\r\n        return this._isDragging\r\n    },\r\n    _getDraggingPanelByPos: function(pos) {\r\n        var result;\r\n        each(this._dragOptions.draggingPanels, (function(index, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var boundingRect = draggingPanel.getBoundingRect();\r\n                if (boundingRect && (void 0 === boundingRect.bottom || pos.y < boundingRect.bottom) && (void 0 === boundingRect.top || pos.y > boundingRect.top) && (void 0 === boundingRect.left || pos.x > boundingRect.left) && (void 0 === boundingRect.right || pos.x < boundingRect.right)) {\r\n                    result = draggingPanel;\r\n                    return false\r\n                }\r\n            }\r\n        }));\r\n        return result\r\n    },\r\n    _renderCore: function() {\r\n        this.element().addClass(this.addWidgetPrefix(DRAGGING_HEADER_CLASS) + \" \" + this.addWidgetPrefix(CELL_CONTENT_CLASS) + \" \" + WIDGET_CLASS).hide()\r\n    },\r\n    _resetTargetColumnOptions: function() {\r\n        var params = this._dropOptions;\r\n        params.targetColumnIndex = -1;\r\n        delete params.targetColumnElement;\r\n        delete params.isLast;\r\n        delete params.posX;\r\n        delete params.posY\r\n    },\r\n    _getVisibleIndexObject: function(rowIndex, visibleIndex) {\r\n        if (isDefined(rowIndex)) {\r\n            return {\r\n                columnIndex: visibleIndex,\r\n                rowIndex: rowIndex\r\n            }\r\n        }\r\n        return visibleIndex\r\n    },\r\n    dispose: function() {\r\n        var element = this.element();\r\n        this._dragOptions = null;\r\n        element && element.parent().find(\".\" + this.addWidgetPrefix(DRAGGING_HEADER_CLASS)).remove()\r\n    },\r\n    isVisible: function() {\r\n        var columnsController = this.getController(\"columns\");\r\n        var commonColumnSettings = columnsController.getCommonSettings();\r\n        return this.option(\"showColumnHeaders\") && (allowReordering(this) || commonColumnSettings.allowGrouping || commonColumnSettings.allowHiding)\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        this._controller = this.getController(\"draggingHeader\");\r\n        this._columnsResizerViewController = this.getController(\"columnsResizer\");\r\n        this.getController(\"data\").loadingChanged.add((function(isLoading) {\r\n            var element = that.element();\r\n            if (!isLoading && element) {\r\n                element.hide()\r\n            }\r\n        }))\r\n    },\r\n    dragHeader: function(options) {\r\n        var columnElement = options.columnElement;\r\n        var isCommandColumn = !!options.sourceColumn.type;\r\n        this._isDragging = true;\r\n        this._dragOptions = options;\r\n        this._dropOptions = {\r\n            sourceIndex: options.index,\r\n            sourceColumnIndex: this._getVisibleIndexObject(options.rowIndex, options.columnIndex),\r\n            sourceColumnElement: options.columnElement,\r\n            sourceLocation: options.sourceLocation\r\n        };\r\n        var document = domAdapter.getDocument();\r\n        this._onSelectStart = document.onselectstart;\r\n        document.onselectstart = function() {\r\n            return false\r\n        };\r\n        this._controller.drag(this._dropOptions);\r\n        this.element().css({\r\n            textAlign: columnElement && columnElement.css(\"textAlign\"),\r\n            height: columnElement && (isCommandColumn && columnElement.get(0).clientHeight || getHeight(columnElement)),\r\n            width: columnElement && (isCommandColumn && columnElement.get(0).clientWidth || getWidth(columnElement)),\r\n            whiteSpace: columnElement && columnElement.css(\"whiteSpace\")\r\n        }).addClass(this.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS)).toggleClass(DRAGGING_COMMAND_CELL_CLASS, isCommandColumn).text(isCommandColumn ? \"\" : options.sourceColumn.caption);\r\n        this.element().appendTo(swatchContainer.getSwatchContainer(columnElement))\r\n    },\r\n    moveHeader: function(args) {\r\n        var e = args.event;\r\n        var that = e.data.that;\r\n        var eventData = getEventData(e);\r\n        var isResizing = that._columnsResizerViewController ? that._columnsResizerViewController.isResizing() : false;\r\n        var dragOptions = that._dragOptions;\r\n        if (that._isDragging && !isResizing) {\r\n            var $element = that.element();\r\n            var moveDeltaX = Math.abs(eventData.x - dragOptions.columnElement.offset().left - dragOptions.deltaX);\r\n            var moveDeltaY = Math.abs(eventData.y - dragOptions.columnElement.offset().top - dragOptions.deltaY);\r\n            if ($element.is(\":visible\") || moveDeltaX > DRAGGING_DELTA || moveDeltaY > DRAGGING_DELTA) {\r\n                $element.show();\r\n                var newLeft = eventData.x - dragOptions.deltaX;\r\n                var newTop = eventData.y - dragOptions.deltaY;\r\n                $element.css({\r\n                    left: newLeft,\r\n                    top: newTop\r\n                });\r\n                that.dockHeader(eventData)\r\n            }\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    dockHeader: function(eventData) {\r\n        var targetDraggingPanel = this._getDraggingPanelByPos(eventData);\r\n        var controller = this._controller;\r\n        var params = this._dropOptions;\r\n        var dragOptions = this._dragOptions;\r\n        if (targetDraggingPanel) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\");\r\n            var isVerticalOrientation = \"columnChooser\" === targetDraggingPanel.getName();\r\n            var axisName = isVerticalOrientation ? \"y\" : \"x\";\r\n            var targetLocation = targetDraggingPanel.getName();\r\n            var rowIndex = \"headers\" === targetLocation ? dragOptions.rowIndex : void 0;\r\n            var sourceColumn = dragOptions.sourceColumn;\r\n            var columnElements = targetDraggingPanel.getColumnElements(rowIndex, null === sourceColumn || void 0 === sourceColumn ? void 0 : sourceColumn.ownerBand) || [];\r\n            var pointsByTarget = dragOptions.pointsByTarget = dragOptions.pointsByTarget || {};\r\n            var pointsByColumns = \"columnChooser\" === targetLocation ? [] : pointsByTarget[targetLocation] || controller._generatePointsByColumns(extend({}, dragOptions, {\r\n                targetDraggingPanel: targetDraggingPanel,\r\n                columns: targetDraggingPanel.getColumns(rowIndex),\r\n                columnElements: columnElements,\r\n                isVerticalOrientation: isVerticalOrientation,\r\n                startColumnIndex: \"headers\" === targetLocation && $(columnElements[0]).index()\r\n            }));\r\n            pointsByTarget[targetLocation] = pointsByColumns;\r\n            params.targetLocation = targetLocation;\r\n            if (pointsByColumns.length > 0) {\r\n                for (var i = 0; i < pointsByColumns.length; i++) {\r\n                    var centerPosition = pointsByColumns[i + 1] && (pointsByColumns[i][axisName] + pointsByColumns[i + 1][axisName]) / 2;\r\n                    if (void 0 === centerPosition || (rtlEnabled && \"x\" === axisName ? eventData[axisName] > centerPosition : eventData[axisName] < centerPosition)) {\r\n                        params.targetColumnIndex = this._getVisibleIndexObject(rowIndex, pointsByColumns[i].columnIndex);\r\n                        if (columnElements[i]) {\r\n                            params.targetColumnElement = columnElements.eq(i);\r\n                            params.isLast = false\r\n                        } else {\r\n                            params.targetColumnElement = columnElements.last();\r\n                            params.isLast = true\r\n                        }\r\n                        params.posX = pointsByColumns[i].x;\r\n                        params.posY = pointsByColumns[i].y;\r\n                        controller.dock(params);\r\n                        break\r\n                    }\r\n                }\r\n            } else {\r\n                this._resetTargetColumnOptions();\r\n                controller.dock(params)\r\n            }\r\n        }\r\n    },\r\n    dropHeader: function(args) {\r\n        var e = args.event;\r\n        var that = e.data.that;\r\n        var controller = that._controller;\r\n        that.element().hide();\r\n        if (controller && that._isDragging) {\r\n            controller.drop(that._dropOptions)\r\n        }\r\n        that.element().appendTo(that._parentElement());\r\n        that._dragOptions = null;\r\n        that._dropOptions = null;\r\n        that._isDragging = false;\r\n        domAdapter.getDocument().onselectstart = that._onSelectStart || null\r\n    }\r\n});\r\nvar isNextColumnResizingMode = function(that) {\r\n    return \"widget\" !== that.option(\"columnResizingMode\")\r\n};\r\nvar ColumnsResizerViewController = modules.ViewController.inherit({\r\n    _isHeadersRowArea: function(posY) {\r\n        if (this._columnHeadersView) {\r\n            var element = this._columnHeadersView.element();\r\n            if (element) {\r\n                var offsetTop = element.offset().top;\r\n                var headersRowHeight = this._columnHeadersView.getHeadersRowHeight();\r\n                return posY >= offsetTop && posY <= offsetTop + headersRowHeight\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _isRtlParentStyle: function() {\r\n        var _this$_$parentContain;\r\n        return this.option(\"rtlEnabled\") && \"rtl\" === (null === (_this$_$parentContain = this._$parentContainer) || void 0 === _this$_$parentContain ? void 0 : _this$_$parentContain.parent().css(\"direction\"))\r\n    },\r\n    _pointCreated: function(point, cellsLength, columns) {\r\n        var isNextColumnMode = isNextColumnResizingMode(this);\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n        var firstPointColumnIndex = !isNextColumnMode && rtlEnabled && !isRtlParentStyle ? 0 : 1;\r\n        if (point.index >= firstPointColumnIndex && point.index < cellsLength + (!isNextColumnMode && (!rtlEnabled || isRtlParentStyle) ? 1 : 0)) {\r\n            point.columnIndex -= firstPointColumnIndex;\r\n            var currentColumn = columns[point.columnIndex] || {};\r\n            var nextColumn = columns[point.columnIndex + 1] || {};\r\n            return !(isNextColumnMode ? currentColumn.allowResizing && nextColumn.allowResizing : currentColumn.allowResizing)\r\n        }\r\n        return true\r\n    },\r\n    _getTargetPoint: function(pointsByColumns, currentX, deltaX) {\r\n        if (pointsByColumns) {\r\n            for (var i = 0; i < pointsByColumns.length; i++) {\r\n                if (pointsByColumns[i].x === pointsByColumns[0].x && pointsByColumns[i + 1] && pointsByColumns[i].x === pointsByColumns[i + 1].x) {\r\n                    continue\r\n                }\r\n                if (pointsByColumns[i].x - deltaX <= currentX && currentX <= pointsByColumns[i].x + deltaX) {\r\n                    return pointsByColumns[i]\r\n                }\r\n            }\r\n        }\r\n        return null\r\n    },\r\n    _moveSeparator: function(args) {\r\n        var _that$_draggingHeader;\r\n        var e = args.event;\r\n        var that = e.data;\r\n        var columnsSeparatorWidth = that._columnsSeparatorView.width();\r\n        var isNextColumnMode = isNextColumnResizingMode(that);\r\n        var deltaX = columnsSeparatorWidth / 2;\r\n        var parentOffset = that._$parentContainer.offset();\r\n        var parentOffsetLeft = parentOffset.left;\r\n        var eventData = getEventData(e);\r\n        var rtlEnabled = that.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n        var isDragging = null === (_that$_draggingHeader = that._draggingHeaderView) || void 0 === _that$_draggingHeader ? void 0 : _that$_draggingHeader.isDragging();\r\n        if (that._isResizing && that._resizingInfo) {\r\n            if ((parentOffsetLeft <= eventData.x || !isNextColumnMode && isRtlParentStyle) && (!isNextColumnMode || eventData.x <= parentOffsetLeft + getWidth(that._$parentContainer))) {\r\n                if (that._updateColumnsWidthIfNeeded(eventData.x)) {\r\n                    var $cell = that._columnHeadersView.getColumnElements().eq(that._resizingInfo.currentColumnIndex);\r\n                    var cell = $cell[0];\r\n                    if (cell) {\r\n                        var outerWidth = cell.getBoundingClientRect().width;\r\n                        that._columnsSeparatorView.moveByX($cell.offset().left + ((isNextColumnMode || isRtlParentStyle) && rtlEnabled ? 0 : outerWidth));\r\n                        that._tablePositionController.update(that._targetPoint.y);\r\n                        e.preventDefault()\r\n                    }\r\n                }\r\n            }\r\n        } else if (!isDragging) {\r\n            if (that._isHeadersRowArea(eventData.y)) {\r\n                if (that._previousParentOffset) {\r\n                    if (that._previousParentOffset.left !== parentOffset.left || that._previousParentOffset.top !== parentOffset.top) {\r\n                        that.pointsByColumns(null)\r\n                    }\r\n                }\r\n                that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, columnsSeparatorWidth);\r\n                that._previousParentOffset = parentOffset;\r\n                that._isReadyResizing = false;\r\n                if (that._targetPoint) {\r\n                    that._columnsSeparatorView.changeCursor(\"col-resize\");\r\n                    that._columnsSeparatorView.moveByX(that._targetPoint.x - deltaX);\r\n                    that._tablePositionController.update(that._targetPoint.y);\r\n                    that._isReadyResizing = true;\r\n                    e.preventDefault()\r\n                } else {\r\n                    that._columnsSeparatorView.changeCursor();\r\n                    that._columnsSeparatorView.moveByX(null)\r\n                }\r\n            } else {\r\n                that.pointsByColumns(null);\r\n                that._isReadyResizing = false;\r\n                that._columnsSeparatorView.changeCursor();\r\n                that._columnsSeparatorView.moveByX(null)\r\n            }\r\n        }\r\n    },\r\n    _endResizing: function(args) {\r\n        var e = args.event;\r\n        var that = e.data;\r\n        if (that._isResizing) {\r\n            that.pointsByColumns(null);\r\n            that._resizingInfo = null;\r\n            that._columnsSeparatorView.hide();\r\n            that._columnsSeparatorView.changeCursor();\r\n            that._trackerView.hide();\r\n            that._isReadyResizing = false;\r\n            that._isResizing = false\r\n        }\r\n    },\r\n    _getNextColumnIndex: function(currentColumnIndex) {\r\n        return currentColumnIndex + 1\r\n    },\r\n    _setupResizingInfo: function(posX) {\r\n        var currentColumnIndex = this._targetPoint.columnIndex;\r\n        var nextColumnIndex = this._getNextColumnIndex(currentColumnIndex);\r\n        var currentHeader = this._columnHeadersView.getHeaderElement(currentColumnIndex);\r\n        var nextHeader = this._columnHeadersView.getHeaderElement(nextColumnIndex);\r\n        this._resizingInfo = {\r\n            startPosX: posX,\r\n            currentColumnIndex: currentColumnIndex,\r\n            currentColumnWidth: currentHeader && currentHeader.length > 0 ? getBoundingRect(currentHeader[0]).width : 0,\r\n            nextColumnIndex: nextColumnIndex,\r\n            nextColumnWidth: nextHeader && nextHeader.length > 0 ? getBoundingRect(nextHeader[0]).width : 0\r\n        }\r\n    },\r\n    _startResizing: function(args) {\r\n        var e = args.event;\r\n        var that = e.data;\r\n        var eventData = getEventData(e);\r\n        if (isTouchEvent(e)) {\r\n            if (that._isHeadersRowArea(eventData.y)) {\r\n                that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH);\r\n                if (that._targetPoint) {\r\n                    that._columnsSeparatorView.moveByX(that._targetPoint.x - that._columnsSeparatorView.width() / 2);\r\n                    that._isReadyResizing = true\r\n                }\r\n            } else {\r\n                that._isReadyResizing = false\r\n            }\r\n        }\r\n        if (that._isReadyResizing) {\r\n            that._setupResizingInfo(eventData.x);\r\n            that._isResizing = true;\r\n            that._tablePositionController.update(that._targetPoint.y);\r\n            that._columnsSeparatorView.show();\r\n            that._trackerView.show();\r\n            var scrollable = that.component.getScrollable();\r\n            if (scrollable && that._isRtlParentStyle()) {\r\n                that._scrollRight = getWidth(scrollable.$content()) - getWidth(scrollable.container()) - scrollable.scrollLeft()\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation()\r\n        }\r\n        if (this.isResizing()) {\r\n            this.getController(\"editorFactory\").loseFocus()\r\n        }\r\n    },\r\n    _generatePointsByColumns: function() {\r\n        var that = this;\r\n        var columns = that._columnsController ? that._columnsController.getVisibleColumns() : [];\r\n        var cells = that._columnHeadersView.getColumnElements();\r\n        var pointsByColumns = [];\r\n        if (cells && cells.length > 0) {\r\n            pointsByColumns = gridCoreUtils.getPointsByColumns(cells, (function(point) {\r\n                return that._pointCreated(point, cells.length, columns)\r\n            }))\r\n        }\r\n        that._pointsByColumns = pointsByColumns\r\n    },\r\n    _unsubscribeFromEvents: function() {\r\n        this._moveSeparatorHandler && eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.move, MODULE_NAMESPACE), this._moveSeparatorHandler);\r\n        this._startResizingHandler && eventsEngine.off(this._$parentContainer, addNamespace(pointerEvents.down, MODULE_NAMESPACE), this._startResizingHandler);\r\n        if (this._endResizingHandler) {\r\n            eventsEngine.off(this._columnsSeparatorView.element(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this._endResizingHandler);\r\n            eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this._endResizingHandler)\r\n        }\r\n    },\r\n    _subscribeToEvents: function() {\r\n        this._moveSeparatorHandler = this.createAction(this._moveSeparator);\r\n        this._startResizingHandler = this.createAction(this._startResizing);\r\n        this._endResizingHandler = this.createAction(this._endResizing);\r\n        eventsEngine.on(domAdapter.getDocument(), addNamespace(pointerEvents.move, MODULE_NAMESPACE), this, this._moveSeparatorHandler);\r\n        eventsEngine.on(this._$parentContainer, addNamespace(pointerEvents.down, MODULE_NAMESPACE), this, this._startResizingHandler);\r\n        eventsEngine.on(this._columnsSeparatorView.element(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this, this._endResizingHandler);\r\n        eventsEngine.on(domAdapter.getDocument(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this, this._endResizingHandler)\r\n    },\r\n    _updateColumnsWidthIfNeeded: function(posX) {\r\n        var deltaX;\r\n        var needUpdate = false;\r\n        var nextCellWidth;\r\n        var resizingInfo = this._resizingInfo;\r\n        var columnsController = this._columnsController;\r\n        var visibleColumns = columnsController.getVisibleColumns();\r\n        var columnsSeparatorWidth = this._columnsSeparatorView.width();\r\n        var contentWidth = this._rowsView.contentWidth();\r\n        var isNextColumnMode = isNextColumnResizingMode(this);\r\n        var adaptColumnWidthByRatio = isNextColumnMode && this.option(\"adaptColumnWidthByRatio\") && !this.option(\"columnAutoWidth\");\r\n        var minWidth;\r\n        var nextColumn;\r\n        var cellWidth;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n\r\n        function isPercentWidth(width) {\r\n            return isString(width) && \"%\" === width.slice(-1)\r\n        }\r\n\r\n        function setColumnWidth(column, columnWidth, contentWidth, adaptColumnWidthByRatio) {\r\n            if (column) {\r\n                var oldColumnWidth = column.width;\r\n                if (oldColumnWidth) {\r\n                    adaptColumnWidthByRatio = isPercentWidth(oldColumnWidth)\r\n                }\r\n                if (adaptColumnWidthByRatio) {\r\n                    columnsController.columnOption(column.index, \"visibleWidth\", columnWidth);\r\n                    columnsController.columnOption(column.index, \"width\", (columnWidth / contentWidth * 100).toFixed(3) + \"%\")\r\n                } else {\r\n                    columnsController.columnOption(column.index, \"visibleWidth\", null);\r\n                    columnsController.columnOption(column.index, \"width\", columnWidth)\r\n                }\r\n            }\r\n        }\r\n        deltaX = posX - resizingInfo.startPosX;\r\n        if ((isNextColumnMode || isRtlParentStyle) && rtlEnabled) {\r\n            deltaX = -deltaX\r\n        }\r\n        cellWidth = resizingInfo.currentColumnWidth + deltaX;\r\n        var column = visibleColumns[resizingInfo.currentColumnIndex];\r\n        minWidth = column && column.minWidth || columnsSeparatorWidth;\r\n        needUpdate = cellWidth >= minWidth;\r\n        if (isNextColumnMode) {\r\n            nextCellWidth = resizingInfo.nextColumnWidth - deltaX;\r\n            nextColumn = visibleColumns[resizingInfo.nextColumnIndex];\r\n            minWidth = nextColumn && nextColumn.minWidth || columnsSeparatorWidth;\r\n            needUpdate = needUpdate && nextCellWidth >= minWidth\r\n        }\r\n        if (needUpdate) {\r\n            columnsController.beginUpdate();\r\n            cellWidth = Math.floor(cellWidth);\r\n            contentWidth = function(contentWidth, visibleColumns) {\r\n                var allColumnsHaveWidth = visibleColumns.every(column => column.width);\r\n                if (allColumnsHaveWidth) {\r\n                    var totalPercent = visibleColumns.reduce((sum, column) => {\r\n                        if (isPercentWidth(column.width)) {\r\n                            sum += parseFloat(column.width)\r\n                        }\r\n                        return sum\r\n                    }, 0);\r\n                    if (totalPercent > 100) {\r\n                        contentWidth = contentWidth / totalPercent * 100\r\n                    }\r\n                }\r\n                return contentWidth\r\n            }(contentWidth, visibleColumns);\r\n            setColumnWidth(column, cellWidth, contentWidth, adaptColumnWidthByRatio);\r\n            if (isNextColumnMode) {\r\n                nextCellWidth = Math.floor(nextCellWidth);\r\n                setColumnWidth(nextColumn, nextCellWidth, contentWidth, adaptColumnWidthByRatio)\r\n            } else {\r\n                var columnWidths = this._columnHeadersView.getColumnWidths();\r\n                columnWidths[resizingInfo.currentColumnIndex] = cellWidth;\r\n                var hasScroll = columnWidths.reduce((totalWidth, width) => totalWidth + width, 0) > this._rowsView.contentWidth();\r\n                if (!hasScroll) {\r\n                    var lastColumnIndex = gridCoreUtils.getLastResizableColumnIndex(visibleColumns);\r\n                    if (lastColumnIndex >= 0) {\r\n                        columnsController.columnOption(visibleColumns[lastColumnIndex].index, \"visibleWidth\", \"auto\")\r\n                    }\r\n                }\r\n                for (var i = 0; i < columnWidths.length; i++) {\r\n                    if (visibleColumns[i] && visibleColumns[i] !== column && void 0 === visibleColumns[i].width) {\r\n                        columnsController.columnOption(visibleColumns[i].index, \"width\", columnWidths[i])\r\n                    }\r\n                }\r\n            }\r\n            columnsController.endUpdate();\r\n            if (!isNextColumnMode) {\r\n                this.component.updateDimensions();\r\n                var scrollable = this.component.getScrollable();\r\n                if (scrollable && isRtlParentStyle) {\r\n                    var left = getWidth(scrollable.$content()) - getWidth(scrollable.container()) - this._scrollRight;\r\n                    scrollable.scrollTo({\r\n                        left: left\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        return needUpdate\r\n    },\r\n    _subscribeToCallback: function(callback, handler) {\r\n        callback.add(handler);\r\n        this._subscribesToCallbacks.push({\r\n            callback: callback,\r\n            handler: handler\r\n        })\r\n    },\r\n    _unsubscribeFromCallbacks: function() {\r\n        for (var i = 0; i < this._subscribesToCallbacks.length; i++) {\r\n            var subscribe = this._subscribesToCallbacks[i];\r\n            subscribe.callback.remove(subscribe.handler)\r\n        }\r\n        this._subscribesToCallbacks = []\r\n    },\r\n    _unsubscribes: function() {\r\n        this._unsubscribeFromEvents();\r\n        this._unsubscribeFromCallbacks()\r\n    },\r\n    _init: function() {\r\n        var that = this;\r\n        var generatePointsByColumnsHandler = function() {\r\n            if (!that._isResizing) {\r\n                that.pointsByColumns(null)\r\n            }\r\n        };\r\n        var generatePointsByColumnsScrollHandler = function(offset) {\r\n            if (that._scrollLeft !== offset.left) {\r\n                that._scrollLeft = offset.left;\r\n                that.pointsByColumns(null)\r\n            }\r\n        };\r\n        that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\r\n        that._columnHeadersView = that.getView(\"columnHeadersView\");\r\n        that._trackerView = that.getView(\"trackerView\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._tablePositionController = that.getController(\"tablePosition\");\r\n        that._$parentContainer = that.component.$element();\r\n        that._draggingHeaderView = that.component.getView(\"draggingHeaderView\");\r\n        that._subscribeToCallback(that._columnHeadersView.renderCompleted, generatePointsByColumnsHandler);\r\n        that._subscribeToCallback(that._columnHeadersView.resizeCompleted, generatePointsByColumnsHandler);\r\n        that._subscribeToCallback(that._columnsSeparatorView.renderCompleted, (function() {\r\n            that._unsubscribeFromEvents();\r\n            that._subscribeToEvents()\r\n        }));\r\n        that._subscribeToCallback(that._rowsView.renderCompleted, (function() {\r\n            that._rowsView.scrollChanged.remove(generatePointsByColumnsScrollHandler);\r\n            that._rowsView.scrollChanged.add(generatePointsByColumnsScrollHandler)\r\n        }));\r\n        var previousScrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\r\n        var previousTableHeight = 0;\r\n        that._subscribeToCallback(that.getController(\"tablePosition\").positionChanged, (function(e) {\r\n            if (that._isResizing && !that._rowsView.isResizing) {\r\n                var scrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\r\n                if (previousScrollbarVisibility !== scrollbarVisibility || previousTableHeight && previousTableHeight !== e.height) {\r\n                    previousScrollbarVisibility = scrollbarVisibility;\r\n                    previousTableHeight = e.height;\r\n                    that.component.updateDimensions()\r\n                } else {\r\n                    that._rowsView.updateFreeSpaceRowHeight()\r\n                }\r\n            }\r\n            previousTableHeight = e.height\r\n        }))\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            if (args.value) {\r\n                this._init();\r\n                this._subscribeToEvents()\r\n            } else {\r\n                this._unsubscribes()\r\n            }\r\n        }\r\n    },\r\n    isResizing: function() {\r\n        return this._isResizing\r\n    },\r\n    init: function() {\r\n        this._subscribesToCallbacks = [];\r\n        if (allowResizing(this)) {\r\n            this._init()\r\n        }\r\n    },\r\n    pointsByColumns: function(value) {\r\n        if (void 0 !== value) {\r\n            this._pointsByColumns = value\r\n        } else {\r\n            if (!this._pointsByColumns) {\r\n                this._generatePointsByColumns()\r\n            }\r\n            return this._pointsByColumns\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribes();\r\n        this.callBase()\r\n    }\r\n});\r\nvar TablePositionViewController = modules.ViewController.inherit({\r\n    update: function(top) {\r\n        var params = {};\r\n        var $element = this._columnHeadersView.element();\r\n        var offset = $element && $element.offset();\r\n        var offsetTop = offset && offset.top || 0;\r\n        var diffOffsetTop = isDefined(top) ? Math.abs(top - offsetTop) : 0;\r\n        var columnsHeadersHeight = this._columnHeadersView ? this._columnHeadersView.getHeight() : 0;\r\n        var scrollBarWidth = this._rowsView.getScrollbarWidth(true);\r\n        var rowsHeight = this._rowsView ? this._rowsView.height() - scrollBarWidth : 0;\r\n        var columnsResizerController = this.component.getController(\"columnsResizer\");\r\n        var draggingHeaderView = this.component.getView(\"draggingHeaderView\");\r\n        params.height = columnsHeadersHeight;\r\n        var isDraggingOrResizing = false !== columnsResizerController.isResizing() || draggingHeaderView.isDragging();\r\n        if (isDraggingOrResizing) {\r\n            params.height += rowsHeight - diffOffsetTop\r\n        }\r\n        if (null !== top && $element && $element.length) {\r\n            params.top = $element[0].offsetTop + diffOffsetTop\r\n        }\r\n        this.positionChanged.fire(params)\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that.callBase();\r\n        that._columnHeadersView = this.getView(\"columnHeadersView\");\r\n        that._rowsView = this.getView(\"rowsView\");\r\n        that._pagerView = this.getView(\"pagerView\");\r\n        that._rowsView.resizeCompleted.add((function() {\r\n            if (that.option(\"allowColumnResizing\")) {\r\n                var targetPoint = that.getController(\"columnsResizer\")._targetPoint;\r\n                that.update(targetPoint ? targetPoint.y : null)\r\n            }\r\n        }))\r\n    },\r\n    ctor: function(component) {\r\n        this.callBase(component);\r\n        this.positionChanged = Callbacks()\r\n    }\r\n});\r\nvar DraggingHeaderViewController = modules.ViewController.inherit({\r\n    _generatePointsByColumns: function(options) {\r\n        var that = this;\r\n        return gridCoreUtils.getPointsByColumns(options.columnElements, (function(point) {\r\n            return that._pointCreated(point, options.columns, options.targetDraggingPanel.getName(), options.sourceColumn)\r\n        }), options.isVerticalOrientation, options.startColumnIndex)\r\n    },\r\n    _pointCreated: function(point, columns, location, sourceColumn) {\r\n        var targetColumn = columns[point.columnIndex];\r\n        var prevColumn = columns[point.columnIndex - 1];\r\n        switch (location) {\r\n            case \"columnChooser\":\r\n                return true;\r\n            case \"headers\":\r\n                return sourceColumn && !sourceColumn.allowReordering || (!targetColumn || !targetColumn.allowReordering) && (!prevColumn || !prevColumn.allowReordering);\r\n            default:\r\n                return 0 === columns.length\r\n        }\r\n    },\r\n    _subscribeToEvents: function(draggingHeader, draggingPanels) {\r\n        var that = this;\r\n        each(draggingPanels, (function(_, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var columns;\r\n                var rowCount = draggingPanel.getRowCount ? draggingPanel.getRowCount() : 1;\r\n                var nameDraggingPanel = draggingPanel.getName();\r\n                var subscribeToEvents = function(index, columnElement) {\r\n                    if (!columnElement) {\r\n                        return\r\n                    }\r\n                    var $columnElement = $(columnElement);\r\n                    var column = columns[index];\r\n                    if (draggingPanel.allowDragging(column, nameDraggingPanel, draggingPanels)) {\r\n                        $columnElement.addClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventStart, MODULE_NAMESPACE), that.createAction((function(args) {\r\n                            var e = args.event;\r\n                            var eventData = getEventData(e);\r\n                            draggingHeader.dragHeader({\r\n                                deltaX: eventData.x - $(e.currentTarget).offset().left,\r\n                                deltaY: eventData.y - $(e.currentTarget).offset().top,\r\n                                sourceColumn: column,\r\n                                index: column.index,\r\n                                columnIndex: index,\r\n                                columnElement: $columnElement,\r\n                                sourceLocation: nameDraggingPanel,\r\n                                draggingPanels: draggingPanels,\r\n                                rowIndex: that._columnsController.getRowIndex(column.index, true)\r\n                            })\r\n                        })));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventMove, MODULE_NAMESPACE), {\r\n                            that: draggingHeader\r\n                        }, that.createAction(draggingHeader.moveHeader));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventEnd, MODULE_NAMESPACE), {\r\n                            that: draggingHeader\r\n                        }, that.createAction(draggingHeader.dropHeader))\r\n                    }\r\n                };\r\n                for (var i = 0; i < rowCount; i++) {\r\n                    var columnElements = draggingPanel.getColumnElements(i) || [];\r\n                    if (columnElements.length) {\r\n                        columns = draggingPanel.getColumns(i) || [];\r\n                        each(columnElements, subscribeToEvents)\r\n                    }\r\n                }\r\n            }\r\n        }))\r\n    },\r\n    _unsubscribeFromEvents: function(draggingHeader, draggingPanels) {\r\n        var that = this;\r\n        each(draggingPanels, (function(_, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var columnElements = draggingPanel.getColumnElements() || [];\r\n                each(columnElements, (function(index, columnElement) {\r\n                    var $columnElement = $(columnElement);\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventStart, MODULE_NAMESPACE));\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventMove, MODULE_NAMESPACE));\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventEnd, MODULE_NAMESPACE));\r\n                    $columnElement.removeClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS))\r\n                }))\r\n            }\r\n        }))\r\n    },\r\n    _getSeparator: function(targetLocation) {\r\n        return \"headers\" === targetLocation ? this._columnsSeparatorView : this._blockSeparatorView\r\n    },\r\n    hideSeparators: function(type) {\r\n        var blockSeparator = this._blockSeparatorView;\r\n        var columnsSeparator = this._columnsSeparatorView;\r\n        this._animationColumnIndex = null;\r\n        blockSeparator && blockSeparator.hide();\r\n        \"block\" !== type && columnsSeparator && columnsSeparator.hide()\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that.callBase();\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._columnHeadersView = that.getView(\"columnHeadersView\");\r\n        that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\r\n        that._draggingHeaderView = that.getView(\"draggingHeaderView\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._blockSeparatorView = that.getView(\"blockSeparatorView\");\r\n        that._headerPanelView = that.getView(\"headerPanel\");\r\n        that._columnChooserView = that.getView(\"columnChooserView\");\r\n        var subscribeToEvents = function() {\r\n            if (that._draggingHeaderView) {\r\n                var draggingPanels = [that._columnChooserView, that._columnHeadersView, that._headerPanelView];\r\n                that._unsubscribeFromEvents(that._draggingHeaderView, draggingPanels);\r\n                that._subscribeToEvents(that._draggingHeaderView, draggingPanels)\r\n            }\r\n        };\r\n        that._columnHeadersView.renderCompleted.add(subscribeToEvents);\r\n        that._headerPanelView && that._headerPanelView.renderCompleted.add(subscribeToEvents);\r\n        that._columnChooserView && that._columnChooserView.renderCompleted.add(subscribeToEvents)\r\n    },\r\n    allowDrop: function(parameters) {\r\n        return this._columnsController.allowMoveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation)\r\n    },\r\n    drag: function(parameters) {\r\n        var sourceIndex = parameters.sourceIndex;\r\n        var sourceLocation = parameters.sourceLocation;\r\n        var sourceColumnElement = parameters.sourceColumnElement;\r\n        var headersView = this._columnHeadersView;\r\n        var rowsView = this._rowsView;\r\n        if (sourceColumnElement) {\r\n            sourceColumnElement.css({\r\n                opacity: COLUMN_OPACITY\r\n            });\r\n            if (\"headers\" === sourceLocation) {\r\n                headersView && headersView.setRowsOpacity(sourceIndex, COLUMN_OPACITY);\r\n                rowsView && rowsView.setRowsOpacity(sourceIndex, COLUMN_OPACITY)\r\n            }\r\n        }\r\n    },\r\n    dock: function(parameters) {\r\n        var that = this;\r\n        var targetColumnIndex = isObject(parameters.targetColumnIndex) ? parameters.targetColumnIndex.columnIndex : parameters.targetColumnIndex;\r\n        var sourceLocation = parameters.sourceLocation;\r\n        var targetLocation = parameters.targetLocation;\r\n        var separator = that._getSeparator(targetLocation);\r\n        var hasTargetVisibleIndex = targetColumnIndex >= 0;\r\n        that._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).toggleClass(that.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS), \"headers\" !== sourceLocation && \"headers\" === targetLocation && !hasTargetVisibleIndex);\r\n        if (separator) {\r\n            if (that.allowDrop(parameters) && hasTargetVisibleIndex) {\r\n                if (\"group\" === targetLocation || \"columnChooser\" === targetLocation) {\r\n                    ! function() {\r\n                        if (that._animationColumnIndex !== targetColumnIndex) {\r\n                            that.hideSeparators();\r\n                            separator.element()[parameters.isLast ? \"insertAfter\" : \"insertBefore\"](parameters.targetColumnElement);\r\n                            that._animationColumnIndex = targetColumnIndex;\r\n                            separator.show(targetLocation)\r\n                        }\r\n                    }()\r\n                } else {\r\n                    that.hideSeparators(\"block\");\r\n                    that.getController(\"tablePosition\").update(parameters.posY);\r\n                    separator.moveByX(parameters.posX - separator.width());\r\n                    separator.show()\r\n                }\r\n            } else {\r\n                that.hideSeparators()\r\n            }\r\n        }\r\n    },\r\n    drop: function(parameters) {\r\n        var sourceColumnElement = parameters.sourceColumnElement;\r\n        if (sourceColumnElement) {\r\n            sourceColumnElement.css({\r\n                opacity: \"\"\r\n            });\r\n            this._columnHeadersView.setRowsOpacity(parameters.sourceIndex, \"\");\r\n            this._rowsView.setRowsOpacity(parameters.sourceIndex, \"\");\r\n            this._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).removeClass(this.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS))\r\n        }\r\n        if (this.allowDrop(parameters)) {\r\n            var separator = this._getSeparator(parameters.targetLocation);\r\n            if (separator) {\r\n                separator.hide()\r\n            }\r\n            this._columnsController.moveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        if (this._draggingHeaderView) {\r\n            this._unsubscribeFromEvents(this._draggingHeaderView, [this._columnChooserView, this._columnHeadersView, this._headerPanelView])\r\n        }\r\n    }\r\n});\r\nexport var columnsResizingReorderingModule = {\r\n    views: {\r\n        columnsSeparatorView: ColumnsSeparatorView,\r\n        blockSeparatorView: BlockSeparatorView,\r\n        draggingHeaderView: DraggingHeaderView,\r\n        trackerView: TrackerView\r\n    },\r\n    controllers: {\r\n        draggingHeader: DraggingHeaderViewController,\r\n        tablePosition: TablePositionViewController,\r\n        columnsResizer: ColumnsResizerViewController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _needUpdateRowHeight: function(itemCount) {\r\n                    var wordWrapEnabled = this.option(\"wordWrapEnabled\");\r\n                    var columnsResizerController = this.getController(\"columnsResizer\");\r\n                    var isResizing = columnsResizerController.isResizing();\r\n                    return this.callBase.apply(this, arguments) || itemCount > 0 && wordWrapEnabled && isResizing\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            editorFactory: {\r\n                renderFocusOverlay: function() {\r\n                    if (this.getController(\"columnsResizer\").isResizing()) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.columns_resizing_reordering.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnsResizingReorderingModule\r\n} from \"../grid_core/ui.grid_core.columns_resizing_reordering\";\r\nexport var DraggingHeaderView = columnsResizingReorderingModule.views.draggingHeaderView;\r\nexport var DraggingHeaderViewController = columnsResizingReorderingModule.controllers.draggingHeader;\r\nexport var ColumnsSeparatorView = columnsResizingReorderingModule.views.columnsSeparatorView;\r\nexport var TablePositionViewController = columnsResizingReorderingModule.controllers.tablePosition;\r\nexport var ColumnsResizerViewController = columnsResizingReorderingModule.controllers.columnsResizer;\r\nexport var TrackerView = columnsResizingReorderingModule.views.trackerView;\r\ngridCore.registerModule(\"columnsResizingReordering\", columnsResizingReorderingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.keyboard_navigation.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterHeight,\r\n    getHeight,\r\n    getWidth,\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport core from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    isDefined,\r\n    isEmptyObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    focused\r\n} from \"../widget/selectors\";\r\nimport {\r\n    addNamespace,\r\n    createEvent,\r\n    isCommandKeyPressed\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport * as accessibility from \"../shared/accessibility\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    keyboard\r\n} from \"../../events/short\";\r\nimport devices from \"../../core/devices\";\r\nvar ROWS_VIEW_CLASS = \"rowsview\";\r\nvar EDIT_FORM_CLASS = \"edit-form\";\r\nvar GROUP_FOOTER_CLASS = \"group-footer\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar EDIT_FORM_ITEM_CLASS = \"edit-form-item\";\r\nvar MASTER_DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar FREESPACE_ROW_CLASS = \"dx-freespace-row\";\r\nvar VIRTUAL_ROW_CLASS = \"dx-virtual-row\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar DROPDOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar COMMAND_EXPAND_CLASS = \"dx-command-expand\";\r\nvar COMMAND_SELECT_CLASS = \"dx-command-select\";\r\nvar COMMAND_EDIT_CLASS = \"dx-command-edit\";\r\nvar COMMAND_CELL_SELECTOR = \"[class^=dx-command]\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar DATEBOX_WIDGET_NAME = \"dxDateBox\";\r\nvar FOCUS_STATE_CLASS = \"dx-state-focused\";\r\nvar WIDGET_CLASS = \"dx-widget\";\r\nvar REVERT_BUTTON_CLASS = \"dx-revert-button\";\r\nvar FAST_EDITING_DELETE_KEY = \"delete\";\r\nvar INTERACTIVE_ELEMENTS_SELECTOR = \"input:not([type='hidden']), textarea, a, select, button, [tabindex], .dx-checkbox\";\r\nvar NON_FOCUSABLE_ELEMENTS_SELECTOR = \"\".concat(INTERACTIVE_ELEMENTS_SELECTOR, \", .dx-dropdowneditor-icon\");\r\nvar EDIT_MODE_ROW = \"row\";\r\nvar EDIT_MODE_FORM = \"form\";\r\nvar EDIT_MODE_BATCH = \"batch\";\r\nvar EDIT_MODE_CELL = \"cell\";\r\nvar FOCUS_TYPE_ROW = \"row\";\r\nvar FOCUS_TYPE_CELL = \"cell\";\r\nvar COLUMN_HEADERS_VIEW = \"columnHeadersView\";\r\n\r\nfunction isGroupRow($row) {\r\n    return $row && $row.hasClass(GROUP_ROW_CLASS)\r\n}\r\n\r\nfunction isDetailRow($row) {\r\n    return $row && $row.hasClass(MASTER_DETAIL_ROW_CLASS)\r\n}\r\n\r\nfunction isDataRow($row) {\r\n    return $row && !isGroupRow($row) && !isDetailRow($row)\r\n}\r\n\r\nfunction isNotFocusedRow($row) {\r\n    return !$row || $row.hasClass(FREESPACE_ROW_CLASS) || $row.hasClass(VIRTUAL_ROW_CLASS)\r\n}\r\n\r\nfunction isCellElement($element) {\r\n    return $element.length && \"TD\" === $element[0].tagName\r\n}\r\n\r\nfunction isEditorCell(that, $cell) {\r\n    return !that._isRowEditMode() && $cell && !$cell.hasClass(COMMAND_SELECT_CLASS) && $cell.hasClass(EDITOR_CELL_CLASS)\r\n}\r\n\r\nfunction isElementDefined($element) {\r\n    return isDefined($element) && $element.length > 0\r\n}\r\n\r\nfunction isMobile() {\r\n    return \"desktop\" !== devices.current().deviceType\r\n}\r\n\r\nfunction isCellInHeaderRow($cell) {\r\n    return !!$cell.parent(\".\".concat(HEADER_ROW_CLASS)).length\r\n}\r\n\r\nfunction isFixedColumnIndexOffsetRequired(that, column) {\r\n    var rtlEnabled = that.option(\"rtlEnabled\");\r\n    var result = false;\r\n    if (rtlEnabled) {\r\n        result = !(\"right\" === column.fixedPosition || isDefined(column.command) && !isDefined(column.fixedPosition))\r\n    } else {\r\n        result = !(!isDefined(column.fixedPosition) || \"left\" === column.fixedPosition)\r\n    }\r\n    return result\r\n}\r\n\r\nfunction shouldPreventScroll(that) {\r\n    var keyboardController = that.getController(\"keyboardNavigation\");\r\n    return keyboardController._isVirtualScrolling() ? that.option(\"focusedRowIndex\") === keyboardController.getRowIndex() : false\r\n}\r\nvar KeyboardNavigationController = core.ViewController.inherit({\r\n    init: function() {\r\n        this._dataController = this.getController(\"data\");\r\n        this._selectionController = this.getController(\"selection\");\r\n        this._editingController = this.getController(\"editing\");\r\n        this._headerPanel = this.getView(\"headerPanel\");\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._editorFactory = this.getController(\"editorFactory\");\r\n        if (this.isKeyboardEnabled()) {\r\n            accessibility.subscribeVisibilityChange();\r\n            this._updateFocusTimeout = null;\r\n            this._fastEditingStarted = false;\r\n            this._focusedCellPosition = {};\r\n            this._canceledCellPosition = null;\r\n            this._editorFactory.focused.add($element => {\r\n                this.setupFocusedView();\r\n                if (this._isNeedScroll) {\r\n                    if ($element.is(\":visible\") && this._focusedView && this._focusedView.getScrollable) {\r\n                        this._focusedView._scrollToElement($element);\r\n                        this._isNeedScroll = false\r\n                    }\r\n                }\r\n            });\r\n            this._initViewHandlers();\r\n            this._initDocumentHandlers();\r\n            this.createAction(\"onKeyDown\")\r\n        }\r\n    },\r\n    _initViewHandlers: function() {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var rowsViewFocusHandler = event => {\r\n            var $element = $(event.target);\r\n            var isRelatedTargetInRowsView = $(event.relatedTarget).closest(rowsView.element()).length;\r\n            var isCommandButton = $element.hasClass(\"dx-link\");\r\n            if (isCommandButton && !isRelatedTargetInRowsView && this._isEventInCurrentGrid(event)) {\r\n                var $focusedCell = this._getFocusedCell();\r\n                $focusedCell = !isElementDefined($focusedCell) ? rowsView.getCellElements(0).filter(\"[tabindex]\").eq(0) : $focusedCell;\r\n                if (!$element.closest($focusedCell).length) {\r\n                    event.preventDefault();\r\n                    eventsEngine.trigger($focusedCell, \"focus\")\r\n                }\r\n            }\r\n        };\r\n        rowsView.renderCompleted.add(e => {\r\n            var $rowsView = rowsView.element();\r\n            var isFullUpdate = !e || \"refresh\" === e.changeType;\r\n            var isFocusedViewCorrect = this._focusedView && this._focusedView.name === rowsView.name;\r\n            var needUpdateFocus = false;\r\n            var isAppend = e && (\"append\" === e.changeType || \"prepend\" === e.changeType);\r\n            var $focusedElement = $(\":focus\");\r\n            var isFocusedElementCorrect = !$focusedElement.length || $focusedElement.closest($rowsView).length;\r\n            eventsEngine.off($rowsView, \"focusin\", rowsViewFocusHandler);\r\n            eventsEngine.on($rowsView, \"focusin\", rowsViewFocusHandler);\r\n            this._initPointerEventHandler();\r\n            this._initKeyDownHandler();\r\n            this._setRowsViewAttributes();\r\n            if (isFocusedViewCorrect && isFocusedElementCorrect) {\r\n                needUpdateFocus = this._isNeedFocus ? !isAppend : this._isHiddenFocus && isFullUpdate;\r\n                needUpdateFocus && this._updateFocus(true)\r\n            }\r\n        })\r\n    },\r\n    _initDocumentHandlers: function() {\r\n        var document = domAdapter.getDocument();\r\n        this._documentClickHandler = this.createAction(e => {\r\n            var $target = $(e.event.target);\r\n            var isCurrentRowsViewClick = this._isEventInCurrentGrid(e.event) && $target.closest(\".\".concat(this.addWidgetPrefix(ROWS_VIEW_CLASS))).length;\r\n            var isEditorOverlay = $target.closest(\".\".concat(DROPDOWN_EDITOR_OVERLAY_CLASS)).length;\r\n            var columnsResizerController = this.getController(\"columnsResizer\");\r\n            var isColumnResizing = !!columnsResizerController && columnsResizerController.isResizing();\r\n            if (!isCurrentRowsViewClick && !isEditorOverlay && !isColumnResizing) {\r\n                var targetInsideFocusedView = this._focusedView ? $target.parents().filter(this._focusedView.element()).length > 0 : false;\r\n                !targetInsideFocusedView && this._resetFocusedCell(true);\r\n                this._resetFocusedView()\r\n            }\r\n        });\r\n        eventsEngine.on(document, addNamespace(pointerEvents.down, \"dxDataGridKeyboardNavigation\"), this._documentClickHandler)\r\n    },\r\n    _setRowsViewAttributes: function() {\r\n        var $rowsView = this._getRowsViewElement();\r\n        var isGridEmpty = !this._dataController.getVisibleRows().length;\r\n        if (isGridEmpty) {\r\n            this._applyTabIndexToElement($rowsView)\r\n        }\r\n    },\r\n    _initPointerEventHandler: function() {\r\n        var pointerEventName = !isMobile() ? pointerEvents.down : clickEventName;\r\n        var clickSelector = \".\".concat(ROW_CLASS, \" > td, .\").concat(ROW_CLASS);\r\n        var $rowsView = this._getRowsViewElement();\r\n        if (!isDefined(this._pointerEventAction)) {\r\n            this._pointerEventAction = this.createAction(this._pointerEventHandler)\r\n        }\r\n        eventsEngine.off($rowsView, addNamespace(pointerEventName, \"dxDataGridKeyboardNavigation\"), this._pointerEventAction);\r\n        eventsEngine.on($rowsView, addNamespace(pointerEventName, \"dxDataGridKeyboardNavigation\"), clickSelector, this._pointerEventAction)\r\n    },\r\n    _initKeyDownHandler: function() {\r\n        var $rowsView = this._getRowsViewElement();\r\n        keyboard.off(this._keyDownListener);\r\n        this._keyDownListener = keyboard.on($rowsView, null, e => this._keyDownHandler(e))\r\n    },\r\n    dispose: function() {\r\n        this.callBase();\r\n        this._resetFocusedView();\r\n        keyboard.off(this._keyDownListener);\r\n        eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.down, \"dxDataGridKeyboardNavigation\"), this._documentClickHandler);\r\n        clearTimeout(this._updateFocusTimeout);\r\n        accessibility.unsubscribeVisibilityChange()\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"keyboardNavigation\":\r\n            case \"useLegacyKeyboardNavigation\":\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    isRowFocusType: function() {\r\n        return this.focusType === FOCUS_TYPE_ROW\r\n    },\r\n    isCellFocusType: function() {\r\n        return this.focusType === FOCUS_TYPE_CELL\r\n    },\r\n    setRowFocusType: function() {\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            this.focusType = FOCUS_TYPE_ROW\r\n        }\r\n    },\r\n    setCellFocusType: function() {\r\n        this.focusType = FOCUS_TYPE_CELL\r\n    },\r\n    _keyDownHandler: function(e) {\r\n        var needStopPropagation = true;\r\n        var isHandled = this._processOnKeyDown(e);\r\n        var isEditing = this._editingController.isEditing();\r\n        var originalEvent = e.originalEvent;\r\n        if (originalEvent.isDefaultPrevented()) {\r\n            return\r\n        }\r\n        this._isNeedFocus = true;\r\n        this._isNeedScroll = true;\r\n        this._updateFocusedCellPositionByTarget(originalEvent.target);\r\n        if (!isHandled) {\r\n            switch (e.keyName) {\r\n                case \"leftArrow\":\r\n                case \"rightArrow\":\r\n                    this._leftRightKeysHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"upArrow\":\r\n                case \"downArrow\":\r\n                    if (e.ctrl) {\r\n                        accessibility.selectView(\"rowsView\", this, originalEvent)\r\n                    } else {\r\n                        this._upDownKeysHandler(e, isEditing)\r\n                    }\r\n                    isHandled = true;\r\n                    break;\r\n                case \"pageUp\":\r\n                case \"pageDown\":\r\n                    this._pageUpDownKeyHandler(e);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"space\":\r\n                    this._spaceKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"A\":\r\n                    if (isCommandKeyPressed(e.originalEvent)) {\r\n                        this._ctrlAKeyHandler(e, isEditing);\r\n                        isHandled = true\r\n                    } else {\r\n                        isHandled = this._beginFastEditing(e.originalEvent)\r\n                    }\r\n                    break;\r\n                case \"tab\":\r\n                    this._tabKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"enter\":\r\n                    this._enterKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"escape\":\r\n                    this._escapeKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"F\":\r\n                    if (isCommandKeyPressed(e.originalEvent)) {\r\n                        this._ctrlFKeyHandler(e);\r\n                        isHandled = true\r\n                    } else {\r\n                        isHandled = this._beginFastEditing(e.originalEvent)\r\n                    }\r\n                    break;\r\n                case \"F2\":\r\n                    this._f2KeyHandler();\r\n                    isHandled = true;\r\n                    break;\r\n                case \"del\":\r\n                case \"backspace\":\r\n                    if (this._isFastEditingAllowed() && !this._isFastEditingStarted()) {\r\n                        isHandled = this._beginFastEditing(originalEvent, true)\r\n                    }\r\n            }\r\n            if (!isHandled && !this._beginFastEditing(originalEvent)) {\r\n                this._isNeedFocus = false;\r\n                this._isNeedScroll = false;\r\n                needStopPropagation = false\r\n            }\r\n            if (needStopPropagation) {\r\n                originalEvent.stopPropagation()\r\n            }\r\n        }\r\n    },\r\n    _processOnKeyDown: function(eventArgs) {\r\n        var originalEvent = eventArgs.originalEvent;\r\n        var args = {\r\n            handled: false,\r\n            event: originalEvent\r\n        };\r\n        this.executeAction(\"onKeyDown\", args);\r\n        eventArgs.ctrl = originalEvent.ctrlKey;\r\n        eventArgs.alt = originalEvent.altKey;\r\n        eventArgs.shift = originalEvent.shiftKey;\r\n        return !!args.handled\r\n    },\r\n    _closeEditCell: function() {\r\n        setTimeout(() => {\r\n            this._editingController.closeEditCell()\r\n        })\r\n    },\r\n    _leftRightKeysHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $event = eventArgs.originalEvent;\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        var directionCode = this._getDirectionCodeByKey(eventArgs.keyName);\r\n        var isEditingNavigationMode = this._isFastEditingStarted();\r\n        var allowNavigate = (!isEditing || isEditingNavigationMode) && isDataRow($row);\r\n        if (allowNavigate) {\r\n            this.setCellFocusType();\r\n            isEditingNavigationMode && this._closeEditCell();\r\n            if (this._isVirtualColumnRender()) {\r\n                this._processVirtualHorizontalPosition(directionCode)\r\n            }\r\n            var $cell = this._getNextCell(directionCode);\r\n            if (isElementDefined($cell)) {\r\n                this._arrowKeysHandlerFocusCell($event, $cell, directionCode)\r\n            }\r\n            $event && $event.preventDefault()\r\n        }\r\n    },\r\n    _upDownKeysHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this._focusedCellPosition.rowIndex;\r\n        var visibleRowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(visibleRowIndex);\r\n        var $event = eventArgs.originalEvent;\r\n        var isUpArrow = \"upArrow\" === eventArgs.keyName;\r\n        var dataSource = this._dataController.dataSource();\r\n        var isEditingNavigationMode = this._isFastEditingStarted();\r\n        var allowNavigate = (!isEditing || isEditingNavigationMode) && $row && !isDetailRow($row);\r\n        if (allowNavigate) {\r\n            isEditingNavigationMode && this._closeEditCell();\r\n            if (!this._navigateNextCell($event, eventArgs.keyName)) {\r\n                if (this._isVirtualRowRender() && isUpArrow && dataSource && !dataSource.isLoading()) {\r\n                    var rowHeight = getOuterHeight($row);\r\n                    rowIndex = this._focusedCellPosition.rowIndex - 1;\r\n                    this._scrollBy(0, -rowHeight, rowIndex, $event)\r\n                }\r\n            }\r\n            $event && $event.preventDefault()\r\n        }\r\n    },\r\n    _pageUpDownKeyHandler: function(eventArgs) {\r\n        var pageIndex = this._dataController.pageIndex();\r\n        var pageCount = this._dataController.pageCount();\r\n        var pagingEnabled = this.option(\"paging.enabled\");\r\n        var isPageUp = \"pageUp\" === eventArgs.keyName;\r\n        var pageStep = isPageUp ? -1 : 1;\r\n        var scrollable = this.getView(\"rowsView\").getScrollable();\r\n        if (pagingEnabled && !this._isVirtualScrolling()) {\r\n            if ((isPageUp ? pageIndex > 0 : pageIndex < pageCount - 1) && !this._isVirtualScrolling()) {\r\n                this._dataController.pageIndex(pageIndex + pageStep);\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        } else if (scrollable && getHeight(scrollable.container()) < getHeight(scrollable.$content())) {\r\n            this._scrollBy(0, getHeight(scrollable.container()) * pageStep);\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _spaceKeyHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $target = $(eventArgs.originalEvent && eventArgs.originalEvent.target);\r\n        if (this.option(\"selection\") && \"none\" !== this.option(\"selection\").mode && !isEditing) {\r\n            var isFocusedRowElement = \"row\" === this._getElementType($target) && this.isRowFocusType() && isDataRow($target);\r\n            var isFocusedSelectionCell = $target.hasClass(COMMAND_SELECT_CLASS);\r\n            if (isFocusedSelectionCell && \"onClick\" === this.option(\"selection.showCheckBoxesMode\")) {\r\n                this._selectionController.startSelectionWithCheckboxes()\r\n            }\r\n            if (isFocusedRowElement || $target.parent().hasClass(DATA_ROW_CLASS) || $target.hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\r\n                this._selectionController.changeItemSelection(rowIndex, {\r\n                    shift: eventArgs.shift,\r\n                    control: eventArgs.ctrl\r\n                });\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        } else {\r\n            this._beginFastEditing(eventArgs.originalEvent)\r\n        }\r\n    },\r\n    _ctrlAKeyHandler: function(eventArgs, isEditing) {\r\n        if (!isEditing && !eventArgs.alt && \"multiple\" === this.option(\"selection.mode\") && this.option(\"selection.allowSelectAll\")) {\r\n            this._selectionController.selectAll();\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _tabKeyHandler: function(eventArgs, isEditing) {\r\n        var editingOptions = this.option(\"editing\");\r\n        var direction = eventArgs.shift ? \"previous\" : \"next\";\r\n        var isCellPositionDefined = isDefined(this._focusedCellPosition) && !isEmptyObject(this._focusedCellPosition);\r\n        var isOriginalHandlerRequired = !isCellPositionDefined || !eventArgs.shift && this._isLastValidCell(this._focusedCellPosition) || eventArgs.shift && this._isFirstValidCell(this._focusedCellPosition);\r\n        var eventTarget = eventArgs.originalEvent.target;\r\n        var focusedViewElement = this._focusedView && this._focusedView.element();\r\n        if (this._handleTabKeyOnMasterDetailCell(eventTarget, direction)) {\r\n            return\r\n        }\r\n        $(focusedViewElement).addClass(FOCUS_STATE_CLASS);\r\n        if (editingOptions && eventTarget && !isOriginalHandlerRequired) {\r\n            if ($(eventTarget).hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\r\n                this._resetFocusedCell()\r\n            }\r\n            if (this._isVirtualColumnRender()) {\r\n                this._processVirtualHorizontalPosition(direction)\r\n            }\r\n            if (isEditing) {\r\n                if (!this._editingCellTabHandler(eventArgs, direction)) {\r\n                    return\r\n                }\r\n            } else if (this._targetCellTabHandler(eventArgs, direction)) {\r\n                isOriginalHandlerRequired = true\r\n            }\r\n        }\r\n        if (isOriginalHandlerRequired) {\r\n            this._editorFactory.loseFocus();\r\n            if (this._editingController.isEditing() && !this._isRowEditMode()) {\r\n                this._resetFocusedCell(true);\r\n                this._resetFocusedView();\r\n                this._closeEditCell()\r\n            }\r\n        } else {\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _getMaxHorizontalOffset: function() {\r\n        var scrollable = this.component.getScrollable();\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var offset = scrollable ? scrollable.scrollWidth() - getWidth(rowsView.element()) : 0;\r\n        return offset\r\n    },\r\n    _isColumnRendered: function(columnIndex) {\r\n        var allVisibleColumns = this._columnsController.getVisibleColumns(null, true);\r\n        var renderedVisibleColumns = this._columnsController.getVisibleColumns();\r\n        var column = allVisibleColumns[columnIndex];\r\n        var result = false;\r\n        if (column) {\r\n            result = renderedVisibleColumns.indexOf(column) >= 0\r\n        }\r\n        return result\r\n    },\r\n    _isFixedColumn: function(columnIndex) {\r\n        var allVisibleColumns = this._columnsController.getVisibleColumns(null, true);\r\n        var column = allVisibleColumns[columnIndex];\r\n        return !!column && !!column.fixed\r\n    },\r\n    _isColumnVirtual: function(columnIndex) {\r\n        var localColumnIndex = columnIndex - this._columnsController.getColumnIndexOffset();\r\n        var visibleColumns = this._columnsController.getVisibleColumns();\r\n        var column = visibleColumns[localColumnIndex];\r\n        return !!column && \"virtual\" === column.command\r\n    },\r\n    _processVirtualHorizontalPosition: function(direction) {\r\n        var scrollable = this.component.getScrollable();\r\n        var columnIndex = this.getColumnIndex();\r\n        var nextColumnIndex;\r\n        var horizontalScrollPosition = 0;\r\n        var needToScroll = false;\r\n        switch (direction) {\r\n            case \"next\":\r\n            case \"nextInRow\":\r\n                var columnsCount = this._getVisibleColumnCount();\r\n                nextColumnIndex = columnIndex + 1;\r\n                horizontalScrollPosition = this.option(\"rtlEnabled\") ? this._getMaxHorizontalOffset() : 0;\r\n                if (\"next\" === direction) {\r\n                    needToScroll = columnsCount === nextColumnIndex || this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                } else {\r\n                    needToScroll = columnsCount > nextColumnIndex && this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                }\r\n                break;\r\n            case \"previous\":\r\n            case \"previousInRow\":\r\n                nextColumnIndex = columnIndex - 1;\r\n                horizontalScrollPosition = this.option(\"rtlEnabled\") ? 0 : this._getMaxHorizontalOffset();\r\n                if (\"previous\" === direction) {\r\n                    var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n                    var leftEdgePosition = nextColumnIndex < 0 && 0 === columnIndexOffset;\r\n                    needToScroll = leftEdgePosition || this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                } else {\r\n                    needToScroll = nextColumnIndex >= 0 && this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                }\r\n        }\r\n        if (needToScroll) {\r\n            scrollable.scrollTo({\r\n                left: horizontalScrollPosition\r\n            })\r\n        } else if (isDefined(nextColumnIndex) && isDefined(direction) && this._isColumnVirtual(nextColumnIndex)) {\r\n            horizontalScrollPosition = this._getHorizontalScrollPositionOffset(direction);\r\n            0 !== horizontalScrollPosition && scrollable.scrollBy({\r\n                left: horizontalScrollPosition,\r\n                top: 0\r\n            })\r\n        }\r\n    },\r\n    _getHorizontalScrollPositionOffset: function(direction) {\r\n        var positionOffset = 0;\r\n        var $currentCell = this._getCell(this._focusedCellPosition);\r\n        var currentCellWidth = $currentCell && getOuterWidth($currentCell);\r\n        if (currentCellWidth > 0) {\r\n            var rtlMultiplier = this.option(\"rtlEnabled\") ? -1 : 1;\r\n            positionOffset = \"nextInRow\" === direction || \"next\" === direction ? currentCellWidth * rtlMultiplier : currentCellWidth * rtlMultiplier * -1\r\n        }\r\n        return positionOffset\r\n    },\r\n    _editingCellTabHandler: function(eventArgs, direction) {\r\n        var eventTarget = eventArgs.originalEvent.target;\r\n        var $cell = this._getCellElementFromTarget(eventTarget);\r\n        var isEditingAllowed;\r\n        var $event = eventArgs.originalEvent;\r\n        var elementType = this._getElementType(eventTarget);\r\n        if ($cell.is(COMMAND_CELL_SELECTOR)) {\r\n            return !this._targetCellTabHandler(eventArgs, direction)\r\n        }\r\n        this._updateFocusedCellPosition($cell);\r\n        var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\r\n        $cell = nextCellInfo.$cell;\r\n        if (!$cell || this._handleTabKeyOnMasterDetailCell($cell, direction)) {\r\n            return false\r\n        }\r\n        var columnsController = this._columnsController;\r\n        var cellIndex = this.getView(\"rowsView\").getCellIndex($cell);\r\n        var columnIndex = cellIndex + columnsController.getColumnIndexOffset();\r\n        var column = columnsController.getVisibleColumns(null, true)[columnIndex];\r\n        var $row = $cell.parent();\r\n        var rowIndex = this._getRowIndex($row);\r\n        var row = this._dataController.items()[rowIndex];\r\n        var editingController = this._editingController;\r\n        if (column && column.allowEditing) {\r\n            var _isDataRow = !row || \"data\" === row.rowType;\r\n            isEditingAllowed = editingController.allowUpdating({\r\n                row: row\r\n            }) ? _isDataRow : row && row.isNewRow\r\n        }\r\n        if (!isEditingAllowed) {\r\n            this._closeEditCell()\r\n        }\r\n        if (this._focusCell($cell, !nextCellInfo.isHighlighted)) {\r\n            if (!this._isRowEditMode() && isEditingAllowed) {\r\n                this._editFocusedCell()\r\n            } else {\r\n                this._focusInteractiveElement($cell, eventArgs.shift)\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _targetCellTabHandler: function(eventArgs, direction) {\r\n        var $event = eventArgs.originalEvent;\r\n        var eventTarget = $event.target;\r\n        var $cell = this._getCellElementFromTarget(eventTarget);\r\n        var $lastInteractiveElement = this._getInteractiveElement($cell, !eventArgs.shift);\r\n        var isOriginalHandlerRequired = false;\r\n        var elementType;\r\n        if (!isEditorCell(this, $cell) && $lastInteractiveElement.length && eventTarget !== $lastInteractiveElement.get(0)) {\r\n            isOriginalHandlerRequired = true\r\n        } else {\r\n            if (void 0 === this._focusedCellPosition.rowIndex && $(eventTarget).hasClass(ROW_CLASS)) {\r\n                this._updateFocusedCellPosition($cell)\r\n            }\r\n            elementType = this._getElementType(eventTarget);\r\n            if (this.isRowFocusType()) {\r\n                this.setCellFocusType();\r\n                if (\"row\" === elementType && isDataRow($(eventTarget))) {\r\n                    eventTarget = this.getFirstValidCellInRow($(eventTarget));\r\n                    elementType = this._getElementType(eventTarget)\r\n                }\r\n            }\r\n            var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\r\n            $cell = nextCellInfo.$cell;\r\n            if (!$cell) {\r\n                return false\r\n            }\r\n            $cell = this._checkNewLineTransition($event, $cell);\r\n            if (!$cell) {\r\n                return false\r\n            }\r\n            this._focusCell($cell, !nextCellInfo.isHighlighted);\r\n            if (!isEditorCell(this, $cell)) {\r\n                this._focusInteractiveElement($cell, eventArgs.shift)\r\n            }\r\n        }\r\n        return isOriginalHandlerRequired\r\n    },\r\n    _getNextCellByTabKey: function($event, direction, elementType) {\r\n        var $cell = this._getNextCell(direction, elementType);\r\n        var args = $cell && this._fireFocusedCellChanging($event, $cell, true);\r\n        if (!args || args.cancel) {\r\n            return {}\r\n        }\r\n        if (args.$newCellElement) {\r\n            $cell = args.$newCellElement\r\n        }\r\n        return {\r\n            $cell: $cell,\r\n            isHighlighted: args.isHighlighted\r\n        }\r\n    },\r\n    _checkNewLineTransition: function($event, $cell) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = $cell.parent();\r\n        if (rowIndex !== this._getRowIndex($row)) {\r\n            var cellPosition = this._getCellPosition($cell);\r\n            var args = this._fireFocusedRowChanging($event, $row);\r\n            if (args.cancel) {\r\n                return\r\n            }\r\n            if (args.rowIndexChanged) {\r\n                this.setFocusedColumnIndex(cellPosition.columnIndex);\r\n                $cell = this._getFocusedCell()\r\n            }\r\n        }\r\n        return $cell\r\n    },\r\n    _enterKeyHandler: function(eventArgs, isEditing) {\r\n        var $cell = this._getFocusedCell();\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        if (this.option(\"grouping.allowCollapsing\") && isGroupRow($row) || this.option(\"masterDetail.enabled\") && $cell && $cell.hasClass(COMMAND_EXPAND_CLASS)) {\r\n            var key = this._dataController.getKeyByRowIndex(rowIndex);\r\n            var item = this._dataController.items()[rowIndex];\r\n            if (void 0 !== key && item && item.data && !item.data.isContinuation) {\r\n                this._dataController.changeRowExpand(key)\r\n            }\r\n        } else {\r\n            this._processEnterKeyForDataCell(eventArgs, isEditing)\r\n        }\r\n    },\r\n    _processEnterKeyForDataCell: function(eventArgs, isEditing) {\r\n        var direction = this._getEnterKeyDirection(eventArgs);\r\n        var allowEditingOnEnterKey = this._allowEditingOnEnterKey();\r\n        if (isEditing || !allowEditingOnEnterKey && direction) {\r\n            this._handleEnterKeyEditingCell(eventArgs.originalEvent);\r\n            if (\"next\" === direction || \"previous\" === direction) {\r\n                this._targetCellTabHandler(eventArgs, direction)\r\n            } else if (\"upArrow\" === direction || \"downArrow\" === direction) {\r\n                this._navigateNextCell(eventArgs.originalEvent, direction)\r\n            }\r\n        } else if (allowEditingOnEnterKey) {\r\n            this._startEditing(eventArgs)\r\n        }\r\n    },\r\n    _getEnterKeyDirection: function(eventArgs) {\r\n        var enterKeyDirection = this.option(\"keyboardNavigation.enterKeyDirection\");\r\n        var isShift = eventArgs.shift;\r\n        if (\"column\" === enterKeyDirection) {\r\n            return isShift ? \"upArrow\" : \"downArrow\"\r\n        }\r\n        if (\"row\" === enterKeyDirection) {\r\n            return isShift ? \"previous\" : \"next\"\r\n        }\r\n    },\r\n    _handleEnterKeyEditingCell: function(event) {\r\n        var target = event.target;\r\n        var $cell = this._getCellElementFromTarget(target);\r\n        var isRowEditMode = this._isRowEditMode();\r\n        this._updateFocusedCellPosition($cell);\r\n        if (isRowEditMode) {\r\n            this._focusEditFormCell($cell);\r\n            setTimeout(this._editingController.saveEditData.bind(this._editingController))\r\n        } else {\r\n            eventsEngine.trigger($(target), \"change\");\r\n            this._closeEditCell();\r\n            event.preventDefault()\r\n        }\r\n    },\r\n    _escapeKeyHandler: function(eventArgs, isEditing) {\r\n        var $cell = this._getCellElementFromTarget(eventArgs.originalEvent.target);\r\n        if (isEditing) {\r\n            this._updateFocusedCellPosition($cell);\r\n            if (!this._isRowEditMode()) {\r\n                if (\"cell\" === this._editingController.getEditMode()) {\r\n                    this._editingController.cancelEditData()\r\n                } else {\r\n                    this._closeEditCell()\r\n                }\r\n            } else {\r\n                this._focusEditFormCell($cell);\r\n                this._editingController.cancelEditData();\r\n                if (0 === this._dataController.items().length) {\r\n                    this._resetFocusedCell();\r\n                    this._editorFactory.loseFocus()\r\n                }\r\n            }\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _ctrlFKeyHandler: function(eventArgs) {\r\n        if (this.option(\"searchPanel.visible\")) {\r\n            var searchTextEditor = this._headerPanel.getSearchTextEditor();\r\n            if (searchTextEditor) {\r\n                searchTextEditor.focus();\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        }\r\n    },\r\n    _f2KeyHandler: function() {\r\n        var isEditing = this._editingController.isEditing();\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        if (!isEditing && isDataRow($row)) {\r\n            this._startEditing()\r\n        }\r\n    },\r\n    _navigateNextCell: function($event, keyCode) {\r\n        var $cell = this._getNextCell(keyCode);\r\n        var directionCode = this._getDirectionCodeByKey(keyCode);\r\n        var isCellValid = $cell && this._isCellValid($cell);\r\n        var result = isCellValid ? this._arrowKeysHandlerFocusCell($event, $cell, directionCode) : false;\r\n        return result\r\n    },\r\n    _arrowKeysHandlerFocusCell: function($event, $nextCell, direction) {\r\n        var isVerticalDirection = \"prevRow\" === direction || \"nextRow\" === direction;\r\n        var args = this._fireFocusChangingEvents($event, $nextCell, isVerticalDirection, true);\r\n        $nextCell = args.$newCellElement;\r\n        if (!args.cancel && this._isCellValid($nextCell)) {\r\n            this._focus($nextCell, !args.isHighlighted);\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    _beginFastEditing: function(originalEvent, isDeleting) {\r\n        if (!this._isFastEditingAllowed() || originalEvent.altKey || originalEvent.ctrlKey || this._editingController.isEditing()) {\r\n            return false\r\n        }\r\n        if (isDeleting) {\r\n            this._startEditing(originalEvent, FAST_EDITING_DELETE_KEY)\r\n        } else {\r\n            var key = originalEvent.key;\r\n            var keyCode = originalEvent.keyCode || originalEvent.which;\r\n            var fastEditingKey = key || keyCode && String.fromCharCode(keyCode);\r\n            if (fastEditingKey && (1 === fastEditingKey.length || fastEditingKey === FAST_EDITING_DELETE_KEY)) {\r\n                this._startEditing(originalEvent, fastEditingKey)\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _pointerEventHandler: function(e) {\r\n        var event = e.event || e;\r\n        var $target = $(event.currentTarget);\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var focusedViewElement = rowsView && rowsView.element();\r\n        var $parent = $target.parent();\r\n        var isInteractiveElement = $(event.target).is(INTERACTIVE_ELEMENTS_SELECTOR);\r\n        var isRevertButton = !!$(event.target).closest(\".\".concat(REVERT_BUTTON_CLASS)).length;\r\n        var isExpandCommandCell = $target.hasClass(COMMAND_EXPAND_CLASS);\r\n        if (!this._isEventInCurrentGrid(event)) {\r\n            return\r\n        }\r\n        if (!isRevertButton && (this._isCellValid($target, !isInteractiveElement) || isExpandCommandCell)) {\r\n            $target = this._isInsideEditForm($target) ? $(event.target) : $target;\r\n            this._focusView();\r\n            $(focusedViewElement).removeClass(FOCUS_STATE_CLASS);\r\n            if ($parent.hasClass(FREESPACE_ROW_CLASS)) {\r\n                this._updateFocusedCellPosition($target);\r\n                this._applyTabIndexToElement(this._focusedView.element());\r\n                this._focusedView.focus()\r\n            } else if (!this._isMasterDetailCell($target)) {\r\n                this._clickTargetCellHandler(event, $target)\r\n            } else {\r\n                this._updateFocusedCellPosition($target)\r\n            }\r\n        } else if ($target.is(\"td\")) {\r\n            this._resetFocusedCell()\r\n        }\r\n    },\r\n    _clickTargetCellHandler: function(event, $cell) {\r\n        var columnIndex = this.getView(\"rowsView\").getCellIndex($cell);\r\n        var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n        var isCellEditMode = this._isCellEditMode();\r\n        this.setCellFocusType();\r\n        var args = this._fireFocusChangingEvents(event, $cell, true);\r\n        $cell = args.$newCellElement;\r\n        if (!args.cancel) {\r\n            if (args.resetFocusedRow) {\r\n                this.getController(\"focus\")._resetFocusedRow();\r\n                return\r\n            }\r\n            if (args.rowIndexChanged) {\r\n                $cell = this._getFocusedCell()\r\n            }\r\n            if (!args.isHighlighted && !isCellEditMode) {\r\n                this.setRowFocusType()\r\n            }\r\n            this._updateFocusedCellPosition($cell);\r\n            if (this._allowRowUpdating() && isCellEditMode && column && column.allowEditing) {\r\n                this._isNeedFocus = false;\r\n                this._isHiddenFocus = false\r\n            } else {\r\n                var $target = event && $(event.target).closest(NON_FOCUSABLE_ELEMENTS_SELECTOR + \", td\");\r\n                var skipFocusEvent = $target && $target.not($cell).is(NON_FOCUSABLE_ELEMENTS_SELECTOR);\r\n                var isEditor = !!column && !column.command && $cell.hasClass(EDITOR_CELL_CLASS);\r\n                var isDisabled = !isEditor && (!args.isHighlighted || skipFocusEvent);\r\n                this._focus($cell, isDisabled, skipFocusEvent)\r\n            }\r\n        } else {\r\n            this.setRowFocusType();\r\n            this.setFocusedRowIndex(args.prevRowIndex);\r\n            $cell = this._getFocusedCell();\r\n            if (this._editingController.isEditing() && isCellEditMode) {\r\n                this._closeEditCell()\r\n            }\r\n        }\r\n    },\r\n    _allowRowUpdating: function() {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var row = this._dataController.items()[rowIndex];\r\n        return this._editingController.allowUpdating({\r\n            row: row\r\n        }, \"click\")\r\n    },\r\n    focus: function(element) {\r\n        var activeElementSelector;\r\n        var focusedRowEnabled = this.option(\"focusedRowEnabled\");\r\n        var isHighlighted = isCellElement($(element));\r\n        if (!element) {\r\n            activeElementSelector = \".dx-datagrid-rowsview .dx-row[tabindex]\";\r\n            if (!focusedRowEnabled) {\r\n                activeElementSelector += \", .dx-datagrid-rowsview .dx-row > td[tabindex]\"\r\n            }\r\n            element = this.component.$element().find(activeElementSelector).first()\r\n        }\r\n        element && this._focusElement($(element), isHighlighted)\r\n    },\r\n    getFocusedView: function() {\r\n        return this._focusedView\r\n    },\r\n    setupFocusedView: function() {\r\n        if (this.isKeyboardEnabled() && !isDefined(this._focusedView)) {\r\n            this._focusView()\r\n        }\r\n    },\r\n    _focusElement: function($element, isHighlighted) {\r\n        var rowsViewElement = $(this._getRowsViewElement());\r\n        var $focusedView = $element.closest(rowsViewElement);\r\n        var isRowFocusType = this.isRowFocusType();\r\n        var args = {};\r\n        if (!$focusedView.length || isCellElement($element) && !this._isCellValid($element)) {\r\n            return\r\n        }\r\n        this._focusView();\r\n        this._isNeedFocus = true;\r\n        this._isNeedScroll = true;\r\n        if (isCellElement($element) || isGroupRow($element)) {\r\n            this.setCellFocusType();\r\n            args = this._fireFocusChangingEvents(null, $element, false, isHighlighted);\r\n            $element = args.$newCellElement;\r\n            if (isRowFocusType && !args.isHighlighted) {\r\n                this.setRowFocusType()\r\n            }\r\n        }\r\n        if (!args.cancel) {\r\n            this._focus($element, !args.isHighlighted);\r\n            this._focusInteractiveElement($element)\r\n        }\r\n    },\r\n    _getFocusedViewByElement: function($element) {\r\n        var view = this.getFocusedView();\r\n        var $view = view && $(view.element());\r\n        return $element && 0 !== $element.closest($view).length\r\n    },\r\n    _focusView: function() {\r\n        this._focusedView = this.getView(\"rowsView\")\r\n    },\r\n    _resetFocusedView: function() {\r\n        this.setRowFocusType();\r\n        this._focusedView = null\r\n    },\r\n    _focusInteractiveElement: function($cell, isLast) {\r\n        if (!$cell) {\r\n            return\r\n        }\r\n        var $focusedElement = this._getInteractiveElement($cell, isLast);\r\n        gridCoreUtils.focusAndSelectElement(this, $focusedElement)\r\n    },\r\n    _focus: function($cell, disableFocus, skipFocusEvent) {\r\n        var $row = $cell && !$cell.hasClass(ROW_CLASS) ? $cell.closest(\".\".concat(ROW_CLASS)) : $cell;\r\n        if ($row && isNotFocusedRow($row)) {\r\n            return\r\n        }\r\n        var focusedView = this._focusedView;\r\n        var $focusViewElement = focusedView && focusedView.element();\r\n        var $focusElement;\r\n        this._isHiddenFocus = disableFocus;\r\n        var isRowFocus = isGroupRow($row) || this.isRowFocusType();\r\n        if (isRowFocus) {\r\n            $focusElement = $row;\r\n            if (focusedView) {\r\n                this.setFocusedRowIndex(this._getRowIndex($row))\r\n            }\r\n        } else if (isCellElement($cell)) {\r\n            $focusElement = $cell;\r\n            this._updateFocusedCellPosition($cell)\r\n        }\r\n        if ($focusElement) {\r\n            if ($focusViewElement) {\r\n                $focusViewElement.find(\".dx-row[tabindex], .dx-row > td[tabindex]\").not($focusElement).removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabindex\")\r\n            }\r\n            eventsEngine.one($focusElement, \"blur\", e => {\r\n                if (e.relatedTarget) {\r\n                    $focusElement.removeClass(CELL_FOCUS_DISABLED_CLASS)\r\n                }\r\n            });\r\n            if (!skipFocusEvent) {\r\n                this._applyTabIndexToElement($focusElement);\r\n                eventsEngine.trigger($focusElement, \"focus\")\r\n            }\r\n            if (disableFocus) {\r\n                $focusElement.addClass(CELL_FOCUS_DISABLED_CLASS);\r\n                if (isRowFocus) {\r\n                    $cell.addClass(CELL_FOCUS_DISABLED_CLASS)\r\n                }\r\n            } else {\r\n                this._editorFactory.focus($focusElement)\r\n            }\r\n        }\r\n    },\r\n    _updateFocus: function(isRenderView) {\r\n        this._updateFocusTimeout = setTimeout(() => {\r\n            var editingController = this._editingController;\r\n            var isCellEditMode = editingController.getEditMode() === EDIT_MODE_CELL;\r\n            var isBatchEditMode = editingController.getEditMode() === EDIT_MODE_BATCH;\r\n            if (isCellEditMode && editingController.hasChanges() || isBatchEditMode && editingController.isNewRowInEditMode()) {\r\n                editingController._focusEditingCell();\r\n                return\r\n            }\r\n            var $cell = this._getFocusedCell();\r\n            var isEditing = editingController.isEditing();\r\n            if ($cell && !(this._isMasterDetailCell($cell) && !this._isRowEditMode())) {\r\n                if (this._hasSkipRow($cell.parent())) {\r\n                    var direction = this._focusedCellPosition && this._focusedCellPosition.rowIndex > 0 ? \"upArrow\" : \"downArrow\";\r\n                    $cell = this._getNextCell(direction)\r\n                }\r\n                if (isElementDefined($cell)) {\r\n                    if (isRenderView && !isEditing && this._checkCellOverlapped($cell)) {\r\n                        return\r\n                    }\r\n                    if ($cell.is(\"td\") || $cell.hasClass(this.addWidgetPrefix(EDIT_FORM_ITEM_CLASS))) {\r\n                        var isCommandCell = $cell.is(COMMAND_CELL_SELECTOR);\r\n                        var $focusedElementInsideCell = $cell.find(\":focus\");\r\n                        var isFocusedElementDefined = isElementDefined($focusedElementInsideCell);\r\n                        if ((isRenderView || !isCommandCell) && this._editorFactory.focus()) {\r\n                            if (isCommandCell && isFocusedElementDefined) {\r\n                                gridCoreUtils.focusAndSelectElement(this, $focusedElementInsideCell);\r\n                                return\r\n                            }!isFocusedElementDefined && this._focus($cell)\r\n                        } else if (!isFocusedElementDefined && (this._isNeedFocus || this._isHiddenFocus)) {\r\n                            this._focus($cell, this._isHiddenFocus)\r\n                        }\r\n                        if (isEditing) {\r\n                            this._focusInteractiveElement.bind(this)($cell)\r\n                        }\r\n                    } else {\r\n                        eventsEngine.trigger($cell, \"focus\")\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _checkCellOverlapped: function($cell) {\r\n        var cellOffset = $cell.offset();\r\n        var hasScrollable = this.component.getScrollable && this.component.getScrollable();\r\n        var isOverlapped = false;\r\n        if (hasScrollable) {\r\n            if (cellOffset.left < 0) {\r\n                isOverlapped = getWidth($cell) + cellOffset.left <= 0\r\n            } else if (cellOffset.top < 0) {\r\n                isOverlapped = getHeight($cell) + cellOffset.top <= 0\r\n            }\r\n        }\r\n        return isOverlapped\r\n    },\r\n    _getFocusedCell: function() {\r\n        return $(this._getCell(this._focusedCellPosition))\r\n    },\r\n    _updateFocusedCellPositionByTarget: function(target) {\r\n        var _this$_focusedCellPos;\r\n        var elementType = this._getElementType(target);\r\n        if (\"row\" === elementType && isDefined(null === (_this$_focusedCellPos = this._focusedCellPosition) || void 0 === _this$_focusedCellPos ? void 0 : _this$_focusedCellPos.columnIndex)) {\r\n            var $row = $(target);\r\n            this._focusedView && isGroupRow($row) && this.setFocusedRowIndex(this._getRowIndex($row))\r\n        } else {\r\n            this._updateFocusedCellPosition(this._getCellElementFromTarget(target))\r\n        }\r\n    },\r\n    _updateFocusedCellPosition: function($cell, direction) {\r\n        var position = this._getCellPosition($cell, direction);\r\n        if (position) {\r\n            if (!$cell.length || position.rowIndex >= 0 && position.columnIndex >= 0) {\r\n                this.setFocusedCellPosition(position.rowIndex, position.columnIndex)\r\n            }\r\n        }\r\n        return position\r\n    },\r\n    _getFocusedColumnIndexOffset: function(columnIndex) {\r\n        var offset = 0;\r\n        var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n        if (column && column.fixed) {\r\n            offset = this._getFixedColumnIndexOffset(column)\r\n        } else if (columnIndex >= 0) {\r\n            offset = this._columnsController.getColumnIndexOffset()\r\n        }\r\n        return offset\r\n    },\r\n    _getFixedColumnIndexOffset: function(column) {\r\n        var offset = isFixedColumnIndexOffsetRequired(this, column) ? this._getVisibleColumnCount() - this._columnsController.getVisibleColumns().length : 0;\r\n        return offset\r\n    },\r\n    _getCellPosition: function($cell, direction) {\r\n        var columnIndex;\r\n        var $row = isElementDefined($cell) && $cell.closest(\"tr\");\r\n        var rowsView = this.getView(\"rowsView\");\r\n        if (isElementDefined($row)) {\r\n            var rowIndex = this._getRowIndex($row);\r\n            columnIndex = rowsView.getCellIndex($cell, rowIndex);\r\n            columnIndex += this._getFocusedColumnIndexOffset(columnIndex);\r\n            if (direction) {\r\n                columnIndex = \"previous\" === direction ? columnIndex - 1 : columnIndex + 1;\r\n                columnIndex = this._applyColumnIndexBoundaries(columnIndex)\r\n            }\r\n            return {\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            }\r\n        }\r\n    },\r\n    _focusCell: function($cell, isDisabled) {\r\n        if (this._isCellValid($cell)) {\r\n            this._focus($cell, isDisabled);\r\n            return true\r\n        }\r\n    },\r\n    _focusEditFormCell: function($cell) {\r\n        if ($cell.hasClass(MASTER_DETAIL_CELL_CLASS)) {\r\n            this._editorFactory.focus($cell, true)\r\n        }\r\n    },\r\n    _resetFocusedCell: function(preventScroll) {\r\n        var _this$_focusedView;\r\n        var $cell = this._getFocusedCell();\r\n        isElementDefined($cell) && $cell.removeAttr(\"tabindex\");\r\n        this._isNeedFocus = false;\r\n        this._isNeedScroll = false;\r\n        this._focusedCellPosition = {};\r\n        clearTimeout(this._updateFocusTimeout);\r\n        null === (_this$_focusedView = this._focusedView) || void 0 === _this$_focusedView ? void 0 : _this$_focusedView.renderFocusState({\r\n            preventScroll: preventScroll\r\n        })\r\n    },\r\n    restoreFocusableElement: function(rowIndex, $event) {\r\n        var args;\r\n        var $rowElement;\r\n        var isUpArrow = isDefined(rowIndex);\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var $rowsViewElement = rowsView.element();\r\n        var columnIndex = this._focusedCellPosition.columnIndex;\r\n        var rowIndexOffset = this._dataController.getRowIndexOffset();\r\n        rowIndex = isUpArrow ? rowIndex : rowsView.getTopVisibleItemIndex() + rowIndexOffset;\r\n        if (!isUpArrow) {\r\n            this._editorFactory.loseFocus();\r\n            this._applyTabIndexToElement($rowsViewElement);\r\n            eventsEngine.trigger($rowsViewElement, \"focus\")\r\n        } else {\r\n            $rowElement = rowsView.getRow(rowIndex - rowIndexOffset);\r\n            args = this._fireFocusedRowChanging($event, $rowElement);\r\n            if (!args.cancel && args.rowIndexChanged) {\r\n                rowIndex = args.newRowIndex\r\n            }\r\n        }\r\n        if (!isUpArrow || !args.cancel) {\r\n            this.setFocusedCellPosition(rowIndex, columnIndex)\r\n        }\r\n        isUpArrow && this._updateFocus()\r\n    },\r\n    _getNewPositionByCode: function(cellPosition, elementType, code) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var rowIndex = cellPosition.rowIndex;\r\n        var visibleColumnsCount;\r\n        if (void 0 === cellPosition.rowIndex && \"next\" === code) {\r\n            return {\r\n                columnIndex: 0,\r\n                rowIndex: 0\r\n            }\r\n        }\r\n        switch (code) {\r\n            case \"nextInRow\":\r\n            case \"next\":\r\n                visibleColumnsCount = this._getVisibleColumnCount();\r\n                if (columnIndex < visibleColumnsCount - 1 && \"row\" !== elementType && this._hasValidCellAfterPosition({\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })) {\r\n                    columnIndex++\r\n                } else if (!this._isLastRow(rowIndex) && \"next\" === code) {\r\n                    columnIndex = 0;\r\n                    rowIndex++\r\n                }\r\n                break;\r\n            case \"previousInRow\":\r\n            case \"previous\":\r\n                if (columnIndex > 0 && \"row\" !== elementType && this._hasValidCellBeforePosition({\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })) {\r\n                    columnIndex--\r\n                } else if (rowIndex > 0 && \"previous\" === code) {\r\n                    rowIndex--;\r\n                    visibleColumnsCount = this._getVisibleColumnCount();\r\n                    columnIndex = visibleColumnsCount - 1\r\n                }\r\n                break;\r\n            case \"upArrow\":\r\n                rowIndex = rowIndex > 0 ? rowIndex - 1 : rowIndex;\r\n                break;\r\n            case \"downArrow\":\r\n                rowIndex = !this._isLastRow(rowIndex) ? rowIndex + 1 : rowIndex\r\n        }\r\n        return {\r\n            columnIndex: columnIndex,\r\n            rowIndex: rowIndex\r\n        }\r\n    },\r\n    setFocusedCellPosition: function(rowIndex, columnIndex) {\r\n        this.setFocusedRowIndex(rowIndex);\r\n        this.setFocusedColumnIndex(columnIndex)\r\n    },\r\n    setFocusedRowIndex: function(rowIndex) {\r\n        if (!this._focusedCellPosition) {\r\n            this._focusedCellPosition = {}\r\n        }\r\n        this._focusedCellPosition.rowIndex = rowIndex\r\n    },\r\n    setFocusedColumnIndex: function(columnIndex) {\r\n        if (!this._focusedCellPosition) {\r\n            this._focusedCellPosition = {}\r\n        }\r\n        this._focusedCellPosition.columnIndex = columnIndex\r\n    },\r\n    getRowIndex: function() {\r\n        return this._focusedCellPosition ? this._focusedCellPosition.rowIndex : -1\r\n    },\r\n    getColumnIndex: function() {\r\n        return this._focusedCellPosition ? this._focusedCellPosition.columnIndex : -1\r\n    },\r\n    getVisibleRowIndex: function() {\r\n        var rowIndex = this._focusedCellPosition && this._focusedCellPosition.rowIndex;\r\n        if (!isDefined(rowIndex) || rowIndex < 0) {\r\n            return -1\r\n        }\r\n        return rowIndex - this._dataController.getRowIndexOffset()\r\n    },\r\n    getVisibleColumnIndex: function() {\r\n        var columnIndex = this._focusedCellPosition && this._focusedCellPosition.columnIndex;\r\n        if (!isDefined(columnIndex)) {\r\n            return -1\r\n        }\r\n        return columnIndex - this._columnsController.getColumnIndexOffset()\r\n    },\r\n    _applyColumnIndexBoundaries: function(columnIndex) {\r\n        var visibleColumnsCount = this._getVisibleColumnCount();\r\n        if (columnIndex < 0) {\r\n            columnIndex = 0\r\n        } else if (columnIndex >= visibleColumnsCount) {\r\n            columnIndex = visibleColumnsCount - 1\r\n        }\r\n        return columnIndex\r\n    },\r\n    _isCellByPositionValid: function(cellPosition) {\r\n        var $cell = $(this._getCell(cellPosition));\r\n        return this._isCellValid($cell)\r\n    },\r\n    _isLastRow: function(rowIndex) {\r\n        var dataController = this._dataController;\r\n        if (this._isVirtualRowRender()) {\r\n            return rowIndex >= dataController.getMaxRowIndex()\r\n        }\r\n        return rowIndex === dataController.items().length - 1\r\n    },\r\n    _isFirstValidCell: function(cellPosition) {\r\n        var isFirstValidCell = false;\r\n        if (0 === cellPosition.rowIndex && cellPosition.columnIndex >= 0) {\r\n            isFirstValidCell = isFirstValidCell || !this._hasValidCellBeforePosition(cellPosition)\r\n        }\r\n        return isFirstValidCell\r\n    },\r\n    _hasValidCellBeforePosition: function(cellPosition) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var hasValidCells = false;\r\n        while (columnIndex > 0 && !hasValidCells) {\r\n            var checkingPosition = {\r\n                columnIndex: --columnIndex,\r\n                rowIndex: cellPosition.rowIndex\r\n            };\r\n            hasValidCells = this._isCellByPositionValid(checkingPosition)\r\n        }\r\n        return hasValidCells\r\n    },\r\n    _hasValidCellAfterPosition: function(cellPosition) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var hasValidCells = false;\r\n        var visibleColumnCount = this._getVisibleColumnCount();\r\n        while (columnIndex < visibleColumnCount - 1 && !hasValidCells) {\r\n            var checkingPosition = {\r\n                columnIndex: ++columnIndex,\r\n                rowIndex: cellPosition.rowIndex\r\n            };\r\n            hasValidCells = this._isCellByPositionValid(checkingPosition)\r\n        }\r\n        return hasValidCells\r\n    },\r\n    _isLastValidCell: function(cellPosition) {\r\n        var nextColumnIndex = cellPosition.columnIndex >= 0 ? cellPosition.columnIndex + 1 : 0;\r\n        var rowIndex = cellPosition.rowIndex;\r\n        var checkingPosition = {\r\n            columnIndex: nextColumnIndex,\r\n            rowIndex: rowIndex\r\n        };\r\n        var visibleRows = this._dataController.getVisibleRows();\r\n        var row = visibleRows && visibleRows[rowIndex];\r\n        var isLastRow = this._isLastRow(rowIndex);\r\n        if (!isLastRow) {\r\n            return false\r\n        }\r\n        if (row && \"group\" === row.rowType && cellPosition.columnIndex > 0) {\r\n            return true\r\n        }\r\n        if (cellPosition.columnIndex === this._getVisibleColumnCount() - 1) {\r\n            return true\r\n        }\r\n        if (this._isCellByPositionValid(checkingPosition)) {\r\n            return false\r\n        }\r\n        return this._isLastValidCell(checkingPosition)\r\n    },\r\n    _isCellValid: function($cell, isClick) {\r\n        if (isElementDefined($cell)) {\r\n            var rowsView = this.getView(\"rowsView\");\r\n            var $row = $cell.parent();\r\n            var columnsController = this._columnsController;\r\n            var columnIndex = rowsView.getCellIndex($cell) + columnsController.getColumnIndexOffset();\r\n            var column = columnsController.getVisibleColumns(null, true)[columnIndex];\r\n            var visibleColumnCount = this._getVisibleColumnCount();\r\n            var editingController = this._editingController;\r\n            var isMasterDetailRow = isDetailRow($row);\r\n            var isShowWhenGrouped = column && column.showWhenGrouped;\r\n            var isDataCell = column && !$cell.hasClass(COMMAND_EXPAND_CLASS) && isDataRow($row);\r\n            if (this._isMasterDetailCell($cell)) {\r\n                return true\r\n            }\r\n            if (visibleColumnCount > columnIndex && (!isMasterDetailRow && column && (!isDefined(column.groupIndex) || isShowWhenGrouped && isDataCell) || parseInt($cell.attr(\"colspan\")) > 1)) {\r\n                var rowItems = this._dataController.items();\r\n                var visibleRowIndex = rowsView.getRowIndex($row);\r\n                var row = rowItems[visibleRowIndex];\r\n                var isCellEditing = editingController && this._isCellEditMode() && editingController.isEditing();\r\n                var isRowEditingInCurrentRow = editingController && editingController.isEditRow(visibleRowIndex);\r\n                var isEditing = isRowEditingInCurrentRow || isCellEditing;\r\n                if (column.command) {\r\n                    if (this._isLegacyNavigation()) {\r\n                        return !isEditing && \"expand\" === column.command\r\n                    }\r\n                    if (isCellEditing) {\r\n                        return false\r\n                    }\r\n                    if (isRowEditingInCurrentRow) {\r\n                        return \"select\" !== column.command\r\n                    }\r\n                    return !isEditing\r\n                }\r\n                if (isCellEditing && row && \"data\" !== row.rowType) {\r\n                    return false\r\n                }\r\n                return !isEditing || column.allowEditing || isClick\r\n            }\r\n        }\r\n    },\r\n    getFirstValidCellInRow: function($row, columnIndex) {\r\n        var $cells = $row.find(\"> td\");\r\n        var $cell;\r\n        var $result;\r\n        columnIndex = columnIndex || 0;\r\n        for (var i = columnIndex; i < $cells.length; ++i) {\r\n            $cell = $cells.eq(i);\r\n            if (this._isCellValid($cell)) {\r\n                $result = $cell;\r\n                break\r\n            }\r\n        }\r\n        return $result\r\n    },\r\n    _getNextCell: function(keyCode, elementType, cellPosition) {\r\n        var focusedCellPosition = cellPosition || this._focusedCellPosition;\r\n        var isRowFocusType = this.isRowFocusType();\r\n        var includeCommandCells = isRowFocusType || inArray(keyCode, [\"next\", \"previous\"]) > -1;\r\n        var $cell;\r\n        var $row;\r\n        if (this._focusedView && focusedCellPosition) {\r\n            var newFocusedCellPosition = this._getNewPositionByCode(focusedCellPosition, elementType, keyCode);\r\n            $cell = $(this._getCell(newFocusedCellPosition));\r\n            var isLastCellOnDirection = \"previous\" === keyCode ? this._isFirstValidCell(newFocusedCellPosition) : this._isLastValidCell(newFocusedCellPosition);\r\n            if (isElementDefined($cell) && !this._isCellValid($cell) && this._isCellInRow(newFocusedCellPosition, includeCommandCells) && !isLastCellOnDirection) {\r\n                if (isRowFocusType) {\r\n                    $cell = this.getFirstValidCellInRow($cell.parent(), newFocusedCellPosition.columnIndex)\r\n                } else {\r\n                    $cell = this._getNextCell(keyCode, \"cell\", newFocusedCellPosition)\r\n                }\r\n            }\r\n            $row = isElementDefined($cell) && $cell.parent();\r\n            if (this._hasSkipRow($row)) {\r\n                var rowIndex = this._getRowIndex($row);\r\n                if (!this._isLastRow(rowIndex)) {\r\n                    $cell = this._getNextCell(keyCode, \"row\", {\r\n                        columnIndex: focusedCellPosition.columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n            return isElementDefined($cell) ? $cell : null\r\n        }\r\n        return null\r\n    },\r\n    _startEditing: function(eventArgs, fastEditingKey) {\r\n        var focusedCellPosition = this._focusedCellPosition;\r\n        var visibleRowIndex = this.getVisibleRowIndex();\r\n        var visibleColumnIndex = this.getVisibleColumnIndex();\r\n        var row = this._dataController.items()[visibleRowIndex];\r\n        var column = this._columnsController.getVisibleColumns()[visibleColumnIndex];\r\n        if (this._isAllowEditing(row, column)) {\r\n            if (this._isRowEditMode()) {\r\n                this._editingController.editRow(visibleRowIndex)\r\n            } else if (focusedCellPosition) {\r\n                this._startEditCell(eventArgs, fastEditingKey)\r\n            }\r\n        }\r\n    },\r\n    _isAllowEditing: function(row, column) {\r\n        return this._editingController.allowUpdating({\r\n            row: row\r\n        }) && column && column.allowEditing\r\n    },\r\n    _editFocusedCell: function() {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var colIndex = this.getVisibleColumnIndex();\r\n        return this._editingController.editCell(rowIndex, colIndex)\r\n    },\r\n    _startEditCell: function(eventArgs, fastEditingKey) {\r\n        this._fastEditingStarted = isDefined(fastEditingKey);\r\n        var editResult = this._editFocusedCell();\r\n        if (this._isFastEditingStarted()) {\r\n            if (true === editResult) {\r\n                this._editingCellHandler(eventArgs, fastEditingKey)\r\n            } else if (editResult && editResult.done) {\r\n                var editorValue = fastEditingKey !== FAST_EDITING_DELETE_KEY ? fastEditingKey : \"\";\r\n                editResult.done(() => this._editingCellHandler(eventArgs, editorValue))\r\n            }\r\n        }\r\n    },\r\n    _editingCellHandler: function(eventArgs, editorValue) {\r\n        var _$input$get$select, _$input$get;\r\n        var $input = this._getFocusedCell().find(INTERACTIVE_ELEMENTS_SELECTOR).eq(0);\r\n        var keyDownEvent = createEvent(eventArgs, {\r\n            type: \"keydown\",\r\n            target: $input.get(0)\r\n        });\r\n        var keyPressEvent = createEvent(eventArgs, {\r\n            type: \"keypress\",\r\n            target: $input.get(0)\r\n        });\r\n        var inputEvent = createEvent(eventArgs, {\r\n            type: \"input\",\r\n            target: $input.get(0)\r\n        });\r\n        null === (_$input$get$select = (_$input$get = $input.get(0)).select) || void 0 === _$input$get$select ? void 0 : _$input$get$select.call(_$input$get);\r\n        eventsEngine.trigger($input, keyDownEvent);\r\n        if (!keyDownEvent.isDefaultPrevented()) {\r\n            eventsEngine.trigger($input, keyPressEvent);\r\n            if (!keyPressEvent.isDefaultPrevented()) {\r\n                var timeout = browser.mozilla ? 25 : 0;\r\n                setTimeout(() => {\r\n                    $input.val(editorValue);\r\n                    var $widgetContainer = $input.closest(\".\".concat(WIDGET_CLASS));\r\n                    eventsEngine.off($widgetContainer, \"focusout\");\r\n                    eventsEngine.one($widgetContainer, \"focusout\", (function() {\r\n                        eventsEngine.trigger($input, \"change\")\r\n                    }));\r\n                    eventsEngine.trigger($input, inputEvent)\r\n                }, timeout)\r\n            }\r\n        }\r\n    },\r\n    _fireFocusChangingEvents: function($event, $cell, fireRowEvent, isHighlighted) {\r\n        var args = {};\r\n        var cellPosition = this._getCellPosition($cell) || {};\r\n        if (this.isCellFocusType()) {\r\n            args = this._fireFocusedCellChanging($event, $cell, isHighlighted);\r\n            if (!args.cancel) {\r\n                cellPosition.columnIndex = args.newColumnIndex;\r\n                cellPosition.rowIndex = args.newRowIndex;\r\n                isHighlighted = args.isHighlighted;\r\n                $cell = $(this._getCell(cellPosition))\r\n            }\r\n        }\r\n        if (!args.cancel && fireRowEvent && $cell) {\r\n            args = this._fireFocusedRowChanging($event, $cell.parent());\r\n            if (!args.cancel) {\r\n                cellPosition.rowIndex = args.newRowIndex;\r\n                args.isHighlighted = isHighlighted\r\n            }\r\n        }\r\n        args.$newCellElement = $(this._getCell(cellPosition));\r\n        if (!args.$newCellElement.length) {\r\n            args.$newCellElement = $cell\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedCellChanging: function($event, $cellElement, isHighlighted) {\r\n        var prevCellIndex = this.option(\"focusedColumnIndex\");\r\n        var prevRowIndex = this.option(\"focusedRowIndex\");\r\n        var cellPosition = this._getCellPosition($cellElement);\r\n        var columnIndex = cellPosition ? cellPosition.columnIndex : -1;\r\n        var rowIndex = cellPosition ? cellPosition.rowIndex : -1;\r\n        var args = {\r\n            cellElement: $cellElement,\r\n            prevColumnIndex: prevCellIndex,\r\n            prevRowIndex: prevRowIndex,\r\n            newColumnIndex: columnIndex,\r\n            newRowIndex: rowIndex,\r\n            rows: this._dataController.getVisibleRows(),\r\n            columns: this._columnsController.getVisibleColumns(),\r\n            event: $event,\r\n            isHighlighted: isHighlighted || false,\r\n            cancel: false\r\n        };\r\n        this._canceledCellPosition = null;\r\n        this.executeAction(\"onFocusedCellChanging\", args);\r\n        if (args.newColumnIndex !== columnIndex || args.newRowIndex !== rowIndex) {\r\n            args.$newCellElement = $(this._getCell({\r\n                columnIndex: args.newColumnIndex,\r\n                rowIndex: args.newRowIndex\r\n            }))\r\n        }\r\n        if (args.cancel) {\r\n            this._canceledCellPosition = {\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            }\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedCellChanged: function($cellElement, prevCellIndex, prevRowIndex) {\r\n        var dataController = this._dataController;\r\n        var columnIndex = this.getView(\"rowsView\").getCellIndex($cellElement);\r\n        var rowIndex = this._getRowIndex($cellElement && $cellElement.parent());\r\n        var localRowIndex = Math.min(rowIndex - dataController.getRowIndexOffset(), dataController.items().length - 1);\r\n        var isEditingCell = this._editingController.isEditCell(localRowIndex, columnIndex);\r\n        var row = dataController.items()[localRowIndex];\r\n        if (!isEditingCell && (prevCellIndex !== columnIndex || prevRowIndex !== rowIndex)) {\r\n            this.executeAction(\"onFocusedCellChanged\", {\r\n                cellElement: $cellElement,\r\n                columnIndex: columnIndex,\r\n                rowIndex: rowIndex,\r\n                row: row,\r\n                column: this._columnsController.getVisibleColumns()[columnIndex]\r\n            })\r\n        }\r\n    },\r\n    _fireFocusedRowChanging: function(eventArgs, $newFocusedRow) {\r\n        var newRowIndex = this._getRowIndex($newFocusedRow);\r\n        var dataController = this._dataController;\r\n        var prevFocusedRowIndex = this.option(\"focusedRowIndex\");\r\n        var loadingOperationTypes = dataController.loadingOperationTypes();\r\n        var args = {\r\n            rowElement: $newFocusedRow,\r\n            prevRowIndex: prevFocusedRowIndex,\r\n            newRowIndex: newRowIndex,\r\n            event: eventArgs,\r\n            rows: dataController.getVisibleRows(),\r\n            cancel: false\r\n        };\r\n        if (!dataController || dataController.isLoading() && (loadingOperationTypes.reload || loadingOperationTypes.paging)) {\r\n            args.cancel = true;\r\n            return args\r\n        }\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            this.executeAction(\"onFocusedRowChanging\", args);\r\n            if (!args.cancel && args.newRowIndex !== newRowIndex) {\r\n                args.resetFocusedRow = args.newRowIndex < 0;\r\n                if (!args.resetFocusedRow) {\r\n                    this.setFocusedRowIndex(args.newRowIndex)\r\n                }\r\n                args.rowIndexChanged = true\r\n            }\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedRowChanged: function($rowElement) {\r\n        var row;\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        var focusController = this.getController(\"focus\");\r\n        var focusedRowIndex = null === focusController || void 0 === focusController ? void 0 : focusController.getFocusedRowIndexByKey(focusedRowKey);\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            if (focusedRowIndex >= 0) {\r\n                var dataController = this._dataController;\r\n                row = focusedRowIndex >= 0 && dataController.getVisibleRows()[focusedRowIndex - dataController.getRowIndexOffset()]\r\n            }\r\n            this.executeAction(\"onFocusedRowChanged\", {\r\n                rowElement: $rowElement,\r\n                rowIndex: focusedRowIndex,\r\n                row: row\r\n            })\r\n        }\r\n    },\r\n    _isEventInCurrentGrid: function(event) {\r\n        return gridCoreUtils.isElementInCurrentGrid(this, $(event.target))\r\n    },\r\n    _isRowEditMode: function() {\r\n        var editMode = this._editingController.getEditMode();\r\n        return editMode === EDIT_MODE_ROW || editMode === EDIT_MODE_FORM\r\n    },\r\n    _isCellEditMode: function() {\r\n        var editMode = this._editingController.getEditMode();\r\n        return editMode === EDIT_MODE_CELL || editMode === EDIT_MODE_BATCH\r\n    },\r\n    _isFastEditingAllowed: function() {\r\n        return this._isCellEditMode() && this.option(\"keyboardNavigation.editOnKeyPress\")\r\n    },\r\n    _getInteractiveElement: function($cell, isLast) {\r\n        var $focusedElement = $cell.find(INTERACTIVE_ELEMENTS_SELECTOR).filter(\":visible\");\r\n        return isLast ? $focusedElement.last() : $focusedElement.first()\r\n    },\r\n    _applyTabIndexToElement: function($element) {\r\n        var tabIndex = this.option(\"tabIndex\") || 0;\r\n        $element.attr(\"tabindex\", isDefined(tabIndex) ? tabIndex : 0)\r\n    },\r\n    _getCell: function(cellPosition) {\r\n        if (this._focusedView && cellPosition) {\r\n            var rowIndexOffset = this._dataController.getRowIndexOffset();\r\n            var column = this._columnsController.getVisibleColumns(null, true)[cellPosition.columnIndex];\r\n            var columnIndexOffset = column && column.fixed ? this._getFixedColumnIndexOffset(column) : this._columnsController.getColumnIndexOffset();\r\n            var rowIndex = cellPosition.rowIndex >= 0 ? cellPosition.rowIndex - rowIndexOffset : -1;\r\n            var columnIndex = cellPosition.columnIndex >= 0 ? cellPosition.columnIndex - columnIndexOffset : -1;\r\n            return this._focusedView.getCell({\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            })\r\n        }\r\n    },\r\n    _getRowIndex: function($row) {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var rowIndex = rowsView.getRowIndex($row);\r\n        if (rowIndex >= 0) {\r\n            rowIndex += this._dataController.getRowIndexOffset()\r\n        }\r\n        return rowIndex\r\n    },\r\n    _hasSkipRow: function($row) {\r\n        var row = $row && $row.get(0);\r\n        return row && (\"none\" === row.style.display || $row.hasClass(this.addWidgetPrefix(GROUP_FOOTER_CLASS)) || isDetailRow($row) && !$row.hasClass(this.addWidgetPrefix(EDIT_FORM_CLASS)))\r\n    },\r\n    _allowEditingOnEnterKey: function() {\r\n        return \"startEdit\" === this.option(\"keyboardNavigation.enterKeyAction\")\r\n    },\r\n    _isLegacyNavigation: function() {\r\n        return this.option(\"useLegacyKeyboardNavigation\")\r\n    },\r\n    _getDirectionCodeByKey: function(key) {\r\n        var directionCode;\r\n        switch (key) {\r\n            case \"upArrow\":\r\n                directionCode = \"prevRow\";\r\n                break;\r\n            case \"downArrow\":\r\n                directionCode = \"nextRow\";\r\n                break;\r\n            case \"leftArrow\":\r\n                directionCode = this.option(\"rtlEnabled\") ? \"nextInRow\" : \"previousInRow\";\r\n                break;\r\n            case \"rightArrow\":\r\n                directionCode = this.option(\"rtlEnabled\") ? \"previousInRow\" : \"nextInRow\"\r\n        }\r\n        return directionCode\r\n    },\r\n    _isVirtualScrolling: function() {\r\n        var scrollingMode = this.option(\"scrolling.mode\");\r\n        return \"virtual\" === scrollingMode || \"infinite\" === scrollingMode\r\n    },\r\n    _isVirtualRowRender: function() {\r\n        return this._isVirtualScrolling() || gridCoreUtils.isVirtualRowRendering(this)\r\n    },\r\n    _isVirtualColumnRender: function() {\r\n        return \"virtual\" === this.option(\"scrolling.columnRenderingMode\")\r\n    },\r\n    _scrollBy: function(left, top, rowIndex, $event) {\r\n        var that = this;\r\n        var scrollable = this.getView(\"rowsView\").getScrollable();\r\n        if (that._focusedCellPosition) {\r\n            scrollable.on(\"scroll\", (function scrollHandler() {\r\n                scrollable.off(\"scroll\", scrollHandler);\r\n                setTimeout(that.restoreFocusableElement.bind(that, rowIndex, $event))\r\n            }))\r\n        }\r\n        return scrollable.scrollBy({\r\n            left: left,\r\n            top: top\r\n        })\r\n    },\r\n    _isInsideEditForm: function(element) {\r\n        return $(element).closest(\".\" + this.addWidgetPrefix(EDIT_FORM_CLASS)).length > 0\r\n    },\r\n    _isMasterDetailCell: function(element) {\r\n        var $masterDetailCell = $(element).closest(\".\" + MASTER_DETAIL_CELL_CLASS);\r\n        var $masterDetailGrid = $masterDetailCell.closest(\".\" + this.getWidgetContainerClass()).parent();\r\n        return $masterDetailCell.length && $masterDetailGrid.is(this.component.$element())\r\n    },\r\n    _processNextCellInMasterDetail: function($nextCell) {\r\n        if (!this._isInsideEditForm($nextCell) && $nextCell) {\r\n            this._applyTabIndexToElement($nextCell)\r\n        }\r\n    },\r\n    _handleTabKeyOnMasterDetailCell: function(target, direction) {\r\n        if (this._isMasterDetailCell(target)) {\r\n            this._updateFocusedCellPosition($(target), direction);\r\n            var $nextCell = this._getNextCell(direction, \"row\");\r\n            this._processNextCellInMasterDetail($nextCell);\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    _getElementType: function(target) {\r\n        return $(target).is(\"tr\") ? \"row\" : \"cell\"\r\n    },\r\n    _isFastEditingStarted: function() {\r\n        return this._isFastEditingAllowed() && this._fastEditingStarted\r\n    },\r\n    _getVisibleColumnCount: function() {\r\n        return this._columnsController.getVisibleColumns(null, true).length\r\n    },\r\n    _isCellInRow: function(cellPosition, includeCommandCells) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var visibleColumnsCount = this._getVisibleColumnCount();\r\n        return includeCommandCells ? columnIndex >= 0 && columnIndex <= visibleColumnsCount - 1 : columnIndex > 0 && columnIndex < visibleColumnsCount - 1\r\n    },\r\n    _getCellElementFromTarget: function(target) {\r\n        var elementType = this._getElementType(target);\r\n        var $targetElement = $(target);\r\n        var $cell;\r\n        if (\"cell\" === elementType) {\r\n            $cell = $targetElement.closest(\".\".concat(ROW_CLASS, \" > td\"))\r\n        } else {\r\n            $cell = $targetElement.children().not(\".\" + COMMAND_EXPAND_CLASS).first()\r\n        }\r\n        return $cell\r\n    },\r\n    _getRowsViewElement: function() {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        return rowsView && rowsView.element()\r\n    },\r\n    isKeyboardEnabled: function() {\r\n        return this.option(\"keyboardNavigation.enabled\")\r\n    },\r\n    _processCanceledEditCellPosition: function(rowIndex, columnIndex) {\r\n        if (this._canceledCellPosition) {\r\n            var isCanceled = this._canceledCellPosition.rowIndex === rowIndex && this._canceledCellPosition.columnIndex === columnIndex;\r\n            this._canceledCellPosition = null;\r\n            return isCanceled\r\n        }\r\n    },\r\n    updateFocusedRowIndex: function() {\r\n        var dataController = this._dataController;\r\n        var visibleRowIndex = this.getVisibleRowIndex();\r\n        var visibleItems = dataController.items();\r\n        var lastVisibleIndex = visibleItems.length ? visibleItems.length - 1 : -1;\r\n        var rowIndexOffset = dataController.getRowIndexOffset();\r\n        lastVisibleIndex >= 0 && visibleRowIndex > lastVisibleIndex && this.setFocusedRowIndex(lastVisibleIndex + rowIndexOffset)\r\n    }\r\n});\r\nexport var keyboardNavigationModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            useLegacyKeyboardNavigation: false,\r\n            keyboardNavigation: {\r\n                enabled: true,\r\n                enterKeyAction: \"startEdit\",\r\n                enterKeyDirection: \"none\",\r\n                editOnKeyPress: false\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        keyboardNavigation: KeyboardNavigationController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _rowClick: function(e) {\r\n                    var editRowIndex = this.getController(\"editing\").getEditRowIndex();\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    if (editRowIndex === e.rowIndex) {\r\n                        keyboardController.setCellFocusType()\r\n                    }\r\n                    var needTriggerPointerEventHandler = isMobile() && this.option(\"focusedRowEnabled\");\r\n                    if (needTriggerPointerEventHandler) {\r\n                        this._triggerPointerDownEventHandler(e)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _triggerPointerDownEventHandler: function(e) {\r\n                    var originalEvent = e.event.originalEvent;\r\n                    if (originalEvent) {\r\n                        var keyboardController = this.getController(\"keyboardNavigation\");\r\n                        var $cell = $(originalEvent.target);\r\n                        var columnIndex = this.getCellIndex($cell);\r\n                        var column = this.getController(\"columns\").getVisibleColumns()[columnIndex];\r\n                        var row = this.getController(\"data\").items()[e.rowIndex];\r\n                        if (keyboardController._isAllowEditing(row, column)) {\r\n                            var eventArgs = createEvent(originalEvent, {\r\n                                currentTarget: originalEvent.target\r\n                            });\r\n                            keyboardController._pointerEventHandler(eventArgs)\r\n                        }\r\n                    }\r\n                },\r\n                renderFocusState: function(params) {\r\n                    var {\r\n                        preventScroll: preventScroll,\r\n                        pageSizeChanged: pageSizeChanged\r\n                    } = null !== params && void 0 !== params ? params : {};\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var $rowsViewElement = this.element();\r\n                    if ($rowsViewElement && !focused($rowsViewElement)) {\r\n                        $rowsViewElement.attr(\"tabindex\", null)\r\n                    }\r\n                    pageSizeChanged && keyboardController.updateFocusedRowIndex();\r\n                    var rowIndex = keyboardController.getVisibleRowIndex();\r\n                    if (!isDefined(rowIndex) || rowIndex < 0) {\r\n                        rowIndex = 0\r\n                    }\r\n                    var cellElements = this.getCellElements(rowIndex);\r\n                    if (keyboardController.isKeyboardEnabled() && cellElements.length) {\r\n                        this.updateFocusElementTabIndex(cellElements, preventScroll)\r\n                    }\r\n                },\r\n                updateFocusElementTabIndex: function(cellElements) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var $row = cellElements.eq(0).parent();\r\n                    if (isGroupRow($row)) {\r\n                        keyboardController._applyTabIndexToElement($row)\r\n                    } else {\r\n                        var columnIndex = keyboardController.getColumnIndex();\r\n                        if (!isDefined(columnIndex) || columnIndex < 0) {\r\n                            columnIndex = 0\r\n                        }\r\n                        this._updateFocusedCellTabIndex(cellElements, columnIndex)\r\n                    }\r\n                },\r\n                _updateFocusedCellTabIndex: function(cellElements, columnIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var cellElementsLength = cellElements ? cellElements.length : -1;\r\n                    var updateCellTabIndex = function($cell) {\r\n                        var isMasterDetailCell = keyboardController._isMasterDetailCell($cell);\r\n                        var isValidCell = keyboardController._isCellValid($cell);\r\n                        if (!isMasterDetailCell && isValidCell && isCellElement($cell)) {\r\n                            keyboardController._applyTabIndexToElement($cell);\r\n                            keyboardController.setCellFocusType();\r\n                            return true\r\n                        }\r\n                    };\r\n                    var $cell = cellElements.filter(\"[aria-colindex='\".concat(columnIndex + 1, \"']\"));\r\n                    if ($cell.length) {\r\n                        updateCellTabIndex($cell)\r\n                    } else {\r\n                        if (cellElementsLength <= columnIndex) {\r\n                            columnIndex = cellElementsLength - 1\r\n                        }\r\n                        for (var i = columnIndex; i < cellElementsLength; ++i) {\r\n                            if (updateCellTabIndex($(cellElements[i]))) {\r\n                                break\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                renderDelayedTemplates: function(change) {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._renderFocusByChange(change)\r\n                },\r\n                _renderFocusByChange(change) {\r\n                    var {\r\n                        operationTypes: operationTypes,\r\n                        repaintChangesOnly: repaintChangesOnly\r\n                    } = null !== change && void 0 !== change ? change : {};\r\n                    var {\r\n                        fullReload: fullReload,\r\n                        pageSize: pageSize\r\n                    } = null !== operationTypes && void 0 !== operationTypes ? operationTypes : {};\r\n                    if (!change || !repaintChangesOnly || fullReload || pageSize) {\r\n                        var preventScroll = shouldPreventScroll(this);\r\n                        this.renderFocusState({\r\n                            preventScroll: preventScroll,\r\n                            pageSizeChanged: pageSize\r\n                        })\r\n                    }\r\n                },\r\n                _renderCore: function(change) {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._renderFocusByChange(change)\r\n                },\r\n                _editCellPrepared: function($cell) {\r\n                    var editorInstance = this._getEditorInstance($cell);\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var isEditingNavigationMode = keyboardController && keyboardController._isFastEditingStarted();\r\n                    if (editorInstance && isEditingNavigationMode) {\r\n                        this._handleEditingNavigationMode(editorInstance)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _handleEditingNavigationMode: function(editorInstance) {\r\n                    [\"downArrow\", \"upArrow\"].forEach((function(keyName) {\r\n                        var originalKeyHandler = editorInstance._supportedKeys()[keyName];\r\n                        editorInstance.registerKeyHandler(keyName, e => {\r\n                            var isDropDownOpened = \"true\" === editorInstance._input().attr(\"aria-expanded\");\r\n                            if (isDropDownOpened) {\r\n                                return originalKeyHandler && originalKeyHandler.call(editorInstance, e)\r\n                            }\r\n                        })\r\n                    }));\r\n                    editorInstance.registerKeyHandler(\"leftArrow\", noop);\r\n                    editorInstance.registerKeyHandler(\"rightArrow\", noop);\r\n                    var isDateBoxWithMask = editorInstance.NAME === DATEBOX_WIDGET_NAME && editorInstance.option(\"useMaskBehavior\");\r\n                    if (isDateBoxWithMask) {\r\n                        editorInstance.registerKeyHandler(\"enter\", noop)\r\n                    }\r\n                },\r\n                _getEditorInstance: function($cell) {\r\n                    var $editor = $cell.find(\".dx-texteditor\").eq(0);\r\n                    return gridCoreUtils.getWidgetInstance($editor)\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            editing: {\r\n                editCell: function(rowIndex, columnIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    if (keyboardController._processCanceledEditCellPosition(rowIndex, columnIndex)) {\r\n                        return false\r\n                    }\r\n                    var isCellEditing = this.callBase(rowIndex, columnIndex);\r\n                    if (isCellEditing) {\r\n                        keyboardController.setupFocusedView()\r\n                    }\r\n                    return isCellEditing\r\n                },\r\n                editRow: function(rowIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var visibleColumnIndex = keyboardController.getVisibleColumnIndex();\r\n                    var column = this._columnsController.getVisibleColumns()[visibleColumnIndex];\r\n                    if (column && column.type || this.option(\"editing.mode\") === EDIT_MODE_FORM) {\r\n                        keyboardController._resetFocusedCell()\r\n                    }\r\n                    this.callBase(rowIndex)\r\n                },\r\n                addRow: function(parentKey) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    keyboardController.setupFocusedView();\r\n                    keyboardController.setCellFocusType();\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                getFocusedCellInRow: function(rowIndex) {\r\n                    var keyboardNavigationController = this.getController(\"keyboardNavigation\");\r\n                    var $cell = this.callBase(rowIndex);\r\n                    if (keyboardNavigationController.isKeyboardEnabled() && keyboardNavigationController._focusedCellPosition.rowIndex === rowIndex) {\r\n                        var $focusedCell = keyboardNavigationController._getFocusedCell();\r\n                        if (isElementDefined($focusedCell) && !$focusedCell.hasClass(COMMAND_EDIT_CLASS)) {\r\n                            $cell = $focusedCell\r\n                        }\r\n                    }\r\n                    return $cell\r\n                },\r\n                _processCanceledEditingCell: function() {\r\n                    this.closeEditCell().done(() => {\r\n                        var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                        keyboardNavigation._updateFocus()\r\n                    })\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._keyboardNavigationController = this.getController(\"keyboardNavigation\")\r\n                },\r\n                closeEditCell: function() {\r\n                    var keyboardNavigation = this._keyboardNavigationController;\r\n                    keyboardNavigation._fastEditingStarted = false;\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    keyboardNavigation._updateFocus();\r\n                    return result\r\n                },\r\n                _delayedInputFocus: function() {\r\n                    this._keyboardNavigationController._isNeedScroll = true;\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _isEditingStart: function() {\r\n                    var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                    var cancel = this.callBase.apply(this, arguments);\r\n                    if (cancel && !keyboardNavigation._isNeedFocus) {\r\n                        var $cell = keyboardNavigation._getFocusedCell();\r\n                        keyboardNavigation._focus($cell, true)\r\n                    }\r\n                    return cancel\r\n                }\r\n            },\r\n            data: {\r\n                _correctRowIndices: function(getRowIndexCorrection) {\r\n                    var that = this;\r\n                    var keyboardNavigationController = that.getController(\"keyboardNavigation\");\r\n                    var editorFactory = that.getController(\"editorFactory\");\r\n                    var focusedCellPosition = keyboardNavigationController._focusedCellPosition;\r\n                    that.callBase.apply(that, arguments);\r\n                    if (focusedCellPosition && focusedCellPosition.rowIndex >= 0) {\r\n                        var focusedRowIndexCorrection = getRowIndexCorrection(focusedCellPosition.rowIndex);\r\n                        if (focusedRowIndexCorrection) {\r\n                            focusedCellPosition.rowIndex += focusedRowIndexCorrection;\r\n                            editorFactory.refocus()\r\n                        }\r\n                    }\r\n                },\r\n                getMaxRowIndex: function() {\r\n                    var result = this.items().length - 1;\r\n                    var virtualItemsCount = this.virtualItemsCount();\r\n                    if (virtualItemsCount) {\r\n                        result += virtualItemsCount.begin + virtualItemsCount.end\r\n                    }\r\n                    return result\r\n                }\r\n            },\r\n            adaptiveColumns: {\r\n                _showHiddenCellsInView: function(_ref) {\r\n                    var {\r\n                        viewName: viewName,\r\n                        $cells: $cells,\r\n                        isCommandColumn: isCommandColumn\r\n                    } = _ref;\r\n                    this.callBase.apply(this, arguments);\r\n                    viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && $cells.each((_, cellElement) => {\r\n                        var $cell = $(cellElement);\r\n                        isCellInHeaderRow($cell) && $cell.attr(\"tabindex\", 0)\r\n                    })\r\n                },\r\n                _hideVisibleCellInView: function(_ref2) {\r\n                    var {\r\n                        viewName: viewName,\r\n                        $cell: $cell,\r\n                        isCommandColumn: isCommandColumn\r\n                    } = _ref2;\r\n                    this.callBase.apply(this, arguments);\r\n                    if (viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && isCellInHeaderRow($cell)) {\r\n                        $cell.removeAttr(\"tabindex\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/aggregate_calculator.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    errors\r\n} from \"../../data/errors\";\r\nimport {\r\n    aggregators\r\n} from \"../../data/utils\";\r\n\r\nfunction depthFirstSearch(i, depth, root, callback) {\r\n    var j = 0;\r\n    if (i < depth) {\r\n        for (; j < root.items.length; j++) {\r\n            depthFirstSearch(i + 1, depth, root.items[j], callback)\r\n        }\r\n    }\r\n    if (i === depth) {\r\n        callback(root)\r\n    }\r\n}\r\n\r\nfunction map(array, callback) {\r\n    var i;\r\n    if (\"map\" in array) {\r\n        return array.map(callback)\r\n    }\r\n    var result = new Array(array.length);\r\n    for (i in array) {\r\n        result[i] = callback(array[i], i)\r\n    }\r\n    return result\r\n}\r\n\r\nfunction isEmpty(x) {\r\n    return x !== x || \"\" === x || null === x || void 0 === x\r\n}\r\n\r\nfunction isCount(aggregator) {\r\n    return aggregator === aggregators.count\r\n}\r\n\r\nfunction normalizeAggregate(aggregate) {\r\n    var selector = compileGetter(aggregate.selector);\r\n    var skipEmptyValues = \"skipEmptyValues\" in aggregate ? aggregate.skipEmptyValues : true;\r\n    var aggregator = aggregate.aggregator;\r\n    if (\"string\" === typeof aggregator) {\r\n        aggregator = aggregators[aggregator];\r\n        if (!aggregator) {\r\n            throw errors.Error(\"E4001\", aggregate.aggregator)\r\n        }\r\n    }\r\n    return {\r\n        selector: selector,\r\n        aggregator: aggregator,\r\n        skipEmptyValues: skipEmptyValues\r\n    }\r\n}\r\nexport default Class.inherit({\r\n    ctor: function(options) {\r\n        this._data = options.data;\r\n        this._groupLevel = options.groupLevel || 0;\r\n        this._totalAggregates = map(options.totalAggregates || [], normalizeAggregate);\r\n        this._groupAggregates = map(options.groupAggregates || [], normalizeAggregate);\r\n        this._totals = []\r\n    },\r\n    calculate: function() {\r\n        if (this._totalAggregates.length) {\r\n            this._calculateTotals(0, {\r\n                items: this._data\r\n            })\r\n        }\r\n        if (this._groupAggregates.length && this._groupLevel > 0) {\r\n            this._calculateGroups({\r\n                items: this._data\r\n            })\r\n        }\r\n    },\r\n    totalAggregates: function() {\r\n        return this._totals\r\n    },\r\n    _aggregate: function(aggregates, data, container) {\r\n        var length = data.items ? data.items.length : 0;\r\n        for (var i = 0; i < aggregates.length; i++) {\r\n            if (isCount(aggregates[i].aggregator)) {\r\n                container[i] = (container[i] || 0) + length;\r\n                continue\r\n            }\r\n            for (var j = 0; j < length; j++) {\r\n                this._accumulate(i, aggregates[i], container, data.items[j])\r\n            }\r\n        }\r\n    },\r\n    _calculateTotals: function(level, data) {\r\n        if (0 === level) {\r\n            this._totals = this._seed(this._totalAggregates)\r\n        }\r\n        if (level === this._groupLevel) {\r\n            this._aggregate(this._totalAggregates, data, this._totals)\r\n        } else {\r\n            for (var i = 0; i < data.items.length; i++) {\r\n                this._calculateTotals(level + 1, data.items[i])\r\n            }\r\n        }\r\n        if (0 === level) {\r\n            this._totals = this._finalize(this._totalAggregates, this._totals)\r\n        }\r\n    },\r\n    _calculateGroups: function(root) {\r\n        var maxLevel = this._groupLevel;\r\n        var currentLevel = maxLevel + 1;\r\n        var seedFn = this._seed.bind(this, this._groupAggregates);\r\n        var stepFn = this._aggregate.bind(this, this._groupAggregates);\r\n        var finalizeFn = this._finalize.bind(this, this._groupAggregates);\r\n\r\n        function aggregator(node) {\r\n            node.aggregates = seedFn(currentLevel - 1);\r\n            if (currentLevel === maxLevel) {\r\n                stepFn(node, node.aggregates)\r\n            } else {\r\n                depthFirstSearch(currentLevel, maxLevel, node, (function(innerNode) {\r\n                    stepFn(innerNode, node.aggregates)\r\n                }))\r\n            }\r\n            node.aggregates = finalizeFn(node.aggregates)\r\n        }\r\n        while (--currentLevel > 0) {\r\n            depthFirstSearch(0, currentLevel, root, aggregator)\r\n        }\r\n    },\r\n    _seed: function(aggregates, groupIndex) {\r\n        return map(aggregates, (function(aggregate) {\r\n            var aggregator = aggregate.aggregator;\r\n            var seed = \"seed\" in aggregator ? isFunction(aggregator.seed) ? aggregator.seed(groupIndex) : aggregator.seed : NaN;\r\n            return seed\r\n        }))\r\n    },\r\n    _accumulate: function(aggregateIndex, aggregate, results, item) {\r\n        var value = aggregate.selector(item);\r\n        var aggregator = aggregate.aggregator;\r\n        var skipEmptyValues = aggregate.skipEmptyValues;\r\n        if (skipEmptyValues && isEmpty(value)) {\r\n            return\r\n        }\r\n        if (results[aggregateIndex] !== results[aggregateIndex]) {\r\n            results[aggregateIndex] = value\r\n        } else {\r\n            results[aggregateIndex] = aggregator.step(results[aggregateIndex], value)\r\n        }\r\n    },\r\n    _finalize: function(aggregates, results) {\r\n        return map(aggregates, (function(aggregate, index) {\r\n            var fin = aggregate.aggregator.finalize;\r\n            return fin ? fin(results[index]) : results[index]\r\n        }))\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.keyboard_navigation.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    keyboardNavigationModule\r\n} from \"../grid_core/ui.grid_core.keyboard_navigation\";\r\ngridCore.registerModule(\"keyboardNavigation\", keyboardNavigationModule);\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.summary.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    isEmptyObject,\r\n    isString,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport dataSourceAdapter from \"./ui.data_grid.data_source_adapter\";\r\nimport {\r\n    ColumnsView\r\n} from \"../grid_core/ui.grid_core.columns_view\";\r\nimport AggregateCalculator from \"./aggregate_calculator\";\r\nimport dataQuery from \"../../data/query\";\r\nimport storeHelper from \"../../data/store_helper\";\r\nimport {\r\n    normalizeSortingInfo\r\n} from \"../../data/utils\";\r\nvar DATAGRID_TOTAL_FOOTER_CLASS = \"dx-datagrid-total-footer\";\r\nvar DATAGRID_SUMMARY_ITEM_CLASS = \"dx-datagrid-summary-item\";\r\nvar DATAGRID_TEXT_CONTENT_CLASS = \"dx-datagrid-text-content\";\r\nvar DATAGRID_GROUP_FOOTER_CLASS = \"dx-datagrid-group-footer\";\r\nvar DATAGRID_GROUP_TEXT_CONTENT_CLASS = \"dx-datagrid-group-text-content\";\r\nvar DATAGRID_NOWRAP_CLASS = \"dx-datagrid-nowrap\";\r\nvar DATAGRID_GROUP_FOOTER_ROW_TYPE = \"groupFooter\";\r\nexport var renderSummaryCell = function(cell, options) {\r\n    var $cell = $(cell);\r\n    var column = options.column;\r\n    var summaryItems = options.summaryItems;\r\n    var $summaryItems = [];\r\n    if (!column.command && summaryItems) {\r\n        for (var i = 0; i < summaryItems.length; i++) {\r\n            var summaryItem = summaryItems[i];\r\n            $summaryItems.push($(\"<div>\").css(\"textAlign\", summaryItem.alignment || column.alignment).addClass(DATAGRID_SUMMARY_ITEM_CLASS).addClass(DATAGRID_TEXT_CONTENT_CLASS).addClass(summaryItem.cssClass).toggleClass(DATAGRID_GROUP_TEXT_CONTENT_CLASS, \"group\" === options.rowType).text(gridCore.getSummaryText(summaryItem, options.summaryTexts)))\r\n        }\r\n        $cell.append($summaryItems)\r\n    }\r\n};\r\nvar getSummaryCellOptions = function(that, options) {\r\n    var summaryTexts = that.option(\"summary.texts\") || {};\r\n    return {\r\n        totalItem: options.row,\r\n        summaryItems: options.row.summaryCells[options.columnIndex],\r\n        summaryTexts: summaryTexts\r\n    }\r\n};\r\nvar getGroupAggregates = function(data) {\r\n    return data.summary || data.aggregates || []\r\n};\r\nvar recalculateWhileEditing = function(that) {\r\n    return that.option(\"summary.recalculateWhileEditing\")\r\n};\r\nexport var FooterView = ColumnsView.inherit({\r\n    _getRows: function() {\r\n        return this._dataController.footerItems()\r\n    },\r\n    _getCellOptions: function(options) {\r\n        return extend(this.callBase(options), getSummaryCellOptions(this, options))\r\n    },\r\n    _renderCellContent: function($cell, options) {\r\n        renderSummaryCell($cell, options);\r\n        this.callBase($cell, options)\r\n    },\r\n    _renderCore: function(change) {\r\n        var needUpdateScrollLeft = false;\r\n        var totalItem = this._dataController.footerItems()[0];\r\n        if (!change || !change.columnIndices) {\r\n            this.element().empty().addClass(DATAGRID_TOTAL_FOOTER_CLASS).toggleClass(DATAGRID_NOWRAP_CLASS, !this.option(\"wordWrapEnabled\"));\r\n            needUpdateScrollLeft = true\r\n        }\r\n        if (totalItem && totalItem.summaryCells && totalItem.summaryCells.length) {\r\n            this._updateContent(this._renderTable({\r\n                change: change\r\n            }), change);\r\n            needUpdateScrollLeft && this._updateScrollLeftPosition()\r\n        }\r\n    },\r\n    _updateContent: function($newTable, change) {\r\n        if (change && \"update\" === change.changeType && change.columnIndices) {\r\n            var $row = this.getTableElement().find(\".dx-row\");\r\n            var $newRow = $newTable.find(\".dx-row\");\r\n            this._updateCells($row, $newRow, change.columnIndices[0])\r\n        } else {\r\n            return this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _rowClick: function(e) {\r\n        var item = this._dataController.footerItems()[e.rowIndex] || {};\r\n        this.executeAction(\"onRowClick\", extend({}, e, item))\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var optionNames = e.optionNames;\r\n        if (e.changeTypes.grouping) {\r\n            return\r\n        }\r\n        if (optionNames.width || optionNames.visibleWidth) {\r\n            this.callBase(e)\r\n        }\r\n    },\r\n    _handleDataChanged: function(e) {\r\n        var changeType = e.changeType;\r\n        if (\"update\" === e.changeType && e.repaintChangesOnly) {\r\n            if (!e.totalColumnIndices) {\r\n                this.render()\r\n            } else if (e.totalColumnIndices.length) {\r\n                this.render(null, {\r\n                    changeType: \"update\",\r\n                    columnIndices: [e.totalColumnIndices]\r\n                })\r\n            }\r\n        } else if (\"refresh\" === changeType || \"append\" === changeType || \"prepend\" === changeType) {\r\n            this.render()\r\n        }\r\n    },\r\n    getHeight: function() {\r\n        return this.getElementHeight()\r\n    },\r\n    isVisible: function() {\r\n        return !!this._dataController.footerItems().length\r\n    }\r\n});\r\nvar SummaryDataSourceAdapterExtender = {\r\n    init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._totalAggregates = [];\r\n        this._summaryGetter = noop\r\n    },\r\n    summaryGetter: function(_summaryGetter) {\r\n        if (!arguments.length) {\r\n            return this._summaryGetter\r\n        }\r\n        if (isFunction(_summaryGetter)) {\r\n            this._summaryGetter = _summaryGetter\r\n        }\r\n    },\r\n    summary: function(_summary) {\r\n        if (!arguments.length) {\r\n            return this._summaryGetter()\r\n        }\r\n        this._summaryGetter = function() {\r\n            return _summary\r\n        }\r\n    },\r\n    totalAggregates: function() {\r\n        return this._totalAggregates\r\n    },\r\n    isLastLevelGroupItemsPagingLocal: function() {\r\n        var summary = this.summary();\r\n        var sortByGroupsInfo = summary && summary.sortByGroups();\r\n        return sortByGroupsInfo && sortByGroupsInfo.length\r\n    },\r\n    sortLastLevelGroupItems: function(items, groups, paths) {\r\n        var groupedItems = storeHelper.multiLevelGroup(dataQuery(items), groups).toArray();\r\n        var result = [];\r\n        paths.forEach((function(path) {\r\n            ! function forEachGroup(groups, groupCount, callback, path) {\r\n                path = path || [];\r\n                for (var i = 0; i < groups.length; i++) {\r\n                    path.push(groups[i].key);\r\n                    if (1 === groupCount) {\r\n                        callback(path, groups[i].items)\r\n                    } else {\r\n                        forEachGroup(groups[i].items, groupCount - 1, callback, path)\r\n                    }\r\n                    path.pop()\r\n                }\r\n            }(groupedItems, groups.length, (function(itemsPath, items) {\r\n                if (path.toString() === itemsPath.toString()) {\r\n                    result = result.concat(items)\r\n                }\r\n            }))\r\n        }));\r\n        return result\r\n    }\r\n};\r\nvar SummaryDataSourceAdapterClientExtender = function() {\r\n    var calculateAggregates = function(that, summary, data, groupLevel) {\r\n        var calculator;\r\n        if (recalculateWhileEditing(that)) {\r\n            var editingController = that.getController(\"editing\");\r\n            if (editingController) {\r\n                var insertedData = editingController.getInsertedData();\r\n                if (insertedData.length) {\r\n                    data = function applyAddedData(data, insertedData, groupLevel) {\r\n                        if (groupLevel) {\r\n                            return applyAddedData(data, insertedData.map(item => ({\r\n                                items: [item]\r\n                            }), groupLevel - 1))\r\n                        }\r\n                        return data.concat(insertedData)\r\n                    }(data, insertedData, groupLevel)\r\n                }\r\n                var removedData = editingController.getRemovedData();\r\n                if (removedData.length) {\r\n                    data = function applyRemovedData(data, removedData, groupLevel) {\r\n                        if (groupLevel) {\r\n                            return data.map(data => {\r\n                                var updatedData = {};\r\n                                var updatedItems = applyRemovedData(data.items || [], removedData, groupLevel - 1);\r\n                                Object.defineProperty(updatedData, \"aggregates\", {\r\n                                    get: () => data.aggregates,\r\n                                    set: value => {\r\n                                        data.aggregates = value\r\n                                    }\r\n                                });\r\n                                return extend(updatedData, data, {\r\n                                    items: updatedItems\r\n                                })\r\n                            })\r\n                        }\r\n                        return data.filter(data => removedData.indexOf(data) < 0)\r\n                    }(data, removedData, groupLevel)\r\n                }\r\n            }\r\n        }\r\n        if (summary) {\r\n            calculator = new AggregateCalculator({\r\n                totalAggregates: summary.totalAggregates,\r\n                groupAggregates: summary.groupAggregates,\r\n                data: data,\r\n                groupLevel: groupLevel\r\n            });\r\n            calculator.calculate()\r\n        }\r\n        return calculator ? calculator.totalAggregates() : []\r\n    };\r\n    var sortGroupsBySummary = function(data, group, summary) {\r\n        var sortByGroups = summary && summary.sortByGroups && summary.sortByGroups();\r\n        if (sortByGroups && sortByGroups.length) {\r\n            return function sortGroupsBySummaryCore(items, groups, sortByGroups) {\r\n                if (!items || !groups.length) {\r\n                    return items\r\n                }\r\n                var group = groups[0];\r\n                var sorts = sortByGroups[0];\r\n                var query;\r\n                if (group && sorts && sorts.length) {\r\n                    query = dataQuery(items);\r\n                    each(sorts, (function(index) {\r\n                        if (0 === index) {\r\n                            query = query.sortBy(this.selector, this.desc)\r\n                        } else {\r\n                            query = query.thenBy(this.selector, this.desc)\r\n                        }\r\n                    }));\r\n                    query.enumerate().done((function(sortedItems) {\r\n                        items = sortedItems\r\n                    }))\r\n                }\r\n                groups = groups.slice(1);\r\n                sortByGroups = sortByGroups.slice(1);\r\n                if (groups.length && sortByGroups.length) {\r\n                    each(items, (function() {\r\n                        this.items = sortGroupsBySummaryCore(this.items, groups, sortByGroups)\r\n                    }))\r\n                }\r\n                return items\r\n            }(data, group, sortByGroups)\r\n        }\r\n        return data\r\n    };\r\n    return {\r\n        _customizeRemoteOperations: function(options) {\r\n            var summary = this.summary();\r\n            if (summary) {\r\n                if (options.remoteOperations.summary) {\r\n                    if (!options.isCustomLoading || options.storeLoadOptions.isLoadingAll) {\r\n                        if (options.storeLoadOptions.group) {\r\n                            if (options.remoteOperations.grouping) {\r\n                                options.storeLoadOptions.groupSummary = summary.groupAggregates\r\n                            } else if (summary.groupAggregates.length) {\r\n                                options.remoteOperations.paging = false\r\n                            }\r\n                        }\r\n                        options.storeLoadOptions.totalSummary = summary.totalAggregates\r\n                    }\r\n                } else if (summary.totalAggregates.length || summary.groupAggregates.length && options.storeLoadOptions.group) {\r\n                    options.remoteOperations.paging = false\r\n                }\r\n            }\r\n            this.callBase.apply(this, arguments);\r\n            var cachedExtra = options.cachedData.extra;\r\n            if (cachedExtra && cachedExtra.summary && !options.isCustomLoading) {\r\n                options.storeLoadOptions.totalSummary = void 0\r\n            }\r\n        },\r\n        _handleDataLoadedCore: function(options) {\r\n            var groups = normalizeSortingInfo(options.storeLoadOptions.group || options.loadOptions.group || []);\r\n            var remoteOperations = options.remoteOperations || {};\r\n            var summary = this.summaryGetter()(remoteOperations);\r\n            if (!options.isCustomLoading || options.storeLoadOptions.isLoadingAll) {\r\n                if (remoteOperations.summary) {\r\n                    if (!remoteOperations.paging && groups.length && summary) {\r\n                        if (!remoteOperations.grouping) {\r\n                            calculateAggregates(this, {\r\n                                groupAggregates: summary.groupAggregates\r\n                            }, options.data, groups.length)\r\n                        }\r\n                        options.data = sortGroupsBySummary(options.data, groups, summary)\r\n                    }\r\n                } else if (!remoteOperations.paging && summary) {\r\n                    var _options$cachedData, _options$cachedData$e;\r\n                    var operationTypes = options.operationTypes || {};\r\n                    var hasOperations = Object.keys(operationTypes).some(type => operationTypes[type]);\r\n                    if (!hasOperations || !(null !== (_options$cachedData = options.cachedData) && void 0 !== _options$cachedData && null !== (_options$cachedData$e = _options$cachedData.extra) && void 0 !== _options$cachedData$e && _options$cachedData$e.summary) || groups.length && summary.groupAggregates.length) {\r\n                        var totalAggregates = calculateAggregates(this, summary, options.data, groups.length);\r\n                        options.extra = isPlainObject(options.extra) ? options.extra : {};\r\n                        options.extra.summary = totalAggregates;\r\n                        if (options.cachedData) {\r\n                            options.cachedData.extra = options.extra\r\n                        }\r\n                    }\r\n                    options.data = sortGroupsBySummary(options.data, groups, summary)\r\n                }\r\n            }\r\n            if (!options.isCustomLoading) {\r\n                this._totalAggregates = options.extra && options.extra.summary || this._totalAggregates\r\n            }\r\n            this.callBase(options)\r\n        }\r\n    }\r\n}();\r\ndataSourceAdapter.extend(SummaryDataSourceAdapterExtender);\r\ndataSourceAdapter.extend(SummaryDataSourceAdapterClientExtender);\r\ngridCore.registerModule(\"summary\", {\r\n    defaultOptions: function() {\r\n        return {\r\n            summary: {\r\n                groupItems: void 0,\r\n                totalItems: void 0,\r\n                calculateCustomSummary: void 0,\r\n                skipEmptyValues: true,\r\n                recalculateWhileEditing: false,\r\n                texts: {\r\n                    sum: messageLocalization.format(\"dxDataGrid-summarySum\"),\r\n                    sumOtherColumn: messageLocalization.format(\"dxDataGrid-summarySumOtherColumn\"),\r\n                    min: messageLocalization.format(\"dxDataGrid-summaryMin\"),\r\n                    minOtherColumn: messageLocalization.format(\"dxDataGrid-summaryMinOtherColumn\"),\r\n                    max: messageLocalization.format(\"dxDataGrid-summaryMax\"),\r\n                    maxOtherColumn: messageLocalization.format(\"dxDataGrid-summaryMaxOtherColumn\"),\r\n                    avg: messageLocalization.format(\"dxDataGrid-summaryAvg\"),\r\n                    avgOtherColumn: messageLocalization.format(\"dxDataGrid-summaryAvgOtherColumn\"),\r\n                    count: messageLocalization.format(\"dxDataGrid-summaryCount\")\r\n                }\r\n            },\r\n            sortByGroupSummaryInfo: void 0\r\n        }\r\n    },\r\n    views: {\r\n        footerView: FooterView\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                _isDataColumn: function(column) {\r\n                    return column && (!isDefined(column.groupIndex) || column.showWhenGrouped)\r\n                },\r\n                _isGroupFooterVisible: function() {\r\n                    var groupItems = this.option(\"summary.groupItems\") || [];\r\n                    for (var i = 0; i < groupItems.length; i++) {\r\n                        var groupItem = groupItems[i];\r\n                        var column = this._columnsController.columnOption(groupItem.showInColumn || groupItem.column);\r\n                        if (groupItem.showInGroupFooter && this._isDataColumn(column)) {\r\n                            return true\r\n                        }\r\n                    }\r\n                    return false\r\n                },\r\n                _processGroupItems: function(items, groupCount, options) {\r\n                    var data = options && options.data;\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    if (options) {\r\n                        if (void 0 === options.isGroupFooterVisible) {\r\n                            options.isGroupFooterVisible = this._isGroupFooterVisible()\r\n                        }\r\n                        if (data && data.items && options.isGroupFooterVisible && (options.collectContinuationItems || !data.isContinuationOnNextPage)) {\r\n                            result.push({\r\n                                rowType: DATAGRID_GROUP_FOOTER_ROW_TYPE,\r\n                                key: options.path.slice(),\r\n                                data: data,\r\n                                groupIndex: options.path.length - 1,\r\n                                values: []\r\n                            })\r\n                        }\r\n                    }\r\n                    return result\r\n                },\r\n                _processGroupItem: function(groupItem, options) {\r\n                    var that = this;\r\n                    if (!options.summaryGroupItems) {\r\n                        options.summaryGroupItems = that.option(\"summary.groupItems\") || []\r\n                    }\r\n                    if (\"group\" === groupItem.rowType) {\r\n                        var groupColumnIndex = -1;\r\n                        var afterGroupColumnIndex = -1;\r\n                        each(options.visibleColumns, (function(visibleIndex) {\r\n                            var prevColumn = options.visibleColumns[visibleIndex - 1];\r\n                            if (groupItem.groupIndex === this.groupIndex) {\r\n                                groupColumnIndex = this.index\r\n                            }\r\n                            if (visibleIndex > 0 && \"expand\" === prevColumn.command && \"expand\" !== this.command) {\r\n                                afterGroupColumnIndex = this.index\r\n                            }\r\n                        }));\r\n                        groupItem.summaryCells = this._calculateSummaryCells(options.summaryGroupItems, getGroupAggregates(groupItem.data), options.visibleColumns, (function(summaryItem, column) {\r\n                            if (summaryItem.showInGroupFooter) {\r\n                                return -1\r\n                            }\r\n                            if (summaryItem.alignByColumn && column && !isDefined(column.groupIndex) && column.index !== afterGroupColumnIndex) {\r\n                                return column.index\r\n                            } else {\r\n                                return groupColumnIndex\r\n                            }\r\n                        }), true)\r\n                    }\r\n                    if (groupItem.rowType === DATAGRID_GROUP_FOOTER_ROW_TYPE) {\r\n                        groupItem.summaryCells = this._calculateSummaryCells(options.summaryGroupItems, getGroupAggregates(groupItem.data), options.visibleColumns, (function(summaryItem, column) {\r\n                            return summaryItem.showInGroupFooter && that._isDataColumn(column) ? column.index : -1\r\n                        }))\r\n                    }\r\n                    return groupItem\r\n                },\r\n                _calculateSummaryCells: function(summaryItems, aggregates, visibleColumns, calculateTargetColumnIndex, isGroupRow) {\r\n                    var that = this;\r\n                    var summaryCells = [];\r\n                    var summaryCellsByColumns = {};\r\n                    each(summaryItems, (function(summaryIndex, summaryItem) {\r\n                        var column = that._columnsController.columnOption(summaryItem.column);\r\n                        var showInColumn = summaryItem.showInColumn && that._columnsController.columnOption(summaryItem.showInColumn) || column;\r\n                        var columnIndex = calculateTargetColumnIndex(summaryItem, showInColumn);\r\n                        if (columnIndex >= 0) {\r\n                            if (!summaryCellsByColumns[columnIndex]) {\r\n                                summaryCellsByColumns[columnIndex] = []\r\n                            }\r\n                            var aggregate = aggregates[summaryIndex];\r\n                            if (aggregate === aggregate) {\r\n                                var valueFormat;\r\n                                if (isDefined(summaryItem.valueFormat)) {\r\n                                    valueFormat = summaryItem.valueFormat\r\n                                } else if (\"count\" !== summaryItem.summaryType) {\r\n                                    valueFormat = gridCore.getFormatByDataType(column && column.dataType)\r\n                                }\r\n                                summaryCellsByColumns[columnIndex].push(extend({}, summaryItem, {\r\n                                    value: isString(aggregate) && column && column.deserializeValue ? column.deserializeValue(aggregate) : aggregate,\r\n                                    valueFormat: valueFormat,\r\n                                    columnCaption: column && column.index !== columnIndex ? column.caption : void 0\r\n                                }))\r\n                            }\r\n                        }\r\n                    }));\r\n                    if (!isEmptyObject(summaryCellsByColumns)) {\r\n                        visibleColumns.forEach((column, visibleIndex) => {\r\n                            var prevColumn = visibleColumns[visibleIndex - 1];\r\n                            var columnIndex = isGroupRow && (\"expand\" === (null === prevColumn || void 0 === prevColumn ? void 0 : prevColumn.command) || \"expand\" === column.command) ? null === prevColumn || void 0 === prevColumn ? void 0 : prevColumn.index : column.index;\r\n                            summaryCells.push(summaryCellsByColumns[columnIndex] || [])\r\n                        })\r\n                    }\r\n                    return summaryCells\r\n                },\r\n                _getSummaryCells: function(summaryTotalItems, totalAggregates) {\r\n                    var that = this;\r\n                    var columnsController = that._columnsController;\r\n                    return that._calculateSummaryCells(summaryTotalItems, totalAggregates, columnsController.getVisibleColumns(), (function(summaryItem, column) {\r\n                        return that._isDataColumn(column) ? column.index : -1\r\n                    }))\r\n                },\r\n                _updateItemsCore: function(change) {\r\n                    var summaryCells;\r\n                    var dataSource = this._dataSource;\r\n                    var footerItems = this._footerItems;\r\n                    var oldSummaryCells = footerItems && footerItems[0] && footerItems[0].summaryCells;\r\n                    var summaryTotalItems = this.option(\"summary.totalItems\");\r\n                    this._footerItems = [];\r\n                    if (dataSource && summaryTotalItems && summaryTotalItems.length) {\r\n                        var totalAggregates = dataSource.totalAggregates();\r\n                        summaryCells = this._getSummaryCells(summaryTotalItems, totalAggregates);\r\n                        if (change && change.repaintChangesOnly && oldSummaryCells) {\r\n                            change.totalColumnIndices = summaryCells.map((function(summaryCell, index) {\r\n                                if (JSON.stringify(summaryCell) !== JSON.stringify(oldSummaryCells[index])) {\r\n                                    return index\r\n                                }\r\n                                return -1\r\n                            })).filter(index => index >= 0)\r\n                        }\r\n                        if (summaryCells.length) {\r\n                            this._footerItems.push({\r\n                                rowType: \"totalFooter\",\r\n                                summaryCells: summaryCells\r\n                            })\r\n                        }\r\n                    }\r\n                    this.callBase(change)\r\n                },\r\n                _prepareUnsavedDataSelector: function(selector) {\r\n                    if (recalculateWhileEditing(this)) {\r\n                        var editingController = this.getController(\"editing\");\r\n                        if (editingController) {\r\n                            return function(data) {\r\n                                data = editingController.getUpdatedData(data);\r\n                                return selector(data)\r\n                            }\r\n                        }\r\n                    }\r\n                    return selector\r\n                },\r\n                _prepareAggregateSelector: function(selector, aggregator) {\r\n                    selector = this._prepareUnsavedDataSelector(selector);\r\n                    if (\"avg\" === aggregator || \"sum\" === aggregator) {\r\n                        return function(data) {\r\n                            var value = selector(data);\r\n                            return isDefined(value) ? Number(value) : value\r\n                        }\r\n                    }\r\n                    return selector\r\n                },\r\n                _getAggregates: function(summaryItems, remoteOperations) {\r\n                    var that = this;\r\n                    var columnsController = that.getController(\"columns\");\r\n                    var calculateCustomSummary = that.option(\"summary.calculateCustomSummary\");\r\n                    var commonSkipEmptyValues = that.option(\"summary.skipEmptyValues\");\r\n                    return map(summaryItems || [], (function(summaryItem) {\r\n                        var column = columnsController.columnOption(summaryItem.column);\r\n                        var calculateCellValue = column && column.calculateCellValue ? column.calculateCellValue.bind(column) : compileGetter(column ? column.dataField : summaryItem.column);\r\n                        var aggregator = summaryItem.summaryType || \"count\";\r\n                        var selector = summaryItem.column;\r\n                        var skipEmptyValues = isDefined(summaryItem.skipEmptyValues) ? summaryItem.skipEmptyValues : commonSkipEmptyValues;\r\n                        if (remoteOperations) {\r\n                            return {\r\n                                selector: summaryItem.column,\r\n                                summaryType: aggregator\r\n                            }\r\n                        } else {\r\n                            selector = that._prepareAggregateSelector(calculateCellValue, aggregator);\r\n                            if (\"custom\" === aggregator) {\r\n                                if (!calculateCustomSummary) {\r\n                                    errors.log(\"E1026\");\r\n                                    calculateCustomSummary = function() {}\r\n                                }\r\n                                var options = {\r\n                                    component: that.component,\r\n                                    name: summaryItem.name\r\n                                };\r\n                                calculateCustomSummary(options);\r\n                                options.summaryProcess = \"calculate\";\r\n                                aggregator = {\r\n                                    seed: function(groupIndex) {\r\n                                        options.summaryProcess = \"start\";\r\n                                        options.totalValue = void 0;\r\n                                        options.groupIndex = groupIndex;\r\n                                        delete options.value;\r\n                                        calculateCustomSummary(options);\r\n                                        return options.totalValue\r\n                                    },\r\n                                    step: function(totalValue, value) {\r\n                                        options.summaryProcess = \"calculate\";\r\n                                        options.totalValue = totalValue;\r\n                                        options.value = value;\r\n                                        calculateCustomSummary(options);\r\n                                        return options.totalValue\r\n                                    },\r\n                                    finalize: function(totalValue) {\r\n                                        options.summaryProcess = \"finalize\";\r\n                                        options.totalValue = totalValue;\r\n                                        delete options.value;\r\n                                        calculateCustomSummary(options);\r\n                                        return options.totalValue\r\n                                    }\r\n                                }\r\n                            }\r\n                            return {\r\n                                selector: selector,\r\n                                aggregator: aggregator,\r\n                                skipEmptyValues: skipEmptyValues\r\n                            }\r\n                        }\r\n                    }))\r\n                },\r\n                _addSortInfo: function(sortByGroups, groupColumn, selector, sortOrder) {\r\n                    if (groupColumn) {\r\n                        var groupIndex = groupColumn.groupIndex;\r\n                        sortOrder = sortOrder || groupColumn.sortOrder;\r\n                        if (isDefined(groupIndex)) {\r\n                            sortByGroups[groupIndex] = sortByGroups[groupIndex] || [];\r\n                            sortByGroups[groupIndex].push({\r\n                                selector: selector,\r\n                                desc: \"desc\" === sortOrder\r\n                            })\r\n                        }\r\n                    }\r\n                },\r\n                _findSummaryItem: function(summaryItems, name) {\r\n                    var summaryItemIndex = -1;\r\n                    if (isDefined(name)) {\r\n                        each(summaryItems || [], (function(index) {\r\n                            if (this.name === name || index === name || this.summaryType === name || this.column === name || (summaryItem = this, summaryType = summaryItem.summaryType, column = summaryItem.column, summaryType && column && summaryType + \"_\" + column) === name) {\r\n                                summaryItemIndex = index;\r\n                                return false\r\n                            }\r\n                            var summaryItem, summaryType, column\r\n                        }))\r\n                    }\r\n                    return summaryItemIndex\r\n                },\r\n                _getSummarySortByGroups: function(sortByGroupSummaryInfo, groupSummaryItems) {\r\n                    var that = this;\r\n                    var columnsController = that._columnsController;\r\n                    var groupColumns = columnsController.getGroupColumns();\r\n                    var sortByGroups = [];\r\n                    if (!groupSummaryItems || !groupSummaryItems.length) {\r\n                        return\r\n                    }\r\n                    each(sortByGroupSummaryInfo || [], (function() {\r\n                        var sortOrder = this.sortOrder;\r\n                        var groupColumn = this.groupColumn;\r\n                        var summaryItemIndex = that._findSummaryItem(groupSummaryItems, this.summaryItem);\r\n                        if (summaryItemIndex < 0) {\r\n                            return\r\n                        }\r\n                        var selector = function(data) {\r\n                            return getGroupAggregates(data)[summaryItemIndex]\r\n                        };\r\n                        if (isDefined(groupColumn)) {\r\n                            groupColumn = columnsController.columnOption(groupColumn);\r\n                            that._addSortInfo(sortByGroups, groupColumn, selector, sortOrder)\r\n                        } else {\r\n                            each(groupColumns, (function(groupIndex, groupColumn) {\r\n                                that._addSortInfo(sortByGroups, groupColumn, selector, sortOrder)\r\n                            }))\r\n                        }\r\n                    }));\r\n                    return sortByGroups\r\n                },\r\n                _createDataSourceAdapterCore: function(dataSource, remoteOperations) {\r\n                    var that = this;\r\n                    var dataSourceAdapter = this.callBase(dataSource, remoteOperations);\r\n                    dataSourceAdapter.summaryGetter((function(currentRemoteOperations) {\r\n                        return that._getSummaryOptions(currentRemoteOperations || remoteOperations)\r\n                    }));\r\n                    return dataSourceAdapter\r\n                },\r\n                _getSummaryOptions: function(remoteOperations) {\r\n                    var that = this;\r\n                    var groupSummaryItems = that.option(\"summary.groupItems\");\r\n                    var totalSummaryItems = that.option(\"summary.totalItems\");\r\n                    var sortByGroupSummaryInfo = that.option(\"sortByGroupSummaryInfo\");\r\n                    var groupAggregates = that._getAggregates(groupSummaryItems, remoteOperations && remoteOperations.grouping && remoteOperations.summary);\r\n                    var totalAggregates = that._getAggregates(totalSummaryItems, remoteOperations && remoteOperations.summary);\r\n                    if (groupAggregates.length || totalAggregates.length) {\r\n                        return {\r\n                            groupAggregates: groupAggregates,\r\n                            totalAggregates: totalAggregates,\r\n                            sortByGroups: function() {\r\n                                return that._getSummarySortByGroups(sortByGroupSummaryInfo, groupSummaryItems)\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    var methods = this.callBase();\r\n                    methods.push(\"getTotalSummaryValue\");\r\n                    return methods\r\n                },\r\n                getTotalSummaryValue: function(summaryItemName) {\r\n                    var summaryItemIndex = this._findSummaryItem(this.option(\"summary.totalItems\"), summaryItemName);\r\n                    var aggregates = this._dataSource.totalAggregates();\r\n                    if (aggregates.length && summaryItemIndex > -1) {\r\n                        return aggregates[summaryItemIndex]\r\n                    }\r\n                },\r\n                optionChanged: function(args) {\r\n                    if (\"summary\" === args.name || \"sortByGroupSummaryInfo\" === args.name) {\r\n                        args.name = \"dataSource\"\r\n                    }\r\n                    this.callBase(args)\r\n                },\r\n                init: function() {\r\n                    this._footerItems = [];\r\n                    this.callBase()\r\n                },\r\n                footerItems: function() {\r\n                    return this._footerItems\r\n                }\r\n            },\r\n            editing: {\r\n                _refreshSummary: function() {\r\n                    if (recalculateWhileEditing(this) && !this.isSaving()) {\r\n                        this._dataController.refresh({\r\n                            load: true,\r\n                            changesOnly: true\r\n                        })\r\n                    }\r\n                },\r\n                _addChange: function(params) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    if (params.type) {\r\n                        this._refreshSummary()\r\n                    }\r\n                    return result\r\n                },\r\n                _removeChange: function() {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    this._refreshSummary();\r\n                    return result\r\n                },\r\n                cancelEditData: function() {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    this._refreshSummary();\r\n                    return result\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    row && $row.addClass(row.rowType === DATAGRID_GROUP_FOOTER_ROW_TYPE ? DATAGRID_GROUP_FOOTER_CLASS : \"\");\r\n                    return $row\r\n                },\r\n                _renderCells: function($row, options) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (\"group\" === options.row.rowType && options.row.summaryCells && options.row.summaryCells.length) {\r\n                        this._renderGroupSummaryCells($row, options)\r\n                    }\r\n                },\r\n                _hasAlignByColumnSummaryItems: function(columnIndex, options) {\r\n                    return !isDefined(options.columns[columnIndex].groupIndex) && options.row.summaryCells[columnIndex].length\r\n                },\r\n                _getAlignByColumnCellCount: function(groupCellColSpan, options) {\r\n                    var alignByColumnCellCount = 0;\r\n                    for (var i = 1; i < groupCellColSpan; i++) {\r\n                        var columnIndex = options.row.summaryCells.length - i;\r\n                        alignByColumnCellCount = this._hasAlignByColumnSummaryItems(columnIndex, options) ? i : alignByColumnCellCount\r\n                    }\r\n                    return alignByColumnCellCount\r\n                },\r\n                _renderGroupSummaryCells: function($row, options) {\r\n                    var $groupCell = $row.children().last();\r\n                    var groupCellColSpan = Number($groupCell.attr(\"colSpan\")) || 1;\r\n                    var alignByColumnCellCount = this._getAlignByColumnCellCount(groupCellColSpan, options);\r\n                    this._renderGroupSummaryCellsCore($groupCell, options, groupCellColSpan, alignByColumnCellCount)\r\n                },\r\n                _renderGroupSummaryCellsCore: function($groupCell, options, groupCellColSpan, alignByColumnCellCount) {\r\n                    if (alignByColumnCellCount > 0) {\r\n                        $groupCell.attr(\"colSpan\", groupCellColSpan - alignByColumnCellCount);\r\n                        for (var i = 0; i < alignByColumnCellCount; i++) {\r\n                            var columnIndex = options.columns.length - alignByColumnCellCount + i;\r\n                            this._renderCell($groupCell.parent(), extend({\r\n                                column: options.columns[columnIndex],\r\n                                columnIndex: this._getSummaryCellIndex(columnIndex, options.columns)\r\n                            }, options))\r\n                        }\r\n                    }\r\n                },\r\n                _getSummaryCellIndex: function(columnIndex) {\r\n                    return columnIndex\r\n                },\r\n                _getCellTemplate: function(options) {\r\n                    if (!options.column.command && !isDefined(options.column.groupIndex) && options.summaryItems && options.summaryItems.length) {\r\n                        return renderSummaryCell\r\n                    } else {\r\n                        return this.callBase(options)\r\n                    }\r\n                },\r\n                _getCellOptions: function(options) {\r\n                    var parameters = this.callBase(options);\r\n                    if (options.row.summaryCells) {\r\n                        return extend(parameters, getSummaryCellOptions(this, options))\r\n                    } else {\r\n                        return parameters\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_fixing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    name as wheelEventName\r\n} from \"../../events/core/wheel\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    move\r\n} from \"../../animation/translator\";\r\nimport Scrollable from \"../scroll_view/ui.scrollable\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar FIRST_CELL_CLASS = \"dx-first-cell\";\r\nvar LAST_CELL_CLASS = \"dx-last-cell\";\r\nvar HOVER_STATE_CLASS = \"dx-state-hover\";\r\nvar FIXED_COL_CLASS = \"dx-col-fixed\";\r\nvar FIXED_COLUMNS_CLASS = \"dx-fixed-columns\";\r\nvar POINTER_EVENTS_NONE_CLASS = \"dx-pointer-events-none\";\r\nvar COMMAND_TRANSPARENT = \"transparent\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar getTransparentColumnIndex = function(fixedColumns) {\r\n    var transparentColumnIndex = -1;\r\n    each(fixedColumns, (function(index, column) {\r\n        if (column.command === COMMAND_TRANSPARENT) {\r\n            transparentColumnIndex = index;\r\n            return false\r\n        }\r\n    }));\r\n    return transparentColumnIndex\r\n};\r\nvar normalizeColumnWidths = function(fixedColumns, widths, fixedWidths) {\r\n    var fixedColumnIndex = 0;\r\n    if (fixedColumns && widths && fixedWidths) {\r\n        for (var i = 0; i < fixedColumns.length; i++) {\r\n            if (fixedColumns[i].command === COMMAND_TRANSPARENT) {\r\n                fixedColumnIndex += fixedColumns[i].colspan\r\n            } else {\r\n                if (widths[fixedColumnIndex] < fixedWidths[i]) {\r\n                    widths[fixedColumnIndex] = fixedWidths[i]\r\n                }\r\n                fixedColumnIndex++\r\n            }\r\n        }\r\n    }\r\n    return widths\r\n};\r\nvar baseFixedColumns = {\r\n    init: function() {\r\n        this.callBase();\r\n        this._isFixedTableRendering = false;\r\n        this._isFixedColumns = false\r\n    },\r\n    _createCol: function(column) {\r\n        return this.callBase(column).toggleClass(FIXED_COL_CLASS, !!(this._isFixedTableRendering && (column.fixed || column.command && column.command !== COMMAND_TRANSPARENT)))\r\n    },\r\n    _correctColumnIndicesForFixedColumns: function(fixedColumns, change) {\r\n        var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n        var transparentColspan = fixedColumns[transparentColumnIndex].colspan;\r\n        var columnIndices = change && change.columnIndices;\r\n        if (columnIndices) {\r\n            change.columnIndices = columnIndices.map((function(columnIndices) {\r\n                if (columnIndices) {\r\n                    return columnIndices.map((function(columnIndex) {\r\n                        if (columnIndex < transparentColumnIndex) {\r\n                            return columnIndex\r\n                        } else if (columnIndex >= transparentColumnIndex + transparentColspan) {\r\n                            return columnIndex - transparentColspan + 1\r\n                        }\r\n                        return -1\r\n                    })).filter((function(columnIndex) {\r\n                        return columnIndex >= 0\r\n                    }))\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    _partialUpdateFixedTable(fixedColumns) {\r\n        var fixedTableElement = this._fixedTableElement;\r\n        var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n        var transparentColumn = fixedColumns[transparentColumnIndex];\r\n        var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n        var $rows = this._getRowElementsCore(fixedTableElement);\r\n        var $colgroup = fixedTableElement.children(\"colgroup\");\r\n        $colgroup.replaceWith(this._createColGroup(fixedColumns));\r\n        for (var i = 0; i < $rows.length; i++) {\r\n            var cellElements = $rows[i].childNodes;\r\n            var colIndex = columnIndexOffset + 1;\r\n            for (var j = 0; j < cellElements.length; j++) {\r\n                cellElements[j].setAttribute(\"aria-colindex\", colIndex);\r\n                if (j === transparentColumnIndex) {\r\n                    cellElements[j].setAttribute(\"colspan\", transparentColumn.colspan);\r\n                    colIndex += transparentColumn.colspan\r\n                } else {\r\n                    colIndex++\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _renderTable: function(options) {\r\n        var $fixedTable;\r\n        var fixedColumns = this.getFixedColumns();\r\n        this._isFixedColumns = !!fixedColumns.length;\r\n        var $table = this.callBase(options);\r\n        if (this._isFixedColumns) {\r\n            var change = null === options || void 0 === options ? void 0 : options.change;\r\n            this._isFixedTableRendering = true;\r\n            if (null !== change && void 0 !== change && change.virtualColumnsScrolling && true !== this.option(\"scrolling.legacyMode\")) {\r\n                this._partialUpdateFixedTable(fixedColumns)\r\n            } else {\r\n                var columnIndices = null === change || void 0 === change ? void 0 : change.columnIndices;\r\n                this._correctColumnIndicesForFixedColumns(fixedColumns, change);\r\n                $fixedTable = this._createTable(fixedColumns);\r\n                this._renderRows($fixedTable, extend({}, options, {\r\n                    columns: fixedColumns\r\n                }));\r\n                this._updateContent($fixedTable, change);\r\n                if (columnIndices) {\r\n                    change.columnIndices = columnIndices\r\n                }\r\n            }\r\n            this._isFixedTableRendering = false\r\n        } else {\r\n            this._fixedTableElement && this._fixedTableElement.parent().remove();\r\n            this._fixedTableElement = null\r\n        }\r\n        return $table\r\n    },\r\n    _renderRow: function($table, options) {\r\n        var fixedCorrection;\r\n        var cells = options.row.cells;\r\n        this.callBase.apply(this, arguments);\r\n        if (this._isFixedTableRendering && cells && cells.length) {\r\n            fixedCorrection = 0;\r\n            var fixedCells = options.row.cells || [];\r\n            cells = cells.slice();\r\n            options.row.cells = cells;\r\n            for (var i = 0; i < fixedCells.length; i++) {\r\n                if (fixedCells[i].column && fixedCells[i].column.command === COMMAND_TRANSPARENT) {\r\n                    fixedCorrection = (fixedCells[i].column.colspan || 1) - 1;\r\n                    continue\r\n                }\r\n                cells[i + fixedCorrection] = fixedCells[i]\r\n            }\r\n        }\r\n    },\r\n    _createCell: function(options) {\r\n        var that = this;\r\n        var column = options.column;\r\n        var columnCommand = column && column.command;\r\n        var rowType = options.rowType;\r\n        var $cell = that.callBase.apply(that, arguments);\r\n        var fixedColumns;\r\n        var prevFixedColumn;\r\n        var transparentColumnIndex;\r\n        if (that._isFixedTableRendering || \"filter\" === rowType) {\r\n            fixedColumns = that.getFixedColumns();\r\n            transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n            prevFixedColumn = fixedColumns[transparentColumnIndex - 1]\r\n        }\r\n        if (that._isFixedTableRendering) {\r\n            if (columnCommand === COMMAND_TRANSPARENT) {\r\n                $cell.addClass(POINTER_EVENTS_NONE_CLASS).toggleClass(FIRST_CELL_CLASS, 0 === transparentColumnIndex || prevFixedColumn && \"expand\" === prevFixedColumn.command).toggleClass(LAST_CELL_CLASS, fixedColumns.length && transparentColumnIndex === fixedColumns.length - 1);\r\n                if (\"freeSpace\" !== rowType) {\r\n                    gridCoreUtils.setEmptyText($cell)\r\n                }\r\n            }\r\n        } else if (\"filter\" === rowType) {\r\n            $cell.toggleClass(FIRST_CELL_CLASS, options.columnIndex === transparentColumnIndex)\r\n        }\r\n        var isRowAltStyle = that.option(\"rowAlternationEnabled\") && options.isAltRow;\r\n        if (browser.mozilla && options.column.fixed && \"group\" !== options.rowType && !isRowAltStyle) {\r\n            $cell.addClass(FIXED_COL_CLASS)\r\n        }\r\n        return $cell\r\n    },\r\n    _wrapTableInScrollContainer: function() {\r\n        var $scrollContainer = this.callBase.apply(this, arguments);\r\n        if (this._isFixedTableRendering) {\r\n            $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_FIXED_CLASS))\r\n        }\r\n        return $scrollContainer\r\n    },\r\n    _renderCellContent: function($cell, options) {\r\n        var isEmptyCell;\r\n        var column = options.column;\r\n        var isFixedTableRendering = this._isFixedTableRendering;\r\n        var isGroupCell = \"group\" === options.rowType && isDefined(column.groupIndex);\r\n        if (isFixedTableRendering && isGroupCell && !column.command && !column.groupCellTemplate) {\r\n            $cell.css(\"pointerEvents\", \"none\")\r\n        }\r\n        if (!isFixedTableRendering && this._isFixedColumns) {\r\n            isEmptyCell = column.fixed || column.command && false !== column.fixed;\r\n            if (isGroupCell) {\r\n                isEmptyCell = false;\r\n                if (options.row.summaryCells && options.row.summaryCells.length) {\r\n                    var columns = this._columnsController.getVisibleColumns();\r\n                    var alignByFixedColumnCellCount = this._getAlignByColumnCellCount ? this._getAlignByColumnCellCount(column.colspan, {\r\n                        columns: columns,\r\n                        row: options.row,\r\n                        isFixed: true\r\n                    }) : 0;\r\n                    if (alignByFixedColumnCellCount > 0) {\r\n                        var transparentColumnIndex = getTransparentColumnIndex(this._columnsController.getFixedColumns());\r\n                        isEmptyCell = columns.length - alignByFixedColumnCellCount < transparentColumnIndex\r\n                    }\r\n                }\r\n            }\r\n            if (isEmptyCell) {\r\n                if (column.command && \"buttons\" !== column.type || \"group\" === options.rowType) {\r\n                    $cell.html(\"&nbsp;\").addClass(column.cssClass);\r\n                    return\r\n                } else {\r\n                    $cell.addClass(\"dx-hidden-cell\")\r\n                }\r\n            }\r\n        }\r\n        if (column.command !== COMMAND_TRANSPARENT) {\r\n            this.callBase($cell, options)\r\n        }\r\n    },\r\n    _getCellElementsCore: function(rowIndex) {\r\n        var cellElements = this.callBase.apply(this, arguments);\r\n        var isGroupRow = cellElements.parent().hasClass(GROUP_ROW_CLASS);\r\n        var headerRowIndex = \"columnHeadersView\" === this.name ? rowIndex : void 0;\r\n        if (this._fixedTableElement && cellElements) {\r\n            var fixedColumns = this.getFixedColumns(headerRowIndex);\r\n            var fixedCellElements = this._getRowElements(this._fixedTableElement).eq(rowIndex).children(\"td\");\r\n            each(fixedCellElements, (columnIndex, cell) => {\r\n                if (isGroupRow) {\r\n                    if (cellElements[columnIndex] && \"hidden\" !== cell.style.visibility) {\r\n                        cellElements[columnIndex] = cell\r\n                    }\r\n                } else {\r\n                    var fixedColumn = fixedColumns[columnIndex];\r\n                    if (fixedColumn) {\r\n                        if (fixedColumn.command === COMMAND_TRANSPARENT) {\r\n                            if (fixedCellElements.eq(columnIndex).hasClass(MASTER_DETAIL_CELL_CLASS)) {\r\n                                cellElements[columnIndex] = cell || cellElements[columnIndex]\r\n                            }\r\n                        } else {\r\n                            var fixedColumnIndex = this._columnsController.getVisibleIndexByColumn(fixedColumn, headerRowIndex);\r\n                            cellElements[fixedColumnIndex] = cell || cellElements[fixedColumnIndex]\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        return cellElements\r\n    },\r\n    getColumnWidths: function() {\r\n        var fixedWidths;\r\n        var result = this.callBase();\r\n        var fixedColumns = this.getFixedColumns();\r\n        if (this._fixedTableElement && result.length) {\r\n            fixedWidths = this.callBase(this._fixedTableElement)\r\n        }\r\n        return normalizeColumnWidths(fixedColumns, result, fixedWidths)\r\n    },\r\n    getTableElement: function() {\r\n        var tableElement = this._isFixedTableRendering ? this._fixedTableElement : this.callBase();\r\n        return tableElement\r\n    },\r\n    setTableElement: function(tableElement) {\r\n        if (this._isFixedTableRendering) {\r\n            this._fixedTableElement = tableElement.addClass(POINTER_EVENTS_NONE_CLASS)\r\n        } else {\r\n            this.callBase(tableElement)\r\n        }\r\n    },\r\n    getColumns: function(rowIndex, $tableElement) {\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if (this._isFixedTableRendering || $tableElement && $tableElement.closest(\"table\").parent(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).length) {\r\n            return this.getFixedColumns(rowIndex)\r\n        }\r\n        return this.callBase(rowIndex, $tableElement)\r\n    },\r\n    getRowIndex: function($row) {\r\n        var $fixedTable = this._fixedTableElement;\r\n        if ($fixedTable && $fixedTable.find($row).length) {\r\n            return this._getRowElements($fixedTable).index($row)\r\n        }\r\n        return this.callBase($row)\r\n    },\r\n    getTableElements: function() {\r\n        var result = this.callBase.apply(this, arguments);\r\n        if (this._fixedTableElement) {\r\n            result = $([result.get(0), this._fixedTableElement.get(0)])\r\n        }\r\n        return result\r\n    },\r\n    getFixedColumns: function(rowIndex) {\r\n        return this._columnsController.getFixedColumns(rowIndex)\r\n    },\r\n    getFixedColumnsOffset: function() {\r\n        var offset = {\r\n            left: 0,\r\n            right: 0\r\n        };\r\n        var $transparentColumn;\r\n        if (this._fixedTableElement) {\r\n            $transparentColumn = this.getTransparentColumnElement();\r\n            var positionTransparentColumn = $transparentColumn.position();\r\n            offset = {\r\n                left: positionTransparentColumn.left,\r\n                right: getOuterWidth(this.element(), true) - (getOuterWidth($transparentColumn, true) + positionTransparentColumn.left)\r\n            }\r\n        }\r\n        return offset\r\n    },\r\n    getTransparentColumnElement: function() {\r\n        return this._fixedTableElement && this._fixedTableElement.find(\".\" + POINTER_EVENTS_NONE_CLASS).first()\r\n    },\r\n    getFixedTableElement: function() {\r\n        return this._fixedTableElement\r\n    },\r\n    isFixedColumns: function() {\r\n        return this._isFixedColumns\r\n    },\r\n    _resizeCore: function() {\r\n        this.callBase();\r\n        this.synchronizeRows()\r\n    },\r\n    setColumnWidths: function(options) {\r\n        var columns;\r\n        var visibleColumns = this._columnsController.getVisibleColumns();\r\n        var widths = options.widths;\r\n        var isWidthsSynchronized = widths && widths.length && isDefined(visibleColumns[0].visibleWidth);\r\n        var optionNames = options.optionNames;\r\n        var isColumnWidthChanged = optionNames && optionNames.width;\r\n        var useVisibleColumns = false;\r\n        this.callBase.apply(this, arguments);\r\n        if (this._fixedTableElement) {\r\n            var hasAutoWidth = widths && widths.some((function(width) {\r\n                return \"auto\" === width\r\n            }));\r\n            useVisibleColumns = hasAutoWidth && (!isWidthsSynchronized || !this.isScrollbarVisible(true));\r\n            if (useVisibleColumns) {\r\n                columns = visibleColumns\r\n            }\r\n            this.callBase(extend({}, options, {\r\n                $tableElement: this._fixedTableElement,\r\n                columns: columns,\r\n                fixed: true\r\n            }))\r\n        }\r\n        if (isWidthsSynchronized || isColumnWidthChanged && this.option(\"wordWrapEnabled\")) {\r\n            this.synchronizeRows()\r\n        }\r\n    },\r\n    _createColGroup: function(columns) {\r\n        if (this._isFixedTableRendering && !this.option(\"columnAutoWidth\")) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var useVisibleColumns = visibleColumns.filter((function(column) {\r\n                return !column.width\r\n            })).length;\r\n            if (useVisibleColumns) {\r\n                columns = visibleColumns\r\n            }\r\n        }\r\n        return this.callBase(columns)\r\n    },\r\n    _getClientHeight: function(element) {\r\n        var boundingClientRectElement = element.getBoundingClientRect && getBoundingRect(element);\r\n        return boundingClientRectElement && boundingClientRectElement.height ? boundingClientRectElement.height : element.clientHeight\r\n    },\r\n    synchronizeRows: function() {\r\n        var rowHeights = [];\r\n        var fixedRowHeights = [];\r\n        var rowIndex;\r\n        var $rowElements;\r\n        var $fixedRowElements;\r\n        var $contentElement;\r\n        if (this._isFixedColumns && this._tableElement && this._fixedTableElement) {\r\n            var heightTable = this._getClientHeight(this._tableElement.get(0));\r\n            var heightFixedTable = this._getClientHeight(this._fixedTableElement.get(0));\r\n            $rowElements = this._getRowElements(this._tableElement);\r\n            $fixedRowElements = this._getRowElements(this._fixedTableElement);\r\n            $contentElement = this._findContentElement();\r\n            if (heightTable !== heightFixedTable) {\r\n                $contentElement && $contentElement.css(\"height\", heightTable);\r\n                $rowElements.css(\"height\", \"\");\r\n                $fixedRowElements.css(\"height\", \"\");\r\n                for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\r\n                    rowHeights.push(this._getClientHeight($rowElements.get(rowIndex)));\r\n                    fixedRowHeights.push(this._getClientHeight($fixedRowElements.get(rowIndex)))\r\n                }\r\n                for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\r\n                    var rowHeight = rowHeights[rowIndex];\r\n                    var fixedRowHeight = fixedRowHeights[rowIndex];\r\n                    if (rowHeight > fixedRowHeight) {\r\n                        $fixedRowElements.eq(rowIndex).css(\"height\", rowHeight)\r\n                    } else if (rowHeight < fixedRowHeight) {\r\n                        $rowElements.eq(rowIndex).css(\"height\", fixedRowHeight)\r\n                    }\r\n                }\r\n                $contentElement && $contentElement.css(\"height\", \"\")\r\n            }\r\n        }\r\n    },\r\n    setScrollerSpacing: function(width) {\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        this.callBase(width);\r\n        this.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).css({\r\n            paddingLeft: rtlEnabled ? width : \"\",\r\n            paddingRight: !rtlEnabled ? width : \"\"\r\n        })\r\n    }\r\n};\r\nvar ColumnHeadersViewFixedColumnsExtender = extend({}, baseFixedColumns, {\r\n    _getRowVisibleColumns: function(rowIndex) {\r\n        if (this._isFixedTableRendering) {\r\n            return this.getFixedColumns(rowIndex)\r\n        }\r\n        return this.callBase(rowIndex)\r\n    },\r\n    getContextMenuItems: function(options) {\r\n        var column = options.column;\r\n        var columnFixingOptions = this.option(\"columnFixing\");\r\n        var items = this.callBase(options);\r\n        if (options.row && \"header\" === options.row.rowType) {\r\n            if (true === columnFixingOptions.enabled && column && column.allowFixing) {\r\n                var onItemClick = params => {\r\n                    switch (params.itemData.value) {\r\n                        case \"none\":\r\n                            this._columnsController.columnOption(column.index, \"fixed\", false);\r\n                            break;\r\n                        case \"left\":\r\n                            this._columnsController.columnOption(column.index, {\r\n                                fixed: true,\r\n                                fixedPosition: \"left\"\r\n                            });\r\n                            break;\r\n                        case \"right\":\r\n                            this._columnsController.columnOption(column.index, {\r\n                                fixed: true,\r\n                                fixedPosition: \"right\"\r\n                            })\r\n                    }\r\n                };\r\n                items = items || [];\r\n                items.push({\r\n                    text: columnFixingOptions.texts.fix,\r\n                    beginGroup: true,\r\n                    items: [{\r\n                        text: columnFixingOptions.texts.leftPosition,\r\n                        value: \"left\",\r\n                        disabled: column.fixed && (!column.fixedPosition || \"left\" === column.fixedPosition),\r\n                        onItemClick: onItemClick\r\n                    }, {\r\n                        text: columnFixingOptions.texts.rightPosition,\r\n                        value: \"right\",\r\n                        disabled: column.fixed && \"right\" === column.fixedPosition,\r\n                        onItemClick: onItemClick\r\n                    }]\r\n                }, {\r\n                    text: columnFixingOptions.texts.unfix,\r\n                    value: \"none\",\r\n                    disabled: !column.fixed,\r\n                    onItemClick: onItemClick\r\n                })\r\n            }\r\n        }\r\n        return items\r\n    },\r\n    getFixedColumnElements: function(rowIndex) {\r\n        if (isDefined(rowIndex)) {\r\n            return this._fixedTableElement && this._getRowElements(this._fixedTableElement).eq(rowIndex).children()\r\n        }\r\n        var columnElements = this.getColumnElements();\r\n        var $transparentColumnElement = this.getTransparentColumnElement();\r\n        if (columnElements && $transparentColumnElement && $transparentColumnElement.length) {\r\n            var transparentColumnIndex = getTransparentColumnIndex(this.getFixedColumns());\r\n            columnElements.splice(transparentColumnIndex, $transparentColumnElement.get(0).colSpan, $transparentColumnElement.get(0))\r\n        }\r\n        return columnElements\r\n    },\r\n    getColumnWidths: function() {\r\n        var fixedWidths;\r\n        var result = this.callBase();\r\n        var $fixedColumnElements = this.getFixedColumnElements();\r\n        var fixedColumns = this.getFixedColumns();\r\n        if (this._fixedTableElement) {\r\n            if ($fixedColumnElements && $fixedColumnElements.length) {\r\n                fixedWidths = this._getWidths($fixedColumnElements)\r\n            } else {\r\n                fixedWidths = this.callBase(this._fixedTableElement)\r\n            }\r\n        }\r\n        return normalizeColumnWidths(fixedColumns, result, fixedWidths)\r\n    }\r\n});\r\nvar RowsViewFixedColumnsExtender = extend({}, baseFixedColumns, {\r\n    _detachHoverEvents: function() {\r\n        this._fixedTableElement && eventsEngine.off(this._fixedTableElement, \"mouseover mouseout\", \".dx-data-row\");\r\n        this._tableElement && eventsEngine.off(this._tableElement, \"mouseover mouseout\", \".dx-data-row\")\r\n    },\r\n    _attachHoverEvents: function() {\r\n        var that = this;\r\n        var attachHoverEvent = function($table) {\r\n            eventsEngine.on($table, \"mouseover mouseout\", \".dx-data-row\", that.createAction((function(args) {\r\n                var event = args.event;\r\n                var rowIndex = that.getRowIndex($(event.target).closest(\".dx-row\"));\r\n                var isHover = \"mouseover\" === event.type;\r\n                if (rowIndex >= 0) {\r\n                    that._tableElement && that._getRowElements(that._tableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover);\r\n                    that._fixedTableElement && that._getRowElements(that._fixedTableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover)\r\n                }\r\n            })))\r\n        };\r\n        if (that._fixedTableElement && that._tableElement) {\r\n            attachHoverEvent(that._fixedTableElement);\r\n            attachHoverEvent(that._tableElement)\r\n        }\r\n    },\r\n    _findContentElement: function() {\r\n        var that = this;\r\n        var $content;\r\n        var scrollTop;\r\n        var contentClass = that.addWidgetPrefix(CONTENT_CLASS);\r\n        var element = that.element();\r\n        var scrollDelay = browser.mozilla ? 60 : 0;\r\n        if (element && that._isFixedTableRendering) {\r\n            $content = element.children(\".\" + contentClass);\r\n            var scrollable = that.getScrollable();\r\n            if (!$content.length && scrollable) {\r\n                $content = $(\"<div>\").addClass(contentClass);\r\n                eventsEngine.on($content, \"scroll\", (function(e) {\r\n                    clearTimeout(that._fixedScrollTimeout);\r\n                    that._fixedScrollTimeout = setTimeout((function() {\r\n                        scrollTop = $(e.target).scrollTop();\r\n                        scrollable.scrollTo({\r\n                            y: scrollTop\r\n                        })\r\n                    }), scrollDelay)\r\n                }));\r\n                eventsEngine.on($content, wheelEventName, (function(e) {\r\n                    var $nearestScrollable = $(e.target).closest(\".dx-scrollable\");\r\n                    var shouldScroll = false;\r\n                    if (scrollable && scrollable.$element().is($nearestScrollable)) {\r\n                        shouldScroll = true\r\n                    } else {\r\n                        var nearestScrollableInstance = $nearestScrollable.length && Scrollable.getInstance($nearestScrollable.get(0));\r\n                        var nearestScrollableHasVerticalScrollbar = nearestScrollableInstance && nearestScrollableInstance.scrollHeight() - nearestScrollableInstance.clientHeight() > 0;\r\n                        shouldScroll = nearestScrollableInstance && !nearestScrollableHasVerticalScrollbar\r\n                    }\r\n                    if (shouldScroll) {\r\n                        scrollTop = scrollable.scrollTop();\r\n                        scrollable.scrollTo({\r\n                            y: scrollTop - e.delta\r\n                        });\r\n                        if (scrollable.scrollTop() > 0 && scrollable.scrollTop() + scrollable.clientHeight() < scrollable.scrollHeight() + that.getScrollbarWidth()) {\r\n                            return false\r\n                        }\r\n                    }\r\n                }));\r\n                $content.appendTo(element)\r\n            }\r\n            return $content\r\n        }\r\n        return that.callBase()\r\n    },\r\n    _updateScrollable: function() {\r\n        this.callBase();\r\n        var scrollable = this.getScrollable();\r\n        if (null !== scrollable && void 0 !== scrollable && scrollable._disposed) {\r\n            return\r\n        }\r\n        var scrollTop = scrollable && scrollable.scrollOffset().top;\r\n        this._updateFixedTablePosition(scrollTop)\r\n    },\r\n    _renderContent: function(contentElement, tableElement) {\r\n        if (this._isFixedTableRendering) {\r\n            return contentElement.empty().addClass(this.addWidgetPrefix(CONTENT_CLASS) + \" \" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).append(tableElement)\r\n        }\r\n        return this.callBase(contentElement, tableElement)\r\n    },\r\n    _getGroupCellOptions: function(options) {\r\n        if (this._isFixedTableRendering) {\r\n            return this.callBase(extend({}, options, {\r\n                columns: this._columnsController.getVisibleColumns()\r\n            }))\r\n        }\r\n        return this.callBase(options)\r\n    },\r\n    _renderGroupedCells: function($row, options) {\r\n        return this.callBase($row, extend({}, options, {\r\n            columns: this._columnsController.getVisibleColumns()\r\n        }))\r\n    },\r\n    _renderGroupSummaryCells: function($row, options) {\r\n        if (this._isFixedTableRendering) {\r\n            this.callBase($row, extend({}, options, {\r\n                columns: this._columnsController.getVisibleColumns()\r\n            }))\r\n        } else {\r\n            this.callBase($row, options)\r\n        }\r\n    },\r\n    _hasAlignByColumnSummaryItems: function(columnIndex, options) {\r\n        var result = this.callBase.apply(this, arguments);\r\n        var column = options.columns[columnIndex];\r\n        if (options.isFixed) {\r\n            return column.fixed && (result || \"right\" === column.fixedPosition)\r\n        }\r\n        return result && (!this._isFixedColumns || !column.fixed)\r\n    },\r\n    _renderGroupSummaryCellsCore: function($groupCell, options, groupCellColSpan, alignByColumnCellCount) {\r\n        var alignByFixedColumnCellCount;\r\n        if (this._isFixedTableRendering) {\r\n            options.isFixed = true;\r\n            alignByFixedColumnCellCount = this._getAlignByColumnCellCount(groupCellColSpan, options);\r\n            options.isFixed = false;\r\n            var startColumnIndex = options.columns.length - alignByFixedColumnCellCount;\r\n            options = extend({}, options, {\r\n                columns: this.getFixedColumns()\r\n            });\r\n            var transparentColumnIndex = getTransparentColumnIndex(options.columns);\r\n            if (startColumnIndex < transparentColumnIndex) {\r\n                alignByFixedColumnCellCount -= options.columns[transparentColumnIndex].colspan - 1 || 0;\r\n                groupCellColSpan -= options.columns[transparentColumnIndex].colspan - 1 || 0\r\n            } else if (alignByColumnCellCount > 0) {\r\n                $groupCell.css(\"visibility\", \"hidden\")\r\n            }\r\n            alignByColumnCellCount = alignByFixedColumnCellCount\r\n        }\r\n        this.callBase($groupCell, options, groupCellColSpan, alignByColumnCellCount)\r\n    },\r\n    _getSummaryCellIndex: function(columnIndex, columns) {\r\n        if (this._isFixedTableRendering) {\r\n            var transparentColumnIndex = getTransparentColumnIndex(columns);\r\n            if (columnIndex > transparentColumnIndex) {\r\n                columnIndex += columns[transparentColumnIndex].colspan - 1\r\n            }\r\n            return columnIndex\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _renderCore: function(change) {\r\n        this._detachHoverEvents();\r\n        this.callBase(change);\r\n        var isFixedColumns = this._isFixedColumns;\r\n        this.element().toggleClass(FIXED_COLUMNS_CLASS, isFixedColumns);\r\n        if (this.option(\"hoverStateEnabled\") && isFixedColumns) {\r\n            this._attachHoverEvents()\r\n        }\r\n    },\r\n    setRowsOpacity: function(columnIndex, value) {\r\n        this.callBase(columnIndex, value);\r\n        var $rows = this._getRowElements(this._fixedTableElement);\r\n        this._setRowsOpacityCore($rows, this.getFixedColumns(), columnIndex, value)\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        if (\"hoverStateEnabled\" === args.name && this._isFixedColumns) {\r\n            args.value ? this._attachHoverEvents() : this._detachHoverEvents()\r\n        }\r\n    },\r\n    getCellIndex: function($cell) {\r\n        var $fixedTable = this._fixedTableElement;\r\n        var cellIndex = 0;\r\n        if ($fixedTable && $cell.is(\"td\") && $cell.closest($fixedTable).length) {\r\n            var columns = this.getFixedColumns();\r\n            each(columns, (function(index, column) {\r\n                if (index === $cell[0].cellIndex) {\r\n                    return false\r\n                }\r\n                if (column.colspan) {\r\n                    cellIndex += column.colspan;\r\n                    return\r\n                }\r\n                cellIndex++\r\n            }));\r\n            return cellIndex\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _updateFixedTablePosition: function(scrollTop, needFocus) {\r\n        if (this._fixedTableElement && this._tableElement) {\r\n            var $focusedElement;\r\n            var editorFactory = this.getController(\"editorFactory\");\r\n            this._fixedTableElement.parent().scrollTop(scrollTop);\r\n            if (needFocus && editorFactory) {\r\n                $focusedElement = editorFactory.focus();\r\n                $focusedElement && editorFactory.focus($focusedElement)\r\n            }\r\n        }\r\n    },\r\n    setScrollerSpacing: function(vWidth, hWidth) {\r\n        var styles = {\r\n            marginBottom: 0\r\n        };\r\n        var $fixedContent = this.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\r\n        if ($fixedContent.length && this._fixedTableElement) {\r\n            $fixedContent.css(styles);\r\n            this._fixedTableElement.css(styles);\r\n            styles[this.option(\"rtlEnabled\") ? \"marginLeft\" : \"marginRight\"] = vWidth;\r\n            styles.marginBottom = hWidth;\r\n            var useNativeScrolling = this._scrollable && this._scrollable.option(\"useNative\");\r\n            (useNativeScrolling ? $fixedContent : this._fixedTableElement).css(styles)\r\n        }\r\n    },\r\n    _getElasticScrollTop: function(e) {\r\n        var elasticScrollTop = 0;\r\n        var scrollbarWidth = this.getScrollbarWidth(true);\r\n        if (e.scrollOffset.top < 0) {\r\n            elasticScrollTop = -e.scrollOffset.top\r\n        } else if (e.reachedBottom) {\r\n            var scrollableContent = this._findContentElement();\r\n            var $scrollableContainer = $(e.component.container());\r\n            var maxScrollTop = Math.max(getHeight(scrollableContent) + scrollbarWidth - getHeight($scrollableContainer), 0);\r\n            elasticScrollTop = maxScrollTop - e.scrollOffset.top\r\n        }\r\n        return elasticScrollTop\r\n    },\r\n    _applyElasticScrolling: function(e) {\r\n        if (this._fixedTableElement) {\r\n            var elasticScrollTop = this._getElasticScrollTop(e);\r\n            if (0 !== Math.ceil(elasticScrollTop)) {\r\n                move(this._fixedTableElement, {\r\n                    top: elasticScrollTop\r\n                })\r\n            } else {\r\n                this._fixedTableElement.css(\"transform\", \"\")\r\n            }\r\n        }\r\n    },\r\n    _handleScroll: function(e) {\r\n        this._updateFixedTablePosition(e.scrollOffset.top, true);\r\n        this._applyElasticScrolling(e);\r\n        this.callBase(e)\r\n    },\r\n    _updateContentPosition: function(isRender) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!isRender) {\r\n            this._updateFixedTablePosition(this._scrollTop)\r\n        }\r\n    },\r\n    _afterRowPrepared: function(e) {\r\n        if (this._isFixedTableRendering) {\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _scrollToElement: function($element) {\r\n        this.callBase($element, this.getFixedColumnsOffset())\r\n    },\r\n    dispose: function() {\r\n        this.callBase.apply(this, arguments);\r\n        clearTimeout(this._fixedScrollTimeout)\r\n    }\r\n});\r\nvar FooterViewFixedColumnsExtender = baseFixedColumns;\r\nexport var columnFixingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            columnFixing: {\r\n                enabled: false,\r\n                texts: {\r\n                    fix: messageLocalization.format(\"dxDataGrid-columnFixingFix\"),\r\n                    unfix: messageLocalization.format(\"dxDataGrid-columnFixingUnfix\"),\r\n                    leftPosition: messageLocalization.format(\"dxDataGrid-columnFixingLeftPosition\"),\r\n                    rightPosition: messageLocalization.format(\"dxDataGrid-columnFixingRightPosition\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFixedColumnsExtender,\r\n            rowsView: RowsViewFixedColumnsExtender,\r\n            footerView: FooterViewFixedColumnsExtender\r\n        },\r\n        controllers: function() {\r\n            var normalizeColumnIndicesByPoints = function(columns, fixedColumns, pointsByColumns) {\r\n                var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n                var correctIndex = columns.length - fixedColumns.length;\r\n                each(pointsByColumns, (function(_, point) {\r\n                    if (point.index > transparentColumnIndex) {\r\n                        point.columnIndex += correctIndex;\r\n                        point.index += correctIndex\r\n                    }\r\n                }));\r\n                return pointsByColumns\r\n            };\r\n            return {\r\n                draggingHeader: {\r\n                    _generatePointsByColumns: function(options) {\r\n                        var visibleColumns = options.columns;\r\n                        var targetDraggingPanel = options.targetDraggingPanel;\r\n                        if (targetDraggingPanel && \"headers\" === targetDraggingPanel.getName() && targetDraggingPanel.isFixedColumns()) {\r\n                            if (options.sourceColumn.fixed) {\r\n                                if (!options.rowIndex) {\r\n                                    options.columnElements = targetDraggingPanel.getFixedColumnElements(0)\r\n                                }\r\n                                options.columns = targetDraggingPanel.getFixedColumns(options.rowIndex);\r\n                                var pointsByColumns = this.callBase(options);\r\n                                normalizeColumnIndicesByPoints(visibleColumns, options.columns, pointsByColumns);\r\n                                return pointsByColumns\r\n                            }\r\n                        }\r\n                        return this.callBase(options)\r\n                    },\r\n                    _pointCreated: function(point, columns, location, sourceColumn) {\r\n                        var result = this.callBase.apply(this, arguments);\r\n                        var targetColumn = columns[point.columnIndex];\r\n                        var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\r\n                        if (!result && \"headers\" === location && $transparentColumn && $transparentColumn.length) {\r\n                            var boundingRect = getBoundingRect($transparentColumn.get(0));\r\n                            if (sourceColumn && sourceColumn.fixed) {\r\n                                return \"right\" === sourceColumn.fixedPosition ? point.x < boundingRect.right : point.x > boundingRect.left\r\n                            } else {\r\n                                if (targetColumn && targetColumn.fixed && \"right\" !== targetColumn.fixedPosition) {\r\n                                    return true\r\n                                }\r\n                                return point.x < boundingRect.left || point.x > boundingRect.right\r\n                            }\r\n                        }\r\n                        return result\r\n                    }\r\n                },\r\n                columnsResizer: {\r\n                    _generatePointsByColumns: function() {\r\n                        var that = this;\r\n                        var columnsController = that._columnsController;\r\n                        var columns = columnsController && that._columnsController.getVisibleColumns();\r\n                        var fixedColumns = columnsController && that._columnsController.getFixedColumns();\r\n                        var cells = that._columnHeadersView.getFixedColumnElements();\r\n                        var pointsByFixedColumns = [];\r\n                        that.callBase();\r\n                        if (cells && cells.length > 0) {\r\n                            pointsByFixedColumns = gridCoreUtils.getPointsByColumns(cells, (function(point) {\r\n                                return that._pointCreated(point, cells.length, fixedColumns)\r\n                            }));\r\n                            that._pointsByFixedColumns = normalizeColumnIndicesByPoints(columns, fixedColumns, pointsByFixedColumns)\r\n                        }\r\n                    },\r\n                    _pointCreated: function(point, cellsLength, columns) {\r\n                        var isWidgetResizingMode = \"widget\" === this.option(\"columnResizingMode\");\r\n                        if (point.index > 0 && point.index < cellsLength) {\r\n                            var currentColumn = columns[point.columnIndex - 1] || {};\r\n                            var nextColumn = columns[point.columnIndex] || {};\r\n                            if (currentColumn.fixed || nextColumn.fixed) {\r\n                                point.columnIndex -= 1;\r\n                                return !((currentColumn.allowResizing || currentColumn.command === COMMAND_TRANSPARENT) && (isWidgetResizingMode || nextColumn.allowResizing || nextColumn.command === COMMAND_TRANSPARENT))\r\n                            }\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    _getTargetPoint: function(pointsByColumns, currentX, deltaX) {\r\n                        var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\r\n                        if ($transparentColumn && $transparentColumn.length) {\r\n                            var boundingRect = getBoundingRect($transparentColumn.get(0));\r\n                            if (currentX <= boundingRect.left || currentX >= boundingRect.right) {\r\n                                return this.callBase(this._pointsByFixedColumns, currentX, deltaX)\r\n                            }\r\n                        }\r\n                        return this.callBase(pointsByColumns, currentX, deltaX)\r\n                    }\r\n                }\r\n            }\r\n        }()\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.column_fixing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnFixingModule\r\n} from \"../grid_core/ui.grid_core.column_fixing\";\r\ngridCore.registerModule(\"columnFixing\", columnFixingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.adaptivity.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport Guid from \"../../core/guid\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport Form from \"../form\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    isMaterial\r\n} from \"../themes\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport messageLocalization from \"../../localization/message\";\r\nvar COLUMN_HEADERS_VIEW = \"columnHeadersView\";\r\nvar ROWS_VIEW = \"rowsView\";\r\nvar FOOTER_VIEW = \"footerView\";\r\nvar COLUMN_VIEWS = [COLUMN_HEADERS_VIEW, ROWS_VIEW, FOOTER_VIEW];\r\nvar ADAPTIVE_NAMESPACE = \"dxDataGridAdaptivity\";\r\nvar HIDDEN_COLUMNS_WIDTH = \"adaptiveHidden\";\r\nvar ADAPTIVE_ROW_TYPE = \"detailAdaptive\";\r\nvar FORM_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\r\nvar FORM_ITEM_MODIFIED = \"dx-item-modified\";\r\nvar HIDDEN_COLUMN_CLASS = \"hidden-column\";\r\nvar ADAPTIVE_COLUMN_BUTTON_CLASS = \"adaptive-more\";\r\nvar ADAPTIVE_COLUMN_NAME_CLASS = \"dx-command-adaptive\";\r\nvar COMMAND_ADAPTIVE_HIDDEN_CLASS = \"dx-command-adaptive-hidden\";\r\nvar ADAPTIVE_DETAIL_ROW_CLASS = \"dx-adaptive-detail-row\";\r\nvar ADAPTIVE_ITEM_TEXT_CLASS = \"dx-adaptive-item-text\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar LAST_DATA_CELL_CLASS = \"dx-last-data-cell\";\r\nvar ADAPTIVE_COLUMN_NAME = \"adaptive\";\r\nvar EDIT_MODE_BATCH = \"batch\";\r\nvar EDIT_MODE_ROW = \"row\";\r\nvar EDIT_MODE_FORM = \"form\";\r\nvar EDIT_MODE_POPUP = \"popup\";\r\nvar REVERT_TOOLTIP_CLASS = \"revert-tooltip\";\r\nvar GROUP_CELL_CLASS = \"dx-group-cell\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar EXPAND_ARIA_NAME = \"dxDataGrid-ariaAdaptiveExpand\";\r\nvar COLLAPSE_ARIA_NAME = \"dxDataGrid-ariaAdaptiveCollapse\";\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\n\r\nfunction getColumnId(that, column) {\r\n    return that._columnsController.getColumnId(column)\r\n}\r\n\r\nfunction getDataCellElements($row) {\r\n    return $row.find(\"td:not(.dx-datagrid-hidden-column):not([class*='dx-command-'])\")\r\n}\r\n\r\nfunction adaptiveCellTemplate(container, options) {\r\n    var $adaptiveColumnButton;\r\n    var $container = $(container);\r\n    var adaptiveColumnsController = options.component.getController(\"adaptiveColumns\");\r\n    if (\"data\" === options.rowType) {\r\n        $adaptiveColumnButton = $(\"<span>\").addClass(adaptiveColumnsController.addWidgetPrefix(ADAPTIVE_COLUMN_BUTTON_CLASS));\r\n        eventsEngine.on($adaptiveColumnButton, addNamespace(clickEventName, ADAPTIVE_NAMESPACE), adaptiveColumnsController.createAction((function() {\r\n            adaptiveColumnsController.toggleExpandAdaptiveDetailRow(options.key)\r\n        })));\r\n        $adaptiveColumnButton.appendTo($container)\r\n    } else {\r\n        gridCoreUtils.setEmptyText($container)\r\n    }\r\n}\r\nvar AdaptiveColumnsController = modules.ViewController.inherit({\r\n    _isRowEditMode: function() {\r\n        var editMode = this._getEditMode();\r\n        return editMode === EDIT_MODE_ROW\r\n    },\r\n    _isItemModified: function(item, cellOptions) {\r\n        var columnIndex = this._columnsController.getVisibleIndex(item.column.index);\r\n        var rowIndex = this._dataController.getRowIndexByKey(cellOptions.key);\r\n        var row = this._dataController.items()[rowIndex + 1];\r\n        return row && row.modifiedValues && isDefined(row.modifiedValues[columnIndex])\r\n    },\r\n    _renderFormViewTemplate: function(item, cellOptions, $container) {\r\n        var column = item.column;\r\n        var focusAction = this.createAction((function() {\r\n            eventsEngine.trigger($container, clickEventName)\r\n        }));\r\n        var value = column.calculateCellValue(cellOptions.data);\r\n        var displayValue = gridCoreUtils.getDisplayValue(column, value, cellOptions.data, cellOptions.rowType);\r\n        var text = gridCoreUtils.formatValue(displayValue, column);\r\n        var isCellOrBatchEditMode = this._editingController.isCellOrBatchEditMode();\r\n        var rowsView = this._rowsView;\r\n        if (column.allowEditing && this.getController(\"keyboardNavigation\").isKeyboardEnabled()) {\r\n            $container.attr(\"tabIndex\", this.option(\"tabIndex\"));\r\n            if (isCellOrBatchEditMode) {\r\n                eventsEngine.off($container, \"focus\", focusAction);\r\n                eventsEngine.on($container, \"focus\", focusAction)\r\n            }\r\n        }\r\n        if (column.cellTemplate) {\r\n            var templateOptions = extend({}, cellOptions, {\r\n                value: value,\r\n                displayValue: displayValue,\r\n                text: text,\r\n                column: column\r\n            });\r\n            var isDomElement = !!$container.closest(getWindow().document).length;\r\n            rowsView.renderTemplate($container, column.cellTemplate, templateOptions, isDomElement).done(() => {\r\n                rowsView._cellPrepared($container, cellOptions)\r\n            })\r\n        } else {\r\n            var container = $container.get(0);\r\n            if (column.encodeHtml) {\r\n                container.textContent = text\r\n            } else {\r\n                container.innerHTML = text\r\n            }\r\n            $container.addClass(ADAPTIVE_ITEM_TEXT_CLASS);\r\n            if (!isDefined(text) || \"\" === text) {\r\n                $container.html(\"&nbsp;\")\r\n            }\r\n            if (!this._isRowEditMode()) {\r\n                if (this._isItemModified(item, cellOptions)) {\r\n                    $container.addClass(FORM_ITEM_MODIFIED)\r\n                }\r\n            }\r\n            rowsView._cellPrepared($container, cellOptions)\r\n        }\r\n    },\r\n    _getTemplate: function(item, cellOptions) {\r\n        var that = this;\r\n        var column = item.column;\r\n        var editingController = this.getController(\"editing\");\r\n        return function(options, container) {\r\n            var $container = $(container);\r\n            var columnIndex = that._columnsController.getVisibleIndex(column.index);\r\n            var templateOptions = extend({}, cellOptions);\r\n            var renderFormTemplate = function() {\r\n                var isItemEdited = that._isItemEdited(item);\r\n                templateOptions.value = cellOptions.row.values[columnIndex];\r\n                if (isItemEdited || column.showEditorAlways) {\r\n                    editingController.renderFormEditTemplate(templateOptions, item, options, $container, !isItemEdited)\r\n                } else {\r\n                    templateOptions.column = column;\r\n                    templateOptions.columnIndex = columnIndex;\r\n                    that._renderFormViewTemplate(item, templateOptions, $container)\r\n                }\r\n            };\r\n            renderFormTemplate();\r\n            templateOptions.watch && templateOptions.watch((function() {\r\n                return {\r\n                    isItemEdited: that._isItemEdited(item),\r\n                    value: cellOptions.row.values[columnIndex]\r\n                }\r\n            }), (function() {\r\n                $container.contents().remove();\r\n                $container.removeClass(ADAPTIVE_ITEM_TEXT_CLASS);\r\n                renderFormTemplate()\r\n            }))\r\n        }\r\n    },\r\n    _isVisibleColumnsValid: function(visibleColumns) {\r\n        if (visibleColumns < 2) {\r\n            return false\r\n        }\r\n        if (visibleColumns.length - function() {\r\n                var result = 0;\r\n                for (var j = 0; j < visibleColumns.length; j++) {\r\n                    var visibleColumn = visibleColumns[j];\r\n                    if (visibleColumn.command) {\r\n                        result++\r\n                    }\r\n                }\r\n                return result\r\n            }() <= 1) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    _calculatePercentWidths: function(widths, visibleColumns) {\r\n        var that = this;\r\n        var percentWidths = 0;\r\n        visibleColumns.forEach((function(item, index) {\r\n            if (widths[index] !== HIDDEN_COLUMNS_WIDTH) {\r\n                percentWidths += that._getItemPercentWidth(item)\r\n            }\r\n        }));\r\n        return percentWidths\r\n    },\r\n    _isPercentWidth: function(width) {\r\n        return isString(width) && \"%\" === width.slice(-1)\r\n    },\r\n    _isColumnHidden: function(column) {\r\n        return this._hiddenColumns.filter((function(hiddenColumn) {\r\n            return hiddenColumn.index === column.index\r\n        })).length > 0\r\n    },\r\n    _getAverageColumnsWidth: function(containerWidth, columns, columnsCanFit) {\r\n        var that = this;\r\n        var fixedColumnsWidth = 0;\r\n        var columnsWithoutFixedWidthCount = 0;\r\n        columns.forEach((function(column) {\r\n            if (!that._isColumnHidden(column)) {\r\n                var width = column.width;\r\n                if (isDefined(width) && !isNaN(parseFloat(width))) {\r\n                    fixedColumnsWidth += that._isPercentWidth(width) ? that._calculatePercentWidth({\r\n                        visibleIndex: column.visibleIndex,\r\n                        columnsCount: columns.length,\r\n                        columnsCanFit: columnsCanFit,\r\n                        bestFitWidth: column.bestFitWidth,\r\n                        columnWidth: width,\r\n                        containerWidth: containerWidth\r\n                    }) : parseFloat(width)\r\n                } else {\r\n                    columnsWithoutFixedWidthCount++\r\n                }\r\n            }\r\n        }));\r\n        return (containerWidth - fixedColumnsWidth) / columnsWithoutFixedWidthCount\r\n    },\r\n    _calculateColumnWidth: function(column, containerWidth, contentColumns, columnsCanFit) {\r\n        var columnId = getColumnId(this, column);\r\n        var widthOption = this._columnsController.columnOption(columnId, \"width\");\r\n        var bestFitWidth = this._columnsController.columnOption(columnId, \"bestFitWidth\");\r\n        var columnsCount = contentColumns.length;\r\n        var colWidth;\r\n        if (widthOption && \"auto\" !== widthOption) {\r\n            if (this._isPercentWidth(widthOption)) {\r\n                colWidth = this._calculatePercentWidth({\r\n                    visibleIndex: column.visibleIndex,\r\n                    columnsCount: columnsCount,\r\n                    columnsCanFit: columnsCanFit,\r\n                    bestFitWidth: bestFitWidth,\r\n                    columnWidth: widthOption,\r\n                    containerWidth: containerWidth\r\n                })\r\n            } else {\r\n                return parseFloat(widthOption)\r\n            }\r\n        } else {\r\n            var columnAutoWidth = this.option(\"columnAutoWidth\");\r\n            colWidth = columnAutoWidth || !!column.command ? bestFitWidth : this._getAverageColumnsWidth(containerWidth, contentColumns, columnsCanFit)\r\n        }\r\n        return colWidth\r\n    },\r\n    _calculatePercentWidth: function(options) {\r\n        var columnFitted = options.visibleIndex < options.columnsCount - 1 && options.columnsCanFit;\r\n        var partialWidth = options.containerWidth * parseFloat(options.columnWidth) / 100;\r\n        var resultWidth = options.columnsCanFit && partialWidth < options.bestFitWidth ? options.bestFitWidth : partialWidth;\r\n        return columnFitted ? options.containerWidth * parseFloat(options.columnWidth) / 100 : resultWidth\r\n    },\r\n    _getNotTruncatedColumnWidth: function(column, containerWidth, contentColumns, columnsCanFit) {\r\n        var columnId = getColumnId(this, column);\r\n        var widthOption = this._columnsController.columnOption(columnId, \"width\");\r\n        var bestFitWidth = this._columnsController.columnOption(columnId, \"bestFitWidth\");\r\n        if (widthOption && \"auto\" !== widthOption && !this._isPercentWidth(widthOption)) {\r\n            return parseFloat(widthOption)\r\n        }\r\n        var colWidth = this._calculateColumnWidth(column, containerWidth, contentColumns, columnsCanFit);\r\n        return colWidth < bestFitWidth ? null : colWidth\r\n    },\r\n    _getItemPercentWidth: function(item) {\r\n        var result = 0;\r\n        if (item.width && this._isPercentWidth(item.width)) {\r\n            result = parseFloat(item.width)\r\n        }\r\n        return result\r\n    },\r\n    _getCommandColumnsWidth: function() {\r\n        var that = this;\r\n        var columns = that._columnsController.getVisibleColumns();\r\n        var colWidth = 0;\r\n        each(columns, (function(index, column) {\r\n            if (column.index < 0 || column.command) {\r\n                colWidth += that._columnsController.columnOption(getColumnId(that, column), \"bestFitWidth\") || 0\r\n            }\r\n        }));\r\n        return colWidth\r\n    },\r\n    _isItemEdited: function(item) {\r\n        if (this.isFormOrPopupEditMode()) {\r\n            return false\r\n        }\r\n        if (this._isRowEditMode()) {\r\n            var editRowKey = this.option(\"editing.editRowKey\");\r\n            if (equalByValue(editRowKey, this._dataController.adaptiveExpandedKey())) {\r\n                return true\r\n            }\r\n        } else {\r\n            var rowIndex = this._dataController.getRowIndexByKey(this._dataController.adaptiveExpandedKey()) + 1;\r\n            var columnIndex = this._columnsController.getVisibleIndex(item.column.index);\r\n            return this._editingController.isEditCell(rowIndex, columnIndex)\r\n        }\r\n    },\r\n    _getFormItemsByHiddenColumns: function(hiddenColumns) {\r\n        var items = [];\r\n        each(hiddenColumns, (function(_, column) {\r\n            items.push({\r\n                column: column,\r\n                name: column.name,\r\n                dataField: column.dataField,\r\n                visibleIndex: column.visibleIndex\r\n            })\r\n        }));\r\n        return items\r\n    },\r\n    _getAdaptiveColumnVisibleIndex: function(visibleColumns) {\r\n        for (var i = 0; i < visibleColumns.length; i++) {\r\n            var column = visibleColumns[i];\r\n            if (column.command === ADAPTIVE_COLUMN_NAME) {\r\n                return i\r\n            }\r\n        }\r\n    },\r\n    _hideAdaptiveColumn: function(resultWidths, visibleColumns) {\r\n        var visibleIndex = this._getAdaptiveColumnVisibleIndex(visibleColumns);\r\n        if (isDefined(visibleIndex)) {\r\n            resultWidths[visibleIndex] = HIDDEN_COLUMNS_WIDTH;\r\n            this._hideVisibleColumn({\r\n                isCommandColumn: true,\r\n                visibleIndex: visibleIndex\r\n            })\r\n        }\r\n    },\r\n    _showHiddenCellsInView: function(_ref) {\r\n        var {\r\n            $cells: $cells,\r\n            isCommandColumn: isCommandColumn\r\n        } = _ref;\r\n        var cssClassNameToRemove = isCommandColumn ? COMMAND_ADAPTIVE_HIDDEN_CLASS : this.addWidgetPrefix(HIDDEN_COLUMN_CLASS);\r\n        $cells.removeClass(cssClassNameToRemove)\r\n    },\r\n    _showHiddenColumns: function() {\r\n        for (var i = 0; i < COLUMN_VIEWS.length; i++) {\r\n            var view = this.getView(COLUMN_VIEWS[i]);\r\n            if (view && view.isVisible() && view.element()) {\r\n                var viewName = view.name;\r\n                var $hiddenCommandCells = view.element().find(\".\" + COMMAND_ADAPTIVE_HIDDEN_CLASS);\r\n                this._showHiddenCellsInView({\r\n                    viewName: viewName,\r\n                    $cells: $hiddenCommandCells,\r\n                    isCommandColumn: true\r\n                });\r\n                var $hiddenCells = view.element().find(\".\" + this.addWidgetPrefix(HIDDEN_COLUMN_CLASS));\r\n                this._showHiddenCellsInView({\r\n                    viewName: viewName,\r\n                    $cells: $hiddenCells\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _isCellValid: function($cell) {\r\n        return $cell && $cell.length && !$cell.hasClass(MASTER_DETAIL_CELL_CLASS) && !$cell.hasClass(GROUP_CELL_CLASS)\r\n    },\r\n    _hideVisibleColumn: function(_ref2) {\r\n        var {\r\n            isCommandColumn: isCommandColumn,\r\n            visibleIndex: visibleIndex\r\n        } = _ref2;\r\n        var that = this;\r\n        COLUMN_VIEWS.forEach((function(viewName) {\r\n            var view = that.getView(viewName);\r\n            view && that._hideVisibleColumnInView({\r\n                view: view,\r\n                isCommandColumn: isCommandColumn,\r\n                visibleIndex: visibleIndex\r\n            })\r\n        }))\r\n    },\r\n    _hideVisibleColumnInView: function(_ref3) {\r\n        var {\r\n            view: view,\r\n            isCommandColumn: isCommandColumn,\r\n            visibleIndex: visibleIndex\r\n        } = _ref3;\r\n        var viewName = view.name;\r\n        var $cellElement;\r\n        var column = this._columnsController.getVisibleColumns()[visibleIndex];\r\n        var editFormRowIndex = this._editingController && this._editingController.getEditFormRowIndex();\r\n        if (view && view.isVisible() && column) {\r\n            var rowsCount = view.getRowsCount();\r\n            var $rowElements = view._getRowElements();\r\n            for (var rowIndex = 0; rowIndex < rowsCount; rowIndex++) {\r\n                var cancelClassAdding = rowIndex === editFormRowIndex && viewName === ROWS_VIEW && \"popup\" !== this.option(\"editing.mode\");\r\n                if (!cancelClassAdding) {\r\n                    var currentVisibleIndex = viewName === COLUMN_HEADERS_VIEW ? this._columnsController.getVisibleIndex(column.index, rowIndex) : visibleIndex;\r\n                    if (currentVisibleIndex >= 0) {\r\n                        var $rowElement = $rowElements.eq(rowIndex);\r\n                        $cellElement = this._findCellElementInRow($rowElement, currentVisibleIndex);\r\n                        this._isCellValid($cellElement) && this._hideVisibleCellInView({\r\n                            viewName: viewName,\r\n                            isCommandColumn: isCommandColumn,\r\n                            $cell: $cellElement\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _findCellElementInRow($rowElement, visibleColumnIndex) {\r\n        var $rowCells = $rowElement.children();\r\n        var visibleIndex = visibleColumnIndex;\r\n        var cellIsInsideGroup = false;\r\n        if ($rowElement.hasClass(GROUP_ROW_CLASS)) {\r\n            var $groupCell = $rowElement.find(\".\".concat(GROUP_CELL_CLASS));\r\n            var colSpan = $groupCell.attr(\"colspan\");\r\n            if ($groupCell.length && isDefined(colSpan)) {\r\n                var groupCellLength = parseInt(colSpan);\r\n                var endGroupIndex = $groupCell.index() + groupCellLength - 1;\r\n                if (visibleColumnIndex > endGroupIndex) {\r\n                    visibleIndex = visibleColumnIndex - groupCellLength + 1\r\n                } else {\r\n                    cellIsInsideGroup = true\r\n                }\r\n            }\r\n        }\r\n        var $cellElement = !cellIsInsideGroup ? $rowCells.eq(visibleIndex) : void 0;\r\n        return $cellElement\r\n    },\r\n    _hideVisibleCellInView: function(_ref4) {\r\n        var {\r\n            $cell: $cell,\r\n            isCommandColumn: isCommandColumn\r\n        } = _ref4;\r\n        var cssClassNameToAdd = isCommandColumn ? COMMAND_ADAPTIVE_HIDDEN_CLASS : this.addWidgetPrefix(HIDDEN_COLUMN_CLASS);\r\n        $cell.addClass(cssClassNameToAdd)\r\n    },\r\n    _getEditMode: function() {\r\n        return this._editingController.getEditMode()\r\n    },\r\n    isFormOrPopupEditMode: function() {\r\n        var editMode = this._getEditMode();\r\n        return editMode === EDIT_MODE_FORM || editMode === EDIT_MODE_POPUP\r\n    },\r\n    hideRedundantColumns: function(resultWidths, visibleColumns, hiddenQueue) {\r\n        this._hiddenColumns = [];\r\n        if (this._isVisibleColumnsValid(visibleColumns) && hiddenQueue.length) {\r\n            var totalWidth = 0;\r\n            var $rootElement = this.component.$element();\r\n            var rootElementWidth = getWidth($rootElement) - this._getCommandColumnsWidth();\r\n            var getVisibleContentColumns = function() {\r\n                return visibleColumns.filter(item => !item.command && 0 === this._hiddenColumns.filter(i => i.index === item.index).length)\r\n            }.bind(this);\r\n            var visibleContentColumns = getVisibleContentColumns();\r\n            var contentColumnsCount = visibleContentColumns.length;\r\n            var i;\r\n            var hasHiddenColumns;\r\n            var needHideColumn;\r\n            do {\r\n                needHideColumn = false;\r\n                totalWidth = 0;\r\n                var percentWidths = this._calculatePercentWidths(resultWidths, visibleColumns);\r\n                var columnsCanFit = percentWidths < 100 && 0 !== percentWidths;\r\n                for (i = 0; i < visibleColumns.length; i++) {\r\n                    var visibleColumn = visibleColumns[i];\r\n                    var columnWidth = this._getNotTruncatedColumnWidth(visibleColumn, rootElementWidth, visibleContentColumns, columnsCanFit);\r\n                    var columnId = getColumnId(this, visibleColumn);\r\n                    var widthOption = this._columnsController.columnOption(columnId, \"width\");\r\n                    var minWidth = this._columnsController.columnOption(columnId, \"minWidth\");\r\n                    var columnBestFitWidth = this._columnsController.columnOption(columnId, \"bestFitWidth\");\r\n                    if (resultWidths[i] === HIDDEN_COLUMNS_WIDTH) {\r\n                        hasHiddenColumns = true;\r\n                        continue\r\n                    }\r\n                    if (!columnWidth && !visibleColumn.command && !visibleColumn.fixed) {\r\n                        needHideColumn = true;\r\n                        break\r\n                    }\r\n                    if (!widthOption || \"auto\" === widthOption) {\r\n                        columnWidth = Math.max(columnBestFitWidth || 0, minWidth || 0)\r\n                    }\r\n                    if (visibleColumn.command !== ADAPTIVE_COLUMN_NAME || hasHiddenColumns) {\r\n                        totalWidth += columnWidth\r\n                    }\r\n                }\r\n                needHideColumn = needHideColumn || totalWidth > getWidth($rootElement);\r\n                if (needHideColumn) {\r\n                    var column = hiddenQueue.pop();\r\n                    var visibleIndex = this._columnsController.getVisibleIndex(column.index);\r\n                    rootElementWidth += this._calculateColumnWidth(column, rootElementWidth, visibleContentColumns, columnsCanFit);\r\n                    this._hideVisibleColumn({\r\n                        visibleIndex: visibleIndex\r\n                    });\r\n                    resultWidths[visibleIndex] = HIDDEN_COLUMNS_WIDTH;\r\n                    this._hiddenColumns.push(column);\r\n                    visibleContentColumns = getVisibleContentColumns()\r\n                }\r\n            } while (needHideColumn && visibleContentColumns.length > 1 && hiddenQueue.length);\r\n            if (contentColumnsCount === visibleContentColumns.length) {\r\n                this._hideAdaptiveColumn(resultWidths, visibleColumns)\r\n            }\r\n        } else {\r\n            this._hideAdaptiveColumn(resultWidths, visibleColumns)\r\n        }\r\n    },\r\n    getItemContentByColumnIndex: function(visibleColumnIndex) {\r\n        var $itemContent;\r\n        for (var i = 0; i < this._$itemContents.length; i++) {\r\n            $itemContent = this._$itemContents.eq(i);\r\n            var item = $itemContent.data(\"dx-form-item\");\r\n            if (item && item.column && this._columnsController.getVisibleIndex(item.column.index) === visibleColumnIndex) {\r\n                return $itemContent\r\n            }\r\n        }\r\n    },\r\n    toggleExpandAdaptiveDetailRow: function(key, alwaysExpanded) {\r\n        if (!(this.isFormOrPopupEditMode() && this._editingController.isEditing())) {\r\n            this.getController(\"data\").toggleExpandAdaptiveDetailRow(key, alwaysExpanded)\r\n        }\r\n    },\r\n    createFormByHiddenColumns: function(container, options) {\r\n        var that = this;\r\n        var $container = $(container);\r\n        var userFormOptions = {\r\n            items: that._getFormItemsByHiddenColumns(that._hiddenColumns),\r\n            formID: \"dx-\" + new Guid\r\n        };\r\n        var defaultFormOptions = isMaterial() ? {\r\n            colCount: 2\r\n        } : {};\r\n        this.executeAction(\"onAdaptiveDetailRowPreparing\", {\r\n            formOptions: userFormOptions\r\n        });\r\n        that._$itemContents = null;\r\n        that._form = that._createComponent($(\"<div>\").appendTo($container), Form, extend(defaultFormOptions, userFormOptions, {\r\n            customizeItem: function(item) {\r\n                var column = item.column || that._columnsController.columnOption(item.name || item.dataField);\r\n                if (column) {\r\n                    item.label = item.label || {};\r\n                    item.label.text = item.label.text || column.caption;\r\n                    item.column = column;\r\n                    item.template = that._getTemplate(item, options, that.updateForm.bind(that))\r\n                }\r\n                userFormOptions.customizeItem && userFormOptions.customizeItem.call(this, item)\r\n            },\r\n            onContentReady: function(e) {\r\n                userFormOptions.onContentReady && userFormOptions.onContentReady.call(this, e);\r\n                that._$itemContents = $container.find(\".\" + FORM_ITEM_CONTENT_CLASS)\r\n            }\r\n        }))\r\n    },\r\n    hasAdaptiveDetailRowExpanded: function() {\r\n        return isDefined(this._dataController.adaptiveExpandedKey())\r\n    },\r\n    updateForm: function(hiddenColumns) {\r\n        if (this.hasAdaptiveDetailRowExpanded()) {\r\n            if (this._form && isDefined(this._form._contentReadyAction)) {\r\n                if (hiddenColumns && hiddenColumns.length) {\r\n                    this._form.option(\"items\", this._getFormItemsByHiddenColumns(hiddenColumns))\r\n                } else {\r\n                    this._form.repaint()\r\n                }\r\n            }\r\n        }\r\n    },\r\n    updateHidingQueue: function(columns) {\r\n        var hideableColumns = columns.filter((function(column) {\r\n            return column.visible && !column.type && !column.fixed && !(isDefined(column.groupIndex) && column.groupIndex >= 0)\r\n        }));\r\n        var columnsHasHidingPriority;\r\n        var i;\r\n        this._hidingColumnsQueue = [];\r\n        if (this.option(\"allowColumnResizing\") && \"widget\" === this.option(\"columnResizingMode\")) {\r\n            return this._hidingColumnsQueue\r\n        }\r\n        for (i = 0; i < hideableColumns.length; i++) {\r\n            if (isDefined(hideableColumns[i].hidingPriority) && hideableColumns[i].hidingPriority >= 0) {\r\n                columnsHasHidingPriority = true;\r\n                this._hidingColumnsQueue[hideableColumns[i].hidingPriority] = hideableColumns[i]\r\n            }\r\n        }\r\n        if (columnsHasHidingPriority) {\r\n            this._hidingColumnsQueue.reverse()\r\n        } else if (this.option(\"columnHidingEnabled\")) {\r\n            for (i = 0; i < hideableColumns.length; i++) {\r\n                var visibleIndex = this._columnsController.getVisibleIndex(hideableColumns[i].index);\r\n                this._hidingColumnsQueue[visibleIndex] = hideableColumns[i]\r\n            }\r\n        }\r\n        this._hidingColumnsQueue = this._hidingColumnsQueue.filter(Object);\r\n        return this._hidingColumnsQueue\r\n    },\r\n    getHiddenColumns: function() {\r\n        return this._hiddenColumns\r\n    },\r\n    hasHiddenColumns: function() {\r\n        return this._hiddenColumns.length > 0\r\n    },\r\n    getHidingColumnsQueue: function() {\r\n        return this._hidingColumnsQueue\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._dataController = that.getController(\"data\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._columnsController.addCommandColumn({\r\n            type: ADAPTIVE_COLUMN_NAME,\r\n            command: ADAPTIVE_COLUMN_NAME,\r\n            visible: true,\r\n            adaptiveHidden: true,\r\n            cssClass: ADAPTIVE_COLUMN_NAME_CLASS,\r\n            alignment: \"center\",\r\n            width: \"auto\",\r\n            cellTemplate: adaptiveCellTemplate,\r\n            fixedPosition: \"right\"\r\n        });\r\n        that._columnsController.columnsChanged.add((function() {\r\n            var isAdaptiveVisible = !!that.updateHidingQueue(that._columnsController.getColumns()).length;\r\n            that._columnsController.columnOption(\"command:adaptive\", \"adaptiveHidden\", !isAdaptiveVisible, true)\r\n        }));\r\n        that._editingController = that.getController(\"editing\");\r\n        that._hidingColumnsQueue = [];\r\n        that._hiddenColumns = [];\r\n        that.createAction(\"onAdaptiveDetailRowPreparing\");\r\n        that.callBase()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"columnHidingEnabled\" === args.name) {\r\n            this._columnsController.columnOption(\"command:adaptive\", \"adaptiveHidden\", !args.value)\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    publicMethods: function() {\r\n        return [\"isAdaptiveDetailRowExpanded\", \"expandAdaptiveDetailRow\", \"collapseAdaptiveDetailRow\"]\r\n    },\r\n    isAdaptiveDetailRowExpanded: function(key) {\r\n        return this._dataController.adaptiveExpandedKey() && equalByValue(this._dataController.adaptiveExpandedKey(), key)\r\n    },\r\n    expandAdaptiveDetailRow: function(key) {\r\n        if (!this.hasAdaptiveDetailRowExpanded()) {\r\n            this.toggleExpandAdaptiveDetailRow(key)\r\n        }\r\n    },\r\n    collapseAdaptiveDetailRow: function() {\r\n        if (this.hasAdaptiveDetailRowExpanded()) {\r\n            this.toggleExpandAdaptiveDetailRow()\r\n        }\r\n    },\r\n    updateCommandAdaptiveAriaLabel: function(key, label) {\r\n        var rowIndex = this._dataController.getRowIndexByKey(key);\r\n        if (-1 === rowIndex) {\r\n            return\r\n        }\r\n        var $row = $(this.component.getRowElement(rowIndex));\r\n        this.setCommandAdaptiveAriaLabel($row, label)\r\n    },\r\n    setCommandAdaptiveAriaLabel: function($row, labelName) {\r\n        var $adaptiveCommand = $row.find(\".dx-command-adaptive\");\r\n        $adaptiveCommand.attr(\"aria-label\", messageLocalization.format(labelName))\r\n    }\r\n});\r\nexport var adaptivityModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            columnHidingEnabled: false,\r\n            onAdaptiveDetailRowPreparing: null\r\n        }\r\n    },\r\n    controllers: {\r\n        adaptiveColumns: AdaptiveColumnsController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _getCellTemplate: function(options) {\r\n                    var that = this;\r\n                    var column = options.column;\r\n                    if (options.rowType === ADAPTIVE_ROW_TYPE && \"detail\" === column.command) {\r\n                        return function(container, options) {\r\n                            that._adaptiveColumnsController.createFormByHiddenColumns($(container), options)\r\n                        }\r\n                    }\r\n                    return that.callBase(options)\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row && row.rowType === ADAPTIVE_ROW_TYPE && row.key === this._dataController.adaptiveExpandedKey()) {\r\n                        $row.addClass(ADAPTIVE_DETAIL_ROW_CLASS)\r\n                    }\r\n                    return $row\r\n                },\r\n                _renderCells: function($row, options) {\r\n                    this.callBase($row, options);\r\n                    var adaptiveColumnsController = this._adaptiveColumnsController;\r\n                    var hidingColumnsQueueLength = adaptiveColumnsController.getHidingColumnsQueue().length;\r\n                    var hiddenColumnsLength = adaptiveColumnsController.getHiddenColumns().length;\r\n                    if (hidingColumnsQueueLength && !hiddenColumnsLength) {\r\n                        getDataCellElements($row).last().addClass(LAST_DATA_CELL_CLASS)\r\n                    }\r\n                    if (\"data\" === options.row.rowType) {\r\n                        adaptiveColumnsController.setCommandAdaptiveAriaLabel($row, EXPAND_ARIA_NAME)\r\n                    }\r\n                },\r\n                _getColumnIndexByElementCore: function($element) {\r\n                    var $itemContent = $element.closest(\".\" + FORM_ITEM_CONTENT_CLASS);\r\n                    if ($itemContent.length && $itemContent.closest(this.component.$element()).length) {\r\n                        var formItem = $itemContent.length ? $itemContent.first().data(\"dx-form-item\") : null;\r\n                        return formItem && formItem.column && this._columnsController.getVisibleIndex(formItem.column.index)\r\n                    } else {\r\n                        return this.callBase($element)\r\n                    }\r\n                },\r\n                _cellPrepared: function($cell, options) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (options.row.rowType !== ADAPTIVE_ROW_TYPE && options.column.visibleWidth === HIDDEN_COLUMNS_WIDTH) {\r\n                        $cell.addClass(this.addWidgetPrefix(HIDDEN_COLUMN_CLASS))\r\n                    }\r\n                },\r\n                _getCellElement: function(rowIndex, columnIdentifier) {\r\n                    var item = this._dataController.items()[rowIndex];\r\n                    if (item && item.rowType === ADAPTIVE_ROW_TYPE) {\r\n                        return this._adaptiveColumnsController.getItemContentByColumnIndex(columnIdentifier)\r\n                    } else {\r\n                        return this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                getContextMenuItems: function(options) {\r\n                    if (options.row && \"detailAdaptive\" === options.row.rowType) {\r\n                        var view = this.component.getView(\"columnHeadersView\");\r\n                        var formItem = $(options.targetElement).closest(\".dx-field-item-label\").next().data(\"dx-form-item\");\r\n                        options.column = formItem ? formItem.column : options.column;\r\n                        return view.getContextMenuItems && view.getContextMenuItems(options)\r\n                    }\r\n                    return this.callBase && this.callBase(options)\r\n                },\r\n                isClickableElement: function($target) {\r\n                    var isClickable = this.callBase ? this.callBase($target) : false;\r\n                    return isClickable || !!$target.closest(\".\" + ADAPTIVE_COLUMN_NAME_CLASS).length\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveColumnsController = this.getController(\"adaptiveColumns\")\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            export: {\r\n                _updateColumnWidth: function(column, width) {\r\n                    this.callBase(column, column.visibleWidth === HIDDEN_COLUMNS_WIDTH ? column.bestFitWidth : width)\r\n                }\r\n            },\r\n            columnsResizer: {\r\n                _pointCreated: function(point, cellsLength, columns) {\r\n                    var result = this.callBase(point, cellsLength, columns);\r\n                    var currentColumn = columns[point.columnIndex] || {};\r\n                    var nextColumnIndex = this._getNextColumnIndex(point.columnIndex);\r\n                    var nextColumn = columns[nextColumnIndex] || {};\r\n                    var hasHiddenColumnsOnly = nextColumnIndex !== point.columnIndex + 1 && nextColumn.command;\r\n                    var hasAdaptiveHiddenWidth = currentColumn.visibleWidth === HIDDEN_COLUMNS_WIDTH || hasHiddenColumnsOnly;\r\n                    return result || hasAdaptiveHiddenWidth\r\n                },\r\n                _getNextColumnIndex: function(currentColumnIndex) {\r\n                    var visibleColumns = this._columnsController.getVisibleColumns();\r\n                    var index = this.callBase(currentColumnIndex);\r\n                    while (visibleColumns[index] && visibleColumns[index].visibleWidth === HIDDEN_COLUMNS_WIDTH) {\r\n                        index++\r\n                    }\r\n                    return index\r\n                }\r\n            },\r\n            draggingHeader: {\r\n                _pointCreated: function(point, columns, location, sourceColumn) {\r\n                    var result = this.callBase(point, columns, location, sourceColumn);\r\n                    var column = columns[point.columnIndex - 1] || {};\r\n                    var hasAdaptiveHiddenWidth = column.visibleWidth === HIDDEN_COLUMNS_WIDTH;\r\n                    return result || hasAdaptiveHiddenWidth\r\n                }\r\n            },\r\n            editing: {\r\n                _isRowEditMode: function() {\r\n                    return this.getEditMode() === EDIT_MODE_ROW\r\n                },\r\n                _getFormEditItemTemplate: function(cellOptions, column) {\r\n                    if (this.getEditMode() !== EDIT_MODE_ROW && \"detailAdaptive\" === cellOptions.rowType) {\r\n                        cellOptions.columnIndex = this._columnsController.getVisibleIndex(column.index);\r\n                        return this.getColumnTemplate(cellOptions)\r\n                    }\r\n                    return this.callBase(cellOptions, column)\r\n                },\r\n                _closeEditItem: function($targetElement) {\r\n                    var $itemContents = $targetElement.closest(\".\" + FORM_ITEM_CONTENT_CLASS);\r\n                    var rowIndex = this._dataController.getRowIndexByKey(this._dataController.adaptiveExpandedKey()) + 1;\r\n                    var formItem = $itemContents.length ? $itemContents.first().data(\"dx-form-item\") : null;\r\n                    var columnIndex = formItem && formItem.column && this._columnsController.getVisibleIndex(formItem.column.index);\r\n                    if (!this.isEditCell(rowIndex, columnIndex)) {\r\n                        this.callBase($targetElement)\r\n                    }\r\n                },\r\n                _beforeUpdateItems: function(rowIndices, rowIndex) {\r\n                    if (!this._adaptiveController.isFormOrPopupEditMode() && this._adaptiveController.hasHiddenColumns()) {\r\n                        var items = this._dataController.items();\r\n                        var item = items[rowIndex];\r\n                        var oldExpandRowIndex = gridCoreUtils.getIndexByKey(this._dataController.adaptiveExpandedKey(), items);\r\n                        this._isForceRowAdaptiveExpand = !this._adaptiveController.hasAdaptiveDetailRowExpanded();\r\n                        if (oldExpandRowIndex >= 0) {\r\n                            rowIndices.push(oldExpandRowIndex + 1)\r\n                        }\r\n                        rowIndices.push(rowIndex + 1);\r\n                        this._dataController.adaptiveExpandedKey(item.key)\r\n                    }\r\n                },\r\n                _afterInsertRow: function(key) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this._adaptiveController.hasHiddenColumns()) {\r\n                        this._adaptiveController.toggleExpandAdaptiveDetailRow(key, this.isRowEditMode());\r\n                        this._isForceRowAdaptiveExpand = true\r\n                    }\r\n                },\r\n                _collapseAdaptiveDetailRow: function() {\r\n                    if (this._isRowEditMode() && this._isForceRowAdaptiveExpand) {\r\n                        this._adaptiveController.collapseAdaptiveDetailRow();\r\n                        this._isForceRowAdaptiveExpand = false\r\n                    }\r\n                },\r\n                _cancelEditAdaptiveDetailRow: function() {\r\n                    if (this._adaptiveController.hasHiddenColumns()) {\r\n                        this._collapseAdaptiveDetailRow()\r\n                    }\r\n                },\r\n                _afterSaveEditData: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    var deferred = new Deferred;\r\n                    if (this._isRowEditMode() && this._adaptiveController.hasHiddenColumns()) {\r\n                        when(this.getController(\"validating\").validate(true)).done(isValid => {\r\n                            if (isValid) {\r\n                                this._cancelEditAdaptiveDetailRow()\r\n                            }\r\n                            deferred.resolve()\r\n                        })\r\n                    } else {\r\n                        deferred.resolve()\r\n                    }\r\n                    return deferred.promise()\r\n                },\r\n                _beforeCancelEditData: function() {\r\n                    this.callBase();\r\n                    this._cancelEditAdaptiveDetailRow()\r\n                },\r\n                _getRowIndicesForCascadeUpdating: function(row) {\r\n                    var rowIndices = this.callBase.apply(this, arguments);\r\n                    if (this._adaptiveController.isAdaptiveDetailRowExpanded(row.key)) {\r\n                        rowIndices.push(row.rowType === ADAPTIVE_ROW_TYPE ? row.rowIndex - 1 : row.rowIndex + 1)\r\n                    }\r\n                    return rowIndices\r\n                },\r\n                _beforeCloseEditCellInBatchMode: function(rowIndices) {\r\n                    var expandedKey = this._dataController._adaptiveExpandedKey;\r\n                    if (expandedKey) {\r\n                        var rowIndex = gridCoreUtils.getIndexByKey(expandedKey, this._dataController.items());\r\n                        if (rowIndex > -1) {\r\n                            rowIndices.unshift(rowIndex)\r\n                        }\r\n                    }\r\n                },\r\n                editRow: function(rowIndex) {\r\n                    if (this._adaptiveController.isFormOrPopupEditMode()) {\r\n                        this._adaptiveController.collapseAdaptiveDetailRow()\r\n                    }\r\n                    this.callBase(rowIndex)\r\n                },\r\n                deleteRow: function(rowIndex) {\r\n                    var rowKey = this._dataController.getKeyByRowIndex(rowIndex);\r\n                    if (this.getEditMode() === EDIT_MODE_BATCH && this._adaptiveController.isAdaptiveDetailRowExpanded(rowKey)) {\r\n                        this._adaptiveController.collapseAdaptiveDetailRow()\r\n                    }\r\n                    this.callBase(rowIndex)\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveController = this.getController(\"adaptiveColumns\")\r\n                }\r\n            },\r\n            resizing: {\r\n                _needBestFit: function() {\r\n                    return this.callBase() || !!this._adaptiveColumnsController.getHidingColumnsQueue().length\r\n                },\r\n                _correctColumnWidths: function(resultWidths, visibleColumns) {\r\n                    var adaptiveController = this._adaptiveColumnsController;\r\n                    var oldHiddenColumns = adaptiveController.getHiddenColumns();\r\n                    var hidingColumnsQueue = adaptiveController.updateHidingQueue(this._columnsController.getColumns());\r\n                    adaptiveController.hideRedundantColumns(resultWidths, visibleColumns, hidingColumnsQueue);\r\n                    var hiddenColumns = adaptiveController.getHiddenColumns();\r\n                    if (adaptiveController.hasAdaptiveDetailRowExpanded()) {\r\n                        if (oldHiddenColumns.length !== hiddenColumns.length) {\r\n                            adaptiveController.updateForm(hiddenColumns)\r\n                        }\r\n                    }!hiddenColumns.length && adaptiveController.collapseAdaptiveDetailRow();\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _toggleBestFitMode: function(isBestFit) {\r\n                    isBestFit && this._adaptiveColumnsController._showHiddenColumns();\r\n                    this.callBase(isBestFit)\r\n                },\r\n                _needStretch: function() {\r\n                    var adaptiveColumnsController = this._adaptiveColumnsController;\r\n                    return this.callBase.apply(this, arguments) || adaptiveColumnsController.getHidingColumnsQueue().length || adaptiveColumnsController.hasHiddenColumns()\r\n                },\r\n                init: function() {\r\n                    this._adaptiveColumnsController = this.getController(\"adaptiveColumns\");\r\n                    this.callBase()\r\n                },\r\n                dispose: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    clearTimeout(this._updateScrollableTimeoutID)\r\n                }\r\n            },\r\n            data: {\r\n                _processItems: function(items, change) {\r\n                    var changeType = change.changeType;\r\n                    items = this.callBase.apply(this, arguments);\r\n                    if (\"loadingAll\" === changeType || !isDefined(this._adaptiveExpandedKey)) {\r\n                        return items\r\n                    }\r\n                    var expandRowIndex = gridCoreUtils.getIndexByKey(this._adaptiveExpandedKey, items);\r\n                    var newMode = false === this.option(LEGACY_SCROLLING_MODE);\r\n                    if (expandRowIndex >= 0) {\r\n                        var item = items[expandRowIndex];\r\n                        items.splice(expandRowIndex + 1, 0, {\r\n                            visible: true,\r\n                            rowType: ADAPTIVE_ROW_TYPE,\r\n                            key: item.key,\r\n                            data: item.data,\r\n                            node: item.node,\r\n                            modifiedValues: item.modifiedValues,\r\n                            isNewRow: item.isNewRow,\r\n                            values: item.values\r\n                        })\r\n                    } else if (\"refresh\" === changeType && !(newMode && change.repaintChangesOnly)) {\r\n                        this._adaptiveExpandedKey = void 0\r\n                    }\r\n                    return items\r\n                },\r\n                _getRowIndicesForExpand: function(key) {\r\n                    var rowIndices = this.callBase.apply(this, arguments);\r\n                    if (this.getController(\"adaptiveColumns\").isAdaptiveDetailRowExpanded(key)) {\r\n                        var lastRowIndex = rowIndices[rowIndices.length - 1];\r\n                        rowIndices.push(lastRowIndex + 1)\r\n                    }\r\n                    return rowIndices\r\n                },\r\n                adaptiveExpandedKey: function(value) {\r\n                    if (isDefined(value)) {\r\n                        this._adaptiveExpandedKey = value\r\n                    } else {\r\n                        return this._adaptiveExpandedKey\r\n                    }\r\n                },\r\n                toggleExpandAdaptiveDetailRow: function(key, alwaysExpanded) {\r\n                    var oldExpandLoadedRowIndex = gridCoreUtils.getIndexByKey(this._adaptiveExpandedKey, this._items);\r\n                    var newExpandLoadedRowIndex = gridCoreUtils.getIndexByKey(key, this._items);\r\n                    if (oldExpandLoadedRowIndex >= 0 && oldExpandLoadedRowIndex === newExpandLoadedRowIndex && !alwaysExpanded) {\r\n                        key = void 0;\r\n                        newExpandLoadedRowIndex = -1\r\n                    }\r\n                    var oldKey = this._adaptiveExpandedKey;\r\n                    this._adaptiveExpandedKey = key;\r\n                    if (oldExpandLoadedRowIndex >= 0) {\r\n                        oldExpandLoadedRowIndex++\r\n                    }\r\n                    if (newExpandLoadedRowIndex >= 0) {\r\n                        newExpandLoadedRowIndex++\r\n                    }\r\n                    var rowIndexDelta = this.getRowIndexDelta();\r\n                    this.updateItems({\r\n                        allowInvisibleRowIndices: true,\r\n                        changeType: \"update\",\r\n                        rowIndices: [oldExpandLoadedRowIndex - rowIndexDelta, newExpandLoadedRowIndex - rowIndexDelta]\r\n                    });\r\n                    var adaptiveColumnsController = this.getController(\"adaptiveColumns\");\r\n                    adaptiveColumnsController.updateCommandAdaptiveAriaLabel(key, COLLAPSE_ARIA_NAME);\r\n                    adaptiveColumnsController.updateCommandAdaptiveAriaLabel(oldKey, EXPAND_ARIA_NAME)\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveExpandedKey = void 0\r\n                }\r\n            },\r\n            editorFactory: {\r\n                _getFocusCellSelector: function() {\r\n                    return this.callBase() + \", .dx-adaptive-detail-row .dx-field-item > .dx-field-item-content\"\r\n                },\r\n                _getTooltipsSelector: function() {\r\n                    return this.callBase() + \", .dx-field-item-content .\" + this.addWidgetPrefix(REVERT_TOOLTIP_CLASS)\r\n                }\r\n            },\r\n            columns: {\r\n                _isColumnVisible: function(column) {\r\n                    return this.callBase(column) && !column.adaptiveHidden\r\n                }\r\n            },\r\n            keyboardNavigation: {\r\n                _isCellValid: function($cell) {\r\n                    return this.callBase.apply(this, arguments) && !$cell.hasClass(this.addWidgetPrefix(HIDDEN_COLUMN_CLASS))\r\n                },\r\n                _processNextCellInMasterDetail: function($nextCell) {\r\n                    this.callBase($nextCell);\r\n                    var isCellOrBatchMode = this._editingController.isCellOrBatchEditMode();\r\n                    if (!this._isInsideEditForm($nextCell) && $nextCell && isCellOrBatchMode) {\r\n                        eventsEngine.on($nextCell, \"focus\", (function focusHandler() {\r\n                            eventsEngine.off($nextCell, \"focus\", focusHandler);\r\n                            eventsEngine.trigger($nextCell, \"dxclick\")\r\n                        }))\r\n                    }\r\n                },\r\n                _handleTabKeyOnMasterDetailCell: function(eventTarget, direction) {\r\n                    var result = this.callBase(eventTarget, direction);\r\n                    var $currentCell = this._getFocusedCell();\r\n                    var $row = $currentCell && $currentCell.parent();\r\n                    if (!result && $row && $row.length) {\r\n                        var $dataCells = getDataCellElements($row);\r\n                        var $targetCell = \"next\" === direction ? $dataCells.last() : $dataCells.first();\r\n                        var rowIndex = $row.get(0).rowIndex;\r\n                        var adaptiveController = this._adaptiveController;\r\n                        var key = this._dataController.getKeyByRowIndex(\"next\" === direction ? rowIndex : rowIndex - 1);\r\n                        var isCellElementsEquals = $currentCell && $targetCell && $currentCell.get(0) === $targetCell.get(0);\r\n                        return adaptiveController.isAdaptiveDetailRowExpanded(key) && isCellElementsEquals\r\n                    }\r\n                    return result\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveController = this.getController(\"adaptiveColumns\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_columns_core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nexport function foreachColumnInfo(info, callback, rowIndex, offsets, columnCount, lastProcessedIndexes) {\r\n    rowIndex = rowIndex || 0;\r\n    offsets = offsets || [];\r\n    lastProcessedIndexes = lastProcessedIndexes || [];\r\n    offsets[rowIndex] = offsets[rowIndex] || 0;\r\n    var row = info[rowIndex];\r\n    var startIndex = lastProcessedIndexes[rowIndex] + 1 || 0;\r\n    var processedColumnCount = 0;\r\n    var colIndex;\r\n    if (!row) {\r\n        return\r\n    }\r\n    for (colIndex = startIndex; colIndex < row.length; colIndex++) {\r\n        var cell = row[colIndex];\r\n        var visibleIndex = colIndex + offsets[rowIndex];\r\n        var colspan = cell.colspan || 1;\r\n        foreachColumnInfo(info, callback, rowIndex + (cell.rowspan || 1), offsets, colspan, lastProcessedIndexes);\r\n        offsets[rowIndex] += colspan - 1;\r\n        processedColumnCount += colspan;\r\n        if (cell.rowspan) {\r\n            for (var i = rowIndex + 1; i < rowIndex + cell.rowspan; i++) {\r\n                offsets[i] = offsets[i] || 0;\r\n                offsets[i] += cell.colspan || 1\r\n            }\r\n        }\r\n        if (false === callback(cell, visibleIndex, rowIndex, colIndex)) {\r\n            break\r\n        }\r\n        if (void 0 !== columnCount && processedColumnCount >= columnCount) {\r\n            break\r\n        }\r\n    }\r\n    lastProcessedIndexes[rowIndex] = colIndex\r\n}\r\nexport function createColumnsInfo(info, startIndex, endIndex) {\r\n    var newInfo = [];\r\n    foreachColumnInfo(info, (function(columnInfo, visibleIndex, rowIndex) {\r\n        var cell = columnInfo;\r\n        var colspan;\r\n        var cellColspan = cell.colspan || 1;\r\n        var isVisible = visibleIndex + cellColspan - 1 >= startIndex && visibleIndex < endIndex;\r\n        newInfo[rowIndex] = newInfo[rowIndex] || [];\r\n        if (isVisible) {\r\n            if (visibleIndex < startIndex) {\r\n                colspan = cellColspan - (startIndex - visibleIndex);\r\n                visibleIndex = startIndex\r\n            } else {\r\n                colspan = cellColspan\r\n            }\r\n            if (visibleIndex + colspan > endIndex) {\r\n                colspan = endIndex - visibleIndex\r\n            }\r\n            if (colspan !== cellColspan) {\r\n                cell = extend({}, cell, {\r\n                    colspan: colspan\r\n                })\r\n            }\r\n            newInfo[rowIndex].push(cell)\r\n        } else if (visibleIndex > endIndex) {\r\n            return false\r\n        }\r\n    }));\r\n    for (var i = 0; i < newInfo.length; i++) {\r\n        newInfo[i] = newInfo[i] || []\r\n    }\r\n    return newInfo\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.adaptivity.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    adaptivityModule\r\n} from \"../grid_core/ui.grid_core.adaptivity\";\r\ngridCore.registerModule(\"adaptivity\", adaptivityModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_columns.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth,\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    createColumnsInfo\r\n} from \"./ui.grid_core.virtual_columns_core\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nvar DEFAULT_COLUMN_WIDTH = 50;\r\nvar VirtualScrollingRowsViewExtender = {\r\n    _resizeCore: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._columnsController.resize()\r\n    },\r\n    _handleScroll: function(e) {\r\n        var that = this;\r\n        var scrollable = this.getScrollable();\r\n        var left = e.scrollOffset.left;\r\n        that.callBase.apply(that, arguments);\r\n        if (that.option(\"rtlEnabled\") && scrollable) {\r\n            left = getWidth(scrollable.$content()) - getWidth(scrollable.$element()) - left\r\n        }\r\n        that._columnsController.setScrollPosition(left)\r\n    }\r\n};\r\nvar HeaderViewExtender = {\r\n    _renderCore: function() {\r\n        this.callBase.apply(this, arguments);\r\n        if (this._columnsController.isVirtualMode()) {\r\n            this._updateScrollLeftPosition()\r\n        }\r\n    }\r\n};\r\nvar ColumnsControllerExtender = function() {\r\n    var getWidths = function(columns) {\r\n        return columns.map(column => column.visibleWidth || parseFloat(column.width) || DEFAULT_COLUMN_WIDTH)\r\n    };\r\n    var members = {\r\n        init: function() {\r\n            this.callBase();\r\n            this._beginPageIndex = 0;\r\n            this._endPageIndex = 0;\r\n            this._position = 0;\r\n            this._virtualVisibleColumns = {}\r\n        },\r\n        resetColumnsCache: function() {\r\n            this.callBase();\r\n            this._virtualVisibleColumns = {}\r\n        },\r\n        getBeginPageIndex: function(position) {\r\n            var visibleColumns = this.getVisibleColumns(void 0, true);\r\n            var widths = getWidths(visibleColumns);\r\n            var currentPosition = 0;\r\n            for (var index = 0; index < widths.length; index++) {\r\n                if (currentPosition >= position) {\r\n                    return Math.floor(index / this.getColumnPageSize())\r\n                }\r\n                currentPosition += widths[index]\r\n            }\r\n            return 0\r\n        },\r\n        getTotalWidth: function() {\r\n            var width = this.option(\"width\");\r\n            if (\"number\" === typeof width) {\r\n                return width\r\n            }\r\n            return this.getController(\"resizing\")._lastWidth || getOuterWidth(this.component.$element())\r\n        },\r\n        getEndPageIndex: function(position) {\r\n            var visibleColumns = this.getVisibleColumns(void 0, true);\r\n            var widths = getWidths(visibleColumns);\r\n            var currentPosition = 0;\r\n            position += this.getTotalWidth();\r\n            for (var index = 0; index < widths.length; index++) {\r\n                if (currentPosition >= position) {\r\n                    return Math.ceil(index / this.getColumnPageSize())\r\n                }\r\n                currentPosition += widths[index]\r\n            }\r\n            return Math.ceil(widths.length / this.getColumnPageSize())\r\n        },\r\n        getColumnPageSize: function() {\r\n            return this.option(\"scrolling.columnPageSize\")\r\n        },\r\n        _fireColumnsChanged: function() {\r\n            var date = new Date;\r\n            this.columnsChanged.fire({\r\n                optionNames: {\r\n                    all: true,\r\n                    length: 1\r\n                },\r\n                changeTypes: {\r\n                    columns: true,\r\n                    virtualColumnsScrolling: true,\r\n                    length: 2\r\n                }\r\n            });\r\n            this._renderTime = new Date - date\r\n        },\r\n        getScrollingTimeout: function() {\r\n            var renderingThreshold = this.option(\"scrolling.columnRenderingThreshold\");\r\n            var renderAsync = this.option(\"scrolling.renderAsync\");\r\n            var scrollingTimeout = 0;\r\n            if (!isDefined(renderAsync) && this._renderTime > renderingThreshold || renderAsync) {\r\n                scrollingTimeout = this.option(\"scrolling.timeout\")\r\n            }\r\n            return scrollingTimeout\r\n        },\r\n        setScrollPosition: function(position) {\r\n            var scrollingTimeout = this.getScrollingTimeout();\r\n            if (scrollingTimeout > 0) {\r\n                clearTimeout(this._changedTimeout);\r\n                this._changedTimeout = setTimeout(() => {\r\n                    this._setScrollPositionCore(position)\r\n                }, scrollingTimeout)\r\n            } else {\r\n                this._setScrollPositionCore(position)\r\n            }\r\n        },\r\n        isVirtualMode: function() {\r\n            return hasWindow() && \"virtual\" === this.option(\"scrolling.columnRenderingMode\")\r\n        },\r\n        resize: function() {\r\n            this._setScrollPositionCore(this._position)\r\n        },\r\n        _setScrollPositionCore: function(position) {\r\n            if (this.isVirtualMode()) {\r\n                var beginPageIndex = this.getBeginPageIndex(position);\r\n                var endPageIndex = this.getEndPageIndex(position);\r\n                var needColumnsChanged = position < this._position ? this._beginPageIndex > beginPageIndex : this._endPageIndex < endPageIndex;\r\n                this._position = position;\r\n                if (needColumnsChanged) {\r\n                    this._beginPageIndex = beginPageIndex;\r\n                    this._endPageIndex = endPageIndex;\r\n                    this._fireColumnsChanged()\r\n                }\r\n            }\r\n        },\r\n        getFixedColumns: function(rowIndex, isBase) {\r\n            var fixedColumns = this.callBase(rowIndex);\r\n            if (this.isVirtualMode() && !isBase && fixedColumns.length) {\r\n                var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\r\n                fixedColumns[transparentColumnIndex].colspan = this.getVisibleColumns().length - this.callBase().length + 1;\r\n                return fixedColumns\r\n            }\r\n            return fixedColumns\r\n        },\r\n        getVisibleColumns: function(rowIndex, isBase) {\r\n            if (isBase || !this.isVirtualMode()) {\r\n                return this.callBase(rowIndex)\r\n            }\r\n            if (!this._beginPageIndex && !this._endPageIndex) {\r\n                this._beginPageIndex = this.getBeginPageIndex(this._position);\r\n                this._endPageIndex = this.getEndPageIndex(this._position)\r\n            }\r\n            var beginPageIndex = this._beginPageIndex;\r\n            var endPageIndex = this._endPageIndex;\r\n            var visibleColumnsHash = rowIndex + \"-\" + beginPageIndex + \"-\" + endPageIndex;\r\n            if (this._virtualVisibleColumns[visibleColumnsHash]) {\r\n                return this._virtualVisibleColumns[visibleColumnsHash]\r\n            }\r\n            var visibleColumns = this.callBase();\r\n            var rowCount = this.getRowCount();\r\n            var pageSize = this.getColumnPageSize();\r\n            var startIndex = beginPageIndex * pageSize;\r\n            var endIndex = endPageIndex * pageSize;\r\n            var fixedColumns = this.getFixedColumns(void 0, true);\r\n            var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\r\n            var beginFixedColumnCount = fixedColumns.length ? transparentColumnIndex : 0;\r\n            var beginFixedColumns = visibleColumns.slice(0, beginFixedColumnCount);\r\n            var beginColumns = visibleColumns.slice(beginFixedColumnCount, startIndex);\r\n            var beginWidth = getWidths(beginColumns).reduce((a, b) => a + b, 0);\r\n            if (!beginWidth) {\r\n                startIndex = 0\r\n            }\r\n            var endFixedColumnCount = fixedColumns.length ? fixedColumns.length - transparentColumnIndex - 1 : 0;\r\n            var endFixedColumns = visibleColumns.slice(visibleColumns.length - endFixedColumnCount);\r\n            var endColumns = visibleColumns.slice(endIndex, visibleColumns.length - endFixedColumnCount);\r\n            var endWidth = getWidths(endColumns).reduce((a, b) => a + b, 0);\r\n            if (!endWidth) {\r\n                endIndex = visibleColumns.length\r\n            }\r\n            if (rowCount > 1 && \"number\" === typeof rowIndex) {\r\n                var columnsInfo = [];\r\n                for (var i = 0; i < rowCount; i++) {\r\n                    columnsInfo.push(this.callBase(i))\r\n                }\r\n                beginFixedColumns = createColumnsInfo(columnsInfo, 0, beginFixedColumns.length)[rowIndex] || [];\r\n                endFixedColumns = createColumnsInfo(columnsInfo, visibleColumns.length - endFixedColumns.length, visibleColumns.length)[rowIndex] || [];\r\n                visibleColumns = createColumnsInfo(columnsInfo, startIndex, endIndex)[rowIndex] || []\r\n            } else {\r\n                visibleColumns = visibleColumns.slice(startIndex, endIndex)\r\n            }\r\n            if (beginWidth) {\r\n                visibleColumns.unshift({\r\n                    command: \"virtual\",\r\n                    width: beginWidth\r\n                });\r\n                visibleColumns = beginFixedColumns.concat(visibleColumns)\r\n            }\r\n            if (endWidth) {\r\n                visibleColumns.push({\r\n                    command: \"virtual\",\r\n                    width: endWidth\r\n                });\r\n                visibleColumns = visibleColumns.concat(endFixedColumns)\r\n            }\r\n            this._virtualVisibleColumns[visibleColumnsHash] = visibleColumns;\r\n            return visibleColumns\r\n        },\r\n        getColumnIndexOffset: function() {\r\n            var offset = 0;\r\n            if (this._beginPageIndex > 0) {\r\n                var fixedColumns = this.getFixedColumns();\r\n                var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\r\n                var leftFixedColumnCount = transparentColumnIndex >= 0 ? transparentColumnIndex : 0;\r\n                offset = this._beginPageIndex * this.getColumnPageSize() - leftFixedColumnCount - 1\r\n            }\r\n            return offset > 0 ? offset : 0\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._changedTimeout);\r\n            this.callBase.apply(this, arguments)\r\n        }\r\n    };\r\n    return members\r\n}();\r\nexport var virtualColumnsModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            scrolling: {\r\n                columnRenderingMode: \"standard\",\r\n                columnPageSize: 5,\r\n                columnRenderingThreshold: 300\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            columns: ColumnsControllerExtender\r\n        },\r\n        views: {\r\n            columnHeadersView: HeaderViewExtender,\r\n            rowsView: VirtualScrollingRowsViewExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.virtual_columns.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    virtualColumnsModule\r\n} from \"../grid_core/ui.grid_core.virtual_columns\";\r\ngridCore.registerModule(\"virtualColumns\", virtualColumnsModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.export_mixin.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nexport default {\r\n    _getEmptyCell: function() {\r\n        return {\r\n            text: \"\",\r\n            value: void 0,\r\n            colspan: 1,\r\n            rowspan: 1\r\n        }\r\n    },\r\n    _defaultSetter: function(value) {\r\n        return !value ? 1 : value\r\n    },\r\n    _cloneItem: function(item) {\r\n        return extend({}, item, this._getEmptyCell())\r\n    },\r\n    _prepareItems: function(items) {\r\n        var that = this;\r\n        var resultItems = [];\r\n        var cols = (items[0] || []).reduce((sum, item) => sum + that._defaultSetter(item.colspan), 0);\r\n        var getItem = function(items) {\r\n            var rowIndex = 0;\r\n            var cellIndex = 0;\r\n            return function() {\r\n                var row = items[rowIndex] || [];\r\n                var item = row[cellIndex++];\r\n                if (cellIndex >= row.length) {\r\n                    rowIndex++;\r\n                    cellIndex = 0\r\n                }\r\n                if (item) {\r\n                    item.colspan = that._defaultSetter(item.colspan);\r\n                    item.rowspan = that._defaultSetter(item.rowspan)\r\n                }\r\n                return item\r\n            }\r\n        }(items);\r\n\r\n        function addItem(rowIndex, cellIndex, item) {\r\n            var row = resultItems[rowIndex] = resultItems[rowIndex] || [];\r\n            row[cellIndex] = item;\r\n            if (item.colspan > 1 || item.rowspan > 1) {\r\n                var clone = that._cloneItem(item);\r\n                for (var c = 1; c < item.colspan; c++) {\r\n                    addItem(rowIndex, cellIndex + c, clone)\r\n                }\r\n                for (var r = 1; r < item.rowspan; r++) {\r\n                    for (var _c = 0; _c < item.colspan; _c++) {\r\n                        addItem(rowIndex + r, cellIndex + _c, clone)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var item = getItem();\r\n        var rowIndex = 0;\r\n        while (item) {\r\n            for (var cellIndex = 0; cellIndex < cols; cellIndex++) {\r\n                if (!item) {\r\n                    break\r\n                }\r\n                if (resultItems[rowIndex] && resultItems[rowIndex][cellIndex]) {\r\n                    continue\r\n                }\r\n                addItem(rowIndex, cellIndex, item);\r\n                cellIndex += item.colspan - 1;\r\n                item = getItem()\r\n            }\r\n            rowIndex++\r\n        }\r\n        return resultItems\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/button_group.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport Widget from \"./widget/ui.widget\";\r\nimport Button from \"./button\";\r\nimport CollectionWidget from \"./collection/ui.collection_widget.edit\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    isDefined,\r\n    isFunction\r\n} from \"../core/utils/type\";\r\nimport {\r\n    BindableTemplate\r\n} from \"../core/templates/bindable_template\";\r\nvar BUTTON_GROUP_CLASS = \"dx-buttongroup\";\r\nvar BUTTON_GROUP_WRAPPER_CLASS = BUTTON_GROUP_CLASS + \"-wrapper\";\r\nvar BUTTON_GROUP_ITEM_CLASS = BUTTON_GROUP_CLASS + \"-item\";\r\nvar BUTTON_GROUP_FIRST_ITEM_CLASS = BUTTON_GROUP_CLASS + \"-first-item\";\r\nvar BUTTON_GROUP_LAST_ITEM_CLASS = BUTTON_GROUP_CLASS + \"-last-item\";\r\nvar BUTTON_GROUP_ITEM_HAS_WIDTH = BUTTON_GROUP_ITEM_CLASS + \"-has-width\";\r\nvar SHAPE_STANDARD_CLASS = \"dx-shape-standard\";\r\nvar ButtonCollection = CollectionWidget.inherit({\r\n    _initTemplates() {\r\n        this.callBase();\r\n        this._templateManager.addDefaultTemplates({\r\n            item: new BindableTemplate(($container, data, model) => {\r\n                this._prepareItemStyles($container);\r\n                var template = this.option(\"buttonTemplate\");\r\n                this._createComponent($container, Button, extend({}, model, data, this._getBasicButtonOptions(), {\r\n                    _templateData: this._hasCustomTemplate(template) ? model : {},\r\n                    template: model.template || template\r\n                }))\r\n            }, [\"text\", \"type\", \"icon\", \"disabled\", \"visible\", \"hint\"], this.option(\"integrationOptions.watchMethod\"))\r\n        })\r\n    },\r\n    _getBasicButtonOptions() {\r\n        return {\r\n            focusStateEnabled: false,\r\n            onClick: null,\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            stylingMode: this.option(\"stylingMode\")\r\n        }\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            itemTemplateProperty: null\r\n        })\r\n    },\r\n    _hasCustomTemplate(template) {\r\n        return isFunction(template) || this.option(\"integrationOptions.templates\")[template]\r\n    },\r\n    _prepareItemStyles($item) {\r\n        var itemIndex = $item.data(\"dxItemIndex\");\r\n        0 === itemIndex && $item.addClass(BUTTON_GROUP_FIRST_ITEM_CLASS);\r\n        var items = this.option(\"items\");\r\n        items && itemIndex === items.length - 1 && $item.addClass(BUTTON_GROUP_LAST_ITEM_CLASS);\r\n        $item.addClass(SHAPE_STANDARD_CLASS)\r\n    },\r\n    _renderItemContent(args) {\r\n        args.container = $(args.container).parent();\r\n        return this.callBase(args)\r\n    },\r\n    _renderItemContentByNode: function(args, $node) {\r\n        args.container = $(args.container.children().first());\r\n        return this.callBase(args, $node)\r\n    },\r\n    _focusTarget() {\r\n        return this.$element().parent()\r\n    },\r\n    _keyboardEventBindingTarget() {\r\n        return this._focusTarget()\r\n    },\r\n    _refreshContent() {\r\n        this._prepareContent();\r\n        this._renderContent()\r\n    },\r\n    _itemClass: () => BUTTON_GROUP_ITEM_CLASS,\r\n    _itemSelectHandler: function(e) {\r\n        if (\"single\" === this.option(\"selectionMode\") && this.isItemSelected(e.currentTarget)) {\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    }\r\n});\r\nvar ButtonGroup = Widget.inherit({\r\n    _getDefaultOptions() {\r\n        return extend(this.callBase(), {\r\n            hoverStateEnabled: true,\r\n            focusStateEnabled: true,\r\n            selectionMode: \"single\",\r\n            selectedItems: [],\r\n            selectedItemKeys: [],\r\n            stylingMode: \"contained\",\r\n            keyExpr: \"text\",\r\n            items: [],\r\n            buttonTemplate: \"content\",\r\n            onSelectionChanged: null,\r\n            onItemClick: null\r\n        })\r\n    },\r\n    _init() {\r\n        this.callBase();\r\n        this._createItemClickAction()\r\n    },\r\n    _createItemClickAction() {\r\n        this._itemClickAction = this._createActionByOption(\"onItemClick\")\r\n    },\r\n    _initMarkup() {\r\n        this.setAria(\"role\", \"group\");\r\n        this.$element().addClass(BUTTON_GROUP_CLASS);\r\n        this._renderButtons();\r\n        this._syncSelectionOptions();\r\n        this.callBase()\r\n    },\r\n    _fireSelectionChangeEvent: function(addedItems, removedItems) {\r\n        this._createActionByOption(\"onSelectionChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })({\r\n            addedItems: addedItems,\r\n            removedItems: removedItems\r\n        })\r\n    },\r\n    _renderButtons() {\r\n        var $buttons = $(\"<div>\").addClass(BUTTON_GROUP_WRAPPER_CLASS).appendTo(this.$element());\r\n        var selectedItems = this.option(\"selectedItems\");\r\n        var options = {\r\n            selectionMode: this.option(\"selectionMode\"),\r\n            items: this.option(\"items\"),\r\n            keyExpr: this.option(\"keyExpr\"),\r\n            buttonTemplate: this.option(\"buttonTemplate\"),\r\n            scrollingEnabled: false,\r\n            selectedItemKeys: this.option(\"selectedItemKeys\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            stylingMode: this.option(\"stylingMode\"),\r\n            accessKey: this.option(\"accessKey\"),\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            noDataText: \"\",\r\n            selectionRequired: false,\r\n            onItemRendered: e => {\r\n                var width = this.option(\"width\");\r\n                isDefined(width) && $(e.itemElement).addClass(BUTTON_GROUP_ITEM_HAS_WIDTH)\r\n            },\r\n            onSelectionChanged: e => {\r\n                this._syncSelectionOptions();\r\n                this._fireSelectionChangeEvent(e.addedItems, e.removedItems)\r\n            },\r\n            onItemClick: e => {\r\n                this._itemClickAction(e)\r\n            }\r\n        };\r\n        if (isDefined(selectedItems) && selectedItems.length) {\r\n            options.selectedItems = selectedItems\r\n        }\r\n        this._buttonsCollection = this._createComponent($buttons, ButtonCollection, options)\r\n    },\r\n    _syncSelectionOptions() {\r\n        this._setOptionWithoutOptionChange(\"selectedItems\", this._buttonsCollection.option(\"selectedItems\"));\r\n        this._setOptionWithoutOptionChange(\"selectedItemKeys\", this._buttonsCollection.option(\"selectedItemKeys\"))\r\n    },\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"stylingMode\":\r\n            case \"selectionMode\":\r\n            case \"keyExpr\":\r\n            case \"buttonTemplate\":\r\n            case \"items\":\r\n            case \"activeStateEnabled\":\r\n            case \"focusStateEnabled\":\r\n            case \"hoverStateEnabled\":\r\n            case \"tabIndex\":\r\n                this._invalidate();\r\n                break;\r\n            case \"selectedItemKeys\":\r\n            case \"selectedItems\":\r\n                this._buttonsCollection.option(args.name, args.value);\r\n                break;\r\n            case \"onItemClick\":\r\n                this._createItemClickAction();\r\n                break;\r\n            case \"onSelectionChanged\":\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._buttonsCollection.itemElements().toggleClass(BUTTON_GROUP_ITEM_HAS_WIDTH, !!args.value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxButtonGroup\", ButtonGroup);\r\nexport default ButtonGroup;\r\n","/**\r\n * DevExtreme (esm/ui/drop_down_button.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport Widget from \"./widget/ui.widget\";\r\nimport {\r\n    FunctionTemplate\r\n} from \"../core/templates/function_template\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport ButtonGroup from \"./button_group\";\r\nimport Popup from \"./popup\";\r\nimport List from \"./list_light\";\r\nimport {\r\n    compileGetter\r\n} from \"../core/utils/data\";\r\nimport {\r\n    getPublicElement\r\n} from \"../core/element\";\r\nimport {\r\n    getImageContainer\r\n} from \"../core/utils/icon\";\r\nimport DataHelperMixin from \"../data_helper\";\r\nimport {\r\n    DataSource\r\n} from \"../data/data_source/data_source\";\r\nimport ArrayStore from \"../data/array_store\";\r\nimport {\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    isPlainObject,\r\n    isDefined\r\n} from \"../core/utils/type\";\r\nimport {\r\n    ensureDefined,\r\n    noop\r\n} from \"../core/utils/common\";\r\nimport Guid from \"../core/guid\";\r\nimport {\r\n    getElementWidth,\r\n    getSizeValue\r\n} from \"./drop_down_editor/utils\";\r\nimport messageLocalization from \"../localization/message\";\r\nvar DROP_DOWN_BUTTON_CLASS = \"dx-dropdownbutton\";\r\nvar DROP_DOWN_BUTTON_CONTENT = \"dx-dropdownbutton-content\";\r\nvar DROP_DOWN_BUTTON_ACTION_CLASS = \"dx-dropdownbutton-action\";\r\nvar DROP_DOWN_BUTTON_TOGGLE_CLASS = \"dx-dropdownbutton-toggle\";\r\nvar DROP_DOWN_BUTTON_HAS_ARROW_CLASS = \"dx-dropdownbutton-has-arrow\";\r\nvar DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS = \"dx-dropdownbutton-popup-wrapper\";\r\nvar DROP_DOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar DX_BUTTON_TEXT_CLASS = \"dx-button-text\";\r\nvar DX_ICON_RIGHT_CLASS = \"dx-icon-right\";\r\nvar DropDownButton = Widget.inherit({\r\n    _getDefaultOptions() {\r\n        return extend(this.callBase(), {\r\n            itemTemplate: \"item\",\r\n            keyExpr: \"this\",\r\n            displayExpr: void 0,\r\n            selectedItem: null,\r\n            selectedItemKey: null,\r\n            stylingMode: \"outlined\",\r\n            deferRendering: true,\r\n            noDataText: messageLocalization.format(\"dxCollectionWidget-noDataText\"),\r\n            useSelectMode: false,\r\n            splitButton: false,\r\n            showArrowIcon: true,\r\n            text: \"\",\r\n            icon: void 0,\r\n            onButtonClick: null,\r\n            onSelectionChanged: null,\r\n            onItemClick: null,\r\n            opened: false,\r\n            items: null,\r\n            dataSource: null,\r\n            focusStateEnabled: true,\r\n            hoverStateEnabled: true,\r\n            dropDownOptions: {},\r\n            dropDownContentTemplate: \"content\",\r\n            wrapItemText: false,\r\n            useItemTextAsTitle: true,\r\n            grouped: false,\r\n            groupTemplate: \"group\",\r\n            buttonGroupOptions: {}\r\n        })\r\n    },\r\n    _setOptionsByReference() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            selectedItem: true\r\n        })\r\n    },\r\n    _init() {\r\n        this.callBase();\r\n        this._createItemClickAction();\r\n        this._createActionClickAction();\r\n        this._createSelectionChangedAction();\r\n        this._initDataSource();\r\n        this._compileKeyGetter();\r\n        this._compileDisplayGetter();\r\n        this._itemsToDataSource(this.option(\"items\"));\r\n        this._options.cache(\"buttonGroupOptions\", this.option(\"buttonGroupOptions\"));\r\n        this._options.cache(\"dropDownOptions\", this.option(\"dropDownOptions\"))\r\n    },\r\n    _initTemplates() {\r\n        this._templateManager.addDefaultTemplates({\r\n            content: new FunctionTemplate(options => {\r\n                var $popupContent = $(options.container);\r\n                var $listContainer = $(\"<div>\").appendTo($popupContent);\r\n                this._list = this._createComponent($listContainer, List, this._listOptions());\r\n                this._list.registerKeyHandler(\"escape\", this._escHandler.bind(this));\r\n                this._list.registerKeyHandler(\"tab\", this._escHandler.bind(this));\r\n                this._list.registerKeyHandler(\"leftArrow\", this._escHandler.bind(this));\r\n                this._list.registerKeyHandler(\"rightArrow\", this._escHandler.bind(this))\r\n            })\r\n        });\r\n        this.callBase()\r\n    },\r\n    _itemsToDataSource: function(value) {\r\n        if (!this._dataSource) {\r\n            this._dataSource = new DataSource({\r\n                store: new ArrayStore({\r\n                    key: this._getKey(),\r\n                    data: value\r\n                }),\r\n                pageSize: 0\r\n            })\r\n        }\r\n    },\r\n    _getKey: function() {\r\n        var _this$_dataSource;\r\n        var keyExpr = this.option(\"keyExpr\");\r\n        var storeKey = null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.key();\r\n        return isDefined(storeKey) && (!isDefined(keyExpr) || \"this\" === keyExpr) ? storeKey : keyExpr\r\n    },\r\n    _compileKeyGetter() {\r\n        this._keyGetter = compileGetter(this._getKey())\r\n    },\r\n    _compileDisplayGetter() {\r\n        this._displayGetter = compileGetter(this.option(\"displayExpr\"))\r\n    },\r\n    _initMarkup() {\r\n        this.callBase();\r\n        this.$element().addClass(DROP_DOWN_BUTTON_CLASS);\r\n        this._renderButtonGroup();\r\n        this._updateArrowClass();\r\n        if (isDefined(this.option(\"selectedItemKey\"))) {\r\n            this._loadSelectedItem().done(this._updateActionButton.bind(this))\r\n        }\r\n    },\r\n    _renderFocusTarget: noop,\r\n    _render() {\r\n        if (!this.option(\"deferRendering\") || this.option(\"opened\")) {\r\n            this._renderPopup()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _renderContentImpl() {\r\n        if (this._popup) {\r\n            this._renderPopupContent()\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _loadSelectedItem() {\r\n        var _this$_loadSingleDefe;\r\n        null === (_this$_loadSingleDefe = this._loadSingleDeferred) || void 0 === _this$_loadSingleDefe ? void 0 : _this$_loadSingleDefe.reject();\r\n        var d = new Deferred;\r\n        if (this._list && void 0 !== this._lastSelectedItemData) {\r\n            var cachedResult = this.option(\"useSelectMode\") ? this._list.option(\"selectedItem\") : this._lastSelectedItemData;\r\n            return d.resolve(cachedResult)\r\n        }\r\n        this._lastSelectedItemData = void 0;\r\n        var selectedItemKey = this.option(\"selectedItemKey\");\r\n        this._loadSingle(this._getKey(), selectedItemKey).done(d.resolve).fail(() => {\r\n            d.resolve(null)\r\n        });\r\n        this._loadSingleDeferred = d;\r\n        return d.promise()\r\n    },\r\n    _createActionClickAction() {\r\n        this._actionClickAction = this._createActionByOption(\"onButtonClick\")\r\n    },\r\n    _createSelectionChangedAction() {\r\n        this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\")\r\n    },\r\n    _createItemClickAction() {\r\n        this._itemClickAction = this._createActionByOption(\"onItemClick\")\r\n    },\r\n    _fireSelectionChangedAction(_ref) {\r\n        var {\r\n            previousValue: previousValue,\r\n            value: value\r\n        } = _ref;\r\n        this._selectionChangedAction({\r\n            item: value,\r\n            previousItem: previousValue\r\n        })\r\n    },\r\n    _fireItemClickAction(_ref2) {\r\n        var {\r\n            event: event,\r\n            itemElement: itemElement,\r\n            itemData: itemData\r\n        } = _ref2;\r\n        return this._itemClickAction({\r\n            event: event,\r\n            itemElement: itemElement,\r\n            itemData: this._actionItem || itemData\r\n        })\r\n    },\r\n    _actionButtonConfig() {\r\n        return {\r\n            text: this.option(\"text\"),\r\n            icon: this.option(\"icon\"),\r\n            elementAttr: {\r\n                class: DROP_DOWN_BUTTON_ACTION_CLASS\r\n            }\r\n        }\r\n    },\r\n    _getButtonGroupItems() {\r\n        var items = [];\r\n        items.push(this._actionButtonConfig());\r\n        if (this.option(\"splitButton\")) {\r\n            items.push({\r\n                icon: \"spindown\",\r\n                elementAttr: {\r\n                    class: DROP_DOWN_BUTTON_TOGGLE_CLASS\r\n                }\r\n            })\r\n        }\r\n        return items\r\n    },\r\n    _buttonGroupItemClick(_ref3) {\r\n        var {\r\n            event: event,\r\n            itemData: itemData\r\n        } = _ref3;\r\n        var isActionButton = itemData.elementAttr.class === DROP_DOWN_BUTTON_ACTION_CLASS;\r\n        var isToggleButton = itemData.elementAttr.class === DROP_DOWN_BUTTON_TOGGLE_CLASS;\r\n        if (isToggleButton) {\r\n            this.toggle()\r\n        } else if (isActionButton) {\r\n            this._actionClickAction({\r\n                event: event,\r\n                selectedItem: this.option(\"selectedItem\")\r\n            });\r\n            if (!this.option(\"splitButton\")) {\r\n                this.toggle()\r\n            }\r\n        }\r\n    },\r\n    _buttonGroupOptions() {\r\n        var buttonTemplate = this.option(\"splitButton\") || !this.option(\"showArrowIcon\") ? \"content\" : (_ref4, buttonContent) => {\r\n            var {\r\n                text: text,\r\n                icon: icon\r\n            } = _ref4;\r\n            var $firstIcon = getImageContainer(icon);\r\n            var $textContainer = text ? $(\"<span>\").text(text).addClass(DX_BUTTON_TEXT_CLASS) : void 0;\r\n            var $secondIcon = getImageContainer(\"spindown\").addClass(DX_ICON_RIGHT_CLASS);\r\n            $(buttonContent).append($firstIcon, $textContainer, $secondIcon)\r\n        };\r\n        return extend({\r\n            items: this._getButtonGroupItems(),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            onItemClick: this._buttonGroupItemClick.bind(this),\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            stylingMode: this.option(\"stylingMode\"),\r\n            selectionMode: \"none\",\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            onKeyboardHandled: e => this._keyboardHandler(e),\r\n            buttonTemplate: buttonTemplate\r\n        }, this._options.cache(\"buttonGroupOptions\"))\r\n    },\r\n    _renderPopupContent() {\r\n        var $content = this._popup.$content();\r\n        var template = this._getTemplateByOption(\"dropDownContentTemplate\");\r\n        $content.empty();\r\n        this._popupContentId = \"dx-\" + new Guid;\r\n        this.setAria(\"id\", this._popupContentId, $content);\r\n        return template.render({\r\n            container: getPublicElement($content),\r\n            model: this.option(\"items\") || this._dataSource\r\n        })\r\n    },\r\n    _popupOptions() {\r\n        var horizontalAlignment = this.option(\"rtlEnabled\") ? \"right\" : \"left\";\r\n        return extend({\r\n            dragEnabled: false,\r\n            focusStateEnabled: false,\r\n            deferRendering: this.option(\"deferRendering\"),\r\n            closeOnOutsideClick: e => {\r\n                var $element = this.$element();\r\n                var $buttonClicked = $(e.target).closest(\".\".concat(DROP_DOWN_BUTTON_CLASS));\r\n                return !$buttonClicked.is($element)\r\n            },\r\n            showTitle: false,\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    duration: 0,\r\n                    from: 0,\r\n                    to: 1\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    duration: 400,\r\n                    from: 1,\r\n                    to: 0\r\n                }\r\n            },\r\n            _ignoreFunctionValueDeprecation: true,\r\n            width: () => getElementWidth(this.$element()),\r\n            height: \"auto\",\r\n            shading: false,\r\n            position: {\r\n                of: this.$element(),\r\n                collision: \"flipfit\",\r\n                my: horizontalAlignment + \" top\",\r\n                at: horizontalAlignment + \" bottom\"\r\n            },\r\n            wrapperAttr: {\r\n                class: DROP_DOWN_EDITOR_OVERLAY_CLASS\r\n            }\r\n        }, this._options.cache(\"dropDownOptions\"), {\r\n            visible: this.option(\"opened\")\r\n        })\r\n    },\r\n    _listOptions() {\r\n        var selectedItemKey = this.option(\"selectedItemKey\");\r\n        var useSelectMode = this.option(\"useSelectMode\");\r\n        return {\r\n            selectionMode: useSelectMode ? \"single\" : \"none\",\r\n            wrapItemText: this.option(\"wrapItemText\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            useItemTextAsTitle: this.option(\"useItemTextAsTitle\"),\r\n            onContentReady: () => this._fireContentReadyAction(),\r\n            selectedItemKeys: isDefined(selectedItemKey) && useSelectMode ? [selectedItemKey] : [],\r\n            grouped: this.option(\"grouped\"),\r\n            groupTemplate: this.option(\"groupTemplate\"),\r\n            keyExpr: this._getKey(),\r\n            noDataText: this.option(\"noDataText\"),\r\n            displayExpr: this.option(\"displayExpr\"),\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            items: this.option(\"items\"),\r\n            dataSource: this._dataSource,\r\n            onItemClick: e => {\r\n                if (!this.option(\"useSelectMode\")) {\r\n                    this._lastSelectedItemData = e.itemData\r\n                }\r\n                this.option(\"selectedItemKey\", this._keyGetter(e.itemData));\r\n                var actionResult = this._fireItemClickAction(e);\r\n                if (false !== actionResult) {\r\n                    this.toggle(false);\r\n                    this._buttonGroup.focus()\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _upDownKeyHandler() {\r\n        if (this._popup && this._popup.option(\"visible\") && this._list) {\r\n            this._list.focus()\r\n        } else {\r\n            this.open()\r\n        }\r\n        return true\r\n    },\r\n    _escHandler() {\r\n        this.close();\r\n        this._buttonGroup.focus();\r\n        return true\r\n    },\r\n    _tabHandler() {\r\n        this.close();\r\n        return true\r\n    },\r\n    _renderPopup() {\r\n        var $popup = $(\"<div>\");\r\n        this.$element().append($popup);\r\n        this._popup = this._createComponent($popup, Popup, this._popupOptions());\r\n        this._popup.$content().addClass(DROP_DOWN_BUTTON_CONTENT);\r\n        this._popup.$wrapper().addClass(DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS);\r\n        this._popup.on(\"hiding\", this._popupHidingHandler.bind(this));\r\n        this._popup.on(\"showing\", this._popupShowingHandler.bind(this));\r\n        this._bindInnerWidgetOptions(this._popup, \"dropDownOptions\")\r\n    },\r\n    _popupHidingHandler() {\r\n        this.option(\"opened\", false);\r\n        this._setAriaExpanded(false)\r\n    },\r\n    _popupOptionChanged: function(args) {\r\n        var options = Widget.getOptionsFromContainer(args);\r\n        this._setPopupOption(options);\r\n        var optionsKeys = Object.keys(options);\r\n        if (-1 !== optionsKeys.indexOf(\"width\") || -1 !== optionsKeys.indexOf(\"height\")) {\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        var popupWidth = getSizeValue(this.option(\"dropDownOptions.width\"));\r\n        if (void 0 === popupWidth) {\r\n            this._setPopupOption(\"width\", () => getElementWidth(this.$element()))\r\n        }\r\n    },\r\n    _setPopupOption: function(optionName, value) {\r\n        this._setWidgetOption(\"_popup\", arguments)\r\n    },\r\n    _popupShowingHandler() {\r\n        this.option(\"opened\", true);\r\n        this._setAriaExpanded(true)\r\n    },\r\n    _setAriaExpanded(value) {\r\n        this._ariaExpandedElements.forEach(ariaElement => {\r\n            this.setAria({\r\n                expanded: value,\r\n                owns: value ? this._popupContentId : void 0\r\n            }, $(ariaElement))\r\n        })\r\n    },\r\n    _renderButtonGroup() {\r\n        var $buttonGroup = this._buttonGroup && this._buttonGroup.$element() || $(\"<div>\");\r\n        if (!this._buttonGroup) {\r\n            this.$element().append($buttonGroup)\r\n        }\r\n        this._buttonGroup = this._createComponent($buttonGroup, ButtonGroup, this._buttonGroupOptions());\r\n        var buttonElements = this._buttonGroup.$element().find(\".dx-button\").toArray();\r\n        this._ariaExpandedElements = [...buttonElements, this.$element()];\r\n        this._buttonGroup.registerKeyHandler(\"downArrow\", this._upDownKeyHandler.bind(this));\r\n        this._buttonGroup.registerKeyHandler(\"tab\", this._tabHandler.bind(this));\r\n        this._buttonGroup.registerKeyHandler(\"upArrow\", this._upDownKeyHandler.bind(this));\r\n        this._buttonGroup.registerKeyHandler(\"escape\", this._escHandler.bind(this));\r\n        this._bindInnerWidgetOptions(this._buttonGroup, \"buttonGroupOptions\");\r\n        this._setAriaExpanded(this.option(\"opened\"))\r\n    },\r\n    _updateArrowClass() {\r\n        var hasArrow = this.option(\"splitButton\") || this.option(\"showArrowIcon\");\r\n        this.$element().toggleClass(DROP_DOWN_BUTTON_HAS_ARROW_CLASS, hasArrow)\r\n    },\r\n    toggle(visible) {\r\n        if (!this._popup) {\r\n            this._renderPopup();\r\n            this._renderContent()\r\n        }\r\n        return this._popup.toggle(visible)\r\n    },\r\n    open() {\r\n        return this.toggle(true)\r\n    },\r\n    close() {\r\n        return this.toggle(false)\r\n    },\r\n    _setListOption(name, value) {\r\n        this._list && this._list.option(name, value)\r\n    },\r\n    _getDisplayValue(item) {\r\n        var isPrimitiveItem = !isPlainObject(item);\r\n        var displayValue = isPrimitiveItem ? item : this._displayGetter(item);\r\n        return !isPlainObject(displayValue) ? String(ensureDefined(displayValue, \"\")) : \"\"\r\n    },\r\n    _updateActionButton(selectedItem) {\r\n        if (this.option(\"useSelectMode\")) {\r\n            this.option({\r\n                text: this._getDisplayValue(selectedItem),\r\n                icon: isPlainObject(selectedItem) ? selectedItem.icon : void 0\r\n            })\r\n        }\r\n        this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem);\r\n        this._setOptionWithoutOptionChange(\"selectedItemKey\", this._keyGetter(selectedItem))\r\n    },\r\n    _clean() {\r\n        this._list && this._list.$element().remove();\r\n        this._popup && this._popup.$element().remove()\r\n    },\r\n    _selectedItemKeyChanged(value) {\r\n        this._setListOption(\"selectedItemKeys\", this.option(\"useSelectMode\") && isDefined(value) ? [value] : []);\r\n        var previousItem = this.option(\"selectedItem\");\r\n        this._loadSelectedItem().done(selectedItem => {\r\n            this._updateActionButton(selectedItem);\r\n            if (this._displayGetter(previousItem) !== this._displayGetter(selectedItem)) {\r\n                this._fireSelectionChangedAction({\r\n                    previousValue: previousItem,\r\n                    value: selectedItem\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _actionButtonOptionChanged(_ref5) {\r\n        var {\r\n            name: name,\r\n            value: value\r\n        } = _ref5;\r\n        var newConfig = {};\r\n        newConfig[name] = value;\r\n        this._buttonGroup.option(\"items[0]\", extend({}, this._actionButtonConfig(), newConfig));\r\n        this._popup && this._popup.repaint()\r\n    },\r\n    _selectModeChanged(value) {\r\n        if (value) {\r\n            this._setListOption(\"selectionMode\", \"single\");\r\n            var selectedItemKey = this.option(\"selectedItemKey\");\r\n            this._setListOption(\"selectedItemKeys\", isDefined(selectedItemKey) ? [selectedItemKey] : []);\r\n            this._selectedItemKeyChanged(this.option(\"selectedItemKey\"))\r\n        } else {\r\n            this._setListOption(\"selectionMode\", \"none\");\r\n            this.option({\r\n                selectedItemKey: void 0,\r\n                selectedItem: void 0\r\n            });\r\n            this._actionButtonOptionChanged({\r\n                text: this.option(\"text\")\r\n            })\r\n        }\r\n    },\r\n    _updateItemCollection(optionName) {\r\n        var selectedItemKey = this.option(\"selectedItemKey\");\r\n        this._setListOption(\"selectedItem\", null);\r\n        this._setWidgetOption(\"_list\", [optionName]);\r\n        if (isDefined(selectedItemKey)) {\r\n            this._loadSelectedItem().done(selectedItem => {\r\n                this._setListOption(\"selectedItemKeys\", [selectedItemKey]);\r\n                this._setListOption(\"selectedItem\", selectedItem)\r\n            }).fail(error => {\r\n                this._setListOption(\"selectedItemKeys\", [])\r\n            }).always(this._updateActionButton.bind(this))\r\n        }\r\n    },\r\n    _updateDataSource: function() {\r\n        var items = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._dataSource.items();\r\n        this._dataSource = void 0;\r\n        this._itemsToDataSource(items);\r\n        this._updateKeyExpr()\r\n    },\r\n    _updateKeyExpr: function() {\r\n        this._compileKeyGetter();\r\n        this._setListOption(\"keyExpr\", this._getKey())\r\n    },\r\n    focus: function() {\r\n        this._buttonGroup.focus()\r\n    },\r\n    _optionChanged(args) {\r\n        var _this$_popup;\r\n        var {\r\n            name: name,\r\n            value: value\r\n        } = args;\r\n        switch (name) {\r\n            case \"useSelectMode\":\r\n                this._selectModeChanged(value);\r\n                break;\r\n            case \"splitButton\":\r\n                this._updateArrowClass();\r\n                this._renderButtonGroup();\r\n                break;\r\n            case \"displayExpr\":\r\n                this._compileDisplayGetter();\r\n                this._setListOption(name, value);\r\n                this._updateActionButton(this.option(\"selectedItem\"));\r\n                break;\r\n            case \"keyExpr\":\r\n                this._updateDataSource();\r\n                break;\r\n            case \"buttonGroupOptions\":\r\n                this._innerWidgetOptionChanged(this._buttonGroup, args);\r\n                break;\r\n            case \"dropDownOptions\":\r\n                if (\"dropDownOptions.visible\" === args.fullName) {\r\n                    break\r\n                }\r\n                if (void 0 !== args.value.visible) {\r\n                    delete args.value.visible\r\n                }\r\n                this._popupOptionChanged(args);\r\n                this._innerWidgetOptionChanged(this._popup, args);\r\n                break;\r\n            case \"opened\":\r\n                this.toggle(value);\r\n                break;\r\n            case \"focusStateEnabled\":\r\n            case \"hoverStateEnabled\":\r\n                this._setListOption(name, value);\r\n                this._buttonGroup.option(name, value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"items\":\r\n                this._updateDataSource(this.option(\"items\"));\r\n                this._updateItemCollection(name);\r\n                break;\r\n            case \"dataSource\":\r\n                if (Array.isArray(value)) {\r\n                    this._updateDataSource(this.option(\"dataSource\"))\r\n                } else {\r\n                    this._initDataSource();\r\n                    this._updateKeyExpr()\r\n                }\r\n                this._updateItemCollection(name);\r\n                break;\r\n            case \"icon\":\r\n            case \"text\":\r\n                this._actionButtonOptionChanged(args);\r\n                break;\r\n            case \"showArrowIcon\":\r\n                this._updateArrowClass();\r\n                this._renderButtonGroup();\r\n                this._popup && this._popup.repaint();\r\n                break;\r\n            case \"width\":\r\n            case \"height\":\r\n                this.callBase(args);\r\n                null === (_this$_popup = this._popup) || void 0 === _this$_popup ? void 0 : _this$_popup.repaint();\r\n                break;\r\n            case \"stylingMode\":\r\n                this._buttonGroup.option(name, value);\r\n                break;\r\n            case \"itemTemplate\":\r\n            case \"grouped\":\r\n            case \"noDataText\":\r\n            case \"groupTemplate\":\r\n            case \"wrapItemText\":\r\n            case \"useItemTextAsTitle\":\r\n                this._setListOption(name, value);\r\n                break;\r\n            case \"dropDownContentTemplate\":\r\n                this._renderContent();\r\n                break;\r\n            case \"selectedItemKey\":\r\n                this._selectedItemKeyChanged(value);\r\n                break;\r\n            case \"selectedItem\":\r\n                break;\r\n            case \"onItemClick\":\r\n                this._createItemClickAction();\r\n                break;\r\n            case \"onButtonClick\":\r\n                this._createActionClickAction();\r\n                break;\r\n            case \"onSelectionChanged\":\r\n                this._createSelectionChangedAction();\r\n                break;\r\n            case \"deferRendering\":\r\n                this.toggle(this.option(\"opened\"));\r\n                break;\r\n            case \"tabIndex\":\r\n                this._buttonGroup.option(name, value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n}).include(DataHelperMixin);\r\nregisterComponent(\"dxDropDownButton\", DropDownButton);\r\nexport default DropDownButton;\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.export.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../../core/renderer\";\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    merge\r\n} from \"../../core/utils/array\";\r\nimport dataGridCore from \"./ui.data_grid.core\";\r\nimport exportMixin from \"../grid_core/ui.grid_core.export_mixin\";\r\nimport {\r\n    export as clientExport,\r\n    excel\r\n} from \"../../exporter\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport \"../button\";\r\nimport \"../drop_down_button\";\r\nimport List from \"../list_light\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar DATAGRID_EXPORT_MENU_CLASS = \"dx-datagrid-export-menu\";\r\nvar DATAGRID_EXPORT_BUTTON_CLASS = \"dx-datagrid-export-button\";\r\nvar DATAGRID_EXPORT_TOOLBAR_BUTTON_NAME = \"exportButton\";\r\nvar DATAGRID_EXPORT_ICON = \"export-to\";\r\nvar DATAGRID_EXPORT_EXCEL_ICON = \"xlsxfile\";\r\nvar DATAGRID_EXPORT_SELECTED_ICON = \"exportselected\";\r\nvar DATAGRID_EXPORT_EXCEL_BUTTON_ICON = \"export-excel-button\";\r\nexport var DataProvider = Class.inherit({\r\n    ctor: function(exportController, initialColumnWidthsByColumnIndex, selectedRowsOnly) {\r\n        this._exportController = exportController;\r\n        this._initialColumnWidthsByColumnIndex = initialColumnWidthsByColumnIndex;\r\n        this._selectedRowsOnly = selectedRowsOnly\r\n    },\r\n    _getGroupValue: function(item) {\r\n        var {\r\n            key: key,\r\n            data: data,\r\n            rowType: rowType,\r\n            groupIndex: groupIndex,\r\n            summaryCells: summaryCells\r\n        } = item;\r\n        var groupColumn = this._options.groupColumns[groupIndex];\r\n        var value = dataGridCore.getDisplayValue(groupColumn, groupColumn.deserializeValue ? groupColumn.deserializeValue(key[groupIndex]) : key[groupIndex], data, rowType);\r\n        var result = groupColumn.caption + \": \" + dataGridCore.formatValue(value, groupColumn);\r\n        if (summaryCells && summaryCells[0] && summaryCells[0].length) {\r\n            result += \" \" + dataGridCore.getGroupRowSummaryText(summaryCells[0], this._options.summaryTexts)\r\n        }\r\n        return result\r\n    },\r\n    _correctCellIndex: function(cellIndex) {\r\n        return cellIndex\r\n    },\r\n    _initOptions: function() {\r\n        var exportController = this._exportController;\r\n        var groupColumns = exportController._columnsController.getGroupColumns();\r\n        var excelWrapTextEnabled = exportController.option(\"export.excelWrapTextEnabled\");\r\n        this._options = {\r\n            columns: exportController._getColumns(this._initialColumnWidthsByColumnIndex),\r\n            groupColumns: groupColumns,\r\n            items: this._selectedRowsOnly || exportController._selectionOnly ? exportController._getSelectedItems() : exportController._getAllItems(),\r\n            getVisibleIndex: exportController._columnsController.getVisibleIndex.bind(exportController._columnsController),\r\n            isHeadersVisible: exportController.option(\"showColumnHeaders\"),\r\n            summaryTexts: exportController.option(\"summary.texts\"),\r\n            customizeExportData: exportController.option(\"customizeExportData\"),\r\n            rtlEnabled: exportController.option(\"rtlEnabled\"),\r\n            wrapTextEnabled: isDefined(excelWrapTextEnabled) ? excelWrapTextEnabled : !!exportController.option(\"wordWrapEnabled\"),\r\n            customizeExcelCell: exportController.option(\"export.customizeExcelCell\")\r\n        }\r\n    },\r\n    hasCustomizeExcelCell: function() {\r\n        return isDefined(this._options.customizeExcelCell)\r\n    },\r\n    customizeExcelCell: function(e, cellSourceData) {\r\n        if (this._options.customizeExcelCell) {\r\n            e.gridCell = cellSourceData;\r\n            if (isDefined(this._exportController) && isDefined(this._exportController.component)) {\r\n                e.component = this._exportController.component\r\n            }\r\n            this._options.customizeExcelCell(e)\r\n        }\r\n    },\r\n    getHeaderStyles: () => [{\r\n        bold: true,\r\n        alignment: \"center\",\r\n        wrapText: true\r\n    }, {\r\n        bold: true,\r\n        alignment: \"left\",\r\n        wrapText: true\r\n    }, {\r\n        bold: true,\r\n        alignment: \"right\",\r\n        wrapText: true\r\n    }],\r\n    getGroupRowStyle() {\r\n        return {\r\n            bold: true,\r\n            wrapText: false,\r\n            alignment: getDefaultAlignment(this._options.rtlEnabled)\r\n        }\r\n    },\r\n    getColumnStyles() {\r\n        var wrapTextEnabled = this._options.wrapTextEnabled;\r\n        var columnStyles = [];\r\n        this.getColumns().forEach(column => {\r\n            columnStyles.push({\r\n                alignment: column.alignment || \"left\",\r\n                format: column.format,\r\n                wrapText: wrapTextEnabled,\r\n                dataType: column.dataType\r\n            })\r\n        });\r\n        return columnStyles\r\n    },\r\n    getStyles: function() {\r\n        return [...this.getHeaderStyles(), ...this.getColumnStyles(), this.getGroupRowStyle()]\r\n    },\r\n    _getTotalCellStyleId: function(cellIndex) {\r\n        var _this$getColumns$cell;\r\n        var alignment = (null === (_this$getColumns$cell = this.getColumns()[cellIndex]) || void 0 === _this$getColumns$cell ? void 0 : _this$getColumns$cell.alignment) || \"right\";\r\n        return this.getHeaderStyles().map(style => style.alignment).indexOf(alignment)\r\n    },\r\n    getStyleId: function(rowIndex, cellIndex) {\r\n        if (rowIndex < this.getHeaderRowCount()) {\r\n            return 0\r\n        } else if (this.isTotalCell(rowIndex - this.getHeaderRowCount(), cellIndex)) {\r\n            return this._getTotalCellStyleId(cellIndex)\r\n        } else if (this.isGroupRow(rowIndex - this.getHeaderRowCount())) {\r\n            return this.getHeaderStyles().length + this.getColumns().length\r\n        } else {\r\n            return cellIndex + this.getHeaderStyles().length\r\n        }\r\n    },\r\n    getColumns: function(getColumnsByAllRows) {\r\n        var {\r\n            columns: columns\r\n        } = this._options;\r\n        return getColumnsByAllRows ? columns : columns[columns.length - 1]\r\n    },\r\n    getColumnsWidths: function() {\r\n        var columns = this.getColumns();\r\n        return isDefined(columns) ? columns.map(c => c.width) : void 0\r\n    },\r\n    getRowsCount: function() {\r\n        return this._options.items.length + this.getHeaderRowCount()\r\n    },\r\n    getHeaderRowCount: function() {\r\n        if (this.isHeadersVisible()) {\r\n            return this._options.columns.length - 1\r\n        }\r\n        return 0\r\n    },\r\n    isGroupRow: function(rowIndex) {\r\n        return rowIndex < this._options.items.length && \"group\" === this._options.items[rowIndex].rowType\r\n    },\r\n    getGroupLevel: function(rowIndex) {\r\n        var item = this._options.items[rowIndex - this.getHeaderRowCount()];\r\n        var groupIndex = item && item.groupIndex;\r\n        if (item && \"totalFooter\" === item.rowType) {\r\n            return 0\r\n        }\r\n        return isDefined(groupIndex) ? groupIndex : this._options.groupColumns.length\r\n    },\r\n    getCellType: function(rowIndex, cellIndex) {\r\n        var columns = this.getColumns();\r\n        if (rowIndex < this.getHeaderRowCount()) {\r\n            return \"string\"\r\n        } else {\r\n            rowIndex -= this.getHeaderRowCount()\r\n        }\r\n        if (cellIndex < columns.length) {\r\n            var item = this._options.items.length && this._options.items[rowIndex];\r\n            var column = columns[cellIndex];\r\n            if (item && \"data\" === item.rowType) {\r\n                if (isFinite(item.values[this._correctCellIndex(cellIndex)]) && !isDefined(column.customizeText)) {\r\n                    return isDefined(column.lookup) ? column.lookup.dataType : column.dataType\r\n                }\r\n            }\r\n            return \"string\"\r\n        }\r\n    },\r\n    ready: function() {\r\n        var that = this;\r\n        that._initOptions();\r\n        var options = that._options;\r\n        return when(options.items).done((function(items) {\r\n            options.customizeExportData && options.customizeExportData(that.getColumns(that.getHeaderRowCount() > 1), items);\r\n            options.items = items\r\n        })).fail((function() {\r\n            options.items = []\r\n        }))\r\n    },\r\n    _convertFromGridGroupSummaryItems: function(gridGroupSummaryItems) {\r\n        if (isDefined(gridGroupSummaryItems) && gridGroupSummaryItems.length > 0) {\r\n            return gridGroupSummaryItems.map((function(item) {\r\n                return {\r\n                    value: item.value,\r\n                    name: item.name\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    getCellData: function(rowIndex, cellIndex, isExcelJS) {\r\n        var value;\r\n        var column;\r\n        var result = {\r\n            cellSourceData: {},\r\n            value: value\r\n        };\r\n        var columns = this.getColumns();\r\n        var correctedCellIndex = this._correctCellIndex(cellIndex);\r\n        if (rowIndex < this.getHeaderRowCount()) {\r\n            var columnsRow = this.getColumns(true)[rowIndex];\r\n            column = columnsRow[cellIndex];\r\n            result.cellSourceData.rowType = \"header\";\r\n            result.cellSourceData.column = column && column.gridColumn;\r\n            result.value = column && column.caption\r\n        } else {\r\n            rowIndex -= this.getHeaderRowCount();\r\n            var item = this._options.items.length && this._options.items[rowIndex];\r\n            if (item) {\r\n                var itemValues = item.values;\r\n                result.cellSourceData.rowType = item.rowType;\r\n                result.cellSourceData.column = columns[cellIndex] && columns[cellIndex].gridColumn;\r\n                switch (item.rowType) {\r\n                    case \"groupFooter\":\r\n                    case \"totalFooter\":\r\n                        if (correctedCellIndex < itemValues.length) {\r\n                            value = itemValues[correctedCellIndex];\r\n                            if (isDefined(value)) {\r\n                                result.cellSourceData.value = value.value;\r\n                                result.cellSourceData.totalSummaryItemName = value.name;\r\n                                result.value = dataGridCore.getSummaryText(value, this._options.summaryTexts)\r\n                            } else {\r\n                                result.cellSourceData.value = void 0\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        result.cellSourceData.groupIndex = item.groupIndex;\r\n                        if (cellIndex < 1) {\r\n                            result.cellSourceData.column = this._options.groupColumns[item.groupIndex];\r\n                            result.cellSourceData.value = item.key[item.groupIndex];\r\n                            result.cellSourceData.groupSummaryItems = this._convertFromGridGroupSummaryItems(item.summaryCells[0]);\r\n                            result.value = this._getGroupValue(item)\r\n                        } else {\r\n                            var summaryItems = item.values[correctedCellIndex];\r\n                            if (Array.isArray(summaryItems)) {\r\n                                result.cellSourceData.groupSummaryItems = this._convertFromGridGroupSummaryItems(summaryItems);\r\n                                value = \"\";\r\n                                for (var i = 0; i < summaryItems.length; i++) {\r\n                                    value += (i > 0 ? isExcelJS ? \"\\n\" : \" \\n \" : \"\") + dataGridCore.getSummaryText(summaryItems[i], this._options.summaryTexts)\r\n                                }\r\n                                result.value = value\r\n                            } else {\r\n                                result.cellSourceData.value = void 0\r\n                            }\r\n                        }\r\n                        break;\r\n                    default:\r\n                        column = columns[cellIndex];\r\n                        if (column) {\r\n                            var _value = itemValues[correctedCellIndex];\r\n                            var displayValue = dataGridCore.getDisplayValue(column, _value, item.data, item.rowType);\r\n                            if (!isFinite(displayValue) || isDefined(column.customizeText)) {\r\n                                if (isExcelJS && isDefined(column.customizeText) && column.customizeText === this._exportController._columnsController.getCustomizeTextByDataType(\"boolean\")) {\r\n                                    result.value = displayValue\r\n                                } else {\r\n                                    result.value = dataGridCore.formatValue(displayValue, column)\r\n                                }\r\n                            } else {\r\n                                result.value = displayValue\r\n                            }\r\n                            result.cellSourceData.value = _value\r\n                        }\r\n                        result.cellSourceData.data = item.data\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    isHeadersVisible: function() {\r\n        return this._options.isHeadersVisible\r\n    },\r\n    isTotalCell: function(rowIndex, cellIndex) {\r\n        var items = this._options.items;\r\n        var item = items[rowIndex];\r\n        var correctCellIndex = this._correctCellIndex(cellIndex);\r\n        var isSummaryAlignByColumn = item.summaryCells && item.summaryCells[correctCellIndex] && item.summaryCells[correctCellIndex].length > 0 && item.summaryCells[correctCellIndex][0].alignByColumn;\r\n        return item && \"groupFooter\" === item.rowType || \"totalFooter\" === item.rowType || isSummaryAlignByColumn\r\n    },\r\n    getCellMerging: function(rowIndex, cellIndex) {\r\n        var columns = this._options.columns;\r\n        var column = columns[rowIndex] && columns[rowIndex][cellIndex];\r\n        return column ? {\r\n            colspan: (column.exportColspan || 1) - 1,\r\n            rowspan: (column.rowspan || 1) - 1\r\n        } : {\r\n            colspan: 0,\r\n            rowspan: 0\r\n        }\r\n    },\r\n    getFrozenArea: function() {\r\n        return {\r\n            x: 0,\r\n            y: this.getHeaderRowCount()\r\n        }\r\n    }\r\n});\r\nexport var ExportController = dataGridCore.ViewController.inherit({}).include(exportMixin).inherit({\r\n    _getEmptyCell: function() {\r\n        return {\r\n            caption: \"\",\r\n            colspan: 1,\r\n            rowspan: 1\r\n        }\r\n    },\r\n    _updateColumnWidth: function(column, width) {\r\n        column.width = width\r\n    },\r\n    _getColumns: function(initialColumnWidthsByColumnIndex) {\r\n        var result = [];\r\n        var i;\r\n        var columns;\r\n        var columnsController = this._columnsController;\r\n        var rowCount = columnsController.getRowCount();\r\n        for (i = 0; i <= rowCount; i++) {\r\n            var currentHeaderRow = [];\r\n            columns = columnsController.getVisibleColumns(i, true);\r\n            var columnWidthsByColumnIndex = void 0;\r\n            if (i === rowCount) {\r\n                if (this._updateLockCount) {\r\n                    columnWidthsByColumnIndex = initialColumnWidthsByColumnIndex\r\n                } else {\r\n                    var columnWidths = this._getColumnWidths(this._headersView, this._rowsView);\r\n                    if (columnWidths && columnWidths.length) {\r\n                        columnWidthsByColumnIndex = {};\r\n                        for (var _i = 0; _i < columns.length; _i++) {\r\n                            columnWidthsByColumnIndex[columns[_i].index] = columnWidths[_i]\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (var j = 0; j < columns.length; j++) {\r\n                var column = extend({}, columns[j], {\r\n                    dataType: \"datetime\" === columns[j].dataType ? \"date\" : columns[j].dataType,\r\n                    gridColumn: columns[j]\r\n                });\r\n                if (this._needColumnExporting(column)) {\r\n                    var currentColspan = this._calculateExportColspan(column);\r\n                    if (isDefined(currentColspan)) {\r\n                        column.exportColspan = currentColspan\r\n                    }\r\n                    if (columnWidthsByColumnIndex) {\r\n                        this._updateColumnWidth(column, columnWidthsByColumnIndex[column.index])\r\n                    }\r\n                    currentHeaderRow.push(column)\r\n                }\r\n            }\r\n            result.push(currentHeaderRow)\r\n        }\r\n        columns = result[rowCount];\r\n        result = this._prepareItems(result.slice(0, -1));\r\n        result.push(columns);\r\n        return result\r\n    },\r\n    _calculateExportColspan: function(column) {\r\n        if (!column.isBand) {\r\n            return\r\n        }\r\n        var childColumns = this._columnsController.getChildrenByBandColumn(column.index, true);\r\n        if (!isDefined(childColumns)) {\r\n            return\r\n        }\r\n        return childColumns.reduce((result, childColumn) => {\r\n            if (this._needColumnExporting(childColumn)) {\r\n                return result + (this._calculateExportColspan(childColumn) || 1)\r\n            } else {\r\n                return result\r\n            }\r\n        }, 0)\r\n    },\r\n    _needColumnExporting: function(column) {\r\n        return !column.command && (column.allowExporting || void 0 === column.allowExporting)\r\n    },\r\n    _getFooterSummaryItems: function(summaryCells, isTotal) {\r\n        var result = [];\r\n        var estimatedItemsCount = 1;\r\n        var i = 0;\r\n        do {\r\n            var values = [];\r\n            for (var j = 0; j < summaryCells.length; j++) {\r\n                var summaryCell = summaryCells[j];\r\n                var itemsLength = summaryCell.length;\r\n                if (estimatedItemsCount < itemsLength) {\r\n                    estimatedItemsCount = itemsLength\r\n                }\r\n                values.push(summaryCell[i])\r\n            }\r\n            result.push({\r\n                values: values,\r\n                rowType: isTotal ? \"totalFooter\" : \"groupFooter\"\r\n            })\r\n        } while (i++ < estimatedItemsCount - 1);\r\n        return result\r\n    },\r\n    _hasSummaryGroupFooters: function() {\r\n        var groupItems = this.option(\"summary.groupItems\");\r\n        if (isDefined(groupItems)) {\r\n            for (var i = 0; i < groupItems.length; i++) {\r\n                if (groupItems[i].showInGroupFooter) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _getItemsWithSummaryGroupFooters: function(sourceItems) {\r\n        var result = [];\r\n        var beforeGroupFooterItems = [];\r\n        var groupFooterItems = [];\r\n        for (var i = 0; i < sourceItems.length; i++) {\r\n            var item = sourceItems[i];\r\n            if (\"groupFooter\" === item.rowType) {\r\n                groupFooterItems = this._getFooterSummaryItems(item.summaryCells);\r\n                result = result.concat(beforeGroupFooterItems, groupFooterItems);\r\n                beforeGroupFooterItems = []\r\n            } else {\r\n                beforeGroupFooterItems.push(item)\r\n            }\r\n        }\r\n        return result.length ? result : beforeGroupFooterItems\r\n    },\r\n    _updateGroupValuesWithSummaryByColumn: function(sourceItems) {\r\n        var summaryValues = [];\r\n        for (var i = 0; i < sourceItems.length; i++) {\r\n            var item = sourceItems[i];\r\n            var summaryCells = item.summaryCells;\r\n            if (\"group\" === item.rowType && summaryCells && summaryCells.length > 1) {\r\n                var groupColumnCount = item.values.length;\r\n                for (var j = 1; j < summaryCells.length; j++) {\r\n                    for (var k = 0; k < summaryCells[j].length; k++) {\r\n                        var summaryItem = summaryCells[j][k];\r\n                        if (summaryItem && summaryItem.alignByColumn) {\r\n                            if (!Array.isArray(summaryValues[j - groupColumnCount])) {\r\n                                summaryValues[j - groupColumnCount] = []\r\n                            }\r\n                            summaryValues[j - groupColumnCount].push(summaryItem)\r\n                        }\r\n                    }\r\n                }\r\n                if (summaryValues.length > 0) {\r\n                    merge(item.values, summaryValues);\r\n                    summaryValues = []\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _processUnExportedItems: function(items) {\r\n        var columns = this._columnsController.getVisibleColumns(null, true);\r\n        var groupColumns = this._columnsController.getGroupColumns();\r\n        var values;\r\n        var summaryCells;\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            var isDetailExpandColumn = false;\r\n            values = [];\r\n            summaryCells = [];\r\n            for (var j = 0; j < columns.length; j++) {\r\n                var column = columns[j];\r\n                isDetailExpandColumn = isDetailExpandColumn || \"detailExpand\" === column.type;\r\n                if (this._needColumnExporting(column)) {\r\n                    if (item.values) {\r\n                        if (\"group\" === item.rowType && !values.length) {\r\n                            values.push(item.key[item.groupIndex])\r\n                        } else {\r\n                            values.push(item.values[j])\r\n                        }\r\n                    }\r\n                    if (item.summaryCells) {\r\n                        if (\"group\" === item.rowType && !summaryCells.length) {\r\n                            var index = j - groupColumns.length + item.groupIndex;\r\n                            summaryCells.push(item.summaryCells[isDetailExpandColumn ? index : index + 1])\r\n                        } else {\r\n                            summaryCells.push(item.summaryCells[j])\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (values.length) {\r\n                item.values = values\r\n            }\r\n            if (summaryCells.length) {\r\n                item.summaryCells = summaryCells\r\n            }\r\n        }\r\n    },\r\n    _getAllItems: function(data) {\r\n        var that = this;\r\n        var d = new Deferred;\r\n        var dataController = this.getController(\"data\");\r\n        var footerItems = dataController.footerItems();\r\n        var totalItem = footerItems.length && footerItems[0];\r\n        var summaryTotalItems = that.option(\"summary.totalItems\");\r\n        var summaryCells;\r\n        when(data).done((function(data) {\r\n            dataController.loadAll(data).done((function(sourceItems, totalAggregates) {\r\n                that._updateGroupValuesWithSummaryByColumn(sourceItems);\r\n                if (that._hasSummaryGroupFooters()) {\r\n                    sourceItems = that._getItemsWithSummaryGroupFooters(sourceItems)\r\n                }\r\n                summaryCells = totalItem && totalItem.summaryCells;\r\n                if (isDefined(totalAggregates) && summaryTotalItems) {\r\n                    summaryCells = that._getSummaryCells(summaryTotalItems, totalAggregates)\r\n                }\r\n                var summaryItems = totalItem && that._getFooterSummaryItems(summaryCells, true);\r\n                if (summaryItems) {\r\n                    sourceItems = sourceItems.concat(summaryItems)\r\n                }\r\n                that._processUnExportedItems(sourceItems);\r\n                d.resolve(sourceItems)\r\n            })).fail(d.reject)\r\n        })).fail(d.reject);\r\n        return d\r\n    },\r\n    _getSummaryCells: function(summaryTotalItems, totalAggregates) {\r\n        var dataController = this.getController(\"data\");\r\n        var columnsController = dataController._columnsController;\r\n        return dataController._calculateSummaryCells(summaryTotalItems, totalAggregates, columnsController.getVisibleColumns(null, true), (function(summaryItem, column) {\r\n            return dataController._isDataColumn(column) ? column.index : -1\r\n        }))\r\n    },\r\n    _getSelectedItems: function() {\r\n        var selectionController = this.getController(\"selection\");\r\n        var selectedRowData = selectionController.getSelectedRowsData();\r\n        return this._getAllItems(selectedRowData)\r\n    },\r\n    _getColumnWidths: function(headersView, rowsView) {\r\n        return headersView && headersView.isVisible() ? headersView.getColumnWidths() : rowsView.getColumnWidths()\r\n    },\r\n    init: function() {\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._rowsView = this.getView(\"rowsView\");\r\n        this._headersView = this.getView(\"columnHeadersView\");\r\n        this.createAction(\"onExporting\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        this.createAction(\"onExported\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        this.createAction(\"onFileSaving\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    callbackNames: function() {\r\n        return [\"selectionOnlyChanged\"]\r\n    },\r\n    getExportFormat: function() {\r\n        return [\"EXCEL\"]\r\n    },\r\n    getDataProvider: function(selectedRowsOnly) {\r\n        var columnWidths = this._getColumnWidths(this._headersView, this._rowsView);\r\n        var initialColumnWidthsByColumnIndex;\r\n        if (columnWidths && columnWidths.length) {\r\n            initialColumnWidthsByColumnIndex = {};\r\n            var columnsLastRowVisibleColumns = this._columnsController.getVisibleColumns(this._columnsController.getRowCount(), true);\r\n            for (var i = 0; i < columnsLastRowVisibleColumns.length; i++) {\r\n                initialColumnWidthsByColumnIndex[columnsLastRowVisibleColumns[i].index] = columnWidths[i]\r\n            }\r\n        }\r\n        return new DataProvider(this, initialColumnWidthsByColumnIndex, selectedRowsOnly)\r\n    },\r\n    exportToExcel: function(selectionOnly) {\r\n        this._selectionOnly = selectionOnly;\r\n        clientExport(this.component.getDataProvider(), {\r\n            fileName: this.option(\"export.fileName\"),\r\n            proxyUrl: this.option(\"export.proxyUrl\"),\r\n            format: \"EXCEL\",\r\n            autoFilterEnabled: !!this.option(\"export.excelFilterEnabled\"),\r\n            rtlEnabled: this.option(\"rtlEnabled\"),\r\n            ignoreErrors: this.option(\"export.ignoreExcelErrors\"),\r\n            exportingAction: this.getAction(\"onExporting\"),\r\n            exportedAction: this.getAction(\"onExported\"),\r\n            fileSavingAction: this.getAction(\"onFileSaving\")\r\n        }, excel.getData)\r\n    },\r\n    publicMethods: function() {\r\n        return [\"getDataProvider\", \"getExportFormat\", \"exportToExcel\"]\r\n    },\r\n    selectionOnly: function(value) {\r\n        if (isDefined(value)) {\r\n            this._isSelectedRows = value;\r\n            this.selectionOnlyChanged.fire()\r\n        } else {\r\n            return this._isSelectedRows\r\n        }\r\n    }\r\n});\r\ndataGridCore.registerModule(\"export\", {\r\n    defaultOptions: function() {\r\n        return {\r\n            export: {\r\n                enabled: false,\r\n                fileName: \"DataGrid\",\r\n                excelFilterEnabled: false,\r\n                excelWrapTextEnabled: void 0,\r\n                proxyUrl: void 0,\r\n                allowExportSelectedData: false,\r\n                ignoreExcelErrors: true,\r\n                texts: {\r\n                    exportTo: messageLocalization.format(\"dxDataGrid-exportTo\"),\r\n                    exportAll: messageLocalization.format(\"dxDataGrid-exportAll\"),\r\n                    exportSelectedRows: messageLocalization.format(\"dxDataGrid-exportSelectedRows\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        export: ExportController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                callbackNames: function() {\r\n                    var callbackList = this.callBase();\r\n                    return isDefined(callbackList) ? callbackList.push(\"editingChanged\") : [\"editingChanged\"]\r\n                },\r\n                _updateEditButtons: function() {\r\n                    this.callBase();\r\n                    this.editingChanged.fire(this.hasChanges())\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    var exportButton = this._getExportToolbarButton();\r\n                    if (exportButton) {\r\n                        items.push(exportButton);\r\n                        this._correctItemsPosition(items)\r\n                    }\r\n                    return items\r\n                },\r\n                _getExportToolbarButton: function() {\r\n                    var items = this._getExportToolbarItems();\r\n                    if (0 === items.length) {\r\n                        return null\r\n                    }\r\n                    var toolbarButtonOptions = {\r\n                        name: DATAGRID_EXPORT_TOOLBAR_BUTTON_NAME,\r\n                        location: \"after\",\r\n                        locateInMenu: \"auto\",\r\n                        sortIndex: 30,\r\n                        options: {\r\n                            items: items\r\n                        }\r\n                    };\r\n                    if (1 === items.length) {\r\n                        var widgetOptions = _extends({}, items[0], {\r\n                            hint: items[0].text,\r\n                            elementAttr: {\r\n                                class: DATAGRID_EXPORT_BUTTON_CLASS\r\n                            }\r\n                        });\r\n                        toolbarButtonOptions.widget = \"dxButton\";\r\n                        toolbarButtonOptions.showText = \"inMenu\";\r\n                        toolbarButtonOptions.options = widgetOptions\r\n                    } else {\r\n                        var _widgetOptions = {\r\n                            icon: DATAGRID_EXPORT_ICON,\r\n                            displayExpr: \"text\",\r\n                            items: items,\r\n                            hint: this.option(\"export.texts.exportTo\"),\r\n                            elementAttr: {\r\n                                class: DATAGRID_EXPORT_BUTTON_CLASS\r\n                            },\r\n                            dropDownOptions: {\r\n                                wrapperAttr: {\r\n                                    class: DATAGRID_EXPORT_MENU_CLASS\r\n                                },\r\n                                width: \"auto\"\r\n                            }\r\n                        };\r\n                        toolbarButtonOptions.options = _widgetOptions;\r\n                        toolbarButtonOptions.widget = \"dxDropDownButton\";\r\n                        toolbarButtonOptions.menuItemTemplate = (_data, _index, container) => {\r\n                            this._createComponent($(container), List, {\r\n                                items: items\r\n                            })\r\n                        }\r\n                    }\r\n                    return toolbarButtonOptions\r\n                },\r\n                _getExportToolbarItems: function() {\r\n                    var exportOptions = this.option(\"export\");\r\n                    var texts = this.option(\"export.texts\");\r\n                    var items = [];\r\n                    if (exportOptions.enabled) {\r\n                        items.push({\r\n                            text: texts.exportAll,\r\n                            icon: DATAGRID_EXPORT_EXCEL_ICON,\r\n                            onClick: () => {\r\n                                this._exportController.exportToExcel()\r\n                            }\r\n                        });\r\n                        if (exportOptions.allowExportSelectedData) {\r\n                            items.push({\r\n                                text: texts.exportSelectedRows,\r\n                                icon: DATAGRID_EXPORT_SELECTED_ICON,\r\n                                onClick: () => {\r\n                                    this._exportController.exportToExcel(true)\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                    return items\r\n                },\r\n                _correctItemsPosition: function(items) {\r\n                    items.sort((function(itemA, itemB) {\r\n                        return itemA.sortIndex - itemB.sortIndex\r\n                    }))\r\n                },\r\n                _isExportButtonVisible: function() {\r\n                    return this.option(\"export.enabled\")\r\n                },\r\n                _getButtonOptions: function(allowExportSelected) {\r\n                    var that = this;\r\n                    var texts = that.option(\"export.texts\");\r\n                    var options;\r\n                    if (allowExportSelected) {\r\n                        options = {\r\n                            hint: texts.exportTo,\r\n                            icon: DATAGRID_EXPORT_ICON\r\n                        }\r\n                    } else {\r\n                        options = {\r\n                            hint: texts.exportAll,\r\n                            icon: DATAGRID_EXPORT_EXCEL_BUTTON_ICON,\r\n                            onClick: function() {\r\n                                that._exportController.exportToExcel()\r\n                            }\r\n                        }\r\n                    }\r\n                    return options\r\n                },\r\n                optionChanged: function(args) {\r\n                    this.callBase(args);\r\n                    if (\"export\" === args.name) {\r\n                        args.handled = true;\r\n                        this._invalidate()\r\n                    }\r\n                },\r\n                init: function() {\r\n                    var that = this;\r\n                    this.callBase();\r\n                    this._exportController = this.getController(\"export\");\r\n                    this._editingController = this.getController(\"editing\");\r\n                    this._editingController.editingChanged.add((function(hasChanges) {\r\n                        that.setToolbarItemDisabled(\"exportButton\", hasChanges)\r\n                    }))\r\n                },\r\n                isVisible: function() {\r\n                    return this.callBase() || this._isExportButtonVisible()\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.focus.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport core from \"./ui.grid_core.modules\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isBoolean\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nvar ROW_FOCUSED_CLASS = \"dx-row-focused\";\r\nvar FOCUSED_ROW_SELECTOR = \".dx-row.\" + ROW_FOCUSED_CLASS;\r\nvar TABLE_POSTFIX_CLASS = \"table\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FocusController = core.ViewController.inherit({\r\n    init: function() {\r\n        this._dataController = this.getController(\"data\");\r\n        this._keyboardController = this.getController(\"keyboardNavigation\");\r\n        this.component._optionsByReference.focusedRowKey = true\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"focusedRowIndex\" === args.name) {\r\n            var focusedRowKey = this.option(\"focusedRowKey\");\r\n            this._focusRowByIndex(args.value);\r\n            this._triggerFocusedRowChangedIfNeed(focusedRowKey, args.value);\r\n            args.handled = true\r\n        } else if (\"focusedRowKey\" === args.name) {\r\n            args.handled = true;\r\n            if (Array.isArray(args.value) && JSON.stringify(args.value) === JSON.stringify(args.previousValue)) {\r\n                return\r\n            }\r\n            var focusedRowIndex = this.option(\"focusedRowIndex\");\r\n            this._focusRowByKey(args.value);\r\n            this._triggerFocusedRowChangedIfNeed(args.value, focusedRowIndex)\r\n        } else if (\"focusedColumnIndex\" === args.name) {\r\n            args.handled = true\r\n        } else if (\"focusedRowEnabled\" === args.name) {\r\n            args.handled = true\r\n        } else if (\"autoNavigateToFocusedRow\" === args.name) {\r\n            args.handled = true\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    },\r\n    _triggerFocusedRowChangedIfNeed: function(focusedRowKey, focusedRowIndex) {\r\n        var focusedRowIndexByKey = this.getFocusedRowIndexByKey(focusedRowKey);\r\n        if (focusedRowIndex === focusedRowIndexByKey) {\r\n            var rowIndex = this._dataController.getRowIndexByKey(focusedRowKey);\r\n            if (rowIndex >= 0) {\r\n                var $rowElement = $(this.getView(\"rowsView\").getRowElement(rowIndex));\r\n                this.getController(\"keyboardNavigation\")._fireFocusedRowChanged($rowElement, focusedRowIndex)\r\n            }\r\n        }\r\n    },\r\n    isAutoNavigateToFocusedRow: function() {\r\n        return \"infinite\" !== this.option(\"scrolling.mode\") && this.option(\"autoNavigateToFocusedRow\")\r\n    },\r\n    _focusRowByIndex: function(index, operationTypes) {\r\n        if (!this.option(\"focusedRowEnabled\")) {\r\n            return\r\n        }\r\n        index = void 0 !== index ? index : this.option(\"focusedRowIndex\");\r\n        if (index < 0) {\r\n            if (this.isAutoNavigateToFocusedRow()) {\r\n                this._resetFocusedRow()\r\n            }\r\n        } else {\r\n            this._focusRowByIndexCore(index, operationTypes)\r\n        }\r\n    },\r\n    _focusRowByIndexCore: function(index, operationTypes) {\r\n        var dataController = this.getController(\"data\");\r\n        var pageSize = dataController.pageSize();\r\n        var setKeyByIndex = () => {\r\n            if (this._isValidFocusedRowIndex(index)) {\r\n                var rowIndex = index - dataController.getRowIndexOffset(true);\r\n                if (!operationTypes || operationTypes.paging && !operationTypes.filtering) {\r\n                    var lastItemIndex = dataController._getLastItemIndex();\r\n                    rowIndex = Math.min(rowIndex, lastItemIndex)\r\n                }\r\n                var focusedRowKey = dataController.getKeyByRowIndex(rowIndex, true);\r\n                if (isDefined(focusedRowKey) && !this.isRowFocused(focusedRowKey)) {\r\n                    this.option(\"focusedRowKey\", focusedRowKey)\r\n                }\r\n            }\r\n        };\r\n        if (pageSize >= 0) {\r\n            if (!this._isLocalRowIndex(index)) {\r\n                var pageIndex = Math.floor(index / dataController.pageSize());\r\n                when(dataController.pageIndex(pageIndex), dataController.waitReady()).done(() => {\r\n                    setKeyByIndex()\r\n                })\r\n            } else {\r\n                setKeyByIndex()\r\n            }\r\n        }\r\n    },\r\n    _isLocalRowIndex(index) {\r\n        var dataController = this.getController(\"data\");\r\n        var isVirtualScrolling = this.getController(\"keyboardNavigation\")._isVirtualScrolling();\r\n        if (isVirtualScrolling) {\r\n            var pageIndex = Math.floor(index / dataController.pageSize());\r\n            var virtualItems = dataController.virtualItemsCount();\r\n            var virtualItemsBegin = virtualItems ? virtualItems.begin : -1;\r\n            var visibleRowsCount = dataController.getVisibleRows().length + dataController.getRowIndexOffset();\r\n            var visiblePagesCount = Math.ceil(visibleRowsCount / dataController.pageSize());\r\n            return virtualItemsBegin <= index && visiblePagesCount > pageIndex\r\n        }\r\n        return true\r\n    },\r\n    _setFocusedRowKeyByIndex: function(index) {\r\n        var dataController = this.getController(\"data\");\r\n        if (this._isValidFocusedRowIndex(index)) {\r\n            var rowIndex = Math.min(index - dataController.getRowIndexOffset(), dataController.items().length - 1);\r\n            var focusedRowKey = dataController.getKeyByRowIndex(rowIndex);\r\n            if (isDefined(focusedRowKey) && !this.isRowFocused(focusedRowKey)) {\r\n                this.option(\"focusedRowKey\", focusedRowKey)\r\n            }\r\n        }\r\n    },\r\n    _focusRowByKey: function(key) {\r\n        if (!isDefined(key)) {\r\n            this._resetFocusedRow()\r\n        } else {\r\n            this._navigateToRow(key, true)\r\n        }\r\n    },\r\n    _resetFocusedRow: function() {\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        var isFocusedRowKeyDefined = isDefined(focusedRowKey);\r\n        if (!isFocusedRowKeyDefined && this.option(\"focusedRowIndex\") < 0) {\r\n            return\r\n        }\r\n        var keyboardController = this.getController(\"keyboardNavigation\");\r\n        if (isFocusedRowKeyDefined) {\r\n            this.option(\"focusedRowKey\", null)\r\n        }\r\n        keyboardController.setFocusedRowIndex(-1);\r\n        this.option(\"focusedRowIndex\", -1);\r\n        this.getController(\"data\").updateItems({\r\n            changeType: \"updateFocusedRow\",\r\n            focusedRowKey: null\r\n        });\r\n        keyboardController._fireFocusedRowChanged(void 0, -1)\r\n    },\r\n    _isValidFocusedRowIndex: function(rowIndex) {\r\n        var dataController = this.getController(\"data\");\r\n        var row = dataController.getVisibleRows()[rowIndex];\r\n        return !row || \"data\" === row.rowType || \"group\" === row.rowType\r\n    },\r\n    publicMethods: function() {\r\n        return [\"navigateToRow\", \"isRowFocused\"]\r\n    },\r\n    navigateToRow: function(key) {\r\n        if (!this.isAutoNavigateToFocusedRow()) {\r\n            this.option(\"focusedRowIndex\", -1)\r\n        }\r\n        return this._navigateToRow(key)\r\n    },\r\n    _navigateToRow: function(key, needFocusRow) {\r\n        var that = this;\r\n        var dataController = that.getController(\"data\");\r\n        var isAutoNavigate = that.isAutoNavigateToFocusedRow();\r\n        var d = new Deferred;\r\n        if (void 0 === key || !dataController.dataSource()) {\r\n            return d.reject().promise()\r\n        }\r\n        var rowIndexByKey = that.getFocusedRowIndexByKey(key);\r\n        if (!isAutoNavigate && needFocusRow || rowIndexByKey >= 0) {\r\n            that._navigateTo(key, d, needFocusRow)\r\n        } else {\r\n            dataController.getPageIndexByKey(key).done((function(pageIndex) {\r\n                if (pageIndex < 0) {\r\n                    d.resolve(-1);\r\n                    return\r\n                }\r\n                if (pageIndex === dataController.pageIndex()) {\r\n                    dataController.reload().done((function() {\r\n                        if (that.isRowFocused(key) && dataController.getRowIndexByKey(key) >= 0) {\r\n                            d.resolve(that.getFocusedRowIndexByKey(key))\r\n                        } else {\r\n                            that._navigateTo(key, d, needFocusRow)\r\n                        }\r\n                    })).fail(d.reject)\r\n                } else {\r\n                    dataController.pageIndex(pageIndex).done((function() {\r\n                        that._navigateTo(key, d, needFocusRow)\r\n                    })).fail(d.reject)\r\n                }\r\n            })).fail(d.reject)\r\n        }\r\n        return d.promise()\r\n    },\r\n    _navigateTo: function(key, deferred, needFocusRow) {\r\n        var visibleRowIndex = this.getController(\"data\").getRowIndexByKey(key);\r\n        var isVirtualRowRenderingMode = gridCoreUtils.isVirtualRowRendering(this);\r\n        var isAutoNavigate = this.isAutoNavigateToFocusedRow();\r\n        if (isAutoNavigate && isVirtualRowRenderingMode && visibleRowIndex < 0) {\r\n            this._navigateToVirtualRow(key, deferred, needFocusRow)\r\n        } else {\r\n            this._navigateToVisibleRow(key, deferred, needFocusRow)\r\n        }\r\n    },\r\n    _navigateToVisibleRow: function(key, deferred, needFocusRow) {\r\n        if (needFocusRow) {\r\n            this._triggerUpdateFocusedRow(key, deferred)\r\n        } else {\r\n            var focusedRowIndex = this.getFocusedRowIndexByKey(key);\r\n            this.getView(\"rowsView\").scrollToRowElement(key, deferred).done((function() {\r\n                deferred.resolve(focusedRowIndex)\r\n            }))\r\n        }\r\n    },\r\n    _navigateToVirtualRow: function(key, deferred, needFocusRow) {\r\n        var that = this;\r\n        var dataController = this.getController(\"data\");\r\n        var rowsScrollController = dataController._rowsScrollController;\r\n        var rowIndex = gridCoreUtils.getIndexByKey(key, dataController.items(true));\r\n        var scrollable = that.getView(\"rowsView\").getScrollable();\r\n        if (rowsScrollController && scrollable && rowIndex >= 0) {\r\n            var focusedRowIndex = rowIndex + dataController.getRowIndexOffset(true);\r\n            var offset = rowsScrollController.getItemOffset(focusedRowIndex);\r\n            that.component.on(\"contentReady\", (function triggerUpdateFocusedRow() {\r\n                that.component.off(\"contentReady\", triggerUpdateFocusedRow);\r\n                if (needFocusRow) {\r\n                    that._triggerUpdateFocusedRow(key, deferred)\r\n                } else {\r\n                    deferred.resolve(focusedRowIndex)\r\n                }\r\n            }));\r\n            this.getView(\"rowsView\").scrollTopPosition(offset)\r\n        } else {\r\n            deferred.resolve(-1)\r\n        }\r\n    },\r\n    _triggerUpdateFocusedRow: function(key, deferred) {\r\n        var dataController = this.getController(\"data\");\r\n        var focusedRowIndex = this.getFocusedRowIndexByKey(key);\r\n        if (this._isValidFocusedRowIndex(focusedRowIndex)) {\r\n            var d;\r\n            if (this.option(\"focusedRowEnabled\")) {\r\n                dataController.updateItems({\r\n                    changeType: \"updateFocusedRow\",\r\n                    focusedRowKey: key\r\n                })\r\n            } else {\r\n                d = this.getView(\"rowsView\").scrollToRowElement(key)\r\n            }\r\n            when(d).done(() => {\r\n                this.getController(\"keyboardNavigation\").setFocusedRowIndex(focusedRowIndex);\r\n                deferred && deferred.resolve(focusedRowIndex)\r\n            })\r\n        } else {\r\n            deferred && deferred.resolve(-1)\r\n        }\r\n    },\r\n    getFocusedRowIndexByKey: function(key) {\r\n        var dataController = this.getController(\"data\");\r\n        var loadedRowIndex = dataController.getRowIndexByKey(key, true);\r\n        return loadedRowIndex >= 0 ? loadedRowIndex + dataController.getRowIndexOffset(true) : -1\r\n    },\r\n    _focusRowByKeyOrIndex: function() {\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        var currentFocusedRowIndex = this.option(\"focusedRowIndex\");\r\n        var keyboardController = this.getController(\"keyboardNavigation\");\r\n        var dataController = this.getController(\"data\");\r\n        if (isDefined(focusedRowKey)) {\r\n            var visibleRowIndex = dataController.getRowIndexByKey(focusedRowKey);\r\n            if (visibleRowIndex >= 0) {\r\n                if (keyboardController._isVirtualScrolling()) {\r\n                    currentFocusedRowIndex = visibleRowIndex + dataController.getRowIndexOffset()\r\n                }\r\n                keyboardController.setFocusedRowIndex(currentFocusedRowIndex);\r\n                this._triggerUpdateFocusedRow(focusedRowKey)\r\n            } else {\r\n                this._navigateToRow(focusedRowKey, true).done(focusedRowIndex => {\r\n                    if (currentFocusedRowIndex >= 0 && focusedRowIndex < 0) {\r\n                        this._focusRowByIndex()\r\n                    } else if (currentFocusedRowIndex < 0 && focusedRowIndex >= 0) {\r\n                        keyboardController.setFocusedRowIndex(focusedRowIndex)\r\n                    }\r\n                })\r\n            }\r\n        } else if (currentFocusedRowIndex >= 0) {\r\n            this.getController(\"focus\")._focusRowByIndex(currentFocusedRowIndex)\r\n        }\r\n    },\r\n    isRowFocused: function(key) {\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        if (isDefined(focusedRowKey)) {\r\n            return equalByValue(key, this.option(\"focusedRowKey\"))\r\n        }\r\n    },\r\n    updateFocusedRow: function(change) {\r\n        var that = this;\r\n        var focusedRowIndex = that._dataController.getRowIndexByKey(change.focusedRowKey);\r\n        var rowsView = that.getView(\"rowsView\");\r\n        var $tableElement;\r\n        each(rowsView.getTableElements(), (function(index, element) {\r\n            var isMainTable = 0 === index;\r\n            $tableElement = $(element);\r\n            that._clearPreviousFocusedRow($tableElement, focusedRowIndex);\r\n            that._prepareFocusedRow({\r\n                changedItem: that._dataController.getVisibleRows()[focusedRowIndex],\r\n                $tableElement: $tableElement,\r\n                focusedRowIndex: focusedRowIndex,\r\n                isMainTable: isMainTable\r\n            })\r\n        }))\r\n    },\r\n    _clearPreviousFocusedRow: function($tableElement, focusedRowIndex) {\r\n        var $prevRowFocusedElement = $tableElement.find(FOCUSED_ROW_SELECTOR).filter((_, focusedRow) => {\r\n            var $focusedRowTable = $(focusedRow).closest(\".\".concat(this.addWidgetPrefix(TABLE_POSTFIX_CLASS)));\r\n            return $tableElement.is($focusedRowTable)\r\n        });\r\n        $prevRowFocusedElement.removeClass(ROW_FOCUSED_CLASS).removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabindex\");\r\n        $prevRowFocusedElement.children(\"td\").removeAttr(\"tabindex\");\r\n        if (0 !== focusedRowIndex) {\r\n            var $firstRow = $(this.getView(\"rowsView\").getRowElement(0));\r\n            $firstRow.removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabIndex\")\r\n        }\r\n    },\r\n    _prepareFocusedRow: function(options) {\r\n        var $row;\r\n        var changedItem = options.changedItem;\r\n        if (changedItem && (\"data\" === changedItem.rowType || \"group\" === changedItem.rowType)) {\r\n            var focusedRowIndex = options.focusedRowIndex;\r\n            var $tableElement = options.$tableElement;\r\n            var isMainTable = options.isMainTable;\r\n            var tabIndex = this.option(\"tabindex\") || 0;\r\n            var rowsView = this.getView(\"rowsView\");\r\n            $row = $(rowsView._getRowElements($tableElement).eq(focusedRowIndex));\r\n            $row.addClass(ROW_FOCUSED_CLASS).attr(\"tabindex\", tabIndex);\r\n            if (isMainTable) {\r\n                rowsView.scrollToElementVertically($row)\r\n            }\r\n        }\r\n        return $row\r\n    }\r\n});\r\nexport var focusModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            focusedRowEnabled: false,\r\n            autoNavigateToFocusedRow: true,\r\n            focusedRowKey: null,\r\n            focusedRowIndex: -1,\r\n            focusedColumnIndex: -1\r\n        }\r\n    },\r\n    controllers: {\r\n        focus: FocusController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            keyboardNavigation: {\r\n                init: function() {\r\n                    var rowIndex = this.option(\"focusedRowIndex\");\r\n                    var columnIndex = this.option(\"focusedColumnIndex\");\r\n                    this.createAction(\"onFocusedRowChanging\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.createAction(\"onFocusedRowChanged\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.createAction(\"onFocusedCellChanging\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.createAction(\"onFocusedCellChanged\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.callBase();\r\n                    this.setRowFocusType();\r\n                    this._focusedCellPosition = {};\r\n                    if (isDefined(rowIndex)) {\r\n                        this._focusedCellPosition.rowIndex = this.option(\"focusedRowIndex\")\r\n                    }\r\n                    if (isDefined(columnIndex)) {\r\n                        this._focusedCellPosition.columnIndex = this.option(\"focusedColumnIndex\")\r\n                    }\r\n                },\r\n                setFocusedRowIndex: function(rowIndex) {\r\n                    var dataController = this.getController(\"data\");\r\n                    this.callBase(rowIndex);\r\n                    var visibleRowIndex = rowIndex - dataController.getRowIndexOffset();\r\n                    var visibleRow = dataController.getVisibleRows()[visibleRowIndex];\r\n                    if (!visibleRow || !visibleRow.isNewRow) {\r\n                        this.option(\"focusedRowIndex\", rowIndex)\r\n                    }\r\n                },\r\n                setFocusedColumnIndex: function(columnIndex) {\r\n                    this.callBase(columnIndex);\r\n                    this.option(\"focusedColumnIndex\", columnIndex)\r\n                },\r\n                _escapeKeyHandler: function(eventArgs, isEditing) {\r\n                    if (isEditing || !this.option(\"focusedRowEnabled\")) {\r\n                        this.callBase(eventArgs, isEditing);\r\n                        return\r\n                    }\r\n                    if (this.isCellFocusType()) {\r\n                        this.setRowFocusType();\r\n                        this._focus(this._getCellElementFromTarget(eventArgs.originalEvent.target), true)\r\n                    }\r\n                },\r\n                _updateFocusedCellPosition: function($cell, direction) {\r\n                    var prevRowIndex = this.option(\"focusedRowIndex\");\r\n                    var prevColumnIndex = this.option(\"focusedColumnIndex\");\r\n                    var position = this.callBase($cell, direction);\r\n                    if (position && position.columnIndex >= 0) {\r\n                        this._fireFocusedCellChanged($cell, prevColumnIndex, prevRowIndex)\r\n                    }\r\n                }\r\n            },\r\n            editorFactory: {\r\n                renderFocusOverlay: function($element, hideBorder) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var focusedRowEnabled = this.option(\"focusedRowEnabled\");\r\n                    var editingController = this.getController(\"editing\");\r\n                    var $cell;\r\n                    if (!focusedRowEnabled || !(null !== keyboardController && void 0 !== keyboardController && keyboardController.isRowFocusType()) || editingController.isEditing()) {\r\n                        this.callBase($element, hideBorder)\r\n                    } else if (focusedRowEnabled) {\r\n                        var isRowElement = \"row\" === keyboardController._getElementType($element);\r\n                        if (isRowElement && !$element.hasClass(ROW_FOCUSED_CLASS)) {\r\n                            $cell = keyboardController.getFirstValidCellInRow($element);\r\n                            keyboardController.focus($cell)\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            columns: {\r\n                getSortDataSourceParameters: function(_, sortByKey) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var dataController = this.getController(\"data\");\r\n                    var dataSource = dataController._dataSource;\r\n                    var store = dataController.store();\r\n                    var key = store && store.key();\r\n                    var remoteOperations = dataSource && dataSource.remoteOperations() || {};\r\n                    var isLocalOperations = Object.keys(remoteOperations).every(operationName => !remoteOperations[operationName]);\r\n                    if (key && (this.option(\"focusedRowEnabled\") && false !== this.getController(\"focus\").isAutoNavigateToFocusedRow() || sortByKey)) {\r\n                        key = Array.isArray(key) ? key : [key];\r\n                        var notSortedKeys = key.filter(key => !this.columnOption(key, \"sortOrder\"));\r\n                        if (notSortedKeys.length) {\r\n                            result = result || [];\r\n                            if (isLocalOperations) {\r\n                                result.push({\r\n                                    selector: dataSource.getDataIndexGetter(),\r\n                                    desc: false\r\n                                })\r\n                            } else {\r\n                                notSortedKeys.forEach(notSortedKey => result.push({\r\n                                    selector: notSortedKey,\r\n                                    desc: false\r\n                                }))\r\n                            }\r\n                        }\r\n                    }\r\n                    return result\r\n                }\r\n            },\r\n            data: {\r\n                _applyChange: function(change) {\r\n                    if (change && \"updateFocusedRow\" === change.changeType) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _fireChanged: function(e) {\r\n                    this.callBase(e);\r\n                    if (this.option(\"focusedRowEnabled\") && this._dataSource) {\r\n                        var isPartialUpdate = \"update\" === e.changeType && e.repaintChangesOnly;\r\n                        var isPartialUpdateWithDeleting = isPartialUpdate && e.changeTypes && e.changeTypes.indexOf(\"remove\") >= 0;\r\n                        if (\"refresh\" === e.changeType && e.items.length || isPartialUpdateWithDeleting) {\r\n                            this._updatePageIndexes();\r\n                            this.processUpdateFocusedRow(e)\r\n                        } else if (\"append\" === e.changeType || \"prepend\" === e.changeType) {\r\n                            this._updatePageIndexes()\r\n                        } else if (\"update\" === e.changeType && e.repaintChangesOnly) {\r\n                            this.processUpdateFocusedRow(e)\r\n                        }\r\n                    }\r\n                },\r\n                _updatePageIndexes: function() {\r\n                    var prevRenderingPageIndex = this._lastRenderingPageIndex || 0;\r\n                    var renderingPageIndex = this._rowsScrollController ? this._rowsScrollController.pageIndex() : 0;\r\n                    this._lastRenderingPageIndex = renderingPageIndex;\r\n                    this._isPagingByRendering = renderingPageIndex !== prevRenderingPageIndex\r\n                },\r\n                isPagingByRendering: function() {\r\n                    return this._isPagingByRendering\r\n                },\r\n                processUpdateFocusedRow: function(e) {\r\n                    var operationTypes = e.operationTypes || {};\r\n                    var focusController = this.getController(\"focus\");\r\n                    var {\r\n                        reload: reload,\r\n                        fullReload: fullReload\r\n                    } = operationTypes;\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var isVirtualScrolling = keyboardController._isVirtualScrolling();\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var isAutoNavigate = focusController.isAutoNavigateToFocusedRow();\r\n                    if (reload && !fullReload && isDefined(focusedRowKey)) {\r\n                        focusController._navigateToRow(focusedRowKey, true).done((function(focusedRowIndex) {\r\n                            if (focusedRowIndex < 0) {\r\n                                focusController._focusRowByIndex(void 0, operationTypes)\r\n                            }\r\n                        }))\r\n                    } else if (operationTypes.paging && !isVirtualScrolling) {\r\n                        if (isAutoNavigate) {\r\n                            var rowIndexByKey = this.getRowIndexByKey(focusedRowKey);\r\n                            var isValidRowIndexByKey = rowIndexByKey >= 0;\r\n                            var focusedRowIndex = this.option(\"focusedRowIndex\");\r\n                            var needFocusRowByIndex = focusedRowIndex >= 0 && (focusedRowIndex === rowIndexByKey || !isValidRowIndexByKey);\r\n                            if (needFocusRowByIndex) {\r\n                                focusController._focusRowByIndex(void 0, operationTypes)\r\n                            }\r\n                        } else if (this.getRowIndexByKey(focusedRowKey) < 0) {\r\n                            this.option(\"focusedRowIndex\", -1)\r\n                        }\r\n                    } else if (operationTypes.fullReload) {\r\n                        focusController._focusRowByKeyOrIndex()\r\n                    }\r\n                },\r\n                getPageIndexByKey: function(key) {\r\n                    var that = this;\r\n                    var d = new Deferred;\r\n                    that.getGlobalRowIndexByKey(key).done((function(globalIndex) {\r\n                        d.resolve(globalIndex >= 0 ? Math.floor(globalIndex / that.pageSize()) : -1)\r\n                    })).fail(d.reject);\r\n                    return d.promise()\r\n                },\r\n                getGlobalRowIndexByKey: function(key) {\r\n                    if (this._dataSource.group()) {\r\n                        return this._calculateGlobalRowIndexByGroupedData(key)\r\n                    }\r\n                    return this._calculateGlobalRowIndexByFlatData(key)\r\n                },\r\n                _calculateGlobalRowIndexByFlatData: function(key, groupFilter, useGroup) {\r\n                    var that = this;\r\n                    var deferred = new Deferred;\r\n                    var dataSource = that._dataSource;\r\n                    if (Array.isArray(key)) {\r\n                        return deferred.resolve(-1).promise()\r\n                    }\r\n                    var filter = that._generateFilterByKey(key);\r\n                    dataSource.load({\r\n                        filter: that._concatWithCombinedFilter(filter),\r\n                        skip: 0,\r\n                        take: 1\r\n                    }).done((function(data) {\r\n                        if (data.length > 0) {\r\n                            filter = that._generateOperationFilterByKey(key, data[0], useGroup);\r\n                            dataSource.load({\r\n                                filter: that._concatWithCombinedFilter(filter, groupFilter),\r\n                                skip: 0,\r\n                                take: 1,\r\n                                requireTotalCount: true\r\n                            }).done((function(_, extra) {\r\n                                deferred.resolve(extra.totalCount)\r\n                            }))\r\n                        } else {\r\n                            deferred.resolve(-1)\r\n                        }\r\n                    }));\r\n                    return deferred.promise()\r\n                },\r\n                _concatWithCombinedFilter: function(filter, groupFilter) {\r\n                    var combinedFilter = this.getCombinedFilter();\r\n                    return gridCoreUtils.combineFilters([filter, combinedFilter, groupFilter])\r\n                },\r\n                _generateBooleanFilter: function(selector, value, sortInfo) {\r\n                    var result;\r\n                    if (false === value) {\r\n                        result = [selector, \"=\", sortInfo.desc ? true : null]\r\n                    } else if (true === value ? !sortInfo.desc : sortInfo.desc) {\r\n                        result = [selector, \"<>\", value]\r\n                    }\r\n                    return result\r\n                },\r\n                _generateOperationFilterByKey: function(key, rowData, useGroup) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var filter = that._generateFilterByKey(key, \"<\");\r\n                    var sort = that._columnsController.getSortDataSourceParameters(!dataSource.remoteOperations().filtering, true);\r\n                    if (useGroup) {\r\n                        var group = that._columnsController.getGroupDataSourceParameters(!dataSource.remoteOperations().filtering);\r\n                        if (group) {\r\n                            sort = sort ? group.concat(sort) : group\r\n                        }\r\n                    }\r\n                    if (sort) {\r\n                        sort.slice().reverse().forEach((function(sortInfo) {\r\n                            var selector = sortInfo.selector;\r\n                            var getter;\r\n                            if (\"function\" === typeof selector) {\r\n                                getter = selector\r\n                            } else {\r\n                                getter = that._columnsController.columnOption(selector, \"selector\")\r\n                            }\r\n                            var value = getter ? getter(rowData) : rowData[selector];\r\n                            filter = [\r\n                                [selector, \"=\", value], \"and\", filter\r\n                            ];\r\n                            if (null === value || isBoolean(value)) {\r\n                                var booleanFilter = that._generateBooleanFilter(selector, value, sortInfo);\r\n                                if (booleanFilter) {\r\n                                    filter = [booleanFilter, \"or\", filter]\r\n                                }\r\n                            } else {\r\n                                var filterOperation = sortInfo.desc ? \">\" : \"<\";\r\n                                var sortFilter = [selector, filterOperation, value];\r\n                                if (!sortInfo.desc) {\r\n                                    sortFilter = [sortFilter, \"or\", [selector, \"=\", null]]\r\n                                }\r\n                                filter = [sortFilter, \"or\", filter]\r\n                            }\r\n                        }))\r\n                    }\r\n                    return filter\r\n                },\r\n                _generateFilterByKey: function(key, operation) {\r\n                    var dataSourceKey = this._dataSource.key();\r\n                    var filter = [];\r\n                    if (!operation) {\r\n                        operation = \"=\"\r\n                    }\r\n                    if (Array.isArray(dataSourceKey)) {\r\n                        for (var i = 0; i < dataSourceKey.length; ++i) {\r\n                            var keyPart = key[dataSourceKey[i]];\r\n                            if (keyPart) {\r\n                                if (filter.length > 0) {\r\n                                    filter.push(\"and\")\r\n                                }\r\n                                filter.push([dataSourceKey[i], operation, keyPart])\r\n                            }\r\n                        }\r\n                    } else {\r\n                        filter = [dataSourceKey, operation, key]\r\n                    }\r\n                    return filter\r\n                },\r\n                _getLastItemIndex: function() {\r\n                    return this.items(true).length - 1\r\n                }\r\n            },\r\n            editing: {\r\n                _deleteRowCore: function(rowIndex) {\r\n                    var deferred = this.callBase.apply(this, arguments);\r\n                    var dataController = this.getController(\"data\");\r\n                    var rowKey = dataController.getKeyByRowIndex(rowIndex);\r\n                    deferred.done(() => {\r\n                        var rowIndex = dataController.getRowIndexByKey(rowKey);\r\n                        var visibleRows = dataController.getVisibleRows();\r\n                        if (-1 === rowIndex && !visibleRows.length) {\r\n                            this.getController(\"focus\")._resetFocusedRow()\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (this.option(\"focusedRowEnabled\") && row) {\r\n                        if (this.getController(\"focus\").isRowFocused(row.key)) {\r\n                            $row.addClass(ROW_FOCUSED_CLASS)\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _checkRowKeys: function(options) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.option(\"focusedRowEnabled\") && this.option(\"dataSource\")) {\r\n                        var store = this._dataController.store();\r\n                        if (store && !store.key()) {\r\n                            this._dataController.fireError(\"E1042\", \"Row focusing\")\r\n                        }\r\n                    }\r\n                },\r\n                _update: function(change) {\r\n                    if (\"updateFocusedRow\" === change.changeType) {\r\n                        if (this.option(\"focusedRowEnabled\")) {\r\n                            this.getController(\"focus\").updateFocusedRow(change)\r\n                        }\r\n                    } else {\r\n                        this.callBase(change)\r\n                    }\r\n                },\r\n                updateFocusElementTabIndex: function($cellElements, preventScroll) {\r\n                    var rowIndex = this.getController(\"keyboardNavigation\").getVisibleRowIndex();\r\n                    var row = this._dataController.getVisibleRows()[rowIndex];\r\n                    if (this.option(\"focusedRowEnabled\") && !(null !== row && void 0 !== row && row.isNewRow)) {\r\n                        this._setFocusedRowElementTabIndex(preventScroll)\r\n                    } else {\r\n                        this.callBase($cellElements)\r\n                    }\r\n                },\r\n                _setFocusedRowElementTabIndex: function(preventScroll) {\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var tabIndex = this.option(\"tabIndex\") || 0;\r\n                    var dataController = this._dataController;\r\n                    var columnsController = this._columnsController;\r\n                    var rowIndex = dataController.getRowIndexByKey(focusedRowKey);\r\n                    var columnIndex = this.option(\"focusedColumnIndex\");\r\n                    var $row = this._findRowElementForTabIndex();\r\n                    if (!isDefined(this._scrollToFocusOnResize)) {\r\n                        this._scrollToFocusOnResize = () => {\r\n                            this.scrollToElementVertically(this._findRowElementForTabIndex());\r\n                            this.resizeCompleted.remove(this._scrollToFocusOnResize)\r\n                        }\r\n                    }\r\n                    $row.attr(\"tabIndex\", tabIndex);\r\n                    if (rowIndex >= 0 && !preventScroll) {\r\n                        if (columnIndex < 0) {\r\n                            columnIndex = 0\r\n                        }\r\n                        rowIndex += dataController.getRowIndexOffset();\r\n                        columnIndex += columnsController.getColumnIndexOffset();\r\n                        this.getController(\"keyboardNavigation\").setFocusedCellPosition(rowIndex, columnIndex);\r\n                        if (this.getController(\"focus\").isAutoNavigateToFocusedRow()) {\r\n                            var dataSource = dataController.dataSource();\r\n                            var operationTypes = dataSource && dataSource.operationTypes();\r\n                            if (operationTypes && !operationTypes.paging && !dataController.isPagingByRendering()) {\r\n                                this.resizeCompleted.remove(this._scrollToFocusOnResize);\r\n                                this.resizeCompleted.add(this._scrollToFocusOnResize)\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _findRowElementForTabIndex: function() {\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var rowIndex = this._dataController.getRowIndexByKey(focusedRowKey);\r\n                    return $(this.getRowElement(rowIndex >= 0 ? rowIndex : 0))\r\n                },\r\n                scrollToRowElement: function(key) {\r\n                    var rowIndex = this.getController(\"data\").getRowIndexByKey(key);\r\n                    var $row = $(this.getRow(rowIndex));\r\n                    return this.scrollToElementVertically($row)\r\n                },\r\n                scrollToElementVertically: function($row) {\r\n                    var scrollable = this.getScrollable();\r\n                    if (scrollable && $row.length) {\r\n                        var position = scrollable.getScrollElementPosition($row, \"vertical\");\r\n                        return this.scrollTopPosition(position)\r\n                    }\r\n                    return (new Deferred).resolve()\r\n                },\r\n                scrollTopPosition: function(scrollTop) {\r\n                    var d = new Deferred;\r\n                    var scrollable = this.getScrollable();\r\n                    if (scrollable) {\r\n                        var currentScrollTop = scrollable.scrollTop();\r\n                        var scrollHandler = () => {\r\n                            scrollable.off(\"scroll\", scrollHandler);\r\n                            d.resolve()\r\n                        };\r\n                        if (scrollTop !== currentScrollTop) {\r\n                            scrollable.on(\"scroll\", scrollHandler);\r\n                            this._dataController.resetFilterApplying();\r\n                            scrollable.scrollTo({\r\n                                top: scrollTop\r\n                            });\r\n                            return d.promise()\r\n                        }\r\n                    }\r\n                    return d.resolve()\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.focus.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    focusModule\r\n} from \"../grid_core/ui.grid_core.focus\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    createGroupFilter\r\n} from \"./ui.data_grid.utils\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\r\ngridCore.registerModule(\"focus\", extend(true, {}, focusModule, {\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                changeRowExpand: function(path, isRowClick) {\r\n                    if (this.option(\"focusedRowEnabled\") && Array.isArray(path) && this.isRowExpanded(path)) {\r\n                        var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                        if ((!isRowClick || !keyboardNavigation.isKeyboardEnabled()) && this._isFocusedRowInsideGroup(path)) {\r\n                            this.option(\"focusedRowKey\", path)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _isFocusedRowInsideGroup: function(path) {\r\n                    var columnsController = this.getController(\"columns\");\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var rowIndex = this.getRowIndexByKey(focusedRowKey);\r\n                    var focusedRow = rowIndex >= 0 && this.getVisibleRows()[rowIndex];\r\n                    var groups = columnsController.getGroupDataSourceParameters(true);\r\n                    if (focusedRow) {\r\n                        for (var i = 0; i < path.length; ++i) {\r\n                            var getter = compileGetter(groups[i] && groups[i].selector);\r\n                            if (getter(focusedRow.data) !== path[i]) {\r\n                                return false\r\n                            }\r\n                        }\r\n                    }\r\n                    return true\r\n                },\r\n                _getGroupPath: function(group) {\r\n                    var groupPath = [group.key];\r\n                    var items = group.items;\r\n                    while (items && items[0]) {\r\n                        var item = items[0];\r\n                        if (void 0 !== item.key) {\r\n                            groupPath.push(item.key)\r\n                        }\r\n                        items = item.items\r\n                    }\r\n                    return groupPath\r\n                },\r\n                _expandGroupByPath: function(that, groupPath, level) {\r\n                    var d = new Deferred;\r\n                    level++;\r\n                    that.expandRow(groupPath.slice(0, level)).done((function() {\r\n                        if (level === groupPath.length) {\r\n                            d.resolve()\r\n                        } else {\r\n                            that._expandGroupByPath(that, groupPath, level).done(d.resolve).fail(d.reject)\r\n                        }\r\n                    })).fail(d.reject);\r\n                    return d.promise()\r\n                },\r\n                _calculateGlobalRowIndexByGroupedData: function(key) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var filter = that._generateFilterByKey(key);\r\n                    var deferred = new Deferred;\r\n                    var isGroupKey = Array.isArray(key);\r\n                    var group = dataSource.group();\r\n                    if (isGroupKey) {\r\n                        return deferred.resolve(-1).promise()\r\n                    }\r\n                    if (!dataSource._grouping._updatePagingOptions) {\r\n                        that._calculateGlobalRowIndexByFlatData(key, null, true).done(deferred.resolve).fail(deferred.reject);\r\n                        return deferred\r\n                    }\r\n                    dataSource.load({\r\n                        filter: that._concatWithCombinedFilter(filter),\r\n                        group: group\r\n                    }).done((function(data) {\r\n                        if (!data || 0 === data.length || !isDefined(data[0].key) || -1 === data[0].key) {\r\n                            return deferred.resolve(-1).promise()\r\n                        }\r\n                        var groupPath = that._getGroupPath(data[0]);\r\n                        that._expandGroupByPath(that, groupPath, 0).done((function() {\r\n                            that._calculateExpandedRowGlobalIndex(deferred, key, groupPath, group)\r\n                        })).fail(deferred.reject)\r\n                    })).fail(deferred.reject);\r\n                    return deferred.promise()\r\n                },\r\n                _calculateExpandedRowGlobalIndex: function(deferred, key, groupPath, group) {\r\n                    var groupFilter = createGroupFilter(groupPath, {\r\n                        group: group\r\n                    });\r\n                    var dataSource = this._dataSource;\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    var isVirtualScrolling = \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\r\n                    var pageSize = dataSource.pageSize();\r\n                    var groupOffset;\r\n                    dataSource._grouping._updatePagingOptions({\r\n                        skip: 0,\r\n                        take: MAX_SAFE_INTEGER\r\n                    }, (function(groupInfo, totalOffset) {\r\n                        if (equalByValue(groupInfo.path, groupPath)) {\r\n                            groupOffset = totalOffset\r\n                        }\r\n                    }));\r\n                    this._calculateGlobalRowIndexByFlatData(key, groupFilter).done((function(dataOffset) {\r\n                        var count;\r\n                        var groupContinuationCount;\r\n                        if (dataOffset < 0) {\r\n                            deferred.resolve(-1);\r\n                            return\r\n                        }\r\n                        var currentPageOffset = groupOffset % pageSize || pageSize;\r\n                        count = currentPageOffset + dataOffset - groupPath.length;\r\n                        if (isVirtualScrolling) {\r\n                            groupContinuationCount = 0\r\n                        } else {\r\n                            groupContinuationCount = Math.floor(count / (pageSize - groupPath.length)) * groupPath.length\r\n                        }\r\n                        count = groupOffset + dataOffset + groupContinuationCount;\r\n                        deferred.resolve(count)\r\n                    })).fail(deferred.reject)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}));\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.row_dragging.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    setWidth,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport Sortable from \"../sortable\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    deferUpdate\r\n} from \"../../core/utils/common\";\r\nvar COMMAND_HANDLE_CLASS = \"dx-command-drag\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar HANDLE_ICON_CLASS = \"drag-icon\";\r\nvar ROWS_VIEW = \"rowsview\";\r\nvar SORTABLE_WITHOUT_HANDLE_CLASS = \"dx-sortable-without-handle\";\r\nvar RowDraggingExtender = {\r\n    init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._updateHandleColumn()\r\n    },\r\n    _allowReordering: function() {\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        return !!(rowDragging && (rowDragging.allowReordering || rowDragging.allowDropInsideItem || rowDragging.group))\r\n    },\r\n    _updateHandleColumn: function() {\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        var allowReordering = this._allowReordering();\r\n        var columnsController = this._columnsController;\r\n        var isHandleColumnVisible = allowReordering && rowDragging.showDragIcons;\r\n        columnsController && columnsController.addCommandColumn({\r\n            type: \"drag\",\r\n            command: \"drag\",\r\n            visibleIndex: -2,\r\n            alignment: \"center\",\r\n            cssClass: COMMAND_HANDLE_CLASS,\r\n            width: \"auto\",\r\n            cellTemplate: this._getHandleTemplate(),\r\n            visible: isHandleColumnVisible\r\n        });\r\n        columnsController.columnOption(\"type:drag\", \"visible\", isHandleColumnVisible)\r\n    },\r\n    _renderContent: function() {\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        var allowReordering = this._allowReordering();\r\n        var $content = this.callBase.apply(this, arguments);\r\n        var isFixedTableRendering = this._isFixedTableRendering;\r\n        var sortableName = \"_sortable\";\r\n        var sortableFixedName = \"_sortableFixed\";\r\n        var currentSortableName = isFixedTableRendering ? sortableFixedName : sortableName;\r\n        var anotherSortableName = isFixedTableRendering ? sortableName : sortableFixedName;\r\n        var togglePointerEventsStyle = toggle => {\r\n            var _this$sortableFixedNa;\r\n            null === (_this$sortableFixedNa = this[sortableFixedName]) || void 0 === _this$sortableFixedNa ? void 0 : _this$sortableFixedNa.$element().css(\"pointerEvents\", toggle ? \"auto\" : \"\")\r\n        };\r\n        var filter = this.option(\"dataRowTemplate\") ? \"> table > tbody.dx-row:not(.dx-freespace-row):not(.dx-virtual-row)\" : \"> table > tbody > .dx-row:not(.dx-freespace-row):not(.dx-virtual-row)\";\r\n        if ((allowReordering || this[currentSortableName]) && $content.length) {\r\n            this[currentSortableName] = this._createComponent($content, Sortable, extend({\r\n                component: this.component,\r\n                contentTemplate: null,\r\n                filter: filter,\r\n                dragTemplate: this._getDraggableRowTemplate(),\r\n                handle: rowDragging.showDragIcons && \".\".concat(COMMAND_HANDLE_CLASS),\r\n                dropFeedbackMode: \"indicate\"\r\n            }, rowDragging, {\r\n                onDragStart: e => {\r\n                    var _this$getController, _rowDragging$onDragSt;\r\n                    null === (_this$getController = this.getController(\"keyboardNavigation\")) || void 0 === _this$getController ? void 0 : _this$getController._resetFocusedCell();\r\n                    var row = e.component.getVisibleRows()[e.fromIndex];\r\n                    e.itemData = row && row.data;\r\n                    var isDataRow = row && \"data\" === row.rowType;\r\n                    e.cancel = !allowReordering || !isDataRow;\r\n                    null === (_rowDragging$onDragSt = rowDragging.onDragStart) || void 0 === _rowDragging$onDragSt ? void 0 : _rowDragging$onDragSt.call(rowDragging, e)\r\n                },\r\n                onDragEnter: () => {\r\n                    togglePointerEventsStyle(true)\r\n                },\r\n                onDragLeave: () => {\r\n                    togglePointerEventsStyle(false)\r\n                },\r\n                onDragEnd: e => {\r\n                    var _rowDragging$onDragEn;\r\n                    togglePointerEventsStyle(false);\r\n                    null === (_rowDragging$onDragEn = rowDragging.onDragEnd) || void 0 === _rowDragging$onDragEn ? void 0 : _rowDragging$onDragEn.call(rowDragging, e)\r\n                },\r\n                onAdd: e => {\r\n                    var _rowDragging$onAdd;\r\n                    togglePointerEventsStyle(false);\r\n                    null === (_rowDragging$onAdd = rowDragging.onAdd) || void 0 === _rowDragging$onAdd ? void 0 : _rowDragging$onAdd.call(rowDragging, e)\r\n                },\r\n                dropFeedbackMode: rowDragging.dropFeedbackMode,\r\n                onOptionChanged: e => {\r\n                    var hasFixedSortable = this[sortableFixedName];\r\n                    if (hasFixedSortable) {\r\n                        if (\"fromIndex\" === e.name || \"toIndex\" === e.name) {\r\n                            this[anotherSortableName].option(e.name, e.value)\r\n                        }\r\n                    }\r\n                }\r\n            }));\r\n            $content.toggleClass(\"dx-scrollable-container\", isFixedTableRendering);\r\n            $content.toggleClass(SORTABLE_WITHOUT_HANDLE_CLASS, allowReordering && !rowDragging.showDragIcons)\r\n        }\r\n        return $content\r\n    },\r\n    _renderCore(e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (e && \"update\" === e.changeType && e.repaintChangesOnly && gridCoreUtils.isVirtualRowRendering(this)) {\r\n            deferUpdate(() => {\r\n                this._updateSortable()\r\n            })\r\n        }\r\n    },\r\n    _updateSortable() {\r\n        var offset = this._dataController.getRowIndexOffset();\r\n        [this._sortable, this._sortableFixed].forEach(sortable => {\r\n            null === sortable || void 0 === sortable ? void 0 : sortable.option(\"offset\", offset);\r\n            null === sortable || void 0 === sortable ? void 0 : sortable.update()\r\n        })\r\n    },\r\n    _resizeCore: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._updateSortable()\r\n    },\r\n    _getDraggableGridOptions: function(options) {\r\n        var gridOptions = this.option();\r\n        var columns = this.getColumns();\r\n        var $rowElement = $(this.getRowElement(options.rowIndex));\r\n        return {\r\n            dataSource: [{\r\n                id: 1,\r\n                parentId: 0\r\n            }],\r\n            showBorders: true,\r\n            showColumnHeaders: false,\r\n            scrolling: {\r\n                useNative: false,\r\n                showScrollbar: \"never\"\r\n            },\r\n            pager: {\r\n                visible: false\r\n            },\r\n            loadingTimeout: null,\r\n            columnFixing: gridOptions.columnFixing,\r\n            columnAutoWidth: gridOptions.columnAutoWidth,\r\n            showColumnLines: gridOptions.showColumnLines,\r\n            columns: columns.map(column => ({\r\n                width: column.width || column.visibleWidth,\r\n                fixed: column.fixed,\r\n                fixedPosition: column.fixedPosition\r\n            })),\r\n            onRowPrepared: e => {\r\n                var rowsView = e.component.getView(\"rowsView\");\r\n                $(e.rowElement).replaceWith($rowElement.eq(rowsView._isFixedTableRendering ? 1 : 0).clone())\r\n            }\r\n        }\r\n    },\r\n    _getDraggableRowTemplate: function() {\r\n        return options => {\r\n            var $rootElement = this.component.$element();\r\n            var $dataGridContainer = $(\"<div>\");\r\n            setWidth($dataGridContainer, getWidth($rootElement));\r\n            var items = this._dataController.items();\r\n            var row = items && items[options.fromIndex];\r\n            var gridOptions = this._getDraggableGridOptions(row);\r\n            this._createComponent($dataGridContainer, this.component.NAME, gridOptions);\r\n            $dataGridContainer.find(\".dx-gridbase-container\").children(\":not(.\".concat(this.addWidgetPrefix(ROWS_VIEW), \")\")).hide();\r\n            return $dataGridContainer\r\n        }\r\n    },\r\n    _getHandleTemplate: function() {\r\n        return (container, options) => {\r\n            if (\"data\" === options.rowType) {\r\n                $(container).addClass(CELL_FOCUS_DISABLED_CLASS);\r\n                return $(\"<span>\").addClass(this.addWidgetPrefix(HANDLE_ICON_CLASS))\r\n            } else {\r\n                gridCoreUtils.setEmptyText($(container))\r\n            }\r\n        }\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"rowDragging\" === args.name) {\r\n            this._updateHandleColumn();\r\n            this._invalidate(true, true);\r\n            args.handled = true\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    }\r\n};\r\nexport var rowDraggingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            rowDragging: {\r\n                showDragIcons: true,\r\n                dropFeedbackMode: \"indicate\",\r\n                allowReordering: false,\r\n                allowDropInsideItem: false\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: RowDraggingExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.row_dragging.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    rowDraggingModule\r\n} from \"../grid_core/ui.grid_core.row_dragging\";\r\ngridCore.registerModule(\"rowDragging\", rowDraggingModule);\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport DataGrid from \"./ui.data_grid.base\";\r\nexport default DataGrid;\r\nimport \"./ui.data_grid.state_storing\";\r\nimport \"./ui.data_grid.selection\";\r\nimport \"./ui.data_grid.column_chooser\";\r\nimport \"./ui.data_grid.grouping\";\r\nimport \"./ui.data_grid.master_detail\";\r\nimport \"./ui.data_grid.editing\";\r\nimport \"./ui.data_grid.editing_row_based\";\r\nimport \"./ui.data_grid.editing_form_based\";\r\nimport \"./ui.data_grid.editing_cell_based\";\r\nimport \"./ui.data_grid.validating\";\r\nimport \"./ui.data_grid.virtual_scrolling\";\r\nimport \"./ui.data_grid.filter_row\";\r\nimport \"./ui.data_grid.header_filter\";\r\nimport \"./ui.data_grid.filter_sync\";\r\nimport \"./ui.data_grid.filter_builder\";\r\nimport \"./ui.data_grid.filter_panel\";\r\nimport \"./ui.data_grid.search\";\r\nimport \"./ui.data_grid.pager\";\r\nimport \"./ui.data_grid.columns_resizing_reordering\";\r\nimport \"./ui.data_grid.keyboard_navigation\";\r\nimport \"./ui.data_grid.summary\";\r\nimport \"./ui.data_grid.column_fixing\";\r\nimport \"./ui.data_grid.adaptivity\";\r\nimport \"./ui.data_grid.virtual_columns\";\r\nimport \"./ui.data_grid.export\";\r\nimport \"./ui.data_grid.focus\";\r\nimport \"./ui.data_grid.row_dragging\";\r\n","/**\r\n * DevExtreme (esm/ui/data_grid.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport DataGrid from \"./data_grid/ui.data_grid\";\r\nexport default DataGrid;\r\n"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","DxLookup","DxLoadPanel","DxLabel","DxKeyboardNavigation","DxItem","DxHide","DxHeaderFilter","DxGroupPanel","DxGroupOperationDescriptions","DxGroupItem","DxGroupingTexts","DxGrouping","DxFrom","DxFormItem","DxFormat","DxForm","DxFilterRow","DxFilterPanelTexts","DxFilterPanel","DxFilterOperationDescriptions","DxFilterBuilderPopup","DxFilterBuilder","DxFieldLookup","DxField","DxExportTexts","DxExport","DxEmailRule","DxEditingTexts","DxEditing","DxDataGridHeaderFilterTexts","DxDataGridHeaderFilter","DxCustomRule","DxCustomOperation","DxCursorOffset","DxCompareRule","DxColumnLookup","DxColumnHeaderFilter","DxColumnFixingTexts","DxColumnFixing","DxColumnChooser","DxColumn","DxCollision","DxColCountByScreen","DxChange","DxButton","DxBoundaryOffset","DxAt","DxAsyncRule","DxAnimation","DxDataGrid","DxValueFormat","DxValidationRule","DxTotalItem","DxToolbarItem","DxToolbar","DxTo","DxTexts","DxSummaryTexts","DxSummary","DxStringLengthRule","DxStateStoring","DxSorting","DxSortByGroupSummaryInfo","DxShow","DxSelection","DxSearchPanel","DxScrolling","DxRowDragging","DxRequiredRule","DxRemoteOperations","DxRangeRule","DxPosition","DxPopup","DxPatternRule","DxPaging","DxPager","DxOperationDescriptions","DxOffset","DxNumericRule","DxMy","DxMasterDetail","data_grid_1","require","index_1","index_2","createComponent","props","accessKey","String","activeStateEnabled","Boolean","allowColumnReordering","allowColumnResizing","autoNavigateToFocusedRow","cacheEnabled","cellHintEnabled","columnAutoWidth","columnChooser","columnFixing","columnHidingEnabled","columnMinWidth","Number","columnResizingMode","columns","Array","columnWidth","customizeColumns","Function","customizeExportData","dataRowTemplate","dataSource","dateSerializationFormat","disabled","editing","elementAttr","errorRowEnabled","export","filterBuilder","filterBuilderPopup","filterPanel","filterRow","filterSyncEnabled","filterValue","focusedColumnIndex","focusedRowEnabled","focusedRowIndex","focusedRowKey","focusStateEnabled","grouping","groupPanel","headerFilter","height","highlightChanges","hint","hoverStateEnabled","keyboardNavigation","keyExpr","loadPanel","masterDetail","noDataText","onAdaptiveDetailRowPreparing","onCellClick","onCellDblClick","onCellHoverChanged","onCellPrepared","onContentReady","onContextMenuPreparing","onDataErrorOccurred","onDisposing","onEditCanceled","onEditCanceling","onEditingStart","onEditorPrepared","onEditorPreparing","onExported","onExporting","onFileSaving","onFocusedCellChanged","onFocusedCellChanging","onFocusedRowChanged","onFocusedRowChanging","onInitialized","onInitNewRow","onKeyDown","onOptionChanged","onRowClick","onRowCollapsed","onRowCollapsing","onRowDblClick","onRowExpanded","onRowExpanding","onRowInserted","onRowInserting","onRowPrepared","onRowRemoved","onRowRemoving","onRowUpdated","onRowUpdating","onRowValidating","onSaved","onSaving","onSelectionChanged","onToolbarPreparing","pager","paging","remoteOperations","renderAsync","repaintChangesOnly","rowAlternationEnabled","rowDragging","rowTemplate","rtlEnabled","scrolling","searchPanel","selectedRowKeys","selection","selectionFilter","showBorders","showColumnHeaders","showColumnLines","showRowLines","sortByGroupSummaryInfo","sorting","stateStoring","summary","tabIndex","toolbar","twoWayBindingEnabled","visible","width","wordWrapEnabled","emits","computed","instance","$_instance","beforeCreate","$_WidgetClass","default","$_hasAsyncTemplate","$_expectedChildren","column","isCollectionItem","optionName","dataGridHeaderFilter","createConfigurationComponent","hide","show","$_optionName","ignoreEmptyValue","message","reevaluate","type","validationCallback","$_isCollectionItem","$_predefinedProps","x","y","cssClass","icon","name","onClick","template","text","data","insertAfterKey","insertBeforeKey","lg","md","sm","xs","alignment","allowEditing","allowExporting","allowFiltering","allowFixing","allowGrouping","allowHeaderFiltering","allowHiding","allowReordering","allowResizing","allowSearch","allowSorting","autoExpandGroup","buttons","calculateCellValue","calculateDisplayValue","calculateFilterExpression","calculateGroupValue","calculateSortValue","caption","cellTemplate","customizeText","dataField","dataType","editCellTemplate","editorOptions","encodeHtml","falseText","filterOperations","filterType","filterValues","fixed","fixedPosition","format","formItem","groupCellTemplate","grouped","groupIndex","headerCellTemplate","hidingPriority","isBand","lookup","minWidth","ownerBand","resized","selectedFilterOperation","setCellValue","showEditorAlways","showInColumnChooser","showWhenGrouped","sortIndex","sortingMethod","sortOrder","trueText","validationRules","visibleIndex","AsyncRule","button","columnHeaderFilter","columnLookup","CompareRule","CustomRule","EmailRule","NumericRule","PatternRule","RangeRule","RequiredRule","StringLengthRule","validationRule","emptyPanelText","enabled","mode","searchTimeout","title","texts","columnFixingTexts","fix","leftPosition","rightPosition","unfix","groupInterval","searchMode","allowClearing","displayExpr","valueExpr","comparisonTarget","comparisonType","dataTypes","editorTemplate","hasValue","dataGridHeaderFilterTexts","cancel","emptyValue","ok","allowAdding","allowDeleting","allowUpdating","changes","confirmDelete","editColumnName","editRowKey","form","newRowPosition","popup","refreshMode","selectTextOnEditStart","startEditAction","useIcons","change","editingTexts","addRow","cancelAllChanges","cancelRowChanges","confirmDeleteMessage","confirmDeleteTitle","deleteRow","editRow","saveAllChanges","saveRowChanges","undeleteRow","validationCancelChanges","allowExportSelectedData","customizeExcelCell","excelFilterEnabled","excelWrapTextEnabled","fileName","ignoreExcelErrors","proxyUrl","exportTexts","exportAll","exportSelectedRows","exportTo","defaultFilterOperation","fieldLookup","allowHierarchicalFields","bindingOptions","customOperations","fields","filterOperationDescriptions","groupOperationDescriptions","groupOperations","maxGroupLevel","onFocusIn","onFocusOut","onValueChanged","customOperation","field","animation","closeOnOutsideClick","container","contentTemplate","copyRootClassesToWrapper","deferRendering","dragAndResizeArea","dragEnabled","dragOutsideBoundary","fullScreen","hideOnParentScroll","maxHeight","maxWidth","minHeight","onHidden","onHiding","onResize","onResizeEnd","onResizeStart","onShowing","onShown","onTitleRendered","position","resizeEnabled","restorePosition","shading","shadingColor","showCloseButton","showTitle","titleTemplate","toolbarItems","wrapperAttr","between","contains","endsWith","equal","greaterThan","greaterThanOrEqual","isBlank","isNotBlank","lessThan","lessThanOrEqual","notContains","notEqual","startsWith","filterEnabled","filterPanelTexts","clearFilter","createFilter","filterEnabledHint","applyFilter","applyFilterText","betweenEndText","betweenStartText","operationDescriptions","resetOperationText","showAllText","showOperationChooser","alignItemLabels","alignItemLabelsInAllGroups","colCount","colCountByScreen","customizeItem","formData","items","labelLocation","labelMode","minColWidth","onEditorEnterKey","onFieldDataChanged","optionalMark","readOnly","requiredMark","requiredMessage","screenByWidth","scrollingEnabled","showColonAfterLabel","showOptionalMark","showRequiredMark","showValidationSummary","validationGroup","currency","formatter","parser","precision","colSpan","editorType","helpText","isRequired","itemType","label","left","opacity","scale","top","allowCollapsing","autoExpandAll","contextMenuEnabled","expandMode","groupingTexts","groupByThisColumn","groupContinuedMessage","groupContinuesMessage","ungroup","ungroupAll","alignByColumn","displayFormat","showInColumn","showInGroupFooter","skipEmptyValues","summaryType","valueFormat","and","notAnd","notOr","or","allowColumnDragging","complete","delay","direction","duration","easing","from","staggerDelay","start","to","html","locateInMenu","location","menuItemTemplate","options","showText","widget","editOnKeyPress","enterKeyAction","enterKeyDirection","showColon","indicatorSrc","showIndicator","showPane","allowedPageSizes","displayMode","infoText","showInfo","showNavigationButtons","showPageSizeSelector","pageIndex","pageSize","pattern","toolbarItem","at","boundary","boundaryOffset","collision","my","of","offset","max","min","filtering","groupPaging","trim","allowDropInsideItem","autoScroll","cursorOffset","dragDirection","dragTemplate","dropFeedbackMode","filter","group","handle","onAdd","onDragChange","onDragEnd","onDragMove","onDragStart","onRemove","onReorder","scrollSensitivity","scrollSpeed","showDragIcons","columnRenderingMode","preloadEnabled","rowRenderingMode","scrollByContent","scrollByThumb","showScrollbar","useNative","highlightCaseSensitive","highlightSearchText","placeholder","searchVisibleColumnsOnly","allowSelectAll","deferred","maxFilterLengthInRequest","selectAllMode","showCheckBoxesMode","groupColumn","summaryItem","ascendingText","clearText","descendingText","showSortIndexes","customLoad","customSave","savingTimeout","storageKey","calculateCustomSummary","groupItems","recalculateWhileEditing","totalItems","groupItem","summaryTexts","totalItem","avg","avgOtherColumn","count","maxOtherColumn","minOtherColumn","sum","sumOtherColumn","item","DataSource","GUID_REGEX","VERBOSE_DATE_REGEX","ISO8601_DATE_REGEX","JSON_VERBOSE_MIME_TYPE","makeArray","split","hasDot","test","pad","length","right","concat","formatISO8601","date","skipZeroTime","skipTimezone","bag","padLeft2","push","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","join","parseISO8601","isoString","result","Date","getTimezoneOffset","chunks","replace","exec","time","setFullYear","setMonth","setDate","isArray","setHours","setMinutes","setSeconds","fractional","slice","setMilliseconds","isAbsoluteUrl","url","stripParams","index","indexOf","substr","toAbsoluteUrl","basePath","relativePath","part","baseParts","relativeParts","pop","shift","param","params","ajaxOptionsForRequest","protocolVersion","request","_options$beforeSend","arguments","formatPayload","payload","JSON","stringify","key","errors","extend","async","method","headers","timeout","beforeSend","call","jsonp","withCredentials","toLowerCase","isGet","useJsonp","ajaxData","qs","contentType","$format","accepts","json","xhrFields","sendRequest","deserializeDates","fieldTypes","countOnly","isPaged","d","Deferred","ajaxOptions","ajax","always","obj","textStatus","transformOptions","tuple","interpretJsonFormat","error","nextUrl","XHR_ERROR_UNLOAD","reject","isFinite","resolve","fail","done","nextData","extra","totalCount","promise","formatDotNetError","errorObj","_errorObj$message","currentError","innererror","internalexception","errorFromResponse","_response","_response2","_response3","_response4","response","httpStatus","errorData","requestOptions","status","responseText","errorMessageFromXhr","parse","then","errorDetails","customCode","code","Error","isPlainObject","isObject","interpretVerboseJsonFormat","interpretLightJsonFormat","transformTypes","_ref","_data$results","isDefined","results","__next","parseInt","__count","_obj$value","EdmLiteral","Class","ctor","_value","valueOf","each","canBeGuid","_Guid","match","RegExp","$1","$2","serializeDate","serializeString","serializePropName","propName","serializeValueV4","map","serializeValueV2","serializeValue","serializeKey","parts","k","v","keyConverters","Int32","Math","floor","Int64","Guid","Single","Decimal","convertPrimitiveValue","converter","generateSelect","oDataVersion","select","grep","formatCore","hash","selectValue","expandValue","apply","parseCore","exprParts","root","stepper","parseTree","exprs","_","generatorV2","expand","path","generatorV4","node","generateExpand","formatFunctionInvocationUrl","baseUrl","args","stringFormat","escapeServiceOperationParams","version","DEFAULT_PROTOCOL_VERSION","STRING_FUNCTIONS","compileCriteria","forceLowerCase","createBinaryOperationFormatter","op","prop","val","createStringFuncFormatter","reverse","formatters","startswith","endswith","formattersV2","notcontains","formattersV4","compileBinary","criteria","_fieldTypes","normalizeBinaryCriterion","fieldName","fieldType","some","funcName","compileGroup","groupOperator","nextGroupOperator","criterion","compileCore","isConjunctiveOperator","isUnaryOperation","crit","types","filterToLower","config","oDataFilterToLower","createODataQueryAdapter","queryOptions","_select","_skip","_take","_countQuery","_sorting","_criteria","_expand","_oDataVersion","hasSlice","hasFunction","i","isFunction","requestData","$orderby","$skip","$top","$select","$expand","$filter","requireTotalCount","$inlinecount","$count","optimize","tasks","selectIndex","nextTask","multiSort","rules","getter","desc","rule","skipCount","takeCount","expr","queryAdapters","RequestDispatcher","constructor","_url","_beforeSend","_jsonp","_version","_withCredentials","_deserializeDates","_filterToLower","ANONYMOUS_KEY_NAME","expandKeyType","keyType","mergeFieldTypesWithKeyType","keyName","ODataStore","Store","callBase","_requestDispatcher","keyTypeIsString","keys","_legacyAnonymousKey","_updateMethod","_customLoadOptions","_byKeyImpl","extraOptions","_byKeyUrl","createQuery","loadOptions","_loadOptions$urlOverr","adapter","errorHandler","_errorHandler","urlOverride","customQueryParams","query","_insertImpl","values","_requireKey","when","serverResponse","useLegacyStoreResult","keyOf","_updateImpl","_removeImpl","_convertKey","convertedKey","encodeURIComponent","DEFAULT_DATE_INTERVAL","DEFAULT_DATETIME_INTERVAL","isDateType","getGroupInterval","dateIntervals","interval","inArray","getFilterSelector","target","selector","displayField","getFilterExpressionByRange","endFilterValue","startFilterExpression","endFilterExpression","getTime","getFilterExpressionForDate","dateStart","dateEnd","dateInterval","dateValue","isDate","getFilterExpressionForNumber","startFilterValue","condition","defaultCalculateFilterExpression","isSearchByDisplayValue","DATAGRID_SELECTION_DISABLED_CLASS","DATAGRID_GROUP_OPENED_CLASS","DATAGRID_GROUP_CLOSED_CLASS","DATAGRID_EXPAND_CLASS","NO_DATA_CLASS","SCROLLING_MODE_INFINITE","SCROLLING_MODE_VIRTUAL","LEGACY_SCROLLING_MODE","SCROLLING_MODE_OPTION","ROW_RENDERING_MODE_OPTION","DATE_INTERVAL_SELECTORS","year","month","day","quarter","hour","minute","second","getIntervalSelector","nameIntervalSelector","equalSelectors","selector1","selector2","originalCallback","columnIndex","setEmptyText","$container","get","textContent","normalizeSortingInfo","sort","normalizeSortingInfoUtility","isExpanded","formatValue","valueText","formatHelper","toString","formatObject","getDisplayFormat","getSummaryText","columnCaption","getWidgetInstance","$element","editorData","dxComponents","widgetName","equalFilterParameters","filter1","filter2","toComparable","renderNoDataText","element","noDataClass","addWidgetPrefix","noDataElement","find","last","isVisible","_dataController","isEmpty","isLoading","$","addClass","appendTo","removeClass","_getNoDataText","renderLoadPanel","isLocalStore","loadPanelOptions","_loadPanel","remove","option","_createComponent","LoadPanel","calculateLoadPanelPosition","$window","getWindow","getHeight","getIndexByKey","equalByValue","combineFilters","filters","operation","resultFilter","_filters$i","checkChanges","changeNames","changesWithChangeNamesCount","proxyMethod","methodName","defaultResult","_dataSource","getFormatOptionsByColumn","getDisplayValue","rowType","displayValueMap","getGroupRowSummaryText","summaryItems","getFormatByDataType","getHeaderFilterGroupParameters","remoteGrouping","sharedFiltering","bind","compare","equalSortParameters","sortParameters1","sortParameters2","ignoreIsExpanded","getPointsByColumns","pointCreated","isVertical","startColumnIndex","cellsLength","notCreatePoint","eq","css","point","getBoundingRect","prevItemOffset","getExpandCellTemplate","allowRenderToDetachedContainer","render","isContinuation","row","isNewRow","rowsView","component","getView","setAria","localize","getSelectionRange","focusedElement","selectionStart","selectionEnd","e","setSelectionRange","selectionRange","focusAndSelectElement","isFocused","is","eventsEngine","isSelectTextOnEditingStart","editor","closest","_loadItemDeferred","getLastResizableColumnIndex","resultWidths","lastColumnIndex","hasResizableColumns","command","isElementInCurrentGrid","controller","$grid","getWidgetContainerClass","parent","isVirtualRowRendering","that","isVirtualMode","isAppendMode","getPixelRatio","window","devicePixelRatio","getContentHeightLimit","browser","mozilla","WIDGET_WITH_LEGACY_CONTAINER_NAME","ModuleItem","_endUpdateCore","_updateLockCount","_actions","_actionConfigs","callbackNames","flags","callbackFlags","unique","syncStrategy","Callbacks","init","publicMethods","beginUpdate","endUpdate","optionCache","_optionCache","_silentOption","_setOptionWithoutOptionChange","messageLocalization","on","off","optionChanged","createAction","handled","getAction","actionName","$target","prefix","setAttribute","attr","getController","_controllers","action","_createAction","event","_createActionByOption","executeAction","dispose","empty","className","componentName","NAME","containerName","Controller","ViewController","inherit","_views","getViews","View","_isReady","isReady","_requireReady","_requireRender","_requireResize","_$parent","_invalidate","requireResize","requireReady","hasWindow","_renderCore","_resizeCore","_parentElement","renderCompleted","resizeCompleted","_$element","getElementHeight","marginTop","parseFloat","marginBottom","offsetHeight","getTemplate","_getTemplate","$parent","toggleClass","fire","resize","isResizing","focus","MODULES_ORDER_MAX_INDEX","processModules","componentClass","modules","modulesOrder","controllerTypes","viewTypes","module1","module2","orderIndex1","orderIndex2","controllers","moduleName","views","subclassOf","extenders","extender","createModuleItems","moduleTypes","moduleItems","moduleType","moduleItem","callModuleItemsMethod","registerModule","module","registerModulesOrder","moduleNames","unregisterModule","_extends","gridCoreUtils","COLUMN_INDICATORS_CLASS","GROUP_PANEL_ITEM_CLASS","_applyColumnState","_that$component","columnAlignment","_getColumnAlignment","parameters","isGroupPanelItem","rootElement","hasClass","$indicatorsContainer","_createIndicatorContainer","$span","_getIndicatorClassName","columnsController","indicatorAlignment","getHeaderContentAlignment","indicator","_renderIndicator","noop","getDefaultAlignment","ignoreIndicatorAlignment","_getIndicatorContainer","$cell","_getIndicatorElements","$indicatorContainer","children","$indicator","append","_updateIndicators","indicatorName","getColumns","$cells","getColumnElements","_updateIndicator","rowOptions","cells","SCROLL_CONTAINER_CLASS","SCROLLABLE_SIMULATED_CLASS","GROUP_SPACE_CLASS","CONTENT_CLASS","TABLE_CLASS","TABLE_FIXED_CLASS","CONTENT_FIXED_CLASS","ROW_CLASS","GROUP_ROW_CLASS","DETAIL_ROW_CLASS","FILTER_ROW_CLASS","ERROR_ROW_CLASS","CELL_UPDATED_ANIMATION_CLASS","HIDDEN_COLUMNS_WIDTH","CELL_HINT_VISIBLE","FORM_FIELD_ITEM_CONTENT_CLASS","appendElementTemplate","content","subscribeToRowEvents","$table","touchTarget","touchCurrentTarget","timeoutId","clearTouchTargets","setTimeout","clearTimeout","currentTarget","clickEventName","dblclickEvent","pointerEvents","_isNativeClick","rowIndex","getRowIndex","rowElement","getPublicElement","_rowPointerDown","_rowClick","_rowDblClick","getWidthStyle","isNumeric","setCellWidth","cell","style","copyAttributes","newElement","oldAttributes","attributes","newAttributes","nodeName","hasAttribute","removeAttribute","nodeValue","ColumnsView","columnStateMixin","_createScrollableOptions","scrollingOptions","useNativeScrolling","bounceEnabled","useKeyboard","useSimulatedScrollbar","_updateCell","_cellPrepared","_createCell","domAdapter","textAlign","headerId","colspan","visibleWidth","_createRow","rowObject","tagName","_isAltRow","dataIndex","_createTable","isAppend","_createColGroup","ctrlKey","preventDefault","$row","isDataRow","isHeaderRow","isGroupRow","isMasterDetailRow","isFilterRow","visibleColumns","_columnsController","getVisibleColumns","cellOptions","removeAttr","difference","scrollWidth","clientWidth","getOptions","$fieldItemContent","delegateTarget","resultOptions","cellElement","eventType","formItemOptions","getVisibleIndex","colgroupElement","j","_createCol","col","setWidth","renderDelayedTemplates","delayedTemplates","_delayedTemplates","syncTemplates","asyncTemplates","_renderDelayedTemplatesCore","_renderDelayedTemplatesCoreAsync","templates","isAsync","templateParameters","doc","_processTemplate","renderingTemplate","isRenderer","model","renderedTemplate","nodeType","templateID","isString","_templatesCache","renderTemplate","templateDeferred","templateOptions","onRendered","templateDeferreds","_getBodies","tableElement","not","_wrapRowIfNeed","hasDataRowTemplate","$tBodies","_tableElement","$tbody","_appendRow","appendTemplate","scrollLeft","_scrollLeft","scrollTo","$root","_renderTable","changeType","_renderRows","rows","_getRows","columnIndices","changeTypes","_renderRow","$wrappedRow","_renderCells","_addWatchMethod","_rowPrepared","_needRenderCell","_renderCell","oldValue","oldValues","_updateCells","$rowElement","$newRowElement","$newCells","cellUpdatedClass","forEach","$newCell","replaceWith","_setCellAriaAttributes","columnIndexOffset","getColumnIndexOffset","ariaColIndex","_getCellOptions","_renderCellContent","appendChild","_getCellTemplate","isAltRow","source","watchers","watch","updateValueFunc","updateRowFunc","watcher","newValue","splice","update","keepRow","elementData","_columnOptionChanged","optionNames","widths","iteratorUtils","setColumnWidths","getCellIndex","cellIndex","getTableElements","getTableElement","setTableElement","excludeValidators","category","afterExecute","_afterRowPrepared","columnsChanged","add","changed","_handleDataChanged","_updateScrollLeftPosition","pos","$scrollContainer","_wrapTableInScrollContainer","nativeScrolling","scrollChanged","_updateContent","$newTableElement","_findContentElement","_getWidths","$cellElements","offsetWidth","getBoundingClientRect","clientRect","getColumnWidths","$tableElement","$rows","isRowVisible","display","getVisibleColumnIndex","$cols","classList","querySelector","toFixed","getCellElements","_getCellElementsCore","_getRowElements","_getCellElement","columnIdentifier","columnVisibleIndex","_getVisibleColumnIndex","_getRowElement","$tableElements","getCellElement","getRowElement","elements","columnOption","getCell","cellPosition","getRowsCount","_getRowElementsCore","hasRowTemplate","tBodies","getName","setScrollerSpacing","paddingLeft","paddingRight","isScrollbarVisible","isHorizontal","getOuterWidth","getWidth","getOuterHeight","FOCUS_STATE_CLASS","FOCUS_DISABLED_CLASS","FOCUSED_ROW_SELECTOR","GRID_ROW_SELECTOR","GRID_CELL_SELECTOR","TREELIST_ROW_SELECTOR","TREELIST_CELL_SELECTOR","viewItemSelectorMap","columnHeaders","footer","isMouseDown","isHiddenFocusing","focusedElementInfo","processKeyDown","viewName","$mainElement","executeKeyDown","isHandled","fireKeyDownEvent","originalEvent","normalizeKeyName","saveFocusedElementInfo","selectView","ariaLabel","$activeElements","getActiveAccessibleElements","targetIndex","viewInstance","viewElement","$viewElement","findFocusedViewElement","viewSelectors","$focusViewElement","first","onDocumentVisibilityChange","visibilityState","subscribeVisibilityChange","unsubscribeVisibilityChange","hiddenFocus","registerKeyboardAction","getMainElement","keyDownHandler","mouseDownHandler","focusinHandler","needShowOverlay","restoreFocus","$targetElement","viewNames","viewItemIndex","_viewName","setTabIndex","keyboardController","isKeyboardEnabled","accessibility","CELL_CONTENT_CLASS","HEADERS_CLASS","NOWRAP_CLASS","ROW_CLASS_SELECTOR","HEADER_ROW_CLASS","COLUMN_LINES_CLASS","CONTEXT_MENU_SORT_ASC_ICON","CONTEXT_MENU_SORT_DESC_ICON","CONTEXT_MENU_SORT_NONE_ICON","CELL_FOCUS_DISABLED_CLASS","VISIBILITY_HIDDEN_CLASS","TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX","SORT_INDICATOR_CLASS","SORT_INDEX_INDICATOR_CLASS","HEADER_FILTER_CLASS_SELECTOR","HEADER_FILTER_INDICATOR_CLASS","MULTI_ROW_HEADER_CLASS","columnHeadersModule","defaultOptions","columnHeadersView","createCellContent","$cellContent","addCssClassesToCellContent","contentAlignment","$indicatorElements","$visibleIndicatorElements","indicatorCount","sortIndicatorClassName","sortIndexIndicatorClassName","$sortIndicator","$sortIndexIndicator","shiftKey","_isLegacyKeyboardNavigation","_getDefaultTemplate","$content","_getHeaderTemplate","resultTemplate","_isGroupingChanged","_handleActionKeyDown","_lastActionElement","headerFilterController","$column","getColumnIndexByElement","showHeaderFilterMenu","_processHeaderAction","isLoaded","_hasRowElements","getRowCount","_getRowVisibleColumns","$cellElement","rowspan","rowCount","groupExpanding","_isElementVisible","elementOptions","_alignCaptionByCenter","clone","insertBefore","$indicatorElement","returnAll","_isSortableElement","getHeadersRowHeight","$headerRows","toArray","reduce","headerRow","getHeaderElement","columnElements","bandColumnIndex","getChildrenByBandColumn","$columnElements","allowDragging","sourceLocation","draggingPanels","draggableColumnCount","canHideColumn","allowDrag","isColumnOptionUsed","draggingPanel","getColumnCount","getContextMenuItems","sortingOptions","onItemClick","changeSortOrder","itemData","setRowsOpacity","columnID","setColumnOpacity","gridCore","USER_STATE_FIELD_NAMES_15_1","USER_STATE_FIELD_NAMES","IGNORE_COLUMN_OPTION_NAMES","bestFitWidth","bufferedFilterValue","COMMAND_EXPAND_CLASS","MAX_SAFE_INTEGER","GROUP_COMMAND_COLUMN_NAME","regExp","globalColumnId","columnsControllerModule","commonColumnSettings","adaptColumnWidthByRatio","regenerateColumnsByVisibleItems","DEFAULT_COLUMN_OPTIONS","DATATYPE_OPERATIONS","number","string","datetime","COLUMN_INDEX_OPTIONS","setFilterOperationsAsDefaultValues","defaultFilterOperations","createColumn","columnOptions","userStateColumnOptions","bandColumn","commonColumnOptions","setName","deepExtendArraySafe","getCommonSettings","calculatedColumnOptions","_createCalculatedColumnOptions","createColumnsFromOptions","columnsOptions","_columnsUserState","checkUserStateColumn","hasColumns","getParentBandColumns","columnParentByIndex","unshift","_getChildrenByBandColumn","columnChildrenByIndex","recursive","getColumnFullPath","bandColumnsCache","getBandColumnsCache","callbackFilter","isPlain","_columns","calculateColspan","getValueDataType","getSerializationFormat","dateSerialization","updateSerializers","deserializeValue","serializationFormat","parsedValue","isNaN","customizeTextForBooleanDataType","getCustomizeTextByDataType","updateColumnIndexes","_commandColumns","updateColumnGroupIndexes","currentColumn","normalizeIndexes","getColumnIndexByVisibleIndex","getGroupColumns","getChooserColumns","userStateColumn","applyUserState","userStateColumnIndex","columnsUserState","ignoreColumnOptionNames","_ignoreColumnOptionNames","columnCountById","resultColumns","allColumnsHaveState","userStateColumnIndexes","applyFieldsState","defaultSelectedFilterOperation","findUserStateColumn","id","_hasUserState","initialIndex","hasAddedBands","columnUserState","added","assignColumns","updateIndexes","isSortOrderValid","resetBandColumnsCache","bandColumns","parentBandColumns","resetColumnsCache","updateColumnDataTypes","updateColumnChanges","columnChanges","_columnChanges","fireColumnsChanged","onColumnsChanging","reinitOptionNames","isInitialized","reinit","updateSortOrderWhenGrouping","prevGroupIndex","columnWasGrouped","lastSortOrder","sortMode","sortedByAnotherColumn","fireOptionChanged","prevValue","fullOptionName","fullOptionPath","_skipProcessingColumnsChange","_notifyOptionChanged","columnOptionCore","notFireEvent","initialColumn","optionGetter","compileGetter","functionsAsIs","optionSetter","compileSetter","_checkColumns","getColumnByPath","defaultSetCellValue","dotCount","isCustomCommandColumn","commandColumn","getFixedPosition","processExpandColumns","expandColumns","customColumnIndex","expandColumnsByType","expandColumn","numberToString","digitsCount","str","mergeColumns","commandColumns","needToExtend","commandColumnIndex","isColumnFixing","_isColumnFixing","defaultCommandColumns","getCommandColumnIndex","columnType","isColumnFixed","_bandColumnsCache","findColumn","identifier","identifierOptionName","_getExpandColumnOptions","_getFirstItems","groupsCount","getFirstItemsCore","childItems","collapsedItems","_isColumnsFromOptions","addCommandColumn","_dataSourceApplied","applyDataSource","columnIndexes","needUpdateRequireResize","previousValue","fullName","_updateRequireResize","columnOptionValue","columnOptionName","forceApplying","isDataSourceLoaded","_dataSourceColumnsCount","columnsFromDataSource","firstItems","processedFields","variableWrapper","updateColumns","isAllDataTypesDefined","reset","_visibleColumns","_fixedColumns","_rowCount","getUserState","isDataSourceApplied","groupingOptions","groupPanelOptions","checkSerializers","defaultCalculateCellValue","isBandColumnsUsed","_getVisibleColumnsCore","getFixedColumns","_getFixedColumnsCore","getFilteringColumns","notFixedColumnCount","transparentColumnIndex","lastFixedPosition","transparentColumn","transparentColspan","prevColumn","newColumn","_getExpandColumnsCore","getExpandColumns","firstGroupColumn","isFixedFirstGroupColumn","parentIndex","_isColumnVisible","isParentColumnVisible","isFixedToEnd","rowspanGroupColumns","rowspanExpandColumns","positiveIndexedColumns","negativeIndexedColumns","notGroupedColumnsCount","columnDigitsCount","indexedColumns","orderEach","firstPositiveIndexColumn","columnsByFixing","columnsByVisibleIndex","getDataColumns","bandColumnID","getInvisibleColumns","hiddenColumnsByBand","getAllColumns","columnChooserColumns","sign","column1","column2","caption1","caption2","localeCompare","allowMoveColumn","fromVisibleIndex","toVisibleIndex","targetLocation","sourceColumn","moveColumn","targetGroupIndex","fromIndex","toIndex","groupColumns","targetColumn","sortingMode","needResetSorting","getSortDataSourceParameters","useLocalSelector","sortColumns","sortItem","getGroupDataSourceParameters","refresh","updateNewLookupsOnly","deferreds","valueMap","_updateColumnOptions","calculateCallbackName","calculateCallback","context","isRTL","isColumnDataTypesUpdated","lookupDataType","valueDataType","_customizeColumns","hasOwnerBand","updateSortingGrouping","sortParameters","groupParameters","filterParameters","lastLoadOptions","_updateChanges","dataController","getCombinedFilter","fromDataSource","isColumnsChanged","updateSortGroupParameterIndexes","indexParameterName","columnsGroupParameters","columnsSortParameters","groupingChanged","groupExpandingChanged","updateFilter","remoteFiltering","forceIsoDateParsing","columnCount","clearSorting","clearGrouping","getVisibleIndexByColumn","visibleColumn","addColumn","deleteColumn","childIndexes","handleStateField","setUserState","state","isFilterPanelHidden","usedNames","hasEditableColumnWithoutName","duplicatedNames","_column$columns","isEditable","captionize","skipDeserialization","parseValue","numberLocalization","formattedValue","formattedValueWithDefaultFormat","dateLocalization","filterUtils","createFilterExpression","userDataType","updateValueMap","calculateValue","displayValue","dataSourceOptions","normalizeDataSourceOptions","paginate","load","resizedCallbacks","defaultOptionName","charAt","toUpperCase","parents","invisibleParents","alwaysGetRowIndex","onlyVisibleDirectChildren","isParentBandColumn","getColumnId","cloneItems","groupCount","calculateOperationTypes","isFullReload","operationTypes","reload","fullReload","groupExpand","skip","take","getPageDataFromCache","updatePaging","storeLoadOptions","fillItemsFromCache","cacheItemsFromBegin","cacheItemBeginCount","cacheItemsFromEnd","_options$skip2","_options$take2","cacheItemEndCount","cachedDataPartBegin","cachedDataPartEnd","fromEnd","_options$take","_options$cachedData","cachedItems","cachedData","_ref2","_options$skip","localIndex","cacheItemIndex","cacheItem","getItemFromCache","skips","takes","getGroupItemFromCache","isContinuationOnNextPage","childCacheItem","getCacheItem","loadedItem","globalIndex","childSkips","_remoteOperations","_isLastPage","isLastPage","_hasLastPage","_currentTotalCount","_cachedData","_lastOperationTypes","_eventsStrategy","_totalCountCorrection","_isLoadingAll","loadingChanged","loadError","customizeStoreLoadOptions","changing","pushed","_dataChangedHandler","_customizeStoreLoadOptionsHandler","_handleCustomizeStoreLoadOptions","_dataLoadedHandler","_handleDataLoaded","_loadingChangedHandler","_handleLoadingChanged","_loadErrorHandler","_handleLoadError","_pushHandler","_handlePush","_changingHandler","_handleChanging","store","memberName","member","isSharedDataSource","resetCurrentTotalCount","resetCache","_cachedStoreData","_cachedPagingData","resetPagesCache","_needClearStoreDataCache","_lastLoadOptions","isLocalOperations","every","operationName","fromStore","applyBatch","keyInfo","_applyBatch","getDataIndexGetter","_dataIndexGetter","indexByKey","storeData","isCacheUpdated","getKeyHash","_getKeyInfo","getItemCount","itemsCount","oldItemCount","_items","useInsertIndex","_ref5","_needCleanCacheByOperation","operationType","operationTypesByOrder","operationTypeIndex","currentOperationTypes","_customizeRemoteOperations","cachedStoreData","cachedPagingData","isCustomLoading","_options$data","_handleDataLoading","originalStoreLoadOptions","_isRefreshing","isRefreshing","_loadingOperationTypes","_isRefreshed","_lastOperationId","operationId","_handleDataLoadingCore","cachedExtra","localLoadOptionNames","optionValue","localPaging","needCache","needPageCache","needPagingCache","needStoreCache","mergeStoreLoadData","ArrayStore","_handleDataLoadedCore","_ref3","_options$skip3","_ref4","_options$take3","cacheItems","_loadPageSize","currentTotalCount","isDataLoading","pageCount","_operationTypes","_scheduleCustomLoadCallbacks","_isCustomLoading","loadingOperationTypes","totalCountCorrection","totalItemsCount","ceil","hasKnownLastPage","loadFromStore","dataSourceLoadOptions","loadResult","isLoadingAll","_scheduleLoadCallbacks","executeAsync","fireEvent","full","getCachedStoreData","dataSourceAdapterType","DataSourceAdapter","create","dataControllerModule","loadingTimeout","include","DataHelperMixin","changePaging","_getPagingOptionValue","_skipProcessingPagingChange","pageChanged","members","_cachedProcessedItems","_currentOperationTypes","_columnsChangedHandler","_handleColumnsChanged","_dataPushedHandler","_handleDataPushed","_isLoading","_repaintChangesOnly","_changes","dataErrorOccurred","_refreshDataSource","stopOnFalse","_this$_dataSource","isValueChanged","_array","isParasiteChange","_setPagingOptions","_useSortingGroupingFromColumns","getDataSource","returnDataField","combinedFilter","additionalFilter","_calculateAdditionalFilter","waitReady","_readyDeferred","updateItems","_storeLoadOptions$fil","_columnsUpdating","filterApplied","_applyFilter","_needApplyFilter","updateItemsHandler","virtualColumnsScrolling","isAsyncDataSourceApplying","_isDataSourceApplying","isDelayed","needApplyFilter","_isAllDataTypesDefined","_fireLoadingChanged","fireError","pagingEnabled","scrollingMode","appendMode","virtualMode","isChanged","_getSpecificDataSourceOption","_initDataSource","oldDataSource","setDataSource","_loadDataSource","_beforeProcessItems","getRowIndexDelta","_processItems","rowIndexDelta","visibleItems","lastVisibleItem","_processItem","_generateDataItem","_processDataItem","dataItem","generateDataValues","isModified","_applyChange","_applyChangeUpdate","_applyChangesOnly","_applyChangeFull","_getRowIndices","rowIndices","a","b","correctedRowIndex","allowInvisibleRowIndices","prevIndex","rowIndexCorrection","equalItems","item1","item2","strict","isEditing","oldItem","oldNextItem","newItem","newNextItem","isFullUpdate","_partialUpdateRow","_isCellChanged","oldRow","newRow","visibleRowIndex","isLiveUpdate","isCellModified","modifiedValues","_getChangedColumnIndices","_cell$column","_changedColumnIndices","changedColumnIndices","isCellChanged","_isItemEquals","_item1$data","_item2$data","_item1$data2","_item2$data2","expandedMatch","summaryCellsMatch","summaryCells","continuationMatch","newIndexByKey","getRowKey","currentItems","oldItems","findChanges","_correctRowIndices","oldRowIndexOffset","_rowIndexOffset","rowIndexOffset","getRowIndexOffset","newVisibleRowIndex","_afterProcessItems","_updateItemsCore","cachedProcessedItems","useProcessedItemsCache","loadIndex","getVisibleRows","isDataChanged","needUpdateDimensions","_needUpdateDimensions","_fireChanged","deferRender","_loadingText","_isFilterApplying","resetFilterApplying","filterExpr","prototype","filterName","clearColumnOption","searchByText","_fireDataSourceChanged","changedHandler","dataSourceChanged","_getDataSourceAdapter","_createDataSourceAdapterCore","dataSourceAdapterProvider","dataSourceAdapter","isCustomStore","CustomStore","_createDataSourceAdapter","enabledRemoteOperations","cancelAll","_isSharedDataSource","loadAll","getKeyByRowIndex","byLoaded","getRowIndexByKey","byKey","getDataByKeys","rowKeys","keyData","beginCustomLoading","messageText","endCustomLoading","changesOnly","customizeLoadResult","_disposeDataSource","repaintRows","rowIndexes","skipProcessingPagingChange","searchText","isLastPageLoaded","DataController","SORT_CLASS","SORT_NONE_CLASS","SORTUP_CLASS","SORTDOWN_CLASS","SORT_INDEX_CLASS","SORT_INDEX_ICON_CLASS","HEADERS_ACTION_CLASS","ariaSortState","isSortingAllowed","hasSeveralSortIndexes","prepend","COLUMN_HEADERS_VIEW_NAMESPACE","ColumnHeadersViewSortingExtender","sortingMixin","addNamespace","$cellElementFromEvent","editingController","editingMode","isCellEditing","isCommandKeyPressed","HeaderPanelSortingExtender","_createGroupPanelItem","$rootElement","$item","_processGroupItemAction","groupColumnIndex","sortingModule","headerPanel","ROWS_VIEW_CLASS","GROUP_CELL_CLASS","DATA_ROW_CLASS","FREE_SPACE_CLASS","ROW_LINES_CLASS","ROW_ALTERNATION_CLASS","LAST_ROW_BORDER","EMPTY_CLASS","ROW_INSERTED_ANIMATION_CLASS","LOADPANEL_HIDE_TIMEOUT","getMaxHorizontalScrollOffset","scrollable","round","rowsModule","defaultCellTemplate","isDataTextEmpty","innerHTML","_getDefaultGroupTemplate","_update","isGroup","isRowExpanded","_setAriaRowIndex","isPagerMode","arg","deep","skipImmediate","removeEvent","_renderScrollable","force","_renderLoadPanel","getScrollable","allColumnsHasWidth","_hasHeight","_renderScrollableCore","_handleScroll","isNativeScrolling","_scrollTop","scrollOffset","_scrollRight","dxScrollableOptions","scrollHandler","onScroll","_scrollable","Scrollable","_scrollableContainer","_renderContent","contentElement","newTableElement","executors","rowInsertedClass","$rowsElement","toggle","insertAfter","prependTo","_createEmptyRow","isFixed","_appendEmptyRow","$emptyRow","isTableContainer","$colgroup","_renderFreeSpaceRow","$freeSpaceRowElement","_checkRowKeys","_needUpdateRowHeight","_rowHeight","_getRowsHeight","$rowElements","_updateRowHeight","rowsHeight","_getFreeSpaceRowElements","tableElements","evaluate","_getColumnsCountBeforeGroups","_getGroupCellOptions","columnsCountBeforeGroups","_renderGroupedCells","groupCellOptions","groupColumnAlignment","updateFreeSpaceRowHeight","_renderDataRowByTemplate","resizeCompletedHandler","scrollableInstance","document","_visibilityChanged","_lastColumnWidths","groupingTextsOptions","_setRowsOpacityCore","_getDevicePixelRatio","getCellOptions","getRow","itemCount","freeSpaceRowElements","isFreeSpaceRowVisible","deferUpdate","scrollbarWidth","getScrollbarWidth","elementHeightWithoutScrollbar","contentHeight","showFreeSpaceRow","borderTopWidth","heightCorrection","_getHeightCorrection","resultHeight","_updateLastRowBorder","freeSpaceRowCount","setHeight","isZoomedWebkit","isChromeLatest","hasExtraBorderTop","_fireColumnResizedCallbacks","_editorFactoryController","setLoading","contentWidth","scrollableContainer","clientHeight","lastColumnWidths","columnWidths","_updateScrollable","dxScrollable","_updateHorizontalScrollPosition","maxHorizontalScrollOffset","scrollRight","_height","hasHeight","visibilityOptions","_hideLoadingTimeoutID","groupCellIndex","_getBoundaryVisibleItemIndex","isTop","isFloor","itemIndex","prevOffset","viewportBoundary","$contentElement","contentElementOffsetTop","rowElements","outerHeight","getTopVisibleItemIndex","getBottomVisibleItemIndex","getTopVisibleRowData","_scrollToElement","scrollToElement","_restoreErrorRow","CONTEXT_MENU","footerView","VIEW_NAMES","ContextMenuController","dxEvent","$targetRowElement","$targetCellElement","menuItems","view","_rowOptions$cells","targetElement","_contextMenuPrepared","ContextMenuView","ContextMenu","onPositioning","actionArgs","contextMenuInstance","stopPropagation","contextMenuModule","contextMenu","contextMenuView","treeListCore","ERROR_MESSAGE_CLASS","ERROR_CLOSEBUTTON_CLASS","ACTION_CLASS","ErrorHandlingController","_columnHeadersView","_rowsView","_createErrorRow","$errorRow","$closeButton","$errorMessage","_renderErrorMessage","errorRowIndex","removeErrorRow","fireContentReadyAction","role","$message","renderErrorRow","$popupContent","$errorMessageElement","$firstErrorRow","next","resizingController","$columnHeaders","$rowsViewElement","errorHandlingModule","errorHandling","errorHandlingController","hasChanges","BORDERS_CLASS","IMPORTANT_MARGIN_CLASS","GRIDBASE_CONTAINER_CLASS","isPercentWidth","isPixelWidth","getContainerHeight","paddingTop","paddingBottom","calculateFreeWidth","totalWidth","_getTotalWidth","calculateFreeWidthWithCurrentMinWidth","currentMinWidth","ResizingController","_initPostRenderHandlers","_refreshSizesHandler","_refreshSizes","resizeDeferred","_e$changeTypes","_setScrollerSpacing","_setAriaRowColCount","_fireContentReadyAction","_getBestFitWidths","_widths","_rowsView$getTableEle","headersTableElement","_setVisibleWidths","columnId","_toggleBestFitModeForView","isBestFit","$rowsTables","$viewTables","$tableBody","$rowsTable","$viewTable","_toggleBestFitMode","$rowsFixedTable","_footerView","_toggleContentMinHeight","_needStretch","_synchronizeColumns","resetBestFitMode","needBestFit","_needBestFit","hasMinWidth","isColumnWidthsCorrected","_maxWidth","isFocusOutsideWindow","bottom","_correctColumnWidths","expandColumnWidth","_processStretch","c","_getAverageColumnsWidth","freeWidth","columnCountWithoutWidth","hasPercentWidth","hasAutoWidth","hasWidth","_hasWidth","_loop","isHiddenColumn","averageColumnsWidth","realColumnWidth","_getRealColumnWidth","borderWidth","getInnerWidth","resultSizes","groupSize","tableSize","unusedIndexes","diff","diffElement","onePixelElementsCount","groupWidth","ratio","percentTotalWidth","pixelTotalWidth","freeSpace","percentTotalWidthInPixel","updateSize","$groupElement","importantMarginClass","detach","updateDimensions","checkSize","_checkSize","prevResult","_resizeDeferred","_resetGroupElementHeight","_updateDimensionsCore","groupElement","scrollTop","_lastWidth","_lastHeight","_devicePixelRatio","_setScrollerSpacingCore","vScrollbarWidth","hScrollbarWidth","$testDiv","rootElementHeight","maxHeightHappened","editorFactory","isMaxHeightApplied","scrollHeight","_updateLastSizes","_renderDimensions","SynchronizeScrollingController","_scrollChangedHandler","GridView","_resizingController","_getWidgetAriaLabel","_groupElement","_renderViews","_getTableRoleName","isFirstRender","_rootElement","gridViewModule","resizing","synchronizeScrolling","gridView","HEADER_PANEL_CLASS","TOOLBAR_BUTTON_CLASS","TOOLBAR_ARIA_LABEL","HeaderPanel","_getToolbarItems","_getButtonContainer","_getToolbarButtonClass","specificClass","secondClass","_getToolbarOptions","userToolbarOptions","toolbarOptions","onItemRendered","itemRenderedCallback","userItems","_normalizeToolbarItems","defaultItems","defaultProps","defaultButtonsByNames","normalizedItems","needHideButton","_toolbar","_toolbarOptions","$headerPanel","$toolbar","Toolbar","setToolbarItemDisabled","toolbarInstance","itemOptionPrefix","updateToolbarDimensions","_this$_toolbar","getHeaderPanel","getPathParts","normalizedItem","headerPanelModule","DATAGRID_ROW_SELECTOR","DATAGRID_DEPRECATED_TEMPLATE_WARNING","DataGrid","Widget","_activeStateUnit","_getDefaultOptions","_setDeprecatedOptions","_deprecatedOptions","since","alias","_defaultOptionsRules","device","platform","isMaterial","_device","deviceType","_init","_clean","_optionChanged","_dimensionChanged","_initMarkup","_renderContentImpl","templateName","logger","_dispose","registerComponent","DATE_REGEX","parseDates","UTC","StateStoringController","getStorage","storage","sessionStorage","localStorage","getUniqueStorageKey","_loadState","getItem","_saveState","setItem","isEnabled","_state","_isLoaded","_windowUnloadHandler","_savingTimeoutID","fromPromise","isEmptyObject","save","getDataState","pagerView","getPageSizes","processLoadState","selectionController","exportController","updateState","selectionChanged","_initialPageSize","_initialFilterValue","selectionOnlyChanged","exportSelectionOnly","selectionOnly","DEFAULT_FILTER_VALUE","getFilterValue","filterSyncController","hasFilterState","getFilterValueFromColumns","stateStoringModule","stateLoaded","isStateLoading","applyState","oldState","newState","oldStateHash","newStateHash","isVirtualScrollingMode","stateStoringController","_restoreStateTimeoutID","_fireSelectionChanged","isDeferredSelection","EDITOR_CELL_CLASS","ROW_SELECTION_CLASS","SELECT_CHECKBOX_CLASS","CHECKBOXES_HIDDEN_CLASS","COMMAND_SELECT_CLASS","SELECTION_DISABLED_CLASS","SHOW_CHECKBOXES_MODE","SELECTION_MODE","processLongTap","isSelectionWithCheckboxes","stopSelectionWithCheckboxes","startSelectionWithCheckboxes","changeItemSelection","control","SelectionController","selectionCellTemplate","isRowSelected","renderSelectCheckBoxContainer","selectionHeaderTemplate","_renderSelectAllCheckBox","_attachSelectAllCheckBoxClickEvent","_selectionMode","_isSelectionWithCheckboxes","_selection","_createSelection","_updateSelectColumn","removedKeys","deselectRows","_getSelectionConfig","selectionOptions","virtualPaging","legacyScrollingMode","selectedKeys","ignoreDisabledItems","allowLoadByRange","hasGroupColumns","dataFields","_dataController$dataS","_dataController$dataS2","plainItems","isItemSelected","selected","isSelectableItem","getItemData","oldData","getLoadOptions","loadItemIndex","focusedItemIndex","shiftItemIndex","_dataController$dataS3","_dataController$dataS4","minIndex","maxIndex","_updateSelectedItems","isSelectColumnVisible","Selection","argument","_updateCheckboxesState","isDeferredMode","selectedItemKeys","removedItemKeys","keyIndex","isComplexKey","selectionChangedOptions","changedItemIndexes","getChangedItemIndexes","itemIndexes","addedItemKeys","_selectedItemsInternalChange","selectedRowsData","selectedItems","currentSelectedRowKeys","currentDeselectedRowKeys","isDataItem","isSelected","oldSelectionMode","selectionMode","selectRows","_isOnePageSelectAll","isSelectAll","getSelectAllState","selectAll","deselectAll","clearSelection","preserve","isDeselect","getSelectedRowKeys","getSelectedItemKeys","selectRowsByIndexes","indexes","getSelectedRowsData","getSelectedItems","visibleItemIndex","loadedItemIndex","_focusedItemIndex","selectionModule","hasSelectColumn","currentItem","isUpdateSelection","_updateSelectAllValue","$editor","selectAllValue","hasSelection","dxCheckBox","isEmptyData","createEditor","parentType","setValue","_attachCheckBoxClickEvent","_renderSelectCheckBox","_e$event","_updateCheckboxesClass","touch","holdEvent","isSelectionDisabled","isClickableElement","isCommandSelect","isCheckBoxesHidden","COLUMN_CHOOSER_CLASS","COLUMN_CHOOSER_BUTTON_CLASS","NOTOUCH_ACTION_CLASS","COLUMN_CHOOSER_LIST_CLASS","COLUMN_CHOOSER_PLAIN_CLASS","COLUMN_CHOOSER_DRAG_CLASS","COLUMN_CHOOSER_SELECT_CLASS","COLUMN_CHOOSER_ICON_NAME","COLUMN_CHOOSER_ITEM_CLASS","TREEVIEW_NODE_SELECTOR","CHECKBOX_SELECTOR","CLICK_TIMEOUT","processItems","chooserColumns","isSelectMode","expanded","disableCheckBox","parentId","ColumnChooserController","renderShowColumnChooserButton","$columnChooserButton","columnChooserButtonClass","columnChooserEnabled","$showColumnChooserButton","Button","showColumnChooser","integrationOptions","getPosition","ColumnChooserView","_isWinDevice","devices","win","_updateList","_popupContainer","columnChooserList","_columnChooserList","selectItem","unselectItem","$wrapper","_renderTreeView","_initializePopupContainer","columnChooserOptions","themeName","current","isGenericTheme","isGeneric","isMaterialTheme","dxPopupOptions","_ignoreCopyRootClassesToWrapperDeprecation","shortcut","Popup","treeViewConfig","dataStructure","itemTemplate","rootValue","searchEnabled","$checkBox","$treeViewNode","itemElement","checkBoxInstance","_prepareSelectModeConfig","_prepareDragModeConfig","searchValue","TreeView","selectNodesRecursive","onItemSelectionChanged","isLastColumnUnselected","needPartialRender","needFullRender","all","$node","$nodes","columnVisible","isColumnChooserVisible","$overlayContent","hideColumnChooser","popupContainer","columnChooserModule","columnChooserView","_appendColumnChooserItem","hintText","columnChooserMode","isMoveColumnDisallowed","createOffsetFilter","lastLevelOnly","groups","filterElement","currentFilter","GroupingHelper","findGroupInfoByKey","groupsInfo","getGroupInfoIndexByOffset","leftIndex","rightIndex","middleIndex","_groupsInfo","updateTotalItemsCount","isGroupItemCountable","_isVirtualPaging","calculateItemsCount","foreachGroups","callback","childrenAtFirst","foreachCollapsedGroups","updateOffsets","updateParentOffsets","foreachGroupsCore","callbackResults","executeCallback","callbackResult","currentParents","_updateGroupInfoOffsets","groupInfo","findGroupInfo","pathIndex","addGroupInfo","groupInfoData","allowCollapseAll","oldGroups","_group","cleanGroupsInfo","handleDataLoading","handleDataLoaded","handleDataLoadedCore","createGroupFilter","loadTotalCount","GroupingHelperCore","correctSkipLoadOption","skipCorrection","resultSkip","pathEquals","path1","path2","keysEqual","updateGroupOffsets","additionalGroupInfo","getGroupCount","collapsedGroups","collapsedItemsCount","skipFirstItem","dataGridCore","sorts","storeHelper","appendCollapsedPath","collapsedGroup","keyValue","pathValue","dataQuery","enumerate","groupedData","processGroupItems","removeLastItemsCount","needRemoveFirstItem","offsetInfo","itemsCountCorrection","changeRowExpand","groupCountQuery","beginPageIndex","dataSourceItems","groupOffsetQuery","getContinuationGroupCount","groupOffset","pageOffset","foreachExpandedGroups","updateGroups","expandedInfo","isLastGroupExpanded","paths","lastCount","updateGroupInfoItem","isLastGroupLevel","_isGroupExpanded","updateGroupInfos","loadedGroupCount","remotePaging","isGroupExpanded","getTotalOffset","groupInfos","totalOffset","childrenTotalCount","applyContinuationToGroupItem","groupLevel","expandedItemIndex","isLastExpandedItem","isFirstExpandedItem","lastExpandedItemSkip","isItemsTruncatedByTake","isDataDeferred","makeDataDeferred","loadGroupItems","currentGroupCount","currentGroupIndex","currentGroup","requireGroupCount","groupSummary","expandedFilters","expandedPath","isPagingLocal","isLastLevelGroupItemsPagingLocal","sortLastLevelGroupItems","expandedItems","loadGroupTotalCount","isGrouping","dataErrors","isVirtualPaging","_updatePagingOptions","skipChildrenTotalCount","takeCorrection","parentTakeCorrection","continuationGroupCount","skipContinuationGroupCount","groupInfoCount","childrenGroupInfoCount","remoteGroupPaging","isLastGroup","_processPaging","_processSkips","firstItem","_processTakes","lastItem","maxTakeCount","handleGroup","DATAGRID_GROUP_PANEL_CLASS","DATAGRID_GROUP_PANEL_MESSAGE_CLASS","DATAGRID_GROUP_PANEL_ITEM_CLASS","DATAGRID_GROUP_PANEL_LABEL_CLASS","DATAGRID_GROUP_ROW_CLASS","GroupingDataSourceAdapterExtender","_initGroupingHelper","_grouping","isAutoExpandAll","isFocusedRowEnabled","isODataRemoteOperations","ExpandedGroupingHelper","CollapsedGroupingHelper","collapseAll","_collapseExpandAll","expandAll","isExpand","beginLoading","_changeRowExpandCore","endLoading","_hasGroupLevelsExpandState","GroupingDataControllerExtender","_processGroupItems","_processGroupItem","groupedColumns","collectContinuationItems","resultItems","expandRow","collapseRow","onGroupingMenuItemClick","GroupingHeaderPanelExtender","_appendGroupingItem","_isGroupPanelVisible","isRendered","$groupPanel","_updateGroupPanelContent","_renderGroupPanelItems","$groupPanelItem","$toolbarElement","$groupedColumnElement","isGroupingAllowed","isColumnGrouped","GroupingRowsViewExtender","isGroupRowStateChanged","isExpandButtonClicked","_changeGroupRowState","columnHeadersViewExtender","beginGroup","_isProcessedItem","MASTER_DETAIL_CELL_CLASS","MASTER_DETAIL_ROW_CLASS","masterDetailModule","initMasterDetail","_expandedItems","_isExpandAll","expandIndex","_getRowIndicesForExpand","detailColumnIndex","isEnabledChanged","isAutoExpandAllChanged","_updateParentDataGrids","$masterDetailRow","_updateMasterDataGrid","$detailElement","masterRowOptions","masterDataGrid","isFixedColumns","_updateFixedMasterDetailGrids","masterRowIndex","$tables","rowsNotEqual","tablesNotEqual","detailElementWidth","isDetailHorizontalScrollCanBeShown","isDetailGridWidthChanged","isEditRow","_isDetailRow","$detailCell","isWrapped","CHECKBOX_SIZE_CLASS","EDITOR_INLINE_BLOCK","EditorFactoryMixin","getResultConfig","inputAttr","checkEnterBug","ios","getTextEditorConfig","isEnterBug","sharedData","needDelayedUpdate","isInputOrKeyUpEvent","updateValue","valueChangeTimeout","updateValueTimeout","_input","valueChangeEvent","prepareBooleanEditor","prepareSelectBox","editorName","displayGetter","postProcess","selectBox","stopWatch","searchExpr","showClearButton","editorElement","blur","isSearching","isOnForm","showValidationMark","$editorElement","dateBox","dxDateBox","defaultEnterKeyHandler","_supportedKeys","enter","registerKeyHandler","dxTextArea","FOCUS_OVERLAY_CLASS","FOCUSED_ELEMENT_CLASS","MODULE_NAMESPACE","UPDATE_FOCUS_EVENTS","DX_HIDDEN","EditorFactory","_getFocusedElement","$dataGridElement","rowSelector","focusedElementSelector","_getFocusCellSelector","_updateFocusCore","$focusCell","hideBorders","$focus","_$focusedElement","loseFocus","_updateFocus","isFocusOverlay","_isFocusOverlay","_updateFocusTimeoutID","_updateFocusOverlaySize","positionUtils","h","oversize","setOuterWidth","setOuterHeight","hideBorder","_focusTimeoutID","renderFocusOverlay","focused","refocus","_$focusOverlay","align","elemCoord","focusOverlayPosition","precise","$focusedElement","_updateFocusHandler","_attachContainerEventHandlers","editorFactoryModule","DEFAULT_BUTTON","DX_DIALOG_CLASSNAME","DX_DIALOG_WRAPPER_CLASSNAME","DX_DIALOG_ROOT_CLASSNAME","DX_DIALOG_CONTENT_CLASSNAME","DX_DIALOG_MESSAGE_CLASSNAME","DX_DIALOG_BUTTONS_CLASSNAME","DX_DIALOG_BUTTON_CLASSNAME","DX_BUTTON_CLASSNAME","FakeDialogComponent","Component","custom","_options$title","getViewport","isMessageDefined","isMessageHtmlDefined","messageHtml","popupToolbarItems","Action","popupInstance","android","execute","ensureDefined","ignoreChildEvents","bottomToolbar","resetActiveElement","$firstButton","popupOptions","isPortrait","confirm","ROW_SELECTED_CLASS","EDIT_FORM_CLASS","DATA_EDIT_DATA_INSERT_TYPE","DATA_EDIT_DATA_REMOVE_TYPE","EDITING_POPUP_OPTION_NAME","EDITING_FORM_OPTION_NAME","EDITING_EDITROWKEY_OPTION_NAME","EDITING_EDITCOLUMNNAME_OPTION_NAME","TARGET_COMPONENT_NAME","EDITORS_INPUT_SELECTOR","FOCUSABLE_ELEMENT_SELECTOR","EDIT_MODE_BATCH","EDIT_MODE_ROW","EDIT_MODE_CELL","EDIT_MODE_FORM","EDIT_MODE_POPUP","FIRST_NEW_ROW_POSITION","LAST_NEW_ROW_POSITION","PAGE_BOTTOM_NEW_ROW_POSITION","PAGE_TOP_NEW_ROW_POSITION","VIEWPORT_BOTTOM_NEW_ROW_POSITION","VIEWPORT_TOP_NEW_ROW_POSITION","EDIT_MODES","ROW_BASED_MODES","MODES_WITH_DELAYED_FOCUS","READONLY_CLASS","LINK_CLASS","ROW_SELECTED","EDIT_BUTTON_CLASS","COMMAND_EDIT_CLASS","COMMAND_EDIT_WITH_ICONS_CLASS","INSERT_INDEX","ROW_INSERTED","ROW_MODIFIED","CELL_MODIFIED","EDITING_NAMESPACE","DATA_EDIT_DATA_UPDATE_TYPE","DEFAULT_START_EDIT_ACTION","EDIT_LINK_CLASS","edit","undelete","delete","EDIT_ICON_CLASS","METHOD_NAMES","ACTION_OPTION_NAMES","BUTTON_NAMES","EDITING_CHANGES_OPTION_NAME","createFailureHandler","isEditingCell","isEditingOrShowEditorAlwaysDataCell","isCommandCell","isEditorCell","EditingController","getButtonIndex","getButtonName","_lastOperation","_deferreds","_saveEditorHandler","_updateEditColumn","_updateEditButtons","_internalState","_optionsByReference","getEditMode","editMode","_getDefaultEditorTemplate","_getNewRowPosition","getChanges","getInsertRowCount","resetChanges","needReset","_getInternalData","_addInternalData","internalData","_getOldData","_this$_getInternalDat","getUpdatedData","editIndex","createObjectWithChanges","getInsertedData","getRemovedData","_fireDataErrorOccurred","getPopupContent","_needToCloseEditableCell","_closeEditItem","_isDefaultButtonVisible","_isButtonVisible","_isButtonDisabled","_getButtonConfig","buttonName","addRowToNode","editingOptions","allowAction","_getEditingButtons","buttonIndex","haveCustomButtons","_renderEditingButtons","_createButton","_getEditCommandCellTemplate","isRowBasedEditMode","getFirstEditableColumnIndex","getFirstEditableCellInRow","getFocusedCellInRow","_inputFocusTimeoutID","_pointerUpEditorHandler","_pointerDownEditorHandler","_handleEditRowKeyChange","_handleChangesChange","_resetEditColumnName","_resetEditRowKey","oldRowIndexCorrection","_getEditRowIndexCorrection","oldRowIndex","_editRowFromOptionChanged","cancelEditData","_processInsertChanges","_addInsertInfo","isPageChanged","_pageIndex","_refreshCore","isEditRowKeyDefined","_setEditRowKey","silent","_setEditRowKeyByIndex","getEditRowIndex","_getVisibleEditRowIndex","getEditFormRowIndex","_isEditRowByIndex","isKeyEqual","isEditCell","_getVisibleEditColumnIndex","_getInsertRowIndex","isProcessedItems","_getInsertAfterOrBeforeKey","isProcessedItem","nextItem","_generateNewItem","_this$_getInternalDat2","insertInfo","_getLoadedRowIndex","loadedRowIndex","insertAfterOrBeforeKey","_this$_getInternalDat3","isInsert","processDataItem","_processDataItemCore","modified","removed","_initNewRow","_createInsertInfo","_getInsertIndex","parentKey","_this$_getInternalDat4","_setInsertAfterOrBeforeKey","allItems","isViewportBottom","insertKey","maxInsertIndex","editItem","_this$_getInternalDat5","insertChange","_insertChange$insertA","_getPageIndexToInsertRow","lastPageIndex","_addRow","oldEditRowIndex","_allowRowAdding","__KEY__","_addRowCore","_navigateToNewRow","insertIndex","initialOldEditRowIndex","editRowIndex","_addChange","_editRowIndex","_change","focusController","pageIndexToInsertRow","navigateToRowByKey","navigateToRow","_showAddedRow","_afterInsertRow","_focusFirstEditableCellInRow","_beforeFocusElementInRow","$firstCell","_editCellInProgress","_delayedInputFocus","_isEditingStart","_beforeUpdateItems","_setEditColumnNameByIndex","_visibleColumns$index","_setEditColumnName","_getEditColumn","_getColumnByName","editColumn","columnName","isColumnHidden","_resetEditIndices","_item$oldData","_editRowFromOptionChangedCore","_needFocusEditor","_focusEditorIfNeed","_showEditPopup","_repaintEditPopup","_getEditPopupHiddenHandler","_getPopupEditFormTemplate","_getSaveButtonConfig","saveEditData","_getCancelButtonConfig","_removeInternalData","_updateInsertAfterOrBeforeKeys","removeChange","_removeChange","executeOperation","func","waitForDeferredOperations","_processCanceledEditingCell","_repaintEditCell","oldColumn","beforeFocusCallback","callBeforeFocusCallbackAlways","inputFocus","$focusableElement","_beforeFocusCallback","_focusEditingCell","$editCell","editColumnIndex","_checkAndDeleteRow","showDialogTitle","confirmResult","_deleteRowCore","_afterDeleteRow","_fireOnSaving","onSavingParams","_executeEditingAction","_disposed","_processChanges","dataChanges","changeCopy","_beforeSaveEditData","insert","newData","doneDeferred","_processRemoveIfError","_processRemove","_processRemoveCore","_processSaveEditDataResult","hasSavedData","changesLength","isError","_fireSaveEditDataEvents","isSaving","_resolveAfterSave","_saving","_saveEditDataInner","needFocusEditCell","_afterSaveEditData","_endSaving","_cancelSaving","_beforeEndSaving","_refreshDataAfterSave","isFullRefresh","isEditColumnVisible","_isEditColumnVisible","_isEditButtonDisabled","isEditRowDefined","isButtonDisabled","_applyModified","_beforeCloseEditCellInBatchMode","_cancelEditDataCore","_beforeCancelEditData","_afterCancelEditData","_hideEditPopup","hasEditData","_getRowIndicesForCascadeUpdating","skipCurrentRow","addDeferred","_prepareChange","_options$row","rowKey","setCellValueResult","_updateRowValues","updateFieldValue","forceUpdateRow","_focusPreviousEditingCellIfNeed","_updateEditRow","_needUpdateRow","isCustomSetCellValue","isCustomCalculateCellValue","changeOptions","_applyChangeCore","_updateEditRowCore","_updateRowImmediately","_updateRowWithDelay","_validateEditFormAfterUpdate","$focusedItem","changeParams","_this$getChanges","_getFormEditItemTemplate","getColumnTemplate","editingStartOptions","isRowMode","isRowEditing","getEditFormTemplate","useLegacyColumnButtonTemplate","$button","iconType","iconUtils","localizationName","getButtonLocalizationNames","_button$onClick","prepareButtonItem","titleButtonTextByClassNames","revert","prepareEditButtons","buttonItems","highlightDataCell","cellModified","shouldHighlight","_allowEditAction","allowEditAction","eventName","needCallback","isNewRowInEditMode","visibleEditRowIndex","editingModule","_editingController","_this$_updateEditItem","_updateEditItem","isRowRemoved","isRowInserted","isRowModified","_getColumnIndexByElement","_getColumnIndexByElementCore","_editCellByClick","isEditedCell","editCell","withoutSaveEditData","closeEditCell","_pointerDownTimeout","isEditForm","isEditableCell","_editCellPrepared","_formItemPrepared","cellValue","editButtonItems","excludedOptions","shouldInvalidate","EDIT_ROW","editingRowBasedModule","isRowEditMode","isVisibleInRowEditMode","$editingCell","EDIT_FORM_ITEM_CLASS","EDIT_POPUP_CLASS","SCROLLABLE_CONTAINER_CLASS","EDIT_POPUP_FORM_CLASS","BUTTON_CLASS","FORM_BUTTONS_CONTAINER_CLASS","getEditorType","_column$formItem","isCustomEditorType","forEachFormItems","callBack","tabs","editingFormBasedModule","_editForm","_updateEditFormDeferred","isFormOrPopupEditMode","isPopupEditMode","isFormEditMode","firstFormItem","_firstFormItem","$editFormElements","_getEditFormEditorVisibleIndex","editForm","_this$_editPopup","popupVisible","_editPopup","_$popupContent","_row$update","repaint","repaintForm","isMobileDevice","$popupContainer","_this$_editForm","formTemplate","isPopupForm","_this$_editPopup2","defaultAnimation","_this$_editPopup3","_handleFormOptionChange","_handlePopupOptionChange","_this$_editPopup4","editPopup","popupOptionName","renderFormEditTemplate","detailCellOptions","formTemplateOptions","isReadOnly","rowData","labelMark","getItemID","getFormEditorTemplate","_cellOptions$row$watc","_cellOptions$row","_validator","validator","validatorOptions","contents","dxValidator","dataGetter","getEditFormOptions","detailOptions","_this$_getValidationG","editFormOptions","_getValidationGroupsInForm","userCustomizeItem","editFormItemClass","itemId","formID","itemVisible","baseEditFormOptions","$formContainer","Form","$buttonsContainer","_this$_editPopup5","getEditForm","_this$_updateEditForm","_this$_editPopup6","editFormRowIndex","_isFormItem","isDetailRow","isPopupEditing","ADD_ROW_BUTTON_CLASS","DROPDOWN_EDITOR_OVERLAY_CLASS","CELL_MODIFIED_CLASS","ROW_REMOVED","$pointerDownTarget","needCreateHandlers","_this$getController","targetComponent","isCellOrBatchEditMode","isEditorPopup","checkEditorPopup","isDomElement","isAnotherComponent","isAddRowButton","isCellEditMode","isBatchEditMode","isCurrentComponentElement","$targetCell","_this$_rowsView","isEditColumnNameDefined","_handleEditColumnNameChange","oldColumnIndex","_editCellFromOptionChanged","_deferred","_editCell","coreResult","_editCellCore","isEditByOptionChanged","_getNormalizedEditCellOptions","_beforeEditCell","_prepareEditCell","_closeEditCellCore","_resetModifiedClassCells","columnsCount","_this$_editCellFromOp","needResetIndexes","isBatchMode","_isRowDeleteAllowed","_changes$","_deferred2","isUpdateInCellMode","focusPreviousEditingCell","processIfBatch","editingCellBasedModule","INVALIDATE_CLASS","REVERT_TOOLTIP_CLASS","INVALID_MESSAGE_CLASS","WIDGET_INVALID_MESSAGE_CLASS","INVALID_MESSAGE_ALWAYS_CLASS","REVERT_BUTTON_CLASS","VALIDATOR_CLASS","PENDING_INDICATOR_CLASS","VALIDATION_PENDING_CLASS","PADDING_BETWEEN_TOOLTIPS","FORM_BASED_MODES","COMMAND_TRANSPARENT","VALIDATION_STATUS","valid","invalid","pending","EDIT_DATA_INSERT_TYPE","EDIT_DATA_REMOVE_TYPE","VALIDATION_CANCELLED","validationResultIsValid","cellValueShouldBeValidated","ValidatingController","_validationState","initValidationState","_validationStateCache","_rowIsValidated","validationData","_getValidationData","validated","keyHash","isObjectKeyHash","isValid","_getBrokenRules","validationResults","brokenRules","brokenRule","_rowValidating","getChangeByKey","errorText","getHiddenValidatorsErrorText","brokenRulesMessages","isGroupExpandColumn","isVisibleColumn","validate","isFull","completeList","_isValidationInProgress","validationResult","validateGroup","_currentCellValidator","_findGroup","_validationResult","ValidationEngine","validators","resetRowValidationResults","isRowDataModified","updateValidationState","setDisableApplyValidationResults","groupConfig","setValidator","renderCellPendingIndicator","LoadIndicator","disposeCellPendingIndicator","validationStatusChanged","updateCellValidationResult","validatorInitialized","validatorDisposing","getCellValidationResult","cancelCellValidationResult","applyValidationResult","requestIsDisabled","disabledPendingId","_disableApplyValidationResults","getEditorInstance","_syncInternalEditingData","_parameters$row","oldDataFromState","createValidator","needCreateValidator","_parameters$row$oldDa","_parameters$row2","isCellOrBatchEditingAllowed","getValue","useDefaultValidator","Validator","applyValidationResults","validationRequestsCallbacks","flag","getDisableApplyValidationResults","isCurrentValidatorProcessing","validateCell","cellParams","stateRestored","_validationData$valid","removeCellValidationResult","_ref6","isInvalidCell","_ref7","getCellValidator","_ref8","setCellValidationStatus","validationStatus","validatingModule","validating","validatingController","_updateRowAndPageIndices","startInsertIndex","_ref9","isNotCanceled","addInValidItem","isInserted","_createInvisibleColumnValidators","invisibleColumns","invisibleColumnValidators","isCellVisible","disposeValidators","isFullValid","_showErrorRow","shouldResetValidationState","columnsWithValidatingEditors","_col$validationRules","validationState","resetRowAndPageIndices","currentValidator","isValidated","needValidation","isCellInvalid","_showRevertButton","$tooltipElement","$overlayContainer","tooltipOptions","propagateOutsideClick","$buttonElement","buttonOptions","onPositioned","_positionedHandler","Overlay","_hideFixedGroupCell","overlayOptions","$nextFixedRowElement","$groupCellElement","nextRowOptions","visibility","isOverlayVisible","__skipPositionProcessing","isRevertButton","needRepaint","normalizedPosition","_normalizeValidationMessagePositionAndMaxWidth","_showValidationMessage","messages","revertTooltip","editorPopup","myPosition","atPosition","errorMessageText","invalidMessageClass","$overlayElement","_shiftValidationMessageIfNeed","fixedColumns","visibleTableWidth","w1","w2","$overlayContentElement","validationMessageWidth","needMaxWidth","boundaryNonFixedColumnsInfo","firstNonFixedColumnIndex","lastNonFixedColumnIndex","endColumnIndex","$revertContent","contentOffset","revertContentOffset","_getTooltipsSelector","revertTooltipClass","skipValidator","updateCellState","_change$data","showValidationMessage","errorMessages","$tooltips","_oldRow$cells","_cell$column$validati","oldValidationStatus","newValidationStatus","rowIsModified","cellIsMarkedAsInvalid","editingChanged","hasValidationRules","$freeSpaceRowElements","$tooltipContent","isEditorDisposed","contentTable","needTwoPagesLoading","_controller","isVirtual","getViewportItemIndex","getBeginPageIndex","_cache","getEndPageIndex","fireChanged","_isChangedFiring","processDelayChanged","_isDelayChanged","getViewportPageCount","_dataOptions","preventPreload","realViewportSize","viewportSize","viewportItemSize","getContentOffset","getViewportPosition","virtualItemsCount","begin","itemSize","getItemSizes","getPreloadPageCount","previous","getPageIndexForLoad","dataOptions","needToLoadPageBeforeLast","needToLoadPrevPage","needToLoadNextPage","_loadingPageIndexes","loadCore","processChanged","isDelayChanged","removeCacheItem","isPrepend","viewportItems","removeCount","correctCount","removeItemCount","itemsLength","updateLoading","_lastPageIndex","VirtualDataLoader","viewportItemIndexChanged","newPageIndex","lastPageSize","maxPageIndex","defaultPageIndex","endPageIndex","pageIndexForLoad","delayDeferred","_delayDeferred","onChanged","loadIfNeed","_setViewportPositionCore","handleDataChanged","removeInvisiblePages","lastCacheLength","getDelayDeferred","isBase","beginItemsCount","endItemsCount","end","_isVirtualMode","_isVirtual","_isAppendMode","subscribeToExternalScrollers","scrollChangedHandler","$scrollElement","scrollableArray","scrollToArray","disposeArray","getElementOffset","$scrollableElement","scrollableOffset","widgetScrollStrategy","handler","subscribeToScrollEvents","isDocument","eventsStrategy","topOffset","scrollMethod","VirtualScrollController","_viewportSize","_viewportItemSize","_viewportItemIndex","_position","_isScrollingBack","_contentSize","_itemSizes","_sizeRatio","positionChanged","_dataLoader","viewportParams","getViewportParams","loadedOffset","loadedItemCount","getScrollingTimeout","scrollingTimeout","_this$option","changingDuration","setViewportPosition","_scrollTimeoutID","getItemIndexByPosition","defaultItemSize","getItemSize","itemOffset","itemOffsetsWithSize","itemOffsetWithSize","itemOffsetDiff","isScrollingBack","prevPosition","setViewportItemIndex","setContentItemSizes","sizes","size","virtualContentSize","contentHeightLimit","getItemOffset","isEnd","currentItemIndex","getVirtualContentSize","viewportHeight","isRefresh","subscribeToWindowScrollEvents","_windowScroll","_this$option2","topIndex","bottomIndex","maxGap","minGap","topMinGap","bottomMinGap","remainedItems","BOTTOM_LOAD_PANEL_CLASS","TABLE_CONTENT_CLASS","FREESPACE_CLASS","VIRTUAL_ROW_CLASS","LOAD_TIMEOUT","VISIBLE_PAGE_INDEX","_correctCount","isItemCountableFunc","isItemCountableByDataSource","updateItemIndices","VirtualScrollingDataSourceAdapterExtender","_updateLoading","_virtualScrollController","_loadPageCount","_getVirtualScrollDataOptions","_renderTime","_startLoadTime","newMode","virtualScrollController","r","loadPageCount","takeIsDefined","VirtualScrollingRowsViewExtender","removeEmptyRows","$emptyRows","_dataController$state","scrollToPage","_scrollToCurrentPageOnResize","resizeHandler","scrollPosition","itemSizes","_updateContentPosition","startRenderTime","_removeRowsElements","_updateBottomLoading","_addVirtualRow","$virtualRow","_getRowHeights","rowHeights","_correctRowHeights","correctedRowHeights","visibleRows","firstCountableItem","lastLoadIndex","isRender","rowHeight","$virtualRows","_isFixedTableRendering","_isTableLinesDisplaysCorrect","table","hasColumnLines","_isColumnElementsEqual","$columns","$virtualColumns","_getCellClasses","classes","isExpandColumn","_findBottomLoadPanel","$bottomLoadPanel","showBottomLoading","bottomLoadPanelElement","zeroTopPosition","updateViewport","hasBottomLoadPanel","isViewportChanging","scrollPos","_dataController$loadI","virtualScrollingModule","updateTimeout","minTimeout","renderingThreshold","rowPageSize","prerenderedRowChunkSize","loadTwoPagesOnStart","legacyMode","prerenderedRowCount","baseResult","initVirtualRows","_rowsScrollController","_this$getLoadPagePara","getLoadPageParams","getRowPageSize","rowsScrollController","isSortingOperation","allowedTopOffset","virtualRowsRendering","_allItems","_loadViewportParams","_visibleItems","_rowPageIndex","_viewportChanging","_needUpdateViewportAfterLoading","_getRowsScrollDataOptions","_this$_dataSource2","loadViewport","_updateLoadViewportParams","isItemCountable","_that$_dataSource","_itemCount","isNextAfterLast","countableOnly","delta","cancelEmptyChanges","newItems","_dataSource$lastLoadO","prevCountable","prevRowType","isPrevRowNew","currentIndex","wasCountableItem","itemCountable","isNextGroupItem","isNextDataItem","isPrevNewRowFirst","skipForCurrentPage","it","isNewRowOnStart","isNewRowInEmptyData","isLoadIndexGreaterStart","isLoadIndexLessEnd","byLoadedRows","firstLoadIndex","_dataSource$lastLoadO2","_this$_rowsScrollCont","getPreloadedRowCount","preloadCount","byLoadedPage","_this$_dataSource3","_this$_dataSource4","loadedPageIndex","loadedTake","topPreloadCount","bottomPreloadCount","skipWithPreload","loadingTake","_updateVisiblePageIndex","currentPageIndex","viewPortItemIndex","_getChangedLoadParams","loadedPageParams","_loadItems","checkLoading","_dataSourceAdapter$lo","_dataSourceAdapter$pa","changedParams","currentLoadPageCount","lastRequiredItemCount","pageIndexNotChanged","allLoadedInAppendMode","viewportChanging","checkLoadedParamsOnly","loadingItemsStarted","_this$_loadViewportPa","_this$_loadViewportPa2","viewportIsNotFilled","currentTake","newTake","topItemIndex","_this$_loadViewportPa3","bottomItemIndex","_resizeTimeout","_lastTime","WINDOW_HEIGHT_PERCENT","getElementMaxHeightByWindow","startLocation","actualOffset","elementOffset","getInnerHeight","offsetTop","offsetBottom","DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS","DX_SUBMENU_CLASS","Submenu","super","orientation","onHoverStart","_initDataAdapter","_dataAdapter","_renderContextMenuOverlay","getNodeByKey","_renderItems","_getChildNodes","_renderDelimiter","$contentDelimiter","_itemContainer","_getOverlayOptions","_overlayPositionedActionHandler","_showDelimiter","_hoverEndHandler","_toggleFocusClass","_isMenuHorizontal","_hoverStartHandler","hoverStartAction","_drawSubmenu","$rootItem","rootItem","submenu","_hideSubmenu","$submenu","containerOffset","vLocation","hLocation","rootOffset","offsetLeft","rootWidth","rootHeight","submenuWidth","submenuHeight","animationPosition","_getContextMenuPosition","_overlay","getOverlayContent","DX_MENU_CLASS","DX_MENU_VERTICAL_CLASS","DX_MENU_HORIZONTAL_CLASS","DX_MENU_ITEM_CLASS","DX_MENU_ITEMS_CONTAINER_CLASS","DX_MENU_ITEM_EXPANDED_CLASS","DX_CONTEXT_MENU_CLASS","DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS","DX_STATE_DISABLED_CLASS","DX_STATE_HOVER_CLASS","DX_STATE_ACTIVE_CLASS","DX_ADAPTIVE_MODE_CLASS","DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS","DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS","FOCUS_UP","FOCUS_DOWN","FOCUS_LEFT","FOCUS_RIGHT","SHOW_SUBMENU_OPERATION","NEXTITEM_OPERATION","PREVITEM_OPERATION","DEFAULT_DELAY","ACTIONS","Menu","MenuBase","submenuDirection","showFirstSubmenuMode","hideSubmenuOnMouseLeave","onSubmenuShowing","onSubmenuShown","onSubmenuHiding","onSubmenuHidden","adaptivityEnabled","_setOptionsByReference","selectedItem","_itemElements","rootMenuElements","submenuElements","_submenuItemElements","itemSelector","currentSubmenu","_submenus","itemsContainer","_focusTarget","_moveFocus","navigationAction","$newTarget","$items","_getAvailableItems","isMenuHorizontal","$activeItem","_getActiveItem","_getItemsNavigationOperation","_getKeyboardNavigationAction","navOperation","_showSubmenu","_nextItem","_prevItem","_resizeEventTimer","_menuItemsWidth","_updateItemsWidthCache","_isAdaptivityEnabled","$menuItems","_getSummaryItemsWidth","containerWidth","_toggleAdaptiveMode","_initActions","_visibleSubmenu","_render","_initAdaptivity","_renderHamburgerButton","_hamburger","_toggleTreeView","_toggleHamburgerActiveState","$menuItemsContainer","$adaptiveElements","_hideVisibleSubmenu","_treeView","_removeAdaptivity","_$adaptiveContainer","_treeviewItemClickHandler","_getAdaptiveOverlayOptions","rtl","_ignoreFunctionValueDeprecation","_getTreeViewOptions","menuOptions","animationEnabled","onItemExpanded","onItemCollapsed","selectByClick","expandEvent","$hamburger","_getDelay","delayType","_keyboardHandler","_renderContainer","_renderSubmenuItems","$itemFrame","_createSubmenu","_renderBorderElement","_getKeyboardListeners","$submenuContainer","_getSubmenuOptions","_parentKey","internalFields","_clearTimeouts","getSubmenuPosition","_attachSubmenuHandlers","$submenuTarget","showSubmenuMode","disabledExpr","selectedExpr","itemsExpr","onFocusedItemChanged","_nestedItemOnSelectionChangedHandler","_nestedItemOnItemClickHandler","_nestedItemOnItemRenderedHandler","onLeftFirstItem","_moveMainMenuFocus","onLeftLastItem","onCloseRootSubmenu","onExpandLastSubmenu","_getShowFirstSubmenuMode","_isDesktopDevice","$currentItem","$newItem","addedItems","_clearSelectionInSubmenus","_clearRootSelection","targetSubmenu","cleanAllSubmenus","isOtherItem","$selectedItem","_selectedItemClass","selectedItemData","_getItemData","_clearSelectedItems","$prevSelectedItem","prevSelectedItemData","$submenuOverlayContent","submenus","submenuMouseLeaveName","hoverEventEnd","_submenuOnShowingHandler","_submenuOnShownHandler","_submenuOnHidingHandler","_submenuOnHiddenHandler","_submenuMouseLeaveHandler","$border","eventArgs","relatedTarget","_getSubmenuByRootElement","_hideSubmenuAfterTimeout","isRootItemHovered","isSubmenuItemHovered","hoveredElementFromSubMenu","isHorizontalMenu","submenuPosition","_itemPointerDownHandler","$closestItem","mouseMoveEventName","_getItemElementByEventArgs","getNodeByItem","isSelectionActive","which","_isItemDisabled","_hasChildren","_getSubmenuByElement","_itemMouseMoveHandler","_showSubmenuTimer","eventArg","_hideSubmenuTimer","$itemElement","_hoveredRootItem","pointers","_updateSubmenuVisibilityOnClick","_disabledGetter","_updateSelectedItemOnClick","_changeSubmenusOption","OPERATION_ICONS","OPERATION_DESCRIPTORS","FILTERING_TIMEOUT","CORRECT_FILTER_RANGE_OVERLAY_WIDTH","FILTER_RANGE_OVERLAY_CLASS","FILTER_RANGE_START_CLASS","FILTER_RANGE_END_CLASS","MENU_CLASS","EDITOR_WITH_MENU_CLASS","EDITOR_CONTAINER_CLASS","FILTER_MENU","APPLY_BUTTON_CLASS","HIGHLIGHT_OUTLINE_CLASS","FOCUSED_CLASS","FILTER_RANGE_CONTENT_CLASS","FILTER_MODIFIED_CLASS","BETWEEN_OPERATION_DATA_TYPES","isOnClickApplyFilterMode","ColumnHeadersViewFilterRowExtender","$editorContainer","componentNames","Editor","getRangeTextByFilterValue","rangeEnd","getColumnFilterValue","formatOptions","getColumnSelectedFilterOperation","bufferedSelectedFilterOperation","isFilterRange","isRangeStart","updateFilterValue","_applyFilterViewController","setHighLight","normalizedValue","columnFilterValue","isBetween","_updateEditorValue","$editorRangeElements","$menu","overlayInstance","_updateFilterRangeContent","_updateFilterOperationChooser","_renderFilterRangeContent","_renderEditor","_getEditorOptions","_hideFilterRange","_filterRangeOverlayInstance","isFilterRowVisible","_initFilterRangeOverlay","$overlay","$prevElement","prev","_updateFilterRangeOverlay","_showFilterRange","getFilterRangeOverlayInstance","_renderFilterCell","_renderFilterOperationChooser","accessibilityOptions","_getFilterInputAccessibilityAttributes","columnAriaLabel","$filterRangeContent","isCellWasFocused","menu","_focusEditor","selectable","_getFilterOperationMenuItems","properties","columnSelectedFilterOperation","notFocusEditor","isOnClickMode","_isEditorFocused","filterRowOptions","availableFilterOperations","descriptionName","DataControllerFilterRowExtender","skipCalculateColumnFilters","ApplyFilterViewController","_getHeaderPanel","_headerPanel","enableApplyButton","removeHighLights","columnHeadersViewElement","filterRowModule","columnsResizer","_startResizing","_targetPoint","_endResizing","filterItem","_prepareFilterItem","_isShowApplyFilterButton","core","HEADER_FILTER_CLASS","HEADER_FILTER_MENU_CLASS","DEFAULT_SEARCH_EXPRESSION","resetChildrenItemSelection","updateSelectAllState","selectAllCheckBox","isSearchEnabled","updateHeaderFilterItemSelectionState","filterValuesMatch","isExcludeFilter","HeaderFilterView","getPopupContainer","getListContainer","_listContainer","applyHeaderFilter","list","isFilterBuilder","fillSelectedItemKeys","isExclude","_getNode","hasChildren","hasChildrenWithSelection","hideHeaderFilterMenu","$columnElement","updatePopup","headerFilterMenu","_cleanPopupContent","_getSearchExpr","useDefaultSearchExpr","headerFilterDataSource","headerFilterOptions","_initializeListContainer","widgetOptions","List","pageLoadMode","showSelectionControls","_selectedItemsUpdating","oldSelected","filterValueIndex","headerFilterMixin","$headerFilterIndicator","_isHeaderFilterEmpty","DATE_INTERVAL_FORMATS","ungroupUTCDates","dateParts","dates","isMonthPart","convertDataFromUTCToLocal","isUTCFormat","HeaderFilterController","_headerFilterView","_updateSelectedState","_normalizeGroupItem","currentLevel","valueSelector","displaySelector","getHeaderItemText","firstValueText","secondValue","secondValueText","level","_column$headerFilter","isLookup","lookupDataSourceOptions","cutoffLevel","_currentColumn","useDefaultSearch","convertUTCDates","origPostProcess","getCurrentColumn","isGroupPanel","showHeaderFilterMenuBase","columnElement","dxResizableInstance","dxResizable","headerFilterByColumn","ColumnHeadersViewHeaderFilterExtender","_subscribeToIndicatorEvent","_updateHeaderFilterIndicators","_needUpdateFilterIndicators","HeaderPanelHeaderFilterExtender","headerFilterModule","headerFilterView","FILTER_BUILDER_RANGE_CLASS","FILTER_BUILDER_RANGE_START_CLASS","FILTER_BUILDER_RANGE_END_CLASS","FILTER_BUILDER_RANGE_SEPARATOR_CLASS","SEPARATOR","conditionInfo","$editorStart","$editorEnd","getStartValue","getEndValue","_editorFactory","getConfig","valueSeparator","notForLookup","isblank","isnotblank","OPERATION_NAME","getIconByFilterOperation","filterOperation","getNameByFilterOperation","DEFAULT_DATA_TYPE","EMPTY_MENU_ICON","AND_GROUP_OPERATION","EQUAL_OPERATION","NOT_EQUAL_OPERATION","boolean","object","DEFAULT_FORMAT","LOOKUP_OPERATIONS","AVAILABLE_FIELD_PROPERTIES","FILTER_BUILDER_CLASS","FILTER_BUILDER_ITEM_TEXT_CLASS","FILTER_BUILDER_ITEM_TEXT_PART_CLASS","FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS","FILTER_BUILDER_ITEM_TEXT_SEPARATOR_EMPTY_CLASS","getFormattedValueText","fieldFormat","isNegationGroup","isCondition","getGroupCriteria","setGroupCriteria","convertGroupToNewStructure","setGroupValue","substring","getGroupMenuItem","availableGroups","groupValue","getGroupValue","getCriteriaOperation","getDefaultFilterOperations","containItems","entity","getFilterOperations","getCaptionByOperation","filterOperationsDictionary","getOperationFromAvailable","availableOperations","getCustomOperation","filteredOperations","getAvailableOperations","isLookupField","isOperationForbidden","isCustom","getDefaultOperation","createCondition","updateConditionByOperation","removeItem","createEmptyGroup","isNegation","isNegationGroupOperation","groupOperation","getGroupOperationFromNegationOperation","addItem","getField","extendedFields","getItems","convertToInnerGroup","defaultGroupOperation","innerGroup","convertToInnerStructure","appendGroupOperationToGroup","convertToInnerCondition","conditionHasCustomOperation","appendGroupOperationToCriteria","getNormalizedFields","normalizedField","getConditionFilterExpression","filterExpression","getFilterExpression","_filterExpression","getNormalizedFilter","itemsForRemove","normalizedGroupValue","isValidCondition","getCurrentLookupValueText","lookupDataSource","loadSingle","getPrimitiveValueText","getArrayValueText","checkDefaultValue","getCurrentValueText","_len","_key","itemExists","pushItemAndCheckParent","originalItems","hasParent","getParentIdFromItemDataField","generateCaptionByDataField","lastIndexOf","arr","getCaptionWithParents","getOperationValue","getMergedOperations","betweenCaption","betweenIndex","isMatchedCondition","addedFilterDataField","removeFieldConditionsFromFilter","hasMatchedCondition","syncConditionIntoGroup","addedFilter","canPush","syncFilters","getMatchedConditions","filterHasField","renderValueText","lastItemIndex","t","baseOperation","grid","getFullText","itemText","parentText","lastIndex","div","closeEditor","fieldInfo","itemsDeferred","_values","getSelectedItemsTexts","selectedItemsTexts","anyOf","noneOf","baseOp","baseFilter","FILTER_ROW_OPERATIONS","FILTER_TYPES_INCLUDE","FILTER_TYPES_EXCLUDE","getColumnIdentifier","checkForErrors","FilterSyncController","getEmptyFilterValues","canSyncHeaderFilterWithFilterRow","getConditionFromFilterRow","getConditionFromHeaderFilter","selectedOperation","updateHeaderFilterCondition","headerFilterCondition","hasArrayValue","updateFilterRowCondition","syncFilterValue","_skipSyncColumnOptions","filterConditions","filterCondition","_initSync","filteringColumns","isFilterSyncActive","_getSyncFilterRow","_getSyncHeaderFilter","syncFilterRow","syncHeaderFilter","getCustomFilterOperations","filterBuilderCustomOperations","DataControllerFilterSyncExtender","filterSyncEnabledValue","calculatedFilterValue","_parseColumnPropertyName","matched","propertyName","ColumnHeadersViewFilterSyncExtender","filterSyncModule","filterSync","FILTER_BUILDER_GROUP_CLASS","FILTER_BUILDER_GROUP_ITEM_CLASS","FILTER_BUILDER_GROUP_CONTENT_CLASS","FILTER_BUILDER_GROUP_OPERATIONS_CLASS","FILTER_BUILDER_GROUP_OPERATION_CLASS","FILTER_BUILDER_ACTION_CLASS","FILTER_BUILDER_IMAGE_CLASS","FILTER_BUILDER_IMAGE_ADD_CLASS","FILTER_BUILDER_IMAGE_REMOVE_CLASS","FILTER_BUILDER_ITEM_FIELD_CLASS","FILTER_BUILDER_ITEM_OPERATION_CLASS","FILTER_BUILDER_ITEM_VALUE_CLASS","FILTER_BUILDER_ITEM_VALUE_TEXT_CLASS","FILTER_BUILDER_OVERLAY_CLASS","FILTER_BUILDER_FILTER_OPERATIONS_CLASS","FILTER_BUILDER_FIELDS_CLASS","FILTER_BUILDER_ADD_CONDITION_CLASS","ACTIVE_CLASS","FILTER_BUILDER_MENU_CUSTOM_OPERATION_CLASS","SOURCE","DISABLED_STATE_CLASS","TAB_KEY","ENTER_KEY","ESCAPE_KEY","OPERATORS","FilterBuilder","closePopupOnTargetScroll","_initCustomOperations","disableInvalidateForValue","_disableInvalidateForValue","_initModel","_getNormalizedFields","_model","_getFilterExpression","_customOperations","_updateFilter","_getModel","_initEditorFactory","_getDefaultGroupOperation","_this$option$","actionConfig","_createGroupElementByCriteria","_createConditionElement","_createConditionItem","$group","_createGroupElement","$groupContent","groupCriteria","innerCriteria","$groupItem","_createRemoveButton","_createGroupOperationButton","_createAddButton","newGroup","newCondition","_getGroupOperations","groupMenuItem","$operationButton","_createButtonWithMenu","removeMenu","info","treeViewElement","treeView","dxTreeView","_subscribeOnClickAndEnterKey","_createPopupWithTreeView","_hasValueButton","_createOperationButtonWithMenu","currentOperation","$valueButton","siblings","_createValueButton","_createOperationAndValueButtons","_createFieldButtonWithMenu","getFullCaption","$fieldButton","isSingleChild","$removeButton","addGroupHandler","addConditionHandler","click","_createValueText","$text","_createValueEditorWithEvents","_updateConditionValue","areValuesDifferent","_addDocumentKeyUp","isComposing","hasCompositionJustEnded","documentKeyUpHandler","input","_documentKeyUpHandler","_addDocumentClick","closeEditorFunc","documentClickHandler","_isFocusOnEditorParts","_documentClickHandler","activeElement","_removeEvents","createValueText","_createValueEditor","$popup","class","$menuContainer","FilterBuilderView","_updatePopupOptions","_initPopup","_filterBuilderPopup","_disposePopup","_filterBuilder","_getPopupContentTemplate","_getPopupToolbarItems","$filterBuilderContainer","ScrollView","filterBuilderModule","filterBuilderView","FILTER_PANEL_CLASS","FILTER_PANEL_TEXT_CLASS","FILTER_PANEL_CHECKBOX_CLASS","FILTER_PANEL_CLEAR_FILTER_CLASS","FILTER_PANEL_LEFT_CONTAINER","FILTER_PANEL_TARGET","FilterPanelView","$leftContainer","_filterValueBuffer","_getCheckElement","_getFilterElement","_getTextElement","_getRemoveButtonElement","CheckBox","_showFilterBuilder","_addTabIndexToElement","filterText","$textElement","getFilterText","customText","clearFilterValue","tabindex","_getConditionText","fieldText","operationText","_getValueMaskedText","_getValueText","hasCustomOperation","gridUtils","getConditionText","getGroupText","isInnerGroup","textParts","groupText","filterPanelModule","filterPanelView","SEARCH_PANEL_CLASS","SEARCH_TEXT_CLASS","searchModule","searchFilter","onQueryDone","valueGetter","_i","getSearchPanelOptions","_prepareSearchItem","searchPanelOptions","$search","getSearchTextEditor","$searchPanel","dxTextBox","_searchParams","_getFormattedSearchText","_getStringNormalizer","isCaseSensitive","_findHighlightingTextNodes","_$items","stringNormalizer","normalizedSearchText","resultTextNodes","$contents","normalizedText","_highlightSearchTextCore","$textNode","$searchTextSpan","firstContentElement","after","_highlightSearchText","isEquals","textNodes","textNode","_highlightTimer","GridPagerWrapper","pageIndexChanged","pageSizeChanged","toNumber","attribute","getElementStyle","_getElementComputedSt","computedStyle","getElementComputedStyle","getElementWidth","getElementMinWidth","_excluded","viewFunction","contentAttributes","infoTextRef","infoTextVisible","isLargeDisplayMode","pageSizesRef","pagesRef","parentRef","Content","rootElementRef","calculateAdaptivityProps","infoWidth","pageSizes","pageSizesWidth","pages","pagesWidth","parentWidth","minimalWidth","getElementsWidth","pagesHtmlWidth","ResizableContainerProps","TemplateProp","normalizeProps","createComponentVNode","ResizableContainer","InfernoComponent","infernoCreateRef","subscribeToResize","effectUpdateChildProps","updateAdaptivityProps","createEffects","InfernoEffect","pagerProps","updateEffects","_this$_effects$","_this$_effects$2","_effects","resizeCallbacks","gridCompatibility","lightModeEnabled","maxPagesCount","pageIndexChange","pageSizeChange","pagesCountText","pagesNavigatorVisible","showPageSizes","restAttributes","currentElementsWidth","actualAdaptivityProps","elementsWidth","setState","__state_argument","_this$props","restProps","_objectWithoutPropertiesLoose","BasePagerProps","PagerProps","getOwnPropertyDescriptors","defaultPageSize","InternalPagerProps","PAGER_INFO_CLASS","createVNode","InfoTextPropsType","InfoText","BaseInfernoComponent","_this$props$infoText","KeyboardActionContext","createContext","widgetRef","LightButtonProps","LightButton","keyboardEffect","subscribeToClick","keyboardContext","subscribeToClickEvent","PAGER_CLASS","LIGHT_MODE_CLASS","PAGER_PAGES_CLASS","PAGER_PAGE_INDEXES_CLASS","PAGER_PAGE_CLASS","PAGER_SELECTION_CLASS","PAGER_PAGE_SIZE_CLASS","PAGER_PAGE_SIZES_CLASS","PAGER_SELECTED_PAGE_SIZE_CLASS","PageProps","Page","combineClasses","_excluded2","PAGER_PAGE_SEPARATOR_CLASS","PagesMarkup","pageProps","createFragment","PAGES_LIMITER","getDelimiterType","startIndex","slidingWindowSize","createPageIndexesBySlidingWindowIndexes","slidingWindowIndexes","delimiter","pageIndexes","indexesForReuse","createPageIndexes","PagesLargePropsType","PagesLarge","canReuseSlidingWindow","generatePageIndexes","isSlidingWindowMode","onPageClick","ConfigContext","slidingWindowState","slidingWindowStateHolder","currentPageCount","currentPageNotExistInIndexes","includes","pageIndexExistInIndexes","_createPageIndexes","_this$config","createPage","rtlPageIndexes","DEFAULT_VALUE","DomComponentWrapper","componentType","LegacyNumberBox","componentProps","templateNames","NumberBoxProps","BaseWidgetProps","defaultValue","isReactComponentWrapper","NumberBox","_this$props$value","oneDigitWidth","calculateValuesFittedWidth","PAGER_INFO_TEXT_CLASS","PAGER_PAGE_INDEX_CLASS","LIGHT_PAGES_CLASS","PAGER_PAGES_COUNT_CLASS","pageIndexRef","selectLastPageIndex","valueChange","PagerSmallProps","PagesSmall","updateWidth","_this$pageIndexRef$cu","el","_this$props$pagesCoun","PAGER_NAVIGATE_BUTTON","PAGER_PREV_BUTTON_CLASS","PAGER_NEXT_BUTTON_CLASS","PAGER_BUTTON_DISABLE_CLASS","nextButtonClassName","prevButtonClassName","nextButtonDisabledClassName","prevButtonDisabledClassName","navigateToNextPage","navigateToPrevPage","nextClassName","prevClassName","renderNextButton","renderPrevButton","getIncrement","PageIndexSelectorProps","PageIndexSelectorPropsType","PageIndexSelector","getNextDirection","getPrevDirection","canNavigateToPage","getNextPageIndex","canNavigateTo","navigateToPage","_this$config2","canNavigate","LegacySelectBox","SelectBoxProps","SelectBox","PageSizeSmallPropsType","PageSizeSmall","p","pageSizesText","PageSizeLargePropsType","PageSizeLarge","__getterCache","onPageSizeChange","processedPageSize","componentWillUpdate","nextProps","nextState","htmlRef","normalizedPageSizes","getAllText","PageSizeSelectorProps","PageSizeSelectorPropsType","PageSizeSelector","setRootElementRef","infoVisible","pageIndexSelectorVisible","pagesContainerVisibility","pagesContainerVisible","widgetRootElementRef","normalizeStyles","PagerContentProps","PagerContent","createFakeInstance","getChildContext","keyboardAction","_this$props$onKeyDown","fakePagerInstance","_registerKeyboardAction","normalizedDisplayMode","classesMap","_this$props2","Pager","InfernoWrapperComponent","createReRenderEffect","__newValue","_newValue","newPageSize","_this$props$pageSize$","getProps","_wrapKeyDownHandler","_propsInfo","twoWay","allowNull","_viewComponent","PagerComponent","MAX_PAGES_COUNT","getPageIndex","PagerView","_getPager","pagerOptions","useLegacyKeyboardNavigation","_pageSizes","pagerVisible","isPager","isPaging","isDataSource","isScrolling","pagerModule","COLUMNS_SEPARATOR_CLASS","COLUMNS_SEPARATOR_TRANSPARENT","DRAGGING_HEADER_CLASS","HEADERS_DRAG_ACTION_CLASS","TRACKER_CLASS","HEADERS_DROP_HIGHLIGHT_CLASS","BLOCK_SEPARATOR_CLASS","WIDGET_CLASS","DRAGGING_COMMAND_CELL_CLASS","COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH","DRAGGING_DELTA","COLUMN_OPACITY","TrackerView","_unsubscribeFromCallback","_positionChanged","_tablePositionController","_subscribeToCallback","_setHeight","SeparatorView","_renderSeparator","_isShown","ColumnsSeparatorView","_isTransparent","columnsSeparatorTransparent","moveByX","outerX","changeCursor","cursorName","BlockSeparatorView","startAnimate","toOptions","fx","DraggingHeaderView","_isDragging","isDragging","_getDraggingPanelByPos","_dragOptions","boundingRect","_resetTargetColumnOptions","_dropOptions","targetColumnIndex","targetColumnElement","isLast","posX","posY","_getVisibleIndexObject","_columnsResizerViewController","dragHeader","isCommandColumn","sourceIndex","sourceColumnIndex","sourceColumnElement","_onSelectStart","onselectstart","drag","whiteSpace","swatchContainer","moveHeader","eventData","getEventData","dragOptions","moveDeltaX","abs","deltaX","moveDeltaY","deltaY","newLeft","newTop","dockHeader","targetDraggingPanel","isVerticalOrientation","axisName","pointsByTarget","pointsByColumns","_generatePointsByColumns","centerPosition","dock","dropHeader","drop","isNextColumnResizingMode","ColumnsResizerViewController","_isHeadersRowArea","headersRowHeight","_isRtlParentStyle","_this$_$parentContain","_$parentContainer","_pointCreated","isNextColumnMode","isRtlParentStyle","firstPointColumnIndex","nextColumn","_getTargetPoint","currentX","_moveSeparator","_that$_draggingHeader","columnsSeparatorWidth","_columnsSeparatorView","parentOffset","parentOffsetLeft","_draggingHeaderView","_isResizing","_resizingInfo","_updateColumnsWidthIfNeeded","currentColumnIndex","outerWidth","_previousParentOffset","_isReadyResizing","_trackerView","_getNextColumnIndex","_setupResizingInfo","nextColumnIndex","currentHeader","nextHeader","startPosX","currentColumnWidth","nextColumnWidth","isTouchEvent","_pointsByColumns","_unsubscribeFromEvents","_moveSeparatorHandler","_startResizingHandler","_endResizingHandler","_subscribeToEvents","nextCellWidth","cellWidth","needUpdate","resizingInfo","setColumnWidth","oldColumnWidth","allColumnsHaveWidth","totalPercent","hasScroll","_subscribesToCallbacks","_unsubscribeFromCallbacks","subscribe","_unsubscribes","generatePointsByColumnsHandler","generatePointsByColumnsScrollHandler","previousScrollbarVisibility","previousTableHeight","scrollbarVisibility","TablePositionViewController","diffOffsetTop","columnsHeadersHeight","scrollBarWidth","columnsResizerController","draggingHeaderView","isDraggingOrResizing","_pagerView","targetPoint","DraggingHeaderViewController","draggingHeader","nameDraggingPanel","subscribeToEvents","dragEventStart","dragEventMove","dragEventEnd","_getSeparator","_blockSeparatorView","hideSeparators","blockSeparator","columnsSeparator","_animationColumnIndex","_headerPanelView","_columnChooserView","allowDrop","headersView","separator","hasTargetVisibleIndex","columnsResizingReorderingModule","columnsSeparatorView","blockSeparatorView","trackerView","tablePosition","GROUP_FOOTER_CLASS","FREESPACE_ROW_CLASS","COMMAND_CELL_SELECTOR","DATEBOX_WIDGET_NAME","FAST_EDITING_DELETE_KEY","INTERACTIVE_ELEMENTS_SELECTOR","NON_FOCUSABLE_ELEMENTS_SELECTOR","FOCUS_TYPE_ROW","FOCUS_TYPE_CELL","COLUMN_HEADERS_VIEW","isNotFocusedRow","isCellElement","_isRowEditMode","isElementDefined","isMobile","isCellInHeaderRow","isFixedColumnIndexOffsetRequired","shouldPreventScroll","_isVirtualScrolling","KeyboardNavigationController","_selectionController","_updateFocusTimeout","_fastEditingStarted","_focusedCellPosition","_canceledCellPosition","setupFocusedView","_isNeedScroll","_focusedView","_initViewHandlers","_initDocumentHandlers","rowsViewFocusHandler","isRelatedTargetInRowsView","isCommandButton","_isEventInCurrentGrid","$focusedCell","_getFocusedCell","$rowsView","isFocusedViewCorrect","needUpdateFocus","isFocusedElementCorrect","_initPointerEventHandler","_initKeyDownHandler","_setRowsViewAttributes","_isNeedFocus","_isHiddenFocus","isCurrentRowsViewClick","isEditorOverlay","isColumnResizing","targetInsideFocusedView","_resetFocusedCell","_resetFocusedView","_getRowsViewElement","isGridEmpty","_applyTabIndexToElement","pointerEventName","clickSelector","_pointerEventAction","_pointerEventHandler","keyboard","_keyDownListener","_keyDownHandler","isRowFocusType","focusType","isCellFocusType","setRowFocusType","setCellFocusType","needStopPropagation","_processOnKeyDown","isDefaultPrevented","_updateFocusedCellPositionByTarget","_leftRightKeysHandler","ctrl","_upDownKeysHandler","_pageUpDownKeyHandler","_spaceKeyHandler","_ctrlAKeyHandler","_beginFastEditing","_tabKeyHandler","_enterKeyHandler","_escapeKeyHandler","_ctrlFKeyHandler","_f2KeyHandler","_isFastEditingAllowed","_isFastEditingStarted","alt","altKey","_closeEditCell","getVisibleRowIndex","$event","directionCode","_getDirectionCodeByKey","isEditingNavigationMode","allowNavigate","_isVirtualColumnRender","_processVirtualHorizontalPosition","_getNextCell","_arrowKeysHandlerFocusCell","isUpArrow","_navigateNextCell","_isVirtualRowRender","_scrollBy","isPageUp","pageStep","isFocusedRowElement","_getElementType","isFocusedSelectionCell","isCellPositionDefined","isOriginalHandlerRequired","_isLastValidCell","_isFirstValidCell","eventTarget","focusedViewElement","_handleTabKeyOnMasterDetailCell","_editingCellTabHandler","_targetCellTabHandler","_getMaxHorizontalOffset","_isColumnRendered","allVisibleColumns","renderedVisibleColumns","_isFixedColumn","_isColumnVirtual","localColumnIndex","getColumnIndex","horizontalScrollPosition","needToScroll","_getVisibleColumnCount","leftEdgePosition","_getHorizontalScrollPositionOffset","scrollBy","positionOffset","$currentCell","_getCell","currentCellWidth","rtlMultiplier","isEditingAllowed","_getCellElementFromTarget","elementType","_updateFocusedCellPosition","nextCellInfo","_getNextCellByTabKey","_getRowIndex","_isDataRow","_focusCell","isHighlighted","_editFocusedCell","_focusInteractiveElement","$lastInteractiveElement","_getInteractiveElement","getFirstValidCellInRow","_checkNewLineTransition","_fireFocusedCellChanging","$newCellElement","_getCellPosition","_fireFocusedRowChanging","rowIndexChanged","setFocusedColumnIndex","_processEnterKeyForDataCell","_getEnterKeyDirection","allowEditingOnEnterKey","_allowEditingOnEnterKey","_handleEnterKeyEditingCell","_startEditing","isShift","_focusEditFormCell","searchTextEditor","keyCode","isCellValid","_isCellValid","$nextCell","isVerticalDirection","_fireFocusChangingEvents","_focus","isDeleting","fastEditingKey","fromCharCode","isInteractiveElement","isExpandCommandCell","_isInsideEditForm","_focusView","_isMasterDetailCell","_clickTargetCellHandler","_isCellEditMode","setFocusedRowIndex","prevRowIndex","resetFocusedRow","_resetFocusedRow","_allowRowUpdating","skipFocusEvent","isEditor","isDisabled","activeElementSelector","_focusElement","getFocusedView","rowsViewElement","$focusedView","_getFocusedViewByElement","$view","disableFocus","$focusElement","focusedView","isRowFocus","isRenderView","_hasSkipRow","_checkCellOverlapped","$focusedElementInsideCell","isFocusedElementDefined","cellOffset","hasScrollable","isOverlapped","_this$_focusedCellPos","setFocusedCellPosition","_getFocusedColumnIndexOffset","_getFixedColumnIndexOffset","_applyColumnIndexBoundaries","preventScroll","_this$_focusedView","renderFocusState","restoreFocusableElement","newRowIndex","_getNewPositionByCode","visibleColumnsCount","_hasValidCellAfterPosition","_isLastRow","_hasValidCellBeforePosition","_isCellByPositionValid","getMaxRowIndex","isFirstValidCell","hasValidCells","checkingPosition","visibleColumnCount","isLastRow","isClick","isShowWhenGrouped","isDataCell","rowItems","isRowEditingInCurrentRow","_isLegacyNavigation","$result","focusedCellPosition","includeCommandCells","newFocusedCellPosition","isLastCellOnDirection","_isCellInRow","visibleColumnIndex","_isAllowEditing","_startEditCell","colIndex","editResult","_editingCellHandler","editorValue","_$input$get$select","_$input$get","$input","keyDownEvent","createEvent","keyPressEvent","inputEvent","$widgetContainer","fireRowEvent","newColumnIndex","prevCellIndex","prevColumnIndex","_fireFocusedCellChanged","localRowIndex","$newFocusedRow","prevFocusedRowIndex","_fireFocusedRowChanged","getFocusedRowIndexByKey","$masterDetailCell","$masterDetailGrid","_processNextCellInMasterDetail","_processCanceledEditCellPosition","isCanceled","updateFocusedRowIndex","lastVisibleIndex","keyboardNavigationModule","needTriggerPointerEventHandler","_triggerPointerDownEventHandler","cellElements","updateFocusElementTabIndex","_updateFocusedCellTabIndex","cellElementsLength","updateCellTabIndex","isMasterDetailCell","isValidCell","_renderFocusByChange","editorInstance","_getEditorInstance","_handleEditingNavigationMode","originalKeyHandler","isDropDownOpened","isDateBoxWithMask","keyboardNavigationController","_keyboardNavigationController","getRowIndexCorrection","focusedRowIndexCorrection","adaptiveColumns","_showHiddenCellsInView","_hideVisibleCellInView","depthFirstSearch","depth","array","isCount","aggregator","aggregators","normalizeAggregate","aggregate","_data","_groupLevel","_totalAggregates","totalAggregates","_groupAggregates","groupAggregates","_totals","calculate","_calculateTotals","_calculateGroups","_aggregate","aggregates","_accumulate","_seed","_finalize","maxLevel","seedFn","stepFn","finalizeFn","innerNode","seed","NaN","aggregateIndex","step","fin","finalize","DATAGRID_TOTAL_FOOTER_CLASS","DATAGRID_SUMMARY_ITEM_CLASS","DATAGRID_TEXT_CONTENT_CLASS","DATAGRID_GROUP_FOOTER_CLASS","DATAGRID_GROUP_TEXT_CONTENT_CLASS","DATAGRID_NOWRAP_CLASS","DATAGRID_GROUP_FOOTER_ROW_TYPE","renderSummaryCell","$summaryItems","getSummaryCellOptions","getGroupAggregates","FooterView","footerItems","needUpdateScrollLeft","$newTable","$newRow","totalColumnIndices","SummaryDataSourceAdapterExtender","_summaryGetter","summaryGetter","_summary","sortByGroupsInfo","sortByGroups","groupedItems","forEachGroup","itemsPath","SummaryDataSourceAdapterClientExtender","calculateAggregates","calculator","insertedData","applyAddedData","removedData","applyRemovedData","updatedData","updatedItems","set","AggregateCalculator","sortGroupsBySummary","sortGroupsBySummaryCore","sortBy","thenBy","sortedItems","totalSummary","_options$cachedData$e","hasOperations","_isDataColumn","_isGroupFooterVisible","isGroupFooterVisible","summaryGroupItems","afterGroupColumnIndex","_calculateSummaryCells","calculateTargetColumnIndex","summaryCellsByColumns","summaryIndex","_getSummaryCells","summaryTotalItems","_footerItems","oldSummaryCells","summaryCell","_prepareUnsavedDataSelector","_prepareAggregateSelector","_getAggregates","commonSkipEmptyValues","summaryProcess","totalValue","_addSortInfo","_findSummaryItem","summaryItemIndex","_getSummarySortByGroups","groupSummaryItems","currentRemoteOperations","_getSummaryOptions","totalSummaryItems","methods","getTotalSummaryValue","summaryItemName","_refreshSummary","_renderGroupSummaryCells","_hasAlignByColumnSummaryItems","_getAlignByColumnCellCount","groupCellColSpan","alignByColumnCellCount","$groupCell","_renderGroupSummaryCellsCore","_getSummaryCellIndex","FIRST_CELL_CLASS","LAST_CELL_CLASS","HOVER_STATE_CLASS","FIXED_COL_CLASS","FIXED_COLUMNS_CLASS","POINTER_EVENTS_NONE_CLASS","getTransparentColumnIndex","normalizeColumnWidths","fixedWidths","fixedColumnIndex","baseFixedColumns","_isFixedColumns","_correctColumnIndicesForFixedColumns","_partialUpdateFixedTable","fixedTableElement","_fixedTableElement","childNodes","$fixedTable","fixedCorrection","fixedCells","prevFixedColumn","columnCommand","isRowAltStyle","isEmptyCell","isFixedTableRendering","isGroupCell","alignByFixedColumnCellCount","headerRowIndex","fixedCellElements","fixedColumn","getFixedColumnsOffset","$transparentColumn","getTransparentColumnElement","positionTransparentColumn","getFixedTableElement","synchronizeRows","isWidthsSynchronized","isColumnWidthChanged","useVisibleColumns","_getClientHeight","boundingClientRectElement","$fixedRowElements","fixedRowHeights","heightTable","heightFixedTable","fixedRowHeight","ColumnHeadersViewFixedColumnsExtender","columnFixingOptions","getFixedColumnElements","$transparentColumnElement","$fixedColumnElements","RowsViewFixedColumnsExtender","_detachHoverEvents","_attachHoverEvents","attachHoverEvent","isHover","contentClass","scrollDelay","_fixedScrollTimeout","wheelEventName","$nearestScrollable","shouldScroll","nearestScrollableInstance","nearestScrollableHasVerticalScrollbar","_updateFixedTablePosition","needFocus","vWidth","hWidth","styles","$fixedContent","_getElasticScrollTop","elasticScrollTop","reachedBottom","scrollableContent","$scrollableContainer","maxScrollTop","_applyElasticScrolling","move","FooterViewFixedColumnsExtender","columnFixingModule","normalizeColumnIndicesByPoints","correctIndex","pointsByFixedColumns","_pointsByFixedColumns","isWidgetResizingMode","ROWS_VIEW","FOOTER_VIEW","COLUMN_VIEWS","ADAPTIVE_NAMESPACE","ADAPTIVE_ROW_TYPE","FORM_ITEM_CONTENT_CLASS","FORM_ITEM_MODIFIED","HIDDEN_COLUMN_CLASS","ADAPTIVE_COLUMN_BUTTON_CLASS","ADAPTIVE_COLUMN_NAME_CLASS","COMMAND_ADAPTIVE_HIDDEN_CLASS","ADAPTIVE_DETAIL_ROW_CLASS","ADAPTIVE_ITEM_TEXT_CLASS","LAST_DATA_CELL_CLASS","ADAPTIVE_COLUMN_NAME","EXPAND_ARIA_NAME","COLLAPSE_ARIA_NAME","getDataCellElements","adaptiveCellTemplate","$adaptiveColumnButton","adaptiveColumnsController","toggleExpandAdaptiveDetailRow","AdaptiveColumnsController","_getEditMode","_isItemModified","_renderFormViewTemplate","focusAction","renderFormTemplate","isItemEdited","_isItemEdited","_isVisibleColumnsValid","_calculatePercentWidths","percentWidths","_getItemPercentWidth","_isPercentWidth","_isColumnHidden","_hiddenColumns","hiddenColumn","columnsCanFit","fixedColumnsWidth","columnsWithoutFixedWidthCount","_calculatePercentWidth","_calculateColumnWidth","contentColumns","colWidth","widthOption","columnFitted","partialWidth","resultWidth","_getNotTruncatedColumnWidth","_getCommandColumnsWidth","adaptiveExpandedKey","_getFormItemsByHiddenColumns","hiddenColumns","_getAdaptiveColumnVisibleIndex","_hideAdaptiveColumn","_hideVisibleColumn","cssClassNameToRemove","_showHiddenColumns","$hiddenCommandCells","$hiddenCells","_hideVisibleColumnInView","rowsCount","cancelClassAdding","currentVisibleIndex","_findCellElementInRow","$rowCells","cellIsInsideGroup","groupCellLength","endGroupIndex","cssClassNameToAdd","hideRedundantColumns","hiddenQueue","hasHiddenColumns","needHideColumn","rootElementWidth","getVisibleContentColumns","visibleContentColumns","contentColumnsCount","columnBestFitWidth","getItemContentByColumnIndex","$itemContent","_$itemContents","alwaysExpanded","createFormByHiddenColumns","userFormOptions","defaultFormOptions","formOptions","_form","updateForm","hasAdaptiveDetailRowExpanded","_contentReadyAction","updateHidingQueue","columnsHasHidingPriority","hideableColumns","_hidingColumnsQueue","getHiddenColumns","getHidingColumnsQueue","adaptiveHidden","isAdaptiveVisible","isAdaptiveDetailRowExpanded","expandAdaptiveDetailRow","collapseAdaptiveDetailRow","updateCommandAdaptiveAriaLabel","setCommandAdaptiveAriaLabel","labelName","$adaptiveCommand","adaptivityModule","_adaptiveColumnsController","hidingColumnsQueueLength","hiddenColumnsLength","isClickable","_updateColumnWidth","hasHiddenColumnsOnly","hasAdaptiveHiddenWidth","$itemContents","_adaptiveController","oldExpandRowIndex","_isForceRowAdaptiveExpand","_collapseAdaptiveDetailRow","_cancelEditAdaptiveDetailRow","expandedKey","_adaptiveExpandedKey","adaptiveController","oldHiddenColumns","hidingColumnsQueue","_updateScrollableTimeoutID","expandRowIndex","lastRowIndex","oldExpandLoadedRowIndex","newExpandLoadedRowIndex","oldKey","isCellOrBatchMode","focusHandler","$dataCells","isCellElementsEquals","foreachColumnInfo","offsets","lastProcessedIndexes","processedColumnCount","createColumnsInfo","endIndex","newInfo","columnInfo","cellColspan","DEFAULT_COLUMN_WIDTH","setScrollPosition","HeaderViewExtender","ColumnsControllerExtender","getWidths","_beginPageIndex","_endPageIndex","_virtualVisibleColumns","currentPosition","getColumnPageSize","getTotalWidth","_fireColumnsChanged","_changedTimeout","_setScrollPositionCore","needColumnsChanged","visibleColumnsHash","beginFixedColumnCount","beginFixedColumns","beginColumns","beginWidth","endFixedColumnCount","endFixedColumns","endColumns","endWidth","columnsInfo","leftFixedColumnCount","virtualColumnsModule","columnPageSize","columnRenderingThreshold","_getEmptyCell","_defaultSetter","_cloneItem","_prepareItems","cols","_c","BUTTON_GROUP_CLASS","BUTTON_GROUP_WRAPPER_CLASS","BUTTON_GROUP_ITEM_CLASS","BUTTON_GROUP_FIRST_ITEM_CLASS","BUTTON_GROUP_LAST_ITEM_CLASS","BUTTON_GROUP_ITEM_HAS_WIDTH","SHAPE_STANDARD_CLASS","ButtonCollection","CollectionWidget","_initTemplates","_templateManager","addDefaultTemplates","BindableTemplate","_prepareItemStyles","_getBasicButtonOptions","_templateData","_hasCustomTemplate","stylingMode","itemTemplateProperty","_renderItemContent","_renderItemContentByNode","_keyboardEventBindingTarget","_refreshContent","_prepareContent","_itemClass","_itemSelectHandler","ButtonGroup","buttonTemplate","_createItemClickAction","_itemClickAction","_renderButtons","_syncSelectionOptions","_fireSelectionChangeEvent","removedItems","$buttons","selectionRequired","_buttonsCollection","itemElements","DROP_DOWN_BUTTON_CLASS","DROP_DOWN_BUTTON_CONTENT","DROP_DOWN_BUTTON_ACTION_CLASS","DROP_DOWN_BUTTON_TOGGLE_CLASS","DROP_DOWN_BUTTON_HAS_ARROW_CLASS","DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS","DROP_DOWN_EDITOR_OVERLAY_CLASS","DX_BUTTON_TEXT_CLASS","DX_ICON_RIGHT_CLASS","DropDownButton","selectedItemKey","useSelectMode","splitButton","showArrowIcon","onButtonClick","opened","dropDownOptions","dropDownContentTemplate","wrapItemText","useItemTextAsTitle","groupTemplate","buttonGroupOptions","_createActionClickAction","_createSelectionChangedAction","_compileKeyGetter","_compileDisplayGetter","_itemsToDataSource","_options","cache","FunctionTemplate","$listContainer","_list","_listOptions","_escHandler","_getKey","storeKey","_keyGetter","_displayGetter","_renderButtonGroup","_updateArrowClass","_loadSelectedItem","_updateActionButton","_renderFocusTarget","_renderPopup","_popup","_renderPopupContent","_this$_loadSingleDefe","_loadSingleDeferred","_lastSelectedItemData","cachedResult","_loadSingle","_actionClickAction","_selectionChangedAction","_fireSelectionChangedAction","previousItem","_fireItemClickAction","_actionItem","_actionButtonConfig","_getButtonGroupItems","_buttonGroupItemClick","isActionButton","isToggleButton","_buttonGroupOptions","buttonContent","$firstIcon","getImageContainer","$textContainer","$secondIcon","onKeyboardHandled","_getTemplateByOption","_popupContentId","_popupOptions","horizontalAlignment","$buttonClicked","actionResult","_buttonGroup","_upDownKeyHandler","open","close","_tabHandler","_popupHidingHandler","_popupShowingHandler","_bindInnerWidgetOptions","_setAriaExpanded","_popupOptionChanged","_setPopupOption","optionsKeys","popupWidth","getSizeValue","_setWidgetOption","_ariaExpandedElements","ariaElement","owns","$buttonGroup","buttonElements","hasArrow","_setListOption","_getDisplayValue","isPrimitiveItem","_selectedItemKeyChanged","_actionButtonOptionChanged","newConfig","_selectModeChanged","_updateItemCollection","_updateDataSource","_updateKeyExpr","_this$_popup","_innerWidgetOptionChanged","DATAGRID_EXPORT_MENU_CLASS","DATAGRID_EXPORT_BUTTON_CLASS","DATAGRID_EXPORT_TOOLBAR_BUTTON_NAME","DATAGRID_EXPORT_ICON","DATAGRID_EXPORT_EXCEL_ICON","DATAGRID_EXPORT_SELECTED_ICON","DATAGRID_EXPORT_EXCEL_BUTTON_ICON","DataProvider","initialColumnWidthsByColumnIndex","selectedRowsOnly","_exportController","_initialColumnWidthsByColumnIndex","_selectedRowsOnly","_getGroupValue","_correctCellIndex","_initOptions","_getColumns","_selectionOnly","_getSelectedItems","_getAllItems","isHeadersVisible","wrapTextEnabled","hasCustomizeExcelCell","cellSourceData","gridCell","getHeaderStyles","bold","wrapText","getGroupRowStyle","getColumnStyles","columnStyles","getStyles","_getTotalCellStyleId","_this$getColumns$cell","getStyleId","getHeaderRowCount","isTotalCell","getColumnsByAllRows","getColumnsWidths","getGroupLevel","getCellType","ready","_convertFromGridGroupSummaryItems","gridGroupSummaryItems","getCellData","isExcelJS","correctedCellIndex","columnsRow","gridColumn","itemValues","totalSummaryItemName","correctCellIndex","isSummaryAlignByColumn","getCellMerging","exportColspan","getFrozenArea","ExportController","exportMixin","currentHeaderRow","columnWidthsByColumnIndex","_getColumnWidths","_headersView","_needColumnExporting","currentColspan","_calculateExportColspan","childColumns","childColumn","_getFooterSummaryItems","isTotal","estimatedItemsCount","_hasSummaryGroupFooters","_getItemsWithSummaryGroupFooters","sourceItems","beforeGroupFooterItems","groupFooterItems","_updateGroupValuesWithSummaryByColumn","summaryValues","groupColumnCount","merge","_processUnExportedItems","isDetailExpandColumn","selectedRowData","getExportFormat","getDataProvider","columnsLastRowVisibleColumns","exportToExcel","clientExport","autoFilterEnabled","ignoreErrors","exportingAction","exportedAction","fileSavingAction","excel","_isSelectedRows","callbackList","exportButton","_getExportToolbarButton","_correctItemsPosition","_getExportToolbarItems","toolbarButtonOptions","_widgetOptions","_index","exportOptions","itemA","itemB","_isExportButtonVisible","_getButtonOptions","allowExportSelected","ROW_FOCUSED_CLASS","TABLE_POSTFIX_CLASS","FocusController","_keyboardController","_focusRowByIndex","_triggerFocusedRowChangedIfNeed","_focusRowByKey","focusedRowIndexByKey","isAutoNavigateToFocusedRow","_focusRowByIndexCore","setKeyByIndex","_isValidFocusedRowIndex","_getLastItemIndex","isRowFocused","_isLocalRowIndex","isVirtualScrolling","virtualItems","virtualItemsBegin","visibleRowsCount","visiblePagesCount","_setFocusedRowKeyByIndex","_navigateToRow","isFocusedRowKeyDefined","needFocusRow","isAutoNavigate","rowIndexByKey","_navigateTo","getPageIndexByKey","isVirtualRowRenderingMode","_navigateToVirtualRow","_navigateToVisibleRow","_triggerUpdateFocusedRow","scrollToRowElement","triggerUpdateFocusedRow","scrollTopPosition","_focusRowByKeyOrIndex","currentFocusedRowIndex","updateFocusedRow","isMainTable","_clearPreviousFocusedRow","_prepareFocusedRow","changedItem","$prevRowFocusedElement","focusedRow","$focusedRowTable","$firstRow","scrollToElementVertically","focusModule","visibleRow","isRowElement","sortByKey","notSortedKeys","notSortedKey","isPartialUpdate","isPartialUpdateWithDeleting","_updatePageIndexes","processUpdateFocusedRow","prevRenderingPageIndex","_lastRenderingPageIndex","renderingPageIndex","_isPagingByRendering","isPagingByRendering","isValidRowIndexByKey","needFocusRowByIndex","getGlobalRowIndexByKey","_calculateGlobalRowIndexByGroupedData","_calculateGlobalRowIndexByFlatData","groupFilter","useGroup","_generateFilterByKey","_concatWithCombinedFilter","_generateOperationFilterByKey","_generateBooleanFilter","sortInfo","isBoolean","booleanFilter","sortFilter","dataSourceKey","keyPart","_setFocusedRowElementTabIndex","_findRowElementForTabIndex","_scrollToFocusOnResize","getScrollElementPosition","currentScrollTop","isRowClick","_isFocusedRowInsideGroup","_getGroupPath","groupPath","_expandGroupByPath","isGroupKey","_calculateExpandedRowGlobalIndex","dataOffset","groupContinuationCount","currentPageOffset","COMMAND_HANDLE_CLASS","HANDLE_ICON_CLASS","SORTABLE_WITHOUT_HANDLE_CLASS","RowDraggingExtender","_updateHandleColumn","_allowReordering","isHandleColumnVisible","_getHandleTemplate","sortableName","sortableFixedName","currentSortableName","anotherSortableName","togglePointerEventsStyle","_this$sortableFixedNa","Sortable","_getDraggableRowTemplate","_rowDragging$onDragSt","onDragEnter","onDragLeave","_rowDragging$onDragEn","_rowDragging$onAdd","hasFixedSortable","_updateSortable","_sortable","_sortableFixed","sortable","_getDraggableGridOptions","gridOptions","$dataGridContainer","rowDraggingModule"],"sourceRoot":""}