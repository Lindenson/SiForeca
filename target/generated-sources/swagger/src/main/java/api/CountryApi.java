/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.34).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package api;

import model.MapOfIndicators;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2022-06-26T20:34:21.785972722+02:00[Europe/Bratislava]")
@Validated
public interface CountryApi {

    @Operation(summary = "Get a set of indicators for a specified country", description = "Group of indicators for a specified country", tags={ "country" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "OK", content = @Content(mediaType = "application/json", schema = @Schema(implementation = MapOfIndicators.class))),
        
        @ApiResponse(responseCode = "405", description = "Invalid input"),
        
        @ApiResponse(responseCode = "500", description = "Server error"),
        
        @ApiResponse(responseCode = "403", description = "Unauthorised") })
    @RequestMapping(value = "/country/{cname}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<MapOfIndicators> getCountr(@NotNull @Parameter(in = ParameterIn.QUERY, description = "Sector code" ,required=true,schema=@Schema()) @Valid @RequestParam(value = "sector", required = true) String sector, @NotNull @Parameter(in = ParameterIn.QUERY, description = "Activity code" ,required=true,schema=@Schema()) @Valid @RequestParam(value = "activity", required = true) String activity, @Parameter(in = ParameterIn.PATH, description = "Country name", required=true, schema=@Schema()) @PathVariable("cname") String cname, @Parameter(in = ParameterIn.HEADER, description = "Interface" ,schema=@Schema()) @RequestHeader(value="Content-Language", required=false) String contentLanguage);

}

