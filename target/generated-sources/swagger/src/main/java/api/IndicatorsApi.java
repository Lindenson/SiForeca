/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.34).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package api;

import model.CodeAndName;
import model.ForTreeList;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2022-06-26T20:34:21.785972722+02:00[Europe/Bratislava]")
@Validated
public interface IndicatorsApi {

    @Operation(summary = "Get a map of sector and its activities", description = "Map activities to sector", tags={ "indicator" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "OK", content = @Content(mediaType = "application/json", schema = @Schema(implementation = ForTreeList.class))),
        
        @ApiResponse(responseCode = "405", description = "Invalid input"),
        
        @ApiResponse(responseCode = "500", description = "Server error"),
        
        @ApiResponse(responseCode = "403", description = "Unauthorised") })
    @RequestMapping(value = "/indicators/sector",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ForTreeList> getActivity(@Parameter(in = ParameterIn.HEADER, description = "Interface" ,schema=@Schema()) @RequestHeader(value="Content-Language", required=false) String contentLanguage);


    @Operation(summary = "List of indicators", description = "List of all indicators in a database", tags={ "indicator" })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "OK", content = @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = CodeAndName.class)))),
        
        @ApiResponse(responseCode = "405", description = "Invalid input"),
        
        @ApiResponse(responseCode = "500", description = "Server error"),
        
        @ApiResponse(responseCode = "403", description = "Unauthorised") })
    @RequestMapping(value = "/indicators",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<CodeAndName>> getInds(@Parameter(in = ParameterIn.HEADER, description = "Interface" ,schema=@Schema()) @RequestHeader(value="Content-Language", required=false) String contentLanguage);

}

