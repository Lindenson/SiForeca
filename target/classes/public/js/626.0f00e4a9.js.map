{"version":3,"file":"js/626.0f00e4a9.js","mappings":"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","sources":["webpack://siforeca/./node_modules/devextreme-vue/data-grid.js","webpack://siforeca/./node_modules/devextreme/esm/ui/shared/filtering.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.utils.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.modules.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.column_state_mixin.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.columns_view.js","webpack://siforeca/./node_modules/devextreme/esm/ui/shared/accessibility.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.accessibility.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.column_headers.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.column_headers.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.columns_controller.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.columns_controller.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.data_source_adapter.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.data_source_adapter.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.data_controller.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.data_controller.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.sorting_mixin.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.sorting.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.sorting.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.rows.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.rows.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.context_menu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.context_menu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.error_handling.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.error_handling.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.grid_view.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grid_view.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.header_panel.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.header_panel.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.base.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.state_storing_core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.state_storing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.state_storing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.selection.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.selection.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.column_chooser.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.column_chooser.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grouping.core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.utils.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grouping.expanded.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grouping.collapsed.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grouping.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.master_detail.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.master_detail.js","webpack://siforeca/./node_modules/devextreme/esm/ui/shared/ui.editor_factory_mixin.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editor_factory.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editor_factory.js","webpack://siforeca/./node_modules/devextreme/esm/ui/dialog.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing_constants.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing_row_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editing_row_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing_form_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editing_form_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing_cell_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editing_cell_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.validating.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.validating.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid.core.virtual_data_loader.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_scrolling_core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_scrolling.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.virtual_scrolling.js","webpack://siforeca/./node_modules/devextreme/esm/ui/overlay/utils.js","webpack://siforeca/./node_modules/devextreme/esm/ui/menu/ui.submenu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/menu/ui.menu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/menu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_row.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.filter_row.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.header_filter_core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.header_filter.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.header_filter.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder/between.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder/ui.filter_operations_dictionary.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder/utils.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_custom_operations.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_sync.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.filter_sync.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder/filter_builder.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_builder.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.filter_builder.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_panel.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.filter_panel.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.search.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.search.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/component_wrapper/grid_pager.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/utils/type_conversion.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/utils/get_element_width.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/resizable_container.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/base_pager_props.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/pager_props.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/info.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/keyboard_action_context.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/light_button.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/consts.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pages/page.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pages/large.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/editors/number_box.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/utils/calculate_values_fitted_width.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pages/small.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pages/page_index_selector.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/editors/drop_down_editors/select_box.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/page_size/small.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/page_size/large.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/page_size/selector.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/content.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pager.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pager.j.js","webpack://siforeca/./node_modules/devextreme/esm/ui/pager.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.pager.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.pager.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.columns_resizing_reordering.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.columns_resizing_reordering.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.keyboard_navigation.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/aggregate_calculator.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.keyboard_navigation.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.summary.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.column_fixing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.column_fixing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.adaptivity.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_columns_core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.adaptivity.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_columns.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.virtual_columns.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.export_mixin.js","webpack://siforeca/./node_modules/devextreme/esm/ui/button_group.js","webpack://siforeca/./node_modules/devextreme/esm/ui/drop_down_button.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.export.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.focus.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.focus.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.row_dragging.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.row_dragging.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid.js"],"sourcesContent":["/*!\n * devextreme-vue\n * Version: 21.2.6\n * Build date: Tue Mar 01 2022\n *\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-vue\n */\n\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DxLookup = exports.DxLoadPanel = exports.DxLabel = exports.DxKeyboardNavigation = exports.DxItem = exports.DxHide = exports.DxHeaderFilter = exports.DxGroupPanel = exports.DxGroupOperationDescriptions = exports.DxGroupItem = exports.DxGroupingTexts = exports.DxGrouping = exports.DxFrom = exports.DxFormItem = exports.DxFormat = exports.DxForm = exports.DxFilterRow = exports.DxFilterPanelTexts = exports.DxFilterPanel = exports.DxFilterOperationDescriptions = exports.DxFilterBuilderPopup = exports.DxFilterBuilder = exports.DxFieldLookup = exports.DxField = exports.DxExportTexts = exports.DxExport = exports.DxEmailRule = exports.DxEditingTexts = exports.DxEditing = exports.DxDataGridHeaderFilterTexts = exports.DxDataGridHeaderFilter = exports.DxCustomRule = exports.DxCustomOperation = exports.DxCursorOffset = exports.DxCompareRule = exports.DxColumnLookup = exports.DxColumnHeaderFilter = exports.DxColumnFixingTexts = exports.DxColumnFixing = exports.DxColumnChooser = exports.DxColumn = exports.DxCollision = exports.DxColCountByScreen = exports.DxChange = exports.DxButton = exports.DxBoundaryOffset = exports.DxAt = exports.DxAsyncRule = exports.DxAnimation = exports.DxDataGrid = void 0;\nexports.DxValueFormat = exports.DxValidationRule = exports.DxTotalItem = exports.DxToolbarItem = exports.DxToolbar = exports.DxTo = exports.DxTexts = exports.DxSummaryTexts = exports.DxSummary = exports.DxStringLengthRule = exports.DxStateStoring = exports.DxSorting = exports.DxSortByGroupSummaryInfo = exports.DxShow = exports.DxSelection = exports.DxSearchPanel = exports.DxScrolling = exports.DxRowDragging = exports.DxRequiredRule = exports.DxRemoteOperations = exports.DxRangeRule = exports.DxPosition = exports.DxPopup = exports.DxPatternRule = exports.DxPaging = exports.DxPager = exports.DxOperationDescriptions = exports.DxOffset = exports.DxNumericRule = exports.DxMy = exports.DxMasterDetail = void 0;\nvar data_grid_1 = __importDefault(require(\"devextreme/ui/data_grid\"));\nvar index_1 = require(\"./core/index\");\nvar index_2 = require(\"./core/index\");\nvar DxDataGrid = index_1.createComponent({\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        allowColumnReordering: Boolean,\n        allowColumnResizing: Boolean,\n        autoNavigateToFocusedRow: Boolean,\n        cacheEnabled: Boolean,\n        cellHintEnabled: Boolean,\n        columnAutoWidth: Boolean,\n        columnChooser: Object,\n        columnFixing: Object,\n        columnHidingEnabled: Boolean,\n        columnMinWidth: Number,\n        columnResizingMode: String,\n        columns: Array,\n        columnWidth: [Number, String],\n        customizeColumns: Function,\n        customizeExportData: Function,\n        dataRowTemplate: {},\n        dataSource: [Array, Object, String],\n        dateSerializationFormat: String,\n        disabled: Boolean,\n        editing: Object,\n        elementAttr: Object,\n        errorRowEnabled: Boolean,\n        export: Object,\n        filterBuilder: Object,\n        filterBuilderPopup: Object,\n        filterPanel: Object,\n        filterRow: Object,\n        filterSyncEnabled: [Boolean, String],\n        filterValue: [Array, Function, String],\n        focusedColumnIndex: Number,\n        focusedRowEnabled: Boolean,\n        focusedRowIndex: Number,\n        focusedRowKey: {},\n        focusStateEnabled: Boolean,\n        grouping: Object,\n        groupPanel: Object,\n        headerFilter: Object,\n        height: [Function, Number, String],\n        highlightChanges: Boolean,\n        hint: String,\n        hoverStateEnabled: Boolean,\n        keyboardNavigation: Object,\n        keyExpr: [Array, String],\n        loadPanel: Object,\n        masterDetail: Object,\n        noDataText: String,\n        onAdaptiveDetailRowPreparing: Function,\n        onCellClick: Function,\n        onCellDblClick: Function,\n        onCellHoverChanged: Function,\n        onCellPrepared: Function,\n        onContentReady: Function,\n        onContextMenuPreparing: Function,\n        onDataErrorOccurred: Function,\n        onDisposing: Function,\n        onEditCanceled: Function,\n        onEditCanceling: Function,\n        onEditingStart: Function,\n        onEditorPrepared: Function,\n        onEditorPreparing: Function,\n        onExported: Function,\n        onExporting: Function,\n        onFileSaving: Function,\n        onFocusedCellChanged: Function,\n        onFocusedCellChanging: Function,\n        onFocusedRowChanged: Function,\n        onFocusedRowChanging: Function,\n        onInitialized: Function,\n        onInitNewRow: Function,\n        onKeyDown: Function,\n        onOptionChanged: Function,\n        onRowClick: Function,\n        onRowCollapsed: Function,\n        onRowCollapsing: Function,\n        onRowDblClick: Function,\n        onRowExpanded: Function,\n        onRowExpanding: Function,\n        onRowInserted: Function,\n        onRowInserting: Function,\n        onRowPrepared: Function,\n        onRowRemoved: Function,\n        onRowRemoving: Function,\n        onRowUpdated: Function,\n        onRowUpdating: Function,\n        onRowValidating: Function,\n        onSaved: Function,\n        onSaving: Function,\n        onSelectionChanged: Function,\n        onToolbarPreparing: Function,\n        pager: Object,\n        paging: Object,\n        remoteOperations: [Boolean, Object, String],\n        renderAsync: Boolean,\n        repaintChangesOnly: Boolean,\n        rowAlternationEnabled: Boolean,\n        rowDragging: Object,\n        rowTemplate: {},\n        rtlEnabled: Boolean,\n        scrolling: Object,\n        searchPanel: Object,\n        selectedRowKeys: Array,\n        selection: Object,\n        selectionFilter: [Array, Function, String],\n        showBorders: Boolean,\n        showColumnHeaders: Boolean,\n        showColumnLines: Boolean,\n        showRowLines: Boolean,\n        sortByGroupSummaryInfo: Array,\n        sorting: Object,\n        stateStoring: Object,\n        summary: Object,\n        tabIndex: Number,\n        toolbar: Object,\n        twoWayBindingEnabled: Boolean,\n        visible: Boolean,\n        width: [Function, Number, String],\n        wordWrapEnabled: Boolean\n    },\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:allowColumnReordering\": null,\n        \"update:allowColumnResizing\": null,\n        \"update:autoNavigateToFocusedRow\": null,\n        \"update:cacheEnabled\": null,\n        \"update:cellHintEnabled\": null,\n        \"update:columnAutoWidth\": null,\n        \"update:columnChooser\": null,\n        \"update:columnFixing\": null,\n        \"update:columnHidingEnabled\": null,\n        \"update:columnMinWidth\": null,\n        \"update:columnResizingMode\": null,\n        \"update:columns\": null,\n        \"update:columnWidth\": null,\n        \"update:customizeColumns\": null,\n        \"update:customizeExportData\": null,\n        \"update:dataRowTemplate\": null,\n        \"update:dataSource\": null,\n        \"update:dateSerializationFormat\": null,\n        \"update:disabled\": null,\n        \"update:editing\": null,\n        \"update:elementAttr\": null,\n        \"update:errorRowEnabled\": null,\n        \"update:export\": null,\n        \"update:filterBuilder\": null,\n        \"update:filterBuilderPopup\": null,\n        \"update:filterPanel\": null,\n        \"update:filterRow\": null,\n        \"update:filterSyncEnabled\": null,\n        \"update:filterValue\": null,\n        \"update:focusedColumnIndex\": null,\n        \"update:focusedRowEnabled\": null,\n        \"update:focusedRowIndex\": null,\n        \"update:focusedRowKey\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:grouping\": null,\n        \"update:groupPanel\": null,\n        \"update:headerFilter\": null,\n        \"update:height\": null,\n        \"update:highlightChanges\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:keyboardNavigation\": null,\n        \"update:keyExpr\": null,\n        \"update:loadPanel\": null,\n        \"update:masterDetail\": null,\n        \"update:noDataText\": null,\n        \"update:onAdaptiveDetailRowPreparing\": null,\n        \"update:onCellClick\": null,\n        \"update:onCellDblClick\": null,\n        \"update:onCellHoverChanged\": null,\n        \"update:onCellPrepared\": null,\n        \"update:onContentReady\": null,\n        \"update:onContextMenuPreparing\": null,\n        \"update:onDataErrorOccurred\": null,\n        \"update:onDisposing\": null,\n        \"update:onEditCanceled\": null,\n        \"update:onEditCanceling\": null,\n        \"update:onEditingStart\": null,\n        \"update:onEditorPrepared\": null,\n        \"update:onEditorPreparing\": null,\n        \"update:onExported\": null,\n        \"update:onExporting\": null,\n        \"update:onFileSaving\": null,\n        \"update:onFocusedCellChanged\": null,\n        \"update:onFocusedCellChanging\": null,\n        \"update:onFocusedRowChanged\": null,\n        \"update:onFocusedRowChanging\": null,\n        \"update:onInitialized\": null,\n        \"update:onInitNewRow\": null,\n        \"update:onKeyDown\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onRowClick\": null,\n        \"update:onRowCollapsed\": null,\n        \"update:onRowCollapsing\": null,\n        \"update:onRowDblClick\": null,\n        \"update:onRowExpanded\": null,\n        \"update:onRowExpanding\": null,\n        \"update:onRowInserted\": null,\n        \"update:onRowInserting\": null,\n        \"update:onRowPrepared\": null,\n        \"update:onRowRemoved\": null,\n        \"update:onRowRemoving\": null,\n        \"update:onRowUpdated\": null,\n        \"update:onRowUpdating\": null,\n        \"update:onRowValidating\": null,\n        \"update:onSaved\": null,\n        \"update:onSaving\": null,\n        \"update:onSelectionChanged\": null,\n        \"update:onToolbarPreparing\": null,\n        \"update:pager\": null,\n        \"update:paging\": null,\n        \"update:remoteOperations\": null,\n        \"update:renderAsync\": null,\n        \"update:repaintChangesOnly\": null,\n        \"update:rowAlternationEnabled\": null,\n        \"update:rowDragging\": null,\n        \"update:rowTemplate\": null,\n        \"update:rtlEnabled\": null,\n        \"update:scrolling\": null,\n        \"update:searchPanel\": null,\n        \"update:selectedRowKeys\": null,\n        \"update:selection\": null,\n        \"update:selectionFilter\": null,\n        \"update:showBorders\": null,\n        \"update:showColumnHeaders\": null,\n        \"update:showColumnLines\": null,\n        \"update:showRowLines\": null,\n        \"update:sortByGroupSummaryInfo\": null,\n        \"update:sorting\": null,\n        \"update:stateStoring\": null,\n        \"update:summary\": null,\n        \"update:tabIndex\": null,\n        \"update:toolbar\": null,\n        \"update:twoWayBindingEnabled\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n        \"update:wordWrapEnabled\": null,\n    },\n    computed: {\n        instance: function () {\n            return this.$_instance;\n        }\n    },\n    beforeCreate: function () {\n        this.$_WidgetClass = data_grid_1.default;\n        this.$_hasAsyncTemplate = true;\n        this.$_expectedChildren = {\n            column: { isCollectionItem: true, optionName: \"columns\" },\n            columnChooser: { isCollectionItem: false, optionName: \"columnChooser\" },\n            columnFixing: { isCollectionItem: false, optionName: \"columnFixing\" },\n            dataGridHeaderFilter: { isCollectionItem: false, optionName: \"headerFilter\" },\n            editing: { isCollectionItem: false, optionName: \"editing\" },\n            export: { isCollectionItem: false, optionName: \"export\" },\n            filterBuilder: { isCollectionItem: false, optionName: \"filterBuilder\" },\n            filterBuilderPopup: { isCollectionItem: false, optionName: \"filterBuilderPopup\" },\n            filterPanel: { isCollectionItem: false, optionName: \"filterPanel\" },\n            filterRow: { isCollectionItem: false, optionName: \"filterRow\" },\n            grouping: { isCollectionItem: false, optionName: \"grouping\" },\n            groupPanel: { isCollectionItem: false, optionName: \"groupPanel\" },\n            headerFilter: { isCollectionItem: false, optionName: \"headerFilter\" },\n            keyboardNavigation: { isCollectionItem: false, optionName: \"keyboardNavigation\" },\n            loadPanel: { isCollectionItem: false, optionName: \"loadPanel\" },\n            masterDetail: { isCollectionItem: false, optionName: \"masterDetail\" },\n            pager: { isCollectionItem: false, optionName: \"pager\" },\n            paging: { isCollectionItem: false, optionName: \"paging\" },\n            remoteOperations: { isCollectionItem: false, optionName: \"remoteOperations\" },\n            rowDragging: { isCollectionItem: false, optionName: \"rowDragging\" },\n            scrolling: { isCollectionItem: false, optionName: \"scrolling\" },\n            searchPanel: { isCollectionItem: false, optionName: \"searchPanel\" },\n            selection: { isCollectionItem: false, optionName: \"selection\" },\n            sortByGroupSummaryInfo: { isCollectionItem: true, optionName: \"sortByGroupSummaryInfo\" },\n            sorting: { isCollectionItem: false, optionName: \"sorting\" },\n            stateStoring: { isCollectionItem: false, optionName: \"stateStoring\" },\n            summary: { isCollectionItem: false, optionName: \"summary\" },\n            toolbar: { isCollectionItem: false, optionName: \"toolbar\" }\n        };\n    }\n});\nexports.DxDataGrid = DxDataGrid;\nvar DxAnimation = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:hide\": null,\n        \"update:show\": null,\n    },\n    props: {\n        hide: [Object, Number, String],\n        show: [Object, Number, String]\n    }\n});\nexports.DxAnimation = DxAnimation;\nDxAnimation.$_optionName = \"animation\";\nDxAnimation.$_expectedChildren = {\n    hide: { isCollectionItem: false, optionName: \"hide\" },\n    show: { isCollectionItem: false, optionName: \"show\" }\n};\nvar DxAsyncRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:reevaluate\": null,\n        \"update:type\": null,\n        \"update:validationCallback\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        reevaluate: Boolean,\n        type: String,\n        validationCallback: Function\n    }\n});\nexports.DxAsyncRule = DxAsyncRule;\nDxAsyncRule.$_optionName = \"validationRules\";\nDxAsyncRule.$_isCollectionItem = true;\nDxAsyncRule.$_predefinedProps = {\n    type: \"async\"\n};\nvar DxAt = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: String,\n        y: String\n    }\n});\nexports.DxAt = DxAt;\nDxAt.$_optionName = \"at\";\nvar DxBoundaryOffset = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: Number,\n        y: Number\n    }\n});\nexports.DxBoundaryOffset = DxBoundaryOffset;\nDxBoundaryOffset.$_optionName = \"boundaryOffset\";\nvar DxButton = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:cssClass\": null,\n        \"update:disabled\": null,\n        \"update:hint\": null,\n        \"update:icon\": null,\n        \"update:name\": null,\n        \"update:onClick\": null,\n        \"update:template\": null,\n        \"update:text\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        cssClass: String,\n        disabled: [Boolean, Function],\n        hint: String,\n        icon: String,\n        name: String,\n        onClick: Function,\n        template: {},\n        text: String,\n        visible: [Boolean, Function]\n    }\n});\nexports.DxButton = DxButton;\nDxButton.$_optionName = \"buttons\";\nDxButton.$_isCollectionItem = true;\nvar DxChange = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:data\": null,\n        \"update:insertAfterKey\": null,\n        \"update:insertBeforeKey\": null,\n        \"update:type\": null,\n    },\n    props: {\n        data: {},\n        insertAfterKey: {},\n        insertBeforeKey: {},\n        type: String\n    }\n});\nexports.DxChange = DxChange;\nDxChange.$_optionName = \"changes\";\nDxChange.$_isCollectionItem = true;\nvar DxColCountByScreen = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:lg\": null,\n        \"update:md\": null,\n        \"update:sm\": null,\n        \"update:xs\": null,\n    },\n    props: {\n        lg: Number,\n        md: Number,\n        sm: Number,\n        xs: Number\n    }\n});\nexports.DxColCountByScreen = DxColCountByScreen;\nDxColCountByScreen.$_optionName = \"colCountByScreen\";\nvar DxCollision = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: String,\n        y: String\n    }\n});\nexports.DxCollision = DxCollision;\nDxCollision.$_optionName = \"collision\";\nvar DxColumn = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignment\": null,\n        \"update:allowEditing\": null,\n        \"update:allowExporting\": null,\n        \"update:allowFiltering\": null,\n        \"update:allowFixing\": null,\n        \"update:allowGrouping\": null,\n        \"update:allowHeaderFiltering\": null,\n        \"update:allowHiding\": null,\n        \"update:allowReordering\": null,\n        \"update:allowResizing\": null,\n        \"update:allowSearch\": null,\n        \"update:allowSorting\": null,\n        \"update:autoExpandGroup\": null,\n        \"update:buttons\": null,\n        \"update:calculateCellValue\": null,\n        \"update:calculateDisplayValue\": null,\n        \"update:calculateFilterExpression\": null,\n        \"update:calculateGroupValue\": null,\n        \"update:calculateSortValue\": null,\n        \"update:caption\": null,\n        \"update:cellTemplate\": null,\n        \"update:columns\": null,\n        \"update:cssClass\": null,\n        \"update:customizeText\": null,\n        \"update:dataField\": null,\n        \"update:dataType\": null,\n        \"update:editCellTemplate\": null,\n        \"update:editorOptions\": null,\n        \"update:encodeHtml\": null,\n        \"update:falseText\": null,\n        \"update:filterOperations\": null,\n        \"update:filterType\": null,\n        \"update:filterValue\": null,\n        \"update:filterValues\": null,\n        \"update:fixed\": null,\n        \"update:fixedPosition\": null,\n        \"update:format\": null,\n        \"update:formItem\": null,\n        \"update:groupCellTemplate\": null,\n        \"update:grouped\": null,\n        \"update:groupIndex\": null,\n        \"update:headerCellTemplate\": null,\n        \"update:headerFilter\": null,\n        \"update:hidingPriority\": null,\n        \"update:isBand\": null,\n        \"update:lookup\": null,\n        \"update:minWidth\": null,\n        \"update:name\": null,\n        \"update:ownerBand\": null,\n        \"update:renderAsync\": null,\n        \"update:resized\": null,\n        \"update:selectedFilterOperation\": null,\n        \"update:setCellValue\": null,\n        \"update:showEditorAlways\": null,\n        \"update:showInColumnChooser\": null,\n        \"update:showWhenGrouped\": null,\n        \"update:sortIndex\": null,\n        \"update:sortingMethod\": null,\n        \"update:sortOrder\": null,\n        \"update:trueText\": null,\n        \"update:type\": null,\n        \"update:validationRules\": null,\n        \"update:visible\": null,\n        \"update:visibleIndex\": null,\n        \"update:width\": null,\n    },\n    props: {\n        alignment: String,\n        allowEditing: Boolean,\n        allowExporting: Boolean,\n        allowFiltering: Boolean,\n        allowFixing: Boolean,\n        allowGrouping: Boolean,\n        allowHeaderFiltering: Boolean,\n        allowHiding: Boolean,\n        allowReordering: Boolean,\n        allowResizing: Boolean,\n        allowSearch: Boolean,\n        allowSorting: Boolean,\n        autoExpandGroup: Boolean,\n        buttons: Array,\n        calculateCellValue: Function,\n        calculateDisplayValue: [Function, String],\n        calculateFilterExpression: Function,\n        calculateGroupValue: [Function, String],\n        calculateSortValue: [Function, String],\n        caption: String,\n        cellTemplate: {},\n        columns: Array,\n        cssClass: String,\n        customizeText: Function,\n        dataField: String,\n        dataType: String,\n        editCellTemplate: {},\n        editorOptions: {},\n        encodeHtml: Boolean,\n        falseText: String,\n        filterOperations: Array,\n        filterType: String,\n        filterValue: {},\n        filterValues: Array,\n        fixed: Boolean,\n        fixedPosition: String,\n        format: [Object, Function, String],\n        formItem: Object,\n        groupCellTemplate: {},\n        grouped: Boolean,\n        groupIndex: Number,\n        headerCellTemplate: {},\n        headerFilter: Object,\n        hidingPriority: Number,\n        isBand: Boolean,\n        lookup: Object,\n        minWidth: Number,\n        name: String,\n        ownerBand: Number,\n        renderAsync: Boolean,\n        resized: Function,\n        selectedFilterOperation: String,\n        setCellValue: Function,\n        showEditorAlways: Boolean,\n        showInColumnChooser: Boolean,\n        showWhenGrouped: Boolean,\n        sortIndex: Number,\n        sortingMethod: Function,\n        sortOrder: String,\n        trueText: String,\n        type: String,\n        validationRules: Array,\n        visible: Boolean,\n        visibleIndex: Number,\n        width: [Number, String]\n    }\n});\nexports.DxColumn = DxColumn;\nDxColumn.$_optionName = \"columns\";\nDxColumn.$_isCollectionItem = true;\nDxColumn.$_expectedChildren = {\n    AsyncRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    button: { isCollectionItem: true, optionName: \"buttons\" },\n    columnHeaderFilter: { isCollectionItem: false, optionName: \"headerFilter\" },\n    columnLookup: { isCollectionItem: false, optionName: \"lookup\" },\n    CompareRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    CustomRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    EmailRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    format: { isCollectionItem: false, optionName: \"format\" },\n    formItem: { isCollectionItem: false, optionName: \"formItem\" },\n    headerFilter: { isCollectionItem: false, optionName: \"headerFilter\" },\n    lookup: { isCollectionItem: false, optionName: \"lookup\" },\n    NumericRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    PatternRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    RangeRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    RequiredRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    StringLengthRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    validationRule: { isCollectionItem: true, optionName: \"validationRules\" }\n};\nvar DxColumnChooser = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSearch\": null,\n        \"update:emptyPanelText\": null,\n        \"update:enabled\": null,\n        \"update:height\": null,\n        \"update:mode\": null,\n        \"update:searchTimeout\": null,\n        \"update:sortOrder\": null,\n        \"update:title\": null,\n        \"update:width\": null,\n    },\n    props: {\n        allowSearch: Boolean,\n        emptyPanelText: String,\n        enabled: Boolean,\n        height: Number,\n        mode: String,\n        searchTimeout: Number,\n        sortOrder: String,\n        title: String,\n        width: Number\n    }\n});\nexports.DxColumnChooser = DxColumnChooser;\nDxColumnChooser.$_optionName = \"columnChooser\";\nvar DxColumnFixing = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:enabled\": null,\n        \"update:texts\": null,\n    },\n    props: {\n        enabled: Boolean,\n        texts: Object\n    }\n});\nexports.DxColumnFixing = DxColumnFixing;\nDxColumnFixing.$_optionName = \"columnFixing\";\nDxColumnFixing.$_expectedChildren = {\n    columnFixingTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxColumnFixingTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:fix\": null,\n        \"update:leftPosition\": null,\n        \"update:rightPosition\": null,\n        \"update:unfix\": null,\n    },\n    props: {\n        fix: String,\n        leftPosition: String,\n        rightPosition: String,\n        unfix: String\n    }\n});\nexports.DxColumnFixingTexts = DxColumnFixingTexts;\nDxColumnFixingTexts.$_optionName = \"texts\";\nvar DxColumnHeaderFilter = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSearch\": null,\n        \"update:dataSource\": null,\n        \"update:groupInterval\": null,\n        \"update:height\": null,\n        \"update:searchMode\": null,\n        \"update:width\": null,\n    },\n    props: {\n        allowSearch: Boolean,\n        dataSource: [Array, Object, Function],\n        groupInterval: [Number, String],\n        height: Number,\n        searchMode: String,\n        width: Number\n    }\n});\nexports.DxColumnHeaderFilter = DxColumnHeaderFilter;\nDxColumnHeaderFilter.$_optionName = \"headerFilter\";\nvar DxColumnLookup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowClearing\": null,\n        \"update:calculateCellValue\": null,\n        \"update:dataSource\": null,\n        \"update:displayExpr\": null,\n        \"update:valueExpr\": null,\n    },\n    props: {\n        allowClearing: Boolean,\n        calculateCellValue: Function,\n        dataSource: [Array, Object, Function],\n        displayExpr: [Function, String],\n        valueExpr: String\n    }\n});\nexports.DxColumnLookup = DxColumnLookup;\nDxColumnLookup.$_optionName = \"lookup\";\nvar DxCompareRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:comparisonTarget\": null,\n        \"update:comparisonType\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:type\": null,\n    },\n    props: {\n        comparisonTarget: Function,\n        comparisonType: String,\n        ignoreEmptyValue: Boolean,\n        message: String,\n        type: String\n    }\n});\nexports.DxCompareRule = DxCompareRule;\nDxCompareRule.$_optionName = \"validationRules\";\nDxCompareRule.$_isCollectionItem = true;\nDxCompareRule.$_predefinedProps = {\n    type: \"compare\"\n};\nvar DxCursorOffset = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: Number,\n        y: Number\n    }\n});\nexports.DxCursorOffset = DxCursorOffset;\nDxCursorOffset.$_optionName = \"cursorOffset\";\nvar DxCustomOperation = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:calculateFilterExpression\": null,\n        \"update:caption\": null,\n        \"update:customizeText\": null,\n        \"update:dataTypes\": null,\n        \"update:editorTemplate\": null,\n        \"update:hasValue\": null,\n        \"update:icon\": null,\n        \"update:name\": null,\n    },\n    props: {\n        calculateFilterExpression: Function,\n        caption: String,\n        customizeText: Function,\n        dataTypes: Array,\n        editorTemplate: {},\n        hasValue: Boolean,\n        icon: String,\n        name: String\n    }\n});\nexports.DxCustomOperation = DxCustomOperation;\nDxCustomOperation.$_optionName = \"customOperations\";\nDxCustomOperation.$_isCollectionItem = true;\nvar DxCustomRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:reevaluate\": null,\n        \"update:type\": null,\n        \"update:validationCallback\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        reevaluate: Boolean,\n        type: String,\n        validationCallback: Function\n    }\n});\nexports.DxCustomRule = DxCustomRule;\nDxCustomRule.$_optionName = \"validationRules\";\nDxCustomRule.$_isCollectionItem = true;\nDxCustomRule.$_predefinedProps = {\n    type: \"custom\"\n};\nvar DxDataGridHeaderFilter = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSearch\": null,\n        \"update:height\": null,\n        \"update:searchTimeout\": null,\n        \"update:texts\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        allowSearch: Boolean,\n        height: Number,\n        searchTimeout: Number,\n        texts: Object,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxDataGridHeaderFilter = DxDataGridHeaderFilter;\nDxDataGridHeaderFilter.$_optionName = \"headerFilter\";\nDxDataGridHeaderFilter.$_expectedChildren = {\n    dataGridHeaderFilterTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxDataGridHeaderFilterTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:cancel\": null,\n        \"update:emptyValue\": null,\n        \"update:ok\": null,\n    },\n    props: {\n        cancel: String,\n        emptyValue: String,\n        ok: String\n    }\n});\nexports.DxDataGridHeaderFilterTexts = DxDataGridHeaderFilterTexts;\nDxDataGridHeaderFilterTexts.$_optionName = \"texts\";\nvar DxEditing = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowAdding\": null,\n        \"update:allowDeleting\": null,\n        \"update:allowUpdating\": null,\n        \"update:changes\": null,\n        \"update:confirmDelete\": null,\n        \"update:editColumnName\": null,\n        \"update:editRowKey\": null,\n        \"update:form\": null,\n        \"update:mode\": null,\n        \"update:newRowPosition\": null,\n        \"update:popup\": null,\n        \"update:refreshMode\": null,\n        \"update:selectTextOnEditStart\": null,\n        \"update:startEditAction\": null,\n        \"update:texts\": null,\n        \"update:useIcons\": null,\n    },\n    props: {\n        allowAdding: Boolean,\n        allowDeleting: [Boolean, Function],\n        allowUpdating: [Boolean, Function],\n        changes: Array,\n        confirmDelete: Boolean,\n        editColumnName: String,\n        editRowKey: {},\n        form: Object,\n        mode: String,\n        newRowPosition: String,\n        popup: Object,\n        refreshMode: String,\n        selectTextOnEditStart: Boolean,\n        startEditAction: String,\n        texts: {},\n        useIcons: Boolean\n    }\n});\nexports.DxEditing = DxEditing;\nDxEditing.$_optionName = \"editing\";\nDxEditing.$_expectedChildren = {\n    change: { isCollectionItem: true, optionName: \"changes\" },\n    editingTexts: { isCollectionItem: false, optionName: \"texts\" },\n    form: { isCollectionItem: false, optionName: \"form\" },\n    popup: { isCollectionItem: false, optionName: \"popup\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxEditingTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:addRow\": null,\n        \"update:cancelAllChanges\": null,\n        \"update:cancelRowChanges\": null,\n        \"update:confirmDeleteMessage\": null,\n        \"update:confirmDeleteTitle\": null,\n        \"update:deleteRow\": null,\n        \"update:editRow\": null,\n        \"update:saveAllChanges\": null,\n        \"update:saveRowChanges\": null,\n        \"update:undeleteRow\": null,\n        \"update:validationCancelChanges\": null,\n    },\n    props: {\n        addRow: String,\n        cancelAllChanges: String,\n        cancelRowChanges: String,\n        confirmDeleteMessage: String,\n        confirmDeleteTitle: String,\n        deleteRow: String,\n        editRow: String,\n        saveAllChanges: String,\n        saveRowChanges: String,\n        undeleteRow: String,\n        validationCancelChanges: String\n    }\n});\nexports.DxEditingTexts = DxEditingTexts;\nDxEditingTexts.$_optionName = \"texts\";\nvar DxEmailRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        type: String\n    }\n});\nexports.DxEmailRule = DxEmailRule;\nDxEmailRule.$_optionName = \"validationRules\";\nDxEmailRule.$_isCollectionItem = true;\nDxEmailRule.$_predefinedProps = {\n    type: \"email\"\n};\nvar DxExport = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowExportSelectedData\": null,\n        \"update:customizeExcelCell\": null,\n        \"update:enabled\": null,\n        \"update:excelFilterEnabled\": null,\n        \"update:excelWrapTextEnabled\": null,\n        \"update:fileName\": null,\n        \"update:ignoreExcelErrors\": null,\n        \"update:proxyUrl\": null,\n        \"update:texts\": null,\n    },\n    props: {\n        allowExportSelectedData: Boolean,\n        customizeExcelCell: Function,\n        enabled: Boolean,\n        excelFilterEnabled: Boolean,\n        excelWrapTextEnabled: Boolean,\n        fileName: String,\n        ignoreExcelErrors: Boolean,\n        proxyUrl: String,\n        texts: Object\n    }\n});\nexports.DxExport = DxExport;\nDxExport.$_optionName = \"export\";\nDxExport.$_expectedChildren = {\n    exportTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxExportTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:exportAll\": null,\n        \"update:exportSelectedRows\": null,\n        \"update:exportTo\": null,\n    },\n    props: {\n        exportAll: String,\n        exportSelectedRows: String,\n        exportTo: String\n    }\n});\nexports.DxExportTexts = DxExportTexts;\nDxExportTexts.$_optionName = \"texts\";\nvar DxField = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:calculateFilterExpression\": null,\n        \"update:caption\": null,\n        \"update:customizeText\": null,\n        \"update:dataField\": null,\n        \"update:dataType\": null,\n        \"update:defaultFilterOperation\": null,\n        \"update:editorOptions\": null,\n        \"update:editorTemplate\": null,\n        \"update:falseText\": null,\n        \"update:filterOperations\": null,\n        \"update:format\": null,\n        \"update:lookup\": null,\n        \"update:name\": null,\n        \"update:trueText\": null,\n    },\n    props: {\n        calculateFilterExpression: Function,\n        caption: String,\n        customizeText: Function,\n        dataField: String,\n        dataType: String,\n        defaultFilterOperation: String,\n        editorOptions: {},\n        editorTemplate: {},\n        falseText: String,\n        filterOperations: Array,\n        format: [Object, Function, String],\n        lookup: Object,\n        name: String,\n        trueText: String\n    }\n});\nexports.DxField = DxField;\nDxField.$_optionName = \"fields\";\nDxField.$_isCollectionItem = true;\nDxField.$_expectedChildren = {\n    fieldLookup: { isCollectionItem: false, optionName: \"lookup\" },\n    format: { isCollectionItem: false, optionName: \"format\" },\n    lookup: { isCollectionItem: false, optionName: \"lookup\" }\n};\nvar DxFieldLookup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowClearing\": null,\n        \"update:dataSource\": null,\n        \"update:displayExpr\": null,\n        \"update:valueExpr\": null,\n    },\n    props: {\n        allowClearing: Boolean,\n        dataSource: [Array, Object],\n        displayExpr: [Function, String],\n        valueExpr: [Function, String]\n    }\n});\nexports.DxFieldLookup = DxFieldLookup;\nDxFieldLookup.$_optionName = \"lookup\";\nvar DxFilterBuilder = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:allowHierarchicalFields\": null,\n        \"update:bindingOptions\": null,\n        \"update:customOperations\": null,\n        \"update:disabled\": null,\n        \"update:elementAttr\": null,\n        \"update:fields\": null,\n        \"update:filterOperationDescriptions\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:groupOperationDescriptions\": null,\n        \"update:groupOperations\": null,\n        \"update:height\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:maxGroupLevel\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onEditorPrepared\": null,\n        \"update:onEditorPreparing\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onValueChanged\": null,\n        \"update:rtlEnabled\": null,\n        \"update:tabIndex\": null,\n        \"update:value\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        allowHierarchicalFields: Boolean,\n        bindingOptions: Object,\n        customOperations: Array,\n        disabled: Boolean,\n        elementAttr: Object,\n        fields: Array,\n        filterOperationDescriptions: Object,\n        focusStateEnabled: Boolean,\n        groupOperationDescriptions: Object,\n        groupOperations: Array,\n        height: [Function, Number, String],\n        hint: String,\n        hoverStateEnabled: Boolean,\n        maxGroupLevel: Number,\n        onContentReady: Function,\n        onDisposing: Function,\n        onEditorPrepared: Function,\n        onEditorPreparing: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        onValueChanged: Function,\n        rtlEnabled: Boolean,\n        tabIndex: Number,\n        value: [Array, Function, String],\n        visible: Boolean,\n        width: [Function, Number, String]\n    }\n});\nexports.DxFilterBuilder = DxFilterBuilder;\nDxFilterBuilder.$_optionName = \"filterBuilder\";\nDxFilterBuilder.$_expectedChildren = {\n    customOperation: { isCollectionItem: true, optionName: \"customOperations\" },\n    field: { isCollectionItem: true, optionName: \"fields\" },\n    filterOperationDescriptions: { isCollectionItem: false, optionName: \"filterOperationDescriptions\" },\n    groupOperationDescriptions: { isCollectionItem: false, optionName: \"groupOperationDescriptions\" }\n};\nvar DxFilterBuilderPopup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:animation\": null,\n        \"update:bindingOptions\": null,\n        \"update:closeOnOutsideClick\": null,\n        \"update:container\": null,\n        \"update:contentTemplate\": null,\n        \"update:copyRootClassesToWrapper\": null,\n        \"update:deferRendering\": null,\n        \"update:disabled\": null,\n        \"update:dragAndResizeArea\": null,\n        \"update:dragEnabled\": null,\n        \"update:dragOutsideBoundary\": null,\n        \"update:elementAttr\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:fullScreen\": null,\n        \"update:height\": null,\n        \"update:hideOnParentScroll\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:maxHeight\": null,\n        \"update:maxWidth\": null,\n        \"update:minHeight\": null,\n        \"update:minWidth\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onHidden\": null,\n        \"update:onHiding\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onResize\": null,\n        \"update:onResizeEnd\": null,\n        \"update:onResizeStart\": null,\n        \"update:onShowing\": null,\n        \"update:onShown\": null,\n        \"update:onTitleRendered\": null,\n        \"update:position\": null,\n        \"update:resizeEnabled\": null,\n        \"update:restorePosition\": null,\n        \"update:rtlEnabled\": null,\n        \"update:shading\": null,\n        \"update:shadingColor\": null,\n        \"update:showCloseButton\": null,\n        \"update:showTitle\": null,\n        \"update:tabIndex\": null,\n        \"update:title\": null,\n        \"update:titleTemplate\": null,\n        \"update:toolbarItems\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n        \"update:wrapperAttr\": null,\n    },\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        animation: Object,\n        bindingOptions: Object,\n        closeOnOutsideClick: [Boolean, Function],\n        container: {},\n        contentTemplate: {},\n        copyRootClassesToWrapper: Boolean,\n        deferRendering: Boolean,\n        disabled: Boolean,\n        dragAndResizeArea: {},\n        dragEnabled: Boolean,\n        dragOutsideBoundary: Boolean,\n        elementAttr: {},\n        focusStateEnabled: Boolean,\n        fullScreen: Boolean,\n        height: [Function, Number, String],\n        hideOnParentScroll: Boolean,\n        hint: String,\n        hoverStateEnabled: Boolean,\n        maxHeight: [Function, Number, String],\n        maxWidth: [Function, Number, String],\n        minHeight: [Function, Number, String],\n        minWidth: [Function, Number, String],\n        onContentReady: Function,\n        onDisposing: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onHidden: Function,\n        onHiding: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        onResize: Function,\n        onResizeEnd: Function,\n        onResizeStart: Function,\n        onShowing: Function,\n        onShown: Function,\n        onTitleRendered: Function,\n        position: [Function, Object, String],\n        resizeEnabled: Boolean,\n        restorePosition: Boolean,\n        rtlEnabled: Boolean,\n        shading: Boolean,\n        shadingColor: String,\n        showCloseButton: Boolean,\n        showTitle: Boolean,\n        tabIndex: Number,\n        title: String,\n        titleTemplate: {},\n        toolbarItems: Array,\n        visible: Boolean,\n        width: [Function, Number, String],\n        wrapperAttr: {}\n    }\n});\nexports.DxFilterBuilderPopup = DxFilterBuilderPopup;\nDxFilterBuilderPopup.$_optionName = \"filterBuilderPopup\";\nvar DxFilterOperationDescriptions = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:between\": null,\n        \"update:contains\": null,\n        \"update:endsWith\": null,\n        \"update:equal\": null,\n        \"update:greaterThan\": null,\n        \"update:greaterThanOrEqual\": null,\n        \"update:isBlank\": null,\n        \"update:isNotBlank\": null,\n        \"update:lessThan\": null,\n        \"update:lessThanOrEqual\": null,\n        \"update:notContains\": null,\n        \"update:notEqual\": null,\n        \"update:startsWith\": null,\n    },\n    props: {\n        between: String,\n        contains: String,\n        endsWith: String,\n        equal: String,\n        greaterThan: String,\n        greaterThanOrEqual: String,\n        isBlank: String,\n        isNotBlank: String,\n        lessThan: String,\n        lessThanOrEqual: String,\n        notContains: String,\n        notEqual: String,\n        startsWith: String\n    }\n});\nexports.DxFilterOperationDescriptions = DxFilterOperationDescriptions;\nDxFilterOperationDescriptions.$_optionName = \"filterOperationDescriptions\";\nvar DxFilterPanel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:customizeText\": null,\n        \"update:filterEnabled\": null,\n        \"update:texts\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        customizeText: Function,\n        filterEnabled: Boolean,\n        texts: Object,\n        visible: Boolean\n    }\n});\nexports.DxFilterPanel = DxFilterPanel;\nDxFilterPanel.$_optionName = \"filterPanel\";\nDxFilterPanel.$_expectedChildren = {\n    filterPanelTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxFilterPanelTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:clearFilter\": null,\n        \"update:createFilter\": null,\n        \"update:filterEnabledHint\": null,\n    },\n    props: {\n        clearFilter: String,\n        createFilter: String,\n        filterEnabledHint: String\n    }\n});\nexports.DxFilterPanelTexts = DxFilterPanelTexts;\nDxFilterPanelTexts.$_optionName = \"texts\";\nvar DxFilterRow = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:applyFilter\": null,\n        \"update:applyFilterText\": null,\n        \"update:betweenEndText\": null,\n        \"update:betweenStartText\": null,\n        \"update:operationDescriptions\": null,\n        \"update:resetOperationText\": null,\n        \"update:showAllText\": null,\n        \"update:showOperationChooser\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        applyFilter: String,\n        applyFilterText: String,\n        betweenEndText: String,\n        betweenStartText: String,\n        operationDescriptions: Object,\n        resetOperationText: String,\n        showAllText: String,\n        showOperationChooser: Boolean,\n        visible: Boolean\n    }\n});\nexports.DxFilterRow = DxFilterRow;\nDxFilterRow.$_optionName = \"filterRow\";\nDxFilterRow.$_expectedChildren = {\n    operationDescriptions: { isCollectionItem: false, optionName: \"operationDescriptions\" }\n};\nvar DxForm = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:alignItemLabels\": null,\n        \"update:alignItemLabelsInAllGroups\": null,\n        \"update:bindingOptions\": null,\n        \"update:colCount\": null,\n        \"update:colCountByScreen\": null,\n        \"update:customizeItem\": null,\n        \"update:disabled\": null,\n        \"update:elementAttr\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:formData\": null,\n        \"update:height\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:items\": null,\n        \"update:labelLocation\": null,\n        \"update:labelMode\": null,\n        \"update:minColWidth\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onEditorEnterKey\": null,\n        \"update:onFieldDataChanged\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:optionalMark\": null,\n        \"update:readOnly\": null,\n        \"update:requiredMark\": null,\n        \"update:requiredMessage\": null,\n        \"update:rtlEnabled\": null,\n        \"update:screenByWidth\": null,\n        \"update:scrollingEnabled\": null,\n        \"update:showColonAfterLabel\": null,\n        \"update:showOptionalMark\": null,\n        \"update:showRequiredMark\": null,\n        \"update:showValidationSummary\": null,\n        \"update:tabIndex\": null,\n        \"update:validationGroup\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        alignItemLabels: Boolean,\n        alignItemLabelsInAllGroups: Boolean,\n        bindingOptions: Object,\n        colCount: [Number, String],\n        colCountByScreen: Object,\n        customizeItem: Function,\n        disabled: Boolean,\n        elementAttr: Object,\n        focusStateEnabled: Boolean,\n        formData: {},\n        height: [Function, Number, String],\n        hint: String,\n        hoverStateEnabled: Boolean,\n        items: Array,\n        labelLocation: String,\n        labelMode: String,\n        minColWidth: Number,\n        onContentReady: Function,\n        onDisposing: Function,\n        onEditorEnterKey: Function,\n        onFieldDataChanged: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        optionalMark: String,\n        readOnly: Boolean,\n        requiredMark: String,\n        requiredMessage: String,\n        rtlEnabled: Boolean,\n        screenByWidth: Function,\n        scrollingEnabled: Boolean,\n        showColonAfterLabel: Boolean,\n        showOptionalMark: Boolean,\n        showRequiredMark: Boolean,\n        showValidationSummary: Boolean,\n        tabIndex: Number,\n        validationGroup: String,\n        visible: Boolean,\n        width: [Function, Number, String]\n    }\n});\nexports.DxForm = DxForm;\nDxForm.$_optionName = \"form\";\nDxForm.$_expectedChildren = {\n    colCountByScreen: { isCollectionItem: false, optionName: \"colCountByScreen\" }\n};\nvar DxFormat = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:currency\": null,\n        \"update:formatter\": null,\n        \"update:parser\": null,\n        \"update:precision\": null,\n        \"update:type\": null,\n    },\n    props: {\n        currency: String,\n        formatter: Function,\n        parser: Function,\n        precision: Number,\n        type: String\n    }\n});\nexports.DxFormat = DxFormat;\nDxFormat.$_optionName = \"format\";\nvar DxFormItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:colSpan\": null,\n        \"update:cssClass\": null,\n        \"update:dataField\": null,\n        \"update:editorOptions\": null,\n        \"update:editorType\": null,\n        \"update:helpText\": null,\n        \"update:isRequired\": null,\n        \"update:itemType\": null,\n        \"update:label\": null,\n        \"update:name\": null,\n        \"update:template\": null,\n        \"update:validationRules\": null,\n        \"update:visible\": null,\n        \"update:visibleIndex\": null,\n    },\n    props: {\n        colSpan: Number,\n        cssClass: String,\n        dataField: String,\n        editorOptions: {},\n        editorType: String,\n        helpText: String,\n        isRequired: Boolean,\n        itemType: String,\n        label: Object,\n        name: String,\n        template: {},\n        validationRules: Array,\n        visible: Boolean,\n        visibleIndex: Number\n    }\n});\nexports.DxFormItem = DxFormItem;\nDxFormItem.$_optionName = \"formItem\";\nDxFormItem.$_expectedChildren = {\n    AsyncRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    CompareRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    CustomRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    EmailRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    label: { isCollectionItem: false, optionName: \"label\" },\n    NumericRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    PatternRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    RangeRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    RequiredRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    StringLengthRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    validationRule: { isCollectionItem: true, optionName: \"validationRules\" }\n};\nvar DxFrom = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:left\": null,\n        \"update:opacity\": null,\n        \"update:position\": null,\n        \"update:scale\": null,\n        \"update:top\": null,\n    },\n    props: {\n        left: Number,\n        opacity: Number,\n        position: Object,\n        scale: Number,\n        top: Number\n    }\n});\nexports.DxFrom = DxFrom;\nDxFrom.$_optionName = \"from\";\nDxFrom.$_expectedChildren = {\n    position: { isCollectionItem: false, optionName: \"position\" }\n};\nvar DxGrouping = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowCollapsing\": null,\n        \"update:autoExpandAll\": null,\n        \"update:contextMenuEnabled\": null,\n        \"update:expandMode\": null,\n        \"update:texts\": null,\n    },\n    props: {\n        allowCollapsing: Boolean,\n        autoExpandAll: Boolean,\n        contextMenuEnabled: Boolean,\n        expandMode: String,\n        texts: Object\n    }\n});\nexports.DxGrouping = DxGrouping;\nDxGrouping.$_optionName = \"grouping\";\nDxGrouping.$_expectedChildren = {\n    groupingTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxGroupingTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:groupByThisColumn\": null,\n        \"update:groupContinuedMessage\": null,\n        \"update:groupContinuesMessage\": null,\n        \"update:ungroup\": null,\n        \"update:ungroupAll\": null,\n    },\n    props: {\n        groupByThisColumn: String,\n        groupContinuedMessage: String,\n        groupContinuesMessage: String,\n        ungroup: String,\n        ungroupAll: String\n    }\n});\nexports.DxGroupingTexts = DxGroupingTexts;\nDxGroupingTexts.$_optionName = \"texts\";\nvar DxGroupItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignByColumn\": null,\n        \"update:column\": null,\n        \"update:customizeText\": null,\n        \"update:displayFormat\": null,\n        \"update:name\": null,\n        \"update:showInColumn\": null,\n        \"update:showInGroupFooter\": null,\n        \"update:skipEmptyValues\": null,\n        \"update:summaryType\": null,\n        \"update:valueFormat\": null,\n    },\n    props: {\n        alignByColumn: Boolean,\n        column: String,\n        customizeText: Function,\n        displayFormat: String,\n        name: String,\n        showInColumn: String,\n        showInGroupFooter: Boolean,\n        skipEmptyValues: Boolean,\n        summaryType: String,\n        valueFormat: [Object, Function, String]\n    }\n});\nexports.DxGroupItem = DxGroupItem;\nDxGroupItem.$_optionName = \"groupItems\";\nDxGroupItem.$_isCollectionItem = true;\nDxGroupItem.$_expectedChildren = {\n    valueFormat: { isCollectionItem: false, optionName: \"valueFormat\" }\n};\nvar DxGroupOperationDescriptions = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:and\": null,\n        \"update:notAnd\": null,\n        \"update:notOr\": null,\n        \"update:or\": null,\n    },\n    props: {\n        and: String,\n        notAnd: String,\n        notOr: String,\n        or: String\n    }\n});\nexports.DxGroupOperationDescriptions = DxGroupOperationDescriptions;\nDxGroupOperationDescriptions.$_optionName = \"groupOperationDescriptions\";\nvar DxGroupPanel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowColumnDragging\": null,\n        \"update:emptyPanelText\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        allowColumnDragging: Boolean,\n        emptyPanelText: String,\n        visible: [Boolean, String]\n    }\n});\nexports.DxGroupPanel = DxGroupPanel;\nDxGroupPanel.$_optionName = \"groupPanel\";\nvar DxHeaderFilter = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSearch\": null,\n        \"update:dataSource\": null,\n        \"update:groupInterval\": null,\n        \"update:height\": null,\n        \"update:searchMode\": null,\n        \"update:searchTimeout\": null,\n        \"update:texts\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        allowSearch: Boolean,\n        dataSource: [Array, Object, Function],\n        groupInterval: [Number, String],\n        height: Number,\n        searchMode: String,\n        searchTimeout: Number,\n        texts: Object,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxHeaderFilter = DxHeaderFilter;\nDxHeaderFilter.$_optionName = \"headerFilter\";\nvar DxHide = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:complete\": null,\n        \"update:delay\": null,\n        \"update:direction\": null,\n        \"update:duration\": null,\n        \"update:easing\": null,\n        \"update:from\": null,\n        \"update:staggerDelay\": null,\n        \"update:start\": null,\n        \"update:to\": null,\n        \"update:type\": null,\n    },\n    props: {\n        complete: Function,\n        delay: Number,\n        direction: String,\n        duration: Number,\n        easing: String,\n        from: Object,\n        staggerDelay: Number,\n        start: Function,\n        to: Object,\n        type: String\n    }\n});\nexports.DxHide = DxHide;\nDxHide.$_optionName = \"hide\";\nDxHide.$_expectedChildren = {\n    from: { isCollectionItem: false, optionName: \"from\" },\n    to: { isCollectionItem: false, optionName: \"to\" }\n};\nvar DxItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:cssClass\": null,\n        \"update:disabled\": null,\n        \"update:html\": null,\n        \"update:locateInMenu\": null,\n        \"update:location\": null,\n        \"update:menuItemTemplate\": null,\n        \"update:name\": null,\n        \"update:options\": null,\n        \"update:showText\": null,\n        \"update:template\": null,\n        \"update:text\": null,\n        \"update:visible\": null,\n        \"update:widget\": null,\n    },\n    props: {\n        cssClass: String,\n        disabled: Boolean,\n        html: String,\n        locateInMenu: String,\n        location: String,\n        menuItemTemplate: {},\n        name: String,\n        options: {},\n        showText: String,\n        template: {},\n        text: String,\n        visible: Boolean,\n        widget: String\n    }\n});\nexports.DxItem = DxItem;\nDxItem.$_optionName = \"items\";\nDxItem.$_isCollectionItem = true;\nvar DxKeyboardNavigation = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:editOnKeyPress\": null,\n        \"update:enabled\": null,\n        \"update:enterKeyAction\": null,\n        \"update:enterKeyDirection\": null,\n    },\n    props: {\n        editOnKeyPress: Boolean,\n        enabled: Boolean,\n        enterKeyAction: String,\n        enterKeyDirection: String\n    }\n});\nexports.DxKeyboardNavigation = DxKeyboardNavigation;\nDxKeyboardNavigation.$_optionName = \"keyboardNavigation\";\nvar DxLabel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignment\": null,\n        \"update:location\": null,\n        \"update:showColon\": null,\n        \"update:text\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        alignment: String,\n        location: String,\n        showColon: Boolean,\n        text: String,\n        visible: Boolean\n    }\n});\nexports.DxLabel = DxLabel;\nDxLabel.$_optionName = \"label\";\nvar DxLoadPanel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:enabled\": null,\n        \"update:height\": null,\n        \"update:indicatorSrc\": null,\n        \"update:shading\": null,\n        \"update:shadingColor\": null,\n        \"update:showIndicator\": null,\n        \"update:showPane\": null,\n        \"update:text\": null,\n        \"update:width\": null,\n    },\n    props: {\n        enabled: [Boolean, String],\n        height: Number,\n        indicatorSrc: String,\n        shading: Boolean,\n        shadingColor: String,\n        showIndicator: Boolean,\n        showPane: Boolean,\n        text: String,\n        width: Number\n    }\n});\nexports.DxLoadPanel = DxLoadPanel;\nDxLoadPanel.$_optionName = \"loadPanel\";\nvar DxLookup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowClearing\": null,\n        \"update:calculateCellValue\": null,\n        \"update:dataSource\": null,\n        \"update:displayExpr\": null,\n        \"update:valueExpr\": null,\n    },\n    props: {\n        allowClearing: Boolean,\n        calculateCellValue: Function,\n        dataSource: [Array, Object, Function],\n        displayExpr: [Function, String],\n        valueExpr: String\n    }\n});\nexports.DxLookup = DxLookup;\nDxLookup.$_optionName = \"lookup\";\nvar DxMasterDetail = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:autoExpandAll\": null,\n        \"update:enabled\": null,\n        \"update:template\": null,\n    },\n    props: {\n        autoExpandAll: Boolean,\n        enabled: Boolean,\n        template: {}\n    }\n});\nexports.DxMasterDetail = DxMasterDetail;\nDxMasterDetail.$_optionName = \"masterDetail\";\nvar DxMy = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: String,\n        y: String\n    }\n});\nexports.DxMy = DxMy;\nDxMy.$_optionName = \"my\";\nvar DxNumericRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        type: String\n    }\n});\nexports.DxNumericRule = DxNumericRule;\nDxNumericRule.$_optionName = \"validationRules\";\nDxNumericRule.$_isCollectionItem = true;\nDxNumericRule.$_predefinedProps = {\n    type: \"numeric\"\n};\nvar DxOffset = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: Number,\n        y: Number\n    }\n});\nexports.DxOffset = DxOffset;\nDxOffset.$_optionName = \"offset\";\nvar DxOperationDescriptions = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:between\": null,\n        \"update:contains\": null,\n        \"update:endsWith\": null,\n        \"update:equal\": null,\n        \"update:greaterThan\": null,\n        \"update:greaterThanOrEqual\": null,\n        \"update:lessThan\": null,\n        \"update:lessThanOrEqual\": null,\n        \"update:notContains\": null,\n        \"update:notEqual\": null,\n        \"update:startsWith\": null,\n    },\n    props: {\n        between: String,\n        contains: String,\n        endsWith: String,\n        equal: String,\n        greaterThan: String,\n        greaterThanOrEqual: String,\n        lessThan: String,\n        lessThanOrEqual: String,\n        notContains: String,\n        notEqual: String,\n        startsWith: String\n    }\n});\nexports.DxOperationDescriptions = DxOperationDescriptions;\nDxOperationDescriptions.$_optionName = \"operationDescriptions\";\nvar DxPager = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowedPageSizes\": null,\n        \"update:displayMode\": null,\n        \"update:infoText\": null,\n        \"update:showInfo\": null,\n        \"update:showNavigationButtons\": null,\n        \"update:showPageSizeSelector\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        allowedPageSizes: [Array, String],\n        displayMode: String,\n        infoText: String,\n        showInfo: Boolean,\n        showNavigationButtons: Boolean,\n        showPageSizeSelector: Boolean,\n        visible: [Boolean, String]\n    }\n});\nexports.DxPager = DxPager;\nDxPager.$_optionName = \"pager\";\nvar DxPaging = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:enabled\": null,\n        \"update:pageIndex\": null,\n        \"update:pageSize\": null,\n    },\n    props: {\n        enabled: Boolean,\n        pageIndex: Number,\n        pageSize: Number\n    }\n});\nexports.DxPaging = DxPaging;\nDxPaging.$_optionName = \"paging\";\nvar DxPatternRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:pattern\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        pattern: {},\n        type: String\n    }\n});\nexports.DxPatternRule = DxPatternRule;\nDxPatternRule.$_optionName = \"validationRules\";\nDxPatternRule.$_isCollectionItem = true;\nDxPatternRule.$_predefinedProps = {\n    type: \"pattern\"\n};\nvar DxPopup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:animation\": null,\n        \"update:bindingOptions\": null,\n        \"update:closeOnOutsideClick\": null,\n        \"update:container\": null,\n        \"update:contentTemplate\": null,\n        \"update:copyRootClassesToWrapper\": null,\n        \"update:deferRendering\": null,\n        \"update:disabled\": null,\n        \"update:dragAndResizeArea\": null,\n        \"update:dragEnabled\": null,\n        \"update:dragOutsideBoundary\": null,\n        \"update:elementAttr\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:fullScreen\": null,\n        \"update:height\": null,\n        \"update:hideOnParentScroll\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:maxHeight\": null,\n        \"update:maxWidth\": null,\n        \"update:minHeight\": null,\n        \"update:minWidth\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onHidden\": null,\n        \"update:onHiding\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onResize\": null,\n        \"update:onResizeEnd\": null,\n        \"update:onResizeStart\": null,\n        \"update:onShowing\": null,\n        \"update:onShown\": null,\n        \"update:onTitleRendered\": null,\n        \"update:position\": null,\n        \"update:resizeEnabled\": null,\n        \"update:restorePosition\": null,\n        \"update:rtlEnabled\": null,\n        \"update:shading\": null,\n        \"update:shadingColor\": null,\n        \"update:showCloseButton\": null,\n        \"update:showTitle\": null,\n        \"update:tabIndex\": null,\n        \"update:title\": null,\n        \"update:titleTemplate\": null,\n        \"update:toolbarItems\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n        \"update:wrapperAttr\": null,\n    },\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        animation: Object,\n        bindingOptions: Object,\n        closeOnOutsideClick: [Boolean, Function],\n        container: {},\n        contentTemplate: {},\n        copyRootClassesToWrapper: Boolean,\n        deferRendering: Boolean,\n        disabled: Boolean,\n        dragAndResizeArea: {},\n        dragEnabled: Boolean,\n        dragOutsideBoundary: Boolean,\n        elementAttr: {},\n        focusStateEnabled: Boolean,\n        fullScreen: Boolean,\n        height: [Function, Number, String],\n        hideOnParentScroll: Boolean,\n        hint: String,\n        hoverStateEnabled: Boolean,\n        maxHeight: [Function, Number, String],\n        maxWidth: [Function, Number, String],\n        minHeight: [Function, Number, String],\n        minWidth: [Function, Number, String],\n        onContentReady: Function,\n        onDisposing: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onHidden: Function,\n        onHiding: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        onResize: Function,\n        onResizeEnd: Function,\n        onResizeStart: Function,\n        onShowing: Function,\n        onShown: Function,\n        onTitleRendered: Function,\n        position: [Function, Object, String],\n        resizeEnabled: Boolean,\n        restorePosition: Boolean,\n        rtlEnabled: Boolean,\n        shading: Boolean,\n        shadingColor: String,\n        showCloseButton: Boolean,\n        showTitle: Boolean,\n        tabIndex: Number,\n        title: String,\n        titleTemplate: {},\n        toolbarItems: Array,\n        visible: Boolean,\n        width: [Function, Number, String],\n        wrapperAttr: {}\n    }\n});\nexports.DxPopup = DxPopup;\nDxPopup.$_optionName = \"popup\";\nDxPopup.$_expectedChildren = {\n    animation: { isCollectionItem: false, optionName: \"animation\" },\n    position: { isCollectionItem: false, optionName: \"position\" },\n    toolbarItem: { isCollectionItem: true, optionName: \"toolbarItems\" }\n};\nvar DxPosition = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:at\": null,\n        \"update:boundary\": null,\n        \"update:boundaryOffset\": null,\n        \"update:collision\": null,\n        \"update:my\": null,\n        \"update:of\": null,\n        \"update:offset\": null,\n    },\n    props: {\n        at: [Object, String],\n        boundary: {},\n        boundaryOffset: [Object, String],\n        collision: [Object, String],\n        my: [Object, String],\n        of: {},\n        offset: [Object, String]\n    }\n});\nexports.DxPosition = DxPosition;\nDxPosition.$_optionName = \"position\";\nvar DxRangeRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:max\": null,\n        \"update:message\": null,\n        \"update:min\": null,\n        \"update:reevaluate\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        max: {},\n        message: String,\n        min: {},\n        reevaluate: Boolean,\n        type: String\n    }\n});\nexports.DxRangeRule = DxRangeRule;\nDxRangeRule.$_optionName = \"validationRules\";\nDxRangeRule.$_isCollectionItem = true;\nDxRangeRule.$_predefinedProps = {\n    type: \"range\"\n};\nvar DxRemoteOperations = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:filtering\": null,\n        \"update:grouping\": null,\n        \"update:groupPaging\": null,\n        \"update:paging\": null,\n        \"update:sorting\": null,\n        \"update:summary\": null,\n    },\n    props: {\n        filtering: Boolean,\n        grouping: Boolean,\n        groupPaging: Boolean,\n        paging: Boolean,\n        sorting: Boolean,\n        summary: Boolean\n    }\n});\nexports.DxRemoteOperations = DxRemoteOperations;\nDxRemoteOperations.$_optionName = \"remoteOperations\";\nvar DxRequiredRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:message\": null,\n        \"update:trim\": null,\n        \"update:type\": null,\n    },\n    props: {\n        message: String,\n        trim: Boolean,\n        type: String\n    }\n});\nexports.DxRequiredRule = DxRequiredRule;\nDxRequiredRule.$_optionName = \"validationRules\";\nDxRequiredRule.$_isCollectionItem = true;\nDxRequiredRule.$_predefinedProps = {\n    type: \"required\"\n};\nvar DxRowDragging = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowDropInsideItem\": null,\n        \"update:allowReordering\": null,\n        \"update:autoScroll\": null,\n        \"update:boundary\": null,\n        \"update:container\": null,\n        \"update:cursorOffset\": null,\n        \"update:data\": null,\n        \"update:dragDirection\": null,\n        \"update:dragTemplate\": null,\n        \"update:dropFeedbackMode\": null,\n        \"update:filter\": null,\n        \"update:group\": null,\n        \"update:handle\": null,\n        \"update:onAdd\": null,\n        \"update:onDragChange\": null,\n        \"update:onDragEnd\": null,\n        \"update:onDragMove\": null,\n        \"update:onDragStart\": null,\n        \"update:onRemove\": null,\n        \"update:onReorder\": null,\n        \"update:scrollSensitivity\": null,\n        \"update:scrollSpeed\": null,\n        \"update:showDragIcons\": null,\n    },\n    props: {\n        allowDropInsideItem: Boolean,\n        allowReordering: Boolean,\n        autoScroll: Boolean,\n        boundary: {},\n        container: {},\n        cursorOffset: [Object, String],\n        data: {},\n        dragDirection: String,\n        dragTemplate: {},\n        dropFeedbackMode: String,\n        filter: String,\n        group: String,\n        handle: String,\n        onAdd: Function,\n        onDragChange: Function,\n        onDragEnd: Function,\n        onDragMove: Function,\n        onDragStart: Function,\n        onRemove: Function,\n        onReorder: Function,\n        scrollSensitivity: Number,\n        scrollSpeed: Number,\n        showDragIcons: Boolean\n    }\n});\nexports.DxRowDragging = DxRowDragging;\nDxRowDragging.$_optionName = \"rowDragging\";\nDxRowDragging.$_expectedChildren = {\n    cursorOffset: { isCollectionItem: false, optionName: \"cursorOffset\" }\n};\nvar DxScrolling = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:columnRenderingMode\": null,\n        \"update:mode\": null,\n        \"update:preloadEnabled\": null,\n        \"update:renderAsync\": null,\n        \"update:rowRenderingMode\": null,\n        \"update:scrollByContent\": null,\n        \"update:scrollByThumb\": null,\n        \"update:showScrollbar\": null,\n        \"update:useNative\": null,\n    },\n    props: {\n        columnRenderingMode: String,\n        mode: String,\n        preloadEnabled: Boolean,\n        renderAsync: Boolean,\n        rowRenderingMode: String,\n        scrollByContent: Boolean,\n        scrollByThumb: Boolean,\n        showScrollbar: String,\n        useNative: [Boolean, String]\n    }\n});\nexports.DxScrolling = DxScrolling;\nDxScrolling.$_optionName = \"scrolling\";\nvar DxSearchPanel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:highlightCaseSensitive\": null,\n        \"update:highlightSearchText\": null,\n        \"update:placeholder\": null,\n        \"update:searchVisibleColumnsOnly\": null,\n        \"update:text\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        highlightCaseSensitive: Boolean,\n        highlightSearchText: Boolean,\n        placeholder: String,\n        searchVisibleColumnsOnly: Boolean,\n        text: String,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxSearchPanel = DxSearchPanel;\nDxSearchPanel.$_optionName = \"searchPanel\";\nvar DxSelection = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSelectAll\": null,\n        \"update:deferred\": null,\n        \"update:maxFilterLengthInRequest\": null,\n        \"update:mode\": null,\n        \"update:selectAllMode\": null,\n        \"update:showCheckBoxesMode\": null,\n    },\n    props: {\n        allowSelectAll: Boolean,\n        deferred: Boolean,\n        maxFilterLengthInRequest: Number,\n        mode: String,\n        selectAllMode: String,\n        showCheckBoxesMode: String\n    }\n});\nexports.DxSelection = DxSelection;\nDxSelection.$_optionName = \"selection\";\nvar DxShow = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:complete\": null,\n        \"update:delay\": null,\n        \"update:direction\": null,\n        \"update:duration\": null,\n        \"update:easing\": null,\n        \"update:from\": null,\n        \"update:staggerDelay\": null,\n        \"update:start\": null,\n        \"update:to\": null,\n        \"update:type\": null,\n    },\n    props: {\n        complete: Function,\n        delay: Number,\n        direction: String,\n        duration: Number,\n        easing: String,\n        from: Object,\n        staggerDelay: Number,\n        start: Function,\n        to: Object,\n        type: String\n    }\n});\nexports.DxShow = DxShow;\nDxShow.$_optionName = \"show\";\nvar DxSortByGroupSummaryInfo = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:groupColumn\": null,\n        \"update:sortOrder\": null,\n        \"update:summaryItem\": null,\n    },\n    props: {\n        groupColumn: String,\n        sortOrder: String,\n        summaryItem: [Number, String]\n    }\n});\nexports.DxSortByGroupSummaryInfo = DxSortByGroupSummaryInfo;\nDxSortByGroupSummaryInfo.$_optionName = \"sortByGroupSummaryInfo\";\nDxSortByGroupSummaryInfo.$_isCollectionItem = true;\nvar DxSorting = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ascendingText\": null,\n        \"update:clearText\": null,\n        \"update:descendingText\": null,\n        \"update:mode\": null,\n        \"update:showSortIndexes\": null,\n    },\n    props: {\n        ascendingText: String,\n        clearText: String,\n        descendingText: String,\n        mode: String,\n        showSortIndexes: Boolean\n    }\n});\nexports.DxSorting = DxSorting;\nDxSorting.$_optionName = \"sorting\";\nvar DxStateStoring = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:customLoad\": null,\n        \"update:customSave\": null,\n        \"update:enabled\": null,\n        \"update:savingTimeout\": null,\n        \"update:storageKey\": null,\n        \"update:type\": null,\n    },\n    props: {\n        customLoad: Function,\n        customSave: Function,\n        enabled: Boolean,\n        savingTimeout: Number,\n        storageKey: String,\n        type: String\n    }\n});\nexports.DxStateStoring = DxStateStoring;\nDxStateStoring.$_optionName = \"stateStoring\";\nvar DxStringLengthRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:max\": null,\n        \"update:message\": null,\n        \"update:min\": null,\n        \"update:trim\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        max: Number,\n        message: String,\n        min: Number,\n        trim: Boolean,\n        type: String\n    }\n});\nexports.DxStringLengthRule = DxStringLengthRule;\nDxStringLengthRule.$_optionName = \"validationRules\";\nDxStringLengthRule.$_isCollectionItem = true;\nDxStringLengthRule.$_predefinedProps = {\n    type: \"stringLength\"\n};\nvar DxSummary = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:calculateCustomSummary\": null,\n        \"update:groupItems\": null,\n        \"update:recalculateWhileEditing\": null,\n        \"update:skipEmptyValues\": null,\n        \"update:texts\": null,\n        \"update:totalItems\": null,\n    },\n    props: {\n        calculateCustomSummary: Function,\n        groupItems: Array,\n        recalculateWhileEditing: Boolean,\n        skipEmptyValues: Boolean,\n        texts: Object,\n        totalItems: Array\n    }\n});\nexports.DxSummary = DxSummary;\nDxSummary.$_optionName = \"summary\";\nDxSummary.$_expectedChildren = {\n    groupItem: { isCollectionItem: true, optionName: \"groupItems\" },\n    summaryTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" },\n    totalItem: { isCollectionItem: true, optionName: \"totalItems\" }\n};\nvar DxSummaryTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:avg\": null,\n        \"update:avgOtherColumn\": null,\n        \"update:count\": null,\n        \"update:max\": null,\n        \"update:maxOtherColumn\": null,\n        \"update:min\": null,\n        \"update:minOtherColumn\": null,\n        \"update:sum\": null,\n        \"update:sumOtherColumn\": null,\n    },\n    props: {\n        avg: String,\n        avgOtherColumn: String,\n        count: String,\n        max: String,\n        maxOtherColumn: String,\n        min: String,\n        minOtherColumn: String,\n        sum: String,\n        sumOtherColumn: String\n    }\n});\nexports.DxSummaryTexts = DxSummaryTexts;\nDxSummaryTexts.$_optionName = \"texts\";\nvar DxTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:addRow\": null,\n        \"update:avg\": null,\n        \"update:avgOtherColumn\": null,\n        \"update:cancel\": null,\n        \"update:cancelAllChanges\": null,\n        \"update:cancelRowChanges\": null,\n        \"update:clearFilter\": null,\n        \"update:confirmDeleteMessage\": null,\n        \"update:confirmDeleteTitle\": null,\n        \"update:count\": null,\n        \"update:createFilter\": null,\n        \"update:deleteRow\": null,\n        \"update:editRow\": null,\n        \"update:emptyValue\": null,\n        \"update:exportAll\": null,\n        \"update:exportSelectedRows\": null,\n        \"update:exportTo\": null,\n        \"update:filterEnabledHint\": null,\n        \"update:fix\": null,\n        \"update:groupByThisColumn\": null,\n        \"update:groupContinuedMessage\": null,\n        \"update:groupContinuesMessage\": null,\n        \"update:leftPosition\": null,\n        \"update:max\": null,\n        \"update:maxOtherColumn\": null,\n        \"update:min\": null,\n        \"update:minOtherColumn\": null,\n        \"update:ok\": null,\n        \"update:rightPosition\": null,\n        \"update:saveAllChanges\": null,\n        \"update:saveRowChanges\": null,\n        \"update:sum\": null,\n        \"update:sumOtherColumn\": null,\n        \"update:undeleteRow\": null,\n        \"update:unfix\": null,\n        \"update:ungroup\": null,\n        \"update:ungroupAll\": null,\n        \"update:validationCancelChanges\": null,\n    },\n    props: {\n        addRow: String,\n        avg: String,\n        avgOtherColumn: String,\n        cancel: String,\n        cancelAllChanges: String,\n        cancelRowChanges: String,\n        clearFilter: String,\n        confirmDeleteMessage: String,\n        confirmDeleteTitle: String,\n        count: String,\n        createFilter: String,\n        deleteRow: String,\n        editRow: String,\n        emptyValue: String,\n        exportAll: String,\n        exportSelectedRows: String,\n        exportTo: String,\n        filterEnabledHint: String,\n        fix: String,\n        groupByThisColumn: String,\n        groupContinuedMessage: String,\n        groupContinuesMessage: String,\n        leftPosition: String,\n        max: String,\n        maxOtherColumn: String,\n        min: String,\n        minOtherColumn: String,\n        ok: String,\n        rightPosition: String,\n        saveAllChanges: String,\n        saveRowChanges: String,\n        sum: String,\n        sumOtherColumn: String,\n        undeleteRow: String,\n        unfix: String,\n        ungroup: String,\n        ungroupAll: String,\n        validationCancelChanges: String\n    }\n});\nexports.DxTexts = DxTexts;\nDxTexts.$_optionName = \"texts\";\nvar DxTo = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:left\": null,\n        \"update:opacity\": null,\n        \"update:position\": null,\n        \"update:scale\": null,\n        \"update:top\": null,\n    },\n    props: {\n        left: Number,\n        opacity: Number,\n        position: Object,\n        scale: Number,\n        top: Number\n    }\n});\nexports.DxTo = DxTo;\nDxTo.$_optionName = \"to\";\nvar DxToolbar = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:disabled\": null,\n        \"update:items\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        disabled: Boolean,\n        items: Array,\n        visible: Boolean\n    }\n});\nexports.DxToolbar = DxToolbar;\nDxToolbar.$_optionName = \"toolbar\";\nDxToolbar.$_expectedChildren = {\n    item: { isCollectionItem: true, optionName: \"items\" }\n};\nvar DxToolbarItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:disabled\": null,\n        \"update:html\": null,\n        \"update:location\": null,\n        \"update:options\": null,\n        \"update:template\": null,\n        \"update:text\": null,\n        \"update:toolbar\": null,\n        \"update:visible\": null,\n        \"update:widget\": null,\n    },\n    props: {\n        disabled: Boolean,\n        html: String,\n        location: String,\n        options: {},\n        template: {},\n        text: String,\n        toolbar: String,\n        visible: Boolean,\n        widget: String\n    }\n});\nexports.DxToolbarItem = DxToolbarItem;\nDxToolbarItem.$_optionName = \"toolbarItems\";\nDxToolbarItem.$_isCollectionItem = true;\nvar DxTotalItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignment\": null,\n        \"update:column\": null,\n        \"update:cssClass\": null,\n        \"update:customizeText\": null,\n        \"update:displayFormat\": null,\n        \"update:name\": null,\n        \"update:showInColumn\": null,\n        \"update:skipEmptyValues\": null,\n        \"update:summaryType\": null,\n        \"update:valueFormat\": null,\n    },\n    props: {\n        alignment: String,\n        column: String,\n        cssClass: String,\n        customizeText: Function,\n        displayFormat: String,\n        name: String,\n        showInColumn: String,\n        skipEmptyValues: Boolean,\n        summaryType: String,\n        valueFormat: [Object, Function, String]\n    }\n});\nexports.DxTotalItem = DxTotalItem;\nDxTotalItem.$_optionName = \"totalItems\";\nDxTotalItem.$_isCollectionItem = true;\nDxTotalItem.$_expectedChildren = {\n    valueFormat: { isCollectionItem: false, optionName: \"valueFormat\" }\n};\nvar DxValidationRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:comparisonTarget\": null,\n        \"update:comparisonType\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:max\": null,\n        \"update:message\": null,\n        \"update:min\": null,\n        \"update:pattern\": null,\n        \"update:reevaluate\": null,\n        \"update:trim\": null,\n        \"update:type\": null,\n        \"update:validationCallback\": null,\n    },\n    props: {\n        comparisonTarget: Function,\n        comparisonType: String,\n        ignoreEmptyValue: Boolean,\n        max: {},\n        message: String,\n        min: {},\n        pattern: {},\n        reevaluate: Boolean,\n        trim: Boolean,\n        type: String,\n        validationCallback: Function\n    }\n});\nexports.DxValidationRule = DxValidationRule;\nDxValidationRule.$_optionName = \"validationRules\";\nDxValidationRule.$_isCollectionItem = true;\nDxValidationRule.$_predefinedProps = {\n    type: \"required\"\n};\nvar DxValueFormat = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:currency\": null,\n        \"update:formatter\": null,\n        \"update:parser\": null,\n        \"update:precision\": null,\n        \"update:type\": null,\n    },\n    props: {\n        currency: String,\n        formatter: Function,\n        parser: Function,\n        precision: Number,\n        type: String\n    }\n});\nexports.DxValueFormat = DxValueFormat;\nDxValueFormat.$_optionName = \"valueFormat\";\nexports.default = DxDataGrid;\n","/**\r\n * DevExtreme (esm/ui/shared/filtering.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDate,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nvar DEFAULT_DATE_INTERVAL = [\"year\", \"month\", \"day\"];\r\nvar DEFAULT_DATETIME_INTERVAL = [\"year\", \"month\", \"day\", \"hour\", \"minute\"];\r\nvar isDateType = function(dataType) {\r\n    return \"date\" === dataType || \"datetime\" === dataType\r\n};\r\nvar getGroupInterval = function(column) {\r\n    var index;\r\n    var result = [];\r\n    var dateIntervals = [\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\"];\r\n    var groupInterval = column.headerFilter && column.headerFilter.groupInterval;\r\n    var interval = \"quarter\" === groupInterval ? \"month\" : groupInterval;\r\n    if (isDateType(column.dataType) && null !== groupInterval) {\r\n        result = \"datetime\" === column.dataType ? DEFAULT_DATETIME_INTERVAL : DEFAULT_DATE_INTERVAL;\r\n        index = inArray(interval, dateIntervals);\r\n        if (index >= 0) {\r\n            result = dateIntervals.slice(0, index);\r\n            result.push(groupInterval);\r\n            return result\r\n        }\r\n        return result\r\n    } else if (isDefined(groupInterval)) {\r\n        return Array.isArray(groupInterval) ? groupInterval : [groupInterval]\r\n    }\r\n};\r\nexport default (function() {\r\n    var getFilterSelector = function(column, target) {\r\n        var selector = column.dataField || column.selector;\r\n        if (\"search\" === target) {\r\n            selector = column.displayField || column.calculateDisplayValue || selector\r\n        }\r\n        return selector\r\n    };\r\n    var getFilterExpressionByRange = function(filterValue, target) {\r\n        var endFilterValue;\r\n        var startFilterExpression;\r\n        var endFilterExpression;\r\n        var selector = getFilterSelector(this, target);\r\n        if (Array.isArray(filterValue) && isDefined(filterValue[0]) && isDefined(filterValue[1])) {\r\n            startFilterExpression = [selector, \">=\", filterValue[0]];\r\n            endFilterExpression = [selector, \"<=\", filterValue[1]];\r\n            if (isDateType(this.dataType) && (date = filterValue[1], date.getHours() + date.getMinutes() + date.getSeconds() + date.getMilliseconds() < 1)) {\r\n                endFilterValue = new Date(filterValue[1].getTime());\r\n                if (\"date\" === this.dataType) {\r\n                    endFilterValue.setDate(filterValue[1].getDate() + 1)\r\n                }\r\n                endFilterExpression = [selector, \"<\", endFilterValue]\r\n            }\r\n            return [startFilterExpression, \"and\", endFilterExpression]\r\n        }\r\n        var date\r\n    };\r\n    var getFilterExpressionForDate = function(filterValue, selectedFilterOperation, target) {\r\n        var dateStart;\r\n        var dateEnd;\r\n        var dateInterval;\r\n        var values = function(dateValue) {\r\n            if (isDate(dateValue)) {\r\n                return [dateValue.getFullYear(), dateValue.getMonth(), dateValue.getDate(), dateValue.getHours(), dateValue.getMinutes(), dateValue.getSeconds()]\r\n            }\r\n            return map((\"\" + dateValue).split(\"/\"), (function(value, index) {\r\n                return 1 === index ? Number(value) - 1 : Number(value)\r\n            }))\r\n        }(filterValue);\r\n        var selector = getFilterSelector(this, target);\r\n        if (\"headerFilter\" === target) {\r\n            dateInterval = getGroupInterval(this)[values.length - 1]\r\n        } else if (\"datetime\" === this.dataType) {\r\n            dateInterval = \"minute\"\r\n        }\r\n        switch (dateInterval) {\r\n            case \"year\":\r\n                dateStart = new Date(values[0], 0, 1);\r\n                dateEnd = new Date(values[0] + 1, 0, 1);\r\n                break;\r\n            case \"month\":\r\n                dateStart = new Date(values[0], values[1], 1);\r\n                dateEnd = new Date(values[0], values[1] + 1, 1);\r\n                break;\r\n            case \"quarter\":\r\n                dateStart = new Date(values[0], 3 * values[1], 1);\r\n                dateEnd = new Date(values[0], 3 * values[1] + 3, 1);\r\n                break;\r\n            case \"hour\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3] + 1);\r\n                break;\r\n            case \"minute\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3], values[4]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3], values[4] + 1);\r\n                break;\r\n            case \"second\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3], values[4], values[5]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3], values[4], values[5] + 1);\r\n                break;\r\n            default:\r\n                dateStart = new Date(values[0], values[1], values[2]);\r\n                dateEnd = new Date(values[0], values[1], values[2] + 1)\r\n        }\r\n        switch (selectedFilterOperation) {\r\n            case \"<\":\r\n                return [selector, \"<\", dateStart];\r\n            case \"<=\":\r\n                return [selector, \"<\", dateEnd];\r\n            case \">\":\r\n                return [selector, \">=\", dateEnd];\r\n            case \">=\":\r\n                return [selector, \">=\", dateStart];\r\n            case \"<>\":\r\n                return [\r\n                    [selector, \"<\", dateStart], \"or\", [selector, \">=\", dateEnd]\r\n                ];\r\n            default:\r\n                return [\r\n                    [selector, \">=\", dateStart], \"and\", [selector, \"<\", dateEnd]\r\n                ]\r\n        }\r\n    };\r\n    var getFilterExpressionForNumber = function(filterValue, selectedFilterOperation, target) {\r\n        var selector = getFilterSelector(this, target);\r\n        var groupInterval = getGroupInterval(this);\r\n        if (\"headerFilter\" === target && groupInterval && isDefined(filterValue)) {\r\n            var values = (\"\" + filterValue).split(\"/\");\r\n            var value = Number(values[values.length - 1]);\r\n            var interval = groupInterval[values.length - 1];\r\n            var startFilterValue = [selector, \">=\", value];\r\n            var endFilterValue = [selector, \"<\", value + interval];\r\n            var condition = [startFilterValue, \"and\", endFilterValue];\r\n            return condition\r\n        }\r\n        return [selector, selectedFilterOperation || \"=\", filterValue]\r\n    };\r\n    return {\r\n        defaultCalculateFilterExpression: function(filterValue, selectedFilterOperation, target) {\r\n            var column = this;\r\n            var selector = getFilterSelector(column, target);\r\n            var isSearchByDisplayValue = column.calculateDisplayValue && \"search\" === target;\r\n            var dataType = isSearchByDisplayValue && column.lookup && column.lookup.dataType || column.dataType;\r\n            var filter = null;\r\n            if ((\"headerFilter\" === target || \"filterBuilder\" === target) && null === filterValue) {\r\n                filter = [selector, selectedFilterOperation || \"=\", null];\r\n                if (\"string\" === dataType) {\r\n                    filter = [filter, \"=\" === selectedFilterOperation ? \"or\" : \"and\", [selector, selectedFilterOperation || \"=\", \"\"]]\r\n                }\r\n            } else if (\"string\" === dataType && (!column.lookup || isSearchByDisplayValue)) {\r\n                filter = [selector, selectedFilterOperation || \"contains\", filterValue]\r\n            } else if (\"between\" === selectedFilterOperation) {\r\n                return getFilterExpressionByRange.apply(column, [filterValue, target])\r\n            } else if (isDateType(dataType) && isDefined(filterValue)) {\r\n                return getFilterExpressionForDate.apply(column, arguments)\r\n            } else if (\"number\" === dataType) {\r\n                return getFilterExpressionForNumber.apply(column, arguments)\r\n            } else if (\"object\" !== dataType) {\r\n                filter = [selector, selectedFilterOperation || \"=\", filterValue]\r\n            }\r\n            return filter\r\n        },\r\n        getGroupInterval: getGroupInterval\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    isDefined,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport sharedFiltering from \"../shared/filtering\";\r\nimport {\r\n    format\r\n} from \"../../core/utils/string\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    toComparable\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport LoadPanel from \"../load_panel\";\r\nimport {\r\n    normalizeSortingInfo as normalizeSortingInfoUtility\r\n} from \"../../data/utils\";\r\nimport formatHelper from \"../../format_helper\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nvar DATAGRID_SELECTION_DISABLED_CLASS = \"dx-selection-disabled\";\r\nvar DATAGRID_GROUP_OPENED_CLASS = \"dx-datagrid-group-opened\";\r\nvar DATAGRID_GROUP_CLOSED_CLASS = \"dx-datagrid-group-closed\";\r\nvar DATAGRID_EXPAND_CLASS = \"dx-datagrid-expand\";\r\nvar NO_DATA_CLASS = \"nodata\";\r\nvar SCROLLING_MODE_INFINITE = \"infinite\";\r\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\nvar SCROLLING_MODE_OPTION = \"scrolling.mode\";\r\nvar ROW_RENDERING_MODE_OPTION = \"scrolling.rowRenderingMode\";\r\nvar DATE_INTERVAL_SELECTORS = {\r\n    year: function(value) {\r\n        return value && value.getFullYear()\r\n    },\r\n    month: function(value) {\r\n        return value && value.getMonth() + 1\r\n    },\r\n    day: function(value) {\r\n        return value && value.getDate()\r\n    },\r\n    quarter: function(value) {\r\n        return value && Math.floor(value.getMonth() / 3) + 1\r\n    },\r\n    hour: function(value) {\r\n        return value && value.getHours()\r\n    },\r\n    minute: function(value) {\r\n        return value && value.getMinutes()\r\n    },\r\n    second: function(value) {\r\n        return value && value.getSeconds()\r\n    }\r\n};\r\nvar getIntervalSelector = function() {\r\n    var data = arguments[1];\r\n    var value = this.calculateCellValue(data);\r\n    if (!isDefined(value)) {\r\n        return null\r\n    } else if (isDateType(this.dataType)) {\r\n        var nameIntervalSelector = arguments[0];\r\n        return DATE_INTERVAL_SELECTORS[nameIntervalSelector](value)\r\n    } else if (\"number\" === this.dataType) {\r\n        var groupInterval = arguments[0];\r\n        return Math.floor(Number(value) / groupInterval) * groupInterval\r\n    }\r\n};\r\nvar equalSelectors = function(selector1, selector2) {\r\n    if (isFunction(selector1) && isFunction(selector2)) {\r\n        if (selector1.originalCallback && selector2.originalCallback) {\r\n            return selector1.originalCallback === selector2.originalCallback && selector1.columnIndex === selector2.columnIndex\r\n        }\r\n    }\r\n    return selector1 === selector2\r\n};\r\n\r\nfunction isDateType(dataType) {\r\n    return \"date\" === dataType || \"datetime\" === dataType\r\n}\r\nvar setEmptyText = function($container) {\r\n    $container.get(0).textContent = \"\\xa0\"\r\n};\r\nvar normalizeSortingInfo = function(sort) {\r\n    sort = sort || [];\r\n    var result = normalizeSortingInfoUtility(sort);\r\n    for (var i = 0; i < sort.length; i++) {\r\n        if (sort && sort[i] && void 0 !== sort[i].isExpanded) {\r\n            result[i].isExpanded = sort[i].isExpanded\r\n        }\r\n        if (sort && sort[i] && void 0 !== sort[i].groupInterval) {\r\n            result[i].groupInterval = sort[i].groupInterval\r\n        }\r\n    }\r\n    return result\r\n};\r\nvar formatValue = function(value, options) {\r\n    var valueText = formatHelper.format(value, options.format) || value && value.toString() || \"\";\r\n    var formatObject = {\r\n        value: value,\r\n        valueText: options.getDisplayFormat ? options.getDisplayFormat(valueText) : valueText,\r\n        target: options.target || \"row\",\r\n        groupInterval: options.groupInterval\r\n    };\r\n    return options.customizeText ? options.customizeText.call(options, formatObject) : formatObject.valueText\r\n};\r\nvar getSummaryText = function(summaryItem, summaryTexts) {\r\n    var displayFormat = summaryItem.displayFormat || summaryItem.columnCaption && summaryTexts[summaryItem.summaryType + \"OtherColumn\"] || summaryTexts[summaryItem.summaryType];\r\n    return formatValue(summaryItem.value, {\r\n        format: summaryItem.valueFormat,\r\n        getDisplayFormat: function(valueText) {\r\n            return displayFormat ? format(displayFormat, valueText, summaryItem.columnCaption) : valueText\r\n        },\r\n        customizeText: summaryItem.customizeText\r\n    })\r\n};\r\nvar getWidgetInstance = function($element) {\r\n    var editorData = $element.data && $element.data();\r\n    var dxComponents = editorData && editorData.dxComponents;\r\n    var widgetName = dxComponents && dxComponents[0];\r\n    return widgetName && editorData[widgetName]\r\n};\r\nvar equalFilterParameters = function equalFilterParameters(filter1, filter2) {\r\n    if (Array.isArray(filter1) && Array.isArray(filter2)) {\r\n        if (filter1.length !== filter2.length) {\r\n            return false\r\n        } else {\r\n            for (var i = 0; i < filter1.length; i++) {\r\n                if (!equalFilterParameters(filter1[i], filter2[i])) {\r\n                    return false\r\n                }\r\n            }\r\n        }\r\n        return true\r\n    } else if (isFunction(filter1) && filter1.columnIndex >= 0 && isFunction(filter2) && filter2.columnIndex >= 0) {\r\n        return filter1.columnIndex === filter2.columnIndex && toComparable(filter1.filterValue) === toComparable(filter2.filterValue)\r\n    } else {\r\n        return toComparable(filter1) == toComparable(filter2)\r\n    }\r\n};\r\nexport default {\r\n    renderNoDataText: function($element) {\r\n        $element = $element || this.element();\r\n        if (!$element) {\r\n            return\r\n        }\r\n        var noDataClass = this.addWidgetPrefix(NO_DATA_CLASS);\r\n        var noDataElement = $element.find(\".\" + noDataClass).last();\r\n        var isVisible = this._dataController.isEmpty();\r\n        var isLoading = this._dataController.isLoading();\r\n        if (!noDataElement.length) {\r\n            noDataElement = $(\"<span>\").addClass(noDataClass).appendTo($element)\r\n        }\r\n        if (isVisible && !isLoading) {\r\n            noDataElement.removeClass(\"dx-hidden\").text(this._getNoDataText())\r\n        } else {\r\n            noDataElement.addClass(\"dx-hidden\")\r\n        }\r\n    },\r\n    renderLoadPanel: function($element, $container, isLocalStore) {\r\n        var loadPanelOptions;\r\n        this._loadPanel && this._loadPanel.$element().remove();\r\n        loadPanelOptions = this.option(\"loadPanel\");\r\n        if (loadPanelOptions && (\"auto\" === loadPanelOptions.enabled ? !isLocalStore : loadPanelOptions.enabled)) {\r\n            loadPanelOptions = extend({\r\n                shading: false,\r\n                message: loadPanelOptions.text,\r\n                container: $container\r\n            }, loadPanelOptions);\r\n            this._loadPanel = this._createComponent($(\"<div>\").appendTo($container), LoadPanel, loadPanelOptions)\r\n        } else {\r\n            this._loadPanel = null\r\n        }\r\n    },\r\n    calculateLoadPanelPosition($element) {\r\n        var $window = $(getWindow());\r\n        if (getHeight($element) > getHeight($window)) {\r\n            return {\r\n                of: $window,\r\n                boundary: $element,\r\n                collision: \"fit\"\r\n            }\r\n        }\r\n        return {\r\n            of: $element\r\n        }\r\n    },\r\n    getIndexByKey: function(key, items, keyName) {\r\n        var index = -1;\r\n        if (void 0 !== key && Array.isArray(items)) {\r\n            keyName = arguments.length <= 2 ? \"key\" : keyName;\r\n            for (var i = 0; i < items.length; i++) {\r\n                var item = isDefined(keyName) ? items[i][keyName] : items[i];\r\n                if (equalByValue(key, item)) {\r\n                    index = i;\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        return index\r\n    },\r\n    combineFilters: function(filters, operation) {\r\n        var resultFilter = [];\r\n        operation = operation || \"and\";\r\n        for (var i = 0; i < filters.length; i++) {\r\n            var _filters$i;\r\n            if (!filters[i]) {\r\n                continue\r\n            }\r\n            if (1 === (null === (_filters$i = filters[i]) || void 0 === _filters$i ? void 0 : _filters$i.length) && \"!\" === filters[i][0]) {\r\n                if (\"and\" === operation) {\r\n                    return [\"!\"]\r\n                } else if (\"or\" === operation) {\r\n                    continue\r\n                }\r\n            }\r\n            if (resultFilter.length) {\r\n                resultFilter.push(operation)\r\n            }\r\n            resultFilter.push(filters[i])\r\n        }\r\n        if (1 === resultFilter.length) {\r\n            resultFilter = resultFilter[0]\r\n        }\r\n        if (resultFilter.length) {\r\n            return resultFilter\r\n        }\r\n    },\r\n    checkChanges: function(changes, changeNames) {\r\n        var changesWithChangeNamesCount = 0;\r\n        for (var i = 0; i < changeNames.length; i++) {\r\n            if (changes[changeNames[i]]) {\r\n                changesWithChangeNamesCount++\r\n            }\r\n        }\r\n        return changes.length && changes.length === changesWithChangeNamesCount\r\n    },\r\n    equalFilterParameters: equalFilterParameters,\r\n    proxyMethod: function(instance, methodName, defaultResult) {\r\n        if (!instance[methodName]) {\r\n            instance[methodName] = function() {\r\n                var dataSource = this._dataSource;\r\n                return dataSource ? dataSource[methodName].apply(dataSource, arguments) : defaultResult\r\n            }\r\n        }\r\n    },\r\n    formatValue: formatValue,\r\n    getFormatOptionsByColumn: function(column, target) {\r\n        return {\r\n            format: column.format,\r\n            getDisplayFormat: column.getDisplayFormat,\r\n            customizeText: column.customizeText,\r\n            target: target,\r\n            trueText: column.trueText,\r\n            falseText: column.falseText\r\n        }\r\n    },\r\n    getDisplayValue: function(column, value, data, rowType) {\r\n        if (column.displayValueMap && void 0 !== column.displayValueMap[value]) {\r\n            return column.displayValueMap[value]\r\n        } else if (column.calculateDisplayValue && data && \"group\" !== rowType) {\r\n            return column.calculateDisplayValue(data)\r\n        } else if (column.lookup && !(\"group\" === rowType && (column.calculateGroupValue || column.calculateDisplayValue))) {\r\n            return column.lookup.calculateCellValue(value)\r\n        }\r\n        return value\r\n    },\r\n    getGroupRowSummaryText: function(summaryItems, summaryTexts) {\r\n        var result = \"(\";\r\n        for (var i = 0; i < summaryItems.length; i++) {\r\n            var summaryItem = summaryItems[i];\r\n            result += (i > 0 ? \", \" : \"\") + getSummaryText(summaryItem, summaryTexts)\r\n        }\r\n        return result + \")\"\r\n    },\r\n    getSummaryText: getSummaryText,\r\n    normalizeSortingInfo: normalizeSortingInfo,\r\n    getFormatByDataType: function(dataType) {\r\n        switch (dataType) {\r\n            case \"date\":\r\n                return \"shortDate\";\r\n            case \"datetime\":\r\n                return \"shortDateShortTime\"\r\n        }\r\n    },\r\n    getHeaderFilterGroupParameters: function(column, remoteGrouping) {\r\n        var result = [];\r\n        var dataField = column.dataField || column.name;\r\n        var groupInterval = sharedFiltering.getGroupInterval(column);\r\n        if (groupInterval) {\r\n            each(groupInterval, (function(index, interval) {\r\n                result.push(remoteGrouping ? {\r\n                    selector: dataField,\r\n                    groupInterval: interval,\r\n                    isExpanded: index < groupInterval.length - 1\r\n                } : getIntervalSelector.bind(column, interval))\r\n            }));\r\n            return result\r\n        }\r\n        if (remoteGrouping) {\r\n            result = [{\r\n                selector: dataField,\r\n                isExpanded: false\r\n            }]\r\n        } else {\r\n            result = function(data) {\r\n                var result = column.calculateCellValue(data);\r\n                if (void 0 === result || \"\" === result) {\r\n                    result = null\r\n                }\r\n                return result\r\n            };\r\n            if (column.sortingMethod) {\r\n                result = [{\r\n                    selector: result,\r\n                    compare: column.sortingMethod.bind(column)\r\n                }]\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    equalSortParameters(sortParameters1, sortParameters2, ignoreIsExpanded) {\r\n        sortParameters1 = normalizeSortingInfo(sortParameters1);\r\n        sortParameters2 = normalizeSortingInfo(sortParameters2);\r\n        if (Array.isArray(sortParameters1) && Array.isArray(sortParameters2)) {\r\n            if (sortParameters1.length !== sortParameters2.length) {\r\n                return false\r\n            } else {\r\n                for (var i = 0; i < sortParameters1.length; i++) {\r\n                    if (!equalSelectors(sortParameters1[i].selector, sortParameters2[i].selector) || sortParameters1[i].desc !== sortParameters2[i].desc || sortParameters1[i].groupInterval !== sortParameters2[i].groupInterval || !ignoreIsExpanded && Boolean(sortParameters1[i].isExpanded) !== Boolean(sortParameters2[i].isExpanded)) {\r\n                        return false\r\n                    }\r\n                }\r\n            }\r\n            return true\r\n        } else {\r\n            return (!sortParameters1 || !sortParameters1.length) === (!sortParameters2 || !sortParameters2.length)\r\n        }\r\n    },\r\n    getPointsByColumns: function(items, pointCreated, isVertical, startColumnIndex) {\r\n        var cellsLength = items.length;\r\n        var notCreatePoint = false;\r\n        var item;\r\n        var offset;\r\n        var columnIndex = startColumnIndex || 0;\r\n        var result = [];\r\n        var rtlEnabled;\r\n        for (var i = 0; i <= cellsLength; i++) {\r\n            if (i < cellsLength) {\r\n                item = items.eq(i);\r\n                offset = item.offset();\r\n                rtlEnabled = \"rtl\" === item.css(\"direction\")\r\n            }\r\n            var point = {\r\n                index: columnIndex,\r\n                x: offset ? offset.left + (!isVertical && rtlEnabled ^ i === cellsLength ? getBoundingRect(item[0]).width : 0) : 0,\r\n                y: offset ? offset.top + (isVertical && i === cellsLength ? getBoundingRect(item[0]).height : 0) : 0,\r\n                columnIndex: columnIndex\r\n            };\r\n            if (!isVertical && i > 0) {\r\n                var prevItemOffset = items.eq(i - 1).offset();\r\n                if (prevItemOffset.top < point.y) {\r\n                    point.y = prevItemOffset.top\r\n                }\r\n            }\r\n            if (pointCreated) {\r\n                notCreatePoint = pointCreated(point)\r\n            }\r\n            if (!notCreatePoint) {\r\n                result.push(point)\r\n            }\r\n            columnIndex++\r\n        }\r\n        return result\r\n    },\r\n    getExpandCellTemplate: function() {\r\n        return {\r\n            allowRenderToDetachedContainer: true,\r\n            render: function(container, options) {\r\n                var $container = $(container);\r\n                if (isDefined(options.value) && !(options.data && options.data.isContinuation) && !options.row.isNewRow) {\r\n                    var rowsView = options.component.getView(\"rowsView\");\r\n                    $container.addClass(DATAGRID_EXPAND_CLASS).addClass(DATAGRID_SELECTION_DISABLED_CLASS);\r\n                    $(\"<div>\").addClass(options.value ? DATAGRID_GROUP_OPENED_CLASS : DATAGRID_GROUP_CLOSED_CLASS).appendTo($container);\r\n                    rowsView.setAria(\"label\", options.value ? rowsView.localize(\"dxDataGrid-ariaCollapse\") : rowsView.localize(\"dxDataGrid-ariaExpand\"), $container)\r\n                } else {\r\n                    setEmptyText($container)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    setEmptyText: setEmptyText,\r\n    isDateType: isDateType,\r\n    getSelectionRange: function(focusedElement) {\r\n        try {\r\n            if (focusedElement) {\r\n                return {\r\n                    selectionStart: focusedElement.selectionStart,\r\n                    selectionEnd: focusedElement.selectionEnd\r\n                }\r\n            }\r\n        } catch (e) {}\r\n        return {}\r\n    },\r\n    setSelectionRange: function(focusedElement, selectionRange) {\r\n        try {\r\n            if (focusedElement && focusedElement.setSelectionRange) {\r\n                focusedElement.setSelectionRange(selectionRange.selectionStart, selectionRange.selectionEnd)\r\n            }\r\n        } catch (e) {}\r\n    },\r\n    focusAndSelectElement: function(component, $element) {\r\n        var isFocused = $element.is(\":focus\");\r\n        eventsEngine.trigger($element, \"focus\");\r\n        var isSelectTextOnEditingStart = component.option(\"editing.selectTextOnEditStart\");\r\n        var element = $element.get(0);\r\n        if (!isFocused && isSelectTextOnEditingStart && $element.is(\".dx-texteditor-input\") && !$element.is(\"[readonly]\")) {\r\n            var editor = getWidgetInstance($element.closest(\".dx-texteditor\"));\r\n            when(editor && editor._loadItemDeferred).done((function() {\r\n                element.select()\r\n            }))\r\n        }\r\n    },\r\n    getWidgetInstance: getWidgetInstance,\r\n    getLastResizableColumnIndex: function(columns, resultWidths) {\r\n        var hasResizableColumns = columns.some(column => column && !column.command && !column.fixed && false !== column.allowResizing);\r\n        var lastColumnIndex;\r\n        for (lastColumnIndex = columns.length - 1; columns[lastColumnIndex]; lastColumnIndex--) {\r\n            var column = columns[lastColumnIndex];\r\n            var width = resultWidths && resultWidths[lastColumnIndex];\r\n            var allowResizing = !hasResizableColumns || false !== column.allowResizing;\r\n            if (!column.command && !column.fixed && \"adaptiveHidden\" !== width && allowResizing) {\r\n                break\r\n            }\r\n        }\r\n        return lastColumnIndex\r\n    },\r\n    isElementInCurrentGrid: function(controller, $element) {\r\n        if ($element && $element.length) {\r\n            var $grid = $element.closest(\".\" + controller.getWidgetContainerClass()).parent();\r\n            return $grid.is(controller.component.$element())\r\n        }\r\n        return false\r\n    },\r\n    isVirtualRowRendering: function(that) {\r\n        var rowRenderingMode = that.option(ROW_RENDERING_MODE_OPTION);\r\n        var isVirtualMode = that.option(SCROLLING_MODE_OPTION) === SCROLLING_MODE_VIRTUAL;\r\n        var isAppendMode = that.option(SCROLLING_MODE_OPTION) === SCROLLING_MODE_INFINITE;\r\n        if (false === that.option(LEGACY_SCROLLING_MODE) && (isVirtualMode || isAppendMode)) {\r\n            return true\r\n        }\r\n        return rowRenderingMode === SCROLLING_MODE_VIRTUAL\r\n    },\r\n    getPixelRatio: function(window) {\r\n        return window.devicePixelRatio || 1\r\n    },\r\n    getContentHeightLimit(browser) {\r\n        if (browser.mozilla) {\r\n            return 8e6\r\n        }\r\n        return 15e6 / this.getPixelRatio(getWindow())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.modules.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Class from \"../../core/class\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    grep\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nvar WIDGET_WITH_LEGACY_CONTAINER_NAME = \"dxDataGrid\";\r\nvar ModuleItem = Class.inherit({\r\n    _endUpdateCore: function() {},\r\n    ctor: function(component) {\r\n        var that = this;\r\n        that._updateLockCount = 0;\r\n        that.component = component;\r\n        that._actions = {};\r\n        that._actionConfigs = {};\r\n        each(this.callbackNames() || [], (function(index, name) {\r\n            var flags = that.callbackFlags(name) || {};\r\n            flags.unique = true, flags.syncStrategy = true;\r\n            that[this] = Callbacks(flags)\r\n        }))\r\n    },\r\n    init: function() {},\r\n    callbackNames: function() {},\r\n    callbackFlags: function() {},\r\n    publicMethods: function() {},\r\n    beginUpdate: function() {\r\n        this._updateLockCount++\r\n    },\r\n    endUpdate: function() {\r\n        if (this._updateLockCount > 0) {\r\n            this._updateLockCount--;\r\n            if (!this._updateLockCount) {\r\n                this._endUpdateCore()\r\n            }\r\n        }\r\n    },\r\n    option: function(name) {\r\n        var component = this.component;\r\n        var optionCache = component._optionCache;\r\n        if (1 === arguments.length && optionCache) {\r\n            if (!(name in optionCache)) {\r\n                optionCache[name] = component.option(name)\r\n            }\r\n            return optionCache[name]\r\n        }\r\n        return component.option.apply(component, arguments)\r\n    },\r\n    _silentOption: function(name, value) {\r\n        var component = this.component;\r\n        var optionCache = component._optionCache;\r\n        if (optionCache) {\r\n            optionCache[name] = value\r\n        }\r\n        return component._setOptionWithoutOptionChange(name, value)\r\n    },\r\n    localize: function(name) {\r\n        var optionCache = this.component._optionCache;\r\n        if (optionCache) {\r\n            if (!(name in optionCache)) {\r\n                optionCache[name] = messageLocalization.format(name)\r\n            }\r\n            return optionCache[name]\r\n        }\r\n        return messageLocalization.format(name)\r\n    },\r\n    on: function() {\r\n        return this.component.on.apply(this.component, arguments)\r\n    },\r\n    off: function() {\r\n        return this.component.off.apply(this.component, arguments)\r\n    },\r\n    optionChanged: function(args) {\r\n        if (args.name in this._actions) {\r\n            this.createAction(args.name, this._actionConfigs[args.name]);\r\n            args.handled = true\r\n        }\r\n    },\r\n    getAction: function(actionName) {\r\n        return this._actions[actionName]\r\n    },\r\n    setAria: function(name, value, $target) {\r\n        var target = $target.get(0);\r\n        var prefix = \"role\" !== name && \"id\" !== name ? \"aria-\" : \"\";\r\n        if (target.setAttribute) {\r\n            target.setAttribute(prefix + name, value)\r\n        } else {\r\n            $target.attr(prefix + name, value)\r\n        }\r\n    },\r\n    _createComponent: function() {\r\n        return this.component._createComponent.apply(this.component, arguments)\r\n    },\r\n    getController: function(name) {\r\n        return this.component._controllers[name]\r\n    },\r\n    createAction: function(actionName, config) {\r\n        if (isFunction(actionName)) {\r\n            var action = this.component._createAction(actionName.bind(this), config);\r\n            return function(e) {\r\n                action({\r\n                    event: e\r\n                })\r\n            }\r\n        } else {\r\n            this._actions[actionName] = this.component._createActionByOption(actionName, config);\r\n            this._actionConfigs[actionName] = config\r\n        }\r\n    },\r\n    executeAction: function(actionName, options) {\r\n        var action = this._actions[actionName];\r\n        return action && action(options)\r\n    },\r\n    dispose: function() {\r\n        var that = this;\r\n        each(that.callbackNames() || [], (function() {\r\n            that[this].empty()\r\n        }))\r\n    },\r\n    addWidgetPrefix: function(className) {\r\n        var componentName = this.component.NAME;\r\n        return \"dx-\" + componentName.slice(2).toLowerCase() + (className ? \"-\" + className : \"\")\r\n    },\r\n    getWidgetContainerClass: function() {\r\n        var containerName = this.component.NAME === WIDGET_WITH_LEGACY_CONTAINER_NAME ? null : \"container\";\r\n        return this.addWidgetPrefix(containerName)\r\n    }\r\n});\r\nvar Controller = ModuleItem;\r\nvar ViewController = Controller.inherit({\r\n    getView: function(name) {\r\n        return this.component._views[name]\r\n    },\r\n    getViews: function() {\r\n        return this.component._views\r\n    }\r\n});\r\nvar View = ModuleItem.inherit({\r\n    _isReady: function() {\r\n        return this.component.isReady()\r\n    },\r\n    _endUpdateCore: function() {\r\n        this.callBase();\r\n        if (!this._isReady() && this._requireReady) {\r\n            this._requireRender = false;\r\n            this.component._requireResize = false\r\n        }\r\n        if (this._requireRender) {\r\n            this._requireRender = false;\r\n            this.render(this._$parent)\r\n        }\r\n    },\r\n    _invalidate: function(requireResize, requireReady) {\r\n        this._requireRender = true;\r\n        this.component._requireResize = hasWindow() && (this.component._requireResize || requireResize);\r\n        this._requireReady = this._requireReady || requireReady\r\n    },\r\n    _renderCore: function() {},\r\n    _resizeCore: function() {},\r\n    _parentElement: function() {\r\n        return this._$parent\r\n    },\r\n    ctor: function(component) {\r\n        this.callBase(component);\r\n        this.renderCompleted = Callbacks();\r\n        this.resizeCompleted = Callbacks()\r\n    },\r\n    element: function() {\r\n        return this._$element\r\n    },\r\n    getElementHeight: function() {\r\n        var $element = this.element();\r\n        if (!$element) {\r\n            return 0\r\n        }\r\n        var marginTop = parseFloat($element.css(\"marginTop\")) || 0;\r\n        var marginBottom = parseFloat($element.css(\"marginBottom\")) || 0;\r\n        var offsetHeight = $element.get(0).offsetHeight;\r\n        return offsetHeight + marginTop + marginBottom\r\n    },\r\n    isVisible: function() {\r\n        return true\r\n    },\r\n    getTemplate: function(name) {\r\n        return this.component._getTemplate(name)\r\n    },\r\n    render: function($parent, options) {\r\n        var $element = this._$element;\r\n        var isVisible = this.isVisible();\r\n        if (!$element && !$parent) {\r\n            return\r\n        }\r\n        this._requireReady = false;\r\n        if (!$element) {\r\n            $element = this._$element = $(\"<div>\").appendTo($parent);\r\n            this._$parent = $parent\r\n        }\r\n        $element.toggleClass(\"dx-hidden\", !isVisible);\r\n        if (isVisible) {\r\n            this.component._optionCache = {};\r\n            this._renderCore(options);\r\n            this.component._optionCache = void 0;\r\n            this.renderCompleted.fire(options)\r\n        }\r\n    },\r\n    resize: function() {\r\n        this.isResizing = true;\r\n        this._resizeCore();\r\n        this.resizeCompleted.fire();\r\n        this.isResizing = false\r\n    },\r\n    focus: function() {\r\n        eventsEngine.trigger(this.element(), \"focus\")\r\n    }\r\n});\r\nvar MODULES_ORDER_MAX_INDEX = 1e6;\r\nvar processModules = function(that, componentClass) {\r\n    var modules = componentClass.modules;\r\n    var modulesOrder = componentClass.modulesOrder;\r\n    var controllerTypes = componentClass.controllerTypes || {};\r\n    var viewTypes = componentClass.viewTypes || {};\r\n    if (!componentClass.controllerTypes) {\r\n        if (modulesOrder) {\r\n            modules.sort((function(module1, module2) {\r\n                var orderIndex1 = inArray(module1.name, modulesOrder);\r\n                var orderIndex2 = inArray(module2.name, modulesOrder);\r\n                if (orderIndex1 < 0) {\r\n                    orderIndex1 = MODULES_ORDER_MAX_INDEX\r\n                }\r\n                if (orderIndex2 < 0) {\r\n                    orderIndex2 = MODULES_ORDER_MAX_INDEX\r\n                }\r\n                return orderIndex1 - orderIndex2\r\n            }))\r\n        }\r\n        each(modules, (function() {\r\n            var controllers = this.controllers;\r\n            var moduleName = this.name;\r\n            var views = this.views;\r\n            controllers && each(controllers, (function(name, type) {\r\n                if (controllerTypes[name]) {\r\n                    throw errors.Error(\"E1001\", moduleName, name)\r\n                } else if (!(type && type.subclassOf && type.subclassOf(Controller))) {\r\n                    type.subclassOf(Controller);\r\n                    throw errors.Error(\"E1002\", moduleName, name)\r\n                }\r\n                controllerTypes[name] = type\r\n            }));\r\n            views && each(views, (function(name, type) {\r\n                if (viewTypes[name]) {\r\n                    throw errors.Error(\"E1003\", moduleName, name)\r\n                } else if (!(type && type.subclassOf && type.subclassOf(View))) {\r\n                    throw errors.Error(\"E1004\", moduleName, name)\r\n                }\r\n                viewTypes[name] = type\r\n            }))\r\n        }));\r\n        each(modules, (function() {\r\n            var extenders = this.extenders;\r\n            if (extenders) {\r\n                extenders.controllers && each(extenders.controllers, (function(name, extender) {\r\n                    if (controllerTypes[name]) {\r\n                        controllerTypes[name] = controllerTypes[name].inherit(extender)\r\n                    }\r\n                }));\r\n                extenders.views && each(extenders.views, (function(name, extender) {\r\n                    if (viewTypes[name]) {\r\n                        viewTypes[name] = viewTypes[name].inherit(extender)\r\n                    }\r\n                }))\r\n            }\r\n        }));\r\n        componentClass.controllerTypes = controllerTypes;\r\n        componentClass.viewTypes = viewTypes\r\n    }\r\n    var createModuleItems = function(moduleTypes) {\r\n        var moduleItems = {};\r\n        each(moduleTypes, (function(name, moduleType) {\r\n            var moduleItem = new moduleType(that);\r\n            moduleItem.name = name;\r\n            ! function(that, name, moduleItem) {\r\n                var publicMethods = moduleItem.publicMethods();\r\n                if (publicMethods) {\r\n                    each(publicMethods, (function(index, methodName) {\r\n                        if (moduleItem[methodName]) {\r\n                            if (!that[methodName]) {\r\n                                that[methodName] = function() {\r\n                                    return moduleItem[methodName].apply(moduleItem, arguments)\r\n                                }\r\n                            } else {\r\n                                throw errors.Error(\"E1005\", methodName)\r\n                            }\r\n                        } else {\r\n                            throw errors.Error(\"E1006\", name, methodName)\r\n                        }\r\n                    }))\r\n                }\r\n            }(that, name, moduleItem);\r\n            moduleItems[name] = moduleItem\r\n        }));\r\n        return moduleItems\r\n    };\r\n    that._controllers = createModuleItems(controllerTypes);\r\n    that._views = createModuleItems(viewTypes)\r\n};\r\nvar callModuleItemsMethod = function(that, methodName, args) {\r\n    args = args || [];\r\n    if (that._controllers) {\r\n        each(that._controllers, (function() {\r\n            this[methodName] && this[methodName].apply(this, args)\r\n        }))\r\n    }\r\n    if (that._views) {\r\n        each(that._views, (function() {\r\n            this[methodName] && this[methodName].apply(this, args)\r\n        }))\r\n    }\r\n};\r\nexport default {\r\n    modules: [],\r\n    View: View,\r\n    ViewController: ViewController,\r\n    Controller: Controller,\r\n    registerModule: function(name, module) {\r\n        var modules = this.modules;\r\n        for (var i = 0; i < modules.length; i++) {\r\n            if (modules[i].name === name) {\r\n                return\r\n            }\r\n        }\r\n        module.name = name;\r\n        modules.push(module);\r\n        delete this.controllerTypes;\r\n        delete this.viewTypes\r\n    },\r\n    registerModulesOrder: function(moduleNames) {\r\n        this.modulesOrder = moduleNames\r\n    },\r\n    unregisterModule: function(name) {\r\n        this.modules = grep(this.modules, (function(module) {\r\n            return module.name !== name\r\n        }));\r\n        delete this.controllerTypes;\r\n        delete this.viewTypes\r\n    },\r\n    processModules: processModules,\r\n    callModuleItemsMethod: callModuleItemsMethod\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\r\nimport modules from \"../grid_core/ui.grid_core.modules\";\r\nexport default _extends({}, modules, gridCoreUtils, {\r\n    modules: []\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_state_mixin.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nvar COLUMN_INDICATORS_CLASS = \"dx-column-indicators\";\r\nvar GROUP_PANEL_ITEM_CLASS = \"dx-group-panel-item\";\r\nexport default {\r\n    _applyColumnState: function(options) {\r\n        var _that$component;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var columnAlignment = this._getColumnAlignment(options.column.alignment, rtlEnabled);\r\n        var parameters = extend(true, {\r\n            columnAlignment: columnAlignment\r\n        }, options);\r\n        var isGroupPanelItem = parameters.rootElement.hasClass(GROUP_PANEL_ITEM_CLASS);\r\n        var $indicatorsContainer = this._createIndicatorContainer(parameters, isGroupPanelItem);\r\n        var $span = $(\"<span>\").addClass(this._getIndicatorClassName(options.name));\r\n        var columnsController = null === (_that$component = this.component) || void 0 === _that$component ? void 0 : _that$component.getController(\"columns\");\r\n        var indicatorAlignment = (null === columnsController || void 0 === columnsController ? void 0 : columnsController.getHeaderContentAlignment(columnAlignment)) || columnAlignment;\r\n        parameters.container = $indicatorsContainer;\r\n        parameters.indicator = $span;\r\n        this._renderIndicator(parameters);\r\n        $indicatorsContainer[(isGroupPanelItem || !options.showColumnLines) && \"left\" === indicatorAlignment ? \"appendTo\" : \"prependTo\"](options.rootElement);\r\n        return $span\r\n    },\r\n    _getIndicatorClassName: noop,\r\n    _getColumnAlignment: function(alignment, rtlEnabled) {\r\n        rtlEnabled = rtlEnabled || this.option(\"rtlEnabled\");\r\n        return alignment && \"center\" !== alignment ? alignment : getDefaultAlignment(rtlEnabled)\r\n    },\r\n    _createIndicatorContainer: function(options, ignoreIndicatorAlignment) {\r\n        var $indicatorsContainer = this._getIndicatorContainer(options.rootElement);\r\n        var indicatorAlignment = \"left\" === options.columnAlignment ? \"right\" : \"left\";\r\n        if (!$indicatorsContainer.length) {\r\n            $indicatorsContainer = $(\"<div>\").addClass(COLUMN_INDICATORS_CLASS)\r\n        }\r\n        this.setAria(\"role\", \"presentation\", $indicatorsContainer);\r\n        return $indicatorsContainer.css(\"float\", options.showColumnLines && !ignoreIndicatorAlignment ? indicatorAlignment : null)\r\n    },\r\n    _getIndicatorContainer: function($cell) {\r\n        return $cell && $cell.find(\".\" + COLUMN_INDICATORS_CLASS)\r\n    },\r\n    _getIndicatorElements: function($cell) {\r\n        var $indicatorContainer = this._getIndicatorContainer($cell);\r\n        return $indicatorContainer && $indicatorContainer.children()\r\n    },\r\n    _renderIndicator: function(options) {\r\n        var $container = options.container;\r\n        var $indicator = options.indicator;\r\n        $container && $indicator && $container.append($indicator)\r\n    },\r\n    _updateIndicators: function(indicatorName) {\r\n        var columns = this.getColumns();\r\n        var $cells = this.getColumnElements();\r\n        var $cell;\r\n        if (!$cells || columns.length !== $cells.length) {\r\n            return\r\n        }\r\n        for (var i = 0; i < columns.length; i++) {\r\n            $cell = $cells.eq(i);\r\n            this._updateIndicator($cell, columns[i], indicatorName);\r\n            var rowOptions = $cell.parent().data(\"options\");\r\n            if (rowOptions && rowOptions.cells) {\r\n                rowOptions.cells[$cell.index()].column = columns[i]\r\n            }\r\n        }\r\n    },\r\n    _updateIndicator: function($cell, column, indicatorName) {\r\n        if (!column.command) {\r\n            return this._applyColumnState({\r\n                name: indicatorName,\r\n                rootElement: $cell,\r\n                column: column,\r\n                showColumnLines: this.option(\"showColumnLines\")\r\n            })\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_view.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getWidth,\r\n    getOuterHeight,\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    data as elementData\r\n} from \"../../core/element_data\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    name as dblclickEvent\r\n} from \"../../events/double_click\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    setWidth\r\n} from \"../../core/utils/style\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    isRenderer,\r\n    isFunction,\r\n    isString,\r\n    isDefined,\r\n    isNumeric\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getBoundingRect,\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport * as iteratorUtils from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport columnStateMixin from \"./ui.grid_core.column_state_mixin\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    nativeScrolling\r\n} from \"../../core/utils/support\";\r\nvar SCROLL_CONTAINER_CLASS = \"scroll-container\";\r\nvar SCROLLABLE_SIMULATED_CLASS = \"scrollable-simulated\";\r\nvar GROUP_SPACE_CLASS = \"group-space\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar TABLE_CLASS = \"table\";\r\nvar TABLE_FIXED_CLASS = \"table-fixed\";\r\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar FILTER_ROW_CLASS = \"filter-row\";\r\nvar ERROR_ROW_CLASS = \"dx-error-row\";\r\nvar CELL_UPDATED_ANIMATION_CLASS = \"cell-updated-animation\";\r\nvar HIDDEN_COLUMNS_WIDTH = \"0.0001px\";\r\nvar CELL_HINT_VISIBLE = \"dxCellHintVisible\";\r\nvar FORM_FIELD_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\r\nvar appendElementTemplate = {\r\n    render: function(options) {\r\n        options.container.append(options.content)\r\n    }\r\n};\r\nvar subscribeToRowEvents = function(that, $table) {\r\n    var touchTarget;\r\n    var touchCurrentTarget;\r\n    var timeoutId;\r\n\r\n    function clearTouchTargets(timeout) {\r\n        return setTimeout((function() {\r\n            touchTarget = touchCurrentTarget = null\r\n        }), timeout)\r\n    }\r\n    eventsEngine.on($table, \"touchstart touchend\", \".dx-row\", (function(e) {\r\n        clearTimeout(timeoutId);\r\n        if (\"touchstart\" === e.type) {\r\n            touchTarget = e.target;\r\n            touchCurrentTarget = e.currentTarget;\r\n            timeoutId = clearTouchTargets(1e3)\r\n        } else {\r\n            timeoutId = clearTouchTargets()\r\n        }\r\n    }));\r\n    eventsEngine.on($table, [clickEventName, dblclickEvent, pointerEvents.down].join(\" \"), \".dx-row\", {\r\n        useNative: that._isNativeClick()\r\n    }, that.createAction((function(e) {\r\n        var event = e.event;\r\n        if (touchTarget) {\r\n            event.target = touchTarget;\r\n            event.currentTarget = touchCurrentTarget\r\n        }\r\n        if (!$(event.target).closest(\"a\").length) {\r\n            e.rowIndex = that.getRowIndex(event.currentTarget);\r\n            if (e.rowIndex >= 0) {\r\n                e.rowElement = getPublicElement($(event.currentTarget));\r\n                e.columns = that.getColumns();\r\n                if (event.type === pointerEvents.down) {\r\n                    that._rowPointerDown(e)\r\n                } else if (event.type === clickEventName) {\r\n                    that._rowClick(e)\r\n                } else {\r\n                    that._rowDblClick(e)\r\n                }\r\n            }\r\n        }\r\n    })))\r\n};\r\nvar getWidthStyle = function(width) {\r\n    if (\"auto\" === width) {\r\n        return \"\"\r\n    }\r\n    return isNumeric(width) ? width + \"px\" : width\r\n};\r\nvar setCellWidth = function(cell, column, width) {\r\n    cell.style.width = cell.style.maxWidth = \"auto\" === column.width ? \"\" : width\r\n};\r\nvar copyAttributes = function(element, newElement) {\r\n    if (!element || !newElement) {\r\n        return\r\n    }\r\n    var oldAttributes = element.attributes;\r\n    var newAttributes = newElement.attributes;\r\n    var i;\r\n    for (i = 0; i < oldAttributes.length; i++) {\r\n        var name = oldAttributes[i].nodeName;\r\n        if (!newElement.hasAttribute(name)) {\r\n            element.removeAttribute(name)\r\n        }\r\n    }\r\n    for (i = 0; i < newAttributes.length; i++) {\r\n        element.setAttribute(newAttributes[i].nodeName, newAttributes[i].nodeValue)\r\n    }\r\n};\r\nexport var ColumnsView = modules.View.inherit(columnStateMixin).inherit({\r\n    _createScrollableOptions: function() {\r\n        var scrollingOptions = this.option(\"scrolling\");\r\n        var useNativeScrolling = this.option(\"scrolling.useNative\");\r\n        var options = extend({}, scrollingOptions, {\r\n            direction: \"both\",\r\n            bounceEnabled: false,\r\n            useKeyboard: false\r\n        });\r\n        if (void 0 === useNativeScrolling) {\r\n            useNativeScrolling = true\r\n        }\r\n        if (\"auto\" === useNativeScrolling) {\r\n            delete options.useNative;\r\n            delete options.useSimulatedScrollbar\r\n        } else {\r\n            options.useNative = !!useNativeScrolling;\r\n            options.useSimulatedScrollbar = !useNativeScrolling\r\n        }\r\n        return options\r\n    },\r\n    _updateCell: function($cell, parameters) {\r\n        if (parameters.rowType) {\r\n            this._cellPrepared($cell, parameters)\r\n        }\r\n    },\r\n    _createCell: function(options) {\r\n        var column = options.column;\r\n        var alignment = column.alignment || getDefaultAlignment(this.option(\"rtlEnabled\"));\r\n        var cell = domAdapter.createElement(\"td\");\r\n        cell.style.textAlign = alignment;\r\n        var $cell = $(cell);\r\n        if (\"data\" === options.rowType && column.headerId && !column.type) {\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                this.setAria(\"describedby\", column.headerId, $cell)\r\n            }\r\n        }\r\n        if (column.cssClass) {\r\n            $cell.addClass(column.cssClass)\r\n        }\r\n        if (\"expand\" === column.command) {\r\n            $cell.addClass(column.cssClass);\r\n            $cell.addClass(this.addWidgetPrefix(GROUP_SPACE_CLASS))\r\n        }\r\n        if (column.colspan > 1) {\r\n            $cell.attr(\"colSpan\", column.colspan)\r\n        } else if (!column.isBand && \"auto\" !== column.visibleWidth && this.option(\"columnAutoWidth\")) {\r\n            if (column.width || column.minWidth) {\r\n                cell.style.minWidth = getWidthStyle(column.minWidth || column.width)\r\n            }\r\n            if (column.width) {\r\n                setCellWidth(cell, column, getWidthStyle(column.width))\r\n            }\r\n        }\r\n        return $cell\r\n    },\r\n    _createRow: function(rowObject, tagName) {\r\n        tagName = tagName || \"tr\";\r\n        var $element = $(\"<\".concat(tagName, \">\")).addClass(ROW_CLASS);\r\n        this.setAria(\"role\", \"row\", $element);\r\n        return $element\r\n    },\r\n    _isAltRow: function(row) {\r\n        return row && row.dataIndex % 2 === 1\r\n    },\r\n    _createTable: function(columns, isAppend) {\r\n        var that = this;\r\n        var $table = $(\"<table>\").addClass(that.addWidgetPrefix(TABLE_CLASS)).addClass(that.addWidgetPrefix(TABLE_FIXED_CLASS));\r\n        if (columns && !isAppend) {\r\n            $table.append(that._createColGroup(columns));\r\n            if (browser.safari) {\r\n                $table.append($(\"<thead>\").append(\"<tr>\"))\r\n            }\r\n            that.setAria(\"role\", \"presentation\", $table)\r\n        } else {\r\n            that.setAria(\"hidden\", true, $table)\r\n        }\r\n        this.setAria(\"role\", \"presentation\", $(\"<tbody>\").appendTo($table));\r\n        if (isAppend) {\r\n            return $table\r\n        }\r\n        if (browser.mozilla) {\r\n            eventsEngine.on($table, \"mousedown\", \"td\", (function(e) {\r\n                if (e.ctrlKey) {\r\n                    e.preventDefault()\r\n                }\r\n            }))\r\n        }\r\n        if (that.option(\"cellHintEnabled\")) {\r\n            eventsEngine.on($table, \"mousemove\", \".dx-row > td\", this.createAction((function(args) {\r\n                var e = args.event;\r\n                var $element = $(e.target);\r\n                var $cell = $(e.currentTarget);\r\n                var $row = $cell.parent();\r\n                var isDataRow = $row.hasClass(\"dx-data-row\");\r\n                var isHeaderRow = $row.hasClass(\"dx-header-row\");\r\n                var isGroupRow = $row.hasClass(GROUP_ROW_CLASS);\r\n                var isMasterDetailRow = $row.hasClass(DETAIL_ROW_CLASS);\r\n                var isFilterRow = $row.hasClass(that.addWidgetPrefix(FILTER_ROW_CLASS));\r\n                var visibleColumns = that._columnsController.getVisibleColumns();\r\n                var rowOptions = $row.data(\"options\");\r\n                var columnIndex = $cell.index();\r\n                var cellOptions = rowOptions && rowOptions.cells && rowOptions.cells[columnIndex];\r\n                var column = cellOptions ? cellOptions.column : visibleColumns[columnIndex];\r\n                if (!isMasterDetailRow && !isFilterRow && (!isDataRow || isDataRow && column && !column.cellTemplate) && (!isHeaderRow || isHeaderRow && column && !column.headerCellTemplate) && (!isGroupRow || isGroupRow && column && (void 0 === column.groupIndex || !column.groupCellTemplate))) {\r\n                    if ($element.data(CELL_HINT_VISIBLE)) {\r\n                        $element.removeAttr(\"title\");\r\n                        $element.data(CELL_HINT_VISIBLE, false)\r\n                    }\r\n                    var difference = $element[0].scrollWidth - $element[0].clientWidth;\r\n                    if (difference > 0 && !isDefined($element.attr(\"title\"))) {\r\n                        $element.attr(\"title\", $element.text());\r\n                        $element.data(CELL_HINT_VISIBLE, true)\r\n                    }\r\n                }\r\n            })))\r\n        }\r\n        var getOptions = function(event) {\r\n            var $cell = $(event.currentTarget);\r\n            var $fieldItemContent = $(event.target).closest(\".\" + FORM_FIELD_ITEM_CONTENT_CLASS);\r\n            var $row = $cell.parent();\r\n            var rowOptions = $row.data(\"options\");\r\n            var options = rowOptions && rowOptions.cells && rowOptions.cells[$cell.index()];\r\n            if (!$cell.closest(\"table\").is(event.delegateTarget)) {\r\n                return\r\n            }\r\n            var resultOptions = extend({}, options, {\r\n                cellElement: getPublicElement($cell),\r\n                event: event,\r\n                eventType: event.type\r\n            });\r\n            resultOptions.rowIndex = that.getRowIndex($row);\r\n            if ($fieldItemContent.length) {\r\n                var formItemOptions = $fieldItemContent.data(\"dx-form-item\");\r\n                if (formItemOptions.column) {\r\n                    resultOptions.column = formItemOptions.column;\r\n                    resultOptions.columnIndex = that._columnsController.getVisibleIndex(resultOptions.column.index)\r\n                }\r\n            }\r\n            return resultOptions\r\n        };\r\n        eventsEngine.on($table, \"mouseover\", \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellHoverChanged\", options)\r\n        }));\r\n        eventsEngine.on($table, \"mouseout\", \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellHoverChanged\", options)\r\n        }));\r\n        eventsEngine.on($table, clickEventName, \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellClick\", options)\r\n        }));\r\n        eventsEngine.on($table, dblclickEvent, \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellDblClick\", options)\r\n        }));\r\n        subscribeToRowEvents(that, $table);\r\n        return $table\r\n    },\r\n    _isNativeClick: noop,\r\n    _rowPointerDown: noop,\r\n    _rowClick: noop,\r\n    _rowDblClick: noop,\r\n    _createColGroup: function(columns) {\r\n        var colgroupElement = $(\"<colgroup>\");\r\n        for (var i = 0; i < columns.length; i++) {\r\n            var colspan = columns[i].colspan || 1;\r\n            for (var j = 0; j < colspan; j++) {\r\n                colgroupElement.append(this._createCol(columns[i]))\r\n            }\r\n        }\r\n        return colgroupElement\r\n    },\r\n    _createCol: function(column) {\r\n        var width = column.visibleWidth || column.width;\r\n        if (\"adaptiveHidden\" === width) {\r\n            width = HIDDEN_COLUMNS_WIDTH\r\n        }\r\n        var col = $(\"<col>\");\r\n        setWidth(col, width);\r\n        return col\r\n    },\r\n    renderDelayedTemplates: function(change) {\r\n        var delayedTemplates = this._delayedTemplates;\r\n        var syncTemplates = delayedTemplates.filter(template => !template.async);\r\n        var asyncTemplates = delayedTemplates.filter(template => template.async);\r\n        this._delayedTemplates = [];\r\n        this._renderDelayedTemplatesCore(syncTemplates, false, change);\r\n        this._renderDelayedTemplatesCoreAsync(asyncTemplates)\r\n    },\r\n    _renderDelayedTemplatesCoreAsync: function(templates) {\r\n        var that = this;\r\n        if (templates.length) {\r\n            getWindow().setTimeout((function() {\r\n                that._renderDelayedTemplatesCore(templates, true)\r\n            }))\r\n        }\r\n    },\r\n    _renderDelayedTemplatesCore: function(templates, isAsync, change) {\r\n        var date = new Date;\r\n        while (templates.length) {\r\n            var templateParameters = templates.shift();\r\n            var options = templateParameters.options;\r\n            var doc = domAdapter.getDocument();\r\n            if (!isAsync || $(options.container).closest(doc).length) {\r\n                if (change) {\r\n                    options.change = change\r\n                }\r\n                templateParameters.template.render(options)\r\n            }\r\n            if (isAsync && new Date - date > 30) {\r\n                this._renderDelayedTemplatesCoreAsync(templates);\r\n                break\r\n            }\r\n        }\r\n        if (!templates.length && this._delayedTemplates.length) {\r\n            this.renderDelayedTemplates()\r\n        }\r\n    },\r\n    _processTemplate: function(template) {\r\n        var renderingTemplate;\r\n        if (template && template.render && !isRenderer(template)) {\r\n            renderingTemplate = {\r\n                allowRenderToDetachedContainer: template.allowRenderToDetachedContainer,\r\n                render: function(options) {\r\n                    template.render(options.container, options.model, options.change);\r\n                    options.deferred && options.deferred.resolve()\r\n                }\r\n            }\r\n        } else if (isFunction(template)) {\r\n            renderingTemplate = {\r\n                render: function(options) {\r\n                    var renderedTemplate = template(getPublicElement(options.container), options.model, options.change);\r\n                    if (renderedTemplate && (renderedTemplate.nodeType || isRenderer(renderedTemplate))) {\r\n                        options.container.append(renderedTemplate)\r\n                    }\r\n                    options.deferred && options.deferred.resolve()\r\n                }\r\n            }\r\n        } else {\r\n            var templateID = isString(template) ? template : $(template).attr(\"id\");\r\n            if (!templateID) {\r\n                renderingTemplate = this.getTemplate(template)\r\n            } else {\r\n                if (!this._templatesCache[templateID]) {\r\n                    this._templatesCache[templateID] = this.getTemplate(template)\r\n                }\r\n                renderingTemplate = this._templatesCache[templateID]\r\n            }\r\n        }\r\n        return renderingTemplate\r\n    },\r\n    renderTemplate: function(container, template, options, allowRenderToDetachedContainer, change) {\r\n        var renderingTemplate = this._processTemplate(template, options);\r\n        var column = options.column;\r\n        var isDataRow = \"data\" === options.rowType;\r\n        var templateDeferred = new Deferred;\r\n        var templateOptions = {\r\n            container: container,\r\n            model: options,\r\n            deferred: templateDeferred,\r\n            onRendered: () => {\r\n                templateDeferred.resolve()\r\n            }\r\n        };\r\n        if (renderingTemplate) {\r\n            options.component = this.component;\r\n            var async = column && (column.renderAsync && isDataRow || this.option(\"renderAsync\") && (false !== column.renderAsync && (column.command || column.showEditorAlways) && isDataRow || \"filter\" === options.rowType));\r\n            if ((renderingTemplate.allowRenderToDetachedContainer || allowRenderToDetachedContainer) && !async) {\r\n                renderingTemplate.render(templateOptions)\r\n            } else {\r\n                this._delayedTemplates.push({\r\n                    template: renderingTemplate,\r\n                    options: templateOptions,\r\n                    async: async\r\n                })\r\n            }\r\n            if (change) {\r\n                change.templateDeferreds = change.templateDeferreds || [];\r\n                change.templateDeferreds.push(templateDeferred)\r\n            }\r\n        } else {\r\n            templateDeferred.reject()\r\n        }\r\n        return templateDeferred.promise()\r\n    },\r\n    _getBodies: function(tableElement) {\r\n        return $(tableElement).children(\"tbody\").not(\".dx-header\").not(\".dx-footer\")\r\n    },\r\n    _wrapRowIfNeed: function($table, $row) {\r\n        var hasDataRowTemplate = this.option().rowTemplate || this.option(\"dataRowTemplate\");\r\n        var $tBodies = hasDataRowTemplate && this._getBodies(this._tableElement || $table);\r\n        if ($tBodies && $tBodies.filter(\".\" + ROW_CLASS).length) {\r\n            var $tbody = $(\"<tbody>\").addClass($row.attr(\"class\"));\r\n            this.setAria(\"role\", \"presentation\", $tbody);\r\n            return $tbody.append($row)\r\n        }\r\n        return $row\r\n    },\r\n    _appendRow: function($table, $row, appendTemplate) {\r\n        appendTemplate = appendTemplate || appendElementTemplate;\r\n        appendTemplate.render({\r\n            content: $row,\r\n            container: $table\r\n        })\r\n    },\r\n    _resizeCore: function() {\r\n        var scrollLeft = this._scrollLeft;\r\n        if (scrollLeft >= 0) {\r\n            this._scrollLeft = 0;\r\n            this.scrollTo({\r\n                left: scrollLeft\r\n            })\r\n        }\r\n    },\r\n    _renderCore: function(e) {\r\n        var $root = this.element().parent();\r\n        if (!$root || $root.parent().length) {\r\n            this.renderDelayedTemplates(e)\r\n        }\r\n    },\r\n    _renderTable: function(options) {\r\n        options = options || {};\r\n        options.columns = this._columnsController.getVisibleColumns();\r\n        var changeType = options.change && options.change.changeType;\r\n        var $table = this._createTable(options.columns, \"append\" === changeType || \"prepend\" === changeType || \"update\" === changeType);\r\n        this._renderRows($table, options);\r\n        return $table\r\n    },\r\n    _renderRows: function($table, options) {\r\n        var rows = this._getRows(options.change);\r\n        var columnIndices = options.change && options.change.columnIndices || [];\r\n        var changeTypes = options.change && options.change.changeTypes || [];\r\n        for (var i = 0; i < rows.length; i++) {\r\n            this._renderRow($table, extend({\r\n                row: rows[i],\r\n                columnIndices: columnIndices[i],\r\n                changeType: changeTypes[i]\r\n            }, options))\r\n        }\r\n    },\r\n    _renderRow: function($table, options) {\r\n        if (!options.columnIndices) {\r\n            options.row.cells = []\r\n        }\r\n        var $row = this._createRow(options.row);\r\n        var $wrappedRow = this._wrapRowIfNeed($table, $row);\r\n        if (\"remove\" !== options.changeType) {\r\n            this._renderCells($row, options)\r\n        }\r\n        this._appendRow($table, $wrappedRow);\r\n        var rowOptions = extend({\r\n            columns: options.columns\r\n        }, options.row);\r\n        this._addWatchMethod(rowOptions, options.row);\r\n        this._rowPrepared($wrappedRow, rowOptions, options.row)\r\n    },\r\n    _needRenderCell: function(columnIndex, columnIndices) {\r\n        return !columnIndices || columnIndices.indexOf(columnIndex) >= 0\r\n    },\r\n    _renderCells: function($row, options) {\r\n        var columnIndex = 0;\r\n        var row = options.row;\r\n        var columns = options.columns;\r\n        for (var i = 0; i < columns.length; i++) {\r\n            if (this._needRenderCell(i, options.columnIndices)) {\r\n                this._renderCell($row, extend({\r\n                    column: columns[i],\r\n                    columnIndex: columnIndex,\r\n                    value: row.values && row.values[columnIndex],\r\n                    oldValue: row.oldValues && row.oldValues[columnIndex]\r\n                }, options))\r\n            }\r\n            if (columns[i].colspan > 1) {\r\n                columnIndex += columns[i].colspan\r\n            } else {\r\n                columnIndex++\r\n            }\r\n        }\r\n    },\r\n    _updateCells: function($rowElement, $newRowElement, columnIndices) {\r\n        var $cells = $rowElement.children();\r\n        var $newCells = $newRowElement.children();\r\n        var highlightChanges = this.option(\"highlightChanges\");\r\n        var cellUpdatedClass = this.addWidgetPrefix(CELL_UPDATED_ANIMATION_CLASS);\r\n        columnIndices.forEach((function(columnIndex, index) {\r\n            var $cell = $cells.eq(columnIndex);\r\n            var $newCell = $newCells.eq(index);\r\n            $cell.replaceWith($newCell);\r\n            if (highlightChanges && !$newCell.hasClass(\"dx-command-expand\")) {\r\n                $newCell.addClass(cellUpdatedClass)\r\n            }\r\n        }));\r\n        copyAttributes($rowElement.get(0), $newRowElement.get(0))\r\n    },\r\n    _setCellAriaAttributes: function($cell, cellOptions) {\r\n        if (\"freeSpace\" !== cellOptions.rowType) {\r\n            this.setAria(\"selected\", false, $cell);\r\n            this.setAria(\"role\", \"gridcell\", $cell);\r\n            var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n            var ariaColIndex = cellOptions.columnIndex + columnIndexOffset + 1;\r\n            this.setAria(\"colindex\", ariaColIndex, $cell)\r\n        }\r\n    },\r\n    _renderCell: function($row, options) {\r\n        var cellOptions = this._getCellOptions(options);\r\n        if (options.columnIndices) {\r\n            if (options.row.cells) {\r\n                options.row.cells[cellOptions.columnIndex] = cellOptions\r\n            }\r\n        } else {\r\n            options.row.cells.push(cellOptions)\r\n        }\r\n        var $cell = this._createCell(cellOptions);\r\n        this._setCellAriaAttributes($cell, cellOptions);\r\n        this._renderCellContent($cell, cellOptions);\r\n        $row.get(0).appendChild($cell.get(0));\r\n        return $cell\r\n    },\r\n    _renderCellContent: function($cell, options) {\r\n        var template = this._getCellTemplate(options);\r\n        when(!template || this.renderTemplate($cell, template, options)).done(() => {\r\n            this._updateCell($cell, options)\r\n        })\r\n    },\r\n    _getCellTemplate: function() {},\r\n    _getRows: function() {\r\n        return []\r\n    },\r\n    _getCellOptions: function(options) {\r\n        var cellOptions = {\r\n            column: options.column,\r\n            columnIndex: options.columnIndex,\r\n            rowType: options.row.rowType,\r\n            isAltRow: this._isAltRow(options.row)\r\n        };\r\n        this._addWatchMethod(cellOptions);\r\n        return cellOptions\r\n    },\r\n    _addWatchMethod: function(options, source) {\r\n        if (!this.option(\"repaintChangesOnly\")) {\r\n            return\r\n        }\r\n        var watchers = [];\r\n        source = source || options;\r\n        source.watch = source.watch || function(getter, updateValueFunc, updateRowFunc) {\r\n            var oldValue = getter(source.data);\r\n            var watcher = function(row) {\r\n                if (row && updateRowFunc) {\r\n                    updateRowFunc(row)\r\n                }\r\n                var newValue = getter(source.data);\r\n                if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\r\n                    if (row) {\r\n                        updateValueFunc(newValue)\r\n                    }\r\n                    oldValue = newValue\r\n                }\r\n            };\r\n            watchers.push(watcher);\r\n            return function() {\r\n                var index = watchers.indexOf(watcher);\r\n                if (index >= 0) {\r\n                    watchers.splice(index, 1)\r\n                }\r\n            }\r\n        };\r\n        source.update = source.update || function(row, keepRow) {\r\n            if (row) {\r\n                this.data = options.data = row.data;\r\n                this.rowIndex = options.rowIndex = row.rowIndex;\r\n                this.dataIndex = options.dataIndex = row.dataIndex;\r\n                this.isExpanded = options.isExpanded = row.isExpanded;\r\n                if (options.row && !keepRow) {\r\n                    options.row = row\r\n                }\r\n            }\r\n            watchers.forEach((function(watcher) {\r\n                watcher(row)\r\n            }))\r\n        };\r\n        if (source !== options) {\r\n            options.watch = source.watch.bind(source)\r\n        }\r\n        return options\r\n    },\r\n    _cellPrepared: function(cell, options) {\r\n        options.cellElement = getPublicElement($(cell));\r\n        this.executeAction(\"onCellPrepared\", options)\r\n    },\r\n    _rowPrepared: function($row, options) {\r\n        elementData($row.get(0), \"options\", options);\r\n        options.rowElement = getPublicElement($row);\r\n        this.executeAction(\"onRowPrepared\", options)\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var optionNames = e.optionNames;\r\n        if (gridCoreUtils.checkChanges(optionNames, [\"width\", \"visibleWidth\"])) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var widths = iteratorUtils.map(visibleColumns, (function(column) {\r\n                var width = column.visibleWidth || column.width;\r\n                return isDefined(width) ? width : \"auto\"\r\n            }));\r\n            this.setColumnWidths({\r\n                widths: widths,\r\n                optionNames: optionNames\r\n            });\r\n            return\r\n        }\r\n        if (!this._requireReady) {\r\n            this.render()\r\n        }\r\n    },\r\n    getCellIndex: function($cell) {\r\n        var cellIndex = $cell.length ? $cell[0].cellIndex : -1;\r\n        return cellIndex\r\n    },\r\n    getTableElements: function() {\r\n        return this._tableElement || $()\r\n    },\r\n    getTableElement: function() {\r\n        return this._tableElement\r\n    },\r\n    setTableElement: function(tableElement) {\r\n        this._tableElement = tableElement\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        switch (args.name) {\r\n            case \"cellHintEnabled\":\r\n            case \"onCellPrepared\":\r\n            case \"onRowPrepared\":\r\n            case \"onCellHoverChanged\":\r\n                this._invalidate(true, true);\r\n                args.handled = true\r\n        }\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that._scrollLeft = -1;\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._dataController = that.getController(\"data\");\r\n        that._delayedTemplates = [];\r\n        that._templatesCache = {};\r\n        that.createAction(\"onCellClick\");\r\n        that.createAction(\"onRowClick\");\r\n        that.createAction(\"onCellDblClick\");\r\n        that.createAction(\"onRowDblClick\");\r\n        that.createAction(\"onCellHoverChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        that.createAction(\"onCellPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        that.createAction(\"onRowPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\",\r\n            afterExecute: function(e) {\r\n                that._afterRowPrepared(e)\r\n            }\r\n        });\r\n        that._columnsController.columnsChanged.add(that._columnOptionChanged.bind(that));\r\n        that._dataController && that._dataController.changed.add(that._handleDataChanged.bind(that))\r\n    },\r\n    _afterRowPrepared: noop,\r\n    _handleDataChanged: function() {},\r\n    callbackNames: function() {\r\n        return [\"scrollChanged\"]\r\n    },\r\n    _updateScrollLeftPosition: function() {\r\n        var scrollLeft = this._scrollLeft;\r\n        if (scrollLeft >= 0) {\r\n            this._scrollLeft = 0;\r\n            this.scrollTo({\r\n                left: scrollLeft\r\n            })\r\n        }\r\n    },\r\n    scrollTo: function(pos) {\r\n        var $element = this.element();\r\n        var $scrollContainer = $element && $element.children(\".\" + this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).not(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\r\n        if (isDefined(pos) && isDefined(pos.left) && this._scrollLeft !== pos.left) {\r\n            this._scrollLeft = pos.left;\r\n            $scrollContainer && $scrollContainer.scrollLeft(pos.left)\r\n        }\r\n    },\r\n    _wrapTableInScrollContainer: function($table) {\r\n        var $scrollContainer = $(\"<div>\");\r\n        var useNative = this.option(\"scrolling.useNative\");\r\n        if (false === useNative || \"auto\" === useNative && !nativeScrolling) {\r\n            $scrollContainer.addClass(this.addWidgetPrefix(SCROLLABLE_SIMULATED_CLASS))\r\n        }\r\n        eventsEngine.on($scrollContainer, \"scroll\", () => {\r\n            var scrollLeft = $scrollContainer.scrollLeft();\r\n            if (scrollLeft !== this._scrollLeft) {\r\n                this.scrollChanged.fire({\r\n                    left: scrollLeft\r\n                }, this.name)\r\n            }\r\n        });\r\n        $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_CLASS)).addClass(this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).append($table).appendTo(this.element());\r\n        this.setAria(\"role\", \"presentation\", $scrollContainer);\r\n        return $scrollContainer\r\n    },\r\n    _updateContent: function($newTableElement) {\r\n        this.setTableElement($newTableElement);\r\n        this._wrapTableInScrollContainer($newTableElement)\r\n    },\r\n    _findContentElement: noop,\r\n    _getWidths: function($cellElements) {\r\n        var result = [];\r\n        var width;\r\n        if ($cellElements) {\r\n            iteratorUtils.each($cellElements, (function(index, item) {\r\n                width = item.offsetWidth;\r\n                if (item.getBoundingClientRect) {\r\n                    var clientRect = getBoundingRect(item);\r\n                    if (clientRect.width > width - 1) {\r\n                        width = clientRect.width\r\n                    }\r\n                }\r\n                result.push(width)\r\n            }))\r\n        }\r\n        return result\r\n    },\r\n    getColumnWidths: function($tableElement) {\r\n        var result = [];\r\n        var $rows;\r\n        var $cells;\r\n        (this.option(\"forceApplyBindings\") || noop)();\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if ($tableElement) {\r\n            $rows = $tableElement.children(\"tbody:not(.dx-header)\").children();\r\n            for (var i = 0; i < $rows.length; i++) {\r\n                var $row = $rows.eq(i);\r\n                var isRowVisible = \"none\" !== $row.get(0).style.display && !$row.hasClass(\"dx-state-invisible\");\r\n                if (!$row.is(\".\" + GROUP_ROW_CLASS) && !$row.is(\".\" + DETAIL_ROW_CLASS) && !$row.is(\".\" + ERROR_ROW_CLASS) && isRowVisible) {\r\n                    $cells = $row.children(\"td\");\r\n                    break\r\n                }\r\n            }\r\n            result = this._getWidths($cells)\r\n        }\r\n        return result\r\n    },\r\n    getVisibleColumnIndex: function(columnIndex, rowIndex) {\r\n        return columnIndex\r\n    },\r\n    setColumnWidths: function(_ref) {\r\n        var {\r\n            widths: widths,\r\n            $tableElement: $tableElement,\r\n            columns: columns,\r\n            fixed: fixed\r\n        } = _ref;\r\n        var $cols;\r\n        var width;\r\n        var minWidth;\r\n        var columnIndex;\r\n        var columnAutoWidth = this.option(\"columnAutoWidth\");\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if ($tableElement && $tableElement.length && widths) {\r\n            columnIndex = 0;\r\n            $cols = $tableElement.children(\"colgroup\").children(\"col\");\r\n            setWidth($cols, \"auto\");\r\n            columns = columns || this.getColumns(null, $tableElement);\r\n            for (var i = 0; i < columns.length; i++) {\r\n                if (columnAutoWidth && !fixed) {\r\n                    width = columns[i].width;\r\n                    if (width && !columns[i].command) {\r\n                        width = columns[i].visibleWidth || width;\r\n                        width = getWidthStyle(width);\r\n                        minWidth = getWidthStyle(columns[i].minWidth || width);\r\n                        var $rows = $rows || $tableElement.children().children(\".dx-row\").not(\".\" + DETAIL_ROW_CLASS);\r\n                        for (var rowIndex = 0; rowIndex < $rows.length; rowIndex++) {\r\n                            var row = $rows[rowIndex];\r\n                            var cell = void 0;\r\n                            var visibleIndex = this.getVisibleColumnIndex(i, rowIndex);\r\n                            if (row.classList.contains(GROUP_ROW_CLASS)) {\r\n                                if (1 !== visibleIndex) {\r\n                                    cell = row.querySelector(\"td[aria-colindex='\".concat(visibleIndex + 1, \"']\"))\r\n                                }\r\n                            } else {\r\n                                cell = row.cells[visibleIndex]\r\n                            }\r\n                            if (cell) {\r\n                                setCellWidth(cell, columns[i], width);\r\n                                cell.style.minWidth = minWidth\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (columns[i].colspan) {\r\n                    columnIndex += columns[i].colspan;\r\n                    continue\r\n                }\r\n                width = widths[columnIndex];\r\n                if (\"adaptiveHidden\" === width) {\r\n                    width = HIDDEN_COLUMNS_WIDTH\r\n                }\r\n                if (\"number\" === typeof width) {\r\n                    width = width.toFixed(3) + \"px\"\r\n                }\r\n                setWidth($cols.eq(columnIndex), isDefined(width) ? width : \"auto\");\r\n                columnIndex++\r\n            }\r\n        }\r\n    },\r\n    getCellElements: function(rowIndex) {\r\n        return this._getCellElementsCore(rowIndex)\r\n    },\r\n    _getCellElementsCore: function(rowIndex) {\r\n        var $row = this._getRowElements().eq(rowIndex);\r\n        return $row.children()\r\n    },\r\n    _getCellElement: function(rowIndex, columnIdentifier) {\r\n        var $cell;\r\n        var $cells = this.getCellElements(rowIndex);\r\n        var columnVisibleIndex = this._getVisibleColumnIndex($cells, rowIndex, columnIdentifier);\r\n        if ($cells.length && columnVisibleIndex >= 0) {\r\n            $cell = $cells.eq(columnVisibleIndex)\r\n        }\r\n        if ($cell && $cell.length) {\r\n            return $cell\r\n        }\r\n    },\r\n    _getRowElement: function(rowIndex) {\r\n        var that = this;\r\n        var $rowElement = $();\r\n        var $tableElements = that.getTableElements();\r\n        iteratorUtils.each($tableElements, (function(_, tableElement) {\r\n            $rowElement = $rowElement.add(that._getRowElements($(tableElement)).eq(rowIndex))\r\n        }));\r\n        if ($rowElement.length) {\r\n            return $rowElement\r\n        }\r\n    },\r\n    getCellElement: function(rowIndex, columnIdentifier) {\r\n        return getPublicElement(this._getCellElement(rowIndex, columnIdentifier))\r\n    },\r\n    getRowElement: function(rowIndex) {\r\n        var $rows = this._getRowElement(rowIndex);\r\n        var elements = [];\r\n        if ($rows && !getPublicElement($rows).get) {\r\n            for (var i = 0; i < $rows.length; i++) {\r\n                elements.push($rows[i])\r\n            }\r\n        } else {\r\n            elements = $rows\r\n        }\r\n        return elements\r\n    },\r\n    _getVisibleColumnIndex: function($cells, rowIndex, columnIdentifier) {\r\n        if (isString(columnIdentifier)) {\r\n            var columnIndex = this._columnsController.columnOption(columnIdentifier, \"index\");\r\n            return this._columnsController.getVisibleIndex(columnIndex)\r\n        }\r\n        return columnIdentifier\r\n    },\r\n    getColumnElements: function() {},\r\n    getColumns: function(rowIndex) {\r\n        return this._columnsController.getVisibleColumns(rowIndex)\r\n    },\r\n    getCell: function(cellPosition, rows) {\r\n        var $rows = rows || this._getRowElements();\r\n        var $cells;\r\n        if ($rows.length > 0 && cellPosition.rowIndex >= 0) {\r\n            if (\"virtual\" !== this.option(\"scrolling.mode\") && \"virtual\" !== this.option(\"scrolling.rowRenderingMode\")) {\r\n                cellPosition.rowIndex = cellPosition.rowIndex < $rows.length ? cellPosition.rowIndex : $rows.length - 1\r\n            }\r\n            $cells = this.getCellElements(cellPosition.rowIndex);\r\n            if ($cells && $cells.length > 0) {\r\n                return $cells.eq($cells.length > cellPosition.columnIndex ? cellPosition.columnIndex : $cells.length - 1)\r\n            }\r\n        }\r\n    },\r\n    getRowsCount: function() {\r\n        var tableElement = this.getTableElement();\r\n        if (tableElement && 1 === tableElement.length) {\r\n            return tableElement[0].rows.length\r\n        }\r\n        return 0\r\n    },\r\n    _getRowElementsCore: function(tableElement) {\r\n        tableElement = tableElement || this.getTableElement();\r\n        if (tableElement) {\r\n            var hasRowTemplate = this.option().rowTemplate || this.option(\"dataRowTemplate\");\r\n            var tBodies = hasRowTemplate && tableElement.find(\"> tbody.\" + ROW_CLASS);\r\n            return tBodies && tBodies.length ? tBodies : tableElement.find(\"> tbody > .\" + ROW_CLASS + \", > .\" + ROW_CLASS)\r\n        }\r\n        return $()\r\n    },\r\n    _getRowElements: function(tableElement) {\r\n        return this._getRowElementsCore(tableElement)\r\n    },\r\n    getRowIndex: function($row) {\r\n        return this._getRowElements().index($row)\r\n    },\r\n    getBoundingRect: function() {},\r\n    getName: function() {},\r\n    setScrollerSpacing: function(width) {\r\n        var $element = this.element();\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        $element && $element.css({\r\n            paddingLeft: rtlEnabled ? width : \"\",\r\n            paddingRight: !rtlEnabled ? width : \"\"\r\n        })\r\n    },\r\n    isScrollbarVisible: function(isHorizontal) {\r\n        var $element = this.element();\r\n        var $tableElement = this._tableElement;\r\n        if ($element && $tableElement) {\r\n            return isHorizontal ? getOuterWidth($tableElement) - getWidth($element) > 0 : getOuterHeight($tableElement) - getHeight($element) > 0\r\n        }\r\n        return false\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/shared/accessibility.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nvar FOCUS_STATE_CLASS = \"dx-state-focused\";\r\nvar FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FOCUSED_ROW_SELECTOR = \".dx-row-focused\";\r\nvar GRID_ROW_SELECTOR = \".dx-datagrid-rowsview .dx-row\";\r\nvar GRID_CELL_SELECTOR = \"\".concat(GRID_ROW_SELECTOR, \" > td\");\r\nvar TREELIST_ROW_SELECTOR = \".dx-treelist-rowsview .dx-row\";\r\nvar TREELIST_CELL_SELECTOR = \"\".concat(TREELIST_ROW_SELECTOR, \" > td\");\r\nvar viewItemSelectorMap = {\r\n    groupPanel: [\".dx-datagrid-group-panel .dx-group-panel-item[tabindex]\"],\r\n    columnHeaders: [\".dx-datagrid-headers .dx-header-row > td.dx-datagrid-action\", \".dx-treelist-headers .dx-header-row > td.dx-treelist-action\"],\r\n    filterRow: [\".dx-datagrid-headers .dx-datagrid-filter-row .dx-editor-cell .dx-texteditor-input\", \".dx-treelist-headers .dx-treelist-filter-row .dx-editor-cell .dx-texteditor-input\"],\r\n    rowsView: [\"\".concat(FOCUSED_ROW_SELECTOR), \"\".concat(GRID_ROW_SELECTOR, \"[tabindex]\"), \"\".concat(GRID_CELL_SELECTOR, \"[tabindex]\"), \"\".concat(GRID_CELL_SELECTOR), \"\".concat(TREELIST_ROW_SELECTOR, \"[tabindex]\"), \"\".concat(TREELIST_CELL_SELECTOR, \"[tabindex]\"), \"\".concat(TREELIST_CELL_SELECTOR)],\r\n    footer: [\".dx-datagrid-total-footer .dx-datagrid-summary-item\", \".dx-treelist-total-footer .dx-treelist-summary-item\"],\r\n    filterPanel: [\".dx-datagrid-filter-panel .dx-icon-filter\", \".dx-treelist-filter-panel .dx-icon-filter\"],\r\n    pager: [\".dx-datagrid-pager [tabindex]\", \".dx-treelist-pager [tabindex]\"]\r\n};\r\nvar isMouseDown = false;\r\nvar isHiddenFocusing = false;\r\nvar focusedElementInfo = null;\r\n\r\nfunction processKeyDown(viewName, instance, event, action, $mainElement, executeKeyDown) {\r\n    var isHandled = fireKeyDownEvent(instance, event.originalEvent, executeKeyDown);\r\n    if (isHandled) {\r\n        return\r\n    }\r\n    var keyName = normalizeKeyName(event);\r\n    if (\"enter\" === keyName || \"space\" === keyName) {\r\n        saveFocusedElementInfo(event.target, instance);\r\n        action && action({\r\n            event: event\r\n        })\r\n    } else if (\"tab\" === keyName) {\r\n        $mainElement.addClass(FOCUS_STATE_CLASS)\r\n    } else {\r\n        selectView(viewName, instance, event)\r\n    }\r\n}\r\n\r\nfunction saveFocusedElementInfo(target, instance) {\r\n    var $target = $(target);\r\n    var ariaLabel = $target.attr(\"aria-label\");\r\n    var $activeElements = getActiveAccessibleElements(ariaLabel, instance.element());\r\n    var targetIndex = $activeElements.index($target);\r\n    focusedElementInfo = extend({}, {\r\n        ariaLabel: ariaLabel,\r\n        index: targetIndex\r\n    }, {\r\n        viewInstance: instance\r\n    })\r\n}\r\n\r\nfunction getActiveAccessibleElements(ariaLabel, viewElement) {\r\n    var $viewElement = $(viewElement);\r\n    var $activeElements;\r\n    if (ariaLabel) {\r\n        $activeElements = $viewElement.find('[aria-label=\"'.concat(ariaLabel, '\"][tabindex]'))\r\n    } else {\r\n        $activeElements = $viewElement.find(\"[tabindex]\")\r\n    }\r\n    return $activeElements\r\n}\r\n\r\nfunction findFocusedViewElement(viewSelectors) {\r\n    for (var index in viewSelectors) {\r\n        var selector = viewSelectors[index];\r\n        var $focusViewElement = $(selector).first();\r\n        if ($focusViewElement.length) {\r\n            return $focusViewElement\r\n        }\r\n    }\r\n}\r\n\r\nfunction fireKeyDownEvent(instance, event, executeAction) {\r\n    var args = {\r\n        event: event,\r\n        handled: false\r\n    };\r\n    if (executeAction) {\r\n        executeAction(args)\r\n    } else {\r\n        instance._createActionByOption(\"onKeyDown\")(args)\r\n    }\r\n    return args.handled\r\n}\r\n\r\nfunction onDocumentVisibilityChange() {\r\n    isHiddenFocusing = \"visible\" === domAdapter.getDocument().visibilityState\r\n}\r\nexport function subscribeVisibilityChange() {\r\n    eventsEngine.on(domAdapter.getDocument(), \"visibilitychange\", onDocumentVisibilityChange)\r\n}\r\nexport function unsubscribeVisibilityChange() {\r\n    eventsEngine.off(domAdapter.getDocument(), \"visibilitychange\", onDocumentVisibilityChange)\r\n}\r\nexport function hiddenFocus(element) {\r\n    isHiddenFocusing = true;\r\n    element.focus();\r\n    isHiddenFocusing = false\r\n}\r\nexport function registerKeyboardAction(viewName, instance, $element, selector, action, executeKeyDown) {\r\n    if (instance.option(\"useLegacyKeyboardNavigation\")) {\r\n        return noop\r\n    }\r\n    var getMainElement = () => $(instance.element());\r\n    var keyDownHandler = e => processKeyDown(viewName, instance, e, action, getMainElement(), executeKeyDown);\r\n    var mouseDownHandler = () => {\r\n        isMouseDown = true;\r\n        getMainElement().removeClass(FOCUS_STATE_CLASS)\r\n    };\r\n    var focusinHandler = () => {\r\n        var needShowOverlay = !isMouseDown && !isHiddenFocusing;\r\n        if (needShowOverlay) {\r\n            getMainElement().addClass(FOCUS_STATE_CLASS)\r\n        }\r\n        isMouseDown = false\r\n    };\r\n    eventsEngine.on($element, \"keydown\", selector, keyDownHandler);\r\n    eventsEngine.on($element, \"mousedown\", selector, mouseDownHandler);\r\n    eventsEngine.on($element, \"focusin\", selector, focusinHandler);\r\n    return () => {\r\n        eventsEngine.off($element, \"keydown\", selector, keyDownHandler);\r\n        eventsEngine.off($element, \"mousedown\", selector, mouseDownHandler);\r\n        eventsEngine.off($element, \"focusin\", selector, focusinHandler)\r\n    }\r\n}\r\nexport function restoreFocus(instance) {\r\n    if (!instance.option(\"useLegacyKeyboardNavigation\") && focusedElementInfo) {\r\n        var viewInstance = focusedElementInfo.viewInstance;\r\n        if (viewInstance) {\r\n            var $activeElements = getActiveAccessibleElements(focusedElementInfo.ariaLabel, viewInstance.element());\r\n            var $targetElement = $activeElements.eq(focusedElementInfo.index);\r\n            focusedElementInfo = null;\r\n            eventsEngine.trigger($targetElement, \"focus\")\r\n        }\r\n    }\r\n}\r\nexport function selectView(viewName, instance, event) {\r\n    var keyName = normalizeKeyName(event);\r\n    if (event.ctrlKey && (\"upArrow\" === keyName || \"downArrow\" === keyName)) {\r\n        var viewNames = Object.keys(viewItemSelectorMap);\r\n        var viewItemIndex = viewNames.indexOf(viewName);\r\n        while (viewItemIndex >= 0 && viewItemIndex < viewNames.length) {\r\n            viewItemIndex = \"upArrow\" === keyName ? --viewItemIndex : ++viewItemIndex;\r\n            var _viewName = viewNames[viewItemIndex];\r\n            var viewSelectors = viewItemSelectorMap[_viewName];\r\n            var $focusViewElement = findFocusedViewElement(viewSelectors);\r\n            if ($focusViewElement && $focusViewElement.length) {\r\n                $focusViewElement.attr(\"tabindex\", instance.option(\"tabindex\") || 0);\r\n                eventsEngine.trigger($focusViewElement, \"focus\");\r\n                $focusViewElement.removeClass(FOCUS_DISABLED_CLASS);\r\n                break\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function setTabIndex(instance, $element) {\r\n    if (!instance.option(\"useLegacyKeyboardnavigation\")) {\r\n        $element.attr(\"tabindex\", instance.option(\"tabindex\") || 0)\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.accessibility.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport * as accessibility from \"../../ui/shared/accessibility\";\r\nexport var registerKeyboardAction = function(viewName, instance, $element, selector, action) {\r\n    var keyboardController = instance.getController(\"keyboardNavigation\");\r\n    if (instance.option(\"useLegacyKeyboardNavigation\") || keyboardController && !keyboardController.isKeyboardEnabled()) {\r\n        return\r\n    }\r\n    instance.createAction(\"onKeyDown\");\r\n    accessibility.registerKeyboardAction(viewName, instance, $element, selector, action, args => {\r\n        instance.executeAction(\"onKeyDown\", args)\r\n    })\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_headers.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    ColumnsView\r\n} from \"./ui.grid_core.columns_view\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    registerKeyboardAction\r\n} from \"./ui.grid_core.accessibility\";\r\nvar CELL_CONTENT_CLASS = \"text-content\";\r\nvar HEADERS_CLASS = \"headers\";\r\nvar NOWRAP_CLASS = \"nowrap\";\r\nvar ROW_CLASS_SELECTOR = \".dx-row\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar COLUMN_LINES_CLASS = \"dx-column-lines\";\r\nvar CONTEXT_MENU_SORT_ASC_ICON = \"context-menu-sort-asc\";\r\nvar CONTEXT_MENU_SORT_DESC_ICON = \"context-menu-sort-desc\";\r\nvar CONTEXT_MENU_SORT_NONE_ICON = \"context-menu-sort-none\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar VISIBILITY_HIDDEN_CLASS = \"dx-visibility-hidden\";\r\nvar TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX = \"dx-text-content-alignment-\";\r\nvar SORT_INDICATOR_CLASS = \"dx-sort-indicator\";\r\nvar SORT_INDEX_INDICATOR_CLASS = \"dx-sort-index-indicator\";\r\nvar HEADER_FILTER_CLASS_SELECTOR = \".dx-header-filter\";\r\nvar HEADER_FILTER_INDICATOR_CLASS = \"dx-header-filter-indicator\";\r\nvar MULTI_ROW_HEADER_CLASS = \"dx-header-multi-row\";\r\nexport var columnHeadersModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            showColumnHeaders: true,\r\n            cellHintEnabled: true\r\n        }\r\n    },\r\n    views: {\r\n        columnHeadersView: ColumnsView.inherit(function() {\r\n            var createCellContent = function(that, $cell, options) {\r\n                var $cellContent = $(\"<div>\").addClass(that.addWidgetPrefix(CELL_CONTENT_CLASS));\r\n                that.setAria(\"role\", \"presentation\", $cellContent);\r\n                addCssClassesToCellContent(that, $cell, options.column, $cellContent);\r\n                var showColumnLines = that.option(\"showColumnLines\");\r\n                var contentAlignment = that.getController(\"columns\").getHeaderContentAlignment(options.column.alignment);\r\n                return $cellContent[showColumnLines || \"right\" === contentAlignment ? \"appendTo\" : \"prependTo\"]($cell)\r\n            };\r\n\r\n            function addCssClassesToCellContent(that, $cell, column, $cellContent) {\r\n                var $indicatorElements = that._getIndicatorElements($cell, true);\r\n                var $visibleIndicatorElements = that._getIndicatorElements($cell);\r\n                var indicatorCount = $indicatorElements && $indicatorElements.length;\r\n                var columnAlignment = that._getColumnAlignment(column.alignment);\r\n                var sortIndicatorClassName = \".\".concat(that._getIndicatorClassName(\"sort\"));\r\n                var sortIndexIndicatorClassName = \".\".concat(that._getIndicatorClassName(\"sortIndex\"));\r\n                var $sortIndicator = $visibleIndicatorElements.filter(sortIndicatorClassName);\r\n                var $sortIndexIndicator = $visibleIndicatorElements.children().filter(sortIndexIndicatorClassName);\r\n                $cellContent = $cellContent || $cell.children(\".\" + that.addWidgetPrefix(CELL_CONTENT_CLASS));\r\n                $cellContent.toggleClass(TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX + columnAlignment, indicatorCount > 0).toggleClass(TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX + (\"left\" === columnAlignment ? \"right\" : \"left\"), indicatorCount > 0 && \"center\" === column.alignment).toggleClass(SORT_INDICATOR_CLASS, !!$sortIndicator.length).toggleClass(SORT_INDEX_INDICATOR_CLASS, !!$sortIndexIndicator.length).toggleClass(HEADER_FILTER_INDICATOR_CLASS, !!$visibleIndicatorElements.filter(\".\" + that._getIndicatorClassName(\"headerFilter\")).length)\r\n            }\r\n            return {\r\n                _createTable: function() {\r\n                    var $table = this.callBase.apply(this, arguments);\r\n                    eventsEngine.on($table, \"mousedown selectstart\", this.createAction((function(e) {\r\n                        var event = e.event;\r\n                        if (event.shiftKey) {\r\n                            event.preventDefault()\r\n                        }\r\n                    })));\r\n                    return $table\r\n                },\r\n                _isLegacyKeyboardNavigation() {\r\n                    return this.option(\"useLegacyKeyboardNavigation\")\r\n                },\r\n                _getDefaultTemplate: function(column) {\r\n                    var that = this;\r\n                    return function($container, options) {\r\n                        var $content = column.command ? $container : createCellContent(that, $container, options);\r\n                        var caption = \"expand\" !== column.command && column.caption;\r\n                        if (caption) {\r\n                            $content.text(caption)\r\n                        } else if (column.command) {\r\n                            $container.html(\"&nbsp;\")\r\n                        }\r\n                    }\r\n                },\r\n                _getHeaderTemplate: function(column) {\r\n                    return column.headerCellTemplate || {\r\n                        allowRenderToDetachedContainer: true,\r\n                        render: this._getDefaultTemplate(column)\r\n                    }\r\n                },\r\n                _processTemplate: function(template, options) {\r\n                    var that = this;\r\n                    var resultTemplate;\r\n                    var column = options.column;\r\n                    var renderingTemplate = that.callBase(template);\r\n                    if (\"header\" === options.rowType && renderingTemplate && column.headerCellTemplate && !column.command) {\r\n                        resultTemplate = {\r\n                            render: function(options) {\r\n                                var $content = createCellContent(that, options.container, options.model);\r\n                                renderingTemplate.render(extend({}, options, {\r\n                                    container: $content\r\n                                }))\r\n                            }\r\n                        }\r\n                    } else {\r\n                        resultTemplate = renderingTemplate\r\n                    }\r\n                    return resultTemplate\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    if (\"refresh\" !== e.changeType) {\r\n                        return\r\n                    }\r\n                    if (this._isGroupingChanged || this._requireReady) {\r\n                        this._isGroupingChanged = false;\r\n                        this.render()\r\n                    }\r\n                },\r\n                _renderCell: function($row, options) {\r\n                    var $cell = this.callBase($row, options);\r\n                    if (\"header\" === options.row.rowType) {\r\n                        $cell.addClass(CELL_FOCUS_DISABLED_CLASS);\r\n                        if (!this._isLegacyKeyboardNavigation()) {\r\n                            if (options.column && !options.column.type) {\r\n                                $cell.attr(\"tabindex\", this.option(\"tabindex\") || 0)\r\n                            }\r\n                        }\r\n                    }\r\n                    return $cell\r\n                },\r\n                _setCellAriaAttributes: function($cell, cellOptions) {\r\n                    this.callBase($cell, cellOptions);\r\n                    if (\"header\" === cellOptions.rowType) {\r\n                        this.setAria(\"role\", \"columnheader\", $cell);\r\n                        if (cellOptions.column && !cellOptions.column.command && !cellOptions.column.isBand) {\r\n                            $cell.attr(\"id\", cellOptions.column.headerId);\r\n                            this.setAria(\"label\", messageLocalization.format(\"dxDataGrid-ariaColumn\") + \" \" + cellOptions.column.caption, $cell)\r\n                        }\r\n                    }\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    $row.toggleClass(COLUMN_LINES_CLASS, this.option(\"showColumnLines\"));\r\n                    if (\"header\" === row.rowType) {\r\n                        $row.addClass(HEADER_ROW_CLASS);\r\n                        if (!this._isLegacyKeyboardNavigation()) {\r\n                            registerKeyboardAction(\"columnHeaders\", this, $row, \"td\", this._handleActionKeyDown.bind(this))\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _handleActionKeyDown: function(args) {\r\n                    var event = args.event;\r\n                    var $target = $(event.target);\r\n                    this._lastActionElement = event.target;\r\n                    if ($target.is(HEADER_FILTER_CLASS_SELECTOR)) {\r\n                        var headerFilterController = this.getController(\"headerFilter\");\r\n                        var $column = $target.closest(\"td\");\r\n                        var columnIndex = this.getColumnIndexByElement($column);\r\n                        if (columnIndex >= 0) {\r\n                            headerFilterController.showHeaderFilterMenu(columnIndex, false)\r\n                        }\r\n                    } else {\r\n                        var $row = $target.closest(ROW_CLASS_SELECTOR);\r\n                        this._processHeaderAction(event, $row)\r\n                    }\r\n                    event.preventDefault()\r\n                },\r\n                _renderCore: function() {\r\n                    var that = this;\r\n                    var $container = that.element();\r\n                    if (that._tableElement && !that._dataController.isLoaded() && !that._hasRowElements) {\r\n                        return\r\n                    }\r\n                    $container.addClass(that.addWidgetPrefix(HEADERS_CLASS)).toggleClass(that.addWidgetPrefix(NOWRAP_CLASS), !that.option(\"wordWrapEnabled\")).empty();\r\n                    that.setAria(\"role\", \"presentation\", $container);\r\n                    that._updateContent(that._renderTable());\r\n                    if (that.getRowCount() > 1) {\r\n                        $container.addClass(MULTI_ROW_HEADER_CLASS)\r\n                    }\r\n                    that.callBase.apply(that, arguments)\r\n                },\r\n                _renderRows: function() {\r\n                    var that = this;\r\n                    if (that._dataController.isLoaded() || that._hasRowElements) {\r\n                        that.callBase.apply(that, arguments);\r\n                        that._hasRowElements = true\r\n                    }\r\n                },\r\n                _getRowVisibleColumns: function(rowIndex) {\r\n                    return this._columnsController.getVisibleColumns(rowIndex)\r\n                },\r\n                _renderRow: function($table, options) {\r\n                    options.columns = this._getRowVisibleColumns(options.row.rowIndex);\r\n                    this.callBase($table, options)\r\n                },\r\n                _createCell: function(options) {\r\n                    var column = options.column;\r\n                    var $cellElement = this.callBase.apply(this, arguments);\r\n                    column.rowspan > 1 && \"header\" === options.rowType && $cellElement.attr(\"rowSpan\", column.rowspan);\r\n                    return $cellElement\r\n                },\r\n                _getRows: function() {\r\n                    var result = [];\r\n                    var rowCount = this.getRowCount();\r\n                    if (this.option(\"showColumnHeaders\")) {\r\n                        for (var i = 0; i < rowCount; i++) {\r\n                            result.push({\r\n                                rowType: \"header\",\r\n                                rowIndex: i\r\n                            })\r\n                        }\r\n                    }\r\n                    return result\r\n                },\r\n                _getCellTemplate: function(options) {\r\n                    if (\"header\" === options.rowType) {\r\n                        return this._getHeaderTemplate(options.column)\r\n                    }\r\n                },\r\n                _columnOptionChanged: function(e) {\r\n                    var changeTypes = e.changeTypes;\r\n                    var optionNames = e.optionNames;\r\n                    if (changeTypes.grouping || changeTypes.groupExpanding) {\r\n                        if (changeTypes.grouping) {\r\n                            this._isGroupingChanged = true\r\n                        }\r\n                        return\r\n                    }\r\n                    this.callBase(e);\r\n                    if (optionNames.width || optionNames.visible) {\r\n                        this.resizeCompleted.fire()\r\n                    }\r\n                },\r\n                _isElementVisible: function(elementOptions) {\r\n                    return elementOptions && elementOptions.visible\r\n                },\r\n                _alignCaptionByCenter: function($cell) {\r\n                    var $indicatorsContainer = this._getIndicatorContainer($cell, true);\r\n                    if ($indicatorsContainer && $indicatorsContainer.length) {\r\n                        $indicatorsContainer.filter(\".\" + VISIBILITY_HIDDEN_CLASS).remove();\r\n                        $indicatorsContainer = this._getIndicatorContainer($cell);\r\n                        $indicatorsContainer.clone().addClass(VISIBILITY_HIDDEN_CLASS).css(\"float\", \"\").insertBefore($cell.children(\".\" + this.addWidgetPrefix(CELL_CONTENT_CLASS)))\r\n                    }\r\n                },\r\n                _updateCell: function($cell, options) {\r\n                    if (\"header\" === options.rowType && \"center\" === options.column.alignment) {\r\n                        this._alignCaptionByCenter($cell)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _updateIndicator: function($cell, column, indicatorName) {\r\n                    var $indicatorElement = this.callBase.apply(this, arguments);\r\n                    if (\"center\" === column.alignment) {\r\n                        this._alignCaptionByCenter($cell)\r\n                    }\r\n                    addCssClassesToCellContent(this, $cell, column);\r\n                    return $indicatorElement\r\n                },\r\n                _getIndicatorContainer: function($cell, returnAll) {\r\n                    var $indicatorsContainer = this.callBase($cell);\r\n                    return returnAll ? $indicatorsContainer : $indicatorsContainer.filter(\":not(.\" + VISIBILITY_HIDDEN_CLASS + \")\")\r\n                },\r\n                _isSortableElement: function() {\r\n                    return true\r\n                },\r\n                getHeadersRowHeight: function() {\r\n                    var $tableElement = this.getTableElement();\r\n                    var $headerRows = $tableElement && $tableElement.find(\".\" + HEADER_ROW_CLASS);\r\n                    return $headerRows && $headerRows.toArray().reduce((function(sum, headerRow) {\r\n                        return sum + getHeight(headerRow)\r\n                    }), 0) || 0\r\n                },\r\n                getHeaderElement: function(index) {\r\n                    var columnElements = this.getColumnElements();\r\n                    return columnElements && columnElements.eq(index)\r\n                },\r\n                getColumnElements: function(index, bandColumnIndex) {\r\n                    var that = this;\r\n                    var $cellElement;\r\n                    var columnsController = that._columnsController;\r\n                    var rowCount = that.getRowCount();\r\n                    if (that.option(\"showColumnHeaders\")) {\r\n                        if (rowCount > 1 && (!isDefined(index) || isDefined(bandColumnIndex))) {\r\n                            var result = [];\r\n                            var visibleColumns = isDefined(bandColumnIndex) ? columnsController.getChildrenByBandColumn(bandColumnIndex, true) : columnsController.getVisibleColumns();\r\n                            each(visibleColumns, (function(_, column) {\r\n                                var rowIndex = isDefined(index) ? index : columnsController.getRowIndex(column.index);\r\n                                $cellElement = that._getCellElement(rowIndex, columnsController.getVisibleIndex(column.index, rowIndex));\r\n                                $cellElement && result.push($cellElement.get(0))\r\n                            }));\r\n                            return $(result)\r\n                        } else if (!index || index < rowCount) {\r\n                            return that.getCellElements(index || 0)\r\n                        }\r\n                    }\r\n                },\r\n                getColumnIndexByElement: function($cell) {\r\n                    var cellIndex = this.getCellIndex($cell);\r\n                    var $row = $cell.closest(\".dx-row\");\r\n                    var rowIndex = $row[0].rowIndex;\r\n                    var column = this.getColumns(rowIndex)[cellIndex];\r\n                    return column ? column.index : -1\r\n                },\r\n                getVisibleColumnIndex: function(columnIndex, rowIndex) {\r\n                    var column = this.getColumns()[columnIndex];\r\n                    return column ? this._columnsController.getVisibleIndex(column.index, rowIndex) : -1\r\n                },\r\n                getColumnWidths: function() {\r\n                    var $columnElements = this.getColumnElements();\r\n                    if ($columnElements && $columnElements.length) {\r\n                        return this._getWidths($columnElements)\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                allowDragging: function(column, sourceLocation, draggingPanels) {\r\n                    var i;\r\n                    var draggableColumnCount = 0;\r\n                    var rowIndex = column && this._columnsController.getRowIndex(column.index);\r\n                    var columns = this.getColumns(0 === rowIndex ? 0 : null);\r\n                    var canHideColumn = (null === column || void 0 === column ? void 0 : column.allowHiding) && columns.length > 1;\r\n                    var allowDrag = function(column) {\r\n                        return column.allowReordering || column.allowGrouping || column.allowHiding\r\n                    };\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        if (allowDrag(columns[i])) {\r\n                            draggableColumnCount++\r\n                        }\r\n                    }\r\n                    if (draggableColumnCount <= 1 && !canHideColumn) {\r\n                        return false\r\n                    } else if (!draggingPanels) {\r\n                        return (this.option(\"allowColumnReordering\") || this._columnsController.isColumnOptionUsed(\"allowReordering\")) && column && column.allowReordering\r\n                    }\r\n                    for (i = 0; i < draggingPanels.length; i++) {\r\n                        var draggingPanel = draggingPanels[i];\r\n                        if (draggingPanel && draggingPanel.allowDragging(column, sourceLocation)) {\r\n                            return true\r\n                        }\r\n                    }\r\n                    return false\r\n                },\r\n                getBoundingRect: function() {\r\n                    var $columnElements = this.getColumnElements();\r\n                    if ($columnElements && $columnElements.length) {\r\n                        var offset = this.getTableElement().offset();\r\n                        return {\r\n                            top: offset.top\r\n                        }\r\n                    }\r\n                    return null\r\n                },\r\n                getName: function() {\r\n                    return \"headers\"\r\n                },\r\n                getColumnCount: function() {\r\n                    var $columnElements = this.getColumnElements();\r\n                    return $columnElements ? $columnElements.length : 0\r\n                },\r\n                isVisible: function() {\r\n                    return this.option(\"showColumnHeaders\")\r\n                },\r\n                optionChanged: function(args) {\r\n                    switch (args.name) {\r\n                        case \"showColumnHeaders\":\r\n                        case \"wordWrapEnabled\":\r\n                        case \"showColumnLines\":\r\n                            this._invalidate(true, true);\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                getHeight: function() {\r\n                    return this.getElementHeight()\r\n                },\r\n                getContextMenuItems: function(options) {\r\n                    var that = this;\r\n                    var column = options.column;\r\n                    if (options.row && (\"header\" === options.row.rowType || \"detailAdaptive\" === options.row.rowType)) {\r\n                        var sortingOptions = that.option(\"sorting\");\r\n                        if (sortingOptions && \"none\" !== sortingOptions.mode && column && column.allowSorting) {\r\n                            var onItemClick = function(params) {\r\n                                setTimeout((function() {\r\n                                    that._columnsController.changeSortOrder(column.index, params.itemData.value)\r\n                                }))\r\n                            };\r\n                            return [{\r\n                                text: sortingOptions.ascendingText,\r\n                                value: \"asc\",\r\n                                disabled: \"asc\" === column.sortOrder,\r\n                                icon: CONTEXT_MENU_SORT_ASC_ICON,\r\n                                onItemClick: onItemClick\r\n                            }, {\r\n                                text: sortingOptions.descendingText,\r\n                                value: \"desc\",\r\n                                disabled: \"desc\" === column.sortOrder,\r\n                                icon: CONTEXT_MENU_SORT_DESC_ICON,\r\n                                onItemClick: onItemClick\r\n                            }, {\r\n                                text: sortingOptions.clearText,\r\n                                value: \"none\",\r\n                                disabled: !column.sortOrder,\r\n                                icon: CONTEXT_MENU_SORT_NONE_ICON,\r\n                                onItemClick: onItemClick\r\n                            }]\r\n                        }\r\n                    }\r\n                },\r\n                getRowCount: function() {\r\n                    return this._columnsController && this._columnsController.getRowCount()\r\n                },\r\n                setRowsOpacity: function(columnIndex, value, rowIndex) {\r\n                    var that = this;\r\n                    var i;\r\n                    var columnElements;\r\n                    var rowCount = that.getRowCount();\r\n                    var columns = that._columnsController.getColumns();\r\n                    var column = columns && columns[columnIndex];\r\n                    var columnID = column && column.isBand && column.index;\r\n                    var setColumnOpacity = function(index, column) {\r\n                        if (column.ownerBand === columnID) {\r\n                            columnElements.eq(index).css({\r\n                                opacity: value\r\n                            });\r\n                            if (column.isBand) {\r\n                                that.setRowsOpacity(column.index, value, i + 1)\r\n                            }\r\n                        }\r\n                    };\r\n                    if (isDefined(columnID)) {\r\n                        rowIndex = rowIndex || 0;\r\n                        for (i = rowIndex; i < rowCount; i++) {\r\n                            columnElements = that.getCellElements(i);\r\n                            each(that.getColumns(i), setColumnOpacity)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.column_headers.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnHeadersModule\r\n} from \"../grid_core/ui.grid_core.column_headers\";\r\nexport var ColumnHeadersView = columnHeadersModule.views.columnHeadersView;\r\ngridCore.registerModule(\"columnHeaders\", columnHeadersModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_controller.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../../core/renderer\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\r\nimport {\r\n    compileGetter,\r\n    compileSetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    isDefined,\r\n    isString,\r\n    isNumeric,\r\n    isFunction,\r\n    isObject,\r\n    isPlainObject,\r\n    type\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    inArray,\r\n    normalizeIndexes\r\n} from \"../../core/utils/array\";\r\nimport config from \"../../core/config\";\r\nimport {\r\n    orderEach,\r\n    deepExtendArraySafe\r\n} from \"../../core/utils/object\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    captionize\r\n} from \"../../core/utils/inflector\";\r\nimport dateSerialization from \"../../core/utils/date_serialization\";\r\nimport numberLocalization from \"../../localization/number\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport Store from \"../../data/abstract_store\";\r\nimport {\r\n    DataSource\r\n} from \"../../data/data_source/data_source\";\r\nimport {\r\n    normalizeDataSourceOptions\r\n} from \"../../data/data_source/utils\";\r\nimport filterUtils from \"../shared/filtering\";\r\nvar USER_STATE_FIELD_NAMES_15_1 = [\"filterValues\", \"filterType\", \"fixed\", \"fixedPosition\"];\r\nvar USER_STATE_FIELD_NAMES = [\"visibleIndex\", \"dataField\", \"name\", \"dataType\", \"width\", \"visible\", \"sortOrder\", \"lastSortOrder\", \"sortIndex\", \"groupIndex\", \"filterValue\", \"selectedFilterOperation\", \"added\"].concat(USER_STATE_FIELD_NAMES_15_1);\r\nvar IGNORE_COLUMN_OPTION_NAMES = {\r\n    visibleWidth: true,\r\n    bestFitWidth: true,\r\n    bufferedFilterValue: true\r\n};\r\nvar COMMAND_EXPAND_CLASS = \"dx-command-expand\";\r\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\r\nvar GROUP_COMMAND_COLUMN_NAME = \"groupExpand\";\r\nvar regExp = /columns\\[(\\d+)\\]\\.?/gi;\r\nvar globalColumnId = 1;\r\nexport var columnsControllerModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            commonColumnSettings: {\r\n                allowFiltering: true,\r\n                allowHiding: true,\r\n                allowSorting: true,\r\n                allowEditing: true,\r\n                encodeHtml: true,\r\n                trueText: messageLocalization.format(\"dxDataGrid-trueText\"),\r\n                falseText: messageLocalization.format(\"dxDataGrid-falseText\")\r\n            },\r\n            allowColumnReordering: false,\r\n            allowColumnResizing: false,\r\n            columnResizingMode: \"nextColumn\",\r\n            columnMinWidth: void 0,\r\n            columnWidth: void 0,\r\n            adaptColumnWidthByRatio: true,\r\n            columns: void 0,\r\n            regenerateColumnsByVisibleItems: false,\r\n            customizeColumns: null,\r\n            dateSerializationFormat: void 0\r\n        }\r\n    },\r\n    controllers: {\r\n        columns: modules.Controller.inherit(function() {\r\n            var DEFAULT_COLUMN_OPTIONS = {\r\n                visible: true,\r\n                showInColumnChooser: true\r\n            };\r\n            var DATATYPE_OPERATIONS = {\r\n                number: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"between\"],\r\n                string: [\"contains\", \"notcontains\", \"startswith\", \"endswith\", \"=\", \"<>\"],\r\n                date: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"between\"],\r\n                datetime: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"between\"]\r\n            };\r\n            var COLUMN_INDEX_OPTIONS = {\r\n                visibleIndex: true,\r\n                groupIndex: true,\r\n                grouped: true,\r\n                sortIndex: true,\r\n                sortOrder: true\r\n            };\r\n            var setFilterOperationsAsDefaultValues = function(column) {\r\n                column.filterOperations = column.defaultFilterOperations\r\n            };\r\n            var createColumn = function(that, columnOptions, userStateColumnOptions, bandColumn) {\r\n                var commonColumnOptions = {};\r\n                if (columnOptions) {\r\n                    if (isString(columnOptions)) {\r\n                        columnOptions = {\r\n                            dataField: columnOptions\r\n                        }\r\n                    }\r\n                    that.setName(columnOptions);\r\n                    var result = {};\r\n                    if (columnOptions.command) {\r\n                        result = deepExtendArraySafe(commonColumnOptions, columnOptions)\r\n                    } else {\r\n                        commonColumnOptions = that.getCommonSettings(columnOptions);\r\n                        if (userStateColumnOptions && userStateColumnOptions.name && userStateColumnOptions.dataField) {\r\n                            columnOptions = extend({}, columnOptions, {\r\n                                dataField: userStateColumnOptions.dataField\r\n                            })\r\n                        }\r\n                        var calculatedColumnOptions = that._createCalculatedColumnOptions(columnOptions, bandColumn);\r\n                        if (!columnOptions.type) {\r\n                            result = {\r\n                                headerId: \"dx-col-\".concat(globalColumnId++)\r\n                            }\r\n                        }\r\n                        result = deepExtendArraySafe(result, DEFAULT_COLUMN_OPTIONS);\r\n                        deepExtendArraySafe(result, commonColumnOptions);\r\n                        deepExtendArraySafe(result, calculatedColumnOptions);\r\n                        deepExtendArraySafe(result, columnOptions);\r\n                        deepExtendArraySafe(result, {\r\n                            selector: null\r\n                        })\r\n                    }\r\n                    if (columnOptions.filterOperations === columnOptions.defaultFilterOperations) {\r\n                        setFilterOperationsAsDefaultValues(result)\r\n                    }\r\n                    return result\r\n                }\r\n            };\r\n            var createColumnsFromOptions = function createColumnsFromOptions(that, columnsOptions, bandColumn) {\r\n                var result = [];\r\n                if (columnsOptions) {\r\n                    each(columnsOptions, (function(index, columnOptions) {\r\n                        var userStateColumnOptions = that._columnsUserState && checkUserStateColumn(columnOptions, that._columnsUserState[index]) && that._columnsUserState[index];\r\n                        var column = createColumn(that, columnOptions, userStateColumnOptions, bandColumn);\r\n                        if (column) {\r\n                            if (bandColumn) {\r\n                                column.ownerBand = bandColumn\r\n                            }\r\n                            result.push(column);\r\n                            if (column.columns) {\r\n                                result = result.concat(createColumnsFromOptions(that, column.columns, column));\r\n                                delete column.columns;\r\n                                column.hasColumns = true\r\n                            }\r\n                        }\r\n                    }))\r\n                }\r\n                return result\r\n            };\r\n            var getParentBandColumns = function(columnIndex, columnParentByIndex) {\r\n                var result = [];\r\n                var parent = columnParentByIndex[columnIndex];\r\n                while (parent) {\r\n                    result.unshift(parent);\r\n                    columnIndex = parent.index;\r\n                    parent = columnParentByIndex[columnIndex]\r\n                }\r\n                return result\r\n            };\r\n            var _getChildrenByBandColumn = function(columnIndex, columnChildrenByIndex, recursive) {\r\n                var result = [];\r\n                var children = columnChildrenByIndex[columnIndex];\r\n                if (children) {\r\n                    for (var i = 0; i < children.length; i++) {\r\n                        var column = children[i];\r\n                        if (!isDefined(column.groupIndex) || column.showWhenGrouped) {\r\n                            result.push(column);\r\n                            if (recursive && column.isBand) {\r\n                                result = result.concat(_getChildrenByBandColumn(column.index, columnChildrenByIndex, recursive))\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return result\r\n            };\r\n            var getColumnFullPath = function(that, column) {\r\n                var result = [];\r\n                var columns;\r\n                var bandColumnsCache = that.getBandColumnsCache();\r\n                var callbackFilter = function(item) {\r\n                    return item.ownerBand === column.ownerBand\r\n                };\r\n                if (bandColumnsCache.isPlain) {\r\n                    var columnIndex = that._columns.indexOf(column);\r\n                    if (columnIndex >= 0) {\r\n                        result = [\"columns[\".concat(columnIndex, \"]\")]\r\n                    }\r\n                } else {\r\n                    columns = that._columns.filter(callbackFilter);\r\n                    while (columns.length && -1 !== columns.indexOf(column)) {\r\n                        result.unshift(\"columns[\".concat(columns.indexOf(column), \"]\"));\r\n                        column = bandColumnsCache.columnParentByIndex[column.index];\r\n                        columns = column ? that._columns.filter(callbackFilter) : []\r\n                    }\r\n                }\r\n                return result.join(\".\")\r\n            };\r\n            var calculateColspan = function calculateColspan(that, columnID) {\r\n                var colspan = 0;\r\n                var columns = that.getChildrenByBandColumn(columnID, true);\r\n                each(columns, (function(_, column) {\r\n                    if (column.isBand) {\r\n                        column.colspan = column.colspan || calculateColspan(that, column.index);\r\n                        colspan += column.colspan || 1\r\n                    } else {\r\n                        colspan += 1\r\n                    }\r\n                }));\r\n                return colspan\r\n            };\r\n            var getValueDataType = function(value) {\r\n                var dataType = type(value);\r\n                if (\"string\" !== dataType && \"boolean\" !== dataType && \"number\" !== dataType && \"date\" !== dataType && \"object\" !== dataType) {\r\n                    dataType = void 0\r\n                }\r\n                return dataType\r\n            };\r\n            var getSerializationFormat = function(dataType, value) {\r\n                switch (dataType) {\r\n                    case \"date\":\r\n                    case \"datetime\":\r\n                        return dateSerialization.getDateSerializationFormat(value);\r\n                    case \"number\":\r\n                        if (isString(value)) {\r\n                            return \"string\"\r\n                        }\r\n                        if (isNumeric(value)) {\r\n                            return null\r\n                        }\r\n                }\r\n            };\r\n            var updateSerializers = function(options, dataType) {\r\n                if (!options.deserializeValue) {\r\n                    if (gridCoreUtils.isDateType(dataType)) {\r\n                        options.deserializeValue = function(value) {\r\n                            return dateSerialization.deserializeDate(value)\r\n                        };\r\n                        options.serializeValue = function(value) {\r\n                            return isString(value) ? value : dateSerialization.serializeDate(value, this.serializationFormat)\r\n                        }\r\n                    }\r\n                    if (\"number\" === dataType) {\r\n                        options.deserializeValue = function(value) {\r\n                            var parsedValue = parseFloat(value);\r\n                            return isNaN(parsedValue) ? value : parsedValue\r\n                        };\r\n                        options.serializeValue = function(value, target) {\r\n                            if (\"filter\" === target) {\r\n                                return value\r\n                            }\r\n                            return isDefined(value) && \"string\" === this.serializationFormat ? value.toString() : value\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            var customizeTextForBooleanDataType = function(e) {\r\n                if (true === e.value) {\r\n                    return this.trueText || \"true\"\r\n                } else if (false === e.value) {\r\n                    return this.falseText || \"false\"\r\n                } else {\r\n                    return e.valueText || \"\"\r\n                }\r\n            };\r\n            var getCustomizeTextByDataType = function(dataType) {\r\n                if (\"boolean\" === dataType) {\r\n                    return customizeTextForBooleanDataType\r\n                }\r\n            };\r\n            var updateColumnIndexes = function(that) {\r\n                each(that._columns, (function(index, column) {\r\n                    column.index = index\r\n                }));\r\n                each(that._columns, (function(index, column) {\r\n                    if (isObject(column.ownerBand)) {\r\n                        column.ownerBand = column.ownerBand.index\r\n                    }\r\n                }));\r\n                each(that._commandColumns, (function(index, column) {\r\n                    column.index = -(index + 1)\r\n                }))\r\n            };\r\n            var updateColumnGroupIndexes = function(that, currentColumn) {\r\n                normalizeIndexes(that._columns, \"groupIndex\", currentColumn, (function(column) {\r\n                    var grouped = column.grouped;\r\n                    delete column.grouped;\r\n                    return grouped\r\n                }))\r\n            };\r\n            var getColumnIndexByVisibleIndex = function(that, visibleIndex, location) {\r\n                var rowIndex = isObject(visibleIndex) ? visibleIndex.rowIndex : null;\r\n                var columns = \"group\" === location ? that.getGroupColumns() : \"columnChooser\" === location ? that.getChooserColumns() : that.getVisibleColumns(rowIndex);\r\n                var column;\r\n                visibleIndex = isObject(visibleIndex) ? visibleIndex.columnIndex : visibleIndex;\r\n                column = columns[visibleIndex];\r\n                if (column && column.type === GROUP_COMMAND_COLUMN_NAME) {\r\n                    column = that._columns.filter(col => column.type === col.type)[0] || column\r\n                }\r\n                return column && isDefined(column.index) ? column.index : -1\r\n            };\r\n\r\n            function checkUserStateColumn(column, userStateColumn) {\r\n                return column && userStateColumn && userStateColumn.name === (column.name || column.dataField) && (userStateColumn.dataField === column.dataField || column.name)\r\n            }\r\n            var applyUserState = function(that) {\r\n                var columnsUserState = that._columnsUserState;\r\n                var ignoreColumnOptionNames = that._ignoreColumnOptionNames || [];\r\n                var columns = that._columns;\r\n                var columnCountById = {};\r\n                var resultColumns = [];\r\n                var allColumnsHaveState = true;\r\n                var userStateColumnIndexes = [];\r\n                var column;\r\n                var userStateColumnIndex;\r\n                var i;\r\n\r\n                function applyFieldsState(column, userStateColumn) {\r\n                    if (!userStateColumn) {\r\n                        return\r\n                    }\r\n                    for (var index = 0; index < USER_STATE_FIELD_NAMES.length; index++) {\r\n                        var fieldName = USER_STATE_FIELD_NAMES[index];\r\n                        if (inArray(fieldName, ignoreColumnOptionNames) >= 0) {\r\n                            continue\r\n                        }\r\n                        if (\"dataType\" === fieldName) {\r\n                            column[fieldName] = column[fieldName] || userStateColumn[fieldName]\r\n                        } else if (inArray(fieldName, USER_STATE_FIELD_NAMES_15_1) >= 0) {\r\n                            if (fieldName in userStateColumn) {\r\n                                column[fieldName] = userStateColumn[fieldName]\r\n                            }\r\n                        } else {\r\n                            if (\"selectedFilterOperation\" === fieldName && userStateColumn[fieldName]) {\r\n                                column.defaultSelectedFilterOperation = column[fieldName] || null\r\n                            }\r\n                            column[fieldName] = userStateColumn[fieldName]\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function findUserStateColumn(columnsUserState, column) {\r\n                    var id = column.name || column.dataField;\r\n                    var count = columnCountById[id] || 0;\r\n                    for (var j = 0; j < columnsUserState.length; j++) {\r\n                        if (checkUserStateColumn(column, columnsUserState[j])) {\r\n                            if (count) {\r\n                                count--\r\n                            } else {\r\n                                columnCountById[id] = columnCountById[id] || 0;\r\n                                columnCountById[id]++;\r\n                                return j\r\n                            }\r\n                        }\r\n                    }\r\n                    return -1\r\n                }\r\n                if (columnsUserState) {\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        userStateColumnIndex = findUserStateColumn(columnsUserState, columns[i]);\r\n                        allColumnsHaveState = allColumnsHaveState && userStateColumnIndex >= 0;\r\n                        userStateColumnIndexes.push(userStateColumnIndex)\r\n                    }\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        column = columns[i];\r\n                        userStateColumnIndex = userStateColumnIndexes[i];\r\n                        if (that._hasUserState || allColumnsHaveState) {\r\n                            applyFieldsState(column, columnsUserState[userStateColumnIndex])\r\n                        }\r\n                        if (userStateColumnIndex >= 0 && isDefined(columnsUserState[userStateColumnIndex].initialIndex)) {\r\n                            resultColumns[userStateColumnIndex] = column\r\n                        } else {\r\n                            resultColumns.push(column)\r\n                        }\r\n                    }\r\n                    var hasAddedBands = false;\r\n                    for (i = 0; i < columnsUserState.length; i++) {\r\n                        var columnUserState = columnsUserState[i];\r\n                        if (columnUserState.added && findUserStateColumn(columns, columnUserState) < 0) {\r\n                            column = createColumn(that, columnUserState.added);\r\n                            applyFieldsState(column, columnUserState);\r\n                            resultColumns.push(column);\r\n                            if (columnUserState.added.columns) {\r\n                                hasAddedBands = true\r\n                            }\r\n                        }\r\n                    }\r\n                    if (hasAddedBands) {\r\n                        updateColumnIndexes(that);\r\n                        resultColumns = createColumnsFromOptions(that, resultColumns)\r\n                    }\r\n                    assignColumns(that, resultColumns)\r\n                }\r\n            };\r\n            var updateIndexes = function(that, column) {\r\n                updateColumnIndexes(that);\r\n                updateColumnGroupIndexes(that, column);\r\n                ! function(that, currentColumn) {\r\n                    each(that._columns, (function(index, column) {\r\n                        if (isDefined(column.sortIndex) && !isSortOrderValid(column.sortOrder)) {\r\n                            delete column.sortIndex\r\n                        }\r\n                    }));\r\n                    normalizeIndexes(that._columns, \"sortIndex\", currentColumn, (function(column) {\r\n                        return !isDefined(column.groupIndex) && isSortOrderValid(column.sortOrder)\r\n                    }))\r\n                }(that, column);\r\n                resetBandColumnsCache(that);\r\n                ! function(that, currentColumn) {\r\n                    var key;\r\n                    var column;\r\n                    var bandColumns = {};\r\n                    var result = [];\r\n                    var bandColumnsCache = that.getBandColumnsCache();\r\n                    var columns = that._columns.filter(column => !column.command);\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        column = columns[i];\r\n                        var parentBandColumns = getParentBandColumns(i, bandColumnsCache.columnParentByIndex);\r\n                        if (parentBandColumns.length) {\r\n                            var bandColumnIndex = parentBandColumns[parentBandColumns.length - 1].index;\r\n                            bandColumns[bandColumnIndex] = bandColumns[bandColumnIndex] || [];\r\n                            bandColumns[bandColumnIndex].push(column)\r\n                        } else {\r\n                            result.push(column)\r\n                        }\r\n                    }\r\n                    for (key in bandColumns) {\r\n                        normalizeIndexes(bandColumns[key], \"visibleIndex\", currentColumn)\r\n                    }\r\n                    normalizeIndexes(result, \"visibleIndex\", currentColumn)\r\n                }(that, column)\r\n            };\r\n            var resetColumnsCache = function(that) {\r\n                that.resetColumnsCache()\r\n            };\r\n\r\n            function assignColumns(that, columns) {\r\n                that._columns = columns;\r\n                resetColumnsCache(that);\r\n                that.updateColumnDataTypes()\r\n            }\r\n            var updateColumnChanges = function(that, changeType, optionName, columnIndex) {\r\n                var columnChanges = that._columnChanges || {\r\n                    optionNames: {\r\n                        length: 0\r\n                    },\r\n                    changeTypes: {\r\n                        length: 0\r\n                    },\r\n                    columnIndex: columnIndex\r\n                };\r\n                optionName = optionName || \"all\";\r\n                optionName = optionName.split(\".\")[0];\r\n                var changeTypes = columnChanges.changeTypes;\r\n                if (changeType && !changeTypes[changeType]) {\r\n                    changeTypes[changeType] = true;\r\n                    changeTypes.length++\r\n                }\r\n                var optionNames = columnChanges.optionNames;\r\n                if (optionName && !optionNames[optionName]) {\r\n                    optionNames[optionName] = true;\r\n                    optionNames.length++\r\n                }\r\n                if (void 0 === columnIndex || columnIndex !== columnChanges.columnIndex) {\r\n                    delete columnChanges.columnIndex\r\n                }\r\n                that._columnChanges = columnChanges;\r\n                resetColumnsCache(that)\r\n            };\r\n            var fireColumnsChanged = function(that) {\r\n                var onColumnsChanging = that.option(\"onColumnsChanging\");\r\n                var columnChanges = that._columnChanges;\r\n                var reinitOptionNames = [\"dataField\", \"lookup\", \"dataType\", \"columns\"];\r\n                if (that.isInitialized() && !that._updateLockCount && columnChanges) {\r\n                    if (onColumnsChanging) {\r\n                        that._updateLockCount++;\r\n                        onColumnsChanging(extend({\r\n                            component: that.component\r\n                        }, columnChanges));\r\n                        that._updateLockCount--\r\n                    }\r\n                    that._columnChanges = void 0;\r\n                    if (options = columnChanges.optionNames, options && reinitOptionNames.some(name => options[name])) {\r\n                        that.reinit()\r\n                    } else {\r\n                        that.columnsChanged.fire(columnChanges)\r\n                    }\r\n                }\r\n                var options\r\n            };\r\n            var updateSortOrderWhenGrouping = function(that, column, groupIndex, prevGroupIndex) {\r\n                var columnWasGrouped = prevGroupIndex >= 0;\r\n                if (groupIndex >= 0) {\r\n                    if (!columnWasGrouped) {\r\n                        column.lastSortOrder = column.sortOrder\r\n                    }\r\n                } else {\r\n                    var sortMode = that.option(\"sorting.mode\");\r\n                    var sortOrder = column.lastSortOrder;\r\n                    if (\"single\" === sortMode) {\r\n                        var sortedByAnotherColumn = that._columns.some(col => col !== column && isDefined(col.sortIndex));\r\n                        if (sortedByAnotherColumn) {\r\n                            sortOrder = void 0\r\n                        }\r\n                    }\r\n                    column.sortOrder = sortOrder\r\n                }\r\n            };\r\n            var fireOptionChanged = function(that, options) {\r\n                var value = options.value;\r\n                var optionName = options.optionName;\r\n                var prevValue = options.prevValue;\r\n                var fullOptionName = options.fullOptionName;\r\n                var fullOptionPath = \"\".concat(fullOptionName, \".\").concat(optionName);\r\n                if (!IGNORE_COLUMN_OPTION_NAMES[optionName] && that._skipProcessingColumnsChange !== fullOptionPath) {\r\n                    that._skipProcessingColumnsChange = fullOptionPath;\r\n                    that.component._notifyOptionChanged(fullOptionPath, value, prevValue);\r\n                    that._skipProcessingColumnsChange = false\r\n                }\r\n            };\r\n            var columnOptionCore = function(that, column, optionName, value, notFireEvent) {\r\n                var optionGetter = compileGetter(optionName);\r\n                var columnIndex = column.index;\r\n                var columns;\r\n                var changeType;\r\n                var initialColumn;\r\n                if (3 === arguments.length) {\r\n                    return optionGetter(column, {\r\n                        functionsAsIs: true\r\n                    })\r\n                }\r\n                var prevValue = optionGetter(column, {\r\n                    functionsAsIs: true\r\n                });\r\n                if (prevValue !== value) {\r\n                    if (\"groupIndex\" === optionName || \"calculateGroupValue\" === optionName) {\r\n                        changeType = \"grouping\";\r\n                        updateSortOrderWhenGrouping(that, column, value, prevValue)\r\n                    } else if (\"sortIndex\" === optionName || \"sortOrder\" === optionName || \"calculateSortValue\" === optionName) {\r\n                        changeType = \"sorting\"\r\n                    } else {\r\n                        changeType = \"columns\"\r\n                    }\r\n                    var optionSetter = compileSetter(optionName);\r\n                    optionSetter(column, value, {\r\n                        functionsAsIs: true\r\n                    });\r\n                    var fullOptionName = getColumnFullPath(that, column);\r\n                    if (COLUMN_INDEX_OPTIONS[optionName]) {\r\n                        updateIndexes(that, column);\r\n                        value = optionGetter(column)\r\n                    }\r\n                    if (\"name\" === optionName || \"allowEditing\" === optionName) {\r\n                        that._checkColumns()\r\n                    }\r\n                    fullOptionName && fireOptionChanged(that, {\r\n                        fullOptionName: fullOptionName,\r\n                        optionName: optionName,\r\n                        value: value,\r\n                        prevValue: prevValue\r\n                    });\r\n                    if (!isDefined(prevValue) && !isDefined(value) && 0 !== optionName.indexOf(\"buffer\")) {\r\n                        notFireEvent = true\r\n                    }\r\n                    if (!notFireEvent) {\r\n                        if (inArray(optionName, USER_STATE_FIELD_NAMES) < 0 && \"visibleWidth\" !== optionName) {\r\n                            columns = that.option(\"columns\");\r\n                            initialColumn = that.getColumnByPath(fullOptionName, columns);\r\n                            if (isString(initialColumn)) {\r\n                                initialColumn = columns[columnIndex] = {\r\n                                    dataField: initialColumn\r\n                                }\r\n                            }\r\n                            if (initialColumn && checkUserStateColumn(initialColumn, column)) {\r\n                                optionSetter(initialColumn, value, {\r\n                                    functionsAsIs: true\r\n                                })\r\n                            }\r\n                        }\r\n                        updateColumnChanges(that, changeType, optionName, columnIndex)\r\n                    } else {\r\n                        resetColumnsCache(that)\r\n                    }\r\n                }\r\n            };\r\n\r\n            function isSortOrderValid(sortOrder) {\r\n                return \"asc\" === sortOrder || \"desc\" === sortOrder\r\n            }\r\n            var defaultSetCellValue = function(data, value) {\r\n                var path = this.dataField.split(\".\");\r\n                var dotCount = path.length - 1;\r\n                if (this.serializeValue) {\r\n                    value = this.serializeValue(value)\r\n                }\r\n                for (var i = 0; i < dotCount; i++) {\r\n                    var name = path[i];\r\n                    data = data[name] = data[name] || {}\r\n                }\r\n                data[path[dotCount]] = value\r\n            };\r\n            var isCustomCommandColumn = (that, commandColumn) => !!that._columns.filter(column => column.type === commandColumn.type).length;\r\n            var getFixedPosition = function(that, column) {\r\n                var rtlEnabled = that.option(\"rtlEnabled\");\r\n                if (column.command && !isCustomCommandColumn(that, column) || !column.fixedPosition) {\r\n                    return rtlEnabled ? \"right\" : \"left\"\r\n                }\r\n                return column.fixedPosition\r\n            };\r\n            var processExpandColumns = function(columns, expandColumns, type, columnIndex) {\r\n                var customColumnIndex;\r\n                var rowCount = this.getRowCount();\r\n                var rowspan = columns[columnIndex] && columns[columnIndex].rowspan;\r\n                var expandColumnsByType = expandColumns.filter(column => column.type === type);\r\n                columns.forEach((column, index) => {\r\n                    if (column.type === type) {\r\n                        customColumnIndex = index;\r\n                        rowspan = columns[index + 1] ? columns[index + 1].rowspan : rowCount\r\n                    }\r\n                });\r\n                if (rowspan > 1) {\r\n                    expandColumnsByType = map(expandColumnsByType, (function(expandColumn) {\r\n                        return extend({}, expandColumn, {\r\n                            rowspan: rowspan\r\n                        })\r\n                    }))\r\n                }\r\n                expandColumnsByType.unshift.apply(expandColumnsByType, isDefined(customColumnIndex) ? [customColumnIndex, 1] : [columnIndex, 0]);\r\n                columns.splice.apply(columns, expandColumnsByType);\r\n                return rowspan || 1\r\n            };\r\n            var numberToString = function(number, digitsCount) {\r\n                var str = number ? number.toString() : \"0\";\r\n                while (str.length < digitsCount) {\r\n                    str = \"0\" + str\r\n                }\r\n                return str\r\n            };\r\n            var mergeColumns = (that, columns, commandColumns, needToExtend) => {\r\n                var column;\r\n                var commandColumnIndex;\r\n                var result = columns.slice().map(column => extend({}, column));\r\n                var isColumnFixing = that._isColumnFixing();\r\n                var defaultCommandColumns = commandColumns.slice().map(column => extend({\r\n                    fixed: isColumnFixing\r\n                }, column));\r\n                var getCommandColumnIndex = column => commandColumns.reduce((result, commandColumn, index) => {\r\n                    var columnType = needToExtend && column.type === GROUP_COMMAND_COLUMN_NAME ? \"expand\" : column.type;\r\n                    return commandColumn.type === columnType || commandColumn.command === column.command ? index : result\r\n                }, -1);\r\n                var callbackFilter = commandColumn => commandColumn.command !== commandColumns[commandColumnIndex].command;\r\n                for (var i = 0; i < columns.length; i++) {\r\n                    column = columns[i];\r\n                    commandColumnIndex = column && (column.type || column.command) ? getCommandColumnIndex(column) : -1;\r\n                    if (commandColumnIndex >= 0) {\r\n                        if (needToExtend) {\r\n                            result[i] = extend({\r\n                                fixed: isColumnFixing\r\n                            }, commandColumns[commandColumnIndex], column);\r\n                            if (column.type !== GROUP_COMMAND_COLUMN_NAME) {\r\n                                defaultCommandColumns = defaultCommandColumns.filter(callbackFilter)\r\n                            }\r\n                        } else {\r\n                            var columnOptions = {\r\n                                visibleIndex: column.visibleIndex,\r\n                                index: column.index,\r\n                                headerId: column.headerId,\r\n                                allowFixing: 0 === column.groupIndex,\r\n                                allowReordering: 0 === column.groupIndex,\r\n                                groupIndex: column.groupIndex\r\n                            };\r\n                            result[i] = extend({}, column, commandColumns[commandColumnIndex], column.type === GROUP_COMMAND_COLUMN_NAME && columnOptions)\r\n                        }\r\n                    }\r\n                }\r\n                if (columns.length && needToExtend && defaultCommandColumns.length) {\r\n                    result = result.concat(defaultCommandColumns)\r\n                }\r\n                return result\r\n            };\r\n            var isColumnFixed = (that, column) => isDefined(column.fixed) || !column.type ? column.fixed : that._isColumnFixing();\r\n            var resetBandColumnsCache = that => {\r\n                that._bandColumnsCache = void 0\r\n            };\r\n            var findColumn = (columns, identifier) => {\r\n                var identifierOptionName = isString(identifier) && identifier.substr(0, identifier.indexOf(\":\"));\r\n                var column;\r\n                if (void 0 === identifier) {\r\n                    return\r\n                }\r\n                if (identifierOptionName) {\r\n                    identifier = identifier.substr(identifierOptionName.length + 1)\r\n                }\r\n                if (identifierOptionName) {\r\n                    column = columns.filter(column => \"\" + column[identifierOptionName] === identifier)[0]\r\n                } else {\r\n                    [\"index\", \"name\", \"dataField\", \"caption\"].some(optionName => {\r\n                        column = columns.filter(column => column[optionName] === identifier)[0];\r\n                        return !!column\r\n                    })\r\n                }\r\n                return column\r\n            };\r\n            return {\r\n                _getExpandColumnOptions: function() {\r\n                    return {\r\n                        type: \"expand\",\r\n                        command: \"expand\",\r\n                        width: \"auto\",\r\n                        cssClass: COMMAND_EXPAND_CLASS,\r\n                        allowEditing: false,\r\n                        allowGrouping: false,\r\n                        allowSorting: false,\r\n                        allowResizing: false,\r\n                        allowReordering: false,\r\n                        allowHiding: false\r\n                    }\r\n                },\r\n                _getFirstItems: function(dataSource) {\r\n                    var groupsCount;\r\n                    var items = [];\r\n                    if (dataSource && dataSource.items().length > 0) {\r\n                        groupsCount = gridCoreUtils.normalizeSortingInfo(dataSource.group()).length;\r\n                        items = function getFirstItemsCore(items, groupsCount) {\r\n                            if (!items || !groupsCount) {\r\n                                return items\r\n                            }\r\n                            for (var i = 0; i < items.length; i++) {\r\n                                var childItems = getFirstItemsCore(items[i].items || items[i].collapsedItems, groupsCount - 1);\r\n                                if (childItems && childItems.length) {\r\n                                    return childItems\r\n                                }\r\n                            }\r\n                        }(dataSource.items(), groupsCount) || []\r\n                    }\r\n                    return items\r\n                },\r\n                _endUpdateCore: function() {\r\n                    !this._skipProcessingColumnsChange && fireColumnsChanged(this)\r\n                },\r\n                init: function() {\r\n                    var columns = this.option(\"columns\");\r\n                    this._commandColumns = this._commandColumns || [];\r\n                    this._columns = this._columns || [];\r\n                    this._isColumnsFromOptions = !!columns;\r\n                    if (this._isColumnsFromOptions) {\r\n                        assignColumns(this, columns ? createColumnsFromOptions(this, columns) : []);\r\n                        applyUserState(this)\r\n                    } else {\r\n                        assignColumns(this, this._columnsUserState ? createColumnsFromOptions(this, this._columnsUserState) : this._columns)\r\n                    }! function(that) {\r\n                        var options = that._getExpandColumnOptions();\r\n                        that.addCommandColumn(options)\r\n                    }(this);\r\n                    if (this._dataSourceApplied) {\r\n                        this.applyDataSource(this._dataSource, true)\r\n                    } else {\r\n                        updateIndexes(this)\r\n                    }\r\n                    this._checkColumns()\r\n                },\r\n                callbackNames: function() {\r\n                    return [\"columnsChanged\"]\r\n                },\r\n                getColumnByPath: function(path, columns) {\r\n                    var column;\r\n                    var columnIndexes = [];\r\n                    path.replace(regExp, (function(_, columnIndex) {\r\n                        columnIndexes.push(parseInt(columnIndex));\r\n                        return \"\"\r\n                    }));\r\n                    if (columnIndexes.length) {\r\n                        if (columns) {\r\n                            column = columnIndexes.reduce((function(column, index) {\r\n                                return column && column.columns && column.columns[index]\r\n                            }), {\r\n                                columns: columns\r\n                            })\r\n                        } else {\r\n                            column = function(that, columnIndexes) {\r\n                                var result;\r\n                                var columns;\r\n                                var bandColumnsCache = that.getBandColumnsCache();\r\n                                var callbackFilter = function(column) {\r\n                                    var ownerBand = result ? result.index : void 0;\r\n                                    return column.ownerBand === ownerBand\r\n                                };\r\n                                if (bandColumnsCache.isPlain) {\r\n                                    result = that._columns[columnIndexes[0]]\r\n                                } else {\r\n                                    columns = that._columns.filter(callbackFilter);\r\n                                    for (var i = 0; i < columnIndexes.length; i++) {\r\n                                        result = columns[columnIndexes[i]];\r\n                                        if (result) {\r\n                                            columns = that._columns.filter(callbackFilter)\r\n                                        }\r\n                                    }\r\n                                }\r\n                                return result\r\n                            }(this, columnIndexes)\r\n                        }\r\n                    }\r\n                    return column\r\n                },\r\n                optionChanged: function(args) {\r\n                    var needUpdateRequireResize;\r\n                    switch (args.name) {\r\n                        case \"adaptColumnWidthByRatio\":\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"dataSource\":\r\n                            if (args.value !== args.previousValue && !this.option(\"columns\") && (!Array.isArray(args.value) || !Array.isArray(args.previousValue))) {\r\n                                this._columns = []\r\n                            }\r\n                            break;\r\n                        case \"columns\":\r\n                            needUpdateRequireResize = this._skipProcessingColumnsChange;\r\n                            args.handled = true;\r\n                            if (!this._skipProcessingColumnsChange) {\r\n                                if (args.name === args.fullName) {\r\n                                    this._columnsUserState = null;\r\n                                    this._ignoreColumnOptionNames = null;\r\n                                    this.init()\r\n                                } else {\r\n                                    this._columnOptionChanged(args);\r\n                                    needUpdateRequireResize = true\r\n                                }\r\n                            }\r\n                            if (needUpdateRequireResize) {\r\n                                this._updateRequireResize(args)\r\n                            }\r\n                            break;\r\n                        case \"commonColumnSettings\":\r\n                        case \"columnAutoWidth\":\r\n                        case \"allowColumnResizing\":\r\n                        case \"allowColumnReordering\":\r\n                        case \"columnFixing\":\r\n                        case \"grouping\":\r\n                        case \"groupPanel\":\r\n                        case \"regenerateColumnsByVisibleItems\":\r\n                        case \"customizeColumns\":\r\n                        case \"columnHidingEnabled\":\r\n                        case \"dateSerializationFormat\":\r\n                        case \"columnResizingMode\":\r\n                        case \"columnMinWidth\":\r\n                        case \"columnWidth\":\r\n                            args.handled = true;\r\n                            var ignoreColumnOptionNames = \"columnWidth\" === args.fullName && [\"width\"];\r\n                            this.reinit(ignoreColumnOptionNames);\r\n                            break;\r\n                        case \"rtlEnabled\":\r\n                            this.reinit();\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                _columnOptionChanged: function(args) {\r\n                    var columnOptionValue = {};\r\n                    var column = this.getColumnByPath(args.fullName);\r\n                    var columnOptionName = args.fullName.replace(regExp, \"\");\r\n                    if (column) {\r\n                        if (columnOptionName) {\r\n                            columnOptionValue[columnOptionName] = args.value\r\n                        } else {\r\n                            columnOptionValue = args.value\r\n                        }\r\n                        this._skipProcessingColumnsChange = args.fullName;\r\n                        this.columnOption(column.index, columnOptionValue);\r\n                        this._skipProcessingColumnsChange = false\r\n                    }\r\n                },\r\n                _updateRequireResize: function(args) {\r\n                    var component = this.component;\r\n                    if (\"width\" === args.fullName.replace(regExp, \"\") && component._updateLockCount) {\r\n                        component._requireResize = true\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    return [\"addColumn\", \"deleteColumn\", \"columnOption\", \"columnCount\", \"clearSorting\", \"clearGrouping\", \"getVisibleColumns\", \"getVisibleColumnIndex\"]\r\n                },\r\n                applyDataSource: function(dataSource, forceApplying) {\r\n                    var isDataSourceLoaded = dataSource && dataSource.isLoaded();\r\n                    this._dataSource = dataSource;\r\n                    if (!this._dataSourceApplied || 0 === this._dataSourceColumnsCount || forceApplying || this.option(\"regenerateColumnsByVisibleItems\")) {\r\n                        if (isDataSourceLoaded) {\r\n                            if (!this._isColumnsFromOptions) {\r\n                                var columnsFromDataSource = function(that, dataSource) {\r\n                                    var firstItems = that._getFirstItems(dataSource);\r\n                                    var fieldName;\r\n                                    var processedFields = {};\r\n                                    var result = [];\r\n                                    for (var i = 0; i < firstItems.length; i++) {\r\n                                        if (firstItems[i]) {\r\n                                            for (fieldName in firstItems[i]) {\r\n                                                if (!isFunction(firstItems[i][fieldName]) || variableWrapper.isWrapped(firstItems[i][fieldName])) {\r\n                                                    processedFields[fieldName] = true\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    for (fieldName in processedFields) {\r\n                                        if (0 !== fieldName.indexOf(\"__\")) {\r\n                                            var column = createColumn(that, fieldName);\r\n                                            result.push(column)\r\n                                        }\r\n                                    }\r\n                                    return result\r\n                                }(this, dataSource);\r\n                                if (columnsFromDataSource.length) {\r\n                                    assignColumns(this, columnsFromDataSource);\r\n                                    this._dataSourceColumnsCount = this._columns.length;\r\n                                    applyUserState(this)\r\n                                }\r\n                            }\r\n                            return this.updateColumns(dataSource, forceApplying)\r\n                        } else {\r\n                            this._dataSourceApplied = false\r\n                        }\r\n                    } else if (isDataSourceLoaded && !this.isAllDataTypesDefined(true) && this.updateColumnDataTypes(dataSource)) {\r\n                        updateColumnChanges(this, \"columns\");\r\n                        fireColumnsChanged(this);\r\n                        return (new Deferred).reject().promise()\r\n                    }\r\n                },\r\n                reset: function() {\r\n                    this._dataSource = null;\r\n                    this._dataSourceApplied = false;\r\n                    this._dataSourceColumnsCount = void 0;\r\n                    this.reinit()\r\n                },\r\n                resetColumnsCache: function() {\r\n                    this._visibleColumns = void 0;\r\n                    this._fixedColumns = void 0;\r\n                    this._rowCount = void 0;\r\n                    resetBandColumnsCache(this)\r\n                },\r\n                reinit: function(ignoreColumnOptionNames) {\r\n                    this._columnsUserState = this.getUserState();\r\n                    this._ignoreColumnOptionNames = ignoreColumnOptionNames || null;\r\n                    this.init();\r\n                    if (ignoreColumnOptionNames) {\r\n                        this._ignoreColumnOptionNames = null\r\n                    }\r\n                },\r\n                isInitialized: function() {\r\n                    return !!this._columns.length || !!this.option(\"columns\")\r\n                },\r\n                isDataSourceApplied: function() {\r\n                    return this._dataSourceApplied\r\n                },\r\n                getCommonSettings: function(column) {\r\n                    var commonColumnSettings = (!column || !column.type) && this.option(\"commonColumnSettings\") || {};\r\n                    var groupingOptions = this.option(\"grouping\") || {};\r\n                    var groupPanelOptions = this.option(\"groupPanel\") || {};\r\n                    return extend({\r\n                        allowFixing: this.option(\"columnFixing.enabled\"),\r\n                        allowResizing: this.option(\"allowColumnResizing\") || void 0,\r\n                        allowReordering: this.option(\"allowColumnReordering\"),\r\n                        minWidth: this.option(\"columnMinWidth\"),\r\n                        width: this.option(\"columnWidth\"),\r\n                        autoExpandGroup: groupingOptions.autoExpandAll,\r\n                        allowCollapsing: groupingOptions.allowCollapsing,\r\n                        allowGrouping: groupPanelOptions.allowColumnDragging && groupPanelOptions.visible || groupingOptions.contextMenuEnabled\r\n                    }, commonColumnSettings)\r\n                },\r\n                isColumnOptionUsed: function(optionName) {\r\n                    for (var i = 0; i < this._columns.length; i++) {\r\n                        if (this._columns[i][optionName]) {\r\n                            return true\r\n                        }\r\n                    }\r\n                },\r\n                isAllDataTypesDefined: function(checkSerializers) {\r\n                    var columns = this._columns;\r\n                    if (!columns.length) {\r\n                        return false\r\n                    }\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        if (!columns[i].dataField && columns[i].calculateCellValue === columns[i].defaultCalculateCellValue) {\r\n                            continue\r\n                        }\r\n                        if (!columns[i].dataType || checkSerializers && columns[i].deserializeValue && void 0 === columns[i].serializationFormat) {\r\n                            return false\r\n                        }\r\n                    }\r\n                    return true\r\n                },\r\n                getColumns: function() {\r\n                    return this._columns\r\n                },\r\n                isBandColumnsUsed: function() {\r\n                    return this.getColumns().some((function(column) {\r\n                        return column.isBand\r\n                    }))\r\n                },\r\n                getGroupColumns: function() {\r\n                    var result = [];\r\n                    each(this._columns, (function() {\r\n                        if (isDefined(this.groupIndex)) {\r\n                            result[this.groupIndex] = this\r\n                        }\r\n                    }));\r\n                    return result\r\n                },\r\n                getVisibleColumns: function(rowIndex) {\r\n                    this._visibleColumns = this._visibleColumns || this._getVisibleColumnsCore();\r\n                    rowIndex = isDefined(rowIndex) ? rowIndex : this._visibleColumns.length - 1;\r\n                    return this._visibleColumns[rowIndex] || []\r\n                },\r\n                getFixedColumns: function(rowIndex) {\r\n                    this._fixedColumns = this._fixedColumns || this._getFixedColumnsCore();\r\n                    rowIndex = isDefined(rowIndex) ? rowIndex : this._fixedColumns.length - 1;\r\n                    return this._fixedColumns[rowIndex] || []\r\n                },\r\n                getFilteringColumns: function() {\r\n                    return this.getColumns().filter(item => (item.dataField || item.name) && (item.allowFiltering || item.allowHeaderFiltering)).map(item => {\r\n                        var field = extend(true, {}, item);\r\n                        if (!isDefined(field.dataField)) {\r\n                            field.dataField = field.name\r\n                        }\r\n                        field.filterOperations = item.filterOperations !== item.defaultFilterOperations ? field.filterOperations : null;\r\n                        return field\r\n                    })\r\n                },\r\n                getColumnIndexOffset: function() {\r\n                    return 0\r\n                },\r\n                _getFixedColumnsCore: function() {\r\n                    var result = [];\r\n                    var rowCount = this.getRowCount();\r\n                    var isColumnFixing = this._isColumnFixing();\r\n                    var transparentColumn = {\r\n                        command: \"transparent\"\r\n                    };\r\n                    var transparentColspan = 0;\r\n                    var notFixedColumnCount;\r\n                    var transparentColumnIndex;\r\n                    var lastFixedPosition;\r\n                    if (isColumnFixing) {\r\n                        for (var i = 0; i <= rowCount; i++) {\r\n                            notFixedColumnCount = 0;\r\n                            lastFixedPosition = null;\r\n                            transparentColumnIndex = null;\r\n                            var visibleColumns = this.getVisibleColumns(i, true);\r\n                            for (var j = 0; j < visibleColumns.length; j++) {\r\n                                var prevColumn = visibleColumns[j - 1];\r\n                                var column = visibleColumns[j];\r\n                                if (!column.fixed) {\r\n                                    if (0 === i) {\r\n                                        if (column.isBand && column.colspan) {\r\n                                            transparentColspan += column.colspan\r\n                                        } else {\r\n                                            transparentColspan++\r\n                                        }\r\n                                    }\r\n                                    notFixedColumnCount++;\r\n                                    if (!isDefined(transparentColumnIndex)) {\r\n                                        transparentColumnIndex = j\r\n                                    }\r\n                                } else if (prevColumn && prevColumn.fixed && getFixedPosition(this, prevColumn) !== getFixedPosition(this, column)) {\r\n                                    if (!isDefined(transparentColumnIndex)) {\r\n                                        transparentColumnIndex = j\r\n                                    }\r\n                                } else {\r\n                                    lastFixedPosition = column.fixedPosition\r\n                                }\r\n                            }\r\n                            if (0 === i && (0 === notFixedColumnCount || notFixedColumnCount >= visibleColumns.length)) {\r\n                                return []\r\n                            }\r\n                            if (!isDefined(transparentColumnIndex)) {\r\n                                transparentColumnIndex = \"right\" === lastFixedPosition ? 0 : visibleColumns.length\r\n                            }\r\n                            result[i] = visibleColumns.slice(0);\r\n                            if (!transparentColumn.colspan) {\r\n                                transparentColumn.colspan = transparentColspan\r\n                            }\r\n                            result[i].splice(transparentColumnIndex, notFixedColumnCount, transparentColumn)\r\n                        }\r\n                    }\r\n                    return result.map(columns => columns.map(column => {\r\n                        var newColumn = _extends({}, column);\r\n                        if (newColumn.headerId) {\r\n                            newColumn.headerId += \"-fixed\"\r\n                        }\r\n                        return newColumn\r\n                    }))\r\n                },\r\n                _isColumnFixing: function() {\r\n                    var isColumnFixing = this.option(\"columnFixing.enabled\");\r\n                    !isColumnFixing && each(this._columns, (function(_, column) {\r\n                        if (column.fixed) {\r\n                            isColumnFixing = true;\r\n                            return false\r\n                        }\r\n                    }));\r\n                    return isColumnFixing\r\n                },\r\n                _getExpandColumnsCore: function() {\r\n                    return this.getGroupColumns()\r\n                },\r\n                getExpandColumns: function() {\r\n                    var expandColumns = this._getExpandColumnsCore();\r\n                    var expandColumn;\r\n                    var firstGroupColumn = expandColumns.filter(column => 0 === column.groupIndex)[0];\r\n                    var isFixedFirstGroupColumn = firstGroupColumn && firstGroupColumn.fixed;\r\n                    var isColumnFixing = this._isColumnFixing();\r\n                    if (expandColumns.length) {\r\n                        expandColumn = this.columnOption(\"command:expand\")\r\n                    }\r\n                    expandColumns = map(expandColumns, column => extend({}, column, {\r\n                        visibleWidth: null,\r\n                        minWidth: null,\r\n                        cellTemplate: !isDefined(column.groupIndex) ? column.cellTemplate : null,\r\n                        headerCellTemplate: null,\r\n                        fixed: !isDefined(column.groupIndex) || !isFixedFirstGroupColumn ? isColumnFixing : true\r\n                    }, expandColumn, {\r\n                        index: column.index,\r\n                        type: column.type || GROUP_COMMAND_COLUMN_NAME\r\n                    }));\r\n                    return expandColumns\r\n                },\r\n                getBandColumnsCache: function() {\r\n                    if (!this._bandColumnsCache) {\r\n                        var columns = this._columns;\r\n                        var columnChildrenByIndex = {};\r\n                        var columnParentByIndex = {};\r\n                        var isPlain = true;\r\n                        columns.forEach((function(column) {\r\n                            var ownerBand = column.ownerBand;\r\n                            var parentIndex = isObject(ownerBand) ? ownerBand.index : ownerBand;\r\n                            var parent = columns[parentIndex];\r\n                            if (column.hasColumns) {\r\n                                isPlain = false\r\n                            }\r\n                            if (column.colspan) {\r\n                                column.colspan = void 0\r\n                            }\r\n                            if (column.rowspan) {\r\n                                column.rowspan = void 0\r\n                            }\r\n                            if (parent) {\r\n                                columnParentByIndex[column.index] = parent\r\n                            } else {\r\n                                parentIndex = -1\r\n                            }\r\n                            columnChildrenByIndex[parentIndex] = columnChildrenByIndex[parentIndex] || [];\r\n                            columnChildrenByIndex[parentIndex].push(column)\r\n                        }));\r\n                        this._bandColumnsCache = {\r\n                            isPlain: isPlain,\r\n                            columnChildrenByIndex: columnChildrenByIndex,\r\n                            columnParentByIndex: columnParentByIndex\r\n                        }\r\n                    }\r\n                    return this._bandColumnsCache\r\n                },\r\n                _isColumnVisible: function(column) {\r\n                    return column.visible && this.isParentColumnVisible(column.index)\r\n                },\r\n                _getVisibleColumnsCore: function() {\r\n                    var that = this;\r\n                    var i;\r\n                    var result = [];\r\n                    var rowspanGroupColumns = 0;\r\n                    var rowspanExpandColumns = 0;\r\n                    var rowCount = that.getRowCount();\r\n                    var positiveIndexedColumns = [];\r\n                    var negativeIndexedColumns = [];\r\n                    var notGroupedColumnsCount = 0;\r\n                    var isFixedToEnd;\r\n                    var rtlEnabled = that.option(\"rtlEnabled\");\r\n                    var bandColumnsCache = that.getBandColumnsCache();\r\n                    var expandColumns = mergeColumns(that, that.getExpandColumns(), that._columns);\r\n                    var columns = mergeColumns(that, that._columns, that._commandColumns, true);\r\n                    var columnDigitsCount = function(number) {\r\n                        var i;\r\n                        for (i = 0; number > 1; i++) {\r\n                            number /= 10\r\n                        }\r\n                        return i\r\n                    }(columns.length);\r\n                    ! function(that, columns, bandColumnsCache) {\r\n                        var rowspan;\r\n                        for (var i = 0; i < columns.length; i++) {\r\n                            var column = columns[i];\r\n                            if (column.visible || column.command) {\r\n                                if (column.isBand) {\r\n                                    column.colspan = column.colspan || calculateColspan(that, column.index)\r\n                                }\r\n                                if (!column.isBand || !column.colspan) {\r\n                                    rowspan = that.getRowCount();\r\n                                    if (!column.command && (!isDefined(column.groupIndex) || column.showWhenGrouped)) {\r\n                                        rowspan -= getParentBandColumns(column.index, bandColumnsCache.columnParentByIndex).length\r\n                                    }\r\n                                    if (rowspan > 1) {\r\n                                        column.rowspan = rowspan\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }(that, columns, bandColumnsCache);\r\n                    for (i = 0; i < rowCount; i++) {\r\n                        result[i] = [];\r\n                        negativeIndexedColumns[i] = [{}];\r\n                        positiveIndexedColumns[i] = [{}, {}, {}]\r\n                    }\r\n                    each(columns, (function() {\r\n                        var visibleIndex = this.visibleIndex;\r\n                        var indexedColumns;\r\n                        var parentBandColumns = getParentBandColumns(this.index, bandColumnsCache.columnParentByIndex);\r\n                        var visible = that._isColumnVisible(this);\r\n                        if (visible && (!isDefined(this.groupIndex) || this.showWhenGrouped)) {\r\n                            var rowIndex = parentBandColumns.length;\r\n                            if (visibleIndex < 0) {\r\n                                visibleIndex = -visibleIndex;\r\n                                indexedColumns = negativeIndexedColumns[rowIndex]\r\n                            } else {\r\n                                this.fixed = parentBandColumns.length ? parentBandColumns[0].fixed : this.fixed;\r\n                                this.fixedPosition = parentBandColumns.length ? parentBandColumns[0].fixedPosition : this.fixedPosition;\r\n                                if (this.fixed) {\r\n                                    isFixedToEnd = \"right\" === this.fixedPosition;\r\n                                    if (rtlEnabled && (!this.command || isCustomCommandColumn(that, this))) {\r\n                                        isFixedToEnd = !isFixedToEnd\r\n                                    }\r\n                                    if (isFixedToEnd) {\r\n                                        indexedColumns = positiveIndexedColumns[rowIndex][2]\r\n                                    } else {\r\n                                        indexedColumns = positiveIndexedColumns[rowIndex][0]\r\n                                    }\r\n                                } else {\r\n                                    indexedColumns = positiveIndexedColumns[rowIndex][1]\r\n                                }\r\n                            }\r\n                            if (parentBandColumns.length) {\r\n                                visibleIndex = numberToString(visibleIndex, columnDigitsCount);\r\n                                for (i = parentBandColumns.length - 1; i >= 0; i--) {\r\n                                    visibleIndex = numberToString(parentBandColumns[i].visibleIndex, columnDigitsCount) + visibleIndex\r\n                                }\r\n                            }\r\n                            indexedColumns[visibleIndex] = indexedColumns[visibleIndex] || [];\r\n                            indexedColumns[visibleIndex].push(this);\r\n                            notGroupedColumnsCount++\r\n                        }\r\n                    }));\r\n                    each(result, (function(rowIndex) {\r\n                        orderEach(negativeIndexedColumns[rowIndex], (function(_, columns) {\r\n                            result[rowIndex].unshift.apply(result[rowIndex], columns)\r\n                        }));\r\n                        var firstPositiveIndexColumn = result[rowIndex].length;\r\n                        each(positiveIndexedColumns[rowIndex], (function(index, columnsByFixing) {\r\n                            orderEach(columnsByFixing, (function(_, columnsByVisibleIndex) {\r\n                                result[rowIndex].push.apply(result[rowIndex], columnsByVisibleIndex)\r\n                            }))\r\n                        }));\r\n                        if (rowspanExpandColumns < rowIndex + 1) {\r\n                            rowspanExpandColumns += processExpandColumns.call(that, result[rowIndex], expandColumns, \"detailExpand\", firstPositiveIndexColumn)\r\n                        }\r\n                        if (rowspanGroupColumns < rowIndex + 1) {\r\n                            rowspanGroupColumns += processExpandColumns.call(that, result[rowIndex], expandColumns, GROUP_COMMAND_COLUMN_NAME, firstPositiveIndexColumn)\r\n                        }\r\n                    }));\r\n                    result.push(function getDataColumns(columns, rowIndex, bandColumnID) {\r\n                        var result = [];\r\n                        rowIndex = rowIndex || 0;\r\n                        columns[rowIndex] && each(columns[rowIndex], (function(_, column) {\r\n                            if (column.ownerBand === bandColumnID || column.type === GROUP_COMMAND_COLUMN_NAME) {\r\n                                if (!column.isBand || !column.colspan) {\r\n                                    if (!column.command || rowIndex < 1) {\r\n                                        result.push(column)\r\n                                    }\r\n                                } else {\r\n                                    result.push.apply(result, getDataColumns(columns, rowIndex + 1, column.index))\r\n                                }\r\n                            }\r\n                        }));\r\n                        return result\r\n                    }(result));\r\n                    if (!notGroupedColumnsCount && that._columns.length) {\r\n                        result[rowCount].push({\r\n                            command: \"empty\"\r\n                        })\r\n                    }\r\n                    return result\r\n                },\r\n                getInvisibleColumns: function(columns, bandColumnIndex) {\r\n                    var that = this;\r\n                    var result = [];\r\n                    var hiddenColumnsByBand;\r\n                    columns = columns || that._columns;\r\n                    each(columns, (function(_, column) {\r\n                        if (column.ownerBand !== bandColumnIndex) {\r\n                            return\r\n                        }\r\n                        if (column.isBand) {\r\n                            if (!column.visible) {\r\n                                hiddenColumnsByBand = that.getChildrenByBandColumn(column.index)\r\n                            } else {\r\n                                hiddenColumnsByBand = that.getInvisibleColumns(that.getChildrenByBandColumn(column.index), column.index)\r\n                            }\r\n                            if (hiddenColumnsByBand.length) {\r\n                                result.push(column);\r\n                                result = result.concat(hiddenColumnsByBand)\r\n                            }\r\n                            return\r\n                        }\r\n                        if (!column.visible) {\r\n                            result.push(column)\r\n                        }\r\n                    }));\r\n                    return result\r\n                },\r\n                getChooserColumns: function(getAllColumns) {\r\n                    var columns = getAllColumns ? this.getColumns() : this.getInvisibleColumns();\r\n                    var columnChooserColumns = columns.filter(column => column.showInColumnChooser);\r\n                    var sortOrder = this.option(\"columnChooser.sortOrder\");\r\n                    return ((columns, sortOrder) => {\r\n                        if (\"asc\" !== sortOrder && \"desc\" !== sortOrder) {\r\n                            return columns\r\n                        }\r\n                        var sign = \"asc\" === sortOrder ? 1 : -1;\r\n                        columns.sort((function(column1, column2) {\r\n                            var caption1 = column1.caption || \"\";\r\n                            var caption2 = column2.caption || \"\";\r\n                            return sign * caption1.localeCompare(caption2)\r\n                        }));\r\n                        return columns\r\n                    })(columnChooserColumns, sortOrder)\r\n                },\r\n                allowMoveColumn: function(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation) {\r\n                    var columnIndex = getColumnIndexByVisibleIndex(this, fromVisibleIndex, sourceLocation);\r\n                    var sourceColumn = this._columns[columnIndex];\r\n                    if (sourceColumn && (sourceColumn.allowReordering || sourceColumn.allowGrouping || sourceColumn.allowHiding)) {\r\n                        if (sourceLocation === targetLocation) {\r\n                            if (\"columnChooser\" === sourceLocation) {\r\n                                return false\r\n                            }\r\n                            fromVisibleIndex = isObject(fromVisibleIndex) ? fromVisibleIndex.columnIndex : fromVisibleIndex;\r\n                            toVisibleIndex = isObject(toVisibleIndex) ? toVisibleIndex.columnIndex : toVisibleIndex;\r\n                            return fromVisibleIndex !== toVisibleIndex && fromVisibleIndex + 1 !== toVisibleIndex\r\n                        } else if (\"group\" === sourceLocation && \"columnChooser\" !== targetLocation || \"group\" === targetLocation) {\r\n                            return sourceColumn && sourceColumn.allowGrouping\r\n                        } else if (\"columnChooser\" === sourceLocation || \"columnChooser\" === targetLocation) {\r\n                            return sourceColumn && sourceColumn.allowHiding\r\n                        }\r\n                        return true\r\n                    }\r\n                    return false\r\n                },\r\n                moveColumn: function(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation) {\r\n                    var options = {};\r\n                    var prevGroupIndex;\r\n                    var fromIndex = getColumnIndexByVisibleIndex(this, fromVisibleIndex, sourceLocation);\r\n                    var toIndex = getColumnIndexByVisibleIndex(this, toVisibleIndex, targetLocation);\r\n                    var targetGroupIndex;\r\n                    if (fromIndex >= 0) {\r\n                        var column = this._columns[fromIndex];\r\n                        toVisibleIndex = isObject(toVisibleIndex) ? toVisibleIndex.columnIndex : toVisibleIndex;\r\n                        targetGroupIndex = toIndex >= 0 ? this._columns[toIndex].groupIndex : -1;\r\n                        if (isDefined(column.groupIndex) && \"group\" === sourceLocation) {\r\n                            if (targetGroupIndex > column.groupIndex) {\r\n                                targetGroupIndex--\r\n                            }\r\n                            if (\"group\" !== targetLocation) {\r\n                                options.groupIndex = void 0\r\n                            } else {\r\n                                prevGroupIndex = column.groupIndex;\r\n                                delete column.groupIndex;\r\n                                updateColumnGroupIndexes(this)\r\n                            }\r\n                        }\r\n                        if (\"group\" === targetLocation) {\r\n                            options.groupIndex = function(that, column, groupIndex) {\r\n                                var groupColumns = that.getGroupColumns();\r\n                                var i;\r\n                                if (groupIndex >= 0) {\r\n                                    for (i = 0; i < groupColumns.length; i++) {\r\n                                        if (groupColumns[i].groupIndex >= groupIndex) {\r\n                                            groupColumns[i].groupIndex++\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    groupIndex = 0;\r\n                                    for (i = 0; i < groupColumns.length; i++) {\r\n                                        groupIndex = Math.max(groupIndex, groupColumns[i].groupIndex + 1)\r\n                                    }\r\n                                }\r\n                                return groupIndex\r\n                            }(this, 0, targetGroupIndex);\r\n                            column.groupIndex = prevGroupIndex\r\n                        } else if (toVisibleIndex >= 0) {\r\n                            var targetColumn = this._columns[toIndex];\r\n                            if (!targetColumn || column.ownerBand !== targetColumn.ownerBand) {\r\n                                options.visibleIndex = MAX_SAFE_INTEGER\r\n                            } else if (isColumnFixed(this, column) ^ isColumnFixed(this, targetColumn)) {\r\n                                options.visibleIndex = MAX_SAFE_INTEGER\r\n                            } else {\r\n                                options.visibleIndex = targetColumn.visibleIndex\r\n                            }\r\n                        }\r\n                        var isVisible = \"columnChooser\" !== targetLocation;\r\n                        if (column.visible !== isVisible) {\r\n                            options.visible = isVisible\r\n                        }\r\n                        this.columnOption(column.index, options)\r\n                    }\r\n                },\r\n                changeSortOrder: function(columnIndex, sortOrder) {\r\n                    var options = {};\r\n                    var sortingOptions = this.option(\"sorting\");\r\n                    var sortingMode = sortingOptions && sortingOptions.mode;\r\n                    var needResetSorting = \"single\" === sortingMode || !sortOrder;\r\n                    var allowSorting = \"single\" === sortingMode || \"multiple\" === sortingMode;\r\n                    var column = this._columns[columnIndex];\r\n                    if (allowSorting && column && column.allowSorting) {\r\n                        if (needResetSorting && !isDefined(column.groupIndex)) {\r\n                            each(this._columns, (function(index) {\r\n                                if (index !== columnIndex && this.sortOrder) {\r\n                                    if (!isDefined(this.groupIndex)) {\r\n                                        delete this.sortOrder\r\n                                    }\r\n                                    delete this.sortIndex\r\n                                }\r\n                            }))\r\n                        }\r\n                        if (isSortOrderValid(sortOrder)) {\r\n                            if (column.sortOrder !== sortOrder) {\r\n                                options.sortOrder = sortOrder\r\n                            }\r\n                        } else if (\"none\" === sortOrder) {\r\n                            if (column.sortOrder) {\r\n                                options.sortIndex = void 0;\r\n                                options.sortOrder = void 0\r\n                            }\r\n                        } else {\r\n                            ! function(column) {\r\n                                if (\"ctrl\" === sortOrder) {\r\n                                    if (!(\"sortOrder\" in column && \"sortIndex\" in column)) {\r\n                                        return false\r\n                                    }\r\n                                    options.sortOrder = void 0;\r\n                                    options.sortIndex = void 0\r\n                                } else if (isDefined(column.groupIndex) || isDefined(column.sortIndex)) {\r\n                                    options.sortOrder = \"desc\" === column.sortOrder ? \"asc\" : \"desc\"\r\n                                } else {\r\n                                    options.sortOrder = \"asc\"\r\n                                }\r\n                                return true\r\n                            }(column)\r\n                        }\r\n                    }\r\n                    this.columnOption(column.index, options)\r\n                },\r\n                getSortDataSourceParameters: function(useLocalSelector) {\r\n                    var sortColumns = [];\r\n                    var sort = [];\r\n                    each(this._columns, (function() {\r\n                        if ((this.dataField || this.selector || this.calculateCellValue) && isDefined(this.sortIndex) && !isDefined(this.groupIndex)) {\r\n                            sortColumns[this.sortIndex] = this\r\n                        }\r\n                    }));\r\n                    each(sortColumns, (function() {\r\n                        var sortOrder = this && this.sortOrder;\r\n                        if (isSortOrderValid(sortOrder)) {\r\n                            var sortItem = {\r\n                                selector: this.calculateSortValue || this.displayField || this.calculateDisplayValue || useLocalSelector && this.selector || this.dataField || this.calculateCellValue,\r\n                                desc: \"desc\" === this.sortOrder\r\n                            };\r\n                            if (this.sortingMethod) {\r\n                                sortItem.compare = this.sortingMethod.bind(this)\r\n                            }\r\n                            sort.push(sortItem)\r\n                        }\r\n                    }));\r\n                    return sort.length > 0 ? sort : null\r\n                },\r\n                getGroupDataSourceParameters: function(useLocalSelector) {\r\n                    var group = [];\r\n                    each(this.getGroupColumns(), (function() {\r\n                        var selector = this.calculateGroupValue || this.displayField || this.calculateDisplayValue || useLocalSelector && this.selector || this.dataField || this.calculateCellValue;\r\n                        if (selector) {\r\n                            var groupItem = {\r\n                                selector: selector,\r\n                                desc: \"desc\" === this.sortOrder,\r\n                                isExpanded: !!this.autoExpandGroup\r\n                            };\r\n                            if (this.sortingMethod) {\r\n                                groupItem.compare = this.sortingMethod.bind(this)\r\n                            }\r\n                            group.push(groupItem)\r\n                        }\r\n                    }));\r\n                    return group.length > 0 ? group : null\r\n                },\r\n                refresh: function(updateNewLookupsOnly) {\r\n                    var deferreds = [];\r\n                    each(this._columns, (function() {\r\n                        var lookup = this.lookup;\r\n                        if (lookup && !this.calculateDisplayValue) {\r\n                            if (updateNewLookupsOnly && lookup.valueMap) {\r\n                                return\r\n                            }\r\n                            if (lookup.update) {\r\n                                deferreds.push(lookup.update())\r\n                            }\r\n                        }\r\n                    }));\r\n                    return when.apply($, deferreds).done(resetColumnsCache.bind(null, this))\r\n                },\r\n                _updateColumnOptions: function(column, columnIndex) {\r\n                    column.selector = column.selector || function(data) {\r\n                        return column.calculateCellValue(data)\r\n                    };\r\n                    each([\"calculateSortValue\", \"calculateGroupValue\", \"calculateDisplayValue\"], (function(_, calculateCallbackName) {\r\n                        var calculateCallback = column[calculateCallbackName];\r\n                        if (isFunction(calculateCallback)) {\r\n                            if (!calculateCallback.originalCallback) {\r\n                                var context = {\r\n                                    column: column\r\n                                };\r\n                                column[calculateCallbackName] = function(data) {\r\n                                    return calculateCallback.call(context.column, data)\r\n                                };\r\n                                column[calculateCallbackName].originalCallback = calculateCallback;\r\n                                column[calculateCallbackName].columnIndex = columnIndex;\r\n                                column[calculateCallbackName].context = context\r\n                            } else {\r\n                                column[calculateCallbackName].context.column = column\r\n                            }\r\n                        }\r\n                    }));\r\n                    if (isString(column.calculateDisplayValue)) {\r\n                        column.displayField = column.calculateDisplayValue;\r\n                        column.calculateDisplayValue = compileGetter(column.displayField)\r\n                    }\r\n                    if (column.calculateDisplayValue) {\r\n                        column.displayValueMap = column.displayValueMap || {}\r\n                    }\r\n                    updateSerializers(column, column.dataType);\r\n                    var lookup = column.lookup;\r\n                    if (lookup) {\r\n                        updateSerializers(lookup, lookup.dataType)\r\n                    }\r\n                    var dataType = lookup ? lookup.dataType : column.dataType;\r\n                    if (dataType) {\r\n                        column.alignment = column.alignment || function(dataType, isRTL) {\r\n                            switch (dataType) {\r\n                                case \"number\":\r\n                                    return \"right\";\r\n                                case \"boolean\":\r\n                                    return \"center\";\r\n                                default:\r\n                                    return getDefaultAlignment(isRTL)\r\n                            }\r\n                        }(dataType, this.option(\"rtlEnabled\"));\r\n                        column.format = column.format || gridCoreUtils.getFormatByDataType(dataType);\r\n                        column.customizeText = column.customizeText || getCustomizeTextByDataType(dataType);\r\n                        column.defaultFilterOperations = column.defaultFilterOperations || !lookup && DATATYPE_OPERATIONS[dataType] || [];\r\n                        if (!isDefined(column.filterOperations)) {\r\n                            setFilterOperationsAsDefaultValues(column)\r\n                        }\r\n                        column.defaultFilterOperation = column.filterOperations && column.filterOperations[0] || \"=\";\r\n                        column.showEditorAlways = isDefined(column.showEditorAlways) ? column.showEditorAlways : \"boolean\" === dataType && !column.cellTemplate && !column.lookup\r\n                    }\r\n                },\r\n                updateColumnDataTypes: function(dataSource) {\r\n                    var that = this;\r\n                    var dateSerializationFormat = that.option(\"dateSerializationFormat\");\r\n                    var firstItems = that._getFirstItems(dataSource);\r\n                    var isColumnDataTypesUpdated = false;\r\n                    each(that._columns, (function(index, column) {\r\n                        var i;\r\n                        var value;\r\n                        var dataType;\r\n                        var lookupDataType;\r\n                        var valueDataType;\r\n                        var lookup = column.lookup;\r\n                        if (gridCoreUtils.isDateType(column.dataType) && void 0 === column.serializationFormat) {\r\n                            column.serializationFormat = dateSerializationFormat\r\n                        }\r\n                        if (lookup && gridCoreUtils.isDateType(lookup.dataType) && void 0 === column.serializationFormat) {\r\n                            lookup.serializationFormat = dateSerializationFormat\r\n                        }\r\n                        if (column.calculateCellValue && firstItems.length) {\r\n                            if (!column.dataType || lookup && !lookup.dataType) {\r\n                                for (i = 0; i < firstItems.length; i++) {\r\n                                    value = column.calculateCellValue(firstItems[i]);\r\n                                    if (!column.dataType) {\r\n                                        valueDataType = getValueDataType(value);\r\n                                        dataType = dataType || valueDataType;\r\n                                        if (dataType && valueDataType && dataType !== valueDataType) {\r\n                                            dataType = \"string\"\r\n                                        }\r\n                                    }\r\n                                    if (lookup && !lookup.dataType) {\r\n                                        valueDataType = getValueDataType(gridCoreUtils.getDisplayValue(column, value, firstItems[i]));\r\n                                        lookupDataType = lookupDataType || valueDataType;\r\n                                        if (lookupDataType && valueDataType && lookupDataType !== valueDataType) {\r\n                                            lookupDataType = \"string\"\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (dataType || lookupDataType) {\r\n                                    if (dataType) {\r\n                                        column.dataType = dataType\r\n                                    }\r\n                                    if (lookup && lookupDataType) {\r\n                                        lookup.dataType = lookupDataType\r\n                                    }\r\n                                    isColumnDataTypesUpdated = true\r\n                                }\r\n                            }\r\n                            if (void 0 === column.serializationFormat || lookup && void 0 === lookup.serializationFormat) {\r\n                                for (i = 0; i < firstItems.length; i++) {\r\n                                    value = column.calculateCellValue(firstItems[i], true);\r\n                                    if (void 0 === column.serializationFormat) {\r\n                                        column.serializationFormat = getSerializationFormat(column.dataType, value)\r\n                                    }\r\n                                    if (lookup && void 0 === lookup.serializationFormat) {\r\n                                        lookup.serializationFormat = getSerializationFormat(lookup.dataType, lookup.calculateCellValue(value, true))\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        that._updateColumnOptions(column, index)\r\n                    }));\r\n                    return isColumnDataTypesUpdated\r\n                },\r\n                _customizeColumns: function(columns) {\r\n                    var customizeColumns = this.option(\"customizeColumns\");\r\n                    if (customizeColumns) {\r\n                        var hasOwnerBand = columns.some((function(column) {\r\n                            return isObject(column.ownerBand)\r\n                        }));\r\n                        if (hasOwnerBand) {\r\n                            updateIndexes(this)\r\n                        }\r\n                        customizeColumns(columns);\r\n                        assignColumns(this, createColumnsFromOptions(this, columns))\r\n                    }\r\n                },\r\n                updateColumns: function(dataSource, forceApplying) {\r\n                    if (!forceApplying) {\r\n                        this.updateSortingGrouping(dataSource)\r\n                    }\r\n                    if (!dataSource || dataSource.isLoaded()) {\r\n                        var sortParameters = dataSource ? dataSource.sort() || [] : this.getSortDataSourceParameters();\r\n                        var groupParameters = dataSource ? dataSource.group() || [] : this.getGroupDataSourceParameters();\r\n                        var filterParameters = null === dataSource || void 0 === dataSource ? void 0 : dataSource.lastLoadOptions().filter;\r\n                        this._customizeColumns(this._columns);\r\n                        updateIndexes(this);\r\n                        var columns = this._columns;\r\n                        return when(this.refresh(true)).always(() => {\r\n                            if (this._columns !== columns) {\r\n                                return\r\n                            }\r\n                            this._updateChanges(dataSource, {\r\n                                sorting: sortParameters,\r\n                                grouping: groupParameters,\r\n                                filtering: filterParameters\r\n                            });\r\n                            fireColumnsChanged(this)\r\n                        })\r\n                    }\r\n                },\r\n                _updateChanges: function(dataSource, parameters) {\r\n                    if (dataSource) {\r\n                        this.updateColumnDataTypes(dataSource);\r\n                        this._dataSourceApplied = true\r\n                    }\r\n                    if (!gridCoreUtils.equalSortParameters(parameters.sorting, this.getSortDataSourceParameters())) {\r\n                        updateColumnChanges(this, \"sorting\")\r\n                    }\r\n                    if (!gridCoreUtils.equalSortParameters(parameters.grouping, this.getGroupDataSourceParameters())) {\r\n                        updateColumnChanges(this, \"grouping\")\r\n                    }\r\n                    var dataController = this.getController(\"data\");\r\n                    if (dataController && !gridCoreUtils.equalFilterParameters(parameters.filtering, dataController.getCombinedFilter())) {\r\n                        updateColumnChanges(this, \"filtering\")\r\n                    }\r\n                    updateColumnChanges(this, \"columns\")\r\n                },\r\n                updateSortingGrouping: function(dataSource, fromDataSource) {\r\n                    var that = this;\r\n                    var sortParameters;\r\n                    var isColumnsChanged;\r\n                    var updateSortGroupParameterIndexes = function(columns, sortParameters, indexParameterName) {\r\n                        each(columns, (function(index, column) {\r\n                            delete column[indexParameterName];\r\n                            if (sortParameters) {\r\n                                for (var i = 0; i < sortParameters.length; i++) {\r\n                                    var selector = sortParameters[i].selector;\r\n                                    var isExpanded = sortParameters[i].isExpanded;\r\n                                    if (selector === column.dataField || selector === column.name || selector === column.selector || selector === column.calculateCellValue || selector === column.calculateGroupValue || selector === column.calculateDisplayValue) {\r\n                                        column.sortOrder = column.sortOrder || (sortParameters[i].desc ? \"desc\" : \"asc\");\r\n                                        if (void 0 !== isExpanded) {\r\n                                            column.autoExpandGroup = isExpanded\r\n                                        }\r\n                                        column[indexParameterName] = i;\r\n                                        break\r\n                                    }\r\n                                }\r\n                            }\r\n                        }))\r\n                    };\r\n                    if (dataSource) {\r\n                        sortParameters = gridCoreUtils.normalizeSortingInfo(dataSource.sort());\r\n                        var groupParameters = gridCoreUtils.normalizeSortingInfo(dataSource.group());\r\n                        var columnsGroupParameters = that.getGroupDataSourceParameters();\r\n                        var columnsSortParameters = that.getSortDataSourceParameters();\r\n                        var groupingChanged = !gridCoreUtils.equalSortParameters(groupParameters, columnsGroupParameters, true);\r\n                        var groupExpandingChanged = !groupingChanged && !gridCoreUtils.equalSortParameters(groupParameters, columnsGroupParameters);\r\n                        if (!that._columns.length) {\r\n                            each(groupParameters, (function(index, group) {\r\n                                that._columns.push(group.selector)\r\n                            }));\r\n                            each(sortParameters, (function(index, sort) {\r\n                                that._columns.push(sort.selector)\r\n                            }));\r\n                            assignColumns(that, createColumnsFromOptions(that, that._columns))\r\n                        }\r\n                        if ((fromDataSource || !columnsGroupParameters && !that._hasUserState) && (groupingChanged || groupExpandingChanged)) {\r\n                            updateSortGroupParameterIndexes(that._columns, groupParameters, \"groupIndex\");\r\n                            if (fromDataSource) {\r\n                                groupingChanged && updateColumnChanges(that, \"grouping\");\r\n                                groupExpandingChanged && updateColumnChanges(that, \"groupExpanding\");\r\n                                isColumnsChanged = true\r\n                            }\r\n                        }\r\n                        if ((fromDataSource || !columnsSortParameters && !that._hasUserState) && !gridCoreUtils.equalSortParameters(sortParameters, columnsSortParameters)) {\r\n                            updateSortGroupParameterIndexes(that._columns, sortParameters, \"sortIndex\");\r\n                            if (fromDataSource) {\r\n                                updateColumnChanges(that, \"sorting\");\r\n                                isColumnsChanged = true\r\n                            }\r\n                        }\r\n                        if (isColumnsChanged) {\r\n                            fireColumnsChanged(that)\r\n                        }\r\n                    }\r\n                },\r\n                updateFilter: function(filter, remoteFiltering, columnIndex, filterValue) {\r\n                    if (!Array.isArray(filter)) {\r\n                        return filter\r\n                    }\r\n                    filter = extend([], filter);\r\n                    columnIndex = void 0 !== filter.columnIndex ? filter.columnIndex : columnIndex;\r\n                    filterValue = void 0 !== filter.filterValue ? filter.filterValue : filterValue;\r\n                    if (isString(filter[0]) && \"!\" !== filter[0]) {\r\n                        var column = this.columnOption(filter[0]);\r\n                        if (remoteFiltering) {\r\n                            if (config().forceIsoDateParsing && column && column.serializeValue && filter.length > 1) {\r\n                                filter[filter.length - 1] = column.serializeValue(filter[filter.length - 1], \"filter\")\r\n                            }\r\n                        } else if (column && column.selector) {\r\n                            filter[0] = column.selector;\r\n                            filter[0].columnIndex = column.index\r\n                        }\r\n                    } else if (isFunction(filter[0])) {\r\n                        filter[0].columnIndex = columnIndex;\r\n                        filter[0].filterValue = filterValue\r\n                    }\r\n                    for (var i = 0; i < filter.length; i++) {\r\n                        filter[i] = this.updateFilter(filter[i], remoteFiltering, columnIndex, filterValue)\r\n                    }\r\n                    return filter\r\n                },\r\n                columnCount: function() {\r\n                    return this._columns ? this._columns.length : 0\r\n                },\r\n                columnOption: function(identifier, option, value, notFireEvent) {\r\n                    var that = this;\r\n                    var columns = that._columns.concat(that._commandColumns);\r\n                    var column = findColumn(columns, identifier);\r\n                    if (column) {\r\n                        if (1 === arguments.length) {\r\n                            return extend({}, column)\r\n                        }\r\n                        if (isString(option)) {\r\n                            if (2 === arguments.length) {\r\n                                return columnOptionCore(that, column, option)\r\n                            } else {\r\n                                columnOptionCore(that, column, option, value, notFireEvent)\r\n                            }\r\n                        } else if (isObject(option)) {\r\n                            each(option, (function(optionName, value) {\r\n                                columnOptionCore(that, column, optionName, value, notFireEvent)\r\n                            }))\r\n                        }\r\n                        fireColumnsChanged(that)\r\n                    }\r\n                },\r\n                clearSorting: function() {\r\n                    var columnCount = this.columnCount();\r\n                    this.beginUpdate();\r\n                    for (var i = 0; i < columnCount; i++) {\r\n                        this.columnOption(i, \"sortOrder\", void 0)\r\n                    }\r\n                    this.endUpdate()\r\n                },\r\n                clearGrouping: function() {\r\n                    var columnCount = this.columnCount();\r\n                    this.beginUpdate();\r\n                    for (var i = 0; i < columnCount; i++) {\r\n                        this.columnOption(i, \"groupIndex\", void 0)\r\n                    }\r\n                    this.endUpdate()\r\n                },\r\n                getVisibleIndex: function(index, rowIndex) {\r\n                    var columns = this.getVisibleColumns(rowIndex);\r\n                    for (var i = columns.length - 1; i >= 0; i--) {\r\n                        if (columns[i].index === index) {\r\n                            return i\r\n                        }\r\n                    }\r\n                    return -1\r\n                },\r\n                getVisibleIndexByColumn: function(column, rowIndex) {\r\n                    var visibleColumns = this.getVisibleColumns(rowIndex);\r\n                    var visibleColumn = visibleColumns.filter(col => col.index === column.index && col.command === column.command)[0];\r\n                    return visibleColumns.indexOf(visibleColumn)\r\n                },\r\n                getVisibleColumnIndex: function(id, rowIndex) {\r\n                    var index = this.columnOption(id, \"index\");\r\n                    return this.getVisibleIndex(index, rowIndex)\r\n                },\r\n                addColumn: function(options) {\r\n                    var column = createColumn(this, options);\r\n                    var index = this._columns.length;\r\n                    this._columns.push(column);\r\n                    if (column.isBand) {\r\n                        this._columns = createColumnsFromOptions(this, this._columns);\r\n                        column = this._columns[index]\r\n                    }\r\n                    column.added = options;\r\n                    updateIndexes(this, column);\r\n                    this.updateColumns(this._dataSource);\r\n                    this._checkColumns()\r\n                },\r\n                deleteColumn: function(id) {\r\n                    var column = this.columnOption(id);\r\n                    if (column && column.index >= 0) {\r\n                        columns = this._columns, void columns.forEach(column => {\r\n                            if (isDefined(column.ownerBand)) {\r\n                                column.ownerBand = columns[column.ownerBand]\r\n                            }\r\n                        });\r\n                        this._columns.splice(column.index, 1);\r\n                        if (column.isBand) {\r\n                            var childIndexes = this.getChildrenByBandColumn(column.index).map(column => column.index);\r\n                            this._columns = this._columns.filter(column => childIndexes.indexOf(column.index) < 0)\r\n                        }\r\n                        updateIndexes(this);\r\n                        this.updateColumns(this._dataSource)\r\n                    }\r\n                    var columns\r\n                },\r\n                addCommandColumn: function(options) {\r\n                    var commandColumn = this._commandColumns.filter(column => column.command === options.command)[0];\r\n                    if (!commandColumn) {\r\n                        commandColumn = options;\r\n                        this._commandColumns.push(commandColumn)\r\n                    }\r\n                },\r\n                getUserState: function() {\r\n                    var columns = this._columns;\r\n                    var result = [];\r\n                    var i;\r\n\r\n                    function handleStateField(index, value) {\r\n                        if (void 0 !== columns[i][value]) {\r\n                            result[i][value] = columns[i][value]\r\n                        }\r\n                    }\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        result[i] = {};\r\n                        each(USER_STATE_FIELD_NAMES, handleStateField)\r\n                    }\r\n                    return result\r\n                },\r\n                setName: function(column) {\r\n                    column.name = column.name || column.dataField || column.type\r\n                },\r\n                setUserState: function(state) {\r\n                    var dataSource = this._dataSource;\r\n                    var ignoreColumnOptionNames = this.option(\"stateStoring.ignoreColumnOptionNames\");\r\n                    null === state || void 0 === state ? void 0 : state.forEach(this.setName);\r\n                    if (!ignoreColumnOptionNames) {\r\n                        ignoreColumnOptionNames = [];\r\n                        var commonColumnSettings = this.getCommonSettings();\r\n                        if (!this.option(\"columnChooser.enabled\")) {\r\n                            ignoreColumnOptionNames.push(\"visible\")\r\n                        }\r\n                        if (\"none\" === this.option(\"sorting.mode\")) {\r\n                            ignoreColumnOptionNames.push(\"sortIndex\", \"sortOrder\")\r\n                        }\r\n                        if (!commonColumnSettings.allowGrouping) {\r\n                            ignoreColumnOptionNames.push(\"groupIndex\")\r\n                        }\r\n                        if (!commonColumnSettings.allowFixing) {\r\n                            ignoreColumnOptionNames.push(\"fixed\", \"fixedPosition\")\r\n                        }\r\n                        if (!commonColumnSettings.allowResizing) {\r\n                            ignoreColumnOptionNames.push(\"width\", \"visibleWidth\")\r\n                        }\r\n                        var isFilterPanelHidden = !this.option(\"filterPanel.visible\");\r\n                        if (!this.option(\"filterRow.visible\") && isFilterPanelHidden) {\r\n                            ignoreColumnOptionNames.push(\"filterValue\", \"selectedFilterOperation\")\r\n                        }\r\n                        if (!this.option(\"headerFilter.visible\") && isFilterPanelHidden) {\r\n                            ignoreColumnOptionNames.push(\"filterValues\", \"filterType\")\r\n                        }\r\n                    }\r\n                    this._columnsUserState = state;\r\n                    this._ignoreColumnOptionNames = ignoreColumnOptionNames;\r\n                    this._hasUserState = !!state;\r\n                    updateColumnChanges(this, \"filtering\");\r\n                    this.init();\r\n                    if (dataSource) {\r\n                        dataSource.sort(this.getSortDataSourceParameters());\r\n                        dataSource.group(this.getGroupDataSourceParameters())\r\n                    }\r\n                },\r\n                _checkColumns: function() {\r\n                    var usedNames = {};\r\n                    var hasEditableColumnWithoutName = false;\r\n                    var duplicatedNames = [];\r\n                    this._columns.forEach(column => {\r\n                        var _column$columns;\r\n                        var name = column.name;\r\n                        var isBand = null === (_column$columns = column.columns) || void 0 === _column$columns ? void 0 : _column$columns.length;\r\n                        var isEditable = column.allowEditing && (column.dataField || column.setCellValue) && !isBand;\r\n                        if (name) {\r\n                            if (usedNames[name]) {\r\n                                duplicatedNames.push('\"'.concat(name, '\"'))\r\n                            }\r\n                            usedNames[name] = true\r\n                        } else if (isEditable) {\r\n                            hasEditableColumnWithoutName = true\r\n                        }\r\n                    });\r\n                    if (duplicatedNames.length) {\r\n                        errors.log(\"E1059\", duplicatedNames.join(\", \"))\r\n                    }\r\n                    if (hasEditableColumnWithoutName) {\r\n                        errors.log(\"E1060\")\r\n                    }\r\n                },\r\n                _createCalculatedColumnOptions: function(columnOptions, bandColumn) {\r\n                    var calculatedColumnOptions = {};\r\n                    var dataField = columnOptions.dataField;\r\n                    if (Array.isArray(columnOptions.columns) && columnOptions.columns.length || columnOptions.isBand) {\r\n                        calculatedColumnOptions.isBand = true;\r\n                        dataField = null\r\n                    }\r\n                    if (dataField) {\r\n                        if (isString(dataField)) {\r\n                            var getter = compileGetter(dataField);\r\n                            calculatedColumnOptions = {\r\n                                caption: captionize(dataField),\r\n                                calculateCellValue: function(data, skipDeserialization) {\r\n                                    var value = getter(data);\r\n                                    return this.deserializeValue && !skipDeserialization ? this.deserializeValue(value) : value\r\n                                },\r\n                                setCellValue: defaultSetCellValue,\r\n                                parseValue: function(text) {\r\n                                    var result;\r\n                                    var parsedValue;\r\n                                    if (\"number\" === this.dataType) {\r\n                                        if (isString(text) && this.format) {\r\n                                            result = function(text, format) {\r\n                                                var parsedValue = numberLocalization.parse(text, format);\r\n                                                if (isNumeric(parsedValue)) {\r\n                                                    var formattedValue = numberLocalization.format(parsedValue, format);\r\n                                                    var formattedValueWithDefaultFormat = numberLocalization.format(parsedValue, \"decimal\");\r\n                                                    if (formattedValue === text || formattedValueWithDefaultFormat === text) {\r\n                                                        return parsedValue\r\n                                                    }\r\n                                                }\r\n                                            }(text.trim(), this.format)\r\n                                        } else if (isDefined(text) && isNumeric(text)) {\r\n                                            result = Number(text)\r\n                                        }\r\n                                    } else if (\"boolean\" === this.dataType) {\r\n                                        if (text === this.trueText) {\r\n                                            result = true\r\n                                        } else if (text === this.falseText) {\r\n                                            result = false\r\n                                        }\r\n                                    } else if (gridCoreUtils.isDateType(this.dataType)) {\r\n                                        parsedValue = dateLocalization.parse(text, this.format);\r\n                                        if (parsedValue) {\r\n                                            result = parsedValue\r\n                                        }\r\n                                    } else {\r\n                                        result = text\r\n                                    }\r\n                                    return result\r\n                                }\r\n                            }\r\n                        }\r\n                        calculatedColumnOptions.allowFiltering = true\r\n                    } else {\r\n                        calculatedColumnOptions.allowFiltering = !!columnOptions.calculateFilterExpression\r\n                    }\r\n                    calculatedColumnOptions.calculateFilterExpression = function() {\r\n                        return filterUtils.defaultCalculateFilterExpression.apply(this, arguments)\r\n                    };\r\n                    calculatedColumnOptions.createFilterExpression = function(filterValue) {\r\n                        var result;\r\n                        if (this.calculateFilterExpression) {\r\n                            result = this.calculateFilterExpression.apply(this, arguments)\r\n                        }\r\n                        if (isFunction(result)) {\r\n                            result = [result, \"=\", true]\r\n                        }\r\n                        if (result) {\r\n                            result.columnIndex = this.index;\r\n                            result.filterValue = filterValue\r\n                        }\r\n                        return result\r\n                    };\r\n                    if (!dataField || !isString(dataField)) {\r\n                        extend(true, calculatedColumnOptions, {\r\n                            allowSorting: false,\r\n                            allowGrouping: false,\r\n                            calculateCellValue: function() {\r\n                                return null\r\n                            }\r\n                        })\r\n                    }\r\n                    if (bandColumn) {\r\n                        calculatedColumnOptions.allowFixing = false\r\n                    }\r\n                    if (columnOptions.dataType) {\r\n                        calculatedColumnOptions.userDataType = columnOptions.dataType\r\n                    }\r\n                    if (columnOptions.selectedFilterOperation && !(\"defaultSelectedFilterOperation\" in calculatedColumnOptions)) {\r\n                        calculatedColumnOptions.defaultSelectedFilterOperation = columnOptions.selectedFilterOperation\r\n                    }\r\n                    if (columnOptions.lookup) {\r\n                        calculatedColumnOptions.lookup = {\r\n                            calculateCellValue: function(value, skipDeserialization) {\r\n                                if (this.valueExpr) {\r\n                                    value = this.valueMap && this.valueMap[value]\r\n                                }\r\n                                return this.deserializeValue && !skipDeserialization ? this.deserializeValue(value) : value\r\n                            },\r\n                            updateValueMap: function() {\r\n                                this.valueMap = {};\r\n                                if (this.items) {\r\n                                    var calculateValue = compileGetter(this.valueExpr);\r\n                                    var calculateDisplayValue = compileGetter(this.displayExpr);\r\n                                    for (var i = 0; i < this.items.length; i++) {\r\n                                        var item = this.items[i];\r\n                                        var displayValue = calculateDisplayValue(item);\r\n                                        this.valueMap[calculateValue(item)] = displayValue;\r\n                                        this.dataType = this.dataType || getValueDataType(displayValue)\r\n                                    }\r\n                                }\r\n                            },\r\n                            update: function() {\r\n                                var that = this;\r\n                                var dataSource = that.dataSource;\r\n                                if (dataSource) {\r\n                                    if (isFunction(dataSource) && !variableWrapper.isWrapped(dataSource)) {\r\n                                        dataSource = dataSource({})\r\n                                    }\r\n                                    if (isPlainObject(dataSource) || dataSource instanceof Store || Array.isArray(dataSource)) {\r\n                                        if (that.valueExpr) {\r\n                                            var dataSourceOptions = normalizeDataSourceOptions(dataSource);\r\n                                            dataSourceOptions.paginate = false;\r\n                                            dataSource = new DataSource(dataSourceOptions);\r\n                                            return dataSource.load().done((function(data) {\r\n                                                that.items = data;\r\n                                                that.updateValueMap && that.updateValueMap()\r\n                                            }))\r\n                                        }\r\n                                    } else {\r\n                                        errors.log(\"E1016\")\r\n                                    }\r\n                                } else {\r\n                                    that.updateValueMap && that.updateValueMap()\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    calculatedColumnOptions.resizedCallbacks = Callbacks();\r\n                    if (columnOptions.resized) {\r\n                        calculatedColumnOptions.resizedCallbacks.add(columnOptions.resized.bind(columnOptions))\r\n                    }\r\n                    each(calculatedColumnOptions, (function(optionName) {\r\n                        if (isFunction(calculatedColumnOptions[optionName]) && 0 !== optionName.indexOf(\"default\")) {\r\n                            var defaultOptionName = \"default\" + optionName.charAt(0).toUpperCase() + optionName.substr(1);\r\n                            calculatedColumnOptions[defaultOptionName] = calculatedColumnOptions[optionName]\r\n                        }\r\n                    }));\r\n                    return calculatedColumnOptions\r\n                },\r\n                getRowCount: function() {\r\n                    this._rowCount = this._rowCount || function(that) {\r\n                        var rowCount = 1;\r\n                        var bandColumnsCache = that.getBandColumnsCache();\r\n                        var columnParentByIndex = bandColumnsCache.columnParentByIndex;\r\n                        that._columns.forEach((function(column) {\r\n                            var parents = getParentBandColumns(column.index, columnParentByIndex);\r\n                            var invisibleParents = parents.filter((function(column) {\r\n                                return !column.visible\r\n                            }));\r\n                            if (column.visible && !invisibleParents.length) {\r\n                                rowCount = Math.max(rowCount, parents.length + 1)\r\n                            }\r\n                        }));\r\n                        return rowCount\r\n                    }(this);\r\n                    return this._rowCount\r\n                },\r\n                getRowIndex: function(columnIndex, alwaysGetRowIndex) {\r\n                    var column = this._columns[columnIndex];\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    return column && (alwaysGetRowIndex || column.visible && !(column.command || isDefined(column.groupIndex))) ? getParentBandColumns(columnIndex, bandColumnsCache.columnParentByIndex).length : 0\r\n                },\r\n                getChildrenByBandColumn: function(bandColumnIndex, onlyVisibleDirectChildren) {\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    var result = _getChildrenByBandColumn(bandColumnIndex, bandColumnsCache.columnChildrenByIndex, !onlyVisibleDirectChildren);\r\n                    if (onlyVisibleDirectChildren) {\r\n                        return result.filter((function(column) {\r\n                            return column.visible && !column.command\r\n                        })).sort((function(column1, column2) {\r\n                            return column1.visibleIndex - column2.visibleIndex\r\n                        }))\r\n                    }\r\n                    return result\r\n                },\r\n                isParentBandColumn: function(columnIndex, bandColumnIndex) {\r\n                    var result = false;\r\n                    var column = this._columns[columnIndex];\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    var parentBandColumns = column && getParentBandColumns(columnIndex, bandColumnsCache.columnParentByIndex);\r\n                    if (parentBandColumns) {\r\n                        each(parentBandColumns, (function(_, bandColumn) {\r\n                            if (bandColumn.index === bandColumnIndex) {\r\n                                result = true;\r\n                                return false\r\n                            }\r\n                        }))\r\n                    }\r\n                    return result\r\n                },\r\n                isParentColumnVisible: function(columnIndex) {\r\n                    var result = true;\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    var bandColumns = columnIndex >= 0 && getParentBandColumns(columnIndex, bandColumnsCache.columnParentByIndex);\r\n                    bandColumns && each(bandColumns, (function(_, bandColumn) {\r\n                        result = result && bandColumn.visible;\r\n                        return result\r\n                    }));\r\n                    return result\r\n                },\r\n                getColumnId: function(column) {\r\n                    if (column.command && column.type === GROUP_COMMAND_COLUMN_NAME) {\r\n                        if (isCustomCommandColumn(this, column)) {\r\n                            return \"type:\" + column.type\r\n                        }\r\n                        return \"command:\" + column.command\r\n                    }\r\n                    return column.index\r\n                },\r\n                getCustomizeTextByDataType: getCustomizeTextByDataType,\r\n                getHeaderContentAlignment: function(columnAlignment) {\r\n                    var rtlEnabled = this.option(\"rtlEnabled\");\r\n                    if (rtlEnabled) {\r\n                        return \"left\" === columnAlignment ? \"right\" : \"left\"\r\n                    }\r\n                    return columnAlignment\r\n                }\r\n            }\r\n        }())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.columns_controller.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnsControllerModule\r\n} from \"../grid_core/ui.grid_core.columns_controller\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\ngridCore.registerModule(\"columns\", {\r\n    defaultOptions: function() {\r\n        return extend(true, {}, columnsControllerModule.defaultOptions(), {\r\n            commonColumnSettings: {\r\n                allowExporting: true\r\n            }\r\n        })\r\n    },\r\n    controllers: columnsControllerModule.controllers\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.data_source_adapter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport gridCore from \"../data_grid/ui.data_grid.core\";\r\nimport {\r\n    executeAsync,\r\n    getKeyHash\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport ArrayStore from \"../../data/array_store\";\r\nimport {\r\n    applyBatch\r\n} from \"../../data/array_utils\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nexport default gridCore.Controller.inherit(function() {\r\n    function cloneItems(items, groupCount) {\r\n        if (items) {\r\n            items = items.slice(0);\r\n            if (groupCount) {\r\n                for (var i = 0; i < items.length; i++) {\r\n                    items[i] = extend({\r\n                        key: items[i].key\r\n                    }, items[i]);\r\n                    items[i].items = cloneItems(items[i].items, groupCount - 1)\r\n                }\r\n            }\r\n        }\r\n        return items\r\n    }\r\n\r\n    function calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload) {\r\n        var operationTypes = {\r\n            reload: true,\r\n            fullReload: true\r\n        };\r\n        if (lastLoadOptions) {\r\n            operationTypes = {\r\n                sorting: !gridCore.equalSortParameters(loadOptions.sort, lastLoadOptions.sort),\r\n                grouping: !gridCore.equalSortParameters(loadOptions.group, lastLoadOptions.group, true),\r\n                groupExpanding: !gridCore.equalSortParameters(loadOptions.group, lastLoadOptions.group) || lastLoadOptions.groupExpand,\r\n                filtering: !gridCore.equalFilterParameters(loadOptions.filter, lastLoadOptions.filter),\r\n                pageIndex: loadOptions.pageIndex !== lastLoadOptions.pageIndex,\r\n                skip: loadOptions.skip !== lastLoadOptions.skip,\r\n                take: loadOptions.take !== lastLoadOptions.take,\r\n                pageSize: loadOptions.pageSize !== lastLoadOptions.pageSize,\r\n                fullReload: isFullReload\r\n            };\r\n            operationTypes.reload = isFullReload || operationTypes.sorting || operationTypes.grouping || operationTypes.filtering;\r\n            operationTypes.paging = operationTypes.pageIndex || operationTypes.pageSize || operationTypes.take\r\n        }\r\n        return operationTypes\r\n    }\r\n\r\n    function getPageDataFromCache(options, updatePaging) {\r\n        var groupCount = gridCore.normalizeSortingInfo(options.group || options.storeLoadOptions.group || options.loadOptions.group).length;\r\n        var items = [];\r\n        if (fillItemsFromCache(items, options, groupCount)) {\r\n            return items\r\n        } else if (updatePaging) {\r\n            ! function(cacheItemsFromBegin, options, groupCount) {\r\n                var cacheItemBeginCount = cacheItemsFromBegin.length;\r\n                var {\r\n                    storeLoadOptions: storeLoadOptions\r\n                } = options;\r\n                if (void 0 !== storeLoadOptions.skip && storeLoadOptions.take && !groupCount) {\r\n                    var cacheItemsFromEnd = [];\r\n                    fillItemsFromCache(cacheItemsFromEnd, options, groupCount, true);\r\n                    var cacheItemEndCount = cacheItemsFromEnd.length;\r\n                    if (cacheItemBeginCount || cacheItemEndCount) {\r\n                        var _options$skip2, _options$take2;\r\n                        options.skip = null !== (_options$skip2 = options.skip) && void 0 !== _options$skip2 ? _options$skip2 : storeLoadOptions.skip;\r\n                        options.take = null !== (_options$take2 = options.take) && void 0 !== _options$take2 ? _options$take2 : storeLoadOptions.take\r\n                    }\r\n                    if (cacheItemBeginCount) {\r\n                        storeLoadOptions.skip += cacheItemBeginCount;\r\n                        storeLoadOptions.take -= cacheItemBeginCount;\r\n                        options.cachedDataPartBegin = cacheItemsFromBegin\r\n                    }\r\n                    if (cacheItemEndCount) {\r\n                        storeLoadOptions.take -= cacheItemEndCount;\r\n                        options.cachedDataPartEnd = cacheItemsFromEnd.reverse()\r\n                    }\r\n                }\r\n            }(items, options, groupCount)\r\n        }\r\n    }\r\n\r\n    function fillItemsFromCache(items, options, groupCount, fromEnd) {\r\n        var _ref, _options$take, _options$cachedData;\r\n        var {\r\n            storeLoadOptions: storeLoadOptions\r\n        } = options;\r\n        var take = null !== (_ref = null !== (_options$take = options.take) && void 0 !== _options$take ? _options$take : storeLoadOptions.take) && void 0 !== _ref ? _ref : 0;\r\n        var cachedItems = null === (_options$cachedData = options.cachedData) || void 0 === _options$cachedData ? void 0 : _options$cachedData.items;\r\n        if (take && cachedItems) {\r\n            var _ref2, _options$skip;\r\n            var skip = null !== (_ref2 = null !== (_options$skip = options.skip) && void 0 !== _options$skip ? _options$skip : storeLoadOptions.skip) && void 0 !== _ref2 ? _ref2 : 0;\r\n            for (var i = 0; i < take; i++) {\r\n                var localIndex = fromEnd ? take - 1 - i : i;\r\n                var cacheItemIndex = localIndex + skip;\r\n                var cacheItem = cachedItems[cacheItemIndex];\r\n                if (void 0 === cacheItem && cacheItemIndex in cachedItems) {\r\n                    return true\r\n                }\r\n                var item = getItemFromCache(options, cacheItem, groupCount, localIndex, take);\r\n                if (item) {\r\n                    items.push(item)\r\n                } else {\r\n                    return false\r\n                }\r\n            }\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    function getItemFromCache(options, cacheItem, groupCount, index, take) {\r\n        if (groupCount && cacheItem) {\r\n            var skips = 0 === index && options.skips || [];\r\n            var takes = index === take - 1 && options.takes || [];\r\n            return function getGroupItemFromCache(cacheItem, groupCount, skips, takes) {\r\n                if (groupCount && cacheItem) {\r\n                    var result = _extends({}, cacheItem);\r\n                    var skip = skips[0] || 0;\r\n                    var take = takes[0];\r\n                    var items = cacheItem.items;\r\n                    if (items) {\r\n                        if (void 0 === take && !items[skip]) {\r\n                            return\r\n                        }\r\n                        result.items = [];\r\n                        if (skips.length) {\r\n                            result.isContinuation = true\r\n                        }\r\n                        if (takes.length) {\r\n                            result.isContinuationOnNextPage = true\r\n                        }\r\n                        for (var i = 0; void 0 === take ? items[i + skip] : i < take; i++) {\r\n                            var childCacheItem = items[i + skip];\r\n                            var item = getGroupItemFromCache(childCacheItem, groupCount - 1, skips.slice(1), takes.slice(1));\r\n                            if (void 0 !== item) {\r\n                                result.items.push(item)\r\n                            } else {\r\n                                return\r\n                            }\r\n                        }\r\n                    }\r\n                    return result\r\n                }\r\n                return cacheItem\r\n            }(cacheItem, groupCount, skips, takes)\r\n        } else {\r\n            return cacheItem\r\n        }\r\n    }\r\n\r\n    function getCacheItem(cacheItem, loadedItem, groupCount, skips) {\r\n        if (groupCount && loadedItem) {\r\n            var result = _extends({}, loadedItem);\r\n            delete result.isContinuation;\r\n            delete result.isContinuationOnNextPage;\r\n            var skip = skips[0] || 0;\r\n            if (loadedItem.items) {\r\n                result.items = (null === cacheItem || void 0 === cacheItem ? void 0 : cacheItem.items) || {};\r\n                loadedItem.items.forEach((item, index) => {\r\n                    var globalIndex = index + skip;\r\n                    var childSkips = 0 === index ? skips.slice(1) : [];\r\n                    result.items[globalIndex] = getCacheItem(result.items[globalIndex], item, groupCount - 1, childSkips)\r\n                })\r\n            }\r\n            return result\r\n        }\r\n        return loadedItem\r\n    }\r\n    return {\r\n        init: function(dataSource, remoteOperations) {\r\n            var that = this;\r\n            that._dataSource = dataSource;\r\n            that._remoteOperations = remoteOperations || {};\r\n            that._isLastPage = !dataSource.isLastPage();\r\n            that._hasLastPage = false;\r\n            that._currentTotalCount = 0;\r\n            that._cachedData = {\r\n                items: {}\r\n            };\r\n            that._lastOperationTypes = {};\r\n            that._eventsStrategy = dataSource._eventsStrategy;\r\n            that._totalCountCorrection = 0;\r\n            that._isLoadingAll = false;\r\n            that.changed = Callbacks();\r\n            that.loadingChanged = Callbacks();\r\n            that.loadError = Callbacks();\r\n            that.customizeStoreLoadOptions = Callbacks();\r\n            that.changing = Callbacks();\r\n            that.pushed = Callbacks();\r\n            that._dataChangedHandler = that._handleDataChanged.bind(that);\r\n            that._customizeStoreLoadOptionsHandler = that._handleCustomizeStoreLoadOptions.bind(that);\r\n            that._dataLoadedHandler = that._handleDataLoaded.bind(that);\r\n            that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\r\n            that._loadErrorHandler = that._handleLoadError.bind(that);\r\n            that._pushHandler = that._handlePush.bind(that);\r\n            that._changingHandler = that._handleChanging.bind(that);\r\n            dataSource.on(\"changed\", that._dataChangedHandler);\r\n            dataSource.on(\"customizeStoreLoadOptions\", that._customizeStoreLoadOptionsHandler);\r\n            dataSource.on(\"customizeLoadResult\", that._dataLoadedHandler);\r\n            dataSource.on(\"loadingChanged\", that._loadingChangedHandler);\r\n            dataSource.on(\"loadError\", that._loadErrorHandler);\r\n            dataSource.on(\"changing\", that._changingHandler);\r\n            dataSource.store().on(\"beforePush\", that._pushHandler);\r\n            each(dataSource, (function(memberName, member) {\r\n                if (!that[memberName] && isFunction(member)) {\r\n                    that[memberName] = function() {\r\n                        return this._dataSource[memberName].apply(this._dataSource, arguments)\r\n                    }\r\n                }\r\n            }))\r\n        },\r\n        remoteOperations: function() {\r\n            return this._remoteOperations\r\n        },\r\n        dispose: function(isSharedDataSource) {\r\n            var dataSource = this._dataSource;\r\n            var store = dataSource.store();\r\n            dataSource.off(\"changed\", this._dataChangedHandler);\r\n            dataSource.off(\"customizeStoreLoadOptions\", this._customizeStoreLoadOptionsHandler);\r\n            dataSource.off(\"customizeLoadResult\", this._dataLoadedHandler);\r\n            dataSource.off(\"loadingChanged\", this._loadingChangedHandler);\r\n            dataSource.off(\"loadError\", this._loadErrorHandler);\r\n            dataSource.off(\"changing\", this._changingHandler);\r\n            store && store.off(\"beforePush\", this._pushHandler);\r\n            if (!isSharedDataSource) {\r\n                dataSource.dispose()\r\n            }\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            var dataSource = this._dataSource;\r\n            if (operationTypes.reload) {\r\n                this.resetCurrentTotalCount();\r\n                this._isLastPage = !dataSource.paginate();\r\n                this._hasLastPage = this._isLastPage\r\n            }\r\n        },\r\n        resetCurrentTotalCount: function() {\r\n            this._currentTotalCount = 0;\r\n            this._totalCountCorrection = 0\r\n        },\r\n        resetCache: function() {\r\n            this._cachedStoreData = void 0;\r\n            this._cachedPagingData = void 0\r\n        },\r\n        resetPagesCache: function() {\r\n            this._cachedData = {\r\n                items: {}\r\n            }\r\n        },\r\n        _needClearStoreDataCache: function() {\r\n            var remoteOperations = this.remoteOperations();\r\n            var operationTypes = calculateOperationTypes(this._lastLoadOptions || {}, {});\r\n            var isLocalOperations = Object.keys(remoteOperations).every(operationName => !operationTypes[operationName] || !remoteOperations[operationName]);\r\n            return !isLocalOperations\r\n        },\r\n        push: function(changes, fromStore) {\r\n            var store = this.store();\r\n            if (this._needClearStoreDataCache()) {\r\n                this._cachedStoreData = void 0\r\n            }\r\n            this._cachedPagingData = void 0;\r\n            this.resetPagesCache(true);\r\n            if (this._cachedStoreData) {\r\n                applyBatch({\r\n                    keyInfo: store,\r\n                    data: this._cachedStoreData,\r\n                    changes: changes\r\n                })\r\n            }\r\n            if (!fromStore) {\r\n                this._applyBatch(changes)\r\n            }\r\n            this.pushed.fire(changes)\r\n        },\r\n        getDataIndexGetter: function() {\r\n            if (!this._dataIndexGetter) {\r\n                var indexByKey;\r\n                var storeData;\r\n                var store = this.store();\r\n                this._dataIndexGetter = data => {\r\n                    var isCacheUpdated = storeData && storeData !== this._cachedStoreData;\r\n                    if (!indexByKey || isCacheUpdated) {\r\n                        storeData = this._cachedStoreData || [];\r\n                        indexByKey = {};\r\n                        for (var i = 0; i < storeData.length; i++) {\r\n                            indexByKey[getKeyHash(store.keyOf(storeData[i]))] = i\r\n                        }\r\n                    }\r\n                    return indexByKey[getKeyHash(store.keyOf(data))]\r\n                }\r\n            }\r\n            return this._dataIndexGetter\r\n        },\r\n        _getKeyInfo: function() {\r\n            return this.store()\r\n        },\r\n        _applyBatch: function(changes) {\r\n            var keyInfo = this._getKeyInfo();\r\n            var dataSource = this._dataSource;\r\n            var groupCount = gridCore.normalizeSortingInfo(this.group()).length;\r\n            var totalCount = this.totalCount();\r\n            var isVirtualMode = \"virtual\" === this.option(\"scrolling.mode\");\r\n            changes = changes.filter((function(change) {\r\n                return !dataSource.paginate() || \"insert\" !== change.type || void 0 !== change.index\r\n            }));\r\n            var getItemCount = () => groupCount ? this.itemsCount() : this.items().length;\r\n            var oldItemCount = getItemCount();\r\n            applyBatch({\r\n                keyInfo: keyInfo,\r\n                data: this._items,\r\n                changes: changes,\r\n                groupCount: groupCount,\r\n                useInsertIndex: true\r\n            });\r\n            applyBatch({\r\n                keyInfo: keyInfo,\r\n                data: dataSource.items(),\r\n                changes: changes,\r\n                groupCount: groupCount,\r\n                useInsertIndex: true\r\n            });\r\n            if (this._currentTotalCount > 0 || isVirtualMode && totalCount === oldItemCount) {\r\n                this._totalCountCorrection += getItemCount() - oldItemCount\r\n            }\r\n            changes.splice(0, changes.length)\r\n        },\r\n        _handlePush: function(_ref5) {\r\n            var {\r\n                changes: changes\r\n            } = _ref5;\r\n            this.push(changes, true)\r\n        },\r\n        _handleChanging: function(e) {\r\n            this.changing.fire(e);\r\n            this._applyBatch(e.changes)\r\n        },\r\n        _needCleanCacheByOperation: function(operationType, remoteOperations) {\r\n            var operationTypesByOrder = [\"filtering\", \"sorting\", \"paging\"];\r\n            var operationTypeIndex = operationTypesByOrder.indexOf(operationType);\r\n            var currentOperationTypes = operationTypeIndex >= 0 ? operationTypesByOrder.slice(operationTypeIndex) : [operationType];\r\n            return currentOperationTypes.some(operationType => remoteOperations[operationType])\r\n        },\r\n        _customizeRemoteOperations: function(options, operationTypes) {\r\n            var cachedStoreData = this._cachedStoreData;\r\n            var cachedPagingData = this._cachedPagingData;\r\n            var cachedData = this._cachedData;\r\n            if (options.storeLoadOptions.filter && !options.remoteOperations.filtering || options.storeLoadOptions.sort && !options.remoteOperations.sorting) {\r\n                options.remoteOperations = {\r\n                    filtering: options.remoteOperations.filtering\r\n                }\r\n            }\r\n            if (operationTypes.fullReload) {\r\n                cachedStoreData = void 0;\r\n                cachedPagingData = void 0;\r\n                cachedData = {\r\n                    items: {}\r\n                }\r\n            } else {\r\n                if (operationTypes.reload) {\r\n                    cachedPagingData = void 0;\r\n                    cachedData = {\r\n                        items: {}\r\n                    }\r\n                } else if (operationTypes.groupExpanding) {\r\n                    cachedData = {\r\n                        items: {}\r\n                    }\r\n                }\r\n                each(operationTypes, (operationType, value) => {\r\n                    if (value && this._needCleanCacheByOperation(operationType, options.remoteOperations)) {\r\n                        cachedStoreData = void 0;\r\n                        cachedPagingData = void 0\r\n                    }\r\n                })\r\n            }\r\n            if (cachedPagingData) {\r\n                options.remoteOperations.paging = false\r\n            }\r\n            options.cachedStoreData = cachedStoreData;\r\n            options.cachedPagingData = cachedPagingData;\r\n            options.cachedData = cachedData;\r\n            if (!options.isCustomLoading) {\r\n                this._cachedStoreData = cachedStoreData;\r\n                this._cachedPagingData = cachedPagingData;\r\n                this._cachedData = cachedData\r\n            }\r\n        },\r\n        _handleCustomizeStoreLoadOptions(options) {\r\n            var _options$data;\r\n            this._handleDataLoading(options);\r\n            if (!(0 === (null === (_options$data = options.data) || void 0 === _options$data ? void 0 : _options$data.length))) {\r\n                options.data = getPageDataFromCache(options, true) || options.cachedStoreData\r\n            }\r\n        },\r\n        _handleDataLoading: function(options) {\r\n            var dataSource = this._dataSource;\r\n            var lastLoadOptions = this._lastLoadOptions;\r\n            this.customizeStoreLoadOptions.fire(options);\r\n            options.delay = this.option(\"loadingTimeout\");\r\n            options.originalStoreLoadOptions = options.storeLoadOptions;\r\n            options.remoteOperations = extend({}, this.remoteOperations());\r\n            var isFullReload = !this.isLoaded() && !this._isRefreshing;\r\n            if (this.option(\"integrationOptions.renderedOnServer\") && !this.isLoaded()) {\r\n                options.delay = void 0\r\n            }\r\n            var loadOptions = extend({\r\n                pageIndex: this.pageIndex(),\r\n                pageSize: this.pageSize()\r\n            }, options.storeLoadOptions);\r\n            var operationTypes = calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload);\r\n            this._customizeRemoteOperations(options, operationTypes);\r\n            if (!options.isCustomLoading) {\r\n                var isRefreshing = this._isRefreshing;\r\n                options.pageIndex = dataSource.pageIndex();\r\n                options.lastLoadOptions = loadOptions;\r\n                options.operationTypes = operationTypes;\r\n                this._loadingOperationTypes = operationTypes;\r\n                this._isRefreshing = true;\r\n                when(isRefreshing || this._isRefreshed || this.refresh(options, operationTypes)).done(() => {\r\n                    if (this._lastOperationId === options.operationId) {\r\n                        this._isRefreshed = true;\r\n                        this.load().always(() => {\r\n                            this._isRefreshed = false\r\n                        })\r\n                    }\r\n                }).fail(() => {\r\n                    dataSource.cancel(options.operationId)\r\n                }).always(() => {\r\n                    this._isRefreshing = false\r\n                });\r\n                dataSource.cancel(this._lastOperationId);\r\n                this._lastOperationId = options.operationId;\r\n                if (this._isRefreshing) {\r\n                    dataSource.cancel(this._lastOperationId)\r\n                }\r\n            }\r\n            this._handleDataLoadingCore(options)\r\n        },\r\n        _handleDataLoadingCore: function(options) {\r\n            var remoteOperations = options.remoteOperations;\r\n            options.loadOptions = {};\r\n            var cachedExtra = options.cachedData.extra;\r\n            var localLoadOptionNames = {\r\n                filter: !remoteOperations.filtering,\r\n                sort: !remoteOperations.sorting,\r\n                group: !remoteOperations.grouping,\r\n                summary: !remoteOperations.summary,\r\n                skip: !remoteOperations.paging,\r\n                take: !remoteOperations.paging,\r\n                requireTotalCount: cachedExtra && \"totalCount\" in cachedExtra || !remoteOperations.paging\r\n            };\r\n            each(options.storeLoadOptions, (function(optionName, optionValue) {\r\n                if (localLoadOptionNames[optionName]) {\r\n                    options.loadOptions[optionName] = optionValue;\r\n                    delete options.storeLoadOptions[optionName]\r\n                }\r\n            }));\r\n            if (cachedExtra) {\r\n                options.extra = cachedExtra\r\n            }\r\n        },\r\n        _handleDataLoaded: function(options) {\r\n            var loadOptions = options.loadOptions;\r\n            var localPaging = options.remoteOperations && !options.remoteOperations.paging;\r\n            var cachedData = options.cachedData;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var needCache = false !== this.option(\"cacheEnabled\") && storeLoadOptions;\r\n            var needPageCache = needCache && !options.isCustomLoading && cachedData && (!localPaging || storeLoadOptions.group);\r\n            var needPagingCache = needCache && localPaging;\r\n            var needStoreCache = needPagingCache && !options.isCustomLoading;\r\n            if (!loadOptions) {\r\n                this._dataSource.cancel(options.operationId);\r\n                return\r\n            }\r\n            if (localPaging) {\r\n                options.skip = loadOptions.skip;\r\n                options.take = loadOptions.take;\r\n                delete loadOptions.skip;\r\n                delete loadOptions.take\r\n            }\r\n            if (loadOptions.group) {\r\n                loadOptions.group = options.group || loadOptions.group\r\n            }\r\n            var groupCount = gridCore.normalizeSortingInfo(options.group || storeLoadOptions.group || loadOptions.group).length;\r\n            if (options.cachedDataPartBegin) {\r\n                options.data = options.cachedDataPartBegin.concat(options.data)\r\n            }\r\n            if (options.cachedDataPartEnd) {\r\n                options.data = options.data.concat(options.cachedDataPartEnd)\r\n            }\r\n            if (!needPageCache || !getPageDataFromCache(options)) {\r\n                if (needPagingCache && options.cachedPagingData) {\r\n                    options.data = cloneItems(options.cachedPagingData, groupCount)\r\n                } else {\r\n                    if (needStoreCache) {\r\n                        if (!this._cachedStoreData) {\r\n                            this._cachedStoreData = cloneItems(options.data, gridCore.normalizeSortingInfo(storeLoadOptions.group).length)\r\n                        } else if (options.mergeStoreLoadData) {\r\n                            options.data = this._cachedStoreData = this._cachedStoreData.concat(options.data)\r\n                        }\r\n                    }\r\n                    new ArrayStore(options.data).load(loadOptions).done(data => {\r\n                        options.data = data;\r\n                        if (needStoreCache) {\r\n                            this._cachedPagingData = cloneItems(options.data, groupCount)\r\n                        }\r\n                    }).fail(error => {\r\n                        options.data = (new Deferred).reject(error)\r\n                    })\r\n                }\r\n                if (loadOptions.requireTotalCount && localPaging) {\r\n                    options.extra = isPlainObject(options.extra) ? options.extra : {};\r\n                    options.extra.totalCount = options.data.length\r\n                }\r\n                if (options.extra && options.extra.totalCount >= 0 && (false === storeLoadOptions.requireTotalCount || false === loadOptions.requireTotalCount)) {\r\n                    options.extra.totalCount = -1\r\n                }\r\n                this._handleDataLoadedCore(options);\r\n                if (needPageCache) {\r\n                    cachedData.extra = cachedData.extra || extend({}, options.extra);\r\n                    when(options.data).done(data => {\r\n                        ! function(options, data, groupCount) {\r\n                            var _ref3, _options$skip3, _ref4, _options$take3;\r\n                            var {\r\n                                storeLoadOptions: storeLoadOptions\r\n                            } = options;\r\n                            var skip = null !== (_ref3 = null !== (_options$skip3 = options.skip) && void 0 !== _options$skip3 ? _options$skip3 : storeLoadOptions.skip) && void 0 !== _ref3 ? _ref3 : 0;\r\n                            var take = null !== (_ref4 = null !== (_options$take3 = options.take) && void 0 !== _options$take3 ? _options$take3 : storeLoadOptions.take) && void 0 !== _ref4 ? _ref4 : 0;\r\n                            for (var i = 0; i < take; i++) {\r\n                                var globalIndex = i + skip;\r\n                                var cacheItems = options.cachedData.items;\r\n                                var skips = 0 === i && options.skips || [];\r\n                                cacheItems[globalIndex] = getCacheItem(cacheItems[globalIndex], data[i], groupCount, skips)\r\n                            }\r\n                        }(options, data, groupCount)\r\n                    })\r\n                }\r\n            }\r\n            when(options.data).done(() => {\r\n                if (options.lastLoadOptions) {\r\n                    this._lastLoadOptions = options.lastLoadOptions;\r\n                    Object.keys(options.operationTypes).forEach(operationType => {\r\n                        this._lastOperationTypes[operationType] = this._lastOperationTypes[operationType] || options.operationTypes[operationType]\r\n                    })\r\n                }\r\n            });\r\n            options.storeLoadOptions = options.originalStoreLoadOptions\r\n        },\r\n        _handleDataLoadedCore: function(options) {\r\n            if (options.remoteOperations && !options.remoteOperations.paging && Array.isArray(options.data)) {\r\n                if (void 0 !== options.skip) {\r\n                    options.data = options.data.slice(options.skip)\r\n                }\r\n                if (void 0 !== options.take) {\r\n                    options.data = options.data.slice(0, options.take)\r\n                }\r\n            }\r\n        },\r\n        _handleLoadingChanged: function(isLoading) {\r\n            this.loadingChanged.fire(isLoading)\r\n        },\r\n        _handleLoadError: function(error) {\r\n            this.loadError.fire(error);\r\n            this.changed.fire({\r\n                changeType: \"loadError\",\r\n                error: error\r\n            })\r\n        },\r\n        _loadPageSize: function() {\r\n            return this.pageSize()\r\n        },\r\n        _handleDataChanged: function(args) {\r\n            var currentTotalCount;\r\n            var dataSource = this._dataSource;\r\n            var isLoading = false;\r\n            var isDataLoading = !args || isDefined(args.changeType);\r\n            var itemsCount = this.itemsCount();\r\n            if (isDataLoading) {\r\n                this._isLastPage = !itemsCount || !this._loadPageSize() || itemsCount < this._loadPageSize();\r\n                if (this._isLastPage) {\r\n                    this._hasLastPage = true\r\n                }\r\n            }\r\n            if (dataSource.totalCount() >= 0) {\r\n                if (dataSource.pageIndex() >= this.pageCount()) {\r\n                    dataSource.pageIndex(this.pageCount() - 1);\r\n                    this.pageIndex(dataSource.pageIndex());\r\n                    this.resetPagesCache();\r\n                    dataSource.load();\r\n                    isLoading = true\r\n                }\r\n            } else if (isDataLoading) {\r\n                currentTotalCount = dataSource.pageIndex() * this.pageSize() + itemsCount;\r\n                if (currentTotalCount > this._currentTotalCount) {\r\n                    this._currentTotalCount = currentTotalCount;\r\n                    if (0 === dataSource.pageIndex() || !this.option(\"scrolling.legacyMode\")) {\r\n                        this._totalCountCorrection = 0\r\n                    }\r\n                }\r\n                if (0 === itemsCount && dataSource.pageIndex() >= this.pageCount()) {\r\n                    dataSource.pageIndex(this.pageCount() - 1);\r\n                    if (\"infinite\" !== this.option(\"scrolling.mode\")) {\r\n                        dataSource.load();\r\n                        isLoading = true\r\n                    }\r\n                }\r\n            }\r\n            if (!isLoading) {\r\n                this._operationTypes = this._lastOperationTypes;\r\n                this._lastOperationTypes = {};\r\n                this.component._optionCache = {};\r\n                this.changed.fire(args);\r\n                this.component._optionCache = void 0\r\n            }\r\n        },\r\n        _scheduleCustomLoadCallbacks: function(deferred) {\r\n            var that = this;\r\n            that._isCustomLoading = true;\r\n            deferred.always((function() {\r\n                that._isCustomLoading = false\r\n            }))\r\n        },\r\n        loadingOperationTypes: function() {\r\n            return this._loadingOperationTypes\r\n        },\r\n        operationTypes: function() {\r\n            return this._operationTypes\r\n        },\r\n        lastLoadOptions: function() {\r\n            return this._lastLoadOptions || {}\r\n        },\r\n        isLastPage: function() {\r\n            return this._isLastPage\r\n        },\r\n        totalCount: function() {\r\n            return parseInt((this._currentTotalCount || this._dataSource.totalCount()) + this._totalCountCorrection)\r\n        },\r\n        totalCountCorrection: function() {\r\n            return this._totalCountCorrection\r\n        },\r\n        itemsCount: function() {\r\n            return this._dataSource.items().length\r\n        },\r\n        totalItemsCount: function() {\r\n            return this.totalCount()\r\n        },\r\n        pageSize: function() {\r\n            var dataSource = this._dataSource;\r\n            if (!arguments.length && !dataSource.paginate()) {\r\n                return 0\r\n            }\r\n            return dataSource.pageSize.apply(dataSource, arguments)\r\n        },\r\n        pageCount: function() {\r\n            var count = this.totalItemsCount() - this._totalCountCorrection;\r\n            var pageSize = this.pageSize();\r\n            if (pageSize && count > 0) {\r\n                return Math.max(1, Math.ceil(count / pageSize))\r\n            }\r\n            return 1\r\n        },\r\n        hasKnownLastPage: function() {\r\n            return this._hasLastPage || this._dataSource.totalCount() >= 0\r\n        },\r\n        loadFromStore: function(loadOptions, store) {\r\n            var dataSource = this._dataSource;\r\n            var d = new Deferred;\r\n            if (!dataSource) {\r\n                return\r\n            }\r\n            store = store || dataSource.store();\r\n            store.load(loadOptions).done((function(data, extra) {\r\n                if (data && !Array.isArray(data) && Array.isArray(data.data)) {\r\n                    extra = data;\r\n                    data = data.data\r\n                }\r\n                d.resolve(data, extra)\r\n            })).fail(d.reject);\r\n            return d\r\n        },\r\n        isCustomLoading: function() {\r\n            return !!this._isCustomLoading\r\n        },\r\n        load: function(options) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var d = new Deferred;\r\n            if (options) {\r\n                var store = dataSource.store();\r\n                var dataSourceLoadOptions = dataSource.loadOptions();\r\n                var loadResult = {\r\n                    storeLoadOptions: options,\r\n                    isCustomLoading: true\r\n                };\r\n                each(store._customLoadOptions() || [], (function(_, optionName) {\r\n                    if (!(optionName in loadResult.storeLoadOptions)) {\r\n                        loadResult.storeLoadOptions[optionName] = dataSourceLoadOptions[optionName]\r\n                    }\r\n                }));\r\n                this._isLoadingAll = options.isLoadingAll;\r\n                that._scheduleCustomLoadCallbacks(d);\r\n                dataSource._scheduleLoadCallbacks(d);\r\n                that._handleCustomizeStoreLoadOptions(loadResult);\r\n                ! function(action, timeout) {\r\n                    if (isDefined(timeout)) {\r\n                        executeAsync(action, timeout)\r\n                    } else {\r\n                        action()\r\n                    }\r\n                }((function() {\r\n                    if (!dataSource.store()) {\r\n                        return d.reject(\"canceled\")\r\n                    }\r\n                    when(loadResult.data || that.loadFromStore(loadResult.storeLoadOptions)).done((function(data, extra) {\r\n                        loadResult.data = data;\r\n                        loadResult.extra = extra || {};\r\n                        that._handleDataLoaded(loadResult);\r\n                        if (options.requireTotalCount && void 0 === loadResult.extra.totalCount) {\r\n                            loadResult.extra.totalCount = store.totalCount(loadResult.storeLoadOptions)\r\n                        }\r\n                        when(loadResult.data, loadResult.extra.totalCount).done((function(data, totalCount) {\r\n                            loadResult.extra.totalCount = totalCount;\r\n                            d.resolve(data, loadResult.extra)\r\n                        })).fail(d.reject)\r\n                    })).fail(d.reject)\r\n                }), that.option(\"loadingTimeout\"));\r\n                return d.fail((function() {\r\n                    that._eventsStrategy.fireEvent(\"loadError\", arguments)\r\n                })).always(() => {\r\n                    this._isLoadingAll = false\r\n                }).promise()\r\n            } else {\r\n                return dataSource.load()\r\n            }\r\n        },\r\n        reload: function(full) {\r\n            return full ? this._dataSource.reload() : this._dataSource.load()\r\n        },\r\n        getCachedStoreData: function() {\r\n            return this._cachedStoreData\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.data_source_adapter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport DataSourceAdapter from \"../grid_core/ui.grid_core.data_source_adapter\";\r\nvar dataSourceAdapterType = DataSourceAdapter;\r\nexport default {\r\n    extend: function(extender) {\r\n        dataSourceAdapterType = dataSourceAdapterType.inherit(extender)\r\n    },\r\n    create: function(component) {\r\n        return new dataSourceAdapterType(component)\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.data_controller.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport ArrayStore from \"../../data/array_store\";\r\nimport CustomStore from \"../../data/custom_store\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    noop,\r\n    deferRender,\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport DataHelperMixin from \"../../data_helper\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    findChanges\r\n} from \"../../core/utils/array_compare\";\r\nexport var dataControllerModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            loadingTimeout: 0,\r\n            dataSource: null,\r\n            cacheEnabled: true,\r\n            repaintChangesOnly: false,\r\n            highlightChanges: false,\r\n            onDataErrorOccurred: null,\r\n            remoteOperations: \"auto\",\r\n            paging: {\r\n                enabled: true,\r\n                pageSize: void 0,\r\n                pageIndex: void 0\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        data: modules.Controller.inherit({}).include(DataHelperMixin).inherit(function() {\r\n            var changePaging = function(that, optionName, value) {\r\n                var dataSource = that._dataSource;\r\n                if (dataSource) {\r\n                    if (void 0 !== value) {\r\n                        var oldValue = that._getPagingOptionValue(optionName);\r\n                        if (oldValue !== value) {\r\n                            if (\"pageSize\" === optionName) {\r\n                                dataSource.pageIndex(0)\r\n                            }\r\n                            dataSource[optionName](value);\r\n                            that._skipProcessingPagingChange = true;\r\n                            that.option(\"paging.\" + optionName, value);\r\n                            that._skipProcessingPagingChange = false;\r\n                            var pageIndex = dataSource.pageIndex();\r\n                            return dataSource[\"pageIndex\" === optionName ? \"load\" : \"reload\"]().done(() => that.pageChanged.fire(pageIndex))\r\n                        }\r\n                        return Deferred().resolve().promise()\r\n                    }\r\n                    return dataSource[optionName]()\r\n                }\r\n                return 0\r\n            };\r\n            var members = {\r\n                init: function() {\r\n                    var that = this;\r\n                    that._items = [];\r\n                    that._cachedProcessedItems = null;\r\n                    that._columnsController = that.getController(\"columns\");\r\n                    that._currentOperationTypes = null;\r\n                    that._dataChangedHandler = e => {\r\n                        that._currentOperationTypes = this._dataSource.operationTypes();\r\n                        that._handleDataChanged(e);\r\n                        that._currentOperationTypes = null\r\n                    };\r\n                    that._columnsChangedHandler = that._handleColumnsChanged.bind(that);\r\n                    that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\r\n                    that._loadErrorHandler = that._handleLoadError.bind(that);\r\n                    that._customizeStoreLoadOptionsHandler = that._handleCustomizeStoreLoadOptions.bind(that);\r\n                    that._changingHandler = that._handleChanging.bind(that);\r\n                    that._dataPushedHandler = that._handleDataPushed.bind(that);\r\n                    that._columnsController.columnsChanged.add(that._columnsChangedHandler);\r\n                    that._isLoading = false;\r\n                    that._isCustomLoading = false;\r\n                    that._repaintChangesOnly = void 0;\r\n                    that._changes = [];\r\n                    that.createAction(\"onDataErrorOccurred\");\r\n                    that.dataErrorOccurred.add((function(error) {\r\n                        return that.executeAction(\"onDataErrorOccurred\", {\r\n                            error: error\r\n                        })\r\n                    }));\r\n                    that._refreshDataSource()\r\n                },\r\n                _getPagingOptionValue: function(optionName) {\r\n                    return this._dataSource[optionName]()\r\n                },\r\n                callbackNames: function() {\r\n                    return [\"changed\", \"loadingChanged\", \"dataErrorOccurred\", \"pageChanged\", \"dataSourceChanged\", \"pushed\"]\r\n                },\r\n                callbackFlags: function(name) {\r\n                    if (\"dataErrorOccurred\" === name) {\r\n                        return {\r\n                            stopOnFalse: true\r\n                        }\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    return [\"beginCustomLoading\", \"endCustomLoading\", \"refresh\", \"filter\", \"clearFilter\", \"getCombinedFilter\", \"keyOf\", \"byKey\", \"getDataByKeys\", \"pageIndex\", \"pageSize\", \"pageCount\", \"totalCount\", \"_disposeDataSource\", \"getKeyByRowIndex\", \"getRowIndexByKey\", \"getDataSource\", \"getVisibleRows\", \"repaintRows\"]\r\n                },\r\n                reset: function() {\r\n                    this._columnsController.reset();\r\n                    this._items = [];\r\n                    this._refreshDataSource()\r\n                },\r\n                optionChanged: function(args) {\r\n                    var that = this;\r\n                    var dataSource;\r\n\r\n                    function handled() {\r\n                        args.handled = true\r\n                    }\r\n                    if (\"dataSource\" === args.name && args.name === args.fullName && (args.value === args.previousValue || that.option(\"columns\") && Array.isArray(args.value) && Array.isArray(args.previousValue))) {\r\n                        var _this$_dataSource;\r\n                        var isValueChanged = args.value !== args.previousValue;\r\n                        if (isValueChanged) {\r\n                            var store = that.store();\r\n                            if (store) {\r\n                                store._array = args.value\r\n                            }\r\n                        }\r\n                        handled();\r\n                        var isParasiteChange = Array.isArray(args.value) && !isValueChanged && (null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.isLoading());\r\n                        if (!isParasiteChange) {\r\n                            that.refresh(that.option(\"repaintChangesOnly\"))\r\n                        }\r\n                        return\r\n                    }\r\n                    switch (args.name) {\r\n                        case \"cacheEnabled\":\r\n                        case \"repaintChangesOnly\":\r\n                        case \"highlightChanges\":\r\n                        case \"loadingTimeout\":\r\n                            handled();\r\n                            break;\r\n                        case \"remoteOperations\":\r\n                        case \"keyExpr\":\r\n                        case \"dataSource\":\r\n                        case \"scrolling\":\r\n                            handled();\r\n                            that.reset();\r\n                            break;\r\n                        case \"paging\":\r\n                            dataSource = that.dataSource();\r\n                            if (dataSource && that._setPagingOptions(dataSource)) {\r\n                                var pageIndex = dataSource.pageIndex();\r\n                                dataSource.load().done(() => that.pageChanged.fire(pageIndex))\r\n                            }\r\n                            handled();\r\n                            break;\r\n                        case \"rtlEnabled\":\r\n                            that.reset();\r\n                            break;\r\n                        case \"columns\":\r\n                            dataSource = that.dataSource();\r\n                            if (dataSource && dataSource.isLoading() && args.name === args.fullName) {\r\n                                this._useSortingGroupingFromColumns = true;\r\n                                dataSource.load()\r\n                            }\r\n                            break;\r\n                        default:\r\n                            that.callBase(args)\r\n                    }\r\n                },\r\n                isReady: function() {\r\n                    return !this._isLoading\r\n                },\r\n                getDataSource: function() {\r\n                    return this._dataSource && this._dataSource._dataSource\r\n                },\r\n                getCombinedFilter: function(returnDataField) {\r\n                    return this.combinedFilter(void 0, returnDataField)\r\n                },\r\n                combinedFilter: function(filter, returnDataField) {\r\n                    var dataSource = this._dataSource;\r\n                    var columnsController = this._columnsController;\r\n                    if (dataSource) {\r\n                        if (void 0 === filter) {\r\n                            filter = dataSource.filter()\r\n                        }\r\n                        var additionalFilter = this._calculateAdditionalFilter();\r\n                        if (additionalFilter) {\r\n                            if (columnsController.isDataSourceApplied() || columnsController.isAllDataTypesDefined()) {\r\n                                filter = gridCoreUtils.combineFilters([additionalFilter, filter])\r\n                            }\r\n                        }\r\n                        filter = columnsController.updateFilter(filter, returnDataField || dataSource.remoteOperations().filtering)\r\n                    }\r\n                    return filter\r\n                },\r\n                waitReady: function() {\r\n                    if (this._updateLockCount) {\r\n                        this._readyDeferred = new Deferred;\r\n                        return this._readyDeferred\r\n                    }\r\n                    return when()\r\n                },\r\n                _endUpdateCore: function() {\r\n                    var changes = this._changes;\r\n                    if (changes.length) {\r\n                        this._changes = [];\r\n                        var repaintChangesOnly = changes.every(change => change.repaintChangesOnly);\r\n                        this.updateItems(1 === changes.length ? changes[0] : {\r\n                            repaintChangesOnly: repaintChangesOnly\r\n                        })\r\n                    }\r\n                    if (this._readyDeferred) {\r\n                        this._readyDeferred.resolve();\r\n                        this._readyDeferred = null\r\n                    }\r\n                },\r\n                _handleCustomizeStoreLoadOptions: function(e) {\r\n                    var _storeLoadOptions$fil;\r\n                    var columnsController = this._columnsController;\r\n                    var dataSource = this._dataSource;\r\n                    var storeLoadOptions = e.storeLoadOptions;\r\n                    if (e.isCustomLoading && !storeLoadOptions.isLoadingAll) {\r\n                        return\r\n                    }\r\n                    storeLoadOptions.filter = this.combinedFilter(storeLoadOptions.filter);\r\n                    if (1 === (null === (_storeLoadOptions$fil = storeLoadOptions.filter) || void 0 === _storeLoadOptions$fil ? void 0 : _storeLoadOptions$fil.length) && \"!\" === storeLoadOptions.filter[0]) {\r\n                        e.data = [];\r\n                        e.extra = e.extra || {};\r\n                        e.extra.totalCount = 0\r\n                    }\r\n                    if (!columnsController.isDataSourceApplied()) {\r\n                        columnsController.updateColumnDataTypes(dataSource)\r\n                    }\r\n                    this._columnsUpdating = true;\r\n                    columnsController.updateSortingGrouping(dataSource, !this._useSortingGroupingFromColumns);\r\n                    this._columnsUpdating = false;\r\n                    storeLoadOptions.sort = columnsController.getSortDataSourceParameters();\r\n                    storeLoadOptions.group = columnsController.getGroupDataSourceParameters();\r\n                    dataSource.sort(storeLoadOptions.sort);\r\n                    dataSource.group(storeLoadOptions.group);\r\n                    storeLoadOptions.sort = columnsController.getSortDataSourceParameters(!dataSource.remoteOperations().sorting);\r\n                    e.group = columnsController.getGroupDataSourceParameters(!dataSource.remoteOperations().grouping)\r\n                },\r\n                _handleColumnsChanged: function(e) {\r\n                    var that = this;\r\n                    var changeTypes = e.changeTypes;\r\n                    var optionNames = e.optionNames;\r\n                    var filterValue;\r\n                    var filterValues;\r\n                    var filterApplied;\r\n                    if (changeTypes.sorting || changeTypes.grouping) {\r\n                        if (that._dataSource && !that._columnsUpdating) {\r\n                            that._dataSource.group(that._columnsController.getGroupDataSourceParameters());\r\n                            that._dataSource.sort(that._columnsController.getSortDataSourceParameters());\r\n                            that.reload()\r\n                        }\r\n                    } else if (changeTypes.columns) {\r\n                        filterValues = that._columnsController.columnOption(e.columnIndex, \"filterValues\");\r\n                        if (optionNames.filterValues || optionNames.filterType && Array.isArray(filterValues) || optionNames.filterValue || optionNames.selectedFilterOperation || optionNames.allowFiltering) {\r\n                            filterValue = that._columnsController.columnOption(e.columnIndex, \"filterValue\");\r\n                            if (Array.isArray(filterValues) || void 0 === e.columnIndex || isDefined(filterValue) || !optionNames.selectedFilterOperation || optionNames.filterValue) {\r\n                                that._applyFilter();\r\n                                filterApplied = true\r\n                            }\r\n                        }\r\n                        if (!that._needApplyFilter && !gridCoreUtils.checkChanges(optionNames, [\"width\", \"visibleWidth\", \"filterValue\", \"bufferedFilterValue\", \"selectedFilterOperation\", \"filterValues\", \"filterType\"])) {\r\n                            that._columnsController.columnsChanged.add((function updateItemsHandler() {\r\n                                that._columnsController.columnsChanged.remove(updateItemsHandler);\r\n                                that.updateItems({\r\n                                    virtualColumnsScrolling: e.changeTypes.virtualColumnsScrolling\r\n                                })\r\n                            }))\r\n                        }\r\n                        if (isDefined(optionNames.visible)) {\r\n                            var column = that._columnsController.columnOption(e.columnIndex);\r\n                            if (column && (isDefined(column.filterValue) || isDefined(column.filterValues))) {\r\n                                that._applyFilter();\r\n                                filterApplied = true\r\n                            }\r\n                        }\r\n                    }\r\n                    if (!filterApplied && changeTypes.filtering) {\r\n                        that.reload()\r\n                    }\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var columnsController = that._columnsController;\r\n                    var isAsyncDataSourceApplying = false;\r\n                    this._useSortingGroupingFromColumns = false;\r\n                    if (dataSource && !that._isDataSourceApplying) {\r\n                        that._isDataSourceApplying = true;\r\n                        when(that._columnsController.applyDataSource(dataSource)).done((function() {\r\n                            if (that._isLoading) {\r\n                                that._handleLoadingChanged(false)\r\n                            }\r\n                            if (isAsyncDataSourceApplying && e && e.isDelayed) {\r\n                                e.isDelayed = false\r\n                            }\r\n                            that._isDataSourceApplying = false;\r\n                            var needApplyFilter = that._needApplyFilter;\r\n                            that._needApplyFilter = false;\r\n                            if (needApplyFilter && !that._isAllDataTypesDefined && (additionalFilter = that._calculateAdditionalFilter(), additionalFilter && additionalFilter.length)) {\r\n                                errors.log(\"W1005\", that.component.NAME);\r\n                                that._applyFilter()\r\n                            } else {\r\n                                that.updateItems(e, true)\r\n                            }\r\n                            var additionalFilter\r\n                        })).fail((function() {\r\n                            that._isDataSourceApplying = false\r\n                        }));\r\n                        if (that._isDataSourceApplying) {\r\n                            isAsyncDataSourceApplying = true;\r\n                            that._handleLoadingChanged(true)\r\n                        }\r\n                        that._needApplyFilter = !that._columnsController.isDataSourceApplied();\r\n                        that._isAllDataTypesDefined = columnsController.isAllDataTypesDefined()\r\n                    }\r\n                },\r\n                _handleLoadingChanged: function(isLoading) {\r\n                    this._isLoading = isLoading;\r\n                    this._fireLoadingChanged()\r\n                },\r\n                _handleLoadError: function(e) {\r\n                    this.dataErrorOccurred.fire(e)\r\n                },\r\n                _handleDataPushed: function(changes) {\r\n                    this.pushed.fire(changes)\r\n                },\r\n                fireError: function() {\r\n                    this.dataErrorOccurred.fire(errors.Error.apply(errors, arguments))\r\n                },\r\n                _setPagingOptions: function(dataSource) {\r\n                    var pageIndex = this.option(\"paging.pageIndex\");\r\n                    var pageSize = this.option(\"paging.pageSize\");\r\n                    var pagingEnabled = this.option(\"paging.enabled\");\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    var appendMode = \"infinite\" === scrollingMode;\r\n                    var virtualMode = \"virtual\" === scrollingMode;\r\n                    var paginate = pagingEnabled || virtualMode || appendMode;\r\n                    var isChanged = false;\r\n                    dataSource.requireTotalCount(!appendMode);\r\n                    if (void 0 !== pagingEnabled && dataSource.paginate() !== paginate) {\r\n                        dataSource.paginate(paginate);\r\n                        isChanged = true\r\n                    }\r\n                    if (void 0 !== pageSize && dataSource.pageSize() !== pageSize) {\r\n                        dataSource.pageSize(pageSize);\r\n                        isChanged = true\r\n                    }\r\n                    if (void 0 !== pageIndex && dataSource.pageIndex() !== pageIndex) {\r\n                        dataSource.pageIndex(pageIndex);\r\n                        isChanged = true\r\n                    }\r\n                    return isChanged\r\n                },\r\n                _getSpecificDataSourceOption: function() {\r\n                    var dataSource = this.option(\"dataSource\");\r\n                    if (Array.isArray(dataSource)) {\r\n                        return {\r\n                            store: {\r\n                                type: \"array\",\r\n                                data: dataSource,\r\n                                key: this.option(\"keyExpr\")\r\n                            }\r\n                        }\r\n                    }\r\n                    return dataSource\r\n                },\r\n                _initDataSource: function() {\r\n                    var dataSource = this.option(\"dataSource\");\r\n                    var oldDataSource = this._dataSource;\r\n                    this.callBase();\r\n                    dataSource = this._dataSource;\r\n                    this._useSortingGroupingFromColumns = true;\r\n                    this._cachedProcessedItems = null;\r\n                    if (dataSource) {\r\n                        this._setPagingOptions(dataSource);\r\n                        this.setDataSource(dataSource)\r\n                    } else if (oldDataSource) {\r\n                        this.updateItems()\r\n                    }\r\n                },\r\n                _loadDataSource: function() {\r\n                    var dataSource = this._dataSource;\r\n                    var result = new Deferred;\r\n                    when(this._columnsController.refresh(true)).always((function() {\r\n                        if (dataSource) {\r\n                            dataSource.load().done(result.resolve).fail(result.reject)\r\n                        } else {\r\n                            result.resolve()\r\n                        }\r\n                    }));\r\n                    return result.promise()\r\n                },\r\n                _beforeProcessItems: function(items) {\r\n                    return items.slice(0)\r\n                },\r\n                getRowIndexDelta: function() {\r\n                    return 0\r\n                },\r\n                _processItems: function(items, change) {\r\n                    var that = this;\r\n                    var rowIndexDelta = that.getRowIndexDelta();\r\n                    var changeType = change.changeType;\r\n                    var visibleColumns = that._columnsController.getVisibleColumns(null, \"loadingAll\" === changeType);\r\n                    var visibleItems = that._items;\r\n                    var lastVisibleItem = \"append\" === changeType && visibleItems.length > 0 ? visibleItems[visibleItems.length - 1] : null;\r\n                    var dataIndex = isDefined(null === lastVisibleItem || void 0 === lastVisibleItem ? void 0 : lastVisibleItem.dataIndex) ? lastVisibleItem.dataIndex + 1 : 0;\r\n                    var options = {\r\n                        visibleColumns: visibleColumns,\r\n                        dataIndex: dataIndex\r\n                    };\r\n                    var result = [];\r\n                    each(items, (function(index, item) {\r\n                        if (isDefined(item)) {\r\n                            options.rowIndex = index - rowIndexDelta;\r\n                            item = that._processItem(item, options);\r\n                            result.push(item)\r\n                        }\r\n                    }));\r\n                    return result\r\n                },\r\n                _processItem: function(item, options) {\r\n                    item = this._generateDataItem(item, options);\r\n                    item = this._processDataItem(item, options);\r\n                    item.dataIndex = options.dataIndex++;\r\n                    return item\r\n                },\r\n                _generateDataItem: function(data) {\r\n                    return {\r\n                        rowType: \"data\",\r\n                        data: data,\r\n                        key: this.keyOf(data)\r\n                    }\r\n                },\r\n                _processDataItem: function(dataItem, options) {\r\n                    dataItem.values = this.generateDataValues(dataItem.data, options.visibleColumns);\r\n                    return dataItem\r\n                },\r\n                generateDataValues: function(data, columns, isModified) {\r\n                    var values = [];\r\n                    var value;\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        var column = columns[i];\r\n                        value = isModified ? void 0 : null;\r\n                        if (!column.command) {\r\n                            if (column.calculateCellValue) {\r\n                                value = column.calculateCellValue(data)\r\n                            } else if (column.dataField) {\r\n                                value = data[column.dataField]\r\n                            }\r\n                        }\r\n                        values.push(value)\r\n                    }\r\n                    return values\r\n                },\r\n                _applyChange: function(change) {\r\n                    if (\"update\" === change.changeType) {\r\n                        this._applyChangeUpdate(change)\r\n                    } else if (this.items().length && change.repaintChangesOnly && \"refresh\" === change.changeType) {\r\n                        this._applyChangesOnly(change)\r\n                    } else if (\"refresh\" === change.changeType) {\r\n                        this._applyChangeFull(change)\r\n                    }\r\n                },\r\n                _applyChangeFull: function(change) {\r\n                    this._items = change.items.slice(0)\r\n                },\r\n                _getRowIndices: function(change) {\r\n                    var rowIndices = change.rowIndices.slice(0);\r\n                    var rowIndexDelta = this.getRowIndexDelta();\r\n                    rowIndices.sort((function(a, b) {\r\n                        return a - b\r\n                    }));\r\n                    for (var i = 0; i < rowIndices.length; i++) {\r\n                        var correctedRowIndex = rowIndices[i];\r\n                        if (change.allowInvisibleRowIndices) {\r\n                            correctedRowIndex += rowIndexDelta\r\n                        }\r\n                        if (correctedRowIndex < 0) {\r\n                            rowIndices.splice(i, 1);\r\n                            i--\r\n                        }\r\n                    }\r\n                    return rowIndices\r\n                },\r\n                _applyChangeUpdate: function(change) {\r\n                    var that = this;\r\n                    var items = change.items;\r\n                    var rowIndices = that._getRowIndices(change);\r\n                    var rowIndexDelta = that.getRowIndexDelta();\r\n                    var repaintChangesOnly = that.option(\"repaintChangesOnly\");\r\n                    var prevIndex = -1;\r\n                    var rowIndexCorrection = 0;\r\n                    var changeType;\r\n                    change.items = [];\r\n                    change.rowIndices = [];\r\n                    change.columnIndices = [];\r\n                    change.changeTypes = [];\r\n                    var equalItems = function(item1, item2, strict) {\r\n                        var result = item1 && item2 && equalByValue(item1.key, item2.key);\r\n                        if (result && strict) {\r\n                            result = item1.rowType === item2.rowType && (\"detail\" !== item2.rowType || item1.isEditing === item2.isEditing)\r\n                        }\r\n                        return result\r\n                    };\r\n                    each(rowIndices, (function(index, rowIndex) {\r\n                        var columnIndices;\r\n                        rowIndex += rowIndexCorrection + rowIndexDelta;\r\n                        if (prevIndex === rowIndex) {\r\n                            return\r\n                        }\r\n                        prevIndex = rowIndex;\r\n                        var oldItem = that._items[rowIndex];\r\n                        var oldNextItem = that._items[rowIndex + 1];\r\n                        var newItem = items[rowIndex];\r\n                        var newNextItem = items[rowIndex + 1];\r\n                        var strict = equalItems(oldItem, oldNextItem) || equalItems(newItem, newNextItem);\r\n                        if (newItem) {\r\n                            newItem.rowIndex = rowIndex;\r\n                            change.items.push(newItem)\r\n                        }\r\n                        if (oldItem && newItem && equalItems(oldItem, newItem, strict)) {\r\n                            changeType = \"update\";\r\n                            that._items[rowIndex] = newItem;\r\n                            if (oldItem.visible !== newItem.visible) {\r\n                                change.items.splice(-1, 1, {\r\n                                    visible: newItem.visible\r\n                                })\r\n                            } else if (repaintChangesOnly && !change.isFullUpdate) {\r\n                                columnIndices = that._partialUpdateRow(oldItem, newItem, rowIndex - rowIndexDelta)\r\n                            }\r\n                        } else if (newItem && !oldItem || newNextItem && equalItems(oldItem, newNextItem, strict)) {\r\n                            changeType = \"insert\";\r\n                            that._items.splice(rowIndex, 0, newItem);\r\n                            rowIndexCorrection++\r\n                        } else if (oldItem && !newItem || oldNextItem && equalItems(newItem, oldNextItem, strict)) {\r\n                            changeType = \"remove\";\r\n                            that._items.splice(rowIndex, 1);\r\n                            rowIndexCorrection--;\r\n                            prevIndex = -1\r\n                        } else if (newItem) {\r\n                            changeType = \"update\";\r\n                            that._items[rowIndex] = newItem\r\n                        } else {\r\n                            return\r\n                        }\r\n                        change.rowIndices.push(rowIndex - rowIndexDelta);\r\n                        change.changeTypes.push(changeType);\r\n                        change.columnIndices.push(columnIndices)\r\n                    }))\r\n                },\r\n                _isCellChanged: function(oldRow, newRow, visibleRowIndex, columnIndex, isLiveUpdate) {\r\n                    if (JSON.stringify(oldRow.values[columnIndex]) !== JSON.stringify(newRow.values[columnIndex])) {\r\n                        return true\r\n                    }\r\n\r\n                    function isCellModified(row, columnIndex) {\r\n                        return row.modifiedValues ? void 0 !== row.modifiedValues[columnIndex] : false\r\n                    }\r\n                    if (isCellModified(oldRow, columnIndex) !== isCellModified(newRow, columnIndex)) {\r\n                        return true\r\n                    }\r\n                    return false\r\n                },\r\n                _getChangedColumnIndices: function(oldItem, newItem, visibleRowIndex, isLiveUpdate) {\r\n                    var columnIndices;\r\n                    if (oldItem.rowType === newItem.rowType) {\r\n                        if (\"group\" !== newItem.rowType && \"groupFooter\" !== newItem.rowType) {\r\n                            columnIndices = [];\r\n                            if (\"detail\" !== newItem.rowType) {\r\n                                for (var columnIndex = 0; columnIndex < oldItem.values.length; columnIndex++) {\r\n                                    if (this._isCellChanged(oldItem, newItem, visibleRowIndex, columnIndex, isLiveUpdate)) {\r\n                                        columnIndices.push(columnIndex)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        if (\"group\" === newItem.rowType && newItem.isExpanded === oldItem.isExpanded && oldItem.cells) {\r\n                            columnIndices = oldItem.cells.map((cell, index) => {\r\n                                var _cell$column;\r\n                                return \"groupExpand\" !== (null === (_cell$column = cell.column) || void 0 === _cell$column ? void 0 : _cell$column.type) ? index : -1\r\n                            }).filter(index => index >= 0)\r\n                        }\r\n                    }\r\n                    return columnIndices\r\n                },\r\n                _partialUpdateRow: function(oldItem, newItem, visibleRowIndex, isLiveUpdate) {\r\n                    var _changedColumnIndices;\r\n                    var changedColumnIndices = this._getChangedColumnIndices(oldItem, newItem, visibleRowIndex, isLiveUpdate);\r\n                    if (null !== (_changedColumnIndices = changedColumnIndices) && void 0 !== _changedColumnIndices && _changedColumnIndices.length && this.option(\"dataRowTemplate\")) {\r\n                        changedColumnIndices = void 0\r\n                    }\r\n                    if (changedColumnIndices) {\r\n                        oldItem.cells && oldItem.cells.forEach((function(cell, columnIndex) {\r\n                            var isCellChanged = changedColumnIndices.indexOf(columnIndex) >= 0;\r\n                            if (!isCellChanged && cell && cell.update) {\r\n                                cell.update(newItem)\r\n                            }\r\n                        }));\r\n                        newItem.update = oldItem.update;\r\n                        newItem.watch = oldItem.watch;\r\n                        newItem.cells = oldItem.cells;\r\n                        if (isLiveUpdate) {\r\n                            newItem.oldValues = oldItem.values\r\n                        }\r\n                        oldItem.update && oldItem.update(newItem)\r\n                    }\r\n                    return changedColumnIndices\r\n                },\r\n                _isItemEquals: function(item1, item2) {\r\n                    if (JSON.stringify(item1.values) !== JSON.stringify(item2.values)) {\r\n                        return false\r\n                    }\r\n                    if ([\"modified\", \"isNewRow\", \"removed\", \"isEditing\"].some(field => item1[field] !== item2[field])) {\r\n                        return false\r\n                    }\r\n                    if (\"group\" === item1.rowType || \"groupFooter\" === item1.rowType) {\r\n                        var _item1$data, _item2$data, _item1$data2, _item2$data2;\r\n                        var expandedMatch = item1.isExpanded === item2.isExpanded;\r\n                        var summaryCellsMatch = JSON.stringify(item1.summaryCells) === JSON.stringify(item2.summaryCells);\r\n                        var continuationMatch = (null === (_item1$data = item1.data) || void 0 === _item1$data ? void 0 : _item1$data.isContinuation) === (null === (_item2$data = item2.data) || void 0 === _item2$data ? void 0 : _item2$data.isContinuation) && (null === (_item1$data2 = item1.data) || void 0 === _item1$data2 ? void 0 : _item1$data2.isContinuationOnNextPage) === (null === (_item2$data2 = item2.data) || void 0 === _item2$data2 ? void 0 : _item2$data2.isContinuationOnNextPage);\r\n                        if (!expandedMatch || !summaryCellsMatch || !continuationMatch) {\r\n                            return false\r\n                        }\r\n                    }\r\n                    return true\r\n                },\r\n                _applyChangesOnly: function(change) {\r\n                    var rowIndices = [];\r\n                    var columnIndices = [];\r\n                    var changeTypes = [];\r\n                    var items = [];\r\n                    var newIndexByKey = {};\r\n\r\n                    function getRowKey(row) {\r\n                        if (row) {\r\n                            return row.rowType + \",\" + JSON.stringify(row.key)\r\n                        }\r\n                    }\r\n                    var currentItems = this._items;\r\n                    var oldItems = currentItems.slice();\r\n                    change.items.forEach((function(item, index) {\r\n                        var key = getRowKey(item);\r\n                        newIndexByKey[key] = index;\r\n                        item.rowIndex = index\r\n                    }));\r\n                    var result = findChanges(oldItems, change.items, getRowKey, (item1, item2) => {\r\n                        if (!this._isItemEquals(item1, item2)) {\r\n                            return false\r\n                        }\r\n                        if (item1.cells) {\r\n                            item1.update && item1.update(item2);\r\n                            item1.cells.forEach((function(cell) {\r\n                                if (cell && cell.update) {\r\n                                    cell.update(item2, true)\r\n                                }\r\n                            }))\r\n                        }\r\n                        return true\r\n                    });\r\n                    if (!result) {\r\n                        this._applyChangeFull(change);\r\n                        return\r\n                    }\r\n                    result.forEach(change => {\r\n                        switch (change.type) {\r\n                            case \"update\":\r\n                                var index = change.index;\r\n                                var newItem = change.data;\r\n                                var oldItem = change.oldItem;\r\n                                var changedColumnIndices = this._partialUpdateRow(oldItem, newItem, index, true);\r\n                                rowIndices.push(index);\r\n                                changeTypes.push(\"update\");\r\n                                items.push(newItem);\r\n                                currentItems[index] = newItem;\r\n                                columnIndices.push(changedColumnIndices);\r\n                                break;\r\n                            case \"insert\":\r\n                                rowIndices.push(change.index);\r\n                                changeTypes.push(\"insert\");\r\n                                items.push(change.data);\r\n                                columnIndices.push(void 0);\r\n                                currentItems.splice(change.index, 0, change.data);\r\n                                break;\r\n                            case \"remove\":\r\n                                rowIndices.push(change.index);\r\n                                changeTypes.push(\"remove\");\r\n                                currentItems.splice(change.index, 1);\r\n                                items.push(change.oldItem);\r\n                                columnIndices.push(void 0)\r\n                        }\r\n                    });\r\n                    change.repaintChangesOnly = true;\r\n                    change.changeType = \"update\";\r\n                    change.rowIndices = rowIndices;\r\n                    change.columnIndices = columnIndices;\r\n                    change.changeTypes = changeTypes;\r\n                    change.items = items;\r\n                    if (oldItems.length) {\r\n                        change.isLiveUpdate = true\r\n                    }\r\n                    this._correctRowIndices(rowIndex => {\r\n                        var oldRowIndexOffset = this._rowIndexOffset || 0;\r\n                        var rowIndexOffset = this.getRowIndexOffset();\r\n                        var oldItem = oldItems[rowIndex - oldRowIndexOffset];\r\n                        var key = getRowKey(oldItem);\r\n                        var newVisibleRowIndex = newIndexByKey[key];\r\n                        return newVisibleRowIndex >= 0 ? newVisibleRowIndex + rowIndexOffset - rowIndex : 0\r\n                    })\r\n                },\r\n                _correctRowIndices: noop,\r\n                _afterProcessItems: function(items) {\r\n                    return items\r\n                },\r\n                _updateItemsCore: function(change) {\r\n                    var items;\r\n                    var dataSource = this._dataSource;\r\n                    var changeType = change.changeType || \"refresh\";\r\n                    change.changeType = changeType;\r\n                    if (dataSource) {\r\n                        var cachedProcessedItems = this._cachedProcessedItems;\r\n                        if (change.useProcessedItemsCache && cachedProcessedItems) {\r\n                            items = cachedProcessedItems\r\n                        } else {\r\n                            items = change.items || dataSource.items();\r\n                            items = this._beforeProcessItems(items);\r\n                            items = this._processItems(items, change);\r\n                            this._cachedProcessedItems = items\r\n                        }\r\n                        items = this._afterProcessItems(items, change);\r\n                        change.items = items;\r\n                        var oldItems = this._items.length === items.length && this._items;\r\n                        this._applyChange(change);\r\n                        var rowIndexDelta = this.getRowIndexDelta();\r\n                        each(this._items, (index, item) => {\r\n                            item.rowIndex = index - rowIndexDelta;\r\n                            if (oldItems) {\r\n                                item.cells = oldItems[index].cells || []\r\n                            }\r\n                            var newItem = items[index];\r\n                            if (newItem) {\r\n                                item.loadIndex = newItem.loadIndex\r\n                            }\r\n                        });\r\n                        this._rowIndexOffset = this.getRowIndexOffset()\r\n                    } else {\r\n                        this._items = []\r\n                    }\r\n                },\r\n                _handleChanging: function(e) {\r\n                    var rows = this.getVisibleRows();\r\n                    var dataSource = this.dataSource();\r\n                    if (dataSource) {\r\n                        e.changes.forEach((function(change) {\r\n                            if (\"insert\" === change.type && change.index >= 0) {\r\n                                var dataIndex = 0;\r\n                                for (var i = 0; i < change.index; i++) {\r\n                                    var row = rows[i];\r\n                                    if (row && (\"data\" === row.rowType || \"group\" === row.rowType)) {\r\n                                        dataIndex++\r\n                                    }\r\n                                }\r\n                                change.index = dataIndex\r\n                            }\r\n                        }))\r\n                    }\r\n                },\r\n                updateItems: function(change, isDataChanged) {\r\n                    change = change || {};\r\n                    if (void 0 !== this._repaintChangesOnly) {\r\n                        change.repaintChangesOnly = change.repaintChangesOnly || this._repaintChangesOnly;\r\n                        change.needUpdateDimensions = change.needUpdateDimensions || this._needUpdateDimensions\r\n                    } else if (change.changes) {\r\n                        change.repaintChangesOnly = this.option(\"repaintChangesOnly\")\r\n                    } else if (isDataChanged) {\r\n                        var operationTypes = this.dataSource().operationTypes();\r\n                        change.repaintChangesOnly = operationTypes && !operationTypes.grouping && !operationTypes.filtering && this.option(\"repaintChangesOnly\");\r\n                        change.isDataChanged = true;\r\n                        if (operationTypes && (operationTypes.reload || operationTypes.paging || operationTypes.groupExpanding)) {\r\n                            change.needUpdateDimensions = true\r\n                        }\r\n                    }\r\n                    if (this._updateLockCount) {\r\n                        this._changes.push(change);\r\n                        return\r\n                    }\r\n                    this._updateItemsCore(change);\r\n                    if (change.cancel) {\r\n                        return\r\n                    }\r\n                    this._fireChanged(change)\r\n                },\r\n                loadingOperationTypes: function() {\r\n                    var dataSource = this.dataSource();\r\n                    return dataSource && dataSource.loadingOperationTypes() || {}\r\n                },\r\n                _fireChanged: function(change) {\r\n                    if (this._currentOperationTypes) {\r\n                        change.operationTypes = this._currentOperationTypes;\r\n                        this._currentOperationTypes = null\r\n                    }\r\n                    deferRender(() => {\r\n                        this.changed.fire(change)\r\n                    })\r\n                },\r\n                isLoading: function() {\r\n                    return this._isLoading || this._isCustomLoading\r\n                },\r\n                _fireLoadingChanged: function() {\r\n                    this.loadingChanged.fire(this.isLoading(), this._loadingText)\r\n                },\r\n                _calculateAdditionalFilter: function() {\r\n                    return null\r\n                },\r\n                _applyFilter: function() {\r\n                    var dataSource = this._dataSource;\r\n                    if (dataSource) {\r\n                        dataSource.pageIndex(0);\r\n                        this._isFilterApplying = true;\r\n                        return this.reload().done(() => {\r\n                            if (this._isFilterApplying) {\r\n                                this.pageChanged.fire()\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                resetFilterApplying: function() {\r\n                    this._isFilterApplying = false\r\n                },\r\n                filter: function(filterExpr) {\r\n                    var dataSource = this._dataSource;\r\n                    var filter = dataSource && dataSource.filter();\r\n                    if (0 === arguments.length) {\r\n                        return filter\r\n                    }\r\n                    filterExpr = arguments.length > 1 ? Array.prototype.slice.call(arguments, 0) : filterExpr;\r\n                    if (gridCoreUtils.equalFilterParameters(filter, filterExpr)) {\r\n                        return\r\n                    }\r\n                    if (dataSource) {\r\n                        dataSource.filter(filterExpr)\r\n                    }\r\n                    this._applyFilter()\r\n                },\r\n                clearFilter: function(filterName) {\r\n                    var that = this;\r\n                    var columnsController = that._columnsController;\r\n                    var clearColumnOption = function(optionName) {\r\n                        var columnCount = columnsController.columnCount();\r\n                        for (var index = 0; index < columnCount; index++) {\r\n                            columnsController.columnOption(index, optionName, void 0)\r\n                        }\r\n                    };\r\n                    that.component.beginUpdate();\r\n                    if (arguments.length > 0) {\r\n                        switch (filterName) {\r\n                            case \"dataSource\":\r\n                                that.filter(null);\r\n                                break;\r\n                            case \"search\":\r\n                                that.searchByText(\"\");\r\n                                break;\r\n                            case \"header\":\r\n                                clearColumnOption(\"filterValues\");\r\n                                break;\r\n                            case \"row\":\r\n                                clearColumnOption(\"filterValue\")\r\n                        }\r\n                    } else {\r\n                        that.filter(null);\r\n                        that.searchByText(\"\");\r\n                        clearColumnOption(\"filterValue\");\r\n                        clearColumnOption(\"bufferedFilterValue\");\r\n                        clearColumnOption(\"filterValues\")\r\n                    }\r\n                    that.component.endUpdate()\r\n                },\r\n                _fireDataSourceChanged: function() {\r\n                    var that = this;\r\n                    that.changed.add((function changedHandler() {\r\n                        that.changed.remove(changedHandler);\r\n                        that.dataSourceChanged.fire()\r\n                    }))\r\n                },\r\n                _getDataSourceAdapter: noop,\r\n                _createDataSourceAdapterCore: function(dataSource, remoteOperations) {\r\n                    var dataSourceAdapterProvider = this._getDataSourceAdapter();\r\n                    var dataSourceAdapter = dataSourceAdapterProvider.create(this.component);\r\n                    dataSourceAdapter.init(dataSource, remoteOperations);\r\n                    return dataSourceAdapter\r\n                },\r\n                isLocalStore: function(store) {\r\n                    store = store || this.store();\r\n                    return store instanceof ArrayStore\r\n                },\r\n                isCustomStore: function(store) {\r\n                    store = store || this.store();\r\n                    return store instanceof CustomStore\r\n                },\r\n                _createDataSourceAdapter: function(dataSource) {\r\n                    var remoteOperations = this.option(\"remoteOperations\");\r\n                    var store = dataSource.store();\r\n                    var enabledRemoteOperations = {\r\n                        filtering: true,\r\n                        sorting: true,\r\n                        paging: true,\r\n                        grouping: true,\r\n                        summary: true\r\n                    };\r\n                    if (remoteOperations && remoteOperations.groupPaging) {\r\n                        remoteOperations = extend({}, enabledRemoteOperations, remoteOperations)\r\n                    }\r\n                    if (\"auto\" === remoteOperations) {\r\n                        remoteOperations = this.isLocalStore(store) || this.isCustomStore(store) ? {} : {\r\n                            filtering: true,\r\n                            sorting: true,\r\n                            paging: true\r\n                        }\r\n                    }\r\n                    if (true === remoteOperations) {\r\n                        remoteOperations = enabledRemoteOperations\r\n                    }\r\n                    return this._createDataSourceAdapterCore(dataSource, remoteOperations)\r\n                },\r\n                setDataSource: function(dataSource) {\r\n                    var oldDataSource = this._dataSource;\r\n                    if (!dataSource && oldDataSource) {\r\n                        oldDataSource.cancelAll();\r\n                        oldDataSource.changed.remove(this._dataChangedHandler);\r\n                        oldDataSource.loadingChanged.remove(this._loadingChangedHandler);\r\n                        oldDataSource.loadError.remove(this._loadErrorHandler);\r\n                        oldDataSource.customizeStoreLoadOptions.remove(this._customizeStoreLoadOptionsHandler);\r\n                        oldDataSource.changing.remove(this._changingHandler);\r\n                        oldDataSource.pushed.remove(this._dataPushedHandler);\r\n                        oldDataSource.dispose(this._isSharedDataSource)\r\n                    }\r\n                    if (dataSource) {\r\n                        dataSource = this._createDataSourceAdapter(dataSource)\r\n                    }\r\n                    this._dataSource = dataSource;\r\n                    if (dataSource) {\r\n                        this._fireDataSourceChanged();\r\n                        this._isLoading = !dataSource.isLoaded();\r\n                        this._needApplyFilter = true;\r\n                        this._isAllDataTypesDefined = this._columnsController.isAllDataTypesDefined();\r\n                        dataSource.changed.add(this._dataChangedHandler);\r\n                        dataSource.loadingChanged.add(this._loadingChangedHandler);\r\n                        dataSource.loadError.add(this._loadErrorHandler);\r\n                        dataSource.customizeStoreLoadOptions.add(this._customizeStoreLoadOptionsHandler);\r\n                        dataSource.changing.add(this._changingHandler);\r\n                        dataSource.pushed.add(this._dataPushedHandler)\r\n                    }\r\n                },\r\n                items: function() {\r\n                    return this._items\r\n                },\r\n                isEmpty: function() {\r\n                    return !this.items().length\r\n                },\r\n                pageCount: function() {\r\n                    return this._dataSource ? this._dataSource.pageCount() : 1\r\n                },\r\n                dataSource: function() {\r\n                    return this._dataSource\r\n                },\r\n                store: function() {\r\n                    var dataSource = this._dataSource;\r\n                    return dataSource && dataSource.store()\r\n                },\r\n                loadAll: function(data) {\r\n                    var that = this;\r\n                    var d = new Deferred;\r\n                    var dataSource = that._dataSource;\r\n                    if (dataSource) {\r\n                        if (data) {\r\n                            var options = {\r\n                                data: data,\r\n                                isCustomLoading: true,\r\n                                storeLoadOptions: {\r\n                                    isLoadingAll: true\r\n                                },\r\n                                loadOptions: {\r\n                                    filter: that.getCombinedFilter(),\r\n                                    group: dataSource.group(),\r\n                                    sort: dataSource.sort()\r\n                                }\r\n                            };\r\n                            dataSource._handleDataLoaded(options);\r\n                            when(options.data).done((function(data) {\r\n                                data = that._beforeProcessItems(data);\r\n                                d.resolve(that._processItems(data, {\r\n                                    changeType: \"loadingAll\"\r\n                                }), options.extra && options.extra.summary)\r\n                            })).fail(d.reject)\r\n                        } else if (!dataSource.isLoading()) {\r\n                            var loadOptions = extend({}, dataSource.loadOptions(), {\r\n                                isLoadingAll: true,\r\n                                requireTotalCount: false\r\n                            });\r\n                            dataSource.load(loadOptions).done((function(items, extra) {\r\n                                items = that._beforeProcessItems(items);\r\n                                items = that._processItems(items, {\r\n                                    changeType: \"loadingAll\"\r\n                                });\r\n                                d.resolve(items, extra && extra.summary)\r\n                            })).fail(d.reject)\r\n                        } else {\r\n                            d.reject()\r\n                        }\r\n                    } else {\r\n                        d.resolve([])\r\n                    }\r\n                    return d\r\n                },\r\n                getKeyByRowIndex: function(rowIndex, byLoaded) {\r\n                    var item = this.items(byLoaded)[rowIndex];\r\n                    if (item) {\r\n                        return item.key\r\n                    }\r\n                },\r\n                getRowIndexByKey: function(key, byLoaded) {\r\n                    return gridCoreUtils.getIndexByKey(key, this.items(byLoaded))\r\n                },\r\n                keyOf: function(data) {\r\n                    var store = this.store();\r\n                    if (store) {\r\n                        return store.keyOf(data)\r\n                    }\r\n                },\r\n                byKey: function(key) {\r\n                    var store = this.store();\r\n                    var rowIndex = this.getRowIndexByKey(key);\r\n                    var result;\r\n                    if (!store) {\r\n                        return\r\n                    }\r\n                    if (rowIndex >= 0) {\r\n                        result = (new Deferred).resolve(this.items()[rowIndex].data)\r\n                    }\r\n                    return result || store.byKey(key)\r\n                },\r\n                key: function() {\r\n                    var store = this.store();\r\n                    if (store) {\r\n                        return store.key()\r\n                    }\r\n                },\r\n                getRowIndexOffset: function() {\r\n                    return 0\r\n                },\r\n                getDataByKeys: function(rowKeys) {\r\n                    var that = this;\r\n                    var result = new Deferred;\r\n                    var deferreds = [];\r\n                    var data = [];\r\n                    each(rowKeys, (function(index, key) {\r\n                        deferreds.push(that.byKey(key).done((function(keyData) {\r\n                            data[index] = keyData\r\n                        })))\r\n                    }));\r\n                    when.apply($, deferreds).always((function() {\r\n                        result.resolve(data)\r\n                    }));\r\n                    return result\r\n                },\r\n                pageIndex: function(value) {\r\n                    return changePaging(this, \"pageIndex\", value)\r\n                },\r\n                pageSize: function(value) {\r\n                    return changePaging(this, \"pageSize\", value)\r\n                },\r\n                beginCustomLoading: function(messageText) {\r\n                    this._isCustomLoading = true;\r\n                    this._loadingText = messageText || \"\";\r\n                    this._fireLoadingChanged()\r\n                },\r\n                endCustomLoading: function() {\r\n                    this._isCustomLoading = false;\r\n                    this._loadingText = void 0;\r\n                    this._fireLoadingChanged()\r\n                },\r\n                refresh: function(options) {\r\n                    if (true === options) {\r\n                        options = {\r\n                            reload: true,\r\n                            changesOnly: true\r\n                        }\r\n                    } else if (!options) {\r\n                        options = {\r\n                            lookup: true,\r\n                            selection: true,\r\n                            reload: true\r\n                        }\r\n                    }\r\n                    var that = this;\r\n                    var dataSource = that.getDataSource();\r\n                    var changesOnly = options.changesOnly;\r\n                    var d = new Deferred;\r\n                    var customizeLoadResult = function() {\r\n                        that._repaintChangesOnly = !!changesOnly\r\n                    };\r\n                    when(!options.lookup || that._columnsController.refresh()).always((function() {\r\n                        if (options.load || options.reload) {\r\n                            dataSource && dataSource.on(\"customizeLoadResult\", customizeLoadResult);\r\n                            when(that.reload(options.reload, changesOnly)).always((function() {\r\n                                dataSource && dataSource.off(\"customizeLoadResult\", customizeLoadResult);\r\n                                that._repaintChangesOnly = void 0\r\n                            })).done(d.resolve).fail(d.reject)\r\n                        } else {\r\n                            that.updateItems({\r\n                                repaintChangesOnly: options.changesOnly\r\n                            });\r\n                            d.resolve()\r\n                        }\r\n                    }));\r\n                    return d.promise()\r\n                },\r\n                getVisibleRows: function() {\r\n                    return this.items()\r\n                },\r\n                _disposeDataSource: function() {\r\n                    this.setDataSource(null)\r\n                },\r\n                dispose: function() {\r\n                    this._disposeDataSource();\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                repaintRows: function(rowIndexes, changesOnly) {\r\n                    rowIndexes = Array.isArray(rowIndexes) ? rowIndexes : [rowIndexes];\r\n                    if (rowIndexes.length > 1 || isDefined(rowIndexes[0])) {\r\n                        this.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: rowIndexes,\r\n                            isFullUpdate: !changesOnly\r\n                        })\r\n                    }\r\n                },\r\n                skipProcessingPagingChange: function(fullName) {\r\n                    return this._skipProcessingPagingChange && (\"paging.pageIndex\" === fullName || \"paging.pageSize\" === fullName)\r\n                },\r\n                getUserState: function() {\r\n                    return {\r\n                        searchText: this.option(\"searchPanel.text\"),\r\n                        pageIndex: this.pageIndex(),\r\n                        pageSize: this.pageSize()\r\n                    }\r\n                },\r\n                getCachedStoreData: function() {\r\n                    return this._dataSource && this._dataSource.getCachedStoreData()\r\n                },\r\n                isLastPageLoaded: function() {\r\n                    var pageIndex = this.pageIndex();\r\n                    var pageCount = this.pageCount();\r\n                    return pageIndex === pageCount - 1\r\n                }\r\n            };\r\n            gridCoreUtils.proxyMethod(members, \"load\");\r\n            gridCoreUtils.proxyMethod(members, \"reload\");\r\n            gridCoreUtils.proxyMethod(members, \"push\");\r\n            gridCoreUtils.proxyMethod(members, \"itemsCount\", 0);\r\n            gridCoreUtils.proxyMethod(members, \"totalItemsCount\", 0);\r\n            gridCoreUtils.proxyMethod(members, \"hasKnownLastPage\", true);\r\n            gridCoreUtils.proxyMethod(members, \"isLoaded\", true);\r\n            gridCoreUtils.proxyMethod(members, \"totalCount\", 0);\r\n            return members\r\n        }())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.data_controller.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport dataSourceAdapterProvider from \"./ui.data_grid.data_source_adapter\";\r\nimport {\r\n    dataControllerModule\r\n} from \"../grid_core/ui.grid_core.data_controller\";\r\nexport var DataController = dataControllerModule.controllers.data.inherit({\r\n    _getDataSourceAdapter: function() {\r\n        return dataSourceAdapterProvider\r\n    },\r\n    _getSpecificDataSourceOption: function() {\r\n        var dataSource = this.option(\"dataSource\");\r\n        if (dataSource && !Array.isArray(dataSource) && this.option(\"keyExpr\")) {\r\n            errors.log(\"W1011\")\r\n        }\r\n        return this.callBase()\r\n    }\r\n});\r\ngridCore.registerModule(\"data\", {\r\n    defaultOptions: dataControllerModule.defaultOptions,\r\n    controllers: {\r\n        data: DataController\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.sorting_mixin.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport $ from \"../../core/renderer\";\r\nvar SORT_CLASS = \"dx-sort\";\r\nvar SORT_NONE_CLASS = \"dx-sort-none\";\r\nvar SORTUP_CLASS = \"dx-sort-up\";\r\nvar SORTDOWN_CLASS = \"dx-sort-down\";\r\nvar SORT_INDEX_CLASS = \"dx-sort-index\";\r\nvar SORT_INDEX_ICON_CLASS = \"dx-sort-index-icon\";\r\nvar HEADERS_ACTION_CLASS = \"action\";\r\nexport default {\r\n    _applyColumnState: function(options) {\r\n        var ariaSortState;\r\n        var $sortIndicator;\r\n        var sortingMode = this.option(\"sorting.mode\");\r\n        var rootElement = options.rootElement;\r\n        var column = options.column;\r\n        var $indicatorsContainer = this._getIndicatorContainer(rootElement);\r\n        if (\"sort\" === options.name) {\r\n            rootElement.find(\".\" + SORT_CLASS).remove();\r\n            !$indicatorsContainer.children().length && $indicatorsContainer.remove();\r\n            var isSortingAllowed = \"none\" !== sortingMode && column.allowSorting;\r\n            if (!isDefined(column.groupIndex) && (isSortingAllowed || isDefined(column.sortOrder))) {\r\n                ariaSortState = \"asc\" === column.sortOrder ? \"ascending\" : \"descending\";\r\n                $sortIndicator = this.callBase(options).toggleClass(SORTUP_CLASS, \"asc\" === column.sortOrder).toggleClass(SORTDOWN_CLASS, \"desc\" === column.sortOrder);\r\n                var hasSeveralSortIndexes = this.getController && !!this.getController(\"columns\").columnOption(\"sortIndex:1\");\r\n                if (hasSeveralSortIndexes && this.option(\"sorting.showSortIndexes\") && column.sortIndex >= 0) {\r\n                    $(\"<span>\").addClass(SORT_INDEX_ICON_CLASS).text(column.sortIndex + 1).appendTo($sortIndicator);\r\n                    $sortIndicator.addClass(SORT_INDEX_CLASS)\r\n                }\r\n                if (isSortingAllowed) {\r\n                    options.rootElement.addClass(this.addWidgetPrefix(HEADERS_ACTION_CLASS))\r\n                }\r\n            }\r\n            if (!isDefined(column.sortOrder)) {\r\n                this.setAria(\"sort\", \"none\", rootElement)\r\n            } else {\r\n                this.setAria(\"sort\", ariaSortState, rootElement)\r\n            }\r\n            return $sortIndicator\r\n        } else {\r\n            return this.callBase(options)\r\n        }\r\n    },\r\n    _getIndicatorClassName: function(name) {\r\n        if (\"sort\" === name) {\r\n            return SORT_CLASS\r\n        } else if (\"sortIndex\" === name) {\r\n            return SORT_INDEX_ICON_CLASS\r\n        }\r\n        return this.callBase(name)\r\n    },\r\n    _renderIndicator: function(options) {\r\n        var column = options.column;\r\n        var $container = options.container;\r\n        var $indicator = options.indicator;\r\n        if (\"sort\" === options.name) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\");\r\n            if (!isDefined(column.sortOrder)) {\r\n                $indicator && $indicator.addClass(SORT_NONE_CLASS)\r\n            }\r\n            if ($container.children().length && (!rtlEnabled && \"left\" === options.columnAlignment || rtlEnabled && \"right\" === options.columnAlignment)) {\r\n                $container.prepend($indicator);\r\n                return\r\n            }\r\n        }\r\n        this.callBase(options)\r\n    },\r\n    _updateIndicator: function($cell, column, indicatorName) {\r\n        if (\"sort\" === indicatorName && isDefined(column.groupIndex)) {\r\n            return\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _getIndicatorElements: function($cell, returnAll) {\r\n        var $indicatorElements = this.callBase($cell);\r\n        return returnAll ? $indicatorElements : $indicatorElements && $indicatorElements.not(\".\" + SORT_NONE_CLASS)\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.sorting.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport sortingMixin from \"../grid_core/ui.grid_core.sorting_mixin\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    addNamespace,\r\n    isCommandKeyPressed\r\n} from \"../../events/utils/index\";\r\nvar COLUMN_HEADERS_VIEW_NAMESPACE = \"dxDataGridColumnHeadersView\";\r\nvar ColumnHeadersViewSortingExtender = extend({}, sortingMixin, {\r\n    _createRow(row) {\r\n        var $row = this.callBase(row);\r\n        if (\"header\" === row.rowType) {\r\n            eventsEngine.on($row, addNamespace(clickEventName, COLUMN_HEADERS_VIEW_NAMESPACE), \"td\", this.createAction(e => {\r\n                this._processHeaderAction(e.event, $row)\r\n            }))\r\n        }\r\n        return $row\r\n    },\r\n    _processHeaderAction: function(event, $row) {\r\n        if ($(event.currentTarget).parent().get(0) !== $row.get(0)) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var keyName = null;\r\n        var $cellElementFromEvent = $(event.currentTarget);\r\n        var rowIndex = $cellElementFromEvent.parent().index();\r\n        var columnIndex = -1;\r\n        [].slice.call(that.getCellElements(rowIndex)).some(($cellElement, index) => {\r\n            if ($cellElement === $cellElementFromEvent.get(0)) {\r\n                columnIndex = index;\r\n                return true\r\n            }\r\n        });\r\n        var visibleColumns = that._columnsController.getVisibleColumns(rowIndex);\r\n        var column = visibleColumns[columnIndex];\r\n        var editingController = that.getController(\"editing\");\r\n        var editingMode = that.option(\"editing.mode\");\r\n        var isCellEditing = editingController && editingController.isEditing() && (\"batch\" === editingMode || \"cell\" === editingMode);\r\n        if (isCellEditing || !that._isSortableElement($(event.target))) {\r\n            return\r\n        }\r\n        if (column && !isDefined(column.groupIndex) && !column.command) {\r\n            if (event.shiftKey) {\r\n                keyName = \"shift\"\r\n            } else if (isCommandKeyPressed(event)) {\r\n                keyName = \"ctrl\"\r\n            }\r\n            setTimeout(() => {\r\n                that._columnsController.changeSortOrder(column.index, keyName)\r\n            })\r\n        }\r\n    },\r\n    _renderCellContent($cell, options) {\r\n        var column = options.column;\r\n        if (!column.command && \"header\" === options.rowType) {\r\n            this._applyColumnState({\r\n                name: \"sort\",\r\n                rootElement: $cell,\r\n                column: column,\r\n                showColumnLines: this.option(\"showColumnLines\")\r\n            })\r\n        }\r\n        this.callBase($cell, options)\r\n    },\r\n    _columnOptionChanged(e) {\r\n        var changeTypes = e.changeTypes;\r\n        if (1 === changeTypes.length && changeTypes.sorting) {\r\n            this._updateIndicators(\"sort\");\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"sorting\":\r\n                this._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nvar HeaderPanelSortingExtender = extend({}, sortingMixin, {\r\n    _createGroupPanelItem($rootElement, groupColumn) {\r\n        var that = this;\r\n        var $item = that.callBase(...arguments);\r\n        eventsEngine.on($item, addNamespace(clickEventName, \"dxDataGridHeaderPanel\"), that.createAction(() => {\r\n            that._processGroupItemAction(groupColumn.index)\r\n        }));\r\n        that._applyColumnState({\r\n            name: \"sort\",\r\n            rootElement: $item,\r\n            column: {\r\n                alignment: that.option(\"rtlEnabled\") ? \"right\" : \"left\",\r\n                allowSorting: groupColumn.allowSorting,\r\n                sortOrder: \"desc\" === groupColumn.sortOrder ? \"desc\" : \"asc\"\r\n            },\r\n            showColumnLines: true\r\n        });\r\n        return $item\r\n    },\r\n    _processGroupItemAction(groupColumnIndex) {\r\n        setTimeout(() => this.getController(\"columns\").changeSortOrder(groupColumnIndex))\r\n    },\r\n    optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"sorting\":\r\n                this._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nexport var sortingModule = {\r\n    defaultOptions: () => ({\r\n        sorting: {\r\n            mode: \"single\",\r\n            ascendingText: messageLocalization.format(\"dxDataGrid-sortingAscendingText\"),\r\n            descendingText: messageLocalization.format(\"dxDataGrid-sortingDescendingText\"),\r\n            clearText: messageLocalization.format(\"dxDataGrid-sortingClearText\"),\r\n            showSortIndexes: true\r\n        }\r\n    }),\r\n    extenders: {\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewSortingExtender,\r\n            headerPanel: HeaderPanelSortingExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.sorting.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    sortingModule\r\n} from \"../grid_core/ui.grid_core.sorting\";\r\ngridCore.registerModule(\"sorting\", sortingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.rows.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    getHeight,\r\n    getOuterHeight,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow,\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    deferRender,\r\n    deferUpdate\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    setHeight\r\n} from \"../../core/utils/style\";\r\nimport {\r\n    isDefined,\r\n    isNumeric,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect,\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    isEmpty\r\n} from \"../../core/utils/string\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    ColumnsView\r\n} from \"./ui.grid_core.columns_view\";\r\nimport Scrollable from \"../scroll_view/ui.scrollable\";\r\nimport {\r\n    removeEvent\r\n} from \"../../events/remove\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport browser from \"../../core/utils/browser\";\r\nvar ROWS_VIEW_CLASS = \"rowsview\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar NOWRAP_CLASS = \"nowrap\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar GROUP_CELL_CLASS = \"dx-group-cell\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar FREE_SPACE_CLASS = \"dx-freespace-row\";\r\nvar ROW_LINES_CLASS = \"dx-row-lines\";\r\nvar COLUMN_LINES_CLASS = \"dx-column-lines\";\r\nvar ROW_ALTERNATION_CLASS = \"dx-row-alt\";\r\nvar LAST_ROW_BORDER = \"dx-last-row-border\";\r\nvar EMPTY_CLASS = \"dx-empty\";\r\nvar ROW_INSERTED_ANIMATION_CLASS = \"row-inserted-animation\";\r\nvar LOADPANEL_HIDE_TIMEOUT = 200;\r\n\r\nfunction getMaxHorizontalScrollOffset(scrollable) {\r\n    return scrollable ? Math.round(scrollable.scrollWidth() - scrollable.clientWidth()) : 0\r\n}\r\nexport var rowsModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            hoverStateEnabled: false,\r\n            scrolling: {\r\n                useNative: \"auto\"\r\n            },\r\n            loadPanel: {\r\n                enabled: \"auto\",\r\n                text: messageLocalization.format(\"Loading\"),\r\n                width: 200,\r\n                height: 90,\r\n                showIndicator: true,\r\n                indicatorSrc: \"\",\r\n                showPane: true\r\n            },\r\n            dataRowTemplate: null,\r\n            columnAutoWidth: false,\r\n            noDataText: messageLocalization.format(\"dxDataGrid-noDataText\"),\r\n            wordWrapEnabled: false,\r\n            showColumnLines: true,\r\n            showRowLines: false,\r\n            rowAlternationEnabled: false,\r\n            activeStateEnabled: false,\r\n            twoWayBindingEnabled: true\r\n        }\r\n    },\r\n    views: {\r\n        rowsView: ColumnsView.inherit(function() {\r\n            var defaultCellTemplate = function($container, options) {\r\n                var isDataTextEmpty = isEmpty(options.text) && \"data\" === options.rowType;\r\n                var text = options.text;\r\n                var container = $container.get(0);\r\n                if (isDataTextEmpty) {\r\n                    gridCoreUtils.setEmptyText($container)\r\n                } else if (options.column.encodeHtml) {\r\n                    container.textContent = text\r\n                } else {\r\n                    container.innerHTML = text\r\n                }\r\n            };\r\n            return {\r\n                _getDefaultTemplate: function(column) {\r\n                    switch (column.command) {\r\n                        case \"empty\":\r\n                            return function(container) {\r\n                                container.html(\"&nbsp;\")\r\n                            };\r\n                        default:\r\n                            return defaultCellTemplate\r\n                    }\r\n                },\r\n                _getDefaultGroupTemplate: function(column) {\r\n                    var summaryTexts = this.option(\"summary.texts\");\r\n                    return function($container, options) {\r\n                        var data = options.data;\r\n                        var text = options.column.caption + \": \" + options.text;\r\n                        var container = $container.get(0);\r\n                        if (options.summaryItems && options.summaryItems.length) {\r\n                            text += \" \" + gridCoreUtils.getGroupRowSummaryText(options.summaryItems, summaryTexts)\r\n                        }\r\n                        if (data) {\r\n                            if (options.groupContinuedMessage && options.groupContinuesMessage) {\r\n                                text += \" (\" + options.groupContinuedMessage + \". \" + options.groupContinuesMessage + \")\"\r\n                            } else if (options.groupContinuesMessage) {\r\n                                text += \" (\" + options.groupContinuesMessage + \")\"\r\n                            } else if (options.groupContinuedMessage) {\r\n                                text += \" (\" + options.groupContinuedMessage + \")\"\r\n                            }\r\n                        }\r\n                        $container.addClass(GROUP_CELL_CLASS);\r\n                        if (column.encodeHtml) {\r\n                            container.textContent = text\r\n                        } else {\r\n                            container.innerHTML = text\r\n                        }\r\n                    }\r\n                },\r\n                _update: function() {},\r\n                _getCellTemplate: function(options) {\r\n                    var column = options.column;\r\n                    var template;\r\n                    if (\"group\" === options.rowType && isDefined(column.groupIndex) && !column.showWhenGrouped && !column.command) {\r\n                        template = column.groupCellTemplate || {\r\n                            allowRenderToDetachedContainer: true,\r\n                            render: this._getDefaultGroupTemplate(column)\r\n                        }\r\n                    } else if ((\"data\" === options.rowType || column.command) && column.cellTemplate) {\r\n                        template = column.cellTemplate\r\n                    } else {\r\n                        template = {\r\n                            allowRenderToDetachedContainer: true,\r\n                            render: this._getDefaultTemplate(column)\r\n                        }\r\n                    }\r\n                    return template\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var isGroup = \"group\" === row.rowType;\r\n                        var isDataRow = \"data\" === row.rowType;\r\n                        isDataRow && $row.addClass(DATA_ROW_CLASS);\r\n                        isDataRow && this.option(\"showRowLines\") && $row.addClass(ROW_LINES_CLASS);\r\n                        this.option(\"showColumnLines\") && $row.addClass(COLUMN_LINES_CLASS);\r\n                        if (false === row.visible) {\r\n                            $row.hide()\r\n                        }\r\n                        if (isGroup) {\r\n                            $row.addClass(GROUP_ROW_CLASS);\r\n                            var isRowExpanded = row.isExpanded;\r\n                            this.setAria(\"role\", \"row\", $row);\r\n                            this.setAria(\"expanded\", isDefined(isRowExpanded) && isRowExpanded.toString(), $row)\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _rowPrepared: function($row, rowOptions, row) {\r\n                    if (\"data\" === rowOptions.rowType) {\r\n                        if (this.option(\"rowAlternationEnabled\")) {\r\n                            this._isAltRow(row) && $row.addClass(ROW_ALTERNATION_CLASS);\r\n                            rowOptions.watch && rowOptions.watch(() => this._isAltRow(row), value => {\r\n                                $row.toggleClass(ROW_ALTERNATION_CLASS, value)\r\n                            })\r\n                        }\r\n                        this._setAriaRowIndex(rowOptions, $row);\r\n                        rowOptions.watch && rowOptions.watch(() => rowOptions.rowIndex, () => this._setAriaRowIndex(rowOptions, $row))\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _setAriaRowIndex: function(row, $row) {\r\n                    var component = this.component;\r\n                    var isPagerMode = \"standard\" === component.option(\"scrolling.mode\") && !gridCoreUtils.isVirtualRowRendering(component);\r\n                    var rowIndex = row.rowIndex + 1;\r\n                    if (isPagerMode) {\r\n                        rowIndex = component.pageIndex() * component.pageSize() + rowIndex\r\n                    } else {\r\n                        rowIndex += this._dataController.getRowIndexOffset()\r\n                    }\r\n                    this.setAria(\"rowindex\", rowIndex, $row)\r\n                },\r\n                _afterRowPrepared: function(e) {\r\n                    var arg = e.args[0];\r\n                    var dataController = this._dataController;\r\n                    var row = dataController.getVisibleRows()[arg.rowIndex];\r\n                    var watch = this.option(\"integrationOptions.watchMethod\");\r\n                    if (!arg.data || \"data\" !== arg.rowType || arg.isNewRow || !this.option(\"twoWayBindingEnabled\") || !watch || !row) {\r\n                        return\r\n                    }\r\n                    var dispose = watch(() => dataController.generateDataValues(arg.data, arg.columns), () => {\r\n                        dataController.repaintRows([row.rowIndex], this.option(\"repaintChangesOnly\"))\r\n                    }, {\r\n                        deep: true,\r\n                        skipImmediate: true\r\n                    });\r\n                    eventsEngine.on(arg.rowElement, removeEvent, dispose)\r\n                },\r\n                _renderScrollable: function(force) {\r\n                    var $element = this.element();\r\n                    if (!$element.children().length) {\r\n                        $element.append(\"<div>\")\r\n                    }\r\n                    if (force || !this._loadPanel) {\r\n                        this._renderLoadPanel($element, $element.parent(), this._dataController.isLocalStore())\r\n                    }\r\n                    if ((force || !this.getScrollable()) && this._dataController.isLoaded()) {\r\n                        var columns = this.getColumns();\r\n                        var allColumnsHasWidth = true;\r\n                        for (var i = 0; i < columns.length; i++) {\r\n                            if (!columns[i].width && !columns[i].minWidth) {\r\n                                allColumnsHasWidth = false;\r\n                                break\r\n                            }\r\n                        }\r\n                        if (this.option(\"columnAutoWidth\") || this._hasHeight || allColumnsHasWidth || this._columnsController._isColumnFixing()) {\r\n                            this._renderScrollableCore($element)\r\n                        }\r\n                    }\r\n                },\r\n                _handleScroll: function(e) {\r\n                    var rtlEnabled = this.option(\"rtlEnabled\");\r\n                    var isNativeScrolling = e.component.option(\"useNative\");\r\n                    this._scrollTop = e.scrollOffset.top;\r\n                    this._scrollLeft = e.scrollOffset.left;\r\n                    var scrollLeft = e.scrollOffset.left;\r\n                    if (rtlEnabled) {\r\n                        this._scrollRight = getMaxHorizontalScrollOffset(e.component) - this._scrollLeft;\r\n                        if (isNativeScrolling) {\r\n                            scrollLeft = -this._scrollRight\r\n                        }\r\n                        if (!this.isScrollbarVisible(true)) {\r\n                            this._scrollLeft = -1\r\n                        }\r\n                    }\r\n                    this.scrollChanged.fire(_extends({}, e.scrollOffset, {\r\n                        left: scrollLeft\r\n                    }), this.name)\r\n                },\r\n                _renderScrollableCore: function($element) {\r\n                    var dxScrollableOptions = this._createScrollableOptions();\r\n                    var scrollHandler = this._handleScroll.bind(this);\r\n                    dxScrollableOptions.onScroll = scrollHandler;\r\n                    this._scrollable = this._createComponent($element, Scrollable, dxScrollableOptions);\r\n                    this._scrollableContainer = this._scrollable && $(this._scrollable.container())\r\n                },\r\n                _renderLoadPanel: gridCoreUtils.renderLoadPanel,\r\n                _renderContent: function(contentElement, tableElement) {\r\n                    contentElement.empty().append(tableElement);\r\n                    return this._findContentElement()\r\n                },\r\n                _updateContent: function(newTableElement, change) {\r\n                    var that = this;\r\n                    var tableElement = that.getTableElement();\r\n                    var contentElement = that._findContentElement();\r\n                    var changeType = change && change.changeType;\r\n                    var executors = [];\r\n                    var highlightChanges = this.option(\"highlightChanges\");\r\n                    var rowInsertedClass = this.addWidgetPrefix(ROW_INSERTED_ANIMATION_CLASS);\r\n                    switch (changeType) {\r\n                        case \"update\":\r\n                            each(change.rowIndices, (function(index, rowIndex) {\r\n                                var $newRowElement = that._getRowElements(newTableElement).eq(index);\r\n                                var changeType = change.changeTypes && change.changeTypes[index];\r\n                                var item = change.items && change.items[index];\r\n                                executors.push((function() {\r\n                                    var $rowsElement = that._getRowElements();\r\n                                    var $rowElement = $rowsElement.eq(rowIndex);\r\n                                    switch (changeType) {\r\n                                        case \"update\":\r\n                                            if (item) {\r\n                                                var columnIndices = change.columnIndices && change.columnIndices[index];\r\n                                                if (isDefined(item.visible) && item.visible !== $rowElement.is(\":visible\")) {\r\n                                                    $rowElement.toggle(item.visible)\r\n                                                } else if (columnIndices) {\r\n                                                    that._updateCells($rowElement, $newRowElement, columnIndices)\r\n                                                } else {\r\n                                                    $rowElement.replaceWith($newRowElement)\r\n                                                }\r\n                                            }\r\n                                            break;\r\n                                        case \"insert\":\r\n                                            if (!$rowsElement.length) {\r\n                                                if (tableElement) {\r\n                                                    var target = $newRowElement.is(\"tbody\") ? tableElement : tableElement.children(\"tbody\");\r\n                                                    $newRowElement.prependTo(target)\r\n                                                }\r\n                                            } else if ($rowElement.length) {\r\n                                                $newRowElement.insertBefore($rowElement)\r\n                                            } else {\r\n                                                $newRowElement.insertAfter($rowsElement.last())\r\n                                            }\r\n                                            if (highlightChanges && change.isLiveUpdate) {\r\n                                                $newRowElement.addClass(rowInsertedClass)\r\n                                            }\r\n                                            break;\r\n                                        case \"remove\":\r\n                                            $rowElement.remove()\r\n                                    }\r\n                                }))\r\n                            }));\r\n                            each(executors, (function() {\r\n                                this()\r\n                            }));\r\n                            newTableElement.remove();\r\n                            break;\r\n                        default:\r\n                            that.setTableElement(newTableElement);\r\n                            contentElement.addClass(that.addWidgetPrefix(CONTENT_CLASS));\r\n                            that._renderContent(contentElement, newTableElement)\r\n                    }\r\n                },\r\n                _createEmptyRow: function(className, isFixed, height) {\r\n                    var $cell;\r\n                    var $row = this._createRow();\r\n                    var columns = isFixed ? this.getFixedColumns() : this.getColumns();\r\n                    $row.addClass(className).toggleClass(COLUMN_LINES_CLASS, this.option(\"showColumnLines\"));\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        $cell = this._createCell({\r\n                            column: columns[i],\r\n                            rowType: \"freeSpace\",\r\n                            columnIndex: i,\r\n                            columns: columns\r\n                        });\r\n                        isNumeric(height) && $cell.css(\"height\", height);\r\n                        $row.append($cell)\r\n                    }\r\n                    this.setAria(\"role\", \"presentation\", $row);\r\n                    return $row\r\n                },\r\n                _appendEmptyRow: function($table, $emptyRow, location) {\r\n                    var $tBodies = this._getBodies($table);\r\n                    var isTableContainer = !$tBodies.length || $emptyRow.is(\"tbody\");\r\n                    var $container = isTableContainer ? $table : $tBodies;\r\n                    if (\"top\" === location) {\r\n                        $container.first().prepend($emptyRow);\r\n                        if (isTableContainer) {\r\n                            var $colgroup = $container.children(\"colgroup\");\r\n                            $container.prepend($colgroup)\r\n                        }\r\n                    } else {\r\n                        $container.last().append($emptyRow)\r\n                    }\r\n                },\r\n                _renderFreeSpaceRow: function($tableElement) {\r\n                    var $freeSpaceRowElement = this._createEmptyRow(FREE_SPACE_CLASS);\r\n                    $freeSpaceRowElement = this._wrapRowIfNeed($tableElement, $freeSpaceRowElement);\r\n                    this._appendEmptyRow($tableElement, $freeSpaceRowElement)\r\n                },\r\n                _checkRowKeys: function(options) {\r\n                    var that = this;\r\n                    var rows = that._getRows(options);\r\n                    var keyExpr = that._dataController.store() && that._dataController.store().key();\r\n                    keyExpr && rows.some((function(row) {\r\n                        if (\"data\" === row.rowType && void 0 === row.key) {\r\n                            that._dataController.fireError(\"E1046\", keyExpr);\r\n                            return true\r\n                        }\r\n                    }))\r\n                },\r\n                _needUpdateRowHeight: function(itemsCount) {\r\n                    return itemsCount > 0 && !this._rowHeight\r\n                },\r\n                _getRowsHeight: function($tableElement) {\r\n                    var $rowElements = $tableElement.children(\"tbody\").children().not(\".dx-virtual-row\").not(\".\" + FREE_SPACE_CLASS);\r\n                    return $rowElements.toArray().reduce((function(sum, row) {\r\n                        return sum + getBoundingRect(row).height\r\n                    }), 0)\r\n                },\r\n                _updateRowHeight: function() {\r\n                    var $tableElement = this.getTableElement();\r\n                    var itemsCount = this._dataController.items().length;\r\n                    if ($tableElement && this._needUpdateRowHeight(itemsCount)) {\r\n                        var rowsHeight = this._getRowsHeight($tableElement);\r\n                        this._rowHeight = rowsHeight / itemsCount\r\n                    }\r\n                },\r\n                _findContentElement: function() {\r\n                    var $content = this.element();\r\n                    var scrollable = this.getScrollable();\r\n                    if ($content) {\r\n                        if (scrollable) {\r\n                            $content = $(scrollable.content())\r\n                        }\r\n                        return $content.children().first()\r\n                    }\r\n                },\r\n                _getRowElements: function(tableElement) {\r\n                    var $rows = this.callBase(tableElement);\r\n                    return $rows && $rows.not(\".\" + FREE_SPACE_CLASS)\r\n                },\r\n                _getFreeSpaceRowElements: function($table) {\r\n                    var tableElements = $table || this.getTableElements();\r\n                    return tableElements && tableElements.children(\"tbody\").children(\".\" + FREE_SPACE_CLASS)\r\n                },\r\n                _getNoDataText: function() {\r\n                    return this.option(\"noDataText\")\r\n                },\r\n                _rowClick: function(e) {\r\n                    var item = this._dataController.items()[e.rowIndex] || {};\r\n                    this.executeAction(\"onRowClick\", extend({\r\n                        evaluate: function(expr) {\r\n                            var getter = compileGetter(expr);\r\n                            return getter(item.data)\r\n                        }\r\n                    }, e, item))\r\n                },\r\n                _rowDblClick: function(e) {\r\n                    var item = this._dataController.items()[e.rowIndex] || {};\r\n                    this.executeAction(\"onRowDblClick\", extend({}, e, item))\r\n                },\r\n                _getColumnsCountBeforeGroups: function(columns) {\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        if (\"groupExpand\" === columns[i].type) {\r\n                            return i\r\n                        }\r\n                    }\r\n                    return 0\r\n                },\r\n                _getGroupCellOptions: function(options) {\r\n                    var columnsCountBeforeGroups = this._getColumnsCountBeforeGroups(options.columns);\r\n                    var columnIndex = (options.row.groupIndex || 0) + columnsCountBeforeGroups;\r\n                    return {\r\n                        columnIndex: columnIndex,\r\n                        colspan: options.columns.length - columnIndex - 1\r\n                    }\r\n                },\r\n                _renderCells: function($row, options) {\r\n                    if (\"group\" === options.row.rowType) {\r\n                        this._renderGroupedCells($row, options)\r\n                    } else if (options.row.values) {\r\n                        this.callBase($row, options)\r\n                    }\r\n                },\r\n                _renderGroupedCells: function($row, options) {\r\n                    var row = options.row;\r\n                    var expandColumn;\r\n                    var columns = options.columns;\r\n                    var rowIndex = row.rowIndex;\r\n                    var isExpanded;\r\n                    var groupCellOptions = this._getGroupCellOptions(options);\r\n                    for (var i = 0; i <= groupCellOptions.columnIndex; i++) {\r\n                        if (i === groupCellOptions.columnIndex && columns[i].allowCollapsing && \"infinite\" !== options.scrollingMode) {\r\n                            isExpanded = !!row.isExpanded;\r\n                            expandColumn = columns[i]\r\n                        } else {\r\n                            isExpanded = null;\r\n                            expandColumn = {\r\n                                command: \"expand\",\r\n                                cssClass: columns[i].cssClass\r\n                            }\r\n                        }\r\n                        if (this._needRenderCell(i, options.columnIndices)) {\r\n                            this._renderCell($row, {\r\n                                value: isExpanded,\r\n                                row: row,\r\n                                rowIndex: rowIndex,\r\n                                column: expandColumn,\r\n                                columnIndex: i,\r\n                                columnIndices: options.columnIndices\r\n                            })\r\n                        }\r\n                    }\r\n                    var groupColumnAlignment = getDefaultAlignment(this.option(\"rtlEnabled\"));\r\n                    var groupColumn = extend({}, columns[groupCellOptions.columnIndex], {\r\n                        command: null,\r\n                        type: null,\r\n                        cssClass: null,\r\n                        width: null,\r\n                        showWhenGrouped: false,\r\n                        alignment: groupColumnAlignment\r\n                    });\r\n                    if (groupCellOptions.colspan > 1) {\r\n                        groupColumn.colspan = groupCellOptions.colspan\r\n                    }\r\n                    if (this._needRenderCell(groupCellOptions.columnIndex + 1, options.columnIndices)) {\r\n                        this._renderCell($row, {\r\n                            value: row.values[row.groupIndex],\r\n                            row: row,\r\n                            rowIndex: rowIndex,\r\n                            column: groupColumn,\r\n                            columnIndex: groupCellOptions.columnIndex + 1,\r\n                            columnIndices: options.columnIndices\r\n                        })\r\n                    }\r\n                },\r\n                _renderRows: function($table, options) {\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    this.callBase($table, extend({\r\n                        scrollingMode: scrollingMode\r\n                    }, options));\r\n                    this._checkRowKeys(options.change);\r\n                    this._renderFreeSpaceRow($table);\r\n                    if (!this._hasHeight) {\r\n                        this.updateFreeSpaceRowHeight($table)\r\n                    }\r\n                },\r\n                _renderDataRowByTemplate($table, options, dataRowTemplate) {\r\n                    var row = options.row;\r\n                    var rowOptions = extend({\r\n                        columns: options.columns\r\n                    }, row);\r\n                    var $tbody = this._createRow(row, \"tbody\");\r\n                    $tbody.appendTo($table);\r\n                    this.renderTemplate($tbody, dataRowTemplate, rowOptions, true, options.change);\r\n                    this._rowPrepared($tbody, rowOptions, options.row)\r\n                },\r\n                _renderRow: function($table, options) {\r\n                    var row = options.row;\r\n                    var rowTemplate = this.option().rowTemplate;\r\n                    var dataRowTemplate = this.option(\"dataRowTemplate\");\r\n                    if (\"data\" === row.rowType && dataRowTemplate) {\r\n                        this._renderDataRowByTemplate($table, options, dataRowTemplate)\r\n                    } else if ((\"data\" === row.rowType || \"group\" === row.rowType) && !isDefined(row.groupIndex) && rowTemplate) {\r\n                        this.renderTemplate($table, rowTemplate, extend({\r\n                            columns: options.columns\r\n                        }, row), true)\r\n                    } else {\r\n                        this.callBase($table, options)\r\n                    }\r\n                },\r\n                _renderTable: function(options) {\r\n                    var that = this;\r\n                    var $table = that.callBase(options);\r\n                    if (!isDefined(that.getTableElement())) {\r\n                        that.setTableElement($table);\r\n                        that._renderScrollable(true);\r\n                        that.resizeCompleted.add((function resizeCompletedHandler() {\r\n                            var scrollableInstance = that.getScrollable();\r\n                            if (scrollableInstance && that.element().closest(getWindow().document).length) {\r\n                                that.resizeCompleted.remove(resizeCompletedHandler);\r\n                                scrollableInstance._visibilityChanged(true)\r\n                            }\r\n                        }))\r\n                    } else {\r\n                        that._renderScrollable()\r\n                    }\r\n                    return $table\r\n                },\r\n                _createTable: function() {\r\n                    var $table = this.callBase.apply(this, arguments);\r\n                    if (this.option().rowTemplate || this.option().dataRowTemplate) {\r\n                        $table.appendTo(this.component.$element())\r\n                    }\r\n                    return $table\r\n                },\r\n                _renderCore: function(change) {\r\n                    var $element = this.element();\r\n                    $element.addClass(this.addWidgetPrefix(ROWS_VIEW_CLASS)).toggleClass(this.addWidgetPrefix(NOWRAP_CLASS), !this.option(\"wordWrapEnabled\"));\r\n                    $element.toggleClass(EMPTY_CLASS, this._dataController.isEmpty());\r\n                    this.setAria(\"role\", \"presentation\", $element);\r\n                    var $table = this._renderTable({\r\n                        change: change\r\n                    });\r\n                    this._updateContent($table, change);\r\n                    this.callBase(change);\r\n                    this._lastColumnWidths = null\r\n                },\r\n                _getRows: function(change) {\r\n                    return change && change.items || this._dataController.items()\r\n                },\r\n                _getCellOptions: function(options) {\r\n                    var column = options.column;\r\n                    var row = options.row;\r\n                    var data = row.data;\r\n                    var summaryCells = row && row.summaryCells;\r\n                    var value = options.value;\r\n                    var displayValue = gridCoreUtils.getDisplayValue(column, value, data, row.rowType);\r\n                    var parameters = this.callBase(options);\r\n                    parameters.value = value;\r\n                    parameters.oldValue = options.oldValue;\r\n                    parameters.displayValue = displayValue;\r\n                    parameters.row = row;\r\n                    parameters.key = row.key;\r\n                    parameters.data = data;\r\n                    parameters.rowType = row.rowType;\r\n                    parameters.values = row.values;\r\n                    parameters.text = !column.command ? gridCoreUtils.formatValue(displayValue, column) : \"\";\r\n                    parameters.rowIndex = row.rowIndex;\r\n                    parameters.summaryItems = summaryCells && summaryCells[options.columnIndex];\r\n                    parameters.resized = column.resizedCallbacks;\r\n                    if (isDefined(column.groupIndex) && !column.command) {\r\n                        var groupingTextsOptions = this.option(\"grouping.texts\");\r\n                        var scrollingMode = this.option(\"scrolling.mode\");\r\n                        if (\"virtual\" !== scrollingMode && \"infinite\" !== scrollingMode) {\r\n                            parameters.groupContinuesMessage = data && data.isContinuationOnNextPage && groupingTextsOptions && groupingTextsOptions.groupContinuesMessage;\r\n                            parameters.groupContinuedMessage = data && data.isContinuation && groupingTextsOptions && groupingTextsOptions.groupContinuedMessage\r\n                        }\r\n                    }\r\n                    return parameters\r\n                },\r\n                _setRowsOpacityCore: function($rows, visibleColumns, columnIndex, value) {\r\n                    var columnsController = this._columnsController;\r\n                    var columns = columnsController.getColumns();\r\n                    var column = columns && columns[columnIndex];\r\n                    var columnID = column && column.isBand && column.index;\r\n                    each($rows, (function(rowIndex, row) {\r\n                        if (!$(row).hasClass(GROUP_ROW_CLASS)) {\r\n                            for (var i = 0; i < visibleColumns.length; i++) {\r\n                                if (isNumeric(columnID) && columnsController.isParentBandColumn(visibleColumns[i].index, columnID) || visibleColumns[i].index === columnIndex) {\r\n                                    $rows.eq(rowIndex).children().eq(i).css({\r\n                                        opacity: value\r\n                                    });\r\n                                    if (!isNumeric(columnID)) {\r\n                                        break\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }))\r\n                },\r\n                _getDevicePixelRatio: function() {\r\n                    return getWindow().devicePixelRatio\r\n                },\r\n                renderNoDataText: gridCoreUtils.renderNoDataText,\r\n                getCellOptions: function(rowIndex, columnIdentifier) {\r\n                    var rowOptions = this._dataController.items()[rowIndex];\r\n                    var cellOptions;\r\n                    var column;\r\n                    if (rowOptions) {\r\n                        if (isString(columnIdentifier)) {\r\n                            column = this._columnsController.columnOption(columnIdentifier)\r\n                        } else {\r\n                            column = this._columnsController.getVisibleColumns()[columnIdentifier]\r\n                        }\r\n                        if (column) {\r\n                            cellOptions = this._getCellOptions({\r\n                                value: column.calculateCellValue(rowOptions.data),\r\n                                rowIndex: rowOptions.rowIndex,\r\n                                row: rowOptions,\r\n                                column: column\r\n                            })\r\n                        }\r\n                    }\r\n                    return cellOptions\r\n                },\r\n                getRow: function(index) {\r\n                    if (index >= 0) {\r\n                        var rows = this._getRowElements();\r\n                        if (rows.length > index) {\r\n                            return $(rows[index])\r\n                        }\r\n                    }\r\n                },\r\n                updateFreeSpaceRowHeight: function($table) {\r\n                    var dataController = this._dataController;\r\n                    var itemCount = dataController.items(true).length;\r\n                    var contentElement = this._findContentElement();\r\n                    var freeSpaceRowElements = this._getFreeSpaceRowElements($table);\r\n                    if (freeSpaceRowElements && contentElement && dataController.totalCount() >= 0) {\r\n                        var isFreeSpaceRowVisible = false;\r\n                        if (itemCount > 0) {\r\n                            if (!this._hasHeight) {\r\n                                var freeSpaceRowCount = dataController.pageSize() - itemCount;\r\n                                var scrollingMode = this.option(\"scrolling.mode\");\r\n                                if (freeSpaceRowCount > 0 && dataController.pageCount() > 1 && \"virtual\" !== scrollingMode && \"infinite\" !== scrollingMode) {\r\n                                    setHeight(freeSpaceRowElements, freeSpaceRowCount * this._rowHeight);\r\n                                    isFreeSpaceRowVisible = true\r\n                                }\r\n                                if (!isFreeSpaceRowVisible && $table) {\r\n                                    setHeight(freeSpaceRowElements, 0)\r\n                                } else {\r\n                                    freeSpaceRowElements.toggle(isFreeSpaceRowVisible)\r\n                                }\r\n                                this._updateLastRowBorder(isFreeSpaceRowVisible)\r\n                            } else {\r\n                                freeSpaceRowElements.hide();\r\n                                deferUpdate(() => {\r\n                                    var scrollbarWidth = this.getScrollbarWidth(true);\r\n                                    var elementHeightWithoutScrollbar = getHeight(this.element()) - scrollbarWidth;\r\n                                    var contentHeight = getOuterHeight(contentElement);\r\n                                    var showFreeSpaceRow = elementHeightWithoutScrollbar - contentHeight > 0;\r\n                                    var rowsHeight = this._getRowsHeight(contentElement.children().first());\r\n                                    var $tableElement = $table || this.getTableElements();\r\n                                    var borderTopWidth = Math.ceil(parseFloat($tableElement.css(\"borderTopWidth\")));\r\n                                    var heightCorrection = this._getHeightCorrection();\r\n                                    var resultHeight = elementHeightWithoutScrollbar - rowsHeight - borderTopWidth - heightCorrection;\r\n                                    if (showFreeSpaceRow) {\r\n                                        deferRender(() => {\r\n                                            freeSpaceRowElements.css(\"height\", resultHeight);\r\n                                            isFreeSpaceRowVisible = true;\r\n                                            freeSpaceRowElements.show()\r\n                                        })\r\n                                    }\r\n                                    deferRender(() => this._updateLastRowBorder(isFreeSpaceRowVisible))\r\n                                })\r\n                            }\r\n                        } else {\r\n                            freeSpaceRowElements.css(\"height\", 0);\r\n                            freeSpaceRowElements.show();\r\n                            this._updateLastRowBorder(true)\r\n                        }\r\n                    }\r\n                },\r\n                _getHeightCorrection: function() {\r\n                    var isZoomedWebkit = browser.webkit && this._getDevicePixelRatio() >= 2;\r\n                    var isChromeLatest = browser.chrome && browser.version >= 91;\r\n                    var hasExtraBorderTop = browser.mozilla && browser.version >= 70 && !this.option(\"showRowLines\");\r\n                    return isZoomedWebkit || hasExtraBorderTop || isChromeLatest ? 1 : 0\r\n                },\r\n                _columnOptionChanged: function(e) {\r\n                    var optionNames = e.optionNames;\r\n                    if (e.changeTypes.grouping) {\r\n                        return\r\n                    }\r\n                    if (optionNames.width || optionNames.visibleWidth) {\r\n                        this.callBase(e);\r\n                        this._fireColumnResizedCallbacks()\r\n                    }\r\n                },\r\n                getScrollable: function() {\r\n                    return this._scrollable\r\n                },\r\n                init: function() {\r\n                    var that = this;\r\n                    var dataController = that.getController(\"data\");\r\n                    that.callBase();\r\n                    that._editorFactoryController = that.getController(\"editorFactory\");\r\n                    that._rowHeight = 0;\r\n                    that._scrollTop = 0;\r\n                    that._scrollLeft = -1;\r\n                    that._scrollRight = 0;\r\n                    that._hasHeight = false;\r\n                    dataController.loadingChanged.add((function(isLoading, messageText) {\r\n                        that.setLoading(isLoading, messageText)\r\n                    }));\r\n                    dataController.dataSourceChanged.add((function() {\r\n                        if (that._scrollLeft >= 0) {\r\n                            that._handleScroll({\r\n                                component: that.getScrollable(),\r\n                                scrollOffset: {\r\n                                    top: that._scrollTop,\r\n                                    left: that._scrollLeft\r\n                                }\r\n                            })\r\n                        }\r\n                    }))\r\n                },\r\n                _handleDataChanged: function(change) {\r\n                    switch (change.changeType) {\r\n                        case \"refresh\":\r\n                        case \"prepend\":\r\n                        case \"append\":\r\n                        case \"update\":\r\n                            this.render(null, change);\r\n                            break;\r\n                        default:\r\n                            this._update(change)\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    return [\"isScrollbarVisible\", \"getTopVisibleRowData\", \"getScrollbarWidth\", \"getCellElement\", \"getRowElement\", \"getScrollable\"]\r\n                },\r\n                contentWidth: function() {\r\n                    return getWidth(this.element()) - this.getScrollbarWidth()\r\n                },\r\n                getScrollbarWidth: function(isHorizontal) {\r\n                    var scrollableContainer = this._scrollableContainer && this._scrollableContainer.get(0);\r\n                    var scrollbarWidth = 0;\r\n                    if (scrollableContainer) {\r\n                        if (!isHorizontal) {\r\n                            scrollbarWidth = scrollableContainer.clientWidth ? scrollableContainer.offsetWidth - scrollableContainer.clientWidth : 0\r\n                        } else {\r\n                            scrollbarWidth = scrollableContainer.clientHeight ? scrollableContainer.offsetHeight - scrollableContainer.clientHeight : 0;\r\n                            scrollbarWidth += (that = this, scrollable = that.getScrollable(), scrollable ? Math.ceil(parseFloat($(scrollable.content()).css(\"paddingBottom\"))) : 0)\r\n                        }\r\n                    }\r\n                    var that, scrollable;\r\n                    return scrollbarWidth > 0 ? scrollbarWidth : 0\r\n                },\r\n                _fireColumnResizedCallbacks: function() {\r\n                    var lastColumnWidths = this._lastColumnWidths || [];\r\n                    var columnWidths = [];\r\n                    var columns = this.getColumns();\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        columnWidths[i] = columns[i].visibleWidth;\r\n                        if (columns[i].resizedCallbacks && !isDefined(columns[i].groupIndex) && lastColumnWidths[i] !== columnWidths[i]) {\r\n                            columns[i].resizedCallbacks.fire(columnWidths[i])\r\n                        }\r\n                    }\r\n                    this._lastColumnWidths = columnWidths\r\n                },\r\n                _updateLastRowBorder: function(isFreeSpaceRowVisible) {\r\n                    if (this.option(\"showBorders\") && this.option(\"showRowLines\") && !isFreeSpaceRowVisible) {\r\n                        this.element().addClass(LAST_ROW_BORDER)\r\n                    } else {\r\n                        this.element().removeClass(LAST_ROW_BORDER)\r\n                    }\r\n                },\r\n                _updateScrollable: function() {\r\n                    var dxScrollable = Scrollable.getInstance(this.element());\r\n                    if (dxScrollable) {\r\n                        dxScrollable.update();\r\n                        this._updateHorizontalScrollPosition()\r\n                    }\r\n                },\r\n                _updateHorizontalScrollPosition: function() {\r\n                    var scrollable = this.getScrollable();\r\n                    var scrollLeft = scrollable && scrollable.scrollOffset().left;\r\n                    var rtlEnabled = this.option(\"rtlEnabled\");\r\n                    if (rtlEnabled) {\r\n                        var maxHorizontalScrollOffset = getMaxHorizontalScrollOffset(scrollable);\r\n                        var scrollRight = maxHorizontalScrollOffset - scrollLeft;\r\n                        if (scrollRight !== this._scrollRight) {\r\n                            this._scrollLeft = maxHorizontalScrollOffset - this._scrollRight\r\n                        }\r\n                    }\r\n                    if (this._scrollLeft >= 0 && scrollLeft !== this._scrollLeft) {\r\n                        scrollable.scrollTo({\r\n                            x: this._scrollLeft\r\n                        })\r\n                    }\r\n                },\r\n                _resizeCore: function() {\r\n                    var that = this;\r\n                    that._fireColumnResizedCallbacks();\r\n                    that._updateRowHeight();\r\n                    deferRender((function() {\r\n                        that._renderScrollable();\r\n                        that.renderNoDataText();\r\n                        that.updateFreeSpaceRowHeight();\r\n                        deferUpdate((function() {\r\n                            that._updateScrollable()\r\n                        }))\r\n                    }))\r\n                },\r\n                scrollTo: function(location) {\r\n                    var $element = this.element();\r\n                    var dxScrollable = $element && Scrollable.getInstance($element);\r\n                    if (dxScrollable) {\r\n                        dxScrollable.scrollTo(location)\r\n                    }\r\n                },\r\n                height: function(_height, hasHeight) {\r\n                    var that = this;\r\n                    var $element = this.element();\r\n                    if (0 === arguments.length) {\r\n                        return $element ? getOuterHeight($element, true) : 0\r\n                    }\r\n                    that._hasHeight = void 0 === hasHeight ? \"auto\" !== _height : hasHeight;\r\n                    if (isDefined(_height) && $element) {\r\n                        setHeight($element, _height)\r\n                    }\r\n                },\r\n                setLoading: function(isLoading, messageText) {\r\n                    var loadPanel = this._loadPanel;\r\n                    var dataController = this._dataController;\r\n                    var loadPanelOptions = this.option(\"loadPanel\") || {};\r\n                    var animation = dataController.isLoaded() ? loadPanelOptions.animation : null;\r\n                    var $element = this.element();\r\n                    if (!hasWindow()) {\r\n                        return\r\n                    }\r\n                    if (!loadPanel && void 0 !== messageText && dataController.isLocalStore() && \"auto\" === loadPanelOptions.enabled && $element) {\r\n                        this._renderLoadPanel($element, $element.parent());\r\n                        loadPanel = this._loadPanel\r\n                    }\r\n                    if (loadPanel) {\r\n                        var visibilityOptions = {\r\n                            message: messageText || loadPanelOptions.text,\r\n                            animation: animation,\r\n                            visible: isLoading\r\n                        };\r\n                        if (isLoading) {\r\n                            visibilityOptions.position = gridCoreUtils.calculateLoadPanelPosition($element)\r\n                        }\r\n                        clearTimeout(this._hideLoadingTimeoutID);\r\n                        if (loadPanel.option(\"visible\") && !isLoading) {\r\n                            this._hideLoadingTimeoutID = setTimeout((function() {\r\n                                loadPanel.option(visibilityOptions)\r\n                            }), LOADPANEL_HIDE_TIMEOUT)\r\n                        } else {\r\n                            loadPanel.option(visibilityOptions)\r\n                        }\r\n                    }\r\n                },\r\n                setRowsOpacity: function(columnIndex, value) {\r\n                    var $rows = this._getRowElements().not(\".\" + GROUP_ROW_CLASS) || [];\r\n                    this._setRowsOpacityCore($rows, this.getColumns(), columnIndex, value)\r\n                },\r\n                _getCellElementsCore: function(rowIndex) {\r\n                    var $cells = this.callBase.apply(this, arguments);\r\n                    if ($cells) {\r\n                        var groupCellIndex = $cells.filter(\".\" + GROUP_CELL_CLASS).index();\r\n                        if (groupCellIndex >= 0 && $cells.length > groupCellIndex + 1) {\r\n                            return $cells.slice(0, groupCellIndex + 1)\r\n                        }\r\n                    }\r\n                    return $cells\r\n                },\r\n                _getBoundaryVisibleItemIndex: function(isTop, isFloor) {\r\n                    var itemIndex = 0;\r\n                    var prevOffset = 0;\r\n                    var offset = 0;\r\n                    var viewportBoundary = this._scrollTop;\r\n                    var $contentElement = this._findContentElement();\r\n                    var contentElementOffsetTop = $contentElement && $contentElement.offset().top;\r\n                    var dataController = this.getController(\"data\");\r\n                    var items = dataController.items();\r\n                    var tableElement = this.getTableElement();\r\n                    if (items.length && tableElement) {\r\n                        var rowElements = this._getRowElements(tableElement).filter(\":visible\");\r\n                        if (!isTop) {\r\n                            var height = this._hasHeight ? getOuterHeight(this.element()) : $(getWindow()).outerHeight();\r\n                            viewportBoundary += height\r\n                        }\r\n                        for (itemIndex = 0; itemIndex < items.length; itemIndex++) {\r\n                            prevOffset = offset;\r\n                            var $rowElement = $(rowElements).eq(itemIndex);\r\n                            if ($rowElement.length) {\r\n                                offset = $rowElement.offset();\r\n                                offset = (isTop ? offset.top : offset.top + getOuterHeight($rowElement)) - contentElementOffsetTop;\r\n                                if (offset > viewportBoundary) {\r\n                                    if (itemIndex) {\r\n                                        if (isFloor || 2 * viewportBoundary < Math.round(offset + prevOffset)) {\r\n                                            itemIndex--\r\n                                        }\r\n                                    }\r\n                                    break\r\n                                }\r\n                            }\r\n                        }\r\n                        if (itemIndex && itemIndex === items.length) {\r\n                            itemIndex--\r\n                        }\r\n                    }\r\n                    return itemIndex\r\n                },\r\n                getTopVisibleItemIndex: function(isFloor) {\r\n                    return this._getBoundaryVisibleItemIndex(true, isFloor)\r\n                },\r\n                getBottomVisibleItemIndex: function(isFloor) {\r\n                    return this._getBoundaryVisibleItemIndex(false, isFloor)\r\n                },\r\n                getTopVisibleRowData: function() {\r\n                    var itemIndex = this.getTopVisibleItemIndex();\r\n                    var items = this._dataController.items();\r\n                    if (items[itemIndex]) {\r\n                        return items[itemIndex].data\r\n                    }\r\n                },\r\n                _scrollToElement: function($element, offset) {\r\n                    var scrollable = this.getScrollable();\r\n                    scrollable && scrollable.scrollToElement($element, offset)\r\n                },\r\n                optionChanged: function(args) {\r\n                    this.callBase(args);\r\n                    switch (args.name) {\r\n                        case \"wordWrapEnabled\":\r\n                        case \"showColumnLines\":\r\n                        case \"showRowLines\":\r\n                        case \"rowAlternationEnabled\":\r\n                        case \"rowTemplate\":\r\n                        case \"dataRowTemplate\":\r\n                        case \"twoWayBindingEnabled\":\r\n                            this._invalidate(true, true);\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"scrolling\":\r\n                            this._rowHeight = null;\r\n                            this._tableElement = null;\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"rtlEnabled\":\r\n                            this._rowHeight = null;\r\n                            this._tableElement = null;\r\n                            break;\r\n                        case \"loadPanel\":\r\n                            this._tableElement = null;\r\n                            this._invalidate(true, \"loadPanel.enabled\" !== args.fullName);\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"noDataText\":\r\n                            this.renderNoDataText();\r\n                            args.handled = true\r\n                    }\r\n                },\r\n                dispose: function() {\r\n                    clearTimeout(this._hideLoadingTimeoutID);\r\n                    this._scrollable && this._scrollable.dispose()\r\n                },\r\n                setScrollerSpacing: function() {},\r\n                _restoreErrorRow: function() {}\r\n            }\r\n        }())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.rows.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    rowsModule\r\n} from \"../grid_core/ui.grid_core.rows\";\r\nexport var RowsView = rowsModule.views.rowsView;\r\ngridCore.registerModule(\"rows\", rowsModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.context_menu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport ContextMenu from \"../context_menu\";\r\nvar CONTEXT_MENU = \"dx-context-menu\";\r\nvar viewName = {\r\n    columnHeadersView: \"header\",\r\n    rowsView: \"content\",\r\n    footerView: \"footer\",\r\n    headerPanel: \"headerPanel\"\r\n};\r\nvar VIEW_NAMES = [\"columnHeadersView\", \"rowsView\", \"footerView\", \"headerPanel\"];\r\nvar ContextMenuController = modules.ViewController.inherit({\r\n    init: function() {\r\n        this.createAction(\"onContextMenuPreparing\")\r\n    },\r\n    getContextMenuItems: function(dxEvent) {\r\n        if (!dxEvent) {\r\n            return false\r\n        }\r\n        var that = this;\r\n        var $targetElement = $(dxEvent.target);\r\n        var $element;\r\n        var $targetRowElement;\r\n        var $targetCellElement;\r\n        var menuItems;\r\n        each(VIEW_NAMES, (function() {\r\n            var view = that.getView(this);\r\n            $element = view && view.element();\r\n            if ($element && ($element.is($targetElement) || $element.find($targetElement).length)) {\r\n                var _rowOptions$cells;\r\n                $targetCellElement = $targetElement.closest(\".dx-row > td, .dx-row > tr\");\r\n                $targetRowElement = $targetCellElement.parent();\r\n                var rowIndex = view.getRowIndex($targetRowElement);\r\n                var columnIndex = $targetCellElement[0] && $targetCellElement[0].cellIndex;\r\n                var rowOptions = $targetRowElement.data(\"options\");\r\n                var options = {\r\n                    event: dxEvent,\r\n                    targetElement: getPublicElement($targetElement),\r\n                    target: viewName[this],\r\n                    rowIndex: rowIndex,\r\n                    row: view._getRows()[rowIndex],\r\n                    columnIndex: columnIndex,\r\n                    column: null === rowOptions || void 0 === rowOptions ? void 0 : null === (_rowOptions$cells = rowOptions.cells) || void 0 === _rowOptions$cells ? void 0 : _rowOptions$cells[columnIndex].column\r\n                };\r\n                options.items = view.getContextMenuItems && view.getContextMenuItems(options);\r\n                that.executeAction(\"onContextMenuPreparing\", options);\r\n                that._contextMenuPrepared(options);\r\n                menuItems = options.items;\r\n                if (menuItems) {\r\n                    return false\r\n                }\r\n            }\r\n        }));\r\n        return menuItems\r\n    },\r\n    _contextMenuPrepared: noop\r\n});\r\nvar ContextMenuView = modules.View.inherit({\r\n    _renderCore: function() {\r\n        var that = this;\r\n        var $element = that.element().addClass(CONTEXT_MENU);\r\n        this.setAria(\"role\", \"presentation\", $element);\r\n        this._createComponent($element, ContextMenu, {\r\n            onPositioning: function(actionArgs) {\r\n                var event = actionArgs.event;\r\n                var contextMenuInstance = actionArgs.component;\r\n                var items = that.getController(\"contextMenu\").getContextMenuItems(event);\r\n                if (items) {\r\n                    contextMenuInstance.option(\"items\", items);\r\n                    event.stopPropagation()\r\n                } else {\r\n                    actionArgs.cancel = true\r\n                }\r\n            },\r\n            onItemClick: function(params) {\r\n                params.itemData.onItemClick && params.itemData.onItemClick(params)\r\n            },\r\n            cssClass: that.getWidgetContainerClass(),\r\n            target: that.component.$element()\r\n        })\r\n    }\r\n});\r\nexport var contextMenuModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            onContextMenuPreparing: null\r\n        }\r\n    },\r\n    controllers: {\r\n        contextMenu: ContextMenuController\r\n    },\r\n    views: {\r\n        contextMenuView: ContextMenuView\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.context_menu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport treeListCore from \"./ui.data_grid.core\";\r\nimport {\r\n    contextMenuModule\r\n} from \"../grid_core/ui.grid_core.context_menu\";\r\ntreeListCore.registerModule(\"contextMenu\", contextMenuModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.error_handling.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nvar ERROR_ROW_CLASS = \"dx-error-row\";\r\nvar ERROR_MESSAGE_CLASS = \"dx-error-message\";\r\nvar ERROR_CLOSEBUTTON_CLASS = \"dx-closebutton\";\r\nvar ACTION_CLASS = \"action\";\r\nvar ErrorHandlingController = modules.ViewController.inherit({\r\n    init: function() {\r\n        this._columnHeadersView = this.getView(\"columnHeadersView\");\r\n        this._rowsView = this.getView(\"rowsView\")\r\n    },\r\n    _createErrorRow: function(error, $tableElements) {\r\n        var that = this;\r\n        var $errorRow;\r\n        var $closeButton;\r\n        var $errorMessage = this._renderErrorMessage(error);\r\n        if ($tableElements) {\r\n            $errorRow = $(\"<tr>\").addClass(ERROR_ROW_CLASS);\r\n            $closeButton = $(\"<div>\").addClass(ERROR_CLOSEBUTTON_CLASS).addClass(that.addWidgetPrefix(ACTION_CLASS));\r\n            eventsEngine.on($closeButton, clickEventName, that.createAction((function(args) {\r\n                var e = args.event;\r\n                var $errorRow;\r\n                var errorRowIndex = $(e.currentTarget).closest(\".\" + ERROR_ROW_CLASS).index();\r\n                e.stopPropagation();\r\n                each($tableElements, (function(_, tableElement) {\r\n                    $errorRow = $(tableElement).children(\"tbody\").children(\"tr\").eq(errorRowIndex);\r\n                    that.removeErrorRow($errorRow)\r\n                }));\r\n                that.getController(\"resizing\") && that.getController(\"resizing\").fireContentReadyAction()\r\n            })));\r\n            $(\"<td>\").attr({\r\n                colSpan: that.getController(\"columns\").getVisibleColumns().length,\r\n                role: \"presentation\"\r\n            }).prepend($closeButton).append($errorMessage).appendTo($errorRow);\r\n            return $errorRow\r\n        }\r\n        return $errorMessage\r\n    },\r\n    _renderErrorMessage: function(error) {\r\n        var message = error.url ? error.message.replace(error.url, \"\") : error.message || error;\r\n        var $message = $(\"<div>\").addClass(ERROR_MESSAGE_CLASS).text(message);\r\n        if (error.url) {\r\n            $(\"<a>\").attr(\"href\", error.url).text(error.url).appendTo($message)\r\n        }\r\n        return $message\r\n    },\r\n    renderErrorRow: function(error, rowIndex, $popupContent) {\r\n        var that = this;\r\n        var $errorMessageElement;\r\n        var $firstErrorRow;\r\n        if ($popupContent) {\r\n            $popupContent.find(\".\" + ERROR_MESSAGE_CLASS).remove();\r\n            $errorMessageElement = that._createErrorRow(error);\r\n            $popupContent.prepend($errorMessageElement);\r\n            return $errorMessageElement\r\n        }\r\n        var viewElement = rowIndex >= 0 || !that._columnHeadersView.isVisible() ? that._rowsView : that._columnHeadersView;\r\n        var $tableElements = viewElement.getTableElements();\r\n        each($tableElements, (function(_, tableElement) {\r\n            $errorMessageElement = that._createErrorRow(error, $tableElements);\r\n            $firstErrorRow = $firstErrorRow || $errorMessageElement;\r\n            if (rowIndex >= 0) {\r\n                var $row = viewElement._getRowElements($(tableElement)).eq(rowIndex);\r\n                that.removeErrorRow($row.next());\r\n                $errorMessageElement.insertAfter($row)\r\n            } else {\r\n                var $tbody = $(tableElement).children(\"tbody\");\r\n                var rowElements = $tbody.children(\"tr\");\r\n                if (that._columnHeadersView.isVisible()) {\r\n                    that.removeErrorRow(rowElements.last());\r\n                    $(tableElement).append($errorMessageElement)\r\n                } else {\r\n                    that.removeErrorRow(rowElements.first());\r\n                    $tbody.first().prepend($errorMessageElement)\r\n                }\r\n            }\r\n        }));\r\n        var resizingController = that.getController(\"resizing\");\r\n        resizingController && resizingController.fireContentReadyAction();\r\n        return $firstErrorRow\r\n    },\r\n    removeErrorRow: function($row) {\r\n        if (!$row) {\r\n            var $columnHeaders = this._columnHeadersView && this._columnHeadersView.element();\r\n            $row = $columnHeaders && $columnHeaders.find(\".\" + ERROR_ROW_CLASS);\r\n            if (!$row || !$row.length) {\r\n                var $rowsViewElement = this._rowsView.element();\r\n                $row = $rowsViewElement && $rowsViewElement.find(\".\" + ERROR_ROW_CLASS)\r\n            }\r\n        }\r\n        $row && $row.hasClass(ERROR_ROW_CLASS) && $row.remove()\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"errorRowEnabled\":\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nexport var errorHandlingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            errorRowEnabled: true\r\n        }\r\n    },\r\n    controllers: {\r\n        errorHandling: ErrorHandlingController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                init: function() {\r\n                    var that = this;\r\n                    var errorHandlingController = that.getController(\"errorHandling\");\r\n                    that.callBase();\r\n                    that.dataErrorOccurred.add((function(error, $popupContent) {\r\n                        if (that.option(\"errorRowEnabled\")) {\r\n                            errorHandlingController.renderErrorRow(error, void 0, $popupContent)\r\n                        }\r\n                    }));\r\n                    that.changed.add((function(e) {\r\n                        if (e && \"loadError\" === e.changeType) {\r\n                            return\r\n                        }\r\n                        var errorHandlingController = that.getController(\"errorHandling\");\r\n                        var editingController = that.getController(\"editing\");\r\n                        if (editingController && !editingController.hasChanges()) {\r\n                            errorHandlingController && errorHandlingController.removeErrorRow()\r\n                        }\r\n                    }))\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.error_handling.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    errorHandlingModule\r\n} from \"../grid_core/ui.grid_core.error_handling\";\r\ngridCore.registerModule(\"errorHandling\", errorHandlingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.grid_view.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getInnerWidth,\r\n    getWidth,\r\n    getHeight,\r\n    setHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    deferRender,\r\n    deferUpdate\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    hasWindow,\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isString,\r\n    isDefined,\r\n    isNumeric\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport * as accessibility from \"../shared/accessibility\";\r\nimport browser from \"../../core/utils/browser\";\r\nvar BORDERS_CLASS = \"borders\";\r\nvar TABLE_FIXED_CLASS = \"table-fixed\";\r\nvar IMPORTANT_MARGIN_CLASS = \"important-margin\";\r\nvar GRIDBASE_CONTAINER_CLASS = \"dx-gridbase-container\";\r\nvar HIDDEN_COLUMNS_WIDTH = \"adaptiveHidden\";\r\nvar VIEW_NAMES = [\"columnsSeparatorView\", \"blockSeparatorView\", \"trackerView\", \"headerPanel\", \"columnHeadersView\", \"rowsView\", \"footerView\", \"columnChooserView\", \"filterPanelView\", \"pagerView\", \"draggingHeaderView\", \"contextMenuView\", \"errorView\", \"headerFilterView\", \"filterBuilderView\"];\r\nvar isPercentWidth = function(width) {\r\n    return isString(width) && \"%\" === width.slice(-1)\r\n};\r\nvar isPixelWidth = function(width) {\r\n    return isString(width) && \"px\" === width.slice(-2)\r\n};\r\nvar getContainerHeight = function($container) {\r\n    var clientHeight = $container.get(0).clientHeight;\r\n    var paddingTop = parseFloat($container.css(\"paddingTop\"));\r\n    var paddingBottom = parseFloat($container.css(\"paddingBottom\"));\r\n    return clientHeight - paddingTop - paddingBottom\r\n};\r\nvar calculateFreeWidth = function(that, widths) {\r\n    var contentWidth = that._rowsView.contentWidth();\r\n    var totalWidth = that._getTotalWidth(widths, contentWidth);\r\n    return contentWidth - totalWidth\r\n};\r\nvar calculateFreeWidthWithCurrentMinWidth = function(that, columnIndex, currentMinWidth, widths) {\r\n    return calculateFreeWidth(that, widths.map((function(width, index) {\r\n        return index === columnIndex ? currentMinWidth : width\r\n    })))\r\n};\r\nvar restoreFocus = function(focusedElement, selectionRange) {\r\n    accessibility.hiddenFocus(focusedElement);\r\n    gridCoreUtils.setSelectionRange(focusedElement, selectionRange)\r\n};\r\nvar ResizingController = modules.ViewController.inherit({\r\n    _initPostRenderHandlers: function() {\r\n        var dataController = this._dataController;\r\n        if (!this._refreshSizesHandler) {\r\n            this._refreshSizesHandler = e => {\r\n                dataController.changed.remove(this._refreshSizesHandler);\r\n                var templateDeferreds = e && e.templateDeferreds || [];\r\n                when.apply(this, templateDeferreds).done(() => {\r\n                    this._refreshSizes(e)\r\n                })\r\n            };\r\n            dataController.changed.add(() => {\r\n                dataController.changed.add(this._refreshSizesHandler)\r\n            })\r\n        }\r\n    },\r\n    _refreshSizes: function(e) {\r\n        var resizeDeferred;\r\n        var that = this;\r\n        var changeType = e && e.changeType;\r\n        var isDelayed = e && e.isDelayed;\r\n        var items = that._dataController.items();\r\n        if (!e || \"refresh\" === changeType || \"prepend\" === changeType || \"append\" === changeType) {\r\n            if (!isDelayed) {\r\n                resizeDeferred = that.resize()\r\n            }\r\n        } else if (\"update\" === changeType) {\r\n            var _e$changeTypes;\r\n            if (0 === (null === (_e$changeTypes = e.changeTypes) || void 0 === _e$changeTypes ? void 0 : _e$changeTypes.length)) {\r\n                return\r\n            }\r\n            if ((items.length > 1 || \"insert\" !== e.changeTypes[0]) && !(0 === items.length && \"remove\" === e.changeTypes[0]) && !e.needUpdateDimensions) {\r\n                deferUpdate(() => deferRender(() => deferUpdate(() => {\r\n                    that._setScrollerSpacing(that._hasHeight);\r\n                    that._rowsView.resize()\r\n                })))\r\n            } else {\r\n                resizeDeferred = that.resize()\r\n            }\r\n        }\r\n        if (changeType && \"updateSelection\" !== changeType && \"updateFocusedRow\" !== changeType && \"pageIndex\" !== changeType && !isDelayed) {\r\n            when(resizeDeferred).done((function() {\r\n                that._setAriaRowColCount();\r\n                that.fireContentReadyAction()\r\n            }))\r\n        }\r\n    },\r\n    fireContentReadyAction: function() {\r\n        this.component._fireContentReadyAction()\r\n    },\r\n    _setAriaRowColCount: function() {\r\n        var component = this.component;\r\n        component.setAria({\r\n            rowCount: this._dataController.totalItemsCount(),\r\n            colCount: component.columnCount()\r\n        }, component.$element().children(\".\" + GRIDBASE_CONTAINER_CLASS))\r\n    },\r\n    _getBestFitWidths: function() {\r\n        var _widths;\r\n        var rowsView = this._rowsView;\r\n        var columnHeadersView = this._columnHeadersView;\r\n        var widths = rowsView.getColumnWidths();\r\n        if (!(null !== (_widths = widths) && void 0 !== _widths && _widths.length)) {\r\n            var _rowsView$getTableEle;\r\n            var headersTableElement = columnHeadersView.getTableElement();\r\n            columnHeadersView.setTableElement(null === (_rowsView$getTableEle = rowsView.getTableElement()) || void 0 === _rowsView$getTableEle ? void 0 : _rowsView$getTableEle.children(\".dx-header\"));\r\n            widths = columnHeadersView.getColumnWidths();\r\n            columnHeadersView.setTableElement(headersTableElement)\r\n        }\r\n        return widths\r\n    },\r\n    _setVisibleWidths: function(visibleColumns, widths) {\r\n        var columnsController = this._columnsController;\r\n        columnsController.beginUpdate();\r\n        each(visibleColumns, (function(index, column) {\r\n            var columnId = columnsController.getColumnId(column);\r\n            columnsController.columnOption(columnId, \"visibleWidth\", widths[index])\r\n        }));\r\n        columnsController.endUpdate()\r\n    },\r\n    _toggleBestFitModeForView: function(view, className, isBestFit) {\r\n        if (!view || !view.isVisible()) {\r\n            return\r\n        }\r\n        var $rowsTables = this._rowsView.getTableElements();\r\n        var $viewTables = view.getTableElements();\r\n        each($rowsTables, (index, tableElement) => {\r\n            var $tableBody;\r\n            var $rowsTable = $(tableElement);\r\n            var $viewTable = $viewTables.eq(index);\r\n            if ($viewTable && $viewTable.length) {\r\n                if (isBestFit) {\r\n                    $tableBody = $viewTable.children(\"tbody\").appendTo($rowsTable)\r\n                } else {\r\n                    $tableBody = $rowsTable.children(\".\" + className).appendTo($viewTable)\r\n                }\r\n                $tableBody.toggleClass(className, isBestFit);\r\n                $tableBody.toggleClass(this.addWidgetPrefix(\"best-fit\"), isBestFit)\r\n            }\r\n        })\r\n    },\r\n    _toggleBestFitMode: function(isBestFit) {\r\n        var $rowsTable = this._rowsView.getTableElement();\r\n        var $rowsFixedTable = this._rowsView.getTableElements().eq(1);\r\n        if (!$rowsTable) {\r\n            return\r\n        }\r\n        $rowsTable.css(\"tableLayout\", isBestFit ? \"auto\" : \"fixed\");\r\n        $rowsTable.children(\"colgroup\").css(\"display\", isBestFit ? \"none\" : \"\");\r\n        $rowsFixedTable.toggleClass(this.addWidgetPrefix(TABLE_FIXED_CLASS), !isBestFit);\r\n        this._toggleBestFitModeForView(this._columnHeadersView, \"dx-header\", isBestFit);\r\n        this._toggleBestFitModeForView(this._footerView, \"dx-footer\", isBestFit);\r\n        this._toggleContentMinHeight(isBestFit);\r\n        if (this._needStretch()) {\r\n            $rowsTable.get(0).style.width = isBestFit ? \"auto\" : \"\"\r\n        }\r\n    },\r\n    _toggleContentMinHeight: function(isBestFit) {\r\n        if (this.option(\"wordWrapEnabled\")) {\r\n            var scrollable = this._rowsView.getScrollable();\r\n            var $contentElement = this._rowsView._findContentElement();\r\n            if (false === (null === scrollable || void 0 === scrollable ? void 0 : scrollable.option(\"useNative\"))) {\r\n                $contentElement.css({\r\n                    minHeight: isBestFit ? gridCoreUtils.getContentHeightLimit(browser) : \"\"\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _synchronizeColumns: function() {\r\n        var columnsController = this._columnsController;\r\n        var visibleColumns = columnsController.getVisibleColumns();\r\n        var columnAutoWidth = this.option(\"columnAutoWidth\");\r\n        var needBestFit = this._needBestFit();\r\n        var hasMinWidth = false;\r\n        var resetBestFitMode;\r\n        var isColumnWidthsCorrected = false;\r\n        var resultWidths = [];\r\n        var focusedElement;\r\n        var selectionRange;\r\n        !needBestFit && each(visibleColumns, (function(index, column) {\r\n            if (\"auto\" === column.width) {\r\n                needBestFit = true;\r\n                return false\r\n            }\r\n        }));\r\n        each(visibleColumns, (function(index, column) {\r\n            if (column.minWidth) {\r\n                hasMinWidth = true;\r\n                return false\r\n            }\r\n        }));\r\n        this._setVisibleWidths(visibleColumns, []);\r\n        if (needBestFit) {\r\n            focusedElement = domAdapter.getActiveElement();\r\n            selectionRange = gridCoreUtils.getSelectionRange(focusedElement);\r\n            this._toggleBestFitMode(true);\r\n            resetBestFitMode = true\r\n        }\r\n        var $element = this.component.$element();\r\n        if ($element && $element[0] && this._maxWidth) {\r\n            delete this._maxWidth;\r\n            $element[0].style.maxWidth = \"\"\r\n        }\r\n        deferUpdate(() => {\r\n            if (needBestFit) {\r\n                resultWidths = this._getBestFitWidths();\r\n                each(visibleColumns, (function(index, column) {\r\n                    var columnId = columnsController.getColumnId(column);\r\n                    columnsController.columnOption(columnId, \"bestFitWidth\", resultWidths[index], true)\r\n                }))\r\n            } else if (hasMinWidth) {\r\n                resultWidths = this._getBestFitWidths()\r\n            }\r\n            each(visibleColumns, (function(index) {\r\n                var width = this.width;\r\n                if (\"auto\" !== width) {\r\n                    if (isDefined(width)) {\r\n                        resultWidths[index] = isNumeric(width) || isPixelWidth(width) ? parseFloat(width) : width\r\n                    } else if (!columnAutoWidth) {\r\n                        resultWidths[index] = void 0\r\n                    }\r\n                }\r\n            }));\r\n            if (resetBestFitMode) {\r\n                this._toggleBestFitMode(false);\r\n                resetBestFitMode = false;\r\n                if (focusedElement && focusedElement !== domAdapter.getActiveElement()) {\r\n                    var isFocusOutsideWindow = getBoundingRect(focusedElement).bottom < 0;\r\n                    if (!isFocusOutsideWindow) {\r\n                        restoreFocus(focusedElement, selectionRange)\r\n                    }\r\n                }\r\n            }\r\n            isColumnWidthsCorrected = this._correctColumnWidths(resultWidths, visibleColumns);\r\n            if (columnAutoWidth) {\r\n                ! function() {\r\n                    var expandColumnWidth;\r\n                    each(visibleColumns, (function(index, column) {\r\n                        if (\"groupExpand\" === column.type) {\r\n                            expandColumnWidth = resultWidths[index]\r\n                        }\r\n                    }));\r\n                    each(visibleColumns, (function(index, column) {\r\n                        if (\"groupExpand\" === column.type && expandColumnWidth) {\r\n                            resultWidths[index] = expandColumnWidth\r\n                        }\r\n                    }))\r\n                }();\r\n                if (this._needStretch()) {\r\n                    this._processStretch(resultWidths, visibleColumns)\r\n                }\r\n            }\r\n            deferRender(() => {\r\n                if (needBestFit || isColumnWidthsCorrected) {\r\n                    this._setVisibleWidths(visibleColumns, resultWidths)\r\n                }\r\n            })\r\n        })\r\n    },\r\n    _needBestFit: function() {\r\n        return this.option(\"columnAutoWidth\")\r\n    },\r\n    _needStretch: function() {\r\n        return this._columnsController.getVisibleColumns().some(c => \"auto\" === c.width && !c.command)\r\n    },\r\n    _getAverageColumnsWidth: function(resultWidths) {\r\n        var freeWidth = calculateFreeWidth(this, resultWidths);\r\n        var columnCountWithoutWidth = resultWidths.filter((function(width) {\r\n            return void 0 === width\r\n        })).length;\r\n        return freeWidth / columnCountWithoutWidth\r\n    },\r\n    _correctColumnWidths: function(resultWidths, visibleColumns) {\r\n        var that = this;\r\n        var i;\r\n        var hasPercentWidth = false;\r\n        var hasAutoWidth = false;\r\n        var isColumnWidthsCorrected = false;\r\n        var $element = that.component.$element();\r\n        var hasWidth = that._hasWidth;\r\n        var _loop = function() {\r\n            var index = i;\r\n            var column = visibleColumns[index];\r\n            var isHiddenColumn = resultWidths[index] === HIDDEN_COLUMNS_WIDTH;\r\n            var width = resultWidths[index];\r\n            var minWidth = column.minWidth;\r\n            if (minWidth) {\r\n                if (void 0 === width) {\r\n                    var averageColumnsWidth = that._getAverageColumnsWidth(resultWidths);\r\n                    width = averageColumnsWidth\r\n                } else if (isPercentWidth(width)) {\r\n                    var freeWidth = calculateFreeWidthWithCurrentMinWidth(that, index, minWidth, resultWidths);\r\n                    if (freeWidth < 0) {\r\n                        width = -1\r\n                    }\r\n                }\r\n            }\r\n            var realColumnWidth = that._getRealColumnWidth(index, resultWidths.map((function(columnWidth, columnIndex) {\r\n                return index === columnIndex ? width : columnWidth\r\n            })));\r\n            if (minWidth && !isHiddenColumn && realColumnWidth < minWidth) {\r\n                resultWidths[index] = minWidth;\r\n                isColumnWidthsCorrected = true;\r\n                i = -1\r\n            }\r\n            if (!isDefined(column.width)) {\r\n                hasAutoWidth = true\r\n            }\r\n            if (isPercentWidth(column.width)) {\r\n                hasPercentWidth = true\r\n            }\r\n        };\r\n        for (i = 0; i < visibleColumns.length; i++) {\r\n            _loop()\r\n        }\r\n        if (!hasAutoWidth && resultWidths.length) {\r\n            var $rowsViewElement = that._rowsView.element();\r\n            var contentWidth = that._rowsView.contentWidth();\r\n            var scrollbarWidth = that._rowsView.getScrollbarWidth();\r\n            var totalWidth = that._getTotalWidth(resultWidths, contentWidth);\r\n            if (totalWidth < contentWidth) {\r\n                var lastColumnIndex = gridCoreUtils.getLastResizableColumnIndex(visibleColumns, resultWidths);\r\n                if (lastColumnIndex >= 0) {\r\n                    resultWidths[lastColumnIndex] = \"auto\";\r\n                    isColumnWidthsCorrected = true;\r\n                    if (false === hasWidth && !hasPercentWidth) {\r\n                        var borderWidth = that.option(\"showBorders\") ? Math.ceil(getOuterWidth($rowsViewElement) - getInnerWidth($rowsViewElement)) : 0;\r\n                        that._maxWidth = totalWidth + scrollbarWidth + borderWidth;\r\n                        $element.css(\"maxWidth\", that._maxWidth)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return isColumnWidthsCorrected\r\n    },\r\n    _processStretch: function(resultSizes, visibleColumns) {\r\n        var groupSize = this._rowsView.contentWidth();\r\n        var tableSize = this._getTotalWidth(resultSizes, groupSize);\r\n        var unusedIndexes = {\r\n            length: 0\r\n        };\r\n        if (!resultSizes.length) {\r\n            return\r\n        }\r\n        each(visibleColumns, (function(index) {\r\n            if (this.width || resultSizes[index] === HIDDEN_COLUMNS_WIDTH) {\r\n                unusedIndexes[index] = true;\r\n                unusedIndexes.length++\r\n            }\r\n        }));\r\n        var diff = groupSize - tableSize;\r\n        var diffElement = Math.floor(diff / (resultSizes.length - unusedIndexes.length));\r\n        var onePixelElementsCount = diff - diffElement * (resultSizes.length - unusedIndexes.length);\r\n        if (diff >= 0) {\r\n            for (var i = 0; i < resultSizes.length; i++) {\r\n                if (unusedIndexes[i]) {\r\n                    continue\r\n                }\r\n                resultSizes[i] += diffElement;\r\n                if (onePixelElementsCount > 0) {\r\n                    if (onePixelElementsCount < 1) {\r\n                        resultSizes[i] += onePixelElementsCount;\r\n                        onePixelElementsCount = 0\r\n                    } else {\r\n                        resultSizes[i]++;\r\n                        onePixelElementsCount--\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _getRealColumnWidth: function(columnIndex, columnWidths, groupWidth) {\r\n        var ratio = 1;\r\n        var width = columnWidths[columnIndex];\r\n        if (!isPercentWidth(width)) {\r\n            return parseFloat(width)\r\n        }\r\n        var percentTotalWidth = columnWidths.reduce((sum, width, index) => {\r\n            if (!isPercentWidth(width)) {\r\n                return sum\r\n            }\r\n            return sum + parseFloat(width)\r\n        }, 0);\r\n        var pixelTotalWidth = columnWidths.reduce((sum, width) => {\r\n            if (!width || width === HIDDEN_COLUMNS_WIDTH || isPercentWidth(width)) {\r\n                return sum\r\n            }\r\n            return sum + parseFloat(width)\r\n        }, 0);\r\n        groupWidth = groupWidth || this._rowsView.contentWidth();\r\n        var freeSpace = groupWidth - pixelTotalWidth;\r\n        var percentTotalWidthInPixel = percentTotalWidth * groupWidth / 100;\r\n        if (pixelTotalWidth > 0 && percentTotalWidthInPixel + pixelTotalWidth >= groupWidth) {\r\n            ratio = percentTotalWidthInPixel > freeSpace ? freeSpace / percentTotalWidthInPixel : 1\r\n        }\r\n        return parseFloat(width) * groupWidth * ratio / 100\r\n    },\r\n    _getTotalWidth: function(widths, groupWidth) {\r\n        var result = 0;\r\n        for (var i = 0; i < widths.length; i++) {\r\n            var width = widths[i];\r\n            if (width && width !== HIDDEN_COLUMNS_WIDTH) {\r\n                result += this._getRealColumnWidth(i, widths, groupWidth)\r\n            }\r\n        }\r\n        return Math.ceil(result)\r\n    },\r\n    updateSize: function(rootElement) {\r\n        var $groupElement;\r\n        var width;\r\n        var $rootElement = $(rootElement);\r\n        var importantMarginClass = this.addWidgetPrefix(IMPORTANT_MARGIN_CLASS);\r\n        if (void 0 === this._hasHeight && $rootElement && $rootElement.is(\":visible\") && getWidth($rootElement)) {\r\n            $groupElement = $rootElement.children(\".\" + this.getWidgetContainerClass());\r\n            if ($groupElement.length) {\r\n                $groupElement.detach()\r\n            }\r\n            this._hasHeight = !!getContainerHeight($rootElement);\r\n            width = getWidth($rootElement);\r\n            $rootElement.addClass(importantMarginClass);\r\n            this._hasWidth = getWidth($rootElement) === width;\r\n            $rootElement.removeClass(importantMarginClass);\r\n            if ($groupElement.length) {\r\n                $groupElement.appendTo($rootElement)\r\n            }\r\n        }\r\n    },\r\n    publicMethods: function() {\r\n        return [\"resize\", \"updateDimensions\"]\r\n    },\r\n    resize: function() {\r\n        return !this.component._requireResize && this.updateDimensions()\r\n    },\r\n    updateDimensions: function(checkSize) {\r\n        var that = this;\r\n        that._initPostRenderHandlers();\r\n        if (!that._checkSize(checkSize)) {\r\n            return\r\n        }\r\n        var prevResult = that._resizeDeferred;\r\n        var result = that._resizeDeferred = new Deferred;\r\n        when(prevResult).always((function() {\r\n            deferRender((function() {\r\n                if (that._dataController.isLoaded()) {\r\n                    that._synchronizeColumns()\r\n                }\r\n                that._resetGroupElementHeight();\r\n                deferUpdate((function() {\r\n                    deferRender((function() {\r\n                        deferUpdate((function() {\r\n                            that._updateDimensionsCore()\r\n                        }))\r\n                    }))\r\n                }))\r\n            })).done(result.resolve).fail(result.reject)\r\n        }));\r\n        return result.promise()\r\n    },\r\n    _resetGroupElementHeight: function() {\r\n        var groupElement = this.component.$element().children().get(0);\r\n        var scrollable = this._rowsView.getScrollable();\r\n        if (groupElement && groupElement.style.height && (!scrollable || !scrollable.scrollTop())) {\r\n            groupElement.style.height = \"\"\r\n        }\r\n    },\r\n    _checkSize: function(checkSize) {\r\n        var $rootElement = this.component.$element();\r\n        if (checkSize && (this._lastWidth === getWidth($rootElement) && this._lastHeight === getHeight($rootElement) && this._devicePixelRatio === getWindow().devicePixelRatio || !$rootElement.is(\":visible\"))) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    _setScrollerSpacingCore: function(hasHeight) {\r\n        var that = this;\r\n        var vScrollbarWidth = hasHeight ? that._rowsView.getScrollbarWidth() : 0;\r\n        var hScrollbarWidth = that._rowsView.getScrollbarWidth(true);\r\n        deferRender((function() {\r\n            that._columnHeadersView && that._columnHeadersView.setScrollerSpacing(vScrollbarWidth);\r\n            that._footerView && that._footerView.setScrollerSpacing(vScrollbarWidth);\r\n            that._rowsView.setScrollerSpacing(vScrollbarWidth, hScrollbarWidth)\r\n        }))\r\n    },\r\n    _setScrollerSpacing: function(hasHeight) {\r\n        if (true === this.option(\"scrolling.useNative\")) {\r\n            deferRender(() => {\r\n                deferUpdate(() => {\r\n                    this._setScrollerSpacingCore(hasHeight)\r\n                })\r\n            })\r\n        } else {\r\n            this._setScrollerSpacingCore(hasHeight)\r\n        }\r\n    },\r\n    _updateDimensionsCore: function() {\r\n        var that = this;\r\n        var dataController = that._dataController;\r\n        var rowsView = that._rowsView;\r\n        var $rootElement = that.component.$element();\r\n        var groupElement = $rootElement.children().get(0);\r\n        var rootElementHeight = $rootElement && ($rootElement.get(0).clientHeight || getHeight($rootElement));\r\n        var maxHeight = parseInt($rootElement.css(\"maxHeight\"));\r\n        var maxHeightHappened = maxHeight && rootElementHeight >= maxHeight;\r\n        var height = that.option(\"height\") || $rootElement.get(0).style.height;\r\n        var editorFactory = that.getController(\"editorFactory\");\r\n        var isMaxHeightApplied = maxHeightHappened && groupElement.scrollHeight === groupElement.offsetHeight;\r\n        var $testDiv;\r\n        that.updateSize($rootElement);\r\n        var hasHeight = that._hasHeight || maxHeightHappened;\r\n        if (height && that._hasHeight ^ \"auto\" !== height) {\r\n            $testDiv = $(\"<div>\");\r\n            setHeight($testDiv, height);\r\n            $testDiv.appendTo($rootElement);\r\n            that._hasHeight = !!getHeight($testDiv);\r\n            $testDiv.remove()\r\n        }\r\n        deferRender((function() {\r\n            rowsView.height(null, hasHeight);\r\n            if (maxHeightHappened && !isMaxHeightApplied) {\r\n                $(groupElement).css(\"height\", maxHeight)\r\n            }\r\n            if (!dataController.isLoaded()) {\r\n                rowsView.setLoading(dataController.isLoading());\r\n                return\r\n            }\r\n            deferUpdate((function() {\r\n                that._updateLastSizes($rootElement);\r\n                that._setScrollerSpacing(hasHeight);\r\n                each(VIEW_NAMES, (function(index, viewName) {\r\n                    var view = that.getView(viewName);\r\n                    if (view) {\r\n                        view.resize()\r\n                    }\r\n                }));\r\n                editorFactory && editorFactory.resize()\r\n            }))\r\n        }))\r\n    },\r\n    _updateLastSizes: function($rootElement) {\r\n        this._lastWidth = getWidth($rootElement);\r\n        this._lastHeight = getHeight($rootElement);\r\n        this._devicePixelRatio = getWindow().devicePixelRatio\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"width\":\r\n            case \"height\":\r\n                this.component._renderDimensions();\r\n                this.resize();\r\n            case \"renderAsync\":\r\n                args.handled = true;\r\n                return;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    init: function() {\r\n        this._dataController = this.getController(\"data\");\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._columnHeadersView = this.getView(\"columnHeadersView\");\r\n        this._footerView = this.getView(\"footerView\");\r\n        this._rowsView = this.getView(\"rowsView\")\r\n    }\r\n});\r\nvar SynchronizeScrollingController = modules.ViewController.inherit({\r\n    _scrollChangedHandler: function(views, pos, viewName) {\r\n        for (var j = 0; j < views.length; j++) {\r\n            if (views[j] && views[j].name !== viewName) {\r\n                views[j].scrollTo({\r\n                    left: pos.left,\r\n                    top: pos.top\r\n                })\r\n            }\r\n        }\r\n    },\r\n    init: function() {\r\n        var views = [this.getView(\"columnHeadersView\"), this.getView(\"footerView\"), this.getView(\"rowsView\")];\r\n        for (var i = 0; i < views.length; i++) {\r\n            var view = views[i];\r\n            if (view) {\r\n                view.scrollChanged.add(this._scrollChangedHandler.bind(this, views))\r\n            }\r\n        }\r\n    }\r\n});\r\nvar GridView = modules.View.inherit({\r\n    _endUpdateCore: function() {\r\n        if (this.component._requireResize) {\r\n            this.component._requireResize = false;\r\n            this._resizingController.resize()\r\n        }\r\n    },\r\n    _getWidgetAriaLabel: function() {\r\n        return \"dxDataGrid-ariaDataGrid\"\r\n    },\r\n    init: function() {\r\n        this._resizingController = this.getController(\"resizing\");\r\n        this._dataController = this.getController(\"data\")\r\n    },\r\n    getView: function(name) {\r\n        return this.component._views[name]\r\n    },\r\n    element: function() {\r\n        return this._groupElement\r\n    },\r\n    optionChanged: function(args) {\r\n        if (isDefined(this._groupElement) && \"showBorders\" === args.name) {\r\n            this._groupElement.toggleClass(this.addWidgetPrefix(BORDERS_CLASS), !!args.value);\r\n            args.handled = true\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    },\r\n    _renderViews: function($groupElement) {\r\n        var that = this;\r\n        each(VIEW_NAMES, (function(index, viewName) {\r\n            var view = that.getView(viewName);\r\n            if (view) {\r\n                view.render($groupElement)\r\n            }\r\n        }))\r\n    },\r\n    _getTableRoleName: function() {\r\n        return \"grid\"\r\n    },\r\n    render: function($rootElement) {\r\n        var isFirstRender = !this._groupElement;\r\n        var $groupElement = this._groupElement || $(\"<div>\").addClass(this.getWidgetContainerClass());\r\n        $groupElement.addClass(GRIDBASE_CONTAINER_CLASS);\r\n        $groupElement.toggleClass(this.addWidgetPrefix(BORDERS_CLASS), !!this.option(\"showBorders\"));\r\n        this.setAria(\"role\", \"presentation\", $rootElement);\r\n        this.component.setAria({\r\n            role: this._getTableRoleName(),\r\n            label: messageLocalization.format(this._getWidgetAriaLabel())\r\n        }, $groupElement);\r\n        this._rootElement = $rootElement || this._rootElement;\r\n        if (isFirstRender) {\r\n            this._groupElement = $groupElement;\r\n            hasWindow() && this.getController(\"resizing\").updateSize($rootElement);\r\n            $groupElement.appendTo($rootElement)\r\n        }\r\n        this._renderViews($groupElement)\r\n    },\r\n    update: function() {\r\n        var $rootElement = this._rootElement;\r\n        var $groupElement = this._groupElement;\r\n        var resizingController = this.getController(\"resizing\");\r\n        if ($rootElement && $groupElement) {\r\n            resizingController.resize();\r\n            if (this._dataController.isLoaded()) {\r\n                this._resizingController.fireContentReadyAction()\r\n            }\r\n        }\r\n    }\r\n});\r\nexport var gridViewModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            showBorders: false,\r\n            renderAsync: false\r\n        }\r\n    },\r\n    controllers: {\r\n        resizing: ResizingController,\r\n        synchronizeScrolling: SynchronizeScrollingController\r\n    },\r\n    views: {\r\n        gridView: GridView\r\n    },\r\n    VIEW_NAMES: VIEW_NAMES\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grid_view.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    gridViewModule\r\n} from \"../grid_core/ui.grid_core.grid_view\";\r\ngridCore.registerModule(\"gridView\", gridViewModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.header_panel.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport Toolbar from \"../toolbar\";\r\nimport {\r\n    ColumnsView\r\n} from \"./ui.grid_core.columns_view\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport \"../drop_down_menu\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getPathParts\r\n} from \"../../core/utils/data\";\r\nvar HEADER_PANEL_CLASS = \"header-panel\";\r\nvar TOOLBAR_BUTTON_CLASS = \"toolbar-button\";\r\nvar TOOLBAR_ARIA_LABEL = \"-ariaToolbar\";\r\nvar HeaderPanel = ColumnsView.inherit({\r\n    _getToolbarItems: function() {\r\n        return []\r\n    },\r\n    _getButtonContainer: function() {\r\n        return $(\"<div>\").addClass(this.addWidgetPrefix(TOOLBAR_BUTTON_CLASS))\r\n    },\r\n    _getToolbarButtonClass: function(specificClass) {\r\n        var secondClass = specificClass ? \" \" + specificClass : \"\";\r\n        return this.addWidgetPrefix(TOOLBAR_BUTTON_CLASS) + secondClass\r\n    },\r\n    _getToolbarOptions: function() {\r\n        var userToolbarOptions = this.option(\"toolbar\");\r\n        var options = {\r\n            toolbarOptions: {\r\n                items: this._getToolbarItems(),\r\n                visible: null === userToolbarOptions || void 0 === userToolbarOptions ? void 0 : userToolbarOptions.visible,\r\n                disabled: null === userToolbarOptions || void 0 === userToolbarOptions ? void 0 : userToolbarOptions.disabled,\r\n                onItemRendered: function(e) {\r\n                    var itemRenderedCallback = e.itemData.onItemRendered;\r\n                    if (itemRenderedCallback) {\r\n                        itemRenderedCallback(e)\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        var userItems = null === userToolbarOptions || void 0 === userToolbarOptions ? void 0 : userToolbarOptions.items;\r\n        options.toolbarOptions.items = this._normalizeToolbarItems(options.toolbarOptions.items, userItems);\r\n        this.executeAction(\"onToolbarPreparing\", options);\r\n        if (options.toolbarOptions && !isDefined(options.toolbarOptions.visible)) {\r\n            var toolbarItems = options.toolbarOptions.items;\r\n            options.toolbarOptions.visible = !!(null !== toolbarItems && void 0 !== toolbarItems && toolbarItems.length)\r\n        }\r\n        return options.toolbarOptions\r\n    },\r\n    _normalizeToolbarItems(defaultItems, userItems) {\r\n        var defaultProps = {\r\n            location: \"after\"\r\n        };\r\n        var isArray = Array.isArray(userItems);\r\n        if (!isDefined(userItems)) {\r\n            return defaultItems\r\n        }\r\n        if (!isArray) {\r\n            userItems = [userItems]\r\n        }\r\n        var defaultButtonsByNames = {};\r\n        defaultItems.forEach(button => {\r\n            defaultButtonsByNames[button.name] = button\r\n        });\r\n        var normalizedItems = userItems.map(button => {\r\n            var needHideButton = false;\r\n            if (isString(button)) {\r\n                button = {\r\n                    name: button\r\n                };\r\n                needHideButton = true\r\n            }\r\n            if (isDefined(button.name)) {\r\n                if (isDefined(defaultButtonsByNames[button.name])) {\r\n                    button = extend(true, {}, defaultButtonsByNames[button.name], button)\r\n                } else if (needHideButton) {\r\n                    button.visible = false\r\n                }\r\n            }\r\n            return extend(true, {}, defaultProps, button)\r\n        });\r\n        return isArray ? normalizedItems : normalizedItems[0]\r\n    },\r\n    _renderCore: function() {\r\n        if (!this._toolbar) {\r\n            var $headerPanel = this.element();\r\n            $headerPanel.addClass(this.addWidgetPrefix(HEADER_PANEL_CLASS));\r\n            var label = messageLocalization.format(this.component.NAME + TOOLBAR_ARIA_LABEL);\r\n            var $toolbar = $(\"<div>\").attr(\"aria-label\", label).appendTo($headerPanel);\r\n            this._toolbar = this._createComponent($toolbar, Toolbar, this._toolbarOptions)\r\n        } else {\r\n            this._toolbar.option(this._toolbarOptions)\r\n        }\r\n    },\r\n    _columnOptionChanged: noop,\r\n    _handleDataChanged: function() {\r\n        if (this._requireReady) {\r\n            this.render()\r\n        }\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this.createAction(\"onToolbarPreparing\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    render: function() {\r\n        this._toolbarOptions = this._getToolbarOptions();\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    setToolbarItemDisabled: function(name, optionValue) {\r\n        var toolbarInstance = this._toolbar;\r\n        if (toolbarInstance) {\r\n            var items = toolbarInstance.option(\"items\") || [];\r\n            var itemIndex = items.indexOf(items.filter((function(item) {\r\n                return item.name === name\r\n            }))[0]);\r\n            if (itemIndex >= 0) {\r\n                var itemOptionPrefix = \"items[\" + itemIndex + \"]\";\r\n                if (toolbarInstance.option(itemOptionPrefix + \".options\")) {\r\n                    toolbarInstance.option(itemOptionPrefix + \".options.disabled\", optionValue)\r\n                } else {\r\n                    toolbarInstance.option(itemOptionPrefix + \".disabled\", optionValue)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    updateToolbarDimensions: function() {\r\n        var _this$_toolbar;\r\n        null === (_this$_toolbar = this._toolbar) || void 0 === _this$_toolbar ? void 0 : _this$_toolbar.updateDimensions()\r\n    },\r\n    getHeaderPanel: function() {\r\n        return this.element()\r\n    },\r\n    getHeight: function() {\r\n        return this.getElementHeight()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"onToolbarPreparing\" === args.name) {\r\n            this._invalidate();\r\n            args.handled = true\r\n        }\r\n        if (\"toolbar\" === args.name) {\r\n            args.handled = true;\r\n            if (this._toolbar) {\r\n                var parts = getPathParts(args.fullName);\r\n                var optionName = args.fullName.replace(/^toolbar\\./, \"\");\r\n                if (1 === parts.length) {\r\n                    var toolbarOptions = this._getToolbarOptions();\r\n                    this._toolbar.option(toolbarOptions)\r\n                } else if (\"items\" === parts[1]) {\r\n                    if (2 === parts.length) {\r\n                        var _toolbarOptions = this._getToolbarOptions();\r\n                        this._toolbar.option(\"items\", _toolbarOptions.items)\r\n                    } else if (3 === parts.length) {\r\n                        var normalizedItem = this._normalizeToolbarItems(this._getToolbarItems(), args.value);\r\n                        this._toolbar.option(optionName, normalizedItem)\r\n                    } else if (parts.length >= 4) {\r\n                        this._toolbar.option(optionName, args.value)\r\n                    }\r\n                } else {\r\n                    this._toolbar.option(optionName, args.value)\r\n                }\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    isVisible: function() {\r\n        return this._toolbarOptions && this._toolbarOptions.visible\r\n    },\r\n    allowDragging: noop\r\n});\r\nexport var headerPanelModule = {\r\n    defaultOptions: function() {\r\n        return {}\r\n    },\r\n    views: {\r\n        headerPanel: HeaderPanel\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            resizing: {\r\n                _updateDimensionsCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this.getView(\"headerPanel\").updateToolbarDimensions()\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.header_panel.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    headerPanelModule\r\n} from \"../grid_core/ui.grid_core.header_panel\";\r\nexport var HeaderPanel = headerPanelModule.views.headerPanel;\r\ngridCore.registerModule(\"headerPanel\", headerPanelModule);\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.base.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    deferRender,\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isFunction,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    logger\r\n} from \"../../core/utils/console\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    isMaterial\r\n} from \"../themes\";\r\nvar DATAGRID_ROW_SELECTOR = \".dx-row\";\r\nvar DATAGRID_DEPRECATED_TEMPLATE_WARNING = \"Specifying grid templates with the jQuery selector name is now deprecated. Use the DOM Node or the jQuery object that references this selector instead.\";\r\nimport \"./ui.data_grid.column_headers\";\r\nimport \"./ui.data_grid.columns_controller\";\r\nimport \"./ui.data_grid.data_controller\";\r\nimport \"./ui.data_grid.sorting\";\r\nimport \"./ui.data_grid.rows\";\r\nimport \"./ui.data_grid.context_menu\";\r\nimport \"./ui.data_grid.error_handling\";\r\nimport \"./ui.data_grid.grid_view\";\r\nimport \"./ui.data_grid.header_panel\";\r\ngridCore.registerModulesOrder([\"stateStoring\", \"columns\", \"selection\", \"editorFactory\", \"columnChooser\", \"grouping\", \"editing\", \"editingRowBased\", \"editingFormBased\", \"editingCellBased\", \"masterDetail\", \"validating\", \"adaptivity\", \"data\", \"virtualScrolling\", \"columnHeaders\", \"filterRow\", \"headerPanel\", \"headerFilter\", \"sorting\", \"search\", \"rows\", \"pager\", \"columnsResizingReordering\", \"contextMenu\", \"keyboardNavigation\", \"errorHandling\", \"summary\", \"columnFixing\", \"export\", \"gridView\"]);\r\nvar DataGrid = Widget.inherit({\r\n    _activeStateUnit: DATAGRID_ROW_SELECTOR,\r\n    _getDefaultOptions: function() {\r\n        var result = this.callBase();\r\n        each(gridCore.modules, (function() {\r\n            if (isFunction(this.defaultOptions)) {\r\n                extend(true, result, this.defaultOptions())\r\n            }\r\n        }));\r\n        return result\r\n    },\r\n    _setDeprecatedOptions: function() {\r\n        this.callBase();\r\n        extend(this._deprecatedOptions, {\r\n            useKeyboard: {\r\n                since: \"19.2\",\r\n                alias: \"keyboardNavigation.enabled\"\r\n            },\r\n            rowTemplate: {\r\n                since: \"21.2\",\r\n                message: 'Use the \"dataRowTemplate\" option instead'\r\n            },\r\n            onToolbarPreparing: {\r\n                since: \"21.2\",\r\n                message: 'Use the \"toolbar\" option instead'\r\n            }\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                showRowLines: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return isMaterial()\r\n            },\r\n            options: {\r\n                showRowLines: true,\r\n                showColumnLines: false,\r\n                headerFilter: {\r\n                    height: 315\r\n                },\r\n                editing: {\r\n                    useIcons: true\r\n                },\r\n                selection: {\r\n                    showCheckBoxesMode: \"always\"\r\n                }\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return browser.webkit\r\n            },\r\n            options: {\r\n                loadingTimeout: 30,\r\n                loadPanel: {\r\n                    animation: {\r\n                        show: {\r\n                            easing: \"cubic-bezier(1, 0, 1, 0)\",\r\n                            duration: 500,\r\n                            from: {\r\n                                opacity: 0\r\n                            },\r\n                            to: {\r\n                                opacity: 1\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            device: function(_device) {\r\n                return \"desktop\" !== _device.deviceType\r\n            },\r\n            options: {\r\n                grouping: {\r\n                    expandMode: \"rowClick\"\r\n                }\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        gridCore.processModules(this, gridCore);\r\n        gridCore.callModuleItemsMethod(this, \"init\")\r\n    },\r\n    _clean: noop,\r\n    _optionChanged: function(args) {\r\n        gridCore.callModuleItemsMethod(this, \"optionChanged\", [args]);\r\n        if (!args.handled) {\r\n            this.callBase(args)\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        this.updateDimensions(true)\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this.updateDimensions()\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this.getView(\"gridView\").render(this.$element())\r\n    },\r\n    _renderContentImpl: function() {\r\n        this.getView(\"gridView\").update()\r\n    },\r\n    _renderContent: function() {\r\n        var that = this;\r\n        deferRender((function() {\r\n            that._renderContentImpl()\r\n        }))\r\n    },\r\n    _getTemplate: function(templateName) {\r\n        var template = templateName;\r\n        if (isString(template) && \"#\" === template[0]) {\r\n            template = $(templateName);\r\n            logger.warn(DATAGRID_DEPRECATED_TEMPLATE_WARNING)\r\n        }\r\n        return this.callBase(template)\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        gridCore.callModuleItemsMethod(this, \"dispose\")\r\n    },\r\n    isReady: function() {\r\n        return this.getController(\"data\").isReady()\r\n    },\r\n    beginUpdate: function() {\r\n        this.callBase();\r\n        gridCore.callModuleItemsMethod(this, \"beginUpdate\")\r\n    },\r\n    endUpdate: function() {\r\n        gridCore.callModuleItemsMethod(this, \"endUpdate\");\r\n        this.callBase()\r\n    },\r\n    getController: function(name) {\r\n        return this._controllers[name]\r\n    },\r\n    getView: function(name) {\r\n        return this._views[name]\r\n    },\r\n    focus: function(element) {\r\n        this.getController(\"keyboardNavigation\").focus(element)\r\n    }\r\n});\r\nDataGrid.registerModule = gridCore.registerModule.bind(gridCore);\r\nregisterComponent(\"dxDataGrid\", DataGrid);\r\nexport default DataGrid;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.state_storing_core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    sessionStorage\r\n} from \"../../core/utils/storage\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    isEmptyObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    fromPromise\r\n} from \"../../core/utils/deferred\";\r\nvar DATE_REGEX = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/;\r\nvar parseDates = function parseDates(state) {\r\n    if (!state) {\r\n        return\r\n    }\r\n    each(state, (function(key, value) {\r\n        if (isPlainObject(value) || Array.isArray(value)) {\r\n            parseDates(value)\r\n        } else if (\"string\" === typeof value) {\r\n            var date = DATE_REGEX.exec(value);\r\n            if (date) {\r\n                state[key] = new Date(Date.UTC(+date[1], +date[2] - 1, +date[3], +date[4], +date[5], +date[6]))\r\n            }\r\n        }\r\n    }))\r\n};\r\nexport var StateStoringController = modules.ViewController.inherit(function() {\r\n    var getStorage = function(options) {\r\n        var storage = \"sessionStorage\" === options.type ? sessionStorage() : getWindow().localStorage;\r\n        if (!storage) {\r\n            throw new Error(\"E1007\")\r\n        }\r\n        return storage\r\n    };\r\n    var getUniqueStorageKey = function(options) {\r\n        return isDefined(options.storageKey) ? options.storageKey : \"storage\"\r\n    };\r\n    return {\r\n        _loadState: function() {\r\n            var options = this.option(\"stateStoring\");\r\n            if (\"custom\" === options.type) {\r\n                return options.customLoad && options.customLoad()\r\n            }\r\n            try {\r\n                return JSON.parse(getStorage(options).getItem(getUniqueStorageKey(options)))\r\n            } catch (e) {\r\n                errors.log(e.message)\r\n            }\r\n        },\r\n        _saveState: function(state) {\r\n            var options = this.option(\"stateStoring\");\r\n            if (\"custom\" === options.type) {\r\n                options.customSave && options.customSave(state);\r\n                return\r\n            }\r\n            try {\r\n                getStorage(options).setItem(getUniqueStorageKey(options), JSON.stringify(state))\r\n            } catch (e) {\r\n                errors.log(e.message)\r\n            }\r\n        },\r\n        publicMethods: function() {\r\n            return [\"state\"]\r\n        },\r\n        isEnabled: function() {\r\n            return this.option(\"stateStoring.enabled\")\r\n        },\r\n        init: function() {\r\n            var that = this;\r\n            that._state = {};\r\n            that._isLoaded = false;\r\n            that._isLoading = false;\r\n            that._windowUnloadHandler = function() {\r\n                if (void 0 !== that._savingTimeoutID) {\r\n                    that._saveState(that.state())\r\n                }\r\n            };\r\n            eventsEngine.on(getWindow(), \"unload\", that._windowUnloadHandler);\r\n            return that\r\n        },\r\n        isLoaded: function() {\r\n            return this._isLoaded\r\n        },\r\n        isLoading: function() {\r\n            return this._isLoading\r\n        },\r\n        load: function() {\r\n            this._isLoading = true;\r\n            var loadResult = fromPromise(this._loadState());\r\n            loadResult.always(() => {\r\n                this._isLoaded = true;\r\n                this._isLoading = false\r\n            }).done(state => {\r\n                if (null !== state && !isEmptyObject(state)) {\r\n                    this.state(state)\r\n                }\r\n            });\r\n            return loadResult\r\n        },\r\n        state: function(_state) {\r\n            var that = this;\r\n            if (!arguments.length) {\r\n                return extend(true, {}, that._state)\r\n            } else {\r\n                that._state = extend({}, _state);\r\n                parseDates(that._state)\r\n            }\r\n        },\r\n        save: function() {\r\n            var that = this;\r\n            clearTimeout(that._savingTimeoutID);\r\n            that._savingTimeoutID = setTimeout((function() {\r\n                that._saveState(that.state());\r\n                that._savingTimeoutID = void 0\r\n            }), that.option(\"stateStoring.savingTimeout\"))\r\n        },\r\n        optionChanged: function(args) {\r\n            switch (args.name) {\r\n                case \"stateStoring\":\r\n                    if (this.isEnabled() && !this.isLoading()) {\r\n                        this.load()\r\n                    }\r\n                    args.handled = true;\r\n                    break;\r\n                default:\r\n                    this.callBase(args)\r\n            }\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._savingTimeoutID);\r\n            eventsEngine.off(getWindow(), \"unload\", this._windowUnloadHandler)\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.state_storing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getKeyHash,\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    StateStoringController\r\n} from \"./ui.grid_core.state_storing_core\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar getDataState = that => {\r\n    var pagerView = that.getView(\"pagerView\");\r\n    var dataController = that.getController(\"data\");\r\n    var state = {\r\n        allowedPageSizes: pagerView ? pagerView.getPageSizes() : void 0,\r\n        filterPanel: {\r\n            filterEnabled: that.option(\"filterPanel.filterEnabled\")\r\n        },\r\n        filterValue: that.option(\"filterValue\"),\r\n        focusedRowKey: that.option(\"focusedRowEnabled\") ? that.option(\"focusedRowKey\") : void 0\r\n    };\r\n    return extend(state, dataController.getUserState())\r\n};\r\nvar processLoadState = that => {\r\n    var columnsController = that.getController(\"columns\");\r\n    var selectionController = that.getController(\"selection\");\r\n    var exportController = that.getController(\"export\");\r\n    var dataController = that.getController(\"data\");\r\n    if (columnsController) {\r\n        columnsController.columnsChanged.add((function() {\r\n            that.updateState({\r\n                columns: columnsController.getUserState()\r\n            })\r\n        }))\r\n    }\r\n    if (selectionController) {\r\n        selectionController.selectionChanged.add((function(e) {\r\n            that.updateState({\r\n                selectedRowKeys: e.selectedRowKeys,\r\n                selectionFilter: e.selectionFilter\r\n            })\r\n        }))\r\n    }\r\n    if (dataController) {\r\n        that._initialPageSize = that.option(\"paging.pageSize\");\r\n        that._initialFilterValue = that.option(\"filterValue\");\r\n        dataController.changed.add((function() {\r\n            var state = getDataState(that);\r\n            that.updateState(state)\r\n        }))\r\n    }\r\n    if (exportController) {\r\n        exportController.selectionOnlyChanged.add((function() {\r\n            that.updateState({\r\n                exportSelectionOnly: exportController.selectionOnly()\r\n            })\r\n        }))\r\n    }\r\n};\r\nvar DEFAULT_FILTER_VALUE = null;\r\nvar getFilterValue = (that, state) => {\r\n    var filterSyncController = that.getController(\"filterSync\");\r\n    var columnsController = that.getController(\"columns\");\r\n    var hasFilterState = state.columns || void 0 !== state.filterValue;\r\n    if (filterSyncController) {\r\n        if (hasFilterState) {\r\n            return state.filterValue || filterSyncController.getFilterValueFromColumns(state.columns)\r\n        } else {\r\n            return that._initialFilterValue || filterSyncController.getFilterValueFromColumns(columnsController.getColumns())\r\n        }\r\n    }\r\n    return DEFAULT_FILTER_VALUE\r\n};\r\nexport var stateStoringModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            stateStoring: {\r\n                enabled: false,\r\n                storageKey: null,\r\n                type: \"localStorage\",\r\n                customLoad: null,\r\n                customSave: null,\r\n                savingTimeout: 2e3\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        stateStoring: StateStoringController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                init: function() {\r\n                    var that = this;\r\n                    var dataController = that.getController(\"data\");\r\n                    that.callBase();\r\n                    dataController.stateLoaded.add((function() {\r\n                        if (dataController.isLoaded() && !dataController.getDataSource()) {\r\n                            that.setLoading(false);\r\n                            that.renderNoDataText();\r\n                            var columnHeadersView = that.component.getView(\"columnHeadersView\");\r\n                            columnHeadersView && columnHeadersView.render();\r\n                            that.component._fireContentReadyAction()\r\n                        }\r\n                    }))\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            stateStoring: {\r\n                init: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    processLoadState(this)\r\n                },\r\n                isLoading: function() {\r\n                    return this.callBase() || this.getController(\"data\").isStateLoading()\r\n                },\r\n                state: function(_state) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    if (void 0 !== _state) {\r\n                        this.applyState(extend({}, _state))\r\n                    }\r\n                    return result\r\n                },\r\n                updateState: function(state) {\r\n                    if (this.isEnabled()) {\r\n                        var oldState = this.state();\r\n                        var newState = extend({}, oldState, state);\r\n                        var oldStateHash = getKeyHash(oldState);\r\n                        var newStateHash = getKeyHash(newState);\r\n                        if (!equalByValue(oldStateHash, newStateHash)) {\r\n                            extend(this._state, state);\r\n                            this.save()\r\n                        }\r\n                    } else {\r\n                        extend(this._state, state)\r\n                    }\r\n                },\r\n                applyState: function(state) {\r\n                    var allowedPageSizes = state.allowedPageSizes;\r\n                    var searchText = state.searchText;\r\n                    var selectedRowKeys = state.selectedRowKeys;\r\n                    var selectionFilter = state.selectionFilter;\r\n                    var exportController = this.getController(\"export\");\r\n                    var columnsController = this.getController(\"columns\");\r\n                    var dataController = this.getController(\"data\");\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    var isVirtualScrollingMode = \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\r\n                    var showPageSizeSelector = true === this.option(\"pager.visible\") && this.option(\"pager.showPageSizeSelector\");\r\n                    this.component.beginUpdate();\r\n                    if (columnsController) {\r\n                        columnsController.setUserState(state.columns)\r\n                    }\r\n                    if (exportController) {\r\n                        exportController.selectionOnly(state.exportSelectionOnly)\r\n                    }\r\n                    if (!this.option(\"selection.deferred\")) {\r\n                        this.option(\"selectedRowKeys\", selectedRowKeys || [])\r\n                    }\r\n                    this.option(\"selectionFilter\", selectionFilter);\r\n                    if (allowedPageSizes && \"auto\" === this.option(\"pager.allowedPageSizes\")) {\r\n                        this.option(\"pager\").allowedPageSizes = allowedPageSizes\r\n                    }\r\n                    if (this.option(\"focusedRowEnabled\")) {\r\n                        this.option(\"focusedRowIndex\", -1);\r\n                        this.option(\"focusedRowKey\", state.focusedRowKey || null)\r\n                    }\r\n                    this.component.endUpdate();\r\n                    this.option(\"searchPanel.text\", searchText || \"\");\r\n                    this.option(\"filterValue\", getFilterValue(this, state));\r\n                    this.option(\"filterPanel.filterEnabled\", state.filterPanel ? state.filterPanel.filterEnabled : true);\r\n                    this.option(\"paging.pageIndex\", state.pageIndex || 0);\r\n                    this.option(\"paging.pageSize\", (!isVirtualScrollingMode || showPageSizeSelector) && isDefined(state.pageSize) ? state.pageSize : this._initialPageSize);\r\n                    dataController && dataController.reset()\r\n                }\r\n            },\r\n            columns: {\r\n                getVisibleColumns: function() {\r\n                    var visibleColumns = this.callBase.apply(this, arguments);\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    return stateStoringController.isEnabled() && !stateStoringController.isLoaded() ? [] : visibleColumns\r\n                }\r\n            },\r\n            data: {\r\n                callbackNames: function() {\r\n                    return this.callBase().concat([\"stateLoaded\"])\r\n                },\r\n                _refreshDataSource: function() {\r\n                    var callBase = this.callBase;\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    if (stateStoringController.isEnabled() && !stateStoringController.isLoaded()) {\r\n                        clearTimeout(this._restoreStateTimeoutID);\r\n                        var deferred = new Deferred;\r\n                        this._restoreStateTimeoutID = setTimeout(() => {\r\n                            stateStoringController.load().always(() => {\r\n                                this._restoreStateTimeoutID = null\r\n                            }).done(() => {\r\n                                callBase.call(this);\r\n                                this.stateLoaded.fire();\r\n                                deferred.resolve()\r\n                            }).fail(error => {\r\n                                this.stateLoaded.fire();\r\n                                this._handleLoadError(error || \"Unknown error\");\r\n                                deferred.reject()\r\n                            })\r\n                        });\r\n                        return deferred.promise()\r\n                    } else if (!this.isStateLoading()) {\r\n                        callBase.call(this)\r\n                    }\r\n                },\r\n                isLoading: function() {\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    return this.callBase() || stateStoringController.isLoading()\r\n                },\r\n                isStateLoading: function() {\r\n                    return isDefined(this._restoreStateTimeoutID)\r\n                },\r\n                isLoaded: function() {\r\n                    return this.callBase() && !this.isStateLoading()\r\n                },\r\n                dispose: function() {\r\n                    clearTimeout(this._restoreStateTimeoutID);\r\n                    this.callBase()\r\n                }\r\n            },\r\n            selection: {\r\n                _fireSelectionChanged: function(options) {\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    var isDeferredSelection = this.option(\"selection.deferred\");\r\n                    if (stateStoringController.isLoading() && isDeferredSelection) {\r\n                        return\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.state_storing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    stateStoringModule\r\n} from \"../grid_core/ui.grid_core.state_storing\";\r\ngridCore.registerModule(\"stateStoring\", stateStoringModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.selection.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport gridCore from \"../data_grid/ui.data_grid.core\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    touch\r\n} from \"../../core/utils/support\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    addNamespace,\r\n    isCommandKeyPressed\r\n} from \"../../events/utils/index\";\r\nimport holdEvent from \"../../events/hold\";\r\nimport Selection from \"../selection/selection\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport errors from \"../widget/ui.errors\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar ROW_SELECTION_CLASS = \"dx-selection\";\r\nvar SELECT_CHECKBOX_CLASS = \"dx-select-checkbox\";\r\nvar CHECKBOXES_HIDDEN_CLASS = \"dx-select-checkboxes-hidden\";\r\nvar COMMAND_SELECT_CLASS = \"dx-command-select\";\r\nvar SELECTION_DISABLED_CLASS = \"dx-selection-disabled\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar SHOW_CHECKBOXES_MODE = \"selection.showCheckBoxesMode\";\r\nvar SELECTION_MODE = \"selection.mode\";\r\nvar processLongTap = function(that, dxEvent) {\r\n    var selectionController = that.getController(\"selection\");\r\n    var rowsView = that.getView(\"rowsView\");\r\n    var $row = $(dxEvent.target).closest(\".\" + DATA_ROW_CLASS);\r\n    var rowIndex = rowsView.getRowIndex($row);\r\n    if (rowIndex < 0) {\r\n        return\r\n    }\r\n    if (\"onLongTap\" === that.option(SHOW_CHECKBOXES_MODE)) {\r\n        if (selectionController.isSelectionWithCheckboxes()) {\r\n            selectionController.stopSelectionWithCheckboxes()\r\n        } else {\r\n            selectionController.startSelectionWithCheckboxes()\r\n        }\r\n    } else {\r\n        if (\"onClick\" === that.option(SHOW_CHECKBOXES_MODE)) {\r\n            selectionController.startSelectionWithCheckboxes()\r\n        }\r\n        if (\"always\" !== that.option(SHOW_CHECKBOXES_MODE)) {\r\n            selectionController.changeItemSelection(rowIndex, {\r\n                control: true\r\n            })\r\n        }\r\n    }\r\n};\r\nvar SelectionController = gridCore.Controller.inherit(function() {\r\n    var selectionCellTemplate = (container, options) => {\r\n        var component = options.component;\r\n        var rowsView = component.getView(\"rowsView\");\r\n        if (component.option(\"renderAsync\") && !component.option(\"selection.deferred\")) {\r\n            options.value = component.isRowSelected(options.row.key)\r\n        }\r\n        rowsView.renderSelectCheckBoxContainer($(container), options)\r\n    };\r\n    var selectionHeaderTemplate = (container, options) => {\r\n        var column = options.column;\r\n        var $cellElement = $(container);\r\n        var columnHeadersView = options.component.getView(\"columnHeadersView\");\r\n        $cellElement.addClass(EDITOR_CELL_CLASS);\r\n        columnHeadersView._renderSelectAllCheckBox($cellElement, column);\r\n        columnHeadersView._attachSelectAllCheckBoxClickEvent($cellElement)\r\n    };\r\n    return {\r\n        init: function() {\r\n            var {\r\n                deferred: deferred,\r\n                selectAllMode: selectAllMode,\r\n                mode: mode\r\n            } = this.option(\"selection\") || {};\r\n            if (\"infinite\" === this.option(\"scrolling.mode\") && !deferred && \"multiple\" === mode && \"allPages\" === selectAllMode) {\r\n                errors.log(\"W1018\")\r\n            }\r\n            this._dataController = this.getController(\"data\");\r\n            this._selectionMode = mode;\r\n            this._isSelectionWithCheckboxes = false;\r\n            this._selection = this._createSelection();\r\n            this._updateSelectColumn();\r\n            this.createAction(\"onSelectionChanged\", {\r\n                excludeValidators: [\"disabled\", \"readOnly\"]\r\n            });\r\n            this._dataController && this._dataController.pushed.add(this._handleDataPushed.bind(this))\r\n        },\r\n        _handleDataPushed: function(changes) {\r\n            var removedKeys = changes.filter(change => \"remove\" === change.type).map(change => change.key);\r\n            removedKeys.length && this.deselectRows(removedKeys)\r\n        },\r\n        _getSelectionConfig: function() {\r\n            var dataController = this._dataController;\r\n            var columnsController = this.getController(\"columns\");\r\n            var selectionOptions = this.option(\"selection\") || {};\r\n            var deferred = selectionOptions.deferred;\r\n            var scrollingMode = this.option(\"scrolling.mode\");\r\n            var virtualPaging = \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\r\n            var allowSelectAll = this.option(\"selection.allowSelectAll\");\r\n            var legacyScrollingMode = this.option(\"scrolling.legacyMode\");\r\n            return {\r\n                selectedKeys: this.option(\"selectedRowKeys\"),\r\n                mode: this._selectionMode,\r\n                deferred: deferred,\r\n                maxFilterLengthInRequest: selectionOptions.maxFilterLengthInRequest,\r\n                selectionFilter: this.option(\"selectionFilter\"),\r\n                ignoreDisabledItems: true,\r\n                allowLoadByRange: function() {\r\n                    var hasGroupColumns = columnsController.getGroupColumns().length > 0;\r\n                    return virtualPaging && !legacyScrollingMode && !hasGroupColumns && allowSelectAll && !deferred\r\n                },\r\n                key: function() {\r\n                    return null === dataController || void 0 === dataController ? void 0 : dataController.key()\r\n                },\r\n                keyOf: function(item) {\r\n                    return null === dataController || void 0 === dataController ? void 0 : dataController.keyOf(item)\r\n                },\r\n                dataFields: function() {\r\n                    var _dataController$dataS;\r\n                    return null === (_dataController$dataS = dataController.dataSource()) || void 0 === _dataController$dataS ? void 0 : _dataController$dataS.select()\r\n                },\r\n                load: function(options) {\r\n                    var _dataController$dataS2;\r\n                    return (null === (_dataController$dataS2 = dataController.dataSource()) || void 0 === _dataController$dataS2 ? void 0 : _dataController$dataS2.load(options)) || (new Deferred).resolve([])\r\n                },\r\n                plainItems: function() {\r\n                    return dataController.items(true)\r\n                },\r\n                isItemSelected: function(item) {\r\n                    return item.selected\r\n                },\r\n                isSelectableItem: function(item) {\r\n                    return \"data\" === (null === item || void 0 === item ? void 0 : item.rowType) && !item.isNewRow\r\n                },\r\n                getItemData: function(item) {\r\n                    return (null === item || void 0 === item ? void 0 : item.oldData) || (null === item || void 0 === item ? void 0 : item.data) || item\r\n                },\r\n                filter: function() {\r\n                    return dataController.getCombinedFilter(deferred)\r\n                },\r\n                totalCount: () => dataController.totalCount(),\r\n                getLoadOptions: function(loadItemIndex, focusedItemIndex, shiftItemIndex) {\r\n                    var _dataController$dataS3, _dataController$dataS4;\r\n                    var {\r\n                        sort: sort,\r\n                        filter: filter\r\n                    } = null !== (_dataController$dataS3 = null === (_dataController$dataS4 = dataController.dataSource()) || void 0 === _dataController$dataS4 ? void 0 : _dataController$dataS4.lastLoadOptions()) && void 0 !== _dataController$dataS3 ? _dataController$dataS3 : {};\r\n                    var minIndex = Math.min(loadItemIndex, focusedItemIndex);\r\n                    var maxIndex = Math.max(loadItemIndex, focusedItemIndex);\r\n                    if (isDefined(shiftItemIndex)) {\r\n                        minIndex = Math.min(shiftItemIndex, minIndex);\r\n                        maxIndex = Math.max(shiftItemIndex, maxIndex)\r\n                    }\r\n                    var take = maxIndex - minIndex + 1;\r\n                    return {\r\n                        skip: minIndex,\r\n                        take: take,\r\n                        filter: filter,\r\n                        sort: sort\r\n                    }\r\n                },\r\n                onSelectionChanged: this._updateSelectedItems.bind(this)\r\n            }\r\n        },\r\n        _updateSelectColumn: function() {\r\n            var columnsController = this.getController(\"columns\");\r\n            var isSelectColumnVisible = this.isSelectColumnVisible();\r\n            columnsController.addCommandColumn({\r\n                type: \"selection\",\r\n                command: \"select\",\r\n                visible: isSelectColumnVisible,\r\n                visibleIndex: -1,\r\n                dataType: \"boolean\",\r\n                alignment: \"center\",\r\n                cssClass: COMMAND_SELECT_CLASS,\r\n                width: \"auto\",\r\n                cellTemplate: selectionCellTemplate,\r\n                headerCellTemplate: selectionHeaderTemplate\r\n            });\r\n            columnsController.columnOption(\"command:select\", \"visible\", isSelectColumnVisible)\r\n        },\r\n        _createSelection: function() {\r\n            var options = this._getSelectionConfig();\r\n            return new Selection(options)\r\n        },\r\n        _fireSelectionChanged: function(options) {\r\n            var argument = this.option(\"selection.deferred\") ? {\r\n                selectionFilter: this.option(\"selectionFilter\")\r\n            } : {\r\n                selectedRowKeys: this.option(\"selectedRowKeys\")\r\n            };\r\n            this.selectionChanged.fire(argument);\r\n            if (options) {\r\n                this.executeAction(\"onSelectionChanged\", options)\r\n            }\r\n        },\r\n        _updateCheckboxesState: function(options) {\r\n            var isDeferredMode = options.isDeferredMode;\r\n            var selectionFilter = options.selectionFilter;\r\n            var selectedItemKeys = options.selectedItemKeys;\r\n            var removedItemKeys = options.removedItemKeys;\r\n            if (\"onClick\" === this.option(SHOW_CHECKBOXES_MODE)) {\r\n                if (isDeferredMode ? selectionFilter && function(that, selectionFilter) {\r\n                        var keyIndex = 0;\r\n                        var store = that._dataController.store();\r\n                        var key = store && store.key();\r\n                        var isComplexKey = Array.isArray(key);\r\n                        if (!selectionFilter.length) {\r\n                            return false\r\n                        }\r\n                        if (isComplexKey && Array.isArray(selectionFilter[0]) && \"and\" === selectionFilter[1]) {\r\n                            for (var i = 0; i < selectionFilter.length; i++) {\r\n                                if (Array.isArray(selectionFilter[i])) {\r\n                                    if (selectionFilter[i][0] !== key[keyIndex] || \"=\" !== selectionFilter[i][1]) {\r\n                                        return true\r\n                                    }\r\n                                    keyIndex++\r\n                                }\r\n                            }\r\n                            return false\r\n                        }\r\n                        return key !== selectionFilter[0]\r\n                    }(this, selectionFilter) : selectedItemKeys.length > 1) {\r\n                    this.startSelectionWithCheckboxes()\r\n                } else if (isDeferredMode ? selectionFilter && !selectionFilter.length : 0 === selectedItemKeys.length && removedItemKeys.length) {\r\n                    this.stopSelectionWithCheckboxes()\r\n                }\r\n            }\r\n        },\r\n        _updateSelectedItems: function(args) {\r\n            var selectionChangedOptions;\r\n            var isDeferredMode = this.option(\"selection.deferred\");\r\n            var selectionFilter = this._selection.selectionFilter();\r\n            var dataController = this._dataController;\r\n            var items = dataController.items();\r\n            if (!items) {\r\n                return\r\n            }\r\n            var isSelectionWithCheckboxes = this.isSelectionWithCheckboxes();\r\n            var changedItemIndexes = this.getChangedItemIndexes(items);\r\n            this._updateCheckboxesState({\r\n                selectedItemKeys: args.selectedItemKeys,\r\n                removedItemKeys: args.removedItemKeys,\r\n                selectionFilter: selectionFilter,\r\n                isDeferredMode: isDeferredMode\r\n            });\r\n            if (changedItemIndexes.length || isSelectionWithCheckboxes !== this.isSelectionWithCheckboxes()) {\r\n                dataController.updateItems({\r\n                    changeType: \"updateSelection\",\r\n                    itemIndexes: changedItemIndexes\r\n                })\r\n            }\r\n            if (isDeferredMode) {\r\n                this.option(\"selectionFilter\", selectionFilter);\r\n                selectionChangedOptions = {}\r\n            } else if (args.addedItemKeys.length || args.removedItemKeys.length) {\r\n                this._selectedItemsInternalChange = true;\r\n                this.option(\"selectedRowKeys\", args.selectedItemKeys.slice(0));\r\n                this._selectedItemsInternalChange = false;\r\n                selectionChangedOptions = {\r\n                    selectedRowsData: args.selectedItems.slice(0),\r\n                    selectedRowKeys: args.selectedItemKeys.slice(0),\r\n                    currentSelectedRowKeys: args.addedItemKeys.slice(0),\r\n                    currentDeselectedRowKeys: args.removedItemKeys.slice(0)\r\n                }\r\n            }\r\n            this._fireSelectionChanged(selectionChangedOptions)\r\n        },\r\n        getChangedItemIndexes: function(items) {\r\n            var itemIndexes = [];\r\n            var isDeferredSelection = this.option(\"selection.deferred\");\r\n            for (var i = 0, length = items.length; i < length; i++) {\r\n                var row = items[i];\r\n                var isItemSelected = this.isRowSelected(isDeferredSelection ? row.data : row.key);\r\n                if (this._selection.isDataItem(row) && row.isSelected !== isItemSelected) {\r\n                    itemIndexes.push(i)\r\n                }\r\n            }\r\n            return itemIndexes\r\n        },\r\n        callbackNames: function() {\r\n            return [\"selectionChanged\"]\r\n        },\r\n        optionChanged: function(args) {\r\n            this.callBase(args);\r\n            switch (args.name) {\r\n                case \"selection\":\r\n                    var oldSelectionMode = this._selectionMode;\r\n                    this.init();\r\n                    if (\"selection.showCheckBoxesMode\" !== args.fullName) {\r\n                        var selectionMode = this._selectionMode;\r\n                        var selectedRowKeys = this.option(\"selectedRowKeys\");\r\n                        if (oldSelectionMode !== selectionMode) {\r\n                            if (\"single\" === selectionMode) {\r\n                                if (selectedRowKeys.length > 1) {\r\n                                    selectedRowKeys = [selectedRowKeys[0]]\r\n                                }\r\n                            } else if (\"multiple\" !== selectionMode) {\r\n                                selectedRowKeys = []\r\n                            }\r\n                        }\r\n                        this.selectRows(selectedRowKeys).always(() => {\r\n                            this._fireSelectionChanged()\r\n                        })\r\n                    }\r\n                    this.getController(\"columns\").updateColumns();\r\n                    args.handled = true;\r\n                    break;\r\n                case \"selectionFilter\":\r\n                    this._selection.selectionFilter(args.value);\r\n                    args.handled = true;\r\n                    break;\r\n                case \"selectedRowKeys\":\r\n                    var value = args.value || [];\r\n                    if (Array.isArray(value) && !this._selectedItemsInternalChange && (this.component.getDataSource() || !value.length)) {\r\n                        this.selectRows(value)\r\n                    }\r\n                    args.handled = true\r\n            }\r\n        },\r\n        publicMethods: function() {\r\n            return [\"selectRows\", \"deselectRows\", \"selectRowsByIndexes\", \"getSelectedRowKeys\", \"getSelectedRowsData\", \"clearSelection\", \"selectAll\", \"deselectAll\", \"startSelectionWithCheckboxes\", \"stopSelectionWithCheckboxes\", \"isRowSelected\"]\r\n        },\r\n        isRowSelected: function(arg) {\r\n            return this._selection.isItemSelected(arg)\r\n        },\r\n        isSelectColumnVisible: function() {\r\n            return \"multiple\" === this.option(SELECTION_MODE) && (\"always\" === this.option(SHOW_CHECKBOXES_MODE) || \"onClick\" === this.option(SHOW_CHECKBOXES_MODE) || this._isSelectionWithCheckboxes)\r\n        },\r\n        _isOnePageSelectAll: function() {\r\n            return \"page\" === this.option(\"selection.selectAllMode\")\r\n        },\r\n        isSelectAll: function() {\r\n            return this._selection.getSelectAllState(this._isOnePageSelectAll())\r\n        },\r\n        selectAll: function() {\r\n            if (\"onClick\" === this.option(SHOW_CHECKBOXES_MODE)) {\r\n                this.startSelectionWithCheckboxes()\r\n            }\r\n            return this._selection.selectAll(this._isOnePageSelectAll())\r\n        },\r\n        deselectAll: function() {\r\n            return this._selection.deselectAll(this._isOnePageSelectAll())\r\n        },\r\n        clearSelection: function() {\r\n            return this.selectedItemKeys([])\r\n        },\r\n        refresh: function() {\r\n            var selectedRowKeys = this.option(\"selectedRowKeys\") || [];\r\n            if (!this.option(\"selection.deferred\") && selectedRowKeys.length) {\r\n                return this.selectedItemKeys(selectedRowKeys)\r\n            }\r\n            return (new Deferred).resolve().promise()\r\n        },\r\n        selectedItemKeys: function(value, preserve, isDeselect, isSelectAll) {\r\n            return this._selection.selectedItemKeys(value, preserve, isDeselect, isSelectAll)\r\n        },\r\n        getSelectedRowKeys: function() {\r\n            return this._selection.getSelectedItemKeys()\r\n        },\r\n        selectRows: function(keys, preserve) {\r\n            return this.selectedItemKeys(keys, preserve)\r\n        },\r\n        deselectRows: function(keys) {\r\n            return this.selectedItemKeys(keys, true, true)\r\n        },\r\n        selectRowsByIndexes: function(indexes) {\r\n            var items = this._dataController.items();\r\n            var keys = [];\r\n            if (!Array.isArray(indexes)) {\r\n                indexes = Array.prototype.slice.call(arguments, 0)\r\n            }\r\n            each(indexes, (function() {\r\n                var item = items[this];\r\n                if (item && \"data\" === item.rowType) {\r\n                    keys.push(item.key)\r\n                }\r\n            }));\r\n            return this.selectRows(keys)\r\n        },\r\n        getSelectedRowsData: function() {\r\n            return this._selection.getSelectedItems()\r\n        },\r\n        changeItemSelection: function(visibleItemIndex, keys) {\r\n            keys = keys || {};\r\n            if (this.isSelectionWithCheckboxes()) {\r\n                keys.control = true\r\n            }\r\n            var loadedItemIndex = visibleItemIndex + this._dataController.getRowIndexOffset() - this._dataController.getRowIndexOffset(true);\r\n            return this._selection.changeItemSelection(loadedItemIndex, keys)\r\n        },\r\n        focusedItemIndex: function(itemIndex) {\r\n            if (isDefined(itemIndex)) {\r\n                this._selection._focusedItemIndex = itemIndex\r\n            } else {\r\n                return this._selection._focusedItemIndex\r\n            }\r\n        },\r\n        isSelectionWithCheckboxes: function() {\r\n            return \"multiple\" === this.option(SELECTION_MODE) && (\"always\" === this.option(SHOW_CHECKBOXES_MODE) || this._isSelectionWithCheckboxes)\r\n        },\r\n        startSelectionWithCheckboxes: function() {\r\n            if (\"multiple\" === this.option(SELECTION_MODE) && !this.isSelectionWithCheckboxes()) {\r\n                this._isSelectionWithCheckboxes = true;\r\n                this._updateSelectColumn();\r\n                return true\r\n            }\r\n            return false\r\n        },\r\n        stopSelectionWithCheckboxes: function() {\r\n            if (this._isSelectionWithCheckboxes) {\r\n                this._isSelectionWithCheckboxes = false;\r\n                this._updateSelectColumn();\r\n                return true\r\n            }\r\n            return false\r\n        }\r\n    }\r\n}());\r\nexport var selectionModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            selection: {\r\n                mode: \"none\",\r\n                showCheckBoxesMode: \"onClick\",\r\n                allowSelectAll: true,\r\n                selectAllMode: \"allPages\",\r\n                maxFilterLengthInRequest: 1500,\r\n                deferred: false\r\n            },\r\n            selectionFilter: [],\r\n            selectedRowKeys: []\r\n        }\r\n    },\r\n    controllers: {\r\n        selection: SelectionController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                init: function() {\r\n                    var selectionController = this.getController(\"selection\");\r\n                    var isDeferredMode = this.option(\"selection.deferred\");\r\n                    this.callBase.apply(this, arguments);\r\n                    if (isDeferredMode) {\r\n                        selectionController._updateCheckboxesState({\r\n                            isDeferredMode: true,\r\n                            selectionFilter: this.option(\"selectionFilter\")\r\n                        })\r\n                    }\r\n                },\r\n                _loadDataSource: function() {\r\n                    var that = this;\r\n                    return that.callBase().done((function() {\r\n                        that.getController(\"selection\").refresh()\r\n                    }))\r\n                },\r\n                _processDataItem: function(item, options) {\r\n                    var that = this;\r\n                    var selectionController = that.getController(\"selection\");\r\n                    var hasSelectColumn = selectionController.isSelectColumnVisible();\r\n                    var isDeferredSelection = options.isDeferredSelection = void 0 === options.isDeferredSelection ? this.option(\"selection.deferred\") : options.isDeferredSelection;\r\n                    var dataItem = this.callBase.apply(this, arguments);\r\n                    dataItem.isSelected = selectionController.isRowSelected(isDeferredSelection ? dataItem.data : dataItem.key);\r\n                    if (hasSelectColumn && dataItem.values) {\r\n                        for (var i = 0; i < options.visibleColumns.length; i++) {\r\n                            if (\"select\" === options.visibleColumns[i].command) {\r\n                                dataItem.values[i] = dataItem.isSelected;\r\n                                break\r\n                            }\r\n                        }\r\n                    }\r\n                    return dataItem\r\n                },\r\n                refresh: function(options) {\r\n                    var that = this;\r\n                    var d = new Deferred;\r\n                    this.callBase.apply(this, arguments).done((function() {\r\n                        if (!options || options.selection) {\r\n                            that.getController(\"selection\").refresh().done(d.resolve).fail(d.reject)\r\n                        } else {\r\n                            d.resolve()\r\n                        }\r\n                    })).fail(d.reject);\r\n                    return d.promise()\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if ((!e || \"refresh\" === e.changeType) && !this._repaintChangesOnly) {\r\n                        this.getController(\"selection\").focusedItemIndex(-1)\r\n                    }\r\n                },\r\n                _applyChange: function(change) {\r\n                    if (change && \"updateSelection\" === change.changeType) {\r\n                        change.items.forEach((item, index) => {\r\n                            var currentItem = this._items[index];\r\n                            if (currentItem) {\r\n                                currentItem.isSelected = item.isSelected;\r\n                                currentItem.values = item.values\r\n                            }\r\n                        });\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _endUpdateCore: function() {\r\n                    var changes = this._changes;\r\n                    var isUpdateSelection = changes.length > 1 && changes.every(change => \"updateSelection\" === change.changeType);\r\n                    if (isUpdateSelection) {\r\n                        var itemIndexes = changes.map(change => change.itemIndexes || []).reduce((a, b) => a.concat(b));\r\n                        this._changes = [{\r\n                            changeType: \"updateSelection\",\r\n                            itemIndexes: itemIndexes\r\n                        }]\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                }\r\n            },\r\n            contextMenu: {\r\n                _contextMenuPrepared: function(options) {\r\n                    var dxEvent = options.event;\r\n                    if (dxEvent.originalEvent && \"dxhold\" !== dxEvent.originalEvent.type || options.items && options.items.length > 0) {\r\n                        return\r\n                    }\r\n                    processLongTap(this, dxEvent)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            columnHeadersView: {\r\n                init: function() {\r\n                    this.callBase();\r\n                    this.getController(\"selection\").selectionChanged.add(this._updateSelectAllValue.bind(this))\r\n                },\r\n                _updateSelectAllValue: function() {\r\n                    var $element = this.element();\r\n                    var $editor = $element && $element.find(\".\" + SELECT_CHECKBOX_CLASS);\r\n                    if ($element && $editor.length && \"multiple\" === this.option(\"selection.mode\")) {\r\n                        var selectAllValue = this.getController(\"selection\").isSelectAll();\r\n                        var hasSelection = false !== selectAllValue;\r\n                        var isVisible = this.option(\"selection.allowSelectAll\") ? !this.getController(\"data\").isEmpty() : hasSelection;\r\n                        $editor.dxCheckBox(\"instance\").option({\r\n                            visible: isVisible,\r\n                            value: selectAllValue\r\n                        })\r\n                    }\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    this.callBase(e);\r\n                    if (!e || \"refresh\" === e.changeType) {\r\n                        this._updateSelectAllValue()\r\n                    }\r\n                },\r\n                _renderSelectAllCheckBox: function($container, column) {\r\n                    var that = this;\r\n                    var selectionController = that.getController(\"selection\");\r\n                    var isEmptyData = that.getController(\"data\").isEmpty();\r\n                    var groupElement = $(\"<div>\").appendTo($container).addClass(SELECT_CHECKBOX_CLASS);\r\n                    that.setAria(\"label\", messageLocalization.format(\"dxDataGrid-ariaSelectAll\"), $container);\r\n                    that.getController(\"editorFactory\").createEditor(groupElement, extend({}, column, {\r\n                        parentType: \"headerRow\",\r\n                        dataType: \"boolean\",\r\n                        value: selectionController.isSelectAll(),\r\n                        editorOptions: {\r\n                            visible: !isEmptyData && (that.option(\"selection.allowSelectAll\") || false !== selectionController.isSelectAll())\r\n                        },\r\n                        tabIndex: that.option(\"useLegacyKeyboardNavigation\") ? -1 : that.option(\"tabIndex\") || 0,\r\n                        setValue: function(value, e) {\r\n                            var allowSelectAll = that.option(\"selection.allowSelectAll\");\r\n                            e.component.option(\"visible\", allowSelectAll || false !== e.component.option(\"value\"));\r\n                            if (!e.event || selectionController.isSelectAll() === value) {\r\n                                return\r\n                            }\r\n                            if (e.value && !allowSelectAll) {\r\n                                e.component.option(\"value\", false)\r\n                            } else {\r\n                                e.value ? selectionController.selectAll() : selectionController.deselectAll()\r\n                            }\r\n                            e.event.preventDefault()\r\n                        }\r\n                    }));\r\n                    return groupElement\r\n                },\r\n                _attachSelectAllCheckBoxClickEvent: function($element) {\r\n                    eventsEngine.on($element, clickEventName, this.createAction((function(e) {\r\n                        var event = e.event;\r\n                        if (!$(event.target).closest(\".\" + SELECT_CHECKBOX_CLASS).length) {\r\n                            eventsEngine.trigger($(event.currentTarget).children(\".\" + SELECT_CHECKBOX_CLASS), clickEventName)\r\n                        }\r\n                        event.preventDefault()\r\n                    })))\r\n                }\r\n            },\r\n            rowsView: {\r\n                renderSelectCheckBoxContainer: function($container, options) {\r\n                    if (\"data\" === options.rowType && !options.row.isNewRow) {\r\n                        $container.addClass(EDITOR_CELL_CLASS);\r\n                        this._attachCheckBoxClickEvent($container);\r\n                        this.setAria(\"label\", messageLocalization.format(\"dxDataGrid-ariaSelectRow\"), $container);\r\n                        this._renderSelectCheckBox($container, options)\r\n                    } else {\r\n                        gridCoreUtils.setEmptyText($container)\r\n                    }\r\n                },\r\n                _renderSelectCheckBox: function(container, options) {\r\n                    var groupElement = $(\"<div>\").addClass(SELECT_CHECKBOX_CLASS).appendTo(container);\r\n                    this.getController(\"editorFactory\").createEditor(groupElement, extend({}, options.column, {\r\n                        parentType: \"dataRow\",\r\n                        dataType: \"boolean\",\r\n                        lookup: null,\r\n                        value: options.value,\r\n                        setValue: function(value, e) {\r\n                            var _e$event;\r\n                            if (\"keydown\" === (null === e || void 0 === e ? void 0 : null === (_e$event = e.event) || void 0 === _e$event ? void 0 : _e$event.type)) {\r\n                                eventsEngine.trigger(e.element, clickEventName, e)\r\n                            }\r\n                        },\r\n                        row: options.row\r\n                    }));\r\n                    return groupElement\r\n                },\r\n                _attachCheckBoxClickEvent: function($element) {\r\n                    eventsEngine.on($element, clickEventName, this.createAction((function(e) {\r\n                        var selectionController = this.getController(\"selection\");\r\n                        var event = e.event;\r\n                        var rowIndex = this.getRowIndex($(event.currentTarget).closest(\".\" + ROW_CLASS));\r\n                        if (rowIndex >= 0) {\r\n                            selectionController.startSelectionWithCheckboxes();\r\n                            selectionController.changeItemSelection(rowIndex, {\r\n                                shift: event.shiftKey\r\n                            });\r\n                            if ($(event.target).closest(\".\" + SELECT_CHECKBOX_CLASS).length) {\r\n                                this.getController(\"data\").updateItems({\r\n                                    changeType: \"updateSelection\",\r\n                                    itemIndexes: [rowIndex]\r\n                                })\r\n                            }\r\n                        }\r\n                    })))\r\n                },\r\n                _update: function(change) {\r\n                    var that = this;\r\n                    var tableElements = that.getTableElements();\r\n                    if (\"updateSelection\" === change.changeType) {\r\n                        if (tableElements.length > 0) {\r\n                            each(tableElements, (function(_, tableElement) {\r\n                                each(change.itemIndexes || [], (function(_, index) {\r\n                                    var $row;\r\n                                    if (change.items[index]) {\r\n                                        $row = that._getRowElements($(tableElement)).eq(index);\r\n                                        if ($row.length) {\r\n                                            var isSelected = change.items[index].isSelected;\r\n                                            $row.toggleClass(ROW_SELECTION_CLASS, void 0 === isSelected ? false : isSelected).find(\".\" + SELECT_CHECKBOX_CLASS).dxCheckBox(\"option\", \"value\", isSelected);\r\n                                            that.setAria(\"selected\", isSelected, $row)\r\n                                        }\r\n                                    }\r\n                                }))\r\n                            }));\r\n                            that._updateCheckboxesClass()\r\n                        }\r\n                    } else {\r\n                        that.callBase(change)\r\n                    }\r\n                },\r\n                _createTable: function() {\r\n                    var that = this;\r\n                    var selectionMode = that.option(\"selection.mode\");\r\n                    var $table = that.callBase.apply(that, arguments);\r\n                    if (\"none\" !== selectionMode) {\r\n                        if (\"onLongTap\" === that.option(SHOW_CHECKBOXES_MODE) || !touch) {\r\n                            eventsEngine.on($table, addNamespace(holdEvent.name, \"dxDataGridRowsView\"), \".\" + DATA_ROW_CLASS, that.createAction((function(e) {\r\n                                processLongTap(that.component, e.event);\r\n                                e.event.stopPropagation()\r\n                            })))\r\n                        }\r\n                        eventsEngine.on($table, \"mousedown selectstart\", that.createAction((function(e) {\r\n                            var event = e.event;\r\n                            if (event.shiftKey) {\r\n                                event.preventDefault()\r\n                            }\r\n                        })))\r\n                    }\r\n                    return $table\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var isSelected = !!row.isSelected;\r\n                        if (isSelected) {\r\n                            $row.addClass(ROW_SELECTION_CLASS)\r\n                        }\r\n                        this.setAria(\"selected\", isSelected, $row)\r\n                    }\r\n                    return $row\r\n                },\r\n                _rowClick: function(e) {\r\n                    var dxEvent = e.event;\r\n                    var isSelectionDisabled = $(dxEvent.target).closest(\".\" + SELECTION_DISABLED_CLASS).length;\r\n                    if (!this.isClickableElement($(dxEvent.target))) {\r\n                        if (!isSelectionDisabled && (\"multiple\" !== this.option(SELECTION_MODE) || \"always\" !== this.option(SHOW_CHECKBOXES_MODE))) {\r\n                            if (this.getController(\"selection\").changeItemSelection(e.rowIndex, {\r\n                                    control: isCommandKeyPressed(dxEvent),\r\n                                    shift: dxEvent.shiftKey\r\n                                })) {\r\n                                dxEvent.preventDefault();\r\n                                e.handled = true\r\n                            }\r\n                        }\r\n                        this.callBase(e)\r\n                    }\r\n                },\r\n                isClickableElement: function($target) {\r\n                    var isCommandSelect = $target.closest(\".\" + COMMAND_SELECT_CLASS).length;\r\n                    return !!isCommandSelect\r\n                },\r\n                _renderCore: function(change) {\r\n                    this.callBase(change);\r\n                    this._updateCheckboxesClass()\r\n                },\r\n                _updateCheckboxesClass: function() {\r\n                    var tableElements = this.getTableElements();\r\n                    var selectionController = this.getController(\"selection\");\r\n                    var isCheckBoxesHidden = selectionController.isSelectColumnVisible() && !selectionController.isSelectionWithCheckboxes();\r\n                    each(tableElements, (function(_, tableElement) {\r\n                        $(tableElement).toggleClass(CHECKBOXES_HIDDEN_CLASS, isCheckBoxesHidden)\r\n                    }))\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.selection.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    selectionModule\r\n} from \"../grid_core/ui.grid_core.selection\";\r\ngridCore.registerModule(\"selection\", selectionModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_chooser.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    deferUpdate,\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    ColumnsView\r\n} from \"./ui.grid_core.columns_view\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    isMaterial as isMaterialTheme,\r\n    isGeneric,\r\n    current\r\n} from \"../themes\";\r\nimport Button from \"../button\";\r\nimport TreeView from \"../tree_view\";\r\nimport devices from \"../../core/devices\";\r\nimport Popup from \"../popup\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nvar COLUMN_CHOOSER_CLASS = \"column-chooser\";\r\nvar COLUMN_CHOOSER_BUTTON_CLASS = \"column-chooser-button\";\r\nvar NOTOUCH_ACTION_CLASS = \"notouch-action\";\r\nvar COLUMN_CHOOSER_LIST_CLASS = \"column-chooser-list\";\r\nvar COLUMN_CHOOSER_PLAIN_CLASS = \"column-chooser-plain\";\r\nvar COLUMN_CHOOSER_DRAG_CLASS = \"column-chooser-mode-drag\";\r\nvar COLUMN_CHOOSER_SELECT_CLASS = \"column-chooser-mode-select\";\r\nvar COLUMN_CHOOSER_ICON_NAME = \"column-chooser\";\r\nvar COLUMN_CHOOSER_ITEM_CLASS = \"dx-column-chooser-item\";\r\nvar TREEVIEW_NODE_SELECTOR = \".dx-treeview-node\";\r\nvar CHECKBOX_SELECTOR = \".dx-checkbox\";\r\nvar CLICK_TIMEOUT = 300;\r\nvar processItems = function(that, chooserColumns) {\r\n    var items = [];\r\n    var isSelectMode = \"select\" === that.option(\"columnChooser.mode\");\r\n    if (chooserColumns.length) {\r\n        each(chooserColumns, (function(index, column) {\r\n            var item = {\r\n                text: column.caption,\r\n                cssClass: column.cssClass,\r\n                allowHiding: column.allowHiding,\r\n                expanded: true,\r\n                id: column.index,\r\n                disabled: false,\r\n                disableCheckBox: false === column.allowHiding,\r\n                parentId: isDefined(column.ownerBand) ? column.ownerBand : null\r\n            };\r\n            if (isSelectMode) {\r\n                item.selected = column.visible\r\n            }\r\n            items.push(item)\r\n        }))\r\n    }\r\n    return items\r\n};\r\nvar ColumnChooserController = modules.ViewController.inherit({\r\n    renderShowColumnChooserButton: function($element) {\r\n        var that = this;\r\n        var columnChooserButtonClass = that.addWidgetPrefix(COLUMN_CHOOSER_BUTTON_CLASS);\r\n        var columnChooserEnabled = that.option(\"columnChooser.enabled\");\r\n        var $showColumnChooserButton = $element.find(\".\" + columnChooserButtonClass);\r\n        var $columnChooserButton;\r\n        if (columnChooserEnabled) {\r\n            if (!$showColumnChooserButton.length) {\r\n                $columnChooserButton = $(\"<div>\").addClass(columnChooserButtonClass).appendTo($element);\r\n                that._createComponent($columnChooserButton, Button, {\r\n                    icon: COLUMN_CHOOSER_ICON_NAME,\r\n                    onClick: function() {\r\n                        that.getView(\"columnChooserView\").showColumnChooser()\r\n                    },\r\n                    hint: that.option(\"columnChooser.title\"),\r\n                    integrationOptions: {}\r\n                })\r\n            } else {\r\n                $showColumnChooserButton.show()\r\n            }\r\n        } else {\r\n            $showColumnChooserButton.hide()\r\n        }\r\n    },\r\n    getPosition: function() {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        return {\r\n            my: \"right bottom\",\r\n            at: \"right bottom\",\r\n            of: rowsView && rowsView.element(),\r\n            collision: \"fit\",\r\n            offset: \"-2 -2\",\r\n            boundaryOffset: \"2 2\"\r\n        }\r\n    }\r\n});\r\nvar ColumnChooserView = ColumnsView.inherit({\r\n    _resizeCore: noop,\r\n    _isWinDevice: function() {\r\n        return !!devices.real().win\r\n    },\r\n    _updateList: function(change) {\r\n        var items;\r\n        var $popupContent = this._popupContainer.$content();\r\n        var isSelectMode = \"select\" === this.option(\"columnChooser.mode\");\r\n        var columnChooserList = this._columnChooserList;\r\n        var chooserColumns = this._columnsController.getChooserColumns(isSelectMode);\r\n        if (isSelectMode && columnChooserList && change && \"selection\" === change.changeType) {\r\n            items = processItems(this, chooserColumns);\r\n            for (var i = 0; i < items.length; i++) {\r\n                var selected = items[i].selected;\r\n                var id = items[i].id;\r\n                if (id === change.columnIndex) {\r\n                    if (selected) {\r\n                        columnChooserList.selectItem(id, selected)\r\n                    } else {\r\n                        columnChooserList.unselectItem(id, selected)\r\n                    }\r\n                }\r\n            }\r\n        } else if (!isSelectMode || !columnChooserList || \"full\" === change) {\r\n            this._popupContainer.$wrapper().toggleClass(this.addWidgetPrefix(COLUMN_CHOOSER_DRAG_CLASS), !isSelectMode).toggleClass(this.addWidgetPrefix(COLUMN_CHOOSER_SELECT_CLASS), isSelectMode);\r\n            items = processItems(this, chooserColumns);\r\n            this._renderTreeView($popupContent, items)\r\n        }\r\n    },\r\n    _initializePopupContainer: function() {\r\n        var that = this;\r\n        var $element = that.element().addClass(that.addWidgetPrefix(COLUMN_CHOOSER_CLASS));\r\n        var columnChooserOptions = that.option(\"columnChooser\");\r\n        var themeName = current();\r\n        var isGenericTheme = isGeneric(themeName);\r\n        var isMaterial = isMaterialTheme(themeName);\r\n        var dxPopupOptions = {\r\n            visible: false,\r\n            shading: false,\r\n            showCloseButton: false,\r\n            dragEnabled: true,\r\n            resizeEnabled: true,\r\n            copyRootClassesToWrapper: true,\r\n            _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n            toolbarItems: [{\r\n                text: columnChooserOptions.title,\r\n                toolbar: \"top\",\r\n                location: isGenericTheme || isMaterial ? \"before\" : \"center\"\r\n            }],\r\n            position: that.getController(\"columnChooser\").getPosition(),\r\n            width: columnChooserOptions.width,\r\n            height: columnChooserOptions.height,\r\n            rtlEnabled: that.option(\"rtlEnabled\"),\r\n            onHidden: function() {\r\n                if (that._isWinDevice()) {\r\n                    $(\"body\").removeClass(that.addWidgetPrefix(NOTOUCH_ACTION_CLASS))\r\n                }\r\n            },\r\n            container: columnChooserOptions.container\r\n        };\r\n        if (isGenericTheme || isMaterial) {\r\n            extend(dxPopupOptions, {\r\n                showCloseButton: true\r\n            })\r\n        } else {\r\n            dxPopupOptions.toolbarItems[dxPopupOptions.toolbarItems.length] = {\r\n                shortcut: \"cancel\"\r\n            }\r\n        }\r\n        if (!isDefined(this._popupContainer)) {\r\n            that._popupContainer = that._createComponent($element, Popup, dxPopupOptions);\r\n            that._popupContainer.on(\"optionChanged\", (function(args) {\r\n                if (\"visible\" === args.name) {\r\n                    that.renderCompleted.fire()\r\n                }\r\n            }))\r\n        } else {\r\n            this._popupContainer.option(dxPopupOptions)\r\n        }\r\n    },\r\n    _renderCore: function(change) {\r\n        if (this._popupContainer) {\r\n            this._updateList(change)\r\n        }\r\n    },\r\n    _renderTreeView: function($container, items) {\r\n        var that = this;\r\n        var columnChooser = this.option(\"columnChooser\");\r\n        var isSelectMode = \"select\" === columnChooser.mode;\r\n        var treeViewConfig = {\r\n            items: items,\r\n            dataStructure: \"plain\",\r\n            activeStateEnabled: true,\r\n            focusStateEnabled: true,\r\n            hoverStateEnabled: true,\r\n            itemTemplate: \"item\",\r\n            showCheckBoxesMode: \"none\",\r\n            rootValue: null,\r\n            searchEnabled: columnChooser.allowSearch,\r\n            searchTimeout: columnChooser.searchTimeout,\r\n            onItemRendered: function(e) {\r\n                if (e.itemData.disableCheckBox) {\r\n                    var $treeViewNode = $(e.itemElement).closest(TREEVIEW_NODE_SELECTOR);\r\n                    var $checkBox;\r\n                    if ($treeViewNode.length) {\r\n                        $checkBox = $treeViewNode.find(CHECKBOX_SELECTOR);\r\n                        if ($checkBox.length) {\r\n                            var checkBoxInstance = $checkBox.data(\"dxCheckBox\");\r\n                            checkBoxInstance && checkBoxInstance.option(\"disabled\", true)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        var scrollableInstance = $container.find(\".dx-scrollable\").data(\"dxScrollable\");\r\n        var scrollTop = scrollableInstance && scrollableInstance.scrollTop();\r\n        if (isSelectMode && !this._columnsController.isBandColumnsUsed()) {\r\n            $container.addClass(this.addWidgetPrefix(COLUMN_CHOOSER_PLAIN_CLASS))\r\n        }\r\n        treeViewConfig.onContentReady = function(e) {\r\n            deferUpdate((function() {\r\n                if (scrollTop) {\r\n                    var scrollable = $(e.element).find(\".dx-scrollable\").data(\"dxScrollable\");\r\n                    scrollable && scrollable.scrollTo({\r\n                        y: scrollTop\r\n                    })\r\n                }\r\n                that.renderCompleted.fire()\r\n            }))\r\n        };\r\n        if (this._isWinDevice()) {\r\n            treeViewConfig.useNativeScrolling = false\r\n        }\r\n        extend(treeViewConfig, isSelectMode ? this._prepareSelectModeConfig() : this._prepareDragModeConfig());\r\n        if (this._columnChooserList) {\r\n            if (!treeViewConfig.searchEnabled) {\r\n                treeViewConfig.searchValue = \"\"\r\n            }\r\n            this._columnChooserList.option(treeViewConfig)\r\n        } else {\r\n            this._columnChooserList = this._createComponent($container, TreeView, treeViewConfig);\r\n            $container.addClass(this.addWidgetPrefix(COLUMN_CHOOSER_LIST_CLASS))\r\n        }\r\n    },\r\n    _prepareDragModeConfig: function() {\r\n        var columnChooserOptions = this.option(\"columnChooser\");\r\n        return {\r\n            noDataText: columnChooserOptions.emptyPanelText,\r\n            activeStateEnabled: false,\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            itemTemplate: function(data, index, item) {\r\n                $(item).text(data.text).parent().addClass(data.cssClass).addClass(COLUMN_CHOOSER_ITEM_CLASS)\r\n            }\r\n        }\r\n    },\r\n    _prepareSelectModeConfig: function() {\r\n        var that = this;\r\n        return {\r\n            selectNodesRecursive: false,\r\n            showCheckBoxesMode: \"normal\",\r\n            onItemSelectionChanged: function(e) {\r\n                var visibleColumns = that._columnsController.getVisibleColumns().filter((function(item) {\r\n                    return !item.command\r\n                }));\r\n                var isLastColumnUnselected = 1 === visibleColumns.length && !e.itemData.selected;\r\n                if (isLastColumnUnselected) {\r\n                    e.component.selectItem(e.itemElement)\r\n                } else {\r\n                    setTimeout((function() {\r\n                        that._columnsController.columnOption(e.itemData.id, \"visible\", e.itemData.selected)\r\n                    }), CLICK_TIMEOUT)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var changeTypes = e.changeTypes;\r\n        var optionNames = e.optionNames;\r\n        var isSelectMode = \"select\" === this.option(\"columnChooser.mode\");\r\n        this.callBase(e);\r\n        if (isSelectMode) {\r\n            var needPartialRender = optionNames.visible && 1 === optionNames.length && void 0 !== e.columnIndex;\r\n            var needFullRender = optionNames.showInColumnChooser || optionNames.caption || optionNames.visible || changeTypes.columns && optionNames.all;\r\n            if (needPartialRender) {\r\n                this.render(null, {\r\n                    changeType: \"selection\",\r\n                    columnIndex: e.columnIndex\r\n                })\r\n            } else if (needFullRender) {\r\n                this.render(null, \"full\")\r\n            }\r\n        }\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"columnChooser\":\r\n                this._initializePopupContainer();\r\n                this.render(null, \"full\");\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    getColumnElements: function() {\r\n        var result = [];\r\n        var $node;\r\n        var isSelectMode = \"select\" === this.option(\"columnChooser.mode\");\r\n        var chooserColumns = this._columnsController.getChooserColumns(isSelectMode);\r\n        var $content = this._popupContainer && this._popupContainer.$content();\r\n        var $nodes = $content && $content.find(\".dx-treeview-node\");\r\n        if ($nodes) {\r\n            chooserColumns.forEach((function(column) {\r\n                $node = $nodes.filter(\"[data-item-id = '\" + column.index + \"']\");\r\n                var item = $node.length ? $node.children(\".\" + COLUMN_CHOOSER_ITEM_CLASS).get(0) : null;\r\n                result.push(item)\r\n            }))\r\n        }\r\n        return $(result)\r\n    },\r\n    getName: function() {\r\n        return \"columnChooser\"\r\n    },\r\n    getColumns: function() {\r\n        return this._columnsController.getChooserColumns()\r\n    },\r\n    allowDragging: function(column, sourceLocation) {\r\n        var columnVisible = column && column.allowHiding && (\"columnChooser\" !== sourceLocation || !column.visible && this._columnsController.isParentColumnVisible(column.index));\r\n        return this.isColumnChooserVisible() && columnVisible\r\n    },\r\n    getBoundingRect: function() {\r\n        var container = this._popupContainer && this._popupContainer.$overlayContent();\r\n        if (container && container.is(\":visible\")) {\r\n            var offset = container.offset();\r\n            return {\r\n                left: offset.left,\r\n                top: offset.top,\r\n                right: offset.left + getOuterWidth(container),\r\n                bottom: offset.top + getOuterHeight(container)\r\n            }\r\n        }\r\n        return null\r\n    },\r\n    showColumnChooser: function() {\r\n        if (!this._popupContainer) {\r\n            this._initializePopupContainer();\r\n            this.render()\r\n        }\r\n        this._popupContainer.show();\r\n        if (this._isWinDevice()) {\r\n            $(\"body\").addClass(this.addWidgetPrefix(NOTOUCH_ACTION_CLASS))\r\n        }\r\n    },\r\n    hideColumnChooser: function() {\r\n        if (this._popupContainer) {\r\n            this._popupContainer.hide()\r\n        }\r\n    },\r\n    isColumnChooserVisible: function() {\r\n        var popupContainer = this._popupContainer;\r\n        return popupContainer && popupContainer.option(\"visible\")\r\n    },\r\n    publicMethods: function() {\r\n        return [\"showColumnChooser\", \"hideColumnChooser\"]\r\n    }\r\n});\r\nexport var columnChooserModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            columnChooser: {\r\n                enabled: false,\r\n                allowSearch: false,\r\n                searchTimeout: 500,\r\n                mode: \"dragAndDrop\",\r\n                width: 250,\r\n                height: 260,\r\n                title: messageLocalization.format(\"dxDataGrid-columnChooserTitle\"),\r\n                emptyPanelText: messageLocalization.format(\"dxDataGrid-columnChooserEmptyText\"),\r\n                container: void 0\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        columnChooser: ColumnChooserController\r\n    },\r\n    views: {\r\n        columnChooserView: ColumnChooserView\r\n    },\r\n    extenders: {\r\n        views: {\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    return this._appendColumnChooserItem(items)\r\n                },\r\n                _appendColumnChooserItem: function(items) {\r\n                    var that = this;\r\n                    var columnChooserEnabled = that.option(\"columnChooser.enabled\");\r\n                    if (columnChooserEnabled) {\r\n                        var hintText = that.option(\"columnChooser.title\");\r\n                        var toolbarItem = {\r\n                            widget: \"dxButton\",\r\n                            options: {\r\n                                icon: COLUMN_CHOOSER_ICON_NAME,\r\n                                onClick: function() {\r\n                                    that.component.getView(\"columnChooserView\").showColumnChooser()\r\n                                },\r\n                                hint: hintText,\r\n                                text: hintText,\r\n                                onInitialized: function(e) {\r\n                                    $(e.element).addClass(that._getToolbarButtonClass(that.addWidgetPrefix(COLUMN_CHOOSER_BUTTON_CLASS)))\r\n                                }\r\n                            },\r\n                            showText: \"inMenu\",\r\n                            location: \"after\",\r\n                            name: \"columnChooserButton\",\r\n                            locateInMenu: \"auto\",\r\n                            sortIndex: 40\r\n                        };\r\n                        items.push(toolbarItem)\r\n                    }\r\n                    return items\r\n                },\r\n                optionChanged: function(args) {\r\n                    switch (args.name) {\r\n                        case \"columnChooser\":\r\n                            this._invalidate();\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                isVisible: function() {\r\n                    var columnChooserEnabled = this.option(\"columnChooser.enabled\");\r\n                    return this.callBase() || columnChooserEnabled\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            columns: {\r\n                allowMoveColumn: function(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation) {\r\n                    var columnChooserMode = this.option(\"columnChooser.mode\");\r\n                    var isMoveColumnDisallowed = \"select\" === columnChooserMode && \"columnChooser\" === targetLocation;\r\n                    return isMoveColumnDisallowed ? false : this.callBase(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.column_chooser.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnChooserModule\r\n} from \"../grid_core/ui.grid_core.column_chooser\";\r\nexport var ColumnChooserController = columnChooserModule.controllers.columnChooser;\r\nexport var ColumnChooserView = columnChooserModule.views.columnChooserView;\r\ngridCore.registerModule(\"columnChooser\", columnChooserModule);\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grouping.core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport Class from \"../../core/class\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    normalizeSortingInfo\r\n} from \"../../data/utils\";\r\nimport {\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nexport function createOffsetFilter(path, storeLoadOptions, lastLevelOnly) {\r\n    var groups = normalizeSortingInfo(storeLoadOptions.group);\r\n    var filter = [];\r\n    for (var i = lastLevelOnly ? path.length - 1 : 0; i < path.length; i++) {\r\n        var filterElement = [];\r\n        for (var j = 0; j <= i; j++) {\r\n            var selector = groups[j].selector;\r\n            if (i === j && (null === path[j] || false === path[j] || true === path[j])) {\r\n                if (false === path[j]) {\r\n                    filterElement.push([selector, \"=\", groups[j].desc ? true : null])\r\n                } else if (path[j] ? !groups[j].desc : groups[j].desc) {\r\n                    filterElement.push([selector, \"<>\", path[j]])\r\n                } else {\r\n                    filterElement.push([selector, \"<>\", null]);\r\n                    filterElement.push([selector, \"=\", null])\r\n                }\r\n            } else {\r\n                var currentFilter = [selector, i === j ? groups[j].desc ? \">\" : \"<\" : \"=\", path[j]];\r\n                if (\"<\" === currentFilter[1]) {\r\n                    filterElement.push([currentFilter, \"or\", [selector, \"=\", null]])\r\n                } else {\r\n                    filterElement.push(currentFilter)\r\n                }\r\n            }\r\n        }\r\n        filter.push(gridCore.combineFilters(filterElement))\r\n    }\r\n    filter = gridCore.combineFilters(filter, \"or\");\r\n    return gridCore.combineFilters([filter, storeLoadOptions.filter])\r\n}\r\nexport var GroupingHelper = Class.inherit(function() {\r\n    var findGroupInfoByKey = function(groupsInfo, key) {\r\n        var hash = groupsInfo.hash;\r\n        return hash && hash[JSON.stringify(key)]\r\n    };\r\n    var getGroupInfoIndexByOffset = function(groupsInfo, offset) {\r\n        var leftIndex = 0;\r\n        var rightIndex = groupsInfo.length - 1;\r\n        if (!groupsInfo.length) {\r\n            return 0\r\n        }\r\n        do {\r\n            var middleIndex = rightIndex + leftIndex >> 1;\r\n            if (groupsInfo[middleIndex].offset > offset) {\r\n                rightIndex = middleIndex\r\n            } else {\r\n                leftIndex = middleIndex\r\n            }\r\n        } while (rightIndex - leftIndex > 1);\r\n        var index;\r\n        for (index = leftIndex; index <= rightIndex; index++) {\r\n            if (groupsInfo[index].offset > offset) {\r\n                break\r\n            }\r\n        }\r\n        return index\r\n    };\r\n    return {\r\n        ctor: function(dataSourceAdapter) {\r\n            this._dataSource = dataSourceAdapter;\r\n            this.reset()\r\n        },\r\n        reset: function() {\r\n            this._groupsInfo = [];\r\n            this._totalCountCorrection = 0\r\n        },\r\n        totalCountCorrection: function() {\r\n            return this._totalCountCorrection\r\n        },\r\n        updateTotalItemsCount: function(totalCountCorrection) {\r\n            this._totalCountCorrection = totalCountCorrection || 0\r\n        },\r\n        isGroupItemCountable: function(item) {\r\n            return !this._isVirtualPaging() || !item.isContinuation\r\n        },\r\n        _isVirtualPaging: function() {\r\n            var scrollingMode = this._dataSource.option(\"scrolling.mode\");\r\n            return \"virtual\" === scrollingMode || \"infinite\" === scrollingMode\r\n        },\r\n        itemsCount: function() {\r\n            var dataSourceAdapter = this._dataSource;\r\n            var dataSource = dataSourceAdapter._dataSource;\r\n            var groupCount = gridCore.normalizeSortingInfo(dataSource.group() || []).length;\r\n            var itemsCount = function calculateItemsCount(that, items, groupsCount) {\r\n                var result = 0;\r\n                if (items) {\r\n                    if (!groupsCount) {\r\n                        result = items.length\r\n                    } else {\r\n                        for (var i = 0; i < items.length; i++) {\r\n                            if (that.isGroupItemCountable(items[i])) {\r\n                                result++\r\n                            }\r\n                            result += calculateItemsCount(that, items[i].items, groupsCount - 1)\r\n                        }\r\n                    }\r\n                }\r\n                return result\r\n            }(this, dataSource.items(), groupCount);\r\n            return itemsCount\r\n        },\r\n        foreachGroups: function(callback, childrenAtFirst, foreachCollapsedGroups, updateOffsets, updateParentOffsets) {\r\n            var that = this;\r\n            return function foreachGroupsCore(groupsInfo, callback, childrenAtFirst, parents) {\r\n                var callbackResults = [];\r\n\r\n                function executeCallback(callback, data, parents, callbackResults) {\r\n                    var callbackResult = data && callback(data, parents);\r\n                    callbackResult && callbackResults.push(callbackResult);\r\n                    return callbackResult\r\n                }\r\n                for (var i = 0; i < groupsInfo.length; i++) {\r\n                    parents.push(groupsInfo[i].data);\r\n                    if (!childrenAtFirst && false === executeCallback(callback, groupsInfo[i].data, parents, callbackResults)) {\r\n                        return false\r\n                    }\r\n                    if (!groupsInfo[i].data || groupsInfo[i].data.isExpanded || foreachCollapsedGroups) {\r\n                        var children = groupsInfo[i].children;\r\n                        var callbackResult = children.length && foreachGroupsCore(children, callback, childrenAtFirst, parents);\r\n                        callbackResult && callbackResults.push(callbackResult);\r\n                        if (false === callbackResult) {\r\n                            return false\r\n                        }\r\n                    }\r\n                    if (childrenAtFirst && false === executeCallback(callback, groupsInfo[i].data, parents, callbackResults)) {\r\n                        return false\r\n                    }\r\n                    if (!groupsInfo[i].data || groupsInfo[i].data.offset !== groupsInfo[i].offset) {\r\n                        updateOffsets = true\r\n                    }\r\n                    parents.pop()\r\n                }\r\n                var currentParents = updateParentOffsets && parents.slice(0);\r\n                return updateOffsets && when.apply($, callbackResults).always((function() {\r\n                    that._updateGroupInfoOffsets(groupsInfo, currentParents)\r\n                }))\r\n            }(that._groupsInfo, callback, childrenAtFirst, [])\r\n        },\r\n        _updateGroupInfoOffsets: function(groupsInfo, parents) {\r\n            parents = parents || [];\r\n            for (var index = 0; index < groupsInfo.length; index++) {\r\n                var groupInfo = groupsInfo[index];\r\n                if (groupInfo.data && groupInfo.data.offset !== groupInfo.offset) {\r\n                    groupInfo.offset = groupInfo.data.offset;\r\n                    for (var parentIndex = 0; parentIndex < parents.length; parentIndex++) {\r\n                        parents[parentIndex].offset = groupInfo.offset\r\n                    }\r\n                }\r\n            }\r\n            groupsInfo.sort((function(a, b) {\r\n                return a.offset - b.offset\r\n            }))\r\n        },\r\n        findGroupInfo: function(path) {\r\n            var groupInfo;\r\n            var groupsInfo = this._groupsInfo;\r\n            for (var pathIndex = 0; groupsInfo && pathIndex < path.length; pathIndex++) {\r\n                groupInfo = findGroupInfoByKey(groupsInfo, path[pathIndex]);\r\n                groupsInfo = groupInfo && groupInfo.children\r\n            }\r\n            return groupInfo && groupInfo.data\r\n        },\r\n        addGroupInfo: function(groupInfoData) {\r\n            var groupInfo;\r\n            var path = groupInfoData.path;\r\n            var groupsInfo = this._groupsInfo;\r\n            for (var pathIndex = 0; pathIndex < path.length; pathIndex++) {\r\n                groupInfo = findGroupInfoByKey(groupsInfo, path[pathIndex]);\r\n                if (!groupInfo) {\r\n                    groupInfo = {\r\n                        key: path[pathIndex],\r\n                        offset: groupInfoData.offset,\r\n                        data: {\r\n                            offset: groupInfoData.offset,\r\n                            isExpanded: true,\r\n                            path: path.slice(0, pathIndex + 1)\r\n                        },\r\n                        children: []\r\n                    };\r\n                    var index = getGroupInfoIndexByOffset(groupsInfo, groupInfoData.offset);\r\n                    groupsInfo.splice(index, 0, groupInfo);\r\n                    groupsInfo.hash = groupsInfo.hash || {};\r\n                    groupsInfo.hash[JSON.stringify(groupInfo.key)] = groupInfo\r\n                }\r\n                if (pathIndex === path.length - 1) {\r\n                    groupInfo.data = groupInfoData;\r\n                    if (groupInfo.offset !== groupInfoData.offset) {\r\n                        this._updateGroupInfoOffsets(groupsInfo)\r\n                    }\r\n                }\r\n                groupsInfo = groupInfo.children\r\n            }\r\n        },\r\n        allowCollapseAll: function() {\r\n            return true\r\n        },\r\n        refresh: function(options) {\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var groups = normalizeSortingInfo(storeLoadOptions.group || []);\r\n            var oldGroups = \"_group\" in this ? normalizeSortingInfo(this._group || []) : groups;\r\n            var groupsCount = Math.min(oldGroups.length, groups.length);\r\n            this._group = storeLoadOptions.group;\r\n            for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\r\n                if (oldGroups[groupIndex].selector !== groups[groupIndex].selector) {\r\n                    groupsCount = groupIndex;\r\n                    break\r\n                }\r\n            }\r\n            if (!groupsCount) {\r\n                this.reset()\r\n            } else {\r\n                ! function cleanGroupsInfo(groupsInfo, groupIndex, groupsCount) {\r\n                    for (var i = 0; i < groupsInfo.length; i++) {\r\n                        if (groupIndex + 1 >= groupsCount) {\r\n                            groupsInfo[i].children = []\r\n                        } else {\r\n                            cleanGroupsInfo(groupsInfo[i].children, groupIndex + 1, groupsCount)\r\n                        }\r\n                    }\r\n                }(this._groupsInfo, 0, groupsCount)\r\n            }\r\n        },\r\n        handleDataLoading: function() {},\r\n        handleDataLoaded: function(options, callBase) {\r\n            callBase(options)\r\n        },\r\n        handleDataLoadedCore: function(options, callBase) {\r\n            callBase(options)\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\r\nimport {\r\n    normalizeSortingInfo\r\n} from \"../../data/utils\";\r\nexport function createGroupFilter(path, storeLoadOptions) {\r\n    var groups = normalizeSortingInfo(storeLoadOptions.group);\r\n    var filter = [];\r\n    for (var i = 0; i < path.length; i++) {\r\n        filter.push([groups[i].selector, \"=\", path[i]])\r\n    }\r\n    if (storeLoadOptions.filter) {\r\n        filter.push(storeLoadOptions.filter)\r\n    }\r\n    return gridCoreUtils.combineFilters(filter)\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grouping.expanded.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    toComparable\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    keysEqual\r\n} from \"../../data/utils\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport storeHelper from \"../../data/store_helper\";\r\nimport dataGridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    GroupingHelper as GroupingHelperCore,\r\n    createOffsetFilter\r\n} from \"./ui.data_grid.grouping.core\";\r\nimport {\r\n    createGroupFilter\r\n} from \"./ui.data_grid.utils\";\r\nimport dataQuery from \"../../data/query\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar loadTotalCount = function(dataSource, options) {\r\n    var d = new Deferred;\r\n    var loadOptions = extend({\r\n        skip: 0,\r\n        take: 1,\r\n        requireTotalCount: true\r\n    }, options);\r\n    dataSource.load(loadOptions).done((function(data, extra) {\r\n        d.resolve(extra && extra.totalCount)\r\n    })).fail(d.reject.bind(d));\r\n    return d\r\n};\r\nexport var GroupingHelper = GroupingHelperCore.inherit(function() {\r\n    var foreachCollapsedGroups = function(that, callback, updateOffsets) {\r\n        return that.foreachGroups((function(groupInfo) {\r\n            if (!groupInfo.isExpanded) {\r\n                return callback(groupInfo)\r\n            }\r\n        }), false, false, updateOffsets, true)\r\n    };\r\n    var correctSkipLoadOption = function(that, skip) {\r\n        var skipCorrection = 0;\r\n        var resultSkip = skip || 0;\r\n        if (skip) {\r\n            foreachCollapsedGroups(that, (function(groupInfo) {\r\n                if (groupInfo.offset - skipCorrection >= skip) {\r\n                    return false\r\n                }\r\n                skipCorrection += groupInfo.count - 1\r\n            }));\r\n            resultSkip += skipCorrection\r\n        }\r\n        return resultSkip\r\n    };\r\n    var pathEquals = function(path1, path2) {\r\n        if (path1.length !== path2.length) {\r\n            return false\r\n        }\r\n        for (var i = 0; i < path1.length; i++) {\r\n            if (!keysEqual(null, path1[i], path2[i])) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    };\r\n    var updateGroupOffsets = function updateGroupOffsets(that, items, path, offset, additionalGroupInfo) {\r\n        if (!items) {\r\n            return\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (\"key\" in item && void 0 !== item.items) {\r\n                path.push(item.key);\r\n                if (additionalGroupInfo && pathEquals(additionalGroupInfo.path, path) && !item.isContinuation) {\r\n                    additionalGroupInfo.offset = offset\r\n                }\r\n                var groupInfo = that.findGroupInfo(path);\r\n                if (groupInfo && !item.isContinuation) {\r\n                    groupInfo.offset = offset\r\n                }\r\n                if (groupInfo && !groupInfo.isExpanded) {\r\n                    offset += groupInfo.count\r\n                } else {\r\n                    offset = updateGroupOffsets(that, item.items, path, offset, additionalGroupInfo)\r\n                }\r\n                path.pop()\r\n            } else {\r\n                offset++\r\n            }\r\n        }\r\n        return offset\r\n    };\r\n    var getGroupCount = function getGroupCount(item, groupCount) {\r\n        var count = item.count || item.items.length;\r\n        if (!item.count && groupCount > 1) {\r\n            count = 0;\r\n            for (var i = 0; i < item.items.length; i++) {\r\n                count += getGroupCount(item.items[i], groupCount - 1)\r\n            }\r\n        }\r\n        return count\r\n    };\r\n    return {\r\n        handleDataLoading: function(options) {\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var collapsedGroups = [];\r\n            var collapsedItemsCount = 0;\r\n            var skipFirstItem = false;\r\n            var take;\r\n            var group = options.loadOptions.group;\r\n            var skipCorrection = 0;\r\n            ! function(storeLoadOptions, loadOptions) {\r\n                if (loadOptions.group) {\r\n                    var groups = dataGridCore.normalizeSortingInfo(loadOptions.group);\r\n                    var sorts = dataGridCore.normalizeSortingInfo(storeLoadOptions.sort);\r\n                    storeLoadOptions.sort = storeHelper.arrangeSortingInfo(groups, sorts);\r\n                    delete loadOptions.group\r\n                }\r\n            }(storeLoadOptions, options.loadOptions);\r\n            options.group = options.group || group;\r\n            if (options.isCustomLoading) {\r\n                return\r\n            }\r\n            var loadOptions = extend({}, storeLoadOptions);\r\n            loadOptions.skip = correctSkipLoadOption(this, storeLoadOptions.skip);\r\n            if (loadOptions.skip && loadOptions.take && group) {\r\n                loadOptions.skip--;\r\n                loadOptions.take++;\r\n                skipFirstItem = true\r\n            }\r\n            if (loadOptions.take && group) {\r\n                take = loadOptions.take;\r\n                loadOptions.take++\r\n            }\r\n            foreachCollapsedGroups(this, (function(groupInfo) {\r\n                if (groupInfo.offset >= loadOptions.skip + loadOptions.take + skipCorrection) {\r\n                    return false\r\n                } else if (groupInfo.offset >= loadOptions.skip + skipCorrection && groupInfo.count) {\r\n                    skipCorrection += groupInfo.count - 1;\r\n                    collapsedGroups.push(groupInfo);\r\n                    collapsedItemsCount += groupInfo.count\r\n                }\r\n            }));\r\n            each(collapsedGroups, (function() {\r\n                loadOptions.filter = function(path, storeLoadOptions, group) {\r\n                    var groups = dataGridCore.normalizeSortingInfo(group || storeLoadOptions.group);\r\n                    var filter = [];\r\n                    for (var i = 0; i < path.length; i++) {\r\n                        var filterElement = [];\r\n                        for (var j = 0; j <= i; j++) {\r\n                            filterElement.push([groups[j].selector, i === j ? \"<>\" : \"=\", path[j]])\r\n                        }\r\n                        filter.push(dataGridCore.combineFilters(filterElement))\r\n                    }\r\n                    filter = dataGridCore.combineFilters(filter, \"or\");\r\n                    return dataGridCore.combineFilters([filter, storeLoadOptions.filter])\r\n                }(this.path, loadOptions, group)\r\n            }));\r\n            options.storeLoadOptions = loadOptions;\r\n            options.collapsedGroups = collapsedGroups;\r\n            options.collapsedItemsCount = collapsedItemsCount;\r\n            options.skip = loadOptions.skip || 0;\r\n            options.skipFirstItem = skipFirstItem;\r\n            options.take = take\r\n        },\r\n        handleDataLoaded: function(options, callBase) {\r\n            var collapsedGroups = options.collapsedGroups;\r\n            var groups = dataGridCore.normalizeSortingInfo(options.group);\r\n            var groupCount = groups.length;\r\n\r\n            function appendCollapsedPath(data, path, groups, collapsedGroup, offset) {\r\n                if (!data || !path.length || !groups.length) {\r\n                    return\r\n                }\r\n                var keyValue;\r\n                var i;\r\n                var pathValue = toComparable(path[0], true);\r\n                for (i = 0; i < data.length; i++) {\r\n                    keyValue = toComparable(data[i].key, true);\r\n                    if (offset >= collapsedGroup.offset || pathValue === keyValue) {\r\n                        break\r\n                    } else {\r\n                        offset += getGroupCount(data[i], groups.length)\r\n                    }\r\n                }\r\n                if (!data.length || pathValue !== keyValue) {\r\n                    data.splice(i, 0, {\r\n                        key: path[0],\r\n                        items: [],\r\n                        count: 1 === path.length ? collapsedGroup.count : void 0\r\n                    })\r\n                }\r\n                appendCollapsedPath(data[i].items, path.slice(1), groups.slice(1), collapsedGroup, offset)\r\n            }\r\n            if (options.collapsedItemsCount && options.extra && options.extra.totalCount >= 0) {\r\n                options.extra.totalCount += options.collapsedItemsCount\r\n            }\r\n            callBase(options);\r\n            if (groupCount) {\r\n                var data = options.data;\r\n                var query = dataQuery(data);\r\n                storeHelper.multiLevelGroup(query, groups).enumerate().done((function(groupedData) {\r\n                    data = groupedData\r\n                }));\r\n                if (collapsedGroups) {\r\n                    for (var pathIndex = 0; pathIndex < collapsedGroups.length; pathIndex++) {\r\n                        appendCollapsedPath(data, collapsedGroups[pathIndex].path, groups, collapsedGroups[pathIndex], options.skip)\r\n                    }\r\n                }\r\n                if (!options.isCustomLoading) {\r\n                    ! function processGroupItems(that, items, path, offset, skipFirstItem, take) {\r\n                        var removeLastItemsCount = 0;\r\n                        var needRemoveFirstItem = false;\r\n                        for (var i = 0; i < items.length; i++) {\r\n                            var item = items[i];\r\n                            if (void 0 !== item.items) {\r\n                                path.push(item.key);\r\n                                var groupInfo = that.findGroupInfo(path);\r\n                                if (groupInfo && !groupInfo.isExpanded) {\r\n                                    item.collapsedItems = item.items;\r\n                                    item.items = null;\r\n                                    offset += groupInfo.count;\r\n                                    take--;\r\n                                    if (take < 0) {\r\n                                        removeLastItemsCount++\r\n                                    }\r\n                                    if (skipFirstItem) {\r\n                                        needRemoveFirstItem = true\r\n                                    }\r\n                                } else if (item.items) {\r\n                                    var offsetInfo = processGroupItems(that, item.items, path, offset, skipFirstItem, take);\r\n                                    if (skipFirstItem) {\r\n                                        if (offsetInfo.offset - offset > 1) {\r\n                                            item.isContinuation = true\r\n                                        } else {\r\n                                            needRemoveFirstItem = true\r\n                                        }\r\n                                    }\r\n                                    offset = offsetInfo.offset;\r\n                                    take = offsetInfo.take;\r\n                                    if (take < 0) {\r\n                                        if (item.items.length) {\r\n                                            item.isContinuationOnNextPage = true\r\n                                        } else {\r\n                                            removeLastItemsCount++\r\n                                        }\r\n                                    }\r\n                                }\r\n                                path.pop()\r\n                            } else {\r\n                                if (skipFirstItem) {\r\n                                    needRemoveFirstItem = true\r\n                                }\r\n                                offset++;\r\n                                take--;\r\n                                if (take < 0) {\r\n                                    removeLastItemsCount++\r\n                                }\r\n                            }\r\n                            skipFirstItem = false\r\n                        }\r\n                        if (needRemoveFirstItem) {\r\n                            items.splice(0, 1)\r\n                        }\r\n                        if (removeLastItemsCount) {\r\n                            items.splice(-removeLastItemsCount, removeLastItemsCount)\r\n                        }\r\n                        return {\r\n                            offset: offset,\r\n                            take: take\r\n                        }\r\n                    }(this, data, [], options.skip, options.skipFirstItem, options.take)\r\n                }\r\n                options.data = data\r\n            }\r\n        },\r\n        isGroupItemCountable: function(item) {\r\n            return null === item.items\r\n        },\r\n        updateTotalItemsCount: function() {\r\n            var itemsCountCorrection = 0;\r\n            foreachCollapsedGroups(this, (function(groupInfo) {\r\n                if (groupInfo.count) {\r\n                    itemsCountCorrection -= groupInfo.count - 1\r\n                }\r\n            }));\r\n            this.callBase(itemsCountCorrection)\r\n        },\r\n        changeRowExpand: function(path) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var beginPageIndex = dataSource.beginPageIndex ? dataSource.beginPageIndex() : dataSource.pageIndex();\r\n            var dataSourceItems = dataSource.items();\r\n            var offset = correctSkipLoadOption(that, beginPageIndex * dataSource.pageSize());\r\n            var groupInfo = that.findGroupInfo(path);\r\n            var groupCountQuery;\r\n            if (groupInfo && !groupInfo.isExpanded) {\r\n                groupCountQuery = (new Deferred).resolve(groupInfo.count)\r\n            } else {\r\n                groupCountQuery = loadTotalCount(dataSource, {\r\n                    filter: createGroupFilter(path, {\r\n                        filter: dataSource.filter(),\r\n                        group: dataSource.group()\r\n                    })\r\n                })\r\n            }\r\n            return when(groupCountQuery).done((function(count) {\r\n                count = parseInt(count.length ? count[0] : count);\r\n                if (groupInfo) {\r\n                    updateGroupOffsets(that, dataSourceItems, [], offset);\r\n                    groupInfo.isExpanded = !groupInfo.isExpanded;\r\n                    groupInfo.count = count\r\n                } else {\r\n                    groupInfo = {\r\n                        offset: -1,\r\n                        count: count,\r\n                        path: path,\r\n                        isExpanded: false\r\n                    };\r\n                    updateGroupOffsets(that, dataSourceItems, [], offset, groupInfo);\r\n                    if (groupInfo.offset >= 0) {\r\n                        that.addGroupInfo(groupInfo)\r\n                    }\r\n                }\r\n                that.updateTotalItemsCount()\r\n            })).fail((function() {\r\n                dataSource._eventsStrategy.fireEvent(\"loadError\", arguments)\r\n            }))\r\n        },\r\n        allowCollapseAll: function() {\r\n            return false\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            var that = this;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var dataSource = that._dataSource;\r\n            this.callBase.apply(this, arguments);\r\n            if (operationTypes.reload) {\r\n                return foreachCollapsedGroups(that, (function(groupInfo) {\r\n                    var groupCountQuery = loadTotalCount(dataSource, {\r\n                        filter: createGroupFilter(groupInfo.path, storeLoadOptions)\r\n                    });\r\n                    var groupOffsetQuery = loadTotalCount(dataSource, {\r\n                        filter: createOffsetFilter(groupInfo.path, storeLoadOptions)\r\n                    });\r\n                    return when(groupOffsetQuery, groupCountQuery).done((function(offset, count) {\r\n                        offset = parseInt(offset.length ? offset[0] : offset);\r\n                        count = parseInt(count.length ? count[0] : count);\r\n                        groupInfo.offset = offset;\r\n                        if (groupInfo.count !== count) {\r\n                            groupInfo.count = count;\r\n                            that.updateTotalItemsCount()\r\n                        }\r\n                    }))\r\n                }), true)\r\n            }\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grouping.collapsed.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport dataGridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    GroupingHelper as GroupingHelperCore,\r\n    createOffsetFilter\r\n} from \"./ui.data_grid.grouping.core\";\r\nimport {\r\n    createGroupFilter\r\n} from \"./ui.data_grid.utils\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    errors as dataErrors\r\n} from \"../../data/errors\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\n\r\nfunction getContinuationGroupCount(groupOffset, pageSize, groupSize, groupIndex) {\r\n    groupIndex = groupIndex || 0;\r\n    if (pageSize > 1 && groupSize > 0) {\r\n        var pageOffset = groupOffset - Math.floor(groupOffset / pageSize) * pageSize || pageSize;\r\n        pageOffset += groupSize - groupIndex - 2;\r\n        if (pageOffset < 0) {\r\n            pageOffset += pageSize\r\n        }\r\n        return Math.floor(pageOffset / (pageSize - groupIndex - 1))\r\n    }\r\n    return 0\r\n}\r\nexport var GroupingHelper = GroupingHelperCore.inherit(function() {\r\n    var foreachExpandedGroups = function(that, callback, updateGroups) {\r\n        return that.foreachGroups((function(groupInfo, parents) {\r\n            if (groupInfo.isExpanded) {\r\n                return callback(groupInfo, parents)\r\n            }\r\n        }), true, false, updateGroups, updateGroups)\r\n    };\r\n    var processGroupItems = function processGroupItems(that, items, groupsCount, expandedInfo, path, isCustomLoading, isLastGroupExpanded) {\r\n        var isExpanded;\r\n        expandedInfo.items = expandedInfo.items || [];\r\n        expandedInfo.paths = expandedInfo.paths || [];\r\n        expandedInfo.count = expandedInfo.count || 0;\r\n        expandedInfo.lastCount = expandedInfo.lastCount || 0;\r\n        if (!groupsCount) {\r\n            return\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (void 0 !== item.items) {\r\n                path.push(item.key);\r\n                if (isCustomLoading) {\r\n                    isExpanded = true\r\n                } else {\r\n                    var groupInfo = that.findGroupInfo(path);\r\n                    isExpanded = groupInfo && groupInfo.isExpanded\r\n                }\r\n                if (!isExpanded) {\r\n                    item.collapsedItems = item.items;\r\n                    item.items = null\r\n                } else if (item.items) {\r\n                    processGroupItems(that, item.items, groupsCount - 1, expandedInfo, path, isCustomLoading, isLastGroupExpanded)\r\n                } else if (1 === groupsCount && item.count && (!isCustomLoading || isLastGroupExpanded)) {\r\n                    expandedInfo.items.push(item);\r\n                    expandedInfo.paths.push(path.slice(0));\r\n                    expandedInfo.count += expandedInfo.lastCount;\r\n                    expandedInfo.lastCount = item.count\r\n                }\r\n                path.pop()\r\n            }\r\n        }\r\n    };\r\n    var updateGroupInfoItem = function(that, item, isLastGroupLevel, path, offset) {\r\n        var groupInfo = that.findGroupInfo(path);\r\n        var count;\r\n        if (!groupInfo) {\r\n            if (isLastGroupLevel) {\r\n                count = item.count > 0 ? item.count : item.items.length\r\n            }\r\n            that.addGroupInfo({\r\n                isExpanded: that._isGroupExpanded(path.length - 1),\r\n                path: path.slice(0),\r\n                offset: offset,\r\n                count: count || 0\r\n            })\r\n        } else {\r\n            if (isLastGroupLevel) {\r\n                groupInfo.count = item.count > 0 ? item.count : item.items && item.items.length || 0\r\n            } else {\r\n                item.count = groupInfo.count || item.count\r\n            }\r\n            groupInfo.offset = offset\r\n        }\r\n    };\r\n    var updateGroupInfos = function updateGroupInfos(that, options, items, loadedGroupCount, groupIndex, path, parentIndex) {\r\n        var groupCount = options.group ? options.group.length : 0;\r\n        var isLastGroupLevel = groupCount === loadedGroupCount;\r\n        var remotePaging = options.remoteOperations.paging;\r\n        var offset = 0;\r\n        var totalCount = 0;\r\n        var count;\r\n        groupIndex = groupIndex || 0;\r\n        path = path || [];\r\n        if (remotePaging && !parentIndex) {\r\n            offset = 0 === groupIndex ? options.skip || 0 : options.skips[groupIndex - 1] || 0\r\n        }\r\n        if (groupIndex >= loadedGroupCount) {\r\n            return items.length\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (item) {\r\n                path.push(item.key);\r\n                if (!item.count && !item.items || void 0 === item.items) {\r\n                    return -1\r\n                }\r\n                updateGroupInfoItem(that, item, isLastGroupLevel, path, offset + i);\r\n                count = item.items ? updateGroupInfos(that, options, item.items, loadedGroupCount, groupIndex + 1, path, i) : item.count || -1;\r\n                if (count < 0) {\r\n                    return -1\r\n                }\r\n                totalCount += count;\r\n                path.pop()\r\n            }\r\n        }\r\n        return totalCount\r\n    };\r\n    var isGroupExpanded = function(groups, groupIndex) {\r\n        return groups && groups.length && groups[groupIndex] && !!groups[groupIndex].isExpanded\r\n    };\r\n    var getTotalOffset = function(groupInfos, pageSize, offset) {\r\n        var groupSize;\r\n        var totalOffset = offset;\r\n        for (var groupIndex = 0; groupIndex < groupInfos.length; groupIndex++) {\r\n            groupSize = groupInfos[groupIndex].offset + 1;\r\n            if (groupIndex > 0) {\r\n                groupSize += groupInfos[groupIndex - 1].childrenTotalCount;\r\n                if (pageSize) {\r\n                    groupSize += getContinuationGroupCount(totalOffset, pageSize, groupSize, groupIndex - 1) * groupIndex\r\n                }\r\n            }\r\n            totalOffset += groupSize\r\n        }\r\n        return totalOffset\r\n    };\r\n\r\n    function applyContinuationToGroupItem(options, expandedInfo, groupLevel, expandedItemIndex) {\r\n        var item = expandedInfo.items[expandedItemIndex];\r\n        var skip = options.skips && options.skips[groupLevel];\r\n        var take = options.takes && options.takes[groupLevel];\r\n        var isLastExpandedItem = expandedItemIndex === expandedInfo.items.length - 1;\r\n        var isFirstExpandedItem = 0 === expandedItemIndex;\r\n        var lastExpandedItemSkip = isFirstExpandedItem && skip || 0;\r\n        var isItemsTruncatedByTake = item.count > take + lastExpandedItemSkip;\r\n        if (isFirstExpandedItem && void 0 !== skip) {\r\n            item.isContinuation = true\r\n        }\r\n        if (isLastExpandedItem && void 0 !== take && isItemsTruncatedByTake) {\r\n            item.isContinuationOnNextPage = true\r\n        }\r\n    }\r\n\r\n    function isDataDeferred(data) {\r\n        return !Array.isArray(data)\r\n    }\r\n\r\n    function makeDataDeferred(options) {\r\n        if (!isDataDeferred(options.data)) {\r\n            options.data = new Deferred\r\n        }\r\n    }\r\n\r\n    function loadGroupItems(that, options, loadedGroupCount, expandedInfo, groupLevel, data) {\r\n        if (!options.isCustomLoading) {\r\n            expandedInfo = {};\r\n            processGroupItems(that, data, loadedGroupCount, expandedInfo, []);\r\n            ! function(options, expandedInfo, currentGroupCount) {\r\n                var currentGroupIndex = currentGroupCount - 1;\r\n                var groupCount = options.group ? options.group.length : 0;\r\n                expandedInfo.skip = options.skips && options.skips[currentGroupIndex];\r\n                if (options.takes && void 0 !== options.takes[currentGroupIndex]) {\r\n                    if (groupCount === currentGroupCount) {\r\n                        expandedInfo.take = expandedInfo.count ? expandedInfo.count - (expandedInfo.skip || 0) : 0\r\n                    } else {\r\n                        expandedInfo.take = 0\r\n                    }\r\n                    expandedInfo.take += options.takes[currentGroupIndex]\r\n                }\r\n            }(options, expandedInfo, loadedGroupCount)\r\n        }\r\n        var groupCount = options.group ? options.group.length : 0;\r\n        if (expandedInfo.paths.length && groupCount - loadedGroupCount > 0) {\r\n            makeDataDeferred(options);\r\n            ! function(that, options, expandedInfo, loadedGroupCount, groupLevel, data) {\r\n                var groups = options.group || [];\r\n                var currentGroup = groups[groupLevel + 1];\r\n                var deferreds = [];\r\n                each(expandedInfo.paths, (function(expandedItemIndex) {\r\n                    var loadOptions = {\r\n                        requireTotalCount: false,\r\n                        requireGroupCount: true,\r\n                        group: [currentGroup],\r\n                        groupSummary: options.storeLoadOptions.groupSummary,\r\n                        filter: createGroupFilter(expandedInfo.paths[expandedItemIndex], {\r\n                            filter: options.storeLoadOptions.filter,\r\n                            group: groups\r\n                        }),\r\n                        select: options.storeLoadOptions.select\r\n                    };\r\n                    if (0 === expandedItemIndex) {\r\n                        loadOptions.skip = expandedInfo.skip || 0\r\n                    }\r\n                    if (expandedItemIndex === expandedInfo.paths.length - 1) {\r\n                        loadOptions.take = expandedInfo.take\r\n                    }\r\n                    var loadResult = 0 === loadOptions.take ? [] : that._dataSource.loadFromStore(loadOptions);\r\n                    when(loadResult).done((function(data) {\r\n                        var item = expandedInfo.items[expandedItemIndex];\r\n                        applyContinuationToGroupItem(options, expandedInfo, groupLevel, expandedItemIndex);\r\n                        item.items = data\r\n                    }));\r\n                    deferreds.push(loadResult)\r\n                }));\r\n                when.apply(null, deferreds).done((function() {\r\n                    updateGroupInfos(that, options, data, loadedGroupCount + 1);\r\n                    loadGroupItems(that, options, loadedGroupCount + 1, expandedInfo, groupLevel + 1, data)\r\n                }))\r\n            }(that, options, expandedInfo, loadedGroupCount, groupLevel, data)\r\n        } else if (expandedInfo.paths.length && options.storeLoadOptions.group) {\r\n            makeDataDeferred(options);\r\n            ! function(that, options, expandedInfo, data) {\r\n                var expandedFilters = [];\r\n                var groups = options.group || [];\r\n                each(expandedInfo.paths, (function(_, expandedPath) {\r\n                    expandedFilters.push(createGroupFilter(expandedPath, {\r\n                        group: options.isCustomLoading ? options.storeLoadOptions.group : groups\r\n                    }))\r\n                }));\r\n                var filter = options.storeLoadOptions.filter;\r\n                if (!options.storeLoadOptions.isLoadingAll) {\r\n                    filter = dataGridCore.combineFilters([filter, dataGridCore.combineFilters(expandedFilters, \"or\")])\r\n                }\r\n                var loadOptions = extend({}, options.storeLoadOptions, {\r\n                    requireTotalCount: false,\r\n                    requireGroupCount: false,\r\n                    group: null,\r\n                    sort: groups.concat(dataGridCore.normalizeSortingInfo(options.storeLoadOptions.sort || [])),\r\n                    filter: filter\r\n                });\r\n                var isPagingLocal = that._dataSource.isLastLevelGroupItemsPagingLocal();\r\n                if (!isPagingLocal) {\r\n                    loadOptions.skip = expandedInfo.skip;\r\n                    loadOptions.take = expandedInfo.take\r\n                }\r\n                when(0 === expandedInfo.take ? [] : that._dataSource.loadFromStore(loadOptions)).done((function(items, extra) {\r\n                    if (isPagingLocal) {\r\n                        items = that._dataSource.sortLastLevelGroupItems(items, groups, expandedInfo.paths);\r\n                        items = expandedInfo.skip ? items.slice(expandedInfo.skip) : items;\r\n                        items = expandedInfo.take ? items.slice(0, expandedInfo.take) : items\r\n                    }\r\n                    each(expandedInfo.items, (function(index, item) {\r\n                        var itemCount = item.count - (0 === index && expandedInfo.skip || 0);\r\n                        var expandedItems = items.splice(0, itemCount);\r\n                        applyContinuationToGroupItem(options, expandedInfo, groups.length - 1, index);\r\n                        item.items = expandedItems\r\n                    }));\r\n                    options.data.resolve(data)\r\n                })).fail(options.data.reject)\r\n            }(that, options, expandedInfo, data)\r\n        } else if (isDataDeferred(options.data)) {\r\n            options.data.resolve(data)\r\n        }\r\n    }\r\n    var loadGroupTotalCount = function(dataSource, options) {\r\n        var d = new Deferred;\r\n        var isGrouping = !!(options.group && options.group.length);\r\n        var loadOptions = extend({\r\n            skip: 0,\r\n            take: 1,\r\n            requireGroupCount: isGrouping,\r\n            requireTotalCount: !isGrouping\r\n        }, options, {\r\n            group: isGrouping ? options.group : null\r\n        });\r\n        dataSource.load(loadOptions).done((function(data, extra) {\r\n            var count = extra && (isGrouping ? extra.groupCount : extra.totalCount);\r\n            if (!isFinite(count)) {\r\n                d.reject(dataErrors.Error(isGrouping ? \"E4022\" : \"E4021\"));\r\n                return\r\n            }\r\n            d.resolve(count)\r\n        })).fail(d.reject.bind(d));\r\n        return d\r\n    };\r\n    return {\r\n        updateTotalItemsCount: function(options) {\r\n            var totalItemsCount = 0;\r\n            var totalCount = options.extra && options.extra.totalCount || 0;\r\n            var groupCount = options.extra && options.extra.groupCount || 0;\r\n            var pageSize = this._dataSource.pageSize();\r\n            var isVirtualPaging = this._isVirtualPaging();\r\n            foreachExpandedGroups(this, (function(groupInfo) {\r\n                groupInfo.childrenTotalCount = 0\r\n            }));\r\n            foreachExpandedGroups(this, (function(groupInfo, parents) {\r\n                var totalOffset = getTotalOffset(parents, isVirtualPaging ? 0 : pageSize, totalItemsCount);\r\n                var count = groupInfo.count + groupInfo.childrenTotalCount;\r\n                if (!isVirtualPaging) {\r\n                    count += getContinuationGroupCount(totalOffset, pageSize, count, parents.length - 1)\r\n                }\r\n                if (parents[parents.length - 2]) {\r\n                    parents[parents.length - 2].childrenTotalCount += count\r\n                } else {\r\n                    totalItemsCount += count\r\n                }\r\n            }));\r\n            this.callBase(totalItemsCount - totalCount + groupCount)\r\n        },\r\n        _isGroupExpanded: function(groupIndex) {\r\n            var groups = this._dataSource.group();\r\n            return isGroupExpanded(groups, groupIndex)\r\n        },\r\n        _updatePagingOptions: function(options, callback) {\r\n            var isVirtualPaging = this._isVirtualPaging();\r\n            var pageSize = this._dataSource.pageSize();\r\n            var skips = [];\r\n            var takes = [];\r\n            var skipChildrenTotalCount = 0;\r\n            var childrenTotalCount = 0;\r\n            if (options.take) {\r\n                foreachExpandedGroups(this, (function(groupInfo) {\r\n                    groupInfo.childrenTotalCount = 0;\r\n                    groupInfo.skipChildrenTotalCount = 0\r\n                }));\r\n                foreachExpandedGroups(this, (function(groupInfo, parents) {\r\n                    var take;\r\n                    var takeCorrection = 0;\r\n                    var parentTakeCorrection = 0;\r\n                    var totalOffset = getTotalOffset(parents, isVirtualPaging ? 0 : pageSize, childrenTotalCount);\r\n                    var continuationGroupCount = 0;\r\n                    var skipContinuationGroupCount = 0;\r\n                    var groupInfoCount = groupInfo.count + groupInfo.childrenTotalCount;\r\n                    var childrenGroupInfoCount = groupInfoCount;\r\n                    callback && callback(groupInfo, totalOffset);\r\n                    var skip = options.skip - totalOffset;\r\n                    if (totalOffset <= options.skip + options.take && groupInfoCount) {\r\n                        take = options.take;\r\n                        if (!isVirtualPaging) {\r\n                            continuationGroupCount = getContinuationGroupCount(totalOffset, pageSize, groupInfoCount, parents.length - 1);\r\n                            groupInfoCount += continuationGroupCount * parents.length;\r\n                            childrenGroupInfoCount += continuationGroupCount;\r\n                            if (pageSize && skip >= 0) {\r\n                                takeCorrection = parents.length;\r\n                                parentTakeCorrection = parents.length - 1;\r\n                                skipContinuationGroupCount = Math.floor(skip / pageSize)\r\n                            }\r\n                        }\r\n                        if (skip >= 0) {\r\n                            if (totalOffset + groupInfoCount > options.skip) {\r\n                                skips.unshift(skip - skipContinuationGroupCount * takeCorrection - groupInfo.skipChildrenTotalCount)\r\n                            }\r\n                            if (totalOffset + groupInfoCount >= options.skip + take) {\r\n                                takes.unshift(take - takeCorrection - groupInfo.childrenTotalCount + groupInfo.skipChildrenTotalCount)\r\n                            }\r\n                        } else if (totalOffset + groupInfoCount >= options.skip + take) {\r\n                            takes.unshift(take + skip - groupInfo.childrenTotalCount)\r\n                        }\r\n                    }\r\n                    if (totalOffset <= options.skip) {\r\n                        if (parents[parents.length - 2]) {\r\n                            parents[parents.length - 2].skipChildrenTotalCount += Math.min(childrenGroupInfoCount, skip + 1 - skipContinuationGroupCount * parentTakeCorrection)\r\n                        } else {\r\n                            skipChildrenTotalCount += Math.min(childrenGroupInfoCount, skip + 1)\r\n                        }\r\n                    }\r\n                    if (totalOffset <= options.skip + take) {\r\n                        groupInfoCount = Math.min(childrenGroupInfoCount, skip + take - (skipContinuationGroupCount + 1) * parentTakeCorrection);\r\n                        if (parents[parents.length - 2]) {\r\n                            parents[parents.length - 2].childrenTotalCount += groupInfoCount\r\n                        } else {\r\n                            childrenTotalCount += groupInfoCount\r\n                        }\r\n                    }\r\n                }));\r\n                options.skip -= skipChildrenTotalCount;\r\n                options.take -= childrenTotalCount - skipChildrenTotalCount\r\n            }\r\n            options.skips = skips;\r\n            options.takes = takes\r\n        },\r\n        changeRowExpand: function(path) {\r\n            var groupInfo = this.findGroupInfo(path);\r\n            var dataSource = this._dataSource;\r\n            var remoteGroupPaging = dataSource.remoteOperations().groupPaging;\r\n            var groups = dataGridCore.normalizeSortingInfo(dataSource.group());\r\n            if (groupInfo) {\r\n                groupInfo.isExpanded = !groupInfo.isExpanded;\r\n                if (remoteGroupPaging && groupInfo.isExpanded && path.length < groups.length) {\r\n                    return loadGroupTotalCount(dataSource, {\r\n                        filter: createGroupFilter(path, {\r\n                            filter: dataSource.lastLoadOptions().filter,\r\n                            group: dataSource.group()\r\n                        }),\r\n                        group: [groups[path.length]],\r\n                        select: dataSource.select()\r\n                    }).done((function(groupCount) {\r\n                        groupInfo.count = groupCount\r\n                    }))\r\n                }\r\n                return (new Deferred).resolve()\r\n            }\r\n            return (new Deferred).reject()\r\n        },\r\n        handleDataLoading: function(options) {\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var groups = dataGridCore.normalizeSortingInfo(storeLoadOptions.group || options.loadOptions.group);\r\n            if (options.isCustomLoading || !groups.length) {\r\n                return\r\n            }\r\n            if (options.remoteOperations.grouping) {\r\n                var remotePaging = this._dataSource.remoteOperations().paging;\r\n                storeLoadOptions.group = dataGridCore.normalizeSortingInfo(storeLoadOptions.group);\r\n                storeLoadOptions.group.forEach((function(group, index) {\r\n                    var isLastGroup = index === storeLoadOptions.group.length - 1;\r\n                    group.isExpanded = !remotePaging || !isLastGroup\r\n                }))\r\n            }\r\n            options.group = options.group || groups;\r\n            if (options.remoteOperations.paging) {\r\n                options.skip = storeLoadOptions.skip;\r\n                options.take = storeLoadOptions.take;\r\n                storeLoadOptions.requireGroupCount = true;\r\n                storeLoadOptions.group = groups.slice(0, 1);\r\n                this._updatePagingOptions(options);\r\n                storeLoadOptions.skip = options.skip;\r\n                storeLoadOptions.take = options.take\r\n            } else {\r\n                options.skip = options.loadOptions.skip;\r\n                options.take = options.loadOptions.take;\r\n                this._updatePagingOptions(options)\r\n            }\r\n        },\r\n        handleDataLoadedCore: function(options, callBase) {\r\n            var loadedGroupCount = dataGridCore.normalizeSortingInfo(options.storeLoadOptions.group || options.loadOptions.group).length;\r\n            var groupCount = options.group ? options.group.length : 0;\r\n            var totalCount;\r\n            var expandedInfo = {};\r\n            if (options.isCustomLoading) {\r\n                callBase(options);\r\n                processGroupItems(this, options.data, loadedGroupCount, expandedInfo, [], options.isCustomLoading, options.storeLoadOptions.isLoadingAll)\r\n            } else {\r\n                if (!options.remoteOperations.paging) {\r\n                    this.foreachGroups((function(groupInfo) {\r\n                        groupInfo.count = 0\r\n                    }))\r\n                }\r\n                totalCount = updateGroupInfos(this, options, options.data, loadedGroupCount);\r\n                if (totalCount < 0) {\r\n                    options.data = (new Deferred).reject(errors.Error(\"E1037\"));\r\n                    return\r\n                }\r\n                if (!options.remoteOperations.paging) {\r\n                    if (loadedGroupCount && options.extra && options.loadOptions.requireTotalCount) {\r\n                        options.extra.totalCount = totalCount;\r\n                        options.extra.groupCount = options.data.length\r\n                    }\r\n                }\r\n                if (groupCount && options.storeLoadOptions.requireGroupCount && !isFinite(options.extra.groupCount)) {\r\n                    options.data = (new Deferred).reject(dataErrors.Error(\"E4022\"));\r\n                    return\r\n                }\r\n                this.updateTotalItemsCount(options);\r\n                if (!options.remoteOperations.paging) {\r\n                    this._updatePagingOptions(options)\r\n                }\r\n                callBase(options);\r\n                if (!options.remoteOperations.paging) {\r\n                    this._processPaging(options, loadedGroupCount)\r\n                }\r\n            }\r\n            loadGroupItems(this, options, loadedGroupCount, expandedInfo, 0, options.data)\r\n        },\r\n        _processSkips: function(items, skips, groupCount) {\r\n            if (!groupCount) {\r\n                return\r\n            }\r\n            var firstItem = items[0];\r\n            var skip = skips[0];\r\n            var children = firstItem && firstItem.items;\r\n            if (void 0 !== skip) {\r\n                firstItem.isContinuation = true;\r\n                if (children) {\r\n                    firstItem.items = children.slice(skip);\r\n                    this._processSkips(firstItem.items, skips.slice(1), groupCount - 1)\r\n                }\r\n            }\r\n        },\r\n        _processTakes: function(items, skips, takes, groupCount, parents) {\r\n            if (!groupCount || !items) {\r\n                return\r\n            }\r\n            parents = parents || [];\r\n            var lastItem = items[items.length - 1];\r\n            var children = lastItem && lastItem.items;\r\n            var take = takes[0];\r\n            var skip = skips[0];\r\n            if (lastItem) {\r\n                var maxTakeCount = lastItem.count - (lastItem.isContinuation && skip || 0) || children.length;\r\n                if (void 0 !== take && maxTakeCount > take) {\r\n                    lastItem.isContinuationOnNextPage = true;\r\n                    parents.forEach((function(parent) {\r\n                        parent.isContinuationOnNextPage = true\r\n                    }));\r\n                    if (children) {\r\n                        children = children.slice(0, take);\r\n                        lastItem.items = children\r\n                    }\r\n                }\r\n                parents.push(lastItem);\r\n                this._processTakes(children, skips.slice(1), takes.slice(1), groupCount - 1, parents)\r\n            }\r\n        },\r\n        _processPaging: function(options, groupCount) {\r\n            this._processSkips(options.data, options.skips, groupCount);\r\n            this._processTakes(options.data, options.skips, options.takes, groupCount)\r\n        },\r\n        isLastLevelGroupItemsPagingLocal: function() {\r\n            return false\r\n        },\r\n        sortLastLevelGroupItems: function(items) {\r\n            return items\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var group = options.group || options.storeLoadOptions.group;\r\n            var oldGroups = dataGridCore.normalizeSortingInfo(that._group);\r\n            var isExpanded;\r\n            var groupIndex;\r\n\r\n            function handleGroup(groupInfo, parents) {\r\n                if (parents.length === groupIndex + 1) {\r\n                    groupInfo.isExpanded = isExpanded\r\n                }\r\n            }\r\n            for (groupIndex = 0; groupIndex < oldGroups.length; groupIndex++) {\r\n                isExpanded = isGroupExpanded(group, groupIndex);\r\n                if (isGroupExpanded(that._group, groupIndex) !== isExpanded) {\r\n                    that.foreachGroups(handleGroup)\r\n                }\r\n            }\r\n            that.callBase.apply(this, arguments);\r\n            if (group && options.remoteOperations.paging && operationTypes.reload) {\r\n                return foreachExpandedGroups(that, (function(groupInfo) {\r\n                    var groupCountQuery = loadGroupTotalCount(dataSource, {\r\n                        filter: createGroupFilter(groupInfo.path, {\r\n                            filter: storeLoadOptions.filter,\r\n                            group: group\r\n                        }),\r\n                        group: group.slice(groupInfo.path.length),\r\n                        select: storeLoadOptions.select\r\n                    });\r\n                    var groupOffsetQuery = loadGroupTotalCount(dataSource, {\r\n                        filter: createOffsetFilter(groupInfo.path, {\r\n                            filter: storeLoadOptions.filter,\r\n                            group: group\r\n                        }, true),\r\n                        group: group.slice(groupInfo.path.length - 1, groupInfo.path.length),\r\n                        select: storeLoadOptions.select\r\n                    });\r\n                    return when(groupOffsetQuery, groupCountQuery).done((function(offset, count) {\r\n                        offset = parseInt(offset.length ? offset[0] : offset);\r\n                        count = parseInt(count.length ? count[0] : count);\r\n                        groupInfo.offset = offset;\r\n                        if (groupInfo.count !== count) {\r\n                            groupInfo.count = count;\r\n                            that.updateTotalItemsCount(options)\r\n                        }\r\n                    }))\r\n                }), true)\r\n            }\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grouping.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    GroupingHelper as ExpandedGroupingHelper\r\n} from \"./ui.data_grid.grouping.expanded\";\r\nimport {\r\n    GroupingHelper as CollapsedGroupingHelper\r\n} from \"./ui.data_grid.grouping.collapsed\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport dataSourceAdapter from \"./ui.data_grid.data_source_adapter\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport devices from \"../../core/devices\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    registerKeyboardAction\r\n} from \"../grid_core/ui.grid_core.accessibility\";\r\nimport {\r\n    setTabIndex,\r\n    restoreFocus\r\n} from \"../shared/accessibility\";\r\nvar DATAGRID_GROUP_PANEL_CLASS = \"dx-datagrid-group-panel\";\r\nvar DATAGRID_GROUP_PANEL_MESSAGE_CLASS = \"dx-group-panel-message\";\r\nvar DATAGRID_GROUP_PANEL_ITEM_CLASS = \"dx-group-panel-item\";\r\nvar DATAGRID_GROUP_PANEL_LABEL_CLASS = \"dx-toolbar-label\";\r\nvar DATAGRID_EXPAND_CLASS = \"dx-datagrid-expand\";\r\nvar DATAGRID_GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar HEADER_FILTER_CLASS_SELECTOR = \".dx-header-filter\";\r\nvar GroupingDataSourceAdapterExtender = {\r\n    init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._initGroupingHelper()\r\n    },\r\n    _initGroupingHelper: function(options) {\r\n        var grouping = this._grouping;\r\n        var isAutoExpandAll = this.option(\"grouping.autoExpandAll\");\r\n        var isFocusedRowEnabled = this.option(\"focusedRowEnabled\");\r\n        var remoteOperations = options ? options.remoteOperations : this.remoteOperations();\r\n        var isODataRemoteOperations = remoteOperations.filtering && remoteOperations.sorting && remoteOperations.paging;\r\n        if (isODataRemoteOperations && !remoteOperations.grouping && (isAutoExpandAll || !isFocusedRowEnabled)) {\r\n            if (!grouping || grouping instanceof CollapsedGroupingHelper) {\r\n                this._grouping = new ExpandedGroupingHelper(this)\r\n            }\r\n        } else if (!grouping || grouping instanceof ExpandedGroupingHelper) {\r\n            this._grouping = new CollapsedGroupingHelper(this)\r\n        }\r\n    },\r\n    totalItemsCount: function() {\r\n        var totalCount = this.callBase();\r\n        return totalCount > 0 && this._dataSource.group() && this._dataSource.requireTotalCount() ? totalCount + this._grouping.totalCountCorrection() : totalCount\r\n    },\r\n    itemsCount: function() {\r\n        return this._dataSource.group() ? this._grouping.itemsCount() || 0 : this.callBase.apply(this, arguments)\r\n    },\r\n    allowCollapseAll: function() {\r\n        return this._grouping.allowCollapseAll()\r\n    },\r\n    isGroupItemCountable: function(item) {\r\n        return this._grouping.isGroupItemCountable(item)\r\n    },\r\n    isRowExpanded: function(key) {\r\n        var groupInfo = this._grouping.findGroupInfo(key);\r\n        return groupInfo ? groupInfo.isExpanded : !this._grouping.allowCollapseAll()\r\n    },\r\n    collapseAll: function(groupIndex) {\r\n        return this._collapseExpandAll(groupIndex, false)\r\n    },\r\n    expandAll: function(groupIndex) {\r\n        return this._collapseExpandAll(groupIndex, true)\r\n    },\r\n    _collapseExpandAll: function(groupIndex, isExpand) {\r\n        var dataSource = this._dataSource;\r\n        var group = dataSource.group();\r\n        var groups = gridCore.normalizeSortingInfo(group || []);\r\n        if (groups.length) {\r\n            for (var i = 0; i < groups.length; i++) {\r\n                if (void 0 === groupIndex || groupIndex === i) {\r\n                    groups[i].isExpanded = isExpand\r\n                } else if (group && group[i]) {\r\n                    groups[i].isExpanded = group[i].isExpanded\r\n                }\r\n            }\r\n            dataSource.group(groups);\r\n            this._grouping.foreachGroups((function(groupInfo, parents) {\r\n                if (void 0 === groupIndex || groupIndex === parents.length - 1) {\r\n                    groupInfo.isExpanded = isExpand\r\n                }\r\n            }), false, true);\r\n            this.resetPagesCache()\r\n        }\r\n        return true\r\n    },\r\n    refresh: function() {\r\n        this.callBase.apply(this, arguments);\r\n        return this._grouping.refresh.apply(this._grouping, arguments)\r\n    },\r\n    changeRowExpand: function(path) {\r\n        var dataSource = this._dataSource;\r\n        if (dataSource.group()) {\r\n            dataSource.beginLoading();\r\n            if (this._lastLoadOptions) {\r\n                this._lastLoadOptions.groupExpand = true\r\n            }\r\n            return this._changeRowExpandCore(path).always((function() {\r\n                dataSource.endLoading()\r\n            }))\r\n        }\r\n    },\r\n    _changeRowExpandCore: function(path) {\r\n        return this._grouping.changeRowExpand(path)\r\n    },\r\n    _hasGroupLevelsExpandState: function(group, isExpanded) {\r\n        if (group && Array.isArray(group)) {\r\n            for (var i = 0; i < group.length; i++) {\r\n                if (group[i].isExpanded === isExpanded) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _customizeRemoteOperations: function(options, operationTypes) {\r\n        var remoteOperations = options.remoteOperations;\r\n        if (options.storeLoadOptions.group) {\r\n            if (remoteOperations.grouping && !options.isCustomLoading) {\r\n                if (!remoteOperations.groupPaging || this._hasGroupLevelsExpandState(options.storeLoadOptions.group, true)) {\r\n                    remoteOperations.paging = false\r\n                }\r\n            }\r\n            if (!remoteOperations.grouping && (!remoteOperations.sorting || !remoteOperations.filtering || options.isCustomLoading || this._hasGroupLevelsExpandState(options.storeLoadOptions.group, false))) {\r\n                remoteOperations.paging = false\r\n            }\r\n        } else if (!options.isCustomLoading && remoteOperations.paging && operationTypes.grouping) {\r\n            this.resetCache()\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _handleDataLoading: function(options) {\r\n        this.callBase(options);\r\n        this._initGroupingHelper(options);\r\n        return this._grouping.handleDataLoading(options)\r\n    },\r\n    _handleDataLoaded: function(options) {\r\n        return this._grouping.handleDataLoaded(options, this.callBase.bind(this))\r\n    },\r\n    _handleDataLoadedCore: function(options) {\r\n        return this._grouping.handleDataLoadedCore(options, this.callBase.bind(this))\r\n    }\r\n};\r\ndataSourceAdapter.extend(GroupingDataSourceAdapterExtender);\r\nvar GroupingDataControllerExtender = {\r\n    init: function() {\r\n        this.callBase();\r\n        this.createAction(\"onRowExpanding\");\r\n        this.createAction(\"onRowExpanded\");\r\n        this.createAction(\"onRowCollapsing\");\r\n        this.createAction(\"onRowCollapsed\")\r\n    },\r\n    _beforeProcessItems: function(items) {\r\n        var groupColumns = this._columnsController.getGroupColumns();\r\n        items = this.callBase(items);\r\n        if (items.length && groupColumns.length) {\r\n            items = this._processGroupItems(items, groupColumns.length)\r\n        }\r\n        return items\r\n    },\r\n    _processItem: function(item, options) {\r\n        if (isDefined(item.groupIndex) && isString(item.rowType) && 0 === item.rowType.indexOf(\"group\")) {\r\n            item = this._processGroupItem(item, options);\r\n            options.dataIndex = 0\r\n        } else {\r\n            item = this.callBase.apply(this, arguments)\r\n        }\r\n        return item\r\n    },\r\n    _processGroupItem: function(item) {\r\n        return item\r\n    },\r\n    _processGroupItems: function(items, groupsCount, options) {\r\n        var groupedColumns = this._columnsController.getGroupColumns();\r\n        var column = groupedColumns[groupedColumns.length - groupsCount];\r\n        if (!options) {\r\n            var scrollingMode = this.option(\"scrolling.mode\");\r\n            options = {\r\n                collectContinuationItems: \"virtual\" !== scrollingMode && \"infinite\" !== scrollingMode,\r\n                resultItems: [],\r\n                path: [],\r\n                values: []\r\n            }\r\n        }\r\n        var resultItems = options.resultItems;\r\n        if (options.data) {\r\n            if (options.collectContinuationItems || !options.data.isContinuation) {\r\n                resultItems.push({\r\n                    rowType: \"group\",\r\n                    data: options.data,\r\n                    groupIndex: options.path.length - 1,\r\n                    isExpanded: !!options.data.items,\r\n                    key: options.path.slice(0),\r\n                    values: options.values.slice(0)\r\n                })\r\n            }\r\n        }\r\n        if (items) {\r\n            if (0 === groupsCount) {\r\n                resultItems.push.apply(resultItems, items)\r\n            } else {\r\n                for (var i = 0; i < items.length; i++) {\r\n                    var item = items[i];\r\n                    if (item && \"items\" in item) {\r\n                        options.data = item;\r\n                        options.path.push(item.key);\r\n                        options.values.push(column && column.deserializeValue && !column.calculateDisplayValue ? column.deserializeValue(item.key) : item.key);\r\n                        this._processGroupItems(item.items, groupsCount - 1, options);\r\n                        options.data = void 0;\r\n                        options.path.pop();\r\n                        options.values.pop()\r\n                    } else {\r\n                        resultItems.push(item)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return resultItems\r\n    },\r\n    publicMethods: function() {\r\n        return this.callBase().concat([\"collapseAll\", \"expandAll\", \"isRowExpanded\", \"expandRow\", \"collapseRow\"])\r\n    },\r\n    collapseAll: function(groupIndex) {\r\n        var dataSource = this._dataSource;\r\n        if (dataSource && dataSource.collapseAll(groupIndex)) {\r\n            dataSource.pageIndex(0);\r\n            dataSource.reload()\r\n        }\r\n    },\r\n    expandAll: function(groupIndex) {\r\n        var dataSource = this._dataSource;\r\n        if (dataSource && dataSource.expandAll(groupIndex)) {\r\n            dataSource.pageIndex(0);\r\n            dataSource.reload()\r\n        }\r\n    },\r\n    changeRowExpand: function(key) {\r\n        var that = this;\r\n        var expanded = that.isRowExpanded(key);\r\n        var args = {\r\n            key: key,\r\n            expanded: expanded\r\n        };\r\n        that.executeAction(expanded ? \"onRowCollapsing\" : \"onRowExpanding\", args);\r\n        if (!args.cancel) {\r\n            return when(that._changeRowExpandCore(key)).done((function() {\r\n                args.expanded = !expanded;\r\n                that.executeAction(expanded ? \"onRowCollapsed\" : \"onRowExpanded\", args)\r\n            }))\r\n        }\r\n        return (new Deferred).resolve()\r\n    },\r\n    _changeRowExpandCore: function(key) {\r\n        var that = this;\r\n        var dataSource = this._dataSource;\r\n        var d = new Deferred;\r\n        if (!dataSource) {\r\n            d.resolve()\r\n        } else {\r\n            when(dataSource.changeRowExpand(key)).done((function() {\r\n                that.load().done(d.resolve).fail(d.reject)\r\n            })).fail(d.reject)\r\n        }\r\n        return d\r\n    },\r\n    isRowExpanded: function(key) {\r\n        var dataSource = this._dataSource;\r\n        return dataSource && dataSource.isRowExpanded(key)\r\n    },\r\n    expandRow: function(key) {\r\n        if (!this.isRowExpanded(key)) {\r\n            return this.changeRowExpand(key)\r\n        }\r\n        return (new Deferred).resolve()\r\n    },\r\n    collapseRow: function(key) {\r\n        if (this.isRowExpanded(key)) {\r\n            return this.changeRowExpand(key)\r\n        }\r\n        return (new Deferred).resolve()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"grouping\" === args.name) {\r\n            args.name = \"dataSource\"\r\n        }\r\n        this.callBase(args)\r\n    }\r\n};\r\nvar onGroupingMenuItemClick = function(column, params) {\r\n    var columnsController = this._columnsController;\r\n    switch (params.itemData.value) {\r\n        case \"group\":\r\n            var groups = columnsController._dataSource.group() || [];\r\n            columnsController.columnOption(column.dataField, \"groupIndex\", groups.length);\r\n            break;\r\n        case \"ungroup\":\r\n            columnsController.columnOption(column.dataField, \"groupIndex\", -1);\r\n            break;\r\n        case \"ungroupAll\":\r\n            this.component.clearGrouping()\r\n    }\r\n};\r\nexport var GroupingHeaderPanelExtender = {\r\n    _getToolbarItems: function() {\r\n        var items = this.callBase();\r\n        return this._appendGroupingItem(items)\r\n    },\r\n    _appendGroupingItem: function(items) {\r\n        if (this._isGroupPanelVisible()) {\r\n            var isRendered = false;\r\n            var toolbarItem = {\r\n                template: () => {\r\n                    var $groupPanel = $(\"<div>\").addClass(DATAGRID_GROUP_PANEL_CLASS);\r\n                    this._updateGroupPanelContent($groupPanel);\r\n                    registerKeyboardAction(\"groupPanel\", this, $groupPanel, void 0, this._handleActionKeyDown.bind(this));\r\n                    return $groupPanel\r\n                },\r\n                name: \"groupPanel\",\r\n                onItemRendered: () => {\r\n                    isRendered && this.renderCompleted.fire();\r\n                    isRendered = true\r\n                },\r\n                location: \"before\",\r\n                locateInMenu: \"never\",\r\n                sortIndex: 1\r\n            };\r\n            items.push(toolbarItem)\r\n        }\r\n        return items\r\n    },\r\n    _handleActionKeyDown: function(args) {\r\n        var event = args.event;\r\n        var $target = $(event.target);\r\n        var groupColumnIndex = $target.closest(\".\".concat(DATAGRID_GROUP_PANEL_ITEM_CLASS)).index();\r\n        var column = this._columnsController.getGroupColumns()[groupColumnIndex];\r\n        var columnIndex = column && column.index;\r\n        if ($target.is(HEADER_FILTER_CLASS_SELECTOR)) {\r\n            this.getController(\"headerFilter\").showHeaderFilterMenu(columnIndex, true)\r\n        } else {\r\n            this._processGroupItemAction(columnIndex)\r\n        }\r\n        event.preventDefault()\r\n    },\r\n    _isGroupPanelVisible: function() {\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        var isVisible;\r\n        if (groupPanelOptions) {\r\n            isVisible = groupPanelOptions.visible;\r\n            if (\"auto\" === isVisible) {\r\n                isVisible = \"desktop\" === devices.current().deviceType ? true : false\r\n            }\r\n        }\r\n        return isVisible\r\n    },\r\n    _renderGroupPanelItems: function($groupPanel, groupColumns) {\r\n        var that = this;\r\n        $groupPanel.empty();\r\n        each(groupColumns, (function(index, groupColumn) {\r\n            that._createGroupPanelItem($groupPanel, groupColumn)\r\n        }));\r\n        restoreFocus(this)\r\n    },\r\n    _createGroupPanelItem: function($rootElement, groupColumn) {\r\n        var $groupPanelItem = $(\"<div>\").addClass(groupColumn.cssClass).addClass(DATAGRID_GROUP_PANEL_ITEM_CLASS).data(\"columnData\", groupColumn).appendTo($rootElement).text(groupColumn.caption);\r\n        setTabIndex(this, $groupPanelItem);\r\n        return $groupPanelItem\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        if (!this._requireReady && !gridCore.checkChanges(e.optionNames, [\"width\", \"visibleWidth\"])) {\r\n            var $toolbarElement = this.element();\r\n            var $groupPanel = $toolbarElement && $toolbarElement.find(\".\" + DATAGRID_GROUP_PANEL_CLASS);\r\n            if ($groupPanel && $groupPanel.length) {\r\n                this._updateGroupPanelContent($groupPanel);\r\n                this.renderCompleted.fire()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    _updateGroupPanelContent: function($groupPanel) {\r\n        var groupColumns = this.getController(\"columns\").getGroupColumns();\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        this._renderGroupPanelItems($groupPanel, groupColumns);\r\n        if (groupPanelOptions.allowColumnDragging && !groupColumns.length) {\r\n            $(\"<div>\").addClass(DATAGRID_GROUP_PANEL_MESSAGE_CLASS).text(groupPanelOptions.emptyPanelText).appendTo($groupPanel);\r\n            $groupPanel.closest(\".\" + DATAGRID_GROUP_PANEL_LABEL_CLASS).css(\"maxWidth\", \"none\");\r\n            this.updateToolbarDimensions()\r\n        }\r\n    },\r\n    allowDragging: function(column) {\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        return this._isGroupPanelVisible() && groupPanelOptions.allowColumnDragging && column && column.allowGrouping\r\n    },\r\n    getColumnElements: function() {\r\n        var $element = this.element();\r\n        return $element && $element.find(\".\" + DATAGRID_GROUP_PANEL_ITEM_CLASS)\r\n    },\r\n    getColumns: function() {\r\n        return this.getController(\"columns\").getGroupColumns()\r\n    },\r\n    getBoundingRect: function() {\r\n        var $element = this.element();\r\n        if ($element && $element.find(\".\" + DATAGRID_GROUP_PANEL_CLASS).length) {\r\n            var offset = $element.offset();\r\n            return {\r\n                top: offset.top,\r\n                bottom: offset.top + getHeight($element)\r\n            }\r\n        }\r\n        return null\r\n    },\r\n    getName: function() {\r\n        return \"group\"\r\n    },\r\n    getContextMenuItems: function(options) {\r\n        var contextMenuEnabled = this.option(\"grouping.contextMenuEnabled\");\r\n        var $groupedColumnElement = $(options.targetElement).closest(\".\" + DATAGRID_GROUP_PANEL_ITEM_CLASS);\r\n        var items;\r\n        if ($groupedColumnElement.length) {\r\n            options.column = $groupedColumnElement.data(\"columnData\")\r\n        }\r\n        if (contextMenuEnabled && options.column) {\r\n            var column = options.column;\r\n            var isGroupingAllowed = isDefined(column.allowGrouping) ? column.allowGrouping : true;\r\n            if (isGroupingAllowed) {\r\n                var isColumnGrouped = isDefined(column.groupIndex) && column.groupIndex > -1;\r\n                var groupingTexts = this.option(\"grouping.texts\");\r\n                var onItemClick = onGroupingMenuItemClick.bind(this, column);\r\n                items = [{\r\n                    text: groupingTexts.ungroup,\r\n                    value: \"ungroup\",\r\n                    disabled: !isColumnGrouped,\r\n                    onItemClick: onItemClick\r\n                }, {\r\n                    text: groupingTexts.ungroupAll,\r\n                    value: \"ungroupAll\",\r\n                    onItemClick: onItemClick\r\n                }]\r\n            }\r\n        }\r\n        return items\r\n    },\r\n    isVisible: function() {\r\n        return this.callBase() || this._isGroupPanelVisible()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"groupPanel\" === args.name) {\r\n            this._invalidate();\r\n            args.handled = true\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    }\r\n};\r\nvar GroupingRowsViewExtender = {\r\n    getContextMenuItems: function(options) {\r\n        var contextMenuEnabled = this.option(\"grouping.contextMenuEnabled\");\r\n        var items;\r\n        if (contextMenuEnabled && options.row && \"group\" === options.row.rowType) {\r\n            var columnsController = this._columnsController;\r\n            var column = columnsController.columnOption(\"groupIndex:\" + options.row.groupIndex);\r\n            if (column && column.allowGrouping) {\r\n                var groupingTexts = this.option(\"grouping.texts\");\r\n                var onItemClick = onGroupingMenuItemClick.bind(this, column);\r\n                items = [];\r\n                items.push({\r\n                    text: groupingTexts.ungroup,\r\n                    value: \"ungroup\",\r\n                    onItemClick: onItemClick\r\n                }, {\r\n                    text: groupingTexts.ungroupAll,\r\n                    value: \"ungroupAll\",\r\n                    onItemClick: onItemClick\r\n                })\r\n            }\r\n        }\r\n        return items\r\n    },\r\n    _rowClick: function(e) {\r\n        var expandMode = this.option(\"grouping.expandMode\");\r\n        var scrollingMode = this.option(\"scrolling.mode\");\r\n        var isGroupRowStateChanged = \"infinite\" !== scrollingMode && \"rowClick\" === expandMode && $(e.event.target).closest(\".\" + DATAGRID_GROUP_ROW_CLASS).length;\r\n        var isExpandButtonClicked = $(e.event.target).closest(\".\" + DATAGRID_EXPAND_CLASS).length;\r\n        if (isGroupRowStateChanged || isExpandButtonClicked) {\r\n            this._changeGroupRowState(e)\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _changeGroupRowState: function(e) {\r\n        var dataController = this.getController(\"data\");\r\n        var row = dataController.items()[e.rowIndex];\r\n        var allowCollapsing = this._columnsController.columnOption(\"groupIndex:\" + row.groupIndex, \"allowCollapsing\");\r\n        if (\"data\" === row.rowType || \"group\" === row.rowType && false !== allowCollapsing) {\r\n            dataController.changeRowExpand(row.key, true);\r\n            e.event.preventDefault();\r\n            e.handled = true\r\n        }\r\n    }\r\n};\r\nvar columnHeadersViewExtender = {\r\n    getContextMenuItems: function(options) {\r\n        var contextMenuEnabled = this.option(\"grouping.contextMenuEnabled\");\r\n        var items = this.callBase(options);\r\n        if (contextMenuEnabled && options.row && (\"header\" === options.row.rowType || \"detailAdaptive\" === options.row.rowType)) {\r\n            var column = options.column;\r\n            if (!column.command && (!isDefined(column.allowGrouping) || column.allowGrouping)) {\r\n                var groupingTexts = this.option(\"grouping.texts\");\r\n                var isColumnGrouped = isDefined(column.groupIndex) && column.groupIndex > -1;\r\n                var onItemClick = onGroupingMenuItemClick.bind(this, column);\r\n                items = items || [];\r\n                items.push({\r\n                    text: groupingTexts.groupByThisColumn,\r\n                    value: \"group\",\r\n                    beginGroup: true,\r\n                    disabled: isColumnGrouped,\r\n                    onItemClick: onItemClick\r\n                });\r\n                if (column.showWhenGrouped) {\r\n                    items.push({\r\n                        text: groupingTexts.ungroup,\r\n                        value: \"ungroup\",\r\n                        disabled: !isColumnGrouped,\r\n                        onItemClick: onItemClick\r\n                    })\r\n                }\r\n                items.push({\r\n                    text: groupingTexts.ungroupAll,\r\n                    value: \"ungroupAll\",\r\n                    onItemClick: onItemClick\r\n                })\r\n            }\r\n        }\r\n        return items\r\n    }\r\n};\r\ngridCore.registerModule(\"grouping\", {\r\n    defaultOptions: function() {\r\n        return {\r\n            grouping: {\r\n                autoExpandAll: true,\r\n                allowCollapsing: true,\r\n                contextMenuEnabled: false,\r\n                expandMode: \"buttonClick\",\r\n                texts: {\r\n                    groupContinuesMessage: messageLocalization.format(\"dxDataGrid-groupContinuesMessage\"),\r\n                    groupContinuedMessage: messageLocalization.format(\"dxDataGrid-groupContinuedMessage\"),\r\n                    groupByThisColumn: messageLocalization.format(\"dxDataGrid-groupHeaderText\"),\r\n                    ungroup: messageLocalization.format(\"dxDataGrid-ungroupHeaderText\"),\r\n                    ungroupAll: messageLocalization.format(\"dxDataGrid-ungroupAllText\")\r\n                }\r\n            },\r\n            groupPanel: {\r\n                visible: false,\r\n                emptyPanelText: messageLocalization.format(\"dxDataGrid-groupPanelEmptyText\"),\r\n                allowColumnDragging: true\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: GroupingDataControllerExtender,\r\n            columns: {\r\n                _getExpandColumnOptions: function() {\r\n                    var options = this.callBase.apply(this, arguments);\r\n                    options.cellTemplate = gridCore.getExpandCellTemplate();\r\n                    return options\r\n                }\r\n            },\r\n            editing: {\r\n                _isProcessedItem: function(item) {\r\n                    return isDefined(item.groupIndex) && isString(item.rowType) && 0 === item.rowType.indexOf(\"group\")\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            headerPanel: GroupingHeaderPanelExtender,\r\n            rowsView: GroupingRowsViewExtender,\r\n            columnHeadersView: columnHeadersViewExtender\r\n        }\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.master_detail.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    grep\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar MASTER_DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar ROW_LINES_CLASS = \"dx-row-lines\";\r\nexport var masterDetailModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            masterDetail: {\r\n                enabled: false,\r\n                autoExpandAll: false,\r\n                template: null\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            columns: {\r\n                _getExpandColumnsCore: function() {\r\n                    var expandColumns = this.callBase();\r\n                    if (this.option(\"masterDetail.enabled\")) {\r\n                        expandColumns.push({\r\n                            type: \"detailExpand\",\r\n                            cellTemplate: gridCoreUtils.getExpandCellTemplate()\r\n                        })\r\n                    }\r\n                    return expandColumns\r\n                }\r\n            },\r\n            data: function() {\r\n                var initMasterDetail = function(that) {\r\n                    that._expandedItems = [];\r\n                    that._isExpandAll = that.option(\"masterDetail.autoExpandAll\")\r\n                };\r\n                return {\r\n                    init: function() {\r\n                        initMasterDetail(this);\r\n                        this.callBase()\r\n                    },\r\n                    expandAll: function(groupIndex) {\r\n                        var that = this;\r\n                        if (groupIndex < 0) {\r\n                            that._isExpandAll = true;\r\n                            that._expandedItems = [];\r\n                            that.updateItems()\r\n                        } else {\r\n                            that.callBase.apply(that, arguments)\r\n                        }\r\n                    },\r\n                    collapseAll: function(groupIndex) {\r\n                        var that = this;\r\n                        if (groupIndex < 0) {\r\n                            that._isExpandAll = false;\r\n                            that._expandedItems = [];\r\n                            that.updateItems()\r\n                        } else {\r\n                            that.callBase.apply(that, arguments)\r\n                        }\r\n                    },\r\n                    isRowExpanded: function(key) {\r\n                        var that = this;\r\n                        var expandIndex = gridCoreUtils.getIndexByKey(key, that._expandedItems);\r\n                        if (Array.isArray(key)) {\r\n                            return that.callBase.apply(that, arguments)\r\n                        } else {\r\n                            return !!(that._isExpandAll ^ (expandIndex >= 0 && that._expandedItems[expandIndex].visible))\r\n                        }\r\n                    },\r\n                    _getRowIndicesForExpand: function(key) {\r\n                        var rowIndex = this.getRowIndexByKey(key);\r\n                        return [rowIndex, rowIndex + 1]\r\n                    },\r\n                    _changeRowExpandCore: function(key) {\r\n                        var that = this;\r\n                        var result;\r\n                        if (Array.isArray(key)) {\r\n                            result = that.callBase.apply(that, arguments)\r\n                        } else {\r\n                            var expandIndex = gridCoreUtils.getIndexByKey(key, that._expandedItems);\r\n                            if (expandIndex >= 0) {\r\n                                var visible = that._expandedItems[expandIndex].visible;\r\n                                that._expandedItems[expandIndex].visible = !visible\r\n                            } else {\r\n                                that._expandedItems.push({\r\n                                    key: key,\r\n                                    visible: true\r\n                                })\r\n                            }\r\n                            that.updateItems({\r\n                                changeType: \"update\",\r\n                                rowIndices: that._getRowIndicesForExpand(key)\r\n                            });\r\n                            result = (new Deferred).resolve()\r\n                        }\r\n                        return result\r\n                    },\r\n                    _processDataItem: function(data, options) {\r\n                        var that = this;\r\n                        var dataItem = that.callBase.apply(that, arguments);\r\n                        dataItem.isExpanded = that.isRowExpanded(dataItem.key);\r\n                        if (void 0 === options.detailColumnIndex) {\r\n                            options.detailColumnIndex = -1;\r\n                            each(options.visibleColumns, (function(index, column) {\r\n                                if (\"expand\" === column.command && !isDefined(column.groupIndex)) {\r\n                                    options.detailColumnIndex = index;\r\n                                    return false\r\n                                }\r\n                            }))\r\n                        }\r\n                        if (options.detailColumnIndex >= 0) {\r\n                            dataItem.values[options.detailColumnIndex] = dataItem.isExpanded\r\n                        }\r\n                        return dataItem\r\n                    },\r\n                    _processItems: function(items, change) {\r\n                        var that = this;\r\n                        var changeType = change.changeType;\r\n                        var result = [];\r\n                        items = that.callBase.apply(that, arguments);\r\n                        if (\"loadingAll\" === changeType) {\r\n                            return items\r\n                        }\r\n                        if (\"refresh\" === changeType) {\r\n                            that._expandedItems = grep(that._expandedItems, (function(item) {\r\n                                return item.visible\r\n                            }))\r\n                        }\r\n                        each(items, (function(index, item) {\r\n                            result.push(item);\r\n                            var expandIndex = gridCoreUtils.getIndexByKey(item.key, that._expandedItems);\r\n                            if (\"data\" === item.rowType && (item.isExpanded || expandIndex >= 0) && !item.isNewRow) {\r\n                                result.push({\r\n                                    visible: item.isExpanded,\r\n                                    rowType: \"detail\",\r\n                                    key: item.key,\r\n                                    data: item.data,\r\n                                    values: []\r\n                                })\r\n                            }\r\n                        }));\r\n                        return result\r\n                    },\r\n                    optionChanged: function(args) {\r\n                        var isEnabledChanged;\r\n                        var isAutoExpandAllChanged;\r\n                        if (\"masterDetail\" === args.name) {\r\n                            args.name = \"dataSource\";\r\n                            switch (args.fullName) {\r\n                                case \"masterDetail\":\r\n                                    var value = args.value || {};\r\n                                    var previousValue = args.previousValue || {};\r\n                                    isEnabledChanged = value.enabled !== previousValue.enabled;\r\n                                    isAutoExpandAllChanged = value.autoExpandAll !== previousValue.autoExpandAll;\r\n                                    break;\r\n                                case \"masterDetail.template\":\r\n                                    initMasterDetail(this);\r\n                                    break;\r\n                                case \"masterDetail.enabled\":\r\n                                    isEnabledChanged = true;\r\n                                    break;\r\n                                case \"masterDetail.autoExpandAll\":\r\n                                    isAutoExpandAllChanged = true\r\n                            }\r\n                            if (isEnabledChanged || isAutoExpandAllChanged) {\r\n                                initMasterDetail(this)\r\n                            }\r\n                        }\r\n                        this.callBase(args)\r\n                    }\r\n                }\r\n            }(),\r\n            resizing: {\r\n                fireContentReadyAction: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._updateParentDataGrids(this.component.$element())\r\n                },\r\n                _updateParentDataGrids: function($element) {\r\n                    var $masterDetailRow = $element.closest(\".\" + MASTER_DETAIL_ROW_CLASS);\r\n                    if ($masterDetailRow.length) {\r\n                        when(this._updateMasterDataGrid($masterDetailRow, $element)).done(() => {\r\n                            this._updateParentDataGrids($masterDetailRow.parent())\r\n                        })\r\n                    }\r\n                },\r\n                _updateMasterDataGrid: function($masterDetailRow, $detailElement) {\r\n                    var masterRowOptions = $($masterDetailRow).data(\"options\");\r\n                    var masterDataGrid = $($masterDetailRow).closest(\".\" + this.getWidgetContainerClass()).parent().data(\"dxDataGrid\");\r\n                    if (masterRowOptions && masterDataGrid) {\r\n                        if (masterDataGrid.getView(\"rowsView\").isFixedColumns()) {\r\n                            return this._updateFixedMasterDetailGrids(masterDataGrid, masterRowOptions.rowIndex, $detailElement)\r\n                        } else {\r\n                            if (true === masterDataGrid.option(\"scrolling.useNative\")) {\r\n                                return masterDataGrid.updateDimensions()\r\n                            }\r\n                            var scrollable = masterDataGrid.getScrollable();\r\n                            return null === scrollable || void 0 === scrollable ? void 0 : scrollable.update()\r\n                        }\r\n                    }\r\n                },\r\n                _updateFixedMasterDetailGrids: function(masterDataGrid, masterRowIndex, $detailElement) {\r\n                    var $rows = $(masterDataGrid.getRowElement(masterRowIndex));\r\n                    var $tables = $(masterDataGrid.getView(\"rowsView\").getTableElements());\r\n                    var rowsNotEqual = 2 === (null === $rows || void 0 === $rows ? void 0 : $rows.length) && getHeight($rows.eq(0)) !== getHeight($rows.eq(1));\r\n                    var tablesNotEqual = 2 === (null === $tables || void 0 === $tables ? void 0 : $tables.length) && getHeight($tables.eq(0)) !== getHeight($tables.eq(1));\r\n                    if (rowsNotEqual || tablesNotEqual) {\r\n                        var detailElementWidth = getWidth($detailElement);\r\n                        return masterDataGrid.updateDimensions().done(() => {\r\n                            var isDetailHorizontalScrollCanBeShown = this.option(\"columnAutoWidth\") && true === masterDataGrid.option(\"scrolling.useNative\");\r\n                            var isDetailGridWidthChanged = isDetailHorizontalScrollCanBeShown && detailElementWidth !== getWidth($detailElement);\r\n                            if (isDetailHorizontalScrollCanBeShown && isDetailGridWidthChanged) {\r\n                                this.updateDimensions()\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                _toggleBestFitMode: function(isBestFit) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.option(\"masterDetail.template\")) {\r\n                        var $rowsTable = this._rowsView.getTableElement();\r\n                        if ($rowsTable) {\r\n                            $rowsTable.find(\".dx-master-detail-cell\").css(\"maxWidth\", isBestFit ? 0 : \"\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _getCellTemplate: function(options) {\r\n                    var that = this;\r\n                    var column = options.column;\r\n                    var editingController = that.getController(\"editing\");\r\n                    var isEditRow = editingController && editingController.isEditRow(options.rowIndex);\r\n                    var template;\r\n                    if (\"detail\" === column.command && !isEditRow) {\r\n                        template = that.option(\"masterDetail.template\") || {\r\n                            allowRenderToDetachedContainer: false,\r\n                            render: that._getDefaultTemplate(column)\r\n                        }\r\n                    } else {\r\n                        template = that.callBase.apply(that, arguments)\r\n                    }\r\n                    return template\r\n                },\r\n                _isDetailRow: function(row) {\r\n                    return row && row.rowType && 0 === row.rowType.indexOf(\"detail\")\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row && this._isDetailRow(row)) {\r\n                        this.option(\"showRowLines\") && $row.addClass(ROW_LINES_CLASS);\r\n                        $row.addClass(MASTER_DETAIL_ROW_CLASS);\r\n                        if (isDefined(row.visible)) {\r\n                            $row.toggle(row.visible)\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _renderCells: function($row, options) {\r\n                    var row = options.row;\r\n                    var $detailCell;\r\n                    var visibleColumns = this._columnsController.getVisibleColumns();\r\n                    if (row.rowType && this._isDetailRow(row)) {\r\n                        if (this._needRenderCell(0, options.columnIndices)) {\r\n                            $detailCell = this._renderCell($row, {\r\n                                value: null,\r\n                                row: row,\r\n                                rowIndex: row.rowIndex,\r\n                                column: {\r\n                                    command: \"detail\"\r\n                                },\r\n                                columnIndex: 0\r\n                            });\r\n                            $detailCell.addClass(CELL_FOCUS_DISABLED_CLASS).addClass(MASTER_DETAIL_CELL_CLASS).attr(\"colSpan\", visibleColumns.length)\r\n                        }\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.master_detail.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    masterDetailModule\r\n} from \"../grid_core/ui.grid_core.master_detail\";\r\ngridCore.registerModule(\"masterDetail\", masterDetailModule);\r\n","/**\r\n * DevExtreme (esm/ui/shared/ui.editor_factory_mixin.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDefined,\r\n    isObject,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport devices from \"../../core/devices\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    normalizeDataSourceOptions\r\n} from \"../../data/data_source/utils\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nvar {\r\n    isWrapped: isWrapped\r\n} = variableWrapper;\r\nimport \"../text_box\";\r\nimport \"../number_box\";\r\nimport \"../check_box\";\r\nimport \"../select_box\";\r\nimport \"../date_box\";\r\nvar CHECKBOX_SIZE_CLASS = \"checkbox-size\";\r\nvar EDITOR_INLINE_BLOCK = \"dx-editor-inline-block\";\r\nvar EditorFactoryMixin = function() {\r\n    var getResultConfig = function(config, options) {\r\n        return extend(config, {\r\n            readOnly: options.readOnly,\r\n            placeholder: options.placeholder,\r\n            inputAttr: {\r\n                id: options.id\r\n            },\r\n            tabIndex: options.tabIndex\r\n        }, options.editorOptions)\r\n    };\r\n    var checkEnterBug = function() {\r\n        return browser.mozilla || devices.real().ios\r\n    };\r\n    var getTextEditorConfig = function(options) {\r\n        var data = {};\r\n        var isEnterBug = checkEnterBug();\r\n        var sharedData = options.sharedData || data;\r\n        return getResultConfig({\r\n            placeholder: options.placeholder,\r\n            width: options.width,\r\n            value: options.value,\r\n            onValueChanged: function(e) {\r\n                var needDelayedUpdate = \"filterRow\" === options.parentType || \"searchPanel\" === options.parentType;\r\n                var isInputOrKeyUpEvent = e.event && (\"input\" === e.event.type || \"keyup\" === e.event.type);\r\n                var updateValue = function(e, notFireEvent) {\r\n                    options && options.setValue(e.value, notFireEvent)\r\n                };\r\n                clearTimeout(data.valueChangeTimeout);\r\n                if (isInputOrKeyUpEvent && needDelayedUpdate) {\r\n                    sharedData.valueChangeTimeout = data.valueChangeTimeout = setTimeout((function() {\r\n                        updateValue(e, data.valueChangeTimeout !== sharedData.valueChangeTimeout)\r\n                    }), isDefined(options.updateValueTimeout) ? options.updateValueTimeout : 0)\r\n                } else {\r\n                    updateValue(e)\r\n                }\r\n            },\r\n            onKeyDown: function(e) {\r\n                if (isEnterBug && \"enter\" === normalizeKeyName(e.event)) {\r\n                    eventsEngine.trigger($(e.component._input()), \"change\")\r\n                }\r\n            },\r\n            valueChangeEvent: \"change\" + (\"filterRow\" === options.parentType ? \" keyup input\" : \"\")\r\n        }, options)\r\n    };\r\n    var prepareBooleanEditor = function(options) {\r\n        if (\"filterRow\" === options.parentType || \"filterBuilder\" === options.parentType) {\r\n            prepareSelectBox(extend(options, {\r\n                lookup: {\r\n                    displayExpr: function(data) {\r\n                        if (true === data) {\r\n                            return options.trueText || \"true\"\r\n                        } else if (false === data) {\r\n                            return options.falseText || \"false\"\r\n                        }\r\n                    },\r\n                    dataSource: [true, false]\r\n                }\r\n            }))\r\n        } else {\r\n            ! function(options) {\r\n                options.editorName = \"dxCheckBox\";\r\n                options.editorOptions = getResultConfig({\r\n                    elementAttr: {\r\n                        id: options.id\r\n                    },\r\n                    value: isDefined(options.value) ? options.value : void 0,\r\n                    hoverStateEnabled: !options.readOnly,\r\n                    focusStateEnabled: !options.readOnly,\r\n                    activeStateEnabled: false,\r\n                    onValueChanged: function(e) {\r\n                        options.setValue && options.setValue(e.value, e)\r\n                    }\r\n                }, options)\r\n            }(options)\r\n        }\r\n    };\r\n\r\n    function prepareSelectBox(options) {\r\n        var lookup = options.lookup;\r\n        var displayGetter;\r\n        var dataSource;\r\n        var postProcess;\r\n        var isFilterRow = \"filterRow\" === options.parentType;\r\n        if (lookup) {\r\n            displayGetter = compileGetter(lookup.displayExpr);\r\n            dataSource = lookup.dataSource;\r\n            if (isFunction(dataSource) && !isWrapped(dataSource)) {\r\n                dataSource = dataSource(options.row || {});\r\n                ! function(options) {\r\n                    if (options.row && options.row.watch && \"dataRow\" === options.parentType) {\r\n                        var editorOptions = options.editorOptions || {};\r\n                        options.editorOptions = editorOptions;\r\n                        var selectBox;\r\n                        var onInitialized = editorOptions.onInitialized;\r\n                        editorOptions.onInitialized = function(e) {\r\n                            onInitialized && onInitialized.apply(this, arguments);\r\n                            selectBox = e.component;\r\n                            selectBox.on(\"disposing\", stopWatch)\r\n                        };\r\n                        var dataSource;\r\n                        var stopWatch = options.row.watch(() => {\r\n                            dataSource = options.lookup.dataSource(options.row);\r\n                            return dataSource && dataSource.filter\r\n                        }, () => {\r\n                            selectBox.option(\"dataSource\", dataSource)\r\n                        }, row => {\r\n                            options.row = row\r\n                        })\r\n                    }\r\n                }(options)\r\n            }\r\n            if (isObject(dataSource) || Array.isArray(dataSource)) {\r\n                dataSource = normalizeDataSourceOptions(dataSource);\r\n                if (isFilterRow) {\r\n                    postProcess = dataSource.postProcess;\r\n                    dataSource.postProcess = function(items) {\r\n                        if (0 === this.pageIndex()) {\r\n                            items = items.slice(0);\r\n                            items.unshift(null)\r\n                        }\r\n                        if (postProcess) {\r\n                            return postProcess.call(this, items)\r\n                        }\r\n                        return items\r\n                    }\r\n                }\r\n            }\r\n            var allowClearing = Boolean(lookup.allowClearing && !isFilterRow);\r\n            options.editorName = \"dxSelectBox\";\r\n            options.editorOptions = getResultConfig({\r\n                searchEnabled: true,\r\n                value: options.value,\r\n                valueExpr: options.lookup.valueExpr,\r\n                searchExpr: options.lookup.searchExpr || options.lookup.displayExpr,\r\n                allowClearing: allowClearing,\r\n                showClearButton: allowClearing,\r\n                displayExpr: function(data) {\r\n                    if (null === data) {\r\n                        return options.showAllText\r\n                    }\r\n                    return displayGetter(data)\r\n                },\r\n                dataSource: dataSource,\r\n                onValueChanged: function(e) {\r\n                    var params = [e.value];\r\n                    !isFilterRow && params.push(e.component.option(\"text\"));\r\n                    options.setValue.apply(this, params)\r\n                }\r\n            }, options)\r\n        }\r\n    }\r\n    return {\r\n        createEditor: function($container, options) {\r\n            options.cancel = false;\r\n            options.editorElement = getPublicElement($container);\r\n            if (!isDefined(options.tabIndex)) {\r\n                options.tabIndex = this.option(\"tabIndex\")\r\n            }\r\n            if (options.lookup) {\r\n                prepareSelectBox(options)\r\n            } else {\r\n                switch (options.dataType) {\r\n                    case \"date\":\r\n                    case \"datetime\":\r\n                        ! function(options) {\r\n                            options.editorName = \"dxDateBox\";\r\n                            options.editorOptions = getResultConfig({\r\n                                value: options.value,\r\n                                onValueChanged: function(args) {\r\n                                    options.setValue(args.value)\r\n                                },\r\n                                onKeyDown: function(e) {\r\n                                    if (checkEnterBug() && \"enter\" === normalizeKeyName(e.event)) {\r\n                                        e.component.blur();\r\n                                        e.component.focus()\r\n                                    }\r\n                                },\r\n                                displayFormat: options.format,\r\n                                type: options.dataType,\r\n                                dateSerializationFormat: null,\r\n                                width: \"filterBuilder\" === options.parentType ? void 0 : \"auto\"\r\n                            }, options)\r\n                        }(options);\r\n                        break;\r\n                    case \"boolean\":\r\n                        prepareBooleanEditor(options);\r\n                        break;\r\n                    case \"number\":\r\n                        ! function(options) {\r\n                            var config = getTextEditorConfig(options);\r\n                            config.value = isDefined(options.value) ? options.value : null;\r\n                            options.editorName = \"dxNumberBox\";\r\n                            options.editorOptions = config\r\n                        }(options);\r\n                        break;\r\n                    default:\r\n                        ! function(options) {\r\n                            var config = getTextEditorConfig(options);\r\n                            var isSearching = \"searchPanel\" === options.parentType;\r\n                            if (options.editorType && \"dxTextBox\" !== options.editorType) {\r\n                                config.value = options.value\r\n                            } else {\r\n                                config.value = (value = options.value, isDefined(value) ? value.toString() : \"\")\r\n                            }\r\n                            var value;\r\n                            config.valueChangeEvent += isSearching ? \" keyup input search\" : \"\";\r\n                            config.mode = config.mode || (isSearching ? \"search\" : \"text\");\r\n                            options.editorName = \"dxTextBox\";\r\n                            options.editorOptions = config\r\n                        }(options)\r\n                }\r\n            }\r\n            if (\"dataRow\" === options.parentType && options.editorType) {\r\n                options.editorName = options.editorType\r\n            }\r\n            this.executeAction(\"onEditorPreparing\", options);\r\n            if (options.cancel) {\r\n                return\r\n            }\r\n            if (\"dataRow\" === options.parentType && !options.isOnForm && !isDefined(options.editorOptions.showValidationMark)) {\r\n                options.editorOptions.showValidationMark = false\r\n            }! function(that, options) {\r\n                var $editorElement = $(options.editorElement);\r\n                if (options.editorName && options.editorOptions && $editorElement[options.editorName]) {\r\n                    if (\"dxCheckBox\" === options.editorName || \"dxSwitch\" === options.editorName) {\r\n                        if (!options.isOnForm) {\r\n                            $editorElement.addClass(that.addWidgetPrefix(CHECKBOX_SIZE_CLASS));\r\n                            $editorElement.parent().addClass(EDITOR_INLINE_BLOCK)\r\n                        }\r\n                    }\r\n                    that._createComponent($editorElement, options.editorName, options.editorOptions);\r\n                    if (\"dxDateBox\" === options.editorName) {\r\n                        var dateBox = $editorElement.dxDateBox(\"instance\");\r\n                        var defaultEnterKeyHandler = dateBox._supportedKeys().enter;\r\n                        dateBox.registerKeyHandler(\"enter\", e => {\r\n                            if (dateBox.option(\"opened\")) {\r\n                                defaultEnterKeyHandler(e)\r\n                            }\r\n                            return true\r\n                        })\r\n                    }\r\n                    if (\"dxTextArea\" === options.editorName) {\r\n                        $editorElement.dxTextArea(\"instance\").registerKeyHandler(\"enter\", (function(event) {\r\n                            if (\"enter\" === normalizeKeyName(event) && !event.ctrlKey && !event.shiftKey) {\r\n                                event.stopPropagation()\r\n                            }\r\n                        }))\r\n                    }\r\n                }\r\n            }(this, options);\r\n            this.executeAction(\"onEditorPrepared\", options)\r\n        }\r\n    }\r\n}();\r\nexport default EditorFactoryMixin;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editor_factory.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    setOuterWidth,\r\n    getOuterWidth,\r\n    setOuterHeight,\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport positionUtils from \"../../animation/position\";\r\nimport {\r\n    addNamespace,\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport EditorFactoryMixin from \"../shared/ui.editor_factory_mixin\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nvar EDITOR_INLINE_BLOCK = \"dx-editor-inline-block\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FOCUS_OVERLAY_CLASS = \"focus-overlay\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar FOCUSED_ELEMENT_CLASS = \"dx-focused\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar MODULE_NAMESPACE = \"dxDataGridEditorFactory\";\r\nvar UPDATE_FOCUS_EVENTS = addNamespace([pointerEvents.down, \"focusin\", clickEventName].join(\" \"), MODULE_NAMESPACE);\r\nvar DX_HIDDEN = \"dx-hidden\";\r\nvar EditorFactory = modules.ViewController.inherit({\r\n    _getFocusedElement: function($dataGridElement) {\r\n        var rowSelector = this.option(\"focusedRowEnabled\") ? \"tr[tabindex]:focus\" : \"tr[tabindex]:not(.dx-data-row):focus\";\r\n        var focusedElementSelector = \"td[tabindex]:focus, \".concat(rowSelector, \", input:focus, textarea:focus, .dx-lookup-field:focus, .dx-checkbox:focus, .dx-switch:focus, .dx-dropdownbutton .dx-buttongroup:focus\");\r\n        return $dataGridElement.find(focusedElementSelector)\r\n    },\r\n    _getFocusCellSelector: function() {\r\n        return \".dx-row > td\"\r\n    },\r\n    _updateFocusCore: function() {\r\n        var $focus = this._$focusedElement;\r\n        var $dataGridElement = this.component && this.component.$element();\r\n        var $focusCell;\r\n        var hideBorders;\r\n        if ($dataGridElement) {\r\n            $focus = this._getFocusedElement($dataGridElement);\r\n            if ($focus.length) {\r\n                if (!$focus.hasClass(CELL_FOCUS_DISABLED_CLASS) && !$focus.hasClass(ROW_CLASS)) {\r\n                    $focusCell = $focus.closest(this._getFocusCellSelector() + \", .\" + CELL_FOCUS_DISABLED_CLASS);\r\n                    hideBorders = $focusCell.get(0) !== $focus.get(0) && $focusCell.hasClass(EDITOR_INLINE_BLOCK);\r\n                    $focus = $focusCell\r\n                }\r\n                if ($focus.length && !$focus.hasClass(CELL_FOCUS_DISABLED_CLASS)) {\r\n                    this.focus($focus, hideBorders);\r\n                    return\r\n                }\r\n            }\r\n        }\r\n        this.loseFocus()\r\n    },\r\n    _updateFocus: function(e) {\r\n        var that = this;\r\n        var isFocusOverlay = e && e.event && $(e.event.target).hasClass(that.addWidgetPrefix(FOCUS_OVERLAY_CLASS));\r\n        that._isFocusOverlay = that._isFocusOverlay || isFocusOverlay;\r\n        clearTimeout(that._updateFocusTimeoutID);\r\n        that._updateFocusTimeoutID = setTimeout((function() {\r\n            delete that._updateFocusTimeoutID;\r\n            if (!that._isFocusOverlay) {\r\n                that._updateFocusCore()\r\n            }\r\n            that._isFocusOverlay = false\r\n        }))\r\n    },\r\n    _updateFocusOverlaySize: function($element, position) {\r\n        $element.hide();\r\n        var location = positionUtils.calculate($element, extend({\r\n            collision: \"fit\"\r\n        }, position));\r\n        if (location.h.oversize > 0) {\r\n            setOuterWidth($element, getOuterWidth($element) - location.h.oversize)\r\n        }\r\n        if (location.v.oversize > 0) {\r\n            setOuterHeight($element, getOuterHeight($element) - location.v.oversize)\r\n        }\r\n        $element.show()\r\n    },\r\n    callbackNames: function() {\r\n        return [\"focused\"]\r\n    },\r\n    focus: function($element, hideBorder) {\r\n        var that = this;\r\n        if (void 0 === $element) {\r\n            return that._$focusedElement\r\n        } else if ($element) {\r\n            if (!$element.is(that._$focusedElement)) {\r\n                that._$focusedElement && that._$focusedElement.removeClass(FOCUSED_ELEMENT_CLASS)\r\n            }\r\n            that._$focusedElement = $element;\r\n            clearTimeout(that._focusTimeoutID);\r\n            that._focusTimeoutID = setTimeout((function() {\r\n                delete that._focusTimeoutID;\r\n                that.renderFocusOverlay($element, hideBorder);\r\n                $element.addClass(FOCUSED_ELEMENT_CLASS);\r\n                that.focused.fire($element)\r\n            }))\r\n        }\r\n    },\r\n    refocus: function() {\r\n        var $focus = this.focus();\r\n        this.focus($focus)\r\n    },\r\n    renderFocusOverlay: function($element, hideBorder) {\r\n        if (!gridCoreUtils.isElementInCurrentGrid(this, $element)) {\r\n            return\r\n        }\r\n        if (!this._$focusOverlay) {\r\n            this._$focusOverlay = $(\"<div>\").addClass(this.addWidgetPrefix(FOCUS_OVERLAY_CLASS))\r\n        }\r\n        if (hideBorder) {\r\n            this._$focusOverlay.addClass(DX_HIDDEN)\r\n        } else if ($element.length) {\r\n            var align = browser.mozilla ? \"right bottom\" : \"left top\";\r\n            var $content = $element.closest(\".\" + this.addWidgetPrefix(CONTENT_CLASS));\r\n            var elemCoord = getBoundingRect($element.get(0));\r\n            this._$focusOverlay.removeClass(DX_HIDDEN).appendTo($content);\r\n            setOuterHeight(this._$focusOverlay, elemCoord.bottom - elemCoord.top + 1);\r\n            setOuterWidth(this._$focusOverlay, elemCoord.right - elemCoord.left + 1);\r\n            var focusOverlayPosition = {\r\n                precise: true,\r\n                my: align,\r\n                at: align,\r\n                of: $element,\r\n                boundary: $content.length && $content\r\n            };\r\n            this._updateFocusOverlaySize(this._$focusOverlay, focusOverlayPosition);\r\n            positionUtils.setup(this._$focusOverlay, focusOverlayPosition);\r\n            this._$focusOverlay.css(\"visibility\", \"visible\")\r\n        }\r\n    },\r\n    resize: function() {\r\n        var $focusedElement = this._$focusedElement;\r\n        if ($focusedElement) {\r\n            this.focus($focusedElement)\r\n        }\r\n    },\r\n    loseFocus: function() {\r\n        this._$focusedElement && this._$focusedElement.removeClass(FOCUSED_ELEMENT_CLASS);\r\n        this._$focusedElement = null;\r\n        this._$focusOverlay && this._$focusOverlay.addClass(DX_HIDDEN)\r\n    },\r\n    init: function() {\r\n        this.createAction(\"onEditorPreparing\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        this.createAction(\"onEditorPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        this._updateFocusHandler = this._updateFocusHandler || this.createAction(this._updateFocus.bind(this));\r\n        eventsEngine.on(domAdapter.getDocument(), UPDATE_FOCUS_EVENTS, this._updateFocusHandler);\r\n        this._attachContainerEventHandlers()\r\n    },\r\n    _attachContainerEventHandlers: function() {\r\n        var that = this;\r\n        var $container = that.component && that.component.$element();\r\n        if ($container) {\r\n            eventsEngine.on($container, addNamespace(\"keydown\", MODULE_NAMESPACE), (function(e) {\r\n                if (\"tab\" === normalizeKeyName(e)) {\r\n                    that._updateFocusHandler(e)\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    dispose: function() {\r\n        clearTimeout(this._focusTimeoutID);\r\n        clearTimeout(this._updateFocusTimeoutID);\r\n        eventsEngine.off(domAdapter.getDocument(), UPDATE_FOCUS_EVENTS, this._updateFocusHandler)\r\n    }\r\n}).include(EditorFactoryMixin);\r\nexport var editorFactoryModule = {\r\n    defaultOptions: function() {\r\n        return {}\r\n    },\r\n    controllers: {\r\n        editorFactory: EditorFactory\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editor_factory.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    editorFactoryModule\r\n} from \"../grid_core/ui.grid_core.editor_factory\";\r\ngridCore.registerModule(\"editorFactory\", editorFactoryModule);\r\n","/**\r\n * DevExtreme (esm/ui/dialog.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight,\r\n    getWidth\r\n} from \"../core/utils/size\";\r\nimport $ from \"../core/renderer\";\r\nimport {\r\n    Component\r\n} from \"../core/component\";\r\nimport Action from \"../core/action\";\r\nimport devices from \"../core/devices\";\r\nimport config from \"../core/config\";\r\nimport {\r\n    resetActiveElement\r\n} from \"../core/utils/dom\";\r\nimport {\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nimport {\r\n    isPlainObject\r\n} from \"../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    getWindow\r\n} from \"../core/utils/window\";\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport {\r\n    value as getViewport\r\n} from \"../core/utils/view_port\";\r\nimport messageLocalization from \"../localization/message\";\r\nimport errors from \"./widget/ui.errors\";\r\nimport Popup from \"./popup\";\r\nimport {\r\n    ensureDefined\r\n} from \"../core/utils/common\";\r\nvar window = getWindow();\r\nvar DEFAULT_BUTTON = {\r\n    text: \"OK\",\r\n    onClick: function() {\r\n        return true\r\n    }\r\n};\r\nvar DX_DIALOG_CLASSNAME = \"dx-dialog\";\r\nvar DX_DIALOG_WRAPPER_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-wrapper\");\r\nvar DX_DIALOG_ROOT_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-root\");\r\nvar DX_DIALOG_CONTENT_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-content\");\r\nvar DX_DIALOG_MESSAGE_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-message\");\r\nvar DX_DIALOG_BUTTONS_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-buttons\");\r\nvar DX_DIALOG_BUTTON_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-button\");\r\nvar DX_BUTTON_CLASSNAME = \"dx-button\";\r\nexport var FakeDialogComponent = Component.inherit({\r\n    ctor: function(element, options) {\r\n        this.callBase(options)\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                width: 276\r\n            }\r\n        }])\r\n    }\r\n});\r\nexport var custom = function(options) {\r\n    var _options$title;\r\n    var deferred = new Deferred;\r\n    var defaultOptions = (new FakeDialogComponent).option();\r\n    options = extend(defaultOptions, options);\r\n    var $element = $(\"<div>\").addClass(DX_DIALOG_CLASSNAME).appendTo(getViewport());\r\n    var isMessageDefined = \"message\" in options;\r\n    var isMessageHtmlDefined = \"messageHtml\" in options;\r\n    if (isMessageDefined) {\r\n        errors.log(\"W1013\")\r\n    }\r\n    var messageHtml = String(isMessageHtmlDefined ? options.messageHtml : options.message);\r\n    var $message = $(\"<div>\").addClass(DX_DIALOG_MESSAGE_CLASSNAME).html(messageHtml);\r\n    var popupToolbarItems = [];\r\n    each(options.buttons || [DEFAULT_BUTTON], (function() {\r\n        var action = new Action(this.onClick, {\r\n            context: popupInstance\r\n        });\r\n        popupToolbarItems.push({\r\n            toolbar: \"bottom\",\r\n            location: devices.current().android ? \"after\" : \"center\",\r\n            widget: \"dxButton\",\r\n            options: extend({}, this, {\r\n                onClick: function() {\r\n                    var result = action.execute(...arguments);\r\n                    hide(result)\r\n                }\r\n            })\r\n        })\r\n    }));\r\n    var popupInstance = new Popup($element, extend({\r\n        title: null !== (_options$title = options.title) && void 0 !== _options$title ? _options$title : \"\",\r\n        showTitle: ensureDefined(options.showTitle, true),\r\n        dragEnabled: ensureDefined(options.dragEnabled, true),\r\n        height: \"auto\",\r\n        width: options.width,\r\n        showCloseButton: options.showCloseButton || false,\r\n        ignoreChildEvents: false,\r\n        onContentReady: function(args) {\r\n            args.component.$content().addClass(DX_DIALOG_CONTENT_CLASSNAME).append($message)\r\n        },\r\n        onShowing: function(e) {\r\n            e.component.bottomToolbar().addClass(DX_DIALOG_BUTTONS_CLASSNAME).find(\".\".concat(DX_BUTTON_CLASSNAME)).addClass(DX_DIALOG_BUTTON_CLASSNAME);\r\n            resetActiveElement()\r\n        },\r\n        onShown: function(e) {\r\n            var $firstButton = e.component.bottomToolbar().find(\".\".concat(DX_BUTTON_CLASSNAME)).first();\r\n            eventsEngine.trigger($firstButton, \"focus\")\r\n        },\r\n        onHiding: function() {\r\n            deferred.reject()\r\n        },\r\n        toolbarItems: popupToolbarItems,\r\n        animation: {\r\n            show: {\r\n                type: \"pop\",\r\n                duration: 400\r\n            },\r\n            hide: {\r\n                type: \"pop\",\r\n                duration: 400,\r\n                to: {\r\n                    opacity: 0,\r\n                    scale: 0\r\n                },\r\n                from: {\r\n                    opacity: 1,\r\n                    scale: 1\r\n                }\r\n            }\r\n        },\r\n        rtlEnabled: config().rtlEnabled,\r\n        position: {\r\n            boundaryOffset: {\r\n                h: 10,\r\n                v: 0\r\n            }\r\n        }\r\n    }, options.popupOptions));\r\n    popupInstance.$wrapper().addClass(DX_DIALOG_WRAPPER_CLASSNAME);\r\n    if (options.position) {\r\n        popupInstance.option(\"position\", options.position)\r\n    }\r\n    popupInstance.$wrapper().addClass(DX_DIALOG_ROOT_CLASSNAME);\r\n\r\n    function hide(value) {\r\n        deferred.resolve(value);\r\n        popupInstance.hide().done((function() {\r\n            popupInstance.$element().remove()\r\n        }))\r\n    }\r\n    return {\r\n        show: function() {\r\n            if (\"android\" === devices.real().platform) {\r\n                var isPortrait = getHeight(window) > getWidth(window);\r\n                var width = isPortrait ? \"80%\" : \"60%\";\r\n                popupInstance.option({\r\n                    width: width\r\n                })\r\n            }\r\n            popupInstance.show();\r\n            return deferred.promise()\r\n        },\r\n        hide: hide\r\n    }\r\n};\r\nexport var alert = function(messageHtml) {\r\n    var title = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"\";\r\n    var showTitle = arguments.length > 2 ? arguments[2] : void 0;\r\n    var options = isPlainObject(messageHtml) ? messageHtml : {\r\n        title: title,\r\n        messageHtml: messageHtml,\r\n        showTitle: showTitle,\r\n        dragEnabled: showTitle\r\n    };\r\n    return custom(options).show()\r\n};\r\nexport var confirm = function(messageHtml) {\r\n    var title = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"\";\r\n    var showTitle = arguments.length > 2 ? arguments[2] : void 0;\r\n    var options = isPlainObject(messageHtml) ? messageHtml : {\r\n        title: title,\r\n        messageHtml: messageHtml,\r\n        showTitle: showTitle,\r\n        buttons: [{\r\n            text: messageLocalization.format(\"Yes\"),\r\n            onClick: function() {\r\n                return true\r\n            }\r\n        }, {\r\n            text: messageLocalization.format(\"No\"),\r\n            onClick: function() {\r\n                return false\r\n            }\r\n        }],\r\n        dragEnabled: showTitle\r\n    };\r\n    return custom(options).show()\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing_constants.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport var EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nexport var ROW_CLASS = \"dx-row\";\r\nexport var CELL_MODIFIED_CLASS = \"dx-cell-modified\";\r\nexport var ROW_SELECTED_CLASS = \"dx-selection\";\r\nexport var EDIT_FORM_CLASS = \"edit-form\";\r\nexport var DATA_EDIT_DATA_INSERT_TYPE = \"insert\";\r\nexport var DATA_EDIT_DATA_REMOVE_TYPE = \"remove\";\r\nexport var EDITING_POPUP_OPTION_NAME = \"editing.popup\";\r\nexport var EDITING_FORM_OPTION_NAME = \"editing.form\";\r\nexport var EDITING_EDITROWKEY_OPTION_NAME = \"editing.editRowKey\";\r\nexport var EDITING_EDITCOLUMNNAME_OPTION_NAME = \"editing.editColumnName\";\r\nexport var TARGET_COMPONENT_NAME = \"targetComponent\";\r\nexport var EDITORS_INPUT_SELECTOR = \"input:not([type='hidden'])\";\r\nexport var FOCUSABLE_ELEMENT_SELECTOR = \"[tabindex], \" + EDITORS_INPUT_SELECTOR;\r\nexport var EDIT_MODE_BATCH = \"batch\";\r\nexport var EDIT_MODE_ROW = \"row\";\r\nexport var EDIT_MODE_CELL = \"cell\";\r\nexport var EDIT_MODE_FORM = \"form\";\r\nexport var EDIT_MODE_POPUP = \"popup\";\r\nexport var FIRST_NEW_ROW_POSITION = \"first\";\r\nexport var LAST_NEW_ROW_POSITION = \"last\";\r\nexport var PAGE_BOTTOM_NEW_ROW_POSITION = \"pageBottom\";\r\nexport var PAGE_TOP_NEW_ROW_POSITION = \"pageTop\";\r\nexport var VIEWPORT_BOTTOM_NEW_ROW_POSITION = \"viewportBottom\";\r\nexport var VIEWPORT_TOP_NEW_ROW_POSITION = \"viewportTop\";\r\nexport var EDIT_MODES = [EDIT_MODE_BATCH, EDIT_MODE_ROW, EDIT_MODE_CELL, EDIT_MODE_FORM, EDIT_MODE_POPUP];\r\nexport var ROW_BASED_MODES = [EDIT_MODE_ROW, EDIT_MODE_FORM, EDIT_MODE_POPUP];\r\nexport var MODES_WITH_DELAYED_FOCUS = [EDIT_MODE_ROW, EDIT_MODE_FORM];\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Guid from \"../../core/guid\";\r\nimport {\r\n    resetActiveElement\r\n} from \"../../core/utils/dom\";\r\nimport {\r\n    isDefined,\r\n    isObject,\r\n    isFunction,\r\n    isEmptyObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    createObjectWithChanges\r\n} from \"../../data/array_utils\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    confirm\r\n} from \"../dialog\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport devices from \"../../core/devices\";\r\nimport {\r\n    when,\r\n    Deferred,\r\n    fromPromise\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    equalByValue,\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport * as iconUtils from \"../../core/utils/icon\";\r\nimport {\r\n    EDITOR_CELL_CLASS,\r\n    ROW_CLASS,\r\n    EDIT_FORM_CLASS,\r\n    DATA_EDIT_DATA_INSERT_TYPE,\r\n    DATA_EDIT_DATA_REMOVE_TYPE,\r\n    EDITING_POPUP_OPTION_NAME,\r\n    EDITING_EDITROWKEY_OPTION_NAME,\r\n    EDITING_EDITCOLUMNNAME_OPTION_NAME,\r\n    TARGET_COMPONENT_NAME,\r\n    EDITORS_INPUT_SELECTOR,\r\n    FOCUSABLE_ELEMENT_SELECTOR,\r\n    EDIT_MODE_ROW,\r\n    EDIT_MODES,\r\n    ROW_BASED_MODES,\r\n    FIRST_NEW_ROW_POSITION,\r\n    LAST_NEW_ROW_POSITION,\r\n    PAGE_BOTTOM_NEW_ROW_POSITION,\r\n    PAGE_TOP_NEW_ROW_POSITION,\r\n    VIEWPORT_BOTTOM_NEW_ROW_POSITION,\r\n    VIEWPORT_TOP_NEW_ROW_POSITION\r\n} from \"./ui.grid_core.editing_constants\";\r\nvar READONLY_CLASS = \"readonly\";\r\nvar LINK_CLASS = \"dx-link\";\r\nvar ROW_SELECTED = \"dx-selection\";\r\nvar EDIT_BUTTON_CLASS = \"dx-edit-button\";\r\nvar COMMAND_EDIT_CLASS = \"dx-command-edit\";\r\nvar COMMAND_EDIT_WITH_ICONS_CLASS = COMMAND_EDIT_CLASS + \"-with-icons\";\r\nvar INSERT_INDEX = \"__DX_INSERT_INDEX__\";\r\nvar ROW_INSERTED = \"dx-row-inserted\";\r\nvar ROW_MODIFIED = \"dx-row-modified\";\r\nvar CELL_MODIFIED = \"dx-cell-modified\";\r\nvar EDITING_NAMESPACE = \"dxDataGridEditing\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar DATA_EDIT_DATA_UPDATE_TYPE = \"update\";\r\nvar DEFAULT_START_EDIT_ACTION = \"click\";\r\nvar EDIT_LINK_CLASS = {\r\n    save: \"dx-link-save\",\r\n    cancel: \"dx-link-cancel\",\r\n    edit: \"dx-link-edit\",\r\n    undelete: \"dx-link-undelete\",\r\n    delete: \"dx-link-delete\",\r\n    add: \"dx-link-add\"\r\n};\r\nvar EDIT_ICON_CLASS = {\r\n    save: \"save\",\r\n    cancel: \"revert\",\r\n    edit: \"edit\",\r\n    undelete: \"revert\",\r\n    delete: \"trash\",\r\n    add: \"add\"\r\n};\r\nvar METHOD_NAMES = {\r\n    edit: \"editRow\",\r\n    delete: \"deleteRow\",\r\n    undelete: \"undeleteRow\",\r\n    save: \"saveEditData\",\r\n    cancel: \"cancelEditData\",\r\n    add: \"addRowByRowIndex\"\r\n};\r\nvar ACTION_OPTION_NAMES = {\r\n    add: \"allowAdding\",\r\n    edit: \"allowUpdating\",\r\n    delete: \"allowDeleting\"\r\n};\r\nvar BUTTON_NAMES = [\"edit\", \"save\", \"cancel\", \"delete\", \"undelete\"];\r\nvar EDITING_CHANGES_OPTION_NAME = \"editing.changes\";\r\nvar createFailureHandler = function(deferred) {\r\n    return function(arg) {\r\n        var error = arg instanceof Error ? arg : new Error(arg && String(arg) || \"Unknown error\");\r\n        deferred.reject(error)\r\n    }\r\n};\r\nvar isEditingCell = function(isEditRow, cellOptions) {\r\n    return cellOptions.isEditing || isEditRow && cellOptions.column.allowEditing\r\n};\r\nvar isEditingOrShowEditorAlwaysDataCell = function(isEditRow, cellOptions) {\r\n    var isCommandCell = !!cellOptions.column.command;\r\n    var isEditing = isEditingCell(isEditRow, cellOptions);\r\n    var isEditorCell = !isCommandCell && (isEditing || cellOptions.column.showEditorAlways);\r\n    return \"data\" === cellOptions.rowType && isEditorCell\r\n};\r\nvar EditingController = modules.ViewController.inherit(function() {\r\n    var getButtonIndex = (buttons, name) => {\r\n        var result = -1;\r\n        buttons.some((button, index) => {\r\n            if (getButtonName(button) === name) {\r\n                result = index;\r\n                return true\r\n            }\r\n        });\r\n        return result\r\n    };\r\n\r\n    function getButtonName(button) {\r\n        return isObject(button) ? button.name : button\r\n    }\r\n    return {\r\n        init: function() {\r\n            this._columnsController = this.getController(\"columns\");\r\n            this._dataController = this.getController(\"data\");\r\n            this._rowsView = this.getView(\"rowsView\");\r\n            this._lastOperation = null;\r\n            if (this._deferreds) {\r\n                this._deferreds.forEach(d => d.reject(\"cancel\"))\r\n            }\r\n            this._deferreds = [];\r\n            if (!this._dataChangedHandler) {\r\n                this._dataChangedHandler = this._handleDataChanged.bind(this);\r\n                this._dataController.changed.add(this._dataChangedHandler)\r\n            }\r\n            if (!this._saveEditorHandler) {\r\n                this.createAction(\"onInitNewRow\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowInserting\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowInserted\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onEditingStart\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowUpdating\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowUpdated\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowRemoving\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowRemoved\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onSaved\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onSaving\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onEditCanceling\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onEditCanceled\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                })\r\n            }\r\n            this._updateEditColumn();\r\n            this._updateEditButtons();\r\n            if (!this._internalState) {\r\n                this._internalState = []\r\n            }\r\n            this.component._optionsByReference[EDITING_EDITROWKEY_OPTION_NAME] = true;\r\n            this.component._optionsByReference[EDITING_CHANGES_OPTION_NAME] = true\r\n        },\r\n        getEditMode: function() {\r\n            var editMode = this.option(\"editing.mode\");\r\n            if (-1 !== EDIT_MODES.indexOf(editMode)) {\r\n                return editMode\r\n            }\r\n            return EDIT_MODE_ROW\r\n        },\r\n        _getDefaultEditorTemplate: function() {\r\n            return (container, options) => {\r\n                var $editor = $(\"<div>\").appendTo(container);\r\n                this.getController(\"editorFactory\").createEditor($editor, extend({}, options.column, {\r\n                    value: options.value,\r\n                    setValue: options.setValue,\r\n                    row: options.row,\r\n                    parentType: \"dataRow\",\r\n                    width: null,\r\n                    readOnly: !options.setValue,\r\n                    isOnForm: options.isOnForm,\r\n                    id: options.id\r\n                }))\r\n            }\r\n        },\r\n        _getNewRowPosition: function() {\r\n            var newRowPosition = this.option(\"editing.newRowPosition\");\r\n            var scrollingMode = this.option(\"scrolling.mode\");\r\n            if (\"virtual\" === scrollingMode) {\r\n                switch (newRowPosition) {\r\n                    case PAGE_TOP_NEW_ROW_POSITION:\r\n                        return VIEWPORT_TOP_NEW_ROW_POSITION;\r\n                    case PAGE_BOTTOM_NEW_ROW_POSITION:\r\n                        return VIEWPORT_BOTTOM_NEW_ROW_POSITION;\r\n                    default:\r\n                        return newRowPosition\r\n                }\r\n            }\r\n            return newRowPosition\r\n        },\r\n        getChanges: function() {\r\n            return this.option(EDITING_CHANGES_OPTION_NAME)\r\n        },\r\n        getInsertRowCount: function() {\r\n            var changes = this.option(EDITING_CHANGES_OPTION_NAME);\r\n            return changes.filter(change => \"insert\" === change.type).length\r\n        },\r\n        resetChanges: function() {\r\n            var changes = this.getChanges();\r\n            var needReset = null === changes || void 0 === changes ? void 0 : changes.length;\r\n            if (needReset) {\r\n                this._silentOption(EDITING_CHANGES_OPTION_NAME, [])\r\n            }\r\n        },\r\n        _getInternalData: function(key) {\r\n            return this._internalState.filter(item => equalByValue(item.key, key))[0]\r\n        },\r\n        _addInternalData: function(params) {\r\n            var internalData = this._getInternalData(params.key);\r\n            if (internalData) {\r\n                return extend(internalData, params)\r\n            }\r\n            this._internalState.push(params);\r\n            return params\r\n        },\r\n        _getOldData: function(key) {\r\n            var _this$_getInternalDat;\r\n            return null === (_this$_getInternalDat = this._getInternalData(key)) || void 0 === _this$_getInternalDat ? void 0 : _this$_getInternalDat.oldData\r\n        },\r\n        getUpdatedData: function(data) {\r\n            var key = this._dataController.keyOf(data);\r\n            var changes = this.getChanges();\r\n            var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n            if (changes[editIndex]) {\r\n                return createObjectWithChanges(data, changes[editIndex].data)\r\n            }\r\n            return data\r\n        },\r\n        getInsertedData: function() {\r\n            return this.getChanges().filter(change => change.data && change.type === DATA_EDIT_DATA_INSERT_TYPE).map(change => change.data)\r\n        },\r\n        getRemovedData: function() {\r\n            return this.getChanges().filter(change => this._getOldData(change.key) && change.type === DATA_EDIT_DATA_REMOVE_TYPE).map(change => this._getOldData(change.key))\r\n        },\r\n        _fireDataErrorOccurred: function(arg) {\r\n            if (\"cancel\" === arg) {\r\n                return\r\n            }\r\n            var $popupContent = this.getPopupContent();\r\n            this._dataController.dataErrorOccurred.fire(arg, $popupContent)\r\n        },\r\n        _needToCloseEditableCell: noop,\r\n        _closeEditItem: noop,\r\n        _handleDataChanged: noop,\r\n        _isDefaultButtonVisible: function(button, options) {\r\n            var result = true;\r\n            switch (button.name) {\r\n                case \"delete\":\r\n                    result = this.allowDeleting(options);\r\n                    break;\r\n                case \"undelete\":\r\n                    result = false\r\n            }\r\n            return result\r\n        },\r\n        _isButtonVisible: function(button, options) {\r\n            var visible = button.visible;\r\n            if (!isDefined(visible)) {\r\n                return this._isDefaultButtonVisible(button, options)\r\n            }\r\n            return isFunction(visible) ? visible.call(button, {\r\n                component: options.component,\r\n                row: options.row,\r\n                column: options.column\r\n            }) : visible\r\n        },\r\n        _isButtonDisabled: function(button, options) {\r\n            var disabled = button.disabled;\r\n            return isFunction(disabled) ? disabled.call(button, {\r\n                component: options.component,\r\n                row: options.row,\r\n                column: options.column\r\n            }) : !!disabled\r\n        },\r\n        _getButtonConfig: function(button, options) {\r\n            var config = isObject(button) ? button : {};\r\n            var buttonName = getButtonName(button);\r\n            var editingTexts = (options => {\r\n                var editingTexts = options.component.option(\"editing.texts\") || {};\r\n                return {\r\n                    save: editingTexts.saveRowChanges,\r\n                    cancel: editingTexts.cancelRowChanges,\r\n                    edit: editingTexts.editRow,\r\n                    undelete: editingTexts.undeleteRow,\r\n                    delete: editingTexts.deleteRow,\r\n                    add: editingTexts.addRowToNode\r\n                }\r\n            })(options);\r\n            var methodName = METHOD_NAMES[buttonName];\r\n            var editingOptions = this.option(\"editing\");\r\n            var actionName = ACTION_OPTION_NAMES[buttonName];\r\n            var allowAction = actionName ? editingOptions[actionName] : true;\r\n            return extend({\r\n                name: buttonName,\r\n                text: editingTexts[buttonName],\r\n                cssClass: EDIT_LINK_CLASS[buttonName]\r\n            }, {\r\n                onClick: methodName && (e => {\r\n                    var event = e.event;\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    setTimeout(() => {\r\n                        options.row && allowAction && this[methodName] && this[methodName](options.row.rowIndex)\r\n                    })\r\n                })\r\n            }, config)\r\n        },\r\n        _getEditingButtons: function(options) {\r\n            var buttonIndex;\r\n            var haveCustomButtons = !!options.column.buttons;\r\n            var buttons = (options.column.buttons || []).slice();\r\n            if (haveCustomButtons) {\r\n                buttonIndex = getButtonIndex(buttons, \"edit\");\r\n                if (buttonIndex >= 0) {\r\n                    if (getButtonIndex(buttons, \"save\") < 0) {\r\n                        buttons.splice(buttonIndex + 1, 0, \"save\")\r\n                    }\r\n                    if (getButtonIndex(buttons, \"cancel\") < 0) {\r\n                        buttons.splice(getButtonIndex(buttons, \"save\") + 1, 0, \"cancel\")\r\n                    }\r\n                }\r\n                buttonIndex = getButtonIndex(buttons, \"delete\");\r\n                if (buttonIndex >= 0 && getButtonIndex(buttons, \"undelete\") < 0) {\r\n                    buttons.splice(buttonIndex + 1, 0, \"undelete\")\r\n                }\r\n            } else {\r\n                buttons = BUTTON_NAMES.slice()\r\n            }\r\n            return buttons.map(button => this._getButtonConfig(button, options))\r\n        },\r\n        _renderEditingButtons: function($container, buttons, options, change) {\r\n            buttons.forEach(button => {\r\n                if (this._isButtonVisible(button, options)) {\r\n                    this._createButton($container, button, options, change)\r\n                }\r\n            })\r\n        },\r\n        _getEditCommandCellTemplate: function() {\r\n            return (container, options, change) => {\r\n                var $container = $(container);\r\n                if (\"data\" === options.rowType) {\r\n                    var buttons = this._getEditingButtons(options);\r\n                    this._renderEditingButtons($container, buttons, options, change);\r\n                    options.watch && options.watch(() => buttons.map(button => this._isButtonVisible(button, options)), () => {\r\n                        $container.empty();\r\n                        this._renderEditingButtons($container, buttons, options)\r\n                    })\r\n                } else {\r\n                    gridCoreUtils.setEmptyText($container)\r\n                }\r\n            }\r\n        },\r\n        isRowBasedEditMode: function() {\r\n            var editMode = this.getEditMode();\r\n            return -1 !== ROW_BASED_MODES.indexOf(editMode)\r\n        },\r\n        getFirstEditableColumnIndex: function() {\r\n            var columnsController = this.getController(\"columns\");\r\n            var columnIndex;\r\n            var visibleColumns = columnsController.getVisibleColumns();\r\n            each(visibleColumns, (function(index, column) {\r\n                if (column.allowEditing) {\r\n                    columnIndex = index;\r\n                    return false\r\n                }\r\n            }));\r\n            return columnIndex\r\n        },\r\n        getFirstEditableCellInRow: function(rowIndex) {\r\n            var rowsView = this.getView(\"rowsView\");\r\n            return rowsView && rowsView._getCellElement(rowIndex ? rowIndex : 0, this.getFirstEditableColumnIndex())\r\n        },\r\n        getFocusedCellInRow: function(rowIndex) {\r\n            return this.getFirstEditableCellInRow(rowIndex)\r\n        },\r\n        getIndexByKey: function(key, items) {\r\n            return gridCoreUtils.getIndexByKey(key, items)\r\n        },\r\n        hasChanges: function(rowIndex) {\r\n            var changes = this.getChanges();\r\n            var result = false;\r\n            for (var i = 0; i < (null === changes || void 0 === changes ? void 0 : changes.length); i++) {\r\n                if (changes[i].type && (!isDefined(rowIndex) || this._dataController.getRowIndexByKey(changes[i].key) === rowIndex)) {\r\n                    result = true;\r\n                    break\r\n                }\r\n            }\r\n            return result\r\n        },\r\n        dispose: function() {\r\n            this.callBase();\r\n            clearTimeout(this._inputFocusTimeoutID);\r\n            eventsEngine.off(domAdapter.getDocument(), pointerEvents.up, this._pointerUpEditorHandler);\r\n            eventsEngine.off(domAdapter.getDocument(), pointerEvents.down, this._pointerDownEditorHandler);\r\n            eventsEngine.off(domAdapter.getDocument(), clickEventName, this._saveEditorHandler)\r\n        },\r\n        optionChanged: function(args) {\r\n            if (\"editing\" === args.name) {\r\n                var fullName = args.fullName;\r\n                if (fullName === EDITING_EDITROWKEY_OPTION_NAME) {\r\n                    this._handleEditRowKeyChange(args)\r\n                } else if (fullName === EDITING_CHANGES_OPTION_NAME) {\r\n                    this._handleChangesChange(args)\r\n                } else if (!args.handled) {\r\n                    this._columnsController.reinit();\r\n                    this.init();\r\n                    this.resetChanges();\r\n                    this._resetEditColumnName();\r\n                    this._resetEditRowKey()\r\n                }\r\n                args.handled = true\r\n            } else {\r\n                this.callBase(args)\r\n            }\r\n        },\r\n        _handleEditRowKeyChange: function(args) {\r\n            var rowIndex = this._dataController.getRowIndexByKey(args.value);\r\n            var oldRowIndexCorrection = this._getEditRowIndexCorrection();\r\n            var oldRowIndex = this._dataController.getRowIndexByKey(args.previousValue) + oldRowIndexCorrection;\r\n            if (isDefined(args.value)) {\r\n                if (args.value !== args.previousValue) {\r\n                    this._editRowFromOptionChanged(rowIndex, oldRowIndex)\r\n                }\r\n            } else {\r\n                this.cancelEditData()\r\n            }\r\n        },\r\n        _handleChangesChange: function(args) {\r\n            var dataController = this._dataController;\r\n            if (!args.value.length && !args.previousValue.length) {\r\n                return\r\n            }\r\n            this._processInsertChanges(args.value);\r\n            dataController.updateItems({\r\n                repaintChangesOnly: true\r\n            })\r\n        },\r\n        _processInsertChanges: function(changes) {\r\n            changes.forEach(change => {\r\n                if (\"insert\" === change.type) {\r\n                    this._addInsertInfo(change)\r\n                }\r\n            })\r\n        },\r\n        publicMethods: function() {\r\n            return [\"addRow\", \"deleteRow\", \"undeleteRow\", \"editRow\", \"saveEditData\", \"cancelEditData\", \"hasEditData\"]\r\n        },\r\n        refresh: function(isPageChanged) {\r\n            if (!isDefined(this._pageIndex)) {\r\n                return\r\n            }\r\n            this._refreshCore(isPageChanged)\r\n        },\r\n        _refreshCore: noop,\r\n        isEditing: function() {\r\n            var isEditRowKeyDefined = isDefined(this.option(EDITING_EDITROWKEY_OPTION_NAME));\r\n            return isEditRowKeyDefined\r\n        },\r\n        isEditRow: function() {\r\n            return false\r\n        },\r\n        _setEditRowKey: function(value, silent) {\r\n            if (silent) {\r\n                this._silentOption(EDITING_EDITROWKEY_OPTION_NAME, value)\r\n            } else {\r\n                this.option(EDITING_EDITROWKEY_OPTION_NAME, value)\r\n            }\r\n        },\r\n        _setEditRowKeyByIndex: function(rowIndex, silent) {\r\n            var key = this._dataController.getKeyByRowIndex(rowIndex);\r\n            if (void 0 === key) {\r\n                this._dataController.fireError(\"E1043\");\r\n                return\r\n            }\r\n            this._setEditRowKey(key, silent)\r\n        },\r\n        getEditRowIndex: function() {\r\n            return this._getVisibleEditRowIndex()\r\n        },\r\n        getEditFormRowIndex: function() {\r\n            return -1\r\n        },\r\n        _isEditRowByIndex(rowIndex) {\r\n            var key = this._dataController.getKeyByRowIndex(rowIndex);\r\n            var isKeyEqual = isDefined(key) && equalByValue(this.option(EDITING_EDITROWKEY_OPTION_NAME), key);\r\n            if (isKeyEqual) {\r\n                return this._getVisibleEditRowIndex() === rowIndex\r\n            }\r\n            return isKeyEqual\r\n        },\r\n        isEditCell: function(visibleRowIndex, columnIndex) {\r\n            return this._isEditRowByIndex(visibleRowIndex) && this._getVisibleEditColumnIndex() === columnIndex\r\n        },\r\n        getPopupContent: noop,\r\n        _isProcessedItem: function(item) {\r\n            return false\r\n        },\r\n        _getInsertRowIndex: function(items, change, isProcessedItems) {\r\n            var result = -1;\r\n            var dataController = this._dataController;\r\n            var key = this._getInsertAfterOrBeforeKey(change);\r\n            if (!isDefined(key) && 0 === items.length) {\r\n                result = 0\r\n            } else if (isDefined(key)) {\r\n                items.some((item, index) => {\r\n                    var isProcessedItem = isProcessedItems || this._isProcessedItem(item);\r\n                    if (isObject(item)) {\r\n                        if (isProcessedItem || isDefined(item[INSERT_INDEX])) {\r\n                            if (equalByValue(item.key, key)) {\r\n                                result = index\r\n                            }\r\n                        } else if (equalByValue(dataController.keyOf(item), key)) {\r\n                            result = index\r\n                        }\r\n                    }\r\n                    if (result >= 0) {\r\n                        var nextItem = items[result + 1];\r\n                        if (nextItem && (\"detail\" === nextItem.rowType || \"detailAdaptive\" === nextItem.rowType) && isDefined(change.insertAfterKey)) {\r\n                            return\r\n                        }\r\n                        if (isDefined(change.insertAfterKey)) {\r\n                            result += 1\r\n                        }\r\n                        return true\r\n                    }\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        _generateNewItem: function(key) {\r\n            var _this$_getInternalDat2;\r\n            var item = {\r\n                key: key\r\n            };\r\n            var insertInfo = null === (_this$_getInternalDat2 = this._getInternalData(key)) || void 0 === _this$_getInternalDat2 ? void 0 : _this$_getInternalDat2.insertInfo;\r\n            if (null !== insertInfo && void 0 !== insertInfo && insertInfo[INSERT_INDEX]) {\r\n                item[INSERT_INDEX] = insertInfo[INSERT_INDEX]\r\n            }\r\n            return item\r\n        },\r\n        _getLoadedRowIndex: function(items, change, isProcessedItems) {\r\n            var loadedRowIndex = this._getInsertRowIndex(items, change, isProcessedItems);\r\n            var dataController = this._dataController;\r\n            if (loadedRowIndex < 0) {\r\n                var newRowPosition = this._getNewRowPosition();\r\n                var pageIndex = dataController.pageIndex();\r\n                var insertAfterOrBeforeKey = this._getInsertAfterOrBeforeKey(change);\r\n                if (newRowPosition !== LAST_NEW_ROW_POSITION && 0 === pageIndex && !isDefined(insertAfterOrBeforeKey)) {\r\n                    loadedRowIndex = 0\r\n                } else if (newRowPosition === LAST_NEW_ROW_POSITION && dataController.isLastPageLoaded()) {\r\n                    loadedRowIndex = items.length\r\n                }\r\n            }\r\n            return loadedRowIndex\r\n        },\r\n        processItems: function(items, e) {\r\n            var changeType = e.changeType;\r\n            this.update(changeType);\r\n            var changes = this.getChanges();\r\n            changes.forEach(change => {\r\n                var _this$_getInternalDat3;\r\n                var isInsert = change.type === DATA_EDIT_DATA_INSERT_TYPE;\r\n                if (!isInsert) {\r\n                    return\r\n                }\r\n                var key = change.key;\r\n                var insertInfo = null === (_this$_getInternalDat3 = this._getInternalData(key)) || void 0 === _this$_getInternalDat3 ? void 0 : _this$_getInternalDat3.insertInfo;\r\n                if (!isDefined(key) || !isDefined(insertInfo)) {\r\n                    insertInfo = this._addInsertInfo(change);\r\n                    key = insertInfo.key\r\n                }\r\n                var loadedRowIndex = this._getLoadedRowIndex(items, change);\r\n                var item = this._generateNewItem(key);\r\n                if (loadedRowIndex >= 0) {\r\n                    items.splice(loadedRowIndex, 0, item)\r\n                }\r\n            });\r\n            return items\r\n        },\r\n        processDataItem: function(item, options, generateDataValues) {\r\n            var columns = options.visibleColumns;\r\n            var key = item.data[INSERT_INDEX] ? item.data.key : item.key;\r\n            var changes = this.getChanges();\r\n            var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n            item.isEditing = false;\r\n            if (editIndex >= 0) {\r\n                this._processDataItemCore(item, changes[editIndex], key, columns, generateDataValues)\r\n            }\r\n        },\r\n        _processDataItemCore: function(item, change, key, columns, generateDataValues) {\r\n            var {\r\n                data: data,\r\n                type: type\r\n            } = change;\r\n            switch (type) {\r\n                case DATA_EDIT_DATA_INSERT_TYPE:\r\n                    item.isNewRow = true;\r\n                    item.key = key;\r\n                    item.data = data;\r\n                    break;\r\n                case DATA_EDIT_DATA_UPDATE_TYPE:\r\n                    item.modified = true;\r\n                    item.oldData = item.data;\r\n                    item.data = createObjectWithChanges(item.data, data);\r\n                    item.modifiedValues = generateDataValues(data, columns, true);\r\n                    break;\r\n                case DATA_EDIT_DATA_REMOVE_TYPE:\r\n                    item.removed = true\r\n            }\r\n        },\r\n        _initNewRow: function(options) {\r\n            this.executeAction(\"onInitNewRow\", options);\r\n            if (options.promise) {\r\n                var deferred = new Deferred;\r\n                when(fromPromise(options.promise)).done(deferred.resolve).fail(createFailureHandler(deferred)).fail(arg => this._fireDataErrorOccurred(arg));\r\n                return deferred\r\n            }\r\n        },\r\n        _createInsertInfo: function() {\r\n            var insertInfo = {};\r\n            insertInfo[INSERT_INDEX] = this._getInsertIndex();\r\n            return insertInfo\r\n        },\r\n        _addInsertInfo: function(change, parentKey) {\r\n            var _this$_getInternalDat4;\r\n            var insertInfo;\r\n            var {\r\n                key: key\r\n            } = change;\r\n            if (!isDefined(key)) {\r\n                key = String(new Guid);\r\n                change.key = key\r\n            }\r\n            insertInfo = null === (_this$_getInternalDat4 = this._getInternalData(key)) || void 0 === _this$_getInternalDat4 ? void 0 : _this$_getInternalDat4.insertInfo;\r\n            if (!isDefined(insertInfo)) {\r\n                var insertAfterOrBeforeKey = this._getInsertAfterOrBeforeKey(change);\r\n                insertInfo = this._createInsertInfo();\r\n                if (!isDefined(insertAfterOrBeforeKey)) {\r\n                    this._setInsertAfterOrBeforeKey(change, parentKey)\r\n                }\r\n            }\r\n            this._addInternalData({\r\n                insertInfo: insertInfo,\r\n                key: key\r\n            });\r\n            return {\r\n                insertInfo: insertInfo,\r\n                key: key\r\n            }\r\n        },\r\n        _setInsertAfterOrBeforeKey: function(change, parentKey) {\r\n            var dataController = this._dataController;\r\n            var allItems = dataController.items(true);\r\n            var rowsView = this.getView(\"rowsView\");\r\n            var newRowPosition = this._getNewRowPosition();\r\n            switch (newRowPosition) {\r\n                case FIRST_NEW_ROW_POSITION:\r\n                case LAST_NEW_ROW_POSITION:\r\n                    break;\r\n                case PAGE_TOP_NEW_ROW_POSITION:\r\n                case PAGE_BOTTOM_NEW_ROW_POSITION:\r\n                    if (allItems.length) {\r\n                        var itemIndex = newRowPosition === PAGE_TOP_NEW_ROW_POSITION ? 0 : allItems.length - 1;\r\n                        change[0 === itemIndex ? \"insertBeforeKey\" : \"insertAfterKey\"] = allItems[itemIndex].key\r\n                    }\r\n                    break;\r\n                default:\r\n                    var isViewportBottom = newRowPosition === VIEWPORT_BOTTOM_NEW_ROW_POSITION;\r\n                    var visibleItemIndex = isViewportBottom ? null === rowsView || void 0 === rowsView ? void 0 : rowsView.getBottomVisibleItemIndex() : null === rowsView || void 0 === rowsView ? void 0 : rowsView.getTopVisibleItemIndex();\r\n                    var row = dataController.getVisibleRows()[visibleItemIndex];\r\n                    if (row && (!row.isEditing && \"detail\" === row.rowType || \"detailAdaptive\" === row.rowType)) {\r\n                        visibleItemIndex++\r\n                    }\r\n                    var insertKey = dataController.getKeyByRowIndex(visibleItemIndex);\r\n                    if (isDefined(insertKey)) {\r\n                        change.insertBeforeKey = insertKey\r\n                    }\r\n            }\r\n        },\r\n        _getInsertIndex: function() {\r\n            var maxInsertIndex = 0;\r\n            this.getChanges().forEach(editItem => {\r\n                var _this$_getInternalDat5;\r\n                var insertInfo = null === (_this$_getInternalDat5 = this._getInternalData(editItem.key)) || void 0 === _this$_getInternalDat5 ? void 0 : _this$_getInternalDat5.insertInfo;\r\n                if (isDefined(insertInfo) && editItem.type === DATA_EDIT_DATA_INSERT_TYPE && insertInfo[INSERT_INDEX] > maxInsertIndex) {\r\n                    maxInsertIndex = insertInfo[INSERT_INDEX]\r\n                }\r\n            });\r\n            return maxInsertIndex + 1\r\n        },\r\n        _getInsertAfterOrBeforeKey: function(insertChange) {\r\n            var _insertChange$insertA;\r\n            return null !== (_insertChange$insertA = insertChange.insertAfterKey) && void 0 !== _insertChange$insertA ? _insertChange$insertA : insertChange.insertBeforeKey\r\n        },\r\n        _getPageIndexToInsertRow: function() {\r\n            var newRowPosition = this._getNewRowPosition();\r\n            var dataController = this._dataController;\r\n            var pageIndex = dataController.pageIndex();\r\n            var lastPageIndex = dataController.pageCount() - 1;\r\n            if (newRowPosition === FIRST_NEW_ROW_POSITION && 0 !== pageIndex) {\r\n                return 0\r\n            } else if (newRowPosition === LAST_NEW_ROW_POSITION && pageIndex !== lastPageIndex) {\r\n                return lastPageIndex\r\n            }\r\n            return -1\r\n        },\r\n        addRow: function(parentKey) {\r\n            var dataController = this._dataController;\r\n            var store = dataController.store();\r\n            if (!store) {\r\n                dataController.fireError(\"E1052\", this.component.NAME);\r\n                return (new Deferred).reject()\r\n            }\r\n            return this._addRow(parentKey)\r\n        },\r\n        _addRow: function(parentKey) {\r\n            var dataController = this._dataController;\r\n            var store = dataController.store();\r\n            var key = store && store.key();\r\n            var param = {\r\n                data: {}\r\n            };\r\n            var oldEditRowIndex = this._getVisibleEditRowIndex();\r\n            var deferred = new Deferred;\r\n            this.refresh();\r\n            if (!this._allowRowAdding()) {\r\n                when(this._navigateToNewRow(oldEditRowIndex)).done(deferred.resolve).fail(deferred.reject);\r\n                return deferred.promise()\r\n            }\r\n            if (!key) {\r\n                param.data.__KEY__ = String(new Guid)\r\n            }\r\n            when(this._initNewRow(param, parentKey)).done(() => {\r\n                if (this._allowRowAdding()) {\r\n                    when(this._addRowCore(param.data, parentKey, oldEditRowIndex)).done(deferred.resolve).fail(deferred.reject)\r\n                } else {\r\n                    deferred.reject(\"cancel\")\r\n                }\r\n            }).fail(deferred.reject);\r\n            return deferred.promise()\r\n        },\r\n        _allowRowAdding: function() {\r\n            var insertIndex = this._getInsertIndex();\r\n            if (insertIndex > 1) {\r\n                return false\r\n            }\r\n            return true\r\n        },\r\n        _addRowCore: function(data, parentKey, initialOldEditRowIndex) {\r\n            var change = {\r\n                data: data,\r\n                type: DATA_EDIT_DATA_INSERT_TYPE\r\n            };\r\n            var editRowIndex = this._getVisibleEditRowIndex();\r\n            var insertInfo = this._addInsertInfo(change, parentKey);\r\n            var key = insertInfo.key;\r\n            this._setEditRowKey(key, true);\r\n            this._addChange(change);\r\n            return this._navigateToNewRow(initialOldEditRowIndex, change, editRowIndex)\r\n        },\r\n        _navigateToNewRow: function(oldEditRowIndex, change, editRowIndex) {\r\n            var _editRowIndex, _change;\r\n            var d = new Deferred;\r\n            var dataController = this._dataController;\r\n            var focusController = this.getController(\"focus\");\r\n            editRowIndex = null !== (_editRowIndex = editRowIndex) && void 0 !== _editRowIndex ? _editRowIndex : -1;\r\n            change = null !== (_change = change) && void 0 !== _change ? _change : this.getChanges().filter(c => c.type === DATA_EDIT_DATA_INSERT_TYPE)[0];\r\n            if (!change) {\r\n                return d.reject(\"cancel\").promise()\r\n            }\r\n            var pageIndexToInsertRow = this._getPageIndexToInsertRow();\r\n            var rowIndex = this._getLoadedRowIndex(dataController.items(), change, true);\r\n            var navigateToRowByKey = key => {\r\n                when(null === focusController || void 0 === focusController ? void 0 : focusController.navigateToRow(key)).done(() => {\r\n                    rowIndex = dataController.getRowIndexByKey(change.key);\r\n                    d.resolve()\r\n                })\r\n            };\r\n            var insertAfterOrBeforeKey = this._getInsertAfterOrBeforeKey(change);\r\n            if (pageIndexToInsertRow >= 0) {\r\n                dataController.pageIndex(pageIndexToInsertRow).done(() => {\r\n                    navigateToRowByKey(change.key)\r\n                }).fail(d.reject)\r\n            } else if (rowIndex < 0 && isDefined(insertAfterOrBeforeKey)) {\r\n                navigateToRowByKey(insertAfterOrBeforeKey)\r\n            } else {\r\n                dataController.updateItems({\r\n                    changeType: \"update\",\r\n                    rowIndices: [oldEditRowIndex, editRowIndex, rowIndex]\r\n                });\r\n                rowIndex = dataController.getRowIndexByKey(change.key);\r\n                if (rowIndex < 0) {\r\n                    navigateToRowByKey(change.key)\r\n                } else {\r\n                    d.resolve()\r\n                }\r\n            }\r\n            d.done(() => {\r\n                this._showAddedRow(rowIndex);\r\n                this._afterInsertRow(change.key)\r\n            });\r\n            return d.promise()\r\n        },\r\n        _showAddedRow: function(rowIndex) {\r\n            this._focusFirstEditableCellInRow(rowIndex)\r\n        },\r\n        _beforeFocusElementInRow: noop,\r\n        _focusFirstEditableCellInRow: function(rowIndex) {\r\n            var dataController = this._dataController;\r\n            var key = dataController.getKeyByRowIndex(rowIndex);\r\n            var $firstCell = this.getFirstEditableCellInRow(rowIndex);\r\n            this._editCellInProgress = true;\r\n            this._delayedInputFocus($firstCell, () => {\r\n                rowIndex = dataController.getRowIndexByKey(key);\r\n                this._editCellInProgress = false;\r\n                this._beforeFocusElementInRow(rowIndex)\r\n            })\r\n        },\r\n        _isEditingStart: function(options) {\r\n            this.executeAction(\"onEditingStart\", options);\r\n            return options.cancel\r\n        },\r\n        _beforeUpdateItems: noop,\r\n        _getVisibleEditColumnIndex: function() {\r\n            var editColumnName = this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME);\r\n            if (!isDefined(editColumnName)) {\r\n                return -1\r\n            }\r\n            return this._columnsController.getVisibleColumnIndex(editColumnName)\r\n        },\r\n        _setEditColumnNameByIndex: function(index, silent) {\r\n            var _visibleColumns$index;\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            this._setEditColumnName(null === (_visibleColumns$index = visibleColumns[index]) || void 0 === _visibleColumns$index ? void 0 : _visibleColumns$index.name, silent)\r\n        },\r\n        _setEditColumnName: function(name, silent) {\r\n            if (silent) {\r\n                this._silentOption(EDITING_EDITCOLUMNNAME_OPTION_NAME, name)\r\n            } else {\r\n                this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME, name)\r\n            }\r\n        },\r\n        _resetEditColumnName: function() {\r\n            this._setEditColumnName(null, true)\r\n        },\r\n        _getEditColumn: function() {\r\n            var editColumnName = this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME);\r\n            return this._getColumnByName(editColumnName)\r\n        },\r\n        _getColumnByName: function(name) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var editColumn;\r\n            isDefined(name) && visibleColumns.some(column => {\r\n                if (column.name === name) {\r\n                    editColumn = column;\r\n                    return true\r\n                }\r\n            });\r\n            return editColumn\r\n        },\r\n        _getVisibleEditRowIndex: function(columnName) {\r\n            var dataController = this._dataController;\r\n            var editRowKey = this.option(EDITING_EDITROWKEY_OPTION_NAME);\r\n            var rowIndex = dataController.getRowIndexByKey(editRowKey);\r\n            if (-1 === rowIndex) {\r\n                return rowIndex\r\n            }\r\n            return rowIndex + this._getEditRowIndexCorrection(columnName)\r\n        },\r\n        _getEditRowIndexCorrection: function(columnName) {\r\n            var editColumn = columnName ? this._getColumnByName(columnName) : this._getEditColumn();\r\n            var isColumnHidden = \"adaptiveHidden\" === (null === editColumn || void 0 === editColumn ? void 0 : editColumn.visibleWidth);\r\n            return isColumnHidden ? 1 : 0\r\n        },\r\n        _resetEditRowKey: function() {\r\n            this._setEditRowKey(null, true)\r\n        },\r\n        _resetEditIndices: function() {\r\n            this._resetEditColumnName();\r\n            this._resetEditRowKey()\r\n        },\r\n        editRow: function(rowIndex) {\r\n            var _item$oldData;\r\n            var dataController = this._dataController;\r\n            var items = dataController.items();\r\n            var item = items[rowIndex];\r\n            var params = {\r\n                data: item && item.data,\r\n                cancel: false\r\n            };\r\n            var oldRowIndex = this._getVisibleEditRowIndex();\r\n            if (!item) {\r\n                return\r\n            }\r\n            if (rowIndex === oldRowIndex) {\r\n                return true\r\n            }\r\n            if (void 0 === item.key) {\r\n                this._dataController.fireError(\"E1043\");\r\n                return\r\n            }\r\n            if (!item.isNewRow) {\r\n                params.key = item.key\r\n            }\r\n            if (this._isEditingStart(params)) {\r\n                return\r\n            }\r\n            this.resetChanges();\r\n            this.init();\r\n            this._resetEditColumnName();\r\n            this._pageIndex = dataController.pageIndex();\r\n            this._addInternalData({\r\n                key: item.key,\r\n                oldData: null !== (_item$oldData = item.oldData) && void 0 !== _item$oldData ? _item$oldData : item.data\r\n            });\r\n            this._setEditRowKey(item.key)\r\n        },\r\n        _editRowFromOptionChanged: function(rowIndex, oldRowIndex) {\r\n            var rowIndices = [oldRowIndex, rowIndex];\r\n            this._beforeUpdateItems(rowIndices, rowIndex, oldRowIndex);\r\n            this._editRowFromOptionChangedCore(rowIndices, rowIndex, oldRowIndex)\r\n        },\r\n        _editRowFromOptionChangedCore: function(rowIndices, rowIndex, oldRowIndex) {\r\n            this._needFocusEditor = true;\r\n            this._dataController.updateItems({\r\n                changeType: \"update\",\r\n                rowIndices: rowIndices\r\n            })\r\n        },\r\n        _focusEditorIfNeed: noop,\r\n        _showEditPopup: noop,\r\n        _repaintEditPopup: noop,\r\n        _getEditPopupHiddenHandler: function() {\r\n            return e => {\r\n                if (this.isEditing()) {\r\n                    this.cancelEditData()\r\n                }\r\n            }\r\n        },\r\n        _getPopupEditFormTemplate: noop,\r\n        _getSaveButtonConfig: function() {\r\n            return {\r\n                text: this.option(\"editing.texts.saveRowChanges\"),\r\n                onClick: this.saveEditData.bind(this)\r\n            }\r\n        },\r\n        _getCancelButtonConfig: function() {\r\n            return {\r\n                text: this.option(\"editing.texts.cancelRowChanges\"),\r\n                onClick: this.cancelEditData.bind(this)\r\n            }\r\n        },\r\n        _removeInternalData: function(key) {\r\n            var internalData = this._getInternalData(key);\r\n            var index = this._internalState.indexOf(internalData);\r\n            if (index > -1) {\r\n                this._internalState.splice(index, 1)\r\n            }\r\n        },\r\n        _updateInsertAfterOrBeforeKeys: function(changes, index) {\r\n            var removeChange = changes[index];\r\n            changes.forEach(change => {\r\n                var insertAfterOrBeforeKey = this._getInsertAfterOrBeforeKey(change);\r\n                if (equalByValue(insertAfterOrBeforeKey, removeChange.key)) {\r\n                    change[isDefined(change.insertAfterKey) ? \"insertAfterKey\" : \"insertBeforeKey\"] = this._getInsertAfterOrBeforeKey(removeChange)\r\n                }\r\n            })\r\n        },\r\n        _removeChange: function(index) {\r\n            if (index >= 0) {\r\n                var changes = [...this.getChanges()];\r\n                var key = changes[index].key;\r\n                this._removeInternalData(key);\r\n                this._updateInsertAfterOrBeforeKeys(changes, index);\r\n                changes.splice(index, 1);\r\n                this._silentOption(EDITING_CHANGES_OPTION_NAME, changes);\r\n                if (equalByValue(this.option(EDITING_EDITROWKEY_OPTION_NAME), key)) {\r\n                    this._resetEditIndices()\r\n                }\r\n            }\r\n        },\r\n        executeOperation: function(deferred, func) {\r\n            this._lastOperation && this._lastOperation.reject();\r\n            this._lastOperation = deferred;\r\n            this.waitForDeferredOperations().done(() => {\r\n                if (\"rejected\" === deferred.state()) {\r\n                    return\r\n                }\r\n                func();\r\n                this._lastOperation = null\r\n            }).fail(() => {\r\n                deferred.reject();\r\n                this._lastOperation = null\r\n            })\r\n        },\r\n        waitForDeferredOperations: function() {\r\n            return when(...this._deferreds)\r\n        },\r\n        _processCanceledEditingCell: noop,\r\n        _repaintEditCell: function(column, oldColumn, oldEditRowIndex) {\r\n            this._needFocusEditor = true;\r\n            if (!column || !column.showEditorAlways || oldColumn && !oldColumn.showEditorAlways) {\r\n                this._editCellInProgress = true;\r\n                this.getController(\"editorFactory\").loseFocus();\r\n                this._dataController.updateItems({\r\n                    changeType: \"update\",\r\n                    rowIndices: [oldEditRowIndex, this._getVisibleEditRowIndex()]\r\n                })\r\n            } else if (column !== oldColumn) {\r\n                this._dataController.updateItems({\r\n                    changeType: \"update\",\r\n                    rowIndices: []\r\n                })\r\n            }\r\n        },\r\n        _delayedInputFocus: function($cell, beforeFocusCallback, callBeforeFocusCallbackAlways) {\r\n            var inputFocus = () => {\r\n                if (beforeFocusCallback) {\r\n                    beforeFocusCallback()\r\n                }\r\n                if ($cell) {\r\n                    var $focusableElement = $cell.find(FOCUSABLE_ELEMENT_SELECTOR).first();\r\n                    gridCoreUtils.focusAndSelectElement(this, $focusableElement)\r\n                }\r\n                this._beforeFocusCallback = null\r\n            };\r\n            if (devices.real().ios || devices.real().android) {\r\n                inputFocus()\r\n            } else {\r\n                if (this._beforeFocusCallback) {\r\n                    this._beforeFocusCallback()\r\n                }\r\n                clearTimeout(this._inputFocusTimeoutID);\r\n                if (callBeforeFocusCallbackAlways) {\r\n                    this._beforeFocusCallback = beforeFocusCallback\r\n                }\r\n                this._inputFocusTimeoutID = setTimeout(inputFocus)\r\n            }\r\n        },\r\n        _focusEditingCell: function(beforeFocusCallback, $editCell, callBeforeFocusCallbackAlways) {\r\n            var rowsView = this.getView(\"rowsView\");\r\n            var editColumnIndex = this._getVisibleEditColumnIndex();\r\n            $editCell = $editCell || rowsView && rowsView._getCellElement(this._getVisibleEditRowIndex(), editColumnIndex);\r\n            if ($editCell) {\r\n                this._delayedInputFocus($editCell, beforeFocusCallback, callBeforeFocusCallbackAlways)\r\n            }\r\n        },\r\n        deleteRow: function(rowIndex) {\r\n            this._checkAndDeleteRow(rowIndex)\r\n        },\r\n        _checkAndDeleteRow: function(rowIndex) {\r\n            var editingOptions = this.option(\"editing\");\r\n            var editingTexts = null === editingOptions || void 0 === editingOptions ? void 0 : editingOptions.texts;\r\n            var confirmDelete = null === editingOptions || void 0 === editingOptions ? void 0 : editingOptions.confirmDelete;\r\n            var confirmDeleteMessage = null === editingTexts || void 0 === editingTexts ? void 0 : editingTexts.confirmDeleteMessage;\r\n            var item = this._dataController.items()[rowIndex];\r\n            var allowDeleting = !this.isEditing() || item.isNewRow;\r\n            if (item && allowDeleting) {\r\n                if (!confirmDelete || !confirmDeleteMessage) {\r\n                    this._deleteRowCore(rowIndex)\r\n                } else {\r\n                    var confirmDeleteTitle = editingTexts && editingTexts.confirmDeleteTitle;\r\n                    var showDialogTitle = isDefined(confirmDeleteTitle) && confirmDeleteTitle.length > 0;\r\n                    confirm(confirmDeleteMessage, confirmDeleteTitle, showDialogTitle).done(confirmResult => {\r\n                        if (confirmResult) {\r\n                            this._deleteRowCore(rowIndex)\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        _deleteRowCore: function(rowIndex) {\r\n            var dataController = this._dataController;\r\n            var item = dataController.items()[rowIndex];\r\n            var key = item && item.key;\r\n            var oldEditRowIndex = this._getVisibleEditRowIndex();\r\n            this.refresh();\r\n            var changes = this.getChanges();\r\n            var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n            if (editIndex >= 0) {\r\n                if (changes[editIndex].type === DATA_EDIT_DATA_INSERT_TYPE) {\r\n                    this._removeChange(editIndex)\r\n                } else {\r\n                    this._addChange({\r\n                        key: key,\r\n                        type: DATA_EDIT_DATA_REMOVE_TYPE\r\n                    })\r\n                }\r\n            } else {\r\n                this._addChange({\r\n                    key: key,\r\n                    oldData: item.data,\r\n                    type: DATA_EDIT_DATA_REMOVE_TYPE\r\n                })\r\n            }\r\n            return this._afterDeleteRow(rowIndex, oldEditRowIndex)\r\n        },\r\n        _afterDeleteRow: function(rowIndex, oldEditRowIndex) {\r\n            return this.saveEditData()\r\n        },\r\n        undeleteRow: function(rowIndex) {\r\n            var dataController = this._dataController;\r\n            var item = dataController.items()[rowIndex];\r\n            var oldEditRowIndex = this._getVisibleEditRowIndex();\r\n            var key = item && item.key;\r\n            var changes = this.getChanges();\r\n            if (item) {\r\n                var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n                if (editIndex >= 0) {\r\n                    var {\r\n                        data: data\r\n                    } = changes[editIndex];\r\n                    if (isEmptyObject(data)) {\r\n                        this._removeChange(editIndex)\r\n                    } else {\r\n                        this._addChange({\r\n                            key: key,\r\n                            type: DATA_EDIT_DATA_UPDATE_TYPE\r\n                        })\r\n                    }\r\n                    dataController.updateItems({\r\n                        changeType: \"update\",\r\n                        rowIndices: [oldEditRowIndex, rowIndex]\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        _fireOnSaving: function() {\r\n            var onSavingParams = {\r\n                cancel: false,\r\n                promise: null,\r\n                changes: [...this.getChanges()]\r\n            };\r\n            this.executeAction(\"onSaving\", onSavingParams);\r\n            var d = new Deferred;\r\n            when(fromPromise(onSavingParams.promise)).done(() => {\r\n                d.resolve(onSavingParams)\r\n            }).fail(arg => {\r\n                createFailureHandler(d);\r\n                this._fireDataErrorOccurred(arg);\r\n                d.resolve({\r\n                    cancel: true\r\n                })\r\n            });\r\n            return d\r\n        },\r\n        _executeEditingAction: function(actionName, params, func) {\r\n            if (this.component._disposed) {\r\n                return null\r\n            }\r\n            var deferred = new Deferred;\r\n            this.executeAction(actionName, params);\r\n            when(fromPromise(params.cancel)).done((function(cancel) {\r\n                if (cancel) {\r\n                    setTimeout((function() {\r\n                        deferred.resolve(\"cancel\")\r\n                    }))\r\n                } else {\r\n                    func(params).done(deferred.resolve).fail(createFailureHandler(deferred))\r\n                }\r\n            })).fail(createFailureHandler(deferred));\r\n            return deferred\r\n        },\r\n        _processChanges: function(deferreds, results, dataChanges, changes) {\r\n            var store = this._dataController.store();\r\n            each(changes, (index, change) => {\r\n                var oldData = this._getOldData(change.key);\r\n                var {\r\n                    data: data,\r\n                    type: type\r\n                } = change;\r\n                var changeCopy = _extends({}, change);\r\n                var deferred;\r\n                var params;\r\n                if (this._beforeSaveEditData(change, index)) {\r\n                    return\r\n                }\r\n                switch (type) {\r\n                    case DATA_EDIT_DATA_REMOVE_TYPE:\r\n                        params = {\r\n                            data: oldData,\r\n                            key: change.key,\r\n                            cancel: false\r\n                        };\r\n                        deferred = this._executeEditingAction(\"onRowRemoving\", params, (function() {\r\n                            return store.remove(change.key).done((function(key) {\r\n                                dataChanges.push({\r\n                                    type: \"remove\",\r\n                                    key: key\r\n                                })\r\n                            }))\r\n                        }));\r\n                        break;\r\n                    case DATA_EDIT_DATA_INSERT_TYPE:\r\n                        params = {\r\n                            data: data,\r\n                            cancel: false\r\n                        };\r\n                        deferred = this._executeEditingAction(\"onRowInserting\", params, (function() {\r\n                            return store.insert(params.data).done((function(data, key) {\r\n                                if (isDefined(key)) {\r\n                                    changeCopy.key = key\r\n                                }\r\n                                if (data && isObject(data) && data !== params.data) {\r\n                                    changeCopy.data = data\r\n                                }\r\n                                dataChanges.push({\r\n                                    type: \"insert\",\r\n                                    data: data,\r\n                                    index: 0\r\n                                })\r\n                            }))\r\n                        }));\r\n                        break;\r\n                    case DATA_EDIT_DATA_UPDATE_TYPE:\r\n                        params = {\r\n                            newData: data,\r\n                            oldData: oldData,\r\n                            key: change.key,\r\n                            cancel: false\r\n                        };\r\n                        deferred = this._executeEditingAction(\"onRowUpdating\", params, (function() {\r\n                            return store.update(change.key, params.newData).done((function(data, key) {\r\n                                if (data && isObject(data) && data !== params.newData) {\r\n                                    changeCopy.data = data\r\n                                }\r\n                                dataChanges.push({\r\n                                    type: \"update\",\r\n                                    key: key,\r\n                                    data: data\r\n                                })\r\n                            }))\r\n                        }))\r\n                }\r\n                changes[index] = changeCopy;\r\n                if (deferred) {\r\n                    var doneDeferred = new Deferred;\r\n                    deferred.always((function(data) {\r\n                        results.push({\r\n                            key: change.key,\r\n                            result: data\r\n                        })\r\n                    })).always(doneDeferred.resolve);\r\n                    deferreds.push(doneDeferred.promise())\r\n                }\r\n            })\r\n        },\r\n        _processRemoveIfError: function(changes, editIndex) {\r\n            var change = changes[editIndex];\r\n            if ((null === change || void 0 === change ? void 0 : change.type) === DATA_EDIT_DATA_REMOVE_TYPE) {\r\n                if (editIndex >= 0) {\r\n                    changes.splice(editIndex, 1)\r\n                }\r\n            }\r\n            return true\r\n        },\r\n        _processRemove: function(changes, editIndex, cancel) {\r\n            var change = changes[editIndex];\r\n            if (!cancel || !change || change.type === DATA_EDIT_DATA_REMOVE_TYPE) {\r\n                return this._processRemoveCore(changes, editIndex, !cancel || !change)\r\n            }\r\n        },\r\n        _processRemoveCore: function(changes, editIndex) {\r\n            if (editIndex >= 0) {\r\n                changes.splice(editIndex, 1)\r\n            }\r\n            return true\r\n        },\r\n        _processSaveEditDataResult: function(results) {\r\n            var hasSavedData = false;\r\n            var changes = [...this.getChanges()];\r\n            var changesLength = changes.length;\r\n            for (var i = 0; i < results.length; i++) {\r\n                var arg = results[i].result;\r\n                var cancel = \"cancel\" === arg;\r\n                var editIndex = gridCoreUtils.getIndexByKey(results[i].key, changes);\r\n                var change = changes[editIndex];\r\n                var isError = arg && arg instanceof Error;\r\n                if (isError) {\r\n                    if (change) {\r\n                        this._addInternalData({\r\n                            key: change.key,\r\n                            error: arg\r\n                        })\r\n                    }\r\n                    this._fireDataErrorOccurred(arg);\r\n                    if (this._processRemoveIfError(changes, editIndex)) {\r\n                        break\r\n                    }\r\n                } else if (this._processRemove(changes, editIndex, cancel)) {\r\n                    hasSavedData = !cancel\r\n                }\r\n            }\r\n            if (changes.length < changesLength) {\r\n                this._silentOption(EDITING_CHANGES_OPTION_NAME, changes)\r\n            }\r\n            return hasSavedData\r\n        },\r\n        _fireSaveEditDataEvents: function(changes) {\r\n            each(changes, (_, _ref) => {\r\n                var {\r\n                    data: data,\r\n                    key: key,\r\n                    type: type\r\n                } = _ref;\r\n                var internalData = this._addInternalData({\r\n                    key: key\r\n                });\r\n                var params = {\r\n                    key: key,\r\n                    data: data\r\n                };\r\n                if (internalData.error) {\r\n                    params.error = internalData.error\r\n                }\r\n                switch (type) {\r\n                    case DATA_EDIT_DATA_REMOVE_TYPE:\r\n                        this.executeAction(\"onRowRemoved\", extend({}, params, {\r\n                            data: internalData.oldData\r\n                        }));\r\n                        break;\r\n                    case DATA_EDIT_DATA_INSERT_TYPE:\r\n                        this.executeAction(\"onRowInserted\", params);\r\n                        break;\r\n                    case DATA_EDIT_DATA_UPDATE_TYPE:\r\n                        this.executeAction(\"onRowUpdated\", params)\r\n                }\r\n            });\r\n            this.executeAction(\"onSaved\", {\r\n                changes: changes\r\n            })\r\n        },\r\n        saveEditData: function() {\r\n            var deferred = new Deferred;\r\n            this.waitForDeferredOperations().done(() => {\r\n                if (this.isSaving()) {\r\n                    this._resolveAfterSave(deferred);\r\n                    return\r\n                }\r\n                when(this._beforeSaveEditData()).done(cancel => {\r\n                    if (cancel) {\r\n                        this._resolveAfterSave(deferred, {\r\n                            cancel: cancel\r\n                        });\r\n                        return\r\n                    }\r\n                    this._saving = true;\r\n                    var options = {};\r\n                    this._saveEditDataInner(options).always(() => {\r\n                        this._saving = false;\r\n                        options.needFocusEditCell && this._focusEditingCell()\r\n                    }).done(deferred.resolve).fail(deferred.reject)\r\n                }).fail(deferred.reject)\r\n            }).fail(deferred.reject);\r\n            return deferred.promise()\r\n        },\r\n        _resolveAfterSave: function(deferred) {\r\n            var {\r\n                cancel: cancel,\r\n                error: error\r\n            } = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\r\n            when(this._afterSaveEditData(cancel)).done((function() {\r\n                deferred.resolve(error)\r\n            })).fail(deferred.reject)\r\n        },\r\n        _saveEditDataInner: function(options) {\r\n            var results = [];\r\n            var deferreds = [];\r\n            var dataChanges = [];\r\n            var dataController = this._dataController;\r\n            var dataSource = dataController.dataSource();\r\n            var result = new Deferred;\r\n            when(this._fireOnSaving()).done(_ref2 => {\r\n                var {\r\n                    cancel: cancel,\r\n                    changes: changes\r\n                } = _ref2;\r\n                if (cancel) {\r\n                    return result.resolve().promise()\r\n                }\r\n                this._processChanges(deferreds, results, dataChanges, changes);\r\n                if (deferreds.length) {\r\n                    null === dataSource || void 0 === dataSource ? void 0 : dataSource.beginLoading();\r\n                    when(...deferreds).done(() => {\r\n                        if (this._processSaveEditDataResult(results)) {\r\n                            this._endSaving(dataChanges, changes, result)\r\n                        } else {\r\n                            null === dataSource || void 0 === dataSource ? void 0 : dataSource.endLoading();\r\n                            result.resolve()\r\n                        }\r\n                    }).fail(error => {\r\n                        null === dataSource || void 0 === dataSource ? void 0 : dataSource.endLoading();\r\n                        result.resolve(error)\r\n                    });\r\n                    return result.always(() => {\r\n                        options.needFocusEditCell = true\r\n                    }).promise()\r\n                }\r\n                this._cancelSaving(result)\r\n            }).fail(result.reject);\r\n            return result.promise()\r\n        },\r\n        _beforeEndSaving: function(changes) {\r\n            this._resetEditIndices()\r\n        },\r\n        _endSaving: function(dataChanges, changes, deferred) {\r\n            var dataSource = this._dataController.dataSource();\r\n            this._beforeEndSaving(changes);\r\n            null === dataSource || void 0 === dataSource ? void 0 : dataSource.endLoading();\r\n            this._refreshDataAfterSave(dataChanges, changes, deferred)\r\n        },\r\n        _cancelSaving: function(result) {\r\n            this.executeAction(\"onSaved\", {\r\n                changes: []\r\n            });\r\n            this._resolveAfterSave(result)\r\n        },\r\n        _refreshDataAfterSave: function(dataChanges, changes, deferred) {\r\n            var dataController = this._dataController;\r\n            var refreshMode = this.option(\"editing.refreshMode\");\r\n            var isFullRefresh = \"reshape\" !== refreshMode && \"repaint\" !== refreshMode;\r\n            if (!isFullRefresh) {\r\n                dataController.push(dataChanges)\r\n            }\r\n            when(dataController.refresh({\r\n                selection: isFullRefresh,\r\n                reload: isFullRefresh,\r\n                load: \"reshape\" === refreshMode,\r\n                changesOnly: this.option(\"repaintChangesOnly\")\r\n            })).always(() => {\r\n                this._fireSaveEditDataEvents(changes)\r\n            }).done(() => {\r\n                this._resolveAfterSave(deferred)\r\n            }).fail(error => {\r\n                this._resolveAfterSave(deferred, {\r\n                    error: error\r\n                })\r\n            })\r\n        },\r\n        isSaving: function() {\r\n            return this._saving\r\n        },\r\n        _updateEditColumn: function() {\r\n            var isEditColumnVisible = this._isEditColumnVisible();\r\n            var useIcons = this.option(\"editing.useIcons\");\r\n            var cssClass = COMMAND_EDIT_CLASS + (useIcons ? \" \" + COMMAND_EDIT_WITH_ICONS_CLASS : \"\");\r\n            this._columnsController.addCommandColumn({\r\n                type: \"buttons\",\r\n                command: \"edit\",\r\n                visible: isEditColumnVisible,\r\n                cssClass: cssClass,\r\n                width: \"auto\",\r\n                alignment: \"center\",\r\n                cellTemplate: this._getEditCommandCellTemplate(),\r\n                fixedPosition: \"right\"\r\n            });\r\n            this._columnsController.columnOption(\"command:edit\", {\r\n                visible: isEditColumnVisible,\r\n                cssClass: cssClass\r\n            })\r\n        },\r\n        _isEditColumnVisible: function() {\r\n            var editingOptions = this.option(\"editing\");\r\n            return editingOptions.allowDeleting\r\n        },\r\n        _isEditButtonDisabled: function() {\r\n            var hasChanges = this.hasChanges();\r\n            var isEditRowDefined = isDefined(this.option(\"editing.editRowKey\"));\r\n            return !(isEditRowDefined || hasChanges)\r\n        },\r\n        _updateEditButtons: function() {\r\n            var headerPanel = this.getView(\"headerPanel\");\r\n            var isButtonDisabled = this._isEditButtonDisabled();\r\n            if (headerPanel) {\r\n                headerPanel.setToolbarItemDisabled(\"saveButton\", isButtonDisabled);\r\n                headerPanel.setToolbarItemDisabled(\"revertButton\", isButtonDisabled)\r\n            }\r\n        },\r\n        _applyModified: function($element) {\r\n            $element && $element.addClass(CELL_MODIFIED)\r\n        },\r\n        _beforeCloseEditCellInBatchMode: noop,\r\n        cancelEditData: function() {\r\n            var changes = this.getChanges();\r\n            var params = {\r\n                cancel: false,\r\n                changes: changes\r\n            };\r\n            this.executeAction(\"onEditCanceling\", params);\r\n            if (!params.cancel) {\r\n                this._cancelEditDataCore();\r\n                this.executeAction(\"onEditCanceled\", {\r\n                    changes: changes\r\n                })\r\n            }\r\n        },\r\n        _cancelEditDataCore: function() {\r\n            var rowIndex = this._getVisibleEditRowIndex();\r\n            this._beforeCancelEditData();\r\n            this.init();\r\n            this.resetChanges();\r\n            this._resetEditColumnName();\r\n            this._resetEditRowKey();\r\n            this._afterCancelEditData(rowIndex)\r\n        },\r\n        _afterCancelEditData: function(rowIndex) {\r\n            var dataController = this._dataController;\r\n            dataController.updateItems({\r\n                repaintChangesOnly: this.option(\"repaintChangesOnly\")\r\n            })\r\n        },\r\n        _hideEditPopup: noop,\r\n        hasEditData: function() {\r\n            return this.hasChanges()\r\n        },\r\n        update: function(changeType) {\r\n            var dataController = this._dataController;\r\n            if (dataController && this._pageIndex !== dataController.pageIndex()) {\r\n                if (\"refresh\" === changeType) {\r\n                    this.refresh(true)\r\n                }\r\n                this._pageIndex = dataController.pageIndex()\r\n            }\r\n            this._updateEditButtons()\r\n        },\r\n        _getRowIndicesForCascadeUpdating: function(row, skipCurrentRow) {\r\n            return skipCurrentRow ? [] : [row.rowIndex]\r\n        },\r\n        addDeferred: function(deferred) {\r\n            if (this._deferreds.indexOf(deferred) < 0) {\r\n                this._deferreds.push(deferred);\r\n                deferred.always(() => {\r\n                    var index = this._deferreds.indexOf(deferred);\r\n                    if (index >= 0) {\r\n                        this._deferreds.splice(index, 1)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        _prepareChange: function(options, value, text) {\r\n            var _options$row;\r\n            var newData = {};\r\n            var oldData = null === (_options$row = options.row) || void 0 === _options$row ? void 0 : _options$row.data;\r\n            var rowKey = options.key;\r\n            var deferred = new Deferred;\r\n            if (void 0 !== rowKey) {\r\n                options.value = value;\r\n                var setCellValueResult = fromPromise(options.column.setCellValue(newData, value, extend(true, {}, oldData), text));\r\n                setCellValueResult.done((function() {\r\n                    deferred.resolve({\r\n                        data: newData,\r\n                        key: rowKey,\r\n                        oldData: oldData,\r\n                        type: DATA_EDIT_DATA_UPDATE_TYPE\r\n                    })\r\n                })).fail(createFailureHandler(deferred)).fail(arg => this._fireDataErrorOccurred(arg));\r\n                if (isDefined(text) && options.column.displayValueMap) {\r\n                    options.column.displayValueMap[value] = text\r\n                }\r\n                this._updateRowValues(options);\r\n                this.addDeferred(deferred)\r\n            }\r\n            return deferred\r\n        },\r\n        _updateRowValues: function(options) {\r\n            if (options.values) {\r\n                var dataController = this._dataController;\r\n                var rowIndex = dataController.getRowIndexByKey(options.key);\r\n                var row = dataController.getVisibleRows()[rowIndex];\r\n                if (row) {\r\n                    options.values = row.values\r\n                }\r\n                options.values[options.columnIndex] = options.value\r\n            }\r\n        },\r\n        updateFieldValue: function(options, value, text, forceUpdateRow) {\r\n            var rowKey = options.key;\r\n            var deferred = new Deferred;\r\n            if (void 0 === rowKey) {\r\n                this._dataController.fireError(\"E1043\")\r\n            }\r\n            if (options.column.setCellValue) {\r\n                this._prepareChange(options, value, text).done(params => {\r\n                    when(this._applyChange(options, params, forceUpdateRow)).always(() => {\r\n                        deferred.resolve()\r\n                    })\r\n                })\r\n            } else {\r\n                deferred.resolve()\r\n            }\r\n            return deferred.promise()\r\n        },\r\n        _focusPreviousEditingCellIfNeed: function(options) {\r\n            if (this.hasEditData() && !this.isEditCell(options.rowIndex, options.columnIndex)) {\r\n                this._focusEditingCell();\r\n                this._updateEditRow(options.row, true);\r\n                return true\r\n            }\r\n        },\r\n        _needUpdateRow: function(column) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            if (!column) {\r\n                column = this._getEditColumn()\r\n            }\r\n            var isCustomSetCellValue = column && column.setCellValue !== column.defaultSetCellValue;\r\n            var isCustomCalculateCellValue = visibleColumns.some(visibleColumn => visibleColumn.calculateCellValue !== visibleColumn.defaultCalculateCellValue);\r\n            return isCustomSetCellValue || isCustomCalculateCellValue\r\n        },\r\n        _applyChange: function(options, params, forceUpdateRow) {\r\n            var changeOptions = _extends({}, options, {\r\n                forceUpdateRow: forceUpdateRow\r\n            });\r\n            this._addChange(params, changeOptions);\r\n            this._updateEditButtons();\r\n            return this._applyChangeCore(options, changeOptions.forceUpdateRow)\r\n        },\r\n        _applyChangeCore: function(options, forceUpdateRow) {\r\n            var isCustomSetCellValue = options.column.setCellValue !== options.column.defaultSetCellValue;\r\n            var row = options.row;\r\n            if (row) {\r\n                if (forceUpdateRow || isCustomSetCellValue) {\r\n                    this._updateEditRow(row, forceUpdateRow, isCustomSetCellValue)\r\n                } else if (row.update) {\r\n                    row.update()\r\n                }\r\n            }\r\n        },\r\n        _updateEditRowCore: function(row, skipCurrentRow, isCustomSetCellValue) {\r\n            this._dataController.updateItems({\r\n                changeType: \"update\",\r\n                rowIndices: this._getRowIndicesForCascadeUpdating(row, skipCurrentRow)\r\n            })\r\n        },\r\n        _updateEditRow: function(row, forceUpdateRow, isCustomSetCellValue) {\r\n            if (forceUpdateRow) {\r\n                this._updateRowImmediately(row, forceUpdateRow, isCustomSetCellValue)\r\n            } else {\r\n                this._updateRowWithDelay(row, isCustomSetCellValue)\r\n            }\r\n        },\r\n        _updateRowImmediately: function(row, forceUpdateRow, isCustomSetCellValue) {\r\n            this._updateEditRowCore(row, !forceUpdateRow, isCustomSetCellValue);\r\n            this._validateEditFormAfterUpdate(row, isCustomSetCellValue);\r\n            if (!forceUpdateRow) {\r\n                this._focusEditingCell()\r\n            }\r\n        },\r\n        _updateRowWithDelay: function(row, isCustomSetCellValue) {\r\n            var deferred = new Deferred;\r\n            this.addDeferred(deferred);\r\n            setTimeout(() => {\r\n                var $focusedElement = $(domAdapter.getActiveElement());\r\n                var columnIndex = this._rowsView.getCellIndex($focusedElement, row.rowIndex);\r\n                var focusedElement = $focusedElement.get(0);\r\n                var selectionRange = gridCoreUtils.getSelectionRange(focusedElement);\r\n                this._updateEditRowCore(row, false, isCustomSetCellValue);\r\n                this._validateEditFormAfterUpdate(row, isCustomSetCellValue);\r\n                if (columnIndex >= 0) {\r\n                    var $focusedItem = this._rowsView._getCellElement(row.rowIndex, columnIndex);\r\n                    this._delayedInputFocus($focusedItem, () => {\r\n                        setTimeout(() => {\r\n                            focusedElement = domAdapter.getActiveElement();\r\n                            if (selectionRange.selectionStart >= 0) {\r\n                                gridCoreUtils.setSelectionRange(focusedElement, selectionRange)\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n                deferred.resolve()\r\n            })\r\n        },\r\n        _validateEditFormAfterUpdate: noop,\r\n        _addChange: function(changeParams, options) {\r\n            var _this$getChanges;\r\n            var row = null === options || void 0 === options ? void 0 : options.row;\r\n            var changes = [...this.getChanges()];\r\n            var index = gridCoreUtils.getIndexByKey(changeParams.key, changes);\r\n            if (index < 0) {\r\n                index = changes.length;\r\n                this._addInternalData({\r\n                    key: changeParams.key,\r\n                    oldData: changeParams.oldData\r\n                });\r\n                delete changeParams.oldData;\r\n                changes.push(changeParams)\r\n            }\r\n            var change = _extends({}, changes[index]);\r\n            if (change) {\r\n                if (changeParams.data) {\r\n                    change.data = createObjectWithChanges(change.data, changeParams.data)\r\n                }\r\n                if ((!change.type || !changeParams.data) && changeParams.type) {\r\n                    change.type = changeParams.type\r\n                }\r\n                if (row) {\r\n                    row.oldData = this._getOldData(row.key);\r\n                    row.data = createObjectWithChanges(row.data, changeParams.data)\r\n                }\r\n            }\r\n            changes[index] = change;\r\n            this._silentOption(EDITING_CHANGES_OPTION_NAME, changes);\r\n            if (options && change !== (null === (_this$getChanges = this.getChanges()) || void 0 === _this$getChanges ? void 0 : _this$getChanges[index])) {\r\n                options.forceUpdateRow = true\r\n            }\r\n            return change\r\n        },\r\n        _getFormEditItemTemplate: function(cellOptions, column) {\r\n            return column.editCellTemplate || this._getDefaultEditorTemplate()\r\n        },\r\n        getColumnTemplate: function(options) {\r\n            var column = options.column;\r\n            var rowIndex = options.row && options.row.rowIndex;\r\n            var template;\r\n            var isRowMode = this.isRowBasedEditMode();\r\n            var isRowEditing = this.isEditRow(rowIndex);\r\n            var isCellEditing = this.isEditCell(rowIndex, options.columnIndex);\r\n            var editingStartOptions;\r\n            if ((column.showEditorAlways || column.setCellValue && (isRowEditing && column.allowEditing || isCellEditing)) && (\"data\" === options.rowType || \"detailAdaptive\" === options.rowType) && !column.command) {\r\n                var allowUpdating = this.allowUpdating(options);\r\n                if (((allowUpdating || isRowEditing) && column.allowEditing || isCellEditing) && (isRowEditing || !isRowMode)) {\r\n                    if (column.showEditorAlways && !isRowMode) {\r\n                        editingStartOptions = {\r\n                            cancel: false,\r\n                            key: options.row.isNewRow ? void 0 : options.row.key,\r\n                            data: options.row.data,\r\n                            column: column\r\n                        };\r\n                        this._isEditingStart(editingStartOptions)\r\n                    }\r\n                    if (!editingStartOptions || !editingStartOptions.cancel) {\r\n                        options.setValue = (value, text) => {\r\n                            this.updateFieldValue(options, value, text)\r\n                        }\r\n                    }\r\n                }\r\n                template = column.editCellTemplate || this._getDefaultEditorTemplate()\r\n            } else if (\"detail\" === column.command && \"detail\" === options.rowType && isRowEditing) {\r\n                template = null === this || void 0 === this ? void 0 : this.getEditFormTemplate(options)\r\n            }\r\n            return template\r\n        },\r\n        _createButton: function($container, button, options, change) {\r\n            var icon = EDIT_ICON_CLASS[button.name];\r\n            var useIcons = this.option(\"editing.useIcons\");\r\n            var useLegacyColumnButtonTemplate = this.option(\"useLegacyColumnButtonTemplate\");\r\n            var $button = $(\"<a>\").attr(\"href\", \"#\").addClass(LINK_CLASS).addClass(button.cssClass);\r\n            if (button.template && useLegacyColumnButtonTemplate) {\r\n                this._rowsView.renderTemplate($container, button.template, options, true)\r\n            } else {\r\n                if (button.template) {\r\n                    $button = $(\"<span>\").addClass(button.cssClass)\r\n                } else if (useIcons && icon || button.icon) {\r\n                    icon = button.icon || icon;\r\n                    var iconType = iconUtils.getImageSourceType(icon);\r\n                    if (\"image\" === iconType || \"svg\" === iconType) {\r\n                        $button = iconUtils.getImageContainer(icon).addClass(button.cssClass)\r\n                    } else {\r\n                        $button.addClass(\"dx-icon\" + (\"dxIcon\" === iconType ? \"-\" : \" \") + icon).attr(\"title\", button.text)\r\n                    }\r\n                    $button.addClass(\"dx-link-icon\");\r\n                    $container.addClass(COMMAND_EDIT_WITH_ICONS_CLASS);\r\n                    var localizationName = this.getButtonLocalizationNames()[button.name];\r\n                    localizationName && $button.attr(\"aria-label\", messageLocalization.format(localizationName))\r\n                } else {\r\n                    $button.text(button.text)\r\n                }\r\n                if (isDefined(button.hint)) {\r\n                    $button.attr(\"title\", button.hint)\r\n                }\r\n                if (this._isButtonDisabled(button, options)) {\r\n                    $button.addClass(\"dx-state-disabled\")\r\n                } else if (!button.template || button.onClick) {\r\n                    eventsEngine.on($button, addNamespace(\"click\", EDITING_NAMESPACE), this.createAction((function(e) {\r\n                        var _button$onClick;\r\n                        null === (_button$onClick = button.onClick) || void 0 === _button$onClick ? void 0 : _button$onClick.call(button, extend({}, e, {\r\n                            row: options.row,\r\n                            column: options.column\r\n                        }));\r\n                        e.event.preventDefault();\r\n                        e.event.stopPropagation()\r\n                    })))\r\n                }\r\n                $container.append($button, \"&nbsp;\");\r\n                if (button.template) {\r\n                    this._rowsView.renderTemplate($button, button.template, options, true, change)\r\n                }\r\n            }\r\n        },\r\n        getButtonLocalizationNames: () => ({\r\n            edit: \"dxDataGrid-editingEditRow\",\r\n            save: \"dxDataGrid-editingSaveRowChanges\",\r\n            delete: \"dxDataGrid-editingDeleteRow\",\r\n            undelete: \"dxDataGrid-editingUndeleteRow\",\r\n            cancel: \"dxDataGrid-editingCancelRowChanges\"\r\n        }),\r\n        prepareButtonItem: function(headerPanel, name, methodName, sortIndex) {\r\n            var editingTexts = this.option(\"editing.texts\") || {};\r\n            var titleButtonTextByClassNames = {\r\n                revert: editingTexts.cancelAllChanges,\r\n                save: editingTexts.saveAllChanges,\r\n                addRow: editingTexts.addRow\r\n            };\r\n            var className = {\r\n                revert: \"cancel\",\r\n                save: \"save\",\r\n                addRow: \"addrow\"\r\n            } [name];\r\n            var hintText = titleButtonTextByClassNames[name];\r\n            var isButtonDisabled = (\"save\" === className || \"cancel\" === className) && this._isEditButtonDisabled();\r\n            return {\r\n                widget: \"dxButton\",\r\n                options: {\r\n                    onInitialized: e => {\r\n                        $(e.element).addClass(headerPanel._getToolbarButtonClass(EDIT_BUTTON_CLASS + \" \" + this.addWidgetPrefix(className) + \"-button\"))\r\n                    },\r\n                    icon: \"edit-button-\" + className,\r\n                    disabled: isButtonDisabled,\r\n                    onClick: () => {\r\n                        setTimeout(() => {\r\n                            this[methodName]()\r\n                        })\r\n                    },\r\n                    text: hintText,\r\n                    hint: hintText\r\n                },\r\n                showText: \"inMenu\",\r\n                name: name + \"Button\",\r\n                location: \"after\",\r\n                locateInMenu: \"auto\",\r\n                sortIndex: sortIndex\r\n            }\r\n        },\r\n        prepareEditButtons: function(headerPanel) {\r\n            var editingOptions = this.option(\"editing\") || {};\r\n            var buttonItems = [];\r\n            if (editingOptions.allowAdding) {\r\n                buttonItems.push(this.prepareButtonItem(headerPanel, \"addRow\", \"addRow\", 20))\r\n            }\r\n            return buttonItems\r\n        },\r\n        highlightDataCell: function($cell, parameters) {\r\n            var cellModified = this.isCellModified(parameters);\r\n            var shouldHighlight = cellModified && parameters.column.setCellValue && (this.getEditMode() !== EDIT_MODE_ROW || !parameters.row.isEditing);\r\n            shouldHighlight && $cell.addClass(CELL_MODIFIED)\r\n        },\r\n        _afterInsertRow: noop,\r\n        _beforeSaveEditData: function(change) {\r\n            if (change && !isDefined(change.key) && isDefined(change.type)) {\r\n                return true\r\n            }\r\n        },\r\n        _afterSaveEditData: noop,\r\n        _beforeCancelEditData: noop,\r\n        _allowEditAction: function(actionName, options) {\r\n            var allowEditAction = this.option(\"editing.\" + actionName);\r\n            if (isFunction(allowEditAction)) {\r\n                allowEditAction = allowEditAction({\r\n                    component: this.component,\r\n                    row: options.row\r\n                })\r\n            }\r\n            return allowEditAction\r\n        },\r\n        allowUpdating: function(options, eventName) {\r\n            var startEditAction = this.option(\"editing.startEditAction\") || DEFAULT_START_EDIT_ACTION;\r\n            var needCallback = arguments.length > 1 ? startEditAction === eventName || \"down\" === eventName : true;\r\n            return needCallback && this._allowEditAction(\"allowUpdating\", options)\r\n        },\r\n        allowDeleting: function(options) {\r\n            return this._allowEditAction(\"allowDeleting\", options)\r\n        },\r\n        isCellModified: function(parameters) {\r\n            var columnIndex = parameters.columnIndex;\r\n            var modifiedValues = parameters.row && (parameters.row.isNewRow ? parameters.row.values : parameters.row.modifiedValues);\r\n            return !!modifiedValues && void 0 !== modifiedValues[columnIndex]\r\n        },\r\n        isNewRowInEditMode: function() {\r\n            var visibleEditRowIndex = this._getVisibleEditRowIndex();\r\n            var rows = this._dataController.items();\r\n            return visibleEditRowIndex >= 0 ? rows[visibleEditRowIndex].isNewRow : false\r\n        }\r\n    }\r\n}());\r\nexport var editingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            editing: {\r\n                mode: \"row\",\r\n                refreshMode: \"full\",\r\n                newRowPosition: VIEWPORT_TOP_NEW_ROW_POSITION,\r\n                allowAdding: false,\r\n                allowUpdating: false,\r\n                allowDeleting: false,\r\n                useIcons: false,\r\n                selectTextOnEditStart: false,\r\n                confirmDelete: true,\r\n                texts: {\r\n                    editRow: messageLocalization.format(\"dxDataGrid-editingEditRow\"),\r\n                    saveAllChanges: messageLocalization.format(\"dxDataGrid-editingSaveAllChanges\"),\r\n                    saveRowChanges: messageLocalization.format(\"dxDataGrid-editingSaveRowChanges\"),\r\n                    cancelAllChanges: messageLocalization.format(\"dxDataGrid-editingCancelAllChanges\"),\r\n                    cancelRowChanges: messageLocalization.format(\"dxDataGrid-editingCancelRowChanges\"),\r\n                    addRow: messageLocalization.format(\"dxDataGrid-editingAddRow\"),\r\n                    deleteRow: messageLocalization.format(\"dxDataGrid-editingDeleteRow\"),\r\n                    undeleteRow: messageLocalization.format(\"dxDataGrid-editingUndeleteRow\"),\r\n                    confirmDeleteMessage: messageLocalization.format(\"dxDataGrid-editingConfirmDeleteMessage\"),\r\n                    confirmDeleteTitle: \"\"\r\n                },\r\n                form: {\r\n                    colCount: 2\r\n                },\r\n                popup: {},\r\n                startEditAction: \"click\",\r\n                editRowKey: null,\r\n                editColumnName: null,\r\n                changes: []\r\n            },\r\n            useLegacyColumnButtonTemplate: false\r\n        }\r\n    },\r\n    controllers: {\r\n        editing: EditingController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                init: function() {\r\n                    this._editingController = this.getController(\"editing\");\r\n                    this.callBase()\r\n                },\r\n                reload: function(full, repaintChangesOnly) {\r\n                    !repaintChangesOnly && this._editingController.refresh();\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                repaintRows: function() {\r\n                    if (this.getController(\"editing\").isSaving()) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _updateEditRow: function(items) {\r\n                    var editRowKey = this.option(EDITING_EDITROWKEY_OPTION_NAME);\r\n                    var editRowIndex = gridCoreUtils.getIndexByKey(editRowKey, items);\r\n                    var editItem = items[editRowIndex];\r\n                    if (editItem) {\r\n                        var _this$_updateEditItem;\r\n                        editItem.isEditing = true;\r\n                        null === (_this$_updateEditItem = this._updateEditItem) || void 0 === _this$_updateEditItem ? void 0 : _this$_updateEditItem.call(this, editItem)\r\n                    }\r\n                },\r\n                _updateItemsCore: function(change) {\r\n                    this.callBase(change);\r\n                    this._updateEditRow(this.items(true))\r\n                },\r\n                _applyChangeUpdate: function(change) {\r\n                    this._updateEditRow(change.items);\r\n                    this.callBase(change)\r\n                },\r\n                _applyChangesOnly: function(change) {\r\n                    this._updateEditRow(change.items);\r\n                    this.callBase(change)\r\n                },\r\n                _processItems: function(items, change) {\r\n                    items = this._editingController.processItems(items, change);\r\n                    return this.callBase(items, change)\r\n                },\r\n                _processDataItem: function(dataItem, options) {\r\n                    this._editingController.processDataItem(dataItem, options, this.generateDataValues);\r\n                    return this.callBase(dataItem, options)\r\n                },\r\n                _processItem: function(item, options) {\r\n                    item = this.callBase(item, options);\r\n                    if (item.isNewRow) {\r\n                        options.dataIndex--;\r\n                        delete item.dataIndex\r\n                    }\r\n                    return item\r\n                },\r\n                _getChangedColumnIndices: function(oldItem, newItem, rowIndex, isLiveUpdate) {\r\n                    if (oldItem.isNewRow !== newItem.isNewRow || oldItem.removed !== newItem.removed) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _isCellChanged: function(oldRow, newRow, visibleRowIndex, columnIndex, isLiveUpdate) {\r\n                    var editingController = this.getController(\"editing\");\r\n                    var cell = oldRow.cells && oldRow.cells[columnIndex];\r\n                    var isEditing = editingController && editingController.isEditCell(visibleRowIndex, columnIndex);\r\n                    if (isLiveUpdate && isEditing) {\r\n                        return false\r\n                    }\r\n                    if (cell && cell.column && !cell.column.showEditorAlways && cell.isEditing !== isEditing) {\r\n                        return true\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._editingController = this.getController(\"editing\")\r\n                },\r\n                getCellIndex: function($cell, rowIndex) {\r\n                    if (!$cell.is(\"td\") && rowIndex >= 0) {\r\n                        var $cellElements = this.getCellElements(rowIndex);\r\n                        var cellIndex = -1;\r\n                        each($cellElements, (function(index, cellElement) {\r\n                            if ($(cellElement).find($cell).length) {\r\n                                cellIndex = index\r\n                            }\r\n                        }));\r\n                        return cellIndex\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                publicMethods: function() {\r\n                    return this.callBase().concat([\"cellValue\"])\r\n                },\r\n                _getCellTemplate: function(options) {\r\n                    var template = this._editingController.getColumnTemplate(options);\r\n                    return template || this.callBase(options)\r\n                },\r\n                _isNativeClick: function() {\r\n                    return (devices.real().ios || devices.real().android) && this.option(\"editing.allowUpdating\")\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var isRowRemoved = !!row.removed;\r\n                        var isRowInserted = !!row.isNewRow;\r\n                        var isRowModified = !!row.modified;\r\n                        isRowInserted && $row.addClass(ROW_INSERTED);\r\n                        isRowModified && $row.addClass(ROW_MODIFIED);\r\n                        if (isRowInserted || isRowRemoved) {\r\n                            $row.removeClass(ROW_SELECTED)\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _getColumnIndexByElement: function($element) {\r\n                    var $tableElement = $element.closest(\"table\");\r\n                    var $tableElements = this.getTableElements();\r\n                    while ($tableElement.length && !$tableElements.filter($tableElement).length) {\r\n                        $element = $tableElement.closest(\"td\");\r\n                        $tableElement = $element.closest(\"table\")\r\n                    }\r\n                    return this._getColumnIndexByElementCore($element)\r\n                },\r\n                _getColumnIndexByElementCore: function($element) {\r\n                    var $targetElement = $element.closest(\".\" + ROW_CLASS + \"> td:not(.dx-master-detail-cell)\");\r\n                    return this.getCellIndex($targetElement)\r\n                },\r\n                _editCellByClick: function(e, eventName) {\r\n                    var editingController = this._editingController;\r\n                    var $targetElement = $(e.event.target);\r\n                    var columnIndex = this._getColumnIndexByElement($targetElement);\r\n                    var row = this._dataController.items()[e.rowIndex];\r\n                    var allowUpdating = editingController.allowUpdating({\r\n                        row: row\r\n                    }, eventName) || row && row.isNewRow;\r\n                    var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n                    var isEditedCell = editingController.isEditCell(e.rowIndex, columnIndex);\r\n                    var allowEditing = allowUpdating && column && (column.allowEditing || isEditedCell);\r\n                    var startEditAction = this.option(\"editing.startEditAction\") || \"click\";\r\n                    if (\"down\" === eventName) {\r\n                        if ((devices.real().ios || devices.real().android) && !isEditedCell) {\r\n                            resetActiveElement()\r\n                        }\r\n                        return column && column.showEditorAlways && allowEditing && editingController.editCell(e.rowIndex, columnIndex)\r\n                    }\r\n                    if (\"click\" === eventName && \"dblClick\" === startEditAction && !isEditedCell) {\r\n                        var withoutSaveEditData = null === row || void 0 === row ? void 0 : row.isNewRow;\r\n                        editingController.closeEditCell(false, withoutSaveEditData)\r\n                    }\r\n                    if (allowEditing && eventName === startEditAction) {\r\n                        return editingController.editCell(e.rowIndex, columnIndex) || editingController.isEditRow(e.rowIndex)\r\n                    }\r\n                },\r\n                _rowPointerDown: function(e) {\r\n                    this._pointerDownTimeout = setTimeout(() => {\r\n                        this._editCellByClick(e, \"down\")\r\n                    })\r\n                },\r\n                _rowClick: function(e) {\r\n                    var isEditForm = $(e.rowElement).hasClass(this.addWidgetPrefix(EDIT_FORM_CLASS));\r\n                    e.event[TARGET_COMPONENT_NAME] = this.component;\r\n                    if (!this._editCellByClick(e, \"click\") && !isEditForm) {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _rowDblClick: function(e) {\r\n                    if (!this._editCellByClick(e, \"dblClick\")) {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _cellPrepared: function($cell, parameters) {\r\n                    var editingController = this._editingController;\r\n                    var isCommandCell = !!parameters.column.command;\r\n                    var isEditableCell = parameters.setValue;\r\n                    var isEditRow = editingController.isEditRow(parameters.rowIndex);\r\n                    var isEditing = isEditingCell(isEditRow, parameters);\r\n                    if (isEditingOrShowEditorAlwaysDataCell(isEditRow, parameters)) {\r\n                        var alignment = parameters.column.alignment;\r\n                        $cell.toggleClass(this.addWidgetPrefix(READONLY_CLASS), !isEditableCell).toggleClass(CELL_FOCUS_DISABLED_CLASS, !isEditableCell);\r\n                        if (alignment) {\r\n                            $cell.find(EDITORS_INPUT_SELECTOR).first().css(\"textAlign\", alignment)\r\n                        }\r\n                    }\r\n                    if (isEditing) {\r\n                        this._editCellPrepared($cell)\r\n                    }\r\n                    if (parameters.column && !isCommandCell) {\r\n                        editingController.highlightDataCell($cell, parameters)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _editCellPrepared: noop,\r\n                _formItemPrepared: noop,\r\n                _getCellOptions: function(options) {\r\n                    var cellOptions = this.callBase(options);\r\n                    cellOptions.isEditing = this._editingController.isEditCell(cellOptions.rowIndex, cellOptions.columnIndex);\r\n                    return cellOptions\r\n                },\r\n                _createCell: function(options) {\r\n                    var $cell = this.callBase(options);\r\n                    var isEditRow = this._editingController.isEditRow(options.rowIndex);\r\n                    isEditingOrShowEditorAlwaysDataCell(isEditRow, options) && $cell.addClass(EDITOR_CELL_CLASS);\r\n                    return $cell\r\n                },\r\n                cellValue: function(rowIndex, columnIdentifier, value, text) {\r\n                    var cellOptions = this.getCellOptions(rowIndex, columnIdentifier);\r\n                    if (cellOptions) {\r\n                        if (void 0 === value) {\r\n                            return cellOptions.value\r\n                        } else {\r\n                            this._editingController.updateFieldValue(cellOptions, value, text, true)\r\n                        }\r\n                    }\r\n                },\r\n                dispose: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    clearTimeout(this._pointerDownTimeout)\r\n                },\r\n                _renderCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._editingController._focusEditorIfNeed()\r\n                }\r\n            },\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    var editButtonItems = this.getController(\"editing\").prepareEditButtons(this);\r\n                    return editButtonItems.concat(items)\r\n                },\r\n                optionChanged: function(args) {\r\n                    var fullName = args.fullName;\r\n                    switch (args.name) {\r\n                        case \"editing\":\r\n                            var excludedOptions = [EDITING_POPUP_OPTION_NAME, EDITING_CHANGES_OPTION_NAME, EDITING_EDITCOLUMNNAME_OPTION_NAME, EDITING_EDITROWKEY_OPTION_NAME];\r\n                            var shouldInvalidate = fullName && !excludedOptions.some(optionName => optionName === fullName);\r\n                            shouldInvalidate && this._invalidate();\r\n                            this.callBase(args);\r\n                            break;\r\n                        case \"useLegacyColumnButtonTemplate\":\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                isVisible: function() {\r\n                    var editingOptions = this.getController(\"editing\").option(\"editing\");\r\n                    return this.callBase() || (null === editingOptions || void 0 === editingOptions ? void 0 : editingOptions.allowAdding)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport \"./ui.data_grid.editor_factory\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    editingModule\r\n} from \"../grid_core/ui.grid_core.editing\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\ngridCore.registerModule(\"editing\", extend(true, {}, editingModule, {\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                _changeRowExpandCore: function(key) {\r\n                    var editingController = this._editingController;\r\n                    if (Array.isArray(key)) {\r\n                        editingController && editingController.refresh()\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}));\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing_row_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    EDIT_MODE_ROW,\r\n    MODES_WITH_DELAYED_FOCUS,\r\n    ROW_SELECTED_CLASS,\r\n    EDIT_FORM_CLASS\r\n} from \"./ui.grid_core.editing_constants\";\r\nvar EDIT_ROW = \"dx-edit-row\";\r\nexport var editingRowBasedModule = {\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                isRowEditMode: function() {\r\n                    return this.getEditMode() === EDIT_MODE_ROW\r\n                },\r\n                _afterCancelEditData: function(rowIndex) {\r\n                    var dataController = this._dataController;\r\n                    if (this.isRowBasedEditMode() && rowIndex >= 0) {\r\n                        dataController.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: [rowIndex, rowIndex + 1]\r\n                        })\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _isDefaultButtonVisible: function(button, options) {\r\n                    var isRowMode = this.isRowBasedEditMode();\r\n                    var isEditRow = options.row && options.row.rowIndex === this._getVisibleEditRowIndex();\r\n                    if (isRowMode) {\r\n                        switch (button.name) {\r\n                            case \"edit\":\r\n                                return !isEditRow && this.allowUpdating(options);\r\n                            case \"delete\":\r\n                                return this.callBase.apply(this, arguments) && !isEditRow;\r\n                            case \"save\":\r\n                            case \"cancel\":\r\n                                return isEditRow;\r\n                            default:\r\n                                return this.callBase.apply(this, arguments)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                isEditRow: function(rowIndex) {\r\n                    return this.isRowBasedEditMode() && this._isEditRowByIndex(rowIndex)\r\n                },\r\n                _cancelSaving: function() {\r\n                    if (this.isRowBasedEditMode()) {\r\n                        if (!this.hasChanges()) {\r\n                            this._cancelEditDataCore()\r\n                        }\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _refreshCore: function() {\r\n                    if (this.isRowBasedEditMode()) {\r\n                        this.init()\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _isEditColumnVisible: function() {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var editingOptions = this.option(\"editing\");\r\n                    var isRowEditMode = this.isRowEditMode();\r\n                    var isVisibleInRowEditMode = editingOptions.allowUpdating || editingOptions.allowAdding;\r\n                    return result || isRowEditMode && isVisibleInRowEditMode\r\n                },\r\n                _focusEditorIfNeed: function() {\r\n                    var editMode = this.getEditMode();\r\n                    if (this._needFocusEditor) {\r\n                        if (-1 !== MODES_WITH_DELAYED_FOCUS.indexOf(editMode)) {\r\n                            var $editingCell = this.getFocusedCellInRow(this._getVisibleEditRowIndex());\r\n                            this._delayedInputFocus($editingCell, () => {\r\n                                $editingCell && this.component.focus($editingCell)\r\n                            })\r\n                        }\r\n                        this._needFocusEditor = false\r\n                    }\r\n                }\r\n            },\r\n            data: {\r\n                _getChangedColumnIndices: function(oldItem, newItem, rowIndex, isLiveUpdate) {\r\n                    var editingController = this.getController(\"editing\");\r\n                    if (editingController.isRowBasedEditMode() && oldItem.isEditing !== newItem.isEditing) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var editingController = this._editingController;\r\n                        var isEditRow = editingController.isEditRow(row.rowIndex);\r\n                        if (isEditRow) {\r\n                            $row.addClass(EDIT_ROW);\r\n                            $row.removeClass(ROW_SELECTED_CLASS);\r\n                            if (\"detail\" === row.rowType) {\r\n                                $row.addClass(this.addWidgetPrefix(EDIT_FORM_CLASS))\r\n                            }\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _update: function(change) {\r\n                    this.callBase(change);\r\n                    if (\"updateSelection\" === change.changeType) {\r\n                        this.getTableElements().children(\"tbody\").children(\".\" + EDIT_ROW).removeClass(ROW_SELECTED_CLASS)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editing_row_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    editingRowBasedModule\r\n} from \"../grid_core/ui.grid_core.editing_row_based\";\r\ngridCore.registerModule(\"editingRowBased\", editingRowBasedModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing_form_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Guid from \"../../core/guid\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport Button from \"../button\";\r\nimport devices from \"../../core/devices\";\r\nimport Form from \"../form\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport Scrollable from \"../scroll_view/ui.scrollable\";\r\nimport Popup from \"../popup\";\r\nimport {\r\n    EDIT_MODE_FORM,\r\n    EDIT_MODE_POPUP,\r\n    FOCUSABLE_ELEMENT_SELECTOR,\r\n    EDITING_EDITROWKEY_OPTION_NAME,\r\n    EDITING_POPUP_OPTION_NAME,\r\n    DATA_EDIT_DATA_INSERT_TYPE,\r\n    EDITING_FORM_OPTION_NAME\r\n} from \"./ui.grid_core.editing_constants\";\r\nvar EDIT_FORM_ITEM_CLASS = \"edit-form-item\";\r\nvar EDIT_POPUP_CLASS = \"edit-popup\";\r\nvar SCROLLABLE_CONTAINER_CLASS = \"dx-scrollable-container\";\r\nvar EDIT_POPUP_FORM_CLASS = \"edit-popup-form\";\r\nvar BUTTON_CLASS = \"dx-button\";\r\nvar FORM_BUTTONS_CONTAINER_CLASS = \"form-buttons-container\";\r\nvar getEditorType = item => {\r\n    var _column$formItem;\r\n    var column = item.column;\r\n    return item.isCustomEditorType ? item.editorType : null === (_column$formItem = column.formItem) || void 0 === _column$formItem ? void 0 : _column$formItem.editorType\r\n};\r\nvar forEachFormItems = (items, callBack) => {\r\n    items.forEach(item => {\r\n        if (item.items || item.tabs) {\r\n            forEachFormItems(item.items || item.tabs, callBack)\r\n        } else {\r\n            callBack(item)\r\n        }\r\n    })\r\n};\r\nexport var editingFormBasedModule = {\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                init: function() {\r\n                    this._editForm = null;\r\n                    this._updateEditFormDeferred = null;\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                isFormOrPopupEditMode: function() {\r\n                    return this.isPopupEditMode() || this.isFormEditMode()\r\n                },\r\n                isPopupEditMode: function() {\r\n                    var editMode = this.option(\"editing.mode\");\r\n                    return editMode === EDIT_MODE_POPUP\r\n                },\r\n                isFormEditMode: function() {\r\n                    var editMode = this.option(\"editing.mode\");\r\n                    return editMode === EDIT_MODE_FORM\r\n                },\r\n                getFirstEditableColumnIndex: function() {\r\n                    var firstFormItem = this._firstFormItem;\r\n                    if (this.isFormEditMode() && firstFormItem) {\r\n                        var editRowKey = this.option(EDITING_EDITROWKEY_OPTION_NAME);\r\n                        var editRowIndex = this._dataController.getRowIndexByKey(editRowKey);\r\n                        var $editFormElements = this._rowsView.getCellElements(editRowIndex);\r\n                        return this._rowsView._getEditFormEditorVisibleIndex($editFormElements, firstFormItem.column)\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                getEditFormRowIndex: function() {\r\n                    return this.isFormOrPopupEditMode() ? this._getVisibleEditRowIndex() : this.callBase.apply(this, arguments)\r\n                },\r\n                _isEditColumnVisible: function() {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var editingOptions = this.option(\"editing\");\r\n                    return this.isFormOrPopupEditMode() ? editingOptions.allowUpdating || result : result\r\n                },\r\n                _handleDataChanged: function(args) {\r\n                    var editForm = this._editForm;\r\n                    if (\"refresh\" === args.changeType && this.isPopupEditMode() && null !== editForm && void 0 !== editForm && editForm.option(\"visible\")) {\r\n                        this._repaintEditPopup()\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                getPopupContent: function() {\r\n                    var _this$_editPopup;\r\n                    var popupVisible = null === (_this$_editPopup = this._editPopup) || void 0 === _this$_editPopup ? void 0 : _this$_editPopup.option(\"visible\");\r\n                    if (this.isPopupEditMode() && popupVisible) {\r\n                        return this._$popupContent\r\n                    }\r\n                },\r\n                _showAddedRow: function(rowIndex) {\r\n                    if (this.isPopupEditMode()) {\r\n                        this._showEditPopup(rowIndex)\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _cancelEditDataCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.isPopupEditMode()) {\r\n                        this._hideEditPopup()\r\n                    }\r\n                },\r\n                _updateEditRowCore: function(row, skipCurrentRow, isCustomSetCellValue) {\r\n                    var editForm = this._editForm;\r\n                    if (this.isPopupEditMode()) {\r\n                        if (this.option(\"repaintChangesOnly\")) {\r\n                            var _row$update;\r\n                            null === (_row$update = row.update) || void 0 === _row$update ? void 0 : _row$update.call(row, row)\r\n                        } else if (editForm) {\r\n                            this._updateEditFormDeferred = (new Deferred).done(() => editForm.repaint());\r\n                            if (!this._updateLockCount) {\r\n                                this._updateEditFormDeferred.resolve()\r\n                            }\r\n                        }\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _showEditPopup: function(rowIndex, repaintForm) {\r\n                    var isMobileDevice = \"desktop\" !== devices.current().deviceType;\r\n                    var popupOptions = extend({\r\n                        showTitle: false,\r\n                        fullScreen: isMobileDevice,\r\n                        copyRootClassesToWrapper: true,\r\n                        _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n                        toolbarItems: [{\r\n                            toolbar: \"bottom\",\r\n                            location: \"after\",\r\n                            widget: \"dxButton\",\r\n                            options: this._getSaveButtonConfig()\r\n                        }, {\r\n                            toolbar: \"bottom\",\r\n                            location: \"after\",\r\n                            widget: \"dxButton\",\r\n                            options: this._getCancelButtonConfig()\r\n                        }],\r\n                        contentTemplate: this._getPopupEditFormTemplate(rowIndex)\r\n                    }, this.option(EDITING_POPUP_OPTION_NAME));\r\n                    if (!this._editPopup) {\r\n                        var $popupContainer = $(\"<div>\").appendTo(this.component.$element()).addClass(this.addWidgetPrefix(EDIT_POPUP_CLASS));\r\n                        this._editPopup = this._createComponent($popupContainer, Popup, {\r\n                            copyRootClassesToWrapper: true,\r\n                            _ignoreCopyRootClassesToWrapperDeprecation: true\r\n                        });\r\n                        this._editPopup.on(\"hiding\", this._getEditPopupHiddenHandler());\r\n                        this._editPopup.on(\"shown\", e => {\r\n                            eventsEngine.trigger(e.component.$content().find(FOCUSABLE_ELEMENT_SELECTOR).not(\".\" + SCROLLABLE_CONTAINER_CLASS).first(), \"focus\");\r\n                            if (repaintForm) {\r\n                                var _this$_editForm;\r\n                                null === (_this$_editForm = this._editForm) || void 0 === _this$_editForm ? void 0 : _this$_editForm.repaint()\r\n                            }\r\n                        })\r\n                    }\r\n                    this._editPopup.option(popupOptions);\r\n                    this._editPopup.show();\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _getPopupEditFormTemplate: function(rowIndex) {\r\n                    var row = this.component.getVisibleRows()[rowIndex];\r\n                    var templateOptions = {\r\n                        row: row,\r\n                        rowType: row.rowType,\r\n                        key: row.key,\r\n                        rowIndex: rowIndex\r\n                    };\r\n                    this._rowsView._addWatchMethod(templateOptions, row);\r\n                    return container => {\r\n                        var formTemplate = this.getEditFormTemplate();\r\n                        var scrollable = this._createComponent($(\"<div>\").appendTo(container), Scrollable);\r\n                        this._$popupContent = scrollable.$content();\r\n                        formTemplate(this._$popupContent, templateOptions, {\r\n                            isPopupForm: true\r\n                        });\r\n                        this._rowsView.renderDelayedTemplates()\r\n                    }\r\n                },\r\n                _repaintEditPopup: function() {\r\n                    var _this$_editPopup2;\r\n                    var rowIndex = this._getVisibleEditRowIndex();\r\n                    if (null !== (_this$_editPopup2 = this._editPopup) && void 0 !== _this$_editPopup2 && _this$_editPopup2.option(\"visible\") && rowIndex >= 0) {\r\n                        var defaultAnimation = this._editPopup.option(\"animation\");\r\n                        this._editPopup.option(\"animation\", null);\r\n                        this._showEditPopup(rowIndex, true);\r\n                        this._editPopup.option(\"animation\", defaultAnimation)\r\n                    }\r\n                },\r\n                _hideEditPopup: function() {\r\n                    var _this$_editPopup3;\r\n                    null === (_this$_editPopup3 = this._editPopup) || void 0 === _this$_editPopup3 ? void 0 : _this$_editPopup3.option(\"visible\", false)\r\n                },\r\n                optionChanged: function(args) {\r\n                    if (\"editing\" === args.name && this.isFormOrPopupEditMode()) {\r\n                        var fullName = args.fullName;\r\n                        if (0 === fullName.indexOf(EDITING_FORM_OPTION_NAME)) {\r\n                            this._handleFormOptionChange(args);\r\n                            args.handled = true\r\n                        } else if (0 === fullName.indexOf(EDITING_POPUP_OPTION_NAME)) {\r\n                            this._handlePopupOptionChange(args);\r\n                            args.handled = true\r\n                        }\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _handleFormOptionChange: function(args) {\r\n                    var _this$_editPopup4;\r\n                    if (this.isFormEditMode()) {\r\n                        var editRowIndex = this._getVisibleEditRowIndex();\r\n                        if (editRowIndex >= 0) {\r\n                            this._dataController.updateItems({\r\n                                changeType: \"update\",\r\n                                rowIndices: [editRowIndex]\r\n                            })\r\n                        }\r\n                    } else if (null !== (_this$_editPopup4 = this._editPopup) && void 0 !== _this$_editPopup4 && _this$_editPopup4.option(\"visible\") && 0 === args.fullName.indexOf(EDITING_FORM_OPTION_NAME)) {\r\n                        this._repaintEditPopup()\r\n                    }\r\n                },\r\n                _handlePopupOptionChange: function(args) {\r\n                    var editPopup = this._editPopup;\r\n                    if (editPopup) {\r\n                        var popupOptionName = args.fullName.slice(EDITING_POPUP_OPTION_NAME.length + 1);\r\n                        if (popupOptionName) {\r\n                            editPopup.option(popupOptionName, args.value)\r\n                        } else {\r\n                            editPopup.option(args.value)\r\n                        }\r\n                    }\r\n                },\r\n                renderFormEditTemplate: function(detailCellOptions, item, formTemplateOptions, container, isReadOnly) {\r\n                    var that = this;\r\n                    var $container = $(container);\r\n                    var column = item.column;\r\n                    var editorType = getEditorType(item);\r\n                    var rowData = null === detailCellOptions || void 0 === detailCellOptions ? void 0 : detailCellOptions.row.data;\r\n                    var form = formTemplateOptions.component;\r\n                    var {\r\n                        label: label,\r\n                        labelMark: labelMark,\r\n                        labelMode: labelMode\r\n                    } = formTemplateOptions.editorOptions || {};\r\n                    var cellOptions = extend({}, detailCellOptions, {\r\n                        data: rowData,\r\n                        cellElement: null,\r\n                        isOnForm: true,\r\n                        item: item,\r\n                        id: form.getItemID(item.name || item.dataField),\r\n                        column: extend({}, column, {\r\n                            editorType: editorType,\r\n                            editorOptions: extend({\r\n                                label: label,\r\n                                labelMark: labelMark,\r\n                                labelMode: labelMode\r\n                            }, column.editorOptions, item.editorOptions)\r\n                        }),\r\n                        columnIndex: column.index,\r\n                        setValue: !isReadOnly && column.allowEditing && function(value) {\r\n                            that.updateFieldValue(cellOptions, value)\r\n                        }\r\n                    });\r\n                    cellOptions.value = column.calculateCellValue(rowData);\r\n                    var template = this._getFormEditItemTemplate.bind(this)(cellOptions, column);\r\n                    this._rowsView.renderTemplate($container, template, cellOptions, !!$container.closest(getWindow().document).length).done(() => {\r\n                        this._rowsView._updateCell($container, cellOptions)\r\n                    });\r\n                    return cellOptions\r\n                },\r\n                getFormEditorTemplate: function(cellOptions, item) {\r\n                    var column = this.component.columnOption(item.dataField);\r\n                    return (options, container) => {\r\n                        var _cellOptions$row$watc, _cellOptions$row;\r\n                        var $container = $(container);\r\n                        null === (_cellOptions$row$watc = (_cellOptions$row = cellOptions.row).watch) || void 0 === _cellOptions$row$watc ? void 0 : _cellOptions$row$watc.call(_cellOptions$row, (function() {\r\n                            return column.selector(cellOptions.row.data)\r\n                        }), () => {\r\n                            var _validator;\r\n                            var $editorElement = $container.find(\".dx-widget\").first();\r\n                            var validator = $editorElement.data(\"dxValidator\");\r\n                            var validatorOptions = null === (_validator = validator) || void 0 === _validator ? void 0 : _validator.option();\r\n                            $container.contents().remove();\r\n                            cellOptions = this.renderFormEditTemplate.bind(this)(cellOptions, item, options, $container);\r\n                            $editorElement = $container.find(\".dx-widget\").first();\r\n                            validator = $editorElement.data(\"dxValidator\");\r\n                            if (validatorOptions && !validator) {\r\n                                $editorElement.dxValidator({\r\n                                    validationRules: validatorOptions.validationRules,\r\n                                    validationGroup: validatorOptions.validationGroup,\r\n                                    dataGetter: validatorOptions.dataGetter\r\n                                })\r\n                            }\r\n                        });\r\n                        cellOptions = this.renderFormEditTemplate.bind(this)(cellOptions, item, options, $container)\r\n                    }\r\n                },\r\n                getEditFormOptions: function(detailOptions) {\r\n                    var _this$_getValidationG;\r\n                    var editFormOptions = null === (_this$_getValidationG = this._getValidationGroupsInForm) || void 0 === _this$_getValidationG ? void 0 : _this$_getValidationG.call(this, detailOptions);\r\n                    var userCustomizeItem = this.option(\"editing.form.customizeItem\");\r\n                    var editFormItemClass = this.addWidgetPrefix(EDIT_FORM_ITEM_CLASS);\r\n                    var items = this.option(\"editing.form.items\");\r\n                    var isCustomEditorType = {};\r\n                    if (!items) {\r\n                        var columns = this.getController(\"columns\").getColumns();\r\n                        items = [];\r\n                        each(columns, (function(_, column) {\r\n                            if (!column.isBand && !column.type) {\r\n                                items.push({\r\n                                    column: column,\r\n                                    name: column.name,\r\n                                    dataField: column.dataField\r\n                                })\r\n                            }\r\n                        }))\r\n                    } else {\r\n                        forEachFormItems(items, item => {\r\n                            var itemId = (null === item || void 0 === item ? void 0 : item.name) || (null === item || void 0 === item ? void 0 : item.dataField);\r\n                            if (itemId) {\r\n                                isCustomEditorType[itemId] = !!item.editorType\r\n                            }\r\n                        })\r\n                    }\r\n                    return extend({}, editFormOptions, {\r\n                        items: items,\r\n                        formID: \"dx-\" + new Guid,\r\n                        customizeItem: item => {\r\n                            var column;\r\n                            var itemId = item.name || item.dataField;\r\n                            if (item.column || itemId) {\r\n                                column = item.column || this._columnsController.columnOption(item.name ? \"name:\" + item.name : \"dataField:\" + item.dataField)\r\n                            }\r\n                            if (column) {\r\n                                item.label = item.label || {};\r\n                                item.label.text = item.label.text || column.caption;\r\n                                if (\"boolean\" === column.dataType && void 0 === item.label.visible) {\r\n                                    var labelMode = this.option(\"editing.form.labelMode\");\r\n                                    if (\"floating\" === labelMode || \"static\" === labelMode) {\r\n                                        item.label.visible = true\r\n                                    }\r\n                                }\r\n                                item.template = item.template || this.getFormEditorTemplate(detailOptions, item);\r\n                                item.column = column;\r\n                                item.isCustomEditorType = isCustomEditorType[itemId];\r\n                                if (column.formItem) {\r\n                                    extend(item, column.formItem)\r\n                                }\r\n                                if (void 0 === item.isRequired && column.validationRules) {\r\n                                    item.isRequired = column.validationRules.some((function(rule) {\r\n                                        return \"required\" === rule.type\r\n                                    }));\r\n                                    item.validationRules = []\r\n                                }\r\n                                var itemVisible = isDefined(item.visible) ? item.visible : true;\r\n                                if (!this._firstFormItem && itemVisible) {\r\n                                    this._firstFormItem = item\r\n                                }\r\n                            }\r\n                            null === userCustomizeItem || void 0 === userCustomizeItem ? void 0 : userCustomizeItem.call(this, item);\r\n                            item.cssClass = isString(item.cssClass) ? item.cssClass + \" \" + editFormItemClass : editFormItemClass\r\n                        }\r\n                    })\r\n                },\r\n                getEditFormTemplate: function() {\r\n                    return ($container, detailOptions, options) => {\r\n                        var editFormOptions = this.option(EDITING_FORM_OPTION_NAME);\r\n                        var baseEditFormOptions = this.getEditFormOptions(detailOptions);\r\n                        var $formContainer = $(\"<div>\").appendTo($container);\r\n                        var isPopupForm = null === options || void 0 === options ? void 0 : options.isPopupForm;\r\n                        this._firstFormItem = void 0;\r\n                        if (isPopupForm) {\r\n                            $formContainer.addClass(this.addWidgetPrefix(EDIT_POPUP_FORM_CLASS))\r\n                        }\r\n                        this._editForm = this._createComponent($formContainer, Form, extend({}, editFormOptions, baseEditFormOptions));\r\n                        if (!isPopupForm) {\r\n                            var $buttonsContainer = $(\"<div>\").addClass(this.addWidgetPrefix(FORM_BUTTONS_CONTAINER_CLASS)).appendTo($container);\r\n                            this._createComponent($(\"<div>\").appendTo($buttonsContainer), Button, this._getSaveButtonConfig());\r\n                            this._createComponent($(\"<div>\").appendTo($buttonsContainer), Button, this._getCancelButtonConfig())\r\n                        }\r\n                        this._editForm.on(\"contentReady\", () => {\r\n                            var _this$_editPopup5;\r\n                            null === (_this$_editPopup5 = this._editPopup) || void 0 === _this$_editPopup5 ? void 0 : _this$_editPopup5.repaint()\r\n                        })\r\n                    }\r\n                },\r\n                getEditForm: function() {\r\n                    return this._editForm\r\n                },\r\n                _endUpdateCore: function() {\r\n                    var _this$_updateEditForm;\r\n                    null === (_this$_updateEditForm = this._updateEditFormDeferred) || void 0 === _this$_updateEditForm ? void 0 : _this$_updateEditForm.resolve()\r\n                },\r\n                _beforeEndSaving: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.isPopupEditMode()) {\r\n                        var _this$_editPopup6;\r\n                        null === (_this$_editPopup6 = this._editPopup) || void 0 === _this$_editPopup6 ? void 0 : _this$_editPopup6.hide()\r\n                    }\r\n                },\r\n                _processDataItemCore: function(item, _ref) {\r\n                    var {\r\n                        type: type\r\n                    } = _ref;\r\n                    if (this.isPopupEditMode() && type === DATA_EDIT_DATA_INSERT_TYPE) {\r\n                        item.visible = false\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _editRowFromOptionChangedCore: function(rowIndices, rowIndex, oldRowIndex) {\r\n                    if (this.isPopupEditMode()) {\r\n                        this._showEditPopup(rowIndex)\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                }\r\n            },\r\n            data: {\r\n                _updateEditItem: function(item) {\r\n                    if (this._editingController.isFormEditMode()) {\r\n                        item.rowType = \"detail\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _renderCellContent: function($cell, options) {\r\n                    if (\"data\" === options.rowType && this._editingController.isPopupEditMode() && false === options.row.visible) {\r\n                        return\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                getCellElements: function(rowIndex) {\r\n                    var $cellElements = this.callBase(rowIndex);\r\n                    var editingController = this._editingController;\r\n                    var editForm = editingController.getEditForm();\r\n                    var editFormRowIndex = editingController.getEditFormRowIndex();\r\n                    if (editFormRowIndex === rowIndex && $cellElements && editForm) {\r\n                        return editForm.$element().find(\".\" + this.addWidgetPrefix(EDIT_FORM_ITEM_CLASS) + \", .\" + BUTTON_CLASS)\r\n                    }\r\n                    return $cellElements\r\n                },\r\n                _getVisibleColumnIndex: function($cells, rowIndex, columnIdentifier) {\r\n                    var editFormRowIndex = this._editingController.getEditFormRowIndex();\r\n                    if (editFormRowIndex === rowIndex && isString(columnIdentifier)) {\r\n                        var column = this._columnsController.columnOption(columnIdentifier);\r\n                        return this._getEditFormEditorVisibleIndex($cells, column)\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _getEditFormEditorVisibleIndex: function($cells, column) {\r\n                    var visibleIndex = -1;\r\n                    each($cells, (function(index, cellElement) {\r\n                        var item = $(cellElement).find(\".dx-field-item-content\").data(\"dx-form-item\");\r\n                        if (null !== item && void 0 !== item && item.column && column && item.column.index === column.index) {\r\n                            visibleIndex = index;\r\n                            return false\r\n                        }\r\n                    }));\r\n                    return visibleIndex\r\n                },\r\n                _isFormItem: function(parameters) {\r\n                    var isDetailRow = \"detail\" === parameters.rowType || \"detailAdaptive\" === parameters.rowType;\r\n                    var isPopupEditing = \"data\" === parameters.rowType && this._editingController.isPopupEditMode();\r\n                    return (isDetailRow || isPopupEditing) && parameters.item\r\n                },\r\n                _updateCell: function($cell, parameters) {\r\n                    if (this._isFormItem(parameters)) {\r\n                        this._formItemPrepared(parameters, $cell)\r\n                    } else {\r\n                        this.callBase($cell, parameters)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editing_form_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    editingFormBasedModule\r\n} from \"../grid_core/ui.grid_core.editing_form_based\";\r\ngridCore.registerModule(\"editingFormBased\", editingFormBasedModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing_cell_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport holdEvent from \"../../events/hold\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    deferRender\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    createObjectWithChanges\r\n} from \"../../data/array_utils\";\r\nimport {\r\n    EDIT_MODE_BATCH,\r\n    EDIT_MODE_CELL,\r\n    TARGET_COMPONENT_NAME\r\n} from \"./ui.grid_core.editing_constants\";\r\nvar FOCUS_OVERLAY_CLASS = \"focus-overlay\";\r\nvar ADD_ROW_BUTTON_CLASS = \"addrow-button\";\r\nvar DROPDOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar CELL_MODIFIED_CLASS = \"dx-cell-modified\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar ROW_REMOVED = \"dx-row-removed\";\r\nvar EDITING_EDITROWKEY_OPTION_NAME = \"editing.editRowKey\";\r\nvar EDITING_EDITCOLUMNNAME_OPTION_NAME = \"editing.editColumnName\";\r\nvar DATA_EDIT_DATA_REMOVE_TYPE = \"remove\";\r\nexport default {\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                init: function() {\r\n                    var needCreateHandlers = !this._saveEditorHandler;\r\n                    this.callBase.apply(this, arguments);\r\n                    if (needCreateHandlers) {\r\n                        var $pointerDownTarget;\r\n                        var isResizing;\r\n                        this._pointerUpEditorHandler = () => {\r\n                            var _this$getController;\r\n                            isResizing = null === (_this$getController = this.getController(\"columnsResizer\")) || void 0 === _this$getController ? void 0 : _this$getController.isResizing()\r\n                        };\r\n                        this._pointerDownEditorHandler = e => $pointerDownTarget = $(e.target);\r\n                        this._saveEditorHandler = this.createAction((function(e) {\r\n                            var event = e.event;\r\n                            var $target = $(event.target);\r\n                            var targetComponent = event[TARGET_COMPONENT_NAME];\r\n                            if ($pointerDownTarget && $pointerDownTarget.is(\"input\") && !$pointerDownTarget.is($target)) {\r\n                                return\r\n                            }\r\n\r\n                            function checkEditorPopup($element) {\r\n                                return $element && !!$element.closest(\".\".concat(DROPDOWN_EDITOR_OVERLAY_CLASS)).length\r\n                            }\r\n                            if (this.isCellOrBatchEditMode() && !this._editCellInProgress) {\r\n                                var isEditorPopup = checkEditorPopup($target) || checkEditorPopup(null === targetComponent || void 0 === targetComponent ? void 0 : targetComponent.$element());\r\n                                var isDomElement = !!$target.closest(getWindow().document).length;\r\n                                var isAnotherComponent = targetComponent && !targetComponent._disposed && targetComponent !== this.component;\r\n                                var isAddRowButton = !!$target.closest(\".\".concat(this.addWidgetPrefix(ADD_ROW_BUTTON_CLASS))).length;\r\n                                var isFocusOverlay = $target.hasClass(this.addWidgetPrefix(FOCUS_OVERLAY_CLASS));\r\n                                var isCellEditMode = this.isCellEditMode();\r\n                                if (!isResizing && !isEditorPopup && !isFocusOverlay && !(isAddRowButton && isCellEditMode && this.isEditing()) && (isDomElement || isAnotherComponent)) {\r\n                                    this._closeEditItem.bind(this)($target)\r\n                                }\r\n                            }\r\n                        }));\r\n                        eventsEngine.on(domAdapter.getDocument(), pointerEvents.up, this._pointerUpEditorHandler);\r\n                        eventsEngine.on(domAdapter.getDocument(), pointerEvents.down, this._pointerDownEditorHandler);\r\n                        eventsEngine.on(domAdapter.getDocument(), clickEventName, this._saveEditorHandler)\r\n                    }\r\n                },\r\n                isCellEditMode: function() {\r\n                    return this.option(\"editing.mode\") === EDIT_MODE_CELL\r\n                },\r\n                isBatchEditMode: function() {\r\n                    return this.option(\"editing.mode\") === EDIT_MODE_BATCH\r\n                },\r\n                isCellOrBatchEditMode: function() {\r\n                    return this.isCellEditMode() || this.isBatchEditMode()\r\n                },\r\n                _needToCloseEditableCell: function($targetElement) {\r\n                    var $element = this.component.$element();\r\n                    var result = this.isEditing();\r\n                    var isCurrentComponentElement = !$element || !!$targetElement.closest($element).length;\r\n                    if (isCurrentComponentElement) {\r\n                        var isDataRow = $targetElement.closest(\".\" + DATA_ROW_CLASS).length;\r\n                        if (isDataRow) {\r\n                            var rowsView = this.getView(\"rowsView\");\r\n                            var $targetCell = $targetElement.closest(\".\" + ROW_CLASS + \"> td\");\r\n                            var rowIndex = rowsView.getRowIndex($targetCell.parent());\r\n                            var columnIndex = rowsView.getCellElements(rowIndex).index($targetCell);\r\n                            var visibleColumns = this._columnsController.getVisibleColumns();\r\n                            var allowEditing = visibleColumns[columnIndex] && visibleColumns[columnIndex].allowEditing;\r\n                            result = result && !allowEditing && !this.isEditCell(rowIndex, columnIndex)\r\n                        }\r\n                    }\r\n                    return result || this.callBase.apply(this, arguments)\r\n                },\r\n                _closeEditItem: function($targetElement) {\r\n                    if (this._needToCloseEditableCell($targetElement)) {\r\n                        this.closeEditCell()\r\n                    }\r\n                },\r\n                _focusEditorIfNeed: function() {\r\n                    if (this._needFocusEditor && this.isCellOrBatchEditMode()) {\r\n                        var _this$_rowsView;\r\n                        var editColumnIndex = this._getVisibleEditColumnIndex();\r\n                        var $cell = null === (_this$_rowsView = this._rowsView) || void 0 === _this$_rowsView ? void 0 : _this$_rowsView._getCellElement(this._getVisibleEditRowIndex(), editColumnIndex);\r\n                        if ($cell && !$cell.find(\":focus\").length) {\r\n                            this._focusEditingCell(() => {\r\n                                this._editCellInProgress = false\r\n                            }, $cell, true)\r\n                        } else {\r\n                            this._editCellInProgress = false\r\n                        }\r\n                        this._needFocusEditor = false\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                isEditing: function() {\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        var isEditRowKeyDefined = isDefined(this.option(EDITING_EDITROWKEY_OPTION_NAME));\r\n                        var isEditColumnNameDefined = isDefined(this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME));\r\n                        return isEditRowKeyDefined && isEditColumnNameDefined\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _handleEditColumnNameChange: function(args) {\r\n                    var oldRowIndex = this._getVisibleEditRowIndex(args.previousValue);\r\n                    if (this.isCellOrBatchEditMode() && -1 !== oldRowIndex && isDefined(args.value) && args.value !== args.previousValue) {\r\n                        var columnIndex = this._columnsController.getVisibleColumnIndex(args.value);\r\n                        var oldColumnIndex = this._columnsController.getVisibleColumnIndex(args.previousValue);\r\n                        this._editCellFromOptionChanged(columnIndex, oldColumnIndex, oldRowIndex)\r\n                    }\r\n                },\r\n                _addRow: function(parentKey, deferred) {\r\n                    if (this.isCellEditMode() && this.hasChanges()) {\r\n                        var _deferred = new Deferred;\r\n                        this.saveEditData().done(() => {\r\n                            if (!this.hasChanges()) {\r\n                                this.addRow(parentKey).done(_deferred.resolve).fail(_deferred.reject)\r\n                            } else {\r\n                                _deferred.reject(\"cancel\")\r\n                            }\r\n                        });\r\n                        return _deferred.promise()\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                editCell: function(rowIndex, columnIndex) {\r\n                    return this._editCell({\r\n                        rowIndex: rowIndex,\r\n                        columnIndex: columnIndex\r\n                    })\r\n                },\r\n                _editCell: function(options) {\r\n                    var d = new Deferred;\r\n                    var coreResult;\r\n                    this.executeOperation(d, () => {\r\n                        coreResult = this._editCellCore(options);\r\n                        when(coreResult).done(d.resolve).fail(d.reject)\r\n                    });\r\n                    return void 0 !== coreResult ? coreResult : d.promise()\r\n                },\r\n                _editCellCore: function(options) {\r\n                    var dataController = this._dataController;\r\n                    var isEditByOptionChanged = isDefined(options.oldColumnIndex) || isDefined(options.oldRowIndex);\r\n                    var {\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex,\r\n                        column: column,\r\n                        item: item\r\n                    } = this._getNormalizedEditCellOptions(options);\r\n                    var params = {\r\n                        data: null === item || void 0 === item ? void 0 : item.data,\r\n                        cancel: false,\r\n                        column: column\r\n                    };\r\n                    if (void 0 === item.key) {\r\n                        this._dataController.fireError(\"E1043\");\r\n                        return\r\n                    }\r\n                    if (column && (\"data\" === item.rowType || \"detailAdaptive\" === item.rowType) && !item.removed && this.isCellOrBatchEditMode()) {\r\n                        if (!isEditByOptionChanged && this.isEditCell(rowIndex, columnIndex)) {\r\n                            return true\r\n                        }\r\n                        var editRowIndex = rowIndex + dataController.getRowIndexOffset();\r\n                        return when(this._beforeEditCell(rowIndex, columnIndex, item)).done(cancel => {\r\n                            if (cancel) {\r\n                                return\r\n                            }\r\n                            if (!this._prepareEditCell(params, item, columnIndex, editRowIndex)) {\r\n                                this._processCanceledEditingCell()\r\n                            }\r\n                        })\r\n                    }\r\n                    return false\r\n                },\r\n                _beforeEditCell: function(rowIndex, columnIndex, item) {\r\n                    if (this.isCellEditMode() && !item.isNewRow && this.hasChanges()) {\r\n                        var d = new Deferred;\r\n                        this.saveEditData().always(() => {\r\n                            d.resolve(this.hasChanges())\r\n                        });\r\n                        return d\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    var publicMethods = this.callBase.apply(this, arguments);\r\n                    return publicMethods.concat([\"editCell\", \"closeEditCell\"])\r\n                },\r\n                _getNormalizedEditCellOptions: function(_ref) {\r\n                    var {\r\n                        oldColumnIndex: oldColumnIndex,\r\n                        oldRowIndex: oldRowIndex,\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    } = _ref;\r\n                    var columnsController = this._columnsController;\r\n                    var visibleColumns = columnsController.getVisibleColumns();\r\n                    var items = this._dataController.items();\r\n                    var item = items[rowIndex];\r\n                    var oldColumn;\r\n                    if (isDefined(oldColumnIndex)) {\r\n                        oldColumn = visibleColumns[oldColumnIndex]\r\n                    } else {\r\n                        oldColumn = this._getEditColumn()\r\n                    }\r\n                    if (!isDefined(oldRowIndex)) {\r\n                        oldRowIndex = this._getVisibleEditRowIndex()\r\n                    }\r\n                    if (isString(columnIndex)) {\r\n                        columnIndex = columnsController.columnOption(columnIndex, \"index\");\r\n                        columnIndex = columnsController.getVisibleIndex(columnIndex)\r\n                    }\r\n                    var column = visibleColumns[columnIndex];\r\n                    return {\r\n                        oldColumn: oldColumn,\r\n                        columnIndex: columnIndex,\r\n                        oldRowIndex: oldRowIndex,\r\n                        rowIndex: rowIndex,\r\n                        column: column,\r\n                        item: item\r\n                    }\r\n                },\r\n                _prepareEditCell: function(params, item, editColumnIndex, editRowIndex) {\r\n                    if (!item.isNewRow) {\r\n                        params.key = item.key\r\n                    }\r\n                    if (this._isEditingStart(params)) {\r\n                        return false\r\n                    }\r\n                    this._pageIndex = this._dataController.pageIndex();\r\n                    this._setEditRowKey(item.key);\r\n                    this._setEditColumnNameByIndex(editColumnIndex);\r\n                    if (!params.column.showEditorAlways) {\r\n                        var _item$oldData;\r\n                        this._addInternalData({\r\n                            key: item.key,\r\n                            oldData: null !== (_item$oldData = item.oldData) && void 0 !== _item$oldData ? _item$oldData : item.data\r\n                        })\r\n                    }\r\n                    return true\r\n                },\r\n                closeEditCell: function(isError, withoutSaveEditData) {\r\n                    var result = when();\r\n                    var oldEditRowIndex = this._getVisibleEditRowIndex();\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        var deferred = new Deferred;\r\n                        result = new Deferred;\r\n                        this.executeOperation(deferred, () => {\r\n                            this._closeEditCellCore(isError, oldEditRowIndex, withoutSaveEditData).always(result.resolve)\r\n                        })\r\n                    }\r\n                    return result.promise()\r\n                },\r\n                _closeEditCellCore: function(isError, oldEditRowIndex, withoutSaveEditData) {\r\n                    var dataController = this._dataController;\r\n                    var deferred = new Deferred;\r\n                    var promise = deferred.promise();\r\n                    if (this.isCellEditMode() && this.hasChanges()) {\r\n                        if (!withoutSaveEditData) {\r\n                            this.saveEditData().done(error => {\r\n                                if (!this.hasChanges()) {\r\n                                    this.closeEditCell(!!error).always(deferred.resolve);\r\n                                    return\r\n                                }\r\n                                deferred.resolve()\r\n                            });\r\n                            return promise\r\n                        }\r\n                    } else {\r\n                        this._resetEditRowKey();\r\n                        this._resetEditColumnName();\r\n                        if (oldEditRowIndex >= 0) {\r\n                            var rowIndices = [oldEditRowIndex];\r\n                            this._beforeCloseEditCellInBatchMode(rowIndices);\r\n                            if (!isError) {\r\n                                dataController.updateItems({\r\n                                    changeType: \"update\",\r\n                                    rowIndices: rowIndices\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                    deferred.resolve();\r\n                    return promise\r\n                },\r\n                _resetModifiedClassCells: function(changes) {\r\n                    if (this.isBatchEditMode()) {\r\n                        var columnsCount = this._columnsController.getVisibleColumns().length;\r\n                        changes.forEach(_ref2 => {\r\n                            var {\r\n                                key: key\r\n                            } = _ref2;\r\n                            var rowIndex = this._dataController.getRowIndexByKey(key);\r\n                            if (-1 !== rowIndex) {\r\n                                for (var columnIndex = 0; columnIndex < columnsCount; columnIndex++) {\r\n                                    this._rowsView._getCellElement(rowIndex, columnIndex).removeClass(CELL_MODIFIED_CLASS)\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                _prepareChange: function(options, value, text) {\r\n                    var $cellElement = $(options.cellElement);\r\n                    if (this.isBatchEditMode() && void 0 !== options.key) {\r\n                        this._applyModified($cellElement, options)\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _cancelSaving: function() {\r\n                    var dataController = this._dataController;\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        if (this.isBatchEditMode()) {\r\n                            this._resetEditIndices()\r\n                        }\r\n                        dataController.updateItems()\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                optionChanged: function(args) {\r\n                    var fullName = args.fullName;\r\n                    if (\"editing\" === args.name && fullName === EDITING_EDITCOLUMNNAME_OPTION_NAME) {\r\n                        this._handleEditColumnNameChange(args);\r\n                        args.handled = true\r\n                    } else {\r\n                        this.callBase(args)\r\n                    }\r\n                },\r\n                _editCellFromOptionChanged: function(columnIndex, oldColumnIndex, oldRowIndex) {\r\n                    var columns = this._columnsController.getVisibleColumns();\r\n                    if (columnIndex > -1) {\r\n                        deferRender(() => {\r\n                            this._repaintEditCell(columns[columnIndex], columns[oldColumnIndex], oldRowIndex)\r\n                        })\r\n                    }\r\n                },\r\n                _handleEditRowKeyChange: function(args) {\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        var columnIndex = this._getVisibleEditColumnIndex();\r\n                        var oldRowIndexCorrection = this._getEditRowIndexCorrection();\r\n                        var oldRowIndex = this._dataController.getRowIndexByKey(args.previousValue) + oldRowIndexCorrection;\r\n                        if (isDefined(args.value) && args.value !== args.previousValue) {\r\n                            var _this$_editCellFromOp;\r\n                            null === (_this$_editCellFromOp = this._editCellFromOptionChanged) || void 0 === _this$_editCellFromOp ? void 0 : _this$_editCellFromOp.call(this, columnIndex, columnIndex, oldRowIndex)\r\n                        }\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                deleteRow: function(rowIndex) {\r\n                    if (this.isCellEditMode() && this.isEditing()) {\r\n                        var isNewRow = this._dataController.items()[rowIndex].isNewRow;\r\n                        var rowKey = this._dataController.getKeyByRowIndex(rowIndex);\r\n                        this.closeEditCell(null, isNewRow).always(() => {\r\n                            rowIndex = this._dataController.getRowIndexByKey(rowKey);\r\n                            this._checkAndDeleteRow(rowIndex)\r\n                        })\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _checkAndDeleteRow: function(rowIndex) {\r\n                    if (this.isBatchEditMode()) {\r\n                        this._deleteRowCore(rowIndex)\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _refreshCore: function(isPageChanged) {\r\n                    var needResetIndexes = this.isBatchEditMode() || isPageChanged && \"virtual\" !== this.option(\"scrolling.mode\");\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        if (needResetIndexes) {\r\n                            this._resetEditColumnName();\r\n                            this._resetEditRowKey()\r\n                        }\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _allowRowAdding: function(params) {\r\n                    if (this.isBatchEditMode()) {\r\n                        return true\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _afterDeleteRow: function(rowIndex, oldEditRowIndex) {\r\n                    var dataController = this._dataController;\r\n                    if (this.isBatchEditMode()) {\r\n                        dataController.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: [oldEditRowIndex, rowIndex]\r\n                        });\r\n                        return (new Deferred).resolve()\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _updateEditRow: function(row, forceUpdateRow, isCustomSetCellValue) {\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        this._updateRowImmediately(row, forceUpdateRow, isCustomSetCellValue)\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _isDefaultButtonVisible: function(button, options) {\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        var isBatchMode = this.isBatchEditMode();\r\n                        switch (button.name) {\r\n                            case \"save\":\r\n                            case \"cancel\":\r\n                            case \"edit\":\r\n                                return false;\r\n                            case \"delete\":\r\n                                return this.callBase.apply(this, arguments) && (!isBatchMode || !options.row.removed);\r\n                            case \"undelete\":\r\n                                return isBatchMode && this.allowDeleting(options) && options.row.removed;\r\n                            default:\r\n                                return this.callBase.apply(this, arguments)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _isRowDeleteAllowed: function() {\r\n                    var callBase = this.callBase.apply(this, arguments);\r\n                    return callBase || this.isBatchEditMode()\r\n                },\r\n                _beforeEndSaving: function(changes) {\r\n                    if (this.isCellEditMode()) {\r\n                        var _changes$;\r\n                        if (\"update\" !== (null === (_changes$ = changes[0]) || void 0 === _changes$ ? void 0 : _changes$.type)) {\r\n                            this.callBase.apply(this, arguments)\r\n                        }\r\n                    } else {\r\n                        if (this.isBatchEditMode()) {\r\n                            this._resetModifiedClassCells(changes)\r\n                        }\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                prepareEditButtons: function(headerPanel) {\r\n                    var editingOptions = this.option(\"editing\") || {};\r\n                    var buttonItems = this.callBase.apply(this, arguments);\r\n                    if ((editingOptions.allowUpdating || editingOptions.allowAdding || editingOptions.allowDeleting) && this.isBatchEditMode()) {\r\n                        buttonItems.push(this.prepareButtonItem(headerPanel, \"save\", \"saveEditData\", 21));\r\n                        buttonItems.push(this.prepareButtonItem(headerPanel, \"revert\", \"cancelEditData\", 22))\r\n                    }\r\n                    return buttonItems\r\n                },\r\n                _saveEditDataInner: function() {\r\n                    var _deferred2;\r\n                    var editRow = this._dataController.getVisibleRows()[this.getEditRowIndex()];\r\n                    var editColumn = this._getEditColumn();\r\n                    var showEditorAlways = null === editColumn || void 0 === editColumn ? void 0 : editColumn.showEditorAlways;\r\n                    var isUpdateInCellMode = this.isCellEditMode() && !(null !== editRow && void 0 !== editRow && editRow.isNewRow);\r\n                    var deferred;\r\n                    if (isUpdateInCellMode && showEditorAlways) {\r\n                        deferred = new Deferred;\r\n                        this.addDeferred(deferred)\r\n                    }\r\n                    return this.callBase.apply(this, arguments).always(null === (_deferred2 = deferred) || void 0 === _deferred2 ? void 0 : _deferred2.resolve)\r\n                },\r\n                _applyChange: function(options, params, forceUpdateRow) {\r\n                    var isUpdateInCellMode = this.isCellEditMode() && options.row && !options.row.isNewRow;\r\n                    var showEditorAlways = options.column.showEditorAlways;\r\n                    var isCustomSetCellValue = options.column.setCellValue !== options.column.defaultSetCellValue;\r\n                    var focusPreviousEditingCell = showEditorAlways && !forceUpdateRow && isUpdateInCellMode && this.hasEditData() && !this.isEditCell(options.rowIndex, options.columnIndex);\r\n                    if (focusPreviousEditingCell) {\r\n                        this._focusEditingCell();\r\n                        this._updateEditRow(options.row, true, isCustomSetCellValue);\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _applyChangeCore: function(options, forceUpdateRow) {\r\n                    var showEditorAlways = options.column.showEditorAlways;\r\n                    var isUpdateInCellMode = this.isCellEditMode() && options.row && !options.row.isNewRow;\r\n                    if (showEditorAlways && !forceUpdateRow) {\r\n                        if (isUpdateInCellMode) {\r\n                            this._setEditRowKey(options.row.key, true);\r\n                            this._setEditColumnNameByIndex(options.columnIndex, true);\r\n                            return this.saveEditData()\r\n                        } else if (this.isBatchEditMode()) {\r\n                            forceUpdateRow = this._needUpdateRow(options.column);\r\n                            return this.callBase(options, forceUpdateRow)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _processDataItemCore: function(item, _ref3) {\r\n                    var {\r\n                        data: data,\r\n                        type: type\r\n                    } = _ref3;\r\n                    if (this.isBatchEditMode() && type === DATA_EDIT_DATA_REMOVE_TYPE) {\r\n                        item.data = createObjectWithChanges(item.data, data)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _processRemoveCore: function(changes, editIndex, processIfBatch) {\r\n                    if (this.isBatchEditMode() && !processIfBatch) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _processRemoveIfError: function() {\r\n                    if (this.isBatchEditMode()) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _beforeFocusElementInRow: function(rowIndex) {\r\n                    this.callBase.apply(this, arguments);\r\n                    var editRowIndex = rowIndex >= 0 ? rowIndex : 0;\r\n                    var columnIndex = this.getFirstEditableColumnIndex();\r\n                    columnIndex >= 0 && this.editCell(editRowIndex, columnIndex)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _createTable: function() {\r\n                    var $table = this.callBase.apply(this, arguments);\r\n                    var editingController = this._editingController;\r\n                    if (editingController.isCellOrBatchEditMode() && this.option(\"editing.allowUpdating\")) {\r\n                        eventsEngine.on($table, addNamespace(holdEvent.name, \"dxDataGridRowsView\"), \"td:not(.\" + EDITOR_CELL_CLASS + \")\", this.createAction(() => {\r\n                            if (editingController.isEditing()) {\r\n                                editingController.closeEditCell()\r\n                            }\r\n                        }))\r\n                    }\r\n                    return $table\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var editingController = this._editingController;\r\n                        var isRowRemoved = !!row.removed;\r\n                        if (editingController.isBatchEditMode()) {\r\n                            isRowRemoved && $row.addClass(ROW_REMOVED)\r\n                        }\r\n                    }\r\n                    return $row\r\n                }\r\n            },\r\n            headerPanel: {\r\n                isVisible: function() {\r\n                    var editingOptions = this.getController(\"editing\").option(\"editing\");\r\n                    return this.callBase() || editingOptions && (editingOptions.allowUpdating || editingOptions.allowDeleting) && editingOptions.mode === EDIT_MODE_BATCH\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editing_cell_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport editingCellBasedModule from \"../grid_core/ui.grid_core.editing_cell_based\";\r\ngridCore.registerModule(\"editingCellBased\", editingCellBasedModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.validating.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getWidth,\r\n    getOuterHeight,\r\n    setHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    createObjectWithChanges\r\n} from \"../../data/array_utils\";\r\nimport {\r\n    deferUpdate,\r\n    equalByValue,\r\n    getKeyHash\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined,\r\n    isEmptyObject,\r\n    isObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    focused\r\n} from \"../widget/selectors\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport Button from \"../button\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport ValidationEngine from \"../validation_engine\";\r\nimport Validator from \"../validator\";\r\nimport Overlay from \"../overlay/ui.overlay\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    Deferred,\r\n    when,\r\n    fromPromise\r\n} from \"../../core/utils/deferred\";\r\nimport LoadIndicator from \"../load_indicator\";\r\nimport {\r\n    encodeHtml\r\n} from \"../../core/utils/string\";\r\nimport browser from \"../../core/utils/browser\";\r\nvar INVALIDATE_CLASS = \"invalid\";\r\nvar REVERT_TOOLTIP_CLASS = \"revert-tooltip\";\r\nvar ROWS_VIEW_CLASS = \"rowsview\";\r\nvar INVALID_MESSAGE_CLASS = \"dx-invalid-message\";\r\nvar WIDGET_INVALID_MESSAGE_CLASS = \"invalid-message\";\r\nvar INVALID_MESSAGE_ALWAYS_CLASS = \"dx-invalid-message-always\";\r\nvar REVERT_BUTTON_CLASS = \"dx-revert-button\";\r\nvar VALIDATOR_CLASS = \"validator\";\r\nvar PENDING_INDICATOR_CLASS = \"dx-pending-indicator\";\r\nvar VALIDATION_PENDING_CLASS = \"dx-validation-pending\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar INSERT_INDEX = \"__DX_INSERT_INDEX__\";\r\nvar PADDING_BETWEEN_TOOLTIPS = 2;\r\nvar EDIT_MODE_ROW = \"row\";\r\nvar EDIT_MODE_FORM = \"form\";\r\nvar EDIT_MODE_BATCH = \"batch\";\r\nvar EDIT_MODE_CELL = \"cell\";\r\nvar EDIT_MODE_POPUP = \"popup\";\r\nvar GROUP_CELL_CLASS = \"dx-group-cell\";\r\nvar FORM_BASED_MODES = [EDIT_MODE_POPUP, EDIT_MODE_FORM];\r\nvar COMMAND_TRANSPARENT = \"transparent\";\r\nvar VALIDATION_STATUS = {\r\n    valid: \"valid\",\r\n    invalid: \"invalid\",\r\n    pending: \"pending\"\r\n};\r\nvar EDIT_DATA_INSERT_TYPE = \"insert\";\r\nvar EDIT_DATA_REMOVE_TYPE = \"remove\";\r\nvar VALIDATION_CANCELLED = \"cancel\";\r\nvar validationResultIsValid = function(result) {\r\n    return isDefined(result) && result !== VALIDATION_CANCELLED\r\n};\r\nvar cellValueShouldBeValidated = function(value, rowOptions) {\r\n    return void 0 !== value || void 0 === value && rowOptions && !rowOptions.isNewRow\r\n};\r\nvar ValidatingController = modules.Controller.inherit({\r\n    init: function() {\r\n        this._editingController = this.getController(\"editing\");\r\n        this.createAction(\"onRowValidating\");\r\n        if (!this._validationState) {\r\n            this.initValidationState()\r\n        }\r\n    },\r\n    initValidationState() {\r\n        this._validationState = [];\r\n        this._validationStateCache = {}\r\n    },\r\n    _rowIsValidated: function(change) {\r\n        var validationData = this._getValidationData(null === change || void 0 === change ? void 0 : change.key);\r\n        return !!validationData && !!validationData.validated\r\n    },\r\n    _getValidationData: function(key, create) {\r\n        var keyHash = getKeyHash(key);\r\n        var isObjectKeyHash = isObject(keyHash);\r\n        var validationData;\r\n        if (isObjectKeyHash) {\r\n            validationData = this._validationState.filter(data => equalByValue(data.key, key))[0]\r\n        } else {\r\n            validationData = this._validationStateCache[keyHash]\r\n        }\r\n        if (!validationData && create) {\r\n            validationData = {\r\n                key: key,\r\n                isValid: true\r\n            };\r\n            this._validationState.push(validationData);\r\n            if (!isObjectKeyHash) {\r\n                this._validationStateCache[keyHash] = validationData\r\n            }\r\n        }\r\n        return validationData\r\n    },\r\n    _getBrokenRules: function(validationData, validationResults) {\r\n        var brokenRules;\r\n        if (validationResults) {\r\n            brokenRules = validationResults.brokenRules || validationResults.brokenRule && [validationResults.brokenRule]\r\n        } else {\r\n            brokenRules = validationData.brokenRules || []\r\n        }\r\n        return brokenRules\r\n    },\r\n    _rowValidating: function(validationData, validationResults) {\r\n        var deferred = new Deferred;\r\n        var change = this._editingController.getChangeByKey(null === validationData || void 0 === validationData ? void 0 : validationData.key);\r\n        var brokenRules = this._getBrokenRules(validationData, validationResults);\r\n        var isValid = validationResults ? validationResults.isValid : validationData.isValid;\r\n        var parameters = {\r\n            brokenRules: brokenRules,\r\n            isValid: isValid,\r\n            key: change.key,\r\n            newData: change.data,\r\n            oldData: this._editingController._getOldData(change.key),\r\n            promise: null,\r\n            errorText: this.getHiddenValidatorsErrorText(brokenRules)\r\n        };\r\n        this.executeAction(\"onRowValidating\", parameters);\r\n        when(fromPromise(parameters.promise)).always((function() {\r\n            validationData.isValid = parameters.isValid;\r\n            validationData.errorText = parameters.errorText;\r\n            deferred.resolve(parameters)\r\n        }));\r\n        return deferred.promise()\r\n    },\r\n    getHiddenValidatorsErrorText: function(brokenRules) {\r\n        var brokenRulesMessages = [];\r\n        each(brokenRules, (function(_, brokenRule) {\r\n            var column = brokenRule.column;\r\n            var isGroupExpandColumn = column && void 0 !== column.groupIndex && !column.showWhenGrouped;\r\n            var isVisibleColumn = column && column.visible;\r\n            if (!brokenRule.validator.$element().parent().length && (!isVisibleColumn || isGroupExpandColumn)) {\r\n                brokenRulesMessages.push(brokenRule.message)\r\n            }\r\n        }));\r\n        return brokenRulesMessages.join(\", \")\r\n    },\r\n    validate: function(isFull) {\r\n        var isValid = true;\r\n        var editingController = this._editingController;\r\n        var deferred = new Deferred;\r\n        var completeList = [];\r\n        var editMode = editingController.getEditMode();\r\n        isFull = isFull || editMode === EDIT_MODE_ROW;\r\n        if (this._isValidationInProgress) {\r\n            return deferred.resolve(false).promise()\r\n        }\r\n        this._isValidationInProgress = true;\r\n        if (isFull) {\r\n            editingController.addDeferred(deferred);\r\n            var changes = editingController.getChanges();\r\n            each(changes, (index, _ref) => {\r\n                var {\r\n                    type: type,\r\n                    key: key\r\n                } = _ref;\r\n                if (\"remove\" !== type) {\r\n                    var validationData = this._getValidationData(key, true);\r\n                    var validationResult = this.validateGroup(validationData);\r\n                    completeList.push(validationResult);\r\n                    validationResult.done(validationResult => {\r\n                        validationData.validated = true;\r\n                        isValid = isValid && validationResult.isValid\r\n                    })\r\n                }\r\n            })\r\n        } else if (this._currentCellValidator) {\r\n            var validationResult = this.validateGroup(this._currentCellValidator._findGroup());\r\n            completeList.push(validationResult);\r\n            validationResult.done(validationResult => {\r\n                isValid = validationResult.isValid\r\n            })\r\n        }\r\n        when(...completeList).done(() => {\r\n            this._isValidationInProgress = false;\r\n            deferred.resolve(isValid)\r\n        });\r\n        return deferred.promise()\r\n    },\r\n    validateGroup: function(validationData) {\r\n        var _validationResult;\r\n        var result = new Deferred;\r\n        var validateGroup = validationData && ValidationEngine.getGroupConfig(validationData);\r\n        var validationResult;\r\n        if (null !== validateGroup && void 0 !== validateGroup && validateGroup.validators.length) {\r\n            this.resetRowValidationResults(validationData);\r\n            validationResult = ValidationEngine.validateGroup(validationData)\r\n        }\r\n        when((null === (_validationResult = validationResult) || void 0 === _validationResult ? void 0 : _validationResult.complete) || validationResult).done(validationResult => {\r\n            when(this._rowValidating(validationData, validationResult)).done(result.resolve)\r\n        });\r\n        return result.promise()\r\n    },\r\n    isRowDataModified: change => !isEmptyObject(change.data),\r\n    updateValidationState: function(change) {\r\n        var editMode = this._editingController.getEditMode();\r\n        var key = change.key;\r\n        var validationData = this._getValidationData(key, true);\r\n        if (-1 === FORM_BASED_MODES.indexOf(editMode)) {\r\n            if (change.type === EDIT_DATA_INSERT_TYPE && !this.isRowDataModified(change)) {\r\n                validationData.isValid = true;\r\n                return\r\n            }\r\n            this.setDisableApplyValidationResults(true);\r\n            var groupConfig = ValidationEngine.getGroupConfig(validationData);\r\n            if (groupConfig) {\r\n                var validationResult = ValidationEngine.validateGroup(validationData);\r\n                when(validationResult.complete || validationResult).done(validationResult => {\r\n                    validationData.isValid = validationResult.isValid;\r\n                    validationData.brokenRules = validationResult.brokenRules\r\n                })\r\n            } else if (!validationData.brokenRules || !validationData.brokenRules.length) {\r\n                validationData.isValid = true\r\n            }\r\n            this.setDisableApplyValidationResults(false)\r\n        } else {\r\n            validationData.isValid = true\r\n        }\r\n    },\r\n    setValidator: function(validator) {\r\n        this._currentCellValidator = validator\r\n    },\r\n    renderCellPendingIndicator: function($container) {\r\n        var $indicator = $container.find(\".\" + PENDING_INDICATOR_CLASS);\r\n        if (!$indicator.length) {\r\n            var $indicatorContainer = $container;\r\n            $indicator = $(\"<div>\").appendTo($indicatorContainer).addClass(PENDING_INDICATOR_CLASS);\r\n            this._createComponent($indicator, LoadIndicator);\r\n            $container.addClass(VALIDATION_PENDING_CLASS)\r\n        }\r\n    },\r\n    disposeCellPendingIndicator: function($container) {\r\n        var $indicator = $container.find(\".\" + PENDING_INDICATOR_CLASS);\r\n        if ($indicator.length) {\r\n            var indicator = LoadIndicator.getInstance($indicator);\r\n            if (indicator) {\r\n                indicator.dispose();\r\n                indicator.$element().remove()\r\n            }\r\n            $container.removeClass(VALIDATION_PENDING_CLASS)\r\n        }\r\n    },\r\n    validationStatusChanged: function(result) {\r\n        var validator = result.validator;\r\n        var validationGroup = validator.option(\"validationGroup\");\r\n        var column = validator.option(\"dataGetter\")().column;\r\n        this.updateCellValidationResult({\r\n            rowKey: validationGroup.key,\r\n            columnIndex: column.index,\r\n            validationResult: result\r\n        })\r\n    },\r\n    validatorInitialized: function(arg) {\r\n        arg.component.on(\"validating\", this.validationStatusChanged.bind(this));\r\n        arg.component.on(\"validated\", this.validationStatusChanged.bind(this))\r\n    },\r\n    validatorDisposing: function(arg) {\r\n        var validator = arg.component;\r\n        var validationGroup = validator.option(\"validationGroup\");\r\n        var column = validator.option(\"dataGetter\")().column;\r\n        var result = this.getCellValidationResult({\r\n            rowKey: null === validationGroup || void 0 === validationGroup ? void 0 : validationGroup.key,\r\n            columnIndex: column.index\r\n        });\r\n        if (validationResultIsValid(result) && result.status === VALIDATION_STATUS.pending) {\r\n            this.cancelCellValidationResult({\r\n                change: validationGroup,\r\n                columnIndex: column.index\r\n            })\r\n        }\r\n    },\r\n    applyValidationResult: function($container, result) {\r\n        var validator = result.validator;\r\n        var validationGroup = validator.option(\"validationGroup\");\r\n        var column = validator.option(\"dataGetter\")().column;\r\n        result.brokenRules && result.brokenRules.forEach(rule => {\r\n            rule.columnIndex = column.index;\r\n            rule.column = column\r\n        });\r\n        if ($container) {\r\n            var validationResult = this.getCellValidationResult({\r\n                rowKey: validationGroup.key,\r\n                columnIndex: column.index\r\n            });\r\n            var requestIsDisabled = validationResultIsValid(validationResult) && validationResult.disabledPendingId === result.id;\r\n            if (this._disableApplyValidationResults || requestIsDisabled) {\r\n                return\r\n            }\r\n            if (result.status === VALIDATION_STATUS.invalid) {\r\n                var $focus = $container.find(\":focus\");\r\n                if (!focused($focus)) {\r\n                    eventsEngine.trigger($focus, \"focus\");\r\n                    eventsEngine.trigger($focus, pointerEvents.down)\r\n                }\r\n            }\r\n            var editor = !column.editCellTemplate && this.getController(\"editorFactory\").getEditorInstance($container);\r\n            if (result.status === VALIDATION_STATUS.pending) {\r\n                if (editor) {\r\n                    editor.option(\"validationStatus\", VALIDATION_STATUS.pending)\r\n                } else {\r\n                    this.renderCellPendingIndicator($container)\r\n                }\r\n            } else if (editor) {\r\n                editor.option(\"validationStatus\", VALIDATION_STATUS.valid)\r\n            } else {\r\n                this.disposeCellPendingIndicator($container)\r\n            }\r\n            $container.toggleClass(this.addWidgetPrefix(INVALIDATE_CLASS), result.status === VALIDATION_STATUS.invalid)\r\n        }\r\n    },\r\n    _syncInternalEditingData: function(parameters) {\r\n        var _parameters$row;\r\n        var editingController = this._editingController;\r\n        var change = editingController.getChangeByKey(parameters.key);\r\n        var oldDataFromState = editingController._getOldData(parameters.key);\r\n        var oldData = null === (_parameters$row = parameters.row) || void 0 === _parameters$row ? void 0 : _parameters$row.oldData;\r\n        if (change && oldData && !oldDataFromState) {\r\n            editingController._addInternalData({\r\n                key: parameters.key,\r\n                oldData: oldData\r\n            })\r\n        }\r\n    },\r\n    createValidator: function(parameters, $container) {\r\n        var editingController = this._editingController;\r\n        var column = parameters.column;\r\n        var showEditorAlways = column.showEditorAlways;\r\n        if (isDefined(column.command) || !column.validationRules || !Array.isArray(column.validationRules) || !column.validationRules.length) {\r\n            return\r\n        }\r\n        var editIndex = editingController.getIndexByKey(parameters.key, editingController.getChanges());\r\n        var needCreateValidator = editIndex > -1;\r\n        if (!needCreateValidator) {\r\n            if (!showEditorAlways) {\r\n                var columnsController = this.getController(\"columns\");\r\n                var visibleColumns = (null === columnsController || void 0 === columnsController ? void 0 : columnsController.getVisibleColumns()) || [];\r\n                showEditorAlways = visibleColumns.some((function(column) {\r\n                    return column.showEditorAlways\r\n                }))\r\n            }\r\n            var isEditRow = equalByValue(this.option(\"editing.editRowKey\"), parameters.key);\r\n            var isCellOrBatchEditingAllowed = editingController.isCellOrBatchEditMode() && editingController.allowUpdating({\r\n                row: parameters.row\r\n            });\r\n            needCreateValidator = isEditRow || isCellOrBatchEditingAllowed && showEditorAlways;\r\n            if (isCellOrBatchEditingAllowed && showEditorAlways) {\r\n                var _parameters$row$oldDa, _parameters$row2;\r\n                editingController._addInternalData({\r\n                    key: parameters.key,\r\n                    oldData: null !== (_parameters$row$oldDa = null === (_parameters$row2 = parameters.row) || void 0 === _parameters$row2 ? void 0 : _parameters$row2.oldData) && void 0 !== _parameters$row$oldDa ? _parameters$row$oldDa : parameters.data\r\n                })\r\n            }\r\n        }\r\n        if (needCreateValidator) {\r\n            if ($container && !$container.length) {\r\n                errors.log(\"E1050\");\r\n                return\r\n            }\r\n            this._syncInternalEditingData(parameters);\r\n            var validationData = this._getValidationData(parameters.key, true);\r\n            var getValue = () => {\r\n                var change = editingController.getChangeByKey(null === validationData || void 0 === validationData ? void 0 : validationData.key);\r\n                var value = column.calculateCellValue((null === change || void 0 === change ? void 0 : change.data) || {});\r\n                return void 0 !== value ? value : parameters.value\r\n            };\r\n            var useDefaultValidator = $container && $container.hasClass(\"dx-widget\");\r\n            $container && $container.addClass(this.addWidgetPrefix(VALIDATOR_CLASS));\r\n            var validator = new Validator($container || $(\"<div>\"), {\r\n                name: column.caption,\r\n                validationRules: extend(true, [], column.validationRules),\r\n                validationGroup: validationData,\r\n                adapter: useDefaultValidator ? null : {\r\n                    getValue: getValue,\r\n                    applyValidationResults: result => {\r\n                        this.applyValidationResult($container, result)\r\n                    }\r\n                },\r\n                dataGetter: function() {\r\n                    var key = null === validationData || void 0 === validationData ? void 0 : validationData.key;\r\n                    var change = editingController.getChangeByKey(key);\r\n                    var oldData = editingController._getOldData(key);\r\n                    return {\r\n                        data: createObjectWithChanges(oldData, null === change || void 0 === change ? void 0 : change.data),\r\n                        column: column\r\n                    }\r\n                },\r\n                onInitialized: this.validatorInitialized.bind(this),\r\n                onDisposing: this.validatorDisposing.bind(this)\r\n            });\r\n            if (useDefaultValidator) {\r\n                var adapter = validator.option(\"adapter\");\r\n                if (adapter) {\r\n                    adapter.getValue = getValue;\r\n                    adapter.validationRequestsCallbacks = []\r\n                }\r\n            }\r\n            return validator\r\n        }\r\n    },\r\n    setDisableApplyValidationResults: function(flag) {\r\n        this._disableApplyValidationResults = flag\r\n    },\r\n    getDisableApplyValidationResults: function() {\r\n        return this._disableApplyValidationResults\r\n    },\r\n    isCurrentValidatorProcessing: function(_ref2) {\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        } = _ref2;\r\n        return this._currentCellValidator && equalByValue(this._currentCellValidator.option(\"validationGroup\").key, rowKey) && this._currentCellValidator.option(\"dataGetter\")().column.index === columnIndex\r\n    },\r\n    validateCell: function(validator) {\r\n        var cellParams = {\r\n            rowKey: validator.option(\"validationGroup\").key,\r\n            columnIndex: validator.option(\"dataGetter\")().column.index\r\n        };\r\n        var validationResult = this.getCellValidationResult(cellParams);\r\n        var stateRestored = validationResultIsValid(validationResult);\r\n        if (!stateRestored) {\r\n            validationResult = validator.validate()\r\n        }\r\n        var deferred = new Deferred;\r\n        var adapter = validator.option(\"adapter\");\r\n        if (stateRestored && validationResult.status === VALIDATION_STATUS.pending) {\r\n            this.updateCellValidationResult(cellParams);\r\n            adapter.applyValidationResults(validationResult)\r\n        }\r\n        when(validationResult.complete || validationResult).done(validationResult => {\r\n            stateRestored && adapter.applyValidationResults(validationResult);\r\n            deferred.resolve(validationResult)\r\n        });\r\n        return deferred.promise()\r\n    },\r\n    updateCellValidationResult: function(_ref3) {\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex,\r\n            validationResult: validationResult\r\n        } = _ref3;\r\n        var validationData = this._getValidationData(rowKey);\r\n        if (!validationData) {\r\n            return\r\n        }\r\n        if (!validationData.validationResults) {\r\n            validationData.validationResults = {}\r\n        }\r\n        var result;\r\n        if (validationResult) {\r\n            result = extend({}, validationResult);\r\n            validationData.validationResults[columnIndex] = result;\r\n            if (validationResult.status === VALIDATION_STATUS.pending) {\r\n                if (this._editingController.getEditMode() === EDIT_MODE_CELL) {\r\n                    result.deferred = new Deferred;\r\n                    result.complete.always(() => {\r\n                        result.deferred.resolve()\r\n                    });\r\n                    this._editingController.addDeferred(result.deferred)\r\n                }\r\n                if (this._disableApplyValidationResults) {\r\n                    result.disabledPendingId = validationResult.id;\r\n                    return\r\n                }\r\n            }\r\n        } else {\r\n            result = validationData.validationResults[columnIndex]\r\n        }\r\n        if (result && result.disabledPendingId) {\r\n            delete result.disabledPendingId\r\n        }\r\n    },\r\n    getCellValidationResult: function(_ref4) {\r\n        var _validationData$valid;\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        } = _ref4;\r\n        var validationData = this._getValidationData(rowKey, true);\r\n        return null === validationData || void 0 === validationData ? void 0 : null === (_validationData$valid = validationData.validationResults) || void 0 === _validationData$valid ? void 0 : _validationData$valid[columnIndex]\r\n    },\r\n    removeCellValidationResult: function(_ref5) {\r\n        var {\r\n            change: change,\r\n            columnIndex: columnIndex\r\n        } = _ref5;\r\n        var validationData = this._getValidationData(null === change || void 0 === change ? void 0 : change.key);\r\n        if (validationData && validationData.validationResults) {\r\n            this.cancelCellValidationResult({\r\n                change: change,\r\n                columnIndex: columnIndex\r\n            });\r\n            delete validationData.validationResults[columnIndex]\r\n        }\r\n    },\r\n    cancelCellValidationResult: function(_ref6) {\r\n        var {\r\n            change: change,\r\n            columnIndex: columnIndex\r\n        } = _ref6;\r\n        var validationData = this._getValidationData(change.key);\r\n        if (change && validationData.validationResults) {\r\n            var result = validationData.validationResults[columnIndex];\r\n            if (result) {\r\n                result.deferred && result.deferred.reject(VALIDATION_CANCELLED);\r\n                validationData.validationResults[columnIndex] = VALIDATION_CANCELLED\r\n            }\r\n        }\r\n    },\r\n    resetRowValidationResults: function(validationData) {\r\n        if (validationData) {\r\n            validationData.validationResults && delete validationData.validationResults;\r\n            delete validationData.validated\r\n        }\r\n    },\r\n    isInvalidCell: function(_ref7) {\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        } = _ref7;\r\n        var result = this.getCellValidationResult({\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        });\r\n        return validationResultIsValid(result) && result.status === VALIDATION_STATUS.invalid\r\n    },\r\n    getCellValidator: function(_ref8) {\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        } = _ref8;\r\n        var validationData = this._getValidationData(rowKey);\r\n        var groupConfig = validationData && ValidationEngine.getGroupConfig(validationData);\r\n        var validators = groupConfig && groupConfig.validators;\r\n        return validators && validators.filter(v => {\r\n            var column = v.option(\"dataGetter\")().column;\r\n            return column ? column.index === columnIndex : false\r\n        })[0]\r\n    },\r\n    setCellValidationStatus: function(cellOptions) {\r\n        var validationResult = this.getCellValidationResult({\r\n            rowKey: cellOptions.key,\r\n            columnIndex: cellOptions.column.index\r\n        });\r\n        if (isDefined(validationResult)) {\r\n            cellOptions.validationStatus = validationResult !== VALIDATION_CANCELLED ? validationResult.status : VALIDATION_CANCELLED\r\n        } else {\r\n            delete cellOptions.validationStatus\r\n        }\r\n    }\r\n});\r\nexport var validatingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            editing: {\r\n                texts: {\r\n                    validationCancelChanges: messageLocalization.format(\"dxDataGrid-validationCancelChanges\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        validating: ValidatingController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                _addChange: function(changeParams) {\r\n                    var change = this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    if (change && changeParams.type !== EDIT_DATA_REMOVE_TYPE) {\r\n                        validatingController.updateValidationState(change)\r\n                    }\r\n                    return change\r\n                },\r\n                _handleChangesChange: function(args) {\r\n                    this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    args.value.forEach(change => {\r\n                        if (void 0 === validatingController._getValidationData(change.key)) {\r\n                            validatingController.updateValidationState(change)\r\n                        }\r\n                    })\r\n                },\r\n                _updateRowAndPageIndices: function() {\r\n                    var that = this;\r\n                    var startInsertIndex = that.getView(\"rowsView\").getTopVisibleItemIndex();\r\n                    var rowIndex = startInsertIndex;\r\n                    each(that.getChanges(), (_, _ref9) => {\r\n                        var {\r\n                            key: key,\r\n                            type: type\r\n                        } = _ref9;\r\n                        var validationData = this.getController(\"validating\")._getValidationData(key);\r\n                        if (validationData && !validationData.isValid && validationData.pageIndex !== that._pageIndex) {\r\n                            validationData.pageIndex = that._pageIndex;\r\n                            if (type === EDIT_DATA_INSERT_TYPE) {\r\n                                validationData.rowIndex = startInsertIndex\r\n                            } else {\r\n                                validationData.rowIndex = rowIndex\r\n                            }\r\n                            rowIndex++\r\n                        }\r\n                    })\r\n                },\r\n                _getValidationGroupsInForm: function(detailOptions) {\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var validationData = validatingController._getValidationData(detailOptions.key, true);\r\n                    return {\r\n                        validationGroup: validationData\r\n                    }\r\n                },\r\n                _validateEditFormAfterUpdate: function(row, isCustomSetCellValue) {\r\n                    if (isCustomSetCellValue && this._editForm && !row.isNewRow) {\r\n                        this._editForm.validate()\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _prepareEditCell: function(params) {\r\n                    var isNotCanceled = this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    if (isNotCanceled && params.column.showEditorAlways) {\r\n                        validatingController.updateValidationState({\r\n                            key: params.key\r\n                        })\r\n                    }\r\n                    return isNotCanceled\r\n                },\r\n                processItems: function(items, changeType) {\r\n                    var changes = this.getChanges();\r\n                    var dataController = this.getController(\"data\");\r\n                    var validatingController = this.getController(\"validating\");\r\n                    items = this.callBase(items, changeType);\r\n                    var itemsCount = items.length;\r\n                    var addInValidItem = function(change, validationData) {\r\n                        var data = {\r\n                            key: change.key\r\n                        };\r\n                        var index = function(change, items) {\r\n                            var index = -1;\r\n                            var isInsert = change.type === EDIT_DATA_INSERT_TYPE;\r\n                            var key = change.key;\r\n                            each(items, (function(i, item) {\r\n                                if (equalByValue(key, isInsert ? item.key : dataController.keyOf(item))) {\r\n                                    index = i;\r\n                                    return false\r\n                                }\r\n                            }));\r\n                            return index\r\n                        }(change, items);\r\n                        if (index >= 0) {\r\n                            return\r\n                        }\r\n                        validationData.rowIndex = validationData.rowIndex > itemsCount ? validationData.rowIndex % itemsCount : validationData.rowIndex;\r\n                        var rowIndex = validationData.rowIndex;\r\n                        data[INSERT_INDEX] = 1;\r\n                        items.splice(rowIndex, 0, data)\r\n                    };\r\n                    if (this.getEditMode() === EDIT_MODE_BATCH && \"prepend\" !== changeType && \"append\" !== changeType) {\r\n                        changes.forEach(change => {\r\n                            var key = change.key;\r\n                            var validationData = validatingController._getValidationData(key);\r\n                            if (validationData && change.type && validationData.pageIndex === this._pageIndex && (null === change || void 0 === change ? void 0 : change.pageIndex) !== this._pageIndex) {\r\n                                addInValidItem(change, validationData)\r\n                            }\r\n                        })\r\n                    }\r\n                    return items\r\n                },\r\n                processDataItem: function(item) {\r\n                    var isInserted = item.data[INSERT_INDEX];\r\n                    var key = isInserted ? item.data.key : item.key;\r\n                    var editMode = this.getEditMode();\r\n                    if (editMode === EDIT_MODE_BATCH && isInserted && key) {\r\n                        var changes = this.getChanges();\r\n                        var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n                        if (editIndex >= 0) {\r\n                            var change = changes[editIndex];\r\n                            if (change.type !== EDIT_DATA_INSERT_TYPE) {\r\n                                var oldData = this._getOldData(change.key);\r\n                                item.data = extend(true, {}, oldData, change.data);\r\n                                item.key = key\r\n                            }\r\n                        }\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _createInvisibleColumnValidators: function(changes) {\r\n                    var that = this;\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var columnsController = this.getController(\"columns\");\r\n                    var columns = columnsController.getColumns();\r\n                    var invisibleColumns = columnsController.getInvisibleColumns().filter(column => !column.isBand);\r\n                    var groupColumns = columnsController.getGroupColumns().filter(column => !column.showWhenGrouped && -1 === invisibleColumns.indexOf(column));\r\n                    var invisibleColumnValidators = [];\r\n                    var isCellVisible = (column, rowKey) => this._dataController.getRowIndexByKey(rowKey) >= 0 && invisibleColumns.indexOf(column) < 0;\r\n                    invisibleColumns.push(...groupColumns);\r\n                    if (-1 === FORM_BASED_MODES.indexOf(this.getEditMode())) {\r\n                        each(columns, (function(_, column) {\r\n                            changes.forEach((function(change) {\r\n                                var data;\r\n                                if (isCellVisible(column, change.key)) {\r\n                                    return\r\n                                }\r\n                                if (change.type === EDIT_DATA_INSERT_TYPE) {\r\n                                    data = change.data\r\n                                } else if (\"update\" === change.type) {\r\n                                    var oldData = that._getOldData(change.key);\r\n                                    data = createObjectWithChanges(oldData, change.data)\r\n                                }\r\n                                if (data) {\r\n                                    var validator = validatingController.createValidator({\r\n                                        column: column,\r\n                                        key: change.key,\r\n                                        value: column.calculateCellValue(data)\r\n                                    });\r\n                                    if (validator) {\r\n                                        invisibleColumnValidators.push(validator)\r\n                                    }\r\n                                }\r\n                            }))\r\n                        }))\r\n                    }\r\n                    return function() {\r\n                        invisibleColumnValidators.forEach((function(validator) {\r\n                            validator.dispose()\r\n                        }))\r\n                    }\r\n                },\r\n                _beforeSaveEditData: function(change, editIndex) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var validationData = validatingController._getValidationData(null === change || void 0 === change ? void 0 : change.key);\r\n                    if (change) {\r\n                        var isValid = \"remove\" === change.type || validationData.isValid;\r\n                        result = result || !isValid\r\n                    } else {\r\n                        var disposeValidators = this._createInvisibleColumnValidators(this.getChanges());\r\n                        result = new Deferred;\r\n                        this.executeOperation(result, () => {\r\n                            validatingController.validate(true).done(isFullValid => {\r\n                                disposeValidators();\r\n                                this._updateRowAndPageIndices();\r\n                                switch (this.getEditMode()) {\r\n                                    case EDIT_MODE_CELL:\r\n                                        if (!isFullValid) {\r\n                                            this._focusEditingCell()\r\n                                        }\r\n                                        break;\r\n                                    case EDIT_MODE_BATCH:\r\n                                        if (!isFullValid) {\r\n                                            this._resetEditRowKey();\r\n                                            this._resetEditColumnName();\r\n                                            this.getController(\"data\").updateItems()\r\n                                        }\r\n                                }\r\n                                result.resolve(!isFullValid)\r\n                            })\r\n                        })\r\n                    }\r\n                    return result.promise ? result.promise() : result\r\n                },\r\n                _beforeEditCell: function(rowIndex, columnIndex, item) {\r\n                    var result = this.callBase(rowIndex, columnIndex, item);\r\n                    if (this.getEditMode() === EDIT_MODE_CELL) {\r\n                        var $cell = this._rowsView._getCellElement(rowIndex, columnIndex);\r\n                        var validator = $cell && $cell.data(\"dxValidator\");\r\n                        var rowOptions = $cell && $cell.closest(\".dx-row\").data(\"options\");\r\n                        var value = validator && validator.option(\"adapter\").getValue();\r\n                        if (validator && cellValueShouldBeValidated(value, rowOptions)) {\r\n                            var validatingController = this.getController(\"validating\");\r\n                            var deferred = new Deferred;\r\n                            when(validatingController.validateCell(validator), result).done((validationResult, result) => {\r\n                                deferred.resolve(validationResult.status === VALIDATION_STATUS.valid && result)\r\n                            });\r\n                            return deferred.promise()\r\n                        } else if (!validator) {\r\n                            return result\r\n                        }\r\n                    }\r\n                },\r\n                _afterSaveEditData: function(cancel) {\r\n                    var $firstErrorRow;\r\n                    var isCellEditMode = this.getEditMode() === EDIT_MODE_CELL;\r\n                    each(this.getChanges(), (_, change) => {\r\n                        var $errorRow = this._showErrorRow(change);\r\n                        $firstErrorRow = $firstErrorRow || $errorRow\r\n                    });\r\n                    if ($firstErrorRow) {\r\n                        var scrollable = this._rowsView.getScrollable();\r\n                        if (scrollable) {\r\n                            scrollable.update();\r\n                            scrollable.scrollToElement($firstErrorRow)\r\n                        }\r\n                    }\r\n                    if (cancel && isCellEditMode && this._needUpdateRow()) {\r\n                        var editRowIndex = this.getEditRowIndex();\r\n                        this._dataController.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: [editRowIndex]\r\n                        });\r\n                        this._focusEditingCell()\r\n                    } else if (!cancel) {\r\n                        var shouldResetValidationState = true;\r\n                        if (isCellEditMode) {\r\n                            var columns = this.getController(\"columns\").getColumns();\r\n                            var columnsWithValidatingEditors = columns.filter(col => {\r\n                                var _col$validationRules;\r\n                                return col.showEditorAlways && (null === (_col$validationRules = col.validationRules) || void 0 === _col$validationRules ? void 0 : _col$validationRules.length) > 0\r\n                            }).length > 0;\r\n                            shouldResetValidationState = !columnsWithValidatingEditors\r\n                        }\r\n                        if (shouldResetValidationState) {\r\n                            this.getController(\"validating\").initValidationState()\r\n                        }\r\n                    }\r\n                },\r\n                _handleDataChanged: function(args) {\r\n                    var validationState = this.getController(\"validating\")._validationState;\r\n                    if (\"standard\" === this.option(\"scrolling.mode\")) {\r\n                        this.resetRowAndPageIndices()\r\n                    }\r\n                    if (\"prepend\" === args.changeType) {\r\n                        each(validationState, (function(_, validationData) {\r\n                            validationData.rowIndex += args.items.length\r\n                        }))\r\n                    }\r\n                    this.callBase(args)\r\n                },\r\n                resetRowAndPageIndices: function() {\r\n                    var validationState = this.getController(\"validating\")._validationState;\r\n                    each(validationState, (_, validationData) => {\r\n                        if (validationData.pageIndex !== this._pageIndex) {\r\n                            delete validationData.pageIndex;\r\n                            delete validationData.rowIndex\r\n                        }\r\n                    })\r\n                },\r\n                _beforeCancelEditData: function() {\r\n                    this.getController(\"validating\").initValidationState();\r\n                    this.callBase()\r\n                },\r\n                _showErrorRow: function(change) {\r\n                    var $popupContent;\r\n                    var errorHandling = this.getController(\"errorHandling\");\r\n                    var items = this.getController(\"data\").items();\r\n                    var rowIndex = this.getIndexByKey(change.key, items);\r\n                    var validationData = this.getController(\"validating\")._getValidationData(change.key);\r\n                    if (!(null !== validationData && void 0 !== validationData && validationData.isValid) && null !== validationData && void 0 !== validationData && validationData.errorText && rowIndex >= 0) {\r\n                        $popupContent = this.getPopupContent();\r\n                        return errorHandling && errorHandling.renderErrorRow(null === validationData || void 0 === validationData ? void 0 : validationData.errorText, rowIndex, $popupContent)\r\n                    }\r\n                },\r\n                updateFieldValue: function(e) {\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var deferred = new Deferred;\r\n                    validatingController.removeCellValidationResult({\r\n                        change: this.getChangeByKey(e.key),\r\n                        columnIndex: e.column.index\r\n                    });\r\n                    this.callBase.apply(this, arguments).done(() => {\r\n                        var currentValidator = validatingController.getCellValidator({\r\n                            rowKey: e.key,\r\n                            columnIndex: e.column.index\r\n                        });\r\n                        when(currentValidator && validatingController.validateCell(currentValidator)).done(validationResult => {\r\n                            this.getController(\"editorFactory\").refocus();\r\n                            deferred.resolve(validationResult)\r\n                        })\r\n                    });\r\n                    return deferred.promise()\r\n                },\r\n                highlightDataCell: function($cell, parameters) {\r\n                    this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    validatingController.setCellValidationStatus(parameters);\r\n                    var isEditableCell = !!parameters.setValue;\r\n                    var cellModified = this.isCellModified(parameters);\r\n                    var isValidated = isDefined(parameters.validationStatus);\r\n                    var needValidation = cellModified && parameters.column.setCellValue || isEditableCell && !cellModified && !(parameters.row.isNewRow || !isValidated);\r\n                    if (needValidation) {\r\n                        var validator = $cell.data(\"dxValidator\");\r\n                        if (validator) {\r\n                            when(this.getController(\"validating\").validateCell(validator)).done(() => {\r\n                                validatingController.setCellValidationStatus(parameters)\r\n                            })\r\n                        }\r\n                    }\r\n                },\r\n                getChangeByKey: function(key) {\r\n                    var changes = this.getChanges();\r\n                    return changes[gridCoreUtils.getIndexByKey(key, changes)]\r\n                },\r\n                isCellModified: function(parameters) {\r\n                    var cellModified = this.callBase(parameters);\r\n                    var change = this.getChangeByKey(parameters.key);\r\n                    var isCellInvalid = !!parameters.row && this.getController(\"validating\").isInvalidCell({\r\n                        rowKey: parameters.key,\r\n                        columnIndex: parameters.column.index\r\n                    });\r\n                    return cellModified || this.getController(\"validating\")._rowIsValidated(change) && isCellInvalid\r\n                }\r\n            },\r\n            editorFactory: {\r\n                _showRevertButton: function($container) {\r\n                    if (!$container || !$container.length) {\r\n                        return\r\n                    }\r\n                    var $tooltipElement = this._rowsView.element().find(\".\" + this.addWidgetPrefix(REVERT_TOOLTIP_CLASS));\r\n                    var $overlayContainer = $container.closest(\".\".concat(this.addWidgetPrefix(CONTENT_CLASS)));\r\n                    $tooltipElement && $tooltipElement.remove();\r\n                    $tooltipElement = $(\"<div>\").addClass(this.addWidgetPrefix(REVERT_TOOLTIP_CLASS)).appendTo($container);\r\n                    var tooltipOptions = {\r\n                        animation: null,\r\n                        visible: true,\r\n                        width: \"auto\",\r\n                        height: \"auto\",\r\n                        target: $container,\r\n                        shading: false,\r\n                        container: $overlayContainer,\r\n                        propagateOutsideClick: true,\r\n                        closeOnOutsideClick: false,\r\n                        copyRootClassesToWrapper: true,\r\n                        _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n                        contentTemplate: () => {\r\n                            var $buttonElement = $(\"<div>\").addClass(REVERT_BUTTON_CLASS);\r\n                            var buttonOptions = {\r\n                                icon: \"revert\",\r\n                                hint: this.option(\"editing.texts.validationCancelChanges\"),\r\n                                onClick: () => {\r\n                                    this._editingController.cancelEditData()\r\n                                }\r\n                            };\r\n                            return new Button($buttonElement, buttonOptions).$element()\r\n                        },\r\n                        position: {\r\n                            my: \"left top\",\r\n                            at: \"right top\",\r\n                            offset: \"1 0\",\r\n                            collision: \"flip\",\r\n                            boundaryOffset: \"0 0\",\r\n                            boundary: this._rowsView.element()\r\n                        },\r\n                        onPositioned: this._positionedHandler.bind(this)\r\n                    };\r\n                    return new Overlay($tooltipElement, tooltipOptions)\r\n                },\r\n                _hideFixedGroupCell: function($cell, overlayOptions) {\r\n                    var $nextFixedRowElement;\r\n                    var $groupCellElement;\r\n                    var isFixedColumns = this._rowsView.isFixedColumns();\r\n                    var isFormOrPopupEditMode = this._editingController.isFormOrPopupEditMode();\r\n                    if (isFixedColumns && !isFormOrPopupEditMode) {\r\n                        var nextRowOptions = $cell.closest(\".dx-row\").next().data(\"options\");\r\n                        if (nextRowOptions && \"group\" === nextRowOptions.rowType) {\r\n                            $nextFixedRowElement = $(this._rowsView.getRowElement(nextRowOptions.rowIndex)).last();\r\n                            $groupCellElement = $nextFixedRowElement.find(\".\" + GROUP_CELL_CLASS);\r\n                            if ($groupCellElement.length && \"hidden\" !== $groupCellElement.get(0).style.visibility) {\r\n                                $groupCellElement.css(\"visibility\", \"hidden\");\r\n                                overlayOptions.onDisposing = function() {\r\n                                    $groupCellElement.css(\"visibility\", \"\")\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _positionedHandler: function(e, isOverlayVisible) {\r\n                    if (!e.component.__skipPositionProcessing) {\r\n                        var isRevertButton = $(e.element).hasClass(this.addWidgetPrefix(REVERT_TOOLTIP_CLASS));\r\n                        var needRepaint = !isRevertButton && this._rowsView.updateFreeSpaceRowHeight();\r\n                        var normalizedPosition = this._normalizeValidationMessagePositionAndMaxWidth(e, isRevertButton, isOverlayVisible);\r\n                        e.component.__skipPositionProcessing = !!(needRepaint || normalizedPosition);\r\n                        if (normalizedPosition) {\r\n                            e.component.option(normalizedPosition)\r\n                        } else if (needRepaint) {\r\n                            e.component.repaint()\r\n                        }\r\n                    }\r\n                },\r\n                _showValidationMessage: function($cell, messages, alignment, revertTooltip) {\r\n                    var editorPopup = $cell.find(\".dx-dropdowneditor-overlay\").data(\"dxPopup\");\r\n                    var isOverlayVisible = editorPopup && editorPopup.option(\"visible\");\r\n                    var myPosition = isOverlayVisible ? \"top right\" : \"top \" + alignment;\r\n                    var atPosition = isOverlayVisible ? \"top left\" : \"bottom \" + alignment;\r\n                    var $overlayContainer = $cell.closest(\".\".concat(this.addWidgetPrefix(CONTENT_CLASS)));\r\n                    var errorMessageText = \"\";\r\n                    messages && messages.forEach((function(message) {\r\n                        errorMessageText += (errorMessageText.length ? \"<br/>\" : \"\") + encodeHtml(message)\r\n                    }));\r\n                    var invalidMessageClass = this.addWidgetPrefix(WIDGET_INVALID_MESSAGE_CLASS);\r\n                    this._rowsView.element().find(\".\" + invalidMessageClass).remove();\r\n                    var $overlayElement = $(\"<div>\").addClass(INVALID_MESSAGE_CLASS).addClass(INVALID_MESSAGE_ALWAYS_CLASS).addClass(invalidMessageClass).html(errorMessageText).appendTo($cell);\r\n                    var overlayOptions = {\r\n                        target: $cell,\r\n                        container: $overlayContainer,\r\n                        shading: false,\r\n                        width: \"auto\",\r\n                        height: \"auto\",\r\n                        visible: true,\r\n                        animation: false,\r\n                        propagateOutsideClick: true,\r\n                        closeOnOutsideClick: false,\r\n                        copyRootClassesToWrapper: true,\r\n                        _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n                        position: {\r\n                            collision: \"flip\",\r\n                            boundary: this._rowsView.element(),\r\n                            boundaryOffset: \"0 0\",\r\n                            offset: {\r\n                                x: 0,\r\n                                y: !isOverlayVisible && browser.mozilla ? -1 : 0\r\n                            },\r\n                            my: myPosition,\r\n                            at: atPosition\r\n                        },\r\n                        onPositioned: e => {\r\n                            this._positionedHandler(e, isOverlayVisible);\r\n                            this._shiftValidationMessageIfNeed(e.component.$content(), revertTooltip && revertTooltip.$content(), $cell)\r\n                        }\r\n                    };\r\n                    this._hideFixedGroupCell($cell, overlayOptions);\r\n                    new Overlay($overlayElement, overlayOptions)\r\n                },\r\n                _normalizeValidationMessagePositionAndMaxWidth: function(options, isRevertButton, isOverlayVisible) {\r\n                    var fixedColumns = this._columnsController.getFixedColumns();\r\n                    if (!fixedColumns || !fixedColumns.length) {\r\n                        return\r\n                    }\r\n                    var position;\r\n                    var visibleTableWidth = !isRevertButton && (that = this, element = options.element, rowIndex = $(element).closest(\"tr\").index(), $cellElements = $(that._rowsView.getRowElement(rowIndex)).first().children().filter(\":not(.dx-hidden-cell)\"), that._rowsView._getWidths($cellElements).reduce((w1, w2) => w1 + w2, 0));\r\n                    var that, element, rowIndex, $cellElements;\r\n                    var $overlayContentElement = options.component.$content();\r\n                    var validationMessageWidth = getOuterWidth($overlayContentElement, true);\r\n                    var needMaxWidth = !isRevertButton && validationMessageWidth > visibleTableWidth;\r\n                    var columnIndex = this._rowsView.getCellIndex($(options.element).closest(\"td\"));\r\n                    var boundaryNonFixedColumnsInfo = function(fixedColumns) {\r\n                        var firstNonFixedColumnIndex;\r\n                        var lastNonFixedColumnIndex;\r\n                        fixedColumns.some((column, index) => {\r\n                            if (column.command === COMMAND_TRANSPARENT) {\r\n                                firstNonFixedColumnIndex = 0 === index ? -1 : index;\r\n                                lastNonFixedColumnIndex = index === fixedColumns.length - 1 ? -1 : index + column.colspan - 1;\r\n                                return true\r\n                            }\r\n                        });\r\n                        return {\r\n                            startColumnIndex: firstNonFixedColumnIndex,\r\n                            endColumnIndex: lastNonFixedColumnIndex\r\n                        }\r\n                    }(fixedColumns);\r\n                    if (!isRevertButton && (columnIndex === boundaryNonFixedColumnsInfo.startColumnIndex || needMaxWidth)) {\r\n                        position = {\r\n                            collision: \"none flip\",\r\n                            my: \"top left\",\r\n                            at: isOverlayVisible ? \"top right\" : \"bottom left\"\r\n                        }\r\n                    } else if (columnIndex === boundaryNonFixedColumnsInfo.endColumnIndex) {\r\n                        position = {\r\n                            collision: \"none flip\",\r\n                            my: \"top right\",\r\n                            at: isRevertButton || isOverlayVisible ? \"top left\" : \"bottom right\"\r\n                        };\r\n                        if (isRevertButton) {\r\n                            position.offset = \"-1 0\"\r\n                        }\r\n                    }\r\n                    return position && {\r\n                        position: position,\r\n                        maxWidth: needMaxWidth ? visibleTableWidth - 2 : void 0\r\n                    }\r\n                },\r\n                _shiftValidationMessageIfNeed: function($content, $revertContent, $cell) {\r\n                    if (!$revertContent) {\r\n                        return\r\n                    }\r\n                    var contentOffset = $content.offset();\r\n                    var revertContentOffset = $revertContent.offset();\r\n                    if (contentOffset.top === revertContentOffset.top && contentOffset.left + getWidth($content) > revertContentOffset.left) {\r\n                        var left = getWidth($revertContent) + PADDING_BETWEEN_TOOLTIPS;\r\n                        $content.css(\"left\", revertContentOffset.left < $cell.offset().left ? -left : left)\r\n                    }\r\n                },\r\n                _getTooltipsSelector: function() {\r\n                    var invalidMessageClass = this.addWidgetPrefix(WIDGET_INVALID_MESSAGE_CLASS);\r\n                    var revertTooltipClass = this.addWidgetPrefix(REVERT_TOOLTIP_CLASS);\r\n                    return \".dx-editor-cell .\" + revertTooltipClass + \", .dx-editor-cell .\" + invalidMessageClass + \", .dx-cell-modified .\" + invalidMessageClass\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._editingController = this.getController(\"editing\");\r\n                    this._columnsController = this.getController(\"columns\");\r\n                    this._rowsView = this.getView(\"rowsView\")\r\n                },\r\n                loseFocus: function(skipValidator) {\r\n                    if (!skipValidator) {\r\n                        this.getController(\"validating\").setValidator(null)\r\n                    }\r\n                    this.callBase()\r\n                },\r\n                updateCellState: function($element, validationResult, hideBorder) {\r\n                    var _change$data;\r\n                    var $focus = null === $element || void 0 === $element ? void 0 : $element.closest(this._getFocusCellSelector());\r\n                    var $cell = null !== $focus && void 0 !== $focus && $focus.is(\"td\") ? $focus : null;\r\n                    var rowOptions = null === $focus || void 0 === $focus ? void 0 : $focus.closest(\".dx-row\").data(\"options\");\r\n                    var change = rowOptions ? this.getController(\"editing\").getChangeByKey(rowOptions.key) : null;\r\n                    var column = $cell && this.getController(\"columns\").getVisibleColumns()[$cell.index()];\r\n                    var isCellModified = void 0 !== (null === change || void 0 === change ? void 0 : null === (_change$data = change.data) || void 0 === _change$data ? void 0 : _change$data[null === column || void 0 === column ? void 0 : column.name]) && !this._editingController.isSaving();\r\n                    var revertTooltip;\r\n                    if ((null === validationResult || void 0 === validationResult ? void 0 : validationResult.status) === VALIDATION_STATUS.invalid || isCellModified) {\r\n                        if (this._editingController.getEditMode() === EDIT_MODE_CELL) {\r\n                            revertTooltip = this._showRevertButton($focus)\r\n                        }\r\n                    }\r\n                    var showValidationMessage = validationResult && validationResult.status === VALIDATION_STATUS.invalid;\r\n                    if (showValidationMessage && $cell && column && validationResult && validationResult.brokenRules) {\r\n                        var errorMessages = [];\r\n                        validationResult.brokenRules.forEach((function(rule) {\r\n                            errorMessages.push(rule.message)\r\n                        }));\r\n                        this._showValidationMessage($focus, errorMessages, column.alignment || \"left\", revertTooltip)\r\n                    }!hideBorder && this._rowsView.element() && this._rowsView.updateFreeSpaceRowHeight()\r\n                },\r\n                focus: function($element, hideBorder) {\r\n                    if (!arguments.length) {\r\n                        return this.callBase()\r\n                    }\r\n                    var $tooltips = $element && $element.closest(\".\" + this.addWidgetPrefix(ROWS_VIEW_CLASS)).find(this._getTooltipsSelector());\r\n                    $tooltips && $tooltips.remove();\r\n                    if (null !== $element && void 0 !== $element && $element.hasClass(\"dx-row\")) {\r\n                        return this.callBase($element, hideBorder)\r\n                    }\r\n                    var $focus = null === $element || void 0 === $element ? void 0 : $element.closest(this._getFocusCellSelector());\r\n                    var callBase = this.callBase;\r\n                    var validator = $focus && ($focus.data(\"dxValidator\") || $element.find(\".\" + this.addWidgetPrefix(VALIDATOR_CLASS)).eq(0).data(\"dxValidator\"));\r\n                    var rowOptions = $focus && $focus.closest(\".dx-row\").data(\"options\");\r\n                    var editingController = this.getController(\"editing\");\r\n                    var change = rowOptions ? editingController.getChangeByKey(rowOptions.key) : null;\r\n                    var validationResult;\r\n                    var validatingController = this.getController(\"validating\");\r\n                    if (validator) {\r\n                        validatingController.setValidator(validator);\r\n                        var value = validator.option(\"adapter\").getValue();\r\n                        if (cellValueShouldBeValidated(value, rowOptions) || validatingController._rowIsValidated(change)) {\r\n                            editingController.waitForDeferredOperations().done(() => {\r\n                                when(validatingController.validateCell(validator)).done(result => {\r\n                                    validationResult = result;\r\n                                    var column = validationResult.validator.option(\"dataGetter\")().column;\r\n                                    if (change && column && !validatingController.isCurrentValidatorProcessing({\r\n                                            rowKey: change.key,\r\n                                            columnIndex: column.index\r\n                                        })) {\r\n                                        return\r\n                                    }\r\n                                    if (validationResult.status === VALIDATION_STATUS.invalid) {\r\n                                        hideBorder = true\r\n                                    }\r\n                                    this.updateCellState($element, validationResult, hideBorder);\r\n                                    callBase.call(this, $element, hideBorder)\r\n                                })\r\n                            });\r\n                            return this.callBase($element, hideBorder)\r\n                        }\r\n                    }\r\n                    this.updateCellState($element, validationResult, hideBorder);\r\n                    return this.callBase($element, hideBorder)\r\n                },\r\n                getEditorInstance: function($container) {\r\n                    var $editor = $container.find(\".dx-texteditor\").eq(0);\r\n                    return gridCoreUtils.getWidgetInstance($editor)\r\n                }\r\n            },\r\n            data: {\r\n                _isCellChanged: function(oldRow, newRow, visibleRowIndex, columnIndex, isLiveUpdate) {\r\n                    var _oldRow$cells, _cell$column$validati;\r\n                    var cell = null === (_oldRow$cells = oldRow.cells) || void 0 === _oldRow$cells ? void 0 : _oldRow$cells[columnIndex];\r\n                    var oldValidationStatus = cell && cell.validationStatus;\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var validationResult = validatingController.getCellValidationResult({\r\n                        rowKey: oldRow.key,\r\n                        columnIndex: columnIndex\r\n                    });\r\n                    var validationData = validatingController._getValidationData(oldRow.key);\r\n                    var newValidationStatus = validationResultIsValid(validationResult) ? validationResult.status : validationResult;\r\n                    var rowIsModified = JSON.stringify(newRow.modifiedValues) !== JSON.stringify(oldRow.modifiedValues);\r\n                    var cellIsMarkedAsInvalid = $(null === cell || void 0 === cell ? void 0 : cell.cellElement).hasClass(this.addWidgetPrefix(INVALIDATE_CLASS));\r\n                    var editingChanged = oldRow.isEditing !== newRow.isEditing;\r\n                    var hasValidationRules = null === cell || void 0 === cell ? void 0 : null === (_cell$column$validati = cell.column.validationRules) || void 0 === _cell$column$validati ? void 0 : _cell$column$validati.length;\r\n                    if (editingChanged && hasValidationRules || oldValidationStatus !== newValidationStatus && rowIsModified || validationData.isValid && cellIsMarkedAsInvalid) {\r\n                        return true\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                updateFreeSpaceRowHeight: function($table) {\r\n                    var $rowElements;\r\n                    var $freeSpaceRowElement;\r\n                    var $freeSpaceRowElements;\r\n                    var $element = this.element();\r\n                    var $tooltipContent = $element && $element.find(\".\" + this.addWidgetPrefix(WIDGET_INVALID_MESSAGE_CLASS) + \" .dx-overlay-content\");\r\n                    this.callBase($table);\r\n                    if ($tooltipContent && $tooltipContent.length) {\r\n                        $rowElements = this._getRowElements();\r\n                        $freeSpaceRowElements = this._getFreeSpaceRowElements($table);\r\n                        $freeSpaceRowElement = $freeSpaceRowElements.first();\r\n                        if ($freeSpaceRowElement && 1 === $rowElements.length && (!$freeSpaceRowElement.is(\":visible\") || getOuterHeight($tooltipContent) > getOuterHeight($freeSpaceRowElement))) {\r\n                            $freeSpaceRowElements.show();\r\n                            setHeight($freeSpaceRowElements, getOuterHeight($tooltipContent));\r\n                            return true\r\n                        }\r\n                    }\r\n                },\r\n                _formItemPrepared: function(cellOptions, $container) {\r\n                    this.callBase.apply(this, arguments);\r\n                    deferUpdate(() => {\r\n                        var $editor = $container.find(\".dx-widget\").first();\r\n                        var isEditorDisposed = $editor.length && !$editor.children().length;\r\n                        if (!isEditorDisposed) {\r\n                            this.getController(\"validating\").createValidator(cellOptions, $editor)\r\n                        }\r\n                    })\r\n                },\r\n                _cellPrepared: function($cell, parameters) {\r\n                    if (!this.getController(\"editing\").isFormOrPopupEditMode()) {\r\n                        this.getController(\"validating\").createValidator(parameters, $cell)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _restoreErrorRow: function(contentTable) {\r\n                    var editingController = this.getController(\"editing\");\r\n                    editingController && editingController.hasChanges() && this._getRowElements(contentTable).each((_, item) => {\r\n                        var rowOptions = $(item).data(\"options\");\r\n                        if (rowOptions) {\r\n                            var change = editingController.getChangeByKey(rowOptions.key);\r\n                            change && editingController._showErrorRow(change)\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.validating.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    validatingModule\r\n} from \"../grid_core/ui.grid_core.validating\";\r\ngridCore.registerModule(\"validating\", validatingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid.core.virtual_data_loader.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isObject,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\nvar needTwoPagesLoading = that => that.option(\"scrolling.loadTwoPagesOnStart\") || that._controller.isVirtual() || that._controller.getViewportItemIndex() > 0;\r\nvar getBeginPageIndex = that => that._cache.length ? that._cache[0].pageIndex : -1;\r\nvar getEndPageIndex = that => that._cache.length ? that._cache[that._cache.length - 1].pageIndex : -1;\r\nvar fireChanged = (that, changed, args) => {\r\n    that._isChangedFiring = true;\r\n    changed(args);\r\n    that._isChangedFiring = false\r\n};\r\nvar processDelayChanged = (that, changed, args) => {\r\n    if (that._isDelayChanged) {\r\n        that._isDelayChanged = false;\r\n        fireChanged(that, changed, args);\r\n        return true\r\n    }\r\n};\r\nvar getViewportPageCount = that => {\r\n    var pageSize = that._dataOptions.pageSize();\r\n    var preventPreload = that.option(\"scrolling.preventPreload\");\r\n    if (preventPreload) {\r\n        return 0\r\n    }\r\n    var realViewportSize = that._controller.viewportSize();\r\n    if (that._controller.isVirtualMode() && that.option(\"scrolling.removeInvisiblePages\")) {\r\n        realViewportSize = 0;\r\n        var viewportSize = that._controller.viewportSize() * that._controller.viewportItemSize();\r\n        var offset = that._controller.getContentOffset();\r\n        var position = that._controller.getViewportPosition();\r\n        var virtualItemsCount = that._controller.virtualItemsCount();\r\n        var totalItemsCount = that._dataOptions.totalItemsCount();\r\n        for (var itemIndex = virtualItemsCount.begin; itemIndex < totalItemsCount; itemIndex++) {\r\n            if (offset >= position + viewportSize) {\r\n                break\r\n            }\r\n            var itemSize = that._controller.getItemSizes()[itemIndex] || that._controller.viewportItemSize();\r\n            offset += itemSize;\r\n            if (offset >= position) {\r\n                realViewportSize++\r\n            }\r\n        }\r\n    }\r\n    return pageSize && realViewportSize > 0 ? Math.ceil(realViewportSize / pageSize) : 1\r\n};\r\nvar getPreloadPageCount = (that, previous) => {\r\n    var preloadEnabled = that.option(\"scrolling.preloadEnabled\");\r\n    var pageCount = getViewportPageCount(that);\r\n    var isAppendMode = that._controller.isAppendMode();\r\n    if (pageCount) {\r\n        if (previous) {\r\n            pageCount = preloadEnabled ? 1 : 0\r\n        } else {\r\n            if (preloadEnabled) {\r\n                pageCount++\r\n            }\r\n            if (isAppendMode || !needTwoPagesLoading(that)) {\r\n                pageCount--\r\n            }\r\n        }\r\n    }\r\n    return pageCount\r\n};\r\nvar getPageIndexForLoad = that => {\r\n    var result = -1;\r\n    var beginPageIndex = getBeginPageIndex(that);\r\n    var dataOptions = that._dataOptions;\r\n    if (beginPageIndex < 0) {\r\n        result = that._pageIndex\r\n    } else if (!that._cache[that._pageIndex - beginPageIndex]) {\r\n        result = that._pageIndex\r\n    } else if (beginPageIndex >= 0 && that._controller.viewportSize() >= 0) {\r\n        if (beginPageIndex > 0) {\r\n            var needToLoadPageBeforeLast = getEndPageIndex(that) + 1 === dataOptions.pageCount() && that._cache.length < getPreloadPageCount(that) + 1;\r\n            var needToLoadPrevPage = needToLoadPageBeforeLast || that._pageIndex === beginPageIndex && getPreloadPageCount(that, true);\r\n            if (needToLoadPrevPage) {\r\n                result = beginPageIndex - 1\r\n            }\r\n        }\r\n        if (result < 0) {\r\n            var needToLoadNextPage = beginPageIndex + that._cache.length <= that._pageIndex + getPreloadPageCount(that);\r\n            if (needToLoadNextPage) {\r\n                result = beginPageIndex + that._cache.length\r\n            }\r\n        }\r\n    }\r\n    if (that._loadingPageIndexes[result]) {\r\n        result = -1\r\n    }\r\n    return result\r\n};\r\nvar loadCore = (that, pageIndex) => {\r\n    var dataOptions = that._dataOptions;\r\n    if (pageIndex === that.pageIndex() || !dataOptions.isLoading() && pageIndex < dataOptions.pageCount() || !dataOptions.hasKnownLastPage() && pageIndex === dataOptions.pageCount()) {\r\n        dataOptions.pageIndex(pageIndex);\r\n        that._loadingPageIndexes[pageIndex] = true;\r\n        return when(dataOptions.load()).always(() => {\r\n            that._loadingPageIndexes[pageIndex] = false\r\n        })\r\n    }\r\n};\r\nvar processChanged = (that, changed, changeType, isDelayChanged, removeCacheItem) => {\r\n    var dataOptions = that._dataOptions;\r\n    var items = dataOptions.items().slice();\r\n    var change = isObject(changeType) ? changeType : void 0;\r\n    var isPrepend = \"prepend\" === changeType;\r\n    var viewportItems = dataOptions.viewportItems();\r\n    if (changeType && isString(changeType) && !that._isDelayChanged) {\r\n        change = {\r\n            changeType: changeType,\r\n            items: items\r\n        };\r\n        if (removeCacheItem) {\r\n            change.removeCount = removeCacheItem.itemsCount;\r\n            if (change.removeCount && dataOptions.correctCount) {\r\n                change.removeCount = dataOptions.correctCount(viewportItems, change.removeCount, isPrepend)\r\n            }\r\n        }\r\n    }\r\n    var removeItemCount = removeCacheItem ? removeCacheItem.itemsLength : 0;\r\n    if (removeItemCount && dataOptions.correctCount) {\r\n        removeItemCount = dataOptions.correctCount(viewportItems, removeItemCount, isPrepend)\r\n    }\r\n    if (\"append\" === changeType) {\r\n        viewportItems.push.apply(viewportItems, items);\r\n        if (removeCacheItem) {\r\n            viewportItems.splice(0, removeItemCount)\r\n        }\r\n    } else if (isPrepend) {\r\n        viewportItems.unshift.apply(viewportItems, items);\r\n        if (removeCacheItem) {\r\n            viewportItems.splice(-removeItemCount)\r\n        }\r\n    } else {\r\n        that._dataOptions.viewportItems(items)\r\n    }\r\n    dataOptions.updateLoading();\r\n    that._lastPageIndex = that.pageIndex();\r\n    that._isDelayChanged = isDelayChanged;\r\n    if (!isDelayChanged) {\r\n        fireChanged(that, changed, change)\r\n    }\r\n};\r\nexport class VirtualDataLoader {\r\n    constructor(controller, dataOptions) {\r\n        this._controller = controller;\r\n        this._dataOptions = dataOptions;\r\n        this._pageIndex = this._lastPageIndex = dataOptions.pageIndex();\r\n        this._cache = [];\r\n        this._loadingPageIndexes = {}\r\n    }\r\n    option() {\r\n        return this._controller.option.apply(this._controller, arguments)\r\n    }\r\n    viewportItemIndexChanged(itemIndex) {\r\n        var pageSize = this._dataOptions.pageSize();\r\n        var pageCount = this._dataOptions.pageCount();\r\n        var virtualMode = this._controller.isVirtualMode();\r\n        var appendMode = this._controller.isAppendMode();\r\n        var totalItemsCount = this._dataOptions.totalItemsCount();\r\n        var newPageIndex;\r\n        if (pageSize && (virtualMode || appendMode) && totalItemsCount >= 0) {\r\n            var viewportSize = this._controller.viewportSize();\r\n            if (viewportSize && itemIndex + viewportSize >= totalItemsCount && !this._controller.isVirtual()) {\r\n                if (this._dataOptions.hasKnownLastPage()) {\r\n                    newPageIndex = pageCount - 1;\r\n                    var lastPageSize = totalItemsCount % pageSize;\r\n                    if (newPageIndex > 0 && lastPageSize > 0 && lastPageSize < viewportSize) {\r\n                        newPageIndex--\r\n                    }\r\n                } else {\r\n                    newPageIndex = pageCount\r\n                }\r\n            } else {\r\n                newPageIndex = Math.floor(itemIndex / pageSize);\r\n                var maxPageIndex = pageCount - 1;\r\n                newPageIndex = Math.max(newPageIndex, 0);\r\n                newPageIndex = Math.min(newPageIndex, maxPageIndex)\r\n            }\r\n            this.pageIndex(newPageIndex);\r\n            return this.load()\r\n        }\r\n    }\r\n    pageIndex(pageIndex) {\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        var isAppendMode = this._controller.isAppendMode();\r\n        if (false !== this.option(LEGACY_SCROLLING_MODE) && (isVirtualMode || isAppendMode)) {\r\n            if (void 0 !== pageIndex) {\r\n                this._pageIndex = pageIndex\r\n            }\r\n            return this._pageIndex\r\n        } else {\r\n            return this._dataOptions.pageIndex(pageIndex)\r\n        }\r\n    }\r\n    beginPageIndex(defaultPageIndex) {\r\n        var beginPageIndex = getBeginPageIndex(this);\r\n        if (beginPageIndex < 0) {\r\n            beginPageIndex = void 0 !== defaultPageIndex ? defaultPageIndex : this.pageIndex()\r\n        }\r\n        return beginPageIndex\r\n    }\r\n    endPageIndex() {\r\n        var endPageIndex = getEndPageIndex(this);\r\n        return endPageIndex > 0 ? endPageIndex : this._lastPageIndex\r\n    }\r\n    pageSize() {\r\n        return this._dataOptions.pageSize()\r\n    }\r\n    load() {\r\n        var dataOptions = this._dataOptions;\r\n        var result;\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        var isAppendMode = this._controller.isAppendMode();\r\n        if (false !== this.option(LEGACY_SCROLLING_MODE) && (isVirtualMode || isAppendMode)) {\r\n            var pageIndexForLoad = getPageIndexForLoad(this);\r\n            if (pageIndexForLoad >= 0) {\r\n                var loadResult = loadCore(this, pageIndexForLoad);\r\n                if (loadResult) {\r\n                    result = new Deferred;\r\n                    loadResult.done(() => {\r\n                        var delayDeferred = this._delayDeferred;\r\n                        if (delayDeferred) {\r\n                            delayDeferred.done(result.resolve).fail(result.reject)\r\n                        } else {\r\n                            result.resolve()\r\n                        }\r\n                    }).fail(result.reject);\r\n                    dataOptions.updateLoading()\r\n                }\r\n            }\r\n        } else {\r\n            result = dataOptions.load()\r\n        }\r\n        if (!result && this._lastPageIndex !== this.pageIndex()) {\r\n            this._dataOptions.onChanged({\r\n                changeType: \"pageIndex\"\r\n            })\r\n        }\r\n        return result || (new Deferred).resolve()\r\n    }\r\n    loadIfNeed() {\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        var isAppendMode = this._controller.isAppendMode();\r\n        if ((isVirtualMode || isAppendMode) && !this._dataOptions.isLoading() && (!this._isChangedFiring || this._controller.isVirtual())) {\r\n            var position = this._controller.getViewportPosition();\r\n            if (position > 0) {\r\n                this._controller._setViewportPositionCore(position)\r\n            } else {\r\n                this.load()\r\n            }\r\n        }\r\n    }\r\n    handleDataChanged(callBase, e) {\r\n        var dataOptions = this._dataOptions;\r\n        var lastCacheLength = this._cache.length;\r\n        var changeType;\r\n        var removeInvisiblePages;\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        var isAppendMode = this._controller.isAppendMode();\r\n        if (e && e.changes) {\r\n            fireChanged(this, callBase, e)\r\n        } else if (false !== this.option(LEGACY_SCROLLING_MODE) && (isVirtualMode || isAppendMode)) {\r\n            var beginPageIndex = getBeginPageIndex(this);\r\n            if (beginPageIndex >= 0) {\r\n                if (isVirtualMode && beginPageIndex + this._cache.length !== dataOptions.pageIndex() && beginPageIndex - 1 !== dataOptions.pageIndex()) {\r\n                    lastCacheLength = 0;\r\n                    this._cache = []\r\n                }\r\n                if (isAppendMode) {\r\n                    if (0 === dataOptions.pageIndex()) {\r\n                        this._cache = []\r\n                    } else if (dataOptions.pageIndex() < getEndPageIndex(this)) {\r\n                        fireChanged(this, callBase, {\r\n                            changeType: \"append\",\r\n                            items: []\r\n                        });\r\n                        return\r\n                    }\r\n                }\r\n            }\r\n            var cacheItem = {\r\n                pageIndex: dataOptions.pageIndex(),\r\n                itemsLength: dataOptions.items(true).length,\r\n                itemsCount: this.itemsCount(true)\r\n            };\r\n            if (this.option(\"scrolling.removeInvisiblePages\") && isVirtualMode) {\r\n                removeInvisiblePages = this._cache.length > Math.max(getPreloadPageCount(this) + (this.option(\"scrolling.preloadEnabled\") ? 1 : 0), 2)\r\n            } else {\r\n                processDelayChanged(this, callBase, {\r\n                    isDelayed: true\r\n                })\r\n            }\r\n            var removeCacheItem;\r\n            if (beginPageIndex === dataOptions.pageIndex() + 1) {\r\n                if (removeInvisiblePages) {\r\n                    removeCacheItem = this._cache.pop()\r\n                }\r\n                changeType = \"prepend\";\r\n                this._cache.unshift(cacheItem)\r\n            } else {\r\n                if (removeInvisiblePages) {\r\n                    removeCacheItem = this._cache.shift()\r\n                }\r\n                changeType = \"append\";\r\n                this._cache.push(cacheItem)\r\n            }\r\n            var isDelayChanged = isVirtualMode && 0 === lastCacheLength && needTwoPagesLoading(this);\r\n            processChanged(this, callBase, this._cache.length > 1 ? changeType : void 0, isDelayChanged, removeCacheItem);\r\n            this._delayDeferred = this.load().done(() => {\r\n                if (processDelayChanged(this, callBase)) {\r\n                    this.load()\r\n                }\r\n            })\r\n        } else {\r\n            processChanged(this, callBase, e)\r\n        }\r\n    }\r\n    getDelayDeferred() {\r\n        return this._delayDeferred\r\n    }\r\n    itemsCount(isBase) {\r\n        var itemsCount = 0;\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        if (!isBase && isVirtualMode) {\r\n            this._cache.forEach(cacheItem => {\r\n                itemsCount += cacheItem.itemsCount\r\n            })\r\n        } else {\r\n            itemsCount = this._dataOptions.itemsCount()\r\n        }\r\n        return itemsCount\r\n    }\r\n    virtualItemsCount() {\r\n        var pageIndex = getBeginPageIndex(this);\r\n        if (pageIndex < 0) {\r\n            pageIndex = this._dataOptions.pageIndex()\r\n        }\r\n        var beginItemsCount = pageIndex * this._dataOptions.pageSize();\r\n        var itemsCount = this._cache.length * this._dataOptions.pageSize();\r\n        var endItemsCount = Math.max(0, this._dataOptions.totalItemsCount() - itemsCount - beginItemsCount);\r\n        return {\r\n            begin: beginItemsCount,\r\n            end: endItemsCount\r\n        }\r\n    }\r\n    reset() {\r\n        this._loadingPageIndexes = {};\r\n        this._cache = []\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_scrolling_core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport positionUtils from \"../../animation/position\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    VirtualDataLoader\r\n} from \"./ui.grid.core.virtual_data_loader\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nvar SCROLLING_MODE_INFINITE = \"infinite\";\r\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\nvar _isVirtualMode = that => that.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL || that._isVirtual;\r\nvar _isAppendMode = that => that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE && !that._isVirtual;\r\nexport function subscribeToExternalScrollers($element, scrollChangedHandler, $targetElement) {\r\n    var $scrollElement;\r\n    var scrollableArray = [];\r\n    var scrollToArray = [];\r\n    var disposeArray = [];\r\n    $targetElement = $targetElement || $element;\r\n\r\n    function getElementOffset(scrollable) {\r\n        var $scrollableElement = scrollable.element ? scrollable.$element() : scrollable;\r\n        var scrollableOffset = positionUtils.offset($scrollableElement);\r\n        if (!scrollableOffset) {\r\n            return $element.offset().top\r\n        }\r\n        return scrollable.scrollTop() - (scrollableOffset.top - $element.offset().top)\r\n    }\r\n    var widgetScrollStrategy = {\r\n        on: function(scrollable, eventName, handler) {\r\n            scrollable.on(\"scroll\", handler)\r\n        },\r\n        off: function(scrollable, eventName, handler) {\r\n            scrollable.off(\"scroll\", handler)\r\n        }\r\n    };\r\n\r\n    function subscribeToScrollEvents($scrollElement) {\r\n        var isDocument = \"#document\" === $scrollElement.get(0).nodeName;\r\n        var scrollable = $scrollElement.data(\"dxScrollable\");\r\n        var eventsStrategy = widgetScrollStrategy;\r\n        if (!scrollable) {\r\n            scrollable = isDocument && $(getWindow()) || \"auto\" === $scrollElement.css(\"overflowY\") && $scrollElement;\r\n            eventsStrategy = eventsEngine;\r\n            if (!scrollable) {\r\n                return\r\n            }\r\n        }\r\n        var handler = function(scrollable) {\r\n            return function() {\r\n                var scrollTop = scrollable.scrollTop() - getElementOffset(scrollable);\r\n                scrollTop = scrollTop > 0 ? scrollTop : 0;\r\n                scrollChangedHandler(scrollTop)\r\n            }\r\n        }(scrollable);\r\n        eventsStrategy.on(scrollable, \"scroll\", handler);\r\n        scrollToArray.push((function(pos) {\r\n            var topOffset = getElementOffset(scrollable);\r\n            var scrollMethod = scrollable.scrollTo ? \"scrollTo\" : \"scrollTop\";\r\n            if (pos - topOffset >= 0) {\r\n                scrollable[scrollMethod](pos + topOffset)\r\n            }\r\n        }));\r\n        scrollableArray.push(scrollable);\r\n        disposeArray.push((function() {\r\n            eventsStrategy.off(scrollable, \"scroll\", handler)\r\n        }))\r\n    }\r\n    for ($scrollElement = $targetElement.parent(); $scrollElement.length; $scrollElement = $scrollElement.parent()) {\r\n        subscribeToScrollEvents($scrollElement)\r\n    }\r\n    return {\r\n        scrollTo: function(pos) {\r\n            each(scrollToArray, (function(_, scrollTo) {\r\n                scrollTo(pos)\r\n            }))\r\n        },\r\n        dispose: function() {\r\n            each(disposeArray, (function(_, dispose) {\r\n                dispose()\r\n            }))\r\n        }\r\n    }\r\n}\r\nexport var VirtualScrollController = Class.inherit(function() {\r\n    var members = {\r\n        ctor: function(component, dataOptions, isVirtual) {\r\n            this._dataOptions = dataOptions;\r\n            this.component = component;\r\n            this._viewportSize = false === component.option(LEGACY_SCROLLING_MODE) ? 15 : 0;\r\n            this._viewportItemSize = 20;\r\n            this._viewportItemIndex = 0;\r\n            this._position = 0;\r\n            this._isScrollingBack = false;\r\n            this._contentSize = 0;\r\n            this._itemSizes = {};\r\n            this._sizeRatio = 1;\r\n            this._isVirtual = isVirtual;\r\n            this.positionChanged = Callbacks();\r\n            this._dataLoader = new VirtualDataLoader(this, this._dataOptions)\r\n        },\r\n        getItemSizes: function() {\r\n            return this._itemSizes\r\n        },\r\n        option: function() {\r\n            return this.component.option.apply(this.component, arguments)\r\n        },\r\n        isVirtual: function() {\r\n            return this._isVirtual\r\n        },\r\n        virtualItemsCount: function() {\r\n            if (_isVirtualMode(this)) {\r\n                var dataOptions = this._dataOptions;\r\n                var totalItemsCount = dataOptions.totalItemsCount();\r\n                if (false === this.option(LEGACY_SCROLLING_MODE) && -1 !== totalItemsCount) {\r\n                    var viewportParams = this.getViewportParams();\r\n                    var loadedOffset = dataOptions.loadedOffset();\r\n                    var loadedItemCount = dataOptions.loadedItemCount();\r\n                    var skip = Math.max(viewportParams.skip, loadedOffset);\r\n                    var take = Math.min(viewportParams.take, loadedItemCount);\r\n                    var endItemsCount = Math.max(totalItemsCount - (skip + take), 0);\r\n                    return {\r\n                        begin: skip,\r\n                        end: endItemsCount\r\n                    }\r\n                }\r\n                return this._dataLoader.virtualItemsCount.apply(this._dataLoader, arguments)\r\n            }\r\n        },\r\n        getScrollingTimeout: function() {\r\n            var renderAsync = this.option(\"scrolling.renderAsync\");\r\n            var scrollingTimeout = 0;\r\n            if (!isDefined(renderAsync)) {\r\n                scrollingTimeout = Math.min(this.option(\"scrolling.timeout\") || 0, this._dataOptions.changingDuration());\r\n                if (scrollingTimeout < this.option(\"scrolling.renderingThreshold\")) {\r\n                    scrollingTimeout = this.option(\"scrolling.minTimeout\") || 0\r\n                }\r\n            } else if (renderAsync) {\r\n                var _this$option;\r\n                scrollingTimeout = null !== (_this$option = this.option(\"scrolling.timeout\")) && void 0 !== _this$option ? _this$option : 0\r\n            }\r\n            return scrollingTimeout\r\n        },\r\n        setViewportPosition: function(position) {\r\n            var result = new Deferred;\r\n            var scrollingTimeout = this.getScrollingTimeout();\r\n            clearTimeout(this._scrollTimeoutID);\r\n            if (scrollingTimeout > 0) {\r\n                this._scrollTimeoutID = setTimeout(() => {\r\n                    this._setViewportPositionCore(position);\r\n                    result.resolve()\r\n                }, scrollingTimeout)\r\n            } else {\r\n                this._setViewportPositionCore(position);\r\n                result.resolve()\r\n            }\r\n            return result.promise()\r\n        },\r\n        getViewportPosition: function() {\r\n            return this._position\r\n        },\r\n        getItemIndexByPosition: function(position) {\r\n            var _position;\r\n            position = null !== (_position = position) && void 0 !== _position ? _position : this._position;\r\n            var defaultItemSize = this.getItemSize();\r\n            var offset = 0;\r\n            var itemOffset = 0;\r\n            var itemOffsetsWithSize = Object.keys(this._itemSizes).concat(-1);\r\n            for (var i = 0; i < itemOffsetsWithSize.length && offset < position; i++) {\r\n                var itemOffsetWithSize = parseInt(itemOffsetsWithSize[i]);\r\n                var itemOffsetDiff = (position - offset) / defaultItemSize;\r\n                if (itemOffsetWithSize < 0 || itemOffset + itemOffsetDiff < itemOffsetWithSize) {\r\n                    itemOffset += itemOffsetDiff;\r\n                    break\r\n                } else {\r\n                    itemOffsetDiff = itemOffsetWithSize - itemOffset;\r\n                    offset += itemOffsetDiff * defaultItemSize;\r\n                    itemOffset += itemOffsetDiff\r\n                }\r\n                var itemSize = this._itemSizes[itemOffsetWithSize];\r\n                offset += itemSize;\r\n                itemOffset += offset < position ? 1 : (position - offset + itemSize) / itemSize\r\n            }\r\n            return Math.round(50 * itemOffset) / 50\r\n        },\r\n        isScrollingBack: function() {\r\n            return this._isScrollingBack\r\n        },\r\n        _setViewportPositionCore: function(position) {\r\n            var prevPosition = this._position || 0;\r\n            this._position = position;\r\n            if (prevPosition !== this._position) {\r\n                this._isScrollingBack = this._position < prevPosition\r\n            }\r\n            var itemIndex = this.getItemIndexByPosition();\r\n            var result = this.setViewportItemIndex(itemIndex);\r\n            this.positionChanged.fire();\r\n            return result\r\n        },\r\n        setContentItemSizes: function(sizes) {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            this._contentSize = sizes.reduce((a, b) => a + b, 0);\r\n            if (virtualItemsCount) {\r\n                sizes.forEach((size, index) => {\r\n                    this._itemSizes[virtualItemsCount.begin + index] = size\r\n                });\r\n                var virtualContentSize = (virtualItemsCount.begin + virtualItemsCount.end + this.itemsCount()) * this._viewportItemSize;\r\n                var contentHeightLimit = gridCoreUtils.getContentHeightLimit(browser);\r\n                if (virtualContentSize > contentHeightLimit) {\r\n                    this._sizeRatio = contentHeightLimit / virtualContentSize\r\n                } else {\r\n                    this._sizeRatio = 1\r\n                }\r\n            }\r\n        },\r\n        getItemSize: function() {\r\n            return this._viewportItemSize * this._sizeRatio\r\n        },\r\n        getItemOffset: function(itemIndex, isEnd) {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            var itemCount = itemIndex;\r\n            if (!virtualItemsCount) {\r\n                return 0\r\n            }\r\n            var offset = 0;\r\n            var totalItemsCount = this._dataOptions.totalItemsCount();\r\n            Object.keys(this._itemSizes).forEach(currentItemIndex => {\r\n                if (!itemCount) {\r\n                    return\r\n                }\r\n                if (isEnd ? currentItemIndex >= totalItemsCount - itemIndex : currentItemIndex < itemIndex) {\r\n                    offset += this._itemSizes[currentItemIndex];\r\n                    itemCount--\r\n                }\r\n            });\r\n            return Math.floor(offset + itemCount * this._viewportItemSize * this._sizeRatio)\r\n        },\r\n        getContentOffset: function(type) {\r\n            var isEnd = \"end\" === type;\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            if (!virtualItemsCount) {\r\n                return 0\r\n            }\r\n            return this.getItemOffset(isEnd ? virtualItemsCount.end : virtualItemsCount.begin, isEnd)\r\n        },\r\n        getVirtualContentSize: function() {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            return virtualItemsCount ? this.getContentOffset(\"begin\") + this.getContentOffset(\"end\") + this._contentSize : 0\r\n        },\r\n        getViewportItemIndex: function() {\r\n            return this._viewportItemIndex\r\n        },\r\n        setViewportItemIndex: function(itemIndex) {\r\n            this._viewportItemIndex = itemIndex;\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                return\r\n            }\r\n            return this._dataLoader.viewportItemIndexChanged.apply(this._dataLoader, arguments)\r\n        },\r\n        viewportItemSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._viewportItemSize = size\r\n            }\r\n            return this._viewportItemSize\r\n        },\r\n        viewportSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._viewportSize = size\r\n            }\r\n            return this._viewportSize\r\n        },\r\n        viewportHeight: function(height) {\r\n            var begin = this.getItemIndexByPosition();\r\n            var end = this.getItemIndexByPosition(this._position + height);\r\n            this.viewportSize(Math.ceil(end - begin));\r\n            if (this._viewportItemIndex !== begin) {\r\n                this._setViewportPositionCore(this._position)\r\n            }\r\n        },\r\n        reset: function(isRefresh) {\r\n            this._dataLoader.reset();\r\n            if (!isRefresh) {\r\n                this._itemSizes = {}\r\n            }\r\n        },\r\n        subscribeToWindowScrollEvents: function($element) {\r\n            this._windowScroll = this._windowScroll || subscribeToExternalScrollers($element, scrollTop => {\r\n                if (this.viewportItemSize()) {\r\n                    this.setViewportPosition(scrollTop)\r\n                }\r\n            })\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._scrollTimeoutID);\r\n            this._windowScroll && this._windowScroll.dispose();\r\n            this._windowScroll = null\r\n        },\r\n        scrollTo: function(pos) {\r\n            this._windowScroll && this._windowScroll.scrollTo(pos)\r\n        },\r\n        isVirtualMode: function() {\r\n            return _isVirtualMode(this)\r\n        },\r\n        isAppendMode: function() {\r\n            return _isAppendMode(this)\r\n        },\r\n        getViewportParams: function() {\r\n            var _this$option2;\r\n            var virtualMode = this.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL;\r\n            var totalItemsCount = this._dataOptions.totalItemsCount();\r\n            var topIndex = this._viewportItemIndex;\r\n            var bottomIndex = this._viewportSize + topIndex;\r\n            var maxGap = this.option(\"scrolling.prerenderedRowChunkSize\") || 1;\r\n            var isScrollingBack = this.isScrollingBack();\r\n            var minGap = null !== (_this$option2 = this.option(\"scrolling.prerenderedRowCount\")) && void 0 !== _this$option2 ? _this$option2 : 1;\r\n            var topMinGap = isScrollingBack ? minGap : 0;\r\n            var bottomMinGap = isScrollingBack ? 0 : minGap;\r\n            var skip = Math.floor(Math.max(0, topIndex - topMinGap) / maxGap) * maxGap;\r\n            var take = Math.ceil((bottomIndex + bottomMinGap - skip) / maxGap) * maxGap;\r\n            if (virtualMode) {\r\n                var remainedItems = Math.max(0, totalItemsCount - skip);\r\n                take = Math.min(take, remainedItems)\r\n            }\r\n            return {\r\n                skip: skip,\r\n                take: take\r\n            }\r\n        },\r\n        itemsCount: function() {\r\n            var result = 0;\r\n            if (this.option(LEGACY_SCROLLING_MODE)) {\r\n                result = this._dataLoader.itemsCount.apply(this._dataLoader, arguments)\r\n            } else {\r\n                result = this._dataOptions.itemsCount()\r\n            }\r\n            return result\r\n        }\r\n    };\r\n    [\"pageIndex\", \"beginPageIndex\", \"endPageIndex\", \"pageSize\", \"load\", \"loadIfNeed\", \"handleDataChanged\", \"getDelayDeferred\"].forEach((function(name) {\r\n        members[name] = function() {\r\n            return this._dataLoader[name].apply(this._dataLoader, arguments)\r\n        }\r\n    }));\r\n    return members\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_scrolling.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    VirtualScrollController,\r\n    subscribeToExternalScrollers\r\n} from \"./ui.grid_core.virtual_scrolling_core\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport LoadIndicator from \"../load_indicator\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nvar BOTTOM_LOAD_PANEL_CLASS = \"bottom-load-panel\";\r\nvar TABLE_CONTENT_CLASS = \"table-content\";\r\nvar GROUP_SPACE_CLASS = \"group-space\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar FREESPACE_CLASS = \"dx-freespace-row\";\r\nvar COLUMN_LINES_CLASS = \"dx-column-lines\";\r\nvar VIRTUAL_ROW_CLASS = \"dx-virtual-row\";\r\nvar SCROLLING_MODE_INFINITE = \"infinite\";\r\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\r\nvar LOAD_TIMEOUT = 300;\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\nvar VISIBLE_PAGE_INDEX = \"paging.pageIndex\";\r\nvar isVirtualMode = function(that) {\r\n    return that.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL\r\n};\r\nvar isAppendMode = function(that) {\r\n    return that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE\r\n};\r\nvar isVirtualPaging = function(that) {\r\n    return isVirtualMode(that) || isAppendMode(that)\r\n};\r\nvar _correctCount = function(items, count, fromEnd, isItemCountableFunc) {\r\n    for (var i = 0; i < count + 1; i++) {\r\n        var item = items[fromEnd ? items.length - 1 - i : i];\r\n        if (item && !isItemCountableFunc(item, i === count, fromEnd)) {\r\n            count++\r\n        }\r\n    }\r\n    return count\r\n};\r\nvar isItemCountableByDataSource = function(item, dataSource) {\r\n    return \"data\" === item.rowType && !item.isNewRow || \"group\" === item.rowType && dataSource.isGroupItemCountable(item.data)\r\n};\r\nvar updateItemIndices = function(items) {\r\n    items.forEach((function(item, index) {\r\n        item.rowIndex = index\r\n    }));\r\n    return items\r\n};\r\nvar VirtualScrollingDataSourceAdapterExtender = function() {\r\n    var _updateLoading = function(that) {\r\n        var beginPageIndex = that._virtualScrollController.beginPageIndex(-1);\r\n        if (isVirtualMode(that)) {\r\n            if (beginPageIndex < 0 || that.viewportSize() >= 0 && that.getViewportItemIndex() >= 0 && (beginPageIndex * that.pageSize() > that.getViewportItemIndex() || beginPageIndex * that.pageSize() + that.itemsCount() < that.getViewportItemIndex() + that.viewportSize()) && that._dataSource.isLoading()) {\r\n                if (!that._isLoading) {\r\n                    that._isLoading = true;\r\n                    that.loadingChanged.fire(true)\r\n                }\r\n            } else if (that._isLoading) {\r\n                that._isLoading = false;\r\n                that.loadingChanged.fire(false)\r\n            }\r\n        }\r\n    };\r\n    var result = {\r\n        init: function() {\r\n            this.callBase.apply(this, arguments);\r\n            this._items = [];\r\n            this._isLoaded = true;\r\n            this._loadPageCount = 1;\r\n            this._virtualScrollController = new VirtualScrollController(this.component, this._getVirtualScrollDataOptions())\r\n        },\r\n        _getVirtualScrollDataOptions: function() {\r\n            var that = this;\r\n            return {\r\n                pageSize: function() {\r\n                    return that.pageSize()\r\n                },\r\n                totalItemsCount: function() {\r\n                    return that.totalItemsCount()\r\n                },\r\n                hasKnownLastPage: function() {\r\n                    return that.hasKnownLastPage()\r\n                },\r\n                pageIndex: function(index) {\r\n                    return that._dataSource.pageIndex(index)\r\n                },\r\n                isLoading: function() {\r\n                    return that._dataSource.isLoading() && !that.isCustomLoading()\r\n                },\r\n                pageCount: function() {\r\n                    return that.pageCount()\r\n                },\r\n                load: function() {\r\n                    return that._dataSource.load()\r\n                },\r\n                updateLoading: function() {\r\n                    _updateLoading(that)\r\n                },\r\n                itemsCount: function() {\r\n                    return that.itemsCount(true)\r\n                },\r\n                items: function() {\r\n                    return that._dataSource.items()\r\n                },\r\n                viewportItems: function(items) {\r\n                    if (items) {\r\n                        that._items = items\r\n                    }\r\n                    return that._items\r\n                },\r\n                onChanged: function(e) {\r\n                    that.changed.fire(e)\r\n                },\r\n                changingDuration: function(e) {\r\n                    if (that.isLoading()) {\r\n                        return LOAD_TIMEOUT\r\n                    }\r\n                    return that._renderTime || 0\r\n                }\r\n            }\r\n        },\r\n        _handleLoadingChanged: function(isLoading) {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                this.callBase.apply(this, arguments);\r\n                return\r\n            }\r\n            if (!isVirtualMode(this) || this._isLoadingAll) {\r\n                this._isLoading = isLoading;\r\n                this.callBase.apply(this, arguments)\r\n            }\r\n            if (isLoading) {\r\n                this._startLoadTime = new Date\r\n            } else {\r\n                this._startLoadTime = void 0\r\n            }\r\n        },\r\n        _handleLoadError: function() {\r\n            if (false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                this._isLoading = false;\r\n                this.loadingChanged.fire(false)\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _handleDataChanged: function(e) {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                this._items = this._dataSource.items().slice();\r\n                this.callBase.apply(this, arguments);\r\n                return\r\n            }\r\n            var callBase = this.callBase.bind(this);\r\n            this._virtualScrollController.handleDataChanged(callBase, e)\r\n        },\r\n        _customizeRemoteOperations: function(options, operationTypes) {\r\n            var newMode = false === this.option(LEGACY_SCROLLING_MODE);\r\n            var renderAsync = this.option(\"scrolling.renderAsync\");\r\n            if (!isDefined(renderAsync)) {\r\n                renderAsync = this._renderTime >= this.option(\"scrolling.renderingThreshold\")\r\n            }\r\n            if ((isVirtualMode(this) || isAppendMode(this) && newMode) && !operationTypes.reload && (operationTypes.skip || newMode) && !renderAsync) {\r\n                options.delay = void 0\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        items: function() {\r\n            return this._items\r\n        },\r\n        itemsCount: function(isBase) {\r\n            if (isBase || false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                return this.callBase()\r\n            }\r\n            return this._virtualScrollController.itemsCount()\r\n        },\r\n        load: function(loadOptions) {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE) || loadOptions) {\r\n                return this.callBase(loadOptions)\r\n            }\r\n            return this._virtualScrollController.load()\r\n        },\r\n        isLoading: function() {\r\n            return false === this.option(LEGACY_SCROLLING_MODE) ? this._dataSource.isLoading() : this._isLoading\r\n        },\r\n        isLoaded: function() {\r\n            return this._dataSource.isLoaded() && this._isLoaded\r\n        },\r\n        resetPagesCache: function(isLiveUpdate) {\r\n            if (!isLiveUpdate) {\r\n                this._virtualScrollController.reset(true)\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _changeRowExpandCore: function() {\r\n            var result = this.callBase.apply(this, arguments);\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                return result\r\n            }\r\n            this.resetPagesCache();\r\n            _updateLoading(this);\r\n            return result\r\n        },\r\n        reload: function() {\r\n            this._dataSource.pageIndex(this.pageIndex());\r\n            var virtualScrollController = this._virtualScrollController;\r\n            if (false !== this.option(LEGACY_SCROLLING_MODE) && virtualScrollController) {\r\n                var d = new Deferred;\r\n                this.callBase.apply(this, arguments).done((function(r) {\r\n                    var delayDeferred = virtualScrollController.getDelayDeferred();\r\n                    if (delayDeferred) {\r\n                        delayDeferred.done(d.resolve).fail(d.reject)\r\n                    } else {\r\n                        d.resolve(r)\r\n                    }\r\n                })).fail(d.reject);\r\n                return d\r\n            } else {\r\n                return this.callBase.apply(this, arguments)\r\n            }\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            if (false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                var storeLoadOptions = options.storeLoadOptions;\r\n                var dataSource = this._dataSource;\r\n                if (operationTypes.reload) {\r\n                    this._virtualScrollController.reset();\r\n                    dataSource.items().length = 0;\r\n                    this._isLoaded = false;\r\n                    _updateLoading(this);\r\n                    this._isLoaded = true;\r\n                    if (isAppendMode(this)) {\r\n                        this.pageIndex(0);\r\n                        dataSource.pageIndex(0);\r\n                        storeLoadOptions.pageIndex = 0;\r\n                        options.pageIndex = 0;\r\n                        storeLoadOptions.skip = 0\r\n                    } else {\r\n                        dataSource.pageIndex(this.pageIndex());\r\n                        if (dataSource.paginate()) {\r\n                            options.pageIndex = this.pageIndex();\r\n                            storeLoadOptions.skip = this.pageIndex() * this.pageSize()\r\n                        }\r\n                    }\r\n                } else if (isAppendMode(this) && storeLoadOptions.skip && this._totalCountCorrection < 0) {\r\n                    storeLoadOptions.skip += this._totalCountCorrection\r\n                }\r\n            }\r\n            return this.callBase.apply(this, arguments)\r\n        },\r\n        dispose: function() {\r\n            this._virtualScrollController.dispose();\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        loadPageCount: function(count) {\r\n            if (!isDefined(count)) {\r\n                return this._loadPageCount\r\n            }\r\n            this._loadPageCount = count\r\n        },\r\n        _handleDataLoading: function(options) {\r\n            var loadPageCount = this.loadPageCount();\r\n            var pageSize = this.pageSize();\r\n            var newMode = false === this.option(LEGACY_SCROLLING_MODE);\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var takeIsDefined = isDefined(storeLoadOptions.take);\r\n            options.loadPageCount = loadPageCount;\r\n            if (!options.isCustomLoading && newMode && takeIsDefined && loadPageCount > 1 && pageSize > 0) {\r\n                storeLoadOptions.take = loadPageCount * pageSize\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _loadPageSize: function() {\r\n            return this.callBase.apply(this, arguments) * this.loadPageCount()\r\n        }\r\n    };\r\n    [\"beginPageIndex\", \"endPageIndex\", \"pageIndex\"].forEach((function(name) {\r\n        result[name] = function() {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                var dataSource = this._dataSource;\r\n                return dataSource.pageIndex.apply(dataSource, arguments)\r\n            }\r\n            var virtualScrollController = this._virtualScrollController;\r\n            return virtualScrollController[name].apply(virtualScrollController, arguments)\r\n        }\r\n    }));\r\n    [\"virtualItemsCount\", \"getContentOffset\", \"getVirtualContentSize\", \"setContentItemSizes\", \"setViewportPosition\", \"getViewportItemIndex\", \"setViewportItemIndex\", \"getItemIndexByPosition\", \"viewportSize\", \"viewportItemSize\", \"getItemSize\", \"getItemSizes\", \"loadIfNeed\"].forEach((function(name) {\r\n        result[name] = function() {\r\n            var virtualScrollController = this._virtualScrollController;\r\n            return virtualScrollController[name].apply(virtualScrollController, arguments)\r\n        }\r\n    }));\r\n    return result\r\n}();\r\nvar VirtualScrollingRowsViewExtender = function() {\r\n    var removeEmptyRows = function($emptyRows, className) {\r\n        var tBodies = $emptyRows.toArray().map(row => $(row).parent(\".\" + className).get(0)).filter(row => row);\r\n        if (tBodies.length) {\r\n            $emptyRows = $(tBodies)\r\n        }\r\n        var rowCount = className === FREESPACE_CLASS ? $emptyRows.length - 1 : $emptyRows.length;\r\n        for (var i = 0; i < rowCount; i++) {\r\n            $emptyRows.eq(i).remove()\r\n        }\r\n    };\r\n    return {\r\n        init: function() {\r\n            var _dataController$state;\r\n            var dataController = this.getController(\"data\");\r\n            this.callBase();\r\n            dataController.pageChanged.add(pageIndex => {\r\n                this.scrollToPage(null !== pageIndex && void 0 !== pageIndex ? pageIndex : dataController.pageIndex())\r\n            });\r\n            dataController.dataSourceChanged.add(() => {\r\n                !this._scrollTop && this._scrollToCurrentPageOnResize()\r\n            });\r\n            null === (_dataController$state = dataController.stateLoaded) || void 0 === _dataController$state ? void 0 : _dataController$state.add(() => {\r\n                this._scrollToCurrentPageOnResize()\r\n            });\r\n            this._scrollToCurrentPageOnResize()\r\n        },\r\n        _scrollToCurrentPageOnResize: function() {\r\n            var dataController = this.getController(\"data\");\r\n            if (dataController.pageIndex() > 0) {\r\n                var resizeHandler = () => {\r\n                    this.resizeCompleted.remove(resizeHandler);\r\n                    this.scrollToPage(dataController.pageIndex())\r\n                };\r\n                this.resizeCompleted.add(resizeHandler)\r\n            }\r\n        },\r\n        scrollToPage: function(pageIndex) {\r\n            var dataController = this._dataController;\r\n            var pageSize = dataController ? dataController.pageSize() : 0;\r\n            var scrollPosition;\r\n            if (isVirtualMode(this) || isAppendMode(this)) {\r\n                var itemSize = dataController.getItemSize();\r\n                var itemSizes = dataController.getItemSizes();\r\n                var itemIndex = pageIndex * pageSize;\r\n                scrollPosition = itemIndex * itemSize;\r\n                for (var index in itemSizes) {\r\n                    if (index < itemIndex) {\r\n                        scrollPosition += itemSizes[index] - itemSize\r\n                    }\r\n                }\r\n            } else {\r\n                scrollPosition = 0\r\n            }\r\n            this.scrollTo({\r\n                y: scrollPosition,\r\n                x: this._scrollLeft\r\n            })\r\n        },\r\n        renderDelayedTemplates: function(e) {\r\n            this._updateContentPosition(true);\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _renderCore: function(e) {\r\n            var startRenderTime = new Date;\r\n            this.callBase.apply(this, arguments);\r\n            var dataSource = this._dataController._dataSource;\r\n            if (dataSource && e) {\r\n                var itemCount = e.items ? e.items.length : 20;\r\n                var viewportSize = this._dataController.viewportSize() || 20;\r\n                if (gridCoreUtils.isVirtualRowRendering(this) && itemCount > 0 && false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                    dataSource._renderTime = (new Date - startRenderTime) * viewportSize / itemCount\r\n                } else {\r\n                    dataSource._renderTime = new Date - startRenderTime\r\n                }\r\n            }\r\n        },\r\n        _getRowElements: function(tableElement) {\r\n            var $rows = this.callBase(tableElement);\r\n            return $rows && $rows.not(\".\" + VIRTUAL_ROW_CLASS)\r\n        },\r\n        _removeRowsElements: function(contentTable, removeCount, changeType) {\r\n            var rowElements = this._getRowElements(contentTable).toArray();\r\n            if (\"append\" === changeType) {\r\n                rowElements = rowElements.slice(0, removeCount)\r\n            } else {\r\n                rowElements = rowElements.slice(-removeCount)\r\n            }\r\n            var errorHandlingController = this.getController(\"errorHandling\");\r\n            rowElements.map(rowElement => {\r\n                var $rowElement = $(rowElement);\r\n                errorHandlingController && errorHandlingController.removeErrorRow($rowElement.next());\r\n                $rowElement.remove()\r\n            })\r\n        },\r\n        _updateContent: function(tableElement, change) {\r\n            var $freeSpaceRowElements;\r\n            var contentElement = this._findContentElement();\r\n            var changeType = change && change.changeType;\r\n            var contentTable = contentElement.children().first();\r\n            if (\"append\" === changeType || \"prepend\" === changeType) {\r\n                var $tBodies = this._getBodies(tableElement);\r\n                if (1 === $tBodies.length) {\r\n                    this._getBodies(contentTable)[\"append\" === changeType ? \"append\" : \"prepend\"]($tBodies.children())\r\n                } else {\r\n                    $tBodies[\"append\" === changeType ? \"appendTo\" : \"prependTo\"](contentTable)\r\n                }\r\n                tableElement.remove();\r\n                $freeSpaceRowElements = this._getFreeSpaceRowElements(contentTable);\r\n                removeEmptyRows($freeSpaceRowElements, FREESPACE_CLASS);\r\n                if (change.removeCount) {\r\n                    this._removeRowsElements(contentTable, change.removeCount, changeType)\r\n                }\r\n                this._restoreErrorRow(contentTable)\r\n            } else {\r\n                this.callBase.apply(this, arguments);\r\n                if (\"update\" === changeType) {\r\n                    this._restoreErrorRow(contentTable)\r\n                }\r\n            }\r\n            this._updateBottomLoading()\r\n        },\r\n        _addVirtualRow: function($table, isFixed, location, position) {\r\n            if (!position) {\r\n                return\r\n            }\r\n            var $virtualRow = this._createEmptyRow(VIRTUAL_ROW_CLASS, isFixed, position);\r\n            $virtualRow = this._wrapRowIfNeed($table, $virtualRow);\r\n            this._appendEmptyRow($table, $virtualRow, location)\r\n        },\r\n        _getRowHeights: function() {\r\n            var rowHeights = this._getRowElements(this._tableElement).toArray().map((function(row) {\r\n                return getBoundingRect(row).height\r\n            }));\r\n            return rowHeights\r\n        },\r\n        _correctRowHeights: function(rowHeights) {\r\n            var dataController = this._dataController;\r\n            var dataSource = dataController._dataSource;\r\n            var correctedRowHeights = [];\r\n            var visibleRows = dataController.getVisibleRows();\r\n            var itemSize = 0;\r\n            var firstCountableItem = true;\r\n            var lastLoadIndex = -1;\r\n            for (var i = 0; i < rowHeights.length; i++) {\r\n                var currentItem = visibleRows[i];\r\n                if (!isDefined(currentItem)) {\r\n                    continue\r\n                }\r\n                if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                    if (lastLoadIndex >= 0 && lastLoadIndex !== currentItem.loadIndex) {\r\n                        correctedRowHeights.push(itemSize);\r\n                        itemSize = 0\r\n                    }\r\n                    lastLoadIndex = currentItem.loadIndex\r\n                } else if (isItemCountableByDataSource(currentItem, dataSource)) {\r\n                    if (firstCountableItem) {\r\n                        firstCountableItem = false\r\n                    } else {\r\n                        correctedRowHeights.push(itemSize);\r\n                        itemSize = 0\r\n                    }\r\n                }\r\n                itemSize += rowHeights[i]\r\n            }\r\n            itemSize > 0 && correctedRowHeights.push(itemSize);\r\n            return correctedRowHeights\r\n        },\r\n        _updateContentPosition: function(isRender) {\r\n            var dataController = this._dataController;\r\n            var rowHeight = this._rowHeight || 20;\r\n            dataController.viewportItemSize(rowHeight);\r\n            if (isVirtualMode(this) || gridCoreUtils.isVirtualRowRendering(this)) {\r\n                if (!isRender) {\r\n                    var rowHeights = this._getRowHeights();\r\n                    var correctedRowHeights = this._correctRowHeights(rowHeights);\r\n                    dataController.setContentItemSizes(correctedRowHeights)\r\n                }\r\n                var top = dataController.getContentOffset(\"begin\");\r\n                var bottom = dataController.getContentOffset(\"end\");\r\n                var $tables = this.getTableElements();\r\n                var $virtualRows = $tables.children(\"tbody\").children(\".\" + VIRTUAL_ROW_CLASS);\r\n                removeEmptyRows($virtualRows, VIRTUAL_ROW_CLASS);\r\n                $tables.each((index, element) => {\r\n                    var isFixed = index > 0;\r\n                    this._isFixedTableRendering = isFixed;\r\n                    this._addVirtualRow($(element), isFixed, \"top\", top);\r\n                    this._addVirtualRow($(element), isFixed, \"bottom\", bottom);\r\n                    this._isFixedTableRendering = false\r\n                })\r\n            }\r\n        },\r\n        _isTableLinesDisplaysCorrect: function(table) {\r\n            var hasColumnLines = table.find(\".\" + COLUMN_LINES_CLASS).length > 0;\r\n            return hasColumnLines === this.option(\"showColumnLines\")\r\n        },\r\n        _isColumnElementsEqual: function($columns, $virtualColumns) {\r\n            var result = $columns.length === $virtualColumns.length;\r\n            if (result) {\r\n                each($columns, (function(index, element) {\r\n                    if (element.style.width !== $virtualColumns[index].style.width) {\r\n                        result = false;\r\n                        return result\r\n                    }\r\n                }))\r\n            }\r\n            return result\r\n        },\r\n        _getCellClasses: function(column) {\r\n            var classes = [];\r\n            var cssClass = column.cssClass;\r\n            var isExpandColumn = \"expand\" === column.command;\r\n            cssClass && classes.push(cssClass);\r\n            isExpandColumn && classes.push(this.addWidgetPrefix(GROUP_SPACE_CLASS));\r\n            return classes\r\n        },\r\n        _findBottomLoadPanel: function($contentElement) {\r\n            var $element = $contentElement || this.element();\r\n            var $bottomLoadPanel = $element && $element.find(\".\" + this.addWidgetPrefix(BOTTOM_LOAD_PANEL_CLASS));\r\n            if ($bottomLoadPanel && $bottomLoadPanel.length) {\r\n                return $bottomLoadPanel\r\n            }\r\n        },\r\n        _updateBottomLoading: function() {\r\n            var virtualMode = isVirtualMode(this);\r\n            var appendMode = isAppendMode(this);\r\n            var showBottomLoading = !this._dataController.hasKnownLastPage() && this._dataController.isLoaded() && (virtualMode || appendMode);\r\n            var $contentElement = this._findContentElement();\r\n            var bottomLoadPanelElement = this._findBottomLoadPanel($contentElement);\r\n            if (showBottomLoading) {\r\n                if (!bottomLoadPanelElement) {\r\n                    $(\"<div>\").addClass(this.addWidgetPrefix(BOTTOM_LOAD_PANEL_CLASS)).append(this._createComponent($(\"<div>\"), LoadIndicator).$element()).appendTo($contentElement)\r\n                }\r\n            } else if (bottomLoadPanelElement) {\r\n                bottomLoadPanelElement.remove()\r\n            }\r\n        },\r\n        _handleScroll: function(e) {\r\n            var legacyScrollingMode = true === this.option(LEGACY_SCROLLING_MODE);\r\n            var zeroTopPosition = 0 === e.scrollOffset.top;\r\n            if ((this._hasHeight || !legacyScrollingMode && zeroTopPosition) && this._rowHeight) {\r\n                this._dataController.setViewportPosition(e.scrollOffset.top)\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _needUpdateRowHeight: function(itemsCount) {\r\n            return this.callBase.apply(this, arguments) || itemsCount > 0 && isAppendMode(this) && !gridCoreUtils.isVirtualRowRendering(this)\r\n        },\r\n        _updateRowHeight: function() {\r\n            this.callBase.apply(this, arguments);\r\n            if (this._rowHeight) {\r\n                this._updateContentPosition();\r\n                var viewportHeight = this._hasHeight ? getOuterHeight(this.element()) : getOuterHeight(getWindow());\r\n                var dataController = this._dataController;\r\n                if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                    dataController.viewportHeight(viewportHeight);\r\n                    dataController.updateViewport()\r\n                } else {\r\n                    dataController.viewportSize(Math.ceil(viewportHeight / this._rowHeight))\r\n                }\r\n            }\r\n        },\r\n        updateFreeSpaceRowHeight: function() {\r\n            var result = this.callBase.apply(this, arguments);\r\n            if (result) {\r\n                this._updateContentPosition()\r\n            }\r\n            return result\r\n        },\r\n        setLoading: function(isLoading, messageText) {\r\n            var dataController = this._dataController;\r\n            var hasBottomLoadPanel = dataController.pageIndex() > 0 && dataController.isLoaded() && !!this._findBottomLoadPanel();\r\n            if (false === this.option(LEGACY_SCROLLING_MODE) && isLoading && dataController.isViewportChanging()) {\r\n                return\r\n            }\r\n            if (hasBottomLoadPanel) {\r\n                isLoading = false\r\n            }\r\n            this.callBase.call(this, isLoading, messageText)\r\n        },\r\n        _resizeCore: function() {\r\n            var that = this;\r\n            var $element = that.element();\r\n            that.callBase();\r\n            if (that.component.$element() && !that._windowScroll && $element.closest(getWindow().document).length) {\r\n                that._windowScroll = subscribeToExternalScrollers($element, (function(scrollPos) {\r\n                    if (!that._hasHeight && that._rowHeight) {\r\n                        that._dataController.setViewportPosition(scrollPos)\r\n                    }\r\n                }), that.component.$element());\r\n                that.on(\"disposing\", (function() {\r\n                    that._windowScroll.dispose()\r\n                }))\r\n            }\r\n            if (false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                that.loadIfNeed()\r\n            }\r\n        },\r\n        loadIfNeed: function() {\r\n            var _dataController$loadI;\r\n            var dataController = this._dataController;\r\n            null === dataController || void 0 === dataController ? void 0 : null === (_dataController$loadI = dataController.loadIfNeed) || void 0 === _dataController$loadI ? void 0 : _dataController$loadI.call(dataController)\r\n        },\r\n        setColumnWidths: function(widths) {\r\n            var scrollable = this.getScrollable();\r\n            var $content;\r\n            this.callBase.apply(this, arguments);\r\n            if (\"virtual\" === this.option(\"scrolling.mode\")) {\r\n                $content = scrollable ? $(scrollable.content()) : this.element();\r\n                this.callBase(widths, $content.children(\".\" + this.addWidgetPrefix(CONTENT_CLASS)).children(\":not(.\" + this.addWidgetPrefix(TABLE_CONTENT_CLASS) + \")\"))\r\n            }\r\n        },\r\n        _restoreErrorRow: function() {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                var errorHandling = this.getController(\"errorHandling\");\r\n                null === errorHandling || void 0 === errorHandling ? void 0 : errorHandling.removeErrorRow()\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._scrollTimeoutID);\r\n            this.callBase()\r\n        }\r\n    }\r\n}();\r\nexport var virtualScrollingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            scrolling: {\r\n                timeout: 300,\r\n                updateTimeout: 300,\r\n                minTimeout: 0,\r\n                renderingThreshold: 100,\r\n                removeInvisiblePages: true,\r\n                rowPageSize: 5,\r\n                prerenderedRowChunkSize: 1,\r\n                mode: \"standard\",\r\n                preloadEnabled: false,\r\n                rowRenderingMode: \"standard\",\r\n                loadTwoPagesOnStart: false,\r\n                legacyMode: false,\r\n                prerenderedRowCount: 1\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        dataSourceAdapter: VirtualScrollingDataSourceAdapterExtender,\r\n        controllers: {\r\n            data: function() {\r\n                var members = {\r\n                    _refreshDataSource: function() {\r\n                        var baseResult = this.callBase.apply(this, arguments) || (new Deferred).resolve().promise();\r\n                        baseResult.done(this.initVirtualRows.bind(this));\r\n                        return baseResult\r\n                    },\r\n                    _loadDataSource: function() {\r\n                        if (this._rowsScrollController) {\r\n                            var _this$getLoadPagePara, _this$_dataSource;\r\n                            var {\r\n                                loadPageCount: loadPageCount\r\n                            } = null !== (_this$getLoadPagePara = this.getLoadPageParams()) && void 0 !== _this$getLoadPagePara ? _this$getLoadPagePara : {};\r\n                            loadPageCount >= 1 && (null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.loadPageCount(loadPageCount))\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    getRowPageSize: function() {\r\n                        var rowPageSize = this.option(\"scrolling.rowPageSize\");\r\n                        var pageSize = this.pageSize();\r\n                        return pageSize && pageSize < rowPageSize ? pageSize : rowPageSize\r\n                    },\r\n                    reload: function() {\r\n                        var rowsScrollController = this._rowsScrollController || this._dataSource;\r\n                        var itemIndex = rowsScrollController && rowsScrollController.getItemIndexByPosition();\r\n                        var result = this.callBase.apply(this, arguments);\r\n                        return result && result.done(() => {\r\n                            if (isVirtualMode(this) || gridCoreUtils.isVirtualRowRendering(this)) {\r\n                                var rowIndexOffset = this.getRowIndexOffset();\r\n                                var rowIndex = Math.floor(itemIndex) - rowIndexOffset;\r\n                                var component = this.component;\r\n                                var scrollable = component.getScrollable && component.getScrollable();\r\n                                var isSortingOperation = this.dataSource().operationTypes().sorting;\r\n                                if (scrollable && !isSortingOperation) {\r\n                                    var rowElement = component.getRowElement(rowIndex);\r\n                                    var $rowElement = rowElement && rowElement[0] && $(rowElement[0]);\r\n                                    var top = $rowElement && $rowElement.position().top;\r\n                                    var isChromeLatest = browser.chrome && browser.version >= 91;\r\n                                    var allowedTopOffset = browser.mozilla || isChromeLatest ? 1 : 0;\r\n                                    if (top > allowedTopOffset) {\r\n                                        top = Math.round(top + getOuterHeight($rowElement) * (itemIndex % 1));\r\n                                        scrollable.scrollTo({\r\n                                            y: top\r\n                                        })\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                    },\r\n                    initVirtualRows: function() {\r\n                        var virtualRowsRendering = gridCoreUtils.isVirtualRowRendering(this);\r\n                        this._allItems = null;\r\n                        this._loadViewportParams = null;\r\n                        if (\"virtual\" !== this.option(\"scrolling.mode\") && true !== virtualRowsRendering || false === virtualRowsRendering || false !== this.option(LEGACY_SCROLLING_MODE) && !this.option(\"scrolling.rowPageSize\")) {\r\n                            this._visibleItems = null;\r\n                            this._rowsScrollController = null;\r\n                            return\r\n                        }\r\n                        var pageIndex = !isVirtualMode(this) && this.pageIndex() >= this.pageCount() ? this.pageCount() - 1 : this.pageIndex();\r\n                        this._rowPageIndex = Math.ceil(pageIndex * this.pageSize() / this.getRowPageSize());\r\n                        this._visibleItems = false === this.option(LEGACY_SCROLLING_MODE) ? null : [];\r\n                        this._viewportChanging = false;\r\n                        this._needUpdateViewportAfterLoading = false;\r\n                        if (!this._rowsScrollController) {\r\n                            this._rowsScrollController = new VirtualScrollController(this.component, this._getRowsScrollDataOptions(), true);\r\n                            this._rowsScrollController.positionChanged.add(() => {\r\n                                var _this$_dataSource2;\r\n                                if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                                    this._viewportChanging = true;\r\n                                    this.loadViewport();\r\n                                    this._viewportChanging = false;\r\n                                    return\r\n                                }\r\n                                null === (_this$_dataSource2 = this._dataSource) || void 0 === _this$_dataSource2 ? void 0 : _this$_dataSource2.setViewportItemIndex(this._rowsScrollController.getViewportItemIndex())\r\n                            })\r\n                        }\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            this._updateLoadViewportParams()\r\n                        }\r\n                        if (this.isLoaded() && false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                            this._rowsScrollController.load()\r\n                        }\r\n                    },\r\n                    isViewportChanging: function() {\r\n                        return this._viewportChanging\r\n                    },\r\n                    _getRowsScrollDataOptions: function() {\r\n                        var that = this;\r\n                        var isItemCountable = function(item) {\r\n                            return isItemCountableByDataSource(item, that._dataSource)\r\n                        };\r\n                        return {\r\n                            pageSize: function() {\r\n                                return that.getRowPageSize()\r\n                            },\r\n                            loadedOffset: function() {\r\n                                var _that$_dataSource;\r\n                                return isVirtualMode(that) && (null === (_that$_dataSource = that._dataSource) || void 0 === _that$_dataSource ? void 0 : _that$_dataSource.lastLoadOptions().skip) || 0\r\n                            },\r\n                            loadedItemCount: function() {\r\n                                return that._itemCount\r\n                            },\r\n                            totalItemsCount: function() {\r\n                                if (isVirtualPaging(that)) {\r\n                                    return that.totalItemsCount()\r\n                                }\r\n                                return false === that.option(LEGACY_SCROLLING_MODE) ? that._itemCount : that._items.filter(isItemCountable).length\r\n                            },\r\n                            hasKnownLastPage: function() {\r\n                                return true\r\n                            },\r\n                            pageIndex: function(index) {\r\n                                if (void 0 !== index) {\r\n                                    that._rowPageIndex = index\r\n                                }\r\n                                return that._rowPageIndex\r\n                            },\r\n                            isLoading: function() {\r\n                                return that.isLoading()\r\n                            },\r\n                            pageCount: function() {\r\n                                var pageCount = Math.ceil(this.totalItemsCount() / this.pageSize());\r\n                                return pageCount ? pageCount : 1\r\n                            },\r\n                            load: function() {\r\n                                if (that._rowsScrollController.pageIndex() >= this.pageCount()) {\r\n                                    that._rowPageIndex = this.pageCount() - 1;\r\n                                    that._rowsScrollController.pageIndex(that._rowPageIndex)\r\n                                }\r\n                                if (!this.items().length && this.totalItemsCount()) {\r\n                                    return\r\n                                }\r\n                                that._rowsScrollController.handleDataChanged(change => {\r\n                                    change = change || {};\r\n                                    change.changeType = change.changeType || \"refresh\";\r\n                                    change.items = change.items || that._visibleItems;\r\n                                    that._visibleItems.forEach((item, index) => {\r\n                                        item.rowIndex = index\r\n                                    });\r\n                                    that._fireChanged(change)\r\n                                })\r\n                            },\r\n                            updateLoading: function() {},\r\n                            itemsCount: function() {\r\n                                return this.items(true).length\r\n                            },\r\n                            correctCount: function(items, count, fromEnd) {\r\n                                return _correctCount(items, count, fromEnd, (item, isNextAfterLast, fromEnd) => {\r\n                                    if (item.isNewRow) {\r\n                                        return isNextAfterLast && !fromEnd\r\n                                    }\r\n                                    if (isNextAfterLast && fromEnd) {\r\n                                        return !item.isNewRow\r\n                                    }\r\n                                    return isItemCountable(item)\r\n                                })\r\n                            },\r\n                            items: function(countableOnly) {\r\n                                var result = that._items;\r\n                                if (that.option(LEGACY_SCROLLING_MODE)) {\r\n                                    var dataSource = that.dataSource();\r\n                                    var virtualItemsCount = null === dataSource || void 0 === dataSource ? void 0 : dataSource.virtualItemsCount();\r\n                                    var begin = virtualItemsCount ? virtualItemsCount.begin : 0;\r\n                                    var rowPageSize = that.getRowPageSize();\r\n                                    var skip = that._rowPageIndex * rowPageSize - begin;\r\n                                    var take = rowPageSize;\r\n                                    if (skip < 0) {\r\n                                        return []\r\n                                    }\r\n                                    if (skip) {\r\n                                        skip = this.correctCount(result, skip);\r\n                                        result = result.slice(skip)\r\n                                    }\r\n                                    if (take) {\r\n                                        take = this.correctCount(result, take);\r\n                                        result = result.slice(0, take)\r\n                                    }\r\n                                }\r\n                                return countableOnly ? result.filter(isItemCountable) : result\r\n                            },\r\n                            viewportItems: function(items) {\r\n                                if (items && false !== that.option(LEGACY_SCROLLING_MODE)) {\r\n                                    that._visibleItems = items\r\n                                }\r\n                                return that._visibleItems\r\n                            },\r\n                            onChanged: function() {},\r\n                            changingDuration: function(e) {\r\n                                var dataSource = that.dataSource();\r\n                                if (null !== dataSource && void 0 !== dataSource && dataSource.isLoading() && false !== that.option(LEGACY_SCROLLING_MODE)) {\r\n                                    return LOAD_TIMEOUT\r\n                                }\r\n                                return (null === dataSource || void 0 === dataSource ? void 0 : dataSource._renderTime) || 0\r\n                            }\r\n                        }\r\n                    },\r\n                    _updateItemsCore: function(change) {\r\n                        var delta = this.getRowIndexDelta();\r\n                        this.callBase.apply(this, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && gridCoreUtils.isVirtualRowRendering(this)) {\r\n                            if (\"update\" === change.changeType && 0 === change.rowIndices.length && change.cancelEmptyChanges) {\r\n                                change.cancel = true\r\n                            }\r\n                            return\r\n                        }\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            var visibleItems = this._visibleItems;\r\n                            var isRefresh = \"refresh\" === change.changeType || change.isLiveUpdate;\r\n                            if (\"append\" === change.changeType && change.items && !change.items.length) {\r\n                                return\r\n                            }\r\n                            if (isRefresh || \"append\" === change.changeType || \"prepend\" === change.changeType) {\r\n                                change.cancel = true;\r\n                                isRefresh && rowsScrollController.reset(true);\r\n                                rowsScrollController.load()\r\n                            } else {\r\n                                if (\"update\" === change.changeType) {\r\n                                    change.rowIndices.forEach((rowIndex, index) => {\r\n                                        var changeType = change.changeTypes[index];\r\n                                        var newItem = change.items[index];\r\n                                        if (\"update\" === changeType) {\r\n                                            visibleItems[rowIndex] = newItem\r\n                                        } else if (\"insert\" === changeType) {\r\n                                            visibleItems.splice(rowIndex, 0, newItem)\r\n                                        } else if (\"remove\" === changeType) {\r\n                                            visibleItems.splice(rowIndex, 1)\r\n                                        }\r\n                                    })\r\n                                } else {\r\n                                    visibleItems.forEach((item, index) => {\r\n                                        visibleItems[index] = this._items[index + delta] || visibleItems[index]\r\n                                    });\r\n                                    change.items = visibleItems\r\n                                }\r\n                                updateItemIndices(visibleItems)\r\n                            }\r\n                        }\r\n                    },\r\n                    _updateLoadViewportParams: function() {\r\n                        var viewportParams = this._rowsScrollController.getViewportParams();\r\n                        var pageSize = this.pageSize();\r\n                        if (viewportParams && !isVirtualPaging(this) && pageSize > 0) {\r\n                            var pageOffset = this.pageIndex() * pageSize;\r\n                            viewportParams.skip += pageOffset\r\n                        }\r\n                        this._loadViewportParams = viewportParams\r\n                    },\r\n                    _processItems: function(items) {\r\n                        var newItems = this.callBase.apply(this, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            var _dataSource$lastLoadO;\r\n                            var dataSource = this._dataSource;\r\n                            var currentIndex = null !== (_dataSource$lastLoadO = null === dataSource || void 0 === dataSource ? void 0 : dataSource.lastLoadOptions().skip) && void 0 !== _dataSource$lastLoadO ? _dataSource$lastLoadO : 0;\r\n                            var prevCountable;\r\n                            var prevRowType;\r\n                            var isPrevRowNew;\r\n                            var wasCountableItem = false;\r\n                            newItems.forEach(item => {\r\n                                var rowType = item.rowType;\r\n                                var itemCountable = isItemCountableByDataSource(item, dataSource);\r\n                                if (!item.isNewRow && isDefined(prevCountable)) {\r\n                                    var isNextGroupItem = \"group\" === rowType && (prevCountable || itemCountable || \"group\" !== prevRowType && currentIndex > 0);\r\n                                    var isNextDataItem = \"data\" === rowType && itemCountable && (prevCountable || \"group\" !== prevRowType);\r\n                                    var isPrevNewRowFirst = isPrevRowNew && !wasCountableItem;\r\n                                    if (isNextGroupItem || isNextDataItem) {\r\n                                        wasCountableItem = true;\r\n                                        if (!isPrevNewRowFirst) {\r\n                                            currentIndex++\r\n                                        }\r\n                                    }\r\n                                }\r\n                                item.loadIndex = currentIndex;\r\n                                prevCountable = itemCountable;\r\n                                prevRowType = rowType;\r\n                                isPrevRowNew = item.isNewRow\r\n                            })\r\n                        }\r\n                        return newItems\r\n                    },\r\n                    _afterProcessItems: function(items) {\r\n                        this._itemCount = items.filter(item => isItemCountableByDataSource(item, this._dataSource)).length;\r\n                        if (isDefined(this._loadViewportParams)) {\r\n                            this._updateLoadViewportParams();\r\n                            var result = items;\r\n                            this._allItems = items;\r\n                            if (items.length) {\r\n                                var {\r\n                                    skipForCurrentPage: skipForCurrentPage\r\n                                } = this.getLoadPageParams(true);\r\n                                var skip = items[0].loadIndex + skipForCurrentPage;\r\n                                var take = this._loadViewportParams.take;\r\n                                result = items.filter(it => {\r\n                                    var isNewRowOnStart = it.isNewRow && it.loadIndex >= skip - 1;\r\n                                    var isNewRowInEmptyData = it.isNewRow && it.loadIndex === skip && 0 === take;\r\n                                    var isLoadIndexGreaterStart = it.loadIndex >= skip || isNewRowOnStart;\r\n                                    var isLoadIndexLessEnd = it.loadIndex < skip + take || isNewRowInEmptyData;\r\n                                    return isLoadIndexGreaterStart && isLoadIndexLessEnd\r\n                                })\r\n                            }\r\n                            return result\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    _applyChange: function(change) {\r\n                        var that = this;\r\n                        var items = change.items;\r\n                        var changeType = change.changeType;\r\n                        var removeCount = change.removeCount;\r\n                        if (removeCount) {\r\n                            var fromEnd = \"prepend\" === changeType;\r\n                            removeCount = _correctCount(that._items, removeCount, fromEnd, (function(item, isNextAfterLast) {\r\n                                return \"data\" === item.rowType && !item.isNewRow || \"group\" === item.rowType && (that._dataSource.isGroupItemCountable(item.data) || isNextAfterLast)\r\n                            }));\r\n                            change.removeCount = removeCount\r\n                        }\r\n                        switch (changeType) {\r\n                            case \"prepend\":\r\n                                that._items.unshift.apply(that._items, items);\r\n                                if (removeCount) {\r\n                                    that._items.splice(-removeCount)\r\n                                }\r\n                                break;\r\n                            case \"append\":\r\n                                that._items.push.apply(that._items, items);\r\n                                if (removeCount) {\r\n                                    that._items.splice(0, removeCount)\r\n                                }\r\n                                break;\r\n                            default:\r\n                                that.callBase(change)\r\n                        }\r\n                    },\r\n                    items: function(allItems) {\r\n                        return allItems ? this._allItems || this._items : this._visibleItems || this._items\r\n                    },\r\n                    getRowIndexDelta: function() {\r\n                        var delta = 0;\r\n                        if (this.option(LEGACY_SCROLLING_MODE)) {\r\n                            var visibleItems = this._visibleItems;\r\n                            if (visibleItems && visibleItems[0]) {\r\n                                delta = this._items.indexOf(visibleItems[0])\r\n                            }\r\n                        }\r\n                        return delta < 0 ? 0 : delta\r\n                    },\r\n                    getRowIndexOffset: function(byLoadedRows) {\r\n                        var offset = 0;\r\n                        var dataSource = this.dataSource();\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var newMode = false === this.option(LEGACY_SCROLLING_MODE);\r\n                        var virtualPaging = isVirtualPaging(this);\r\n                        if (rowsScrollController && !byLoadedRows) {\r\n                            if (newMode && isDefined(this._loadViewportParams)) {\r\n                                var {\r\n                                    skipForCurrentPage: skipForCurrentPage,\r\n                                    pageIndex: pageIndex\r\n                                } = this.getLoadPageParams(true);\r\n                                var items = this.items(true);\r\n                                offset = virtualPaging ? pageIndex * this.pageSize() : 0;\r\n                                if (items.length) {\r\n                                    var firstLoadIndex = items[0].loadIndex;\r\n                                    offset += items.filter(item => item.loadIndex < firstLoadIndex + skipForCurrentPage).length\r\n                                }\r\n                            } else {\r\n                                offset = rowsScrollController.beginPageIndex() * rowsScrollController.pageSize()\r\n                            }\r\n                        } else if (virtualPaging && newMode && dataSource) {\r\n                            var _dataSource$lastLoadO2;\r\n                            offset = null !== (_dataSource$lastLoadO2 = dataSource.lastLoadOptions().skip) && void 0 !== _dataSource$lastLoadO2 ? _dataSource$lastLoadO2 : 0\r\n                        } else if (isVirtualMode(this) && dataSource) {\r\n                            offset = dataSource.beginPageIndex() * dataSource.pageSize()\r\n                        }\r\n                        return offset\r\n                    },\r\n                    viewportSize: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var dataSource = this._dataSource;\r\n                        var result = null === rowsScrollController || void 0 === rowsScrollController ? void 0 : rowsScrollController.viewportSize.apply(rowsScrollController, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            return result\r\n                        }\r\n                        return null === dataSource || void 0 === dataSource ? void 0 : dataSource.viewportSize.apply(dataSource, arguments)\r\n                    },\r\n                    viewportHeight: function(height) {\r\n                        var _this$_rowsScrollCont;\r\n                        null === (_this$_rowsScrollCont = this._rowsScrollController) || void 0 === _this$_rowsScrollCont ? void 0 : _this$_rowsScrollCont.viewportHeight(height)\r\n                    },\r\n                    viewportItemSize: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var dataSource = this._dataSource;\r\n                        var result = null === rowsScrollController || void 0 === rowsScrollController ? void 0 : rowsScrollController.viewportItemSize.apply(rowsScrollController, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            return result\r\n                        }\r\n                        return null === dataSource || void 0 === dataSource ? void 0 : dataSource.viewportItemSize.apply(dataSource, arguments)\r\n                    },\r\n                    setViewportPosition: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var dataSource = this._dataSource;\r\n                        if (rowsScrollController) {\r\n                            rowsScrollController.setViewportPosition.apply(rowsScrollController, arguments)\r\n                        } else {\r\n                            null === dataSource || void 0 === dataSource ? void 0 : dataSource.setViewportPosition.apply(dataSource, arguments)\r\n                        }\r\n                    },\r\n                    setContentItemSizes: function(sizes) {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var dataSource = this._dataSource;\r\n                        var result = null === rowsScrollController || void 0 === rowsScrollController ? void 0 : rowsScrollController.setContentItemSizes(sizes);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            return result\r\n                        }\r\n                        return null === dataSource || void 0 === dataSource ? void 0 : dataSource.setContentItemSizes(sizes)\r\n                    },\r\n                    getPreloadedRowCount: function() {\r\n                        var preloadCount = this.option(\"scrolling.preloadedRowCount\");\r\n                        var preloadEnabled = this.option(\"scrolling.preloadEnabled\");\r\n                        if (isDefined(preloadCount)) {\r\n                            return preloadCount\r\n                        }\r\n                        var viewportSize = this.viewportSize();\r\n                        return preloadEnabled ? 2 * viewportSize : viewportSize\r\n                    },\r\n                    getLoadPageParams: function(byLoadedPage) {\r\n                        var _this$_dataSource3, _this$_dataSource4;\r\n                        var pageSize = this.pageSize();\r\n                        var viewportParams = this._loadViewportParams;\r\n                        var lastLoadOptions = null === (_this$_dataSource3 = this._dataSource) || void 0 === _this$_dataSource3 ? void 0 : _this$_dataSource3.lastLoadOptions();\r\n                        var loadedPageIndex = (null === lastLoadOptions || void 0 === lastLoadOptions ? void 0 : lastLoadOptions.pageIndex) || 0;\r\n                        var loadedTake = (null === lastLoadOptions || void 0 === lastLoadOptions ? void 0 : lastLoadOptions.take) || 0;\r\n                        var isScrollingBack = this._rowsScrollController.isScrollingBack();\r\n                        var topPreloadCount = isScrollingBack ? this.getPreloadedRowCount() : 0;\r\n                        var bottomPreloadCount = isScrollingBack ? 0 : this.getPreloadedRowCount();\r\n                        var totalCountCorrection = (null === (_this$_dataSource4 = this._dataSource) || void 0 === _this$_dataSource4 ? void 0 : _this$_dataSource4.totalCountCorrection()) || 0;\r\n                        var skipWithPreload = Math.max(0, viewportParams.skip - topPreloadCount);\r\n                        var pageIndex = byLoadedPage ? loadedPageIndex : Math.floor(pageSize ? skipWithPreload / pageSize : 0);\r\n                        var pageOffset = pageIndex * pageSize;\r\n                        var skipForCurrentPage = viewportParams.skip - pageOffset;\r\n                        var loadingTake = viewportParams.take + skipForCurrentPage + bottomPreloadCount - totalCountCorrection;\r\n                        var take = byLoadedPage ? loadedTake : loadingTake;\r\n                        var loadPageCount = Math.ceil(pageSize ? take / pageSize : 0);\r\n                        return {\r\n                            pageIndex: pageIndex,\r\n                            loadPageCount: Math.max(1, loadPageCount),\r\n                            skipForCurrentPage: Math.max(0, skipForCurrentPage)\r\n                        }\r\n                    },\r\n                    _updateVisiblePageIndex: function(currentPageIndex) {\r\n                        if (!this._rowsScrollController) {\r\n                            return\r\n                        }\r\n                        if (isDefined(currentPageIndex)) {\r\n                            this._silentOption(VISIBLE_PAGE_INDEX, currentPageIndex);\r\n                            this.pageChanged.fire();\r\n                            return\r\n                        }\r\n                        var viewPortItemIndex = this._rowsScrollController.getViewportItemIndex();\r\n                        var newPageIndex = Math.floor(viewPortItemIndex / this.pageSize());\r\n                        if (this.pageIndex() !== newPageIndex) {\r\n                            this._silentOption(VISIBLE_PAGE_INDEX, newPageIndex);\r\n                            this.updateItems({\r\n                                changeType: \"pageIndex\"\r\n                            })\r\n                        }\r\n                    },\r\n                    _getChangedLoadParams: function() {\r\n                        var loadedPageParams = this.getLoadPageParams(true);\r\n                        var {\r\n                            pageIndex: pageIndex,\r\n                            loadPageCount: loadPageCount\r\n                        } = this.getLoadPageParams();\r\n                        var result = null;\r\n                        if (!this._isLoading && (pageIndex !== loadedPageParams.pageIndex || loadPageCount !== loadedPageParams.loadPageCount)) {\r\n                            result = {\r\n                                pageIndex: pageIndex,\r\n                                loadPageCount: loadPageCount\r\n                            }\r\n                        }\r\n                        return result\r\n                    },\r\n                    _loadItems: function(checkLoading) {\r\n                        var _dataSourceAdapter$lo, _dataSourceAdapter$pa;\r\n                        var virtualPaging = isVirtualPaging(this);\r\n                        var dataSourceAdapter = this._dataSource;\r\n                        var changedParams = this._getChangedLoadParams();\r\n                        var currentLoadPageCount = null !== (_dataSourceAdapter$lo = null === dataSourceAdapter || void 0 === dataSourceAdapter ? void 0 : dataSourceAdapter.loadPageCount()) && void 0 !== _dataSourceAdapter$lo ? _dataSourceAdapter$lo : 0;\r\n                        var lastRequiredItemCount = this.pageSize() * currentLoadPageCount;\r\n                        var currentPageIndex = null !== (_dataSourceAdapter$pa = null === dataSourceAdapter || void 0 === dataSourceAdapter ? void 0 : dataSourceAdapter.pageIndex()) && void 0 !== _dataSourceAdapter$pa ? _dataSourceAdapter$pa : 0;\r\n                        var pageIndexNotChanged = (null === changedParams || void 0 === changedParams ? void 0 : changedParams.pageIndex) === currentPageIndex;\r\n                        var allLoadedInAppendMode = isAppendMode(this) && this.totalItemsCount() < lastRequiredItemCount;\r\n                        var result = false;\r\n                        if (!dataSourceAdapter || virtualPaging && checkLoading && ((null === changedParams || void 0 === changedParams ? void 0 : changedParams.pageIndex) > currentPageIndex || pageIndexNotChanged && allLoadedInAppendMode)) {\r\n                            return result\r\n                        }\r\n                        if (virtualPaging && this._isLoading) {\r\n                            this._needUpdateViewportAfterLoading = true\r\n                        }\r\n                        if (virtualPaging && changedParams) {\r\n                            result = true;\r\n                            dataSourceAdapter.pageIndex(changedParams.pageIndex);\r\n                            dataSourceAdapter.loadPageCount(changedParams.loadPageCount);\r\n                            this._repaintChangesOnly = true;\r\n                            this._needUpdateDimensions = true;\r\n                            var viewportChanging = this._viewportChanging;\r\n                            this.load().always(() => {\r\n                                this._repaintChangesOnly = void 0;\r\n                                this._needUpdateDimensions = void 0\r\n                            }).done(() => {\r\n                                var isLastPage = this.pageCount() > 0 && this.pageIndex() === this.pageCount() - 1;\r\n                                (viewportChanging || isLastPage) && this._updateVisiblePageIndex();\r\n                                if (this._needUpdateViewportAfterLoading) {\r\n                                    this._needUpdateViewportAfterLoading = false;\r\n                                    this.loadViewport({\r\n                                        checkLoadedParamsOnly: true\r\n                                    })\r\n                                }\r\n                            })\r\n                        }\r\n                        return result\r\n                    },\r\n                    loadViewport: function(params) {\r\n                        var {\r\n                            checkLoadedParamsOnly: checkLoadedParamsOnly,\r\n                            checkLoading: checkLoading\r\n                        } = null !== params && void 0 !== params ? params : {};\r\n                        var virtualPaging = isVirtualPaging(this);\r\n                        if (virtualPaging || gridCoreUtils.isVirtualRowRendering(this)) {\r\n                            this._updateLoadViewportParams();\r\n                            var loadingItemsStarted = this._loadItems(checkLoading);\r\n                            if (!loadingItemsStarted && !(this._isLoading && checkLoading) && !checkLoadedParamsOnly) {\r\n                                this.updateItems({\r\n                                    repaintChangesOnly: true,\r\n                                    needUpdateDimensions: true,\r\n                                    useProcessedItemsCache: true,\r\n                                    cancelEmptyChanges: true\r\n                                })\r\n                            }\r\n                        }\r\n                    },\r\n                    updateViewport: function() {\r\n                        var _this$_loadViewportPa, _this$_loadViewportPa2;\r\n                        var viewportSize = this.viewportSize();\r\n                        var itemCount = this.items().length;\r\n                        var viewportIsNotFilled = viewportSize > itemCount;\r\n                        var currentTake = null !== (_this$_loadViewportPa = null === (_this$_loadViewportPa2 = this._loadViewportParams) || void 0 === _this$_loadViewportPa2 ? void 0 : _this$_loadViewportPa2.take) && void 0 !== _this$_loadViewportPa ? _this$_loadViewportPa : 0;\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var newTake = null === rowsScrollController || void 0 === rowsScrollController ? void 0 : rowsScrollController.getViewportParams().take;\r\n                        (viewportIsNotFilled || currentTake < newTake) && itemCount && this.loadViewport({\r\n                            checkLoading: true\r\n                        })\r\n                    },\r\n                    loadIfNeed: function() {\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            return\r\n                        }\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        rowsScrollController && rowsScrollController.loadIfNeed();\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.loadIfNeed()\r\n                    },\r\n                    getItemSize: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.getItemSize.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.getItemSize.apply(dataSource, arguments)\r\n                    },\r\n                    getItemSizes: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.getItemSizes.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.getItemSizes.apply(dataSource, arguments)\r\n                    },\r\n                    getContentOffset: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.getContentOffset.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.getContentOffset.apply(dataSource, arguments)\r\n                    },\r\n                    refresh: function(options) {\r\n                        var dataSource = this._dataSource;\r\n                        if (dataSource && options && options.load && isAppendMode(this)) {\r\n                            dataSource.resetCurrentTotalCount()\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    dispose: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        rowsScrollController && rowsScrollController.dispose();\r\n                        this.callBase.apply(this, arguments)\r\n                    },\r\n                    topItemIndex: function() {\r\n                        var _this$_loadViewportPa3;\r\n                        return null === (_this$_loadViewportPa3 = this._loadViewportParams) || void 0 === _this$_loadViewportPa3 ? void 0 : _this$_loadViewportPa3.skip\r\n                    },\r\n                    bottomItemIndex: function() {\r\n                        var viewportParams = this._loadViewportParams;\r\n                        return viewportParams && viewportParams.skip + viewportParams.take\r\n                    },\r\n                    virtualItemsCount: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.virtualItemsCount.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return null === dataSource || void 0 === dataSource ? void 0 : dataSource.virtualItemsCount.apply(dataSource, arguments)\r\n                    },\r\n                    pageIndex: function(_pageIndex) {\r\n                        var virtualPaging = isVirtualPaging(this);\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && virtualPaging && rowsScrollController) {\r\n                            if (void 0 === _pageIndex) {\r\n                                var _this$option;\r\n                                return null !== (_this$option = this.option(VISIBLE_PAGE_INDEX)) && void 0 !== _this$option ? _this$option : 0\r\n                            }\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    _fireChanged: function(e) {\r\n                        this.callBase.apply(this, arguments);\r\n                        var {\r\n                            operationTypes: operationTypes\r\n                        } = e;\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && isVirtualPaging(this) && operationTypes) {\r\n                            var {\r\n                                fullReload: fullReload,\r\n                                pageIndex: pageIndex\r\n                            } = operationTypes;\r\n                            if (e.isDataChanged && !fullReload && pageIndex) {\r\n                                this._updateVisiblePageIndex(this._dataSource.pageIndex())\r\n                            }\r\n                        }\r\n                    },\r\n                    _getPagingOptionValue: function(optionName) {\r\n                        var result = this.callBase.apply(this, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && isVirtualPaging(this)) {\r\n                            result = this[optionName]()\r\n                        }\r\n                        return result\r\n                    },\r\n                    isEmpty: function() {\r\n                        return false === this.option(LEGACY_SCROLLING_MODE) ? !this.items(true).length : this.callBase(this, arguments)\r\n                    },\r\n                    isLastPageLoaded: function() {\r\n                        var result = false;\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && isVirtualPaging(this)) {\r\n                            var {\r\n                                pageIndex: pageIndex,\r\n                                loadPageCount: loadPageCount\r\n                            } = this.getLoadPageParams(true);\r\n                            var pageCount = this.pageCount();\r\n                            result = pageIndex + loadPageCount >= pageCount\r\n                        } else {\r\n                            result = this.callBase.apply(this, arguments)\r\n                        }\r\n                        return result\r\n                    },\r\n                    reset: function() {\r\n                        this._itemCount = 0;\r\n                        this._allItems = null;\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                };\r\n                gridCoreUtils.proxyMethod(members, \"getVirtualContentSize\");\r\n                gridCoreUtils.proxyMethod(members, \"setViewportItemIndex\");\r\n                return members\r\n            }(),\r\n            resizing: {\r\n                resize: function() {\r\n                    var that = this;\r\n                    var callBase = that.callBase;\r\n                    var result;\r\n                    if (isVirtualMode(that) || gridCoreUtils.isVirtualRowRendering(that)) {\r\n                        clearTimeout(that._resizeTimeout);\r\n                        var diff = new Date - that._lastTime;\r\n                        var updateTimeout = that.option(\"scrolling.updateTimeout\");\r\n                        if (that._lastTime && diff < updateTimeout) {\r\n                            result = new Deferred;\r\n                            that._resizeTimeout = setTimeout((function() {\r\n                                callBase.apply(that).done(result.resolve).fail(result.reject);\r\n                                that._lastTime = new Date\r\n                            }), updateTimeout);\r\n                            that._lastTime = new Date\r\n                        } else {\r\n                            result = callBase.apply(that);\r\n                            if (that._dataController.isLoaded()) {\r\n                                that._lastTime = new Date\r\n                            }\r\n                        }\r\n                    } else {\r\n                        result = callBase.apply(that)\r\n                    }\r\n                    return result\r\n                },\r\n                dispose: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    clearTimeout(this._resizeTimeout)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: VirtualScrollingRowsViewExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.virtual_scrolling.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport dataSourceAdapter from \"./ui.data_grid.data_source_adapter\";\r\nimport {\r\n    virtualScrollingModule\r\n} from \"../grid_core/ui.grid_core.virtual_scrolling\";\r\ngridCore.registerModule(\"virtualScrolling\", virtualScrollingModule);\r\ndataSourceAdapter.extend(virtualScrollingModule.extenders.dataSourceAdapter);\r\n","/**\r\n * DevExtreme (esm/ui/overlay/utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getInnerHeight,\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    isNumeric\r\n} from \"../../core/utils/type\";\r\nvar WINDOW_HEIGHT_PERCENT = .9;\r\nexport var getElementMaxHeightByWindow = ($element, startLocation) => {\r\n    var $window = $(getWindow());\r\n    var {\r\n        top: elementOffset\r\n    } = $element.offset();\r\n    var actualOffset;\r\n    if (isNumeric(startLocation)) {\r\n        if (startLocation < elementOffset) {\r\n            return elementOffset - startLocation\r\n        } else {\r\n            actualOffset = getInnerHeight($window) - startLocation + $window.scrollTop()\r\n        }\r\n    } else {\r\n        var offsetTop = elementOffset - $window.scrollTop();\r\n        var offsetBottom = getInnerHeight($window) - offsetTop - getOuterHeight($element);\r\n        actualOffset = Math.max(offsetTop, offsetBottom)\r\n    }\r\n    return actualOffset * WINDOW_HEIGHT_PERCENT\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/menu/ui.submenu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth,\r\n    getHeight,\r\n    setWidth,\r\n    setHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport animationPosition from \"../../animation/position\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport ContextMenu from \"../context_menu\";\r\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\";\r\nvar DX_SUBMENU_CLASS = \"dx-submenu\";\r\nclass Submenu extends ContextMenu {\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            orientation: \"horizontal\",\r\n            tabIndex: null,\r\n            onHoverStart: noop\r\n        })\r\n    }\r\n    _initDataAdapter() {\r\n        this._dataAdapter = this.option(\"_dataAdapter\");\r\n        if (!this._dataAdapter) {\r\n            super._initDataAdapter()\r\n        }\r\n    }\r\n    _renderContentImpl() {\r\n        this._renderContextMenuOverlay();\r\n        super._renderContentImpl();\r\n        var node = this._dataAdapter.getNodeByKey(this.option(\"_parentKey\"));\r\n        node && this._renderItems(this._getChildNodes(node));\r\n        this._renderDelimiter()\r\n    }\r\n    _renderDelimiter() {\r\n        this.$contentDelimiter = $(\"<div>\").appendTo(this._itemContainer()).addClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)\r\n    }\r\n    _getOverlayOptions() {\r\n        return extend(super._getOverlayOptions(), {\r\n            onPositioned: this._overlayPositionedActionHandler.bind(this)\r\n        })\r\n    }\r\n    _overlayPositionedActionHandler(arg) {\r\n        this._showDelimiter(arg)\r\n    }\r\n    _hoverEndHandler(e) {\r\n        super._hoverEndHandler(e);\r\n        this._toggleFocusClass(false, e.currentTarget)\r\n    }\r\n    _isMenuHorizontal() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    }\r\n    _hoverStartHandler(e) {\r\n        var hoverStartAction = this.option(\"onHoverStart\");\r\n        hoverStartAction(e);\r\n        super._hoverStartHandler(e);\r\n        this._toggleFocusClass(true, e.currentTarget)\r\n    }\r\n    _drawSubmenu($rootItem) {\r\n        this._actions.onShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        });\r\n        super._drawSubmenu($rootItem);\r\n        this._actions.onShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        })\r\n    }\r\n    _hideSubmenu($rootItem) {\r\n        this._actions.onHiding({\r\n            cancel: true,\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        });\r\n        super._hideSubmenu($rootItem);\r\n        this._actions.onHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        })\r\n    }\r\n    _showDelimiter(arg) {\r\n        if (!this.$contentDelimiter) {\r\n            return\r\n        }\r\n        var $submenu = this._itemContainer().children(\".\".concat(DX_SUBMENU_CLASS)).eq(0);\r\n        var $rootItem = this.option(\"position\").of;\r\n        var position = {\r\n            of: $submenu\r\n        };\r\n        var containerOffset = arg.position;\r\n        var vLocation = containerOffset.v.location;\r\n        var hLocation = containerOffset.h.location;\r\n        var rootOffset = $rootItem.offset();\r\n        var offsetLeft = Math.round(rootOffset.left);\r\n        var offsetTop = Math.round(rootOffset.top);\r\n        var rootWidth = getWidth($rootItem);\r\n        var rootHeight = getHeight($rootItem);\r\n        var submenuWidth = getWidth($submenu);\r\n        var submenuHeight = getHeight($submenu);\r\n        this.$contentDelimiter.css(\"display\", \"block\");\r\n        setWidth(this.$contentDelimiter, this._isMenuHorizontal() ? rootWidth < submenuWidth ? rootWidth - 2 : submenuWidth : 2);\r\n        setHeight(this.$contentDelimiter, this._isMenuHorizontal() ? 2 : rootHeight < submenuHeight ? rootHeight - 2 : submenuHeight);\r\n        if (this._isMenuHorizontal()) {\r\n            if (vLocation > offsetTop) {\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 -1\";\r\n                    position.at = position.my = \"left top\"\r\n                } else {\r\n                    position.offset = \"-1 -1\";\r\n                    position.at = position.my = \"right top\"\r\n                }\r\n            } else {\r\n                setHeight(this.$contentDelimiter, 5);\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 4\";\r\n                    position.at = position.my = \"left bottom\"\r\n                } else {\r\n                    position.offset = \"-1 2\";\r\n                    position.at = position.my = \"right bottom\"\r\n                }\r\n            }\r\n        } else if (hLocation > offsetLeft) {\r\n            if (Math.round(vLocation) === offsetTop) {\r\n                position.offset = \"-1 1\";\r\n                position.at = position.my = \"left top\"\r\n            } else {\r\n                position.offset = \"-1 -1\";\r\n                position.at = position.my = \"left bottom\"\r\n            }\r\n        } else if (Math.round(vLocation) === offsetTop) {\r\n            position.offset = \"1 1\";\r\n            position.at = position.my = \"right top\"\r\n        } else {\r\n            position.offset = \"1 -1\";\r\n            position.at = position.my = \"right bottom\"\r\n        }\r\n        animationPosition.setup(this.$contentDelimiter, position)\r\n    }\r\n    _getContextMenuPosition() {\r\n        return this.option(\"position\")\r\n    }\r\n    isOverlayVisible() {\r\n        return this._overlay.option(\"visible\")\r\n    }\r\n    getOverlayContent() {\r\n        return this._overlay.$content()\r\n    }\r\n}\r\nexport default Submenu;\r\n","/**\r\n * DevExtreme (esm/ui/menu/ui.menu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isPlainObject,\r\n    isObject,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getElementMaxHeightByWindow\r\n} from \"../overlay/utils\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    end as hoverEventEnd\r\n} from \"../../events/hover\";\r\nimport MenuBase from \"../context_menu/ui.menu_base\";\r\nimport Overlay from \"../overlay/ui.overlay\";\r\nimport Submenu from \"./ui.submenu\";\r\nimport Button from \"../button\";\r\nimport TreeView from \"../tree_view\";\r\nvar DX_MENU_CLASS = \"dx-menu\";\r\nvar DX_MENU_VERTICAL_CLASS = DX_MENU_CLASS + \"-vertical\";\r\nvar DX_MENU_HORIZONTAL_CLASS = DX_MENU_CLASS + \"-horizontal\";\r\nvar DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\";\r\nvar DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\";\r\nvar DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\";\r\nvar DX_CONTEXT_MENU_CLASS = \"dx-context-menu\";\r\nvar DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS = DX_CONTEXT_MENU_CLASS + \"-container-border\";\r\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\";\r\nvar DX_SUBMENU_CLASS = \"dx-submenu\";\r\nvar DX_STATE_DISABLED_CLASS = \"dx-state-disabled\";\r\nvar DX_STATE_HOVER_CLASS = \"dx-state-hover\";\r\nvar DX_STATE_ACTIVE_CLASS = \"dx-state-active\";\r\nvar DX_ADAPTIVE_MODE_CLASS = DX_MENU_CLASS + \"-adaptive-mode\";\r\nvar DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS = DX_MENU_CLASS + \"-hamburger-button\";\r\nvar DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS = DX_ADAPTIVE_MODE_CLASS + \"-overlay-wrapper\";\r\nvar FOCUS_UP = \"up\";\r\nvar FOCUS_DOWN = \"down\";\r\nvar FOCUS_LEFT = \"left\";\r\nvar FOCUS_RIGHT = \"right\";\r\nvar SHOW_SUBMENU_OPERATION = \"showSubmenu\";\r\nvar NEXTITEM_OPERATION = \"nextItem\";\r\nvar PREVITEM_OPERATION = \"prevItem\";\r\nvar DEFAULT_DELAY = {\r\n    show: 50,\r\n    hide: 300\r\n};\r\nvar ACTIONS = [\"onSubmenuShowing\", \"onSubmenuShown\", \"onSubmenuHiding\", \"onSubmenuHidden\", \"onItemContextMenu\", \"onItemClick\", \"onSelectionChanged\", \"onItemRendered\"];\r\nclass Menu extends MenuBase {\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            orientation: \"horizontal\",\r\n            submenuDirection: \"auto\",\r\n            showFirstSubmenuMode: {\r\n                name: \"onClick\",\r\n                delay: {\r\n                    show: 50,\r\n                    hide: 300\r\n                }\r\n            },\r\n            hideSubmenuOnMouseLeave: false,\r\n            onSubmenuShowing: null,\r\n            onSubmenuShown: null,\r\n            onSubmenuHiding: null,\r\n            onSubmenuHidden: null,\r\n            adaptivityEnabled: false\r\n        })\r\n    }\r\n    _setOptionsByReference() {\r\n        super._setOptionsByReference();\r\n        extend(this._optionsByReference, {\r\n            animation: true,\r\n            selectedItem: true\r\n        })\r\n    }\r\n    _itemElements() {\r\n        var rootMenuElements = super._itemElements();\r\n        var submenuElements = this._submenuItemElements();\r\n        return rootMenuElements.add(submenuElements)\r\n    }\r\n    _submenuItemElements() {\r\n        var elements = [];\r\n        var itemSelector = \".\".concat(DX_MENU_ITEM_CLASS);\r\n        var currentSubmenu = this._submenus.length && this._submenus[0];\r\n        if (currentSubmenu && currentSubmenu.itemsContainer()) {\r\n            elements = currentSubmenu.itemsContainer().find(itemSelector)\r\n        }\r\n        return elements\r\n    }\r\n    _focusTarget() {\r\n        return this.$element()\r\n    }\r\n    _isMenuHorizontal() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    }\r\n    _moveFocus(location) {\r\n        var $items = this._getAvailableItems();\r\n        var isMenuHorizontal = this._isMenuHorizontal();\r\n        var $activeItem = this._getActiveItem(true);\r\n        var argument;\r\n        var operation;\r\n        var navigationAction;\r\n        var $newTarget;\r\n        switch (location) {\r\n            case FOCUS_UP:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(PREVITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_DOWN:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(NEXTITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_RIGHT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(NEXTITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_LEFT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(PREVITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            default:\r\n                return super._moveFocus(location)\r\n        }\r\n        if ($newTarget && 0 !== $newTarget.length) {\r\n            this.option(\"focusedElement\", getPublicElement($newTarget))\r\n        }\r\n    }\r\n    _getItemsNavigationOperation(operation) {\r\n        var navOperation = operation;\r\n        if (this.option(\"rtlEnabled\")) {\r\n            navOperation = operation === PREVITEM_OPERATION ? NEXTITEM_OPERATION : PREVITEM_OPERATION\r\n        }\r\n        return navOperation\r\n    }\r\n    _getKeyboardNavigationAction(operation, argument) {\r\n        var action = noop;\r\n        switch (operation) {\r\n            case SHOW_SUBMENU_OPERATION:\r\n                if (!argument.hasClass(DX_STATE_DISABLED_CLASS)) {\r\n                    action = this._showSubmenu.bind(this, argument)\r\n                }\r\n                break;\r\n            case NEXTITEM_OPERATION:\r\n                action = this._nextItem.bind(this, argument);\r\n                break;\r\n            case PREVITEM_OPERATION:\r\n                action = this._prevItem.bind(this, argument)\r\n        }\r\n        return action\r\n    }\r\n    _clean() {\r\n        super._clean();\r\n        this.option(\"templatesRenderAsynchronously\") && clearTimeout(this._resizeEventTimer)\r\n    }\r\n    _visibilityChanged(visible) {\r\n        if (visible) {\r\n            if (!this._menuItemsWidth) {\r\n                this._updateItemsWidthCache()\r\n            }\r\n            this._dimensionChanged()\r\n        }\r\n    }\r\n    _isAdaptivityEnabled() {\r\n        return this.option(\"adaptivityEnabled\") && \"horizontal\" === this.option(\"orientation\")\r\n    }\r\n    _updateItemsWidthCache() {\r\n        var $menuItems = this.$element().find(\"ul\").first().children(\"li\").children(\".\".concat(DX_MENU_ITEM_CLASS));\r\n        this._menuItemsWidth = this._getSummaryItemsWidth($menuItems, true)\r\n    }\r\n    _dimensionChanged() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        var containerWidth = getOuterWidth(this.$element());\r\n        this._toggleAdaptiveMode(this._menuItemsWidth > containerWidth)\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this._submenus = []\r\n    }\r\n    _initActions() {\r\n        this._actions = {};\r\n        each(ACTIONS, (index, action) => {\r\n            this._actions[action] = this._createActionByOption(action)\r\n        })\r\n    }\r\n    _initMarkup() {\r\n        this._visibleSubmenu = null;\r\n        this.$element().addClass(DX_MENU_CLASS);\r\n        super._initMarkup();\r\n        this.setAria(\"role\", \"menubar\")\r\n    }\r\n    _render() {\r\n        super._render();\r\n        this._initAdaptivity()\r\n    }\r\n    _renderHamburgerButton() {\r\n        this._hamburger = new Button($(\"<div>\").addClass(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS), {\r\n            icon: \"menu\",\r\n            activeStateEnabled: false,\r\n            onClick: this._toggleTreeView.bind(this)\r\n        });\r\n        return this._hamburger.$element()\r\n    }\r\n    _toggleTreeView(state) {\r\n        if (isPlainObject(state)) {\r\n            state = !this._overlay.option(\"visible\")\r\n        }\r\n        this._overlay.option(\"visible\", state);\r\n        this._toggleHamburgerActiveState(state)\r\n    }\r\n    _toggleHamburgerActiveState(state) {\r\n        this._hamburger && this._hamburger.$element().toggleClass(DX_STATE_ACTIVE_CLASS, state)\r\n    }\r\n    _toggleAdaptiveMode(state) {\r\n        var $menuItemsContainer = this.$element().find(\".\".concat(DX_MENU_HORIZONTAL_CLASS));\r\n        var $adaptiveElements = this.$element().find(\".\".concat(DX_ADAPTIVE_MODE_CLASS));\r\n        if (state) {\r\n            this._hideVisibleSubmenu()\r\n        } else {\r\n            this._treeView && this._treeView.collapseAll();\r\n            this._overlay && this._toggleTreeView(state)\r\n        }\r\n        $menuItemsContainer.toggle(!state);\r\n        $adaptiveElements.toggle(state)\r\n    }\r\n    _removeAdaptivity() {\r\n        if (!this._$adaptiveContainer) {\r\n            return\r\n        }\r\n        this._toggleAdaptiveMode(false);\r\n        this._$adaptiveContainer.remove();\r\n        this._$adaptiveContainer = null;\r\n        this._treeView = null;\r\n        this._hamburger = null;\r\n        this._overlay = null\r\n    }\r\n    _treeviewItemClickHandler(e) {\r\n        this._actions.onItemClick(e);\r\n        if (!e.node.children.length) {\r\n            this._toggleTreeView(false)\r\n        }\r\n    }\r\n    _getAdaptiveOverlayOptions() {\r\n        var rtl = this.option(\"rtlEnabled\");\r\n        var position = rtl ? \"right\" : \"left\";\r\n        return {\r\n            _ignoreFunctionValueDeprecation: true,\r\n            maxHeight: () => getElementMaxHeightByWindow(this.$element()),\r\n            deferRendering: false,\r\n            shading: false,\r\n            animation: false,\r\n            hideOnParentScroll: true,\r\n            onHidden: () => {\r\n                this._toggleHamburgerActiveState(false)\r\n            },\r\n            height: \"auto\",\r\n            closeOnOutsideClick: e => !$(e.target).closest(\".\".concat(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS)).length,\r\n            position: {\r\n                collision: \"flipfit\",\r\n                at: \"bottom \" + position,\r\n                my: \"top \" + position,\r\n                of: this._hamburger.$element()\r\n            }\r\n        }\r\n    }\r\n    _getTreeViewOptions() {\r\n        var menuOptions = {};\r\n        each([\"rtlEnabled\", \"width\", \"accessKey\", \"activeStateEnabled\", \"animation\", \"dataSource\", \"disabled\", \"displayExpr\", \"displayExpr\", \"focusStateEnabled\", \"hint\", \"hoverStateEnabled\", \"itemsExpr\", \"items\", \"itemTemplate\", \"selectedExpr\", \"selectionMode\", \"tabIndex\", \"visible\"], (_, option) => {\r\n            menuOptions[option] = this.option(option)\r\n        });\r\n        each([\"onItemContextMenu\", \"onSelectionChanged\"], (_, actionName) => {\r\n            menuOptions[actionName] = e => {\r\n                this._actions[actionName](e)\r\n            }\r\n        });\r\n        return extend(menuOptions, {\r\n            dataSource: this.getDataSource(),\r\n            animationEnabled: !!this.option(\"animation\"),\r\n            onItemClick: this._treeviewItemClickHandler.bind(this),\r\n            onItemExpanded: e => {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuShown(e)\r\n            },\r\n            onItemCollapsed: e => {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuHidden(e)\r\n            },\r\n            selectNodesRecursive: false,\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            expandEvent: \"click\"\r\n        })\r\n    }\r\n    _initAdaptivity() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        this._$adaptiveContainer = $(\"<div>\").addClass(DX_ADAPTIVE_MODE_CLASS);\r\n        var $hamburger = this._renderHamburgerButton();\r\n        this._treeView = this._createComponent($(\"<div>\"), TreeView, this._getTreeViewOptions());\r\n        this._overlay = this._createComponent($(\"<div>\"), Overlay, this._getAdaptiveOverlayOptions());\r\n        this._overlay.$content().append(this._treeView.$element()).addClass(DX_ADAPTIVE_MODE_CLASS).addClass(this.option(\"cssClass\"));\r\n        this._overlay.$wrapper().addClass(DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS);\r\n        this._$adaptiveContainer.append($hamburger);\r\n        this._$adaptiveContainer.append(this._overlay.$element());\r\n        this.$element().append(this._$adaptiveContainer);\r\n        this._updateItemsWidthCache();\r\n        this._dimensionChanged()\r\n    }\r\n    _getDelay(delayType) {\r\n        var delay = this.option(\"showFirstSubmenuMode\").delay;\r\n        if (!isDefined(delay)) {\r\n            return DEFAULT_DELAY[delayType]\r\n        } else {\r\n            return isObject(delay) ? delay[delayType] : delay\r\n        }\r\n    }\r\n    _keyboardHandler(e) {\r\n        return super._keyboardHandler(e, !!this._visibleSubmenu)\r\n    }\r\n    _renderContainer() {\r\n        var $wrapper = $(\"<div>\");\r\n        $wrapper.appendTo(this.$element()).addClass(this._isMenuHorizontal() ? DX_MENU_HORIZONTAL_CLASS : DX_MENU_VERTICAL_CLASS);\r\n        return super._renderContainer($wrapper)\r\n    }\r\n    _renderSubmenuItems(node, $itemFrame) {\r\n        var submenu = this._createSubmenu(node, $itemFrame);\r\n        this._submenus.push(submenu);\r\n        this._renderBorderElement($itemFrame);\r\n        return submenu\r\n    }\r\n    _getKeyboardListeners() {\r\n        return super._getKeyboardListeners().concat(this._visibleSubmenu)\r\n    }\r\n    _createSubmenu(node, $rootItem) {\r\n        var $submenuContainer = $(\"<div>\").addClass(DX_CONTEXT_MENU_CLASS).appendTo($rootItem);\r\n        var items = this._getChildNodes(node);\r\n        var result = this._createComponent($submenuContainer, Submenu, extend(this._getSubmenuOptions(), {\r\n            _dataAdapter: this._dataAdapter,\r\n            _parentKey: node.internalFields.key,\r\n            items: items,\r\n            onHoverStart: this._clearTimeouts.bind(this),\r\n            position: this.getSubmenuPosition($rootItem)\r\n        }));\r\n        this._attachSubmenuHandlers($rootItem, result);\r\n        return result\r\n    }\r\n    _getSubmenuOptions() {\r\n        var $submenuTarget = $(\"<div>\");\r\n        var isMenuHorizontal = this._isMenuHorizontal();\r\n        return {\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            target: $submenuTarget,\r\n            orientation: this.option(\"orientation\"),\r\n            selectionMode: this.option(\"selectionMode\"),\r\n            cssClass: this.option(\"cssClass\"),\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            animation: this.option(\"animation\"),\r\n            showSubmenuMode: this.option(\"showSubmenuMode\"),\r\n            displayExpr: this.option(\"displayExpr\"),\r\n            disabledExpr: this.option(\"disabledExpr\"),\r\n            selectedExpr: this.option(\"selectedExpr\"),\r\n            itemsExpr: this.option(\"itemsExpr\"),\r\n            onFocusedItemChanged: e => {\r\n                if (!e.component.option(\"visible\")) {\r\n                    return\r\n                }\r\n                this.option(\"focusedElement\", e.component.option(\"focusedElement\"))\r\n            },\r\n            onSelectionChanged: this._nestedItemOnSelectionChangedHandler.bind(this),\r\n            onItemClick: this._nestedItemOnItemClickHandler.bind(this),\r\n            onItemRendered: this._nestedItemOnItemRenderedHandler.bind(this),\r\n            onLeftFirstItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, PREVITEM_OPERATION),\r\n            onLeftLastItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION),\r\n            onCloseRootSubmenu: this._moveMainMenuFocus.bind(this, isMenuHorizontal ? PREVITEM_OPERATION : null),\r\n            onExpandLastSubmenu: isMenuHorizontal ? this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION) : null\r\n        }\r\n    }\r\n    _getShowFirstSubmenuMode() {\r\n        if (!this._isDesktopDevice()) {\r\n            return \"onClick\"\r\n        }\r\n        var optionValue = this.option(\"showFirstSubmenuMode\");\r\n        return isObject(optionValue) ? optionValue.name : optionValue\r\n    }\r\n    _moveMainMenuFocus(direction) {\r\n        var $items = this._getAvailableItems();\r\n        var itemCount = $items.length;\r\n        var $currentItem = $items.filter(\".\".concat(DX_MENU_ITEM_EXPANDED_CLASS)).eq(0);\r\n        var itemIndex = $items.index($currentItem);\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        itemIndex += direction === PREVITEM_OPERATION ? -1 : 1;\r\n        if (itemIndex >= itemCount) {\r\n            itemIndex = 0\r\n        } else if (itemIndex < 0) {\r\n            itemIndex = itemCount - 1\r\n        }\r\n        var $newItem = $items.eq(itemIndex);\r\n        this.option(\"focusedElement\", getPublicElement($newItem))\r\n    }\r\n    _nestedItemOnSelectionChangedHandler(args) {\r\n        var selectedItem = args.addedItems.length && args.addedItems[0];\r\n        var submenu = Submenu.getInstance(args.element);\r\n        var onSelectionChanged = this._actions.onSelectionChanged;\r\n        onSelectionChanged(args);\r\n        selectedItem && this._clearSelectionInSubmenus(selectedItem[0], submenu);\r\n        this._clearRootSelection();\r\n        this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem)\r\n    }\r\n    _clearSelectionInSubmenus(item, targetSubmenu) {\r\n        var cleanAllSubmenus = !arguments.length;\r\n        each(this._submenus, (index, submenu) => {\r\n            var $submenu = submenu._itemContainer();\r\n            var isOtherItem = !$submenu.is(targetSubmenu && targetSubmenu._itemContainer());\r\n            var $selectedItem = $submenu.find(\".\".concat(this._selectedItemClass()));\r\n            if (isOtherItem && $selectedItem.length || cleanAllSubmenus) {\r\n                $selectedItem.removeClass(this._selectedItemClass());\r\n                var selectedItemData = this._getItemData($selectedItem);\r\n                if (selectedItemData) {\r\n                    selectedItemData.selected = false\r\n                }\r\n                submenu._clearSelectedItems()\r\n            }\r\n        })\r\n    }\r\n    _clearRootSelection() {\r\n        var $prevSelectedItem = this.$element().find(\".\".concat(DX_MENU_ITEMS_CONTAINER_CLASS)).first().children().children().filter(\".\".concat(this._selectedItemClass()));\r\n        if ($prevSelectedItem.length) {\r\n            var prevSelectedItemData = this._getItemData($prevSelectedItem);\r\n            prevSelectedItemData.selected = false;\r\n            $prevSelectedItem.removeClass(this._selectedItemClass())\r\n        }\r\n    }\r\n    _nestedItemOnItemClickHandler(e) {\r\n        this._actions.onItemClick(e)\r\n    }\r\n    _nestedItemOnItemRenderedHandler(e) {\r\n        this._actions.onItemRendered(e)\r\n    }\r\n    _attachSubmenuHandlers($rootItem, submenu) {\r\n        var $submenuOverlayContent = submenu.getOverlayContent();\r\n        var submenus = $submenuOverlayContent.find(\".\".concat(DX_SUBMENU_CLASS));\r\n        var submenuMouseLeaveName = addNamespace(hoverEventEnd, this.NAME + \"_submenu\");\r\n        submenu.option({\r\n            onShowing: this._submenuOnShowingHandler.bind(this, $rootItem, submenu),\r\n            onShown: this._submenuOnShownHandler.bind(this, $rootItem, submenu),\r\n            onHiding: this._submenuOnHidingHandler.bind(this, $rootItem, submenu),\r\n            onHidden: this._submenuOnHiddenHandler.bind(this, $rootItem, submenu)\r\n        });\r\n        each(submenus, (index, submenu) => {\r\n            eventsEngine.off(submenu, submenuMouseLeaveName);\r\n            eventsEngine.on(submenu, submenuMouseLeaveName, null, this._submenuMouseLeaveHandler.bind(this, $rootItem))\r\n        })\r\n    }\r\n    _submenuOnShowingHandler($rootItem, submenu) {\r\n        var $border = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS));\r\n        this._actions.onSubmenuShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        });\r\n        $border.show();\r\n        $rootItem.addClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n    }\r\n    _submenuOnShownHandler($rootItem, submenu) {\r\n        this._actions.onSubmenuShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    }\r\n    _submenuOnHidingHandler($rootItem, submenu, eventArgs) {\r\n        var $border = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS));\r\n        var args = eventArgs;\r\n        args.rootItem = getPublicElement($rootItem);\r\n        args.submenu = submenu;\r\n        this._actions.onSubmenuHiding(args);\r\n        eventArgs = args;\r\n        if (!eventArgs.cancel) {\r\n            if (this._visibleSubmenu === submenu) {\r\n                this._visibleSubmenu = null\r\n            }\r\n            $border.hide();\r\n            $rootItem.removeClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n        }\r\n    }\r\n    _submenuOnHiddenHandler($rootItem, submenu) {\r\n        this._actions.onSubmenuHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    }\r\n    _submenuMouseLeaveHandler($rootItem, eventArgs) {\r\n        var target = $(eventArgs.relatedTarget).parents(\".\".concat(DX_CONTEXT_MENU_CLASS))[0];\r\n        var contextMenu = this._getSubmenuByRootElement($rootItem).getOverlayContent()[0];\r\n        if (this.option(\"hideSubmenuOnMouseLeave\") && target !== contextMenu) {\r\n            this._clearTimeouts();\r\n            setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"))\r\n        }\r\n    }\r\n    _hideSubmenuAfterTimeout() {\r\n        if (!this._visibleSubmenu) {\r\n            return\r\n        }\r\n        var isRootItemHovered = $(this._visibleSubmenu.$element().context).hasClass(DX_STATE_HOVER_CLASS);\r\n        var isSubmenuItemHovered = this._visibleSubmenu.getOverlayContent().find(\".\".concat(DX_STATE_HOVER_CLASS)).length;\r\n        var hoveredElementFromSubMenu = this._visibleSubmenu.getOverlayContent().get(0).querySelector(\":hover\");\r\n        if (!hoveredElementFromSubMenu && !isSubmenuItemHovered && !isRootItemHovered) {\r\n            this._visibleSubmenu.hide()\r\n        }\r\n    }\r\n    _getSubmenuByRootElement($rootItem) {\r\n        if (!$rootItem) {\r\n            return false\r\n        }\r\n        var $submenu = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CLASS));\r\n        return $submenu.length && Submenu.getInstance($submenu)\r\n    }\r\n    getSubmenuPosition($rootItem) {\r\n        var isHorizontalMenu = this._isMenuHorizontal();\r\n        var submenuDirection = this.option(\"submenuDirection\").toLowerCase();\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var submenuPosition = {\r\n            collision: \"flip\",\r\n            of: $rootItem\r\n        };\r\n        switch (submenuDirection) {\r\n            case \"leftortop\":\r\n                submenuPosition.at = \"left top\";\r\n                submenuPosition.my = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                break;\r\n            case \"rightorbottom\":\r\n                submenuPosition.at = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                submenuPosition.my = \"left top\";\r\n                break;\r\n            default:\r\n                if (isHorizontalMenu) {\r\n                    submenuPosition.at = rtlEnabled ? \"right bottom\" : \"left bottom\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                } else {\r\n                    submenuPosition.at = rtlEnabled ? \"left top\" : \"right top\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                }\r\n        }\r\n        return submenuPosition\r\n    }\r\n    _renderBorderElement($item) {\r\n        $(\"<div>\").appendTo($item).addClass(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS).hide()\r\n    }\r\n    _itemPointerDownHandler(e) {\r\n        var $target = $(e.target);\r\n        var $closestItem = $target.closest(this._itemElements());\r\n        if ($closestItem.hasClass(\"dx-menu-item-has-submenu\")) {\r\n            this.option(\"focusedElement\", null);\r\n            return\r\n        }\r\n        super._itemPointerDownHandler(e)\r\n    }\r\n    _hoverStartHandler(e) {\r\n        var mouseMoveEventName = addNamespace(pointerEvents.move, this.NAME);\r\n        var $item = this._getItemElementByEventArgs(e);\r\n        var node = this._dataAdapter.getNodeByItem(this._getItemData($item));\r\n        var isSelectionActive = isDefined(e.buttons) && 1 === e.buttons || !isDefined(e.buttons) && 1 === e.which;\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        eventsEngine.off($item, mouseMoveEventName);\r\n        if (!this._hasChildren(node)) {\r\n            this._showSubmenuTimer = setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"));\r\n            return\r\n        }\r\n        if (\"onHover\" === this._getShowFirstSubmenuMode() && !isSelectionActive) {\r\n            var submenu = this._getSubmenuByElement($item);\r\n            this._clearTimeouts();\r\n            if (!submenu.isOverlayVisible()) {\r\n                eventsEngine.on($item, mouseMoveEventName, this._itemMouseMoveHandler.bind(this));\r\n                this._showSubmenuTimer = this._getDelay(\"hide\")\r\n            }\r\n        }\r\n    }\r\n    _hoverEndHandler(eventArg) {\r\n        var $item = this._getItemElementByEventArgs(eventArg);\r\n        var relatedTarget = $(eventArg.relatedTarget);\r\n        super._hoverEndHandler(eventArg);\r\n        this._clearTimeouts();\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        if (relatedTarget.hasClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)) {\r\n            return\r\n        }\r\n        if (this.option(\"hideSubmenuOnMouseLeave\") && !relatedTarget.hasClass(DX_MENU_ITEMS_CONTAINER_CLASS)) {\r\n            this._hideSubmenuTimer = setTimeout(() => {\r\n                this._hideSubmenuAfterTimeout()\r\n            }, this._getDelay(\"hide\"))\r\n        }\r\n    }\r\n    _hideVisibleSubmenu() {\r\n        if (!this._visibleSubmenu) {\r\n            return false\r\n        }\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        return true\r\n    }\r\n    _showSubmenu($itemElement) {\r\n        var submenu = this._getSubmenuByElement($itemElement);\r\n        if (this._visibleSubmenu !== submenu) {\r\n            this._hideVisibleSubmenu()\r\n        }\r\n        if (submenu) {\r\n            this._clearTimeouts();\r\n            submenu.show();\r\n            this.option(\"focusedElement\", submenu.option(\"focusedElement\"))\r\n        }\r\n        this._visibleSubmenu = submenu;\r\n        this._hoveredRootItem = $itemElement\r\n    }\r\n    _hideSubmenu(submenu) {\r\n        submenu && submenu.hide();\r\n        if (this._visibleSubmenu === submenu) {\r\n            this._visibleSubmenu = null\r\n        }\r\n        this._hoveredRootItem = null\r\n    }\r\n    _itemMouseMoveHandler(e) {\r\n        if (e.pointers && e.pointers.length) {\r\n            return\r\n        }\r\n        var $item = $(e.currentTarget);\r\n        if (!isDefined(this._showSubmenuTimer)) {\r\n            return\r\n        }\r\n        this._clearTimeouts();\r\n        this._showSubmenuTimer = setTimeout(() => {\r\n            var submenu = this._getSubmenuByElement($item);\r\n            if (submenu && !submenu.isOverlayVisible()) {\r\n                this._showSubmenu($item)\r\n            }\r\n        }, this._getDelay(\"show\"))\r\n    }\r\n    _clearTimeouts() {\r\n        clearTimeout(this._hideSubmenuTimer);\r\n        clearTimeout(this._showSubmenuTimer)\r\n    }\r\n    _getSubmenuByElement($itemElement, itemData) {\r\n        var submenu = this._getSubmenuByRootElement($itemElement);\r\n        if (submenu) {\r\n            return submenu\r\n        } else {\r\n            itemData = itemData || this._getItemData($itemElement);\r\n            var node = this._dataAdapter.getNodeByItem(itemData);\r\n            return this._hasChildren(node) && this._renderSubmenuItems(node, $itemElement)\r\n        }\r\n    }\r\n    _updateSubmenuVisibilityOnClick(actionArgs) {\r\n        var args = actionArgs.args.length && actionArgs.args[0];\r\n        if (!args || this._disabledGetter(args.itemData)) {\r\n            return\r\n        }\r\n        var $itemElement = $(args.itemElement);\r\n        var currentSubmenu = this._getSubmenuByElement($itemElement, args.itemData);\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (this._visibleSubmenu) {\r\n            if (this._visibleSubmenu === currentSubmenu) {\r\n                if (\"onClick\" === this.option(\"showFirstSubmenuMode\")) {\r\n                    this._hideSubmenu(this._visibleSubmenu)\r\n                }\r\n                return\r\n            } else {\r\n                this._hideSubmenu(this._visibleSubmenu)\r\n            }\r\n        }\r\n        if (!currentSubmenu) {\r\n            return\r\n        }\r\n        if (!currentSubmenu.isOverlayVisible()) {\r\n            this._showSubmenu($itemElement);\r\n            return\r\n        }\r\n    }\r\n    _optionChanged(args) {\r\n        if (ACTIONS.indexOf(args.name) >= 0) {\r\n            this._initActions();\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"orientation\":\r\n            case \"submenuDirection\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showFirstSubmenuMode\":\r\n            case \"hideSubmenuOnMouseLeave\":\r\n                break;\r\n            case \"showSubmenuMode\":\r\n                this._changeSubmenusOption(args.name, args.value);\r\n                break;\r\n            case \"adaptivityEnabled\":\r\n                args.value ? this._initAdaptivity() : this._removeAdaptivity();\r\n                break;\r\n            case \"width\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(args.name, args.value);\r\n                    this._overlay.option(args.name, args.value)\r\n                }\r\n                super._optionChanged(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"animation\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(\"animationEnabled\", !!args.value)\r\n                }\r\n                super._optionChanged(args);\r\n                break;\r\n            default:\r\n                if (this._isAdaptivityEnabled() && (args.name === args.fullName || \"items\" === args.name)) {\r\n                    this._treeView.option(args.fullName, args.value)\r\n                }\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _changeSubmenusOption(name, value) {\r\n        each(this._submenus, (index, submenu) => {\r\n            submenu.option(name, value)\r\n        })\r\n    }\r\n    selectItem(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        super.selectItem(itemElement)\r\n    }\r\n    unselectItem(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        super.selectItem(itemElement)\r\n    }\r\n}\r\nregisterComponent(\"dxMenu\", Menu);\r\nexport default Menu;\r\n","/**\r\n * DevExtreme (esm/ui/menu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Menu from \"./menu/ui.menu\";\r\nexport default Menu;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_row.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport Editor from \"../editor/editor\";\r\nimport Overlay from \"../overlay/ui.overlay\";\r\nimport Menu from \"../menu\";\r\nimport {\r\n    selectView\r\n} from \"../shared/accessibility\";\r\nvar OPERATION_ICONS = {\r\n    \"=\": \"filter-operation-equals\",\r\n    \"<>\": \"filter-operation-not-equals\",\r\n    \"<\": \"filter-operation-less\",\r\n    \"<=\": \"filter-operation-less-equal\",\r\n    \">\": \"filter-operation-greater\",\r\n    \">=\": \"filter-operation-greater-equal\",\r\n    default: \"filter-operation-default\",\r\n    notcontains: \"filter-operation-not-contains\",\r\n    contains: \"filter-operation-contains\",\r\n    startswith: \"filter-operation-starts-with\",\r\n    endswith: \"filter-operation-ends-with\",\r\n    between: \"filter-operation-between\"\r\n};\r\nvar OPERATION_DESCRIPTORS = {\r\n    \"=\": \"equal\",\r\n    \"<>\": \"notEqual\",\r\n    \"<\": \"lessThan\",\r\n    \"<=\": \"lessThanOrEqual\",\r\n    \">\": \"greaterThan\",\r\n    \">=\": \"greaterThanOrEqual\",\r\n    startswith: \"startsWith\",\r\n    contains: \"contains\",\r\n    notcontains: \"notContains\",\r\n    endswith: \"endsWith\",\r\n    between: \"between\"\r\n};\r\nvar FILTERING_TIMEOUT = 700;\r\nvar CORRECT_FILTER_RANGE_OVERLAY_WIDTH = 1;\r\nvar FILTER_ROW_CLASS = \"filter-row\";\r\nvar FILTER_RANGE_OVERLAY_CLASS = \"filter-range-overlay\";\r\nvar FILTER_RANGE_START_CLASS = \"filter-range-start\";\r\nvar FILTER_RANGE_END_CLASS = \"filter-range-end\";\r\nvar MENU_CLASS = \"dx-menu\";\r\nvar EDITOR_WITH_MENU_CLASS = \"dx-editor-with-menu\";\r\nvar EDITOR_CONTAINER_CLASS = \"dx-editor-container\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar FILTER_MENU = \"dx-filter-menu\";\r\nvar APPLY_BUTTON_CLASS = \"dx-apply-button\";\r\nvar HIGHLIGHT_OUTLINE_CLASS = \"dx-highlight-outline\";\r\nvar FOCUSED_CLASS = \"dx-focused\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FILTER_RANGE_CONTENT_CLASS = \"dx-filter-range-content\";\r\nvar FILTER_MODIFIED_CLASS = \"dx-filter-modified\";\r\nvar EDITORS_INPUT_SELECTOR = \"input:not([type='hidden'])\";\r\nvar BETWEEN_OPERATION_DATA_TYPES = [\"date\", \"datetime\", \"number\"];\r\n\r\nfunction isOnClickApplyFilterMode(that) {\r\n    return \"onClick\" === that.option(\"filterRow.applyFilter\")\r\n}\r\nvar ColumnHeadersViewFilterRowExtender = function() {\r\n    var getEditorInstance = function($editorContainer) {\r\n        var $editor = $editorContainer && $editorContainer.children();\r\n        var componentNames = $editor && $editor.data(\"dxComponents\");\r\n        var editor = componentNames && componentNames.length && $editor.data(componentNames[0]);\r\n        if (editor instanceof Editor) {\r\n            return editor\r\n        }\r\n    };\r\n    var getRangeTextByFilterValue = function(that, column) {\r\n        var result = \"\";\r\n        var rangeEnd = \"\";\r\n        var filterValue = getColumnFilterValue(that, column);\r\n        var formatOptions = gridCoreUtils.getFormatOptionsByColumn(column, \"filterRow\");\r\n        if (Array.isArray(filterValue)) {\r\n            result = gridCoreUtils.formatValue(filterValue[0], formatOptions);\r\n            rangeEnd = gridCoreUtils.formatValue(filterValue[1], formatOptions);\r\n            if (\"\" !== rangeEnd) {\r\n                result += \" - \" + rangeEnd\r\n            }\r\n        } else if (isDefined(filterValue)) {\r\n            result = gridCoreUtils.formatValue(filterValue, formatOptions)\r\n        }\r\n        return result\r\n    };\r\n\r\n    function getColumnFilterValue(that, column) {\r\n        if (column) {\r\n            return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedFilterValue ? column.bufferedFilterValue : column.filterValue\r\n        }\r\n    }\r\n    var getColumnSelectedFilterOperation = function(that, column) {\r\n        if (column) {\r\n            return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedSelectedFilterOperation ? column.bufferedSelectedFilterOperation : column.selectedFilterOperation\r\n        }\r\n    };\r\n    var getFilterValue = function(that, columnIndex, $editorContainer) {\r\n        var column = that._columnsController.columnOption(columnIndex);\r\n        var filterValue = getColumnFilterValue(that, column);\r\n        var isFilterRange = $editorContainer.closest(\".\" + that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).length;\r\n        var isRangeStart = $editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS));\r\n        if (filterValue && Array.isArray(filterValue) && \"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n            if (isRangeStart) {\r\n                return filterValue[0]\r\n            } else {\r\n                return filterValue[1]\r\n            }\r\n        }\r\n        return !isFilterRange && function(filterValue, column) {\r\n            if (column && BETWEEN_OPERATION_DATA_TYPES.indexOf(column.dataType) >= 0 && Array.isArray(filterValue)) {\r\n                return false\r\n            }\r\n            return void 0 !== filterValue\r\n        }(filterValue, column) ? filterValue : null\r\n    };\r\n    var updateFilterValue = function(that, options) {\r\n        var value = \"\" === options.value ? null : options.value;\r\n        var $editorContainer = options.container;\r\n        var column = that._columnsController.columnOption(options.column.index);\r\n        var filterValue = getFilterValue(that, column.index, $editorContainer);\r\n        if (!isDefined(filterValue) && !isDefined(value)) {\r\n            return\r\n        }\r\n        that._applyFilterViewController.setHighLight($editorContainer, filterValue !== value);\r\n        var columnOptionName = isOnClickApplyFilterMode(that) ? \"bufferedFilterValue\" : \"filterValue\";\r\n        var normalizedValue = function(that, filterValue, column, $editorContainer) {\r\n            if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                var columnFilterValue = getColumnFilterValue(that, column);\r\n                if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\r\n                    return [filterValue, Array.isArray(columnFilterValue) ? columnFilterValue[1] : void 0]\r\n                } else {\r\n                    return [Array.isArray(columnFilterValue) ? columnFilterValue[0] : columnFilterValue, filterValue]\r\n                }\r\n            }\r\n            return filterValue\r\n        }(that, value, column, $editorContainer);\r\n        var isBetween = \"between\" === getColumnSelectedFilterOperation(that, column);\r\n        var notFireEvent = options.notFireEvent || isBetween && Array.isArray(normalizedValue) && normalizedValue.indexOf(void 0) >= 0;\r\n        that._columnsController.columnOption(column.index, columnOptionName, normalizedValue, notFireEvent)\r\n    };\r\n    return {\r\n        _updateEditorValue: function(column, $editorContainer) {\r\n            var editor = getEditorInstance($editorContainer);\r\n            editor && editor.option(\"value\", getFilterValue(this, column.index, $editorContainer))\r\n        },\r\n        _columnOptionChanged: function(e) {\r\n            var optionNames = e.optionNames;\r\n            var $cell;\r\n            var $editorContainer;\r\n            var $editorRangeElements;\r\n            var $menu;\r\n            if (gridCoreUtils.checkChanges(optionNames, [\"filterValue\", \"bufferedFilterValue\", \"selectedFilterOperation\", \"bufferedSelectedFilterOperation\"]) && void 0 !== e.columnIndex) {\r\n                var visibleIndex = this._columnsController.getVisibleIndex(e.columnIndex);\r\n                var column = this._columnsController.columnOption(e.columnIndex);\r\n                $cell = this._getCellElement(this.element().find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS)).index(), visibleIndex) || $();\r\n                $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n                if (optionNames.filterValue || optionNames.bufferedFilterValue) {\r\n                    this._updateEditorValue(column, $editorContainer);\r\n                    var overlayInstance = $cell.find(\".\" + this.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).data(\"dxOverlay\");\r\n                    if (overlayInstance) {\r\n                        $editorRangeElements = overlayInstance.$content().find(\".\" + EDITOR_CONTAINER_CLASS);\r\n                        this._updateEditorValue(column, $editorRangeElements.first());\r\n                        this._updateEditorValue(column, $editorRangeElements.last())\r\n                    }\r\n                    if (!overlayInstance || !overlayInstance.option(\"visible\")) {\r\n                        this._updateFilterRangeContent($cell, getRangeTextByFilterValue(this, column))\r\n                    }\r\n                }\r\n                if (optionNames.selectedFilterOperation || optionNames.bufferedSelectedFilterOperation) {\r\n                    if (visibleIndex >= 0 && column) {\r\n                        $menu = $cell.find(\".\" + MENU_CLASS);\r\n                        if ($menu.length) {\r\n                            this._updateFilterOperationChooser($menu, column, $editorContainer);\r\n                            if (\"between\" === getColumnSelectedFilterOperation(this, column)) {\r\n                                this._renderFilterRangeContent($cell, column)\r\n                            } else if ($editorContainer.find(\".\" + FILTER_RANGE_CONTENT_CLASS).length) {\r\n                                this._renderEditor($editorContainer, this._getEditorOptions($editorContainer, column));\r\n                                this._hideFilterRange()\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return\r\n            }\r\n            this.callBase(e)\r\n        },\r\n        _renderCore: function() {\r\n            this._filterRangeOverlayInstance = null;\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _resizeCore: function() {\r\n            this.callBase.apply(this, arguments);\r\n            this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.repaint()\r\n        },\r\n        isFilterRowVisible: function() {\r\n            return this._isElementVisible(this.option(\"filterRow\"))\r\n        },\r\n        isVisible: function() {\r\n            return this.callBase() || this.isFilterRowVisible()\r\n        },\r\n        init: function() {\r\n            this.callBase();\r\n            this._applyFilterViewController = this.getController(\"applyFilter\")\r\n        },\r\n        _initFilterRangeOverlay: function($cell, column) {\r\n            var that = this;\r\n            var sharedData = {};\r\n            var $editorContainer = $cell.find(\".dx-editor-container\");\r\n            var $overlay = $(\"<div>\").addClass(that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).appendTo($cell);\r\n            return that._createComponent($overlay, Overlay, {\r\n                height: \"auto\",\r\n                shading: false,\r\n                showTitle: false,\r\n                focusStateEnabled: false,\r\n                closeOnOutsideClick: true,\r\n                copyRootClassesToWrapper: true,\r\n                _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n                animation: false,\r\n                position: {\r\n                    my: \"top\",\r\n                    at: \"top\",\r\n                    of: $editorContainer.length && $editorContainer || $cell,\r\n                    offset: \"0 -1\"\r\n                },\r\n                contentTemplate: function(contentElement) {\r\n                    var editorOptions;\r\n                    var $editor = $(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_START_CLASS)).appendTo(contentElement);\r\n                    column = that._columnsController.columnOption(column.index);\r\n                    editorOptions = that._getEditorOptions($editor, column);\r\n                    editorOptions.sharedData = sharedData;\r\n                    that._renderEditor($editor, editorOptions);\r\n                    eventsEngine.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", (function(e) {\r\n                        var $prevElement = $cell.find(\"[tabindex]\").not(e.target).first();\r\n                        if (\"tab\" === normalizeKeyName(e) && e.shiftKey) {\r\n                            e.preventDefault();\r\n                            that._hideFilterRange();\r\n                            if (!$prevElement.length) {\r\n                                $prevElement = $cell.prev().find(\"[tabindex]\").last()\r\n                            }\r\n                            eventsEngine.trigger($prevElement, \"focus\")\r\n                        }\r\n                    }));\r\n                    $editor = $(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_END_CLASS)).appendTo(contentElement);\r\n                    editorOptions = that._getEditorOptions($editor, column);\r\n                    editorOptions.sharedData = sharedData;\r\n                    that._renderEditor($editor, editorOptions);\r\n                    eventsEngine.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", (function(e) {\r\n                        if (\"tab\" === normalizeKeyName(e) && !e.shiftKey) {\r\n                            e.preventDefault();\r\n                            that._hideFilterRange();\r\n                            eventsEngine.trigger($cell.next().find(\"[tabindex]\").first(), \"focus\")\r\n                        }\r\n                    }));\r\n                    return $(contentElement).addClass(that.getWidgetContainerClass())\r\n                },\r\n                onShown: function(e) {\r\n                    var $editor = e.component.$content().find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n                    eventsEngine.trigger($editor.find(EDITORS_INPUT_SELECTOR), \"focus\")\r\n                },\r\n                onHidden: function() {\r\n                    column = that._columnsController.columnOption(column.index);\r\n                    $cell.find(\".\" + MENU_CLASS).parent().addClass(EDITOR_WITH_MENU_CLASS);\r\n                    if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                        that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column));\r\n                        that.component.updateDimensions()\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        _updateFilterRangeOverlay: function(options) {\r\n            var overlayInstance = this._filterRangeOverlayInstance;\r\n            overlayInstance && overlayInstance.option(options)\r\n        },\r\n        _showFilterRange: function($cell, column) {\r\n            var $overlay = $cell.children(\".\" + this.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS));\r\n            var overlayInstance = $overlay.length && $overlay.data(\"dxOverlay\");\r\n            if (!overlayInstance && column) {\r\n                overlayInstance = this._initFilterRangeOverlay($cell, column)\r\n            }\r\n            if (!overlayInstance.option(\"visible\")) {\r\n                this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.hide();\r\n                this._filterRangeOverlayInstance = overlayInstance;\r\n                this._updateFilterRangeOverlay({\r\n                    width: getOuterWidth($cell, true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\r\n                });\r\n                this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.show()\r\n            }\r\n        },\r\n        _hideFilterRange: function() {\r\n            var overlayInstance = this._filterRangeOverlayInstance;\r\n            overlayInstance && overlayInstance.hide()\r\n        },\r\n        getFilterRangeOverlayInstance: function() {\r\n            return this._filterRangeOverlayInstance\r\n        },\r\n        _createRow: function(row) {\r\n            var $row = this.callBase(row);\r\n            if (\"filter\" === row.rowType) {\r\n                $row.addClass(this.addWidgetPrefix(FILTER_ROW_CLASS));\r\n                if (!this.option(\"useLegacyKeyboardNavigation\")) {\r\n                    eventsEngine.on($row, \"keydown\", event => selectView(\"filterRow\", this, event))\r\n                }\r\n            }\r\n            return $row\r\n        },\r\n        _getRows: function() {\r\n            var result = this.callBase();\r\n            if (this.isFilterRowVisible()) {\r\n                result.push({\r\n                    rowType: \"filter\"\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        _renderFilterCell: function(cell, options) {\r\n            var column = options.column;\r\n            var $cell = $(cell);\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                this.setAria(\"describedby\", column.headerId, $cell)\r\n            }\r\n            this.setAria(\"label\", messageLocalization.format(\"dxDataGrid-ariaFilterCell\"), $cell);\r\n            $cell.addClass(EDITOR_CELL_CLASS);\r\n            var $container = $(\"<div>\").appendTo($cell);\r\n            var $editorContainer = $(\"<div>\").addClass(EDITOR_CONTAINER_CLASS).appendTo($container);\r\n            if (\"between\" === getColumnSelectedFilterOperation(this, column)) {\r\n                this._renderFilterRangeContent($cell, column)\r\n            } else {\r\n                var editorOptions = this._getEditorOptions($editorContainer, column);\r\n                this._renderEditor($editorContainer, editorOptions)\r\n            }\r\n            var alignment = column.alignment;\r\n            if (alignment && \"center\" !== alignment) {\r\n                $cell.find(EDITORS_INPUT_SELECTOR).first().css(\"textAlign\", column.alignment)\r\n            }\r\n            if (column.filterOperations && column.filterOperations.length) {\r\n                this._renderFilterOperationChooser($container, column, $editorContainer)\r\n            }\r\n        },\r\n        _renderCellContent: function($cell, options) {\r\n            var that = this;\r\n            var column = options.column;\r\n            if (\"filter\" === options.rowType) {\r\n                if (column.command) {\r\n                    $cell.html(\"&nbsp;\")\r\n                } else if (column.allowFiltering) {\r\n                    that.renderTemplate($cell, that._renderFilterCell.bind(that), options).done(() => {\r\n                        that._updateCell($cell, options)\r\n                    });\r\n                    return\r\n                }\r\n            }\r\n            that.callBase($cell, options)\r\n        },\r\n        _getEditorOptions: function($editorContainer, column) {\r\n            var that = this;\r\n            var accessibilityOptions = {\r\n                editorOptions: {\r\n                    inputAttr: that._getFilterInputAccessibilityAttributes(column)\r\n                }\r\n            };\r\n            var result = extend(accessibilityOptions, column, {\r\n                value: getFilterValue(that, column.index, $editorContainer),\r\n                parentType: \"filterRow\",\r\n                showAllText: that.option(\"filterRow.showAllText\"),\r\n                updateValueTimeout: \"onClick\" === that.option(\"filterRow.applyFilter\") ? 0 : FILTERING_TIMEOUT,\r\n                width: null,\r\n                setValue: function(value, notFireEvent) {\r\n                    updateFilterValue(that, {\r\n                        column: column,\r\n                        value: value,\r\n                        container: $editorContainer,\r\n                        notFireEvent: notFireEvent\r\n                    })\r\n                }\r\n            });\r\n            if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\r\n                    result.placeholder = that.option(\"filterRow.betweenStartText\")\r\n                } else {\r\n                    result.placeholder = that.option(\"filterRow.betweenEndText\")\r\n                }\r\n            }\r\n            return result\r\n        },\r\n        _getFilterInputAccessibilityAttributes: function(column) {\r\n            var columnAriaLabel = messageLocalization.format(\"dxDataGrid-ariaFilterCell\");\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                return {\r\n                    \"aria-label\": columnAriaLabel,\r\n                    \"aria-describedby\": column.headerId\r\n                }\r\n            }\r\n            return {\r\n                \"aria-label\": columnAriaLabel\r\n            }\r\n        },\r\n        _renderEditor: function($editorContainer, options) {\r\n            $editorContainer.empty();\r\n            return this.getController(\"editorFactory\").createEditor($(\"<div>\").appendTo($editorContainer), options)\r\n        },\r\n        _renderFilterRangeContent: function($cell, column) {\r\n            var that = this;\r\n            var $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n            $editorContainer.empty();\r\n            var $filterRangeContent = $(\"<div>\").addClass(FILTER_RANGE_CONTENT_CLASS).attr(\"tabindex\", this.option(\"tabIndex\"));\r\n            eventsEngine.on($filterRangeContent, \"focusin\", (function() {\r\n                that._showFilterRange($cell, column)\r\n            }));\r\n            $filterRangeContent.appendTo($editorContainer);\r\n            that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column))\r\n        },\r\n        _updateFilterRangeContent: function($cell, value) {\r\n            var $filterRangeContent = $cell.find(\".\" + FILTER_RANGE_CONTENT_CLASS);\r\n            if ($filterRangeContent.length) {\r\n                if (\"\" === value) {\r\n                    $filterRangeContent.html(\"&nbsp;\")\r\n                } else {\r\n                    $filterRangeContent.text(value)\r\n                }\r\n            }\r\n        },\r\n        _updateFilterOperationChooser: function($menu, column, $editorContainer) {\r\n            var that = this;\r\n            var isCellWasFocused;\r\n            var restoreFocus = function() {\r\n                var menu = Menu.getInstance($menu);\r\n                menu && menu.option(\"focusedElement\", null);\r\n                isCellWasFocused && that._focusEditor($editorContainer)\r\n            };\r\n            that._createComponent($menu, Menu, {\r\n                integrationOptions: {},\r\n                activeStateEnabled: false,\r\n                selectionMode: \"single\",\r\n                cssClass: that.getWidgetContainerClass() + \" \" + CELL_FOCUS_DISABLED_CLASS + \" \" + FILTER_MENU,\r\n                showFirstSubmenuMode: \"onHover\",\r\n                hideSubmenuOnMouseLeave: true,\r\n                items: [{\r\n                    disabled: column.filterOperations && column.filterOperations.length ? false : true,\r\n                    icon: OPERATION_ICONS[getColumnSelectedFilterOperation(that, column) || \"default\"],\r\n                    selectable: false,\r\n                    items: that._getFilterOperationMenuItems(column)\r\n                }],\r\n                onItemClick: function(properties) {\r\n                    var selectedFilterOperation = properties.itemData.name;\r\n                    var columnSelectedFilterOperation = getColumnSelectedFilterOperation(that, column);\r\n                    var notFocusEditor = false;\r\n                    var isOnClickMode = isOnClickApplyFilterMode(that);\r\n                    var options = {};\r\n                    if (properties.itemData.items || selectedFilterOperation && selectedFilterOperation === columnSelectedFilterOperation) {\r\n                        return\r\n                    }\r\n                    if (selectedFilterOperation) {\r\n                        options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = selectedFilterOperation;\r\n                        if (\"between\" === selectedFilterOperation || \"between\" === columnSelectedFilterOperation) {\r\n                            notFocusEditor = \"between\" === selectedFilterOperation;\r\n                            options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null\r\n                        }\r\n                    } else {\r\n                        options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null;\r\n                        options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = column.defaultSelectedFilterOperation || null\r\n                    }\r\n                    that._columnsController.columnOption(column.index, options);\r\n                    that._applyFilterViewController.setHighLight($editorContainer, true);\r\n                    if (!selectedFilterOperation) {\r\n                        var editor = getEditorInstance($editorContainer);\r\n                        if (editor && \"dxDateBox\" === editor.NAME && !editor.option(\"isValid\")) {\r\n                            editor.reset();\r\n                            editor.option(\"isValid\", true)\r\n                        }\r\n                    }\r\n                    if (!notFocusEditor) {\r\n                        that._focusEditor($editorContainer)\r\n                    } else {\r\n                        that._showFilterRange($editorContainer.closest(\".\" + EDITOR_CELL_CLASS), column)\r\n                    }\r\n                },\r\n                onSubmenuShown: function() {\r\n                    isCellWasFocused = that._isEditorFocused($editorContainer);\r\n                    that.getController(\"editorFactory\").loseFocus()\r\n                },\r\n                onSubmenuHiding: function() {\r\n                    eventsEngine.trigger($menu, \"blur\");\r\n                    restoreFocus()\r\n                },\r\n                onContentReady: function(e) {\r\n                    eventsEngine.on($menu, \"blur\", () => {\r\n                        var menu = e.component;\r\n                        menu._hideSubmenu(menu._visibleSubmenu);\r\n                        restoreFocus()\r\n                    })\r\n                },\r\n                rtlEnabled: that.option(\"rtlEnabled\")\r\n            })\r\n        },\r\n        _isEditorFocused: function($container) {\r\n            return $container.hasClass(FOCUSED_CLASS) || $container.parents(\".\" + FOCUSED_CLASS).length\r\n        },\r\n        _focusEditor: function($container) {\r\n            this.getController(\"editorFactory\").focus($container);\r\n            eventsEngine.trigger($container.find(EDITORS_INPUT_SELECTOR), \"focus\")\r\n        },\r\n        _renderFilterOperationChooser: function($container, column, $editorContainer) {\r\n            var $menu;\r\n            if (this.option(\"filterRow.showOperationChooser\")) {\r\n                $container.addClass(EDITOR_WITH_MENU_CLASS);\r\n                $menu = $(\"<div>\").prependTo($container);\r\n                this._updateFilterOperationChooser($menu, column, $editorContainer)\r\n            }\r\n        },\r\n        _getFilterOperationMenuItems: function(column) {\r\n            var that = this;\r\n            var result = [{}];\r\n            var filterRowOptions = that.option(\"filterRow\");\r\n            var operationDescriptions = filterRowOptions && filterRowOptions.operationDescriptions || {};\r\n            if (column.filterOperations && column.filterOperations.length) {\r\n                var availableFilterOperations = column.filterOperations.filter((function(value) {\r\n                    return isDefined(OPERATION_DESCRIPTORS[value])\r\n                }));\r\n                result = map(availableFilterOperations, (function(value) {\r\n                    var descriptionName = OPERATION_DESCRIPTORS[value];\r\n                    return {\r\n                        name: value,\r\n                        selected: (getColumnSelectedFilterOperation(that, column) || column.defaultFilterOperation) === value,\r\n                        text: operationDescriptions[descriptionName],\r\n                        icon: OPERATION_ICONS[value]\r\n                    }\r\n                }));\r\n                result.push({\r\n                    name: null,\r\n                    text: filterRowOptions && filterRowOptions.resetOperationText,\r\n                    icon: OPERATION_ICONS.default\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        optionChanged: function(args) {\r\n            switch (args.name) {\r\n                case \"filterRow\":\r\n                case \"showColumnLines\":\r\n                    this._invalidate(true, true);\r\n                    args.handled = true;\r\n                    break;\r\n                default:\r\n                    this.callBase(args)\r\n            }\r\n        }\r\n    }\r\n}();\r\nvar DataControllerFilterRowExtender = {\r\n    skipCalculateColumnFilters: function() {\r\n        return false\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        if (this.skipCalculateColumnFilters()) {\r\n            return this.callBase()\r\n        }\r\n        var filters = [this.callBase()];\r\n        var columns = this._columnsController.getVisibleColumns(null, true);\r\n        each(columns, (function() {\r\n            if (this.allowFiltering && this.calculateFilterExpression && isDefined(this.filterValue)) {\r\n                var filter = this.createFilterExpression(this.filterValue, this.selectedFilterOperation || this.defaultFilterOperation, \"filterRow\");\r\n                filters.push(filter)\r\n            }\r\n        }));\r\n        return gridCoreUtils.combineFilters(filters)\r\n    }\r\n};\r\nvar ApplyFilterViewController = modules.ViewController.inherit({\r\n    _getHeaderPanel: function() {\r\n        if (!this._headerPanel) {\r\n            this._headerPanel = this.getView(\"headerPanel\")\r\n        }\r\n        return this._headerPanel\r\n    },\r\n    setHighLight: function($element, value) {\r\n        if (isOnClickApplyFilterMode(this)) {\r\n            $element && $element.toggleClass(HIGHLIGHT_OUTLINE_CLASS, value) && $element.closest(\".\" + EDITOR_CELL_CLASS).toggleClass(FILTER_MODIFIED_CLASS, value);\r\n            this._getHeaderPanel().enableApplyButton(value)\r\n        }\r\n    },\r\n    applyFilter: function() {\r\n        var columnsController = this.getController(\"columns\");\r\n        var columns = columnsController.getColumns();\r\n        columnsController.beginUpdate();\r\n        for (var i = 0; i < columns.length; i++) {\r\n            var column = columns[i];\r\n            if (void 0 !== column.bufferedFilterValue) {\r\n                columnsController.columnOption(i, \"filterValue\", column.bufferedFilterValue);\r\n                column.bufferedFilterValue = void 0\r\n            }\r\n            if (void 0 !== column.bufferedSelectedFilterOperation) {\r\n                columnsController.columnOption(i, \"selectedFilterOperation\", column.bufferedSelectedFilterOperation);\r\n                column.bufferedSelectedFilterOperation = void 0\r\n            }\r\n        }\r\n        columnsController.endUpdate();\r\n        this.removeHighLights()\r\n    },\r\n    removeHighLights: function() {\r\n        if (isOnClickApplyFilterMode(this)) {\r\n            var columnHeadersViewElement = this.getView(\"columnHeadersView\").element();\r\n            columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + HIGHLIGHT_OUTLINE_CLASS).removeClass(HIGHLIGHT_OUTLINE_CLASS);\r\n            columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + FILTER_MODIFIED_CLASS).removeClass(FILTER_MODIFIED_CLASS);\r\n            this._getHeaderPanel().enableApplyButton(false)\r\n        }\r\n    }\r\n});\r\nexport var filterRowModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterRow: {\r\n                visible: false,\r\n                showOperationChooser: true,\r\n                showAllText: messageLocalization.format(\"dxDataGrid-filterRowShowAllText\"),\r\n                resetOperationText: messageLocalization.format(\"dxDataGrid-filterRowResetOperationText\"),\r\n                applyFilter: \"auto\",\r\n                applyFilterText: messageLocalization.format(\"dxDataGrid-applyFilterText\"),\r\n                operationDescriptions: {\r\n                    equal: messageLocalization.format(\"dxDataGrid-filterRowOperationEquals\"),\r\n                    notEqual: messageLocalization.format(\"dxDataGrid-filterRowOperationNotEquals\"),\r\n                    lessThan: messageLocalization.format(\"dxDataGrid-filterRowOperationLess\"),\r\n                    lessThanOrEqual: messageLocalization.format(\"dxDataGrid-filterRowOperationLessOrEquals\"),\r\n                    greaterThan: messageLocalization.format(\"dxDataGrid-filterRowOperationGreater\"),\r\n                    greaterThanOrEqual: messageLocalization.format(\"dxDataGrid-filterRowOperationGreaterOrEquals\"),\r\n                    startsWith: messageLocalization.format(\"dxDataGrid-filterRowOperationStartsWith\"),\r\n                    contains: messageLocalization.format(\"dxDataGrid-filterRowOperationContains\"),\r\n                    notContains: messageLocalization.format(\"dxDataGrid-filterRowOperationNotContains\"),\r\n                    endsWith: messageLocalization.format(\"dxDataGrid-filterRowOperationEndsWith\"),\r\n                    between: messageLocalization.format(\"dxDataGrid-filterRowOperationBetween\"),\r\n                    isBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsBlank\"),\r\n                    isNotBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\r\n                },\r\n                betweenStartText: messageLocalization.format(\"dxDataGrid-filterRowOperationBetweenStartText\"),\r\n                betweenEndText: messageLocalization.format(\"dxDataGrid-filterRowOperationBetweenEndText\")\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        applyFilter: ApplyFilterViewController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterRowExtender,\r\n            columnsResizer: {\r\n                _startResizing: function() {\r\n                    var that = this;\r\n                    that.callBase.apply(that, arguments);\r\n                    if (that.isResizing()) {\r\n                        var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\r\n                        if (overlayInstance) {\r\n                            var cellIndex = overlayInstance.$element().closest(\"td\").index();\r\n                            if (cellIndex === that._targetPoint.columnIndex || cellIndex === that._targetPoint.columnIndex + 1) {\r\n                                overlayInstance.$content().hide()\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _endResizing: function() {\r\n                    var that = this;\r\n                    var $cell;\r\n                    if (that.isResizing()) {\r\n                        var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\r\n                        if (overlayInstance) {\r\n                            $cell = overlayInstance.$element().closest(\"td\");\r\n                            that._columnHeadersView._updateFilterRangeOverlay({\r\n                                width: getOuterWidth($cell, true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\r\n                            });\r\n                            overlayInstance.$content().show()\r\n                        }\r\n                    }\r\n                    that.callBase.apply(that, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFilterRowExtender,\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    var filterItem = this._prepareFilterItem(items);\r\n                    return filterItem.concat(items)\r\n                },\r\n                _prepareFilterItem: function() {\r\n                    var that = this;\r\n                    var filterItem = [];\r\n                    if (that._isShowApplyFilterButton()) {\r\n                        var hintText = that.option(\"filterRow.applyFilterText\");\r\n                        var columns = that._columnsController.getColumns();\r\n                        var disabled = !columns.filter((function(column) {\r\n                            return void 0 !== column.bufferedFilterValue\r\n                        })).length;\r\n                        var toolbarItem = {\r\n                            widget: \"dxButton\",\r\n                            options: {\r\n                                icon: \"apply-filter\",\r\n                                disabled: disabled,\r\n                                onClick: function() {\r\n                                    that._applyFilterViewController.applyFilter()\r\n                                },\r\n                                hint: hintText,\r\n                                text: hintText,\r\n                                onInitialized: function(e) {\r\n                                    $(e.element).addClass(that._getToolbarButtonClass(APPLY_BUTTON_CLASS))\r\n                                }\r\n                            },\r\n                            showText: \"inMenu\",\r\n                            name: \"applyFilterButton\",\r\n                            location: \"after\",\r\n                            locateInMenu: \"auto\",\r\n                            sortIndex: 10\r\n                        };\r\n                        filterItem.push(toolbarItem)\r\n                    }\r\n                    return filterItem\r\n                },\r\n                _isShowApplyFilterButton: function() {\r\n                    var filterRowOptions = this.option(\"filterRow\");\r\n                    return filterRowOptions && filterRowOptions.visible && \"onClick\" === filterRowOptions.applyFilter\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._dataController = this.getController(\"data\");\r\n                    this._applyFilterViewController = this.getController(\"applyFilter\")\r\n                },\r\n                enableApplyButton: function(value) {\r\n                    this.setToolbarItemDisabled(\"applyFilterButton\", !value)\r\n                },\r\n                isVisible: function() {\r\n                    return this.callBase() || this._isShowApplyFilterButton()\r\n                },\r\n                optionChanged: function(args) {\r\n                    if (\"filterRow\" === args.name) {\r\n                        this._invalidate();\r\n                        args.handled = true\r\n                    } else {\r\n                        this.callBase(args)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.filter_row.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    filterRowModule\r\n} from \"../grid_core/ui.grid_core.filter_row\";\r\ncore.registerModule(\"filterRow\", filterRowModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.header_filter_core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    isDefined,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport Popup from \"../popup\";\r\nimport TreeView from \"../tree_view\";\r\nimport List from \"../list_light\";\r\nimport \"../list/modules/search\";\r\nimport \"../list/modules/selection\";\r\nvar HEADER_FILTER_CLASS = \"dx-header-filter\";\r\nvar HEADER_FILTER_MENU_CLASS = \"dx-header-filter-menu\";\r\nvar DEFAULT_SEARCH_EXPRESSION = \"text\";\r\n\r\nfunction resetChildrenItemSelection(items) {\r\n    items = items || [];\r\n    for (var i = 0; i < items.length; i++) {\r\n        items[i].selected = false;\r\n        resetChildrenItemSelection(items[i].items)\r\n    }\r\n}\r\n\r\nfunction updateSelectAllState(e, filterValues) {\r\n    if (e.component.option(\"searchValue\")) {\r\n        return\r\n    }\r\n    var selectAllCheckBox = $(e.element).find(\".dx-list-select-all-checkbox\").data(\"dxCheckBox\");\r\n    if (selectAllCheckBox && filterValues && filterValues.length) {\r\n        selectAllCheckBox.option(\"value\", void 0)\r\n    }\r\n}\r\n\r\nfunction isSearchEnabled(that, options) {\r\n    var headerFilter = options.headerFilter;\r\n    if (headerFilter && isDefined(headerFilter.allowSearch)) {\r\n        return headerFilter.allowSearch\r\n    }\r\n    return that.option(\"headerFilter.allowSearch\")\r\n}\r\nexport function updateHeaderFilterItemSelectionState(item, filterValuesMatch, isExcludeFilter) {\r\n    if (filterValuesMatch ^ isExcludeFilter) {\r\n        item.selected = true;\r\n        if (isExcludeFilter && item.items) {\r\n            for (var j = 0; j < item.items.length; j++) {\r\n                if (!item.items[j].selected) {\r\n                    item.selected = void 0;\r\n                    break\r\n                }\r\n            }\r\n        }\r\n    } else if (isExcludeFilter || item.selected) {\r\n        item.selected = false;\r\n        resetChildrenItemSelection(item.items)\r\n    }\r\n}\r\nexport var HeaderFilterView = modules.View.inherit({\r\n    getPopupContainer: function() {\r\n        return this._popupContainer\r\n    },\r\n    getListContainer: function() {\r\n        return this._listContainer\r\n    },\r\n    applyHeaderFilter: function(options) {\r\n        var list = this.getListContainer();\r\n        var searchValue = list.option(\"searchValue\");\r\n        var isSelectAll = !searchValue && !options.isFilterBuilder && list.$element().find(\".dx-checkbox\").eq(0).hasClass(\"dx-checkbox-checked\");\r\n        var filterValues = [];\r\n        if (!isSelectAll) {\r\n            if (\"tree\" === options.type) {\r\n                if (options.filterType) {\r\n                    options.filterType = \"include\"\r\n                }! function fillSelectedItemKeys(filterValues, items, isExclude) {\r\n                    each(items, (function(_, item) {\r\n                        if (void 0 !== item.selected && !!item.selected ^ isExclude) {\r\n                            var node = list._getNode(item);\r\n                            var hasChildren = list._hasChildren(node);\r\n                            var hasChildrenWithSelection = hasChildren && item.items && item.items.some(item => item.selected);\r\n                            if (!searchValue || !hasChildrenWithSelection) {\r\n                                filterValues.push(item.value);\r\n                                return\r\n                            }\r\n                        }\r\n                        if (item.items && item.items.length) {\r\n                            fillSelectedItemKeys(filterValues, item.items, isExclude)\r\n                        }\r\n                    }))\r\n                }(filterValues, list.option(\"items\"), false);\r\n                options.filterValues = filterValues\r\n            }\r\n        } else {\r\n            if (\"tree\" === options.type) {\r\n                options.filterType = \"exclude\"\r\n            }\r\n            if (Array.isArray(options.filterValues)) {\r\n                options.filterValues = []\r\n            }\r\n        }\r\n        if (options.filterValues && !options.filterValues.length) {\r\n            options.filterValues = null\r\n        }\r\n        options.apply();\r\n        this.hideHeaderFilterMenu()\r\n    },\r\n    showHeaderFilterMenu: function($columnElement, options) {\r\n        if (options) {\r\n            this._initializePopupContainer(options);\r\n            var popupContainer = this.getPopupContainer();\r\n            this.hideHeaderFilterMenu();\r\n            this.updatePopup($columnElement, options);\r\n            popupContainer.show()\r\n        }\r\n    },\r\n    hideHeaderFilterMenu: function() {\r\n        var headerFilterMenu = this.getPopupContainer();\r\n        headerFilterMenu && headerFilterMenu.hide()\r\n    },\r\n    updatePopup: function($element, options) {\r\n        var showColumnLines = this.option(\"showColumnLines\");\r\n        var alignment = \"right\" === options.alignment ^ !showColumnLines ? \"left\" : \"right\";\r\n        if (this._popupContainer) {\r\n            this._cleanPopupContent();\r\n            this._popupContainer.option(\"position\", {\r\n                my: alignment + \" top\",\r\n                at: alignment + \" bottom\",\r\n                of: $element,\r\n                collision: \"flip fit\"\r\n            })\r\n        }\r\n    },\r\n    _getSearchExpr: function(options) {\r\n        var lookup = options.lookup;\r\n        var useDefaultSearchExpr = options.useDefaultSearchExpr;\r\n        var headerFilterDataSource = options.headerFilter && options.headerFilter.dataSource;\r\n        if (useDefaultSearchExpr || isDefined(headerFilterDataSource) && !isFunction(headerFilterDataSource)) {\r\n            return DEFAULT_SEARCH_EXPRESSION\r\n        }\r\n        if (lookup) {\r\n            return lookup.displayExpr || \"this\"\r\n        }\r\n        if (options.dataSource) {\r\n            var group = options.dataSource.group;\r\n            if (Array.isArray(group) && group.length > 0) {\r\n                return group[0].selector\r\n            } else if (isFunction(group) && !options.remoteFiltering) {\r\n                return group\r\n            }\r\n        }\r\n        return options.dataField || options.selector\r\n    },\r\n    _cleanPopupContent: function() {\r\n        this._popupContainer && this._popupContainer.$content().empty()\r\n    },\r\n    _initializePopupContainer: function(options) {\r\n        var that = this;\r\n        var $element = that.element();\r\n        var headerFilterOptions = that.option(\"headerFilter\");\r\n        var width = options.headerFilter && options.headerFilter.width || headerFilterOptions && headerFilterOptions.width;\r\n        var height = options.headerFilter && options.headerFilter.height || headerFilterOptions && headerFilterOptions.height;\r\n        var dxPopupOptions = {\r\n            width: width,\r\n            height: height,\r\n            visible: false,\r\n            shading: false,\r\n            showTitle: false,\r\n            showCloseButton: false,\r\n            hideOnParentScroll: false,\r\n            dragEnabled: false,\r\n            closeOnOutsideClick: true,\r\n            focusStateEnabled: false,\r\n            copyRootClassesToWrapper: true,\r\n            _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n            toolbarItems: [{\r\n                toolbar: \"bottom\",\r\n                location: \"after\",\r\n                widget: \"dxButton\",\r\n                options: {\r\n                    text: headerFilterOptions.texts.ok,\r\n                    onClick: function() {\r\n                        that.applyHeaderFilter(options)\r\n                    }\r\n                }\r\n            }, {\r\n                toolbar: \"bottom\",\r\n                location: \"after\",\r\n                widget: \"dxButton\",\r\n                options: {\r\n                    text: headerFilterOptions.texts.cancel,\r\n                    onClick: function() {\r\n                        that.hideHeaderFilterMenu()\r\n                    }\r\n                }\r\n            }],\r\n            resizeEnabled: true,\r\n            onShowing: function(e) {\r\n                e.component.$content().parent().addClass(\"dx-dropdowneditor-overlay\");\r\n                that._initializeListContainer(options);\r\n                options.onShowing && options.onShowing(e)\r\n            },\r\n            onShown: function() {\r\n                that.getListContainer().focus()\r\n            },\r\n            onHidden: options.onHidden,\r\n            onInitialized: function(e) {\r\n                var component = e.component;\r\n                component.option(\"animation\", component._getDefaultOptions().animation)\r\n            }\r\n        };\r\n        if (!isDefined(that._popupContainer)) {\r\n            that._popupContainer = that._createComponent($element, Popup, dxPopupOptions)\r\n        } else {\r\n            that._popupContainer.option(dxPopupOptions)\r\n        }\r\n    },\r\n    _initializeListContainer: function(options) {\r\n        var that = this;\r\n        var $content = that._popupContainer.$content();\r\n        var widgetOptions = {\r\n            searchEnabled: isSearchEnabled(that, options),\r\n            searchTimeout: that.option(\"headerFilter.searchTimeout\"),\r\n            searchMode: options.headerFilter && options.headerFilter.searchMode || \"\",\r\n            dataSource: options.dataSource,\r\n            onContentReady: function() {\r\n                that.renderCompleted.fire()\r\n            },\r\n            itemTemplate: function(data, _, element) {\r\n                var $element = $(element);\r\n                if (options.encodeHtml) {\r\n                    return $element.text(data.text)\r\n                }\r\n                return $element.html(data.text)\r\n            }\r\n        };\r\n\r\n        function onOptionChanged(e) {\r\n            if (\"searchValue\" === e.fullName && !options.isFilterBuilder && false !== that.option(\"headerFilter.hideSelectAllOnSearch\")) {\r\n                if (\"tree\" === options.type) {\r\n                    e.component.option(\"showCheckBoxesMode\", e.value ? \"normal\" : \"selectAll\")\r\n                } else {\r\n                    e.component.option(\"selectionMode\", e.value ? \"multiple\" : \"all\")\r\n                }\r\n            }\r\n        }\r\n        if (\"tree\" === options.type) {\r\n            that._listContainer = that._createComponent($(\"<div>\").appendTo($content), TreeView, extend(widgetOptions, {\r\n                showCheckBoxesMode: options.isFilterBuilder ? \"normal\" : \"selectAll\",\r\n                onOptionChanged: onOptionChanged,\r\n                keyExpr: \"id\"\r\n            }))\r\n        } else {\r\n            that._listContainer = that._createComponent($(\"<div>\").appendTo($content), List, extend(widgetOptions, {\r\n                searchExpr: that._getSearchExpr(options),\r\n                pageLoadMode: \"scrollBottom\",\r\n                showSelectionControls: true,\r\n                selectionMode: options.isFilterBuilder ? \"multiple\" : \"all\",\r\n                onOptionChanged: onOptionChanged,\r\n                onSelectionChanged: function(e) {\r\n                    var items = e.component.option(\"items\");\r\n                    var selectedItems = e.component.option(\"selectedItems\");\r\n                    if (!e.component._selectedItemsUpdating && !e.component.option(\"searchValue\") && !options.isFilterBuilder) {\r\n                        var filterValues = options.filterValues || [];\r\n                        var isExclude = \"exclude\" === options.filterType;\r\n                        if (0 === selectedItems.length && items.length && (filterValues.length <= 1 || isExclude && filterValues.length === items.length - 1)) {\r\n                            options.filterType = \"include\";\r\n                            options.filterValues = []\r\n                        } else if (selectedItems.length === items.length) {\r\n                            options.filterType = \"exclude\";\r\n                            options.filterValues = []\r\n                        }\r\n                    }\r\n                    each(items, (function(index, item) {\r\n                        var selected = gridCoreUtils.getIndexByKey(item, selectedItems, null) >= 0;\r\n                        var oldSelected = !!item.selected;\r\n                        if (oldSelected !== selected) {\r\n                            item.selected = selected;\r\n                            options.filterValues = options.filterValues || [];\r\n                            var filterValueIndex = gridCoreUtils.getIndexByKey(item.value, options.filterValues, null);\r\n                            if (filterValueIndex >= 0) {\r\n                                options.filterValues.splice(filterValueIndex, 1)\r\n                            }\r\n                            if (selected ^ \"exclude\" === options.filterType) {\r\n                                options.filterValues.push(item.value)\r\n                            }\r\n                        }\r\n                    }));\r\n                    updateSelectAllState(e, options.filterValues)\r\n                },\r\n                onContentReady: function(e) {\r\n                    var component = e.component;\r\n                    var items = component.option(\"items\");\r\n                    var selectedItems = [];\r\n                    each(items, (function() {\r\n                        if (this.selected) {\r\n                            selectedItems.push(this)\r\n                        }\r\n                    }));\r\n                    component._selectedItemsUpdating = true;\r\n                    component.option(\"selectedItems\", selectedItems);\r\n                    component._selectedItemsUpdating = false;\r\n                    updateSelectAllState(e, options.filterValues)\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    _renderCore: function() {\r\n        this.element().addClass(HEADER_FILTER_MENU_CLASS)\r\n    }\r\n});\r\nexport var allowHeaderFiltering = function(column) {\r\n    return isDefined(column.allowHeaderFiltering) ? column.allowHeaderFiltering : column.allowFiltering\r\n};\r\nexport var headerFilterMixin = {\r\n    _applyColumnState: function(options) {\r\n        var $headerFilterIndicator;\r\n        var rootElement = options.rootElement;\r\n        var column = options.column;\r\n        if (\"headerFilter\" === options.name) {\r\n            rootElement.find(\".\" + HEADER_FILTER_CLASS).remove();\r\n            if (allowHeaderFiltering(column)) {\r\n                $headerFilterIndicator = this.callBase(options).toggleClass(\"dx-header-filter-empty\", this._isHeaderFilterEmpty(column));\r\n                if (!this.option(\"useLegacyKeyboardNavigation\")) {\r\n                    $headerFilterIndicator.attr(\"tabindex\", this.option(\"tabindex\") || 0)\r\n                }\r\n            }\r\n            return $headerFilterIndicator\r\n        }\r\n        return this.callBase(options)\r\n    },\r\n    _isHeaderFilterEmpty: function(column) {\r\n        return !column.filterValues || !column.filterValues.length\r\n    },\r\n    _getIndicatorClassName: function(name) {\r\n        if (\"headerFilter\" === name) {\r\n            return HEADER_FILTER_CLASS\r\n        }\r\n        return this.callBase(name)\r\n    },\r\n    _renderIndicator: function(options) {\r\n        var $container = options.container;\r\n        var $indicator = options.indicator;\r\n        if (\"headerFilter\" === options.name) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\");\r\n            if ($container.children().length && (!rtlEnabled && \"right\" === options.columnAlignment || rtlEnabled && \"left\" === options.columnAlignment)) {\r\n                $container.prepend($indicator);\r\n                return\r\n            }\r\n        }\r\n        this.callBase(options)\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"headerFilter\" === args.name) {\r\n            var requireReady = \"columnHeadersView\" === this.name;\r\n            this._invalidate(requireReady, requireReady);\r\n            args.handled = true\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.header_filter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport filterUtils from \"../shared/filtering\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    headerFilterMixin,\r\n    HeaderFilterView,\r\n    updateHeaderFilterItemSelectionState,\r\n    allowHeaderFiltering\r\n} from \"./ui.grid_core.header_filter_core\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined,\r\n    isObject,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    normalizeDataSourceOptions\r\n} from \"../../data/data_source/utils\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    restoreFocus\r\n} from \"../shared/accessibility\";\r\nimport dataQuery from \"../../data/query\";\r\nimport storeHelper from \"../../data/store_helper\";\r\nvar DATE_INTERVAL_FORMATS = {\r\n    month: function(value) {\r\n        return dateLocalization.getMonthNames()[value - 1]\r\n    },\r\n    quarter: function(value) {\r\n        return dateLocalization.format(new Date(2e3, 3 * value - 1), \"quarter\")\r\n    }\r\n};\r\n\r\nfunction ungroupUTCDates(items, dateParts, dates) {\r\n    dateParts = dateParts || [];\r\n    dates = dates || [];\r\n    items.forEach(item => {\r\n        if (isDefined(item.key)) {\r\n            var isMonthPart = 1 === dateParts.length;\r\n            dateParts.push(isMonthPart ? item.key - 1 : item.key);\r\n            if (item.items) {\r\n                ungroupUTCDates(item.items, dateParts, dates)\r\n            } else {\r\n                var date = new Date(Date.UTC.apply(Date, dateParts));\r\n                dates.push(date)\r\n            }\r\n            dateParts.pop()\r\n        } else {\r\n            dates.push(null)\r\n        }\r\n    });\r\n    return dates\r\n}\r\n\r\nfunction convertDataFromUTCToLocal(data, column) {\r\n    var dates = ungroupUTCDates(data);\r\n    var query = dataQuery(dates);\r\n    var group = gridCoreUtils.getHeaderFilterGroupParameters(_extends({}, column, {\r\n        calculateCellValue: date => date\r\n    }));\r\n    return storeHelper.queryByOptions(query, {\r\n        group: group\r\n    }).toArray()\r\n}\r\n\r\nfunction isUTCFormat(format) {\r\n    return \"Z\" === (null === format || void 0 === format ? void 0 : format.slice(-1)) || \"'Z'\" === (null === format || void 0 === format ? void 0 : format.slice(-3))\r\n}\r\nvar HeaderFilterController = modules.ViewController.inherit({\r\n    init: function() {\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._dataController = this.getController(\"data\");\r\n        this._headerFilterView = this.getView(\"headerFilterView\")\r\n    },\r\n    _updateSelectedState: function(items, column) {\r\n        var i = items.length;\r\n        var isExclude = \"exclude\" === column.filterType;\r\n        while (i--) {\r\n            var item = items[i];\r\n            if (\"items\" in items[i]) {\r\n                this._updateSelectedState(items[i].items, column)\r\n            }\r\n            updateHeaderFilterItemSelectionState(item, gridCoreUtils.getIndexByKey(items[i].value, column.filterValues, null) > -1, isExclude)\r\n        }\r\n    },\r\n    _normalizeGroupItem: function(item, currentLevel, options) {\r\n        var value;\r\n        var displayValue;\r\n        var path = options.path;\r\n        var valueSelector = options.valueSelector;\r\n        var displaySelector = options.displaySelector;\r\n        var column = options.column;\r\n        if (valueSelector && displaySelector) {\r\n            value = valueSelector(item);\r\n            displayValue = displaySelector(item)\r\n        } else {\r\n            value = item.key;\r\n            displayValue = value\r\n        }\r\n        if (!isObject(item)) {\r\n            item = {}\r\n        } else {\r\n            item = extend({}, item)\r\n        }\r\n        path.push(value);\r\n        if (1 === path.length) {\r\n            item.value = path[0]\r\n        } else {\r\n            item.value = path.join(\"/\")\r\n        }\r\n        item.text = this.getHeaderItemText(displayValue, column, currentLevel, options.headerFilterOptions);\r\n        return item\r\n    },\r\n    getHeaderItemText: function(displayValue, column, currentLevel, headerFilterOptions) {\r\n        var text = gridCoreUtils.formatValue(displayValue, function(value, column, currentLevel) {\r\n            var groupInterval = filterUtils.getGroupInterval(column);\r\n            var result = gridCoreUtils.getFormatOptionsByColumn(column, \"headerFilter\");\r\n            if (groupInterval) {\r\n                result.groupInterval = groupInterval[currentLevel];\r\n                if (gridCoreUtils.isDateType(column.dataType)) {\r\n                    result.format = DATE_INTERVAL_FORMATS[groupInterval[currentLevel]]\r\n                } else if (\"number\" === column.dataType) {\r\n                    result.getDisplayFormat = function() {\r\n                        var formatOptions = {\r\n                            format: column.format,\r\n                            target: \"headerFilter\"\r\n                        };\r\n                        var firstValueText = gridCoreUtils.formatValue(value, formatOptions);\r\n                        var secondValue = value + groupInterval[currentLevel];\r\n                        var secondValueText = gridCoreUtils.formatValue(secondValue, formatOptions);\r\n                        return firstValueText && secondValueText ? firstValueText + \" - \" + secondValueText : \"\"\r\n                    }\r\n                }\r\n            }\r\n            return result\r\n        }(displayValue, column, currentLevel));\r\n        if (!text) {\r\n            text = headerFilterOptions.texts.emptyValue\r\n        }\r\n        return text\r\n    },\r\n    _processGroupItems: function(groupItems, currentLevel, path, options) {\r\n        var displaySelector;\r\n        var valueSelector;\r\n        var column = options.column;\r\n        var lookup = column.lookup;\r\n        var level = options.level;\r\n        path = path || [];\r\n        currentLevel = currentLevel || 0;\r\n        if (lookup) {\r\n            displaySelector = compileGetter(lookup.displayExpr);\r\n            valueSelector = compileGetter(lookup.valueExpr)\r\n        }\r\n        for (var i = 0; i < groupItems.length; i++) {\r\n            groupItems[i] = this._normalizeGroupItem(groupItems[i], currentLevel, {\r\n                column: options.column,\r\n                headerFilterOptions: options.headerFilterOptions,\r\n                displaySelector: displaySelector,\r\n                valueSelector: valueSelector,\r\n                path: path\r\n            });\r\n            if (\"items\" in groupItems[i]) {\r\n                if (currentLevel === level || !isDefined(groupItems[i].value)) {\r\n                    delete groupItems[i].items\r\n                } else {\r\n                    this._processGroupItems(groupItems[i].items, currentLevel + 1, path, options)\r\n                }\r\n            }\r\n            path.pop()\r\n        }\r\n    },\r\n    getDataSource: function(column) {\r\n        var _column$headerFilter;\r\n        var that = this;\r\n        var dataSource = that._dataController.dataSource();\r\n        var remoteGrouping = null === dataSource || void 0 === dataSource ? void 0 : dataSource.remoteOperations().grouping;\r\n        var group = gridCoreUtils.getHeaderFilterGroupParameters(column, remoteGrouping);\r\n        var headerFilterDataSource = null === (_column$headerFilter = column.headerFilter) || void 0 === _column$headerFilter ? void 0 : _column$headerFilter.dataSource;\r\n        var headerFilterOptions = that.option(\"headerFilter\");\r\n        var isLookup = false;\r\n        var options = {\r\n            component: that.component\r\n        };\r\n        if (!dataSource) {\r\n            return\r\n        }\r\n        if (isDefined(headerFilterDataSource) && !isFunction(headerFilterDataSource)) {\r\n            options.dataSource = normalizeDataSourceOptions(headerFilterDataSource)\r\n        } else if (column.lookup) {\r\n            isLookup = true;\r\n            var lookupDataSourceOptions;\r\n            if (column.lookup.items) {\r\n                lookupDataSourceOptions = column.lookup.items\r\n            } else {\r\n                lookupDataSourceOptions = column.lookup.dataSource;\r\n                if (isFunction(lookupDataSourceOptions) && !variableWrapper.isWrapped(lookupDataSourceOptions)) {\r\n                    lookupDataSourceOptions = lookupDataSourceOptions({})\r\n                }\r\n            }\r\n            options.dataSource = normalizeDataSourceOptions(lookupDataSourceOptions)\r\n        } else {\r\n            var cutoffLevel = Array.isArray(group) ? group.length - 1 : 0;\r\n            that._currentColumn = column;\r\n            var filter = that._dataController.getCombinedFilter();\r\n            that._currentColumn = null;\r\n            options.dataSource = {\r\n                filter: filter,\r\n                group: group,\r\n                useDefaultSearch: true,\r\n                load: function(options) {\r\n                    var d = new Deferred;\r\n                    options.dataField = column.dataField || column.name;\r\n                    dataSource.load(options).done((function(data) {\r\n                        var convertUTCDates = remoteGrouping && isUTCFormat(column.serializationFormat) && cutoffLevel > 3;\r\n                        if (convertUTCDates) {\r\n                            data = convertDataFromUTCToLocal(data, column)\r\n                        }\r\n                        that._processGroupItems(data, null, null, {\r\n                            level: cutoffLevel,\r\n                            column: column,\r\n                            headerFilterOptions: headerFilterOptions\r\n                        });\r\n                        d.resolve(data)\r\n                    })).fail(d.reject);\r\n                    return d\r\n                }\r\n            }\r\n        }\r\n        if (isFunction(headerFilterDataSource)) {\r\n            headerFilterDataSource.call(column, options)\r\n        }\r\n        var origPostProcess = options.dataSource.postProcess;\r\n        options.dataSource.postProcess = function(data) {\r\n            var items = data;\r\n            if (isLookup) {\r\n                if (0 === this.pageIndex() && !this.searchValue()) {\r\n                    items = items.slice(0);\r\n                    items.unshift(null)\r\n                }\r\n                that._processGroupItems(items, null, null, {\r\n                    level: 0,\r\n                    column: column,\r\n                    headerFilterOptions: headerFilterOptions\r\n                })\r\n            }\r\n            items = origPostProcess && origPostProcess.call(this, items) || items;\r\n            that._updateSelectedState(items, column);\r\n            return items\r\n        };\r\n        return options.dataSource\r\n    },\r\n    getCurrentColumn: function() {\r\n        return this._currentColumn\r\n    },\r\n    showHeaderFilterMenu: function(columnIndex, isGroupPanel) {\r\n        var columnsController = this._columnsController;\r\n        var column = extend(true, {}, this._columnsController.getColumns()[columnIndex]);\r\n        if (column) {\r\n            var visibleIndex = columnsController.getVisibleIndex(columnIndex);\r\n            var view = isGroupPanel ? this.getView(\"headerPanel\") : this.getView(\"columnHeadersView\");\r\n            var $columnElement = $columnElement || view.getColumnElements().eq(isGroupPanel ? column.groupIndex : visibleIndex);\r\n            this.showHeaderFilterMenuBase({\r\n                columnElement: $columnElement,\r\n                column: column,\r\n                applyFilter: true,\r\n                apply: function() {\r\n                    columnsController.columnOption(columnIndex, {\r\n                        filterValues: this.filterValues,\r\n                        filterType: this.filterType\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    },\r\n    showHeaderFilterMenuBase: function(options) {\r\n        var that = this;\r\n        var column = options.column;\r\n        if (column) {\r\n            var groupInterval = filterUtils.getGroupInterval(column);\r\n            var dataSource = that._dataController.dataSource();\r\n            var remoteFiltering = dataSource && dataSource.remoteOperations().filtering;\r\n            extend(options, column, {\r\n                type: groupInterval && groupInterval.length > 1 ? \"tree\" : \"list\",\r\n                remoteFiltering: remoteFiltering,\r\n                onShowing: function(e) {\r\n                    var dxResizableInstance = e.component.$overlayContent().dxResizable(\"instance\");\r\n                    dxResizableInstance && dxResizableInstance.option(\"onResizeEnd\", (function(e) {\r\n                        var columnsController = that.getController(\"columns\");\r\n                        var headerFilterByColumn = columnsController.columnOption(options.dataField, \"headerFilter\");\r\n                        headerFilterByColumn = headerFilterByColumn || {};\r\n                        headerFilterByColumn.width = e.width;\r\n                        headerFilterByColumn.height = e.height;\r\n                        columnsController.columnOption(options.dataField, \"headerFilter\", headerFilterByColumn, true)\r\n                    }))\r\n                },\r\n                onHidden: () => restoreFocus(this)\r\n            });\r\n            options.dataSource = that.getDataSource(options);\r\n            if (options.isFilterBuilder) {\r\n                options.dataSource.filter = null;\r\n                options.alignment = \"right\"\r\n            }\r\n            that._headerFilterView.showHeaderFilterMenu(options.columnElement, options)\r\n        }\r\n    },\r\n    hideHeaderFilterMenu: function() {\r\n        this._headerFilterView.hideHeaderFilterMenu()\r\n    }\r\n});\r\nvar ColumnHeadersViewHeaderFilterExtender = extend({}, headerFilterMixin, {\r\n    _renderCellContent: function($cell, options) {\r\n        var $headerFilterIndicator;\r\n        var column = options.column;\r\n        if (!column.command && allowHeaderFiltering(column) && this.option(\"headerFilter.visible\") && \"header\" === options.rowType) {\r\n            $headerFilterIndicator = this._applyColumnState({\r\n                name: \"headerFilter\",\r\n                rootElement: $cell,\r\n                column: column,\r\n                showColumnLines: this.option(\"showColumnLines\")\r\n            });\r\n            $headerFilterIndicator && this._subscribeToIndicatorEvent($headerFilterIndicator, column, \"headerFilter\")\r\n        }\r\n        this.callBase($cell, options)\r\n    },\r\n    _subscribeToIndicatorEvent: function($indicator, column, indicatorName) {\r\n        var that = this;\r\n        if (\"headerFilter\" === indicatorName) {\r\n            eventsEngine.on($indicator, clickEventName, that.createAction((function(e) {\r\n                e.event.stopPropagation();\r\n                that.getController(\"headerFilter\").showHeaderFilterMenu(column.index, false)\r\n            })))\r\n        }\r\n    },\r\n    _updateIndicator: function($cell, column, indicatorName) {\r\n        var $indicator = this.callBase($cell, column, indicatorName);\r\n        $indicator && this._subscribeToIndicatorEvent($indicator, column, indicatorName)\r\n    },\r\n    _updateHeaderFilterIndicators: function() {\r\n        if (this.option(\"headerFilter.visible\")) {\r\n            this._updateIndicators(\"headerFilter\")\r\n        }\r\n    },\r\n    _needUpdateFilterIndicators: function() {\r\n        return true\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var optionNames = e.optionNames;\r\n        if (gridCoreUtils.checkChanges(optionNames, [\"filterValues\", \"filterType\"])) {\r\n            if (this._needUpdateFilterIndicators()) {\r\n                this._updateHeaderFilterIndicators()\r\n            }\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    }\r\n});\r\nvar HeaderPanelHeaderFilterExtender = extend({}, headerFilterMixin, {\r\n    _createGroupPanelItem: function($rootElement, groupColumn) {\r\n        var that = this;\r\n        var $item = that.callBase.apply(that, arguments);\r\n        var $headerFilterIndicator;\r\n        if (!groupColumn.command && allowHeaderFiltering(groupColumn) && that.option(\"headerFilter.visible\")) {\r\n            $headerFilterIndicator = that._applyColumnState({\r\n                name: \"headerFilter\",\r\n                rootElement: $item,\r\n                column: {\r\n                    alignment: getDefaultAlignment(that.option(\"rtlEnabled\")),\r\n                    filterValues: groupColumn.filterValues,\r\n                    allowHeaderFiltering: true\r\n                },\r\n                showColumnLines: true\r\n            });\r\n            $headerFilterIndicator && eventsEngine.on($headerFilterIndicator, clickEventName, that.createAction((function(e) {\r\n                var event = e.event;\r\n                event.stopPropagation();\r\n                that.getController(\"headerFilter\").showHeaderFilterMenu(groupColumn.index, true)\r\n            })))\r\n        }\r\n        return $item\r\n    }\r\n});\r\nexport function invertFilterExpression(filter) {\r\n    return [\"!\", filter]\r\n}\r\nvar DataControllerFilterRowExtender = {\r\n    skipCalculateColumnFilters: function() {\r\n        return false\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        if (this.skipCalculateColumnFilters()) {\r\n            return this.callBase()\r\n        }\r\n        var filters = [this.callBase()];\r\n        var columns = this._columnsController.getVisibleColumns(null, true);\r\n        var headerFilterController = this.getController(\"headerFilter\");\r\n        var currentColumn = headerFilterController.getCurrentColumn();\r\n        each(columns, (function(_, column) {\r\n            var filter;\r\n            if (currentColumn && currentColumn.index === column.index) {\r\n                return\r\n            }\r\n            if (allowHeaderFiltering(column) && column.calculateFilterExpression && Array.isArray(column.filterValues) && column.filterValues.length) {\r\n                var filterValues = [];\r\n                each(column.filterValues, (function(_, filterValue) {\r\n                    if (Array.isArray(filterValue)) {\r\n                        filter = filterValue\r\n                    } else {\r\n                        if (column.deserializeValue && !gridCoreUtils.isDateType(column.dataType) && \"number\" !== column.dataType) {\r\n                            filterValue = column.deserializeValue(filterValue)\r\n                        }\r\n                        filter = column.createFilterExpression(filterValue, \"=\", \"headerFilter\")\r\n                    }\r\n                    if (filter) {\r\n                        filter.columnIndex = column.index\r\n                    }\r\n                    filterValues.push(filter)\r\n                }));\r\n                filterValues = gridCoreUtils.combineFilters(filterValues, \"or\");\r\n                filters.push(\"exclude\" === column.filterType ? [\"!\", filterValues] : filterValues)\r\n            }\r\n        }));\r\n        return gridCoreUtils.combineFilters(filters)\r\n    }\r\n};\r\nexport var headerFilterModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            headerFilter: {\r\n                visible: false,\r\n                width: 252,\r\n                height: 325,\r\n                allowSearch: false,\r\n                searchTimeout: 500,\r\n                texts: {\r\n                    emptyValue: messageLocalization.format(\"dxDataGrid-headerFilterEmptyValue\"),\r\n                    ok: messageLocalization.format(\"dxDataGrid-headerFilterOK\"),\r\n                    cancel: messageLocalization.format(\"dxDataGrid-headerFilterCancel\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        headerFilter: HeaderFilterController\r\n    },\r\n    views: {\r\n        headerFilterView: HeaderFilterView\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterRowExtender\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewHeaderFilterExtender,\r\n            headerPanel: HeaderPanelHeaderFilterExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.header_filter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    headerFilterModule\r\n} from \"../grid_core/ui.grid_core.header_filter\";\r\ncore.registerModule(\"headerFilter\", headerFilterModule);\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder/between.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nvar FILTER_BUILDER_RANGE_CLASS = \"dx-filterbuilder-range\";\r\nvar FILTER_BUILDER_RANGE_START_CLASS = FILTER_BUILDER_RANGE_CLASS + \"-start\";\r\nvar FILTER_BUILDER_RANGE_END_CLASS = FILTER_BUILDER_RANGE_CLASS + \"-end\";\r\nvar FILTER_BUILDER_RANGE_SEPARATOR_CLASS = FILTER_BUILDER_RANGE_CLASS + \"-separator\";\r\nvar SEPARATOR = \"\\u2013\";\r\n\r\nfunction editorTemplate(conditionInfo, container) {\r\n    var $editorStart = $(\"<div>\").addClass(FILTER_BUILDER_RANGE_START_CLASS);\r\n    var $editorEnd = $(\"<div>\").addClass(FILTER_BUILDER_RANGE_END_CLASS);\r\n    var values = conditionInfo.value || [];\r\n    var getStartValue = function(values) {\r\n        return values && values.length > 0 ? values[0] : null\r\n    };\r\n    var getEndValue = function(values) {\r\n        return values && 2 === values.length ? values[1] : null\r\n    };\r\n    container.append($editorStart);\r\n    container.append($(\"<span>\").addClass(FILTER_BUILDER_RANGE_SEPARATOR_CLASS).text(SEPARATOR));\r\n    container.append($editorEnd);\r\n    container.addClass(FILTER_BUILDER_RANGE_CLASS);\r\n    this._editorFactory.createEditor.call(this, $editorStart, extend({}, conditionInfo.field, conditionInfo, {\r\n        value: getStartValue(values),\r\n        parentType: \"filterBuilder\",\r\n        setValue: function(value) {\r\n            values = [value, getEndValue(values)];\r\n            conditionInfo.setValue(values)\r\n        }\r\n    }));\r\n    this._editorFactory.createEditor.call(this, $editorEnd, extend({}, conditionInfo.field, conditionInfo, {\r\n        value: getEndValue(values),\r\n        parentType: \"filterBuilder\",\r\n        setValue: function(value) {\r\n            values = [getStartValue(values), value];\r\n            conditionInfo.setValue(values)\r\n        }\r\n    }))\r\n}\r\nexport function getConfig(caption, context) {\r\n    return {\r\n        name: \"between\",\r\n        caption: caption,\r\n        icon: \"range\",\r\n        valueSeparator: SEPARATOR,\r\n        dataTypes: [\"number\", \"date\", \"datetime\"],\r\n        editorTemplate: editorTemplate.bind(context),\r\n        notForLookup: true\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder/ui.filter_operations_dictionary.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nvar OPERATION_ICONS = {\r\n    \"=\": \"equal\",\r\n    \"<>\": \"notequal\",\r\n    \"<\": \"less\",\r\n    \"<=\": \"lessorequal\",\r\n    \">\": \"greater\",\r\n    \">=\": \"greaterorequal\",\r\n    notcontains: \"doesnotcontain\",\r\n    contains: \"contains\",\r\n    startswith: \"startswith\",\r\n    endswith: \"endswith\",\r\n    isblank: \"isblank\",\r\n    isnotblank: \"isnotblank\"\r\n};\r\nvar OPERATION_NAME = {\r\n    \"=\": \"equal\",\r\n    \"<>\": \"notEqual\",\r\n    \"<\": \"lessThan\",\r\n    \"<=\": \"lessThanOrEqual\",\r\n    \">\": \"greaterThan\",\r\n    \">=\": \"greaterThanOrEqual\",\r\n    startswith: \"startsWith\",\r\n    contains: \"contains\",\r\n    notcontains: \"notContains\",\r\n    endswith: \"endsWith\",\r\n    isblank: \"isBlank\",\r\n    isnotblank: \"isNotBlank\",\r\n    between: \"between\"\r\n};\r\nexport default {\r\n    getIconByFilterOperation: function(filterOperation) {\r\n        return OPERATION_ICONS[filterOperation]\r\n    },\r\n    getNameByFilterOperation: function(filterOperation) {\r\n        return OPERATION_NAME[filterOperation]\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder/utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    errors as dataErrors\r\n} from \"../../data/errors\";\r\nimport {\r\n    isDefined,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport filterUtils from \"../shared/filtering\";\r\nimport formatHelper from \"../../format_helper\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    captionize\r\n} from \"../../core/utils/inflector\";\r\nimport {\r\n    getConfig\r\n} from \"./between\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    DataSource\r\n} from \"../../data/data_source/data_source\";\r\nimport filterOperationsDictionary from \"./ui.filter_operations_dictionary\";\r\nvar DEFAULT_DATA_TYPE = \"string\";\r\nvar EMPTY_MENU_ICON = \"icon-none\";\r\nvar AND_GROUP_OPERATION = \"and\";\r\nvar EQUAL_OPERATION = \"=\";\r\nvar NOT_EQUAL_OPERATION = \"<>\";\r\nvar DATATYPE_OPERATIONS = {\r\n    number: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"isblank\", \"isnotblank\"],\r\n    string: [\"contains\", \"notcontains\", \"startswith\", \"endswith\", \"=\", \"<>\", \"isblank\", \"isnotblank\"],\r\n    date: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"isblank\", \"isnotblank\"],\r\n    datetime: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"isblank\", \"isnotblank\"],\r\n    boolean: [\"=\", \"<>\", \"isblank\", \"isnotblank\"],\r\n    object: [\"isblank\", \"isnotblank\"]\r\n};\r\nvar DEFAULT_FORMAT = {\r\n    date: \"shortDate\",\r\n    datetime: \"shortDateShortTime\"\r\n};\r\nvar LOOKUP_OPERATIONS = [\"=\", \"<>\", \"isblank\", \"isnotblank\"];\r\nvar AVAILABLE_FIELD_PROPERTIES = [\"caption\", \"customizeText\", \"dataField\", \"dataType\", \"editorTemplate\", \"falseText\", \"editorOptions\", \"filterOperations\", \"format\", \"lookup\", \"trueText\", \"calculateFilterExpression\", \"name\"];\r\nvar FILTER_BUILDER_CLASS = \"dx-filterbuilder\";\r\nvar FILTER_BUILDER_ITEM_TEXT_CLASS = FILTER_BUILDER_CLASS + \"-text\";\r\nvar FILTER_BUILDER_ITEM_TEXT_PART_CLASS = FILTER_BUILDER_ITEM_TEXT_CLASS + \"-part\";\r\nvar FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS = FILTER_BUILDER_ITEM_TEXT_CLASS + \"-separator\";\r\nvar FILTER_BUILDER_ITEM_TEXT_SEPARATOR_EMPTY_CLASS = FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS + \"-empty\";\r\n\r\nfunction getFormattedValueText(field, value) {\r\n    var fieldFormat = field.format || DEFAULT_FORMAT[field.dataType];\r\n    return formatHelper.format(value, fieldFormat)\r\n}\r\n\r\nfunction isNegationGroup(group) {\r\n    return group && group.length > 1 && \"!\" === group[0] && !isCondition(group)\r\n}\r\nexport function getGroupCriteria(group) {\r\n    return isNegationGroup(group) ? group[1] : group\r\n}\r\n\r\nfunction setGroupCriteria(group, criteria) {\r\n    if (isNegationGroup(group)) {\r\n        group[1] = criteria\r\n    } else {\r\n        group = criteria\r\n    }\r\n    return group\r\n}\r\n\r\nfunction convertGroupToNewStructure(group, value) {\r\n    if (function(value) {\r\n            return -1 !== value.indexOf(\"!\")\r\n        }(value)) {\r\n        if (!isNegationGroup(group)) {\r\n            ! function(group) {\r\n                var criteria = group.slice(0);\r\n                group.length = 0;\r\n                group.push(\"!\", criteria)\r\n            }(group)\r\n        }\r\n    } else if (isNegationGroup(group)) {\r\n        ! function(group) {\r\n            var criteria = getGroupCriteria(group);\r\n            group.length = 0;\r\n            [].push.apply(group, criteria)\r\n        }(group)\r\n    }\r\n}\r\nexport function setGroupValue(group, value) {\r\n    convertGroupToNewStructure(group, value);\r\n    var criteria = getGroupCriteria(group);\r\n    var i;\r\n    value = function(value) {\r\n        return -1 === value.indexOf(\"!\") ? value : value.substring(1)\r\n    }(value);\r\n    ! function(criteria, value) {\r\n        for (i = 0; i < criteria.length; i++) {\r\n            if (!Array.isArray(criteria[i])) {\r\n                criteria[i] = value\r\n            }\r\n        }\r\n    }(criteria, value);\r\n    return group\r\n}\r\nexport function getGroupMenuItem(group, availableGroups) {\r\n    var groupValue = getGroupValue(group);\r\n    return availableGroups.filter((function(item) {\r\n        return item.value === groupValue\r\n    }))[0]\r\n}\r\n\r\nfunction getCriteriaOperation(criteria) {\r\n    if (isCondition(criteria)) {\r\n        return AND_GROUP_OPERATION\r\n    }\r\n    var value = \"\";\r\n    for (var i = 0; i < criteria.length; i++) {\r\n        var item = criteria[i];\r\n        if (!Array.isArray(item)) {\r\n            if (value && value !== item) {\r\n                throw new dataErrors.Error(\"E4019\")\r\n            }\r\n            if (\"!\" !== item) {\r\n                value = item\r\n            }\r\n        }\r\n    }\r\n    return value\r\n}\r\nexport function getGroupValue(group) {\r\n    var criteria = getGroupCriteria(group);\r\n    var value = getCriteriaOperation(criteria);\r\n    if (!value) {\r\n        value = AND_GROUP_OPERATION\r\n    }\r\n    if (criteria !== group) {\r\n        value = \"!\" + value\r\n    }\r\n    return value\r\n}\r\n\r\nfunction getDefaultFilterOperations(field) {\r\n    return field.lookup && LOOKUP_OPERATIONS || DATATYPE_OPERATIONS[field.dataType || DEFAULT_DATA_TYPE]\r\n}\r\n\r\nfunction containItems(entity) {\r\n    return Array.isArray(entity) && entity.length\r\n}\r\nexport function getFilterOperations(field) {\r\n    var result = containItems(field.filterOperations) ? field.filterOperations : getDefaultFilterOperations(field);\r\n    return extend([], result)\r\n}\r\nexport function getCaptionByOperation(operation, filterOperationDescriptions) {\r\n    var operationName = filterOperationsDictionary.getNameByFilterOperation(operation);\r\n    return filterOperationDescriptions && filterOperationDescriptions[operationName] ? filterOperationDescriptions[operationName] : operationName\r\n}\r\nexport function getOperationFromAvailable(operation, availableOperations) {\r\n    for (var i = 0; i < availableOperations.length; i++) {\r\n        if (availableOperations[i].value === operation) {\r\n            return availableOperations[i]\r\n        }\r\n    }\r\n    throw new errors.Error(\"E1048\", operation)\r\n}\r\nexport function getCustomOperation(customOperations, name) {\r\n    var filteredOperations = customOperations.filter((function(item) {\r\n        return item.name === name\r\n    }));\r\n    return filteredOperations.length ? filteredOperations[0] : null\r\n}\r\nexport function getAvailableOperations(field, filterOperationDescriptions, customOperations) {\r\n    var filterOperations = getFilterOperations(field);\r\n    var isLookupField = !!field.lookup;\r\n    customOperations.forEach((function(customOperation) {\r\n        if (!field.filterOperations && -1 === filterOperations.indexOf(customOperation.name)) {\r\n            var dataTypes = customOperation && customOperation.dataTypes;\r\n            var isOperationForbidden = isLookupField ? !!customOperation.notForLookup : false;\r\n            if (!isOperationForbidden && dataTypes && dataTypes.indexOf(field.dataType || DEFAULT_DATA_TYPE) >= 0) {\r\n                filterOperations.push(customOperation.name)\r\n            }\r\n        }\r\n    }));\r\n    return filterOperations.map((function(operation) {\r\n        var customOperation = getCustomOperation(customOperations, operation);\r\n        if (customOperation) {\r\n            return {\r\n                icon: customOperation.icon || EMPTY_MENU_ICON,\r\n                text: customOperation.caption || captionize(customOperation.name),\r\n                value: customOperation.name,\r\n                isCustom: true\r\n            }\r\n        } else {\r\n            return {\r\n                icon: filterOperationsDictionary.getIconByFilterOperation(operation) || EMPTY_MENU_ICON,\r\n                text: getCaptionByOperation(operation, filterOperationDescriptions),\r\n                value: operation\r\n            }\r\n        }\r\n    }))\r\n}\r\nexport function getDefaultOperation(field) {\r\n    return field.defaultFilterOperation || getFilterOperations(field)[0]\r\n}\r\nexport function createCondition(field, customOperations) {\r\n    var condition = [field.dataField, \"\", \"\"];\r\n    var filterOperation = getDefaultOperation(field);\r\n    updateConditionByOperation(condition, filterOperation, customOperations);\r\n    return condition\r\n}\r\nexport function removeItem(group, item) {\r\n    var criteria = getGroupCriteria(group);\r\n    var index = criteria.indexOf(item);\r\n    criteria.splice(index, 1);\r\n    if (1 !== criteria.length) {\r\n        criteria.splice(index, 1)\r\n    }\r\n    return group\r\n}\r\nexport function createEmptyGroup(value) {\r\n    var isNegation = isNegationGroupOperation(value);\r\n    var groupOperation = isNegation ? getGroupOperationFromNegationOperation(value) : value;\r\n    return isNegation ? [\"!\", [groupOperation]] : [groupOperation]\r\n}\r\nexport function isEmptyGroup(group) {\r\n    var criteria = getGroupCriteria(group);\r\n    if (isCondition(criteria)) {\r\n        return false\r\n    }\r\n    var hasConditions = criteria.some((function(item) {\r\n        return isCondition(item)\r\n    }));\r\n    return !hasConditions\r\n}\r\nexport function addItem(item, group) {\r\n    var criteria = getGroupCriteria(group);\r\n    var groupValue = getGroupValue(criteria);\r\n    1 === criteria.length ? criteria.unshift(item) : criteria.push(item, groupValue);\r\n    return group\r\n}\r\nexport function getField(dataField, fields) {\r\n    for (var i = 0; i < fields.length; i++) {\r\n        if (fields[i].name === dataField) {\r\n            return fields[i]\r\n        }\r\n        if (fields[i].dataField.toLowerCase() === dataField.toLowerCase()) {\r\n            return fields[i]\r\n        }\r\n    }\r\n    var extendedFields = getItems(fields, true).filter((function(item) {\r\n        return item.dataField.toLowerCase() === dataField.toLowerCase()\r\n    }));\r\n    if (extendedFields.length > 0) {\r\n        return extendedFields[0]\r\n    }\r\n    throw new errors.Error(\"E1047\", dataField)\r\n}\r\nexport function isGroup(criteria) {\r\n    if (!Array.isArray(criteria)) {\r\n        return false\r\n    }\r\n    return criteria.length < 2 || Array.isArray(criteria[0]) || Array.isArray(criteria[1])\r\n}\r\nexport function isCondition(criteria) {\r\n    if (!Array.isArray(criteria)) {\r\n        return false\r\n    }\r\n    return criteria.length > 1 && !Array.isArray(criteria[0]) && !Array.isArray(criteria[1])\r\n}\r\n\r\nfunction convertToInnerGroup(group, customOperations, defaultGroupOperation) {\r\n    defaultGroupOperation = defaultGroupOperation || AND_GROUP_OPERATION;\r\n    var groupOperation = getCriteriaOperation(group).toLowerCase() || defaultGroupOperation;\r\n    var innerGroup = [];\r\n    for (var i = 0; i < group.length; i++) {\r\n        if (isGroup(group[i])) {\r\n            innerGroup.push(convertToInnerStructure(group[i], customOperations, defaultGroupOperation));\r\n            innerGroup = appendGroupOperationToGroup(innerGroup, groupOperation)\r\n        } else if (isCondition(group[i])) {\r\n            innerGroup.push(convertToInnerCondition(group[i], customOperations));\r\n            innerGroup = appendGroupOperationToGroup(innerGroup, groupOperation)\r\n        }\r\n    }\r\n    if (0 === innerGroup.length) {\r\n        innerGroup = appendGroupOperationToGroup(innerGroup, groupOperation)\r\n    }\r\n    return innerGroup\r\n}\r\n\r\nfunction conditionHasCustomOperation(condition, customOperations) {\r\n    var customOperation = getCustomOperation(customOperations, condition[1]);\r\n    return customOperation && customOperation.name === condition[1]\r\n}\r\n\r\nfunction convertToInnerCondition(condition, customOperations) {\r\n    if (conditionHasCustomOperation(condition, customOperations)) {\r\n        return condition\r\n    }\r\n    if (condition.length < 3) {\r\n        condition[2] = condition[1];\r\n        condition[1] = EQUAL_OPERATION\r\n    }\r\n    return condition\r\n}\r\n\r\nfunction isNegationGroupOperation(operation) {\r\n    return -1 !== operation.indexOf(\"not\")\r\n}\r\n\r\nfunction getGroupOperationFromNegationOperation(operation) {\r\n    return operation.substring(3).toLowerCase()\r\n}\r\n\r\nfunction appendGroupOperationToCriteria(criteria, groupOperation) {\r\n    var isNegation = isNegationGroupOperation(groupOperation);\r\n    groupOperation = isNegation ? getGroupOperationFromNegationOperation(groupOperation) : groupOperation;\r\n    return isNegation ? [\"!\", criteria, groupOperation] : [criteria, groupOperation]\r\n}\r\n\r\nfunction appendGroupOperationToGroup(group, groupOperation) {\r\n    var isNegation = isNegationGroupOperation(groupOperation);\r\n    groupOperation = isNegation ? getGroupOperationFromNegationOperation(groupOperation) : groupOperation;\r\n    group.push(groupOperation);\r\n    var result = group;\r\n    if (isNegation) {\r\n        result = [\"!\", result]\r\n    }\r\n    return result\r\n}\r\nexport function convertToInnerStructure(value, customOperations, defaultGroupOperation) {\r\n    defaultGroupOperation = defaultGroupOperation || AND_GROUP_OPERATION;\r\n    if (!value) {\r\n        return createEmptyGroup(defaultGroupOperation)\r\n    }\r\n    value = extend(true, [], value);\r\n    if (isCondition(value)) {\r\n        return appendGroupOperationToCriteria(convertToInnerCondition(value, customOperations), defaultGroupOperation)\r\n    }\r\n    if (isNegationGroup(value)) {\r\n        return [\"!\", isCondition(value[1]) ? appendGroupOperationToCriteria(convertToInnerCondition(value[1], customOperations), defaultGroupOperation) : isNegationGroup(value[1]) ? appendGroupOperationToCriteria(convertToInnerStructure(value[1], customOperations), defaultGroupOperation) : convertToInnerGroup(value[1], customOperations, defaultGroupOperation)]\r\n    }\r\n    return convertToInnerGroup(value, customOperations, defaultGroupOperation)\r\n}\r\nexport function getNormalizedFields(fields) {\r\n    return fields.reduce((function(result, field) {\r\n        if (isDefined(field.dataField)) {\r\n            var normalizedField = {};\r\n            for (var key in field) {\r\n                if (field[key] && AVAILABLE_FIELD_PROPERTIES.indexOf(key) > -1) {\r\n                    normalizedField[key] = field[key]\r\n                }\r\n            }\r\n            normalizedField.defaultCalculateFilterExpression = filterUtils.defaultCalculateFilterExpression;\r\n            if (!isDefined(normalizedField.dataType)) {\r\n                normalizedField.dataType = DEFAULT_DATA_TYPE\r\n            }\r\n            if (!isDefined(normalizedField.trueText)) {\r\n                normalizedField.trueText = messageLocalization.format(\"dxDataGrid-trueText\")\r\n            }\r\n            if (!isDefined(normalizedField.falseText)) {\r\n                normalizedField.falseText = messageLocalization.format(\"dxDataGrid-falseText\")\r\n            }\r\n            result.push(normalizedField)\r\n        }\r\n        return result\r\n    }), [])\r\n}\r\n\r\nfunction getConditionFilterExpression(condition, fields, customOperations, target) {\r\n    var field = getField(condition[0], fields);\r\n    var filterExpression = convertToInnerCondition(condition, customOperations);\r\n    var customOperation = customOperations.length && getCustomOperation(customOperations, filterExpression[1]);\r\n    if (customOperation && customOperation.calculateFilterExpression) {\r\n        return customOperation.calculateFilterExpression.apply(customOperation, [filterExpression[2], field, fields])\r\n    } else if (field.createFilterExpression) {\r\n        return field.createFilterExpression.apply(field, [filterExpression[2], filterExpression[1], target])\r\n    } else if (field.calculateFilterExpression) {\r\n        return field.calculateFilterExpression.apply(field, [filterExpression[2], filterExpression[1], target])\r\n    } else {\r\n        return field.defaultCalculateFilterExpression.apply(field, [filterExpression[2], filterExpression[1], target])\r\n    }\r\n}\r\nexport function getFilterExpression(value, fields, customOperations, target) {\r\n    if (!isDefined(value)) {\r\n        return null\r\n    }\r\n    if (isNegationGroup(value)) {\r\n        var filterExpression = getFilterExpression(value[1], fields, customOperations, target);\r\n        return [\"!\", filterExpression]\r\n    }\r\n    var criteria = getGroupCriteria(value);\r\n    if (isCondition(criteria)) {\r\n        return getConditionFilterExpression(criteria, fields, customOperations, target) || null\r\n    } else {\r\n        var result = [];\r\n        var _filterExpression;\r\n        var groupValue = getGroupValue(criteria);\r\n        for (var i = 0; i < criteria.length; i++) {\r\n            if (isGroup(criteria[i])) {\r\n                _filterExpression = getFilterExpression(criteria[i], fields, customOperations, target);\r\n                if (_filterExpression) {\r\n                    i && result.push(groupValue);\r\n                    result.push(_filterExpression)\r\n                }\r\n            } else if (isCondition(criteria[i])) {\r\n                _filterExpression = getConditionFilterExpression(criteria[i], fields, customOperations, target);\r\n                if (_filterExpression) {\r\n                    result.length && result.push(groupValue);\r\n                    result.push(_filterExpression)\r\n                }\r\n            }\r\n        }\r\n        if (1 === result.length) {\r\n            result = result[0]\r\n        }\r\n        return result.length ? result : null\r\n    }\r\n}\r\nexport function getNormalizedFilter(group) {\r\n    var criteria = getGroupCriteria(group);\r\n    var i;\r\n    if (0 === criteria.length) {\r\n        return null\r\n    }\r\n    var itemsForRemove = [];\r\n    for (i = 0; i < criteria.length; i++) {\r\n        if (isGroup(criteria[i])) {\r\n            var normalizedGroupValue = getNormalizedFilter(criteria[i]);\r\n            if (normalizedGroupValue) {\r\n                criteria[i] = normalizedGroupValue\r\n            } else {\r\n                itemsForRemove.push(criteria[i])\r\n            }\r\n        } else if (isCondition(criteria[i])) {\r\n            if (!isValidCondition(criteria[i])) {\r\n                itemsForRemove.push(criteria[i])\r\n            }\r\n        }\r\n    }\r\n    for (i = 0; i < itemsForRemove.length; i++) {\r\n        removeItem(criteria, itemsForRemove[i])\r\n    }\r\n    if (1 === criteria.length) {\r\n        return null\r\n    }\r\n    criteria.splice(criteria.length - 1, 1);\r\n    if (1 === criteria.length) {\r\n        group = setGroupCriteria(group, criteria[0])\r\n    }\r\n    if (0 === group.length) {\r\n        return null\r\n    }\r\n    return group\r\n}\r\nexport function getCurrentLookupValueText(field, value, handler) {\r\n    if (\"\" === value) {\r\n        handler(\"\");\r\n        return\r\n    }\r\n    var lookup = field.lookup;\r\n    if (lookup.items) {\r\n        handler(lookup.calculateCellValue(value) || \"\")\r\n    } else {\r\n        var lookupDataSource = isFunction(lookup.dataSource) ? lookup.dataSource({}) : lookup.dataSource;\r\n        var dataSource = new DataSource(lookupDataSource);\r\n        dataSource.loadSingle(lookup.valueExpr, value).done((function(result) {\r\n            var valueText = \"\";\r\n            if (result) {\r\n                valueText = lookup.displayExpr ? compileGetter(lookup.displayExpr)(result) : result\r\n            }\r\n            if (field.customizeText) {\r\n                valueText = field.customizeText({\r\n                    value: value,\r\n                    valueText: valueText\r\n                })\r\n            }\r\n            handler(valueText)\r\n        })).fail((function() {\r\n            handler(\"\")\r\n        }))\r\n    }\r\n}\r\n\r\nfunction getPrimitiveValueText(field, value, customOperation, target, options) {\r\n    var valueText;\r\n    if (true === value) {\r\n        valueText = field.trueText || messageLocalization.format(\"dxDataGrid-trueText\")\r\n    } else if (false === value) {\r\n        valueText = field.falseText || messageLocalization.format(\"dxDataGrid-falseText\")\r\n    } else {\r\n        valueText = getFormattedValueText(field, value)\r\n    }\r\n    if (field.customizeText) {\r\n        valueText = field.customizeText.call(field, {\r\n            value: value,\r\n            valueText: valueText,\r\n            target: target\r\n        })\r\n    }\r\n    if (customOperation && customOperation.customizeText) {\r\n        valueText = customOperation.customizeText.call(customOperation, {\r\n            value: value,\r\n            valueText: valueText,\r\n            field: field,\r\n            target: target\r\n        }, options)\r\n    }\r\n    return valueText\r\n}\r\n\r\nfunction getArrayValueText(field, value, customOperation, target) {\r\n    var options = {\r\n        values: value\r\n    };\r\n    return value.map(v => getPrimitiveValueText(field, v, customOperation, target, options))\r\n}\r\n\r\nfunction checkDefaultValue(value) {\r\n    return \"\" === value || null === value\r\n}\r\nexport function getCurrentValueText(field, value, customOperation) {\r\n    var target = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : \"filterBuilder\";\r\n    if (checkDefaultValue(value)) {\r\n        return \"\"\r\n    }\r\n    if (Array.isArray(value)) {\r\n        var result = new Deferred;\r\n        when.apply(this, getArrayValueText(field, value, customOperation, target)).done((function() {\r\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n                args[_key] = arguments[_key]\r\n            }\r\n            var text = args.some(item => !checkDefaultValue(item)) ? args.map(item => !checkDefaultValue(item) ? item : \"?\") : \"\";\r\n            result.resolve(text)\r\n        }));\r\n        return result\r\n    } else {\r\n        return getPrimitiveValueText(field, value, customOperation, target)\r\n    }\r\n}\r\n\r\nfunction itemExists(plainItems, parentId) {\r\n    return plainItems.some((function(item) {\r\n        return item.dataField === parentId\r\n    }))\r\n}\r\n\r\nfunction pushItemAndCheckParent(originalItems, plainItems, item) {\r\n    var dataField = item.dataField;\r\n    if (hasParent(dataField)) {\r\n        item.parentId = getParentIdFromItemDataField(dataField);\r\n        if (!itemExists(plainItems, item.parentId) && !itemExists(originalItems, item.parentId)) {\r\n            pushItemAndCheckParent(originalItems, plainItems, {\r\n                id: item.parentId,\r\n                dataType: \"object\",\r\n                dataField: item.parentId,\r\n                caption: generateCaptionByDataField(item.parentId, true),\r\n                filterOperations: [\"isblank\", \"isnotblank\"]\r\n            })\r\n        }\r\n    }\r\n    plainItems.push(item)\r\n}\r\n\r\nfunction generateCaptionByDataField(dataField, allowHierarchicalFields) {\r\n    var caption = \"\";\r\n    if (allowHierarchicalFields) {\r\n        dataField = dataField.substring(dataField.lastIndexOf(\".\") + 1)\r\n    } else if (hasParent(dataField)) {\r\n        dataField.split(\".\").forEach((function(field, index, arr) {\r\n            caption += captionize(field);\r\n            if (index !== arr.length - 1) {\r\n                caption += \".\"\r\n            }\r\n        }));\r\n        return caption\r\n    }\r\n    return captionize(dataField)\r\n}\r\nexport function getItems(fields, allowHierarchicalFields) {\r\n    var items = [];\r\n    for (var i = 0; i < fields.length; i++) {\r\n        var item = extend(true, {\r\n            caption: generateCaptionByDataField(fields[i].dataField, allowHierarchicalFields)\r\n        }, fields[i]);\r\n        item.id = item.name || item.dataField;\r\n        if (allowHierarchicalFields) {\r\n            pushItemAndCheckParent(fields, items, item)\r\n        } else {\r\n            items.push(item)\r\n        }\r\n    }\r\n    return items\r\n}\r\n\r\nfunction hasParent(dataField) {\r\n    return -1 !== dataField.lastIndexOf(\".\")\r\n}\r\n\r\nfunction getParentIdFromItemDataField(dataField) {\r\n    return dataField.substring(0, dataField.lastIndexOf(\".\"))\r\n}\r\nexport function getCaptionWithParents(item, plainItems) {\r\n    if (hasParent(item.dataField)) {\r\n        var parentId = getParentIdFromItemDataField(item.dataField);\r\n        for (var i = 0; i < plainItems.length; i++) {\r\n            if (plainItems[i].dataField === parentId) {\r\n                return getCaptionWithParents(plainItems[i], plainItems) + \".\" + item.caption\r\n            }\r\n        }\r\n    }\r\n    return item.caption\r\n}\r\nexport function updateConditionByOperation(condition, operation, customOperations) {\r\n    var customOperation = getCustomOperation(customOperations, operation);\r\n    if (customOperation) {\r\n        if (false === customOperation.hasValue) {\r\n            condition[1] = operation;\r\n            condition.length = 2\r\n        } else {\r\n            condition[1] = operation;\r\n            condition[2] = \"\"\r\n        }\r\n        return condition\r\n    }\r\n    if (\"isblank\" === operation) {\r\n        condition[1] = EQUAL_OPERATION;\r\n        condition[2] = null\r\n    } else if (\"isnotblank\" === operation) {\r\n        condition[1] = NOT_EQUAL_OPERATION;\r\n        condition[2] = null\r\n    } else {\r\n        customOperation = getCustomOperation(customOperations, condition[1]);\r\n        if (customOperation || 2 === condition.length || null === condition[2]) {\r\n            condition[2] = \"\"\r\n        }\r\n        condition[1] = operation\r\n    }\r\n    return condition\r\n}\r\nexport function getOperationValue(condition) {\r\n    var caption;\r\n    if (null === condition[2]) {\r\n        if (condition[1] === EQUAL_OPERATION) {\r\n            caption = \"isblank\"\r\n        } else {\r\n            caption = \"isnotblank\"\r\n        }\r\n    } else {\r\n        caption = condition[1]\r\n    }\r\n    return caption\r\n}\r\nexport function isValidCondition(condition) {\r\n    return \"\" !== condition[2]\r\n}\r\nexport function getMergedOperations(customOperations, betweenCaption, context) {\r\n    var result = extend(true, [], customOperations);\r\n    var betweenIndex = -1;\r\n    result.some((function(customOperation, index) {\r\n        if (\"between\" === customOperation.name) {\r\n            betweenIndex = index;\r\n            return true\r\n        }\r\n    }));\r\n    if (-1 !== betweenIndex) {\r\n        result[betweenIndex] = extend(getConfig(betweenCaption, context), result[betweenIndex])\r\n    } else {\r\n        result.unshift(getConfig(betweenCaption, context))\r\n    }\r\n    return result\r\n}\r\n\r\nfunction isMatchedCondition(filter, addedFilterDataField) {\r\n    return filter[0] === addedFilterDataField\r\n}\r\nexport function removeFieldConditionsFromFilter(filter, dataField) {\r\n    if (!filter || 0 === filter.length) {\r\n        return null\r\n    }\r\n    if (isCondition(filter)) {\r\n        var hasMatchedCondition = isMatchedCondition(filter, dataField);\r\n        return !hasMatchedCondition ? filter : null\r\n    } else {\r\n        return syncConditionIntoGroup(filter, [dataField], false)\r\n    }\r\n}\r\n\r\nfunction syncConditionIntoGroup(filter, addedFilter, canPush) {\r\n    var result = [];\r\n    filter.forEach((function(item) {\r\n        if (isCondition(item)) {\r\n            if (isMatchedCondition(item, addedFilter[0])) {\r\n                if (canPush) {\r\n                    result.push(addedFilter);\r\n                    canPush = false\r\n                } else {\r\n                    result.splice(result.length - 1, 1)\r\n                }\r\n            } else {\r\n                result.push(item)\r\n            }\r\n        } else {\r\n            (result.length || isGroup(item)) && result.push(item)\r\n        }\r\n    }));\r\n    if (0 === result.length) {\r\n        return null\r\n    }\r\n    if (canPush) {\r\n        result.push(AND_GROUP_OPERATION);\r\n        result.push(addedFilter)\r\n    }\r\n    return 1 === result.length ? result[0] : result\r\n}\r\nexport function syncFilters(filter, addedFilter) {\r\n    if (null === filter || 0 === filter.length) {\r\n        return addedFilter\r\n    }\r\n    if (isCondition(filter)) {\r\n        if (isMatchedCondition(filter, addedFilter[0])) {\r\n            return addedFilter\r\n        } else {\r\n            return [filter, AND_GROUP_OPERATION, addedFilter]\r\n        }\r\n    }\r\n    var groupValue = getGroupValue(filter);\r\n    if (groupValue !== AND_GROUP_OPERATION) {\r\n        return [addedFilter, \"and\", filter]\r\n    }\r\n    return syncConditionIntoGroup(filter, addedFilter, true)\r\n}\r\nexport function getMatchedConditions(filter, dataField) {\r\n    if (null === filter || 0 === filter.length) {\r\n        return []\r\n    }\r\n    if (isCondition(filter)) {\r\n        if (isMatchedCondition(filter, dataField)) {\r\n            return [filter]\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n    var groupValue = getGroupValue(filter);\r\n    if (groupValue !== AND_GROUP_OPERATION) {\r\n        return []\r\n    }\r\n    var result = filter.filter((function(item) {\r\n        return isCondition(item) && isMatchedCondition(item, dataField)\r\n    }));\r\n    return result\r\n}\r\nexport function filterHasField(filter, dataField) {\r\n    if (null === filter || 0 === filter.length) {\r\n        return false\r\n    }\r\n    if (isCondition(filter)) {\r\n        return filter[0] === dataField\r\n    }\r\n    return filter.some((function(item) {\r\n        return (isCondition(item) || isGroup(item)) && filterHasField(item, dataField)\r\n    }))\r\n}\r\nexport var renderValueText = function($container, value, customOperation) {\r\n    if (Array.isArray(value)) {\r\n        var lastItemIndex = value.length - 1;\r\n        $container.empty();\r\n        value.forEach((t, i) => {\r\n            $(\"<span>\").addClass(FILTER_BUILDER_ITEM_TEXT_PART_CLASS).text(t).appendTo($container);\r\n            if (i !== lastItemIndex) {\r\n                $(\"<span>\").addClass(FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS).text(customOperation && customOperation.valueSeparator ? customOperation.valueSeparator : \"|\").addClass(FILTER_BUILDER_ITEM_TEXT_SEPARATOR_EMPTY_CLASS).appendTo($container)\r\n            }\r\n        })\r\n    } else if (value) {\r\n        $container.text(value)\r\n    } else {\r\n        $container.text(messageLocalization.format(\"dxFilterBuilder-enterValueText\"))\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_custom_operations.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    DataSource\r\n} from \"../../data/data_source/data_source\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isGroup,\r\n    isCondition,\r\n    getFilterExpression,\r\n    renderValueText\r\n} from \"../filter_builder/utils\";\r\nimport errors from \"../widget/ui.errors\";\r\n\r\nfunction baseOperation(grid) {\r\n    var getFullText = function(itemText, parentText) {\r\n        return parentText ? parentText + \"/\" + itemText : itemText\r\n    };\r\n    var headerFilterController = grid && grid.getController(\"headerFilter\");\r\n    return {\r\n        dataTypes: [\"string\", \"date\", \"datetime\", \"number\", \"boolean\", \"object\"],\r\n        calculateFilterExpression: function(filterValue, field, fields) {\r\n            var result = [];\r\n            var lastIndex = filterValue.length - 1;\r\n            filterValue && filterValue.forEach((function(value, index) {\r\n                if (isCondition(value) || isGroup(value)) {\r\n                    var filterExpression = getFilterExpression(value, fields, [], \"headerFilter\");\r\n                    result.push(filterExpression)\r\n                } else {\r\n                    result.push(getFilterExpression([field.dataField, \"=\", value], fields, [], \"headerFilter\"))\r\n                }\r\n                index !== lastIndex && result.push(\"or\")\r\n            }));\r\n            if (1 === result.length) {\r\n                result = result[0]\r\n            }\r\n            return result\r\n        },\r\n        editorTemplate: function(conditionInfo, container) {\r\n            var div = $(\"<div>\").addClass(\"dx-filterbuilder-item-value-text\").appendTo(container);\r\n            var column = extend(true, {}, grid.columnOption(conditionInfo.field.dataField));\r\n            renderValueText(div, conditionInfo.text && conditionInfo.text.split(\"|\"));\r\n            column.filterType = \"include\";\r\n            column.filterValues = conditionInfo.value ? conditionInfo.value.slice() : [];\r\n            headerFilterController.showHeaderFilterMenuBase({\r\n                columnElement: div,\r\n                column: column,\r\n                apply: function() {\r\n                    value = this.filterValues, void conditionInfo.setValue(value);\r\n                    var value;\r\n                    headerFilterController.hideHeaderFilterMenu();\r\n                    conditionInfo.closeEditor()\r\n                },\r\n                onHidden: function() {\r\n                    conditionInfo.closeEditor()\r\n                },\r\n                isFilterBuilder: true\r\n            });\r\n            return container\r\n        },\r\n        customizeText: function(fieldInfo, options) {\r\n            options = options || {};\r\n            var value = fieldInfo.value;\r\n            var column = grid.columnOption(fieldInfo.field.dataField);\r\n            var headerFilter = column && column.headerFilter;\r\n            var lookup = column && column.lookup;\r\n            var values = options.values || [value];\r\n            if (headerFilter && headerFilter.dataSource || lookup && lookup.dataSource) {\r\n                var result = new Deferred;\r\n                var itemsDeferred = options.items || new Deferred;\r\n                if (!options.items) {\r\n                    column = extend({}, column, {\r\n                        filterType: \"include\",\r\n                        filterValues: values\r\n                    });\r\n                    var dataSourceOptions = headerFilterController.getDataSource(column);\r\n                    dataSourceOptions.paginate = false;\r\n                    var dataSource = new DataSource(dataSourceOptions);\r\n                    var key = dataSource.store().key();\r\n                    if (key) {\r\n                        var {\r\n                            values: _values\r\n                        } = options;\r\n                        if (_values && _values.length > 1) {\r\n                            var filter = _values.reduce((result, value) => {\r\n                                if (result.length) {\r\n                                    result.push(\"or\")\r\n                                }\r\n                                result.push([key, \"=\", value]);\r\n                                return result\r\n                            }, []);\r\n                            dataSource.filter(filter)\r\n                        } else {\r\n                            dataSource.filter([key, \"=\", fieldInfo.value])\r\n                        }\r\n                    } else if (fieldInfo.field.calculateDisplayValue) {\r\n                        errors.log(\"W1017\")\r\n                    }\r\n                    options.items = itemsDeferred;\r\n                    dataSource.load().done(itemsDeferred.resolve)\r\n                }\r\n                itemsDeferred.done(items => {\r\n                    var index = values.indexOf(fieldInfo.value);\r\n                    result.resolve(function getSelectedItemsTexts(items, parentText) {\r\n                        var result = [];\r\n                        items.forEach((function(item) {\r\n                            if (item.items) {\r\n                                var selectedItemsTexts = getSelectedItemsTexts(item.items, getFullText(item.text, parentText));\r\n                                result = result.concat(selectedItemsTexts)\r\n                            }\r\n                            item.selected && result.push(getFullText(item.text, parentText))\r\n                        }));\r\n                        return result\r\n                    }(items)[index])\r\n                });\r\n                return result\r\n            } else {\r\n                var text = headerFilterController.getHeaderItemText(value, column, 0, grid.option(\"headerFilter\"));\r\n                return text\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function anyOf(grid) {\r\n    return extend(baseOperation(grid), {\r\n        name: \"anyof\",\r\n        icon: \"selectall\",\r\n        caption: messageLocalization.format(\"dxFilterBuilder-filterOperationAnyOf\")\r\n    })\r\n}\r\nexport function noneOf(grid) {\r\n    var baseOp = baseOperation(grid);\r\n    return extend({}, baseOp, {\r\n        calculateFilterExpression: function(filterValue, field, fields) {\r\n            var baseFilter = baseOp.calculateFilterExpression(filterValue, field, fields);\r\n            if (!baseFilter || 0 === baseFilter.length) {\r\n                return null\r\n            }\r\n            return \"!\" === baseFilter[0] ? baseFilter : [\"!\", baseFilter]\r\n        },\r\n        name: \"noneof\",\r\n        icon: \"unselectall\",\r\n        caption: messageLocalization.format(\"dxFilterBuilder-filterOperationNoneOf\")\r\n    })\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_sync.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    getDefaultOperation,\r\n    getMatchedConditions,\r\n    syncFilters,\r\n    removeFieldConditionsFromFilter,\r\n    addItem,\r\n    getNormalizedFilter,\r\n    getFilterExpression,\r\n    filterHasField\r\n} from \"../filter_builder/utils\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport filterUtils from \"../shared/filtering\";\r\nimport {\r\n    anyOf,\r\n    noneOf\r\n} from \"./ui.grid_core.filter_custom_operations\";\r\nvar FILTER_ROW_OPERATIONS = [\"=\", \"<>\", \"<\", \"<=\", \">\", \">=\", \"notcontains\", \"contains\", \"startswith\", \"endswith\", \"between\"];\r\nvar FILTER_TYPES_INCLUDE = \"include\";\r\nvar FILTER_TYPES_EXCLUDE = \"exclude\";\r\n\r\nfunction getColumnIdentifier(column) {\r\n    return column.name || column.dataField\r\n}\r\n\r\nfunction checkForErrors(columns) {\r\n    columns.forEach(column => {\r\n        var identifier = getColumnIdentifier(column);\r\n        if (!isDefined(identifier) && column.allowFiltering) {\r\n            throw new errors.Error(\"E1049\", column.caption)\r\n        }\r\n    })\r\n}\r\nvar FilterSyncController = modules.Controller.inherit(function() {\r\n    var getEmptyFilterValues = function() {\r\n        return {\r\n            filterType: FILTER_TYPES_INCLUDE,\r\n            filterValues: void 0\r\n        }\r\n    };\r\n    var canSyncHeaderFilterWithFilterRow = function(column) {\r\n        var filterValues = column.filterValues || [];\r\n        return !filterUtils.getGroupInterval(column) && !(column.headerFilter && column.headerFilter.dataSource) || 1 === filterValues.length && null === filterValues[0]\r\n    };\r\n    var getConditionFromFilterRow = function(column) {\r\n        var value = column.filterValue;\r\n        if (isDefined(value)) {\r\n            var operation = column.selectedFilterOperation || column.defaultFilterOperation || getDefaultOperation(column);\r\n            var filter = [getColumnIdentifier(column), operation, column.filterValue];\r\n            return filter\r\n        } else {\r\n            return null\r\n        }\r\n    };\r\n    var getConditionFromHeaderFilter = function(column) {\r\n        var selectedOperation;\r\n        var value;\r\n        var filterValues = column.filterValues;\r\n        if (!filterValues) {\r\n            return null\r\n        }\r\n        if (1 === filterValues.length && canSyncHeaderFilterWithFilterRow(column) && !Array.isArray(filterValues[0])) {\r\n            column.filterType === FILTER_TYPES_EXCLUDE ? selectedOperation = \"<>\" : selectedOperation = \"=\";\r\n            value = filterValues[0]\r\n        } else {\r\n            column.filterType === FILTER_TYPES_EXCLUDE ? selectedOperation = \"noneof\" : selectedOperation = \"anyof\";\r\n            value = filterValues\r\n        }\r\n        return [getColumnIdentifier(column), selectedOperation, value]\r\n    };\r\n    var updateHeaderFilterCondition = function(columnsController, column, headerFilterCondition) {\r\n        var headerFilter = function(headerFilterCondition, column) {\r\n            if (!headerFilterCondition) {\r\n                return getEmptyFilterValues()\r\n            }\r\n            var filterType;\r\n            var selectedFilterOperation = headerFilterCondition[1];\r\n            var value = headerFilterCondition[2];\r\n            var hasArrayValue = Array.isArray(value);\r\n            if (!hasArrayValue) {\r\n                if (!canSyncHeaderFilterWithFilterRow(column)) {\r\n                    return getEmptyFilterValues()\r\n                }\r\n            }\r\n            switch (selectedFilterOperation) {\r\n                case \"anyof\":\r\n                case \"=\":\r\n                    filterType = FILTER_TYPES_INCLUDE;\r\n                    break;\r\n                case \"noneof\":\r\n                case \"<>\":\r\n                    filterType = FILTER_TYPES_EXCLUDE;\r\n                    break;\r\n                default:\r\n                    return getEmptyFilterValues()\r\n            }\r\n            return {\r\n                filterType: filterType,\r\n                filterValues: hasArrayValue ? value : [value]\r\n            }\r\n        }(headerFilterCondition, column);\r\n        columnsController.columnOption(getColumnIdentifier(column), headerFilter)\r\n    };\r\n    var updateFilterRowCondition = function(columnsController, column, condition) {\r\n        var filterRowOptions;\r\n        var selectedFilterOperation = null === condition || void 0 === condition ? void 0 : condition[1];\r\n        var filterValue = null === condition || void 0 === condition ? void 0 : condition[2];\r\n        var filterOperations = column.filterOperations || column.defaultFilterOperations;\r\n        if ((!filterOperations || filterOperations.indexOf(selectedFilterOperation) >= 0 || selectedFilterOperation === column.defaultFilterOperation) && FILTER_ROW_OPERATIONS.indexOf(selectedFilterOperation) >= 0 && null !== filterValue) {\r\n            if (selectedFilterOperation === column.defaultFilterOperation && !isDefined(column.selectedFilterOperation)) {\r\n                selectedFilterOperation = column.selectedFilterOperation\r\n            }\r\n            filterRowOptions = {\r\n                filterValue: filterValue,\r\n                selectedFilterOperation: selectedFilterOperation\r\n            }\r\n        } else {\r\n            filterRowOptions = {\r\n                filterValue: void 0,\r\n                selectedFilterOperation: void 0\r\n            }\r\n        }\r\n        columnsController.columnOption(getColumnIdentifier(column), filterRowOptions)\r\n    };\r\n    return {\r\n        syncFilterValue: function() {\r\n            var that = this;\r\n            var columnsController = that.getController(\"columns\");\r\n            var columns = columnsController.getFilteringColumns();\r\n            this._skipSyncColumnOptions = true;\r\n            columns.forEach((function(column) {\r\n                var filterConditions = getMatchedConditions(that.option(\"filterValue\"), getColumnIdentifier(column));\r\n                if (1 === filterConditions.length) {\r\n                    var filterCondition = filterConditions[0];\r\n                    updateHeaderFilterCondition(columnsController, column, filterCondition);\r\n                    updateFilterRowCondition(columnsController, column, filterCondition)\r\n                } else {\r\n                    isDefined(column.filterValues) && updateHeaderFilterCondition(columnsController, column);\r\n                    isDefined(column.filterValue) && updateFilterRowCondition(columnsController, column)\r\n                }\r\n            }));\r\n            this._skipSyncColumnOptions = false\r\n        },\r\n        _initSync: function() {\r\n            var columns = this.getController(\"columns\").getColumns();\r\n            var dataController = this.getController(\"data\");\r\n            var pageIndex = dataController.pageIndex();\r\n            checkForErrors(columns);\r\n            if (!this.option(\"filterValue\")) {\r\n                var filteringColumns = this.getController(\"columns\").getFilteringColumns();\r\n                var filterValue = this.getFilterValueFromColumns(filteringColumns);\r\n                this.option(\"filterValue\", filterValue)\r\n            }\r\n            this.syncFilterValue();\r\n            dataController.pageIndex(pageIndex)\r\n        },\r\n        init: function() {\r\n            var dataController = this.getController(\"data\");\r\n            if (dataController.isFilterSyncActive()) {\r\n                if (this.getController(\"columns\").isAllDataTypesDefined()) {\r\n                    this._initSync()\r\n                } else {\r\n                    dataController.dataSourceChanged.add(() => this._initSync())\r\n                }\r\n            }\r\n        },\r\n        _getSyncFilterRow: function(filterValue, column) {\r\n            var filter = getConditionFromFilterRow(column);\r\n            if (isDefined(filter)) {\r\n                return syncFilters(filterValue, filter)\r\n            } else {\r\n                return removeFieldConditionsFromFilter(filterValue, getColumnIdentifier(column))\r\n            }\r\n        },\r\n        _getSyncHeaderFilter: function(filterValue, column) {\r\n            var filter = getConditionFromHeaderFilter(column);\r\n            if (filter) {\r\n                return syncFilters(filterValue, filter)\r\n            } else {\r\n                return removeFieldConditionsFromFilter(filterValue, getColumnIdentifier(column))\r\n            }\r\n        },\r\n        getFilterValueFromColumns: function(columns) {\r\n            if (!this.getController(\"data\").isFilterSyncActive()) {\r\n                return null\r\n            }\r\n            var filterValue = [\"and\"];\r\n            columns && columns.forEach(column => {\r\n                var headerFilter = getConditionFromHeaderFilter(column);\r\n                var filterRow = getConditionFromFilterRow(column);\r\n                headerFilter && addItem(headerFilter, filterValue);\r\n                filterRow && addItem(filterRow, filterValue)\r\n            });\r\n            return getNormalizedFilter(filterValue)\r\n        },\r\n        syncFilterRow: function(column, value) {\r\n            this.option(\"filterValue\", this._getSyncFilterRow(this.option(\"filterValue\"), column))\r\n        },\r\n        syncHeaderFilter: function(column) {\r\n            this.option(\"filterValue\", this._getSyncHeaderFilter(this.option(\"filterValue\"), column))\r\n        },\r\n        getCustomFilterOperations: function() {\r\n            var filterBuilderCustomOperations = this.option(\"filterBuilder.customOperations\") || [];\r\n            return [anyOf(this.component), noneOf(this.component)].concat(filterBuilderCustomOperations)\r\n        },\r\n        publicMethods: function() {\r\n            return [\"getCustomFilterOperations\"]\r\n        }\r\n    }\r\n}());\r\nvar DataControllerFilterSyncExtender = {\r\n    isFilterSyncActive: function() {\r\n        var filterSyncEnabledValue = this.option(\"filterSyncEnabled\");\r\n        return \"auto\" === filterSyncEnabledValue ? this.option(\"filterPanel.visible\") : filterSyncEnabledValue\r\n    },\r\n    skipCalculateColumnFilters: function() {\r\n        return isDefined(this.option(\"filterValue\")) && this.isFilterSyncActive()\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        if (false === this.option(\"filterPanel.filterEnabled\")) {\r\n            return this.callBase()\r\n        }\r\n        var filters = [this.callBase()];\r\n        var columns = this.getController(\"columns\").getFilteringColumns();\r\n        var filterValue = this.option(\"filterValue\");\r\n        if (this.isFilterSyncActive()) {\r\n            var currentColumn = this.getController(\"headerFilter\").getCurrentColumn();\r\n            if (currentColumn && filterValue) {\r\n                filterValue = removeFieldConditionsFromFilter(filterValue, getColumnIdentifier(currentColumn))\r\n            }\r\n        }\r\n        var customOperations = this.getController(\"filterSync\").getCustomFilterOperations();\r\n        var calculatedFilterValue = getFilterExpression(filterValue, columns, customOperations, \"filterBuilder\");\r\n        if (calculatedFilterValue) {\r\n            filters.push(calculatedFilterValue)\r\n        }\r\n        return gridCoreUtils.combineFilters(filters)\r\n    },\r\n    _parseColumnPropertyName: function(fullName) {\r\n        var matched = fullName.match(/.*\\.(.*)/);\r\n        if (matched) {\r\n            return matched[1]\r\n        } else {\r\n            return null\r\n        }\r\n    },\r\n    clearFilter: function(filterName) {\r\n        this.component.beginUpdate();\r\n        if (arguments.length > 0) {\r\n            if (\"filterValue\" === filterName) {\r\n                this.option(\"filterValue\", null)\r\n            }\r\n            this.callBase(filterName)\r\n        } else {\r\n            this.option(\"filterValue\", null);\r\n            this.callBase()\r\n        }\r\n        this.component.endUpdate()\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"filterValue\":\r\n                this._applyFilter();\r\n                this.isFilterSyncActive() && this.getController(\"filterSync\").syncFilterValue();\r\n                args.handled = true;\r\n                break;\r\n            case \"filterSyncEnabled\":\r\n                args.handled = true;\r\n                break;\r\n            case \"columns\":\r\n                if (this.isFilterSyncActive()) {\r\n                    var column = this.getController(\"columns\").getColumnByPath(args.fullName);\r\n                    var filterSyncController = this.getController(\"filterSync\");\r\n                    if (column && !filterSyncController._skipSyncColumnOptions) {\r\n                        var propertyName = this._parseColumnPropertyName(args.fullName);\r\n                        filterSyncController._skipSyncColumnOptions = true;\r\n                        if (\"filterType\" === propertyName) {\r\n                            if (FILTER_TYPES_EXCLUDE === args.value || FILTER_TYPES_EXCLUDE === args.previousValue) {\r\n                                filterSyncController.syncHeaderFilter(column)\r\n                            }\r\n                        } else if (\"filterValues\" === propertyName) {\r\n                            filterSyncController.syncHeaderFilter(column)\r\n                        } else if ([\"filterValue\", \"selectedFilterOperation\"].indexOf(propertyName) > -1) {\r\n                            filterSyncController.syncFilterRow(column, column.filterValue)\r\n                        }\r\n                        filterSyncController._skipSyncColumnOptions = false\r\n                    }\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n};\r\nvar ColumnHeadersViewFilterSyncExtender = {\r\n    _isHeaderFilterEmpty: function(column) {\r\n        if (this.getController(\"data\").isFilterSyncActive()) {\r\n            return !filterHasField(this.option(\"filterValue\"), getColumnIdentifier(column))\r\n        }\r\n        return this.callBase(column)\r\n    },\r\n    _needUpdateFilterIndicators: function() {\r\n        return !this.getController(\"data\").isFilterSyncActive()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"filterValue\" === args.name) {\r\n            this._updateHeaderFilterIndicators()\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    }\r\n};\r\nexport var filterSyncModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterValue: null,\r\n            filterSyncEnabled: \"auto\"\r\n        }\r\n    },\r\n    controllers: {\r\n        filterSync: FilterSyncController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterSyncExtender\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFilterSyncExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.filter_sync.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    filterSyncModule\r\n} from \"../grid_core/ui.grid_core.filter_sync\";\r\ncore.registerModule(\"filterSync\", filterSyncModule);\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder/filter_builder.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport Class from \"../../core/class\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport TreeView from \"../tree_view\";\r\nimport Popup from \"../popup\";\r\nimport {\r\n    getElementMaxHeightByWindow\r\n} from \"../overlay/utils\";\r\nimport EditorFactoryMixin from \"../shared/ui.editor_factory_mixin\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    renderValueText,\r\n    getFilterExpression as _getFilterExpression,\r\n    getNormalizedFilter,\r\n    getNormalizedFields,\r\n    getMergedOperations,\r\n    convertToInnerStructure,\r\n    getGroupCriteria,\r\n    isGroup,\r\n    isCondition,\r\n    removeItem,\r\n    createEmptyGroup,\r\n    addItem,\r\n    createCondition,\r\n    getGroupMenuItem,\r\n    setGroupValue,\r\n    getCustomOperation,\r\n    getAvailableOperations,\r\n    getOperationFromAvailable,\r\n    getOperationValue,\r\n    updateConditionByOperation,\r\n    getItems,\r\n    getField,\r\n    getCaptionWithParents,\r\n    getDefaultOperation,\r\n    getGroupValue,\r\n    getCurrentLookupValueText,\r\n    getCurrentValueText\r\n} from \"./utils\";\r\nvar FILTER_BUILDER_CLASS = \"dx-filterbuilder\";\r\nvar FILTER_BUILDER_GROUP_CLASS = FILTER_BUILDER_CLASS + \"-group\";\r\nvar FILTER_BUILDER_GROUP_ITEM_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-item\";\r\nvar FILTER_BUILDER_GROUP_CONTENT_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-content\";\r\nvar FILTER_BUILDER_GROUP_OPERATIONS_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-operations\";\r\nvar FILTER_BUILDER_GROUP_OPERATION_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-operation\";\r\nvar FILTER_BUILDER_ACTION_CLASS = FILTER_BUILDER_CLASS + \"-action\";\r\nvar FILTER_BUILDER_IMAGE_CLASS = FILTER_BUILDER_ACTION_CLASS + \"-icon\";\r\nvar FILTER_BUILDER_IMAGE_ADD_CLASS = \"dx-icon-plus\";\r\nvar FILTER_BUILDER_IMAGE_REMOVE_CLASS = \"dx-icon-remove\";\r\nvar FILTER_BUILDER_ITEM_TEXT_CLASS = FILTER_BUILDER_CLASS + \"-text\";\r\nvar FILTER_BUILDER_ITEM_FIELD_CLASS = FILTER_BUILDER_CLASS + \"-item-field\";\r\nvar FILTER_BUILDER_ITEM_OPERATION_CLASS = FILTER_BUILDER_CLASS + \"-item-operation\";\r\nvar FILTER_BUILDER_ITEM_VALUE_CLASS = FILTER_BUILDER_CLASS + \"-item-value\";\r\nvar FILTER_BUILDER_ITEM_VALUE_TEXT_CLASS = FILTER_BUILDER_CLASS + \"-item-value-text\";\r\nvar FILTER_BUILDER_OVERLAY_CLASS = FILTER_BUILDER_CLASS + \"-overlay\";\r\nvar FILTER_BUILDER_FILTER_OPERATIONS_CLASS = FILTER_BUILDER_CLASS + \"-operations\";\r\nvar FILTER_BUILDER_FIELDS_CLASS = FILTER_BUILDER_CLASS + \"-fields\";\r\nvar FILTER_BUILDER_ADD_CONDITION_CLASS = FILTER_BUILDER_CLASS + \"-add-condition\";\r\nvar ACTIVE_CLASS = \"dx-state-active\";\r\nvar FILTER_BUILDER_MENU_CUSTOM_OPERATION_CLASS = FILTER_BUILDER_CLASS + \"-menu-custom-operation\";\r\nvar SOURCE = \"filterBuilder\";\r\nvar DISABLED_STATE_CLASS = \"dx-state-disabled\";\r\nvar TAB_KEY = \"tab\";\r\nvar ENTER_KEY = \"enter\";\r\nvar ESCAPE_KEY = \"escape\";\r\nvar ACTIONS = [{\r\n    name: \"onEditorPreparing\",\r\n    config: {\r\n        excludeValidators: [\"disabled\", \"readOnly\"],\r\n        category: \"rendering\"\r\n    }\r\n}, {\r\n    name: \"onEditorPrepared\",\r\n    config: {\r\n        excludeValidators: [\"disabled\", \"readOnly\"],\r\n        category: \"rendering\"\r\n    }\r\n}, {\r\n    name: \"onValueChanged\",\r\n    config: {\r\n        excludeValidators: [\"disabled\", \"readOnly\"]\r\n    }\r\n}];\r\nvar OPERATORS = {\r\n    and: \"and\",\r\n    or: \"or\",\r\n    notAnd: \"!and\",\r\n    notOr: \"!or\"\r\n};\r\nvar EditorFactory = Class.inherit(EditorFactoryMixin);\r\nvar FilterBuilder = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            onEditorPreparing: null,\r\n            onEditorPrepared: null,\r\n            onValueChanged: null,\r\n            fields: [],\r\n            groupOperations: [\"and\", \"or\", \"notAnd\", \"notOr\"],\r\n            maxGroupLevel: void 0,\r\n            value: null,\r\n            allowHierarchicalFields: false,\r\n            groupOperationDescriptions: {\r\n                and: messageLocalization.format(\"dxFilterBuilder-and\"),\r\n                or: messageLocalization.format(\"dxFilterBuilder-or\"),\r\n                notAnd: messageLocalization.format(\"dxFilterBuilder-notAnd\"),\r\n                notOr: messageLocalization.format(\"dxFilterBuilder-notOr\")\r\n            },\r\n            customOperations: [],\r\n            closePopupOnTargetScroll: true,\r\n            filterOperationDescriptions: {\r\n                between: messageLocalization.format(\"dxFilterBuilder-filterOperationBetween\"),\r\n                equal: messageLocalization.format(\"dxFilterBuilder-filterOperationEquals\"),\r\n                notEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationNotEquals\"),\r\n                lessThan: messageLocalization.format(\"dxFilterBuilder-filterOperationLess\"),\r\n                lessThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationLessOrEquals\"),\r\n                greaterThan: messageLocalization.format(\"dxFilterBuilder-filterOperationGreater\"),\r\n                greaterThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationGreaterOrEquals\"),\r\n                startsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationStartsWith\"),\r\n                contains: messageLocalization.format(\"dxFilterBuilder-filterOperationContains\"),\r\n                notContains: messageLocalization.format(\"dxFilterBuilder-filterOperationNotContains\"),\r\n                endsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationEndsWith\"),\r\n                isBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsBlank\"),\r\n                isNotBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\r\n            }\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"closePopupOnTargetScroll\":\r\n                break;\r\n            case \"onEditorPreparing\":\r\n            case \"onEditorPrepared\":\r\n            case \"onValueChanged\":\r\n                this._initActions();\r\n                break;\r\n            case \"customOperations\":\r\n                this._initCustomOperations();\r\n                this._invalidate();\r\n                break;\r\n            case \"fields\":\r\n            case \"maxGroupLevel\":\r\n            case \"groupOperations\":\r\n            case \"allowHierarchicalFields\":\r\n            case \"groupOperationDescriptions\":\r\n            case \"filterOperationDescriptions\":\r\n                this._invalidate();\r\n                break;\r\n            case \"value\":\r\n                if (args.value !== args.previousValue) {\r\n                    var disableInvalidateForValue = this._disableInvalidateForValue;\r\n                    if (!disableInvalidateForValue) {\r\n                        this._initModel();\r\n                        this._invalidate()\r\n                    }\r\n                    this._disableInvalidateForValue = false;\r\n                    this.executeAction(\"onValueChanged\", {\r\n                        value: args.value,\r\n                        previousValue: args.previousValue\r\n                    });\r\n                    this._disableInvalidateForValue = disableInvalidateForValue\r\n                }\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    getFilterExpression: function() {\r\n        var fields = this._getNormalizedFields();\r\n        var value = extend(true, [], this._model);\r\n        return _getFilterExpression(getNormalizedFilter(value), fields, this._customOperations, SOURCE)\r\n    },\r\n    _getNormalizedFields: function() {\r\n        return getNormalizedFields(this.option(\"fields\"))\r\n    },\r\n    _updateFilter: function() {\r\n        this._disableInvalidateForValue = true;\r\n        var value = extend(true, [], this._model);\r\n        var normalizedValue = getNormalizedFilter(value);\r\n        var oldValue = getNormalizedFilter(this._getModel(this.option(\"value\")));\r\n        if (JSON.stringify(oldValue) !== JSON.stringify(normalizedValue)) {\r\n            this.option(\"value\", normalizedValue)\r\n        }\r\n        this._disableInvalidateForValue = false;\r\n        this._fireContentReadyAction()\r\n    },\r\n    _init: function() {\r\n        this._initCustomOperations();\r\n        this._initModel();\r\n        this._initEditorFactory();\r\n        this._initActions();\r\n        this.callBase()\r\n    },\r\n    _initEditorFactory: function() {\r\n        this._editorFactory = new EditorFactory\r\n    },\r\n    _initCustomOperations: function() {\r\n        this._customOperations = getMergedOperations(this.option(\"customOperations\"), this.option(\"filterOperationDescriptions.between\"), this)\r\n    },\r\n    _getDefaultGroupOperation: function() {\r\n        var _this$option$, _this$option;\r\n        return null !== (_this$option$ = null === (_this$option = this.option(\"groupOperations\")) || void 0 === _this$option ? void 0 : _this$option[0]) && void 0 !== _this$option$ ? _this$option$ : OPERATORS.and\r\n    },\r\n    _getModel: function(value) {\r\n        return convertToInnerStructure(value, this._customOperations, this._getDefaultGroupOperation())\r\n    },\r\n    _initModel: function() {\r\n        this._model = this._getModel(this.option(\"value\"))\r\n    },\r\n    _initActions: function() {\r\n        var that = this;\r\n        that._actions = {};\r\n        ACTIONS.forEach((function(action) {\r\n            var actionConfig = extend({}, action.config);\r\n            that._actions[action.name] = that._createActionByOption(action.name, actionConfig)\r\n        }))\r\n    },\r\n    executeAction: function(actionName, options) {\r\n        var action = this._actions[actionName];\r\n        return action && action(options)\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(FILTER_BUILDER_CLASS);\r\n        this.callBase();\r\n        this._createGroupElementByCriteria(this._model).appendTo(this.$element())\r\n    },\r\n    _createConditionElement: function(condition, parent) {\r\n        return $(\"<div>\").addClass(FILTER_BUILDER_GROUP_CLASS).append(this._createConditionItem(condition, parent))\r\n    },\r\n    _createGroupElementByCriteria: function(criteria, parent) {\r\n        var groupLevel = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;\r\n        var $group = this._createGroupElement(criteria, parent, groupLevel);\r\n        var $groupContent = $group.find(\".\" + FILTER_BUILDER_GROUP_CONTENT_CLASS);\r\n        var groupCriteria = getGroupCriteria(criteria);\r\n        for (var i = 0; i < groupCriteria.length; i++) {\r\n            var innerCriteria = groupCriteria[i];\r\n            if (isGroup(innerCriteria)) {\r\n                this._createGroupElementByCriteria(innerCriteria, criteria, groupLevel + 1).appendTo($groupContent)\r\n            } else if (isCondition(innerCriteria)) {\r\n                this._createConditionElement(innerCriteria, criteria).appendTo($groupContent)\r\n            }\r\n        }\r\n        return $group\r\n    },\r\n    _createGroupElement: function(criteria, parent, groupLevel) {\r\n        var $groupItem = $(\"<div>\").addClass(FILTER_BUILDER_GROUP_ITEM_CLASS);\r\n        var $groupContent = $(\"<div>\").addClass(FILTER_BUILDER_GROUP_CONTENT_CLASS);\r\n        var $group = $(\"<div>\").addClass(FILTER_BUILDER_GROUP_CLASS).append($groupItem).append($groupContent);\r\n        if (null != parent) {\r\n            this._createRemoveButton(() => {\r\n                removeItem(parent, criteria);\r\n                $group.remove();\r\n                this._updateFilter()\r\n            }).appendTo($groupItem)\r\n        }\r\n        this._createGroupOperationButton(criteria).appendTo($groupItem);\r\n        this._createAddButton(() => {\r\n            var newGroup = createEmptyGroup(this._getDefaultGroupOperation());\r\n            addItem(newGroup, criteria);\r\n            this._createGroupElement(newGroup, criteria, groupLevel + 1).appendTo($groupContent);\r\n            this._updateFilter()\r\n        }, () => {\r\n            var field = this.option(\"fields\")[0];\r\n            var newCondition = createCondition(field, this._customOperations);\r\n            addItem(newCondition, criteria);\r\n            this._createConditionElement(newCondition, criteria).appendTo($groupContent);\r\n            this._updateFilter()\r\n        }, groupLevel).appendTo($groupItem);\r\n        return $group\r\n    },\r\n    _createButton: function(caption) {\r\n        return $(\"<div>\").text(caption)\r\n    },\r\n    _createGroupOperationButton: function(criteria) {\r\n        var groupOperations = this._getGroupOperations(criteria);\r\n        var groupMenuItem = getGroupMenuItem(criteria, groupOperations);\r\n        var caption = groupMenuItem.text;\r\n        var $operationButton = groupOperations && groupOperations.length < 2 ? this._createButton(caption).addClass(DISABLED_STATE_CLASS) : this._createButtonWithMenu({\r\n            caption: caption,\r\n            menu: {\r\n                items: groupOperations,\r\n                displayExpr: \"text\",\r\n                keyExpr: \"value\",\r\n                onItemClick: e => {\r\n                    if (groupMenuItem !== e.itemData) {\r\n                        setGroupValue(criteria, e.itemData.value);\r\n                        $operationButton.text(e.itemData.text);\r\n                        groupMenuItem = e.itemData;\r\n                        this._updateFilter()\r\n                    }\r\n                },\r\n                onContentReady: function(e) {\r\n                    e.component.selectItem(groupMenuItem)\r\n                },\r\n                cssClass: FILTER_BUILDER_GROUP_OPERATIONS_CLASS\r\n            }\r\n        });\r\n        return $operationButton.addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_GROUP_OPERATION_CLASS).attr(\"tabindex\", 0)\r\n    },\r\n    _createButtonWithMenu: function(options) {\r\n        var that = this;\r\n        var removeMenu = function() {\r\n            that.$element().find(\".\" + ACTIVE_CLASS).removeClass(ACTIVE_CLASS);\r\n            that.$element().find(\".dx-overlay .dx-treeview\").remove();\r\n            that.$element().find(\".dx-overlay\").remove()\r\n        };\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var position = rtlEnabled ? \"right\" : \"left\";\r\n        var $button = this._createButton(options.caption);\r\n        extend(options.menu, {\r\n            focusStateEnabled: true,\r\n            selectionMode: \"single\",\r\n            onItemClick: (handler = options.menu.onItemClick, function(e) {\r\n                handler(e);\r\n                if (\"dxclick\" === e.event.type) {\r\n                    removeMenu()\r\n                }\r\n            }),\r\n            onHiding: function(e) {\r\n                $button.removeClass(ACTIVE_CLASS)\r\n            },\r\n            position: {\r\n                my: position + \" top\",\r\n                at: position + \" bottom\",\r\n                offset: \"0 1\",\r\n                of: $button,\r\n                collision: \"flip\"\r\n            },\r\n            animation: null,\r\n            onHidden: function() {\r\n                removeMenu()\r\n            },\r\n            cssClass: FILTER_BUILDER_OVERLAY_CLASS + \" \" + options.menu.cssClass,\r\n            rtlEnabled: rtlEnabled\r\n        });\r\n        var handler;\r\n        options.popup = {\r\n            onShown: function(info) {\r\n                var treeViewElement = $(info.component.content()).find(\".dx-treeview\");\r\n                var treeView = treeViewElement.dxTreeView(\"instance\");\r\n                eventsEngine.on(treeViewElement, \"keyup keydown\", (function(e) {\r\n                    var keyName = normalizeKeyName(e);\r\n                    if (\"keydown\" === e.type && keyName === TAB_KEY || \"keyup\" === e.type && (keyName === ESCAPE_KEY || keyName === ENTER_KEY)) {\r\n                        info.component.hide();\r\n                        eventsEngine.trigger(options.menu.position.of, \"focus\")\r\n                    }\r\n                }));\r\n                treeView.focus();\r\n                treeView.option(\"focusedElement\", null)\r\n            }\r\n        };\r\n        this._subscribeOnClickAndEnterKey($button, (function() {\r\n            removeMenu();\r\n            that._createPopupWithTreeView(options, that.$element());\r\n            $button.addClass(ACTIVE_CLASS)\r\n        }));\r\n        return $button\r\n    },\r\n    _hasValueButton: function(condition) {\r\n        var customOperation = getCustomOperation(this._customOperations, condition[1]);\r\n        return customOperation ? false !== customOperation.hasValue : null !== condition[2]\r\n    },\r\n    _createOperationButtonWithMenu: function(condition, field) {\r\n        var that = this;\r\n        var availableOperations = getAvailableOperations(field, this.option(\"filterOperationDescriptions\"), this._customOperations);\r\n        var currentOperation = getOperationFromAvailable(getOperationValue(condition), availableOperations);\r\n        var $operationButton = this._createButtonWithMenu({\r\n            caption: currentOperation.text,\r\n            menu: {\r\n                items: availableOperations,\r\n                displayExpr: \"text\",\r\n                onItemRendered: function(e) {\r\n                    e.itemData.isCustom && $(e.itemElement).addClass(FILTER_BUILDER_MENU_CUSTOM_OPERATION_CLASS)\r\n                },\r\n                onContentReady: function(e) {\r\n                    e.component.selectItem(currentOperation)\r\n                },\r\n                onItemClick: e => {\r\n                    if (currentOperation !== e.itemData) {\r\n                        currentOperation = e.itemData;\r\n                        updateConditionByOperation(condition, currentOperation.value, that._customOperations);\r\n                        var $valueButton = $operationButton.siblings().filter(\".\" + FILTER_BUILDER_ITEM_VALUE_CLASS);\r\n                        if (that._hasValueButton(condition)) {\r\n                            if (0 !== $valueButton.length) {\r\n                                $valueButton.remove()\r\n                            }\r\n                            that._createValueButton(condition, field).appendTo($operationButton.parent())\r\n                        } else {\r\n                            $valueButton.remove()\r\n                        }\r\n                        $operationButton.html(currentOperation.text);\r\n                        this._updateFilter()\r\n                    }\r\n                },\r\n                cssClass: FILTER_BUILDER_FILTER_OPERATIONS_CLASS\r\n            }\r\n        }).addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_ITEM_OPERATION_CLASS).attr(\"tabindex\", 0);\r\n        return $operationButton\r\n    },\r\n    _createOperationAndValueButtons: function(condition, field, $item) {\r\n        this._createOperationButtonWithMenu(condition, field).appendTo($item);\r\n        if (this._hasValueButton(condition)) {\r\n            this._createValueButton(condition, field).appendTo($item)\r\n        }\r\n    },\r\n    _createFieldButtonWithMenu: function(fields, condition, field) {\r\n        var that = this;\r\n        var allowHierarchicalFields = this.option(\"allowHierarchicalFields\");\r\n        var items = getItems(fields, allowHierarchicalFields);\r\n        var item = getField(field.name || field.dataField, items);\r\n        var getFullCaption = function(item, items) {\r\n            return allowHierarchicalFields ? getCaptionWithParents(item, items) : item.caption\r\n        };\r\n        var $fieldButton = this._createButtonWithMenu({\r\n            caption: getFullCaption(item, items),\r\n            menu: {\r\n                items: items,\r\n                dataStructure: \"plain\",\r\n                keyExpr: \"id\",\r\n                parentId: \"parentId\",\r\n                displayExpr: \"caption\",\r\n                onItemClick: e => {\r\n                    if (item !== e.itemData) {\r\n                        item = e.itemData;\r\n                        condition[0] = item.name || item.dataField;\r\n                        condition[2] = \"object\" === item.dataType ? null : \"\";\r\n                        updateConditionByOperation(condition, getDefaultOperation(item), that._customOperations);\r\n                        $fieldButton.siblings().filter(\".\" + FILTER_BUILDER_ITEM_TEXT_CLASS).remove();\r\n                        that._createOperationAndValueButtons(condition, item, $fieldButton.parent());\r\n                        var caption = getFullCaption(item, e.component.option(\"items\"));\r\n                        $fieldButton.html(caption);\r\n                        this._updateFilter()\r\n                    }\r\n                },\r\n                onContentReady: function(e) {\r\n                    e.component.selectItem(item)\r\n                },\r\n                cssClass: FILTER_BUILDER_FIELDS_CLASS\r\n            }\r\n        }).addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_ITEM_FIELD_CLASS).attr(\"tabindex\", 0);\r\n        return $fieldButton\r\n    },\r\n    _createConditionItem: function(condition, parent) {\r\n        var $item = $(\"<div>\").addClass(FILTER_BUILDER_GROUP_ITEM_CLASS);\r\n        var fields = this._getNormalizedFields();\r\n        var field = getField(condition[0], fields);\r\n        this._createRemoveButton(() => {\r\n            removeItem(parent, condition);\r\n            var isSingleChild = 1 === $item.parent().children().length;\r\n            if (isSingleChild) {\r\n                $item.parent().remove()\r\n            } else {\r\n                $item.remove()\r\n            }\r\n            this._updateFilter()\r\n        }).appendTo($item);\r\n        this._createFieldButtonWithMenu(fields, condition, field).appendTo($item);\r\n        this._createOperationAndValueButtons(condition, field, $item);\r\n        return $item\r\n    },\r\n    _getGroupOperations: function(criteria) {\r\n        var groupOperations = this.option(\"groupOperations\");\r\n        var groupOperationDescriptions = this.option(\"groupOperationDescriptions\");\r\n        if (!groupOperations || !groupOperations.length) {\r\n            groupOperations = [getGroupValue(criteria).replace(\"!\", \"not\")]\r\n        }\r\n        return groupOperations.map(operation => ({\r\n            text: groupOperationDescriptions[operation],\r\n            value: OPERATORS[operation]\r\n        }))\r\n    },\r\n    _createRemoveButton: function(handler) {\r\n        var $removeButton = $(\"<div>\").addClass(FILTER_BUILDER_IMAGE_CLASS).addClass(FILTER_BUILDER_IMAGE_REMOVE_CLASS).addClass(FILTER_BUILDER_ACTION_CLASS).attr(\"tabindex\", 0);\r\n        this._subscribeOnClickAndEnterKey($removeButton, handler);\r\n        return $removeButton\r\n    },\r\n    _createAddButton: function(addGroupHandler, addConditionHandler, groupLevel) {\r\n        var $button;\r\n        var maxGroupLevel = this.option(\"maxGroupLevel\");\r\n        if (isDefined(maxGroupLevel) && groupLevel >= maxGroupLevel) {\r\n            $button = this._createButton();\r\n            this._subscribeOnClickAndEnterKey($button, addConditionHandler)\r\n        } else {\r\n            $button = this._createButtonWithMenu({\r\n                menu: {\r\n                    items: [{\r\n                        caption: messageLocalization.format(\"dxFilterBuilder-addCondition\"),\r\n                        click: addConditionHandler\r\n                    }, {\r\n                        caption: messageLocalization.format(\"dxFilterBuilder-addGroup\"),\r\n                        click: addGroupHandler\r\n                    }],\r\n                    displayExpr: \"caption\",\r\n                    onItemClick: function(e) {\r\n                        e.itemData.click()\r\n                    },\r\n                    cssClass: FILTER_BUILDER_ADD_CONDITION_CLASS\r\n                }\r\n            })\r\n        }\r\n        return $button.addClass(FILTER_BUILDER_IMAGE_CLASS).addClass(FILTER_BUILDER_IMAGE_ADD_CLASS).addClass(FILTER_BUILDER_ACTION_CLASS).attr(\"tabindex\", 0)\r\n    },\r\n    _createValueText: function(item, field, $container) {\r\n        var that = this;\r\n        var $text = $(\"<div>\").html(\"&nbsp;\").addClass(FILTER_BUILDER_ITEM_VALUE_TEXT_CLASS).attr(\"tabindex\", 0).appendTo($container);\r\n        var value = item[2];\r\n        var customOperation = getCustomOperation(that._customOperations, item[1]);\r\n        if (!customOperation && field.lookup) {\r\n            getCurrentLookupValueText(field, value, (function(result) {\r\n                renderValueText($text, result)\r\n            }))\r\n        } else {\r\n            when(getCurrentValueText(field, value, customOperation)).done(result => {\r\n                renderValueText($text, result, customOperation)\r\n            })\r\n        }\r\n        that._subscribeOnClickAndEnterKey($text, (function(e) {\r\n            if (\"keyup\" === e.type) {\r\n                e.stopPropagation()\r\n            }\r\n            that._createValueEditorWithEvents(item, field, $container)\r\n        }));\r\n        return $text\r\n    },\r\n    _updateConditionValue: function(item, value, callback) {\r\n        var areValuesDifferent = item[2] !== value;\r\n        if (areValuesDifferent) {\r\n            item[2] = value\r\n        }\r\n        callback();\r\n        this._updateFilter()\r\n    },\r\n    _addDocumentKeyUp: function($editor, handler) {\r\n        var isComposing = false;\r\n        var hasCompositionJustEnded = false;\r\n        var document = domAdapter.getDocument();\r\n        var documentKeyUpHandler = e => {\r\n            if (isComposing || hasCompositionJustEnded) {\r\n                hasCompositionJustEnded = false;\r\n                return\r\n            }\r\n            handler(e)\r\n        };\r\n        eventsEngine.on(document, \"keyup\", documentKeyUpHandler);\r\n        var input = $editor.find(\"input\");\r\n        eventsEngine.on(input, \"compositionstart\", () => {\r\n            isComposing = true\r\n        });\r\n        eventsEngine.on(input, \"compositionend\", () => {\r\n            isComposing = false;\r\n            hasCompositionJustEnded = true\r\n        });\r\n        eventsEngine.on(input, \"keydown\", event => {\r\n            if (229 !== event.which) {\r\n                hasCompositionJustEnded = false\r\n            }\r\n        });\r\n        this._documentKeyUpHandler = documentKeyUpHandler\r\n    },\r\n    _addDocumentClick: function($editor, closeEditorFunc) {\r\n        var document = domAdapter.getDocument();\r\n        var documentClickHandler = e => {\r\n            if (!this._isFocusOnEditorParts($editor, e.target)) {\r\n                eventsEngine.trigger($editor.find(\"input\"), \"change\");\r\n                closeEditorFunc()\r\n            }\r\n        };\r\n        eventsEngine.on(document, \"dxpointerdown\", documentClickHandler);\r\n        this._documentClickHandler = documentClickHandler\r\n    },\r\n    _isFocusOnEditorParts: function($editor, target) {\r\n        var activeElement = target || domAdapter.getActiveElement();\r\n        return $(activeElement).closest($editor.children()).length || $(activeElement).closest(\".dx-dropdowneditor-overlay\").length\r\n    },\r\n    _removeEvents: function() {\r\n        var document = domAdapter.getDocument();\r\n        isDefined(this._documentKeyUpHandler) && eventsEngine.off(document, \"keyup\", this._documentKeyUpHandler);\r\n        isDefined(this._documentClickHandler) && eventsEngine.off(document, \"dxpointerdown\", this._documentClickHandler)\r\n    },\r\n    _dispose: function() {\r\n        this._removeEvents();\r\n        this.callBase()\r\n    },\r\n    _createValueEditorWithEvents: function(item, field, $container) {\r\n        var value = item[2];\r\n        var createValueText = () => {\r\n            $container.empty();\r\n            this._removeEvents();\r\n            return this._createValueText(item, field, $container)\r\n        };\r\n        var closeEditor = () => {\r\n            this._updateConditionValue(item, value, (function() {\r\n                createValueText()\r\n            }))\r\n        };\r\n        var options = {\r\n            value: \"\" === value ? null : value,\r\n            filterOperation: getOperationValue(item),\r\n            setValue: function(data) {\r\n                value = null === data ? \"\" : data\r\n            },\r\n            closeEditor: closeEditor,\r\n            text: $container.text()\r\n        };\r\n        $container.empty();\r\n        var $editor = this._createValueEditor($container, field, options);\r\n        eventsEngine.trigger($editor.find(\"input\").not(\":hidden\").eq(0), \"focus\");\r\n        this._removeEvents();\r\n        this._addDocumentClick($editor, closeEditor);\r\n        this._addDocumentKeyUp($editor, e => {\r\n            var keyName = normalizeKeyName(e);\r\n            if (keyName === TAB_KEY) {\r\n                if (this._isFocusOnEditorParts($editor)) {\r\n                    return\r\n                }\r\n                this._updateConditionValue(item, value, (function() {\r\n                    createValueText();\r\n                    if (e.shiftKey) {\r\n                        eventsEngine.trigger($container.prev(), \"focus\")\r\n                    }\r\n                }))\r\n            }\r\n            if (keyName === ESCAPE_KEY) {\r\n                eventsEngine.trigger(createValueText(), \"focus\")\r\n            }\r\n            if (keyName === ENTER_KEY) {\r\n                this._updateConditionValue(item, value, (function() {\r\n                    eventsEngine.trigger(createValueText(), \"focus\")\r\n                }))\r\n            }\r\n        });\r\n        this._fireContentReadyAction()\r\n    },\r\n    _createValueButton: function(item, field) {\r\n        var $valueButton = $(\"<div>\").addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_ITEM_VALUE_CLASS);\r\n        this._createValueText(item, field, $valueButton);\r\n        return $valueButton\r\n    },\r\n    _createValueEditor: function($container, field, options) {\r\n        var $editor = $(\"<div>\").attr(\"tabindex\", 0).appendTo($container);\r\n        var customOperation = getCustomOperation(this._customOperations, options.filterOperation);\r\n        var editorTemplate = customOperation && customOperation.editorTemplate ? customOperation.editorTemplate : field.editorTemplate;\r\n        if (editorTemplate) {\r\n            var template = this._getTemplate(editorTemplate);\r\n            template.render({\r\n                model: extend({\r\n                    field: field\r\n                }, options),\r\n                container: $editor\r\n            })\r\n        } else {\r\n            this._editorFactory.createEditor.call(this, $editor, extend({}, field, options, {\r\n                parentType: SOURCE\r\n            }))\r\n        }\r\n        return $editor\r\n    },\r\n    _createPopupWithTreeView: function(options, $container) {\r\n        var that = this;\r\n        var $popup = $(\"<div>\").addClass(options.menu.cssClass).appendTo($container);\r\n        this._createComponent($popup, Popup, {\r\n            wrapperAttr: {\r\n                class: options.menu.cssClass\r\n            },\r\n            onHiding: options.menu.onHiding,\r\n            onHidden: options.menu.onHidden,\r\n            rtlEnabled: options.menu.rtlEnabled,\r\n            position: options.menu.position,\r\n            animation: options.menu.animation,\r\n            contentTemplate: function(contentElement) {\r\n                var $menuContainer = $(\"<div>\").appendTo(contentElement);\r\n                that._createComponent($menuContainer, TreeView, options.menu);\r\n                this.repaint()\r\n            },\r\n            _ignoreFunctionValueDeprecation: true,\r\n            maxHeight: function() {\r\n                return getElementMaxHeightByWindow(options.menu.position.of)\r\n            },\r\n            visible: true,\r\n            focusStateEnabled: false,\r\n            hideOnParentScroll: this.option(\"closePopupOnTargetScroll\"),\r\n            closeOnOutsideClick: true,\r\n            onShown: options.popup.onShown,\r\n            shading: false,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            showTitle: false\r\n        })\r\n    },\r\n    _subscribeOnClickAndEnterKey: function($button, handler) {\r\n        eventsEngine.on($button, \"dxclick\", handler);\r\n        eventsEngine.on($button, \"keyup\", (function(e) {\r\n            if (normalizeKeyName(e) === ENTER_KEY) {\r\n                handler(e)\r\n            }\r\n        }))\r\n    }\r\n});\r\nregisterComponent(\"dxFilterBuilder\", FilterBuilder);\r\nexport default FilterBuilder;\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport FilterBuilder from \"./filter_builder/filter_builder\";\r\nexport default FilterBuilder;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_builder.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport FilterBuilder from \"./../filter_builder\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport ScrollView from \"./../scroll_view\";\r\nimport Popup from \"./../popup\";\r\nimport {\r\n    restoreFocus\r\n} from \"../shared/accessibility\";\r\nvar FilterBuilderView = modules.View.inherit({\r\n    _renderCore: function() {\r\n        this._updatePopupOptions()\r\n    },\r\n    _updatePopupOptions: function() {\r\n        if (this.option(\"filterBuilderPopup.visible\")) {\r\n            this._initPopup()\r\n        } else if (this._filterBuilderPopup) {\r\n            this._filterBuilderPopup.hide()\r\n        }\r\n    },\r\n    _disposePopup: function() {\r\n        if (this._filterBuilderPopup) {\r\n            this._filterBuilderPopup.dispose();\r\n            this._filterBuilderPopup = void 0\r\n        }\r\n        if (this._filterBuilder) {\r\n            this._filterBuilder.dispose();\r\n            this._filterBuilder = void 0\r\n        }\r\n    },\r\n    _initPopup: function() {\r\n        var that = this;\r\n        that._disposePopup();\r\n        that._filterBuilderPopup = that._createComponent(that.element(), Popup, extend({\r\n            title: messageLocalization.format(\"dxDataGrid-filterBuilderPopupTitle\"),\r\n            contentTemplate: function($contentElement) {\r\n                return that._getPopupContentTemplate($contentElement)\r\n            },\r\n            onOptionChanged: function(args) {\r\n                if (\"visible\" === args.name) {\r\n                    that.option(\"filterBuilderPopup.visible\", args.value)\r\n                }\r\n            },\r\n            toolbarItems: that._getPopupToolbarItems()\r\n        }, that.option(\"filterBuilderPopup\"), {\r\n            onHidden: function(e) {\r\n                restoreFocus(that);\r\n                that._disposePopup()\r\n            }\r\n        }))\r\n    },\r\n    _getPopupContentTemplate: function(contentElement) {\r\n        var $contentElement = $(contentElement);\r\n        var $filterBuilderContainer = $(\"<div>\").appendTo($(contentElement));\r\n        this._filterBuilder = this._createComponent($filterBuilderContainer, FilterBuilder, extend({\r\n            value: this.option(\"filterValue\"),\r\n            fields: this.getController(\"columns\").getFilteringColumns()\r\n        }, this.option(\"filterBuilder\"), {\r\n            customOperations: this.getController(\"filterSync\").getCustomFilterOperations()\r\n        }));\r\n        this._createComponent($contentElement, ScrollView, {\r\n            direction: \"both\"\r\n        })\r\n    },\r\n    _getPopupToolbarItems: function() {\r\n        var that = this;\r\n        return [{\r\n            toolbar: \"bottom\",\r\n            location: \"after\",\r\n            widget: \"dxButton\",\r\n            options: {\r\n                text: messageLocalization.format(\"OK\"),\r\n                onClick: function(e) {\r\n                    var filter = that._filterBuilder.option(\"value\");\r\n                    that.option(\"filterValue\", filter);\r\n                    that._filterBuilderPopup.hide()\r\n                }\r\n            }\r\n        }, {\r\n            toolbar: \"bottom\",\r\n            location: \"after\",\r\n            widget: \"dxButton\",\r\n            options: {\r\n                text: messageLocalization.format(\"Cancel\"),\r\n                onClick: function(e) {\r\n                    that._filterBuilderPopup.hide()\r\n                }\r\n            }\r\n        }]\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"filterBuilder\":\r\n            case \"filterBuilderPopup\":\r\n                this._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nexport var filterBuilderModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterBuilder: {\r\n                groupOperationDescriptions: {\r\n                    and: messageLocalization.format(\"dxFilterBuilder-and\"),\r\n                    or: messageLocalization.format(\"dxFilterBuilder-or\"),\r\n                    notAnd: messageLocalization.format(\"dxFilterBuilder-notAnd\"),\r\n                    notOr: messageLocalization.format(\"dxFilterBuilder-notOr\")\r\n                },\r\n                filterOperationDescriptions: {\r\n                    between: messageLocalization.format(\"dxFilterBuilder-filterOperationBetween\"),\r\n                    equal: messageLocalization.format(\"dxFilterBuilder-filterOperationEquals\"),\r\n                    notEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationNotEquals\"),\r\n                    lessThan: messageLocalization.format(\"dxFilterBuilder-filterOperationLess\"),\r\n                    lessThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationLessOrEquals\"),\r\n                    greaterThan: messageLocalization.format(\"dxFilterBuilder-filterOperationGreater\"),\r\n                    greaterThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationGreaterOrEquals\"),\r\n                    startsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationStartsWith\"),\r\n                    contains: messageLocalization.format(\"dxFilterBuilder-filterOperationContains\"),\r\n                    notContains: messageLocalization.format(\"dxFilterBuilder-filterOperationNotContains\"),\r\n                    endsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationEndsWith\"),\r\n                    isBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsBlank\"),\r\n                    isNotBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\r\n                }\r\n            },\r\n            filterBuilderPopup: {}\r\n        }\r\n    },\r\n    views: {\r\n        filterBuilderView: FilterBuilderView\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.filter_builder.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    filterBuilderModule\r\n} from \"../grid_core/ui.grid_core.filter_builder\";\r\ncore.registerModule(\"filterBuilder\", filterBuilderModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_panel.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridUtils from \"./ui.grid_core.utils\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport CheckBox from \"../check_box\";\r\nimport {\r\n    getCurrentLookupValueText,\r\n    getCustomOperation,\r\n    getCurrentValueText,\r\n    getField,\r\n    getCaptionByOperation,\r\n    getGroupValue,\r\n    isCondition,\r\n    isGroup\r\n} from \"../filter_builder/utils\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    captionize\r\n} from \"../../core/utils/inflector\";\r\nimport {\r\n    registerKeyboardAction\r\n} from \"./ui.grid_core.accessibility\";\r\nvar FILTER_PANEL_CLASS = \"filter-panel\";\r\nvar FILTER_PANEL_TEXT_CLASS = FILTER_PANEL_CLASS + \"-text\";\r\nvar FILTER_PANEL_CHECKBOX_CLASS = FILTER_PANEL_CLASS + \"-checkbox\";\r\nvar FILTER_PANEL_CLEAR_FILTER_CLASS = FILTER_PANEL_CLASS + \"-clear-filter\";\r\nvar FILTER_PANEL_LEFT_CONTAINER = FILTER_PANEL_CLASS + \"-left\";\r\nvar FILTER_PANEL_TARGET = \"filterPanel\";\r\nvar FilterPanelView = modules.View.inherit({\r\n    isVisible: function() {\r\n        return this.option(\"filterPanel.visible\") && this.getController(\"data\").dataSource()\r\n    },\r\n    init: function() {\r\n        this.getController(\"data\").dataSourceChanged.add(() => this.render())\r\n    },\r\n    _renderCore: function() {\r\n        var $element = this.element();\r\n        $element.empty().addClass(this.addWidgetPrefix(FILTER_PANEL_CLASS));\r\n        var $leftContainer = $(\"<div>\").addClass(this.addWidgetPrefix(FILTER_PANEL_LEFT_CONTAINER)).appendTo($element);\r\n        if (this.option(\"filterValue\") || this._filterValueBuffer) {\r\n            $leftContainer.append(this._getCheckElement()).append(this._getFilterElement()).append(this._getTextElement());\r\n            $element.append(this._getRemoveButtonElement())\r\n        } else {\r\n            $leftContainer.append(this._getFilterElement()).append(this._getTextElement())\r\n        }\r\n    },\r\n    _getCheckElement: function() {\r\n        var that = this;\r\n        var $element = $(\"<div>\").addClass(this.addWidgetPrefix(FILTER_PANEL_CHECKBOX_CLASS));\r\n        that._createComponent($element, CheckBox, {\r\n            value: that.option(\"filterPanel.filterEnabled\"),\r\n            onValueChanged: function(e) {\r\n                that.option(\"filterPanel.filterEnabled\", e.value)\r\n            }\r\n        });\r\n        $element.attr(\"title\", this.option(\"filterPanel.texts.filterEnabledHint\"));\r\n        return $element\r\n    },\r\n    _getFilterElement: function() {\r\n        var that = this;\r\n        var $element = $(\"<div>\").addClass(\"dx-icon-filter\");\r\n        eventsEngine.on($element, \"click\", () => that._showFilterBuilder());\r\n        registerKeyboardAction(\"filterPanel\", that, $element, void 0, () => that._showFilterBuilder());\r\n        that._addTabIndexToElement($element);\r\n        return $element\r\n    },\r\n    _getTextElement: function() {\r\n        var that = this;\r\n        var $textElement = $(\"<div>\").addClass(that.addWidgetPrefix(FILTER_PANEL_TEXT_CLASS));\r\n        var filterText;\r\n        var filterValue = that.option(\"filterValue\");\r\n        if (filterValue) {\r\n            when(that.getFilterText(filterValue, that.getController(\"filterSync\").getCustomFilterOperations())).done((function(filterText) {\r\n                var customizeText = that.option(\"filterPanel.customizeText\");\r\n                if (customizeText) {\r\n                    var customText = customizeText({\r\n                        component: that.component,\r\n                        filterValue: filterValue,\r\n                        text: filterText\r\n                    });\r\n                    if (\"string\" === typeof customText) {\r\n                        filterText = customText\r\n                    }\r\n                }\r\n                $textElement.text(filterText)\r\n            }))\r\n        } else {\r\n            filterText = that.option(\"filterPanel.texts.createFilter\");\r\n            $textElement.text(filterText)\r\n        }\r\n        eventsEngine.on($textElement, \"click\", () => that._showFilterBuilder());\r\n        registerKeyboardAction(\"filterPanel\", that, $textElement, void 0, () => that._showFilterBuilder());\r\n        that._addTabIndexToElement($textElement);\r\n        return $textElement\r\n    },\r\n    _showFilterBuilder: function() {\r\n        this.option(\"filterBuilderPopup.visible\", true)\r\n    },\r\n    _getRemoveButtonElement: function() {\r\n        var that = this;\r\n        var clearFilterValue = () => that.option(\"filterValue\", null);\r\n        var $element = $(\"<div>\").addClass(that.addWidgetPrefix(FILTER_PANEL_CLEAR_FILTER_CLASS)).text(that.option(\"filterPanel.texts.clearFilter\"));\r\n        eventsEngine.on($element, \"click\", clearFilterValue);\r\n        registerKeyboardAction(\"filterPanel\", this, $element, void 0, clearFilterValue);\r\n        that._addTabIndexToElement($element);\r\n        return $element\r\n    },\r\n    _addTabIndexToElement: function($element) {\r\n        if (!this.option(\"useLegacyKeyboardNavigation\")) {\r\n            var tabindex = this.option(\"tabindex\") || 0;\r\n            $element.attr(\"tabindex\", tabindex)\r\n        }\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"filterValue\":\r\n                this._invalidate();\r\n                this.option(\"filterPanel.filterEnabled\", true);\r\n                args.handled = true;\r\n                break;\r\n            case \"filterPanel\":\r\n                this._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _getConditionText: function(fieldText, operationText, valueText) {\r\n        var result = \"[\".concat(fieldText, \"] \").concat(operationText);\r\n        if (isDefined(valueText)) {\r\n            result += valueText\r\n        }\r\n        return result\r\n    },\r\n    _getValueMaskedText: function(value) {\r\n        return Array.isArray(value) ? \"('\".concat(value.join(\"', '\"), \"')\") : \" '\".concat(value, \"'\")\r\n    },\r\n    _getValueText: function(field, customOperation, value) {\r\n        var deferred = new Deferred;\r\n        var hasCustomOperation = customOperation && customOperation.customizeText;\r\n        if (isDefined(value) || hasCustomOperation) {\r\n            if (!hasCustomOperation && field.lookup) {\r\n                getCurrentLookupValueText(field, value, data => {\r\n                    deferred.resolve(this._getValueMaskedText(data))\r\n                })\r\n            } else {\r\n                var displayValue = Array.isArray(value) ? value : gridUtils.getDisplayValue(field, value);\r\n                when(getCurrentValueText(field, displayValue, customOperation, FILTER_PANEL_TARGET)).done(data => {\r\n                    deferred.resolve(this._getValueMaskedText(data))\r\n                })\r\n            }\r\n        } else {\r\n            deferred.resolve(\"\")\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    getConditionText: function(filterValue, options) {\r\n        var that = this;\r\n        var operation = filterValue[1];\r\n        var deferred = new Deferred;\r\n        var customOperation = getCustomOperation(options.customOperations, operation);\r\n        var operationText;\r\n        var field = getField(filterValue[0], options.columns);\r\n        var fieldText = field.caption || \"\";\r\n        var value = filterValue[2];\r\n        if (customOperation) {\r\n            operationText = customOperation.caption || captionize(customOperation.name)\r\n        } else if (null === value) {\r\n            operationText = getCaptionByOperation(\"=\" === operation ? \"isblank\" : \"isnotblank\", options.filterOperationDescriptions)\r\n        } else {\r\n            operationText = getCaptionByOperation(operation, options.filterOperationDescriptions)\r\n        }\r\n        this._getValueText(field, customOperation, value).done(valueText => {\r\n            deferred.resolve(that._getConditionText(fieldText, operationText, valueText))\r\n        });\r\n        return deferred\r\n    },\r\n    getGroupText: function(filterValue, options, isInnerGroup) {\r\n        var that = this;\r\n        var result = new Deferred;\r\n        var textParts = [];\r\n        var groupValue = getGroupValue(filterValue);\r\n        filterValue.forEach(item => {\r\n            if (isCondition(item)) {\r\n                textParts.push(that.getConditionText(item, options))\r\n            } else if (isGroup(item)) {\r\n                textParts.push(that.getGroupText(item, options, true))\r\n            }\r\n        });\r\n        when.apply(this, textParts).done((function() {\r\n            var text;\r\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n                args[_key] = arguments[_key]\r\n            }\r\n            if (\"!\" === groupValue[0]) {\r\n                var groupText = options.groupOperationDescriptions[\"not\" + groupValue.substring(1, 2).toUpperCase() + groupValue.substring(2)].split(\" \");\r\n                text = \"\".concat(groupText[0], \" \").concat(args[0])\r\n            } else {\r\n                text = args.join(\" \".concat(options.groupOperationDescriptions[groupValue], \" \"))\r\n            }\r\n            if (isInnerGroup) {\r\n                text = \"(\".concat(text, \")\")\r\n            }\r\n            result.resolve(text)\r\n        }));\r\n        return result\r\n    },\r\n    getFilterText: function(filterValue, customOperations) {\r\n        var options = {\r\n            customOperations: customOperations,\r\n            columns: this.getController(\"columns\").getFilteringColumns(),\r\n            filterOperationDescriptions: this.option(\"filterBuilder.filterOperationDescriptions\"),\r\n            groupOperationDescriptions: this.option(\"filterBuilder.groupOperationDescriptions\")\r\n        };\r\n        return isCondition(filterValue) ? this.getConditionText(filterValue, options) : this.getGroupText(filterValue, options)\r\n    }\r\n});\r\nexport var filterPanelModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterPanel: {\r\n                visible: false,\r\n                filterEnabled: true,\r\n                texts: {\r\n                    createFilter: messageLocalization.format(\"dxDataGrid-filterPanelCreateFilter\"),\r\n                    clearFilter: messageLocalization.format(\"dxDataGrid-filterPanelClearFilter\"),\r\n                    filterEnabledHint: messageLocalization.format(\"dxDataGrid-filterPanelFilterEnabledHint\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    views: {\r\n        filterPanelView: FilterPanelView\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                optionChanged: function(args) {\r\n                    switch (args.name) {\r\n                        case \"filterPanel\":\r\n                            this._applyFilter();\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.filter_panel.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    filterPanelModule\r\n} from \"../grid_core/ui.grid_core.filter_panel\";\r\ncore.registerModule(\"filterPanel\", filterPanelModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.search.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport dataQuery from \"../../data/query\";\r\nvar SEARCH_PANEL_CLASS = \"search-panel\";\r\nvar SEARCH_TEXT_CLASS = \"search-text\";\r\nvar HEADER_PANEL_CLASS = \"header-panel\";\r\nvar FILTERING_TIMEOUT = 700;\r\n\r\nfunction allowSearch(column) {\r\n    return isDefined(column.allowSearch) ? column.allowSearch : column.allowFiltering\r\n}\r\n\r\nfunction parseValue(column, text) {\r\n    var lookup = column.lookup;\r\n    if (!column.parseValue) {\r\n        return text\r\n    }\r\n    if (lookup) {\r\n        return column.parseValue.call(lookup, text)\r\n    }\r\n    return column.parseValue(text)\r\n}\r\nexport var searchModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            searchPanel: {\r\n                visible: false,\r\n                width: 160,\r\n                placeholder: messageLocalization.format(\"dxDataGrid-searchPanelPlaceholder\"),\r\n                highlightSearchText: true,\r\n                highlightCaseSensitive: false,\r\n                text: \"\",\r\n                searchVisibleColumnsOnly: false\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                publicMethods: function() {\r\n                    return this.callBase().concat([\"searchByText\"])\r\n                },\r\n                _calculateAdditionalFilter: function() {\r\n                    var filter = this.callBase();\r\n                    var searchFilter = function(that, text) {\r\n                        var i;\r\n                        var column;\r\n                        var columns = that._columnsController.getColumns();\r\n                        var searchVisibleColumnsOnly = that.option(\"searchPanel.searchVisibleColumnsOnly\");\r\n                        var lookup;\r\n                        var filters = [];\r\n                        if (!text) {\r\n                            return null\r\n                        }\r\n\r\n                        function onQueryDone(items) {\r\n                            var valueGetter = compileGetter(lookup.valueExpr);\r\n                            for (var _i = 0; _i < items.length; _i++) {\r\n                                var value = valueGetter(items[_i]);\r\n                                filters.push(column.createFilterExpression(value, null, \"search\"))\r\n                            }\r\n                        }\r\n                        for (i = 0; i < columns.length; i++) {\r\n                            column = columns[i];\r\n                            if (searchVisibleColumnsOnly && !column.visible) {\r\n                                continue\r\n                            }\r\n                            if (allowSearch(column) && column.calculateFilterExpression) {\r\n                                lookup = column.lookup;\r\n                                var filterValue = parseValue(column, text);\r\n                                if (lookup && lookup.items) {\r\n                                    dataQuery(lookup.items).filter(column.createFilterExpression.call({\r\n                                        dataField: lookup.displayExpr,\r\n                                        dataType: lookup.dataType,\r\n                                        calculateFilterExpression: column.calculateFilterExpression\r\n                                    }, filterValue, null, \"search\")).enumerate().done(onQueryDone)\r\n                                } else if (void 0 !== filterValue) {\r\n                                    filters.push(column.createFilterExpression(filterValue, null, \"search\"))\r\n                                }\r\n                            }\r\n                        }\r\n                        if (0 === filters.length) {\r\n                            return [\"!\"]\r\n                        }\r\n                        return gridCoreUtils.combineFilters(filters, \"or\")\r\n                    }(this, this.option(\"searchPanel.text\"));\r\n                    return gridCoreUtils.combineFilters([filter, searchFilter])\r\n                },\r\n                searchByText: function(text) {\r\n                    this.option(\"searchPanel.text\", text)\r\n                },\r\n                optionChanged: function(args) {\r\n                    switch (args.fullName) {\r\n                        case \"searchPanel.text\":\r\n                        case \"searchPanel\":\r\n                            this._applyFilter();\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            headerPanel: function() {\r\n                var getSearchPanelOptions = function(that) {\r\n                    return that.option(\"searchPanel\")\r\n                };\r\n                return {\r\n                    _getToolbarItems: function() {\r\n                        var items = this.callBase();\r\n                        return this._prepareSearchItem(items)\r\n                    },\r\n                    _prepareSearchItem: function(items) {\r\n                        var that = this;\r\n                        var dataController = that.getController(\"data\");\r\n                        var searchPanelOptions = getSearchPanelOptions(that);\r\n                        if (searchPanelOptions && searchPanelOptions.visible) {\r\n                            var toolbarItem = {\r\n                                template: function(data, index, container) {\r\n                                    var $search = $(\"<div>\").addClass(that.addWidgetPrefix(SEARCH_PANEL_CLASS)).appendTo(container);\r\n                                    that.getController(\"editorFactory\").createEditor($search, {\r\n                                        width: searchPanelOptions.width,\r\n                                        placeholder: searchPanelOptions.placeholder,\r\n                                        parentType: \"searchPanel\",\r\n                                        value: that.option(\"searchPanel.text\"),\r\n                                        updateValueTimeout: FILTERING_TIMEOUT,\r\n                                        setValue: function(value) {\r\n                                            dataController.searchByText(value)\r\n                                        },\r\n                                        editorOptions: {\r\n                                            inputAttr: {\r\n                                                \"aria-label\": messageLocalization.format(\"\".concat(that.component.NAME, \"-ariaSearchInGrid\"))\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                    that.resize()\r\n                                },\r\n                                name: \"searchPanel\",\r\n                                location: \"after\",\r\n                                locateInMenu: \"never\",\r\n                                sortIndex: 40\r\n                            };\r\n                            items.push(toolbarItem)\r\n                        }\r\n                        return items\r\n                    },\r\n                    getSearchTextEditor: function() {\r\n                        var that = this;\r\n                        var $element = that.element();\r\n                        var $searchPanel = $element.find(\".\" + that.addWidgetPrefix(SEARCH_PANEL_CLASS)).filter((function() {\r\n                            return $(this).closest(\".\" + that.addWidgetPrefix(HEADER_PANEL_CLASS)).is($element)\r\n                        }));\r\n                        if ($searchPanel.length) {\r\n                            return $searchPanel.dxTextBox(\"instance\")\r\n                        }\r\n                        return null\r\n                    },\r\n                    isVisible: function() {\r\n                        var searchPanelOptions = getSearchPanelOptions(this);\r\n                        return this.callBase() || searchPanelOptions && searchPanelOptions.visible\r\n                    },\r\n                    optionChanged: function(args) {\r\n                        if (\"searchPanel\" === args.name) {\r\n                            if (\"searchPanel.text\" === args.fullName) {\r\n                                var editor = this.getSearchTextEditor();\r\n                                if (editor) {\r\n                                    editor.option(\"value\", args.value)\r\n                                }\r\n                            } else {\r\n                                this._invalidate()\r\n                            }\r\n                            args.handled = true\r\n                        } else {\r\n                            this.callBase(args)\r\n                        }\r\n                    }\r\n                }\r\n            }(),\r\n            rowsView: {\r\n                init: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._searchParams = []\r\n                },\r\n                _getFormattedSearchText: function(column, searchText) {\r\n                    var value = parseValue(column, searchText);\r\n                    var formatOptions = gridCoreUtils.getFormatOptionsByColumn(column, \"search\");\r\n                    return gridCoreUtils.formatValue(value, formatOptions)\r\n                },\r\n                _getStringNormalizer: function() {\r\n                    var isCaseSensitive = this.option(\"searchPanel.highlightCaseSensitive\");\r\n                    return function(str) {\r\n                        return isCaseSensitive ? str : str.toLowerCase()\r\n                    }\r\n                },\r\n                _findHighlightingTextNodes: function(column, cellElement, searchText) {\r\n                    var _$items;\r\n                    var $parent = cellElement.parent();\r\n                    var $items;\r\n                    var stringNormalizer = this._getStringNormalizer();\r\n                    var normalizedSearchText = stringNormalizer(searchText);\r\n                    var resultTextNodes = [];\r\n                    if (!$parent.length) {\r\n                        $parent = $(\"<div>\").append(cellElement)\r\n                    } else if (column) {\r\n                        if (column.groupIndex >= 0 && !column.showWhenGrouped) {\r\n                            $items = cellElement\r\n                        } else {\r\n                            var columnIndex = this._columnsController.getVisibleIndex(column.index);\r\n                            $items = $parent.children(\"td\").eq(columnIndex).find(\"*\")\r\n                        }\r\n                    }\r\n                    $items = null !== (_$items = $items) && void 0 !== _$items && _$items.length ? $items : $parent.find(\"*\");\r\n                    $items.each((function(_, element) {\r\n                        var $contents = $(element).contents();\r\n                        for (var i = 0; i < $contents.length; i++) {\r\n                            var node = $contents.get(i);\r\n                            if (3 === node.nodeType) {\r\n                                var normalizedText = stringNormalizer(node.textContent || node.nodeValue);\r\n                                if (normalizedText.indexOf(normalizedSearchText) > -1) {\r\n                                    resultTextNodes.push(node)\r\n                                }\r\n                            }\r\n                        }\r\n                    }));\r\n                    return resultTextNodes\r\n                },\r\n                _highlightSearchTextCore: function($textNode, searchText) {\r\n                    var $searchTextSpan = $(\"<span>\").addClass(this.addWidgetPrefix(SEARCH_TEXT_CLASS));\r\n                    var text = $textNode.text();\r\n                    var firstContentElement = $textNode[0];\r\n                    var stringNormalizer = this._getStringNormalizer();\r\n                    var index = stringNormalizer(text).indexOf(stringNormalizer(searchText));\r\n                    if (index >= 0) {\r\n                        if (firstContentElement.textContent) {\r\n                            firstContentElement.textContent = text.substr(0, index)\r\n                        } else {\r\n                            firstContentElement.nodeValue = text.substr(0, index)\r\n                        }\r\n                        $textNode.after($searchTextSpan.text(text.substr(index, searchText.length)));\r\n                        $textNode = $(domAdapter.createTextNode(text.substr(index + searchText.length))).insertAfter($searchTextSpan);\r\n                        return this._highlightSearchTextCore($textNode, searchText)\r\n                    }\r\n                },\r\n                _highlightSearchText: function(cellElement, isEquals, column) {\r\n                    var that = this;\r\n                    var stringNormalizer = this._getStringNormalizer();\r\n                    var searchText = that.option(\"searchPanel.text\");\r\n                    if (isEquals && column) {\r\n                        searchText = searchText && that._getFormattedSearchText(column, searchText)\r\n                    }\r\n                    if (searchText && that.option(\"searchPanel.highlightSearchText\")) {\r\n                        var textNodes = that._findHighlightingTextNodes(column, cellElement, searchText);\r\n                        textNodes.forEach(textNode => {\r\n                            if (isEquals) {\r\n                                if (stringNormalizer($(textNode).text()) === stringNormalizer(searchText)) {\r\n                                    $(textNode).replaceWith($(\"<span>\").addClass(that.addWidgetPrefix(SEARCH_TEXT_CLASS)).text($(textNode).text()))\r\n                                }\r\n                            } else {\r\n                                that._highlightSearchTextCore($(textNode), searchText)\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                _renderCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.option().rowTemplate || this.option(\"dataRowTemplate\")) {\r\n                        if (this.option(\"templatesRenderAsynchronously\")) {\r\n                            clearTimeout(this._highlightTimer);\r\n                            this._highlightTimer = setTimeout(function() {\r\n                                this._highlightSearchText(this.getTableElement())\r\n                            }.bind(this))\r\n                        } else {\r\n                            this._highlightSearchText(this.getTableElement())\r\n                        }\r\n                    }\r\n                },\r\n                _updateCell: function($cell, parameters) {\r\n                    var column = parameters.column;\r\n                    var dataType = column.lookup && column.lookup.dataType || column.dataType;\r\n                    var isEquals = \"string\" !== dataType;\r\n                    if (allowSearch(column) && !parameters.isOnForm) {\r\n                        if (this.option(\"templatesRenderAsynchronously\")) {\r\n                            if (!this._searchParams.length) {\r\n                                clearTimeout(this._highlightTimer);\r\n                                this._highlightTimer = setTimeout(function() {\r\n                                    this._searchParams.forEach(function(params) {\r\n                                        this._highlightSearchText.apply(this, params)\r\n                                    }.bind(this));\r\n                                    this._searchParams = []\r\n                                }.bind(this))\r\n                            }\r\n                            this._searchParams.push([$cell, isEquals, column])\r\n                        } else {\r\n                            this._highlightSearchText($cell, isEquals, column)\r\n                        }\r\n                    }\r\n                    this.callBase($cell, parameters)\r\n                },\r\n                dispose: function() {\r\n                    clearTimeout(this._highlightTimer);\r\n                    this.callBase()\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.search.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    searchModule\r\n} from \"../grid_core/ui.grid_core.search\";\r\ngridCore.registerModule(\"search\", searchModule);\r\n","/**\r\n * DevExtreme (esm/renovation/component_wrapper/grid_pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Component from \"./common/component\";\r\nexport class GridPagerWrapper extends Component {\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"pageIndex\":\r\n                var pageIndexChanged = this.option(\"pageIndexChanged\");\r\n                if (pageIndexChanged) {\r\n                    pageIndexChanged(args.value)\r\n                }\r\n                break;\r\n            case \"pageSize\":\r\n                var pageSizeChanged = this.option(\"pageSizeChanged\");\r\n                if (pageSizeChanged) {\r\n                    pageSizeChanged(args.value)\r\n                }\r\n        }\r\n        super._optionChanged(args)\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (esm/renovation/utils/type_conversion.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport function toNumber(attribute) {\r\n    return attribute ? Number(attribute.replace(\"px\", \"\")) : 0\r\n}\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/utils/get_element_width.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport getElementComputedStyle from \"../../../utils/get_computed_style\";\r\nimport {\r\n    toNumber\r\n} from \"../../../utils/type_conversion\";\r\nexport function getElementStyle(name, element) {\r\n    var _getElementComputedSt;\r\n    var computedStyle = null !== (_getElementComputedSt = getElementComputedStyle(element)) && void 0 !== _getElementComputedSt ? _getElementComputedSt : {};\r\n    return toNumber(computedStyle[name])\r\n}\r\nexport function getElementWidth(element) {\r\n    return getElementStyle(\"width\", element)\r\n}\r\nexport function getElementMinWidth(element) {\r\n    return getElementStyle(\"minWidth\", element)\r\n}\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/resizable_container.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"contentTemplate\", \"pagerProps\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport resizeCallbacks from \"../../../core/utils/resize_callbacks\";\r\nimport {\r\n    getElementWidth,\r\n    getElementStyle\r\n} from \"./utils/get_element_width\";\r\nimport {\r\n    isDefined\r\n} from \"../../../core/utils/type\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        contentAttributes: contentAttributes,\r\n        infoTextRef: infoTextRef,\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode,\r\n        pageSizesRef: pageSizesRef,\r\n        pagesRef: pagesRef,\r\n        parentRef: parentRef,\r\n        props: {\r\n            contentTemplate: Content\r\n        }\r\n    } = _ref;\r\n    return Content(_extends({\r\n        rootElementRef: parentRef,\r\n        pageSizesRef: pageSizesRef,\r\n        infoTextRef: infoTextRef,\r\n        pagesRef: pagesRef,\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode\r\n    }, contentAttributes))\r\n};\r\nexport function calculateAdaptivityProps(_ref2) {\r\n    var {\r\n        info: infoWidth,\r\n        pageSizes: pageSizesWidth,\r\n        pages: pagesWidth,\r\n        parent: parentWidth\r\n    } = _ref2;\r\n    var minimalWidth = pageSizesWidth + pagesWidth + infoWidth;\r\n    var infoTextVisible = parentWidth - minimalWidth > 0;\r\n    var isLargeDisplayMode = parentWidth - (pageSizesWidth + pagesWidth) > 0;\r\n    return {\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode\r\n    }\r\n}\r\n\r\nfunction getElementsWidth(_ref3) {\r\n    var {\r\n        info: info,\r\n        pageSizes: pageSizes,\r\n        pages: pages,\r\n        parent: parent\r\n    } = _ref3;\r\n    var parentWidth = getElementWidth(parent);\r\n    var pageSizesWidth = getElementWidth(pageSizes);\r\n    var infoWidth = getElementWidth(info);\r\n    var pagesHtmlWidth = getElementWidth(pages);\r\n    return {\r\n        parent: parentWidth,\r\n        pageSizes: pageSizesWidth,\r\n        info: infoWidth + getElementStyle(\"marginLeft\", info) + getElementStyle(\"marginRight\", info),\r\n        pages: pagesHtmlWidth\r\n    }\r\n}\r\nexport var ResizableContainerProps = {};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\r\nexport class ResizableContainer extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.parentRef = infernoCreateRef();\r\n        this.pageSizesRef = infernoCreateRef();\r\n        this.infoTextRef = infernoCreateRef();\r\n        this.pagesRef = infernoCreateRef();\r\n        this.state = {\r\n            infoTextVisible: true,\r\n            isLargeDisplayMode: true\r\n        };\r\n        this.subscribeToResize = this.subscribeToResize.bind(this);\r\n        this.effectUpdateChildProps = this.effectUpdateChildProps.bind(this);\r\n        this.updateAdaptivityProps = this.updateAdaptivityProps.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.subscribeToResize, [this.state.infoTextVisible, this.state.isLargeDisplayMode]), new InfernoEffect(this.effectUpdateChildProps, [this.props, this.state.infoTextVisible, this.state.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$, _this$_effects$2;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.state.infoTextVisible, this.state.isLargeDisplayMode]);\r\n        null === (_this$_effects$2 = this._effects[1]) || void 0 === _this$_effects$2 ? void 0 : _this$_effects$2.update([this.props, this.state.infoTextVisible, this.state.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate])\r\n    }\r\n    subscribeToResize() {\r\n        var callback = () => {\r\n            this.parentWidth > 0 && this.updateAdaptivityProps()\r\n        };\r\n        resizeCallbacks.add(callback);\r\n        return () => {\r\n            resizeCallbacks.remove(callback)\r\n        }\r\n    }\r\n    effectUpdateChildProps() {\r\n        if (this.parentWidth > 0) {\r\n            this.updateAdaptivityProps()\r\n        }\r\n    }\r\n    get contentAttributes() {\r\n        var {\r\n            className: className,\r\n            displayMode: displayMode,\r\n            gridCompatibility: gridCompatibility,\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            infoText: infoText,\r\n            lightModeEnabled: lightModeEnabled,\r\n            maxPagesCount: maxPagesCount,\r\n            onKeyDown: onKeyDown,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes,\r\n            pagesCountText: pagesCountText,\r\n            pagesNavigatorVisible: pagesNavigatorVisible,\r\n            rtlEnabled: rtlEnabled,\r\n            showInfo: showInfo,\r\n            showNavigationButtons: showNavigationButtons,\r\n            showPageSizes: showPageSizes,\r\n            totalCount: totalCount,\r\n            visible: visible\r\n        } = this.props.pagerProps;\r\n        return _extends({}, this.restAttributes, {\r\n            pageSize: pageSize,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pageSizeChange: pageSizeChange,\r\n            gridCompatibility: gridCompatibility,\r\n            className: className,\r\n            showInfo: showInfo,\r\n            infoText: infoText,\r\n            lightModeEnabled: lightModeEnabled,\r\n            displayMode: displayMode,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pagesCountText: pagesCountText,\r\n            visible: visible,\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            pagesNavigatorVisible: pagesNavigatorVisible,\r\n            showPageSizes: showPageSizes,\r\n            pageSizes: pageSizes,\r\n            rtlEnabled: rtlEnabled,\r\n            showNavigationButtons: showNavigationButtons,\r\n            totalCount: totalCount,\r\n            onKeyDown: onKeyDown\r\n        })\r\n    }\r\n    get parentWidth() {\r\n        return this.parentRef.current ? getElementWidth(this.parentRef.current) : 0\r\n    }\r\n    updateAdaptivityProps() {\r\n        var currentElementsWidth = getElementsWidth({\r\n            parent: this.parentRef.current,\r\n            pageSizes: this.pageSizesRef.current,\r\n            info: this.infoTextRef.current,\r\n            pages: this.pagesRef.current\r\n        });\r\n        if (isDefined(this.actualAdaptivityProps) && (this.actualAdaptivityProps.infoTextVisible !== this.state.infoTextVisible || this.actualAdaptivityProps.isLargeDisplayMode !== this.state.isLargeDisplayMode)) {\r\n            return\r\n        }\r\n        var isEmpty = !isDefined(this.elementsWidth);\r\n        if (isEmpty) {\r\n            this.elementsWidth = {}\r\n        }\r\n        if (isEmpty || this.state.isLargeDisplayMode) {\r\n            this.elementsWidth.pageSizes = currentElementsWidth.pageSizes;\r\n            this.elementsWidth.pages = currentElementsWidth.pages\r\n        }\r\n        if (isEmpty || this.state.infoTextVisible) {\r\n            this.elementsWidth.info = currentElementsWidth.info\r\n        }\r\n        this.actualAdaptivityProps = calculateAdaptivityProps(_extends({\r\n            parent: currentElementsWidth.parent\r\n        }, this.elementsWidth));\r\n        this.setState(__state_argument => ({\r\n            infoTextVisible: this.actualAdaptivityProps.infoTextVisible\r\n        }));\r\n        this.setState(__state_argument => ({\r\n            isLargeDisplayMode: this.actualAdaptivityProps.isLargeDisplayMode\r\n        }))\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                contentTemplate: getTemplate(props.contentTemplate)\r\n            }),\r\n            infoTextVisible: this.state.infoTextVisible,\r\n            isLargeDisplayMode: this.state.isLargeDisplayMode,\r\n            parentRef: this.parentRef,\r\n            pageSizesRef: this.pageSizesRef,\r\n            infoTextRef: this.infoTextRef,\r\n            pagesRef: this.pagesRef,\r\n            contentAttributes: this.contentAttributes,\r\n            parentWidth: this.parentWidth,\r\n            updateAdaptivityProps: this.updateAdaptivityProps,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nResizableContainer.defaultProps = ResizableContainerProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/base_pager_props.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport var BasePagerProps = {\r\n    gridCompatibility: true,\r\n    showInfo: false,\r\n    displayMode: \"adaptive\",\r\n    maxPagesCount: 10,\r\n    pageCount: 10,\r\n    visible: true,\r\n    hasKnownLastPage: true,\r\n    pagesNavigatorVisible: \"auto\",\r\n    showPageSizes: true,\r\n    get pageSizes() {\r\n        return [5, 10]\r\n    },\r\n    showNavigationButtons: false,\r\n    totalCount: 0\r\n};\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/pager_props.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    BasePagerProps\r\n} from \"./base_pager_props\";\r\nexport var PagerProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(BasePagerProps), Object.getOwnPropertyDescriptors({\r\n    defaultPageSize: 5,\r\n    pageSizeChange: () => {},\r\n    defaultPageIndex: 1,\r\n    pageIndexChange: () => {}\r\n})));\r\nexport var InternalPagerProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(BasePagerProps), Object.getOwnPropertyDescriptors({\r\n    pageSize: 5,\r\n    pageIndex: 1\r\n})));\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/info.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"infoText\", \"pageCount\", \"pageIndex\", \"rootElementRef\", \"totalCount\"];\r\nimport {\r\n    createVNode\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    format\r\n} from \"../../../core/utils/string\";\r\nimport messageLocalization from \"../../../localization/message\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"./common/pager_props\";\r\nexport var PAGER_INFO_CLASS = \"dx-info\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: {\r\n            rootElementRef: rootElementRef\r\n        },\r\n        text: text\r\n    } = _ref;\r\n    return createVNode(1, \"div\", PAGER_INFO_CLASS, text, 0, null, null, rootElementRef)\r\n};\r\nexport var InfoTextProps = {};\r\nvar InfoTextPropsType = {\r\n    get pageIndex() {\r\n        return InternalPagerProps.pageIndex\r\n    },\r\n    get pageCount() {\r\n        return InternalPagerProps.pageCount\r\n    },\r\n    get totalCount() {\r\n        return InternalPagerProps.totalCount\r\n    }\r\n};\r\nexport class InfoText extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    get infoText() {\r\n        var _this$props$infoText;\r\n        return (null !== (_this$props$infoText = this.props.infoText) && void 0 !== _this$props$infoText ? _this$props$infoText : \"\") || messageLocalization.getFormatter(\"dxPager-infoText\")()\r\n    }\r\n    get text() {\r\n        var {\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            totalCount: totalCount\r\n        } = this.props;\r\n        return format(this.infoText, (pageIndex + 1).toString(), pageCount.toString(), totalCount.toString())\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            infoText: this.infoText,\r\n            text: this.text,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nInfoText.defaultProps = InfoTextPropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/keyboard_action_context.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    createContext\r\n} from \"@devextreme/runtime/inferno\";\r\nexport var KeyboardActionContext = createContext(void 0);\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/light_button.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"children\", \"className\", \"label\", \"onClick\"];\r\nimport {\r\n    createVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    subscribeToClickEvent\r\n} from \"../../../utils/subscribe_to_event\";\r\nimport {\r\n    KeyboardActionContext\r\n} from \"./keyboard_action_context\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: {\r\n            children: children,\r\n            className: className,\r\n            label: label\r\n        },\r\n        widgetRef: widgetRef\r\n    } = _ref;\r\n    return createVNode(1, \"div\", className, children, 0, {\r\n        tabIndex: 0,\r\n        role: \"button\",\r\n        \"aria-label\": label\r\n    }, null, widgetRef)\r\n};\r\nexport var LightButtonProps = {\r\n    className: \"\",\r\n    label: \"\"\r\n};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class LightButton extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.widgetRef = infernoCreateRef();\r\n        this.keyboardEffect = this.keyboardEffect.bind(this);\r\n        this.subscribeToClick = this.subscribeToClick.bind(this)\r\n    }\r\n    get keyboardContext() {\r\n        if (\"KeyboardActionContext\" in this.context) {\r\n            return this.context.KeyboardActionContext\r\n        }\r\n        return KeyboardActionContext\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.keyboardEffect, [this.keyboardContext, this.props.onClick]), new InfernoEffect(this.subscribeToClick, [this.props.onClick])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$, _this$_effects$2;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.keyboardContext, this.props.onClick]);\r\n        null === (_this$_effects$2 = this._effects[1]) || void 0 === _this$_effects$2 ? void 0 : _this$_effects$2.update([this.props.onClick])\r\n    }\r\n    keyboardEffect() {\r\n        return this.keyboardContext.registerKeyboardAction(this.widgetRef.current, this.props.onClick)\r\n    }\r\n    subscribeToClick() {\r\n        return subscribeToClickEvent(this.widgetRef.current, this.props.onClick)\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            widgetRef: this.widgetRef,\r\n            keyboardContext: this.keyboardContext,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nLightButton.defaultProps = LightButtonProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/consts.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport var PAGER_CLASS = \"dx-pager\";\r\nexport var LIGHT_MODE_CLASS = \"dx-light-mode\";\r\nexport var PAGER_PAGES_CLASS = \"dx-pages\";\r\nexport var PAGER_PAGE_INDEXES_CLASS = \"dx-page-indexes\";\r\nexport var PAGER_PAGE_CLASS = \"dx-page\";\r\nexport var PAGER_SELECTION_CLASS = \"dx-selection\";\r\nexport var PAGER_PAGE_SIZE_CLASS = \"dx-page-size\";\r\nexport var PAGER_PAGE_SIZES_CLASS = \"dx-page-sizes\";\r\nexport var PAGER_SELECTED_PAGE_SIZE_CLASS = \"\".concat(PAGER_PAGE_SIZE_CLASS, \" \").concat(PAGER_SELECTION_CLASS);\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/page.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"className\", \"index\", \"onClick\", \"selected\"];\r\nimport {\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    LightButton\r\n} from \"../common/light_button\";\r\nimport {\r\n    PAGER_PAGE_CLASS,\r\n    PAGER_SELECTION_CLASS\r\n} from \"../common/consts\";\r\nimport {\r\n    combineClasses\r\n} from \"../../../utils/combine_classes\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        className: className,\r\n        label: label,\r\n        props: {\r\n            onClick: onClick\r\n        },\r\n        value: value\r\n    } = _ref;\r\n    return createComponentVNode(2, LightButton, {\r\n        className: className,\r\n        label: label,\r\n        onClick: onClick,\r\n        children: value\r\n    })\r\n};\r\nexport var PageProps = {\r\n    index: 0,\r\n    selected: false,\r\n    className: PAGER_PAGE_CLASS\r\n};\r\nexport class Page extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    get label() {\r\n        return \"Page \".concat(this.value)\r\n    }\r\n    get value() {\r\n        return this.props.index + 1\r\n    }\r\n    get className() {\r\n        var {\r\n            selected: selected\r\n        } = this.props;\r\n        return combineClasses({\r\n            [\"\".concat(this.props.className)]: !!this.props.className,\r\n            [PAGER_SELECTION_CLASS]: !!selected\r\n        })\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            label: this.label,\r\n            value: this.value,\r\n            className: this.className,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPage.defaultProps = PageProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/large.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"pageIndexes\"],\r\n    _excluded2 = [\"maxPagesCount\", \"pageCount\", \"pageIndex\", \"pageIndexChange\"];\r\nimport {\r\n    createVNode,\r\n    createFragment,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    Page\r\n} from \"./page\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nimport {\r\n    ConfigContext\r\n} from \"../../../common/config_context\";\r\nvar PAGER_PAGE_SEPARATOR_CLASS = \"dx-separator\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        pages: pages\r\n    } = _ref;\r\n    var PagesMarkup = pages.map(_ref2 => {\r\n        var {\r\n            key: key,\r\n            pageProps: pageProps\r\n        } = _ref2;\r\n        return pageProps ? createComponentVNode(2, Page, {\r\n            index: pageProps.index,\r\n            selected: pageProps.selected,\r\n            onClick: pageProps.onClick\r\n        }, key) : createVNode(1, \"div\", PAGER_PAGE_SEPARATOR_CLASS, \". . .\", 16, null, key)\r\n    });\r\n    return createFragment(PagesMarkup, 0)\r\n};\r\nvar PAGES_LIMITER = 4;\r\n\r\nfunction getDelimiterType(startIndex, slidingWindowSize, pageCount) {\r\n    if (1 === startIndex) {\r\n        return \"high\"\r\n    }\r\n    if (startIndex + slidingWindowSize === pageCount - 1) {\r\n        return \"low\"\r\n    }\r\n    return \"both\"\r\n}\r\n\r\nfunction createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter) {\r\n    var pageIndexes = [];\r\n    var indexesForReuse = [];\r\n    switch (delimiter) {\r\n        case \"none\":\r\n            pageIndexes = [...slidingWindowIndexes];\r\n            break;\r\n        case \"both\":\r\n            pageIndexes = [0, \"low\", ...slidingWindowIndexes, \"high\", pageCount - 1];\r\n            indexesForReuse = slidingWindowIndexes.slice(1, -1);\r\n            break;\r\n        case \"high\":\r\n            pageIndexes = [0, ...slidingWindowIndexes, \"high\", pageCount - 1];\r\n            indexesForReuse = slidingWindowIndexes.slice(0, -1);\r\n            break;\r\n        case \"low\":\r\n            pageIndexes = [0, \"low\", ...slidingWindowIndexes, pageCount - 1];\r\n            indexesForReuse = slidingWindowIndexes.slice(1)\r\n    }\r\n    return {\r\n        slidingWindowIndexes: slidingWindowIndexes,\r\n        indexesForReuse: indexesForReuse,\r\n        pageIndexes: pageIndexes\r\n    }\r\n}\r\n\r\nfunction createPageIndexes(startIndex, slidingWindowSize, pageCount, delimiter) {\r\n    var slidingWindowIndexes = [];\r\n    for (var i = 0; i < slidingWindowSize; i += 1) {\r\n        slidingWindowIndexes.push(i + startIndex)\r\n    }\r\n    return createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter)\r\n}\r\nvar PagesLargePropsType = {\r\n    get pageIndex() {\r\n        return InternalPagerProps.pageIndex\r\n    },\r\n    get maxPagesCount() {\r\n        return InternalPagerProps.maxPagesCount\r\n    },\r\n    get pageCount() {\r\n        return InternalPagerProps.pageCount\r\n    }\r\n};\r\nexport class PagesLarge extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.canReuseSlidingWindow = this.canReuseSlidingWindow.bind(this);\r\n        this.generatePageIndexes = this.generatePageIndexes.bind(this);\r\n        this.isSlidingWindowMode = this.isSlidingWindowMode.bind(this);\r\n        this.onPageClick = this.onPageClick.bind(this)\r\n    }\r\n    get config() {\r\n        if (\"ConfigContext\" in this.context) {\r\n            return this.context.ConfigContext\r\n        }\r\n        return ConfigContext\r\n    }\r\n    get slidingWindowState() {\r\n        var slidingWindowState = this.slidingWindowStateHolder;\r\n        if (!slidingWindowState) {\r\n            return {\r\n                indexesForReuse: [],\r\n                slidingWindowIndexes: []\r\n            }\r\n        }\r\n        return slidingWindowState\r\n    }\r\n    canReuseSlidingWindow(currentPageCount, pageIndex) {\r\n        var {\r\n            indexesForReuse: indexesForReuse\r\n        } = this.slidingWindowState;\r\n        var currentPageNotExistInIndexes = !indexesForReuse.includes(currentPageCount);\r\n        var pageIndexExistInIndexes = indexesForReuse.includes(pageIndex);\r\n        return currentPageNotExistInIndexes && pageIndexExistInIndexes\r\n    }\r\n    generatePageIndexes() {\r\n        var {\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex\r\n        } = this.props;\r\n        var startIndex = 0;\r\n        var {\r\n            slidingWindowIndexes: slidingWindowIndexes\r\n        } = this.slidingWindowState;\r\n        if (pageIndex === slidingWindowIndexes[0]) {\r\n            startIndex = pageIndex - 1\r\n        } else if (pageIndex === slidingWindowIndexes[slidingWindowIndexes.length - 1]) {\r\n            startIndex = pageIndex + 2 - PAGES_LIMITER\r\n        } else if (pageIndex < PAGES_LIMITER) {\r\n            startIndex = 1\r\n        } else if (pageIndex >= pageCount - PAGES_LIMITER) {\r\n            startIndex = pageCount - PAGES_LIMITER - 1\r\n        } else {\r\n            startIndex = pageIndex - 1\r\n        }\r\n        var slidingWindowSize = PAGES_LIMITER;\r\n        var delimiter = getDelimiterType(startIndex, slidingWindowSize, pageCount);\r\n        var _createPageIndexes = createPageIndexes(startIndex, slidingWindowSize, pageCount, delimiter),\r\n            {\r\n                pageIndexes: pageIndexes\r\n            } = _createPageIndexes,\r\n            slidingWindowState = _objectWithoutPropertiesLoose(_createPageIndexes, _excluded);\r\n        this.slidingWindowStateHolder = slidingWindowState;\r\n        return pageIndexes\r\n    }\r\n    isSlidingWindowMode() {\r\n        var {\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount\r\n        } = this.props;\r\n        return pageCount <= PAGES_LIMITER || pageCount <= maxPagesCount\r\n    }\r\n    onPageClick(pageIndex) {\r\n        this.props.pageIndexChange(pageIndex)\r\n    }\r\n    get pageIndexes() {\r\n        var {\r\n            pageCount: pageCount\r\n        } = this.props;\r\n        if (this.isSlidingWindowMode()) {\r\n            return createPageIndexes(0, pageCount, pageCount, \"none\").pageIndexes\r\n        }\r\n        if (this.canReuseSlidingWindow(pageCount, this.props.pageIndex)) {\r\n            var {\r\n                slidingWindowIndexes: slidingWindowIndexes\r\n            } = this.slidingWindowState;\r\n            var delimiter = getDelimiterType(slidingWindowIndexes[0], PAGES_LIMITER, pageCount);\r\n            return createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter).pageIndexes\r\n        }\r\n        return this.generatePageIndexes()\r\n    }\r\n    get pages() {\r\n        var _this$config;\r\n        var {\r\n            pageIndex: pageIndex\r\n        } = this.props;\r\n        var createPage = index => {\r\n            var pagerProps = \"low\" === index || \"high\" === index ? null : {\r\n                index: index,\r\n                onClick: () => this.onPageClick(index),\r\n                selected: pageIndex === index\r\n            };\r\n            return {\r\n                key: index.toString(),\r\n                pageProps: pagerProps\r\n            }\r\n        };\r\n        var rtlPageIndexes = null !== (_this$config = this.config) && void 0 !== _this$config && _this$config.rtlEnabled ? [...this.pageIndexes].reverse() : this.pageIndexes;\r\n        return rtlPageIndexes.map(index => createPage(index))\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded2);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            config: this.config,\r\n            pageIndexes: this.pageIndexes,\r\n            pages: this.pages,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPagesLarge.defaultProps = PagesLargePropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/editors/number_box.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"accessKey\", \"activeStateEnabled\", \"className\", \"defaultValue\", \"disabled\", \"focusStateEnabled\", \"height\", \"hint\", \"hoverStateEnabled\", \"invalidValueMessage\", \"max\", \"min\", \"mode\", \"onClick\", \"onKeyDown\", \"rtlEnabled\", \"showSpinButtons\", \"step\", \"tabIndex\", \"useLargeSpinButtons\", \"value\", \"valueChange\", \"visible\", \"width\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport LegacyNumberBox from \"../../../ui/number_box\";\r\nimport {\r\n    DomComponentWrapper\r\n} from \"../common/dom_component_wrapper\";\r\nimport {\r\n    BaseWidgetProps\r\n} from \"../common/base_props\";\r\nvar DEFAULT_VALUE = 0;\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: props,\r\n        restAttributes: restAttributes\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, DomComponentWrapper, _extends({\r\n        componentType: LegacyNumberBox,\r\n        componentProps: props,\r\n        templateNames: []\r\n    }, restAttributes)))\r\n};\r\nexport var NumberBoxProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(BaseWidgetProps), Object.getOwnPropertyDescriptors({\r\n    focusStateEnabled: true,\r\n    hoverStateEnabled: true,\r\n    defaultValue: DEFAULT_VALUE,\r\n    isReactComponentWrapper: true\r\n})));\r\nexport class NumberBox extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: void 0 !== this.props.value ? this.props.value : this.props.defaultValue\r\n        }\r\n    }\r\n    get restAttributes() {\r\n        var _this$props$value = _extends({}, this.props, {\r\n                value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n            }),\r\n            restProps = _objectWithoutPropertiesLoose(_this$props$value, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n            }),\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nNumberBox.defaultProps = NumberBoxProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/utils/calculate_values_fitted_width.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport var oneDigitWidth = 10;\r\nexport function calculateValuesFittedWidth(minWidth, values) {\r\n    return minWidth + oneDigitWidth * Math.max(...values).toString().length\r\n}\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/small.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pagesCountText\"];\r\nimport {\r\n    createVNode,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    Page\r\n} from \"./page\";\r\nimport {\r\n    PAGER_INFO_CLASS\r\n} from \"../info\";\r\nimport {\r\n    NumberBox\r\n} from \"../../editors/number_box\";\r\nimport messageLocalization from \"../../../../localization/message\";\r\nimport {\r\n    calculateValuesFittedWidth\r\n} from \"../utils/calculate_values_fitted_width\";\r\nimport {\r\n    getElementMinWidth\r\n} from \"../utils/get_element_width\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nvar PAGER_INFO_TEXT_CLASS = \"\".concat(PAGER_INFO_CLASS, \"  dx-info-text\");\r\nvar PAGER_PAGE_INDEX_CLASS = \"dx-page-index\";\r\nvar LIGHT_PAGES_CLASS = \"dx-light-pages\";\r\nvar PAGER_PAGES_COUNT_CLASS = \"dx-pages-count\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        pageIndexRef: pageIndexRef,\r\n        pagesCountText: pagesCountText,\r\n        props: {\r\n            pageCount: pageCount\r\n        },\r\n        selectLastPageIndex: selectLastPageIndex,\r\n        value: value,\r\n        valueChange: valueChange,\r\n        width: width\r\n    } = _ref;\r\n    return createVNode(1, \"div\", LIGHT_PAGES_CLASS, [createComponentVNode(2, NumberBox, {\r\n        className: PAGER_PAGE_INDEX_CLASS,\r\n        min: 1,\r\n        max: pageCount,\r\n        width: width,\r\n        value: value,\r\n        valueChange: valueChange\r\n    }), createVNode(1, \"span\", PAGER_INFO_TEXT_CLASS, pagesCountText, 0), createComponentVNode(2, Page, {\r\n        className: PAGER_PAGES_COUNT_CLASS,\r\n        selected: false,\r\n        index: pageCount - 1,\r\n        onClick: selectLastPageIndex\r\n    })], 4, null, null, pageIndexRef)\r\n};\r\nvar PagerSmallProps = {\r\n    get pageIndex() {\r\n        return InternalPagerProps.pageIndex\r\n    },\r\n    get pageCount() {\r\n        return InternalPagerProps.pageCount\r\n    }\r\n};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class PagesSmall extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.pageIndexRef = infernoCreateRef();\r\n        this.state = {\r\n            minWidth: 10\r\n        };\r\n        this.updateWidth = this.updateWidth.bind(this);\r\n        this.selectLastPageIndex = this.selectLastPageIndex.bind(this);\r\n        this.valueChange = this.valueChange.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.updateWidth, [this.state.minWidth])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.state.minWidth])\r\n    }\r\n    updateWidth() {\r\n        var _this$pageIndexRef$cu;\r\n        var el = null === (_this$pageIndexRef$cu = this.pageIndexRef.current) || void 0 === _this$pageIndexRef$cu ? void 0 : _this$pageIndexRef$cu.querySelector(\".\".concat(PAGER_PAGE_INDEX_CLASS));\r\n        this.setState(__state_argument => ({\r\n            minWidth: el && getElementMinWidth(el) || __state_argument.minWidth\r\n        }))\r\n    }\r\n    get value() {\r\n        return this.props.pageIndex + 1\r\n    }\r\n    get width() {\r\n        var {\r\n            pageCount: pageCount\r\n        } = this.props;\r\n        return calculateValuesFittedWidth(this.state.minWidth, [pageCount])\r\n    }\r\n    get pagesCountText() {\r\n        var _this$props$pagesCoun;\r\n        return (null !== (_this$props$pagesCoun = this.props.pagesCountText) && void 0 !== _this$props$pagesCoun ? _this$props$pagesCoun : \"\") || messageLocalization.getFormatter(\"dxPager-pagesCountText\")()\r\n    }\r\n    selectLastPageIndex() {\r\n        this.props.pageIndexChange(this.props.pageCount - 1)\r\n    }\r\n    valueChange(value) {\r\n        this.props.pageIndexChange(value - 1)\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            pageIndexRef: this.pageIndexRef,\r\n            value: this.value,\r\n            width: this.width,\r\n            pagesCountText: this.pagesCountText,\r\n            selectLastPageIndex: this.selectLastPageIndex,\r\n            valueChange: this.valueChange,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPagesSmall.defaultProps = PagerSmallProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/page_index_selector.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"hasKnownLastPage\", \"isLargeDisplayMode\", \"maxPagesCount\", \"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pagesCountText\", \"showNavigationButtons\", \"totalCount\"];\r\nimport {\r\n    createFragment,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    LightButton\r\n} from \"../common/light_button\";\r\nimport {\r\n    PagesLarge\r\n} from \"./large\";\r\nimport {\r\n    PagesSmall\r\n} from \"./small\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nimport {\r\n    ConfigContext\r\n} from \"../../../common/config_context\";\r\nvar PAGER_NAVIGATE_BUTTON = \"dx-navigate-button\";\r\nvar PAGER_PREV_BUTTON_CLASS = \"dx-prev-button\";\r\nvar PAGER_NEXT_BUTTON_CLASS = \"dx-next-button\";\r\nexport var PAGER_BUTTON_DISABLE_CLASS = \"dx-button-disable\";\r\nvar nextButtonClassName = \"\".concat(PAGER_NAVIGATE_BUTTON, \" \").concat(PAGER_NEXT_BUTTON_CLASS);\r\nvar prevButtonClassName = \"\".concat(PAGER_NAVIGATE_BUTTON, \" \").concat(PAGER_PREV_BUTTON_CLASS);\r\nvar nextButtonDisabledClassName = \"\".concat(PAGER_BUTTON_DISABLE_CLASS, \" \").concat(PAGER_NAVIGATE_BUTTON, \" \").concat(PAGER_NEXT_BUTTON_CLASS);\r\nvar prevButtonDisabledClassName = \"\".concat(PAGER_BUTTON_DISABLE_CLASS, \" \").concat(PAGER_NAVIGATE_BUTTON, \" \").concat(PAGER_PREV_BUTTON_CLASS);\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        navigateToNextPage: navigateToNextPage,\r\n        navigateToPrevPage: navigateToPrevPage,\r\n        nextClassName: nextClassName,\r\n        pageIndexChange: pageIndexChange,\r\n        prevClassName: prevClassName,\r\n        props: {\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pagesCountText: pagesCountText\r\n        },\r\n        renderNextButton: renderNextButton,\r\n        renderPrevButton: renderPrevButton\r\n    } = _ref;\r\n    return createFragment([renderPrevButton && createComponentVNode(2, LightButton, {\r\n        className: prevClassName,\r\n        label: \"Previous page\",\r\n        onClick: navigateToPrevPage\r\n    }), isLargeDisplayMode && createComponentVNode(2, PagesLarge, {\r\n        maxPagesCount: maxPagesCount,\r\n        pageCount: pageCount,\r\n        pageIndex: pageIndex,\r\n        pageIndexChange: pageIndexChange\r\n    }), !isLargeDisplayMode && createComponentVNode(2, PagesSmall, {\r\n        pageCount: pageCount,\r\n        pageIndex: pageIndex,\r\n        pageIndexChange: pageIndexChange,\r\n        pagesCountText: pagesCountText\r\n    }), renderNextButton && createComponentVNode(2, LightButton, {\r\n        className: nextClassName,\r\n        label: \"Next page\",\r\n        onClick: navigateToNextPage\r\n    })], 0)\r\n};\r\n\r\nfunction getIncrement(direction) {\r\n    return \"next\" === direction ? 1 : -1\r\n}\r\nexport var PageIndexSelectorProps = {\r\n    isLargeDisplayMode: true\r\n};\r\nvar PageIndexSelectorPropsType = {\r\n    get pageIndex() {\r\n        return InternalPagerProps.pageIndex\r\n    },\r\n    get maxPagesCount() {\r\n        return InternalPagerProps.maxPagesCount\r\n    },\r\n    get pageCount() {\r\n        return InternalPagerProps.pageCount\r\n    },\r\n    get hasKnownLastPage() {\r\n        return InternalPagerProps.hasKnownLastPage\r\n    },\r\n    get showNavigationButtons() {\r\n        return InternalPagerProps.showNavigationButtons\r\n    },\r\n    get totalCount() {\r\n        return InternalPagerProps.totalCount\r\n    },\r\n    get isLargeDisplayMode() {\r\n        return PageIndexSelectorProps.isLargeDisplayMode\r\n    }\r\n};\r\nexport class PageIndexSelector extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.pageIndexChange = this.pageIndexChange.bind(this);\r\n        this.navigateToNextPage = this.navigateToNextPage.bind(this);\r\n        this.navigateToPrevPage = this.navigateToPrevPage.bind(this);\r\n        this.getNextDirection = this.getNextDirection.bind(this);\r\n        this.getPrevDirection = this.getPrevDirection.bind(this);\r\n        this.canNavigateToPage = this.canNavigateToPage.bind(this);\r\n        this.getNextPageIndex = this.getNextPageIndex.bind(this);\r\n        this.canNavigateTo = this.canNavigateTo.bind(this);\r\n        this.navigateToPage = this.navigateToPage.bind(this)\r\n    }\r\n    get config() {\r\n        if (\"ConfigContext\" in this.context) {\r\n            return this.context.ConfigContext\r\n        }\r\n        return ConfigContext\r\n    }\r\n    pageIndexChange(pageIndex) {\r\n        if (this.canNavigateToPage(pageIndex)) {\r\n            this.props.pageIndexChange(pageIndex)\r\n        }\r\n    }\r\n    navigateToNextPage() {\r\n        this.navigateToPage(this.getNextDirection())\r\n    }\r\n    navigateToPrevPage() {\r\n        this.navigateToPage(this.getPrevDirection())\r\n    }\r\n    getNextDirection() {\r\n        var _this$config;\r\n        return !(null !== (_this$config = this.config) && void 0 !== _this$config && _this$config.rtlEnabled) ? \"next\" : \"prev\"\r\n    }\r\n    getPrevDirection() {\r\n        var _this$config2;\r\n        return !(null !== (_this$config2 = this.config) && void 0 !== _this$config2 && _this$config2.rtlEnabled) ? \"prev\" : \"next\"\r\n    }\r\n    canNavigateToPage(pageIndex) {\r\n        if (!this.props.hasKnownLastPage) {\r\n            return pageIndex >= 0\r\n        }\r\n        return pageIndex >= 0 && pageIndex <= this.props.pageCount - 1\r\n    }\r\n    getNextPageIndex(direction) {\r\n        return this.props.pageIndex + getIncrement(direction)\r\n    }\r\n    canNavigateTo(direction) {\r\n        return this.canNavigateToPage(this.getNextPageIndex(direction))\r\n    }\r\n    navigateToPage(direction) {\r\n        this.pageIndexChange(this.getNextPageIndex(direction))\r\n    }\r\n    get renderPrevButton() {\r\n        var {\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            showNavigationButtons: showNavigationButtons\r\n        } = this.props;\r\n        return !isLargeDisplayMode || showNavigationButtons\r\n    }\r\n    get renderNextButton() {\r\n        return this.renderPrevButton || !this.props.hasKnownLastPage\r\n    }\r\n    get nextClassName() {\r\n        var direction = this.getNextDirection();\r\n        var canNavigate = this.canNavigateTo(direction);\r\n        return canNavigate ? nextButtonClassName : nextButtonDisabledClassName\r\n    }\r\n    get prevClassName() {\r\n        var direction = this.getPrevDirection();\r\n        var canNavigate = this.canNavigateTo(direction);\r\n        return canNavigate ? prevButtonClassName : prevButtonDisabledClassName\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            config: this.config,\r\n            pageIndexChange: this.pageIndexChange,\r\n            navigateToNextPage: this.navigateToNextPage,\r\n            navigateToPrevPage: this.navigateToPrevPage,\r\n            renderPrevButton: this.renderPrevButton,\r\n            renderNextButton: this.renderNextButton,\r\n            nextClassName: this.nextClassName,\r\n            prevClassName: this.prevClassName,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPageIndexSelector.defaultProps = PageIndexSelectorPropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/editors/drop_down_editors/select_box.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"accessKey\", \"activeStateEnabled\", \"className\", \"dataSource\", \"defaultValue\", \"disabled\", \"displayExpr\", \"focusStateEnabled\", \"height\", \"hint\", \"hoverStateEnabled\", \"onClick\", \"onKeyDown\", \"rtlEnabled\", \"tabIndex\", \"value\", \"valueChange\", \"valueExpr\", \"visible\", \"width\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport LegacySelectBox from \"../../../../ui/select_box\";\r\nimport {\r\n    DomComponentWrapper\r\n} from \"../../common/dom_component_wrapper\";\r\nimport {\r\n    BaseWidgetProps\r\n} from \"../../common/base_props\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: props,\r\n        restAttributes: restAttributes\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, DomComponentWrapper, _extends({\r\n        componentType: LegacySelectBox,\r\n        componentProps: props,\r\n        templateNames: [\"dropDownButtonTemplate\", \"groupTemplate\", \"itemTemplate\"]\r\n    }, restAttributes)))\r\n};\r\nexport var SelectBoxProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(BaseWidgetProps), Object.getOwnPropertyDescriptors({\r\n    focusStateEnabled: true,\r\n    hoverStateEnabled: true,\r\n    defaultValue: null,\r\n    isReactComponentWrapper: true\r\n})));\r\nexport class SelectBox extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: void 0 !== this.props.value ? this.props.value : this.props.defaultValue\r\n        }\r\n    }\r\n    get restAttributes() {\r\n        var _this$props$value = _extends({}, this.props, {\r\n                value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n            }),\r\n            restProps = _objectWithoutPropertiesLoose(_this$props$value, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n            }),\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nSelectBox.defaultProps = SelectBoxProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/page_size/small.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"pageSize\", \"pageSizeChange\", \"pageSizes\", \"parentRef\"];\r\nimport {\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    SelectBox\r\n} from \"../../editors/drop_down_editors/select_box\";\r\nimport {\r\n    calculateValuesFittedWidth\r\n} from \"../utils/calculate_values_fitted_width\";\r\nimport {\r\n    getElementMinWidth\r\n} from \"../utils/get_element_width\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: {\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes\r\n        },\r\n        width: width\r\n    } = _ref;\r\n    return createComponentVNode(2, SelectBox, {\r\n        displayExpr: \"text\",\r\n        valueExpr: \"value\",\r\n        dataSource: pageSizes,\r\n        value: pageSize,\r\n        valueChange: pageSizeChange,\r\n        width: width\r\n    })\r\n};\r\nexport var PageSizeSmallProps = {};\r\nvar PageSizeSmallPropsType = {\r\n    get pageSize() {\r\n        return InternalPagerProps.pageSize\r\n    }\r\n};\r\nexport class PageSizeSmall extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            minWidth: 10\r\n        };\r\n        this.updateWidth = this.updateWidth.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.updateWidth, [this.props, this.state.minWidth, this.props.pageSize, this.props.pageSizeChange, this.props.pageSizes])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props, this.state.minWidth, this.props.pageSize, this.props.pageSizeChange, this.props.pageSizes])\r\n    }\r\n    updateWidth() {\r\n        this.setState(__state_argument => ({\r\n            minWidth: getElementMinWidth(this.props.parentRef.current) || __state_argument.minWidth\r\n        }))\r\n    }\r\n    get width() {\r\n        return calculateValuesFittedWidth(this.state.minWidth, this.props.pageSizes.map(p => p.value))\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            width: this.width,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPageSizeSmall.defaultProps = PageSizeSmallPropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/page_size/large.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"pageSize\", \"pageSizeChange\", \"pageSizes\"];\r\nimport {\r\n    createFragment,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    LightButton\r\n} from \"../common/light_button\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nimport {\r\n    PAGER_SELECTED_PAGE_SIZE_CLASS,\r\n    PAGER_PAGE_SIZE_CLASS\r\n} from \"../common/consts\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        pageSizesText: pageSizesText\r\n    } = _ref;\r\n    return createFragment(pageSizesText.map(_ref2 => {\r\n        var {\r\n            className: className,\r\n            click: click,\r\n            label: label,\r\n            text: text\r\n        } = _ref2;\r\n        return createComponentVNode(2, LightButton, {\r\n            className: className,\r\n            label: label,\r\n            onClick: click,\r\n            children: text\r\n        }, text)\r\n    }), 0)\r\n};\r\nexport var PageSizeLargeProps = {};\r\nvar PageSizeLargePropsType = {\r\n    get pageSize() {\r\n        return InternalPagerProps.pageSize\r\n    }\r\n};\r\nexport class PageSizeLarge extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.__getterCache = {};\r\n        this.onPageSizeChange = this.onPageSizeChange.bind(this)\r\n    }\r\n    get pageSizesText() {\r\n        if (void 0 !== this.__getterCache.pageSizesText) {\r\n            return this.__getterCache.pageSizesText\r\n        }\r\n        return this.__getterCache.pageSizesText = (() => {\r\n            var {\r\n                pageSize: pageSize,\r\n                pageSizes: pageSizes\r\n            } = this.props;\r\n            return pageSizes.map(_ref3 => {\r\n                var {\r\n                    text: text,\r\n                    value: processedPageSize\r\n                } = _ref3;\r\n                var selected = processedPageSize === pageSize;\r\n                var className = selected ? PAGER_SELECTED_PAGE_SIZE_CLASS : PAGER_PAGE_SIZE_CLASS;\r\n                return {\r\n                    className: className,\r\n                    click: this.onPageSizeChange(processedPageSize),\r\n                    label: \"Display \".concat(processedPageSize, \" items on page\"),\r\n                    text: text\r\n                }\r\n            })\r\n        })()\r\n    }\r\n    onPageSizeChange(processedPageSize) {\r\n        return () => {\r\n            this.props.pageSizeChange(processedPageSize);\r\n            return this.props.pageSize\r\n        }\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        if (this.props.pageSize !== nextProps.pageSize || this.props.pageSizes !== nextProps.pageSizes || this.props.pageSizeChange !== nextProps.pageSizeChange) {\r\n            this.__getterCache.pageSizesText = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            pageSizesText: this.pageSizesText,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPageSizeLarge.defaultProps = PageSizeLargePropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/page_size/selector.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"isLargeDisplayMode\", \"pageSize\", \"pageSizeChange\", \"pageSizes\", \"rootElementRef\"];\r\nimport {\r\n    createVNode,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    PageSizeSmall\r\n} from \"./small\";\r\nimport {\r\n    PageSizeLarge\r\n} from \"./large\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nimport messageLocalization from \"../../../../localization/message\";\r\nimport {\r\n    PAGER_PAGE_SIZES_CLASS\r\n} from \"../common/consts\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        htmlRef: htmlRef,\r\n        normalizedPageSizes: normalizedPageSizes,\r\n        props: {\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange\r\n        }\r\n    } = _ref;\r\n    return createVNode(1, \"div\", PAGER_PAGE_SIZES_CLASS, [isLargeDisplayMode && createComponentVNode(2, PageSizeLarge, {\r\n        pageSizes: normalizedPageSizes,\r\n        pageSize: pageSize,\r\n        pageSizeChange: pageSizeChange\r\n    }), !isLargeDisplayMode && createComponentVNode(2, PageSizeSmall, {\r\n        parentRef: htmlRef,\r\n        pageSizes: normalizedPageSizes,\r\n        pageSize: pageSize,\r\n        pageSizeChange: pageSizeChange\r\n    })], 0, null, null, htmlRef)\r\n};\r\n\r\nfunction getAllText() {\r\n    return messageLocalization.getFormatter(\"dxPager-pageSizesAllText\")()\r\n}\r\nvar PageSizeSelectorProps = {\r\n    isLargeDisplayMode: true\r\n};\r\nvar PageSizeSelectorPropsType = {\r\n    get pageSize() {\r\n        return InternalPagerProps.pageSize\r\n    },\r\n    get pageSizes() {\r\n        return InternalPagerProps.pageSizes\r\n    },\r\n    get isLargeDisplayMode() {\r\n        return PageSizeSelectorProps.isLargeDisplayMode\r\n    }\r\n};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class PageSizeSelector extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.htmlRef = infernoCreateRef();\r\n        this.__getterCache = {};\r\n        this.setRootElementRef = this.setRootElementRef.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.setRootElementRef, [])]\r\n    }\r\n    setRootElementRef() {\r\n        var {\r\n            rootElementRef: rootElementRef\r\n        } = this.props;\r\n        if (rootElementRef) {\r\n            rootElementRef.current = this.htmlRef.current\r\n        }\r\n    }\r\n    get normalizedPageSizes() {\r\n        if (void 0 !== this.__getterCache.normalizedPageSizes) {\r\n            return this.__getterCache.normalizedPageSizes\r\n        }\r\n        return this.__getterCache.normalizedPageSizes = (() => {\r\n            var {\r\n                pageSizes: pageSizes\r\n            } = this.props;\r\n            return pageSizes.map(p => \"all\" === p || 0 === p ? {\r\n                text: getAllText(),\r\n                value: 0\r\n            } : {\r\n                text: String(p),\r\n                value: p\r\n            })\r\n        })()\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        super.componentWillUpdate();\r\n        if (this.props.pageSizes !== nextProps.pageSizes) {\r\n            this.__getterCache.normalizedPageSizes = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            htmlRef: this.htmlRef,\r\n            normalizedPageSizes: this.normalizedPageSizes,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPageSizeSelector.defaultProps = PageSizeSelectorPropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/content.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"className\", \"displayMode\", \"gridCompatibility\", \"hasKnownLastPage\", \"infoText\", \"infoTextRef\", \"infoTextVisible\", \"isLargeDisplayMode\", \"lightModeEnabled\", \"maxPagesCount\", \"onKeyDown\", \"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pageSize\", \"pageSizeChange\", \"pageSizes\", \"pageSizesRef\", \"pagesCountText\", \"pagesNavigatorVisible\", \"pagesRef\", \"rootElementRef\", \"rtlEnabled\", \"showInfo\", \"showNavigationButtons\", \"showPageSizes\", \"totalCount\", \"visible\"];\r\nimport {\r\n    createVNode,\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent,\r\n    normalizeStyles\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    InfoText\r\n} from \"./info\";\r\nimport {\r\n    PageIndexSelector\r\n} from \"./pages/page_index_selector\";\r\nimport {\r\n    PageSizeSelector\r\n} from \"./page_size/selector\";\r\nimport {\r\n    PAGER_PAGES_CLASS,\r\n    PAGER_PAGE_INDEXES_CLASS,\r\n    LIGHT_MODE_CLASS,\r\n    PAGER_CLASS\r\n} from \"./common/consts\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"./common/pager_props\";\r\nimport {\r\n    combineClasses\r\n} from \"../../utils/combine_classes\";\r\nimport {\r\n    Widget\r\n} from \"../common/widget\";\r\nimport {\r\n    registerKeyboardAction as _registerKeyboardAction\r\n} from \"../../../ui/shared/accessibility\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        classes: classes,\r\n        infoVisible: infoVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode,\r\n        pageIndexSelectorVisible: pageIndexSelectorVisible,\r\n        pagesContainerVisibility: pagesContainerVisibility,\r\n        pagesContainerVisible: pagesContainerVisible,\r\n        props: {\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            infoText: infoText,\r\n            infoTextRef: infoTextRef,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes,\r\n            pageSizesRef: pageSizesRef,\r\n            pagesCountText: pagesCountText,\r\n            pagesRef: pagesRef,\r\n            rtlEnabled: rtlEnabled,\r\n            showNavigationButtons: showNavigationButtons,\r\n            showPageSizes: showPageSizes,\r\n            totalCount: totalCount,\r\n            visible: visible\r\n        },\r\n        restAttributes: restAttributes,\r\n        widgetRootElementRef: widgetRootElementRef\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, Widget, _extends({\r\n        rootElementRef: widgetRootElementRef,\r\n        rtlEnabled: rtlEnabled,\r\n        classes: classes,\r\n        visible: visible\r\n    }, restAttributes, {\r\n        children: [showPageSizes && createComponentVNode(2, PageSizeSelector, {\r\n            rootElementRef: pageSizesRef,\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes\r\n        }), pagesContainerVisible && createVNode(1, \"div\", PAGER_PAGES_CLASS, [infoVisible && createComponentVNode(2, InfoText, {\r\n            rootElementRef: infoTextRef,\r\n            infoText: infoText,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            totalCount: totalCount\r\n        }), pageIndexSelectorVisible && createVNode(1, \"div\", PAGER_PAGE_INDEXES_CLASS, createComponentVNode(2, PageIndexSelector, {\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pagesCountText: pagesCountText,\r\n            showNavigationButtons: showNavigationButtons,\r\n            totalCount: totalCount\r\n        }), 2, null, null, pagesRef)], 0, {\r\n            style: normalizeStyles({\r\n                visibility: pagesContainerVisibility\r\n            })\r\n        })]\r\n    })))\r\n};\r\nexport var PagerContentProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(InternalPagerProps), Object.getOwnPropertyDescriptors({\r\n    infoTextVisible: true,\r\n    isLargeDisplayMode: true\r\n})));\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class PagerContent extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.widgetRootElementRef = infernoCreateRef();\r\n        this.__getterCache = {};\r\n        this.setRootElementRef = this.setRootElementRef.bind(this);\r\n        this.createFakeInstance = this.createFakeInstance.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.setRootElementRef, [])]\r\n    }\r\n    getChildContext() {\r\n        return _extends({}, this.context, {\r\n            KeyboardActionContext: this.keyboardAction\r\n        })\r\n    }\r\n    setRootElementRef() {\r\n        var {\r\n            rootElementRef: rootElementRef\r\n        } = this.props;\r\n        if (rootElementRef) {\r\n            rootElementRef.current = this.widgetRootElementRef.current\r\n        }\r\n    }\r\n    createFakeInstance() {\r\n        return {\r\n            option: () => false,\r\n            element: () => this.widgetRootElementRef.current,\r\n            _createActionByOption: () => e => {\r\n                var _this$props$onKeyDown, _this$props;\r\n                null === (_this$props$onKeyDown = (_this$props = this.props).onKeyDown) || void 0 === _this$props$onKeyDown ? void 0 : _this$props$onKeyDown.call(_this$props, e)\r\n            }\r\n        }\r\n    }\r\n    get keyboardAction() {\r\n        if (void 0 !== this.__getterCache.keyboardAction) {\r\n            return this.__getterCache.keyboardAction\r\n        }\r\n        return this.__getterCache.keyboardAction = (() => ({\r\n            registerKeyboardAction: (element, action) => {\r\n                var fakePagerInstance = this.createFakeInstance();\r\n                return _registerKeyboardAction(\"pager\", fakePagerInstance, element, void 0, action)\r\n            }\r\n        }))()\r\n    }\r\n    get infoVisible() {\r\n        var {\r\n            infoTextVisible: infoTextVisible,\r\n            showInfo: showInfo\r\n        } = this.props;\r\n        return showInfo && infoTextVisible && this.isLargeDisplayMode\r\n    }\r\n    get pageIndexSelectorVisible() {\r\n        return 0 !== this.props.pageSize\r\n    }\r\n    get normalizedDisplayMode() {\r\n        var {\r\n            displayMode: displayMode,\r\n            lightModeEnabled: lightModeEnabled\r\n        } = this.props;\r\n        if (\"adaptive\" === displayMode && void 0 !== lightModeEnabled) {\r\n            return lightModeEnabled ? \"compact\" : \"full\"\r\n        }\r\n        return displayMode\r\n    }\r\n    get pagesContainerVisible() {\r\n        return !!this.props.pagesNavigatorVisible && this.props.pageCount > 0\r\n    }\r\n    get pagesContainerVisibility() {\r\n        if (\"auto\" === this.props.pagesNavigatorVisible && 1 === this.props.pageCount && this.props.hasKnownLastPage) {\r\n            return \"hidden\"\r\n        }\r\n        return\r\n    }\r\n    get isLargeDisplayMode() {\r\n        var displayMode = this.normalizedDisplayMode;\r\n        var result = false;\r\n        if (\"adaptive\" === displayMode) {\r\n            result = this.props.isLargeDisplayMode\r\n        } else {\r\n            result = \"full\" === displayMode\r\n        }\r\n        return result\r\n    }\r\n    get classes() {\r\n        var classesMap = {\r\n            [\"\".concat(this.props.className)]: !!this.props.className,\r\n            [PAGER_CLASS]: true,\r\n            [LIGHT_MODE_CLASS]: !this.isLargeDisplayMode\r\n        };\r\n        return combineClasses(classesMap)\r\n    }\r\n    get restAttributes() {\r\n        var _this$props2 = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props2, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        super.componentWillUpdate();\r\n        if (this.props.onKeyDown !== nextProps.onKeyDown) {\r\n            this.__getterCache.keyboardAction = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            widgetRootElementRef: this.widgetRootElementRef,\r\n            keyboardAction: this.keyboardAction,\r\n            infoVisible: this.infoVisible,\r\n            pageIndexSelectorVisible: this.pageIndexSelectorVisible,\r\n            pagesContainerVisible: this.pagesContainerVisible,\r\n            pagesContainerVisibility: this.pagesContainerVisibility,\r\n            isLargeDisplayMode: this.isLargeDisplayMode,\r\n            classes: this.classes,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPagerContent.defaultProps = PagerContentProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"className\", \"defaultPageIndex\", \"defaultPageSize\", \"displayMode\", \"gridCompatibility\", \"hasKnownLastPage\", \"infoText\", \"lightModeEnabled\", \"maxPagesCount\", \"onKeyDown\", \"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pageSize\", \"pageSizeChange\", \"pageSizes\", \"pagesCountText\", \"pagesNavigatorVisible\", \"rtlEnabled\", \"showInfo\", \"showNavigationButtons\", \"showPageSizes\", \"totalCount\", \"visible\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    InfernoWrapperComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    ResizableContainer\r\n} from \"./resizable_container\";\r\nimport {\r\n    PagerProps\r\n} from \"./common/pager_props\";\r\nimport {\r\n    PagerContent\r\n} from \"./content\";\r\nimport {\r\n    combineClasses\r\n} from \"../../utils/combine_classes\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        pagerProps: pagerProps,\r\n        restAttributes: restAttributes\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, ResizableContainer, _extends({\r\n        contentTemplate: PagerContent,\r\n        pagerProps: pagerProps\r\n    }, restAttributes)))\r\n};\r\nimport {\r\n    createReRenderEffect\r\n} from \"@devextreme/runtime/inferno\";\r\nexport class Pager extends InfernoWrapperComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.__getterCache = {};\r\n        this.state = {\r\n            pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.props.defaultPageSize,\r\n            pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.props.defaultPageIndex\r\n        };\r\n        this.pageIndexChange = this.pageIndexChange.bind(this);\r\n        this.pageSizeChange = this.pageSizeChange.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [createReRenderEffect()]\r\n    }\r\n    pageIndexChange(newPageIndex) {\r\n        if (this.props.gridCompatibility) {\r\n            var __newValue;\r\n            this.setState(__state_argument => {\r\n                __newValue = newPageIndex + 1;\r\n                return {\r\n                    pageIndex: __newValue\r\n                }\r\n            });\r\n            this.props.pageIndexChange(__newValue)\r\n        } else {\r\n            var _newValue;\r\n            this.setState(__state_argument => {\r\n                _newValue = newPageIndex;\r\n                return {\r\n                    pageIndex: _newValue\r\n                }\r\n            });\r\n            this.props.pageIndexChange(_newValue)\r\n        }\r\n    }\r\n    get pageIndex() {\r\n        if (this.props.gridCompatibility) {\r\n            return (void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex) - 1\r\n        }\r\n        return void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex\r\n    }\r\n    pageSizeChange(newPageSize) {\r\n        var __newValue;\r\n        this.setState(__state_argument => {\r\n            __newValue = newPageSize;\r\n            return {\r\n                pageSize: __newValue\r\n            }\r\n        });\r\n        this.props.pageSizeChange(__newValue)\r\n    }\r\n    get className() {\r\n        if (this.props.gridCompatibility) {\r\n            return combineClasses({\r\n                \"dx-datagrid-pager\": true,\r\n                [\"\".concat(this.props.className)]: !!this.props.className\r\n            })\r\n        }\r\n        return this.props.className\r\n    }\r\n    get pagerProps() {\r\n        if (void 0 !== this.__getterCache.pagerProps) {\r\n            return this.__getterCache.pagerProps\r\n        }\r\n        return this.__getterCache.pagerProps = (() => _extends({}, _extends({}, this.props, {\r\n            pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.state.pageSize,\r\n            pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex\r\n        }), {\r\n            className: this.className,\r\n            pageIndex: this.pageIndex,\r\n            pageIndexChange: pageIndex => this.pageIndexChange(pageIndex),\r\n            pageSizeChange: pageSize => this.pageSizeChange(pageSize)\r\n        }))()\r\n    }\r\n    get restAttributes() {\r\n        var _this$props$pageSize$ = _extends({}, this.props, {\r\n                pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.state.pageSize,\r\n                pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex\r\n            }),\r\n            restProps = _objectWithoutPropertiesLoose(_this$props$pageSize$, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        super.componentWillUpdate();\r\n        if (this.props !== nextProps || this.props.gridCompatibility !== nextProps.gridCompatibility || this.props.className !== nextProps.className || this.state.pageIndex !== nextState.pageIndex || this.props.pageIndex !== nextProps.pageIndex || this.props.pageIndexChange !== nextProps.pageIndexChange || this.props.pageSizeChange !== nextProps.pageSizeChange) {\r\n            this.__getterCache.pagerProps = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.state.pageSize,\r\n                pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex\r\n            }),\r\n            pageIndexChange: this.pageIndexChange,\r\n            pageIndex: this.pageIndex,\r\n            pageSizeChange: this.pageSizeChange,\r\n            className: this.className,\r\n            pagerProps: this.pagerProps,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPager.defaultProps = PagerProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pager.j.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport {\r\n    GridPagerWrapper\r\n} from \"../../component_wrapper/grid_pager\";\r\nimport {\r\n    Pager as PagerComponent\r\n} from \"./pager\";\r\nexport default class Pager extends GridPagerWrapper {\r\n    getProps() {\r\n        var props = super.getProps();\r\n        props.onKeyDown = this._wrapKeyDownHandler(props.onKeyDown);\r\n        return props\r\n    }\r\n    get _propsInfo() {\r\n        return {\r\n            twoWay: [\r\n                [\"pageSize\", \"defaultPageSize\", \"pageSizeChange\"],\r\n                [\"pageIndex\", \"defaultPageIndex\", \"pageIndexChange\"]\r\n            ],\r\n            allowNull: [],\r\n            elements: [],\r\n            templates: [],\r\n            props: [\"defaultPageSize\", \"pageSizeChange\", \"defaultPageIndex\", \"pageIndexChange\", \"gridCompatibility\", \"className\", \"showInfo\", \"infoText\", \"lightModeEnabled\", \"displayMode\", \"maxPagesCount\", \"pageCount\", \"pagesCountText\", \"visible\", \"hasKnownLastPage\", \"pagesNavigatorVisible\", \"showPageSizes\", \"pageSizes\", \"rtlEnabled\", \"showNavigationButtons\", \"totalCount\", \"onKeyDown\", \"pageSize\", \"pageIndex\"]\r\n        }\r\n    }\r\n    get _viewComponent() {\r\n        return PagerComponent\r\n    }\r\n}\r\nregisterComponent(\"dxPager\", Pager);\r\n","/**\r\n * DevExtreme (esm/ui/pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Widget from \"../renovation/ui/pager/pager.j\";\r\nexport default Widget;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport Pager from \"../pager\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nvar PAGER_CLASS = \"pager\";\r\nvar MAX_PAGES_COUNT = 10;\r\nvar getPageIndex = function(dataController) {\r\n    return 1 + (parseInt(dataController.pageIndex()) || 0)\r\n};\r\nvar PagerView = modules.View.inherit({\r\n    init: function() {\r\n        var dataController = this.getController(\"data\");\r\n        dataController.changed.add(e => {\r\n            if (e && e.repaintChangesOnly) {\r\n                var pager = this._getPager();\r\n                if (pager) {\r\n                    pager.option({\r\n                        pageIndex: getPageIndex(dataController),\r\n                        pageSize: dataController.pageSize(),\r\n                        pageCount: dataController.pageCount(),\r\n                        totalCount: dataController.totalCount(),\r\n                        hasKnownLastPage: dataController.hasKnownLastPage()\r\n                    })\r\n                } else {\r\n                    this.render()\r\n                }\r\n            } else if (!e || \"update\" !== e.changeType && \"updateSelection\" !== e.changeType && \"updateFocusedRow\" !== e.changeType) {\r\n                this.render()\r\n            }\r\n        })\r\n    },\r\n    _getPager: function() {\r\n        var $element = this.element();\r\n        return $element && $element.data(\"dxPager\")\r\n    },\r\n    _renderCore: function() {\r\n        var $element = this.element().addClass(this.addWidgetPrefix(PAGER_CLASS));\r\n        var pagerOptions = this.option(\"pager\") || {};\r\n        var dataController = this.getController(\"data\");\r\n        var keyboardController = this.getController(\"keyboardNavigation\");\r\n        var options = {\r\n            maxPagesCount: MAX_PAGES_COUNT,\r\n            pageIndex: getPageIndex(dataController),\r\n            pageCount: dataController.pageCount(),\r\n            pageSize: dataController.pageSize(),\r\n            showPageSizes: pagerOptions.showPageSizeSelector,\r\n            showInfo: pagerOptions.showInfo,\r\n            displayMode: pagerOptions.displayMode,\r\n            pagesNavigatorVisible: pagerOptions.visible,\r\n            showNavigationButtons: pagerOptions.showNavigationButtons,\r\n            pageSizes: this.getPageSizes(),\r\n            totalCount: dataController.totalCount(),\r\n            hasKnownLastPage: dataController.hasKnownLastPage(),\r\n            pageIndexChanged: function(pageIndex) {\r\n                if (dataController.pageIndex() !== pageIndex - 1) {\r\n                    setTimeout((function() {\r\n                        dataController.pageIndex(pageIndex - 1)\r\n                    }))\r\n                }\r\n            },\r\n            pageSizeChanged: function(pageSize) {\r\n                setTimeout((function() {\r\n                    dataController.pageSize(pageSize)\r\n                }))\r\n            },\r\n            onKeyDown: e => keyboardController && keyboardController.executeAction(\"onKeyDown\", e),\r\n            useLegacyKeyboardNavigation: this.option(\"useLegacyKeyboardNavigation\"),\r\n            useKeyboard: this.option(\"keyboardNavigation.enabled\")\r\n        };\r\n        if (isDefined(pagerOptions.infoText)) {\r\n            options.infoText = pagerOptions.infoText\r\n        }\r\n        if (hasWindow()) {\r\n            this._createComponent($element, Pager, options)\r\n        } else {\r\n            $element.addClass(\"dx-pager\").html('<div class=\"dx-pages\"><div class=\"dx-page\"></div></div>')\r\n        }\r\n    },\r\n    getPageSizes: function() {\r\n        var dataController = this.getController(\"data\");\r\n        var pagerOptions = this.option(\"pager\");\r\n        var allowedPageSizes = pagerOptions && pagerOptions.allowedPageSizes;\r\n        var pageSize = dataController.pageSize();\r\n        if (!isDefined(this._pageSizes) || -1 === inArray(pageSize, this._pageSizes)) {\r\n            this._pageSizes = [];\r\n            if (pagerOptions) {\r\n                if (Array.isArray(allowedPageSizes)) {\r\n                    this._pageSizes = allowedPageSizes\r\n                } else if (allowedPageSizes && pageSize > 1) {\r\n                    this._pageSizes = [Math.floor(pageSize / 2), pageSize, 2 * pageSize]\r\n                }\r\n            }\r\n        }\r\n        return this._pageSizes\r\n    },\r\n    isVisible: function() {\r\n        var dataController = this.getController(\"data\");\r\n        var pagerOptions = this.option(\"pager\");\r\n        var pagerVisible = pagerOptions && pagerOptions.visible;\r\n        var scrolling = this.option(\"scrolling\");\r\n        if (\"auto\" === pagerVisible) {\r\n            if (scrolling && (\"virtual\" === scrolling.mode || \"infinite\" === scrolling.mode)) {\r\n                pagerVisible = false\r\n            } else {\r\n                pagerVisible = dataController.pageCount() > 1 || dataController.isLoaded() && !dataController.hasKnownLastPage()\r\n            }\r\n        }\r\n        return pagerVisible\r\n    },\r\n    getHeight: function() {\r\n        return this.getElementHeight()\r\n    },\r\n    optionChanged: function(args) {\r\n        var name = args.name;\r\n        var isPager = \"pager\" === name;\r\n        var isPaging = \"paging\" === name;\r\n        var isDataSource = \"dataSource\" === name;\r\n        var isScrolling = \"scrolling\" === name;\r\n        var dataController = this.getController(\"data\");\r\n        if (isPager || isPaging || isScrolling || isDataSource) {\r\n            args.handled = true;\r\n            if (dataController.skipProcessingPagingChange(args.fullName)) {\r\n                return\r\n            }\r\n            if (isPager || isPaging) {\r\n                this._pageSizes = null\r\n            }\r\n            if (!isDataSource) {\r\n                this._invalidate();\r\n                if (hasWindow() && isPager && this.component) {\r\n                    this.component.resize()\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\nexport var pagerModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            pager: {\r\n                visible: \"auto\",\r\n                showPageSizeSelector: false,\r\n                allowedPageSizes: \"auto\"\r\n            }\r\n        }\r\n    },\r\n    views: {\r\n        pagerView: PagerView\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    pagerModule\r\n} from \"../grid_core/ui.grid_core.pager\";\r\ngridCore.registerModule(\"pager\", pagerModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_resizing_reordering.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    setHeight as _setHeight,\r\n    getHeight,\r\n    setWidth,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    isDefined,\r\n    isString,\r\n    isObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    addNamespace,\r\n    eventData as getEventData,\r\n    isTouchEvent\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    start as dragEventStart,\r\n    move as dragEventMove,\r\n    end as dragEventEnd\r\n} from \"../../events/drag\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport fx from \"../../animation/fx\";\r\nimport swatchContainer from \"../widget/swatch_container\";\r\nvar COLUMNS_SEPARATOR_CLASS = \"columns-separator\";\r\nvar COLUMNS_SEPARATOR_TRANSPARENT = \"columns-separator-transparent\";\r\nvar DRAGGING_HEADER_CLASS = \"drag-header\";\r\nvar CELL_CONTENT_CLASS = \"text-content\";\r\nvar HEADERS_DRAG_ACTION_CLASS = \"drag-action\";\r\nvar TRACKER_CLASS = \"tracker\";\r\nvar HEADERS_DROP_HIGHLIGHT_CLASS = \"drop-highlight\";\r\nvar BLOCK_SEPARATOR_CLASS = \"dx-block-separator\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar WIDGET_CLASS = \"dx-widget\";\r\nvar DRAGGING_COMMAND_CELL_CLASS = \"dx-drag-command-cell\";\r\nvar MODULE_NAMESPACE = \"dxDataGridResizingReordering\";\r\nvar COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH = 10;\r\nvar DRAGGING_DELTA = 5;\r\nvar COLUMN_OPACITY = .5;\r\nvar allowResizing = function(that) {\r\n    return that.option(\"allowColumnResizing\") || that.getController(\"columns\").isColumnOptionUsed(\"allowResizing\")\r\n};\r\nvar allowReordering = function(that) {\r\n    return that.option(\"allowColumnReordering\") || that.getController(\"columns\").isColumnOptionUsed(\"allowReordering\")\r\n};\r\nvar TrackerView = modules.View.inherit({\r\n    _renderCore: function() {\r\n        this.callBase();\r\n        this.element().addClass(this.addWidgetPrefix(TRACKER_CLASS));\r\n        this.hide()\r\n    },\r\n    _unsubscribeFromCallback: function() {\r\n        if (this._positionChanged) {\r\n            this._tablePositionController.positionChanged.remove(this._positionChanged)\r\n        }\r\n    },\r\n    _subscribeToCallback: function() {\r\n        var that = this;\r\n        that._positionChanged = function(position) {\r\n            var $element = that.element();\r\n            if ($element && $element.hasClass(that.addWidgetPrefix(TRACKER_CLASS))) {\r\n                $element.css({\r\n                    top: position.top\r\n                });\r\n                _setHeight($element, position.height)\r\n            }\r\n        };\r\n        this._tablePositionController.positionChanged.add(that._positionChanged)\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            this._unsubscribeFromCallback();\r\n            if (args.value) {\r\n                this._subscribeToCallback();\r\n                this._invalidate()\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this._tablePositionController = this.getController(\"tablePosition\");\r\n        this._subscribeToCallback()\r\n    },\r\n    isVisible: function() {\r\n        return allowResizing(this)\r\n    },\r\n    show: function() {\r\n        this.element().show()\r\n    },\r\n    hide: function() {\r\n        this.element() && this.element().hide()\r\n    },\r\n    setHeight: function(value) {\r\n        _setHeight(this.element(), value)\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribeFromCallback();\r\n        this.callBase()\r\n    }\r\n});\r\nvar SeparatorView = modules.View.inherit({\r\n    _renderSeparator: function() {},\r\n    _renderCore: function(options) {\r\n        this.callBase(options);\r\n        this._isShown = true;\r\n        this._renderSeparator();\r\n        this.hide()\r\n    },\r\n    show: function() {\r\n        this._isShown = true\r\n    },\r\n    hide: function() {\r\n        this._isShown = false\r\n    },\r\n    height: function(value) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            if (isDefined(value)) {\r\n                _setHeight($element, value)\r\n            } else {\r\n                return getHeight($element)\r\n            }\r\n        }\r\n    },\r\n    width: function(value) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            if (isDefined(value)) {\r\n                setWidth($element, value)\r\n            } else {\r\n                return getWidth($element)\r\n            }\r\n        }\r\n    }\r\n});\r\nvar ColumnsSeparatorView = SeparatorView.inherit({\r\n    _renderSeparator: function() {\r\n        this.callBase();\r\n        var $element = this.element();\r\n        $element.addClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_CLASS))\r\n    },\r\n    _subscribeToCallback: function() {\r\n        var that = this;\r\n        var $element;\r\n        that._positionChanged = function(position) {\r\n            $element = that.element();\r\n            if ($element) {\r\n                $element.css({\r\n                    top: position.top\r\n                });\r\n                _setHeight($element, position.height)\r\n            }\r\n        };\r\n        that._tablePositionController.positionChanged.add(that._positionChanged)\r\n    },\r\n    _unsubscribeFromCallback: function() {\r\n        this._positionChanged && this._tablePositionController.positionChanged.remove(this._positionChanged)\r\n    },\r\n    _init: function() {\r\n        this._isTransparent = allowResizing(this);\r\n        if (this.isVisible()) {\r\n            this._subscribeToCallback()\r\n        }\r\n    },\r\n    isVisible: function() {\r\n        return this.option(\"showColumnHeaders\") && (allowReordering(this) || allowResizing(this))\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            if (args.value) {\r\n                this._init();\r\n                this._invalidate();\r\n                this.hide(true)\r\n            } else {\r\n                this._unsubscribeFromCallback();\r\n                this._isTransparent = allowResizing(this);\r\n                this.hide(true)\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this._tablePositionController = this.getController(\"tablePosition\");\r\n        this._init()\r\n    },\r\n    show: function() {\r\n        var $element = this.element();\r\n        if ($element && !this._isShown) {\r\n            if (this._isTransparent) {\r\n                $element.removeClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT))\r\n            } else {\r\n                $element.show()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    hide: function(force) {\r\n        var $element = this.element();\r\n        var columnsSeparatorTransparent = this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT);\r\n        if ($element && (this._isShown || force)) {\r\n            if (this._isTransparent) {\r\n                $element.addClass(columnsSeparatorTransparent);\r\n                $element.css(\"left\", \"\");\r\n                $element.show()\r\n            } else {\r\n                if ($element.hasClass(columnsSeparatorTransparent)) {\r\n                    $element.removeClass(columnsSeparatorTransparent)\r\n                }\r\n                $element.hide()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    moveByX: function(outerX) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            $element.css(\"left\", null === outerX ? 0 : outerX - this._parentElement().offset().left)\r\n        }\r\n    },\r\n    changeCursor: function(cursorName) {\r\n        cursorName = isDefined(cursorName) ? cursorName : \"\";\r\n        var $element = this.element();\r\n        if ($element) {\r\n            $element.css(\"cursor\", cursorName)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribeFromCallback();\r\n        this.callBase()\r\n    }\r\n});\r\nvar BlockSeparatorView = SeparatorView.inherit({\r\n    init: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        this.getController(\"data\").loadingChanged.add((function(isLoading) {\r\n            if (!isLoading) {\r\n                that.hide()\r\n            }\r\n        }))\r\n    },\r\n    _renderSeparator: function() {\r\n        this.callBase();\r\n        this.element().addClass(BLOCK_SEPARATOR_CLASS).html(\"&nbsp;\")\r\n    },\r\n    hide: function() {\r\n        var $parent = this._parentElement();\r\n        var $element = this.element();\r\n        if ($element && this._isShown) {\r\n            $element.css(\"display\", \"none\")\r\n        }\r\n        if ($parent && !$parent.children(\".\" + BLOCK_SEPARATOR_CLASS).length) {\r\n            $parent.prepend(this.element())\r\n        }\r\n        this.callBase()\r\n    },\r\n    isVisible: function() {\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        var columnChooserOptions = this.option(\"columnChooser\");\r\n        return groupPanelOptions && groupPanelOptions.visible || columnChooserOptions && columnChooserOptions.enabled\r\n    },\r\n    show: function(targetLocation) {\r\n        var $element = this.element();\r\n        var startAnimate = function(toOptions) {\r\n            fx.stop($element, true);\r\n            fx.animate($element, {\r\n                type: \"slide\",\r\n                from: {\r\n                    width: 0,\r\n                    display: toOptions.display\r\n                },\r\n                to: toOptions,\r\n                duration: 300,\r\n                easing: \"swing\"\r\n            })\r\n        };\r\n        if ($element && !this._isShown) {\r\n            switch (targetLocation) {\r\n                case \"group\":\r\n                    startAnimate({\r\n                        width: \"50px\",\r\n                        display: \"inline-block\"\r\n                    });\r\n                    break;\r\n                case \"columnChooser\":\r\n                    startAnimate({\r\n                        width: \"100%\",\r\n                        display: \"block\"\r\n                    });\r\n                    break;\r\n                default:\r\n                    $element.css(\"display\", \"\")\r\n            }\r\n        }\r\n        this.callBase()\r\n    }\r\n});\r\nvar DraggingHeaderView = modules.View.inherit({\r\n    _isDragging: false,\r\n    isDragging: function() {\r\n        return this._isDragging\r\n    },\r\n    _getDraggingPanelByPos: function(pos) {\r\n        var result;\r\n        each(this._dragOptions.draggingPanels, (function(index, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var boundingRect = draggingPanel.getBoundingRect();\r\n                if (boundingRect && (void 0 === boundingRect.bottom || pos.y < boundingRect.bottom) && (void 0 === boundingRect.top || pos.y > boundingRect.top) && (void 0 === boundingRect.left || pos.x > boundingRect.left) && (void 0 === boundingRect.right || pos.x < boundingRect.right)) {\r\n                    result = draggingPanel;\r\n                    return false\r\n                }\r\n            }\r\n        }));\r\n        return result\r\n    },\r\n    _renderCore: function() {\r\n        this.element().addClass(this.addWidgetPrefix(DRAGGING_HEADER_CLASS) + \" \" + this.addWidgetPrefix(CELL_CONTENT_CLASS) + \" \" + WIDGET_CLASS).hide()\r\n    },\r\n    _resetTargetColumnOptions: function() {\r\n        var params = this._dropOptions;\r\n        params.targetColumnIndex = -1;\r\n        delete params.targetColumnElement;\r\n        delete params.isLast;\r\n        delete params.posX;\r\n        delete params.posY\r\n    },\r\n    _getVisibleIndexObject: function(rowIndex, visibleIndex) {\r\n        if (isDefined(rowIndex)) {\r\n            return {\r\n                columnIndex: visibleIndex,\r\n                rowIndex: rowIndex\r\n            }\r\n        }\r\n        return visibleIndex\r\n    },\r\n    dispose: function() {\r\n        var element = this.element();\r\n        this._dragOptions = null;\r\n        element && element.parent().find(\".\" + this.addWidgetPrefix(DRAGGING_HEADER_CLASS)).remove()\r\n    },\r\n    isVisible: function() {\r\n        var columnsController = this.getController(\"columns\");\r\n        var commonColumnSettings = columnsController.getCommonSettings();\r\n        return this.option(\"showColumnHeaders\") && (allowReordering(this) || commonColumnSettings.allowGrouping || commonColumnSettings.allowHiding)\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        this._controller = this.getController(\"draggingHeader\");\r\n        this._columnsResizerViewController = this.getController(\"columnsResizer\");\r\n        this.getController(\"data\").loadingChanged.add((function(isLoading) {\r\n            var element = that.element();\r\n            if (!isLoading && element) {\r\n                element.hide()\r\n            }\r\n        }))\r\n    },\r\n    dragHeader: function(options) {\r\n        var columnElement = options.columnElement;\r\n        var isCommandColumn = !!options.sourceColumn.type;\r\n        this._isDragging = true;\r\n        this._dragOptions = options;\r\n        this._dropOptions = {\r\n            sourceIndex: options.index,\r\n            sourceColumnIndex: this._getVisibleIndexObject(options.rowIndex, options.columnIndex),\r\n            sourceColumnElement: options.columnElement,\r\n            sourceLocation: options.sourceLocation\r\n        };\r\n        var document = domAdapter.getDocument();\r\n        this._onSelectStart = document.onselectstart;\r\n        document.onselectstart = function() {\r\n            return false\r\n        };\r\n        this._controller.drag(this._dropOptions);\r\n        this.element().css({\r\n            textAlign: columnElement && columnElement.css(\"textAlign\"),\r\n            height: columnElement && (isCommandColumn && columnElement.get(0).clientHeight || getHeight(columnElement)),\r\n            width: columnElement && (isCommandColumn && columnElement.get(0).clientWidth || getWidth(columnElement)),\r\n            whiteSpace: columnElement && columnElement.css(\"whiteSpace\")\r\n        }).addClass(this.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS)).toggleClass(DRAGGING_COMMAND_CELL_CLASS, isCommandColumn).text(isCommandColumn ? \"\" : options.sourceColumn.caption);\r\n        this.element().appendTo(swatchContainer.getSwatchContainer(columnElement))\r\n    },\r\n    moveHeader: function(args) {\r\n        var e = args.event;\r\n        var that = e.data.that;\r\n        var eventData = getEventData(e);\r\n        var isResizing = that._columnsResizerViewController ? that._columnsResizerViewController.isResizing() : false;\r\n        var dragOptions = that._dragOptions;\r\n        if (that._isDragging && !isResizing) {\r\n            var $element = that.element();\r\n            var moveDeltaX = Math.abs(eventData.x - dragOptions.columnElement.offset().left - dragOptions.deltaX);\r\n            var moveDeltaY = Math.abs(eventData.y - dragOptions.columnElement.offset().top - dragOptions.deltaY);\r\n            if ($element.is(\":visible\") || moveDeltaX > DRAGGING_DELTA || moveDeltaY > DRAGGING_DELTA) {\r\n                $element.show();\r\n                var newLeft = eventData.x - dragOptions.deltaX;\r\n                var newTop = eventData.y - dragOptions.deltaY;\r\n                $element.css({\r\n                    left: newLeft,\r\n                    top: newTop\r\n                });\r\n                that.dockHeader(eventData)\r\n            }\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    dockHeader: function(eventData) {\r\n        var targetDraggingPanel = this._getDraggingPanelByPos(eventData);\r\n        var controller = this._controller;\r\n        var params = this._dropOptions;\r\n        var dragOptions = this._dragOptions;\r\n        if (targetDraggingPanel) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\");\r\n            var isVerticalOrientation = \"columnChooser\" === targetDraggingPanel.getName();\r\n            var axisName = isVerticalOrientation ? \"y\" : \"x\";\r\n            var targetLocation = targetDraggingPanel.getName();\r\n            var rowIndex = \"headers\" === targetLocation ? dragOptions.rowIndex : void 0;\r\n            var sourceColumn = dragOptions.sourceColumn;\r\n            var columnElements = targetDraggingPanel.getColumnElements(rowIndex, null === sourceColumn || void 0 === sourceColumn ? void 0 : sourceColumn.ownerBand) || [];\r\n            var pointsByTarget = dragOptions.pointsByTarget = dragOptions.pointsByTarget || {};\r\n            var pointsByColumns = \"columnChooser\" === targetLocation ? [] : pointsByTarget[targetLocation] || controller._generatePointsByColumns(extend({}, dragOptions, {\r\n                targetDraggingPanel: targetDraggingPanel,\r\n                columns: targetDraggingPanel.getColumns(rowIndex),\r\n                columnElements: columnElements,\r\n                isVerticalOrientation: isVerticalOrientation,\r\n                startColumnIndex: \"headers\" === targetLocation && $(columnElements[0]).index()\r\n            }));\r\n            pointsByTarget[targetLocation] = pointsByColumns;\r\n            params.targetLocation = targetLocation;\r\n            if (pointsByColumns.length > 0) {\r\n                for (var i = 0; i < pointsByColumns.length; i++) {\r\n                    var centerPosition = pointsByColumns[i + 1] && (pointsByColumns[i][axisName] + pointsByColumns[i + 1][axisName]) / 2;\r\n                    if (void 0 === centerPosition || (rtlEnabled && \"x\" === axisName ? eventData[axisName] > centerPosition : eventData[axisName] < centerPosition)) {\r\n                        params.targetColumnIndex = this._getVisibleIndexObject(rowIndex, pointsByColumns[i].columnIndex);\r\n                        if (columnElements[i]) {\r\n                            params.targetColumnElement = columnElements.eq(i);\r\n                            params.isLast = false\r\n                        } else {\r\n                            params.targetColumnElement = columnElements.last();\r\n                            params.isLast = true\r\n                        }\r\n                        params.posX = pointsByColumns[i].x;\r\n                        params.posY = pointsByColumns[i].y;\r\n                        controller.dock(params);\r\n                        break\r\n                    }\r\n                }\r\n            } else {\r\n                this._resetTargetColumnOptions();\r\n                controller.dock(params)\r\n            }\r\n        }\r\n    },\r\n    dropHeader: function(args) {\r\n        var e = args.event;\r\n        var that = e.data.that;\r\n        var controller = that._controller;\r\n        that.element().hide();\r\n        if (controller && that._isDragging) {\r\n            controller.drop(that._dropOptions)\r\n        }\r\n        that.element().appendTo(that._parentElement());\r\n        that._dragOptions = null;\r\n        that._dropOptions = null;\r\n        that._isDragging = false;\r\n        domAdapter.getDocument().onselectstart = that._onSelectStart || null\r\n    }\r\n});\r\nvar isNextColumnResizingMode = function(that) {\r\n    return \"widget\" !== that.option(\"columnResizingMode\")\r\n};\r\nvar ColumnsResizerViewController = modules.ViewController.inherit({\r\n    _isHeadersRowArea: function(posY) {\r\n        if (this._columnHeadersView) {\r\n            var element = this._columnHeadersView.element();\r\n            if (element) {\r\n                var offsetTop = element.offset().top;\r\n                var headersRowHeight = this._columnHeadersView.getHeadersRowHeight();\r\n                return posY >= offsetTop && posY <= offsetTop + headersRowHeight\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _isRtlParentStyle: function() {\r\n        var _this$_$parentContain;\r\n        return this.option(\"rtlEnabled\") && \"rtl\" === (null === (_this$_$parentContain = this._$parentContainer) || void 0 === _this$_$parentContain ? void 0 : _this$_$parentContain.parent().css(\"direction\"))\r\n    },\r\n    _pointCreated: function(point, cellsLength, columns) {\r\n        var isNextColumnMode = isNextColumnResizingMode(this);\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n        var firstPointColumnIndex = !isNextColumnMode && rtlEnabled && !isRtlParentStyle ? 0 : 1;\r\n        if (point.index >= firstPointColumnIndex && point.index < cellsLength + (!isNextColumnMode && (!rtlEnabled || isRtlParentStyle) ? 1 : 0)) {\r\n            point.columnIndex -= firstPointColumnIndex;\r\n            var currentColumn = columns[point.columnIndex] || {};\r\n            var nextColumn = columns[point.columnIndex + 1] || {};\r\n            return !(isNextColumnMode ? currentColumn.allowResizing && nextColumn.allowResizing : currentColumn.allowResizing)\r\n        }\r\n        return true\r\n    },\r\n    _getTargetPoint: function(pointsByColumns, currentX, deltaX) {\r\n        if (pointsByColumns) {\r\n            for (var i = 0; i < pointsByColumns.length; i++) {\r\n                if (pointsByColumns[i].x === pointsByColumns[0].x && pointsByColumns[i + 1] && pointsByColumns[i].x === pointsByColumns[i + 1].x) {\r\n                    continue\r\n                }\r\n                if (pointsByColumns[i].x - deltaX <= currentX && currentX <= pointsByColumns[i].x + deltaX) {\r\n                    return pointsByColumns[i]\r\n                }\r\n            }\r\n        }\r\n        return null\r\n    },\r\n    _moveSeparator: function(args) {\r\n        var _that$_draggingHeader;\r\n        var e = args.event;\r\n        var that = e.data;\r\n        var columnsSeparatorWidth = that._columnsSeparatorView.width();\r\n        var isNextColumnMode = isNextColumnResizingMode(that);\r\n        var deltaX = columnsSeparatorWidth / 2;\r\n        var parentOffset = that._$parentContainer.offset();\r\n        var parentOffsetLeft = parentOffset.left;\r\n        var eventData = getEventData(e);\r\n        var rtlEnabled = that.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n        var isDragging = null === (_that$_draggingHeader = that._draggingHeaderView) || void 0 === _that$_draggingHeader ? void 0 : _that$_draggingHeader.isDragging();\r\n        if (that._isResizing && that._resizingInfo) {\r\n            if ((parentOffsetLeft <= eventData.x || !isNextColumnMode && isRtlParentStyle) && (!isNextColumnMode || eventData.x <= parentOffsetLeft + getWidth(that._$parentContainer))) {\r\n                if (that._updateColumnsWidthIfNeeded(eventData.x)) {\r\n                    var $cell = that._columnHeadersView.getColumnElements().eq(that._resizingInfo.currentColumnIndex);\r\n                    var cell = $cell[0];\r\n                    if (cell) {\r\n                        var outerWidth = cell.getBoundingClientRect().width;\r\n                        that._columnsSeparatorView.moveByX($cell.offset().left + ((isNextColumnMode || isRtlParentStyle) && rtlEnabled ? 0 : outerWidth));\r\n                        that._tablePositionController.update(that._targetPoint.y);\r\n                        e.preventDefault()\r\n                    }\r\n                }\r\n            }\r\n        } else if (!isDragging) {\r\n            if (that._isHeadersRowArea(eventData.y)) {\r\n                if (that._previousParentOffset) {\r\n                    if (that._previousParentOffset.left !== parentOffset.left || that._previousParentOffset.top !== parentOffset.top) {\r\n                        that.pointsByColumns(null)\r\n                    }\r\n                }\r\n                that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, columnsSeparatorWidth);\r\n                that._previousParentOffset = parentOffset;\r\n                that._isReadyResizing = false;\r\n                if (that._targetPoint) {\r\n                    that._columnsSeparatorView.changeCursor(\"col-resize\");\r\n                    that._columnsSeparatorView.moveByX(that._targetPoint.x - deltaX);\r\n                    that._tablePositionController.update(that._targetPoint.y);\r\n                    that._isReadyResizing = true;\r\n                    e.preventDefault()\r\n                } else {\r\n                    that._columnsSeparatorView.changeCursor();\r\n                    that._columnsSeparatorView.moveByX(null)\r\n                }\r\n            } else {\r\n                that.pointsByColumns(null);\r\n                that._isReadyResizing = false;\r\n                that._columnsSeparatorView.changeCursor();\r\n                that._columnsSeparatorView.moveByX(null)\r\n            }\r\n        }\r\n    },\r\n    _endResizing: function(args) {\r\n        var e = args.event;\r\n        var that = e.data;\r\n        if (that._isResizing) {\r\n            that.pointsByColumns(null);\r\n            that._resizingInfo = null;\r\n            that._columnsSeparatorView.hide();\r\n            that._columnsSeparatorView.changeCursor();\r\n            that._trackerView.hide();\r\n            that._isReadyResizing = false;\r\n            that._isResizing = false\r\n        }\r\n    },\r\n    _getNextColumnIndex: function(currentColumnIndex) {\r\n        return currentColumnIndex + 1\r\n    },\r\n    _setupResizingInfo: function(posX) {\r\n        var currentColumnIndex = this._targetPoint.columnIndex;\r\n        var nextColumnIndex = this._getNextColumnIndex(currentColumnIndex);\r\n        var currentHeader = this._columnHeadersView.getHeaderElement(currentColumnIndex);\r\n        var nextHeader = this._columnHeadersView.getHeaderElement(nextColumnIndex);\r\n        this._resizingInfo = {\r\n            startPosX: posX,\r\n            currentColumnIndex: currentColumnIndex,\r\n            currentColumnWidth: currentHeader && currentHeader.length > 0 ? getBoundingRect(currentHeader[0]).width : 0,\r\n            nextColumnIndex: nextColumnIndex,\r\n            nextColumnWidth: nextHeader && nextHeader.length > 0 ? getBoundingRect(nextHeader[0]).width : 0\r\n        }\r\n    },\r\n    _startResizing: function(args) {\r\n        var e = args.event;\r\n        var that = e.data;\r\n        var eventData = getEventData(e);\r\n        if (isTouchEvent(e)) {\r\n            if (that._isHeadersRowArea(eventData.y)) {\r\n                that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH);\r\n                if (that._targetPoint) {\r\n                    that._columnsSeparatorView.moveByX(that._targetPoint.x - that._columnsSeparatorView.width() / 2);\r\n                    that._isReadyResizing = true\r\n                }\r\n            } else {\r\n                that._isReadyResizing = false\r\n            }\r\n        }\r\n        if (that._isReadyResizing) {\r\n            that._setupResizingInfo(eventData.x);\r\n            that._isResizing = true;\r\n            that._tablePositionController.update(that._targetPoint.y);\r\n            that._columnsSeparatorView.show();\r\n            that._trackerView.show();\r\n            var scrollable = that.component.getScrollable();\r\n            if (scrollable && that._isRtlParentStyle()) {\r\n                that._scrollRight = getWidth(scrollable.$content()) - getWidth(scrollable.container()) - scrollable.scrollLeft()\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation()\r\n        }\r\n        if (this.isResizing()) {\r\n            this.getController(\"editorFactory\").loseFocus()\r\n        }\r\n    },\r\n    _generatePointsByColumns: function() {\r\n        var that = this;\r\n        var columns = that._columnsController ? that._columnsController.getVisibleColumns() : [];\r\n        var cells = that._columnHeadersView.getColumnElements();\r\n        var pointsByColumns = [];\r\n        if (cells && cells.length > 0) {\r\n            pointsByColumns = gridCoreUtils.getPointsByColumns(cells, (function(point) {\r\n                return that._pointCreated(point, cells.length, columns)\r\n            }))\r\n        }\r\n        that._pointsByColumns = pointsByColumns\r\n    },\r\n    _unsubscribeFromEvents: function() {\r\n        this._moveSeparatorHandler && eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.move, MODULE_NAMESPACE), this._moveSeparatorHandler);\r\n        this._startResizingHandler && eventsEngine.off(this._$parentContainer, addNamespace(pointerEvents.down, MODULE_NAMESPACE), this._startResizingHandler);\r\n        if (this._endResizingHandler) {\r\n            eventsEngine.off(this._columnsSeparatorView.element(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this._endResizingHandler);\r\n            eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this._endResizingHandler)\r\n        }\r\n    },\r\n    _subscribeToEvents: function() {\r\n        this._moveSeparatorHandler = this.createAction(this._moveSeparator);\r\n        this._startResizingHandler = this.createAction(this._startResizing);\r\n        this._endResizingHandler = this.createAction(this._endResizing);\r\n        eventsEngine.on(domAdapter.getDocument(), addNamespace(pointerEvents.move, MODULE_NAMESPACE), this, this._moveSeparatorHandler);\r\n        eventsEngine.on(this._$parentContainer, addNamespace(pointerEvents.down, MODULE_NAMESPACE), this, this._startResizingHandler);\r\n        eventsEngine.on(this._columnsSeparatorView.element(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this, this._endResizingHandler);\r\n        eventsEngine.on(domAdapter.getDocument(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this, this._endResizingHandler)\r\n    },\r\n    _updateColumnsWidthIfNeeded: function(posX) {\r\n        var deltaX;\r\n        var needUpdate = false;\r\n        var nextCellWidth;\r\n        var resizingInfo = this._resizingInfo;\r\n        var columnsController = this._columnsController;\r\n        var visibleColumns = columnsController.getVisibleColumns();\r\n        var columnsSeparatorWidth = this._columnsSeparatorView.width();\r\n        var contentWidth = this._rowsView.contentWidth();\r\n        var isNextColumnMode = isNextColumnResizingMode(this);\r\n        var adaptColumnWidthByRatio = isNextColumnMode && this.option(\"adaptColumnWidthByRatio\") && !this.option(\"columnAutoWidth\");\r\n        var minWidth;\r\n        var nextColumn;\r\n        var cellWidth;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n\r\n        function isPercentWidth(width) {\r\n            return isString(width) && \"%\" === width.slice(-1)\r\n        }\r\n\r\n        function setColumnWidth(column, columnWidth, contentWidth, adaptColumnWidthByRatio) {\r\n            if (column) {\r\n                var oldColumnWidth = column.width;\r\n                if (oldColumnWidth) {\r\n                    adaptColumnWidthByRatio = isPercentWidth(oldColumnWidth)\r\n                }\r\n                if (adaptColumnWidthByRatio) {\r\n                    columnsController.columnOption(column.index, \"visibleWidth\", columnWidth);\r\n                    columnsController.columnOption(column.index, \"width\", (columnWidth / contentWidth * 100).toFixed(3) + \"%\")\r\n                } else {\r\n                    columnsController.columnOption(column.index, \"visibleWidth\", null);\r\n                    columnsController.columnOption(column.index, \"width\", columnWidth)\r\n                }\r\n            }\r\n        }\r\n        deltaX = posX - resizingInfo.startPosX;\r\n        if ((isNextColumnMode || isRtlParentStyle) && rtlEnabled) {\r\n            deltaX = -deltaX\r\n        }\r\n        cellWidth = resizingInfo.currentColumnWidth + deltaX;\r\n        var column = visibleColumns[resizingInfo.currentColumnIndex];\r\n        minWidth = column && column.minWidth || columnsSeparatorWidth;\r\n        needUpdate = cellWidth >= minWidth;\r\n        if (isNextColumnMode) {\r\n            nextCellWidth = resizingInfo.nextColumnWidth - deltaX;\r\n            nextColumn = visibleColumns[resizingInfo.nextColumnIndex];\r\n            minWidth = nextColumn && nextColumn.minWidth || columnsSeparatorWidth;\r\n            needUpdate = needUpdate && nextCellWidth >= minWidth\r\n        }\r\n        if (needUpdate) {\r\n            columnsController.beginUpdate();\r\n            cellWidth = Math.floor(cellWidth);\r\n            contentWidth = function(contentWidth, visibleColumns) {\r\n                var allColumnsHaveWidth = visibleColumns.every(column => column.width);\r\n                if (allColumnsHaveWidth) {\r\n                    var totalPercent = visibleColumns.reduce((sum, column) => {\r\n                        if (isPercentWidth(column.width)) {\r\n                            sum += parseFloat(column.width)\r\n                        }\r\n                        return sum\r\n                    }, 0);\r\n                    if (totalPercent > 100) {\r\n                        contentWidth = contentWidth / totalPercent * 100\r\n                    }\r\n                }\r\n                return contentWidth\r\n            }(contentWidth, visibleColumns);\r\n            setColumnWidth(column, cellWidth, contentWidth, adaptColumnWidthByRatio);\r\n            if (isNextColumnMode) {\r\n                nextCellWidth = Math.floor(nextCellWidth);\r\n                setColumnWidth(nextColumn, nextCellWidth, contentWidth, adaptColumnWidthByRatio)\r\n            } else {\r\n                var columnWidths = this._columnHeadersView.getColumnWidths();\r\n                columnWidths[resizingInfo.currentColumnIndex] = cellWidth;\r\n                var hasScroll = columnWidths.reduce((totalWidth, width) => totalWidth + width, 0) > this._rowsView.contentWidth();\r\n                if (!hasScroll) {\r\n                    var lastColumnIndex = gridCoreUtils.getLastResizableColumnIndex(visibleColumns);\r\n                    if (lastColumnIndex >= 0) {\r\n                        columnsController.columnOption(visibleColumns[lastColumnIndex].index, \"visibleWidth\", \"auto\")\r\n                    }\r\n                }\r\n                for (var i = 0; i < columnWidths.length; i++) {\r\n                    if (visibleColumns[i] && visibleColumns[i] !== column && void 0 === visibleColumns[i].width) {\r\n                        columnsController.columnOption(visibleColumns[i].index, \"width\", columnWidths[i])\r\n                    }\r\n                }\r\n            }\r\n            columnsController.endUpdate();\r\n            if (!isNextColumnMode) {\r\n                this.component.updateDimensions();\r\n                var scrollable = this.component.getScrollable();\r\n                if (scrollable && isRtlParentStyle) {\r\n                    var left = getWidth(scrollable.$content()) - getWidth(scrollable.container()) - this._scrollRight;\r\n                    scrollable.scrollTo({\r\n                        left: left\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        return needUpdate\r\n    },\r\n    _subscribeToCallback: function(callback, handler) {\r\n        callback.add(handler);\r\n        this._subscribesToCallbacks.push({\r\n            callback: callback,\r\n            handler: handler\r\n        })\r\n    },\r\n    _unsubscribeFromCallbacks: function() {\r\n        for (var i = 0; i < this._subscribesToCallbacks.length; i++) {\r\n            var subscribe = this._subscribesToCallbacks[i];\r\n            subscribe.callback.remove(subscribe.handler)\r\n        }\r\n        this._subscribesToCallbacks = []\r\n    },\r\n    _unsubscribes: function() {\r\n        this._unsubscribeFromEvents();\r\n        this._unsubscribeFromCallbacks()\r\n    },\r\n    _init: function() {\r\n        var that = this;\r\n        var generatePointsByColumnsHandler = function() {\r\n            if (!that._isResizing) {\r\n                that.pointsByColumns(null)\r\n            }\r\n        };\r\n        var generatePointsByColumnsScrollHandler = function(offset) {\r\n            if (that._scrollLeft !== offset.left) {\r\n                that._scrollLeft = offset.left;\r\n                that.pointsByColumns(null)\r\n            }\r\n        };\r\n        that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\r\n        that._columnHeadersView = that.getView(\"columnHeadersView\");\r\n        that._trackerView = that.getView(\"trackerView\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._tablePositionController = that.getController(\"tablePosition\");\r\n        that._$parentContainer = that.component.$element();\r\n        that._draggingHeaderView = that.component.getView(\"draggingHeaderView\");\r\n        that._subscribeToCallback(that._columnHeadersView.renderCompleted, generatePointsByColumnsHandler);\r\n        that._subscribeToCallback(that._columnHeadersView.resizeCompleted, generatePointsByColumnsHandler);\r\n        that._subscribeToCallback(that._columnsSeparatorView.renderCompleted, (function() {\r\n            that._unsubscribeFromEvents();\r\n            that._subscribeToEvents()\r\n        }));\r\n        that._subscribeToCallback(that._rowsView.renderCompleted, (function() {\r\n            that._rowsView.scrollChanged.remove(generatePointsByColumnsScrollHandler);\r\n            that._rowsView.scrollChanged.add(generatePointsByColumnsScrollHandler)\r\n        }));\r\n        var previousScrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\r\n        var previousTableHeight = 0;\r\n        that._subscribeToCallback(that.getController(\"tablePosition\").positionChanged, (function(e) {\r\n            if (that._isResizing && !that._rowsView.isResizing) {\r\n                var scrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\r\n                if (previousScrollbarVisibility !== scrollbarVisibility || previousTableHeight && previousTableHeight !== e.height) {\r\n                    previousScrollbarVisibility = scrollbarVisibility;\r\n                    previousTableHeight = e.height;\r\n                    that.component.updateDimensions()\r\n                } else {\r\n                    that._rowsView.updateFreeSpaceRowHeight()\r\n                }\r\n            }\r\n            previousTableHeight = e.height\r\n        }))\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            if (args.value) {\r\n                this._init();\r\n                this._subscribeToEvents()\r\n            } else {\r\n                this._unsubscribes()\r\n            }\r\n        }\r\n    },\r\n    isResizing: function() {\r\n        return this._isResizing\r\n    },\r\n    init: function() {\r\n        this._subscribesToCallbacks = [];\r\n        if (allowResizing(this)) {\r\n            this._init()\r\n        }\r\n    },\r\n    pointsByColumns: function(value) {\r\n        if (void 0 !== value) {\r\n            this._pointsByColumns = value\r\n        } else {\r\n            if (!this._pointsByColumns) {\r\n                this._generatePointsByColumns()\r\n            }\r\n            return this._pointsByColumns\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribes();\r\n        this.callBase()\r\n    }\r\n});\r\nvar TablePositionViewController = modules.ViewController.inherit({\r\n    update: function(top) {\r\n        var params = {};\r\n        var $element = this._columnHeadersView.element();\r\n        var offset = $element && $element.offset();\r\n        var offsetTop = offset && offset.top || 0;\r\n        var diffOffsetTop = isDefined(top) ? Math.abs(top - offsetTop) : 0;\r\n        var columnsHeadersHeight = this._columnHeadersView ? this._columnHeadersView.getHeight() : 0;\r\n        var scrollBarWidth = this._rowsView.getScrollbarWidth(true);\r\n        var rowsHeight = this._rowsView ? this._rowsView.height() - scrollBarWidth : 0;\r\n        var columnsResizerController = this.component.getController(\"columnsResizer\");\r\n        var draggingHeaderView = this.component.getView(\"draggingHeaderView\");\r\n        params.height = columnsHeadersHeight;\r\n        var isDraggingOrResizing = false !== columnsResizerController.isResizing() || draggingHeaderView.isDragging();\r\n        if (isDraggingOrResizing) {\r\n            params.height += rowsHeight - diffOffsetTop\r\n        }\r\n        if (null !== top && $element && $element.length) {\r\n            params.top = $element[0].offsetTop + diffOffsetTop\r\n        }\r\n        this.positionChanged.fire(params)\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that.callBase();\r\n        that._columnHeadersView = this.getView(\"columnHeadersView\");\r\n        that._rowsView = this.getView(\"rowsView\");\r\n        that._pagerView = this.getView(\"pagerView\");\r\n        that._rowsView.resizeCompleted.add((function() {\r\n            if (that.option(\"allowColumnResizing\")) {\r\n                var targetPoint = that.getController(\"columnsResizer\")._targetPoint;\r\n                that.update(targetPoint ? targetPoint.y : null)\r\n            }\r\n        }))\r\n    },\r\n    ctor: function(component) {\r\n        this.callBase(component);\r\n        this.positionChanged = Callbacks()\r\n    }\r\n});\r\nvar DraggingHeaderViewController = modules.ViewController.inherit({\r\n    _generatePointsByColumns: function(options) {\r\n        var that = this;\r\n        return gridCoreUtils.getPointsByColumns(options.columnElements, (function(point) {\r\n            return that._pointCreated(point, options.columns, options.targetDraggingPanel.getName(), options.sourceColumn)\r\n        }), options.isVerticalOrientation, options.startColumnIndex)\r\n    },\r\n    _pointCreated: function(point, columns, location, sourceColumn) {\r\n        var targetColumn = columns[point.columnIndex];\r\n        var prevColumn = columns[point.columnIndex - 1];\r\n        switch (location) {\r\n            case \"columnChooser\":\r\n                return true;\r\n            case \"headers\":\r\n                return sourceColumn && !sourceColumn.allowReordering || (!targetColumn || !targetColumn.allowReordering) && (!prevColumn || !prevColumn.allowReordering);\r\n            default:\r\n                return 0 === columns.length\r\n        }\r\n    },\r\n    _subscribeToEvents: function(draggingHeader, draggingPanels) {\r\n        var that = this;\r\n        each(draggingPanels, (function(_, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var columns;\r\n                var rowCount = draggingPanel.getRowCount ? draggingPanel.getRowCount() : 1;\r\n                var nameDraggingPanel = draggingPanel.getName();\r\n                var subscribeToEvents = function(index, columnElement) {\r\n                    if (!columnElement) {\r\n                        return\r\n                    }\r\n                    var $columnElement = $(columnElement);\r\n                    var column = columns[index];\r\n                    if (draggingPanel.allowDragging(column, nameDraggingPanel, draggingPanels)) {\r\n                        $columnElement.addClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventStart, MODULE_NAMESPACE), that.createAction((function(args) {\r\n                            var e = args.event;\r\n                            var eventData = getEventData(e);\r\n                            draggingHeader.dragHeader({\r\n                                deltaX: eventData.x - $(e.currentTarget).offset().left,\r\n                                deltaY: eventData.y - $(e.currentTarget).offset().top,\r\n                                sourceColumn: column,\r\n                                index: column.index,\r\n                                columnIndex: index,\r\n                                columnElement: $columnElement,\r\n                                sourceLocation: nameDraggingPanel,\r\n                                draggingPanels: draggingPanels,\r\n                                rowIndex: that._columnsController.getRowIndex(column.index, true)\r\n                            })\r\n                        })));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventMove, MODULE_NAMESPACE), {\r\n                            that: draggingHeader\r\n                        }, that.createAction(draggingHeader.moveHeader));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventEnd, MODULE_NAMESPACE), {\r\n                            that: draggingHeader\r\n                        }, that.createAction(draggingHeader.dropHeader))\r\n                    }\r\n                };\r\n                for (var i = 0; i < rowCount; i++) {\r\n                    var columnElements = draggingPanel.getColumnElements(i) || [];\r\n                    if (columnElements.length) {\r\n                        columns = draggingPanel.getColumns(i) || [];\r\n                        each(columnElements, subscribeToEvents)\r\n                    }\r\n                }\r\n            }\r\n        }))\r\n    },\r\n    _unsubscribeFromEvents: function(draggingHeader, draggingPanels) {\r\n        var that = this;\r\n        each(draggingPanels, (function(_, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var columnElements = draggingPanel.getColumnElements() || [];\r\n                each(columnElements, (function(index, columnElement) {\r\n                    var $columnElement = $(columnElement);\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventStart, MODULE_NAMESPACE));\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventMove, MODULE_NAMESPACE));\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventEnd, MODULE_NAMESPACE));\r\n                    $columnElement.removeClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS))\r\n                }))\r\n            }\r\n        }))\r\n    },\r\n    _getSeparator: function(targetLocation) {\r\n        return \"headers\" === targetLocation ? this._columnsSeparatorView : this._blockSeparatorView\r\n    },\r\n    hideSeparators: function(type) {\r\n        var blockSeparator = this._blockSeparatorView;\r\n        var columnsSeparator = this._columnsSeparatorView;\r\n        this._animationColumnIndex = null;\r\n        blockSeparator && blockSeparator.hide();\r\n        \"block\" !== type && columnsSeparator && columnsSeparator.hide()\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that.callBase();\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._columnHeadersView = that.getView(\"columnHeadersView\");\r\n        that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\r\n        that._draggingHeaderView = that.getView(\"draggingHeaderView\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._blockSeparatorView = that.getView(\"blockSeparatorView\");\r\n        that._headerPanelView = that.getView(\"headerPanel\");\r\n        that._columnChooserView = that.getView(\"columnChooserView\");\r\n        var subscribeToEvents = function() {\r\n            if (that._draggingHeaderView) {\r\n                var draggingPanels = [that._columnChooserView, that._columnHeadersView, that._headerPanelView];\r\n                that._unsubscribeFromEvents(that._draggingHeaderView, draggingPanels);\r\n                that._subscribeToEvents(that._draggingHeaderView, draggingPanels)\r\n            }\r\n        };\r\n        that._columnHeadersView.renderCompleted.add(subscribeToEvents);\r\n        that._headerPanelView && that._headerPanelView.renderCompleted.add(subscribeToEvents);\r\n        that._columnChooserView && that._columnChooserView.renderCompleted.add(subscribeToEvents)\r\n    },\r\n    allowDrop: function(parameters) {\r\n        return this._columnsController.allowMoveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation)\r\n    },\r\n    drag: function(parameters) {\r\n        var sourceIndex = parameters.sourceIndex;\r\n        var sourceLocation = parameters.sourceLocation;\r\n        var sourceColumnElement = parameters.sourceColumnElement;\r\n        var headersView = this._columnHeadersView;\r\n        var rowsView = this._rowsView;\r\n        if (sourceColumnElement) {\r\n            sourceColumnElement.css({\r\n                opacity: COLUMN_OPACITY\r\n            });\r\n            if (\"headers\" === sourceLocation) {\r\n                headersView && headersView.setRowsOpacity(sourceIndex, COLUMN_OPACITY);\r\n                rowsView && rowsView.setRowsOpacity(sourceIndex, COLUMN_OPACITY)\r\n            }\r\n        }\r\n    },\r\n    dock: function(parameters) {\r\n        var that = this;\r\n        var targetColumnIndex = isObject(parameters.targetColumnIndex) ? parameters.targetColumnIndex.columnIndex : parameters.targetColumnIndex;\r\n        var sourceLocation = parameters.sourceLocation;\r\n        var targetLocation = parameters.targetLocation;\r\n        var separator = that._getSeparator(targetLocation);\r\n        var hasTargetVisibleIndex = targetColumnIndex >= 0;\r\n        that._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).toggleClass(that.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS), \"headers\" !== sourceLocation && \"headers\" === targetLocation && !hasTargetVisibleIndex);\r\n        if (separator) {\r\n            if (that.allowDrop(parameters) && hasTargetVisibleIndex) {\r\n                if (\"group\" === targetLocation || \"columnChooser\" === targetLocation) {\r\n                    ! function() {\r\n                        if (that._animationColumnIndex !== targetColumnIndex) {\r\n                            that.hideSeparators();\r\n                            separator.element()[parameters.isLast ? \"insertAfter\" : \"insertBefore\"](parameters.targetColumnElement);\r\n                            that._animationColumnIndex = targetColumnIndex;\r\n                            separator.show(targetLocation)\r\n                        }\r\n                    }()\r\n                } else {\r\n                    that.hideSeparators(\"block\");\r\n                    that.getController(\"tablePosition\").update(parameters.posY);\r\n                    separator.moveByX(parameters.posX - separator.width());\r\n                    separator.show()\r\n                }\r\n            } else {\r\n                that.hideSeparators()\r\n            }\r\n        }\r\n    },\r\n    drop: function(parameters) {\r\n        var sourceColumnElement = parameters.sourceColumnElement;\r\n        if (sourceColumnElement) {\r\n            sourceColumnElement.css({\r\n                opacity: \"\"\r\n            });\r\n            this._columnHeadersView.setRowsOpacity(parameters.sourceIndex, \"\");\r\n            this._rowsView.setRowsOpacity(parameters.sourceIndex, \"\");\r\n            this._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).removeClass(this.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS))\r\n        }\r\n        if (this.allowDrop(parameters)) {\r\n            var separator = this._getSeparator(parameters.targetLocation);\r\n            if (separator) {\r\n                separator.hide()\r\n            }\r\n            this._columnsController.moveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        if (this._draggingHeaderView) {\r\n            this._unsubscribeFromEvents(this._draggingHeaderView, [this._columnChooserView, this._columnHeadersView, this._headerPanelView])\r\n        }\r\n    }\r\n});\r\nexport var columnsResizingReorderingModule = {\r\n    views: {\r\n        columnsSeparatorView: ColumnsSeparatorView,\r\n        blockSeparatorView: BlockSeparatorView,\r\n        draggingHeaderView: DraggingHeaderView,\r\n        trackerView: TrackerView\r\n    },\r\n    controllers: {\r\n        draggingHeader: DraggingHeaderViewController,\r\n        tablePosition: TablePositionViewController,\r\n        columnsResizer: ColumnsResizerViewController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _needUpdateRowHeight: function(itemCount) {\r\n                    var wordWrapEnabled = this.option(\"wordWrapEnabled\");\r\n                    var columnsResizerController = this.getController(\"columnsResizer\");\r\n                    var isResizing = columnsResizerController.isResizing();\r\n                    return this.callBase.apply(this, arguments) || itemCount > 0 && wordWrapEnabled && isResizing\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            editorFactory: {\r\n                renderFocusOverlay: function() {\r\n                    if (this.getController(\"columnsResizer\").isResizing()) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.columns_resizing_reordering.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnsResizingReorderingModule\r\n} from \"../grid_core/ui.grid_core.columns_resizing_reordering\";\r\nexport var DraggingHeaderView = columnsResizingReorderingModule.views.draggingHeaderView;\r\nexport var DraggingHeaderViewController = columnsResizingReorderingModule.controllers.draggingHeader;\r\nexport var ColumnsSeparatorView = columnsResizingReorderingModule.views.columnsSeparatorView;\r\nexport var TablePositionViewController = columnsResizingReorderingModule.controllers.tablePosition;\r\nexport var ColumnsResizerViewController = columnsResizingReorderingModule.controllers.columnsResizer;\r\nexport var TrackerView = columnsResizingReorderingModule.views.trackerView;\r\ngridCore.registerModule(\"columnsResizingReordering\", columnsResizingReorderingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.keyboard_navigation.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterHeight,\r\n    getHeight,\r\n    getWidth,\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport core from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    isDefined,\r\n    isEmptyObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    focused\r\n} from \"../widget/selectors\";\r\nimport {\r\n    addNamespace,\r\n    createEvent,\r\n    isCommandKeyPressed\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport * as accessibility from \"../shared/accessibility\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    keyboard\r\n} from \"../../events/short\";\r\nimport devices from \"../../core/devices\";\r\nvar ROWS_VIEW_CLASS = \"rowsview\";\r\nvar EDIT_FORM_CLASS = \"edit-form\";\r\nvar GROUP_FOOTER_CLASS = \"group-footer\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar EDIT_FORM_ITEM_CLASS = \"edit-form-item\";\r\nvar MASTER_DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar FREESPACE_ROW_CLASS = \"dx-freespace-row\";\r\nvar VIRTUAL_ROW_CLASS = \"dx-virtual-row\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar DROPDOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar COMMAND_EXPAND_CLASS = \"dx-command-expand\";\r\nvar COMMAND_SELECT_CLASS = \"dx-command-select\";\r\nvar COMMAND_EDIT_CLASS = \"dx-command-edit\";\r\nvar COMMAND_CELL_SELECTOR = \"[class^=dx-command]\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar DATEBOX_WIDGET_NAME = \"dxDateBox\";\r\nvar FOCUS_STATE_CLASS = \"dx-state-focused\";\r\nvar WIDGET_CLASS = \"dx-widget\";\r\nvar REVERT_BUTTON_CLASS = \"dx-revert-button\";\r\nvar FAST_EDITING_DELETE_KEY = \"delete\";\r\nvar INTERACTIVE_ELEMENTS_SELECTOR = \"input:not([type='hidden']), textarea, a, select, button, [tabindex], .dx-checkbox\";\r\nvar NON_FOCUSABLE_ELEMENTS_SELECTOR = \"\".concat(INTERACTIVE_ELEMENTS_SELECTOR, \", .dx-dropdowneditor-icon\");\r\nvar EDIT_MODE_ROW = \"row\";\r\nvar EDIT_MODE_FORM = \"form\";\r\nvar EDIT_MODE_BATCH = \"batch\";\r\nvar EDIT_MODE_CELL = \"cell\";\r\nvar FOCUS_TYPE_ROW = \"row\";\r\nvar FOCUS_TYPE_CELL = \"cell\";\r\nvar COLUMN_HEADERS_VIEW = \"columnHeadersView\";\r\n\r\nfunction isGroupRow($row) {\r\n    return $row && $row.hasClass(GROUP_ROW_CLASS)\r\n}\r\n\r\nfunction isDetailRow($row) {\r\n    return $row && $row.hasClass(MASTER_DETAIL_ROW_CLASS)\r\n}\r\n\r\nfunction isDataRow($row) {\r\n    return $row && !isGroupRow($row) && !isDetailRow($row)\r\n}\r\n\r\nfunction isNotFocusedRow($row) {\r\n    return !$row || $row.hasClass(FREESPACE_ROW_CLASS) || $row.hasClass(VIRTUAL_ROW_CLASS)\r\n}\r\n\r\nfunction isCellElement($element) {\r\n    return $element.length && \"TD\" === $element[0].tagName\r\n}\r\n\r\nfunction isEditorCell(that, $cell) {\r\n    return !that._isRowEditMode() && $cell && !$cell.hasClass(COMMAND_SELECT_CLASS) && $cell.hasClass(EDITOR_CELL_CLASS)\r\n}\r\n\r\nfunction isElementDefined($element) {\r\n    return isDefined($element) && $element.length > 0\r\n}\r\n\r\nfunction isMobile() {\r\n    return \"desktop\" !== devices.current().deviceType\r\n}\r\n\r\nfunction isCellInHeaderRow($cell) {\r\n    return !!$cell.parent(\".\".concat(HEADER_ROW_CLASS)).length\r\n}\r\n\r\nfunction isFixedColumnIndexOffsetRequired(that, column) {\r\n    var rtlEnabled = that.option(\"rtlEnabled\");\r\n    var result = false;\r\n    if (rtlEnabled) {\r\n        result = !(\"right\" === column.fixedPosition || isDefined(column.command) && !isDefined(column.fixedPosition))\r\n    } else {\r\n        result = !(!isDefined(column.fixedPosition) || \"left\" === column.fixedPosition)\r\n    }\r\n    return result\r\n}\r\n\r\nfunction shouldPreventScroll(that) {\r\n    var keyboardController = that.getController(\"keyboardNavigation\");\r\n    return keyboardController._isVirtualScrolling() ? that.option(\"focusedRowIndex\") === keyboardController.getRowIndex() : false\r\n}\r\nvar KeyboardNavigationController = core.ViewController.inherit({\r\n    init: function() {\r\n        this._dataController = this.getController(\"data\");\r\n        this._selectionController = this.getController(\"selection\");\r\n        this._editingController = this.getController(\"editing\");\r\n        this._headerPanel = this.getView(\"headerPanel\");\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._editorFactory = this.getController(\"editorFactory\");\r\n        if (this.isKeyboardEnabled()) {\r\n            accessibility.subscribeVisibilityChange();\r\n            this._updateFocusTimeout = null;\r\n            this._fastEditingStarted = false;\r\n            this._focusedCellPosition = {};\r\n            this._canceledCellPosition = null;\r\n            this._editorFactory.focused.add($element => {\r\n                this.setupFocusedView();\r\n                if (this._isNeedScroll) {\r\n                    if ($element.is(\":visible\") && this._focusedView && this._focusedView.getScrollable) {\r\n                        this._focusedView._scrollToElement($element);\r\n                        this._isNeedScroll = false\r\n                    }\r\n                }\r\n            });\r\n            this._initViewHandlers();\r\n            this._initDocumentHandlers();\r\n            this.createAction(\"onKeyDown\")\r\n        }\r\n    },\r\n    _initViewHandlers: function() {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var rowsViewFocusHandler = event => {\r\n            var $element = $(event.target);\r\n            var isRelatedTargetInRowsView = $(event.relatedTarget).closest(rowsView.element()).length;\r\n            var isCommandButton = $element.hasClass(\"dx-link\");\r\n            if (isCommandButton && !isRelatedTargetInRowsView && this._isEventInCurrentGrid(event)) {\r\n                var $focusedCell = this._getFocusedCell();\r\n                $focusedCell = !isElementDefined($focusedCell) ? rowsView.getCellElements(0).filter(\"[tabindex]\").eq(0) : $focusedCell;\r\n                if (!$element.closest($focusedCell).length) {\r\n                    event.preventDefault();\r\n                    eventsEngine.trigger($focusedCell, \"focus\")\r\n                }\r\n            }\r\n        };\r\n        rowsView.renderCompleted.add(e => {\r\n            var $rowsView = rowsView.element();\r\n            var isFullUpdate = !e || \"refresh\" === e.changeType;\r\n            var isFocusedViewCorrect = this._focusedView && this._focusedView.name === rowsView.name;\r\n            var needUpdateFocus = false;\r\n            var isAppend = e && (\"append\" === e.changeType || \"prepend\" === e.changeType);\r\n            var $focusedElement = $(\":focus\");\r\n            var isFocusedElementCorrect = !$focusedElement.length || $focusedElement.closest($rowsView).length;\r\n            eventsEngine.off($rowsView, \"focusin\", rowsViewFocusHandler);\r\n            eventsEngine.on($rowsView, \"focusin\", rowsViewFocusHandler);\r\n            this._initPointerEventHandler();\r\n            this._initKeyDownHandler();\r\n            this._setRowsViewAttributes();\r\n            if (isFocusedViewCorrect && isFocusedElementCorrect) {\r\n                needUpdateFocus = this._isNeedFocus ? !isAppend : this._isHiddenFocus && isFullUpdate;\r\n                needUpdateFocus && this._updateFocus(true)\r\n            }\r\n        })\r\n    },\r\n    _initDocumentHandlers: function() {\r\n        var document = domAdapter.getDocument();\r\n        this._documentClickHandler = this.createAction(e => {\r\n            var $target = $(e.event.target);\r\n            var isCurrentRowsViewClick = this._isEventInCurrentGrid(e.event) && $target.closest(\".\".concat(this.addWidgetPrefix(ROWS_VIEW_CLASS))).length;\r\n            var isEditorOverlay = $target.closest(\".\".concat(DROPDOWN_EDITOR_OVERLAY_CLASS)).length;\r\n            var columnsResizerController = this.getController(\"columnsResizer\");\r\n            var isColumnResizing = !!columnsResizerController && columnsResizerController.isResizing();\r\n            if (!isCurrentRowsViewClick && !isEditorOverlay && !isColumnResizing) {\r\n                var targetInsideFocusedView = this._focusedView ? $target.parents().filter(this._focusedView.element()).length > 0 : false;\r\n                !targetInsideFocusedView && this._resetFocusedCell(true);\r\n                this._resetFocusedView()\r\n            }\r\n        });\r\n        eventsEngine.on(document, addNamespace(pointerEvents.down, \"dxDataGridKeyboardNavigation\"), this._documentClickHandler)\r\n    },\r\n    _setRowsViewAttributes: function() {\r\n        var $rowsView = this._getRowsViewElement();\r\n        var isGridEmpty = !this._dataController.getVisibleRows().length;\r\n        if (isGridEmpty) {\r\n            this._applyTabIndexToElement($rowsView)\r\n        }\r\n    },\r\n    _initPointerEventHandler: function() {\r\n        var pointerEventName = !isMobile() ? pointerEvents.down : clickEventName;\r\n        var clickSelector = \".\".concat(ROW_CLASS, \" > td, .\").concat(ROW_CLASS);\r\n        var $rowsView = this._getRowsViewElement();\r\n        if (!isDefined(this._pointerEventAction)) {\r\n            this._pointerEventAction = this.createAction(this._pointerEventHandler)\r\n        }\r\n        eventsEngine.off($rowsView, addNamespace(pointerEventName, \"dxDataGridKeyboardNavigation\"), this._pointerEventAction);\r\n        eventsEngine.on($rowsView, addNamespace(pointerEventName, \"dxDataGridKeyboardNavigation\"), clickSelector, this._pointerEventAction)\r\n    },\r\n    _initKeyDownHandler: function() {\r\n        var $rowsView = this._getRowsViewElement();\r\n        keyboard.off(this._keyDownListener);\r\n        this._keyDownListener = keyboard.on($rowsView, null, e => this._keyDownHandler(e))\r\n    },\r\n    dispose: function() {\r\n        this.callBase();\r\n        this._resetFocusedView();\r\n        keyboard.off(this._keyDownListener);\r\n        eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.down, \"dxDataGridKeyboardNavigation\"), this._documentClickHandler);\r\n        clearTimeout(this._updateFocusTimeout);\r\n        accessibility.unsubscribeVisibilityChange()\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"keyboardNavigation\":\r\n            case \"useLegacyKeyboardNavigation\":\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    isRowFocusType: function() {\r\n        return this.focusType === FOCUS_TYPE_ROW\r\n    },\r\n    isCellFocusType: function() {\r\n        return this.focusType === FOCUS_TYPE_CELL\r\n    },\r\n    setRowFocusType: function() {\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            this.focusType = FOCUS_TYPE_ROW\r\n        }\r\n    },\r\n    setCellFocusType: function() {\r\n        this.focusType = FOCUS_TYPE_CELL\r\n    },\r\n    _keyDownHandler: function(e) {\r\n        var needStopPropagation = true;\r\n        var isHandled = this._processOnKeyDown(e);\r\n        var isEditing = this._editingController.isEditing();\r\n        var originalEvent = e.originalEvent;\r\n        if (originalEvent.isDefaultPrevented()) {\r\n            return\r\n        }\r\n        this._isNeedFocus = true;\r\n        this._isNeedScroll = true;\r\n        this._updateFocusedCellPositionByTarget(originalEvent.target);\r\n        if (!isHandled) {\r\n            switch (e.keyName) {\r\n                case \"leftArrow\":\r\n                case \"rightArrow\":\r\n                    this._leftRightKeysHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"upArrow\":\r\n                case \"downArrow\":\r\n                    if (e.ctrl) {\r\n                        accessibility.selectView(\"rowsView\", this, originalEvent)\r\n                    } else {\r\n                        this._upDownKeysHandler(e, isEditing)\r\n                    }\r\n                    isHandled = true;\r\n                    break;\r\n                case \"pageUp\":\r\n                case \"pageDown\":\r\n                    this._pageUpDownKeyHandler(e);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"space\":\r\n                    this._spaceKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"A\":\r\n                    if (isCommandKeyPressed(e.originalEvent)) {\r\n                        this._ctrlAKeyHandler(e, isEditing);\r\n                        isHandled = true\r\n                    } else {\r\n                        isHandled = this._beginFastEditing(e.originalEvent)\r\n                    }\r\n                    break;\r\n                case \"tab\":\r\n                    this._tabKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"enter\":\r\n                    this._enterKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"escape\":\r\n                    this._escapeKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"F\":\r\n                    if (isCommandKeyPressed(e.originalEvent)) {\r\n                        this._ctrlFKeyHandler(e);\r\n                        isHandled = true\r\n                    } else {\r\n                        isHandled = this._beginFastEditing(e.originalEvent)\r\n                    }\r\n                    break;\r\n                case \"F2\":\r\n                    this._f2KeyHandler();\r\n                    isHandled = true;\r\n                    break;\r\n                case \"del\":\r\n                case \"backspace\":\r\n                    if (this._isFastEditingAllowed() && !this._isFastEditingStarted()) {\r\n                        isHandled = this._beginFastEditing(originalEvent, true)\r\n                    }\r\n            }\r\n            if (!isHandled && !this._beginFastEditing(originalEvent)) {\r\n                this._isNeedFocus = false;\r\n                this._isNeedScroll = false;\r\n                needStopPropagation = false\r\n            }\r\n            if (needStopPropagation) {\r\n                originalEvent.stopPropagation()\r\n            }\r\n        }\r\n    },\r\n    _processOnKeyDown: function(eventArgs) {\r\n        var originalEvent = eventArgs.originalEvent;\r\n        var args = {\r\n            handled: false,\r\n            event: originalEvent\r\n        };\r\n        this.executeAction(\"onKeyDown\", args);\r\n        eventArgs.ctrl = originalEvent.ctrlKey;\r\n        eventArgs.alt = originalEvent.altKey;\r\n        eventArgs.shift = originalEvent.shiftKey;\r\n        return !!args.handled\r\n    },\r\n    _closeEditCell: function() {\r\n        setTimeout(() => {\r\n            this._editingController.closeEditCell()\r\n        })\r\n    },\r\n    _leftRightKeysHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $event = eventArgs.originalEvent;\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        var directionCode = this._getDirectionCodeByKey(eventArgs.keyName);\r\n        var isEditingNavigationMode = this._isFastEditingStarted();\r\n        var allowNavigate = (!isEditing || isEditingNavigationMode) && isDataRow($row);\r\n        if (allowNavigate) {\r\n            this.setCellFocusType();\r\n            isEditingNavigationMode && this._closeEditCell();\r\n            if (this._isVirtualColumnRender()) {\r\n                this._processVirtualHorizontalPosition(directionCode)\r\n            }\r\n            var $cell = this._getNextCell(directionCode);\r\n            if (isElementDefined($cell)) {\r\n                this._arrowKeysHandlerFocusCell($event, $cell, directionCode)\r\n            }\r\n            $event && $event.preventDefault()\r\n        }\r\n    },\r\n    _upDownKeysHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this._focusedCellPosition.rowIndex;\r\n        var visibleRowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(visibleRowIndex);\r\n        var $event = eventArgs.originalEvent;\r\n        var isUpArrow = \"upArrow\" === eventArgs.keyName;\r\n        var dataSource = this._dataController.dataSource();\r\n        var isEditingNavigationMode = this._isFastEditingStarted();\r\n        var allowNavigate = (!isEditing || isEditingNavigationMode) && $row && !isDetailRow($row);\r\n        if (allowNavigate) {\r\n            isEditingNavigationMode && this._closeEditCell();\r\n            if (!this._navigateNextCell($event, eventArgs.keyName)) {\r\n                if (this._isVirtualRowRender() && isUpArrow && dataSource && !dataSource.isLoading()) {\r\n                    var rowHeight = getOuterHeight($row);\r\n                    rowIndex = this._focusedCellPosition.rowIndex - 1;\r\n                    this._scrollBy(0, -rowHeight, rowIndex, $event)\r\n                }\r\n            }\r\n            $event && $event.preventDefault()\r\n        }\r\n    },\r\n    _pageUpDownKeyHandler: function(eventArgs) {\r\n        var pageIndex = this._dataController.pageIndex();\r\n        var pageCount = this._dataController.pageCount();\r\n        var pagingEnabled = this.option(\"paging.enabled\");\r\n        var isPageUp = \"pageUp\" === eventArgs.keyName;\r\n        var pageStep = isPageUp ? -1 : 1;\r\n        var scrollable = this.getView(\"rowsView\").getScrollable();\r\n        if (pagingEnabled && !this._isVirtualScrolling()) {\r\n            if ((isPageUp ? pageIndex > 0 : pageIndex < pageCount - 1) && !this._isVirtualScrolling()) {\r\n                this._dataController.pageIndex(pageIndex + pageStep);\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        } else if (scrollable && getHeight(scrollable.container()) < getHeight(scrollable.$content())) {\r\n            this._scrollBy(0, getHeight(scrollable.container()) * pageStep);\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _spaceKeyHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $target = $(eventArgs.originalEvent && eventArgs.originalEvent.target);\r\n        if (this.option(\"selection\") && \"none\" !== this.option(\"selection\").mode && !isEditing) {\r\n            var isFocusedRowElement = \"row\" === this._getElementType($target) && this.isRowFocusType() && isDataRow($target);\r\n            var isFocusedSelectionCell = $target.hasClass(COMMAND_SELECT_CLASS);\r\n            if (isFocusedSelectionCell && \"onClick\" === this.option(\"selection.showCheckBoxesMode\")) {\r\n                this._selectionController.startSelectionWithCheckboxes()\r\n            }\r\n            if (isFocusedRowElement || $target.parent().hasClass(DATA_ROW_CLASS) || $target.hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\r\n                this._selectionController.changeItemSelection(rowIndex, {\r\n                    shift: eventArgs.shift,\r\n                    control: eventArgs.ctrl\r\n                });\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        } else {\r\n            this._beginFastEditing(eventArgs.originalEvent)\r\n        }\r\n    },\r\n    _ctrlAKeyHandler: function(eventArgs, isEditing) {\r\n        if (!isEditing && !eventArgs.alt && \"multiple\" === this.option(\"selection.mode\") && this.option(\"selection.allowSelectAll\")) {\r\n            this._selectionController.selectAll();\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _tabKeyHandler: function(eventArgs, isEditing) {\r\n        var editingOptions = this.option(\"editing\");\r\n        var direction = eventArgs.shift ? \"previous\" : \"next\";\r\n        var isCellPositionDefined = isDefined(this._focusedCellPosition) && !isEmptyObject(this._focusedCellPosition);\r\n        var isOriginalHandlerRequired = !isCellPositionDefined || !eventArgs.shift && this._isLastValidCell(this._focusedCellPosition) || eventArgs.shift && this._isFirstValidCell(this._focusedCellPosition);\r\n        var eventTarget = eventArgs.originalEvent.target;\r\n        var focusedViewElement = this._focusedView && this._focusedView.element();\r\n        if (this._handleTabKeyOnMasterDetailCell(eventTarget, direction)) {\r\n            return\r\n        }\r\n        $(focusedViewElement).addClass(FOCUS_STATE_CLASS);\r\n        if (editingOptions && eventTarget && !isOriginalHandlerRequired) {\r\n            if ($(eventTarget).hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\r\n                this._resetFocusedCell()\r\n            }\r\n            if (this._isVirtualColumnRender()) {\r\n                this._processVirtualHorizontalPosition(direction)\r\n            }\r\n            if (isEditing) {\r\n                if (!this._editingCellTabHandler(eventArgs, direction)) {\r\n                    return\r\n                }\r\n            } else if (this._targetCellTabHandler(eventArgs, direction)) {\r\n                isOriginalHandlerRequired = true\r\n            }\r\n        }\r\n        if (isOriginalHandlerRequired) {\r\n            this._editorFactory.loseFocus();\r\n            if (this._editingController.isEditing() && !this._isRowEditMode()) {\r\n                this._resetFocusedCell(true);\r\n                this._resetFocusedView();\r\n                this._closeEditCell()\r\n            }\r\n        } else {\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _getMaxHorizontalOffset: function() {\r\n        var scrollable = this.component.getScrollable();\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var offset = scrollable ? scrollable.scrollWidth() - getWidth(rowsView.element()) : 0;\r\n        return offset\r\n    },\r\n    _isColumnRendered: function(columnIndex) {\r\n        var allVisibleColumns = this._columnsController.getVisibleColumns(null, true);\r\n        var renderedVisibleColumns = this._columnsController.getVisibleColumns();\r\n        var column = allVisibleColumns[columnIndex];\r\n        var result = false;\r\n        if (column) {\r\n            result = renderedVisibleColumns.indexOf(column) >= 0\r\n        }\r\n        return result\r\n    },\r\n    _isFixedColumn: function(columnIndex) {\r\n        var allVisibleColumns = this._columnsController.getVisibleColumns(null, true);\r\n        var column = allVisibleColumns[columnIndex];\r\n        return !!column && !!column.fixed\r\n    },\r\n    _isColumnVirtual: function(columnIndex) {\r\n        var localColumnIndex = columnIndex - this._columnsController.getColumnIndexOffset();\r\n        var visibleColumns = this._columnsController.getVisibleColumns();\r\n        var column = visibleColumns[localColumnIndex];\r\n        return !!column && \"virtual\" === column.command\r\n    },\r\n    _processVirtualHorizontalPosition: function(direction) {\r\n        var scrollable = this.component.getScrollable();\r\n        var columnIndex = this.getColumnIndex();\r\n        var nextColumnIndex;\r\n        var horizontalScrollPosition = 0;\r\n        var needToScroll = false;\r\n        switch (direction) {\r\n            case \"next\":\r\n            case \"nextInRow\":\r\n                var columnsCount = this._getVisibleColumnCount();\r\n                nextColumnIndex = columnIndex + 1;\r\n                horizontalScrollPosition = this.option(\"rtlEnabled\") ? this._getMaxHorizontalOffset() : 0;\r\n                if (\"next\" === direction) {\r\n                    needToScroll = columnsCount === nextColumnIndex || this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                } else {\r\n                    needToScroll = columnsCount > nextColumnIndex && this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                }\r\n                break;\r\n            case \"previous\":\r\n            case \"previousInRow\":\r\n                nextColumnIndex = columnIndex - 1;\r\n                horizontalScrollPosition = this.option(\"rtlEnabled\") ? 0 : this._getMaxHorizontalOffset();\r\n                if (\"previous\" === direction) {\r\n                    var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n                    var leftEdgePosition = nextColumnIndex < 0 && 0 === columnIndexOffset;\r\n                    needToScroll = leftEdgePosition || this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                } else {\r\n                    needToScroll = nextColumnIndex >= 0 && this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                }\r\n        }\r\n        if (needToScroll) {\r\n            scrollable.scrollTo({\r\n                left: horizontalScrollPosition\r\n            })\r\n        } else if (isDefined(nextColumnIndex) && isDefined(direction) && this._isColumnVirtual(nextColumnIndex)) {\r\n            horizontalScrollPosition = this._getHorizontalScrollPositionOffset(direction);\r\n            0 !== horizontalScrollPosition && scrollable.scrollBy({\r\n                left: horizontalScrollPosition,\r\n                top: 0\r\n            })\r\n        }\r\n    },\r\n    _getHorizontalScrollPositionOffset: function(direction) {\r\n        var positionOffset = 0;\r\n        var $currentCell = this._getCell(this._focusedCellPosition);\r\n        var currentCellWidth = $currentCell && getOuterWidth($currentCell);\r\n        if (currentCellWidth > 0) {\r\n            var rtlMultiplier = this.option(\"rtlEnabled\") ? -1 : 1;\r\n            positionOffset = \"nextInRow\" === direction || \"next\" === direction ? currentCellWidth * rtlMultiplier : currentCellWidth * rtlMultiplier * -1\r\n        }\r\n        return positionOffset\r\n    },\r\n    _editingCellTabHandler: function(eventArgs, direction) {\r\n        var eventTarget = eventArgs.originalEvent.target;\r\n        var $cell = this._getCellElementFromTarget(eventTarget);\r\n        var isEditingAllowed;\r\n        var $event = eventArgs.originalEvent;\r\n        var elementType = this._getElementType(eventTarget);\r\n        if ($cell.is(COMMAND_CELL_SELECTOR)) {\r\n            return !this._targetCellTabHandler(eventArgs, direction)\r\n        }\r\n        this._updateFocusedCellPosition($cell);\r\n        var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\r\n        $cell = nextCellInfo.$cell;\r\n        if (!$cell || this._handleTabKeyOnMasterDetailCell($cell, direction)) {\r\n            return false\r\n        }\r\n        var columnsController = this._columnsController;\r\n        var cellIndex = this.getView(\"rowsView\").getCellIndex($cell);\r\n        var columnIndex = cellIndex + columnsController.getColumnIndexOffset();\r\n        var column = columnsController.getVisibleColumns(null, true)[columnIndex];\r\n        var $row = $cell.parent();\r\n        var rowIndex = this._getRowIndex($row);\r\n        var row = this._dataController.items()[rowIndex];\r\n        var editingController = this._editingController;\r\n        if (column && column.allowEditing) {\r\n            var _isDataRow = !row || \"data\" === row.rowType;\r\n            isEditingAllowed = editingController.allowUpdating({\r\n                row: row\r\n            }) ? _isDataRow : row && row.isNewRow\r\n        }\r\n        if (!isEditingAllowed) {\r\n            this._closeEditCell()\r\n        }\r\n        if (this._focusCell($cell, !nextCellInfo.isHighlighted)) {\r\n            if (!this._isRowEditMode() && isEditingAllowed) {\r\n                this._editFocusedCell()\r\n            } else {\r\n                this._focusInteractiveElement($cell, eventArgs.shift)\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _targetCellTabHandler: function(eventArgs, direction) {\r\n        var $event = eventArgs.originalEvent;\r\n        var eventTarget = $event.target;\r\n        var $cell = this._getCellElementFromTarget(eventTarget);\r\n        var $lastInteractiveElement = this._getInteractiveElement($cell, !eventArgs.shift);\r\n        var isOriginalHandlerRequired = false;\r\n        var elementType;\r\n        if (!isEditorCell(this, $cell) && $lastInteractiveElement.length && eventTarget !== $lastInteractiveElement.get(0)) {\r\n            isOriginalHandlerRequired = true\r\n        } else {\r\n            if (void 0 === this._focusedCellPosition.rowIndex && $(eventTarget).hasClass(ROW_CLASS)) {\r\n                this._updateFocusedCellPosition($cell)\r\n            }\r\n            elementType = this._getElementType(eventTarget);\r\n            if (this.isRowFocusType()) {\r\n                this.setCellFocusType();\r\n                if (\"row\" === elementType && isDataRow($(eventTarget))) {\r\n                    eventTarget = this.getFirstValidCellInRow($(eventTarget));\r\n                    elementType = this._getElementType(eventTarget)\r\n                }\r\n            }\r\n            var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\r\n            $cell = nextCellInfo.$cell;\r\n            if (!$cell) {\r\n                return false\r\n            }\r\n            $cell = this._checkNewLineTransition($event, $cell);\r\n            if (!$cell) {\r\n                return false\r\n            }\r\n            this._focusCell($cell, !nextCellInfo.isHighlighted);\r\n            if (!isEditorCell(this, $cell)) {\r\n                this._focusInteractiveElement($cell, eventArgs.shift)\r\n            }\r\n        }\r\n        return isOriginalHandlerRequired\r\n    },\r\n    _getNextCellByTabKey: function($event, direction, elementType) {\r\n        var $cell = this._getNextCell(direction, elementType);\r\n        var args = $cell && this._fireFocusedCellChanging($event, $cell, true);\r\n        if (!args || args.cancel) {\r\n            return {}\r\n        }\r\n        if (args.$newCellElement) {\r\n            $cell = args.$newCellElement\r\n        }\r\n        return {\r\n            $cell: $cell,\r\n            isHighlighted: args.isHighlighted\r\n        }\r\n    },\r\n    _checkNewLineTransition: function($event, $cell) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = $cell.parent();\r\n        if (rowIndex !== this._getRowIndex($row)) {\r\n            var cellPosition = this._getCellPosition($cell);\r\n            var args = this._fireFocusedRowChanging($event, $row);\r\n            if (args.cancel) {\r\n                return\r\n            }\r\n            if (args.rowIndexChanged) {\r\n                this.setFocusedColumnIndex(cellPosition.columnIndex);\r\n                $cell = this._getFocusedCell()\r\n            }\r\n        }\r\n        return $cell\r\n    },\r\n    _enterKeyHandler: function(eventArgs, isEditing) {\r\n        var $cell = this._getFocusedCell();\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        if (this.option(\"grouping.allowCollapsing\") && isGroupRow($row) || this.option(\"masterDetail.enabled\") && $cell && $cell.hasClass(COMMAND_EXPAND_CLASS)) {\r\n            var key = this._dataController.getKeyByRowIndex(rowIndex);\r\n            var item = this._dataController.items()[rowIndex];\r\n            if (void 0 !== key && item && item.data && !item.data.isContinuation) {\r\n                this._dataController.changeRowExpand(key)\r\n            }\r\n        } else {\r\n            this._processEnterKeyForDataCell(eventArgs, isEditing)\r\n        }\r\n    },\r\n    _processEnterKeyForDataCell: function(eventArgs, isEditing) {\r\n        var direction = this._getEnterKeyDirection(eventArgs);\r\n        var allowEditingOnEnterKey = this._allowEditingOnEnterKey();\r\n        if (isEditing || !allowEditingOnEnterKey && direction) {\r\n            this._handleEnterKeyEditingCell(eventArgs.originalEvent);\r\n            if (\"next\" === direction || \"previous\" === direction) {\r\n                this._targetCellTabHandler(eventArgs, direction)\r\n            } else if (\"upArrow\" === direction || \"downArrow\" === direction) {\r\n                this._navigateNextCell(eventArgs.originalEvent, direction)\r\n            }\r\n        } else if (allowEditingOnEnterKey) {\r\n            this._startEditing(eventArgs)\r\n        }\r\n    },\r\n    _getEnterKeyDirection: function(eventArgs) {\r\n        var enterKeyDirection = this.option(\"keyboardNavigation.enterKeyDirection\");\r\n        var isShift = eventArgs.shift;\r\n        if (\"column\" === enterKeyDirection) {\r\n            return isShift ? \"upArrow\" : \"downArrow\"\r\n        }\r\n        if (\"row\" === enterKeyDirection) {\r\n            return isShift ? \"previous\" : \"next\"\r\n        }\r\n    },\r\n    _handleEnterKeyEditingCell: function(event) {\r\n        var target = event.target;\r\n        var $cell = this._getCellElementFromTarget(target);\r\n        var isRowEditMode = this._isRowEditMode();\r\n        this._updateFocusedCellPosition($cell);\r\n        if (isRowEditMode) {\r\n            this._focusEditFormCell($cell);\r\n            setTimeout(this._editingController.saveEditData.bind(this._editingController))\r\n        } else {\r\n            eventsEngine.trigger($(target), \"change\");\r\n            this._closeEditCell();\r\n            event.preventDefault()\r\n        }\r\n    },\r\n    _escapeKeyHandler: function(eventArgs, isEditing) {\r\n        var $cell = this._getCellElementFromTarget(eventArgs.originalEvent.target);\r\n        if (isEditing) {\r\n            this._updateFocusedCellPosition($cell);\r\n            if (!this._isRowEditMode()) {\r\n                if (\"cell\" === this._editingController.getEditMode()) {\r\n                    this._editingController.cancelEditData()\r\n                } else {\r\n                    this._closeEditCell()\r\n                }\r\n            } else {\r\n                this._focusEditFormCell($cell);\r\n                this._editingController.cancelEditData();\r\n                if (0 === this._dataController.items().length) {\r\n                    this._resetFocusedCell();\r\n                    this._editorFactory.loseFocus()\r\n                }\r\n            }\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _ctrlFKeyHandler: function(eventArgs) {\r\n        if (this.option(\"searchPanel.visible\")) {\r\n            var searchTextEditor = this._headerPanel.getSearchTextEditor();\r\n            if (searchTextEditor) {\r\n                searchTextEditor.focus();\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        }\r\n    },\r\n    _f2KeyHandler: function() {\r\n        var isEditing = this._editingController.isEditing();\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        if (!isEditing && isDataRow($row)) {\r\n            this._startEditing()\r\n        }\r\n    },\r\n    _navigateNextCell: function($event, keyCode) {\r\n        var $cell = this._getNextCell(keyCode);\r\n        var directionCode = this._getDirectionCodeByKey(keyCode);\r\n        var isCellValid = $cell && this._isCellValid($cell);\r\n        var result = isCellValid ? this._arrowKeysHandlerFocusCell($event, $cell, directionCode) : false;\r\n        return result\r\n    },\r\n    _arrowKeysHandlerFocusCell: function($event, $nextCell, direction) {\r\n        var isVerticalDirection = \"prevRow\" === direction || \"nextRow\" === direction;\r\n        var args = this._fireFocusChangingEvents($event, $nextCell, isVerticalDirection, true);\r\n        $nextCell = args.$newCellElement;\r\n        if (!args.cancel && this._isCellValid($nextCell)) {\r\n            this._focus($nextCell, !args.isHighlighted);\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    _beginFastEditing: function(originalEvent, isDeleting) {\r\n        if (!this._isFastEditingAllowed() || originalEvent.altKey || originalEvent.ctrlKey || this._editingController.isEditing()) {\r\n            return false\r\n        }\r\n        if (isDeleting) {\r\n            this._startEditing(originalEvent, FAST_EDITING_DELETE_KEY)\r\n        } else {\r\n            var key = originalEvent.key;\r\n            var keyCode = originalEvent.keyCode || originalEvent.which;\r\n            var fastEditingKey = key || keyCode && String.fromCharCode(keyCode);\r\n            if (fastEditingKey && (1 === fastEditingKey.length || fastEditingKey === FAST_EDITING_DELETE_KEY)) {\r\n                this._startEditing(originalEvent, fastEditingKey)\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _pointerEventHandler: function(e) {\r\n        var event = e.event || e;\r\n        var $target = $(event.currentTarget);\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var focusedViewElement = rowsView && rowsView.element();\r\n        var $parent = $target.parent();\r\n        var isInteractiveElement = $(event.target).is(INTERACTIVE_ELEMENTS_SELECTOR);\r\n        var isRevertButton = !!$(event.target).closest(\".\".concat(REVERT_BUTTON_CLASS)).length;\r\n        var isExpandCommandCell = $target.hasClass(COMMAND_EXPAND_CLASS);\r\n        if (!this._isEventInCurrentGrid(event)) {\r\n            return\r\n        }\r\n        if (!isRevertButton && (this._isCellValid($target, !isInteractiveElement) || isExpandCommandCell)) {\r\n            $target = this._isInsideEditForm($target) ? $(event.target) : $target;\r\n            this._focusView();\r\n            $(focusedViewElement).removeClass(FOCUS_STATE_CLASS);\r\n            if ($parent.hasClass(FREESPACE_ROW_CLASS)) {\r\n                this._updateFocusedCellPosition($target);\r\n                this._applyTabIndexToElement(this._focusedView.element());\r\n                this._focusedView.focus()\r\n            } else if (!this._isMasterDetailCell($target)) {\r\n                this._clickTargetCellHandler(event, $target)\r\n            } else {\r\n                this._updateFocusedCellPosition($target)\r\n            }\r\n        } else if ($target.is(\"td\")) {\r\n            this._resetFocusedCell()\r\n        }\r\n    },\r\n    _clickTargetCellHandler: function(event, $cell) {\r\n        var columnIndex = this.getView(\"rowsView\").getCellIndex($cell);\r\n        var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n        var isCellEditMode = this._isCellEditMode();\r\n        this.setCellFocusType();\r\n        var args = this._fireFocusChangingEvents(event, $cell, true);\r\n        $cell = args.$newCellElement;\r\n        if (!args.cancel) {\r\n            if (args.resetFocusedRow) {\r\n                this.getController(\"focus\")._resetFocusedRow();\r\n                return\r\n            }\r\n            if (args.rowIndexChanged) {\r\n                $cell = this._getFocusedCell()\r\n            }\r\n            if (!args.isHighlighted && !isCellEditMode) {\r\n                this.setRowFocusType()\r\n            }\r\n            this._updateFocusedCellPosition($cell);\r\n            if (this._allowRowUpdating() && isCellEditMode && column && column.allowEditing) {\r\n                this._isNeedFocus = false;\r\n                this._isHiddenFocus = false\r\n            } else {\r\n                var $target = event && $(event.target).closest(NON_FOCUSABLE_ELEMENTS_SELECTOR + \", td\");\r\n                var skipFocusEvent = $target && $target.not($cell).is(NON_FOCUSABLE_ELEMENTS_SELECTOR);\r\n                var isEditor = !!column && !column.command && $cell.hasClass(EDITOR_CELL_CLASS);\r\n                var isDisabled = !isEditor && (!args.isHighlighted || skipFocusEvent);\r\n                this._focus($cell, isDisabled, skipFocusEvent)\r\n            }\r\n        } else {\r\n            this.setRowFocusType();\r\n            this.setFocusedRowIndex(args.prevRowIndex);\r\n            $cell = this._getFocusedCell();\r\n            if (this._editingController.isEditing() && isCellEditMode) {\r\n                this._closeEditCell()\r\n            }\r\n        }\r\n    },\r\n    _allowRowUpdating: function() {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var row = this._dataController.items()[rowIndex];\r\n        return this._editingController.allowUpdating({\r\n            row: row\r\n        }, \"click\")\r\n    },\r\n    focus: function(element) {\r\n        var activeElementSelector;\r\n        var focusedRowEnabled = this.option(\"focusedRowEnabled\");\r\n        var isHighlighted = isCellElement($(element));\r\n        if (!element) {\r\n            activeElementSelector = \".dx-datagrid-rowsview .dx-row[tabindex]\";\r\n            if (!focusedRowEnabled) {\r\n                activeElementSelector += \", .dx-datagrid-rowsview .dx-row > td[tabindex]\"\r\n            }\r\n            element = this.component.$element().find(activeElementSelector).first()\r\n        }\r\n        element && this._focusElement($(element), isHighlighted)\r\n    },\r\n    getFocusedView: function() {\r\n        return this._focusedView\r\n    },\r\n    setupFocusedView: function() {\r\n        if (this.isKeyboardEnabled() && !isDefined(this._focusedView)) {\r\n            this._focusView()\r\n        }\r\n    },\r\n    _focusElement: function($element, isHighlighted) {\r\n        var rowsViewElement = $(this._getRowsViewElement());\r\n        var $focusedView = $element.closest(rowsViewElement);\r\n        var isRowFocusType = this.isRowFocusType();\r\n        var args = {};\r\n        if (!$focusedView.length || isCellElement($element) && !this._isCellValid($element)) {\r\n            return\r\n        }\r\n        this._focusView();\r\n        this._isNeedFocus = true;\r\n        this._isNeedScroll = true;\r\n        if (isCellElement($element) || isGroupRow($element)) {\r\n            this.setCellFocusType();\r\n            args = this._fireFocusChangingEvents(null, $element, false, isHighlighted);\r\n            $element = args.$newCellElement;\r\n            if (isRowFocusType && !args.isHighlighted) {\r\n                this.setRowFocusType()\r\n            }\r\n        }\r\n        if (!args.cancel) {\r\n            this._focus($element, !args.isHighlighted);\r\n            this._focusInteractiveElement($element)\r\n        }\r\n    },\r\n    _getFocusedViewByElement: function($element) {\r\n        var view = this.getFocusedView();\r\n        var $view = view && $(view.element());\r\n        return $element && 0 !== $element.closest($view).length\r\n    },\r\n    _focusView: function() {\r\n        this._focusedView = this.getView(\"rowsView\")\r\n    },\r\n    _resetFocusedView: function() {\r\n        this.setRowFocusType();\r\n        this._focusedView = null\r\n    },\r\n    _focusInteractiveElement: function($cell, isLast) {\r\n        if (!$cell) {\r\n            return\r\n        }\r\n        var $focusedElement = this._getInteractiveElement($cell, isLast);\r\n        gridCoreUtils.focusAndSelectElement(this, $focusedElement)\r\n    },\r\n    _focus: function($cell, disableFocus, skipFocusEvent) {\r\n        var $row = $cell && !$cell.hasClass(ROW_CLASS) ? $cell.closest(\".\".concat(ROW_CLASS)) : $cell;\r\n        if ($row && isNotFocusedRow($row)) {\r\n            return\r\n        }\r\n        var focusedView = this._focusedView;\r\n        var $focusViewElement = focusedView && focusedView.element();\r\n        var $focusElement;\r\n        this._isHiddenFocus = disableFocus;\r\n        var isRowFocus = isGroupRow($row) || this.isRowFocusType();\r\n        if (isRowFocus) {\r\n            $focusElement = $row;\r\n            if (focusedView) {\r\n                this.setFocusedRowIndex(this._getRowIndex($row))\r\n            }\r\n        } else if (isCellElement($cell)) {\r\n            $focusElement = $cell;\r\n            this._updateFocusedCellPosition($cell)\r\n        }\r\n        if ($focusElement) {\r\n            if ($focusViewElement) {\r\n                $focusViewElement.find(\".dx-row[tabindex], .dx-row > td[tabindex]\").not($focusElement).removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabindex\")\r\n            }\r\n            eventsEngine.one($focusElement, \"blur\", e => {\r\n                if (e.relatedTarget) {\r\n                    $focusElement.removeClass(CELL_FOCUS_DISABLED_CLASS)\r\n                }\r\n            });\r\n            if (!skipFocusEvent) {\r\n                this._applyTabIndexToElement($focusElement);\r\n                eventsEngine.trigger($focusElement, \"focus\")\r\n            }\r\n            if (disableFocus) {\r\n                $focusElement.addClass(CELL_FOCUS_DISABLED_CLASS);\r\n                if (isRowFocus) {\r\n                    $cell.addClass(CELL_FOCUS_DISABLED_CLASS)\r\n                }\r\n            } else {\r\n                this._editorFactory.focus($focusElement)\r\n            }\r\n        }\r\n    },\r\n    _updateFocus: function(isRenderView) {\r\n        this._updateFocusTimeout = setTimeout(() => {\r\n            var editingController = this._editingController;\r\n            var isCellEditMode = editingController.getEditMode() === EDIT_MODE_CELL;\r\n            var isBatchEditMode = editingController.getEditMode() === EDIT_MODE_BATCH;\r\n            if (isCellEditMode && editingController.hasChanges() || isBatchEditMode && editingController.isNewRowInEditMode()) {\r\n                editingController._focusEditingCell();\r\n                return\r\n            }\r\n            var $cell = this._getFocusedCell();\r\n            var isEditing = editingController.isEditing();\r\n            if ($cell && !(this._isMasterDetailCell($cell) && !this._isRowEditMode())) {\r\n                if (this._hasSkipRow($cell.parent())) {\r\n                    var direction = this._focusedCellPosition && this._focusedCellPosition.rowIndex > 0 ? \"upArrow\" : \"downArrow\";\r\n                    $cell = this._getNextCell(direction)\r\n                }\r\n                if (isElementDefined($cell)) {\r\n                    if (isRenderView && !isEditing && this._checkCellOverlapped($cell)) {\r\n                        return\r\n                    }\r\n                    if ($cell.is(\"td\") || $cell.hasClass(this.addWidgetPrefix(EDIT_FORM_ITEM_CLASS))) {\r\n                        var isCommandCell = $cell.is(COMMAND_CELL_SELECTOR);\r\n                        var $focusedElementInsideCell = $cell.find(\":focus\");\r\n                        var isFocusedElementDefined = isElementDefined($focusedElementInsideCell);\r\n                        if ((isRenderView || !isCommandCell) && this._editorFactory.focus()) {\r\n                            if (isCommandCell && isFocusedElementDefined) {\r\n                                gridCoreUtils.focusAndSelectElement(this, $focusedElementInsideCell);\r\n                                return\r\n                            }!isFocusedElementDefined && this._focus($cell)\r\n                        } else if (!isFocusedElementDefined && (this._isNeedFocus || this._isHiddenFocus)) {\r\n                            this._focus($cell, this._isHiddenFocus)\r\n                        }\r\n                        if (isEditing) {\r\n                            this._focusInteractiveElement.bind(this)($cell)\r\n                        }\r\n                    } else {\r\n                        eventsEngine.trigger($cell, \"focus\")\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _checkCellOverlapped: function($cell) {\r\n        var cellOffset = $cell.offset();\r\n        var hasScrollable = this.component.getScrollable && this.component.getScrollable();\r\n        var isOverlapped = false;\r\n        if (hasScrollable) {\r\n            if (cellOffset.left < 0) {\r\n                isOverlapped = getWidth($cell) + cellOffset.left <= 0\r\n            } else if (cellOffset.top < 0) {\r\n                isOverlapped = getHeight($cell) + cellOffset.top <= 0\r\n            }\r\n        }\r\n        return isOverlapped\r\n    },\r\n    _getFocusedCell: function() {\r\n        return $(this._getCell(this._focusedCellPosition))\r\n    },\r\n    _updateFocusedCellPositionByTarget: function(target) {\r\n        var _this$_focusedCellPos;\r\n        var elementType = this._getElementType(target);\r\n        if (\"row\" === elementType && isDefined(null === (_this$_focusedCellPos = this._focusedCellPosition) || void 0 === _this$_focusedCellPos ? void 0 : _this$_focusedCellPos.columnIndex)) {\r\n            var $row = $(target);\r\n            this._focusedView && isGroupRow($row) && this.setFocusedRowIndex(this._getRowIndex($row))\r\n        } else {\r\n            this._updateFocusedCellPosition(this._getCellElementFromTarget(target))\r\n        }\r\n    },\r\n    _updateFocusedCellPosition: function($cell, direction) {\r\n        var position = this._getCellPosition($cell, direction);\r\n        if (position) {\r\n            if (!$cell.length || position.rowIndex >= 0 && position.columnIndex >= 0) {\r\n                this.setFocusedCellPosition(position.rowIndex, position.columnIndex)\r\n            }\r\n        }\r\n        return position\r\n    },\r\n    _getFocusedColumnIndexOffset: function(columnIndex) {\r\n        var offset = 0;\r\n        var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n        if (column && column.fixed) {\r\n            offset = this._getFixedColumnIndexOffset(column)\r\n        } else if (columnIndex >= 0) {\r\n            offset = this._columnsController.getColumnIndexOffset()\r\n        }\r\n        return offset\r\n    },\r\n    _getFixedColumnIndexOffset: function(column) {\r\n        var offset = isFixedColumnIndexOffsetRequired(this, column) ? this._getVisibleColumnCount() - this._columnsController.getVisibleColumns().length : 0;\r\n        return offset\r\n    },\r\n    _getCellPosition: function($cell, direction) {\r\n        var columnIndex;\r\n        var $row = isElementDefined($cell) && $cell.closest(\"tr\");\r\n        var rowsView = this.getView(\"rowsView\");\r\n        if (isElementDefined($row)) {\r\n            var rowIndex = this._getRowIndex($row);\r\n            columnIndex = rowsView.getCellIndex($cell, rowIndex);\r\n            columnIndex += this._getFocusedColumnIndexOffset(columnIndex);\r\n            if (direction) {\r\n                columnIndex = \"previous\" === direction ? columnIndex - 1 : columnIndex + 1;\r\n                columnIndex = this._applyColumnIndexBoundaries(columnIndex)\r\n            }\r\n            return {\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            }\r\n        }\r\n    },\r\n    _focusCell: function($cell, isDisabled) {\r\n        if (this._isCellValid($cell)) {\r\n            this._focus($cell, isDisabled);\r\n            return true\r\n        }\r\n    },\r\n    _focusEditFormCell: function($cell) {\r\n        if ($cell.hasClass(MASTER_DETAIL_CELL_CLASS)) {\r\n            this._editorFactory.focus($cell, true)\r\n        }\r\n    },\r\n    _resetFocusedCell: function(preventScroll) {\r\n        var _this$_focusedView;\r\n        var $cell = this._getFocusedCell();\r\n        isElementDefined($cell) && $cell.removeAttr(\"tabindex\");\r\n        this._isNeedFocus = false;\r\n        this._isNeedScroll = false;\r\n        this._focusedCellPosition = {};\r\n        clearTimeout(this._updateFocusTimeout);\r\n        null === (_this$_focusedView = this._focusedView) || void 0 === _this$_focusedView ? void 0 : _this$_focusedView.renderFocusState({\r\n            preventScroll: preventScroll\r\n        })\r\n    },\r\n    restoreFocusableElement: function(rowIndex, $event) {\r\n        var args;\r\n        var $rowElement;\r\n        var isUpArrow = isDefined(rowIndex);\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var $rowsViewElement = rowsView.element();\r\n        var columnIndex = this._focusedCellPosition.columnIndex;\r\n        var rowIndexOffset = this._dataController.getRowIndexOffset();\r\n        rowIndex = isUpArrow ? rowIndex : rowsView.getTopVisibleItemIndex() + rowIndexOffset;\r\n        if (!isUpArrow) {\r\n            this._editorFactory.loseFocus();\r\n            this._applyTabIndexToElement($rowsViewElement);\r\n            eventsEngine.trigger($rowsViewElement, \"focus\")\r\n        } else {\r\n            $rowElement = rowsView.getRow(rowIndex - rowIndexOffset);\r\n            args = this._fireFocusedRowChanging($event, $rowElement);\r\n            if (!args.cancel && args.rowIndexChanged) {\r\n                rowIndex = args.newRowIndex\r\n            }\r\n        }\r\n        if (!isUpArrow || !args.cancel) {\r\n            this.setFocusedCellPosition(rowIndex, columnIndex)\r\n        }\r\n        isUpArrow && this._updateFocus()\r\n    },\r\n    _getNewPositionByCode: function(cellPosition, elementType, code) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var rowIndex = cellPosition.rowIndex;\r\n        var visibleColumnsCount;\r\n        if (void 0 === cellPosition.rowIndex && \"next\" === code) {\r\n            return {\r\n                columnIndex: 0,\r\n                rowIndex: 0\r\n            }\r\n        }\r\n        switch (code) {\r\n            case \"nextInRow\":\r\n            case \"next\":\r\n                visibleColumnsCount = this._getVisibleColumnCount();\r\n                if (columnIndex < visibleColumnsCount - 1 && \"row\" !== elementType && this._hasValidCellAfterPosition({\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })) {\r\n                    columnIndex++\r\n                } else if (!this._isLastRow(rowIndex) && \"next\" === code) {\r\n                    columnIndex = 0;\r\n                    rowIndex++\r\n                }\r\n                break;\r\n            case \"previousInRow\":\r\n            case \"previous\":\r\n                if (columnIndex > 0 && \"row\" !== elementType && this._hasValidCellBeforePosition({\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })) {\r\n                    columnIndex--\r\n                } else if (rowIndex > 0 && \"previous\" === code) {\r\n                    rowIndex--;\r\n                    visibleColumnsCount = this._getVisibleColumnCount();\r\n                    columnIndex = visibleColumnsCount - 1\r\n                }\r\n                break;\r\n            case \"upArrow\":\r\n                rowIndex = rowIndex > 0 ? rowIndex - 1 : rowIndex;\r\n                break;\r\n            case \"downArrow\":\r\n                rowIndex = !this._isLastRow(rowIndex) ? rowIndex + 1 : rowIndex\r\n        }\r\n        return {\r\n            columnIndex: columnIndex,\r\n            rowIndex: rowIndex\r\n        }\r\n    },\r\n    setFocusedCellPosition: function(rowIndex, columnIndex) {\r\n        this.setFocusedRowIndex(rowIndex);\r\n        this.setFocusedColumnIndex(columnIndex)\r\n    },\r\n    setFocusedRowIndex: function(rowIndex) {\r\n        if (!this._focusedCellPosition) {\r\n            this._focusedCellPosition = {}\r\n        }\r\n        this._focusedCellPosition.rowIndex = rowIndex\r\n    },\r\n    setFocusedColumnIndex: function(columnIndex) {\r\n        if (!this._focusedCellPosition) {\r\n            this._focusedCellPosition = {}\r\n        }\r\n        this._focusedCellPosition.columnIndex = columnIndex\r\n    },\r\n    getRowIndex: function() {\r\n        return this._focusedCellPosition ? this._focusedCellPosition.rowIndex : -1\r\n    },\r\n    getColumnIndex: function() {\r\n        return this._focusedCellPosition ? this._focusedCellPosition.columnIndex : -1\r\n    },\r\n    getVisibleRowIndex: function() {\r\n        var rowIndex = this._focusedCellPosition && this._focusedCellPosition.rowIndex;\r\n        if (!isDefined(rowIndex) || rowIndex < 0) {\r\n            return -1\r\n        }\r\n        return rowIndex - this._dataController.getRowIndexOffset()\r\n    },\r\n    getVisibleColumnIndex: function() {\r\n        var columnIndex = this._focusedCellPosition && this._focusedCellPosition.columnIndex;\r\n        if (!isDefined(columnIndex)) {\r\n            return -1\r\n        }\r\n        return columnIndex - this._columnsController.getColumnIndexOffset()\r\n    },\r\n    _applyColumnIndexBoundaries: function(columnIndex) {\r\n        var visibleColumnsCount = this._getVisibleColumnCount();\r\n        if (columnIndex < 0) {\r\n            columnIndex = 0\r\n        } else if (columnIndex >= visibleColumnsCount) {\r\n            columnIndex = visibleColumnsCount - 1\r\n        }\r\n        return columnIndex\r\n    },\r\n    _isCellByPositionValid: function(cellPosition) {\r\n        var $cell = $(this._getCell(cellPosition));\r\n        return this._isCellValid($cell)\r\n    },\r\n    _isLastRow: function(rowIndex) {\r\n        var dataController = this._dataController;\r\n        if (this._isVirtualRowRender()) {\r\n            return rowIndex >= dataController.getMaxRowIndex()\r\n        }\r\n        return rowIndex === dataController.items().length - 1\r\n    },\r\n    _isFirstValidCell: function(cellPosition) {\r\n        var isFirstValidCell = false;\r\n        if (0 === cellPosition.rowIndex && cellPosition.columnIndex >= 0) {\r\n            isFirstValidCell = isFirstValidCell || !this._hasValidCellBeforePosition(cellPosition)\r\n        }\r\n        return isFirstValidCell\r\n    },\r\n    _hasValidCellBeforePosition: function(cellPosition) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var hasValidCells = false;\r\n        while (columnIndex > 0 && !hasValidCells) {\r\n            var checkingPosition = {\r\n                columnIndex: --columnIndex,\r\n                rowIndex: cellPosition.rowIndex\r\n            };\r\n            hasValidCells = this._isCellByPositionValid(checkingPosition)\r\n        }\r\n        return hasValidCells\r\n    },\r\n    _hasValidCellAfterPosition: function(cellPosition) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var hasValidCells = false;\r\n        var visibleColumnCount = this._getVisibleColumnCount();\r\n        while (columnIndex < visibleColumnCount - 1 && !hasValidCells) {\r\n            var checkingPosition = {\r\n                columnIndex: ++columnIndex,\r\n                rowIndex: cellPosition.rowIndex\r\n            };\r\n            hasValidCells = this._isCellByPositionValid(checkingPosition)\r\n        }\r\n        return hasValidCells\r\n    },\r\n    _isLastValidCell: function(cellPosition) {\r\n        var nextColumnIndex = cellPosition.columnIndex >= 0 ? cellPosition.columnIndex + 1 : 0;\r\n        var rowIndex = cellPosition.rowIndex;\r\n        var checkingPosition = {\r\n            columnIndex: nextColumnIndex,\r\n            rowIndex: rowIndex\r\n        };\r\n        var visibleRows = this._dataController.getVisibleRows();\r\n        var row = visibleRows && visibleRows[rowIndex];\r\n        var isLastRow = this._isLastRow(rowIndex);\r\n        if (!isLastRow) {\r\n            return false\r\n        }\r\n        if (row && \"group\" === row.rowType && cellPosition.columnIndex > 0) {\r\n            return true\r\n        }\r\n        if (cellPosition.columnIndex === this._getVisibleColumnCount() - 1) {\r\n            return true\r\n        }\r\n        if (this._isCellByPositionValid(checkingPosition)) {\r\n            return false\r\n        }\r\n        return this._isLastValidCell(checkingPosition)\r\n    },\r\n    _isCellValid: function($cell, isClick) {\r\n        if (isElementDefined($cell)) {\r\n            var rowsView = this.getView(\"rowsView\");\r\n            var $row = $cell.parent();\r\n            var columnsController = this._columnsController;\r\n            var columnIndex = rowsView.getCellIndex($cell) + columnsController.getColumnIndexOffset();\r\n            var column = columnsController.getVisibleColumns(null, true)[columnIndex];\r\n            var visibleColumnCount = this._getVisibleColumnCount();\r\n            var editingController = this._editingController;\r\n            var isMasterDetailRow = isDetailRow($row);\r\n            var isShowWhenGrouped = column && column.showWhenGrouped;\r\n            var isDataCell = column && !$cell.hasClass(COMMAND_EXPAND_CLASS) && isDataRow($row);\r\n            if (this._isMasterDetailCell($cell)) {\r\n                return true\r\n            }\r\n            if (visibleColumnCount > columnIndex && (!isMasterDetailRow && column && (!isDefined(column.groupIndex) || isShowWhenGrouped && isDataCell) || parseInt($cell.attr(\"colspan\")) > 1)) {\r\n                var rowItems = this._dataController.items();\r\n                var visibleRowIndex = rowsView.getRowIndex($row);\r\n                var row = rowItems[visibleRowIndex];\r\n                var isCellEditing = editingController && this._isCellEditMode() && editingController.isEditing();\r\n                var isRowEditingInCurrentRow = editingController && editingController.isEditRow(visibleRowIndex);\r\n                var isEditing = isRowEditingInCurrentRow || isCellEditing;\r\n                if (column.command) {\r\n                    if (this._isLegacyNavigation()) {\r\n                        return !isEditing && \"expand\" === column.command\r\n                    }\r\n                    if (isCellEditing) {\r\n                        return false\r\n                    }\r\n                    if (isRowEditingInCurrentRow) {\r\n                        return \"select\" !== column.command\r\n                    }\r\n                    return !isEditing\r\n                }\r\n                if (isCellEditing && row && \"data\" !== row.rowType) {\r\n                    return false\r\n                }\r\n                return !isEditing || column.allowEditing || isClick\r\n            }\r\n        }\r\n    },\r\n    getFirstValidCellInRow: function($row, columnIndex) {\r\n        var $cells = $row.find(\"> td\");\r\n        var $cell;\r\n        var $result;\r\n        columnIndex = columnIndex || 0;\r\n        for (var i = columnIndex; i < $cells.length; ++i) {\r\n            $cell = $cells.eq(i);\r\n            if (this._isCellValid($cell)) {\r\n                $result = $cell;\r\n                break\r\n            }\r\n        }\r\n        return $result\r\n    },\r\n    _getNextCell: function(keyCode, elementType, cellPosition) {\r\n        var focusedCellPosition = cellPosition || this._focusedCellPosition;\r\n        var isRowFocusType = this.isRowFocusType();\r\n        var includeCommandCells = isRowFocusType || inArray(keyCode, [\"next\", \"previous\"]) > -1;\r\n        var $cell;\r\n        var $row;\r\n        if (this._focusedView && focusedCellPosition) {\r\n            var newFocusedCellPosition = this._getNewPositionByCode(focusedCellPosition, elementType, keyCode);\r\n            $cell = $(this._getCell(newFocusedCellPosition));\r\n            var isLastCellOnDirection = \"previous\" === keyCode ? this._isFirstValidCell(newFocusedCellPosition) : this._isLastValidCell(newFocusedCellPosition);\r\n            if (isElementDefined($cell) && !this._isCellValid($cell) && this._isCellInRow(newFocusedCellPosition, includeCommandCells) && !isLastCellOnDirection) {\r\n                if (isRowFocusType) {\r\n                    $cell = this.getFirstValidCellInRow($cell.parent(), newFocusedCellPosition.columnIndex)\r\n                } else {\r\n                    $cell = this._getNextCell(keyCode, \"cell\", newFocusedCellPosition)\r\n                }\r\n            }\r\n            $row = isElementDefined($cell) && $cell.parent();\r\n            if (this._hasSkipRow($row)) {\r\n                var rowIndex = this._getRowIndex($row);\r\n                if (!this._isLastRow(rowIndex)) {\r\n                    $cell = this._getNextCell(keyCode, \"row\", {\r\n                        columnIndex: focusedCellPosition.columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n            return isElementDefined($cell) ? $cell : null\r\n        }\r\n        return null\r\n    },\r\n    _startEditing: function(eventArgs, fastEditingKey) {\r\n        var focusedCellPosition = this._focusedCellPosition;\r\n        var visibleRowIndex = this.getVisibleRowIndex();\r\n        var visibleColumnIndex = this.getVisibleColumnIndex();\r\n        var row = this._dataController.items()[visibleRowIndex];\r\n        var column = this._columnsController.getVisibleColumns()[visibleColumnIndex];\r\n        if (this._isAllowEditing(row, column)) {\r\n            if (this._isRowEditMode()) {\r\n                this._editingController.editRow(visibleRowIndex)\r\n            } else if (focusedCellPosition) {\r\n                this._startEditCell(eventArgs, fastEditingKey)\r\n            }\r\n        }\r\n    },\r\n    _isAllowEditing: function(row, column) {\r\n        return this._editingController.allowUpdating({\r\n            row: row\r\n        }) && column && column.allowEditing\r\n    },\r\n    _editFocusedCell: function() {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var colIndex = this.getVisibleColumnIndex();\r\n        return this._editingController.editCell(rowIndex, colIndex)\r\n    },\r\n    _startEditCell: function(eventArgs, fastEditingKey) {\r\n        this._fastEditingStarted = isDefined(fastEditingKey);\r\n        var editResult = this._editFocusedCell();\r\n        if (this._isFastEditingStarted()) {\r\n            if (true === editResult) {\r\n                this._editingCellHandler(eventArgs, fastEditingKey)\r\n            } else if (editResult && editResult.done) {\r\n                var editorValue = fastEditingKey !== FAST_EDITING_DELETE_KEY ? fastEditingKey : \"\";\r\n                editResult.done(() => this._editingCellHandler(eventArgs, editorValue))\r\n            }\r\n        }\r\n    },\r\n    _editingCellHandler: function(eventArgs, editorValue) {\r\n        var _$input$get$select, _$input$get;\r\n        var $input = this._getFocusedCell().find(INTERACTIVE_ELEMENTS_SELECTOR).eq(0);\r\n        var keyDownEvent = createEvent(eventArgs, {\r\n            type: \"keydown\",\r\n            target: $input.get(0)\r\n        });\r\n        var keyPressEvent = createEvent(eventArgs, {\r\n            type: \"keypress\",\r\n            target: $input.get(0)\r\n        });\r\n        var inputEvent = createEvent(eventArgs, {\r\n            type: \"input\",\r\n            target: $input.get(0)\r\n        });\r\n        null === (_$input$get$select = (_$input$get = $input.get(0)).select) || void 0 === _$input$get$select ? void 0 : _$input$get$select.call(_$input$get);\r\n        eventsEngine.trigger($input, keyDownEvent);\r\n        if (!keyDownEvent.isDefaultPrevented()) {\r\n            eventsEngine.trigger($input, keyPressEvent);\r\n            if (!keyPressEvent.isDefaultPrevented()) {\r\n                var timeout = browser.mozilla ? 25 : 0;\r\n                setTimeout(() => {\r\n                    $input.val(editorValue);\r\n                    var $widgetContainer = $input.closest(\".\".concat(WIDGET_CLASS));\r\n                    eventsEngine.off($widgetContainer, \"focusout\");\r\n                    eventsEngine.one($widgetContainer, \"focusout\", (function() {\r\n                        eventsEngine.trigger($input, \"change\")\r\n                    }));\r\n                    eventsEngine.trigger($input, inputEvent)\r\n                }, timeout)\r\n            }\r\n        }\r\n    },\r\n    _fireFocusChangingEvents: function($event, $cell, fireRowEvent, isHighlighted) {\r\n        var args = {};\r\n        var cellPosition = this._getCellPosition($cell) || {};\r\n        if (this.isCellFocusType()) {\r\n            args = this._fireFocusedCellChanging($event, $cell, isHighlighted);\r\n            if (!args.cancel) {\r\n                cellPosition.columnIndex = args.newColumnIndex;\r\n                cellPosition.rowIndex = args.newRowIndex;\r\n                isHighlighted = args.isHighlighted;\r\n                $cell = $(this._getCell(cellPosition))\r\n            }\r\n        }\r\n        if (!args.cancel && fireRowEvent && $cell) {\r\n            args = this._fireFocusedRowChanging($event, $cell.parent());\r\n            if (!args.cancel) {\r\n                cellPosition.rowIndex = args.newRowIndex;\r\n                args.isHighlighted = isHighlighted\r\n            }\r\n        }\r\n        args.$newCellElement = $(this._getCell(cellPosition));\r\n        if (!args.$newCellElement.length) {\r\n            args.$newCellElement = $cell\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedCellChanging: function($event, $cellElement, isHighlighted) {\r\n        var prevCellIndex = this.option(\"focusedColumnIndex\");\r\n        var prevRowIndex = this.option(\"focusedRowIndex\");\r\n        var cellPosition = this._getCellPosition($cellElement);\r\n        var columnIndex = cellPosition ? cellPosition.columnIndex : -1;\r\n        var rowIndex = cellPosition ? cellPosition.rowIndex : -1;\r\n        var args = {\r\n            cellElement: $cellElement,\r\n            prevColumnIndex: prevCellIndex,\r\n            prevRowIndex: prevRowIndex,\r\n            newColumnIndex: columnIndex,\r\n            newRowIndex: rowIndex,\r\n            rows: this._dataController.getVisibleRows(),\r\n            columns: this._columnsController.getVisibleColumns(),\r\n            event: $event,\r\n            isHighlighted: isHighlighted || false,\r\n            cancel: false\r\n        };\r\n        this._canceledCellPosition = null;\r\n        this.executeAction(\"onFocusedCellChanging\", args);\r\n        if (args.newColumnIndex !== columnIndex || args.newRowIndex !== rowIndex) {\r\n            args.$newCellElement = $(this._getCell({\r\n                columnIndex: args.newColumnIndex,\r\n                rowIndex: args.newRowIndex\r\n            }))\r\n        }\r\n        if (args.cancel) {\r\n            this._canceledCellPosition = {\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            }\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedCellChanged: function($cellElement, prevCellIndex, prevRowIndex) {\r\n        var dataController = this._dataController;\r\n        var columnIndex = this.getView(\"rowsView\").getCellIndex($cellElement);\r\n        var rowIndex = this._getRowIndex($cellElement && $cellElement.parent());\r\n        var localRowIndex = Math.min(rowIndex - dataController.getRowIndexOffset(), dataController.items().length - 1);\r\n        var isEditingCell = this._editingController.isEditCell(localRowIndex, columnIndex);\r\n        var row = dataController.items()[localRowIndex];\r\n        if (!isEditingCell && (prevCellIndex !== columnIndex || prevRowIndex !== rowIndex)) {\r\n            this.executeAction(\"onFocusedCellChanged\", {\r\n                cellElement: $cellElement,\r\n                columnIndex: columnIndex,\r\n                rowIndex: rowIndex,\r\n                row: row,\r\n                column: this._columnsController.getVisibleColumns()[columnIndex]\r\n            })\r\n        }\r\n    },\r\n    _fireFocusedRowChanging: function(eventArgs, $newFocusedRow) {\r\n        var newRowIndex = this._getRowIndex($newFocusedRow);\r\n        var dataController = this._dataController;\r\n        var prevFocusedRowIndex = this.option(\"focusedRowIndex\");\r\n        var loadingOperationTypes = dataController.loadingOperationTypes();\r\n        var args = {\r\n            rowElement: $newFocusedRow,\r\n            prevRowIndex: prevFocusedRowIndex,\r\n            newRowIndex: newRowIndex,\r\n            event: eventArgs,\r\n            rows: dataController.getVisibleRows(),\r\n            cancel: false\r\n        };\r\n        if (!dataController || dataController.isLoading() && (loadingOperationTypes.reload || loadingOperationTypes.paging)) {\r\n            args.cancel = true;\r\n            return args\r\n        }\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            this.executeAction(\"onFocusedRowChanging\", args);\r\n            if (!args.cancel && args.newRowIndex !== newRowIndex) {\r\n                args.resetFocusedRow = args.newRowIndex < 0;\r\n                if (!args.resetFocusedRow) {\r\n                    this.setFocusedRowIndex(args.newRowIndex)\r\n                }\r\n                args.rowIndexChanged = true\r\n            }\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedRowChanged: function($rowElement) {\r\n        var row;\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        var focusController = this.getController(\"focus\");\r\n        var focusedRowIndex = null === focusController || void 0 === focusController ? void 0 : focusController.getFocusedRowIndexByKey(focusedRowKey);\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            if (focusedRowIndex >= 0) {\r\n                var dataController = this._dataController;\r\n                row = focusedRowIndex >= 0 && dataController.getVisibleRows()[focusedRowIndex - dataController.getRowIndexOffset()]\r\n            }\r\n            this.executeAction(\"onFocusedRowChanged\", {\r\n                rowElement: $rowElement,\r\n                rowIndex: focusedRowIndex,\r\n                row: row\r\n            })\r\n        }\r\n    },\r\n    _isEventInCurrentGrid: function(event) {\r\n        return gridCoreUtils.isElementInCurrentGrid(this, $(event.target))\r\n    },\r\n    _isRowEditMode: function() {\r\n        var editMode = this._editingController.getEditMode();\r\n        return editMode === EDIT_MODE_ROW || editMode === EDIT_MODE_FORM\r\n    },\r\n    _isCellEditMode: function() {\r\n        var editMode = this._editingController.getEditMode();\r\n        return editMode === EDIT_MODE_CELL || editMode === EDIT_MODE_BATCH\r\n    },\r\n    _isFastEditingAllowed: function() {\r\n        return this._isCellEditMode() && this.option(\"keyboardNavigation.editOnKeyPress\")\r\n    },\r\n    _getInteractiveElement: function($cell, isLast) {\r\n        var $focusedElement = $cell.find(INTERACTIVE_ELEMENTS_SELECTOR).filter(\":visible\");\r\n        return isLast ? $focusedElement.last() : $focusedElement.first()\r\n    },\r\n    _applyTabIndexToElement: function($element) {\r\n        var tabIndex = this.option(\"tabIndex\") || 0;\r\n        $element.attr(\"tabindex\", isDefined(tabIndex) ? tabIndex : 0)\r\n    },\r\n    _getCell: function(cellPosition) {\r\n        if (this._focusedView && cellPosition) {\r\n            var rowIndexOffset = this._dataController.getRowIndexOffset();\r\n            var column = this._columnsController.getVisibleColumns(null, true)[cellPosition.columnIndex];\r\n            var columnIndexOffset = column && column.fixed ? this._getFixedColumnIndexOffset(column) : this._columnsController.getColumnIndexOffset();\r\n            var rowIndex = cellPosition.rowIndex >= 0 ? cellPosition.rowIndex - rowIndexOffset : -1;\r\n            var columnIndex = cellPosition.columnIndex >= 0 ? cellPosition.columnIndex - columnIndexOffset : -1;\r\n            return this._focusedView.getCell({\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            })\r\n        }\r\n    },\r\n    _getRowIndex: function($row) {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var rowIndex = rowsView.getRowIndex($row);\r\n        if (rowIndex >= 0) {\r\n            rowIndex += this._dataController.getRowIndexOffset()\r\n        }\r\n        return rowIndex\r\n    },\r\n    _hasSkipRow: function($row) {\r\n        var row = $row && $row.get(0);\r\n        return row && (\"none\" === row.style.display || $row.hasClass(this.addWidgetPrefix(GROUP_FOOTER_CLASS)) || isDetailRow($row) && !$row.hasClass(this.addWidgetPrefix(EDIT_FORM_CLASS)))\r\n    },\r\n    _allowEditingOnEnterKey: function() {\r\n        return \"startEdit\" === this.option(\"keyboardNavigation.enterKeyAction\")\r\n    },\r\n    _isLegacyNavigation: function() {\r\n        return this.option(\"useLegacyKeyboardNavigation\")\r\n    },\r\n    _getDirectionCodeByKey: function(key) {\r\n        var directionCode;\r\n        switch (key) {\r\n            case \"upArrow\":\r\n                directionCode = \"prevRow\";\r\n                break;\r\n            case \"downArrow\":\r\n                directionCode = \"nextRow\";\r\n                break;\r\n            case \"leftArrow\":\r\n                directionCode = this.option(\"rtlEnabled\") ? \"nextInRow\" : \"previousInRow\";\r\n                break;\r\n            case \"rightArrow\":\r\n                directionCode = this.option(\"rtlEnabled\") ? \"previousInRow\" : \"nextInRow\"\r\n        }\r\n        return directionCode\r\n    },\r\n    _isVirtualScrolling: function() {\r\n        var scrollingMode = this.option(\"scrolling.mode\");\r\n        return \"virtual\" === scrollingMode || \"infinite\" === scrollingMode\r\n    },\r\n    _isVirtualRowRender: function() {\r\n        return this._isVirtualScrolling() || gridCoreUtils.isVirtualRowRendering(this)\r\n    },\r\n    _isVirtualColumnRender: function() {\r\n        return \"virtual\" === this.option(\"scrolling.columnRenderingMode\")\r\n    },\r\n    _scrollBy: function(left, top, rowIndex, $event) {\r\n        var that = this;\r\n        var scrollable = this.getView(\"rowsView\").getScrollable();\r\n        if (that._focusedCellPosition) {\r\n            scrollable.on(\"scroll\", (function scrollHandler() {\r\n                scrollable.off(\"scroll\", scrollHandler);\r\n                setTimeout(that.restoreFocusableElement.bind(that, rowIndex, $event))\r\n            }))\r\n        }\r\n        return scrollable.scrollBy({\r\n            left: left,\r\n            top: top\r\n        })\r\n    },\r\n    _isInsideEditForm: function(element) {\r\n        return $(element).closest(\".\" + this.addWidgetPrefix(EDIT_FORM_CLASS)).length > 0\r\n    },\r\n    _isMasterDetailCell: function(element) {\r\n        var $masterDetailCell = $(element).closest(\".\" + MASTER_DETAIL_CELL_CLASS);\r\n        var $masterDetailGrid = $masterDetailCell.closest(\".\" + this.getWidgetContainerClass()).parent();\r\n        return $masterDetailCell.length && $masterDetailGrid.is(this.component.$element())\r\n    },\r\n    _processNextCellInMasterDetail: function($nextCell) {\r\n        if (!this._isInsideEditForm($nextCell) && $nextCell) {\r\n            this._applyTabIndexToElement($nextCell)\r\n        }\r\n    },\r\n    _handleTabKeyOnMasterDetailCell: function(target, direction) {\r\n        if (this._isMasterDetailCell(target)) {\r\n            this._updateFocusedCellPosition($(target), direction);\r\n            var $nextCell = this._getNextCell(direction, \"row\");\r\n            this._processNextCellInMasterDetail($nextCell);\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    _getElementType: function(target) {\r\n        return $(target).is(\"tr\") ? \"row\" : \"cell\"\r\n    },\r\n    _isFastEditingStarted: function() {\r\n        return this._isFastEditingAllowed() && this._fastEditingStarted\r\n    },\r\n    _getVisibleColumnCount: function() {\r\n        return this._columnsController.getVisibleColumns(null, true).length\r\n    },\r\n    _isCellInRow: function(cellPosition, includeCommandCells) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var visibleColumnsCount = this._getVisibleColumnCount();\r\n        return includeCommandCells ? columnIndex >= 0 && columnIndex <= visibleColumnsCount - 1 : columnIndex > 0 && columnIndex < visibleColumnsCount - 1\r\n    },\r\n    _getCellElementFromTarget: function(target) {\r\n        var elementType = this._getElementType(target);\r\n        var $targetElement = $(target);\r\n        var $cell;\r\n        if (\"cell\" === elementType) {\r\n            $cell = $targetElement.closest(\".\".concat(ROW_CLASS, \" > td\"))\r\n        } else {\r\n            $cell = $targetElement.children().not(\".\" + COMMAND_EXPAND_CLASS).first()\r\n        }\r\n        return $cell\r\n    },\r\n    _getRowsViewElement: function() {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        return rowsView && rowsView.element()\r\n    },\r\n    isKeyboardEnabled: function() {\r\n        return this.option(\"keyboardNavigation.enabled\")\r\n    },\r\n    _processCanceledEditCellPosition: function(rowIndex, columnIndex) {\r\n        if (this._canceledCellPosition) {\r\n            var isCanceled = this._canceledCellPosition.rowIndex === rowIndex && this._canceledCellPosition.columnIndex === columnIndex;\r\n            this._canceledCellPosition = null;\r\n            return isCanceled\r\n        }\r\n    },\r\n    updateFocusedRowIndex: function() {\r\n        var dataController = this._dataController;\r\n        var visibleRowIndex = this.getVisibleRowIndex();\r\n        var visibleItems = dataController.items();\r\n        var lastVisibleIndex = visibleItems.length ? visibleItems.length - 1 : -1;\r\n        var rowIndexOffset = dataController.getRowIndexOffset();\r\n        lastVisibleIndex >= 0 && visibleRowIndex > lastVisibleIndex && this.setFocusedRowIndex(lastVisibleIndex + rowIndexOffset)\r\n    }\r\n});\r\nexport var keyboardNavigationModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            useLegacyKeyboardNavigation: false,\r\n            keyboardNavigation: {\r\n                enabled: true,\r\n                enterKeyAction: \"startEdit\",\r\n                enterKeyDirection: \"none\",\r\n                editOnKeyPress: false\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        keyboardNavigation: KeyboardNavigationController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _rowClick: function(e) {\r\n                    var editRowIndex = this.getController(\"editing\").getEditRowIndex();\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    if (editRowIndex === e.rowIndex) {\r\n                        keyboardController.setCellFocusType()\r\n                    }\r\n                    var needTriggerPointerEventHandler = isMobile() && this.option(\"focusedRowEnabled\");\r\n                    if (needTriggerPointerEventHandler) {\r\n                        this._triggerPointerDownEventHandler(e)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _triggerPointerDownEventHandler: function(e) {\r\n                    var originalEvent = e.event.originalEvent;\r\n                    if (originalEvent) {\r\n                        var keyboardController = this.getController(\"keyboardNavigation\");\r\n                        var $cell = $(originalEvent.target);\r\n                        var columnIndex = this.getCellIndex($cell);\r\n                        var column = this.getController(\"columns\").getVisibleColumns()[columnIndex];\r\n                        var row = this.getController(\"data\").items()[e.rowIndex];\r\n                        if (keyboardController._isAllowEditing(row, column)) {\r\n                            var eventArgs = createEvent(originalEvent, {\r\n                                currentTarget: originalEvent.target\r\n                            });\r\n                            keyboardController._pointerEventHandler(eventArgs)\r\n                        }\r\n                    }\r\n                },\r\n                renderFocusState: function(params) {\r\n                    var {\r\n                        preventScroll: preventScroll,\r\n                        pageSizeChanged: pageSizeChanged\r\n                    } = null !== params && void 0 !== params ? params : {};\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var $rowsViewElement = this.element();\r\n                    if ($rowsViewElement && !focused($rowsViewElement)) {\r\n                        $rowsViewElement.attr(\"tabindex\", null)\r\n                    }\r\n                    pageSizeChanged && keyboardController.updateFocusedRowIndex();\r\n                    var rowIndex = keyboardController.getVisibleRowIndex();\r\n                    if (!isDefined(rowIndex) || rowIndex < 0) {\r\n                        rowIndex = 0\r\n                    }\r\n                    var cellElements = this.getCellElements(rowIndex);\r\n                    if (keyboardController.isKeyboardEnabled() && cellElements.length) {\r\n                        this.updateFocusElementTabIndex(cellElements, preventScroll)\r\n                    }\r\n                },\r\n                updateFocusElementTabIndex: function(cellElements) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var $row = cellElements.eq(0).parent();\r\n                    if (isGroupRow($row)) {\r\n                        keyboardController._applyTabIndexToElement($row)\r\n                    } else {\r\n                        var columnIndex = keyboardController.getColumnIndex();\r\n                        if (!isDefined(columnIndex) || columnIndex < 0) {\r\n                            columnIndex = 0\r\n                        }\r\n                        this._updateFocusedCellTabIndex(cellElements, columnIndex)\r\n                    }\r\n                },\r\n                _updateFocusedCellTabIndex: function(cellElements, columnIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var cellElementsLength = cellElements ? cellElements.length : -1;\r\n                    var updateCellTabIndex = function($cell) {\r\n                        var isMasterDetailCell = keyboardController._isMasterDetailCell($cell);\r\n                        var isValidCell = keyboardController._isCellValid($cell);\r\n                        if (!isMasterDetailCell && isValidCell && isCellElement($cell)) {\r\n                            keyboardController._applyTabIndexToElement($cell);\r\n                            keyboardController.setCellFocusType();\r\n                            return true\r\n                        }\r\n                    };\r\n                    var $cell = cellElements.filter(\"[aria-colindex='\".concat(columnIndex + 1, \"']\"));\r\n                    if ($cell.length) {\r\n                        updateCellTabIndex($cell)\r\n                    } else {\r\n                        if (cellElementsLength <= columnIndex) {\r\n                            columnIndex = cellElementsLength - 1\r\n                        }\r\n                        for (var i = columnIndex; i < cellElementsLength; ++i) {\r\n                            if (updateCellTabIndex($(cellElements[i]))) {\r\n                                break\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                renderDelayedTemplates: function(change) {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._renderFocusByChange(change)\r\n                },\r\n                _renderFocusByChange(change) {\r\n                    var {\r\n                        operationTypes: operationTypes,\r\n                        repaintChangesOnly: repaintChangesOnly\r\n                    } = null !== change && void 0 !== change ? change : {};\r\n                    var {\r\n                        fullReload: fullReload,\r\n                        pageSize: pageSize\r\n                    } = null !== operationTypes && void 0 !== operationTypes ? operationTypes : {};\r\n                    if (!change || !repaintChangesOnly || fullReload || pageSize) {\r\n                        var preventScroll = shouldPreventScroll(this);\r\n                        this.renderFocusState({\r\n                            preventScroll: preventScroll,\r\n                            pageSizeChanged: pageSize\r\n                        })\r\n                    }\r\n                },\r\n                _renderCore: function(change) {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._renderFocusByChange(change)\r\n                },\r\n                _editCellPrepared: function($cell) {\r\n                    var editorInstance = this._getEditorInstance($cell);\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var isEditingNavigationMode = keyboardController && keyboardController._isFastEditingStarted();\r\n                    if (editorInstance && isEditingNavigationMode) {\r\n                        this._handleEditingNavigationMode(editorInstance)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _handleEditingNavigationMode: function(editorInstance) {\r\n                    [\"downArrow\", \"upArrow\"].forEach((function(keyName) {\r\n                        var originalKeyHandler = editorInstance._supportedKeys()[keyName];\r\n                        editorInstance.registerKeyHandler(keyName, e => {\r\n                            var isDropDownOpened = \"true\" === editorInstance._input().attr(\"aria-expanded\");\r\n                            if (isDropDownOpened) {\r\n                                return originalKeyHandler && originalKeyHandler.call(editorInstance, e)\r\n                            }\r\n                        })\r\n                    }));\r\n                    editorInstance.registerKeyHandler(\"leftArrow\", noop);\r\n                    editorInstance.registerKeyHandler(\"rightArrow\", noop);\r\n                    var isDateBoxWithMask = editorInstance.NAME === DATEBOX_WIDGET_NAME && editorInstance.option(\"useMaskBehavior\");\r\n                    if (isDateBoxWithMask) {\r\n                        editorInstance.registerKeyHandler(\"enter\", noop)\r\n                    }\r\n                },\r\n                _getEditorInstance: function($cell) {\r\n                    var $editor = $cell.find(\".dx-texteditor\").eq(0);\r\n                    return gridCoreUtils.getWidgetInstance($editor)\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            editing: {\r\n                editCell: function(rowIndex, columnIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    if (keyboardController._processCanceledEditCellPosition(rowIndex, columnIndex)) {\r\n                        return false\r\n                    }\r\n                    var isCellEditing = this.callBase(rowIndex, columnIndex);\r\n                    if (isCellEditing) {\r\n                        keyboardController.setupFocusedView()\r\n                    }\r\n                    return isCellEditing\r\n                },\r\n                editRow: function(rowIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var visibleColumnIndex = keyboardController.getVisibleColumnIndex();\r\n                    var column = this._columnsController.getVisibleColumns()[visibleColumnIndex];\r\n                    if (column && column.type || this.option(\"editing.mode\") === EDIT_MODE_FORM) {\r\n                        keyboardController._resetFocusedCell()\r\n                    }\r\n                    this.callBase(rowIndex)\r\n                },\r\n                addRow: function(parentKey) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    keyboardController.setupFocusedView();\r\n                    keyboardController.setCellFocusType();\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                getFocusedCellInRow: function(rowIndex) {\r\n                    var keyboardNavigationController = this.getController(\"keyboardNavigation\");\r\n                    var $cell = this.callBase(rowIndex);\r\n                    if (keyboardNavigationController.isKeyboardEnabled() && keyboardNavigationController._focusedCellPosition.rowIndex === rowIndex) {\r\n                        var $focusedCell = keyboardNavigationController._getFocusedCell();\r\n                        if (isElementDefined($focusedCell) && !$focusedCell.hasClass(COMMAND_EDIT_CLASS)) {\r\n                            $cell = $focusedCell\r\n                        }\r\n                    }\r\n                    return $cell\r\n                },\r\n                _processCanceledEditingCell: function() {\r\n                    this.closeEditCell().done(() => {\r\n                        var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                        keyboardNavigation._updateFocus()\r\n                    })\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._keyboardNavigationController = this.getController(\"keyboardNavigation\")\r\n                },\r\n                closeEditCell: function() {\r\n                    var keyboardNavigation = this._keyboardNavigationController;\r\n                    keyboardNavigation._fastEditingStarted = false;\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    keyboardNavigation._updateFocus();\r\n                    return result\r\n                },\r\n                _delayedInputFocus: function() {\r\n                    this._keyboardNavigationController._isNeedScroll = true;\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _isEditingStart: function() {\r\n                    var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                    var cancel = this.callBase.apply(this, arguments);\r\n                    if (cancel && !keyboardNavigation._isNeedFocus) {\r\n                        var $cell = keyboardNavigation._getFocusedCell();\r\n                        keyboardNavigation._focus($cell, true)\r\n                    }\r\n                    return cancel\r\n                }\r\n            },\r\n            data: {\r\n                _correctRowIndices: function(getRowIndexCorrection) {\r\n                    var that = this;\r\n                    var keyboardNavigationController = that.getController(\"keyboardNavigation\");\r\n                    var editorFactory = that.getController(\"editorFactory\");\r\n                    var focusedCellPosition = keyboardNavigationController._focusedCellPosition;\r\n                    that.callBase.apply(that, arguments);\r\n                    if (focusedCellPosition && focusedCellPosition.rowIndex >= 0) {\r\n                        var focusedRowIndexCorrection = getRowIndexCorrection(focusedCellPosition.rowIndex);\r\n                        if (focusedRowIndexCorrection) {\r\n                            focusedCellPosition.rowIndex += focusedRowIndexCorrection;\r\n                            editorFactory.refocus()\r\n                        }\r\n                    }\r\n                },\r\n                getMaxRowIndex: function() {\r\n                    var result = this.items().length - 1;\r\n                    var virtualItemsCount = this.virtualItemsCount();\r\n                    if (virtualItemsCount) {\r\n                        result += virtualItemsCount.begin + virtualItemsCount.end\r\n                    }\r\n                    return result\r\n                }\r\n            },\r\n            adaptiveColumns: {\r\n                _showHiddenCellsInView: function(_ref) {\r\n                    var {\r\n                        viewName: viewName,\r\n                        $cells: $cells,\r\n                        isCommandColumn: isCommandColumn\r\n                    } = _ref;\r\n                    this.callBase.apply(this, arguments);\r\n                    viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && $cells.each((_, cellElement) => {\r\n                        var $cell = $(cellElement);\r\n                        isCellInHeaderRow($cell) && $cell.attr(\"tabindex\", 0)\r\n                    })\r\n                },\r\n                _hideVisibleCellInView: function(_ref2) {\r\n                    var {\r\n                        viewName: viewName,\r\n                        $cell: $cell,\r\n                        isCommandColumn: isCommandColumn\r\n                    } = _ref2;\r\n                    this.callBase.apply(this, arguments);\r\n                    if (viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && isCellInHeaderRow($cell)) {\r\n                        $cell.removeAttr(\"tabindex\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/aggregate_calculator.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    errors\r\n} from \"../../data/errors\";\r\nimport {\r\n    aggregators\r\n} from \"../../data/utils\";\r\n\r\nfunction depthFirstSearch(i, depth, root, callback) {\r\n    var j = 0;\r\n    if (i < depth) {\r\n        for (; j < root.items.length; j++) {\r\n            depthFirstSearch(i + 1, depth, root.items[j], callback)\r\n        }\r\n    }\r\n    if (i === depth) {\r\n        callback(root)\r\n    }\r\n}\r\n\r\nfunction map(array, callback) {\r\n    var i;\r\n    if (\"map\" in array) {\r\n        return array.map(callback)\r\n    }\r\n    var result = new Array(array.length);\r\n    for (i in array) {\r\n        result[i] = callback(array[i], i)\r\n    }\r\n    return result\r\n}\r\n\r\nfunction isEmpty(x) {\r\n    return x !== x || \"\" === x || null === x || void 0 === x\r\n}\r\n\r\nfunction isCount(aggregator) {\r\n    return aggregator === aggregators.count\r\n}\r\n\r\nfunction normalizeAggregate(aggregate) {\r\n    var selector = compileGetter(aggregate.selector);\r\n    var skipEmptyValues = \"skipEmptyValues\" in aggregate ? aggregate.skipEmptyValues : true;\r\n    var aggregator = aggregate.aggregator;\r\n    if (\"string\" === typeof aggregator) {\r\n        aggregator = aggregators[aggregator];\r\n        if (!aggregator) {\r\n            throw errors.Error(\"E4001\", aggregate.aggregator)\r\n        }\r\n    }\r\n    return {\r\n        selector: selector,\r\n        aggregator: aggregator,\r\n        skipEmptyValues: skipEmptyValues\r\n    }\r\n}\r\nexport default Class.inherit({\r\n    ctor: function(options) {\r\n        this._data = options.data;\r\n        this._groupLevel = options.groupLevel || 0;\r\n        this._totalAggregates = map(options.totalAggregates || [], normalizeAggregate);\r\n        this._groupAggregates = map(options.groupAggregates || [], normalizeAggregate);\r\n        this._totals = []\r\n    },\r\n    calculate: function() {\r\n        if (this._totalAggregates.length) {\r\n            this._calculateTotals(0, {\r\n                items: this._data\r\n            })\r\n        }\r\n        if (this._groupAggregates.length && this._groupLevel > 0) {\r\n            this._calculateGroups({\r\n                items: this._data\r\n            })\r\n        }\r\n    },\r\n    totalAggregates: function() {\r\n        return this._totals\r\n    },\r\n    _aggregate: function(aggregates, data, container) {\r\n        var length = data.items ? data.items.length : 0;\r\n        for (var i = 0; i < aggregates.length; i++) {\r\n            if (isCount(aggregates[i].aggregator)) {\r\n                container[i] = (container[i] || 0) + length;\r\n                continue\r\n            }\r\n            for (var j = 0; j < length; j++) {\r\n                this._accumulate(i, aggregates[i], container, data.items[j])\r\n            }\r\n        }\r\n    },\r\n    _calculateTotals: function(level, data) {\r\n        if (0 === level) {\r\n            this._totals = this._seed(this._totalAggregates)\r\n        }\r\n        if (level === this._groupLevel) {\r\n            this._aggregate(this._totalAggregates, data, this._totals)\r\n        } else {\r\n            for (var i = 0; i < data.items.length; i++) {\r\n                this._calculateTotals(level + 1, data.items[i])\r\n            }\r\n        }\r\n        if (0 === level) {\r\n            this._totals = this._finalize(this._totalAggregates, this._totals)\r\n        }\r\n    },\r\n    _calculateGroups: function(root) {\r\n        var maxLevel = this._groupLevel;\r\n        var currentLevel = maxLevel + 1;\r\n        var seedFn = this._seed.bind(this, this._groupAggregates);\r\n        var stepFn = this._aggregate.bind(this, this._groupAggregates);\r\n        var finalizeFn = this._finalize.bind(this, this._groupAggregates);\r\n\r\n        function aggregator(node) {\r\n            node.aggregates = seedFn(currentLevel - 1);\r\n            if (currentLevel === maxLevel) {\r\n                stepFn(node, node.aggregates)\r\n            } else {\r\n                depthFirstSearch(currentLevel, maxLevel, node, (function(innerNode) {\r\n                    stepFn(innerNode, node.aggregates)\r\n                }))\r\n            }\r\n            node.aggregates = finalizeFn(node.aggregates)\r\n        }\r\n        while (--currentLevel > 0) {\r\n            depthFirstSearch(0, currentLevel, root, aggregator)\r\n        }\r\n    },\r\n    _seed: function(aggregates, groupIndex) {\r\n        return map(aggregates, (function(aggregate) {\r\n            var aggregator = aggregate.aggregator;\r\n            var seed = \"seed\" in aggregator ? isFunction(aggregator.seed) ? aggregator.seed(groupIndex) : aggregator.seed : NaN;\r\n            return seed\r\n        }))\r\n    },\r\n    _accumulate: function(aggregateIndex, aggregate, results, item) {\r\n        var value = aggregate.selector(item);\r\n        var aggregator = aggregate.aggregator;\r\n        var skipEmptyValues = aggregate.skipEmptyValues;\r\n        if (skipEmptyValues && isEmpty(value)) {\r\n            return\r\n        }\r\n        if (results[aggregateIndex] !== results[aggregateIndex]) {\r\n            results[aggregateIndex] = value\r\n        } else {\r\n            results[aggregateIndex] = aggregator.step(results[aggregateIndex], value)\r\n        }\r\n    },\r\n    _finalize: function(aggregates, results) {\r\n        return map(aggregates, (function(aggregate, index) {\r\n            var fin = aggregate.aggregator.finalize;\r\n            return fin ? fin(results[index]) : results[index]\r\n        }))\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.keyboard_navigation.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    keyboardNavigationModule\r\n} from \"../grid_core/ui.grid_core.keyboard_navigation\";\r\ngridCore.registerModule(\"keyboardNavigation\", keyboardNavigationModule);\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.summary.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    isEmptyObject,\r\n    isString,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport dataSourceAdapter from \"./ui.data_grid.data_source_adapter\";\r\nimport {\r\n    ColumnsView\r\n} from \"../grid_core/ui.grid_core.columns_view\";\r\nimport AggregateCalculator from \"./aggregate_calculator\";\r\nimport dataQuery from \"../../data/query\";\r\nimport storeHelper from \"../../data/store_helper\";\r\nimport {\r\n    normalizeSortingInfo\r\n} from \"../../data/utils\";\r\nvar DATAGRID_TOTAL_FOOTER_CLASS = \"dx-datagrid-total-footer\";\r\nvar DATAGRID_SUMMARY_ITEM_CLASS = \"dx-datagrid-summary-item\";\r\nvar DATAGRID_TEXT_CONTENT_CLASS = \"dx-datagrid-text-content\";\r\nvar DATAGRID_GROUP_FOOTER_CLASS = \"dx-datagrid-group-footer\";\r\nvar DATAGRID_GROUP_TEXT_CONTENT_CLASS = \"dx-datagrid-group-text-content\";\r\nvar DATAGRID_NOWRAP_CLASS = \"dx-datagrid-nowrap\";\r\nvar DATAGRID_GROUP_FOOTER_ROW_TYPE = \"groupFooter\";\r\nexport var renderSummaryCell = function(cell, options) {\r\n    var $cell = $(cell);\r\n    var column = options.column;\r\n    var summaryItems = options.summaryItems;\r\n    var $summaryItems = [];\r\n    if (!column.command && summaryItems) {\r\n        for (var i = 0; i < summaryItems.length; i++) {\r\n            var summaryItem = summaryItems[i];\r\n            $summaryItems.push($(\"<div>\").css(\"textAlign\", summaryItem.alignment || column.alignment).addClass(DATAGRID_SUMMARY_ITEM_CLASS).addClass(DATAGRID_TEXT_CONTENT_CLASS).addClass(summaryItem.cssClass).toggleClass(DATAGRID_GROUP_TEXT_CONTENT_CLASS, \"group\" === options.rowType).text(gridCore.getSummaryText(summaryItem, options.summaryTexts)))\r\n        }\r\n        $cell.append($summaryItems)\r\n    }\r\n};\r\nvar getSummaryCellOptions = function(that, options) {\r\n    var summaryTexts = that.option(\"summary.texts\") || {};\r\n    return {\r\n        totalItem: options.row,\r\n        summaryItems: options.row.summaryCells[options.columnIndex],\r\n        summaryTexts: summaryTexts\r\n    }\r\n};\r\nvar getGroupAggregates = function(data) {\r\n    return data.summary || data.aggregates || []\r\n};\r\nvar recalculateWhileEditing = function(that) {\r\n    return that.option(\"summary.recalculateWhileEditing\")\r\n};\r\nexport var FooterView = ColumnsView.inherit({\r\n    _getRows: function() {\r\n        return this._dataController.footerItems()\r\n    },\r\n    _getCellOptions: function(options) {\r\n        return extend(this.callBase(options), getSummaryCellOptions(this, options))\r\n    },\r\n    _renderCellContent: function($cell, options) {\r\n        renderSummaryCell($cell, options);\r\n        this.callBase($cell, options)\r\n    },\r\n    _renderCore: function(change) {\r\n        var needUpdateScrollLeft = false;\r\n        var totalItem = this._dataController.footerItems()[0];\r\n        if (!change || !change.columnIndices) {\r\n            this.element().empty().addClass(DATAGRID_TOTAL_FOOTER_CLASS).toggleClass(DATAGRID_NOWRAP_CLASS, !this.option(\"wordWrapEnabled\"));\r\n            needUpdateScrollLeft = true\r\n        }\r\n        if (totalItem && totalItem.summaryCells && totalItem.summaryCells.length) {\r\n            this._updateContent(this._renderTable({\r\n                change: change\r\n            }), change);\r\n            needUpdateScrollLeft && this._updateScrollLeftPosition()\r\n        }\r\n    },\r\n    _updateContent: function($newTable, change) {\r\n        if (change && \"update\" === change.changeType && change.columnIndices) {\r\n            var $row = this.getTableElement().find(\".dx-row\");\r\n            var $newRow = $newTable.find(\".dx-row\");\r\n            this._updateCells($row, $newRow, change.columnIndices[0])\r\n        } else {\r\n            return this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _rowClick: function(e) {\r\n        var item = this._dataController.footerItems()[e.rowIndex] || {};\r\n        this.executeAction(\"onRowClick\", extend({}, e, item))\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var optionNames = e.optionNames;\r\n        if (e.changeTypes.grouping) {\r\n            return\r\n        }\r\n        if (optionNames.width || optionNames.visibleWidth) {\r\n            this.callBase(e)\r\n        }\r\n    },\r\n    _handleDataChanged: function(e) {\r\n        var changeType = e.changeType;\r\n        if (\"update\" === e.changeType && e.repaintChangesOnly) {\r\n            if (!e.totalColumnIndices) {\r\n                this.render()\r\n            } else if (e.totalColumnIndices.length) {\r\n                this.render(null, {\r\n                    changeType: \"update\",\r\n                    columnIndices: [e.totalColumnIndices]\r\n                })\r\n            }\r\n        } else if (\"refresh\" === changeType || \"append\" === changeType || \"prepend\" === changeType) {\r\n            this.render()\r\n        }\r\n    },\r\n    getHeight: function() {\r\n        return this.getElementHeight()\r\n    },\r\n    isVisible: function() {\r\n        return !!this._dataController.footerItems().length\r\n    }\r\n});\r\nvar SummaryDataSourceAdapterExtender = {\r\n    init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._totalAggregates = [];\r\n        this._summaryGetter = noop\r\n    },\r\n    summaryGetter: function(_summaryGetter) {\r\n        if (!arguments.length) {\r\n            return this._summaryGetter\r\n        }\r\n        if (isFunction(_summaryGetter)) {\r\n            this._summaryGetter = _summaryGetter\r\n        }\r\n    },\r\n    summary: function(_summary) {\r\n        if (!arguments.length) {\r\n            return this._summaryGetter()\r\n        }\r\n        this._summaryGetter = function() {\r\n            return _summary\r\n        }\r\n    },\r\n    totalAggregates: function() {\r\n        return this._totalAggregates\r\n    },\r\n    isLastLevelGroupItemsPagingLocal: function() {\r\n        var summary = this.summary();\r\n        var sortByGroupsInfo = summary && summary.sortByGroups();\r\n        return sortByGroupsInfo && sortByGroupsInfo.length\r\n    },\r\n    sortLastLevelGroupItems: function(items, groups, paths) {\r\n        var groupedItems = storeHelper.multiLevelGroup(dataQuery(items), groups).toArray();\r\n        var result = [];\r\n        paths.forEach((function(path) {\r\n            ! function forEachGroup(groups, groupCount, callback, path) {\r\n                path = path || [];\r\n                for (var i = 0; i < groups.length; i++) {\r\n                    path.push(groups[i].key);\r\n                    if (1 === groupCount) {\r\n                        callback(path, groups[i].items)\r\n                    } else {\r\n                        forEachGroup(groups[i].items, groupCount - 1, callback, path)\r\n                    }\r\n                    path.pop()\r\n                }\r\n            }(groupedItems, groups.length, (function(itemsPath, items) {\r\n                if (path.toString() === itemsPath.toString()) {\r\n                    result = result.concat(items)\r\n                }\r\n            }))\r\n        }));\r\n        return result\r\n    }\r\n};\r\nvar SummaryDataSourceAdapterClientExtender = function() {\r\n    var calculateAggregates = function(that, summary, data, groupLevel) {\r\n        var calculator;\r\n        if (recalculateWhileEditing(that)) {\r\n            var editingController = that.getController(\"editing\");\r\n            if (editingController) {\r\n                var insertedData = editingController.getInsertedData();\r\n                if (insertedData.length) {\r\n                    data = function applyAddedData(data, insertedData, groupLevel) {\r\n                        if (groupLevel) {\r\n                            return applyAddedData(data, insertedData.map(item => ({\r\n                                items: [item]\r\n                            }), groupLevel - 1))\r\n                        }\r\n                        return data.concat(insertedData)\r\n                    }(data, insertedData, groupLevel)\r\n                }\r\n                var removedData = editingController.getRemovedData();\r\n                if (removedData.length) {\r\n                    data = function applyRemovedData(data, removedData, groupLevel) {\r\n                        if (groupLevel) {\r\n                            return data.map(data => {\r\n                                var updatedData = {};\r\n                                var updatedItems = applyRemovedData(data.items || [], removedData, groupLevel - 1);\r\n                                Object.defineProperty(updatedData, \"aggregates\", {\r\n                                    get: () => data.aggregates,\r\n                                    set: value => {\r\n                                        data.aggregates = value\r\n                                    }\r\n                                });\r\n                                return extend(updatedData, data, {\r\n                                    items: updatedItems\r\n                                })\r\n                            })\r\n                        }\r\n                        return data.filter(data => removedData.indexOf(data) < 0)\r\n                    }(data, removedData, groupLevel)\r\n                }\r\n            }\r\n        }\r\n        if (summary) {\r\n            calculator = new AggregateCalculator({\r\n                totalAggregates: summary.totalAggregates,\r\n                groupAggregates: summary.groupAggregates,\r\n                data: data,\r\n                groupLevel: groupLevel\r\n            });\r\n            calculator.calculate()\r\n        }\r\n        return calculator ? calculator.totalAggregates() : []\r\n    };\r\n    var sortGroupsBySummary = function(data, group, summary) {\r\n        var sortByGroups = summary && summary.sortByGroups && summary.sortByGroups();\r\n        if (sortByGroups && sortByGroups.length) {\r\n            return function sortGroupsBySummaryCore(items, groups, sortByGroups) {\r\n                if (!items || !groups.length) {\r\n                    return items\r\n                }\r\n                var group = groups[0];\r\n                var sorts = sortByGroups[0];\r\n                var query;\r\n                if (group && sorts && sorts.length) {\r\n                    query = dataQuery(items);\r\n                    each(sorts, (function(index) {\r\n                        if (0 === index) {\r\n                            query = query.sortBy(this.selector, this.desc)\r\n                        } else {\r\n                            query = query.thenBy(this.selector, this.desc)\r\n                        }\r\n                    }));\r\n                    query.enumerate().done((function(sortedItems) {\r\n                        items = sortedItems\r\n                    }))\r\n                }\r\n                groups = groups.slice(1);\r\n                sortByGroups = sortByGroups.slice(1);\r\n                if (groups.length && sortByGroups.length) {\r\n                    each(items, (function() {\r\n                        this.items = sortGroupsBySummaryCore(this.items, groups, sortByGroups)\r\n                    }))\r\n                }\r\n                return items\r\n            }(data, group, sortByGroups)\r\n        }\r\n        return data\r\n    };\r\n    return {\r\n        _customizeRemoteOperations: function(options) {\r\n            var summary = this.summary();\r\n            if (summary) {\r\n                if (options.remoteOperations.summary) {\r\n                    if (!options.isCustomLoading || options.storeLoadOptions.isLoadingAll) {\r\n                        if (options.storeLoadOptions.group) {\r\n                            if (options.remoteOperations.grouping) {\r\n                                options.storeLoadOptions.groupSummary = summary.groupAggregates\r\n                            } else if (summary.groupAggregates.length) {\r\n                                options.remoteOperations.paging = false\r\n                            }\r\n                        }\r\n                        options.storeLoadOptions.totalSummary = summary.totalAggregates\r\n                    }\r\n                } else if (summary.totalAggregates.length || summary.groupAggregates.length && options.storeLoadOptions.group) {\r\n                    options.remoteOperations.paging = false\r\n                }\r\n            }\r\n            this.callBase.apply(this, arguments);\r\n            var cachedExtra = options.cachedData.extra;\r\n            if (cachedExtra && cachedExtra.summary && !options.isCustomLoading) {\r\n                options.storeLoadOptions.totalSummary = void 0\r\n            }\r\n        },\r\n        _handleDataLoadedCore: function(options) {\r\n            var groups = normalizeSortingInfo(options.storeLoadOptions.group || options.loadOptions.group || []);\r\n            var remoteOperations = options.remoteOperations || {};\r\n            var summary = this.summaryGetter()(remoteOperations);\r\n            if (!options.isCustomLoading || options.storeLoadOptions.isLoadingAll) {\r\n                if (remoteOperations.summary) {\r\n                    if (!remoteOperations.paging && groups.length && summary) {\r\n                        if (!remoteOperations.grouping) {\r\n                            calculateAggregates(this, {\r\n                                groupAggregates: summary.groupAggregates\r\n                            }, options.data, groups.length)\r\n                        }\r\n                        options.data = sortGroupsBySummary(options.data, groups, summary)\r\n                    }\r\n                } else if (!remoteOperations.paging && summary) {\r\n                    var _options$cachedData, _options$cachedData$e;\r\n                    var operationTypes = options.operationTypes || {};\r\n                    var hasOperations = Object.keys(operationTypes).some(type => operationTypes[type]);\r\n                    if (!hasOperations || !(null !== (_options$cachedData = options.cachedData) && void 0 !== _options$cachedData && null !== (_options$cachedData$e = _options$cachedData.extra) && void 0 !== _options$cachedData$e && _options$cachedData$e.summary) || groups.length && summary.groupAggregates.length) {\r\n                        var totalAggregates = calculateAggregates(this, summary, options.data, groups.length);\r\n                        options.extra = isPlainObject(options.extra) ? options.extra : {};\r\n                        options.extra.summary = totalAggregates;\r\n                        if (options.cachedData) {\r\n                            options.cachedData.extra = options.extra\r\n                        }\r\n                    }\r\n                    options.data = sortGroupsBySummary(options.data, groups, summary)\r\n                }\r\n            }\r\n            if (!options.isCustomLoading) {\r\n                this._totalAggregates = options.extra && options.extra.summary || this._totalAggregates\r\n            }\r\n            this.callBase(options)\r\n        }\r\n    }\r\n}();\r\ndataSourceAdapter.extend(SummaryDataSourceAdapterExtender);\r\ndataSourceAdapter.extend(SummaryDataSourceAdapterClientExtender);\r\ngridCore.registerModule(\"summary\", {\r\n    defaultOptions: function() {\r\n        return {\r\n            summary: {\r\n                groupItems: void 0,\r\n                totalItems: void 0,\r\n                calculateCustomSummary: void 0,\r\n                skipEmptyValues: true,\r\n                recalculateWhileEditing: false,\r\n                texts: {\r\n                    sum: messageLocalization.format(\"dxDataGrid-summarySum\"),\r\n                    sumOtherColumn: messageLocalization.format(\"dxDataGrid-summarySumOtherColumn\"),\r\n                    min: messageLocalization.format(\"dxDataGrid-summaryMin\"),\r\n                    minOtherColumn: messageLocalization.format(\"dxDataGrid-summaryMinOtherColumn\"),\r\n                    max: messageLocalization.format(\"dxDataGrid-summaryMax\"),\r\n                    maxOtherColumn: messageLocalization.format(\"dxDataGrid-summaryMaxOtherColumn\"),\r\n                    avg: messageLocalization.format(\"dxDataGrid-summaryAvg\"),\r\n                    avgOtherColumn: messageLocalization.format(\"dxDataGrid-summaryAvgOtherColumn\"),\r\n                    count: messageLocalization.format(\"dxDataGrid-summaryCount\")\r\n                }\r\n            },\r\n            sortByGroupSummaryInfo: void 0\r\n        }\r\n    },\r\n    views: {\r\n        footerView: FooterView\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                _isDataColumn: function(column) {\r\n                    return column && (!isDefined(column.groupIndex) || column.showWhenGrouped)\r\n                },\r\n                _isGroupFooterVisible: function() {\r\n                    var groupItems = this.option(\"summary.groupItems\") || [];\r\n                    for (var i = 0; i < groupItems.length; i++) {\r\n                        var groupItem = groupItems[i];\r\n                        var column = this._columnsController.columnOption(groupItem.showInColumn || groupItem.column);\r\n                        if (groupItem.showInGroupFooter && this._isDataColumn(column)) {\r\n                            return true\r\n                        }\r\n                    }\r\n                    return false\r\n                },\r\n                _processGroupItems: function(items, groupCount, options) {\r\n                    var data = options && options.data;\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    if (options) {\r\n                        if (void 0 === options.isGroupFooterVisible) {\r\n                            options.isGroupFooterVisible = this._isGroupFooterVisible()\r\n                        }\r\n                        if (data && data.items && options.isGroupFooterVisible && (options.collectContinuationItems || !data.isContinuationOnNextPage)) {\r\n                            result.push({\r\n                                rowType: DATAGRID_GROUP_FOOTER_ROW_TYPE,\r\n                                key: options.path.slice(),\r\n                                data: data,\r\n                                groupIndex: options.path.length - 1,\r\n                                values: []\r\n                            })\r\n                        }\r\n                    }\r\n                    return result\r\n                },\r\n                _processGroupItem: function(groupItem, options) {\r\n                    var that = this;\r\n                    if (!options.summaryGroupItems) {\r\n                        options.summaryGroupItems = that.option(\"summary.groupItems\") || []\r\n                    }\r\n                    if (\"group\" === groupItem.rowType) {\r\n                        var groupColumnIndex = -1;\r\n                        var afterGroupColumnIndex = -1;\r\n                        each(options.visibleColumns, (function(visibleIndex) {\r\n                            var prevColumn = options.visibleColumns[visibleIndex - 1];\r\n                            if (groupItem.groupIndex === this.groupIndex) {\r\n                                groupColumnIndex = this.index\r\n                            }\r\n                            if (visibleIndex > 0 && \"expand\" === prevColumn.command && \"expand\" !== this.command) {\r\n                                afterGroupColumnIndex = this.index\r\n                            }\r\n                        }));\r\n                        groupItem.summaryCells = this._calculateSummaryCells(options.summaryGroupItems, getGroupAggregates(groupItem.data), options.visibleColumns, (function(summaryItem, column) {\r\n                            if (summaryItem.showInGroupFooter) {\r\n                                return -1\r\n                            }\r\n                            if (summaryItem.alignByColumn && column && !isDefined(column.groupIndex) && column.index !== afterGroupColumnIndex) {\r\n                                return column.index\r\n                            } else {\r\n                                return groupColumnIndex\r\n                            }\r\n                        }), true)\r\n                    }\r\n                    if (groupItem.rowType === DATAGRID_GROUP_FOOTER_ROW_TYPE) {\r\n                        groupItem.summaryCells = this._calculateSummaryCells(options.summaryGroupItems, getGroupAggregates(groupItem.data), options.visibleColumns, (function(summaryItem, column) {\r\n                            return summaryItem.showInGroupFooter && that._isDataColumn(column) ? column.index : -1\r\n                        }))\r\n                    }\r\n                    return groupItem\r\n                },\r\n                _calculateSummaryCells: function(summaryItems, aggregates, visibleColumns, calculateTargetColumnIndex, isGroupRow) {\r\n                    var that = this;\r\n                    var summaryCells = [];\r\n                    var summaryCellsByColumns = {};\r\n                    each(summaryItems, (function(summaryIndex, summaryItem) {\r\n                        var column = that._columnsController.columnOption(summaryItem.column);\r\n                        var showInColumn = summaryItem.showInColumn && that._columnsController.columnOption(summaryItem.showInColumn) || column;\r\n                        var columnIndex = calculateTargetColumnIndex(summaryItem, showInColumn);\r\n                        if (columnIndex >= 0) {\r\n                            if (!summaryCellsByColumns[columnIndex]) {\r\n                                summaryCellsByColumns[columnIndex] = []\r\n                            }\r\n                            var aggregate = aggregates[summaryIndex];\r\n                            if (aggregate === aggregate) {\r\n                                var valueFormat;\r\n                                if (isDefined(summaryItem.valueFormat)) {\r\n                                    valueFormat = summaryItem.valueFormat\r\n                                } else if (\"count\" !== summaryItem.summaryType) {\r\n                                    valueFormat = gridCore.getFormatByDataType(column && column.dataType)\r\n                                }\r\n                                summaryCellsByColumns[columnIndex].push(extend({}, summaryItem, {\r\n                                    value: isString(aggregate) && column && column.deserializeValue ? column.deserializeValue(aggregate) : aggregate,\r\n                                    valueFormat: valueFormat,\r\n                                    columnCaption: column && column.index !== columnIndex ? column.caption : void 0\r\n                                }))\r\n                            }\r\n                        }\r\n                    }));\r\n                    if (!isEmptyObject(summaryCellsByColumns)) {\r\n                        visibleColumns.forEach((column, visibleIndex) => {\r\n                            var prevColumn = visibleColumns[visibleIndex - 1];\r\n                            var columnIndex = isGroupRow && (\"expand\" === (null === prevColumn || void 0 === prevColumn ? void 0 : prevColumn.command) || \"expand\" === column.command) ? null === prevColumn || void 0 === prevColumn ? void 0 : prevColumn.index : column.index;\r\n                            summaryCells.push(summaryCellsByColumns[columnIndex] || [])\r\n                        })\r\n                    }\r\n                    return summaryCells\r\n                },\r\n                _getSummaryCells: function(summaryTotalItems, totalAggregates) {\r\n                    var that = this;\r\n                    var columnsController = that._columnsController;\r\n                    return that._calculateSummaryCells(summaryTotalItems, totalAggregates, columnsController.getVisibleColumns(), (function(summaryItem, column) {\r\n                        return that._isDataColumn(column) ? column.index : -1\r\n                    }))\r\n                },\r\n                _updateItemsCore: function(change) {\r\n                    var summaryCells;\r\n                    var dataSource = this._dataSource;\r\n                    var footerItems = this._footerItems;\r\n                    var oldSummaryCells = footerItems && footerItems[0] && footerItems[0].summaryCells;\r\n                    var summaryTotalItems = this.option(\"summary.totalItems\");\r\n                    this._footerItems = [];\r\n                    if (dataSource && summaryTotalItems && summaryTotalItems.length) {\r\n                        var totalAggregates = dataSource.totalAggregates();\r\n                        summaryCells = this._getSummaryCells(summaryTotalItems, totalAggregates);\r\n                        if (change && change.repaintChangesOnly && oldSummaryCells) {\r\n                            change.totalColumnIndices = summaryCells.map((function(summaryCell, index) {\r\n                                if (JSON.stringify(summaryCell) !== JSON.stringify(oldSummaryCells[index])) {\r\n                                    return index\r\n                                }\r\n                                return -1\r\n                            })).filter(index => index >= 0)\r\n                        }\r\n                        if (summaryCells.length) {\r\n                            this._footerItems.push({\r\n                                rowType: \"totalFooter\",\r\n                                summaryCells: summaryCells\r\n                            })\r\n                        }\r\n                    }\r\n                    this.callBase(change)\r\n                },\r\n                _prepareUnsavedDataSelector: function(selector) {\r\n                    if (recalculateWhileEditing(this)) {\r\n                        var editingController = this.getController(\"editing\");\r\n                        if (editingController) {\r\n                            return function(data) {\r\n                                data = editingController.getUpdatedData(data);\r\n                                return selector(data)\r\n                            }\r\n                        }\r\n                    }\r\n                    return selector\r\n                },\r\n                _prepareAggregateSelector: function(selector, aggregator) {\r\n                    selector = this._prepareUnsavedDataSelector(selector);\r\n                    if (\"avg\" === aggregator || \"sum\" === aggregator) {\r\n                        return function(data) {\r\n                            var value = selector(data);\r\n                            return isDefined(value) ? Number(value) : value\r\n                        }\r\n                    }\r\n                    return selector\r\n                },\r\n                _getAggregates: function(summaryItems, remoteOperations) {\r\n                    var that = this;\r\n                    var columnsController = that.getController(\"columns\");\r\n                    var calculateCustomSummary = that.option(\"summary.calculateCustomSummary\");\r\n                    var commonSkipEmptyValues = that.option(\"summary.skipEmptyValues\");\r\n                    return map(summaryItems || [], (function(summaryItem) {\r\n                        var column = columnsController.columnOption(summaryItem.column);\r\n                        var calculateCellValue = column && column.calculateCellValue ? column.calculateCellValue.bind(column) : compileGetter(column ? column.dataField : summaryItem.column);\r\n                        var aggregator = summaryItem.summaryType || \"count\";\r\n                        var selector = summaryItem.column;\r\n                        var skipEmptyValues = isDefined(summaryItem.skipEmptyValues) ? summaryItem.skipEmptyValues : commonSkipEmptyValues;\r\n                        if (remoteOperations) {\r\n                            return {\r\n                                selector: summaryItem.column,\r\n                                summaryType: aggregator\r\n                            }\r\n                        } else {\r\n                            selector = that._prepareAggregateSelector(calculateCellValue, aggregator);\r\n                            if (\"custom\" === aggregator) {\r\n                                if (!calculateCustomSummary) {\r\n                                    errors.log(\"E1026\");\r\n                                    calculateCustomSummary = function() {}\r\n                                }\r\n                                var options = {\r\n                                    component: that.component,\r\n                                    name: summaryItem.name\r\n                                };\r\n                                calculateCustomSummary(options);\r\n                                options.summaryProcess = \"calculate\";\r\n                                aggregator = {\r\n                                    seed: function(groupIndex) {\r\n                                        options.summaryProcess = \"start\";\r\n                                        options.totalValue = void 0;\r\n                                        options.groupIndex = groupIndex;\r\n                                        delete options.value;\r\n                                        calculateCustomSummary(options);\r\n                                        return options.totalValue\r\n                                    },\r\n                                    step: function(totalValue, value) {\r\n                                        options.summaryProcess = \"calculate\";\r\n                                        options.totalValue = totalValue;\r\n                                        options.value = value;\r\n                                        calculateCustomSummary(options);\r\n                                        return options.totalValue\r\n                                    },\r\n                                    finalize: function(totalValue) {\r\n                                        options.summaryProcess = \"finalize\";\r\n                                        options.totalValue = totalValue;\r\n                                        delete options.value;\r\n                                        calculateCustomSummary(options);\r\n                                        return options.totalValue\r\n                                    }\r\n                                }\r\n                            }\r\n                            return {\r\n                                selector: selector,\r\n                                aggregator: aggregator,\r\n                                skipEmptyValues: skipEmptyValues\r\n                            }\r\n                        }\r\n                    }))\r\n                },\r\n                _addSortInfo: function(sortByGroups, groupColumn, selector, sortOrder) {\r\n                    if (groupColumn) {\r\n                        var groupIndex = groupColumn.groupIndex;\r\n                        sortOrder = sortOrder || groupColumn.sortOrder;\r\n                        if (isDefined(groupIndex)) {\r\n                            sortByGroups[groupIndex] = sortByGroups[groupIndex] || [];\r\n                            sortByGroups[groupIndex].push({\r\n                                selector: selector,\r\n                                desc: \"desc\" === sortOrder\r\n                            })\r\n                        }\r\n                    }\r\n                },\r\n                _findSummaryItem: function(summaryItems, name) {\r\n                    var summaryItemIndex = -1;\r\n                    if (isDefined(name)) {\r\n                        each(summaryItems || [], (function(index) {\r\n                            if (this.name === name || index === name || this.summaryType === name || this.column === name || (summaryItem = this, summaryType = summaryItem.summaryType, column = summaryItem.column, summaryType && column && summaryType + \"_\" + column) === name) {\r\n                                summaryItemIndex = index;\r\n                                return false\r\n                            }\r\n                            var summaryItem, summaryType, column\r\n                        }))\r\n                    }\r\n                    return summaryItemIndex\r\n                },\r\n                _getSummarySortByGroups: function(sortByGroupSummaryInfo, groupSummaryItems) {\r\n                    var that = this;\r\n                    var columnsController = that._columnsController;\r\n                    var groupColumns = columnsController.getGroupColumns();\r\n                    var sortByGroups = [];\r\n                    if (!groupSummaryItems || !groupSummaryItems.length) {\r\n                        return\r\n                    }\r\n                    each(sortByGroupSummaryInfo || [], (function() {\r\n                        var sortOrder = this.sortOrder;\r\n                        var groupColumn = this.groupColumn;\r\n                        var summaryItemIndex = that._findSummaryItem(groupSummaryItems, this.summaryItem);\r\n                        if (summaryItemIndex < 0) {\r\n                            return\r\n                        }\r\n                        var selector = function(data) {\r\n                            return getGroupAggregates(data)[summaryItemIndex]\r\n                        };\r\n                        if (isDefined(groupColumn)) {\r\n                            groupColumn = columnsController.columnOption(groupColumn);\r\n                            that._addSortInfo(sortByGroups, groupColumn, selector, sortOrder)\r\n                        } else {\r\n                            each(groupColumns, (function(groupIndex, groupColumn) {\r\n                                that._addSortInfo(sortByGroups, groupColumn, selector, sortOrder)\r\n                            }))\r\n                        }\r\n                    }));\r\n                    return sortByGroups\r\n                },\r\n                _createDataSourceAdapterCore: function(dataSource, remoteOperations) {\r\n                    var that = this;\r\n                    var dataSourceAdapter = this.callBase(dataSource, remoteOperations);\r\n                    dataSourceAdapter.summaryGetter((function(currentRemoteOperations) {\r\n                        return that._getSummaryOptions(currentRemoteOperations || remoteOperations)\r\n                    }));\r\n                    return dataSourceAdapter\r\n                },\r\n                _getSummaryOptions: function(remoteOperations) {\r\n                    var that = this;\r\n                    var groupSummaryItems = that.option(\"summary.groupItems\");\r\n                    var totalSummaryItems = that.option(\"summary.totalItems\");\r\n                    var sortByGroupSummaryInfo = that.option(\"sortByGroupSummaryInfo\");\r\n                    var groupAggregates = that._getAggregates(groupSummaryItems, remoteOperations && remoteOperations.grouping && remoteOperations.summary);\r\n                    var totalAggregates = that._getAggregates(totalSummaryItems, remoteOperations && remoteOperations.summary);\r\n                    if (groupAggregates.length || totalAggregates.length) {\r\n                        return {\r\n                            groupAggregates: groupAggregates,\r\n                            totalAggregates: totalAggregates,\r\n                            sortByGroups: function() {\r\n                                return that._getSummarySortByGroups(sortByGroupSummaryInfo, groupSummaryItems)\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    var methods = this.callBase();\r\n                    methods.push(\"getTotalSummaryValue\");\r\n                    return methods\r\n                },\r\n                getTotalSummaryValue: function(summaryItemName) {\r\n                    var summaryItemIndex = this._findSummaryItem(this.option(\"summary.totalItems\"), summaryItemName);\r\n                    var aggregates = this._dataSource.totalAggregates();\r\n                    if (aggregates.length && summaryItemIndex > -1) {\r\n                        return aggregates[summaryItemIndex]\r\n                    }\r\n                },\r\n                optionChanged: function(args) {\r\n                    if (\"summary\" === args.name || \"sortByGroupSummaryInfo\" === args.name) {\r\n                        args.name = \"dataSource\"\r\n                    }\r\n                    this.callBase(args)\r\n                },\r\n                init: function() {\r\n                    this._footerItems = [];\r\n                    this.callBase()\r\n                },\r\n                footerItems: function() {\r\n                    return this._footerItems\r\n                }\r\n            },\r\n            editing: {\r\n                _refreshSummary: function() {\r\n                    if (recalculateWhileEditing(this) && !this.isSaving()) {\r\n                        this._dataController.refresh({\r\n                            load: true,\r\n                            changesOnly: true\r\n                        })\r\n                    }\r\n                },\r\n                _addChange: function(params) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    if (params.type) {\r\n                        this._refreshSummary()\r\n                    }\r\n                    return result\r\n                },\r\n                _removeChange: function() {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    this._refreshSummary();\r\n                    return result\r\n                },\r\n                cancelEditData: function() {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    this._refreshSummary();\r\n                    return result\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    row && $row.addClass(row.rowType === DATAGRID_GROUP_FOOTER_ROW_TYPE ? DATAGRID_GROUP_FOOTER_CLASS : \"\");\r\n                    return $row\r\n                },\r\n                _renderCells: function($row, options) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (\"group\" === options.row.rowType && options.row.summaryCells && options.row.summaryCells.length) {\r\n                        this._renderGroupSummaryCells($row, options)\r\n                    }\r\n                },\r\n                _hasAlignByColumnSummaryItems: function(columnIndex, options) {\r\n                    return !isDefined(options.columns[columnIndex].groupIndex) && options.row.summaryCells[columnIndex].length\r\n                },\r\n                _getAlignByColumnCellCount: function(groupCellColSpan, options) {\r\n                    var alignByColumnCellCount = 0;\r\n                    for (var i = 1; i < groupCellColSpan; i++) {\r\n                        var columnIndex = options.row.summaryCells.length - i;\r\n                        alignByColumnCellCount = this._hasAlignByColumnSummaryItems(columnIndex, options) ? i : alignByColumnCellCount\r\n                    }\r\n                    return alignByColumnCellCount\r\n                },\r\n                _renderGroupSummaryCells: function($row, options) {\r\n                    var $groupCell = $row.children().last();\r\n                    var groupCellColSpan = Number($groupCell.attr(\"colSpan\")) || 1;\r\n                    var alignByColumnCellCount = this._getAlignByColumnCellCount(groupCellColSpan, options);\r\n                    this._renderGroupSummaryCellsCore($groupCell, options, groupCellColSpan, alignByColumnCellCount)\r\n                },\r\n                _renderGroupSummaryCellsCore: function($groupCell, options, groupCellColSpan, alignByColumnCellCount) {\r\n                    if (alignByColumnCellCount > 0) {\r\n                        $groupCell.attr(\"colSpan\", groupCellColSpan - alignByColumnCellCount);\r\n                        for (var i = 0; i < alignByColumnCellCount; i++) {\r\n                            var columnIndex = options.columns.length - alignByColumnCellCount + i;\r\n                            this._renderCell($groupCell.parent(), extend({\r\n                                column: options.columns[columnIndex],\r\n                                columnIndex: this._getSummaryCellIndex(columnIndex, options.columns)\r\n                            }, options))\r\n                        }\r\n                    }\r\n                },\r\n                _getSummaryCellIndex: function(columnIndex) {\r\n                    return columnIndex\r\n                },\r\n                _getCellTemplate: function(options) {\r\n                    if (!options.column.command && !isDefined(options.column.groupIndex) && options.summaryItems && options.summaryItems.length) {\r\n                        return renderSummaryCell\r\n                    } else {\r\n                        return this.callBase(options)\r\n                    }\r\n                },\r\n                _getCellOptions: function(options) {\r\n                    var parameters = this.callBase(options);\r\n                    if (options.row.summaryCells) {\r\n                        return extend(parameters, getSummaryCellOptions(this, options))\r\n                    } else {\r\n                        return parameters\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_fixing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    name as wheelEventName\r\n} from \"../../events/core/wheel\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    move\r\n} from \"../../animation/translator\";\r\nimport Scrollable from \"../scroll_view/ui.scrollable\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar FIRST_CELL_CLASS = \"dx-first-cell\";\r\nvar LAST_CELL_CLASS = \"dx-last-cell\";\r\nvar HOVER_STATE_CLASS = \"dx-state-hover\";\r\nvar FIXED_COL_CLASS = \"dx-col-fixed\";\r\nvar FIXED_COLUMNS_CLASS = \"dx-fixed-columns\";\r\nvar POINTER_EVENTS_NONE_CLASS = \"dx-pointer-events-none\";\r\nvar COMMAND_TRANSPARENT = \"transparent\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar getTransparentColumnIndex = function(fixedColumns) {\r\n    var transparentColumnIndex = -1;\r\n    each(fixedColumns, (function(index, column) {\r\n        if (column.command === COMMAND_TRANSPARENT) {\r\n            transparentColumnIndex = index;\r\n            return false\r\n        }\r\n    }));\r\n    return transparentColumnIndex\r\n};\r\nvar normalizeColumnWidths = function(fixedColumns, widths, fixedWidths) {\r\n    var fixedColumnIndex = 0;\r\n    if (fixedColumns && widths && fixedWidths) {\r\n        for (var i = 0; i < fixedColumns.length; i++) {\r\n            if (fixedColumns[i].command === COMMAND_TRANSPARENT) {\r\n                fixedColumnIndex += fixedColumns[i].colspan\r\n            } else {\r\n                if (widths[fixedColumnIndex] < fixedWidths[i]) {\r\n                    widths[fixedColumnIndex] = fixedWidths[i]\r\n                }\r\n                fixedColumnIndex++\r\n            }\r\n        }\r\n    }\r\n    return widths\r\n};\r\nvar baseFixedColumns = {\r\n    init: function() {\r\n        this.callBase();\r\n        this._isFixedTableRendering = false;\r\n        this._isFixedColumns = false\r\n    },\r\n    _createCol: function(column) {\r\n        return this.callBase(column).toggleClass(FIXED_COL_CLASS, !!(this._isFixedTableRendering && (column.fixed || column.command && column.command !== COMMAND_TRANSPARENT)))\r\n    },\r\n    _correctColumnIndicesForFixedColumns: function(fixedColumns, change) {\r\n        var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n        var transparentColspan = fixedColumns[transparentColumnIndex].colspan;\r\n        var columnIndices = change && change.columnIndices;\r\n        if (columnIndices) {\r\n            change.columnIndices = columnIndices.map((function(columnIndices) {\r\n                if (columnIndices) {\r\n                    return columnIndices.map((function(columnIndex) {\r\n                        if (columnIndex < transparentColumnIndex) {\r\n                            return columnIndex\r\n                        } else if (columnIndex >= transparentColumnIndex + transparentColspan) {\r\n                            return columnIndex - transparentColspan + 1\r\n                        }\r\n                        return -1\r\n                    })).filter((function(columnIndex) {\r\n                        return columnIndex >= 0\r\n                    }))\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    _partialUpdateFixedTable(fixedColumns) {\r\n        var fixedTableElement = this._fixedTableElement;\r\n        var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n        var transparentColumn = fixedColumns[transparentColumnIndex];\r\n        var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n        var $rows = this._getRowElementsCore(fixedTableElement);\r\n        var $colgroup = fixedTableElement.children(\"colgroup\");\r\n        $colgroup.replaceWith(this._createColGroup(fixedColumns));\r\n        for (var i = 0; i < $rows.length; i++) {\r\n            var cellElements = $rows[i].childNodes;\r\n            var colIndex = columnIndexOffset + 1;\r\n            for (var j = 0; j < cellElements.length; j++) {\r\n                cellElements[j].setAttribute(\"aria-colindex\", colIndex);\r\n                if (j === transparentColumnIndex) {\r\n                    cellElements[j].setAttribute(\"colspan\", transparentColumn.colspan);\r\n                    colIndex += transparentColumn.colspan\r\n                } else {\r\n                    colIndex++\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _renderTable: function(options) {\r\n        var $fixedTable;\r\n        var fixedColumns = this.getFixedColumns();\r\n        this._isFixedColumns = !!fixedColumns.length;\r\n        var $table = this.callBase(options);\r\n        if (this._isFixedColumns) {\r\n            var change = null === options || void 0 === options ? void 0 : options.change;\r\n            this._isFixedTableRendering = true;\r\n            if (null !== change && void 0 !== change && change.virtualColumnsScrolling && true !== this.option(\"scrolling.legacyMode\")) {\r\n                this._partialUpdateFixedTable(fixedColumns)\r\n            } else {\r\n                var columnIndices = null === change || void 0 === change ? void 0 : change.columnIndices;\r\n                this._correctColumnIndicesForFixedColumns(fixedColumns, change);\r\n                $fixedTable = this._createTable(fixedColumns);\r\n                this._renderRows($fixedTable, extend({}, options, {\r\n                    columns: fixedColumns\r\n                }));\r\n                this._updateContent($fixedTable, change);\r\n                if (columnIndices) {\r\n                    change.columnIndices = columnIndices\r\n                }\r\n            }\r\n            this._isFixedTableRendering = false\r\n        } else {\r\n            this._fixedTableElement && this._fixedTableElement.parent().remove();\r\n            this._fixedTableElement = null\r\n        }\r\n        return $table\r\n    },\r\n    _renderRow: function($table, options) {\r\n        var fixedCorrection;\r\n        var cells = options.row.cells;\r\n        this.callBase.apply(this, arguments);\r\n        if (this._isFixedTableRendering && cells && cells.length) {\r\n            fixedCorrection = 0;\r\n            var fixedCells = options.row.cells || [];\r\n            cells = cells.slice();\r\n            options.row.cells = cells;\r\n            for (var i = 0; i < fixedCells.length; i++) {\r\n                if (fixedCells[i].column && fixedCells[i].column.command === COMMAND_TRANSPARENT) {\r\n                    fixedCorrection = (fixedCells[i].column.colspan || 1) - 1;\r\n                    continue\r\n                }\r\n                cells[i + fixedCorrection] = fixedCells[i]\r\n            }\r\n        }\r\n    },\r\n    _createCell: function(options) {\r\n        var that = this;\r\n        var column = options.column;\r\n        var columnCommand = column && column.command;\r\n        var rowType = options.rowType;\r\n        var $cell = that.callBase.apply(that, arguments);\r\n        var fixedColumns;\r\n        var prevFixedColumn;\r\n        var transparentColumnIndex;\r\n        if (that._isFixedTableRendering || \"filter\" === rowType) {\r\n            fixedColumns = that.getFixedColumns();\r\n            transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n            prevFixedColumn = fixedColumns[transparentColumnIndex - 1]\r\n        }\r\n        if (that._isFixedTableRendering) {\r\n            if (columnCommand === COMMAND_TRANSPARENT) {\r\n                $cell.addClass(POINTER_EVENTS_NONE_CLASS).toggleClass(FIRST_CELL_CLASS, 0 === transparentColumnIndex || prevFixedColumn && \"expand\" === prevFixedColumn.command).toggleClass(LAST_CELL_CLASS, fixedColumns.length && transparentColumnIndex === fixedColumns.length - 1);\r\n                if (\"freeSpace\" !== rowType) {\r\n                    gridCoreUtils.setEmptyText($cell)\r\n                }\r\n            }\r\n        } else if (\"filter\" === rowType) {\r\n            $cell.toggleClass(FIRST_CELL_CLASS, options.columnIndex === transparentColumnIndex)\r\n        }\r\n        var isRowAltStyle = that.option(\"rowAlternationEnabled\") && options.isAltRow;\r\n        if (browser.mozilla && options.column.fixed && \"group\" !== options.rowType && !isRowAltStyle) {\r\n            $cell.addClass(FIXED_COL_CLASS)\r\n        }\r\n        return $cell\r\n    },\r\n    _wrapTableInScrollContainer: function() {\r\n        var $scrollContainer = this.callBase.apply(this, arguments);\r\n        if (this._isFixedTableRendering) {\r\n            $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_FIXED_CLASS))\r\n        }\r\n        return $scrollContainer\r\n    },\r\n    _renderCellContent: function($cell, options) {\r\n        var isEmptyCell;\r\n        var column = options.column;\r\n        var isFixedTableRendering = this._isFixedTableRendering;\r\n        var isGroupCell = \"group\" === options.rowType && isDefined(column.groupIndex);\r\n        if (isFixedTableRendering && isGroupCell && !column.command && !column.groupCellTemplate) {\r\n            $cell.css(\"pointerEvents\", \"none\")\r\n        }\r\n        if (!isFixedTableRendering && this._isFixedColumns) {\r\n            isEmptyCell = column.fixed || column.command && false !== column.fixed;\r\n            if (isGroupCell) {\r\n                isEmptyCell = false;\r\n                if (options.row.summaryCells && options.row.summaryCells.length) {\r\n                    var columns = this._columnsController.getVisibleColumns();\r\n                    var alignByFixedColumnCellCount = this._getAlignByColumnCellCount ? this._getAlignByColumnCellCount(column.colspan, {\r\n                        columns: columns,\r\n                        row: options.row,\r\n                        isFixed: true\r\n                    }) : 0;\r\n                    if (alignByFixedColumnCellCount > 0) {\r\n                        var transparentColumnIndex = getTransparentColumnIndex(this._columnsController.getFixedColumns());\r\n                        isEmptyCell = columns.length - alignByFixedColumnCellCount < transparentColumnIndex\r\n                    }\r\n                }\r\n            }\r\n            if (isEmptyCell) {\r\n                if (column.command && \"buttons\" !== column.type || \"group\" === options.rowType) {\r\n                    $cell.html(\"&nbsp;\").addClass(column.cssClass);\r\n                    return\r\n                } else {\r\n                    $cell.addClass(\"dx-hidden-cell\")\r\n                }\r\n            }\r\n        }\r\n        if (column.command !== COMMAND_TRANSPARENT) {\r\n            this.callBase($cell, options)\r\n        }\r\n    },\r\n    _getCellElementsCore: function(rowIndex) {\r\n        var cellElements = this.callBase.apply(this, arguments);\r\n        var isGroupRow = cellElements.parent().hasClass(GROUP_ROW_CLASS);\r\n        var headerRowIndex = \"columnHeadersView\" === this.name ? rowIndex : void 0;\r\n        if (this._fixedTableElement && cellElements) {\r\n            var fixedColumns = this.getFixedColumns(headerRowIndex);\r\n            var fixedCellElements = this._getRowElements(this._fixedTableElement).eq(rowIndex).children(\"td\");\r\n            each(fixedCellElements, (columnIndex, cell) => {\r\n                if (isGroupRow) {\r\n                    if (cellElements[columnIndex] && \"hidden\" !== cell.style.visibility) {\r\n                        cellElements[columnIndex] = cell\r\n                    }\r\n                } else {\r\n                    var fixedColumn = fixedColumns[columnIndex];\r\n                    if (fixedColumn) {\r\n                        if (fixedColumn.command === COMMAND_TRANSPARENT) {\r\n                            if (fixedCellElements.eq(columnIndex).hasClass(MASTER_DETAIL_CELL_CLASS)) {\r\n                                cellElements[columnIndex] = cell || cellElements[columnIndex]\r\n                            }\r\n                        } else {\r\n                            var fixedColumnIndex = this._columnsController.getVisibleIndexByColumn(fixedColumn, headerRowIndex);\r\n                            cellElements[fixedColumnIndex] = cell || cellElements[fixedColumnIndex]\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        return cellElements\r\n    },\r\n    getColumnWidths: function() {\r\n        var fixedWidths;\r\n        var result = this.callBase();\r\n        var fixedColumns = this.getFixedColumns();\r\n        if (this._fixedTableElement && result.length) {\r\n            fixedWidths = this.callBase(this._fixedTableElement)\r\n        }\r\n        return normalizeColumnWidths(fixedColumns, result, fixedWidths)\r\n    },\r\n    getTableElement: function() {\r\n        var tableElement = this._isFixedTableRendering ? this._fixedTableElement : this.callBase();\r\n        return tableElement\r\n    },\r\n    setTableElement: function(tableElement) {\r\n        if (this._isFixedTableRendering) {\r\n            this._fixedTableElement = tableElement.addClass(POINTER_EVENTS_NONE_CLASS)\r\n        } else {\r\n            this.callBase(tableElement)\r\n        }\r\n    },\r\n    getColumns: function(rowIndex, $tableElement) {\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if (this._isFixedTableRendering || $tableElement && $tableElement.closest(\"table\").parent(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).length) {\r\n            return this.getFixedColumns(rowIndex)\r\n        }\r\n        return this.callBase(rowIndex, $tableElement)\r\n    },\r\n    getRowIndex: function($row) {\r\n        var $fixedTable = this._fixedTableElement;\r\n        if ($fixedTable && $fixedTable.find($row).length) {\r\n            return this._getRowElements($fixedTable).index($row)\r\n        }\r\n        return this.callBase($row)\r\n    },\r\n    getTableElements: function() {\r\n        var result = this.callBase.apply(this, arguments);\r\n        if (this._fixedTableElement) {\r\n            result = $([result.get(0), this._fixedTableElement.get(0)])\r\n        }\r\n        return result\r\n    },\r\n    getFixedColumns: function(rowIndex) {\r\n        return this._columnsController.getFixedColumns(rowIndex)\r\n    },\r\n    getFixedColumnsOffset: function() {\r\n        var offset = {\r\n            left: 0,\r\n            right: 0\r\n        };\r\n        var $transparentColumn;\r\n        if (this._fixedTableElement) {\r\n            $transparentColumn = this.getTransparentColumnElement();\r\n            var positionTransparentColumn = $transparentColumn.position();\r\n            offset = {\r\n                left: positionTransparentColumn.left,\r\n                right: getOuterWidth(this.element(), true) - (getOuterWidth($transparentColumn, true) + positionTransparentColumn.left)\r\n            }\r\n        }\r\n        return offset\r\n    },\r\n    getTransparentColumnElement: function() {\r\n        return this._fixedTableElement && this._fixedTableElement.find(\".\" + POINTER_EVENTS_NONE_CLASS).first()\r\n    },\r\n    getFixedTableElement: function() {\r\n        return this._fixedTableElement\r\n    },\r\n    isFixedColumns: function() {\r\n        return this._isFixedColumns\r\n    },\r\n    _resizeCore: function() {\r\n        this.callBase();\r\n        this.synchronizeRows()\r\n    },\r\n    setColumnWidths: function(options) {\r\n        var columns;\r\n        var visibleColumns = this._columnsController.getVisibleColumns();\r\n        var widths = options.widths;\r\n        var isWidthsSynchronized = widths && widths.length && isDefined(visibleColumns[0].visibleWidth);\r\n        var optionNames = options.optionNames;\r\n        var isColumnWidthChanged = optionNames && optionNames.width;\r\n        var useVisibleColumns = false;\r\n        this.callBase.apply(this, arguments);\r\n        if (this._fixedTableElement) {\r\n            var hasAutoWidth = widths && widths.some((function(width) {\r\n                return \"auto\" === width\r\n            }));\r\n            useVisibleColumns = hasAutoWidth && (!isWidthsSynchronized || !this.isScrollbarVisible(true));\r\n            if (useVisibleColumns) {\r\n                columns = visibleColumns\r\n            }\r\n            this.callBase(extend({}, options, {\r\n                $tableElement: this._fixedTableElement,\r\n                columns: columns,\r\n                fixed: true\r\n            }))\r\n        }\r\n        if (isWidthsSynchronized || isColumnWidthChanged && this.option(\"wordWrapEnabled\")) {\r\n            this.synchronizeRows()\r\n        }\r\n    },\r\n    _createColGroup: function(columns) {\r\n        if (this._isFixedTableRendering && !this.option(\"columnAutoWidth\")) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var useVisibleColumns = visibleColumns.filter((function(column) {\r\n                return !column.width\r\n            })).length;\r\n            if (useVisibleColumns) {\r\n                columns = visibleColumns\r\n            }\r\n        }\r\n        return this.callBase(columns)\r\n    },\r\n    _getClientHeight: function(element) {\r\n        var boundingClientRectElement = element.getBoundingClientRect && getBoundingRect(element);\r\n        return boundingClientRectElement && boundingClientRectElement.height ? boundingClientRectElement.height : element.clientHeight\r\n    },\r\n    synchronizeRows: function() {\r\n        var rowHeights = [];\r\n        var fixedRowHeights = [];\r\n        var rowIndex;\r\n        var $rowElements;\r\n        var $fixedRowElements;\r\n        var $contentElement;\r\n        if (this._isFixedColumns && this._tableElement && this._fixedTableElement) {\r\n            var heightTable = this._getClientHeight(this._tableElement.get(0));\r\n            var heightFixedTable = this._getClientHeight(this._fixedTableElement.get(0));\r\n            $rowElements = this._getRowElements(this._tableElement);\r\n            $fixedRowElements = this._getRowElements(this._fixedTableElement);\r\n            $contentElement = this._findContentElement();\r\n            if (heightTable !== heightFixedTable) {\r\n                $contentElement && $contentElement.css(\"height\", heightTable);\r\n                $rowElements.css(\"height\", \"\");\r\n                $fixedRowElements.css(\"height\", \"\");\r\n                for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\r\n                    rowHeights.push(this._getClientHeight($rowElements.get(rowIndex)));\r\n                    fixedRowHeights.push(this._getClientHeight($fixedRowElements.get(rowIndex)))\r\n                }\r\n                for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\r\n                    var rowHeight = rowHeights[rowIndex];\r\n                    var fixedRowHeight = fixedRowHeights[rowIndex];\r\n                    if (rowHeight > fixedRowHeight) {\r\n                        $fixedRowElements.eq(rowIndex).css(\"height\", rowHeight)\r\n                    } else if (rowHeight < fixedRowHeight) {\r\n                        $rowElements.eq(rowIndex).css(\"height\", fixedRowHeight)\r\n                    }\r\n                }\r\n                $contentElement && $contentElement.css(\"height\", \"\")\r\n            }\r\n        }\r\n    },\r\n    setScrollerSpacing: function(width) {\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        this.callBase(width);\r\n        this.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).css({\r\n            paddingLeft: rtlEnabled ? width : \"\",\r\n            paddingRight: !rtlEnabled ? width : \"\"\r\n        })\r\n    }\r\n};\r\nvar ColumnHeadersViewFixedColumnsExtender = extend({}, baseFixedColumns, {\r\n    _getRowVisibleColumns: function(rowIndex) {\r\n        if (this._isFixedTableRendering) {\r\n            return this.getFixedColumns(rowIndex)\r\n        }\r\n        return this.callBase(rowIndex)\r\n    },\r\n    getContextMenuItems: function(options) {\r\n        var column = options.column;\r\n        var columnFixingOptions = this.option(\"columnFixing\");\r\n        var items = this.callBase(options);\r\n        if (options.row && \"header\" === options.row.rowType) {\r\n            if (true === columnFixingOptions.enabled && column && column.allowFixing) {\r\n                var onItemClick = params => {\r\n                    switch (params.itemData.value) {\r\n                        case \"none\":\r\n                            this._columnsController.columnOption(column.index, \"fixed\", false);\r\n                            break;\r\n                        case \"left\":\r\n                            this._columnsController.columnOption(column.index, {\r\n                                fixed: true,\r\n                                fixedPosition: \"left\"\r\n                            });\r\n                            break;\r\n                        case \"right\":\r\n                            this._columnsController.columnOption(column.index, {\r\n                                fixed: true,\r\n                                fixedPosition: \"right\"\r\n                            })\r\n                    }\r\n                };\r\n                items = items || [];\r\n                items.push({\r\n                    text: columnFixingOptions.texts.fix,\r\n                    beginGroup: true,\r\n                    items: [{\r\n                        text: columnFixingOptions.texts.leftPosition,\r\n                        value: \"left\",\r\n                        disabled: column.fixed && (!column.fixedPosition || \"left\" === column.fixedPosition),\r\n                        onItemClick: onItemClick\r\n                    }, {\r\n                        text: columnFixingOptions.texts.rightPosition,\r\n                        value: \"right\",\r\n                        disabled: column.fixed && \"right\" === column.fixedPosition,\r\n                        onItemClick: onItemClick\r\n                    }]\r\n                }, {\r\n                    text: columnFixingOptions.texts.unfix,\r\n                    value: \"none\",\r\n                    disabled: !column.fixed,\r\n                    onItemClick: onItemClick\r\n                })\r\n            }\r\n        }\r\n        return items\r\n    },\r\n    getFixedColumnElements: function(rowIndex) {\r\n        if (isDefined(rowIndex)) {\r\n            return this._fixedTableElement && this._getRowElements(this._fixedTableElement).eq(rowIndex).children()\r\n        }\r\n        var columnElements = this.getColumnElements();\r\n        var $transparentColumnElement = this.getTransparentColumnElement();\r\n        if (columnElements && $transparentColumnElement && $transparentColumnElement.length) {\r\n            var transparentColumnIndex = getTransparentColumnIndex(this.getFixedColumns());\r\n            columnElements.splice(transparentColumnIndex, $transparentColumnElement.get(0).colSpan, $transparentColumnElement.get(0))\r\n        }\r\n        return columnElements\r\n    },\r\n    getColumnWidths: function() {\r\n        var fixedWidths;\r\n        var result = this.callBase();\r\n        var $fixedColumnElements = this.getFixedColumnElements();\r\n        var fixedColumns = this.getFixedColumns();\r\n        if (this._fixedTableElement) {\r\n            if ($fixedColumnElements && $fixedColumnElements.length) {\r\n                fixedWidths = this._getWidths($fixedColumnElements)\r\n            } else {\r\n                fixedWidths = this.callBase(this._fixedTableElement)\r\n            }\r\n        }\r\n        return normalizeColumnWidths(fixedColumns, result, fixedWidths)\r\n    }\r\n});\r\nvar RowsViewFixedColumnsExtender = extend({}, baseFixedColumns, {\r\n    _detachHoverEvents: function() {\r\n        this._fixedTableElement && eventsEngine.off(this._fixedTableElement, \"mouseover mouseout\", \".dx-data-row\");\r\n        this._tableElement && eventsEngine.off(this._tableElement, \"mouseover mouseout\", \".dx-data-row\")\r\n    },\r\n    _attachHoverEvents: function() {\r\n        var that = this;\r\n        var attachHoverEvent = function($table) {\r\n            eventsEngine.on($table, \"mouseover mouseout\", \".dx-data-row\", that.createAction((function(args) {\r\n                var event = args.event;\r\n                var rowIndex = that.getRowIndex($(event.target).closest(\".dx-row\"));\r\n                var isHover = \"mouseover\" === event.type;\r\n                if (rowIndex >= 0) {\r\n                    that._tableElement && that._getRowElements(that._tableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover);\r\n                    that._fixedTableElement && that._getRowElements(that._fixedTableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover)\r\n                }\r\n            })))\r\n        };\r\n        if (that._fixedTableElement && that._tableElement) {\r\n            attachHoverEvent(that._fixedTableElement);\r\n            attachHoverEvent(that._tableElement)\r\n        }\r\n    },\r\n    _findContentElement: function() {\r\n        var that = this;\r\n        var $content;\r\n        var scrollTop;\r\n        var contentClass = that.addWidgetPrefix(CONTENT_CLASS);\r\n        var element = that.element();\r\n        var scrollDelay = browser.mozilla ? 60 : 0;\r\n        if (element && that._isFixedTableRendering) {\r\n            $content = element.children(\".\" + contentClass);\r\n            var scrollable = that.getScrollable();\r\n            if (!$content.length && scrollable) {\r\n                $content = $(\"<div>\").addClass(contentClass);\r\n                eventsEngine.on($content, \"scroll\", (function(e) {\r\n                    clearTimeout(that._fixedScrollTimeout);\r\n                    that._fixedScrollTimeout = setTimeout((function() {\r\n                        scrollTop = $(e.target).scrollTop();\r\n                        scrollable.scrollTo({\r\n                            y: scrollTop\r\n                        })\r\n                    }), scrollDelay)\r\n                }));\r\n                eventsEngine.on($content, wheelEventName, (function(e) {\r\n                    var $nearestScrollable = $(e.target).closest(\".dx-scrollable\");\r\n                    var shouldScroll = false;\r\n                    if (scrollable && scrollable.$element().is($nearestScrollable)) {\r\n                        shouldScroll = true\r\n                    } else {\r\n                        var nearestScrollableInstance = $nearestScrollable.length && Scrollable.getInstance($nearestScrollable.get(0));\r\n                        var nearestScrollableHasVerticalScrollbar = nearestScrollableInstance && nearestScrollableInstance.scrollHeight() - nearestScrollableInstance.clientHeight() > 0;\r\n                        shouldScroll = nearestScrollableInstance && !nearestScrollableHasVerticalScrollbar\r\n                    }\r\n                    if (shouldScroll) {\r\n                        scrollTop = scrollable.scrollTop();\r\n                        scrollable.scrollTo({\r\n                            y: scrollTop - e.delta\r\n                        });\r\n                        if (scrollable.scrollTop() > 0 && scrollable.scrollTop() + scrollable.clientHeight() < scrollable.scrollHeight() + that.getScrollbarWidth()) {\r\n                            return false\r\n                        }\r\n                    }\r\n                }));\r\n                $content.appendTo(element)\r\n            }\r\n            return $content\r\n        }\r\n        return that.callBase()\r\n    },\r\n    _updateScrollable: function() {\r\n        this.callBase();\r\n        var scrollable = this.getScrollable();\r\n        if (null !== scrollable && void 0 !== scrollable && scrollable._disposed) {\r\n            return\r\n        }\r\n        var scrollTop = scrollable && scrollable.scrollOffset().top;\r\n        this._updateFixedTablePosition(scrollTop)\r\n    },\r\n    _renderContent: function(contentElement, tableElement) {\r\n        if (this._isFixedTableRendering) {\r\n            return contentElement.empty().addClass(this.addWidgetPrefix(CONTENT_CLASS) + \" \" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).append(tableElement)\r\n        }\r\n        return this.callBase(contentElement, tableElement)\r\n    },\r\n    _getGroupCellOptions: function(options) {\r\n        if (this._isFixedTableRendering) {\r\n            return this.callBase(extend({}, options, {\r\n                columns: this._columnsController.getVisibleColumns()\r\n            }))\r\n        }\r\n        return this.callBase(options)\r\n    },\r\n    _renderGroupedCells: function($row, options) {\r\n        return this.callBase($row, extend({}, options, {\r\n            columns: this._columnsController.getVisibleColumns()\r\n        }))\r\n    },\r\n    _renderGroupSummaryCells: function($row, options) {\r\n        if (this._isFixedTableRendering) {\r\n            this.callBase($row, extend({}, options, {\r\n                columns: this._columnsController.getVisibleColumns()\r\n            }))\r\n        } else {\r\n            this.callBase($row, options)\r\n        }\r\n    },\r\n    _hasAlignByColumnSummaryItems: function(columnIndex, options) {\r\n        var result = this.callBase.apply(this, arguments);\r\n        var column = options.columns[columnIndex];\r\n        if (options.isFixed) {\r\n            return column.fixed && (result || \"right\" === column.fixedPosition)\r\n        }\r\n        return result && (!this._isFixedColumns || !column.fixed)\r\n    },\r\n    _renderGroupSummaryCellsCore: function($groupCell, options, groupCellColSpan, alignByColumnCellCount) {\r\n        var alignByFixedColumnCellCount;\r\n        if (this._isFixedTableRendering) {\r\n            options.isFixed = true;\r\n            alignByFixedColumnCellCount = this._getAlignByColumnCellCount(groupCellColSpan, options);\r\n            options.isFixed = false;\r\n            var startColumnIndex = options.columns.length - alignByFixedColumnCellCount;\r\n            options = extend({}, options, {\r\n                columns: this.getFixedColumns()\r\n            });\r\n            var transparentColumnIndex = getTransparentColumnIndex(options.columns);\r\n            if (startColumnIndex < transparentColumnIndex) {\r\n                alignByFixedColumnCellCount -= options.columns[transparentColumnIndex].colspan - 1 || 0;\r\n                groupCellColSpan -= options.columns[transparentColumnIndex].colspan - 1 || 0\r\n            } else if (alignByColumnCellCount > 0) {\r\n                $groupCell.css(\"visibility\", \"hidden\")\r\n            }\r\n            alignByColumnCellCount = alignByFixedColumnCellCount\r\n        }\r\n        this.callBase($groupCell, options, groupCellColSpan, alignByColumnCellCount)\r\n    },\r\n    _getSummaryCellIndex: function(columnIndex, columns) {\r\n        if (this._isFixedTableRendering) {\r\n            var transparentColumnIndex = getTransparentColumnIndex(columns);\r\n            if (columnIndex > transparentColumnIndex) {\r\n                columnIndex += columns[transparentColumnIndex].colspan - 1\r\n            }\r\n            return columnIndex\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _renderCore: function(change) {\r\n        this._detachHoverEvents();\r\n        this.callBase(change);\r\n        var isFixedColumns = this._isFixedColumns;\r\n        this.element().toggleClass(FIXED_COLUMNS_CLASS, isFixedColumns);\r\n        if (this.option(\"hoverStateEnabled\") && isFixedColumns) {\r\n            this._attachHoverEvents()\r\n        }\r\n    },\r\n    setRowsOpacity: function(columnIndex, value) {\r\n        this.callBase(columnIndex, value);\r\n        var $rows = this._getRowElements(this._fixedTableElement);\r\n        this._setRowsOpacityCore($rows, this.getFixedColumns(), columnIndex, value)\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        if (\"hoverStateEnabled\" === args.name && this._isFixedColumns) {\r\n            args.value ? this._attachHoverEvents() : this._detachHoverEvents()\r\n        }\r\n    },\r\n    getCellIndex: function($cell) {\r\n        var $fixedTable = this._fixedTableElement;\r\n        var cellIndex = 0;\r\n        if ($fixedTable && $cell.is(\"td\") && $cell.closest($fixedTable).length) {\r\n            var columns = this.getFixedColumns();\r\n            each(columns, (function(index, column) {\r\n                if (index === $cell[0].cellIndex) {\r\n                    return false\r\n                }\r\n                if (column.colspan) {\r\n                    cellIndex += column.colspan;\r\n                    return\r\n                }\r\n                cellIndex++\r\n            }));\r\n            return cellIndex\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _updateFixedTablePosition: function(scrollTop, needFocus) {\r\n        if (this._fixedTableElement && this._tableElement) {\r\n            var $focusedElement;\r\n            var editorFactory = this.getController(\"editorFactory\");\r\n            this._fixedTableElement.parent().scrollTop(scrollTop);\r\n            if (needFocus && editorFactory) {\r\n                $focusedElement = editorFactory.focus();\r\n                $focusedElement && editorFactory.focus($focusedElement)\r\n            }\r\n        }\r\n    },\r\n    setScrollerSpacing: function(vWidth, hWidth) {\r\n        var styles = {\r\n            marginBottom: 0\r\n        };\r\n        var $fixedContent = this.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\r\n        if ($fixedContent.length && this._fixedTableElement) {\r\n            $fixedContent.css(styles);\r\n            this._fixedTableElement.css(styles);\r\n            styles[this.option(\"rtlEnabled\") ? \"marginLeft\" : \"marginRight\"] = vWidth;\r\n            styles.marginBottom = hWidth;\r\n            var useNativeScrolling = this._scrollable && this._scrollable.option(\"useNative\");\r\n            (useNativeScrolling ? $fixedContent : this._fixedTableElement).css(styles)\r\n        }\r\n    },\r\n    _getElasticScrollTop: function(e) {\r\n        var elasticScrollTop = 0;\r\n        var scrollbarWidth = this.getScrollbarWidth(true);\r\n        if (e.scrollOffset.top < 0) {\r\n            elasticScrollTop = -e.scrollOffset.top\r\n        } else if (e.reachedBottom) {\r\n            var scrollableContent = this._findContentElement();\r\n            var $scrollableContainer = $(e.component.container());\r\n            var maxScrollTop = Math.max(getHeight(scrollableContent) + scrollbarWidth - getHeight($scrollableContainer), 0);\r\n            elasticScrollTop = maxScrollTop - e.scrollOffset.top\r\n        }\r\n        return elasticScrollTop\r\n    },\r\n    _applyElasticScrolling: function(e) {\r\n        if (this._fixedTableElement) {\r\n            var elasticScrollTop = this._getElasticScrollTop(e);\r\n            if (0 !== Math.ceil(elasticScrollTop)) {\r\n                move(this._fixedTableElement, {\r\n                    top: elasticScrollTop\r\n                })\r\n            } else {\r\n                this._fixedTableElement.css(\"transform\", \"\")\r\n            }\r\n        }\r\n    },\r\n    _handleScroll: function(e) {\r\n        this._updateFixedTablePosition(e.scrollOffset.top, true);\r\n        this._applyElasticScrolling(e);\r\n        this.callBase(e)\r\n    },\r\n    _updateContentPosition: function(isRender) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!isRender) {\r\n            this._updateFixedTablePosition(this._scrollTop)\r\n        }\r\n    },\r\n    _afterRowPrepared: function(e) {\r\n        if (this._isFixedTableRendering) {\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _scrollToElement: function($element) {\r\n        this.callBase($element, this.getFixedColumnsOffset())\r\n    },\r\n    dispose: function() {\r\n        this.callBase.apply(this, arguments);\r\n        clearTimeout(this._fixedScrollTimeout)\r\n    }\r\n});\r\nvar FooterViewFixedColumnsExtender = baseFixedColumns;\r\nexport var columnFixingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            columnFixing: {\r\n                enabled: false,\r\n                texts: {\r\n                    fix: messageLocalization.format(\"dxDataGrid-columnFixingFix\"),\r\n                    unfix: messageLocalization.format(\"dxDataGrid-columnFixingUnfix\"),\r\n                    leftPosition: messageLocalization.format(\"dxDataGrid-columnFixingLeftPosition\"),\r\n                    rightPosition: messageLocalization.format(\"dxDataGrid-columnFixingRightPosition\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFixedColumnsExtender,\r\n            rowsView: RowsViewFixedColumnsExtender,\r\n            footerView: FooterViewFixedColumnsExtender\r\n        },\r\n        controllers: function() {\r\n            var normalizeColumnIndicesByPoints = function(columns, fixedColumns, pointsByColumns) {\r\n                var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n                var correctIndex = columns.length - fixedColumns.length;\r\n                each(pointsByColumns, (function(_, point) {\r\n                    if (point.index > transparentColumnIndex) {\r\n                        point.columnIndex += correctIndex;\r\n                        point.index += correctIndex\r\n                    }\r\n                }));\r\n                return pointsByColumns\r\n            };\r\n            return {\r\n                draggingHeader: {\r\n                    _generatePointsByColumns: function(options) {\r\n                        var visibleColumns = options.columns;\r\n                        var targetDraggingPanel = options.targetDraggingPanel;\r\n                        if (targetDraggingPanel && \"headers\" === targetDraggingPanel.getName() && targetDraggingPanel.isFixedColumns()) {\r\n                            if (options.sourceColumn.fixed) {\r\n                                if (!options.rowIndex) {\r\n                                    options.columnElements = targetDraggingPanel.getFixedColumnElements(0)\r\n                                }\r\n                                options.columns = targetDraggingPanel.getFixedColumns(options.rowIndex);\r\n                                var pointsByColumns = this.callBase(options);\r\n                                normalizeColumnIndicesByPoints(visibleColumns, options.columns, pointsByColumns);\r\n                                return pointsByColumns\r\n                            }\r\n                        }\r\n                        return this.callBase(options)\r\n                    },\r\n                    _pointCreated: function(point, columns, location, sourceColumn) {\r\n                        var result = this.callBase.apply(this, arguments);\r\n                        var targetColumn = columns[point.columnIndex];\r\n                        var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\r\n                        if (!result && \"headers\" === location && $transparentColumn && $transparentColumn.length) {\r\n                            var boundingRect = getBoundingRect($transparentColumn.get(0));\r\n                            if (sourceColumn && sourceColumn.fixed) {\r\n                                return \"right\" === sourceColumn.fixedPosition ? point.x < boundingRect.right : point.x > boundingRect.left\r\n                            } else {\r\n                                if (targetColumn && targetColumn.fixed && \"right\" !== targetColumn.fixedPosition) {\r\n                                    return true\r\n                                }\r\n                                return point.x < boundingRect.left || point.x > boundingRect.right\r\n                            }\r\n                        }\r\n                        return result\r\n                    }\r\n                },\r\n                columnsResizer: {\r\n                    _generatePointsByColumns: function() {\r\n                        var that = this;\r\n                        var columnsController = that._columnsController;\r\n                        var columns = columnsController && that._columnsController.getVisibleColumns();\r\n                        var fixedColumns = columnsController && that._columnsController.getFixedColumns();\r\n                        var cells = that._columnHeadersView.getFixedColumnElements();\r\n                        var pointsByFixedColumns = [];\r\n                        that.callBase();\r\n                        if (cells && cells.length > 0) {\r\n                            pointsByFixedColumns = gridCoreUtils.getPointsByColumns(cells, (function(point) {\r\n                                return that._pointCreated(point, cells.length, fixedColumns)\r\n                            }));\r\n                            that._pointsByFixedColumns = normalizeColumnIndicesByPoints(columns, fixedColumns, pointsByFixedColumns)\r\n                        }\r\n                    },\r\n                    _pointCreated: function(point, cellsLength, columns) {\r\n                        var isWidgetResizingMode = \"widget\" === this.option(\"columnResizingMode\");\r\n                        if (point.index > 0 && point.index < cellsLength) {\r\n                            var currentColumn = columns[point.columnIndex - 1] || {};\r\n                            var nextColumn = columns[point.columnIndex] || {};\r\n                            if (currentColumn.fixed || nextColumn.fixed) {\r\n                                point.columnIndex -= 1;\r\n                                return !((currentColumn.allowResizing || currentColumn.command === COMMAND_TRANSPARENT) && (isWidgetResizingMode || nextColumn.allowResizing || nextColumn.command === COMMAND_TRANSPARENT))\r\n                            }\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    _getTargetPoint: function(pointsByColumns, currentX, deltaX) {\r\n                        var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\r\n                        if ($transparentColumn && $transparentColumn.length) {\r\n                            var boundingRect = getBoundingRect($transparentColumn.get(0));\r\n                            if (currentX <= boundingRect.left || currentX >= boundingRect.right) {\r\n                                return this.callBase(this._pointsByFixedColumns, currentX, deltaX)\r\n                            }\r\n                        }\r\n                        return this.callBase(pointsByColumns, currentX, deltaX)\r\n                    }\r\n                }\r\n            }\r\n        }()\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.column_fixing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnFixingModule\r\n} from \"../grid_core/ui.grid_core.column_fixing\";\r\ngridCore.registerModule(\"columnFixing\", columnFixingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.adaptivity.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport Guid from \"../../core/guid\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport Form from \"../form\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    isMaterial\r\n} from \"../themes\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport messageLocalization from \"../../localization/message\";\r\nvar COLUMN_HEADERS_VIEW = \"columnHeadersView\";\r\nvar ROWS_VIEW = \"rowsView\";\r\nvar FOOTER_VIEW = \"footerView\";\r\nvar COLUMN_VIEWS = [COLUMN_HEADERS_VIEW, ROWS_VIEW, FOOTER_VIEW];\r\nvar ADAPTIVE_NAMESPACE = \"dxDataGridAdaptivity\";\r\nvar HIDDEN_COLUMNS_WIDTH = \"adaptiveHidden\";\r\nvar ADAPTIVE_ROW_TYPE = \"detailAdaptive\";\r\nvar FORM_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\r\nvar FORM_ITEM_MODIFIED = \"dx-item-modified\";\r\nvar HIDDEN_COLUMN_CLASS = \"hidden-column\";\r\nvar ADAPTIVE_COLUMN_BUTTON_CLASS = \"adaptive-more\";\r\nvar ADAPTIVE_COLUMN_NAME_CLASS = \"dx-command-adaptive\";\r\nvar COMMAND_ADAPTIVE_HIDDEN_CLASS = \"dx-command-adaptive-hidden\";\r\nvar ADAPTIVE_DETAIL_ROW_CLASS = \"dx-adaptive-detail-row\";\r\nvar ADAPTIVE_ITEM_TEXT_CLASS = \"dx-adaptive-item-text\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar LAST_DATA_CELL_CLASS = \"dx-last-data-cell\";\r\nvar ADAPTIVE_COLUMN_NAME = \"adaptive\";\r\nvar EDIT_MODE_BATCH = \"batch\";\r\nvar EDIT_MODE_ROW = \"row\";\r\nvar EDIT_MODE_FORM = \"form\";\r\nvar EDIT_MODE_POPUP = \"popup\";\r\nvar REVERT_TOOLTIP_CLASS = \"revert-tooltip\";\r\nvar GROUP_CELL_CLASS = \"dx-group-cell\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar EXPAND_ARIA_NAME = \"dxDataGrid-ariaAdaptiveExpand\";\r\nvar COLLAPSE_ARIA_NAME = \"dxDataGrid-ariaAdaptiveCollapse\";\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\n\r\nfunction getColumnId(that, column) {\r\n    return that._columnsController.getColumnId(column)\r\n}\r\n\r\nfunction getDataCellElements($row) {\r\n    return $row.find(\"td:not(.dx-datagrid-hidden-column):not([class*='dx-command-'])\")\r\n}\r\n\r\nfunction adaptiveCellTemplate(container, options) {\r\n    var $adaptiveColumnButton;\r\n    var $container = $(container);\r\n    var adaptiveColumnsController = options.component.getController(\"adaptiveColumns\");\r\n    if (\"data\" === options.rowType) {\r\n        $adaptiveColumnButton = $(\"<span>\").addClass(adaptiveColumnsController.addWidgetPrefix(ADAPTIVE_COLUMN_BUTTON_CLASS));\r\n        eventsEngine.on($adaptiveColumnButton, addNamespace(clickEventName, ADAPTIVE_NAMESPACE), adaptiveColumnsController.createAction((function() {\r\n            adaptiveColumnsController.toggleExpandAdaptiveDetailRow(options.key)\r\n        })));\r\n        $adaptiveColumnButton.appendTo($container)\r\n    } else {\r\n        gridCoreUtils.setEmptyText($container)\r\n    }\r\n}\r\nvar AdaptiveColumnsController = modules.ViewController.inherit({\r\n    _isRowEditMode: function() {\r\n        var editMode = this._getEditMode();\r\n        return editMode === EDIT_MODE_ROW\r\n    },\r\n    _isItemModified: function(item, cellOptions) {\r\n        var columnIndex = this._columnsController.getVisibleIndex(item.column.index);\r\n        var rowIndex = this._dataController.getRowIndexByKey(cellOptions.key);\r\n        var row = this._dataController.items()[rowIndex + 1];\r\n        return row && row.modifiedValues && isDefined(row.modifiedValues[columnIndex])\r\n    },\r\n    _renderFormViewTemplate: function(item, cellOptions, $container) {\r\n        var column = item.column;\r\n        var focusAction = this.createAction((function() {\r\n            eventsEngine.trigger($container, clickEventName)\r\n        }));\r\n        var value = column.calculateCellValue(cellOptions.data);\r\n        var displayValue = gridCoreUtils.getDisplayValue(column, value, cellOptions.data, cellOptions.rowType);\r\n        var text = gridCoreUtils.formatValue(displayValue, column);\r\n        var isCellOrBatchEditMode = this._editingController.isCellOrBatchEditMode();\r\n        var rowsView = this._rowsView;\r\n        if (column.allowEditing && this.getController(\"keyboardNavigation\").isKeyboardEnabled()) {\r\n            $container.attr(\"tabIndex\", this.option(\"tabIndex\"));\r\n            if (isCellOrBatchEditMode) {\r\n                eventsEngine.off($container, \"focus\", focusAction);\r\n                eventsEngine.on($container, \"focus\", focusAction)\r\n            }\r\n        }\r\n        if (column.cellTemplate) {\r\n            var templateOptions = extend({}, cellOptions, {\r\n                value: value,\r\n                displayValue: displayValue,\r\n                text: text,\r\n                column: column\r\n            });\r\n            var isDomElement = !!$container.closest(getWindow().document).length;\r\n            rowsView.renderTemplate($container, column.cellTemplate, templateOptions, isDomElement).done(() => {\r\n                rowsView._cellPrepared($container, cellOptions)\r\n            })\r\n        } else {\r\n            var container = $container.get(0);\r\n            if (column.encodeHtml) {\r\n                container.textContent = text\r\n            } else {\r\n                container.innerHTML = text\r\n            }\r\n            $container.addClass(ADAPTIVE_ITEM_TEXT_CLASS);\r\n            if (!isDefined(text) || \"\" === text) {\r\n                $container.html(\"&nbsp;\")\r\n            }\r\n            if (!this._isRowEditMode()) {\r\n                if (this._isItemModified(item, cellOptions)) {\r\n                    $container.addClass(FORM_ITEM_MODIFIED)\r\n                }\r\n            }\r\n            rowsView._cellPrepared($container, cellOptions)\r\n        }\r\n    },\r\n    _getTemplate: function(item, cellOptions) {\r\n        var that = this;\r\n        var column = item.column;\r\n        var editingController = this.getController(\"editing\");\r\n        return function(options, container) {\r\n            var $container = $(container);\r\n            var columnIndex = that._columnsController.getVisibleIndex(column.index);\r\n            var templateOptions = extend({}, cellOptions);\r\n            var renderFormTemplate = function() {\r\n                var isItemEdited = that._isItemEdited(item);\r\n                templateOptions.value = cellOptions.row.values[columnIndex];\r\n                if (isItemEdited || column.showEditorAlways) {\r\n                    editingController.renderFormEditTemplate(templateOptions, item, options, $container, !isItemEdited)\r\n                } else {\r\n                    templateOptions.column = column;\r\n                    templateOptions.columnIndex = columnIndex;\r\n                    that._renderFormViewTemplate(item, templateOptions, $container)\r\n                }\r\n            };\r\n            renderFormTemplate();\r\n            templateOptions.watch && templateOptions.watch((function() {\r\n                return {\r\n                    isItemEdited: that._isItemEdited(item),\r\n                    value: cellOptions.row.values[columnIndex]\r\n                }\r\n            }), (function() {\r\n                $container.contents().remove();\r\n                $container.removeClass(ADAPTIVE_ITEM_TEXT_CLASS);\r\n                renderFormTemplate()\r\n            }))\r\n        }\r\n    },\r\n    _isVisibleColumnsValid: function(visibleColumns) {\r\n        if (visibleColumns < 2) {\r\n            return false\r\n        }\r\n        if (visibleColumns.length - function() {\r\n                var result = 0;\r\n                for (var j = 0; j < visibleColumns.length; j++) {\r\n                    var visibleColumn = visibleColumns[j];\r\n                    if (visibleColumn.command) {\r\n                        result++\r\n                    }\r\n                }\r\n                return result\r\n            }() <= 1) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    _calculatePercentWidths: function(widths, visibleColumns) {\r\n        var that = this;\r\n        var percentWidths = 0;\r\n        visibleColumns.forEach((function(item, index) {\r\n            if (widths[index] !== HIDDEN_COLUMNS_WIDTH) {\r\n                percentWidths += that._getItemPercentWidth(item)\r\n            }\r\n        }));\r\n        return percentWidths\r\n    },\r\n    _isPercentWidth: function(width) {\r\n        return isString(width) && \"%\" === width.slice(-1)\r\n    },\r\n    _isColumnHidden: function(column) {\r\n        return this._hiddenColumns.filter((function(hiddenColumn) {\r\n            return hiddenColumn.index === column.index\r\n        })).length > 0\r\n    },\r\n    _getAverageColumnsWidth: function(containerWidth, columns, columnsCanFit) {\r\n        var that = this;\r\n        var fixedColumnsWidth = 0;\r\n        var columnsWithoutFixedWidthCount = 0;\r\n        columns.forEach((function(column) {\r\n            if (!that._isColumnHidden(column)) {\r\n                var width = column.width;\r\n                if (isDefined(width) && !isNaN(parseFloat(width))) {\r\n                    fixedColumnsWidth += that._isPercentWidth(width) ? that._calculatePercentWidth({\r\n                        visibleIndex: column.visibleIndex,\r\n                        columnsCount: columns.length,\r\n                        columnsCanFit: columnsCanFit,\r\n                        bestFitWidth: column.bestFitWidth,\r\n                        columnWidth: width,\r\n                        containerWidth: containerWidth\r\n                    }) : parseFloat(width)\r\n                } else {\r\n                    columnsWithoutFixedWidthCount++\r\n                }\r\n            }\r\n        }));\r\n        return (containerWidth - fixedColumnsWidth) / columnsWithoutFixedWidthCount\r\n    },\r\n    _calculateColumnWidth: function(column, containerWidth, contentColumns, columnsCanFit) {\r\n        var columnId = getColumnId(this, column);\r\n        var widthOption = this._columnsController.columnOption(columnId, \"width\");\r\n        var bestFitWidth = this._columnsController.columnOption(columnId, \"bestFitWidth\");\r\n        var columnsCount = contentColumns.length;\r\n        var colWidth;\r\n        if (widthOption && \"auto\" !== widthOption) {\r\n            if (this._isPercentWidth(widthOption)) {\r\n                colWidth = this._calculatePercentWidth({\r\n                    visibleIndex: column.visibleIndex,\r\n                    columnsCount: columnsCount,\r\n                    columnsCanFit: columnsCanFit,\r\n                    bestFitWidth: bestFitWidth,\r\n                    columnWidth: widthOption,\r\n                    containerWidth: containerWidth\r\n                })\r\n            } else {\r\n                return parseFloat(widthOption)\r\n            }\r\n        } else {\r\n            var columnAutoWidth = this.option(\"columnAutoWidth\");\r\n            colWidth = columnAutoWidth || !!column.command ? bestFitWidth : this._getAverageColumnsWidth(containerWidth, contentColumns, columnsCanFit)\r\n        }\r\n        return colWidth\r\n    },\r\n    _calculatePercentWidth: function(options) {\r\n        var columnFitted = options.visibleIndex < options.columnsCount - 1 && options.columnsCanFit;\r\n        var partialWidth = options.containerWidth * parseFloat(options.columnWidth) / 100;\r\n        var resultWidth = options.columnsCanFit && partialWidth < options.bestFitWidth ? options.bestFitWidth : partialWidth;\r\n        return columnFitted ? options.containerWidth * parseFloat(options.columnWidth) / 100 : resultWidth\r\n    },\r\n    _getNotTruncatedColumnWidth: function(column, containerWidth, contentColumns, columnsCanFit) {\r\n        var columnId = getColumnId(this, column);\r\n        var widthOption = this._columnsController.columnOption(columnId, \"width\");\r\n        var bestFitWidth = this._columnsController.columnOption(columnId, \"bestFitWidth\");\r\n        if (widthOption && \"auto\" !== widthOption && !this._isPercentWidth(widthOption)) {\r\n            return parseFloat(widthOption)\r\n        }\r\n        var colWidth = this._calculateColumnWidth(column, containerWidth, contentColumns, columnsCanFit);\r\n        return colWidth < bestFitWidth ? null : colWidth\r\n    },\r\n    _getItemPercentWidth: function(item) {\r\n        var result = 0;\r\n        if (item.width && this._isPercentWidth(item.width)) {\r\n            result = parseFloat(item.width)\r\n        }\r\n        return result\r\n    },\r\n    _getCommandColumnsWidth: function() {\r\n        var that = this;\r\n        var columns = that._columnsController.getVisibleColumns();\r\n        var colWidth = 0;\r\n        each(columns, (function(index, column) {\r\n            if (column.index < 0 || column.command) {\r\n                colWidth += that._columnsController.columnOption(getColumnId(that, column), \"bestFitWidth\") || 0\r\n            }\r\n        }));\r\n        return colWidth\r\n    },\r\n    _isItemEdited: function(item) {\r\n        if (this.isFormOrPopupEditMode()) {\r\n            return false\r\n        }\r\n        if (this._isRowEditMode()) {\r\n            var editRowKey = this.option(\"editing.editRowKey\");\r\n            if (equalByValue(editRowKey, this._dataController.adaptiveExpandedKey())) {\r\n                return true\r\n            }\r\n        } else {\r\n            var rowIndex = this._dataController.getRowIndexByKey(this._dataController.adaptiveExpandedKey()) + 1;\r\n            var columnIndex = this._columnsController.getVisibleIndex(item.column.index);\r\n            return this._editingController.isEditCell(rowIndex, columnIndex)\r\n        }\r\n    },\r\n    _getFormItemsByHiddenColumns: function(hiddenColumns) {\r\n        var items = [];\r\n        each(hiddenColumns, (function(_, column) {\r\n            items.push({\r\n                column: column,\r\n                name: column.name,\r\n                dataField: column.dataField,\r\n                visibleIndex: column.visibleIndex\r\n            })\r\n        }));\r\n        return items\r\n    },\r\n    _getAdaptiveColumnVisibleIndex: function(visibleColumns) {\r\n        for (var i = 0; i < visibleColumns.length; i++) {\r\n            var column = visibleColumns[i];\r\n            if (column.command === ADAPTIVE_COLUMN_NAME) {\r\n                return i\r\n            }\r\n        }\r\n    },\r\n    _hideAdaptiveColumn: function(resultWidths, visibleColumns) {\r\n        var visibleIndex = this._getAdaptiveColumnVisibleIndex(visibleColumns);\r\n        if (isDefined(visibleIndex)) {\r\n            resultWidths[visibleIndex] = HIDDEN_COLUMNS_WIDTH;\r\n            this._hideVisibleColumn({\r\n                isCommandColumn: true,\r\n                visibleIndex: visibleIndex\r\n            })\r\n        }\r\n    },\r\n    _showHiddenCellsInView: function(_ref) {\r\n        var {\r\n            $cells: $cells,\r\n            isCommandColumn: isCommandColumn\r\n        } = _ref;\r\n        var cssClassNameToRemove = isCommandColumn ? COMMAND_ADAPTIVE_HIDDEN_CLASS : this.addWidgetPrefix(HIDDEN_COLUMN_CLASS);\r\n        $cells.removeClass(cssClassNameToRemove)\r\n    },\r\n    _showHiddenColumns: function() {\r\n        for (var i = 0; i < COLUMN_VIEWS.length; i++) {\r\n            var view = this.getView(COLUMN_VIEWS[i]);\r\n            if (view && view.isVisible() && view.element()) {\r\n                var viewName = view.name;\r\n                var $hiddenCommandCells = view.element().find(\".\" + COMMAND_ADAPTIVE_HIDDEN_CLASS);\r\n                this._showHiddenCellsInView({\r\n                    viewName: viewName,\r\n                    $cells: $hiddenCommandCells,\r\n                    isCommandColumn: true\r\n                });\r\n                var $hiddenCells = view.element().find(\".\" + this.addWidgetPrefix(HIDDEN_COLUMN_CLASS));\r\n                this._showHiddenCellsInView({\r\n                    viewName: viewName,\r\n                    $cells: $hiddenCells\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _isCellValid: function($cell) {\r\n        return $cell && $cell.length && !$cell.hasClass(MASTER_DETAIL_CELL_CLASS) && !$cell.hasClass(GROUP_CELL_CLASS)\r\n    },\r\n    _hideVisibleColumn: function(_ref2) {\r\n        var {\r\n            isCommandColumn: isCommandColumn,\r\n            visibleIndex: visibleIndex\r\n        } = _ref2;\r\n        var that = this;\r\n        COLUMN_VIEWS.forEach((function(viewName) {\r\n            var view = that.getView(viewName);\r\n            view && that._hideVisibleColumnInView({\r\n                view: view,\r\n                isCommandColumn: isCommandColumn,\r\n                visibleIndex: visibleIndex\r\n            })\r\n        }))\r\n    },\r\n    _hideVisibleColumnInView: function(_ref3) {\r\n        var {\r\n            view: view,\r\n            isCommandColumn: isCommandColumn,\r\n            visibleIndex: visibleIndex\r\n        } = _ref3;\r\n        var viewName = view.name;\r\n        var $cellElement;\r\n        var column = this._columnsController.getVisibleColumns()[visibleIndex];\r\n        var editFormRowIndex = this._editingController && this._editingController.getEditFormRowIndex();\r\n        if (view && view.isVisible() && column) {\r\n            var rowsCount = view.getRowsCount();\r\n            var $rowElements = view._getRowElements();\r\n            for (var rowIndex = 0; rowIndex < rowsCount; rowIndex++) {\r\n                var cancelClassAdding = rowIndex === editFormRowIndex && viewName === ROWS_VIEW && \"popup\" !== this.option(\"editing.mode\");\r\n                if (!cancelClassAdding) {\r\n                    var currentVisibleIndex = viewName === COLUMN_HEADERS_VIEW ? this._columnsController.getVisibleIndex(column.index, rowIndex) : visibleIndex;\r\n                    if (currentVisibleIndex >= 0) {\r\n                        var $rowElement = $rowElements.eq(rowIndex);\r\n                        $cellElement = this._findCellElementInRow($rowElement, currentVisibleIndex);\r\n                        this._isCellValid($cellElement) && this._hideVisibleCellInView({\r\n                            viewName: viewName,\r\n                            isCommandColumn: isCommandColumn,\r\n                            $cell: $cellElement\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _findCellElementInRow($rowElement, visibleColumnIndex) {\r\n        var $rowCells = $rowElement.children();\r\n        var visibleIndex = visibleColumnIndex;\r\n        var cellIsInsideGroup = false;\r\n        if ($rowElement.hasClass(GROUP_ROW_CLASS)) {\r\n            var $groupCell = $rowElement.find(\".\".concat(GROUP_CELL_CLASS));\r\n            var colSpan = $groupCell.attr(\"colspan\");\r\n            if ($groupCell.length && isDefined(colSpan)) {\r\n                var groupCellLength = parseInt(colSpan);\r\n                var endGroupIndex = $groupCell.index() + groupCellLength - 1;\r\n                if (visibleColumnIndex > endGroupIndex) {\r\n                    visibleIndex = visibleColumnIndex - groupCellLength + 1\r\n                } else {\r\n                    cellIsInsideGroup = true\r\n                }\r\n            }\r\n        }\r\n        var $cellElement = !cellIsInsideGroup ? $rowCells.eq(visibleIndex) : void 0;\r\n        return $cellElement\r\n    },\r\n    _hideVisibleCellInView: function(_ref4) {\r\n        var {\r\n            $cell: $cell,\r\n            isCommandColumn: isCommandColumn\r\n        } = _ref4;\r\n        var cssClassNameToAdd = isCommandColumn ? COMMAND_ADAPTIVE_HIDDEN_CLASS : this.addWidgetPrefix(HIDDEN_COLUMN_CLASS);\r\n        $cell.addClass(cssClassNameToAdd)\r\n    },\r\n    _getEditMode: function() {\r\n        return this._editingController.getEditMode()\r\n    },\r\n    isFormOrPopupEditMode: function() {\r\n        var editMode = this._getEditMode();\r\n        return editMode === EDIT_MODE_FORM || editMode === EDIT_MODE_POPUP\r\n    },\r\n    hideRedundantColumns: function(resultWidths, visibleColumns, hiddenQueue) {\r\n        this._hiddenColumns = [];\r\n        if (this._isVisibleColumnsValid(visibleColumns) && hiddenQueue.length) {\r\n            var totalWidth = 0;\r\n            var $rootElement = this.component.$element();\r\n            var rootElementWidth = getWidth($rootElement) - this._getCommandColumnsWidth();\r\n            var getVisibleContentColumns = function() {\r\n                return visibleColumns.filter(item => !item.command && 0 === this._hiddenColumns.filter(i => i.index === item.index).length)\r\n            }.bind(this);\r\n            var visibleContentColumns = getVisibleContentColumns();\r\n            var contentColumnsCount = visibleContentColumns.length;\r\n            var i;\r\n            var hasHiddenColumns;\r\n            var needHideColumn;\r\n            do {\r\n                needHideColumn = false;\r\n                totalWidth = 0;\r\n                var percentWidths = this._calculatePercentWidths(resultWidths, visibleColumns);\r\n                var columnsCanFit = percentWidths < 100 && 0 !== percentWidths;\r\n                for (i = 0; i < visibleColumns.length; i++) {\r\n                    var visibleColumn = visibleColumns[i];\r\n                    var columnWidth = this._getNotTruncatedColumnWidth(visibleColumn, rootElementWidth, visibleContentColumns, columnsCanFit);\r\n                    var columnId = getColumnId(this, visibleColumn);\r\n                    var widthOption = this._columnsController.columnOption(columnId, \"width\");\r\n                    var minWidth = this._columnsController.columnOption(columnId, \"minWidth\");\r\n                    var columnBestFitWidth = this._columnsController.columnOption(columnId, \"bestFitWidth\");\r\n                    if (resultWidths[i] === HIDDEN_COLUMNS_WIDTH) {\r\n                        hasHiddenColumns = true;\r\n                        continue\r\n                    }\r\n                    if (!columnWidth && !visibleColumn.command && !visibleColumn.fixed) {\r\n                        needHideColumn = true;\r\n                        break\r\n                    }\r\n                    if (!widthOption || \"auto\" === widthOption) {\r\n                        columnWidth = Math.max(columnBestFitWidth || 0, minWidth || 0)\r\n                    }\r\n                    if (visibleColumn.command !== ADAPTIVE_COLUMN_NAME || hasHiddenColumns) {\r\n                        totalWidth += columnWidth\r\n                    }\r\n                }\r\n                needHideColumn = needHideColumn || totalWidth > getWidth($rootElement);\r\n                if (needHideColumn) {\r\n                    var column = hiddenQueue.pop();\r\n                    var visibleIndex = this._columnsController.getVisibleIndex(column.index);\r\n                    rootElementWidth += this._calculateColumnWidth(column, rootElementWidth, visibleContentColumns, columnsCanFit);\r\n                    this._hideVisibleColumn({\r\n                        visibleIndex: visibleIndex\r\n                    });\r\n                    resultWidths[visibleIndex] = HIDDEN_COLUMNS_WIDTH;\r\n                    this._hiddenColumns.push(column);\r\n                    visibleContentColumns = getVisibleContentColumns()\r\n                }\r\n            } while (needHideColumn && visibleContentColumns.length > 1 && hiddenQueue.length);\r\n            if (contentColumnsCount === visibleContentColumns.length) {\r\n                this._hideAdaptiveColumn(resultWidths, visibleColumns)\r\n            }\r\n        } else {\r\n            this._hideAdaptiveColumn(resultWidths, visibleColumns)\r\n        }\r\n    },\r\n    getItemContentByColumnIndex: function(visibleColumnIndex) {\r\n        var $itemContent;\r\n        for (var i = 0; i < this._$itemContents.length; i++) {\r\n            $itemContent = this._$itemContents.eq(i);\r\n            var item = $itemContent.data(\"dx-form-item\");\r\n            if (item && item.column && this._columnsController.getVisibleIndex(item.column.index) === visibleColumnIndex) {\r\n                return $itemContent\r\n            }\r\n        }\r\n    },\r\n    toggleExpandAdaptiveDetailRow: function(key, alwaysExpanded) {\r\n        if (!(this.isFormOrPopupEditMode() && this._editingController.isEditing())) {\r\n            this.getController(\"data\").toggleExpandAdaptiveDetailRow(key, alwaysExpanded)\r\n        }\r\n    },\r\n    createFormByHiddenColumns: function(container, options) {\r\n        var that = this;\r\n        var $container = $(container);\r\n        var userFormOptions = {\r\n            items: that._getFormItemsByHiddenColumns(that._hiddenColumns),\r\n            formID: \"dx-\" + new Guid\r\n        };\r\n        var defaultFormOptions = isMaterial() ? {\r\n            colCount: 2\r\n        } : {};\r\n        this.executeAction(\"onAdaptiveDetailRowPreparing\", {\r\n            formOptions: userFormOptions\r\n        });\r\n        that._$itemContents = null;\r\n        that._form = that._createComponent($(\"<div>\").appendTo($container), Form, extend(defaultFormOptions, userFormOptions, {\r\n            customizeItem: function(item) {\r\n                var column = item.column || that._columnsController.columnOption(item.name || item.dataField);\r\n                if (column) {\r\n                    item.label = item.label || {};\r\n                    item.label.text = item.label.text || column.caption;\r\n                    item.column = column;\r\n                    item.template = that._getTemplate(item, options, that.updateForm.bind(that))\r\n                }\r\n                userFormOptions.customizeItem && userFormOptions.customizeItem.call(this, item)\r\n            },\r\n            onContentReady: function(e) {\r\n                userFormOptions.onContentReady && userFormOptions.onContentReady.call(this, e);\r\n                that._$itemContents = $container.find(\".\" + FORM_ITEM_CONTENT_CLASS)\r\n            }\r\n        }))\r\n    },\r\n    hasAdaptiveDetailRowExpanded: function() {\r\n        return isDefined(this._dataController.adaptiveExpandedKey())\r\n    },\r\n    updateForm: function(hiddenColumns) {\r\n        if (this.hasAdaptiveDetailRowExpanded()) {\r\n            if (this._form && isDefined(this._form._contentReadyAction)) {\r\n                if (hiddenColumns && hiddenColumns.length) {\r\n                    this._form.option(\"items\", this._getFormItemsByHiddenColumns(hiddenColumns))\r\n                } else {\r\n                    this._form.repaint()\r\n                }\r\n            }\r\n        }\r\n    },\r\n    updateHidingQueue: function(columns) {\r\n        var hideableColumns = columns.filter((function(column) {\r\n            return column.visible && !column.type && !column.fixed && !(isDefined(column.groupIndex) && column.groupIndex >= 0)\r\n        }));\r\n        var columnsHasHidingPriority;\r\n        var i;\r\n        this._hidingColumnsQueue = [];\r\n        if (this.option(\"allowColumnResizing\") && \"widget\" === this.option(\"columnResizingMode\")) {\r\n            return this._hidingColumnsQueue\r\n        }\r\n        for (i = 0; i < hideableColumns.length; i++) {\r\n            if (isDefined(hideableColumns[i].hidingPriority) && hideableColumns[i].hidingPriority >= 0) {\r\n                columnsHasHidingPriority = true;\r\n                this._hidingColumnsQueue[hideableColumns[i].hidingPriority] = hideableColumns[i]\r\n            }\r\n        }\r\n        if (columnsHasHidingPriority) {\r\n            this._hidingColumnsQueue.reverse()\r\n        } else if (this.option(\"columnHidingEnabled\")) {\r\n            for (i = 0; i < hideableColumns.length; i++) {\r\n                var visibleIndex = this._columnsController.getVisibleIndex(hideableColumns[i].index);\r\n                this._hidingColumnsQueue[visibleIndex] = hideableColumns[i]\r\n            }\r\n        }\r\n        this._hidingColumnsQueue = this._hidingColumnsQueue.filter(Object);\r\n        return this._hidingColumnsQueue\r\n    },\r\n    getHiddenColumns: function() {\r\n        return this._hiddenColumns\r\n    },\r\n    hasHiddenColumns: function() {\r\n        return this._hiddenColumns.length > 0\r\n    },\r\n    getHidingColumnsQueue: function() {\r\n        return this._hidingColumnsQueue\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._dataController = that.getController(\"data\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._columnsController.addCommandColumn({\r\n            type: ADAPTIVE_COLUMN_NAME,\r\n            command: ADAPTIVE_COLUMN_NAME,\r\n            visible: true,\r\n            adaptiveHidden: true,\r\n            cssClass: ADAPTIVE_COLUMN_NAME_CLASS,\r\n            alignment: \"center\",\r\n            width: \"auto\",\r\n            cellTemplate: adaptiveCellTemplate,\r\n            fixedPosition: \"right\"\r\n        });\r\n        that._columnsController.columnsChanged.add((function() {\r\n            var isAdaptiveVisible = !!that.updateHidingQueue(that._columnsController.getColumns()).length;\r\n            that._columnsController.columnOption(\"command:adaptive\", \"adaptiveHidden\", !isAdaptiveVisible, true)\r\n        }));\r\n        that._editingController = that.getController(\"editing\");\r\n        that._hidingColumnsQueue = [];\r\n        that._hiddenColumns = [];\r\n        that.createAction(\"onAdaptiveDetailRowPreparing\");\r\n        that.callBase()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"columnHidingEnabled\" === args.name) {\r\n            this._columnsController.columnOption(\"command:adaptive\", \"adaptiveHidden\", !args.value)\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    publicMethods: function() {\r\n        return [\"isAdaptiveDetailRowExpanded\", \"expandAdaptiveDetailRow\", \"collapseAdaptiveDetailRow\"]\r\n    },\r\n    isAdaptiveDetailRowExpanded: function(key) {\r\n        return this._dataController.adaptiveExpandedKey() && equalByValue(this._dataController.adaptiveExpandedKey(), key)\r\n    },\r\n    expandAdaptiveDetailRow: function(key) {\r\n        if (!this.hasAdaptiveDetailRowExpanded()) {\r\n            this.toggleExpandAdaptiveDetailRow(key)\r\n        }\r\n    },\r\n    collapseAdaptiveDetailRow: function() {\r\n        if (this.hasAdaptiveDetailRowExpanded()) {\r\n            this.toggleExpandAdaptiveDetailRow()\r\n        }\r\n    },\r\n    updateCommandAdaptiveAriaLabel: function(key, label) {\r\n        var rowIndex = this._dataController.getRowIndexByKey(key);\r\n        if (-1 === rowIndex) {\r\n            return\r\n        }\r\n        var $row = $(this.component.getRowElement(rowIndex));\r\n        this.setCommandAdaptiveAriaLabel($row, label)\r\n    },\r\n    setCommandAdaptiveAriaLabel: function($row, labelName) {\r\n        var $adaptiveCommand = $row.find(\".dx-command-adaptive\");\r\n        $adaptiveCommand.attr(\"aria-label\", messageLocalization.format(labelName))\r\n    }\r\n});\r\nexport var adaptivityModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            columnHidingEnabled: false,\r\n            onAdaptiveDetailRowPreparing: null\r\n        }\r\n    },\r\n    controllers: {\r\n        adaptiveColumns: AdaptiveColumnsController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _getCellTemplate: function(options) {\r\n                    var that = this;\r\n                    var column = options.column;\r\n                    if (options.rowType === ADAPTIVE_ROW_TYPE && \"detail\" === column.command) {\r\n                        return function(container, options) {\r\n                            that._adaptiveColumnsController.createFormByHiddenColumns($(container), options)\r\n                        }\r\n                    }\r\n                    return that.callBase(options)\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row && row.rowType === ADAPTIVE_ROW_TYPE && row.key === this._dataController.adaptiveExpandedKey()) {\r\n                        $row.addClass(ADAPTIVE_DETAIL_ROW_CLASS)\r\n                    }\r\n                    return $row\r\n                },\r\n                _renderCells: function($row, options) {\r\n                    this.callBase($row, options);\r\n                    var adaptiveColumnsController = this._adaptiveColumnsController;\r\n                    var hidingColumnsQueueLength = adaptiveColumnsController.getHidingColumnsQueue().length;\r\n                    var hiddenColumnsLength = adaptiveColumnsController.getHiddenColumns().length;\r\n                    if (hidingColumnsQueueLength && !hiddenColumnsLength) {\r\n                        getDataCellElements($row).last().addClass(LAST_DATA_CELL_CLASS)\r\n                    }\r\n                    if (\"data\" === options.row.rowType) {\r\n                        adaptiveColumnsController.setCommandAdaptiveAriaLabel($row, EXPAND_ARIA_NAME)\r\n                    }\r\n                },\r\n                _getColumnIndexByElementCore: function($element) {\r\n                    var $itemContent = $element.closest(\".\" + FORM_ITEM_CONTENT_CLASS);\r\n                    if ($itemContent.length && $itemContent.closest(this.component.$element()).length) {\r\n                        var formItem = $itemContent.length ? $itemContent.first().data(\"dx-form-item\") : null;\r\n                        return formItem && formItem.column && this._columnsController.getVisibleIndex(formItem.column.index)\r\n                    } else {\r\n                        return this.callBase($element)\r\n                    }\r\n                },\r\n                _cellPrepared: function($cell, options) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (options.row.rowType !== ADAPTIVE_ROW_TYPE && options.column.visibleWidth === HIDDEN_COLUMNS_WIDTH) {\r\n                        $cell.addClass(this.addWidgetPrefix(HIDDEN_COLUMN_CLASS))\r\n                    }\r\n                },\r\n                _getCellElement: function(rowIndex, columnIdentifier) {\r\n                    var item = this._dataController.items()[rowIndex];\r\n                    if (item && item.rowType === ADAPTIVE_ROW_TYPE) {\r\n                        return this._adaptiveColumnsController.getItemContentByColumnIndex(columnIdentifier)\r\n                    } else {\r\n                        return this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                getContextMenuItems: function(options) {\r\n                    if (options.row && \"detailAdaptive\" === options.row.rowType) {\r\n                        var view = this.component.getView(\"columnHeadersView\");\r\n                        var formItem = $(options.targetElement).closest(\".dx-field-item-label\").next().data(\"dx-form-item\");\r\n                        options.column = formItem ? formItem.column : options.column;\r\n                        return view.getContextMenuItems && view.getContextMenuItems(options)\r\n                    }\r\n                    return this.callBase && this.callBase(options)\r\n                },\r\n                isClickableElement: function($target) {\r\n                    var isClickable = this.callBase ? this.callBase($target) : false;\r\n                    return isClickable || !!$target.closest(\".\" + ADAPTIVE_COLUMN_NAME_CLASS).length\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveColumnsController = this.getController(\"adaptiveColumns\")\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            export: {\r\n                _updateColumnWidth: function(column, width) {\r\n                    this.callBase(column, column.visibleWidth === HIDDEN_COLUMNS_WIDTH ? column.bestFitWidth : width)\r\n                }\r\n            },\r\n            columnsResizer: {\r\n                _pointCreated: function(point, cellsLength, columns) {\r\n                    var result = this.callBase(point, cellsLength, columns);\r\n                    var currentColumn = columns[point.columnIndex] || {};\r\n                    var nextColumnIndex = this._getNextColumnIndex(point.columnIndex);\r\n                    var nextColumn = columns[nextColumnIndex] || {};\r\n                    var hasHiddenColumnsOnly = nextColumnIndex !== point.columnIndex + 1 && nextColumn.command;\r\n                    var hasAdaptiveHiddenWidth = currentColumn.visibleWidth === HIDDEN_COLUMNS_WIDTH || hasHiddenColumnsOnly;\r\n                    return result || hasAdaptiveHiddenWidth\r\n                },\r\n                _getNextColumnIndex: function(currentColumnIndex) {\r\n                    var visibleColumns = this._columnsController.getVisibleColumns();\r\n                    var index = this.callBase(currentColumnIndex);\r\n                    while (visibleColumns[index] && visibleColumns[index].visibleWidth === HIDDEN_COLUMNS_WIDTH) {\r\n                        index++\r\n                    }\r\n                    return index\r\n                }\r\n            },\r\n            draggingHeader: {\r\n                _pointCreated: function(point, columns, location, sourceColumn) {\r\n                    var result = this.callBase(point, columns, location, sourceColumn);\r\n                    var column = columns[point.columnIndex - 1] || {};\r\n                    var hasAdaptiveHiddenWidth = column.visibleWidth === HIDDEN_COLUMNS_WIDTH;\r\n                    return result || hasAdaptiveHiddenWidth\r\n                }\r\n            },\r\n            editing: {\r\n                _isRowEditMode: function() {\r\n                    return this.getEditMode() === EDIT_MODE_ROW\r\n                },\r\n                _getFormEditItemTemplate: function(cellOptions, column) {\r\n                    if (this.getEditMode() !== EDIT_MODE_ROW && \"detailAdaptive\" === cellOptions.rowType) {\r\n                        cellOptions.columnIndex = this._columnsController.getVisibleIndex(column.index);\r\n                        return this.getColumnTemplate(cellOptions)\r\n                    }\r\n                    return this.callBase(cellOptions, column)\r\n                },\r\n                _closeEditItem: function($targetElement) {\r\n                    var $itemContents = $targetElement.closest(\".\" + FORM_ITEM_CONTENT_CLASS);\r\n                    var rowIndex = this._dataController.getRowIndexByKey(this._dataController.adaptiveExpandedKey()) + 1;\r\n                    var formItem = $itemContents.length ? $itemContents.first().data(\"dx-form-item\") : null;\r\n                    var columnIndex = formItem && formItem.column && this._columnsController.getVisibleIndex(formItem.column.index);\r\n                    if (!this.isEditCell(rowIndex, columnIndex)) {\r\n                        this.callBase($targetElement)\r\n                    }\r\n                },\r\n                _beforeUpdateItems: function(rowIndices, rowIndex) {\r\n                    if (!this._adaptiveController.isFormOrPopupEditMode() && this._adaptiveController.hasHiddenColumns()) {\r\n                        var items = this._dataController.items();\r\n                        var item = items[rowIndex];\r\n                        var oldExpandRowIndex = gridCoreUtils.getIndexByKey(this._dataController.adaptiveExpandedKey(), items);\r\n                        this._isForceRowAdaptiveExpand = !this._adaptiveController.hasAdaptiveDetailRowExpanded();\r\n                        if (oldExpandRowIndex >= 0) {\r\n                            rowIndices.push(oldExpandRowIndex + 1)\r\n                        }\r\n                        rowIndices.push(rowIndex + 1);\r\n                        this._dataController.adaptiveExpandedKey(item.key)\r\n                    }\r\n                },\r\n                _afterInsertRow: function(key) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this._adaptiveController.hasHiddenColumns()) {\r\n                        this._adaptiveController.toggleExpandAdaptiveDetailRow(key, this.isRowEditMode());\r\n                        this._isForceRowAdaptiveExpand = true\r\n                    }\r\n                },\r\n                _collapseAdaptiveDetailRow: function() {\r\n                    if (this._isRowEditMode() && this._isForceRowAdaptiveExpand) {\r\n                        this._adaptiveController.collapseAdaptiveDetailRow();\r\n                        this._isForceRowAdaptiveExpand = false\r\n                    }\r\n                },\r\n                _cancelEditAdaptiveDetailRow: function() {\r\n                    if (this._adaptiveController.hasHiddenColumns()) {\r\n                        this._collapseAdaptiveDetailRow()\r\n                    }\r\n                },\r\n                _afterSaveEditData: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    var deferred = new Deferred;\r\n                    if (this._isRowEditMode() && this._adaptiveController.hasHiddenColumns()) {\r\n                        when(this.getController(\"validating\").validate(true)).done(isValid => {\r\n                            if (isValid) {\r\n                                this._cancelEditAdaptiveDetailRow()\r\n                            }\r\n                            deferred.resolve()\r\n                        })\r\n                    } else {\r\n                        deferred.resolve()\r\n                    }\r\n                    return deferred.promise()\r\n                },\r\n                _beforeCancelEditData: function() {\r\n                    this.callBase();\r\n                    this._cancelEditAdaptiveDetailRow()\r\n                },\r\n                _getRowIndicesForCascadeUpdating: function(row) {\r\n                    var rowIndices = this.callBase.apply(this, arguments);\r\n                    if (this._adaptiveController.isAdaptiveDetailRowExpanded(row.key)) {\r\n                        rowIndices.push(row.rowType === ADAPTIVE_ROW_TYPE ? row.rowIndex - 1 : row.rowIndex + 1)\r\n                    }\r\n                    return rowIndices\r\n                },\r\n                _beforeCloseEditCellInBatchMode: function(rowIndices) {\r\n                    var expandedKey = this._dataController._adaptiveExpandedKey;\r\n                    if (expandedKey) {\r\n                        var rowIndex = gridCoreUtils.getIndexByKey(expandedKey, this._dataController.items());\r\n                        if (rowIndex > -1) {\r\n                            rowIndices.unshift(rowIndex)\r\n                        }\r\n                    }\r\n                },\r\n                editRow: function(rowIndex) {\r\n                    if (this._adaptiveController.isFormOrPopupEditMode()) {\r\n                        this._adaptiveController.collapseAdaptiveDetailRow()\r\n                    }\r\n                    this.callBase(rowIndex)\r\n                },\r\n                deleteRow: function(rowIndex) {\r\n                    var rowKey = this._dataController.getKeyByRowIndex(rowIndex);\r\n                    if (this.getEditMode() === EDIT_MODE_BATCH && this._adaptiveController.isAdaptiveDetailRowExpanded(rowKey)) {\r\n                        this._adaptiveController.collapseAdaptiveDetailRow()\r\n                    }\r\n                    this.callBase(rowIndex)\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveController = this.getController(\"adaptiveColumns\")\r\n                }\r\n            },\r\n            resizing: {\r\n                _needBestFit: function() {\r\n                    return this.callBase() || !!this._adaptiveColumnsController.getHidingColumnsQueue().length\r\n                },\r\n                _correctColumnWidths: function(resultWidths, visibleColumns) {\r\n                    var adaptiveController = this._adaptiveColumnsController;\r\n                    var oldHiddenColumns = adaptiveController.getHiddenColumns();\r\n                    var hidingColumnsQueue = adaptiveController.updateHidingQueue(this._columnsController.getColumns());\r\n                    adaptiveController.hideRedundantColumns(resultWidths, visibleColumns, hidingColumnsQueue);\r\n                    var hiddenColumns = adaptiveController.getHiddenColumns();\r\n                    if (adaptiveController.hasAdaptiveDetailRowExpanded()) {\r\n                        if (oldHiddenColumns.length !== hiddenColumns.length) {\r\n                            adaptiveController.updateForm(hiddenColumns)\r\n                        }\r\n                    }!hiddenColumns.length && adaptiveController.collapseAdaptiveDetailRow();\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _toggleBestFitMode: function(isBestFit) {\r\n                    isBestFit && this._adaptiveColumnsController._showHiddenColumns();\r\n                    this.callBase(isBestFit)\r\n                },\r\n                _needStretch: function() {\r\n                    var adaptiveColumnsController = this._adaptiveColumnsController;\r\n                    return this.callBase.apply(this, arguments) || adaptiveColumnsController.getHidingColumnsQueue().length || adaptiveColumnsController.hasHiddenColumns()\r\n                },\r\n                init: function() {\r\n                    this._adaptiveColumnsController = this.getController(\"adaptiveColumns\");\r\n                    this.callBase()\r\n                },\r\n                dispose: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    clearTimeout(this._updateScrollableTimeoutID)\r\n                }\r\n            },\r\n            data: {\r\n                _processItems: function(items, change) {\r\n                    var changeType = change.changeType;\r\n                    items = this.callBase.apply(this, arguments);\r\n                    if (\"loadingAll\" === changeType || !isDefined(this._adaptiveExpandedKey)) {\r\n                        return items\r\n                    }\r\n                    var expandRowIndex = gridCoreUtils.getIndexByKey(this._adaptiveExpandedKey, items);\r\n                    var newMode = false === this.option(LEGACY_SCROLLING_MODE);\r\n                    if (expandRowIndex >= 0) {\r\n                        var item = items[expandRowIndex];\r\n                        items.splice(expandRowIndex + 1, 0, {\r\n                            visible: true,\r\n                            rowType: ADAPTIVE_ROW_TYPE,\r\n                            key: item.key,\r\n                            data: item.data,\r\n                            node: item.node,\r\n                            modifiedValues: item.modifiedValues,\r\n                            isNewRow: item.isNewRow,\r\n                            values: item.values\r\n                        })\r\n                    } else if (\"refresh\" === changeType && !(newMode && change.repaintChangesOnly)) {\r\n                        this._adaptiveExpandedKey = void 0\r\n                    }\r\n                    return items\r\n                },\r\n                _getRowIndicesForExpand: function(key) {\r\n                    var rowIndices = this.callBase.apply(this, arguments);\r\n                    if (this.getController(\"adaptiveColumns\").isAdaptiveDetailRowExpanded(key)) {\r\n                        var lastRowIndex = rowIndices[rowIndices.length - 1];\r\n                        rowIndices.push(lastRowIndex + 1)\r\n                    }\r\n                    return rowIndices\r\n                },\r\n                adaptiveExpandedKey: function(value) {\r\n                    if (isDefined(value)) {\r\n                        this._adaptiveExpandedKey = value\r\n                    } else {\r\n                        return this._adaptiveExpandedKey\r\n                    }\r\n                },\r\n                toggleExpandAdaptiveDetailRow: function(key, alwaysExpanded) {\r\n                    var oldExpandLoadedRowIndex = gridCoreUtils.getIndexByKey(this._adaptiveExpandedKey, this._items);\r\n                    var newExpandLoadedRowIndex = gridCoreUtils.getIndexByKey(key, this._items);\r\n                    if (oldExpandLoadedRowIndex >= 0 && oldExpandLoadedRowIndex === newExpandLoadedRowIndex && !alwaysExpanded) {\r\n                        key = void 0;\r\n                        newExpandLoadedRowIndex = -1\r\n                    }\r\n                    var oldKey = this._adaptiveExpandedKey;\r\n                    this._adaptiveExpandedKey = key;\r\n                    if (oldExpandLoadedRowIndex >= 0) {\r\n                        oldExpandLoadedRowIndex++\r\n                    }\r\n                    if (newExpandLoadedRowIndex >= 0) {\r\n                        newExpandLoadedRowIndex++\r\n                    }\r\n                    var rowIndexDelta = this.getRowIndexDelta();\r\n                    this.updateItems({\r\n                        allowInvisibleRowIndices: true,\r\n                        changeType: \"update\",\r\n                        rowIndices: [oldExpandLoadedRowIndex - rowIndexDelta, newExpandLoadedRowIndex - rowIndexDelta]\r\n                    });\r\n                    var adaptiveColumnsController = this.getController(\"adaptiveColumns\");\r\n                    adaptiveColumnsController.updateCommandAdaptiveAriaLabel(key, COLLAPSE_ARIA_NAME);\r\n                    adaptiveColumnsController.updateCommandAdaptiveAriaLabel(oldKey, EXPAND_ARIA_NAME)\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveExpandedKey = void 0\r\n                }\r\n            },\r\n            editorFactory: {\r\n                _getFocusCellSelector: function() {\r\n                    return this.callBase() + \", .dx-adaptive-detail-row .dx-field-item > .dx-field-item-content\"\r\n                },\r\n                _getTooltipsSelector: function() {\r\n                    return this.callBase() + \", .dx-field-item-content .\" + this.addWidgetPrefix(REVERT_TOOLTIP_CLASS)\r\n                }\r\n            },\r\n            columns: {\r\n                _isColumnVisible: function(column) {\r\n                    return this.callBase(column) && !column.adaptiveHidden\r\n                }\r\n            },\r\n            keyboardNavigation: {\r\n                _isCellValid: function($cell) {\r\n                    return this.callBase.apply(this, arguments) && !$cell.hasClass(this.addWidgetPrefix(HIDDEN_COLUMN_CLASS))\r\n                },\r\n                _processNextCellInMasterDetail: function($nextCell) {\r\n                    this.callBase($nextCell);\r\n                    var isCellOrBatchMode = this._editingController.isCellOrBatchEditMode();\r\n                    if (!this._isInsideEditForm($nextCell) && $nextCell && isCellOrBatchMode) {\r\n                        eventsEngine.on($nextCell, \"focus\", (function focusHandler() {\r\n                            eventsEngine.off($nextCell, \"focus\", focusHandler);\r\n                            eventsEngine.trigger($nextCell, \"dxclick\")\r\n                        }))\r\n                    }\r\n                },\r\n                _handleTabKeyOnMasterDetailCell: function(eventTarget, direction) {\r\n                    var result = this.callBase(eventTarget, direction);\r\n                    var $currentCell = this._getFocusedCell();\r\n                    var $row = $currentCell && $currentCell.parent();\r\n                    if (!result && $row && $row.length) {\r\n                        var $dataCells = getDataCellElements($row);\r\n                        var $targetCell = \"next\" === direction ? $dataCells.last() : $dataCells.first();\r\n                        var rowIndex = $row.get(0).rowIndex;\r\n                        var adaptiveController = this._adaptiveController;\r\n                        var key = this._dataController.getKeyByRowIndex(\"next\" === direction ? rowIndex : rowIndex - 1);\r\n                        var isCellElementsEquals = $currentCell && $targetCell && $currentCell.get(0) === $targetCell.get(0);\r\n                        return adaptiveController.isAdaptiveDetailRowExpanded(key) && isCellElementsEquals\r\n                    }\r\n                    return result\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveController = this.getController(\"adaptiveColumns\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_columns_core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nexport function foreachColumnInfo(info, callback, rowIndex, offsets, columnCount, lastProcessedIndexes) {\r\n    rowIndex = rowIndex || 0;\r\n    offsets = offsets || [];\r\n    lastProcessedIndexes = lastProcessedIndexes || [];\r\n    offsets[rowIndex] = offsets[rowIndex] || 0;\r\n    var row = info[rowIndex];\r\n    var startIndex = lastProcessedIndexes[rowIndex] + 1 || 0;\r\n    var processedColumnCount = 0;\r\n    var colIndex;\r\n    if (!row) {\r\n        return\r\n    }\r\n    for (colIndex = startIndex; colIndex < row.length; colIndex++) {\r\n        var cell = row[colIndex];\r\n        var visibleIndex = colIndex + offsets[rowIndex];\r\n        var colspan = cell.colspan || 1;\r\n        foreachColumnInfo(info, callback, rowIndex + (cell.rowspan || 1), offsets, colspan, lastProcessedIndexes);\r\n        offsets[rowIndex] += colspan - 1;\r\n        processedColumnCount += colspan;\r\n        if (cell.rowspan) {\r\n            for (var i = rowIndex + 1; i < rowIndex + cell.rowspan; i++) {\r\n                offsets[i] = offsets[i] || 0;\r\n                offsets[i] += cell.colspan || 1\r\n            }\r\n        }\r\n        if (false === callback(cell, visibleIndex, rowIndex, colIndex)) {\r\n            break\r\n        }\r\n        if (void 0 !== columnCount && processedColumnCount >= columnCount) {\r\n            break\r\n        }\r\n    }\r\n    lastProcessedIndexes[rowIndex] = colIndex\r\n}\r\nexport function createColumnsInfo(info, startIndex, endIndex) {\r\n    var newInfo = [];\r\n    foreachColumnInfo(info, (function(columnInfo, visibleIndex, rowIndex) {\r\n        var cell = columnInfo;\r\n        var colspan;\r\n        var cellColspan = cell.colspan || 1;\r\n        var isVisible = visibleIndex + cellColspan - 1 >= startIndex && visibleIndex < endIndex;\r\n        newInfo[rowIndex] = newInfo[rowIndex] || [];\r\n        if (isVisible) {\r\n            if (visibleIndex < startIndex) {\r\n                colspan = cellColspan - (startIndex - visibleIndex);\r\n                visibleIndex = startIndex\r\n            } else {\r\n                colspan = cellColspan\r\n            }\r\n            if (visibleIndex + colspan > endIndex) {\r\n                colspan = endIndex - visibleIndex\r\n            }\r\n            if (colspan !== cellColspan) {\r\n                cell = extend({}, cell, {\r\n                    colspan: colspan\r\n                })\r\n            }\r\n            newInfo[rowIndex].push(cell)\r\n        } else if (visibleIndex > endIndex) {\r\n            return false\r\n        }\r\n    }));\r\n    for (var i = 0; i < newInfo.length; i++) {\r\n        newInfo[i] = newInfo[i] || []\r\n    }\r\n    return newInfo\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.adaptivity.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    adaptivityModule\r\n} from \"../grid_core/ui.grid_core.adaptivity\";\r\ngridCore.registerModule(\"adaptivity\", adaptivityModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_columns.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth,\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    createColumnsInfo\r\n} from \"./ui.grid_core.virtual_columns_core\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nvar DEFAULT_COLUMN_WIDTH = 50;\r\nvar VirtualScrollingRowsViewExtender = {\r\n    _resizeCore: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._columnsController.resize()\r\n    },\r\n    _handleScroll: function(e) {\r\n        var that = this;\r\n        var scrollable = this.getScrollable();\r\n        var left = e.scrollOffset.left;\r\n        that.callBase.apply(that, arguments);\r\n        if (that.option(\"rtlEnabled\") && scrollable) {\r\n            left = getWidth(scrollable.$content()) - getWidth(scrollable.$element()) - left\r\n        }\r\n        that._columnsController.setScrollPosition(left)\r\n    }\r\n};\r\nvar HeaderViewExtender = {\r\n    _renderCore: function() {\r\n        this.callBase.apply(this, arguments);\r\n        if (this._columnsController.isVirtualMode()) {\r\n            this._updateScrollLeftPosition()\r\n        }\r\n    }\r\n};\r\nvar ColumnsControllerExtender = function() {\r\n    var getWidths = function(columns) {\r\n        return columns.map(column => column.visibleWidth || parseFloat(column.width) || DEFAULT_COLUMN_WIDTH)\r\n    };\r\n    var members = {\r\n        init: function() {\r\n            this.callBase();\r\n            this._beginPageIndex = 0;\r\n            this._endPageIndex = 0;\r\n            this._position = 0;\r\n            this._virtualVisibleColumns = {}\r\n        },\r\n        resetColumnsCache: function() {\r\n            this.callBase();\r\n            this._virtualVisibleColumns = {}\r\n        },\r\n        getBeginPageIndex: function(position) {\r\n            var visibleColumns = this.getVisibleColumns(void 0, true);\r\n            var widths = getWidths(visibleColumns);\r\n            var currentPosition = 0;\r\n            for (var index = 0; index < widths.length; index++) {\r\n                if (currentPosition >= position) {\r\n                    return Math.floor(index / this.getColumnPageSize())\r\n                }\r\n                currentPosition += widths[index]\r\n            }\r\n            return 0\r\n        },\r\n        getTotalWidth: function() {\r\n            var width = this.option(\"width\");\r\n            if (\"number\" === typeof width) {\r\n                return width\r\n            }\r\n            return this.getController(\"resizing\")._lastWidth || getOuterWidth(this.component.$element())\r\n        },\r\n        getEndPageIndex: function(position) {\r\n            var visibleColumns = this.getVisibleColumns(void 0, true);\r\n            var widths = getWidths(visibleColumns);\r\n            var currentPosition = 0;\r\n            position += this.getTotalWidth();\r\n            for (var index = 0; index < widths.length; index++) {\r\n                if (currentPosition >= position) {\r\n                    return Math.ceil(index / this.getColumnPageSize())\r\n                }\r\n                currentPosition += widths[index]\r\n            }\r\n            return Math.ceil(widths.length / this.getColumnPageSize())\r\n        },\r\n        getColumnPageSize: function() {\r\n            return this.option(\"scrolling.columnPageSize\")\r\n        },\r\n        _fireColumnsChanged: function() {\r\n            var date = new Date;\r\n            this.columnsChanged.fire({\r\n                optionNames: {\r\n                    all: true,\r\n                    length: 1\r\n                },\r\n                changeTypes: {\r\n                    columns: true,\r\n                    virtualColumnsScrolling: true,\r\n                    length: 2\r\n                }\r\n            });\r\n            this._renderTime = new Date - date\r\n        },\r\n        getScrollingTimeout: function() {\r\n            var renderingThreshold = this.option(\"scrolling.columnRenderingThreshold\");\r\n            var renderAsync = this.option(\"scrolling.renderAsync\");\r\n            var scrollingTimeout = 0;\r\n            if (!isDefined(renderAsync) && this._renderTime > renderingThreshold || renderAsync) {\r\n                scrollingTimeout = this.option(\"scrolling.timeout\")\r\n            }\r\n            return scrollingTimeout\r\n        },\r\n        setScrollPosition: function(position) {\r\n            var scrollingTimeout = this.getScrollingTimeout();\r\n            if (scrollingTimeout > 0) {\r\n                clearTimeout(this._changedTimeout);\r\n                this._changedTimeout = setTimeout(() => {\r\n                    this._setScrollPositionCore(position)\r\n                }, scrollingTimeout)\r\n            } else {\r\n                this._setScrollPositionCore(position)\r\n            }\r\n        },\r\n        isVirtualMode: function() {\r\n            return hasWindow() && \"virtual\" === this.option(\"scrolling.columnRenderingMode\")\r\n        },\r\n        resize: function() {\r\n            this._setScrollPositionCore(this._position)\r\n        },\r\n        _setScrollPositionCore: function(position) {\r\n            if (this.isVirtualMode()) {\r\n                var beginPageIndex = this.getBeginPageIndex(position);\r\n                var endPageIndex = this.getEndPageIndex(position);\r\n                var needColumnsChanged = position < this._position ? this._beginPageIndex > beginPageIndex : this._endPageIndex < endPageIndex;\r\n                this._position = position;\r\n                if (needColumnsChanged) {\r\n                    this._beginPageIndex = beginPageIndex;\r\n                    this._endPageIndex = endPageIndex;\r\n                    this._fireColumnsChanged()\r\n                }\r\n            }\r\n        },\r\n        getFixedColumns: function(rowIndex, isBase) {\r\n            var fixedColumns = this.callBase(rowIndex);\r\n            if (this.isVirtualMode() && !isBase && fixedColumns.length) {\r\n                var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\r\n                fixedColumns[transparentColumnIndex].colspan = this.getVisibleColumns().length - this.callBase().length + 1;\r\n                return fixedColumns\r\n            }\r\n            return fixedColumns\r\n        },\r\n        getVisibleColumns: function(rowIndex, isBase) {\r\n            if (isBase || !this.isVirtualMode()) {\r\n                return this.callBase(rowIndex)\r\n            }\r\n            if (!this._beginPageIndex && !this._endPageIndex) {\r\n                this._beginPageIndex = this.getBeginPageIndex(this._position);\r\n                this._endPageIndex = this.getEndPageIndex(this._position)\r\n            }\r\n            var beginPageIndex = this._beginPageIndex;\r\n            var endPageIndex = this._endPageIndex;\r\n            var visibleColumnsHash = rowIndex + \"-\" + beginPageIndex + \"-\" + endPageIndex;\r\n            if (this._virtualVisibleColumns[visibleColumnsHash]) {\r\n                return this._virtualVisibleColumns[visibleColumnsHash]\r\n            }\r\n            var visibleColumns = this.callBase();\r\n            var rowCount = this.getRowCount();\r\n            var pageSize = this.getColumnPageSize();\r\n            var startIndex = beginPageIndex * pageSize;\r\n            var endIndex = endPageIndex * pageSize;\r\n            var fixedColumns = this.getFixedColumns(void 0, true);\r\n            var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\r\n            var beginFixedColumnCount = fixedColumns.length ? transparentColumnIndex : 0;\r\n            var beginFixedColumns = visibleColumns.slice(0, beginFixedColumnCount);\r\n            var beginColumns = visibleColumns.slice(beginFixedColumnCount, startIndex);\r\n            var beginWidth = getWidths(beginColumns).reduce((a, b) => a + b, 0);\r\n            if (!beginWidth) {\r\n                startIndex = 0\r\n            }\r\n            var endFixedColumnCount = fixedColumns.length ? fixedColumns.length - transparentColumnIndex - 1 : 0;\r\n            var endFixedColumns = visibleColumns.slice(visibleColumns.length - endFixedColumnCount);\r\n            var endColumns = visibleColumns.slice(endIndex, visibleColumns.length - endFixedColumnCount);\r\n            var endWidth = getWidths(endColumns).reduce((a, b) => a + b, 0);\r\n            if (!endWidth) {\r\n                endIndex = visibleColumns.length\r\n            }\r\n            if (rowCount > 1 && \"number\" === typeof rowIndex) {\r\n                var columnsInfo = [];\r\n                for (var i = 0; i < rowCount; i++) {\r\n                    columnsInfo.push(this.callBase(i))\r\n                }\r\n                beginFixedColumns = createColumnsInfo(columnsInfo, 0, beginFixedColumns.length)[rowIndex] || [];\r\n                endFixedColumns = createColumnsInfo(columnsInfo, visibleColumns.length - endFixedColumns.length, visibleColumns.length)[rowIndex] || [];\r\n                visibleColumns = createColumnsInfo(columnsInfo, startIndex, endIndex)[rowIndex] || []\r\n            } else {\r\n                visibleColumns = visibleColumns.slice(startIndex, endIndex)\r\n            }\r\n            if (beginWidth) {\r\n                visibleColumns.unshift({\r\n                    command: \"virtual\",\r\n                    width: beginWidth\r\n                });\r\n                visibleColumns = beginFixedColumns.concat(visibleColumns)\r\n            }\r\n            if (endWidth) {\r\n                visibleColumns.push({\r\n                    command: \"virtual\",\r\n                    width: endWidth\r\n                });\r\n                visibleColumns = visibleColumns.concat(endFixedColumns)\r\n            }\r\n            this._virtualVisibleColumns[visibleColumnsHash] = visibleColumns;\r\n            return visibleColumns\r\n        },\r\n        getColumnIndexOffset: function() {\r\n            var offset = 0;\r\n            if (this._beginPageIndex > 0) {\r\n                var fixedColumns = this.getFixedColumns();\r\n                var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\r\n                var leftFixedColumnCount = transparentColumnIndex >= 0 ? transparentColumnIndex : 0;\r\n                offset = this._beginPageIndex * this.getColumnPageSize() - leftFixedColumnCount - 1\r\n            }\r\n            return offset > 0 ? offset : 0\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._changedTimeout);\r\n            this.callBase.apply(this, arguments)\r\n        }\r\n    };\r\n    return members\r\n}();\r\nexport var virtualColumnsModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            scrolling: {\r\n                columnRenderingMode: \"standard\",\r\n                columnPageSize: 5,\r\n                columnRenderingThreshold: 300\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            columns: ColumnsControllerExtender\r\n        },\r\n        views: {\r\n            columnHeadersView: HeaderViewExtender,\r\n            rowsView: VirtualScrollingRowsViewExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.virtual_columns.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    virtualColumnsModule\r\n} from \"../grid_core/ui.grid_core.virtual_columns\";\r\ngridCore.registerModule(\"virtualColumns\", virtualColumnsModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.export_mixin.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nexport default {\r\n    _getEmptyCell: function() {\r\n        return {\r\n            text: \"\",\r\n            value: void 0,\r\n            colspan: 1,\r\n            rowspan: 1\r\n        }\r\n    },\r\n    _defaultSetter: function(value) {\r\n        return !value ? 1 : value\r\n    },\r\n    _cloneItem: function(item) {\r\n        return extend({}, item, this._getEmptyCell())\r\n    },\r\n    _prepareItems: function(items) {\r\n        var that = this;\r\n        var resultItems = [];\r\n        var cols = (items[0] || []).reduce((sum, item) => sum + that._defaultSetter(item.colspan), 0);\r\n        var getItem = function(items) {\r\n            var rowIndex = 0;\r\n            var cellIndex = 0;\r\n            return function() {\r\n                var row = items[rowIndex] || [];\r\n                var item = row[cellIndex++];\r\n                if (cellIndex >= row.length) {\r\n                    rowIndex++;\r\n                    cellIndex = 0\r\n                }\r\n                if (item) {\r\n                    item.colspan = that._defaultSetter(item.colspan);\r\n                    item.rowspan = that._defaultSetter(item.rowspan)\r\n                }\r\n                return item\r\n            }\r\n        }(items);\r\n\r\n        function addItem(rowIndex, cellIndex, item) {\r\n            var row = resultItems[rowIndex] = resultItems[rowIndex] || [];\r\n            row[cellIndex] = item;\r\n            if (item.colspan > 1 || item.rowspan > 1) {\r\n                var clone = that._cloneItem(item);\r\n                for (var c = 1; c < item.colspan; c++) {\r\n                    addItem(rowIndex, cellIndex + c, clone)\r\n                }\r\n                for (var r = 1; r < item.rowspan; r++) {\r\n                    for (var _c = 0; _c < item.colspan; _c++) {\r\n                        addItem(rowIndex + r, cellIndex + _c, clone)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var item = getItem();\r\n        var rowIndex = 0;\r\n        while (item) {\r\n            for (var cellIndex = 0; cellIndex < cols; cellIndex++) {\r\n                if (!item) {\r\n                    break\r\n                }\r\n                if (resultItems[rowIndex] && resultItems[rowIndex][cellIndex]) {\r\n                    continue\r\n                }\r\n                addItem(rowIndex, cellIndex, item);\r\n                cellIndex += item.colspan - 1;\r\n                item = getItem()\r\n            }\r\n            rowIndex++\r\n        }\r\n        return resultItems\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/button_group.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport Widget from \"./widget/ui.widget\";\r\nimport Button from \"./button\";\r\nimport CollectionWidget from \"./collection/ui.collection_widget.edit\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    isDefined,\r\n    isFunction\r\n} from \"../core/utils/type\";\r\nimport {\r\n    BindableTemplate\r\n} from \"../core/templates/bindable_template\";\r\nvar BUTTON_GROUP_CLASS = \"dx-buttongroup\";\r\nvar BUTTON_GROUP_WRAPPER_CLASS = BUTTON_GROUP_CLASS + \"-wrapper\";\r\nvar BUTTON_GROUP_ITEM_CLASS = BUTTON_GROUP_CLASS + \"-item\";\r\nvar BUTTON_GROUP_FIRST_ITEM_CLASS = BUTTON_GROUP_CLASS + \"-first-item\";\r\nvar BUTTON_GROUP_LAST_ITEM_CLASS = BUTTON_GROUP_CLASS + \"-last-item\";\r\nvar BUTTON_GROUP_ITEM_HAS_WIDTH = BUTTON_GROUP_ITEM_CLASS + \"-has-width\";\r\nvar SHAPE_STANDARD_CLASS = \"dx-shape-standard\";\r\nvar ButtonCollection = CollectionWidget.inherit({\r\n    _initTemplates() {\r\n        this.callBase();\r\n        this._templateManager.addDefaultTemplates({\r\n            item: new BindableTemplate(($container, data, model) => {\r\n                this._prepareItemStyles($container);\r\n                var template = this.option(\"buttonTemplate\");\r\n                this._createComponent($container, Button, extend({}, model, data, this._getBasicButtonOptions(), {\r\n                    _templateData: this._hasCustomTemplate(template) ? model : {},\r\n                    template: model.template || template\r\n                }))\r\n            }, [\"text\", \"type\", \"icon\", \"disabled\", \"visible\", \"hint\"], this.option(\"integrationOptions.watchMethod\"))\r\n        })\r\n    },\r\n    _getBasicButtonOptions() {\r\n        return {\r\n            focusStateEnabled: false,\r\n            onClick: null,\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            stylingMode: this.option(\"stylingMode\")\r\n        }\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            itemTemplateProperty: null\r\n        })\r\n    },\r\n    _hasCustomTemplate(template) {\r\n        return isFunction(template) || this.option(\"integrationOptions.templates\")[template]\r\n    },\r\n    _prepareItemStyles($item) {\r\n        var itemIndex = $item.data(\"dxItemIndex\");\r\n        0 === itemIndex && $item.addClass(BUTTON_GROUP_FIRST_ITEM_CLASS);\r\n        var items = this.option(\"items\");\r\n        items && itemIndex === items.length - 1 && $item.addClass(BUTTON_GROUP_LAST_ITEM_CLASS);\r\n        $item.addClass(SHAPE_STANDARD_CLASS)\r\n    },\r\n    _renderItemContent(args) {\r\n        args.container = $(args.container).parent();\r\n        return this.callBase(args)\r\n    },\r\n    _renderItemContentByNode: function(args, $node) {\r\n        args.container = $(args.container.children().first());\r\n        return this.callBase(args, $node)\r\n    },\r\n    _focusTarget() {\r\n        return this.$element().parent()\r\n    },\r\n    _keyboardEventBindingTarget() {\r\n        return this._focusTarget()\r\n    },\r\n    _refreshContent() {\r\n        this._prepareContent();\r\n        this._renderContent()\r\n    },\r\n    _itemClass: () => BUTTON_GROUP_ITEM_CLASS,\r\n    _itemSelectHandler: function(e) {\r\n        if (\"single\" === this.option(\"selectionMode\") && this.isItemSelected(e.currentTarget)) {\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    }\r\n});\r\nvar ButtonGroup = Widget.inherit({\r\n    _getDefaultOptions() {\r\n        return extend(this.callBase(), {\r\n            hoverStateEnabled: true,\r\n            focusStateEnabled: true,\r\n            selectionMode: \"single\",\r\n            selectedItems: [],\r\n            selectedItemKeys: [],\r\n            stylingMode: \"contained\",\r\n            keyExpr: \"text\",\r\n            items: [],\r\n            buttonTemplate: \"content\",\r\n            onSelectionChanged: null,\r\n            onItemClick: null\r\n        })\r\n    },\r\n    _init() {\r\n        this.callBase();\r\n        this._createItemClickAction()\r\n    },\r\n    _createItemClickAction() {\r\n        this._itemClickAction = this._createActionByOption(\"onItemClick\")\r\n    },\r\n    _initMarkup() {\r\n        this.setAria(\"role\", \"group\");\r\n        this.$element().addClass(BUTTON_GROUP_CLASS);\r\n        this._renderButtons();\r\n        this._syncSelectionOptions();\r\n        this.callBase()\r\n    },\r\n    _fireSelectionChangeEvent: function(addedItems, removedItems) {\r\n        this._createActionByOption(\"onSelectionChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })({\r\n            addedItems: addedItems,\r\n            removedItems: removedItems\r\n        })\r\n    },\r\n    _renderButtons() {\r\n        var $buttons = $(\"<div>\").addClass(BUTTON_GROUP_WRAPPER_CLASS).appendTo(this.$element());\r\n        var selectedItems = this.option(\"selectedItems\");\r\n        var options = {\r\n            selectionMode: this.option(\"selectionMode\"),\r\n            items: this.option(\"items\"),\r\n            keyExpr: this.option(\"keyExpr\"),\r\n            buttonTemplate: this.option(\"buttonTemplate\"),\r\n            scrollingEnabled: false,\r\n            selectedItemKeys: this.option(\"selectedItemKeys\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            stylingMode: this.option(\"stylingMode\"),\r\n            accessKey: this.option(\"accessKey\"),\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            noDataText: \"\",\r\n            selectionRequired: false,\r\n            onItemRendered: e => {\r\n                var width = this.option(\"width\");\r\n                isDefined(width) && $(e.itemElement).addClass(BUTTON_GROUP_ITEM_HAS_WIDTH)\r\n            },\r\n            onSelectionChanged: e => {\r\n                this._syncSelectionOptions();\r\n                this._fireSelectionChangeEvent(e.addedItems, e.removedItems)\r\n            },\r\n            onItemClick: e => {\r\n                this._itemClickAction(e)\r\n            }\r\n        };\r\n        if (isDefined(selectedItems) && selectedItems.length) {\r\n            options.selectedItems = selectedItems\r\n        }\r\n        this._buttonsCollection = this._createComponent($buttons, ButtonCollection, options)\r\n    },\r\n    _syncSelectionOptions() {\r\n        this._setOptionWithoutOptionChange(\"selectedItems\", this._buttonsCollection.option(\"selectedItems\"));\r\n        this._setOptionWithoutOptionChange(\"selectedItemKeys\", this._buttonsCollection.option(\"selectedItemKeys\"))\r\n    },\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"stylingMode\":\r\n            case \"selectionMode\":\r\n            case \"keyExpr\":\r\n            case \"buttonTemplate\":\r\n            case \"items\":\r\n            case \"activeStateEnabled\":\r\n            case \"focusStateEnabled\":\r\n            case \"hoverStateEnabled\":\r\n            case \"tabIndex\":\r\n                this._invalidate();\r\n                break;\r\n            case \"selectedItemKeys\":\r\n            case \"selectedItems\":\r\n                this._buttonsCollection.option(args.name, args.value);\r\n                break;\r\n            case \"onItemClick\":\r\n                this._createItemClickAction();\r\n                break;\r\n            case \"onSelectionChanged\":\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._buttonsCollection.itemElements().toggleClass(BUTTON_GROUP_ITEM_HAS_WIDTH, !!args.value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxButtonGroup\", ButtonGroup);\r\nexport default ButtonGroup;\r\n","/**\r\n * DevExtreme (esm/ui/drop_down_button.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport Widget from \"./widget/ui.widget\";\r\nimport {\r\n    FunctionTemplate\r\n} from \"../core/templates/function_template\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport ButtonGroup from \"./button_group\";\r\nimport Popup from \"./popup\";\r\nimport List from \"./list_light\";\r\nimport {\r\n    compileGetter\r\n} from \"../core/utils/data\";\r\nimport {\r\n    getPublicElement\r\n} from \"../core/element\";\r\nimport {\r\n    getImageContainer\r\n} from \"../core/utils/icon\";\r\nimport DataHelperMixin from \"../data_helper\";\r\nimport {\r\n    DataSource\r\n} from \"../data/data_source/data_source\";\r\nimport ArrayStore from \"../data/array_store\";\r\nimport {\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    isPlainObject,\r\n    isDefined\r\n} from \"../core/utils/type\";\r\nimport {\r\n    ensureDefined,\r\n    noop\r\n} from \"../core/utils/common\";\r\nimport Guid from \"../core/guid\";\r\nimport {\r\n    getElementWidth,\r\n    getSizeValue\r\n} from \"./drop_down_editor/utils\";\r\nimport messageLocalization from \"../localization/message\";\r\nvar DROP_DOWN_BUTTON_CLASS = \"dx-dropdownbutton\";\r\nvar DROP_DOWN_BUTTON_CONTENT = \"dx-dropdownbutton-content\";\r\nvar DROP_DOWN_BUTTON_ACTION_CLASS = \"dx-dropdownbutton-action\";\r\nvar DROP_DOWN_BUTTON_TOGGLE_CLASS = \"dx-dropdownbutton-toggle\";\r\nvar DROP_DOWN_BUTTON_HAS_ARROW_CLASS = \"dx-dropdownbutton-has-arrow\";\r\nvar DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS = \"dx-dropdownbutton-popup-wrapper\";\r\nvar DROP_DOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar DX_BUTTON_TEXT_CLASS = \"dx-button-text\";\r\nvar DX_ICON_RIGHT_CLASS = \"dx-icon-right\";\r\nvar DropDownButton = Widget.inherit({\r\n    _getDefaultOptions() {\r\n        return extend(this.callBase(), {\r\n            itemTemplate: \"item\",\r\n            keyExpr: \"this\",\r\n            displayExpr: void 0,\r\n            selectedItem: null,\r\n            selectedItemKey: null,\r\n            stylingMode: \"outlined\",\r\n            deferRendering: true,\r\n            noDataText: messageLocalization.format(\"dxCollectionWidget-noDataText\"),\r\n            useSelectMode: false,\r\n            splitButton: false,\r\n            showArrowIcon: true,\r\n            text: \"\",\r\n            icon: void 0,\r\n            onButtonClick: null,\r\n            onSelectionChanged: null,\r\n            onItemClick: null,\r\n            opened: false,\r\n            items: null,\r\n            dataSource: null,\r\n            focusStateEnabled: true,\r\n            hoverStateEnabled: true,\r\n            dropDownOptions: {},\r\n            dropDownContentTemplate: \"content\",\r\n            wrapItemText: false,\r\n            useItemTextAsTitle: true,\r\n            grouped: false,\r\n            groupTemplate: \"group\",\r\n            buttonGroupOptions: {}\r\n        })\r\n    },\r\n    _setOptionsByReference() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            selectedItem: true\r\n        })\r\n    },\r\n    _init() {\r\n        this.callBase();\r\n        this._createItemClickAction();\r\n        this._createActionClickAction();\r\n        this._createSelectionChangedAction();\r\n        this._initDataSource();\r\n        this._compileKeyGetter();\r\n        this._compileDisplayGetter();\r\n        this._itemsToDataSource(this.option(\"items\"));\r\n        this._options.cache(\"buttonGroupOptions\", this.option(\"buttonGroupOptions\"));\r\n        this._options.cache(\"dropDownOptions\", this.option(\"dropDownOptions\"))\r\n    },\r\n    _initTemplates() {\r\n        this._templateManager.addDefaultTemplates({\r\n            content: new FunctionTemplate(options => {\r\n                var $popupContent = $(options.container);\r\n                var $listContainer = $(\"<div>\").appendTo($popupContent);\r\n                this._list = this._createComponent($listContainer, List, this._listOptions());\r\n                this._list.registerKeyHandler(\"escape\", this._escHandler.bind(this));\r\n                this._list.registerKeyHandler(\"tab\", this._escHandler.bind(this));\r\n                this._list.registerKeyHandler(\"leftArrow\", this._escHandler.bind(this));\r\n                this._list.registerKeyHandler(\"rightArrow\", this._escHandler.bind(this))\r\n            })\r\n        });\r\n        this.callBase()\r\n    },\r\n    _itemsToDataSource: function(value) {\r\n        if (!this._dataSource) {\r\n            this._dataSource = new DataSource({\r\n                store: new ArrayStore({\r\n                    key: this._getKey(),\r\n                    data: value\r\n                }),\r\n                pageSize: 0\r\n            })\r\n        }\r\n    },\r\n    _getKey: function() {\r\n        var _this$_dataSource;\r\n        var keyExpr = this.option(\"keyExpr\");\r\n        var storeKey = null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.key();\r\n        return isDefined(storeKey) && (!isDefined(keyExpr) || \"this\" === keyExpr) ? storeKey : keyExpr\r\n    },\r\n    _compileKeyGetter() {\r\n        this._keyGetter = compileGetter(this._getKey())\r\n    },\r\n    _compileDisplayGetter() {\r\n        this._displayGetter = compileGetter(this.option(\"displayExpr\"))\r\n    },\r\n    _initMarkup() {\r\n        this.callBase();\r\n        this.$element().addClass(DROP_DOWN_BUTTON_CLASS);\r\n        this._renderButtonGroup();\r\n        this._updateArrowClass();\r\n        if (isDefined(this.option(\"selectedItemKey\"))) {\r\n            this._loadSelectedItem().done(this._updateActionButton.bind(this))\r\n        }\r\n    },\r\n    _renderFocusTarget: noop,\r\n    _render() {\r\n        if (!this.option(\"deferRendering\") || this.option(\"opened\")) {\r\n            this._renderPopup()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _renderContentImpl() {\r\n        if (this._popup) {\r\n            this._renderPopupContent()\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _loadSelectedItem() {\r\n        var _this$_loadSingleDefe;\r\n        null === (_this$_loadSingleDefe = this._loadSingleDeferred) || void 0 === _this$_loadSingleDefe ? void 0 : _this$_loadSingleDefe.reject();\r\n        var d = new Deferred;\r\n        if (this._list && void 0 !== this._lastSelectedItemData) {\r\n            var cachedResult = this.option(\"useSelectMode\") ? this._list.option(\"selectedItem\") : this._lastSelectedItemData;\r\n            return d.resolve(cachedResult)\r\n        }\r\n        this._lastSelectedItemData = void 0;\r\n        var selectedItemKey = this.option(\"selectedItemKey\");\r\n        this._loadSingle(this._getKey(), selectedItemKey).done(d.resolve).fail(() => {\r\n            d.resolve(null)\r\n        });\r\n        this._loadSingleDeferred = d;\r\n        return d.promise()\r\n    },\r\n    _createActionClickAction() {\r\n        this._actionClickAction = this._createActionByOption(\"onButtonClick\")\r\n    },\r\n    _createSelectionChangedAction() {\r\n        this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\")\r\n    },\r\n    _createItemClickAction() {\r\n        this._itemClickAction = this._createActionByOption(\"onItemClick\")\r\n    },\r\n    _fireSelectionChangedAction(_ref) {\r\n        var {\r\n            previousValue: previousValue,\r\n            value: value\r\n        } = _ref;\r\n        this._selectionChangedAction({\r\n            item: value,\r\n            previousItem: previousValue\r\n        })\r\n    },\r\n    _fireItemClickAction(_ref2) {\r\n        var {\r\n            event: event,\r\n            itemElement: itemElement,\r\n            itemData: itemData\r\n        } = _ref2;\r\n        return this._itemClickAction({\r\n            event: event,\r\n            itemElement: itemElement,\r\n            itemData: this._actionItem || itemData\r\n        })\r\n    },\r\n    _actionButtonConfig() {\r\n        return {\r\n            text: this.option(\"text\"),\r\n            icon: this.option(\"icon\"),\r\n            elementAttr: {\r\n                class: DROP_DOWN_BUTTON_ACTION_CLASS\r\n            }\r\n        }\r\n    },\r\n    _getButtonGroupItems() {\r\n        var items = [];\r\n        items.push(this._actionButtonConfig());\r\n        if (this.option(\"splitButton\")) {\r\n            items.push({\r\n                icon: \"spindown\",\r\n                elementAttr: {\r\n                    class: DROP_DOWN_BUTTON_TOGGLE_CLASS\r\n                }\r\n            })\r\n        }\r\n        return items\r\n    },\r\n    _buttonGroupItemClick(_ref3) {\r\n        var {\r\n            event: event,\r\n            itemData: itemData\r\n        } = _ref3;\r\n        var isActionButton = itemData.elementAttr.class === DROP_DOWN_BUTTON_ACTION_CLASS;\r\n        var isToggleButton = itemData.elementAttr.class === DROP_DOWN_BUTTON_TOGGLE_CLASS;\r\n        if (isToggleButton) {\r\n            this.toggle()\r\n        } else if (isActionButton) {\r\n            this._actionClickAction({\r\n                event: event,\r\n                selectedItem: this.option(\"selectedItem\")\r\n            });\r\n            if (!this.option(\"splitButton\")) {\r\n                this.toggle()\r\n            }\r\n        }\r\n    },\r\n    _buttonGroupOptions() {\r\n        var buttonTemplate = this.option(\"splitButton\") || !this.option(\"showArrowIcon\") ? \"content\" : (_ref4, buttonContent) => {\r\n            var {\r\n                text: text,\r\n                icon: icon\r\n            } = _ref4;\r\n            var $firstIcon = getImageContainer(icon);\r\n            var $textContainer = text ? $(\"<span>\").text(text).addClass(DX_BUTTON_TEXT_CLASS) : void 0;\r\n            var $secondIcon = getImageContainer(\"spindown\").addClass(DX_ICON_RIGHT_CLASS);\r\n            $(buttonContent).append($firstIcon, $textContainer, $secondIcon)\r\n        };\r\n        return extend({\r\n            items: this._getButtonGroupItems(),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            onItemClick: this._buttonGroupItemClick.bind(this),\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            stylingMode: this.option(\"stylingMode\"),\r\n            selectionMode: \"none\",\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            onKeyboardHandled: e => this._keyboardHandler(e),\r\n            buttonTemplate: buttonTemplate\r\n        }, this._options.cache(\"buttonGroupOptions\"))\r\n    },\r\n    _renderPopupContent() {\r\n        var $content = this._popup.$content();\r\n        var template = this._getTemplateByOption(\"dropDownContentTemplate\");\r\n        $content.empty();\r\n        this._popupContentId = \"dx-\" + new Guid;\r\n        this.setAria(\"id\", this._popupContentId, $content);\r\n        return template.render({\r\n            container: getPublicElement($content),\r\n            model: this.option(\"items\") || this._dataSource\r\n        })\r\n    },\r\n    _popupOptions() {\r\n        var horizontalAlignment = this.option(\"rtlEnabled\") ? \"right\" : \"left\";\r\n        return extend({\r\n            dragEnabled: false,\r\n            focusStateEnabled: false,\r\n            deferRendering: this.option(\"deferRendering\"),\r\n            closeOnOutsideClick: e => {\r\n                var $element = this.$element();\r\n                var $buttonClicked = $(e.target).closest(\".\".concat(DROP_DOWN_BUTTON_CLASS));\r\n                return !$buttonClicked.is($element)\r\n            },\r\n            showTitle: false,\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    duration: 0,\r\n                    from: 0,\r\n                    to: 1\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    duration: 400,\r\n                    from: 1,\r\n                    to: 0\r\n                }\r\n            },\r\n            _ignoreFunctionValueDeprecation: true,\r\n            width: () => getElementWidth(this.$element()),\r\n            height: \"auto\",\r\n            shading: false,\r\n            position: {\r\n                of: this.$element(),\r\n                collision: \"flipfit\",\r\n                my: horizontalAlignment + \" top\",\r\n                at: horizontalAlignment + \" bottom\"\r\n            },\r\n            wrapperAttr: {\r\n                class: DROP_DOWN_EDITOR_OVERLAY_CLASS\r\n            }\r\n        }, this._options.cache(\"dropDownOptions\"), {\r\n            visible: this.option(\"opened\")\r\n        })\r\n    },\r\n    _listOptions() {\r\n        var selectedItemKey = this.option(\"selectedItemKey\");\r\n        var useSelectMode = this.option(\"useSelectMode\");\r\n        return {\r\n            selectionMode: useSelectMode ? \"single\" : \"none\",\r\n            wrapItemText: this.option(\"wrapItemText\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            useItemTextAsTitle: this.option(\"useItemTextAsTitle\"),\r\n            onContentReady: () => this._fireContentReadyAction(),\r\n            selectedItemKeys: isDefined(selectedItemKey) && useSelectMode ? [selectedItemKey] : [],\r\n            grouped: this.option(\"grouped\"),\r\n            groupTemplate: this.option(\"groupTemplate\"),\r\n            keyExpr: this._getKey(),\r\n            noDataText: this.option(\"noDataText\"),\r\n            displayExpr: this.option(\"displayExpr\"),\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            items: this.option(\"items\"),\r\n            dataSource: this._dataSource,\r\n            onItemClick: e => {\r\n                if (!this.option(\"useSelectMode\")) {\r\n                    this._lastSelectedItemData = e.itemData\r\n                }\r\n                this.option(\"selectedItemKey\", this._keyGetter(e.itemData));\r\n                var actionResult = this._fireItemClickAction(e);\r\n                if (false !== actionResult) {\r\n                    this.toggle(false);\r\n                    this._buttonGroup.focus()\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _upDownKeyHandler() {\r\n        if (this._popup && this._popup.option(\"visible\") && this._list) {\r\n            this._list.focus()\r\n        } else {\r\n            this.open()\r\n        }\r\n        return true\r\n    },\r\n    _escHandler() {\r\n        this.close();\r\n        this._buttonGroup.focus();\r\n        return true\r\n    },\r\n    _tabHandler() {\r\n        this.close();\r\n        return true\r\n    },\r\n    _renderPopup() {\r\n        var $popup = $(\"<div>\");\r\n        this.$element().append($popup);\r\n        this._popup = this._createComponent($popup, Popup, this._popupOptions());\r\n        this._popup.$content().addClass(DROP_DOWN_BUTTON_CONTENT);\r\n        this._popup.$wrapper().addClass(DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS);\r\n        this._popup.on(\"hiding\", this._popupHidingHandler.bind(this));\r\n        this._popup.on(\"showing\", this._popupShowingHandler.bind(this));\r\n        this._bindInnerWidgetOptions(this._popup, \"dropDownOptions\")\r\n    },\r\n    _popupHidingHandler() {\r\n        this.option(\"opened\", false);\r\n        this._setAriaExpanded(false)\r\n    },\r\n    _popupOptionChanged: function(args) {\r\n        var options = Widget.getOptionsFromContainer(args);\r\n        this._setPopupOption(options);\r\n        var optionsKeys = Object.keys(options);\r\n        if (-1 !== optionsKeys.indexOf(\"width\") || -1 !== optionsKeys.indexOf(\"height\")) {\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        var popupWidth = getSizeValue(this.option(\"dropDownOptions.width\"));\r\n        if (void 0 === popupWidth) {\r\n            this._setPopupOption(\"width\", () => getElementWidth(this.$element()))\r\n        }\r\n    },\r\n    _setPopupOption: function(optionName, value) {\r\n        this._setWidgetOption(\"_popup\", arguments)\r\n    },\r\n    _popupShowingHandler() {\r\n        this.option(\"opened\", true);\r\n        this._setAriaExpanded(true)\r\n    },\r\n    _setAriaExpanded(value) {\r\n        this._ariaExpandedElements.forEach(ariaElement => {\r\n            this.setAria({\r\n                expanded: value,\r\n                owns: value ? this._popupContentId : void 0\r\n            }, $(ariaElement))\r\n        })\r\n    },\r\n    _renderButtonGroup() {\r\n        var $buttonGroup = this._buttonGroup && this._buttonGroup.$element() || $(\"<div>\");\r\n        if (!this._buttonGroup) {\r\n            this.$element().append($buttonGroup)\r\n        }\r\n        this._buttonGroup = this._createComponent($buttonGroup, ButtonGroup, this._buttonGroupOptions());\r\n        var buttonElements = this._buttonGroup.$element().find(\".dx-button\").toArray();\r\n        this._ariaExpandedElements = [...buttonElements, this.$element()];\r\n        this._buttonGroup.registerKeyHandler(\"downArrow\", this._upDownKeyHandler.bind(this));\r\n        this._buttonGroup.registerKeyHandler(\"tab\", this._tabHandler.bind(this));\r\n        this._buttonGroup.registerKeyHandler(\"upArrow\", this._upDownKeyHandler.bind(this));\r\n        this._buttonGroup.registerKeyHandler(\"escape\", this._escHandler.bind(this));\r\n        this._bindInnerWidgetOptions(this._buttonGroup, \"buttonGroupOptions\");\r\n        this._setAriaExpanded(this.option(\"opened\"))\r\n    },\r\n    _updateArrowClass() {\r\n        var hasArrow = this.option(\"splitButton\") || this.option(\"showArrowIcon\");\r\n        this.$element().toggleClass(DROP_DOWN_BUTTON_HAS_ARROW_CLASS, hasArrow)\r\n    },\r\n    toggle(visible) {\r\n        if (!this._popup) {\r\n            this._renderPopup();\r\n            this._renderContent()\r\n        }\r\n        return this._popup.toggle(visible)\r\n    },\r\n    open() {\r\n        return this.toggle(true)\r\n    },\r\n    close() {\r\n        return this.toggle(false)\r\n    },\r\n    _setListOption(name, value) {\r\n        this._list && this._list.option(name, value)\r\n    },\r\n    _getDisplayValue(item) {\r\n        var isPrimitiveItem = !isPlainObject(item);\r\n        var displayValue = isPrimitiveItem ? item : this._displayGetter(item);\r\n        return !isPlainObject(displayValue) ? String(ensureDefined(displayValue, \"\")) : \"\"\r\n    },\r\n    _updateActionButton(selectedItem) {\r\n        if (this.option(\"useSelectMode\")) {\r\n            this.option({\r\n                text: this._getDisplayValue(selectedItem),\r\n                icon: isPlainObject(selectedItem) ? selectedItem.icon : void 0\r\n            })\r\n        }\r\n        this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem);\r\n        this._setOptionWithoutOptionChange(\"selectedItemKey\", this._keyGetter(selectedItem))\r\n    },\r\n    _clean() {\r\n        this._list && this._list.$element().remove();\r\n        this._popup && this._popup.$element().remove()\r\n    },\r\n    _selectedItemKeyChanged(value) {\r\n        this._setListOption(\"selectedItemKeys\", this.option(\"useSelectMode\") && isDefined(value) ? [value] : []);\r\n        var previousItem = this.option(\"selectedItem\");\r\n        this._loadSelectedItem().done(selectedItem => {\r\n            this._updateActionButton(selectedItem);\r\n            if (this._displayGetter(previousItem) !== this._displayGetter(selectedItem)) {\r\n                this._fireSelectionChangedAction({\r\n                    previousValue: previousItem,\r\n                    value: selectedItem\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _actionButtonOptionChanged(_ref5) {\r\n        var {\r\n            name: name,\r\n            value: value\r\n        } = _ref5;\r\n        var newConfig = {};\r\n        newConfig[name] = value;\r\n        this._buttonGroup.option(\"items[0]\", extend({}, this._actionButtonConfig(), newConfig));\r\n        this._popup && this._popup.repaint()\r\n    },\r\n    _selectModeChanged(value) {\r\n        if (value) {\r\n            this._setListOption(\"selectionMode\", \"single\");\r\n            var selectedItemKey = this.option(\"selectedItemKey\");\r\n            this._setListOption(\"selectedItemKeys\", isDefined(selectedItemKey) ? [selectedItemKey] : []);\r\n            this._selectedItemKeyChanged(this.option(\"selectedItemKey\"))\r\n        } else {\r\n            this._setListOption(\"selectionMode\", \"none\");\r\n            this.option({\r\n                selectedItemKey: void 0,\r\n                selectedItem: void 0\r\n            });\r\n            this._actionButtonOptionChanged({\r\n                text: this.option(\"text\")\r\n            })\r\n        }\r\n    },\r\n    _updateItemCollection(optionName) {\r\n        var selectedItemKey = this.option(\"selectedItemKey\");\r\n        this._setListOption(\"selectedItem\", null);\r\n        this._setWidgetOption(\"_list\", [optionName]);\r\n        if (isDefined(selectedItemKey)) {\r\n            this._loadSelectedItem().done(selectedItem => {\r\n                this._setListOption(\"selectedItemKeys\", [selectedItemKey]);\r\n                this._setListOption(\"selectedItem\", selectedItem)\r\n            }).fail(error => {\r\n                this._setListOption(\"selectedItemKeys\", [])\r\n            }).always(this._updateActionButton.bind(this))\r\n        }\r\n    },\r\n    _updateDataSource: function() {\r\n        var items = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._dataSource.items();\r\n        this._dataSource = void 0;\r\n        this._itemsToDataSource(items);\r\n        this._updateKeyExpr()\r\n    },\r\n    _updateKeyExpr: function() {\r\n        this._compileKeyGetter();\r\n        this._setListOption(\"keyExpr\", this._getKey())\r\n    },\r\n    focus: function() {\r\n        this._buttonGroup.focus()\r\n    },\r\n    _optionChanged(args) {\r\n        var _this$_popup;\r\n        var {\r\n            name: name,\r\n            value: value\r\n        } = args;\r\n        switch (name) {\r\n            case \"useSelectMode\":\r\n                this._selectModeChanged(value);\r\n                break;\r\n            case \"splitButton\":\r\n                this._updateArrowClass();\r\n                this._renderButtonGroup();\r\n                break;\r\n            case \"displayExpr\":\r\n                this._compileDisplayGetter();\r\n                this._setListOption(name, value);\r\n                this._updateActionButton(this.option(\"selectedItem\"));\r\n                break;\r\n            case \"keyExpr\":\r\n                this._updateDataSource();\r\n                break;\r\n            case \"buttonGroupOptions\":\r\n                this._innerWidgetOptionChanged(this._buttonGroup, args);\r\n                break;\r\n            case \"dropDownOptions\":\r\n                if (\"dropDownOptions.visible\" === args.fullName) {\r\n                    break\r\n                }\r\n                if (void 0 !== args.value.visible) {\r\n                    delete args.value.visible\r\n                }\r\n                this._popupOptionChanged(args);\r\n                this._innerWidgetOptionChanged(this._popup, args);\r\n                break;\r\n            case \"opened\":\r\n                this.toggle(value);\r\n                break;\r\n            case \"focusStateEnabled\":\r\n            case \"hoverStateEnabled\":\r\n                this._setListOption(name, value);\r\n                this._buttonGroup.option(name, value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"items\":\r\n                this._updateDataSource(this.option(\"items\"));\r\n                this._updateItemCollection(name);\r\n                break;\r\n            case \"dataSource\":\r\n                if (Array.isArray(value)) {\r\n                    this._updateDataSource(this.option(\"dataSource\"))\r\n                } else {\r\n                    this._initDataSource();\r\n                    this._updateKeyExpr()\r\n                }\r\n                this._updateItemCollection(name);\r\n                break;\r\n            case \"icon\":\r\n            case \"text\":\r\n                this._actionButtonOptionChanged(args);\r\n                break;\r\n            case \"showArrowIcon\":\r\n                this._updateArrowClass();\r\n                this._renderButtonGroup();\r\n                this._popup && this._popup.repaint();\r\n                break;\r\n            case \"width\":\r\n            case \"height\":\r\n                this.callBase(args);\r\n                null === (_this$_popup = this._popup) || void 0 === _this$_popup ? void 0 : _this$_popup.repaint();\r\n                break;\r\n            case \"stylingMode\":\r\n                this._buttonGroup.option(name, value);\r\n                break;\r\n            case \"itemTemplate\":\r\n            case \"grouped\":\r\n            case \"noDataText\":\r\n            case \"groupTemplate\":\r\n            case \"wrapItemText\":\r\n            case \"useItemTextAsTitle\":\r\n                this._setListOption(name, value);\r\n                break;\r\n            case \"dropDownContentTemplate\":\r\n                this._renderContent();\r\n                break;\r\n            case \"selectedItemKey\":\r\n                this._selectedItemKeyChanged(value);\r\n                break;\r\n            case \"selectedItem\":\r\n                break;\r\n            case \"onItemClick\":\r\n                this._createItemClickAction();\r\n                break;\r\n            case \"onButtonClick\":\r\n                this._createActionClickAction();\r\n                break;\r\n            case \"onSelectionChanged\":\r\n                this._createSelectionChangedAction();\r\n                break;\r\n            case \"deferRendering\":\r\n                this.toggle(this.option(\"opened\"));\r\n                break;\r\n            case \"tabIndex\":\r\n                this._buttonGroup.option(name, value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n}).include(DataHelperMixin);\r\nregisterComponent(\"dxDropDownButton\", DropDownButton);\r\nexport default DropDownButton;\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.export.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../../core/renderer\";\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    merge\r\n} from \"../../core/utils/array\";\r\nimport dataGridCore from \"./ui.data_grid.core\";\r\nimport exportMixin from \"../grid_core/ui.grid_core.export_mixin\";\r\nimport {\r\n    export as clientExport,\r\n    excel\r\n} from \"../../exporter\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport \"../button\";\r\nimport \"../drop_down_button\";\r\nimport List from \"../list_light\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar DATAGRID_EXPORT_MENU_CLASS = \"dx-datagrid-export-menu\";\r\nvar DATAGRID_EXPORT_BUTTON_CLASS = \"dx-datagrid-export-button\";\r\nvar DATAGRID_EXPORT_TOOLBAR_BUTTON_NAME = \"exportButton\";\r\nvar DATAGRID_EXPORT_ICON = \"export-to\";\r\nvar DATAGRID_EXPORT_EXCEL_ICON = \"xlsxfile\";\r\nvar DATAGRID_EXPORT_SELECTED_ICON = \"exportselected\";\r\nvar DATAGRID_EXPORT_EXCEL_BUTTON_ICON = \"export-excel-button\";\r\nexport var DataProvider = Class.inherit({\r\n    ctor: function(exportController, initialColumnWidthsByColumnIndex, selectedRowsOnly) {\r\n        this._exportController = exportController;\r\n        this._initialColumnWidthsByColumnIndex = initialColumnWidthsByColumnIndex;\r\n        this._selectedRowsOnly = selectedRowsOnly\r\n    },\r\n    _getGroupValue: function(item) {\r\n        var {\r\n            key: key,\r\n            data: data,\r\n            rowType: rowType,\r\n            groupIndex: groupIndex,\r\n            summaryCells: summaryCells\r\n        } = item;\r\n        var groupColumn = this._options.groupColumns[groupIndex];\r\n        var value = dataGridCore.getDisplayValue(groupColumn, groupColumn.deserializeValue ? groupColumn.deserializeValue(key[groupIndex]) : key[groupIndex], data, rowType);\r\n        var result = groupColumn.caption + \": \" + dataGridCore.formatValue(value, groupColumn);\r\n        if (summaryCells && summaryCells[0] && summaryCells[0].length) {\r\n            result += \" \" + dataGridCore.getGroupRowSummaryText(summaryCells[0], this._options.summaryTexts)\r\n        }\r\n        return result\r\n    },\r\n    _correctCellIndex: function(cellIndex) {\r\n        return cellIndex\r\n    },\r\n    _initOptions: function() {\r\n        var exportController = this._exportController;\r\n        var groupColumns = exportController._columnsController.getGroupColumns();\r\n        var excelWrapTextEnabled = exportController.option(\"export.excelWrapTextEnabled\");\r\n        this._options = {\r\n            columns: exportController._getColumns(this._initialColumnWidthsByColumnIndex),\r\n            groupColumns: groupColumns,\r\n            items: this._selectedRowsOnly || exportController._selectionOnly ? exportController._getSelectedItems() : exportController._getAllItems(),\r\n            getVisibleIndex: exportController._columnsController.getVisibleIndex.bind(exportController._columnsController),\r\n            isHeadersVisible: exportController.option(\"showColumnHeaders\"),\r\n            summaryTexts: exportController.option(\"summary.texts\"),\r\n            customizeExportData: exportController.option(\"customizeExportData\"),\r\n            rtlEnabled: exportController.option(\"rtlEnabled\"),\r\n            wrapTextEnabled: isDefined(excelWrapTextEnabled) ? excelWrapTextEnabled : !!exportController.option(\"wordWrapEnabled\"),\r\n            customizeExcelCell: exportController.option(\"export.customizeExcelCell\")\r\n        }\r\n    },\r\n    hasCustomizeExcelCell: function() {\r\n        return isDefined(this._options.customizeExcelCell)\r\n    },\r\n    customizeExcelCell: function(e, cellSourceData) {\r\n        if (this._options.customizeExcelCell) {\r\n            e.gridCell = cellSourceData;\r\n            if (isDefined(this._exportController) && isDefined(this._exportController.component)) {\r\n                e.component = this._exportController.component\r\n            }\r\n            this._options.customizeExcelCell(e)\r\n        }\r\n    },\r\n    getHeaderStyles: () => [{\r\n        bold: true,\r\n        alignment: \"center\",\r\n        wrapText: true\r\n    }, {\r\n        bold: true,\r\n        alignment: \"left\",\r\n        wrapText: true\r\n    }, {\r\n        bold: true,\r\n        alignment: \"right\",\r\n        wrapText: true\r\n    }],\r\n    getGroupRowStyle() {\r\n        return {\r\n            bold: true,\r\n            wrapText: false,\r\n            alignment: getDefaultAlignment(this._options.rtlEnabled)\r\n        }\r\n    },\r\n    getColumnStyles() {\r\n        var wrapTextEnabled = this._options.wrapTextEnabled;\r\n        var columnStyles = [];\r\n        this.getColumns().forEach(column => {\r\n            columnStyles.push({\r\n                alignment: column.alignment || \"left\",\r\n                format: column.format,\r\n                wrapText: wrapTextEnabled,\r\n                dataType: column.dataType\r\n            })\r\n        });\r\n        return columnStyles\r\n    },\r\n    getStyles: function() {\r\n        return [...this.getHeaderStyles(), ...this.getColumnStyles(), this.getGroupRowStyle()]\r\n    },\r\n    _getTotalCellStyleId: function(cellIndex) {\r\n        var _this$getColumns$cell;\r\n        var alignment = (null === (_this$getColumns$cell = this.getColumns()[cellIndex]) || void 0 === _this$getColumns$cell ? void 0 : _this$getColumns$cell.alignment) || \"right\";\r\n        return this.getHeaderStyles().map(style => style.alignment).indexOf(alignment)\r\n    },\r\n    getStyleId: function(rowIndex, cellIndex) {\r\n        if (rowIndex < this.getHeaderRowCount()) {\r\n            return 0\r\n        } else if (this.isTotalCell(rowIndex - this.getHeaderRowCount(), cellIndex)) {\r\n            return this._getTotalCellStyleId(cellIndex)\r\n        } else if (this.isGroupRow(rowIndex - this.getHeaderRowCount())) {\r\n            return this.getHeaderStyles().length + this.getColumns().length\r\n        } else {\r\n            return cellIndex + this.getHeaderStyles().length\r\n        }\r\n    },\r\n    getColumns: function(getColumnsByAllRows) {\r\n        var {\r\n            columns: columns\r\n        } = this._options;\r\n        return getColumnsByAllRows ? columns : columns[columns.length - 1]\r\n    },\r\n    getColumnsWidths: function() {\r\n        var columns = this.getColumns();\r\n        return isDefined(columns) ? columns.map(c => c.width) : void 0\r\n    },\r\n    getRowsCount: function() {\r\n        return this._options.items.length + this.getHeaderRowCount()\r\n    },\r\n    getHeaderRowCount: function() {\r\n        if (this.isHeadersVisible()) {\r\n            return this._options.columns.length - 1\r\n        }\r\n        return 0\r\n    },\r\n    isGroupRow: function(rowIndex) {\r\n        return rowIndex < this._options.items.length && \"group\" === this._options.items[rowIndex].rowType\r\n    },\r\n    getGroupLevel: function(rowIndex) {\r\n        var item = this._options.items[rowIndex - this.getHeaderRowCount()];\r\n        var groupIndex = item && item.groupIndex;\r\n        if (item && \"totalFooter\" === item.rowType) {\r\n            return 0\r\n        }\r\n        return isDefined(groupIndex) ? groupIndex : this._options.groupColumns.length\r\n    },\r\n    getCellType: function(rowIndex, cellIndex) {\r\n        var columns = this.getColumns();\r\n        if (rowIndex < this.getHeaderRowCount()) {\r\n            return \"string\"\r\n        } else {\r\n            rowIndex -= this.getHeaderRowCount()\r\n        }\r\n        if (cellIndex < columns.length) {\r\n            var item = this._options.items.length && this._options.items[rowIndex];\r\n            var column = columns[cellIndex];\r\n            if (item && \"data\" === item.rowType) {\r\n                if (isFinite(item.values[this._correctCellIndex(cellIndex)]) && !isDefined(column.customizeText)) {\r\n                    return isDefined(column.lookup) ? column.lookup.dataType : column.dataType\r\n                }\r\n            }\r\n            return \"string\"\r\n        }\r\n    },\r\n    ready: function() {\r\n        var that = this;\r\n        that._initOptions();\r\n        var options = that._options;\r\n        return when(options.items).done((function(items) {\r\n            options.customizeExportData && options.customizeExportData(that.getColumns(that.getHeaderRowCount() > 1), items);\r\n            options.items = items\r\n        })).fail((function() {\r\n            options.items = []\r\n        }))\r\n    },\r\n    _convertFromGridGroupSummaryItems: function(gridGroupSummaryItems) {\r\n        if (isDefined(gridGroupSummaryItems) && gridGroupSummaryItems.length > 0) {\r\n            return gridGroupSummaryItems.map((function(item) {\r\n                return {\r\n                    value: item.value,\r\n                    name: item.name\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    getCellData: function(rowIndex, cellIndex, isExcelJS) {\r\n        var value;\r\n        var column;\r\n        var result = {\r\n            cellSourceData: {},\r\n            value: value\r\n        };\r\n        var columns = this.getColumns();\r\n        var correctedCellIndex = this._correctCellIndex(cellIndex);\r\n        if (rowIndex < this.getHeaderRowCount()) {\r\n            var columnsRow = this.getColumns(true)[rowIndex];\r\n            column = columnsRow[cellIndex];\r\n            result.cellSourceData.rowType = \"header\";\r\n            result.cellSourceData.column = column && column.gridColumn;\r\n            result.value = column && column.caption\r\n        } else {\r\n            rowIndex -= this.getHeaderRowCount();\r\n            var item = this._options.items.length && this._options.items[rowIndex];\r\n            if (item) {\r\n                var itemValues = item.values;\r\n                result.cellSourceData.rowType = item.rowType;\r\n                result.cellSourceData.column = columns[cellIndex] && columns[cellIndex].gridColumn;\r\n                switch (item.rowType) {\r\n                    case \"groupFooter\":\r\n                    case \"totalFooter\":\r\n                        if (correctedCellIndex < itemValues.length) {\r\n                            value = itemValues[correctedCellIndex];\r\n                            if (isDefined(value)) {\r\n                                result.cellSourceData.value = value.value;\r\n                                result.cellSourceData.totalSummaryItemName = value.name;\r\n                                result.value = dataGridCore.getSummaryText(value, this._options.summaryTexts)\r\n                            } else {\r\n                                result.cellSourceData.value = void 0\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        result.cellSourceData.groupIndex = item.groupIndex;\r\n                        if (cellIndex < 1) {\r\n                            result.cellSourceData.column = this._options.groupColumns[item.groupIndex];\r\n                            result.cellSourceData.value = item.key[item.groupIndex];\r\n                            result.cellSourceData.groupSummaryItems = this._convertFromGridGroupSummaryItems(item.summaryCells[0]);\r\n                            result.value = this._getGroupValue(item)\r\n                        } else {\r\n                            var summaryItems = item.values[correctedCellIndex];\r\n                            if (Array.isArray(summaryItems)) {\r\n                                result.cellSourceData.groupSummaryItems = this._convertFromGridGroupSummaryItems(summaryItems);\r\n                                value = \"\";\r\n                                for (var i = 0; i < summaryItems.length; i++) {\r\n                                    value += (i > 0 ? isExcelJS ? \"\\n\" : \" \\n \" : \"\") + dataGridCore.getSummaryText(summaryItems[i], this._options.summaryTexts)\r\n                                }\r\n                                result.value = value\r\n                            } else {\r\n                                result.cellSourceData.value = void 0\r\n                            }\r\n                        }\r\n                        break;\r\n                    default:\r\n                        column = columns[cellIndex];\r\n                        if (column) {\r\n                            var _value = itemValues[correctedCellIndex];\r\n                            var displayValue = dataGridCore.getDisplayValue(column, _value, item.data, item.rowType);\r\n                            if (!isFinite(displayValue) || isDefined(column.customizeText)) {\r\n                                if (isExcelJS && isDefined(column.customizeText) && column.customizeText === this._exportController._columnsController.getCustomizeTextByDataType(\"boolean\")) {\r\n                                    result.value = displayValue\r\n                                } else {\r\n                                    result.value = dataGridCore.formatValue(displayValue, column)\r\n                                }\r\n                            } else {\r\n                                result.value = displayValue\r\n                            }\r\n                            result.cellSourceData.value = _value\r\n                        }\r\n                        result.cellSourceData.data = item.data\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    isHeadersVisible: function() {\r\n        return this._options.isHeadersVisible\r\n    },\r\n    isTotalCell: function(rowIndex, cellIndex) {\r\n        var items = this._options.items;\r\n        var item = items[rowIndex];\r\n        var correctCellIndex = this._correctCellIndex(cellIndex);\r\n        var isSummaryAlignByColumn = item.summaryCells && item.summaryCells[correctCellIndex] && item.summaryCells[correctCellIndex].length > 0 && item.summaryCells[correctCellIndex][0].alignByColumn;\r\n        return item && \"groupFooter\" === item.rowType || \"totalFooter\" === item.rowType || isSummaryAlignByColumn\r\n    },\r\n    getCellMerging: function(rowIndex, cellIndex) {\r\n        var columns = this._options.columns;\r\n        var column = columns[rowIndex] && columns[rowIndex][cellIndex];\r\n        return column ? {\r\n            colspan: (column.exportColspan || 1) - 1,\r\n            rowspan: (column.rowspan || 1) - 1\r\n        } : {\r\n            colspan: 0,\r\n            rowspan: 0\r\n        }\r\n    },\r\n    getFrozenArea: function() {\r\n        return {\r\n            x: 0,\r\n            y: this.getHeaderRowCount()\r\n        }\r\n    }\r\n});\r\nexport var ExportController = dataGridCore.ViewController.inherit({}).include(exportMixin).inherit({\r\n    _getEmptyCell: function() {\r\n        return {\r\n            caption: \"\",\r\n            colspan: 1,\r\n            rowspan: 1\r\n        }\r\n    },\r\n    _updateColumnWidth: function(column, width) {\r\n        column.width = width\r\n    },\r\n    _getColumns: function(initialColumnWidthsByColumnIndex) {\r\n        var result = [];\r\n        var i;\r\n        var columns;\r\n        var columnsController = this._columnsController;\r\n        var rowCount = columnsController.getRowCount();\r\n        for (i = 0; i <= rowCount; i++) {\r\n            var currentHeaderRow = [];\r\n            columns = columnsController.getVisibleColumns(i, true);\r\n            var columnWidthsByColumnIndex = void 0;\r\n            if (i === rowCount) {\r\n                if (this._updateLockCount) {\r\n                    columnWidthsByColumnIndex = initialColumnWidthsByColumnIndex\r\n                } else {\r\n                    var columnWidths = this._getColumnWidths(this._headersView, this._rowsView);\r\n                    if (columnWidths && columnWidths.length) {\r\n                        columnWidthsByColumnIndex = {};\r\n                        for (var _i = 0; _i < columns.length; _i++) {\r\n                            columnWidthsByColumnIndex[columns[_i].index] = columnWidths[_i]\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (var j = 0; j < columns.length; j++) {\r\n                var column = extend({}, columns[j], {\r\n                    dataType: \"datetime\" === columns[j].dataType ? \"date\" : columns[j].dataType,\r\n                    gridColumn: columns[j]\r\n                });\r\n                if (this._needColumnExporting(column)) {\r\n                    var currentColspan = this._calculateExportColspan(column);\r\n                    if (isDefined(currentColspan)) {\r\n                        column.exportColspan = currentColspan\r\n                    }\r\n                    if (columnWidthsByColumnIndex) {\r\n                        this._updateColumnWidth(column, columnWidthsByColumnIndex[column.index])\r\n                    }\r\n                    currentHeaderRow.push(column)\r\n                }\r\n            }\r\n            result.push(currentHeaderRow)\r\n        }\r\n        columns = result[rowCount];\r\n        result = this._prepareItems(result.slice(0, -1));\r\n        result.push(columns);\r\n        return result\r\n    },\r\n    _calculateExportColspan: function(column) {\r\n        if (!column.isBand) {\r\n            return\r\n        }\r\n        var childColumns = this._columnsController.getChildrenByBandColumn(column.index, true);\r\n        if (!isDefined(childColumns)) {\r\n            return\r\n        }\r\n        return childColumns.reduce((result, childColumn) => {\r\n            if (this._needColumnExporting(childColumn)) {\r\n                return result + (this._calculateExportColspan(childColumn) || 1)\r\n            } else {\r\n                return result\r\n            }\r\n        }, 0)\r\n    },\r\n    _needColumnExporting: function(column) {\r\n        return !column.command && (column.allowExporting || void 0 === column.allowExporting)\r\n    },\r\n    _getFooterSummaryItems: function(summaryCells, isTotal) {\r\n        var result = [];\r\n        var estimatedItemsCount = 1;\r\n        var i = 0;\r\n        do {\r\n            var values = [];\r\n            for (var j = 0; j < summaryCells.length; j++) {\r\n                var summaryCell = summaryCells[j];\r\n                var itemsLength = summaryCell.length;\r\n                if (estimatedItemsCount < itemsLength) {\r\n                    estimatedItemsCount = itemsLength\r\n                }\r\n                values.push(summaryCell[i])\r\n            }\r\n            result.push({\r\n                values: values,\r\n                rowType: isTotal ? \"totalFooter\" : \"groupFooter\"\r\n            })\r\n        } while (i++ < estimatedItemsCount - 1);\r\n        return result\r\n    },\r\n    _hasSummaryGroupFooters: function() {\r\n        var groupItems = this.option(\"summary.groupItems\");\r\n        if (isDefined(groupItems)) {\r\n            for (var i = 0; i < groupItems.length; i++) {\r\n                if (groupItems[i].showInGroupFooter) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _getItemsWithSummaryGroupFooters: function(sourceItems) {\r\n        var result = [];\r\n        var beforeGroupFooterItems = [];\r\n        var groupFooterItems = [];\r\n        for (var i = 0; i < sourceItems.length; i++) {\r\n            var item = sourceItems[i];\r\n            if (\"groupFooter\" === item.rowType) {\r\n                groupFooterItems = this._getFooterSummaryItems(item.summaryCells);\r\n                result = result.concat(beforeGroupFooterItems, groupFooterItems);\r\n                beforeGroupFooterItems = []\r\n            } else {\r\n                beforeGroupFooterItems.push(item)\r\n            }\r\n        }\r\n        return result.length ? result : beforeGroupFooterItems\r\n    },\r\n    _updateGroupValuesWithSummaryByColumn: function(sourceItems) {\r\n        var summaryValues = [];\r\n        for (var i = 0; i < sourceItems.length; i++) {\r\n            var item = sourceItems[i];\r\n            var summaryCells = item.summaryCells;\r\n            if (\"group\" === item.rowType && summaryCells && summaryCells.length > 1) {\r\n                var groupColumnCount = item.values.length;\r\n                for (var j = 1; j < summaryCells.length; j++) {\r\n                    for (var k = 0; k < summaryCells[j].length; k++) {\r\n                        var summaryItem = summaryCells[j][k];\r\n                        if (summaryItem && summaryItem.alignByColumn) {\r\n                            if (!Array.isArray(summaryValues[j - groupColumnCount])) {\r\n                                summaryValues[j - groupColumnCount] = []\r\n                            }\r\n                            summaryValues[j - groupColumnCount].push(summaryItem)\r\n                        }\r\n                    }\r\n                }\r\n                if (summaryValues.length > 0) {\r\n                    merge(item.values, summaryValues);\r\n                    summaryValues = []\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _processUnExportedItems: function(items) {\r\n        var columns = this._columnsController.getVisibleColumns(null, true);\r\n        var groupColumns = this._columnsController.getGroupColumns();\r\n        var values;\r\n        var summaryCells;\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            var isDetailExpandColumn = false;\r\n            values = [];\r\n            summaryCells = [];\r\n            for (var j = 0; j < columns.length; j++) {\r\n                var column = columns[j];\r\n                isDetailExpandColumn = isDetailExpandColumn || \"detailExpand\" === column.type;\r\n                if (this._needColumnExporting(column)) {\r\n                    if (item.values) {\r\n                        if (\"group\" === item.rowType && !values.length) {\r\n                            values.push(item.key[item.groupIndex])\r\n                        } else {\r\n                            values.push(item.values[j])\r\n                        }\r\n                    }\r\n                    if (item.summaryCells) {\r\n                        if (\"group\" === item.rowType && !summaryCells.length) {\r\n                            var index = j - groupColumns.length + item.groupIndex;\r\n                            summaryCells.push(item.summaryCells[isDetailExpandColumn ? index : index + 1])\r\n                        } else {\r\n                            summaryCells.push(item.summaryCells[j])\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (values.length) {\r\n                item.values = values\r\n            }\r\n            if (summaryCells.length) {\r\n                item.summaryCells = summaryCells\r\n            }\r\n        }\r\n    },\r\n    _getAllItems: function(data) {\r\n        var that = this;\r\n        var d = new Deferred;\r\n        var dataController = this.getController(\"data\");\r\n        var footerItems = dataController.footerItems();\r\n        var totalItem = footerItems.length && footerItems[0];\r\n        var summaryTotalItems = that.option(\"summary.totalItems\");\r\n        var summaryCells;\r\n        when(data).done((function(data) {\r\n            dataController.loadAll(data).done((function(sourceItems, totalAggregates) {\r\n                that._updateGroupValuesWithSummaryByColumn(sourceItems);\r\n                if (that._hasSummaryGroupFooters()) {\r\n                    sourceItems = that._getItemsWithSummaryGroupFooters(sourceItems)\r\n                }\r\n                summaryCells = totalItem && totalItem.summaryCells;\r\n                if (isDefined(totalAggregates) && summaryTotalItems) {\r\n                    summaryCells = that._getSummaryCells(summaryTotalItems, totalAggregates)\r\n                }\r\n                var summaryItems = totalItem && that._getFooterSummaryItems(summaryCells, true);\r\n                if (summaryItems) {\r\n                    sourceItems = sourceItems.concat(summaryItems)\r\n                }\r\n                that._processUnExportedItems(sourceItems);\r\n                d.resolve(sourceItems)\r\n            })).fail(d.reject)\r\n        })).fail(d.reject);\r\n        return d\r\n    },\r\n    _getSummaryCells: function(summaryTotalItems, totalAggregates) {\r\n        var dataController = this.getController(\"data\");\r\n        var columnsController = dataController._columnsController;\r\n        return dataController._calculateSummaryCells(summaryTotalItems, totalAggregates, columnsController.getVisibleColumns(null, true), (function(summaryItem, column) {\r\n            return dataController._isDataColumn(column) ? column.index : -1\r\n        }))\r\n    },\r\n    _getSelectedItems: function() {\r\n        var selectionController = this.getController(\"selection\");\r\n        var selectedRowData = selectionController.getSelectedRowsData();\r\n        return this._getAllItems(selectedRowData)\r\n    },\r\n    _getColumnWidths: function(headersView, rowsView) {\r\n        return headersView && headersView.isVisible() ? headersView.getColumnWidths() : rowsView.getColumnWidths()\r\n    },\r\n    init: function() {\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._rowsView = this.getView(\"rowsView\");\r\n        this._headersView = this.getView(\"columnHeadersView\");\r\n        this.createAction(\"onExporting\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        this.createAction(\"onExported\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        this.createAction(\"onFileSaving\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    callbackNames: function() {\r\n        return [\"selectionOnlyChanged\"]\r\n    },\r\n    getExportFormat: function() {\r\n        return [\"EXCEL\"]\r\n    },\r\n    getDataProvider: function(selectedRowsOnly) {\r\n        var columnWidths = this._getColumnWidths(this._headersView, this._rowsView);\r\n        var initialColumnWidthsByColumnIndex;\r\n        if (columnWidths && columnWidths.length) {\r\n            initialColumnWidthsByColumnIndex = {};\r\n            var columnsLastRowVisibleColumns = this._columnsController.getVisibleColumns(this._columnsController.getRowCount(), true);\r\n            for (var i = 0; i < columnsLastRowVisibleColumns.length; i++) {\r\n                initialColumnWidthsByColumnIndex[columnsLastRowVisibleColumns[i].index] = columnWidths[i]\r\n            }\r\n        }\r\n        return new DataProvider(this, initialColumnWidthsByColumnIndex, selectedRowsOnly)\r\n    },\r\n    exportToExcel: function(selectionOnly) {\r\n        this._selectionOnly = selectionOnly;\r\n        clientExport(this.component.getDataProvider(), {\r\n            fileName: this.option(\"export.fileName\"),\r\n            proxyUrl: this.option(\"export.proxyUrl\"),\r\n            format: \"EXCEL\",\r\n            autoFilterEnabled: !!this.option(\"export.excelFilterEnabled\"),\r\n            rtlEnabled: this.option(\"rtlEnabled\"),\r\n            ignoreErrors: this.option(\"export.ignoreExcelErrors\"),\r\n            exportingAction: this.getAction(\"onExporting\"),\r\n            exportedAction: this.getAction(\"onExported\"),\r\n            fileSavingAction: this.getAction(\"onFileSaving\")\r\n        }, excel.getData)\r\n    },\r\n    publicMethods: function() {\r\n        return [\"getDataProvider\", \"getExportFormat\", \"exportToExcel\"]\r\n    },\r\n    selectionOnly: function(value) {\r\n        if (isDefined(value)) {\r\n            this._isSelectedRows = value;\r\n            this.selectionOnlyChanged.fire()\r\n        } else {\r\n            return this._isSelectedRows\r\n        }\r\n    }\r\n});\r\ndataGridCore.registerModule(\"export\", {\r\n    defaultOptions: function() {\r\n        return {\r\n            export: {\r\n                enabled: false,\r\n                fileName: \"DataGrid\",\r\n                excelFilterEnabled: false,\r\n                excelWrapTextEnabled: void 0,\r\n                proxyUrl: void 0,\r\n                allowExportSelectedData: false,\r\n                ignoreExcelErrors: true,\r\n                texts: {\r\n                    exportTo: messageLocalization.format(\"dxDataGrid-exportTo\"),\r\n                    exportAll: messageLocalization.format(\"dxDataGrid-exportAll\"),\r\n                    exportSelectedRows: messageLocalization.format(\"dxDataGrid-exportSelectedRows\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        export: ExportController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                callbackNames: function() {\r\n                    var callbackList = this.callBase();\r\n                    return isDefined(callbackList) ? callbackList.push(\"editingChanged\") : [\"editingChanged\"]\r\n                },\r\n                _updateEditButtons: function() {\r\n                    this.callBase();\r\n                    this.editingChanged.fire(this.hasChanges())\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    var exportButton = this._getExportToolbarButton();\r\n                    if (exportButton) {\r\n                        items.push(exportButton);\r\n                        this._correctItemsPosition(items)\r\n                    }\r\n                    return items\r\n                },\r\n                _getExportToolbarButton: function() {\r\n                    var items = this._getExportToolbarItems();\r\n                    if (0 === items.length) {\r\n                        return null\r\n                    }\r\n                    var toolbarButtonOptions = {\r\n                        name: DATAGRID_EXPORT_TOOLBAR_BUTTON_NAME,\r\n                        location: \"after\",\r\n                        locateInMenu: \"auto\",\r\n                        sortIndex: 30,\r\n                        options: {\r\n                            items: items\r\n                        }\r\n                    };\r\n                    if (1 === items.length) {\r\n                        var widgetOptions = _extends({}, items[0], {\r\n                            hint: items[0].text,\r\n                            elementAttr: {\r\n                                class: DATAGRID_EXPORT_BUTTON_CLASS\r\n                            }\r\n                        });\r\n                        toolbarButtonOptions.widget = \"dxButton\";\r\n                        toolbarButtonOptions.showText = \"inMenu\";\r\n                        toolbarButtonOptions.options = widgetOptions\r\n                    } else {\r\n                        var _widgetOptions = {\r\n                            icon: DATAGRID_EXPORT_ICON,\r\n                            displayExpr: \"text\",\r\n                            items: items,\r\n                            hint: this.option(\"export.texts.exportTo\"),\r\n                            elementAttr: {\r\n                                class: DATAGRID_EXPORT_BUTTON_CLASS\r\n                            },\r\n                            dropDownOptions: {\r\n                                wrapperAttr: {\r\n                                    class: DATAGRID_EXPORT_MENU_CLASS\r\n                                },\r\n                                width: \"auto\"\r\n                            }\r\n                        };\r\n                        toolbarButtonOptions.options = _widgetOptions;\r\n                        toolbarButtonOptions.widget = \"dxDropDownButton\";\r\n                        toolbarButtonOptions.menuItemTemplate = (_data, _index, container) => {\r\n                            this._createComponent($(container), List, {\r\n                                items: items\r\n                            })\r\n                        }\r\n                    }\r\n                    return toolbarButtonOptions\r\n                },\r\n                _getExportToolbarItems: function() {\r\n                    var exportOptions = this.option(\"export\");\r\n                    var texts = this.option(\"export.texts\");\r\n                    var items = [];\r\n                    if (exportOptions.enabled) {\r\n                        items.push({\r\n                            text: texts.exportAll,\r\n                            icon: DATAGRID_EXPORT_EXCEL_ICON,\r\n                            onClick: () => {\r\n                                this._exportController.exportToExcel()\r\n                            }\r\n                        });\r\n                        if (exportOptions.allowExportSelectedData) {\r\n                            items.push({\r\n                                text: texts.exportSelectedRows,\r\n                                icon: DATAGRID_EXPORT_SELECTED_ICON,\r\n                                onClick: () => {\r\n                                    this._exportController.exportToExcel(true)\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                    return items\r\n                },\r\n                _correctItemsPosition: function(items) {\r\n                    items.sort((function(itemA, itemB) {\r\n                        return itemA.sortIndex - itemB.sortIndex\r\n                    }))\r\n                },\r\n                _isExportButtonVisible: function() {\r\n                    return this.option(\"export.enabled\")\r\n                },\r\n                _getButtonOptions: function(allowExportSelected) {\r\n                    var that = this;\r\n                    var texts = that.option(\"export.texts\");\r\n                    var options;\r\n                    if (allowExportSelected) {\r\n                        options = {\r\n                            hint: texts.exportTo,\r\n                            icon: DATAGRID_EXPORT_ICON\r\n                        }\r\n                    } else {\r\n                        options = {\r\n                            hint: texts.exportAll,\r\n                            icon: DATAGRID_EXPORT_EXCEL_BUTTON_ICON,\r\n                            onClick: function() {\r\n                                that._exportController.exportToExcel()\r\n                            }\r\n                        }\r\n                    }\r\n                    return options\r\n                },\r\n                optionChanged: function(args) {\r\n                    this.callBase(args);\r\n                    if (\"export\" === args.name) {\r\n                        args.handled = true;\r\n                        this._invalidate()\r\n                    }\r\n                },\r\n                init: function() {\r\n                    var that = this;\r\n                    this.callBase();\r\n                    this._exportController = this.getController(\"export\");\r\n                    this._editingController = this.getController(\"editing\");\r\n                    this._editingController.editingChanged.add((function(hasChanges) {\r\n                        that.setToolbarItemDisabled(\"exportButton\", hasChanges)\r\n                    }))\r\n                },\r\n                isVisible: function() {\r\n                    return this.callBase() || this._isExportButtonVisible()\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.focus.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport core from \"./ui.grid_core.modules\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isBoolean\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nvar ROW_FOCUSED_CLASS = \"dx-row-focused\";\r\nvar FOCUSED_ROW_SELECTOR = \".dx-row.\" + ROW_FOCUSED_CLASS;\r\nvar TABLE_POSTFIX_CLASS = \"table\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FocusController = core.ViewController.inherit({\r\n    init: function() {\r\n        this._dataController = this.getController(\"data\");\r\n        this._keyboardController = this.getController(\"keyboardNavigation\");\r\n        this.component._optionsByReference.focusedRowKey = true\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"focusedRowIndex\" === args.name) {\r\n            var focusedRowKey = this.option(\"focusedRowKey\");\r\n            this._focusRowByIndex(args.value);\r\n            this._triggerFocusedRowChangedIfNeed(focusedRowKey, args.value);\r\n            args.handled = true\r\n        } else if (\"focusedRowKey\" === args.name) {\r\n            args.handled = true;\r\n            if (Array.isArray(args.value) && JSON.stringify(args.value) === JSON.stringify(args.previousValue)) {\r\n                return\r\n            }\r\n            var focusedRowIndex = this.option(\"focusedRowIndex\");\r\n            this._focusRowByKey(args.value);\r\n            this._triggerFocusedRowChangedIfNeed(args.value, focusedRowIndex)\r\n        } else if (\"focusedColumnIndex\" === args.name) {\r\n            args.handled = true\r\n        } else if (\"focusedRowEnabled\" === args.name) {\r\n            args.handled = true\r\n        } else if (\"autoNavigateToFocusedRow\" === args.name) {\r\n            args.handled = true\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    },\r\n    _triggerFocusedRowChangedIfNeed: function(focusedRowKey, focusedRowIndex) {\r\n        var focusedRowIndexByKey = this.getFocusedRowIndexByKey(focusedRowKey);\r\n        if (focusedRowIndex === focusedRowIndexByKey) {\r\n            var rowIndex = this._dataController.getRowIndexByKey(focusedRowKey);\r\n            if (rowIndex >= 0) {\r\n                var $rowElement = $(this.getView(\"rowsView\").getRowElement(rowIndex));\r\n                this.getController(\"keyboardNavigation\")._fireFocusedRowChanged($rowElement, focusedRowIndex)\r\n            }\r\n        }\r\n    },\r\n    isAutoNavigateToFocusedRow: function() {\r\n        return \"infinite\" !== this.option(\"scrolling.mode\") && this.option(\"autoNavigateToFocusedRow\")\r\n    },\r\n    _focusRowByIndex: function(index, operationTypes) {\r\n        if (!this.option(\"focusedRowEnabled\")) {\r\n            return\r\n        }\r\n        index = void 0 !== index ? index : this.option(\"focusedRowIndex\");\r\n        if (index < 0) {\r\n            if (this.isAutoNavigateToFocusedRow()) {\r\n                this._resetFocusedRow()\r\n            }\r\n        } else {\r\n            this._focusRowByIndexCore(index, operationTypes)\r\n        }\r\n    },\r\n    _focusRowByIndexCore: function(index, operationTypes) {\r\n        var dataController = this.getController(\"data\");\r\n        var pageSize = dataController.pageSize();\r\n        var setKeyByIndex = () => {\r\n            if (this._isValidFocusedRowIndex(index)) {\r\n                var rowIndex = index - dataController.getRowIndexOffset(true);\r\n                if (!operationTypes || operationTypes.paging && !operationTypes.filtering) {\r\n                    var lastItemIndex = dataController._getLastItemIndex();\r\n                    rowIndex = Math.min(rowIndex, lastItemIndex)\r\n                }\r\n                var focusedRowKey = dataController.getKeyByRowIndex(rowIndex, true);\r\n                if (isDefined(focusedRowKey) && !this.isRowFocused(focusedRowKey)) {\r\n                    this.option(\"focusedRowKey\", focusedRowKey)\r\n                }\r\n            }\r\n        };\r\n        if (pageSize >= 0) {\r\n            if (!this._isLocalRowIndex(index)) {\r\n                var pageIndex = Math.floor(index / dataController.pageSize());\r\n                when(dataController.pageIndex(pageIndex), dataController.waitReady()).done(() => {\r\n                    setKeyByIndex()\r\n                })\r\n            } else {\r\n                setKeyByIndex()\r\n            }\r\n        }\r\n    },\r\n    _isLocalRowIndex(index) {\r\n        var dataController = this.getController(\"data\");\r\n        var isVirtualScrolling = this.getController(\"keyboardNavigation\")._isVirtualScrolling();\r\n        if (isVirtualScrolling) {\r\n            var pageIndex = Math.floor(index / dataController.pageSize());\r\n            var virtualItems = dataController.virtualItemsCount();\r\n            var virtualItemsBegin = virtualItems ? virtualItems.begin : -1;\r\n            var visibleRowsCount = dataController.getVisibleRows().length + dataController.getRowIndexOffset();\r\n            var visiblePagesCount = Math.ceil(visibleRowsCount / dataController.pageSize());\r\n            return virtualItemsBegin <= index && visiblePagesCount > pageIndex\r\n        }\r\n        return true\r\n    },\r\n    _setFocusedRowKeyByIndex: function(index) {\r\n        var dataController = this.getController(\"data\");\r\n        if (this._isValidFocusedRowIndex(index)) {\r\n            var rowIndex = Math.min(index - dataController.getRowIndexOffset(), dataController.items().length - 1);\r\n            var focusedRowKey = dataController.getKeyByRowIndex(rowIndex);\r\n            if (isDefined(focusedRowKey) && !this.isRowFocused(focusedRowKey)) {\r\n                this.option(\"focusedRowKey\", focusedRowKey)\r\n            }\r\n        }\r\n    },\r\n    _focusRowByKey: function(key) {\r\n        if (!isDefined(key)) {\r\n            this._resetFocusedRow()\r\n        } else {\r\n            this._navigateToRow(key, true)\r\n        }\r\n    },\r\n    _resetFocusedRow: function() {\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        var isFocusedRowKeyDefined = isDefined(focusedRowKey);\r\n        if (!isFocusedRowKeyDefined && this.option(\"focusedRowIndex\") < 0) {\r\n            return\r\n        }\r\n        var keyboardController = this.getController(\"keyboardNavigation\");\r\n        if (isFocusedRowKeyDefined) {\r\n            this.option(\"focusedRowKey\", null)\r\n        }\r\n        keyboardController.setFocusedRowIndex(-1);\r\n        this.option(\"focusedRowIndex\", -1);\r\n        this.getController(\"data\").updateItems({\r\n            changeType: \"updateFocusedRow\",\r\n            focusedRowKey: null\r\n        });\r\n        keyboardController._fireFocusedRowChanged(void 0, -1)\r\n    },\r\n    _isValidFocusedRowIndex: function(rowIndex) {\r\n        var dataController = this.getController(\"data\");\r\n        var row = dataController.getVisibleRows()[rowIndex];\r\n        return !row || \"data\" === row.rowType || \"group\" === row.rowType\r\n    },\r\n    publicMethods: function() {\r\n        return [\"navigateToRow\", \"isRowFocused\"]\r\n    },\r\n    navigateToRow: function(key) {\r\n        if (!this.isAutoNavigateToFocusedRow()) {\r\n            this.option(\"focusedRowIndex\", -1)\r\n        }\r\n        return this._navigateToRow(key)\r\n    },\r\n    _navigateToRow: function(key, needFocusRow) {\r\n        var that = this;\r\n        var dataController = that.getController(\"data\");\r\n        var isAutoNavigate = that.isAutoNavigateToFocusedRow();\r\n        var d = new Deferred;\r\n        if (void 0 === key || !dataController.dataSource()) {\r\n            return d.reject().promise()\r\n        }\r\n        var rowIndexByKey = that.getFocusedRowIndexByKey(key);\r\n        if (!isAutoNavigate && needFocusRow || rowIndexByKey >= 0) {\r\n            that._navigateTo(key, d, needFocusRow)\r\n        } else {\r\n            dataController.getPageIndexByKey(key).done((function(pageIndex) {\r\n                if (pageIndex < 0) {\r\n                    d.resolve(-1);\r\n                    return\r\n                }\r\n                if (pageIndex === dataController.pageIndex()) {\r\n                    dataController.reload().done((function() {\r\n                        if (that.isRowFocused(key) && dataController.getRowIndexByKey(key) >= 0) {\r\n                            d.resolve(that.getFocusedRowIndexByKey(key))\r\n                        } else {\r\n                            that._navigateTo(key, d, needFocusRow)\r\n                        }\r\n                    })).fail(d.reject)\r\n                } else {\r\n                    dataController.pageIndex(pageIndex).done((function() {\r\n                        that._navigateTo(key, d, needFocusRow)\r\n                    })).fail(d.reject)\r\n                }\r\n            })).fail(d.reject)\r\n        }\r\n        return d.promise()\r\n    },\r\n    _navigateTo: function(key, deferred, needFocusRow) {\r\n        var visibleRowIndex = this.getController(\"data\").getRowIndexByKey(key);\r\n        var isVirtualRowRenderingMode = gridCoreUtils.isVirtualRowRendering(this);\r\n        var isAutoNavigate = this.isAutoNavigateToFocusedRow();\r\n        if (isAutoNavigate && isVirtualRowRenderingMode && visibleRowIndex < 0) {\r\n            this._navigateToVirtualRow(key, deferred, needFocusRow)\r\n        } else {\r\n            this._navigateToVisibleRow(key, deferred, needFocusRow)\r\n        }\r\n    },\r\n    _navigateToVisibleRow: function(key, deferred, needFocusRow) {\r\n        if (needFocusRow) {\r\n            this._triggerUpdateFocusedRow(key, deferred)\r\n        } else {\r\n            var focusedRowIndex = this.getFocusedRowIndexByKey(key);\r\n            this.getView(\"rowsView\").scrollToRowElement(key, deferred).done((function() {\r\n                deferred.resolve(focusedRowIndex)\r\n            }))\r\n        }\r\n    },\r\n    _navigateToVirtualRow: function(key, deferred, needFocusRow) {\r\n        var that = this;\r\n        var dataController = this.getController(\"data\");\r\n        var rowsScrollController = dataController._rowsScrollController;\r\n        var rowIndex = gridCoreUtils.getIndexByKey(key, dataController.items(true));\r\n        var scrollable = that.getView(\"rowsView\").getScrollable();\r\n        if (rowsScrollController && scrollable && rowIndex >= 0) {\r\n            var focusedRowIndex = rowIndex + dataController.getRowIndexOffset(true);\r\n            var offset = rowsScrollController.getItemOffset(focusedRowIndex);\r\n            that.component.on(\"contentReady\", (function triggerUpdateFocusedRow() {\r\n                that.component.off(\"contentReady\", triggerUpdateFocusedRow);\r\n                if (needFocusRow) {\r\n                    that._triggerUpdateFocusedRow(key, deferred)\r\n                } else {\r\n                    deferred.resolve(focusedRowIndex)\r\n                }\r\n            }));\r\n            this.getView(\"rowsView\").scrollTopPosition(offset)\r\n        } else {\r\n            deferred.resolve(-1)\r\n        }\r\n    },\r\n    _triggerUpdateFocusedRow: function(key, deferred) {\r\n        var dataController = this.getController(\"data\");\r\n        var focusedRowIndex = this.getFocusedRowIndexByKey(key);\r\n        if (this._isValidFocusedRowIndex(focusedRowIndex)) {\r\n            var d;\r\n            if (this.option(\"focusedRowEnabled\")) {\r\n                dataController.updateItems({\r\n                    changeType: \"updateFocusedRow\",\r\n                    focusedRowKey: key\r\n                })\r\n            } else {\r\n                d = this.getView(\"rowsView\").scrollToRowElement(key)\r\n            }\r\n            when(d).done(() => {\r\n                this.getController(\"keyboardNavigation\").setFocusedRowIndex(focusedRowIndex);\r\n                deferred && deferred.resolve(focusedRowIndex)\r\n            })\r\n        } else {\r\n            deferred && deferred.resolve(-1)\r\n        }\r\n    },\r\n    getFocusedRowIndexByKey: function(key) {\r\n        var dataController = this.getController(\"data\");\r\n        var loadedRowIndex = dataController.getRowIndexByKey(key, true);\r\n        return loadedRowIndex >= 0 ? loadedRowIndex + dataController.getRowIndexOffset(true) : -1\r\n    },\r\n    _focusRowByKeyOrIndex: function() {\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        var currentFocusedRowIndex = this.option(\"focusedRowIndex\");\r\n        var keyboardController = this.getController(\"keyboardNavigation\");\r\n        var dataController = this.getController(\"data\");\r\n        if (isDefined(focusedRowKey)) {\r\n            var visibleRowIndex = dataController.getRowIndexByKey(focusedRowKey);\r\n            if (visibleRowIndex >= 0) {\r\n                if (keyboardController._isVirtualScrolling()) {\r\n                    currentFocusedRowIndex = visibleRowIndex + dataController.getRowIndexOffset()\r\n                }\r\n                keyboardController.setFocusedRowIndex(currentFocusedRowIndex);\r\n                this._triggerUpdateFocusedRow(focusedRowKey)\r\n            } else {\r\n                this._navigateToRow(focusedRowKey, true).done(focusedRowIndex => {\r\n                    if (currentFocusedRowIndex >= 0 && focusedRowIndex < 0) {\r\n                        this._focusRowByIndex()\r\n                    } else if (currentFocusedRowIndex < 0 && focusedRowIndex >= 0) {\r\n                        keyboardController.setFocusedRowIndex(focusedRowIndex)\r\n                    }\r\n                })\r\n            }\r\n        } else if (currentFocusedRowIndex >= 0) {\r\n            this.getController(\"focus\")._focusRowByIndex(currentFocusedRowIndex)\r\n        }\r\n    },\r\n    isRowFocused: function(key) {\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        if (isDefined(focusedRowKey)) {\r\n            return equalByValue(key, this.option(\"focusedRowKey\"))\r\n        }\r\n    },\r\n    updateFocusedRow: function(change) {\r\n        var that = this;\r\n        var focusedRowIndex = that._dataController.getRowIndexByKey(change.focusedRowKey);\r\n        var rowsView = that.getView(\"rowsView\");\r\n        var $tableElement;\r\n        each(rowsView.getTableElements(), (function(index, element) {\r\n            var isMainTable = 0 === index;\r\n            $tableElement = $(element);\r\n            that._clearPreviousFocusedRow($tableElement, focusedRowIndex);\r\n            that._prepareFocusedRow({\r\n                changedItem: that._dataController.getVisibleRows()[focusedRowIndex],\r\n                $tableElement: $tableElement,\r\n                focusedRowIndex: focusedRowIndex,\r\n                isMainTable: isMainTable\r\n            })\r\n        }))\r\n    },\r\n    _clearPreviousFocusedRow: function($tableElement, focusedRowIndex) {\r\n        var $prevRowFocusedElement = $tableElement.find(FOCUSED_ROW_SELECTOR).filter((_, focusedRow) => {\r\n            var $focusedRowTable = $(focusedRow).closest(\".\".concat(this.addWidgetPrefix(TABLE_POSTFIX_CLASS)));\r\n            return $tableElement.is($focusedRowTable)\r\n        });\r\n        $prevRowFocusedElement.removeClass(ROW_FOCUSED_CLASS).removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabindex\");\r\n        $prevRowFocusedElement.children(\"td\").removeAttr(\"tabindex\");\r\n        if (0 !== focusedRowIndex) {\r\n            var $firstRow = $(this.getView(\"rowsView\").getRowElement(0));\r\n            $firstRow.removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabIndex\")\r\n        }\r\n    },\r\n    _prepareFocusedRow: function(options) {\r\n        var $row;\r\n        var changedItem = options.changedItem;\r\n        if (changedItem && (\"data\" === changedItem.rowType || \"group\" === changedItem.rowType)) {\r\n            var focusedRowIndex = options.focusedRowIndex;\r\n            var $tableElement = options.$tableElement;\r\n            var isMainTable = options.isMainTable;\r\n            var tabIndex = this.option(\"tabindex\") || 0;\r\n            var rowsView = this.getView(\"rowsView\");\r\n            $row = $(rowsView._getRowElements($tableElement).eq(focusedRowIndex));\r\n            $row.addClass(ROW_FOCUSED_CLASS).attr(\"tabindex\", tabIndex);\r\n            if (isMainTable) {\r\n                rowsView.scrollToElementVertically($row)\r\n            }\r\n        }\r\n        return $row\r\n    }\r\n});\r\nexport var focusModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            focusedRowEnabled: false,\r\n            autoNavigateToFocusedRow: true,\r\n            focusedRowKey: null,\r\n            focusedRowIndex: -1,\r\n            focusedColumnIndex: -1\r\n        }\r\n    },\r\n    controllers: {\r\n        focus: FocusController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            keyboardNavigation: {\r\n                init: function() {\r\n                    var rowIndex = this.option(\"focusedRowIndex\");\r\n                    var columnIndex = this.option(\"focusedColumnIndex\");\r\n                    this.createAction(\"onFocusedRowChanging\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.createAction(\"onFocusedRowChanged\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.createAction(\"onFocusedCellChanging\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.createAction(\"onFocusedCellChanged\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.callBase();\r\n                    this.setRowFocusType();\r\n                    this._focusedCellPosition = {};\r\n                    if (isDefined(rowIndex)) {\r\n                        this._focusedCellPosition.rowIndex = this.option(\"focusedRowIndex\")\r\n                    }\r\n                    if (isDefined(columnIndex)) {\r\n                        this._focusedCellPosition.columnIndex = this.option(\"focusedColumnIndex\")\r\n                    }\r\n                },\r\n                setFocusedRowIndex: function(rowIndex) {\r\n                    var dataController = this.getController(\"data\");\r\n                    this.callBase(rowIndex);\r\n                    var visibleRowIndex = rowIndex - dataController.getRowIndexOffset();\r\n                    var visibleRow = dataController.getVisibleRows()[visibleRowIndex];\r\n                    if (!visibleRow || !visibleRow.isNewRow) {\r\n                        this.option(\"focusedRowIndex\", rowIndex)\r\n                    }\r\n                },\r\n                setFocusedColumnIndex: function(columnIndex) {\r\n                    this.callBase(columnIndex);\r\n                    this.option(\"focusedColumnIndex\", columnIndex)\r\n                },\r\n                _escapeKeyHandler: function(eventArgs, isEditing) {\r\n                    if (isEditing || !this.option(\"focusedRowEnabled\")) {\r\n                        this.callBase(eventArgs, isEditing);\r\n                        return\r\n                    }\r\n                    if (this.isCellFocusType()) {\r\n                        this.setRowFocusType();\r\n                        this._focus(this._getCellElementFromTarget(eventArgs.originalEvent.target), true)\r\n                    }\r\n                },\r\n                _updateFocusedCellPosition: function($cell, direction) {\r\n                    var prevRowIndex = this.option(\"focusedRowIndex\");\r\n                    var prevColumnIndex = this.option(\"focusedColumnIndex\");\r\n                    var position = this.callBase($cell, direction);\r\n                    if (position && position.columnIndex >= 0) {\r\n                        this._fireFocusedCellChanged($cell, prevColumnIndex, prevRowIndex)\r\n                    }\r\n                }\r\n            },\r\n            editorFactory: {\r\n                renderFocusOverlay: function($element, hideBorder) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var focusedRowEnabled = this.option(\"focusedRowEnabled\");\r\n                    var editingController = this.getController(\"editing\");\r\n                    var $cell;\r\n                    if (!focusedRowEnabled || !(null !== keyboardController && void 0 !== keyboardController && keyboardController.isRowFocusType()) || editingController.isEditing()) {\r\n                        this.callBase($element, hideBorder)\r\n                    } else if (focusedRowEnabled) {\r\n                        var isRowElement = \"row\" === keyboardController._getElementType($element);\r\n                        if (isRowElement && !$element.hasClass(ROW_FOCUSED_CLASS)) {\r\n                            $cell = keyboardController.getFirstValidCellInRow($element);\r\n                            keyboardController.focus($cell)\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            columns: {\r\n                getSortDataSourceParameters: function(_, sortByKey) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var dataController = this.getController(\"data\");\r\n                    var dataSource = dataController._dataSource;\r\n                    var store = dataController.store();\r\n                    var key = store && store.key();\r\n                    var remoteOperations = dataSource && dataSource.remoteOperations() || {};\r\n                    var isLocalOperations = Object.keys(remoteOperations).every(operationName => !remoteOperations[operationName]);\r\n                    if (key && (this.option(\"focusedRowEnabled\") && false !== this.getController(\"focus\").isAutoNavigateToFocusedRow() || sortByKey)) {\r\n                        key = Array.isArray(key) ? key : [key];\r\n                        var notSortedKeys = key.filter(key => !this.columnOption(key, \"sortOrder\"));\r\n                        if (notSortedKeys.length) {\r\n                            result = result || [];\r\n                            if (isLocalOperations) {\r\n                                result.push({\r\n                                    selector: dataSource.getDataIndexGetter(),\r\n                                    desc: false\r\n                                })\r\n                            } else {\r\n                                notSortedKeys.forEach(notSortedKey => result.push({\r\n                                    selector: notSortedKey,\r\n                                    desc: false\r\n                                }))\r\n                            }\r\n                        }\r\n                    }\r\n                    return result\r\n                }\r\n            },\r\n            data: {\r\n                _applyChange: function(change) {\r\n                    if (change && \"updateFocusedRow\" === change.changeType) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _fireChanged: function(e) {\r\n                    this.callBase(e);\r\n                    if (this.option(\"focusedRowEnabled\") && this._dataSource) {\r\n                        var isPartialUpdate = \"update\" === e.changeType && e.repaintChangesOnly;\r\n                        var isPartialUpdateWithDeleting = isPartialUpdate && e.changeTypes && e.changeTypes.indexOf(\"remove\") >= 0;\r\n                        if (\"refresh\" === e.changeType && e.items.length || isPartialUpdateWithDeleting) {\r\n                            this._updatePageIndexes();\r\n                            this.processUpdateFocusedRow(e)\r\n                        } else if (\"append\" === e.changeType || \"prepend\" === e.changeType) {\r\n                            this._updatePageIndexes()\r\n                        } else if (\"update\" === e.changeType && e.repaintChangesOnly) {\r\n                            this.processUpdateFocusedRow(e)\r\n                        }\r\n                    }\r\n                },\r\n                _updatePageIndexes: function() {\r\n                    var prevRenderingPageIndex = this._lastRenderingPageIndex || 0;\r\n                    var renderingPageIndex = this._rowsScrollController ? this._rowsScrollController.pageIndex() : 0;\r\n                    this._lastRenderingPageIndex = renderingPageIndex;\r\n                    this._isPagingByRendering = renderingPageIndex !== prevRenderingPageIndex\r\n                },\r\n                isPagingByRendering: function() {\r\n                    return this._isPagingByRendering\r\n                },\r\n                processUpdateFocusedRow: function(e) {\r\n                    var operationTypes = e.operationTypes || {};\r\n                    var focusController = this.getController(\"focus\");\r\n                    var {\r\n                        reload: reload,\r\n                        fullReload: fullReload\r\n                    } = operationTypes;\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var isVirtualScrolling = keyboardController._isVirtualScrolling();\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var isAutoNavigate = focusController.isAutoNavigateToFocusedRow();\r\n                    if (reload && !fullReload && isDefined(focusedRowKey)) {\r\n                        focusController._navigateToRow(focusedRowKey, true).done((function(focusedRowIndex) {\r\n                            if (focusedRowIndex < 0) {\r\n                                focusController._focusRowByIndex(void 0, operationTypes)\r\n                            }\r\n                        }))\r\n                    } else if (operationTypes.paging && !isVirtualScrolling) {\r\n                        if (isAutoNavigate) {\r\n                            var rowIndexByKey = this.getRowIndexByKey(focusedRowKey);\r\n                            var isValidRowIndexByKey = rowIndexByKey >= 0;\r\n                            var focusedRowIndex = this.option(\"focusedRowIndex\");\r\n                            var needFocusRowByIndex = focusedRowIndex >= 0 && (focusedRowIndex === rowIndexByKey || !isValidRowIndexByKey);\r\n                            if (needFocusRowByIndex) {\r\n                                focusController._focusRowByIndex(void 0, operationTypes)\r\n                            }\r\n                        } else if (this.getRowIndexByKey(focusedRowKey) < 0) {\r\n                            this.option(\"focusedRowIndex\", -1)\r\n                        }\r\n                    } else if (operationTypes.fullReload) {\r\n                        focusController._focusRowByKeyOrIndex()\r\n                    }\r\n                },\r\n                getPageIndexByKey: function(key) {\r\n                    var that = this;\r\n                    var d = new Deferred;\r\n                    that.getGlobalRowIndexByKey(key).done((function(globalIndex) {\r\n                        d.resolve(globalIndex >= 0 ? Math.floor(globalIndex / that.pageSize()) : -1)\r\n                    })).fail(d.reject);\r\n                    return d.promise()\r\n                },\r\n                getGlobalRowIndexByKey: function(key) {\r\n                    if (this._dataSource.group()) {\r\n                        return this._calculateGlobalRowIndexByGroupedData(key)\r\n                    }\r\n                    return this._calculateGlobalRowIndexByFlatData(key)\r\n                },\r\n                _calculateGlobalRowIndexByFlatData: function(key, groupFilter, useGroup) {\r\n                    var that = this;\r\n                    var deferred = new Deferred;\r\n                    var dataSource = that._dataSource;\r\n                    if (Array.isArray(key)) {\r\n                        return deferred.resolve(-1).promise()\r\n                    }\r\n                    var filter = that._generateFilterByKey(key);\r\n                    dataSource.load({\r\n                        filter: that._concatWithCombinedFilter(filter),\r\n                        skip: 0,\r\n                        take: 1\r\n                    }).done((function(data) {\r\n                        if (data.length > 0) {\r\n                            filter = that._generateOperationFilterByKey(key, data[0], useGroup);\r\n                            dataSource.load({\r\n                                filter: that._concatWithCombinedFilter(filter, groupFilter),\r\n                                skip: 0,\r\n                                take: 1,\r\n                                requireTotalCount: true\r\n                            }).done((function(_, extra) {\r\n                                deferred.resolve(extra.totalCount)\r\n                            }))\r\n                        } else {\r\n                            deferred.resolve(-1)\r\n                        }\r\n                    }));\r\n                    return deferred.promise()\r\n                },\r\n                _concatWithCombinedFilter: function(filter, groupFilter) {\r\n                    var combinedFilter = this.getCombinedFilter();\r\n                    return gridCoreUtils.combineFilters([filter, combinedFilter, groupFilter])\r\n                },\r\n                _generateBooleanFilter: function(selector, value, sortInfo) {\r\n                    var result;\r\n                    if (false === value) {\r\n                        result = [selector, \"=\", sortInfo.desc ? true : null]\r\n                    } else if (true === value ? !sortInfo.desc : sortInfo.desc) {\r\n                        result = [selector, \"<>\", value]\r\n                    }\r\n                    return result\r\n                },\r\n                _generateOperationFilterByKey: function(key, rowData, useGroup) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var filter = that._generateFilterByKey(key, \"<\");\r\n                    var sort = that._columnsController.getSortDataSourceParameters(!dataSource.remoteOperations().filtering, true);\r\n                    if (useGroup) {\r\n                        var group = that._columnsController.getGroupDataSourceParameters(!dataSource.remoteOperations().filtering);\r\n                        if (group) {\r\n                            sort = sort ? group.concat(sort) : group\r\n                        }\r\n                    }\r\n                    if (sort) {\r\n                        sort.slice().reverse().forEach((function(sortInfo) {\r\n                            var selector = sortInfo.selector;\r\n                            var getter;\r\n                            if (\"function\" === typeof selector) {\r\n                                getter = selector\r\n                            } else {\r\n                                getter = that._columnsController.columnOption(selector, \"selector\")\r\n                            }\r\n                            var value = getter ? getter(rowData) : rowData[selector];\r\n                            filter = [\r\n                                [selector, \"=\", value], \"and\", filter\r\n                            ];\r\n                            if (null === value || isBoolean(value)) {\r\n                                var booleanFilter = that._generateBooleanFilter(selector, value, sortInfo);\r\n                                if (booleanFilter) {\r\n                                    filter = [booleanFilter, \"or\", filter]\r\n                                }\r\n                            } else {\r\n                                var filterOperation = sortInfo.desc ? \">\" : \"<\";\r\n                                var sortFilter = [selector, filterOperation, value];\r\n                                if (!sortInfo.desc) {\r\n                                    sortFilter = [sortFilter, \"or\", [selector, \"=\", null]]\r\n                                }\r\n                                filter = [sortFilter, \"or\", filter]\r\n                            }\r\n                        }))\r\n                    }\r\n                    return filter\r\n                },\r\n                _generateFilterByKey: function(key, operation) {\r\n                    var dataSourceKey = this._dataSource.key();\r\n                    var filter = [];\r\n                    if (!operation) {\r\n                        operation = \"=\"\r\n                    }\r\n                    if (Array.isArray(dataSourceKey)) {\r\n                        for (var i = 0; i < dataSourceKey.length; ++i) {\r\n                            var keyPart = key[dataSourceKey[i]];\r\n                            if (keyPart) {\r\n                                if (filter.length > 0) {\r\n                                    filter.push(\"and\")\r\n                                }\r\n                                filter.push([dataSourceKey[i], operation, keyPart])\r\n                            }\r\n                        }\r\n                    } else {\r\n                        filter = [dataSourceKey, operation, key]\r\n                    }\r\n                    return filter\r\n                },\r\n                _getLastItemIndex: function() {\r\n                    return this.items(true).length - 1\r\n                }\r\n            },\r\n            editing: {\r\n                _deleteRowCore: function(rowIndex) {\r\n                    var deferred = this.callBase.apply(this, arguments);\r\n                    var dataController = this.getController(\"data\");\r\n                    var rowKey = dataController.getKeyByRowIndex(rowIndex);\r\n                    deferred.done(() => {\r\n                        var rowIndex = dataController.getRowIndexByKey(rowKey);\r\n                        var visibleRows = dataController.getVisibleRows();\r\n                        if (-1 === rowIndex && !visibleRows.length) {\r\n                            this.getController(\"focus\")._resetFocusedRow()\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (this.option(\"focusedRowEnabled\") && row) {\r\n                        if (this.getController(\"focus\").isRowFocused(row.key)) {\r\n                            $row.addClass(ROW_FOCUSED_CLASS)\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _checkRowKeys: function(options) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.option(\"focusedRowEnabled\") && this.option(\"dataSource\")) {\r\n                        var store = this._dataController.store();\r\n                        if (store && !store.key()) {\r\n                            this._dataController.fireError(\"E1042\", \"Row focusing\")\r\n                        }\r\n                    }\r\n                },\r\n                _update: function(change) {\r\n                    if (\"updateFocusedRow\" === change.changeType) {\r\n                        if (this.option(\"focusedRowEnabled\")) {\r\n                            this.getController(\"focus\").updateFocusedRow(change)\r\n                        }\r\n                    } else {\r\n                        this.callBase(change)\r\n                    }\r\n                },\r\n                updateFocusElementTabIndex: function($cellElements, preventScroll) {\r\n                    var rowIndex = this.getController(\"keyboardNavigation\").getVisibleRowIndex();\r\n                    var row = this._dataController.getVisibleRows()[rowIndex];\r\n                    if (this.option(\"focusedRowEnabled\") && !(null !== row && void 0 !== row && row.isNewRow)) {\r\n                        this._setFocusedRowElementTabIndex(preventScroll)\r\n                    } else {\r\n                        this.callBase($cellElements)\r\n                    }\r\n                },\r\n                _setFocusedRowElementTabIndex: function(preventScroll) {\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var tabIndex = this.option(\"tabIndex\") || 0;\r\n                    var dataController = this._dataController;\r\n                    var columnsController = this._columnsController;\r\n                    var rowIndex = dataController.getRowIndexByKey(focusedRowKey);\r\n                    var columnIndex = this.option(\"focusedColumnIndex\");\r\n                    var $row = this._findRowElementForTabIndex();\r\n                    if (!isDefined(this._scrollToFocusOnResize)) {\r\n                        this._scrollToFocusOnResize = () => {\r\n                            this.scrollToElementVertically(this._findRowElementForTabIndex());\r\n                            this.resizeCompleted.remove(this._scrollToFocusOnResize)\r\n                        }\r\n                    }\r\n                    $row.attr(\"tabIndex\", tabIndex);\r\n                    if (rowIndex >= 0 && !preventScroll) {\r\n                        if (columnIndex < 0) {\r\n                            columnIndex = 0\r\n                        }\r\n                        rowIndex += dataController.getRowIndexOffset();\r\n                        columnIndex += columnsController.getColumnIndexOffset();\r\n                        this.getController(\"keyboardNavigation\").setFocusedCellPosition(rowIndex, columnIndex);\r\n                        if (this.getController(\"focus\").isAutoNavigateToFocusedRow()) {\r\n                            var dataSource = dataController.dataSource();\r\n                            var operationTypes = dataSource && dataSource.operationTypes();\r\n                            if (operationTypes && !operationTypes.paging && !dataController.isPagingByRendering()) {\r\n                                this.resizeCompleted.remove(this._scrollToFocusOnResize);\r\n                                this.resizeCompleted.add(this._scrollToFocusOnResize)\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _findRowElementForTabIndex: function() {\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var rowIndex = this._dataController.getRowIndexByKey(focusedRowKey);\r\n                    return $(this.getRowElement(rowIndex >= 0 ? rowIndex : 0))\r\n                },\r\n                scrollToRowElement: function(key) {\r\n                    var rowIndex = this.getController(\"data\").getRowIndexByKey(key);\r\n                    var $row = $(this.getRow(rowIndex));\r\n                    return this.scrollToElementVertically($row)\r\n                },\r\n                scrollToElementVertically: function($row) {\r\n                    var scrollable = this.getScrollable();\r\n                    if (scrollable && $row.length) {\r\n                        var position = scrollable.getScrollElementPosition($row, \"vertical\");\r\n                        return this.scrollTopPosition(position)\r\n                    }\r\n                    return (new Deferred).resolve()\r\n                },\r\n                scrollTopPosition: function(scrollTop) {\r\n                    var d = new Deferred;\r\n                    var scrollable = this.getScrollable();\r\n                    if (scrollable) {\r\n                        var currentScrollTop = scrollable.scrollTop();\r\n                        var scrollHandler = () => {\r\n                            scrollable.off(\"scroll\", scrollHandler);\r\n                            d.resolve()\r\n                        };\r\n                        if (scrollTop !== currentScrollTop) {\r\n                            scrollable.on(\"scroll\", scrollHandler);\r\n                            this._dataController.resetFilterApplying();\r\n                            scrollable.scrollTo({\r\n                                top: scrollTop\r\n                            });\r\n                            return d.promise()\r\n                        }\r\n                    }\r\n                    return d.resolve()\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.focus.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    focusModule\r\n} from \"../grid_core/ui.grid_core.focus\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    createGroupFilter\r\n} from \"./ui.data_grid.utils\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\r\ngridCore.registerModule(\"focus\", extend(true, {}, focusModule, {\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                changeRowExpand: function(path, isRowClick) {\r\n                    if (this.option(\"focusedRowEnabled\") && Array.isArray(path) && this.isRowExpanded(path)) {\r\n                        var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                        if ((!isRowClick || !keyboardNavigation.isKeyboardEnabled()) && this._isFocusedRowInsideGroup(path)) {\r\n                            this.option(\"focusedRowKey\", path)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _isFocusedRowInsideGroup: function(path) {\r\n                    var columnsController = this.getController(\"columns\");\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var rowIndex = this.getRowIndexByKey(focusedRowKey);\r\n                    var focusedRow = rowIndex >= 0 && this.getVisibleRows()[rowIndex];\r\n                    var groups = columnsController.getGroupDataSourceParameters(true);\r\n                    if (focusedRow) {\r\n                        for (var i = 0; i < path.length; ++i) {\r\n                            var getter = compileGetter(groups[i] && groups[i].selector);\r\n                            if (getter(focusedRow.data) !== path[i]) {\r\n                                return false\r\n                            }\r\n                        }\r\n                    }\r\n                    return true\r\n                },\r\n                _getGroupPath: function(group) {\r\n                    var groupPath = [group.key];\r\n                    var items = group.items;\r\n                    while (items && items[0]) {\r\n                        var item = items[0];\r\n                        if (void 0 !== item.key) {\r\n                            groupPath.push(item.key)\r\n                        }\r\n                        items = item.items\r\n                    }\r\n                    return groupPath\r\n                },\r\n                _expandGroupByPath: function(that, groupPath, level) {\r\n                    var d = new Deferred;\r\n                    level++;\r\n                    that.expandRow(groupPath.slice(0, level)).done((function() {\r\n                        if (level === groupPath.length) {\r\n                            d.resolve()\r\n                        } else {\r\n                            that._expandGroupByPath(that, groupPath, level).done(d.resolve).fail(d.reject)\r\n                        }\r\n                    })).fail(d.reject);\r\n                    return d.promise()\r\n                },\r\n                _calculateGlobalRowIndexByGroupedData: function(key) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var filter = that._generateFilterByKey(key);\r\n                    var deferred = new Deferred;\r\n                    var isGroupKey = Array.isArray(key);\r\n                    var group = dataSource.group();\r\n                    if (isGroupKey) {\r\n                        return deferred.resolve(-1).promise()\r\n                    }\r\n                    if (!dataSource._grouping._updatePagingOptions) {\r\n                        that._calculateGlobalRowIndexByFlatData(key, null, true).done(deferred.resolve).fail(deferred.reject);\r\n                        return deferred\r\n                    }\r\n                    dataSource.load({\r\n                        filter: that._concatWithCombinedFilter(filter),\r\n                        group: group\r\n                    }).done((function(data) {\r\n                        if (!data || 0 === data.length || !isDefined(data[0].key) || -1 === data[0].key) {\r\n                            return deferred.resolve(-1).promise()\r\n                        }\r\n                        var groupPath = that._getGroupPath(data[0]);\r\n                        that._expandGroupByPath(that, groupPath, 0).done((function() {\r\n                            that._calculateExpandedRowGlobalIndex(deferred, key, groupPath, group)\r\n                        })).fail(deferred.reject)\r\n                    })).fail(deferred.reject);\r\n                    return deferred.promise()\r\n                },\r\n                _calculateExpandedRowGlobalIndex: function(deferred, key, groupPath, group) {\r\n                    var groupFilter = createGroupFilter(groupPath, {\r\n                        group: group\r\n                    });\r\n                    var dataSource = this._dataSource;\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    var isVirtualScrolling = \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\r\n                    var pageSize = dataSource.pageSize();\r\n                    var groupOffset;\r\n                    dataSource._grouping._updatePagingOptions({\r\n                        skip: 0,\r\n                        take: MAX_SAFE_INTEGER\r\n                    }, (function(groupInfo, totalOffset) {\r\n                        if (equalByValue(groupInfo.path, groupPath)) {\r\n                            groupOffset = totalOffset\r\n                        }\r\n                    }));\r\n                    this._calculateGlobalRowIndexByFlatData(key, groupFilter).done((function(dataOffset) {\r\n                        var count;\r\n                        var groupContinuationCount;\r\n                        if (dataOffset < 0) {\r\n                            deferred.resolve(-1);\r\n                            return\r\n                        }\r\n                        var currentPageOffset = groupOffset % pageSize || pageSize;\r\n                        count = currentPageOffset + dataOffset - groupPath.length;\r\n                        if (isVirtualScrolling) {\r\n                            groupContinuationCount = 0\r\n                        } else {\r\n                            groupContinuationCount = Math.floor(count / (pageSize - groupPath.length)) * groupPath.length\r\n                        }\r\n                        count = groupOffset + dataOffset + groupContinuationCount;\r\n                        deferred.resolve(count)\r\n                    })).fail(deferred.reject)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}));\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.row_dragging.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    setWidth,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport Sortable from \"../sortable\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    deferUpdate\r\n} from \"../../core/utils/common\";\r\nvar COMMAND_HANDLE_CLASS = \"dx-command-drag\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar HANDLE_ICON_CLASS = \"drag-icon\";\r\nvar ROWS_VIEW = \"rowsview\";\r\nvar SORTABLE_WITHOUT_HANDLE_CLASS = \"dx-sortable-without-handle\";\r\nvar RowDraggingExtender = {\r\n    init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._updateHandleColumn()\r\n    },\r\n    _allowReordering: function() {\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        return !!(rowDragging && (rowDragging.allowReordering || rowDragging.allowDropInsideItem || rowDragging.group))\r\n    },\r\n    _updateHandleColumn: function() {\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        var allowReordering = this._allowReordering();\r\n        var columnsController = this._columnsController;\r\n        var isHandleColumnVisible = allowReordering && rowDragging.showDragIcons;\r\n        columnsController && columnsController.addCommandColumn({\r\n            type: \"drag\",\r\n            command: \"drag\",\r\n            visibleIndex: -2,\r\n            alignment: \"center\",\r\n            cssClass: COMMAND_HANDLE_CLASS,\r\n            width: \"auto\",\r\n            cellTemplate: this._getHandleTemplate(),\r\n            visible: isHandleColumnVisible\r\n        });\r\n        columnsController.columnOption(\"type:drag\", \"visible\", isHandleColumnVisible)\r\n    },\r\n    _renderContent: function() {\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        var allowReordering = this._allowReordering();\r\n        var $content = this.callBase.apply(this, arguments);\r\n        var isFixedTableRendering = this._isFixedTableRendering;\r\n        var sortableName = \"_sortable\";\r\n        var sortableFixedName = \"_sortableFixed\";\r\n        var currentSortableName = isFixedTableRendering ? sortableFixedName : sortableName;\r\n        var anotherSortableName = isFixedTableRendering ? sortableName : sortableFixedName;\r\n        var togglePointerEventsStyle = toggle => {\r\n            var _this$sortableFixedNa;\r\n            null === (_this$sortableFixedNa = this[sortableFixedName]) || void 0 === _this$sortableFixedNa ? void 0 : _this$sortableFixedNa.$element().css(\"pointerEvents\", toggle ? \"auto\" : \"\")\r\n        };\r\n        var filter = this.option(\"dataRowTemplate\") ? \"> table > tbody.dx-row:not(.dx-freespace-row):not(.dx-virtual-row)\" : \"> table > tbody > .dx-row:not(.dx-freespace-row):not(.dx-virtual-row)\";\r\n        if ((allowReordering || this[currentSortableName]) && $content.length) {\r\n            this[currentSortableName] = this._createComponent($content, Sortable, extend({\r\n                component: this.component,\r\n                contentTemplate: null,\r\n                filter: filter,\r\n                dragTemplate: this._getDraggableRowTemplate(),\r\n                handle: rowDragging.showDragIcons && \".\".concat(COMMAND_HANDLE_CLASS),\r\n                dropFeedbackMode: \"indicate\"\r\n            }, rowDragging, {\r\n                onDragStart: e => {\r\n                    var _this$getController, _rowDragging$onDragSt;\r\n                    null === (_this$getController = this.getController(\"keyboardNavigation\")) || void 0 === _this$getController ? void 0 : _this$getController._resetFocusedCell();\r\n                    var row = e.component.getVisibleRows()[e.fromIndex];\r\n                    e.itemData = row && row.data;\r\n                    var isDataRow = row && \"data\" === row.rowType;\r\n                    e.cancel = !allowReordering || !isDataRow;\r\n                    null === (_rowDragging$onDragSt = rowDragging.onDragStart) || void 0 === _rowDragging$onDragSt ? void 0 : _rowDragging$onDragSt.call(rowDragging, e)\r\n                },\r\n                onDragEnter: () => {\r\n                    togglePointerEventsStyle(true)\r\n                },\r\n                onDragLeave: () => {\r\n                    togglePointerEventsStyle(false)\r\n                },\r\n                onDragEnd: e => {\r\n                    var _rowDragging$onDragEn;\r\n                    togglePointerEventsStyle(false);\r\n                    null === (_rowDragging$onDragEn = rowDragging.onDragEnd) || void 0 === _rowDragging$onDragEn ? void 0 : _rowDragging$onDragEn.call(rowDragging, e)\r\n                },\r\n                onAdd: e => {\r\n                    var _rowDragging$onAdd;\r\n                    togglePointerEventsStyle(false);\r\n                    null === (_rowDragging$onAdd = rowDragging.onAdd) || void 0 === _rowDragging$onAdd ? void 0 : _rowDragging$onAdd.call(rowDragging, e)\r\n                },\r\n                dropFeedbackMode: rowDragging.dropFeedbackMode,\r\n                onOptionChanged: e => {\r\n                    var hasFixedSortable = this[sortableFixedName];\r\n                    if (hasFixedSortable) {\r\n                        if (\"fromIndex\" === e.name || \"toIndex\" === e.name) {\r\n                            this[anotherSortableName].option(e.name, e.value)\r\n                        }\r\n                    }\r\n                }\r\n            }));\r\n            $content.toggleClass(\"dx-scrollable-container\", isFixedTableRendering);\r\n            $content.toggleClass(SORTABLE_WITHOUT_HANDLE_CLASS, allowReordering && !rowDragging.showDragIcons)\r\n        }\r\n        return $content\r\n    },\r\n    _renderCore(e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (e && \"update\" === e.changeType && e.repaintChangesOnly && gridCoreUtils.isVirtualRowRendering(this)) {\r\n            deferUpdate(() => {\r\n                this._updateSortable()\r\n            })\r\n        }\r\n    },\r\n    _updateSortable() {\r\n        var offset = this._dataController.getRowIndexOffset();\r\n        [this._sortable, this._sortableFixed].forEach(sortable => {\r\n            null === sortable || void 0 === sortable ? void 0 : sortable.option(\"offset\", offset);\r\n            null === sortable || void 0 === sortable ? void 0 : sortable.update()\r\n        })\r\n    },\r\n    _resizeCore: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._updateSortable()\r\n    },\r\n    _getDraggableGridOptions: function(options) {\r\n        var gridOptions = this.option();\r\n        var columns = this.getColumns();\r\n        var $rowElement = $(this.getRowElement(options.rowIndex));\r\n        return {\r\n            dataSource: [{\r\n                id: 1,\r\n                parentId: 0\r\n            }],\r\n            showBorders: true,\r\n            showColumnHeaders: false,\r\n            scrolling: {\r\n                useNative: false,\r\n                showScrollbar: \"never\"\r\n            },\r\n            pager: {\r\n                visible: false\r\n            },\r\n            loadingTimeout: null,\r\n            columnFixing: gridOptions.columnFixing,\r\n            columnAutoWidth: gridOptions.columnAutoWidth,\r\n            showColumnLines: gridOptions.showColumnLines,\r\n            columns: columns.map(column => ({\r\n                width: column.width || column.visibleWidth,\r\n                fixed: column.fixed,\r\n                fixedPosition: column.fixedPosition\r\n            })),\r\n            onRowPrepared: e => {\r\n                var rowsView = e.component.getView(\"rowsView\");\r\n                $(e.rowElement).replaceWith($rowElement.eq(rowsView._isFixedTableRendering ? 1 : 0).clone())\r\n            }\r\n        }\r\n    },\r\n    _getDraggableRowTemplate: function() {\r\n        return options => {\r\n            var $rootElement = this.component.$element();\r\n            var $dataGridContainer = $(\"<div>\");\r\n            setWidth($dataGridContainer, getWidth($rootElement));\r\n            var items = this._dataController.items();\r\n            var row = items && items[options.fromIndex];\r\n            var gridOptions = this._getDraggableGridOptions(row);\r\n            this._createComponent($dataGridContainer, this.component.NAME, gridOptions);\r\n            $dataGridContainer.find(\".dx-gridbase-container\").children(\":not(.\".concat(this.addWidgetPrefix(ROWS_VIEW), \")\")).hide();\r\n            return $dataGridContainer\r\n        }\r\n    },\r\n    _getHandleTemplate: function() {\r\n        return (container, options) => {\r\n            if (\"data\" === options.rowType) {\r\n                $(container).addClass(CELL_FOCUS_DISABLED_CLASS);\r\n                return $(\"<span>\").addClass(this.addWidgetPrefix(HANDLE_ICON_CLASS))\r\n            } else {\r\n                gridCoreUtils.setEmptyText($(container))\r\n            }\r\n        }\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"rowDragging\" === args.name) {\r\n            this._updateHandleColumn();\r\n            this._invalidate(true, true);\r\n            args.handled = true\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    }\r\n};\r\nexport var rowDraggingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            rowDragging: {\r\n                showDragIcons: true,\r\n                dropFeedbackMode: \"indicate\",\r\n                allowReordering: false,\r\n                allowDropInsideItem: false\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: RowDraggingExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.row_dragging.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    rowDraggingModule\r\n} from \"../grid_core/ui.grid_core.row_dragging\";\r\ngridCore.registerModule(\"rowDragging\", rowDraggingModule);\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport DataGrid from \"./ui.data_grid.base\";\r\nexport default DataGrid;\r\nimport \"./ui.data_grid.state_storing\";\r\nimport \"./ui.data_grid.selection\";\r\nimport \"./ui.data_grid.column_chooser\";\r\nimport \"./ui.data_grid.grouping\";\r\nimport \"./ui.data_grid.master_detail\";\r\nimport \"./ui.data_grid.editing\";\r\nimport \"./ui.data_grid.editing_row_based\";\r\nimport \"./ui.data_grid.editing_form_based\";\r\nimport \"./ui.data_grid.editing_cell_based\";\r\nimport \"./ui.data_grid.validating\";\r\nimport \"./ui.data_grid.virtual_scrolling\";\r\nimport \"./ui.data_grid.filter_row\";\r\nimport \"./ui.data_grid.header_filter\";\r\nimport \"./ui.data_grid.filter_sync\";\r\nimport \"./ui.data_grid.filter_builder\";\r\nimport \"./ui.data_grid.filter_panel\";\r\nimport \"./ui.data_grid.search\";\r\nimport \"./ui.data_grid.pager\";\r\nimport \"./ui.data_grid.columns_resizing_reordering\";\r\nimport \"./ui.data_grid.keyboard_navigation\";\r\nimport \"./ui.data_grid.summary\";\r\nimport \"./ui.data_grid.column_fixing\";\r\nimport \"./ui.data_grid.adaptivity\";\r\nimport \"./ui.data_grid.virtual_columns\";\r\nimport \"./ui.data_grid.export\";\r\nimport \"./ui.data_grid.focus\";\r\nimport \"./ui.data_grid.row_dragging\";\r\n","/**\r\n * DevExtreme (esm/ui/data_grid.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport DataGrid from \"./data_grid/ui.data_grid\";\r\nexport default DataGrid;\r\n"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","DxLookup","DxLoadPanel","DxLabel","DxKeyboardNavigation","DxItem","DxHide","DxHeaderFilter","DxGroupPanel","DxGroupOperationDescriptions","DxGroupItem","DxGroupingTexts","DxGrouping","DxFrom","DxFormItem","DxFormat","DxForm","DxFilterRow","DxFilterPanelTexts","DxFilterPanel","DxFilterOperationDescriptions","DxFilterBuilderPopup","DxFilterBuilder","DxFieldLookup","DxField","DxExportTexts","DxExport","DxEmailRule","DxEditingTexts","DxEditing","DxDataGridHeaderFilterTexts","DxDataGridHeaderFilter","DxCustomRule","DxCustomOperation","DxCursorOffset","DxCompareRule","DxColumnLookup","DxColumnHeaderFilter","DxColumnFixingTexts","DxColumnFixing","DxColumnChooser","DxColumn","DxCollision","DxColCountByScreen","DxChange","DxButton","DxBoundaryOffset","DxAt","DxAsyncRule","DxAnimation","DxDataGrid","DxValueFormat","DxValidationRule","DxTotalItem","DxToolbarItem","DxToolbar","DxTo","DxTexts","DxSummaryTexts","DxSummary","DxStringLengthRule","DxStateStoring","DxSorting","DxSortByGroupSummaryInfo","DxShow","DxSelection","DxSearchPanel","DxScrolling","DxRowDragging","DxRequiredRule","DxRemoteOperations","DxRangeRule","DxPosition","DxPopup","DxPatternRule","DxPaging","DxPager","DxOperationDescriptions","DxOffset","DxNumericRule","DxMy","DxMasterDetail","data_grid_1","require","index_1","index_2","createComponent","props","accessKey","String","activeStateEnabled","Boolean","allowColumnReordering","allowColumnResizing","autoNavigateToFocusedRow","cacheEnabled","cellHintEnabled","columnAutoWidth","columnChooser","columnFixing","columnHidingEnabled","columnMinWidth","Number","columnResizingMode","columns","Array","columnWidth","customizeColumns","Function","customizeExportData","dataRowTemplate","dataSource","dateSerializationFormat","disabled","editing","elementAttr","errorRowEnabled","export","filterBuilder","filterBuilderPopup","filterPanel","filterRow","filterSyncEnabled","filterValue","focusedColumnIndex","focusedRowEnabled","focusedRowIndex","focusedRowKey","focusStateEnabled","grouping","groupPanel","headerFilter","height","highlightChanges","hint","hoverStateEnabled","keyboardNavigation","keyExpr","loadPanel","masterDetail","noDataText","onAdaptiveDetailRowPreparing","onCellClick","onCellDblClick","onCellHoverChanged","onCellPrepared","onContentReady","onContextMenuPreparing","onDataErrorOccurred","onDisposing","onEditCanceled","onEditCanceling","onEditingStart","onEditorPrepared","onEditorPreparing","onExported","onExporting","onFileSaving","onFocusedCellChanged","onFocusedCellChanging","onFocusedRowChanged","onFocusedRowChanging","onInitialized","onInitNewRow","onKeyDown","onOptionChanged","onRowClick","onRowCollapsed","onRowCollapsing","onRowDblClick","onRowExpanded","onRowExpanding","onRowInserted","onRowInserting","onRowPrepared","onRowRemoved","onRowRemoving","onRowUpdated","onRowUpdating","onRowValidating","onSaved","onSaving","onSelectionChanged","onToolbarPreparing","pager","paging","remoteOperations","renderAsync","repaintChangesOnly","rowAlternationEnabled","rowDragging","rowTemplate","rtlEnabled","scrolling","searchPanel","selectedRowKeys","selection","selectionFilter","showBorders","showColumnHeaders","showColumnLines","showRowLines","sortByGroupSummaryInfo","sorting","stateStoring","summary","tabIndex","toolbar","twoWayBindingEnabled","visible","width","wordWrapEnabled","emits","computed","instance","$_instance","beforeCreate","$_WidgetClass","default","$_hasAsyncTemplate","$_expectedChildren","column","isCollectionItem","optionName","dataGridHeaderFilter","createConfigurationComponent","hide","show","$_optionName","ignoreEmptyValue","message","reevaluate","type","validationCallback","$_isCollectionItem","$_predefinedProps","x","y","cssClass","icon","name","onClick","template","text","data","insertAfterKey","insertBeforeKey","lg","md","sm","xs","alignment","allowEditing","allowExporting","allowFiltering","allowFixing","allowGrouping","allowHeaderFiltering","allowHiding","allowReordering","allowResizing","allowSearch","allowSorting","autoExpandGroup","buttons","calculateCellValue","calculateDisplayValue","calculateFilterExpression","calculateGroupValue","calculateSortValue","caption","cellTemplate","customizeText","dataField","dataType","editCellTemplate","editorOptions","encodeHtml","falseText","filterOperations","filterType","filterValues","fixed","fixedPosition","format","formItem","groupCellTemplate","grouped","groupIndex","headerCellTemplate","hidingPriority","isBand","lookup","minWidth","ownerBand","resized","selectedFilterOperation","setCellValue","showEditorAlways","showInColumnChooser","showWhenGrouped","sortIndex","sortingMethod","sortOrder","trueText","validationRules","visibleIndex","AsyncRule","button","columnHeaderFilter","columnLookup","CompareRule","CustomRule","EmailRule","NumericRule","PatternRule","RangeRule","RequiredRule","StringLengthRule","validationRule","emptyPanelText","enabled","mode","searchTimeout","title","texts","columnFixingTexts","fix","leftPosition","rightPosition","unfix","groupInterval","searchMode","allowClearing","displayExpr","valueExpr","comparisonTarget","comparisonType","dataTypes","editorTemplate","hasValue","dataGridHeaderFilterTexts","cancel","emptyValue","ok","allowAdding","allowDeleting","allowUpdating","changes","confirmDelete","editColumnName","editRowKey","form","newRowPosition","popup","refreshMode","selectTextOnEditStart","startEditAction","useIcons","change","editingTexts","addRow","cancelAllChanges","cancelRowChanges","confirmDeleteMessage","confirmDeleteTitle","deleteRow","editRow","saveAllChanges","saveRowChanges","undeleteRow","validationCancelChanges","allowExportSelectedData","customizeExcelCell","excelFilterEnabled","excelWrapTextEnabled","fileName","ignoreExcelErrors","proxyUrl","exportTexts","exportAll","exportSelectedRows","exportTo","defaultFilterOperation","fieldLookup","allowHierarchicalFields","bindingOptions","customOperations","fields","filterOperationDescriptions","groupOperationDescriptions","groupOperations","maxGroupLevel","onFocusIn","onFocusOut","onValueChanged","customOperation","field","animation","closeOnOutsideClick","container","contentTemplate","copyRootClassesToWrapper","deferRendering","dragAndResizeArea","dragEnabled","dragOutsideBoundary","fullScreen","hideOnParentScroll","maxHeight","maxWidth","minHeight","onHidden","onHiding","onResize","onResizeEnd","onResizeStart","onShowing","onShown","onTitleRendered","position","resizeEnabled","restorePosition","shading","shadingColor","showCloseButton","showTitle","titleTemplate","toolbarItems","wrapperAttr","between","contains","endsWith","equal","greaterThan","greaterThanOrEqual","isBlank","isNotBlank","lessThan","lessThanOrEqual","notContains","notEqual","startsWith","filterEnabled","filterPanelTexts","clearFilter","createFilter","filterEnabledHint","applyFilter","applyFilterText","betweenEndText","betweenStartText","operationDescriptions","resetOperationText","showAllText","showOperationChooser","alignItemLabels","alignItemLabelsInAllGroups","colCount","colCountByScreen","customizeItem","formData","items","labelLocation","labelMode","minColWidth","onEditorEnterKey","onFieldDataChanged","optionalMark","readOnly","requiredMark","requiredMessage","screenByWidth","scrollingEnabled","showColonAfterLabel","showOptionalMark","showRequiredMark","showValidationSummary","validationGroup","currency","formatter","parser","precision","colSpan","editorType","helpText","isRequired","itemType","label","left","opacity","scale","top","allowCollapsing","autoExpandAll","contextMenuEnabled","expandMode","groupingTexts","groupByThisColumn","groupContinuedMessage","groupContinuesMessage","ungroup","ungroupAll","alignByColumn","displayFormat","showInColumn","showInGroupFooter","skipEmptyValues","summaryType","valueFormat","and","notAnd","notOr","or","allowColumnDragging","complete","delay","direction","duration","easing","from","staggerDelay","start","to","html","locateInMenu","location","menuItemTemplate","options","showText","widget","editOnKeyPress","enterKeyAction","enterKeyDirection","showColon","indicatorSrc","showIndicator","showPane","allowedPageSizes","displayMode","infoText","showInfo","showNavigationButtons","showPageSizeSelector","pageIndex","pageSize","pattern","toolbarItem","at","boundary","boundaryOffset","collision","my","of","offset","max","min","filtering","groupPaging","trim","allowDropInsideItem","autoScroll","cursorOffset","dragDirection","dragTemplate","dropFeedbackMode","filter","group","handle","onAdd","onDragChange","onDragEnd","onDragMove","onDragStart","onRemove","onReorder","scrollSensitivity","scrollSpeed","showDragIcons","columnRenderingMode","preloadEnabled","rowRenderingMode","scrollByContent","scrollByThumb","showScrollbar","useNative","highlightCaseSensitive","highlightSearchText","placeholder","searchVisibleColumnsOnly","allowSelectAll","deferred","maxFilterLengthInRequest","selectAllMode","showCheckBoxesMode","groupColumn","summaryItem","ascendingText","clearText","descendingText","showSortIndexes","customLoad","customSave","savingTimeout","storageKey","calculateCustomSummary","groupItems","recalculateWhileEditing","totalItems","groupItem","summaryTexts","totalItem","avg","avgOtherColumn","count","maxOtherColumn","minOtherColumn","sum","sumOtherColumn","item","DEFAULT_DATE_INTERVAL","DEFAULT_DATETIME_INTERVAL","isDateType","getGroupInterval","index","result","dateIntervals","interval","inArray","slice","push","isDefined","isArray","getFilterSelector","target","selector","displayField","getFilterExpressionByRange","endFilterValue","startFilterExpression","endFilterExpression","date","getHours","getMinutes","getSeconds","getMilliseconds","Date","getTime","setDate","getDate","getFilterExpressionForDate","dateStart","dateEnd","dateInterval","values","dateValue","isDate","getFullYear","getMonth","map","split","length","getFilterExpressionForNumber","startFilterValue","condition","defaultCalculateFilterExpression","isSearchByDisplayValue","apply","arguments","DATAGRID_SELECTION_DISABLED_CLASS","DATAGRID_GROUP_OPENED_CLASS","DATAGRID_GROUP_CLOSED_CLASS","DATAGRID_EXPAND_CLASS","NO_DATA_CLASS","SCROLLING_MODE_INFINITE","SCROLLING_MODE_VIRTUAL","LEGACY_SCROLLING_MODE","SCROLLING_MODE_OPTION","ROW_RENDERING_MODE_OPTION","DATE_INTERVAL_SELECTORS","year","month","day","quarter","Math","floor","hour","minute","second","getIntervalSelector","nameIntervalSelector","equalSelectors","selector1","selector2","isFunction","originalCallback","columnIndex","setEmptyText","$container","get","textContent","normalizeSortingInfo","sort","normalizeSortingInfoUtility","i","isExpanded","formatValue","valueText","formatHelper","toString","formatObject","getDisplayFormat","call","getSummaryText","columnCaption","getWidgetInstance","$element","editorData","dxComponents","widgetName","equalFilterParameters","filter1","filter2","toComparable","renderNoDataText","element","noDataClass","addWidgetPrefix","noDataElement","find","last","isVisible","_dataController","isEmpty","isLoading","$","addClass","appendTo","removeClass","_getNoDataText","renderLoadPanel","isLocalStore","loadPanelOptions","_loadPanel","remove","option","extend","_createComponent","LoadPanel","calculateLoadPanelPosition","$window","getWindow","getHeight","getIndexByKey","key","keyName","equalByValue","combineFilters","filters","operation","resultFilter","_filters$i","checkChanges","changeNames","changesWithChangeNamesCount","proxyMethod","methodName","defaultResult","_dataSource","getFormatOptionsByColumn","getDisplayValue","rowType","displayValueMap","getGroupRowSummaryText","summaryItems","getFormatByDataType","getHeaderFilterGroupParameters","remoteGrouping","sharedFiltering","each","bind","compare","equalSortParameters","sortParameters1","sortParameters2","ignoreIsExpanded","desc","getPointsByColumns","pointCreated","isVertical","startColumnIndex","cellsLength","notCreatePoint","eq","css","point","getBoundingRect","prevItemOffset","getExpandCellTemplate","allowRenderToDetachedContainer","render","isContinuation","row","isNewRow","rowsView","component","getView","setAria","localize","getSelectionRange","focusedElement","selectionStart","selectionEnd","e","setSelectionRange","selectionRange","focusAndSelectElement","isFocused","is","eventsEngine","isSelectTextOnEditingStart","editor","closest","when","_loadItemDeferred","done","select","getLastResizableColumnIndex","resultWidths","lastColumnIndex","hasResizableColumns","some","command","isElementInCurrentGrid","controller","$grid","getWidgetContainerClass","parent","isVirtualRowRendering","that","isVirtualMode","isAppendMode","getPixelRatio","window","devicePixelRatio","getContentHeightLimit","browser","mozilla","WIDGET_WITH_LEGACY_CONTAINER_NAME","ModuleItem","Class","_endUpdateCore","ctor","_updateLockCount","_actions","_actionConfigs","callbackNames","flags","callbackFlags","unique","syncStrategy","Callbacks","init","publicMethods","beginUpdate","endUpdate","optionCache","_optionCache","_silentOption","_setOptionWithoutOptionChange","messageLocalization","on","off","optionChanged","args","createAction","handled","getAction","actionName","$target","prefix","setAttribute","attr","getController","_controllers","config","action","_createAction","event","_createActionByOption","executeAction","dispose","empty","className","componentName","NAME","toLowerCase","containerName","Controller","ViewController","inherit","_views","getViews","View","_isReady","isReady","callBase","_requireReady","_requireRender","_requireResize","_$parent","_invalidate","requireResize","requireReady","hasWindow","_renderCore","_resizeCore","_parentElement","renderCompleted","resizeCompleted","_$element","getElementHeight","marginTop","parseFloat","marginBottom","offsetHeight","getTemplate","_getTemplate","$parent","toggleClass","fire","resize","isResizing","focus","MODULES_ORDER_MAX_INDEX","processModules","componentClass","modules","modulesOrder","controllerTypes","viewTypes","module1","module2","orderIndex1","orderIndex2","controllers","moduleName","views","errors","subclassOf","extenders","extender","createModuleItems","moduleTypes","moduleItems","moduleType","moduleItem","callModuleItemsMethod","registerModule","module","registerModulesOrder","moduleNames","unregisterModule","grep","_extends","gridCoreUtils","COLUMN_INDICATORS_CLASS","GROUP_PANEL_ITEM_CLASS","_applyColumnState","_that$component","columnAlignment","_getColumnAlignment","parameters","isGroupPanelItem","rootElement","hasClass","$indicatorsContainer","_createIndicatorContainer","$span","_getIndicatorClassName","columnsController","indicatorAlignment","getHeaderContentAlignment","indicator","_renderIndicator","noop","getDefaultAlignment","ignoreIndicatorAlignment","_getIndicatorContainer","$cell","_getIndicatorElements","$indicatorContainer","children","$indicator","append","_updateIndicators","indicatorName","getColumns","$cells","getColumnElements","_updateIndicator","rowOptions","cells","SCROLL_CONTAINER_CLASS","SCROLLABLE_SIMULATED_CLASS","GROUP_SPACE_CLASS","CONTENT_CLASS","TABLE_CLASS","TABLE_FIXED_CLASS","CONTENT_FIXED_CLASS","ROW_CLASS","GROUP_ROW_CLASS","DETAIL_ROW_CLASS","FILTER_ROW_CLASS","ERROR_ROW_CLASS","CELL_UPDATED_ANIMATION_CLASS","HIDDEN_COLUMNS_WIDTH","CELL_HINT_VISIBLE","FORM_FIELD_ITEM_CONTENT_CLASS","appendElementTemplate","content","subscribeToRowEvents","$table","touchTarget","touchCurrentTarget","timeoutId","clearTouchTargets","timeout","setTimeout","clearTimeout","currentTarget","clickEventName","dblclickEvent","pointerEvents","join","_isNativeClick","rowIndex","getRowIndex","rowElement","getPublicElement","_rowPointerDown","_rowClick","_rowDblClick","getWidthStyle","isNumeric","setCellWidth","cell","style","copyAttributes","newElement","oldAttributes","attributes","newAttributes","nodeName","hasAttribute","removeAttribute","nodeValue","ColumnsView","columnStateMixin","_createScrollableOptions","scrollingOptions","useNativeScrolling","bounceEnabled","useKeyboard","useSimulatedScrollbar","_updateCell","_cellPrepared","_createCell","domAdapter","textAlign","headerId","colspan","visibleWidth","_createRow","rowObject","tagName","concat","_isAltRow","dataIndex","_createTable","isAppend","_createColGroup","ctrlKey","preventDefault","$row","isDataRow","isHeaderRow","isGroupRow","isMasterDetailRow","isFilterRow","visibleColumns","_columnsController","getVisibleColumns","cellOptions","removeAttr","difference","scrollWidth","clientWidth","getOptions","$fieldItemContent","delegateTarget","resultOptions","cellElement","eventType","formItemOptions","getVisibleIndex","colgroupElement","j","_createCol","col","setWidth","renderDelayedTemplates","delayedTemplates","_delayedTemplates","syncTemplates","async","asyncTemplates","_renderDelayedTemplatesCore","_renderDelayedTemplatesCoreAsync","templates","isAsync","templateParameters","shift","doc","_processTemplate","renderingTemplate","isRenderer","model","resolve","renderedTemplate","nodeType","templateID","isString","_templatesCache","renderTemplate","templateDeferred","Deferred","templateOptions","onRendered","templateDeferreds","reject","promise","_getBodies","tableElement","not","_wrapRowIfNeed","hasDataRowTemplate","$tBodies","_tableElement","$tbody","_appendRow","appendTemplate","scrollLeft","_scrollLeft","scrollTo","$root","_renderTable","changeType","_renderRows","rows","_getRows","columnIndices","changeTypes","_renderRow","$wrappedRow","_renderCells","_addWatchMethod","_rowPrepared","_needRenderCell","indexOf","_renderCell","oldValue","oldValues","_updateCells","$rowElement","$newRowElement","$newCells","cellUpdatedClass","forEach","$newCell","replaceWith","_setCellAriaAttributes","columnIndexOffset","getColumnIndexOffset","ariaColIndex","_getCellOptions","_renderCellContent","appendChild","_getCellTemplate","isAltRow","source","watchers","watch","getter","updateValueFunc","updateRowFunc","watcher","newValue","JSON","stringify","splice","update","keepRow","elementData","_columnOptionChanged","optionNames","widths","iteratorUtils","setColumnWidths","getCellIndex","cellIndex","getTableElements","getTableElement","setTableElement","excludeValidators","category","afterExecute","_afterRowPrepared","columnsChanged","add","changed","_handleDataChanged","_updateScrollLeftPosition","pos","$scrollContainer","_wrapTableInScrollContainer","nativeScrolling","scrollChanged","_updateContent","$newTableElement","_findContentElement","_getWidths","$cellElements","offsetWidth","getBoundingClientRect","clientRect","getColumnWidths","$tableElement","$rows","isRowVisible","display","getVisibleColumnIndex","_ref","$cols","classList","querySelector","toFixed","getCellElements","_getCellElementsCore","_getRowElements","_getCellElement","columnIdentifier","columnVisibleIndex","_getVisibleColumnIndex","_getRowElement","$tableElements","_","getCellElement","getRowElement","elements","columnOption","getCell","cellPosition","getRowsCount","_getRowElementsCore","hasRowTemplate","tBodies","getName","setScrollerSpacing","paddingLeft","paddingRight","isScrollbarVisible","isHorizontal","getOuterWidth","getWidth","getOuterHeight","FOCUS_STATE_CLASS","FOCUS_DISABLED_CLASS","FOCUSED_ROW_SELECTOR","GRID_ROW_SELECTOR","GRID_CELL_SELECTOR","TREELIST_ROW_SELECTOR","TREELIST_CELL_SELECTOR","viewItemSelectorMap","columnHeaders","footer","isMouseDown","isHiddenFocusing","focusedElementInfo","processKeyDown","viewName","$mainElement","executeKeyDown","isHandled","fireKeyDownEvent","originalEvent","normalizeKeyName","saveFocusedElementInfo","selectView","ariaLabel","$activeElements","getActiveAccessibleElements","targetIndex","viewInstance","viewElement","$viewElement","findFocusedViewElement","viewSelectors","$focusViewElement","first","onDocumentVisibilityChange","visibilityState","subscribeVisibilityChange","unsubscribeVisibilityChange","hiddenFocus","registerKeyboardAction","getMainElement","keyDownHandler","mouseDownHandler","focusinHandler","needShowOverlay","restoreFocus","$targetElement","viewNames","keys","viewItemIndex","_viewName","setTabIndex","keyboardController","isKeyboardEnabled","accessibility","CELL_CONTENT_CLASS","HEADERS_CLASS","NOWRAP_CLASS","ROW_CLASS_SELECTOR","HEADER_ROW_CLASS","COLUMN_LINES_CLASS","CONTEXT_MENU_SORT_ASC_ICON","CONTEXT_MENU_SORT_DESC_ICON","CONTEXT_MENU_SORT_NONE_ICON","CELL_FOCUS_DISABLED_CLASS","VISIBILITY_HIDDEN_CLASS","TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX","SORT_INDICATOR_CLASS","SORT_INDEX_INDICATOR_CLASS","HEADER_FILTER_CLASS_SELECTOR","HEADER_FILTER_INDICATOR_CLASS","MULTI_ROW_HEADER_CLASS","columnHeadersModule","defaultOptions","columnHeadersView","createCellContent","$cellContent","addCssClassesToCellContent","contentAlignment","$indicatorElements","$visibleIndicatorElements","indicatorCount","sortIndicatorClassName","sortIndexIndicatorClassName","$sortIndicator","$sortIndexIndicator","shiftKey","_isLegacyKeyboardNavigation","_getDefaultTemplate","$content","_getHeaderTemplate","resultTemplate","_isGroupingChanged","_handleActionKeyDown","_lastActionElement","headerFilterController","$column","getColumnIndexByElement","showHeaderFilterMenu","_processHeaderAction","isLoaded","_hasRowElements","getRowCount","_getRowVisibleColumns","$cellElement","rowspan","rowCount","groupExpanding","_isElementVisible","elementOptions","_alignCaptionByCenter","clone","insertBefore","$indicatorElement","returnAll","_isSortableElement","getHeadersRowHeight","$headerRows","toArray","reduce","headerRow","getHeaderElement","columnElements","bandColumnIndex","getChildrenByBandColumn","$columnElements","allowDragging","sourceLocation","draggingPanels","draggableColumnCount","canHideColumn","allowDrag","isColumnOptionUsed","draggingPanel","getColumnCount","getContextMenuItems","sortingOptions","onItemClick","params","changeSortOrder","itemData","setRowsOpacity","columnID","setColumnOpacity","gridCore","USER_STATE_FIELD_NAMES_15_1","USER_STATE_FIELD_NAMES","IGNORE_COLUMN_OPTION_NAMES","bestFitWidth","bufferedFilterValue","COMMAND_EXPAND_CLASS","MAX_SAFE_INTEGER","GROUP_COMMAND_COLUMN_NAME","regExp","globalColumnId","columnsControllerModule","commonColumnSettings","adaptColumnWidthByRatio","regenerateColumnsByVisibleItems","DEFAULT_COLUMN_OPTIONS","DATATYPE_OPERATIONS","number","string","datetime","COLUMN_INDEX_OPTIONS","setFilterOperationsAsDefaultValues","defaultFilterOperations","createColumn","columnOptions","userStateColumnOptions","bandColumn","commonColumnOptions","setName","deepExtendArraySafe","getCommonSettings","calculatedColumnOptions","_createCalculatedColumnOptions","createColumnsFromOptions","columnsOptions","_columnsUserState","checkUserStateColumn","hasColumns","getParentBandColumns","columnParentByIndex","unshift","_getChildrenByBandColumn","columnChildrenByIndex","recursive","getColumnFullPath","bandColumnsCache","getBandColumnsCache","callbackFilter","isPlain","_columns","calculateColspan","getValueDataType","getSerializationFormat","dateSerialization","updateSerializers","deserializeValue","serializeValue","serializationFormat","parsedValue","isNaN","customizeTextForBooleanDataType","getCustomizeTextByDataType","updateColumnIndexes","isObject","_commandColumns","updateColumnGroupIndexes","currentColumn","normalizeIndexes","getColumnIndexByVisibleIndex","getGroupColumns","getChooserColumns","userStateColumn","applyUserState","userStateColumnIndex","columnsUserState","ignoreColumnOptionNames","_ignoreColumnOptionNames","columnCountById","resultColumns","allColumnsHaveState","userStateColumnIndexes","applyFieldsState","fieldName","defaultSelectedFilterOperation","findUserStateColumn","id","_hasUserState","initialIndex","hasAddedBands","columnUserState","added","assignColumns","updateIndexes","isSortOrderValid","resetBandColumnsCache","bandColumns","parentBandColumns","resetColumnsCache","updateColumnDataTypes","updateColumnChanges","columnChanges","_columnChanges","fireColumnsChanged","onColumnsChanging","reinitOptionNames","isInitialized","reinit","updateSortOrderWhenGrouping","prevGroupIndex","columnWasGrouped","lastSortOrder","sortMode","sortedByAnotherColumn","fireOptionChanged","prevValue","fullOptionName","fullOptionPath","_skipProcessingColumnsChange","_notifyOptionChanged","columnOptionCore","notFireEvent","initialColumn","optionGetter","compileGetter","functionsAsIs","optionSetter","compileSetter","_checkColumns","getColumnByPath","defaultSetCellValue","path","dotCount","isCustomCommandColumn","commandColumn","getFixedPosition","processExpandColumns","expandColumns","customColumnIndex","expandColumnsByType","expandColumn","numberToString","digitsCount","str","mergeColumns","commandColumns","needToExtend","commandColumnIndex","isColumnFixing","_isColumnFixing","defaultCommandColumns","getCommandColumnIndex","columnType","isColumnFixed","_bandColumnsCache","findColumn","identifier","identifierOptionName","substr","_getExpandColumnOptions","_getFirstItems","groupsCount","getFirstItemsCore","childItems","collapsedItems","_isColumnsFromOptions","addCommandColumn","_dataSourceApplied","applyDataSource","columnIndexes","replace","parseInt","needUpdateRequireResize","previousValue","fullName","_updateRequireResize","columnOptionValue","columnOptionName","forceApplying","isDataSourceLoaded","_dataSourceColumnsCount","columnsFromDataSource","firstItems","processedFields","variableWrapper","updateColumns","isAllDataTypesDefined","reset","_visibleColumns","_fixedColumns","_rowCount","getUserState","isDataSourceApplied","groupingOptions","groupPanelOptions","checkSerializers","defaultCalculateCellValue","isBandColumnsUsed","_getVisibleColumnsCore","getFixedColumns","_getFixedColumnsCore","getFilteringColumns","notFixedColumnCount","transparentColumnIndex","lastFixedPosition","transparentColumn","transparentColspan","prevColumn","newColumn","_getExpandColumnsCore","getExpandColumns","firstGroupColumn","isFixedFirstGroupColumn","parentIndex","_isColumnVisible","isParentColumnVisible","isFixedToEnd","rowspanGroupColumns","rowspanExpandColumns","positiveIndexedColumns","negativeIndexedColumns","notGroupedColumnsCount","columnDigitsCount","indexedColumns","orderEach","firstPositiveIndexColumn","columnsByFixing","columnsByVisibleIndex","getDataColumns","bandColumnID","getInvisibleColumns","hiddenColumnsByBand","getAllColumns","columnChooserColumns","sign","column1","column2","caption1","caption2","localeCompare","allowMoveColumn","fromVisibleIndex","toVisibleIndex","targetLocation","sourceColumn","moveColumn","targetGroupIndex","fromIndex","toIndex","groupColumns","targetColumn","sortingMode","needResetSorting","getSortDataSourceParameters","useLocalSelector","sortColumns","sortItem","getGroupDataSourceParameters","refresh","updateNewLookupsOnly","deferreds","valueMap","_updateColumnOptions","calculateCallbackName","calculateCallback","context","isRTL","isColumnDataTypesUpdated","lookupDataType","valueDataType","_customizeColumns","hasOwnerBand","updateSortingGrouping","sortParameters","groupParameters","filterParameters","lastLoadOptions","always","_updateChanges","dataController","getCombinedFilter","fromDataSource","isColumnsChanged","updateSortGroupParameterIndexes","indexParameterName","columnsGroupParameters","columnsSortParameters","groupingChanged","groupExpandingChanged","updateFilter","remoteFiltering","forceIsoDateParsing","columnCount","clearSorting","clearGrouping","getVisibleIndexByColumn","visibleColumn","addColumn","deleteColumn","childIndexes","handleStateField","setUserState","state","isFilterPanelHidden","usedNames","hasEditableColumnWithoutName","duplicatedNames","_column$columns","isEditable","captionize","skipDeserialization","parseValue","numberLocalization","formattedValue","formattedValueWithDefaultFormat","dateLocalization","filterUtils","createFilterExpression","userDataType","updateValueMap","calculateValue","displayValue","isPlainObject","Store","dataSourceOptions","normalizeDataSourceOptions","paginate","DataSource","load","resizedCallbacks","defaultOptionName","charAt","toUpperCase","parents","invisibleParents","alwaysGetRowIndex","onlyVisibleDirectChildren","isParentBandColumn","getColumnId","cloneItems","groupCount","calculateOperationTypes","loadOptions","isFullReload","operationTypes","reload","fullReload","groupExpand","skip","take","getPageDataFromCache","updatePaging","storeLoadOptions","fillItemsFromCache","cacheItemsFromBegin","cacheItemBeginCount","cacheItemsFromEnd","_options$skip2","_options$take2","cacheItemEndCount","cachedDataPartBegin","cachedDataPartEnd","reverse","fromEnd","_options$take","_options$cachedData","cachedItems","cachedData","_ref2","_options$skip","localIndex","cacheItemIndex","cacheItem","getItemFromCache","skips","takes","getGroupItemFromCache","isContinuationOnNextPage","childCacheItem","getCacheItem","loadedItem","globalIndex","childSkips","_remoteOperations","_isLastPage","isLastPage","_hasLastPage","_currentTotalCount","_cachedData","_lastOperationTypes","_eventsStrategy","_totalCountCorrection","_isLoadingAll","loadingChanged","loadError","customizeStoreLoadOptions","changing","pushed","_dataChangedHandler","_customizeStoreLoadOptionsHandler","_handleCustomizeStoreLoadOptions","_dataLoadedHandler","_handleDataLoaded","_loadingChangedHandler","_handleLoadingChanged","_loadErrorHandler","_handleLoadError","_pushHandler","_handlePush","_changingHandler","_handleChanging","store","memberName","member","isSharedDataSource","resetCurrentTotalCount","resetCache","_cachedStoreData","_cachedPagingData","resetPagesCache","_needClearStoreDataCache","_lastLoadOptions","isLocalOperations","every","operationName","fromStore","applyBatch","keyInfo","_applyBatch","getDataIndexGetter","_dataIndexGetter","indexByKey","storeData","isCacheUpdated","getKeyHash","keyOf","_getKeyInfo","totalCount","getItemCount","itemsCount","oldItemCount","_items","useInsertIndex","_ref5","_needCleanCacheByOperation","operationType","operationTypesByOrder","operationTypeIndex","currentOperationTypes","_customizeRemoteOperations","cachedStoreData","cachedPagingData","isCustomLoading","_options$data","_handleDataLoading","originalStoreLoadOptions","_isRefreshing","isRefreshing","_loadingOperationTypes","_isRefreshed","_lastOperationId","operationId","fail","_handleDataLoadingCore","cachedExtra","extra","localLoadOptionNames","requireTotalCount","optionValue","localPaging","needCache","needPageCache","needPagingCache","needStoreCache","mergeStoreLoadData","ArrayStore","error","_handleDataLoadedCore","_ref3","_options$skip3","_ref4","_options$take3","cacheItems","_loadPageSize","currentTotalCount","isDataLoading","pageCount","_operationTypes","_scheduleCustomLoadCallbacks","_isCustomLoading","loadingOperationTypes","totalCountCorrection","totalItemsCount","ceil","hasKnownLastPage","loadFromStore","d","dataSourceLoadOptions","loadResult","_customLoadOptions","isLoadingAll","_scheduleLoadCallbacks","executeAsync","fireEvent","full","getCachedStoreData","dataSourceAdapterType","DataSourceAdapter","create","dataControllerModule","loadingTimeout","include","DataHelperMixin","changePaging","_getPagingOptionValue","_skipProcessingPagingChange","pageChanged","members","_cachedProcessedItems","_currentOperationTypes","_columnsChangedHandler","_handleColumnsChanged","_dataPushedHandler","_handleDataPushed","_isLoading","_repaintChangesOnly","_changes","dataErrorOccurred","_refreshDataSource","stopOnFalse","_this$_dataSource","isValueChanged","_array","isParasiteChange","_setPagingOptions","_useSortingGroupingFromColumns","getDataSource","returnDataField","combinedFilter","additionalFilter","_calculateAdditionalFilter","waitReady","_readyDeferred","updateItems","_storeLoadOptions$fil","_columnsUpdating","filterApplied","_applyFilter","_needApplyFilter","updateItemsHandler","virtualColumnsScrolling","isAsyncDataSourceApplying","_isDataSourceApplying","isDelayed","needApplyFilter","_isAllDataTypesDefined","_fireLoadingChanged","fireError","pagingEnabled","scrollingMode","appendMode","virtualMode","isChanged","_getSpecificDataSourceOption","_initDataSource","oldDataSource","setDataSource","_loadDataSource","_beforeProcessItems","getRowIndexDelta","_processItems","rowIndexDelta","visibleItems","lastVisibleItem","_processItem","_generateDataItem","_processDataItem","dataItem","generateDataValues","isModified","_applyChange","_applyChangeUpdate","_applyChangesOnly","_applyChangeFull","_getRowIndices","rowIndices","a","b","correctedRowIndex","allowInvisibleRowIndices","prevIndex","rowIndexCorrection","equalItems","item1","item2","strict","isEditing","oldItem","oldNextItem","newItem","newNextItem","isFullUpdate","_partialUpdateRow","_isCellChanged","oldRow","newRow","visibleRowIndex","isLiveUpdate","isCellModified","modifiedValues","_getChangedColumnIndices","_cell$column","_changedColumnIndices","changedColumnIndices","isCellChanged","_isItemEquals","_item1$data","_item2$data","_item1$data2","_item2$data2","expandedMatch","summaryCellsMatch","summaryCells","continuationMatch","newIndexByKey","getRowKey","currentItems","oldItems","findChanges","_correctRowIndices","oldRowIndexOffset","_rowIndexOffset","rowIndexOffset","getRowIndexOffset","newVisibleRowIndex","_afterProcessItems","_updateItemsCore","cachedProcessedItems","useProcessedItemsCache","loadIndex","getVisibleRows","isDataChanged","needUpdateDimensions","_needUpdateDimensions","_fireChanged","deferRender","_loadingText","_isFilterApplying","resetFilterApplying","filterExpr","prototype","filterName","clearColumnOption","searchByText","_fireDataSourceChanged","changedHandler","dataSourceChanged","_getDataSourceAdapter","_createDataSourceAdapterCore","dataSourceAdapterProvider","dataSourceAdapter","isCustomStore","CustomStore","_createDataSourceAdapter","enabledRemoteOperations","cancelAll","_isSharedDataSource","loadAll","getKeyByRowIndex","byLoaded","getRowIndexByKey","byKey","getDataByKeys","rowKeys","keyData","beginCustomLoading","messageText","endCustomLoading","changesOnly","customizeLoadResult","_disposeDataSource","repaintRows","rowIndexes","skipProcessingPagingChange","searchText","isLastPageLoaded","DataController","SORT_CLASS","SORT_NONE_CLASS","SORTUP_CLASS","SORTDOWN_CLASS","SORT_INDEX_CLASS","SORT_INDEX_ICON_CLASS","HEADERS_ACTION_CLASS","ariaSortState","isSortingAllowed","hasSeveralSortIndexes","prepend","COLUMN_HEADERS_VIEW_NAMESPACE","ColumnHeadersViewSortingExtender","sortingMixin","addNamespace","$cellElementFromEvent","editingController","editingMode","isCellEditing","isCommandKeyPressed","HeaderPanelSortingExtender","_createGroupPanelItem","$rootElement","$item","_processGroupItemAction","groupColumnIndex","sortingModule","headerPanel","ROWS_VIEW_CLASS","GROUP_CELL_CLASS","DATA_ROW_CLASS","FREE_SPACE_CLASS","ROW_LINES_CLASS","ROW_ALTERNATION_CLASS","LAST_ROW_BORDER","EMPTY_CLASS","ROW_INSERTED_ANIMATION_CLASS","LOADPANEL_HIDE_TIMEOUT","getMaxHorizontalScrollOffset","scrollable","round","rowsModule","defaultCellTemplate","isDataTextEmpty","innerHTML","_getDefaultGroupTemplate","_update","isGroup","isRowExpanded","_setAriaRowIndex","isPagerMode","arg","deep","skipImmediate","removeEvent","_renderScrollable","force","_renderLoadPanel","getScrollable","allColumnsHasWidth","_hasHeight","_renderScrollableCore","_handleScroll","isNativeScrolling","_scrollTop","scrollOffset","_scrollRight","dxScrollableOptions","scrollHandler","onScroll","_scrollable","Scrollable","_scrollableContainer","_renderContent","contentElement","newTableElement","executors","rowInsertedClass","$rowsElement","toggle","insertAfter","prependTo","_createEmptyRow","isFixed","_appendEmptyRow","$emptyRow","isTableContainer","$colgroup","_renderFreeSpaceRow","$freeSpaceRowElement","_checkRowKeys","_needUpdateRowHeight","_rowHeight","_getRowsHeight","$rowElements","_updateRowHeight","rowsHeight","_getFreeSpaceRowElements","tableElements","evaluate","expr","_getColumnsCountBeforeGroups","_getGroupCellOptions","columnsCountBeforeGroups","_renderGroupedCells","groupCellOptions","groupColumnAlignment","updateFreeSpaceRowHeight","_renderDataRowByTemplate","resizeCompletedHandler","scrollableInstance","document","_visibilityChanged","_lastColumnWidths","groupingTextsOptions","_setRowsOpacityCore","_getDevicePixelRatio","getCellOptions","getRow","itemCount","freeSpaceRowElements","isFreeSpaceRowVisible","deferUpdate","scrollbarWidth","getScrollbarWidth","elementHeightWithoutScrollbar","contentHeight","showFreeSpaceRow","borderTopWidth","heightCorrection","_getHeightCorrection","resultHeight","_updateLastRowBorder","freeSpaceRowCount","setHeight","isZoomedWebkit","isChromeLatest","hasExtraBorderTop","_fireColumnResizedCallbacks","_editorFactoryController","setLoading","contentWidth","scrollableContainer","clientHeight","lastColumnWidths","columnWidths","_updateScrollable","dxScrollable","_updateHorizontalScrollPosition","maxHorizontalScrollOffset","scrollRight","_height","hasHeight","visibilityOptions","_hideLoadingTimeoutID","groupCellIndex","_getBoundaryVisibleItemIndex","isTop","isFloor","itemIndex","prevOffset","viewportBoundary","$contentElement","contentElementOffsetTop","rowElements","outerHeight","getTopVisibleItemIndex","getBottomVisibleItemIndex","getTopVisibleRowData","_scrollToElement","scrollToElement","_restoreErrorRow","CONTEXT_MENU","footerView","VIEW_NAMES","ContextMenuController","dxEvent","$targetRowElement","$targetCellElement","menuItems","view","_rowOptions$cells","targetElement","_contextMenuPrepared","ContextMenuView","ContextMenu","onPositioning","actionArgs","contextMenuInstance","stopPropagation","contextMenuModule","contextMenu","contextMenuView","treeListCore","ERROR_MESSAGE_CLASS","ERROR_CLOSEBUTTON_CLASS","ACTION_CLASS","ErrorHandlingController","_columnHeadersView","_rowsView","_createErrorRow","$errorRow","$closeButton","$errorMessage","_renderErrorMessage","errorRowIndex","removeErrorRow","fireContentReadyAction","role","url","$message","renderErrorRow","$popupContent","$errorMessageElement","$firstErrorRow","next","resizingController","$columnHeaders","$rowsViewElement","errorHandlingModule","errorHandling","errorHandlingController","hasChanges","BORDERS_CLASS","IMPORTANT_MARGIN_CLASS","GRIDBASE_CONTAINER_CLASS","isPercentWidth","isPixelWidth","getContainerHeight","paddingTop","paddingBottom","calculateFreeWidth","totalWidth","_getTotalWidth","calculateFreeWidthWithCurrentMinWidth","currentMinWidth","ResizingController","_initPostRenderHandlers","_refreshSizesHandler","_refreshSizes","resizeDeferred","_e$changeTypes","_setScrollerSpacing","_setAriaRowColCount","_fireContentReadyAction","_getBestFitWidths","_widths","_rowsView$getTableEle","headersTableElement","_setVisibleWidths","columnId","_toggleBestFitModeForView","isBestFit","$rowsTables","$viewTables","$tableBody","$rowsTable","$viewTable","_toggleBestFitMode","$rowsFixedTable","_footerView","_toggleContentMinHeight","_needStretch","_synchronizeColumns","resetBestFitMode","needBestFit","_needBestFit","hasMinWidth","isColumnWidthsCorrected","_maxWidth","isFocusOutsideWindow","bottom","_correctColumnWidths","expandColumnWidth","_processStretch","c","_getAverageColumnsWidth","freeWidth","columnCountWithoutWidth","hasPercentWidth","hasAutoWidth","hasWidth","_hasWidth","_loop","isHiddenColumn","averageColumnsWidth","realColumnWidth","_getRealColumnWidth","borderWidth","getInnerWidth","resultSizes","groupSize","tableSize","unusedIndexes","diff","diffElement","onePixelElementsCount","groupWidth","ratio","percentTotalWidth","pixelTotalWidth","freeSpace","percentTotalWidthInPixel","updateSize","$groupElement","importantMarginClass","detach","updateDimensions","checkSize","_checkSize","prevResult","_resizeDeferred","_resetGroupElementHeight","_updateDimensionsCore","groupElement","scrollTop","_lastWidth","_lastHeight","_devicePixelRatio","_setScrollerSpacingCore","vScrollbarWidth","hScrollbarWidth","$testDiv","rootElementHeight","maxHeightHappened","editorFactory","isMaxHeightApplied","scrollHeight","_updateLastSizes","_renderDimensions","SynchronizeScrollingController","_scrollChangedHandler","GridView","_resizingController","_getWidgetAriaLabel","_groupElement","_renderViews","_getTableRoleName","isFirstRender","_rootElement","gridViewModule","resizing","synchronizeScrolling","gridView","HEADER_PANEL_CLASS","TOOLBAR_BUTTON_CLASS","TOOLBAR_ARIA_LABEL","HeaderPanel","_getToolbarItems","_getButtonContainer","_getToolbarButtonClass","specificClass","secondClass","_getToolbarOptions","userToolbarOptions","toolbarOptions","onItemRendered","itemRenderedCallback","userItems","_normalizeToolbarItems","defaultItems","defaultProps","defaultButtonsByNames","normalizedItems","needHideButton","_toolbar","_toolbarOptions","$headerPanel","$toolbar","Toolbar","setToolbarItemDisabled","toolbarInstance","itemOptionPrefix","updateToolbarDimensions","_this$_toolbar","getHeaderPanel","parts","getPathParts","normalizedItem","headerPanelModule","DATAGRID_ROW_SELECTOR","DATAGRID_DEPRECATED_TEMPLATE_WARNING","DataGrid","Widget","_activeStateUnit","_getDefaultOptions","_setDeprecatedOptions","_deprecatedOptions","since","alias","_defaultOptionsRules","device","platform","isMaterial","_device","deviceType","_init","_clean","_optionChanged","_dimensionChanged","_initMarkup","_renderContentImpl","templateName","logger","_dispose","registerComponent","DATE_REGEX","parseDates","exec","UTC","StateStoringController","getStorage","storage","sessionStorage","localStorage","Error","getUniqueStorageKey","_loadState","parse","getItem","_saveState","setItem","isEnabled","_state","_isLoaded","_windowUnloadHandler","_savingTimeoutID","fromPromise","isEmptyObject","save","getDataState","pagerView","getPageSizes","processLoadState","selectionController","exportController","updateState","selectionChanged","_initialPageSize","_initialFilterValue","selectionOnlyChanged","exportSelectionOnly","selectionOnly","DEFAULT_FILTER_VALUE","getFilterValue","filterSyncController","hasFilterState","getFilterValueFromColumns","stateStoringModule","stateLoaded","isStateLoading","applyState","oldState","newState","oldStateHash","newStateHash","isVirtualScrollingMode","stateStoringController","_restoreStateTimeoutID","_fireSelectionChanged","isDeferredSelection","EDITOR_CELL_CLASS","ROW_SELECTION_CLASS","SELECT_CHECKBOX_CLASS","CHECKBOXES_HIDDEN_CLASS","COMMAND_SELECT_CLASS","SELECTION_DISABLED_CLASS","SHOW_CHECKBOXES_MODE","SELECTION_MODE","processLongTap","isSelectionWithCheckboxes","stopSelectionWithCheckboxes","startSelectionWithCheckboxes","changeItemSelection","control","SelectionController","selectionCellTemplate","isRowSelected","renderSelectCheckBoxContainer","selectionHeaderTemplate","_renderSelectAllCheckBox","_attachSelectAllCheckBoxClickEvent","_selectionMode","_isSelectionWithCheckboxes","_selection","_createSelection","_updateSelectColumn","removedKeys","deselectRows","_getSelectionConfig","selectionOptions","virtualPaging","legacyScrollingMode","selectedKeys","ignoreDisabledItems","allowLoadByRange","hasGroupColumns","dataFields","_dataController$dataS","_dataController$dataS2","plainItems","isItemSelected","selected","isSelectableItem","getItemData","oldData","getLoadOptions","loadItemIndex","focusedItemIndex","shiftItemIndex","_dataController$dataS3","_dataController$dataS4","minIndex","maxIndex","_updateSelectedItems","isSelectColumnVisible","Selection","argument","_updateCheckboxesState","isDeferredMode","selectedItemKeys","removedItemKeys","keyIndex","isComplexKey","selectionChangedOptions","changedItemIndexes","getChangedItemIndexes","itemIndexes","addedItemKeys","_selectedItemsInternalChange","selectedRowsData","selectedItems","currentSelectedRowKeys","currentDeselectedRowKeys","isDataItem","isSelected","oldSelectionMode","selectionMode","selectRows","_isOnePageSelectAll","isSelectAll","getSelectAllState","selectAll","deselectAll","clearSelection","preserve","isDeselect","getSelectedRowKeys","getSelectedItemKeys","selectRowsByIndexes","indexes","getSelectedRowsData","getSelectedItems","visibleItemIndex","loadedItemIndex","_focusedItemIndex","selectionModule","hasSelectColumn","currentItem","isUpdateSelection","_updateSelectAllValue","$editor","selectAllValue","hasSelection","dxCheckBox","isEmptyData","createEditor","parentType","setValue","_attachCheckBoxClickEvent","_renderSelectCheckBox","_e$event","_updateCheckboxesClass","touch","holdEvent","isSelectionDisabled","isClickableElement","isCommandSelect","isCheckBoxesHidden","COLUMN_CHOOSER_CLASS","COLUMN_CHOOSER_BUTTON_CLASS","NOTOUCH_ACTION_CLASS","COLUMN_CHOOSER_LIST_CLASS","COLUMN_CHOOSER_PLAIN_CLASS","COLUMN_CHOOSER_DRAG_CLASS","COLUMN_CHOOSER_SELECT_CLASS","COLUMN_CHOOSER_ICON_NAME","COLUMN_CHOOSER_ITEM_CLASS","TREEVIEW_NODE_SELECTOR","CHECKBOX_SELECTOR","CLICK_TIMEOUT","processItems","chooserColumns","isSelectMode","expanded","disableCheckBox","parentId","ColumnChooserController","renderShowColumnChooserButton","$columnChooserButton","columnChooserButtonClass","columnChooserEnabled","$showColumnChooserButton","Button","showColumnChooser","integrationOptions","getPosition","ColumnChooserView","_isWinDevice","devices","win","_updateList","_popupContainer","columnChooserList","_columnChooserList","selectItem","unselectItem","$wrapper","_renderTreeView","_initializePopupContainer","columnChooserOptions","themeName","current","isGenericTheme","isGeneric","isMaterialTheme","dxPopupOptions","_ignoreCopyRootClassesToWrapperDeprecation","shortcut","Popup","treeViewConfig","dataStructure","itemTemplate","rootValue","searchEnabled","$checkBox","$treeViewNode","itemElement","checkBoxInstance","_prepareSelectModeConfig","_prepareDragModeConfig","searchValue","TreeView","selectNodesRecursive","onItemSelectionChanged","isLastColumnUnselected","needPartialRender","needFullRender","all","$node","$nodes","columnVisible","isColumnChooserVisible","$overlayContent","right","hideColumnChooser","popupContainer","columnChooserModule","columnChooserView","_appendColumnChooserItem","hintText","columnChooserMode","isMoveColumnDisallowed","createOffsetFilter","lastLevelOnly","groups","filterElement","currentFilter","GroupingHelper","findGroupInfoByKey","groupsInfo","hash","getGroupInfoIndexByOffset","leftIndex","rightIndex","middleIndex","_groupsInfo","updateTotalItemsCount","isGroupItemCountable","_isVirtualPaging","calculateItemsCount","foreachGroups","callback","childrenAtFirst","foreachCollapsedGroups","updateOffsets","updateParentOffsets","foreachGroupsCore","callbackResults","executeCallback","callbackResult","pop","currentParents","_updateGroupInfoOffsets","groupInfo","findGroupInfo","pathIndex","addGroupInfo","groupInfoData","allowCollapseAll","oldGroups","_group","cleanGroupsInfo","handleDataLoading","handleDataLoaded","handleDataLoadedCore","createGroupFilter","loadTotalCount","GroupingHelperCore","correctSkipLoadOption","skipCorrection","resultSkip","pathEquals","path1","path2","keysEqual","updateGroupOffsets","additionalGroupInfo","getGroupCount","collapsedGroups","collapsedItemsCount","skipFirstItem","dataGridCore","sorts","storeHelper","appendCollapsedPath","collapsedGroup","keyValue","pathValue","query","dataQuery","enumerate","groupedData","processGroupItems","removeLastItemsCount","needRemoveFirstItem","offsetInfo","itemsCountCorrection","changeRowExpand","groupCountQuery","beginPageIndex","dataSourceItems","groupOffsetQuery","getContinuationGroupCount","groupOffset","pageOffset","foreachExpandedGroups","updateGroups","expandedInfo","isLastGroupExpanded","paths","lastCount","updateGroupInfoItem","isLastGroupLevel","_isGroupExpanded","updateGroupInfos","loadedGroupCount","remotePaging","isGroupExpanded","getTotalOffset","groupInfos","totalOffset","childrenTotalCount","applyContinuationToGroupItem","groupLevel","expandedItemIndex","isLastExpandedItem","isFirstExpandedItem","lastExpandedItemSkip","isItemsTruncatedByTake","isDataDeferred","makeDataDeferred","loadGroupItems","currentGroupCount","currentGroupIndex","currentGroup","requireGroupCount","groupSummary","expandedFilters","expandedPath","isPagingLocal","isLastLevelGroupItemsPagingLocal","sortLastLevelGroupItems","expandedItems","loadGroupTotalCount","isGrouping","isFinite","dataErrors","isVirtualPaging","_updatePagingOptions","skipChildrenTotalCount","takeCorrection","parentTakeCorrection","continuationGroupCount","skipContinuationGroupCount","groupInfoCount","childrenGroupInfoCount","remoteGroupPaging","isLastGroup","_processPaging","_processSkips","firstItem","_processTakes","lastItem","maxTakeCount","handleGroup","DATAGRID_GROUP_PANEL_CLASS","DATAGRID_GROUP_PANEL_MESSAGE_CLASS","DATAGRID_GROUP_PANEL_ITEM_CLASS","DATAGRID_GROUP_PANEL_LABEL_CLASS","DATAGRID_GROUP_ROW_CLASS","GroupingDataSourceAdapterExtender","_initGroupingHelper","_grouping","isAutoExpandAll","isFocusedRowEnabled","isODataRemoteOperations","ExpandedGroupingHelper","CollapsedGroupingHelper","collapseAll","_collapseExpandAll","expandAll","isExpand","beginLoading","_changeRowExpandCore","endLoading","_hasGroupLevelsExpandState","GroupingDataControllerExtender","_processGroupItems","_processGroupItem","groupedColumns","collectContinuationItems","resultItems","expandRow","collapseRow","onGroupingMenuItemClick","GroupingHeaderPanelExtender","_appendGroupingItem","_isGroupPanelVisible","isRendered","$groupPanel","_updateGroupPanelContent","_renderGroupPanelItems","$groupPanelItem","$toolbarElement","$groupedColumnElement","isGroupingAllowed","isColumnGrouped","GroupingRowsViewExtender","isGroupRowStateChanged","isExpandButtonClicked","_changeGroupRowState","columnHeadersViewExtender","beginGroup","_isProcessedItem","MASTER_DETAIL_CELL_CLASS","MASTER_DETAIL_ROW_CLASS","masterDetailModule","initMasterDetail","_expandedItems","_isExpandAll","expandIndex","_getRowIndicesForExpand","detailColumnIndex","isEnabledChanged","isAutoExpandAllChanged","_updateParentDataGrids","$masterDetailRow","_updateMasterDataGrid","$detailElement","masterRowOptions","masterDataGrid","isFixedColumns","_updateFixedMasterDetailGrids","masterRowIndex","$tables","rowsNotEqual","tablesNotEqual","detailElementWidth","isDetailHorizontalScrollCanBeShown","isDetailGridWidthChanged","isEditRow","_isDetailRow","$detailCell","isWrapped","CHECKBOX_SIZE_CLASS","EDITOR_INLINE_BLOCK","EditorFactoryMixin","getResultConfig","inputAttr","checkEnterBug","ios","getTextEditorConfig","isEnterBug","sharedData","needDelayedUpdate","isInputOrKeyUpEvent","updateValue","valueChangeTimeout","updateValueTimeout","_input","valueChangeEvent","prepareBooleanEditor","prepareSelectBox","editorName","displayGetter","postProcess","selectBox","stopWatch","searchExpr","showClearButton","editorElement","blur","isSearching","isOnForm","showValidationMark","$editorElement","dateBox","dxDateBox","defaultEnterKeyHandler","_supportedKeys","enter","registerKeyHandler","dxTextArea","FOCUS_OVERLAY_CLASS","FOCUSED_ELEMENT_CLASS","MODULE_NAMESPACE","UPDATE_FOCUS_EVENTS","DX_HIDDEN","EditorFactory","_getFocusedElement","$dataGridElement","rowSelector","focusedElementSelector","_getFocusCellSelector","_updateFocusCore","$focusCell","hideBorders","$focus","_$focusedElement","loseFocus","_updateFocus","isFocusOverlay","_isFocusOverlay","_updateFocusTimeoutID","_updateFocusOverlaySize","positionUtils","h","oversize","setOuterWidth","v","setOuterHeight","hideBorder","_focusTimeoutID","renderFocusOverlay","focused","refocus","_$focusOverlay","align","elemCoord","focusOverlayPosition","precise","$focusedElement","_updateFocusHandler","_attachContainerEventHandlers","editorFactoryModule","DEFAULT_BUTTON","DX_DIALOG_CLASSNAME","DX_DIALOG_WRAPPER_CLASSNAME","DX_DIALOG_ROOT_CLASSNAME","DX_DIALOG_CONTENT_CLASSNAME","DX_DIALOG_MESSAGE_CLASSNAME","DX_DIALOG_BUTTONS_CLASSNAME","DX_DIALOG_BUTTON_CLASSNAME","DX_BUTTON_CLASSNAME","FakeDialogComponent","Component","custom","_options$title","getViewport","isMessageDefined","isMessageHtmlDefined","messageHtml","popupToolbarItems","Action","popupInstance","android","execute","ensureDefined","ignoreChildEvents","bottomToolbar","resetActiveElement","$firstButton","popupOptions","isPortrait","confirm","ROW_SELECTED_CLASS","EDIT_FORM_CLASS","DATA_EDIT_DATA_INSERT_TYPE","DATA_EDIT_DATA_REMOVE_TYPE","EDITING_POPUP_OPTION_NAME","EDITING_FORM_OPTION_NAME","EDITING_EDITROWKEY_OPTION_NAME","EDITING_EDITCOLUMNNAME_OPTION_NAME","TARGET_COMPONENT_NAME","EDITORS_INPUT_SELECTOR","FOCUSABLE_ELEMENT_SELECTOR","EDIT_MODE_BATCH","EDIT_MODE_ROW","EDIT_MODE_CELL","EDIT_MODE_FORM","EDIT_MODE_POPUP","FIRST_NEW_ROW_POSITION","LAST_NEW_ROW_POSITION","PAGE_BOTTOM_NEW_ROW_POSITION","PAGE_TOP_NEW_ROW_POSITION","VIEWPORT_BOTTOM_NEW_ROW_POSITION","VIEWPORT_TOP_NEW_ROW_POSITION","EDIT_MODES","ROW_BASED_MODES","MODES_WITH_DELAYED_FOCUS","READONLY_CLASS","LINK_CLASS","ROW_SELECTED","EDIT_BUTTON_CLASS","COMMAND_EDIT_CLASS","COMMAND_EDIT_WITH_ICONS_CLASS","INSERT_INDEX","ROW_INSERTED","ROW_MODIFIED","CELL_MODIFIED","EDITING_NAMESPACE","DATA_EDIT_DATA_UPDATE_TYPE","DEFAULT_START_EDIT_ACTION","EDIT_LINK_CLASS","edit","undelete","delete","EDIT_ICON_CLASS","METHOD_NAMES","ACTION_OPTION_NAMES","BUTTON_NAMES","EDITING_CHANGES_OPTION_NAME","createFailureHandler","isEditingCell","isEditingOrShowEditorAlwaysDataCell","isCommandCell","isEditorCell","EditingController","getButtonIndex","getButtonName","_lastOperation","_deferreds","_saveEditorHandler","_updateEditColumn","_updateEditButtons","_internalState","_optionsByReference","getEditMode","editMode","_getDefaultEditorTemplate","_getNewRowPosition","getChanges","getInsertRowCount","resetChanges","needReset","_getInternalData","_addInternalData","internalData","_getOldData","_this$_getInternalDat","getUpdatedData","editIndex","createObjectWithChanges","getInsertedData","getRemovedData","_fireDataErrorOccurred","getPopupContent","_needToCloseEditableCell","_closeEditItem","_isDefaultButtonVisible","_isButtonVisible","_isButtonDisabled","_getButtonConfig","buttonName","addRowToNode","editingOptions","allowAction","_getEditingButtons","buttonIndex","haveCustomButtons","_renderEditingButtons","_createButton","_getEditCommandCellTemplate","isRowBasedEditMode","getFirstEditableColumnIndex","getFirstEditableCellInRow","getFocusedCellInRow","_inputFocusTimeoutID","_pointerUpEditorHandler","_pointerDownEditorHandler","_handleEditRowKeyChange","_handleChangesChange","_resetEditColumnName","_resetEditRowKey","oldRowIndexCorrection","_getEditRowIndexCorrection","oldRowIndex","_editRowFromOptionChanged","cancelEditData","_processInsertChanges","_addInsertInfo","isPageChanged","_pageIndex","_refreshCore","isEditRowKeyDefined","_setEditRowKey","silent","_setEditRowKeyByIndex","getEditRowIndex","_getVisibleEditRowIndex","getEditFormRowIndex","_isEditRowByIndex","isKeyEqual","isEditCell","_getVisibleEditColumnIndex","_getInsertRowIndex","isProcessedItems","_getInsertAfterOrBeforeKey","isProcessedItem","nextItem","_generateNewItem","_this$_getInternalDat2","insertInfo","_getLoadedRowIndex","loadedRowIndex","insertAfterOrBeforeKey","_this$_getInternalDat3","isInsert","processDataItem","_processDataItemCore","modified","removed","_initNewRow","_createInsertInfo","_getInsertIndex","parentKey","_this$_getInternalDat4","Guid","_setInsertAfterOrBeforeKey","allItems","isViewportBottom","insertKey","maxInsertIndex","editItem","_this$_getInternalDat5","insertChange","_insertChange$insertA","_getPageIndexToInsertRow","lastPageIndex","_addRow","param","oldEditRowIndex","_allowRowAdding","__KEY__","_addRowCore","_navigateToNewRow","insertIndex","initialOldEditRowIndex","editRowIndex","_addChange","_editRowIndex","_change","focusController","pageIndexToInsertRow","navigateToRowByKey","navigateToRow","_showAddedRow","_afterInsertRow","_focusFirstEditableCellInRow","_beforeFocusElementInRow","$firstCell","_editCellInProgress","_delayedInputFocus","_isEditingStart","_beforeUpdateItems","_setEditColumnNameByIndex","_visibleColumns$index","_setEditColumnName","_getEditColumn","_getColumnByName","editColumn","columnName","isColumnHidden","_resetEditIndices","_item$oldData","_editRowFromOptionChangedCore","_needFocusEditor","_focusEditorIfNeed","_showEditPopup","_repaintEditPopup","_getEditPopupHiddenHandler","_getPopupEditFormTemplate","_getSaveButtonConfig","saveEditData","_getCancelButtonConfig","_removeInternalData","_updateInsertAfterOrBeforeKeys","removeChange","_removeChange","executeOperation","func","waitForDeferredOperations","_processCanceledEditingCell","_repaintEditCell","oldColumn","beforeFocusCallback","callBeforeFocusCallbackAlways","inputFocus","$focusableElement","_beforeFocusCallback","_focusEditingCell","$editCell","editColumnIndex","_checkAndDeleteRow","showDialogTitle","confirmResult","_deleteRowCore","_afterDeleteRow","_fireOnSaving","onSavingParams","_executeEditingAction","_disposed","_processChanges","results","dataChanges","changeCopy","_beforeSaveEditData","insert","newData","doneDeferred","_processRemoveIfError","_processRemove","_processRemoveCore","_processSaveEditDataResult","hasSavedData","changesLength","isError","_fireSaveEditDataEvents","isSaving","_resolveAfterSave","_saving","_saveEditDataInner","needFocusEditCell","_afterSaveEditData","_endSaving","_cancelSaving","_beforeEndSaving","_refreshDataAfterSave","isFullRefresh","isEditColumnVisible","_isEditColumnVisible","_isEditButtonDisabled","isEditRowDefined","isButtonDisabled","_applyModified","_beforeCloseEditCellInBatchMode","_cancelEditDataCore","_beforeCancelEditData","_afterCancelEditData","_hideEditPopup","hasEditData","_getRowIndicesForCascadeUpdating","skipCurrentRow","addDeferred","_prepareChange","_options$row","rowKey","setCellValueResult","_updateRowValues","updateFieldValue","forceUpdateRow","_focusPreviousEditingCellIfNeed","_updateEditRow","_needUpdateRow","isCustomSetCellValue","isCustomCalculateCellValue","changeOptions","_applyChangeCore","_updateEditRowCore","_updateRowImmediately","_updateRowWithDelay","_validateEditFormAfterUpdate","$focusedItem","changeParams","_this$getChanges","_getFormEditItemTemplate","getColumnTemplate","editingStartOptions","isRowMode","isRowEditing","getEditFormTemplate","useLegacyColumnButtonTemplate","$button","iconType","iconUtils","localizationName","getButtonLocalizationNames","_button$onClick","prepareButtonItem","titleButtonTextByClassNames","revert","prepareEditButtons","buttonItems","highlightDataCell","cellModified","shouldHighlight","_allowEditAction","allowEditAction","eventName","needCallback","isNewRowInEditMode","visibleEditRowIndex","editingModule","_editingController","_this$_updateEditItem","_updateEditItem","isRowRemoved","isRowInserted","isRowModified","_getColumnIndexByElement","_getColumnIndexByElementCore","_editCellByClick","isEditedCell","editCell","withoutSaveEditData","closeEditCell","_pointerDownTimeout","isEditForm","isEditableCell","_editCellPrepared","_formItemPrepared","cellValue","editButtonItems","excludedOptions","shouldInvalidate","EDIT_ROW","editingRowBasedModule","isRowEditMode","isVisibleInRowEditMode","$editingCell","EDIT_FORM_ITEM_CLASS","EDIT_POPUP_CLASS","SCROLLABLE_CONTAINER_CLASS","EDIT_POPUP_FORM_CLASS","BUTTON_CLASS","FORM_BUTTONS_CONTAINER_CLASS","getEditorType","_column$formItem","isCustomEditorType","forEachFormItems","callBack","tabs","editingFormBasedModule","_editForm","_updateEditFormDeferred","isFormOrPopupEditMode","isPopupEditMode","isFormEditMode","firstFormItem","_firstFormItem","$editFormElements","_getEditFormEditorVisibleIndex","editForm","_this$_editPopup","popupVisible","_editPopup","_$popupContent","_row$update","repaint","repaintForm","isMobileDevice","$popupContainer","_this$_editForm","formTemplate","isPopupForm","_this$_editPopup2","defaultAnimation","_this$_editPopup3","_handleFormOptionChange","_handlePopupOptionChange","_this$_editPopup4","editPopup","popupOptionName","renderFormEditTemplate","detailCellOptions","formTemplateOptions","isReadOnly","rowData","labelMark","getItemID","getFormEditorTemplate","_cellOptions$row$watc","_cellOptions$row","_validator","validator","validatorOptions","contents","dxValidator","dataGetter","getEditFormOptions","detailOptions","_this$_getValidationG","editFormOptions","_getValidationGroupsInForm","userCustomizeItem","editFormItemClass","itemId","formID","rule","itemVisible","baseEditFormOptions","$formContainer","Form","$buttonsContainer","_this$_editPopup5","getEditForm","_this$_updateEditForm","_this$_editPopup6","editFormRowIndex","_isFormItem","isDetailRow","isPopupEditing","ADD_ROW_BUTTON_CLASS","DROPDOWN_EDITOR_OVERLAY_CLASS","CELL_MODIFIED_CLASS","ROW_REMOVED","$pointerDownTarget","needCreateHandlers","_this$getController","targetComponent","isCellOrBatchEditMode","isEditorPopup","checkEditorPopup","isDomElement","isAnotherComponent","isAddRowButton","isCellEditMode","isBatchEditMode","isCurrentComponentElement","$targetCell","_this$_rowsView","isEditColumnNameDefined","_handleEditColumnNameChange","oldColumnIndex","_editCellFromOptionChanged","_deferred","_editCell","coreResult","_editCellCore","isEditByOptionChanged","_getNormalizedEditCellOptions","_beforeEditCell","_prepareEditCell","_closeEditCellCore","_resetModifiedClassCells","columnsCount","_this$_editCellFromOp","needResetIndexes","isBatchMode","_isRowDeleteAllowed","_changes$","_deferred2","isUpdateInCellMode","focusPreviousEditingCell","processIfBatch","editingCellBasedModule","INVALIDATE_CLASS","REVERT_TOOLTIP_CLASS","INVALID_MESSAGE_CLASS","WIDGET_INVALID_MESSAGE_CLASS","INVALID_MESSAGE_ALWAYS_CLASS","REVERT_BUTTON_CLASS","VALIDATOR_CLASS","PENDING_INDICATOR_CLASS","VALIDATION_PENDING_CLASS","PADDING_BETWEEN_TOOLTIPS","FORM_BASED_MODES","COMMAND_TRANSPARENT","VALIDATION_STATUS","valid","invalid","pending","EDIT_DATA_INSERT_TYPE","EDIT_DATA_REMOVE_TYPE","VALIDATION_CANCELLED","validationResultIsValid","cellValueShouldBeValidated","ValidatingController","_validationState","initValidationState","_validationStateCache","_rowIsValidated","validationData","_getValidationData","validated","keyHash","isObjectKeyHash","isValid","_getBrokenRules","validationResults","brokenRules","brokenRule","_rowValidating","getChangeByKey","errorText","getHiddenValidatorsErrorText","brokenRulesMessages","isGroupExpandColumn","isVisibleColumn","validate","isFull","completeList","_isValidationInProgress","validationResult","validateGroup","_currentCellValidator","_findGroup","_validationResult","ValidationEngine","validators","resetRowValidationResults","isRowDataModified","updateValidationState","setDisableApplyValidationResults","groupConfig","setValidator","renderCellPendingIndicator","LoadIndicator","disposeCellPendingIndicator","validationStatusChanged","updateCellValidationResult","validatorInitialized","validatorDisposing","getCellValidationResult","status","cancelCellValidationResult","applyValidationResult","requestIsDisabled","disabledPendingId","_disableApplyValidationResults","getEditorInstance","_syncInternalEditingData","_parameters$row","oldDataFromState","createValidator","needCreateValidator","_parameters$row$oldDa","_parameters$row2","isCellOrBatchEditingAllowed","getValue","useDefaultValidator","Validator","adapter","applyValidationResults","validationRequestsCallbacks","flag","getDisableApplyValidationResults","isCurrentValidatorProcessing","validateCell","cellParams","stateRestored","_validationData$valid","removeCellValidationResult","_ref6","isInvalidCell","_ref7","getCellValidator","_ref8","setCellValidationStatus","validationStatus","validatingModule","validating","validatingController","_updateRowAndPageIndices","startInsertIndex","_ref9","isNotCanceled","addInValidItem","isInserted","_createInvisibleColumnValidators","invisibleColumns","invisibleColumnValidators","isCellVisible","disposeValidators","isFullValid","_showErrorRow","shouldResetValidationState","columnsWithValidatingEditors","_col$validationRules","validationState","resetRowAndPageIndices","currentValidator","isValidated","needValidation","isCellInvalid","_showRevertButton","$tooltipElement","$overlayContainer","tooltipOptions","propagateOutsideClick","$buttonElement","buttonOptions","onPositioned","_positionedHandler","Overlay","_hideFixedGroupCell","overlayOptions","$nextFixedRowElement","$groupCellElement","nextRowOptions","visibility","isOverlayVisible","__skipPositionProcessing","isRevertButton","needRepaint","normalizedPosition","_normalizeValidationMessagePositionAndMaxWidth","_showValidationMessage","messages","revertTooltip","editorPopup","myPosition","atPosition","errorMessageText","invalidMessageClass","$overlayElement","_shiftValidationMessageIfNeed","fixedColumns","visibleTableWidth","w1","w2","$overlayContentElement","validationMessageWidth","needMaxWidth","boundaryNonFixedColumnsInfo","firstNonFixedColumnIndex","lastNonFixedColumnIndex","endColumnIndex","$revertContent","contentOffset","revertContentOffset","_getTooltipsSelector","revertTooltipClass","skipValidator","updateCellState","_change$data","showValidationMessage","errorMessages","$tooltips","_oldRow$cells","_cell$column$validati","oldValidationStatus","newValidationStatus","rowIsModified","cellIsMarkedAsInvalid","editingChanged","hasValidationRules","$freeSpaceRowElements","$tooltipContent","isEditorDisposed","contentTable","needTwoPagesLoading","_controller","isVirtual","getViewportItemIndex","getBeginPageIndex","_cache","getEndPageIndex","fireChanged","_isChangedFiring","processDelayChanged","_isDelayChanged","getViewportPageCount","_dataOptions","preventPreload","realViewportSize","viewportSize","viewportItemSize","getContentOffset","getViewportPosition","virtualItemsCount","begin","itemSize","getItemSizes","getPreloadPageCount","previous","getPageIndexForLoad","dataOptions","needToLoadPageBeforeLast","needToLoadPrevPage","needToLoadNextPage","_loadingPageIndexes","loadCore","processChanged","isDelayChanged","removeCacheItem","isPrepend","viewportItems","removeCount","correctCount","removeItemCount","itemsLength","updateLoading","_lastPageIndex","VirtualDataLoader","constructor","viewportItemIndexChanged","newPageIndex","lastPageSize","maxPageIndex","defaultPageIndex","endPageIndex","pageIndexForLoad","delayDeferred","_delayDeferred","onChanged","loadIfNeed","_setViewportPositionCore","handleDataChanged","removeInvisiblePages","lastCacheLength","getDelayDeferred","isBase","beginItemsCount","endItemsCount","end","_isVirtualMode","_isVirtual","_isAppendMode","subscribeToExternalScrollers","scrollChangedHandler","$scrollElement","scrollableArray","scrollToArray","disposeArray","getElementOffset","$scrollableElement","scrollableOffset","widgetScrollStrategy","handler","subscribeToScrollEvents","isDocument","eventsStrategy","topOffset","scrollMethod","VirtualScrollController","_viewportSize","_viewportItemSize","_viewportItemIndex","_position","_isScrollingBack","_contentSize","_itemSizes","_sizeRatio","positionChanged","_dataLoader","viewportParams","getViewportParams","loadedOffset","loadedItemCount","getScrollingTimeout","scrollingTimeout","_this$option","changingDuration","setViewportPosition","_scrollTimeoutID","getItemIndexByPosition","defaultItemSize","getItemSize","itemOffset","itemOffsetsWithSize","itemOffsetWithSize","itemOffsetDiff","isScrollingBack","prevPosition","setViewportItemIndex","setContentItemSizes","sizes","size","virtualContentSize","contentHeightLimit","getItemOffset","isEnd","currentItemIndex","getVirtualContentSize","viewportHeight","isRefresh","subscribeToWindowScrollEvents","_windowScroll","_this$option2","topIndex","bottomIndex","maxGap","minGap","topMinGap","bottomMinGap","remainedItems","BOTTOM_LOAD_PANEL_CLASS","TABLE_CONTENT_CLASS","FREESPACE_CLASS","VIRTUAL_ROW_CLASS","LOAD_TIMEOUT","VISIBLE_PAGE_INDEX","_correctCount","isItemCountableFunc","isItemCountableByDataSource","updateItemIndices","VirtualScrollingDataSourceAdapterExtender","_updateLoading","_virtualScrollController","_loadPageCount","_getVirtualScrollDataOptions","_renderTime","_startLoadTime","newMode","virtualScrollController","r","loadPageCount","takeIsDefined","VirtualScrollingRowsViewExtender","removeEmptyRows","$emptyRows","_dataController$state","scrollToPage","_scrollToCurrentPageOnResize","resizeHandler","scrollPosition","itemSizes","_updateContentPosition","startRenderTime","_removeRowsElements","_updateBottomLoading","_addVirtualRow","$virtualRow","_getRowHeights","rowHeights","_correctRowHeights","correctedRowHeights","visibleRows","firstCountableItem","lastLoadIndex","isRender","rowHeight","$virtualRows","_isFixedTableRendering","_isTableLinesDisplaysCorrect","table","hasColumnLines","_isColumnElementsEqual","$columns","$virtualColumns","_getCellClasses","classes","isExpandColumn","_findBottomLoadPanel","$bottomLoadPanel","showBottomLoading","bottomLoadPanelElement","zeroTopPosition","updateViewport","hasBottomLoadPanel","isViewportChanging","scrollPos","_dataController$loadI","virtualScrollingModule","updateTimeout","minTimeout","renderingThreshold","rowPageSize","prerenderedRowChunkSize","loadTwoPagesOnStart","legacyMode","prerenderedRowCount","baseResult","initVirtualRows","_rowsScrollController","_this$getLoadPagePara","getLoadPageParams","getRowPageSize","rowsScrollController","isSortingOperation","allowedTopOffset","virtualRowsRendering","_allItems","_loadViewportParams","_visibleItems","_rowPageIndex","_viewportChanging","_needUpdateViewportAfterLoading","_getRowsScrollDataOptions","_this$_dataSource2","loadViewport","_updateLoadViewportParams","isItemCountable","_that$_dataSource","_itemCount","isNextAfterLast","countableOnly","delta","cancelEmptyChanges","newItems","_dataSource$lastLoadO","prevCountable","prevRowType","isPrevRowNew","currentIndex","wasCountableItem","itemCountable","isNextGroupItem","isNextDataItem","isPrevNewRowFirst","skipForCurrentPage","it","isNewRowOnStart","isNewRowInEmptyData","isLoadIndexGreaterStart","isLoadIndexLessEnd","byLoadedRows","firstLoadIndex","_dataSource$lastLoadO2","_this$_rowsScrollCont","getPreloadedRowCount","preloadCount","byLoadedPage","_this$_dataSource3","_this$_dataSource4","loadedPageIndex","loadedTake","topPreloadCount","bottomPreloadCount","skipWithPreload","loadingTake","_updateVisiblePageIndex","currentPageIndex","viewPortItemIndex","_getChangedLoadParams","loadedPageParams","_loadItems","checkLoading","_dataSourceAdapter$lo","_dataSourceAdapter$pa","changedParams","currentLoadPageCount","lastRequiredItemCount","pageIndexNotChanged","allLoadedInAppendMode","viewportChanging","checkLoadedParamsOnly","loadingItemsStarted","_this$_loadViewportPa","_this$_loadViewportPa2","viewportIsNotFilled","currentTake","newTake","topItemIndex","_this$_loadViewportPa3","bottomItemIndex","_resizeTimeout","_lastTime","WINDOW_HEIGHT_PERCENT","getElementMaxHeightByWindow","startLocation","actualOffset","elementOffset","getInnerHeight","offsetTop","offsetBottom","DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS","DX_SUBMENU_CLASS","Submenu","super","orientation","onHoverStart","_initDataAdapter","_dataAdapter","_renderContextMenuOverlay","node","getNodeByKey","_renderItems","_getChildNodes","_renderDelimiter","$contentDelimiter","_itemContainer","_getOverlayOptions","_overlayPositionedActionHandler","_showDelimiter","_hoverEndHandler","_toggleFocusClass","_isMenuHorizontal","_hoverStartHandler","hoverStartAction","_drawSubmenu","$rootItem","rootItem","submenu","_hideSubmenu","$submenu","containerOffset","vLocation","hLocation","rootOffset","offsetLeft","rootWidth","rootHeight","submenuWidth","submenuHeight","animationPosition","_getContextMenuPosition","_overlay","getOverlayContent","DX_MENU_CLASS","DX_MENU_VERTICAL_CLASS","DX_MENU_HORIZONTAL_CLASS","DX_MENU_ITEM_CLASS","DX_MENU_ITEMS_CONTAINER_CLASS","DX_MENU_ITEM_EXPANDED_CLASS","DX_CONTEXT_MENU_CLASS","DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS","DX_STATE_DISABLED_CLASS","DX_STATE_HOVER_CLASS","DX_STATE_ACTIVE_CLASS","DX_ADAPTIVE_MODE_CLASS","DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS","DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS","FOCUS_UP","FOCUS_DOWN","FOCUS_LEFT","FOCUS_RIGHT","SHOW_SUBMENU_OPERATION","NEXTITEM_OPERATION","PREVITEM_OPERATION","DEFAULT_DELAY","ACTIONS","Menu","MenuBase","submenuDirection","showFirstSubmenuMode","hideSubmenuOnMouseLeave","onSubmenuShowing","onSubmenuShown","onSubmenuHiding","onSubmenuHidden","adaptivityEnabled","_setOptionsByReference","selectedItem","_itemElements","rootMenuElements","submenuElements","_submenuItemElements","itemSelector","currentSubmenu","_submenus","itemsContainer","_focusTarget","_moveFocus","navigationAction","$newTarget","$items","_getAvailableItems","isMenuHorizontal","$activeItem","_getActiveItem","_getItemsNavigationOperation","_getKeyboardNavigationAction","navOperation","_showSubmenu","_nextItem","_prevItem","_resizeEventTimer","_menuItemsWidth","_updateItemsWidthCache","_isAdaptivityEnabled","$menuItems","_getSummaryItemsWidth","containerWidth","_toggleAdaptiveMode","_initActions","_visibleSubmenu","_render","_initAdaptivity","_renderHamburgerButton","_hamburger","_toggleTreeView","_toggleHamburgerActiveState","$menuItemsContainer","$adaptiveElements","_hideVisibleSubmenu","_treeView","_removeAdaptivity","_$adaptiveContainer","_treeviewItemClickHandler","_getAdaptiveOverlayOptions","rtl","_ignoreFunctionValueDeprecation","_getTreeViewOptions","menuOptions","animationEnabled","onItemExpanded","onItemCollapsed","selectByClick","expandEvent","$hamburger","_getDelay","delayType","_keyboardHandler","_renderContainer","_renderSubmenuItems","$itemFrame","_createSubmenu","_renderBorderElement","_getKeyboardListeners","$submenuContainer","_getSubmenuOptions","_parentKey","internalFields","_clearTimeouts","getSubmenuPosition","_attachSubmenuHandlers","$submenuTarget","showSubmenuMode","disabledExpr","selectedExpr","itemsExpr","onFocusedItemChanged","_nestedItemOnSelectionChangedHandler","_nestedItemOnItemClickHandler","_nestedItemOnItemRenderedHandler","onLeftFirstItem","_moveMainMenuFocus","onLeftLastItem","onCloseRootSubmenu","onExpandLastSubmenu","_getShowFirstSubmenuMode","_isDesktopDevice","$currentItem","$newItem","addedItems","_clearSelectionInSubmenus","_clearRootSelection","targetSubmenu","cleanAllSubmenus","isOtherItem","$selectedItem","_selectedItemClass","selectedItemData","_getItemData","_clearSelectedItems","$prevSelectedItem","prevSelectedItemData","$submenuOverlayContent","submenus","submenuMouseLeaveName","hoverEventEnd","_submenuOnShowingHandler","_submenuOnShownHandler","_submenuOnHidingHandler","_submenuOnHiddenHandler","_submenuMouseLeaveHandler","$border","eventArgs","relatedTarget","_getSubmenuByRootElement","_hideSubmenuAfterTimeout","isRootItemHovered","isSubmenuItemHovered","hoveredElementFromSubMenu","isHorizontalMenu","submenuPosition","_itemPointerDownHandler","$closestItem","mouseMoveEventName","_getItemElementByEventArgs","getNodeByItem","isSelectionActive","which","_isItemDisabled","_hasChildren","_getSubmenuByElement","_itemMouseMoveHandler","_showSubmenuTimer","eventArg","_hideSubmenuTimer","$itemElement","_hoveredRootItem","pointers","_updateSubmenuVisibilityOnClick","_disabledGetter","_updateSelectedItemOnClick","_changeSubmenusOption","OPERATION_ICONS","notcontains","startswith","endswith","OPERATION_DESCRIPTORS","FILTERING_TIMEOUT","CORRECT_FILTER_RANGE_OVERLAY_WIDTH","FILTER_RANGE_OVERLAY_CLASS","FILTER_RANGE_START_CLASS","FILTER_RANGE_END_CLASS","MENU_CLASS","EDITOR_WITH_MENU_CLASS","EDITOR_CONTAINER_CLASS","FILTER_MENU","APPLY_BUTTON_CLASS","HIGHLIGHT_OUTLINE_CLASS","FOCUSED_CLASS","FILTER_RANGE_CONTENT_CLASS","FILTER_MODIFIED_CLASS","BETWEEN_OPERATION_DATA_TYPES","isOnClickApplyFilterMode","ColumnHeadersViewFilterRowExtender","$editorContainer","componentNames","Editor","getRangeTextByFilterValue","rangeEnd","getColumnFilterValue","formatOptions","getColumnSelectedFilterOperation","bufferedSelectedFilterOperation","isFilterRange","isRangeStart","updateFilterValue","_applyFilterViewController","setHighLight","normalizedValue","columnFilterValue","isBetween","_updateEditorValue","$editorRangeElements","$menu","overlayInstance","_updateFilterRangeContent","_updateFilterOperationChooser","_renderFilterRangeContent","_renderEditor","_getEditorOptions","_hideFilterRange","_filterRangeOverlayInstance","isFilterRowVisible","_initFilterRangeOverlay","$overlay","$prevElement","prev","_updateFilterRangeOverlay","_showFilterRange","getFilterRangeOverlayInstance","_renderFilterCell","_renderFilterOperationChooser","accessibilityOptions","_getFilterInputAccessibilityAttributes","columnAriaLabel","$filterRangeContent","isCellWasFocused","menu","_focusEditor","selectable","_getFilterOperationMenuItems","properties","columnSelectedFilterOperation","notFocusEditor","isOnClickMode","_isEditorFocused","filterRowOptions","availableFilterOperations","descriptionName","DataControllerFilterRowExtender","skipCalculateColumnFilters","ApplyFilterViewController","_getHeaderPanel","_headerPanel","enableApplyButton","removeHighLights","columnHeadersViewElement","filterRowModule","columnsResizer","_startResizing","_targetPoint","_endResizing","filterItem","_prepareFilterItem","_isShowApplyFilterButton","core","HEADER_FILTER_CLASS","HEADER_FILTER_MENU_CLASS","DEFAULT_SEARCH_EXPRESSION","resetChildrenItemSelection","updateSelectAllState","selectAllCheckBox","isSearchEnabled","updateHeaderFilterItemSelectionState","filterValuesMatch","isExcludeFilter","HeaderFilterView","getPopupContainer","getListContainer","_listContainer","applyHeaderFilter","list","isFilterBuilder","fillSelectedItemKeys","isExclude","_getNode","hasChildren","hasChildrenWithSelection","hideHeaderFilterMenu","$columnElement","updatePopup","headerFilterMenu","_cleanPopupContent","_getSearchExpr","useDefaultSearchExpr","headerFilterDataSource","headerFilterOptions","_initializeListContainer","widgetOptions","List","pageLoadMode","showSelectionControls","_selectedItemsUpdating","oldSelected","filterValueIndex","headerFilterMixin","$headerFilterIndicator","_isHeaderFilterEmpty","DATE_INTERVAL_FORMATS","ungroupUTCDates","dateParts","dates","isMonthPart","convertDataFromUTCToLocal","isUTCFormat","HeaderFilterController","_headerFilterView","_updateSelectedState","_normalizeGroupItem","currentLevel","valueSelector","displaySelector","getHeaderItemText","firstValueText","secondValue","secondValueText","level","_column$headerFilter","isLookup","lookupDataSourceOptions","cutoffLevel","_currentColumn","useDefaultSearch","convertUTCDates","origPostProcess","getCurrentColumn","isGroupPanel","showHeaderFilterMenuBase","columnElement","dxResizableInstance","dxResizable","headerFilterByColumn","ColumnHeadersViewHeaderFilterExtender","_subscribeToIndicatorEvent","_updateHeaderFilterIndicators","_needUpdateFilterIndicators","HeaderPanelHeaderFilterExtender","headerFilterModule","headerFilterView","FILTER_BUILDER_RANGE_CLASS","FILTER_BUILDER_RANGE_START_CLASS","FILTER_BUILDER_RANGE_END_CLASS","FILTER_BUILDER_RANGE_SEPARATOR_CLASS","SEPARATOR","conditionInfo","$editorStart","$editorEnd","getStartValue","getEndValue","_editorFactory","getConfig","valueSeparator","notForLookup","isblank","isnotblank","OPERATION_NAME","getIconByFilterOperation","filterOperation","getNameByFilterOperation","DEFAULT_DATA_TYPE","EMPTY_MENU_ICON","AND_GROUP_OPERATION","EQUAL_OPERATION","NOT_EQUAL_OPERATION","boolean","object","DEFAULT_FORMAT","LOOKUP_OPERATIONS","AVAILABLE_FIELD_PROPERTIES","FILTER_BUILDER_CLASS","FILTER_BUILDER_ITEM_TEXT_CLASS","FILTER_BUILDER_ITEM_TEXT_PART_CLASS","FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS","FILTER_BUILDER_ITEM_TEXT_SEPARATOR_EMPTY_CLASS","getFormattedValueText","fieldFormat","isNegationGroup","isCondition","getGroupCriteria","setGroupCriteria","criteria","convertGroupToNewStructure","setGroupValue","substring","getGroupMenuItem","availableGroups","groupValue","getGroupValue","getCriteriaOperation","getDefaultFilterOperations","containItems","entity","getFilterOperations","getCaptionByOperation","filterOperationsDictionary","getOperationFromAvailable","availableOperations","getCustomOperation","filteredOperations","getAvailableOperations","isLookupField","isOperationForbidden","isCustom","getDefaultOperation","createCondition","updateConditionByOperation","removeItem","createEmptyGroup","isNegation","isNegationGroupOperation","groupOperation","getGroupOperationFromNegationOperation","addItem","getField","extendedFields","getItems","convertToInnerGroup","defaultGroupOperation","innerGroup","convertToInnerStructure","appendGroupOperationToGroup","convertToInnerCondition","conditionHasCustomOperation","appendGroupOperationToCriteria","getNormalizedFields","normalizedField","getConditionFilterExpression","filterExpression","getFilterExpression","_filterExpression","getNormalizedFilter","itemsForRemove","normalizedGroupValue","isValidCondition","getCurrentLookupValueText","lookupDataSource","loadSingle","getPrimitiveValueText","getArrayValueText","checkDefaultValue","getCurrentValueText","_len","_key","itemExists","pushItemAndCheckParent","originalItems","hasParent","getParentIdFromItemDataField","generateCaptionByDataField","lastIndexOf","arr","getCaptionWithParents","getOperationValue","getMergedOperations","betweenCaption","betweenIndex","isMatchedCondition","addedFilterDataField","removeFieldConditionsFromFilter","hasMatchedCondition","syncConditionIntoGroup","addedFilter","canPush","syncFilters","getMatchedConditions","filterHasField","renderValueText","lastItemIndex","t","baseOperation","grid","getFullText","itemText","parentText","lastIndex","div","closeEditor","fieldInfo","itemsDeferred","_values","getSelectedItemsTexts","selectedItemsTexts","anyOf","noneOf","baseOp","baseFilter","FILTER_ROW_OPERATIONS","FILTER_TYPES_INCLUDE","FILTER_TYPES_EXCLUDE","getColumnIdentifier","checkForErrors","FilterSyncController","getEmptyFilterValues","canSyncHeaderFilterWithFilterRow","getConditionFromFilterRow","getConditionFromHeaderFilter","selectedOperation","updateHeaderFilterCondition","headerFilterCondition","hasArrayValue","updateFilterRowCondition","syncFilterValue","_skipSyncColumnOptions","filterConditions","filterCondition","_initSync","filteringColumns","isFilterSyncActive","_getSyncFilterRow","_getSyncHeaderFilter","syncFilterRow","syncHeaderFilter","getCustomFilterOperations","filterBuilderCustomOperations","DataControllerFilterSyncExtender","filterSyncEnabledValue","calculatedFilterValue","_parseColumnPropertyName","matched","match","propertyName","ColumnHeadersViewFilterSyncExtender","filterSyncModule","filterSync","FILTER_BUILDER_GROUP_CLASS","FILTER_BUILDER_GROUP_ITEM_CLASS","FILTER_BUILDER_GROUP_CONTENT_CLASS","FILTER_BUILDER_GROUP_OPERATIONS_CLASS","FILTER_BUILDER_GROUP_OPERATION_CLASS","FILTER_BUILDER_ACTION_CLASS","FILTER_BUILDER_IMAGE_CLASS","FILTER_BUILDER_IMAGE_ADD_CLASS","FILTER_BUILDER_IMAGE_REMOVE_CLASS","FILTER_BUILDER_ITEM_FIELD_CLASS","FILTER_BUILDER_ITEM_OPERATION_CLASS","FILTER_BUILDER_ITEM_VALUE_CLASS","FILTER_BUILDER_ITEM_VALUE_TEXT_CLASS","FILTER_BUILDER_OVERLAY_CLASS","FILTER_BUILDER_FILTER_OPERATIONS_CLASS","FILTER_BUILDER_FIELDS_CLASS","FILTER_BUILDER_ADD_CONDITION_CLASS","ACTIVE_CLASS","FILTER_BUILDER_MENU_CUSTOM_OPERATION_CLASS","SOURCE","DISABLED_STATE_CLASS","TAB_KEY","ENTER_KEY","ESCAPE_KEY","OPERATORS","FilterBuilder","closePopupOnTargetScroll","_initCustomOperations","disableInvalidateForValue","_disableInvalidateForValue","_initModel","_getNormalizedFields","_model","_getFilterExpression","_customOperations","_updateFilter","_getModel","_initEditorFactory","_getDefaultGroupOperation","_this$option$","actionConfig","_createGroupElementByCriteria","_createConditionElement","_createConditionItem","$group","_createGroupElement","$groupContent","groupCriteria","innerCriteria","$groupItem","_createRemoveButton","_createGroupOperationButton","_createAddButton","newGroup","newCondition","_getGroupOperations","groupMenuItem","$operationButton","_createButtonWithMenu","removeMenu","info","treeViewElement","treeView","dxTreeView","_subscribeOnClickAndEnterKey","_createPopupWithTreeView","_hasValueButton","_createOperationButtonWithMenu","currentOperation","$valueButton","siblings","_createValueButton","_createOperationAndValueButtons","_createFieldButtonWithMenu","getFullCaption","$fieldButton","isSingleChild","$removeButton","addGroupHandler","addConditionHandler","click","_createValueText","$text","_createValueEditorWithEvents","_updateConditionValue","areValuesDifferent","_addDocumentKeyUp","isComposing","hasCompositionJustEnded","documentKeyUpHandler","input","_documentKeyUpHandler","_addDocumentClick","closeEditorFunc","documentClickHandler","_isFocusOnEditorParts","_documentClickHandler","activeElement","_removeEvents","createValueText","_createValueEditor","$popup","class","$menuContainer","FilterBuilderView","_updatePopupOptions","_initPopup","_filterBuilderPopup","_disposePopup","_filterBuilder","_getPopupContentTemplate","_getPopupToolbarItems","$filterBuilderContainer","ScrollView","filterBuilderModule","filterBuilderView","FILTER_PANEL_CLASS","FILTER_PANEL_TEXT_CLASS","FILTER_PANEL_CHECKBOX_CLASS","FILTER_PANEL_CLEAR_FILTER_CLASS","FILTER_PANEL_LEFT_CONTAINER","FILTER_PANEL_TARGET","FilterPanelView","$leftContainer","_filterValueBuffer","_getCheckElement","_getFilterElement","_getTextElement","_getRemoveButtonElement","CheckBox","_showFilterBuilder","_addTabIndexToElement","filterText","$textElement","getFilterText","customText","clearFilterValue","tabindex","_getConditionText","fieldText","operationText","_getValueMaskedText","_getValueText","hasCustomOperation","gridUtils","getConditionText","getGroupText","isInnerGroup","textParts","groupText","filterPanelModule","filterPanelView","SEARCH_PANEL_CLASS","SEARCH_TEXT_CLASS","searchModule","searchFilter","onQueryDone","valueGetter","_i","getSearchPanelOptions","_prepareSearchItem","searchPanelOptions","$search","getSearchTextEditor","$searchPanel","dxTextBox","_searchParams","_getFormattedSearchText","_getStringNormalizer","isCaseSensitive","_findHighlightingTextNodes","_$items","stringNormalizer","normalizedSearchText","resultTextNodes","$contents","normalizedText","_highlightSearchTextCore","$textNode","$searchTextSpan","firstContentElement","after","_highlightSearchText","isEquals","textNodes","textNode","_highlightTimer","GridPagerWrapper","pageIndexChanged","pageSizeChanged","toNumber","attribute","getElementStyle","_getElementComputedSt","computedStyle","getElementComputedStyle","getElementWidth","getElementMinWidth","_excluded","viewFunction","contentAttributes","infoTextRef","infoTextVisible","isLargeDisplayMode","pageSizesRef","pagesRef","parentRef","Content","rootElementRef","calculateAdaptivityProps","infoWidth","pageSizes","pageSizesWidth","pages","pagesWidth","parentWidth","minimalWidth","getElementsWidth","pagesHtmlWidth","ResizableContainerProps","TemplateProp","normalizeProps","createComponentVNode","ResizableContainer","InfernoComponent","infernoCreateRef","subscribeToResize","effectUpdateChildProps","updateAdaptivityProps","createEffects","InfernoEffect","pagerProps","updateEffects","_this$_effects$","_this$_effects$2","_effects","resizeCallbacks","gridCompatibility","lightModeEnabled","maxPagesCount","pageIndexChange","pageSizeChange","pagesCountText","pagesNavigatorVisible","showPageSizes","restAttributes","currentElementsWidth","actualAdaptivityProps","elementsWidth","setState","__state_argument","_this$props","restProps","_objectWithoutPropertiesLoose","BasePagerProps","PagerProps","getOwnPropertyDescriptors","defaultPageSize","InternalPagerProps","PAGER_INFO_CLASS","createVNode","InfoTextPropsType","InfoText","BaseInfernoComponent","_this$props$infoText","KeyboardActionContext","createContext","widgetRef","LightButtonProps","LightButton","keyboardEffect","subscribeToClick","keyboardContext","subscribeToClickEvent","PAGER_CLASS","LIGHT_MODE_CLASS","PAGER_PAGES_CLASS","PAGER_PAGE_INDEXES_CLASS","PAGER_PAGE_CLASS","PAGER_SELECTION_CLASS","PAGER_PAGE_SIZE_CLASS","PAGER_PAGE_SIZES_CLASS","PAGER_SELECTED_PAGE_SIZE_CLASS","PageProps","Page","combineClasses","_excluded2","PAGER_PAGE_SEPARATOR_CLASS","PagesMarkup","pageProps","createFragment","PAGES_LIMITER","getDelimiterType","startIndex","slidingWindowSize","createPageIndexesBySlidingWindowIndexes","slidingWindowIndexes","delimiter","pageIndexes","indexesForReuse","createPageIndexes","PagesLargePropsType","PagesLarge","canReuseSlidingWindow","generatePageIndexes","isSlidingWindowMode","onPageClick","ConfigContext","slidingWindowState","slidingWindowStateHolder","currentPageCount","currentPageNotExistInIndexes","includes","pageIndexExistInIndexes","_createPageIndexes","_this$config","createPage","rtlPageIndexes","DEFAULT_VALUE","DomComponentWrapper","componentType","LegacyNumberBox","componentProps","templateNames","NumberBoxProps","BaseWidgetProps","defaultValue","isReactComponentWrapper","NumberBox","_this$props$value","oneDigitWidth","calculateValuesFittedWidth","PAGER_INFO_TEXT_CLASS","PAGER_PAGE_INDEX_CLASS","LIGHT_PAGES_CLASS","PAGER_PAGES_COUNT_CLASS","pageIndexRef","selectLastPageIndex","valueChange","PagerSmallProps","PagesSmall","updateWidth","_this$pageIndexRef$cu","el","_this$props$pagesCoun","PAGER_NAVIGATE_BUTTON","PAGER_PREV_BUTTON_CLASS","PAGER_NEXT_BUTTON_CLASS","PAGER_BUTTON_DISABLE_CLASS","nextButtonClassName","prevButtonClassName","nextButtonDisabledClassName","prevButtonDisabledClassName","navigateToNextPage","navigateToPrevPage","nextClassName","prevClassName","renderNextButton","renderPrevButton","getIncrement","PageIndexSelectorProps","PageIndexSelectorPropsType","PageIndexSelector","getNextDirection","getPrevDirection","canNavigateToPage","getNextPageIndex","canNavigateTo","navigateToPage","_this$config2","canNavigate","LegacySelectBox","SelectBoxProps","SelectBox","PageSizeSmallPropsType","PageSizeSmall","p","pageSizesText","PageSizeLargePropsType","PageSizeLarge","__getterCache","onPageSizeChange","processedPageSize","componentWillUpdate","nextProps","nextState","htmlRef","normalizedPageSizes","getAllText","PageSizeSelectorProps","PageSizeSelectorPropsType","PageSizeSelector","setRootElementRef","infoVisible","pageIndexSelectorVisible","pagesContainerVisibility","pagesContainerVisible","widgetRootElementRef","normalizeStyles","PagerContentProps","PagerContent","createFakeInstance","getChildContext","keyboardAction","_this$props$onKeyDown","fakePagerInstance","_registerKeyboardAction","normalizedDisplayMode","classesMap","_this$props2","Pager","InfernoWrapperComponent","createReRenderEffect","__newValue","_newValue","newPageSize","_this$props$pageSize$","getProps","_wrapKeyDownHandler","_propsInfo","twoWay","allowNull","_viewComponent","PagerComponent","MAX_PAGES_COUNT","getPageIndex","PagerView","_getPager","pagerOptions","useLegacyKeyboardNavigation","_pageSizes","pagerVisible","isPager","isPaging","isDataSource","isScrolling","pagerModule","COLUMNS_SEPARATOR_CLASS","COLUMNS_SEPARATOR_TRANSPARENT","DRAGGING_HEADER_CLASS","HEADERS_DRAG_ACTION_CLASS","TRACKER_CLASS","HEADERS_DROP_HIGHLIGHT_CLASS","BLOCK_SEPARATOR_CLASS","WIDGET_CLASS","DRAGGING_COMMAND_CELL_CLASS","COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH","DRAGGING_DELTA","COLUMN_OPACITY","TrackerView","_unsubscribeFromCallback","_positionChanged","_tablePositionController","_subscribeToCallback","_setHeight","SeparatorView","_renderSeparator","_isShown","ColumnsSeparatorView","_isTransparent","columnsSeparatorTransparent","moveByX","outerX","changeCursor","cursorName","BlockSeparatorView","startAnimate","toOptions","fx","DraggingHeaderView","_isDragging","isDragging","_getDraggingPanelByPos","_dragOptions","boundingRect","_resetTargetColumnOptions","_dropOptions","targetColumnIndex","targetColumnElement","isLast","posX","posY","_getVisibleIndexObject","_columnsResizerViewController","dragHeader","isCommandColumn","sourceIndex","sourceColumnIndex","sourceColumnElement","_onSelectStart","onselectstart","drag","whiteSpace","swatchContainer","moveHeader","eventData","getEventData","dragOptions","moveDeltaX","abs","deltaX","moveDeltaY","deltaY","newLeft","newTop","dockHeader","targetDraggingPanel","isVerticalOrientation","axisName","pointsByTarget","pointsByColumns","_generatePointsByColumns","centerPosition","dock","dropHeader","drop","isNextColumnResizingMode","ColumnsResizerViewController","_isHeadersRowArea","headersRowHeight","_isRtlParentStyle","_this$_$parentContain","_$parentContainer","_pointCreated","isNextColumnMode","isRtlParentStyle","firstPointColumnIndex","nextColumn","_getTargetPoint","currentX","_moveSeparator","_that$_draggingHeader","columnsSeparatorWidth","_columnsSeparatorView","parentOffset","parentOffsetLeft","_draggingHeaderView","_isResizing","_resizingInfo","_updateColumnsWidthIfNeeded","currentColumnIndex","outerWidth","_previousParentOffset","_isReadyResizing","_trackerView","_getNextColumnIndex","_setupResizingInfo","nextColumnIndex","currentHeader","nextHeader","startPosX","currentColumnWidth","nextColumnWidth","isTouchEvent","_pointsByColumns","_unsubscribeFromEvents","_moveSeparatorHandler","_startResizingHandler","_endResizingHandler","_subscribeToEvents","nextCellWidth","cellWidth","needUpdate","resizingInfo","setColumnWidth","oldColumnWidth","allColumnsHaveWidth","totalPercent","hasScroll","_subscribesToCallbacks","_unsubscribeFromCallbacks","subscribe","_unsubscribes","generatePointsByColumnsHandler","generatePointsByColumnsScrollHandler","previousScrollbarVisibility","previousTableHeight","scrollbarVisibility","TablePositionViewController","diffOffsetTop","columnsHeadersHeight","scrollBarWidth","columnsResizerController","draggingHeaderView","isDraggingOrResizing","_pagerView","targetPoint","DraggingHeaderViewController","draggingHeader","nameDraggingPanel","subscribeToEvents","dragEventStart","dragEventMove","dragEventEnd","_getSeparator","_blockSeparatorView","hideSeparators","blockSeparator","columnsSeparator","_animationColumnIndex","_headerPanelView","_columnChooserView","allowDrop","headersView","separator","hasTargetVisibleIndex","columnsResizingReorderingModule","columnsSeparatorView","blockSeparatorView","trackerView","tablePosition","GROUP_FOOTER_CLASS","FREESPACE_ROW_CLASS","COMMAND_CELL_SELECTOR","DATEBOX_WIDGET_NAME","FAST_EDITING_DELETE_KEY","INTERACTIVE_ELEMENTS_SELECTOR","NON_FOCUSABLE_ELEMENTS_SELECTOR","FOCUS_TYPE_ROW","FOCUS_TYPE_CELL","COLUMN_HEADERS_VIEW","isNotFocusedRow","isCellElement","_isRowEditMode","isElementDefined","isMobile","isCellInHeaderRow","isFixedColumnIndexOffsetRequired","shouldPreventScroll","_isVirtualScrolling","KeyboardNavigationController","_selectionController","_updateFocusTimeout","_fastEditingStarted","_focusedCellPosition","_canceledCellPosition","setupFocusedView","_isNeedScroll","_focusedView","_initViewHandlers","_initDocumentHandlers","rowsViewFocusHandler","isRelatedTargetInRowsView","isCommandButton","_isEventInCurrentGrid","$focusedCell","_getFocusedCell","$rowsView","isFocusedViewCorrect","needUpdateFocus","isFocusedElementCorrect","_initPointerEventHandler","_initKeyDownHandler","_setRowsViewAttributes","_isNeedFocus","_isHiddenFocus","isCurrentRowsViewClick","isEditorOverlay","isColumnResizing","targetInsideFocusedView","_resetFocusedCell","_resetFocusedView","_getRowsViewElement","isGridEmpty","_applyTabIndexToElement","pointerEventName","clickSelector","_pointerEventAction","_pointerEventHandler","keyboard","_keyDownListener","_keyDownHandler","isRowFocusType","focusType","isCellFocusType","setRowFocusType","setCellFocusType","needStopPropagation","_processOnKeyDown","isDefaultPrevented","_updateFocusedCellPositionByTarget","_leftRightKeysHandler","ctrl","_upDownKeysHandler","_pageUpDownKeyHandler","_spaceKeyHandler","_ctrlAKeyHandler","_beginFastEditing","_tabKeyHandler","_enterKeyHandler","_escapeKeyHandler","_ctrlFKeyHandler","_f2KeyHandler","_isFastEditingAllowed","_isFastEditingStarted","alt","altKey","_closeEditCell","getVisibleRowIndex","$event","directionCode","_getDirectionCodeByKey","isEditingNavigationMode","allowNavigate","_isVirtualColumnRender","_processVirtualHorizontalPosition","_getNextCell","_arrowKeysHandlerFocusCell","isUpArrow","_navigateNextCell","_isVirtualRowRender","_scrollBy","isPageUp","pageStep","isFocusedRowElement","_getElementType","isFocusedSelectionCell","isCellPositionDefined","isOriginalHandlerRequired","_isLastValidCell","_isFirstValidCell","eventTarget","focusedViewElement","_handleTabKeyOnMasterDetailCell","_editingCellTabHandler","_targetCellTabHandler","_getMaxHorizontalOffset","_isColumnRendered","allVisibleColumns","renderedVisibleColumns","_isFixedColumn","_isColumnVirtual","localColumnIndex","getColumnIndex","horizontalScrollPosition","needToScroll","_getVisibleColumnCount","leftEdgePosition","_getHorizontalScrollPositionOffset","scrollBy","positionOffset","$currentCell","_getCell","currentCellWidth","rtlMultiplier","isEditingAllowed","_getCellElementFromTarget","elementType","_updateFocusedCellPosition","nextCellInfo","_getNextCellByTabKey","_getRowIndex","_isDataRow","_focusCell","isHighlighted","_editFocusedCell","_focusInteractiveElement","$lastInteractiveElement","_getInteractiveElement","getFirstValidCellInRow","_checkNewLineTransition","_fireFocusedCellChanging","$newCellElement","_getCellPosition","_fireFocusedRowChanging","rowIndexChanged","setFocusedColumnIndex","_processEnterKeyForDataCell","_getEnterKeyDirection","allowEditingOnEnterKey","_allowEditingOnEnterKey","_handleEnterKeyEditingCell","_startEditing","isShift","_focusEditFormCell","searchTextEditor","keyCode","isCellValid","_isCellValid","$nextCell","isVerticalDirection","_fireFocusChangingEvents","_focus","isDeleting","fastEditingKey","fromCharCode","isInteractiveElement","isExpandCommandCell","_isInsideEditForm","_focusView","_isMasterDetailCell","_clickTargetCellHandler","_isCellEditMode","setFocusedRowIndex","prevRowIndex","resetFocusedRow","_resetFocusedRow","_allowRowUpdating","skipFocusEvent","isEditor","isDisabled","activeElementSelector","_focusElement","getFocusedView","rowsViewElement","$focusedView","_getFocusedViewByElement","$view","disableFocus","$focusElement","focusedView","isRowFocus","isRenderView","_hasSkipRow","_checkCellOverlapped","$focusedElementInsideCell","isFocusedElementDefined","cellOffset","hasScrollable","isOverlapped","_this$_focusedCellPos","setFocusedCellPosition","_getFocusedColumnIndexOffset","_getFixedColumnIndexOffset","_applyColumnIndexBoundaries","preventScroll","_this$_focusedView","renderFocusState","restoreFocusableElement","newRowIndex","_getNewPositionByCode","code","visibleColumnsCount","_hasValidCellAfterPosition","_isLastRow","_hasValidCellBeforePosition","_isCellByPositionValid","getMaxRowIndex","isFirstValidCell","hasValidCells","checkingPosition","visibleColumnCount","isLastRow","isClick","isShowWhenGrouped","isDataCell","rowItems","isRowEditingInCurrentRow","_isLegacyNavigation","$result","focusedCellPosition","includeCommandCells","newFocusedCellPosition","isLastCellOnDirection","_isCellInRow","visibleColumnIndex","_isAllowEditing","_startEditCell","colIndex","editResult","_editingCellHandler","editorValue","_$input$get$select","_$input$get","$input","keyDownEvent","createEvent","keyPressEvent","inputEvent","val","$widgetContainer","fireRowEvent","newColumnIndex","prevCellIndex","prevColumnIndex","_fireFocusedCellChanged","localRowIndex","$newFocusedRow","prevFocusedRowIndex","_fireFocusedRowChanged","getFocusedRowIndexByKey","$masterDetailCell","$masterDetailGrid","_processNextCellInMasterDetail","_processCanceledEditCellPosition","isCanceled","updateFocusedRowIndex","lastVisibleIndex","keyboardNavigationModule","needTriggerPointerEventHandler","_triggerPointerDownEventHandler","cellElements","updateFocusElementTabIndex","_updateFocusedCellTabIndex","cellElementsLength","updateCellTabIndex","isMasterDetailCell","isValidCell","_renderFocusByChange","editorInstance","_getEditorInstance","_handleEditingNavigationMode","originalKeyHandler","isDropDownOpened","isDateBoxWithMask","keyboardNavigationController","_keyboardNavigationController","getRowIndexCorrection","focusedRowIndexCorrection","adaptiveColumns","_showHiddenCellsInView","_hideVisibleCellInView","depthFirstSearch","depth","root","array","isCount","aggregator","aggregators","normalizeAggregate","aggregate","_data","_groupLevel","_totalAggregates","totalAggregates","_groupAggregates","groupAggregates","_totals","calculate","_calculateTotals","_calculateGroups","_aggregate","aggregates","_accumulate","_seed","_finalize","maxLevel","seedFn","stepFn","finalizeFn","innerNode","seed","NaN","aggregateIndex","step","fin","finalize","DATAGRID_TOTAL_FOOTER_CLASS","DATAGRID_SUMMARY_ITEM_CLASS","DATAGRID_TEXT_CONTENT_CLASS","DATAGRID_GROUP_FOOTER_CLASS","DATAGRID_GROUP_TEXT_CONTENT_CLASS","DATAGRID_NOWRAP_CLASS","DATAGRID_GROUP_FOOTER_ROW_TYPE","renderSummaryCell","$summaryItems","getSummaryCellOptions","getGroupAggregates","FooterView","footerItems","needUpdateScrollLeft","$newTable","$newRow","totalColumnIndices","SummaryDataSourceAdapterExtender","_summaryGetter","summaryGetter","_summary","sortByGroupsInfo","sortByGroups","groupedItems","forEachGroup","itemsPath","SummaryDataSourceAdapterClientExtender","calculateAggregates","calculator","insertedData","applyAddedData","removedData","applyRemovedData","updatedData","updatedItems","set","AggregateCalculator","sortGroupsBySummary","sortGroupsBySummaryCore","sortBy","thenBy","sortedItems","totalSummary","_options$cachedData$e","hasOperations","_isDataColumn","_isGroupFooterVisible","isGroupFooterVisible","summaryGroupItems","afterGroupColumnIndex","_calculateSummaryCells","calculateTargetColumnIndex","summaryCellsByColumns","summaryIndex","_getSummaryCells","summaryTotalItems","_footerItems","oldSummaryCells","summaryCell","_prepareUnsavedDataSelector","_prepareAggregateSelector","_getAggregates","commonSkipEmptyValues","summaryProcess","totalValue","_addSortInfo","_findSummaryItem","summaryItemIndex","_getSummarySortByGroups","groupSummaryItems","currentRemoteOperations","_getSummaryOptions","totalSummaryItems","methods","getTotalSummaryValue","summaryItemName","_refreshSummary","_renderGroupSummaryCells","_hasAlignByColumnSummaryItems","_getAlignByColumnCellCount","groupCellColSpan","alignByColumnCellCount","$groupCell","_renderGroupSummaryCellsCore","_getSummaryCellIndex","FIRST_CELL_CLASS","LAST_CELL_CLASS","HOVER_STATE_CLASS","FIXED_COL_CLASS","FIXED_COLUMNS_CLASS","POINTER_EVENTS_NONE_CLASS","getTransparentColumnIndex","normalizeColumnWidths","fixedWidths","fixedColumnIndex","baseFixedColumns","_isFixedColumns","_correctColumnIndicesForFixedColumns","_partialUpdateFixedTable","fixedTableElement","_fixedTableElement","childNodes","$fixedTable","fixedCorrection","fixedCells","prevFixedColumn","columnCommand","isRowAltStyle","isEmptyCell","isFixedTableRendering","isGroupCell","alignByFixedColumnCellCount","headerRowIndex","fixedCellElements","fixedColumn","getFixedColumnsOffset","$transparentColumn","getTransparentColumnElement","positionTransparentColumn","getFixedTableElement","synchronizeRows","isWidthsSynchronized","isColumnWidthChanged","useVisibleColumns","_getClientHeight","boundingClientRectElement","$fixedRowElements","fixedRowHeights","heightTable","heightFixedTable","fixedRowHeight","ColumnHeadersViewFixedColumnsExtender","columnFixingOptions","getFixedColumnElements","$transparentColumnElement","$fixedColumnElements","RowsViewFixedColumnsExtender","_detachHoverEvents","_attachHoverEvents","attachHoverEvent","isHover","contentClass","scrollDelay","_fixedScrollTimeout","wheelEventName","$nearestScrollable","shouldScroll","nearestScrollableInstance","nearestScrollableHasVerticalScrollbar","_updateFixedTablePosition","needFocus","vWidth","hWidth","styles","$fixedContent","_getElasticScrollTop","elasticScrollTop","reachedBottom","scrollableContent","$scrollableContainer","maxScrollTop","_applyElasticScrolling","move","FooterViewFixedColumnsExtender","columnFixingModule","normalizeColumnIndicesByPoints","correctIndex","pointsByFixedColumns","_pointsByFixedColumns","isWidgetResizingMode","ROWS_VIEW","FOOTER_VIEW","COLUMN_VIEWS","ADAPTIVE_NAMESPACE","ADAPTIVE_ROW_TYPE","FORM_ITEM_CONTENT_CLASS","FORM_ITEM_MODIFIED","HIDDEN_COLUMN_CLASS","ADAPTIVE_COLUMN_BUTTON_CLASS","ADAPTIVE_COLUMN_NAME_CLASS","COMMAND_ADAPTIVE_HIDDEN_CLASS","ADAPTIVE_DETAIL_ROW_CLASS","ADAPTIVE_ITEM_TEXT_CLASS","LAST_DATA_CELL_CLASS","ADAPTIVE_COLUMN_NAME","EXPAND_ARIA_NAME","COLLAPSE_ARIA_NAME","getDataCellElements","adaptiveCellTemplate","$adaptiveColumnButton","adaptiveColumnsController","toggleExpandAdaptiveDetailRow","AdaptiveColumnsController","_getEditMode","_isItemModified","_renderFormViewTemplate","focusAction","renderFormTemplate","isItemEdited","_isItemEdited","_isVisibleColumnsValid","_calculatePercentWidths","percentWidths","_getItemPercentWidth","_isPercentWidth","_isColumnHidden","_hiddenColumns","hiddenColumn","columnsCanFit","fixedColumnsWidth","columnsWithoutFixedWidthCount","_calculatePercentWidth","_calculateColumnWidth","contentColumns","colWidth","widthOption","columnFitted","partialWidth","resultWidth","_getNotTruncatedColumnWidth","_getCommandColumnsWidth","adaptiveExpandedKey","_getFormItemsByHiddenColumns","hiddenColumns","_getAdaptiveColumnVisibleIndex","_hideAdaptiveColumn","_hideVisibleColumn","cssClassNameToRemove","_showHiddenColumns","$hiddenCommandCells","$hiddenCells","_hideVisibleColumnInView","rowsCount","cancelClassAdding","currentVisibleIndex","_findCellElementInRow","$rowCells","cellIsInsideGroup","groupCellLength","endGroupIndex","cssClassNameToAdd","hideRedundantColumns","hiddenQueue","hasHiddenColumns","needHideColumn","rootElementWidth","getVisibleContentColumns","visibleContentColumns","contentColumnsCount","columnBestFitWidth","getItemContentByColumnIndex","$itemContent","_$itemContents","alwaysExpanded","createFormByHiddenColumns","userFormOptions","defaultFormOptions","formOptions","_form","updateForm","hasAdaptiveDetailRowExpanded","_contentReadyAction","updateHidingQueue","columnsHasHidingPriority","hideableColumns","_hidingColumnsQueue","getHiddenColumns","getHidingColumnsQueue","adaptiveHidden","isAdaptiveVisible","isAdaptiveDetailRowExpanded","expandAdaptiveDetailRow","collapseAdaptiveDetailRow","updateCommandAdaptiveAriaLabel","setCommandAdaptiveAriaLabel","labelName","$adaptiveCommand","adaptivityModule","_adaptiveColumnsController","hidingColumnsQueueLength","hiddenColumnsLength","isClickable","_updateColumnWidth","hasHiddenColumnsOnly","hasAdaptiveHiddenWidth","$itemContents","_adaptiveController","oldExpandRowIndex","_isForceRowAdaptiveExpand","_collapseAdaptiveDetailRow","_cancelEditAdaptiveDetailRow","expandedKey","_adaptiveExpandedKey","adaptiveController","oldHiddenColumns","hidingColumnsQueue","_updateScrollableTimeoutID","expandRowIndex","lastRowIndex","oldExpandLoadedRowIndex","newExpandLoadedRowIndex","oldKey","isCellOrBatchMode","focusHandler","$dataCells","isCellElementsEquals","foreachColumnInfo","offsets","lastProcessedIndexes","processedColumnCount","createColumnsInfo","endIndex","newInfo","columnInfo","cellColspan","DEFAULT_COLUMN_WIDTH","setScrollPosition","HeaderViewExtender","ColumnsControllerExtender","getWidths","_beginPageIndex","_endPageIndex","_virtualVisibleColumns","currentPosition","getColumnPageSize","getTotalWidth","_fireColumnsChanged","_changedTimeout","_setScrollPositionCore","needColumnsChanged","visibleColumnsHash","beginFixedColumnCount","beginFixedColumns","beginColumns","beginWidth","endFixedColumnCount","endFixedColumns","endColumns","endWidth","columnsInfo","leftFixedColumnCount","virtualColumnsModule","columnPageSize","columnRenderingThreshold","_getEmptyCell","_defaultSetter","_cloneItem","_prepareItems","cols","_c","BUTTON_GROUP_CLASS","BUTTON_GROUP_WRAPPER_CLASS","BUTTON_GROUP_ITEM_CLASS","BUTTON_GROUP_FIRST_ITEM_CLASS","BUTTON_GROUP_LAST_ITEM_CLASS","BUTTON_GROUP_ITEM_HAS_WIDTH","SHAPE_STANDARD_CLASS","ButtonCollection","CollectionWidget","_initTemplates","_templateManager","addDefaultTemplates","BindableTemplate","_prepareItemStyles","_getBasicButtonOptions","_templateData","_hasCustomTemplate","stylingMode","itemTemplateProperty","_renderItemContent","_renderItemContentByNode","_keyboardEventBindingTarget","_refreshContent","_prepareContent","_itemClass","_itemSelectHandler","ButtonGroup","buttonTemplate","_createItemClickAction","_itemClickAction","_renderButtons","_syncSelectionOptions","_fireSelectionChangeEvent","removedItems","$buttons","selectionRequired","_buttonsCollection","itemElements","DROP_DOWN_BUTTON_CLASS","DROP_DOWN_BUTTON_CONTENT","DROP_DOWN_BUTTON_ACTION_CLASS","DROP_DOWN_BUTTON_TOGGLE_CLASS","DROP_DOWN_BUTTON_HAS_ARROW_CLASS","DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS","DROP_DOWN_EDITOR_OVERLAY_CLASS","DX_BUTTON_TEXT_CLASS","DX_ICON_RIGHT_CLASS","DropDownButton","selectedItemKey","useSelectMode","splitButton","showArrowIcon","onButtonClick","opened","dropDownOptions","dropDownContentTemplate","wrapItemText","useItemTextAsTitle","groupTemplate","buttonGroupOptions","_createActionClickAction","_createSelectionChangedAction","_compileKeyGetter","_compileDisplayGetter","_itemsToDataSource","_options","cache","FunctionTemplate","$listContainer","_list","_listOptions","_escHandler","_getKey","storeKey","_keyGetter","_displayGetter","_renderButtonGroup","_updateArrowClass","_loadSelectedItem","_updateActionButton","_renderFocusTarget","_renderPopup","_popup","_renderPopupContent","_this$_loadSingleDefe","_loadSingleDeferred","_lastSelectedItemData","cachedResult","_loadSingle","_actionClickAction","_selectionChangedAction","_fireSelectionChangedAction","previousItem","_fireItemClickAction","_actionItem","_actionButtonConfig","_getButtonGroupItems","_buttonGroupItemClick","isActionButton","isToggleButton","_buttonGroupOptions","buttonContent","$firstIcon","getImageContainer","$textContainer","$secondIcon","onKeyboardHandled","_getTemplateByOption","_popupContentId","_popupOptions","horizontalAlignment","$buttonClicked","actionResult","_buttonGroup","_upDownKeyHandler","open","close","_tabHandler","_popupHidingHandler","_popupShowingHandler","_bindInnerWidgetOptions","_setAriaExpanded","_popupOptionChanged","_setPopupOption","optionsKeys","popupWidth","getSizeValue","_setWidgetOption","_ariaExpandedElements","ariaElement","owns","$buttonGroup","buttonElements","hasArrow","_setListOption","_getDisplayValue","isPrimitiveItem","_selectedItemKeyChanged","_actionButtonOptionChanged","newConfig","_selectModeChanged","_updateItemCollection","_updateDataSource","_updateKeyExpr","_this$_popup","_innerWidgetOptionChanged","DATAGRID_EXPORT_MENU_CLASS","DATAGRID_EXPORT_BUTTON_CLASS","DATAGRID_EXPORT_TOOLBAR_BUTTON_NAME","DATAGRID_EXPORT_ICON","DATAGRID_EXPORT_EXCEL_ICON","DATAGRID_EXPORT_SELECTED_ICON","DATAGRID_EXPORT_EXCEL_BUTTON_ICON","DataProvider","initialColumnWidthsByColumnIndex","selectedRowsOnly","_exportController","_initialColumnWidthsByColumnIndex","_selectedRowsOnly","_getGroupValue","_correctCellIndex","_initOptions","_getColumns","_selectionOnly","_getSelectedItems","_getAllItems","isHeadersVisible","wrapTextEnabled","hasCustomizeExcelCell","cellSourceData","gridCell","getHeaderStyles","bold","wrapText","getGroupRowStyle","getColumnStyles","columnStyles","getStyles","_getTotalCellStyleId","_this$getColumns$cell","getStyleId","getHeaderRowCount","isTotalCell","getColumnsByAllRows","getColumnsWidths","getGroupLevel","getCellType","ready","_convertFromGridGroupSummaryItems","gridGroupSummaryItems","getCellData","isExcelJS","correctedCellIndex","columnsRow","gridColumn","itemValues","totalSummaryItemName","_value","correctCellIndex","isSummaryAlignByColumn","getCellMerging","exportColspan","getFrozenArea","ExportController","exportMixin","currentHeaderRow","columnWidthsByColumnIndex","_getColumnWidths","_headersView","_needColumnExporting","currentColspan","_calculateExportColspan","childColumns","childColumn","_getFooterSummaryItems","isTotal","estimatedItemsCount","_hasSummaryGroupFooters","_getItemsWithSummaryGroupFooters","sourceItems","beforeGroupFooterItems","groupFooterItems","_updateGroupValuesWithSummaryByColumn","summaryValues","groupColumnCount","k","merge","_processUnExportedItems","isDetailExpandColumn","selectedRowData","getExportFormat","getDataProvider","columnsLastRowVisibleColumns","exportToExcel","clientExport","autoFilterEnabled","ignoreErrors","exportingAction","exportedAction","fileSavingAction","excel","_isSelectedRows","callbackList","exportButton","_getExportToolbarButton","_correctItemsPosition","_getExportToolbarItems","toolbarButtonOptions","_widgetOptions","_index","exportOptions","itemA","itemB","_isExportButtonVisible","_getButtonOptions","allowExportSelected","ROW_FOCUSED_CLASS","TABLE_POSTFIX_CLASS","FocusController","_keyboardController","_focusRowByIndex","_triggerFocusedRowChangedIfNeed","_focusRowByKey","focusedRowIndexByKey","isAutoNavigateToFocusedRow","_focusRowByIndexCore","setKeyByIndex","_isValidFocusedRowIndex","_getLastItemIndex","isRowFocused","_isLocalRowIndex","isVirtualScrolling","virtualItems","virtualItemsBegin","visibleRowsCount","visiblePagesCount","_setFocusedRowKeyByIndex","_navigateToRow","isFocusedRowKeyDefined","needFocusRow","isAutoNavigate","rowIndexByKey","_navigateTo","getPageIndexByKey","isVirtualRowRenderingMode","_navigateToVirtualRow","_navigateToVisibleRow","_triggerUpdateFocusedRow","scrollToRowElement","triggerUpdateFocusedRow","scrollTopPosition","_focusRowByKeyOrIndex","currentFocusedRowIndex","updateFocusedRow","isMainTable","_clearPreviousFocusedRow","_prepareFocusedRow","changedItem","$prevRowFocusedElement","focusedRow","$focusedRowTable","$firstRow","scrollToElementVertically","focusModule","visibleRow","isRowElement","sortByKey","notSortedKeys","notSortedKey","isPartialUpdate","isPartialUpdateWithDeleting","_updatePageIndexes","processUpdateFocusedRow","prevRenderingPageIndex","_lastRenderingPageIndex","renderingPageIndex","_isPagingByRendering","isPagingByRendering","isValidRowIndexByKey","needFocusRowByIndex","getGlobalRowIndexByKey","_calculateGlobalRowIndexByGroupedData","_calculateGlobalRowIndexByFlatData","groupFilter","useGroup","_generateFilterByKey","_concatWithCombinedFilter","_generateOperationFilterByKey","_generateBooleanFilter","sortInfo","isBoolean","booleanFilter","sortFilter","dataSourceKey","keyPart","_setFocusedRowElementTabIndex","_findRowElementForTabIndex","_scrollToFocusOnResize","getScrollElementPosition","currentScrollTop","isRowClick","_isFocusedRowInsideGroup","_getGroupPath","groupPath","_expandGroupByPath","isGroupKey","_calculateExpandedRowGlobalIndex","dataOffset","groupContinuationCount","currentPageOffset","COMMAND_HANDLE_CLASS","HANDLE_ICON_CLASS","SORTABLE_WITHOUT_HANDLE_CLASS","RowDraggingExtender","_updateHandleColumn","_allowReordering","isHandleColumnVisible","_getHandleTemplate","sortableName","sortableFixedName","currentSortableName","anotherSortableName","togglePointerEventsStyle","_this$sortableFixedNa","Sortable","_getDraggableRowTemplate","_rowDragging$onDragSt","onDragEnter","onDragLeave","_rowDragging$onDragEn","_rowDragging$onAdd","hasFixedSortable","_updateSortable","_sortable","_sortableFixed","sortable","_getDraggableGridOptions","gridOptions","$dataGridContainer","rowDraggingModule"],"sourceRoot":""}