{"version":3,"file":"js/144-legacy.9181526d.js","mappings":"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","sources":["webpack://siforeca/./node_modules/core-js/modules/es.number.max-safe-integer.js","webpack://siforeca/./node_modules/devextreme-vue/data-grid.js","webpack://siforeca/./node_modules/devextreme/esm/data/data_source.js","webpack://siforeca/./node_modules/devextreme/esm/data/odata/utils.js","webpack://siforeca/./node_modules/devextreme/esm/data/odata/query_adapter.js","webpack://siforeca/./node_modules/devextreme/esm/data/odata/request_dispatcher.js","webpack://siforeca/./node_modules/devextreme/esm/data/odata/store.js","webpack://siforeca/./node_modules/devextreme/esm/ui/shared/filtering.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.utils.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.modules.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.column_state_mixin.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.columns_view.js","webpack://siforeca/./node_modules/devextreme/esm/ui/shared/accessibility.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.accessibility.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.column_headers.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.column_headers.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.columns_controller.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.columns_controller.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.data_source_adapter.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.data_source_adapter.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.data_controller.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.data_controller.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.sorting_mixin.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.sorting.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.sorting.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.rows.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.rows.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.context_menu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.context_menu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.error_handling.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.error_handling.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.grid_view.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grid_view.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.header_panel.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.header_panel.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.base.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.state_storing_core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.state_storing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.state_storing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.selection.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.selection.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.column_chooser.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.column_chooser.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grouping.core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.utils.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grouping.expanded.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grouping.collapsed.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grouping.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.master_detail.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.master_detail.js","webpack://siforeca/./node_modules/devextreme/esm/ui/shared/ui.editor_factory_mixin.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editor_factory.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editor_factory.js","webpack://siforeca/./node_modules/devextreme/esm/ui/dialog.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing_constants.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing_row_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editing_row_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing_form_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editing_form_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing_cell_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editing_cell_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.validating.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.validating.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid.core.virtual_data_loader.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_scrolling_core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_scrolling.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.virtual_scrolling.js","webpack://siforeca/./node_modules/devextreme/esm/ui/overlay/utils.js","webpack://siforeca/./node_modules/devextreme/esm/ui/menu/ui.submenu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/menu/ui.menu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/menu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_row.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.filter_row.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.header_filter_core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.header_filter.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.header_filter.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder/between.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder/ui.filter_operations_dictionary.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder/utils.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_custom_operations.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_sync.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.filter_sync.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder/filter_builder.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_builder.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.filter_builder.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_panel.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.filter_panel.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.search.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.search.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/component_wrapper/grid_pager.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/utils/type_conversion.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/utils/get_element_width.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/resizable_container.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/base_pager_props.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/pager_props.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/info.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/keyboard_action_context.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/light_button.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/consts.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pages/page.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pages/large.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/editors/number_box.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/utils/calculate_values_fitted_width.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pages/small.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pages/page_index_selector.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/editors/drop_down_editors/select_box.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/page_size/small.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/page_size/large.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/page_size/selector.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/content.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pager.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pager.j.js","webpack://siforeca/./node_modules/devextreme/esm/ui/pager.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.pager.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.pager.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.columns_resizing_reordering.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.columns_resizing_reordering.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.keyboard_navigation.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/aggregate_calculator.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.keyboard_navigation.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.summary.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.column_fixing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.column_fixing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.adaptivity.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_columns_core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.adaptivity.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_columns.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.virtual_columns.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.export_mixin.js","webpack://siforeca/./node_modules/devextreme/esm/ui/button_group.js","webpack://siforeca/./node_modules/devextreme/esm/ui/drop_down_button.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.export.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.focus.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.focus.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.row_dragging.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.row_dragging.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid.js"],"sourcesContent":["var $ = require('../internals/export');\n\n// `Number.MAX_SAFE_INTEGER` constant\n// https://tc39.es/ecma262/#sec-number.max_safe_integer\n$({ target: 'Number', stat: true }, {\n  MAX_SAFE_INTEGER: 0x1FFFFFFFFFFFFF\n});\n","/*!\n * devextreme-vue\n * Version: 21.2.6\n * Build date: Tue Mar 01 2022\n *\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-vue\n */\n\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DxLookup = exports.DxLoadPanel = exports.DxLabel = exports.DxKeyboardNavigation = exports.DxItem = exports.DxHide = exports.DxHeaderFilter = exports.DxGroupPanel = exports.DxGroupOperationDescriptions = exports.DxGroupItem = exports.DxGroupingTexts = exports.DxGrouping = exports.DxFrom = exports.DxFormItem = exports.DxFormat = exports.DxForm = exports.DxFilterRow = exports.DxFilterPanelTexts = exports.DxFilterPanel = exports.DxFilterOperationDescriptions = exports.DxFilterBuilderPopup = exports.DxFilterBuilder = exports.DxFieldLookup = exports.DxField = exports.DxExportTexts = exports.DxExport = exports.DxEmailRule = exports.DxEditingTexts = exports.DxEditing = exports.DxDataGridHeaderFilterTexts = exports.DxDataGridHeaderFilter = exports.DxCustomRule = exports.DxCustomOperation = exports.DxCursorOffset = exports.DxCompareRule = exports.DxColumnLookup = exports.DxColumnHeaderFilter = exports.DxColumnFixingTexts = exports.DxColumnFixing = exports.DxColumnChooser = exports.DxColumn = exports.DxCollision = exports.DxColCountByScreen = exports.DxChange = exports.DxButton = exports.DxBoundaryOffset = exports.DxAt = exports.DxAsyncRule = exports.DxAnimation = exports.DxDataGrid = void 0;\nexports.DxValueFormat = exports.DxValidationRule = exports.DxTotalItem = exports.DxToolbarItem = exports.DxToolbar = exports.DxTo = exports.DxTexts = exports.DxSummaryTexts = exports.DxSummary = exports.DxStringLengthRule = exports.DxStateStoring = exports.DxSorting = exports.DxSortByGroupSummaryInfo = exports.DxShow = exports.DxSelection = exports.DxSearchPanel = exports.DxScrolling = exports.DxRowDragging = exports.DxRequiredRule = exports.DxRemoteOperations = exports.DxRangeRule = exports.DxPosition = exports.DxPopup = exports.DxPatternRule = exports.DxPaging = exports.DxPager = exports.DxOperationDescriptions = exports.DxOffset = exports.DxNumericRule = exports.DxMy = exports.DxMasterDetail = void 0;\nvar data_grid_1 = __importDefault(require(\"devextreme/ui/data_grid\"));\nvar index_1 = require(\"./core/index\");\nvar index_2 = require(\"./core/index\");\nvar DxDataGrid = index_1.createComponent({\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        allowColumnReordering: Boolean,\n        allowColumnResizing: Boolean,\n        autoNavigateToFocusedRow: Boolean,\n        cacheEnabled: Boolean,\n        cellHintEnabled: Boolean,\n        columnAutoWidth: Boolean,\n        columnChooser: Object,\n        columnFixing: Object,\n        columnHidingEnabled: Boolean,\n        columnMinWidth: Number,\n        columnResizingMode: String,\n        columns: Array,\n        columnWidth: [Number, String],\n        customizeColumns: Function,\n        customizeExportData: Function,\n        dataRowTemplate: {},\n        dataSource: [Array, Object, String],\n        dateSerializationFormat: String,\n        disabled: Boolean,\n        editing: Object,\n        elementAttr: Object,\n        errorRowEnabled: Boolean,\n        export: Object,\n        filterBuilder: Object,\n        filterBuilderPopup: Object,\n        filterPanel: Object,\n        filterRow: Object,\n        filterSyncEnabled: [Boolean, String],\n        filterValue: [Array, Function, String],\n        focusedColumnIndex: Number,\n        focusedRowEnabled: Boolean,\n        focusedRowIndex: Number,\n        focusedRowKey: {},\n        focusStateEnabled: Boolean,\n        grouping: Object,\n        groupPanel: Object,\n        headerFilter: Object,\n        height: [Function, Number, String],\n        highlightChanges: Boolean,\n        hint: String,\n        hoverStateEnabled: Boolean,\n        keyboardNavigation: Object,\n        keyExpr: [Array, String],\n        loadPanel: Object,\n        masterDetail: Object,\n        noDataText: String,\n        onAdaptiveDetailRowPreparing: Function,\n        onCellClick: Function,\n        onCellDblClick: Function,\n        onCellHoverChanged: Function,\n        onCellPrepared: Function,\n        onContentReady: Function,\n        onContextMenuPreparing: Function,\n        onDataErrorOccurred: Function,\n        onDisposing: Function,\n        onEditCanceled: Function,\n        onEditCanceling: Function,\n        onEditingStart: Function,\n        onEditorPrepared: Function,\n        onEditorPreparing: Function,\n        onExported: Function,\n        onExporting: Function,\n        onFileSaving: Function,\n        onFocusedCellChanged: Function,\n        onFocusedCellChanging: Function,\n        onFocusedRowChanged: Function,\n        onFocusedRowChanging: Function,\n        onInitialized: Function,\n        onInitNewRow: Function,\n        onKeyDown: Function,\n        onOptionChanged: Function,\n        onRowClick: Function,\n        onRowCollapsed: Function,\n        onRowCollapsing: Function,\n        onRowDblClick: Function,\n        onRowExpanded: Function,\n        onRowExpanding: Function,\n        onRowInserted: Function,\n        onRowInserting: Function,\n        onRowPrepared: Function,\n        onRowRemoved: Function,\n        onRowRemoving: Function,\n        onRowUpdated: Function,\n        onRowUpdating: Function,\n        onRowValidating: Function,\n        onSaved: Function,\n        onSaving: Function,\n        onSelectionChanged: Function,\n        onToolbarPreparing: Function,\n        pager: Object,\n        paging: Object,\n        remoteOperations: [Boolean, Object, String],\n        renderAsync: Boolean,\n        repaintChangesOnly: Boolean,\n        rowAlternationEnabled: Boolean,\n        rowDragging: Object,\n        rowTemplate: {},\n        rtlEnabled: Boolean,\n        scrolling: Object,\n        searchPanel: Object,\n        selectedRowKeys: Array,\n        selection: Object,\n        selectionFilter: [Array, Function, String],\n        showBorders: Boolean,\n        showColumnHeaders: Boolean,\n        showColumnLines: Boolean,\n        showRowLines: Boolean,\n        sortByGroupSummaryInfo: Array,\n        sorting: Object,\n        stateStoring: Object,\n        summary: Object,\n        tabIndex: Number,\n        toolbar: Object,\n        twoWayBindingEnabled: Boolean,\n        visible: Boolean,\n        width: [Function, Number, String],\n        wordWrapEnabled: Boolean\n    },\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:allowColumnReordering\": null,\n        \"update:allowColumnResizing\": null,\n        \"update:autoNavigateToFocusedRow\": null,\n        \"update:cacheEnabled\": null,\n        \"update:cellHintEnabled\": null,\n        \"update:columnAutoWidth\": null,\n        \"update:columnChooser\": null,\n        \"update:columnFixing\": null,\n        \"update:columnHidingEnabled\": null,\n        \"update:columnMinWidth\": null,\n        \"update:columnResizingMode\": null,\n        \"update:columns\": null,\n        \"update:columnWidth\": null,\n        \"update:customizeColumns\": null,\n        \"update:customizeExportData\": null,\n        \"update:dataRowTemplate\": null,\n        \"update:dataSource\": null,\n        \"update:dateSerializationFormat\": null,\n        \"update:disabled\": null,\n        \"update:editing\": null,\n        \"update:elementAttr\": null,\n        \"update:errorRowEnabled\": null,\n        \"update:export\": null,\n        \"update:filterBuilder\": null,\n        \"update:filterBuilderPopup\": null,\n        \"update:filterPanel\": null,\n        \"update:filterRow\": null,\n        \"update:filterSyncEnabled\": null,\n        \"update:filterValue\": null,\n        \"update:focusedColumnIndex\": null,\n        \"update:focusedRowEnabled\": null,\n        \"update:focusedRowIndex\": null,\n        \"update:focusedRowKey\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:grouping\": null,\n        \"update:groupPanel\": null,\n        \"update:headerFilter\": null,\n        \"update:height\": null,\n        \"update:highlightChanges\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:keyboardNavigation\": null,\n        \"update:keyExpr\": null,\n        \"update:loadPanel\": null,\n        \"update:masterDetail\": null,\n        \"update:noDataText\": null,\n        \"update:onAdaptiveDetailRowPreparing\": null,\n        \"update:onCellClick\": null,\n        \"update:onCellDblClick\": null,\n        \"update:onCellHoverChanged\": null,\n        \"update:onCellPrepared\": null,\n        \"update:onContentReady\": null,\n        \"update:onContextMenuPreparing\": null,\n        \"update:onDataErrorOccurred\": null,\n        \"update:onDisposing\": null,\n        \"update:onEditCanceled\": null,\n        \"update:onEditCanceling\": null,\n        \"update:onEditingStart\": null,\n        \"update:onEditorPrepared\": null,\n        \"update:onEditorPreparing\": null,\n        \"update:onExported\": null,\n        \"update:onExporting\": null,\n        \"update:onFileSaving\": null,\n        \"update:onFocusedCellChanged\": null,\n        \"update:onFocusedCellChanging\": null,\n        \"update:onFocusedRowChanged\": null,\n        \"update:onFocusedRowChanging\": null,\n        \"update:onInitialized\": null,\n        \"update:onInitNewRow\": null,\n        \"update:onKeyDown\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onRowClick\": null,\n        \"update:onRowCollapsed\": null,\n        \"update:onRowCollapsing\": null,\n        \"update:onRowDblClick\": null,\n        \"update:onRowExpanded\": null,\n        \"update:onRowExpanding\": null,\n        \"update:onRowInserted\": null,\n        \"update:onRowInserting\": null,\n        \"update:onRowPrepared\": null,\n        \"update:onRowRemoved\": null,\n        \"update:onRowRemoving\": null,\n        \"update:onRowUpdated\": null,\n        \"update:onRowUpdating\": null,\n        \"update:onRowValidating\": null,\n        \"update:onSaved\": null,\n        \"update:onSaving\": null,\n        \"update:onSelectionChanged\": null,\n        \"update:onToolbarPreparing\": null,\n        \"update:pager\": null,\n        \"update:paging\": null,\n        \"update:remoteOperations\": null,\n        \"update:renderAsync\": null,\n        \"update:repaintChangesOnly\": null,\n        \"update:rowAlternationEnabled\": null,\n        \"update:rowDragging\": null,\n        \"update:rowTemplate\": null,\n        \"update:rtlEnabled\": null,\n        \"update:scrolling\": null,\n        \"update:searchPanel\": null,\n        \"update:selectedRowKeys\": null,\n        \"update:selection\": null,\n        \"update:selectionFilter\": null,\n        \"update:showBorders\": null,\n        \"update:showColumnHeaders\": null,\n        \"update:showColumnLines\": null,\n        \"update:showRowLines\": null,\n        \"update:sortByGroupSummaryInfo\": null,\n        \"update:sorting\": null,\n        \"update:stateStoring\": null,\n        \"update:summary\": null,\n        \"update:tabIndex\": null,\n        \"update:toolbar\": null,\n        \"update:twoWayBindingEnabled\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n        \"update:wordWrapEnabled\": null,\n    },\n    computed: {\n        instance: function () {\n            return this.$_instance;\n        }\n    },\n    beforeCreate: function () {\n        this.$_WidgetClass = data_grid_1.default;\n        this.$_hasAsyncTemplate = true;\n        this.$_expectedChildren = {\n            column: { isCollectionItem: true, optionName: \"columns\" },\n            columnChooser: { isCollectionItem: false, optionName: \"columnChooser\" },\n            columnFixing: { isCollectionItem: false, optionName: \"columnFixing\" },\n            dataGridHeaderFilter: { isCollectionItem: false, optionName: \"headerFilter\" },\n            editing: { isCollectionItem: false, optionName: \"editing\" },\n            export: { isCollectionItem: false, optionName: \"export\" },\n            filterBuilder: { isCollectionItem: false, optionName: \"filterBuilder\" },\n            filterBuilderPopup: { isCollectionItem: false, optionName: \"filterBuilderPopup\" },\n            filterPanel: { isCollectionItem: false, optionName: \"filterPanel\" },\n            filterRow: { isCollectionItem: false, optionName: \"filterRow\" },\n            grouping: { isCollectionItem: false, optionName: \"grouping\" },\n            groupPanel: { isCollectionItem: false, optionName: \"groupPanel\" },\n            headerFilter: { isCollectionItem: false, optionName: \"headerFilter\" },\n            keyboardNavigation: { isCollectionItem: false, optionName: \"keyboardNavigation\" },\n            loadPanel: { isCollectionItem: false, optionName: \"loadPanel\" },\n            masterDetail: { isCollectionItem: false, optionName: \"masterDetail\" },\n            pager: { isCollectionItem: false, optionName: \"pager\" },\n            paging: { isCollectionItem: false, optionName: \"paging\" },\n            remoteOperations: { isCollectionItem: false, optionName: \"remoteOperations\" },\n            rowDragging: { isCollectionItem: false, optionName: \"rowDragging\" },\n            scrolling: { isCollectionItem: false, optionName: \"scrolling\" },\n            searchPanel: { isCollectionItem: false, optionName: \"searchPanel\" },\n            selection: { isCollectionItem: false, optionName: \"selection\" },\n            sortByGroupSummaryInfo: { isCollectionItem: true, optionName: \"sortByGroupSummaryInfo\" },\n            sorting: { isCollectionItem: false, optionName: \"sorting\" },\n            stateStoring: { isCollectionItem: false, optionName: \"stateStoring\" },\n            summary: { isCollectionItem: false, optionName: \"summary\" },\n            toolbar: { isCollectionItem: false, optionName: \"toolbar\" }\n        };\n    }\n});\nexports.DxDataGrid = DxDataGrid;\nvar DxAnimation = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:hide\": null,\n        \"update:show\": null,\n    },\n    props: {\n        hide: [Object, Number, String],\n        show: [Object, Number, String]\n    }\n});\nexports.DxAnimation = DxAnimation;\nDxAnimation.$_optionName = \"animation\";\nDxAnimation.$_expectedChildren = {\n    hide: { isCollectionItem: false, optionName: \"hide\" },\n    show: { isCollectionItem: false, optionName: \"show\" }\n};\nvar DxAsyncRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:reevaluate\": null,\n        \"update:type\": null,\n        \"update:validationCallback\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        reevaluate: Boolean,\n        type: String,\n        validationCallback: Function\n    }\n});\nexports.DxAsyncRule = DxAsyncRule;\nDxAsyncRule.$_optionName = \"validationRules\";\nDxAsyncRule.$_isCollectionItem = true;\nDxAsyncRule.$_predefinedProps = {\n    type: \"async\"\n};\nvar DxAt = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: String,\n        y: String\n    }\n});\nexports.DxAt = DxAt;\nDxAt.$_optionName = \"at\";\nvar DxBoundaryOffset = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: Number,\n        y: Number\n    }\n});\nexports.DxBoundaryOffset = DxBoundaryOffset;\nDxBoundaryOffset.$_optionName = \"boundaryOffset\";\nvar DxButton = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:cssClass\": null,\n        \"update:disabled\": null,\n        \"update:hint\": null,\n        \"update:icon\": null,\n        \"update:name\": null,\n        \"update:onClick\": null,\n        \"update:template\": null,\n        \"update:text\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        cssClass: String,\n        disabled: [Boolean, Function],\n        hint: String,\n        icon: String,\n        name: String,\n        onClick: Function,\n        template: {},\n        text: String,\n        visible: [Boolean, Function]\n    }\n});\nexports.DxButton = DxButton;\nDxButton.$_optionName = \"buttons\";\nDxButton.$_isCollectionItem = true;\nvar DxChange = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:data\": null,\n        \"update:insertAfterKey\": null,\n        \"update:insertBeforeKey\": null,\n        \"update:type\": null,\n    },\n    props: {\n        data: {},\n        insertAfterKey: {},\n        insertBeforeKey: {},\n        type: String\n    }\n});\nexports.DxChange = DxChange;\nDxChange.$_optionName = \"changes\";\nDxChange.$_isCollectionItem = true;\nvar DxColCountByScreen = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:lg\": null,\n        \"update:md\": null,\n        \"update:sm\": null,\n        \"update:xs\": null,\n    },\n    props: {\n        lg: Number,\n        md: Number,\n        sm: Number,\n        xs: Number\n    }\n});\nexports.DxColCountByScreen = DxColCountByScreen;\nDxColCountByScreen.$_optionName = \"colCountByScreen\";\nvar DxCollision = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: String,\n        y: String\n    }\n});\nexports.DxCollision = DxCollision;\nDxCollision.$_optionName = \"collision\";\nvar DxColumn = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignment\": null,\n        \"update:allowEditing\": null,\n        \"update:allowExporting\": null,\n        \"update:allowFiltering\": null,\n        \"update:allowFixing\": null,\n        \"update:allowGrouping\": null,\n        \"update:allowHeaderFiltering\": null,\n        \"update:allowHiding\": null,\n        \"update:allowReordering\": null,\n        \"update:allowResizing\": null,\n        \"update:allowSearch\": null,\n        \"update:allowSorting\": null,\n        \"update:autoExpandGroup\": null,\n        \"update:buttons\": null,\n        \"update:calculateCellValue\": null,\n        \"update:calculateDisplayValue\": null,\n        \"update:calculateFilterExpression\": null,\n        \"update:calculateGroupValue\": null,\n        \"update:calculateSortValue\": null,\n        \"update:caption\": null,\n        \"update:cellTemplate\": null,\n        \"update:columns\": null,\n        \"update:cssClass\": null,\n        \"update:customizeText\": null,\n        \"update:dataField\": null,\n        \"update:dataType\": null,\n        \"update:editCellTemplate\": null,\n        \"update:editorOptions\": null,\n        \"update:encodeHtml\": null,\n        \"update:falseText\": null,\n        \"update:filterOperations\": null,\n        \"update:filterType\": null,\n        \"update:filterValue\": null,\n        \"update:filterValues\": null,\n        \"update:fixed\": null,\n        \"update:fixedPosition\": null,\n        \"update:format\": null,\n        \"update:formItem\": null,\n        \"update:groupCellTemplate\": null,\n        \"update:grouped\": null,\n        \"update:groupIndex\": null,\n        \"update:headerCellTemplate\": null,\n        \"update:headerFilter\": null,\n        \"update:hidingPriority\": null,\n        \"update:isBand\": null,\n        \"update:lookup\": null,\n        \"update:minWidth\": null,\n        \"update:name\": null,\n        \"update:ownerBand\": null,\n        \"update:renderAsync\": null,\n        \"update:resized\": null,\n        \"update:selectedFilterOperation\": null,\n        \"update:setCellValue\": null,\n        \"update:showEditorAlways\": null,\n        \"update:showInColumnChooser\": null,\n        \"update:showWhenGrouped\": null,\n        \"update:sortIndex\": null,\n        \"update:sortingMethod\": null,\n        \"update:sortOrder\": null,\n        \"update:trueText\": null,\n        \"update:type\": null,\n        \"update:validationRules\": null,\n        \"update:visible\": null,\n        \"update:visibleIndex\": null,\n        \"update:width\": null,\n    },\n    props: {\n        alignment: String,\n        allowEditing: Boolean,\n        allowExporting: Boolean,\n        allowFiltering: Boolean,\n        allowFixing: Boolean,\n        allowGrouping: Boolean,\n        allowHeaderFiltering: Boolean,\n        allowHiding: Boolean,\n        allowReordering: Boolean,\n        allowResizing: Boolean,\n        allowSearch: Boolean,\n        allowSorting: Boolean,\n        autoExpandGroup: Boolean,\n        buttons: Array,\n        calculateCellValue: Function,\n        calculateDisplayValue: [Function, String],\n        calculateFilterExpression: Function,\n        calculateGroupValue: [Function, String],\n        calculateSortValue: [Function, String],\n        caption: String,\n        cellTemplate: {},\n        columns: Array,\n        cssClass: String,\n        customizeText: Function,\n        dataField: String,\n        dataType: String,\n        editCellTemplate: {},\n        editorOptions: {},\n        encodeHtml: Boolean,\n        falseText: String,\n        filterOperations: Array,\n        filterType: String,\n        filterValue: {},\n        filterValues: Array,\n        fixed: Boolean,\n        fixedPosition: String,\n        format: [Object, Function, String],\n        formItem: Object,\n        groupCellTemplate: {},\n        grouped: Boolean,\n        groupIndex: Number,\n        headerCellTemplate: {},\n        headerFilter: Object,\n        hidingPriority: Number,\n        isBand: Boolean,\n        lookup: Object,\n        minWidth: Number,\n        name: String,\n        ownerBand: Number,\n        renderAsync: Boolean,\n        resized: Function,\n        selectedFilterOperation: String,\n        setCellValue: Function,\n        showEditorAlways: Boolean,\n        showInColumnChooser: Boolean,\n        showWhenGrouped: Boolean,\n        sortIndex: Number,\n        sortingMethod: Function,\n        sortOrder: String,\n        trueText: String,\n        type: String,\n        validationRules: Array,\n        visible: Boolean,\n        visibleIndex: Number,\n        width: [Number, String]\n    }\n});\nexports.DxColumn = DxColumn;\nDxColumn.$_optionName = \"columns\";\nDxColumn.$_isCollectionItem = true;\nDxColumn.$_expectedChildren = {\n    AsyncRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    button: { isCollectionItem: true, optionName: \"buttons\" },\n    columnHeaderFilter: { isCollectionItem: false, optionName: \"headerFilter\" },\n    columnLookup: { isCollectionItem: false, optionName: \"lookup\" },\n    CompareRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    CustomRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    EmailRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    format: { isCollectionItem: false, optionName: \"format\" },\n    formItem: { isCollectionItem: false, optionName: \"formItem\" },\n    headerFilter: { isCollectionItem: false, optionName: \"headerFilter\" },\n    lookup: { isCollectionItem: false, optionName: \"lookup\" },\n    NumericRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    PatternRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    RangeRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    RequiredRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    StringLengthRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    validationRule: { isCollectionItem: true, optionName: \"validationRules\" }\n};\nvar DxColumnChooser = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSearch\": null,\n        \"update:emptyPanelText\": null,\n        \"update:enabled\": null,\n        \"update:height\": null,\n        \"update:mode\": null,\n        \"update:searchTimeout\": null,\n        \"update:sortOrder\": null,\n        \"update:title\": null,\n        \"update:width\": null,\n    },\n    props: {\n        allowSearch: Boolean,\n        emptyPanelText: String,\n        enabled: Boolean,\n        height: Number,\n        mode: String,\n        searchTimeout: Number,\n        sortOrder: String,\n        title: String,\n        width: Number\n    }\n});\nexports.DxColumnChooser = DxColumnChooser;\nDxColumnChooser.$_optionName = \"columnChooser\";\nvar DxColumnFixing = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:enabled\": null,\n        \"update:texts\": null,\n    },\n    props: {\n        enabled: Boolean,\n        texts: Object\n    }\n});\nexports.DxColumnFixing = DxColumnFixing;\nDxColumnFixing.$_optionName = \"columnFixing\";\nDxColumnFixing.$_expectedChildren = {\n    columnFixingTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxColumnFixingTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:fix\": null,\n        \"update:leftPosition\": null,\n        \"update:rightPosition\": null,\n        \"update:unfix\": null,\n    },\n    props: {\n        fix: String,\n        leftPosition: String,\n        rightPosition: String,\n        unfix: String\n    }\n});\nexports.DxColumnFixingTexts = DxColumnFixingTexts;\nDxColumnFixingTexts.$_optionName = \"texts\";\nvar DxColumnHeaderFilter = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSearch\": null,\n        \"update:dataSource\": null,\n        \"update:groupInterval\": null,\n        \"update:height\": null,\n        \"update:searchMode\": null,\n        \"update:width\": null,\n    },\n    props: {\n        allowSearch: Boolean,\n        dataSource: [Array, Object, Function],\n        groupInterval: [Number, String],\n        height: Number,\n        searchMode: String,\n        width: Number\n    }\n});\nexports.DxColumnHeaderFilter = DxColumnHeaderFilter;\nDxColumnHeaderFilter.$_optionName = \"headerFilter\";\nvar DxColumnLookup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowClearing\": null,\n        \"update:calculateCellValue\": null,\n        \"update:dataSource\": null,\n        \"update:displayExpr\": null,\n        \"update:valueExpr\": null,\n    },\n    props: {\n        allowClearing: Boolean,\n        calculateCellValue: Function,\n        dataSource: [Array, Object, Function],\n        displayExpr: [Function, String],\n        valueExpr: String\n    }\n});\nexports.DxColumnLookup = DxColumnLookup;\nDxColumnLookup.$_optionName = \"lookup\";\nvar DxCompareRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:comparisonTarget\": null,\n        \"update:comparisonType\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:type\": null,\n    },\n    props: {\n        comparisonTarget: Function,\n        comparisonType: String,\n        ignoreEmptyValue: Boolean,\n        message: String,\n        type: String\n    }\n});\nexports.DxCompareRule = DxCompareRule;\nDxCompareRule.$_optionName = \"validationRules\";\nDxCompareRule.$_isCollectionItem = true;\nDxCompareRule.$_predefinedProps = {\n    type: \"compare\"\n};\nvar DxCursorOffset = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: Number,\n        y: Number\n    }\n});\nexports.DxCursorOffset = DxCursorOffset;\nDxCursorOffset.$_optionName = \"cursorOffset\";\nvar DxCustomOperation = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:calculateFilterExpression\": null,\n        \"update:caption\": null,\n        \"update:customizeText\": null,\n        \"update:dataTypes\": null,\n        \"update:editorTemplate\": null,\n        \"update:hasValue\": null,\n        \"update:icon\": null,\n        \"update:name\": null,\n    },\n    props: {\n        calculateFilterExpression: Function,\n        caption: String,\n        customizeText: Function,\n        dataTypes: Array,\n        editorTemplate: {},\n        hasValue: Boolean,\n        icon: String,\n        name: String\n    }\n});\nexports.DxCustomOperation = DxCustomOperation;\nDxCustomOperation.$_optionName = \"customOperations\";\nDxCustomOperation.$_isCollectionItem = true;\nvar DxCustomRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:reevaluate\": null,\n        \"update:type\": null,\n        \"update:validationCallback\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        reevaluate: Boolean,\n        type: String,\n        validationCallback: Function\n    }\n});\nexports.DxCustomRule = DxCustomRule;\nDxCustomRule.$_optionName = \"validationRules\";\nDxCustomRule.$_isCollectionItem = true;\nDxCustomRule.$_predefinedProps = {\n    type: \"custom\"\n};\nvar DxDataGridHeaderFilter = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSearch\": null,\n        \"update:height\": null,\n        \"update:searchTimeout\": null,\n        \"update:texts\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        allowSearch: Boolean,\n        height: Number,\n        searchTimeout: Number,\n        texts: Object,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxDataGridHeaderFilter = DxDataGridHeaderFilter;\nDxDataGridHeaderFilter.$_optionName = \"headerFilter\";\nDxDataGridHeaderFilter.$_expectedChildren = {\n    dataGridHeaderFilterTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxDataGridHeaderFilterTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:cancel\": null,\n        \"update:emptyValue\": null,\n        \"update:ok\": null,\n    },\n    props: {\n        cancel: String,\n        emptyValue: String,\n        ok: String\n    }\n});\nexports.DxDataGridHeaderFilterTexts = DxDataGridHeaderFilterTexts;\nDxDataGridHeaderFilterTexts.$_optionName = \"texts\";\nvar DxEditing = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowAdding\": null,\n        \"update:allowDeleting\": null,\n        \"update:allowUpdating\": null,\n        \"update:changes\": null,\n        \"update:confirmDelete\": null,\n        \"update:editColumnName\": null,\n        \"update:editRowKey\": null,\n        \"update:form\": null,\n        \"update:mode\": null,\n        \"update:newRowPosition\": null,\n        \"update:popup\": null,\n        \"update:refreshMode\": null,\n        \"update:selectTextOnEditStart\": null,\n        \"update:startEditAction\": null,\n        \"update:texts\": null,\n        \"update:useIcons\": null,\n    },\n    props: {\n        allowAdding: Boolean,\n        allowDeleting: [Boolean, Function],\n        allowUpdating: [Boolean, Function],\n        changes: Array,\n        confirmDelete: Boolean,\n        editColumnName: String,\n        editRowKey: {},\n        form: Object,\n        mode: String,\n        newRowPosition: String,\n        popup: Object,\n        refreshMode: String,\n        selectTextOnEditStart: Boolean,\n        startEditAction: String,\n        texts: {},\n        useIcons: Boolean\n    }\n});\nexports.DxEditing = DxEditing;\nDxEditing.$_optionName = \"editing\";\nDxEditing.$_expectedChildren = {\n    change: { isCollectionItem: true, optionName: \"changes\" },\n    editingTexts: { isCollectionItem: false, optionName: \"texts\" },\n    form: { isCollectionItem: false, optionName: \"form\" },\n    popup: { isCollectionItem: false, optionName: \"popup\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxEditingTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:addRow\": null,\n        \"update:cancelAllChanges\": null,\n        \"update:cancelRowChanges\": null,\n        \"update:confirmDeleteMessage\": null,\n        \"update:confirmDeleteTitle\": null,\n        \"update:deleteRow\": null,\n        \"update:editRow\": null,\n        \"update:saveAllChanges\": null,\n        \"update:saveRowChanges\": null,\n        \"update:undeleteRow\": null,\n        \"update:validationCancelChanges\": null,\n    },\n    props: {\n        addRow: String,\n        cancelAllChanges: String,\n        cancelRowChanges: String,\n        confirmDeleteMessage: String,\n        confirmDeleteTitle: String,\n        deleteRow: String,\n        editRow: String,\n        saveAllChanges: String,\n        saveRowChanges: String,\n        undeleteRow: String,\n        validationCancelChanges: String\n    }\n});\nexports.DxEditingTexts = DxEditingTexts;\nDxEditingTexts.$_optionName = \"texts\";\nvar DxEmailRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        type: String\n    }\n});\nexports.DxEmailRule = DxEmailRule;\nDxEmailRule.$_optionName = \"validationRules\";\nDxEmailRule.$_isCollectionItem = true;\nDxEmailRule.$_predefinedProps = {\n    type: \"email\"\n};\nvar DxExport = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowExportSelectedData\": null,\n        \"update:customizeExcelCell\": null,\n        \"update:enabled\": null,\n        \"update:excelFilterEnabled\": null,\n        \"update:excelWrapTextEnabled\": null,\n        \"update:fileName\": null,\n        \"update:ignoreExcelErrors\": null,\n        \"update:proxyUrl\": null,\n        \"update:texts\": null,\n    },\n    props: {\n        allowExportSelectedData: Boolean,\n        customizeExcelCell: Function,\n        enabled: Boolean,\n        excelFilterEnabled: Boolean,\n        excelWrapTextEnabled: Boolean,\n        fileName: String,\n        ignoreExcelErrors: Boolean,\n        proxyUrl: String,\n        texts: Object\n    }\n});\nexports.DxExport = DxExport;\nDxExport.$_optionName = \"export\";\nDxExport.$_expectedChildren = {\n    exportTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxExportTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:exportAll\": null,\n        \"update:exportSelectedRows\": null,\n        \"update:exportTo\": null,\n    },\n    props: {\n        exportAll: String,\n        exportSelectedRows: String,\n        exportTo: String\n    }\n});\nexports.DxExportTexts = DxExportTexts;\nDxExportTexts.$_optionName = \"texts\";\nvar DxField = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:calculateFilterExpression\": null,\n        \"update:caption\": null,\n        \"update:customizeText\": null,\n        \"update:dataField\": null,\n        \"update:dataType\": null,\n        \"update:defaultFilterOperation\": null,\n        \"update:editorOptions\": null,\n        \"update:editorTemplate\": null,\n        \"update:falseText\": null,\n        \"update:filterOperations\": null,\n        \"update:format\": null,\n        \"update:lookup\": null,\n        \"update:name\": null,\n        \"update:trueText\": null,\n    },\n    props: {\n        calculateFilterExpression: Function,\n        caption: String,\n        customizeText: Function,\n        dataField: String,\n        dataType: String,\n        defaultFilterOperation: String,\n        editorOptions: {},\n        editorTemplate: {},\n        falseText: String,\n        filterOperations: Array,\n        format: [Object, Function, String],\n        lookup: Object,\n        name: String,\n        trueText: String\n    }\n});\nexports.DxField = DxField;\nDxField.$_optionName = \"fields\";\nDxField.$_isCollectionItem = true;\nDxField.$_expectedChildren = {\n    fieldLookup: { isCollectionItem: false, optionName: \"lookup\" },\n    format: { isCollectionItem: false, optionName: \"format\" },\n    lookup: { isCollectionItem: false, optionName: \"lookup\" }\n};\nvar DxFieldLookup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowClearing\": null,\n        \"update:dataSource\": null,\n        \"update:displayExpr\": null,\n        \"update:valueExpr\": null,\n    },\n    props: {\n        allowClearing: Boolean,\n        dataSource: [Array, Object],\n        displayExpr: [Function, String],\n        valueExpr: [Function, String]\n    }\n});\nexports.DxFieldLookup = DxFieldLookup;\nDxFieldLookup.$_optionName = \"lookup\";\nvar DxFilterBuilder = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:allowHierarchicalFields\": null,\n        \"update:bindingOptions\": null,\n        \"update:customOperations\": null,\n        \"update:disabled\": null,\n        \"update:elementAttr\": null,\n        \"update:fields\": null,\n        \"update:filterOperationDescriptions\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:groupOperationDescriptions\": null,\n        \"update:groupOperations\": null,\n        \"update:height\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:maxGroupLevel\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onEditorPrepared\": null,\n        \"update:onEditorPreparing\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onValueChanged\": null,\n        \"update:rtlEnabled\": null,\n        \"update:tabIndex\": null,\n        \"update:value\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        allowHierarchicalFields: Boolean,\n        bindingOptions: Object,\n        customOperations: Array,\n        disabled: Boolean,\n        elementAttr: Object,\n        fields: Array,\n        filterOperationDescriptions: Object,\n        focusStateEnabled: Boolean,\n        groupOperationDescriptions: Object,\n        groupOperations: Array,\n        height: [Function, Number, String],\n        hint: String,\n        hoverStateEnabled: Boolean,\n        maxGroupLevel: Number,\n        onContentReady: Function,\n        onDisposing: Function,\n        onEditorPrepared: Function,\n        onEditorPreparing: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        onValueChanged: Function,\n        rtlEnabled: Boolean,\n        tabIndex: Number,\n        value: [Array, Function, String],\n        visible: Boolean,\n        width: [Function, Number, String]\n    }\n});\nexports.DxFilterBuilder = DxFilterBuilder;\nDxFilterBuilder.$_optionName = \"filterBuilder\";\nDxFilterBuilder.$_expectedChildren = {\n    customOperation: { isCollectionItem: true, optionName: \"customOperations\" },\n    field: { isCollectionItem: true, optionName: \"fields\" },\n    filterOperationDescriptions: { isCollectionItem: false, optionName: \"filterOperationDescriptions\" },\n    groupOperationDescriptions: { isCollectionItem: false, optionName: \"groupOperationDescriptions\" }\n};\nvar DxFilterBuilderPopup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:animation\": null,\n        \"update:bindingOptions\": null,\n        \"update:closeOnOutsideClick\": null,\n        \"update:container\": null,\n        \"update:contentTemplate\": null,\n        \"update:copyRootClassesToWrapper\": null,\n        \"update:deferRendering\": null,\n        \"update:disabled\": null,\n        \"update:dragAndResizeArea\": null,\n        \"update:dragEnabled\": null,\n        \"update:dragOutsideBoundary\": null,\n        \"update:elementAttr\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:fullScreen\": null,\n        \"update:height\": null,\n        \"update:hideOnParentScroll\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:maxHeight\": null,\n        \"update:maxWidth\": null,\n        \"update:minHeight\": null,\n        \"update:minWidth\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onHidden\": null,\n        \"update:onHiding\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onResize\": null,\n        \"update:onResizeEnd\": null,\n        \"update:onResizeStart\": null,\n        \"update:onShowing\": null,\n        \"update:onShown\": null,\n        \"update:onTitleRendered\": null,\n        \"update:position\": null,\n        \"update:resizeEnabled\": null,\n        \"update:restorePosition\": null,\n        \"update:rtlEnabled\": null,\n        \"update:shading\": null,\n        \"update:shadingColor\": null,\n        \"update:showCloseButton\": null,\n        \"update:showTitle\": null,\n        \"update:tabIndex\": null,\n        \"update:title\": null,\n        \"update:titleTemplate\": null,\n        \"update:toolbarItems\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n        \"update:wrapperAttr\": null,\n    },\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        animation: Object,\n        bindingOptions: Object,\n        closeOnOutsideClick: [Boolean, Function],\n        container: {},\n        contentTemplate: {},\n        copyRootClassesToWrapper: Boolean,\n        deferRendering: Boolean,\n        disabled: Boolean,\n        dragAndResizeArea: {},\n        dragEnabled: Boolean,\n        dragOutsideBoundary: Boolean,\n        elementAttr: {},\n        focusStateEnabled: Boolean,\n        fullScreen: Boolean,\n        height: [Function, Number, String],\n        hideOnParentScroll: Boolean,\n        hint: String,\n        hoverStateEnabled: Boolean,\n        maxHeight: [Function, Number, String],\n        maxWidth: [Function, Number, String],\n        minHeight: [Function, Number, String],\n        minWidth: [Function, Number, String],\n        onContentReady: Function,\n        onDisposing: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onHidden: Function,\n        onHiding: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        onResize: Function,\n        onResizeEnd: Function,\n        onResizeStart: Function,\n        onShowing: Function,\n        onShown: Function,\n        onTitleRendered: Function,\n        position: [Function, Object, String],\n        resizeEnabled: Boolean,\n        restorePosition: Boolean,\n        rtlEnabled: Boolean,\n        shading: Boolean,\n        shadingColor: String,\n        showCloseButton: Boolean,\n        showTitle: Boolean,\n        tabIndex: Number,\n        title: String,\n        titleTemplate: {},\n        toolbarItems: Array,\n        visible: Boolean,\n        width: [Function, Number, String],\n        wrapperAttr: {}\n    }\n});\nexports.DxFilterBuilderPopup = DxFilterBuilderPopup;\nDxFilterBuilderPopup.$_optionName = \"filterBuilderPopup\";\nvar DxFilterOperationDescriptions = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:between\": null,\n        \"update:contains\": null,\n        \"update:endsWith\": null,\n        \"update:equal\": null,\n        \"update:greaterThan\": null,\n        \"update:greaterThanOrEqual\": null,\n        \"update:isBlank\": null,\n        \"update:isNotBlank\": null,\n        \"update:lessThan\": null,\n        \"update:lessThanOrEqual\": null,\n        \"update:notContains\": null,\n        \"update:notEqual\": null,\n        \"update:startsWith\": null,\n    },\n    props: {\n        between: String,\n        contains: String,\n        endsWith: String,\n        equal: String,\n        greaterThan: String,\n        greaterThanOrEqual: String,\n        isBlank: String,\n        isNotBlank: String,\n        lessThan: String,\n        lessThanOrEqual: String,\n        notContains: String,\n        notEqual: String,\n        startsWith: String\n    }\n});\nexports.DxFilterOperationDescriptions = DxFilterOperationDescriptions;\nDxFilterOperationDescriptions.$_optionName = \"filterOperationDescriptions\";\nvar DxFilterPanel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:customizeText\": null,\n        \"update:filterEnabled\": null,\n        \"update:texts\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        customizeText: Function,\n        filterEnabled: Boolean,\n        texts: Object,\n        visible: Boolean\n    }\n});\nexports.DxFilterPanel = DxFilterPanel;\nDxFilterPanel.$_optionName = \"filterPanel\";\nDxFilterPanel.$_expectedChildren = {\n    filterPanelTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxFilterPanelTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:clearFilter\": null,\n        \"update:createFilter\": null,\n        \"update:filterEnabledHint\": null,\n    },\n    props: {\n        clearFilter: String,\n        createFilter: String,\n        filterEnabledHint: String\n    }\n});\nexports.DxFilterPanelTexts = DxFilterPanelTexts;\nDxFilterPanelTexts.$_optionName = \"texts\";\nvar DxFilterRow = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:applyFilter\": null,\n        \"update:applyFilterText\": null,\n        \"update:betweenEndText\": null,\n        \"update:betweenStartText\": null,\n        \"update:operationDescriptions\": null,\n        \"update:resetOperationText\": null,\n        \"update:showAllText\": null,\n        \"update:showOperationChooser\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        applyFilter: String,\n        applyFilterText: String,\n        betweenEndText: String,\n        betweenStartText: String,\n        operationDescriptions: Object,\n        resetOperationText: String,\n        showAllText: String,\n        showOperationChooser: Boolean,\n        visible: Boolean\n    }\n});\nexports.DxFilterRow = DxFilterRow;\nDxFilterRow.$_optionName = \"filterRow\";\nDxFilterRow.$_expectedChildren = {\n    operationDescriptions: { isCollectionItem: false, optionName: \"operationDescriptions\" }\n};\nvar DxForm = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:alignItemLabels\": null,\n        \"update:alignItemLabelsInAllGroups\": null,\n        \"update:bindingOptions\": null,\n        \"update:colCount\": null,\n        \"update:colCountByScreen\": null,\n        \"update:customizeItem\": null,\n        \"update:disabled\": null,\n        \"update:elementAttr\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:formData\": null,\n        \"update:height\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:items\": null,\n        \"update:labelLocation\": null,\n        \"update:labelMode\": null,\n        \"update:minColWidth\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onEditorEnterKey\": null,\n        \"update:onFieldDataChanged\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:optionalMark\": null,\n        \"update:readOnly\": null,\n        \"update:requiredMark\": null,\n        \"update:requiredMessage\": null,\n        \"update:rtlEnabled\": null,\n        \"update:screenByWidth\": null,\n        \"update:scrollingEnabled\": null,\n        \"update:showColonAfterLabel\": null,\n        \"update:showOptionalMark\": null,\n        \"update:showRequiredMark\": null,\n        \"update:showValidationSummary\": null,\n        \"update:tabIndex\": null,\n        \"update:validationGroup\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        alignItemLabels: Boolean,\n        alignItemLabelsInAllGroups: Boolean,\n        bindingOptions: Object,\n        colCount: [Number, String],\n        colCountByScreen: Object,\n        customizeItem: Function,\n        disabled: Boolean,\n        elementAttr: Object,\n        focusStateEnabled: Boolean,\n        formData: {},\n        height: [Function, Number, String],\n        hint: String,\n        hoverStateEnabled: Boolean,\n        items: Array,\n        labelLocation: String,\n        labelMode: String,\n        minColWidth: Number,\n        onContentReady: Function,\n        onDisposing: Function,\n        onEditorEnterKey: Function,\n        onFieldDataChanged: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        optionalMark: String,\n        readOnly: Boolean,\n        requiredMark: String,\n        requiredMessage: String,\n        rtlEnabled: Boolean,\n        screenByWidth: Function,\n        scrollingEnabled: Boolean,\n        showColonAfterLabel: Boolean,\n        showOptionalMark: Boolean,\n        showRequiredMark: Boolean,\n        showValidationSummary: Boolean,\n        tabIndex: Number,\n        validationGroup: String,\n        visible: Boolean,\n        width: [Function, Number, String]\n    }\n});\nexports.DxForm = DxForm;\nDxForm.$_optionName = \"form\";\nDxForm.$_expectedChildren = {\n    colCountByScreen: { isCollectionItem: false, optionName: \"colCountByScreen\" }\n};\nvar DxFormat = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:currency\": null,\n        \"update:formatter\": null,\n        \"update:parser\": null,\n        \"update:precision\": null,\n        \"update:type\": null,\n    },\n    props: {\n        currency: String,\n        formatter: Function,\n        parser: Function,\n        precision: Number,\n        type: String\n    }\n});\nexports.DxFormat = DxFormat;\nDxFormat.$_optionName = \"format\";\nvar DxFormItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:colSpan\": null,\n        \"update:cssClass\": null,\n        \"update:dataField\": null,\n        \"update:editorOptions\": null,\n        \"update:editorType\": null,\n        \"update:helpText\": null,\n        \"update:isRequired\": null,\n        \"update:itemType\": null,\n        \"update:label\": null,\n        \"update:name\": null,\n        \"update:template\": null,\n        \"update:validationRules\": null,\n        \"update:visible\": null,\n        \"update:visibleIndex\": null,\n    },\n    props: {\n        colSpan: Number,\n        cssClass: String,\n        dataField: String,\n        editorOptions: {},\n        editorType: String,\n        helpText: String,\n        isRequired: Boolean,\n        itemType: String,\n        label: Object,\n        name: String,\n        template: {},\n        validationRules: Array,\n        visible: Boolean,\n        visibleIndex: Number\n    }\n});\nexports.DxFormItem = DxFormItem;\nDxFormItem.$_optionName = \"formItem\";\nDxFormItem.$_expectedChildren = {\n    AsyncRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    CompareRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    CustomRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    EmailRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    label: { isCollectionItem: false, optionName: \"label\" },\n    NumericRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    PatternRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    RangeRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    RequiredRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    StringLengthRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    validationRule: { isCollectionItem: true, optionName: \"validationRules\" }\n};\nvar DxFrom = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:left\": null,\n        \"update:opacity\": null,\n        \"update:position\": null,\n        \"update:scale\": null,\n        \"update:top\": null,\n    },\n    props: {\n        left: Number,\n        opacity: Number,\n        position: Object,\n        scale: Number,\n        top: Number\n    }\n});\nexports.DxFrom = DxFrom;\nDxFrom.$_optionName = \"from\";\nDxFrom.$_expectedChildren = {\n    position: { isCollectionItem: false, optionName: \"position\" }\n};\nvar DxGrouping = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowCollapsing\": null,\n        \"update:autoExpandAll\": null,\n        \"update:contextMenuEnabled\": null,\n        \"update:expandMode\": null,\n        \"update:texts\": null,\n    },\n    props: {\n        allowCollapsing: Boolean,\n        autoExpandAll: Boolean,\n        contextMenuEnabled: Boolean,\n        expandMode: String,\n        texts: Object\n    }\n});\nexports.DxGrouping = DxGrouping;\nDxGrouping.$_optionName = \"grouping\";\nDxGrouping.$_expectedChildren = {\n    groupingTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxGroupingTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:groupByThisColumn\": null,\n        \"update:groupContinuedMessage\": null,\n        \"update:groupContinuesMessage\": null,\n        \"update:ungroup\": null,\n        \"update:ungroupAll\": null,\n    },\n    props: {\n        groupByThisColumn: String,\n        groupContinuedMessage: String,\n        groupContinuesMessage: String,\n        ungroup: String,\n        ungroupAll: String\n    }\n});\nexports.DxGroupingTexts = DxGroupingTexts;\nDxGroupingTexts.$_optionName = \"texts\";\nvar DxGroupItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignByColumn\": null,\n        \"update:column\": null,\n        \"update:customizeText\": null,\n        \"update:displayFormat\": null,\n        \"update:name\": null,\n        \"update:showInColumn\": null,\n        \"update:showInGroupFooter\": null,\n        \"update:skipEmptyValues\": null,\n        \"update:summaryType\": null,\n        \"update:valueFormat\": null,\n    },\n    props: {\n        alignByColumn: Boolean,\n        column: String,\n        customizeText: Function,\n        displayFormat: String,\n        name: String,\n        showInColumn: String,\n        showInGroupFooter: Boolean,\n        skipEmptyValues: Boolean,\n        summaryType: String,\n        valueFormat: [Object, Function, String]\n    }\n});\nexports.DxGroupItem = DxGroupItem;\nDxGroupItem.$_optionName = \"groupItems\";\nDxGroupItem.$_isCollectionItem = true;\nDxGroupItem.$_expectedChildren = {\n    valueFormat: { isCollectionItem: false, optionName: \"valueFormat\" }\n};\nvar DxGroupOperationDescriptions = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:and\": null,\n        \"update:notAnd\": null,\n        \"update:notOr\": null,\n        \"update:or\": null,\n    },\n    props: {\n        and: String,\n        notAnd: String,\n        notOr: String,\n        or: String\n    }\n});\nexports.DxGroupOperationDescriptions = DxGroupOperationDescriptions;\nDxGroupOperationDescriptions.$_optionName = \"groupOperationDescriptions\";\nvar DxGroupPanel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowColumnDragging\": null,\n        \"update:emptyPanelText\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        allowColumnDragging: Boolean,\n        emptyPanelText: String,\n        visible: [Boolean, String]\n    }\n});\nexports.DxGroupPanel = DxGroupPanel;\nDxGroupPanel.$_optionName = \"groupPanel\";\nvar DxHeaderFilter = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSearch\": null,\n        \"update:dataSource\": null,\n        \"update:groupInterval\": null,\n        \"update:height\": null,\n        \"update:searchMode\": null,\n        \"update:searchTimeout\": null,\n        \"update:texts\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        allowSearch: Boolean,\n        dataSource: [Array, Object, Function],\n        groupInterval: [Number, String],\n        height: Number,\n        searchMode: String,\n        searchTimeout: Number,\n        texts: Object,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxHeaderFilter = DxHeaderFilter;\nDxHeaderFilter.$_optionName = \"headerFilter\";\nvar DxHide = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:complete\": null,\n        \"update:delay\": null,\n        \"update:direction\": null,\n        \"update:duration\": null,\n        \"update:easing\": null,\n        \"update:from\": null,\n        \"update:staggerDelay\": null,\n        \"update:start\": null,\n        \"update:to\": null,\n        \"update:type\": null,\n    },\n    props: {\n        complete: Function,\n        delay: Number,\n        direction: String,\n        duration: Number,\n        easing: String,\n        from: Object,\n        staggerDelay: Number,\n        start: Function,\n        to: Object,\n        type: String\n    }\n});\nexports.DxHide = DxHide;\nDxHide.$_optionName = \"hide\";\nDxHide.$_expectedChildren = {\n    from: { isCollectionItem: false, optionName: \"from\" },\n    to: { isCollectionItem: false, optionName: \"to\" }\n};\nvar DxItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:cssClass\": null,\n        \"update:disabled\": null,\n        \"update:html\": null,\n        \"update:locateInMenu\": null,\n        \"update:location\": null,\n        \"update:menuItemTemplate\": null,\n        \"update:name\": null,\n        \"update:options\": null,\n        \"update:showText\": null,\n        \"update:template\": null,\n        \"update:text\": null,\n        \"update:visible\": null,\n        \"update:widget\": null,\n    },\n    props: {\n        cssClass: String,\n        disabled: Boolean,\n        html: String,\n        locateInMenu: String,\n        location: String,\n        menuItemTemplate: {},\n        name: String,\n        options: {},\n        showText: String,\n        template: {},\n        text: String,\n        visible: Boolean,\n        widget: String\n    }\n});\nexports.DxItem = DxItem;\nDxItem.$_optionName = \"items\";\nDxItem.$_isCollectionItem = true;\nvar DxKeyboardNavigation = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:editOnKeyPress\": null,\n        \"update:enabled\": null,\n        \"update:enterKeyAction\": null,\n        \"update:enterKeyDirection\": null,\n    },\n    props: {\n        editOnKeyPress: Boolean,\n        enabled: Boolean,\n        enterKeyAction: String,\n        enterKeyDirection: String\n    }\n});\nexports.DxKeyboardNavigation = DxKeyboardNavigation;\nDxKeyboardNavigation.$_optionName = \"keyboardNavigation\";\nvar DxLabel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignment\": null,\n        \"update:location\": null,\n        \"update:showColon\": null,\n        \"update:text\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        alignment: String,\n        location: String,\n        showColon: Boolean,\n        text: String,\n        visible: Boolean\n    }\n});\nexports.DxLabel = DxLabel;\nDxLabel.$_optionName = \"label\";\nvar DxLoadPanel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:enabled\": null,\n        \"update:height\": null,\n        \"update:indicatorSrc\": null,\n        \"update:shading\": null,\n        \"update:shadingColor\": null,\n        \"update:showIndicator\": null,\n        \"update:showPane\": null,\n        \"update:text\": null,\n        \"update:width\": null,\n    },\n    props: {\n        enabled: [Boolean, String],\n        height: Number,\n        indicatorSrc: String,\n        shading: Boolean,\n        shadingColor: String,\n        showIndicator: Boolean,\n        showPane: Boolean,\n        text: String,\n        width: Number\n    }\n});\nexports.DxLoadPanel = DxLoadPanel;\nDxLoadPanel.$_optionName = \"loadPanel\";\nvar DxLookup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowClearing\": null,\n        \"update:calculateCellValue\": null,\n        \"update:dataSource\": null,\n        \"update:displayExpr\": null,\n        \"update:valueExpr\": null,\n    },\n    props: {\n        allowClearing: Boolean,\n        calculateCellValue: Function,\n        dataSource: [Array, Object, Function],\n        displayExpr: [Function, String],\n        valueExpr: String\n    }\n});\nexports.DxLookup = DxLookup;\nDxLookup.$_optionName = \"lookup\";\nvar DxMasterDetail = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:autoExpandAll\": null,\n        \"update:enabled\": null,\n        \"update:template\": null,\n    },\n    props: {\n        autoExpandAll: Boolean,\n        enabled: Boolean,\n        template: {}\n    }\n});\nexports.DxMasterDetail = DxMasterDetail;\nDxMasterDetail.$_optionName = \"masterDetail\";\nvar DxMy = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: String,\n        y: String\n    }\n});\nexports.DxMy = DxMy;\nDxMy.$_optionName = \"my\";\nvar DxNumericRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        type: String\n    }\n});\nexports.DxNumericRule = DxNumericRule;\nDxNumericRule.$_optionName = \"validationRules\";\nDxNumericRule.$_isCollectionItem = true;\nDxNumericRule.$_predefinedProps = {\n    type: \"numeric\"\n};\nvar DxOffset = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: Number,\n        y: Number\n    }\n});\nexports.DxOffset = DxOffset;\nDxOffset.$_optionName = \"offset\";\nvar DxOperationDescriptions = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:between\": null,\n        \"update:contains\": null,\n        \"update:endsWith\": null,\n        \"update:equal\": null,\n        \"update:greaterThan\": null,\n        \"update:greaterThanOrEqual\": null,\n        \"update:lessThan\": null,\n        \"update:lessThanOrEqual\": null,\n        \"update:notContains\": null,\n        \"update:notEqual\": null,\n        \"update:startsWith\": null,\n    },\n    props: {\n        between: String,\n        contains: String,\n        endsWith: String,\n        equal: String,\n        greaterThan: String,\n        greaterThanOrEqual: String,\n        lessThan: String,\n        lessThanOrEqual: String,\n        notContains: String,\n        notEqual: String,\n        startsWith: String\n    }\n});\nexports.DxOperationDescriptions = DxOperationDescriptions;\nDxOperationDescriptions.$_optionName = \"operationDescriptions\";\nvar DxPager = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowedPageSizes\": null,\n        \"update:displayMode\": null,\n        \"update:infoText\": null,\n        \"update:showInfo\": null,\n        \"update:showNavigationButtons\": null,\n        \"update:showPageSizeSelector\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        allowedPageSizes: [Array, String],\n        displayMode: String,\n        infoText: String,\n        showInfo: Boolean,\n        showNavigationButtons: Boolean,\n        showPageSizeSelector: Boolean,\n        visible: [Boolean, String]\n    }\n});\nexports.DxPager = DxPager;\nDxPager.$_optionName = \"pager\";\nvar DxPaging = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:enabled\": null,\n        \"update:pageIndex\": null,\n        \"update:pageSize\": null,\n    },\n    props: {\n        enabled: Boolean,\n        pageIndex: Number,\n        pageSize: Number\n    }\n});\nexports.DxPaging = DxPaging;\nDxPaging.$_optionName = \"paging\";\nvar DxPatternRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:pattern\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        pattern: {},\n        type: String\n    }\n});\nexports.DxPatternRule = DxPatternRule;\nDxPatternRule.$_optionName = \"validationRules\";\nDxPatternRule.$_isCollectionItem = true;\nDxPatternRule.$_predefinedProps = {\n    type: \"pattern\"\n};\nvar DxPopup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:animation\": null,\n        \"update:bindingOptions\": null,\n        \"update:closeOnOutsideClick\": null,\n        \"update:container\": null,\n        \"update:contentTemplate\": null,\n        \"update:copyRootClassesToWrapper\": null,\n        \"update:deferRendering\": null,\n        \"update:disabled\": null,\n        \"update:dragAndResizeArea\": null,\n        \"update:dragEnabled\": null,\n        \"update:dragOutsideBoundary\": null,\n        \"update:elementAttr\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:fullScreen\": null,\n        \"update:height\": null,\n        \"update:hideOnParentScroll\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:maxHeight\": null,\n        \"update:maxWidth\": null,\n        \"update:minHeight\": null,\n        \"update:minWidth\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onHidden\": null,\n        \"update:onHiding\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onResize\": null,\n        \"update:onResizeEnd\": null,\n        \"update:onResizeStart\": null,\n        \"update:onShowing\": null,\n        \"update:onShown\": null,\n        \"update:onTitleRendered\": null,\n        \"update:position\": null,\n        \"update:resizeEnabled\": null,\n        \"update:restorePosition\": null,\n        \"update:rtlEnabled\": null,\n        \"update:shading\": null,\n        \"update:shadingColor\": null,\n        \"update:showCloseButton\": null,\n        \"update:showTitle\": null,\n        \"update:tabIndex\": null,\n        \"update:title\": null,\n        \"update:titleTemplate\": null,\n        \"update:toolbarItems\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n        \"update:wrapperAttr\": null,\n    },\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        animation: Object,\n        bindingOptions: Object,\n        closeOnOutsideClick: [Boolean, Function],\n        container: {},\n        contentTemplate: {},\n        copyRootClassesToWrapper: Boolean,\n        deferRendering: Boolean,\n        disabled: Boolean,\n        dragAndResizeArea: {},\n        dragEnabled: Boolean,\n        dragOutsideBoundary: Boolean,\n        elementAttr: {},\n        focusStateEnabled: Boolean,\n        fullScreen: Boolean,\n        height: [Function, Number, String],\n        hideOnParentScroll: Boolean,\n        hint: String,\n        hoverStateEnabled: Boolean,\n        maxHeight: [Function, Number, String],\n        maxWidth: [Function, Number, String],\n        minHeight: [Function, Number, String],\n        minWidth: [Function, Number, String],\n        onContentReady: Function,\n        onDisposing: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onHidden: Function,\n        onHiding: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        onResize: Function,\n        onResizeEnd: Function,\n        onResizeStart: Function,\n        onShowing: Function,\n        onShown: Function,\n        onTitleRendered: Function,\n        position: [Function, Object, String],\n        resizeEnabled: Boolean,\n        restorePosition: Boolean,\n        rtlEnabled: Boolean,\n        shading: Boolean,\n        shadingColor: String,\n        showCloseButton: Boolean,\n        showTitle: Boolean,\n        tabIndex: Number,\n        title: String,\n        titleTemplate: {},\n        toolbarItems: Array,\n        visible: Boolean,\n        width: [Function, Number, String],\n        wrapperAttr: {}\n    }\n});\nexports.DxPopup = DxPopup;\nDxPopup.$_optionName = \"popup\";\nDxPopup.$_expectedChildren = {\n    animation: { isCollectionItem: false, optionName: \"animation\" },\n    position: { isCollectionItem: false, optionName: \"position\" },\n    toolbarItem: { isCollectionItem: true, optionName: \"toolbarItems\" }\n};\nvar DxPosition = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:at\": null,\n        \"update:boundary\": null,\n        \"update:boundaryOffset\": null,\n        \"update:collision\": null,\n        \"update:my\": null,\n        \"update:of\": null,\n        \"update:offset\": null,\n    },\n    props: {\n        at: [Object, String],\n        boundary: {},\n        boundaryOffset: [Object, String],\n        collision: [Object, String],\n        my: [Object, String],\n        of: {},\n        offset: [Object, String]\n    }\n});\nexports.DxPosition = DxPosition;\nDxPosition.$_optionName = \"position\";\nvar DxRangeRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:max\": null,\n        \"update:message\": null,\n        \"update:min\": null,\n        \"update:reevaluate\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        max: {},\n        message: String,\n        min: {},\n        reevaluate: Boolean,\n        type: String\n    }\n});\nexports.DxRangeRule = DxRangeRule;\nDxRangeRule.$_optionName = \"validationRules\";\nDxRangeRule.$_isCollectionItem = true;\nDxRangeRule.$_predefinedProps = {\n    type: \"range\"\n};\nvar DxRemoteOperations = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:filtering\": null,\n        \"update:grouping\": null,\n        \"update:groupPaging\": null,\n        \"update:paging\": null,\n        \"update:sorting\": null,\n        \"update:summary\": null,\n    },\n    props: {\n        filtering: Boolean,\n        grouping: Boolean,\n        groupPaging: Boolean,\n        paging: Boolean,\n        sorting: Boolean,\n        summary: Boolean\n    }\n});\nexports.DxRemoteOperations = DxRemoteOperations;\nDxRemoteOperations.$_optionName = \"remoteOperations\";\nvar DxRequiredRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:message\": null,\n        \"update:trim\": null,\n        \"update:type\": null,\n    },\n    props: {\n        message: String,\n        trim: Boolean,\n        type: String\n    }\n});\nexports.DxRequiredRule = DxRequiredRule;\nDxRequiredRule.$_optionName = \"validationRules\";\nDxRequiredRule.$_isCollectionItem = true;\nDxRequiredRule.$_predefinedProps = {\n    type: \"required\"\n};\nvar DxRowDragging = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowDropInsideItem\": null,\n        \"update:allowReordering\": null,\n        \"update:autoScroll\": null,\n        \"update:boundary\": null,\n        \"update:container\": null,\n        \"update:cursorOffset\": null,\n        \"update:data\": null,\n        \"update:dragDirection\": null,\n        \"update:dragTemplate\": null,\n        \"update:dropFeedbackMode\": null,\n        \"update:filter\": null,\n        \"update:group\": null,\n        \"update:handle\": null,\n        \"update:onAdd\": null,\n        \"update:onDragChange\": null,\n        \"update:onDragEnd\": null,\n        \"update:onDragMove\": null,\n        \"update:onDragStart\": null,\n        \"update:onRemove\": null,\n        \"update:onReorder\": null,\n        \"update:scrollSensitivity\": null,\n        \"update:scrollSpeed\": null,\n        \"update:showDragIcons\": null,\n    },\n    props: {\n        allowDropInsideItem: Boolean,\n        allowReordering: Boolean,\n        autoScroll: Boolean,\n        boundary: {},\n        container: {},\n        cursorOffset: [Object, String],\n        data: {},\n        dragDirection: String,\n        dragTemplate: {},\n        dropFeedbackMode: String,\n        filter: String,\n        group: String,\n        handle: String,\n        onAdd: Function,\n        onDragChange: Function,\n        onDragEnd: Function,\n        onDragMove: Function,\n        onDragStart: Function,\n        onRemove: Function,\n        onReorder: Function,\n        scrollSensitivity: Number,\n        scrollSpeed: Number,\n        showDragIcons: Boolean\n    }\n});\nexports.DxRowDragging = DxRowDragging;\nDxRowDragging.$_optionName = \"rowDragging\";\nDxRowDragging.$_expectedChildren = {\n    cursorOffset: { isCollectionItem: false, optionName: \"cursorOffset\" }\n};\nvar DxScrolling = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:columnRenderingMode\": null,\n        \"update:mode\": null,\n        \"update:preloadEnabled\": null,\n        \"update:renderAsync\": null,\n        \"update:rowRenderingMode\": null,\n        \"update:scrollByContent\": null,\n        \"update:scrollByThumb\": null,\n        \"update:showScrollbar\": null,\n        \"update:useNative\": null,\n    },\n    props: {\n        columnRenderingMode: String,\n        mode: String,\n        preloadEnabled: Boolean,\n        renderAsync: Boolean,\n        rowRenderingMode: String,\n        scrollByContent: Boolean,\n        scrollByThumb: Boolean,\n        showScrollbar: String,\n        useNative: [Boolean, String]\n    }\n});\nexports.DxScrolling = DxScrolling;\nDxScrolling.$_optionName = \"scrolling\";\nvar DxSearchPanel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:highlightCaseSensitive\": null,\n        \"update:highlightSearchText\": null,\n        \"update:placeholder\": null,\n        \"update:searchVisibleColumnsOnly\": null,\n        \"update:text\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        highlightCaseSensitive: Boolean,\n        highlightSearchText: Boolean,\n        placeholder: String,\n        searchVisibleColumnsOnly: Boolean,\n        text: String,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxSearchPanel = DxSearchPanel;\nDxSearchPanel.$_optionName = \"searchPanel\";\nvar DxSelection = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSelectAll\": null,\n        \"update:deferred\": null,\n        \"update:maxFilterLengthInRequest\": null,\n        \"update:mode\": null,\n        \"update:selectAllMode\": null,\n        \"update:showCheckBoxesMode\": null,\n    },\n    props: {\n        allowSelectAll: Boolean,\n        deferred: Boolean,\n        maxFilterLengthInRequest: Number,\n        mode: String,\n        selectAllMode: String,\n        showCheckBoxesMode: String\n    }\n});\nexports.DxSelection = DxSelection;\nDxSelection.$_optionName = \"selection\";\nvar DxShow = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:complete\": null,\n        \"update:delay\": null,\n        \"update:direction\": null,\n        \"update:duration\": null,\n        \"update:easing\": null,\n        \"update:from\": null,\n        \"update:staggerDelay\": null,\n        \"update:start\": null,\n        \"update:to\": null,\n        \"update:type\": null,\n    },\n    props: {\n        complete: Function,\n        delay: Number,\n        direction: String,\n        duration: Number,\n        easing: String,\n        from: Object,\n        staggerDelay: Number,\n        start: Function,\n        to: Object,\n        type: String\n    }\n});\nexports.DxShow = DxShow;\nDxShow.$_optionName = \"show\";\nvar DxSortByGroupSummaryInfo = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:groupColumn\": null,\n        \"update:sortOrder\": null,\n        \"update:summaryItem\": null,\n    },\n    props: {\n        groupColumn: String,\n        sortOrder: String,\n        summaryItem: [Number, String]\n    }\n});\nexports.DxSortByGroupSummaryInfo = DxSortByGroupSummaryInfo;\nDxSortByGroupSummaryInfo.$_optionName = \"sortByGroupSummaryInfo\";\nDxSortByGroupSummaryInfo.$_isCollectionItem = true;\nvar DxSorting = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ascendingText\": null,\n        \"update:clearText\": null,\n        \"update:descendingText\": null,\n        \"update:mode\": null,\n        \"update:showSortIndexes\": null,\n    },\n    props: {\n        ascendingText: String,\n        clearText: String,\n        descendingText: String,\n        mode: String,\n        showSortIndexes: Boolean\n    }\n});\nexports.DxSorting = DxSorting;\nDxSorting.$_optionName = \"sorting\";\nvar DxStateStoring = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:customLoad\": null,\n        \"update:customSave\": null,\n        \"update:enabled\": null,\n        \"update:savingTimeout\": null,\n        \"update:storageKey\": null,\n        \"update:type\": null,\n    },\n    props: {\n        customLoad: Function,\n        customSave: Function,\n        enabled: Boolean,\n        savingTimeout: Number,\n        storageKey: String,\n        type: String\n    }\n});\nexports.DxStateStoring = DxStateStoring;\nDxStateStoring.$_optionName = \"stateStoring\";\nvar DxStringLengthRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:max\": null,\n        \"update:message\": null,\n        \"update:min\": null,\n        \"update:trim\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        max: Number,\n        message: String,\n        min: Number,\n        trim: Boolean,\n        type: String\n    }\n});\nexports.DxStringLengthRule = DxStringLengthRule;\nDxStringLengthRule.$_optionName = \"validationRules\";\nDxStringLengthRule.$_isCollectionItem = true;\nDxStringLengthRule.$_predefinedProps = {\n    type: \"stringLength\"\n};\nvar DxSummary = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:calculateCustomSummary\": null,\n        \"update:groupItems\": null,\n        \"update:recalculateWhileEditing\": null,\n        \"update:skipEmptyValues\": null,\n        \"update:texts\": null,\n        \"update:totalItems\": null,\n    },\n    props: {\n        calculateCustomSummary: Function,\n        groupItems: Array,\n        recalculateWhileEditing: Boolean,\n        skipEmptyValues: Boolean,\n        texts: Object,\n        totalItems: Array\n    }\n});\nexports.DxSummary = DxSummary;\nDxSummary.$_optionName = \"summary\";\nDxSummary.$_expectedChildren = {\n    groupItem: { isCollectionItem: true, optionName: \"groupItems\" },\n    summaryTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" },\n    totalItem: { isCollectionItem: true, optionName: \"totalItems\" }\n};\nvar DxSummaryTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:avg\": null,\n        \"update:avgOtherColumn\": null,\n        \"update:count\": null,\n        \"update:max\": null,\n        \"update:maxOtherColumn\": null,\n        \"update:min\": null,\n        \"update:minOtherColumn\": null,\n        \"update:sum\": null,\n        \"update:sumOtherColumn\": null,\n    },\n    props: {\n        avg: String,\n        avgOtherColumn: String,\n        count: String,\n        max: String,\n        maxOtherColumn: String,\n        min: String,\n        minOtherColumn: String,\n        sum: String,\n        sumOtherColumn: String\n    }\n});\nexports.DxSummaryTexts = DxSummaryTexts;\nDxSummaryTexts.$_optionName = \"texts\";\nvar DxTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:addRow\": null,\n        \"update:avg\": null,\n        \"update:avgOtherColumn\": null,\n        \"update:cancel\": null,\n        \"update:cancelAllChanges\": null,\n        \"update:cancelRowChanges\": null,\n        \"update:clearFilter\": null,\n        \"update:confirmDeleteMessage\": null,\n        \"update:confirmDeleteTitle\": null,\n        \"update:count\": null,\n        \"update:createFilter\": null,\n        \"update:deleteRow\": null,\n        \"update:editRow\": null,\n        \"update:emptyValue\": null,\n        \"update:exportAll\": null,\n        \"update:exportSelectedRows\": null,\n        \"update:exportTo\": null,\n        \"update:filterEnabledHint\": null,\n        \"update:fix\": null,\n        \"update:groupByThisColumn\": null,\n        \"update:groupContinuedMessage\": null,\n        \"update:groupContinuesMessage\": null,\n        \"update:leftPosition\": null,\n        \"update:max\": null,\n        \"update:maxOtherColumn\": null,\n        \"update:min\": null,\n        \"update:minOtherColumn\": null,\n        \"update:ok\": null,\n        \"update:rightPosition\": null,\n        \"update:saveAllChanges\": null,\n        \"update:saveRowChanges\": null,\n        \"update:sum\": null,\n        \"update:sumOtherColumn\": null,\n        \"update:undeleteRow\": null,\n        \"update:unfix\": null,\n        \"update:ungroup\": null,\n        \"update:ungroupAll\": null,\n        \"update:validationCancelChanges\": null,\n    },\n    props: {\n        addRow: String,\n        avg: String,\n        avgOtherColumn: String,\n        cancel: String,\n        cancelAllChanges: String,\n        cancelRowChanges: String,\n        clearFilter: String,\n        confirmDeleteMessage: String,\n        confirmDeleteTitle: String,\n        count: String,\n        createFilter: String,\n        deleteRow: String,\n        editRow: String,\n        emptyValue: String,\n        exportAll: String,\n        exportSelectedRows: String,\n        exportTo: String,\n        filterEnabledHint: String,\n        fix: String,\n        groupByThisColumn: String,\n        groupContinuedMessage: String,\n        groupContinuesMessage: String,\n        leftPosition: String,\n        max: String,\n        maxOtherColumn: String,\n        min: String,\n        minOtherColumn: String,\n        ok: String,\n        rightPosition: String,\n        saveAllChanges: String,\n        saveRowChanges: String,\n        sum: String,\n        sumOtherColumn: String,\n        undeleteRow: String,\n        unfix: String,\n        ungroup: String,\n        ungroupAll: String,\n        validationCancelChanges: String\n    }\n});\nexports.DxTexts = DxTexts;\nDxTexts.$_optionName = \"texts\";\nvar DxTo = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:left\": null,\n        \"update:opacity\": null,\n        \"update:position\": null,\n        \"update:scale\": null,\n        \"update:top\": null,\n    },\n    props: {\n        left: Number,\n        opacity: Number,\n        position: Object,\n        scale: Number,\n        top: Number\n    }\n});\nexports.DxTo = DxTo;\nDxTo.$_optionName = \"to\";\nvar DxToolbar = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:disabled\": null,\n        \"update:items\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        disabled: Boolean,\n        items: Array,\n        visible: Boolean\n    }\n});\nexports.DxToolbar = DxToolbar;\nDxToolbar.$_optionName = \"toolbar\";\nDxToolbar.$_expectedChildren = {\n    item: { isCollectionItem: true, optionName: \"items\" }\n};\nvar DxToolbarItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:disabled\": null,\n        \"update:html\": null,\n        \"update:location\": null,\n        \"update:options\": null,\n        \"update:template\": null,\n        \"update:text\": null,\n        \"update:toolbar\": null,\n        \"update:visible\": null,\n        \"update:widget\": null,\n    },\n    props: {\n        disabled: Boolean,\n        html: String,\n        location: String,\n        options: {},\n        template: {},\n        text: String,\n        toolbar: String,\n        visible: Boolean,\n        widget: String\n    }\n});\nexports.DxToolbarItem = DxToolbarItem;\nDxToolbarItem.$_optionName = \"toolbarItems\";\nDxToolbarItem.$_isCollectionItem = true;\nvar DxTotalItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignment\": null,\n        \"update:column\": null,\n        \"update:cssClass\": null,\n        \"update:customizeText\": null,\n        \"update:displayFormat\": null,\n        \"update:name\": null,\n        \"update:showInColumn\": null,\n        \"update:skipEmptyValues\": null,\n        \"update:summaryType\": null,\n        \"update:valueFormat\": null,\n    },\n    props: {\n        alignment: String,\n        column: String,\n        cssClass: String,\n        customizeText: Function,\n        displayFormat: String,\n        name: String,\n        showInColumn: String,\n        skipEmptyValues: Boolean,\n        summaryType: String,\n        valueFormat: [Object, Function, String]\n    }\n});\nexports.DxTotalItem = DxTotalItem;\nDxTotalItem.$_optionName = \"totalItems\";\nDxTotalItem.$_isCollectionItem = true;\nDxTotalItem.$_expectedChildren = {\n    valueFormat: { isCollectionItem: false, optionName: \"valueFormat\" }\n};\nvar DxValidationRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:comparisonTarget\": null,\n        \"update:comparisonType\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:max\": null,\n        \"update:message\": null,\n        \"update:min\": null,\n        \"update:pattern\": null,\n        \"update:reevaluate\": null,\n        \"update:trim\": null,\n        \"update:type\": null,\n        \"update:validationCallback\": null,\n    },\n    props: {\n        comparisonTarget: Function,\n        comparisonType: String,\n        ignoreEmptyValue: Boolean,\n        max: {},\n        message: String,\n        min: {},\n        pattern: {},\n        reevaluate: Boolean,\n        trim: Boolean,\n        type: String,\n        validationCallback: Function\n    }\n});\nexports.DxValidationRule = DxValidationRule;\nDxValidationRule.$_optionName = \"validationRules\";\nDxValidationRule.$_isCollectionItem = true;\nDxValidationRule.$_predefinedProps = {\n    type: \"required\"\n};\nvar DxValueFormat = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:currency\": null,\n        \"update:formatter\": null,\n        \"update:parser\": null,\n        \"update:precision\": null,\n        \"update:type\": null,\n    },\n    props: {\n        currency: String,\n        formatter: Function,\n        parser: Function,\n        precision: Number,\n        type: String\n    }\n});\nexports.DxValueFormat = DxValueFormat;\nDxValueFormat.$_optionName = \"valueFormat\";\nexports.default = DxDataGrid;\n","/**\r\n * DevExtreme (esm/data/data_source.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    DataSource\r\n} from \"./data_source/data_source\";\r\nexport default DataSource;\r\n","/**\r\n * DevExtreme (esm/data/odata/utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    type,\r\n    isObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nimport ajax from \"../../core/utils/ajax\";\r\nimport _Guid from \"../../core/guid\";\r\nimport {\r\n    grep\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    errors\r\n} from \"../errors\";\r\nimport {\r\n    errorMessageFromXhr,\r\n    XHR_ERROR_UNLOAD\r\n} from \"../utils\";\r\nimport {\r\n    format as stringFormat\r\n} from \"../../core/utils/string\";\r\nvar GUID_REGEX = /^(\\{{0,1}([0-9a-fA-F]){8}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){4}-([0-9a-fA-F]){12}\\}{0,1})$/;\r\nvar VERBOSE_DATE_REGEX = /^\\/Date\\((-?\\d+)((\\+|-)?(\\d+)?)\\)\\/$/;\r\nvar ISO8601_DATE_REGEX = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(Z|[-+]{1}\\d{2}(:?)(\\d{2})?)?$/;\r\nvar JSON_VERBOSE_MIME_TYPE = \"application/json;odata=verbose\";\r\nvar makeArray = value => \"string\" === type(value) ? value.split() : value;\r\nvar hasDot = x => /\\./.test(x);\r\nvar pad = (text, length, right) => {\r\n    text = String(text);\r\n    while (text.length < length) {\r\n        text = right ? \"\".concat(text, \"0\") : \"0\".concat(text)\r\n    }\r\n    return text\r\n};\r\nvar formatISO8601 = (date, skipZeroTime, skipTimezone) => {\r\n    var bag = [];\r\n    var padLeft2 = text => pad(text, 2);\r\n    bag.push(date.getFullYear());\r\n    bag.push(\"-\");\r\n    bag.push(padLeft2(date.getMonth() + 1));\r\n    bag.push(\"-\");\r\n    bag.push(padLeft2(date.getDate()));\r\n    if (!(skipZeroTime && date.getHours() + date.getMinutes() + date.getSeconds() + date.getMilliseconds() < 1)) {\r\n        bag.push(\"T\");\r\n        bag.push(padLeft2(date.getHours()));\r\n        bag.push(\":\");\r\n        bag.push(padLeft2(date.getMinutes()));\r\n        bag.push(\":\");\r\n        bag.push(padLeft2(date.getSeconds()));\r\n        if (date.getMilliseconds()) {\r\n            bag.push(\".\");\r\n            bag.push(pad(date.getMilliseconds(), 3))\r\n        }\r\n        if (!skipTimezone) {\r\n            bag.push(\"Z\")\r\n        }\r\n    }\r\n    return bag.join(\"\")\r\n};\r\nvar parseISO8601 = isoString => {\r\n    var result = new Date(60 * new Date(0).getTimezoneOffset() * 1e3);\r\n    var chunks = isoString.replace(\"Z\", \"\").split(\"T\");\r\n    var date = /(\\d{4})-(\\d{2})-(\\d{2})/.exec(chunks[0]);\r\n    var time = /(\\d{2}):(\\d{2}):(\\d{2})\\.?(\\d{0,7})?/.exec(chunks[1]);\r\n    result.setFullYear(Number(date[1]));\r\n    result.setMonth(Number(date[2]) - 1);\r\n    result.setDate(Number(date[3]));\r\n    if (Array.isArray(time) && time.length) {\r\n        result.setHours(Number(time[1]));\r\n        result.setMinutes(Number(time[2]));\r\n        result.setSeconds(Number(time[3]));\r\n        var fractional = (time[4] || \"\").slice(0, 3);\r\n        fractional = pad(fractional, 3, true);\r\n        result.setMilliseconds(Number(fractional))\r\n    }\r\n    return result\r\n};\r\nvar isAbsoluteUrl = url => /^(?:[a-z]+:)?\\/\\//i.test(url);\r\nvar stripParams = url => {\r\n    var index = url.indexOf(\"?\");\r\n    if (index > -1) {\r\n        return url.substr(0, index)\r\n    }\r\n    return url\r\n};\r\nvar toAbsoluteUrl = (basePath, relativePath) => {\r\n    var part;\r\n    var baseParts = stripParams(basePath).split(\"/\");\r\n    var relativeParts = relativePath.split(\"/\");\r\n    baseParts.pop();\r\n    while (relativeParts.length) {\r\n        part = relativeParts.shift();\r\n        if (\"..\" === part) {\r\n            baseParts.pop()\r\n        } else {\r\n            baseParts.push(part)\r\n        }\r\n    }\r\n    return baseParts.join(\"/\")\r\n};\r\nvar param = params => {\r\n    var result = [];\r\n    for (var name in params) {\r\n        result.push(name + \"=\" + params[name])\r\n    }\r\n    return result.join(\"&\")\r\n};\r\nvar ajaxOptionsForRequest = function(protocolVersion, request) {\r\n    var _options$beforeSend;\r\n    var options = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\r\n    var formatPayload = payload => JSON.stringify(payload, (function(key, value) {\r\n        if (!(this[key] instanceof Date)) {\r\n            return value\r\n        }\r\n        value = formatISO8601(this[key]);\r\n        switch (protocolVersion) {\r\n            case 2:\r\n                return value.substr(0, value.length - 1);\r\n            case 3:\r\n            case 4:\r\n                return value;\r\n            default:\r\n                throw errors.Error(\"E4002\")\r\n        }\r\n    }));\r\n    request = extend({\r\n        async: true,\r\n        method: \"get\",\r\n        url: \"\",\r\n        params: {},\r\n        payload: null,\r\n        headers: {},\r\n        timeout: 3e4\r\n    }, request);\r\n    null === (_options$beforeSend = options.beforeSend) || void 0 === _options$beforeSend ? void 0 : _options$beforeSend.call(options, request);\r\n    var {\r\n        async: async,\r\n        timeout: timeout,\r\n        headers: headers\r\n    } = request;\r\n    var {\r\n        url: url,\r\n        method: method\r\n    } = request;\r\n    var {\r\n        jsonp: jsonp,\r\n        withCredentials: withCredentials\r\n    } = options;\r\n    method = (method || \"get\").toLowerCase();\r\n    var isGet = \"get\" === method;\r\n    var useJsonp = isGet && jsonp;\r\n    var params = extend({}, request.params);\r\n    var ajaxData = isGet ? params : formatPayload(request.payload);\r\n    var qs = !isGet && param(params);\r\n    var contentType = !isGet && JSON_VERBOSE_MIME_TYPE;\r\n    if (qs) {\r\n        url += (url.indexOf(\"?\") > -1 ? \"&\" : \"?\") + qs\r\n    }\r\n    if (useJsonp) {\r\n        ajaxData.$format = \"json\"\r\n    }\r\n    return {\r\n        url: url,\r\n        data: ajaxData,\r\n        dataType: useJsonp ? \"jsonp\" : \"json\",\r\n        jsonp: useJsonp && \"$callback\",\r\n        method: method,\r\n        async: async,\r\n        timeout: timeout,\r\n        headers: headers,\r\n        contentType: contentType,\r\n        accepts: {\r\n            json: [JSON_VERBOSE_MIME_TYPE, \"text/plain\"].join()\r\n        },\r\n        xhrFields: {\r\n            withCredentials: withCredentials\r\n        }\r\n    }\r\n};\r\nexport var sendRequest = (protocolVersion, request, options) => {\r\n    var {\r\n        deserializeDates: deserializeDates,\r\n        fieldTypes: fieldTypes,\r\n        countOnly: countOnly,\r\n        isPaged: isPaged\r\n    } = options;\r\n    var d = new Deferred;\r\n    var ajaxOptions = ajaxOptionsForRequest(protocolVersion, request, options);\r\n    ajax.sendRequest(ajaxOptions).always((obj, textStatus) => {\r\n        var transformOptions = {\r\n            deserializeDates: deserializeDates,\r\n            fieldTypes: fieldTypes\r\n        };\r\n        var tuple = interpretJsonFormat(obj, textStatus, transformOptions, ajaxOptions);\r\n        var {\r\n            error: error,\r\n            data: data,\r\n            count: count\r\n        } = tuple;\r\n        var {\r\n            nextUrl: nextUrl\r\n        } = tuple;\r\n        if (error) {\r\n            if (error.message !== XHR_ERROR_UNLOAD) {\r\n                d.reject(error)\r\n            }\r\n        } else if (countOnly) {\r\n            if (isFinite(count)) {\r\n                d.resolve(count)\r\n            } else {\r\n                d.reject(new errors.Error(\"E4018\"))\r\n            }\r\n        } else if (nextUrl && !isPaged) {\r\n            if (!isAbsoluteUrl(nextUrl)) {\r\n                nextUrl = toAbsoluteUrl(ajaxOptions.url, nextUrl)\r\n            }\r\n            sendRequest(protocolVersion, {\r\n                url: nextUrl\r\n            }, options).fail(d.reject).done(nextData => d.resolve(data.concat(nextData)))\r\n        } else {\r\n            var extra = isFinite(count) ? {\r\n                totalCount: count\r\n            } : void 0;\r\n            d.resolve(data, extra)\r\n        }\r\n    });\r\n    return d.promise()\r\n};\r\nvar formatDotNetError = errorObj => {\r\n    var message;\r\n    var currentError = errorObj;\r\n    if (\"message\" in errorObj) {\r\n        var _errorObj$message;\r\n        message = (null === (_errorObj$message = errorObj.message) || void 0 === _errorObj$message ? void 0 : _errorObj$message.value) || errorObj.message\r\n    }\r\n    while (currentError = currentError.innererror || currentError.internalexception) {\r\n        message = currentError.message;\r\n        if (currentError.internalexception && -1 === message.indexOf(\"inner exception\")) {\r\n            break\r\n        }\r\n    }\r\n    return message\r\n};\r\nvar errorFromResponse = (obj, textStatus, ajaxOptions) => {\r\n    var _response, _response2, _response3, _response4;\r\n    if (\"nocontent\" === textStatus) {\r\n        return null\r\n    }\r\n    var message = \"Unknown error\";\r\n    var response = obj;\r\n    var httpStatus = 200;\r\n    var errorData = {\r\n        requestOptions: ajaxOptions\r\n    };\r\n    if (\"success\" !== textStatus) {\r\n        var {\r\n            status: status,\r\n            responseText: responseText\r\n        } = obj;\r\n        httpStatus = status;\r\n        message = errorMessageFromXhr(obj, textStatus);\r\n        try {\r\n            response = JSON.parse(responseText)\r\n        } catch (x) {}\r\n    }\r\n    var errorObj = (null === (_response = response) || void 0 === _response ? void 0 : _response.then) || (null === (_response2 = response) || void 0 === _response2 ? void 0 : _response2.error) || (null === (_response3 = response) || void 0 === _response3 ? void 0 : _response3[\"odata.error\"]) || (null === (_response4 = response) || void 0 === _response4 ? void 0 : _response4[\"@odata.error\"]);\r\n    if (errorObj) {\r\n        message = formatDotNetError(errorObj) || message;\r\n        errorData.errorDetails = errorObj;\r\n        if (200 === httpStatus) {\r\n            httpStatus = 500\r\n        }\r\n        var customCode = Number(errorObj.code);\r\n        if (isFinite(customCode) && customCode >= 400) {\r\n            httpStatus = customCode\r\n        }\r\n    }\r\n    if (httpStatus >= 400 || 0 === httpStatus) {\r\n        errorData.httpStatus = httpStatus;\r\n        return extend(Error(message), errorData)\r\n    }\r\n    return null\r\n};\r\nvar interpretJsonFormat = (obj, textStatus, transformOptions, ajaxOptions) => {\r\n    var error = errorFromResponse(obj, textStatus, ajaxOptions);\r\n    if (error) {\r\n        return {\r\n            error: error\r\n        }\r\n    }\r\n    if (!isPlainObject(obj)) {\r\n        return {\r\n            data: obj\r\n        }\r\n    }\r\n    var value = \"d\" in obj && (Array.isArray(obj.d) || isObject(obj.d)) ? interpretVerboseJsonFormat(obj, textStatus) : interpretLightJsonFormat(obj, textStatus);\r\n    transformTypes(value, transformOptions);\r\n    return value\r\n};\r\nvar interpretVerboseJsonFormat = _ref => {\r\n    var _data$results;\r\n    var {\r\n        d: data\r\n    } = _ref;\r\n    if (!isDefined(data)) {\r\n        return {\r\n            error: Error(\"Malformed or unsupported JSON response received\")\r\n        }\r\n    }\r\n    return {\r\n        data: null !== (_data$results = data.results) && void 0 !== _data$results ? _data$results : data,\r\n        nextUrl: data.__next,\r\n        count: parseInt(data.__count, 10)\r\n    }\r\n};\r\nvar interpretLightJsonFormat = obj => {\r\n    var _obj$value;\r\n    return {\r\n        data: null !== (_obj$value = obj.value) && void 0 !== _obj$value ? _obj$value : obj,\r\n        nextUrl: obj[\"@odata.nextLink\"],\r\n        count: parseInt(obj[\"@odata.count\"], 10)\r\n    }\r\n};\r\nexport var EdmLiteral = Class.inherit({\r\n    ctor(value) {\r\n        this._value = value\r\n    },\r\n    valueOf() {\r\n        return this._value\r\n    }\r\n});\r\nvar transformTypes = function transformTypes(obj) {\r\n    var options = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\r\n    each(obj, (key, value) => {\r\n        if (null !== value && \"object\" === typeof value) {\r\n            if (\"results\" in value) {\r\n                obj[key] = value.results\r\n            }\r\n            transformTypes(obj[key], options)\r\n        } else if (\"string\" === typeof value) {\r\n            var {\r\n                fieldTypes: fieldTypes,\r\n                deserializeDates: deserializeDates\r\n            } = options;\r\n            var canBeGuid = !fieldTypes || \"String\" !== fieldTypes[key];\r\n            if (canBeGuid && GUID_REGEX.test(value)) {\r\n                obj[key] = new _Guid(value)\r\n            }\r\n            if (false !== deserializeDates) {\r\n                if (value.match(VERBOSE_DATE_REGEX)) {\r\n                    var date = new Date(Number(RegExp.$1) + 60 * RegExp.$2 * 1e3);\r\n                    obj[key] = new Date(date.valueOf() + 60 * date.getTimezoneOffset() * 1e3)\r\n                } else if (ISO8601_DATE_REGEX.test(value)) {\r\n                    obj[key] = new Date(parseISO8601(obj[key]).valueOf())\r\n                }\r\n            }\r\n        }\r\n    })\r\n};\r\nvar serializeDate = date => \"datetime'\".concat(formatISO8601(date, true, true), \"'\");\r\nvar serializeString = value => \"'\".concat(value.replace(/'/g, \"''\"), \"'\");\r\nexport var serializePropName = propName => propName instanceof EdmLiteral ? propName.valueOf() : propName.replace(/\\./g, \"/\");\r\nvar serializeValueV4 = value => {\r\n    if (value instanceof Date) {\r\n        return formatISO8601(value, false, false)\r\n    }\r\n    if (value instanceof _Guid) {\r\n        return value.valueOf()\r\n    }\r\n    if (Array.isArray(value)) {\r\n        return \"[\".concat(value.map(item => serializeValueV4(item)).join(\",\"), \"]\")\r\n    }\r\n    return serializeValueV2(value)\r\n};\r\nvar serializeValueV2 = value => {\r\n    if (value instanceof Date) {\r\n        return serializeDate(value)\r\n    }\r\n    if (value instanceof _Guid) {\r\n        return \"guid'\".concat(value, \"'\")\r\n    }\r\n    if (value instanceof EdmLiteral) {\r\n        return value.valueOf()\r\n    }\r\n    if (\"string\" === typeof value) {\r\n        return serializeString(value)\r\n    }\r\n    return String(value)\r\n};\r\nexport var serializeValue = (value, protocolVersion) => {\r\n    switch (protocolVersion) {\r\n        case 2:\r\n        case 3:\r\n            return serializeValueV2(value);\r\n        case 4:\r\n            return serializeValueV4(value);\r\n        default:\r\n            throw errors.Error(\"E4002\")\r\n    }\r\n};\r\nexport var serializeKey = (key, protocolVersion) => {\r\n    if (isPlainObject(key)) {\r\n        var parts = [];\r\n        each(key, (k, v) => parts.push(\"\".concat(serializePropName(k), \"=\").concat(serializeValue(v, protocolVersion))));\r\n        return parts.join()\r\n    }\r\n    return serializeValue(key, protocolVersion)\r\n};\r\nexport var keyConverters = {\r\n    String: value => \"\".concat(value),\r\n    Int32: value => Math.floor(value),\r\n    Int64: value => value instanceof EdmLiteral ? value : new EdmLiteral(\"\".concat(value, \"L\")),\r\n    Guid: value => value instanceof _Guid ? value : new _Guid(value),\r\n    Boolean: value => !!value,\r\n    Single: value => value instanceof EdmLiteral ? value : new EdmLiteral(value + \"f\"),\r\n    Decimal: value => value instanceof EdmLiteral ? value : new EdmLiteral(value + \"m\")\r\n};\r\nexport var convertPrimitiveValue = (type, value) => {\r\n    if (null === value) {\r\n        return null\r\n    }\r\n    var converter = keyConverters[type];\r\n    if (!converter) {\r\n        throw errors.Error(\"E4014\", type)\r\n    }\r\n    return converter(value)\r\n};\r\nexport var generateSelect = (oDataVersion, select) => {\r\n    if (!select) {\r\n        return\r\n    }\r\n    return oDataVersion < 4 ? serializePropName(select.join()) : grep(select, hasDot, true).join()\r\n};\r\nvar formatCore = hash => {\r\n    var result = \"\";\r\n    var selectValue = [];\r\n    var expandValue = [];\r\n    each(hash, (key, value) => {\r\n        if (Array.isArray(value)) {\r\n            [].push.apply(selectValue, value)\r\n        }\r\n        if (isPlainObject(value)) {\r\n            expandValue.push(\"\".concat(key).concat(formatCore(value)))\r\n        }\r\n    });\r\n    if (selectValue.length || expandValue.length) {\r\n        result += \"(\";\r\n        if (selectValue.length) {\r\n            result += \"$select=\".concat(map(selectValue, serializePropName).join())\r\n        }\r\n        if (expandValue.length) {\r\n            if (selectValue.length) {\r\n                result += \";\"\r\n            }\r\n            result += \"$expand=\".concat(map(expandValue, serializePropName).join())\r\n        }\r\n        result += \")\"\r\n    }\r\n    return result\r\n};\r\nvar format = hash => {\r\n    var result = [];\r\n    each(hash, (key, value) => result.push(\"\".concat(key).concat(formatCore(value))));\r\n    return result.join()\r\n};\r\nvar parseCore = (exprParts, root, stepper) => {\r\n    var result = stepper(root, exprParts.shift(), exprParts);\r\n    if (false === result) {\r\n        return\r\n    }\r\n    parseCore(exprParts, result, stepper)\r\n};\r\nvar parseTree = (exprs, root, stepper) => each(exprs, (_, x) => parseCore(x.split(\".\"), root, stepper));\r\nvar generatorV2 = (expand, select) => {\r\n    var hash = {};\r\n    if (expand) {\r\n        each(makeArray(expand), (function() {\r\n            hash[serializePropName(this)] = 1\r\n        }))\r\n    }\r\n    if (select) {\r\n        each(makeArray(select), (function() {\r\n            var path = this.split(\".\");\r\n            if (path.length < 2) {\r\n                return\r\n            }\r\n            path.pop();\r\n            hash[serializePropName(path.join(\".\"))] = 1\r\n        }))\r\n    }\r\n    return map(hash, (_, v) => v).join()\r\n};\r\nvar generatorV4 = (expand, select) => {\r\n    var hash = {};\r\n    if (expand || select) {\r\n        if (expand) {\r\n            parseTree(makeArray(expand), hash, (node, key, path) => {\r\n                node[key] = node[key] || {};\r\n                return !path.length ? false : node[key]\r\n            })\r\n        }\r\n        if (select) {\r\n            parseTree(grep(makeArray(select), hasDot), hash, (node, key, path) => {\r\n                if (!path.length) {\r\n                    node[key] = node[key] || [];\r\n                    node[key].push(key);\r\n                    return false\r\n                }\r\n                return node[key] = node[key] || {}\r\n            })\r\n        }\r\n        return format(hash)\r\n    }\r\n};\r\nexport var generateExpand = (oDataVersion, expand, select) => oDataVersion < 4 ? generatorV2(expand, select) : generatorV4(expand, select);\r\nexport var formatFunctionInvocationUrl = (baseUrl, args) => stringFormat(\"{0}({1})\", baseUrl, map(args || {}, (value, key) => stringFormat(\"{0}={1}\", key, value)).join(\",\"));\r\nexport var escapeServiceOperationParams = (params, version) => {\r\n    if (!params) {\r\n        return params\r\n    }\r\n    var result = {};\r\n    each(params, (k, v) => {\r\n        result[k] = serializeValue(v, version)\r\n    });\r\n    return result\r\n};\r\n","/**\r\n * DevExtreme (esm/data/odata/query_adapter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport config from \"../../core/config\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport queryAdapters from \"../query_adapters\";\r\nimport {\r\n    sendRequest,\r\n    generateSelect,\r\n    generateExpand,\r\n    serializeValue,\r\n    convertPrimitiveValue,\r\n    serializePropName\r\n} from \"./utils\";\r\nimport {\r\n    errors\r\n} from \"../errors\";\r\nimport {\r\n    isConjunctiveOperator,\r\n    normalizeBinaryCriterion,\r\n    isUnaryOperation\r\n} from \"../utils\";\r\nvar DEFAULT_PROTOCOL_VERSION = 2;\r\nvar STRING_FUNCTIONS = [\"contains\", \"notcontains\", \"startswith\", \"endswith\"];\r\nvar compileCriteria = (() => {\r\n    var protocolVersion;\r\n    var forceLowerCase;\r\n    var fieldTypes;\r\n    var createBinaryOperationFormatter = op => (prop, val) => \"\".concat(prop, \" \").concat(op, \" \").concat(val);\r\n    var createStringFuncFormatter = (op, reverse) => (prop, val) => {\r\n        var bag = [op, \"(\"];\r\n        if (forceLowerCase) {\r\n            prop = -1 === prop.indexOf(\"tolower(\") ? \"tolower(\".concat(prop, \")\") : prop;\r\n            val = val.toLowerCase()\r\n        }\r\n        if (reverse) {\r\n            bag.push(val, \",\", prop)\r\n        } else {\r\n            bag.push(prop, \",\", val)\r\n        }\r\n        bag.push(\")\");\r\n        return bag.join(\"\")\r\n    };\r\n    var formatters = {\r\n        \"=\": createBinaryOperationFormatter(\"eq\"),\r\n        \"<>\": createBinaryOperationFormatter(\"ne\"),\r\n        \">\": createBinaryOperationFormatter(\"gt\"),\r\n        \">=\": createBinaryOperationFormatter(\"ge\"),\r\n        \"<\": createBinaryOperationFormatter(\"lt\"),\r\n        \"<=\": createBinaryOperationFormatter(\"le\"),\r\n        startswith: createStringFuncFormatter(\"startswith\"),\r\n        endswith: createStringFuncFormatter(\"endswith\")\r\n    };\r\n    var formattersV2 = extend({}, formatters, {\r\n        contains: createStringFuncFormatter(\"substringof\", true),\r\n        notcontains: createStringFuncFormatter(\"not substringof\", true)\r\n    });\r\n    var formattersV4 = extend({}, formatters, {\r\n        contains: createStringFuncFormatter(\"contains\"),\r\n        notcontains: createStringFuncFormatter(\"not contains\")\r\n    });\r\n    var compileBinary = criteria => {\r\n        var _fieldTypes;\r\n        criteria = normalizeBinaryCriterion(criteria);\r\n        var op = criteria[1];\r\n        var fieldName = criteria[0];\r\n        var fieldType = fieldTypes && fieldTypes[fieldName];\r\n        if (fieldType && (name = op, STRING_FUNCTIONS.some(funcName => funcName === name)) && \"String\" !== fieldType) {\r\n            throw new errors.Error(\"E4024\", op, fieldName, fieldType)\r\n        }\r\n        var name;\r\n        var formatters = 4 === protocolVersion ? formattersV4 : formattersV2;\r\n        var formatter = formatters[op.toLowerCase()];\r\n        if (!formatter) {\r\n            throw errors.Error(\"E4003\", op)\r\n        }\r\n        var value = criteria[2];\r\n        if (null !== (_fieldTypes = fieldTypes) && void 0 !== _fieldTypes && _fieldTypes[fieldName]) {\r\n            value = convertPrimitiveValue(fieldTypes[fieldName], value)\r\n        }\r\n        return formatter(serializePropName(fieldName), serializeValue(value, protocolVersion))\r\n    };\r\n    var compileGroup = criteria => {\r\n        var bag = [];\r\n        var groupOperator;\r\n        var nextGroupOperator;\r\n        each(criteria, (function(index, criterion) {\r\n            if (Array.isArray(criterion)) {\r\n                if (bag.length > 1 && groupOperator !== nextGroupOperator) {\r\n                    throw new errors.Error(\"E4019\")\r\n                }\r\n                bag.push(\"(\".concat(compileCore(criterion), \")\"));\r\n                groupOperator = nextGroupOperator;\r\n                nextGroupOperator = \"and\"\r\n            } else {\r\n                nextGroupOperator = isConjunctiveOperator(this) ? \"and\" : \"or\"\r\n            }\r\n        }));\r\n        return bag.join(\" \".concat(groupOperator, \" \"))\r\n    };\r\n    var compileCore = criteria => {\r\n        if (Array.isArray(criteria[0])) {\r\n            return compileGroup(criteria)\r\n        }\r\n        if (isUnaryOperation(criteria)) {\r\n            return (criteria => {\r\n                var op = criteria[0];\r\n                var crit = compileCore(criteria[1]);\r\n                if (\"!\" === op) {\r\n                    return \"not (\".concat(crit, \")\")\r\n                }\r\n                throw errors.Error(\"E4003\", op)\r\n            })(criteria)\r\n        }\r\n        return compileBinary(criteria)\r\n    };\r\n    return (criteria, version, types, filterToLower) => {\r\n        fieldTypes = types;\r\n        forceLowerCase = null !== filterToLower && void 0 !== filterToLower ? filterToLower : config().oDataFilterToLower;\r\n        protocolVersion = version;\r\n        return compileCore(criteria)\r\n    }\r\n})();\r\nvar createODataQueryAdapter = queryOptions => {\r\n    var _sorting = [];\r\n    var _criteria = [];\r\n    var _expand = queryOptions.expand;\r\n    var _select;\r\n    var _skip;\r\n    var _take;\r\n    var _countQuery;\r\n    var _oDataVersion = queryOptions.version || DEFAULT_PROTOCOL_VERSION;\r\n    var hasSlice = () => _skip || void 0 !== _take;\r\n    var hasFunction = criterion => {\r\n        for (var i = 0; i < criterion.length; i++) {\r\n            if (isFunction(criterion[i])) {\r\n                return true\r\n            }\r\n            if (Array.isArray(criterion[i]) && hasFunction(criterion[i])) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    };\r\n    var requestData = () => {\r\n        var result = {};\r\n        if (!_countQuery) {\r\n            if (_sorting.length) {\r\n                result.$orderby = _sorting.join(\",\")\r\n            }\r\n            if (_skip) {\r\n                result.$skip = _skip\r\n            }\r\n            if (void 0 !== _take) {\r\n                result.$top = _take\r\n            }\r\n            result.$select = generateSelect(_oDataVersion, _select) || void 0;\r\n            result.$expand = generateExpand(_oDataVersion, _expand, _select) || void 0\r\n        }\r\n        if (_criteria.length) {\r\n            var criteria = _criteria.length < 2 ? _criteria[0] : _criteria;\r\n            var fieldTypes = null === queryOptions || void 0 === queryOptions ? void 0 : queryOptions.fieldTypes;\r\n            var filterToLower = null === queryOptions || void 0 === queryOptions ? void 0 : queryOptions.filterToLower;\r\n            result.$filter = compileCriteria(criteria, _oDataVersion, fieldTypes, filterToLower)\r\n        }\r\n        if (_countQuery) {\r\n            result.$top = 0\r\n        }\r\n        if (queryOptions.requireTotalCount || _countQuery) {\r\n            if (4 !== _oDataVersion) {\r\n                result.$inlinecount = \"allpages\"\r\n            } else {\r\n                result.$count = \"true\"\r\n            }\r\n        }\r\n        return result\r\n    };\r\n    return {\r\n        optimize: tasks => {\r\n            var selectIndex = -1;\r\n            for (var i = 0; i < tasks.length; i++) {\r\n                if (\"select\" === tasks[i].name) {\r\n                    selectIndex = i;\r\n                    break\r\n                }\r\n            }\r\n            if (selectIndex < 0 || !isFunction(tasks[selectIndex].args[0])) {\r\n                return\r\n            }\r\n            var nextTask = tasks[1 + selectIndex];\r\n            if (!nextTask || \"slice\" !== nextTask.name) {\r\n                return\r\n            }\r\n            tasks[1 + selectIndex] = tasks[selectIndex];\r\n            tasks[selectIndex] = nextTask\r\n        },\r\n        exec: url => sendRequest(_oDataVersion, {\r\n            url: url,\r\n            params: extend(requestData(), null === queryOptions || void 0 === queryOptions ? void 0 : queryOptions.params)\r\n        }, {\r\n            beforeSend: queryOptions.beforeSend,\r\n            jsonp: queryOptions.jsonp,\r\n            withCredentials: queryOptions.withCredentials,\r\n            countOnly: _countQuery,\r\n            deserializeDates: queryOptions.deserializeDates,\r\n            fieldTypes: queryOptions.fieldTypes,\r\n            isPaged: isFinite(_take)\r\n        }),\r\n        multiSort(args) {\r\n            var rules;\r\n            if (hasSlice()) {\r\n                return false\r\n            }\r\n            for (var i = 0; i < args.length; i++) {\r\n                var getter = args[i][0];\r\n                var desc = !!args[i][1];\r\n                var rule = void 0;\r\n                if (\"string\" !== typeof getter) {\r\n                    return false\r\n                }\r\n                rule = serializePropName(getter);\r\n                if (desc) {\r\n                    rule += \" desc\"\r\n                }\r\n                rules = rules || [];\r\n                rules.push(rule)\r\n            }\r\n            _sorting = rules\r\n        },\r\n        slice(skipCount, takeCount) {\r\n            if (hasSlice()) {\r\n                return false\r\n            }\r\n            _skip = skipCount;\r\n            _take = takeCount\r\n        },\r\n        filter(criterion) {\r\n            if (hasSlice()) {\r\n                return false\r\n            }\r\n            if (!Array.isArray(criterion)) {\r\n                criterion = [].slice.call(arguments)\r\n            }\r\n            if (hasFunction(criterion)) {\r\n                return false\r\n            }\r\n            if (_criteria.length) {\r\n                _criteria.push(\"and\")\r\n            }\r\n            _criteria.push(criterion)\r\n        },\r\n        select(expr) {\r\n            if (_select || isFunction(expr)) {\r\n                return false\r\n            }\r\n            if (!Array.isArray(expr)) {\r\n                expr = [].slice.call(arguments)\r\n            }\r\n            _select = expr\r\n        },\r\n        count: () => _countQuery = true\r\n    }\r\n};\r\nqueryAdapters.odata = createODataQueryAdapter;\r\nexport var odata = createODataQueryAdapter;\r\n","/**\r\n * DevExtreme (esm/data/odata/request_dispatcher.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    sendRequest\r\n} from \"./utils\";\r\nimport \"./query_adapter\";\r\nvar DEFAULT_PROTOCOL_VERSION = 2;\r\nexport default class RequestDispatcher {\r\n    constructor(options) {\r\n        options = options || {};\r\n        this._url = String(options.url).replace(/\\/+$/, \"\");\r\n        this._beforeSend = options.beforeSend;\r\n        this._jsonp = options.jsonp;\r\n        this._version = options.version || DEFAULT_PROTOCOL_VERSION;\r\n        this._withCredentials = options.withCredentials;\r\n        this._deserializeDates = options.deserializeDates;\r\n        this._filterToLower = options.filterToLower\r\n    }\r\n    sendRequest(url, method, params, payload) {\r\n        return sendRequest(this.version, {\r\n            url: url,\r\n            method: method,\r\n            params: params || {},\r\n            payload: payload\r\n        }, {\r\n            beforeSend: this._beforeSend,\r\n            jsonp: this._jsonp,\r\n            withCredentials: this._withCredentials,\r\n            deserializeDates: this._deserializeDates\r\n        })\r\n    }\r\n    get version() {\r\n        return this._version\r\n    }\r\n    get beforeSend() {\r\n        return this._beforeSend\r\n    }\r\n    get url() {\r\n        return this._url\r\n    }\r\n    get jsonp() {\r\n        return this._jsonp\r\n    }\r\n    get filterToLower() {\r\n        return this._filterToLower\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (esm/data/odata/store.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport config from \"../../core/config\";\r\nimport {\r\n    generateExpand,\r\n    generateSelect,\r\n    serializeKey,\r\n    convertPrimitiveValue,\r\n    formatFunctionInvocationUrl,\r\n    escapeServiceOperationParams\r\n} from \"./utils\";\r\nimport {\r\n    errors\r\n} from \"../errors\";\r\nimport query from \"../query\";\r\nimport Store from \"../abstract_store\";\r\nimport RequestDispatcher from \"./request_dispatcher\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport \"./query_adapter\";\r\nvar ANONYMOUS_KEY_NAME = \"5d46402c-7899-4ea9-bd81-8b73c47c7683\";\r\nvar expandKeyType = (key, keyType) => ({\r\n    [key]: keyType\r\n});\r\nvar mergeFieldTypesWithKeyType = (fieldTypes, keyType) => {\r\n    var result = {};\r\n    for (var field in fieldTypes) {\r\n        result[field] = fieldTypes[field]\r\n    }\r\n    for (var keyName in keyType) {\r\n        if (keyName in result) {\r\n            if (result[keyName] !== keyType[keyName]) {\r\n                errors.log(\"W4001\", keyName)\r\n            }\r\n        } else {\r\n            result[keyName] = keyType[keyName]\r\n        }\r\n    }\r\n    return result\r\n};\r\nvar ODataStore = Store.inherit({\r\n    ctor(options) {\r\n        this.callBase(options);\r\n        this._requestDispatcher = new RequestDispatcher(options);\r\n        var key = this.key();\r\n        var fieldTypes = options.fieldTypes;\r\n        var keyType = options.keyType;\r\n        if (keyType) {\r\n            var keyTypeIsString = \"string\" === typeof keyType;\r\n            if (!key) {\r\n                key = keyTypeIsString ? ANONYMOUS_KEY_NAME : Object.keys(keyType);\r\n                this._legacyAnonymousKey = key\r\n            }\r\n            if (keyTypeIsString) {\r\n                keyType = expandKeyType(key, keyType)\r\n            }\r\n            fieldTypes = mergeFieldTypesWithKeyType(fieldTypes, keyType)\r\n        }\r\n        this._fieldTypes = fieldTypes || {};\r\n        if (2 === this.version()) {\r\n            this._updateMethod = \"MERGE\"\r\n        } else {\r\n            this._updateMethod = \"PATCH\"\r\n        }\r\n    },\r\n    _customLoadOptions: () => [\"expand\", \"customQueryParams\"],\r\n    _byKeyImpl(key, extraOptions) {\r\n        var params = {};\r\n        if (extraOptions) {\r\n            params.$expand = generateExpand(this.version(), extraOptions.expand, extraOptions.select) || void 0;\r\n            params.$select = generateSelect(this.version(), extraOptions.select) || void 0\r\n        }\r\n        return this._requestDispatcher.sendRequest(this._byKeyUrl(key), \"GET\", params)\r\n    },\r\n    createQuery(loadOptions) {\r\n        var _loadOptions$urlOverr;\r\n        var url;\r\n        var queryOptions = {\r\n            adapter: \"odata\",\r\n            beforeSend: this._requestDispatcher.beforeSend,\r\n            errorHandler: this._errorHandler,\r\n            jsonp: this._requestDispatcher.jsonp,\r\n            version: this._requestDispatcher.version,\r\n            withCredentials: this._requestDispatcher._withCredentials,\r\n            expand: null === loadOptions || void 0 === loadOptions ? void 0 : loadOptions.expand,\r\n            requireTotalCount: null === loadOptions || void 0 === loadOptions ? void 0 : loadOptions.requireTotalCount,\r\n            deserializeDates: this._requestDispatcher._deserializeDates,\r\n            fieldTypes: this._fieldTypes\r\n        };\r\n        url = null !== (_loadOptions$urlOverr = null === loadOptions || void 0 === loadOptions ? void 0 : loadOptions.urlOverride) && void 0 !== _loadOptions$urlOverr ? _loadOptions$urlOverr : this._requestDispatcher.url;\r\n        if (isDefined(this._requestDispatcher.filterToLower)) {\r\n            queryOptions.filterToLower = this._requestDispatcher.filterToLower\r\n        }\r\n        if (null !== loadOptions && void 0 !== loadOptions && loadOptions.customQueryParams) {\r\n            var params = escapeServiceOperationParams(null === loadOptions || void 0 === loadOptions ? void 0 : loadOptions.customQueryParams, this.version());\r\n            if (4 === this.version()) {\r\n                url = formatFunctionInvocationUrl(url, params)\r\n            } else {\r\n                queryOptions.params = params\r\n            }\r\n        }\r\n        return query(url, queryOptions)\r\n    },\r\n    _insertImpl(values) {\r\n        this._requireKey();\r\n        var d = new Deferred;\r\n        when(this._requestDispatcher.sendRequest(this._requestDispatcher.url, \"POST\", null, values)).done(serverResponse => d.resolve(serverResponse && !config().useLegacyStoreResult ? serverResponse : values, this.keyOf(serverResponse))).fail(d.reject);\r\n        return d.promise()\r\n    },\r\n    _updateImpl(key, values) {\r\n        var d = new Deferred;\r\n        when(this._requestDispatcher.sendRequest(this._byKeyUrl(key), this._updateMethod, null, values)).done(serverResponse => config().useLegacyStoreResult ? d.resolve(key, values) : d.resolve(serverResponse || values, key)).fail(d.reject);\r\n        return d.promise()\r\n    },\r\n    _removeImpl(key) {\r\n        var d = new Deferred;\r\n        when(this._requestDispatcher.sendRequest(this._byKeyUrl(key), \"DELETE\")).done(() => d.resolve(key)).fail(d.reject);\r\n        return d.promise()\r\n    },\r\n    _convertKey(value) {\r\n        var result = value;\r\n        var fieldTypes = this._fieldTypes;\r\n        var key = this.key() || this._legacyAnonymousKey;\r\n        if (Array.isArray(key)) {\r\n            result = {};\r\n            for (var i = 0; i < key.length; i++) {\r\n                var keyName = key[i];\r\n                result[keyName] = convertPrimitiveValue(fieldTypes[keyName], value[keyName])\r\n            }\r\n        } else if (fieldTypes[key]) {\r\n            result = convertPrimitiveValue(fieldTypes[key], value)\r\n        }\r\n        return result\r\n    },\r\n    _byKeyUrl(value) {\r\n        var baseUrl = this._requestDispatcher.url;\r\n        var convertedKey = this._convertKey(value);\r\n        return \"\".concat(baseUrl, \"(\").concat(encodeURIComponent(serializeKey(convertedKey, this.version())), \")\")\r\n    },\r\n    version() {\r\n        return this._requestDispatcher.version\r\n    }\r\n}, \"odata\");\r\nexport default ODataStore;\r\n","/**\r\n * DevExtreme (esm/ui/shared/filtering.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDate,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nvar DEFAULT_DATE_INTERVAL = [\"year\", \"month\", \"day\"];\r\nvar DEFAULT_DATETIME_INTERVAL = [\"year\", \"month\", \"day\", \"hour\", \"minute\"];\r\nvar isDateType = function(dataType) {\r\n    return \"date\" === dataType || \"datetime\" === dataType\r\n};\r\nvar getGroupInterval = function(column) {\r\n    var index;\r\n    var result = [];\r\n    var dateIntervals = [\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\"];\r\n    var groupInterval = column.headerFilter && column.headerFilter.groupInterval;\r\n    var interval = \"quarter\" === groupInterval ? \"month\" : groupInterval;\r\n    if (isDateType(column.dataType) && null !== groupInterval) {\r\n        result = \"datetime\" === column.dataType ? DEFAULT_DATETIME_INTERVAL : DEFAULT_DATE_INTERVAL;\r\n        index = inArray(interval, dateIntervals);\r\n        if (index >= 0) {\r\n            result = dateIntervals.slice(0, index);\r\n            result.push(groupInterval);\r\n            return result\r\n        }\r\n        return result\r\n    } else if (isDefined(groupInterval)) {\r\n        return Array.isArray(groupInterval) ? groupInterval : [groupInterval]\r\n    }\r\n};\r\nexport default (function() {\r\n    var getFilterSelector = function(column, target) {\r\n        var selector = column.dataField || column.selector;\r\n        if (\"search\" === target) {\r\n            selector = column.displayField || column.calculateDisplayValue || selector\r\n        }\r\n        return selector\r\n    };\r\n    var getFilterExpressionByRange = function(filterValue, target) {\r\n        var endFilterValue;\r\n        var startFilterExpression;\r\n        var endFilterExpression;\r\n        var selector = getFilterSelector(this, target);\r\n        if (Array.isArray(filterValue) && isDefined(filterValue[0]) && isDefined(filterValue[1])) {\r\n            startFilterExpression = [selector, \">=\", filterValue[0]];\r\n            endFilterExpression = [selector, \"<=\", filterValue[1]];\r\n            if (isDateType(this.dataType) && (date = filterValue[1], date.getHours() + date.getMinutes() + date.getSeconds() + date.getMilliseconds() < 1)) {\r\n                endFilterValue = new Date(filterValue[1].getTime());\r\n                if (\"date\" === this.dataType) {\r\n                    endFilterValue.setDate(filterValue[1].getDate() + 1)\r\n                }\r\n                endFilterExpression = [selector, \"<\", endFilterValue]\r\n            }\r\n            return [startFilterExpression, \"and\", endFilterExpression]\r\n        }\r\n        var date\r\n    };\r\n    var getFilterExpressionForDate = function(filterValue, selectedFilterOperation, target) {\r\n        var dateStart;\r\n        var dateEnd;\r\n        var dateInterval;\r\n        var values = function(dateValue) {\r\n            if (isDate(dateValue)) {\r\n                return [dateValue.getFullYear(), dateValue.getMonth(), dateValue.getDate(), dateValue.getHours(), dateValue.getMinutes(), dateValue.getSeconds()]\r\n            }\r\n            return map((\"\" + dateValue).split(\"/\"), (function(value, index) {\r\n                return 1 === index ? Number(value) - 1 : Number(value)\r\n            }))\r\n        }(filterValue);\r\n        var selector = getFilterSelector(this, target);\r\n        if (\"headerFilter\" === target) {\r\n            dateInterval = getGroupInterval(this)[values.length - 1]\r\n        } else if (\"datetime\" === this.dataType) {\r\n            dateInterval = \"minute\"\r\n        }\r\n        switch (dateInterval) {\r\n            case \"year\":\r\n                dateStart = new Date(values[0], 0, 1);\r\n                dateEnd = new Date(values[0] + 1, 0, 1);\r\n                break;\r\n            case \"month\":\r\n                dateStart = new Date(values[0], values[1], 1);\r\n                dateEnd = new Date(values[0], values[1] + 1, 1);\r\n                break;\r\n            case \"quarter\":\r\n                dateStart = new Date(values[0], 3 * values[1], 1);\r\n                dateEnd = new Date(values[0], 3 * values[1] + 3, 1);\r\n                break;\r\n            case \"hour\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3] + 1);\r\n                break;\r\n            case \"minute\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3], values[4]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3], values[4] + 1);\r\n                break;\r\n            case \"second\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3], values[4], values[5]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3], values[4], values[5] + 1);\r\n                break;\r\n            default:\r\n                dateStart = new Date(values[0], values[1], values[2]);\r\n                dateEnd = new Date(values[0], values[1], values[2] + 1)\r\n        }\r\n        switch (selectedFilterOperation) {\r\n            case \"<\":\r\n                return [selector, \"<\", dateStart];\r\n            case \"<=\":\r\n                return [selector, \"<\", dateEnd];\r\n            case \">\":\r\n                return [selector, \">=\", dateEnd];\r\n            case \">=\":\r\n                return [selector, \">=\", dateStart];\r\n            case \"<>\":\r\n                return [\r\n                    [selector, \"<\", dateStart], \"or\", [selector, \">=\", dateEnd]\r\n                ];\r\n            default:\r\n                return [\r\n                    [selector, \">=\", dateStart], \"and\", [selector, \"<\", dateEnd]\r\n                ]\r\n        }\r\n    };\r\n    var getFilterExpressionForNumber = function(filterValue, selectedFilterOperation, target) {\r\n        var selector = getFilterSelector(this, target);\r\n        var groupInterval = getGroupInterval(this);\r\n        if (\"headerFilter\" === target && groupInterval && isDefined(filterValue)) {\r\n            var values = (\"\" + filterValue).split(\"/\");\r\n            var value = Number(values[values.length - 1]);\r\n            var interval = groupInterval[values.length - 1];\r\n            var startFilterValue = [selector, \">=\", value];\r\n            var endFilterValue = [selector, \"<\", value + interval];\r\n            var condition = [startFilterValue, \"and\", endFilterValue];\r\n            return condition\r\n        }\r\n        return [selector, selectedFilterOperation || \"=\", filterValue]\r\n    };\r\n    return {\r\n        defaultCalculateFilterExpression: function(filterValue, selectedFilterOperation, target) {\r\n            var column = this;\r\n            var selector = getFilterSelector(column, target);\r\n            var isSearchByDisplayValue = column.calculateDisplayValue && \"search\" === target;\r\n            var dataType = isSearchByDisplayValue && column.lookup && column.lookup.dataType || column.dataType;\r\n            var filter = null;\r\n            if ((\"headerFilter\" === target || \"filterBuilder\" === target) && null === filterValue) {\r\n                filter = [selector, selectedFilterOperation || \"=\", null];\r\n                if (\"string\" === dataType) {\r\n                    filter = [filter, \"=\" === selectedFilterOperation ? \"or\" : \"and\", [selector, selectedFilterOperation || \"=\", \"\"]]\r\n                }\r\n            } else if (\"string\" === dataType && (!column.lookup || isSearchByDisplayValue)) {\r\n                filter = [selector, selectedFilterOperation || \"contains\", filterValue]\r\n            } else if (\"between\" === selectedFilterOperation) {\r\n                return getFilterExpressionByRange.apply(column, [filterValue, target])\r\n            } else if (isDateType(dataType) && isDefined(filterValue)) {\r\n                return getFilterExpressionForDate.apply(column, arguments)\r\n            } else if (\"number\" === dataType) {\r\n                return getFilterExpressionForNumber.apply(column, arguments)\r\n            } else if (\"object\" !== dataType) {\r\n                filter = [selector, selectedFilterOperation || \"=\", filterValue]\r\n            }\r\n            return filter\r\n        },\r\n        getGroupInterval: getGroupInterval\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    isDefined,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport sharedFiltering from \"../shared/filtering\";\r\nimport {\r\n    format\r\n} from \"../../core/utils/string\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    toComparable\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport LoadPanel from \"../load_panel\";\r\nimport {\r\n    normalizeSortingInfo as normalizeSortingInfoUtility\r\n} from \"../../data/utils\";\r\nimport formatHelper from \"../../format_helper\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nvar DATAGRID_SELECTION_DISABLED_CLASS = \"dx-selection-disabled\";\r\nvar DATAGRID_GROUP_OPENED_CLASS = \"dx-datagrid-group-opened\";\r\nvar DATAGRID_GROUP_CLOSED_CLASS = \"dx-datagrid-group-closed\";\r\nvar DATAGRID_EXPAND_CLASS = \"dx-datagrid-expand\";\r\nvar NO_DATA_CLASS = \"nodata\";\r\nvar SCROLLING_MODE_INFINITE = \"infinite\";\r\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\nvar SCROLLING_MODE_OPTION = \"scrolling.mode\";\r\nvar ROW_RENDERING_MODE_OPTION = \"scrolling.rowRenderingMode\";\r\nvar DATE_INTERVAL_SELECTORS = {\r\n    year: function(value) {\r\n        return value && value.getFullYear()\r\n    },\r\n    month: function(value) {\r\n        return value && value.getMonth() + 1\r\n    },\r\n    day: function(value) {\r\n        return value && value.getDate()\r\n    },\r\n    quarter: function(value) {\r\n        return value && Math.floor(value.getMonth() / 3) + 1\r\n    },\r\n    hour: function(value) {\r\n        return value && value.getHours()\r\n    },\r\n    minute: function(value) {\r\n        return value && value.getMinutes()\r\n    },\r\n    second: function(value) {\r\n        return value && value.getSeconds()\r\n    }\r\n};\r\nvar getIntervalSelector = function() {\r\n    var data = arguments[1];\r\n    var value = this.calculateCellValue(data);\r\n    if (!isDefined(value)) {\r\n        return null\r\n    } else if (isDateType(this.dataType)) {\r\n        var nameIntervalSelector = arguments[0];\r\n        return DATE_INTERVAL_SELECTORS[nameIntervalSelector](value)\r\n    } else if (\"number\" === this.dataType) {\r\n        var groupInterval = arguments[0];\r\n        return Math.floor(Number(value) / groupInterval) * groupInterval\r\n    }\r\n};\r\nvar equalSelectors = function(selector1, selector2) {\r\n    if (isFunction(selector1) && isFunction(selector2)) {\r\n        if (selector1.originalCallback && selector2.originalCallback) {\r\n            return selector1.originalCallback === selector2.originalCallback && selector1.columnIndex === selector2.columnIndex\r\n        }\r\n    }\r\n    return selector1 === selector2\r\n};\r\n\r\nfunction isDateType(dataType) {\r\n    return \"date\" === dataType || \"datetime\" === dataType\r\n}\r\nvar setEmptyText = function($container) {\r\n    $container.get(0).textContent = \"\\xa0\"\r\n};\r\nvar normalizeSortingInfo = function(sort) {\r\n    sort = sort || [];\r\n    var result = normalizeSortingInfoUtility(sort);\r\n    for (var i = 0; i < sort.length; i++) {\r\n        if (sort && sort[i] && void 0 !== sort[i].isExpanded) {\r\n            result[i].isExpanded = sort[i].isExpanded\r\n        }\r\n        if (sort && sort[i] && void 0 !== sort[i].groupInterval) {\r\n            result[i].groupInterval = sort[i].groupInterval\r\n        }\r\n    }\r\n    return result\r\n};\r\nvar formatValue = function(value, options) {\r\n    var valueText = formatHelper.format(value, options.format) || value && value.toString() || \"\";\r\n    var formatObject = {\r\n        value: value,\r\n        valueText: options.getDisplayFormat ? options.getDisplayFormat(valueText) : valueText,\r\n        target: options.target || \"row\",\r\n        groupInterval: options.groupInterval\r\n    };\r\n    return options.customizeText ? options.customizeText.call(options, formatObject) : formatObject.valueText\r\n};\r\nvar getSummaryText = function(summaryItem, summaryTexts) {\r\n    var displayFormat = summaryItem.displayFormat || summaryItem.columnCaption && summaryTexts[summaryItem.summaryType + \"OtherColumn\"] || summaryTexts[summaryItem.summaryType];\r\n    return formatValue(summaryItem.value, {\r\n        format: summaryItem.valueFormat,\r\n        getDisplayFormat: function(valueText) {\r\n            return displayFormat ? format(displayFormat, valueText, summaryItem.columnCaption) : valueText\r\n        },\r\n        customizeText: summaryItem.customizeText\r\n    })\r\n};\r\nvar getWidgetInstance = function($element) {\r\n    var editorData = $element.data && $element.data();\r\n    var dxComponents = editorData && editorData.dxComponents;\r\n    var widgetName = dxComponents && dxComponents[0];\r\n    return widgetName && editorData[widgetName]\r\n};\r\nvar equalFilterParameters = function equalFilterParameters(filter1, filter2) {\r\n    if (Array.isArray(filter1) && Array.isArray(filter2)) {\r\n        if (filter1.length !== filter2.length) {\r\n            return false\r\n        } else {\r\n            for (var i = 0; i < filter1.length; i++) {\r\n                if (!equalFilterParameters(filter1[i], filter2[i])) {\r\n                    return false\r\n                }\r\n            }\r\n        }\r\n        return true\r\n    } else if (isFunction(filter1) && filter1.columnIndex >= 0 && isFunction(filter2) && filter2.columnIndex >= 0) {\r\n        return filter1.columnIndex === filter2.columnIndex && toComparable(filter1.filterValue) === toComparable(filter2.filterValue)\r\n    } else {\r\n        return toComparable(filter1) == toComparable(filter2)\r\n    }\r\n};\r\nexport default {\r\n    renderNoDataText: function($element) {\r\n        $element = $element || this.element();\r\n        if (!$element) {\r\n            return\r\n        }\r\n        var noDataClass = this.addWidgetPrefix(NO_DATA_CLASS);\r\n        var noDataElement = $element.find(\".\" + noDataClass).last();\r\n        var isVisible = this._dataController.isEmpty();\r\n        var isLoading = this._dataController.isLoading();\r\n        if (!noDataElement.length) {\r\n            noDataElement = $(\"<span>\").addClass(noDataClass).appendTo($element)\r\n        }\r\n        if (isVisible && !isLoading) {\r\n            noDataElement.removeClass(\"dx-hidden\").text(this._getNoDataText())\r\n        } else {\r\n            noDataElement.addClass(\"dx-hidden\")\r\n        }\r\n    },\r\n    renderLoadPanel: function($element, $container, isLocalStore) {\r\n        var loadPanelOptions;\r\n        this._loadPanel && this._loadPanel.$element().remove();\r\n        loadPanelOptions = this.option(\"loadPanel\");\r\n        if (loadPanelOptions && (\"auto\" === loadPanelOptions.enabled ? !isLocalStore : loadPanelOptions.enabled)) {\r\n            loadPanelOptions = extend({\r\n                shading: false,\r\n                message: loadPanelOptions.text,\r\n                container: $container\r\n            }, loadPanelOptions);\r\n            this._loadPanel = this._createComponent($(\"<div>\").appendTo($container), LoadPanel, loadPanelOptions)\r\n        } else {\r\n            this._loadPanel = null\r\n        }\r\n    },\r\n    calculateLoadPanelPosition($element) {\r\n        var $window = $(getWindow());\r\n        if (getHeight($element) > getHeight($window)) {\r\n            return {\r\n                of: $window,\r\n                boundary: $element,\r\n                collision: \"fit\"\r\n            }\r\n        }\r\n        return {\r\n            of: $element\r\n        }\r\n    },\r\n    getIndexByKey: function(key, items, keyName) {\r\n        var index = -1;\r\n        if (void 0 !== key && Array.isArray(items)) {\r\n            keyName = arguments.length <= 2 ? \"key\" : keyName;\r\n            for (var i = 0; i < items.length; i++) {\r\n                var item = isDefined(keyName) ? items[i][keyName] : items[i];\r\n                if (equalByValue(key, item)) {\r\n                    index = i;\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        return index\r\n    },\r\n    combineFilters: function(filters, operation) {\r\n        var resultFilter = [];\r\n        operation = operation || \"and\";\r\n        for (var i = 0; i < filters.length; i++) {\r\n            var _filters$i;\r\n            if (!filters[i]) {\r\n                continue\r\n            }\r\n            if (1 === (null === (_filters$i = filters[i]) || void 0 === _filters$i ? void 0 : _filters$i.length) && \"!\" === filters[i][0]) {\r\n                if (\"and\" === operation) {\r\n                    return [\"!\"]\r\n                } else if (\"or\" === operation) {\r\n                    continue\r\n                }\r\n            }\r\n            if (resultFilter.length) {\r\n                resultFilter.push(operation)\r\n            }\r\n            resultFilter.push(filters[i])\r\n        }\r\n        if (1 === resultFilter.length) {\r\n            resultFilter = resultFilter[0]\r\n        }\r\n        if (resultFilter.length) {\r\n            return resultFilter\r\n        }\r\n    },\r\n    checkChanges: function(changes, changeNames) {\r\n        var changesWithChangeNamesCount = 0;\r\n        for (var i = 0; i < changeNames.length; i++) {\r\n            if (changes[changeNames[i]]) {\r\n                changesWithChangeNamesCount++\r\n            }\r\n        }\r\n        return changes.length && changes.length === changesWithChangeNamesCount\r\n    },\r\n    equalFilterParameters: equalFilterParameters,\r\n    proxyMethod: function(instance, methodName, defaultResult) {\r\n        if (!instance[methodName]) {\r\n            instance[methodName] = function() {\r\n                var dataSource = this._dataSource;\r\n                return dataSource ? dataSource[methodName].apply(dataSource, arguments) : defaultResult\r\n            }\r\n        }\r\n    },\r\n    formatValue: formatValue,\r\n    getFormatOptionsByColumn: function(column, target) {\r\n        return {\r\n            format: column.format,\r\n            getDisplayFormat: column.getDisplayFormat,\r\n            customizeText: column.customizeText,\r\n            target: target,\r\n            trueText: column.trueText,\r\n            falseText: column.falseText\r\n        }\r\n    },\r\n    getDisplayValue: function(column, value, data, rowType) {\r\n        if (column.displayValueMap && void 0 !== column.displayValueMap[value]) {\r\n            return column.displayValueMap[value]\r\n        } else if (column.calculateDisplayValue && data && \"group\" !== rowType) {\r\n            return column.calculateDisplayValue(data)\r\n        } else if (column.lookup && !(\"group\" === rowType && (column.calculateGroupValue || column.calculateDisplayValue))) {\r\n            return column.lookup.calculateCellValue(value)\r\n        }\r\n        return value\r\n    },\r\n    getGroupRowSummaryText: function(summaryItems, summaryTexts) {\r\n        var result = \"(\";\r\n        for (var i = 0; i < summaryItems.length; i++) {\r\n            var summaryItem = summaryItems[i];\r\n            result += (i > 0 ? \", \" : \"\") + getSummaryText(summaryItem, summaryTexts)\r\n        }\r\n        return result + \")\"\r\n    },\r\n    getSummaryText: getSummaryText,\r\n    normalizeSortingInfo: normalizeSortingInfo,\r\n    getFormatByDataType: function(dataType) {\r\n        switch (dataType) {\r\n            case \"date\":\r\n                return \"shortDate\";\r\n            case \"datetime\":\r\n                return \"shortDateShortTime\"\r\n        }\r\n    },\r\n    getHeaderFilterGroupParameters: function(column, remoteGrouping) {\r\n        var result = [];\r\n        var dataField = column.dataField || column.name;\r\n        var groupInterval = sharedFiltering.getGroupInterval(column);\r\n        if (groupInterval) {\r\n            each(groupInterval, (function(index, interval) {\r\n                result.push(remoteGrouping ? {\r\n                    selector: dataField,\r\n                    groupInterval: interval,\r\n                    isExpanded: index < groupInterval.length - 1\r\n                } : getIntervalSelector.bind(column, interval))\r\n            }));\r\n            return result\r\n        }\r\n        if (remoteGrouping) {\r\n            result = [{\r\n                selector: dataField,\r\n                isExpanded: false\r\n            }]\r\n        } else {\r\n            result = function(data) {\r\n                var result = column.calculateCellValue(data);\r\n                if (void 0 === result || \"\" === result) {\r\n                    result = null\r\n                }\r\n                return result\r\n            };\r\n            if (column.sortingMethod) {\r\n                result = [{\r\n                    selector: result,\r\n                    compare: column.sortingMethod.bind(column)\r\n                }]\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    equalSortParameters(sortParameters1, sortParameters2, ignoreIsExpanded) {\r\n        sortParameters1 = normalizeSortingInfo(sortParameters1);\r\n        sortParameters2 = normalizeSortingInfo(sortParameters2);\r\n        if (Array.isArray(sortParameters1) && Array.isArray(sortParameters2)) {\r\n            if (sortParameters1.length !== sortParameters2.length) {\r\n                return false\r\n            } else {\r\n                for (var i = 0; i < sortParameters1.length; i++) {\r\n                    if (!equalSelectors(sortParameters1[i].selector, sortParameters2[i].selector) || sortParameters1[i].desc !== sortParameters2[i].desc || sortParameters1[i].groupInterval !== sortParameters2[i].groupInterval || !ignoreIsExpanded && Boolean(sortParameters1[i].isExpanded) !== Boolean(sortParameters2[i].isExpanded)) {\r\n                        return false\r\n                    }\r\n                }\r\n            }\r\n            return true\r\n        } else {\r\n            return (!sortParameters1 || !sortParameters1.length) === (!sortParameters2 || !sortParameters2.length)\r\n        }\r\n    },\r\n    getPointsByColumns: function(items, pointCreated, isVertical, startColumnIndex) {\r\n        var cellsLength = items.length;\r\n        var notCreatePoint = false;\r\n        var item;\r\n        var offset;\r\n        var columnIndex = startColumnIndex || 0;\r\n        var result = [];\r\n        var rtlEnabled;\r\n        for (var i = 0; i <= cellsLength; i++) {\r\n            if (i < cellsLength) {\r\n                item = items.eq(i);\r\n                offset = item.offset();\r\n                rtlEnabled = \"rtl\" === item.css(\"direction\")\r\n            }\r\n            var point = {\r\n                index: columnIndex,\r\n                x: offset ? offset.left + (!isVertical && rtlEnabled ^ i === cellsLength ? getBoundingRect(item[0]).width : 0) : 0,\r\n                y: offset ? offset.top + (isVertical && i === cellsLength ? getBoundingRect(item[0]).height : 0) : 0,\r\n                columnIndex: columnIndex\r\n            };\r\n            if (!isVertical && i > 0) {\r\n                var prevItemOffset = items.eq(i - 1).offset();\r\n                if (prevItemOffset.top < point.y) {\r\n                    point.y = prevItemOffset.top\r\n                }\r\n            }\r\n            if (pointCreated) {\r\n                notCreatePoint = pointCreated(point)\r\n            }\r\n            if (!notCreatePoint) {\r\n                result.push(point)\r\n            }\r\n            columnIndex++\r\n        }\r\n        return result\r\n    },\r\n    getExpandCellTemplate: function() {\r\n        return {\r\n            allowRenderToDetachedContainer: true,\r\n            render: function(container, options) {\r\n                var $container = $(container);\r\n                if (isDefined(options.value) && !(options.data && options.data.isContinuation) && !options.row.isNewRow) {\r\n                    var rowsView = options.component.getView(\"rowsView\");\r\n                    $container.addClass(DATAGRID_EXPAND_CLASS).addClass(DATAGRID_SELECTION_DISABLED_CLASS);\r\n                    $(\"<div>\").addClass(options.value ? DATAGRID_GROUP_OPENED_CLASS : DATAGRID_GROUP_CLOSED_CLASS).appendTo($container);\r\n                    rowsView.setAria(\"label\", options.value ? rowsView.localize(\"dxDataGrid-ariaCollapse\") : rowsView.localize(\"dxDataGrid-ariaExpand\"), $container)\r\n                } else {\r\n                    setEmptyText($container)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    setEmptyText: setEmptyText,\r\n    isDateType: isDateType,\r\n    getSelectionRange: function(focusedElement) {\r\n        try {\r\n            if (focusedElement) {\r\n                return {\r\n                    selectionStart: focusedElement.selectionStart,\r\n                    selectionEnd: focusedElement.selectionEnd\r\n                }\r\n            }\r\n        } catch (e) {}\r\n        return {}\r\n    },\r\n    setSelectionRange: function(focusedElement, selectionRange) {\r\n        try {\r\n            if (focusedElement && focusedElement.setSelectionRange) {\r\n                focusedElement.setSelectionRange(selectionRange.selectionStart, selectionRange.selectionEnd)\r\n            }\r\n        } catch (e) {}\r\n    },\r\n    focusAndSelectElement: function(component, $element) {\r\n        var isFocused = $element.is(\":focus\");\r\n        eventsEngine.trigger($element, \"focus\");\r\n        var isSelectTextOnEditingStart = component.option(\"editing.selectTextOnEditStart\");\r\n        var element = $element.get(0);\r\n        if (!isFocused && isSelectTextOnEditingStart && $element.is(\".dx-texteditor-input\") && !$element.is(\"[readonly]\")) {\r\n            var editor = getWidgetInstance($element.closest(\".dx-texteditor\"));\r\n            when(editor && editor._loadItemDeferred).done((function() {\r\n                element.select()\r\n            }))\r\n        }\r\n    },\r\n    getWidgetInstance: getWidgetInstance,\r\n    getLastResizableColumnIndex: function(columns, resultWidths) {\r\n        var hasResizableColumns = columns.some(column => column && !column.command && !column.fixed && false !== column.allowResizing);\r\n        var lastColumnIndex;\r\n        for (lastColumnIndex = columns.length - 1; columns[lastColumnIndex]; lastColumnIndex--) {\r\n            var column = columns[lastColumnIndex];\r\n            var width = resultWidths && resultWidths[lastColumnIndex];\r\n            var allowResizing = !hasResizableColumns || false !== column.allowResizing;\r\n            if (!column.command && !column.fixed && \"adaptiveHidden\" !== width && allowResizing) {\r\n                break\r\n            }\r\n        }\r\n        return lastColumnIndex\r\n    },\r\n    isElementInCurrentGrid: function(controller, $element) {\r\n        if ($element && $element.length) {\r\n            var $grid = $element.closest(\".\" + controller.getWidgetContainerClass()).parent();\r\n            return $grid.is(controller.component.$element())\r\n        }\r\n        return false\r\n    },\r\n    isVirtualRowRendering: function(that) {\r\n        var rowRenderingMode = that.option(ROW_RENDERING_MODE_OPTION);\r\n        var isVirtualMode = that.option(SCROLLING_MODE_OPTION) === SCROLLING_MODE_VIRTUAL;\r\n        var isAppendMode = that.option(SCROLLING_MODE_OPTION) === SCROLLING_MODE_INFINITE;\r\n        if (false === that.option(LEGACY_SCROLLING_MODE) && (isVirtualMode || isAppendMode)) {\r\n            return true\r\n        }\r\n        return rowRenderingMode === SCROLLING_MODE_VIRTUAL\r\n    },\r\n    getPixelRatio: function(window) {\r\n        return window.devicePixelRatio || 1\r\n    },\r\n    getContentHeightLimit(browser) {\r\n        if (browser.mozilla) {\r\n            return 8e6\r\n        }\r\n        return 15e6 / this.getPixelRatio(getWindow())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.modules.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Class from \"../../core/class\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    grep\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nvar WIDGET_WITH_LEGACY_CONTAINER_NAME = \"dxDataGrid\";\r\nvar ModuleItem = Class.inherit({\r\n    _endUpdateCore: function() {},\r\n    ctor: function(component) {\r\n        var that = this;\r\n        that._updateLockCount = 0;\r\n        that.component = component;\r\n        that._actions = {};\r\n        that._actionConfigs = {};\r\n        each(this.callbackNames() || [], (function(index, name) {\r\n            var flags = that.callbackFlags(name) || {};\r\n            flags.unique = true, flags.syncStrategy = true;\r\n            that[this] = Callbacks(flags)\r\n        }))\r\n    },\r\n    init: function() {},\r\n    callbackNames: function() {},\r\n    callbackFlags: function() {},\r\n    publicMethods: function() {},\r\n    beginUpdate: function() {\r\n        this._updateLockCount++\r\n    },\r\n    endUpdate: function() {\r\n        if (this._updateLockCount > 0) {\r\n            this._updateLockCount--;\r\n            if (!this._updateLockCount) {\r\n                this._endUpdateCore()\r\n            }\r\n        }\r\n    },\r\n    option: function(name) {\r\n        var component = this.component;\r\n        var optionCache = component._optionCache;\r\n        if (1 === arguments.length && optionCache) {\r\n            if (!(name in optionCache)) {\r\n                optionCache[name] = component.option(name)\r\n            }\r\n            return optionCache[name]\r\n        }\r\n        return component.option.apply(component, arguments)\r\n    },\r\n    _silentOption: function(name, value) {\r\n        var component = this.component;\r\n        var optionCache = component._optionCache;\r\n        if (optionCache) {\r\n            optionCache[name] = value\r\n        }\r\n        return component._setOptionWithoutOptionChange(name, value)\r\n    },\r\n    localize: function(name) {\r\n        var optionCache = this.component._optionCache;\r\n        if (optionCache) {\r\n            if (!(name in optionCache)) {\r\n                optionCache[name] = messageLocalization.format(name)\r\n            }\r\n            return optionCache[name]\r\n        }\r\n        return messageLocalization.format(name)\r\n    },\r\n    on: function() {\r\n        return this.component.on.apply(this.component, arguments)\r\n    },\r\n    off: function() {\r\n        return this.component.off.apply(this.component, arguments)\r\n    },\r\n    optionChanged: function(args) {\r\n        if (args.name in this._actions) {\r\n            this.createAction(args.name, this._actionConfigs[args.name]);\r\n            args.handled = true\r\n        }\r\n    },\r\n    getAction: function(actionName) {\r\n        return this._actions[actionName]\r\n    },\r\n    setAria: function(name, value, $target) {\r\n        var target = $target.get(0);\r\n        var prefix = \"role\" !== name && \"id\" !== name ? \"aria-\" : \"\";\r\n        if (target.setAttribute) {\r\n            target.setAttribute(prefix + name, value)\r\n        } else {\r\n            $target.attr(prefix + name, value)\r\n        }\r\n    },\r\n    _createComponent: function() {\r\n        return this.component._createComponent.apply(this.component, arguments)\r\n    },\r\n    getController: function(name) {\r\n        return this.component._controllers[name]\r\n    },\r\n    createAction: function(actionName, config) {\r\n        if (isFunction(actionName)) {\r\n            var action = this.component._createAction(actionName.bind(this), config);\r\n            return function(e) {\r\n                action({\r\n                    event: e\r\n                })\r\n            }\r\n        } else {\r\n            this._actions[actionName] = this.component._createActionByOption(actionName, config);\r\n            this._actionConfigs[actionName] = config\r\n        }\r\n    },\r\n    executeAction: function(actionName, options) {\r\n        var action = this._actions[actionName];\r\n        return action && action(options)\r\n    },\r\n    dispose: function() {\r\n        var that = this;\r\n        each(that.callbackNames() || [], (function() {\r\n            that[this].empty()\r\n        }))\r\n    },\r\n    addWidgetPrefix: function(className) {\r\n        var componentName = this.component.NAME;\r\n        return \"dx-\" + componentName.slice(2).toLowerCase() + (className ? \"-\" + className : \"\")\r\n    },\r\n    getWidgetContainerClass: function() {\r\n        var containerName = this.component.NAME === WIDGET_WITH_LEGACY_CONTAINER_NAME ? null : \"container\";\r\n        return this.addWidgetPrefix(containerName)\r\n    }\r\n});\r\nvar Controller = ModuleItem;\r\nvar ViewController = Controller.inherit({\r\n    getView: function(name) {\r\n        return this.component._views[name]\r\n    },\r\n    getViews: function() {\r\n        return this.component._views\r\n    }\r\n});\r\nvar View = ModuleItem.inherit({\r\n    _isReady: function() {\r\n        return this.component.isReady()\r\n    },\r\n    _endUpdateCore: function() {\r\n        this.callBase();\r\n        if (!this._isReady() && this._requireReady) {\r\n            this._requireRender = false;\r\n            this.component._requireResize = false\r\n        }\r\n        if (this._requireRender) {\r\n            this._requireRender = false;\r\n            this.render(this._$parent)\r\n        }\r\n    },\r\n    _invalidate: function(requireResize, requireReady) {\r\n        this._requireRender = true;\r\n        this.component._requireResize = hasWindow() && (this.component._requireResize || requireResize);\r\n        this._requireReady = this._requireReady || requireReady\r\n    },\r\n    _renderCore: function() {},\r\n    _resizeCore: function() {},\r\n    _parentElement: function() {\r\n        return this._$parent\r\n    },\r\n    ctor: function(component) {\r\n        this.callBase(component);\r\n        this.renderCompleted = Callbacks();\r\n        this.resizeCompleted = Callbacks()\r\n    },\r\n    element: function() {\r\n        return this._$element\r\n    },\r\n    getElementHeight: function() {\r\n        var $element = this.element();\r\n        if (!$element) {\r\n            return 0\r\n        }\r\n        var marginTop = parseFloat($element.css(\"marginTop\")) || 0;\r\n        var marginBottom = parseFloat($element.css(\"marginBottom\")) || 0;\r\n        var offsetHeight = $element.get(0).offsetHeight;\r\n        return offsetHeight + marginTop + marginBottom\r\n    },\r\n    isVisible: function() {\r\n        return true\r\n    },\r\n    getTemplate: function(name) {\r\n        return this.component._getTemplate(name)\r\n    },\r\n    render: function($parent, options) {\r\n        var $element = this._$element;\r\n        var isVisible = this.isVisible();\r\n        if (!$element && !$parent) {\r\n            return\r\n        }\r\n        this._requireReady = false;\r\n        if (!$element) {\r\n            $element = this._$element = $(\"<div>\").appendTo($parent);\r\n            this._$parent = $parent\r\n        }\r\n        $element.toggleClass(\"dx-hidden\", !isVisible);\r\n        if (isVisible) {\r\n            this.component._optionCache = {};\r\n            this._renderCore(options);\r\n            this.component._optionCache = void 0;\r\n            this.renderCompleted.fire(options)\r\n        }\r\n    },\r\n    resize: function() {\r\n        this.isResizing = true;\r\n        this._resizeCore();\r\n        this.resizeCompleted.fire();\r\n        this.isResizing = false\r\n    },\r\n    focus: function() {\r\n        eventsEngine.trigger(this.element(), \"focus\")\r\n    }\r\n});\r\nvar MODULES_ORDER_MAX_INDEX = 1e6;\r\nvar processModules = function(that, componentClass) {\r\n    var modules = componentClass.modules;\r\n    var modulesOrder = componentClass.modulesOrder;\r\n    var controllerTypes = componentClass.controllerTypes || {};\r\n    var viewTypes = componentClass.viewTypes || {};\r\n    if (!componentClass.controllerTypes) {\r\n        if (modulesOrder) {\r\n            modules.sort((function(module1, module2) {\r\n                var orderIndex1 = inArray(module1.name, modulesOrder);\r\n                var orderIndex2 = inArray(module2.name, modulesOrder);\r\n                if (orderIndex1 < 0) {\r\n                    orderIndex1 = MODULES_ORDER_MAX_INDEX\r\n                }\r\n                if (orderIndex2 < 0) {\r\n                    orderIndex2 = MODULES_ORDER_MAX_INDEX\r\n                }\r\n                return orderIndex1 - orderIndex2\r\n            }))\r\n        }\r\n        each(modules, (function() {\r\n            var controllers = this.controllers;\r\n            var moduleName = this.name;\r\n            var views = this.views;\r\n            controllers && each(controllers, (function(name, type) {\r\n                if (controllerTypes[name]) {\r\n                    throw errors.Error(\"E1001\", moduleName, name)\r\n                } else if (!(type && type.subclassOf && type.subclassOf(Controller))) {\r\n                    type.subclassOf(Controller);\r\n                    throw errors.Error(\"E1002\", moduleName, name)\r\n                }\r\n                controllerTypes[name] = type\r\n            }));\r\n            views && each(views, (function(name, type) {\r\n                if (viewTypes[name]) {\r\n                    throw errors.Error(\"E1003\", moduleName, name)\r\n                } else if (!(type && type.subclassOf && type.subclassOf(View))) {\r\n                    throw errors.Error(\"E1004\", moduleName, name)\r\n                }\r\n                viewTypes[name] = type\r\n            }))\r\n        }));\r\n        each(modules, (function() {\r\n            var extenders = this.extenders;\r\n            if (extenders) {\r\n                extenders.controllers && each(extenders.controllers, (function(name, extender) {\r\n                    if (controllerTypes[name]) {\r\n                        controllerTypes[name] = controllerTypes[name].inherit(extender)\r\n                    }\r\n                }));\r\n                extenders.views && each(extenders.views, (function(name, extender) {\r\n                    if (viewTypes[name]) {\r\n                        viewTypes[name] = viewTypes[name].inherit(extender)\r\n                    }\r\n                }))\r\n            }\r\n        }));\r\n        componentClass.controllerTypes = controllerTypes;\r\n        componentClass.viewTypes = viewTypes\r\n    }\r\n    var createModuleItems = function(moduleTypes) {\r\n        var moduleItems = {};\r\n        each(moduleTypes, (function(name, moduleType) {\r\n            var moduleItem = new moduleType(that);\r\n            moduleItem.name = name;\r\n            ! function(that, name, moduleItem) {\r\n                var publicMethods = moduleItem.publicMethods();\r\n                if (publicMethods) {\r\n                    each(publicMethods, (function(index, methodName) {\r\n                        if (moduleItem[methodName]) {\r\n                            if (!that[methodName]) {\r\n                                that[methodName] = function() {\r\n                                    return moduleItem[methodName].apply(moduleItem, arguments)\r\n                                }\r\n                            } else {\r\n                                throw errors.Error(\"E1005\", methodName)\r\n                            }\r\n                        } else {\r\n                            throw errors.Error(\"E1006\", name, methodName)\r\n                        }\r\n                    }))\r\n                }\r\n            }(that, name, moduleItem);\r\n            moduleItems[name] = moduleItem\r\n        }));\r\n        return moduleItems\r\n    };\r\n    that._controllers = createModuleItems(controllerTypes);\r\n    that._views = createModuleItems(viewTypes)\r\n};\r\nvar callModuleItemsMethod = function(that, methodName, args) {\r\n    args = args || [];\r\n    if (that._controllers) {\r\n        each(that._controllers, (function() {\r\n            this[methodName] && this[methodName].apply(this, args)\r\n        }))\r\n    }\r\n    if (that._views) {\r\n        each(that._views, (function() {\r\n            this[methodName] && this[methodName].apply(this, args)\r\n        }))\r\n    }\r\n};\r\nexport default {\r\n    modules: [],\r\n    View: View,\r\n    ViewController: ViewController,\r\n    Controller: Controller,\r\n    registerModule: function(name, module) {\r\n        var modules = this.modules;\r\n        for (var i = 0; i < modules.length; i++) {\r\n            if (modules[i].name === name) {\r\n                return\r\n            }\r\n        }\r\n        module.name = name;\r\n        modules.push(module);\r\n        delete this.controllerTypes;\r\n        delete this.viewTypes\r\n    },\r\n    registerModulesOrder: function(moduleNames) {\r\n        this.modulesOrder = moduleNames\r\n    },\r\n    unregisterModule: function(name) {\r\n        this.modules = grep(this.modules, (function(module) {\r\n            return module.name !== name\r\n        }));\r\n        delete this.controllerTypes;\r\n        delete this.viewTypes\r\n    },\r\n    processModules: processModules,\r\n    callModuleItemsMethod: callModuleItemsMethod\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\r\nimport modules from \"../grid_core/ui.grid_core.modules\";\r\nexport default _extends({}, modules, gridCoreUtils, {\r\n    modules: []\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_state_mixin.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nvar COLUMN_INDICATORS_CLASS = \"dx-column-indicators\";\r\nvar GROUP_PANEL_ITEM_CLASS = \"dx-group-panel-item\";\r\nexport default {\r\n    _applyColumnState: function(options) {\r\n        var _that$component;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var columnAlignment = this._getColumnAlignment(options.column.alignment, rtlEnabled);\r\n        var parameters = extend(true, {\r\n            columnAlignment: columnAlignment\r\n        }, options);\r\n        var isGroupPanelItem = parameters.rootElement.hasClass(GROUP_PANEL_ITEM_CLASS);\r\n        var $indicatorsContainer = this._createIndicatorContainer(parameters, isGroupPanelItem);\r\n        var $span = $(\"<span>\").addClass(this._getIndicatorClassName(options.name));\r\n        var columnsController = null === (_that$component = this.component) || void 0 === _that$component ? void 0 : _that$component.getController(\"columns\");\r\n        var indicatorAlignment = (null === columnsController || void 0 === columnsController ? void 0 : columnsController.getHeaderContentAlignment(columnAlignment)) || columnAlignment;\r\n        parameters.container = $indicatorsContainer;\r\n        parameters.indicator = $span;\r\n        this._renderIndicator(parameters);\r\n        $indicatorsContainer[(isGroupPanelItem || !options.showColumnLines) && \"left\" === indicatorAlignment ? \"appendTo\" : \"prependTo\"](options.rootElement);\r\n        return $span\r\n    },\r\n    _getIndicatorClassName: noop,\r\n    _getColumnAlignment: function(alignment, rtlEnabled) {\r\n        rtlEnabled = rtlEnabled || this.option(\"rtlEnabled\");\r\n        return alignment && \"center\" !== alignment ? alignment : getDefaultAlignment(rtlEnabled)\r\n    },\r\n    _createIndicatorContainer: function(options, ignoreIndicatorAlignment) {\r\n        var $indicatorsContainer = this._getIndicatorContainer(options.rootElement);\r\n        var indicatorAlignment = \"left\" === options.columnAlignment ? \"right\" : \"left\";\r\n        if (!$indicatorsContainer.length) {\r\n            $indicatorsContainer = $(\"<div>\").addClass(COLUMN_INDICATORS_CLASS)\r\n        }\r\n        this.setAria(\"role\", \"presentation\", $indicatorsContainer);\r\n        return $indicatorsContainer.css(\"float\", options.showColumnLines && !ignoreIndicatorAlignment ? indicatorAlignment : null)\r\n    },\r\n    _getIndicatorContainer: function($cell) {\r\n        return $cell && $cell.find(\".\" + COLUMN_INDICATORS_CLASS)\r\n    },\r\n    _getIndicatorElements: function($cell) {\r\n        var $indicatorContainer = this._getIndicatorContainer($cell);\r\n        return $indicatorContainer && $indicatorContainer.children()\r\n    },\r\n    _renderIndicator: function(options) {\r\n        var $container = options.container;\r\n        var $indicator = options.indicator;\r\n        $container && $indicator && $container.append($indicator)\r\n    },\r\n    _updateIndicators: function(indicatorName) {\r\n        var columns = this.getColumns();\r\n        var $cells = this.getColumnElements();\r\n        var $cell;\r\n        if (!$cells || columns.length !== $cells.length) {\r\n            return\r\n        }\r\n        for (var i = 0; i < columns.length; i++) {\r\n            $cell = $cells.eq(i);\r\n            this._updateIndicator($cell, columns[i], indicatorName);\r\n            var rowOptions = $cell.parent().data(\"options\");\r\n            if (rowOptions && rowOptions.cells) {\r\n                rowOptions.cells[$cell.index()].column = columns[i]\r\n            }\r\n        }\r\n    },\r\n    _updateIndicator: function($cell, column, indicatorName) {\r\n        if (!column.command) {\r\n            return this._applyColumnState({\r\n                name: indicatorName,\r\n                rootElement: $cell,\r\n                column: column,\r\n                showColumnLines: this.option(\"showColumnLines\")\r\n            })\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_view.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getWidth,\r\n    getOuterHeight,\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    data as elementData\r\n} from \"../../core/element_data\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    name as dblclickEvent\r\n} from \"../../events/double_click\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    setWidth\r\n} from \"../../core/utils/style\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    isRenderer,\r\n    isFunction,\r\n    isString,\r\n    isDefined,\r\n    isNumeric\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getBoundingRect,\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport * as iteratorUtils from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport columnStateMixin from \"./ui.grid_core.column_state_mixin\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    nativeScrolling\r\n} from \"../../core/utils/support\";\r\nvar SCROLL_CONTAINER_CLASS = \"scroll-container\";\r\nvar SCROLLABLE_SIMULATED_CLASS = \"scrollable-simulated\";\r\nvar GROUP_SPACE_CLASS = \"group-space\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar TABLE_CLASS = \"table\";\r\nvar TABLE_FIXED_CLASS = \"table-fixed\";\r\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar FILTER_ROW_CLASS = \"filter-row\";\r\nvar ERROR_ROW_CLASS = \"dx-error-row\";\r\nvar CELL_UPDATED_ANIMATION_CLASS = \"cell-updated-animation\";\r\nvar HIDDEN_COLUMNS_WIDTH = \"0.0001px\";\r\nvar CELL_HINT_VISIBLE = \"dxCellHintVisible\";\r\nvar FORM_FIELD_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\r\nvar appendElementTemplate = {\r\n    render: function(options) {\r\n        options.container.append(options.content)\r\n    }\r\n};\r\nvar subscribeToRowEvents = function(that, $table) {\r\n    var touchTarget;\r\n    var touchCurrentTarget;\r\n    var timeoutId;\r\n\r\n    function clearTouchTargets(timeout) {\r\n        return setTimeout((function() {\r\n            touchTarget = touchCurrentTarget = null\r\n        }), timeout)\r\n    }\r\n    eventsEngine.on($table, \"touchstart touchend\", \".dx-row\", (function(e) {\r\n        clearTimeout(timeoutId);\r\n        if (\"touchstart\" === e.type) {\r\n            touchTarget = e.target;\r\n            touchCurrentTarget = e.currentTarget;\r\n            timeoutId = clearTouchTargets(1e3)\r\n        } else {\r\n            timeoutId = clearTouchTargets()\r\n        }\r\n    }));\r\n    eventsEngine.on($table, [clickEventName, dblclickEvent, pointerEvents.down].join(\" \"), \".dx-row\", {\r\n        useNative: that._isNativeClick()\r\n    }, that.createAction((function(e) {\r\n        var event = e.event;\r\n        if (touchTarget) {\r\n            event.target = touchTarget;\r\n            event.currentTarget = touchCurrentTarget\r\n        }\r\n        if (!$(event.target).closest(\"a\").length) {\r\n            e.rowIndex = that.getRowIndex(event.currentTarget);\r\n            if (e.rowIndex >= 0) {\r\n                e.rowElement = getPublicElement($(event.currentTarget));\r\n                e.columns = that.getColumns();\r\n                if (event.type === pointerEvents.down) {\r\n                    that._rowPointerDown(e)\r\n                } else if (event.type === clickEventName) {\r\n                    that._rowClick(e)\r\n                } else {\r\n                    that._rowDblClick(e)\r\n                }\r\n            }\r\n        }\r\n    })))\r\n};\r\nvar getWidthStyle = function(width) {\r\n    if (\"auto\" === width) {\r\n        return \"\"\r\n    }\r\n    return isNumeric(width) ? width + \"px\" : width\r\n};\r\nvar setCellWidth = function(cell, column, width) {\r\n    cell.style.width = cell.style.maxWidth = \"auto\" === column.width ? \"\" : width\r\n};\r\nvar copyAttributes = function(element, newElement) {\r\n    if (!element || !newElement) {\r\n        return\r\n    }\r\n    var oldAttributes = element.attributes;\r\n    var newAttributes = newElement.attributes;\r\n    var i;\r\n    for (i = 0; i < oldAttributes.length; i++) {\r\n        var name = oldAttributes[i].nodeName;\r\n        if (!newElement.hasAttribute(name)) {\r\n            element.removeAttribute(name)\r\n        }\r\n    }\r\n    for (i = 0; i < newAttributes.length; i++) {\r\n        element.setAttribute(newAttributes[i].nodeName, newAttributes[i].nodeValue)\r\n    }\r\n};\r\nexport var ColumnsView = modules.View.inherit(columnStateMixin).inherit({\r\n    _createScrollableOptions: function() {\r\n        var scrollingOptions = this.option(\"scrolling\");\r\n        var useNativeScrolling = this.option(\"scrolling.useNative\");\r\n        var options = extend({}, scrollingOptions, {\r\n            direction: \"both\",\r\n            bounceEnabled: false,\r\n            useKeyboard: false\r\n        });\r\n        if (void 0 === useNativeScrolling) {\r\n            useNativeScrolling = true\r\n        }\r\n        if (\"auto\" === useNativeScrolling) {\r\n            delete options.useNative;\r\n            delete options.useSimulatedScrollbar\r\n        } else {\r\n            options.useNative = !!useNativeScrolling;\r\n            options.useSimulatedScrollbar = !useNativeScrolling\r\n        }\r\n        return options\r\n    },\r\n    _updateCell: function($cell, parameters) {\r\n        if (parameters.rowType) {\r\n            this._cellPrepared($cell, parameters)\r\n        }\r\n    },\r\n    _createCell: function(options) {\r\n        var column = options.column;\r\n        var alignment = column.alignment || getDefaultAlignment(this.option(\"rtlEnabled\"));\r\n        var cell = domAdapter.createElement(\"td\");\r\n        cell.style.textAlign = alignment;\r\n        var $cell = $(cell);\r\n        if (\"data\" === options.rowType && column.headerId && !column.type) {\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                this.setAria(\"describedby\", column.headerId, $cell)\r\n            }\r\n        }\r\n        if (column.cssClass) {\r\n            $cell.addClass(column.cssClass)\r\n        }\r\n        if (\"expand\" === column.command) {\r\n            $cell.addClass(column.cssClass);\r\n            $cell.addClass(this.addWidgetPrefix(GROUP_SPACE_CLASS))\r\n        }\r\n        if (column.colspan > 1) {\r\n            $cell.attr(\"colSpan\", column.colspan)\r\n        } else if (!column.isBand && \"auto\" !== column.visibleWidth && this.option(\"columnAutoWidth\")) {\r\n            if (column.width || column.minWidth) {\r\n                cell.style.minWidth = getWidthStyle(column.minWidth || column.width)\r\n            }\r\n            if (column.width) {\r\n                setCellWidth(cell, column, getWidthStyle(column.width))\r\n            }\r\n        }\r\n        return $cell\r\n    },\r\n    _createRow: function(rowObject, tagName) {\r\n        tagName = tagName || \"tr\";\r\n        var $element = $(\"<\".concat(tagName, \">\")).addClass(ROW_CLASS);\r\n        this.setAria(\"role\", \"row\", $element);\r\n        return $element\r\n    },\r\n    _isAltRow: function(row) {\r\n        return row && row.dataIndex % 2 === 1\r\n    },\r\n    _createTable: function(columns, isAppend) {\r\n        var that = this;\r\n        var $table = $(\"<table>\").addClass(that.addWidgetPrefix(TABLE_CLASS)).addClass(that.addWidgetPrefix(TABLE_FIXED_CLASS));\r\n        if (columns && !isAppend) {\r\n            $table.append(that._createColGroup(columns));\r\n            if (browser.safari) {\r\n                $table.append($(\"<thead>\").append(\"<tr>\"))\r\n            }\r\n            that.setAria(\"role\", \"presentation\", $table)\r\n        } else {\r\n            that.setAria(\"hidden\", true, $table)\r\n        }\r\n        this.setAria(\"role\", \"presentation\", $(\"<tbody>\").appendTo($table));\r\n        if (isAppend) {\r\n            return $table\r\n        }\r\n        if (browser.mozilla) {\r\n            eventsEngine.on($table, \"mousedown\", \"td\", (function(e) {\r\n                if (e.ctrlKey) {\r\n                    e.preventDefault()\r\n                }\r\n            }))\r\n        }\r\n        if (that.option(\"cellHintEnabled\")) {\r\n            eventsEngine.on($table, \"mousemove\", \".dx-row > td\", this.createAction((function(args) {\r\n                var e = args.event;\r\n                var $element = $(e.target);\r\n                var $cell = $(e.currentTarget);\r\n                var $row = $cell.parent();\r\n                var isDataRow = $row.hasClass(\"dx-data-row\");\r\n                var isHeaderRow = $row.hasClass(\"dx-header-row\");\r\n                var isGroupRow = $row.hasClass(GROUP_ROW_CLASS);\r\n                var isMasterDetailRow = $row.hasClass(DETAIL_ROW_CLASS);\r\n                var isFilterRow = $row.hasClass(that.addWidgetPrefix(FILTER_ROW_CLASS));\r\n                var visibleColumns = that._columnsController.getVisibleColumns();\r\n                var rowOptions = $row.data(\"options\");\r\n                var columnIndex = $cell.index();\r\n                var cellOptions = rowOptions && rowOptions.cells && rowOptions.cells[columnIndex];\r\n                var column = cellOptions ? cellOptions.column : visibleColumns[columnIndex];\r\n                if (!isMasterDetailRow && !isFilterRow && (!isDataRow || isDataRow && column && !column.cellTemplate) && (!isHeaderRow || isHeaderRow && column && !column.headerCellTemplate) && (!isGroupRow || isGroupRow && column && (void 0 === column.groupIndex || !column.groupCellTemplate))) {\r\n                    if ($element.data(CELL_HINT_VISIBLE)) {\r\n                        $element.removeAttr(\"title\");\r\n                        $element.data(CELL_HINT_VISIBLE, false)\r\n                    }\r\n                    var difference = $element[0].scrollWidth - $element[0].clientWidth;\r\n                    if (difference > 0 && !isDefined($element.attr(\"title\"))) {\r\n                        $element.attr(\"title\", $element.text());\r\n                        $element.data(CELL_HINT_VISIBLE, true)\r\n                    }\r\n                }\r\n            })))\r\n        }\r\n        var getOptions = function(event) {\r\n            var $cell = $(event.currentTarget);\r\n            var $fieldItemContent = $(event.target).closest(\".\" + FORM_FIELD_ITEM_CONTENT_CLASS);\r\n            var $row = $cell.parent();\r\n            var rowOptions = $row.data(\"options\");\r\n            var options = rowOptions && rowOptions.cells && rowOptions.cells[$cell.index()];\r\n            if (!$cell.closest(\"table\").is(event.delegateTarget)) {\r\n                return\r\n            }\r\n            var resultOptions = extend({}, options, {\r\n                cellElement: getPublicElement($cell),\r\n                event: event,\r\n                eventType: event.type\r\n            });\r\n            resultOptions.rowIndex = that.getRowIndex($row);\r\n            if ($fieldItemContent.length) {\r\n                var formItemOptions = $fieldItemContent.data(\"dx-form-item\");\r\n                if (formItemOptions.column) {\r\n                    resultOptions.column = formItemOptions.column;\r\n                    resultOptions.columnIndex = that._columnsController.getVisibleIndex(resultOptions.column.index)\r\n                }\r\n            }\r\n            return resultOptions\r\n        };\r\n        eventsEngine.on($table, \"mouseover\", \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellHoverChanged\", options)\r\n        }));\r\n        eventsEngine.on($table, \"mouseout\", \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellHoverChanged\", options)\r\n        }));\r\n        eventsEngine.on($table, clickEventName, \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellClick\", options)\r\n        }));\r\n        eventsEngine.on($table, dblclickEvent, \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellDblClick\", options)\r\n        }));\r\n        subscribeToRowEvents(that, $table);\r\n        return $table\r\n    },\r\n    _isNativeClick: noop,\r\n    _rowPointerDown: noop,\r\n    _rowClick: noop,\r\n    _rowDblClick: noop,\r\n    _createColGroup: function(columns) {\r\n        var colgroupElement = $(\"<colgroup>\");\r\n        for (var i = 0; i < columns.length; i++) {\r\n            var colspan = columns[i].colspan || 1;\r\n            for (var j = 0; j < colspan; j++) {\r\n                colgroupElement.append(this._createCol(columns[i]))\r\n            }\r\n        }\r\n        return colgroupElement\r\n    },\r\n    _createCol: function(column) {\r\n        var width = column.visibleWidth || column.width;\r\n        if (\"adaptiveHidden\" === width) {\r\n            width = HIDDEN_COLUMNS_WIDTH\r\n        }\r\n        var col = $(\"<col>\");\r\n        setWidth(col, width);\r\n        return col\r\n    },\r\n    renderDelayedTemplates: function(change) {\r\n        var delayedTemplates = this._delayedTemplates;\r\n        var syncTemplates = delayedTemplates.filter(template => !template.async);\r\n        var asyncTemplates = delayedTemplates.filter(template => template.async);\r\n        this._delayedTemplates = [];\r\n        this._renderDelayedTemplatesCore(syncTemplates, false, change);\r\n        this._renderDelayedTemplatesCoreAsync(asyncTemplates)\r\n    },\r\n    _renderDelayedTemplatesCoreAsync: function(templates) {\r\n        var that = this;\r\n        if (templates.length) {\r\n            getWindow().setTimeout((function() {\r\n                that._renderDelayedTemplatesCore(templates, true)\r\n            }))\r\n        }\r\n    },\r\n    _renderDelayedTemplatesCore: function(templates, isAsync, change) {\r\n        var date = new Date;\r\n        while (templates.length) {\r\n            var templateParameters = templates.shift();\r\n            var options = templateParameters.options;\r\n            var doc = domAdapter.getDocument();\r\n            if (!isAsync || $(options.container).closest(doc).length) {\r\n                if (change) {\r\n                    options.change = change\r\n                }\r\n                templateParameters.template.render(options)\r\n            }\r\n            if (isAsync && new Date - date > 30) {\r\n                this._renderDelayedTemplatesCoreAsync(templates);\r\n                break\r\n            }\r\n        }\r\n        if (!templates.length && this._delayedTemplates.length) {\r\n            this.renderDelayedTemplates()\r\n        }\r\n    },\r\n    _processTemplate: function(template) {\r\n        var renderingTemplate;\r\n        if (template && template.render && !isRenderer(template)) {\r\n            renderingTemplate = {\r\n                allowRenderToDetachedContainer: template.allowRenderToDetachedContainer,\r\n                render: function(options) {\r\n                    template.render(options.container, options.model, options.change);\r\n                    options.deferred && options.deferred.resolve()\r\n                }\r\n            }\r\n        } else if (isFunction(template)) {\r\n            renderingTemplate = {\r\n                render: function(options) {\r\n                    var renderedTemplate = template(getPublicElement(options.container), options.model, options.change);\r\n                    if (renderedTemplate && (renderedTemplate.nodeType || isRenderer(renderedTemplate))) {\r\n                        options.container.append(renderedTemplate)\r\n                    }\r\n                    options.deferred && options.deferred.resolve()\r\n                }\r\n            }\r\n        } else {\r\n            var templateID = isString(template) ? template : $(template).attr(\"id\");\r\n            if (!templateID) {\r\n                renderingTemplate = this.getTemplate(template)\r\n            } else {\r\n                if (!this._templatesCache[templateID]) {\r\n                    this._templatesCache[templateID] = this.getTemplate(template)\r\n                }\r\n                renderingTemplate = this._templatesCache[templateID]\r\n            }\r\n        }\r\n        return renderingTemplate\r\n    },\r\n    renderTemplate: function(container, template, options, allowRenderToDetachedContainer, change) {\r\n        var renderingTemplate = this._processTemplate(template, options);\r\n        var column = options.column;\r\n        var isDataRow = \"data\" === options.rowType;\r\n        var templateDeferred = new Deferred;\r\n        var templateOptions = {\r\n            container: container,\r\n            model: options,\r\n            deferred: templateDeferred,\r\n            onRendered: () => {\r\n                templateDeferred.resolve()\r\n            }\r\n        };\r\n        if (renderingTemplate) {\r\n            options.component = this.component;\r\n            var async = column && (column.renderAsync && isDataRow || this.option(\"renderAsync\") && (false !== column.renderAsync && (column.command || column.showEditorAlways) && isDataRow || \"filter\" === options.rowType));\r\n            if ((renderingTemplate.allowRenderToDetachedContainer || allowRenderToDetachedContainer) && !async) {\r\n                renderingTemplate.render(templateOptions)\r\n            } else {\r\n                this._delayedTemplates.push({\r\n                    template: renderingTemplate,\r\n                    options: templateOptions,\r\n                    async: async\r\n                })\r\n            }\r\n            if (change) {\r\n                change.templateDeferreds = change.templateDeferreds || [];\r\n                change.templateDeferreds.push(templateDeferred)\r\n            }\r\n        } else {\r\n            templateDeferred.reject()\r\n        }\r\n        return templateDeferred.promise()\r\n    },\r\n    _getBodies: function(tableElement) {\r\n        return $(tableElement).children(\"tbody\").not(\".dx-header\").not(\".dx-footer\")\r\n    },\r\n    _wrapRowIfNeed: function($table, $row) {\r\n        var hasDataRowTemplate = this.option().rowTemplate || this.option(\"dataRowTemplate\");\r\n        var $tBodies = hasDataRowTemplate && this._getBodies(this._tableElement || $table);\r\n        if ($tBodies && $tBodies.filter(\".\" + ROW_CLASS).length) {\r\n            var $tbody = $(\"<tbody>\").addClass($row.attr(\"class\"));\r\n            this.setAria(\"role\", \"presentation\", $tbody);\r\n            return $tbody.append($row)\r\n        }\r\n        return $row\r\n    },\r\n    _appendRow: function($table, $row, appendTemplate) {\r\n        appendTemplate = appendTemplate || appendElementTemplate;\r\n        appendTemplate.render({\r\n            content: $row,\r\n            container: $table\r\n        })\r\n    },\r\n    _resizeCore: function() {\r\n        var scrollLeft = this._scrollLeft;\r\n        if (scrollLeft >= 0) {\r\n            this._scrollLeft = 0;\r\n            this.scrollTo({\r\n                left: scrollLeft\r\n            })\r\n        }\r\n    },\r\n    _renderCore: function(e) {\r\n        var $root = this.element().parent();\r\n        if (!$root || $root.parent().length) {\r\n            this.renderDelayedTemplates(e)\r\n        }\r\n    },\r\n    _renderTable: function(options) {\r\n        options = options || {};\r\n        options.columns = this._columnsController.getVisibleColumns();\r\n        var changeType = options.change && options.change.changeType;\r\n        var $table = this._createTable(options.columns, \"append\" === changeType || \"prepend\" === changeType || \"update\" === changeType);\r\n        this._renderRows($table, options);\r\n        return $table\r\n    },\r\n    _renderRows: function($table, options) {\r\n        var rows = this._getRows(options.change);\r\n        var columnIndices = options.change && options.change.columnIndices || [];\r\n        var changeTypes = options.change && options.change.changeTypes || [];\r\n        for (var i = 0; i < rows.length; i++) {\r\n            this._renderRow($table, extend({\r\n                row: rows[i],\r\n                columnIndices: columnIndices[i],\r\n                changeType: changeTypes[i]\r\n            }, options))\r\n        }\r\n    },\r\n    _renderRow: function($table, options) {\r\n        if (!options.columnIndices) {\r\n            options.row.cells = []\r\n        }\r\n        var $row = this._createRow(options.row);\r\n        var $wrappedRow = this._wrapRowIfNeed($table, $row);\r\n        if (\"remove\" !== options.changeType) {\r\n            this._renderCells($row, options)\r\n        }\r\n        this._appendRow($table, $wrappedRow);\r\n        var rowOptions = extend({\r\n            columns: options.columns\r\n        }, options.row);\r\n        this._addWatchMethod(rowOptions, options.row);\r\n        this._rowPrepared($wrappedRow, rowOptions, options.row)\r\n    },\r\n    _needRenderCell: function(columnIndex, columnIndices) {\r\n        return !columnIndices || columnIndices.indexOf(columnIndex) >= 0\r\n    },\r\n    _renderCells: function($row, options) {\r\n        var columnIndex = 0;\r\n        var row = options.row;\r\n        var columns = options.columns;\r\n        for (var i = 0; i < columns.length; i++) {\r\n            if (this._needRenderCell(i, options.columnIndices)) {\r\n                this._renderCell($row, extend({\r\n                    column: columns[i],\r\n                    columnIndex: columnIndex,\r\n                    value: row.values && row.values[columnIndex],\r\n                    oldValue: row.oldValues && row.oldValues[columnIndex]\r\n                }, options))\r\n            }\r\n            if (columns[i].colspan > 1) {\r\n                columnIndex += columns[i].colspan\r\n            } else {\r\n                columnIndex++\r\n            }\r\n        }\r\n    },\r\n    _updateCells: function($rowElement, $newRowElement, columnIndices) {\r\n        var $cells = $rowElement.children();\r\n        var $newCells = $newRowElement.children();\r\n        var highlightChanges = this.option(\"highlightChanges\");\r\n        var cellUpdatedClass = this.addWidgetPrefix(CELL_UPDATED_ANIMATION_CLASS);\r\n        columnIndices.forEach((function(columnIndex, index) {\r\n            var $cell = $cells.eq(columnIndex);\r\n            var $newCell = $newCells.eq(index);\r\n            $cell.replaceWith($newCell);\r\n            if (highlightChanges && !$newCell.hasClass(\"dx-command-expand\")) {\r\n                $newCell.addClass(cellUpdatedClass)\r\n            }\r\n        }));\r\n        copyAttributes($rowElement.get(0), $newRowElement.get(0))\r\n    },\r\n    _setCellAriaAttributes: function($cell, cellOptions) {\r\n        if (\"freeSpace\" !== cellOptions.rowType) {\r\n            this.setAria(\"selected\", false, $cell);\r\n            this.setAria(\"role\", \"gridcell\", $cell);\r\n            var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n            var ariaColIndex = cellOptions.columnIndex + columnIndexOffset + 1;\r\n            this.setAria(\"colindex\", ariaColIndex, $cell)\r\n        }\r\n    },\r\n    _renderCell: function($row, options) {\r\n        var cellOptions = this._getCellOptions(options);\r\n        if (options.columnIndices) {\r\n            if (options.row.cells) {\r\n                options.row.cells[cellOptions.columnIndex] = cellOptions\r\n            }\r\n        } else {\r\n            options.row.cells.push(cellOptions)\r\n        }\r\n        var $cell = this._createCell(cellOptions);\r\n        this._setCellAriaAttributes($cell, cellOptions);\r\n        this._renderCellContent($cell, cellOptions);\r\n        $row.get(0).appendChild($cell.get(0));\r\n        return $cell\r\n    },\r\n    _renderCellContent: function($cell, options) {\r\n        var template = this._getCellTemplate(options);\r\n        when(!template || this.renderTemplate($cell, template, options)).done(() => {\r\n            this._updateCell($cell, options)\r\n        })\r\n    },\r\n    _getCellTemplate: function() {},\r\n    _getRows: function() {\r\n        return []\r\n    },\r\n    _getCellOptions: function(options) {\r\n        var cellOptions = {\r\n            column: options.column,\r\n            columnIndex: options.columnIndex,\r\n            rowType: options.row.rowType,\r\n            isAltRow: this._isAltRow(options.row)\r\n        };\r\n        this._addWatchMethod(cellOptions);\r\n        return cellOptions\r\n    },\r\n    _addWatchMethod: function(options, source) {\r\n        if (!this.option(\"repaintChangesOnly\")) {\r\n            return\r\n        }\r\n        var watchers = [];\r\n        source = source || options;\r\n        source.watch = source.watch || function(getter, updateValueFunc, updateRowFunc) {\r\n            var oldValue = getter(source.data);\r\n            var watcher = function(row) {\r\n                if (row && updateRowFunc) {\r\n                    updateRowFunc(row)\r\n                }\r\n                var newValue = getter(source.data);\r\n                if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\r\n                    if (row) {\r\n                        updateValueFunc(newValue)\r\n                    }\r\n                    oldValue = newValue\r\n                }\r\n            };\r\n            watchers.push(watcher);\r\n            return function() {\r\n                var index = watchers.indexOf(watcher);\r\n                if (index >= 0) {\r\n                    watchers.splice(index, 1)\r\n                }\r\n            }\r\n        };\r\n        source.update = source.update || function(row, keepRow) {\r\n            if (row) {\r\n                this.data = options.data = row.data;\r\n                this.rowIndex = options.rowIndex = row.rowIndex;\r\n                this.dataIndex = options.dataIndex = row.dataIndex;\r\n                this.isExpanded = options.isExpanded = row.isExpanded;\r\n                if (options.row && !keepRow) {\r\n                    options.row = row\r\n                }\r\n            }\r\n            watchers.forEach((function(watcher) {\r\n                watcher(row)\r\n            }))\r\n        };\r\n        if (source !== options) {\r\n            options.watch = source.watch.bind(source)\r\n        }\r\n        return options\r\n    },\r\n    _cellPrepared: function(cell, options) {\r\n        options.cellElement = getPublicElement($(cell));\r\n        this.executeAction(\"onCellPrepared\", options)\r\n    },\r\n    _rowPrepared: function($row, options) {\r\n        elementData($row.get(0), \"options\", options);\r\n        options.rowElement = getPublicElement($row);\r\n        this.executeAction(\"onRowPrepared\", options)\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var optionNames = e.optionNames;\r\n        if (gridCoreUtils.checkChanges(optionNames, [\"width\", \"visibleWidth\"])) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var widths = iteratorUtils.map(visibleColumns, (function(column) {\r\n                var width = column.visibleWidth || column.width;\r\n                return isDefined(width) ? width : \"auto\"\r\n            }));\r\n            this.setColumnWidths({\r\n                widths: widths,\r\n                optionNames: optionNames\r\n            });\r\n            return\r\n        }\r\n        if (!this._requireReady) {\r\n            this.render()\r\n        }\r\n    },\r\n    getCellIndex: function($cell) {\r\n        var cellIndex = $cell.length ? $cell[0].cellIndex : -1;\r\n        return cellIndex\r\n    },\r\n    getTableElements: function() {\r\n        return this._tableElement || $()\r\n    },\r\n    getTableElement: function() {\r\n        return this._tableElement\r\n    },\r\n    setTableElement: function(tableElement) {\r\n        this._tableElement = tableElement\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        switch (args.name) {\r\n            case \"cellHintEnabled\":\r\n            case \"onCellPrepared\":\r\n            case \"onRowPrepared\":\r\n            case \"onCellHoverChanged\":\r\n                this._invalidate(true, true);\r\n                args.handled = true\r\n        }\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that._scrollLeft = -1;\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._dataController = that.getController(\"data\");\r\n        that._delayedTemplates = [];\r\n        that._templatesCache = {};\r\n        that.createAction(\"onCellClick\");\r\n        that.createAction(\"onRowClick\");\r\n        that.createAction(\"onCellDblClick\");\r\n        that.createAction(\"onRowDblClick\");\r\n        that.createAction(\"onCellHoverChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        that.createAction(\"onCellPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        that.createAction(\"onRowPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\",\r\n            afterExecute: function(e) {\r\n                that._afterRowPrepared(e)\r\n            }\r\n        });\r\n        that._columnsController.columnsChanged.add(that._columnOptionChanged.bind(that));\r\n        that._dataController && that._dataController.changed.add(that._handleDataChanged.bind(that))\r\n    },\r\n    _afterRowPrepared: noop,\r\n    _handleDataChanged: function() {},\r\n    callbackNames: function() {\r\n        return [\"scrollChanged\"]\r\n    },\r\n    _updateScrollLeftPosition: function() {\r\n        var scrollLeft = this._scrollLeft;\r\n        if (scrollLeft >= 0) {\r\n            this._scrollLeft = 0;\r\n            this.scrollTo({\r\n                left: scrollLeft\r\n            })\r\n        }\r\n    },\r\n    scrollTo: function(pos) {\r\n        var $element = this.element();\r\n        var $scrollContainer = $element && $element.children(\".\" + this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).not(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\r\n        if (isDefined(pos) && isDefined(pos.left) && this._scrollLeft !== pos.left) {\r\n            this._scrollLeft = pos.left;\r\n            $scrollContainer && $scrollContainer.scrollLeft(pos.left)\r\n        }\r\n    },\r\n    _wrapTableInScrollContainer: function($table) {\r\n        var $scrollContainer = $(\"<div>\");\r\n        var useNative = this.option(\"scrolling.useNative\");\r\n        if (false === useNative || \"auto\" === useNative && !nativeScrolling) {\r\n            $scrollContainer.addClass(this.addWidgetPrefix(SCROLLABLE_SIMULATED_CLASS))\r\n        }\r\n        eventsEngine.on($scrollContainer, \"scroll\", () => {\r\n            var scrollLeft = $scrollContainer.scrollLeft();\r\n            if (scrollLeft !== this._scrollLeft) {\r\n                this.scrollChanged.fire({\r\n                    left: scrollLeft\r\n                }, this.name)\r\n            }\r\n        });\r\n        $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_CLASS)).addClass(this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).append($table).appendTo(this.element());\r\n        this.setAria(\"role\", \"presentation\", $scrollContainer);\r\n        return $scrollContainer\r\n    },\r\n    _updateContent: function($newTableElement) {\r\n        this.setTableElement($newTableElement);\r\n        this._wrapTableInScrollContainer($newTableElement)\r\n    },\r\n    _findContentElement: noop,\r\n    _getWidths: function($cellElements) {\r\n        var result = [];\r\n        var width;\r\n        if ($cellElements) {\r\n            iteratorUtils.each($cellElements, (function(index, item) {\r\n                width = item.offsetWidth;\r\n                if (item.getBoundingClientRect) {\r\n                    var clientRect = getBoundingRect(item);\r\n                    if (clientRect.width > width - 1) {\r\n                        width = clientRect.width\r\n                    }\r\n                }\r\n                result.push(width)\r\n            }))\r\n        }\r\n        return result\r\n    },\r\n    getColumnWidths: function($tableElement) {\r\n        var result = [];\r\n        var $rows;\r\n        var $cells;\r\n        (this.option(\"forceApplyBindings\") || noop)();\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if ($tableElement) {\r\n            $rows = $tableElement.children(\"tbody:not(.dx-header)\").children();\r\n            for (var i = 0; i < $rows.length; i++) {\r\n                var $row = $rows.eq(i);\r\n                var isRowVisible = \"none\" !== $row.get(0).style.display && !$row.hasClass(\"dx-state-invisible\");\r\n                if (!$row.is(\".\" + GROUP_ROW_CLASS) && !$row.is(\".\" + DETAIL_ROW_CLASS) && !$row.is(\".\" + ERROR_ROW_CLASS) && isRowVisible) {\r\n                    $cells = $row.children(\"td\");\r\n                    break\r\n                }\r\n            }\r\n            result = this._getWidths($cells)\r\n        }\r\n        return result\r\n    },\r\n    getVisibleColumnIndex: function(columnIndex, rowIndex) {\r\n        return columnIndex\r\n    },\r\n    setColumnWidths: function(_ref) {\r\n        var {\r\n            widths: widths,\r\n            $tableElement: $tableElement,\r\n            columns: columns,\r\n            fixed: fixed\r\n        } = _ref;\r\n        var $cols;\r\n        var width;\r\n        var minWidth;\r\n        var columnIndex;\r\n        var columnAutoWidth = this.option(\"columnAutoWidth\");\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if ($tableElement && $tableElement.length && widths) {\r\n            columnIndex = 0;\r\n            $cols = $tableElement.children(\"colgroup\").children(\"col\");\r\n            setWidth($cols, \"auto\");\r\n            columns = columns || this.getColumns(null, $tableElement);\r\n            for (var i = 0; i < columns.length; i++) {\r\n                if (columnAutoWidth && !fixed) {\r\n                    width = columns[i].width;\r\n                    if (width && !columns[i].command) {\r\n                        width = columns[i].visibleWidth || width;\r\n                        width = getWidthStyle(width);\r\n                        minWidth = getWidthStyle(columns[i].minWidth || width);\r\n                        var $rows = $rows || $tableElement.children().children(\".dx-row\").not(\".\" + DETAIL_ROW_CLASS);\r\n                        for (var rowIndex = 0; rowIndex < $rows.length; rowIndex++) {\r\n                            var row = $rows[rowIndex];\r\n                            var cell = void 0;\r\n                            var visibleIndex = this.getVisibleColumnIndex(i, rowIndex);\r\n                            if (row.classList.contains(GROUP_ROW_CLASS)) {\r\n                                if (1 !== visibleIndex) {\r\n                                    cell = row.querySelector(\"td[aria-colindex='\".concat(visibleIndex + 1, \"']\"))\r\n                                }\r\n                            } else {\r\n                                cell = row.cells[visibleIndex]\r\n                            }\r\n                            if (cell) {\r\n                                setCellWidth(cell, columns[i], width);\r\n                                cell.style.minWidth = minWidth\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (columns[i].colspan) {\r\n                    columnIndex += columns[i].colspan;\r\n                    continue\r\n                }\r\n                width = widths[columnIndex];\r\n                if (\"adaptiveHidden\" === width) {\r\n                    width = HIDDEN_COLUMNS_WIDTH\r\n                }\r\n                if (\"number\" === typeof width) {\r\n                    width = width.toFixed(3) + \"px\"\r\n                }\r\n                setWidth($cols.eq(columnIndex), isDefined(width) ? width : \"auto\");\r\n                columnIndex++\r\n            }\r\n        }\r\n    },\r\n    getCellElements: function(rowIndex) {\r\n        return this._getCellElementsCore(rowIndex)\r\n    },\r\n    _getCellElementsCore: function(rowIndex) {\r\n        var $row = this._getRowElements().eq(rowIndex);\r\n        return $row.children()\r\n    },\r\n    _getCellElement: function(rowIndex, columnIdentifier) {\r\n        var $cell;\r\n        var $cells = this.getCellElements(rowIndex);\r\n        var columnVisibleIndex = this._getVisibleColumnIndex($cells, rowIndex, columnIdentifier);\r\n        if ($cells.length && columnVisibleIndex >= 0) {\r\n            $cell = $cells.eq(columnVisibleIndex)\r\n        }\r\n        if ($cell && $cell.length) {\r\n            return $cell\r\n        }\r\n    },\r\n    _getRowElement: function(rowIndex) {\r\n        var that = this;\r\n        var $rowElement = $();\r\n        var $tableElements = that.getTableElements();\r\n        iteratorUtils.each($tableElements, (function(_, tableElement) {\r\n            $rowElement = $rowElement.add(that._getRowElements($(tableElement)).eq(rowIndex))\r\n        }));\r\n        if ($rowElement.length) {\r\n            return $rowElement\r\n        }\r\n    },\r\n    getCellElement: function(rowIndex, columnIdentifier) {\r\n        return getPublicElement(this._getCellElement(rowIndex, columnIdentifier))\r\n    },\r\n    getRowElement: function(rowIndex) {\r\n        var $rows = this._getRowElement(rowIndex);\r\n        var elements = [];\r\n        if ($rows && !getPublicElement($rows).get) {\r\n            for (var i = 0; i < $rows.length; i++) {\r\n                elements.push($rows[i])\r\n            }\r\n        } else {\r\n            elements = $rows\r\n        }\r\n        return elements\r\n    },\r\n    _getVisibleColumnIndex: function($cells, rowIndex, columnIdentifier) {\r\n        if (isString(columnIdentifier)) {\r\n            var columnIndex = this._columnsController.columnOption(columnIdentifier, \"index\");\r\n            return this._columnsController.getVisibleIndex(columnIndex)\r\n        }\r\n        return columnIdentifier\r\n    },\r\n    getColumnElements: function() {},\r\n    getColumns: function(rowIndex) {\r\n        return this._columnsController.getVisibleColumns(rowIndex)\r\n    },\r\n    getCell: function(cellPosition, rows) {\r\n        var $rows = rows || this._getRowElements();\r\n        var $cells;\r\n        if ($rows.length > 0 && cellPosition.rowIndex >= 0) {\r\n            if (\"virtual\" !== this.option(\"scrolling.mode\") && \"virtual\" !== this.option(\"scrolling.rowRenderingMode\")) {\r\n                cellPosition.rowIndex = cellPosition.rowIndex < $rows.length ? cellPosition.rowIndex : $rows.length - 1\r\n            }\r\n            $cells = this.getCellElements(cellPosition.rowIndex);\r\n            if ($cells && $cells.length > 0) {\r\n                return $cells.eq($cells.length > cellPosition.columnIndex ? cellPosition.columnIndex : $cells.length - 1)\r\n            }\r\n        }\r\n    },\r\n    getRowsCount: function() {\r\n        var tableElement = this.getTableElement();\r\n        if (tableElement && 1 === tableElement.length) {\r\n            return tableElement[0].rows.length\r\n        }\r\n        return 0\r\n    },\r\n    _getRowElementsCore: function(tableElement) {\r\n        tableElement = tableElement || this.getTableElement();\r\n        if (tableElement) {\r\n            var hasRowTemplate = this.option().rowTemplate || this.option(\"dataRowTemplate\");\r\n            var tBodies = hasRowTemplate && tableElement.find(\"> tbody.\" + ROW_CLASS);\r\n            return tBodies && tBodies.length ? tBodies : tableElement.find(\"> tbody > .\" + ROW_CLASS + \", > .\" + ROW_CLASS)\r\n        }\r\n        return $()\r\n    },\r\n    _getRowElements: function(tableElement) {\r\n        return this._getRowElementsCore(tableElement)\r\n    },\r\n    getRowIndex: function($row) {\r\n        return this._getRowElements().index($row)\r\n    },\r\n    getBoundingRect: function() {},\r\n    getName: function() {},\r\n    setScrollerSpacing: function(width) {\r\n        var $element = this.element();\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        $element && $element.css({\r\n            paddingLeft: rtlEnabled ? width : \"\",\r\n            paddingRight: !rtlEnabled ? width : \"\"\r\n        })\r\n    },\r\n    isScrollbarVisible: function(isHorizontal) {\r\n        var $element = this.element();\r\n        var $tableElement = this._tableElement;\r\n        if ($element && $tableElement) {\r\n            return isHorizontal ? getOuterWidth($tableElement) - getWidth($element) > 0 : getOuterHeight($tableElement) - getHeight($element) > 0\r\n        }\r\n        return false\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/shared/accessibility.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nvar FOCUS_STATE_CLASS = \"dx-state-focused\";\r\nvar FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FOCUSED_ROW_SELECTOR = \".dx-row-focused\";\r\nvar GRID_ROW_SELECTOR = \".dx-datagrid-rowsview .dx-row\";\r\nvar GRID_CELL_SELECTOR = \"\".concat(GRID_ROW_SELECTOR, \" > td\");\r\nvar TREELIST_ROW_SELECTOR = \".dx-treelist-rowsview .dx-row\";\r\nvar TREELIST_CELL_SELECTOR = \"\".concat(TREELIST_ROW_SELECTOR, \" > td\");\r\nvar viewItemSelectorMap = {\r\n    groupPanel: [\".dx-datagrid-group-panel .dx-group-panel-item[tabindex]\"],\r\n    columnHeaders: [\".dx-datagrid-headers .dx-header-row > td.dx-datagrid-action\", \".dx-treelist-headers .dx-header-row > td.dx-treelist-action\"],\r\n    filterRow: [\".dx-datagrid-headers .dx-datagrid-filter-row .dx-editor-cell .dx-texteditor-input\", \".dx-treelist-headers .dx-treelist-filter-row .dx-editor-cell .dx-texteditor-input\"],\r\n    rowsView: [\"\".concat(FOCUSED_ROW_SELECTOR), \"\".concat(GRID_ROW_SELECTOR, \"[tabindex]\"), \"\".concat(GRID_CELL_SELECTOR, \"[tabindex]\"), \"\".concat(GRID_CELL_SELECTOR), \"\".concat(TREELIST_ROW_SELECTOR, \"[tabindex]\"), \"\".concat(TREELIST_CELL_SELECTOR, \"[tabindex]\"), \"\".concat(TREELIST_CELL_SELECTOR)],\r\n    footer: [\".dx-datagrid-total-footer .dx-datagrid-summary-item\", \".dx-treelist-total-footer .dx-treelist-summary-item\"],\r\n    filterPanel: [\".dx-datagrid-filter-panel .dx-icon-filter\", \".dx-treelist-filter-panel .dx-icon-filter\"],\r\n    pager: [\".dx-datagrid-pager [tabindex]\", \".dx-treelist-pager [tabindex]\"]\r\n};\r\nvar isMouseDown = false;\r\nvar isHiddenFocusing = false;\r\nvar focusedElementInfo = null;\r\n\r\nfunction processKeyDown(viewName, instance, event, action, $mainElement, executeKeyDown) {\r\n    var isHandled = fireKeyDownEvent(instance, event.originalEvent, executeKeyDown);\r\n    if (isHandled) {\r\n        return\r\n    }\r\n    var keyName = normalizeKeyName(event);\r\n    if (\"enter\" === keyName || \"space\" === keyName) {\r\n        saveFocusedElementInfo(event.target, instance);\r\n        action && action({\r\n            event: event\r\n        })\r\n    } else if (\"tab\" === keyName) {\r\n        $mainElement.addClass(FOCUS_STATE_CLASS)\r\n    } else {\r\n        selectView(viewName, instance, event)\r\n    }\r\n}\r\n\r\nfunction saveFocusedElementInfo(target, instance) {\r\n    var $target = $(target);\r\n    var ariaLabel = $target.attr(\"aria-label\");\r\n    var $activeElements = getActiveAccessibleElements(ariaLabel, instance.element());\r\n    var targetIndex = $activeElements.index($target);\r\n    focusedElementInfo = extend({}, {\r\n        ariaLabel: ariaLabel,\r\n        index: targetIndex\r\n    }, {\r\n        viewInstance: instance\r\n    })\r\n}\r\n\r\nfunction getActiveAccessibleElements(ariaLabel, viewElement) {\r\n    var $viewElement = $(viewElement);\r\n    var $activeElements;\r\n    if (ariaLabel) {\r\n        $activeElements = $viewElement.find('[aria-label=\"'.concat(ariaLabel, '\"][tabindex]'))\r\n    } else {\r\n        $activeElements = $viewElement.find(\"[tabindex]\")\r\n    }\r\n    return $activeElements\r\n}\r\n\r\nfunction findFocusedViewElement(viewSelectors) {\r\n    for (var index in viewSelectors) {\r\n        var selector = viewSelectors[index];\r\n        var $focusViewElement = $(selector).first();\r\n        if ($focusViewElement.length) {\r\n            return $focusViewElement\r\n        }\r\n    }\r\n}\r\n\r\nfunction fireKeyDownEvent(instance, event, executeAction) {\r\n    var args = {\r\n        event: event,\r\n        handled: false\r\n    };\r\n    if (executeAction) {\r\n        executeAction(args)\r\n    } else {\r\n        instance._createActionByOption(\"onKeyDown\")(args)\r\n    }\r\n    return args.handled\r\n}\r\n\r\nfunction onDocumentVisibilityChange() {\r\n    isHiddenFocusing = \"visible\" === domAdapter.getDocument().visibilityState\r\n}\r\nexport function subscribeVisibilityChange() {\r\n    eventsEngine.on(domAdapter.getDocument(), \"visibilitychange\", onDocumentVisibilityChange)\r\n}\r\nexport function unsubscribeVisibilityChange() {\r\n    eventsEngine.off(domAdapter.getDocument(), \"visibilitychange\", onDocumentVisibilityChange)\r\n}\r\nexport function hiddenFocus(element) {\r\n    isHiddenFocusing = true;\r\n    element.focus();\r\n    isHiddenFocusing = false\r\n}\r\nexport function registerKeyboardAction(viewName, instance, $element, selector, action, executeKeyDown) {\r\n    if (instance.option(\"useLegacyKeyboardNavigation\")) {\r\n        return noop\r\n    }\r\n    var getMainElement = () => $(instance.element());\r\n    var keyDownHandler = e => processKeyDown(viewName, instance, e, action, getMainElement(), executeKeyDown);\r\n    var mouseDownHandler = () => {\r\n        isMouseDown = true;\r\n        getMainElement().removeClass(FOCUS_STATE_CLASS)\r\n    };\r\n    var focusinHandler = () => {\r\n        var needShowOverlay = !isMouseDown && !isHiddenFocusing;\r\n        if (needShowOverlay) {\r\n            getMainElement().addClass(FOCUS_STATE_CLASS)\r\n        }\r\n        isMouseDown = false\r\n    };\r\n    eventsEngine.on($element, \"keydown\", selector, keyDownHandler);\r\n    eventsEngine.on($element, \"mousedown\", selector, mouseDownHandler);\r\n    eventsEngine.on($element, \"focusin\", selector, focusinHandler);\r\n    return () => {\r\n        eventsEngine.off($element, \"keydown\", selector, keyDownHandler);\r\n        eventsEngine.off($element, \"mousedown\", selector, mouseDownHandler);\r\n        eventsEngine.off($element, \"focusin\", selector, focusinHandler)\r\n    }\r\n}\r\nexport function restoreFocus(instance) {\r\n    if (!instance.option(\"useLegacyKeyboardNavigation\") && focusedElementInfo) {\r\n        var viewInstance = focusedElementInfo.viewInstance;\r\n        if (viewInstance) {\r\n            var $activeElements = getActiveAccessibleElements(focusedElementInfo.ariaLabel, viewInstance.element());\r\n            var $targetElement = $activeElements.eq(focusedElementInfo.index);\r\n            focusedElementInfo = null;\r\n            eventsEngine.trigger($targetElement, \"focus\")\r\n        }\r\n    }\r\n}\r\nexport function selectView(viewName, instance, event) {\r\n    var keyName = normalizeKeyName(event);\r\n    if (event.ctrlKey && (\"upArrow\" === keyName || \"downArrow\" === keyName)) {\r\n        var viewNames = Object.keys(viewItemSelectorMap);\r\n        var viewItemIndex = viewNames.indexOf(viewName);\r\n        while (viewItemIndex >= 0 && viewItemIndex < viewNames.length) {\r\n            viewItemIndex = \"upArrow\" === keyName ? --viewItemIndex : ++viewItemIndex;\r\n            var _viewName = viewNames[viewItemIndex];\r\n            var viewSelectors = viewItemSelectorMap[_viewName];\r\n            var $focusViewElement = findFocusedViewElement(viewSelectors);\r\n            if ($focusViewElement && $focusViewElement.length) {\r\n                $focusViewElement.attr(\"tabindex\", instance.option(\"tabindex\") || 0);\r\n                eventsEngine.trigger($focusViewElement, \"focus\");\r\n                $focusViewElement.removeClass(FOCUS_DISABLED_CLASS);\r\n                break\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function setTabIndex(instance, $element) {\r\n    if (!instance.option(\"useLegacyKeyboardnavigation\")) {\r\n        $element.attr(\"tabindex\", instance.option(\"tabindex\") || 0)\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.accessibility.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport * as accessibility from \"../../ui/shared/accessibility\";\r\nexport var registerKeyboardAction = function(viewName, instance, $element, selector, action) {\r\n    var keyboardController = instance.getController(\"keyboardNavigation\");\r\n    if (instance.option(\"useLegacyKeyboardNavigation\") || keyboardController && !keyboardController.isKeyboardEnabled()) {\r\n        return\r\n    }\r\n    instance.createAction(\"onKeyDown\");\r\n    accessibility.registerKeyboardAction(viewName, instance, $element, selector, action, args => {\r\n        instance.executeAction(\"onKeyDown\", args)\r\n    })\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_headers.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    ColumnsView\r\n} from \"./ui.grid_core.columns_view\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    registerKeyboardAction\r\n} from \"./ui.grid_core.accessibility\";\r\nvar CELL_CONTENT_CLASS = \"text-content\";\r\nvar HEADERS_CLASS = \"headers\";\r\nvar NOWRAP_CLASS = \"nowrap\";\r\nvar ROW_CLASS_SELECTOR = \".dx-row\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar COLUMN_LINES_CLASS = \"dx-column-lines\";\r\nvar CONTEXT_MENU_SORT_ASC_ICON = \"context-menu-sort-asc\";\r\nvar CONTEXT_MENU_SORT_DESC_ICON = \"context-menu-sort-desc\";\r\nvar CONTEXT_MENU_SORT_NONE_ICON = \"context-menu-sort-none\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar VISIBILITY_HIDDEN_CLASS = \"dx-visibility-hidden\";\r\nvar TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX = \"dx-text-content-alignment-\";\r\nvar SORT_INDICATOR_CLASS = \"dx-sort-indicator\";\r\nvar SORT_INDEX_INDICATOR_CLASS = \"dx-sort-index-indicator\";\r\nvar HEADER_FILTER_CLASS_SELECTOR = \".dx-header-filter\";\r\nvar HEADER_FILTER_INDICATOR_CLASS = \"dx-header-filter-indicator\";\r\nvar MULTI_ROW_HEADER_CLASS = \"dx-header-multi-row\";\r\nexport var columnHeadersModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            showColumnHeaders: true,\r\n            cellHintEnabled: true\r\n        }\r\n    },\r\n    views: {\r\n        columnHeadersView: ColumnsView.inherit(function() {\r\n            var createCellContent = function(that, $cell, options) {\r\n                var $cellContent = $(\"<div>\").addClass(that.addWidgetPrefix(CELL_CONTENT_CLASS));\r\n                that.setAria(\"role\", \"presentation\", $cellContent);\r\n                addCssClassesToCellContent(that, $cell, options.column, $cellContent);\r\n                var showColumnLines = that.option(\"showColumnLines\");\r\n                var contentAlignment = that.getController(\"columns\").getHeaderContentAlignment(options.column.alignment);\r\n                return $cellContent[showColumnLines || \"right\" === contentAlignment ? \"appendTo\" : \"prependTo\"]($cell)\r\n            };\r\n\r\n            function addCssClassesToCellContent(that, $cell, column, $cellContent) {\r\n                var $indicatorElements = that._getIndicatorElements($cell, true);\r\n                var $visibleIndicatorElements = that._getIndicatorElements($cell);\r\n                var indicatorCount = $indicatorElements && $indicatorElements.length;\r\n                var columnAlignment = that._getColumnAlignment(column.alignment);\r\n                var sortIndicatorClassName = \".\".concat(that._getIndicatorClassName(\"sort\"));\r\n                var sortIndexIndicatorClassName = \".\".concat(that._getIndicatorClassName(\"sortIndex\"));\r\n                var $sortIndicator = $visibleIndicatorElements.filter(sortIndicatorClassName);\r\n                var $sortIndexIndicator = $visibleIndicatorElements.children().filter(sortIndexIndicatorClassName);\r\n                $cellContent = $cellContent || $cell.children(\".\" + that.addWidgetPrefix(CELL_CONTENT_CLASS));\r\n                $cellContent.toggleClass(TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX + columnAlignment, indicatorCount > 0).toggleClass(TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX + (\"left\" === columnAlignment ? \"right\" : \"left\"), indicatorCount > 0 && \"center\" === column.alignment).toggleClass(SORT_INDICATOR_CLASS, !!$sortIndicator.length).toggleClass(SORT_INDEX_INDICATOR_CLASS, !!$sortIndexIndicator.length).toggleClass(HEADER_FILTER_INDICATOR_CLASS, !!$visibleIndicatorElements.filter(\".\" + that._getIndicatorClassName(\"headerFilter\")).length)\r\n            }\r\n            return {\r\n                _createTable: function() {\r\n                    var $table = this.callBase.apply(this, arguments);\r\n                    eventsEngine.on($table, \"mousedown selectstart\", this.createAction((function(e) {\r\n                        var event = e.event;\r\n                        if (event.shiftKey) {\r\n                            event.preventDefault()\r\n                        }\r\n                    })));\r\n                    return $table\r\n                },\r\n                _isLegacyKeyboardNavigation() {\r\n                    return this.option(\"useLegacyKeyboardNavigation\")\r\n                },\r\n                _getDefaultTemplate: function(column) {\r\n                    var that = this;\r\n                    return function($container, options) {\r\n                        var $content = column.command ? $container : createCellContent(that, $container, options);\r\n                        var caption = \"expand\" !== column.command && column.caption;\r\n                        if (caption) {\r\n                            $content.text(caption)\r\n                        } else if (column.command) {\r\n                            $container.html(\"&nbsp;\")\r\n                        }\r\n                    }\r\n                },\r\n                _getHeaderTemplate: function(column) {\r\n                    return column.headerCellTemplate || {\r\n                        allowRenderToDetachedContainer: true,\r\n                        render: this._getDefaultTemplate(column)\r\n                    }\r\n                },\r\n                _processTemplate: function(template, options) {\r\n                    var that = this;\r\n                    var resultTemplate;\r\n                    var column = options.column;\r\n                    var renderingTemplate = that.callBase(template);\r\n                    if (\"header\" === options.rowType && renderingTemplate && column.headerCellTemplate && !column.command) {\r\n                        resultTemplate = {\r\n                            render: function(options) {\r\n                                var $content = createCellContent(that, options.container, options.model);\r\n                                renderingTemplate.render(extend({}, options, {\r\n                                    container: $content\r\n                                }))\r\n                            }\r\n                        }\r\n                    } else {\r\n                        resultTemplate = renderingTemplate\r\n                    }\r\n                    return resultTemplate\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    if (\"refresh\" !== e.changeType) {\r\n                        return\r\n                    }\r\n                    if (this._isGroupingChanged || this._requireReady) {\r\n                        this._isGroupingChanged = false;\r\n                        this.render()\r\n                    }\r\n                },\r\n                _renderCell: function($row, options) {\r\n                    var $cell = this.callBase($row, options);\r\n                    if (\"header\" === options.row.rowType) {\r\n                        $cell.addClass(CELL_FOCUS_DISABLED_CLASS);\r\n                        if (!this._isLegacyKeyboardNavigation()) {\r\n                            if (options.column && !options.column.type) {\r\n                                $cell.attr(\"tabindex\", this.option(\"tabindex\") || 0)\r\n                            }\r\n                        }\r\n                    }\r\n                    return $cell\r\n                },\r\n                _setCellAriaAttributes: function($cell, cellOptions) {\r\n                    this.callBase($cell, cellOptions);\r\n                    if (\"header\" === cellOptions.rowType) {\r\n                        this.setAria(\"role\", \"columnheader\", $cell);\r\n                        if (cellOptions.column && !cellOptions.column.command && !cellOptions.column.isBand) {\r\n                            $cell.attr(\"id\", cellOptions.column.headerId);\r\n                            this.setAria(\"label\", messageLocalization.format(\"dxDataGrid-ariaColumn\") + \" \" + cellOptions.column.caption, $cell)\r\n                        }\r\n                    }\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    $row.toggleClass(COLUMN_LINES_CLASS, this.option(\"showColumnLines\"));\r\n                    if (\"header\" === row.rowType) {\r\n                        $row.addClass(HEADER_ROW_CLASS);\r\n                        if (!this._isLegacyKeyboardNavigation()) {\r\n                            registerKeyboardAction(\"columnHeaders\", this, $row, \"td\", this._handleActionKeyDown.bind(this))\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _handleActionKeyDown: function(args) {\r\n                    var event = args.event;\r\n                    var $target = $(event.target);\r\n                    this._lastActionElement = event.target;\r\n                    if ($target.is(HEADER_FILTER_CLASS_SELECTOR)) {\r\n                        var headerFilterController = this.getController(\"headerFilter\");\r\n                        var $column = $target.closest(\"td\");\r\n                        var columnIndex = this.getColumnIndexByElement($column);\r\n                        if (columnIndex >= 0) {\r\n                            headerFilterController.showHeaderFilterMenu(columnIndex, false)\r\n                        }\r\n                    } else {\r\n                        var $row = $target.closest(ROW_CLASS_SELECTOR);\r\n                        this._processHeaderAction(event, $row)\r\n                    }\r\n                    event.preventDefault()\r\n                },\r\n                _renderCore: function() {\r\n                    var that = this;\r\n                    var $container = that.element();\r\n                    if (that._tableElement && !that._dataController.isLoaded() && !that._hasRowElements) {\r\n                        return\r\n                    }\r\n                    $container.addClass(that.addWidgetPrefix(HEADERS_CLASS)).toggleClass(that.addWidgetPrefix(NOWRAP_CLASS), !that.option(\"wordWrapEnabled\")).empty();\r\n                    that.setAria(\"role\", \"presentation\", $container);\r\n                    that._updateContent(that._renderTable());\r\n                    if (that.getRowCount() > 1) {\r\n                        $container.addClass(MULTI_ROW_HEADER_CLASS)\r\n                    }\r\n                    that.callBase.apply(that, arguments)\r\n                },\r\n                _renderRows: function() {\r\n                    var that = this;\r\n                    if (that._dataController.isLoaded() || that._hasRowElements) {\r\n                        that.callBase.apply(that, arguments);\r\n                        that._hasRowElements = true\r\n                    }\r\n                },\r\n                _getRowVisibleColumns: function(rowIndex) {\r\n                    return this._columnsController.getVisibleColumns(rowIndex)\r\n                },\r\n                _renderRow: function($table, options) {\r\n                    options.columns = this._getRowVisibleColumns(options.row.rowIndex);\r\n                    this.callBase($table, options)\r\n                },\r\n                _createCell: function(options) {\r\n                    var column = options.column;\r\n                    var $cellElement = this.callBase.apply(this, arguments);\r\n                    column.rowspan > 1 && \"header\" === options.rowType && $cellElement.attr(\"rowSpan\", column.rowspan);\r\n                    return $cellElement\r\n                },\r\n                _getRows: function() {\r\n                    var result = [];\r\n                    var rowCount = this.getRowCount();\r\n                    if (this.option(\"showColumnHeaders\")) {\r\n                        for (var i = 0; i < rowCount; i++) {\r\n                            result.push({\r\n                                rowType: \"header\",\r\n                                rowIndex: i\r\n                            })\r\n                        }\r\n                    }\r\n                    return result\r\n                },\r\n                _getCellTemplate: function(options) {\r\n                    if (\"header\" === options.rowType) {\r\n                        return this._getHeaderTemplate(options.column)\r\n                    }\r\n                },\r\n                _columnOptionChanged: function(e) {\r\n                    var changeTypes = e.changeTypes;\r\n                    var optionNames = e.optionNames;\r\n                    if (changeTypes.grouping || changeTypes.groupExpanding) {\r\n                        if (changeTypes.grouping) {\r\n                            this._isGroupingChanged = true\r\n                        }\r\n                        return\r\n                    }\r\n                    this.callBase(e);\r\n                    if (optionNames.width || optionNames.visible) {\r\n                        this.resizeCompleted.fire()\r\n                    }\r\n                },\r\n                _isElementVisible: function(elementOptions) {\r\n                    return elementOptions && elementOptions.visible\r\n                },\r\n                _alignCaptionByCenter: function($cell) {\r\n                    var $indicatorsContainer = this._getIndicatorContainer($cell, true);\r\n                    if ($indicatorsContainer && $indicatorsContainer.length) {\r\n                        $indicatorsContainer.filter(\".\" + VISIBILITY_HIDDEN_CLASS).remove();\r\n                        $indicatorsContainer = this._getIndicatorContainer($cell);\r\n                        $indicatorsContainer.clone().addClass(VISIBILITY_HIDDEN_CLASS).css(\"float\", \"\").insertBefore($cell.children(\".\" + this.addWidgetPrefix(CELL_CONTENT_CLASS)))\r\n                    }\r\n                },\r\n                _updateCell: function($cell, options) {\r\n                    if (\"header\" === options.rowType && \"center\" === options.column.alignment) {\r\n                        this._alignCaptionByCenter($cell)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _updateIndicator: function($cell, column, indicatorName) {\r\n                    var $indicatorElement = this.callBase.apply(this, arguments);\r\n                    if (\"center\" === column.alignment) {\r\n                        this._alignCaptionByCenter($cell)\r\n                    }\r\n                    addCssClassesToCellContent(this, $cell, column);\r\n                    return $indicatorElement\r\n                },\r\n                _getIndicatorContainer: function($cell, returnAll) {\r\n                    var $indicatorsContainer = this.callBase($cell);\r\n                    return returnAll ? $indicatorsContainer : $indicatorsContainer.filter(\":not(.\" + VISIBILITY_HIDDEN_CLASS + \")\")\r\n                },\r\n                _isSortableElement: function() {\r\n                    return true\r\n                },\r\n                getHeadersRowHeight: function() {\r\n                    var $tableElement = this.getTableElement();\r\n                    var $headerRows = $tableElement && $tableElement.find(\".\" + HEADER_ROW_CLASS);\r\n                    return $headerRows && $headerRows.toArray().reduce((function(sum, headerRow) {\r\n                        return sum + getHeight(headerRow)\r\n                    }), 0) || 0\r\n                },\r\n                getHeaderElement: function(index) {\r\n                    var columnElements = this.getColumnElements();\r\n                    return columnElements && columnElements.eq(index)\r\n                },\r\n                getColumnElements: function(index, bandColumnIndex) {\r\n                    var that = this;\r\n                    var $cellElement;\r\n                    var columnsController = that._columnsController;\r\n                    var rowCount = that.getRowCount();\r\n                    if (that.option(\"showColumnHeaders\")) {\r\n                        if (rowCount > 1 && (!isDefined(index) || isDefined(bandColumnIndex))) {\r\n                            var result = [];\r\n                            var visibleColumns = isDefined(bandColumnIndex) ? columnsController.getChildrenByBandColumn(bandColumnIndex, true) : columnsController.getVisibleColumns();\r\n                            each(visibleColumns, (function(_, column) {\r\n                                var rowIndex = isDefined(index) ? index : columnsController.getRowIndex(column.index);\r\n                                $cellElement = that._getCellElement(rowIndex, columnsController.getVisibleIndex(column.index, rowIndex));\r\n                                $cellElement && result.push($cellElement.get(0))\r\n                            }));\r\n                            return $(result)\r\n                        } else if (!index || index < rowCount) {\r\n                            return that.getCellElements(index || 0)\r\n                        }\r\n                    }\r\n                },\r\n                getColumnIndexByElement: function($cell) {\r\n                    var cellIndex = this.getCellIndex($cell);\r\n                    var $row = $cell.closest(\".dx-row\");\r\n                    var rowIndex = $row[0].rowIndex;\r\n                    var column = this.getColumns(rowIndex)[cellIndex];\r\n                    return column ? column.index : -1\r\n                },\r\n                getVisibleColumnIndex: function(columnIndex, rowIndex) {\r\n                    var column = this.getColumns()[columnIndex];\r\n                    return column ? this._columnsController.getVisibleIndex(column.index, rowIndex) : -1\r\n                },\r\n                getColumnWidths: function() {\r\n                    var $columnElements = this.getColumnElements();\r\n                    if ($columnElements && $columnElements.length) {\r\n                        return this._getWidths($columnElements)\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                allowDragging: function(column, sourceLocation, draggingPanels) {\r\n                    var i;\r\n                    var draggableColumnCount = 0;\r\n                    var rowIndex = column && this._columnsController.getRowIndex(column.index);\r\n                    var columns = this.getColumns(0 === rowIndex ? 0 : null);\r\n                    var canHideColumn = (null === column || void 0 === column ? void 0 : column.allowHiding) && columns.length > 1;\r\n                    var allowDrag = function(column) {\r\n                        return column.allowReordering || column.allowGrouping || column.allowHiding\r\n                    };\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        if (allowDrag(columns[i])) {\r\n                            draggableColumnCount++\r\n                        }\r\n                    }\r\n                    if (draggableColumnCount <= 1 && !canHideColumn) {\r\n                        return false\r\n                    } else if (!draggingPanels) {\r\n                        return (this.option(\"allowColumnReordering\") || this._columnsController.isColumnOptionUsed(\"allowReordering\")) && column && column.allowReordering\r\n                    }\r\n                    for (i = 0; i < draggingPanels.length; i++) {\r\n                        var draggingPanel = draggingPanels[i];\r\n                        if (draggingPanel && draggingPanel.allowDragging(column, sourceLocation)) {\r\n                            return true\r\n                        }\r\n                    }\r\n                    return false\r\n                },\r\n                getBoundingRect: function() {\r\n                    var $columnElements = this.getColumnElements();\r\n                    if ($columnElements && $columnElements.length) {\r\n                        var offset = this.getTableElement().offset();\r\n                        return {\r\n                            top: offset.top\r\n                        }\r\n                    }\r\n                    return null\r\n                },\r\n                getName: function() {\r\n                    return \"headers\"\r\n                },\r\n                getColumnCount: function() {\r\n                    var $columnElements = this.getColumnElements();\r\n                    return $columnElements ? $columnElements.length : 0\r\n                },\r\n                isVisible: function() {\r\n                    return this.option(\"showColumnHeaders\")\r\n                },\r\n                optionChanged: function(args) {\r\n                    switch (args.name) {\r\n                        case \"showColumnHeaders\":\r\n                        case \"wordWrapEnabled\":\r\n                        case \"showColumnLines\":\r\n                            this._invalidate(true, true);\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                getHeight: function() {\r\n                    return this.getElementHeight()\r\n                },\r\n                getContextMenuItems: function(options) {\r\n                    var that = this;\r\n                    var column = options.column;\r\n                    if (options.row && (\"header\" === options.row.rowType || \"detailAdaptive\" === options.row.rowType)) {\r\n                        var sortingOptions = that.option(\"sorting\");\r\n                        if (sortingOptions && \"none\" !== sortingOptions.mode && column && column.allowSorting) {\r\n                            var onItemClick = function(params) {\r\n                                setTimeout((function() {\r\n                                    that._columnsController.changeSortOrder(column.index, params.itemData.value)\r\n                                }))\r\n                            };\r\n                            return [{\r\n                                text: sortingOptions.ascendingText,\r\n                                value: \"asc\",\r\n                                disabled: \"asc\" === column.sortOrder,\r\n                                icon: CONTEXT_MENU_SORT_ASC_ICON,\r\n                                onItemClick: onItemClick\r\n                            }, {\r\n                                text: sortingOptions.descendingText,\r\n                                value: \"desc\",\r\n                                disabled: \"desc\" === column.sortOrder,\r\n                                icon: CONTEXT_MENU_SORT_DESC_ICON,\r\n                                onItemClick: onItemClick\r\n                            }, {\r\n                                text: sortingOptions.clearText,\r\n                                value: \"none\",\r\n                                disabled: !column.sortOrder,\r\n                                icon: CONTEXT_MENU_SORT_NONE_ICON,\r\n                                onItemClick: onItemClick\r\n                            }]\r\n                        }\r\n                    }\r\n                },\r\n                getRowCount: function() {\r\n                    return this._columnsController && this._columnsController.getRowCount()\r\n                },\r\n                setRowsOpacity: function(columnIndex, value, rowIndex) {\r\n                    var that = this;\r\n                    var i;\r\n                    var columnElements;\r\n                    var rowCount = that.getRowCount();\r\n                    var columns = that._columnsController.getColumns();\r\n                    var column = columns && columns[columnIndex];\r\n                    var columnID = column && column.isBand && column.index;\r\n                    var setColumnOpacity = function(index, column) {\r\n                        if (column.ownerBand === columnID) {\r\n                            columnElements.eq(index).css({\r\n                                opacity: value\r\n                            });\r\n                            if (column.isBand) {\r\n                                that.setRowsOpacity(column.index, value, i + 1)\r\n                            }\r\n                        }\r\n                    };\r\n                    if (isDefined(columnID)) {\r\n                        rowIndex = rowIndex || 0;\r\n                        for (i = rowIndex; i < rowCount; i++) {\r\n                            columnElements = that.getCellElements(i);\r\n                            each(that.getColumns(i), setColumnOpacity)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.column_headers.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnHeadersModule\r\n} from \"../grid_core/ui.grid_core.column_headers\";\r\nexport var ColumnHeadersView = columnHeadersModule.views.columnHeadersView;\r\ngridCore.registerModule(\"columnHeaders\", columnHeadersModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_controller.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../../core/renderer\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\r\nimport {\r\n    compileGetter,\r\n    compileSetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    isDefined,\r\n    isString,\r\n    isNumeric,\r\n    isFunction,\r\n    isObject,\r\n    isPlainObject,\r\n    type\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    inArray,\r\n    normalizeIndexes\r\n} from \"../../core/utils/array\";\r\nimport config from \"../../core/config\";\r\nimport {\r\n    orderEach,\r\n    deepExtendArraySafe\r\n} from \"../../core/utils/object\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    captionize\r\n} from \"../../core/utils/inflector\";\r\nimport dateSerialization from \"../../core/utils/date_serialization\";\r\nimport numberLocalization from \"../../localization/number\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport Store from \"../../data/abstract_store\";\r\nimport {\r\n    DataSource\r\n} from \"../../data/data_source/data_source\";\r\nimport {\r\n    normalizeDataSourceOptions\r\n} from \"../../data/data_source/utils\";\r\nimport filterUtils from \"../shared/filtering\";\r\nvar USER_STATE_FIELD_NAMES_15_1 = [\"filterValues\", \"filterType\", \"fixed\", \"fixedPosition\"];\r\nvar USER_STATE_FIELD_NAMES = [\"visibleIndex\", \"dataField\", \"name\", \"dataType\", \"width\", \"visible\", \"sortOrder\", \"lastSortOrder\", \"sortIndex\", \"groupIndex\", \"filterValue\", \"selectedFilterOperation\", \"added\"].concat(USER_STATE_FIELD_NAMES_15_1);\r\nvar IGNORE_COLUMN_OPTION_NAMES = {\r\n    visibleWidth: true,\r\n    bestFitWidth: true,\r\n    bufferedFilterValue: true\r\n};\r\nvar COMMAND_EXPAND_CLASS = \"dx-command-expand\";\r\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\r\nvar GROUP_COMMAND_COLUMN_NAME = \"groupExpand\";\r\nvar regExp = /columns\\[(\\d+)\\]\\.?/gi;\r\nvar globalColumnId = 1;\r\nexport var columnsControllerModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            commonColumnSettings: {\r\n                allowFiltering: true,\r\n                allowHiding: true,\r\n                allowSorting: true,\r\n                allowEditing: true,\r\n                encodeHtml: true,\r\n                trueText: messageLocalization.format(\"dxDataGrid-trueText\"),\r\n                falseText: messageLocalization.format(\"dxDataGrid-falseText\")\r\n            },\r\n            allowColumnReordering: false,\r\n            allowColumnResizing: false,\r\n            columnResizingMode: \"nextColumn\",\r\n            columnMinWidth: void 0,\r\n            columnWidth: void 0,\r\n            adaptColumnWidthByRatio: true,\r\n            columns: void 0,\r\n            regenerateColumnsByVisibleItems: false,\r\n            customizeColumns: null,\r\n            dateSerializationFormat: void 0\r\n        }\r\n    },\r\n    controllers: {\r\n        columns: modules.Controller.inherit(function() {\r\n            var DEFAULT_COLUMN_OPTIONS = {\r\n                visible: true,\r\n                showInColumnChooser: true\r\n            };\r\n            var DATATYPE_OPERATIONS = {\r\n                number: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"between\"],\r\n                string: [\"contains\", \"notcontains\", \"startswith\", \"endswith\", \"=\", \"<>\"],\r\n                date: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"between\"],\r\n                datetime: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"between\"]\r\n            };\r\n            var COLUMN_INDEX_OPTIONS = {\r\n                visibleIndex: true,\r\n                groupIndex: true,\r\n                grouped: true,\r\n                sortIndex: true,\r\n                sortOrder: true\r\n            };\r\n            var setFilterOperationsAsDefaultValues = function(column) {\r\n                column.filterOperations = column.defaultFilterOperations\r\n            };\r\n            var createColumn = function(that, columnOptions, userStateColumnOptions, bandColumn) {\r\n                var commonColumnOptions = {};\r\n                if (columnOptions) {\r\n                    if (isString(columnOptions)) {\r\n                        columnOptions = {\r\n                            dataField: columnOptions\r\n                        }\r\n                    }\r\n                    that.setName(columnOptions);\r\n                    var result = {};\r\n                    if (columnOptions.command) {\r\n                        result = deepExtendArraySafe(commonColumnOptions, columnOptions)\r\n                    } else {\r\n                        commonColumnOptions = that.getCommonSettings(columnOptions);\r\n                        if (userStateColumnOptions && userStateColumnOptions.name && userStateColumnOptions.dataField) {\r\n                            columnOptions = extend({}, columnOptions, {\r\n                                dataField: userStateColumnOptions.dataField\r\n                            })\r\n                        }\r\n                        var calculatedColumnOptions = that._createCalculatedColumnOptions(columnOptions, bandColumn);\r\n                        if (!columnOptions.type) {\r\n                            result = {\r\n                                headerId: \"dx-col-\".concat(globalColumnId++)\r\n                            }\r\n                        }\r\n                        result = deepExtendArraySafe(result, DEFAULT_COLUMN_OPTIONS);\r\n                        deepExtendArraySafe(result, commonColumnOptions);\r\n                        deepExtendArraySafe(result, calculatedColumnOptions);\r\n                        deepExtendArraySafe(result, columnOptions);\r\n                        deepExtendArraySafe(result, {\r\n                            selector: null\r\n                        })\r\n                    }\r\n                    if (columnOptions.filterOperations === columnOptions.defaultFilterOperations) {\r\n                        setFilterOperationsAsDefaultValues(result)\r\n                    }\r\n                    return result\r\n                }\r\n            };\r\n            var createColumnsFromOptions = function createColumnsFromOptions(that, columnsOptions, bandColumn) {\r\n                var result = [];\r\n                if (columnsOptions) {\r\n                    each(columnsOptions, (function(index, columnOptions) {\r\n                        var userStateColumnOptions = that._columnsUserState && checkUserStateColumn(columnOptions, that._columnsUserState[index]) && that._columnsUserState[index];\r\n                        var column = createColumn(that, columnOptions, userStateColumnOptions, bandColumn);\r\n                        if (column) {\r\n                            if (bandColumn) {\r\n                                column.ownerBand = bandColumn\r\n                            }\r\n                            result.push(column);\r\n                            if (column.columns) {\r\n                                result = result.concat(createColumnsFromOptions(that, column.columns, column));\r\n                                delete column.columns;\r\n                                column.hasColumns = true\r\n                            }\r\n                        }\r\n                    }))\r\n                }\r\n                return result\r\n            };\r\n            var getParentBandColumns = function(columnIndex, columnParentByIndex) {\r\n                var result = [];\r\n                var parent = columnParentByIndex[columnIndex];\r\n                while (parent) {\r\n                    result.unshift(parent);\r\n                    columnIndex = parent.index;\r\n                    parent = columnParentByIndex[columnIndex]\r\n                }\r\n                return result\r\n            };\r\n            var _getChildrenByBandColumn = function(columnIndex, columnChildrenByIndex, recursive) {\r\n                var result = [];\r\n                var children = columnChildrenByIndex[columnIndex];\r\n                if (children) {\r\n                    for (var i = 0; i < children.length; i++) {\r\n                        var column = children[i];\r\n                        if (!isDefined(column.groupIndex) || column.showWhenGrouped) {\r\n                            result.push(column);\r\n                            if (recursive && column.isBand) {\r\n                                result = result.concat(_getChildrenByBandColumn(column.index, columnChildrenByIndex, recursive))\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return result\r\n            };\r\n            var getColumnFullPath = function(that, column) {\r\n                var result = [];\r\n                var columns;\r\n                var bandColumnsCache = that.getBandColumnsCache();\r\n                var callbackFilter = function(item) {\r\n                    return item.ownerBand === column.ownerBand\r\n                };\r\n                if (bandColumnsCache.isPlain) {\r\n                    var columnIndex = that._columns.indexOf(column);\r\n                    if (columnIndex >= 0) {\r\n                        result = [\"columns[\".concat(columnIndex, \"]\")]\r\n                    }\r\n                } else {\r\n                    columns = that._columns.filter(callbackFilter);\r\n                    while (columns.length && -1 !== columns.indexOf(column)) {\r\n                        result.unshift(\"columns[\".concat(columns.indexOf(column), \"]\"));\r\n                        column = bandColumnsCache.columnParentByIndex[column.index];\r\n                        columns = column ? that._columns.filter(callbackFilter) : []\r\n                    }\r\n                }\r\n                return result.join(\".\")\r\n            };\r\n            var calculateColspan = function calculateColspan(that, columnID) {\r\n                var colspan = 0;\r\n                var columns = that.getChildrenByBandColumn(columnID, true);\r\n                each(columns, (function(_, column) {\r\n                    if (column.isBand) {\r\n                        column.colspan = column.colspan || calculateColspan(that, column.index);\r\n                        colspan += column.colspan || 1\r\n                    } else {\r\n                        colspan += 1\r\n                    }\r\n                }));\r\n                return colspan\r\n            };\r\n            var getValueDataType = function(value) {\r\n                var dataType = type(value);\r\n                if (\"string\" !== dataType && \"boolean\" !== dataType && \"number\" !== dataType && \"date\" !== dataType && \"object\" !== dataType) {\r\n                    dataType = void 0\r\n                }\r\n                return dataType\r\n            };\r\n            var getSerializationFormat = function(dataType, value) {\r\n                switch (dataType) {\r\n                    case \"date\":\r\n                    case \"datetime\":\r\n                        return dateSerialization.getDateSerializationFormat(value);\r\n                    case \"number\":\r\n                        if (isString(value)) {\r\n                            return \"string\"\r\n                        }\r\n                        if (isNumeric(value)) {\r\n                            return null\r\n                        }\r\n                }\r\n            };\r\n            var updateSerializers = function(options, dataType) {\r\n                if (!options.deserializeValue) {\r\n                    if (gridCoreUtils.isDateType(dataType)) {\r\n                        options.deserializeValue = function(value) {\r\n                            return dateSerialization.deserializeDate(value)\r\n                        };\r\n                        options.serializeValue = function(value) {\r\n                            return isString(value) ? value : dateSerialization.serializeDate(value, this.serializationFormat)\r\n                        }\r\n                    }\r\n                    if (\"number\" === dataType) {\r\n                        options.deserializeValue = function(value) {\r\n                            var parsedValue = parseFloat(value);\r\n                            return isNaN(parsedValue) ? value : parsedValue\r\n                        };\r\n                        options.serializeValue = function(value, target) {\r\n                            if (\"filter\" === target) {\r\n                                return value\r\n                            }\r\n                            return isDefined(value) && \"string\" === this.serializationFormat ? value.toString() : value\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            var customizeTextForBooleanDataType = function(e) {\r\n                if (true === e.value) {\r\n                    return this.trueText || \"true\"\r\n                } else if (false === e.value) {\r\n                    return this.falseText || \"false\"\r\n                } else {\r\n                    return e.valueText || \"\"\r\n                }\r\n            };\r\n            var getCustomizeTextByDataType = function(dataType) {\r\n                if (\"boolean\" === dataType) {\r\n                    return customizeTextForBooleanDataType\r\n                }\r\n            };\r\n            var updateColumnIndexes = function(that) {\r\n                each(that._columns, (function(index, column) {\r\n                    column.index = index\r\n                }));\r\n                each(that._columns, (function(index, column) {\r\n                    if (isObject(column.ownerBand)) {\r\n                        column.ownerBand = column.ownerBand.index\r\n                    }\r\n                }));\r\n                each(that._commandColumns, (function(index, column) {\r\n                    column.index = -(index + 1)\r\n                }))\r\n            };\r\n            var updateColumnGroupIndexes = function(that, currentColumn) {\r\n                normalizeIndexes(that._columns, \"groupIndex\", currentColumn, (function(column) {\r\n                    var grouped = column.grouped;\r\n                    delete column.grouped;\r\n                    return grouped\r\n                }))\r\n            };\r\n            var getColumnIndexByVisibleIndex = function(that, visibleIndex, location) {\r\n                var rowIndex = isObject(visibleIndex) ? visibleIndex.rowIndex : null;\r\n                var columns = \"group\" === location ? that.getGroupColumns() : \"columnChooser\" === location ? that.getChooserColumns() : that.getVisibleColumns(rowIndex);\r\n                var column;\r\n                visibleIndex = isObject(visibleIndex) ? visibleIndex.columnIndex : visibleIndex;\r\n                column = columns[visibleIndex];\r\n                if (column && column.type === GROUP_COMMAND_COLUMN_NAME) {\r\n                    column = that._columns.filter(col => column.type === col.type)[0] || column\r\n                }\r\n                return column && isDefined(column.index) ? column.index : -1\r\n            };\r\n\r\n            function checkUserStateColumn(column, userStateColumn) {\r\n                return column && userStateColumn && userStateColumn.name === (column.name || column.dataField) && (userStateColumn.dataField === column.dataField || column.name)\r\n            }\r\n            var applyUserState = function(that) {\r\n                var columnsUserState = that._columnsUserState;\r\n                var ignoreColumnOptionNames = that._ignoreColumnOptionNames || [];\r\n                var columns = that._columns;\r\n                var columnCountById = {};\r\n                var resultColumns = [];\r\n                var allColumnsHaveState = true;\r\n                var userStateColumnIndexes = [];\r\n                var column;\r\n                var userStateColumnIndex;\r\n                var i;\r\n\r\n                function applyFieldsState(column, userStateColumn) {\r\n                    if (!userStateColumn) {\r\n                        return\r\n                    }\r\n                    for (var index = 0; index < USER_STATE_FIELD_NAMES.length; index++) {\r\n                        var fieldName = USER_STATE_FIELD_NAMES[index];\r\n                        if (inArray(fieldName, ignoreColumnOptionNames) >= 0) {\r\n                            continue\r\n                        }\r\n                        if (\"dataType\" === fieldName) {\r\n                            column[fieldName] = column[fieldName] || userStateColumn[fieldName]\r\n                        } else if (inArray(fieldName, USER_STATE_FIELD_NAMES_15_1) >= 0) {\r\n                            if (fieldName in userStateColumn) {\r\n                                column[fieldName] = userStateColumn[fieldName]\r\n                            }\r\n                        } else {\r\n                            if (\"selectedFilterOperation\" === fieldName && userStateColumn[fieldName]) {\r\n                                column.defaultSelectedFilterOperation = column[fieldName] || null\r\n                            }\r\n                            column[fieldName] = userStateColumn[fieldName]\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function findUserStateColumn(columnsUserState, column) {\r\n                    var id = column.name || column.dataField;\r\n                    var count = columnCountById[id] || 0;\r\n                    for (var j = 0; j < columnsUserState.length; j++) {\r\n                        if (checkUserStateColumn(column, columnsUserState[j])) {\r\n                            if (count) {\r\n                                count--\r\n                            } else {\r\n                                columnCountById[id] = columnCountById[id] || 0;\r\n                                columnCountById[id]++;\r\n                                return j\r\n                            }\r\n                        }\r\n                    }\r\n                    return -1\r\n                }\r\n                if (columnsUserState) {\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        userStateColumnIndex = findUserStateColumn(columnsUserState, columns[i]);\r\n                        allColumnsHaveState = allColumnsHaveState && userStateColumnIndex >= 0;\r\n                        userStateColumnIndexes.push(userStateColumnIndex)\r\n                    }\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        column = columns[i];\r\n                        userStateColumnIndex = userStateColumnIndexes[i];\r\n                        if (that._hasUserState || allColumnsHaveState) {\r\n                            applyFieldsState(column, columnsUserState[userStateColumnIndex])\r\n                        }\r\n                        if (userStateColumnIndex >= 0 && isDefined(columnsUserState[userStateColumnIndex].initialIndex)) {\r\n                            resultColumns[userStateColumnIndex] = column\r\n                        } else {\r\n                            resultColumns.push(column)\r\n                        }\r\n                    }\r\n                    var hasAddedBands = false;\r\n                    for (i = 0; i < columnsUserState.length; i++) {\r\n                        var columnUserState = columnsUserState[i];\r\n                        if (columnUserState.added && findUserStateColumn(columns, columnUserState) < 0) {\r\n                            column = createColumn(that, columnUserState.added);\r\n                            applyFieldsState(column, columnUserState);\r\n                            resultColumns.push(column);\r\n                            if (columnUserState.added.columns) {\r\n                                hasAddedBands = true\r\n                            }\r\n                        }\r\n                    }\r\n                    if (hasAddedBands) {\r\n                        updateColumnIndexes(that);\r\n                        resultColumns = createColumnsFromOptions(that, resultColumns)\r\n                    }\r\n                    assignColumns(that, resultColumns)\r\n                }\r\n            };\r\n            var updateIndexes = function(that, column) {\r\n                updateColumnIndexes(that);\r\n                updateColumnGroupIndexes(that, column);\r\n                ! function(that, currentColumn) {\r\n                    each(that._columns, (function(index, column) {\r\n                        if (isDefined(column.sortIndex) && !isSortOrderValid(column.sortOrder)) {\r\n                            delete column.sortIndex\r\n                        }\r\n                    }));\r\n                    normalizeIndexes(that._columns, \"sortIndex\", currentColumn, (function(column) {\r\n                        return !isDefined(column.groupIndex) && isSortOrderValid(column.sortOrder)\r\n                    }))\r\n                }(that, column);\r\n                resetBandColumnsCache(that);\r\n                ! function(that, currentColumn) {\r\n                    var key;\r\n                    var column;\r\n                    var bandColumns = {};\r\n                    var result = [];\r\n                    var bandColumnsCache = that.getBandColumnsCache();\r\n                    var columns = that._columns.filter(column => !column.command);\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        column = columns[i];\r\n                        var parentBandColumns = getParentBandColumns(i, bandColumnsCache.columnParentByIndex);\r\n                        if (parentBandColumns.length) {\r\n                            var bandColumnIndex = parentBandColumns[parentBandColumns.length - 1].index;\r\n                            bandColumns[bandColumnIndex] = bandColumns[bandColumnIndex] || [];\r\n                            bandColumns[bandColumnIndex].push(column)\r\n                        } else {\r\n                            result.push(column)\r\n                        }\r\n                    }\r\n                    for (key in bandColumns) {\r\n                        normalizeIndexes(bandColumns[key], \"visibleIndex\", currentColumn)\r\n                    }\r\n                    normalizeIndexes(result, \"visibleIndex\", currentColumn)\r\n                }(that, column)\r\n            };\r\n            var resetColumnsCache = function(that) {\r\n                that.resetColumnsCache()\r\n            };\r\n\r\n            function assignColumns(that, columns) {\r\n                that._columns = columns;\r\n                resetColumnsCache(that);\r\n                that.updateColumnDataTypes()\r\n            }\r\n            var updateColumnChanges = function(that, changeType, optionName, columnIndex) {\r\n                var columnChanges = that._columnChanges || {\r\n                    optionNames: {\r\n                        length: 0\r\n                    },\r\n                    changeTypes: {\r\n                        length: 0\r\n                    },\r\n                    columnIndex: columnIndex\r\n                };\r\n                optionName = optionName || \"all\";\r\n                optionName = optionName.split(\".\")[0];\r\n                var changeTypes = columnChanges.changeTypes;\r\n                if (changeType && !changeTypes[changeType]) {\r\n                    changeTypes[changeType] = true;\r\n                    changeTypes.length++\r\n                }\r\n                var optionNames = columnChanges.optionNames;\r\n                if (optionName && !optionNames[optionName]) {\r\n                    optionNames[optionName] = true;\r\n                    optionNames.length++\r\n                }\r\n                if (void 0 === columnIndex || columnIndex !== columnChanges.columnIndex) {\r\n                    delete columnChanges.columnIndex\r\n                }\r\n                that._columnChanges = columnChanges;\r\n                resetColumnsCache(that)\r\n            };\r\n            var fireColumnsChanged = function(that) {\r\n                var onColumnsChanging = that.option(\"onColumnsChanging\");\r\n                var columnChanges = that._columnChanges;\r\n                var reinitOptionNames = [\"dataField\", \"lookup\", \"dataType\", \"columns\"];\r\n                if (that.isInitialized() && !that._updateLockCount && columnChanges) {\r\n                    if (onColumnsChanging) {\r\n                        that._updateLockCount++;\r\n                        onColumnsChanging(extend({\r\n                            component: that.component\r\n                        }, columnChanges));\r\n                        that._updateLockCount--\r\n                    }\r\n                    that._columnChanges = void 0;\r\n                    if (options = columnChanges.optionNames, options && reinitOptionNames.some(name => options[name])) {\r\n                        that.reinit()\r\n                    } else {\r\n                        that.columnsChanged.fire(columnChanges)\r\n                    }\r\n                }\r\n                var options\r\n            };\r\n            var updateSortOrderWhenGrouping = function(that, column, groupIndex, prevGroupIndex) {\r\n                var columnWasGrouped = prevGroupIndex >= 0;\r\n                if (groupIndex >= 0) {\r\n                    if (!columnWasGrouped) {\r\n                        column.lastSortOrder = column.sortOrder\r\n                    }\r\n                } else {\r\n                    var sortMode = that.option(\"sorting.mode\");\r\n                    var sortOrder = column.lastSortOrder;\r\n                    if (\"single\" === sortMode) {\r\n                        var sortedByAnotherColumn = that._columns.some(col => col !== column && isDefined(col.sortIndex));\r\n                        if (sortedByAnotherColumn) {\r\n                            sortOrder = void 0\r\n                        }\r\n                    }\r\n                    column.sortOrder = sortOrder\r\n                }\r\n            };\r\n            var fireOptionChanged = function(that, options) {\r\n                var value = options.value;\r\n                var optionName = options.optionName;\r\n                var prevValue = options.prevValue;\r\n                var fullOptionName = options.fullOptionName;\r\n                var fullOptionPath = \"\".concat(fullOptionName, \".\").concat(optionName);\r\n                if (!IGNORE_COLUMN_OPTION_NAMES[optionName] && that._skipProcessingColumnsChange !== fullOptionPath) {\r\n                    that._skipProcessingColumnsChange = fullOptionPath;\r\n                    that.component._notifyOptionChanged(fullOptionPath, value, prevValue);\r\n                    that._skipProcessingColumnsChange = false\r\n                }\r\n            };\r\n            var columnOptionCore = function(that, column, optionName, value, notFireEvent) {\r\n                var optionGetter = compileGetter(optionName);\r\n                var columnIndex = column.index;\r\n                var columns;\r\n                var changeType;\r\n                var initialColumn;\r\n                if (3 === arguments.length) {\r\n                    return optionGetter(column, {\r\n                        functionsAsIs: true\r\n                    })\r\n                }\r\n                var prevValue = optionGetter(column, {\r\n                    functionsAsIs: true\r\n                });\r\n                if (prevValue !== value) {\r\n                    if (\"groupIndex\" === optionName || \"calculateGroupValue\" === optionName) {\r\n                        changeType = \"grouping\";\r\n                        updateSortOrderWhenGrouping(that, column, value, prevValue)\r\n                    } else if (\"sortIndex\" === optionName || \"sortOrder\" === optionName || \"calculateSortValue\" === optionName) {\r\n                        changeType = \"sorting\"\r\n                    } else {\r\n                        changeType = \"columns\"\r\n                    }\r\n                    var optionSetter = compileSetter(optionName);\r\n                    optionSetter(column, value, {\r\n                        functionsAsIs: true\r\n                    });\r\n                    var fullOptionName = getColumnFullPath(that, column);\r\n                    if (COLUMN_INDEX_OPTIONS[optionName]) {\r\n                        updateIndexes(that, column);\r\n                        value = optionGetter(column)\r\n                    }\r\n                    if (\"name\" === optionName || \"allowEditing\" === optionName) {\r\n                        that._checkColumns()\r\n                    }\r\n                    fullOptionName && fireOptionChanged(that, {\r\n                        fullOptionName: fullOptionName,\r\n                        optionName: optionName,\r\n                        value: value,\r\n                        prevValue: prevValue\r\n                    });\r\n                    if (!isDefined(prevValue) && !isDefined(value) && 0 !== optionName.indexOf(\"buffer\")) {\r\n                        notFireEvent = true\r\n                    }\r\n                    if (!notFireEvent) {\r\n                        if (inArray(optionName, USER_STATE_FIELD_NAMES) < 0 && \"visibleWidth\" !== optionName) {\r\n                            columns = that.option(\"columns\");\r\n                            initialColumn = that.getColumnByPath(fullOptionName, columns);\r\n                            if (isString(initialColumn)) {\r\n                                initialColumn = columns[columnIndex] = {\r\n                                    dataField: initialColumn\r\n                                }\r\n                            }\r\n                            if (initialColumn && checkUserStateColumn(initialColumn, column)) {\r\n                                optionSetter(initialColumn, value, {\r\n                                    functionsAsIs: true\r\n                                })\r\n                            }\r\n                        }\r\n                        updateColumnChanges(that, changeType, optionName, columnIndex)\r\n                    } else {\r\n                        resetColumnsCache(that)\r\n                    }\r\n                }\r\n            };\r\n\r\n            function isSortOrderValid(sortOrder) {\r\n                return \"asc\" === sortOrder || \"desc\" === sortOrder\r\n            }\r\n            var defaultSetCellValue = function(data, value) {\r\n                var path = this.dataField.split(\".\");\r\n                var dotCount = path.length - 1;\r\n                if (this.serializeValue) {\r\n                    value = this.serializeValue(value)\r\n                }\r\n                for (var i = 0; i < dotCount; i++) {\r\n                    var name = path[i];\r\n                    data = data[name] = data[name] || {}\r\n                }\r\n                data[path[dotCount]] = value\r\n            };\r\n            var isCustomCommandColumn = (that, commandColumn) => !!that._columns.filter(column => column.type === commandColumn.type).length;\r\n            var getFixedPosition = function(that, column) {\r\n                var rtlEnabled = that.option(\"rtlEnabled\");\r\n                if (column.command && !isCustomCommandColumn(that, column) || !column.fixedPosition) {\r\n                    return rtlEnabled ? \"right\" : \"left\"\r\n                }\r\n                return column.fixedPosition\r\n            };\r\n            var processExpandColumns = function(columns, expandColumns, type, columnIndex) {\r\n                var customColumnIndex;\r\n                var rowCount = this.getRowCount();\r\n                var rowspan = columns[columnIndex] && columns[columnIndex].rowspan;\r\n                var expandColumnsByType = expandColumns.filter(column => column.type === type);\r\n                columns.forEach((column, index) => {\r\n                    if (column.type === type) {\r\n                        customColumnIndex = index;\r\n                        rowspan = columns[index + 1] ? columns[index + 1].rowspan : rowCount\r\n                    }\r\n                });\r\n                if (rowspan > 1) {\r\n                    expandColumnsByType = map(expandColumnsByType, (function(expandColumn) {\r\n                        return extend({}, expandColumn, {\r\n                            rowspan: rowspan\r\n                        })\r\n                    }))\r\n                }\r\n                expandColumnsByType.unshift.apply(expandColumnsByType, isDefined(customColumnIndex) ? [customColumnIndex, 1] : [columnIndex, 0]);\r\n                columns.splice.apply(columns, expandColumnsByType);\r\n                return rowspan || 1\r\n            };\r\n            var numberToString = function(number, digitsCount) {\r\n                var str = number ? number.toString() : \"0\";\r\n                while (str.length < digitsCount) {\r\n                    str = \"0\" + str\r\n                }\r\n                return str\r\n            };\r\n            var mergeColumns = (that, columns, commandColumns, needToExtend) => {\r\n                var column;\r\n                var commandColumnIndex;\r\n                var result = columns.slice().map(column => extend({}, column));\r\n                var isColumnFixing = that._isColumnFixing();\r\n                var defaultCommandColumns = commandColumns.slice().map(column => extend({\r\n                    fixed: isColumnFixing\r\n                }, column));\r\n                var getCommandColumnIndex = column => commandColumns.reduce((result, commandColumn, index) => {\r\n                    var columnType = needToExtend && column.type === GROUP_COMMAND_COLUMN_NAME ? \"expand\" : column.type;\r\n                    return commandColumn.type === columnType || commandColumn.command === column.command ? index : result\r\n                }, -1);\r\n                var callbackFilter = commandColumn => commandColumn.command !== commandColumns[commandColumnIndex].command;\r\n                for (var i = 0; i < columns.length; i++) {\r\n                    column = columns[i];\r\n                    commandColumnIndex = column && (column.type || column.command) ? getCommandColumnIndex(column) : -1;\r\n                    if (commandColumnIndex >= 0) {\r\n                        if (needToExtend) {\r\n                            result[i] = extend({\r\n                                fixed: isColumnFixing\r\n                            }, commandColumns[commandColumnIndex], column);\r\n                            if (column.type !== GROUP_COMMAND_COLUMN_NAME) {\r\n                                defaultCommandColumns = defaultCommandColumns.filter(callbackFilter)\r\n                            }\r\n                        } else {\r\n                            var columnOptions = {\r\n                                visibleIndex: column.visibleIndex,\r\n                                index: column.index,\r\n                                headerId: column.headerId,\r\n                                allowFixing: 0 === column.groupIndex,\r\n                                allowReordering: 0 === column.groupIndex,\r\n                                groupIndex: column.groupIndex\r\n                            };\r\n                            result[i] = extend({}, column, commandColumns[commandColumnIndex], column.type === GROUP_COMMAND_COLUMN_NAME && columnOptions)\r\n                        }\r\n                    }\r\n                }\r\n                if (columns.length && needToExtend && defaultCommandColumns.length) {\r\n                    result = result.concat(defaultCommandColumns)\r\n                }\r\n                return result\r\n            };\r\n            var isColumnFixed = (that, column) => isDefined(column.fixed) || !column.type ? column.fixed : that._isColumnFixing();\r\n            var resetBandColumnsCache = that => {\r\n                that._bandColumnsCache = void 0\r\n            };\r\n            var findColumn = (columns, identifier) => {\r\n                var identifierOptionName = isString(identifier) && identifier.substr(0, identifier.indexOf(\":\"));\r\n                var column;\r\n                if (void 0 === identifier) {\r\n                    return\r\n                }\r\n                if (identifierOptionName) {\r\n                    identifier = identifier.substr(identifierOptionName.length + 1)\r\n                }\r\n                if (identifierOptionName) {\r\n                    column = columns.filter(column => \"\" + column[identifierOptionName] === identifier)[0]\r\n                } else {\r\n                    [\"index\", \"name\", \"dataField\", \"caption\"].some(optionName => {\r\n                        column = columns.filter(column => column[optionName] === identifier)[0];\r\n                        return !!column\r\n                    })\r\n                }\r\n                return column\r\n            };\r\n            return {\r\n                _getExpandColumnOptions: function() {\r\n                    return {\r\n                        type: \"expand\",\r\n                        command: \"expand\",\r\n                        width: \"auto\",\r\n                        cssClass: COMMAND_EXPAND_CLASS,\r\n                        allowEditing: false,\r\n                        allowGrouping: false,\r\n                        allowSorting: false,\r\n                        allowResizing: false,\r\n                        allowReordering: false,\r\n                        allowHiding: false\r\n                    }\r\n                },\r\n                _getFirstItems: function(dataSource) {\r\n                    var groupsCount;\r\n                    var items = [];\r\n                    if (dataSource && dataSource.items().length > 0) {\r\n                        groupsCount = gridCoreUtils.normalizeSortingInfo(dataSource.group()).length;\r\n                        items = function getFirstItemsCore(items, groupsCount) {\r\n                            if (!items || !groupsCount) {\r\n                                return items\r\n                            }\r\n                            for (var i = 0; i < items.length; i++) {\r\n                                var childItems = getFirstItemsCore(items[i].items || items[i].collapsedItems, groupsCount - 1);\r\n                                if (childItems && childItems.length) {\r\n                                    return childItems\r\n                                }\r\n                            }\r\n                        }(dataSource.items(), groupsCount) || []\r\n                    }\r\n                    return items\r\n                },\r\n                _endUpdateCore: function() {\r\n                    !this._skipProcessingColumnsChange && fireColumnsChanged(this)\r\n                },\r\n                init: function() {\r\n                    var columns = this.option(\"columns\");\r\n                    this._commandColumns = this._commandColumns || [];\r\n                    this._columns = this._columns || [];\r\n                    this._isColumnsFromOptions = !!columns;\r\n                    if (this._isColumnsFromOptions) {\r\n                        assignColumns(this, columns ? createColumnsFromOptions(this, columns) : []);\r\n                        applyUserState(this)\r\n                    } else {\r\n                        assignColumns(this, this._columnsUserState ? createColumnsFromOptions(this, this._columnsUserState) : this._columns)\r\n                    }! function(that) {\r\n                        var options = that._getExpandColumnOptions();\r\n                        that.addCommandColumn(options)\r\n                    }(this);\r\n                    if (this._dataSourceApplied) {\r\n                        this.applyDataSource(this._dataSource, true)\r\n                    } else {\r\n                        updateIndexes(this)\r\n                    }\r\n                    this._checkColumns()\r\n                },\r\n                callbackNames: function() {\r\n                    return [\"columnsChanged\"]\r\n                },\r\n                getColumnByPath: function(path, columns) {\r\n                    var column;\r\n                    var columnIndexes = [];\r\n                    path.replace(regExp, (function(_, columnIndex) {\r\n                        columnIndexes.push(parseInt(columnIndex));\r\n                        return \"\"\r\n                    }));\r\n                    if (columnIndexes.length) {\r\n                        if (columns) {\r\n                            column = columnIndexes.reduce((function(column, index) {\r\n                                return column && column.columns && column.columns[index]\r\n                            }), {\r\n                                columns: columns\r\n                            })\r\n                        } else {\r\n                            column = function(that, columnIndexes) {\r\n                                var result;\r\n                                var columns;\r\n                                var bandColumnsCache = that.getBandColumnsCache();\r\n                                var callbackFilter = function(column) {\r\n                                    var ownerBand = result ? result.index : void 0;\r\n                                    return column.ownerBand === ownerBand\r\n                                };\r\n                                if (bandColumnsCache.isPlain) {\r\n                                    result = that._columns[columnIndexes[0]]\r\n                                } else {\r\n                                    columns = that._columns.filter(callbackFilter);\r\n                                    for (var i = 0; i < columnIndexes.length; i++) {\r\n                                        result = columns[columnIndexes[i]];\r\n                                        if (result) {\r\n                                            columns = that._columns.filter(callbackFilter)\r\n                                        }\r\n                                    }\r\n                                }\r\n                                return result\r\n                            }(this, columnIndexes)\r\n                        }\r\n                    }\r\n                    return column\r\n                },\r\n                optionChanged: function(args) {\r\n                    var needUpdateRequireResize;\r\n                    switch (args.name) {\r\n                        case \"adaptColumnWidthByRatio\":\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"dataSource\":\r\n                            if (args.value !== args.previousValue && !this.option(\"columns\") && (!Array.isArray(args.value) || !Array.isArray(args.previousValue))) {\r\n                                this._columns = []\r\n                            }\r\n                            break;\r\n                        case \"columns\":\r\n                            needUpdateRequireResize = this._skipProcessingColumnsChange;\r\n                            args.handled = true;\r\n                            if (!this._skipProcessingColumnsChange) {\r\n                                if (args.name === args.fullName) {\r\n                                    this._columnsUserState = null;\r\n                                    this._ignoreColumnOptionNames = null;\r\n                                    this.init()\r\n                                } else {\r\n                                    this._columnOptionChanged(args);\r\n                                    needUpdateRequireResize = true\r\n                                }\r\n                            }\r\n                            if (needUpdateRequireResize) {\r\n                                this._updateRequireResize(args)\r\n                            }\r\n                            break;\r\n                        case \"commonColumnSettings\":\r\n                        case \"columnAutoWidth\":\r\n                        case \"allowColumnResizing\":\r\n                        case \"allowColumnReordering\":\r\n                        case \"columnFixing\":\r\n                        case \"grouping\":\r\n                        case \"groupPanel\":\r\n                        case \"regenerateColumnsByVisibleItems\":\r\n                        case \"customizeColumns\":\r\n                        case \"columnHidingEnabled\":\r\n                        case \"dateSerializationFormat\":\r\n                        case \"columnResizingMode\":\r\n                        case \"columnMinWidth\":\r\n                        case \"columnWidth\":\r\n                            args.handled = true;\r\n                            var ignoreColumnOptionNames = \"columnWidth\" === args.fullName && [\"width\"];\r\n                            this.reinit(ignoreColumnOptionNames);\r\n                            break;\r\n                        case \"rtlEnabled\":\r\n                            this.reinit();\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                _columnOptionChanged: function(args) {\r\n                    var columnOptionValue = {};\r\n                    var column = this.getColumnByPath(args.fullName);\r\n                    var columnOptionName = args.fullName.replace(regExp, \"\");\r\n                    if (column) {\r\n                        if (columnOptionName) {\r\n                            columnOptionValue[columnOptionName] = args.value\r\n                        } else {\r\n                            columnOptionValue = args.value\r\n                        }\r\n                        this._skipProcessingColumnsChange = args.fullName;\r\n                        this.columnOption(column.index, columnOptionValue);\r\n                        this._skipProcessingColumnsChange = false\r\n                    }\r\n                },\r\n                _updateRequireResize: function(args) {\r\n                    var component = this.component;\r\n                    if (\"width\" === args.fullName.replace(regExp, \"\") && component._updateLockCount) {\r\n                        component._requireResize = true\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    return [\"addColumn\", \"deleteColumn\", \"columnOption\", \"columnCount\", \"clearSorting\", \"clearGrouping\", \"getVisibleColumns\", \"getVisibleColumnIndex\"]\r\n                },\r\n                applyDataSource: function(dataSource, forceApplying) {\r\n                    var isDataSourceLoaded = dataSource && dataSource.isLoaded();\r\n                    this._dataSource = dataSource;\r\n                    if (!this._dataSourceApplied || 0 === this._dataSourceColumnsCount || forceApplying || this.option(\"regenerateColumnsByVisibleItems\")) {\r\n                        if (isDataSourceLoaded) {\r\n                            if (!this._isColumnsFromOptions) {\r\n                                var columnsFromDataSource = function(that, dataSource) {\r\n                                    var firstItems = that._getFirstItems(dataSource);\r\n                                    var fieldName;\r\n                                    var processedFields = {};\r\n                                    var result = [];\r\n                                    for (var i = 0; i < firstItems.length; i++) {\r\n                                        if (firstItems[i]) {\r\n                                            for (fieldName in firstItems[i]) {\r\n                                                if (!isFunction(firstItems[i][fieldName]) || variableWrapper.isWrapped(firstItems[i][fieldName])) {\r\n                                                    processedFields[fieldName] = true\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    for (fieldName in processedFields) {\r\n                                        if (0 !== fieldName.indexOf(\"__\")) {\r\n                                            var column = createColumn(that, fieldName);\r\n                                            result.push(column)\r\n                                        }\r\n                                    }\r\n                                    return result\r\n                                }(this, dataSource);\r\n                                if (columnsFromDataSource.length) {\r\n                                    assignColumns(this, columnsFromDataSource);\r\n                                    this._dataSourceColumnsCount = this._columns.length;\r\n                                    applyUserState(this)\r\n                                }\r\n                            }\r\n                            return this.updateColumns(dataSource, forceApplying)\r\n                        } else {\r\n                            this._dataSourceApplied = false\r\n                        }\r\n                    } else if (isDataSourceLoaded && !this.isAllDataTypesDefined(true) && this.updateColumnDataTypes(dataSource)) {\r\n                        updateColumnChanges(this, \"columns\");\r\n                        fireColumnsChanged(this);\r\n                        return (new Deferred).reject().promise()\r\n                    }\r\n                },\r\n                reset: function() {\r\n                    this._dataSource = null;\r\n                    this._dataSourceApplied = false;\r\n                    this._dataSourceColumnsCount = void 0;\r\n                    this.reinit()\r\n                },\r\n                resetColumnsCache: function() {\r\n                    this._visibleColumns = void 0;\r\n                    this._fixedColumns = void 0;\r\n                    this._rowCount = void 0;\r\n                    resetBandColumnsCache(this)\r\n                },\r\n                reinit: function(ignoreColumnOptionNames) {\r\n                    this._columnsUserState = this.getUserState();\r\n                    this._ignoreColumnOptionNames = ignoreColumnOptionNames || null;\r\n                    this.init();\r\n                    if (ignoreColumnOptionNames) {\r\n                        this._ignoreColumnOptionNames = null\r\n                    }\r\n                },\r\n                isInitialized: function() {\r\n                    return !!this._columns.length || !!this.option(\"columns\")\r\n                },\r\n                isDataSourceApplied: function() {\r\n                    return this._dataSourceApplied\r\n                },\r\n                getCommonSettings: function(column) {\r\n                    var commonColumnSettings = (!column || !column.type) && this.option(\"commonColumnSettings\") || {};\r\n                    var groupingOptions = this.option(\"grouping\") || {};\r\n                    var groupPanelOptions = this.option(\"groupPanel\") || {};\r\n                    return extend({\r\n                        allowFixing: this.option(\"columnFixing.enabled\"),\r\n                        allowResizing: this.option(\"allowColumnResizing\") || void 0,\r\n                        allowReordering: this.option(\"allowColumnReordering\"),\r\n                        minWidth: this.option(\"columnMinWidth\"),\r\n                        width: this.option(\"columnWidth\"),\r\n                        autoExpandGroup: groupingOptions.autoExpandAll,\r\n                        allowCollapsing: groupingOptions.allowCollapsing,\r\n                        allowGrouping: groupPanelOptions.allowColumnDragging && groupPanelOptions.visible || groupingOptions.contextMenuEnabled\r\n                    }, commonColumnSettings)\r\n                },\r\n                isColumnOptionUsed: function(optionName) {\r\n                    for (var i = 0; i < this._columns.length; i++) {\r\n                        if (this._columns[i][optionName]) {\r\n                            return true\r\n                        }\r\n                    }\r\n                },\r\n                isAllDataTypesDefined: function(checkSerializers) {\r\n                    var columns = this._columns;\r\n                    if (!columns.length) {\r\n                        return false\r\n                    }\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        if (!columns[i].dataField && columns[i].calculateCellValue === columns[i].defaultCalculateCellValue) {\r\n                            continue\r\n                        }\r\n                        if (!columns[i].dataType || checkSerializers && columns[i].deserializeValue && void 0 === columns[i].serializationFormat) {\r\n                            return false\r\n                        }\r\n                    }\r\n                    return true\r\n                },\r\n                getColumns: function() {\r\n                    return this._columns\r\n                },\r\n                isBandColumnsUsed: function() {\r\n                    return this.getColumns().some((function(column) {\r\n                        return column.isBand\r\n                    }))\r\n                },\r\n                getGroupColumns: function() {\r\n                    var result = [];\r\n                    each(this._columns, (function() {\r\n                        if (isDefined(this.groupIndex)) {\r\n                            result[this.groupIndex] = this\r\n                        }\r\n                    }));\r\n                    return result\r\n                },\r\n                getVisibleColumns: function(rowIndex) {\r\n                    this._visibleColumns = this._visibleColumns || this._getVisibleColumnsCore();\r\n                    rowIndex = isDefined(rowIndex) ? rowIndex : this._visibleColumns.length - 1;\r\n                    return this._visibleColumns[rowIndex] || []\r\n                },\r\n                getFixedColumns: function(rowIndex) {\r\n                    this._fixedColumns = this._fixedColumns || this._getFixedColumnsCore();\r\n                    rowIndex = isDefined(rowIndex) ? rowIndex : this._fixedColumns.length - 1;\r\n                    return this._fixedColumns[rowIndex] || []\r\n                },\r\n                getFilteringColumns: function() {\r\n                    return this.getColumns().filter(item => (item.dataField || item.name) && (item.allowFiltering || item.allowHeaderFiltering)).map(item => {\r\n                        var field = extend(true, {}, item);\r\n                        if (!isDefined(field.dataField)) {\r\n                            field.dataField = field.name\r\n                        }\r\n                        field.filterOperations = item.filterOperations !== item.defaultFilterOperations ? field.filterOperations : null;\r\n                        return field\r\n                    })\r\n                },\r\n                getColumnIndexOffset: function() {\r\n                    return 0\r\n                },\r\n                _getFixedColumnsCore: function() {\r\n                    var result = [];\r\n                    var rowCount = this.getRowCount();\r\n                    var isColumnFixing = this._isColumnFixing();\r\n                    var transparentColumn = {\r\n                        command: \"transparent\"\r\n                    };\r\n                    var transparentColspan = 0;\r\n                    var notFixedColumnCount;\r\n                    var transparentColumnIndex;\r\n                    var lastFixedPosition;\r\n                    if (isColumnFixing) {\r\n                        for (var i = 0; i <= rowCount; i++) {\r\n                            notFixedColumnCount = 0;\r\n                            lastFixedPosition = null;\r\n                            transparentColumnIndex = null;\r\n                            var visibleColumns = this.getVisibleColumns(i, true);\r\n                            for (var j = 0; j < visibleColumns.length; j++) {\r\n                                var prevColumn = visibleColumns[j - 1];\r\n                                var column = visibleColumns[j];\r\n                                if (!column.fixed) {\r\n                                    if (0 === i) {\r\n                                        if (column.isBand && column.colspan) {\r\n                                            transparentColspan += column.colspan\r\n                                        } else {\r\n                                            transparentColspan++\r\n                                        }\r\n                                    }\r\n                                    notFixedColumnCount++;\r\n                                    if (!isDefined(transparentColumnIndex)) {\r\n                                        transparentColumnIndex = j\r\n                                    }\r\n                                } else if (prevColumn && prevColumn.fixed && getFixedPosition(this, prevColumn) !== getFixedPosition(this, column)) {\r\n                                    if (!isDefined(transparentColumnIndex)) {\r\n                                        transparentColumnIndex = j\r\n                                    }\r\n                                } else {\r\n                                    lastFixedPosition = column.fixedPosition\r\n                                }\r\n                            }\r\n                            if (0 === i && (0 === notFixedColumnCount || notFixedColumnCount >= visibleColumns.length)) {\r\n                                return []\r\n                            }\r\n                            if (!isDefined(transparentColumnIndex)) {\r\n                                transparentColumnIndex = \"right\" === lastFixedPosition ? 0 : visibleColumns.length\r\n                            }\r\n                            result[i] = visibleColumns.slice(0);\r\n                            if (!transparentColumn.colspan) {\r\n                                transparentColumn.colspan = transparentColspan\r\n                            }\r\n                            result[i].splice(transparentColumnIndex, notFixedColumnCount, transparentColumn)\r\n                        }\r\n                    }\r\n                    return result.map(columns => columns.map(column => {\r\n                        var newColumn = _extends({}, column);\r\n                        if (newColumn.headerId) {\r\n                            newColumn.headerId += \"-fixed\"\r\n                        }\r\n                        return newColumn\r\n                    }))\r\n                },\r\n                _isColumnFixing: function() {\r\n                    var isColumnFixing = this.option(\"columnFixing.enabled\");\r\n                    !isColumnFixing && each(this._columns, (function(_, column) {\r\n                        if (column.fixed) {\r\n                            isColumnFixing = true;\r\n                            return false\r\n                        }\r\n                    }));\r\n                    return isColumnFixing\r\n                },\r\n                _getExpandColumnsCore: function() {\r\n                    return this.getGroupColumns()\r\n                },\r\n                getExpandColumns: function() {\r\n                    var expandColumns = this._getExpandColumnsCore();\r\n                    var expandColumn;\r\n                    var firstGroupColumn = expandColumns.filter(column => 0 === column.groupIndex)[0];\r\n                    var isFixedFirstGroupColumn = firstGroupColumn && firstGroupColumn.fixed;\r\n                    var isColumnFixing = this._isColumnFixing();\r\n                    if (expandColumns.length) {\r\n                        expandColumn = this.columnOption(\"command:expand\")\r\n                    }\r\n                    expandColumns = map(expandColumns, column => extend({}, column, {\r\n                        visibleWidth: null,\r\n                        minWidth: null,\r\n                        cellTemplate: !isDefined(column.groupIndex) ? column.cellTemplate : null,\r\n                        headerCellTemplate: null,\r\n                        fixed: !isDefined(column.groupIndex) || !isFixedFirstGroupColumn ? isColumnFixing : true\r\n                    }, expandColumn, {\r\n                        index: column.index,\r\n                        type: column.type || GROUP_COMMAND_COLUMN_NAME\r\n                    }));\r\n                    return expandColumns\r\n                },\r\n                getBandColumnsCache: function() {\r\n                    if (!this._bandColumnsCache) {\r\n                        var columns = this._columns;\r\n                        var columnChildrenByIndex = {};\r\n                        var columnParentByIndex = {};\r\n                        var isPlain = true;\r\n                        columns.forEach((function(column) {\r\n                            var ownerBand = column.ownerBand;\r\n                            var parentIndex = isObject(ownerBand) ? ownerBand.index : ownerBand;\r\n                            var parent = columns[parentIndex];\r\n                            if (column.hasColumns) {\r\n                                isPlain = false\r\n                            }\r\n                            if (column.colspan) {\r\n                                column.colspan = void 0\r\n                            }\r\n                            if (column.rowspan) {\r\n                                column.rowspan = void 0\r\n                            }\r\n                            if (parent) {\r\n                                columnParentByIndex[column.index] = parent\r\n                            } else {\r\n                                parentIndex = -1\r\n                            }\r\n                            columnChildrenByIndex[parentIndex] = columnChildrenByIndex[parentIndex] || [];\r\n                            columnChildrenByIndex[parentIndex].push(column)\r\n                        }));\r\n                        this._bandColumnsCache = {\r\n                            isPlain: isPlain,\r\n                            columnChildrenByIndex: columnChildrenByIndex,\r\n                            columnParentByIndex: columnParentByIndex\r\n                        }\r\n                    }\r\n                    return this._bandColumnsCache\r\n                },\r\n                _isColumnVisible: function(column) {\r\n                    return column.visible && this.isParentColumnVisible(column.index)\r\n                },\r\n                _getVisibleColumnsCore: function() {\r\n                    var that = this;\r\n                    var i;\r\n                    var result = [];\r\n                    var rowspanGroupColumns = 0;\r\n                    var rowspanExpandColumns = 0;\r\n                    var rowCount = that.getRowCount();\r\n                    var positiveIndexedColumns = [];\r\n                    var negativeIndexedColumns = [];\r\n                    var notGroupedColumnsCount = 0;\r\n                    var isFixedToEnd;\r\n                    var rtlEnabled = that.option(\"rtlEnabled\");\r\n                    var bandColumnsCache = that.getBandColumnsCache();\r\n                    var expandColumns = mergeColumns(that, that.getExpandColumns(), that._columns);\r\n                    var columns = mergeColumns(that, that._columns, that._commandColumns, true);\r\n                    var columnDigitsCount = function(number) {\r\n                        var i;\r\n                        for (i = 0; number > 1; i++) {\r\n                            number /= 10\r\n                        }\r\n                        return i\r\n                    }(columns.length);\r\n                    ! function(that, columns, bandColumnsCache) {\r\n                        var rowspan;\r\n                        for (var i = 0; i < columns.length; i++) {\r\n                            var column = columns[i];\r\n                            if (column.visible || column.command) {\r\n                                if (column.isBand) {\r\n                                    column.colspan = column.colspan || calculateColspan(that, column.index)\r\n                                }\r\n                                if (!column.isBand || !column.colspan) {\r\n                                    rowspan = that.getRowCount();\r\n                                    if (!column.command && (!isDefined(column.groupIndex) || column.showWhenGrouped)) {\r\n                                        rowspan -= getParentBandColumns(column.index, bandColumnsCache.columnParentByIndex).length\r\n                                    }\r\n                                    if (rowspan > 1) {\r\n                                        column.rowspan = rowspan\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }(that, columns, bandColumnsCache);\r\n                    for (i = 0; i < rowCount; i++) {\r\n                        result[i] = [];\r\n                        negativeIndexedColumns[i] = [{}];\r\n                        positiveIndexedColumns[i] = [{}, {}, {}]\r\n                    }\r\n                    each(columns, (function() {\r\n                        var visibleIndex = this.visibleIndex;\r\n                        var indexedColumns;\r\n                        var parentBandColumns = getParentBandColumns(this.index, bandColumnsCache.columnParentByIndex);\r\n                        var visible = that._isColumnVisible(this);\r\n                        if (visible && (!isDefined(this.groupIndex) || this.showWhenGrouped)) {\r\n                            var rowIndex = parentBandColumns.length;\r\n                            if (visibleIndex < 0) {\r\n                                visibleIndex = -visibleIndex;\r\n                                indexedColumns = negativeIndexedColumns[rowIndex]\r\n                            } else {\r\n                                this.fixed = parentBandColumns.length ? parentBandColumns[0].fixed : this.fixed;\r\n                                this.fixedPosition = parentBandColumns.length ? parentBandColumns[0].fixedPosition : this.fixedPosition;\r\n                                if (this.fixed) {\r\n                                    isFixedToEnd = \"right\" === this.fixedPosition;\r\n                                    if (rtlEnabled && (!this.command || isCustomCommandColumn(that, this))) {\r\n                                        isFixedToEnd = !isFixedToEnd\r\n                                    }\r\n                                    if (isFixedToEnd) {\r\n                                        indexedColumns = positiveIndexedColumns[rowIndex][2]\r\n                                    } else {\r\n                                        indexedColumns = positiveIndexedColumns[rowIndex][0]\r\n                                    }\r\n                                } else {\r\n                                    indexedColumns = positiveIndexedColumns[rowIndex][1]\r\n                                }\r\n                            }\r\n                            if (parentBandColumns.length) {\r\n                                visibleIndex = numberToString(visibleIndex, columnDigitsCount);\r\n                                for (i = parentBandColumns.length - 1; i >= 0; i--) {\r\n                                    visibleIndex = numberToString(parentBandColumns[i].visibleIndex, columnDigitsCount) + visibleIndex\r\n                                }\r\n                            }\r\n                            indexedColumns[visibleIndex] = indexedColumns[visibleIndex] || [];\r\n                            indexedColumns[visibleIndex].push(this);\r\n                            notGroupedColumnsCount++\r\n                        }\r\n                    }));\r\n                    each(result, (function(rowIndex) {\r\n                        orderEach(negativeIndexedColumns[rowIndex], (function(_, columns) {\r\n                            result[rowIndex].unshift.apply(result[rowIndex], columns)\r\n                        }));\r\n                        var firstPositiveIndexColumn = result[rowIndex].length;\r\n                        each(positiveIndexedColumns[rowIndex], (function(index, columnsByFixing) {\r\n                            orderEach(columnsByFixing, (function(_, columnsByVisibleIndex) {\r\n                                result[rowIndex].push.apply(result[rowIndex], columnsByVisibleIndex)\r\n                            }))\r\n                        }));\r\n                        if (rowspanExpandColumns < rowIndex + 1) {\r\n                            rowspanExpandColumns += processExpandColumns.call(that, result[rowIndex], expandColumns, \"detailExpand\", firstPositiveIndexColumn)\r\n                        }\r\n                        if (rowspanGroupColumns < rowIndex + 1) {\r\n                            rowspanGroupColumns += processExpandColumns.call(that, result[rowIndex], expandColumns, GROUP_COMMAND_COLUMN_NAME, firstPositiveIndexColumn)\r\n                        }\r\n                    }));\r\n                    result.push(function getDataColumns(columns, rowIndex, bandColumnID) {\r\n                        var result = [];\r\n                        rowIndex = rowIndex || 0;\r\n                        columns[rowIndex] && each(columns[rowIndex], (function(_, column) {\r\n                            if (column.ownerBand === bandColumnID || column.type === GROUP_COMMAND_COLUMN_NAME) {\r\n                                if (!column.isBand || !column.colspan) {\r\n                                    if (!column.command || rowIndex < 1) {\r\n                                        result.push(column)\r\n                                    }\r\n                                } else {\r\n                                    result.push.apply(result, getDataColumns(columns, rowIndex + 1, column.index))\r\n                                }\r\n                            }\r\n                        }));\r\n                        return result\r\n                    }(result));\r\n                    if (!notGroupedColumnsCount && that._columns.length) {\r\n                        result[rowCount].push({\r\n                            command: \"empty\"\r\n                        })\r\n                    }\r\n                    return result\r\n                },\r\n                getInvisibleColumns: function(columns, bandColumnIndex) {\r\n                    var that = this;\r\n                    var result = [];\r\n                    var hiddenColumnsByBand;\r\n                    columns = columns || that._columns;\r\n                    each(columns, (function(_, column) {\r\n                        if (column.ownerBand !== bandColumnIndex) {\r\n                            return\r\n                        }\r\n                        if (column.isBand) {\r\n                            if (!column.visible) {\r\n                                hiddenColumnsByBand = that.getChildrenByBandColumn(column.index)\r\n                            } else {\r\n                                hiddenColumnsByBand = that.getInvisibleColumns(that.getChildrenByBandColumn(column.index), column.index)\r\n                            }\r\n                            if (hiddenColumnsByBand.length) {\r\n                                result.push(column);\r\n                                result = result.concat(hiddenColumnsByBand)\r\n                            }\r\n                            return\r\n                        }\r\n                        if (!column.visible) {\r\n                            result.push(column)\r\n                        }\r\n                    }));\r\n                    return result\r\n                },\r\n                getChooserColumns: function(getAllColumns) {\r\n                    var columns = getAllColumns ? this.getColumns() : this.getInvisibleColumns();\r\n                    var columnChooserColumns = columns.filter(column => column.showInColumnChooser);\r\n                    var sortOrder = this.option(\"columnChooser.sortOrder\");\r\n                    return ((columns, sortOrder) => {\r\n                        if (\"asc\" !== sortOrder && \"desc\" !== sortOrder) {\r\n                            return columns\r\n                        }\r\n                        var sign = \"asc\" === sortOrder ? 1 : -1;\r\n                        columns.sort((function(column1, column2) {\r\n                            var caption1 = column1.caption || \"\";\r\n                            var caption2 = column2.caption || \"\";\r\n                            return sign * caption1.localeCompare(caption2)\r\n                        }));\r\n                        return columns\r\n                    })(columnChooserColumns, sortOrder)\r\n                },\r\n                allowMoveColumn: function(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation) {\r\n                    var columnIndex = getColumnIndexByVisibleIndex(this, fromVisibleIndex, sourceLocation);\r\n                    var sourceColumn = this._columns[columnIndex];\r\n                    if (sourceColumn && (sourceColumn.allowReordering || sourceColumn.allowGrouping || sourceColumn.allowHiding)) {\r\n                        if (sourceLocation === targetLocation) {\r\n                            if (\"columnChooser\" === sourceLocation) {\r\n                                return false\r\n                            }\r\n                            fromVisibleIndex = isObject(fromVisibleIndex) ? fromVisibleIndex.columnIndex : fromVisibleIndex;\r\n                            toVisibleIndex = isObject(toVisibleIndex) ? toVisibleIndex.columnIndex : toVisibleIndex;\r\n                            return fromVisibleIndex !== toVisibleIndex && fromVisibleIndex + 1 !== toVisibleIndex\r\n                        } else if (\"group\" === sourceLocation && \"columnChooser\" !== targetLocation || \"group\" === targetLocation) {\r\n                            return sourceColumn && sourceColumn.allowGrouping\r\n                        } else if (\"columnChooser\" === sourceLocation || \"columnChooser\" === targetLocation) {\r\n                            return sourceColumn && sourceColumn.allowHiding\r\n                        }\r\n                        return true\r\n                    }\r\n                    return false\r\n                },\r\n                moveColumn: function(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation) {\r\n                    var options = {};\r\n                    var prevGroupIndex;\r\n                    var fromIndex = getColumnIndexByVisibleIndex(this, fromVisibleIndex, sourceLocation);\r\n                    var toIndex = getColumnIndexByVisibleIndex(this, toVisibleIndex, targetLocation);\r\n                    var targetGroupIndex;\r\n                    if (fromIndex >= 0) {\r\n                        var column = this._columns[fromIndex];\r\n                        toVisibleIndex = isObject(toVisibleIndex) ? toVisibleIndex.columnIndex : toVisibleIndex;\r\n                        targetGroupIndex = toIndex >= 0 ? this._columns[toIndex].groupIndex : -1;\r\n                        if (isDefined(column.groupIndex) && \"group\" === sourceLocation) {\r\n                            if (targetGroupIndex > column.groupIndex) {\r\n                                targetGroupIndex--\r\n                            }\r\n                            if (\"group\" !== targetLocation) {\r\n                                options.groupIndex = void 0\r\n                            } else {\r\n                                prevGroupIndex = column.groupIndex;\r\n                                delete column.groupIndex;\r\n                                updateColumnGroupIndexes(this)\r\n                            }\r\n                        }\r\n                        if (\"group\" === targetLocation) {\r\n                            options.groupIndex = function(that, column, groupIndex) {\r\n                                var groupColumns = that.getGroupColumns();\r\n                                var i;\r\n                                if (groupIndex >= 0) {\r\n                                    for (i = 0; i < groupColumns.length; i++) {\r\n                                        if (groupColumns[i].groupIndex >= groupIndex) {\r\n                                            groupColumns[i].groupIndex++\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    groupIndex = 0;\r\n                                    for (i = 0; i < groupColumns.length; i++) {\r\n                                        groupIndex = Math.max(groupIndex, groupColumns[i].groupIndex + 1)\r\n                                    }\r\n                                }\r\n                                return groupIndex\r\n                            }(this, 0, targetGroupIndex);\r\n                            column.groupIndex = prevGroupIndex\r\n                        } else if (toVisibleIndex >= 0) {\r\n                            var targetColumn = this._columns[toIndex];\r\n                            if (!targetColumn || column.ownerBand !== targetColumn.ownerBand) {\r\n                                options.visibleIndex = MAX_SAFE_INTEGER\r\n                            } else if (isColumnFixed(this, column) ^ isColumnFixed(this, targetColumn)) {\r\n                                options.visibleIndex = MAX_SAFE_INTEGER\r\n                            } else {\r\n                                options.visibleIndex = targetColumn.visibleIndex\r\n                            }\r\n                        }\r\n                        var isVisible = \"columnChooser\" !== targetLocation;\r\n                        if (column.visible !== isVisible) {\r\n                            options.visible = isVisible\r\n                        }\r\n                        this.columnOption(column.index, options)\r\n                    }\r\n                },\r\n                changeSortOrder: function(columnIndex, sortOrder) {\r\n                    var options = {};\r\n                    var sortingOptions = this.option(\"sorting\");\r\n                    var sortingMode = sortingOptions && sortingOptions.mode;\r\n                    var needResetSorting = \"single\" === sortingMode || !sortOrder;\r\n                    var allowSorting = \"single\" === sortingMode || \"multiple\" === sortingMode;\r\n                    var column = this._columns[columnIndex];\r\n                    if (allowSorting && column && column.allowSorting) {\r\n                        if (needResetSorting && !isDefined(column.groupIndex)) {\r\n                            each(this._columns, (function(index) {\r\n                                if (index !== columnIndex && this.sortOrder) {\r\n                                    if (!isDefined(this.groupIndex)) {\r\n                                        delete this.sortOrder\r\n                                    }\r\n                                    delete this.sortIndex\r\n                                }\r\n                            }))\r\n                        }\r\n                        if (isSortOrderValid(sortOrder)) {\r\n                            if (column.sortOrder !== sortOrder) {\r\n                                options.sortOrder = sortOrder\r\n                            }\r\n                        } else if (\"none\" === sortOrder) {\r\n                            if (column.sortOrder) {\r\n                                options.sortIndex = void 0;\r\n                                options.sortOrder = void 0\r\n                            }\r\n                        } else {\r\n                            ! function(column) {\r\n                                if (\"ctrl\" === sortOrder) {\r\n                                    if (!(\"sortOrder\" in column && \"sortIndex\" in column)) {\r\n                                        return false\r\n                                    }\r\n                                    options.sortOrder = void 0;\r\n                                    options.sortIndex = void 0\r\n                                } else if (isDefined(column.groupIndex) || isDefined(column.sortIndex)) {\r\n                                    options.sortOrder = \"desc\" === column.sortOrder ? \"asc\" : \"desc\"\r\n                                } else {\r\n                                    options.sortOrder = \"asc\"\r\n                                }\r\n                                return true\r\n                            }(column)\r\n                        }\r\n                    }\r\n                    this.columnOption(column.index, options)\r\n                },\r\n                getSortDataSourceParameters: function(useLocalSelector) {\r\n                    var sortColumns = [];\r\n                    var sort = [];\r\n                    each(this._columns, (function() {\r\n                        if ((this.dataField || this.selector || this.calculateCellValue) && isDefined(this.sortIndex) && !isDefined(this.groupIndex)) {\r\n                            sortColumns[this.sortIndex] = this\r\n                        }\r\n                    }));\r\n                    each(sortColumns, (function() {\r\n                        var sortOrder = this && this.sortOrder;\r\n                        if (isSortOrderValid(sortOrder)) {\r\n                            var sortItem = {\r\n                                selector: this.calculateSortValue || this.displayField || this.calculateDisplayValue || useLocalSelector && this.selector || this.dataField || this.calculateCellValue,\r\n                                desc: \"desc\" === this.sortOrder\r\n                            };\r\n                            if (this.sortingMethod) {\r\n                                sortItem.compare = this.sortingMethod.bind(this)\r\n                            }\r\n                            sort.push(sortItem)\r\n                        }\r\n                    }));\r\n                    return sort.length > 0 ? sort : null\r\n                },\r\n                getGroupDataSourceParameters: function(useLocalSelector) {\r\n                    var group = [];\r\n                    each(this.getGroupColumns(), (function() {\r\n                        var selector = this.calculateGroupValue || this.displayField || this.calculateDisplayValue || useLocalSelector && this.selector || this.dataField || this.calculateCellValue;\r\n                        if (selector) {\r\n                            var groupItem = {\r\n                                selector: selector,\r\n                                desc: \"desc\" === this.sortOrder,\r\n                                isExpanded: !!this.autoExpandGroup\r\n                            };\r\n                            if (this.sortingMethod) {\r\n                                groupItem.compare = this.sortingMethod.bind(this)\r\n                            }\r\n                            group.push(groupItem)\r\n                        }\r\n                    }));\r\n                    return group.length > 0 ? group : null\r\n                },\r\n                refresh: function(updateNewLookupsOnly) {\r\n                    var deferreds = [];\r\n                    each(this._columns, (function() {\r\n                        var lookup = this.lookup;\r\n                        if (lookup && !this.calculateDisplayValue) {\r\n                            if (updateNewLookupsOnly && lookup.valueMap) {\r\n                                return\r\n                            }\r\n                            if (lookup.update) {\r\n                                deferreds.push(lookup.update())\r\n                            }\r\n                        }\r\n                    }));\r\n                    return when.apply($, deferreds).done(resetColumnsCache.bind(null, this))\r\n                },\r\n                _updateColumnOptions: function(column, columnIndex) {\r\n                    column.selector = column.selector || function(data) {\r\n                        return column.calculateCellValue(data)\r\n                    };\r\n                    each([\"calculateSortValue\", \"calculateGroupValue\", \"calculateDisplayValue\"], (function(_, calculateCallbackName) {\r\n                        var calculateCallback = column[calculateCallbackName];\r\n                        if (isFunction(calculateCallback)) {\r\n                            if (!calculateCallback.originalCallback) {\r\n                                var context = {\r\n                                    column: column\r\n                                };\r\n                                column[calculateCallbackName] = function(data) {\r\n                                    return calculateCallback.call(context.column, data)\r\n                                };\r\n                                column[calculateCallbackName].originalCallback = calculateCallback;\r\n                                column[calculateCallbackName].columnIndex = columnIndex;\r\n                                column[calculateCallbackName].context = context\r\n                            } else {\r\n                                column[calculateCallbackName].context.column = column\r\n                            }\r\n                        }\r\n                    }));\r\n                    if (isString(column.calculateDisplayValue)) {\r\n                        column.displayField = column.calculateDisplayValue;\r\n                        column.calculateDisplayValue = compileGetter(column.displayField)\r\n                    }\r\n                    if (column.calculateDisplayValue) {\r\n                        column.displayValueMap = column.displayValueMap || {}\r\n                    }\r\n                    updateSerializers(column, column.dataType);\r\n                    var lookup = column.lookup;\r\n                    if (lookup) {\r\n                        updateSerializers(lookup, lookup.dataType)\r\n                    }\r\n                    var dataType = lookup ? lookup.dataType : column.dataType;\r\n                    if (dataType) {\r\n                        column.alignment = column.alignment || function(dataType, isRTL) {\r\n                            switch (dataType) {\r\n                                case \"number\":\r\n                                    return \"right\";\r\n                                case \"boolean\":\r\n                                    return \"center\";\r\n                                default:\r\n                                    return getDefaultAlignment(isRTL)\r\n                            }\r\n                        }(dataType, this.option(\"rtlEnabled\"));\r\n                        column.format = column.format || gridCoreUtils.getFormatByDataType(dataType);\r\n                        column.customizeText = column.customizeText || getCustomizeTextByDataType(dataType);\r\n                        column.defaultFilterOperations = column.defaultFilterOperations || !lookup && DATATYPE_OPERATIONS[dataType] || [];\r\n                        if (!isDefined(column.filterOperations)) {\r\n                            setFilterOperationsAsDefaultValues(column)\r\n                        }\r\n                        column.defaultFilterOperation = column.filterOperations && column.filterOperations[0] || \"=\";\r\n                        column.showEditorAlways = isDefined(column.showEditorAlways) ? column.showEditorAlways : \"boolean\" === dataType && !column.cellTemplate && !column.lookup\r\n                    }\r\n                },\r\n                updateColumnDataTypes: function(dataSource) {\r\n                    var that = this;\r\n                    var dateSerializationFormat = that.option(\"dateSerializationFormat\");\r\n                    var firstItems = that._getFirstItems(dataSource);\r\n                    var isColumnDataTypesUpdated = false;\r\n                    each(that._columns, (function(index, column) {\r\n                        var i;\r\n                        var value;\r\n                        var dataType;\r\n                        var lookupDataType;\r\n                        var valueDataType;\r\n                        var lookup = column.lookup;\r\n                        if (gridCoreUtils.isDateType(column.dataType) && void 0 === column.serializationFormat) {\r\n                            column.serializationFormat = dateSerializationFormat\r\n                        }\r\n                        if (lookup && gridCoreUtils.isDateType(lookup.dataType) && void 0 === column.serializationFormat) {\r\n                            lookup.serializationFormat = dateSerializationFormat\r\n                        }\r\n                        if (column.calculateCellValue && firstItems.length) {\r\n                            if (!column.dataType || lookup && !lookup.dataType) {\r\n                                for (i = 0; i < firstItems.length; i++) {\r\n                                    value = column.calculateCellValue(firstItems[i]);\r\n                                    if (!column.dataType) {\r\n                                        valueDataType = getValueDataType(value);\r\n                                        dataType = dataType || valueDataType;\r\n                                        if (dataType && valueDataType && dataType !== valueDataType) {\r\n                                            dataType = \"string\"\r\n                                        }\r\n                                    }\r\n                                    if (lookup && !lookup.dataType) {\r\n                                        valueDataType = getValueDataType(gridCoreUtils.getDisplayValue(column, value, firstItems[i]));\r\n                                        lookupDataType = lookupDataType || valueDataType;\r\n                                        if (lookupDataType && valueDataType && lookupDataType !== valueDataType) {\r\n                                            lookupDataType = \"string\"\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (dataType || lookupDataType) {\r\n                                    if (dataType) {\r\n                                        column.dataType = dataType\r\n                                    }\r\n                                    if (lookup && lookupDataType) {\r\n                                        lookup.dataType = lookupDataType\r\n                                    }\r\n                                    isColumnDataTypesUpdated = true\r\n                                }\r\n                            }\r\n                            if (void 0 === column.serializationFormat || lookup && void 0 === lookup.serializationFormat) {\r\n                                for (i = 0; i < firstItems.length; i++) {\r\n                                    value = column.calculateCellValue(firstItems[i], true);\r\n                                    if (void 0 === column.serializationFormat) {\r\n                                        column.serializationFormat = getSerializationFormat(column.dataType, value)\r\n                                    }\r\n                                    if (lookup && void 0 === lookup.serializationFormat) {\r\n                                        lookup.serializationFormat = getSerializationFormat(lookup.dataType, lookup.calculateCellValue(value, true))\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        that._updateColumnOptions(column, index)\r\n                    }));\r\n                    return isColumnDataTypesUpdated\r\n                },\r\n                _customizeColumns: function(columns) {\r\n                    var customizeColumns = this.option(\"customizeColumns\");\r\n                    if (customizeColumns) {\r\n                        var hasOwnerBand = columns.some((function(column) {\r\n                            return isObject(column.ownerBand)\r\n                        }));\r\n                        if (hasOwnerBand) {\r\n                            updateIndexes(this)\r\n                        }\r\n                        customizeColumns(columns);\r\n                        assignColumns(this, createColumnsFromOptions(this, columns))\r\n                    }\r\n                },\r\n                updateColumns: function(dataSource, forceApplying) {\r\n                    if (!forceApplying) {\r\n                        this.updateSortingGrouping(dataSource)\r\n                    }\r\n                    if (!dataSource || dataSource.isLoaded()) {\r\n                        var sortParameters = dataSource ? dataSource.sort() || [] : this.getSortDataSourceParameters();\r\n                        var groupParameters = dataSource ? dataSource.group() || [] : this.getGroupDataSourceParameters();\r\n                        var filterParameters = null === dataSource || void 0 === dataSource ? void 0 : dataSource.lastLoadOptions().filter;\r\n                        this._customizeColumns(this._columns);\r\n                        updateIndexes(this);\r\n                        var columns = this._columns;\r\n                        return when(this.refresh(true)).always(() => {\r\n                            if (this._columns !== columns) {\r\n                                return\r\n                            }\r\n                            this._updateChanges(dataSource, {\r\n                                sorting: sortParameters,\r\n                                grouping: groupParameters,\r\n                                filtering: filterParameters\r\n                            });\r\n                            fireColumnsChanged(this)\r\n                        })\r\n                    }\r\n                },\r\n                _updateChanges: function(dataSource, parameters) {\r\n                    if (dataSource) {\r\n                        this.updateColumnDataTypes(dataSource);\r\n                        this._dataSourceApplied = true\r\n                    }\r\n                    if (!gridCoreUtils.equalSortParameters(parameters.sorting, this.getSortDataSourceParameters())) {\r\n                        updateColumnChanges(this, \"sorting\")\r\n                    }\r\n                    if (!gridCoreUtils.equalSortParameters(parameters.grouping, this.getGroupDataSourceParameters())) {\r\n                        updateColumnChanges(this, \"grouping\")\r\n                    }\r\n                    var dataController = this.getController(\"data\");\r\n                    if (dataController && !gridCoreUtils.equalFilterParameters(parameters.filtering, dataController.getCombinedFilter())) {\r\n                        updateColumnChanges(this, \"filtering\")\r\n                    }\r\n                    updateColumnChanges(this, \"columns\")\r\n                },\r\n                updateSortingGrouping: function(dataSource, fromDataSource) {\r\n                    var that = this;\r\n                    var sortParameters;\r\n                    var isColumnsChanged;\r\n                    var updateSortGroupParameterIndexes = function(columns, sortParameters, indexParameterName) {\r\n                        each(columns, (function(index, column) {\r\n                            delete column[indexParameterName];\r\n                            if (sortParameters) {\r\n                                for (var i = 0; i < sortParameters.length; i++) {\r\n                                    var selector = sortParameters[i].selector;\r\n                                    var isExpanded = sortParameters[i].isExpanded;\r\n                                    if (selector === column.dataField || selector === column.name || selector === column.selector || selector === column.calculateCellValue || selector === column.calculateGroupValue || selector === column.calculateDisplayValue) {\r\n                                        column.sortOrder = column.sortOrder || (sortParameters[i].desc ? \"desc\" : \"asc\");\r\n                                        if (void 0 !== isExpanded) {\r\n                                            column.autoExpandGroup = isExpanded\r\n                                        }\r\n                                        column[indexParameterName] = i;\r\n                                        break\r\n                                    }\r\n                                }\r\n                            }\r\n                        }))\r\n                    };\r\n                    if (dataSource) {\r\n                        sortParameters = gridCoreUtils.normalizeSortingInfo(dataSource.sort());\r\n                        var groupParameters = gridCoreUtils.normalizeSortingInfo(dataSource.group());\r\n                        var columnsGroupParameters = that.getGroupDataSourceParameters();\r\n                        var columnsSortParameters = that.getSortDataSourceParameters();\r\n                        var groupingChanged = !gridCoreUtils.equalSortParameters(groupParameters, columnsGroupParameters, true);\r\n                        var groupExpandingChanged = !groupingChanged && !gridCoreUtils.equalSortParameters(groupParameters, columnsGroupParameters);\r\n                        if (!that._columns.length) {\r\n                            each(groupParameters, (function(index, group) {\r\n                                that._columns.push(group.selector)\r\n                            }));\r\n                            each(sortParameters, (function(index, sort) {\r\n                                that._columns.push(sort.selector)\r\n                            }));\r\n                            assignColumns(that, createColumnsFromOptions(that, that._columns))\r\n                        }\r\n                        if ((fromDataSource || !columnsGroupParameters && !that._hasUserState) && (groupingChanged || groupExpandingChanged)) {\r\n                            updateSortGroupParameterIndexes(that._columns, groupParameters, \"groupIndex\");\r\n                            if (fromDataSource) {\r\n                                groupingChanged && updateColumnChanges(that, \"grouping\");\r\n                                groupExpandingChanged && updateColumnChanges(that, \"groupExpanding\");\r\n                                isColumnsChanged = true\r\n                            }\r\n                        }\r\n                        if ((fromDataSource || !columnsSortParameters && !that._hasUserState) && !gridCoreUtils.equalSortParameters(sortParameters, columnsSortParameters)) {\r\n                            updateSortGroupParameterIndexes(that._columns, sortParameters, \"sortIndex\");\r\n                            if (fromDataSource) {\r\n                                updateColumnChanges(that, \"sorting\");\r\n                                isColumnsChanged = true\r\n                            }\r\n                        }\r\n                        if (isColumnsChanged) {\r\n                            fireColumnsChanged(that)\r\n                        }\r\n                    }\r\n                },\r\n                updateFilter: function(filter, remoteFiltering, columnIndex, filterValue) {\r\n                    if (!Array.isArray(filter)) {\r\n                        return filter\r\n                    }\r\n                    filter = extend([], filter);\r\n                    columnIndex = void 0 !== filter.columnIndex ? filter.columnIndex : columnIndex;\r\n                    filterValue = void 0 !== filter.filterValue ? filter.filterValue : filterValue;\r\n                    if (isString(filter[0]) && \"!\" !== filter[0]) {\r\n                        var column = this.columnOption(filter[0]);\r\n                        if (remoteFiltering) {\r\n                            if (config().forceIsoDateParsing && column && column.serializeValue && filter.length > 1) {\r\n                                filter[filter.length - 1] = column.serializeValue(filter[filter.length - 1], \"filter\")\r\n                            }\r\n                        } else if (column && column.selector) {\r\n                            filter[0] = column.selector;\r\n                            filter[0].columnIndex = column.index\r\n                        }\r\n                    } else if (isFunction(filter[0])) {\r\n                        filter[0].columnIndex = columnIndex;\r\n                        filter[0].filterValue = filterValue\r\n                    }\r\n                    for (var i = 0; i < filter.length; i++) {\r\n                        filter[i] = this.updateFilter(filter[i], remoteFiltering, columnIndex, filterValue)\r\n                    }\r\n                    return filter\r\n                },\r\n                columnCount: function() {\r\n                    return this._columns ? this._columns.length : 0\r\n                },\r\n                columnOption: function(identifier, option, value, notFireEvent) {\r\n                    var that = this;\r\n                    var columns = that._columns.concat(that._commandColumns);\r\n                    var column = findColumn(columns, identifier);\r\n                    if (column) {\r\n                        if (1 === arguments.length) {\r\n                            return extend({}, column)\r\n                        }\r\n                        if (isString(option)) {\r\n                            if (2 === arguments.length) {\r\n                                return columnOptionCore(that, column, option)\r\n                            } else {\r\n                                columnOptionCore(that, column, option, value, notFireEvent)\r\n                            }\r\n                        } else if (isObject(option)) {\r\n                            each(option, (function(optionName, value) {\r\n                                columnOptionCore(that, column, optionName, value, notFireEvent)\r\n                            }))\r\n                        }\r\n                        fireColumnsChanged(that)\r\n                    }\r\n                },\r\n                clearSorting: function() {\r\n                    var columnCount = this.columnCount();\r\n                    this.beginUpdate();\r\n                    for (var i = 0; i < columnCount; i++) {\r\n                        this.columnOption(i, \"sortOrder\", void 0)\r\n                    }\r\n                    this.endUpdate()\r\n                },\r\n                clearGrouping: function() {\r\n                    var columnCount = this.columnCount();\r\n                    this.beginUpdate();\r\n                    for (var i = 0; i < columnCount; i++) {\r\n                        this.columnOption(i, \"groupIndex\", void 0)\r\n                    }\r\n                    this.endUpdate()\r\n                },\r\n                getVisibleIndex: function(index, rowIndex) {\r\n                    var columns = this.getVisibleColumns(rowIndex);\r\n                    for (var i = columns.length - 1; i >= 0; i--) {\r\n                        if (columns[i].index === index) {\r\n                            return i\r\n                        }\r\n                    }\r\n                    return -1\r\n                },\r\n                getVisibleIndexByColumn: function(column, rowIndex) {\r\n                    var visibleColumns = this.getVisibleColumns(rowIndex);\r\n                    var visibleColumn = visibleColumns.filter(col => col.index === column.index && col.command === column.command)[0];\r\n                    return visibleColumns.indexOf(visibleColumn)\r\n                },\r\n                getVisibleColumnIndex: function(id, rowIndex) {\r\n                    var index = this.columnOption(id, \"index\");\r\n                    return this.getVisibleIndex(index, rowIndex)\r\n                },\r\n                addColumn: function(options) {\r\n                    var column = createColumn(this, options);\r\n                    var index = this._columns.length;\r\n                    this._columns.push(column);\r\n                    if (column.isBand) {\r\n                        this._columns = createColumnsFromOptions(this, this._columns);\r\n                        column = this._columns[index]\r\n                    }\r\n                    column.added = options;\r\n                    updateIndexes(this, column);\r\n                    this.updateColumns(this._dataSource);\r\n                    this._checkColumns()\r\n                },\r\n                deleteColumn: function(id) {\r\n                    var column = this.columnOption(id);\r\n                    if (column && column.index >= 0) {\r\n                        columns = this._columns, void columns.forEach(column => {\r\n                            if (isDefined(column.ownerBand)) {\r\n                                column.ownerBand = columns[column.ownerBand]\r\n                            }\r\n                        });\r\n                        this._columns.splice(column.index, 1);\r\n                        if (column.isBand) {\r\n                            var childIndexes = this.getChildrenByBandColumn(column.index).map(column => column.index);\r\n                            this._columns = this._columns.filter(column => childIndexes.indexOf(column.index) < 0)\r\n                        }\r\n                        updateIndexes(this);\r\n                        this.updateColumns(this._dataSource)\r\n                    }\r\n                    var columns\r\n                },\r\n                addCommandColumn: function(options) {\r\n                    var commandColumn = this._commandColumns.filter(column => column.command === options.command)[0];\r\n                    if (!commandColumn) {\r\n                        commandColumn = options;\r\n                        this._commandColumns.push(commandColumn)\r\n                    }\r\n                },\r\n                getUserState: function() {\r\n                    var columns = this._columns;\r\n                    var result = [];\r\n                    var i;\r\n\r\n                    function handleStateField(index, value) {\r\n                        if (void 0 !== columns[i][value]) {\r\n                            result[i][value] = columns[i][value]\r\n                        }\r\n                    }\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        result[i] = {};\r\n                        each(USER_STATE_FIELD_NAMES, handleStateField)\r\n                    }\r\n                    return result\r\n                },\r\n                setName: function(column) {\r\n                    column.name = column.name || column.dataField || column.type\r\n                },\r\n                setUserState: function(state) {\r\n                    var dataSource = this._dataSource;\r\n                    var ignoreColumnOptionNames = this.option(\"stateStoring.ignoreColumnOptionNames\");\r\n                    null === state || void 0 === state ? void 0 : state.forEach(this.setName);\r\n                    if (!ignoreColumnOptionNames) {\r\n                        ignoreColumnOptionNames = [];\r\n                        var commonColumnSettings = this.getCommonSettings();\r\n                        if (!this.option(\"columnChooser.enabled\")) {\r\n                            ignoreColumnOptionNames.push(\"visible\")\r\n                        }\r\n                        if (\"none\" === this.option(\"sorting.mode\")) {\r\n                            ignoreColumnOptionNames.push(\"sortIndex\", \"sortOrder\")\r\n                        }\r\n                        if (!commonColumnSettings.allowGrouping) {\r\n                            ignoreColumnOptionNames.push(\"groupIndex\")\r\n                        }\r\n                        if (!commonColumnSettings.allowFixing) {\r\n                            ignoreColumnOptionNames.push(\"fixed\", \"fixedPosition\")\r\n                        }\r\n                        if (!commonColumnSettings.allowResizing) {\r\n                            ignoreColumnOptionNames.push(\"width\", \"visibleWidth\")\r\n                        }\r\n                        var isFilterPanelHidden = !this.option(\"filterPanel.visible\");\r\n                        if (!this.option(\"filterRow.visible\") && isFilterPanelHidden) {\r\n                            ignoreColumnOptionNames.push(\"filterValue\", \"selectedFilterOperation\")\r\n                        }\r\n                        if (!this.option(\"headerFilter.visible\") && isFilterPanelHidden) {\r\n                            ignoreColumnOptionNames.push(\"filterValues\", \"filterType\")\r\n                        }\r\n                    }\r\n                    this._columnsUserState = state;\r\n                    this._ignoreColumnOptionNames = ignoreColumnOptionNames;\r\n                    this._hasUserState = !!state;\r\n                    updateColumnChanges(this, \"filtering\");\r\n                    this.init();\r\n                    if (dataSource) {\r\n                        dataSource.sort(this.getSortDataSourceParameters());\r\n                        dataSource.group(this.getGroupDataSourceParameters())\r\n                    }\r\n                },\r\n                _checkColumns: function() {\r\n                    var usedNames = {};\r\n                    var hasEditableColumnWithoutName = false;\r\n                    var duplicatedNames = [];\r\n                    this._columns.forEach(column => {\r\n                        var _column$columns;\r\n                        var name = column.name;\r\n                        var isBand = null === (_column$columns = column.columns) || void 0 === _column$columns ? void 0 : _column$columns.length;\r\n                        var isEditable = column.allowEditing && (column.dataField || column.setCellValue) && !isBand;\r\n                        if (name) {\r\n                            if (usedNames[name]) {\r\n                                duplicatedNames.push('\"'.concat(name, '\"'))\r\n                            }\r\n                            usedNames[name] = true\r\n                        } else if (isEditable) {\r\n                            hasEditableColumnWithoutName = true\r\n                        }\r\n                    });\r\n                    if (duplicatedNames.length) {\r\n                        errors.log(\"E1059\", duplicatedNames.join(\", \"))\r\n                    }\r\n                    if (hasEditableColumnWithoutName) {\r\n                        errors.log(\"E1060\")\r\n                    }\r\n                },\r\n                _createCalculatedColumnOptions: function(columnOptions, bandColumn) {\r\n                    var calculatedColumnOptions = {};\r\n                    var dataField = columnOptions.dataField;\r\n                    if (Array.isArray(columnOptions.columns) && columnOptions.columns.length || columnOptions.isBand) {\r\n                        calculatedColumnOptions.isBand = true;\r\n                        dataField = null\r\n                    }\r\n                    if (dataField) {\r\n                        if (isString(dataField)) {\r\n                            var getter = compileGetter(dataField);\r\n                            calculatedColumnOptions = {\r\n                                caption: captionize(dataField),\r\n                                calculateCellValue: function(data, skipDeserialization) {\r\n                                    var value = getter(data);\r\n                                    return this.deserializeValue && !skipDeserialization ? this.deserializeValue(value) : value\r\n                                },\r\n                                setCellValue: defaultSetCellValue,\r\n                                parseValue: function(text) {\r\n                                    var result;\r\n                                    var parsedValue;\r\n                                    if (\"number\" === this.dataType) {\r\n                                        if (isString(text) && this.format) {\r\n                                            result = function(text, format) {\r\n                                                var parsedValue = numberLocalization.parse(text, format);\r\n                                                if (isNumeric(parsedValue)) {\r\n                                                    var formattedValue = numberLocalization.format(parsedValue, format);\r\n                                                    var formattedValueWithDefaultFormat = numberLocalization.format(parsedValue, \"decimal\");\r\n                                                    if (formattedValue === text || formattedValueWithDefaultFormat === text) {\r\n                                                        return parsedValue\r\n                                                    }\r\n                                                }\r\n                                            }(text.trim(), this.format)\r\n                                        } else if (isDefined(text) && isNumeric(text)) {\r\n                                            result = Number(text)\r\n                                        }\r\n                                    } else if (\"boolean\" === this.dataType) {\r\n                                        if (text === this.trueText) {\r\n                                            result = true\r\n                                        } else if (text === this.falseText) {\r\n                                            result = false\r\n                                        }\r\n                                    } else if (gridCoreUtils.isDateType(this.dataType)) {\r\n                                        parsedValue = dateLocalization.parse(text, this.format);\r\n                                        if (parsedValue) {\r\n                                            result = parsedValue\r\n                                        }\r\n                                    } else {\r\n                                        result = text\r\n                                    }\r\n                                    return result\r\n                                }\r\n                            }\r\n                        }\r\n                        calculatedColumnOptions.allowFiltering = true\r\n                    } else {\r\n                        calculatedColumnOptions.allowFiltering = !!columnOptions.calculateFilterExpression\r\n                    }\r\n                    calculatedColumnOptions.calculateFilterExpression = function() {\r\n                        return filterUtils.defaultCalculateFilterExpression.apply(this, arguments)\r\n                    };\r\n                    calculatedColumnOptions.createFilterExpression = function(filterValue) {\r\n                        var result;\r\n                        if (this.calculateFilterExpression) {\r\n                            result = this.calculateFilterExpression.apply(this, arguments)\r\n                        }\r\n                        if (isFunction(result)) {\r\n                            result = [result, \"=\", true]\r\n                        }\r\n                        if (result) {\r\n                            result.columnIndex = this.index;\r\n                            result.filterValue = filterValue\r\n                        }\r\n                        return result\r\n                    };\r\n                    if (!dataField || !isString(dataField)) {\r\n                        extend(true, calculatedColumnOptions, {\r\n                            allowSorting: false,\r\n                            allowGrouping: false,\r\n                            calculateCellValue: function() {\r\n                                return null\r\n                            }\r\n                        })\r\n                    }\r\n                    if (bandColumn) {\r\n                        calculatedColumnOptions.allowFixing = false\r\n                    }\r\n                    if (columnOptions.dataType) {\r\n                        calculatedColumnOptions.userDataType = columnOptions.dataType\r\n                    }\r\n                    if (columnOptions.selectedFilterOperation && !(\"defaultSelectedFilterOperation\" in calculatedColumnOptions)) {\r\n                        calculatedColumnOptions.defaultSelectedFilterOperation = columnOptions.selectedFilterOperation\r\n                    }\r\n                    if (columnOptions.lookup) {\r\n                        calculatedColumnOptions.lookup = {\r\n                            calculateCellValue: function(value, skipDeserialization) {\r\n                                if (this.valueExpr) {\r\n                                    value = this.valueMap && this.valueMap[value]\r\n                                }\r\n                                return this.deserializeValue && !skipDeserialization ? this.deserializeValue(value) : value\r\n                            },\r\n                            updateValueMap: function() {\r\n                                this.valueMap = {};\r\n                                if (this.items) {\r\n                                    var calculateValue = compileGetter(this.valueExpr);\r\n                                    var calculateDisplayValue = compileGetter(this.displayExpr);\r\n                                    for (var i = 0; i < this.items.length; i++) {\r\n                                        var item = this.items[i];\r\n                                        var displayValue = calculateDisplayValue(item);\r\n                                        this.valueMap[calculateValue(item)] = displayValue;\r\n                                        this.dataType = this.dataType || getValueDataType(displayValue)\r\n                                    }\r\n                                }\r\n                            },\r\n                            update: function() {\r\n                                var that = this;\r\n                                var dataSource = that.dataSource;\r\n                                if (dataSource) {\r\n                                    if (isFunction(dataSource) && !variableWrapper.isWrapped(dataSource)) {\r\n                                        dataSource = dataSource({})\r\n                                    }\r\n                                    if (isPlainObject(dataSource) || dataSource instanceof Store || Array.isArray(dataSource)) {\r\n                                        if (that.valueExpr) {\r\n                                            var dataSourceOptions = normalizeDataSourceOptions(dataSource);\r\n                                            dataSourceOptions.paginate = false;\r\n                                            dataSource = new DataSource(dataSourceOptions);\r\n                                            return dataSource.load().done((function(data) {\r\n                                                that.items = data;\r\n                                                that.updateValueMap && that.updateValueMap()\r\n                                            }))\r\n                                        }\r\n                                    } else {\r\n                                        errors.log(\"E1016\")\r\n                                    }\r\n                                } else {\r\n                                    that.updateValueMap && that.updateValueMap()\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    calculatedColumnOptions.resizedCallbacks = Callbacks();\r\n                    if (columnOptions.resized) {\r\n                        calculatedColumnOptions.resizedCallbacks.add(columnOptions.resized.bind(columnOptions))\r\n                    }\r\n                    each(calculatedColumnOptions, (function(optionName) {\r\n                        if (isFunction(calculatedColumnOptions[optionName]) && 0 !== optionName.indexOf(\"default\")) {\r\n                            var defaultOptionName = \"default\" + optionName.charAt(0).toUpperCase() + optionName.substr(1);\r\n                            calculatedColumnOptions[defaultOptionName] = calculatedColumnOptions[optionName]\r\n                        }\r\n                    }));\r\n                    return calculatedColumnOptions\r\n                },\r\n                getRowCount: function() {\r\n                    this._rowCount = this._rowCount || function(that) {\r\n                        var rowCount = 1;\r\n                        var bandColumnsCache = that.getBandColumnsCache();\r\n                        var columnParentByIndex = bandColumnsCache.columnParentByIndex;\r\n                        that._columns.forEach((function(column) {\r\n                            var parents = getParentBandColumns(column.index, columnParentByIndex);\r\n                            var invisibleParents = parents.filter((function(column) {\r\n                                return !column.visible\r\n                            }));\r\n                            if (column.visible && !invisibleParents.length) {\r\n                                rowCount = Math.max(rowCount, parents.length + 1)\r\n                            }\r\n                        }));\r\n                        return rowCount\r\n                    }(this);\r\n                    return this._rowCount\r\n                },\r\n                getRowIndex: function(columnIndex, alwaysGetRowIndex) {\r\n                    var column = this._columns[columnIndex];\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    return column && (alwaysGetRowIndex || column.visible && !(column.command || isDefined(column.groupIndex))) ? getParentBandColumns(columnIndex, bandColumnsCache.columnParentByIndex).length : 0\r\n                },\r\n                getChildrenByBandColumn: function(bandColumnIndex, onlyVisibleDirectChildren) {\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    var result = _getChildrenByBandColumn(bandColumnIndex, bandColumnsCache.columnChildrenByIndex, !onlyVisibleDirectChildren);\r\n                    if (onlyVisibleDirectChildren) {\r\n                        return result.filter((function(column) {\r\n                            return column.visible && !column.command\r\n                        })).sort((function(column1, column2) {\r\n                            return column1.visibleIndex - column2.visibleIndex\r\n                        }))\r\n                    }\r\n                    return result\r\n                },\r\n                isParentBandColumn: function(columnIndex, bandColumnIndex) {\r\n                    var result = false;\r\n                    var column = this._columns[columnIndex];\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    var parentBandColumns = column && getParentBandColumns(columnIndex, bandColumnsCache.columnParentByIndex);\r\n                    if (parentBandColumns) {\r\n                        each(parentBandColumns, (function(_, bandColumn) {\r\n                            if (bandColumn.index === bandColumnIndex) {\r\n                                result = true;\r\n                                return false\r\n                            }\r\n                        }))\r\n                    }\r\n                    return result\r\n                },\r\n                isParentColumnVisible: function(columnIndex) {\r\n                    var result = true;\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    var bandColumns = columnIndex >= 0 && getParentBandColumns(columnIndex, bandColumnsCache.columnParentByIndex);\r\n                    bandColumns && each(bandColumns, (function(_, bandColumn) {\r\n                        result = result && bandColumn.visible;\r\n                        return result\r\n                    }));\r\n                    return result\r\n                },\r\n                getColumnId: function(column) {\r\n                    if (column.command && column.type === GROUP_COMMAND_COLUMN_NAME) {\r\n                        if (isCustomCommandColumn(this, column)) {\r\n                            return \"type:\" + column.type\r\n                        }\r\n                        return \"command:\" + column.command\r\n                    }\r\n                    return column.index\r\n                },\r\n                getCustomizeTextByDataType: getCustomizeTextByDataType,\r\n                getHeaderContentAlignment: function(columnAlignment) {\r\n                    var rtlEnabled = this.option(\"rtlEnabled\");\r\n                    if (rtlEnabled) {\r\n                        return \"left\" === columnAlignment ? \"right\" : \"left\"\r\n                    }\r\n                    return columnAlignment\r\n                }\r\n            }\r\n        }())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.columns_controller.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnsControllerModule\r\n} from \"../grid_core/ui.grid_core.columns_controller\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\ngridCore.registerModule(\"columns\", {\r\n    defaultOptions: function() {\r\n        return extend(true, {}, columnsControllerModule.defaultOptions(), {\r\n            commonColumnSettings: {\r\n                allowExporting: true\r\n            }\r\n        })\r\n    },\r\n    controllers: columnsControllerModule.controllers\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.data_source_adapter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport gridCore from \"../data_grid/ui.data_grid.core\";\r\nimport {\r\n    executeAsync,\r\n    getKeyHash\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport ArrayStore from \"../../data/array_store\";\r\nimport {\r\n    applyBatch\r\n} from \"../../data/array_utils\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nexport default gridCore.Controller.inherit(function() {\r\n    function cloneItems(items, groupCount) {\r\n        if (items) {\r\n            items = items.slice(0);\r\n            if (groupCount) {\r\n                for (var i = 0; i < items.length; i++) {\r\n                    items[i] = extend({\r\n                        key: items[i].key\r\n                    }, items[i]);\r\n                    items[i].items = cloneItems(items[i].items, groupCount - 1)\r\n                }\r\n            }\r\n        }\r\n        return items\r\n    }\r\n\r\n    function calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload) {\r\n        var operationTypes = {\r\n            reload: true,\r\n            fullReload: true\r\n        };\r\n        if (lastLoadOptions) {\r\n            operationTypes = {\r\n                sorting: !gridCore.equalSortParameters(loadOptions.sort, lastLoadOptions.sort),\r\n                grouping: !gridCore.equalSortParameters(loadOptions.group, lastLoadOptions.group, true),\r\n                groupExpanding: !gridCore.equalSortParameters(loadOptions.group, lastLoadOptions.group) || lastLoadOptions.groupExpand,\r\n                filtering: !gridCore.equalFilterParameters(loadOptions.filter, lastLoadOptions.filter),\r\n                pageIndex: loadOptions.pageIndex !== lastLoadOptions.pageIndex,\r\n                skip: loadOptions.skip !== lastLoadOptions.skip,\r\n                take: loadOptions.take !== lastLoadOptions.take,\r\n                pageSize: loadOptions.pageSize !== lastLoadOptions.pageSize,\r\n                fullReload: isFullReload\r\n            };\r\n            operationTypes.reload = isFullReload || operationTypes.sorting || operationTypes.grouping || operationTypes.filtering;\r\n            operationTypes.paging = operationTypes.pageIndex || operationTypes.pageSize || operationTypes.take\r\n        }\r\n        return operationTypes\r\n    }\r\n\r\n    function getPageDataFromCache(options, updatePaging) {\r\n        var groupCount = gridCore.normalizeSortingInfo(options.group || options.storeLoadOptions.group || options.loadOptions.group).length;\r\n        var items = [];\r\n        if (fillItemsFromCache(items, options, groupCount)) {\r\n            return items\r\n        } else if (updatePaging) {\r\n            ! function(cacheItemsFromBegin, options, groupCount) {\r\n                var cacheItemBeginCount = cacheItemsFromBegin.length;\r\n                var {\r\n                    storeLoadOptions: storeLoadOptions\r\n                } = options;\r\n                if (void 0 !== storeLoadOptions.skip && storeLoadOptions.take && !groupCount) {\r\n                    var cacheItemsFromEnd = [];\r\n                    fillItemsFromCache(cacheItemsFromEnd, options, groupCount, true);\r\n                    var cacheItemEndCount = cacheItemsFromEnd.length;\r\n                    if (cacheItemBeginCount || cacheItemEndCount) {\r\n                        var _options$skip2, _options$take2;\r\n                        options.skip = null !== (_options$skip2 = options.skip) && void 0 !== _options$skip2 ? _options$skip2 : storeLoadOptions.skip;\r\n                        options.take = null !== (_options$take2 = options.take) && void 0 !== _options$take2 ? _options$take2 : storeLoadOptions.take\r\n                    }\r\n                    if (cacheItemBeginCount) {\r\n                        storeLoadOptions.skip += cacheItemBeginCount;\r\n                        storeLoadOptions.take -= cacheItemBeginCount;\r\n                        options.cachedDataPartBegin = cacheItemsFromBegin\r\n                    }\r\n                    if (cacheItemEndCount) {\r\n                        storeLoadOptions.take -= cacheItemEndCount;\r\n                        options.cachedDataPartEnd = cacheItemsFromEnd.reverse()\r\n                    }\r\n                }\r\n            }(items, options, groupCount)\r\n        }\r\n    }\r\n\r\n    function fillItemsFromCache(items, options, groupCount, fromEnd) {\r\n        var _ref, _options$take, _options$cachedData;\r\n        var {\r\n            storeLoadOptions: storeLoadOptions\r\n        } = options;\r\n        var take = null !== (_ref = null !== (_options$take = options.take) && void 0 !== _options$take ? _options$take : storeLoadOptions.take) && void 0 !== _ref ? _ref : 0;\r\n        var cachedItems = null === (_options$cachedData = options.cachedData) || void 0 === _options$cachedData ? void 0 : _options$cachedData.items;\r\n        if (take && cachedItems) {\r\n            var _ref2, _options$skip;\r\n            var skip = null !== (_ref2 = null !== (_options$skip = options.skip) && void 0 !== _options$skip ? _options$skip : storeLoadOptions.skip) && void 0 !== _ref2 ? _ref2 : 0;\r\n            for (var i = 0; i < take; i++) {\r\n                var localIndex = fromEnd ? take - 1 - i : i;\r\n                var cacheItemIndex = localIndex + skip;\r\n                var cacheItem = cachedItems[cacheItemIndex];\r\n                if (void 0 === cacheItem && cacheItemIndex in cachedItems) {\r\n                    return true\r\n                }\r\n                var item = getItemFromCache(options, cacheItem, groupCount, localIndex, take);\r\n                if (item) {\r\n                    items.push(item)\r\n                } else {\r\n                    return false\r\n                }\r\n            }\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    function getItemFromCache(options, cacheItem, groupCount, index, take) {\r\n        if (groupCount && cacheItem) {\r\n            var skips = 0 === index && options.skips || [];\r\n            var takes = index === take - 1 && options.takes || [];\r\n            return function getGroupItemFromCache(cacheItem, groupCount, skips, takes) {\r\n                if (groupCount && cacheItem) {\r\n                    var result = _extends({}, cacheItem);\r\n                    var skip = skips[0] || 0;\r\n                    var take = takes[0];\r\n                    var items = cacheItem.items;\r\n                    if (items) {\r\n                        if (void 0 === take && !items[skip]) {\r\n                            return\r\n                        }\r\n                        result.items = [];\r\n                        if (skips.length) {\r\n                            result.isContinuation = true\r\n                        }\r\n                        if (takes.length) {\r\n                            result.isContinuationOnNextPage = true\r\n                        }\r\n                        for (var i = 0; void 0 === take ? items[i + skip] : i < take; i++) {\r\n                            var childCacheItem = items[i + skip];\r\n                            var item = getGroupItemFromCache(childCacheItem, groupCount - 1, skips.slice(1), takes.slice(1));\r\n                            if (void 0 !== item) {\r\n                                result.items.push(item)\r\n                            } else {\r\n                                return\r\n                            }\r\n                        }\r\n                    }\r\n                    return result\r\n                }\r\n                return cacheItem\r\n            }(cacheItem, groupCount, skips, takes)\r\n        } else {\r\n            return cacheItem\r\n        }\r\n    }\r\n\r\n    function getCacheItem(cacheItem, loadedItem, groupCount, skips) {\r\n        if (groupCount && loadedItem) {\r\n            var result = _extends({}, loadedItem);\r\n            delete result.isContinuation;\r\n            delete result.isContinuationOnNextPage;\r\n            var skip = skips[0] || 0;\r\n            if (loadedItem.items) {\r\n                result.items = (null === cacheItem || void 0 === cacheItem ? void 0 : cacheItem.items) || {};\r\n                loadedItem.items.forEach((item, index) => {\r\n                    var globalIndex = index + skip;\r\n                    var childSkips = 0 === index ? skips.slice(1) : [];\r\n                    result.items[globalIndex] = getCacheItem(result.items[globalIndex], item, groupCount - 1, childSkips)\r\n                })\r\n            }\r\n            return result\r\n        }\r\n        return loadedItem\r\n    }\r\n    return {\r\n        init: function(dataSource, remoteOperations) {\r\n            var that = this;\r\n            that._dataSource = dataSource;\r\n            that._remoteOperations = remoteOperations || {};\r\n            that._isLastPage = !dataSource.isLastPage();\r\n            that._hasLastPage = false;\r\n            that._currentTotalCount = 0;\r\n            that._cachedData = {\r\n                items: {}\r\n            };\r\n            that._lastOperationTypes = {};\r\n            that._eventsStrategy = dataSource._eventsStrategy;\r\n            that._totalCountCorrection = 0;\r\n            that._isLoadingAll = false;\r\n            that.changed = Callbacks();\r\n            that.loadingChanged = Callbacks();\r\n            that.loadError = Callbacks();\r\n            that.customizeStoreLoadOptions = Callbacks();\r\n            that.changing = Callbacks();\r\n            that.pushed = Callbacks();\r\n            that._dataChangedHandler = that._handleDataChanged.bind(that);\r\n            that._customizeStoreLoadOptionsHandler = that._handleCustomizeStoreLoadOptions.bind(that);\r\n            that._dataLoadedHandler = that._handleDataLoaded.bind(that);\r\n            that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\r\n            that._loadErrorHandler = that._handleLoadError.bind(that);\r\n            that._pushHandler = that._handlePush.bind(that);\r\n            that._changingHandler = that._handleChanging.bind(that);\r\n            dataSource.on(\"changed\", that._dataChangedHandler);\r\n            dataSource.on(\"customizeStoreLoadOptions\", that._customizeStoreLoadOptionsHandler);\r\n            dataSource.on(\"customizeLoadResult\", that._dataLoadedHandler);\r\n            dataSource.on(\"loadingChanged\", that._loadingChangedHandler);\r\n            dataSource.on(\"loadError\", that._loadErrorHandler);\r\n            dataSource.on(\"changing\", that._changingHandler);\r\n            dataSource.store().on(\"beforePush\", that._pushHandler);\r\n            each(dataSource, (function(memberName, member) {\r\n                if (!that[memberName] && isFunction(member)) {\r\n                    that[memberName] = function() {\r\n                        return this._dataSource[memberName].apply(this._dataSource, arguments)\r\n                    }\r\n                }\r\n            }))\r\n        },\r\n        remoteOperations: function() {\r\n            return this._remoteOperations\r\n        },\r\n        dispose: function(isSharedDataSource) {\r\n            var dataSource = this._dataSource;\r\n            var store = dataSource.store();\r\n            dataSource.off(\"changed\", this._dataChangedHandler);\r\n            dataSource.off(\"customizeStoreLoadOptions\", this._customizeStoreLoadOptionsHandler);\r\n            dataSource.off(\"customizeLoadResult\", this._dataLoadedHandler);\r\n            dataSource.off(\"loadingChanged\", this._loadingChangedHandler);\r\n            dataSource.off(\"loadError\", this._loadErrorHandler);\r\n            dataSource.off(\"changing\", this._changingHandler);\r\n            store && store.off(\"beforePush\", this._pushHandler);\r\n            if (!isSharedDataSource) {\r\n                dataSource.dispose()\r\n            }\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            var dataSource = this._dataSource;\r\n            if (operationTypes.reload) {\r\n                this.resetCurrentTotalCount();\r\n                this._isLastPage = !dataSource.paginate();\r\n                this._hasLastPage = this._isLastPage\r\n            }\r\n        },\r\n        resetCurrentTotalCount: function() {\r\n            this._currentTotalCount = 0;\r\n            this._totalCountCorrection = 0\r\n        },\r\n        resetCache: function() {\r\n            this._cachedStoreData = void 0;\r\n            this._cachedPagingData = void 0\r\n        },\r\n        resetPagesCache: function() {\r\n            this._cachedData = {\r\n                items: {}\r\n            }\r\n        },\r\n        _needClearStoreDataCache: function() {\r\n            var remoteOperations = this.remoteOperations();\r\n            var operationTypes = calculateOperationTypes(this._lastLoadOptions || {}, {});\r\n            var isLocalOperations = Object.keys(remoteOperations).every(operationName => !operationTypes[operationName] || !remoteOperations[operationName]);\r\n            return !isLocalOperations\r\n        },\r\n        push: function(changes, fromStore) {\r\n            var store = this.store();\r\n            if (this._needClearStoreDataCache()) {\r\n                this._cachedStoreData = void 0\r\n            }\r\n            this._cachedPagingData = void 0;\r\n            this.resetPagesCache(true);\r\n            if (this._cachedStoreData) {\r\n                applyBatch({\r\n                    keyInfo: store,\r\n                    data: this._cachedStoreData,\r\n                    changes: changes\r\n                })\r\n            }\r\n            if (!fromStore) {\r\n                this._applyBatch(changes)\r\n            }\r\n            this.pushed.fire(changes)\r\n        },\r\n        getDataIndexGetter: function() {\r\n            if (!this._dataIndexGetter) {\r\n                var indexByKey;\r\n                var storeData;\r\n                var store = this.store();\r\n                this._dataIndexGetter = data => {\r\n                    var isCacheUpdated = storeData && storeData !== this._cachedStoreData;\r\n                    if (!indexByKey || isCacheUpdated) {\r\n                        storeData = this._cachedStoreData || [];\r\n                        indexByKey = {};\r\n                        for (var i = 0; i < storeData.length; i++) {\r\n                            indexByKey[getKeyHash(store.keyOf(storeData[i]))] = i\r\n                        }\r\n                    }\r\n                    return indexByKey[getKeyHash(store.keyOf(data))]\r\n                }\r\n            }\r\n            return this._dataIndexGetter\r\n        },\r\n        _getKeyInfo: function() {\r\n            return this.store()\r\n        },\r\n        _applyBatch: function(changes) {\r\n            var keyInfo = this._getKeyInfo();\r\n            var dataSource = this._dataSource;\r\n            var groupCount = gridCore.normalizeSortingInfo(this.group()).length;\r\n            var totalCount = this.totalCount();\r\n            var isVirtualMode = \"virtual\" === this.option(\"scrolling.mode\");\r\n            changes = changes.filter((function(change) {\r\n                return !dataSource.paginate() || \"insert\" !== change.type || void 0 !== change.index\r\n            }));\r\n            var getItemCount = () => groupCount ? this.itemsCount() : this.items().length;\r\n            var oldItemCount = getItemCount();\r\n            applyBatch({\r\n                keyInfo: keyInfo,\r\n                data: this._items,\r\n                changes: changes,\r\n                groupCount: groupCount,\r\n                useInsertIndex: true\r\n            });\r\n            applyBatch({\r\n                keyInfo: keyInfo,\r\n                data: dataSource.items(),\r\n                changes: changes,\r\n                groupCount: groupCount,\r\n                useInsertIndex: true\r\n            });\r\n            if (this._currentTotalCount > 0 || isVirtualMode && totalCount === oldItemCount) {\r\n                this._totalCountCorrection += getItemCount() - oldItemCount\r\n            }\r\n            changes.splice(0, changes.length)\r\n        },\r\n        _handlePush: function(_ref5) {\r\n            var {\r\n                changes: changes\r\n            } = _ref5;\r\n            this.push(changes, true)\r\n        },\r\n        _handleChanging: function(e) {\r\n            this.changing.fire(e);\r\n            this._applyBatch(e.changes)\r\n        },\r\n        _needCleanCacheByOperation: function(operationType, remoteOperations) {\r\n            var operationTypesByOrder = [\"filtering\", \"sorting\", \"paging\"];\r\n            var operationTypeIndex = operationTypesByOrder.indexOf(operationType);\r\n            var currentOperationTypes = operationTypeIndex >= 0 ? operationTypesByOrder.slice(operationTypeIndex) : [operationType];\r\n            return currentOperationTypes.some(operationType => remoteOperations[operationType])\r\n        },\r\n        _customizeRemoteOperations: function(options, operationTypes) {\r\n            var cachedStoreData = this._cachedStoreData;\r\n            var cachedPagingData = this._cachedPagingData;\r\n            var cachedData = this._cachedData;\r\n            if (options.storeLoadOptions.filter && !options.remoteOperations.filtering || options.storeLoadOptions.sort && !options.remoteOperations.sorting) {\r\n                options.remoteOperations = {\r\n                    filtering: options.remoteOperations.filtering\r\n                }\r\n            }\r\n            if (operationTypes.fullReload) {\r\n                cachedStoreData = void 0;\r\n                cachedPagingData = void 0;\r\n                cachedData = {\r\n                    items: {}\r\n                }\r\n            } else {\r\n                if (operationTypes.reload) {\r\n                    cachedPagingData = void 0;\r\n                    cachedData = {\r\n                        items: {}\r\n                    }\r\n                } else if (operationTypes.groupExpanding) {\r\n                    cachedData = {\r\n                        items: {}\r\n                    }\r\n                }\r\n                each(operationTypes, (operationType, value) => {\r\n                    if (value && this._needCleanCacheByOperation(operationType, options.remoteOperations)) {\r\n                        cachedStoreData = void 0;\r\n                        cachedPagingData = void 0\r\n                    }\r\n                })\r\n            }\r\n            if (cachedPagingData) {\r\n                options.remoteOperations.paging = false\r\n            }\r\n            options.cachedStoreData = cachedStoreData;\r\n            options.cachedPagingData = cachedPagingData;\r\n            options.cachedData = cachedData;\r\n            if (!options.isCustomLoading) {\r\n                this._cachedStoreData = cachedStoreData;\r\n                this._cachedPagingData = cachedPagingData;\r\n                this._cachedData = cachedData\r\n            }\r\n        },\r\n        _handleCustomizeStoreLoadOptions(options) {\r\n            var _options$data;\r\n            this._handleDataLoading(options);\r\n            if (!(0 === (null === (_options$data = options.data) || void 0 === _options$data ? void 0 : _options$data.length))) {\r\n                options.data = getPageDataFromCache(options, true) || options.cachedStoreData\r\n            }\r\n        },\r\n        _handleDataLoading: function(options) {\r\n            var dataSource = this._dataSource;\r\n            var lastLoadOptions = this._lastLoadOptions;\r\n            this.customizeStoreLoadOptions.fire(options);\r\n            options.delay = this.option(\"loadingTimeout\");\r\n            options.originalStoreLoadOptions = options.storeLoadOptions;\r\n            options.remoteOperations = extend({}, this.remoteOperations());\r\n            var isFullReload = !this.isLoaded() && !this._isRefreshing;\r\n            if (this.option(\"integrationOptions.renderedOnServer\") && !this.isLoaded()) {\r\n                options.delay = void 0\r\n            }\r\n            var loadOptions = extend({\r\n                pageIndex: this.pageIndex(),\r\n                pageSize: this.pageSize()\r\n            }, options.storeLoadOptions);\r\n            var operationTypes = calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload);\r\n            this._customizeRemoteOperations(options, operationTypes);\r\n            if (!options.isCustomLoading) {\r\n                var isRefreshing = this._isRefreshing;\r\n                options.pageIndex = dataSource.pageIndex();\r\n                options.lastLoadOptions = loadOptions;\r\n                options.operationTypes = operationTypes;\r\n                this._loadingOperationTypes = operationTypes;\r\n                this._isRefreshing = true;\r\n                when(isRefreshing || this._isRefreshed || this.refresh(options, operationTypes)).done(() => {\r\n                    if (this._lastOperationId === options.operationId) {\r\n                        this._isRefreshed = true;\r\n                        this.load().always(() => {\r\n                            this._isRefreshed = false\r\n                        })\r\n                    }\r\n                }).fail(() => {\r\n                    dataSource.cancel(options.operationId)\r\n                }).always(() => {\r\n                    this._isRefreshing = false\r\n                });\r\n                dataSource.cancel(this._lastOperationId);\r\n                this._lastOperationId = options.operationId;\r\n                if (this._isRefreshing) {\r\n                    dataSource.cancel(this._lastOperationId)\r\n                }\r\n            }\r\n            this._handleDataLoadingCore(options)\r\n        },\r\n        _handleDataLoadingCore: function(options) {\r\n            var remoteOperations = options.remoteOperations;\r\n            options.loadOptions = {};\r\n            var cachedExtra = options.cachedData.extra;\r\n            var localLoadOptionNames = {\r\n                filter: !remoteOperations.filtering,\r\n                sort: !remoteOperations.sorting,\r\n                group: !remoteOperations.grouping,\r\n                summary: !remoteOperations.summary,\r\n                skip: !remoteOperations.paging,\r\n                take: !remoteOperations.paging,\r\n                requireTotalCount: cachedExtra && \"totalCount\" in cachedExtra || !remoteOperations.paging\r\n            };\r\n            each(options.storeLoadOptions, (function(optionName, optionValue) {\r\n                if (localLoadOptionNames[optionName]) {\r\n                    options.loadOptions[optionName] = optionValue;\r\n                    delete options.storeLoadOptions[optionName]\r\n                }\r\n            }));\r\n            if (cachedExtra) {\r\n                options.extra = cachedExtra\r\n            }\r\n        },\r\n        _handleDataLoaded: function(options) {\r\n            var loadOptions = options.loadOptions;\r\n            var localPaging = options.remoteOperations && !options.remoteOperations.paging;\r\n            var cachedData = options.cachedData;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var needCache = false !== this.option(\"cacheEnabled\") && storeLoadOptions;\r\n            var needPageCache = needCache && !options.isCustomLoading && cachedData && (!localPaging || storeLoadOptions.group);\r\n            var needPagingCache = needCache && localPaging;\r\n            var needStoreCache = needPagingCache && !options.isCustomLoading;\r\n            if (!loadOptions) {\r\n                this._dataSource.cancel(options.operationId);\r\n                return\r\n            }\r\n            if (localPaging) {\r\n                options.skip = loadOptions.skip;\r\n                options.take = loadOptions.take;\r\n                delete loadOptions.skip;\r\n                delete loadOptions.take\r\n            }\r\n            if (loadOptions.group) {\r\n                loadOptions.group = options.group || loadOptions.group\r\n            }\r\n            var groupCount = gridCore.normalizeSortingInfo(options.group || storeLoadOptions.group || loadOptions.group).length;\r\n            if (options.cachedDataPartBegin) {\r\n                options.data = options.cachedDataPartBegin.concat(options.data)\r\n            }\r\n            if (options.cachedDataPartEnd) {\r\n                options.data = options.data.concat(options.cachedDataPartEnd)\r\n            }\r\n            if (!needPageCache || !getPageDataFromCache(options)) {\r\n                if (needPagingCache && options.cachedPagingData) {\r\n                    options.data = cloneItems(options.cachedPagingData, groupCount)\r\n                } else {\r\n                    if (needStoreCache) {\r\n                        if (!this._cachedStoreData) {\r\n                            this._cachedStoreData = cloneItems(options.data, gridCore.normalizeSortingInfo(storeLoadOptions.group).length)\r\n                        } else if (options.mergeStoreLoadData) {\r\n                            options.data = this._cachedStoreData = this._cachedStoreData.concat(options.data)\r\n                        }\r\n                    }\r\n                    new ArrayStore(options.data).load(loadOptions).done(data => {\r\n                        options.data = data;\r\n                        if (needStoreCache) {\r\n                            this._cachedPagingData = cloneItems(options.data, groupCount)\r\n                        }\r\n                    }).fail(error => {\r\n                        options.data = (new Deferred).reject(error)\r\n                    })\r\n                }\r\n                if (loadOptions.requireTotalCount && localPaging) {\r\n                    options.extra = isPlainObject(options.extra) ? options.extra : {};\r\n                    options.extra.totalCount = options.data.length\r\n                }\r\n                if (options.extra && options.extra.totalCount >= 0 && (false === storeLoadOptions.requireTotalCount || false === loadOptions.requireTotalCount)) {\r\n                    options.extra.totalCount = -1\r\n                }\r\n                this._handleDataLoadedCore(options);\r\n                if (needPageCache) {\r\n                    cachedData.extra = cachedData.extra || extend({}, options.extra);\r\n                    when(options.data).done(data => {\r\n                        ! function(options, data, groupCount) {\r\n                            var _ref3, _options$skip3, _ref4, _options$take3;\r\n                            var {\r\n                                storeLoadOptions: storeLoadOptions\r\n                            } = options;\r\n                            var skip = null !== (_ref3 = null !== (_options$skip3 = options.skip) && void 0 !== _options$skip3 ? _options$skip3 : storeLoadOptions.skip) && void 0 !== _ref3 ? _ref3 : 0;\r\n                            var take = null !== (_ref4 = null !== (_options$take3 = options.take) && void 0 !== _options$take3 ? _options$take3 : storeLoadOptions.take) && void 0 !== _ref4 ? _ref4 : 0;\r\n                            for (var i = 0; i < take; i++) {\r\n                                var globalIndex = i + skip;\r\n                                var cacheItems = options.cachedData.items;\r\n                                var skips = 0 === i && options.skips || [];\r\n                                cacheItems[globalIndex] = getCacheItem(cacheItems[globalIndex], data[i], groupCount, skips)\r\n                            }\r\n                        }(options, data, groupCount)\r\n                    })\r\n                }\r\n            }\r\n            when(options.data).done(() => {\r\n                if (options.lastLoadOptions) {\r\n                    this._lastLoadOptions = options.lastLoadOptions;\r\n                    Object.keys(options.operationTypes).forEach(operationType => {\r\n                        this._lastOperationTypes[operationType] = this._lastOperationTypes[operationType] || options.operationTypes[operationType]\r\n                    })\r\n                }\r\n            });\r\n            options.storeLoadOptions = options.originalStoreLoadOptions\r\n        },\r\n        _handleDataLoadedCore: function(options) {\r\n            if (options.remoteOperations && !options.remoteOperations.paging && Array.isArray(options.data)) {\r\n                if (void 0 !== options.skip) {\r\n                    options.data = options.data.slice(options.skip)\r\n                }\r\n                if (void 0 !== options.take) {\r\n                    options.data = options.data.slice(0, options.take)\r\n                }\r\n            }\r\n        },\r\n        _handleLoadingChanged: function(isLoading) {\r\n            this.loadingChanged.fire(isLoading)\r\n        },\r\n        _handleLoadError: function(error) {\r\n            this.loadError.fire(error);\r\n            this.changed.fire({\r\n                changeType: \"loadError\",\r\n                error: error\r\n            })\r\n        },\r\n        _loadPageSize: function() {\r\n            return this.pageSize()\r\n        },\r\n        _handleDataChanged: function(args) {\r\n            var currentTotalCount;\r\n            var dataSource = this._dataSource;\r\n            var isLoading = false;\r\n            var isDataLoading = !args || isDefined(args.changeType);\r\n            var itemsCount = this.itemsCount();\r\n            if (isDataLoading) {\r\n                this._isLastPage = !itemsCount || !this._loadPageSize() || itemsCount < this._loadPageSize();\r\n                if (this._isLastPage) {\r\n                    this._hasLastPage = true\r\n                }\r\n            }\r\n            if (dataSource.totalCount() >= 0) {\r\n                if (dataSource.pageIndex() >= this.pageCount()) {\r\n                    dataSource.pageIndex(this.pageCount() - 1);\r\n                    this.pageIndex(dataSource.pageIndex());\r\n                    this.resetPagesCache();\r\n                    dataSource.load();\r\n                    isLoading = true\r\n                }\r\n            } else if (isDataLoading) {\r\n                currentTotalCount = dataSource.pageIndex() * this.pageSize() + itemsCount;\r\n                if (currentTotalCount > this._currentTotalCount) {\r\n                    this._currentTotalCount = currentTotalCount;\r\n                    if (0 === dataSource.pageIndex() || !this.option(\"scrolling.legacyMode\")) {\r\n                        this._totalCountCorrection = 0\r\n                    }\r\n                }\r\n                if (0 === itemsCount && dataSource.pageIndex() >= this.pageCount()) {\r\n                    dataSource.pageIndex(this.pageCount() - 1);\r\n                    if (\"infinite\" !== this.option(\"scrolling.mode\")) {\r\n                        dataSource.load();\r\n                        isLoading = true\r\n                    }\r\n                }\r\n            }\r\n            if (!isLoading) {\r\n                this._operationTypes = this._lastOperationTypes;\r\n                this._lastOperationTypes = {};\r\n                this.component._optionCache = {};\r\n                this.changed.fire(args);\r\n                this.component._optionCache = void 0\r\n            }\r\n        },\r\n        _scheduleCustomLoadCallbacks: function(deferred) {\r\n            var that = this;\r\n            that._isCustomLoading = true;\r\n            deferred.always((function() {\r\n                that._isCustomLoading = false\r\n            }))\r\n        },\r\n        loadingOperationTypes: function() {\r\n            return this._loadingOperationTypes\r\n        },\r\n        operationTypes: function() {\r\n            return this._operationTypes\r\n        },\r\n        lastLoadOptions: function() {\r\n            return this._lastLoadOptions || {}\r\n        },\r\n        isLastPage: function() {\r\n            return this._isLastPage\r\n        },\r\n        totalCount: function() {\r\n            return parseInt((this._currentTotalCount || this._dataSource.totalCount()) + this._totalCountCorrection)\r\n        },\r\n        totalCountCorrection: function() {\r\n            return this._totalCountCorrection\r\n        },\r\n        itemsCount: function() {\r\n            return this._dataSource.items().length\r\n        },\r\n        totalItemsCount: function() {\r\n            return this.totalCount()\r\n        },\r\n        pageSize: function() {\r\n            var dataSource = this._dataSource;\r\n            if (!arguments.length && !dataSource.paginate()) {\r\n                return 0\r\n            }\r\n            return dataSource.pageSize.apply(dataSource, arguments)\r\n        },\r\n        pageCount: function() {\r\n            var count = this.totalItemsCount() - this._totalCountCorrection;\r\n            var pageSize = this.pageSize();\r\n            if (pageSize && count > 0) {\r\n                return Math.max(1, Math.ceil(count / pageSize))\r\n            }\r\n            return 1\r\n        },\r\n        hasKnownLastPage: function() {\r\n            return this._hasLastPage || this._dataSource.totalCount() >= 0\r\n        },\r\n        loadFromStore: function(loadOptions, store) {\r\n            var dataSource = this._dataSource;\r\n            var d = new Deferred;\r\n            if (!dataSource) {\r\n                return\r\n            }\r\n            store = store || dataSource.store();\r\n            store.load(loadOptions).done((function(data, extra) {\r\n                if (data && !Array.isArray(data) && Array.isArray(data.data)) {\r\n                    extra = data;\r\n                    data = data.data\r\n                }\r\n                d.resolve(data, extra)\r\n            })).fail(d.reject);\r\n            return d\r\n        },\r\n        isCustomLoading: function() {\r\n            return !!this._isCustomLoading\r\n        },\r\n        load: function(options) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var d = new Deferred;\r\n            if (options) {\r\n                var store = dataSource.store();\r\n                var dataSourceLoadOptions = dataSource.loadOptions();\r\n                var loadResult = {\r\n                    storeLoadOptions: options,\r\n                    isCustomLoading: true\r\n                };\r\n                each(store._customLoadOptions() || [], (function(_, optionName) {\r\n                    if (!(optionName in loadResult.storeLoadOptions)) {\r\n                        loadResult.storeLoadOptions[optionName] = dataSourceLoadOptions[optionName]\r\n                    }\r\n                }));\r\n                this._isLoadingAll = options.isLoadingAll;\r\n                that._scheduleCustomLoadCallbacks(d);\r\n                dataSource._scheduleLoadCallbacks(d);\r\n                that._handleCustomizeStoreLoadOptions(loadResult);\r\n                ! function(action, timeout) {\r\n                    if (isDefined(timeout)) {\r\n                        executeAsync(action, timeout)\r\n                    } else {\r\n                        action()\r\n                    }\r\n                }((function() {\r\n                    if (!dataSource.store()) {\r\n                        return d.reject(\"canceled\")\r\n                    }\r\n                    when(loadResult.data || that.loadFromStore(loadResult.storeLoadOptions)).done((function(data, extra) {\r\n                        loadResult.data = data;\r\n                        loadResult.extra = extra || {};\r\n                        that._handleDataLoaded(loadResult);\r\n                        if (options.requireTotalCount && void 0 === loadResult.extra.totalCount) {\r\n                            loadResult.extra.totalCount = store.totalCount(loadResult.storeLoadOptions)\r\n                        }\r\n                        when(loadResult.data, loadResult.extra.totalCount).done((function(data, totalCount) {\r\n                            loadResult.extra.totalCount = totalCount;\r\n                            d.resolve(data, loadResult.extra)\r\n                        })).fail(d.reject)\r\n                    })).fail(d.reject)\r\n                }), that.option(\"loadingTimeout\"));\r\n                return d.fail((function() {\r\n                    that._eventsStrategy.fireEvent(\"loadError\", arguments)\r\n                })).always(() => {\r\n                    this._isLoadingAll = false\r\n                }).promise()\r\n            } else {\r\n                return dataSource.load()\r\n            }\r\n        },\r\n        reload: function(full) {\r\n            return full ? this._dataSource.reload() : this._dataSource.load()\r\n        },\r\n        getCachedStoreData: function() {\r\n            return this._cachedStoreData\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.data_source_adapter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport DataSourceAdapter from \"../grid_core/ui.grid_core.data_source_adapter\";\r\nvar dataSourceAdapterType = DataSourceAdapter;\r\nexport default {\r\n    extend: function(extender) {\r\n        dataSourceAdapterType = dataSourceAdapterType.inherit(extender)\r\n    },\r\n    create: function(component) {\r\n        return new dataSourceAdapterType(component)\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.data_controller.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport ArrayStore from \"../../data/array_store\";\r\nimport CustomStore from \"../../data/custom_store\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    noop,\r\n    deferRender,\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport DataHelperMixin from \"../../data_helper\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    findChanges\r\n} from \"../../core/utils/array_compare\";\r\nexport var dataControllerModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            loadingTimeout: 0,\r\n            dataSource: null,\r\n            cacheEnabled: true,\r\n            repaintChangesOnly: false,\r\n            highlightChanges: false,\r\n            onDataErrorOccurred: null,\r\n            remoteOperations: \"auto\",\r\n            paging: {\r\n                enabled: true,\r\n                pageSize: void 0,\r\n                pageIndex: void 0\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        data: modules.Controller.inherit({}).include(DataHelperMixin).inherit(function() {\r\n            var changePaging = function(that, optionName, value) {\r\n                var dataSource = that._dataSource;\r\n                if (dataSource) {\r\n                    if (void 0 !== value) {\r\n                        var oldValue = that._getPagingOptionValue(optionName);\r\n                        if (oldValue !== value) {\r\n                            if (\"pageSize\" === optionName) {\r\n                                dataSource.pageIndex(0)\r\n                            }\r\n                            dataSource[optionName](value);\r\n                            that._skipProcessingPagingChange = true;\r\n                            that.option(\"paging.\" + optionName, value);\r\n                            that._skipProcessingPagingChange = false;\r\n                            var pageIndex = dataSource.pageIndex();\r\n                            return dataSource[\"pageIndex\" === optionName ? \"load\" : \"reload\"]().done(() => that.pageChanged.fire(pageIndex))\r\n                        }\r\n                        return Deferred().resolve().promise()\r\n                    }\r\n                    return dataSource[optionName]()\r\n                }\r\n                return 0\r\n            };\r\n            var members = {\r\n                init: function() {\r\n                    var that = this;\r\n                    that._items = [];\r\n                    that._cachedProcessedItems = null;\r\n                    that._columnsController = that.getController(\"columns\");\r\n                    that._currentOperationTypes = null;\r\n                    that._dataChangedHandler = e => {\r\n                        that._currentOperationTypes = this._dataSource.operationTypes();\r\n                        that._handleDataChanged(e);\r\n                        that._currentOperationTypes = null\r\n                    };\r\n                    that._columnsChangedHandler = that._handleColumnsChanged.bind(that);\r\n                    that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\r\n                    that._loadErrorHandler = that._handleLoadError.bind(that);\r\n                    that._customizeStoreLoadOptionsHandler = that._handleCustomizeStoreLoadOptions.bind(that);\r\n                    that._changingHandler = that._handleChanging.bind(that);\r\n                    that._dataPushedHandler = that._handleDataPushed.bind(that);\r\n                    that._columnsController.columnsChanged.add(that._columnsChangedHandler);\r\n                    that._isLoading = false;\r\n                    that._isCustomLoading = false;\r\n                    that._repaintChangesOnly = void 0;\r\n                    that._changes = [];\r\n                    that.createAction(\"onDataErrorOccurred\");\r\n                    that.dataErrorOccurred.add((function(error) {\r\n                        return that.executeAction(\"onDataErrorOccurred\", {\r\n                            error: error\r\n                        })\r\n                    }));\r\n                    that._refreshDataSource()\r\n                },\r\n                _getPagingOptionValue: function(optionName) {\r\n                    return this._dataSource[optionName]()\r\n                },\r\n                callbackNames: function() {\r\n                    return [\"changed\", \"loadingChanged\", \"dataErrorOccurred\", \"pageChanged\", \"dataSourceChanged\", \"pushed\"]\r\n                },\r\n                callbackFlags: function(name) {\r\n                    if (\"dataErrorOccurred\" === name) {\r\n                        return {\r\n                            stopOnFalse: true\r\n                        }\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    return [\"beginCustomLoading\", \"endCustomLoading\", \"refresh\", \"filter\", \"clearFilter\", \"getCombinedFilter\", \"keyOf\", \"byKey\", \"getDataByKeys\", \"pageIndex\", \"pageSize\", \"pageCount\", \"totalCount\", \"_disposeDataSource\", \"getKeyByRowIndex\", \"getRowIndexByKey\", \"getDataSource\", \"getVisibleRows\", \"repaintRows\"]\r\n                },\r\n                reset: function() {\r\n                    this._columnsController.reset();\r\n                    this._items = [];\r\n                    this._refreshDataSource()\r\n                },\r\n                optionChanged: function(args) {\r\n                    var that = this;\r\n                    var dataSource;\r\n\r\n                    function handled() {\r\n                        args.handled = true\r\n                    }\r\n                    if (\"dataSource\" === args.name && args.name === args.fullName && (args.value === args.previousValue || that.option(\"columns\") && Array.isArray(args.value) && Array.isArray(args.previousValue))) {\r\n                        var _this$_dataSource;\r\n                        var isValueChanged = args.value !== args.previousValue;\r\n                        if (isValueChanged) {\r\n                            var store = that.store();\r\n                            if (store) {\r\n                                store._array = args.value\r\n                            }\r\n                        }\r\n                        handled();\r\n                        var isParasiteChange = Array.isArray(args.value) && !isValueChanged && (null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.isLoading());\r\n                        if (!isParasiteChange) {\r\n                            that.refresh(that.option(\"repaintChangesOnly\"))\r\n                        }\r\n                        return\r\n                    }\r\n                    switch (args.name) {\r\n                        case \"cacheEnabled\":\r\n                        case \"repaintChangesOnly\":\r\n                        case \"highlightChanges\":\r\n                        case \"loadingTimeout\":\r\n                            handled();\r\n                            break;\r\n                        case \"remoteOperations\":\r\n                        case \"keyExpr\":\r\n                        case \"dataSource\":\r\n                        case \"scrolling\":\r\n                            handled();\r\n                            that.reset();\r\n                            break;\r\n                        case \"paging\":\r\n                            dataSource = that.dataSource();\r\n                            if (dataSource && that._setPagingOptions(dataSource)) {\r\n                                var pageIndex = dataSource.pageIndex();\r\n                                dataSource.load().done(() => that.pageChanged.fire(pageIndex))\r\n                            }\r\n                            handled();\r\n                            break;\r\n                        case \"rtlEnabled\":\r\n                            that.reset();\r\n                            break;\r\n                        case \"columns\":\r\n                            dataSource = that.dataSource();\r\n                            if (dataSource && dataSource.isLoading() && args.name === args.fullName) {\r\n                                this._useSortingGroupingFromColumns = true;\r\n                                dataSource.load()\r\n                            }\r\n                            break;\r\n                        default:\r\n                            that.callBase(args)\r\n                    }\r\n                },\r\n                isReady: function() {\r\n                    return !this._isLoading\r\n                },\r\n                getDataSource: function() {\r\n                    return this._dataSource && this._dataSource._dataSource\r\n                },\r\n                getCombinedFilter: function(returnDataField) {\r\n                    return this.combinedFilter(void 0, returnDataField)\r\n                },\r\n                combinedFilter: function(filter, returnDataField) {\r\n                    var dataSource = this._dataSource;\r\n                    var columnsController = this._columnsController;\r\n                    if (dataSource) {\r\n                        if (void 0 === filter) {\r\n                            filter = dataSource.filter()\r\n                        }\r\n                        var additionalFilter = this._calculateAdditionalFilter();\r\n                        if (additionalFilter) {\r\n                            if (columnsController.isDataSourceApplied() || columnsController.isAllDataTypesDefined()) {\r\n                                filter = gridCoreUtils.combineFilters([additionalFilter, filter])\r\n                            }\r\n                        }\r\n                        filter = columnsController.updateFilter(filter, returnDataField || dataSource.remoteOperations().filtering)\r\n                    }\r\n                    return filter\r\n                },\r\n                waitReady: function() {\r\n                    if (this._updateLockCount) {\r\n                        this._readyDeferred = new Deferred;\r\n                        return this._readyDeferred\r\n                    }\r\n                    return when()\r\n                },\r\n                _endUpdateCore: function() {\r\n                    var changes = this._changes;\r\n                    if (changes.length) {\r\n                        this._changes = [];\r\n                        var repaintChangesOnly = changes.every(change => change.repaintChangesOnly);\r\n                        this.updateItems(1 === changes.length ? changes[0] : {\r\n                            repaintChangesOnly: repaintChangesOnly\r\n                        })\r\n                    }\r\n                    if (this._readyDeferred) {\r\n                        this._readyDeferred.resolve();\r\n                        this._readyDeferred = null\r\n                    }\r\n                },\r\n                _handleCustomizeStoreLoadOptions: function(e) {\r\n                    var _storeLoadOptions$fil;\r\n                    var columnsController = this._columnsController;\r\n                    var dataSource = this._dataSource;\r\n                    var storeLoadOptions = e.storeLoadOptions;\r\n                    if (e.isCustomLoading && !storeLoadOptions.isLoadingAll) {\r\n                        return\r\n                    }\r\n                    storeLoadOptions.filter = this.combinedFilter(storeLoadOptions.filter);\r\n                    if (1 === (null === (_storeLoadOptions$fil = storeLoadOptions.filter) || void 0 === _storeLoadOptions$fil ? void 0 : _storeLoadOptions$fil.length) && \"!\" === storeLoadOptions.filter[0]) {\r\n                        e.data = [];\r\n                        e.extra = e.extra || {};\r\n                        e.extra.totalCount = 0\r\n                    }\r\n                    if (!columnsController.isDataSourceApplied()) {\r\n                        columnsController.updateColumnDataTypes(dataSource)\r\n                    }\r\n                    this._columnsUpdating = true;\r\n                    columnsController.updateSortingGrouping(dataSource, !this._useSortingGroupingFromColumns);\r\n                    this._columnsUpdating = false;\r\n                    storeLoadOptions.sort = columnsController.getSortDataSourceParameters();\r\n                    storeLoadOptions.group = columnsController.getGroupDataSourceParameters();\r\n                    dataSource.sort(storeLoadOptions.sort);\r\n                    dataSource.group(storeLoadOptions.group);\r\n                    storeLoadOptions.sort = columnsController.getSortDataSourceParameters(!dataSource.remoteOperations().sorting);\r\n                    e.group = columnsController.getGroupDataSourceParameters(!dataSource.remoteOperations().grouping)\r\n                },\r\n                _handleColumnsChanged: function(e) {\r\n                    var that = this;\r\n                    var changeTypes = e.changeTypes;\r\n                    var optionNames = e.optionNames;\r\n                    var filterValue;\r\n                    var filterValues;\r\n                    var filterApplied;\r\n                    if (changeTypes.sorting || changeTypes.grouping) {\r\n                        if (that._dataSource && !that._columnsUpdating) {\r\n                            that._dataSource.group(that._columnsController.getGroupDataSourceParameters());\r\n                            that._dataSource.sort(that._columnsController.getSortDataSourceParameters());\r\n                            that.reload()\r\n                        }\r\n                    } else if (changeTypes.columns) {\r\n                        filterValues = that._columnsController.columnOption(e.columnIndex, \"filterValues\");\r\n                        if (optionNames.filterValues || optionNames.filterType && Array.isArray(filterValues) || optionNames.filterValue || optionNames.selectedFilterOperation || optionNames.allowFiltering) {\r\n                            filterValue = that._columnsController.columnOption(e.columnIndex, \"filterValue\");\r\n                            if (Array.isArray(filterValues) || void 0 === e.columnIndex || isDefined(filterValue) || !optionNames.selectedFilterOperation || optionNames.filterValue) {\r\n                                that._applyFilter();\r\n                                filterApplied = true\r\n                            }\r\n                        }\r\n                        if (!that._needApplyFilter && !gridCoreUtils.checkChanges(optionNames, [\"width\", \"visibleWidth\", \"filterValue\", \"bufferedFilterValue\", \"selectedFilterOperation\", \"filterValues\", \"filterType\"])) {\r\n                            that._columnsController.columnsChanged.add((function updateItemsHandler() {\r\n                                that._columnsController.columnsChanged.remove(updateItemsHandler);\r\n                                that.updateItems({\r\n                                    virtualColumnsScrolling: e.changeTypes.virtualColumnsScrolling\r\n                                })\r\n                            }))\r\n                        }\r\n                        if (isDefined(optionNames.visible)) {\r\n                            var column = that._columnsController.columnOption(e.columnIndex);\r\n                            if (column && (isDefined(column.filterValue) || isDefined(column.filterValues))) {\r\n                                that._applyFilter();\r\n                                filterApplied = true\r\n                            }\r\n                        }\r\n                    }\r\n                    if (!filterApplied && changeTypes.filtering) {\r\n                        that.reload()\r\n                    }\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var columnsController = that._columnsController;\r\n                    var isAsyncDataSourceApplying = false;\r\n                    this._useSortingGroupingFromColumns = false;\r\n                    if (dataSource && !that._isDataSourceApplying) {\r\n                        that._isDataSourceApplying = true;\r\n                        when(that._columnsController.applyDataSource(dataSource)).done((function() {\r\n                            if (that._isLoading) {\r\n                                that._handleLoadingChanged(false)\r\n                            }\r\n                            if (isAsyncDataSourceApplying && e && e.isDelayed) {\r\n                                e.isDelayed = false\r\n                            }\r\n                            that._isDataSourceApplying = false;\r\n                            var needApplyFilter = that._needApplyFilter;\r\n                            that._needApplyFilter = false;\r\n                            if (needApplyFilter && !that._isAllDataTypesDefined && (additionalFilter = that._calculateAdditionalFilter(), additionalFilter && additionalFilter.length)) {\r\n                                errors.log(\"W1005\", that.component.NAME);\r\n                                that._applyFilter()\r\n                            } else {\r\n                                that.updateItems(e, true)\r\n                            }\r\n                            var additionalFilter\r\n                        })).fail((function() {\r\n                            that._isDataSourceApplying = false\r\n                        }));\r\n                        if (that._isDataSourceApplying) {\r\n                            isAsyncDataSourceApplying = true;\r\n                            that._handleLoadingChanged(true)\r\n                        }\r\n                        that._needApplyFilter = !that._columnsController.isDataSourceApplied();\r\n                        that._isAllDataTypesDefined = columnsController.isAllDataTypesDefined()\r\n                    }\r\n                },\r\n                _handleLoadingChanged: function(isLoading) {\r\n                    this._isLoading = isLoading;\r\n                    this._fireLoadingChanged()\r\n                },\r\n                _handleLoadError: function(e) {\r\n                    this.dataErrorOccurred.fire(e)\r\n                },\r\n                _handleDataPushed: function(changes) {\r\n                    this.pushed.fire(changes)\r\n                },\r\n                fireError: function() {\r\n                    this.dataErrorOccurred.fire(errors.Error.apply(errors, arguments))\r\n                },\r\n                _setPagingOptions: function(dataSource) {\r\n                    var pageIndex = this.option(\"paging.pageIndex\");\r\n                    var pageSize = this.option(\"paging.pageSize\");\r\n                    var pagingEnabled = this.option(\"paging.enabled\");\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    var appendMode = \"infinite\" === scrollingMode;\r\n                    var virtualMode = \"virtual\" === scrollingMode;\r\n                    var paginate = pagingEnabled || virtualMode || appendMode;\r\n                    var isChanged = false;\r\n                    dataSource.requireTotalCount(!appendMode);\r\n                    if (void 0 !== pagingEnabled && dataSource.paginate() !== paginate) {\r\n                        dataSource.paginate(paginate);\r\n                        isChanged = true\r\n                    }\r\n                    if (void 0 !== pageSize && dataSource.pageSize() !== pageSize) {\r\n                        dataSource.pageSize(pageSize);\r\n                        isChanged = true\r\n                    }\r\n                    if (void 0 !== pageIndex && dataSource.pageIndex() !== pageIndex) {\r\n                        dataSource.pageIndex(pageIndex);\r\n                        isChanged = true\r\n                    }\r\n                    return isChanged\r\n                },\r\n                _getSpecificDataSourceOption: function() {\r\n                    var dataSource = this.option(\"dataSource\");\r\n                    if (Array.isArray(dataSource)) {\r\n                        return {\r\n                            store: {\r\n                                type: \"array\",\r\n                                data: dataSource,\r\n                                key: this.option(\"keyExpr\")\r\n                            }\r\n                        }\r\n                    }\r\n                    return dataSource\r\n                },\r\n                _initDataSource: function() {\r\n                    var dataSource = this.option(\"dataSource\");\r\n                    var oldDataSource = this._dataSource;\r\n                    this.callBase();\r\n                    dataSource = this._dataSource;\r\n                    this._useSortingGroupingFromColumns = true;\r\n                    this._cachedProcessedItems = null;\r\n                    if (dataSource) {\r\n                        this._setPagingOptions(dataSource);\r\n                        this.setDataSource(dataSource)\r\n                    } else if (oldDataSource) {\r\n                        this.updateItems()\r\n                    }\r\n                },\r\n                _loadDataSource: function() {\r\n                    var dataSource = this._dataSource;\r\n                    var result = new Deferred;\r\n                    when(this._columnsController.refresh(true)).always((function() {\r\n                        if (dataSource) {\r\n                            dataSource.load().done(result.resolve).fail(result.reject)\r\n                        } else {\r\n                            result.resolve()\r\n                        }\r\n                    }));\r\n                    return result.promise()\r\n                },\r\n                _beforeProcessItems: function(items) {\r\n                    return items.slice(0)\r\n                },\r\n                getRowIndexDelta: function() {\r\n                    return 0\r\n                },\r\n                _processItems: function(items, change) {\r\n                    var that = this;\r\n                    var rowIndexDelta = that.getRowIndexDelta();\r\n                    var changeType = change.changeType;\r\n                    var visibleColumns = that._columnsController.getVisibleColumns(null, \"loadingAll\" === changeType);\r\n                    var visibleItems = that._items;\r\n                    var lastVisibleItem = \"append\" === changeType && visibleItems.length > 0 ? visibleItems[visibleItems.length - 1] : null;\r\n                    var dataIndex = isDefined(null === lastVisibleItem || void 0 === lastVisibleItem ? void 0 : lastVisibleItem.dataIndex) ? lastVisibleItem.dataIndex + 1 : 0;\r\n                    var options = {\r\n                        visibleColumns: visibleColumns,\r\n                        dataIndex: dataIndex\r\n                    };\r\n                    var result = [];\r\n                    each(items, (function(index, item) {\r\n                        if (isDefined(item)) {\r\n                            options.rowIndex = index - rowIndexDelta;\r\n                            item = that._processItem(item, options);\r\n                            result.push(item)\r\n                        }\r\n                    }));\r\n                    return result\r\n                },\r\n                _processItem: function(item, options) {\r\n                    item = this._generateDataItem(item, options);\r\n                    item = this._processDataItem(item, options);\r\n                    item.dataIndex = options.dataIndex++;\r\n                    return item\r\n                },\r\n                _generateDataItem: function(data) {\r\n                    return {\r\n                        rowType: \"data\",\r\n                        data: data,\r\n                        key: this.keyOf(data)\r\n                    }\r\n                },\r\n                _processDataItem: function(dataItem, options) {\r\n                    dataItem.values = this.generateDataValues(dataItem.data, options.visibleColumns);\r\n                    return dataItem\r\n                },\r\n                generateDataValues: function(data, columns, isModified) {\r\n                    var values = [];\r\n                    var value;\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        var column = columns[i];\r\n                        value = isModified ? void 0 : null;\r\n                        if (!column.command) {\r\n                            if (column.calculateCellValue) {\r\n                                value = column.calculateCellValue(data)\r\n                            } else if (column.dataField) {\r\n                                value = data[column.dataField]\r\n                            }\r\n                        }\r\n                        values.push(value)\r\n                    }\r\n                    return values\r\n                },\r\n                _applyChange: function(change) {\r\n                    if (\"update\" === change.changeType) {\r\n                        this._applyChangeUpdate(change)\r\n                    } else if (this.items().length && change.repaintChangesOnly && \"refresh\" === change.changeType) {\r\n                        this._applyChangesOnly(change)\r\n                    } else if (\"refresh\" === change.changeType) {\r\n                        this._applyChangeFull(change)\r\n                    }\r\n                },\r\n                _applyChangeFull: function(change) {\r\n                    this._items = change.items.slice(0)\r\n                },\r\n                _getRowIndices: function(change) {\r\n                    var rowIndices = change.rowIndices.slice(0);\r\n                    var rowIndexDelta = this.getRowIndexDelta();\r\n                    rowIndices.sort((function(a, b) {\r\n                        return a - b\r\n                    }));\r\n                    for (var i = 0; i < rowIndices.length; i++) {\r\n                        var correctedRowIndex = rowIndices[i];\r\n                        if (change.allowInvisibleRowIndices) {\r\n                            correctedRowIndex += rowIndexDelta\r\n                        }\r\n                        if (correctedRowIndex < 0) {\r\n                            rowIndices.splice(i, 1);\r\n                            i--\r\n                        }\r\n                    }\r\n                    return rowIndices\r\n                },\r\n                _applyChangeUpdate: function(change) {\r\n                    var that = this;\r\n                    var items = change.items;\r\n                    var rowIndices = that._getRowIndices(change);\r\n                    var rowIndexDelta = that.getRowIndexDelta();\r\n                    var repaintChangesOnly = that.option(\"repaintChangesOnly\");\r\n                    var prevIndex = -1;\r\n                    var rowIndexCorrection = 0;\r\n                    var changeType;\r\n                    change.items = [];\r\n                    change.rowIndices = [];\r\n                    change.columnIndices = [];\r\n                    change.changeTypes = [];\r\n                    var equalItems = function(item1, item2, strict) {\r\n                        var result = item1 && item2 && equalByValue(item1.key, item2.key);\r\n                        if (result && strict) {\r\n                            result = item1.rowType === item2.rowType && (\"detail\" !== item2.rowType || item1.isEditing === item2.isEditing)\r\n                        }\r\n                        return result\r\n                    };\r\n                    each(rowIndices, (function(index, rowIndex) {\r\n                        var columnIndices;\r\n                        rowIndex += rowIndexCorrection + rowIndexDelta;\r\n                        if (prevIndex === rowIndex) {\r\n                            return\r\n                        }\r\n                        prevIndex = rowIndex;\r\n                        var oldItem = that._items[rowIndex];\r\n                        var oldNextItem = that._items[rowIndex + 1];\r\n                        var newItem = items[rowIndex];\r\n                        var newNextItem = items[rowIndex + 1];\r\n                        var strict = equalItems(oldItem, oldNextItem) || equalItems(newItem, newNextItem);\r\n                        if (newItem) {\r\n                            newItem.rowIndex = rowIndex;\r\n                            change.items.push(newItem)\r\n                        }\r\n                        if (oldItem && newItem && equalItems(oldItem, newItem, strict)) {\r\n                            changeType = \"update\";\r\n                            that._items[rowIndex] = newItem;\r\n                            if (oldItem.visible !== newItem.visible) {\r\n                                change.items.splice(-1, 1, {\r\n                                    visible: newItem.visible\r\n                                })\r\n                            } else if (repaintChangesOnly && !change.isFullUpdate) {\r\n                                columnIndices = that._partialUpdateRow(oldItem, newItem, rowIndex - rowIndexDelta)\r\n                            }\r\n                        } else if (newItem && !oldItem || newNextItem && equalItems(oldItem, newNextItem, strict)) {\r\n                            changeType = \"insert\";\r\n                            that._items.splice(rowIndex, 0, newItem);\r\n                            rowIndexCorrection++\r\n                        } else if (oldItem && !newItem || oldNextItem && equalItems(newItem, oldNextItem, strict)) {\r\n                            changeType = \"remove\";\r\n                            that._items.splice(rowIndex, 1);\r\n                            rowIndexCorrection--;\r\n                            prevIndex = -1\r\n                        } else if (newItem) {\r\n                            changeType = \"update\";\r\n                            that._items[rowIndex] = newItem\r\n                        } else {\r\n                            return\r\n                        }\r\n                        change.rowIndices.push(rowIndex - rowIndexDelta);\r\n                        change.changeTypes.push(changeType);\r\n                        change.columnIndices.push(columnIndices)\r\n                    }))\r\n                },\r\n                _isCellChanged: function(oldRow, newRow, visibleRowIndex, columnIndex, isLiveUpdate) {\r\n                    if (JSON.stringify(oldRow.values[columnIndex]) !== JSON.stringify(newRow.values[columnIndex])) {\r\n                        return true\r\n                    }\r\n\r\n                    function isCellModified(row, columnIndex) {\r\n                        return row.modifiedValues ? void 0 !== row.modifiedValues[columnIndex] : false\r\n                    }\r\n                    if (isCellModified(oldRow, columnIndex) !== isCellModified(newRow, columnIndex)) {\r\n                        return true\r\n                    }\r\n                    return false\r\n                },\r\n                _getChangedColumnIndices: function(oldItem, newItem, visibleRowIndex, isLiveUpdate) {\r\n                    var columnIndices;\r\n                    if (oldItem.rowType === newItem.rowType) {\r\n                        if (\"group\" !== newItem.rowType && \"groupFooter\" !== newItem.rowType) {\r\n                            columnIndices = [];\r\n                            if (\"detail\" !== newItem.rowType) {\r\n                                for (var columnIndex = 0; columnIndex < oldItem.values.length; columnIndex++) {\r\n                                    if (this._isCellChanged(oldItem, newItem, visibleRowIndex, columnIndex, isLiveUpdate)) {\r\n                                        columnIndices.push(columnIndex)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        if (\"group\" === newItem.rowType && newItem.isExpanded === oldItem.isExpanded && oldItem.cells) {\r\n                            columnIndices = oldItem.cells.map((cell, index) => {\r\n                                var _cell$column;\r\n                                return \"groupExpand\" !== (null === (_cell$column = cell.column) || void 0 === _cell$column ? void 0 : _cell$column.type) ? index : -1\r\n                            }).filter(index => index >= 0)\r\n                        }\r\n                    }\r\n                    return columnIndices\r\n                },\r\n                _partialUpdateRow: function(oldItem, newItem, visibleRowIndex, isLiveUpdate) {\r\n                    var _changedColumnIndices;\r\n                    var changedColumnIndices = this._getChangedColumnIndices(oldItem, newItem, visibleRowIndex, isLiveUpdate);\r\n                    if (null !== (_changedColumnIndices = changedColumnIndices) && void 0 !== _changedColumnIndices && _changedColumnIndices.length && this.option(\"dataRowTemplate\")) {\r\n                        changedColumnIndices = void 0\r\n                    }\r\n                    if (changedColumnIndices) {\r\n                        oldItem.cells && oldItem.cells.forEach((function(cell, columnIndex) {\r\n                            var isCellChanged = changedColumnIndices.indexOf(columnIndex) >= 0;\r\n                            if (!isCellChanged && cell && cell.update) {\r\n                                cell.update(newItem)\r\n                            }\r\n                        }));\r\n                        newItem.update = oldItem.update;\r\n                        newItem.watch = oldItem.watch;\r\n                        newItem.cells = oldItem.cells;\r\n                        if (isLiveUpdate) {\r\n                            newItem.oldValues = oldItem.values\r\n                        }\r\n                        oldItem.update && oldItem.update(newItem)\r\n                    }\r\n                    return changedColumnIndices\r\n                },\r\n                _isItemEquals: function(item1, item2) {\r\n                    if (JSON.stringify(item1.values) !== JSON.stringify(item2.values)) {\r\n                        return false\r\n                    }\r\n                    if ([\"modified\", \"isNewRow\", \"removed\", \"isEditing\"].some(field => item1[field] !== item2[field])) {\r\n                        return false\r\n                    }\r\n                    if (\"group\" === item1.rowType || \"groupFooter\" === item1.rowType) {\r\n                        var _item1$data, _item2$data, _item1$data2, _item2$data2;\r\n                        var expandedMatch = item1.isExpanded === item2.isExpanded;\r\n                        var summaryCellsMatch = JSON.stringify(item1.summaryCells) === JSON.stringify(item2.summaryCells);\r\n                        var continuationMatch = (null === (_item1$data = item1.data) || void 0 === _item1$data ? void 0 : _item1$data.isContinuation) === (null === (_item2$data = item2.data) || void 0 === _item2$data ? void 0 : _item2$data.isContinuation) && (null === (_item1$data2 = item1.data) || void 0 === _item1$data2 ? void 0 : _item1$data2.isContinuationOnNextPage) === (null === (_item2$data2 = item2.data) || void 0 === _item2$data2 ? void 0 : _item2$data2.isContinuationOnNextPage);\r\n                        if (!expandedMatch || !summaryCellsMatch || !continuationMatch) {\r\n                            return false\r\n                        }\r\n                    }\r\n                    return true\r\n                },\r\n                _applyChangesOnly: function(change) {\r\n                    var rowIndices = [];\r\n                    var columnIndices = [];\r\n                    var changeTypes = [];\r\n                    var items = [];\r\n                    var newIndexByKey = {};\r\n\r\n                    function getRowKey(row) {\r\n                        if (row) {\r\n                            return row.rowType + \",\" + JSON.stringify(row.key)\r\n                        }\r\n                    }\r\n                    var currentItems = this._items;\r\n                    var oldItems = currentItems.slice();\r\n                    change.items.forEach((function(item, index) {\r\n                        var key = getRowKey(item);\r\n                        newIndexByKey[key] = index;\r\n                        item.rowIndex = index\r\n                    }));\r\n                    var result = findChanges(oldItems, change.items, getRowKey, (item1, item2) => {\r\n                        if (!this._isItemEquals(item1, item2)) {\r\n                            return false\r\n                        }\r\n                        if (item1.cells) {\r\n                            item1.update && item1.update(item2);\r\n                            item1.cells.forEach((function(cell) {\r\n                                if (cell && cell.update) {\r\n                                    cell.update(item2, true)\r\n                                }\r\n                            }))\r\n                        }\r\n                        return true\r\n                    });\r\n                    if (!result) {\r\n                        this._applyChangeFull(change);\r\n                        return\r\n                    }\r\n                    result.forEach(change => {\r\n                        switch (change.type) {\r\n                            case \"update\":\r\n                                var index = change.index;\r\n                                var newItem = change.data;\r\n                                var oldItem = change.oldItem;\r\n                                var changedColumnIndices = this._partialUpdateRow(oldItem, newItem, index, true);\r\n                                rowIndices.push(index);\r\n                                changeTypes.push(\"update\");\r\n                                items.push(newItem);\r\n                                currentItems[index] = newItem;\r\n                                columnIndices.push(changedColumnIndices);\r\n                                break;\r\n                            case \"insert\":\r\n                                rowIndices.push(change.index);\r\n                                changeTypes.push(\"insert\");\r\n                                items.push(change.data);\r\n                                columnIndices.push(void 0);\r\n                                currentItems.splice(change.index, 0, change.data);\r\n                                break;\r\n                            case \"remove\":\r\n                                rowIndices.push(change.index);\r\n                                changeTypes.push(\"remove\");\r\n                                currentItems.splice(change.index, 1);\r\n                                items.push(change.oldItem);\r\n                                columnIndices.push(void 0)\r\n                        }\r\n                    });\r\n                    change.repaintChangesOnly = true;\r\n                    change.changeType = \"update\";\r\n                    change.rowIndices = rowIndices;\r\n                    change.columnIndices = columnIndices;\r\n                    change.changeTypes = changeTypes;\r\n                    change.items = items;\r\n                    if (oldItems.length) {\r\n                        change.isLiveUpdate = true\r\n                    }\r\n                    this._correctRowIndices(rowIndex => {\r\n                        var oldRowIndexOffset = this._rowIndexOffset || 0;\r\n                        var rowIndexOffset = this.getRowIndexOffset();\r\n                        var oldItem = oldItems[rowIndex - oldRowIndexOffset];\r\n                        var key = getRowKey(oldItem);\r\n                        var newVisibleRowIndex = newIndexByKey[key];\r\n                        return newVisibleRowIndex >= 0 ? newVisibleRowIndex + rowIndexOffset - rowIndex : 0\r\n                    })\r\n                },\r\n                _correctRowIndices: noop,\r\n                _afterProcessItems: function(items) {\r\n                    return items\r\n                },\r\n                _updateItemsCore: function(change) {\r\n                    var items;\r\n                    var dataSource = this._dataSource;\r\n                    var changeType = change.changeType || \"refresh\";\r\n                    change.changeType = changeType;\r\n                    if (dataSource) {\r\n                        var cachedProcessedItems = this._cachedProcessedItems;\r\n                        if (change.useProcessedItemsCache && cachedProcessedItems) {\r\n                            items = cachedProcessedItems\r\n                        } else {\r\n                            items = change.items || dataSource.items();\r\n                            items = this._beforeProcessItems(items);\r\n                            items = this._processItems(items, change);\r\n                            this._cachedProcessedItems = items\r\n                        }\r\n                        items = this._afterProcessItems(items, change);\r\n                        change.items = items;\r\n                        var oldItems = this._items.length === items.length && this._items;\r\n                        this._applyChange(change);\r\n                        var rowIndexDelta = this.getRowIndexDelta();\r\n                        each(this._items, (index, item) => {\r\n                            item.rowIndex = index - rowIndexDelta;\r\n                            if (oldItems) {\r\n                                item.cells = oldItems[index].cells || []\r\n                            }\r\n                            var newItem = items[index];\r\n                            if (newItem) {\r\n                                item.loadIndex = newItem.loadIndex\r\n                            }\r\n                        });\r\n                        this._rowIndexOffset = this.getRowIndexOffset()\r\n                    } else {\r\n                        this._items = []\r\n                    }\r\n                },\r\n                _handleChanging: function(e) {\r\n                    var rows = this.getVisibleRows();\r\n                    var dataSource = this.dataSource();\r\n                    if (dataSource) {\r\n                        e.changes.forEach((function(change) {\r\n                            if (\"insert\" === change.type && change.index >= 0) {\r\n                                var dataIndex = 0;\r\n                                for (var i = 0; i < change.index; i++) {\r\n                                    var row = rows[i];\r\n                                    if (row && (\"data\" === row.rowType || \"group\" === row.rowType)) {\r\n                                        dataIndex++\r\n                                    }\r\n                                }\r\n                                change.index = dataIndex\r\n                            }\r\n                        }))\r\n                    }\r\n                },\r\n                updateItems: function(change, isDataChanged) {\r\n                    change = change || {};\r\n                    if (void 0 !== this._repaintChangesOnly) {\r\n                        change.repaintChangesOnly = change.repaintChangesOnly || this._repaintChangesOnly;\r\n                        change.needUpdateDimensions = change.needUpdateDimensions || this._needUpdateDimensions\r\n                    } else if (change.changes) {\r\n                        change.repaintChangesOnly = this.option(\"repaintChangesOnly\")\r\n                    } else if (isDataChanged) {\r\n                        var operationTypes = this.dataSource().operationTypes();\r\n                        change.repaintChangesOnly = operationTypes && !operationTypes.grouping && !operationTypes.filtering && this.option(\"repaintChangesOnly\");\r\n                        change.isDataChanged = true;\r\n                        if (operationTypes && (operationTypes.reload || operationTypes.paging || operationTypes.groupExpanding)) {\r\n                            change.needUpdateDimensions = true\r\n                        }\r\n                    }\r\n                    if (this._updateLockCount) {\r\n                        this._changes.push(change);\r\n                        return\r\n                    }\r\n                    this._updateItemsCore(change);\r\n                    if (change.cancel) {\r\n                        return\r\n                    }\r\n                    this._fireChanged(change)\r\n                },\r\n                loadingOperationTypes: function() {\r\n                    var dataSource = this.dataSource();\r\n                    return dataSource && dataSource.loadingOperationTypes() || {}\r\n                },\r\n                _fireChanged: function(change) {\r\n                    if (this._currentOperationTypes) {\r\n                        change.operationTypes = this._currentOperationTypes;\r\n                        this._currentOperationTypes = null\r\n                    }\r\n                    deferRender(() => {\r\n                        this.changed.fire(change)\r\n                    })\r\n                },\r\n                isLoading: function() {\r\n                    return this._isLoading || this._isCustomLoading\r\n                },\r\n                _fireLoadingChanged: function() {\r\n                    this.loadingChanged.fire(this.isLoading(), this._loadingText)\r\n                },\r\n                _calculateAdditionalFilter: function() {\r\n                    return null\r\n                },\r\n                _applyFilter: function() {\r\n                    var dataSource = this._dataSource;\r\n                    if (dataSource) {\r\n                        dataSource.pageIndex(0);\r\n                        this._isFilterApplying = true;\r\n                        return this.reload().done(() => {\r\n                            if (this._isFilterApplying) {\r\n                                this.pageChanged.fire()\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                resetFilterApplying: function() {\r\n                    this._isFilterApplying = false\r\n                },\r\n                filter: function(filterExpr) {\r\n                    var dataSource = this._dataSource;\r\n                    var filter = dataSource && dataSource.filter();\r\n                    if (0 === arguments.length) {\r\n                        return filter\r\n                    }\r\n                    filterExpr = arguments.length > 1 ? Array.prototype.slice.call(arguments, 0) : filterExpr;\r\n                    if (gridCoreUtils.equalFilterParameters(filter, filterExpr)) {\r\n                        return\r\n                    }\r\n                    if (dataSource) {\r\n                        dataSource.filter(filterExpr)\r\n                    }\r\n                    this._applyFilter()\r\n                },\r\n                clearFilter: function(filterName) {\r\n                    var that = this;\r\n                    var columnsController = that._columnsController;\r\n                    var clearColumnOption = function(optionName) {\r\n                        var columnCount = columnsController.columnCount();\r\n                        for (var index = 0; index < columnCount; index++) {\r\n                            columnsController.columnOption(index, optionName, void 0)\r\n                        }\r\n                    };\r\n                    that.component.beginUpdate();\r\n                    if (arguments.length > 0) {\r\n                        switch (filterName) {\r\n                            case \"dataSource\":\r\n                                that.filter(null);\r\n                                break;\r\n                            case \"search\":\r\n                                that.searchByText(\"\");\r\n                                break;\r\n                            case \"header\":\r\n                                clearColumnOption(\"filterValues\");\r\n                                break;\r\n                            case \"row\":\r\n                                clearColumnOption(\"filterValue\")\r\n                        }\r\n                    } else {\r\n                        that.filter(null);\r\n                        that.searchByText(\"\");\r\n                        clearColumnOption(\"filterValue\");\r\n                        clearColumnOption(\"bufferedFilterValue\");\r\n                        clearColumnOption(\"filterValues\")\r\n                    }\r\n                    that.component.endUpdate()\r\n                },\r\n                _fireDataSourceChanged: function() {\r\n                    var that = this;\r\n                    that.changed.add((function changedHandler() {\r\n                        that.changed.remove(changedHandler);\r\n                        that.dataSourceChanged.fire()\r\n                    }))\r\n                },\r\n                _getDataSourceAdapter: noop,\r\n                _createDataSourceAdapterCore: function(dataSource, remoteOperations) {\r\n                    var dataSourceAdapterProvider = this._getDataSourceAdapter();\r\n                    var dataSourceAdapter = dataSourceAdapterProvider.create(this.component);\r\n                    dataSourceAdapter.init(dataSource, remoteOperations);\r\n                    return dataSourceAdapter\r\n                },\r\n                isLocalStore: function(store) {\r\n                    store = store || this.store();\r\n                    return store instanceof ArrayStore\r\n                },\r\n                isCustomStore: function(store) {\r\n                    store = store || this.store();\r\n                    return store instanceof CustomStore\r\n                },\r\n                _createDataSourceAdapter: function(dataSource) {\r\n                    var remoteOperations = this.option(\"remoteOperations\");\r\n                    var store = dataSource.store();\r\n                    var enabledRemoteOperations = {\r\n                        filtering: true,\r\n                        sorting: true,\r\n                        paging: true,\r\n                        grouping: true,\r\n                        summary: true\r\n                    };\r\n                    if (remoteOperations && remoteOperations.groupPaging) {\r\n                        remoteOperations = extend({}, enabledRemoteOperations, remoteOperations)\r\n                    }\r\n                    if (\"auto\" === remoteOperations) {\r\n                        remoteOperations = this.isLocalStore(store) || this.isCustomStore(store) ? {} : {\r\n                            filtering: true,\r\n                            sorting: true,\r\n                            paging: true\r\n                        }\r\n                    }\r\n                    if (true === remoteOperations) {\r\n                        remoteOperations = enabledRemoteOperations\r\n                    }\r\n                    return this._createDataSourceAdapterCore(dataSource, remoteOperations)\r\n                },\r\n                setDataSource: function(dataSource) {\r\n                    var oldDataSource = this._dataSource;\r\n                    if (!dataSource && oldDataSource) {\r\n                        oldDataSource.cancelAll();\r\n                        oldDataSource.changed.remove(this._dataChangedHandler);\r\n                        oldDataSource.loadingChanged.remove(this._loadingChangedHandler);\r\n                        oldDataSource.loadError.remove(this._loadErrorHandler);\r\n                        oldDataSource.customizeStoreLoadOptions.remove(this._customizeStoreLoadOptionsHandler);\r\n                        oldDataSource.changing.remove(this._changingHandler);\r\n                        oldDataSource.pushed.remove(this._dataPushedHandler);\r\n                        oldDataSource.dispose(this._isSharedDataSource)\r\n                    }\r\n                    if (dataSource) {\r\n                        dataSource = this._createDataSourceAdapter(dataSource)\r\n                    }\r\n                    this._dataSource = dataSource;\r\n                    if (dataSource) {\r\n                        this._fireDataSourceChanged();\r\n                        this._isLoading = !dataSource.isLoaded();\r\n                        this._needApplyFilter = true;\r\n                        this._isAllDataTypesDefined = this._columnsController.isAllDataTypesDefined();\r\n                        dataSource.changed.add(this._dataChangedHandler);\r\n                        dataSource.loadingChanged.add(this._loadingChangedHandler);\r\n                        dataSource.loadError.add(this._loadErrorHandler);\r\n                        dataSource.customizeStoreLoadOptions.add(this._customizeStoreLoadOptionsHandler);\r\n                        dataSource.changing.add(this._changingHandler);\r\n                        dataSource.pushed.add(this._dataPushedHandler)\r\n                    }\r\n                },\r\n                items: function() {\r\n                    return this._items\r\n                },\r\n                isEmpty: function() {\r\n                    return !this.items().length\r\n                },\r\n                pageCount: function() {\r\n                    return this._dataSource ? this._dataSource.pageCount() : 1\r\n                },\r\n                dataSource: function() {\r\n                    return this._dataSource\r\n                },\r\n                store: function() {\r\n                    var dataSource = this._dataSource;\r\n                    return dataSource && dataSource.store()\r\n                },\r\n                loadAll: function(data) {\r\n                    var that = this;\r\n                    var d = new Deferred;\r\n                    var dataSource = that._dataSource;\r\n                    if (dataSource) {\r\n                        if (data) {\r\n                            var options = {\r\n                                data: data,\r\n                                isCustomLoading: true,\r\n                                storeLoadOptions: {\r\n                                    isLoadingAll: true\r\n                                },\r\n                                loadOptions: {\r\n                                    filter: that.getCombinedFilter(),\r\n                                    group: dataSource.group(),\r\n                                    sort: dataSource.sort()\r\n                                }\r\n                            };\r\n                            dataSource._handleDataLoaded(options);\r\n                            when(options.data).done((function(data) {\r\n                                data = that._beforeProcessItems(data);\r\n                                d.resolve(that._processItems(data, {\r\n                                    changeType: \"loadingAll\"\r\n                                }), options.extra && options.extra.summary)\r\n                            })).fail(d.reject)\r\n                        } else if (!dataSource.isLoading()) {\r\n                            var loadOptions = extend({}, dataSource.loadOptions(), {\r\n                                isLoadingAll: true,\r\n                                requireTotalCount: false\r\n                            });\r\n                            dataSource.load(loadOptions).done((function(items, extra) {\r\n                                items = that._beforeProcessItems(items);\r\n                                items = that._processItems(items, {\r\n                                    changeType: \"loadingAll\"\r\n                                });\r\n                                d.resolve(items, extra && extra.summary)\r\n                            })).fail(d.reject)\r\n                        } else {\r\n                            d.reject()\r\n                        }\r\n                    } else {\r\n                        d.resolve([])\r\n                    }\r\n                    return d\r\n                },\r\n                getKeyByRowIndex: function(rowIndex, byLoaded) {\r\n                    var item = this.items(byLoaded)[rowIndex];\r\n                    if (item) {\r\n                        return item.key\r\n                    }\r\n                },\r\n                getRowIndexByKey: function(key, byLoaded) {\r\n                    return gridCoreUtils.getIndexByKey(key, this.items(byLoaded))\r\n                },\r\n                keyOf: function(data) {\r\n                    var store = this.store();\r\n                    if (store) {\r\n                        return store.keyOf(data)\r\n                    }\r\n                },\r\n                byKey: function(key) {\r\n                    var store = this.store();\r\n                    var rowIndex = this.getRowIndexByKey(key);\r\n                    var result;\r\n                    if (!store) {\r\n                        return\r\n                    }\r\n                    if (rowIndex >= 0) {\r\n                        result = (new Deferred).resolve(this.items()[rowIndex].data)\r\n                    }\r\n                    return result || store.byKey(key)\r\n                },\r\n                key: function() {\r\n                    var store = this.store();\r\n                    if (store) {\r\n                        return store.key()\r\n                    }\r\n                },\r\n                getRowIndexOffset: function() {\r\n                    return 0\r\n                },\r\n                getDataByKeys: function(rowKeys) {\r\n                    var that = this;\r\n                    var result = new Deferred;\r\n                    var deferreds = [];\r\n                    var data = [];\r\n                    each(rowKeys, (function(index, key) {\r\n                        deferreds.push(that.byKey(key).done((function(keyData) {\r\n                            data[index] = keyData\r\n                        })))\r\n                    }));\r\n                    when.apply($, deferreds).always((function() {\r\n                        result.resolve(data)\r\n                    }));\r\n                    return result\r\n                },\r\n                pageIndex: function(value) {\r\n                    return changePaging(this, \"pageIndex\", value)\r\n                },\r\n                pageSize: function(value) {\r\n                    return changePaging(this, \"pageSize\", value)\r\n                },\r\n                beginCustomLoading: function(messageText) {\r\n                    this._isCustomLoading = true;\r\n                    this._loadingText = messageText || \"\";\r\n                    this._fireLoadingChanged()\r\n                },\r\n                endCustomLoading: function() {\r\n                    this._isCustomLoading = false;\r\n                    this._loadingText = void 0;\r\n                    this._fireLoadingChanged()\r\n                },\r\n                refresh: function(options) {\r\n                    if (true === options) {\r\n                        options = {\r\n                            reload: true,\r\n                            changesOnly: true\r\n                        }\r\n                    } else if (!options) {\r\n                        options = {\r\n                            lookup: true,\r\n                            selection: true,\r\n                            reload: true\r\n                        }\r\n                    }\r\n                    var that = this;\r\n                    var dataSource = that.getDataSource();\r\n                    var changesOnly = options.changesOnly;\r\n                    var d = new Deferred;\r\n                    var customizeLoadResult = function() {\r\n                        that._repaintChangesOnly = !!changesOnly\r\n                    };\r\n                    when(!options.lookup || that._columnsController.refresh()).always((function() {\r\n                        if (options.load || options.reload) {\r\n                            dataSource && dataSource.on(\"customizeLoadResult\", customizeLoadResult);\r\n                            when(that.reload(options.reload, changesOnly)).always((function() {\r\n                                dataSource && dataSource.off(\"customizeLoadResult\", customizeLoadResult);\r\n                                that._repaintChangesOnly = void 0\r\n                            })).done(d.resolve).fail(d.reject)\r\n                        } else {\r\n                            that.updateItems({\r\n                                repaintChangesOnly: options.changesOnly\r\n                            });\r\n                            d.resolve()\r\n                        }\r\n                    }));\r\n                    return d.promise()\r\n                },\r\n                getVisibleRows: function() {\r\n                    return this.items()\r\n                },\r\n                _disposeDataSource: function() {\r\n                    this.setDataSource(null)\r\n                },\r\n                dispose: function() {\r\n                    this._disposeDataSource();\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                repaintRows: function(rowIndexes, changesOnly) {\r\n                    rowIndexes = Array.isArray(rowIndexes) ? rowIndexes : [rowIndexes];\r\n                    if (rowIndexes.length > 1 || isDefined(rowIndexes[0])) {\r\n                        this.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: rowIndexes,\r\n                            isFullUpdate: !changesOnly\r\n                        })\r\n                    }\r\n                },\r\n                skipProcessingPagingChange: function(fullName) {\r\n                    return this._skipProcessingPagingChange && (\"paging.pageIndex\" === fullName || \"paging.pageSize\" === fullName)\r\n                },\r\n                getUserState: function() {\r\n                    return {\r\n                        searchText: this.option(\"searchPanel.text\"),\r\n                        pageIndex: this.pageIndex(),\r\n                        pageSize: this.pageSize()\r\n                    }\r\n                },\r\n                getCachedStoreData: function() {\r\n                    return this._dataSource && this._dataSource.getCachedStoreData()\r\n                },\r\n                isLastPageLoaded: function() {\r\n                    var pageIndex = this.pageIndex();\r\n                    var pageCount = this.pageCount();\r\n                    return pageIndex === pageCount - 1\r\n                }\r\n            };\r\n            gridCoreUtils.proxyMethod(members, \"load\");\r\n            gridCoreUtils.proxyMethod(members, \"reload\");\r\n            gridCoreUtils.proxyMethod(members, \"push\");\r\n            gridCoreUtils.proxyMethod(members, \"itemsCount\", 0);\r\n            gridCoreUtils.proxyMethod(members, \"totalItemsCount\", 0);\r\n            gridCoreUtils.proxyMethod(members, \"hasKnownLastPage\", true);\r\n            gridCoreUtils.proxyMethod(members, \"isLoaded\", true);\r\n            gridCoreUtils.proxyMethod(members, \"totalCount\", 0);\r\n            return members\r\n        }())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.data_controller.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport dataSourceAdapterProvider from \"./ui.data_grid.data_source_adapter\";\r\nimport {\r\n    dataControllerModule\r\n} from \"../grid_core/ui.grid_core.data_controller\";\r\nexport var DataController = dataControllerModule.controllers.data.inherit({\r\n    _getDataSourceAdapter: function() {\r\n        return dataSourceAdapterProvider\r\n    },\r\n    _getSpecificDataSourceOption: function() {\r\n        var dataSource = this.option(\"dataSource\");\r\n        if (dataSource && !Array.isArray(dataSource) && this.option(\"keyExpr\")) {\r\n            errors.log(\"W1011\")\r\n        }\r\n        return this.callBase()\r\n    }\r\n});\r\ngridCore.registerModule(\"data\", {\r\n    defaultOptions: dataControllerModule.defaultOptions,\r\n    controllers: {\r\n        data: DataController\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.sorting_mixin.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport $ from \"../../core/renderer\";\r\nvar SORT_CLASS = \"dx-sort\";\r\nvar SORT_NONE_CLASS = \"dx-sort-none\";\r\nvar SORTUP_CLASS = \"dx-sort-up\";\r\nvar SORTDOWN_CLASS = \"dx-sort-down\";\r\nvar SORT_INDEX_CLASS = \"dx-sort-index\";\r\nvar SORT_INDEX_ICON_CLASS = \"dx-sort-index-icon\";\r\nvar HEADERS_ACTION_CLASS = \"action\";\r\nexport default {\r\n    _applyColumnState: function(options) {\r\n        var ariaSortState;\r\n        var $sortIndicator;\r\n        var sortingMode = this.option(\"sorting.mode\");\r\n        var rootElement = options.rootElement;\r\n        var column = options.column;\r\n        var $indicatorsContainer = this._getIndicatorContainer(rootElement);\r\n        if (\"sort\" === options.name) {\r\n            rootElement.find(\".\" + SORT_CLASS).remove();\r\n            !$indicatorsContainer.children().length && $indicatorsContainer.remove();\r\n            var isSortingAllowed = \"none\" !== sortingMode && column.allowSorting;\r\n            if (!isDefined(column.groupIndex) && (isSortingAllowed || isDefined(column.sortOrder))) {\r\n                ariaSortState = \"asc\" === column.sortOrder ? \"ascending\" : \"descending\";\r\n                $sortIndicator = this.callBase(options).toggleClass(SORTUP_CLASS, \"asc\" === column.sortOrder).toggleClass(SORTDOWN_CLASS, \"desc\" === column.sortOrder);\r\n                var hasSeveralSortIndexes = this.getController && !!this.getController(\"columns\").columnOption(\"sortIndex:1\");\r\n                if (hasSeveralSortIndexes && this.option(\"sorting.showSortIndexes\") && column.sortIndex >= 0) {\r\n                    $(\"<span>\").addClass(SORT_INDEX_ICON_CLASS).text(column.sortIndex + 1).appendTo($sortIndicator);\r\n                    $sortIndicator.addClass(SORT_INDEX_CLASS)\r\n                }\r\n                if (isSortingAllowed) {\r\n                    options.rootElement.addClass(this.addWidgetPrefix(HEADERS_ACTION_CLASS))\r\n                }\r\n            }\r\n            if (!isDefined(column.sortOrder)) {\r\n                this.setAria(\"sort\", \"none\", rootElement)\r\n            } else {\r\n                this.setAria(\"sort\", ariaSortState, rootElement)\r\n            }\r\n            return $sortIndicator\r\n        } else {\r\n            return this.callBase(options)\r\n        }\r\n    },\r\n    _getIndicatorClassName: function(name) {\r\n        if (\"sort\" === name) {\r\n            return SORT_CLASS\r\n        } else if (\"sortIndex\" === name) {\r\n            return SORT_INDEX_ICON_CLASS\r\n        }\r\n        return this.callBase(name)\r\n    },\r\n    _renderIndicator: function(options) {\r\n        var column = options.column;\r\n        var $container = options.container;\r\n        var $indicator = options.indicator;\r\n        if (\"sort\" === options.name) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\");\r\n            if (!isDefined(column.sortOrder)) {\r\n                $indicator && $indicator.addClass(SORT_NONE_CLASS)\r\n            }\r\n            if ($container.children().length && (!rtlEnabled && \"left\" === options.columnAlignment || rtlEnabled && \"right\" === options.columnAlignment)) {\r\n                $container.prepend($indicator);\r\n                return\r\n            }\r\n        }\r\n        this.callBase(options)\r\n    },\r\n    _updateIndicator: function($cell, column, indicatorName) {\r\n        if (\"sort\" === indicatorName && isDefined(column.groupIndex)) {\r\n            return\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _getIndicatorElements: function($cell, returnAll) {\r\n        var $indicatorElements = this.callBase($cell);\r\n        return returnAll ? $indicatorElements : $indicatorElements && $indicatorElements.not(\".\" + SORT_NONE_CLASS)\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.sorting.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport sortingMixin from \"../grid_core/ui.grid_core.sorting_mixin\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    addNamespace,\r\n    isCommandKeyPressed\r\n} from \"../../events/utils/index\";\r\nvar COLUMN_HEADERS_VIEW_NAMESPACE = \"dxDataGridColumnHeadersView\";\r\nvar ColumnHeadersViewSortingExtender = extend({}, sortingMixin, {\r\n    _createRow(row) {\r\n        var $row = this.callBase(row);\r\n        if (\"header\" === row.rowType) {\r\n            eventsEngine.on($row, addNamespace(clickEventName, COLUMN_HEADERS_VIEW_NAMESPACE), \"td\", this.createAction(e => {\r\n                this._processHeaderAction(e.event, $row)\r\n            }))\r\n        }\r\n        return $row\r\n    },\r\n    _processHeaderAction: function(event, $row) {\r\n        if ($(event.currentTarget).parent().get(0) !== $row.get(0)) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var keyName = null;\r\n        var $cellElementFromEvent = $(event.currentTarget);\r\n        var rowIndex = $cellElementFromEvent.parent().index();\r\n        var columnIndex = -1;\r\n        [].slice.call(that.getCellElements(rowIndex)).some(($cellElement, index) => {\r\n            if ($cellElement === $cellElementFromEvent.get(0)) {\r\n                columnIndex = index;\r\n                return true\r\n            }\r\n        });\r\n        var visibleColumns = that._columnsController.getVisibleColumns(rowIndex);\r\n        var column = visibleColumns[columnIndex];\r\n        var editingController = that.getController(\"editing\");\r\n        var editingMode = that.option(\"editing.mode\");\r\n        var isCellEditing = editingController && editingController.isEditing() && (\"batch\" === editingMode || \"cell\" === editingMode);\r\n        if (isCellEditing || !that._isSortableElement($(event.target))) {\r\n            return\r\n        }\r\n        if (column && !isDefined(column.groupIndex) && !column.command) {\r\n            if (event.shiftKey) {\r\n                keyName = \"shift\"\r\n            } else if (isCommandKeyPressed(event)) {\r\n                keyName = \"ctrl\"\r\n            }\r\n            setTimeout(() => {\r\n                that._columnsController.changeSortOrder(column.index, keyName)\r\n            })\r\n        }\r\n    },\r\n    _renderCellContent($cell, options) {\r\n        var column = options.column;\r\n        if (!column.command && \"header\" === options.rowType) {\r\n            this._applyColumnState({\r\n                name: \"sort\",\r\n                rootElement: $cell,\r\n                column: column,\r\n                showColumnLines: this.option(\"showColumnLines\")\r\n            })\r\n        }\r\n        this.callBase($cell, options)\r\n    },\r\n    _columnOptionChanged(e) {\r\n        var changeTypes = e.changeTypes;\r\n        if (1 === changeTypes.length && changeTypes.sorting) {\r\n            this._updateIndicators(\"sort\");\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"sorting\":\r\n                this._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nvar HeaderPanelSortingExtender = extend({}, sortingMixin, {\r\n    _createGroupPanelItem($rootElement, groupColumn) {\r\n        var that = this;\r\n        var $item = that.callBase(...arguments);\r\n        eventsEngine.on($item, addNamespace(clickEventName, \"dxDataGridHeaderPanel\"), that.createAction(() => {\r\n            that._processGroupItemAction(groupColumn.index)\r\n        }));\r\n        that._applyColumnState({\r\n            name: \"sort\",\r\n            rootElement: $item,\r\n            column: {\r\n                alignment: that.option(\"rtlEnabled\") ? \"right\" : \"left\",\r\n                allowSorting: groupColumn.allowSorting,\r\n                sortOrder: \"desc\" === groupColumn.sortOrder ? \"desc\" : \"asc\"\r\n            },\r\n            showColumnLines: true\r\n        });\r\n        return $item\r\n    },\r\n    _processGroupItemAction(groupColumnIndex) {\r\n        setTimeout(() => this.getController(\"columns\").changeSortOrder(groupColumnIndex))\r\n    },\r\n    optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"sorting\":\r\n                this._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nexport var sortingModule = {\r\n    defaultOptions: () => ({\r\n        sorting: {\r\n            mode: \"single\",\r\n            ascendingText: messageLocalization.format(\"dxDataGrid-sortingAscendingText\"),\r\n            descendingText: messageLocalization.format(\"dxDataGrid-sortingDescendingText\"),\r\n            clearText: messageLocalization.format(\"dxDataGrid-sortingClearText\"),\r\n            showSortIndexes: true\r\n        }\r\n    }),\r\n    extenders: {\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewSortingExtender,\r\n            headerPanel: HeaderPanelSortingExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.sorting.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    sortingModule\r\n} from \"../grid_core/ui.grid_core.sorting\";\r\ngridCore.registerModule(\"sorting\", sortingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.rows.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    getHeight,\r\n    getOuterHeight,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow,\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    deferRender,\r\n    deferUpdate\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    setHeight\r\n} from \"../../core/utils/style\";\r\nimport {\r\n    isDefined,\r\n    isNumeric,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect,\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    isEmpty\r\n} from \"../../core/utils/string\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    ColumnsView\r\n} from \"./ui.grid_core.columns_view\";\r\nimport Scrollable from \"../scroll_view/ui.scrollable\";\r\nimport {\r\n    removeEvent\r\n} from \"../../events/remove\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport browser from \"../../core/utils/browser\";\r\nvar ROWS_VIEW_CLASS = \"rowsview\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar NOWRAP_CLASS = \"nowrap\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar GROUP_CELL_CLASS = \"dx-group-cell\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar FREE_SPACE_CLASS = \"dx-freespace-row\";\r\nvar ROW_LINES_CLASS = \"dx-row-lines\";\r\nvar COLUMN_LINES_CLASS = \"dx-column-lines\";\r\nvar ROW_ALTERNATION_CLASS = \"dx-row-alt\";\r\nvar LAST_ROW_BORDER = \"dx-last-row-border\";\r\nvar EMPTY_CLASS = \"dx-empty\";\r\nvar ROW_INSERTED_ANIMATION_CLASS = \"row-inserted-animation\";\r\nvar LOADPANEL_HIDE_TIMEOUT = 200;\r\n\r\nfunction getMaxHorizontalScrollOffset(scrollable) {\r\n    return scrollable ? Math.round(scrollable.scrollWidth() - scrollable.clientWidth()) : 0\r\n}\r\nexport var rowsModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            hoverStateEnabled: false,\r\n            scrolling: {\r\n                useNative: \"auto\"\r\n            },\r\n            loadPanel: {\r\n                enabled: \"auto\",\r\n                text: messageLocalization.format(\"Loading\"),\r\n                width: 200,\r\n                height: 90,\r\n                showIndicator: true,\r\n                indicatorSrc: \"\",\r\n                showPane: true\r\n            },\r\n            dataRowTemplate: null,\r\n            columnAutoWidth: false,\r\n            noDataText: messageLocalization.format(\"dxDataGrid-noDataText\"),\r\n            wordWrapEnabled: false,\r\n            showColumnLines: true,\r\n            showRowLines: false,\r\n            rowAlternationEnabled: false,\r\n            activeStateEnabled: false,\r\n            twoWayBindingEnabled: true\r\n        }\r\n    },\r\n    views: {\r\n        rowsView: ColumnsView.inherit(function() {\r\n            var defaultCellTemplate = function($container, options) {\r\n                var isDataTextEmpty = isEmpty(options.text) && \"data\" === options.rowType;\r\n                var text = options.text;\r\n                var container = $container.get(0);\r\n                if (isDataTextEmpty) {\r\n                    gridCoreUtils.setEmptyText($container)\r\n                } else if (options.column.encodeHtml) {\r\n                    container.textContent = text\r\n                } else {\r\n                    container.innerHTML = text\r\n                }\r\n            };\r\n            return {\r\n                _getDefaultTemplate: function(column) {\r\n                    switch (column.command) {\r\n                        case \"empty\":\r\n                            return function(container) {\r\n                                container.html(\"&nbsp;\")\r\n                            };\r\n                        default:\r\n                            return defaultCellTemplate\r\n                    }\r\n                },\r\n                _getDefaultGroupTemplate: function(column) {\r\n                    var summaryTexts = this.option(\"summary.texts\");\r\n                    return function($container, options) {\r\n                        var data = options.data;\r\n                        var text = options.column.caption + \": \" + options.text;\r\n                        var container = $container.get(0);\r\n                        if (options.summaryItems && options.summaryItems.length) {\r\n                            text += \" \" + gridCoreUtils.getGroupRowSummaryText(options.summaryItems, summaryTexts)\r\n                        }\r\n                        if (data) {\r\n                            if (options.groupContinuedMessage && options.groupContinuesMessage) {\r\n                                text += \" (\" + options.groupContinuedMessage + \". \" + options.groupContinuesMessage + \")\"\r\n                            } else if (options.groupContinuesMessage) {\r\n                                text += \" (\" + options.groupContinuesMessage + \")\"\r\n                            } else if (options.groupContinuedMessage) {\r\n                                text += \" (\" + options.groupContinuedMessage + \")\"\r\n                            }\r\n                        }\r\n                        $container.addClass(GROUP_CELL_CLASS);\r\n                        if (column.encodeHtml) {\r\n                            container.textContent = text\r\n                        } else {\r\n                            container.innerHTML = text\r\n                        }\r\n                    }\r\n                },\r\n                _update: function() {},\r\n                _getCellTemplate: function(options) {\r\n                    var column = options.column;\r\n                    var template;\r\n                    if (\"group\" === options.rowType && isDefined(column.groupIndex) && !column.showWhenGrouped && !column.command) {\r\n                        template = column.groupCellTemplate || {\r\n                            allowRenderToDetachedContainer: true,\r\n                            render: this._getDefaultGroupTemplate(column)\r\n                        }\r\n                    } else if ((\"data\" === options.rowType || column.command) && column.cellTemplate) {\r\n                        template = column.cellTemplate\r\n                    } else {\r\n                        template = {\r\n                            allowRenderToDetachedContainer: true,\r\n                            render: this._getDefaultTemplate(column)\r\n                        }\r\n                    }\r\n                    return template\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var isGroup = \"group\" === row.rowType;\r\n                        var isDataRow = \"data\" === row.rowType;\r\n                        isDataRow && $row.addClass(DATA_ROW_CLASS);\r\n                        isDataRow && this.option(\"showRowLines\") && $row.addClass(ROW_LINES_CLASS);\r\n                        this.option(\"showColumnLines\") && $row.addClass(COLUMN_LINES_CLASS);\r\n                        if (false === row.visible) {\r\n                            $row.hide()\r\n                        }\r\n                        if (isGroup) {\r\n                            $row.addClass(GROUP_ROW_CLASS);\r\n                            var isRowExpanded = row.isExpanded;\r\n                            this.setAria(\"role\", \"row\", $row);\r\n                            this.setAria(\"expanded\", isDefined(isRowExpanded) && isRowExpanded.toString(), $row)\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _rowPrepared: function($row, rowOptions, row) {\r\n                    if (\"data\" === rowOptions.rowType) {\r\n                        if (this.option(\"rowAlternationEnabled\")) {\r\n                            this._isAltRow(row) && $row.addClass(ROW_ALTERNATION_CLASS);\r\n                            rowOptions.watch && rowOptions.watch(() => this._isAltRow(row), value => {\r\n                                $row.toggleClass(ROW_ALTERNATION_CLASS, value)\r\n                            })\r\n                        }\r\n                        this._setAriaRowIndex(rowOptions, $row);\r\n                        rowOptions.watch && rowOptions.watch(() => rowOptions.rowIndex, () => this._setAriaRowIndex(rowOptions, $row))\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _setAriaRowIndex: function(row, $row) {\r\n                    var component = this.component;\r\n                    var isPagerMode = \"standard\" === component.option(\"scrolling.mode\") && !gridCoreUtils.isVirtualRowRendering(component);\r\n                    var rowIndex = row.rowIndex + 1;\r\n                    if (isPagerMode) {\r\n                        rowIndex = component.pageIndex() * component.pageSize() + rowIndex\r\n                    } else {\r\n                        rowIndex += this._dataController.getRowIndexOffset()\r\n                    }\r\n                    this.setAria(\"rowindex\", rowIndex, $row)\r\n                },\r\n                _afterRowPrepared: function(e) {\r\n                    var arg = e.args[0];\r\n                    var dataController = this._dataController;\r\n                    var row = dataController.getVisibleRows()[arg.rowIndex];\r\n                    var watch = this.option(\"integrationOptions.watchMethod\");\r\n                    if (!arg.data || \"data\" !== arg.rowType || arg.isNewRow || !this.option(\"twoWayBindingEnabled\") || !watch || !row) {\r\n                        return\r\n                    }\r\n                    var dispose = watch(() => dataController.generateDataValues(arg.data, arg.columns), () => {\r\n                        dataController.repaintRows([row.rowIndex], this.option(\"repaintChangesOnly\"))\r\n                    }, {\r\n                        deep: true,\r\n                        skipImmediate: true\r\n                    });\r\n                    eventsEngine.on(arg.rowElement, removeEvent, dispose)\r\n                },\r\n                _renderScrollable: function(force) {\r\n                    var $element = this.element();\r\n                    if (!$element.children().length) {\r\n                        $element.append(\"<div>\")\r\n                    }\r\n                    if (force || !this._loadPanel) {\r\n                        this._renderLoadPanel($element, $element.parent(), this._dataController.isLocalStore())\r\n                    }\r\n                    if ((force || !this.getScrollable()) && this._dataController.isLoaded()) {\r\n                        var columns = this.getColumns();\r\n                        var allColumnsHasWidth = true;\r\n                        for (var i = 0; i < columns.length; i++) {\r\n                            if (!columns[i].width && !columns[i].minWidth) {\r\n                                allColumnsHasWidth = false;\r\n                                break\r\n                            }\r\n                        }\r\n                        if (this.option(\"columnAutoWidth\") || this._hasHeight || allColumnsHasWidth || this._columnsController._isColumnFixing()) {\r\n                            this._renderScrollableCore($element)\r\n                        }\r\n                    }\r\n                },\r\n                _handleScroll: function(e) {\r\n                    var rtlEnabled = this.option(\"rtlEnabled\");\r\n                    var isNativeScrolling = e.component.option(\"useNative\");\r\n                    this._scrollTop = e.scrollOffset.top;\r\n                    this._scrollLeft = e.scrollOffset.left;\r\n                    var scrollLeft = e.scrollOffset.left;\r\n                    if (rtlEnabled) {\r\n                        this._scrollRight = getMaxHorizontalScrollOffset(e.component) - this._scrollLeft;\r\n                        if (isNativeScrolling) {\r\n                            scrollLeft = -this._scrollRight\r\n                        }\r\n                        if (!this.isScrollbarVisible(true)) {\r\n                            this._scrollLeft = -1\r\n                        }\r\n                    }\r\n                    this.scrollChanged.fire(_extends({}, e.scrollOffset, {\r\n                        left: scrollLeft\r\n                    }), this.name)\r\n                },\r\n                _renderScrollableCore: function($element) {\r\n                    var dxScrollableOptions = this._createScrollableOptions();\r\n                    var scrollHandler = this._handleScroll.bind(this);\r\n                    dxScrollableOptions.onScroll = scrollHandler;\r\n                    this._scrollable = this._createComponent($element, Scrollable, dxScrollableOptions);\r\n                    this._scrollableContainer = this._scrollable && $(this._scrollable.container())\r\n                },\r\n                _renderLoadPanel: gridCoreUtils.renderLoadPanel,\r\n                _renderContent: function(contentElement, tableElement) {\r\n                    contentElement.empty().append(tableElement);\r\n                    return this._findContentElement()\r\n                },\r\n                _updateContent: function(newTableElement, change) {\r\n                    var that = this;\r\n                    var tableElement = that.getTableElement();\r\n                    var contentElement = that._findContentElement();\r\n                    var changeType = change && change.changeType;\r\n                    var executors = [];\r\n                    var highlightChanges = this.option(\"highlightChanges\");\r\n                    var rowInsertedClass = this.addWidgetPrefix(ROW_INSERTED_ANIMATION_CLASS);\r\n                    switch (changeType) {\r\n                        case \"update\":\r\n                            each(change.rowIndices, (function(index, rowIndex) {\r\n                                var $newRowElement = that._getRowElements(newTableElement).eq(index);\r\n                                var changeType = change.changeTypes && change.changeTypes[index];\r\n                                var item = change.items && change.items[index];\r\n                                executors.push((function() {\r\n                                    var $rowsElement = that._getRowElements();\r\n                                    var $rowElement = $rowsElement.eq(rowIndex);\r\n                                    switch (changeType) {\r\n                                        case \"update\":\r\n                                            if (item) {\r\n                                                var columnIndices = change.columnIndices && change.columnIndices[index];\r\n                                                if (isDefined(item.visible) && item.visible !== $rowElement.is(\":visible\")) {\r\n                                                    $rowElement.toggle(item.visible)\r\n                                                } else if (columnIndices) {\r\n                                                    that._updateCells($rowElement, $newRowElement, columnIndices)\r\n                                                } else {\r\n                                                    $rowElement.replaceWith($newRowElement)\r\n                                                }\r\n                                            }\r\n                                            break;\r\n                                        case \"insert\":\r\n                                            if (!$rowsElement.length) {\r\n                                                if (tableElement) {\r\n                                                    var target = $newRowElement.is(\"tbody\") ? tableElement : tableElement.children(\"tbody\");\r\n                                                    $newRowElement.prependTo(target)\r\n                                                }\r\n                                            } else if ($rowElement.length) {\r\n                                                $newRowElement.insertBefore($rowElement)\r\n                                            } else {\r\n                                                $newRowElement.insertAfter($rowsElement.last())\r\n                                            }\r\n                                            if (highlightChanges && change.isLiveUpdate) {\r\n                                                $newRowElement.addClass(rowInsertedClass)\r\n                                            }\r\n                                            break;\r\n                                        case \"remove\":\r\n                                            $rowElement.remove()\r\n                                    }\r\n                                }))\r\n                            }));\r\n                            each(executors, (function() {\r\n                                this()\r\n                            }));\r\n                            newTableElement.remove();\r\n                            break;\r\n                        default:\r\n                            that.setTableElement(newTableElement);\r\n                            contentElement.addClass(that.addWidgetPrefix(CONTENT_CLASS));\r\n                            that._renderContent(contentElement, newTableElement)\r\n                    }\r\n                },\r\n                _createEmptyRow: function(className, isFixed, height) {\r\n                    var $cell;\r\n                    var $row = this._createRow();\r\n                    var columns = isFixed ? this.getFixedColumns() : this.getColumns();\r\n                    $row.addClass(className).toggleClass(COLUMN_LINES_CLASS, this.option(\"showColumnLines\"));\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        $cell = this._createCell({\r\n                            column: columns[i],\r\n                            rowType: \"freeSpace\",\r\n                            columnIndex: i,\r\n                            columns: columns\r\n                        });\r\n                        isNumeric(height) && $cell.css(\"height\", height);\r\n                        $row.append($cell)\r\n                    }\r\n                    this.setAria(\"role\", \"presentation\", $row);\r\n                    return $row\r\n                },\r\n                _appendEmptyRow: function($table, $emptyRow, location) {\r\n                    var $tBodies = this._getBodies($table);\r\n                    var isTableContainer = !$tBodies.length || $emptyRow.is(\"tbody\");\r\n                    var $container = isTableContainer ? $table : $tBodies;\r\n                    if (\"top\" === location) {\r\n                        $container.first().prepend($emptyRow);\r\n                        if (isTableContainer) {\r\n                            var $colgroup = $container.children(\"colgroup\");\r\n                            $container.prepend($colgroup)\r\n                        }\r\n                    } else {\r\n                        $container.last().append($emptyRow)\r\n                    }\r\n                },\r\n                _renderFreeSpaceRow: function($tableElement) {\r\n                    var $freeSpaceRowElement = this._createEmptyRow(FREE_SPACE_CLASS);\r\n                    $freeSpaceRowElement = this._wrapRowIfNeed($tableElement, $freeSpaceRowElement);\r\n                    this._appendEmptyRow($tableElement, $freeSpaceRowElement)\r\n                },\r\n                _checkRowKeys: function(options) {\r\n                    var that = this;\r\n                    var rows = that._getRows(options);\r\n                    var keyExpr = that._dataController.store() && that._dataController.store().key();\r\n                    keyExpr && rows.some((function(row) {\r\n                        if (\"data\" === row.rowType && void 0 === row.key) {\r\n                            that._dataController.fireError(\"E1046\", keyExpr);\r\n                            return true\r\n                        }\r\n                    }))\r\n                },\r\n                _needUpdateRowHeight: function(itemsCount) {\r\n                    return itemsCount > 0 && !this._rowHeight\r\n                },\r\n                _getRowsHeight: function($tableElement) {\r\n                    var $rowElements = $tableElement.children(\"tbody\").children().not(\".dx-virtual-row\").not(\".\" + FREE_SPACE_CLASS);\r\n                    return $rowElements.toArray().reduce((function(sum, row) {\r\n                        return sum + getBoundingRect(row).height\r\n                    }), 0)\r\n                },\r\n                _updateRowHeight: function() {\r\n                    var $tableElement = this.getTableElement();\r\n                    var itemsCount = this._dataController.items().length;\r\n                    if ($tableElement && this._needUpdateRowHeight(itemsCount)) {\r\n                        var rowsHeight = this._getRowsHeight($tableElement);\r\n                        this._rowHeight = rowsHeight / itemsCount\r\n                    }\r\n                },\r\n                _findContentElement: function() {\r\n                    var $content = this.element();\r\n                    var scrollable = this.getScrollable();\r\n                    if ($content) {\r\n                        if (scrollable) {\r\n                            $content = $(scrollable.content())\r\n                        }\r\n                        return $content.children().first()\r\n                    }\r\n                },\r\n                _getRowElements: function(tableElement) {\r\n                    var $rows = this.callBase(tableElement);\r\n                    return $rows && $rows.not(\".\" + FREE_SPACE_CLASS)\r\n                },\r\n                _getFreeSpaceRowElements: function($table) {\r\n                    var tableElements = $table || this.getTableElements();\r\n                    return tableElements && tableElements.children(\"tbody\").children(\".\" + FREE_SPACE_CLASS)\r\n                },\r\n                _getNoDataText: function() {\r\n                    return this.option(\"noDataText\")\r\n                },\r\n                _rowClick: function(e) {\r\n                    var item = this._dataController.items()[e.rowIndex] || {};\r\n                    this.executeAction(\"onRowClick\", extend({\r\n                        evaluate: function(expr) {\r\n                            var getter = compileGetter(expr);\r\n                            return getter(item.data)\r\n                        }\r\n                    }, e, item))\r\n                },\r\n                _rowDblClick: function(e) {\r\n                    var item = this._dataController.items()[e.rowIndex] || {};\r\n                    this.executeAction(\"onRowDblClick\", extend({}, e, item))\r\n                },\r\n                _getColumnsCountBeforeGroups: function(columns) {\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        if (\"groupExpand\" === columns[i].type) {\r\n                            return i\r\n                        }\r\n                    }\r\n                    return 0\r\n                },\r\n                _getGroupCellOptions: function(options) {\r\n                    var columnsCountBeforeGroups = this._getColumnsCountBeforeGroups(options.columns);\r\n                    var columnIndex = (options.row.groupIndex || 0) + columnsCountBeforeGroups;\r\n                    return {\r\n                        columnIndex: columnIndex,\r\n                        colspan: options.columns.length - columnIndex - 1\r\n                    }\r\n                },\r\n                _renderCells: function($row, options) {\r\n                    if (\"group\" === options.row.rowType) {\r\n                        this._renderGroupedCells($row, options)\r\n                    } else if (options.row.values) {\r\n                        this.callBase($row, options)\r\n                    }\r\n                },\r\n                _renderGroupedCells: function($row, options) {\r\n                    var row = options.row;\r\n                    var expandColumn;\r\n                    var columns = options.columns;\r\n                    var rowIndex = row.rowIndex;\r\n                    var isExpanded;\r\n                    var groupCellOptions = this._getGroupCellOptions(options);\r\n                    for (var i = 0; i <= groupCellOptions.columnIndex; i++) {\r\n                        if (i === groupCellOptions.columnIndex && columns[i].allowCollapsing && \"infinite\" !== options.scrollingMode) {\r\n                            isExpanded = !!row.isExpanded;\r\n                            expandColumn = columns[i]\r\n                        } else {\r\n                            isExpanded = null;\r\n                            expandColumn = {\r\n                                command: \"expand\",\r\n                                cssClass: columns[i].cssClass\r\n                            }\r\n                        }\r\n                        if (this._needRenderCell(i, options.columnIndices)) {\r\n                            this._renderCell($row, {\r\n                                value: isExpanded,\r\n                                row: row,\r\n                                rowIndex: rowIndex,\r\n                                column: expandColumn,\r\n                                columnIndex: i,\r\n                                columnIndices: options.columnIndices\r\n                            })\r\n                        }\r\n                    }\r\n                    var groupColumnAlignment = getDefaultAlignment(this.option(\"rtlEnabled\"));\r\n                    var groupColumn = extend({}, columns[groupCellOptions.columnIndex], {\r\n                        command: null,\r\n                        type: null,\r\n                        cssClass: null,\r\n                        width: null,\r\n                        showWhenGrouped: false,\r\n                        alignment: groupColumnAlignment\r\n                    });\r\n                    if (groupCellOptions.colspan > 1) {\r\n                        groupColumn.colspan = groupCellOptions.colspan\r\n                    }\r\n                    if (this._needRenderCell(groupCellOptions.columnIndex + 1, options.columnIndices)) {\r\n                        this._renderCell($row, {\r\n                            value: row.values[row.groupIndex],\r\n                            row: row,\r\n                            rowIndex: rowIndex,\r\n                            column: groupColumn,\r\n                            columnIndex: groupCellOptions.columnIndex + 1,\r\n                            columnIndices: options.columnIndices\r\n                        })\r\n                    }\r\n                },\r\n                _renderRows: function($table, options) {\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    this.callBase($table, extend({\r\n                        scrollingMode: scrollingMode\r\n                    }, options));\r\n                    this._checkRowKeys(options.change);\r\n                    this._renderFreeSpaceRow($table);\r\n                    if (!this._hasHeight) {\r\n                        this.updateFreeSpaceRowHeight($table)\r\n                    }\r\n                },\r\n                _renderDataRowByTemplate($table, options, dataRowTemplate) {\r\n                    var row = options.row;\r\n                    var rowOptions = extend({\r\n                        columns: options.columns\r\n                    }, row);\r\n                    var $tbody = this._createRow(row, \"tbody\");\r\n                    $tbody.appendTo($table);\r\n                    this.renderTemplate($tbody, dataRowTemplate, rowOptions, true, options.change);\r\n                    this._rowPrepared($tbody, rowOptions, options.row)\r\n                },\r\n                _renderRow: function($table, options) {\r\n                    var row = options.row;\r\n                    var rowTemplate = this.option().rowTemplate;\r\n                    var dataRowTemplate = this.option(\"dataRowTemplate\");\r\n                    if (\"data\" === row.rowType && dataRowTemplate) {\r\n                        this._renderDataRowByTemplate($table, options, dataRowTemplate)\r\n                    } else if ((\"data\" === row.rowType || \"group\" === row.rowType) && !isDefined(row.groupIndex) && rowTemplate) {\r\n                        this.renderTemplate($table, rowTemplate, extend({\r\n                            columns: options.columns\r\n                        }, row), true)\r\n                    } else {\r\n                        this.callBase($table, options)\r\n                    }\r\n                },\r\n                _renderTable: function(options) {\r\n                    var that = this;\r\n                    var $table = that.callBase(options);\r\n                    if (!isDefined(that.getTableElement())) {\r\n                        that.setTableElement($table);\r\n                        that._renderScrollable(true);\r\n                        that.resizeCompleted.add((function resizeCompletedHandler() {\r\n                            var scrollableInstance = that.getScrollable();\r\n                            if (scrollableInstance && that.element().closest(getWindow().document).length) {\r\n                                that.resizeCompleted.remove(resizeCompletedHandler);\r\n                                scrollableInstance._visibilityChanged(true)\r\n                            }\r\n                        }))\r\n                    } else {\r\n                        that._renderScrollable()\r\n                    }\r\n                    return $table\r\n                },\r\n                _createTable: function() {\r\n                    var $table = this.callBase.apply(this, arguments);\r\n                    if (this.option().rowTemplate || this.option().dataRowTemplate) {\r\n                        $table.appendTo(this.component.$element())\r\n                    }\r\n                    return $table\r\n                },\r\n                _renderCore: function(change) {\r\n                    var $element = this.element();\r\n                    $element.addClass(this.addWidgetPrefix(ROWS_VIEW_CLASS)).toggleClass(this.addWidgetPrefix(NOWRAP_CLASS), !this.option(\"wordWrapEnabled\"));\r\n                    $element.toggleClass(EMPTY_CLASS, this._dataController.isEmpty());\r\n                    this.setAria(\"role\", \"presentation\", $element);\r\n                    var $table = this._renderTable({\r\n                        change: change\r\n                    });\r\n                    this._updateContent($table, change);\r\n                    this.callBase(change);\r\n                    this._lastColumnWidths = null\r\n                },\r\n                _getRows: function(change) {\r\n                    return change && change.items || this._dataController.items()\r\n                },\r\n                _getCellOptions: function(options) {\r\n                    var column = options.column;\r\n                    var row = options.row;\r\n                    var data = row.data;\r\n                    var summaryCells = row && row.summaryCells;\r\n                    var value = options.value;\r\n                    var displayValue = gridCoreUtils.getDisplayValue(column, value, data, row.rowType);\r\n                    var parameters = this.callBase(options);\r\n                    parameters.value = value;\r\n                    parameters.oldValue = options.oldValue;\r\n                    parameters.displayValue = displayValue;\r\n                    parameters.row = row;\r\n                    parameters.key = row.key;\r\n                    parameters.data = data;\r\n                    parameters.rowType = row.rowType;\r\n                    parameters.values = row.values;\r\n                    parameters.text = !column.command ? gridCoreUtils.formatValue(displayValue, column) : \"\";\r\n                    parameters.rowIndex = row.rowIndex;\r\n                    parameters.summaryItems = summaryCells && summaryCells[options.columnIndex];\r\n                    parameters.resized = column.resizedCallbacks;\r\n                    if (isDefined(column.groupIndex) && !column.command) {\r\n                        var groupingTextsOptions = this.option(\"grouping.texts\");\r\n                        var scrollingMode = this.option(\"scrolling.mode\");\r\n                        if (\"virtual\" !== scrollingMode && \"infinite\" !== scrollingMode) {\r\n                            parameters.groupContinuesMessage = data && data.isContinuationOnNextPage && groupingTextsOptions && groupingTextsOptions.groupContinuesMessage;\r\n                            parameters.groupContinuedMessage = data && data.isContinuation && groupingTextsOptions && groupingTextsOptions.groupContinuedMessage\r\n                        }\r\n                    }\r\n                    return parameters\r\n                },\r\n                _setRowsOpacityCore: function($rows, visibleColumns, columnIndex, value) {\r\n                    var columnsController = this._columnsController;\r\n                    var columns = columnsController.getColumns();\r\n                    var column = columns && columns[columnIndex];\r\n                    var columnID = column && column.isBand && column.index;\r\n                    each($rows, (function(rowIndex, row) {\r\n                        if (!$(row).hasClass(GROUP_ROW_CLASS)) {\r\n                            for (var i = 0; i < visibleColumns.length; i++) {\r\n                                if (isNumeric(columnID) && columnsController.isParentBandColumn(visibleColumns[i].index, columnID) || visibleColumns[i].index === columnIndex) {\r\n                                    $rows.eq(rowIndex).children().eq(i).css({\r\n                                        opacity: value\r\n                                    });\r\n                                    if (!isNumeric(columnID)) {\r\n                                        break\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }))\r\n                },\r\n                _getDevicePixelRatio: function() {\r\n                    return getWindow().devicePixelRatio\r\n                },\r\n                renderNoDataText: gridCoreUtils.renderNoDataText,\r\n                getCellOptions: function(rowIndex, columnIdentifier) {\r\n                    var rowOptions = this._dataController.items()[rowIndex];\r\n                    var cellOptions;\r\n                    var column;\r\n                    if (rowOptions) {\r\n                        if (isString(columnIdentifier)) {\r\n                            column = this._columnsController.columnOption(columnIdentifier)\r\n                        } else {\r\n                            column = this._columnsController.getVisibleColumns()[columnIdentifier]\r\n                        }\r\n                        if (column) {\r\n                            cellOptions = this._getCellOptions({\r\n                                value: column.calculateCellValue(rowOptions.data),\r\n                                rowIndex: rowOptions.rowIndex,\r\n                                row: rowOptions,\r\n                                column: column\r\n                            })\r\n                        }\r\n                    }\r\n                    return cellOptions\r\n                },\r\n                getRow: function(index) {\r\n                    if (index >= 0) {\r\n                        var rows = this._getRowElements();\r\n                        if (rows.length > index) {\r\n                            return $(rows[index])\r\n                        }\r\n                    }\r\n                },\r\n                updateFreeSpaceRowHeight: function($table) {\r\n                    var dataController = this._dataController;\r\n                    var itemCount = dataController.items(true).length;\r\n                    var contentElement = this._findContentElement();\r\n                    var freeSpaceRowElements = this._getFreeSpaceRowElements($table);\r\n                    if (freeSpaceRowElements && contentElement && dataController.totalCount() >= 0) {\r\n                        var isFreeSpaceRowVisible = false;\r\n                        if (itemCount > 0) {\r\n                            if (!this._hasHeight) {\r\n                                var freeSpaceRowCount = dataController.pageSize() - itemCount;\r\n                                var scrollingMode = this.option(\"scrolling.mode\");\r\n                                if (freeSpaceRowCount > 0 && dataController.pageCount() > 1 && \"virtual\" !== scrollingMode && \"infinite\" !== scrollingMode) {\r\n                                    setHeight(freeSpaceRowElements, freeSpaceRowCount * this._rowHeight);\r\n                                    isFreeSpaceRowVisible = true\r\n                                }\r\n                                if (!isFreeSpaceRowVisible && $table) {\r\n                                    setHeight(freeSpaceRowElements, 0)\r\n                                } else {\r\n                                    freeSpaceRowElements.toggle(isFreeSpaceRowVisible)\r\n                                }\r\n                                this._updateLastRowBorder(isFreeSpaceRowVisible)\r\n                            } else {\r\n                                freeSpaceRowElements.hide();\r\n                                deferUpdate(() => {\r\n                                    var scrollbarWidth = this.getScrollbarWidth(true);\r\n                                    var elementHeightWithoutScrollbar = getHeight(this.element()) - scrollbarWidth;\r\n                                    var contentHeight = getOuterHeight(contentElement);\r\n                                    var showFreeSpaceRow = elementHeightWithoutScrollbar - contentHeight > 0;\r\n                                    var rowsHeight = this._getRowsHeight(contentElement.children().first());\r\n                                    var $tableElement = $table || this.getTableElements();\r\n                                    var borderTopWidth = Math.ceil(parseFloat($tableElement.css(\"borderTopWidth\")));\r\n                                    var heightCorrection = this._getHeightCorrection();\r\n                                    var resultHeight = elementHeightWithoutScrollbar - rowsHeight - borderTopWidth - heightCorrection;\r\n                                    if (showFreeSpaceRow) {\r\n                                        deferRender(() => {\r\n                                            freeSpaceRowElements.css(\"height\", resultHeight);\r\n                                            isFreeSpaceRowVisible = true;\r\n                                            freeSpaceRowElements.show()\r\n                                        })\r\n                                    }\r\n                                    deferRender(() => this._updateLastRowBorder(isFreeSpaceRowVisible))\r\n                                })\r\n                            }\r\n                        } else {\r\n                            freeSpaceRowElements.css(\"height\", 0);\r\n                            freeSpaceRowElements.show();\r\n                            this._updateLastRowBorder(true)\r\n                        }\r\n                    }\r\n                },\r\n                _getHeightCorrection: function() {\r\n                    var isZoomedWebkit = browser.webkit && this._getDevicePixelRatio() >= 2;\r\n                    var isChromeLatest = browser.chrome && browser.version >= 91;\r\n                    var hasExtraBorderTop = browser.mozilla && browser.version >= 70 && !this.option(\"showRowLines\");\r\n                    return isZoomedWebkit || hasExtraBorderTop || isChromeLatest ? 1 : 0\r\n                },\r\n                _columnOptionChanged: function(e) {\r\n                    var optionNames = e.optionNames;\r\n                    if (e.changeTypes.grouping) {\r\n                        return\r\n                    }\r\n                    if (optionNames.width || optionNames.visibleWidth) {\r\n                        this.callBase(e);\r\n                        this._fireColumnResizedCallbacks()\r\n                    }\r\n                },\r\n                getScrollable: function() {\r\n                    return this._scrollable\r\n                },\r\n                init: function() {\r\n                    var that = this;\r\n                    var dataController = that.getController(\"data\");\r\n                    that.callBase();\r\n                    that._editorFactoryController = that.getController(\"editorFactory\");\r\n                    that._rowHeight = 0;\r\n                    that._scrollTop = 0;\r\n                    that._scrollLeft = -1;\r\n                    that._scrollRight = 0;\r\n                    that._hasHeight = false;\r\n                    dataController.loadingChanged.add((function(isLoading, messageText) {\r\n                        that.setLoading(isLoading, messageText)\r\n                    }));\r\n                    dataController.dataSourceChanged.add((function() {\r\n                        if (that._scrollLeft >= 0) {\r\n                            that._handleScroll({\r\n                                component: that.getScrollable(),\r\n                                scrollOffset: {\r\n                                    top: that._scrollTop,\r\n                                    left: that._scrollLeft\r\n                                }\r\n                            })\r\n                        }\r\n                    }))\r\n                },\r\n                _handleDataChanged: function(change) {\r\n                    switch (change.changeType) {\r\n                        case \"refresh\":\r\n                        case \"prepend\":\r\n                        case \"append\":\r\n                        case \"update\":\r\n                            this.render(null, change);\r\n                            break;\r\n                        default:\r\n                            this._update(change)\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    return [\"isScrollbarVisible\", \"getTopVisibleRowData\", \"getScrollbarWidth\", \"getCellElement\", \"getRowElement\", \"getScrollable\"]\r\n                },\r\n                contentWidth: function() {\r\n                    return getWidth(this.element()) - this.getScrollbarWidth()\r\n                },\r\n                getScrollbarWidth: function(isHorizontal) {\r\n                    var scrollableContainer = this._scrollableContainer && this._scrollableContainer.get(0);\r\n                    var scrollbarWidth = 0;\r\n                    if (scrollableContainer) {\r\n                        if (!isHorizontal) {\r\n                            scrollbarWidth = scrollableContainer.clientWidth ? scrollableContainer.offsetWidth - scrollableContainer.clientWidth : 0\r\n                        } else {\r\n                            scrollbarWidth = scrollableContainer.clientHeight ? scrollableContainer.offsetHeight - scrollableContainer.clientHeight : 0;\r\n                            scrollbarWidth += (that = this, scrollable = that.getScrollable(), scrollable ? Math.ceil(parseFloat($(scrollable.content()).css(\"paddingBottom\"))) : 0)\r\n                        }\r\n                    }\r\n                    var that, scrollable;\r\n                    return scrollbarWidth > 0 ? scrollbarWidth : 0\r\n                },\r\n                _fireColumnResizedCallbacks: function() {\r\n                    var lastColumnWidths = this._lastColumnWidths || [];\r\n                    var columnWidths = [];\r\n                    var columns = this.getColumns();\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        columnWidths[i] = columns[i].visibleWidth;\r\n                        if (columns[i].resizedCallbacks && !isDefined(columns[i].groupIndex) && lastColumnWidths[i] !== columnWidths[i]) {\r\n                            columns[i].resizedCallbacks.fire(columnWidths[i])\r\n                        }\r\n                    }\r\n                    this._lastColumnWidths = columnWidths\r\n                },\r\n                _updateLastRowBorder: function(isFreeSpaceRowVisible) {\r\n                    if (this.option(\"showBorders\") && this.option(\"showRowLines\") && !isFreeSpaceRowVisible) {\r\n                        this.element().addClass(LAST_ROW_BORDER)\r\n                    } else {\r\n                        this.element().removeClass(LAST_ROW_BORDER)\r\n                    }\r\n                },\r\n                _updateScrollable: function() {\r\n                    var dxScrollable = Scrollable.getInstance(this.element());\r\n                    if (dxScrollable) {\r\n                        dxScrollable.update();\r\n                        this._updateHorizontalScrollPosition()\r\n                    }\r\n                },\r\n                _updateHorizontalScrollPosition: function() {\r\n                    var scrollable = this.getScrollable();\r\n                    var scrollLeft = scrollable && scrollable.scrollOffset().left;\r\n                    var rtlEnabled = this.option(\"rtlEnabled\");\r\n                    if (rtlEnabled) {\r\n                        var maxHorizontalScrollOffset = getMaxHorizontalScrollOffset(scrollable);\r\n                        var scrollRight = maxHorizontalScrollOffset - scrollLeft;\r\n                        if (scrollRight !== this._scrollRight) {\r\n                            this._scrollLeft = maxHorizontalScrollOffset - this._scrollRight\r\n                        }\r\n                    }\r\n                    if (this._scrollLeft >= 0 && scrollLeft !== this._scrollLeft) {\r\n                        scrollable.scrollTo({\r\n                            x: this._scrollLeft\r\n                        })\r\n                    }\r\n                },\r\n                _resizeCore: function() {\r\n                    var that = this;\r\n                    that._fireColumnResizedCallbacks();\r\n                    that._updateRowHeight();\r\n                    deferRender((function() {\r\n                        that._renderScrollable();\r\n                        that.renderNoDataText();\r\n                        that.updateFreeSpaceRowHeight();\r\n                        deferUpdate((function() {\r\n                            that._updateScrollable()\r\n                        }))\r\n                    }))\r\n                },\r\n                scrollTo: function(location) {\r\n                    var $element = this.element();\r\n                    var dxScrollable = $element && Scrollable.getInstance($element);\r\n                    if (dxScrollable) {\r\n                        dxScrollable.scrollTo(location)\r\n                    }\r\n                },\r\n                height: function(_height, hasHeight) {\r\n                    var that = this;\r\n                    var $element = this.element();\r\n                    if (0 === arguments.length) {\r\n                        return $element ? getOuterHeight($element, true) : 0\r\n                    }\r\n                    that._hasHeight = void 0 === hasHeight ? \"auto\" !== _height : hasHeight;\r\n                    if (isDefined(_height) && $element) {\r\n                        setHeight($element, _height)\r\n                    }\r\n                },\r\n                setLoading: function(isLoading, messageText) {\r\n                    var loadPanel = this._loadPanel;\r\n                    var dataController = this._dataController;\r\n                    var loadPanelOptions = this.option(\"loadPanel\") || {};\r\n                    var animation = dataController.isLoaded() ? loadPanelOptions.animation : null;\r\n                    var $element = this.element();\r\n                    if (!hasWindow()) {\r\n                        return\r\n                    }\r\n                    if (!loadPanel && void 0 !== messageText && dataController.isLocalStore() && \"auto\" === loadPanelOptions.enabled && $element) {\r\n                        this._renderLoadPanel($element, $element.parent());\r\n                        loadPanel = this._loadPanel\r\n                    }\r\n                    if (loadPanel) {\r\n                        var visibilityOptions = {\r\n                            message: messageText || loadPanelOptions.text,\r\n                            animation: animation,\r\n                            visible: isLoading\r\n                        };\r\n                        if (isLoading) {\r\n                            visibilityOptions.position = gridCoreUtils.calculateLoadPanelPosition($element)\r\n                        }\r\n                        clearTimeout(this._hideLoadingTimeoutID);\r\n                        if (loadPanel.option(\"visible\") && !isLoading) {\r\n                            this._hideLoadingTimeoutID = setTimeout((function() {\r\n                                loadPanel.option(visibilityOptions)\r\n                            }), LOADPANEL_HIDE_TIMEOUT)\r\n                        } else {\r\n                            loadPanel.option(visibilityOptions)\r\n                        }\r\n                    }\r\n                },\r\n                setRowsOpacity: function(columnIndex, value) {\r\n                    var $rows = this._getRowElements().not(\".\" + GROUP_ROW_CLASS) || [];\r\n                    this._setRowsOpacityCore($rows, this.getColumns(), columnIndex, value)\r\n                },\r\n                _getCellElementsCore: function(rowIndex) {\r\n                    var $cells = this.callBase.apply(this, arguments);\r\n                    if ($cells) {\r\n                        var groupCellIndex = $cells.filter(\".\" + GROUP_CELL_CLASS).index();\r\n                        if (groupCellIndex >= 0 && $cells.length > groupCellIndex + 1) {\r\n                            return $cells.slice(0, groupCellIndex + 1)\r\n                        }\r\n                    }\r\n                    return $cells\r\n                },\r\n                _getBoundaryVisibleItemIndex: function(isTop, isFloor) {\r\n                    var itemIndex = 0;\r\n                    var prevOffset = 0;\r\n                    var offset = 0;\r\n                    var viewportBoundary = this._scrollTop;\r\n                    var $contentElement = this._findContentElement();\r\n                    var contentElementOffsetTop = $contentElement && $contentElement.offset().top;\r\n                    var dataController = this.getController(\"data\");\r\n                    var items = dataController.items();\r\n                    var tableElement = this.getTableElement();\r\n                    if (items.length && tableElement) {\r\n                        var rowElements = this._getRowElements(tableElement).filter(\":visible\");\r\n                        if (!isTop) {\r\n                            var height = this._hasHeight ? getOuterHeight(this.element()) : $(getWindow()).outerHeight();\r\n                            viewportBoundary += height\r\n                        }\r\n                        for (itemIndex = 0; itemIndex < items.length; itemIndex++) {\r\n                            prevOffset = offset;\r\n                            var $rowElement = $(rowElements).eq(itemIndex);\r\n                            if ($rowElement.length) {\r\n                                offset = $rowElement.offset();\r\n                                offset = (isTop ? offset.top : offset.top + getOuterHeight($rowElement)) - contentElementOffsetTop;\r\n                                if (offset > viewportBoundary) {\r\n                                    if (itemIndex) {\r\n                                        if (isFloor || 2 * viewportBoundary < Math.round(offset + prevOffset)) {\r\n                                            itemIndex--\r\n                                        }\r\n                                    }\r\n                                    break\r\n                                }\r\n                            }\r\n                        }\r\n                        if (itemIndex && itemIndex === items.length) {\r\n                            itemIndex--\r\n                        }\r\n                    }\r\n                    return itemIndex\r\n                },\r\n                getTopVisibleItemIndex: function(isFloor) {\r\n                    return this._getBoundaryVisibleItemIndex(true, isFloor)\r\n                },\r\n                getBottomVisibleItemIndex: function(isFloor) {\r\n                    return this._getBoundaryVisibleItemIndex(false, isFloor)\r\n                },\r\n                getTopVisibleRowData: function() {\r\n                    var itemIndex = this.getTopVisibleItemIndex();\r\n                    var items = this._dataController.items();\r\n                    if (items[itemIndex]) {\r\n                        return items[itemIndex].data\r\n                    }\r\n                },\r\n                _scrollToElement: function($element, offset) {\r\n                    var scrollable = this.getScrollable();\r\n                    scrollable && scrollable.scrollToElement($element, offset)\r\n                },\r\n                optionChanged: function(args) {\r\n                    this.callBase(args);\r\n                    switch (args.name) {\r\n                        case \"wordWrapEnabled\":\r\n                        case \"showColumnLines\":\r\n                        case \"showRowLines\":\r\n                        case \"rowAlternationEnabled\":\r\n                        case \"rowTemplate\":\r\n                        case \"dataRowTemplate\":\r\n                        case \"twoWayBindingEnabled\":\r\n                            this._invalidate(true, true);\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"scrolling\":\r\n                            this._rowHeight = null;\r\n                            this._tableElement = null;\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"rtlEnabled\":\r\n                            this._rowHeight = null;\r\n                            this._tableElement = null;\r\n                            break;\r\n                        case \"loadPanel\":\r\n                            this._tableElement = null;\r\n                            this._invalidate(true, \"loadPanel.enabled\" !== args.fullName);\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"noDataText\":\r\n                            this.renderNoDataText();\r\n                            args.handled = true\r\n                    }\r\n                },\r\n                dispose: function() {\r\n                    clearTimeout(this._hideLoadingTimeoutID);\r\n                    this._scrollable && this._scrollable.dispose()\r\n                },\r\n                setScrollerSpacing: function() {},\r\n                _restoreErrorRow: function() {}\r\n            }\r\n        }())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.rows.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    rowsModule\r\n} from \"../grid_core/ui.grid_core.rows\";\r\nexport var RowsView = rowsModule.views.rowsView;\r\ngridCore.registerModule(\"rows\", rowsModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.context_menu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport ContextMenu from \"../context_menu\";\r\nvar CONTEXT_MENU = \"dx-context-menu\";\r\nvar viewName = {\r\n    columnHeadersView: \"header\",\r\n    rowsView: \"content\",\r\n    footerView: \"footer\",\r\n    headerPanel: \"headerPanel\"\r\n};\r\nvar VIEW_NAMES = [\"columnHeadersView\", \"rowsView\", \"footerView\", \"headerPanel\"];\r\nvar ContextMenuController = modules.ViewController.inherit({\r\n    init: function() {\r\n        this.createAction(\"onContextMenuPreparing\")\r\n    },\r\n    getContextMenuItems: function(dxEvent) {\r\n        if (!dxEvent) {\r\n            return false\r\n        }\r\n        var that = this;\r\n        var $targetElement = $(dxEvent.target);\r\n        var $element;\r\n        var $targetRowElement;\r\n        var $targetCellElement;\r\n        var menuItems;\r\n        each(VIEW_NAMES, (function() {\r\n            var view = that.getView(this);\r\n            $element = view && view.element();\r\n            if ($element && ($element.is($targetElement) || $element.find($targetElement).length)) {\r\n                var _rowOptions$cells;\r\n                $targetCellElement = $targetElement.closest(\".dx-row > td, .dx-row > tr\");\r\n                $targetRowElement = $targetCellElement.parent();\r\n                var rowIndex = view.getRowIndex($targetRowElement);\r\n                var columnIndex = $targetCellElement[0] && $targetCellElement[0].cellIndex;\r\n                var rowOptions = $targetRowElement.data(\"options\");\r\n                var options = {\r\n                    event: dxEvent,\r\n                    targetElement: getPublicElement($targetElement),\r\n                    target: viewName[this],\r\n                    rowIndex: rowIndex,\r\n                    row: view._getRows()[rowIndex],\r\n                    columnIndex: columnIndex,\r\n                    column: null === rowOptions || void 0 === rowOptions ? void 0 : null === (_rowOptions$cells = rowOptions.cells) || void 0 === _rowOptions$cells ? void 0 : _rowOptions$cells[columnIndex].column\r\n                };\r\n                options.items = view.getContextMenuItems && view.getContextMenuItems(options);\r\n                that.executeAction(\"onContextMenuPreparing\", options);\r\n                that._contextMenuPrepared(options);\r\n                menuItems = options.items;\r\n                if (menuItems) {\r\n                    return false\r\n                }\r\n            }\r\n        }));\r\n        return menuItems\r\n    },\r\n    _contextMenuPrepared: noop\r\n});\r\nvar ContextMenuView = modules.View.inherit({\r\n    _renderCore: function() {\r\n        var that = this;\r\n        var $element = that.element().addClass(CONTEXT_MENU);\r\n        this.setAria(\"role\", \"presentation\", $element);\r\n        this._createComponent($element, ContextMenu, {\r\n            onPositioning: function(actionArgs) {\r\n                var event = actionArgs.event;\r\n                var contextMenuInstance = actionArgs.component;\r\n                var items = that.getController(\"contextMenu\").getContextMenuItems(event);\r\n                if (items) {\r\n                    contextMenuInstance.option(\"items\", items);\r\n                    event.stopPropagation()\r\n                } else {\r\n                    actionArgs.cancel = true\r\n                }\r\n            },\r\n            onItemClick: function(params) {\r\n                params.itemData.onItemClick && params.itemData.onItemClick(params)\r\n            },\r\n            cssClass: that.getWidgetContainerClass(),\r\n            target: that.component.$element()\r\n        })\r\n    }\r\n});\r\nexport var contextMenuModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            onContextMenuPreparing: null\r\n        }\r\n    },\r\n    controllers: {\r\n        contextMenu: ContextMenuController\r\n    },\r\n    views: {\r\n        contextMenuView: ContextMenuView\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.context_menu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport treeListCore from \"./ui.data_grid.core\";\r\nimport {\r\n    contextMenuModule\r\n} from \"../grid_core/ui.grid_core.context_menu\";\r\ntreeListCore.registerModule(\"contextMenu\", contextMenuModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.error_handling.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nvar ERROR_ROW_CLASS = \"dx-error-row\";\r\nvar ERROR_MESSAGE_CLASS = \"dx-error-message\";\r\nvar ERROR_CLOSEBUTTON_CLASS = \"dx-closebutton\";\r\nvar ACTION_CLASS = \"action\";\r\nvar ErrorHandlingController = modules.ViewController.inherit({\r\n    init: function() {\r\n        this._columnHeadersView = this.getView(\"columnHeadersView\");\r\n        this._rowsView = this.getView(\"rowsView\")\r\n    },\r\n    _createErrorRow: function(error, $tableElements) {\r\n        var that = this;\r\n        var $errorRow;\r\n        var $closeButton;\r\n        var $errorMessage = this._renderErrorMessage(error);\r\n        if ($tableElements) {\r\n            $errorRow = $(\"<tr>\").addClass(ERROR_ROW_CLASS);\r\n            $closeButton = $(\"<div>\").addClass(ERROR_CLOSEBUTTON_CLASS).addClass(that.addWidgetPrefix(ACTION_CLASS));\r\n            eventsEngine.on($closeButton, clickEventName, that.createAction((function(args) {\r\n                var e = args.event;\r\n                var $errorRow;\r\n                var errorRowIndex = $(e.currentTarget).closest(\".\" + ERROR_ROW_CLASS).index();\r\n                e.stopPropagation();\r\n                each($tableElements, (function(_, tableElement) {\r\n                    $errorRow = $(tableElement).children(\"tbody\").children(\"tr\").eq(errorRowIndex);\r\n                    that.removeErrorRow($errorRow)\r\n                }));\r\n                that.getController(\"resizing\") && that.getController(\"resizing\").fireContentReadyAction()\r\n            })));\r\n            $(\"<td>\").attr({\r\n                colSpan: that.getController(\"columns\").getVisibleColumns().length,\r\n                role: \"presentation\"\r\n            }).prepend($closeButton).append($errorMessage).appendTo($errorRow);\r\n            return $errorRow\r\n        }\r\n        return $errorMessage\r\n    },\r\n    _renderErrorMessage: function(error) {\r\n        var message = error.url ? error.message.replace(error.url, \"\") : error.message || error;\r\n        var $message = $(\"<div>\").addClass(ERROR_MESSAGE_CLASS).text(message);\r\n        if (error.url) {\r\n            $(\"<a>\").attr(\"href\", error.url).text(error.url).appendTo($message)\r\n        }\r\n        return $message\r\n    },\r\n    renderErrorRow: function(error, rowIndex, $popupContent) {\r\n        var that = this;\r\n        var $errorMessageElement;\r\n        var $firstErrorRow;\r\n        if ($popupContent) {\r\n            $popupContent.find(\".\" + ERROR_MESSAGE_CLASS).remove();\r\n            $errorMessageElement = that._createErrorRow(error);\r\n            $popupContent.prepend($errorMessageElement);\r\n            return $errorMessageElement\r\n        }\r\n        var viewElement = rowIndex >= 0 || !that._columnHeadersView.isVisible() ? that._rowsView : that._columnHeadersView;\r\n        var $tableElements = viewElement.getTableElements();\r\n        each($tableElements, (function(_, tableElement) {\r\n            $errorMessageElement = that._createErrorRow(error, $tableElements);\r\n            $firstErrorRow = $firstErrorRow || $errorMessageElement;\r\n            if (rowIndex >= 0) {\r\n                var $row = viewElement._getRowElements($(tableElement)).eq(rowIndex);\r\n                that.removeErrorRow($row.next());\r\n                $errorMessageElement.insertAfter($row)\r\n            } else {\r\n                var $tbody = $(tableElement).children(\"tbody\");\r\n                var rowElements = $tbody.children(\"tr\");\r\n                if (that._columnHeadersView.isVisible()) {\r\n                    that.removeErrorRow(rowElements.last());\r\n                    $(tableElement).append($errorMessageElement)\r\n                } else {\r\n                    that.removeErrorRow(rowElements.first());\r\n                    $tbody.first().prepend($errorMessageElement)\r\n                }\r\n            }\r\n        }));\r\n        var resizingController = that.getController(\"resizing\");\r\n        resizingController && resizingController.fireContentReadyAction();\r\n        return $firstErrorRow\r\n    },\r\n    removeErrorRow: function($row) {\r\n        if (!$row) {\r\n            var $columnHeaders = this._columnHeadersView && this._columnHeadersView.element();\r\n            $row = $columnHeaders && $columnHeaders.find(\".\" + ERROR_ROW_CLASS);\r\n            if (!$row || !$row.length) {\r\n                var $rowsViewElement = this._rowsView.element();\r\n                $row = $rowsViewElement && $rowsViewElement.find(\".\" + ERROR_ROW_CLASS)\r\n            }\r\n        }\r\n        $row && $row.hasClass(ERROR_ROW_CLASS) && $row.remove()\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"errorRowEnabled\":\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nexport var errorHandlingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            errorRowEnabled: true\r\n        }\r\n    },\r\n    controllers: {\r\n        errorHandling: ErrorHandlingController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                init: function() {\r\n                    var that = this;\r\n                    var errorHandlingController = that.getController(\"errorHandling\");\r\n                    that.callBase();\r\n                    that.dataErrorOccurred.add((function(error, $popupContent) {\r\n                        if (that.option(\"errorRowEnabled\")) {\r\n                            errorHandlingController.renderErrorRow(error, void 0, $popupContent)\r\n                        }\r\n                    }));\r\n                    that.changed.add((function(e) {\r\n                        if (e && \"loadError\" === e.changeType) {\r\n                            return\r\n                        }\r\n                        var errorHandlingController = that.getController(\"errorHandling\");\r\n                        var editingController = that.getController(\"editing\");\r\n                        if (editingController && !editingController.hasChanges()) {\r\n                            errorHandlingController && errorHandlingController.removeErrorRow()\r\n                        }\r\n                    }))\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.error_handling.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    errorHandlingModule\r\n} from \"../grid_core/ui.grid_core.error_handling\";\r\ngridCore.registerModule(\"errorHandling\", errorHandlingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.grid_view.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getInnerWidth,\r\n    getWidth,\r\n    getHeight,\r\n    setHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    deferRender,\r\n    deferUpdate\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    hasWindow,\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isString,\r\n    isDefined,\r\n    isNumeric\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport * as accessibility from \"../shared/accessibility\";\r\nimport browser from \"../../core/utils/browser\";\r\nvar BORDERS_CLASS = \"borders\";\r\nvar TABLE_FIXED_CLASS = \"table-fixed\";\r\nvar IMPORTANT_MARGIN_CLASS = \"important-margin\";\r\nvar GRIDBASE_CONTAINER_CLASS = \"dx-gridbase-container\";\r\nvar HIDDEN_COLUMNS_WIDTH = \"adaptiveHidden\";\r\nvar VIEW_NAMES = [\"columnsSeparatorView\", \"blockSeparatorView\", \"trackerView\", \"headerPanel\", \"columnHeadersView\", \"rowsView\", \"footerView\", \"columnChooserView\", \"filterPanelView\", \"pagerView\", \"draggingHeaderView\", \"contextMenuView\", \"errorView\", \"headerFilterView\", \"filterBuilderView\"];\r\nvar isPercentWidth = function(width) {\r\n    return isString(width) && \"%\" === width.slice(-1)\r\n};\r\nvar isPixelWidth = function(width) {\r\n    return isString(width) && \"px\" === width.slice(-2)\r\n};\r\nvar getContainerHeight = function($container) {\r\n    var clientHeight = $container.get(0).clientHeight;\r\n    var paddingTop = parseFloat($container.css(\"paddingTop\"));\r\n    var paddingBottom = parseFloat($container.css(\"paddingBottom\"));\r\n    return clientHeight - paddingTop - paddingBottom\r\n};\r\nvar calculateFreeWidth = function(that, widths) {\r\n    var contentWidth = that._rowsView.contentWidth();\r\n    var totalWidth = that._getTotalWidth(widths, contentWidth);\r\n    return contentWidth - totalWidth\r\n};\r\nvar calculateFreeWidthWithCurrentMinWidth = function(that, columnIndex, currentMinWidth, widths) {\r\n    return calculateFreeWidth(that, widths.map((function(width, index) {\r\n        return index === columnIndex ? currentMinWidth : width\r\n    })))\r\n};\r\nvar restoreFocus = function(focusedElement, selectionRange) {\r\n    accessibility.hiddenFocus(focusedElement);\r\n    gridCoreUtils.setSelectionRange(focusedElement, selectionRange)\r\n};\r\nvar ResizingController = modules.ViewController.inherit({\r\n    _initPostRenderHandlers: function() {\r\n        var dataController = this._dataController;\r\n        if (!this._refreshSizesHandler) {\r\n            this._refreshSizesHandler = e => {\r\n                dataController.changed.remove(this._refreshSizesHandler);\r\n                var templateDeferreds = e && e.templateDeferreds || [];\r\n                when.apply(this, templateDeferreds).done(() => {\r\n                    this._refreshSizes(e)\r\n                })\r\n            };\r\n            dataController.changed.add(() => {\r\n                dataController.changed.add(this._refreshSizesHandler)\r\n            })\r\n        }\r\n    },\r\n    _refreshSizes: function(e) {\r\n        var resizeDeferred;\r\n        var that = this;\r\n        var changeType = e && e.changeType;\r\n        var isDelayed = e && e.isDelayed;\r\n        var items = that._dataController.items();\r\n        if (!e || \"refresh\" === changeType || \"prepend\" === changeType || \"append\" === changeType) {\r\n            if (!isDelayed) {\r\n                resizeDeferred = that.resize()\r\n            }\r\n        } else if (\"update\" === changeType) {\r\n            var _e$changeTypes;\r\n            if (0 === (null === (_e$changeTypes = e.changeTypes) || void 0 === _e$changeTypes ? void 0 : _e$changeTypes.length)) {\r\n                return\r\n            }\r\n            if ((items.length > 1 || \"insert\" !== e.changeTypes[0]) && !(0 === items.length && \"remove\" === e.changeTypes[0]) && !e.needUpdateDimensions) {\r\n                deferUpdate(() => deferRender(() => deferUpdate(() => {\r\n                    that._setScrollerSpacing(that._hasHeight);\r\n                    that._rowsView.resize()\r\n                })))\r\n            } else {\r\n                resizeDeferred = that.resize()\r\n            }\r\n        }\r\n        if (changeType && \"updateSelection\" !== changeType && \"updateFocusedRow\" !== changeType && \"pageIndex\" !== changeType && !isDelayed) {\r\n            when(resizeDeferred).done((function() {\r\n                that._setAriaRowColCount();\r\n                that.fireContentReadyAction()\r\n            }))\r\n        }\r\n    },\r\n    fireContentReadyAction: function() {\r\n        this.component._fireContentReadyAction()\r\n    },\r\n    _setAriaRowColCount: function() {\r\n        var component = this.component;\r\n        component.setAria({\r\n            rowCount: this._dataController.totalItemsCount(),\r\n            colCount: component.columnCount()\r\n        }, component.$element().children(\".\" + GRIDBASE_CONTAINER_CLASS))\r\n    },\r\n    _getBestFitWidths: function() {\r\n        var _widths;\r\n        var rowsView = this._rowsView;\r\n        var columnHeadersView = this._columnHeadersView;\r\n        var widths = rowsView.getColumnWidths();\r\n        if (!(null !== (_widths = widths) && void 0 !== _widths && _widths.length)) {\r\n            var _rowsView$getTableEle;\r\n            var headersTableElement = columnHeadersView.getTableElement();\r\n            columnHeadersView.setTableElement(null === (_rowsView$getTableEle = rowsView.getTableElement()) || void 0 === _rowsView$getTableEle ? void 0 : _rowsView$getTableEle.children(\".dx-header\"));\r\n            widths = columnHeadersView.getColumnWidths();\r\n            columnHeadersView.setTableElement(headersTableElement)\r\n        }\r\n        return widths\r\n    },\r\n    _setVisibleWidths: function(visibleColumns, widths) {\r\n        var columnsController = this._columnsController;\r\n        columnsController.beginUpdate();\r\n        each(visibleColumns, (function(index, column) {\r\n            var columnId = columnsController.getColumnId(column);\r\n            columnsController.columnOption(columnId, \"visibleWidth\", widths[index])\r\n        }));\r\n        columnsController.endUpdate()\r\n    },\r\n    _toggleBestFitModeForView: function(view, className, isBestFit) {\r\n        if (!view || !view.isVisible()) {\r\n            return\r\n        }\r\n        var $rowsTables = this._rowsView.getTableElements();\r\n        var $viewTables = view.getTableElements();\r\n        each($rowsTables, (index, tableElement) => {\r\n            var $tableBody;\r\n            var $rowsTable = $(tableElement);\r\n            var $viewTable = $viewTables.eq(index);\r\n            if ($viewTable && $viewTable.length) {\r\n                if (isBestFit) {\r\n                    $tableBody = $viewTable.children(\"tbody\").appendTo($rowsTable)\r\n                } else {\r\n                    $tableBody = $rowsTable.children(\".\" + className).appendTo($viewTable)\r\n                }\r\n                $tableBody.toggleClass(className, isBestFit);\r\n                $tableBody.toggleClass(this.addWidgetPrefix(\"best-fit\"), isBestFit)\r\n            }\r\n        })\r\n    },\r\n    _toggleBestFitMode: function(isBestFit) {\r\n        var $rowsTable = this._rowsView.getTableElement();\r\n        var $rowsFixedTable = this._rowsView.getTableElements().eq(1);\r\n        if (!$rowsTable) {\r\n            return\r\n        }\r\n        $rowsTable.css(\"tableLayout\", isBestFit ? \"auto\" : \"fixed\");\r\n        $rowsTable.children(\"colgroup\").css(\"display\", isBestFit ? \"none\" : \"\");\r\n        $rowsFixedTable.toggleClass(this.addWidgetPrefix(TABLE_FIXED_CLASS), !isBestFit);\r\n        this._toggleBestFitModeForView(this._columnHeadersView, \"dx-header\", isBestFit);\r\n        this._toggleBestFitModeForView(this._footerView, \"dx-footer\", isBestFit);\r\n        this._toggleContentMinHeight(isBestFit);\r\n        if (this._needStretch()) {\r\n            $rowsTable.get(0).style.width = isBestFit ? \"auto\" : \"\"\r\n        }\r\n    },\r\n    _toggleContentMinHeight: function(isBestFit) {\r\n        if (this.option(\"wordWrapEnabled\")) {\r\n            var scrollable = this._rowsView.getScrollable();\r\n            var $contentElement = this._rowsView._findContentElement();\r\n            if (false === (null === scrollable || void 0 === scrollable ? void 0 : scrollable.option(\"useNative\"))) {\r\n                $contentElement.css({\r\n                    minHeight: isBestFit ? gridCoreUtils.getContentHeightLimit(browser) : \"\"\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _synchronizeColumns: function() {\r\n        var columnsController = this._columnsController;\r\n        var visibleColumns = columnsController.getVisibleColumns();\r\n        var columnAutoWidth = this.option(\"columnAutoWidth\");\r\n        var needBestFit = this._needBestFit();\r\n        var hasMinWidth = false;\r\n        var resetBestFitMode;\r\n        var isColumnWidthsCorrected = false;\r\n        var resultWidths = [];\r\n        var focusedElement;\r\n        var selectionRange;\r\n        !needBestFit && each(visibleColumns, (function(index, column) {\r\n            if (\"auto\" === column.width) {\r\n                needBestFit = true;\r\n                return false\r\n            }\r\n        }));\r\n        each(visibleColumns, (function(index, column) {\r\n            if (column.minWidth) {\r\n                hasMinWidth = true;\r\n                return false\r\n            }\r\n        }));\r\n        this._setVisibleWidths(visibleColumns, []);\r\n        if (needBestFit) {\r\n            focusedElement = domAdapter.getActiveElement();\r\n            selectionRange = gridCoreUtils.getSelectionRange(focusedElement);\r\n            this._toggleBestFitMode(true);\r\n            resetBestFitMode = true\r\n        }\r\n        var $element = this.component.$element();\r\n        if ($element && $element[0] && this._maxWidth) {\r\n            delete this._maxWidth;\r\n            $element[0].style.maxWidth = \"\"\r\n        }\r\n        deferUpdate(() => {\r\n            if (needBestFit) {\r\n                resultWidths = this._getBestFitWidths();\r\n                each(visibleColumns, (function(index, column) {\r\n                    var columnId = columnsController.getColumnId(column);\r\n                    columnsController.columnOption(columnId, \"bestFitWidth\", resultWidths[index], true)\r\n                }))\r\n            } else if (hasMinWidth) {\r\n                resultWidths = this._getBestFitWidths()\r\n            }\r\n            each(visibleColumns, (function(index) {\r\n                var width = this.width;\r\n                if (\"auto\" !== width) {\r\n                    if (isDefined(width)) {\r\n                        resultWidths[index] = isNumeric(width) || isPixelWidth(width) ? parseFloat(width) : width\r\n                    } else if (!columnAutoWidth) {\r\n                        resultWidths[index] = void 0\r\n                    }\r\n                }\r\n            }));\r\n            if (resetBestFitMode) {\r\n                this._toggleBestFitMode(false);\r\n                resetBestFitMode = false;\r\n                if (focusedElement && focusedElement !== domAdapter.getActiveElement()) {\r\n                    var isFocusOutsideWindow = getBoundingRect(focusedElement).bottom < 0;\r\n                    if (!isFocusOutsideWindow) {\r\n                        restoreFocus(focusedElement, selectionRange)\r\n                    }\r\n                }\r\n            }\r\n            isColumnWidthsCorrected = this._correctColumnWidths(resultWidths, visibleColumns);\r\n            if (columnAutoWidth) {\r\n                ! function() {\r\n                    var expandColumnWidth;\r\n                    each(visibleColumns, (function(index, column) {\r\n                        if (\"groupExpand\" === column.type) {\r\n                            expandColumnWidth = resultWidths[index]\r\n                        }\r\n                    }));\r\n                    each(visibleColumns, (function(index, column) {\r\n                        if (\"groupExpand\" === column.type && expandColumnWidth) {\r\n                            resultWidths[index] = expandColumnWidth\r\n                        }\r\n                    }))\r\n                }();\r\n                if (this._needStretch()) {\r\n                    this._processStretch(resultWidths, visibleColumns)\r\n                }\r\n            }\r\n            deferRender(() => {\r\n                if (needBestFit || isColumnWidthsCorrected) {\r\n                    this._setVisibleWidths(visibleColumns, resultWidths)\r\n                }\r\n            })\r\n        })\r\n    },\r\n    _needBestFit: function() {\r\n        return this.option(\"columnAutoWidth\")\r\n    },\r\n    _needStretch: function() {\r\n        return this._columnsController.getVisibleColumns().some(c => \"auto\" === c.width && !c.command)\r\n    },\r\n    _getAverageColumnsWidth: function(resultWidths) {\r\n        var freeWidth = calculateFreeWidth(this, resultWidths);\r\n        var columnCountWithoutWidth = resultWidths.filter((function(width) {\r\n            return void 0 === width\r\n        })).length;\r\n        return freeWidth / columnCountWithoutWidth\r\n    },\r\n    _correctColumnWidths: function(resultWidths, visibleColumns) {\r\n        var that = this;\r\n        var i;\r\n        var hasPercentWidth = false;\r\n        var hasAutoWidth = false;\r\n        var isColumnWidthsCorrected = false;\r\n        var $element = that.component.$element();\r\n        var hasWidth = that._hasWidth;\r\n        var _loop = function() {\r\n            var index = i;\r\n            var column = visibleColumns[index];\r\n            var isHiddenColumn = resultWidths[index] === HIDDEN_COLUMNS_WIDTH;\r\n            var width = resultWidths[index];\r\n            var minWidth = column.minWidth;\r\n            if (minWidth) {\r\n                if (void 0 === width) {\r\n                    var averageColumnsWidth = that._getAverageColumnsWidth(resultWidths);\r\n                    width = averageColumnsWidth\r\n                } else if (isPercentWidth(width)) {\r\n                    var freeWidth = calculateFreeWidthWithCurrentMinWidth(that, index, minWidth, resultWidths);\r\n                    if (freeWidth < 0) {\r\n                        width = -1\r\n                    }\r\n                }\r\n            }\r\n            var realColumnWidth = that._getRealColumnWidth(index, resultWidths.map((function(columnWidth, columnIndex) {\r\n                return index === columnIndex ? width : columnWidth\r\n            })));\r\n            if (minWidth && !isHiddenColumn && realColumnWidth < minWidth) {\r\n                resultWidths[index] = minWidth;\r\n                isColumnWidthsCorrected = true;\r\n                i = -1\r\n            }\r\n            if (!isDefined(column.width)) {\r\n                hasAutoWidth = true\r\n            }\r\n            if (isPercentWidth(column.width)) {\r\n                hasPercentWidth = true\r\n            }\r\n        };\r\n        for (i = 0; i < visibleColumns.length; i++) {\r\n            _loop()\r\n        }\r\n        if (!hasAutoWidth && resultWidths.length) {\r\n            var $rowsViewElement = that._rowsView.element();\r\n            var contentWidth = that._rowsView.contentWidth();\r\n            var scrollbarWidth = that._rowsView.getScrollbarWidth();\r\n            var totalWidth = that._getTotalWidth(resultWidths, contentWidth);\r\n            if (totalWidth < contentWidth) {\r\n                var lastColumnIndex = gridCoreUtils.getLastResizableColumnIndex(visibleColumns, resultWidths);\r\n                if (lastColumnIndex >= 0) {\r\n                    resultWidths[lastColumnIndex] = \"auto\";\r\n                    isColumnWidthsCorrected = true;\r\n                    if (false === hasWidth && !hasPercentWidth) {\r\n                        var borderWidth = that.option(\"showBorders\") ? Math.ceil(getOuterWidth($rowsViewElement) - getInnerWidth($rowsViewElement)) : 0;\r\n                        that._maxWidth = totalWidth + scrollbarWidth + borderWidth;\r\n                        $element.css(\"maxWidth\", that._maxWidth)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return isColumnWidthsCorrected\r\n    },\r\n    _processStretch: function(resultSizes, visibleColumns) {\r\n        var groupSize = this._rowsView.contentWidth();\r\n        var tableSize = this._getTotalWidth(resultSizes, groupSize);\r\n        var unusedIndexes = {\r\n            length: 0\r\n        };\r\n        if (!resultSizes.length) {\r\n            return\r\n        }\r\n        each(visibleColumns, (function(index) {\r\n            if (this.width || resultSizes[index] === HIDDEN_COLUMNS_WIDTH) {\r\n                unusedIndexes[index] = true;\r\n                unusedIndexes.length++\r\n            }\r\n        }));\r\n        var diff = groupSize - tableSize;\r\n        var diffElement = Math.floor(diff / (resultSizes.length - unusedIndexes.length));\r\n        var onePixelElementsCount = diff - diffElement * (resultSizes.length - unusedIndexes.length);\r\n        if (diff >= 0) {\r\n            for (var i = 0; i < resultSizes.length; i++) {\r\n                if (unusedIndexes[i]) {\r\n                    continue\r\n                }\r\n                resultSizes[i] += diffElement;\r\n                if (onePixelElementsCount > 0) {\r\n                    if (onePixelElementsCount < 1) {\r\n                        resultSizes[i] += onePixelElementsCount;\r\n                        onePixelElementsCount = 0\r\n                    } else {\r\n                        resultSizes[i]++;\r\n                        onePixelElementsCount--\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _getRealColumnWidth: function(columnIndex, columnWidths, groupWidth) {\r\n        var ratio = 1;\r\n        var width = columnWidths[columnIndex];\r\n        if (!isPercentWidth(width)) {\r\n            return parseFloat(width)\r\n        }\r\n        var percentTotalWidth = columnWidths.reduce((sum, width, index) => {\r\n            if (!isPercentWidth(width)) {\r\n                return sum\r\n            }\r\n            return sum + parseFloat(width)\r\n        }, 0);\r\n        var pixelTotalWidth = columnWidths.reduce((sum, width) => {\r\n            if (!width || width === HIDDEN_COLUMNS_WIDTH || isPercentWidth(width)) {\r\n                return sum\r\n            }\r\n            return sum + parseFloat(width)\r\n        }, 0);\r\n        groupWidth = groupWidth || this._rowsView.contentWidth();\r\n        var freeSpace = groupWidth - pixelTotalWidth;\r\n        var percentTotalWidthInPixel = percentTotalWidth * groupWidth / 100;\r\n        if (pixelTotalWidth > 0 && percentTotalWidthInPixel + pixelTotalWidth >= groupWidth) {\r\n            ratio = percentTotalWidthInPixel > freeSpace ? freeSpace / percentTotalWidthInPixel : 1\r\n        }\r\n        return parseFloat(width) * groupWidth * ratio / 100\r\n    },\r\n    _getTotalWidth: function(widths, groupWidth) {\r\n        var result = 0;\r\n        for (var i = 0; i < widths.length; i++) {\r\n            var width = widths[i];\r\n            if (width && width !== HIDDEN_COLUMNS_WIDTH) {\r\n                result += this._getRealColumnWidth(i, widths, groupWidth)\r\n            }\r\n        }\r\n        return Math.ceil(result)\r\n    },\r\n    updateSize: function(rootElement) {\r\n        var $groupElement;\r\n        var width;\r\n        var $rootElement = $(rootElement);\r\n        var importantMarginClass = this.addWidgetPrefix(IMPORTANT_MARGIN_CLASS);\r\n        if (void 0 === this._hasHeight && $rootElement && $rootElement.is(\":visible\") && getWidth($rootElement)) {\r\n            $groupElement = $rootElement.children(\".\" + this.getWidgetContainerClass());\r\n            if ($groupElement.length) {\r\n                $groupElement.detach()\r\n            }\r\n            this._hasHeight = !!getContainerHeight($rootElement);\r\n            width = getWidth($rootElement);\r\n            $rootElement.addClass(importantMarginClass);\r\n            this._hasWidth = getWidth($rootElement) === width;\r\n            $rootElement.removeClass(importantMarginClass);\r\n            if ($groupElement.length) {\r\n                $groupElement.appendTo($rootElement)\r\n            }\r\n        }\r\n    },\r\n    publicMethods: function() {\r\n        return [\"resize\", \"updateDimensions\"]\r\n    },\r\n    resize: function() {\r\n        return !this.component._requireResize && this.updateDimensions()\r\n    },\r\n    updateDimensions: function(checkSize) {\r\n        var that = this;\r\n        that._initPostRenderHandlers();\r\n        if (!that._checkSize(checkSize)) {\r\n            return\r\n        }\r\n        var prevResult = that._resizeDeferred;\r\n        var result = that._resizeDeferred = new Deferred;\r\n        when(prevResult).always((function() {\r\n            deferRender((function() {\r\n                if (that._dataController.isLoaded()) {\r\n                    that._synchronizeColumns()\r\n                }\r\n                that._resetGroupElementHeight();\r\n                deferUpdate((function() {\r\n                    deferRender((function() {\r\n                        deferUpdate((function() {\r\n                            that._updateDimensionsCore()\r\n                        }))\r\n                    }))\r\n                }))\r\n            })).done(result.resolve).fail(result.reject)\r\n        }));\r\n        return result.promise()\r\n    },\r\n    _resetGroupElementHeight: function() {\r\n        var groupElement = this.component.$element().children().get(0);\r\n        var scrollable = this._rowsView.getScrollable();\r\n        if (groupElement && groupElement.style.height && (!scrollable || !scrollable.scrollTop())) {\r\n            groupElement.style.height = \"\"\r\n        }\r\n    },\r\n    _checkSize: function(checkSize) {\r\n        var $rootElement = this.component.$element();\r\n        if (checkSize && (this._lastWidth === getWidth($rootElement) && this._lastHeight === getHeight($rootElement) && this._devicePixelRatio === getWindow().devicePixelRatio || !$rootElement.is(\":visible\"))) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    _setScrollerSpacingCore: function(hasHeight) {\r\n        var that = this;\r\n        var vScrollbarWidth = hasHeight ? that._rowsView.getScrollbarWidth() : 0;\r\n        var hScrollbarWidth = that._rowsView.getScrollbarWidth(true);\r\n        deferRender((function() {\r\n            that._columnHeadersView && that._columnHeadersView.setScrollerSpacing(vScrollbarWidth);\r\n            that._footerView && that._footerView.setScrollerSpacing(vScrollbarWidth);\r\n            that._rowsView.setScrollerSpacing(vScrollbarWidth, hScrollbarWidth)\r\n        }))\r\n    },\r\n    _setScrollerSpacing: function(hasHeight) {\r\n        if (true === this.option(\"scrolling.useNative\")) {\r\n            deferRender(() => {\r\n                deferUpdate(() => {\r\n                    this._setScrollerSpacingCore(hasHeight)\r\n                })\r\n            })\r\n        } else {\r\n            this._setScrollerSpacingCore(hasHeight)\r\n        }\r\n    },\r\n    _updateDimensionsCore: function() {\r\n        var that = this;\r\n        var dataController = that._dataController;\r\n        var rowsView = that._rowsView;\r\n        var $rootElement = that.component.$element();\r\n        var groupElement = $rootElement.children().get(0);\r\n        var rootElementHeight = $rootElement && ($rootElement.get(0).clientHeight || getHeight($rootElement));\r\n        var maxHeight = parseInt($rootElement.css(\"maxHeight\"));\r\n        var maxHeightHappened = maxHeight && rootElementHeight >= maxHeight;\r\n        var height = that.option(\"height\") || $rootElement.get(0).style.height;\r\n        var editorFactory = that.getController(\"editorFactory\");\r\n        var isMaxHeightApplied = maxHeightHappened && groupElement.scrollHeight === groupElement.offsetHeight;\r\n        var $testDiv;\r\n        that.updateSize($rootElement);\r\n        var hasHeight = that._hasHeight || maxHeightHappened;\r\n        if (height && that._hasHeight ^ \"auto\" !== height) {\r\n            $testDiv = $(\"<div>\");\r\n            setHeight($testDiv, height);\r\n            $testDiv.appendTo($rootElement);\r\n            that._hasHeight = !!getHeight($testDiv);\r\n            $testDiv.remove()\r\n        }\r\n        deferRender((function() {\r\n            rowsView.height(null, hasHeight);\r\n            if (maxHeightHappened && !isMaxHeightApplied) {\r\n                $(groupElement).css(\"height\", maxHeight)\r\n            }\r\n            if (!dataController.isLoaded()) {\r\n                rowsView.setLoading(dataController.isLoading());\r\n                return\r\n            }\r\n            deferUpdate((function() {\r\n                that._updateLastSizes($rootElement);\r\n                that._setScrollerSpacing(hasHeight);\r\n                each(VIEW_NAMES, (function(index, viewName) {\r\n                    var view = that.getView(viewName);\r\n                    if (view) {\r\n                        view.resize()\r\n                    }\r\n                }));\r\n                editorFactory && editorFactory.resize()\r\n            }))\r\n        }))\r\n    },\r\n    _updateLastSizes: function($rootElement) {\r\n        this._lastWidth = getWidth($rootElement);\r\n        this._lastHeight = getHeight($rootElement);\r\n        this._devicePixelRatio = getWindow().devicePixelRatio\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"width\":\r\n            case \"height\":\r\n                this.component._renderDimensions();\r\n                this.resize();\r\n            case \"renderAsync\":\r\n                args.handled = true;\r\n                return;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    init: function() {\r\n        this._dataController = this.getController(\"data\");\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._columnHeadersView = this.getView(\"columnHeadersView\");\r\n        this._footerView = this.getView(\"footerView\");\r\n        this._rowsView = this.getView(\"rowsView\")\r\n    }\r\n});\r\nvar SynchronizeScrollingController = modules.ViewController.inherit({\r\n    _scrollChangedHandler: function(views, pos, viewName) {\r\n        for (var j = 0; j < views.length; j++) {\r\n            if (views[j] && views[j].name !== viewName) {\r\n                views[j].scrollTo({\r\n                    left: pos.left,\r\n                    top: pos.top\r\n                })\r\n            }\r\n        }\r\n    },\r\n    init: function() {\r\n        var views = [this.getView(\"columnHeadersView\"), this.getView(\"footerView\"), this.getView(\"rowsView\")];\r\n        for (var i = 0; i < views.length; i++) {\r\n            var view = views[i];\r\n            if (view) {\r\n                view.scrollChanged.add(this._scrollChangedHandler.bind(this, views))\r\n            }\r\n        }\r\n    }\r\n});\r\nvar GridView = modules.View.inherit({\r\n    _endUpdateCore: function() {\r\n        if (this.component._requireResize) {\r\n            this.component._requireResize = false;\r\n            this._resizingController.resize()\r\n        }\r\n    },\r\n    _getWidgetAriaLabel: function() {\r\n        return \"dxDataGrid-ariaDataGrid\"\r\n    },\r\n    init: function() {\r\n        this._resizingController = this.getController(\"resizing\");\r\n        this._dataController = this.getController(\"data\")\r\n    },\r\n    getView: function(name) {\r\n        return this.component._views[name]\r\n    },\r\n    element: function() {\r\n        return this._groupElement\r\n    },\r\n    optionChanged: function(args) {\r\n        if (isDefined(this._groupElement) && \"showBorders\" === args.name) {\r\n            this._groupElement.toggleClass(this.addWidgetPrefix(BORDERS_CLASS), !!args.value);\r\n            args.handled = true\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    },\r\n    _renderViews: function($groupElement) {\r\n        var that = this;\r\n        each(VIEW_NAMES, (function(index, viewName) {\r\n            var view = that.getView(viewName);\r\n            if (view) {\r\n                view.render($groupElement)\r\n            }\r\n        }))\r\n    },\r\n    _getTableRoleName: function() {\r\n        return \"grid\"\r\n    },\r\n    render: function($rootElement) {\r\n        var isFirstRender = !this._groupElement;\r\n        var $groupElement = this._groupElement || $(\"<div>\").addClass(this.getWidgetContainerClass());\r\n        $groupElement.addClass(GRIDBASE_CONTAINER_CLASS);\r\n        $groupElement.toggleClass(this.addWidgetPrefix(BORDERS_CLASS), !!this.option(\"showBorders\"));\r\n        this.setAria(\"role\", \"presentation\", $rootElement);\r\n        this.component.setAria({\r\n            role: this._getTableRoleName(),\r\n            label: messageLocalization.format(this._getWidgetAriaLabel())\r\n        }, $groupElement);\r\n        this._rootElement = $rootElement || this._rootElement;\r\n        if (isFirstRender) {\r\n            this._groupElement = $groupElement;\r\n            hasWindow() && this.getController(\"resizing\").updateSize($rootElement);\r\n            $groupElement.appendTo($rootElement)\r\n        }\r\n        this._renderViews($groupElement)\r\n    },\r\n    update: function() {\r\n        var $rootElement = this._rootElement;\r\n        var $groupElement = this._groupElement;\r\n        var resizingController = this.getController(\"resizing\");\r\n        if ($rootElement && $groupElement) {\r\n            resizingController.resize();\r\n            if (this._dataController.isLoaded()) {\r\n                this._resizingController.fireContentReadyAction()\r\n            }\r\n        }\r\n    }\r\n});\r\nexport var gridViewModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            showBorders: false,\r\n            renderAsync: false\r\n        }\r\n    },\r\n    controllers: {\r\n        resizing: ResizingController,\r\n        synchronizeScrolling: SynchronizeScrollingController\r\n    },\r\n    views: {\r\n        gridView: GridView\r\n    },\r\n    VIEW_NAMES: VIEW_NAMES\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grid_view.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    gridViewModule\r\n} from \"../grid_core/ui.grid_core.grid_view\";\r\ngridCore.registerModule(\"gridView\", gridViewModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.header_panel.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport Toolbar from \"../toolbar\";\r\nimport {\r\n    ColumnsView\r\n} from \"./ui.grid_core.columns_view\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport \"../drop_down_menu\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getPathParts\r\n} from \"../../core/utils/data\";\r\nvar HEADER_PANEL_CLASS = \"header-panel\";\r\nvar TOOLBAR_BUTTON_CLASS = \"toolbar-button\";\r\nvar TOOLBAR_ARIA_LABEL = \"-ariaToolbar\";\r\nvar HeaderPanel = ColumnsView.inherit({\r\n    _getToolbarItems: function() {\r\n        return []\r\n    },\r\n    _getButtonContainer: function() {\r\n        return $(\"<div>\").addClass(this.addWidgetPrefix(TOOLBAR_BUTTON_CLASS))\r\n    },\r\n    _getToolbarButtonClass: function(specificClass) {\r\n        var secondClass = specificClass ? \" \" + specificClass : \"\";\r\n        return this.addWidgetPrefix(TOOLBAR_BUTTON_CLASS) + secondClass\r\n    },\r\n    _getToolbarOptions: function() {\r\n        var userToolbarOptions = this.option(\"toolbar\");\r\n        var options = {\r\n            toolbarOptions: {\r\n                items: this._getToolbarItems(),\r\n                visible: null === userToolbarOptions || void 0 === userToolbarOptions ? void 0 : userToolbarOptions.visible,\r\n                disabled: null === userToolbarOptions || void 0 === userToolbarOptions ? void 0 : userToolbarOptions.disabled,\r\n                onItemRendered: function(e) {\r\n                    var itemRenderedCallback = e.itemData.onItemRendered;\r\n                    if (itemRenderedCallback) {\r\n                        itemRenderedCallback(e)\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        var userItems = null === userToolbarOptions || void 0 === userToolbarOptions ? void 0 : userToolbarOptions.items;\r\n        options.toolbarOptions.items = this._normalizeToolbarItems(options.toolbarOptions.items, userItems);\r\n        this.executeAction(\"onToolbarPreparing\", options);\r\n        if (options.toolbarOptions && !isDefined(options.toolbarOptions.visible)) {\r\n            var toolbarItems = options.toolbarOptions.items;\r\n            options.toolbarOptions.visible = !!(null !== toolbarItems && void 0 !== toolbarItems && toolbarItems.length)\r\n        }\r\n        return options.toolbarOptions\r\n    },\r\n    _normalizeToolbarItems(defaultItems, userItems) {\r\n        var defaultProps = {\r\n            location: \"after\"\r\n        };\r\n        var isArray = Array.isArray(userItems);\r\n        if (!isDefined(userItems)) {\r\n            return defaultItems\r\n        }\r\n        if (!isArray) {\r\n            userItems = [userItems]\r\n        }\r\n        var defaultButtonsByNames = {};\r\n        defaultItems.forEach(button => {\r\n            defaultButtonsByNames[button.name] = button\r\n        });\r\n        var normalizedItems = userItems.map(button => {\r\n            var needHideButton = false;\r\n            if (isString(button)) {\r\n                button = {\r\n                    name: button\r\n                };\r\n                needHideButton = true\r\n            }\r\n            if (isDefined(button.name)) {\r\n                if (isDefined(defaultButtonsByNames[button.name])) {\r\n                    button = extend(true, {}, defaultButtonsByNames[button.name], button)\r\n                } else if (needHideButton) {\r\n                    button.visible = false\r\n                }\r\n            }\r\n            return extend(true, {}, defaultProps, button)\r\n        });\r\n        return isArray ? normalizedItems : normalizedItems[0]\r\n    },\r\n    _renderCore: function() {\r\n        if (!this._toolbar) {\r\n            var $headerPanel = this.element();\r\n            $headerPanel.addClass(this.addWidgetPrefix(HEADER_PANEL_CLASS));\r\n            var label = messageLocalization.format(this.component.NAME + TOOLBAR_ARIA_LABEL);\r\n            var $toolbar = $(\"<div>\").attr(\"aria-label\", label).appendTo($headerPanel);\r\n            this._toolbar = this._createComponent($toolbar, Toolbar, this._toolbarOptions)\r\n        } else {\r\n            this._toolbar.option(this._toolbarOptions)\r\n        }\r\n    },\r\n    _columnOptionChanged: noop,\r\n    _handleDataChanged: function() {\r\n        if (this._requireReady) {\r\n            this.render()\r\n        }\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this.createAction(\"onToolbarPreparing\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    render: function() {\r\n        this._toolbarOptions = this._getToolbarOptions();\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    setToolbarItemDisabled: function(name, optionValue) {\r\n        var toolbarInstance = this._toolbar;\r\n        if (toolbarInstance) {\r\n            var items = toolbarInstance.option(\"items\") || [];\r\n            var itemIndex = items.indexOf(items.filter((function(item) {\r\n                return item.name === name\r\n            }))[0]);\r\n            if (itemIndex >= 0) {\r\n                var itemOptionPrefix = \"items[\" + itemIndex + \"]\";\r\n                if (toolbarInstance.option(itemOptionPrefix + \".options\")) {\r\n                    toolbarInstance.option(itemOptionPrefix + \".options.disabled\", optionValue)\r\n                } else {\r\n                    toolbarInstance.option(itemOptionPrefix + \".disabled\", optionValue)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    updateToolbarDimensions: function() {\r\n        var _this$_toolbar;\r\n        null === (_this$_toolbar = this._toolbar) || void 0 === _this$_toolbar ? void 0 : _this$_toolbar.updateDimensions()\r\n    },\r\n    getHeaderPanel: function() {\r\n        return this.element()\r\n    },\r\n    getHeight: function() {\r\n        return this.getElementHeight()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"onToolbarPreparing\" === args.name) {\r\n            this._invalidate();\r\n            args.handled = true\r\n        }\r\n        if (\"toolbar\" === args.name) {\r\n            args.handled = true;\r\n            if (this._toolbar) {\r\n                var parts = getPathParts(args.fullName);\r\n                var optionName = args.fullName.replace(/^toolbar\\./, \"\");\r\n                if (1 === parts.length) {\r\n                    var toolbarOptions = this._getToolbarOptions();\r\n                    this._toolbar.option(toolbarOptions)\r\n                } else if (\"items\" === parts[1]) {\r\n                    if (2 === parts.length) {\r\n                        var _toolbarOptions = this._getToolbarOptions();\r\n                        this._toolbar.option(\"items\", _toolbarOptions.items)\r\n                    } else if (3 === parts.length) {\r\n                        var normalizedItem = this._normalizeToolbarItems(this._getToolbarItems(), args.value);\r\n                        this._toolbar.option(optionName, normalizedItem)\r\n                    } else if (parts.length >= 4) {\r\n                        this._toolbar.option(optionName, args.value)\r\n                    }\r\n                } else {\r\n                    this._toolbar.option(optionName, args.value)\r\n                }\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    isVisible: function() {\r\n        return this._toolbarOptions && this._toolbarOptions.visible\r\n    },\r\n    allowDragging: noop\r\n});\r\nexport var headerPanelModule = {\r\n    defaultOptions: function() {\r\n        return {}\r\n    },\r\n    views: {\r\n        headerPanel: HeaderPanel\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            resizing: {\r\n                _updateDimensionsCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this.getView(\"headerPanel\").updateToolbarDimensions()\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.header_panel.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    headerPanelModule\r\n} from \"../grid_core/ui.grid_core.header_panel\";\r\nexport var HeaderPanel = headerPanelModule.views.headerPanel;\r\ngridCore.registerModule(\"headerPanel\", headerPanelModule);\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.base.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    deferRender,\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isFunction,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    logger\r\n} from \"../../core/utils/console\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    isMaterial\r\n} from \"../themes\";\r\nvar DATAGRID_ROW_SELECTOR = \".dx-row\";\r\nvar DATAGRID_DEPRECATED_TEMPLATE_WARNING = \"Specifying grid templates with the jQuery selector name is now deprecated. Use the DOM Node or the jQuery object that references this selector instead.\";\r\nimport \"./ui.data_grid.column_headers\";\r\nimport \"./ui.data_grid.columns_controller\";\r\nimport \"./ui.data_grid.data_controller\";\r\nimport \"./ui.data_grid.sorting\";\r\nimport \"./ui.data_grid.rows\";\r\nimport \"./ui.data_grid.context_menu\";\r\nimport \"./ui.data_grid.error_handling\";\r\nimport \"./ui.data_grid.grid_view\";\r\nimport \"./ui.data_grid.header_panel\";\r\ngridCore.registerModulesOrder([\"stateStoring\", \"columns\", \"selection\", \"editorFactory\", \"columnChooser\", \"grouping\", \"editing\", \"editingRowBased\", \"editingFormBased\", \"editingCellBased\", \"masterDetail\", \"validating\", \"adaptivity\", \"data\", \"virtualScrolling\", \"columnHeaders\", \"filterRow\", \"headerPanel\", \"headerFilter\", \"sorting\", \"search\", \"rows\", \"pager\", \"columnsResizingReordering\", \"contextMenu\", \"keyboardNavigation\", \"errorHandling\", \"summary\", \"columnFixing\", \"export\", \"gridView\"]);\r\nvar DataGrid = Widget.inherit({\r\n    _activeStateUnit: DATAGRID_ROW_SELECTOR,\r\n    _getDefaultOptions: function() {\r\n        var result = this.callBase();\r\n        each(gridCore.modules, (function() {\r\n            if (isFunction(this.defaultOptions)) {\r\n                extend(true, result, this.defaultOptions())\r\n            }\r\n        }));\r\n        return result\r\n    },\r\n    _setDeprecatedOptions: function() {\r\n        this.callBase();\r\n        extend(this._deprecatedOptions, {\r\n            useKeyboard: {\r\n                since: \"19.2\",\r\n                alias: \"keyboardNavigation.enabled\"\r\n            },\r\n            rowTemplate: {\r\n                since: \"21.2\",\r\n                message: 'Use the \"dataRowTemplate\" option instead'\r\n            },\r\n            onToolbarPreparing: {\r\n                since: \"21.2\",\r\n                message: 'Use the \"toolbar\" option instead'\r\n            }\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                showRowLines: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return isMaterial()\r\n            },\r\n            options: {\r\n                showRowLines: true,\r\n                showColumnLines: false,\r\n                headerFilter: {\r\n                    height: 315\r\n                },\r\n                editing: {\r\n                    useIcons: true\r\n                },\r\n                selection: {\r\n                    showCheckBoxesMode: \"always\"\r\n                }\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return browser.webkit\r\n            },\r\n            options: {\r\n                loadingTimeout: 30,\r\n                loadPanel: {\r\n                    animation: {\r\n                        show: {\r\n                            easing: \"cubic-bezier(1, 0, 1, 0)\",\r\n                            duration: 500,\r\n                            from: {\r\n                                opacity: 0\r\n                            },\r\n                            to: {\r\n                                opacity: 1\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            device: function(_device) {\r\n                return \"desktop\" !== _device.deviceType\r\n            },\r\n            options: {\r\n                grouping: {\r\n                    expandMode: \"rowClick\"\r\n                }\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        gridCore.processModules(this, gridCore);\r\n        gridCore.callModuleItemsMethod(this, \"init\")\r\n    },\r\n    _clean: noop,\r\n    _optionChanged: function(args) {\r\n        gridCore.callModuleItemsMethod(this, \"optionChanged\", [args]);\r\n        if (!args.handled) {\r\n            this.callBase(args)\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        this.updateDimensions(true)\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this.updateDimensions()\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this.getView(\"gridView\").render(this.$element())\r\n    },\r\n    _renderContentImpl: function() {\r\n        this.getView(\"gridView\").update()\r\n    },\r\n    _renderContent: function() {\r\n        var that = this;\r\n        deferRender((function() {\r\n            that._renderContentImpl()\r\n        }))\r\n    },\r\n    _getTemplate: function(templateName) {\r\n        var template = templateName;\r\n        if (isString(template) && \"#\" === template[0]) {\r\n            template = $(templateName);\r\n            logger.warn(DATAGRID_DEPRECATED_TEMPLATE_WARNING)\r\n        }\r\n        return this.callBase(template)\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        gridCore.callModuleItemsMethod(this, \"dispose\")\r\n    },\r\n    isReady: function() {\r\n        return this.getController(\"data\").isReady()\r\n    },\r\n    beginUpdate: function() {\r\n        this.callBase();\r\n        gridCore.callModuleItemsMethod(this, \"beginUpdate\")\r\n    },\r\n    endUpdate: function() {\r\n        gridCore.callModuleItemsMethod(this, \"endUpdate\");\r\n        this.callBase()\r\n    },\r\n    getController: function(name) {\r\n        return this._controllers[name]\r\n    },\r\n    getView: function(name) {\r\n        return this._views[name]\r\n    },\r\n    focus: function(element) {\r\n        this.getController(\"keyboardNavigation\").focus(element)\r\n    }\r\n});\r\nDataGrid.registerModule = gridCore.registerModule.bind(gridCore);\r\nregisterComponent(\"dxDataGrid\", DataGrid);\r\nexport default DataGrid;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.state_storing_core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    sessionStorage\r\n} from \"../../core/utils/storage\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    isEmptyObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    fromPromise\r\n} from \"../../core/utils/deferred\";\r\nvar DATE_REGEX = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/;\r\nvar parseDates = function parseDates(state) {\r\n    if (!state) {\r\n        return\r\n    }\r\n    each(state, (function(key, value) {\r\n        if (isPlainObject(value) || Array.isArray(value)) {\r\n            parseDates(value)\r\n        } else if (\"string\" === typeof value) {\r\n            var date = DATE_REGEX.exec(value);\r\n            if (date) {\r\n                state[key] = new Date(Date.UTC(+date[1], +date[2] - 1, +date[3], +date[4], +date[5], +date[6]))\r\n            }\r\n        }\r\n    }))\r\n};\r\nexport var StateStoringController = modules.ViewController.inherit(function() {\r\n    var getStorage = function(options) {\r\n        var storage = \"sessionStorage\" === options.type ? sessionStorage() : getWindow().localStorage;\r\n        if (!storage) {\r\n            throw new Error(\"E1007\")\r\n        }\r\n        return storage\r\n    };\r\n    var getUniqueStorageKey = function(options) {\r\n        return isDefined(options.storageKey) ? options.storageKey : \"storage\"\r\n    };\r\n    return {\r\n        _loadState: function() {\r\n            var options = this.option(\"stateStoring\");\r\n            if (\"custom\" === options.type) {\r\n                return options.customLoad && options.customLoad()\r\n            }\r\n            try {\r\n                return JSON.parse(getStorage(options).getItem(getUniqueStorageKey(options)))\r\n            } catch (e) {\r\n                errors.log(e.message)\r\n            }\r\n        },\r\n        _saveState: function(state) {\r\n            var options = this.option(\"stateStoring\");\r\n            if (\"custom\" === options.type) {\r\n                options.customSave && options.customSave(state);\r\n                return\r\n            }\r\n            try {\r\n                getStorage(options).setItem(getUniqueStorageKey(options), JSON.stringify(state))\r\n            } catch (e) {\r\n                errors.log(e.message)\r\n            }\r\n        },\r\n        publicMethods: function() {\r\n            return [\"state\"]\r\n        },\r\n        isEnabled: function() {\r\n            return this.option(\"stateStoring.enabled\")\r\n        },\r\n        init: function() {\r\n            var that = this;\r\n            that._state = {};\r\n            that._isLoaded = false;\r\n            that._isLoading = false;\r\n            that._windowUnloadHandler = function() {\r\n                if (void 0 !== that._savingTimeoutID) {\r\n                    that._saveState(that.state())\r\n                }\r\n            };\r\n            eventsEngine.on(getWindow(), \"unload\", that._windowUnloadHandler);\r\n            return that\r\n        },\r\n        isLoaded: function() {\r\n            return this._isLoaded\r\n        },\r\n        isLoading: function() {\r\n            return this._isLoading\r\n        },\r\n        load: function() {\r\n            this._isLoading = true;\r\n            var loadResult = fromPromise(this._loadState());\r\n            loadResult.always(() => {\r\n                this._isLoaded = true;\r\n                this._isLoading = false\r\n            }).done(state => {\r\n                if (null !== state && !isEmptyObject(state)) {\r\n                    this.state(state)\r\n                }\r\n            });\r\n            return loadResult\r\n        },\r\n        state: function(_state) {\r\n            var that = this;\r\n            if (!arguments.length) {\r\n                return extend(true, {}, that._state)\r\n            } else {\r\n                that._state = extend({}, _state);\r\n                parseDates(that._state)\r\n            }\r\n        },\r\n        save: function() {\r\n            var that = this;\r\n            clearTimeout(that._savingTimeoutID);\r\n            that._savingTimeoutID = setTimeout((function() {\r\n                that._saveState(that.state());\r\n                that._savingTimeoutID = void 0\r\n            }), that.option(\"stateStoring.savingTimeout\"))\r\n        },\r\n        optionChanged: function(args) {\r\n            switch (args.name) {\r\n                case \"stateStoring\":\r\n                    if (this.isEnabled() && !this.isLoading()) {\r\n                        this.load()\r\n                    }\r\n                    args.handled = true;\r\n                    break;\r\n                default:\r\n                    this.callBase(args)\r\n            }\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._savingTimeoutID);\r\n            eventsEngine.off(getWindow(), \"unload\", this._windowUnloadHandler)\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.state_storing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getKeyHash,\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    StateStoringController\r\n} from \"./ui.grid_core.state_storing_core\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar getDataState = that => {\r\n    var pagerView = that.getView(\"pagerView\");\r\n    var dataController = that.getController(\"data\");\r\n    var state = {\r\n        allowedPageSizes: pagerView ? pagerView.getPageSizes() : void 0,\r\n        filterPanel: {\r\n            filterEnabled: that.option(\"filterPanel.filterEnabled\")\r\n        },\r\n        filterValue: that.option(\"filterValue\"),\r\n        focusedRowKey: that.option(\"focusedRowEnabled\") ? that.option(\"focusedRowKey\") : void 0\r\n    };\r\n    return extend(state, dataController.getUserState())\r\n};\r\nvar processLoadState = that => {\r\n    var columnsController = that.getController(\"columns\");\r\n    var selectionController = that.getController(\"selection\");\r\n    var exportController = that.getController(\"export\");\r\n    var dataController = that.getController(\"data\");\r\n    if (columnsController) {\r\n        columnsController.columnsChanged.add((function() {\r\n            that.updateState({\r\n                columns: columnsController.getUserState()\r\n            })\r\n        }))\r\n    }\r\n    if (selectionController) {\r\n        selectionController.selectionChanged.add((function(e) {\r\n            that.updateState({\r\n                selectedRowKeys: e.selectedRowKeys,\r\n                selectionFilter: e.selectionFilter\r\n            })\r\n        }))\r\n    }\r\n    if (dataController) {\r\n        that._initialPageSize = that.option(\"paging.pageSize\");\r\n        that._initialFilterValue = that.option(\"filterValue\");\r\n        dataController.changed.add((function() {\r\n            var state = getDataState(that);\r\n            that.updateState(state)\r\n        }))\r\n    }\r\n    if (exportController) {\r\n        exportController.selectionOnlyChanged.add((function() {\r\n            that.updateState({\r\n                exportSelectionOnly: exportController.selectionOnly()\r\n            })\r\n        }))\r\n    }\r\n};\r\nvar DEFAULT_FILTER_VALUE = null;\r\nvar getFilterValue = (that, state) => {\r\n    var filterSyncController = that.getController(\"filterSync\");\r\n    var columnsController = that.getController(\"columns\");\r\n    var hasFilterState = state.columns || void 0 !== state.filterValue;\r\n    if (filterSyncController) {\r\n        if (hasFilterState) {\r\n            return state.filterValue || filterSyncController.getFilterValueFromColumns(state.columns)\r\n        } else {\r\n            return that._initialFilterValue || filterSyncController.getFilterValueFromColumns(columnsController.getColumns())\r\n        }\r\n    }\r\n    return DEFAULT_FILTER_VALUE\r\n};\r\nexport var stateStoringModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            stateStoring: {\r\n                enabled: false,\r\n                storageKey: null,\r\n                type: \"localStorage\",\r\n                customLoad: null,\r\n                customSave: null,\r\n                savingTimeout: 2e3\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        stateStoring: StateStoringController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                init: function() {\r\n                    var that = this;\r\n                    var dataController = that.getController(\"data\");\r\n                    that.callBase();\r\n                    dataController.stateLoaded.add((function() {\r\n                        if (dataController.isLoaded() && !dataController.getDataSource()) {\r\n                            that.setLoading(false);\r\n                            that.renderNoDataText();\r\n                            var columnHeadersView = that.component.getView(\"columnHeadersView\");\r\n                            columnHeadersView && columnHeadersView.render();\r\n                            that.component._fireContentReadyAction()\r\n                        }\r\n                    }))\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            stateStoring: {\r\n                init: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    processLoadState(this)\r\n                },\r\n                isLoading: function() {\r\n                    return this.callBase() || this.getController(\"data\").isStateLoading()\r\n                },\r\n                state: function(_state) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    if (void 0 !== _state) {\r\n                        this.applyState(extend({}, _state))\r\n                    }\r\n                    return result\r\n                },\r\n                updateState: function(state) {\r\n                    if (this.isEnabled()) {\r\n                        var oldState = this.state();\r\n                        var newState = extend({}, oldState, state);\r\n                        var oldStateHash = getKeyHash(oldState);\r\n                        var newStateHash = getKeyHash(newState);\r\n                        if (!equalByValue(oldStateHash, newStateHash)) {\r\n                            extend(this._state, state);\r\n                            this.save()\r\n                        }\r\n                    } else {\r\n                        extend(this._state, state)\r\n                    }\r\n                },\r\n                applyState: function(state) {\r\n                    var allowedPageSizes = state.allowedPageSizes;\r\n                    var searchText = state.searchText;\r\n                    var selectedRowKeys = state.selectedRowKeys;\r\n                    var selectionFilter = state.selectionFilter;\r\n                    var exportController = this.getController(\"export\");\r\n                    var columnsController = this.getController(\"columns\");\r\n                    var dataController = this.getController(\"data\");\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    var isVirtualScrollingMode = \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\r\n                    var showPageSizeSelector = true === this.option(\"pager.visible\") && this.option(\"pager.showPageSizeSelector\");\r\n                    this.component.beginUpdate();\r\n                    if (columnsController) {\r\n                        columnsController.setUserState(state.columns)\r\n                    }\r\n                    if (exportController) {\r\n                        exportController.selectionOnly(state.exportSelectionOnly)\r\n                    }\r\n                    if (!this.option(\"selection.deferred\")) {\r\n                        this.option(\"selectedRowKeys\", selectedRowKeys || [])\r\n                    }\r\n                    this.option(\"selectionFilter\", selectionFilter);\r\n                    if (allowedPageSizes && \"auto\" === this.option(\"pager.allowedPageSizes\")) {\r\n                        this.option(\"pager\").allowedPageSizes = allowedPageSizes\r\n                    }\r\n                    if (this.option(\"focusedRowEnabled\")) {\r\n                        this.option(\"focusedRowIndex\", -1);\r\n                        this.option(\"focusedRowKey\", state.focusedRowKey || null)\r\n                    }\r\n                    this.component.endUpdate();\r\n                    this.option(\"searchPanel.text\", searchText || \"\");\r\n                    this.option(\"filterValue\", getFilterValue(this, state));\r\n                    this.option(\"filterPanel.filterEnabled\", state.filterPanel ? state.filterPanel.filterEnabled : true);\r\n                    this.option(\"paging.pageIndex\", state.pageIndex || 0);\r\n                    this.option(\"paging.pageSize\", (!isVirtualScrollingMode || showPageSizeSelector) && isDefined(state.pageSize) ? state.pageSize : this._initialPageSize);\r\n                    dataController && dataController.reset()\r\n                }\r\n            },\r\n            columns: {\r\n                getVisibleColumns: function() {\r\n                    var visibleColumns = this.callBase.apply(this, arguments);\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    return stateStoringController.isEnabled() && !stateStoringController.isLoaded() ? [] : visibleColumns\r\n                }\r\n            },\r\n            data: {\r\n                callbackNames: function() {\r\n                    return this.callBase().concat([\"stateLoaded\"])\r\n                },\r\n                _refreshDataSource: function() {\r\n                    var callBase = this.callBase;\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    if (stateStoringController.isEnabled() && !stateStoringController.isLoaded()) {\r\n                        clearTimeout(this._restoreStateTimeoutID);\r\n                        var deferred = new Deferred;\r\n                        this._restoreStateTimeoutID = setTimeout(() => {\r\n                            stateStoringController.load().always(() => {\r\n                                this._restoreStateTimeoutID = null\r\n                            }).done(() => {\r\n                                callBase.call(this);\r\n                                this.stateLoaded.fire();\r\n                                deferred.resolve()\r\n                            }).fail(error => {\r\n                                this.stateLoaded.fire();\r\n                                this._handleLoadError(error || \"Unknown error\");\r\n                                deferred.reject()\r\n                            })\r\n                        });\r\n                        return deferred.promise()\r\n                    } else if (!this.isStateLoading()) {\r\n                        callBase.call(this)\r\n                    }\r\n                },\r\n                isLoading: function() {\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    return this.callBase() || stateStoringController.isLoading()\r\n                },\r\n                isStateLoading: function() {\r\n                    return isDefined(this._restoreStateTimeoutID)\r\n                },\r\n                isLoaded: function() {\r\n                    return this.callBase() && !this.isStateLoading()\r\n                },\r\n                dispose: function() {\r\n                    clearTimeout(this._restoreStateTimeoutID);\r\n                    this.callBase()\r\n                }\r\n            },\r\n            selection: {\r\n                _fireSelectionChanged: function(options) {\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    var isDeferredSelection = this.option(\"selection.deferred\");\r\n                    if (stateStoringController.isLoading() && isDeferredSelection) {\r\n                        return\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.state_storing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    stateStoringModule\r\n} from \"../grid_core/ui.grid_core.state_storing\";\r\ngridCore.registerModule(\"stateStoring\", stateStoringModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.selection.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport gridCore from \"../data_grid/ui.data_grid.core\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    touch\r\n} from \"../../core/utils/support\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    addNamespace,\r\n    isCommandKeyPressed\r\n} from \"../../events/utils/index\";\r\nimport holdEvent from \"../../events/hold\";\r\nimport Selection from \"../selection/selection\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport errors from \"../widget/ui.errors\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar ROW_SELECTION_CLASS = \"dx-selection\";\r\nvar SELECT_CHECKBOX_CLASS = \"dx-select-checkbox\";\r\nvar CHECKBOXES_HIDDEN_CLASS = \"dx-select-checkboxes-hidden\";\r\nvar COMMAND_SELECT_CLASS = \"dx-command-select\";\r\nvar SELECTION_DISABLED_CLASS = \"dx-selection-disabled\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar SHOW_CHECKBOXES_MODE = \"selection.showCheckBoxesMode\";\r\nvar SELECTION_MODE = \"selection.mode\";\r\nvar processLongTap = function(that, dxEvent) {\r\n    var selectionController = that.getController(\"selection\");\r\n    var rowsView = that.getView(\"rowsView\");\r\n    var $row = $(dxEvent.target).closest(\".\" + DATA_ROW_CLASS);\r\n    var rowIndex = rowsView.getRowIndex($row);\r\n    if (rowIndex < 0) {\r\n        return\r\n    }\r\n    if (\"onLongTap\" === that.option(SHOW_CHECKBOXES_MODE)) {\r\n        if (selectionController.isSelectionWithCheckboxes()) {\r\n            selectionController.stopSelectionWithCheckboxes()\r\n        } else {\r\n            selectionController.startSelectionWithCheckboxes()\r\n        }\r\n    } else {\r\n        if (\"onClick\" === that.option(SHOW_CHECKBOXES_MODE)) {\r\n            selectionController.startSelectionWithCheckboxes()\r\n        }\r\n        if (\"always\" !== that.option(SHOW_CHECKBOXES_MODE)) {\r\n            selectionController.changeItemSelection(rowIndex, {\r\n                control: true\r\n            })\r\n        }\r\n    }\r\n};\r\nvar SelectionController = gridCore.Controller.inherit(function() {\r\n    var selectionCellTemplate = (container, options) => {\r\n        var component = options.component;\r\n        var rowsView = component.getView(\"rowsView\");\r\n        if (component.option(\"renderAsync\") && !component.option(\"selection.deferred\")) {\r\n            options.value = component.isRowSelected(options.row.key)\r\n        }\r\n        rowsView.renderSelectCheckBoxContainer($(container), options)\r\n    };\r\n    var selectionHeaderTemplate = (container, options) => {\r\n        var column = options.column;\r\n        var $cellElement = $(container);\r\n        var columnHeadersView = options.component.getView(\"columnHeadersView\");\r\n        $cellElement.addClass(EDITOR_CELL_CLASS);\r\n        columnHeadersView._renderSelectAllCheckBox($cellElement, column);\r\n        columnHeadersView._attachSelectAllCheckBoxClickEvent($cellElement)\r\n    };\r\n    return {\r\n        init: function() {\r\n            var {\r\n                deferred: deferred,\r\n                selectAllMode: selectAllMode,\r\n                mode: mode\r\n            } = this.option(\"selection\") || {};\r\n            if (\"infinite\" === this.option(\"scrolling.mode\") && !deferred && \"multiple\" === mode && \"allPages\" === selectAllMode) {\r\n                errors.log(\"W1018\")\r\n            }\r\n            this._dataController = this.getController(\"data\");\r\n            this._selectionMode = mode;\r\n            this._isSelectionWithCheckboxes = false;\r\n            this._selection = this._createSelection();\r\n            this._updateSelectColumn();\r\n            this.createAction(\"onSelectionChanged\", {\r\n                excludeValidators: [\"disabled\", \"readOnly\"]\r\n            });\r\n            this._dataController && this._dataController.pushed.add(this._handleDataPushed.bind(this))\r\n        },\r\n        _handleDataPushed: function(changes) {\r\n            var removedKeys = changes.filter(change => \"remove\" === change.type).map(change => change.key);\r\n            removedKeys.length && this.deselectRows(removedKeys)\r\n        },\r\n        _getSelectionConfig: function() {\r\n            var dataController = this._dataController;\r\n            var columnsController = this.getController(\"columns\");\r\n            var selectionOptions = this.option(\"selection\") || {};\r\n            var deferred = selectionOptions.deferred;\r\n            var scrollingMode = this.option(\"scrolling.mode\");\r\n            var virtualPaging = \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\r\n            var allowSelectAll = this.option(\"selection.allowSelectAll\");\r\n            var legacyScrollingMode = this.option(\"scrolling.legacyMode\");\r\n            return {\r\n                selectedKeys: this.option(\"selectedRowKeys\"),\r\n                mode: this._selectionMode,\r\n                deferred: deferred,\r\n                maxFilterLengthInRequest: selectionOptions.maxFilterLengthInRequest,\r\n                selectionFilter: this.option(\"selectionFilter\"),\r\n                ignoreDisabledItems: true,\r\n                allowLoadByRange: function() {\r\n                    var hasGroupColumns = columnsController.getGroupColumns().length > 0;\r\n                    return virtualPaging && !legacyScrollingMode && !hasGroupColumns && allowSelectAll && !deferred\r\n                },\r\n                key: function() {\r\n                    return null === dataController || void 0 === dataController ? void 0 : dataController.key()\r\n                },\r\n                keyOf: function(item) {\r\n                    return null === dataController || void 0 === dataController ? void 0 : dataController.keyOf(item)\r\n                },\r\n                dataFields: function() {\r\n                    var _dataController$dataS;\r\n                    return null === (_dataController$dataS = dataController.dataSource()) || void 0 === _dataController$dataS ? void 0 : _dataController$dataS.select()\r\n                },\r\n                load: function(options) {\r\n                    var _dataController$dataS2;\r\n                    return (null === (_dataController$dataS2 = dataController.dataSource()) || void 0 === _dataController$dataS2 ? void 0 : _dataController$dataS2.load(options)) || (new Deferred).resolve([])\r\n                },\r\n                plainItems: function() {\r\n                    return dataController.items(true)\r\n                },\r\n                isItemSelected: function(item) {\r\n                    return item.selected\r\n                },\r\n                isSelectableItem: function(item) {\r\n                    return \"data\" === (null === item || void 0 === item ? void 0 : item.rowType) && !item.isNewRow\r\n                },\r\n                getItemData: function(item) {\r\n                    return (null === item || void 0 === item ? void 0 : item.oldData) || (null === item || void 0 === item ? void 0 : item.data) || item\r\n                },\r\n                filter: function() {\r\n                    return dataController.getCombinedFilter(deferred)\r\n                },\r\n                totalCount: () => dataController.totalCount(),\r\n                getLoadOptions: function(loadItemIndex, focusedItemIndex, shiftItemIndex) {\r\n                    var _dataController$dataS3, _dataController$dataS4;\r\n                    var {\r\n                        sort: sort,\r\n                        filter: filter\r\n                    } = null !== (_dataController$dataS3 = null === (_dataController$dataS4 = dataController.dataSource()) || void 0 === _dataController$dataS4 ? void 0 : _dataController$dataS4.lastLoadOptions()) && void 0 !== _dataController$dataS3 ? _dataController$dataS3 : {};\r\n                    var minIndex = Math.min(loadItemIndex, focusedItemIndex);\r\n                    var maxIndex = Math.max(loadItemIndex, focusedItemIndex);\r\n                    if (isDefined(shiftItemIndex)) {\r\n                        minIndex = Math.min(shiftItemIndex, minIndex);\r\n                        maxIndex = Math.max(shiftItemIndex, maxIndex)\r\n                    }\r\n                    var take = maxIndex - minIndex + 1;\r\n                    return {\r\n                        skip: minIndex,\r\n                        take: take,\r\n                        filter: filter,\r\n                        sort: sort\r\n                    }\r\n                },\r\n                onSelectionChanged: this._updateSelectedItems.bind(this)\r\n            }\r\n        },\r\n        _updateSelectColumn: function() {\r\n            var columnsController = this.getController(\"columns\");\r\n            var isSelectColumnVisible = this.isSelectColumnVisible();\r\n            columnsController.addCommandColumn({\r\n                type: \"selection\",\r\n                command: \"select\",\r\n                visible: isSelectColumnVisible,\r\n                visibleIndex: -1,\r\n                dataType: \"boolean\",\r\n                alignment: \"center\",\r\n                cssClass: COMMAND_SELECT_CLASS,\r\n                width: \"auto\",\r\n                cellTemplate: selectionCellTemplate,\r\n                headerCellTemplate: selectionHeaderTemplate\r\n            });\r\n            columnsController.columnOption(\"command:select\", \"visible\", isSelectColumnVisible)\r\n        },\r\n        _createSelection: function() {\r\n            var options = this._getSelectionConfig();\r\n            return new Selection(options)\r\n        },\r\n        _fireSelectionChanged: function(options) {\r\n            var argument = this.option(\"selection.deferred\") ? {\r\n                selectionFilter: this.option(\"selectionFilter\")\r\n            } : {\r\n                selectedRowKeys: this.option(\"selectedRowKeys\")\r\n            };\r\n            this.selectionChanged.fire(argument);\r\n            if (options) {\r\n                this.executeAction(\"onSelectionChanged\", options)\r\n            }\r\n        },\r\n        _updateCheckboxesState: function(options) {\r\n            var isDeferredMode = options.isDeferredMode;\r\n            var selectionFilter = options.selectionFilter;\r\n            var selectedItemKeys = options.selectedItemKeys;\r\n            var removedItemKeys = options.removedItemKeys;\r\n            if (\"onClick\" === this.option(SHOW_CHECKBOXES_MODE)) {\r\n                if (isDeferredMode ? selectionFilter && function(that, selectionFilter) {\r\n                        var keyIndex = 0;\r\n                        var store = that._dataController.store();\r\n                        var key = store && store.key();\r\n                        var isComplexKey = Array.isArray(key);\r\n                        if (!selectionFilter.length) {\r\n                            return false\r\n                        }\r\n                        if (isComplexKey && Array.isArray(selectionFilter[0]) && \"and\" === selectionFilter[1]) {\r\n                            for (var i = 0; i < selectionFilter.length; i++) {\r\n                                if (Array.isArray(selectionFilter[i])) {\r\n                                    if (selectionFilter[i][0] !== key[keyIndex] || \"=\" !== selectionFilter[i][1]) {\r\n                                        return true\r\n                                    }\r\n                                    keyIndex++\r\n                                }\r\n                            }\r\n                            return false\r\n                        }\r\n                        return key !== selectionFilter[0]\r\n                    }(this, selectionFilter) : selectedItemKeys.length > 1) {\r\n                    this.startSelectionWithCheckboxes()\r\n                } else if (isDeferredMode ? selectionFilter && !selectionFilter.length : 0 === selectedItemKeys.length && removedItemKeys.length) {\r\n                    this.stopSelectionWithCheckboxes()\r\n                }\r\n            }\r\n        },\r\n        _updateSelectedItems: function(args) {\r\n            var selectionChangedOptions;\r\n            var isDeferredMode = this.option(\"selection.deferred\");\r\n            var selectionFilter = this._selection.selectionFilter();\r\n            var dataController = this._dataController;\r\n            var items = dataController.items();\r\n            if (!items) {\r\n                return\r\n            }\r\n            var isSelectionWithCheckboxes = this.isSelectionWithCheckboxes();\r\n            var changedItemIndexes = this.getChangedItemIndexes(items);\r\n            this._updateCheckboxesState({\r\n                selectedItemKeys: args.selectedItemKeys,\r\n                removedItemKeys: args.removedItemKeys,\r\n                selectionFilter: selectionFilter,\r\n                isDeferredMode: isDeferredMode\r\n            });\r\n            if (changedItemIndexes.length || isSelectionWithCheckboxes !== this.isSelectionWithCheckboxes()) {\r\n                dataController.updateItems({\r\n                    changeType: \"updateSelection\",\r\n                    itemIndexes: changedItemIndexes\r\n                })\r\n            }\r\n            if (isDeferredMode) {\r\n                this.option(\"selectionFilter\", selectionFilter);\r\n                selectionChangedOptions = {}\r\n            } else if (args.addedItemKeys.length || args.removedItemKeys.length) {\r\n                this._selectedItemsInternalChange = true;\r\n                this.option(\"selectedRowKeys\", args.selectedItemKeys.slice(0));\r\n                this._selectedItemsInternalChange = false;\r\n                selectionChangedOptions = {\r\n                    selectedRowsData: args.selectedItems.slice(0),\r\n                    selectedRowKeys: args.selectedItemKeys.slice(0),\r\n                    currentSelectedRowKeys: args.addedItemKeys.slice(0),\r\n                    currentDeselectedRowKeys: args.removedItemKeys.slice(0)\r\n                }\r\n            }\r\n            this._fireSelectionChanged(selectionChangedOptions)\r\n        },\r\n        getChangedItemIndexes: function(items) {\r\n            var itemIndexes = [];\r\n            var isDeferredSelection = this.option(\"selection.deferred\");\r\n            for (var i = 0, length = items.length; i < length; i++) {\r\n                var row = items[i];\r\n                var isItemSelected = this.isRowSelected(isDeferredSelection ? row.data : row.key);\r\n                if (this._selection.isDataItem(row) && row.isSelected !== isItemSelected) {\r\n                    itemIndexes.push(i)\r\n                }\r\n            }\r\n            return itemIndexes\r\n        },\r\n        callbackNames: function() {\r\n            return [\"selectionChanged\"]\r\n        },\r\n        optionChanged: function(args) {\r\n            this.callBase(args);\r\n            switch (args.name) {\r\n                case \"selection\":\r\n                    var oldSelectionMode = this._selectionMode;\r\n                    this.init();\r\n                    if (\"selection.showCheckBoxesMode\" !== args.fullName) {\r\n                        var selectionMode = this._selectionMode;\r\n                        var selectedRowKeys = this.option(\"selectedRowKeys\");\r\n                        if (oldSelectionMode !== selectionMode) {\r\n                            if (\"single\" === selectionMode) {\r\n                                if (selectedRowKeys.length > 1) {\r\n                                    selectedRowKeys = [selectedRowKeys[0]]\r\n                                }\r\n                            } else if (\"multiple\" !== selectionMode) {\r\n                                selectedRowKeys = []\r\n                            }\r\n                        }\r\n                        this.selectRows(selectedRowKeys).always(() => {\r\n                            this._fireSelectionChanged()\r\n                        })\r\n                    }\r\n                    this.getController(\"columns\").updateColumns();\r\n                    args.handled = true;\r\n                    break;\r\n                case \"selectionFilter\":\r\n                    this._selection.selectionFilter(args.value);\r\n                    args.handled = true;\r\n                    break;\r\n                case \"selectedRowKeys\":\r\n                    var value = args.value || [];\r\n                    if (Array.isArray(value) && !this._selectedItemsInternalChange && (this.component.getDataSource() || !value.length)) {\r\n                        this.selectRows(value)\r\n                    }\r\n                    args.handled = true\r\n            }\r\n        },\r\n        publicMethods: function() {\r\n            return [\"selectRows\", \"deselectRows\", \"selectRowsByIndexes\", \"getSelectedRowKeys\", \"getSelectedRowsData\", \"clearSelection\", \"selectAll\", \"deselectAll\", \"startSelectionWithCheckboxes\", \"stopSelectionWithCheckboxes\", \"isRowSelected\"]\r\n        },\r\n        isRowSelected: function(arg) {\r\n            return this._selection.isItemSelected(arg)\r\n        },\r\n        isSelectColumnVisible: function() {\r\n            return \"multiple\" === this.option(SELECTION_MODE) && (\"always\" === this.option(SHOW_CHECKBOXES_MODE) || \"onClick\" === this.option(SHOW_CHECKBOXES_MODE) || this._isSelectionWithCheckboxes)\r\n        },\r\n        _isOnePageSelectAll: function() {\r\n            return \"page\" === this.option(\"selection.selectAllMode\")\r\n        },\r\n        isSelectAll: function() {\r\n            return this._selection.getSelectAllState(this._isOnePageSelectAll())\r\n        },\r\n        selectAll: function() {\r\n            if (\"onClick\" === this.option(SHOW_CHECKBOXES_MODE)) {\r\n                this.startSelectionWithCheckboxes()\r\n            }\r\n            return this._selection.selectAll(this._isOnePageSelectAll())\r\n        },\r\n        deselectAll: function() {\r\n            return this._selection.deselectAll(this._isOnePageSelectAll())\r\n        },\r\n        clearSelection: function() {\r\n            return this.selectedItemKeys([])\r\n        },\r\n        refresh: function() {\r\n            var selectedRowKeys = this.option(\"selectedRowKeys\") || [];\r\n            if (!this.option(\"selection.deferred\") && selectedRowKeys.length) {\r\n                return this.selectedItemKeys(selectedRowKeys)\r\n            }\r\n            return (new Deferred).resolve().promise()\r\n        },\r\n        selectedItemKeys: function(value, preserve, isDeselect, isSelectAll) {\r\n            return this._selection.selectedItemKeys(value, preserve, isDeselect, isSelectAll)\r\n        },\r\n        getSelectedRowKeys: function() {\r\n            return this._selection.getSelectedItemKeys()\r\n        },\r\n        selectRows: function(keys, preserve) {\r\n            return this.selectedItemKeys(keys, preserve)\r\n        },\r\n        deselectRows: function(keys) {\r\n            return this.selectedItemKeys(keys, true, true)\r\n        },\r\n        selectRowsByIndexes: function(indexes) {\r\n            var items = this._dataController.items();\r\n            var keys = [];\r\n            if (!Array.isArray(indexes)) {\r\n                indexes = Array.prototype.slice.call(arguments, 0)\r\n            }\r\n            each(indexes, (function() {\r\n                var item = items[this];\r\n                if (item && \"data\" === item.rowType) {\r\n                    keys.push(item.key)\r\n                }\r\n            }));\r\n            return this.selectRows(keys)\r\n        },\r\n        getSelectedRowsData: function() {\r\n            return this._selection.getSelectedItems()\r\n        },\r\n        changeItemSelection: function(visibleItemIndex, keys) {\r\n            keys = keys || {};\r\n            if (this.isSelectionWithCheckboxes()) {\r\n                keys.control = true\r\n            }\r\n            var loadedItemIndex = visibleItemIndex + this._dataController.getRowIndexOffset() - this._dataController.getRowIndexOffset(true);\r\n            return this._selection.changeItemSelection(loadedItemIndex, keys)\r\n        },\r\n        focusedItemIndex: function(itemIndex) {\r\n            if (isDefined(itemIndex)) {\r\n                this._selection._focusedItemIndex = itemIndex\r\n            } else {\r\n                return this._selection._focusedItemIndex\r\n            }\r\n        },\r\n        isSelectionWithCheckboxes: function() {\r\n            return \"multiple\" === this.option(SELECTION_MODE) && (\"always\" === this.option(SHOW_CHECKBOXES_MODE) || this._isSelectionWithCheckboxes)\r\n        },\r\n        startSelectionWithCheckboxes: function() {\r\n            if (\"multiple\" === this.option(SELECTION_MODE) && !this.isSelectionWithCheckboxes()) {\r\n                this._isSelectionWithCheckboxes = true;\r\n                this._updateSelectColumn();\r\n                return true\r\n            }\r\n            return false\r\n        },\r\n        stopSelectionWithCheckboxes: function() {\r\n            if (this._isSelectionWithCheckboxes) {\r\n                this._isSelectionWithCheckboxes = false;\r\n                this._updateSelectColumn();\r\n                return true\r\n            }\r\n            return false\r\n        }\r\n    }\r\n}());\r\nexport var selectionModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            selection: {\r\n                mode: \"none\",\r\n                showCheckBoxesMode: \"onClick\",\r\n                allowSelectAll: true,\r\n                selectAllMode: \"allPages\",\r\n                maxFilterLengthInRequest: 1500,\r\n                deferred: false\r\n            },\r\n            selectionFilter: [],\r\n            selectedRowKeys: []\r\n        }\r\n    },\r\n    controllers: {\r\n        selection: SelectionController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                init: function() {\r\n                    var selectionController = this.getController(\"selection\");\r\n                    var isDeferredMode = this.option(\"selection.deferred\");\r\n                    this.callBase.apply(this, arguments);\r\n                    if (isDeferredMode) {\r\n                        selectionController._updateCheckboxesState({\r\n                            isDeferredMode: true,\r\n                            selectionFilter: this.option(\"selectionFilter\")\r\n                        })\r\n                    }\r\n                },\r\n                _loadDataSource: function() {\r\n                    var that = this;\r\n                    return that.callBase().done((function() {\r\n                        that.getController(\"selection\").refresh()\r\n                    }))\r\n                },\r\n                _processDataItem: function(item, options) {\r\n                    var that = this;\r\n                    var selectionController = that.getController(\"selection\");\r\n                    var hasSelectColumn = selectionController.isSelectColumnVisible();\r\n                    var isDeferredSelection = options.isDeferredSelection = void 0 === options.isDeferredSelection ? this.option(\"selection.deferred\") : options.isDeferredSelection;\r\n                    var dataItem = this.callBase.apply(this, arguments);\r\n                    dataItem.isSelected = selectionController.isRowSelected(isDeferredSelection ? dataItem.data : dataItem.key);\r\n                    if (hasSelectColumn && dataItem.values) {\r\n                        for (var i = 0; i < options.visibleColumns.length; i++) {\r\n                            if (\"select\" === options.visibleColumns[i].command) {\r\n                                dataItem.values[i] = dataItem.isSelected;\r\n                                break\r\n                            }\r\n                        }\r\n                    }\r\n                    return dataItem\r\n                },\r\n                refresh: function(options) {\r\n                    var that = this;\r\n                    var d = new Deferred;\r\n                    this.callBase.apply(this, arguments).done((function() {\r\n                        if (!options || options.selection) {\r\n                            that.getController(\"selection\").refresh().done(d.resolve).fail(d.reject)\r\n                        } else {\r\n                            d.resolve()\r\n                        }\r\n                    })).fail(d.reject);\r\n                    return d.promise()\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if ((!e || \"refresh\" === e.changeType) && !this._repaintChangesOnly) {\r\n                        this.getController(\"selection\").focusedItemIndex(-1)\r\n                    }\r\n                },\r\n                _applyChange: function(change) {\r\n                    if (change && \"updateSelection\" === change.changeType) {\r\n                        change.items.forEach((item, index) => {\r\n                            var currentItem = this._items[index];\r\n                            if (currentItem) {\r\n                                currentItem.isSelected = item.isSelected;\r\n                                currentItem.values = item.values\r\n                            }\r\n                        });\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _endUpdateCore: function() {\r\n                    var changes = this._changes;\r\n                    var isUpdateSelection = changes.length > 1 && changes.every(change => \"updateSelection\" === change.changeType);\r\n                    if (isUpdateSelection) {\r\n                        var itemIndexes = changes.map(change => change.itemIndexes || []).reduce((a, b) => a.concat(b));\r\n                        this._changes = [{\r\n                            changeType: \"updateSelection\",\r\n                            itemIndexes: itemIndexes\r\n                        }]\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                }\r\n            },\r\n            contextMenu: {\r\n                _contextMenuPrepared: function(options) {\r\n                    var dxEvent = options.event;\r\n                    if (dxEvent.originalEvent && \"dxhold\" !== dxEvent.originalEvent.type || options.items && options.items.length > 0) {\r\n                        return\r\n                    }\r\n                    processLongTap(this, dxEvent)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            columnHeadersView: {\r\n                init: function() {\r\n                    this.callBase();\r\n                    this.getController(\"selection\").selectionChanged.add(this._updateSelectAllValue.bind(this))\r\n                },\r\n                _updateSelectAllValue: function() {\r\n                    var $element = this.element();\r\n                    var $editor = $element && $element.find(\".\" + SELECT_CHECKBOX_CLASS);\r\n                    if ($element && $editor.length && \"multiple\" === this.option(\"selection.mode\")) {\r\n                        var selectAllValue = this.getController(\"selection\").isSelectAll();\r\n                        var hasSelection = false !== selectAllValue;\r\n                        var isVisible = this.option(\"selection.allowSelectAll\") ? !this.getController(\"data\").isEmpty() : hasSelection;\r\n                        $editor.dxCheckBox(\"instance\").option({\r\n                            visible: isVisible,\r\n                            value: selectAllValue\r\n                        })\r\n                    }\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    this.callBase(e);\r\n                    if (!e || \"refresh\" === e.changeType) {\r\n                        this._updateSelectAllValue()\r\n                    }\r\n                },\r\n                _renderSelectAllCheckBox: function($container, column) {\r\n                    var that = this;\r\n                    var selectionController = that.getController(\"selection\");\r\n                    var isEmptyData = that.getController(\"data\").isEmpty();\r\n                    var groupElement = $(\"<div>\").appendTo($container).addClass(SELECT_CHECKBOX_CLASS);\r\n                    that.setAria(\"label\", messageLocalization.format(\"dxDataGrid-ariaSelectAll\"), $container);\r\n                    that.getController(\"editorFactory\").createEditor(groupElement, extend({}, column, {\r\n                        parentType: \"headerRow\",\r\n                        dataType: \"boolean\",\r\n                        value: selectionController.isSelectAll(),\r\n                        editorOptions: {\r\n                            visible: !isEmptyData && (that.option(\"selection.allowSelectAll\") || false !== selectionController.isSelectAll())\r\n                        },\r\n                        tabIndex: that.option(\"useLegacyKeyboardNavigation\") ? -1 : that.option(\"tabIndex\") || 0,\r\n                        setValue: function(value, e) {\r\n                            var allowSelectAll = that.option(\"selection.allowSelectAll\");\r\n                            e.component.option(\"visible\", allowSelectAll || false !== e.component.option(\"value\"));\r\n                            if (!e.event || selectionController.isSelectAll() === value) {\r\n                                return\r\n                            }\r\n                            if (e.value && !allowSelectAll) {\r\n                                e.component.option(\"value\", false)\r\n                            } else {\r\n                                e.value ? selectionController.selectAll() : selectionController.deselectAll()\r\n                            }\r\n                            e.event.preventDefault()\r\n                        }\r\n                    }));\r\n                    return groupElement\r\n                },\r\n                _attachSelectAllCheckBoxClickEvent: function($element) {\r\n                    eventsEngine.on($element, clickEventName, this.createAction((function(e) {\r\n                        var event = e.event;\r\n                        if (!$(event.target).closest(\".\" + SELECT_CHECKBOX_CLASS).length) {\r\n                            eventsEngine.trigger($(event.currentTarget).children(\".\" + SELECT_CHECKBOX_CLASS), clickEventName)\r\n                        }\r\n                        event.preventDefault()\r\n                    })))\r\n                }\r\n            },\r\n            rowsView: {\r\n                renderSelectCheckBoxContainer: function($container, options) {\r\n                    if (\"data\" === options.rowType && !options.row.isNewRow) {\r\n                        $container.addClass(EDITOR_CELL_CLASS);\r\n                        this._attachCheckBoxClickEvent($container);\r\n                        this.setAria(\"label\", messageLocalization.format(\"dxDataGrid-ariaSelectRow\"), $container);\r\n                        this._renderSelectCheckBox($container, options)\r\n                    } else {\r\n                        gridCoreUtils.setEmptyText($container)\r\n                    }\r\n                },\r\n                _renderSelectCheckBox: function(container, options) {\r\n                    var groupElement = $(\"<div>\").addClass(SELECT_CHECKBOX_CLASS).appendTo(container);\r\n                    this.getController(\"editorFactory\").createEditor(groupElement, extend({}, options.column, {\r\n                        parentType: \"dataRow\",\r\n                        dataType: \"boolean\",\r\n                        lookup: null,\r\n                        value: options.value,\r\n                        setValue: function(value, e) {\r\n                            var _e$event;\r\n                            if (\"keydown\" === (null === e || void 0 === e ? void 0 : null === (_e$event = e.event) || void 0 === _e$event ? void 0 : _e$event.type)) {\r\n                                eventsEngine.trigger(e.element, clickEventName, e)\r\n                            }\r\n                        },\r\n                        row: options.row\r\n                    }));\r\n                    return groupElement\r\n                },\r\n                _attachCheckBoxClickEvent: function($element) {\r\n                    eventsEngine.on($element, clickEventName, this.createAction((function(e) {\r\n                        var selectionController = this.getController(\"selection\");\r\n                        var event = e.event;\r\n                        var rowIndex = this.getRowIndex($(event.currentTarget).closest(\".\" + ROW_CLASS));\r\n                        if (rowIndex >= 0) {\r\n                            selectionController.startSelectionWithCheckboxes();\r\n                            selectionController.changeItemSelection(rowIndex, {\r\n                                shift: event.shiftKey\r\n                            });\r\n                            if ($(event.target).closest(\".\" + SELECT_CHECKBOX_CLASS).length) {\r\n                                this.getController(\"data\").updateItems({\r\n                                    changeType: \"updateSelection\",\r\n                                    itemIndexes: [rowIndex]\r\n                                })\r\n                            }\r\n                        }\r\n                    })))\r\n                },\r\n                _update: function(change) {\r\n                    var that = this;\r\n                    var tableElements = that.getTableElements();\r\n                    if (\"updateSelection\" === change.changeType) {\r\n                        if (tableElements.length > 0) {\r\n                            each(tableElements, (function(_, tableElement) {\r\n                                each(change.itemIndexes || [], (function(_, index) {\r\n                                    var $row;\r\n                                    if (change.items[index]) {\r\n                                        $row = that._getRowElements($(tableElement)).eq(index);\r\n                                        if ($row.length) {\r\n                                            var isSelected = change.items[index].isSelected;\r\n                                            $row.toggleClass(ROW_SELECTION_CLASS, void 0 === isSelected ? false : isSelected).find(\".\" + SELECT_CHECKBOX_CLASS).dxCheckBox(\"option\", \"value\", isSelected);\r\n                                            that.setAria(\"selected\", isSelected, $row)\r\n                                        }\r\n                                    }\r\n                                }))\r\n                            }));\r\n                            that._updateCheckboxesClass()\r\n                        }\r\n                    } else {\r\n                        that.callBase(change)\r\n                    }\r\n                },\r\n                _createTable: function() {\r\n                    var that = this;\r\n                    var selectionMode = that.option(\"selection.mode\");\r\n                    var $table = that.callBase.apply(that, arguments);\r\n                    if (\"none\" !== selectionMode) {\r\n                        if (\"onLongTap\" === that.option(SHOW_CHECKBOXES_MODE) || !touch) {\r\n                            eventsEngine.on($table, addNamespace(holdEvent.name, \"dxDataGridRowsView\"), \".\" + DATA_ROW_CLASS, that.createAction((function(e) {\r\n                                processLongTap(that.component, e.event);\r\n                                e.event.stopPropagation()\r\n                            })))\r\n                        }\r\n                        eventsEngine.on($table, \"mousedown selectstart\", that.createAction((function(e) {\r\n                            var event = e.event;\r\n                            if (event.shiftKey) {\r\n                                event.preventDefault()\r\n                            }\r\n                        })))\r\n                    }\r\n                    return $table\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var isSelected = !!row.isSelected;\r\n                        if (isSelected) {\r\n                            $row.addClass(ROW_SELECTION_CLASS)\r\n                        }\r\n                        this.setAria(\"selected\", isSelected, $row)\r\n                    }\r\n                    return $row\r\n                },\r\n                _rowClick: function(e) {\r\n                    var dxEvent = e.event;\r\n                    var isSelectionDisabled = $(dxEvent.target).closest(\".\" + SELECTION_DISABLED_CLASS).length;\r\n                    if (!this.isClickableElement($(dxEvent.target))) {\r\n                        if (!isSelectionDisabled && (\"multiple\" !== this.option(SELECTION_MODE) || \"always\" !== this.option(SHOW_CHECKBOXES_MODE))) {\r\n                            if (this.getController(\"selection\").changeItemSelection(e.rowIndex, {\r\n                                    control: isCommandKeyPressed(dxEvent),\r\n                                    shift: dxEvent.shiftKey\r\n                                })) {\r\n                                dxEvent.preventDefault();\r\n                                e.handled = true\r\n                            }\r\n                        }\r\n                        this.callBase(e)\r\n                    }\r\n                },\r\n                isClickableElement: function($target) {\r\n                    var isCommandSelect = $target.closest(\".\" + COMMAND_SELECT_CLASS).length;\r\n                    return !!isCommandSelect\r\n                },\r\n                _renderCore: function(change) {\r\n                    this.callBase(change);\r\n                    this._updateCheckboxesClass()\r\n                },\r\n                _updateCheckboxesClass: function() {\r\n                    var tableElements = this.getTableElements();\r\n                    var selectionController = this.getController(\"selection\");\r\n                    var isCheckBoxesHidden = selectionController.isSelectColumnVisible() && !selectionController.isSelectionWithCheckboxes();\r\n                    each(tableElements, (function(_, tableElement) {\r\n                        $(tableElement).toggleClass(CHECKBOXES_HIDDEN_CLASS, isCheckBoxesHidden)\r\n                    }))\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.selection.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    selectionModule\r\n} from \"../grid_core/ui.grid_core.selection\";\r\ngridCore.registerModule(\"selection\", selectionModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_chooser.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    deferUpdate,\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    ColumnsView\r\n} from \"./ui.grid_core.columns_view\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    isMaterial as isMaterialTheme,\r\n    isGeneric,\r\n    current\r\n} from \"../themes\";\r\nimport Button from \"../button\";\r\nimport TreeView from \"../tree_view\";\r\nimport devices from \"../../core/devices\";\r\nimport Popup from \"../popup\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nvar COLUMN_CHOOSER_CLASS = \"column-chooser\";\r\nvar COLUMN_CHOOSER_BUTTON_CLASS = \"column-chooser-button\";\r\nvar NOTOUCH_ACTION_CLASS = \"notouch-action\";\r\nvar COLUMN_CHOOSER_LIST_CLASS = \"column-chooser-list\";\r\nvar COLUMN_CHOOSER_PLAIN_CLASS = \"column-chooser-plain\";\r\nvar COLUMN_CHOOSER_DRAG_CLASS = \"column-chooser-mode-drag\";\r\nvar COLUMN_CHOOSER_SELECT_CLASS = \"column-chooser-mode-select\";\r\nvar COLUMN_CHOOSER_ICON_NAME = \"column-chooser\";\r\nvar COLUMN_CHOOSER_ITEM_CLASS = \"dx-column-chooser-item\";\r\nvar TREEVIEW_NODE_SELECTOR = \".dx-treeview-node\";\r\nvar CHECKBOX_SELECTOR = \".dx-checkbox\";\r\nvar CLICK_TIMEOUT = 300;\r\nvar processItems = function(that, chooserColumns) {\r\n    var items = [];\r\n    var isSelectMode = \"select\" === that.option(\"columnChooser.mode\");\r\n    if (chooserColumns.length) {\r\n        each(chooserColumns, (function(index, column) {\r\n            var item = {\r\n                text: column.caption,\r\n                cssClass: column.cssClass,\r\n                allowHiding: column.allowHiding,\r\n                expanded: true,\r\n                id: column.index,\r\n                disabled: false,\r\n                disableCheckBox: false === column.allowHiding,\r\n                parentId: isDefined(column.ownerBand) ? column.ownerBand : null\r\n            };\r\n            if (isSelectMode) {\r\n                item.selected = column.visible\r\n            }\r\n            items.push(item)\r\n        }))\r\n    }\r\n    return items\r\n};\r\nvar ColumnChooserController = modules.ViewController.inherit({\r\n    renderShowColumnChooserButton: function($element) {\r\n        var that = this;\r\n        var columnChooserButtonClass = that.addWidgetPrefix(COLUMN_CHOOSER_BUTTON_CLASS);\r\n        var columnChooserEnabled = that.option(\"columnChooser.enabled\");\r\n        var $showColumnChooserButton = $element.find(\".\" + columnChooserButtonClass);\r\n        var $columnChooserButton;\r\n        if (columnChooserEnabled) {\r\n            if (!$showColumnChooserButton.length) {\r\n                $columnChooserButton = $(\"<div>\").addClass(columnChooserButtonClass).appendTo($element);\r\n                that._createComponent($columnChooserButton, Button, {\r\n                    icon: COLUMN_CHOOSER_ICON_NAME,\r\n                    onClick: function() {\r\n                        that.getView(\"columnChooserView\").showColumnChooser()\r\n                    },\r\n                    hint: that.option(\"columnChooser.title\"),\r\n                    integrationOptions: {}\r\n                })\r\n            } else {\r\n                $showColumnChooserButton.show()\r\n            }\r\n        } else {\r\n            $showColumnChooserButton.hide()\r\n        }\r\n    },\r\n    getPosition: function() {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        return {\r\n            my: \"right bottom\",\r\n            at: \"right bottom\",\r\n            of: rowsView && rowsView.element(),\r\n            collision: \"fit\",\r\n            offset: \"-2 -2\",\r\n            boundaryOffset: \"2 2\"\r\n        }\r\n    }\r\n});\r\nvar ColumnChooserView = ColumnsView.inherit({\r\n    _resizeCore: noop,\r\n    _isWinDevice: function() {\r\n        return !!devices.real().win\r\n    },\r\n    _updateList: function(change) {\r\n        var items;\r\n        var $popupContent = this._popupContainer.$content();\r\n        var isSelectMode = \"select\" === this.option(\"columnChooser.mode\");\r\n        var columnChooserList = this._columnChooserList;\r\n        var chooserColumns = this._columnsController.getChooserColumns(isSelectMode);\r\n        if (isSelectMode && columnChooserList && change && \"selection\" === change.changeType) {\r\n            items = processItems(this, chooserColumns);\r\n            for (var i = 0; i < items.length; i++) {\r\n                var selected = items[i].selected;\r\n                var id = items[i].id;\r\n                if (id === change.columnIndex) {\r\n                    if (selected) {\r\n                        columnChooserList.selectItem(id, selected)\r\n                    } else {\r\n                        columnChooserList.unselectItem(id, selected)\r\n                    }\r\n                }\r\n            }\r\n        } else if (!isSelectMode || !columnChooserList || \"full\" === change) {\r\n            this._popupContainer.$wrapper().toggleClass(this.addWidgetPrefix(COLUMN_CHOOSER_DRAG_CLASS), !isSelectMode).toggleClass(this.addWidgetPrefix(COLUMN_CHOOSER_SELECT_CLASS), isSelectMode);\r\n            items = processItems(this, chooserColumns);\r\n            this._renderTreeView($popupContent, items)\r\n        }\r\n    },\r\n    _initializePopupContainer: function() {\r\n        var that = this;\r\n        var $element = that.element().addClass(that.addWidgetPrefix(COLUMN_CHOOSER_CLASS));\r\n        var columnChooserOptions = that.option(\"columnChooser\");\r\n        var themeName = current();\r\n        var isGenericTheme = isGeneric(themeName);\r\n        var isMaterial = isMaterialTheme(themeName);\r\n        var dxPopupOptions = {\r\n            visible: false,\r\n            shading: false,\r\n            showCloseButton: false,\r\n            dragEnabled: true,\r\n            resizeEnabled: true,\r\n            copyRootClassesToWrapper: true,\r\n            _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n            toolbarItems: [{\r\n                text: columnChooserOptions.title,\r\n                toolbar: \"top\",\r\n                location: isGenericTheme || isMaterial ? \"before\" : \"center\"\r\n            }],\r\n            position: that.getController(\"columnChooser\").getPosition(),\r\n            width: columnChooserOptions.width,\r\n            height: columnChooserOptions.height,\r\n            rtlEnabled: that.option(\"rtlEnabled\"),\r\n            onHidden: function() {\r\n                if (that._isWinDevice()) {\r\n                    $(\"body\").removeClass(that.addWidgetPrefix(NOTOUCH_ACTION_CLASS))\r\n                }\r\n            },\r\n            container: columnChooserOptions.container\r\n        };\r\n        if (isGenericTheme || isMaterial) {\r\n            extend(dxPopupOptions, {\r\n                showCloseButton: true\r\n            })\r\n        } else {\r\n            dxPopupOptions.toolbarItems[dxPopupOptions.toolbarItems.length] = {\r\n                shortcut: \"cancel\"\r\n            }\r\n        }\r\n        if (!isDefined(this._popupContainer)) {\r\n            that._popupContainer = that._createComponent($element, Popup, dxPopupOptions);\r\n            that._popupContainer.on(\"optionChanged\", (function(args) {\r\n                if (\"visible\" === args.name) {\r\n                    that.renderCompleted.fire()\r\n                }\r\n            }))\r\n        } else {\r\n            this._popupContainer.option(dxPopupOptions)\r\n        }\r\n    },\r\n    _renderCore: function(change) {\r\n        if (this._popupContainer) {\r\n            this._updateList(change)\r\n        }\r\n    },\r\n    _renderTreeView: function($container, items) {\r\n        var that = this;\r\n        var columnChooser = this.option(\"columnChooser\");\r\n        var isSelectMode = \"select\" === columnChooser.mode;\r\n        var treeViewConfig = {\r\n            items: items,\r\n            dataStructure: \"plain\",\r\n            activeStateEnabled: true,\r\n            focusStateEnabled: true,\r\n            hoverStateEnabled: true,\r\n            itemTemplate: \"item\",\r\n            showCheckBoxesMode: \"none\",\r\n            rootValue: null,\r\n            searchEnabled: columnChooser.allowSearch,\r\n            searchTimeout: columnChooser.searchTimeout,\r\n            onItemRendered: function(e) {\r\n                if (e.itemData.disableCheckBox) {\r\n                    var $treeViewNode = $(e.itemElement).closest(TREEVIEW_NODE_SELECTOR);\r\n                    var $checkBox;\r\n                    if ($treeViewNode.length) {\r\n                        $checkBox = $treeViewNode.find(CHECKBOX_SELECTOR);\r\n                        if ($checkBox.length) {\r\n                            var checkBoxInstance = $checkBox.data(\"dxCheckBox\");\r\n                            checkBoxInstance && checkBoxInstance.option(\"disabled\", true)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        var scrollableInstance = $container.find(\".dx-scrollable\").data(\"dxScrollable\");\r\n        var scrollTop = scrollableInstance && scrollableInstance.scrollTop();\r\n        if (isSelectMode && !this._columnsController.isBandColumnsUsed()) {\r\n            $container.addClass(this.addWidgetPrefix(COLUMN_CHOOSER_PLAIN_CLASS))\r\n        }\r\n        treeViewConfig.onContentReady = function(e) {\r\n            deferUpdate((function() {\r\n                if (scrollTop) {\r\n                    var scrollable = $(e.element).find(\".dx-scrollable\").data(\"dxScrollable\");\r\n                    scrollable && scrollable.scrollTo({\r\n                        y: scrollTop\r\n                    })\r\n                }\r\n                that.renderCompleted.fire()\r\n            }))\r\n        };\r\n        if (this._isWinDevice()) {\r\n            treeViewConfig.useNativeScrolling = false\r\n        }\r\n        extend(treeViewConfig, isSelectMode ? this._prepareSelectModeConfig() : this._prepareDragModeConfig());\r\n        if (this._columnChooserList) {\r\n            if (!treeViewConfig.searchEnabled) {\r\n                treeViewConfig.searchValue = \"\"\r\n            }\r\n            this._columnChooserList.option(treeViewConfig)\r\n        } else {\r\n            this._columnChooserList = this._createComponent($container, TreeView, treeViewConfig);\r\n            $container.addClass(this.addWidgetPrefix(COLUMN_CHOOSER_LIST_CLASS))\r\n        }\r\n    },\r\n    _prepareDragModeConfig: function() {\r\n        var columnChooserOptions = this.option(\"columnChooser\");\r\n        return {\r\n            noDataText: columnChooserOptions.emptyPanelText,\r\n            activeStateEnabled: false,\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            itemTemplate: function(data, index, item) {\r\n                $(item).text(data.text).parent().addClass(data.cssClass).addClass(COLUMN_CHOOSER_ITEM_CLASS)\r\n            }\r\n        }\r\n    },\r\n    _prepareSelectModeConfig: function() {\r\n        var that = this;\r\n        return {\r\n            selectNodesRecursive: false,\r\n            showCheckBoxesMode: \"normal\",\r\n            onItemSelectionChanged: function(e) {\r\n                var visibleColumns = that._columnsController.getVisibleColumns().filter((function(item) {\r\n                    return !item.command\r\n                }));\r\n                var isLastColumnUnselected = 1 === visibleColumns.length && !e.itemData.selected;\r\n                if (isLastColumnUnselected) {\r\n                    e.component.selectItem(e.itemElement)\r\n                } else {\r\n                    setTimeout((function() {\r\n                        that._columnsController.columnOption(e.itemData.id, \"visible\", e.itemData.selected)\r\n                    }), CLICK_TIMEOUT)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var changeTypes = e.changeTypes;\r\n        var optionNames = e.optionNames;\r\n        var isSelectMode = \"select\" === this.option(\"columnChooser.mode\");\r\n        this.callBase(e);\r\n        if (isSelectMode) {\r\n            var needPartialRender = optionNames.visible && 1 === optionNames.length && void 0 !== e.columnIndex;\r\n            var needFullRender = optionNames.showInColumnChooser || optionNames.caption || optionNames.visible || changeTypes.columns && optionNames.all;\r\n            if (needPartialRender) {\r\n                this.render(null, {\r\n                    changeType: \"selection\",\r\n                    columnIndex: e.columnIndex\r\n                })\r\n            } else if (needFullRender) {\r\n                this.render(null, \"full\")\r\n            }\r\n        }\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"columnChooser\":\r\n                this._initializePopupContainer();\r\n                this.render(null, \"full\");\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    getColumnElements: function() {\r\n        var result = [];\r\n        var $node;\r\n        var isSelectMode = \"select\" === this.option(\"columnChooser.mode\");\r\n        var chooserColumns = this._columnsController.getChooserColumns(isSelectMode);\r\n        var $content = this._popupContainer && this._popupContainer.$content();\r\n        var $nodes = $content && $content.find(\".dx-treeview-node\");\r\n        if ($nodes) {\r\n            chooserColumns.forEach((function(column) {\r\n                $node = $nodes.filter(\"[data-item-id = '\" + column.index + \"']\");\r\n                var item = $node.length ? $node.children(\".\" + COLUMN_CHOOSER_ITEM_CLASS).get(0) : null;\r\n                result.push(item)\r\n            }))\r\n        }\r\n        return $(result)\r\n    },\r\n    getName: function() {\r\n        return \"columnChooser\"\r\n    },\r\n    getColumns: function() {\r\n        return this._columnsController.getChooserColumns()\r\n    },\r\n    allowDragging: function(column, sourceLocation) {\r\n        var columnVisible = column && column.allowHiding && (\"columnChooser\" !== sourceLocation || !column.visible && this._columnsController.isParentColumnVisible(column.index));\r\n        return this.isColumnChooserVisible() && columnVisible\r\n    },\r\n    getBoundingRect: function() {\r\n        var container = this._popupContainer && this._popupContainer.$overlayContent();\r\n        if (container && container.is(\":visible\")) {\r\n            var offset = container.offset();\r\n            return {\r\n                left: offset.left,\r\n                top: offset.top,\r\n                right: offset.left + getOuterWidth(container),\r\n                bottom: offset.top + getOuterHeight(container)\r\n            }\r\n        }\r\n        return null\r\n    },\r\n    showColumnChooser: function() {\r\n        if (!this._popupContainer) {\r\n            this._initializePopupContainer();\r\n            this.render()\r\n        }\r\n        this._popupContainer.show();\r\n        if (this._isWinDevice()) {\r\n            $(\"body\").addClass(this.addWidgetPrefix(NOTOUCH_ACTION_CLASS))\r\n        }\r\n    },\r\n    hideColumnChooser: function() {\r\n        if (this._popupContainer) {\r\n            this._popupContainer.hide()\r\n        }\r\n    },\r\n    isColumnChooserVisible: function() {\r\n        var popupContainer = this._popupContainer;\r\n        return popupContainer && popupContainer.option(\"visible\")\r\n    },\r\n    publicMethods: function() {\r\n        return [\"showColumnChooser\", \"hideColumnChooser\"]\r\n    }\r\n});\r\nexport var columnChooserModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            columnChooser: {\r\n                enabled: false,\r\n                allowSearch: false,\r\n                searchTimeout: 500,\r\n                mode: \"dragAndDrop\",\r\n                width: 250,\r\n                height: 260,\r\n                title: messageLocalization.format(\"dxDataGrid-columnChooserTitle\"),\r\n                emptyPanelText: messageLocalization.format(\"dxDataGrid-columnChooserEmptyText\"),\r\n                container: void 0\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        columnChooser: ColumnChooserController\r\n    },\r\n    views: {\r\n        columnChooserView: ColumnChooserView\r\n    },\r\n    extenders: {\r\n        views: {\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    return this._appendColumnChooserItem(items)\r\n                },\r\n                _appendColumnChooserItem: function(items) {\r\n                    var that = this;\r\n                    var columnChooserEnabled = that.option(\"columnChooser.enabled\");\r\n                    if (columnChooserEnabled) {\r\n                        var hintText = that.option(\"columnChooser.title\");\r\n                        var toolbarItem = {\r\n                            widget: \"dxButton\",\r\n                            options: {\r\n                                icon: COLUMN_CHOOSER_ICON_NAME,\r\n                                onClick: function() {\r\n                                    that.component.getView(\"columnChooserView\").showColumnChooser()\r\n                                },\r\n                                hint: hintText,\r\n                                text: hintText,\r\n                                onInitialized: function(e) {\r\n                                    $(e.element).addClass(that._getToolbarButtonClass(that.addWidgetPrefix(COLUMN_CHOOSER_BUTTON_CLASS)))\r\n                                }\r\n                            },\r\n                            showText: \"inMenu\",\r\n                            location: \"after\",\r\n                            name: \"columnChooserButton\",\r\n                            locateInMenu: \"auto\",\r\n                            sortIndex: 40\r\n                        };\r\n                        items.push(toolbarItem)\r\n                    }\r\n                    return items\r\n                },\r\n                optionChanged: function(args) {\r\n                    switch (args.name) {\r\n                        case \"columnChooser\":\r\n                            this._invalidate();\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                isVisible: function() {\r\n                    var columnChooserEnabled = this.option(\"columnChooser.enabled\");\r\n                    return this.callBase() || columnChooserEnabled\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            columns: {\r\n                allowMoveColumn: function(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation) {\r\n                    var columnChooserMode = this.option(\"columnChooser.mode\");\r\n                    var isMoveColumnDisallowed = \"select\" === columnChooserMode && \"columnChooser\" === targetLocation;\r\n                    return isMoveColumnDisallowed ? false : this.callBase(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.column_chooser.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnChooserModule\r\n} from \"../grid_core/ui.grid_core.column_chooser\";\r\nexport var ColumnChooserController = columnChooserModule.controllers.columnChooser;\r\nexport var ColumnChooserView = columnChooserModule.views.columnChooserView;\r\ngridCore.registerModule(\"columnChooser\", columnChooserModule);\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grouping.core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport Class from \"../../core/class\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    normalizeSortingInfo\r\n} from \"../../data/utils\";\r\nimport {\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nexport function createOffsetFilter(path, storeLoadOptions, lastLevelOnly) {\r\n    var groups = normalizeSortingInfo(storeLoadOptions.group);\r\n    var filter = [];\r\n    for (var i = lastLevelOnly ? path.length - 1 : 0; i < path.length; i++) {\r\n        var filterElement = [];\r\n        for (var j = 0; j <= i; j++) {\r\n            var selector = groups[j].selector;\r\n            if (i === j && (null === path[j] || false === path[j] || true === path[j])) {\r\n                if (false === path[j]) {\r\n                    filterElement.push([selector, \"=\", groups[j].desc ? true : null])\r\n                } else if (path[j] ? !groups[j].desc : groups[j].desc) {\r\n                    filterElement.push([selector, \"<>\", path[j]])\r\n                } else {\r\n                    filterElement.push([selector, \"<>\", null]);\r\n                    filterElement.push([selector, \"=\", null])\r\n                }\r\n            } else {\r\n                var currentFilter = [selector, i === j ? groups[j].desc ? \">\" : \"<\" : \"=\", path[j]];\r\n                if (\"<\" === currentFilter[1]) {\r\n                    filterElement.push([currentFilter, \"or\", [selector, \"=\", null]])\r\n                } else {\r\n                    filterElement.push(currentFilter)\r\n                }\r\n            }\r\n        }\r\n        filter.push(gridCore.combineFilters(filterElement))\r\n    }\r\n    filter = gridCore.combineFilters(filter, \"or\");\r\n    return gridCore.combineFilters([filter, storeLoadOptions.filter])\r\n}\r\nexport var GroupingHelper = Class.inherit(function() {\r\n    var findGroupInfoByKey = function(groupsInfo, key) {\r\n        var hash = groupsInfo.hash;\r\n        return hash && hash[JSON.stringify(key)]\r\n    };\r\n    var getGroupInfoIndexByOffset = function(groupsInfo, offset) {\r\n        var leftIndex = 0;\r\n        var rightIndex = groupsInfo.length - 1;\r\n        if (!groupsInfo.length) {\r\n            return 0\r\n        }\r\n        do {\r\n            var middleIndex = rightIndex + leftIndex >> 1;\r\n            if (groupsInfo[middleIndex].offset > offset) {\r\n                rightIndex = middleIndex\r\n            } else {\r\n                leftIndex = middleIndex\r\n            }\r\n        } while (rightIndex - leftIndex > 1);\r\n        var index;\r\n        for (index = leftIndex; index <= rightIndex; index++) {\r\n            if (groupsInfo[index].offset > offset) {\r\n                break\r\n            }\r\n        }\r\n        return index\r\n    };\r\n    return {\r\n        ctor: function(dataSourceAdapter) {\r\n            this._dataSource = dataSourceAdapter;\r\n            this.reset()\r\n        },\r\n        reset: function() {\r\n            this._groupsInfo = [];\r\n            this._totalCountCorrection = 0\r\n        },\r\n        totalCountCorrection: function() {\r\n            return this._totalCountCorrection\r\n        },\r\n        updateTotalItemsCount: function(totalCountCorrection) {\r\n            this._totalCountCorrection = totalCountCorrection || 0\r\n        },\r\n        isGroupItemCountable: function(item) {\r\n            return !this._isVirtualPaging() || !item.isContinuation\r\n        },\r\n        _isVirtualPaging: function() {\r\n            var scrollingMode = this._dataSource.option(\"scrolling.mode\");\r\n            return \"virtual\" === scrollingMode || \"infinite\" === scrollingMode\r\n        },\r\n        itemsCount: function() {\r\n            var dataSourceAdapter = this._dataSource;\r\n            var dataSource = dataSourceAdapter._dataSource;\r\n            var groupCount = gridCore.normalizeSortingInfo(dataSource.group() || []).length;\r\n            var itemsCount = function calculateItemsCount(that, items, groupsCount) {\r\n                var result = 0;\r\n                if (items) {\r\n                    if (!groupsCount) {\r\n                        result = items.length\r\n                    } else {\r\n                        for (var i = 0; i < items.length; i++) {\r\n                            if (that.isGroupItemCountable(items[i])) {\r\n                                result++\r\n                            }\r\n                            result += calculateItemsCount(that, items[i].items, groupsCount - 1)\r\n                        }\r\n                    }\r\n                }\r\n                return result\r\n            }(this, dataSource.items(), groupCount);\r\n            return itemsCount\r\n        },\r\n        foreachGroups: function(callback, childrenAtFirst, foreachCollapsedGroups, updateOffsets, updateParentOffsets) {\r\n            var that = this;\r\n            return function foreachGroupsCore(groupsInfo, callback, childrenAtFirst, parents) {\r\n                var callbackResults = [];\r\n\r\n                function executeCallback(callback, data, parents, callbackResults) {\r\n                    var callbackResult = data && callback(data, parents);\r\n                    callbackResult && callbackResults.push(callbackResult);\r\n                    return callbackResult\r\n                }\r\n                for (var i = 0; i < groupsInfo.length; i++) {\r\n                    parents.push(groupsInfo[i].data);\r\n                    if (!childrenAtFirst && false === executeCallback(callback, groupsInfo[i].data, parents, callbackResults)) {\r\n                        return false\r\n                    }\r\n                    if (!groupsInfo[i].data || groupsInfo[i].data.isExpanded || foreachCollapsedGroups) {\r\n                        var children = groupsInfo[i].children;\r\n                        var callbackResult = children.length && foreachGroupsCore(children, callback, childrenAtFirst, parents);\r\n                        callbackResult && callbackResults.push(callbackResult);\r\n                        if (false === callbackResult) {\r\n                            return false\r\n                        }\r\n                    }\r\n                    if (childrenAtFirst && false === executeCallback(callback, groupsInfo[i].data, parents, callbackResults)) {\r\n                        return false\r\n                    }\r\n                    if (!groupsInfo[i].data || groupsInfo[i].data.offset !== groupsInfo[i].offset) {\r\n                        updateOffsets = true\r\n                    }\r\n                    parents.pop()\r\n                }\r\n                var currentParents = updateParentOffsets && parents.slice(0);\r\n                return updateOffsets && when.apply($, callbackResults).always((function() {\r\n                    that._updateGroupInfoOffsets(groupsInfo, currentParents)\r\n                }))\r\n            }(that._groupsInfo, callback, childrenAtFirst, [])\r\n        },\r\n        _updateGroupInfoOffsets: function(groupsInfo, parents) {\r\n            parents = parents || [];\r\n            for (var index = 0; index < groupsInfo.length; index++) {\r\n                var groupInfo = groupsInfo[index];\r\n                if (groupInfo.data && groupInfo.data.offset !== groupInfo.offset) {\r\n                    groupInfo.offset = groupInfo.data.offset;\r\n                    for (var parentIndex = 0; parentIndex < parents.length; parentIndex++) {\r\n                        parents[parentIndex].offset = groupInfo.offset\r\n                    }\r\n                }\r\n            }\r\n            groupsInfo.sort((function(a, b) {\r\n                return a.offset - b.offset\r\n            }))\r\n        },\r\n        findGroupInfo: function(path) {\r\n            var groupInfo;\r\n            var groupsInfo = this._groupsInfo;\r\n            for (var pathIndex = 0; groupsInfo && pathIndex < path.length; pathIndex++) {\r\n                groupInfo = findGroupInfoByKey(groupsInfo, path[pathIndex]);\r\n                groupsInfo = groupInfo && groupInfo.children\r\n            }\r\n            return groupInfo && groupInfo.data\r\n        },\r\n        addGroupInfo: function(groupInfoData) {\r\n            var groupInfo;\r\n            var path = groupInfoData.path;\r\n            var groupsInfo = this._groupsInfo;\r\n            for (var pathIndex = 0; pathIndex < path.length; pathIndex++) {\r\n                groupInfo = findGroupInfoByKey(groupsInfo, path[pathIndex]);\r\n                if (!groupInfo) {\r\n                    groupInfo = {\r\n                        key: path[pathIndex],\r\n                        offset: groupInfoData.offset,\r\n                        data: {\r\n                            offset: groupInfoData.offset,\r\n                            isExpanded: true,\r\n                            path: path.slice(0, pathIndex + 1)\r\n                        },\r\n                        children: []\r\n                    };\r\n                    var index = getGroupInfoIndexByOffset(groupsInfo, groupInfoData.offset);\r\n                    groupsInfo.splice(index, 0, groupInfo);\r\n                    groupsInfo.hash = groupsInfo.hash || {};\r\n                    groupsInfo.hash[JSON.stringify(groupInfo.key)] = groupInfo\r\n                }\r\n                if (pathIndex === path.length - 1) {\r\n                    groupInfo.data = groupInfoData;\r\n                    if (groupInfo.offset !== groupInfoData.offset) {\r\n                        this._updateGroupInfoOffsets(groupsInfo)\r\n                    }\r\n                }\r\n                groupsInfo = groupInfo.children\r\n            }\r\n        },\r\n        allowCollapseAll: function() {\r\n            return true\r\n        },\r\n        refresh: function(options) {\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var groups = normalizeSortingInfo(storeLoadOptions.group || []);\r\n            var oldGroups = \"_group\" in this ? normalizeSortingInfo(this._group || []) : groups;\r\n            var groupsCount = Math.min(oldGroups.length, groups.length);\r\n            this._group = storeLoadOptions.group;\r\n            for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\r\n                if (oldGroups[groupIndex].selector !== groups[groupIndex].selector) {\r\n                    groupsCount = groupIndex;\r\n                    break\r\n                }\r\n            }\r\n            if (!groupsCount) {\r\n                this.reset()\r\n            } else {\r\n                ! function cleanGroupsInfo(groupsInfo, groupIndex, groupsCount) {\r\n                    for (var i = 0; i < groupsInfo.length; i++) {\r\n                        if (groupIndex + 1 >= groupsCount) {\r\n                            groupsInfo[i].children = []\r\n                        } else {\r\n                            cleanGroupsInfo(groupsInfo[i].children, groupIndex + 1, groupsCount)\r\n                        }\r\n                    }\r\n                }(this._groupsInfo, 0, groupsCount)\r\n            }\r\n        },\r\n        handleDataLoading: function() {},\r\n        handleDataLoaded: function(options, callBase) {\r\n            callBase(options)\r\n        },\r\n        handleDataLoadedCore: function(options, callBase) {\r\n            callBase(options)\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\r\nimport {\r\n    normalizeSortingInfo\r\n} from \"../../data/utils\";\r\nexport function createGroupFilter(path, storeLoadOptions) {\r\n    var groups = normalizeSortingInfo(storeLoadOptions.group);\r\n    var filter = [];\r\n    for (var i = 0; i < path.length; i++) {\r\n        filter.push([groups[i].selector, \"=\", path[i]])\r\n    }\r\n    if (storeLoadOptions.filter) {\r\n        filter.push(storeLoadOptions.filter)\r\n    }\r\n    return gridCoreUtils.combineFilters(filter)\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grouping.expanded.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    toComparable\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    keysEqual\r\n} from \"../../data/utils\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport storeHelper from \"../../data/store_helper\";\r\nimport dataGridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    GroupingHelper as GroupingHelperCore,\r\n    createOffsetFilter\r\n} from \"./ui.data_grid.grouping.core\";\r\nimport {\r\n    createGroupFilter\r\n} from \"./ui.data_grid.utils\";\r\nimport dataQuery from \"../../data/query\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar loadTotalCount = function(dataSource, options) {\r\n    var d = new Deferred;\r\n    var loadOptions = extend({\r\n        skip: 0,\r\n        take: 1,\r\n        requireTotalCount: true\r\n    }, options);\r\n    dataSource.load(loadOptions).done((function(data, extra) {\r\n        d.resolve(extra && extra.totalCount)\r\n    })).fail(d.reject.bind(d));\r\n    return d\r\n};\r\nexport var GroupingHelper = GroupingHelperCore.inherit(function() {\r\n    var foreachCollapsedGroups = function(that, callback, updateOffsets) {\r\n        return that.foreachGroups((function(groupInfo) {\r\n            if (!groupInfo.isExpanded) {\r\n                return callback(groupInfo)\r\n            }\r\n        }), false, false, updateOffsets, true)\r\n    };\r\n    var correctSkipLoadOption = function(that, skip) {\r\n        var skipCorrection = 0;\r\n        var resultSkip = skip || 0;\r\n        if (skip) {\r\n            foreachCollapsedGroups(that, (function(groupInfo) {\r\n                if (groupInfo.offset - skipCorrection >= skip) {\r\n                    return false\r\n                }\r\n                skipCorrection += groupInfo.count - 1\r\n            }));\r\n            resultSkip += skipCorrection\r\n        }\r\n        return resultSkip\r\n    };\r\n    var pathEquals = function(path1, path2) {\r\n        if (path1.length !== path2.length) {\r\n            return false\r\n        }\r\n        for (var i = 0; i < path1.length; i++) {\r\n            if (!keysEqual(null, path1[i], path2[i])) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    };\r\n    var updateGroupOffsets = function updateGroupOffsets(that, items, path, offset, additionalGroupInfo) {\r\n        if (!items) {\r\n            return\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (\"key\" in item && void 0 !== item.items) {\r\n                path.push(item.key);\r\n                if (additionalGroupInfo && pathEquals(additionalGroupInfo.path, path) && !item.isContinuation) {\r\n                    additionalGroupInfo.offset = offset\r\n                }\r\n                var groupInfo = that.findGroupInfo(path);\r\n                if (groupInfo && !item.isContinuation) {\r\n                    groupInfo.offset = offset\r\n                }\r\n                if (groupInfo && !groupInfo.isExpanded) {\r\n                    offset += groupInfo.count\r\n                } else {\r\n                    offset = updateGroupOffsets(that, item.items, path, offset, additionalGroupInfo)\r\n                }\r\n                path.pop()\r\n            } else {\r\n                offset++\r\n            }\r\n        }\r\n        return offset\r\n    };\r\n    var getGroupCount = function getGroupCount(item, groupCount) {\r\n        var count = item.count || item.items.length;\r\n        if (!item.count && groupCount > 1) {\r\n            count = 0;\r\n            for (var i = 0; i < item.items.length; i++) {\r\n                count += getGroupCount(item.items[i], groupCount - 1)\r\n            }\r\n        }\r\n        return count\r\n    };\r\n    return {\r\n        handleDataLoading: function(options) {\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var collapsedGroups = [];\r\n            var collapsedItemsCount = 0;\r\n            var skipFirstItem = false;\r\n            var take;\r\n            var group = options.loadOptions.group;\r\n            var skipCorrection = 0;\r\n            ! function(storeLoadOptions, loadOptions) {\r\n                if (loadOptions.group) {\r\n                    var groups = dataGridCore.normalizeSortingInfo(loadOptions.group);\r\n                    var sorts = dataGridCore.normalizeSortingInfo(storeLoadOptions.sort);\r\n                    storeLoadOptions.sort = storeHelper.arrangeSortingInfo(groups, sorts);\r\n                    delete loadOptions.group\r\n                }\r\n            }(storeLoadOptions, options.loadOptions);\r\n            options.group = options.group || group;\r\n            if (options.isCustomLoading) {\r\n                return\r\n            }\r\n            var loadOptions = extend({}, storeLoadOptions);\r\n            loadOptions.skip = correctSkipLoadOption(this, storeLoadOptions.skip);\r\n            if (loadOptions.skip && loadOptions.take && group) {\r\n                loadOptions.skip--;\r\n                loadOptions.take++;\r\n                skipFirstItem = true\r\n            }\r\n            if (loadOptions.take && group) {\r\n                take = loadOptions.take;\r\n                loadOptions.take++\r\n            }\r\n            foreachCollapsedGroups(this, (function(groupInfo) {\r\n                if (groupInfo.offset >= loadOptions.skip + loadOptions.take + skipCorrection) {\r\n                    return false\r\n                } else if (groupInfo.offset >= loadOptions.skip + skipCorrection && groupInfo.count) {\r\n                    skipCorrection += groupInfo.count - 1;\r\n                    collapsedGroups.push(groupInfo);\r\n                    collapsedItemsCount += groupInfo.count\r\n                }\r\n            }));\r\n            each(collapsedGroups, (function() {\r\n                loadOptions.filter = function(path, storeLoadOptions, group) {\r\n                    var groups = dataGridCore.normalizeSortingInfo(group || storeLoadOptions.group);\r\n                    var filter = [];\r\n                    for (var i = 0; i < path.length; i++) {\r\n                        var filterElement = [];\r\n                        for (var j = 0; j <= i; j++) {\r\n                            filterElement.push([groups[j].selector, i === j ? \"<>\" : \"=\", path[j]])\r\n                        }\r\n                        filter.push(dataGridCore.combineFilters(filterElement))\r\n                    }\r\n                    filter = dataGridCore.combineFilters(filter, \"or\");\r\n                    return dataGridCore.combineFilters([filter, storeLoadOptions.filter])\r\n                }(this.path, loadOptions, group)\r\n            }));\r\n            options.storeLoadOptions = loadOptions;\r\n            options.collapsedGroups = collapsedGroups;\r\n            options.collapsedItemsCount = collapsedItemsCount;\r\n            options.skip = loadOptions.skip || 0;\r\n            options.skipFirstItem = skipFirstItem;\r\n            options.take = take\r\n        },\r\n        handleDataLoaded: function(options, callBase) {\r\n            var collapsedGroups = options.collapsedGroups;\r\n            var groups = dataGridCore.normalizeSortingInfo(options.group);\r\n            var groupCount = groups.length;\r\n\r\n            function appendCollapsedPath(data, path, groups, collapsedGroup, offset) {\r\n                if (!data || !path.length || !groups.length) {\r\n                    return\r\n                }\r\n                var keyValue;\r\n                var i;\r\n                var pathValue = toComparable(path[0], true);\r\n                for (i = 0; i < data.length; i++) {\r\n                    keyValue = toComparable(data[i].key, true);\r\n                    if (offset >= collapsedGroup.offset || pathValue === keyValue) {\r\n                        break\r\n                    } else {\r\n                        offset += getGroupCount(data[i], groups.length)\r\n                    }\r\n                }\r\n                if (!data.length || pathValue !== keyValue) {\r\n                    data.splice(i, 0, {\r\n                        key: path[0],\r\n                        items: [],\r\n                        count: 1 === path.length ? collapsedGroup.count : void 0\r\n                    })\r\n                }\r\n                appendCollapsedPath(data[i].items, path.slice(1), groups.slice(1), collapsedGroup, offset)\r\n            }\r\n            if (options.collapsedItemsCount && options.extra && options.extra.totalCount >= 0) {\r\n                options.extra.totalCount += options.collapsedItemsCount\r\n            }\r\n            callBase(options);\r\n            if (groupCount) {\r\n                var data = options.data;\r\n                var query = dataQuery(data);\r\n                storeHelper.multiLevelGroup(query, groups).enumerate().done((function(groupedData) {\r\n                    data = groupedData\r\n                }));\r\n                if (collapsedGroups) {\r\n                    for (var pathIndex = 0; pathIndex < collapsedGroups.length; pathIndex++) {\r\n                        appendCollapsedPath(data, collapsedGroups[pathIndex].path, groups, collapsedGroups[pathIndex], options.skip)\r\n                    }\r\n                }\r\n                if (!options.isCustomLoading) {\r\n                    ! function processGroupItems(that, items, path, offset, skipFirstItem, take) {\r\n                        var removeLastItemsCount = 0;\r\n                        var needRemoveFirstItem = false;\r\n                        for (var i = 0; i < items.length; i++) {\r\n                            var item = items[i];\r\n                            if (void 0 !== item.items) {\r\n                                path.push(item.key);\r\n                                var groupInfo = that.findGroupInfo(path);\r\n                                if (groupInfo && !groupInfo.isExpanded) {\r\n                                    item.collapsedItems = item.items;\r\n                                    item.items = null;\r\n                                    offset += groupInfo.count;\r\n                                    take--;\r\n                                    if (take < 0) {\r\n                                        removeLastItemsCount++\r\n                                    }\r\n                                    if (skipFirstItem) {\r\n                                        needRemoveFirstItem = true\r\n                                    }\r\n                                } else if (item.items) {\r\n                                    var offsetInfo = processGroupItems(that, item.items, path, offset, skipFirstItem, take);\r\n                                    if (skipFirstItem) {\r\n                                        if (offsetInfo.offset - offset > 1) {\r\n                                            item.isContinuation = true\r\n                                        } else {\r\n                                            needRemoveFirstItem = true\r\n                                        }\r\n                                    }\r\n                                    offset = offsetInfo.offset;\r\n                                    take = offsetInfo.take;\r\n                                    if (take < 0) {\r\n                                        if (item.items.length) {\r\n                                            item.isContinuationOnNextPage = true\r\n                                        } else {\r\n                                            removeLastItemsCount++\r\n                                        }\r\n                                    }\r\n                                }\r\n                                path.pop()\r\n                            } else {\r\n                                if (skipFirstItem) {\r\n                                    needRemoveFirstItem = true\r\n                                }\r\n                                offset++;\r\n                                take--;\r\n                                if (take < 0) {\r\n                                    removeLastItemsCount++\r\n                                }\r\n                            }\r\n                            skipFirstItem = false\r\n                        }\r\n                        if (needRemoveFirstItem) {\r\n                            items.splice(0, 1)\r\n                        }\r\n                        if (removeLastItemsCount) {\r\n                            items.splice(-removeLastItemsCount, removeLastItemsCount)\r\n                        }\r\n                        return {\r\n                            offset: offset,\r\n                            take: take\r\n                        }\r\n                    }(this, data, [], options.skip, options.skipFirstItem, options.take)\r\n                }\r\n                options.data = data\r\n            }\r\n        },\r\n        isGroupItemCountable: function(item) {\r\n            return null === item.items\r\n        },\r\n        updateTotalItemsCount: function() {\r\n            var itemsCountCorrection = 0;\r\n            foreachCollapsedGroups(this, (function(groupInfo) {\r\n                if (groupInfo.count) {\r\n                    itemsCountCorrection -= groupInfo.count - 1\r\n                }\r\n            }));\r\n            this.callBase(itemsCountCorrection)\r\n        },\r\n        changeRowExpand: function(path) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var beginPageIndex = dataSource.beginPageIndex ? dataSource.beginPageIndex() : dataSource.pageIndex();\r\n            var dataSourceItems = dataSource.items();\r\n            var offset = correctSkipLoadOption(that, beginPageIndex * dataSource.pageSize());\r\n            var groupInfo = that.findGroupInfo(path);\r\n            var groupCountQuery;\r\n            if (groupInfo && !groupInfo.isExpanded) {\r\n                groupCountQuery = (new Deferred).resolve(groupInfo.count)\r\n            } else {\r\n                groupCountQuery = loadTotalCount(dataSource, {\r\n                    filter: createGroupFilter(path, {\r\n                        filter: dataSource.filter(),\r\n                        group: dataSource.group()\r\n                    })\r\n                })\r\n            }\r\n            return when(groupCountQuery).done((function(count) {\r\n                count = parseInt(count.length ? count[0] : count);\r\n                if (groupInfo) {\r\n                    updateGroupOffsets(that, dataSourceItems, [], offset);\r\n                    groupInfo.isExpanded = !groupInfo.isExpanded;\r\n                    groupInfo.count = count\r\n                } else {\r\n                    groupInfo = {\r\n                        offset: -1,\r\n                        count: count,\r\n                        path: path,\r\n                        isExpanded: false\r\n                    };\r\n                    updateGroupOffsets(that, dataSourceItems, [], offset, groupInfo);\r\n                    if (groupInfo.offset >= 0) {\r\n                        that.addGroupInfo(groupInfo)\r\n                    }\r\n                }\r\n                that.updateTotalItemsCount()\r\n            })).fail((function() {\r\n                dataSource._eventsStrategy.fireEvent(\"loadError\", arguments)\r\n            }))\r\n        },\r\n        allowCollapseAll: function() {\r\n            return false\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            var that = this;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var dataSource = that._dataSource;\r\n            this.callBase.apply(this, arguments);\r\n            if (operationTypes.reload) {\r\n                return foreachCollapsedGroups(that, (function(groupInfo) {\r\n                    var groupCountQuery = loadTotalCount(dataSource, {\r\n                        filter: createGroupFilter(groupInfo.path, storeLoadOptions)\r\n                    });\r\n                    var groupOffsetQuery = loadTotalCount(dataSource, {\r\n                        filter: createOffsetFilter(groupInfo.path, storeLoadOptions)\r\n                    });\r\n                    return when(groupOffsetQuery, groupCountQuery).done((function(offset, count) {\r\n                        offset = parseInt(offset.length ? offset[0] : offset);\r\n                        count = parseInt(count.length ? count[0] : count);\r\n                        groupInfo.offset = offset;\r\n                        if (groupInfo.count !== count) {\r\n                            groupInfo.count = count;\r\n                            that.updateTotalItemsCount()\r\n                        }\r\n                    }))\r\n                }), true)\r\n            }\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grouping.collapsed.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport dataGridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    GroupingHelper as GroupingHelperCore,\r\n    createOffsetFilter\r\n} from \"./ui.data_grid.grouping.core\";\r\nimport {\r\n    createGroupFilter\r\n} from \"./ui.data_grid.utils\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    errors as dataErrors\r\n} from \"../../data/errors\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\n\r\nfunction getContinuationGroupCount(groupOffset, pageSize, groupSize, groupIndex) {\r\n    groupIndex = groupIndex || 0;\r\n    if (pageSize > 1 && groupSize > 0) {\r\n        var pageOffset = groupOffset - Math.floor(groupOffset / pageSize) * pageSize || pageSize;\r\n        pageOffset += groupSize - groupIndex - 2;\r\n        if (pageOffset < 0) {\r\n            pageOffset += pageSize\r\n        }\r\n        return Math.floor(pageOffset / (pageSize - groupIndex - 1))\r\n    }\r\n    return 0\r\n}\r\nexport var GroupingHelper = GroupingHelperCore.inherit(function() {\r\n    var foreachExpandedGroups = function(that, callback, updateGroups) {\r\n        return that.foreachGroups((function(groupInfo, parents) {\r\n            if (groupInfo.isExpanded) {\r\n                return callback(groupInfo, parents)\r\n            }\r\n        }), true, false, updateGroups, updateGroups)\r\n    };\r\n    var processGroupItems = function processGroupItems(that, items, groupsCount, expandedInfo, path, isCustomLoading, isLastGroupExpanded) {\r\n        var isExpanded;\r\n        expandedInfo.items = expandedInfo.items || [];\r\n        expandedInfo.paths = expandedInfo.paths || [];\r\n        expandedInfo.count = expandedInfo.count || 0;\r\n        expandedInfo.lastCount = expandedInfo.lastCount || 0;\r\n        if (!groupsCount) {\r\n            return\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (void 0 !== item.items) {\r\n                path.push(item.key);\r\n                if (isCustomLoading) {\r\n                    isExpanded = true\r\n                } else {\r\n                    var groupInfo = that.findGroupInfo(path);\r\n                    isExpanded = groupInfo && groupInfo.isExpanded\r\n                }\r\n                if (!isExpanded) {\r\n                    item.collapsedItems = item.items;\r\n                    item.items = null\r\n                } else if (item.items) {\r\n                    processGroupItems(that, item.items, groupsCount - 1, expandedInfo, path, isCustomLoading, isLastGroupExpanded)\r\n                } else if (1 === groupsCount && item.count && (!isCustomLoading || isLastGroupExpanded)) {\r\n                    expandedInfo.items.push(item);\r\n                    expandedInfo.paths.push(path.slice(0));\r\n                    expandedInfo.count += expandedInfo.lastCount;\r\n                    expandedInfo.lastCount = item.count\r\n                }\r\n                path.pop()\r\n            }\r\n        }\r\n    };\r\n    var updateGroupInfoItem = function(that, item, isLastGroupLevel, path, offset) {\r\n        var groupInfo = that.findGroupInfo(path);\r\n        var count;\r\n        if (!groupInfo) {\r\n            if (isLastGroupLevel) {\r\n                count = item.count > 0 ? item.count : item.items.length\r\n            }\r\n            that.addGroupInfo({\r\n                isExpanded: that._isGroupExpanded(path.length - 1),\r\n                path: path.slice(0),\r\n                offset: offset,\r\n                count: count || 0\r\n            })\r\n        } else {\r\n            if (isLastGroupLevel) {\r\n                groupInfo.count = item.count > 0 ? item.count : item.items && item.items.length || 0\r\n            } else {\r\n                item.count = groupInfo.count || item.count\r\n            }\r\n            groupInfo.offset = offset\r\n        }\r\n    };\r\n    var updateGroupInfos = function updateGroupInfos(that, options, items, loadedGroupCount, groupIndex, path, parentIndex) {\r\n        var groupCount = options.group ? options.group.length : 0;\r\n        var isLastGroupLevel = groupCount === loadedGroupCount;\r\n        var remotePaging = options.remoteOperations.paging;\r\n        var offset = 0;\r\n        var totalCount = 0;\r\n        var count;\r\n        groupIndex = groupIndex || 0;\r\n        path = path || [];\r\n        if (remotePaging && !parentIndex) {\r\n            offset = 0 === groupIndex ? options.skip || 0 : options.skips[groupIndex - 1] || 0\r\n        }\r\n        if (groupIndex >= loadedGroupCount) {\r\n            return items.length\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (item) {\r\n                path.push(item.key);\r\n                if (!item.count && !item.items || void 0 === item.items) {\r\n                    return -1\r\n                }\r\n                updateGroupInfoItem(that, item, isLastGroupLevel, path, offset + i);\r\n                count = item.items ? updateGroupInfos(that, options, item.items, loadedGroupCount, groupIndex + 1, path, i) : item.count || -1;\r\n                if (count < 0) {\r\n                    return -1\r\n                }\r\n                totalCount += count;\r\n                path.pop()\r\n            }\r\n        }\r\n        return totalCount\r\n    };\r\n    var isGroupExpanded = function(groups, groupIndex) {\r\n        return groups && groups.length && groups[groupIndex] && !!groups[groupIndex].isExpanded\r\n    };\r\n    var getTotalOffset = function(groupInfos, pageSize, offset) {\r\n        var groupSize;\r\n        var totalOffset = offset;\r\n        for (var groupIndex = 0; groupIndex < groupInfos.length; groupIndex++) {\r\n            groupSize = groupInfos[groupIndex].offset + 1;\r\n            if (groupIndex > 0) {\r\n                groupSize += groupInfos[groupIndex - 1].childrenTotalCount;\r\n                if (pageSize) {\r\n                    groupSize += getContinuationGroupCount(totalOffset, pageSize, groupSize, groupIndex - 1) * groupIndex\r\n                }\r\n            }\r\n            totalOffset += groupSize\r\n        }\r\n        return totalOffset\r\n    };\r\n\r\n    function applyContinuationToGroupItem(options, expandedInfo, groupLevel, expandedItemIndex) {\r\n        var item = expandedInfo.items[expandedItemIndex];\r\n        var skip = options.skips && options.skips[groupLevel];\r\n        var take = options.takes && options.takes[groupLevel];\r\n        var isLastExpandedItem = expandedItemIndex === expandedInfo.items.length - 1;\r\n        var isFirstExpandedItem = 0 === expandedItemIndex;\r\n        var lastExpandedItemSkip = isFirstExpandedItem && skip || 0;\r\n        var isItemsTruncatedByTake = item.count > take + lastExpandedItemSkip;\r\n        if (isFirstExpandedItem && void 0 !== skip) {\r\n            item.isContinuation = true\r\n        }\r\n        if (isLastExpandedItem && void 0 !== take && isItemsTruncatedByTake) {\r\n            item.isContinuationOnNextPage = true\r\n        }\r\n    }\r\n\r\n    function isDataDeferred(data) {\r\n        return !Array.isArray(data)\r\n    }\r\n\r\n    function makeDataDeferred(options) {\r\n        if (!isDataDeferred(options.data)) {\r\n            options.data = new Deferred\r\n        }\r\n    }\r\n\r\n    function loadGroupItems(that, options, loadedGroupCount, expandedInfo, groupLevel, data) {\r\n        if (!options.isCustomLoading) {\r\n            expandedInfo = {};\r\n            processGroupItems(that, data, loadedGroupCount, expandedInfo, []);\r\n            ! function(options, expandedInfo, currentGroupCount) {\r\n                var currentGroupIndex = currentGroupCount - 1;\r\n                var groupCount = options.group ? options.group.length : 0;\r\n                expandedInfo.skip = options.skips && options.skips[currentGroupIndex];\r\n                if (options.takes && void 0 !== options.takes[currentGroupIndex]) {\r\n                    if (groupCount === currentGroupCount) {\r\n                        expandedInfo.take = expandedInfo.count ? expandedInfo.count - (expandedInfo.skip || 0) : 0\r\n                    } else {\r\n                        expandedInfo.take = 0\r\n                    }\r\n                    expandedInfo.take += options.takes[currentGroupIndex]\r\n                }\r\n            }(options, expandedInfo, loadedGroupCount)\r\n        }\r\n        var groupCount = options.group ? options.group.length : 0;\r\n        if (expandedInfo.paths.length && groupCount - loadedGroupCount > 0) {\r\n            makeDataDeferred(options);\r\n            ! function(that, options, expandedInfo, loadedGroupCount, groupLevel, data) {\r\n                var groups = options.group || [];\r\n                var currentGroup = groups[groupLevel + 1];\r\n                var deferreds = [];\r\n                each(expandedInfo.paths, (function(expandedItemIndex) {\r\n                    var loadOptions = {\r\n                        requireTotalCount: false,\r\n                        requireGroupCount: true,\r\n                        group: [currentGroup],\r\n                        groupSummary: options.storeLoadOptions.groupSummary,\r\n                        filter: createGroupFilter(expandedInfo.paths[expandedItemIndex], {\r\n                            filter: options.storeLoadOptions.filter,\r\n                            group: groups\r\n                        }),\r\n                        select: options.storeLoadOptions.select\r\n                    };\r\n                    if (0 === expandedItemIndex) {\r\n                        loadOptions.skip = expandedInfo.skip || 0\r\n                    }\r\n                    if (expandedItemIndex === expandedInfo.paths.length - 1) {\r\n                        loadOptions.take = expandedInfo.take\r\n                    }\r\n                    var loadResult = 0 === loadOptions.take ? [] : that._dataSource.loadFromStore(loadOptions);\r\n                    when(loadResult).done((function(data) {\r\n                        var item = expandedInfo.items[expandedItemIndex];\r\n                        applyContinuationToGroupItem(options, expandedInfo, groupLevel, expandedItemIndex);\r\n                        item.items = data\r\n                    }));\r\n                    deferreds.push(loadResult)\r\n                }));\r\n                when.apply(null, deferreds).done((function() {\r\n                    updateGroupInfos(that, options, data, loadedGroupCount + 1);\r\n                    loadGroupItems(that, options, loadedGroupCount + 1, expandedInfo, groupLevel + 1, data)\r\n                }))\r\n            }(that, options, expandedInfo, loadedGroupCount, groupLevel, data)\r\n        } else if (expandedInfo.paths.length && options.storeLoadOptions.group) {\r\n            makeDataDeferred(options);\r\n            ! function(that, options, expandedInfo, data) {\r\n                var expandedFilters = [];\r\n                var groups = options.group || [];\r\n                each(expandedInfo.paths, (function(_, expandedPath) {\r\n                    expandedFilters.push(createGroupFilter(expandedPath, {\r\n                        group: options.isCustomLoading ? options.storeLoadOptions.group : groups\r\n                    }))\r\n                }));\r\n                var filter = options.storeLoadOptions.filter;\r\n                if (!options.storeLoadOptions.isLoadingAll) {\r\n                    filter = dataGridCore.combineFilters([filter, dataGridCore.combineFilters(expandedFilters, \"or\")])\r\n                }\r\n                var loadOptions = extend({}, options.storeLoadOptions, {\r\n                    requireTotalCount: false,\r\n                    requireGroupCount: false,\r\n                    group: null,\r\n                    sort: groups.concat(dataGridCore.normalizeSortingInfo(options.storeLoadOptions.sort || [])),\r\n                    filter: filter\r\n                });\r\n                var isPagingLocal = that._dataSource.isLastLevelGroupItemsPagingLocal();\r\n                if (!isPagingLocal) {\r\n                    loadOptions.skip = expandedInfo.skip;\r\n                    loadOptions.take = expandedInfo.take\r\n                }\r\n                when(0 === expandedInfo.take ? [] : that._dataSource.loadFromStore(loadOptions)).done((function(items, extra) {\r\n                    if (isPagingLocal) {\r\n                        items = that._dataSource.sortLastLevelGroupItems(items, groups, expandedInfo.paths);\r\n                        items = expandedInfo.skip ? items.slice(expandedInfo.skip) : items;\r\n                        items = expandedInfo.take ? items.slice(0, expandedInfo.take) : items\r\n                    }\r\n                    each(expandedInfo.items, (function(index, item) {\r\n                        var itemCount = item.count - (0 === index && expandedInfo.skip || 0);\r\n                        var expandedItems = items.splice(0, itemCount);\r\n                        applyContinuationToGroupItem(options, expandedInfo, groups.length - 1, index);\r\n                        item.items = expandedItems\r\n                    }));\r\n                    options.data.resolve(data)\r\n                })).fail(options.data.reject)\r\n            }(that, options, expandedInfo, data)\r\n        } else if (isDataDeferred(options.data)) {\r\n            options.data.resolve(data)\r\n        }\r\n    }\r\n    var loadGroupTotalCount = function(dataSource, options) {\r\n        var d = new Deferred;\r\n        var isGrouping = !!(options.group && options.group.length);\r\n        var loadOptions = extend({\r\n            skip: 0,\r\n            take: 1,\r\n            requireGroupCount: isGrouping,\r\n            requireTotalCount: !isGrouping\r\n        }, options, {\r\n            group: isGrouping ? options.group : null\r\n        });\r\n        dataSource.load(loadOptions).done((function(data, extra) {\r\n            var count = extra && (isGrouping ? extra.groupCount : extra.totalCount);\r\n            if (!isFinite(count)) {\r\n                d.reject(dataErrors.Error(isGrouping ? \"E4022\" : \"E4021\"));\r\n                return\r\n            }\r\n            d.resolve(count)\r\n        })).fail(d.reject.bind(d));\r\n        return d\r\n    };\r\n    return {\r\n        updateTotalItemsCount: function(options) {\r\n            var totalItemsCount = 0;\r\n            var totalCount = options.extra && options.extra.totalCount || 0;\r\n            var groupCount = options.extra && options.extra.groupCount || 0;\r\n            var pageSize = this._dataSource.pageSize();\r\n            var isVirtualPaging = this._isVirtualPaging();\r\n            foreachExpandedGroups(this, (function(groupInfo) {\r\n                groupInfo.childrenTotalCount = 0\r\n            }));\r\n            foreachExpandedGroups(this, (function(groupInfo, parents) {\r\n                var totalOffset = getTotalOffset(parents, isVirtualPaging ? 0 : pageSize, totalItemsCount);\r\n                var count = groupInfo.count + groupInfo.childrenTotalCount;\r\n                if (!isVirtualPaging) {\r\n                    count += getContinuationGroupCount(totalOffset, pageSize, count, parents.length - 1)\r\n                }\r\n                if (parents[parents.length - 2]) {\r\n                    parents[parents.length - 2].childrenTotalCount += count\r\n                } else {\r\n                    totalItemsCount += count\r\n                }\r\n            }));\r\n            this.callBase(totalItemsCount - totalCount + groupCount)\r\n        },\r\n        _isGroupExpanded: function(groupIndex) {\r\n            var groups = this._dataSource.group();\r\n            return isGroupExpanded(groups, groupIndex)\r\n        },\r\n        _updatePagingOptions: function(options, callback) {\r\n            var isVirtualPaging = this._isVirtualPaging();\r\n            var pageSize = this._dataSource.pageSize();\r\n            var skips = [];\r\n            var takes = [];\r\n            var skipChildrenTotalCount = 0;\r\n            var childrenTotalCount = 0;\r\n            if (options.take) {\r\n                foreachExpandedGroups(this, (function(groupInfo) {\r\n                    groupInfo.childrenTotalCount = 0;\r\n                    groupInfo.skipChildrenTotalCount = 0\r\n                }));\r\n                foreachExpandedGroups(this, (function(groupInfo, parents) {\r\n                    var take;\r\n                    var takeCorrection = 0;\r\n                    var parentTakeCorrection = 0;\r\n                    var totalOffset = getTotalOffset(parents, isVirtualPaging ? 0 : pageSize, childrenTotalCount);\r\n                    var continuationGroupCount = 0;\r\n                    var skipContinuationGroupCount = 0;\r\n                    var groupInfoCount = groupInfo.count + groupInfo.childrenTotalCount;\r\n                    var childrenGroupInfoCount = groupInfoCount;\r\n                    callback && callback(groupInfo, totalOffset);\r\n                    var skip = options.skip - totalOffset;\r\n                    if (totalOffset <= options.skip + options.take && groupInfoCount) {\r\n                        take = options.take;\r\n                        if (!isVirtualPaging) {\r\n                            continuationGroupCount = getContinuationGroupCount(totalOffset, pageSize, groupInfoCount, parents.length - 1);\r\n                            groupInfoCount += continuationGroupCount * parents.length;\r\n                            childrenGroupInfoCount += continuationGroupCount;\r\n                            if (pageSize && skip >= 0) {\r\n                                takeCorrection = parents.length;\r\n                                parentTakeCorrection = parents.length - 1;\r\n                                skipContinuationGroupCount = Math.floor(skip / pageSize)\r\n                            }\r\n                        }\r\n                        if (skip >= 0) {\r\n                            if (totalOffset + groupInfoCount > options.skip) {\r\n                                skips.unshift(skip - skipContinuationGroupCount * takeCorrection - groupInfo.skipChildrenTotalCount)\r\n                            }\r\n                            if (totalOffset + groupInfoCount >= options.skip + take) {\r\n                                takes.unshift(take - takeCorrection - groupInfo.childrenTotalCount + groupInfo.skipChildrenTotalCount)\r\n                            }\r\n                        } else if (totalOffset + groupInfoCount >= options.skip + take) {\r\n                            takes.unshift(take + skip - groupInfo.childrenTotalCount)\r\n                        }\r\n                    }\r\n                    if (totalOffset <= options.skip) {\r\n                        if (parents[parents.length - 2]) {\r\n                            parents[parents.length - 2].skipChildrenTotalCount += Math.min(childrenGroupInfoCount, skip + 1 - skipContinuationGroupCount * parentTakeCorrection)\r\n                        } else {\r\n                            skipChildrenTotalCount += Math.min(childrenGroupInfoCount, skip + 1)\r\n                        }\r\n                    }\r\n                    if (totalOffset <= options.skip + take) {\r\n                        groupInfoCount = Math.min(childrenGroupInfoCount, skip + take - (skipContinuationGroupCount + 1) * parentTakeCorrection);\r\n                        if (parents[parents.length - 2]) {\r\n                            parents[parents.length - 2].childrenTotalCount += groupInfoCount\r\n                        } else {\r\n                            childrenTotalCount += groupInfoCount\r\n                        }\r\n                    }\r\n                }));\r\n                options.skip -= skipChildrenTotalCount;\r\n                options.take -= childrenTotalCount - skipChildrenTotalCount\r\n            }\r\n            options.skips = skips;\r\n            options.takes = takes\r\n        },\r\n        changeRowExpand: function(path) {\r\n            var groupInfo = this.findGroupInfo(path);\r\n            var dataSource = this._dataSource;\r\n            var remoteGroupPaging = dataSource.remoteOperations().groupPaging;\r\n            var groups = dataGridCore.normalizeSortingInfo(dataSource.group());\r\n            if (groupInfo) {\r\n                groupInfo.isExpanded = !groupInfo.isExpanded;\r\n                if (remoteGroupPaging && groupInfo.isExpanded && path.length < groups.length) {\r\n                    return loadGroupTotalCount(dataSource, {\r\n                        filter: createGroupFilter(path, {\r\n                            filter: dataSource.lastLoadOptions().filter,\r\n                            group: dataSource.group()\r\n                        }),\r\n                        group: [groups[path.length]],\r\n                        select: dataSource.select()\r\n                    }).done((function(groupCount) {\r\n                        groupInfo.count = groupCount\r\n                    }))\r\n                }\r\n                return (new Deferred).resolve()\r\n            }\r\n            return (new Deferred).reject()\r\n        },\r\n        handleDataLoading: function(options) {\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var groups = dataGridCore.normalizeSortingInfo(storeLoadOptions.group || options.loadOptions.group);\r\n            if (options.isCustomLoading || !groups.length) {\r\n                return\r\n            }\r\n            if (options.remoteOperations.grouping) {\r\n                var remotePaging = this._dataSource.remoteOperations().paging;\r\n                storeLoadOptions.group = dataGridCore.normalizeSortingInfo(storeLoadOptions.group);\r\n                storeLoadOptions.group.forEach((function(group, index) {\r\n                    var isLastGroup = index === storeLoadOptions.group.length - 1;\r\n                    group.isExpanded = !remotePaging || !isLastGroup\r\n                }))\r\n            }\r\n            options.group = options.group || groups;\r\n            if (options.remoteOperations.paging) {\r\n                options.skip = storeLoadOptions.skip;\r\n                options.take = storeLoadOptions.take;\r\n                storeLoadOptions.requireGroupCount = true;\r\n                storeLoadOptions.group = groups.slice(0, 1);\r\n                this._updatePagingOptions(options);\r\n                storeLoadOptions.skip = options.skip;\r\n                storeLoadOptions.take = options.take\r\n            } else {\r\n                options.skip = options.loadOptions.skip;\r\n                options.take = options.loadOptions.take;\r\n                this._updatePagingOptions(options)\r\n            }\r\n        },\r\n        handleDataLoadedCore: function(options, callBase) {\r\n            var loadedGroupCount = dataGridCore.normalizeSortingInfo(options.storeLoadOptions.group || options.loadOptions.group).length;\r\n            var groupCount = options.group ? options.group.length : 0;\r\n            var totalCount;\r\n            var expandedInfo = {};\r\n            if (options.isCustomLoading) {\r\n                callBase(options);\r\n                processGroupItems(this, options.data, loadedGroupCount, expandedInfo, [], options.isCustomLoading, options.storeLoadOptions.isLoadingAll)\r\n            } else {\r\n                if (!options.remoteOperations.paging) {\r\n                    this.foreachGroups((function(groupInfo) {\r\n                        groupInfo.count = 0\r\n                    }))\r\n                }\r\n                totalCount = updateGroupInfos(this, options, options.data, loadedGroupCount);\r\n                if (totalCount < 0) {\r\n                    options.data = (new Deferred).reject(errors.Error(\"E1037\"));\r\n                    return\r\n                }\r\n                if (!options.remoteOperations.paging) {\r\n                    if (loadedGroupCount && options.extra && options.loadOptions.requireTotalCount) {\r\n                        options.extra.totalCount = totalCount;\r\n                        options.extra.groupCount = options.data.length\r\n                    }\r\n                }\r\n                if (groupCount && options.storeLoadOptions.requireGroupCount && !isFinite(options.extra.groupCount)) {\r\n                    options.data = (new Deferred).reject(dataErrors.Error(\"E4022\"));\r\n                    return\r\n                }\r\n                this.updateTotalItemsCount(options);\r\n                if (!options.remoteOperations.paging) {\r\n                    this._updatePagingOptions(options)\r\n                }\r\n                callBase(options);\r\n                if (!options.remoteOperations.paging) {\r\n                    this._processPaging(options, loadedGroupCount)\r\n                }\r\n            }\r\n            loadGroupItems(this, options, loadedGroupCount, expandedInfo, 0, options.data)\r\n        },\r\n        _processSkips: function(items, skips, groupCount) {\r\n            if (!groupCount) {\r\n                return\r\n            }\r\n            var firstItem = items[0];\r\n            var skip = skips[0];\r\n            var children = firstItem && firstItem.items;\r\n            if (void 0 !== skip) {\r\n                firstItem.isContinuation = true;\r\n                if (children) {\r\n                    firstItem.items = children.slice(skip);\r\n                    this._processSkips(firstItem.items, skips.slice(1), groupCount - 1)\r\n                }\r\n            }\r\n        },\r\n        _processTakes: function(items, skips, takes, groupCount, parents) {\r\n            if (!groupCount || !items) {\r\n                return\r\n            }\r\n            parents = parents || [];\r\n            var lastItem = items[items.length - 1];\r\n            var children = lastItem && lastItem.items;\r\n            var take = takes[0];\r\n            var skip = skips[0];\r\n            if (lastItem) {\r\n                var maxTakeCount = lastItem.count - (lastItem.isContinuation && skip || 0) || children.length;\r\n                if (void 0 !== take && maxTakeCount > take) {\r\n                    lastItem.isContinuationOnNextPage = true;\r\n                    parents.forEach((function(parent) {\r\n                        parent.isContinuationOnNextPage = true\r\n                    }));\r\n                    if (children) {\r\n                        children = children.slice(0, take);\r\n                        lastItem.items = children\r\n                    }\r\n                }\r\n                parents.push(lastItem);\r\n                this._processTakes(children, skips.slice(1), takes.slice(1), groupCount - 1, parents)\r\n            }\r\n        },\r\n        _processPaging: function(options, groupCount) {\r\n            this._processSkips(options.data, options.skips, groupCount);\r\n            this._processTakes(options.data, options.skips, options.takes, groupCount)\r\n        },\r\n        isLastLevelGroupItemsPagingLocal: function() {\r\n            return false\r\n        },\r\n        sortLastLevelGroupItems: function(items) {\r\n            return items\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var group = options.group || options.storeLoadOptions.group;\r\n            var oldGroups = dataGridCore.normalizeSortingInfo(that._group);\r\n            var isExpanded;\r\n            var groupIndex;\r\n\r\n            function handleGroup(groupInfo, parents) {\r\n                if (parents.length === groupIndex + 1) {\r\n                    groupInfo.isExpanded = isExpanded\r\n                }\r\n            }\r\n            for (groupIndex = 0; groupIndex < oldGroups.length; groupIndex++) {\r\n                isExpanded = isGroupExpanded(group, groupIndex);\r\n                if (isGroupExpanded(that._group, groupIndex) !== isExpanded) {\r\n                    that.foreachGroups(handleGroup)\r\n                }\r\n            }\r\n            that.callBase.apply(this, arguments);\r\n            if (group && options.remoteOperations.paging && operationTypes.reload) {\r\n                return foreachExpandedGroups(that, (function(groupInfo) {\r\n                    var groupCountQuery = loadGroupTotalCount(dataSource, {\r\n                        filter: createGroupFilter(groupInfo.path, {\r\n                            filter: storeLoadOptions.filter,\r\n                            group: group\r\n                        }),\r\n                        group: group.slice(groupInfo.path.length),\r\n                        select: storeLoadOptions.select\r\n                    });\r\n                    var groupOffsetQuery = loadGroupTotalCount(dataSource, {\r\n                        filter: createOffsetFilter(groupInfo.path, {\r\n                            filter: storeLoadOptions.filter,\r\n                            group: group\r\n                        }, true),\r\n                        group: group.slice(groupInfo.path.length - 1, groupInfo.path.length),\r\n                        select: storeLoadOptions.select\r\n                    });\r\n                    return when(groupOffsetQuery, groupCountQuery).done((function(offset, count) {\r\n                        offset = parseInt(offset.length ? offset[0] : offset);\r\n                        count = parseInt(count.length ? count[0] : count);\r\n                        groupInfo.offset = offset;\r\n                        if (groupInfo.count !== count) {\r\n                            groupInfo.count = count;\r\n                            that.updateTotalItemsCount(options)\r\n                        }\r\n                    }))\r\n                }), true)\r\n            }\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grouping.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    GroupingHelper as ExpandedGroupingHelper\r\n} from \"./ui.data_grid.grouping.expanded\";\r\nimport {\r\n    GroupingHelper as CollapsedGroupingHelper\r\n} from \"./ui.data_grid.grouping.collapsed\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport dataSourceAdapter from \"./ui.data_grid.data_source_adapter\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport devices from \"../../core/devices\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    registerKeyboardAction\r\n} from \"../grid_core/ui.grid_core.accessibility\";\r\nimport {\r\n    setTabIndex,\r\n    restoreFocus\r\n} from \"../shared/accessibility\";\r\nvar DATAGRID_GROUP_PANEL_CLASS = \"dx-datagrid-group-panel\";\r\nvar DATAGRID_GROUP_PANEL_MESSAGE_CLASS = \"dx-group-panel-message\";\r\nvar DATAGRID_GROUP_PANEL_ITEM_CLASS = \"dx-group-panel-item\";\r\nvar DATAGRID_GROUP_PANEL_LABEL_CLASS = \"dx-toolbar-label\";\r\nvar DATAGRID_EXPAND_CLASS = \"dx-datagrid-expand\";\r\nvar DATAGRID_GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar HEADER_FILTER_CLASS_SELECTOR = \".dx-header-filter\";\r\nvar GroupingDataSourceAdapterExtender = {\r\n    init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._initGroupingHelper()\r\n    },\r\n    _initGroupingHelper: function(options) {\r\n        var grouping = this._grouping;\r\n        var isAutoExpandAll = this.option(\"grouping.autoExpandAll\");\r\n        var isFocusedRowEnabled = this.option(\"focusedRowEnabled\");\r\n        var remoteOperations = options ? options.remoteOperations : this.remoteOperations();\r\n        var isODataRemoteOperations = remoteOperations.filtering && remoteOperations.sorting && remoteOperations.paging;\r\n        if (isODataRemoteOperations && !remoteOperations.grouping && (isAutoExpandAll || !isFocusedRowEnabled)) {\r\n            if (!grouping || grouping instanceof CollapsedGroupingHelper) {\r\n                this._grouping = new ExpandedGroupingHelper(this)\r\n            }\r\n        } else if (!grouping || grouping instanceof ExpandedGroupingHelper) {\r\n            this._grouping = new CollapsedGroupingHelper(this)\r\n        }\r\n    },\r\n    totalItemsCount: function() {\r\n        var totalCount = this.callBase();\r\n        return totalCount > 0 && this._dataSource.group() && this._dataSource.requireTotalCount() ? totalCount + this._grouping.totalCountCorrection() : totalCount\r\n    },\r\n    itemsCount: function() {\r\n        return this._dataSource.group() ? this._grouping.itemsCount() || 0 : this.callBase.apply(this, arguments)\r\n    },\r\n    allowCollapseAll: function() {\r\n        return this._grouping.allowCollapseAll()\r\n    },\r\n    isGroupItemCountable: function(item) {\r\n        return this._grouping.isGroupItemCountable(item)\r\n    },\r\n    isRowExpanded: function(key) {\r\n        var groupInfo = this._grouping.findGroupInfo(key);\r\n        return groupInfo ? groupInfo.isExpanded : !this._grouping.allowCollapseAll()\r\n    },\r\n    collapseAll: function(groupIndex) {\r\n        return this._collapseExpandAll(groupIndex, false)\r\n    },\r\n    expandAll: function(groupIndex) {\r\n        return this._collapseExpandAll(groupIndex, true)\r\n    },\r\n    _collapseExpandAll: function(groupIndex, isExpand) {\r\n        var dataSource = this._dataSource;\r\n        var group = dataSource.group();\r\n        var groups = gridCore.normalizeSortingInfo(group || []);\r\n        if (groups.length) {\r\n            for (var i = 0; i < groups.length; i++) {\r\n                if (void 0 === groupIndex || groupIndex === i) {\r\n                    groups[i].isExpanded = isExpand\r\n                } else if (group && group[i]) {\r\n                    groups[i].isExpanded = group[i].isExpanded\r\n                }\r\n            }\r\n            dataSource.group(groups);\r\n            this._grouping.foreachGroups((function(groupInfo, parents) {\r\n                if (void 0 === groupIndex || groupIndex === parents.length - 1) {\r\n                    groupInfo.isExpanded = isExpand\r\n                }\r\n            }), false, true);\r\n            this.resetPagesCache()\r\n        }\r\n        return true\r\n    },\r\n    refresh: function() {\r\n        this.callBase.apply(this, arguments);\r\n        return this._grouping.refresh.apply(this._grouping, arguments)\r\n    },\r\n    changeRowExpand: function(path) {\r\n        var dataSource = this._dataSource;\r\n        if (dataSource.group()) {\r\n            dataSource.beginLoading();\r\n            if (this._lastLoadOptions) {\r\n                this._lastLoadOptions.groupExpand = true\r\n            }\r\n            return this._changeRowExpandCore(path).always((function() {\r\n                dataSource.endLoading()\r\n            }))\r\n        }\r\n    },\r\n    _changeRowExpandCore: function(path) {\r\n        return this._grouping.changeRowExpand(path)\r\n    },\r\n    _hasGroupLevelsExpandState: function(group, isExpanded) {\r\n        if (group && Array.isArray(group)) {\r\n            for (var i = 0; i < group.length; i++) {\r\n                if (group[i].isExpanded === isExpanded) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _customizeRemoteOperations: function(options, operationTypes) {\r\n        var remoteOperations = options.remoteOperations;\r\n        if (options.storeLoadOptions.group) {\r\n            if (remoteOperations.grouping && !options.isCustomLoading) {\r\n                if (!remoteOperations.groupPaging || this._hasGroupLevelsExpandState(options.storeLoadOptions.group, true)) {\r\n                    remoteOperations.paging = false\r\n                }\r\n            }\r\n            if (!remoteOperations.grouping && (!remoteOperations.sorting || !remoteOperations.filtering || options.isCustomLoading || this._hasGroupLevelsExpandState(options.storeLoadOptions.group, false))) {\r\n                remoteOperations.paging = false\r\n            }\r\n        } else if (!options.isCustomLoading && remoteOperations.paging && operationTypes.grouping) {\r\n            this.resetCache()\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _handleDataLoading: function(options) {\r\n        this.callBase(options);\r\n        this._initGroupingHelper(options);\r\n        return this._grouping.handleDataLoading(options)\r\n    },\r\n    _handleDataLoaded: function(options) {\r\n        return this._grouping.handleDataLoaded(options, this.callBase.bind(this))\r\n    },\r\n    _handleDataLoadedCore: function(options) {\r\n        return this._grouping.handleDataLoadedCore(options, this.callBase.bind(this))\r\n    }\r\n};\r\ndataSourceAdapter.extend(GroupingDataSourceAdapterExtender);\r\nvar GroupingDataControllerExtender = {\r\n    init: function() {\r\n        this.callBase();\r\n        this.createAction(\"onRowExpanding\");\r\n        this.createAction(\"onRowExpanded\");\r\n        this.createAction(\"onRowCollapsing\");\r\n        this.createAction(\"onRowCollapsed\")\r\n    },\r\n    _beforeProcessItems: function(items) {\r\n        var groupColumns = this._columnsController.getGroupColumns();\r\n        items = this.callBase(items);\r\n        if (items.length && groupColumns.length) {\r\n            items = this._processGroupItems(items, groupColumns.length)\r\n        }\r\n        return items\r\n    },\r\n    _processItem: function(item, options) {\r\n        if (isDefined(item.groupIndex) && isString(item.rowType) && 0 === item.rowType.indexOf(\"group\")) {\r\n            item = this._processGroupItem(item, options);\r\n            options.dataIndex = 0\r\n        } else {\r\n            item = this.callBase.apply(this, arguments)\r\n        }\r\n        return item\r\n    },\r\n    _processGroupItem: function(item) {\r\n        return item\r\n    },\r\n    _processGroupItems: function(items, groupsCount, options) {\r\n        var groupedColumns = this._columnsController.getGroupColumns();\r\n        var column = groupedColumns[groupedColumns.length - groupsCount];\r\n        if (!options) {\r\n            var scrollingMode = this.option(\"scrolling.mode\");\r\n            options = {\r\n                collectContinuationItems: \"virtual\" !== scrollingMode && \"infinite\" !== scrollingMode,\r\n                resultItems: [],\r\n                path: [],\r\n                values: []\r\n            }\r\n        }\r\n        var resultItems = options.resultItems;\r\n        if (options.data) {\r\n            if (options.collectContinuationItems || !options.data.isContinuation) {\r\n                resultItems.push({\r\n                    rowType: \"group\",\r\n                    data: options.data,\r\n                    groupIndex: options.path.length - 1,\r\n                    isExpanded: !!options.data.items,\r\n                    key: options.path.slice(0),\r\n                    values: options.values.slice(0)\r\n                })\r\n            }\r\n        }\r\n        if (items) {\r\n            if (0 === groupsCount) {\r\n                resultItems.push.apply(resultItems, items)\r\n            } else {\r\n                for (var i = 0; i < items.length; i++) {\r\n                    var item = items[i];\r\n                    if (item && \"items\" in item) {\r\n                        options.data = item;\r\n                        options.path.push(item.key);\r\n                        options.values.push(column && column.deserializeValue && !column.calculateDisplayValue ? column.deserializeValue(item.key) : item.key);\r\n                        this._processGroupItems(item.items, groupsCount - 1, options);\r\n                        options.data = void 0;\r\n                        options.path.pop();\r\n                        options.values.pop()\r\n                    } else {\r\n                        resultItems.push(item)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return resultItems\r\n    },\r\n    publicMethods: function() {\r\n        return this.callBase().concat([\"collapseAll\", \"expandAll\", \"isRowExpanded\", \"expandRow\", \"collapseRow\"])\r\n    },\r\n    collapseAll: function(groupIndex) {\r\n        var dataSource = this._dataSource;\r\n        if (dataSource && dataSource.collapseAll(groupIndex)) {\r\n            dataSource.pageIndex(0);\r\n            dataSource.reload()\r\n        }\r\n    },\r\n    expandAll: function(groupIndex) {\r\n        var dataSource = this._dataSource;\r\n        if (dataSource && dataSource.expandAll(groupIndex)) {\r\n            dataSource.pageIndex(0);\r\n            dataSource.reload()\r\n        }\r\n    },\r\n    changeRowExpand: function(key) {\r\n        var that = this;\r\n        var expanded = that.isRowExpanded(key);\r\n        var args = {\r\n            key: key,\r\n            expanded: expanded\r\n        };\r\n        that.executeAction(expanded ? \"onRowCollapsing\" : \"onRowExpanding\", args);\r\n        if (!args.cancel) {\r\n            return when(that._changeRowExpandCore(key)).done((function() {\r\n                args.expanded = !expanded;\r\n                that.executeAction(expanded ? \"onRowCollapsed\" : \"onRowExpanded\", args)\r\n            }))\r\n        }\r\n        return (new Deferred).resolve()\r\n    },\r\n    _changeRowExpandCore: function(key) {\r\n        var that = this;\r\n        var dataSource = this._dataSource;\r\n        var d = new Deferred;\r\n        if (!dataSource) {\r\n            d.resolve()\r\n        } else {\r\n            when(dataSource.changeRowExpand(key)).done((function() {\r\n                that.load().done(d.resolve).fail(d.reject)\r\n            })).fail(d.reject)\r\n        }\r\n        return d\r\n    },\r\n    isRowExpanded: function(key) {\r\n        var dataSource = this._dataSource;\r\n        return dataSource && dataSource.isRowExpanded(key)\r\n    },\r\n    expandRow: function(key) {\r\n        if (!this.isRowExpanded(key)) {\r\n            return this.changeRowExpand(key)\r\n        }\r\n        return (new Deferred).resolve()\r\n    },\r\n    collapseRow: function(key) {\r\n        if (this.isRowExpanded(key)) {\r\n            return this.changeRowExpand(key)\r\n        }\r\n        return (new Deferred).resolve()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"grouping\" === args.name) {\r\n            args.name = \"dataSource\"\r\n        }\r\n        this.callBase(args)\r\n    }\r\n};\r\nvar onGroupingMenuItemClick = function(column, params) {\r\n    var columnsController = this._columnsController;\r\n    switch (params.itemData.value) {\r\n        case \"group\":\r\n            var groups = columnsController._dataSource.group() || [];\r\n            columnsController.columnOption(column.dataField, \"groupIndex\", groups.length);\r\n            break;\r\n        case \"ungroup\":\r\n            columnsController.columnOption(column.dataField, \"groupIndex\", -1);\r\n            break;\r\n        case \"ungroupAll\":\r\n            this.component.clearGrouping()\r\n    }\r\n};\r\nexport var GroupingHeaderPanelExtender = {\r\n    _getToolbarItems: function() {\r\n        var items = this.callBase();\r\n        return this._appendGroupingItem(items)\r\n    },\r\n    _appendGroupingItem: function(items) {\r\n        if (this._isGroupPanelVisible()) {\r\n            var isRendered = false;\r\n            var toolbarItem = {\r\n                template: () => {\r\n                    var $groupPanel = $(\"<div>\").addClass(DATAGRID_GROUP_PANEL_CLASS);\r\n                    this._updateGroupPanelContent($groupPanel);\r\n                    registerKeyboardAction(\"groupPanel\", this, $groupPanel, void 0, this._handleActionKeyDown.bind(this));\r\n                    return $groupPanel\r\n                },\r\n                name: \"groupPanel\",\r\n                onItemRendered: () => {\r\n                    isRendered && this.renderCompleted.fire();\r\n                    isRendered = true\r\n                },\r\n                location: \"before\",\r\n                locateInMenu: \"never\",\r\n                sortIndex: 1\r\n            };\r\n            items.push(toolbarItem)\r\n        }\r\n        return items\r\n    },\r\n    _handleActionKeyDown: function(args) {\r\n        var event = args.event;\r\n        var $target = $(event.target);\r\n        var groupColumnIndex = $target.closest(\".\".concat(DATAGRID_GROUP_PANEL_ITEM_CLASS)).index();\r\n        var column = this._columnsController.getGroupColumns()[groupColumnIndex];\r\n        var columnIndex = column && column.index;\r\n        if ($target.is(HEADER_FILTER_CLASS_SELECTOR)) {\r\n            this.getController(\"headerFilter\").showHeaderFilterMenu(columnIndex, true)\r\n        } else {\r\n            this._processGroupItemAction(columnIndex)\r\n        }\r\n        event.preventDefault()\r\n    },\r\n    _isGroupPanelVisible: function() {\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        var isVisible;\r\n        if (groupPanelOptions) {\r\n            isVisible = groupPanelOptions.visible;\r\n            if (\"auto\" === isVisible) {\r\n                isVisible = \"desktop\" === devices.current().deviceType ? true : false\r\n            }\r\n        }\r\n        return isVisible\r\n    },\r\n    _renderGroupPanelItems: function($groupPanel, groupColumns) {\r\n        var that = this;\r\n        $groupPanel.empty();\r\n        each(groupColumns, (function(index, groupColumn) {\r\n            that._createGroupPanelItem($groupPanel, groupColumn)\r\n        }));\r\n        restoreFocus(this)\r\n    },\r\n    _createGroupPanelItem: function($rootElement, groupColumn) {\r\n        var $groupPanelItem = $(\"<div>\").addClass(groupColumn.cssClass).addClass(DATAGRID_GROUP_PANEL_ITEM_CLASS).data(\"columnData\", groupColumn).appendTo($rootElement).text(groupColumn.caption);\r\n        setTabIndex(this, $groupPanelItem);\r\n        return $groupPanelItem\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        if (!this._requireReady && !gridCore.checkChanges(e.optionNames, [\"width\", \"visibleWidth\"])) {\r\n            var $toolbarElement = this.element();\r\n            var $groupPanel = $toolbarElement && $toolbarElement.find(\".\" + DATAGRID_GROUP_PANEL_CLASS);\r\n            if ($groupPanel && $groupPanel.length) {\r\n                this._updateGroupPanelContent($groupPanel);\r\n                this.renderCompleted.fire()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    _updateGroupPanelContent: function($groupPanel) {\r\n        var groupColumns = this.getController(\"columns\").getGroupColumns();\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        this._renderGroupPanelItems($groupPanel, groupColumns);\r\n        if (groupPanelOptions.allowColumnDragging && !groupColumns.length) {\r\n            $(\"<div>\").addClass(DATAGRID_GROUP_PANEL_MESSAGE_CLASS).text(groupPanelOptions.emptyPanelText).appendTo($groupPanel);\r\n            $groupPanel.closest(\".\" + DATAGRID_GROUP_PANEL_LABEL_CLASS).css(\"maxWidth\", \"none\");\r\n            this.updateToolbarDimensions()\r\n        }\r\n    },\r\n    allowDragging: function(column) {\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        return this._isGroupPanelVisible() && groupPanelOptions.allowColumnDragging && column && column.allowGrouping\r\n    },\r\n    getColumnElements: function() {\r\n        var $element = this.element();\r\n        return $element && $element.find(\".\" + DATAGRID_GROUP_PANEL_ITEM_CLASS)\r\n    },\r\n    getColumns: function() {\r\n        return this.getController(\"columns\").getGroupColumns()\r\n    },\r\n    getBoundingRect: function() {\r\n        var $element = this.element();\r\n        if ($element && $element.find(\".\" + DATAGRID_GROUP_PANEL_CLASS).length) {\r\n            var offset = $element.offset();\r\n            return {\r\n                top: offset.top,\r\n                bottom: offset.top + getHeight($element)\r\n            }\r\n        }\r\n        return null\r\n    },\r\n    getName: function() {\r\n        return \"group\"\r\n    },\r\n    getContextMenuItems: function(options) {\r\n        var contextMenuEnabled = this.option(\"grouping.contextMenuEnabled\");\r\n        var $groupedColumnElement = $(options.targetElement).closest(\".\" + DATAGRID_GROUP_PANEL_ITEM_CLASS);\r\n        var items;\r\n        if ($groupedColumnElement.length) {\r\n            options.column = $groupedColumnElement.data(\"columnData\")\r\n        }\r\n        if (contextMenuEnabled && options.column) {\r\n            var column = options.column;\r\n            var isGroupingAllowed = isDefined(column.allowGrouping) ? column.allowGrouping : true;\r\n            if (isGroupingAllowed) {\r\n                var isColumnGrouped = isDefined(column.groupIndex) && column.groupIndex > -1;\r\n                var groupingTexts = this.option(\"grouping.texts\");\r\n                var onItemClick = onGroupingMenuItemClick.bind(this, column);\r\n                items = [{\r\n                    text: groupingTexts.ungroup,\r\n                    value: \"ungroup\",\r\n                    disabled: !isColumnGrouped,\r\n                    onItemClick: onItemClick\r\n                }, {\r\n                    text: groupingTexts.ungroupAll,\r\n                    value: \"ungroupAll\",\r\n                    onItemClick: onItemClick\r\n                }]\r\n            }\r\n        }\r\n        return items\r\n    },\r\n    isVisible: function() {\r\n        return this.callBase() || this._isGroupPanelVisible()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"groupPanel\" === args.name) {\r\n            this._invalidate();\r\n            args.handled = true\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    }\r\n};\r\nvar GroupingRowsViewExtender = {\r\n    getContextMenuItems: function(options) {\r\n        var contextMenuEnabled = this.option(\"grouping.contextMenuEnabled\");\r\n        var items;\r\n        if (contextMenuEnabled && options.row && \"group\" === options.row.rowType) {\r\n            var columnsController = this._columnsController;\r\n            var column = columnsController.columnOption(\"groupIndex:\" + options.row.groupIndex);\r\n            if (column && column.allowGrouping) {\r\n                var groupingTexts = this.option(\"grouping.texts\");\r\n                var onItemClick = onGroupingMenuItemClick.bind(this, column);\r\n                items = [];\r\n                items.push({\r\n                    text: groupingTexts.ungroup,\r\n                    value: \"ungroup\",\r\n                    onItemClick: onItemClick\r\n                }, {\r\n                    text: groupingTexts.ungroupAll,\r\n                    value: \"ungroupAll\",\r\n                    onItemClick: onItemClick\r\n                })\r\n            }\r\n        }\r\n        return items\r\n    },\r\n    _rowClick: function(e) {\r\n        var expandMode = this.option(\"grouping.expandMode\");\r\n        var scrollingMode = this.option(\"scrolling.mode\");\r\n        var isGroupRowStateChanged = \"infinite\" !== scrollingMode && \"rowClick\" === expandMode && $(e.event.target).closest(\".\" + DATAGRID_GROUP_ROW_CLASS).length;\r\n        var isExpandButtonClicked = $(e.event.target).closest(\".\" + DATAGRID_EXPAND_CLASS).length;\r\n        if (isGroupRowStateChanged || isExpandButtonClicked) {\r\n            this._changeGroupRowState(e)\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _changeGroupRowState: function(e) {\r\n        var dataController = this.getController(\"data\");\r\n        var row = dataController.items()[e.rowIndex];\r\n        var allowCollapsing = this._columnsController.columnOption(\"groupIndex:\" + row.groupIndex, \"allowCollapsing\");\r\n        if (\"data\" === row.rowType || \"group\" === row.rowType && false !== allowCollapsing) {\r\n            dataController.changeRowExpand(row.key, true);\r\n            e.event.preventDefault();\r\n            e.handled = true\r\n        }\r\n    }\r\n};\r\nvar columnHeadersViewExtender = {\r\n    getContextMenuItems: function(options) {\r\n        var contextMenuEnabled = this.option(\"grouping.contextMenuEnabled\");\r\n        var items = this.callBase(options);\r\n        if (contextMenuEnabled && options.row && (\"header\" === options.row.rowType || \"detailAdaptive\" === options.row.rowType)) {\r\n            var column = options.column;\r\n            if (!column.command && (!isDefined(column.allowGrouping) || column.allowGrouping)) {\r\n                var groupingTexts = this.option(\"grouping.texts\");\r\n                var isColumnGrouped = isDefined(column.groupIndex) && column.groupIndex > -1;\r\n                var onItemClick = onGroupingMenuItemClick.bind(this, column);\r\n                items = items || [];\r\n                items.push({\r\n                    text: groupingTexts.groupByThisColumn,\r\n                    value: \"group\",\r\n                    beginGroup: true,\r\n                    disabled: isColumnGrouped,\r\n                    onItemClick: onItemClick\r\n                });\r\n                if (column.showWhenGrouped) {\r\n                    items.push({\r\n                        text: groupingTexts.ungroup,\r\n                        value: \"ungroup\",\r\n                        disabled: !isColumnGrouped,\r\n                        onItemClick: onItemClick\r\n                    })\r\n                }\r\n                items.push({\r\n                    text: groupingTexts.ungroupAll,\r\n                    value: \"ungroupAll\",\r\n                    onItemClick: onItemClick\r\n                })\r\n            }\r\n        }\r\n        return items\r\n    }\r\n};\r\ngridCore.registerModule(\"grouping\", {\r\n    defaultOptions: function() {\r\n        return {\r\n            grouping: {\r\n                autoExpandAll: true,\r\n                allowCollapsing: true,\r\n                contextMenuEnabled: false,\r\n                expandMode: \"buttonClick\",\r\n                texts: {\r\n                    groupContinuesMessage: messageLocalization.format(\"dxDataGrid-groupContinuesMessage\"),\r\n                    groupContinuedMessage: messageLocalization.format(\"dxDataGrid-groupContinuedMessage\"),\r\n                    groupByThisColumn: messageLocalization.format(\"dxDataGrid-groupHeaderText\"),\r\n                    ungroup: messageLocalization.format(\"dxDataGrid-ungroupHeaderText\"),\r\n                    ungroupAll: messageLocalization.format(\"dxDataGrid-ungroupAllText\")\r\n                }\r\n            },\r\n            groupPanel: {\r\n                visible: false,\r\n                emptyPanelText: messageLocalization.format(\"dxDataGrid-groupPanelEmptyText\"),\r\n                allowColumnDragging: true\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: GroupingDataControllerExtender,\r\n            columns: {\r\n                _getExpandColumnOptions: function() {\r\n                    var options = this.callBase.apply(this, arguments);\r\n                    options.cellTemplate = gridCore.getExpandCellTemplate();\r\n                    return options\r\n                }\r\n            },\r\n            editing: {\r\n                _isProcessedItem: function(item) {\r\n                    return isDefined(item.groupIndex) && isString(item.rowType) && 0 === item.rowType.indexOf(\"group\")\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            headerPanel: GroupingHeaderPanelExtender,\r\n            rowsView: GroupingRowsViewExtender,\r\n            columnHeadersView: columnHeadersViewExtender\r\n        }\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.master_detail.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    grep\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar MASTER_DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar ROW_LINES_CLASS = \"dx-row-lines\";\r\nexport var masterDetailModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            masterDetail: {\r\n                enabled: false,\r\n                autoExpandAll: false,\r\n                template: null\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            columns: {\r\n                _getExpandColumnsCore: function() {\r\n                    var expandColumns = this.callBase();\r\n                    if (this.option(\"masterDetail.enabled\")) {\r\n                        expandColumns.push({\r\n                            type: \"detailExpand\",\r\n                            cellTemplate: gridCoreUtils.getExpandCellTemplate()\r\n                        })\r\n                    }\r\n                    return expandColumns\r\n                }\r\n            },\r\n            data: function() {\r\n                var initMasterDetail = function(that) {\r\n                    that._expandedItems = [];\r\n                    that._isExpandAll = that.option(\"masterDetail.autoExpandAll\")\r\n                };\r\n                return {\r\n                    init: function() {\r\n                        initMasterDetail(this);\r\n                        this.callBase()\r\n                    },\r\n                    expandAll: function(groupIndex) {\r\n                        var that = this;\r\n                        if (groupIndex < 0) {\r\n                            that._isExpandAll = true;\r\n                            that._expandedItems = [];\r\n                            that.updateItems()\r\n                        } else {\r\n                            that.callBase.apply(that, arguments)\r\n                        }\r\n                    },\r\n                    collapseAll: function(groupIndex) {\r\n                        var that = this;\r\n                        if (groupIndex < 0) {\r\n                            that._isExpandAll = false;\r\n                            that._expandedItems = [];\r\n                            that.updateItems()\r\n                        } else {\r\n                            that.callBase.apply(that, arguments)\r\n                        }\r\n                    },\r\n                    isRowExpanded: function(key) {\r\n                        var that = this;\r\n                        var expandIndex = gridCoreUtils.getIndexByKey(key, that._expandedItems);\r\n                        if (Array.isArray(key)) {\r\n                            return that.callBase.apply(that, arguments)\r\n                        } else {\r\n                            return !!(that._isExpandAll ^ (expandIndex >= 0 && that._expandedItems[expandIndex].visible))\r\n                        }\r\n                    },\r\n                    _getRowIndicesForExpand: function(key) {\r\n                        var rowIndex = this.getRowIndexByKey(key);\r\n                        return [rowIndex, rowIndex + 1]\r\n                    },\r\n                    _changeRowExpandCore: function(key) {\r\n                        var that = this;\r\n                        var result;\r\n                        if (Array.isArray(key)) {\r\n                            result = that.callBase.apply(that, arguments)\r\n                        } else {\r\n                            var expandIndex = gridCoreUtils.getIndexByKey(key, that._expandedItems);\r\n                            if (expandIndex >= 0) {\r\n                                var visible = that._expandedItems[expandIndex].visible;\r\n                                that._expandedItems[expandIndex].visible = !visible\r\n                            } else {\r\n                                that._expandedItems.push({\r\n                                    key: key,\r\n                                    visible: true\r\n                                })\r\n                            }\r\n                            that.updateItems({\r\n                                changeType: \"update\",\r\n                                rowIndices: that._getRowIndicesForExpand(key)\r\n                            });\r\n                            result = (new Deferred).resolve()\r\n                        }\r\n                        return result\r\n                    },\r\n                    _processDataItem: function(data, options) {\r\n                        var that = this;\r\n                        var dataItem = that.callBase.apply(that, arguments);\r\n                        dataItem.isExpanded = that.isRowExpanded(dataItem.key);\r\n                        if (void 0 === options.detailColumnIndex) {\r\n                            options.detailColumnIndex = -1;\r\n                            each(options.visibleColumns, (function(index, column) {\r\n                                if (\"expand\" === column.command && !isDefined(column.groupIndex)) {\r\n                                    options.detailColumnIndex = index;\r\n                                    return false\r\n                                }\r\n                            }))\r\n                        }\r\n                        if (options.detailColumnIndex >= 0) {\r\n                            dataItem.values[options.detailColumnIndex] = dataItem.isExpanded\r\n                        }\r\n                        return dataItem\r\n                    },\r\n                    _processItems: function(items, change) {\r\n                        var that = this;\r\n                        var changeType = change.changeType;\r\n                        var result = [];\r\n                        items = that.callBase.apply(that, arguments);\r\n                        if (\"loadingAll\" === changeType) {\r\n                            return items\r\n                        }\r\n                        if (\"refresh\" === changeType) {\r\n                            that._expandedItems = grep(that._expandedItems, (function(item) {\r\n                                return item.visible\r\n                            }))\r\n                        }\r\n                        each(items, (function(index, item) {\r\n                            result.push(item);\r\n                            var expandIndex = gridCoreUtils.getIndexByKey(item.key, that._expandedItems);\r\n                            if (\"data\" === item.rowType && (item.isExpanded || expandIndex >= 0) && !item.isNewRow) {\r\n                                result.push({\r\n                                    visible: item.isExpanded,\r\n                                    rowType: \"detail\",\r\n                                    key: item.key,\r\n                                    data: item.data,\r\n                                    values: []\r\n                                })\r\n                            }\r\n                        }));\r\n                        return result\r\n                    },\r\n                    optionChanged: function(args) {\r\n                        var isEnabledChanged;\r\n                        var isAutoExpandAllChanged;\r\n                        if (\"masterDetail\" === args.name) {\r\n                            args.name = \"dataSource\";\r\n                            switch (args.fullName) {\r\n                                case \"masterDetail\":\r\n                                    var value = args.value || {};\r\n                                    var previousValue = args.previousValue || {};\r\n                                    isEnabledChanged = value.enabled !== previousValue.enabled;\r\n                                    isAutoExpandAllChanged = value.autoExpandAll !== previousValue.autoExpandAll;\r\n                                    break;\r\n                                case \"masterDetail.template\":\r\n                                    initMasterDetail(this);\r\n                                    break;\r\n                                case \"masterDetail.enabled\":\r\n                                    isEnabledChanged = true;\r\n                                    break;\r\n                                case \"masterDetail.autoExpandAll\":\r\n                                    isAutoExpandAllChanged = true\r\n                            }\r\n                            if (isEnabledChanged || isAutoExpandAllChanged) {\r\n                                initMasterDetail(this)\r\n                            }\r\n                        }\r\n                        this.callBase(args)\r\n                    }\r\n                }\r\n            }(),\r\n            resizing: {\r\n                fireContentReadyAction: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._updateParentDataGrids(this.component.$element())\r\n                },\r\n                _updateParentDataGrids: function($element) {\r\n                    var $masterDetailRow = $element.closest(\".\" + MASTER_DETAIL_ROW_CLASS);\r\n                    if ($masterDetailRow.length) {\r\n                        when(this._updateMasterDataGrid($masterDetailRow, $element)).done(() => {\r\n                            this._updateParentDataGrids($masterDetailRow.parent())\r\n                        })\r\n                    }\r\n                },\r\n                _updateMasterDataGrid: function($masterDetailRow, $detailElement) {\r\n                    var masterRowOptions = $($masterDetailRow).data(\"options\");\r\n                    var masterDataGrid = $($masterDetailRow).closest(\".\" + this.getWidgetContainerClass()).parent().data(\"dxDataGrid\");\r\n                    if (masterRowOptions && masterDataGrid) {\r\n                        if (masterDataGrid.getView(\"rowsView\").isFixedColumns()) {\r\n                            return this._updateFixedMasterDetailGrids(masterDataGrid, masterRowOptions.rowIndex, $detailElement)\r\n                        } else {\r\n                            if (true === masterDataGrid.option(\"scrolling.useNative\")) {\r\n                                return masterDataGrid.updateDimensions()\r\n                            }\r\n                            var scrollable = masterDataGrid.getScrollable();\r\n                            return null === scrollable || void 0 === scrollable ? void 0 : scrollable.update()\r\n                        }\r\n                    }\r\n                },\r\n                _updateFixedMasterDetailGrids: function(masterDataGrid, masterRowIndex, $detailElement) {\r\n                    var $rows = $(masterDataGrid.getRowElement(masterRowIndex));\r\n                    var $tables = $(masterDataGrid.getView(\"rowsView\").getTableElements());\r\n                    var rowsNotEqual = 2 === (null === $rows || void 0 === $rows ? void 0 : $rows.length) && getHeight($rows.eq(0)) !== getHeight($rows.eq(1));\r\n                    var tablesNotEqual = 2 === (null === $tables || void 0 === $tables ? void 0 : $tables.length) && getHeight($tables.eq(0)) !== getHeight($tables.eq(1));\r\n                    if (rowsNotEqual || tablesNotEqual) {\r\n                        var detailElementWidth = getWidth($detailElement);\r\n                        return masterDataGrid.updateDimensions().done(() => {\r\n                            var isDetailHorizontalScrollCanBeShown = this.option(\"columnAutoWidth\") && true === masterDataGrid.option(\"scrolling.useNative\");\r\n                            var isDetailGridWidthChanged = isDetailHorizontalScrollCanBeShown && detailElementWidth !== getWidth($detailElement);\r\n                            if (isDetailHorizontalScrollCanBeShown && isDetailGridWidthChanged) {\r\n                                this.updateDimensions()\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                _toggleBestFitMode: function(isBestFit) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.option(\"masterDetail.template\")) {\r\n                        var $rowsTable = this._rowsView.getTableElement();\r\n                        if ($rowsTable) {\r\n                            $rowsTable.find(\".dx-master-detail-cell\").css(\"maxWidth\", isBestFit ? 0 : \"\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _getCellTemplate: function(options) {\r\n                    var that = this;\r\n                    var column = options.column;\r\n                    var editingController = that.getController(\"editing\");\r\n                    var isEditRow = editingController && editingController.isEditRow(options.rowIndex);\r\n                    var template;\r\n                    if (\"detail\" === column.command && !isEditRow) {\r\n                        template = that.option(\"masterDetail.template\") || {\r\n                            allowRenderToDetachedContainer: false,\r\n                            render: that._getDefaultTemplate(column)\r\n                        }\r\n                    } else {\r\n                        template = that.callBase.apply(that, arguments)\r\n                    }\r\n                    return template\r\n                },\r\n                _isDetailRow: function(row) {\r\n                    return row && row.rowType && 0 === row.rowType.indexOf(\"detail\")\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row && this._isDetailRow(row)) {\r\n                        this.option(\"showRowLines\") && $row.addClass(ROW_LINES_CLASS);\r\n                        $row.addClass(MASTER_DETAIL_ROW_CLASS);\r\n                        if (isDefined(row.visible)) {\r\n                            $row.toggle(row.visible)\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _renderCells: function($row, options) {\r\n                    var row = options.row;\r\n                    var $detailCell;\r\n                    var visibleColumns = this._columnsController.getVisibleColumns();\r\n                    if (row.rowType && this._isDetailRow(row)) {\r\n                        if (this._needRenderCell(0, options.columnIndices)) {\r\n                            $detailCell = this._renderCell($row, {\r\n                                value: null,\r\n                                row: row,\r\n                                rowIndex: row.rowIndex,\r\n                                column: {\r\n                                    command: \"detail\"\r\n                                },\r\n                                columnIndex: 0\r\n                            });\r\n                            $detailCell.addClass(CELL_FOCUS_DISABLED_CLASS).addClass(MASTER_DETAIL_CELL_CLASS).attr(\"colSpan\", visibleColumns.length)\r\n                        }\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.master_detail.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    masterDetailModule\r\n} from \"../grid_core/ui.grid_core.master_detail\";\r\ngridCore.registerModule(\"masterDetail\", masterDetailModule);\r\n","/**\r\n * DevExtreme (esm/ui/shared/ui.editor_factory_mixin.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDefined,\r\n    isObject,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport devices from \"../../core/devices\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    normalizeDataSourceOptions\r\n} from \"../../data/data_source/utils\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nvar {\r\n    isWrapped: isWrapped\r\n} = variableWrapper;\r\nimport \"../text_box\";\r\nimport \"../number_box\";\r\nimport \"../check_box\";\r\nimport \"../select_box\";\r\nimport \"../date_box\";\r\nvar CHECKBOX_SIZE_CLASS = \"checkbox-size\";\r\nvar EDITOR_INLINE_BLOCK = \"dx-editor-inline-block\";\r\nvar EditorFactoryMixin = function() {\r\n    var getResultConfig = function(config, options) {\r\n        return extend(config, {\r\n            readOnly: options.readOnly,\r\n            placeholder: options.placeholder,\r\n            inputAttr: {\r\n                id: options.id\r\n            },\r\n            tabIndex: options.tabIndex\r\n        }, options.editorOptions)\r\n    };\r\n    var checkEnterBug = function() {\r\n        return browser.mozilla || devices.real().ios\r\n    };\r\n    var getTextEditorConfig = function(options) {\r\n        var data = {};\r\n        var isEnterBug = checkEnterBug();\r\n        var sharedData = options.sharedData || data;\r\n        return getResultConfig({\r\n            placeholder: options.placeholder,\r\n            width: options.width,\r\n            value: options.value,\r\n            onValueChanged: function(e) {\r\n                var needDelayedUpdate = \"filterRow\" === options.parentType || \"searchPanel\" === options.parentType;\r\n                var isInputOrKeyUpEvent = e.event && (\"input\" === e.event.type || \"keyup\" === e.event.type);\r\n                var updateValue = function(e, notFireEvent) {\r\n                    options && options.setValue(e.value, notFireEvent)\r\n                };\r\n                clearTimeout(data.valueChangeTimeout);\r\n                if (isInputOrKeyUpEvent && needDelayedUpdate) {\r\n                    sharedData.valueChangeTimeout = data.valueChangeTimeout = setTimeout((function() {\r\n                        updateValue(e, data.valueChangeTimeout !== sharedData.valueChangeTimeout)\r\n                    }), isDefined(options.updateValueTimeout) ? options.updateValueTimeout : 0)\r\n                } else {\r\n                    updateValue(e)\r\n                }\r\n            },\r\n            onKeyDown: function(e) {\r\n                if (isEnterBug && \"enter\" === normalizeKeyName(e.event)) {\r\n                    eventsEngine.trigger($(e.component._input()), \"change\")\r\n                }\r\n            },\r\n            valueChangeEvent: \"change\" + (\"filterRow\" === options.parentType ? \" keyup input\" : \"\")\r\n        }, options)\r\n    };\r\n    var prepareBooleanEditor = function(options) {\r\n        if (\"filterRow\" === options.parentType || \"filterBuilder\" === options.parentType) {\r\n            prepareSelectBox(extend(options, {\r\n                lookup: {\r\n                    displayExpr: function(data) {\r\n                        if (true === data) {\r\n                            return options.trueText || \"true\"\r\n                        } else if (false === data) {\r\n                            return options.falseText || \"false\"\r\n                        }\r\n                    },\r\n                    dataSource: [true, false]\r\n                }\r\n            }))\r\n        } else {\r\n            ! function(options) {\r\n                options.editorName = \"dxCheckBox\";\r\n                options.editorOptions = getResultConfig({\r\n                    elementAttr: {\r\n                        id: options.id\r\n                    },\r\n                    value: isDefined(options.value) ? options.value : void 0,\r\n                    hoverStateEnabled: !options.readOnly,\r\n                    focusStateEnabled: !options.readOnly,\r\n                    activeStateEnabled: false,\r\n                    onValueChanged: function(e) {\r\n                        options.setValue && options.setValue(e.value, e)\r\n                    }\r\n                }, options)\r\n            }(options)\r\n        }\r\n    };\r\n\r\n    function prepareSelectBox(options) {\r\n        var lookup = options.lookup;\r\n        var displayGetter;\r\n        var dataSource;\r\n        var postProcess;\r\n        var isFilterRow = \"filterRow\" === options.parentType;\r\n        if (lookup) {\r\n            displayGetter = compileGetter(lookup.displayExpr);\r\n            dataSource = lookup.dataSource;\r\n            if (isFunction(dataSource) && !isWrapped(dataSource)) {\r\n                dataSource = dataSource(options.row || {});\r\n                ! function(options) {\r\n                    if (options.row && options.row.watch && \"dataRow\" === options.parentType) {\r\n                        var editorOptions = options.editorOptions || {};\r\n                        options.editorOptions = editorOptions;\r\n                        var selectBox;\r\n                        var onInitialized = editorOptions.onInitialized;\r\n                        editorOptions.onInitialized = function(e) {\r\n                            onInitialized && onInitialized.apply(this, arguments);\r\n                            selectBox = e.component;\r\n                            selectBox.on(\"disposing\", stopWatch)\r\n                        };\r\n                        var dataSource;\r\n                        var stopWatch = options.row.watch(() => {\r\n                            dataSource = options.lookup.dataSource(options.row);\r\n                            return dataSource && dataSource.filter\r\n                        }, () => {\r\n                            selectBox.option(\"dataSource\", dataSource)\r\n                        }, row => {\r\n                            options.row = row\r\n                        })\r\n                    }\r\n                }(options)\r\n            }\r\n            if (isObject(dataSource) || Array.isArray(dataSource)) {\r\n                dataSource = normalizeDataSourceOptions(dataSource);\r\n                if (isFilterRow) {\r\n                    postProcess = dataSource.postProcess;\r\n                    dataSource.postProcess = function(items) {\r\n                        if (0 === this.pageIndex()) {\r\n                            items = items.slice(0);\r\n                            items.unshift(null)\r\n                        }\r\n                        if (postProcess) {\r\n                            return postProcess.call(this, items)\r\n                        }\r\n                        return items\r\n                    }\r\n                }\r\n            }\r\n            var allowClearing = Boolean(lookup.allowClearing && !isFilterRow);\r\n            options.editorName = \"dxSelectBox\";\r\n            options.editorOptions = getResultConfig({\r\n                searchEnabled: true,\r\n                value: options.value,\r\n                valueExpr: options.lookup.valueExpr,\r\n                searchExpr: options.lookup.searchExpr || options.lookup.displayExpr,\r\n                allowClearing: allowClearing,\r\n                showClearButton: allowClearing,\r\n                displayExpr: function(data) {\r\n                    if (null === data) {\r\n                        return options.showAllText\r\n                    }\r\n                    return displayGetter(data)\r\n                },\r\n                dataSource: dataSource,\r\n                onValueChanged: function(e) {\r\n                    var params = [e.value];\r\n                    !isFilterRow && params.push(e.component.option(\"text\"));\r\n                    options.setValue.apply(this, params)\r\n                }\r\n            }, options)\r\n        }\r\n    }\r\n    return {\r\n        createEditor: function($container, options) {\r\n            options.cancel = false;\r\n            options.editorElement = getPublicElement($container);\r\n            if (!isDefined(options.tabIndex)) {\r\n                options.tabIndex = this.option(\"tabIndex\")\r\n            }\r\n            if (options.lookup) {\r\n                prepareSelectBox(options)\r\n            } else {\r\n                switch (options.dataType) {\r\n                    case \"date\":\r\n                    case \"datetime\":\r\n                        ! function(options) {\r\n                            options.editorName = \"dxDateBox\";\r\n                            options.editorOptions = getResultConfig({\r\n                                value: options.value,\r\n                                onValueChanged: function(args) {\r\n                                    options.setValue(args.value)\r\n                                },\r\n                                onKeyDown: function(e) {\r\n                                    if (checkEnterBug() && \"enter\" === normalizeKeyName(e.event)) {\r\n                                        e.component.blur();\r\n                                        e.component.focus()\r\n                                    }\r\n                                },\r\n                                displayFormat: options.format,\r\n                                type: options.dataType,\r\n                                dateSerializationFormat: null,\r\n                                width: \"filterBuilder\" === options.parentType ? void 0 : \"auto\"\r\n                            }, options)\r\n                        }(options);\r\n                        break;\r\n                    case \"boolean\":\r\n                        prepareBooleanEditor(options);\r\n                        break;\r\n                    case \"number\":\r\n                        ! function(options) {\r\n                            var config = getTextEditorConfig(options);\r\n                            config.value = isDefined(options.value) ? options.value : null;\r\n                            options.editorName = \"dxNumberBox\";\r\n                            options.editorOptions = config\r\n                        }(options);\r\n                        break;\r\n                    default:\r\n                        ! function(options) {\r\n                            var config = getTextEditorConfig(options);\r\n                            var isSearching = \"searchPanel\" === options.parentType;\r\n                            if (options.editorType && \"dxTextBox\" !== options.editorType) {\r\n                                config.value = options.value\r\n                            } else {\r\n                                config.value = (value = options.value, isDefined(value) ? value.toString() : \"\")\r\n                            }\r\n                            var value;\r\n                            config.valueChangeEvent += isSearching ? \" keyup input search\" : \"\";\r\n                            config.mode = config.mode || (isSearching ? \"search\" : \"text\");\r\n                            options.editorName = \"dxTextBox\";\r\n                            options.editorOptions = config\r\n                        }(options)\r\n                }\r\n            }\r\n            if (\"dataRow\" === options.parentType && options.editorType) {\r\n                options.editorName = options.editorType\r\n            }\r\n            this.executeAction(\"onEditorPreparing\", options);\r\n            if (options.cancel) {\r\n                return\r\n            }\r\n            if (\"dataRow\" === options.parentType && !options.isOnForm && !isDefined(options.editorOptions.showValidationMark)) {\r\n                options.editorOptions.showValidationMark = false\r\n            }! function(that, options) {\r\n                var $editorElement = $(options.editorElement);\r\n                if (options.editorName && options.editorOptions && $editorElement[options.editorName]) {\r\n                    if (\"dxCheckBox\" === options.editorName || \"dxSwitch\" === options.editorName) {\r\n                        if (!options.isOnForm) {\r\n                            $editorElement.addClass(that.addWidgetPrefix(CHECKBOX_SIZE_CLASS));\r\n                            $editorElement.parent().addClass(EDITOR_INLINE_BLOCK)\r\n                        }\r\n                    }\r\n                    that._createComponent($editorElement, options.editorName, options.editorOptions);\r\n                    if (\"dxDateBox\" === options.editorName) {\r\n                        var dateBox = $editorElement.dxDateBox(\"instance\");\r\n                        var defaultEnterKeyHandler = dateBox._supportedKeys().enter;\r\n                        dateBox.registerKeyHandler(\"enter\", e => {\r\n                            if (dateBox.option(\"opened\")) {\r\n                                defaultEnterKeyHandler(e)\r\n                            }\r\n                            return true\r\n                        })\r\n                    }\r\n                    if (\"dxTextArea\" === options.editorName) {\r\n                        $editorElement.dxTextArea(\"instance\").registerKeyHandler(\"enter\", (function(event) {\r\n                            if (\"enter\" === normalizeKeyName(event) && !event.ctrlKey && !event.shiftKey) {\r\n                                event.stopPropagation()\r\n                            }\r\n                        }))\r\n                    }\r\n                }\r\n            }(this, options);\r\n            this.executeAction(\"onEditorPrepared\", options)\r\n        }\r\n    }\r\n}();\r\nexport default EditorFactoryMixin;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editor_factory.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    setOuterWidth,\r\n    getOuterWidth,\r\n    setOuterHeight,\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport positionUtils from \"../../animation/position\";\r\nimport {\r\n    addNamespace,\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport EditorFactoryMixin from \"../shared/ui.editor_factory_mixin\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nvar EDITOR_INLINE_BLOCK = \"dx-editor-inline-block\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FOCUS_OVERLAY_CLASS = \"focus-overlay\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar FOCUSED_ELEMENT_CLASS = \"dx-focused\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar MODULE_NAMESPACE = \"dxDataGridEditorFactory\";\r\nvar UPDATE_FOCUS_EVENTS = addNamespace([pointerEvents.down, \"focusin\", clickEventName].join(\" \"), MODULE_NAMESPACE);\r\nvar DX_HIDDEN = \"dx-hidden\";\r\nvar EditorFactory = modules.ViewController.inherit({\r\n    _getFocusedElement: function($dataGridElement) {\r\n        var rowSelector = this.option(\"focusedRowEnabled\") ? \"tr[tabindex]:focus\" : \"tr[tabindex]:not(.dx-data-row):focus\";\r\n        var focusedElementSelector = \"td[tabindex]:focus, \".concat(rowSelector, \", input:focus, textarea:focus, .dx-lookup-field:focus, .dx-checkbox:focus, .dx-switch:focus, .dx-dropdownbutton .dx-buttongroup:focus\");\r\n        return $dataGridElement.find(focusedElementSelector)\r\n    },\r\n    _getFocusCellSelector: function() {\r\n        return \".dx-row > td\"\r\n    },\r\n    _updateFocusCore: function() {\r\n        var $focus = this._$focusedElement;\r\n        var $dataGridElement = this.component && this.component.$element();\r\n        var $focusCell;\r\n        var hideBorders;\r\n        if ($dataGridElement) {\r\n            $focus = this._getFocusedElement($dataGridElement);\r\n            if ($focus.length) {\r\n                if (!$focus.hasClass(CELL_FOCUS_DISABLED_CLASS) && !$focus.hasClass(ROW_CLASS)) {\r\n                    $focusCell = $focus.closest(this._getFocusCellSelector() + \", .\" + CELL_FOCUS_DISABLED_CLASS);\r\n                    hideBorders = $focusCell.get(0) !== $focus.get(0) && $focusCell.hasClass(EDITOR_INLINE_BLOCK);\r\n                    $focus = $focusCell\r\n                }\r\n                if ($focus.length && !$focus.hasClass(CELL_FOCUS_DISABLED_CLASS)) {\r\n                    this.focus($focus, hideBorders);\r\n                    return\r\n                }\r\n            }\r\n        }\r\n        this.loseFocus()\r\n    },\r\n    _updateFocus: function(e) {\r\n        var that = this;\r\n        var isFocusOverlay = e && e.event && $(e.event.target).hasClass(that.addWidgetPrefix(FOCUS_OVERLAY_CLASS));\r\n        that._isFocusOverlay = that._isFocusOverlay || isFocusOverlay;\r\n        clearTimeout(that._updateFocusTimeoutID);\r\n        that._updateFocusTimeoutID = setTimeout((function() {\r\n            delete that._updateFocusTimeoutID;\r\n            if (!that._isFocusOverlay) {\r\n                that._updateFocusCore()\r\n            }\r\n            that._isFocusOverlay = false\r\n        }))\r\n    },\r\n    _updateFocusOverlaySize: function($element, position) {\r\n        $element.hide();\r\n        var location = positionUtils.calculate($element, extend({\r\n            collision: \"fit\"\r\n        }, position));\r\n        if (location.h.oversize > 0) {\r\n            setOuterWidth($element, getOuterWidth($element) - location.h.oversize)\r\n        }\r\n        if (location.v.oversize > 0) {\r\n            setOuterHeight($element, getOuterHeight($element) - location.v.oversize)\r\n        }\r\n        $element.show()\r\n    },\r\n    callbackNames: function() {\r\n        return [\"focused\"]\r\n    },\r\n    focus: function($element, hideBorder) {\r\n        var that = this;\r\n        if (void 0 === $element) {\r\n            return that._$focusedElement\r\n        } else if ($element) {\r\n            if (!$element.is(that._$focusedElement)) {\r\n                that._$focusedElement && that._$focusedElement.removeClass(FOCUSED_ELEMENT_CLASS)\r\n            }\r\n            that._$focusedElement = $element;\r\n            clearTimeout(that._focusTimeoutID);\r\n            that._focusTimeoutID = setTimeout((function() {\r\n                delete that._focusTimeoutID;\r\n                that.renderFocusOverlay($element, hideBorder);\r\n                $element.addClass(FOCUSED_ELEMENT_CLASS);\r\n                that.focused.fire($element)\r\n            }))\r\n        }\r\n    },\r\n    refocus: function() {\r\n        var $focus = this.focus();\r\n        this.focus($focus)\r\n    },\r\n    renderFocusOverlay: function($element, hideBorder) {\r\n        if (!gridCoreUtils.isElementInCurrentGrid(this, $element)) {\r\n            return\r\n        }\r\n        if (!this._$focusOverlay) {\r\n            this._$focusOverlay = $(\"<div>\").addClass(this.addWidgetPrefix(FOCUS_OVERLAY_CLASS))\r\n        }\r\n        if (hideBorder) {\r\n            this._$focusOverlay.addClass(DX_HIDDEN)\r\n        } else if ($element.length) {\r\n            var align = browser.mozilla ? \"right bottom\" : \"left top\";\r\n            var $content = $element.closest(\".\" + this.addWidgetPrefix(CONTENT_CLASS));\r\n            var elemCoord = getBoundingRect($element.get(0));\r\n            this._$focusOverlay.removeClass(DX_HIDDEN).appendTo($content);\r\n            setOuterHeight(this._$focusOverlay, elemCoord.bottom - elemCoord.top + 1);\r\n            setOuterWidth(this._$focusOverlay, elemCoord.right - elemCoord.left + 1);\r\n            var focusOverlayPosition = {\r\n                precise: true,\r\n                my: align,\r\n                at: align,\r\n                of: $element,\r\n                boundary: $content.length && $content\r\n            };\r\n            this._updateFocusOverlaySize(this._$focusOverlay, focusOverlayPosition);\r\n            positionUtils.setup(this._$focusOverlay, focusOverlayPosition);\r\n            this._$focusOverlay.css(\"visibility\", \"visible\")\r\n        }\r\n    },\r\n    resize: function() {\r\n        var $focusedElement = this._$focusedElement;\r\n        if ($focusedElement) {\r\n            this.focus($focusedElement)\r\n        }\r\n    },\r\n    loseFocus: function() {\r\n        this._$focusedElement && this._$focusedElement.removeClass(FOCUSED_ELEMENT_CLASS);\r\n        this._$focusedElement = null;\r\n        this._$focusOverlay && this._$focusOverlay.addClass(DX_HIDDEN)\r\n    },\r\n    init: function() {\r\n        this.createAction(\"onEditorPreparing\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        this.createAction(\"onEditorPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        this._updateFocusHandler = this._updateFocusHandler || this.createAction(this._updateFocus.bind(this));\r\n        eventsEngine.on(domAdapter.getDocument(), UPDATE_FOCUS_EVENTS, this._updateFocusHandler);\r\n        this._attachContainerEventHandlers()\r\n    },\r\n    _attachContainerEventHandlers: function() {\r\n        var that = this;\r\n        var $container = that.component && that.component.$element();\r\n        if ($container) {\r\n            eventsEngine.on($container, addNamespace(\"keydown\", MODULE_NAMESPACE), (function(e) {\r\n                if (\"tab\" === normalizeKeyName(e)) {\r\n                    that._updateFocusHandler(e)\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    dispose: function() {\r\n        clearTimeout(this._focusTimeoutID);\r\n        clearTimeout(this._updateFocusTimeoutID);\r\n        eventsEngine.off(domAdapter.getDocument(), UPDATE_FOCUS_EVENTS, this._updateFocusHandler)\r\n    }\r\n}).include(EditorFactoryMixin);\r\nexport var editorFactoryModule = {\r\n    defaultOptions: function() {\r\n        return {}\r\n    },\r\n    controllers: {\r\n        editorFactory: EditorFactory\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editor_factory.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    editorFactoryModule\r\n} from \"../grid_core/ui.grid_core.editor_factory\";\r\ngridCore.registerModule(\"editorFactory\", editorFactoryModule);\r\n","/**\r\n * DevExtreme (esm/ui/dialog.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight,\r\n    getWidth\r\n} from \"../core/utils/size\";\r\nimport $ from \"../core/renderer\";\r\nimport {\r\n    Component\r\n} from \"../core/component\";\r\nimport Action from \"../core/action\";\r\nimport devices from \"../core/devices\";\r\nimport config from \"../core/config\";\r\nimport {\r\n    resetActiveElement\r\n} from \"../core/utils/dom\";\r\nimport {\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nimport {\r\n    isPlainObject\r\n} from \"../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    getWindow\r\n} from \"../core/utils/window\";\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport {\r\n    value as getViewport\r\n} from \"../core/utils/view_port\";\r\nimport messageLocalization from \"../localization/message\";\r\nimport errors from \"./widget/ui.errors\";\r\nimport Popup from \"./popup\";\r\nimport {\r\n    ensureDefined\r\n} from \"../core/utils/common\";\r\nvar window = getWindow();\r\nvar DEFAULT_BUTTON = {\r\n    text: \"OK\",\r\n    onClick: function() {\r\n        return true\r\n    }\r\n};\r\nvar DX_DIALOG_CLASSNAME = \"dx-dialog\";\r\nvar DX_DIALOG_WRAPPER_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-wrapper\");\r\nvar DX_DIALOG_ROOT_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-root\");\r\nvar DX_DIALOG_CONTENT_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-content\");\r\nvar DX_DIALOG_MESSAGE_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-message\");\r\nvar DX_DIALOG_BUTTONS_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-buttons\");\r\nvar DX_DIALOG_BUTTON_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-button\");\r\nvar DX_BUTTON_CLASSNAME = \"dx-button\";\r\nexport var FakeDialogComponent = Component.inherit({\r\n    ctor: function(element, options) {\r\n        this.callBase(options)\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                width: 276\r\n            }\r\n        }])\r\n    }\r\n});\r\nexport var custom = function(options) {\r\n    var _options$title;\r\n    var deferred = new Deferred;\r\n    var defaultOptions = (new FakeDialogComponent).option();\r\n    options = extend(defaultOptions, options);\r\n    var $element = $(\"<div>\").addClass(DX_DIALOG_CLASSNAME).appendTo(getViewport());\r\n    var isMessageDefined = \"message\" in options;\r\n    var isMessageHtmlDefined = \"messageHtml\" in options;\r\n    if (isMessageDefined) {\r\n        errors.log(\"W1013\")\r\n    }\r\n    var messageHtml = String(isMessageHtmlDefined ? options.messageHtml : options.message);\r\n    var $message = $(\"<div>\").addClass(DX_DIALOG_MESSAGE_CLASSNAME).html(messageHtml);\r\n    var popupToolbarItems = [];\r\n    each(options.buttons || [DEFAULT_BUTTON], (function() {\r\n        var action = new Action(this.onClick, {\r\n            context: popupInstance\r\n        });\r\n        popupToolbarItems.push({\r\n            toolbar: \"bottom\",\r\n            location: devices.current().android ? \"after\" : \"center\",\r\n            widget: \"dxButton\",\r\n            options: extend({}, this, {\r\n                onClick: function() {\r\n                    var result = action.execute(...arguments);\r\n                    hide(result)\r\n                }\r\n            })\r\n        })\r\n    }));\r\n    var popupInstance = new Popup($element, extend({\r\n        title: null !== (_options$title = options.title) && void 0 !== _options$title ? _options$title : \"\",\r\n        showTitle: ensureDefined(options.showTitle, true),\r\n        dragEnabled: ensureDefined(options.dragEnabled, true),\r\n        height: \"auto\",\r\n        width: options.width,\r\n        showCloseButton: options.showCloseButton || false,\r\n        ignoreChildEvents: false,\r\n        onContentReady: function(args) {\r\n            args.component.$content().addClass(DX_DIALOG_CONTENT_CLASSNAME).append($message)\r\n        },\r\n        onShowing: function(e) {\r\n            e.component.bottomToolbar().addClass(DX_DIALOG_BUTTONS_CLASSNAME).find(\".\".concat(DX_BUTTON_CLASSNAME)).addClass(DX_DIALOG_BUTTON_CLASSNAME);\r\n            resetActiveElement()\r\n        },\r\n        onShown: function(e) {\r\n            var $firstButton = e.component.bottomToolbar().find(\".\".concat(DX_BUTTON_CLASSNAME)).first();\r\n            eventsEngine.trigger($firstButton, \"focus\")\r\n        },\r\n        onHiding: function() {\r\n            deferred.reject()\r\n        },\r\n        toolbarItems: popupToolbarItems,\r\n        animation: {\r\n            show: {\r\n                type: \"pop\",\r\n                duration: 400\r\n            },\r\n            hide: {\r\n                type: \"pop\",\r\n                duration: 400,\r\n                to: {\r\n                    opacity: 0,\r\n                    scale: 0\r\n                },\r\n                from: {\r\n                    opacity: 1,\r\n                    scale: 1\r\n                }\r\n            }\r\n        },\r\n        rtlEnabled: config().rtlEnabled,\r\n        position: {\r\n            boundaryOffset: {\r\n                h: 10,\r\n                v: 0\r\n            }\r\n        }\r\n    }, options.popupOptions));\r\n    popupInstance.$wrapper().addClass(DX_DIALOG_WRAPPER_CLASSNAME);\r\n    if (options.position) {\r\n        popupInstance.option(\"position\", options.position)\r\n    }\r\n    popupInstance.$wrapper().addClass(DX_DIALOG_ROOT_CLASSNAME);\r\n\r\n    function hide(value) {\r\n        deferred.resolve(value);\r\n        popupInstance.hide().done((function() {\r\n            popupInstance.$element().remove()\r\n        }))\r\n    }\r\n    return {\r\n        show: function() {\r\n            if (\"android\" === devices.real().platform) {\r\n                var isPortrait = getHeight(window) > getWidth(window);\r\n                var width = isPortrait ? \"80%\" : \"60%\";\r\n                popupInstance.option({\r\n                    width: width\r\n                })\r\n            }\r\n            popupInstance.show();\r\n            return deferred.promise()\r\n        },\r\n        hide: hide\r\n    }\r\n};\r\nexport var alert = function(messageHtml) {\r\n    var title = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"\";\r\n    var showTitle = arguments.length > 2 ? arguments[2] : void 0;\r\n    var options = isPlainObject(messageHtml) ? messageHtml : {\r\n        title: title,\r\n        messageHtml: messageHtml,\r\n        showTitle: showTitle,\r\n        dragEnabled: showTitle\r\n    };\r\n    return custom(options).show()\r\n};\r\nexport var confirm = function(messageHtml) {\r\n    var title = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"\";\r\n    var showTitle = arguments.length > 2 ? arguments[2] : void 0;\r\n    var options = isPlainObject(messageHtml) ? messageHtml : {\r\n        title: title,\r\n        messageHtml: messageHtml,\r\n        showTitle: showTitle,\r\n        buttons: [{\r\n            text: messageLocalization.format(\"Yes\"),\r\n            onClick: function() {\r\n                return true\r\n            }\r\n        }, {\r\n            text: messageLocalization.format(\"No\"),\r\n            onClick: function() {\r\n                return false\r\n            }\r\n        }],\r\n        dragEnabled: showTitle\r\n    };\r\n    return custom(options).show()\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing_constants.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport var EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nexport var ROW_CLASS = \"dx-row\";\r\nexport var CELL_MODIFIED_CLASS = \"dx-cell-modified\";\r\nexport var ROW_SELECTED_CLASS = \"dx-selection\";\r\nexport var EDIT_FORM_CLASS = \"edit-form\";\r\nexport var DATA_EDIT_DATA_INSERT_TYPE = \"insert\";\r\nexport var DATA_EDIT_DATA_REMOVE_TYPE = \"remove\";\r\nexport var EDITING_POPUP_OPTION_NAME = \"editing.popup\";\r\nexport var EDITING_FORM_OPTION_NAME = \"editing.form\";\r\nexport var EDITING_EDITROWKEY_OPTION_NAME = \"editing.editRowKey\";\r\nexport var EDITING_EDITCOLUMNNAME_OPTION_NAME = \"editing.editColumnName\";\r\nexport var TARGET_COMPONENT_NAME = \"targetComponent\";\r\nexport var EDITORS_INPUT_SELECTOR = \"input:not([type='hidden'])\";\r\nexport var FOCUSABLE_ELEMENT_SELECTOR = \"[tabindex], \" + EDITORS_INPUT_SELECTOR;\r\nexport var EDIT_MODE_BATCH = \"batch\";\r\nexport var EDIT_MODE_ROW = \"row\";\r\nexport var EDIT_MODE_CELL = \"cell\";\r\nexport var EDIT_MODE_FORM = \"form\";\r\nexport var EDIT_MODE_POPUP = \"popup\";\r\nexport var FIRST_NEW_ROW_POSITION = \"first\";\r\nexport var LAST_NEW_ROW_POSITION = \"last\";\r\nexport var PAGE_BOTTOM_NEW_ROW_POSITION = \"pageBottom\";\r\nexport var PAGE_TOP_NEW_ROW_POSITION = \"pageTop\";\r\nexport var VIEWPORT_BOTTOM_NEW_ROW_POSITION = \"viewportBottom\";\r\nexport var VIEWPORT_TOP_NEW_ROW_POSITION = \"viewportTop\";\r\nexport var EDIT_MODES = [EDIT_MODE_BATCH, EDIT_MODE_ROW, EDIT_MODE_CELL, EDIT_MODE_FORM, EDIT_MODE_POPUP];\r\nexport var ROW_BASED_MODES = [EDIT_MODE_ROW, EDIT_MODE_FORM, EDIT_MODE_POPUP];\r\nexport var MODES_WITH_DELAYED_FOCUS = [EDIT_MODE_ROW, EDIT_MODE_FORM];\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Guid from \"../../core/guid\";\r\nimport {\r\n    resetActiveElement\r\n} from \"../../core/utils/dom\";\r\nimport {\r\n    isDefined,\r\n    isObject,\r\n    isFunction,\r\n    isEmptyObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    createObjectWithChanges\r\n} from \"../../data/array_utils\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    confirm\r\n} from \"../dialog\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport devices from \"../../core/devices\";\r\nimport {\r\n    when,\r\n    Deferred,\r\n    fromPromise\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    equalByValue,\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport * as iconUtils from \"../../core/utils/icon\";\r\nimport {\r\n    EDITOR_CELL_CLASS,\r\n    ROW_CLASS,\r\n    EDIT_FORM_CLASS,\r\n    DATA_EDIT_DATA_INSERT_TYPE,\r\n    DATA_EDIT_DATA_REMOVE_TYPE,\r\n    EDITING_POPUP_OPTION_NAME,\r\n    EDITING_EDITROWKEY_OPTION_NAME,\r\n    EDITING_EDITCOLUMNNAME_OPTION_NAME,\r\n    TARGET_COMPONENT_NAME,\r\n    EDITORS_INPUT_SELECTOR,\r\n    FOCUSABLE_ELEMENT_SELECTOR,\r\n    EDIT_MODE_ROW,\r\n    EDIT_MODES,\r\n    ROW_BASED_MODES,\r\n    FIRST_NEW_ROW_POSITION,\r\n    LAST_NEW_ROW_POSITION,\r\n    PAGE_BOTTOM_NEW_ROW_POSITION,\r\n    PAGE_TOP_NEW_ROW_POSITION,\r\n    VIEWPORT_BOTTOM_NEW_ROW_POSITION,\r\n    VIEWPORT_TOP_NEW_ROW_POSITION\r\n} from \"./ui.grid_core.editing_constants\";\r\nvar READONLY_CLASS = \"readonly\";\r\nvar LINK_CLASS = \"dx-link\";\r\nvar ROW_SELECTED = \"dx-selection\";\r\nvar EDIT_BUTTON_CLASS = \"dx-edit-button\";\r\nvar COMMAND_EDIT_CLASS = \"dx-command-edit\";\r\nvar COMMAND_EDIT_WITH_ICONS_CLASS = COMMAND_EDIT_CLASS + \"-with-icons\";\r\nvar INSERT_INDEX = \"__DX_INSERT_INDEX__\";\r\nvar ROW_INSERTED = \"dx-row-inserted\";\r\nvar ROW_MODIFIED = \"dx-row-modified\";\r\nvar CELL_MODIFIED = \"dx-cell-modified\";\r\nvar EDITING_NAMESPACE = \"dxDataGridEditing\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar DATA_EDIT_DATA_UPDATE_TYPE = \"update\";\r\nvar DEFAULT_START_EDIT_ACTION = \"click\";\r\nvar EDIT_LINK_CLASS = {\r\n    save: \"dx-link-save\",\r\n    cancel: \"dx-link-cancel\",\r\n    edit: \"dx-link-edit\",\r\n    undelete: \"dx-link-undelete\",\r\n    delete: \"dx-link-delete\",\r\n    add: \"dx-link-add\"\r\n};\r\nvar EDIT_ICON_CLASS = {\r\n    save: \"save\",\r\n    cancel: \"revert\",\r\n    edit: \"edit\",\r\n    undelete: \"revert\",\r\n    delete: \"trash\",\r\n    add: \"add\"\r\n};\r\nvar METHOD_NAMES = {\r\n    edit: \"editRow\",\r\n    delete: \"deleteRow\",\r\n    undelete: \"undeleteRow\",\r\n    save: \"saveEditData\",\r\n    cancel: \"cancelEditData\",\r\n    add: \"addRowByRowIndex\"\r\n};\r\nvar ACTION_OPTION_NAMES = {\r\n    add: \"allowAdding\",\r\n    edit: \"allowUpdating\",\r\n    delete: \"allowDeleting\"\r\n};\r\nvar BUTTON_NAMES = [\"edit\", \"save\", \"cancel\", \"delete\", \"undelete\"];\r\nvar EDITING_CHANGES_OPTION_NAME = \"editing.changes\";\r\nvar createFailureHandler = function(deferred) {\r\n    return function(arg) {\r\n        var error = arg instanceof Error ? arg : new Error(arg && String(arg) || \"Unknown error\");\r\n        deferred.reject(error)\r\n    }\r\n};\r\nvar isEditingCell = function(isEditRow, cellOptions) {\r\n    return cellOptions.isEditing || isEditRow && cellOptions.column.allowEditing\r\n};\r\nvar isEditingOrShowEditorAlwaysDataCell = function(isEditRow, cellOptions) {\r\n    var isCommandCell = !!cellOptions.column.command;\r\n    var isEditing = isEditingCell(isEditRow, cellOptions);\r\n    var isEditorCell = !isCommandCell && (isEditing || cellOptions.column.showEditorAlways);\r\n    return \"data\" === cellOptions.rowType && isEditorCell\r\n};\r\nvar EditingController = modules.ViewController.inherit(function() {\r\n    var getButtonIndex = (buttons, name) => {\r\n        var result = -1;\r\n        buttons.some((button, index) => {\r\n            if (getButtonName(button) === name) {\r\n                result = index;\r\n                return true\r\n            }\r\n        });\r\n        return result\r\n    };\r\n\r\n    function getButtonName(button) {\r\n        return isObject(button) ? button.name : button\r\n    }\r\n    return {\r\n        init: function() {\r\n            this._columnsController = this.getController(\"columns\");\r\n            this._dataController = this.getController(\"data\");\r\n            this._rowsView = this.getView(\"rowsView\");\r\n            this._lastOperation = null;\r\n            if (this._deferreds) {\r\n                this._deferreds.forEach(d => d.reject(\"cancel\"))\r\n            }\r\n            this._deferreds = [];\r\n            if (!this._dataChangedHandler) {\r\n                this._dataChangedHandler = this._handleDataChanged.bind(this);\r\n                this._dataController.changed.add(this._dataChangedHandler)\r\n            }\r\n            if (!this._saveEditorHandler) {\r\n                this.createAction(\"onInitNewRow\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowInserting\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowInserted\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onEditingStart\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowUpdating\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowUpdated\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowRemoving\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowRemoved\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onSaved\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onSaving\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onEditCanceling\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onEditCanceled\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                })\r\n            }\r\n            this._updateEditColumn();\r\n            this._updateEditButtons();\r\n            if (!this._internalState) {\r\n                this._internalState = []\r\n            }\r\n            this.component._optionsByReference[EDITING_EDITROWKEY_OPTION_NAME] = true;\r\n            this.component._optionsByReference[EDITING_CHANGES_OPTION_NAME] = true\r\n        },\r\n        getEditMode: function() {\r\n            var editMode = this.option(\"editing.mode\");\r\n            if (-1 !== EDIT_MODES.indexOf(editMode)) {\r\n                return editMode\r\n            }\r\n            return EDIT_MODE_ROW\r\n        },\r\n        _getDefaultEditorTemplate: function() {\r\n            return (container, options) => {\r\n                var $editor = $(\"<div>\").appendTo(container);\r\n                this.getController(\"editorFactory\").createEditor($editor, extend({}, options.column, {\r\n                    value: options.value,\r\n                    setValue: options.setValue,\r\n                    row: options.row,\r\n                    parentType: \"dataRow\",\r\n                    width: null,\r\n                    readOnly: !options.setValue,\r\n                    isOnForm: options.isOnForm,\r\n                    id: options.id\r\n                }))\r\n            }\r\n        },\r\n        _getNewRowPosition: function() {\r\n            var newRowPosition = this.option(\"editing.newRowPosition\");\r\n            var scrollingMode = this.option(\"scrolling.mode\");\r\n            if (\"virtual\" === scrollingMode) {\r\n                switch (newRowPosition) {\r\n                    case PAGE_TOP_NEW_ROW_POSITION:\r\n                        return VIEWPORT_TOP_NEW_ROW_POSITION;\r\n                    case PAGE_BOTTOM_NEW_ROW_POSITION:\r\n                        return VIEWPORT_BOTTOM_NEW_ROW_POSITION;\r\n                    default:\r\n                        return newRowPosition\r\n                }\r\n            }\r\n            return newRowPosition\r\n        },\r\n        getChanges: function() {\r\n            return this.option(EDITING_CHANGES_OPTION_NAME)\r\n        },\r\n        getInsertRowCount: function() {\r\n            var changes = this.option(EDITING_CHANGES_OPTION_NAME);\r\n            return changes.filter(change => \"insert\" === change.type).length\r\n        },\r\n        resetChanges: function() {\r\n            var changes = this.getChanges();\r\n            var needReset = null === changes || void 0 === changes ? void 0 : changes.length;\r\n            if (needReset) {\r\n                this._silentOption(EDITING_CHANGES_OPTION_NAME, [])\r\n            }\r\n        },\r\n        _getInternalData: function(key) {\r\n            return this._internalState.filter(item => equalByValue(item.key, key))[0]\r\n        },\r\n        _addInternalData: function(params) {\r\n            var internalData = this._getInternalData(params.key);\r\n            if (internalData) {\r\n                return extend(internalData, params)\r\n            }\r\n            this._internalState.push(params);\r\n            return params\r\n        },\r\n        _getOldData: function(key) {\r\n            var _this$_getInternalDat;\r\n            return null === (_this$_getInternalDat = this._getInternalData(key)) || void 0 === _this$_getInternalDat ? void 0 : _this$_getInternalDat.oldData\r\n        },\r\n        getUpdatedData: function(data) {\r\n            var key = this._dataController.keyOf(data);\r\n            var changes = this.getChanges();\r\n            var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n            if (changes[editIndex]) {\r\n                return createObjectWithChanges(data, changes[editIndex].data)\r\n            }\r\n            return data\r\n        },\r\n        getInsertedData: function() {\r\n            return this.getChanges().filter(change => change.data && change.type === DATA_EDIT_DATA_INSERT_TYPE).map(change => change.data)\r\n        },\r\n        getRemovedData: function() {\r\n            return this.getChanges().filter(change => this._getOldData(change.key) && change.type === DATA_EDIT_DATA_REMOVE_TYPE).map(change => this._getOldData(change.key))\r\n        },\r\n        _fireDataErrorOccurred: function(arg) {\r\n            if (\"cancel\" === arg) {\r\n                return\r\n            }\r\n            var $popupContent = this.getPopupContent();\r\n            this._dataController.dataErrorOccurred.fire(arg, $popupContent)\r\n        },\r\n        _needToCloseEditableCell: noop,\r\n        _closeEditItem: noop,\r\n        _handleDataChanged: noop,\r\n        _isDefaultButtonVisible: function(button, options) {\r\n            var result = true;\r\n            switch (button.name) {\r\n                case \"delete\":\r\n                    result = this.allowDeleting(options);\r\n                    break;\r\n                case \"undelete\":\r\n                    result = false\r\n            }\r\n            return result\r\n        },\r\n        _isButtonVisible: function(button, options) {\r\n            var visible = button.visible;\r\n            if (!isDefined(visible)) {\r\n                return this._isDefaultButtonVisible(button, options)\r\n            }\r\n            return isFunction(visible) ? visible.call(button, {\r\n                component: options.component,\r\n                row: options.row,\r\n                column: options.column\r\n            }) : visible\r\n        },\r\n        _isButtonDisabled: function(button, options) {\r\n            var disabled = button.disabled;\r\n            return isFunction(disabled) ? disabled.call(button, {\r\n                component: options.component,\r\n                row: options.row,\r\n                column: options.column\r\n            }) : !!disabled\r\n        },\r\n        _getButtonConfig: function(button, options) {\r\n            var config = isObject(button) ? button : {};\r\n            var buttonName = getButtonName(button);\r\n            var editingTexts = (options => {\r\n                var editingTexts = options.component.option(\"editing.texts\") || {};\r\n                return {\r\n                    save: editingTexts.saveRowChanges,\r\n                    cancel: editingTexts.cancelRowChanges,\r\n                    edit: editingTexts.editRow,\r\n                    undelete: editingTexts.undeleteRow,\r\n                    delete: editingTexts.deleteRow,\r\n                    add: editingTexts.addRowToNode\r\n                }\r\n            })(options);\r\n            var methodName = METHOD_NAMES[buttonName];\r\n            var editingOptions = this.option(\"editing\");\r\n            var actionName = ACTION_OPTION_NAMES[buttonName];\r\n            var allowAction = actionName ? editingOptions[actionName] : true;\r\n            return extend({\r\n                name: buttonName,\r\n                text: editingTexts[buttonName],\r\n                cssClass: EDIT_LINK_CLASS[buttonName]\r\n            }, {\r\n                onClick: methodName && (e => {\r\n                    var event = e.event;\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    setTimeout(() => {\r\n                        options.row && allowAction && this[methodName] && this[methodName](options.row.rowIndex)\r\n                    })\r\n                })\r\n            }, config)\r\n        },\r\n        _getEditingButtons: function(options) {\r\n            var buttonIndex;\r\n            var haveCustomButtons = !!options.column.buttons;\r\n            var buttons = (options.column.buttons || []).slice();\r\n            if (haveCustomButtons) {\r\n                buttonIndex = getButtonIndex(buttons, \"edit\");\r\n                if (buttonIndex >= 0) {\r\n                    if (getButtonIndex(buttons, \"save\") < 0) {\r\n                        buttons.splice(buttonIndex + 1, 0, \"save\")\r\n                    }\r\n                    if (getButtonIndex(buttons, \"cancel\") < 0) {\r\n                        buttons.splice(getButtonIndex(buttons, \"save\") + 1, 0, \"cancel\")\r\n                    }\r\n                }\r\n                buttonIndex = getButtonIndex(buttons, \"delete\");\r\n                if (buttonIndex >= 0 && getButtonIndex(buttons, \"undelete\") < 0) {\r\n                    buttons.splice(buttonIndex + 1, 0, \"undelete\")\r\n                }\r\n            } else {\r\n                buttons = BUTTON_NAMES.slice()\r\n            }\r\n            return buttons.map(button => this._getButtonConfig(button, options))\r\n        },\r\n        _renderEditingButtons: function($container, buttons, options, change) {\r\n            buttons.forEach(button => {\r\n                if (this._isButtonVisible(button, options)) {\r\n                    this._createButton($container, button, options, change)\r\n                }\r\n            })\r\n        },\r\n        _getEditCommandCellTemplate: function() {\r\n            return (container, options, change) => {\r\n                var $container = $(container);\r\n                if (\"data\" === options.rowType) {\r\n                    var buttons = this._getEditingButtons(options);\r\n                    this._renderEditingButtons($container, buttons, options, change);\r\n                    options.watch && options.watch(() => buttons.map(button => this._isButtonVisible(button, options)), () => {\r\n                        $container.empty();\r\n                        this._renderEditingButtons($container, buttons, options)\r\n                    })\r\n                } else {\r\n                    gridCoreUtils.setEmptyText($container)\r\n                }\r\n            }\r\n        },\r\n        isRowBasedEditMode: function() {\r\n            var editMode = this.getEditMode();\r\n            return -1 !== ROW_BASED_MODES.indexOf(editMode)\r\n        },\r\n        getFirstEditableColumnIndex: function() {\r\n            var columnsController = this.getController(\"columns\");\r\n            var columnIndex;\r\n            var visibleColumns = columnsController.getVisibleColumns();\r\n            each(visibleColumns, (function(index, column) {\r\n                if (column.allowEditing) {\r\n                    columnIndex = index;\r\n                    return false\r\n                }\r\n            }));\r\n            return columnIndex\r\n        },\r\n        getFirstEditableCellInRow: function(rowIndex) {\r\n            var rowsView = this.getView(\"rowsView\");\r\n            return rowsView && rowsView._getCellElement(rowIndex ? rowIndex : 0, this.getFirstEditableColumnIndex())\r\n        },\r\n        getFocusedCellInRow: function(rowIndex) {\r\n            return this.getFirstEditableCellInRow(rowIndex)\r\n        },\r\n        getIndexByKey: function(key, items) {\r\n            return gridCoreUtils.getIndexByKey(key, items)\r\n        },\r\n        hasChanges: function(rowIndex) {\r\n            var changes = this.getChanges();\r\n            var result = false;\r\n            for (var i = 0; i < (null === changes || void 0 === changes ? void 0 : changes.length); i++) {\r\n                if (changes[i].type && (!isDefined(rowIndex) || this._dataController.getRowIndexByKey(changes[i].key) === rowIndex)) {\r\n                    result = true;\r\n                    break\r\n                }\r\n            }\r\n            return result\r\n        },\r\n        dispose: function() {\r\n            this.callBase();\r\n            clearTimeout(this._inputFocusTimeoutID);\r\n            eventsEngine.off(domAdapter.getDocument(), pointerEvents.up, this._pointerUpEditorHandler);\r\n            eventsEngine.off(domAdapter.getDocument(), pointerEvents.down, this._pointerDownEditorHandler);\r\n            eventsEngine.off(domAdapter.getDocument(), clickEventName, this._saveEditorHandler)\r\n        },\r\n        optionChanged: function(args) {\r\n            if (\"editing\" === args.name) {\r\n                var fullName = args.fullName;\r\n                if (fullName === EDITING_EDITROWKEY_OPTION_NAME) {\r\n                    this._handleEditRowKeyChange(args)\r\n                } else if (fullName === EDITING_CHANGES_OPTION_NAME) {\r\n                    this._handleChangesChange(args)\r\n                } else if (!args.handled) {\r\n                    this._columnsController.reinit();\r\n                    this.init();\r\n                    this.resetChanges();\r\n                    this._resetEditColumnName();\r\n                    this._resetEditRowKey()\r\n                }\r\n                args.handled = true\r\n            } else {\r\n                this.callBase(args)\r\n            }\r\n        },\r\n        _handleEditRowKeyChange: function(args) {\r\n            var rowIndex = this._dataController.getRowIndexByKey(args.value);\r\n            var oldRowIndexCorrection = this._getEditRowIndexCorrection();\r\n            var oldRowIndex = this._dataController.getRowIndexByKey(args.previousValue) + oldRowIndexCorrection;\r\n            if (isDefined(args.value)) {\r\n                if (args.value !== args.previousValue) {\r\n                    this._editRowFromOptionChanged(rowIndex, oldRowIndex)\r\n                }\r\n            } else {\r\n                this.cancelEditData()\r\n            }\r\n        },\r\n        _handleChangesChange: function(args) {\r\n            var dataController = this._dataController;\r\n            if (!args.value.length && !args.previousValue.length) {\r\n                return\r\n            }\r\n            this._processInsertChanges(args.value);\r\n            dataController.updateItems({\r\n                repaintChangesOnly: true\r\n            })\r\n        },\r\n        _processInsertChanges: function(changes) {\r\n            changes.forEach(change => {\r\n                if (\"insert\" === change.type) {\r\n                    this._addInsertInfo(change)\r\n                }\r\n            })\r\n        },\r\n        publicMethods: function() {\r\n            return [\"addRow\", \"deleteRow\", \"undeleteRow\", \"editRow\", \"saveEditData\", \"cancelEditData\", \"hasEditData\"]\r\n        },\r\n        refresh: function(isPageChanged) {\r\n            if (!isDefined(this._pageIndex)) {\r\n                return\r\n            }\r\n            this._refreshCore(isPageChanged)\r\n        },\r\n        _refreshCore: noop,\r\n        isEditing: function() {\r\n            var isEditRowKeyDefined = isDefined(this.option(EDITING_EDITROWKEY_OPTION_NAME));\r\n            return isEditRowKeyDefined\r\n        },\r\n        isEditRow: function() {\r\n            return false\r\n        },\r\n        _setEditRowKey: function(value, silent) {\r\n            if (silent) {\r\n                this._silentOption(EDITING_EDITROWKEY_OPTION_NAME, value)\r\n            } else {\r\n                this.option(EDITING_EDITROWKEY_OPTION_NAME, value)\r\n            }\r\n        },\r\n        _setEditRowKeyByIndex: function(rowIndex, silent) {\r\n            var key = this._dataController.getKeyByRowIndex(rowIndex);\r\n            if (void 0 === key) {\r\n                this._dataController.fireError(\"E1043\");\r\n                return\r\n            }\r\n            this._setEditRowKey(key, silent)\r\n        },\r\n        getEditRowIndex: function() {\r\n            return this._getVisibleEditRowIndex()\r\n        },\r\n        getEditFormRowIndex: function() {\r\n            return -1\r\n        },\r\n        _isEditRowByIndex(rowIndex) {\r\n            var key = this._dataController.getKeyByRowIndex(rowIndex);\r\n            var isKeyEqual = isDefined(key) && equalByValue(this.option(EDITING_EDITROWKEY_OPTION_NAME), key);\r\n            if (isKeyEqual) {\r\n                return this._getVisibleEditRowIndex() === rowIndex\r\n            }\r\n            return isKeyEqual\r\n        },\r\n        isEditCell: function(visibleRowIndex, columnIndex) {\r\n            return this._isEditRowByIndex(visibleRowIndex) && this._getVisibleEditColumnIndex() === columnIndex\r\n        },\r\n        getPopupContent: noop,\r\n        _isProcessedItem: function(item) {\r\n            return false\r\n        },\r\n        _getInsertRowIndex: function(items, change, isProcessedItems) {\r\n            var result = -1;\r\n            var dataController = this._dataController;\r\n            var key = this._getInsertAfterOrBeforeKey(change);\r\n            if (!isDefined(key) && 0 === items.length) {\r\n                result = 0\r\n            } else if (isDefined(key)) {\r\n                items.some((item, index) => {\r\n                    var isProcessedItem = isProcessedItems || this._isProcessedItem(item);\r\n                    if (isObject(item)) {\r\n                        if (isProcessedItem || isDefined(item[INSERT_INDEX])) {\r\n                            if (equalByValue(item.key, key)) {\r\n                                result = index\r\n                            }\r\n                        } else if (equalByValue(dataController.keyOf(item), key)) {\r\n                            result = index\r\n                        }\r\n                    }\r\n                    if (result >= 0) {\r\n                        var nextItem = items[result + 1];\r\n                        if (nextItem && (\"detail\" === nextItem.rowType || \"detailAdaptive\" === nextItem.rowType) && isDefined(change.insertAfterKey)) {\r\n                            return\r\n                        }\r\n                        if (isDefined(change.insertAfterKey)) {\r\n                            result += 1\r\n                        }\r\n                        return true\r\n                    }\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        _generateNewItem: function(key) {\r\n            var _this$_getInternalDat2;\r\n            var item = {\r\n                key: key\r\n            };\r\n            var insertInfo = null === (_this$_getInternalDat2 = this._getInternalData(key)) || void 0 === _this$_getInternalDat2 ? void 0 : _this$_getInternalDat2.insertInfo;\r\n            if (null !== insertInfo && void 0 !== insertInfo && insertInfo[INSERT_INDEX]) {\r\n                item[INSERT_INDEX] = insertInfo[INSERT_INDEX]\r\n            }\r\n            return item\r\n        },\r\n        _getLoadedRowIndex: function(items, change, isProcessedItems) {\r\n            var loadedRowIndex = this._getInsertRowIndex(items, change, isProcessedItems);\r\n            var dataController = this._dataController;\r\n            if (loadedRowIndex < 0) {\r\n                var newRowPosition = this._getNewRowPosition();\r\n                var pageIndex = dataController.pageIndex();\r\n                var insertAfterOrBeforeKey = this._getInsertAfterOrBeforeKey(change);\r\n                if (newRowPosition !== LAST_NEW_ROW_POSITION && 0 === pageIndex && !isDefined(insertAfterOrBeforeKey)) {\r\n                    loadedRowIndex = 0\r\n                } else if (newRowPosition === LAST_NEW_ROW_POSITION && dataController.isLastPageLoaded()) {\r\n                    loadedRowIndex = items.length\r\n                }\r\n            }\r\n            return loadedRowIndex\r\n        },\r\n        processItems: function(items, e) {\r\n            var changeType = e.changeType;\r\n            this.update(changeType);\r\n            var changes = this.getChanges();\r\n            changes.forEach(change => {\r\n                var _this$_getInternalDat3;\r\n                var isInsert = change.type === DATA_EDIT_DATA_INSERT_TYPE;\r\n                if (!isInsert) {\r\n                    return\r\n                }\r\n                var key = change.key;\r\n                var insertInfo = null === (_this$_getInternalDat3 = this._getInternalData(key)) || void 0 === _this$_getInternalDat3 ? void 0 : _this$_getInternalDat3.insertInfo;\r\n                if (!isDefined(key) || !isDefined(insertInfo)) {\r\n                    insertInfo = this._addInsertInfo(change);\r\n                    key = insertInfo.key\r\n                }\r\n                var loadedRowIndex = this._getLoadedRowIndex(items, change);\r\n                var item = this._generateNewItem(key);\r\n                if (loadedRowIndex >= 0) {\r\n                    items.splice(loadedRowIndex, 0, item)\r\n                }\r\n            });\r\n            return items\r\n        },\r\n        processDataItem: function(item, options, generateDataValues) {\r\n            var columns = options.visibleColumns;\r\n            var key = item.data[INSERT_INDEX] ? item.data.key : item.key;\r\n            var changes = this.getChanges();\r\n            var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n            item.isEditing = false;\r\n            if (editIndex >= 0) {\r\n                this._processDataItemCore(item, changes[editIndex], key, columns, generateDataValues)\r\n            }\r\n        },\r\n        _processDataItemCore: function(item, change, key, columns, generateDataValues) {\r\n            var {\r\n                data: data,\r\n                type: type\r\n            } = change;\r\n            switch (type) {\r\n                case DATA_EDIT_DATA_INSERT_TYPE:\r\n                    item.isNewRow = true;\r\n                    item.key = key;\r\n                    item.data = data;\r\n                    break;\r\n                case DATA_EDIT_DATA_UPDATE_TYPE:\r\n                    item.modified = true;\r\n                    item.oldData = item.data;\r\n                    item.data = createObjectWithChanges(item.data, data);\r\n                    item.modifiedValues = generateDataValues(data, columns, true);\r\n                    break;\r\n                case DATA_EDIT_DATA_REMOVE_TYPE:\r\n                    item.removed = true\r\n            }\r\n        },\r\n        _initNewRow: function(options) {\r\n            this.executeAction(\"onInitNewRow\", options);\r\n            if (options.promise) {\r\n                var deferred = new Deferred;\r\n                when(fromPromise(options.promise)).done(deferred.resolve).fail(createFailureHandler(deferred)).fail(arg => this._fireDataErrorOccurred(arg));\r\n                return deferred\r\n            }\r\n        },\r\n        _createInsertInfo: function() {\r\n            var insertInfo = {};\r\n            insertInfo[INSERT_INDEX] = this._getInsertIndex();\r\n            return insertInfo\r\n        },\r\n        _addInsertInfo: function(change, parentKey) {\r\n            var _this$_getInternalDat4;\r\n            var insertInfo;\r\n            var {\r\n                key: key\r\n            } = change;\r\n            if (!isDefined(key)) {\r\n                key = String(new Guid);\r\n                change.key = key\r\n            }\r\n            insertInfo = null === (_this$_getInternalDat4 = this._getInternalData(key)) || void 0 === _this$_getInternalDat4 ? void 0 : _this$_getInternalDat4.insertInfo;\r\n            if (!isDefined(insertInfo)) {\r\n                var insertAfterOrBeforeKey = this._getInsertAfterOrBeforeKey(change);\r\n                insertInfo = this._createInsertInfo();\r\n                if (!isDefined(insertAfterOrBeforeKey)) {\r\n                    this._setInsertAfterOrBeforeKey(change, parentKey)\r\n                }\r\n            }\r\n            this._addInternalData({\r\n                insertInfo: insertInfo,\r\n                key: key\r\n            });\r\n            return {\r\n                insertInfo: insertInfo,\r\n                key: key\r\n            }\r\n        },\r\n        _setInsertAfterOrBeforeKey: function(change, parentKey) {\r\n            var dataController = this._dataController;\r\n            var allItems = dataController.items(true);\r\n            var rowsView = this.getView(\"rowsView\");\r\n            var newRowPosition = this._getNewRowPosition();\r\n            switch (newRowPosition) {\r\n                case FIRST_NEW_ROW_POSITION:\r\n                case LAST_NEW_ROW_POSITION:\r\n                    break;\r\n                case PAGE_TOP_NEW_ROW_POSITION:\r\n                case PAGE_BOTTOM_NEW_ROW_POSITION:\r\n                    if (allItems.length) {\r\n                        var itemIndex = newRowPosition === PAGE_TOP_NEW_ROW_POSITION ? 0 : allItems.length - 1;\r\n                        change[0 === itemIndex ? \"insertBeforeKey\" : \"insertAfterKey\"] = allItems[itemIndex].key\r\n                    }\r\n                    break;\r\n                default:\r\n                    var isViewportBottom = newRowPosition === VIEWPORT_BOTTOM_NEW_ROW_POSITION;\r\n                    var visibleItemIndex = isViewportBottom ? null === rowsView || void 0 === rowsView ? void 0 : rowsView.getBottomVisibleItemIndex() : null === rowsView || void 0 === rowsView ? void 0 : rowsView.getTopVisibleItemIndex();\r\n                    var row = dataController.getVisibleRows()[visibleItemIndex];\r\n                    if (row && (!row.isEditing && \"detail\" === row.rowType || \"detailAdaptive\" === row.rowType)) {\r\n                        visibleItemIndex++\r\n                    }\r\n                    var insertKey = dataController.getKeyByRowIndex(visibleItemIndex);\r\n                    if (isDefined(insertKey)) {\r\n                        change.insertBeforeKey = insertKey\r\n                    }\r\n            }\r\n        },\r\n        _getInsertIndex: function() {\r\n            var maxInsertIndex = 0;\r\n            this.getChanges().forEach(editItem => {\r\n                var _this$_getInternalDat5;\r\n                var insertInfo = null === (_this$_getInternalDat5 = this._getInternalData(editItem.key)) || void 0 === _this$_getInternalDat5 ? void 0 : _this$_getInternalDat5.insertInfo;\r\n                if (isDefined(insertInfo) && editItem.type === DATA_EDIT_DATA_INSERT_TYPE && insertInfo[INSERT_INDEX] > maxInsertIndex) {\r\n                    maxInsertIndex = insertInfo[INSERT_INDEX]\r\n                }\r\n            });\r\n            return maxInsertIndex + 1\r\n        },\r\n        _getInsertAfterOrBeforeKey: function(insertChange) {\r\n            var _insertChange$insertA;\r\n            return null !== (_insertChange$insertA = insertChange.insertAfterKey) && void 0 !== _insertChange$insertA ? _insertChange$insertA : insertChange.insertBeforeKey\r\n        },\r\n        _getPageIndexToInsertRow: function() {\r\n            var newRowPosition = this._getNewRowPosition();\r\n            var dataController = this._dataController;\r\n            var pageIndex = dataController.pageIndex();\r\n            var lastPageIndex = dataController.pageCount() - 1;\r\n            if (newRowPosition === FIRST_NEW_ROW_POSITION && 0 !== pageIndex) {\r\n                return 0\r\n            } else if (newRowPosition === LAST_NEW_ROW_POSITION && pageIndex !== lastPageIndex) {\r\n                return lastPageIndex\r\n            }\r\n            return -1\r\n        },\r\n        addRow: function(parentKey) {\r\n            var dataController = this._dataController;\r\n            var store = dataController.store();\r\n            if (!store) {\r\n                dataController.fireError(\"E1052\", this.component.NAME);\r\n                return (new Deferred).reject()\r\n            }\r\n            return this._addRow(parentKey)\r\n        },\r\n        _addRow: function(parentKey) {\r\n            var dataController = this._dataController;\r\n            var store = dataController.store();\r\n            var key = store && store.key();\r\n            var param = {\r\n                data: {}\r\n            };\r\n            var oldEditRowIndex = this._getVisibleEditRowIndex();\r\n            var deferred = new Deferred;\r\n            this.refresh();\r\n            if (!this._allowRowAdding()) {\r\n                when(this._navigateToNewRow(oldEditRowIndex)).done(deferred.resolve).fail(deferred.reject);\r\n                return deferred.promise()\r\n            }\r\n            if (!key) {\r\n                param.data.__KEY__ = String(new Guid)\r\n            }\r\n            when(this._initNewRow(param, parentKey)).done(() => {\r\n                if (this._allowRowAdding()) {\r\n                    when(this._addRowCore(param.data, parentKey, oldEditRowIndex)).done(deferred.resolve).fail(deferred.reject)\r\n                } else {\r\n                    deferred.reject(\"cancel\")\r\n                }\r\n            }).fail(deferred.reject);\r\n            return deferred.promise()\r\n        },\r\n        _allowRowAdding: function() {\r\n            var insertIndex = this._getInsertIndex();\r\n            if (insertIndex > 1) {\r\n                return false\r\n            }\r\n            return true\r\n        },\r\n        _addRowCore: function(data, parentKey, initialOldEditRowIndex) {\r\n            var change = {\r\n                data: data,\r\n                type: DATA_EDIT_DATA_INSERT_TYPE\r\n            };\r\n            var editRowIndex = this._getVisibleEditRowIndex();\r\n            var insertInfo = this._addInsertInfo(change, parentKey);\r\n            var key = insertInfo.key;\r\n            this._setEditRowKey(key, true);\r\n            this._addChange(change);\r\n            return this._navigateToNewRow(initialOldEditRowIndex, change, editRowIndex)\r\n        },\r\n        _navigateToNewRow: function(oldEditRowIndex, change, editRowIndex) {\r\n            var _editRowIndex, _change;\r\n            var d = new Deferred;\r\n            var dataController = this._dataController;\r\n            var focusController = this.getController(\"focus\");\r\n            editRowIndex = null !== (_editRowIndex = editRowIndex) && void 0 !== _editRowIndex ? _editRowIndex : -1;\r\n            change = null !== (_change = change) && void 0 !== _change ? _change : this.getChanges().filter(c => c.type === DATA_EDIT_DATA_INSERT_TYPE)[0];\r\n            if (!change) {\r\n                return d.reject(\"cancel\").promise()\r\n            }\r\n            var pageIndexToInsertRow = this._getPageIndexToInsertRow();\r\n            var rowIndex = this._getLoadedRowIndex(dataController.items(), change, true);\r\n            var navigateToRowByKey = key => {\r\n                when(null === focusController || void 0 === focusController ? void 0 : focusController.navigateToRow(key)).done(() => {\r\n                    rowIndex = dataController.getRowIndexByKey(change.key);\r\n                    d.resolve()\r\n                })\r\n            };\r\n            var insertAfterOrBeforeKey = this._getInsertAfterOrBeforeKey(change);\r\n            if (pageIndexToInsertRow >= 0) {\r\n                dataController.pageIndex(pageIndexToInsertRow).done(() => {\r\n                    navigateToRowByKey(change.key)\r\n                }).fail(d.reject)\r\n            } else if (rowIndex < 0 && isDefined(insertAfterOrBeforeKey)) {\r\n                navigateToRowByKey(insertAfterOrBeforeKey)\r\n            } else {\r\n                dataController.updateItems({\r\n                    changeType: \"update\",\r\n                    rowIndices: [oldEditRowIndex, editRowIndex, rowIndex]\r\n                });\r\n                rowIndex = dataController.getRowIndexByKey(change.key);\r\n                if (rowIndex < 0) {\r\n                    navigateToRowByKey(change.key)\r\n                } else {\r\n                    d.resolve()\r\n                }\r\n            }\r\n            d.done(() => {\r\n                this._showAddedRow(rowIndex);\r\n                this._afterInsertRow(change.key)\r\n            });\r\n            return d.promise()\r\n        },\r\n        _showAddedRow: function(rowIndex) {\r\n            this._focusFirstEditableCellInRow(rowIndex)\r\n        },\r\n        _beforeFocusElementInRow: noop,\r\n        _focusFirstEditableCellInRow: function(rowIndex) {\r\n            var dataController = this._dataController;\r\n            var key = dataController.getKeyByRowIndex(rowIndex);\r\n            var $firstCell = this.getFirstEditableCellInRow(rowIndex);\r\n            this._editCellInProgress = true;\r\n            this._delayedInputFocus($firstCell, () => {\r\n                rowIndex = dataController.getRowIndexByKey(key);\r\n                this._editCellInProgress = false;\r\n                this._beforeFocusElementInRow(rowIndex)\r\n            })\r\n        },\r\n        _isEditingStart: function(options) {\r\n            this.executeAction(\"onEditingStart\", options);\r\n            return options.cancel\r\n        },\r\n        _beforeUpdateItems: noop,\r\n        _getVisibleEditColumnIndex: function() {\r\n            var editColumnName = this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME);\r\n            if (!isDefined(editColumnName)) {\r\n                return -1\r\n            }\r\n            return this._columnsController.getVisibleColumnIndex(editColumnName)\r\n        },\r\n        _setEditColumnNameByIndex: function(index, silent) {\r\n            var _visibleColumns$index;\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            this._setEditColumnName(null === (_visibleColumns$index = visibleColumns[index]) || void 0 === _visibleColumns$index ? void 0 : _visibleColumns$index.name, silent)\r\n        },\r\n        _setEditColumnName: function(name, silent) {\r\n            if (silent) {\r\n                this._silentOption(EDITING_EDITCOLUMNNAME_OPTION_NAME, name)\r\n            } else {\r\n                this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME, name)\r\n            }\r\n        },\r\n        _resetEditColumnName: function() {\r\n            this._setEditColumnName(null, true)\r\n        },\r\n        _getEditColumn: function() {\r\n            var editColumnName = this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME);\r\n            return this._getColumnByName(editColumnName)\r\n        },\r\n        _getColumnByName: function(name) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var editColumn;\r\n            isDefined(name) && visibleColumns.some(column => {\r\n                if (column.name === name) {\r\n                    editColumn = column;\r\n                    return true\r\n                }\r\n            });\r\n            return editColumn\r\n        },\r\n        _getVisibleEditRowIndex: function(columnName) {\r\n            var dataController = this._dataController;\r\n            var editRowKey = this.option(EDITING_EDITROWKEY_OPTION_NAME);\r\n            var rowIndex = dataController.getRowIndexByKey(editRowKey);\r\n            if (-1 === rowIndex) {\r\n                return rowIndex\r\n            }\r\n            return rowIndex + this._getEditRowIndexCorrection(columnName)\r\n        },\r\n        _getEditRowIndexCorrection: function(columnName) {\r\n            var editColumn = columnName ? this._getColumnByName(columnName) : this._getEditColumn();\r\n            var isColumnHidden = \"adaptiveHidden\" === (null === editColumn || void 0 === editColumn ? void 0 : editColumn.visibleWidth);\r\n            return isColumnHidden ? 1 : 0\r\n        },\r\n        _resetEditRowKey: function() {\r\n            this._setEditRowKey(null, true)\r\n        },\r\n        _resetEditIndices: function() {\r\n            this._resetEditColumnName();\r\n            this._resetEditRowKey()\r\n        },\r\n        editRow: function(rowIndex) {\r\n            var _item$oldData;\r\n            var dataController = this._dataController;\r\n            var items = dataController.items();\r\n            var item = items[rowIndex];\r\n            var params = {\r\n                data: item && item.data,\r\n                cancel: false\r\n            };\r\n            var oldRowIndex = this._getVisibleEditRowIndex();\r\n            if (!item) {\r\n                return\r\n            }\r\n            if (rowIndex === oldRowIndex) {\r\n                return true\r\n            }\r\n            if (void 0 === item.key) {\r\n                this._dataController.fireError(\"E1043\");\r\n                return\r\n            }\r\n            if (!item.isNewRow) {\r\n                params.key = item.key\r\n            }\r\n            if (this._isEditingStart(params)) {\r\n                return\r\n            }\r\n            this.resetChanges();\r\n            this.init();\r\n            this._resetEditColumnName();\r\n            this._pageIndex = dataController.pageIndex();\r\n            this._addInternalData({\r\n                key: item.key,\r\n                oldData: null !== (_item$oldData = item.oldData) && void 0 !== _item$oldData ? _item$oldData : item.data\r\n            });\r\n            this._setEditRowKey(item.key)\r\n        },\r\n        _editRowFromOptionChanged: function(rowIndex, oldRowIndex) {\r\n            var rowIndices = [oldRowIndex, rowIndex];\r\n            this._beforeUpdateItems(rowIndices, rowIndex, oldRowIndex);\r\n            this._editRowFromOptionChangedCore(rowIndices, rowIndex, oldRowIndex)\r\n        },\r\n        _editRowFromOptionChangedCore: function(rowIndices, rowIndex, oldRowIndex) {\r\n            this._needFocusEditor = true;\r\n            this._dataController.updateItems({\r\n                changeType: \"update\",\r\n                rowIndices: rowIndices\r\n            })\r\n        },\r\n        _focusEditorIfNeed: noop,\r\n        _showEditPopup: noop,\r\n        _repaintEditPopup: noop,\r\n        _getEditPopupHiddenHandler: function() {\r\n            return e => {\r\n                if (this.isEditing()) {\r\n                    this.cancelEditData()\r\n                }\r\n            }\r\n        },\r\n        _getPopupEditFormTemplate: noop,\r\n        _getSaveButtonConfig: function() {\r\n            return {\r\n                text: this.option(\"editing.texts.saveRowChanges\"),\r\n                onClick: this.saveEditData.bind(this)\r\n            }\r\n        },\r\n        _getCancelButtonConfig: function() {\r\n            return {\r\n                text: this.option(\"editing.texts.cancelRowChanges\"),\r\n                onClick: this.cancelEditData.bind(this)\r\n            }\r\n        },\r\n        _removeInternalData: function(key) {\r\n            var internalData = this._getInternalData(key);\r\n            var index = this._internalState.indexOf(internalData);\r\n            if (index > -1) {\r\n                this._internalState.splice(index, 1)\r\n            }\r\n        },\r\n        _updateInsertAfterOrBeforeKeys: function(changes, index) {\r\n            var removeChange = changes[index];\r\n            changes.forEach(change => {\r\n                var insertAfterOrBeforeKey = this._getInsertAfterOrBeforeKey(change);\r\n                if (equalByValue(insertAfterOrBeforeKey, removeChange.key)) {\r\n                    change[isDefined(change.insertAfterKey) ? \"insertAfterKey\" : \"insertBeforeKey\"] = this._getInsertAfterOrBeforeKey(removeChange)\r\n                }\r\n            })\r\n        },\r\n        _removeChange: function(index) {\r\n            if (index >= 0) {\r\n                var changes = [...this.getChanges()];\r\n                var key = changes[index].key;\r\n                this._removeInternalData(key);\r\n                this._updateInsertAfterOrBeforeKeys(changes, index);\r\n                changes.splice(index, 1);\r\n                this._silentOption(EDITING_CHANGES_OPTION_NAME, changes);\r\n                if (equalByValue(this.option(EDITING_EDITROWKEY_OPTION_NAME), key)) {\r\n                    this._resetEditIndices()\r\n                }\r\n            }\r\n        },\r\n        executeOperation: function(deferred, func) {\r\n            this._lastOperation && this._lastOperation.reject();\r\n            this._lastOperation = deferred;\r\n            this.waitForDeferredOperations().done(() => {\r\n                if (\"rejected\" === deferred.state()) {\r\n                    return\r\n                }\r\n                func();\r\n                this._lastOperation = null\r\n            }).fail(() => {\r\n                deferred.reject();\r\n                this._lastOperation = null\r\n            })\r\n        },\r\n        waitForDeferredOperations: function() {\r\n            return when(...this._deferreds)\r\n        },\r\n        _processCanceledEditingCell: noop,\r\n        _repaintEditCell: function(column, oldColumn, oldEditRowIndex) {\r\n            this._needFocusEditor = true;\r\n            if (!column || !column.showEditorAlways || oldColumn && !oldColumn.showEditorAlways) {\r\n                this._editCellInProgress = true;\r\n                this.getController(\"editorFactory\").loseFocus();\r\n                this._dataController.updateItems({\r\n                    changeType: \"update\",\r\n                    rowIndices: [oldEditRowIndex, this._getVisibleEditRowIndex()]\r\n                })\r\n            } else if (column !== oldColumn) {\r\n                this._dataController.updateItems({\r\n                    changeType: \"update\",\r\n                    rowIndices: []\r\n                })\r\n            }\r\n        },\r\n        _delayedInputFocus: function($cell, beforeFocusCallback, callBeforeFocusCallbackAlways) {\r\n            var inputFocus = () => {\r\n                if (beforeFocusCallback) {\r\n                    beforeFocusCallback()\r\n                }\r\n                if ($cell) {\r\n                    var $focusableElement = $cell.find(FOCUSABLE_ELEMENT_SELECTOR).first();\r\n                    gridCoreUtils.focusAndSelectElement(this, $focusableElement)\r\n                }\r\n                this._beforeFocusCallback = null\r\n            };\r\n            if (devices.real().ios || devices.real().android) {\r\n                inputFocus()\r\n            } else {\r\n                if (this._beforeFocusCallback) {\r\n                    this._beforeFocusCallback()\r\n                }\r\n                clearTimeout(this._inputFocusTimeoutID);\r\n                if (callBeforeFocusCallbackAlways) {\r\n                    this._beforeFocusCallback = beforeFocusCallback\r\n                }\r\n                this._inputFocusTimeoutID = setTimeout(inputFocus)\r\n            }\r\n        },\r\n        _focusEditingCell: function(beforeFocusCallback, $editCell, callBeforeFocusCallbackAlways) {\r\n            var rowsView = this.getView(\"rowsView\");\r\n            var editColumnIndex = this._getVisibleEditColumnIndex();\r\n            $editCell = $editCell || rowsView && rowsView._getCellElement(this._getVisibleEditRowIndex(), editColumnIndex);\r\n            if ($editCell) {\r\n                this._delayedInputFocus($editCell, beforeFocusCallback, callBeforeFocusCallbackAlways)\r\n            }\r\n        },\r\n        deleteRow: function(rowIndex) {\r\n            this._checkAndDeleteRow(rowIndex)\r\n        },\r\n        _checkAndDeleteRow: function(rowIndex) {\r\n            var editingOptions = this.option(\"editing\");\r\n            var editingTexts = null === editingOptions || void 0 === editingOptions ? void 0 : editingOptions.texts;\r\n            var confirmDelete = null === editingOptions || void 0 === editingOptions ? void 0 : editingOptions.confirmDelete;\r\n            var confirmDeleteMessage = null === editingTexts || void 0 === editingTexts ? void 0 : editingTexts.confirmDeleteMessage;\r\n            var item = this._dataController.items()[rowIndex];\r\n            var allowDeleting = !this.isEditing() || item.isNewRow;\r\n            if (item && allowDeleting) {\r\n                if (!confirmDelete || !confirmDeleteMessage) {\r\n                    this._deleteRowCore(rowIndex)\r\n                } else {\r\n                    var confirmDeleteTitle = editingTexts && editingTexts.confirmDeleteTitle;\r\n                    var showDialogTitle = isDefined(confirmDeleteTitle) && confirmDeleteTitle.length > 0;\r\n                    confirm(confirmDeleteMessage, confirmDeleteTitle, showDialogTitle).done(confirmResult => {\r\n                        if (confirmResult) {\r\n                            this._deleteRowCore(rowIndex)\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        _deleteRowCore: function(rowIndex) {\r\n            var dataController = this._dataController;\r\n            var item = dataController.items()[rowIndex];\r\n            var key = item && item.key;\r\n            var oldEditRowIndex = this._getVisibleEditRowIndex();\r\n            this.refresh();\r\n            var changes = this.getChanges();\r\n            var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n            if (editIndex >= 0) {\r\n                if (changes[editIndex].type === DATA_EDIT_DATA_INSERT_TYPE) {\r\n                    this._removeChange(editIndex)\r\n                } else {\r\n                    this._addChange({\r\n                        key: key,\r\n                        type: DATA_EDIT_DATA_REMOVE_TYPE\r\n                    })\r\n                }\r\n            } else {\r\n                this._addChange({\r\n                    key: key,\r\n                    oldData: item.data,\r\n                    type: DATA_EDIT_DATA_REMOVE_TYPE\r\n                })\r\n            }\r\n            return this._afterDeleteRow(rowIndex, oldEditRowIndex)\r\n        },\r\n        _afterDeleteRow: function(rowIndex, oldEditRowIndex) {\r\n            return this.saveEditData()\r\n        },\r\n        undeleteRow: function(rowIndex) {\r\n            var dataController = this._dataController;\r\n            var item = dataController.items()[rowIndex];\r\n            var oldEditRowIndex = this._getVisibleEditRowIndex();\r\n            var key = item && item.key;\r\n            var changes = this.getChanges();\r\n            if (item) {\r\n                var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n                if (editIndex >= 0) {\r\n                    var {\r\n                        data: data\r\n                    } = changes[editIndex];\r\n                    if (isEmptyObject(data)) {\r\n                        this._removeChange(editIndex)\r\n                    } else {\r\n                        this._addChange({\r\n                            key: key,\r\n                            type: DATA_EDIT_DATA_UPDATE_TYPE\r\n                        })\r\n                    }\r\n                    dataController.updateItems({\r\n                        changeType: \"update\",\r\n                        rowIndices: [oldEditRowIndex, rowIndex]\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        _fireOnSaving: function() {\r\n            var onSavingParams = {\r\n                cancel: false,\r\n                promise: null,\r\n                changes: [...this.getChanges()]\r\n            };\r\n            this.executeAction(\"onSaving\", onSavingParams);\r\n            var d = new Deferred;\r\n            when(fromPromise(onSavingParams.promise)).done(() => {\r\n                d.resolve(onSavingParams)\r\n            }).fail(arg => {\r\n                createFailureHandler(d);\r\n                this._fireDataErrorOccurred(arg);\r\n                d.resolve({\r\n                    cancel: true\r\n                })\r\n            });\r\n            return d\r\n        },\r\n        _executeEditingAction: function(actionName, params, func) {\r\n            if (this.component._disposed) {\r\n                return null\r\n            }\r\n            var deferred = new Deferred;\r\n            this.executeAction(actionName, params);\r\n            when(fromPromise(params.cancel)).done((function(cancel) {\r\n                if (cancel) {\r\n                    setTimeout((function() {\r\n                        deferred.resolve(\"cancel\")\r\n                    }))\r\n                } else {\r\n                    func(params).done(deferred.resolve).fail(createFailureHandler(deferred))\r\n                }\r\n            })).fail(createFailureHandler(deferred));\r\n            return deferred\r\n        },\r\n        _processChanges: function(deferreds, results, dataChanges, changes) {\r\n            var store = this._dataController.store();\r\n            each(changes, (index, change) => {\r\n                var oldData = this._getOldData(change.key);\r\n                var {\r\n                    data: data,\r\n                    type: type\r\n                } = change;\r\n                var changeCopy = _extends({}, change);\r\n                var deferred;\r\n                var params;\r\n                if (this._beforeSaveEditData(change, index)) {\r\n                    return\r\n                }\r\n                switch (type) {\r\n                    case DATA_EDIT_DATA_REMOVE_TYPE:\r\n                        params = {\r\n                            data: oldData,\r\n                            key: change.key,\r\n                            cancel: false\r\n                        };\r\n                        deferred = this._executeEditingAction(\"onRowRemoving\", params, (function() {\r\n                            return store.remove(change.key).done((function(key) {\r\n                                dataChanges.push({\r\n                                    type: \"remove\",\r\n                                    key: key\r\n                                })\r\n                            }))\r\n                        }));\r\n                        break;\r\n                    case DATA_EDIT_DATA_INSERT_TYPE:\r\n                        params = {\r\n                            data: data,\r\n                            cancel: false\r\n                        };\r\n                        deferred = this._executeEditingAction(\"onRowInserting\", params, (function() {\r\n                            return store.insert(params.data).done((function(data, key) {\r\n                                if (isDefined(key)) {\r\n                                    changeCopy.key = key\r\n                                }\r\n                                if (data && isObject(data) && data !== params.data) {\r\n                                    changeCopy.data = data\r\n                                }\r\n                                dataChanges.push({\r\n                                    type: \"insert\",\r\n                                    data: data,\r\n                                    index: 0\r\n                                })\r\n                            }))\r\n                        }));\r\n                        break;\r\n                    case DATA_EDIT_DATA_UPDATE_TYPE:\r\n                        params = {\r\n                            newData: data,\r\n                            oldData: oldData,\r\n                            key: change.key,\r\n                            cancel: false\r\n                        };\r\n                        deferred = this._executeEditingAction(\"onRowUpdating\", params, (function() {\r\n                            return store.update(change.key, params.newData).done((function(data, key) {\r\n                                if (data && isObject(data) && data !== params.newData) {\r\n                                    changeCopy.data = data\r\n                                }\r\n                                dataChanges.push({\r\n                                    type: \"update\",\r\n                                    key: key,\r\n                                    data: data\r\n                                })\r\n                            }))\r\n                        }))\r\n                }\r\n                changes[index] = changeCopy;\r\n                if (deferred) {\r\n                    var doneDeferred = new Deferred;\r\n                    deferred.always((function(data) {\r\n                        results.push({\r\n                            key: change.key,\r\n                            result: data\r\n                        })\r\n                    })).always(doneDeferred.resolve);\r\n                    deferreds.push(doneDeferred.promise())\r\n                }\r\n            })\r\n        },\r\n        _processRemoveIfError: function(changes, editIndex) {\r\n            var change = changes[editIndex];\r\n            if ((null === change || void 0 === change ? void 0 : change.type) === DATA_EDIT_DATA_REMOVE_TYPE) {\r\n                if (editIndex >= 0) {\r\n                    changes.splice(editIndex, 1)\r\n                }\r\n            }\r\n            return true\r\n        },\r\n        _processRemove: function(changes, editIndex, cancel) {\r\n            var change = changes[editIndex];\r\n            if (!cancel || !change || change.type === DATA_EDIT_DATA_REMOVE_TYPE) {\r\n                return this._processRemoveCore(changes, editIndex, !cancel || !change)\r\n            }\r\n        },\r\n        _processRemoveCore: function(changes, editIndex) {\r\n            if (editIndex >= 0) {\r\n                changes.splice(editIndex, 1)\r\n            }\r\n            return true\r\n        },\r\n        _processSaveEditDataResult: function(results) {\r\n            var hasSavedData = false;\r\n            var changes = [...this.getChanges()];\r\n            var changesLength = changes.length;\r\n            for (var i = 0; i < results.length; i++) {\r\n                var arg = results[i].result;\r\n                var cancel = \"cancel\" === arg;\r\n                var editIndex = gridCoreUtils.getIndexByKey(results[i].key, changes);\r\n                var change = changes[editIndex];\r\n                var isError = arg && arg instanceof Error;\r\n                if (isError) {\r\n                    if (change) {\r\n                        this._addInternalData({\r\n                            key: change.key,\r\n                            error: arg\r\n                        })\r\n                    }\r\n                    this._fireDataErrorOccurred(arg);\r\n                    if (this._processRemoveIfError(changes, editIndex)) {\r\n                        break\r\n                    }\r\n                } else if (this._processRemove(changes, editIndex, cancel)) {\r\n                    hasSavedData = !cancel\r\n                }\r\n            }\r\n            if (changes.length < changesLength) {\r\n                this._silentOption(EDITING_CHANGES_OPTION_NAME, changes)\r\n            }\r\n            return hasSavedData\r\n        },\r\n        _fireSaveEditDataEvents: function(changes) {\r\n            each(changes, (_, _ref) => {\r\n                var {\r\n                    data: data,\r\n                    key: key,\r\n                    type: type\r\n                } = _ref;\r\n                var internalData = this._addInternalData({\r\n                    key: key\r\n                });\r\n                var params = {\r\n                    key: key,\r\n                    data: data\r\n                };\r\n                if (internalData.error) {\r\n                    params.error = internalData.error\r\n                }\r\n                switch (type) {\r\n                    case DATA_EDIT_DATA_REMOVE_TYPE:\r\n                        this.executeAction(\"onRowRemoved\", extend({}, params, {\r\n                            data: internalData.oldData\r\n                        }));\r\n                        break;\r\n                    case DATA_EDIT_DATA_INSERT_TYPE:\r\n                        this.executeAction(\"onRowInserted\", params);\r\n                        break;\r\n                    case DATA_EDIT_DATA_UPDATE_TYPE:\r\n                        this.executeAction(\"onRowUpdated\", params)\r\n                }\r\n            });\r\n            this.executeAction(\"onSaved\", {\r\n                changes: changes\r\n            })\r\n        },\r\n        saveEditData: function() {\r\n            var deferred = new Deferred;\r\n            this.waitForDeferredOperations().done(() => {\r\n                if (this.isSaving()) {\r\n                    this._resolveAfterSave(deferred);\r\n                    return\r\n                }\r\n                when(this._beforeSaveEditData()).done(cancel => {\r\n                    if (cancel) {\r\n                        this._resolveAfterSave(deferred, {\r\n                            cancel: cancel\r\n                        });\r\n                        return\r\n                    }\r\n                    this._saving = true;\r\n                    var options = {};\r\n                    this._saveEditDataInner(options).always(() => {\r\n                        this._saving = false;\r\n                        options.needFocusEditCell && this._focusEditingCell()\r\n                    }).done(deferred.resolve).fail(deferred.reject)\r\n                }).fail(deferred.reject)\r\n            }).fail(deferred.reject);\r\n            return deferred.promise()\r\n        },\r\n        _resolveAfterSave: function(deferred) {\r\n            var {\r\n                cancel: cancel,\r\n                error: error\r\n            } = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\r\n            when(this._afterSaveEditData(cancel)).done((function() {\r\n                deferred.resolve(error)\r\n            })).fail(deferred.reject)\r\n        },\r\n        _saveEditDataInner: function(options) {\r\n            var results = [];\r\n            var deferreds = [];\r\n            var dataChanges = [];\r\n            var dataController = this._dataController;\r\n            var dataSource = dataController.dataSource();\r\n            var result = new Deferred;\r\n            when(this._fireOnSaving()).done(_ref2 => {\r\n                var {\r\n                    cancel: cancel,\r\n                    changes: changes\r\n                } = _ref2;\r\n                if (cancel) {\r\n                    return result.resolve().promise()\r\n                }\r\n                this._processChanges(deferreds, results, dataChanges, changes);\r\n                if (deferreds.length) {\r\n                    null === dataSource || void 0 === dataSource ? void 0 : dataSource.beginLoading();\r\n                    when(...deferreds).done(() => {\r\n                        if (this._processSaveEditDataResult(results)) {\r\n                            this._endSaving(dataChanges, changes, result)\r\n                        } else {\r\n                            null === dataSource || void 0 === dataSource ? void 0 : dataSource.endLoading();\r\n                            result.resolve()\r\n                        }\r\n                    }).fail(error => {\r\n                        null === dataSource || void 0 === dataSource ? void 0 : dataSource.endLoading();\r\n                        result.resolve(error)\r\n                    });\r\n                    return result.always(() => {\r\n                        options.needFocusEditCell = true\r\n                    }).promise()\r\n                }\r\n                this._cancelSaving(result)\r\n            }).fail(result.reject);\r\n            return result.promise()\r\n        },\r\n        _beforeEndSaving: function(changes) {\r\n            this._resetEditIndices()\r\n        },\r\n        _endSaving: function(dataChanges, changes, deferred) {\r\n            var dataSource = this._dataController.dataSource();\r\n            this._beforeEndSaving(changes);\r\n            null === dataSource || void 0 === dataSource ? void 0 : dataSource.endLoading();\r\n            this._refreshDataAfterSave(dataChanges, changes, deferred)\r\n        },\r\n        _cancelSaving: function(result) {\r\n            this.executeAction(\"onSaved\", {\r\n                changes: []\r\n            });\r\n            this._resolveAfterSave(result)\r\n        },\r\n        _refreshDataAfterSave: function(dataChanges, changes, deferred) {\r\n            var dataController = this._dataController;\r\n            var refreshMode = this.option(\"editing.refreshMode\");\r\n            var isFullRefresh = \"reshape\" !== refreshMode && \"repaint\" !== refreshMode;\r\n            if (!isFullRefresh) {\r\n                dataController.push(dataChanges)\r\n            }\r\n            when(dataController.refresh({\r\n                selection: isFullRefresh,\r\n                reload: isFullRefresh,\r\n                load: \"reshape\" === refreshMode,\r\n                changesOnly: this.option(\"repaintChangesOnly\")\r\n            })).always(() => {\r\n                this._fireSaveEditDataEvents(changes)\r\n            }).done(() => {\r\n                this._resolveAfterSave(deferred)\r\n            }).fail(error => {\r\n                this._resolveAfterSave(deferred, {\r\n                    error: error\r\n                })\r\n            })\r\n        },\r\n        isSaving: function() {\r\n            return this._saving\r\n        },\r\n        _updateEditColumn: function() {\r\n            var isEditColumnVisible = this._isEditColumnVisible();\r\n            var useIcons = this.option(\"editing.useIcons\");\r\n            var cssClass = COMMAND_EDIT_CLASS + (useIcons ? \" \" + COMMAND_EDIT_WITH_ICONS_CLASS : \"\");\r\n            this._columnsController.addCommandColumn({\r\n                type: \"buttons\",\r\n                command: \"edit\",\r\n                visible: isEditColumnVisible,\r\n                cssClass: cssClass,\r\n                width: \"auto\",\r\n                alignment: \"center\",\r\n                cellTemplate: this._getEditCommandCellTemplate(),\r\n                fixedPosition: \"right\"\r\n            });\r\n            this._columnsController.columnOption(\"command:edit\", {\r\n                visible: isEditColumnVisible,\r\n                cssClass: cssClass\r\n            })\r\n        },\r\n        _isEditColumnVisible: function() {\r\n            var editingOptions = this.option(\"editing\");\r\n            return editingOptions.allowDeleting\r\n        },\r\n        _isEditButtonDisabled: function() {\r\n            var hasChanges = this.hasChanges();\r\n            var isEditRowDefined = isDefined(this.option(\"editing.editRowKey\"));\r\n            return !(isEditRowDefined || hasChanges)\r\n        },\r\n        _updateEditButtons: function() {\r\n            var headerPanel = this.getView(\"headerPanel\");\r\n            var isButtonDisabled = this._isEditButtonDisabled();\r\n            if (headerPanel) {\r\n                headerPanel.setToolbarItemDisabled(\"saveButton\", isButtonDisabled);\r\n                headerPanel.setToolbarItemDisabled(\"revertButton\", isButtonDisabled)\r\n            }\r\n        },\r\n        _applyModified: function($element) {\r\n            $element && $element.addClass(CELL_MODIFIED)\r\n        },\r\n        _beforeCloseEditCellInBatchMode: noop,\r\n        cancelEditData: function() {\r\n            var changes = this.getChanges();\r\n            var params = {\r\n                cancel: false,\r\n                changes: changes\r\n            };\r\n            this.executeAction(\"onEditCanceling\", params);\r\n            if (!params.cancel) {\r\n                this._cancelEditDataCore();\r\n                this.executeAction(\"onEditCanceled\", {\r\n                    changes: changes\r\n                })\r\n            }\r\n        },\r\n        _cancelEditDataCore: function() {\r\n            var rowIndex = this._getVisibleEditRowIndex();\r\n            this._beforeCancelEditData();\r\n            this.init();\r\n            this.resetChanges();\r\n            this._resetEditColumnName();\r\n            this._resetEditRowKey();\r\n            this._afterCancelEditData(rowIndex)\r\n        },\r\n        _afterCancelEditData: function(rowIndex) {\r\n            var dataController = this._dataController;\r\n            dataController.updateItems({\r\n                repaintChangesOnly: this.option(\"repaintChangesOnly\")\r\n            })\r\n        },\r\n        _hideEditPopup: noop,\r\n        hasEditData: function() {\r\n            return this.hasChanges()\r\n        },\r\n        update: function(changeType) {\r\n            var dataController = this._dataController;\r\n            if (dataController && this._pageIndex !== dataController.pageIndex()) {\r\n                if (\"refresh\" === changeType) {\r\n                    this.refresh(true)\r\n                }\r\n                this._pageIndex = dataController.pageIndex()\r\n            }\r\n            this._updateEditButtons()\r\n        },\r\n        _getRowIndicesForCascadeUpdating: function(row, skipCurrentRow) {\r\n            return skipCurrentRow ? [] : [row.rowIndex]\r\n        },\r\n        addDeferred: function(deferred) {\r\n            if (this._deferreds.indexOf(deferred) < 0) {\r\n                this._deferreds.push(deferred);\r\n                deferred.always(() => {\r\n                    var index = this._deferreds.indexOf(deferred);\r\n                    if (index >= 0) {\r\n                        this._deferreds.splice(index, 1)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        _prepareChange: function(options, value, text) {\r\n            var _options$row;\r\n            var newData = {};\r\n            var oldData = null === (_options$row = options.row) || void 0 === _options$row ? void 0 : _options$row.data;\r\n            var rowKey = options.key;\r\n            var deferred = new Deferred;\r\n            if (void 0 !== rowKey) {\r\n                options.value = value;\r\n                var setCellValueResult = fromPromise(options.column.setCellValue(newData, value, extend(true, {}, oldData), text));\r\n                setCellValueResult.done((function() {\r\n                    deferred.resolve({\r\n                        data: newData,\r\n                        key: rowKey,\r\n                        oldData: oldData,\r\n                        type: DATA_EDIT_DATA_UPDATE_TYPE\r\n                    })\r\n                })).fail(createFailureHandler(deferred)).fail(arg => this._fireDataErrorOccurred(arg));\r\n                if (isDefined(text) && options.column.displayValueMap) {\r\n                    options.column.displayValueMap[value] = text\r\n                }\r\n                this._updateRowValues(options);\r\n                this.addDeferred(deferred)\r\n            }\r\n            return deferred\r\n        },\r\n        _updateRowValues: function(options) {\r\n            if (options.values) {\r\n                var dataController = this._dataController;\r\n                var rowIndex = dataController.getRowIndexByKey(options.key);\r\n                var row = dataController.getVisibleRows()[rowIndex];\r\n                if (row) {\r\n                    options.values = row.values\r\n                }\r\n                options.values[options.columnIndex] = options.value\r\n            }\r\n        },\r\n        updateFieldValue: function(options, value, text, forceUpdateRow) {\r\n            var rowKey = options.key;\r\n            var deferred = new Deferred;\r\n            if (void 0 === rowKey) {\r\n                this._dataController.fireError(\"E1043\")\r\n            }\r\n            if (options.column.setCellValue) {\r\n                this._prepareChange(options, value, text).done(params => {\r\n                    when(this._applyChange(options, params, forceUpdateRow)).always(() => {\r\n                        deferred.resolve()\r\n                    })\r\n                })\r\n            } else {\r\n                deferred.resolve()\r\n            }\r\n            return deferred.promise()\r\n        },\r\n        _focusPreviousEditingCellIfNeed: function(options) {\r\n            if (this.hasEditData() && !this.isEditCell(options.rowIndex, options.columnIndex)) {\r\n                this._focusEditingCell();\r\n                this._updateEditRow(options.row, true);\r\n                return true\r\n            }\r\n        },\r\n        _needUpdateRow: function(column) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            if (!column) {\r\n                column = this._getEditColumn()\r\n            }\r\n            var isCustomSetCellValue = column && column.setCellValue !== column.defaultSetCellValue;\r\n            var isCustomCalculateCellValue = visibleColumns.some(visibleColumn => visibleColumn.calculateCellValue !== visibleColumn.defaultCalculateCellValue);\r\n            return isCustomSetCellValue || isCustomCalculateCellValue\r\n        },\r\n        _applyChange: function(options, params, forceUpdateRow) {\r\n            var changeOptions = _extends({}, options, {\r\n                forceUpdateRow: forceUpdateRow\r\n            });\r\n            this._addChange(params, changeOptions);\r\n            this._updateEditButtons();\r\n            return this._applyChangeCore(options, changeOptions.forceUpdateRow)\r\n        },\r\n        _applyChangeCore: function(options, forceUpdateRow) {\r\n            var isCustomSetCellValue = options.column.setCellValue !== options.column.defaultSetCellValue;\r\n            var row = options.row;\r\n            if (row) {\r\n                if (forceUpdateRow || isCustomSetCellValue) {\r\n                    this._updateEditRow(row, forceUpdateRow, isCustomSetCellValue)\r\n                } else if (row.update) {\r\n                    row.update()\r\n                }\r\n            }\r\n        },\r\n        _updateEditRowCore: function(row, skipCurrentRow, isCustomSetCellValue) {\r\n            this._dataController.updateItems({\r\n                changeType: \"update\",\r\n                rowIndices: this._getRowIndicesForCascadeUpdating(row, skipCurrentRow)\r\n            })\r\n        },\r\n        _updateEditRow: function(row, forceUpdateRow, isCustomSetCellValue) {\r\n            if (forceUpdateRow) {\r\n                this._updateRowImmediately(row, forceUpdateRow, isCustomSetCellValue)\r\n            } else {\r\n                this._updateRowWithDelay(row, isCustomSetCellValue)\r\n            }\r\n        },\r\n        _updateRowImmediately: function(row, forceUpdateRow, isCustomSetCellValue) {\r\n            this._updateEditRowCore(row, !forceUpdateRow, isCustomSetCellValue);\r\n            this._validateEditFormAfterUpdate(row, isCustomSetCellValue);\r\n            if (!forceUpdateRow) {\r\n                this._focusEditingCell()\r\n            }\r\n        },\r\n        _updateRowWithDelay: function(row, isCustomSetCellValue) {\r\n            var deferred = new Deferred;\r\n            this.addDeferred(deferred);\r\n            setTimeout(() => {\r\n                var $focusedElement = $(domAdapter.getActiveElement());\r\n                var columnIndex = this._rowsView.getCellIndex($focusedElement, row.rowIndex);\r\n                var focusedElement = $focusedElement.get(0);\r\n                var selectionRange = gridCoreUtils.getSelectionRange(focusedElement);\r\n                this._updateEditRowCore(row, false, isCustomSetCellValue);\r\n                this._validateEditFormAfterUpdate(row, isCustomSetCellValue);\r\n                if (columnIndex >= 0) {\r\n                    var $focusedItem = this._rowsView._getCellElement(row.rowIndex, columnIndex);\r\n                    this._delayedInputFocus($focusedItem, () => {\r\n                        setTimeout(() => {\r\n                            focusedElement = domAdapter.getActiveElement();\r\n                            if (selectionRange.selectionStart >= 0) {\r\n                                gridCoreUtils.setSelectionRange(focusedElement, selectionRange)\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n                deferred.resolve()\r\n            })\r\n        },\r\n        _validateEditFormAfterUpdate: noop,\r\n        _addChange: function(changeParams, options) {\r\n            var _this$getChanges;\r\n            var row = null === options || void 0 === options ? void 0 : options.row;\r\n            var changes = [...this.getChanges()];\r\n            var index = gridCoreUtils.getIndexByKey(changeParams.key, changes);\r\n            if (index < 0) {\r\n                index = changes.length;\r\n                this._addInternalData({\r\n                    key: changeParams.key,\r\n                    oldData: changeParams.oldData\r\n                });\r\n                delete changeParams.oldData;\r\n                changes.push(changeParams)\r\n            }\r\n            var change = _extends({}, changes[index]);\r\n            if (change) {\r\n                if (changeParams.data) {\r\n                    change.data = createObjectWithChanges(change.data, changeParams.data)\r\n                }\r\n                if ((!change.type || !changeParams.data) && changeParams.type) {\r\n                    change.type = changeParams.type\r\n                }\r\n                if (row) {\r\n                    row.oldData = this._getOldData(row.key);\r\n                    row.data = createObjectWithChanges(row.data, changeParams.data)\r\n                }\r\n            }\r\n            changes[index] = change;\r\n            this._silentOption(EDITING_CHANGES_OPTION_NAME, changes);\r\n            if (options && change !== (null === (_this$getChanges = this.getChanges()) || void 0 === _this$getChanges ? void 0 : _this$getChanges[index])) {\r\n                options.forceUpdateRow = true\r\n            }\r\n            return change\r\n        },\r\n        _getFormEditItemTemplate: function(cellOptions, column) {\r\n            return column.editCellTemplate || this._getDefaultEditorTemplate()\r\n        },\r\n        getColumnTemplate: function(options) {\r\n            var column = options.column;\r\n            var rowIndex = options.row && options.row.rowIndex;\r\n            var template;\r\n            var isRowMode = this.isRowBasedEditMode();\r\n            var isRowEditing = this.isEditRow(rowIndex);\r\n            var isCellEditing = this.isEditCell(rowIndex, options.columnIndex);\r\n            var editingStartOptions;\r\n            if ((column.showEditorAlways || column.setCellValue && (isRowEditing && column.allowEditing || isCellEditing)) && (\"data\" === options.rowType || \"detailAdaptive\" === options.rowType) && !column.command) {\r\n                var allowUpdating = this.allowUpdating(options);\r\n                if (((allowUpdating || isRowEditing) && column.allowEditing || isCellEditing) && (isRowEditing || !isRowMode)) {\r\n                    if (column.showEditorAlways && !isRowMode) {\r\n                        editingStartOptions = {\r\n                            cancel: false,\r\n                            key: options.row.isNewRow ? void 0 : options.row.key,\r\n                            data: options.row.data,\r\n                            column: column\r\n                        };\r\n                        this._isEditingStart(editingStartOptions)\r\n                    }\r\n                    if (!editingStartOptions || !editingStartOptions.cancel) {\r\n                        options.setValue = (value, text) => {\r\n                            this.updateFieldValue(options, value, text)\r\n                        }\r\n                    }\r\n                }\r\n                template = column.editCellTemplate || this._getDefaultEditorTemplate()\r\n            } else if (\"detail\" === column.command && \"detail\" === options.rowType && isRowEditing) {\r\n                template = null === this || void 0 === this ? void 0 : this.getEditFormTemplate(options)\r\n            }\r\n            return template\r\n        },\r\n        _createButton: function($container, button, options, change) {\r\n            var icon = EDIT_ICON_CLASS[button.name];\r\n            var useIcons = this.option(\"editing.useIcons\");\r\n            var useLegacyColumnButtonTemplate = this.option(\"useLegacyColumnButtonTemplate\");\r\n            var $button = $(\"<a>\").attr(\"href\", \"#\").addClass(LINK_CLASS).addClass(button.cssClass);\r\n            if (button.template && useLegacyColumnButtonTemplate) {\r\n                this._rowsView.renderTemplate($container, button.template, options, true)\r\n            } else {\r\n                if (button.template) {\r\n                    $button = $(\"<span>\").addClass(button.cssClass)\r\n                } else if (useIcons && icon || button.icon) {\r\n                    icon = button.icon || icon;\r\n                    var iconType = iconUtils.getImageSourceType(icon);\r\n                    if (\"image\" === iconType || \"svg\" === iconType) {\r\n                        $button = iconUtils.getImageContainer(icon).addClass(button.cssClass)\r\n                    } else {\r\n                        $button.addClass(\"dx-icon\" + (\"dxIcon\" === iconType ? \"-\" : \" \") + icon).attr(\"title\", button.text)\r\n                    }\r\n                    $button.addClass(\"dx-link-icon\");\r\n                    $container.addClass(COMMAND_EDIT_WITH_ICONS_CLASS);\r\n                    var localizationName = this.getButtonLocalizationNames()[button.name];\r\n                    localizationName && $button.attr(\"aria-label\", messageLocalization.format(localizationName))\r\n                } else {\r\n                    $button.text(button.text)\r\n                }\r\n                if (isDefined(button.hint)) {\r\n                    $button.attr(\"title\", button.hint)\r\n                }\r\n                if (this._isButtonDisabled(button, options)) {\r\n                    $button.addClass(\"dx-state-disabled\")\r\n                } else if (!button.template || button.onClick) {\r\n                    eventsEngine.on($button, addNamespace(\"click\", EDITING_NAMESPACE), this.createAction((function(e) {\r\n                        var _button$onClick;\r\n                        null === (_button$onClick = button.onClick) || void 0 === _button$onClick ? void 0 : _button$onClick.call(button, extend({}, e, {\r\n                            row: options.row,\r\n                            column: options.column\r\n                        }));\r\n                        e.event.preventDefault();\r\n                        e.event.stopPropagation()\r\n                    })))\r\n                }\r\n                $container.append($button, \"&nbsp;\");\r\n                if (button.template) {\r\n                    this._rowsView.renderTemplate($button, button.template, options, true, change)\r\n                }\r\n            }\r\n        },\r\n        getButtonLocalizationNames: () => ({\r\n            edit: \"dxDataGrid-editingEditRow\",\r\n            save: \"dxDataGrid-editingSaveRowChanges\",\r\n            delete: \"dxDataGrid-editingDeleteRow\",\r\n            undelete: \"dxDataGrid-editingUndeleteRow\",\r\n            cancel: \"dxDataGrid-editingCancelRowChanges\"\r\n        }),\r\n        prepareButtonItem: function(headerPanel, name, methodName, sortIndex) {\r\n            var editingTexts = this.option(\"editing.texts\") || {};\r\n            var titleButtonTextByClassNames = {\r\n                revert: editingTexts.cancelAllChanges,\r\n                save: editingTexts.saveAllChanges,\r\n                addRow: editingTexts.addRow\r\n            };\r\n            var className = {\r\n                revert: \"cancel\",\r\n                save: \"save\",\r\n                addRow: \"addrow\"\r\n            } [name];\r\n            var hintText = titleButtonTextByClassNames[name];\r\n            var isButtonDisabled = (\"save\" === className || \"cancel\" === className) && this._isEditButtonDisabled();\r\n            return {\r\n                widget: \"dxButton\",\r\n                options: {\r\n                    onInitialized: e => {\r\n                        $(e.element).addClass(headerPanel._getToolbarButtonClass(EDIT_BUTTON_CLASS + \" \" + this.addWidgetPrefix(className) + \"-button\"))\r\n                    },\r\n                    icon: \"edit-button-\" + className,\r\n                    disabled: isButtonDisabled,\r\n                    onClick: () => {\r\n                        setTimeout(() => {\r\n                            this[methodName]()\r\n                        })\r\n                    },\r\n                    text: hintText,\r\n                    hint: hintText\r\n                },\r\n                showText: \"inMenu\",\r\n                name: name + \"Button\",\r\n                location: \"after\",\r\n                locateInMenu: \"auto\",\r\n                sortIndex: sortIndex\r\n            }\r\n        },\r\n        prepareEditButtons: function(headerPanel) {\r\n            var editingOptions = this.option(\"editing\") || {};\r\n            var buttonItems = [];\r\n            if (editingOptions.allowAdding) {\r\n                buttonItems.push(this.prepareButtonItem(headerPanel, \"addRow\", \"addRow\", 20))\r\n            }\r\n            return buttonItems\r\n        },\r\n        highlightDataCell: function($cell, parameters) {\r\n            var cellModified = this.isCellModified(parameters);\r\n            var shouldHighlight = cellModified && parameters.column.setCellValue && (this.getEditMode() !== EDIT_MODE_ROW || !parameters.row.isEditing);\r\n            shouldHighlight && $cell.addClass(CELL_MODIFIED)\r\n        },\r\n        _afterInsertRow: noop,\r\n        _beforeSaveEditData: function(change) {\r\n            if (change && !isDefined(change.key) && isDefined(change.type)) {\r\n                return true\r\n            }\r\n        },\r\n        _afterSaveEditData: noop,\r\n        _beforeCancelEditData: noop,\r\n        _allowEditAction: function(actionName, options) {\r\n            var allowEditAction = this.option(\"editing.\" + actionName);\r\n            if (isFunction(allowEditAction)) {\r\n                allowEditAction = allowEditAction({\r\n                    component: this.component,\r\n                    row: options.row\r\n                })\r\n            }\r\n            return allowEditAction\r\n        },\r\n        allowUpdating: function(options, eventName) {\r\n            var startEditAction = this.option(\"editing.startEditAction\") || DEFAULT_START_EDIT_ACTION;\r\n            var needCallback = arguments.length > 1 ? startEditAction === eventName || \"down\" === eventName : true;\r\n            return needCallback && this._allowEditAction(\"allowUpdating\", options)\r\n        },\r\n        allowDeleting: function(options) {\r\n            return this._allowEditAction(\"allowDeleting\", options)\r\n        },\r\n        isCellModified: function(parameters) {\r\n            var columnIndex = parameters.columnIndex;\r\n            var modifiedValues = parameters.row && (parameters.row.isNewRow ? parameters.row.values : parameters.row.modifiedValues);\r\n            return !!modifiedValues && void 0 !== modifiedValues[columnIndex]\r\n        },\r\n        isNewRowInEditMode: function() {\r\n            var visibleEditRowIndex = this._getVisibleEditRowIndex();\r\n            var rows = this._dataController.items();\r\n            return visibleEditRowIndex >= 0 ? rows[visibleEditRowIndex].isNewRow : false\r\n        }\r\n    }\r\n}());\r\nexport var editingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            editing: {\r\n                mode: \"row\",\r\n                refreshMode: \"full\",\r\n                newRowPosition: VIEWPORT_TOP_NEW_ROW_POSITION,\r\n                allowAdding: false,\r\n                allowUpdating: false,\r\n                allowDeleting: false,\r\n                useIcons: false,\r\n                selectTextOnEditStart: false,\r\n                confirmDelete: true,\r\n                texts: {\r\n                    editRow: messageLocalization.format(\"dxDataGrid-editingEditRow\"),\r\n                    saveAllChanges: messageLocalization.format(\"dxDataGrid-editingSaveAllChanges\"),\r\n                    saveRowChanges: messageLocalization.format(\"dxDataGrid-editingSaveRowChanges\"),\r\n                    cancelAllChanges: messageLocalization.format(\"dxDataGrid-editingCancelAllChanges\"),\r\n                    cancelRowChanges: messageLocalization.format(\"dxDataGrid-editingCancelRowChanges\"),\r\n                    addRow: messageLocalization.format(\"dxDataGrid-editingAddRow\"),\r\n                    deleteRow: messageLocalization.format(\"dxDataGrid-editingDeleteRow\"),\r\n                    undeleteRow: messageLocalization.format(\"dxDataGrid-editingUndeleteRow\"),\r\n                    confirmDeleteMessage: messageLocalization.format(\"dxDataGrid-editingConfirmDeleteMessage\"),\r\n                    confirmDeleteTitle: \"\"\r\n                },\r\n                form: {\r\n                    colCount: 2\r\n                },\r\n                popup: {},\r\n                startEditAction: \"click\",\r\n                editRowKey: null,\r\n                editColumnName: null,\r\n                changes: []\r\n            },\r\n            useLegacyColumnButtonTemplate: false\r\n        }\r\n    },\r\n    controllers: {\r\n        editing: EditingController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                init: function() {\r\n                    this._editingController = this.getController(\"editing\");\r\n                    this.callBase()\r\n                },\r\n                reload: function(full, repaintChangesOnly) {\r\n                    !repaintChangesOnly && this._editingController.refresh();\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                repaintRows: function() {\r\n                    if (this.getController(\"editing\").isSaving()) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _updateEditRow: function(items) {\r\n                    var editRowKey = this.option(EDITING_EDITROWKEY_OPTION_NAME);\r\n                    var editRowIndex = gridCoreUtils.getIndexByKey(editRowKey, items);\r\n                    var editItem = items[editRowIndex];\r\n                    if (editItem) {\r\n                        var _this$_updateEditItem;\r\n                        editItem.isEditing = true;\r\n                        null === (_this$_updateEditItem = this._updateEditItem) || void 0 === _this$_updateEditItem ? void 0 : _this$_updateEditItem.call(this, editItem)\r\n                    }\r\n                },\r\n                _updateItemsCore: function(change) {\r\n                    this.callBase(change);\r\n                    this._updateEditRow(this.items(true))\r\n                },\r\n                _applyChangeUpdate: function(change) {\r\n                    this._updateEditRow(change.items);\r\n                    this.callBase(change)\r\n                },\r\n                _applyChangesOnly: function(change) {\r\n                    this._updateEditRow(change.items);\r\n                    this.callBase(change)\r\n                },\r\n                _processItems: function(items, change) {\r\n                    items = this._editingController.processItems(items, change);\r\n                    return this.callBase(items, change)\r\n                },\r\n                _processDataItem: function(dataItem, options) {\r\n                    this._editingController.processDataItem(dataItem, options, this.generateDataValues);\r\n                    return this.callBase(dataItem, options)\r\n                },\r\n                _processItem: function(item, options) {\r\n                    item = this.callBase(item, options);\r\n                    if (item.isNewRow) {\r\n                        options.dataIndex--;\r\n                        delete item.dataIndex\r\n                    }\r\n                    return item\r\n                },\r\n                _getChangedColumnIndices: function(oldItem, newItem, rowIndex, isLiveUpdate) {\r\n                    if (oldItem.isNewRow !== newItem.isNewRow || oldItem.removed !== newItem.removed) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _isCellChanged: function(oldRow, newRow, visibleRowIndex, columnIndex, isLiveUpdate) {\r\n                    var editingController = this.getController(\"editing\");\r\n                    var cell = oldRow.cells && oldRow.cells[columnIndex];\r\n                    var isEditing = editingController && editingController.isEditCell(visibleRowIndex, columnIndex);\r\n                    if (isLiveUpdate && isEditing) {\r\n                        return false\r\n                    }\r\n                    if (cell && cell.column && !cell.column.showEditorAlways && cell.isEditing !== isEditing) {\r\n                        return true\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._editingController = this.getController(\"editing\")\r\n                },\r\n                getCellIndex: function($cell, rowIndex) {\r\n                    if (!$cell.is(\"td\") && rowIndex >= 0) {\r\n                        var $cellElements = this.getCellElements(rowIndex);\r\n                        var cellIndex = -1;\r\n                        each($cellElements, (function(index, cellElement) {\r\n                            if ($(cellElement).find($cell).length) {\r\n                                cellIndex = index\r\n                            }\r\n                        }));\r\n                        return cellIndex\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                publicMethods: function() {\r\n                    return this.callBase().concat([\"cellValue\"])\r\n                },\r\n                _getCellTemplate: function(options) {\r\n                    var template = this._editingController.getColumnTemplate(options);\r\n                    return template || this.callBase(options)\r\n                },\r\n                _isNativeClick: function() {\r\n                    return (devices.real().ios || devices.real().android) && this.option(\"editing.allowUpdating\")\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var isRowRemoved = !!row.removed;\r\n                        var isRowInserted = !!row.isNewRow;\r\n                        var isRowModified = !!row.modified;\r\n                        isRowInserted && $row.addClass(ROW_INSERTED);\r\n                        isRowModified && $row.addClass(ROW_MODIFIED);\r\n                        if (isRowInserted || isRowRemoved) {\r\n                            $row.removeClass(ROW_SELECTED)\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _getColumnIndexByElement: function($element) {\r\n                    var $tableElement = $element.closest(\"table\");\r\n                    var $tableElements = this.getTableElements();\r\n                    while ($tableElement.length && !$tableElements.filter($tableElement).length) {\r\n                        $element = $tableElement.closest(\"td\");\r\n                        $tableElement = $element.closest(\"table\")\r\n                    }\r\n                    return this._getColumnIndexByElementCore($element)\r\n                },\r\n                _getColumnIndexByElementCore: function($element) {\r\n                    var $targetElement = $element.closest(\".\" + ROW_CLASS + \"> td:not(.dx-master-detail-cell)\");\r\n                    return this.getCellIndex($targetElement)\r\n                },\r\n                _editCellByClick: function(e, eventName) {\r\n                    var editingController = this._editingController;\r\n                    var $targetElement = $(e.event.target);\r\n                    var columnIndex = this._getColumnIndexByElement($targetElement);\r\n                    var row = this._dataController.items()[e.rowIndex];\r\n                    var allowUpdating = editingController.allowUpdating({\r\n                        row: row\r\n                    }, eventName) || row && row.isNewRow;\r\n                    var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n                    var isEditedCell = editingController.isEditCell(e.rowIndex, columnIndex);\r\n                    var allowEditing = allowUpdating && column && (column.allowEditing || isEditedCell);\r\n                    var startEditAction = this.option(\"editing.startEditAction\") || \"click\";\r\n                    if (\"down\" === eventName) {\r\n                        if ((devices.real().ios || devices.real().android) && !isEditedCell) {\r\n                            resetActiveElement()\r\n                        }\r\n                        return column && column.showEditorAlways && allowEditing && editingController.editCell(e.rowIndex, columnIndex)\r\n                    }\r\n                    if (\"click\" === eventName && \"dblClick\" === startEditAction && !isEditedCell) {\r\n                        var withoutSaveEditData = null === row || void 0 === row ? void 0 : row.isNewRow;\r\n                        editingController.closeEditCell(false, withoutSaveEditData)\r\n                    }\r\n                    if (allowEditing && eventName === startEditAction) {\r\n                        return editingController.editCell(e.rowIndex, columnIndex) || editingController.isEditRow(e.rowIndex)\r\n                    }\r\n                },\r\n                _rowPointerDown: function(e) {\r\n                    this._pointerDownTimeout = setTimeout(() => {\r\n                        this._editCellByClick(e, \"down\")\r\n                    })\r\n                },\r\n                _rowClick: function(e) {\r\n                    var isEditForm = $(e.rowElement).hasClass(this.addWidgetPrefix(EDIT_FORM_CLASS));\r\n                    e.event[TARGET_COMPONENT_NAME] = this.component;\r\n                    if (!this._editCellByClick(e, \"click\") && !isEditForm) {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _rowDblClick: function(e) {\r\n                    if (!this._editCellByClick(e, \"dblClick\")) {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _cellPrepared: function($cell, parameters) {\r\n                    var editingController = this._editingController;\r\n                    var isCommandCell = !!parameters.column.command;\r\n                    var isEditableCell = parameters.setValue;\r\n                    var isEditRow = editingController.isEditRow(parameters.rowIndex);\r\n                    var isEditing = isEditingCell(isEditRow, parameters);\r\n                    if (isEditingOrShowEditorAlwaysDataCell(isEditRow, parameters)) {\r\n                        var alignment = parameters.column.alignment;\r\n                        $cell.toggleClass(this.addWidgetPrefix(READONLY_CLASS), !isEditableCell).toggleClass(CELL_FOCUS_DISABLED_CLASS, !isEditableCell);\r\n                        if (alignment) {\r\n                            $cell.find(EDITORS_INPUT_SELECTOR).first().css(\"textAlign\", alignment)\r\n                        }\r\n                    }\r\n                    if (isEditing) {\r\n                        this._editCellPrepared($cell)\r\n                    }\r\n                    if (parameters.column && !isCommandCell) {\r\n                        editingController.highlightDataCell($cell, parameters)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _editCellPrepared: noop,\r\n                _formItemPrepared: noop,\r\n                _getCellOptions: function(options) {\r\n                    var cellOptions = this.callBase(options);\r\n                    cellOptions.isEditing = this._editingController.isEditCell(cellOptions.rowIndex, cellOptions.columnIndex);\r\n                    return cellOptions\r\n                },\r\n                _createCell: function(options) {\r\n                    var $cell = this.callBase(options);\r\n                    var isEditRow = this._editingController.isEditRow(options.rowIndex);\r\n                    isEditingOrShowEditorAlwaysDataCell(isEditRow, options) && $cell.addClass(EDITOR_CELL_CLASS);\r\n                    return $cell\r\n                },\r\n                cellValue: function(rowIndex, columnIdentifier, value, text) {\r\n                    var cellOptions = this.getCellOptions(rowIndex, columnIdentifier);\r\n                    if (cellOptions) {\r\n                        if (void 0 === value) {\r\n                            return cellOptions.value\r\n                        } else {\r\n                            this._editingController.updateFieldValue(cellOptions, value, text, true)\r\n                        }\r\n                    }\r\n                },\r\n                dispose: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    clearTimeout(this._pointerDownTimeout)\r\n                },\r\n                _renderCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._editingController._focusEditorIfNeed()\r\n                }\r\n            },\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    var editButtonItems = this.getController(\"editing\").prepareEditButtons(this);\r\n                    return editButtonItems.concat(items)\r\n                },\r\n                optionChanged: function(args) {\r\n                    var fullName = args.fullName;\r\n                    switch (args.name) {\r\n                        case \"editing\":\r\n                            var excludedOptions = [EDITING_POPUP_OPTION_NAME, EDITING_CHANGES_OPTION_NAME, EDITING_EDITCOLUMNNAME_OPTION_NAME, EDITING_EDITROWKEY_OPTION_NAME];\r\n                            var shouldInvalidate = fullName && !excludedOptions.some(optionName => optionName === fullName);\r\n                            shouldInvalidate && this._invalidate();\r\n                            this.callBase(args);\r\n                            break;\r\n                        case \"useLegacyColumnButtonTemplate\":\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                isVisible: function() {\r\n                    var editingOptions = this.getController(\"editing\").option(\"editing\");\r\n                    return this.callBase() || (null === editingOptions || void 0 === editingOptions ? void 0 : editingOptions.allowAdding)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport \"./ui.data_grid.editor_factory\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    editingModule\r\n} from \"../grid_core/ui.grid_core.editing\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\ngridCore.registerModule(\"editing\", extend(true, {}, editingModule, {\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                _changeRowExpandCore: function(key) {\r\n                    var editingController = this._editingController;\r\n                    if (Array.isArray(key)) {\r\n                        editingController && editingController.refresh()\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}));\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing_row_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    EDIT_MODE_ROW,\r\n    MODES_WITH_DELAYED_FOCUS,\r\n    ROW_SELECTED_CLASS,\r\n    EDIT_FORM_CLASS\r\n} from \"./ui.grid_core.editing_constants\";\r\nvar EDIT_ROW = \"dx-edit-row\";\r\nexport var editingRowBasedModule = {\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                isRowEditMode: function() {\r\n                    return this.getEditMode() === EDIT_MODE_ROW\r\n                },\r\n                _afterCancelEditData: function(rowIndex) {\r\n                    var dataController = this._dataController;\r\n                    if (this.isRowBasedEditMode() && rowIndex >= 0) {\r\n                        dataController.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: [rowIndex, rowIndex + 1]\r\n                        })\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _isDefaultButtonVisible: function(button, options) {\r\n                    var isRowMode = this.isRowBasedEditMode();\r\n                    var isEditRow = options.row && options.row.rowIndex === this._getVisibleEditRowIndex();\r\n                    if (isRowMode) {\r\n                        switch (button.name) {\r\n                            case \"edit\":\r\n                                return !isEditRow && this.allowUpdating(options);\r\n                            case \"delete\":\r\n                                return this.callBase.apply(this, arguments) && !isEditRow;\r\n                            case \"save\":\r\n                            case \"cancel\":\r\n                                return isEditRow;\r\n                            default:\r\n                                return this.callBase.apply(this, arguments)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                isEditRow: function(rowIndex) {\r\n                    return this.isRowBasedEditMode() && this._isEditRowByIndex(rowIndex)\r\n                },\r\n                _cancelSaving: function() {\r\n                    if (this.isRowBasedEditMode()) {\r\n                        if (!this.hasChanges()) {\r\n                            this._cancelEditDataCore()\r\n                        }\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _refreshCore: function() {\r\n                    if (this.isRowBasedEditMode()) {\r\n                        this.init()\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _isEditColumnVisible: function() {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var editingOptions = this.option(\"editing\");\r\n                    var isRowEditMode = this.isRowEditMode();\r\n                    var isVisibleInRowEditMode = editingOptions.allowUpdating || editingOptions.allowAdding;\r\n                    return result || isRowEditMode && isVisibleInRowEditMode\r\n                },\r\n                _focusEditorIfNeed: function() {\r\n                    var editMode = this.getEditMode();\r\n                    if (this._needFocusEditor) {\r\n                        if (-1 !== MODES_WITH_DELAYED_FOCUS.indexOf(editMode)) {\r\n                            var $editingCell = this.getFocusedCellInRow(this._getVisibleEditRowIndex());\r\n                            this._delayedInputFocus($editingCell, () => {\r\n                                $editingCell && this.component.focus($editingCell)\r\n                            })\r\n                        }\r\n                        this._needFocusEditor = false\r\n                    }\r\n                }\r\n            },\r\n            data: {\r\n                _getChangedColumnIndices: function(oldItem, newItem, rowIndex, isLiveUpdate) {\r\n                    var editingController = this.getController(\"editing\");\r\n                    if (editingController.isRowBasedEditMode() && oldItem.isEditing !== newItem.isEditing) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var editingController = this._editingController;\r\n                        var isEditRow = editingController.isEditRow(row.rowIndex);\r\n                        if (isEditRow) {\r\n                            $row.addClass(EDIT_ROW);\r\n                            $row.removeClass(ROW_SELECTED_CLASS);\r\n                            if (\"detail\" === row.rowType) {\r\n                                $row.addClass(this.addWidgetPrefix(EDIT_FORM_CLASS))\r\n                            }\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _update: function(change) {\r\n                    this.callBase(change);\r\n                    if (\"updateSelection\" === change.changeType) {\r\n                        this.getTableElements().children(\"tbody\").children(\".\" + EDIT_ROW).removeClass(ROW_SELECTED_CLASS)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editing_row_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    editingRowBasedModule\r\n} from \"../grid_core/ui.grid_core.editing_row_based\";\r\ngridCore.registerModule(\"editingRowBased\", editingRowBasedModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing_form_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Guid from \"../../core/guid\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport Button from \"../button\";\r\nimport devices from \"../../core/devices\";\r\nimport Form from \"../form\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport Scrollable from \"../scroll_view/ui.scrollable\";\r\nimport Popup from \"../popup\";\r\nimport {\r\n    EDIT_MODE_FORM,\r\n    EDIT_MODE_POPUP,\r\n    FOCUSABLE_ELEMENT_SELECTOR,\r\n    EDITING_EDITROWKEY_OPTION_NAME,\r\n    EDITING_POPUP_OPTION_NAME,\r\n    DATA_EDIT_DATA_INSERT_TYPE,\r\n    EDITING_FORM_OPTION_NAME\r\n} from \"./ui.grid_core.editing_constants\";\r\nvar EDIT_FORM_ITEM_CLASS = \"edit-form-item\";\r\nvar EDIT_POPUP_CLASS = \"edit-popup\";\r\nvar SCROLLABLE_CONTAINER_CLASS = \"dx-scrollable-container\";\r\nvar EDIT_POPUP_FORM_CLASS = \"edit-popup-form\";\r\nvar BUTTON_CLASS = \"dx-button\";\r\nvar FORM_BUTTONS_CONTAINER_CLASS = \"form-buttons-container\";\r\nvar getEditorType = item => {\r\n    var _column$formItem;\r\n    var column = item.column;\r\n    return item.isCustomEditorType ? item.editorType : null === (_column$formItem = column.formItem) || void 0 === _column$formItem ? void 0 : _column$formItem.editorType\r\n};\r\nvar forEachFormItems = (items, callBack) => {\r\n    items.forEach(item => {\r\n        if (item.items || item.tabs) {\r\n            forEachFormItems(item.items || item.tabs, callBack)\r\n        } else {\r\n            callBack(item)\r\n        }\r\n    })\r\n};\r\nexport var editingFormBasedModule = {\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                init: function() {\r\n                    this._editForm = null;\r\n                    this._updateEditFormDeferred = null;\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                isFormOrPopupEditMode: function() {\r\n                    return this.isPopupEditMode() || this.isFormEditMode()\r\n                },\r\n                isPopupEditMode: function() {\r\n                    var editMode = this.option(\"editing.mode\");\r\n                    return editMode === EDIT_MODE_POPUP\r\n                },\r\n                isFormEditMode: function() {\r\n                    var editMode = this.option(\"editing.mode\");\r\n                    return editMode === EDIT_MODE_FORM\r\n                },\r\n                getFirstEditableColumnIndex: function() {\r\n                    var firstFormItem = this._firstFormItem;\r\n                    if (this.isFormEditMode() && firstFormItem) {\r\n                        var editRowKey = this.option(EDITING_EDITROWKEY_OPTION_NAME);\r\n                        var editRowIndex = this._dataController.getRowIndexByKey(editRowKey);\r\n                        var $editFormElements = this._rowsView.getCellElements(editRowIndex);\r\n                        return this._rowsView._getEditFormEditorVisibleIndex($editFormElements, firstFormItem.column)\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                getEditFormRowIndex: function() {\r\n                    return this.isFormOrPopupEditMode() ? this._getVisibleEditRowIndex() : this.callBase.apply(this, arguments)\r\n                },\r\n                _isEditColumnVisible: function() {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var editingOptions = this.option(\"editing\");\r\n                    return this.isFormOrPopupEditMode() ? editingOptions.allowUpdating || result : result\r\n                },\r\n                _handleDataChanged: function(args) {\r\n                    var editForm = this._editForm;\r\n                    if (\"refresh\" === args.changeType && this.isPopupEditMode() && null !== editForm && void 0 !== editForm && editForm.option(\"visible\")) {\r\n                        this._repaintEditPopup()\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                getPopupContent: function() {\r\n                    var _this$_editPopup;\r\n                    var popupVisible = null === (_this$_editPopup = this._editPopup) || void 0 === _this$_editPopup ? void 0 : _this$_editPopup.option(\"visible\");\r\n                    if (this.isPopupEditMode() && popupVisible) {\r\n                        return this._$popupContent\r\n                    }\r\n                },\r\n                _showAddedRow: function(rowIndex) {\r\n                    if (this.isPopupEditMode()) {\r\n                        this._showEditPopup(rowIndex)\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _cancelEditDataCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.isPopupEditMode()) {\r\n                        this._hideEditPopup()\r\n                    }\r\n                },\r\n                _updateEditRowCore: function(row, skipCurrentRow, isCustomSetCellValue) {\r\n                    var editForm = this._editForm;\r\n                    if (this.isPopupEditMode()) {\r\n                        if (this.option(\"repaintChangesOnly\")) {\r\n                            var _row$update;\r\n                            null === (_row$update = row.update) || void 0 === _row$update ? void 0 : _row$update.call(row, row)\r\n                        } else if (editForm) {\r\n                            this._updateEditFormDeferred = (new Deferred).done(() => editForm.repaint());\r\n                            if (!this._updateLockCount) {\r\n                                this._updateEditFormDeferred.resolve()\r\n                            }\r\n                        }\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _showEditPopup: function(rowIndex, repaintForm) {\r\n                    var isMobileDevice = \"desktop\" !== devices.current().deviceType;\r\n                    var popupOptions = extend({\r\n                        showTitle: false,\r\n                        fullScreen: isMobileDevice,\r\n                        copyRootClassesToWrapper: true,\r\n                        _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n                        toolbarItems: [{\r\n                            toolbar: \"bottom\",\r\n                            location: \"after\",\r\n                            widget: \"dxButton\",\r\n                            options: this._getSaveButtonConfig()\r\n                        }, {\r\n                            toolbar: \"bottom\",\r\n                            location: \"after\",\r\n                            widget: \"dxButton\",\r\n                            options: this._getCancelButtonConfig()\r\n                        }],\r\n                        contentTemplate: this._getPopupEditFormTemplate(rowIndex)\r\n                    }, this.option(EDITING_POPUP_OPTION_NAME));\r\n                    if (!this._editPopup) {\r\n                        var $popupContainer = $(\"<div>\").appendTo(this.component.$element()).addClass(this.addWidgetPrefix(EDIT_POPUP_CLASS));\r\n                        this._editPopup = this._createComponent($popupContainer, Popup, {\r\n                            copyRootClassesToWrapper: true,\r\n                            _ignoreCopyRootClassesToWrapperDeprecation: true\r\n                        });\r\n                        this._editPopup.on(\"hiding\", this._getEditPopupHiddenHandler());\r\n                        this._editPopup.on(\"shown\", e => {\r\n                            eventsEngine.trigger(e.component.$content().find(FOCUSABLE_ELEMENT_SELECTOR).not(\".\" + SCROLLABLE_CONTAINER_CLASS).first(), \"focus\");\r\n                            if (repaintForm) {\r\n                                var _this$_editForm;\r\n                                null === (_this$_editForm = this._editForm) || void 0 === _this$_editForm ? void 0 : _this$_editForm.repaint()\r\n                            }\r\n                        })\r\n                    }\r\n                    this._editPopup.option(popupOptions);\r\n                    this._editPopup.show();\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _getPopupEditFormTemplate: function(rowIndex) {\r\n                    var row = this.component.getVisibleRows()[rowIndex];\r\n                    var templateOptions = {\r\n                        row: row,\r\n                        rowType: row.rowType,\r\n                        key: row.key,\r\n                        rowIndex: rowIndex\r\n                    };\r\n                    this._rowsView._addWatchMethod(templateOptions, row);\r\n                    return container => {\r\n                        var formTemplate = this.getEditFormTemplate();\r\n                        var scrollable = this._createComponent($(\"<div>\").appendTo(container), Scrollable);\r\n                        this._$popupContent = scrollable.$content();\r\n                        formTemplate(this._$popupContent, templateOptions, {\r\n                            isPopupForm: true\r\n                        });\r\n                        this._rowsView.renderDelayedTemplates()\r\n                    }\r\n                },\r\n                _repaintEditPopup: function() {\r\n                    var _this$_editPopup2;\r\n                    var rowIndex = this._getVisibleEditRowIndex();\r\n                    if (null !== (_this$_editPopup2 = this._editPopup) && void 0 !== _this$_editPopup2 && _this$_editPopup2.option(\"visible\") && rowIndex >= 0) {\r\n                        var defaultAnimation = this._editPopup.option(\"animation\");\r\n                        this._editPopup.option(\"animation\", null);\r\n                        this._showEditPopup(rowIndex, true);\r\n                        this._editPopup.option(\"animation\", defaultAnimation)\r\n                    }\r\n                },\r\n                _hideEditPopup: function() {\r\n                    var _this$_editPopup3;\r\n                    null === (_this$_editPopup3 = this._editPopup) || void 0 === _this$_editPopup3 ? void 0 : _this$_editPopup3.option(\"visible\", false)\r\n                },\r\n                optionChanged: function(args) {\r\n                    if (\"editing\" === args.name && this.isFormOrPopupEditMode()) {\r\n                        var fullName = args.fullName;\r\n                        if (0 === fullName.indexOf(EDITING_FORM_OPTION_NAME)) {\r\n                            this._handleFormOptionChange(args);\r\n                            args.handled = true\r\n                        } else if (0 === fullName.indexOf(EDITING_POPUP_OPTION_NAME)) {\r\n                            this._handlePopupOptionChange(args);\r\n                            args.handled = true\r\n                        }\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _handleFormOptionChange: function(args) {\r\n                    var _this$_editPopup4;\r\n                    if (this.isFormEditMode()) {\r\n                        var editRowIndex = this._getVisibleEditRowIndex();\r\n                        if (editRowIndex >= 0) {\r\n                            this._dataController.updateItems({\r\n                                changeType: \"update\",\r\n                                rowIndices: [editRowIndex]\r\n                            })\r\n                        }\r\n                    } else if (null !== (_this$_editPopup4 = this._editPopup) && void 0 !== _this$_editPopup4 && _this$_editPopup4.option(\"visible\") && 0 === args.fullName.indexOf(EDITING_FORM_OPTION_NAME)) {\r\n                        this._repaintEditPopup()\r\n                    }\r\n                },\r\n                _handlePopupOptionChange: function(args) {\r\n                    var editPopup = this._editPopup;\r\n                    if (editPopup) {\r\n                        var popupOptionName = args.fullName.slice(EDITING_POPUP_OPTION_NAME.length + 1);\r\n                        if (popupOptionName) {\r\n                            editPopup.option(popupOptionName, args.value)\r\n                        } else {\r\n                            editPopup.option(args.value)\r\n                        }\r\n                    }\r\n                },\r\n                renderFormEditTemplate: function(detailCellOptions, item, formTemplateOptions, container, isReadOnly) {\r\n                    var that = this;\r\n                    var $container = $(container);\r\n                    var column = item.column;\r\n                    var editorType = getEditorType(item);\r\n                    var rowData = null === detailCellOptions || void 0 === detailCellOptions ? void 0 : detailCellOptions.row.data;\r\n                    var form = formTemplateOptions.component;\r\n                    var {\r\n                        label: label,\r\n                        labelMark: labelMark,\r\n                        labelMode: labelMode\r\n                    } = formTemplateOptions.editorOptions || {};\r\n                    var cellOptions = extend({}, detailCellOptions, {\r\n                        data: rowData,\r\n                        cellElement: null,\r\n                        isOnForm: true,\r\n                        item: item,\r\n                        id: form.getItemID(item.name || item.dataField),\r\n                        column: extend({}, column, {\r\n                            editorType: editorType,\r\n                            editorOptions: extend({\r\n                                label: label,\r\n                                labelMark: labelMark,\r\n                                labelMode: labelMode\r\n                            }, column.editorOptions, item.editorOptions)\r\n                        }),\r\n                        columnIndex: column.index,\r\n                        setValue: !isReadOnly && column.allowEditing && function(value) {\r\n                            that.updateFieldValue(cellOptions, value)\r\n                        }\r\n                    });\r\n                    cellOptions.value = column.calculateCellValue(rowData);\r\n                    var template = this._getFormEditItemTemplate.bind(this)(cellOptions, column);\r\n                    this._rowsView.renderTemplate($container, template, cellOptions, !!$container.closest(getWindow().document).length).done(() => {\r\n                        this._rowsView._updateCell($container, cellOptions)\r\n                    });\r\n                    return cellOptions\r\n                },\r\n                getFormEditorTemplate: function(cellOptions, item) {\r\n                    var column = this.component.columnOption(item.dataField);\r\n                    return (options, container) => {\r\n                        var _cellOptions$row$watc, _cellOptions$row;\r\n                        var $container = $(container);\r\n                        null === (_cellOptions$row$watc = (_cellOptions$row = cellOptions.row).watch) || void 0 === _cellOptions$row$watc ? void 0 : _cellOptions$row$watc.call(_cellOptions$row, (function() {\r\n                            return column.selector(cellOptions.row.data)\r\n                        }), () => {\r\n                            var _validator;\r\n                            var $editorElement = $container.find(\".dx-widget\").first();\r\n                            var validator = $editorElement.data(\"dxValidator\");\r\n                            var validatorOptions = null === (_validator = validator) || void 0 === _validator ? void 0 : _validator.option();\r\n                            $container.contents().remove();\r\n                            cellOptions = this.renderFormEditTemplate.bind(this)(cellOptions, item, options, $container);\r\n                            $editorElement = $container.find(\".dx-widget\").first();\r\n                            validator = $editorElement.data(\"dxValidator\");\r\n                            if (validatorOptions && !validator) {\r\n                                $editorElement.dxValidator({\r\n                                    validationRules: validatorOptions.validationRules,\r\n                                    validationGroup: validatorOptions.validationGroup,\r\n                                    dataGetter: validatorOptions.dataGetter\r\n                                })\r\n                            }\r\n                        });\r\n                        cellOptions = this.renderFormEditTemplate.bind(this)(cellOptions, item, options, $container)\r\n                    }\r\n                },\r\n                getEditFormOptions: function(detailOptions) {\r\n                    var _this$_getValidationG;\r\n                    var editFormOptions = null === (_this$_getValidationG = this._getValidationGroupsInForm) || void 0 === _this$_getValidationG ? void 0 : _this$_getValidationG.call(this, detailOptions);\r\n                    var userCustomizeItem = this.option(\"editing.form.customizeItem\");\r\n                    var editFormItemClass = this.addWidgetPrefix(EDIT_FORM_ITEM_CLASS);\r\n                    var items = this.option(\"editing.form.items\");\r\n                    var isCustomEditorType = {};\r\n                    if (!items) {\r\n                        var columns = this.getController(\"columns\").getColumns();\r\n                        items = [];\r\n                        each(columns, (function(_, column) {\r\n                            if (!column.isBand && !column.type) {\r\n                                items.push({\r\n                                    column: column,\r\n                                    name: column.name,\r\n                                    dataField: column.dataField\r\n                                })\r\n                            }\r\n                        }))\r\n                    } else {\r\n                        forEachFormItems(items, item => {\r\n                            var itemId = (null === item || void 0 === item ? void 0 : item.name) || (null === item || void 0 === item ? void 0 : item.dataField);\r\n                            if (itemId) {\r\n                                isCustomEditorType[itemId] = !!item.editorType\r\n                            }\r\n                        })\r\n                    }\r\n                    return extend({}, editFormOptions, {\r\n                        items: items,\r\n                        formID: \"dx-\" + new Guid,\r\n                        customizeItem: item => {\r\n                            var column;\r\n                            var itemId = item.name || item.dataField;\r\n                            if (item.column || itemId) {\r\n                                column = item.column || this._columnsController.columnOption(item.name ? \"name:\" + item.name : \"dataField:\" + item.dataField)\r\n                            }\r\n                            if (column) {\r\n                                item.label = item.label || {};\r\n                                item.label.text = item.label.text || column.caption;\r\n                                if (\"boolean\" === column.dataType && void 0 === item.label.visible) {\r\n                                    var labelMode = this.option(\"editing.form.labelMode\");\r\n                                    if (\"floating\" === labelMode || \"static\" === labelMode) {\r\n                                        item.label.visible = true\r\n                                    }\r\n                                }\r\n                                item.template = item.template || this.getFormEditorTemplate(detailOptions, item);\r\n                                item.column = column;\r\n                                item.isCustomEditorType = isCustomEditorType[itemId];\r\n                                if (column.formItem) {\r\n                                    extend(item, column.formItem)\r\n                                }\r\n                                if (void 0 === item.isRequired && column.validationRules) {\r\n                                    item.isRequired = column.validationRules.some((function(rule) {\r\n                                        return \"required\" === rule.type\r\n                                    }));\r\n                                    item.validationRules = []\r\n                                }\r\n                                var itemVisible = isDefined(item.visible) ? item.visible : true;\r\n                                if (!this._firstFormItem && itemVisible) {\r\n                                    this._firstFormItem = item\r\n                                }\r\n                            }\r\n                            null === userCustomizeItem || void 0 === userCustomizeItem ? void 0 : userCustomizeItem.call(this, item);\r\n                            item.cssClass = isString(item.cssClass) ? item.cssClass + \" \" + editFormItemClass : editFormItemClass\r\n                        }\r\n                    })\r\n                },\r\n                getEditFormTemplate: function() {\r\n                    return ($container, detailOptions, options) => {\r\n                        var editFormOptions = this.option(EDITING_FORM_OPTION_NAME);\r\n                        var baseEditFormOptions = this.getEditFormOptions(detailOptions);\r\n                        var $formContainer = $(\"<div>\").appendTo($container);\r\n                        var isPopupForm = null === options || void 0 === options ? void 0 : options.isPopupForm;\r\n                        this._firstFormItem = void 0;\r\n                        if (isPopupForm) {\r\n                            $formContainer.addClass(this.addWidgetPrefix(EDIT_POPUP_FORM_CLASS))\r\n                        }\r\n                        this._editForm = this._createComponent($formContainer, Form, extend({}, editFormOptions, baseEditFormOptions));\r\n                        if (!isPopupForm) {\r\n                            var $buttonsContainer = $(\"<div>\").addClass(this.addWidgetPrefix(FORM_BUTTONS_CONTAINER_CLASS)).appendTo($container);\r\n                            this._createComponent($(\"<div>\").appendTo($buttonsContainer), Button, this._getSaveButtonConfig());\r\n                            this._createComponent($(\"<div>\").appendTo($buttonsContainer), Button, this._getCancelButtonConfig())\r\n                        }\r\n                        this._editForm.on(\"contentReady\", () => {\r\n                            var _this$_editPopup5;\r\n                            null === (_this$_editPopup5 = this._editPopup) || void 0 === _this$_editPopup5 ? void 0 : _this$_editPopup5.repaint()\r\n                        })\r\n                    }\r\n                },\r\n                getEditForm: function() {\r\n                    return this._editForm\r\n                },\r\n                _endUpdateCore: function() {\r\n                    var _this$_updateEditForm;\r\n                    null === (_this$_updateEditForm = this._updateEditFormDeferred) || void 0 === _this$_updateEditForm ? void 0 : _this$_updateEditForm.resolve()\r\n                },\r\n                _beforeEndSaving: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.isPopupEditMode()) {\r\n                        var _this$_editPopup6;\r\n                        null === (_this$_editPopup6 = this._editPopup) || void 0 === _this$_editPopup6 ? void 0 : _this$_editPopup6.hide()\r\n                    }\r\n                },\r\n                _processDataItemCore: function(item, _ref) {\r\n                    var {\r\n                        type: type\r\n                    } = _ref;\r\n                    if (this.isPopupEditMode() && type === DATA_EDIT_DATA_INSERT_TYPE) {\r\n                        item.visible = false\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _editRowFromOptionChangedCore: function(rowIndices, rowIndex, oldRowIndex) {\r\n                    if (this.isPopupEditMode()) {\r\n                        this._showEditPopup(rowIndex)\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                }\r\n            },\r\n            data: {\r\n                _updateEditItem: function(item) {\r\n                    if (this._editingController.isFormEditMode()) {\r\n                        item.rowType = \"detail\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _renderCellContent: function($cell, options) {\r\n                    if (\"data\" === options.rowType && this._editingController.isPopupEditMode() && false === options.row.visible) {\r\n                        return\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                getCellElements: function(rowIndex) {\r\n                    var $cellElements = this.callBase(rowIndex);\r\n                    var editingController = this._editingController;\r\n                    var editForm = editingController.getEditForm();\r\n                    var editFormRowIndex = editingController.getEditFormRowIndex();\r\n                    if (editFormRowIndex === rowIndex && $cellElements && editForm) {\r\n                        return editForm.$element().find(\".\" + this.addWidgetPrefix(EDIT_FORM_ITEM_CLASS) + \", .\" + BUTTON_CLASS)\r\n                    }\r\n                    return $cellElements\r\n                },\r\n                _getVisibleColumnIndex: function($cells, rowIndex, columnIdentifier) {\r\n                    var editFormRowIndex = this._editingController.getEditFormRowIndex();\r\n                    if (editFormRowIndex === rowIndex && isString(columnIdentifier)) {\r\n                        var column = this._columnsController.columnOption(columnIdentifier);\r\n                        return this._getEditFormEditorVisibleIndex($cells, column)\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _getEditFormEditorVisibleIndex: function($cells, column) {\r\n                    var visibleIndex = -1;\r\n                    each($cells, (function(index, cellElement) {\r\n                        var item = $(cellElement).find(\".dx-field-item-content\").data(\"dx-form-item\");\r\n                        if (null !== item && void 0 !== item && item.column && column && item.column.index === column.index) {\r\n                            visibleIndex = index;\r\n                            return false\r\n                        }\r\n                    }));\r\n                    return visibleIndex\r\n                },\r\n                _isFormItem: function(parameters) {\r\n                    var isDetailRow = \"detail\" === parameters.rowType || \"detailAdaptive\" === parameters.rowType;\r\n                    var isPopupEditing = \"data\" === parameters.rowType && this._editingController.isPopupEditMode();\r\n                    return (isDetailRow || isPopupEditing) && parameters.item\r\n                },\r\n                _updateCell: function($cell, parameters) {\r\n                    if (this._isFormItem(parameters)) {\r\n                        this._formItemPrepared(parameters, $cell)\r\n                    } else {\r\n                        this.callBase($cell, parameters)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editing_form_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    editingFormBasedModule\r\n} from \"../grid_core/ui.grid_core.editing_form_based\";\r\ngridCore.registerModule(\"editingFormBased\", editingFormBasedModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing_cell_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport holdEvent from \"../../events/hold\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    deferRender\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    createObjectWithChanges\r\n} from \"../../data/array_utils\";\r\nimport {\r\n    EDIT_MODE_BATCH,\r\n    EDIT_MODE_CELL,\r\n    TARGET_COMPONENT_NAME\r\n} from \"./ui.grid_core.editing_constants\";\r\nvar FOCUS_OVERLAY_CLASS = \"focus-overlay\";\r\nvar ADD_ROW_BUTTON_CLASS = \"addrow-button\";\r\nvar DROPDOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar CELL_MODIFIED_CLASS = \"dx-cell-modified\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar ROW_REMOVED = \"dx-row-removed\";\r\nvar EDITING_EDITROWKEY_OPTION_NAME = \"editing.editRowKey\";\r\nvar EDITING_EDITCOLUMNNAME_OPTION_NAME = \"editing.editColumnName\";\r\nvar DATA_EDIT_DATA_REMOVE_TYPE = \"remove\";\r\nexport default {\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                init: function() {\r\n                    var needCreateHandlers = !this._saveEditorHandler;\r\n                    this.callBase.apply(this, arguments);\r\n                    if (needCreateHandlers) {\r\n                        var $pointerDownTarget;\r\n                        var isResizing;\r\n                        this._pointerUpEditorHandler = () => {\r\n                            var _this$getController;\r\n                            isResizing = null === (_this$getController = this.getController(\"columnsResizer\")) || void 0 === _this$getController ? void 0 : _this$getController.isResizing()\r\n                        };\r\n                        this._pointerDownEditorHandler = e => $pointerDownTarget = $(e.target);\r\n                        this._saveEditorHandler = this.createAction((function(e) {\r\n                            var event = e.event;\r\n                            var $target = $(event.target);\r\n                            var targetComponent = event[TARGET_COMPONENT_NAME];\r\n                            if ($pointerDownTarget && $pointerDownTarget.is(\"input\") && !$pointerDownTarget.is($target)) {\r\n                                return\r\n                            }\r\n\r\n                            function checkEditorPopup($element) {\r\n                                return $element && !!$element.closest(\".\".concat(DROPDOWN_EDITOR_OVERLAY_CLASS)).length\r\n                            }\r\n                            if (this.isCellOrBatchEditMode() && !this._editCellInProgress) {\r\n                                var isEditorPopup = checkEditorPopup($target) || checkEditorPopup(null === targetComponent || void 0 === targetComponent ? void 0 : targetComponent.$element());\r\n                                var isDomElement = !!$target.closest(getWindow().document).length;\r\n                                var isAnotherComponent = targetComponent && !targetComponent._disposed && targetComponent !== this.component;\r\n                                var isAddRowButton = !!$target.closest(\".\".concat(this.addWidgetPrefix(ADD_ROW_BUTTON_CLASS))).length;\r\n                                var isFocusOverlay = $target.hasClass(this.addWidgetPrefix(FOCUS_OVERLAY_CLASS));\r\n                                var isCellEditMode = this.isCellEditMode();\r\n                                if (!isResizing && !isEditorPopup && !isFocusOverlay && !(isAddRowButton && isCellEditMode && this.isEditing()) && (isDomElement || isAnotherComponent)) {\r\n                                    this._closeEditItem.bind(this)($target)\r\n                                }\r\n                            }\r\n                        }));\r\n                        eventsEngine.on(domAdapter.getDocument(), pointerEvents.up, this._pointerUpEditorHandler);\r\n                        eventsEngine.on(domAdapter.getDocument(), pointerEvents.down, this._pointerDownEditorHandler);\r\n                        eventsEngine.on(domAdapter.getDocument(), clickEventName, this._saveEditorHandler)\r\n                    }\r\n                },\r\n                isCellEditMode: function() {\r\n                    return this.option(\"editing.mode\") === EDIT_MODE_CELL\r\n                },\r\n                isBatchEditMode: function() {\r\n                    return this.option(\"editing.mode\") === EDIT_MODE_BATCH\r\n                },\r\n                isCellOrBatchEditMode: function() {\r\n                    return this.isCellEditMode() || this.isBatchEditMode()\r\n                },\r\n                _needToCloseEditableCell: function($targetElement) {\r\n                    var $element = this.component.$element();\r\n                    var result = this.isEditing();\r\n                    var isCurrentComponentElement = !$element || !!$targetElement.closest($element).length;\r\n                    if (isCurrentComponentElement) {\r\n                        var isDataRow = $targetElement.closest(\".\" + DATA_ROW_CLASS).length;\r\n                        if (isDataRow) {\r\n                            var rowsView = this.getView(\"rowsView\");\r\n                            var $targetCell = $targetElement.closest(\".\" + ROW_CLASS + \"> td\");\r\n                            var rowIndex = rowsView.getRowIndex($targetCell.parent());\r\n                            var columnIndex = rowsView.getCellElements(rowIndex).index($targetCell);\r\n                            var visibleColumns = this._columnsController.getVisibleColumns();\r\n                            var allowEditing = visibleColumns[columnIndex] && visibleColumns[columnIndex].allowEditing;\r\n                            result = result && !allowEditing && !this.isEditCell(rowIndex, columnIndex)\r\n                        }\r\n                    }\r\n                    return result || this.callBase.apply(this, arguments)\r\n                },\r\n                _closeEditItem: function($targetElement) {\r\n                    if (this._needToCloseEditableCell($targetElement)) {\r\n                        this.closeEditCell()\r\n                    }\r\n                },\r\n                _focusEditorIfNeed: function() {\r\n                    if (this._needFocusEditor && this.isCellOrBatchEditMode()) {\r\n                        var _this$_rowsView;\r\n                        var editColumnIndex = this._getVisibleEditColumnIndex();\r\n                        var $cell = null === (_this$_rowsView = this._rowsView) || void 0 === _this$_rowsView ? void 0 : _this$_rowsView._getCellElement(this._getVisibleEditRowIndex(), editColumnIndex);\r\n                        if ($cell && !$cell.find(\":focus\").length) {\r\n                            this._focusEditingCell(() => {\r\n                                this._editCellInProgress = false\r\n                            }, $cell, true)\r\n                        } else {\r\n                            this._editCellInProgress = false\r\n                        }\r\n                        this._needFocusEditor = false\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                isEditing: function() {\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        var isEditRowKeyDefined = isDefined(this.option(EDITING_EDITROWKEY_OPTION_NAME));\r\n                        var isEditColumnNameDefined = isDefined(this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME));\r\n                        return isEditRowKeyDefined && isEditColumnNameDefined\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _handleEditColumnNameChange: function(args) {\r\n                    var oldRowIndex = this._getVisibleEditRowIndex(args.previousValue);\r\n                    if (this.isCellOrBatchEditMode() && -1 !== oldRowIndex && isDefined(args.value) && args.value !== args.previousValue) {\r\n                        var columnIndex = this._columnsController.getVisibleColumnIndex(args.value);\r\n                        var oldColumnIndex = this._columnsController.getVisibleColumnIndex(args.previousValue);\r\n                        this._editCellFromOptionChanged(columnIndex, oldColumnIndex, oldRowIndex)\r\n                    }\r\n                },\r\n                _addRow: function(parentKey, deferred) {\r\n                    if (this.isCellEditMode() && this.hasChanges()) {\r\n                        var _deferred = new Deferred;\r\n                        this.saveEditData().done(() => {\r\n                            if (!this.hasChanges()) {\r\n                                this.addRow(parentKey).done(_deferred.resolve).fail(_deferred.reject)\r\n                            } else {\r\n                                _deferred.reject(\"cancel\")\r\n                            }\r\n                        });\r\n                        return _deferred.promise()\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                editCell: function(rowIndex, columnIndex) {\r\n                    return this._editCell({\r\n                        rowIndex: rowIndex,\r\n                        columnIndex: columnIndex\r\n                    })\r\n                },\r\n                _editCell: function(options) {\r\n                    var d = new Deferred;\r\n                    var coreResult;\r\n                    this.executeOperation(d, () => {\r\n                        coreResult = this._editCellCore(options);\r\n                        when(coreResult).done(d.resolve).fail(d.reject)\r\n                    });\r\n                    return void 0 !== coreResult ? coreResult : d.promise()\r\n                },\r\n                _editCellCore: function(options) {\r\n                    var dataController = this._dataController;\r\n                    var isEditByOptionChanged = isDefined(options.oldColumnIndex) || isDefined(options.oldRowIndex);\r\n                    var {\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex,\r\n                        column: column,\r\n                        item: item\r\n                    } = this._getNormalizedEditCellOptions(options);\r\n                    var params = {\r\n                        data: null === item || void 0 === item ? void 0 : item.data,\r\n                        cancel: false,\r\n                        column: column\r\n                    };\r\n                    if (void 0 === item.key) {\r\n                        this._dataController.fireError(\"E1043\");\r\n                        return\r\n                    }\r\n                    if (column && (\"data\" === item.rowType || \"detailAdaptive\" === item.rowType) && !item.removed && this.isCellOrBatchEditMode()) {\r\n                        if (!isEditByOptionChanged && this.isEditCell(rowIndex, columnIndex)) {\r\n                            return true\r\n                        }\r\n                        var editRowIndex = rowIndex + dataController.getRowIndexOffset();\r\n                        return when(this._beforeEditCell(rowIndex, columnIndex, item)).done(cancel => {\r\n                            if (cancel) {\r\n                                return\r\n                            }\r\n                            if (!this._prepareEditCell(params, item, columnIndex, editRowIndex)) {\r\n                                this._processCanceledEditingCell()\r\n                            }\r\n                        })\r\n                    }\r\n                    return false\r\n                },\r\n                _beforeEditCell: function(rowIndex, columnIndex, item) {\r\n                    if (this.isCellEditMode() && !item.isNewRow && this.hasChanges()) {\r\n                        var d = new Deferred;\r\n                        this.saveEditData().always(() => {\r\n                            d.resolve(this.hasChanges())\r\n                        });\r\n                        return d\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    var publicMethods = this.callBase.apply(this, arguments);\r\n                    return publicMethods.concat([\"editCell\", \"closeEditCell\"])\r\n                },\r\n                _getNormalizedEditCellOptions: function(_ref) {\r\n                    var {\r\n                        oldColumnIndex: oldColumnIndex,\r\n                        oldRowIndex: oldRowIndex,\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    } = _ref;\r\n                    var columnsController = this._columnsController;\r\n                    var visibleColumns = columnsController.getVisibleColumns();\r\n                    var items = this._dataController.items();\r\n                    var item = items[rowIndex];\r\n                    var oldColumn;\r\n                    if (isDefined(oldColumnIndex)) {\r\n                        oldColumn = visibleColumns[oldColumnIndex]\r\n                    } else {\r\n                        oldColumn = this._getEditColumn()\r\n                    }\r\n                    if (!isDefined(oldRowIndex)) {\r\n                        oldRowIndex = this._getVisibleEditRowIndex()\r\n                    }\r\n                    if (isString(columnIndex)) {\r\n                        columnIndex = columnsController.columnOption(columnIndex, \"index\");\r\n                        columnIndex = columnsController.getVisibleIndex(columnIndex)\r\n                    }\r\n                    var column = visibleColumns[columnIndex];\r\n                    return {\r\n                        oldColumn: oldColumn,\r\n                        columnIndex: columnIndex,\r\n                        oldRowIndex: oldRowIndex,\r\n                        rowIndex: rowIndex,\r\n                        column: column,\r\n                        item: item\r\n                    }\r\n                },\r\n                _prepareEditCell: function(params, item, editColumnIndex, editRowIndex) {\r\n                    if (!item.isNewRow) {\r\n                        params.key = item.key\r\n                    }\r\n                    if (this._isEditingStart(params)) {\r\n                        return false\r\n                    }\r\n                    this._pageIndex = this._dataController.pageIndex();\r\n                    this._setEditRowKey(item.key);\r\n                    this._setEditColumnNameByIndex(editColumnIndex);\r\n                    if (!params.column.showEditorAlways) {\r\n                        var _item$oldData;\r\n                        this._addInternalData({\r\n                            key: item.key,\r\n                            oldData: null !== (_item$oldData = item.oldData) && void 0 !== _item$oldData ? _item$oldData : item.data\r\n                        })\r\n                    }\r\n                    return true\r\n                },\r\n                closeEditCell: function(isError, withoutSaveEditData) {\r\n                    var result = when();\r\n                    var oldEditRowIndex = this._getVisibleEditRowIndex();\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        var deferred = new Deferred;\r\n                        result = new Deferred;\r\n                        this.executeOperation(deferred, () => {\r\n                            this._closeEditCellCore(isError, oldEditRowIndex, withoutSaveEditData).always(result.resolve)\r\n                        })\r\n                    }\r\n                    return result.promise()\r\n                },\r\n                _closeEditCellCore: function(isError, oldEditRowIndex, withoutSaveEditData) {\r\n                    var dataController = this._dataController;\r\n                    var deferred = new Deferred;\r\n                    var promise = deferred.promise();\r\n                    if (this.isCellEditMode() && this.hasChanges()) {\r\n                        if (!withoutSaveEditData) {\r\n                            this.saveEditData().done(error => {\r\n                                if (!this.hasChanges()) {\r\n                                    this.closeEditCell(!!error).always(deferred.resolve);\r\n                                    return\r\n                                }\r\n                                deferred.resolve()\r\n                            });\r\n                            return promise\r\n                        }\r\n                    } else {\r\n                        this._resetEditRowKey();\r\n                        this._resetEditColumnName();\r\n                        if (oldEditRowIndex >= 0) {\r\n                            var rowIndices = [oldEditRowIndex];\r\n                            this._beforeCloseEditCellInBatchMode(rowIndices);\r\n                            if (!isError) {\r\n                                dataController.updateItems({\r\n                                    changeType: \"update\",\r\n                                    rowIndices: rowIndices\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                    deferred.resolve();\r\n                    return promise\r\n                },\r\n                _resetModifiedClassCells: function(changes) {\r\n                    if (this.isBatchEditMode()) {\r\n                        var columnsCount = this._columnsController.getVisibleColumns().length;\r\n                        changes.forEach(_ref2 => {\r\n                            var {\r\n                                key: key\r\n                            } = _ref2;\r\n                            var rowIndex = this._dataController.getRowIndexByKey(key);\r\n                            if (-1 !== rowIndex) {\r\n                                for (var columnIndex = 0; columnIndex < columnsCount; columnIndex++) {\r\n                                    this._rowsView._getCellElement(rowIndex, columnIndex).removeClass(CELL_MODIFIED_CLASS)\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                _prepareChange: function(options, value, text) {\r\n                    var $cellElement = $(options.cellElement);\r\n                    if (this.isBatchEditMode() && void 0 !== options.key) {\r\n                        this._applyModified($cellElement, options)\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _cancelSaving: function() {\r\n                    var dataController = this._dataController;\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        if (this.isBatchEditMode()) {\r\n                            this._resetEditIndices()\r\n                        }\r\n                        dataController.updateItems()\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                optionChanged: function(args) {\r\n                    var fullName = args.fullName;\r\n                    if (\"editing\" === args.name && fullName === EDITING_EDITCOLUMNNAME_OPTION_NAME) {\r\n                        this._handleEditColumnNameChange(args);\r\n                        args.handled = true\r\n                    } else {\r\n                        this.callBase(args)\r\n                    }\r\n                },\r\n                _editCellFromOptionChanged: function(columnIndex, oldColumnIndex, oldRowIndex) {\r\n                    var columns = this._columnsController.getVisibleColumns();\r\n                    if (columnIndex > -1) {\r\n                        deferRender(() => {\r\n                            this._repaintEditCell(columns[columnIndex], columns[oldColumnIndex], oldRowIndex)\r\n                        })\r\n                    }\r\n                },\r\n                _handleEditRowKeyChange: function(args) {\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        var columnIndex = this._getVisibleEditColumnIndex();\r\n                        var oldRowIndexCorrection = this._getEditRowIndexCorrection();\r\n                        var oldRowIndex = this._dataController.getRowIndexByKey(args.previousValue) + oldRowIndexCorrection;\r\n                        if (isDefined(args.value) && args.value !== args.previousValue) {\r\n                            var _this$_editCellFromOp;\r\n                            null === (_this$_editCellFromOp = this._editCellFromOptionChanged) || void 0 === _this$_editCellFromOp ? void 0 : _this$_editCellFromOp.call(this, columnIndex, columnIndex, oldRowIndex)\r\n                        }\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                deleteRow: function(rowIndex) {\r\n                    if (this.isCellEditMode() && this.isEditing()) {\r\n                        var isNewRow = this._dataController.items()[rowIndex].isNewRow;\r\n                        var rowKey = this._dataController.getKeyByRowIndex(rowIndex);\r\n                        this.closeEditCell(null, isNewRow).always(() => {\r\n                            rowIndex = this._dataController.getRowIndexByKey(rowKey);\r\n                            this._checkAndDeleteRow(rowIndex)\r\n                        })\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _checkAndDeleteRow: function(rowIndex) {\r\n                    if (this.isBatchEditMode()) {\r\n                        this._deleteRowCore(rowIndex)\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _refreshCore: function(isPageChanged) {\r\n                    var needResetIndexes = this.isBatchEditMode() || isPageChanged && \"virtual\" !== this.option(\"scrolling.mode\");\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        if (needResetIndexes) {\r\n                            this._resetEditColumnName();\r\n                            this._resetEditRowKey()\r\n                        }\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _allowRowAdding: function(params) {\r\n                    if (this.isBatchEditMode()) {\r\n                        return true\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _afterDeleteRow: function(rowIndex, oldEditRowIndex) {\r\n                    var dataController = this._dataController;\r\n                    if (this.isBatchEditMode()) {\r\n                        dataController.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: [oldEditRowIndex, rowIndex]\r\n                        });\r\n                        return (new Deferred).resolve()\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _updateEditRow: function(row, forceUpdateRow, isCustomSetCellValue) {\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        this._updateRowImmediately(row, forceUpdateRow, isCustomSetCellValue)\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _isDefaultButtonVisible: function(button, options) {\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        var isBatchMode = this.isBatchEditMode();\r\n                        switch (button.name) {\r\n                            case \"save\":\r\n                            case \"cancel\":\r\n                            case \"edit\":\r\n                                return false;\r\n                            case \"delete\":\r\n                                return this.callBase.apply(this, arguments) && (!isBatchMode || !options.row.removed);\r\n                            case \"undelete\":\r\n                                return isBatchMode && this.allowDeleting(options) && options.row.removed;\r\n                            default:\r\n                                return this.callBase.apply(this, arguments)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _isRowDeleteAllowed: function() {\r\n                    var callBase = this.callBase.apply(this, arguments);\r\n                    return callBase || this.isBatchEditMode()\r\n                },\r\n                _beforeEndSaving: function(changes) {\r\n                    if (this.isCellEditMode()) {\r\n                        var _changes$;\r\n                        if (\"update\" !== (null === (_changes$ = changes[0]) || void 0 === _changes$ ? void 0 : _changes$.type)) {\r\n                            this.callBase.apply(this, arguments)\r\n                        }\r\n                    } else {\r\n                        if (this.isBatchEditMode()) {\r\n                            this._resetModifiedClassCells(changes)\r\n                        }\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                prepareEditButtons: function(headerPanel) {\r\n                    var editingOptions = this.option(\"editing\") || {};\r\n                    var buttonItems = this.callBase.apply(this, arguments);\r\n                    if ((editingOptions.allowUpdating || editingOptions.allowAdding || editingOptions.allowDeleting) && this.isBatchEditMode()) {\r\n                        buttonItems.push(this.prepareButtonItem(headerPanel, \"save\", \"saveEditData\", 21));\r\n                        buttonItems.push(this.prepareButtonItem(headerPanel, \"revert\", \"cancelEditData\", 22))\r\n                    }\r\n                    return buttonItems\r\n                },\r\n                _saveEditDataInner: function() {\r\n                    var _deferred2;\r\n                    var editRow = this._dataController.getVisibleRows()[this.getEditRowIndex()];\r\n                    var editColumn = this._getEditColumn();\r\n                    var showEditorAlways = null === editColumn || void 0 === editColumn ? void 0 : editColumn.showEditorAlways;\r\n                    var isUpdateInCellMode = this.isCellEditMode() && !(null !== editRow && void 0 !== editRow && editRow.isNewRow);\r\n                    var deferred;\r\n                    if (isUpdateInCellMode && showEditorAlways) {\r\n                        deferred = new Deferred;\r\n                        this.addDeferred(deferred)\r\n                    }\r\n                    return this.callBase.apply(this, arguments).always(null === (_deferred2 = deferred) || void 0 === _deferred2 ? void 0 : _deferred2.resolve)\r\n                },\r\n                _applyChange: function(options, params, forceUpdateRow) {\r\n                    var isUpdateInCellMode = this.isCellEditMode() && options.row && !options.row.isNewRow;\r\n                    var showEditorAlways = options.column.showEditorAlways;\r\n                    var isCustomSetCellValue = options.column.setCellValue !== options.column.defaultSetCellValue;\r\n                    var focusPreviousEditingCell = showEditorAlways && !forceUpdateRow && isUpdateInCellMode && this.hasEditData() && !this.isEditCell(options.rowIndex, options.columnIndex);\r\n                    if (focusPreviousEditingCell) {\r\n                        this._focusEditingCell();\r\n                        this._updateEditRow(options.row, true, isCustomSetCellValue);\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _applyChangeCore: function(options, forceUpdateRow) {\r\n                    var showEditorAlways = options.column.showEditorAlways;\r\n                    var isUpdateInCellMode = this.isCellEditMode() && options.row && !options.row.isNewRow;\r\n                    if (showEditorAlways && !forceUpdateRow) {\r\n                        if (isUpdateInCellMode) {\r\n                            this._setEditRowKey(options.row.key, true);\r\n                            this._setEditColumnNameByIndex(options.columnIndex, true);\r\n                            return this.saveEditData()\r\n                        } else if (this.isBatchEditMode()) {\r\n                            forceUpdateRow = this._needUpdateRow(options.column);\r\n                            return this.callBase(options, forceUpdateRow)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _processDataItemCore: function(item, _ref3) {\r\n                    var {\r\n                        data: data,\r\n                        type: type\r\n                    } = _ref3;\r\n                    if (this.isBatchEditMode() && type === DATA_EDIT_DATA_REMOVE_TYPE) {\r\n                        item.data = createObjectWithChanges(item.data, data)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _processRemoveCore: function(changes, editIndex, processIfBatch) {\r\n                    if (this.isBatchEditMode() && !processIfBatch) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _processRemoveIfError: function() {\r\n                    if (this.isBatchEditMode()) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _beforeFocusElementInRow: function(rowIndex) {\r\n                    this.callBase.apply(this, arguments);\r\n                    var editRowIndex = rowIndex >= 0 ? rowIndex : 0;\r\n                    var columnIndex = this.getFirstEditableColumnIndex();\r\n                    columnIndex >= 0 && this.editCell(editRowIndex, columnIndex)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _createTable: function() {\r\n                    var $table = this.callBase.apply(this, arguments);\r\n                    var editingController = this._editingController;\r\n                    if (editingController.isCellOrBatchEditMode() && this.option(\"editing.allowUpdating\")) {\r\n                        eventsEngine.on($table, addNamespace(holdEvent.name, \"dxDataGridRowsView\"), \"td:not(.\" + EDITOR_CELL_CLASS + \")\", this.createAction(() => {\r\n                            if (editingController.isEditing()) {\r\n                                editingController.closeEditCell()\r\n                            }\r\n                        }))\r\n                    }\r\n                    return $table\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var editingController = this._editingController;\r\n                        var isRowRemoved = !!row.removed;\r\n                        if (editingController.isBatchEditMode()) {\r\n                            isRowRemoved && $row.addClass(ROW_REMOVED)\r\n                        }\r\n                    }\r\n                    return $row\r\n                }\r\n            },\r\n            headerPanel: {\r\n                isVisible: function() {\r\n                    var editingOptions = this.getController(\"editing\").option(\"editing\");\r\n                    return this.callBase() || editingOptions && (editingOptions.allowUpdating || editingOptions.allowDeleting) && editingOptions.mode === EDIT_MODE_BATCH\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editing_cell_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport editingCellBasedModule from \"../grid_core/ui.grid_core.editing_cell_based\";\r\ngridCore.registerModule(\"editingCellBased\", editingCellBasedModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.validating.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getWidth,\r\n    getOuterHeight,\r\n    setHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    createObjectWithChanges\r\n} from \"../../data/array_utils\";\r\nimport {\r\n    deferUpdate,\r\n    equalByValue,\r\n    getKeyHash\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined,\r\n    isEmptyObject,\r\n    isObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    focused\r\n} from \"../widget/selectors\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport Button from \"../button\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport ValidationEngine from \"../validation_engine\";\r\nimport Validator from \"../validator\";\r\nimport Overlay from \"../overlay/ui.overlay\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    Deferred,\r\n    when,\r\n    fromPromise\r\n} from \"../../core/utils/deferred\";\r\nimport LoadIndicator from \"../load_indicator\";\r\nimport {\r\n    encodeHtml\r\n} from \"../../core/utils/string\";\r\nimport browser from \"../../core/utils/browser\";\r\nvar INVALIDATE_CLASS = \"invalid\";\r\nvar REVERT_TOOLTIP_CLASS = \"revert-tooltip\";\r\nvar ROWS_VIEW_CLASS = \"rowsview\";\r\nvar INVALID_MESSAGE_CLASS = \"dx-invalid-message\";\r\nvar WIDGET_INVALID_MESSAGE_CLASS = \"invalid-message\";\r\nvar INVALID_MESSAGE_ALWAYS_CLASS = \"dx-invalid-message-always\";\r\nvar REVERT_BUTTON_CLASS = \"dx-revert-button\";\r\nvar VALIDATOR_CLASS = \"validator\";\r\nvar PENDING_INDICATOR_CLASS = \"dx-pending-indicator\";\r\nvar VALIDATION_PENDING_CLASS = \"dx-validation-pending\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar INSERT_INDEX = \"__DX_INSERT_INDEX__\";\r\nvar PADDING_BETWEEN_TOOLTIPS = 2;\r\nvar EDIT_MODE_ROW = \"row\";\r\nvar EDIT_MODE_FORM = \"form\";\r\nvar EDIT_MODE_BATCH = \"batch\";\r\nvar EDIT_MODE_CELL = \"cell\";\r\nvar EDIT_MODE_POPUP = \"popup\";\r\nvar GROUP_CELL_CLASS = \"dx-group-cell\";\r\nvar FORM_BASED_MODES = [EDIT_MODE_POPUP, EDIT_MODE_FORM];\r\nvar COMMAND_TRANSPARENT = \"transparent\";\r\nvar VALIDATION_STATUS = {\r\n    valid: \"valid\",\r\n    invalid: \"invalid\",\r\n    pending: \"pending\"\r\n};\r\nvar EDIT_DATA_INSERT_TYPE = \"insert\";\r\nvar EDIT_DATA_REMOVE_TYPE = \"remove\";\r\nvar VALIDATION_CANCELLED = \"cancel\";\r\nvar validationResultIsValid = function(result) {\r\n    return isDefined(result) && result !== VALIDATION_CANCELLED\r\n};\r\nvar cellValueShouldBeValidated = function(value, rowOptions) {\r\n    return void 0 !== value || void 0 === value && rowOptions && !rowOptions.isNewRow\r\n};\r\nvar ValidatingController = modules.Controller.inherit({\r\n    init: function() {\r\n        this._editingController = this.getController(\"editing\");\r\n        this.createAction(\"onRowValidating\");\r\n        if (!this._validationState) {\r\n            this.initValidationState()\r\n        }\r\n    },\r\n    initValidationState() {\r\n        this._validationState = [];\r\n        this._validationStateCache = {}\r\n    },\r\n    _rowIsValidated: function(change) {\r\n        var validationData = this._getValidationData(null === change || void 0 === change ? void 0 : change.key);\r\n        return !!validationData && !!validationData.validated\r\n    },\r\n    _getValidationData: function(key, create) {\r\n        var keyHash = getKeyHash(key);\r\n        var isObjectKeyHash = isObject(keyHash);\r\n        var validationData;\r\n        if (isObjectKeyHash) {\r\n            validationData = this._validationState.filter(data => equalByValue(data.key, key))[0]\r\n        } else {\r\n            validationData = this._validationStateCache[keyHash]\r\n        }\r\n        if (!validationData && create) {\r\n            validationData = {\r\n                key: key,\r\n                isValid: true\r\n            };\r\n            this._validationState.push(validationData);\r\n            if (!isObjectKeyHash) {\r\n                this._validationStateCache[keyHash] = validationData\r\n            }\r\n        }\r\n        return validationData\r\n    },\r\n    _getBrokenRules: function(validationData, validationResults) {\r\n        var brokenRules;\r\n        if (validationResults) {\r\n            brokenRules = validationResults.brokenRules || validationResults.brokenRule && [validationResults.brokenRule]\r\n        } else {\r\n            brokenRules = validationData.brokenRules || []\r\n        }\r\n        return brokenRules\r\n    },\r\n    _rowValidating: function(validationData, validationResults) {\r\n        var deferred = new Deferred;\r\n        var change = this._editingController.getChangeByKey(null === validationData || void 0 === validationData ? void 0 : validationData.key);\r\n        var brokenRules = this._getBrokenRules(validationData, validationResults);\r\n        var isValid = validationResults ? validationResults.isValid : validationData.isValid;\r\n        var parameters = {\r\n            brokenRules: brokenRules,\r\n            isValid: isValid,\r\n            key: change.key,\r\n            newData: change.data,\r\n            oldData: this._editingController._getOldData(change.key),\r\n            promise: null,\r\n            errorText: this.getHiddenValidatorsErrorText(brokenRules)\r\n        };\r\n        this.executeAction(\"onRowValidating\", parameters);\r\n        when(fromPromise(parameters.promise)).always((function() {\r\n            validationData.isValid = parameters.isValid;\r\n            validationData.errorText = parameters.errorText;\r\n            deferred.resolve(parameters)\r\n        }));\r\n        return deferred.promise()\r\n    },\r\n    getHiddenValidatorsErrorText: function(brokenRules) {\r\n        var brokenRulesMessages = [];\r\n        each(brokenRules, (function(_, brokenRule) {\r\n            var column = brokenRule.column;\r\n            var isGroupExpandColumn = column && void 0 !== column.groupIndex && !column.showWhenGrouped;\r\n            var isVisibleColumn = column && column.visible;\r\n            if (!brokenRule.validator.$element().parent().length && (!isVisibleColumn || isGroupExpandColumn)) {\r\n                brokenRulesMessages.push(brokenRule.message)\r\n            }\r\n        }));\r\n        return brokenRulesMessages.join(\", \")\r\n    },\r\n    validate: function(isFull) {\r\n        var isValid = true;\r\n        var editingController = this._editingController;\r\n        var deferred = new Deferred;\r\n        var completeList = [];\r\n        var editMode = editingController.getEditMode();\r\n        isFull = isFull || editMode === EDIT_MODE_ROW;\r\n        if (this._isValidationInProgress) {\r\n            return deferred.resolve(false).promise()\r\n        }\r\n        this._isValidationInProgress = true;\r\n        if (isFull) {\r\n            editingController.addDeferred(deferred);\r\n            var changes = editingController.getChanges();\r\n            each(changes, (index, _ref) => {\r\n                var {\r\n                    type: type,\r\n                    key: key\r\n                } = _ref;\r\n                if (\"remove\" !== type) {\r\n                    var validationData = this._getValidationData(key, true);\r\n                    var validationResult = this.validateGroup(validationData);\r\n                    completeList.push(validationResult);\r\n                    validationResult.done(validationResult => {\r\n                        validationData.validated = true;\r\n                        isValid = isValid && validationResult.isValid\r\n                    })\r\n                }\r\n            })\r\n        } else if (this._currentCellValidator) {\r\n            var validationResult = this.validateGroup(this._currentCellValidator._findGroup());\r\n            completeList.push(validationResult);\r\n            validationResult.done(validationResult => {\r\n                isValid = validationResult.isValid\r\n            })\r\n        }\r\n        when(...completeList).done(() => {\r\n            this._isValidationInProgress = false;\r\n            deferred.resolve(isValid)\r\n        });\r\n        return deferred.promise()\r\n    },\r\n    validateGroup: function(validationData) {\r\n        var _validationResult;\r\n        var result = new Deferred;\r\n        var validateGroup = validationData && ValidationEngine.getGroupConfig(validationData);\r\n        var validationResult;\r\n        if (null !== validateGroup && void 0 !== validateGroup && validateGroup.validators.length) {\r\n            this.resetRowValidationResults(validationData);\r\n            validationResult = ValidationEngine.validateGroup(validationData)\r\n        }\r\n        when((null === (_validationResult = validationResult) || void 0 === _validationResult ? void 0 : _validationResult.complete) || validationResult).done(validationResult => {\r\n            when(this._rowValidating(validationData, validationResult)).done(result.resolve)\r\n        });\r\n        return result.promise()\r\n    },\r\n    isRowDataModified: change => !isEmptyObject(change.data),\r\n    updateValidationState: function(change) {\r\n        var editMode = this._editingController.getEditMode();\r\n        var key = change.key;\r\n        var validationData = this._getValidationData(key, true);\r\n        if (-1 === FORM_BASED_MODES.indexOf(editMode)) {\r\n            if (change.type === EDIT_DATA_INSERT_TYPE && !this.isRowDataModified(change)) {\r\n                validationData.isValid = true;\r\n                return\r\n            }\r\n            this.setDisableApplyValidationResults(true);\r\n            var groupConfig = ValidationEngine.getGroupConfig(validationData);\r\n            if (groupConfig) {\r\n                var validationResult = ValidationEngine.validateGroup(validationData);\r\n                when(validationResult.complete || validationResult).done(validationResult => {\r\n                    validationData.isValid = validationResult.isValid;\r\n                    validationData.brokenRules = validationResult.brokenRules\r\n                })\r\n            } else if (!validationData.brokenRules || !validationData.brokenRules.length) {\r\n                validationData.isValid = true\r\n            }\r\n            this.setDisableApplyValidationResults(false)\r\n        } else {\r\n            validationData.isValid = true\r\n        }\r\n    },\r\n    setValidator: function(validator) {\r\n        this._currentCellValidator = validator\r\n    },\r\n    renderCellPendingIndicator: function($container) {\r\n        var $indicator = $container.find(\".\" + PENDING_INDICATOR_CLASS);\r\n        if (!$indicator.length) {\r\n            var $indicatorContainer = $container;\r\n            $indicator = $(\"<div>\").appendTo($indicatorContainer).addClass(PENDING_INDICATOR_CLASS);\r\n            this._createComponent($indicator, LoadIndicator);\r\n            $container.addClass(VALIDATION_PENDING_CLASS)\r\n        }\r\n    },\r\n    disposeCellPendingIndicator: function($container) {\r\n        var $indicator = $container.find(\".\" + PENDING_INDICATOR_CLASS);\r\n        if ($indicator.length) {\r\n            var indicator = LoadIndicator.getInstance($indicator);\r\n            if (indicator) {\r\n                indicator.dispose();\r\n                indicator.$element().remove()\r\n            }\r\n            $container.removeClass(VALIDATION_PENDING_CLASS)\r\n        }\r\n    },\r\n    validationStatusChanged: function(result) {\r\n        var validator = result.validator;\r\n        var validationGroup = validator.option(\"validationGroup\");\r\n        var column = validator.option(\"dataGetter\")().column;\r\n        this.updateCellValidationResult({\r\n            rowKey: validationGroup.key,\r\n            columnIndex: column.index,\r\n            validationResult: result\r\n        })\r\n    },\r\n    validatorInitialized: function(arg) {\r\n        arg.component.on(\"validating\", this.validationStatusChanged.bind(this));\r\n        arg.component.on(\"validated\", this.validationStatusChanged.bind(this))\r\n    },\r\n    validatorDisposing: function(arg) {\r\n        var validator = arg.component;\r\n        var validationGroup = validator.option(\"validationGroup\");\r\n        var column = validator.option(\"dataGetter\")().column;\r\n        var result = this.getCellValidationResult({\r\n            rowKey: null === validationGroup || void 0 === validationGroup ? void 0 : validationGroup.key,\r\n            columnIndex: column.index\r\n        });\r\n        if (validationResultIsValid(result) && result.status === VALIDATION_STATUS.pending) {\r\n            this.cancelCellValidationResult({\r\n                change: validationGroup,\r\n                columnIndex: column.index\r\n            })\r\n        }\r\n    },\r\n    applyValidationResult: function($container, result) {\r\n        var validator = result.validator;\r\n        var validationGroup = validator.option(\"validationGroup\");\r\n        var column = validator.option(\"dataGetter\")().column;\r\n        result.brokenRules && result.brokenRules.forEach(rule => {\r\n            rule.columnIndex = column.index;\r\n            rule.column = column\r\n        });\r\n        if ($container) {\r\n            var validationResult = this.getCellValidationResult({\r\n                rowKey: validationGroup.key,\r\n                columnIndex: column.index\r\n            });\r\n            var requestIsDisabled = validationResultIsValid(validationResult) && validationResult.disabledPendingId === result.id;\r\n            if (this._disableApplyValidationResults || requestIsDisabled) {\r\n                return\r\n            }\r\n            if (result.status === VALIDATION_STATUS.invalid) {\r\n                var $focus = $container.find(\":focus\");\r\n                if (!focused($focus)) {\r\n                    eventsEngine.trigger($focus, \"focus\");\r\n                    eventsEngine.trigger($focus, pointerEvents.down)\r\n                }\r\n            }\r\n            var editor = !column.editCellTemplate && this.getController(\"editorFactory\").getEditorInstance($container);\r\n            if (result.status === VALIDATION_STATUS.pending) {\r\n                if (editor) {\r\n                    editor.option(\"validationStatus\", VALIDATION_STATUS.pending)\r\n                } else {\r\n                    this.renderCellPendingIndicator($container)\r\n                }\r\n            } else if (editor) {\r\n                editor.option(\"validationStatus\", VALIDATION_STATUS.valid)\r\n            } else {\r\n                this.disposeCellPendingIndicator($container)\r\n            }\r\n            $container.toggleClass(this.addWidgetPrefix(INVALIDATE_CLASS), result.status === VALIDATION_STATUS.invalid)\r\n        }\r\n    },\r\n    _syncInternalEditingData: function(parameters) {\r\n        var _parameters$row;\r\n        var editingController = this._editingController;\r\n        var change = editingController.getChangeByKey(parameters.key);\r\n        var oldDataFromState = editingController._getOldData(parameters.key);\r\n        var oldData = null === (_parameters$row = parameters.row) || void 0 === _parameters$row ? void 0 : _parameters$row.oldData;\r\n        if (change && oldData && !oldDataFromState) {\r\n            editingController._addInternalData({\r\n                key: parameters.key,\r\n                oldData: oldData\r\n            })\r\n        }\r\n    },\r\n    createValidator: function(parameters, $container) {\r\n        var editingController = this._editingController;\r\n        var column = parameters.column;\r\n        var showEditorAlways = column.showEditorAlways;\r\n        if (isDefined(column.command) || !column.validationRules || !Array.isArray(column.validationRules) || !column.validationRules.length) {\r\n            return\r\n        }\r\n        var editIndex = editingController.getIndexByKey(parameters.key, editingController.getChanges());\r\n        var needCreateValidator = editIndex > -1;\r\n        if (!needCreateValidator) {\r\n            if (!showEditorAlways) {\r\n                var columnsController = this.getController(\"columns\");\r\n                var visibleColumns = (null === columnsController || void 0 === columnsController ? void 0 : columnsController.getVisibleColumns()) || [];\r\n                showEditorAlways = visibleColumns.some((function(column) {\r\n                    return column.showEditorAlways\r\n                }))\r\n            }\r\n            var isEditRow = equalByValue(this.option(\"editing.editRowKey\"), parameters.key);\r\n            var isCellOrBatchEditingAllowed = editingController.isCellOrBatchEditMode() && editingController.allowUpdating({\r\n                row: parameters.row\r\n            });\r\n            needCreateValidator = isEditRow || isCellOrBatchEditingAllowed && showEditorAlways;\r\n            if (isCellOrBatchEditingAllowed && showEditorAlways) {\r\n                var _parameters$row$oldDa, _parameters$row2;\r\n                editingController._addInternalData({\r\n                    key: parameters.key,\r\n                    oldData: null !== (_parameters$row$oldDa = null === (_parameters$row2 = parameters.row) || void 0 === _parameters$row2 ? void 0 : _parameters$row2.oldData) && void 0 !== _parameters$row$oldDa ? _parameters$row$oldDa : parameters.data\r\n                })\r\n            }\r\n        }\r\n        if (needCreateValidator) {\r\n            if ($container && !$container.length) {\r\n                errors.log(\"E1050\");\r\n                return\r\n            }\r\n            this._syncInternalEditingData(parameters);\r\n            var validationData = this._getValidationData(parameters.key, true);\r\n            var getValue = () => {\r\n                var change = editingController.getChangeByKey(null === validationData || void 0 === validationData ? void 0 : validationData.key);\r\n                var value = column.calculateCellValue((null === change || void 0 === change ? void 0 : change.data) || {});\r\n                return void 0 !== value ? value : parameters.value\r\n            };\r\n            var useDefaultValidator = $container && $container.hasClass(\"dx-widget\");\r\n            $container && $container.addClass(this.addWidgetPrefix(VALIDATOR_CLASS));\r\n            var validator = new Validator($container || $(\"<div>\"), {\r\n                name: column.caption,\r\n                validationRules: extend(true, [], column.validationRules),\r\n                validationGroup: validationData,\r\n                adapter: useDefaultValidator ? null : {\r\n                    getValue: getValue,\r\n                    applyValidationResults: result => {\r\n                        this.applyValidationResult($container, result)\r\n                    }\r\n                },\r\n                dataGetter: function() {\r\n                    var key = null === validationData || void 0 === validationData ? void 0 : validationData.key;\r\n                    var change = editingController.getChangeByKey(key);\r\n                    var oldData = editingController._getOldData(key);\r\n                    return {\r\n                        data: createObjectWithChanges(oldData, null === change || void 0 === change ? void 0 : change.data),\r\n                        column: column\r\n                    }\r\n                },\r\n                onInitialized: this.validatorInitialized.bind(this),\r\n                onDisposing: this.validatorDisposing.bind(this)\r\n            });\r\n            if (useDefaultValidator) {\r\n                var adapter = validator.option(\"adapter\");\r\n                if (adapter) {\r\n                    adapter.getValue = getValue;\r\n                    adapter.validationRequestsCallbacks = []\r\n                }\r\n            }\r\n            return validator\r\n        }\r\n    },\r\n    setDisableApplyValidationResults: function(flag) {\r\n        this._disableApplyValidationResults = flag\r\n    },\r\n    getDisableApplyValidationResults: function() {\r\n        return this._disableApplyValidationResults\r\n    },\r\n    isCurrentValidatorProcessing: function(_ref2) {\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        } = _ref2;\r\n        return this._currentCellValidator && equalByValue(this._currentCellValidator.option(\"validationGroup\").key, rowKey) && this._currentCellValidator.option(\"dataGetter\")().column.index === columnIndex\r\n    },\r\n    validateCell: function(validator) {\r\n        var cellParams = {\r\n            rowKey: validator.option(\"validationGroup\").key,\r\n            columnIndex: validator.option(\"dataGetter\")().column.index\r\n        };\r\n        var validationResult = this.getCellValidationResult(cellParams);\r\n        var stateRestored = validationResultIsValid(validationResult);\r\n        if (!stateRestored) {\r\n            validationResult = validator.validate()\r\n        }\r\n        var deferred = new Deferred;\r\n        var adapter = validator.option(\"adapter\");\r\n        if (stateRestored && validationResult.status === VALIDATION_STATUS.pending) {\r\n            this.updateCellValidationResult(cellParams);\r\n            adapter.applyValidationResults(validationResult)\r\n        }\r\n        when(validationResult.complete || validationResult).done(validationResult => {\r\n            stateRestored && adapter.applyValidationResults(validationResult);\r\n            deferred.resolve(validationResult)\r\n        });\r\n        return deferred.promise()\r\n    },\r\n    updateCellValidationResult: function(_ref3) {\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex,\r\n            validationResult: validationResult\r\n        } = _ref3;\r\n        var validationData = this._getValidationData(rowKey);\r\n        if (!validationData) {\r\n            return\r\n        }\r\n        if (!validationData.validationResults) {\r\n            validationData.validationResults = {}\r\n        }\r\n        var result;\r\n        if (validationResult) {\r\n            result = extend({}, validationResult);\r\n            validationData.validationResults[columnIndex] = result;\r\n            if (validationResult.status === VALIDATION_STATUS.pending) {\r\n                if (this._editingController.getEditMode() === EDIT_MODE_CELL) {\r\n                    result.deferred = new Deferred;\r\n                    result.complete.always(() => {\r\n                        result.deferred.resolve()\r\n                    });\r\n                    this._editingController.addDeferred(result.deferred)\r\n                }\r\n                if (this._disableApplyValidationResults) {\r\n                    result.disabledPendingId = validationResult.id;\r\n                    return\r\n                }\r\n            }\r\n        } else {\r\n            result = validationData.validationResults[columnIndex]\r\n        }\r\n        if (result && result.disabledPendingId) {\r\n            delete result.disabledPendingId\r\n        }\r\n    },\r\n    getCellValidationResult: function(_ref4) {\r\n        var _validationData$valid;\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        } = _ref4;\r\n        var validationData = this._getValidationData(rowKey, true);\r\n        return null === validationData || void 0 === validationData ? void 0 : null === (_validationData$valid = validationData.validationResults) || void 0 === _validationData$valid ? void 0 : _validationData$valid[columnIndex]\r\n    },\r\n    removeCellValidationResult: function(_ref5) {\r\n        var {\r\n            change: change,\r\n            columnIndex: columnIndex\r\n        } = _ref5;\r\n        var validationData = this._getValidationData(null === change || void 0 === change ? void 0 : change.key);\r\n        if (validationData && validationData.validationResults) {\r\n            this.cancelCellValidationResult({\r\n                change: change,\r\n                columnIndex: columnIndex\r\n            });\r\n            delete validationData.validationResults[columnIndex]\r\n        }\r\n    },\r\n    cancelCellValidationResult: function(_ref6) {\r\n        var {\r\n            change: change,\r\n            columnIndex: columnIndex\r\n        } = _ref6;\r\n        var validationData = this._getValidationData(change.key);\r\n        if (change && validationData.validationResults) {\r\n            var result = validationData.validationResults[columnIndex];\r\n            if (result) {\r\n                result.deferred && result.deferred.reject(VALIDATION_CANCELLED);\r\n                validationData.validationResults[columnIndex] = VALIDATION_CANCELLED\r\n            }\r\n        }\r\n    },\r\n    resetRowValidationResults: function(validationData) {\r\n        if (validationData) {\r\n            validationData.validationResults && delete validationData.validationResults;\r\n            delete validationData.validated\r\n        }\r\n    },\r\n    isInvalidCell: function(_ref7) {\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        } = _ref7;\r\n        var result = this.getCellValidationResult({\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        });\r\n        return validationResultIsValid(result) && result.status === VALIDATION_STATUS.invalid\r\n    },\r\n    getCellValidator: function(_ref8) {\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        } = _ref8;\r\n        var validationData = this._getValidationData(rowKey);\r\n        var groupConfig = validationData && ValidationEngine.getGroupConfig(validationData);\r\n        var validators = groupConfig && groupConfig.validators;\r\n        return validators && validators.filter(v => {\r\n            var column = v.option(\"dataGetter\")().column;\r\n            return column ? column.index === columnIndex : false\r\n        })[0]\r\n    },\r\n    setCellValidationStatus: function(cellOptions) {\r\n        var validationResult = this.getCellValidationResult({\r\n            rowKey: cellOptions.key,\r\n            columnIndex: cellOptions.column.index\r\n        });\r\n        if (isDefined(validationResult)) {\r\n            cellOptions.validationStatus = validationResult !== VALIDATION_CANCELLED ? validationResult.status : VALIDATION_CANCELLED\r\n        } else {\r\n            delete cellOptions.validationStatus\r\n        }\r\n    }\r\n});\r\nexport var validatingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            editing: {\r\n                texts: {\r\n                    validationCancelChanges: messageLocalization.format(\"dxDataGrid-validationCancelChanges\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        validating: ValidatingController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                _addChange: function(changeParams) {\r\n                    var change = this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    if (change && changeParams.type !== EDIT_DATA_REMOVE_TYPE) {\r\n                        validatingController.updateValidationState(change)\r\n                    }\r\n                    return change\r\n                },\r\n                _handleChangesChange: function(args) {\r\n                    this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    args.value.forEach(change => {\r\n                        if (void 0 === validatingController._getValidationData(change.key)) {\r\n                            validatingController.updateValidationState(change)\r\n                        }\r\n                    })\r\n                },\r\n                _updateRowAndPageIndices: function() {\r\n                    var that = this;\r\n                    var startInsertIndex = that.getView(\"rowsView\").getTopVisibleItemIndex();\r\n                    var rowIndex = startInsertIndex;\r\n                    each(that.getChanges(), (_, _ref9) => {\r\n                        var {\r\n                            key: key,\r\n                            type: type\r\n                        } = _ref9;\r\n                        var validationData = this.getController(\"validating\")._getValidationData(key);\r\n                        if (validationData && !validationData.isValid && validationData.pageIndex !== that._pageIndex) {\r\n                            validationData.pageIndex = that._pageIndex;\r\n                            if (type === EDIT_DATA_INSERT_TYPE) {\r\n                                validationData.rowIndex = startInsertIndex\r\n                            } else {\r\n                                validationData.rowIndex = rowIndex\r\n                            }\r\n                            rowIndex++\r\n                        }\r\n                    })\r\n                },\r\n                _getValidationGroupsInForm: function(detailOptions) {\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var validationData = validatingController._getValidationData(detailOptions.key, true);\r\n                    return {\r\n                        validationGroup: validationData\r\n                    }\r\n                },\r\n                _validateEditFormAfterUpdate: function(row, isCustomSetCellValue) {\r\n                    if (isCustomSetCellValue && this._editForm && !row.isNewRow) {\r\n                        this._editForm.validate()\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _prepareEditCell: function(params) {\r\n                    var isNotCanceled = this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    if (isNotCanceled && params.column.showEditorAlways) {\r\n                        validatingController.updateValidationState({\r\n                            key: params.key\r\n                        })\r\n                    }\r\n                    return isNotCanceled\r\n                },\r\n                processItems: function(items, changeType) {\r\n                    var changes = this.getChanges();\r\n                    var dataController = this.getController(\"data\");\r\n                    var validatingController = this.getController(\"validating\");\r\n                    items = this.callBase(items, changeType);\r\n                    var itemsCount = items.length;\r\n                    var addInValidItem = function(change, validationData) {\r\n                        var data = {\r\n                            key: change.key\r\n                        };\r\n                        var index = function(change, items) {\r\n                            var index = -1;\r\n                            var isInsert = change.type === EDIT_DATA_INSERT_TYPE;\r\n                            var key = change.key;\r\n                            each(items, (function(i, item) {\r\n                                if (equalByValue(key, isInsert ? item.key : dataController.keyOf(item))) {\r\n                                    index = i;\r\n                                    return false\r\n                                }\r\n                            }));\r\n                            return index\r\n                        }(change, items);\r\n                        if (index >= 0) {\r\n                            return\r\n                        }\r\n                        validationData.rowIndex = validationData.rowIndex > itemsCount ? validationData.rowIndex % itemsCount : validationData.rowIndex;\r\n                        var rowIndex = validationData.rowIndex;\r\n                        data[INSERT_INDEX] = 1;\r\n                        items.splice(rowIndex, 0, data)\r\n                    };\r\n                    if (this.getEditMode() === EDIT_MODE_BATCH && \"prepend\" !== changeType && \"append\" !== changeType) {\r\n                        changes.forEach(change => {\r\n                            var key = change.key;\r\n                            var validationData = validatingController._getValidationData(key);\r\n                            if (validationData && change.type && validationData.pageIndex === this._pageIndex && (null === change || void 0 === change ? void 0 : change.pageIndex) !== this._pageIndex) {\r\n                                addInValidItem(change, validationData)\r\n                            }\r\n                        })\r\n                    }\r\n                    return items\r\n                },\r\n                processDataItem: function(item) {\r\n                    var isInserted = item.data[INSERT_INDEX];\r\n                    var key = isInserted ? item.data.key : item.key;\r\n                    var editMode = this.getEditMode();\r\n                    if (editMode === EDIT_MODE_BATCH && isInserted && key) {\r\n                        var changes = this.getChanges();\r\n                        var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n                        if (editIndex >= 0) {\r\n                            var change = changes[editIndex];\r\n                            if (change.type !== EDIT_DATA_INSERT_TYPE) {\r\n                                var oldData = this._getOldData(change.key);\r\n                                item.data = extend(true, {}, oldData, change.data);\r\n                                item.key = key\r\n                            }\r\n                        }\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _createInvisibleColumnValidators: function(changes) {\r\n                    var that = this;\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var columnsController = this.getController(\"columns\");\r\n                    var columns = columnsController.getColumns();\r\n                    var invisibleColumns = columnsController.getInvisibleColumns().filter(column => !column.isBand);\r\n                    var groupColumns = columnsController.getGroupColumns().filter(column => !column.showWhenGrouped && -1 === invisibleColumns.indexOf(column));\r\n                    var invisibleColumnValidators = [];\r\n                    var isCellVisible = (column, rowKey) => this._dataController.getRowIndexByKey(rowKey) >= 0 && invisibleColumns.indexOf(column) < 0;\r\n                    invisibleColumns.push(...groupColumns);\r\n                    if (-1 === FORM_BASED_MODES.indexOf(this.getEditMode())) {\r\n                        each(columns, (function(_, column) {\r\n                            changes.forEach((function(change) {\r\n                                var data;\r\n                                if (isCellVisible(column, change.key)) {\r\n                                    return\r\n                                }\r\n                                if (change.type === EDIT_DATA_INSERT_TYPE) {\r\n                                    data = change.data\r\n                                } else if (\"update\" === change.type) {\r\n                                    var oldData = that._getOldData(change.key);\r\n                                    data = createObjectWithChanges(oldData, change.data)\r\n                                }\r\n                                if (data) {\r\n                                    var validator = validatingController.createValidator({\r\n                                        column: column,\r\n                                        key: change.key,\r\n                                        value: column.calculateCellValue(data)\r\n                                    });\r\n                                    if (validator) {\r\n                                        invisibleColumnValidators.push(validator)\r\n                                    }\r\n                                }\r\n                            }))\r\n                        }))\r\n                    }\r\n                    return function() {\r\n                        invisibleColumnValidators.forEach((function(validator) {\r\n                            validator.dispose()\r\n                        }))\r\n                    }\r\n                },\r\n                _beforeSaveEditData: function(change, editIndex) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var validationData = validatingController._getValidationData(null === change || void 0 === change ? void 0 : change.key);\r\n                    if (change) {\r\n                        var isValid = \"remove\" === change.type || validationData.isValid;\r\n                        result = result || !isValid\r\n                    } else {\r\n                        var disposeValidators = this._createInvisibleColumnValidators(this.getChanges());\r\n                        result = new Deferred;\r\n                        this.executeOperation(result, () => {\r\n                            validatingController.validate(true).done(isFullValid => {\r\n                                disposeValidators();\r\n                                this._updateRowAndPageIndices();\r\n                                switch (this.getEditMode()) {\r\n                                    case EDIT_MODE_CELL:\r\n                                        if (!isFullValid) {\r\n                                            this._focusEditingCell()\r\n                                        }\r\n                                        break;\r\n                                    case EDIT_MODE_BATCH:\r\n                                        if (!isFullValid) {\r\n                                            this._resetEditRowKey();\r\n                                            this._resetEditColumnName();\r\n                                            this.getController(\"data\").updateItems()\r\n                                        }\r\n                                }\r\n                                result.resolve(!isFullValid)\r\n                            })\r\n                        })\r\n                    }\r\n                    return result.promise ? result.promise() : result\r\n                },\r\n                _beforeEditCell: function(rowIndex, columnIndex, item) {\r\n                    var result = this.callBase(rowIndex, columnIndex, item);\r\n                    if (this.getEditMode() === EDIT_MODE_CELL) {\r\n                        var $cell = this._rowsView._getCellElement(rowIndex, columnIndex);\r\n                        var validator = $cell && $cell.data(\"dxValidator\");\r\n                        var rowOptions = $cell && $cell.closest(\".dx-row\").data(\"options\");\r\n                        var value = validator && validator.option(\"adapter\").getValue();\r\n                        if (validator && cellValueShouldBeValidated(value, rowOptions)) {\r\n                            var validatingController = this.getController(\"validating\");\r\n                            var deferred = new Deferred;\r\n                            when(validatingController.validateCell(validator), result).done((validationResult, result) => {\r\n                                deferred.resolve(validationResult.status === VALIDATION_STATUS.valid && result)\r\n                            });\r\n                            return deferred.promise()\r\n                        } else if (!validator) {\r\n                            return result\r\n                        }\r\n                    }\r\n                },\r\n                _afterSaveEditData: function(cancel) {\r\n                    var $firstErrorRow;\r\n                    var isCellEditMode = this.getEditMode() === EDIT_MODE_CELL;\r\n                    each(this.getChanges(), (_, change) => {\r\n                        var $errorRow = this._showErrorRow(change);\r\n                        $firstErrorRow = $firstErrorRow || $errorRow\r\n                    });\r\n                    if ($firstErrorRow) {\r\n                        var scrollable = this._rowsView.getScrollable();\r\n                        if (scrollable) {\r\n                            scrollable.update();\r\n                            scrollable.scrollToElement($firstErrorRow)\r\n                        }\r\n                    }\r\n                    if (cancel && isCellEditMode && this._needUpdateRow()) {\r\n                        var editRowIndex = this.getEditRowIndex();\r\n                        this._dataController.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: [editRowIndex]\r\n                        });\r\n                        this._focusEditingCell()\r\n                    } else if (!cancel) {\r\n                        var shouldResetValidationState = true;\r\n                        if (isCellEditMode) {\r\n                            var columns = this.getController(\"columns\").getColumns();\r\n                            var columnsWithValidatingEditors = columns.filter(col => {\r\n                                var _col$validationRules;\r\n                                return col.showEditorAlways && (null === (_col$validationRules = col.validationRules) || void 0 === _col$validationRules ? void 0 : _col$validationRules.length) > 0\r\n                            }).length > 0;\r\n                            shouldResetValidationState = !columnsWithValidatingEditors\r\n                        }\r\n                        if (shouldResetValidationState) {\r\n                            this.getController(\"validating\").initValidationState()\r\n                        }\r\n                    }\r\n                },\r\n                _handleDataChanged: function(args) {\r\n                    var validationState = this.getController(\"validating\")._validationState;\r\n                    if (\"standard\" === this.option(\"scrolling.mode\")) {\r\n                        this.resetRowAndPageIndices()\r\n                    }\r\n                    if (\"prepend\" === args.changeType) {\r\n                        each(validationState, (function(_, validationData) {\r\n                            validationData.rowIndex += args.items.length\r\n                        }))\r\n                    }\r\n                    this.callBase(args)\r\n                },\r\n                resetRowAndPageIndices: function() {\r\n                    var validationState = this.getController(\"validating\")._validationState;\r\n                    each(validationState, (_, validationData) => {\r\n                        if (validationData.pageIndex !== this._pageIndex) {\r\n                            delete validationData.pageIndex;\r\n                            delete validationData.rowIndex\r\n                        }\r\n                    })\r\n                },\r\n                _beforeCancelEditData: function() {\r\n                    this.getController(\"validating\").initValidationState();\r\n                    this.callBase()\r\n                },\r\n                _showErrorRow: function(change) {\r\n                    var $popupContent;\r\n                    var errorHandling = this.getController(\"errorHandling\");\r\n                    var items = this.getController(\"data\").items();\r\n                    var rowIndex = this.getIndexByKey(change.key, items);\r\n                    var validationData = this.getController(\"validating\")._getValidationData(change.key);\r\n                    if (!(null !== validationData && void 0 !== validationData && validationData.isValid) && null !== validationData && void 0 !== validationData && validationData.errorText && rowIndex >= 0) {\r\n                        $popupContent = this.getPopupContent();\r\n                        return errorHandling && errorHandling.renderErrorRow(null === validationData || void 0 === validationData ? void 0 : validationData.errorText, rowIndex, $popupContent)\r\n                    }\r\n                },\r\n                updateFieldValue: function(e) {\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var deferred = new Deferred;\r\n                    validatingController.removeCellValidationResult({\r\n                        change: this.getChangeByKey(e.key),\r\n                        columnIndex: e.column.index\r\n                    });\r\n                    this.callBase.apply(this, arguments).done(() => {\r\n                        var currentValidator = validatingController.getCellValidator({\r\n                            rowKey: e.key,\r\n                            columnIndex: e.column.index\r\n                        });\r\n                        when(currentValidator && validatingController.validateCell(currentValidator)).done(validationResult => {\r\n                            this.getController(\"editorFactory\").refocus();\r\n                            deferred.resolve(validationResult)\r\n                        })\r\n                    });\r\n                    return deferred.promise()\r\n                },\r\n                highlightDataCell: function($cell, parameters) {\r\n                    this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    validatingController.setCellValidationStatus(parameters);\r\n                    var isEditableCell = !!parameters.setValue;\r\n                    var cellModified = this.isCellModified(parameters);\r\n                    var isValidated = isDefined(parameters.validationStatus);\r\n                    var needValidation = cellModified && parameters.column.setCellValue || isEditableCell && !cellModified && !(parameters.row.isNewRow || !isValidated);\r\n                    if (needValidation) {\r\n                        var validator = $cell.data(\"dxValidator\");\r\n                        if (validator) {\r\n                            when(this.getController(\"validating\").validateCell(validator)).done(() => {\r\n                                validatingController.setCellValidationStatus(parameters)\r\n                            })\r\n                        }\r\n                    }\r\n                },\r\n                getChangeByKey: function(key) {\r\n                    var changes = this.getChanges();\r\n                    return changes[gridCoreUtils.getIndexByKey(key, changes)]\r\n                },\r\n                isCellModified: function(parameters) {\r\n                    var cellModified = this.callBase(parameters);\r\n                    var change = this.getChangeByKey(parameters.key);\r\n                    var isCellInvalid = !!parameters.row && this.getController(\"validating\").isInvalidCell({\r\n                        rowKey: parameters.key,\r\n                        columnIndex: parameters.column.index\r\n                    });\r\n                    return cellModified || this.getController(\"validating\")._rowIsValidated(change) && isCellInvalid\r\n                }\r\n            },\r\n            editorFactory: {\r\n                _showRevertButton: function($container) {\r\n                    if (!$container || !$container.length) {\r\n                        return\r\n                    }\r\n                    var $tooltipElement = this._rowsView.element().find(\".\" + this.addWidgetPrefix(REVERT_TOOLTIP_CLASS));\r\n                    var $overlayContainer = $container.closest(\".\".concat(this.addWidgetPrefix(CONTENT_CLASS)));\r\n                    $tooltipElement && $tooltipElement.remove();\r\n                    $tooltipElement = $(\"<div>\").addClass(this.addWidgetPrefix(REVERT_TOOLTIP_CLASS)).appendTo($container);\r\n                    var tooltipOptions = {\r\n                        animation: null,\r\n                        visible: true,\r\n                        width: \"auto\",\r\n                        height: \"auto\",\r\n                        target: $container,\r\n                        shading: false,\r\n                        container: $overlayContainer,\r\n                        propagateOutsideClick: true,\r\n                        closeOnOutsideClick: false,\r\n                        copyRootClassesToWrapper: true,\r\n                        _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n                        contentTemplate: () => {\r\n                            var $buttonElement = $(\"<div>\").addClass(REVERT_BUTTON_CLASS);\r\n                            var buttonOptions = {\r\n                                icon: \"revert\",\r\n                                hint: this.option(\"editing.texts.validationCancelChanges\"),\r\n                                onClick: () => {\r\n                                    this._editingController.cancelEditData()\r\n                                }\r\n                            };\r\n                            return new Button($buttonElement, buttonOptions).$element()\r\n                        },\r\n                        position: {\r\n                            my: \"left top\",\r\n                            at: \"right top\",\r\n                            offset: \"1 0\",\r\n                            collision: \"flip\",\r\n                            boundaryOffset: \"0 0\",\r\n                            boundary: this._rowsView.element()\r\n                        },\r\n                        onPositioned: this._positionedHandler.bind(this)\r\n                    };\r\n                    return new Overlay($tooltipElement, tooltipOptions)\r\n                },\r\n                _hideFixedGroupCell: function($cell, overlayOptions) {\r\n                    var $nextFixedRowElement;\r\n                    var $groupCellElement;\r\n                    var isFixedColumns = this._rowsView.isFixedColumns();\r\n                    var isFormOrPopupEditMode = this._editingController.isFormOrPopupEditMode();\r\n                    if (isFixedColumns && !isFormOrPopupEditMode) {\r\n                        var nextRowOptions = $cell.closest(\".dx-row\").next().data(\"options\");\r\n                        if (nextRowOptions && \"group\" === nextRowOptions.rowType) {\r\n                            $nextFixedRowElement = $(this._rowsView.getRowElement(nextRowOptions.rowIndex)).last();\r\n                            $groupCellElement = $nextFixedRowElement.find(\".\" + GROUP_CELL_CLASS);\r\n                            if ($groupCellElement.length && \"hidden\" !== $groupCellElement.get(0).style.visibility) {\r\n                                $groupCellElement.css(\"visibility\", \"hidden\");\r\n                                overlayOptions.onDisposing = function() {\r\n                                    $groupCellElement.css(\"visibility\", \"\")\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _positionedHandler: function(e, isOverlayVisible) {\r\n                    if (!e.component.__skipPositionProcessing) {\r\n                        var isRevertButton = $(e.element).hasClass(this.addWidgetPrefix(REVERT_TOOLTIP_CLASS));\r\n                        var needRepaint = !isRevertButton && this._rowsView.updateFreeSpaceRowHeight();\r\n                        var normalizedPosition = this._normalizeValidationMessagePositionAndMaxWidth(e, isRevertButton, isOverlayVisible);\r\n                        e.component.__skipPositionProcessing = !!(needRepaint || normalizedPosition);\r\n                        if (normalizedPosition) {\r\n                            e.component.option(normalizedPosition)\r\n                        } else if (needRepaint) {\r\n                            e.component.repaint()\r\n                        }\r\n                    }\r\n                },\r\n                _showValidationMessage: function($cell, messages, alignment, revertTooltip) {\r\n                    var editorPopup = $cell.find(\".dx-dropdowneditor-overlay\").data(\"dxPopup\");\r\n                    var isOverlayVisible = editorPopup && editorPopup.option(\"visible\");\r\n                    var myPosition = isOverlayVisible ? \"top right\" : \"top \" + alignment;\r\n                    var atPosition = isOverlayVisible ? \"top left\" : \"bottom \" + alignment;\r\n                    var $overlayContainer = $cell.closest(\".\".concat(this.addWidgetPrefix(CONTENT_CLASS)));\r\n                    var errorMessageText = \"\";\r\n                    messages && messages.forEach((function(message) {\r\n                        errorMessageText += (errorMessageText.length ? \"<br/>\" : \"\") + encodeHtml(message)\r\n                    }));\r\n                    var invalidMessageClass = this.addWidgetPrefix(WIDGET_INVALID_MESSAGE_CLASS);\r\n                    this._rowsView.element().find(\".\" + invalidMessageClass).remove();\r\n                    var $overlayElement = $(\"<div>\").addClass(INVALID_MESSAGE_CLASS).addClass(INVALID_MESSAGE_ALWAYS_CLASS).addClass(invalidMessageClass).html(errorMessageText).appendTo($cell);\r\n                    var overlayOptions = {\r\n                        target: $cell,\r\n                        container: $overlayContainer,\r\n                        shading: false,\r\n                        width: \"auto\",\r\n                        height: \"auto\",\r\n                        visible: true,\r\n                        animation: false,\r\n                        propagateOutsideClick: true,\r\n                        closeOnOutsideClick: false,\r\n                        copyRootClassesToWrapper: true,\r\n                        _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n                        position: {\r\n                            collision: \"flip\",\r\n                            boundary: this._rowsView.element(),\r\n                            boundaryOffset: \"0 0\",\r\n                            offset: {\r\n                                x: 0,\r\n                                y: !isOverlayVisible && browser.mozilla ? -1 : 0\r\n                            },\r\n                            my: myPosition,\r\n                            at: atPosition\r\n                        },\r\n                        onPositioned: e => {\r\n                            this._positionedHandler(e, isOverlayVisible);\r\n                            this._shiftValidationMessageIfNeed(e.component.$content(), revertTooltip && revertTooltip.$content(), $cell)\r\n                        }\r\n                    };\r\n                    this._hideFixedGroupCell($cell, overlayOptions);\r\n                    new Overlay($overlayElement, overlayOptions)\r\n                },\r\n                _normalizeValidationMessagePositionAndMaxWidth: function(options, isRevertButton, isOverlayVisible) {\r\n                    var fixedColumns = this._columnsController.getFixedColumns();\r\n                    if (!fixedColumns || !fixedColumns.length) {\r\n                        return\r\n                    }\r\n                    var position;\r\n                    var visibleTableWidth = !isRevertButton && (that = this, element = options.element, rowIndex = $(element).closest(\"tr\").index(), $cellElements = $(that._rowsView.getRowElement(rowIndex)).first().children().filter(\":not(.dx-hidden-cell)\"), that._rowsView._getWidths($cellElements).reduce((w1, w2) => w1 + w2, 0));\r\n                    var that, element, rowIndex, $cellElements;\r\n                    var $overlayContentElement = options.component.$content();\r\n                    var validationMessageWidth = getOuterWidth($overlayContentElement, true);\r\n                    var needMaxWidth = !isRevertButton && validationMessageWidth > visibleTableWidth;\r\n                    var columnIndex = this._rowsView.getCellIndex($(options.element).closest(\"td\"));\r\n                    var boundaryNonFixedColumnsInfo = function(fixedColumns) {\r\n                        var firstNonFixedColumnIndex;\r\n                        var lastNonFixedColumnIndex;\r\n                        fixedColumns.some((column, index) => {\r\n                            if (column.command === COMMAND_TRANSPARENT) {\r\n                                firstNonFixedColumnIndex = 0 === index ? -1 : index;\r\n                                lastNonFixedColumnIndex = index === fixedColumns.length - 1 ? -1 : index + column.colspan - 1;\r\n                                return true\r\n                            }\r\n                        });\r\n                        return {\r\n                            startColumnIndex: firstNonFixedColumnIndex,\r\n                            endColumnIndex: lastNonFixedColumnIndex\r\n                        }\r\n                    }(fixedColumns);\r\n                    if (!isRevertButton && (columnIndex === boundaryNonFixedColumnsInfo.startColumnIndex || needMaxWidth)) {\r\n                        position = {\r\n                            collision: \"none flip\",\r\n                            my: \"top left\",\r\n                            at: isOverlayVisible ? \"top right\" : \"bottom left\"\r\n                        }\r\n                    } else if (columnIndex === boundaryNonFixedColumnsInfo.endColumnIndex) {\r\n                        position = {\r\n                            collision: \"none flip\",\r\n                            my: \"top right\",\r\n                            at: isRevertButton || isOverlayVisible ? \"top left\" : \"bottom right\"\r\n                        };\r\n                        if (isRevertButton) {\r\n                            position.offset = \"-1 0\"\r\n                        }\r\n                    }\r\n                    return position && {\r\n                        position: position,\r\n                        maxWidth: needMaxWidth ? visibleTableWidth - 2 : void 0\r\n                    }\r\n                },\r\n                _shiftValidationMessageIfNeed: function($content, $revertContent, $cell) {\r\n                    if (!$revertContent) {\r\n                        return\r\n                    }\r\n                    var contentOffset = $content.offset();\r\n                    var revertContentOffset = $revertContent.offset();\r\n                    if (contentOffset.top === revertContentOffset.top && contentOffset.left + getWidth($content) > revertContentOffset.left) {\r\n                        var left = getWidth($revertContent) + PADDING_BETWEEN_TOOLTIPS;\r\n                        $content.css(\"left\", revertContentOffset.left < $cell.offset().left ? -left : left)\r\n                    }\r\n                },\r\n                _getTooltipsSelector: function() {\r\n                    var invalidMessageClass = this.addWidgetPrefix(WIDGET_INVALID_MESSAGE_CLASS);\r\n                    var revertTooltipClass = this.addWidgetPrefix(REVERT_TOOLTIP_CLASS);\r\n                    return \".dx-editor-cell .\" + revertTooltipClass + \", .dx-editor-cell .\" + invalidMessageClass + \", .dx-cell-modified .\" + invalidMessageClass\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._editingController = this.getController(\"editing\");\r\n                    this._columnsController = this.getController(\"columns\");\r\n                    this._rowsView = this.getView(\"rowsView\")\r\n                },\r\n                loseFocus: function(skipValidator) {\r\n                    if (!skipValidator) {\r\n                        this.getController(\"validating\").setValidator(null)\r\n                    }\r\n                    this.callBase()\r\n                },\r\n                updateCellState: function($element, validationResult, hideBorder) {\r\n                    var _change$data;\r\n                    var $focus = null === $element || void 0 === $element ? void 0 : $element.closest(this._getFocusCellSelector());\r\n                    var $cell = null !== $focus && void 0 !== $focus && $focus.is(\"td\") ? $focus : null;\r\n                    var rowOptions = null === $focus || void 0 === $focus ? void 0 : $focus.closest(\".dx-row\").data(\"options\");\r\n                    var change = rowOptions ? this.getController(\"editing\").getChangeByKey(rowOptions.key) : null;\r\n                    var column = $cell && this.getController(\"columns\").getVisibleColumns()[$cell.index()];\r\n                    var isCellModified = void 0 !== (null === change || void 0 === change ? void 0 : null === (_change$data = change.data) || void 0 === _change$data ? void 0 : _change$data[null === column || void 0 === column ? void 0 : column.name]) && !this._editingController.isSaving();\r\n                    var revertTooltip;\r\n                    if ((null === validationResult || void 0 === validationResult ? void 0 : validationResult.status) === VALIDATION_STATUS.invalid || isCellModified) {\r\n                        if (this._editingController.getEditMode() === EDIT_MODE_CELL) {\r\n                            revertTooltip = this._showRevertButton($focus)\r\n                        }\r\n                    }\r\n                    var showValidationMessage = validationResult && validationResult.status === VALIDATION_STATUS.invalid;\r\n                    if (showValidationMessage && $cell && column && validationResult && validationResult.brokenRules) {\r\n                        var errorMessages = [];\r\n                        validationResult.brokenRules.forEach((function(rule) {\r\n                            errorMessages.push(rule.message)\r\n                        }));\r\n                        this._showValidationMessage($focus, errorMessages, column.alignment || \"left\", revertTooltip)\r\n                    }!hideBorder && this._rowsView.element() && this._rowsView.updateFreeSpaceRowHeight()\r\n                },\r\n                focus: function($element, hideBorder) {\r\n                    if (!arguments.length) {\r\n                        return this.callBase()\r\n                    }\r\n                    var $tooltips = $element && $element.closest(\".\" + this.addWidgetPrefix(ROWS_VIEW_CLASS)).find(this._getTooltipsSelector());\r\n                    $tooltips && $tooltips.remove();\r\n                    if (null !== $element && void 0 !== $element && $element.hasClass(\"dx-row\")) {\r\n                        return this.callBase($element, hideBorder)\r\n                    }\r\n                    var $focus = null === $element || void 0 === $element ? void 0 : $element.closest(this._getFocusCellSelector());\r\n                    var callBase = this.callBase;\r\n                    var validator = $focus && ($focus.data(\"dxValidator\") || $element.find(\".\" + this.addWidgetPrefix(VALIDATOR_CLASS)).eq(0).data(\"dxValidator\"));\r\n                    var rowOptions = $focus && $focus.closest(\".dx-row\").data(\"options\");\r\n                    var editingController = this.getController(\"editing\");\r\n                    var change = rowOptions ? editingController.getChangeByKey(rowOptions.key) : null;\r\n                    var validationResult;\r\n                    var validatingController = this.getController(\"validating\");\r\n                    if (validator) {\r\n                        validatingController.setValidator(validator);\r\n                        var value = validator.option(\"adapter\").getValue();\r\n                        if (cellValueShouldBeValidated(value, rowOptions) || validatingController._rowIsValidated(change)) {\r\n                            editingController.waitForDeferredOperations().done(() => {\r\n                                when(validatingController.validateCell(validator)).done(result => {\r\n                                    validationResult = result;\r\n                                    var column = validationResult.validator.option(\"dataGetter\")().column;\r\n                                    if (change && column && !validatingController.isCurrentValidatorProcessing({\r\n                                            rowKey: change.key,\r\n                                            columnIndex: column.index\r\n                                        })) {\r\n                                        return\r\n                                    }\r\n                                    if (validationResult.status === VALIDATION_STATUS.invalid) {\r\n                                        hideBorder = true\r\n                                    }\r\n                                    this.updateCellState($element, validationResult, hideBorder);\r\n                                    callBase.call(this, $element, hideBorder)\r\n                                })\r\n                            });\r\n                            return this.callBase($element, hideBorder)\r\n                        }\r\n                    }\r\n                    this.updateCellState($element, validationResult, hideBorder);\r\n                    return this.callBase($element, hideBorder)\r\n                },\r\n                getEditorInstance: function($container) {\r\n                    var $editor = $container.find(\".dx-texteditor\").eq(0);\r\n                    return gridCoreUtils.getWidgetInstance($editor)\r\n                }\r\n            },\r\n            data: {\r\n                _isCellChanged: function(oldRow, newRow, visibleRowIndex, columnIndex, isLiveUpdate) {\r\n                    var _oldRow$cells, _cell$column$validati;\r\n                    var cell = null === (_oldRow$cells = oldRow.cells) || void 0 === _oldRow$cells ? void 0 : _oldRow$cells[columnIndex];\r\n                    var oldValidationStatus = cell && cell.validationStatus;\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var validationResult = validatingController.getCellValidationResult({\r\n                        rowKey: oldRow.key,\r\n                        columnIndex: columnIndex\r\n                    });\r\n                    var validationData = validatingController._getValidationData(oldRow.key);\r\n                    var newValidationStatus = validationResultIsValid(validationResult) ? validationResult.status : validationResult;\r\n                    var rowIsModified = JSON.stringify(newRow.modifiedValues) !== JSON.stringify(oldRow.modifiedValues);\r\n                    var cellIsMarkedAsInvalid = $(null === cell || void 0 === cell ? void 0 : cell.cellElement).hasClass(this.addWidgetPrefix(INVALIDATE_CLASS));\r\n                    var editingChanged = oldRow.isEditing !== newRow.isEditing;\r\n                    var hasValidationRules = null === cell || void 0 === cell ? void 0 : null === (_cell$column$validati = cell.column.validationRules) || void 0 === _cell$column$validati ? void 0 : _cell$column$validati.length;\r\n                    if (editingChanged && hasValidationRules || oldValidationStatus !== newValidationStatus && rowIsModified || validationData.isValid && cellIsMarkedAsInvalid) {\r\n                        return true\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                updateFreeSpaceRowHeight: function($table) {\r\n                    var $rowElements;\r\n                    var $freeSpaceRowElement;\r\n                    var $freeSpaceRowElements;\r\n                    var $element = this.element();\r\n                    var $tooltipContent = $element && $element.find(\".\" + this.addWidgetPrefix(WIDGET_INVALID_MESSAGE_CLASS) + \" .dx-overlay-content\");\r\n                    this.callBase($table);\r\n                    if ($tooltipContent && $tooltipContent.length) {\r\n                        $rowElements = this._getRowElements();\r\n                        $freeSpaceRowElements = this._getFreeSpaceRowElements($table);\r\n                        $freeSpaceRowElement = $freeSpaceRowElements.first();\r\n                        if ($freeSpaceRowElement && 1 === $rowElements.length && (!$freeSpaceRowElement.is(\":visible\") || getOuterHeight($tooltipContent) > getOuterHeight($freeSpaceRowElement))) {\r\n                            $freeSpaceRowElements.show();\r\n                            setHeight($freeSpaceRowElements, getOuterHeight($tooltipContent));\r\n                            return true\r\n                        }\r\n                    }\r\n                },\r\n                _formItemPrepared: function(cellOptions, $container) {\r\n                    this.callBase.apply(this, arguments);\r\n                    deferUpdate(() => {\r\n                        var $editor = $container.find(\".dx-widget\").first();\r\n                        var isEditorDisposed = $editor.length && !$editor.children().length;\r\n                        if (!isEditorDisposed) {\r\n                            this.getController(\"validating\").createValidator(cellOptions, $editor)\r\n                        }\r\n                    })\r\n                },\r\n                _cellPrepared: function($cell, parameters) {\r\n                    if (!this.getController(\"editing\").isFormOrPopupEditMode()) {\r\n                        this.getController(\"validating\").createValidator(parameters, $cell)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _restoreErrorRow: function(contentTable) {\r\n                    var editingController = this.getController(\"editing\");\r\n                    editingController && editingController.hasChanges() && this._getRowElements(contentTable).each((_, item) => {\r\n                        var rowOptions = $(item).data(\"options\");\r\n                        if (rowOptions) {\r\n                            var change = editingController.getChangeByKey(rowOptions.key);\r\n                            change && editingController._showErrorRow(change)\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.validating.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    validatingModule\r\n} from \"../grid_core/ui.grid_core.validating\";\r\ngridCore.registerModule(\"validating\", validatingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid.core.virtual_data_loader.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isObject,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\nvar needTwoPagesLoading = that => that.option(\"scrolling.loadTwoPagesOnStart\") || that._controller.isVirtual() || that._controller.getViewportItemIndex() > 0;\r\nvar getBeginPageIndex = that => that._cache.length ? that._cache[0].pageIndex : -1;\r\nvar getEndPageIndex = that => that._cache.length ? that._cache[that._cache.length - 1].pageIndex : -1;\r\nvar fireChanged = (that, changed, args) => {\r\n    that._isChangedFiring = true;\r\n    changed(args);\r\n    that._isChangedFiring = false\r\n};\r\nvar processDelayChanged = (that, changed, args) => {\r\n    if (that._isDelayChanged) {\r\n        that._isDelayChanged = false;\r\n        fireChanged(that, changed, args);\r\n        return true\r\n    }\r\n};\r\nvar getViewportPageCount = that => {\r\n    var pageSize = that._dataOptions.pageSize();\r\n    var preventPreload = that.option(\"scrolling.preventPreload\");\r\n    if (preventPreload) {\r\n        return 0\r\n    }\r\n    var realViewportSize = that._controller.viewportSize();\r\n    if (that._controller.isVirtualMode() && that.option(\"scrolling.removeInvisiblePages\")) {\r\n        realViewportSize = 0;\r\n        var viewportSize = that._controller.viewportSize() * that._controller.viewportItemSize();\r\n        var offset = that._controller.getContentOffset();\r\n        var position = that._controller.getViewportPosition();\r\n        var virtualItemsCount = that._controller.virtualItemsCount();\r\n        var totalItemsCount = that._dataOptions.totalItemsCount();\r\n        for (var itemIndex = virtualItemsCount.begin; itemIndex < totalItemsCount; itemIndex++) {\r\n            if (offset >= position + viewportSize) {\r\n                break\r\n            }\r\n            var itemSize = that._controller.getItemSizes()[itemIndex] || that._controller.viewportItemSize();\r\n            offset += itemSize;\r\n            if (offset >= position) {\r\n                realViewportSize++\r\n            }\r\n        }\r\n    }\r\n    return pageSize && realViewportSize > 0 ? Math.ceil(realViewportSize / pageSize) : 1\r\n};\r\nvar getPreloadPageCount = (that, previous) => {\r\n    var preloadEnabled = that.option(\"scrolling.preloadEnabled\");\r\n    var pageCount = getViewportPageCount(that);\r\n    var isAppendMode = that._controller.isAppendMode();\r\n    if (pageCount) {\r\n        if (previous) {\r\n            pageCount = preloadEnabled ? 1 : 0\r\n        } else {\r\n            if (preloadEnabled) {\r\n                pageCount++\r\n            }\r\n            if (isAppendMode || !needTwoPagesLoading(that)) {\r\n                pageCount--\r\n            }\r\n        }\r\n    }\r\n    return pageCount\r\n};\r\nvar getPageIndexForLoad = that => {\r\n    var result = -1;\r\n    var beginPageIndex = getBeginPageIndex(that);\r\n    var dataOptions = that._dataOptions;\r\n    if (beginPageIndex < 0) {\r\n        result = that._pageIndex\r\n    } else if (!that._cache[that._pageIndex - beginPageIndex]) {\r\n        result = that._pageIndex\r\n    } else if (beginPageIndex >= 0 && that._controller.viewportSize() >= 0) {\r\n        if (beginPageIndex > 0) {\r\n            var needToLoadPageBeforeLast = getEndPageIndex(that) + 1 === dataOptions.pageCount() && that._cache.length < getPreloadPageCount(that) + 1;\r\n            var needToLoadPrevPage = needToLoadPageBeforeLast || that._pageIndex === beginPageIndex && getPreloadPageCount(that, true);\r\n            if (needToLoadPrevPage) {\r\n                result = beginPageIndex - 1\r\n            }\r\n        }\r\n        if (result < 0) {\r\n            var needToLoadNextPage = beginPageIndex + that._cache.length <= that._pageIndex + getPreloadPageCount(that);\r\n            if (needToLoadNextPage) {\r\n                result = beginPageIndex + that._cache.length\r\n            }\r\n        }\r\n    }\r\n    if (that._loadingPageIndexes[result]) {\r\n        result = -1\r\n    }\r\n    return result\r\n};\r\nvar loadCore = (that, pageIndex) => {\r\n    var dataOptions = that._dataOptions;\r\n    if (pageIndex === that.pageIndex() || !dataOptions.isLoading() && pageIndex < dataOptions.pageCount() || !dataOptions.hasKnownLastPage() && pageIndex === dataOptions.pageCount()) {\r\n        dataOptions.pageIndex(pageIndex);\r\n        that._loadingPageIndexes[pageIndex] = true;\r\n        return when(dataOptions.load()).always(() => {\r\n            that._loadingPageIndexes[pageIndex] = false\r\n        })\r\n    }\r\n};\r\nvar processChanged = (that, changed, changeType, isDelayChanged, removeCacheItem) => {\r\n    var dataOptions = that._dataOptions;\r\n    var items = dataOptions.items().slice();\r\n    var change = isObject(changeType) ? changeType : void 0;\r\n    var isPrepend = \"prepend\" === changeType;\r\n    var viewportItems = dataOptions.viewportItems();\r\n    if (changeType && isString(changeType) && !that._isDelayChanged) {\r\n        change = {\r\n            changeType: changeType,\r\n            items: items\r\n        };\r\n        if (removeCacheItem) {\r\n            change.removeCount = removeCacheItem.itemsCount;\r\n            if (change.removeCount && dataOptions.correctCount) {\r\n                change.removeCount = dataOptions.correctCount(viewportItems, change.removeCount, isPrepend)\r\n            }\r\n        }\r\n    }\r\n    var removeItemCount = removeCacheItem ? removeCacheItem.itemsLength : 0;\r\n    if (removeItemCount && dataOptions.correctCount) {\r\n        removeItemCount = dataOptions.correctCount(viewportItems, removeItemCount, isPrepend)\r\n    }\r\n    if (\"append\" === changeType) {\r\n        viewportItems.push.apply(viewportItems, items);\r\n        if (removeCacheItem) {\r\n            viewportItems.splice(0, removeItemCount)\r\n        }\r\n    } else if (isPrepend) {\r\n        viewportItems.unshift.apply(viewportItems, items);\r\n        if (removeCacheItem) {\r\n            viewportItems.splice(-removeItemCount)\r\n        }\r\n    } else {\r\n        that._dataOptions.viewportItems(items)\r\n    }\r\n    dataOptions.updateLoading();\r\n    that._lastPageIndex = that.pageIndex();\r\n    that._isDelayChanged = isDelayChanged;\r\n    if (!isDelayChanged) {\r\n        fireChanged(that, changed, change)\r\n    }\r\n};\r\nexport class VirtualDataLoader {\r\n    constructor(controller, dataOptions) {\r\n        this._controller = controller;\r\n        this._dataOptions = dataOptions;\r\n        this._pageIndex = this._lastPageIndex = dataOptions.pageIndex();\r\n        this._cache = [];\r\n        this._loadingPageIndexes = {}\r\n    }\r\n    option() {\r\n        return this._controller.option.apply(this._controller, arguments)\r\n    }\r\n    viewportItemIndexChanged(itemIndex) {\r\n        var pageSize = this._dataOptions.pageSize();\r\n        var pageCount = this._dataOptions.pageCount();\r\n        var virtualMode = this._controller.isVirtualMode();\r\n        var appendMode = this._controller.isAppendMode();\r\n        var totalItemsCount = this._dataOptions.totalItemsCount();\r\n        var newPageIndex;\r\n        if (pageSize && (virtualMode || appendMode) && totalItemsCount >= 0) {\r\n            var viewportSize = this._controller.viewportSize();\r\n            if (viewportSize && itemIndex + viewportSize >= totalItemsCount && !this._controller.isVirtual()) {\r\n                if (this._dataOptions.hasKnownLastPage()) {\r\n                    newPageIndex = pageCount - 1;\r\n                    var lastPageSize = totalItemsCount % pageSize;\r\n                    if (newPageIndex > 0 && lastPageSize > 0 && lastPageSize < viewportSize) {\r\n                        newPageIndex--\r\n                    }\r\n                } else {\r\n                    newPageIndex = pageCount\r\n                }\r\n            } else {\r\n                newPageIndex = Math.floor(itemIndex / pageSize);\r\n                var maxPageIndex = pageCount - 1;\r\n                newPageIndex = Math.max(newPageIndex, 0);\r\n                newPageIndex = Math.min(newPageIndex, maxPageIndex)\r\n            }\r\n            this.pageIndex(newPageIndex);\r\n            return this.load()\r\n        }\r\n    }\r\n    pageIndex(pageIndex) {\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        var isAppendMode = this._controller.isAppendMode();\r\n        if (false !== this.option(LEGACY_SCROLLING_MODE) && (isVirtualMode || isAppendMode)) {\r\n            if (void 0 !== pageIndex) {\r\n                this._pageIndex = pageIndex\r\n            }\r\n            return this._pageIndex\r\n        } else {\r\n            return this._dataOptions.pageIndex(pageIndex)\r\n        }\r\n    }\r\n    beginPageIndex(defaultPageIndex) {\r\n        var beginPageIndex = getBeginPageIndex(this);\r\n        if (beginPageIndex < 0) {\r\n            beginPageIndex = void 0 !== defaultPageIndex ? defaultPageIndex : this.pageIndex()\r\n        }\r\n        return beginPageIndex\r\n    }\r\n    endPageIndex() {\r\n        var endPageIndex = getEndPageIndex(this);\r\n        return endPageIndex > 0 ? endPageIndex : this._lastPageIndex\r\n    }\r\n    pageSize() {\r\n        return this._dataOptions.pageSize()\r\n    }\r\n    load() {\r\n        var dataOptions = this._dataOptions;\r\n        var result;\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        var isAppendMode = this._controller.isAppendMode();\r\n        if (false !== this.option(LEGACY_SCROLLING_MODE) && (isVirtualMode || isAppendMode)) {\r\n            var pageIndexForLoad = getPageIndexForLoad(this);\r\n            if (pageIndexForLoad >= 0) {\r\n                var loadResult = loadCore(this, pageIndexForLoad);\r\n                if (loadResult) {\r\n                    result = new Deferred;\r\n                    loadResult.done(() => {\r\n                        var delayDeferred = this._delayDeferred;\r\n                        if (delayDeferred) {\r\n                            delayDeferred.done(result.resolve).fail(result.reject)\r\n                        } else {\r\n                            result.resolve()\r\n                        }\r\n                    }).fail(result.reject);\r\n                    dataOptions.updateLoading()\r\n                }\r\n            }\r\n        } else {\r\n            result = dataOptions.load()\r\n        }\r\n        if (!result && this._lastPageIndex !== this.pageIndex()) {\r\n            this._dataOptions.onChanged({\r\n                changeType: \"pageIndex\"\r\n            })\r\n        }\r\n        return result || (new Deferred).resolve()\r\n    }\r\n    loadIfNeed() {\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        var isAppendMode = this._controller.isAppendMode();\r\n        if ((isVirtualMode || isAppendMode) && !this._dataOptions.isLoading() && (!this._isChangedFiring || this._controller.isVirtual())) {\r\n            var position = this._controller.getViewportPosition();\r\n            if (position > 0) {\r\n                this._controller._setViewportPositionCore(position)\r\n            } else {\r\n                this.load()\r\n            }\r\n        }\r\n    }\r\n    handleDataChanged(callBase, e) {\r\n        var dataOptions = this._dataOptions;\r\n        var lastCacheLength = this._cache.length;\r\n        var changeType;\r\n        var removeInvisiblePages;\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        var isAppendMode = this._controller.isAppendMode();\r\n        if (e && e.changes) {\r\n            fireChanged(this, callBase, e)\r\n        } else if (false !== this.option(LEGACY_SCROLLING_MODE) && (isVirtualMode || isAppendMode)) {\r\n            var beginPageIndex = getBeginPageIndex(this);\r\n            if (beginPageIndex >= 0) {\r\n                if (isVirtualMode && beginPageIndex + this._cache.length !== dataOptions.pageIndex() && beginPageIndex - 1 !== dataOptions.pageIndex()) {\r\n                    lastCacheLength = 0;\r\n                    this._cache = []\r\n                }\r\n                if (isAppendMode) {\r\n                    if (0 === dataOptions.pageIndex()) {\r\n                        this._cache = []\r\n                    } else if (dataOptions.pageIndex() < getEndPageIndex(this)) {\r\n                        fireChanged(this, callBase, {\r\n                            changeType: \"append\",\r\n                            items: []\r\n                        });\r\n                        return\r\n                    }\r\n                }\r\n            }\r\n            var cacheItem = {\r\n                pageIndex: dataOptions.pageIndex(),\r\n                itemsLength: dataOptions.items(true).length,\r\n                itemsCount: this.itemsCount(true)\r\n            };\r\n            if (this.option(\"scrolling.removeInvisiblePages\") && isVirtualMode) {\r\n                removeInvisiblePages = this._cache.length > Math.max(getPreloadPageCount(this) + (this.option(\"scrolling.preloadEnabled\") ? 1 : 0), 2)\r\n            } else {\r\n                processDelayChanged(this, callBase, {\r\n                    isDelayed: true\r\n                })\r\n            }\r\n            var removeCacheItem;\r\n            if (beginPageIndex === dataOptions.pageIndex() + 1) {\r\n                if (removeInvisiblePages) {\r\n                    removeCacheItem = this._cache.pop()\r\n                }\r\n                changeType = \"prepend\";\r\n                this._cache.unshift(cacheItem)\r\n            } else {\r\n                if (removeInvisiblePages) {\r\n                    removeCacheItem = this._cache.shift()\r\n                }\r\n                changeType = \"append\";\r\n                this._cache.push(cacheItem)\r\n            }\r\n            var isDelayChanged = isVirtualMode && 0 === lastCacheLength && needTwoPagesLoading(this);\r\n            processChanged(this, callBase, this._cache.length > 1 ? changeType : void 0, isDelayChanged, removeCacheItem);\r\n            this._delayDeferred = this.load().done(() => {\r\n                if (processDelayChanged(this, callBase)) {\r\n                    this.load()\r\n                }\r\n            })\r\n        } else {\r\n            processChanged(this, callBase, e)\r\n        }\r\n    }\r\n    getDelayDeferred() {\r\n        return this._delayDeferred\r\n    }\r\n    itemsCount(isBase) {\r\n        var itemsCount = 0;\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        if (!isBase && isVirtualMode) {\r\n            this._cache.forEach(cacheItem => {\r\n                itemsCount += cacheItem.itemsCount\r\n            })\r\n        } else {\r\n            itemsCount = this._dataOptions.itemsCount()\r\n        }\r\n        return itemsCount\r\n    }\r\n    virtualItemsCount() {\r\n        var pageIndex = getBeginPageIndex(this);\r\n        if (pageIndex < 0) {\r\n            pageIndex = this._dataOptions.pageIndex()\r\n        }\r\n        var beginItemsCount = pageIndex * this._dataOptions.pageSize();\r\n        var itemsCount = this._cache.length * this._dataOptions.pageSize();\r\n        var endItemsCount = Math.max(0, this._dataOptions.totalItemsCount() - itemsCount - beginItemsCount);\r\n        return {\r\n            begin: beginItemsCount,\r\n            end: endItemsCount\r\n        }\r\n    }\r\n    reset() {\r\n        this._loadingPageIndexes = {};\r\n        this._cache = []\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_scrolling_core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport positionUtils from \"../../animation/position\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    VirtualDataLoader\r\n} from \"./ui.grid.core.virtual_data_loader\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nvar SCROLLING_MODE_INFINITE = \"infinite\";\r\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\nvar _isVirtualMode = that => that.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL || that._isVirtual;\r\nvar _isAppendMode = that => that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE && !that._isVirtual;\r\nexport function subscribeToExternalScrollers($element, scrollChangedHandler, $targetElement) {\r\n    var $scrollElement;\r\n    var scrollableArray = [];\r\n    var scrollToArray = [];\r\n    var disposeArray = [];\r\n    $targetElement = $targetElement || $element;\r\n\r\n    function getElementOffset(scrollable) {\r\n        var $scrollableElement = scrollable.element ? scrollable.$element() : scrollable;\r\n        var scrollableOffset = positionUtils.offset($scrollableElement);\r\n        if (!scrollableOffset) {\r\n            return $element.offset().top\r\n        }\r\n        return scrollable.scrollTop() - (scrollableOffset.top - $element.offset().top)\r\n    }\r\n    var widgetScrollStrategy = {\r\n        on: function(scrollable, eventName, handler) {\r\n            scrollable.on(\"scroll\", handler)\r\n        },\r\n        off: function(scrollable, eventName, handler) {\r\n            scrollable.off(\"scroll\", handler)\r\n        }\r\n    };\r\n\r\n    function subscribeToScrollEvents($scrollElement) {\r\n        var isDocument = \"#document\" === $scrollElement.get(0).nodeName;\r\n        var scrollable = $scrollElement.data(\"dxScrollable\");\r\n        var eventsStrategy = widgetScrollStrategy;\r\n        if (!scrollable) {\r\n            scrollable = isDocument && $(getWindow()) || \"auto\" === $scrollElement.css(\"overflowY\") && $scrollElement;\r\n            eventsStrategy = eventsEngine;\r\n            if (!scrollable) {\r\n                return\r\n            }\r\n        }\r\n        var handler = function(scrollable) {\r\n            return function() {\r\n                var scrollTop = scrollable.scrollTop() - getElementOffset(scrollable);\r\n                scrollTop = scrollTop > 0 ? scrollTop : 0;\r\n                scrollChangedHandler(scrollTop)\r\n            }\r\n        }(scrollable);\r\n        eventsStrategy.on(scrollable, \"scroll\", handler);\r\n        scrollToArray.push((function(pos) {\r\n            var topOffset = getElementOffset(scrollable);\r\n            var scrollMethod = scrollable.scrollTo ? \"scrollTo\" : \"scrollTop\";\r\n            if (pos - topOffset >= 0) {\r\n                scrollable[scrollMethod](pos + topOffset)\r\n            }\r\n        }));\r\n        scrollableArray.push(scrollable);\r\n        disposeArray.push((function() {\r\n            eventsStrategy.off(scrollable, \"scroll\", handler)\r\n        }))\r\n    }\r\n    for ($scrollElement = $targetElement.parent(); $scrollElement.length; $scrollElement = $scrollElement.parent()) {\r\n        subscribeToScrollEvents($scrollElement)\r\n    }\r\n    return {\r\n        scrollTo: function(pos) {\r\n            each(scrollToArray, (function(_, scrollTo) {\r\n                scrollTo(pos)\r\n            }))\r\n        },\r\n        dispose: function() {\r\n            each(disposeArray, (function(_, dispose) {\r\n                dispose()\r\n            }))\r\n        }\r\n    }\r\n}\r\nexport var VirtualScrollController = Class.inherit(function() {\r\n    var members = {\r\n        ctor: function(component, dataOptions, isVirtual) {\r\n            this._dataOptions = dataOptions;\r\n            this.component = component;\r\n            this._viewportSize = false === component.option(LEGACY_SCROLLING_MODE) ? 15 : 0;\r\n            this._viewportItemSize = 20;\r\n            this._viewportItemIndex = 0;\r\n            this._position = 0;\r\n            this._isScrollingBack = false;\r\n            this._contentSize = 0;\r\n            this._itemSizes = {};\r\n            this._sizeRatio = 1;\r\n            this._isVirtual = isVirtual;\r\n            this.positionChanged = Callbacks();\r\n            this._dataLoader = new VirtualDataLoader(this, this._dataOptions)\r\n        },\r\n        getItemSizes: function() {\r\n            return this._itemSizes\r\n        },\r\n        option: function() {\r\n            return this.component.option.apply(this.component, arguments)\r\n        },\r\n        isVirtual: function() {\r\n            return this._isVirtual\r\n        },\r\n        virtualItemsCount: function() {\r\n            if (_isVirtualMode(this)) {\r\n                var dataOptions = this._dataOptions;\r\n                var totalItemsCount = dataOptions.totalItemsCount();\r\n                if (false === this.option(LEGACY_SCROLLING_MODE) && -1 !== totalItemsCount) {\r\n                    var viewportParams = this.getViewportParams();\r\n                    var loadedOffset = dataOptions.loadedOffset();\r\n                    var loadedItemCount = dataOptions.loadedItemCount();\r\n                    var skip = Math.max(viewportParams.skip, loadedOffset);\r\n                    var take = Math.min(viewportParams.take, loadedItemCount);\r\n                    var endItemsCount = Math.max(totalItemsCount - (skip + take), 0);\r\n                    return {\r\n                        begin: skip,\r\n                        end: endItemsCount\r\n                    }\r\n                }\r\n                return this._dataLoader.virtualItemsCount.apply(this._dataLoader, arguments)\r\n            }\r\n        },\r\n        getScrollingTimeout: function() {\r\n            var renderAsync = this.option(\"scrolling.renderAsync\");\r\n            var scrollingTimeout = 0;\r\n            if (!isDefined(renderAsync)) {\r\n                scrollingTimeout = Math.min(this.option(\"scrolling.timeout\") || 0, this._dataOptions.changingDuration());\r\n                if (scrollingTimeout < this.option(\"scrolling.renderingThreshold\")) {\r\n                    scrollingTimeout = this.option(\"scrolling.minTimeout\") || 0\r\n                }\r\n            } else if (renderAsync) {\r\n                var _this$option;\r\n                scrollingTimeout = null !== (_this$option = this.option(\"scrolling.timeout\")) && void 0 !== _this$option ? _this$option : 0\r\n            }\r\n            return scrollingTimeout\r\n        },\r\n        setViewportPosition: function(position) {\r\n            var result = new Deferred;\r\n            var scrollingTimeout = this.getScrollingTimeout();\r\n            clearTimeout(this._scrollTimeoutID);\r\n            if (scrollingTimeout > 0) {\r\n                this._scrollTimeoutID = setTimeout(() => {\r\n                    this._setViewportPositionCore(position);\r\n                    result.resolve()\r\n                }, scrollingTimeout)\r\n            } else {\r\n                this._setViewportPositionCore(position);\r\n                result.resolve()\r\n            }\r\n            return result.promise()\r\n        },\r\n        getViewportPosition: function() {\r\n            return this._position\r\n        },\r\n        getItemIndexByPosition: function(position) {\r\n            var _position;\r\n            position = null !== (_position = position) && void 0 !== _position ? _position : this._position;\r\n            var defaultItemSize = this.getItemSize();\r\n            var offset = 0;\r\n            var itemOffset = 0;\r\n            var itemOffsetsWithSize = Object.keys(this._itemSizes).concat(-1);\r\n            for (var i = 0; i < itemOffsetsWithSize.length && offset < position; i++) {\r\n                var itemOffsetWithSize = parseInt(itemOffsetsWithSize[i]);\r\n                var itemOffsetDiff = (position - offset) / defaultItemSize;\r\n                if (itemOffsetWithSize < 0 || itemOffset + itemOffsetDiff < itemOffsetWithSize) {\r\n                    itemOffset += itemOffsetDiff;\r\n                    break\r\n                } else {\r\n                    itemOffsetDiff = itemOffsetWithSize - itemOffset;\r\n                    offset += itemOffsetDiff * defaultItemSize;\r\n                    itemOffset += itemOffsetDiff\r\n                }\r\n                var itemSize = this._itemSizes[itemOffsetWithSize];\r\n                offset += itemSize;\r\n                itemOffset += offset < position ? 1 : (position - offset + itemSize) / itemSize\r\n            }\r\n            return Math.round(50 * itemOffset) / 50\r\n        },\r\n        isScrollingBack: function() {\r\n            return this._isScrollingBack\r\n        },\r\n        _setViewportPositionCore: function(position) {\r\n            var prevPosition = this._position || 0;\r\n            this._position = position;\r\n            if (prevPosition !== this._position) {\r\n                this._isScrollingBack = this._position < prevPosition\r\n            }\r\n            var itemIndex = this.getItemIndexByPosition();\r\n            var result = this.setViewportItemIndex(itemIndex);\r\n            this.positionChanged.fire();\r\n            return result\r\n        },\r\n        setContentItemSizes: function(sizes) {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            this._contentSize = sizes.reduce((a, b) => a + b, 0);\r\n            if (virtualItemsCount) {\r\n                sizes.forEach((size, index) => {\r\n                    this._itemSizes[virtualItemsCount.begin + index] = size\r\n                });\r\n                var virtualContentSize = (virtualItemsCount.begin + virtualItemsCount.end + this.itemsCount()) * this._viewportItemSize;\r\n                var contentHeightLimit = gridCoreUtils.getContentHeightLimit(browser);\r\n                if (virtualContentSize > contentHeightLimit) {\r\n                    this._sizeRatio = contentHeightLimit / virtualContentSize\r\n                } else {\r\n                    this._sizeRatio = 1\r\n                }\r\n            }\r\n        },\r\n        getItemSize: function() {\r\n            return this._viewportItemSize * this._sizeRatio\r\n        },\r\n        getItemOffset: function(itemIndex, isEnd) {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            var itemCount = itemIndex;\r\n            if (!virtualItemsCount) {\r\n                return 0\r\n            }\r\n            var offset = 0;\r\n            var totalItemsCount = this._dataOptions.totalItemsCount();\r\n            Object.keys(this._itemSizes).forEach(currentItemIndex => {\r\n                if (!itemCount) {\r\n                    return\r\n                }\r\n                if (isEnd ? currentItemIndex >= totalItemsCount - itemIndex : currentItemIndex < itemIndex) {\r\n                    offset += this._itemSizes[currentItemIndex];\r\n                    itemCount--\r\n                }\r\n            });\r\n            return Math.floor(offset + itemCount * this._viewportItemSize * this._sizeRatio)\r\n        },\r\n        getContentOffset: function(type) {\r\n            var isEnd = \"end\" === type;\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            if (!virtualItemsCount) {\r\n                return 0\r\n            }\r\n            return this.getItemOffset(isEnd ? virtualItemsCount.end : virtualItemsCount.begin, isEnd)\r\n        },\r\n        getVirtualContentSize: function() {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            return virtualItemsCount ? this.getContentOffset(\"begin\") + this.getContentOffset(\"end\") + this._contentSize : 0\r\n        },\r\n        getViewportItemIndex: function() {\r\n            return this._viewportItemIndex\r\n        },\r\n        setViewportItemIndex: function(itemIndex) {\r\n            this._viewportItemIndex = itemIndex;\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                return\r\n            }\r\n            return this._dataLoader.viewportItemIndexChanged.apply(this._dataLoader, arguments)\r\n        },\r\n        viewportItemSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._viewportItemSize = size\r\n            }\r\n            return this._viewportItemSize\r\n        },\r\n        viewportSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._viewportSize = size\r\n            }\r\n            return this._viewportSize\r\n        },\r\n        viewportHeight: function(height) {\r\n            var begin = this.getItemIndexByPosition();\r\n            var end = this.getItemIndexByPosition(this._position + height);\r\n            this.viewportSize(Math.ceil(end - begin));\r\n            if (this._viewportItemIndex !== begin) {\r\n                this._setViewportPositionCore(this._position)\r\n            }\r\n        },\r\n        reset: function(isRefresh) {\r\n            this._dataLoader.reset();\r\n            if (!isRefresh) {\r\n                this._itemSizes = {}\r\n            }\r\n        },\r\n        subscribeToWindowScrollEvents: function($element) {\r\n            this._windowScroll = this._windowScroll || subscribeToExternalScrollers($element, scrollTop => {\r\n                if (this.viewportItemSize()) {\r\n                    this.setViewportPosition(scrollTop)\r\n                }\r\n            })\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._scrollTimeoutID);\r\n            this._windowScroll && this._windowScroll.dispose();\r\n            this._windowScroll = null\r\n        },\r\n        scrollTo: function(pos) {\r\n            this._windowScroll && this._windowScroll.scrollTo(pos)\r\n        },\r\n        isVirtualMode: function() {\r\n            return _isVirtualMode(this)\r\n        },\r\n        isAppendMode: function() {\r\n            return _isAppendMode(this)\r\n        },\r\n        getViewportParams: function() {\r\n            var _this$option2;\r\n            var virtualMode = this.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL;\r\n            var totalItemsCount = this._dataOptions.totalItemsCount();\r\n            var topIndex = this._viewportItemIndex;\r\n            var bottomIndex = this._viewportSize + topIndex;\r\n            var maxGap = this.option(\"scrolling.prerenderedRowChunkSize\") || 1;\r\n            var isScrollingBack = this.isScrollingBack();\r\n            var minGap = null !== (_this$option2 = this.option(\"scrolling.prerenderedRowCount\")) && void 0 !== _this$option2 ? _this$option2 : 1;\r\n            var topMinGap = isScrollingBack ? minGap : 0;\r\n            var bottomMinGap = isScrollingBack ? 0 : minGap;\r\n            var skip = Math.floor(Math.max(0, topIndex - topMinGap) / maxGap) * maxGap;\r\n            var take = Math.ceil((bottomIndex + bottomMinGap - skip) / maxGap) * maxGap;\r\n            if (virtualMode) {\r\n                var remainedItems = Math.max(0, totalItemsCount - skip);\r\n                take = Math.min(take, remainedItems)\r\n            }\r\n            return {\r\n                skip: skip,\r\n                take: take\r\n            }\r\n        },\r\n        itemsCount: function() {\r\n            var result = 0;\r\n            if (this.option(LEGACY_SCROLLING_MODE)) {\r\n                result = this._dataLoader.itemsCount.apply(this._dataLoader, arguments)\r\n            } else {\r\n                result = this._dataOptions.itemsCount()\r\n            }\r\n            return result\r\n        }\r\n    };\r\n    [\"pageIndex\", \"beginPageIndex\", \"endPageIndex\", \"pageSize\", \"load\", \"loadIfNeed\", \"handleDataChanged\", \"getDelayDeferred\"].forEach((function(name) {\r\n        members[name] = function() {\r\n            return this._dataLoader[name].apply(this._dataLoader, arguments)\r\n        }\r\n    }));\r\n    return members\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_scrolling.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    VirtualScrollController,\r\n    subscribeToExternalScrollers\r\n} from \"./ui.grid_core.virtual_scrolling_core\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport LoadIndicator from \"../load_indicator\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nvar BOTTOM_LOAD_PANEL_CLASS = \"bottom-load-panel\";\r\nvar TABLE_CONTENT_CLASS = \"table-content\";\r\nvar GROUP_SPACE_CLASS = \"group-space\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar FREESPACE_CLASS = \"dx-freespace-row\";\r\nvar COLUMN_LINES_CLASS = \"dx-column-lines\";\r\nvar VIRTUAL_ROW_CLASS = \"dx-virtual-row\";\r\nvar SCROLLING_MODE_INFINITE = \"infinite\";\r\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\r\nvar LOAD_TIMEOUT = 300;\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\nvar VISIBLE_PAGE_INDEX = \"paging.pageIndex\";\r\nvar isVirtualMode = function(that) {\r\n    return that.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL\r\n};\r\nvar isAppendMode = function(that) {\r\n    return that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE\r\n};\r\nvar isVirtualPaging = function(that) {\r\n    return isVirtualMode(that) || isAppendMode(that)\r\n};\r\nvar _correctCount = function(items, count, fromEnd, isItemCountableFunc) {\r\n    for (var i = 0; i < count + 1; i++) {\r\n        var item = items[fromEnd ? items.length - 1 - i : i];\r\n        if (item && !isItemCountableFunc(item, i === count, fromEnd)) {\r\n            count++\r\n        }\r\n    }\r\n    return count\r\n};\r\nvar isItemCountableByDataSource = function(item, dataSource) {\r\n    return \"data\" === item.rowType && !item.isNewRow || \"group\" === item.rowType && dataSource.isGroupItemCountable(item.data)\r\n};\r\nvar updateItemIndices = function(items) {\r\n    items.forEach((function(item, index) {\r\n        item.rowIndex = index\r\n    }));\r\n    return items\r\n};\r\nvar VirtualScrollingDataSourceAdapterExtender = function() {\r\n    var _updateLoading = function(that) {\r\n        var beginPageIndex = that._virtualScrollController.beginPageIndex(-1);\r\n        if (isVirtualMode(that)) {\r\n            if (beginPageIndex < 0 || that.viewportSize() >= 0 && that.getViewportItemIndex() >= 0 && (beginPageIndex * that.pageSize() > that.getViewportItemIndex() || beginPageIndex * that.pageSize() + that.itemsCount() < that.getViewportItemIndex() + that.viewportSize()) && that._dataSource.isLoading()) {\r\n                if (!that._isLoading) {\r\n                    that._isLoading = true;\r\n                    that.loadingChanged.fire(true)\r\n                }\r\n            } else if (that._isLoading) {\r\n                that._isLoading = false;\r\n                that.loadingChanged.fire(false)\r\n            }\r\n        }\r\n    };\r\n    var result = {\r\n        init: function() {\r\n            this.callBase.apply(this, arguments);\r\n            this._items = [];\r\n            this._isLoaded = true;\r\n            this._loadPageCount = 1;\r\n            this._virtualScrollController = new VirtualScrollController(this.component, this._getVirtualScrollDataOptions())\r\n        },\r\n        _getVirtualScrollDataOptions: function() {\r\n            var that = this;\r\n            return {\r\n                pageSize: function() {\r\n                    return that.pageSize()\r\n                },\r\n                totalItemsCount: function() {\r\n                    return that.totalItemsCount()\r\n                },\r\n                hasKnownLastPage: function() {\r\n                    return that.hasKnownLastPage()\r\n                },\r\n                pageIndex: function(index) {\r\n                    return that._dataSource.pageIndex(index)\r\n                },\r\n                isLoading: function() {\r\n                    return that._dataSource.isLoading() && !that.isCustomLoading()\r\n                },\r\n                pageCount: function() {\r\n                    return that.pageCount()\r\n                },\r\n                load: function() {\r\n                    return that._dataSource.load()\r\n                },\r\n                updateLoading: function() {\r\n                    _updateLoading(that)\r\n                },\r\n                itemsCount: function() {\r\n                    return that.itemsCount(true)\r\n                },\r\n                items: function() {\r\n                    return that._dataSource.items()\r\n                },\r\n                viewportItems: function(items) {\r\n                    if (items) {\r\n                        that._items = items\r\n                    }\r\n                    return that._items\r\n                },\r\n                onChanged: function(e) {\r\n                    that.changed.fire(e)\r\n                },\r\n                changingDuration: function(e) {\r\n                    if (that.isLoading()) {\r\n                        return LOAD_TIMEOUT\r\n                    }\r\n                    return that._renderTime || 0\r\n                }\r\n            }\r\n        },\r\n        _handleLoadingChanged: function(isLoading) {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                this.callBase.apply(this, arguments);\r\n                return\r\n            }\r\n            if (!isVirtualMode(this) || this._isLoadingAll) {\r\n                this._isLoading = isLoading;\r\n                this.callBase.apply(this, arguments)\r\n            }\r\n            if (isLoading) {\r\n                this._startLoadTime = new Date\r\n            } else {\r\n                this._startLoadTime = void 0\r\n            }\r\n        },\r\n        _handleLoadError: function() {\r\n            if (false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                this._isLoading = false;\r\n                this.loadingChanged.fire(false)\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _handleDataChanged: function(e) {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                this._items = this._dataSource.items().slice();\r\n                this.callBase.apply(this, arguments);\r\n                return\r\n            }\r\n            var callBase = this.callBase.bind(this);\r\n            this._virtualScrollController.handleDataChanged(callBase, e)\r\n        },\r\n        _customizeRemoteOperations: function(options, operationTypes) {\r\n            var newMode = false === this.option(LEGACY_SCROLLING_MODE);\r\n            var renderAsync = this.option(\"scrolling.renderAsync\");\r\n            if (!isDefined(renderAsync)) {\r\n                renderAsync = this._renderTime >= this.option(\"scrolling.renderingThreshold\")\r\n            }\r\n            if ((isVirtualMode(this) || isAppendMode(this) && newMode) && !operationTypes.reload && (operationTypes.skip || newMode) && !renderAsync) {\r\n                options.delay = void 0\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        items: function() {\r\n            return this._items\r\n        },\r\n        itemsCount: function(isBase) {\r\n            if (isBase || false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                return this.callBase()\r\n            }\r\n            return this._virtualScrollController.itemsCount()\r\n        },\r\n        load: function(loadOptions) {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE) || loadOptions) {\r\n                return this.callBase(loadOptions)\r\n            }\r\n            return this._virtualScrollController.load()\r\n        },\r\n        isLoading: function() {\r\n            return false === this.option(LEGACY_SCROLLING_MODE) ? this._dataSource.isLoading() : this._isLoading\r\n        },\r\n        isLoaded: function() {\r\n            return this._dataSource.isLoaded() && this._isLoaded\r\n        },\r\n        resetPagesCache: function(isLiveUpdate) {\r\n            if (!isLiveUpdate) {\r\n                this._virtualScrollController.reset(true)\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _changeRowExpandCore: function() {\r\n            var result = this.callBase.apply(this, arguments);\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                return result\r\n            }\r\n            this.resetPagesCache();\r\n            _updateLoading(this);\r\n            return result\r\n        },\r\n        reload: function() {\r\n            this._dataSource.pageIndex(this.pageIndex());\r\n            var virtualScrollController = this._virtualScrollController;\r\n            if (false !== this.option(LEGACY_SCROLLING_MODE) && virtualScrollController) {\r\n                var d = new Deferred;\r\n                this.callBase.apply(this, arguments).done((function(r) {\r\n                    var delayDeferred = virtualScrollController.getDelayDeferred();\r\n                    if (delayDeferred) {\r\n                        delayDeferred.done(d.resolve).fail(d.reject)\r\n                    } else {\r\n                        d.resolve(r)\r\n                    }\r\n                })).fail(d.reject);\r\n                return d\r\n            } else {\r\n                return this.callBase.apply(this, arguments)\r\n            }\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            if (false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                var storeLoadOptions = options.storeLoadOptions;\r\n                var dataSource = this._dataSource;\r\n                if (operationTypes.reload) {\r\n                    this._virtualScrollController.reset();\r\n                    dataSource.items().length = 0;\r\n                    this._isLoaded = false;\r\n                    _updateLoading(this);\r\n                    this._isLoaded = true;\r\n                    if (isAppendMode(this)) {\r\n                        this.pageIndex(0);\r\n                        dataSource.pageIndex(0);\r\n                        storeLoadOptions.pageIndex = 0;\r\n                        options.pageIndex = 0;\r\n                        storeLoadOptions.skip = 0\r\n                    } else {\r\n                        dataSource.pageIndex(this.pageIndex());\r\n                        if (dataSource.paginate()) {\r\n                            options.pageIndex = this.pageIndex();\r\n                            storeLoadOptions.skip = this.pageIndex() * this.pageSize()\r\n                        }\r\n                    }\r\n                } else if (isAppendMode(this) && storeLoadOptions.skip && this._totalCountCorrection < 0) {\r\n                    storeLoadOptions.skip += this._totalCountCorrection\r\n                }\r\n            }\r\n            return this.callBase.apply(this, arguments)\r\n        },\r\n        dispose: function() {\r\n            this._virtualScrollController.dispose();\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        loadPageCount: function(count) {\r\n            if (!isDefined(count)) {\r\n                return this._loadPageCount\r\n            }\r\n            this._loadPageCount = count\r\n        },\r\n        _handleDataLoading: function(options) {\r\n            var loadPageCount = this.loadPageCount();\r\n            var pageSize = this.pageSize();\r\n            var newMode = false === this.option(LEGACY_SCROLLING_MODE);\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var takeIsDefined = isDefined(storeLoadOptions.take);\r\n            options.loadPageCount = loadPageCount;\r\n            if (!options.isCustomLoading && newMode && takeIsDefined && loadPageCount > 1 && pageSize > 0) {\r\n                storeLoadOptions.take = loadPageCount * pageSize\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _loadPageSize: function() {\r\n            return this.callBase.apply(this, arguments) * this.loadPageCount()\r\n        }\r\n    };\r\n    [\"beginPageIndex\", \"endPageIndex\", \"pageIndex\"].forEach((function(name) {\r\n        result[name] = function() {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                var dataSource = this._dataSource;\r\n                return dataSource.pageIndex.apply(dataSource, arguments)\r\n            }\r\n            var virtualScrollController = this._virtualScrollController;\r\n            return virtualScrollController[name].apply(virtualScrollController, arguments)\r\n        }\r\n    }));\r\n    [\"virtualItemsCount\", \"getContentOffset\", \"getVirtualContentSize\", \"setContentItemSizes\", \"setViewportPosition\", \"getViewportItemIndex\", \"setViewportItemIndex\", \"getItemIndexByPosition\", \"viewportSize\", \"viewportItemSize\", \"getItemSize\", \"getItemSizes\", \"loadIfNeed\"].forEach((function(name) {\r\n        result[name] = function() {\r\n            var virtualScrollController = this._virtualScrollController;\r\n            return virtualScrollController[name].apply(virtualScrollController, arguments)\r\n        }\r\n    }));\r\n    return result\r\n}();\r\nvar VirtualScrollingRowsViewExtender = function() {\r\n    var removeEmptyRows = function($emptyRows, className) {\r\n        var tBodies = $emptyRows.toArray().map(row => $(row).parent(\".\" + className).get(0)).filter(row => row);\r\n        if (tBodies.length) {\r\n            $emptyRows = $(tBodies)\r\n        }\r\n        var rowCount = className === FREESPACE_CLASS ? $emptyRows.length - 1 : $emptyRows.length;\r\n        for (var i = 0; i < rowCount; i++) {\r\n            $emptyRows.eq(i).remove()\r\n        }\r\n    };\r\n    return {\r\n        init: function() {\r\n            var _dataController$state;\r\n            var dataController = this.getController(\"data\");\r\n            this.callBase();\r\n            dataController.pageChanged.add(pageIndex => {\r\n                this.scrollToPage(null !== pageIndex && void 0 !== pageIndex ? pageIndex : dataController.pageIndex())\r\n            });\r\n            dataController.dataSourceChanged.add(() => {\r\n                !this._scrollTop && this._scrollToCurrentPageOnResize()\r\n            });\r\n            null === (_dataController$state = dataController.stateLoaded) || void 0 === _dataController$state ? void 0 : _dataController$state.add(() => {\r\n                this._scrollToCurrentPageOnResize()\r\n            });\r\n            this._scrollToCurrentPageOnResize()\r\n        },\r\n        _scrollToCurrentPageOnResize: function() {\r\n            var dataController = this.getController(\"data\");\r\n            if (dataController.pageIndex() > 0) {\r\n                var resizeHandler = () => {\r\n                    this.resizeCompleted.remove(resizeHandler);\r\n                    this.scrollToPage(dataController.pageIndex())\r\n                };\r\n                this.resizeCompleted.add(resizeHandler)\r\n            }\r\n        },\r\n        scrollToPage: function(pageIndex) {\r\n            var dataController = this._dataController;\r\n            var pageSize = dataController ? dataController.pageSize() : 0;\r\n            var scrollPosition;\r\n            if (isVirtualMode(this) || isAppendMode(this)) {\r\n                var itemSize = dataController.getItemSize();\r\n                var itemSizes = dataController.getItemSizes();\r\n                var itemIndex = pageIndex * pageSize;\r\n                scrollPosition = itemIndex * itemSize;\r\n                for (var index in itemSizes) {\r\n                    if (index < itemIndex) {\r\n                        scrollPosition += itemSizes[index] - itemSize\r\n                    }\r\n                }\r\n            } else {\r\n                scrollPosition = 0\r\n            }\r\n            this.scrollTo({\r\n                y: scrollPosition,\r\n                x: this._scrollLeft\r\n            })\r\n        },\r\n        renderDelayedTemplates: function(e) {\r\n            this._updateContentPosition(true);\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _renderCore: function(e) {\r\n            var startRenderTime = new Date;\r\n            this.callBase.apply(this, arguments);\r\n            var dataSource = this._dataController._dataSource;\r\n            if (dataSource && e) {\r\n                var itemCount = e.items ? e.items.length : 20;\r\n                var viewportSize = this._dataController.viewportSize() || 20;\r\n                if (gridCoreUtils.isVirtualRowRendering(this) && itemCount > 0 && false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                    dataSource._renderTime = (new Date - startRenderTime) * viewportSize / itemCount\r\n                } else {\r\n                    dataSource._renderTime = new Date - startRenderTime\r\n                }\r\n            }\r\n        },\r\n        _getRowElements: function(tableElement) {\r\n            var $rows = this.callBase(tableElement);\r\n            return $rows && $rows.not(\".\" + VIRTUAL_ROW_CLASS)\r\n        },\r\n        _removeRowsElements: function(contentTable, removeCount, changeType) {\r\n            var rowElements = this._getRowElements(contentTable).toArray();\r\n            if (\"append\" === changeType) {\r\n                rowElements = rowElements.slice(0, removeCount)\r\n            } else {\r\n                rowElements = rowElements.slice(-removeCount)\r\n            }\r\n            var errorHandlingController = this.getController(\"errorHandling\");\r\n            rowElements.map(rowElement => {\r\n                var $rowElement = $(rowElement);\r\n                errorHandlingController && errorHandlingController.removeErrorRow($rowElement.next());\r\n                $rowElement.remove()\r\n            })\r\n        },\r\n        _updateContent: function(tableElement, change) {\r\n            var $freeSpaceRowElements;\r\n            var contentElement = this._findContentElement();\r\n            var changeType = change && change.changeType;\r\n            var contentTable = contentElement.children().first();\r\n            if (\"append\" === changeType || \"prepend\" === changeType) {\r\n                var $tBodies = this._getBodies(tableElement);\r\n                if (1 === $tBodies.length) {\r\n                    this._getBodies(contentTable)[\"append\" === changeType ? \"append\" : \"prepend\"]($tBodies.children())\r\n                } else {\r\n                    $tBodies[\"append\" === changeType ? \"appendTo\" : \"prependTo\"](contentTable)\r\n                }\r\n                tableElement.remove();\r\n                $freeSpaceRowElements = this._getFreeSpaceRowElements(contentTable);\r\n                removeEmptyRows($freeSpaceRowElements, FREESPACE_CLASS);\r\n                if (change.removeCount) {\r\n                    this._removeRowsElements(contentTable, change.removeCount, changeType)\r\n                }\r\n                this._restoreErrorRow(contentTable)\r\n            } else {\r\n                this.callBase.apply(this, arguments);\r\n                if (\"update\" === changeType) {\r\n                    this._restoreErrorRow(contentTable)\r\n                }\r\n            }\r\n            this._updateBottomLoading()\r\n        },\r\n        _addVirtualRow: function($table, isFixed, location, position) {\r\n            if (!position) {\r\n                return\r\n            }\r\n            var $virtualRow = this._createEmptyRow(VIRTUAL_ROW_CLASS, isFixed, position);\r\n            $virtualRow = this._wrapRowIfNeed($table, $virtualRow);\r\n            this._appendEmptyRow($table, $virtualRow, location)\r\n        },\r\n        _getRowHeights: function() {\r\n            var rowHeights = this._getRowElements(this._tableElement).toArray().map((function(row) {\r\n                return getBoundingRect(row).height\r\n            }));\r\n            return rowHeights\r\n        },\r\n        _correctRowHeights: function(rowHeights) {\r\n            var dataController = this._dataController;\r\n            var dataSource = dataController._dataSource;\r\n            var correctedRowHeights = [];\r\n            var visibleRows = dataController.getVisibleRows();\r\n            var itemSize = 0;\r\n            var firstCountableItem = true;\r\n            var lastLoadIndex = -1;\r\n            for (var i = 0; i < rowHeights.length; i++) {\r\n                var currentItem = visibleRows[i];\r\n                if (!isDefined(currentItem)) {\r\n                    continue\r\n                }\r\n                if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                    if (lastLoadIndex >= 0 && lastLoadIndex !== currentItem.loadIndex) {\r\n                        correctedRowHeights.push(itemSize);\r\n                        itemSize = 0\r\n                    }\r\n                    lastLoadIndex = currentItem.loadIndex\r\n                } else if (isItemCountableByDataSource(currentItem, dataSource)) {\r\n                    if (firstCountableItem) {\r\n                        firstCountableItem = false\r\n                    } else {\r\n                        correctedRowHeights.push(itemSize);\r\n                        itemSize = 0\r\n                    }\r\n                }\r\n                itemSize += rowHeights[i]\r\n            }\r\n            itemSize > 0 && correctedRowHeights.push(itemSize);\r\n            return correctedRowHeights\r\n        },\r\n        _updateContentPosition: function(isRender) {\r\n            var dataController = this._dataController;\r\n            var rowHeight = this._rowHeight || 20;\r\n            dataController.viewportItemSize(rowHeight);\r\n            if (isVirtualMode(this) || gridCoreUtils.isVirtualRowRendering(this)) {\r\n                if (!isRender) {\r\n                    var rowHeights = this._getRowHeights();\r\n                    var correctedRowHeights = this._correctRowHeights(rowHeights);\r\n                    dataController.setContentItemSizes(correctedRowHeights)\r\n                }\r\n                var top = dataController.getContentOffset(\"begin\");\r\n                var bottom = dataController.getContentOffset(\"end\");\r\n                var $tables = this.getTableElements();\r\n                var $virtualRows = $tables.children(\"tbody\").children(\".\" + VIRTUAL_ROW_CLASS);\r\n                removeEmptyRows($virtualRows, VIRTUAL_ROW_CLASS);\r\n                $tables.each((index, element) => {\r\n                    var isFixed = index > 0;\r\n                    this._isFixedTableRendering = isFixed;\r\n                    this._addVirtualRow($(element), isFixed, \"top\", top);\r\n                    this._addVirtualRow($(element), isFixed, \"bottom\", bottom);\r\n                    this._isFixedTableRendering = false\r\n                })\r\n            }\r\n        },\r\n        _isTableLinesDisplaysCorrect: function(table) {\r\n            var hasColumnLines = table.find(\".\" + COLUMN_LINES_CLASS).length > 0;\r\n            return hasColumnLines === this.option(\"showColumnLines\")\r\n        },\r\n        _isColumnElementsEqual: function($columns, $virtualColumns) {\r\n            var result = $columns.length === $virtualColumns.length;\r\n            if (result) {\r\n                each($columns, (function(index, element) {\r\n                    if (element.style.width !== $virtualColumns[index].style.width) {\r\n                        result = false;\r\n                        return result\r\n                    }\r\n                }))\r\n            }\r\n            return result\r\n        },\r\n        _getCellClasses: function(column) {\r\n            var classes = [];\r\n            var cssClass = column.cssClass;\r\n            var isExpandColumn = \"expand\" === column.command;\r\n            cssClass && classes.push(cssClass);\r\n            isExpandColumn && classes.push(this.addWidgetPrefix(GROUP_SPACE_CLASS));\r\n            return classes\r\n        },\r\n        _findBottomLoadPanel: function($contentElement) {\r\n            var $element = $contentElement || this.element();\r\n            var $bottomLoadPanel = $element && $element.find(\".\" + this.addWidgetPrefix(BOTTOM_LOAD_PANEL_CLASS));\r\n            if ($bottomLoadPanel && $bottomLoadPanel.length) {\r\n                return $bottomLoadPanel\r\n            }\r\n        },\r\n        _updateBottomLoading: function() {\r\n            var virtualMode = isVirtualMode(this);\r\n            var appendMode = isAppendMode(this);\r\n            var showBottomLoading = !this._dataController.hasKnownLastPage() && this._dataController.isLoaded() && (virtualMode || appendMode);\r\n            var $contentElement = this._findContentElement();\r\n            var bottomLoadPanelElement = this._findBottomLoadPanel($contentElement);\r\n            if (showBottomLoading) {\r\n                if (!bottomLoadPanelElement) {\r\n                    $(\"<div>\").addClass(this.addWidgetPrefix(BOTTOM_LOAD_PANEL_CLASS)).append(this._createComponent($(\"<div>\"), LoadIndicator).$element()).appendTo($contentElement)\r\n                }\r\n            } else if (bottomLoadPanelElement) {\r\n                bottomLoadPanelElement.remove()\r\n            }\r\n        },\r\n        _handleScroll: function(e) {\r\n            var legacyScrollingMode = true === this.option(LEGACY_SCROLLING_MODE);\r\n            var zeroTopPosition = 0 === e.scrollOffset.top;\r\n            if ((this._hasHeight || !legacyScrollingMode && zeroTopPosition) && this._rowHeight) {\r\n                this._dataController.setViewportPosition(e.scrollOffset.top)\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _needUpdateRowHeight: function(itemsCount) {\r\n            return this.callBase.apply(this, arguments) || itemsCount > 0 && isAppendMode(this) && !gridCoreUtils.isVirtualRowRendering(this)\r\n        },\r\n        _updateRowHeight: function() {\r\n            this.callBase.apply(this, arguments);\r\n            if (this._rowHeight) {\r\n                this._updateContentPosition();\r\n                var viewportHeight = this._hasHeight ? getOuterHeight(this.element()) : getOuterHeight(getWindow());\r\n                var dataController = this._dataController;\r\n                if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                    dataController.viewportHeight(viewportHeight);\r\n                    dataController.updateViewport()\r\n                } else {\r\n                    dataController.viewportSize(Math.ceil(viewportHeight / this._rowHeight))\r\n                }\r\n            }\r\n        },\r\n        updateFreeSpaceRowHeight: function() {\r\n            var result = this.callBase.apply(this, arguments);\r\n            if (result) {\r\n                this._updateContentPosition()\r\n            }\r\n            return result\r\n        },\r\n        setLoading: function(isLoading, messageText) {\r\n            var dataController = this._dataController;\r\n            var hasBottomLoadPanel = dataController.pageIndex() > 0 && dataController.isLoaded() && !!this._findBottomLoadPanel();\r\n            if (false === this.option(LEGACY_SCROLLING_MODE) && isLoading && dataController.isViewportChanging()) {\r\n                return\r\n            }\r\n            if (hasBottomLoadPanel) {\r\n                isLoading = false\r\n            }\r\n            this.callBase.call(this, isLoading, messageText)\r\n        },\r\n        _resizeCore: function() {\r\n            var that = this;\r\n            var $element = that.element();\r\n            that.callBase();\r\n            if (that.component.$element() && !that._windowScroll && $element.closest(getWindow().document).length) {\r\n                that._windowScroll = subscribeToExternalScrollers($element, (function(scrollPos) {\r\n                    if (!that._hasHeight && that._rowHeight) {\r\n                        that._dataController.setViewportPosition(scrollPos)\r\n                    }\r\n                }), that.component.$element());\r\n                that.on(\"disposing\", (function() {\r\n                    that._windowScroll.dispose()\r\n                }))\r\n            }\r\n            if (false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                that.loadIfNeed()\r\n            }\r\n        },\r\n        loadIfNeed: function() {\r\n            var _dataController$loadI;\r\n            var dataController = this._dataController;\r\n            null === dataController || void 0 === dataController ? void 0 : null === (_dataController$loadI = dataController.loadIfNeed) || void 0 === _dataController$loadI ? void 0 : _dataController$loadI.call(dataController)\r\n        },\r\n        setColumnWidths: function(widths) {\r\n            var scrollable = this.getScrollable();\r\n            var $content;\r\n            this.callBase.apply(this, arguments);\r\n            if (\"virtual\" === this.option(\"scrolling.mode\")) {\r\n                $content = scrollable ? $(scrollable.content()) : this.element();\r\n                this.callBase(widths, $content.children(\".\" + this.addWidgetPrefix(CONTENT_CLASS)).children(\":not(.\" + this.addWidgetPrefix(TABLE_CONTENT_CLASS) + \")\"))\r\n            }\r\n        },\r\n        _restoreErrorRow: function() {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                var errorHandling = this.getController(\"errorHandling\");\r\n                null === errorHandling || void 0 === errorHandling ? void 0 : errorHandling.removeErrorRow()\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._scrollTimeoutID);\r\n            this.callBase()\r\n        }\r\n    }\r\n}();\r\nexport var virtualScrollingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            scrolling: {\r\n                timeout: 300,\r\n                updateTimeout: 300,\r\n                minTimeout: 0,\r\n                renderingThreshold: 100,\r\n                removeInvisiblePages: true,\r\n                rowPageSize: 5,\r\n                prerenderedRowChunkSize: 1,\r\n                mode: \"standard\",\r\n                preloadEnabled: false,\r\n                rowRenderingMode: \"standard\",\r\n                loadTwoPagesOnStart: false,\r\n                legacyMode: false,\r\n                prerenderedRowCount: 1\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        dataSourceAdapter: VirtualScrollingDataSourceAdapterExtender,\r\n        controllers: {\r\n            data: function() {\r\n                var members = {\r\n                    _refreshDataSource: function() {\r\n                        var baseResult = this.callBase.apply(this, arguments) || (new Deferred).resolve().promise();\r\n                        baseResult.done(this.initVirtualRows.bind(this));\r\n                        return baseResult\r\n                    },\r\n                    _loadDataSource: function() {\r\n                        if (this._rowsScrollController) {\r\n                            var _this$getLoadPagePara, _this$_dataSource;\r\n                            var {\r\n                                loadPageCount: loadPageCount\r\n                            } = null !== (_this$getLoadPagePara = this.getLoadPageParams()) && void 0 !== _this$getLoadPagePara ? _this$getLoadPagePara : {};\r\n                            loadPageCount >= 1 && (null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.loadPageCount(loadPageCount))\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    getRowPageSize: function() {\r\n                        var rowPageSize = this.option(\"scrolling.rowPageSize\");\r\n                        var pageSize = this.pageSize();\r\n                        return pageSize && pageSize < rowPageSize ? pageSize : rowPageSize\r\n                    },\r\n                    reload: function() {\r\n                        var rowsScrollController = this._rowsScrollController || this._dataSource;\r\n                        var itemIndex = rowsScrollController && rowsScrollController.getItemIndexByPosition();\r\n                        var result = this.callBase.apply(this, arguments);\r\n                        return result && result.done(() => {\r\n                            if (isVirtualMode(this) || gridCoreUtils.isVirtualRowRendering(this)) {\r\n                                var rowIndexOffset = this.getRowIndexOffset();\r\n                                var rowIndex = Math.floor(itemIndex) - rowIndexOffset;\r\n                                var component = this.component;\r\n                                var scrollable = component.getScrollable && component.getScrollable();\r\n                                var isSortingOperation = this.dataSource().operationTypes().sorting;\r\n                                if (scrollable && !isSortingOperation) {\r\n                                    var rowElement = component.getRowElement(rowIndex);\r\n                                    var $rowElement = rowElement && rowElement[0] && $(rowElement[0]);\r\n                                    var top = $rowElement && $rowElement.position().top;\r\n                                    var isChromeLatest = browser.chrome && browser.version >= 91;\r\n                                    var allowedTopOffset = browser.mozilla || isChromeLatest ? 1 : 0;\r\n                                    if (top > allowedTopOffset) {\r\n                                        top = Math.round(top + getOuterHeight($rowElement) * (itemIndex % 1));\r\n                                        scrollable.scrollTo({\r\n                                            y: top\r\n                                        })\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                    },\r\n                    initVirtualRows: function() {\r\n                        var virtualRowsRendering = gridCoreUtils.isVirtualRowRendering(this);\r\n                        this._allItems = null;\r\n                        this._loadViewportParams = null;\r\n                        if (\"virtual\" !== this.option(\"scrolling.mode\") && true !== virtualRowsRendering || false === virtualRowsRendering || false !== this.option(LEGACY_SCROLLING_MODE) && !this.option(\"scrolling.rowPageSize\")) {\r\n                            this._visibleItems = null;\r\n                            this._rowsScrollController = null;\r\n                            return\r\n                        }\r\n                        var pageIndex = !isVirtualMode(this) && this.pageIndex() >= this.pageCount() ? this.pageCount() - 1 : this.pageIndex();\r\n                        this._rowPageIndex = Math.ceil(pageIndex * this.pageSize() / this.getRowPageSize());\r\n                        this._visibleItems = false === this.option(LEGACY_SCROLLING_MODE) ? null : [];\r\n                        this._viewportChanging = false;\r\n                        this._needUpdateViewportAfterLoading = false;\r\n                        if (!this._rowsScrollController) {\r\n                            this._rowsScrollController = new VirtualScrollController(this.component, this._getRowsScrollDataOptions(), true);\r\n                            this._rowsScrollController.positionChanged.add(() => {\r\n                                var _this$_dataSource2;\r\n                                if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                                    this._viewportChanging = true;\r\n                                    this.loadViewport();\r\n                                    this._viewportChanging = false;\r\n                                    return\r\n                                }\r\n                                null === (_this$_dataSource2 = this._dataSource) || void 0 === _this$_dataSource2 ? void 0 : _this$_dataSource2.setViewportItemIndex(this._rowsScrollController.getViewportItemIndex())\r\n                            })\r\n                        }\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            this._updateLoadViewportParams()\r\n                        }\r\n                        if (this.isLoaded() && false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                            this._rowsScrollController.load()\r\n                        }\r\n                    },\r\n                    isViewportChanging: function() {\r\n                        return this._viewportChanging\r\n                    },\r\n                    _getRowsScrollDataOptions: function() {\r\n                        var that = this;\r\n                        var isItemCountable = function(item) {\r\n                            return isItemCountableByDataSource(item, that._dataSource)\r\n                        };\r\n                        return {\r\n                            pageSize: function() {\r\n                                return that.getRowPageSize()\r\n                            },\r\n                            loadedOffset: function() {\r\n                                var _that$_dataSource;\r\n                                return isVirtualMode(that) && (null === (_that$_dataSource = that._dataSource) || void 0 === _that$_dataSource ? void 0 : _that$_dataSource.lastLoadOptions().skip) || 0\r\n                            },\r\n                            loadedItemCount: function() {\r\n                                return that._itemCount\r\n                            },\r\n                            totalItemsCount: function() {\r\n                                if (isVirtualPaging(that)) {\r\n                                    return that.totalItemsCount()\r\n                                }\r\n                                return false === that.option(LEGACY_SCROLLING_MODE) ? that._itemCount : that._items.filter(isItemCountable).length\r\n                            },\r\n                            hasKnownLastPage: function() {\r\n                                return true\r\n                            },\r\n                            pageIndex: function(index) {\r\n                                if (void 0 !== index) {\r\n                                    that._rowPageIndex = index\r\n                                }\r\n                                return that._rowPageIndex\r\n                            },\r\n                            isLoading: function() {\r\n                                return that.isLoading()\r\n                            },\r\n                            pageCount: function() {\r\n                                var pageCount = Math.ceil(this.totalItemsCount() / this.pageSize());\r\n                                return pageCount ? pageCount : 1\r\n                            },\r\n                            load: function() {\r\n                                if (that._rowsScrollController.pageIndex() >= this.pageCount()) {\r\n                                    that._rowPageIndex = this.pageCount() - 1;\r\n                                    that._rowsScrollController.pageIndex(that._rowPageIndex)\r\n                                }\r\n                                if (!this.items().length && this.totalItemsCount()) {\r\n                                    return\r\n                                }\r\n                                that._rowsScrollController.handleDataChanged(change => {\r\n                                    change = change || {};\r\n                                    change.changeType = change.changeType || \"refresh\";\r\n                                    change.items = change.items || that._visibleItems;\r\n                                    that._visibleItems.forEach((item, index) => {\r\n                                        item.rowIndex = index\r\n                                    });\r\n                                    that._fireChanged(change)\r\n                                })\r\n                            },\r\n                            updateLoading: function() {},\r\n                            itemsCount: function() {\r\n                                return this.items(true).length\r\n                            },\r\n                            correctCount: function(items, count, fromEnd) {\r\n                                return _correctCount(items, count, fromEnd, (item, isNextAfterLast, fromEnd) => {\r\n                                    if (item.isNewRow) {\r\n                                        return isNextAfterLast && !fromEnd\r\n                                    }\r\n                                    if (isNextAfterLast && fromEnd) {\r\n                                        return !item.isNewRow\r\n                                    }\r\n                                    return isItemCountable(item)\r\n                                })\r\n                            },\r\n                            items: function(countableOnly) {\r\n                                var result = that._items;\r\n                                if (that.option(LEGACY_SCROLLING_MODE)) {\r\n                                    var dataSource = that.dataSource();\r\n                                    var virtualItemsCount = null === dataSource || void 0 === dataSource ? void 0 : dataSource.virtualItemsCount();\r\n                                    var begin = virtualItemsCount ? virtualItemsCount.begin : 0;\r\n                                    var rowPageSize = that.getRowPageSize();\r\n                                    var skip = that._rowPageIndex * rowPageSize - begin;\r\n                                    var take = rowPageSize;\r\n                                    if (skip < 0) {\r\n                                        return []\r\n                                    }\r\n                                    if (skip) {\r\n                                        skip = this.correctCount(result, skip);\r\n                                        result = result.slice(skip)\r\n                                    }\r\n                                    if (take) {\r\n                                        take = this.correctCount(result, take);\r\n                                        result = result.slice(0, take)\r\n                                    }\r\n                                }\r\n                                return countableOnly ? result.filter(isItemCountable) : result\r\n                            },\r\n                            viewportItems: function(items) {\r\n                                if (items && false !== that.option(LEGACY_SCROLLING_MODE)) {\r\n                                    that._visibleItems = items\r\n                                }\r\n                                return that._visibleItems\r\n                            },\r\n                            onChanged: function() {},\r\n                            changingDuration: function(e) {\r\n                                var dataSource = that.dataSource();\r\n                                if (null !== dataSource && void 0 !== dataSource && dataSource.isLoading() && false !== that.option(LEGACY_SCROLLING_MODE)) {\r\n                                    return LOAD_TIMEOUT\r\n                                }\r\n                                return (null === dataSource || void 0 === dataSource ? void 0 : dataSource._renderTime) || 0\r\n                            }\r\n                        }\r\n                    },\r\n                    _updateItemsCore: function(change) {\r\n                        var delta = this.getRowIndexDelta();\r\n                        this.callBase.apply(this, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && gridCoreUtils.isVirtualRowRendering(this)) {\r\n                            if (\"update\" === change.changeType && 0 === change.rowIndices.length && change.cancelEmptyChanges) {\r\n                                change.cancel = true\r\n                            }\r\n                            return\r\n                        }\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            var visibleItems = this._visibleItems;\r\n                            var isRefresh = \"refresh\" === change.changeType || change.isLiveUpdate;\r\n                            if (\"append\" === change.changeType && change.items && !change.items.length) {\r\n                                return\r\n                            }\r\n                            if (isRefresh || \"append\" === change.changeType || \"prepend\" === change.changeType) {\r\n                                change.cancel = true;\r\n                                isRefresh && rowsScrollController.reset(true);\r\n                                rowsScrollController.load()\r\n                            } else {\r\n                                if (\"update\" === change.changeType) {\r\n                                    change.rowIndices.forEach((rowIndex, index) => {\r\n                                        var changeType = change.changeTypes[index];\r\n                                        var newItem = change.items[index];\r\n                                        if (\"update\" === changeType) {\r\n                                            visibleItems[rowIndex] = newItem\r\n                                        } else if (\"insert\" === changeType) {\r\n                                            visibleItems.splice(rowIndex, 0, newItem)\r\n                                        } else if (\"remove\" === changeType) {\r\n                                            visibleItems.splice(rowIndex, 1)\r\n                                        }\r\n                                    })\r\n                                } else {\r\n                                    visibleItems.forEach((item, index) => {\r\n                                        visibleItems[index] = this._items[index + delta] || visibleItems[index]\r\n                                    });\r\n                                    change.items = visibleItems\r\n                                }\r\n                                updateItemIndices(visibleItems)\r\n                            }\r\n                        }\r\n                    },\r\n                    _updateLoadViewportParams: function() {\r\n                        var viewportParams = this._rowsScrollController.getViewportParams();\r\n                        var pageSize = this.pageSize();\r\n                        if (viewportParams && !isVirtualPaging(this) && pageSize > 0) {\r\n                            var pageOffset = this.pageIndex() * pageSize;\r\n                            viewportParams.skip += pageOffset\r\n                        }\r\n                        this._loadViewportParams = viewportParams\r\n                    },\r\n                    _processItems: function(items) {\r\n                        var newItems = this.callBase.apply(this, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            var _dataSource$lastLoadO;\r\n                            var dataSource = this._dataSource;\r\n                            var currentIndex = null !== (_dataSource$lastLoadO = null === dataSource || void 0 === dataSource ? void 0 : dataSource.lastLoadOptions().skip) && void 0 !== _dataSource$lastLoadO ? _dataSource$lastLoadO : 0;\r\n                            var prevCountable;\r\n                            var prevRowType;\r\n                            var isPrevRowNew;\r\n                            var wasCountableItem = false;\r\n                            newItems.forEach(item => {\r\n                                var rowType = item.rowType;\r\n                                var itemCountable = isItemCountableByDataSource(item, dataSource);\r\n                                if (!item.isNewRow && isDefined(prevCountable)) {\r\n                                    var isNextGroupItem = \"group\" === rowType && (prevCountable || itemCountable || \"group\" !== prevRowType && currentIndex > 0);\r\n                                    var isNextDataItem = \"data\" === rowType && itemCountable && (prevCountable || \"group\" !== prevRowType);\r\n                                    var isPrevNewRowFirst = isPrevRowNew && !wasCountableItem;\r\n                                    if (isNextGroupItem || isNextDataItem) {\r\n                                        wasCountableItem = true;\r\n                                        if (!isPrevNewRowFirst) {\r\n                                            currentIndex++\r\n                                        }\r\n                                    }\r\n                                }\r\n                                item.loadIndex = currentIndex;\r\n                                prevCountable = itemCountable;\r\n                                prevRowType = rowType;\r\n                                isPrevRowNew = item.isNewRow\r\n                            })\r\n                        }\r\n                        return newItems\r\n                    },\r\n                    _afterProcessItems: function(items) {\r\n                        this._itemCount = items.filter(item => isItemCountableByDataSource(item, this._dataSource)).length;\r\n                        if (isDefined(this._loadViewportParams)) {\r\n                            this._updateLoadViewportParams();\r\n                            var result = items;\r\n                            this._allItems = items;\r\n                            if (items.length) {\r\n                                var {\r\n                                    skipForCurrentPage: skipForCurrentPage\r\n                                } = this.getLoadPageParams(true);\r\n                                var skip = items[0].loadIndex + skipForCurrentPage;\r\n                                var take = this._loadViewportParams.take;\r\n                                result = items.filter(it => {\r\n                                    var isNewRowOnStart = it.isNewRow && it.loadIndex >= skip - 1;\r\n                                    var isNewRowInEmptyData = it.isNewRow && it.loadIndex === skip && 0 === take;\r\n                                    var isLoadIndexGreaterStart = it.loadIndex >= skip || isNewRowOnStart;\r\n                                    var isLoadIndexLessEnd = it.loadIndex < skip + take || isNewRowInEmptyData;\r\n                                    return isLoadIndexGreaterStart && isLoadIndexLessEnd\r\n                                })\r\n                            }\r\n                            return result\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    _applyChange: function(change) {\r\n                        var that = this;\r\n                        var items = change.items;\r\n                        var changeType = change.changeType;\r\n                        var removeCount = change.removeCount;\r\n                        if (removeCount) {\r\n                            var fromEnd = \"prepend\" === changeType;\r\n                            removeCount = _correctCount(that._items, removeCount, fromEnd, (function(item, isNextAfterLast) {\r\n                                return \"data\" === item.rowType && !item.isNewRow || \"group\" === item.rowType && (that._dataSource.isGroupItemCountable(item.data) || isNextAfterLast)\r\n                            }));\r\n                            change.removeCount = removeCount\r\n                        }\r\n                        switch (changeType) {\r\n                            case \"prepend\":\r\n                                that._items.unshift.apply(that._items, items);\r\n                                if (removeCount) {\r\n                                    that._items.splice(-removeCount)\r\n                                }\r\n                                break;\r\n                            case \"append\":\r\n                                that._items.push.apply(that._items, items);\r\n                                if (removeCount) {\r\n                                    that._items.splice(0, removeCount)\r\n                                }\r\n                                break;\r\n                            default:\r\n                                that.callBase(change)\r\n                        }\r\n                    },\r\n                    items: function(allItems) {\r\n                        return allItems ? this._allItems || this._items : this._visibleItems || this._items\r\n                    },\r\n                    getRowIndexDelta: function() {\r\n                        var delta = 0;\r\n                        if (this.option(LEGACY_SCROLLING_MODE)) {\r\n                            var visibleItems = this._visibleItems;\r\n                            if (visibleItems && visibleItems[0]) {\r\n                                delta = this._items.indexOf(visibleItems[0])\r\n                            }\r\n                        }\r\n                        return delta < 0 ? 0 : delta\r\n                    },\r\n                    getRowIndexOffset: function(byLoadedRows) {\r\n                        var offset = 0;\r\n                        var dataSource = this.dataSource();\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var newMode = false === this.option(LEGACY_SCROLLING_MODE);\r\n                        var virtualPaging = isVirtualPaging(this);\r\n                        if (rowsScrollController && !byLoadedRows) {\r\n                            if (newMode && isDefined(this._loadViewportParams)) {\r\n                                var {\r\n                                    skipForCurrentPage: skipForCurrentPage,\r\n                                    pageIndex: pageIndex\r\n                                } = this.getLoadPageParams(true);\r\n                                var items = this.items(true);\r\n                                offset = virtualPaging ? pageIndex * this.pageSize() : 0;\r\n                                if (items.length) {\r\n                                    var firstLoadIndex = items[0].loadIndex;\r\n                                    offset += items.filter(item => item.loadIndex < firstLoadIndex + skipForCurrentPage).length\r\n                                }\r\n                            } else {\r\n                                offset = rowsScrollController.beginPageIndex() * rowsScrollController.pageSize()\r\n                            }\r\n                        } else if (virtualPaging && newMode && dataSource) {\r\n                            var _dataSource$lastLoadO2;\r\n                            offset = null !== (_dataSource$lastLoadO2 = dataSource.lastLoadOptions().skip) && void 0 !== _dataSource$lastLoadO2 ? _dataSource$lastLoadO2 : 0\r\n                        } else if (isVirtualMode(this) && dataSource) {\r\n                            offset = dataSource.beginPageIndex() * dataSource.pageSize()\r\n                        }\r\n                        return offset\r\n                    },\r\n                    viewportSize: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var dataSource = this._dataSource;\r\n                        var result = null === rowsScrollController || void 0 === rowsScrollController ? void 0 : rowsScrollController.viewportSize.apply(rowsScrollController, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            return result\r\n                        }\r\n                        return null === dataSource || void 0 === dataSource ? void 0 : dataSource.viewportSize.apply(dataSource, arguments)\r\n                    },\r\n                    viewportHeight: function(height) {\r\n                        var _this$_rowsScrollCont;\r\n                        null === (_this$_rowsScrollCont = this._rowsScrollController) || void 0 === _this$_rowsScrollCont ? void 0 : _this$_rowsScrollCont.viewportHeight(height)\r\n                    },\r\n                    viewportItemSize: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var dataSource = this._dataSource;\r\n                        var result = null === rowsScrollController || void 0 === rowsScrollController ? void 0 : rowsScrollController.viewportItemSize.apply(rowsScrollController, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            return result\r\n                        }\r\n                        return null === dataSource || void 0 === dataSource ? void 0 : dataSource.viewportItemSize.apply(dataSource, arguments)\r\n                    },\r\n                    setViewportPosition: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var dataSource = this._dataSource;\r\n                        if (rowsScrollController) {\r\n                            rowsScrollController.setViewportPosition.apply(rowsScrollController, arguments)\r\n                        } else {\r\n                            null === dataSource || void 0 === dataSource ? void 0 : dataSource.setViewportPosition.apply(dataSource, arguments)\r\n                        }\r\n                    },\r\n                    setContentItemSizes: function(sizes) {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var dataSource = this._dataSource;\r\n                        var result = null === rowsScrollController || void 0 === rowsScrollController ? void 0 : rowsScrollController.setContentItemSizes(sizes);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            return result\r\n                        }\r\n                        return null === dataSource || void 0 === dataSource ? void 0 : dataSource.setContentItemSizes(sizes)\r\n                    },\r\n                    getPreloadedRowCount: function() {\r\n                        var preloadCount = this.option(\"scrolling.preloadedRowCount\");\r\n                        var preloadEnabled = this.option(\"scrolling.preloadEnabled\");\r\n                        if (isDefined(preloadCount)) {\r\n                            return preloadCount\r\n                        }\r\n                        var viewportSize = this.viewportSize();\r\n                        return preloadEnabled ? 2 * viewportSize : viewportSize\r\n                    },\r\n                    getLoadPageParams: function(byLoadedPage) {\r\n                        var _this$_dataSource3, _this$_dataSource4;\r\n                        var pageSize = this.pageSize();\r\n                        var viewportParams = this._loadViewportParams;\r\n                        var lastLoadOptions = null === (_this$_dataSource3 = this._dataSource) || void 0 === _this$_dataSource3 ? void 0 : _this$_dataSource3.lastLoadOptions();\r\n                        var loadedPageIndex = (null === lastLoadOptions || void 0 === lastLoadOptions ? void 0 : lastLoadOptions.pageIndex) || 0;\r\n                        var loadedTake = (null === lastLoadOptions || void 0 === lastLoadOptions ? void 0 : lastLoadOptions.take) || 0;\r\n                        var isScrollingBack = this._rowsScrollController.isScrollingBack();\r\n                        var topPreloadCount = isScrollingBack ? this.getPreloadedRowCount() : 0;\r\n                        var bottomPreloadCount = isScrollingBack ? 0 : this.getPreloadedRowCount();\r\n                        var totalCountCorrection = (null === (_this$_dataSource4 = this._dataSource) || void 0 === _this$_dataSource4 ? void 0 : _this$_dataSource4.totalCountCorrection()) || 0;\r\n                        var skipWithPreload = Math.max(0, viewportParams.skip - topPreloadCount);\r\n                        var pageIndex = byLoadedPage ? loadedPageIndex : Math.floor(pageSize ? skipWithPreload / pageSize : 0);\r\n                        var pageOffset = pageIndex * pageSize;\r\n                        var skipForCurrentPage = viewportParams.skip - pageOffset;\r\n                        var loadingTake = viewportParams.take + skipForCurrentPage + bottomPreloadCount - totalCountCorrection;\r\n                        var take = byLoadedPage ? loadedTake : loadingTake;\r\n                        var loadPageCount = Math.ceil(pageSize ? take / pageSize : 0);\r\n                        return {\r\n                            pageIndex: pageIndex,\r\n                            loadPageCount: Math.max(1, loadPageCount),\r\n                            skipForCurrentPage: Math.max(0, skipForCurrentPage)\r\n                        }\r\n                    },\r\n                    _updateVisiblePageIndex: function(currentPageIndex) {\r\n                        if (!this._rowsScrollController) {\r\n                            return\r\n                        }\r\n                        if (isDefined(currentPageIndex)) {\r\n                            this._silentOption(VISIBLE_PAGE_INDEX, currentPageIndex);\r\n                            this.pageChanged.fire();\r\n                            return\r\n                        }\r\n                        var viewPortItemIndex = this._rowsScrollController.getViewportItemIndex();\r\n                        var newPageIndex = Math.floor(viewPortItemIndex / this.pageSize());\r\n                        if (this.pageIndex() !== newPageIndex) {\r\n                            this._silentOption(VISIBLE_PAGE_INDEX, newPageIndex);\r\n                            this.updateItems({\r\n                                changeType: \"pageIndex\"\r\n                            })\r\n                        }\r\n                    },\r\n                    _getChangedLoadParams: function() {\r\n                        var loadedPageParams = this.getLoadPageParams(true);\r\n                        var {\r\n                            pageIndex: pageIndex,\r\n                            loadPageCount: loadPageCount\r\n                        } = this.getLoadPageParams();\r\n                        var result = null;\r\n                        if (!this._isLoading && (pageIndex !== loadedPageParams.pageIndex || loadPageCount !== loadedPageParams.loadPageCount)) {\r\n                            result = {\r\n                                pageIndex: pageIndex,\r\n                                loadPageCount: loadPageCount\r\n                            }\r\n                        }\r\n                        return result\r\n                    },\r\n                    _loadItems: function(checkLoading) {\r\n                        var _dataSourceAdapter$lo, _dataSourceAdapter$pa;\r\n                        var virtualPaging = isVirtualPaging(this);\r\n                        var dataSourceAdapter = this._dataSource;\r\n                        var changedParams = this._getChangedLoadParams();\r\n                        var currentLoadPageCount = null !== (_dataSourceAdapter$lo = null === dataSourceAdapter || void 0 === dataSourceAdapter ? void 0 : dataSourceAdapter.loadPageCount()) && void 0 !== _dataSourceAdapter$lo ? _dataSourceAdapter$lo : 0;\r\n                        var lastRequiredItemCount = this.pageSize() * currentLoadPageCount;\r\n                        var currentPageIndex = null !== (_dataSourceAdapter$pa = null === dataSourceAdapter || void 0 === dataSourceAdapter ? void 0 : dataSourceAdapter.pageIndex()) && void 0 !== _dataSourceAdapter$pa ? _dataSourceAdapter$pa : 0;\r\n                        var pageIndexNotChanged = (null === changedParams || void 0 === changedParams ? void 0 : changedParams.pageIndex) === currentPageIndex;\r\n                        var allLoadedInAppendMode = isAppendMode(this) && this.totalItemsCount() < lastRequiredItemCount;\r\n                        var result = false;\r\n                        if (!dataSourceAdapter || virtualPaging && checkLoading && ((null === changedParams || void 0 === changedParams ? void 0 : changedParams.pageIndex) > currentPageIndex || pageIndexNotChanged && allLoadedInAppendMode)) {\r\n                            return result\r\n                        }\r\n                        if (virtualPaging && this._isLoading) {\r\n                            this._needUpdateViewportAfterLoading = true\r\n                        }\r\n                        if (virtualPaging && changedParams) {\r\n                            result = true;\r\n                            dataSourceAdapter.pageIndex(changedParams.pageIndex);\r\n                            dataSourceAdapter.loadPageCount(changedParams.loadPageCount);\r\n                            this._repaintChangesOnly = true;\r\n                            this._needUpdateDimensions = true;\r\n                            var viewportChanging = this._viewportChanging;\r\n                            this.load().always(() => {\r\n                                this._repaintChangesOnly = void 0;\r\n                                this._needUpdateDimensions = void 0\r\n                            }).done(() => {\r\n                                var isLastPage = this.pageCount() > 0 && this.pageIndex() === this.pageCount() - 1;\r\n                                (viewportChanging || isLastPage) && this._updateVisiblePageIndex();\r\n                                if (this._needUpdateViewportAfterLoading) {\r\n                                    this._needUpdateViewportAfterLoading = false;\r\n                                    this.loadViewport({\r\n                                        checkLoadedParamsOnly: true\r\n                                    })\r\n                                }\r\n                            })\r\n                        }\r\n                        return result\r\n                    },\r\n                    loadViewport: function(params) {\r\n                        var {\r\n                            checkLoadedParamsOnly: checkLoadedParamsOnly,\r\n                            checkLoading: checkLoading\r\n                        } = null !== params && void 0 !== params ? params : {};\r\n                        var virtualPaging = isVirtualPaging(this);\r\n                        if (virtualPaging || gridCoreUtils.isVirtualRowRendering(this)) {\r\n                            this._updateLoadViewportParams();\r\n                            var loadingItemsStarted = this._loadItems(checkLoading);\r\n                            if (!loadingItemsStarted && !(this._isLoading && checkLoading) && !checkLoadedParamsOnly) {\r\n                                this.updateItems({\r\n                                    repaintChangesOnly: true,\r\n                                    needUpdateDimensions: true,\r\n                                    useProcessedItemsCache: true,\r\n                                    cancelEmptyChanges: true\r\n                                })\r\n                            }\r\n                        }\r\n                    },\r\n                    updateViewport: function() {\r\n                        var _this$_loadViewportPa, _this$_loadViewportPa2;\r\n                        var viewportSize = this.viewportSize();\r\n                        var itemCount = this.items().length;\r\n                        var viewportIsNotFilled = viewportSize > itemCount;\r\n                        var currentTake = null !== (_this$_loadViewportPa = null === (_this$_loadViewportPa2 = this._loadViewportParams) || void 0 === _this$_loadViewportPa2 ? void 0 : _this$_loadViewportPa2.take) && void 0 !== _this$_loadViewportPa ? _this$_loadViewportPa : 0;\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var newTake = null === rowsScrollController || void 0 === rowsScrollController ? void 0 : rowsScrollController.getViewportParams().take;\r\n                        (viewportIsNotFilled || currentTake < newTake) && itemCount && this.loadViewport({\r\n                            checkLoading: true\r\n                        })\r\n                    },\r\n                    loadIfNeed: function() {\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            return\r\n                        }\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        rowsScrollController && rowsScrollController.loadIfNeed();\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.loadIfNeed()\r\n                    },\r\n                    getItemSize: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.getItemSize.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.getItemSize.apply(dataSource, arguments)\r\n                    },\r\n                    getItemSizes: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.getItemSizes.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.getItemSizes.apply(dataSource, arguments)\r\n                    },\r\n                    getContentOffset: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.getContentOffset.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.getContentOffset.apply(dataSource, arguments)\r\n                    },\r\n                    refresh: function(options) {\r\n                        var dataSource = this._dataSource;\r\n                        if (dataSource && options && options.load && isAppendMode(this)) {\r\n                            dataSource.resetCurrentTotalCount()\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    dispose: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        rowsScrollController && rowsScrollController.dispose();\r\n                        this.callBase.apply(this, arguments)\r\n                    },\r\n                    topItemIndex: function() {\r\n                        var _this$_loadViewportPa3;\r\n                        return null === (_this$_loadViewportPa3 = this._loadViewportParams) || void 0 === _this$_loadViewportPa3 ? void 0 : _this$_loadViewportPa3.skip\r\n                    },\r\n                    bottomItemIndex: function() {\r\n                        var viewportParams = this._loadViewportParams;\r\n                        return viewportParams && viewportParams.skip + viewportParams.take\r\n                    },\r\n                    virtualItemsCount: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.virtualItemsCount.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return null === dataSource || void 0 === dataSource ? void 0 : dataSource.virtualItemsCount.apply(dataSource, arguments)\r\n                    },\r\n                    pageIndex: function(_pageIndex) {\r\n                        var virtualPaging = isVirtualPaging(this);\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && virtualPaging && rowsScrollController) {\r\n                            if (void 0 === _pageIndex) {\r\n                                var _this$option;\r\n                                return null !== (_this$option = this.option(VISIBLE_PAGE_INDEX)) && void 0 !== _this$option ? _this$option : 0\r\n                            }\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    _fireChanged: function(e) {\r\n                        this.callBase.apply(this, arguments);\r\n                        var {\r\n                            operationTypes: operationTypes\r\n                        } = e;\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && isVirtualPaging(this) && operationTypes) {\r\n                            var {\r\n                                fullReload: fullReload,\r\n                                pageIndex: pageIndex\r\n                            } = operationTypes;\r\n                            if (e.isDataChanged && !fullReload && pageIndex) {\r\n                                this._updateVisiblePageIndex(this._dataSource.pageIndex())\r\n                            }\r\n                        }\r\n                    },\r\n                    _getPagingOptionValue: function(optionName) {\r\n                        var result = this.callBase.apply(this, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && isVirtualPaging(this)) {\r\n                            result = this[optionName]()\r\n                        }\r\n                        return result\r\n                    },\r\n                    isEmpty: function() {\r\n                        return false === this.option(LEGACY_SCROLLING_MODE) ? !this.items(true).length : this.callBase(this, arguments)\r\n                    },\r\n                    isLastPageLoaded: function() {\r\n                        var result = false;\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && isVirtualPaging(this)) {\r\n                            var {\r\n                                pageIndex: pageIndex,\r\n                                loadPageCount: loadPageCount\r\n                            } = this.getLoadPageParams(true);\r\n                            var pageCount = this.pageCount();\r\n                            result = pageIndex + loadPageCount >= pageCount\r\n                        } else {\r\n                            result = this.callBase.apply(this, arguments)\r\n                        }\r\n                        return result\r\n                    },\r\n                    reset: function() {\r\n                        this._itemCount = 0;\r\n                        this._allItems = null;\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                };\r\n                gridCoreUtils.proxyMethod(members, \"getVirtualContentSize\");\r\n                gridCoreUtils.proxyMethod(members, \"setViewportItemIndex\");\r\n                return members\r\n            }(),\r\n            resizing: {\r\n                resize: function() {\r\n                    var that = this;\r\n                    var callBase = that.callBase;\r\n                    var result;\r\n                    if (isVirtualMode(that) || gridCoreUtils.isVirtualRowRendering(that)) {\r\n                        clearTimeout(that._resizeTimeout);\r\n                        var diff = new Date - that._lastTime;\r\n                        var updateTimeout = that.option(\"scrolling.updateTimeout\");\r\n                        if (that._lastTime && diff < updateTimeout) {\r\n                            result = new Deferred;\r\n                            that._resizeTimeout = setTimeout((function() {\r\n                                callBase.apply(that).done(result.resolve).fail(result.reject);\r\n                                that._lastTime = new Date\r\n                            }), updateTimeout);\r\n                            that._lastTime = new Date\r\n                        } else {\r\n                            result = callBase.apply(that);\r\n                            if (that._dataController.isLoaded()) {\r\n                                that._lastTime = new Date\r\n                            }\r\n                        }\r\n                    } else {\r\n                        result = callBase.apply(that)\r\n                    }\r\n                    return result\r\n                },\r\n                dispose: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    clearTimeout(this._resizeTimeout)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: VirtualScrollingRowsViewExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.virtual_scrolling.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport dataSourceAdapter from \"./ui.data_grid.data_source_adapter\";\r\nimport {\r\n    virtualScrollingModule\r\n} from \"../grid_core/ui.grid_core.virtual_scrolling\";\r\ngridCore.registerModule(\"virtualScrolling\", virtualScrollingModule);\r\ndataSourceAdapter.extend(virtualScrollingModule.extenders.dataSourceAdapter);\r\n","/**\r\n * DevExtreme (esm/ui/overlay/utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getInnerHeight,\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    isNumeric\r\n} from \"../../core/utils/type\";\r\nvar WINDOW_HEIGHT_PERCENT = .9;\r\nexport var getElementMaxHeightByWindow = ($element, startLocation) => {\r\n    var $window = $(getWindow());\r\n    var {\r\n        top: elementOffset\r\n    } = $element.offset();\r\n    var actualOffset;\r\n    if (isNumeric(startLocation)) {\r\n        if (startLocation < elementOffset) {\r\n            return elementOffset - startLocation\r\n        } else {\r\n            actualOffset = getInnerHeight($window) - startLocation + $window.scrollTop()\r\n        }\r\n    } else {\r\n        var offsetTop = elementOffset - $window.scrollTop();\r\n        var offsetBottom = getInnerHeight($window) - offsetTop - getOuterHeight($element);\r\n        actualOffset = Math.max(offsetTop, offsetBottom)\r\n    }\r\n    return actualOffset * WINDOW_HEIGHT_PERCENT\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/menu/ui.submenu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth,\r\n    getHeight,\r\n    setWidth,\r\n    setHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport animationPosition from \"../../animation/position\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport ContextMenu from \"../context_menu\";\r\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\";\r\nvar DX_SUBMENU_CLASS = \"dx-submenu\";\r\nclass Submenu extends ContextMenu {\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            orientation: \"horizontal\",\r\n            tabIndex: null,\r\n            onHoverStart: noop\r\n        })\r\n    }\r\n    _initDataAdapter() {\r\n        this._dataAdapter = this.option(\"_dataAdapter\");\r\n        if (!this._dataAdapter) {\r\n            super._initDataAdapter()\r\n        }\r\n    }\r\n    _renderContentImpl() {\r\n        this._renderContextMenuOverlay();\r\n        super._renderContentImpl();\r\n        var node = this._dataAdapter.getNodeByKey(this.option(\"_parentKey\"));\r\n        node && this._renderItems(this._getChildNodes(node));\r\n        this._renderDelimiter()\r\n    }\r\n    _renderDelimiter() {\r\n        this.$contentDelimiter = $(\"<div>\").appendTo(this._itemContainer()).addClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)\r\n    }\r\n    _getOverlayOptions() {\r\n        return extend(super._getOverlayOptions(), {\r\n            onPositioned: this._overlayPositionedActionHandler.bind(this)\r\n        })\r\n    }\r\n    _overlayPositionedActionHandler(arg) {\r\n        this._showDelimiter(arg)\r\n    }\r\n    _hoverEndHandler(e) {\r\n        super._hoverEndHandler(e);\r\n        this._toggleFocusClass(false, e.currentTarget)\r\n    }\r\n    _isMenuHorizontal() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    }\r\n    _hoverStartHandler(e) {\r\n        var hoverStartAction = this.option(\"onHoverStart\");\r\n        hoverStartAction(e);\r\n        super._hoverStartHandler(e);\r\n        this._toggleFocusClass(true, e.currentTarget)\r\n    }\r\n    _drawSubmenu($rootItem) {\r\n        this._actions.onShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        });\r\n        super._drawSubmenu($rootItem);\r\n        this._actions.onShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        })\r\n    }\r\n    _hideSubmenu($rootItem) {\r\n        this._actions.onHiding({\r\n            cancel: true,\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        });\r\n        super._hideSubmenu($rootItem);\r\n        this._actions.onHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        })\r\n    }\r\n    _showDelimiter(arg) {\r\n        if (!this.$contentDelimiter) {\r\n            return\r\n        }\r\n        var $submenu = this._itemContainer().children(\".\".concat(DX_SUBMENU_CLASS)).eq(0);\r\n        var $rootItem = this.option(\"position\").of;\r\n        var position = {\r\n            of: $submenu\r\n        };\r\n        var containerOffset = arg.position;\r\n        var vLocation = containerOffset.v.location;\r\n        var hLocation = containerOffset.h.location;\r\n        var rootOffset = $rootItem.offset();\r\n        var offsetLeft = Math.round(rootOffset.left);\r\n        var offsetTop = Math.round(rootOffset.top);\r\n        var rootWidth = getWidth($rootItem);\r\n        var rootHeight = getHeight($rootItem);\r\n        var submenuWidth = getWidth($submenu);\r\n        var submenuHeight = getHeight($submenu);\r\n        this.$contentDelimiter.css(\"display\", \"block\");\r\n        setWidth(this.$contentDelimiter, this._isMenuHorizontal() ? rootWidth < submenuWidth ? rootWidth - 2 : submenuWidth : 2);\r\n        setHeight(this.$contentDelimiter, this._isMenuHorizontal() ? 2 : rootHeight < submenuHeight ? rootHeight - 2 : submenuHeight);\r\n        if (this._isMenuHorizontal()) {\r\n            if (vLocation > offsetTop) {\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 -1\";\r\n                    position.at = position.my = \"left top\"\r\n                } else {\r\n                    position.offset = \"-1 -1\";\r\n                    position.at = position.my = \"right top\"\r\n                }\r\n            } else {\r\n                setHeight(this.$contentDelimiter, 5);\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 4\";\r\n                    position.at = position.my = \"left bottom\"\r\n                } else {\r\n                    position.offset = \"-1 2\";\r\n                    position.at = position.my = \"right bottom\"\r\n                }\r\n            }\r\n        } else if (hLocation > offsetLeft) {\r\n            if (Math.round(vLocation) === offsetTop) {\r\n                position.offset = \"-1 1\";\r\n                position.at = position.my = \"left top\"\r\n            } else {\r\n                position.offset = \"-1 -1\";\r\n                position.at = position.my = \"left bottom\"\r\n            }\r\n        } else if (Math.round(vLocation) === offsetTop) {\r\n            position.offset = \"1 1\";\r\n            position.at = position.my = \"right top\"\r\n        } else {\r\n            position.offset = \"1 -1\";\r\n            position.at = position.my = \"right bottom\"\r\n        }\r\n        animationPosition.setup(this.$contentDelimiter, position)\r\n    }\r\n    _getContextMenuPosition() {\r\n        return this.option(\"position\")\r\n    }\r\n    isOverlayVisible() {\r\n        return this._overlay.option(\"visible\")\r\n    }\r\n    getOverlayContent() {\r\n        return this._overlay.$content()\r\n    }\r\n}\r\nexport default Submenu;\r\n","/**\r\n * DevExtreme (esm/ui/menu/ui.menu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isPlainObject,\r\n    isObject,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getElementMaxHeightByWindow\r\n} from \"../overlay/utils\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    end as hoverEventEnd\r\n} from \"../../events/hover\";\r\nimport MenuBase from \"../context_menu/ui.menu_base\";\r\nimport Overlay from \"../overlay/ui.overlay\";\r\nimport Submenu from \"./ui.submenu\";\r\nimport Button from \"../button\";\r\nimport TreeView from \"../tree_view\";\r\nvar DX_MENU_CLASS = \"dx-menu\";\r\nvar DX_MENU_VERTICAL_CLASS = DX_MENU_CLASS + \"-vertical\";\r\nvar DX_MENU_HORIZONTAL_CLASS = DX_MENU_CLASS + \"-horizontal\";\r\nvar DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\";\r\nvar DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\";\r\nvar DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\";\r\nvar DX_CONTEXT_MENU_CLASS = \"dx-context-menu\";\r\nvar DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS = DX_CONTEXT_MENU_CLASS + \"-container-border\";\r\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\";\r\nvar DX_SUBMENU_CLASS = \"dx-submenu\";\r\nvar DX_STATE_DISABLED_CLASS = \"dx-state-disabled\";\r\nvar DX_STATE_HOVER_CLASS = \"dx-state-hover\";\r\nvar DX_STATE_ACTIVE_CLASS = \"dx-state-active\";\r\nvar DX_ADAPTIVE_MODE_CLASS = DX_MENU_CLASS + \"-adaptive-mode\";\r\nvar DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS = DX_MENU_CLASS + \"-hamburger-button\";\r\nvar DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS = DX_ADAPTIVE_MODE_CLASS + \"-overlay-wrapper\";\r\nvar FOCUS_UP = \"up\";\r\nvar FOCUS_DOWN = \"down\";\r\nvar FOCUS_LEFT = \"left\";\r\nvar FOCUS_RIGHT = \"right\";\r\nvar SHOW_SUBMENU_OPERATION = \"showSubmenu\";\r\nvar NEXTITEM_OPERATION = \"nextItem\";\r\nvar PREVITEM_OPERATION = \"prevItem\";\r\nvar DEFAULT_DELAY = {\r\n    show: 50,\r\n    hide: 300\r\n};\r\nvar ACTIONS = [\"onSubmenuShowing\", \"onSubmenuShown\", \"onSubmenuHiding\", \"onSubmenuHidden\", \"onItemContextMenu\", \"onItemClick\", \"onSelectionChanged\", \"onItemRendered\"];\r\nclass Menu extends MenuBase {\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            orientation: \"horizontal\",\r\n            submenuDirection: \"auto\",\r\n            showFirstSubmenuMode: {\r\n                name: \"onClick\",\r\n                delay: {\r\n                    show: 50,\r\n                    hide: 300\r\n                }\r\n            },\r\n            hideSubmenuOnMouseLeave: false,\r\n            onSubmenuShowing: null,\r\n            onSubmenuShown: null,\r\n            onSubmenuHiding: null,\r\n            onSubmenuHidden: null,\r\n            adaptivityEnabled: false\r\n        })\r\n    }\r\n    _setOptionsByReference() {\r\n        super._setOptionsByReference();\r\n        extend(this._optionsByReference, {\r\n            animation: true,\r\n            selectedItem: true\r\n        })\r\n    }\r\n    _itemElements() {\r\n        var rootMenuElements = super._itemElements();\r\n        var submenuElements = this._submenuItemElements();\r\n        return rootMenuElements.add(submenuElements)\r\n    }\r\n    _submenuItemElements() {\r\n        var elements = [];\r\n        var itemSelector = \".\".concat(DX_MENU_ITEM_CLASS);\r\n        var currentSubmenu = this._submenus.length && this._submenus[0];\r\n        if (currentSubmenu && currentSubmenu.itemsContainer()) {\r\n            elements = currentSubmenu.itemsContainer().find(itemSelector)\r\n        }\r\n        return elements\r\n    }\r\n    _focusTarget() {\r\n        return this.$element()\r\n    }\r\n    _isMenuHorizontal() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    }\r\n    _moveFocus(location) {\r\n        var $items = this._getAvailableItems();\r\n        var isMenuHorizontal = this._isMenuHorizontal();\r\n        var $activeItem = this._getActiveItem(true);\r\n        var argument;\r\n        var operation;\r\n        var navigationAction;\r\n        var $newTarget;\r\n        switch (location) {\r\n            case FOCUS_UP:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(PREVITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_DOWN:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(NEXTITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_RIGHT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(NEXTITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_LEFT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(PREVITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            default:\r\n                return super._moveFocus(location)\r\n        }\r\n        if ($newTarget && 0 !== $newTarget.length) {\r\n            this.option(\"focusedElement\", getPublicElement($newTarget))\r\n        }\r\n    }\r\n    _getItemsNavigationOperation(operation) {\r\n        var navOperation = operation;\r\n        if (this.option(\"rtlEnabled\")) {\r\n            navOperation = operation === PREVITEM_OPERATION ? NEXTITEM_OPERATION : PREVITEM_OPERATION\r\n        }\r\n        return navOperation\r\n    }\r\n    _getKeyboardNavigationAction(operation, argument) {\r\n        var action = noop;\r\n        switch (operation) {\r\n            case SHOW_SUBMENU_OPERATION:\r\n                if (!argument.hasClass(DX_STATE_DISABLED_CLASS)) {\r\n                    action = this._showSubmenu.bind(this, argument)\r\n                }\r\n                break;\r\n            case NEXTITEM_OPERATION:\r\n                action = this._nextItem.bind(this, argument);\r\n                break;\r\n            case PREVITEM_OPERATION:\r\n                action = this._prevItem.bind(this, argument)\r\n        }\r\n        return action\r\n    }\r\n    _clean() {\r\n        super._clean();\r\n        this.option(\"templatesRenderAsynchronously\") && clearTimeout(this._resizeEventTimer)\r\n    }\r\n    _visibilityChanged(visible) {\r\n        if (visible) {\r\n            if (!this._menuItemsWidth) {\r\n                this._updateItemsWidthCache()\r\n            }\r\n            this._dimensionChanged()\r\n        }\r\n    }\r\n    _isAdaptivityEnabled() {\r\n        return this.option(\"adaptivityEnabled\") && \"horizontal\" === this.option(\"orientation\")\r\n    }\r\n    _updateItemsWidthCache() {\r\n        var $menuItems = this.$element().find(\"ul\").first().children(\"li\").children(\".\".concat(DX_MENU_ITEM_CLASS));\r\n        this._menuItemsWidth = this._getSummaryItemsWidth($menuItems, true)\r\n    }\r\n    _dimensionChanged() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        var containerWidth = getOuterWidth(this.$element());\r\n        this._toggleAdaptiveMode(this._menuItemsWidth > containerWidth)\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this._submenus = []\r\n    }\r\n    _initActions() {\r\n        this._actions = {};\r\n        each(ACTIONS, (index, action) => {\r\n            this._actions[action] = this._createActionByOption(action)\r\n        })\r\n    }\r\n    _initMarkup() {\r\n        this._visibleSubmenu = null;\r\n        this.$element().addClass(DX_MENU_CLASS);\r\n        super._initMarkup();\r\n        this.setAria(\"role\", \"menubar\")\r\n    }\r\n    _render() {\r\n        super._render();\r\n        this._initAdaptivity()\r\n    }\r\n    _renderHamburgerButton() {\r\n        this._hamburger = new Button($(\"<div>\").addClass(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS), {\r\n            icon: \"menu\",\r\n            activeStateEnabled: false,\r\n            onClick: this._toggleTreeView.bind(this)\r\n        });\r\n        return this._hamburger.$element()\r\n    }\r\n    _toggleTreeView(state) {\r\n        if (isPlainObject(state)) {\r\n            state = !this._overlay.option(\"visible\")\r\n        }\r\n        this._overlay.option(\"visible\", state);\r\n        this._toggleHamburgerActiveState(state)\r\n    }\r\n    _toggleHamburgerActiveState(state) {\r\n        this._hamburger && this._hamburger.$element().toggleClass(DX_STATE_ACTIVE_CLASS, state)\r\n    }\r\n    _toggleAdaptiveMode(state) {\r\n        var $menuItemsContainer = this.$element().find(\".\".concat(DX_MENU_HORIZONTAL_CLASS));\r\n        var $adaptiveElements = this.$element().find(\".\".concat(DX_ADAPTIVE_MODE_CLASS));\r\n        if (state) {\r\n            this._hideVisibleSubmenu()\r\n        } else {\r\n            this._treeView && this._treeView.collapseAll();\r\n            this._overlay && this._toggleTreeView(state)\r\n        }\r\n        $menuItemsContainer.toggle(!state);\r\n        $adaptiveElements.toggle(state)\r\n    }\r\n    _removeAdaptivity() {\r\n        if (!this._$adaptiveContainer) {\r\n            return\r\n        }\r\n        this._toggleAdaptiveMode(false);\r\n        this._$adaptiveContainer.remove();\r\n        this._$adaptiveContainer = null;\r\n        this._treeView = null;\r\n        this._hamburger = null;\r\n        this._overlay = null\r\n    }\r\n    _treeviewItemClickHandler(e) {\r\n        this._actions.onItemClick(e);\r\n        if (!e.node.children.length) {\r\n            this._toggleTreeView(false)\r\n        }\r\n    }\r\n    _getAdaptiveOverlayOptions() {\r\n        var rtl = this.option(\"rtlEnabled\");\r\n        var position = rtl ? \"right\" : \"left\";\r\n        return {\r\n            _ignoreFunctionValueDeprecation: true,\r\n            maxHeight: () => getElementMaxHeightByWindow(this.$element()),\r\n            deferRendering: false,\r\n            shading: false,\r\n            animation: false,\r\n            hideOnParentScroll: true,\r\n            onHidden: () => {\r\n                this._toggleHamburgerActiveState(false)\r\n            },\r\n            height: \"auto\",\r\n            closeOnOutsideClick: e => !$(e.target).closest(\".\".concat(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS)).length,\r\n            position: {\r\n                collision: \"flipfit\",\r\n                at: \"bottom \" + position,\r\n                my: \"top \" + position,\r\n                of: this._hamburger.$element()\r\n            }\r\n        }\r\n    }\r\n    _getTreeViewOptions() {\r\n        var menuOptions = {};\r\n        each([\"rtlEnabled\", \"width\", \"accessKey\", \"activeStateEnabled\", \"animation\", \"dataSource\", \"disabled\", \"displayExpr\", \"displayExpr\", \"focusStateEnabled\", \"hint\", \"hoverStateEnabled\", \"itemsExpr\", \"items\", \"itemTemplate\", \"selectedExpr\", \"selectionMode\", \"tabIndex\", \"visible\"], (_, option) => {\r\n            menuOptions[option] = this.option(option)\r\n        });\r\n        each([\"onItemContextMenu\", \"onSelectionChanged\"], (_, actionName) => {\r\n            menuOptions[actionName] = e => {\r\n                this._actions[actionName](e)\r\n            }\r\n        });\r\n        return extend(menuOptions, {\r\n            dataSource: this.getDataSource(),\r\n            animationEnabled: !!this.option(\"animation\"),\r\n            onItemClick: this._treeviewItemClickHandler.bind(this),\r\n            onItemExpanded: e => {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuShown(e)\r\n            },\r\n            onItemCollapsed: e => {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuHidden(e)\r\n            },\r\n            selectNodesRecursive: false,\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            expandEvent: \"click\"\r\n        })\r\n    }\r\n    _initAdaptivity() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        this._$adaptiveContainer = $(\"<div>\").addClass(DX_ADAPTIVE_MODE_CLASS);\r\n        var $hamburger = this._renderHamburgerButton();\r\n        this._treeView = this._createComponent($(\"<div>\"), TreeView, this._getTreeViewOptions());\r\n        this._overlay = this._createComponent($(\"<div>\"), Overlay, this._getAdaptiveOverlayOptions());\r\n        this._overlay.$content().append(this._treeView.$element()).addClass(DX_ADAPTIVE_MODE_CLASS).addClass(this.option(\"cssClass\"));\r\n        this._overlay.$wrapper().addClass(DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS);\r\n        this._$adaptiveContainer.append($hamburger);\r\n        this._$adaptiveContainer.append(this._overlay.$element());\r\n        this.$element().append(this._$adaptiveContainer);\r\n        this._updateItemsWidthCache();\r\n        this._dimensionChanged()\r\n    }\r\n    _getDelay(delayType) {\r\n        var delay = this.option(\"showFirstSubmenuMode\").delay;\r\n        if (!isDefined(delay)) {\r\n            return DEFAULT_DELAY[delayType]\r\n        } else {\r\n            return isObject(delay) ? delay[delayType] : delay\r\n        }\r\n    }\r\n    _keyboardHandler(e) {\r\n        return super._keyboardHandler(e, !!this._visibleSubmenu)\r\n    }\r\n    _renderContainer() {\r\n        var $wrapper = $(\"<div>\");\r\n        $wrapper.appendTo(this.$element()).addClass(this._isMenuHorizontal() ? DX_MENU_HORIZONTAL_CLASS : DX_MENU_VERTICAL_CLASS);\r\n        return super._renderContainer($wrapper)\r\n    }\r\n    _renderSubmenuItems(node, $itemFrame) {\r\n        var submenu = this._createSubmenu(node, $itemFrame);\r\n        this._submenus.push(submenu);\r\n        this._renderBorderElement($itemFrame);\r\n        return submenu\r\n    }\r\n    _getKeyboardListeners() {\r\n        return super._getKeyboardListeners().concat(this._visibleSubmenu)\r\n    }\r\n    _createSubmenu(node, $rootItem) {\r\n        var $submenuContainer = $(\"<div>\").addClass(DX_CONTEXT_MENU_CLASS).appendTo($rootItem);\r\n        var items = this._getChildNodes(node);\r\n        var result = this._createComponent($submenuContainer, Submenu, extend(this._getSubmenuOptions(), {\r\n            _dataAdapter: this._dataAdapter,\r\n            _parentKey: node.internalFields.key,\r\n            items: items,\r\n            onHoverStart: this._clearTimeouts.bind(this),\r\n            position: this.getSubmenuPosition($rootItem)\r\n        }));\r\n        this._attachSubmenuHandlers($rootItem, result);\r\n        return result\r\n    }\r\n    _getSubmenuOptions() {\r\n        var $submenuTarget = $(\"<div>\");\r\n        var isMenuHorizontal = this._isMenuHorizontal();\r\n        return {\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            target: $submenuTarget,\r\n            orientation: this.option(\"orientation\"),\r\n            selectionMode: this.option(\"selectionMode\"),\r\n            cssClass: this.option(\"cssClass\"),\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            animation: this.option(\"animation\"),\r\n            showSubmenuMode: this.option(\"showSubmenuMode\"),\r\n            displayExpr: this.option(\"displayExpr\"),\r\n            disabledExpr: this.option(\"disabledExpr\"),\r\n            selectedExpr: this.option(\"selectedExpr\"),\r\n            itemsExpr: this.option(\"itemsExpr\"),\r\n            onFocusedItemChanged: e => {\r\n                if (!e.component.option(\"visible\")) {\r\n                    return\r\n                }\r\n                this.option(\"focusedElement\", e.component.option(\"focusedElement\"))\r\n            },\r\n            onSelectionChanged: this._nestedItemOnSelectionChangedHandler.bind(this),\r\n            onItemClick: this._nestedItemOnItemClickHandler.bind(this),\r\n            onItemRendered: this._nestedItemOnItemRenderedHandler.bind(this),\r\n            onLeftFirstItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, PREVITEM_OPERATION),\r\n            onLeftLastItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION),\r\n            onCloseRootSubmenu: this._moveMainMenuFocus.bind(this, isMenuHorizontal ? PREVITEM_OPERATION : null),\r\n            onExpandLastSubmenu: isMenuHorizontal ? this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION) : null\r\n        }\r\n    }\r\n    _getShowFirstSubmenuMode() {\r\n        if (!this._isDesktopDevice()) {\r\n            return \"onClick\"\r\n        }\r\n        var optionValue = this.option(\"showFirstSubmenuMode\");\r\n        return isObject(optionValue) ? optionValue.name : optionValue\r\n    }\r\n    _moveMainMenuFocus(direction) {\r\n        var $items = this._getAvailableItems();\r\n        var itemCount = $items.length;\r\n        var $currentItem = $items.filter(\".\".concat(DX_MENU_ITEM_EXPANDED_CLASS)).eq(0);\r\n        var itemIndex = $items.index($currentItem);\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        itemIndex += direction === PREVITEM_OPERATION ? -1 : 1;\r\n        if (itemIndex >= itemCount) {\r\n            itemIndex = 0\r\n        } else if (itemIndex < 0) {\r\n            itemIndex = itemCount - 1\r\n        }\r\n        var $newItem = $items.eq(itemIndex);\r\n        this.option(\"focusedElement\", getPublicElement($newItem))\r\n    }\r\n    _nestedItemOnSelectionChangedHandler(args) {\r\n        var selectedItem = args.addedItems.length && args.addedItems[0];\r\n        var submenu = Submenu.getInstance(args.element);\r\n        var onSelectionChanged = this._actions.onSelectionChanged;\r\n        onSelectionChanged(args);\r\n        selectedItem && this._clearSelectionInSubmenus(selectedItem[0], submenu);\r\n        this._clearRootSelection();\r\n        this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem)\r\n    }\r\n    _clearSelectionInSubmenus(item, targetSubmenu) {\r\n        var cleanAllSubmenus = !arguments.length;\r\n        each(this._submenus, (index, submenu) => {\r\n            var $submenu = submenu._itemContainer();\r\n            var isOtherItem = !$submenu.is(targetSubmenu && targetSubmenu._itemContainer());\r\n            var $selectedItem = $submenu.find(\".\".concat(this._selectedItemClass()));\r\n            if (isOtherItem && $selectedItem.length || cleanAllSubmenus) {\r\n                $selectedItem.removeClass(this._selectedItemClass());\r\n                var selectedItemData = this._getItemData($selectedItem);\r\n                if (selectedItemData) {\r\n                    selectedItemData.selected = false\r\n                }\r\n                submenu._clearSelectedItems()\r\n            }\r\n        })\r\n    }\r\n    _clearRootSelection() {\r\n        var $prevSelectedItem = this.$element().find(\".\".concat(DX_MENU_ITEMS_CONTAINER_CLASS)).first().children().children().filter(\".\".concat(this._selectedItemClass()));\r\n        if ($prevSelectedItem.length) {\r\n            var prevSelectedItemData = this._getItemData($prevSelectedItem);\r\n            prevSelectedItemData.selected = false;\r\n            $prevSelectedItem.removeClass(this._selectedItemClass())\r\n        }\r\n    }\r\n    _nestedItemOnItemClickHandler(e) {\r\n        this._actions.onItemClick(e)\r\n    }\r\n    _nestedItemOnItemRenderedHandler(e) {\r\n        this._actions.onItemRendered(e)\r\n    }\r\n    _attachSubmenuHandlers($rootItem, submenu) {\r\n        var $submenuOverlayContent = submenu.getOverlayContent();\r\n        var submenus = $submenuOverlayContent.find(\".\".concat(DX_SUBMENU_CLASS));\r\n        var submenuMouseLeaveName = addNamespace(hoverEventEnd, this.NAME + \"_submenu\");\r\n        submenu.option({\r\n            onShowing: this._submenuOnShowingHandler.bind(this, $rootItem, submenu),\r\n            onShown: this._submenuOnShownHandler.bind(this, $rootItem, submenu),\r\n            onHiding: this._submenuOnHidingHandler.bind(this, $rootItem, submenu),\r\n            onHidden: this._submenuOnHiddenHandler.bind(this, $rootItem, submenu)\r\n        });\r\n        each(submenus, (index, submenu) => {\r\n            eventsEngine.off(submenu, submenuMouseLeaveName);\r\n            eventsEngine.on(submenu, submenuMouseLeaveName, null, this._submenuMouseLeaveHandler.bind(this, $rootItem))\r\n        })\r\n    }\r\n    _submenuOnShowingHandler($rootItem, submenu) {\r\n        var $border = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS));\r\n        this._actions.onSubmenuShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        });\r\n        $border.show();\r\n        $rootItem.addClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n    }\r\n    _submenuOnShownHandler($rootItem, submenu) {\r\n        this._actions.onSubmenuShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    }\r\n    _submenuOnHidingHandler($rootItem, submenu, eventArgs) {\r\n        var $border = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS));\r\n        var args = eventArgs;\r\n        args.rootItem = getPublicElement($rootItem);\r\n        args.submenu = submenu;\r\n        this._actions.onSubmenuHiding(args);\r\n        eventArgs = args;\r\n        if (!eventArgs.cancel) {\r\n            if (this._visibleSubmenu === submenu) {\r\n                this._visibleSubmenu = null\r\n            }\r\n            $border.hide();\r\n            $rootItem.removeClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n        }\r\n    }\r\n    _submenuOnHiddenHandler($rootItem, submenu) {\r\n        this._actions.onSubmenuHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    }\r\n    _submenuMouseLeaveHandler($rootItem, eventArgs) {\r\n        var target = $(eventArgs.relatedTarget).parents(\".\".concat(DX_CONTEXT_MENU_CLASS))[0];\r\n        var contextMenu = this._getSubmenuByRootElement($rootItem).getOverlayContent()[0];\r\n        if (this.option(\"hideSubmenuOnMouseLeave\") && target !== contextMenu) {\r\n            this._clearTimeouts();\r\n            setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"))\r\n        }\r\n    }\r\n    _hideSubmenuAfterTimeout() {\r\n        if (!this._visibleSubmenu) {\r\n            return\r\n        }\r\n        var isRootItemHovered = $(this._visibleSubmenu.$element().context).hasClass(DX_STATE_HOVER_CLASS);\r\n        var isSubmenuItemHovered = this._visibleSubmenu.getOverlayContent().find(\".\".concat(DX_STATE_HOVER_CLASS)).length;\r\n        var hoveredElementFromSubMenu = this._visibleSubmenu.getOverlayContent().get(0).querySelector(\":hover\");\r\n        if (!hoveredElementFromSubMenu && !isSubmenuItemHovered && !isRootItemHovered) {\r\n            this._visibleSubmenu.hide()\r\n        }\r\n    }\r\n    _getSubmenuByRootElement($rootItem) {\r\n        if (!$rootItem) {\r\n            return false\r\n        }\r\n        var $submenu = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CLASS));\r\n        return $submenu.length && Submenu.getInstance($submenu)\r\n    }\r\n    getSubmenuPosition($rootItem) {\r\n        var isHorizontalMenu = this._isMenuHorizontal();\r\n        var submenuDirection = this.option(\"submenuDirection\").toLowerCase();\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var submenuPosition = {\r\n            collision: \"flip\",\r\n            of: $rootItem\r\n        };\r\n        switch (submenuDirection) {\r\n            case \"leftortop\":\r\n                submenuPosition.at = \"left top\";\r\n                submenuPosition.my = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                break;\r\n            case \"rightorbottom\":\r\n                submenuPosition.at = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                submenuPosition.my = \"left top\";\r\n                break;\r\n            default:\r\n                if (isHorizontalMenu) {\r\n                    submenuPosition.at = rtlEnabled ? \"right bottom\" : \"left bottom\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                } else {\r\n                    submenuPosition.at = rtlEnabled ? \"left top\" : \"right top\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                }\r\n        }\r\n        return submenuPosition\r\n    }\r\n    _renderBorderElement($item) {\r\n        $(\"<div>\").appendTo($item).addClass(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS).hide()\r\n    }\r\n    _itemPointerDownHandler(e) {\r\n        var $target = $(e.target);\r\n        var $closestItem = $target.closest(this._itemElements());\r\n        if ($closestItem.hasClass(\"dx-menu-item-has-submenu\")) {\r\n            this.option(\"focusedElement\", null);\r\n            return\r\n        }\r\n        super._itemPointerDownHandler(e)\r\n    }\r\n    _hoverStartHandler(e) {\r\n        var mouseMoveEventName = addNamespace(pointerEvents.move, this.NAME);\r\n        var $item = this._getItemElementByEventArgs(e);\r\n        var node = this._dataAdapter.getNodeByItem(this._getItemData($item));\r\n        var isSelectionActive = isDefined(e.buttons) && 1 === e.buttons || !isDefined(e.buttons) && 1 === e.which;\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        eventsEngine.off($item, mouseMoveEventName);\r\n        if (!this._hasChildren(node)) {\r\n            this._showSubmenuTimer = setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"));\r\n            return\r\n        }\r\n        if (\"onHover\" === this._getShowFirstSubmenuMode() && !isSelectionActive) {\r\n            var submenu = this._getSubmenuByElement($item);\r\n            this._clearTimeouts();\r\n            if (!submenu.isOverlayVisible()) {\r\n                eventsEngine.on($item, mouseMoveEventName, this._itemMouseMoveHandler.bind(this));\r\n                this._showSubmenuTimer = this._getDelay(\"hide\")\r\n            }\r\n        }\r\n    }\r\n    _hoverEndHandler(eventArg) {\r\n        var $item = this._getItemElementByEventArgs(eventArg);\r\n        var relatedTarget = $(eventArg.relatedTarget);\r\n        super._hoverEndHandler(eventArg);\r\n        this._clearTimeouts();\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        if (relatedTarget.hasClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)) {\r\n            return\r\n        }\r\n        if (this.option(\"hideSubmenuOnMouseLeave\") && !relatedTarget.hasClass(DX_MENU_ITEMS_CONTAINER_CLASS)) {\r\n            this._hideSubmenuTimer = setTimeout(() => {\r\n                this._hideSubmenuAfterTimeout()\r\n            }, this._getDelay(\"hide\"))\r\n        }\r\n    }\r\n    _hideVisibleSubmenu() {\r\n        if (!this._visibleSubmenu) {\r\n            return false\r\n        }\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        return true\r\n    }\r\n    _showSubmenu($itemElement) {\r\n        var submenu = this._getSubmenuByElement($itemElement);\r\n        if (this._visibleSubmenu !== submenu) {\r\n            this._hideVisibleSubmenu()\r\n        }\r\n        if (submenu) {\r\n            this._clearTimeouts();\r\n            submenu.show();\r\n            this.option(\"focusedElement\", submenu.option(\"focusedElement\"))\r\n        }\r\n        this._visibleSubmenu = submenu;\r\n        this._hoveredRootItem = $itemElement\r\n    }\r\n    _hideSubmenu(submenu) {\r\n        submenu && submenu.hide();\r\n        if (this._visibleSubmenu === submenu) {\r\n            this._visibleSubmenu = null\r\n        }\r\n        this._hoveredRootItem = null\r\n    }\r\n    _itemMouseMoveHandler(e) {\r\n        if (e.pointers && e.pointers.length) {\r\n            return\r\n        }\r\n        var $item = $(e.currentTarget);\r\n        if (!isDefined(this._showSubmenuTimer)) {\r\n            return\r\n        }\r\n        this._clearTimeouts();\r\n        this._showSubmenuTimer = setTimeout(() => {\r\n            var submenu = this._getSubmenuByElement($item);\r\n            if (submenu && !submenu.isOverlayVisible()) {\r\n                this._showSubmenu($item)\r\n            }\r\n        }, this._getDelay(\"show\"))\r\n    }\r\n    _clearTimeouts() {\r\n        clearTimeout(this._hideSubmenuTimer);\r\n        clearTimeout(this._showSubmenuTimer)\r\n    }\r\n    _getSubmenuByElement($itemElement, itemData) {\r\n        var submenu = this._getSubmenuByRootElement($itemElement);\r\n        if (submenu) {\r\n            return submenu\r\n        } else {\r\n            itemData = itemData || this._getItemData($itemElement);\r\n            var node = this._dataAdapter.getNodeByItem(itemData);\r\n            return this._hasChildren(node) && this._renderSubmenuItems(node, $itemElement)\r\n        }\r\n    }\r\n    _updateSubmenuVisibilityOnClick(actionArgs) {\r\n        var args = actionArgs.args.length && actionArgs.args[0];\r\n        if (!args || this._disabledGetter(args.itemData)) {\r\n            return\r\n        }\r\n        var $itemElement = $(args.itemElement);\r\n        var currentSubmenu = this._getSubmenuByElement($itemElement, args.itemData);\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (this._visibleSubmenu) {\r\n            if (this._visibleSubmenu === currentSubmenu) {\r\n                if (\"onClick\" === this.option(\"showFirstSubmenuMode\")) {\r\n                    this._hideSubmenu(this._visibleSubmenu)\r\n                }\r\n                return\r\n            } else {\r\n                this._hideSubmenu(this._visibleSubmenu)\r\n            }\r\n        }\r\n        if (!currentSubmenu) {\r\n            return\r\n        }\r\n        if (!currentSubmenu.isOverlayVisible()) {\r\n            this._showSubmenu($itemElement);\r\n            return\r\n        }\r\n    }\r\n    _optionChanged(args) {\r\n        if (ACTIONS.indexOf(args.name) >= 0) {\r\n            this._initActions();\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"orientation\":\r\n            case \"submenuDirection\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showFirstSubmenuMode\":\r\n            case \"hideSubmenuOnMouseLeave\":\r\n                break;\r\n            case \"showSubmenuMode\":\r\n                this._changeSubmenusOption(args.name, args.value);\r\n                break;\r\n            case \"adaptivityEnabled\":\r\n                args.value ? this._initAdaptivity() : this._removeAdaptivity();\r\n                break;\r\n            case \"width\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(args.name, args.value);\r\n                    this._overlay.option(args.name, args.value)\r\n                }\r\n                super._optionChanged(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"animation\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(\"animationEnabled\", !!args.value)\r\n                }\r\n                super._optionChanged(args);\r\n                break;\r\n            default:\r\n                if (this._isAdaptivityEnabled() && (args.name === args.fullName || \"items\" === args.name)) {\r\n                    this._treeView.option(args.fullName, args.value)\r\n                }\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _changeSubmenusOption(name, value) {\r\n        each(this._submenus, (index, submenu) => {\r\n            submenu.option(name, value)\r\n        })\r\n    }\r\n    selectItem(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        super.selectItem(itemElement)\r\n    }\r\n    unselectItem(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        super.selectItem(itemElement)\r\n    }\r\n}\r\nregisterComponent(\"dxMenu\", Menu);\r\nexport default Menu;\r\n","/**\r\n * DevExtreme (esm/ui/menu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Menu from \"./menu/ui.menu\";\r\nexport default Menu;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_row.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport Editor from \"../editor/editor\";\r\nimport Overlay from \"../overlay/ui.overlay\";\r\nimport Menu from \"../menu\";\r\nimport {\r\n    selectView\r\n} from \"../shared/accessibility\";\r\nvar OPERATION_ICONS = {\r\n    \"=\": \"filter-operation-equals\",\r\n    \"<>\": \"filter-operation-not-equals\",\r\n    \"<\": \"filter-operation-less\",\r\n    \"<=\": \"filter-operation-less-equal\",\r\n    \">\": \"filter-operation-greater\",\r\n    \">=\": \"filter-operation-greater-equal\",\r\n    default: \"filter-operation-default\",\r\n    notcontains: \"filter-operation-not-contains\",\r\n    contains: \"filter-operation-contains\",\r\n    startswith: \"filter-operation-starts-with\",\r\n    endswith: \"filter-operation-ends-with\",\r\n    between: \"filter-operation-between\"\r\n};\r\nvar OPERATION_DESCRIPTORS = {\r\n    \"=\": \"equal\",\r\n    \"<>\": \"notEqual\",\r\n    \"<\": \"lessThan\",\r\n    \"<=\": \"lessThanOrEqual\",\r\n    \">\": \"greaterThan\",\r\n    \">=\": \"greaterThanOrEqual\",\r\n    startswith: \"startsWith\",\r\n    contains: \"contains\",\r\n    notcontains: \"notContains\",\r\n    endswith: \"endsWith\",\r\n    between: \"between\"\r\n};\r\nvar FILTERING_TIMEOUT = 700;\r\nvar CORRECT_FILTER_RANGE_OVERLAY_WIDTH = 1;\r\nvar FILTER_ROW_CLASS = \"filter-row\";\r\nvar FILTER_RANGE_OVERLAY_CLASS = \"filter-range-overlay\";\r\nvar FILTER_RANGE_START_CLASS = \"filter-range-start\";\r\nvar FILTER_RANGE_END_CLASS = \"filter-range-end\";\r\nvar MENU_CLASS = \"dx-menu\";\r\nvar EDITOR_WITH_MENU_CLASS = \"dx-editor-with-menu\";\r\nvar EDITOR_CONTAINER_CLASS = \"dx-editor-container\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar FILTER_MENU = \"dx-filter-menu\";\r\nvar APPLY_BUTTON_CLASS = \"dx-apply-button\";\r\nvar HIGHLIGHT_OUTLINE_CLASS = \"dx-highlight-outline\";\r\nvar FOCUSED_CLASS = \"dx-focused\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FILTER_RANGE_CONTENT_CLASS = \"dx-filter-range-content\";\r\nvar FILTER_MODIFIED_CLASS = \"dx-filter-modified\";\r\nvar EDITORS_INPUT_SELECTOR = \"input:not([type='hidden'])\";\r\nvar BETWEEN_OPERATION_DATA_TYPES = [\"date\", \"datetime\", \"number\"];\r\n\r\nfunction isOnClickApplyFilterMode(that) {\r\n    return \"onClick\" === that.option(\"filterRow.applyFilter\")\r\n}\r\nvar ColumnHeadersViewFilterRowExtender = function() {\r\n    var getEditorInstance = function($editorContainer) {\r\n        var $editor = $editorContainer && $editorContainer.children();\r\n        var componentNames = $editor && $editor.data(\"dxComponents\");\r\n        var editor = componentNames && componentNames.length && $editor.data(componentNames[0]);\r\n        if (editor instanceof Editor) {\r\n            return editor\r\n        }\r\n    };\r\n    var getRangeTextByFilterValue = function(that, column) {\r\n        var result = \"\";\r\n        var rangeEnd = \"\";\r\n        var filterValue = getColumnFilterValue(that, column);\r\n        var formatOptions = gridCoreUtils.getFormatOptionsByColumn(column, \"filterRow\");\r\n        if (Array.isArray(filterValue)) {\r\n            result = gridCoreUtils.formatValue(filterValue[0], formatOptions);\r\n            rangeEnd = gridCoreUtils.formatValue(filterValue[1], formatOptions);\r\n            if (\"\" !== rangeEnd) {\r\n                result += \" - \" + rangeEnd\r\n            }\r\n        } else if (isDefined(filterValue)) {\r\n            result = gridCoreUtils.formatValue(filterValue, formatOptions)\r\n        }\r\n        return result\r\n    };\r\n\r\n    function getColumnFilterValue(that, column) {\r\n        if (column) {\r\n            return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedFilterValue ? column.bufferedFilterValue : column.filterValue\r\n        }\r\n    }\r\n    var getColumnSelectedFilterOperation = function(that, column) {\r\n        if (column) {\r\n            return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedSelectedFilterOperation ? column.bufferedSelectedFilterOperation : column.selectedFilterOperation\r\n        }\r\n    };\r\n    var getFilterValue = function(that, columnIndex, $editorContainer) {\r\n        var column = that._columnsController.columnOption(columnIndex);\r\n        var filterValue = getColumnFilterValue(that, column);\r\n        var isFilterRange = $editorContainer.closest(\".\" + that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).length;\r\n        var isRangeStart = $editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS));\r\n        if (filterValue && Array.isArray(filterValue) && \"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n            if (isRangeStart) {\r\n                return filterValue[0]\r\n            } else {\r\n                return filterValue[1]\r\n            }\r\n        }\r\n        return !isFilterRange && function(filterValue, column) {\r\n            if (column && BETWEEN_OPERATION_DATA_TYPES.indexOf(column.dataType) >= 0 && Array.isArray(filterValue)) {\r\n                return false\r\n            }\r\n            return void 0 !== filterValue\r\n        }(filterValue, column) ? filterValue : null\r\n    };\r\n    var updateFilterValue = function(that, options) {\r\n        var value = \"\" === options.value ? null : options.value;\r\n        var $editorContainer = options.container;\r\n        var column = that._columnsController.columnOption(options.column.index);\r\n        var filterValue = getFilterValue(that, column.index, $editorContainer);\r\n        if (!isDefined(filterValue) && !isDefined(value)) {\r\n            return\r\n        }\r\n        that._applyFilterViewController.setHighLight($editorContainer, filterValue !== value);\r\n        var columnOptionName = isOnClickApplyFilterMode(that) ? \"bufferedFilterValue\" : \"filterValue\";\r\n        var normalizedValue = function(that, filterValue, column, $editorContainer) {\r\n            if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                var columnFilterValue = getColumnFilterValue(that, column);\r\n                if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\r\n                    return [filterValue, Array.isArray(columnFilterValue) ? columnFilterValue[1] : void 0]\r\n                } else {\r\n                    return [Array.isArray(columnFilterValue) ? columnFilterValue[0] : columnFilterValue, filterValue]\r\n                }\r\n            }\r\n            return filterValue\r\n        }(that, value, column, $editorContainer);\r\n        var isBetween = \"between\" === getColumnSelectedFilterOperation(that, column);\r\n        var notFireEvent = options.notFireEvent || isBetween && Array.isArray(normalizedValue) && normalizedValue.indexOf(void 0) >= 0;\r\n        that._columnsController.columnOption(column.index, columnOptionName, normalizedValue, notFireEvent)\r\n    };\r\n    return {\r\n        _updateEditorValue: function(column, $editorContainer) {\r\n            var editor = getEditorInstance($editorContainer);\r\n            editor && editor.option(\"value\", getFilterValue(this, column.index, $editorContainer))\r\n        },\r\n        _columnOptionChanged: function(e) {\r\n            var optionNames = e.optionNames;\r\n            var $cell;\r\n            var $editorContainer;\r\n            var $editorRangeElements;\r\n            var $menu;\r\n            if (gridCoreUtils.checkChanges(optionNames, [\"filterValue\", \"bufferedFilterValue\", \"selectedFilterOperation\", \"bufferedSelectedFilterOperation\"]) && void 0 !== e.columnIndex) {\r\n                var visibleIndex = this._columnsController.getVisibleIndex(e.columnIndex);\r\n                var column = this._columnsController.columnOption(e.columnIndex);\r\n                $cell = this._getCellElement(this.element().find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS)).index(), visibleIndex) || $();\r\n                $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n                if (optionNames.filterValue || optionNames.bufferedFilterValue) {\r\n                    this._updateEditorValue(column, $editorContainer);\r\n                    var overlayInstance = $cell.find(\".\" + this.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).data(\"dxOverlay\");\r\n                    if (overlayInstance) {\r\n                        $editorRangeElements = overlayInstance.$content().find(\".\" + EDITOR_CONTAINER_CLASS);\r\n                        this._updateEditorValue(column, $editorRangeElements.first());\r\n                        this._updateEditorValue(column, $editorRangeElements.last())\r\n                    }\r\n                    if (!overlayInstance || !overlayInstance.option(\"visible\")) {\r\n                        this._updateFilterRangeContent($cell, getRangeTextByFilterValue(this, column))\r\n                    }\r\n                }\r\n                if (optionNames.selectedFilterOperation || optionNames.bufferedSelectedFilterOperation) {\r\n                    if (visibleIndex >= 0 && column) {\r\n                        $menu = $cell.find(\".\" + MENU_CLASS);\r\n                        if ($menu.length) {\r\n                            this._updateFilterOperationChooser($menu, column, $editorContainer);\r\n                            if (\"between\" === getColumnSelectedFilterOperation(this, column)) {\r\n                                this._renderFilterRangeContent($cell, column)\r\n                            } else if ($editorContainer.find(\".\" + FILTER_RANGE_CONTENT_CLASS).length) {\r\n                                this._renderEditor($editorContainer, this._getEditorOptions($editorContainer, column));\r\n                                this._hideFilterRange()\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return\r\n            }\r\n            this.callBase(e)\r\n        },\r\n        _renderCore: function() {\r\n            this._filterRangeOverlayInstance = null;\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _resizeCore: function() {\r\n            this.callBase.apply(this, arguments);\r\n            this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.repaint()\r\n        },\r\n        isFilterRowVisible: function() {\r\n            return this._isElementVisible(this.option(\"filterRow\"))\r\n        },\r\n        isVisible: function() {\r\n            return this.callBase() || this.isFilterRowVisible()\r\n        },\r\n        init: function() {\r\n            this.callBase();\r\n            this._applyFilterViewController = this.getController(\"applyFilter\")\r\n        },\r\n        _initFilterRangeOverlay: function($cell, column) {\r\n            var that = this;\r\n            var sharedData = {};\r\n            var $editorContainer = $cell.find(\".dx-editor-container\");\r\n            var $overlay = $(\"<div>\").addClass(that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).appendTo($cell);\r\n            return that._createComponent($overlay, Overlay, {\r\n                height: \"auto\",\r\n                shading: false,\r\n                showTitle: false,\r\n                focusStateEnabled: false,\r\n                closeOnOutsideClick: true,\r\n                copyRootClassesToWrapper: true,\r\n                _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n                animation: false,\r\n                position: {\r\n                    my: \"top\",\r\n                    at: \"top\",\r\n                    of: $editorContainer.length && $editorContainer || $cell,\r\n                    offset: \"0 -1\"\r\n                },\r\n                contentTemplate: function(contentElement) {\r\n                    var editorOptions;\r\n                    var $editor = $(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_START_CLASS)).appendTo(contentElement);\r\n                    column = that._columnsController.columnOption(column.index);\r\n                    editorOptions = that._getEditorOptions($editor, column);\r\n                    editorOptions.sharedData = sharedData;\r\n                    that._renderEditor($editor, editorOptions);\r\n                    eventsEngine.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", (function(e) {\r\n                        var $prevElement = $cell.find(\"[tabindex]\").not(e.target).first();\r\n                        if (\"tab\" === normalizeKeyName(e) && e.shiftKey) {\r\n                            e.preventDefault();\r\n                            that._hideFilterRange();\r\n                            if (!$prevElement.length) {\r\n                                $prevElement = $cell.prev().find(\"[tabindex]\").last()\r\n                            }\r\n                            eventsEngine.trigger($prevElement, \"focus\")\r\n                        }\r\n                    }));\r\n                    $editor = $(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_END_CLASS)).appendTo(contentElement);\r\n                    editorOptions = that._getEditorOptions($editor, column);\r\n                    editorOptions.sharedData = sharedData;\r\n                    that._renderEditor($editor, editorOptions);\r\n                    eventsEngine.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", (function(e) {\r\n                        if (\"tab\" === normalizeKeyName(e) && !e.shiftKey) {\r\n                            e.preventDefault();\r\n                            that._hideFilterRange();\r\n                            eventsEngine.trigger($cell.next().find(\"[tabindex]\").first(), \"focus\")\r\n                        }\r\n                    }));\r\n                    return $(contentElement).addClass(that.getWidgetContainerClass())\r\n                },\r\n                onShown: function(e) {\r\n                    var $editor = e.component.$content().find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n                    eventsEngine.trigger($editor.find(EDITORS_INPUT_SELECTOR), \"focus\")\r\n                },\r\n                onHidden: function() {\r\n                    column = that._columnsController.columnOption(column.index);\r\n                    $cell.find(\".\" + MENU_CLASS).parent().addClass(EDITOR_WITH_MENU_CLASS);\r\n                    if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                        that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column));\r\n                        that.component.updateDimensions()\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        _updateFilterRangeOverlay: function(options) {\r\n            var overlayInstance = this._filterRangeOverlayInstance;\r\n            overlayInstance && overlayInstance.option(options)\r\n        },\r\n        _showFilterRange: function($cell, column) {\r\n            var $overlay = $cell.children(\".\" + this.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS));\r\n            var overlayInstance = $overlay.length && $overlay.data(\"dxOverlay\");\r\n            if (!overlayInstance && column) {\r\n                overlayInstance = this._initFilterRangeOverlay($cell, column)\r\n            }\r\n            if (!overlayInstance.option(\"visible\")) {\r\n                this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.hide();\r\n                this._filterRangeOverlayInstance = overlayInstance;\r\n                this._updateFilterRangeOverlay({\r\n                    width: getOuterWidth($cell, true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\r\n                });\r\n                this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.show()\r\n            }\r\n        },\r\n        _hideFilterRange: function() {\r\n            var overlayInstance = this._filterRangeOverlayInstance;\r\n            overlayInstance && overlayInstance.hide()\r\n        },\r\n        getFilterRangeOverlayInstance: function() {\r\n            return this._filterRangeOverlayInstance\r\n        },\r\n        _createRow: function(row) {\r\n            var $row = this.callBase(row);\r\n            if (\"filter\" === row.rowType) {\r\n                $row.addClass(this.addWidgetPrefix(FILTER_ROW_CLASS));\r\n                if (!this.option(\"useLegacyKeyboardNavigation\")) {\r\n                    eventsEngine.on($row, \"keydown\", event => selectView(\"filterRow\", this, event))\r\n                }\r\n            }\r\n            return $row\r\n        },\r\n        _getRows: function() {\r\n            var result = this.callBase();\r\n            if (this.isFilterRowVisible()) {\r\n                result.push({\r\n                    rowType: \"filter\"\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        _renderFilterCell: function(cell, options) {\r\n            var column = options.column;\r\n            var $cell = $(cell);\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                this.setAria(\"describedby\", column.headerId, $cell)\r\n            }\r\n            this.setAria(\"label\", messageLocalization.format(\"dxDataGrid-ariaFilterCell\"), $cell);\r\n            $cell.addClass(EDITOR_CELL_CLASS);\r\n            var $container = $(\"<div>\").appendTo($cell);\r\n            var $editorContainer = $(\"<div>\").addClass(EDITOR_CONTAINER_CLASS).appendTo($container);\r\n            if (\"between\" === getColumnSelectedFilterOperation(this, column)) {\r\n                this._renderFilterRangeContent($cell, column)\r\n            } else {\r\n                var editorOptions = this._getEditorOptions($editorContainer, column);\r\n                this._renderEditor($editorContainer, editorOptions)\r\n            }\r\n            var alignment = column.alignment;\r\n            if (alignment && \"center\" !== alignment) {\r\n                $cell.find(EDITORS_INPUT_SELECTOR).first().css(\"textAlign\", column.alignment)\r\n            }\r\n            if (column.filterOperations && column.filterOperations.length) {\r\n                this._renderFilterOperationChooser($container, column, $editorContainer)\r\n            }\r\n        },\r\n        _renderCellContent: function($cell, options) {\r\n            var that = this;\r\n            var column = options.column;\r\n            if (\"filter\" === options.rowType) {\r\n                if (column.command) {\r\n                    $cell.html(\"&nbsp;\")\r\n                } else if (column.allowFiltering) {\r\n                    that.renderTemplate($cell, that._renderFilterCell.bind(that), options).done(() => {\r\n                        that._updateCell($cell, options)\r\n                    });\r\n                    return\r\n                }\r\n            }\r\n            that.callBase($cell, options)\r\n        },\r\n        _getEditorOptions: function($editorContainer, column) {\r\n            var that = this;\r\n            var accessibilityOptions = {\r\n                editorOptions: {\r\n                    inputAttr: that._getFilterInputAccessibilityAttributes(column)\r\n                }\r\n            };\r\n            var result = extend(accessibilityOptions, column, {\r\n                value: getFilterValue(that, column.index, $editorContainer),\r\n                parentType: \"filterRow\",\r\n                showAllText: that.option(\"filterRow.showAllText\"),\r\n                updateValueTimeout: \"onClick\" === that.option(\"filterRow.applyFilter\") ? 0 : FILTERING_TIMEOUT,\r\n                width: null,\r\n                setValue: function(value, notFireEvent) {\r\n                    updateFilterValue(that, {\r\n                        column: column,\r\n                        value: value,\r\n                        container: $editorContainer,\r\n                        notFireEvent: notFireEvent\r\n                    })\r\n                }\r\n            });\r\n            if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\r\n                    result.placeholder = that.option(\"filterRow.betweenStartText\")\r\n                } else {\r\n                    result.placeholder = that.option(\"filterRow.betweenEndText\")\r\n                }\r\n            }\r\n            return result\r\n        },\r\n        _getFilterInputAccessibilityAttributes: function(column) {\r\n            var columnAriaLabel = messageLocalization.format(\"dxDataGrid-ariaFilterCell\");\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                return {\r\n                    \"aria-label\": columnAriaLabel,\r\n                    \"aria-describedby\": column.headerId\r\n                }\r\n            }\r\n            return {\r\n                \"aria-label\": columnAriaLabel\r\n            }\r\n        },\r\n        _renderEditor: function($editorContainer, options) {\r\n            $editorContainer.empty();\r\n            return this.getController(\"editorFactory\").createEditor($(\"<div>\").appendTo($editorContainer), options)\r\n        },\r\n        _renderFilterRangeContent: function($cell, column) {\r\n            var that = this;\r\n            var $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n            $editorContainer.empty();\r\n            var $filterRangeContent = $(\"<div>\").addClass(FILTER_RANGE_CONTENT_CLASS).attr(\"tabindex\", this.option(\"tabIndex\"));\r\n            eventsEngine.on($filterRangeContent, \"focusin\", (function() {\r\n                that._showFilterRange($cell, column)\r\n            }));\r\n            $filterRangeContent.appendTo($editorContainer);\r\n            that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column))\r\n        },\r\n        _updateFilterRangeContent: function($cell, value) {\r\n            var $filterRangeContent = $cell.find(\".\" + FILTER_RANGE_CONTENT_CLASS);\r\n            if ($filterRangeContent.length) {\r\n                if (\"\" === value) {\r\n                    $filterRangeContent.html(\"&nbsp;\")\r\n                } else {\r\n                    $filterRangeContent.text(value)\r\n                }\r\n            }\r\n        },\r\n        _updateFilterOperationChooser: function($menu, column, $editorContainer) {\r\n            var that = this;\r\n            var isCellWasFocused;\r\n            var restoreFocus = function() {\r\n                var menu = Menu.getInstance($menu);\r\n                menu && menu.option(\"focusedElement\", null);\r\n                isCellWasFocused && that._focusEditor($editorContainer)\r\n            };\r\n            that._createComponent($menu, Menu, {\r\n                integrationOptions: {},\r\n                activeStateEnabled: false,\r\n                selectionMode: \"single\",\r\n                cssClass: that.getWidgetContainerClass() + \" \" + CELL_FOCUS_DISABLED_CLASS + \" \" + FILTER_MENU,\r\n                showFirstSubmenuMode: \"onHover\",\r\n                hideSubmenuOnMouseLeave: true,\r\n                items: [{\r\n                    disabled: column.filterOperations && column.filterOperations.length ? false : true,\r\n                    icon: OPERATION_ICONS[getColumnSelectedFilterOperation(that, column) || \"default\"],\r\n                    selectable: false,\r\n                    items: that._getFilterOperationMenuItems(column)\r\n                }],\r\n                onItemClick: function(properties) {\r\n                    var selectedFilterOperation = properties.itemData.name;\r\n                    var columnSelectedFilterOperation = getColumnSelectedFilterOperation(that, column);\r\n                    var notFocusEditor = false;\r\n                    var isOnClickMode = isOnClickApplyFilterMode(that);\r\n                    var options = {};\r\n                    if (properties.itemData.items || selectedFilterOperation && selectedFilterOperation === columnSelectedFilterOperation) {\r\n                        return\r\n                    }\r\n                    if (selectedFilterOperation) {\r\n                        options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = selectedFilterOperation;\r\n                        if (\"between\" === selectedFilterOperation || \"between\" === columnSelectedFilterOperation) {\r\n                            notFocusEditor = \"between\" === selectedFilterOperation;\r\n                            options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null\r\n                        }\r\n                    } else {\r\n                        options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null;\r\n                        options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = column.defaultSelectedFilterOperation || null\r\n                    }\r\n                    that._columnsController.columnOption(column.index, options);\r\n                    that._applyFilterViewController.setHighLight($editorContainer, true);\r\n                    if (!selectedFilterOperation) {\r\n                        var editor = getEditorInstance($editorContainer);\r\n                        if (editor && \"dxDateBox\" === editor.NAME && !editor.option(\"isValid\")) {\r\n                            editor.reset();\r\n                            editor.option(\"isValid\", true)\r\n                        }\r\n                    }\r\n                    if (!notFocusEditor) {\r\n                        that._focusEditor($editorContainer)\r\n                    } else {\r\n                        that._showFilterRange($editorContainer.closest(\".\" + EDITOR_CELL_CLASS), column)\r\n                    }\r\n                },\r\n                onSubmenuShown: function() {\r\n                    isCellWasFocused = that._isEditorFocused($editorContainer);\r\n                    that.getController(\"editorFactory\").loseFocus()\r\n                },\r\n                onSubmenuHiding: function() {\r\n                    eventsEngine.trigger($menu, \"blur\");\r\n                    restoreFocus()\r\n                },\r\n                onContentReady: function(e) {\r\n                    eventsEngine.on($menu, \"blur\", () => {\r\n                        var menu = e.component;\r\n                        menu._hideSubmenu(menu._visibleSubmenu);\r\n                        restoreFocus()\r\n                    })\r\n                },\r\n                rtlEnabled: that.option(\"rtlEnabled\")\r\n            })\r\n        },\r\n        _isEditorFocused: function($container) {\r\n            return $container.hasClass(FOCUSED_CLASS) || $container.parents(\".\" + FOCUSED_CLASS).length\r\n        },\r\n        _focusEditor: function($container) {\r\n            this.getController(\"editorFactory\").focus($container);\r\n            eventsEngine.trigger($container.find(EDITORS_INPUT_SELECTOR), \"focus\")\r\n        },\r\n        _renderFilterOperationChooser: function($container, column, $editorContainer) {\r\n            var $menu;\r\n            if (this.option(\"filterRow.showOperationChooser\")) {\r\n                $container.addClass(EDITOR_WITH_MENU_CLASS);\r\n                $menu = $(\"<div>\").prependTo($container);\r\n                this._updateFilterOperationChooser($menu, column, $editorContainer)\r\n            }\r\n        },\r\n        _getFilterOperationMenuItems: function(column) {\r\n            var that = this;\r\n            var result = [{}];\r\n            var filterRowOptions = that.option(\"filterRow\");\r\n            var operationDescriptions = filterRowOptions && filterRowOptions.operationDescriptions || {};\r\n            if (column.filterOperations && column.filterOperations.length) {\r\n                var availableFilterOperations = column.filterOperations.filter((function(value) {\r\n                    return isDefined(OPERATION_DESCRIPTORS[value])\r\n                }));\r\n                result = map(availableFilterOperations, (function(value) {\r\n                    var descriptionName = OPERATION_DESCRIPTORS[value];\r\n                    return {\r\n                        name: value,\r\n                        selected: (getColumnSelectedFilterOperation(that, column) || column.defaultFilterOperation) === value,\r\n                        text: operationDescriptions[descriptionName],\r\n                        icon: OPERATION_ICONS[value]\r\n                    }\r\n                }));\r\n                result.push({\r\n                    name: null,\r\n                    text: filterRowOptions && filterRowOptions.resetOperationText,\r\n                    icon: OPERATION_ICONS.default\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        optionChanged: function(args) {\r\n            switch (args.name) {\r\n                case \"filterRow\":\r\n                case \"showColumnLines\":\r\n                    this._invalidate(true, true);\r\n                    args.handled = true;\r\n                    break;\r\n                default:\r\n                    this.callBase(args)\r\n            }\r\n        }\r\n    }\r\n}();\r\nvar DataControllerFilterRowExtender = {\r\n    skipCalculateColumnFilters: function() {\r\n        return false\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        if (this.skipCalculateColumnFilters()) {\r\n            return this.callBase()\r\n        }\r\n        var filters = [this.callBase()];\r\n        var columns = this._columnsController.getVisibleColumns(null, true);\r\n        each(columns, (function() {\r\n            if (this.allowFiltering && this.calculateFilterExpression && isDefined(this.filterValue)) {\r\n                var filter = this.createFilterExpression(this.filterValue, this.selectedFilterOperation || this.defaultFilterOperation, \"filterRow\");\r\n                filters.push(filter)\r\n            }\r\n        }));\r\n        return gridCoreUtils.combineFilters(filters)\r\n    }\r\n};\r\nvar ApplyFilterViewController = modules.ViewController.inherit({\r\n    _getHeaderPanel: function() {\r\n        if (!this._headerPanel) {\r\n            this._headerPanel = this.getView(\"headerPanel\")\r\n        }\r\n        return this._headerPanel\r\n    },\r\n    setHighLight: function($element, value) {\r\n        if (isOnClickApplyFilterMode(this)) {\r\n            $element && $element.toggleClass(HIGHLIGHT_OUTLINE_CLASS, value) && $element.closest(\".\" + EDITOR_CELL_CLASS).toggleClass(FILTER_MODIFIED_CLASS, value);\r\n            this._getHeaderPanel().enableApplyButton(value)\r\n        }\r\n    },\r\n    applyFilter: function() {\r\n        var columnsController = this.getController(\"columns\");\r\n        var columns = columnsController.getColumns();\r\n        columnsController.beginUpdate();\r\n        for (var i = 0; i < columns.length; i++) {\r\n            var column = columns[i];\r\n            if (void 0 !== column.bufferedFilterValue) {\r\n                columnsController.columnOption(i, \"filterValue\", column.bufferedFilterValue);\r\n                column.bufferedFilterValue = void 0\r\n            }\r\n            if (void 0 !== column.bufferedSelectedFilterOperation) {\r\n                columnsController.columnOption(i, \"selectedFilterOperation\", column.bufferedSelectedFilterOperation);\r\n                column.bufferedSelectedFilterOperation = void 0\r\n            }\r\n        }\r\n        columnsController.endUpdate();\r\n        this.removeHighLights()\r\n    },\r\n    removeHighLights: function() {\r\n        if (isOnClickApplyFilterMode(this)) {\r\n            var columnHeadersViewElement = this.getView(\"columnHeadersView\").element();\r\n            columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + HIGHLIGHT_OUTLINE_CLASS).removeClass(HIGHLIGHT_OUTLINE_CLASS);\r\n            columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + FILTER_MODIFIED_CLASS).removeClass(FILTER_MODIFIED_CLASS);\r\n            this._getHeaderPanel().enableApplyButton(false)\r\n        }\r\n    }\r\n});\r\nexport var filterRowModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterRow: {\r\n                visible: false,\r\n                showOperationChooser: true,\r\n                showAllText: messageLocalization.format(\"dxDataGrid-filterRowShowAllText\"),\r\n                resetOperationText: messageLocalization.format(\"dxDataGrid-filterRowResetOperationText\"),\r\n                applyFilter: \"auto\",\r\n                applyFilterText: messageLocalization.format(\"dxDataGrid-applyFilterText\"),\r\n                operationDescriptions: {\r\n                    equal: messageLocalization.format(\"dxDataGrid-filterRowOperationEquals\"),\r\n                    notEqual: messageLocalization.format(\"dxDataGrid-filterRowOperationNotEquals\"),\r\n                    lessThan: messageLocalization.format(\"dxDataGrid-filterRowOperationLess\"),\r\n                    lessThanOrEqual: messageLocalization.format(\"dxDataGrid-filterRowOperationLessOrEquals\"),\r\n                    greaterThan: messageLocalization.format(\"dxDataGrid-filterRowOperationGreater\"),\r\n                    greaterThanOrEqual: messageLocalization.format(\"dxDataGrid-filterRowOperationGreaterOrEquals\"),\r\n                    startsWith: messageLocalization.format(\"dxDataGrid-filterRowOperationStartsWith\"),\r\n                    contains: messageLocalization.format(\"dxDataGrid-filterRowOperationContains\"),\r\n                    notContains: messageLocalization.format(\"dxDataGrid-filterRowOperationNotContains\"),\r\n                    endsWith: messageLocalization.format(\"dxDataGrid-filterRowOperationEndsWith\"),\r\n                    between: messageLocalization.format(\"dxDataGrid-filterRowOperationBetween\"),\r\n                    isBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsBlank\"),\r\n                    isNotBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\r\n                },\r\n                betweenStartText: messageLocalization.format(\"dxDataGrid-filterRowOperationBetweenStartText\"),\r\n                betweenEndText: messageLocalization.format(\"dxDataGrid-filterRowOperationBetweenEndText\")\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        applyFilter: ApplyFilterViewController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterRowExtender,\r\n            columnsResizer: {\r\n                _startResizing: function() {\r\n                    var that = this;\r\n                    that.callBase.apply(that, arguments);\r\n                    if (that.isResizing()) {\r\n                        var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\r\n                        if (overlayInstance) {\r\n                            var cellIndex = overlayInstance.$element().closest(\"td\").index();\r\n                            if (cellIndex === that._targetPoint.columnIndex || cellIndex === that._targetPoint.columnIndex + 1) {\r\n                                overlayInstance.$content().hide()\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _endResizing: function() {\r\n                    var that = this;\r\n                    var $cell;\r\n                    if (that.isResizing()) {\r\n                        var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\r\n                        if (overlayInstance) {\r\n                            $cell = overlayInstance.$element().closest(\"td\");\r\n                            that._columnHeadersView._updateFilterRangeOverlay({\r\n                                width: getOuterWidth($cell, true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\r\n                            });\r\n                            overlayInstance.$content().show()\r\n                        }\r\n                    }\r\n                    that.callBase.apply(that, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFilterRowExtender,\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    var filterItem = this._prepareFilterItem(items);\r\n                    return filterItem.concat(items)\r\n                },\r\n                _prepareFilterItem: function() {\r\n                    var that = this;\r\n                    var filterItem = [];\r\n                    if (that._isShowApplyFilterButton()) {\r\n                        var hintText = that.option(\"filterRow.applyFilterText\");\r\n                        var columns = that._columnsController.getColumns();\r\n                        var disabled = !columns.filter((function(column) {\r\n                            return void 0 !== column.bufferedFilterValue\r\n                        })).length;\r\n                        var toolbarItem = {\r\n                            widget: \"dxButton\",\r\n                            options: {\r\n                                icon: \"apply-filter\",\r\n                                disabled: disabled,\r\n                                onClick: function() {\r\n                                    that._applyFilterViewController.applyFilter()\r\n                                },\r\n                                hint: hintText,\r\n                                text: hintText,\r\n                                onInitialized: function(e) {\r\n                                    $(e.element).addClass(that._getToolbarButtonClass(APPLY_BUTTON_CLASS))\r\n                                }\r\n                            },\r\n                            showText: \"inMenu\",\r\n                            name: \"applyFilterButton\",\r\n                            location: \"after\",\r\n                            locateInMenu: \"auto\",\r\n                            sortIndex: 10\r\n                        };\r\n                        filterItem.push(toolbarItem)\r\n                    }\r\n                    return filterItem\r\n                },\r\n                _isShowApplyFilterButton: function() {\r\n                    var filterRowOptions = this.option(\"filterRow\");\r\n                    return filterRowOptions && filterRowOptions.visible && \"onClick\" === filterRowOptions.applyFilter\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._dataController = this.getController(\"data\");\r\n                    this._applyFilterViewController = this.getController(\"applyFilter\")\r\n                },\r\n                enableApplyButton: function(value) {\r\n                    this.setToolbarItemDisabled(\"applyFilterButton\", !value)\r\n                },\r\n                isVisible: function() {\r\n                    return this.callBase() || this._isShowApplyFilterButton()\r\n                },\r\n                optionChanged: function(args) {\r\n                    if (\"filterRow\" === args.name) {\r\n                        this._invalidate();\r\n                        args.handled = true\r\n                    } else {\r\n                        this.callBase(args)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.filter_row.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    filterRowModule\r\n} from \"../grid_core/ui.grid_core.filter_row\";\r\ncore.registerModule(\"filterRow\", filterRowModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.header_filter_core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    isDefined,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport Popup from \"../popup\";\r\nimport TreeView from \"../tree_view\";\r\nimport List from \"../list_light\";\r\nimport \"../list/modules/search\";\r\nimport \"../list/modules/selection\";\r\nvar HEADER_FILTER_CLASS = \"dx-header-filter\";\r\nvar HEADER_FILTER_MENU_CLASS = \"dx-header-filter-menu\";\r\nvar DEFAULT_SEARCH_EXPRESSION = \"text\";\r\n\r\nfunction resetChildrenItemSelection(items) {\r\n    items = items || [];\r\n    for (var i = 0; i < items.length; i++) {\r\n        items[i].selected = false;\r\n        resetChildrenItemSelection(items[i].items)\r\n    }\r\n}\r\n\r\nfunction updateSelectAllState(e, filterValues) {\r\n    if (e.component.option(\"searchValue\")) {\r\n        return\r\n    }\r\n    var selectAllCheckBox = $(e.element).find(\".dx-list-select-all-checkbox\").data(\"dxCheckBox\");\r\n    if (selectAllCheckBox && filterValues && filterValues.length) {\r\n        selectAllCheckBox.option(\"value\", void 0)\r\n    }\r\n}\r\n\r\nfunction isSearchEnabled(that, options) {\r\n    var headerFilter = options.headerFilter;\r\n    if (headerFilter && isDefined(headerFilter.allowSearch)) {\r\n        return headerFilter.allowSearch\r\n    }\r\n    return that.option(\"headerFilter.allowSearch\")\r\n}\r\nexport function updateHeaderFilterItemSelectionState(item, filterValuesMatch, isExcludeFilter) {\r\n    if (filterValuesMatch ^ isExcludeFilter) {\r\n        item.selected = true;\r\n        if (isExcludeFilter && item.items) {\r\n            for (var j = 0; j < item.items.length; j++) {\r\n                if (!item.items[j].selected) {\r\n                    item.selected = void 0;\r\n                    break\r\n                }\r\n            }\r\n        }\r\n    } else if (isExcludeFilter || item.selected) {\r\n        item.selected = false;\r\n        resetChildrenItemSelection(item.items)\r\n    }\r\n}\r\nexport var HeaderFilterView = modules.View.inherit({\r\n    getPopupContainer: function() {\r\n        return this._popupContainer\r\n    },\r\n    getListContainer: function() {\r\n        return this._listContainer\r\n    },\r\n    applyHeaderFilter: function(options) {\r\n        var list = this.getListContainer();\r\n        var searchValue = list.option(\"searchValue\");\r\n        var isSelectAll = !searchValue && !options.isFilterBuilder && list.$element().find(\".dx-checkbox\").eq(0).hasClass(\"dx-checkbox-checked\");\r\n        var filterValues = [];\r\n        if (!isSelectAll) {\r\n            if (\"tree\" === options.type) {\r\n                if (options.filterType) {\r\n                    options.filterType = \"include\"\r\n                }! function fillSelectedItemKeys(filterValues, items, isExclude) {\r\n                    each(items, (function(_, item) {\r\n                        if (void 0 !== item.selected && !!item.selected ^ isExclude) {\r\n                            var node = list._getNode(item);\r\n                            var hasChildren = list._hasChildren(node);\r\n                            var hasChildrenWithSelection = hasChildren && item.items && item.items.some(item => item.selected);\r\n                            if (!searchValue || !hasChildrenWithSelection) {\r\n                                filterValues.push(item.value);\r\n                                return\r\n                            }\r\n                        }\r\n                        if (item.items && item.items.length) {\r\n                            fillSelectedItemKeys(filterValues, item.items, isExclude)\r\n                        }\r\n                    }))\r\n                }(filterValues, list.option(\"items\"), false);\r\n                options.filterValues = filterValues\r\n            }\r\n        } else {\r\n            if (\"tree\" === options.type) {\r\n                options.filterType = \"exclude\"\r\n            }\r\n            if (Array.isArray(options.filterValues)) {\r\n                options.filterValues = []\r\n            }\r\n        }\r\n        if (options.filterValues && !options.filterValues.length) {\r\n            options.filterValues = null\r\n        }\r\n        options.apply();\r\n        this.hideHeaderFilterMenu()\r\n    },\r\n    showHeaderFilterMenu: function($columnElement, options) {\r\n        if (options) {\r\n            this._initializePopupContainer(options);\r\n            var popupContainer = this.getPopupContainer();\r\n            this.hideHeaderFilterMenu();\r\n            this.updatePopup($columnElement, options);\r\n            popupContainer.show()\r\n        }\r\n    },\r\n    hideHeaderFilterMenu: function() {\r\n        var headerFilterMenu = this.getPopupContainer();\r\n        headerFilterMenu && headerFilterMenu.hide()\r\n    },\r\n    updatePopup: function($element, options) {\r\n        var showColumnLines = this.option(\"showColumnLines\");\r\n        var alignment = \"right\" === options.alignment ^ !showColumnLines ? \"left\" : \"right\";\r\n        if (this._popupContainer) {\r\n            this._cleanPopupContent();\r\n            this._popupContainer.option(\"position\", {\r\n                my: alignment + \" top\",\r\n                at: alignment + \" bottom\",\r\n                of: $element,\r\n                collision: \"flip fit\"\r\n            })\r\n        }\r\n    },\r\n    _getSearchExpr: function(options) {\r\n        var lookup = options.lookup;\r\n        var useDefaultSearchExpr = options.useDefaultSearchExpr;\r\n        var headerFilterDataSource = options.headerFilter && options.headerFilter.dataSource;\r\n        if (useDefaultSearchExpr || isDefined(headerFilterDataSource) && !isFunction(headerFilterDataSource)) {\r\n            return DEFAULT_SEARCH_EXPRESSION\r\n        }\r\n        if (lookup) {\r\n            return lookup.displayExpr || \"this\"\r\n        }\r\n        if (options.dataSource) {\r\n            var group = options.dataSource.group;\r\n            if (Array.isArray(group) && group.length > 0) {\r\n                return group[0].selector\r\n            } else if (isFunction(group) && !options.remoteFiltering) {\r\n                return group\r\n            }\r\n        }\r\n        return options.dataField || options.selector\r\n    },\r\n    _cleanPopupContent: function() {\r\n        this._popupContainer && this._popupContainer.$content().empty()\r\n    },\r\n    _initializePopupContainer: function(options) {\r\n        var that = this;\r\n        var $element = that.element();\r\n        var headerFilterOptions = that.option(\"headerFilter\");\r\n        var width = options.headerFilter && options.headerFilter.width || headerFilterOptions && headerFilterOptions.width;\r\n        var height = options.headerFilter && options.headerFilter.height || headerFilterOptions && headerFilterOptions.height;\r\n        var dxPopupOptions = {\r\n            width: width,\r\n            height: height,\r\n            visible: false,\r\n            shading: false,\r\n            showTitle: false,\r\n            showCloseButton: false,\r\n            hideOnParentScroll: false,\r\n            dragEnabled: false,\r\n            closeOnOutsideClick: true,\r\n            focusStateEnabled: false,\r\n            copyRootClassesToWrapper: true,\r\n            _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n            toolbarItems: [{\r\n                toolbar: \"bottom\",\r\n                location: \"after\",\r\n                widget: \"dxButton\",\r\n                options: {\r\n                    text: headerFilterOptions.texts.ok,\r\n                    onClick: function() {\r\n                        that.applyHeaderFilter(options)\r\n                    }\r\n                }\r\n            }, {\r\n                toolbar: \"bottom\",\r\n                location: \"after\",\r\n                widget: \"dxButton\",\r\n                options: {\r\n                    text: headerFilterOptions.texts.cancel,\r\n                    onClick: function() {\r\n                        that.hideHeaderFilterMenu()\r\n                    }\r\n                }\r\n            }],\r\n            resizeEnabled: true,\r\n            onShowing: function(e) {\r\n                e.component.$content().parent().addClass(\"dx-dropdowneditor-overlay\");\r\n                that._initializeListContainer(options);\r\n                options.onShowing && options.onShowing(e)\r\n            },\r\n            onShown: function() {\r\n                that.getListContainer().focus()\r\n            },\r\n            onHidden: options.onHidden,\r\n            onInitialized: function(e) {\r\n                var component = e.component;\r\n                component.option(\"animation\", component._getDefaultOptions().animation)\r\n            }\r\n        };\r\n        if (!isDefined(that._popupContainer)) {\r\n            that._popupContainer = that._createComponent($element, Popup, dxPopupOptions)\r\n        } else {\r\n            that._popupContainer.option(dxPopupOptions)\r\n        }\r\n    },\r\n    _initializeListContainer: function(options) {\r\n        var that = this;\r\n        var $content = that._popupContainer.$content();\r\n        var widgetOptions = {\r\n            searchEnabled: isSearchEnabled(that, options),\r\n            searchTimeout: that.option(\"headerFilter.searchTimeout\"),\r\n            searchMode: options.headerFilter && options.headerFilter.searchMode || \"\",\r\n            dataSource: options.dataSource,\r\n            onContentReady: function() {\r\n                that.renderCompleted.fire()\r\n            },\r\n            itemTemplate: function(data, _, element) {\r\n                var $element = $(element);\r\n                if (options.encodeHtml) {\r\n                    return $element.text(data.text)\r\n                }\r\n                return $element.html(data.text)\r\n            }\r\n        };\r\n\r\n        function onOptionChanged(e) {\r\n            if (\"searchValue\" === e.fullName && !options.isFilterBuilder && false !== that.option(\"headerFilter.hideSelectAllOnSearch\")) {\r\n                if (\"tree\" === options.type) {\r\n                    e.component.option(\"showCheckBoxesMode\", e.value ? \"normal\" : \"selectAll\")\r\n                } else {\r\n                    e.component.option(\"selectionMode\", e.value ? \"multiple\" : \"all\")\r\n                }\r\n            }\r\n        }\r\n        if (\"tree\" === options.type) {\r\n            that._listContainer = that._createComponent($(\"<div>\").appendTo($content), TreeView, extend(widgetOptions, {\r\n                showCheckBoxesMode: options.isFilterBuilder ? \"normal\" : \"selectAll\",\r\n                onOptionChanged: onOptionChanged,\r\n                keyExpr: \"id\"\r\n            }))\r\n        } else {\r\n            that._listContainer = that._createComponent($(\"<div>\").appendTo($content), List, extend(widgetOptions, {\r\n                searchExpr: that._getSearchExpr(options),\r\n                pageLoadMode: \"scrollBottom\",\r\n                showSelectionControls: true,\r\n                selectionMode: options.isFilterBuilder ? \"multiple\" : \"all\",\r\n                onOptionChanged: onOptionChanged,\r\n                onSelectionChanged: function(e) {\r\n                    var items = e.component.option(\"items\");\r\n                    var selectedItems = e.component.option(\"selectedItems\");\r\n                    if (!e.component._selectedItemsUpdating && !e.component.option(\"searchValue\") && !options.isFilterBuilder) {\r\n                        var filterValues = options.filterValues || [];\r\n                        var isExclude = \"exclude\" === options.filterType;\r\n                        if (0 === selectedItems.length && items.length && (filterValues.length <= 1 || isExclude && filterValues.length === items.length - 1)) {\r\n                            options.filterType = \"include\";\r\n                            options.filterValues = []\r\n                        } else if (selectedItems.length === items.length) {\r\n                            options.filterType = \"exclude\";\r\n                            options.filterValues = []\r\n                        }\r\n                    }\r\n                    each(items, (function(index, item) {\r\n                        var selected = gridCoreUtils.getIndexByKey(item, selectedItems, null) >= 0;\r\n                        var oldSelected = !!item.selected;\r\n                        if (oldSelected !== selected) {\r\n                            item.selected = selected;\r\n                            options.filterValues = options.filterValues || [];\r\n                            var filterValueIndex = gridCoreUtils.getIndexByKey(item.value, options.filterValues, null);\r\n                            if (filterValueIndex >= 0) {\r\n                                options.filterValues.splice(filterValueIndex, 1)\r\n                            }\r\n                            if (selected ^ \"exclude\" === options.filterType) {\r\n                                options.filterValues.push(item.value)\r\n                            }\r\n                        }\r\n                    }));\r\n                    updateSelectAllState(e, options.filterValues)\r\n                },\r\n                onContentReady: function(e) {\r\n                    var component = e.component;\r\n                    var items = component.option(\"items\");\r\n                    var selectedItems = [];\r\n                    each(items, (function() {\r\n                        if (this.selected) {\r\n                            selectedItems.push(this)\r\n                        }\r\n                    }));\r\n                    component._selectedItemsUpdating = true;\r\n                    component.option(\"selectedItems\", selectedItems);\r\n                    component._selectedItemsUpdating = false;\r\n                    updateSelectAllState(e, options.filterValues)\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    _renderCore: function() {\r\n        this.element().addClass(HEADER_FILTER_MENU_CLASS)\r\n    }\r\n});\r\nexport var allowHeaderFiltering = function(column) {\r\n    return isDefined(column.allowHeaderFiltering) ? column.allowHeaderFiltering : column.allowFiltering\r\n};\r\nexport var headerFilterMixin = {\r\n    _applyColumnState: function(options) {\r\n        var $headerFilterIndicator;\r\n        var rootElement = options.rootElement;\r\n        var column = options.column;\r\n        if (\"headerFilter\" === options.name) {\r\n            rootElement.find(\".\" + HEADER_FILTER_CLASS).remove();\r\n            if (allowHeaderFiltering(column)) {\r\n                $headerFilterIndicator = this.callBase(options).toggleClass(\"dx-header-filter-empty\", this._isHeaderFilterEmpty(column));\r\n                if (!this.option(\"useLegacyKeyboardNavigation\")) {\r\n                    $headerFilterIndicator.attr(\"tabindex\", this.option(\"tabindex\") || 0)\r\n                }\r\n            }\r\n            return $headerFilterIndicator\r\n        }\r\n        return this.callBase(options)\r\n    },\r\n    _isHeaderFilterEmpty: function(column) {\r\n        return !column.filterValues || !column.filterValues.length\r\n    },\r\n    _getIndicatorClassName: function(name) {\r\n        if (\"headerFilter\" === name) {\r\n            return HEADER_FILTER_CLASS\r\n        }\r\n        return this.callBase(name)\r\n    },\r\n    _renderIndicator: function(options) {\r\n        var $container = options.container;\r\n        var $indicator = options.indicator;\r\n        if (\"headerFilter\" === options.name) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\");\r\n            if ($container.children().length && (!rtlEnabled && \"right\" === options.columnAlignment || rtlEnabled && \"left\" === options.columnAlignment)) {\r\n                $container.prepend($indicator);\r\n                return\r\n            }\r\n        }\r\n        this.callBase(options)\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"headerFilter\" === args.name) {\r\n            var requireReady = \"columnHeadersView\" === this.name;\r\n            this._invalidate(requireReady, requireReady);\r\n            args.handled = true\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.header_filter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport filterUtils from \"../shared/filtering\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    headerFilterMixin,\r\n    HeaderFilterView,\r\n    updateHeaderFilterItemSelectionState,\r\n    allowHeaderFiltering\r\n} from \"./ui.grid_core.header_filter_core\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined,\r\n    isObject,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    normalizeDataSourceOptions\r\n} from \"../../data/data_source/utils\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    restoreFocus\r\n} from \"../shared/accessibility\";\r\nimport dataQuery from \"../../data/query\";\r\nimport storeHelper from \"../../data/store_helper\";\r\nvar DATE_INTERVAL_FORMATS = {\r\n    month: function(value) {\r\n        return dateLocalization.getMonthNames()[value - 1]\r\n    },\r\n    quarter: function(value) {\r\n        return dateLocalization.format(new Date(2e3, 3 * value - 1), \"quarter\")\r\n    }\r\n};\r\n\r\nfunction ungroupUTCDates(items, dateParts, dates) {\r\n    dateParts = dateParts || [];\r\n    dates = dates || [];\r\n    items.forEach(item => {\r\n        if (isDefined(item.key)) {\r\n            var isMonthPart = 1 === dateParts.length;\r\n            dateParts.push(isMonthPart ? item.key - 1 : item.key);\r\n            if (item.items) {\r\n                ungroupUTCDates(item.items, dateParts, dates)\r\n            } else {\r\n                var date = new Date(Date.UTC.apply(Date, dateParts));\r\n                dates.push(date)\r\n            }\r\n            dateParts.pop()\r\n        } else {\r\n            dates.push(null)\r\n        }\r\n    });\r\n    return dates\r\n}\r\n\r\nfunction convertDataFromUTCToLocal(data, column) {\r\n    var dates = ungroupUTCDates(data);\r\n    var query = dataQuery(dates);\r\n    var group = gridCoreUtils.getHeaderFilterGroupParameters(_extends({}, column, {\r\n        calculateCellValue: date => date\r\n    }));\r\n    return storeHelper.queryByOptions(query, {\r\n        group: group\r\n    }).toArray()\r\n}\r\n\r\nfunction isUTCFormat(format) {\r\n    return \"Z\" === (null === format || void 0 === format ? void 0 : format.slice(-1)) || \"'Z'\" === (null === format || void 0 === format ? void 0 : format.slice(-3))\r\n}\r\nvar HeaderFilterController = modules.ViewController.inherit({\r\n    init: function() {\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._dataController = this.getController(\"data\");\r\n        this._headerFilterView = this.getView(\"headerFilterView\")\r\n    },\r\n    _updateSelectedState: function(items, column) {\r\n        var i = items.length;\r\n        var isExclude = \"exclude\" === column.filterType;\r\n        while (i--) {\r\n            var item = items[i];\r\n            if (\"items\" in items[i]) {\r\n                this._updateSelectedState(items[i].items, column)\r\n            }\r\n            updateHeaderFilterItemSelectionState(item, gridCoreUtils.getIndexByKey(items[i].value, column.filterValues, null) > -1, isExclude)\r\n        }\r\n    },\r\n    _normalizeGroupItem: function(item, currentLevel, options) {\r\n        var value;\r\n        var displayValue;\r\n        var path = options.path;\r\n        var valueSelector = options.valueSelector;\r\n        var displaySelector = options.displaySelector;\r\n        var column = options.column;\r\n        if (valueSelector && displaySelector) {\r\n            value = valueSelector(item);\r\n            displayValue = displaySelector(item)\r\n        } else {\r\n            value = item.key;\r\n            displayValue = value\r\n        }\r\n        if (!isObject(item)) {\r\n            item = {}\r\n        } else {\r\n            item = extend({}, item)\r\n        }\r\n        path.push(value);\r\n        if (1 === path.length) {\r\n            item.value = path[0]\r\n        } else {\r\n            item.value = path.join(\"/\")\r\n        }\r\n        item.text = this.getHeaderItemText(displayValue, column, currentLevel, options.headerFilterOptions);\r\n        return item\r\n    },\r\n    getHeaderItemText: function(displayValue, column, currentLevel, headerFilterOptions) {\r\n        var text = gridCoreUtils.formatValue(displayValue, function(value, column, currentLevel) {\r\n            var groupInterval = filterUtils.getGroupInterval(column);\r\n            var result = gridCoreUtils.getFormatOptionsByColumn(column, \"headerFilter\");\r\n            if (groupInterval) {\r\n                result.groupInterval = groupInterval[currentLevel];\r\n                if (gridCoreUtils.isDateType(column.dataType)) {\r\n                    result.format = DATE_INTERVAL_FORMATS[groupInterval[currentLevel]]\r\n                } else if (\"number\" === column.dataType) {\r\n                    result.getDisplayFormat = function() {\r\n                        var formatOptions = {\r\n                            format: column.format,\r\n                            target: \"headerFilter\"\r\n                        };\r\n                        var firstValueText = gridCoreUtils.formatValue(value, formatOptions);\r\n                        var secondValue = value + groupInterval[currentLevel];\r\n                        var secondValueText = gridCoreUtils.formatValue(secondValue, formatOptions);\r\n                        return firstValueText && secondValueText ? firstValueText + \" - \" + secondValueText : \"\"\r\n                    }\r\n                }\r\n            }\r\n            return result\r\n        }(displayValue, column, currentLevel));\r\n        if (!text) {\r\n            text = headerFilterOptions.texts.emptyValue\r\n        }\r\n        return text\r\n    },\r\n    _processGroupItems: function(groupItems, currentLevel, path, options) {\r\n        var displaySelector;\r\n        var valueSelector;\r\n        var column = options.column;\r\n        var lookup = column.lookup;\r\n        var level = options.level;\r\n        path = path || [];\r\n        currentLevel = currentLevel || 0;\r\n        if (lookup) {\r\n            displaySelector = compileGetter(lookup.displayExpr);\r\n            valueSelector = compileGetter(lookup.valueExpr)\r\n        }\r\n        for (var i = 0; i < groupItems.length; i++) {\r\n            groupItems[i] = this._normalizeGroupItem(groupItems[i], currentLevel, {\r\n                column: options.column,\r\n                headerFilterOptions: options.headerFilterOptions,\r\n                displaySelector: displaySelector,\r\n                valueSelector: valueSelector,\r\n                path: path\r\n            });\r\n            if (\"items\" in groupItems[i]) {\r\n                if (currentLevel === level || !isDefined(groupItems[i].value)) {\r\n                    delete groupItems[i].items\r\n                } else {\r\n                    this._processGroupItems(groupItems[i].items, currentLevel + 1, path, options)\r\n                }\r\n            }\r\n            path.pop()\r\n        }\r\n    },\r\n    getDataSource: function(column) {\r\n        var _column$headerFilter;\r\n        var that = this;\r\n        var dataSource = that._dataController.dataSource();\r\n        var remoteGrouping = null === dataSource || void 0 === dataSource ? void 0 : dataSource.remoteOperations().grouping;\r\n        var group = gridCoreUtils.getHeaderFilterGroupParameters(column, remoteGrouping);\r\n        var headerFilterDataSource = null === (_column$headerFilter = column.headerFilter) || void 0 === _column$headerFilter ? void 0 : _column$headerFilter.dataSource;\r\n        var headerFilterOptions = that.option(\"headerFilter\");\r\n        var isLookup = false;\r\n        var options = {\r\n            component: that.component\r\n        };\r\n        if (!dataSource) {\r\n            return\r\n        }\r\n        if (isDefined(headerFilterDataSource) && !isFunction(headerFilterDataSource)) {\r\n            options.dataSource = normalizeDataSourceOptions(headerFilterDataSource)\r\n        } else if (column.lookup) {\r\n            isLookup = true;\r\n            var lookupDataSourceOptions;\r\n            if (column.lookup.items) {\r\n                lookupDataSourceOptions = column.lookup.items\r\n            } else {\r\n                lookupDataSourceOptions = column.lookup.dataSource;\r\n                if (isFunction(lookupDataSourceOptions) && !variableWrapper.isWrapped(lookupDataSourceOptions)) {\r\n                    lookupDataSourceOptions = lookupDataSourceOptions({})\r\n                }\r\n            }\r\n            options.dataSource = normalizeDataSourceOptions(lookupDataSourceOptions)\r\n        } else {\r\n            var cutoffLevel = Array.isArray(group) ? group.length - 1 : 0;\r\n            that._currentColumn = column;\r\n            var filter = that._dataController.getCombinedFilter();\r\n            that._currentColumn = null;\r\n            options.dataSource = {\r\n                filter: filter,\r\n                group: group,\r\n                useDefaultSearch: true,\r\n                load: function(options) {\r\n                    var d = new Deferred;\r\n                    options.dataField = column.dataField || column.name;\r\n                    dataSource.load(options).done((function(data) {\r\n                        var convertUTCDates = remoteGrouping && isUTCFormat(column.serializationFormat) && cutoffLevel > 3;\r\n                        if (convertUTCDates) {\r\n                            data = convertDataFromUTCToLocal(data, column)\r\n                        }\r\n                        that._processGroupItems(data, null, null, {\r\n                            level: cutoffLevel,\r\n                            column: column,\r\n                            headerFilterOptions: headerFilterOptions\r\n                        });\r\n                        d.resolve(data)\r\n                    })).fail(d.reject);\r\n                    return d\r\n                }\r\n            }\r\n        }\r\n        if (isFunction(headerFilterDataSource)) {\r\n            headerFilterDataSource.call(column, options)\r\n        }\r\n        var origPostProcess = options.dataSource.postProcess;\r\n        options.dataSource.postProcess = function(data) {\r\n            var items = data;\r\n            if (isLookup) {\r\n                if (0 === this.pageIndex() && !this.searchValue()) {\r\n                    items = items.slice(0);\r\n                    items.unshift(null)\r\n                }\r\n                that._processGroupItems(items, null, null, {\r\n                    level: 0,\r\n                    column: column,\r\n                    headerFilterOptions: headerFilterOptions\r\n                })\r\n            }\r\n            items = origPostProcess && origPostProcess.call(this, items) || items;\r\n            that._updateSelectedState(items, column);\r\n            return items\r\n        };\r\n        return options.dataSource\r\n    },\r\n    getCurrentColumn: function() {\r\n        return this._currentColumn\r\n    },\r\n    showHeaderFilterMenu: function(columnIndex, isGroupPanel) {\r\n        var columnsController = this._columnsController;\r\n        var column = extend(true, {}, this._columnsController.getColumns()[columnIndex]);\r\n        if (column) {\r\n            var visibleIndex = columnsController.getVisibleIndex(columnIndex);\r\n            var view = isGroupPanel ? this.getView(\"headerPanel\") : this.getView(\"columnHeadersView\");\r\n            var $columnElement = $columnElement || view.getColumnElements().eq(isGroupPanel ? column.groupIndex : visibleIndex);\r\n            this.showHeaderFilterMenuBase({\r\n                columnElement: $columnElement,\r\n                column: column,\r\n                applyFilter: true,\r\n                apply: function() {\r\n                    columnsController.columnOption(columnIndex, {\r\n                        filterValues: this.filterValues,\r\n                        filterType: this.filterType\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    },\r\n    showHeaderFilterMenuBase: function(options) {\r\n        var that = this;\r\n        var column = options.column;\r\n        if (column) {\r\n            var groupInterval = filterUtils.getGroupInterval(column);\r\n            var dataSource = that._dataController.dataSource();\r\n            var remoteFiltering = dataSource && dataSource.remoteOperations().filtering;\r\n            extend(options, column, {\r\n                type: groupInterval && groupInterval.length > 1 ? \"tree\" : \"list\",\r\n                remoteFiltering: remoteFiltering,\r\n                onShowing: function(e) {\r\n                    var dxResizableInstance = e.component.$overlayContent().dxResizable(\"instance\");\r\n                    dxResizableInstance && dxResizableInstance.option(\"onResizeEnd\", (function(e) {\r\n                        var columnsController = that.getController(\"columns\");\r\n                        var headerFilterByColumn = columnsController.columnOption(options.dataField, \"headerFilter\");\r\n                        headerFilterByColumn = headerFilterByColumn || {};\r\n                        headerFilterByColumn.width = e.width;\r\n                        headerFilterByColumn.height = e.height;\r\n                        columnsController.columnOption(options.dataField, \"headerFilter\", headerFilterByColumn, true)\r\n                    }))\r\n                },\r\n                onHidden: () => restoreFocus(this)\r\n            });\r\n            options.dataSource = that.getDataSource(options);\r\n            if (options.isFilterBuilder) {\r\n                options.dataSource.filter = null;\r\n                options.alignment = \"right\"\r\n            }\r\n            that._headerFilterView.showHeaderFilterMenu(options.columnElement, options)\r\n        }\r\n    },\r\n    hideHeaderFilterMenu: function() {\r\n        this._headerFilterView.hideHeaderFilterMenu()\r\n    }\r\n});\r\nvar ColumnHeadersViewHeaderFilterExtender = extend({}, headerFilterMixin, {\r\n    _renderCellContent: function($cell, options) {\r\n        var $headerFilterIndicator;\r\n        var column = options.column;\r\n        if (!column.command && allowHeaderFiltering(column) && this.option(\"headerFilter.visible\") && \"header\" === options.rowType) {\r\n            $headerFilterIndicator = this._applyColumnState({\r\n                name: \"headerFilter\",\r\n                rootElement: $cell,\r\n                column: column,\r\n                showColumnLines: this.option(\"showColumnLines\")\r\n            });\r\n            $headerFilterIndicator && this._subscribeToIndicatorEvent($headerFilterIndicator, column, \"headerFilter\")\r\n        }\r\n        this.callBase($cell, options)\r\n    },\r\n    _subscribeToIndicatorEvent: function($indicator, column, indicatorName) {\r\n        var that = this;\r\n        if (\"headerFilter\" === indicatorName) {\r\n            eventsEngine.on($indicator, clickEventName, that.createAction((function(e) {\r\n                e.event.stopPropagation();\r\n                that.getController(\"headerFilter\").showHeaderFilterMenu(column.index, false)\r\n            })))\r\n        }\r\n    },\r\n    _updateIndicator: function($cell, column, indicatorName) {\r\n        var $indicator = this.callBase($cell, column, indicatorName);\r\n        $indicator && this._subscribeToIndicatorEvent($indicator, column, indicatorName)\r\n    },\r\n    _updateHeaderFilterIndicators: function() {\r\n        if (this.option(\"headerFilter.visible\")) {\r\n            this._updateIndicators(\"headerFilter\")\r\n        }\r\n    },\r\n    _needUpdateFilterIndicators: function() {\r\n        return true\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var optionNames = e.optionNames;\r\n        if (gridCoreUtils.checkChanges(optionNames, [\"filterValues\", \"filterType\"])) {\r\n            if (this._needUpdateFilterIndicators()) {\r\n                this._updateHeaderFilterIndicators()\r\n            }\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    }\r\n});\r\nvar HeaderPanelHeaderFilterExtender = extend({}, headerFilterMixin, {\r\n    _createGroupPanelItem: function($rootElement, groupColumn) {\r\n        var that = this;\r\n        var $item = that.callBase.apply(that, arguments);\r\n        var $headerFilterIndicator;\r\n        if (!groupColumn.command && allowHeaderFiltering(groupColumn) && that.option(\"headerFilter.visible\")) {\r\n            $headerFilterIndicator = that._applyColumnState({\r\n                name: \"headerFilter\",\r\n                rootElement: $item,\r\n                column: {\r\n                    alignment: getDefaultAlignment(that.option(\"rtlEnabled\")),\r\n                    filterValues: groupColumn.filterValues,\r\n                    allowHeaderFiltering: true\r\n                },\r\n                showColumnLines: true\r\n            });\r\n            $headerFilterIndicator && eventsEngine.on($headerFilterIndicator, clickEventName, that.createAction((function(e) {\r\n                var event = e.event;\r\n                event.stopPropagation();\r\n                that.getController(\"headerFilter\").showHeaderFilterMenu(groupColumn.index, true)\r\n            })))\r\n        }\r\n        return $item\r\n    }\r\n});\r\nexport function invertFilterExpression(filter) {\r\n    return [\"!\", filter]\r\n}\r\nvar DataControllerFilterRowExtender = {\r\n    skipCalculateColumnFilters: function() {\r\n        return false\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        if (this.skipCalculateColumnFilters()) {\r\n            return this.callBase()\r\n        }\r\n        var filters = [this.callBase()];\r\n        var columns = this._columnsController.getVisibleColumns(null, true);\r\n        var headerFilterController = this.getController(\"headerFilter\");\r\n        var currentColumn = headerFilterController.getCurrentColumn();\r\n        each(columns, (function(_, column) {\r\n            var filter;\r\n            if (currentColumn && currentColumn.index === column.index) {\r\n                return\r\n            }\r\n            if (allowHeaderFiltering(column) && column.calculateFilterExpression && Array.isArray(column.filterValues) && column.filterValues.length) {\r\n                var filterValues = [];\r\n                each(column.filterValues, (function(_, filterValue) {\r\n                    if (Array.isArray(filterValue)) {\r\n                        filter = filterValue\r\n                    } else {\r\n                        if (column.deserializeValue && !gridCoreUtils.isDateType(column.dataType) && \"number\" !== column.dataType) {\r\n                            filterValue = column.deserializeValue(filterValue)\r\n                        }\r\n                        filter = column.createFilterExpression(filterValue, \"=\", \"headerFilter\")\r\n                    }\r\n                    if (filter) {\r\n                        filter.columnIndex = column.index\r\n                    }\r\n                    filterValues.push(filter)\r\n                }));\r\n                filterValues = gridCoreUtils.combineFilters(filterValues, \"or\");\r\n                filters.push(\"exclude\" === column.filterType ? [\"!\", filterValues] : filterValues)\r\n            }\r\n        }));\r\n        return gridCoreUtils.combineFilters(filters)\r\n    }\r\n};\r\nexport var headerFilterModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            headerFilter: {\r\n                visible: false,\r\n                width: 252,\r\n                height: 325,\r\n                allowSearch: false,\r\n                searchTimeout: 500,\r\n                texts: {\r\n                    emptyValue: messageLocalization.format(\"dxDataGrid-headerFilterEmptyValue\"),\r\n                    ok: messageLocalization.format(\"dxDataGrid-headerFilterOK\"),\r\n                    cancel: messageLocalization.format(\"dxDataGrid-headerFilterCancel\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        headerFilter: HeaderFilterController\r\n    },\r\n    views: {\r\n        headerFilterView: HeaderFilterView\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterRowExtender\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewHeaderFilterExtender,\r\n            headerPanel: HeaderPanelHeaderFilterExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.header_filter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    headerFilterModule\r\n} from \"../grid_core/ui.grid_core.header_filter\";\r\ncore.registerModule(\"headerFilter\", headerFilterModule);\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder/between.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nvar FILTER_BUILDER_RANGE_CLASS = \"dx-filterbuilder-range\";\r\nvar FILTER_BUILDER_RANGE_START_CLASS = FILTER_BUILDER_RANGE_CLASS + \"-start\";\r\nvar FILTER_BUILDER_RANGE_END_CLASS = FILTER_BUILDER_RANGE_CLASS + \"-end\";\r\nvar FILTER_BUILDER_RANGE_SEPARATOR_CLASS = FILTER_BUILDER_RANGE_CLASS + \"-separator\";\r\nvar SEPARATOR = \"\\u2013\";\r\n\r\nfunction editorTemplate(conditionInfo, container) {\r\n    var $editorStart = $(\"<div>\").addClass(FILTER_BUILDER_RANGE_START_CLASS);\r\n    var $editorEnd = $(\"<div>\").addClass(FILTER_BUILDER_RANGE_END_CLASS);\r\n    var values = conditionInfo.value || [];\r\n    var getStartValue = function(values) {\r\n        return values && values.length > 0 ? values[0] : null\r\n    };\r\n    var getEndValue = function(values) {\r\n        return values && 2 === values.length ? values[1] : null\r\n    };\r\n    container.append($editorStart);\r\n    container.append($(\"<span>\").addClass(FILTER_BUILDER_RANGE_SEPARATOR_CLASS).text(SEPARATOR));\r\n    container.append($editorEnd);\r\n    container.addClass(FILTER_BUILDER_RANGE_CLASS);\r\n    this._editorFactory.createEditor.call(this, $editorStart, extend({}, conditionInfo.field, conditionInfo, {\r\n        value: getStartValue(values),\r\n        parentType: \"filterBuilder\",\r\n        setValue: function(value) {\r\n            values = [value, getEndValue(values)];\r\n            conditionInfo.setValue(values)\r\n        }\r\n    }));\r\n    this._editorFactory.createEditor.call(this, $editorEnd, extend({}, conditionInfo.field, conditionInfo, {\r\n        value: getEndValue(values),\r\n        parentType: \"filterBuilder\",\r\n        setValue: function(value) {\r\n            values = [getStartValue(values), value];\r\n            conditionInfo.setValue(values)\r\n        }\r\n    }))\r\n}\r\nexport function getConfig(caption, context) {\r\n    return {\r\n        name: \"between\",\r\n        caption: caption,\r\n        icon: \"range\",\r\n        valueSeparator: SEPARATOR,\r\n        dataTypes: [\"number\", \"date\", \"datetime\"],\r\n        editorTemplate: editorTemplate.bind(context),\r\n        notForLookup: true\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder/ui.filter_operations_dictionary.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nvar OPERATION_ICONS = {\r\n    \"=\": \"equal\",\r\n    \"<>\": \"notequal\",\r\n    \"<\": \"less\",\r\n    \"<=\": \"lessorequal\",\r\n    \">\": \"greater\",\r\n    \">=\": \"greaterorequal\",\r\n    notcontains: \"doesnotcontain\",\r\n    contains: \"contains\",\r\n    startswith: \"startswith\",\r\n    endswith: \"endswith\",\r\n    isblank: \"isblank\",\r\n    isnotblank: \"isnotblank\"\r\n};\r\nvar OPERATION_NAME = {\r\n    \"=\": \"equal\",\r\n    \"<>\": \"notEqual\",\r\n    \"<\": \"lessThan\",\r\n    \"<=\": \"lessThanOrEqual\",\r\n    \">\": \"greaterThan\",\r\n    \">=\": \"greaterThanOrEqual\",\r\n    startswith: \"startsWith\",\r\n    contains: \"contains\",\r\n    notcontains: \"notContains\",\r\n    endswith: \"endsWith\",\r\n    isblank: \"isBlank\",\r\n    isnotblank: \"isNotBlank\",\r\n    between: \"between\"\r\n};\r\nexport default {\r\n    getIconByFilterOperation: function(filterOperation) {\r\n        return OPERATION_ICONS[filterOperation]\r\n    },\r\n    getNameByFilterOperation: function(filterOperation) {\r\n        return OPERATION_NAME[filterOperation]\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder/utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    errors as dataErrors\r\n} from \"../../data/errors\";\r\nimport {\r\n    isDefined,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport filterUtils from \"../shared/filtering\";\r\nimport formatHelper from \"../../format_helper\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    captionize\r\n} from \"../../core/utils/inflector\";\r\nimport {\r\n    getConfig\r\n} from \"./between\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    DataSource\r\n} from \"../../data/data_source/data_source\";\r\nimport filterOperationsDictionary from \"./ui.filter_operations_dictionary\";\r\nvar DEFAULT_DATA_TYPE = \"string\";\r\nvar EMPTY_MENU_ICON = \"icon-none\";\r\nvar AND_GROUP_OPERATION = \"and\";\r\nvar EQUAL_OPERATION = \"=\";\r\nvar NOT_EQUAL_OPERATION = \"<>\";\r\nvar DATATYPE_OPERATIONS = {\r\n    number: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"isblank\", \"isnotblank\"],\r\n    string: [\"contains\", \"notcontains\", \"startswith\", \"endswith\", \"=\", \"<>\", \"isblank\", \"isnotblank\"],\r\n    date: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"isblank\", \"isnotblank\"],\r\n    datetime: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"isblank\", \"isnotblank\"],\r\n    boolean: [\"=\", \"<>\", \"isblank\", \"isnotblank\"],\r\n    object: [\"isblank\", \"isnotblank\"]\r\n};\r\nvar DEFAULT_FORMAT = {\r\n    date: \"shortDate\",\r\n    datetime: \"shortDateShortTime\"\r\n};\r\nvar LOOKUP_OPERATIONS = [\"=\", \"<>\", \"isblank\", \"isnotblank\"];\r\nvar AVAILABLE_FIELD_PROPERTIES = [\"caption\", \"customizeText\", \"dataField\", \"dataType\", \"editorTemplate\", \"falseText\", \"editorOptions\", \"filterOperations\", \"format\", \"lookup\", \"trueText\", \"calculateFilterExpression\", \"name\"];\r\nvar FILTER_BUILDER_CLASS = \"dx-filterbuilder\";\r\nvar FILTER_BUILDER_ITEM_TEXT_CLASS = FILTER_BUILDER_CLASS + \"-text\";\r\nvar FILTER_BUILDER_ITEM_TEXT_PART_CLASS = FILTER_BUILDER_ITEM_TEXT_CLASS + \"-part\";\r\nvar FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS = FILTER_BUILDER_ITEM_TEXT_CLASS + \"-separator\";\r\nvar FILTER_BUILDER_ITEM_TEXT_SEPARATOR_EMPTY_CLASS = FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS + \"-empty\";\r\n\r\nfunction getFormattedValueText(field, value) {\r\n    var fieldFormat = field.format || DEFAULT_FORMAT[field.dataType];\r\n    return formatHelper.format(value, fieldFormat)\r\n}\r\n\r\nfunction isNegationGroup(group) {\r\n    return group && group.length > 1 && \"!\" === group[0] && !isCondition(group)\r\n}\r\nexport function getGroupCriteria(group) {\r\n    return isNegationGroup(group) ? group[1] : group\r\n}\r\n\r\nfunction setGroupCriteria(group, criteria) {\r\n    if (isNegationGroup(group)) {\r\n        group[1] = criteria\r\n    } else {\r\n        group = criteria\r\n    }\r\n    return group\r\n}\r\n\r\nfunction convertGroupToNewStructure(group, value) {\r\n    if (function(value) {\r\n            return -1 !== value.indexOf(\"!\")\r\n        }(value)) {\r\n        if (!isNegationGroup(group)) {\r\n            ! function(group) {\r\n                var criteria = group.slice(0);\r\n                group.length = 0;\r\n                group.push(\"!\", criteria)\r\n            }(group)\r\n        }\r\n    } else if (isNegationGroup(group)) {\r\n        ! function(group) {\r\n            var criteria = getGroupCriteria(group);\r\n            group.length = 0;\r\n            [].push.apply(group, criteria)\r\n        }(group)\r\n    }\r\n}\r\nexport function setGroupValue(group, value) {\r\n    convertGroupToNewStructure(group, value);\r\n    var criteria = getGroupCriteria(group);\r\n    var i;\r\n    value = function(value) {\r\n        return -1 === value.indexOf(\"!\") ? value : value.substring(1)\r\n    }(value);\r\n    ! function(criteria, value) {\r\n        for (i = 0; i < criteria.length; i++) {\r\n            if (!Array.isArray(criteria[i])) {\r\n                criteria[i] = value\r\n            }\r\n        }\r\n    }(criteria, value);\r\n    return group\r\n}\r\nexport function getGroupMenuItem(group, availableGroups) {\r\n    var groupValue = getGroupValue(group);\r\n    return availableGroups.filter((function(item) {\r\n        return item.value === groupValue\r\n    }))[0]\r\n}\r\n\r\nfunction getCriteriaOperation(criteria) {\r\n    if (isCondition(criteria)) {\r\n        return AND_GROUP_OPERATION\r\n    }\r\n    var value = \"\";\r\n    for (var i = 0; i < criteria.length; i++) {\r\n        var item = criteria[i];\r\n        if (!Array.isArray(item)) {\r\n            if (value && value !== item) {\r\n                throw new dataErrors.Error(\"E4019\")\r\n            }\r\n            if (\"!\" !== item) {\r\n                value = item\r\n            }\r\n        }\r\n    }\r\n    return value\r\n}\r\nexport function getGroupValue(group) {\r\n    var criteria = getGroupCriteria(group);\r\n    var value = getCriteriaOperation(criteria);\r\n    if (!value) {\r\n        value = AND_GROUP_OPERATION\r\n    }\r\n    if (criteria !== group) {\r\n        value = \"!\" + value\r\n    }\r\n    return value\r\n}\r\n\r\nfunction getDefaultFilterOperations(field) {\r\n    return field.lookup && LOOKUP_OPERATIONS || DATATYPE_OPERATIONS[field.dataType || DEFAULT_DATA_TYPE]\r\n}\r\n\r\nfunction containItems(entity) {\r\n    return Array.isArray(entity) && entity.length\r\n}\r\nexport function getFilterOperations(field) {\r\n    var result = containItems(field.filterOperations) ? field.filterOperations : getDefaultFilterOperations(field);\r\n    return extend([], result)\r\n}\r\nexport function getCaptionByOperation(operation, filterOperationDescriptions) {\r\n    var operationName = filterOperationsDictionary.getNameByFilterOperation(operation);\r\n    return filterOperationDescriptions && filterOperationDescriptions[operationName] ? filterOperationDescriptions[operationName] : operationName\r\n}\r\nexport function getOperationFromAvailable(operation, availableOperations) {\r\n    for (var i = 0; i < availableOperations.length; i++) {\r\n        if (availableOperations[i].value === operation) {\r\n            return availableOperations[i]\r\n        }\r\n    }\r\n    throw new errors.Error(\"E1048\", operation)\r\n}\r\nexport function getCustomOperation(customOperations, name) {\r\n    var filteredOperations = customOperations.filter((function(item) {\r\n        return item.name === name\r\n    }));\r\n    return filteredOperations.length ? filteredOperations[0] : null\r\n}\r\nexport function getAvailableOperations(field, filterOperationDescriptions, customOperations) {\r\n    var filterOperations = getFilterOperations(field);\r\n    var isLookupField = !!field.lookup;\r\n    customOperations.forEach((function(customOperation) {\r\n        if (!field.filterOperations && -1 === filterOperations.indexOf(customOperation.name)) {\r\n            var dataTypes = customOperation && customOperation.dataTypes;\r\n            var isOperationForbidden = isLookupField ? !!customOperation.notForLookup : false;\r\n            if (!isOperationForbidden && dataTypes && dataTypes.indexOf(field.dataType || DEFAULT_DATA_TYPE) >= 0) {\r\n                filterOperations.push(customOperation.name)\r\n            }\r\n        }\r\n    }));\r\n    return filterOperations.map((function(operation) {\r\n        var customOperation = getCustomOperation(customOperations, operation);\r\n        if (customOperation) {\r\n            return {\r\n                icon: customOperation.icon || EMPTY_MENU_ICON,\r\n                text: customOperation.caption || captionize(customOperation.name),\r\n                value: customOperation.name,\r\n                isCustom: true\r\n            }\r\n        } else {\r\n            return {\r\n                icon: filterOperationsDictionary.getIconByFilterOperation(operation) || EMPTY_MENU_ICON,\r\n                text: getCaptionByOperation(operation, filterOperationDescriptions),\r\n                value: operation\r\n            }\r\n        }\r\n    }))\r\n}\r\nexport function getDefaultOperation(field) {\r\n    return field.defaultFilterOperation || getFilterOperations(field)[0]\r\n}\r\nexport function createCondition(field, customOperations) {\r\n    var condition = [field.dataField, \"\", \"\"];\r\n    var filterOperation = getDefaultOperation(field);\r\n    updateConditionByOperation(condition, filterOperation, customOperations);\r\n    return condition\r\n}\r\nexport function removeItem(group, item) {\r\n    var criteria = getGroupCriteria(group);\r\n    var index = criteria.indexOf(item);\r\n    criteria.splice(index, 1);\r\n    if (1 !== criteria.length) {\r\n        criteria.splice(index, 1)\r\n    }\r\n    return group\r\n}\r\nexport function createEmptyGroup(value) {\r\n    var isNegation = isNegationGroupOperation(value);\r\n    var groupOperation = isNegation ? getGroupOperationFromNegationOperation(value) : value;\r\n    return isNegation ? [\"!\", [groupOperation]] : [groupOperation]\r\n}\r\nexport function isEmptyGroup(group) {\r\n    var criteria = getGroupCriteria(group);\r\n    if (isCondition(criteria)) {\r\n        return false\r\n    }\r\n    var hasConditions = criteria.some((function(item) {\r\n        return isCondition(item)\r\n    }));\r\n    return !hasConditions\r\n}\r\nexport function addItem(item, group) {\r\n    var criteria = getGroupCriteria(group);\r\n    var groupValue = getGroupValue(criteria);\r\n    1 === criteria.length ? criteria.unshift(item) : criteria.push(item, groupValue);\r\n    return group\r\n}\r\nexport function getField(dataField, fields) {\r\n    for (var i = 0; i < fields.length; i++) {\r\n        if (fields[i].name === dataField) {\r\n            return fields[i]\r\n        }\r\n        if (fields[i].dataField.toLowerCase() === dataField.toLowerCase()) {\r\n            return fields[i]\r\n        }\r\n    }\r\n    var extendedFields = getItems(fields, true).filter((function(item) {\r\n        return item.dataField.toLowerCase() === dataField.toLowerCase()\r\n    }));\r\n    if (extendedFields.length > 0) {\r\n        return extendedFields[0]\r\n    }\r\n    throw new errors.Error(\"E1047\", dataField)\r\n}\r\nexport function isGroup(criteria) {\r\n    if (!Array.isArray(criteria)) {\r\n        return false\r\n    }\r\n    return criteria.length < 2 || Array.isArray(criteria[0]) || Array.isArray(criteria[1])\r\n}\r\nexport function isCondition(criteria) {\r\n    if (!Array.isArray(criteria)) {\r\n        return false\r\n    }\r\n    return criteria.length > 1 && !Array.isArray(criteria[0]) && !Array.isArray(criteria[1])\r\n}\r\n\r\nfunction convertToInnerGroup(group, customOperations, defaultGroupOperation) {\r\n    defaultGroupOperation = defaultGroupOperation || AND_GROUP_OPERATION;\r\n    var groupOperation = getCriteriaOperation(group).toLowerCase() || defaultGroupOperation;\r\n    var innerGroup = [];\r\n    for (var i = 0; i < group.length; i++) {\r\n        if (isGroup(group[i])) {\r\n            innerGroup.push(convertToInnerStructure(group[i], customOperations, defaultGroupOperation));\r\n            innerGroup = appendGroupOperationToGroup(innerGroup, groupOperation)\r\n        } else if (isCondition(group[i])) {\r\n            innerGroup.push(convertToInnerCondition(group[i], customOperations));\r\n            innerGroup = appendGroupOperationToGroup(innerGroup, groupOperation)\r\n        }\r\n    }\r\n    if (0 === innerGroup.length) {\r\n        innerGroup = appendGroupOperationToGroup(innerGroup, groupOperation)\r\n    }\r\n    return innerGroup\r\n}\r\n\r\nfunction conditionHasCustomOperation(condition, customOperations) {\r\n    var customOperation = getCustomOperation(customOperations, condition[1]);\r\n    return customOperation && customOperation.name === condition[1]\r\n}\r\n\r\nfunction convertToInnerCondition(condition, customOperations) {\r\n    if (conditionHasCustomOperation(condition, customOperations)) {\r\n        return condition\r\n    }\r\n    if (condition.length < 3) {\r\n        condition[2] = condition[1];\r\n        condition[1] = EQUAL_OPERATION\r\n    }\r\n    return condition\r\n}\r\n\r\nfunction isNegationGroupOperation(operation) {\r\n    return -1 !== operation.indexOf(\"not\")\r\n}\r\n\r\nfunction getGroupOperationFromNegationOperation(operation) {\r\n    return operation.substring(3).toLowerCase()\r\n}\r\n\r\nfunction appendGroupOperationToCriteria(criteria, groupOperation) {\r\n    var isNegation = isNegationGroupOperation(groupOperation);\r\n    groupOperation = isNegation ? getGroupOperationFromNegationOperation(groupOperation) : groupOperation;\r\n    return isNegation ? [\"!\", criteria, groupOperation] : [criteria, groupOperation]\r\n}\r\n\r\nfunction appendGroupOperationToGroup(group, groupOperation) {\r\n    var isNegation = isNegationGroupOperation(groupOperation);\r\n    groupOperation = isNegation ? getGroupOperationFromNegationOperation(groupOperation) : groupOperation;\r\n    group.push(groupOperation);\r\n    var result = group;\r\n    if (isNegation) {\r\n        result = [\"!\", result]\r\n    }\r\n    return result\r\n}\r\nexport function convertToInnerStructure(value, customOperations, defaultGroupOperation) {\r\n    defaultGroupOperation = defaultGroupOperation || AND_GROUP_OPERATION;\r\n    if (!value) {\r\n        return createEmptyGroup(defaultGroupOperation)\r\n    }\r\n    value = extend(true, [], value);\r\n    if (isCondition(value)) {\r\n        return appendGroupOperationToCriteria(convertToInnerCondition(value, customOperations), defaultGroupOperation)\r\n    }\r\n    if (isNegationGroup(value)) {\r\n        return [\"!\", isCondition(value[1]) ? appendGroupOperationToCriteria(convertToInnerCondition(value[1], customOperations), defaultGroupOperation) : isNegationGroup(value[1]) ? appendGroupOperationToCriteria(convertToInnerStructure(value[1], customOperations), defaultGroupOperation) : convertToInnerGroup(value[1], customOperations, defaultGroupOperation)]\r\n    }\r\n    return convertToInnerGroup(value, customOperations, defaultGroupOperation)\r\n}\r\nexport function getNormalizedFields(fields) {\r\n    return fields.reduce((function(result, field) {\r\n        if (isDefined(field.dataField)) {\r\n            var normalizedField = {};\r\n            for (var key in field) {\r\n                if (field[key] && AVAILABLE_FIELD_PROPERTIES.indexOf(key) > -1) {\r\n                    normalizedField[key] = field[key]\r\n                }\r\n            }\r\n            normalizedField.defaultCalculateFilterExpression = filterUtils.defaultCalculateFilterExpression;\r\n            if (!isDefined(normalizedField.dataType)) {\r\n                normalizedField.dataType = DEFAULT_DATA_TYPE\r\n            }\r\n            if (!isDefined(normalizedField.trueText)) {\r\n                normalizedField.trueText = messageLocalization.format(\"dxDataGrid-trueText\")\r\n            }\r\n            if (!isDefined(normalizedField.falseText)) {\r\n                normalizedField.falseText = messageLocalization.format(\"dxDataGrid-falseText\")\r\n            }\r\n            result.push(normalizedField)\r\n        }\r\n        return result\r\n    }), [])\r\n}\r\n\r\nfunction getConditionFilterExpression(condition, fields, customOperations, target) {\r\n    var field = getField(condition[0], fields);\r\n    var filterExpression = convertToInnerCondition(condition, customOperations);\r\n    var customOperation = customOperations.length && getCustomOperation(customOperations, filterExpression[1]);\r\n    if (customOperation && customOperation.calculateFilterExpression) {\r\n        return customOperation.calculateFilterExpression.apply(customOperation, [filterExpression[2], field, fields])\r\n    } else if (field.createFilterExpression) {\r\n        return field.createFilterExpression.apply(field, [filterExpression[2], filterExpression[1], target])\r\n    } else if (field.calculateFilterExpression) {\r\n        return field.calculateFilterExpression.apply(field, [filterExpression[2], filterExpression[1], target])\r\n    } else {\r\n        return field.defaultCalculateFilterExpression.apply(field, [filterExpression[2], filterExpression[1], target])\r\n    }\r\n}\r\nexport function getFilterExpression(value, fields, customOperations, target) {\r\n    if (!isDefined(value)) {\r\n        return null\r\n    }\r\n    if (isNegationGroup(value)) {\r\n        var filterExpression = getFilterExpression(value[1], fields, customOperations, target);\r\n        return [\"!\", filterExpression]\r\n    }\r\n    var criteria = getGroupCriteria(value);\r\n    if (isCondition(criteria)) {\r\n        return getConditionFilterExpression(criteria, fields, customOperations, target) || null\r\n    } else {\r\n        var result = [];\r\n        var _filterExpression;\r\n        var groupValue = getGroupValue(criteria);\r\n        for (var i = 0; i < criteria.length; i++) {\r\n            if (isGroup(criteria[i])) {\r\n                _filterExpression = getFilterExpression(criteria[i], fields, customOperations, target);\r\n                if (_filterExpression) {\r\n                    i && result.push(groupValue);\r\n                    result.push(_filterExpression)\r\n                }\r\n            } else if (isCondition(criteria[i])) {\r\n                _filterExpression = getConditionFilterExpression(criteria[i], fields, customOperations, target);\r\n                if (_filterExpression) {\r\n                    result.length && result.push(groupValue);\r\n                    result.push(_filterExpression)\r\n                }\r\n            }\r\n        }\r\n        if (1 === result.length) {\r\n            result = result[0]\r\n        }\r\n        return result.length ? result : null\r\n    }\r\n}\r\nexport function getNormalizedFilter(group) {\r\n    var criteria = getGroupCriteria(group);\r\n    var i;\r\n    if (0 === criteria.length) {\r\n        return null\r\n    }\r\n    var itemsForRemove = [];\r\n    for (i = 0; i < criteria.length; i++) {\r\n        if (isGroup(criteria[i])) {\r\n            var normalizedGroupValue = getNormalizedFilter(criteria[i]);\r\n            if (normalizedGroupValue) {\r\n                criteria[i] = normalizedGroupValue\r\n            } else {\r\n                itemsForRemove.push(criteria[i])\r\n            }\r\n        } else if (isCondition(criteria[i])) {\r\n            if (!isValidCondition(criteria[i])) {\r\n                itemsForRemove.push(criteria[i])\r\n            }\r\n        }\r\n    }\r\n    for (i = 0; i < itemsForRemove.length; i++) {\r\n        removeItem(criteria, itemsForRemove[i])\r\n    }\r\n    if (1 === criteria.length) {\r\n        return null\r\n    }\r\n    criteria.splice(criteria.length - 1, 1);\r\n    if (1 === criteria.length) {\r\n        group = setGroupCriteria(group, criteria[0])\r\n    }\r\n    if (0 === group.length) {\r\n        return null\r\n    }\r\n    return group\r\n}\r\nexport function getCurrentLookupValueText(field, value, handler) {\r\n    if (\"\" === value) {\r\n        handler(\"\");\r\n        return\r\n    }\r\n    var lookup = field.lookup;\r\n    if (lookup.items) {\r\n        handler(lookup.calculateCellValue(value) || \"\")\r\n    } else {\r\n        var lookupDataSource = isFunction(lookup.dataSource) ? lookup.dataSource({}) : lookup.dataSource;\r\n        var dataSource = new DataSource(lookupDataSource);\r\n        dataSource.loadSingle(lookup.valueExpr, value).done((function(result) {\r\n            var valueText = \"\";\r\n            if (result) {\r\n                valueText = lookup.displayExpr ? compileGetter(lookup.displayExpr)(result) : result\r\n            }\r\n            if (field.customizeText) {\r\n                valueText = field.customizeText({\r\n                    value: value,\r\n                    valueText: valueText\r\n                })\r\n            }\r\n            handler(valueText)\r\n        })).fail((function() {\r\n            handler(\"\")\r\n        }))\r\n    }\r\n}\r\n\r\nfunction getPrimitiveValueText(field, value, customOperation, target, options) {\r\n    var valueText;\r\n    if (true === value) {\r\n        valueText = field.trueText || messageLocalization.format(\"dxDataGrid-trueText\")\r\n    } else if (false === value) {\r\n        valueText = field.falseText || messageLocalization.format(\"dxDataGrid-falseText\")\r\n    } else {\r\n        valueText = getFormattedValueText(field, value)\r\n    }\r\n    if (field.customizeText) {\r\n        valueText = field.customizeText.call(field, {\r\n            value: value,\r\n            valueText: valueText,\r\n            target: target\r\n        })\r\n    }\r\n    if (customOperation && customOperation.customizeText) {\r\n        valueText = customOperation.customizeText.call(customOperation, {\r\n            value: value,\r\n            valueText: valueText,\r\n            field: field,\r\n            target: target\r\n        }, options)\r\n    }\r\n    return valueText\r\n}\r\n\r\nfunction getArrayValueText(field, value, customOperation, target) {\r\n    var options = {\r\n        values: value\r\n    };\r\n    return value.map(v => getPrimitiveValueText(field, v, customOperation, target, options))\r\n}\r\n\r\nfunction checkDefaultValue(value) {\r\n    return \"\" === value || null === value\r\n}\r\nexport function getCurrentValueText(field, value, customOperation) {\r\n    var target = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : \"filterBuilder\";\r\n    if (checkDefaultValue(value)) {\r\n        return \"\"\r\n    }\r\n    if (Array.isArray(value)) {\r\n        var result = new Deferred;\r\n        when.apply(this, getArrayValueText(field, value, customOperation, target)).done((function() {\r\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n                args[_key] = arguments[_key]\r\n            }\r\n            var text = args.some(item => !checkDefaultValue(item)) ? args.map(item => !checkDefaultValue(item) ? item : \"?\") : \"\";\r\n            result.resolve(text)\r\n        }));\r\n        return result\r\n    } else {\r\n        return getPrimitiveValueText(field, value, customOperation, target)\r\n    }\r\n}\r\n\r\nfunction itemExists(plainItems, parentId) {\r\n    return plainItems.some((function(item) {\r\n        return item.dataField === parentId\r\n    }))\r\n}\r\n\r\nfunction pushItemAndCheckParent(originalItems, plainItems, item) {\r\n    var dataField = item.dataField;\r\n    if (hasParent(dataField)) {\r\n        item.parentId = getParentIdFromItemDataField(dataField);\r\n        if (!itemExists(plainItems, item.parentId) && !itemExists(originalItems, item.parentId)) {\r\n            pushItemAndCheckParent(originalItems, plainItems, {\r\n                id: item.parentId,\r\n                dataType: \"object\",\r\n                dataField: item.parentId,\r\n                caption: generateCaptionByDataField(item.parentId, true),\r\n                filterOperations: [\"isblank\", \"isnotblank\"]\r\n            })\r\n        }\r\n    }\r\n    plainItems.push(item)\r\n}\r\n\r\nfunction generateCaptionByDataField(dataField, allowHierarchicalFields) {\r\n    var caption = \"\";\r\n    if (allowHierarchicalFields) {\r\n        dataField = dataField.substring(dataField.lastIndexOf(\".\") + 1)\r\n    } else if (hasParent(dataField)) {\r\n        dataField.split(\".\").forEach((function(field, index, arr) {\r\n            caption += captionize(field);\r\n            if (index !== arr.length - 1) {\r\n                caption += \".\"\r\n            }\r\n        }));\r\n        return caption\r\n    }\r\n    return captionize(dataField)\r\n}\r\nexport function getItems(fields, allowHierarchicalFields) {\r\n    var items = [];\r\n    for (var i = 0; i < fields.length; i++) {\r\n        var item = extend(true, {\r\n            caption: generateCaptionByDataField(fields[i].dataField, allowHierarchicalFields)\r\n        }, fields[i]);\r\n        item.id = item.name || item.dataField;\r\n        if (allowHierarchicalFields) {\r\n            pushItemAndCheckParent(fields, items, item)\r\n        } else {\r\n            items.push(item)\r\n        }\r\n    }\r\n    return items\r\n}\r\n\r\nfunction hasParent(dataField) {\r\n    return -1 !== dataField.lastIndexOf(\".\")\r\n}\r\n\r\nfunction getParentIdFromItemDataField(dataField) {\r\n    return dataField.substring(0, dataField.lastIndexOf(\".\"))\r\n}\r\nexport function getCaptionWithParents(item, plainItems) {\r\n    if (hasParent(item.dataField)) {\r\n        var parentId = getParentIdFromItemDataField(item.dataField);\r\n        for (var i = 0; i < plainItems.length; i++) {\r\n            if (plainItems[i].dataField === parentId) {\r\n                return getCaptionWithParents(plainItems[i], plainItems) + \".\" + item.caption\r\n            }\r\n        }\r\n    }\r\n    return item.caption\r\n}\r\nexport function updateConditionByOperation(condition, operation, customOperations) {\r\n    var customOperation = getCustomOperation(customOperations, operation);\r\n    if (customOperation) {\r\n        if (false === customOperation.hasValue) {\r\n            condition[1] = operation;\r\n            condition.length = 2\r\n        } else {\r\n            condition[1] = operation;\r\n            condition[2] = \"\"\r\n        }\r\n        return condition\r\n    }\r\n    if (\"isblank\" === operation) {\r\n        condition[1] = EQUAL_OPERATION;\r\n        condition[2] = null\r\n    } else if (\"isnotblank\" === operation) {\r\n        condition[1] = NOT_EQUAL_OPERATION;\r\n        condition[2] = null\r\n    } else {\r\n        customOperation = getCustomOperation(customOperations, condition[1]);\r\n        if (customOperation || 2 === condition.length || null === condition[2]) {\r\n            condition[2] = \"\"\r\n        }\r\n        condition[1] = operation\r\n    }\r\n    return condition\r\n}\r\nexport function getOperationValue(condition) {\r\n    var caption;\r\n    if (null === condition[2]) {\r\n        if (condition[1] === EQUAL_OPERATION) {\r\n            caption = \"isblank\"\r\n        } else {\r\n            caption = \"isnotblank\"\r\n        }\r\n    } else {\r\n        caption = condition[1]\r\n    }\r\n    return caption\r\n}\r\nexport function isValidCondition(condition) {\r\n    return \"\" !== condition[2]\r\n}\r\nexport function getMergedOperations(customOperations, betweenCaption, context) {\r\n    var result = extend(true, [], customOperations);\r\n    var betweenIndex = -1;\r\n    result.some((function(customOperation, index) {\r\n        if (\"between\" === customOperation.name) {\r\n            betweenIndex = index;\r\n            return true\r\n        }\r\n    }));\r\n    if (-1 !== betweenIndex) {\r\n        result[betweenIndex] = extend(getConfig(betweenCaption, context), result[betweenIndex])\r\n    } else {\r\n        result.unshift(getConfig(betweenCaption, context))\r\n    }\r\n    return result\r\n}\r\n\r\nfunction isMatchedCondition(filter, addedFilterDataField) {\r\n    return filter[0] === addedFilterDataField\r\n}\r\nexport function removeFieldConditionsFromFilter(filter, dataField) {\r\n    if (!filter || 0 === filter.length) {\r\n        return null\r\n    }\r\n    if (isCondition(filter)) {\r\n        var hasMatchedCondition = isMatchedCondition(filter, dataField);\r\n        return !hasMatchedCondition ? filter : null\r\n    } else {\r\n        return syncConditionIntoGroup(filter, [dataField], false)\r\n    }\r\n}\r\n\r\nfunction syncConditionIntoGroup(filter, addedFilter, canPush) {\r\n    var result = [];\r\n    filter.forEach((function(item) {\r\n        if (isCondition(item)) {\r\n            if (isMatchedCondition(item, addedFilter[0])) {\r\n                if (canPush) {\r\n                    result.push(addedFilter);\r\n                    canPush = false\r\n                } else {\r\n                    result.splice(result.length - 1, 1)\r\n                }\r\n            } else {\r\n                result.push(item)\r\n            }\r\n        } else {\r\n            (result.length || isGroup(item)) && result.push(item)\r\n        }\r\n    }));\r\n    if (0 === result.length) {\r\n        return null\r\n    }\r\n    if (canPush) {\r\n        result.push(AND_GROUP_OPERATION);\r\n        result.push(addedFilter)\r\n    }\r\n    return 1 === result.length ? result[0] : result\r\n}\r\nexport function syncFilters(filter, addedFilter) {\r\n    if (null === filter || 0 === filter.length) {\r\n        return addedFilter\r\n    }\r\n    if (isCondition(filter)) {\r\n        if (isMatchedCondition(filter, addedFilter[0])) {\r\n            return addedFilter\r\n        } else {\r\n            return [filter, AND_GROUP_OPERATION, addedFilter]\r\n        }\r\n    }\r\n    var groupValue = getGroupValue(filter);\r\n    if (groupValue !== AND_GROUP_OPERATION) {\r\n        return [addedFilter, \"and\", filter]\r\n    }\r\n    return syncConditionIntoGroup(filter, addedFilter, true)\r\n}\r\nexport function getMatchedConditions(filter, dataField) {\r\n    if (null === filter || 0 === filter.length) {\r\n        return []\r\n    }\r\n    if (isCondition(filter)) {\r\n        if (isMatchedCondition(filter, dataField)) {\r\n            return [filter]\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n    var groupValue = getGroupValue(filter);\r\n    if (groupValue !== AND_GROUP_OPERATION) {\r\n        return []\r\n    }\r\n    var result = filter.filter((function(item) {\r\n        return isCondition(item) && isMatchedCondition(item, dataField)\r\n    }));\r\n    return result\r\n}\r\nexport function filterHasField(filter, dataField) {\r\n    if (null === filter || 0 === filter.length) {\r\n        return false\r\n    }\r\n    if (isCondition(filter)) {\r\n        return filter[0] === dataField\r\n    }\r\n    return filter.some((function(item) {\r\n        return (isCondition(item) || isGroup(item)) && filterHasField(item, dataField)\r\n    }))\r\n}\r\nexport var renderValueText = function($container, value, customOperation) {\r\n    if (Array.isArray(value)) {\r\n        var lastItemIndex = value.length - 1;\r\n        $container.empty();\r\n        value.forEach((t, i) => {\r\n            $(\"<span>\").addClass(FILTER_BUILDER_ITEM_TEXT_PART_CLASS).text(t).appendTo($container);\r\n            if (i !== lastItemIndex) {\r\n                $(\"<span>\").addClass(FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS).text(customOperation && customOperation.valueSeparator ? customOperation.valueSeparator : \"|\").addClass(FILTER_BUILDER_ITEM_TEXT_SEPARATOR_EMPTY_CLASS).appendTo($container)\r\n            }\r\n        })\r\n    } else if (value) {\r\n        $container.text(value)\r\n    } else {\r\n        $container.text(messageLocalization.format(\"dxFilterBuilder-enterValueText\"))\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_custom_operations.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    DataSource\r\n} from \"../../data/data_source/data_source\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isGroup,\r\n    isCondition,\r\n    getFilterExpression,\r\n    renderValueText\r\n} from \"../filter_builder/utils\";\r\nimport errors from \"../widget/ui.errors\";\r\n\r\nfunction baseOperation(grid) {\r\n    var getFullText = function(itemText, parentText) {\r\n        return parentText ? parentText + \"/\" + itemText : itemText\r\n    };\r\n    var headerFilterController = grid && grid.getController(\"headerFilter\");\r\n    return {\r\n        dataTypes: [\"string\", \"date\", \"datetime\", \"number\", \"boolean\", \"object\"],\r\n        calculateFilterExpression: function(filterValue, field, fields) {\r\n            var result = [];\r\n            var lastIndex = filterValue.length - 1;\r\n            filterValue && filterValue.forEach((function(value, index) {\r\n                if (isCondition(value) || isGroup(value)) {\r\n                    var filterExpression = getFilterExpression(value, fields, [], \"headerFilter\");\r\n                    result.push(filterExpression)\r\n                } else {\r\n                    result.push(getFilterExpression([field.dataField, \"=\", value], fields, [], \"headerFilter\"))\r\n                }\r\n                index !== lastIndex && result.push(\"or\")\r\n            }));\r\n            if (1 === result.length) {\r\n                result = result[0]\r\n            }\r\n            return result\r\n        },\r\n        editorTemplate: function(conditionInfo, container) {\r\n            var div = $(\"<div>\").addClass(\"dx-filterbuilder-item-value-text\").appendTo(container);\r\n            var column = extend(true, {}, grid.columnOption(conditionInfo.field.dataField));\r\n            renderValueText(div, conditionInfo.text && conditionInfo.text.split(\"|\"));\r\n            column.filterType = \"include\";\r\n            column.filterValues = conditionInfo.value ? conditionInfo.value.slice() : [];\r\n            headerFilterController.showHeaderFilterMenuBase({\r\n                columnElement: div,\r\n                column: column,\r\n                apply: function() {\r\n                    value = this.filterValues, void conditionInfo.setValue(value);\r\n                    var value;\r\n                    headerFilterController.hideHeaderFilterMenu();\r\n                    conditionInfo.closeEditor()\r\n                },\r\n                onHidden: function() {\r\n                    conditionInfo.closeEditor()\r\n                },\r\n                isFilterBuilder: true\r\n            });\r\n            return container\r\n        },\r\n        customizeText: function(fieldInfo, options) {\r\n            options = options || {};\r\n            var value = fieldInfo.value;\r\n            var column = grid.columnOption(fieldInfo.field.dataField);\r\n            var headerFilter = column && column.headerFilter;\r\n            var lookup = column && column.lookup;\r\n            var values = options.values || [value];\r\n            if (headerFilter && headerFilter.dataSource || lookup && lookup.dataSource) {\r\n                var result = new Deferred;\r\n                var itemsDeferred = options.items || new Deferred;\r\n                if (!options.items) {\r\n                    column = extend({}, column, {\r\n                        filterType: \"include\",\r\n                        filterValues: values\r\n                    });\r\n                    var dataSourceOptions = headerFilterController.getDataSource(column);\r\n                    dataSourceOptions.paginate = false;\r\n                    var dataSource = new DataSource(dataSourceOptions);\r\n                    var key = dataSource.store().key();\r\n                    if (key) {\r\n                        var {\r\n                            values: _values\r\n                        } = options;\r\n                        if (_values && _values.length > 1) {\r\n                            var filter = _values.reduce((result, value) => {\r\n                                if (result.length) {\r\n                                    result.push(\"or\")\r\n                                }\r\n                                result.push([key, \"=\", value]);\r\n                                return result\r\n                            }, []);\r\n                            dataSource.filter(filter)\r\n                        } else {\r\n                            dataSource.filter([key, \"=\", fieldInfo.value])\r\n                        }\r\n                    } else if (fieldInfo.field.calculateDisplayValue) {\r\n                        errors.log(\"W1017\")\r\n                    }\r\n                    options.items = itemsDeferred;\r\n                    dataSource.load().done(itemsDeferred.resolve)\r\n                }\r\n                itemsDeferred.done(items => {\r\n                    var index = values.indexOf(fieldInfo.value);\r\n                    result.resolve(function getSelectedItemsTexts(items, parentText) {\r\n                        var result = [];\r\n                        items.forEach((function(item) {\r\n                            if (item.items) {\r\n                                var selectedItemsTexts = getSelectedItemsTexts(item.items, getFullText(item.text, parentText));\r\n                                result = result.concat(selectedItemsTexts)\r\n                            }\r\n                            item.selected && result.push(getFullText(item.text, parentText))\r\n                        }));\r\n                        return result\r\n                    }(items)[index])\r\n                });\r\n                return result\r\n            } else {\r\n                var text = headerFilterController.getHeaderItemText(value, column, 0, grid.option(\"headerFilter\"));\r\n                return text\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function anyOf(grid) {\r\n    return extend(baseOperation(grid), {\r\n        name: \"anyof\",\r\n        icon: \"selectall\",\r\n        caption: messageLocalization.format(\"dxFilterBuilder-filterOperationAnyOf\")\r\n    })\r\n}\r\nexport function noneOf(grid) {\r\n    var baseOp = baseOperation(grid);\r\n    return extend({}, baseOp, {\r\n        calculateFilterExpression: function(filterValue, field, fields) {\r\n            var baseFilter = baseOp.calculateFilterExpression(filterValue, field, fields);\r\n            if (!baseFilter || 0 === baseFilter.length) {\r\n                return null\r\n            }\r\n            return \"!\" === baseFilter[0] ? baseFilter : [\"!\", baseFilter]\r\n        },\r\n        name: \"noneof\",\r\n        icon: \"unselectall\",\r\n        caption: messageLocalization.format(\"dxFilterBuilder-filterOperationNoneOf\")\r\n    })\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_sync.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    getDefaultOperation,\r\n    getMatchedConditions,\r\n    syncFilters,\r\n    removeFieldConditionsFromFilter,\r\n    addItem,\r\n    getNormalizedFilter,\r\n    getFilterExpression,\r\n    filterHasField\r\n} from \"../filter_builder/utils\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport filterUtils from \"../shared/filtering\";\r\nimport {\r\n    anyOf,\r\n    noneOf\r\n} from \"./ui.grid_core.filter_custom_operations\";\r\nvar FILTER_ROW_OPERATIONS = [\"=\", \"<>\", \"<\", \"<=\", \">\", \">=\", \"notcontains\", \"contains\", \"startswith\", \"endswith\", \"between\"];\r\nvar FILTER_TYPES_INCLUDE = \"include\";\r\nvar FILTER_TYPES_EXCLUDE = \"exclude\";\r\n\r\nfunction getColumnIdentifier(column) {\r\n    return column.name || column.dataField\r\n}\r\n\r\nfunction checkForErrors(columns) {\r\n    columns.forEach(column => {\r\n        var identifier = getColumnIdentifier(column);\r\n        if (!isDefined(identifier) && column.allowFiltering) {\r\n            throw new errors.Error(\"E1049\", column.caption)\r\n        }\r\n    })\r\n}\r\nvar FilterSyncController = modules.Controller.inherit(function() {\r\n    var getEmptyFilterValues = function() {\r\n        return {\r\n            filterType: FILTER_TYPES_INCLUDE,\r\n            filterValues: void 0\r\n        }\r\n    };\r\n    var canSyncHeaderFilterWithFilterRow = function(column) {\r\n        var filterValues = column.filterValues || [];\r\n        return !filterUtils.getGroupInterval(column) && !(column.headerFilter && column.headerFilter.dataSource) || 1 === filterValues.length && null === filterValues[0]\r\n    };\r\n    var getConditionFromFilterRow = function(column) {\r\n        var value = column.filterValue;\r\n        if (isDefined(value)) {\r\n            var operation = column.selectedFilterOperation || column.defaultFilterOperation || getDefaultOperation(column);\r\n            var filter = [getColumnIdentifier(column), operation, column.filterValue];\r\n            return filter\r\n        } else {\r\n            return null\r\n        }\r\n    };\r\n    var getConditionFromHeaderFilter = function(column) {\r\n        var selectedOperation;\r\n        var value;\r\n        var filterValues = column.filterValues;\r\n        if (!filterValues) {\r\n            return null\r\n        }\r\n        if (1 === filterValues.length && canSyncHeaderFilterWithFilterRow(column) && !Array.isArray(filterValues[0])) {\r\n            column.filterType === FILTER_TYPES_EXCLUDE ? selectedOperation = \"<>\" : selectedOperation = \"=\";\r\n            value = filterValues[0]\r\n        } else {\r\n            column.filterType === FILTER_TYPES_EXCLUDE ? selectedOperation = \"noneof\" : selectedOperation = \"anyof\";\r\n            value = filterValues\r\n        }\r\n        return [getColumnIdentifier(column), selectedOperation, value]\r\n    };\r\n    var updateHeaderFilterCondition = function(columnsController, column, headerFilterCondition) {\r\n        var headerFilter = function(headerFilterCondition, column) {\r\n            if (!headerFilterCondition) {\r\n                return getEmptyFilterValues()\r\n            }\r\n            var filterType;\r\n            var selectedFilterOperation = headerFilterCondition[1];\r\n            var value = headerFilterCondition[2];\r\n            var hasArrayValue = Array.isArray(value);\r\n            if (!hasArrayValue) {\r\n                if (!canSyncHeaderFilterWithFilterRow(column)) {\r\n                    return getEmptyFilterValues()\r\n                }\r\n            }\r\n            switch (selectedFilterOperation) {\r\n                case \"anyof\":\r\n                case \"=\":\r\n                    filterType = FILTER_TYPES_INCLUDE;\r\n                    break;\r\n                case \"noneof\":\r\n                case \"<>\":\r\n                    filterType = FILTER_TYPES_EXCLUDE;\r\n                    break;\r\n                default:\r\n                    return getEmptyFilterValues()\r\n            }\r\n            return {\r\n                filterType: filterType,\r\n                filterValues: hasArrayValue ? value : [value]\r\n            }\r\n        }(headerFilterCondition, column);\r\n        columnsController.columnOption(getColumnIdentifier(column), headerFilter)\r\n    };\r\n    var updateFilterRowCondition = function(columnsController, column, condition) {\r\n        var filterRowOptions;\r\n        var selectedFilterOperation = null === condition || void 0 === condition ? void 0 : condition[1];\r\n        var filterValue = null === condition || void 0 === condition ? void 0 : condition[2];\r\n        var filterOperations = column.filterOperations || column.defaultFilterOperations;\r\n        if ((!filterOperations || filterOperations.indexOf(selectedFilterOperation) >= 0 || selectedFilterOperation === column.defaultFilterOperation) && FILTER_ROW_OPERATIONS.indexOf(selectedFilterOperation) >= 0 && null !== filterValue) {\r\n            if (selectedFilterOperation === column.defaultFilterOperation && !isDefined(column.selectedFilterOperation)) {\r\n                selectedFilterOperation = column.selectedFilterOperation\r\n            }\r\n            filterRowOptions = {\r\n                filterValue: filterValue,\r\n                selectedFilterOperation: selectedFilterOperation\r\n            }\r\n        } else {\r\n            filterRowOptions = {\r\n                filterValue: void 0,\r\n                selectedFilterOperation: void 0\r\n            }\r\n        }\r\n        columnsController.columnOption(getColumnIdentifier(column), filterRowOptions)\r\n    };\r\n    return {\r\n        syncFilterValue: function() {\r\n            var that = this;\r\n            var columnsController = that.getController(\"columns\");\r\n            var columns = columnsController.getFilteringColumns();\r\n            this._skipSyncColumnOptions = true;\r\n            columns.forEach((function(column) {\r\n                var filterConditions = getMatchedConditions(that.option(\"filterValue\"), getColumnIdentifier(column));\r\n                if (1 === filterConditions.length) {\r\n                    var filterCondition = filterConditions[0];\r\n                    updateHeaderFilterCondition(columnsController, column, filterCondition);\r\n                    updateFilterRowCondition(columnsController, column, filterCondition)\r\n                } else {\r\n                    isDefined(column.filterValues) && updateHeaderFilterCondition(columnsController, column);\r\n                    isDefined(column.filterValue) && updateFilterRowCondition(columnsController, column)\r\n                }\r\n            }));\r\n            this._skipSyncColumnOptions = false\r\n        },\r\n        _initSync: function() {\r\n            var columns = this.getController(\"columns\").getColumns();\r\n            var dataController = this.getController(\"data\");\r\n            var pageIndex = dataController.pageIndex();\r\n            checkForErrors(columns);\r\n            if (!this.option(\"filterValue\")) {\r\n                var filteringColumns = this.getController(\"columns\").getFilteringColumns();\r\n                var filterValue = this.getFilterValueFromColumns(filteringColumns);\r\n                this.option(\"filterValue\", filterValue)\r\n            }\r\n            this.syncFilterValue();\r\n            dataController.pageIndex(pageIndex)\r\n        },\r\n        init: function() {\r\n            var dataController = this.getController(\"data\");\r\n            if (dataController.isFilterSyncActive()) {\r\n                if (this.getController(\"columns\").isAllDataTypesDefined()) {\r\n                    this._initSync()\r\n                } else {\r\n                    dataController.dataSourceChanged.add(() => this._initSync())\r\n                }\r\n            }\r\n        },\r\n        _getSyncFilterRow: function(filterValue, column) {\r\n            var filter = getConditionFromFilterRow(column);\r\n            if (isDefined(filter)) {\r\n                return syncFilters(filterValue, filter)\r\n            } else {\r\n                return removeFieldConditionsFromFilter(filterValue, getColumnIdentifier(column))\r\n            }\r\n        },\r\n        _getSyncHeaderFilter: function(filterValue, column) {\r\n            var filter = getConditionFromHeaderFilter(column);\r\n            if (filter) {\r\n                return syncFilters(filterValue, filter)\r\n            } else {\r\n                return removeFieldConditionsFromFilter(filterValue, getColumnIdentifier(column))\r\n            }\r\n        },\r\n        getFilterValueFromColumns: function(columns) {\r\n            if (!this.getController(\"data\").isFilterSyncActive()) {\r\n                return null\r\n            }\r\n            var filterValue = [\"and\"];\r\n            columns && columns.forEach(column => {\r\n                var headerFilter = getConditionFromHeaderFilter(column);\r\n                var filterRow = getConditionFromFilterRow(column);\r\n                headerFilter && addItem(headerFilter, filterValue);\r\n                filterRow && addItem(filterRow, filterValue)\r\n            });\r\n            return getNormalizedFilter(filterValue)\r\n        },\r\n        syncFilterRow: function(column, value) {\r\n            this.option(\"filterValue\", this._getSyncFilterRow(this.option(\"filterValue\"), column))\r\n        },\r\n        syncHeaderFilter: function(column) {\r\n            this.option(\"filterValue\", this._getSyncHeaderFilter(this.option(\"filterValue\"), column))\r\n        },\r\n        getCustomFilterOperations: function() {\r\n            var filterBuilderCustomOperations = this.option(\"filterBuilder.customOperations\") || [];\r\n            return [anyOf(this.component), noneOf(this.component)].concat(filterBuilderCustomOperations)\r\n        },\r\n        publicMethods: function() {\r\n            return [\"getCustomFilterOperations\"]\r\n        }\r\n    }\r\n}());\r\nvar DataControllerFilterSyncExtender = {\r\n    isFilterSyncActive: function() {\r\n        var filterSyncEnabledValue = this.option(\"filterSyncEnabled\");\r\n        return \"auto\" === filterSyncEnabledValue ? this.option(\"filterPanel.visible\") : filterSyncEnabledValue\r\n    },\r\n    skipCalculateColumnFilters: function() {\r\n        return isDefined(this.option(\"filterValue\")) && this.isFilterSyncActive()\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        if (false === this.option(\"filterPanel.filterEnabled\")) {\r\n            return this.callBase()\r\n        }\r\n        var filters = [this.callBase()];\r\n        var columns = this.getController(\"columns\").getFilteringColumns();\r\n        var filterValue = this.option(\"filterValue\");\r\n        if (this.isFilterSyncActive()) {\r\n            var currentColumn = this.getController(\"headerFilter\").getCurrentColumn();\r\n            if (currentColumn && filterValue) {\r\n                filterValue = removeFieldConditionsFromFilter(filterValue, getColumnIdentifier(currentColumn))\r\n            }\r\n        }\r\n        var customOperations = this.getController(\"filterSync\").getCustomFilterOperations();\r\n        var calculatedFilterValue = getFilterExpression(filterValue, columns, customOperations, \"filterBuilder\");\r\n        if (calculatedFilterValue) {\r\n            filters.push(calculatedFilterValue)\r\n        }\r\n        return gridCoreUtils.combineFilters(filters)\r\n    },\r\n    _parseColumnPropertyName: function(fullName) {\r\n        var matched = fullName.match(/.*\\.(.*)/);\r\n        if (matched) {\r\n            return matched[1]\r\n        } else {\r\n            return null\r\n        }\r\n    },\r\n    clearFilter: function(filterName) {\r\n        this.component.beginUpdate();\r\n        if (arguments.length > 0) {\r\n            if (\"filterValue\" === filterName) {\r\n                this.option(\"filterValue\", null)\r\n            }\r\n            this.callBase(filterName)\r\n        } else {\r\n            this.option(\"filterValue\", null);\r\n            this.callBase()\r\n        }\r\n        this.component.endUpdate()\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"filterValue\":\r\n                this._applyFilter();\r\n                this.isFilterSyncActive() && this.getController(\"filterSync\").syncFilterValue();\r\n                args.handled = true;\r\n                break;\r\n            case \"filterSyncEnabled\":\r\n                args.handled = true;\r\n                break;\r\n            case \"columns\":\r\n                if (this.isFilterSyncActive()) {\r\n                    var column = this.getController(\"columns\").getColumnByPath(args.fullName);\r\n                    var filterSyncController = this.getController(\"filterSync\");\r\n                    if (column && !filterSyncController._skipSyncColumnOptions) {\r\n                        var propertyName = this._parseColumnPropertyName(args.fullName);\r\n                        filterSyncController._skipSyncColumnOptions = true;\r\n                        if (\"filterType\" === propertyName) {\r\n                            if (FILTER_TYPES_EXCLUDE === args.value || FILTER_TYPES_EXCLUDE === args.previousValue) {\r\n                                filterSyncController.syncHeaderFilter(column)\r\n                            }\r\n                        } else if (\"filterValues\" === propertyName) {\r\n                            filterSyncController.syncHeaderFilter(column)\r\n                        } else if ([\"filterValue\", \"selectedFilterOperation\"].indexOf(propertyName) > -1) {\r\n                            filterSyncController.syncFilterRow(column, column.filterValue)\r\n                        }\r\n                        filterSyncController._skipSyncColumnOptions = false\r\n                    }\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n};\r\nvar ColumnHeadersViewFilterSyncExtender = {\r\n    _isHeaderFilterEmpty: function(column) {\r\n        if (this.getController(\"data\").isFilterSyncActive()) {\r\n            return !filterHasField(this.option(\"filterValue\"), getColumnIdentifier(column))\r\n        }\r\n        return this.callBase(column)\r\n    },\r\n    _needUpdateFilterIndicators: function() {\r\n        return !this.getController(\"data\").isFilterSyncActive()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"filterValue\" === args.name) {\r\n            this._updateHeaderFilterIndicators()\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    }\r\n};\r\nexport var filterSyncModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterValue: null,\r\n            filterSyncEnabled: \"auto\"\r\n        }\r\n    },\r\n    controllers: {\r\n        filterSync: FilterSyncController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterSyncExtender\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFilterSyncExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.filter_sync.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    filterSyncModule\r\n} from \"../grid_core/ui.grid_core.filter_sync\";\r\ncore.registerModule(\"filterSync\", filterSyncModule);\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder/filter_builder.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport Class from \"../../core/class\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport TreeView from \"../tree_view\";\r\nimport Popup from \"../popup\";\r\nimport {\r\n    getElementMaxHeightByWindow\r\n} from \"../overlay/utils\";\r\nimport EditorFactoryMixin from \"../shared/ui.editor_factory_mixin\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    renderValueText,\r\n    getFilterExpression as _getFilterExpression,\r\n    getNormalizedFilter,\r\n    getNormalizedFields,\r\n    getMergedOperations,\r\n    convertToInnerStructure,\r\n    getGroupCriteria,\r\n    isGroup,\r\n    isCondition,\r\n    removeItem,\r\n    createEmptyGroup,\r\n    addItem,\r\n    createCondition,\r\n    getGroupMenuItem,\r\n    setGroupValue,\r\n    getCustomOperation,\r\n    getAvailableOperations,\r\n    getOperationFromAvailable,\r\n    getOperationValue,\r\n    updateConditionByOperation,\r\n    getItems,\r\n    getField,\r\n    getCaptionWithParents,\r\n    getDefaultOperation,\r\n    getGroupValue,\r\n    getCurrentLookupValueText,\r\n    getCurrentValueText\r\n} from \"./utils\";\r\nvar FILTER_BUILDER_CLASS = \"dx-filterbuilder\";\r\nvar FILTER_BUILDER_GROUP_CLASS = FILTER_BUILDER_CLASS + \"-group\";\r\nvar FILTER_BUILDER_GROUP_ITEM_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-item\";\r\nvar FILTER_BUILDER_GROUP_CONTENT_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-content\";\r\nvar FILTER_BUILDER_GROUP_OPERATIONS_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-operations\";\r\nvar FILTER_BUILDER_GROUP_OPERATION_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-operation\";\r\nvar FILTER_BUILDER_ACTION_CLASS = FILTER_BUILDER_CLASS + \"-action\";\r\nvar FILTER_BUILDER_IMAGE_CLASS = FILTER_BUILDER_ACTION_CLASS + \"-icon\";\r\nvar FILTER_BUILDER_IMAGE_ADD_CLASS = \"dx-icon-plus\";\r\nvar FILTER_BUILDER_IMAGE_REMOVE_CLASS = \"dx-icon-remove\";\r\nvar FILTER_BUILDER_ITEM_TEXT_CLASS = FILTER_BUILDER_CLASS + \"-text\";\r\nvar FILTER_BUILDER_ITEM_FIELD_CLASS = FILTER_BUILDER_CLASS + \"-item-field\";\r\nvar FILTER_BUILDER_ITEM_OPERATION_CLASS = FILTER_BUILDER_CLASS + \"-item-operation\";\r\nvar FILTER_BUILDER_ITEM_VALUE_CLASS = FILTER_BUILDER_CLASS + \"-item-value\";\r\nvar FILTER_BUILDER_ITEM_VALUE_TEXT_CLASS = FILTER_BUILDER_CLASS + \"-item-value-text\";\r\nvar FILTER_BUILDER_OVERLAY_CLASS = FILTER_BUILDER_CLASS + \"-overlay\";\r\nvar FILTER_BUILDER_FILTER_OPERATIONS_CLASS = FILTER_BUILDER_CLASS + \"-operations\";\r\nvar FILTER_BUILDER_FIELDS_CLASS = FILTER_BUILDER_CLASS + \"-fields\";\r\nvar FILTER_BUILDER_ADD_CONDITION_CLASS = FILTER_BUILDER_CLASS + \"-add-condition\";\r\nvar ACTIVE_CLASS = \"dx-state-active\";\r\nvar FILTER_BUILDER_MENU_CUSTOM_OPERATION_CLASS = FILTER_BUILDER_CLASS + \"-menu-custom-operation\";\r\nvar SOURCE = \"filterBuilder\";\r\nvar DISABLED_STATE_CLASS = \"dx-state-disabled\";\r\nvar TAB_KEY = \"tab\";\r\nvar ENTER_KEY = \"enter\";\r\nvar ESCAPE_KEY = \"escape\";\r\nvar ACTIONS = [{\r\n    name: \"onEditorPreparing\",\r\n    config: {\r\n        excludeValidators: [\"disabled\", \"readOnly\"],\r\n        category: \"rendering\"\r\n    }\r\n}, {\r\n    name: \"onEditorPrepared\",\r\n    config: {\r\n        excludeValidators: [\"disabled\", \"readOnly\"],\r\n        category: \"rendering\"\r\n    }\r\n}, {\r\n    name: \"onValueChanged\",\r\n    config: {\r\n        excludeValidators: [\"disabled\", \"readOnly\"]\r\n    }\r\n}];\r\nvar OPERATORS = {\r\n    and: \"and\",\r\n    or: \"or\",\r\n    notAnd: \"!and\",\r\n    notOr: \"!or\"\r\n};\r\nvar EditorFactory = Class.inherit(EditorFactoryMixin);\r\nvar FilterBuilder = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            onEditorPreparing: null,\r\n            onEditorPrepared: null,\r\n            onValueChanged: null,\r\n            fields: [],\r\n            groupOperations: [\"and\", \"or\", \"notAnd\", \"notOr\"],\r\n            maxGroupLevel: void 0,\r\n            value: null,\r\n            allowHierarchicalFields: false,\r\n            groupOperationDescriptions: {\r\n                and: messageLocalization.format(\"dxFilterBuilder-and\"),\r\n                or: messageLocalization.format(\"dxFilterBuilder-or\"),\r\n                notAnd: messageLocalization.format(\"dxFilterBuilder-notAnd\"),\r\n                notOr: messageLocalization.format(\"dxFilterBuilder-notOr\")\r\n            },\r\n            customOperations: [],\r\n            closePopupOnTargetScroll: true,\r\n            filterOperationDescriptions: {\r\n                between: messageLocalization.format(\"dxFilterBuilder-filterOperationBetween\"),\r\n                equal: messageLocalization.format(\"dxFilterBuilder-filterOperationEquals\"),\r\n                notEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationNotEquals\"),\r\n                lessThan: messageLocalization.format(\"dxFilterBuilder-filterOperationLess\"),\r\n                lessThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationLessOrEquals\"),\r\n                greaterThan: messageLocalization.format(\"dxFilterBuilder-filterOperationGreater\"),\r\n                greaterThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationGreaterOrEquals\"),\r\n                startsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationStartsWith\"),\r\n                contains: messageLocalization.format(\"dxFilterBuilder-filterOperationContains\"),\r\n                notContains: messageLocalization.format(\"dxFilterBuilder-filterOperationNotContains\"),\r\n                endsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationEndsWith\"),\r\n                isBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsBlank\"),\r\n                isNotBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\r\n            }\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"closePopupOnTargetScroll\":\r\n                break;\r\n            case \"onEditorPreparing\":\r\n            case \"onEditorPrepared\":\r\n            case \"onValueChanged\":\r\n                this._initActions();\r\n                break;\r\n            case \"customOperations\":\r\n                this._initCustomOperations();\r\n                this._invalidate();\r\n                break;\r\n            case \"fields\":\r\n            case \"maxGroupLevel\":\r\n            case \"groupOperations\":\r\n            case \"allowHierarchicalFields\":\r\n            case \"groupOperationDescriptions\":\r\n            case \"filterOperationDescriptions\":\r\n                this._invalidate();\r\n                break;\r\n            case \"value\":\r\n                if (args.value !== args.previousValue) {\r\n                    var disableInvalidateForValue = this._disableInvalidateForValue;\r\n                    if (!disableInvalidateForValue) {\r\n                        this._initModel();\r\n                        this._invalidate()\r\n                    }\r\n                    this._disableInvalidateForValue = false;\r\n                    this.executeAction(\"onValueChanged\", {\r\n                        value: args.value,\r\n                        previousValue: args.previousValue\r\n                    });\r\n                    this._disableInvalidateForValue = disableInvalidateForValue\r\n                }\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    getFilterExpression: function() {\r\n        var fields = this._getNormalizedFields();\r\n        var value = extend(true, [], this._model);\r\n        return _getFilterExpression(getNormalizedFilter(value), fields, this._customOperations, SOURCE)\r\n    },\r\n    _getNormalizedFields: function() {\r\n        return getNormalizedFields(this.option(\"fields\"))\r\n    },\r\n    _updateFilter: function() {\r\n        this._disableInvalidateForValue = true;\r\n        var value = extend(true, [], this._model);\r\n        var normalizedValue = getNormalizedFilter(value);\r\n        var oldValue = getNormalizedFilter(this._getModel(this.option(\"value\")));\r\n        if (JSON.stringify(oldValue) !== JSON.stringify(normalizedValue)) {\r\n            this.option(\"value\", normalizedValue)\r\n        }\r\n        this._disableInvalidateForValue = false;\r\n        this._fireContentReadyAction()\r\n    },\r\n    _init: function() {\r\n        this._initCustomOperations();\r\n        this._initModel();\r\n        this._initEditorFactory();\r\n        this._initActions();\r\n        this.callBase()\r\n    },\r\n    _initEditorFactory: function() {\r\n        this._editorFactory = new EditorFactory\r\n    },\r\n    _initCustomOperations: function() {\r\n        this._customOperations = getMergedOperations(this.option(\"customOperations\"), this.option(\"filterOperationDescriptions.between\"), this)\r\n    },\r\n    _getDefaultGroupOperation: function() {\r\n        var _this$option$, _this$option;\r\n        return null !== (_this$option$ = null === (_this$option = this.option(\"groupOperations\")) || void 0 === _this$option ? void 0 : _this$option[0]) && void 0 !== _this$option$ ? _this$option$ : OPERATORS.and\r\n    },\r\n    _getModel: function(value) {\r\n        return convertToInnerStructure(value, this._customOperations, this._getDefaultGroupOperation())\r\n    },\r\n    _initModel: function() {\r\n        this._model = this._getModel(this.option(\"value\"))\r\n    },\r\n    _initActions: function() {\r\n        var that = this;\r\n        that._actions = {};\r\n        ACTIONS.forEach((function(action) {\r\n            var actionConfig = extend({}, action.config);\r\n            that._actions[action.name] = that._createActionByOption(action.name, actionConfig)\r\n        }))\r\n    },\r\n    executeAction: function(actionName, options) {\r\n        var action = this._actions[actionName];\r\n        return action && action(options)\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(FILTER_BUILDER_CLASS);\r\n        this.callBase();\r\n        this._createGroupElementByCriteria(this._model).appendTo(this.$element())\r\n    },\r\n    _createConditionElement: function(condition, parent) {\r\n        return $(\"<div>\").addClass(FILTER_BUILDER_GROUP_CLASS).append(this._createConditionItem(condition, parent))\r\n    },\r\n    _createGroupElementByCriteria: function(criteria, parent) {\r\n        var groupLevel = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;\r\n        var $group = this._createGroupElement(criteria, parent, groupLevel);\r\n        var $groupContent = $group.find(\".\" + FILTER_BUILDER_GROUP_CONTENT_CLASS);\r\n        var groupCriteria = getGroupCriteria(criteria);\r\n        for (var i = 0; i < groupCriteria.length; i++) {\r\n            var innerCriteria = groupCriteria[i];\r\n            if (isGroup(innerCriteria)) {\r\n                this._createGroupElementByCriteria(innerCriteria, criteria, groupLevel + 1).appendTo($groupContent)\r\n            } else if (isCondition(innerCriteria)) {\r\n                this._createConditionElement(innerCriteria, criteria).appendTo($groupContent)\r\n            }\r\n        }\r\n        return $group\r\n    },\r\n    _createGroupElement: function(criteria, parent, groupLevel) {\r\n        var $groupItem = $(\"<div>\").addClass(FILTER_BUILDER_GROUP_ITEM_CLASS);\r\n        var $groupContent = $(\"<div>\").addClass(FILTER_BUILDER_GROUP_CONTENT_CLASS);\r\n        var $group = $(\"<div>\").addClass(FILTER_BUILDER_GROUP_CLASS).append($groupItem).append($groupContent);\r\n        if (null != parent) {\r\n            this._createRemoveButton(() => {\r\n                removeItem(parent, criteria);\r\n                $group.remove();\r\n                this._updateFilter()\r\n            }).appendTo($groupItem)\r\n        }\r\n        this._createGroupOperationButton(criteria).appendTo($groupItem);\r\n        this._createAddButton(() => {\r\n            var newGroup = createEmptyGroup(this._getDefaultGroupOperation());\r\n            addItem(newGroup, criteria);\r\n            this._createGroupElement(newGroup, criteria, groupLevel + 1).appendTo($groupContent);\r\n            this._updateFilter()\r\n        }, () => {\r\n            var field = this.option(\"fields\")[0];\r\n            var newCondition = createCondition(field, this._customOperations);\r\n            addItem(newCondition, criteria);\r\n            this._createConditionElement(newCondition, criteria).appendTo($groupContent);\r\n            this._updateFilter()\r\n        }, groupLevel).appendTo($groupItem);\r\n        return $group\r\n    },\r\n    _createButton: function(caption) {\r\n        return $(\"<div>\").text(caption)\r\n    },\r\n    _createGroupOperationButton: function(criteria) {\r\n        var groupOperations = this._getGroupOperations(criteria);\r\n        var groupMenuItem = getGroupMenuItem(criteria, groupOperations);\r\n        var caption = groupMenuItem.text;\r\n        var $operationButton = groupOperations && groupOperations.length < 2 ? this._createButton(caption).addClass(DISABLED_STATE_CLASS) : this._createButtonWithMenu({\r\n            caption: caption,\r\n            menu: {\r\n                items: groupOperations,\r\n                displayExpr: \"text\",\r\n                keyExpr: \"value\",\r\n                onItemClick: e => {\r\n                    if (groupMenuItem !== e.itemData) {\r\n                        setGroupValue(criteria, e.itemData.value);\r\n                        $operationButton.text(e.itemData.text);\r\n                        groupMenuItem = e.itemData;\r\n                        this._updateFilter()\r\n                    }\r\n                },\r\n                onContentReady: function(e) {\r\n                    e.component.selectItem(groupMenuItem)\r\n                },\r\n                cssClass: FILTER_BUILDER_GROUP_OPERATIONS_CLASS\r\n            }\r\n        });\r\n        return $operationButton.addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_GROUP_OPERATION_CLASS).attr(\"tabindex\", 0)\r\n    },\r\n    _createButtonWithMenu: function(options) {\r\n        var that = this;\r\n        var removeMenu = function() {\r\n            that.$element().find(\".\" + ACTIVE_CLASS).removeClass(ACTIVE_CLASS);\r\n            that.$element().find(\".dx-overlay .dx-treeview\").remove();\r\n            that.$element().find(\".dx-overlay\").remove()\r\n        };\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var position = rtlEnabled ? \"right\" : \"left\";\r\n        var $button = this._createButton(options.caption);\r\n        extend(options.menu, {\r\n            focusStateEnabled: true,\r\n            selectionMode: \"single\",\r\n            onItemClick: (handler = options.menu.onItemClick, function(e) {\r\n                handler(e);\r\n                if (\"dxclick\" === e.event.type) {\r\n                    removeMenu()\r\n                }\r\n            }),\r\n            onHiding: function(e) {\r\n                $button.removeClass(ACTIVE_CLASS)\r\n            },\r\n            position: {\r\n                my: position + \" top\",\r\n                at: position + \" bottom\",\r\n                offset: \"0 1\",\r\n                of: $button,\r\n                collision: \"flip\"\r\n            },\r\n            animation: null,\r\n            onHidden: function() {\r\n                removeMenu()\r\n            },\r\n            cssClass: FILTER_BUILDER_OVERLAY_CLASS + \" \" + options.menu.cssClass,\r\n            rtlEnabled: rtlEnabled\r\n        });\r\n        var handler;\r\n        options.popup = {\r\n            onShown: function(info) {\r\n                var treeViewElement = $(info.component.content()).find(\".dx-treeview\");\r\n                var treeView = treeViewElement.dxTreeView(\"instance\");\r\n                eventsEngine.on(treeViewElement, \"keyup keydown\", (function(e) {\r\n                    var keyName = normalizeKeyName(e);\r\n                    if (\"keydown\" === e.type && keyName === TAB_KEY || \"keyup\" === e.type && (keyName === ESCAPE_KEY || keyName === ENTER_KEY)) {\r\n                        info.component.hide();\r\n                        eventsEngine.trigger(options.menu.position.of, \"focus\")\r\n                    }\r\n                }));\r\n                treeView.focus();\r\n                treeView.option(\"focusedElement\", null)\r\n            }\r\n        };\r\n        this._subscribeOnClickAndEnterKey($button, (function() {\r\n            removeMenu();\r\n            that._createPopupWithTreeView(options, that.$element());\r\n            $button.addClass(ACTIVE_CLASS)\r\n        }));\r\n        return $button\r\n    },\r\n    _hasValueButton: function(condition) {\r\n        var customOperation = getCustomOperation(this._customOperations, condition[1]);\r\n        return customOperation ? false !== customOperation.hasValue : null !== condition[2]\r\n    },\r\n    _createOperationButtonWithMenu: function(condition, field) {\r\n        var that = this;\r\n        var availableOperations = getAvailableOperations(field, this.option(\"filterOperationDescriptions\"), this._customOperations);\r\n        var currentOperation = getOperationFromAvailable(getOperationValue(condition), availableOperations);\r\n        var $operationButton = this._createButtonWithMenu({\r\n            caption: currentOperation.text,\r\n            menu: {\r\n                items: availableOperations,\r\n                displayExpr: \"text\",\r\n                onItemRendered: function(e) {\r\n                    e.itemData.isCustom && $(e.itemElement).addClass(FILTER_BUILDER_MENU_CUSTOM_OPERATION_CLASS)\r\n                },\r\n                onContentReady: function(e) {\r\n                    e.component.selectItem(currentOperation)\r\n                },\r\n                onItemClick: e => {\r\n                    if (currentOperation !== e.itemData) {\r\n                        currentOperation = e.itemData;\r\n                        updateConditionByOperation(condition, currentOperation.value, that._customOperations);\r\n                        var $valueButton = $operationButton.siblings().filter(\".\" + FILTER_BUILDER_ITEM_VALUE_CLASS);\r\n                        if (that._hasValueButton(condition)) {\r\n                            if (0 !== $valueButton.length) {\r\n                                $valueButton.remove()\r\n                            }\r\n                            that._createValueButton(condition, field).appendTo($operationButton.parent())\r\n                        } else {\r\n                            $valueButton.remove()\r\n                        }\r\n                        $operationButton.html(currentOperation.text);\r\n                        this._updateFilter()\r\n                    }\r\n                },\r\n                cssClass: FILTER_BUILDER_FILTER_OPERATIONS_CLASS\r\n            }\r\n        }).addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_ITEM_OPERATION_CLASS).attr(\"tabindex\", 0);\r\n        return $operationButton\r\n    },\r\n    _createOperationAndValueButtons: function(condition, field, $item) {\r\n        this._createOperationButtonWithMenu(condition, field).appendTo($item);\r\n        if (this._hasValueButton(condition)) {\r\n            this._createValueButton(condition, field).appendTo($item)\r\n        }\r\n    },\r\n    _createFieldButtonWithMenu: function(fields, condition, field) {\r\n        var that = this;\r\n        var allowHierarchicalFields = this.option(\"allowHierarchicalFields\");\r\n        var items = getItems(fields, allowHierarchicalFields);\r\n        var item = getField(field.name || field.dataField, items);\r\n        var getFullCaption = function(item, items) {\r\n            return allowHierarchicalFields ? getCaptionWithParents(item, items) : item.caption\r\n        };\r\n        var $fieldButton = this._createButtonWithMenu({\r\n            caption: getFullCaption(item, items),\r\n            menu: {\r\n                items: items,\r\n                dataStructure: \"plain\",\r\n                keyExpr: \"id\",\r\n                parentId: \"parentId\",\r\n                displayExpr: \"caption\",\r\n                onItemClick: e => {\r\n                    if (item !== e.itemData) {\r\n                        item = e.itemData;\r\n                        condition[0] = item.name || item.dataField;\r\n                        condition[2] = \"object\" === item.dataType ? null : \"\";\r\n                        updateConditionByOperation(condition, getDefaultOperation(item), that._customOperations);\r\n                        $fieldButton.siblings().filter(\".\" + FILTER_BUILDER_ITEM_TEXT_CLASS).remove();\r\n                        that._createOperationAndValueButtons(condition, item, $fieldButton.parent());\r\n                        var caption = getFullCaption(item, e.component.option(\"items\"));\r\n                        $fieldButton.html(caption);\r\n                        this._updateFilter()\r\n                    }\r\n                },\r\n                onContentReady: function(e) {\r\n                    e.component.selectItem(item)\r\n                },\r\n                cssClass: FILTER_BUILDER_FIELDS_CLASS\r\n            }\r\n        }).addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_ITEM_FIELD_CLASS).attr(\"tabindex\", 0);\r\n        return $fieldButton\r\n    },\r\n    _createConditionItem: function(condition, parent) {\r\n        var $item = $(\"<div>\").addClass(FILTER_BUILDER_GROUP_ITEM_CLASS);\r\n        var fields = this._getNormalizedFields();\r\n        var field = getField(condition[0], fields);\r\n        this._createRemoveButton(() => {\r\n            removeItem(parent, condition);\r\n            var isSingleChild = 1 === $item.parent().children().length;\r\n            if (isSingleChild) {\r\n                $item.parent().remove()\r\n            } else {\r\n                $item.remove()\r\n            }\r\n            this._updateFilter()\r\n        }).appendTo($item);\r\n        this._createFieldButtonWithMenu(fields, condition, field).appendTo($item);\r\n        this._createOperationAndValueButtons(condition, field, $item);\r\n        return $item\r\n    },\r\n    _getGroupOperations: function(criteria) {\r\n        var groupOperations = this.option(\"groupOperations\");\r\n        var groupOperationDescriptions = this.option(\"groupOperationDescriptions\");\r\n        if (!groupOperations || !groupOperations.length) {\r\n            groupOperations = [getGroupValue(criteria).replace(\"!\", \"not\")]\r\n        }\r\n        return groupOperations.map(operation => ({\r\n            text: groupOperationDescriptions[operation],\r\n            value: OPERATORS[operation]\r\n        }))\r\n    },\r\n    _createRemoveButton: function(handler) {\r\n        var $removeButton = $(\"<div>\").addClass(FILTER_BUILDER_IMAGE_CLASS).addClass(FILTER_BUILDER_IMAGE_REMOVE_CLASS).addClass(FILTER_BUILDER_ACTION_CLASS).attr(\"tabindex\", 0);\r\n        this._subscribeOnClickAndEnterKey($removeButton, handler);\r\n        return $removeButton\r\n    },\r\n    _createAddButton: function(addGroupHandler, addConditionHandler, groupLevel) {\r\n        var $button;\r\n        var maxGroupLevel = this.option(\"maxGroupLevel\");\r\n        if (isDefined(maxGroupLevel) && groupLevel >= maxGroupLevel) {\r\n            $button = this._createButton();\r\n            this._subscribeOnClickAndEnterKey($button, addConditionHandler)\r\n        } else {\r\n            $button = this._createButtonWithMenu({\r\n                menu: {\r\n                    items: [{\r\n                        caption: messageLocalization.format(\"dxFilterBuilder-addCondition\"),\r\n                        click: addConditionHandler\r\n                    }, {\r\n                        caption: messageLocalization.format(\"dxFilterBuilder-addGroup\"),\r\n                        click: addGroupHandler\r\n                    }],\r\n                    displayExpr: \"caption\",\r\n                    onItemClick: function(e) {\r\n                        e.itemData.click()\r\n                    },\r\n                    cssClass: FILTER_BUILDER_ADD_CONDITION_CLASS\r\n                }\r\n            })\r\n        }\r\n        return $button.addClass(FILTER_BUILDER_IMAGE_CLASS).addClass(FILTER_BUILDER_IMAGE_ADD_CLASS).addClass(FILTER_BUILDER_ACTION_CLASS).attr(\"tabindex\", 0)\r\n    },\r\n    _createValueText: function(item, field, $container) {\r\n        var that = this;\r\n        var $text = $(\"<div>\").html(\"&nbsp;\").addClass(FILTER_BUILDER_ITEM_VALUE_TEXT_CLASS).attr(\"tabindex\", 0).appendTo($container);\r\n        var value = item[2];\r\n        var customOperation = getCustomOperation(that._customOperations, item[1]);\r\n        if (!customOperation && field.lookup) {\r\n            getCurrentLookupValueText(field, value, (function(result) {\r\n                renderValueText($text, result)\r\n            }))\r\n        } else {\r\n            when(getCurrentValueText(field, value, customOperation)).done(result => {\r\n                renderValueText($text, result, customOperation)\r\n            })\r\n        }\r\n        that._subscribeOnClickAndEnterKey($text, (function(e) {\r\n            if (\"keyup\" === e.type) {\r\n                e.stopPropagation()\r\n            }\r\n            that._createValueEditorWithEvents(item, field, $container)\r\n        }));\r\n        return $text\r\n    },\r\n    _updateConditionValue: function(item, value, callback) {\r\n        var areValuesDifferent = item[2] !== value;\r\n        if (areValuesDifferent) {\r\n            item[2] = value\r\n        }\r\n        callback();\r\n        this._updateFilter()\r\n    },\r\n    _addDocumentKeyUp: function($editor, handler) {\r\n        var isComposing = false;\r\n        var hasCompositionJustEnded = false;\r\n        var document = domAdapter.getDocument();\r\n        var documentKeyUpHandler = e => {\r\n            if (isComposing || hasCompositionJustEnded) {\r\n                hasCompositionJustEnded = false;\r\n                return\r\n            }\r\n            handler(e)\r\n        };\r\n        eventsEngine.on(document, \"keyup\", documentKeyUpHandler);\r\n        var input = $editor.find(\"input\");\r\n        eventsEngine.on(input, \"compositionstart\", () => {\r\n            isComposing = true\r\n        });\r\n        eventsEngine.on(input, \"compositionend\", () => {\r\n            isComposing = false;\r\n            hasCompositionJustEnded = true\r\n        });\r\n        eventsEngine.on(input, \"keydown\", event => {\r\n            if (229 !== event.which) {\r\n                hasCompositionJustEnded = false\r\n            }\r\n        });\r\n        this._documentKeyUpHandler = documentKeyUpHandler\r\n    },\r\n    _addDocumentClick: function($editor, closeEditorFunc) {\r\n        var document = domAdapter.getDocument();\r\n        var documentClickHandler = e => {\r\n            if (!this._isFocusOnEditorParts($editor, e.target)) {\r\n                eventsEngine.trigger($editor.find(\"input\"), \"change\");\r\n                closeEditorFunc()\r\n            }\r\n        };\r\n        eventsEngine.on(document, \"dxpointerdown\", documentClickHandler);\r\n        this._documentClickHandler = documentClickHandler\r\n    },\r\n    _isFocusOnEditorParts: function($editor, target) {\r\n        var activeElement = target || domAdapter.getActiveElement();\r\n        return $(activeElement).closest($editor.children()).length || $(activeElement).closest(\".dx-dropdowneditor-overlay\").length\r\n    },\r\n    _removeEvents: function() {\r\n        var document = domAdapter.getDocument();\r\n        isDefined(this._documentKeyUpHandler) && eventsEngine.off(document, \"keyup\", this._documentKeyUpHandler);\r\n        isDefined(this._documentClickHandler) && eventsEngine.off(document, \"dxpointerdown\", this._documentClickHandler)\r\n    },\r\n    _dispose: function() {\r\n        this._removeEvents();\r\n        this.callBase()\r\n    },\r\n    _createValueEditorWithEvents: function(item, field, $container) {\r\n        var value = item[2];\r\n        var createValueText = () => {\r\n            $container.empty();\r\n            this._removeEvents();\r\n            return this._createValueText(item, field, $container)\r\n        };\r\n        var closeEditor = () => {\r\n            this._updateConditionValue(item, value, (function() {\r\n                createValueText()\r\n            }))\r\n        };\r\n        var options = {\r\n            value: \"\" === value ? null : value,\r\n            filterOperation: getOperationValue(item),\r\n            setValue: function(data) {\r\n                value = null === data ? \"\" : data\r\n            },\r\n            closeEditor: closeEditor,\r\n            text: $container.text()\r\n        };\r\n        $container.empty();\r\n        var $editor = this._createValueEditor($container, field, options);\r\n        eventsEngine.trigger($editor.find(\"input\").not(\":hidden\").eq(0), \"focus\");\r\n        this._removeEvents();\r\n        this._addDocumentClick($editor, closeEditor);\r\n        this._addDocumentKeyUp($editor, e => {\r\n            var keyName = normalizeKeyName(e);\r\n            if (keyName === TAB_KEY) {\r\n                if (this._isFocusOnEditorParts($editor)) {\r\n                    return\r\n                }\r\n                this._updateConditionValue(item, value, (function() {\r\n                    createValueText();\r\n                    if (e.shiftKey) {\r\n                        eventsEngine.trigger($container.prev(), \"focus\")\r\n                    }\r\n                }))\r\n            }\r\n            if (keyName === ESCAPE_KEY) {\r\n                eventsEngine.trigger(createValueText(), \"focus\")\r\n            }\r\n            if (keyName === ENTER_KEY) {\r\n                this._updateConditionValue(item, value, (function() {\r\n                    eventsEngine.trigger(createValueText(), \"focus\")\r\n                }))\r\n            }\r\n        });\r\n        this._fireContentReadyAction()\r\n    },\r\n    _createValueButton: function(item, field) {\r\n        var $valueButton = $(\"<div>\").addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_ITEM_VALUE_CLASS);\r\n        this._createValueText(item, field, $valueButton);\r\n        return $valueButton\r\n    },\r\n    _createValueEditor: function($container, field, options) {\r\n        var $editor = $(\"<div>\").attr(\"tabindex\", 0).appendTo($container);\r\n        var customOperation = getCustomOperation(this._customOperations, options.filterOperation);\r\n        var editorTemplate = customOperation && customOperation.editorTemplate ? customOperation.editorTemplate : field.editorTemplate;\r\n        if (editorTemplate) {\r\n            var template = this._getTemplate(editorTemplate);\r\n            template.render({\r\n                model: extend({\r\n                    field: field\r\n                }, options),\r\n                container: $editor\r\n            })\r\n        } else {\r\n            this._editorFactory.createEditor.call(this, $editor, extend({}, field, options, {\r\n                parentType: SOURCE\r\n            }))\r\n        }\r\n        return $editor\r\n    },\r\n    _createPopupWithTreeView: function(options, $container) {\r\n        var that = this;\r\n        var $popup = $(\"<div>\").addClass(options.menu.cssClass).appendTo($container);\r\n        this._createComponent($popup, Popup, {\r\n            wrapperAttr: {\r\n                class: options.menu.cssClass\r\n            },\r\n            onHiding: options.menu.onHiding,\r\n            onHidden: options.menu.onHidden,\r\n            rtlEnabled: options.menu.rtlEnabled,\r\n            position: options.menu.position,\r\n            animation: options.menu.animation,\r\n            contentTemplate: function(contentElement) {\r\n                var $menuContainer = $(\"<div>\").appendTo(contentElement);\r\n                that._createComponent($menuContainer, TreeView, options.menu);\r\n                this.repaint()\r\n            },\r\n            _ignoreFunctionValueDeprecation: true,\r\n            maxHeight: function() {\r\n                return getElementMaxHeightByWindow(options.menu.position.of)\r\n            },\r\n            visible: true,\r\n            focusStateEnabled: false,\r\n            hideOnParentScroll: this.option(\"closePopupOnTargetScroll\"),\r\n            closeOnOutsideClick: true,\r\n            onShown: options.popup.onShown,\r\n            shading: false,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            showTitle: false\r\n        })\r\n    },\r\n    _subscribeOnClickAndEnterKey: function($button, handler) {\r\n        eventsEngine.on($button, \"dxclick\", handler);\r\n        eventsEngine.on($button, \"keyup\", (function(e) {\r\n            if (normalizeKeyName(e) === ENTER_KEY) {\r\n                handler(e)\r\n            }\r\n        }))\r\n    }\r\n});\r\nregisterComponent(\"dxFilterBuilder\", FilterBuilder);\r\nexport default FilterBuilder;\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport FilterBuilder from \"./filter_builder/filter_builder\";\r\nexport default FilterBuilder;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_builder.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport FilterBuilder from \"./../filter_builder\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport ScrollView from \"./../scroll_view\";\r\nimport Popup from \"./../popup\";\r\nimport {\r\n    restoreFocus\r\n} from \"../shared/accessibility\";\r\nvar FilterBuilderView = modules.View.inherit({\r\n    _renderCore: function() {\r\n        this._updatePopupOptions()\r\n    },\r\n    _updatePopupOptions: function() {\r\n        if (this.option(\"filterBuilderPopup.visible\")) {\r\n            this._initPopup()\r\n        } else if (this._filterBuilderPopup) {\r\n            this._filterBuilderPopup.hide()\r\n        }\r\n    },\r\n    _disposePopup: function() {\r\n        if (this._filterBuilderPopup) {\r\n            this._filterBuilderPopup.dispose();\r\n            this._filterBuilderPopup = void 0\r\n        }\r\n        if (this._filterBuilder) {\r\n            this._filterBuilder.dispose();\r\n            this._filterBuilder = void 0\r\n        }\r\n    },\r\n    _initPopup: function() {\r\n        var that = this;\r\n        that._disposePopup();\r\n        that._filterBuilderPopup = that._createComponent(that.element(), Popup, extend({\r\n            title: messageLocalization.format(\"dxDataGrid-filterBuilderPopupTitle\"),\r\n            contentTemplate: function($contentElement) {\r\n                return that._getPopupContentTemplate($contentElement)\r\n            },\r\n            onOptionChanged: function(args) {\r\n                if (\"visible\" === args.name) {\r\n                    that.option(\"filterBuilderPopup.visible\", args.value)\r\n                }\r\n            },\r\n            toolbarItems: that._getPopupToolbarItems()\r\n        }, that.option(\"filterBuilderPopup\"), {\r\n            onHidden: function(e) {\r\n                restoreFocus(that);\r\n                that._disposePopup()\r\n            }\r\n        }))\r\n    },\r\n    _getPopupContentTemplate: function(contentElement) {\r\n        var $contentElement = $(contentElement);\r\n        var $filterBuilderContainer = $(\"<div>\").appendTo($(contentElement));\r\n        this._filterBuilder = this._createComponent($filterBuilderContainer, FilterBuilder, extend({\r\n            value: this.option(\"filterValue\"),\r\n            fields: this.getController(\"columns\").getFilteringColumns()\r\n        }, this.option(\"filterBuilder\"), {\r\n            customOperations: this.getController(\"filterSync\").getCustomFilterOperations()\r\n        }));\r\n        this._createComponent($contentElement, ScrollView, {\r\n            direction: \"both\"\r\n        })\r\n    },\r\n    _getPopupToolbarItems: function() {\r\n        var that = this;\r\n        return [{\r\n            toolbar: \"bottom\",\r\n            location: \"after\",\r\n            widget: \"dxButton\",\r\n            options: {\r\n                text: messageLocalization.format(\"OK\"),\r\n                onClick: function(e) {\r\n                    var filter = that._filterBuilder.option(\"value\");\r\n                    that.option(\"filterValue\", filter);\r\n                    that._filterBuilderPopup.hide()\r\n                }\r\n            }\r\n        }, {\r\n            toolbar: \"bottom\",\r\n            location: \"after\",\r\n            widget: \"dxButton\",\r\n            options: {\r\n                text: messageLocalization.format(\"Cancel\"),\r\n                onClick: function(e) {\r\n                    that._filterBuilderPopup.hide()\r\n                }\r\n            }\r\n        }]\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"filterBuilder\":\r\n            case \"filterBuilderPopup\":\r\n                this._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nexport var filterBuilderModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterBuilder: {\r\n                groupOperationDescriptions: {\r\n                    and: messageLocalization.format(\"dxFilterBuilder-and\"),\r\n                    or: messageLocalization.format(\"dxFilterBuilder-or\"),\r\n                    notAnd: messageLocalization.format(\"dxFilterBuilder-notAnd\"),\r\n                    notOr: messageLocalization.format(\"dxFilterBuilder-notOr\")\r\n                },\r\n                filterOperationDescriptions: {\r\n                    between: messageLocalization.format(\"dxFilterBuilder-filterOperationBetween\"),\r\n                    equal: messageLocalization.format(\"dxFilterBuilder-filterOperationEquals\"),\r\n                    notEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationNotEquals\"),\r\n                    lessThan: messageLocalization.format(\"dxFilterBuilder-filterOperationLess\"),\r\n                    lessThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationLessOrEquals\"),\r\n                    greaterThan: messageLocalization.format(\"dxFilterBuilder-filterOperationGreater\"),\r\n                    greaterThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationGreaterOrEquals\"),\r\n                    startsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationStartsWith\"),\r\n                    contains: messageLocalization.format(\"dxFilterBuilder-filterOperationContains\"),\r\n                    notContains: messageLocalization.format(\"dxFilterBuilder-filterOperationNotContains\"),\r\n                    endsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationEndsWith\"),\r\n                    isBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsBlank\"),\r\n                    isNotBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\r\n                }\r\n            },\r\n            filterBuilderPopup: {}\r\n        }\r\n    },\r\n    views: {\r\n        filterBuilderView: FilterBuilderView\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.filter_builder.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    filterBuilderModule\r\n} from \"../grid_core/ui.grid_core.filter_builder\";\r\ncore.registerModule(\"filterBuilder\", filterBuilderModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_panel.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridUtils from \"./ui.grid_core.utils\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport CheckBox from \"../check_box\";\r\nimport {\r\n    getCurrentLookupValueText,\r\n    getCustomOperation,\r\n    getCurrentValueText,\r\n    getField,\r\n    getCaptionByOperation,\r\n    getGroupValue,\r\n    isCondition,\r\n    isGroup\r\n} from \"../filter_builder/utils\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    captionize\r\n} from \"../../core/utils/inflector\";\r\nimport {\r\n    registerKeyboardAction\r\n} from \"./ui.grid_core.accessibility\";\r\nvar FILTER_PANEL_CLASS = \"filter-panel\";\r\nvar FILTER_PANEL_TEXT_CLASS = FILTER_PANEL_CLASS + \"-text\";\r\nvar FILTER_PANEL_CHECKBOX_CLASS = FILTER_PANEL_CLASS + \"-checkbox\";\r\nvar FILTER_PANEL_CLEAR_FILTER_CLASS = FILTER_PANEL_CLASS + \"-clear-filter\";\r\nvar FILTER_PANEL_LEFT_CONTAINER = FILTER_PANEL_CLASS + \"-left\";\r\nvar FILTER_PANEL_TARGET = \"filterPanel\";\r\nvar FilterPanelView = modules.View.inherit({\r\n    isVisible: function() {\r\n        return this.option(\"filterPanel.visible\") && this.getController(\"data\").dataSource()\r\n    },\r\n    init: function() {\r\n        this.getController(\"data\").dataSourceChanged.add(() => this.render())\r\n    },\r\n    _renderCore: function() {\r\n        var $element = this.element();\r\n        $element.empty().addClass(this.addWidgetPrefix(FILTER_PANEL_CLASS));\r\n        var $leftContainer = $(\"<div>\").addClass(this.addWidgetPrefix(FILTER_PANEL_LEFT_CONTAINER)).appendTo($element);\r\n        if (this.option(\"filterValue\") || this._filterValueBuffer) {\r\n            $leftContainer.append(this._getCheckElement()).append(this._getFilterElement()).append(this._getTextElement());\r\n            $element.append(this._getRemoveButtonElement())\r\n        } else {\r\n            $leftContainer.append(this._getFilterElement()).append(this._getTextElement())\r\n        }\r\n    },\r\n    _getCheckElement: function() {\r\n        var that = this;\r\n        var $element = $(\"<div>\").addClass(this.addWidgetPrefix(FILTER_PANEL_CHECKBOX_CLASS));\r\n        that._createComponent($element, CheckBox, {\r\n            value: that.option(\"filterPanel.filterEnabled\"),\r\n            onValueChanged: function(e) {\r\n                that.option(\"filterPanel.filterEnabled\", e.value)\r\n            }\r\n        });\r\n        $element.attr(\"title\", this.option(\"filterPanel.texts.filterEnabledHint\"));\r\n        return $element\r\n    },\r\n    _getFilterElement: function() {\r\n        var that = this;\r\n        var $element = $(\"<div>\").addClass(\"dx-icon-filter\");\r\n        eventsEngine.on($element, \"click\", () => that._showFilterBuilder());\r\n        registerKeyboardAction(\"filterPanel\", that, $element, void 0, () => that._showFilterBuilder());\r\n        that._addTabIndexToElement($element);\r\n        return $element\r\n    },\r\n    _getTextElement: function() {\r\n        var that = this;\r\n        var $textElement = $(\"<div>\").addClass(that.addWidgetPrefix(FILTER_PANEL_TEXT_CLASS));\r\n        var filterText;\r\n        var filterValue = that.option(\"filterValue\");\r\n        if (filterValue) {\r\n            when(that.getFilterText(filterValue, that.getController(\"filterSync\").getCustomFilterOperations())).done((function(filterText) {\r\n                var customizeText = that.option(\"filterPanel.customizeText\");\r\n                if (customizeText) {\r\n                    var customText = customizeText({\r\n                        component: that.component,\r\n                        filterValue: filterValue,\r\n                        text: filterText\r\n                    });\r\n                    if (\"string\" === typeof customText) {\r\n                        filterText = customText\r\n                    }\r\n                }\r\n                $textElement.text(filterText)\r\n            }))\r\n        } else {\r\n            filterText = that.option(\"filterPanel.texts.createFilter\");\r\n            $textElement.text(filterText)\r\n        }\r\n        eventsEngine.on($textElement, \"click\", () => that._showFilterBuilder());\r\n        registerKeyboardAction(\"filterPanel\", that, $textElement, void 0, () => that._showFilterBuilder());\r\n        that._addTabIndexToElement($textElement);\r\n        return $textElement\r\n    },\r\n    _showFilterBuilder: function() {\r\n        this.option(\"filterBuilderPopup.visible\", true)\r\n    },\r\n    _getRemoveButtonElement: function() {\r\n        var that = this;\r\n        var clearFilterValue = () => that.option(\"filterValue\", null);\r\n        var $element = $(\"<div>\").addClass(that.addWidgetPrefix(FILTER_PANEL_CLEAR_FILTER_CLASS)).text(that.option(\"filterPanel.texts.clearFilter\"));\r\n        eventsEngine.on($element, \"click\", clearFilterValue);\r\n        registerKeyboardAction(\"filterPanel\", this, $element, void 0, clearFilterValue);\r\n        that._addTabIndexToElement($element);\r\n        return $element\r\n    },\r\n    _addTabIndexToElement: function($element) {\r\n        if (!this.option(\"useLegacyKeyboardNavigation\")) {\r\n            var tabindex = this.option(\"tabindex\") || 0;\r\n            $element.attr(\"tabindex\", tabindex)\r\n        }\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"filterValue\":\r\n                this._invalidate();\r\n                this.option(\"filterPanel.filterEnabled\", true);\r\n                args.handled = true;\r\n                break;\r\n            case \"filterPanel\":\r\n                this._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _getConditionText: function(fieldText, operationText, valueText) {\r\n        var result = \"[\".concat(fieldText, \"] \").concat(operationText);\r\n        if (isDefined(valueText)) {\r\n            result += valueText\r\n        }\r\n        return result\r\n    },\r\n    _getValueMaskedText: function(value) {\r\n        return Array.isArray(value) ? \"('\".concat(value.join(\"', '\"), \"')\") : \" '\".concat(value, \"'\")\r\n    },\r\n    _getValueText: function(field, customOperation, value) {\r\n        var deferred = new Deferred;\r\n        var hasCustomOperation = customOperation && customOperation.customizeText;\r\n        if (isDefined(value) || hasCustomOperation) {\r\n            if (!hasCustomOperation && field.lookup) {\r\n                getCurrentLookupValueText(field, value, data => {\r\n                    deferred.resolve(this._getValueMaskedText(data))\r\n                })\r\n            } else {\r\n                var displayValue = Array.isArray(value) ? value : gridUtils.getDisplayValue(field, value);\r\n                when(getCurrentValueText(field, displayValue, customOperation, FILTER_PANEL_TARGET)).done(data => {\r\n                    deferred.resolve(this._getValueMaskedText(data))\r\n                })\r\n            }\r\n        } else {\r\n            deferred.resolve(\"\")\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    getConditionText: function(filterValue, options) {\r\n        var that = this;\r\n        var operation = filterValue[1];\r\n        var deferred = new Deferred;\r\n        var customOperation = getCustomOperation(options.customOperations, operation);\r\n        var operationText;\r\n        var field = getField(filterValue[0], options.columns);\r\n        var fieldText = field.caption || \"\";\r\n        var value = filterValue[2];\r\n        if (customOperation) {\r\n            operationText = customOperation.caption || captionize(customOperation.name)\r\n        } else if (null === value) {\r\n            operationText = getCaptionByOperation(\"=\" === operation ? \"isblank\" : \"isnotblank\", options.filterOperationDescriptions)\r\n        } else {\r\n            operationText = getCaptionByOperation(operation, options.filterOperationDescriptions)\r\n        }\r\n        this._getValueText(field, customOperation, value).done(valueText => {\r\n            deferred.resolve(that._getConditionText(fieldText, operationText, valueText))\r\n        });\r\n        return deferred\r\n    },\r\n    getGroupText: function(filterValue, options, isInnerGroup) {\r\n        var that = this;\r\n        var result = new Deferred;\r\n        var textParts = [];\r\n        var groupValue = getGroupValue(filterValue);\r\n        filterValue.forEach(item => {\r\n            if (isCondition(item)) {\r\n                textParts.push(that.getConditionText(item, options))\r\n            } else if (isGroup(item)) {\r\n                textParts.push(that.getGroupText(item, options, true))\r\n            }\r\n        });\r\n        when.apply(this, textParts).done((function() {\r\n            var text;\r\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n                args[_key] = arguments[_key]\r\n            }\r\n            if (\"!\" === groupValue[0]) {\r\n                var groupText = options.groupOperationDescriptions[\"not\" + groupValue.substring(1, 2).toUpperCase() + groupValue.substring(2)].split(\" \");\r\n                text = \"\".concat(groupText[0], \" \").concat(args[0])\r\n            } else {\r\n                text = args.join(\" \".concat(options.groupOperationDescriptions[groupValue], \" \"))\r\n            }\r\n            if (isInnerGroup) {\r\n                text = \"(\".concat(text, \")\")\r\n            }\r\n            result.resolve(text)\r\n        }));\r\n        return result\r\n    },\r\n    getFilterText: function(filterValue, customOperations) {\r\n        var options = {\r\n            customOperations: customOperations,\r\n            columns: this.getController(\"columns\").getFilteringColumns(),\r\n            filterOperationDescriptions: this.option(\"filterBuilder.filterOperationDescriptions\"),\r\n            groupOperationDescriptions: this.option(\"filterBuilder.groupOperationDescriptions\")\r\n        };\r\n        return isCondition(filterValue) ? this.getConditionText(filterValue, options) : this.getGroupText(filterValue, options)\r\n    }\r\n});\r\nexport var filterPanelModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterPanel: {\r\n                visible: false,\r\n                filterEnabled: true,\r\n                texts: {\r\n                    createFilter: messageLocalization.format(\"dxDataGrid-filterPanelCreateFilter\"),\r\n                    clearFilter: messageLocalization.format(\"dxDataGrid-filterPanelClearFilter\"),\r\n                    filterEnabledHint: messageLocalization.format(\"dxDataGrid-filterPanelFilterEnabledHint\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    views: {\r\n        filterPanelView: FilterPanelView\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                optionChanged: function(args) {\r\n                    switch (args.name) {\r\n                        case \"filterPanel\":\r\n                            this._applyFilter();\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.filter_panel.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    filterPanelModule\r\n} from \"../grid_core/ui.grid_core.filter_panel\";\r\ncore.registerModule(\"filterPanel\", filterPanelModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.search.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport dataQuery from \"../../data/query\";\r\nvar SEARCH_PANEL_CLASS = \"search-panel\";\r\nvar SEARCH_TEXT_CLASS = \"search-text\";\r\nvar HEADER_PANEL_CLASS = \"header-panel\";\r\nvar FILTERING_TIMEOUT = 700;\r\n\r\nfunction allowSearch(column) {\r\n    return isDefined(column.allowSearch) ? column.allowSearch : column.allowFiltering\r\n}\r\n\r\nfunction parseValue(column, text) {\r\n    var lookup = column.lookup;\r\n    if (!column.parseValue) {\r\n        return text\r\n    }\r\n    if (lookup) {\r\n        return column.parseValue.call(lookup, text)\r\n    }\r\n    return column.parseValue(text)\r\n}\r\nexport var searchModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            searchPanel: {\r\n                visible: false,\r\n                width: 160,\r\n                placeholder: messageLocalization.format(\"dxDataGrid-searchPanelPlaceholder\"),\r\n                highlightSearchText: true,\r\n                highlightCaseSensitive: false,\r\n                text: \"\",\r\n                searchVisibleColumnsOnly: false\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                publicMethods: function() {\r\n                    return this.callBase().concat([\"searchByText\"])\r\n                },\r\n                _calculateAdditionalFilter: function() {\r\n                    var filter = this.callBase();\r\n                    var searchFilter = function(that, text) {\r\n                        var i;\r\n                        var column;\r\n                        var columns = that._columnsController.getColumns();\r\n                        var searchVisibleColumnsOnly = that.option(\"searchPanel.searchVisibleColumnsOnly\");\r\n                        var lookup;\r\n                        var filters = [];\r\n                        if (!text) {\r\n                            return null\r\n                        }\r\n\r\n                        function onQueryDone(items) {\r\n                            var valueGetter = compileGetter(lookup.valueExpr);\r\n                            for (var _i = 0; _i < items.length; _i++) {\r\n                                var value = valueGetter(items[_i]);\r\n                                filters.push(column.createFilterExpression(value, null, \"search\"))\r\n                            }\r\n                        }\r\n                        for (i = 0; i < columns.length; i++) {\r\n                            column = columns[i];\r\n                            if (searchVisibleColumnsOnly && !column.visible) {\r\n                                continue\r\n                            }\r\n                            if (allowSearch(column) && column.calculateFilterExpression) {\r\n                                lookup = column.lookup;\r\n                                var filterValue = parseValue(column, text);\r\n                                if (lookup && lookup.items) {\r\n                                    dataQuery(lookup.items).filter(column.createFilterExpression.call({\r\n                                        dataField: lookup.displayExpr,\r\n                                        dataType: lookup.dataType,\r\n                                        calculateFilterExpression: column.calculateFilterExpression\r\n                                    }, filterValue, null, \"search\")).enumerate().done(onQueryDone)\r\n                                } else if (void 0 !== filterValue) {\r\n                                    filters.push(column.createFilterExpression(filterValue, null, \"search\"))\r\n                                }\r\n                            }\r\n                        }\r\n                        if (0 === filters.length) {\r\n                            return [\"!\"]\r\n                        }\r\n                        return gridCoreUtils.combineFilters(filters, \"or\")\r\n                    }(this, this.option(\"searchPanel.text\"));\r\n                    return gridCoreUtils.combineFilters([filter, searchFilter])\r\n                },\r\n                searchByText: function(text) {\r\n                    this.option(\"searchPanel.text\", text)\r\n                },\r\n                optionChanged: function(args) {\r\n                    switch (args.fullName) {\r\n                        case \"searchPanel.text\":\r\n                        case \"searchPanel\":\r\n                            this._applyFilter();\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            headerPanel: function() {\r\n                var getSearchPanelOptions = function(that) {\r\n                    return that.option(\"searchPanel\")\r\n                };\r\n                return {\r\n                    _getToolbarItems: function() {\r\n                        var items = this.callBase();\r\n                        return this._prepareSearchItem(items)\r\n                    },\r\n                    _prepareSearchItem: function(items) {\r\n                        var that = this;\r\n                        var dataController = that.getController(\"data\");\r\n                        var searchPanelOptions = getSearchPanelOptions(that);\r\n                        if (searchPanelOptions && searchPanelOptions.visible) {\r\n                            var toolbarItem = {\r\n                                template: function(data, index, container) {\r\n                                    var $search = $(\"<div>\").addClass(that.addWidgetPrefix(SEARCH_PANEL_CLASS)).appendTo(container);\r\n                                    that.getController(\"editorFactory\").createEditor($search, {\r\n                                        width: searchPanelOptions.width,\r\n                                        placeholder: searchPanelOptions.placeholder,\r\n                                        parentType: \"searchPanel\",\r\n                                        value: that.option(\"searchPanel.text\"),\r\n                                        updateValueTimeout: FILTERING_TIMEOUT,\r\n                                        setValue: function(value) {\r\n                                            dataController.searchByText(value)\r\n                                        },\r\n                                        editorOptions: {\r\n                                            inputAttr: {\r\n                                                \"aria-label\": messageLocalization.format(\"\".concat(that.component.NAME, \"-ariaSearchInGrid\"))\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                    that.resize()\r\n                                },\r\n                                name: \"searchPanel\",\r\n                                location: \"after\",\r\n                                locateInMenu: \"never\",\r\n                                sortIndex: 40\r\n                            };\r\n                            items.push(toolbarItem)\r\n                        }\r\n                        return items\r\n                    },\r\n                    getSearchTextEditor: function() {\r\n                        var that = this;\r\n                        var $element = that.element();\r\n                        var $searchPanel = $element.find(\".\" + that.addWidgetPrefix(SEARCH_PANEL_CLASS)).filter((function() {\r\n                            return $(this).closest(\".\" + that.addWidgetPrefix(HEADER_PANEL_CLASS)).is($element)\r\n                        }));\r\n                        if ($searchPanel.length) {\r\n                            return $searchPanel.dxTextBox(\"instance\")\r\n                        }\r\n                        return null\r\n                    },\r\n                    isVisible: function() {\r\n                        var searchPanelOptions = getSearchPanelOptions(this);\r\n                        return this.callBase() || searchPanelOptions && searchPanelOptions.visible\r\n                    },\r\n                    optionChanged: function(args) {\r\n                        if (\"searchPanel\" === args.name) {\r\n                            if (\"searchPanel.text\" === args.fullName) {\r\n                                var editor = this.getSearchTextEditor();\r\n                                if (editor) {\r\n                                    editor.option(\"value\", args.value)\r\n                                }\r\n                            } else {\r\n                                this._invalidate()\r\n                            }\r\n                            args.handled = true\r\n                        } else {\r\n                            this.callBase(args)\r\n                        }\r\n                    }\r\n                }\r\n            }(),\r\n            rowsView: {\r\n                init: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._searchParams = []\r\n                },\r\n                _getFormattedSearchText: function(column, searchText) {\r\n                    var value = parseValue(column, searchText);\r\n                    var formatOptions = gridCoreUtils.getFormatOptionsByColumn(column, \"search\");\r\n                    return gridCoreUtils.formatValue(value, formatOptions)\r\n                },\r\n                _getStringNormalizer: function() {\r\n                    var isCaseSensitive = this.option(\"searchPanel.highlightCaseSensitive\");\r\n                    return function(str) {\r\n                        return isCaseSensitive ? str : str.toLowerCase()\r\n                    }\r\n                },\r\n                _findHighlightingTextNodes: function(column, cellElement, searchText) {\r\n                    var _$items;\r\n                    var $parent = cellElement.parent();\r\n                    var $items;\r\n                    var stringNormalizer = this._getStringNormalizer();\r\n                    var normalizedSearchText = stringNormalizer(searchText);\r\n                    var resultTextNodes = [];\r\n                    if (!$parent.length) {\r\n                        $parent = $(\"<div>\").append(cellElement)\r\n                    } else if (column) {\r\n                        if (column.groupIndex >= 0 && !column.showWhenGrouped) {\r\n                            $items = cellElement\r\n                        } else {\r\n                            var columnIndex = this._columnsController.getVisibleIndex(column.index);\r\n                            $items = $parent.children(\"td\").eq(columnIndex).find(\"*\")\r\n                        }\r\n                    }\r\n                    $items = null !== (_$items = $items) && void 0 !== _$items && _$items.length ? $items : $parent.find(\"*\");\r\n                    $items.each((function(_, element) {\r\n                        var $contents = $(element).contents();\r\n                        for (var i = 0; i < $contents.length; i++) {\r\n                            var node = $contents.get(i);\r\n                            if (3 === node.nodeType) {\r\n                                var normalizedText = stringNormalizer(node.textContent || node.nodeValue);\r\n                                if (normalizedText.indexOf(normalizedSearchText) > -1) {\r\n                                    resultTextNodes.push(node)\r\n                                }\r\n                            }\r\n                        }\r\n                    }));\r\n                    return resultTextNodes\r\n                },\r\n                _highlightSearchTextCore: function($textNode, searchText) {\r\n                    var $searchTextSpan = $(\"<span>\").addClass(this.addWidgetPrefix(SEARCH_TEXT_CLASS));\r\n                    var text = $textNode.text();\r\n                    var firstContentElement = $textNode[0];\r\n                    var stringNormalizer = this._getStringNormalizer();\r\n                    var index = stringNormalizer(text).indexOf(stringNormalizer(searchText));\r\n                    if (index >= 0) {\r\n                        if (firstContentElement.textContent) {\r\n                            firstContentElement.textContent = text.substr(0, index)\r\n                        } else {\r\n                            firstContentElement.nodeValue = text.substr(0, index)\r\n                        }\r\n                        $textNode.after($searchTextSpan.text(text.substr(index, searchText.length)));\r\n                        $textNode = $(domAdapter.createTextNode(text.substr(index + searchText.length))).insertAfter($searchTextSpan);\r\n                        return this._highlightSearchTextCore($textNode, searchText)\r\n                    }\r\n                },\r\n                _highlightSearchText: function(cellElement, isEquals, column) {\r\n                    var that = this;\r\n                    var stringNormalizer = this._getStringNormalizer();\r\n                    var searchText = that.option(\"searchPanel.text\");\r\n                    if (isEquals && column) {\r\n                        searchText = searchText && that._getFormattedSearchText(column, searchText)\r\n                    }\r\n                    if (searchText && that.option(\"searchPanel.highlightSearchText\")) {\r\n                        var textNodes = that._findHighlightingTextNodes(column, cellElement, searchText);\r\n                        textNodes.forEach(textNode => {\r\n                            if (isEquals) {\r\n                                if (stringNormalizer($(textNode).text()) === stringNormalizer(searchText)) {\r\n                                    $(textNode).replaceWith($(\"<span>\").addClass(that.addWidgetPrefix(SEARCH_TEXT_CLASS)).text($(textNode).text()))\r\n                                }\r\n                            } else {\r\n                                that._highlightSearchTextCore($(textNode), searchText)\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                _renderCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.option().rowTemplate || this.option(\"dataRowTemplate\")) {\r\n                        if (this.option(\"templatesRenderAsynchronously\")) {\r\n                            clearTimeout(this._highlightTimer);\r\n                            this._highlightTimer = setTimeout(function() {\r\n                                this._highlightSearchText(this.getTableElement())\r\n                            }.bind(this))\r\n                        } else {\r\n                            this._highlightSearchText(this.getTableElement())\r\n                        }\r\n                    }\r\n                },\r\n                _updateCell: function($cell, parameters) {\r\n                    var column = parameters.column;\r\n                    var dataType = column.lookup && column.lookup.dataType || column.dataType;\r\n                    var isEquals = \"string\" !== dataType;\r\n                    if (allowSearch(column) && !parameters.isOnForm) {\r\n                        if (this.option(\"templatesRenderAsynchronously\")) {\r\n                            if (!this._searchParams.length) {\r\n                                clearTimeout(this._highlightTimer);\r\n                                this._highlightTimer = setTimeout(function() {\r\n                                    this._searchParams.forEach(function(params) {\r\n                                        this._highlightSearchText.apply(this, params)\r\n                                    }.bind(this));\r\n                                    this._searchParams = []\r\n                                }.bind(this))\r\n                            }\r\n                            this._searchParams.push([$cell, isEquals, column])\r\n                        } else {\r\n                            this._highlightSearchText($cell, isEquals, column)\r\n                        }\r\n                    }\r\n                    this.callBase($cell, parameters)\r\n                },\r\n                dispose: function() {\r\n                    clearTimeout(this._highlightTimer);\r\n                    this.callBase()\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.search.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    searchModule\r\n} from \"../grid_core/ui.grid_core.search\";\r\ngridCore.registerModule(\"search\", searchModule);\r\n","/**\r\n * DevExtreme (esm/renovation/component_wrapper/grid_pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Component from \"./common/component\";\r\nexport class GridPagerWrapper extends Component {\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"pageIndex\":\r\n                var pageIndexChanged = this.option(\"pageIndexChanged\");\r\n                if (pageIndexChanged) {\r\n                    pageIndexChanged(args.value)\r\n                }\r\n                break;\r\n            case \"pageSize\":\r\n                var pageSizeChanged = this.option(\"pageSizeChanged\");\r\n                if (pageSizeChanged) {\r\n                    pageSizeChanged(args.value)\r\n                }\r\n        }\r\n        super._optionChanged(args)\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (esm/renovation/utils/type_conversion.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport function toNumber(attribute) {\r\n    return attribute ? Number(attribute.replace(\"px\", \"\")) : 0\r\n}\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/utils/get_element_width.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport getElementComputedStyle from \"../../../utils/get_computed_style\";\r\nimport {\r\n    toNumber\r\n} from \"../../../utils/type_conversion\";\r\nexport function getElementStyle(name, element) {\r\n    var _getElementComputedSt;\r\n    var computedStyle = null !== (_getElementComputedSt = getElementComputedStyle(element)) && void 0 !== _getElementComputedSt ? _getElementComputedSt : {};\r\n    return toNumber(computedStyle[name])\r\n}\r\nexport function getElementWidth(element) {\r\n    return getElementStyle(\"width\", element)\r\n}\r\nexport function getElementMinWidth(element) {\r\n    return getElementStyle(\"minWidth\", element)\r\n}\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/resizable_container.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"contentTemplate\", \"pagerProps\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport resizeCallbacks from \"../../../core/utils/resize_callbacks\";\r\nimport {\r\n    getElementWidth,\r\n    getElementStyle\r\n} from \"./utils/get_element_width\";\r\nimport {\r\n    isDefined\r\n} from \"../../../core/utils/type\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        contentAttributes: contentAttributes,\r\n        infoTextRef: infoTextRef,\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode,\r\n        pageSizesRef: pageSizesRef,\r\n        pagesRef: pagesRef,\r\n        parentRef: parentRef,\r\n        props: {\r\n            contentTemplate: Content\r\n        }\r\n    } = _ref;\r\n    return Content(_extends({\r\n        rootElementRef: parentRef,\r\n        pageSizesRef: pageSizesRef,\r\n        infoTextRef: infoTextRef,\r\n        pagesRef: pagesRef,\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode\r\n    }, contentAttributes))\r\n};\r\nexport function calculateAdaptivityProps(_ref2) {\r\n    var {\r\n        info: infoWidth,\r\n        pageSizes: pageSizesWidth,\r\n        pages: pagesWidth,\r\n        parent: parentWidth\r\n    } = _ref2;\r\n    var minimalWidth = pageSizesWidth + pagesWidth + infoWidth;\r\n    var infoTextVisible = parentWidth - minimalWidth > 0;\r\n    var isLargeDisplayMode = parentWidth - (pageSizesWidth + pagesWidth) > 0;\r\n    return {\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode\r\n    }\r\n}\r\n\r\nfunction getElementsWidth(_ref3) {\r\n    var {\r\n        info: info,\r\n        pageSizes: pageSizes,\r\n        pages: pages,\r\n        parent: parent\r\n    } = _ref3;\r\n    var parentWidth = getElementWidth(parent);\r\n    var pageSizesWidth = getElementWidth(pageSizes);\r\n    var infoWidth = getElementWidth(info);\r\n    var pagesHtmlWidth = getElementWidth(pages);\r\n    return {\r\n        parent: parentWidth,\r\n        pageSizes: pageSizesWidth,\r\n        info: infoWidth + getElementStyle(\"marginLeft\", info) + getElementStyle(\"marginRight\", info),\r\n        pages: pagesHtmlWidth\r\n    }\r\n}\r\nexport var ResizableContainerProps = {};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\r\nexport class ResizableContainer extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.parentRef = infernoCreateRef();\r\n        this.pageSizesRef = infernoCreateRef();\r\n        this.infoTextRef = infernoCreateRef();\r\n        this.pagesRef = infernoCreateRef();\r\n        this.state = {\r\n            infoTextVisible: true,\r\n            isLargeDisplayMode: true\r\n        };\r\n        this.subscribeToResize = this.subscribeToResize.bind(this);\r\n        this.effectUpdateChildProps = this.effectUpdateChildProps.bind(this);\r\n        this.updateAdaptivityProps = this.updateAdaptivityProps.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.subscribeToResize, [this.state.infoTextVisible, this.state.isLargeDisplayMode]), new InfernoEffect(this.effectUpdateChildProps, [this.props, this.state.infoTextVisible, this.state.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$, _this$_effects$2;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.state.infoTextVisible, this.state.isLargeDisplayMode]);\r\n        null === (_this$_effects$2 = this._effects[1]) || void 0 === _this$_effects$2 ? void 0 : _this$_effects$2.update([this.props, this.state.infoTextVisible, this.state.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate])\r\n    }\r\n    subscribeToResize() {\r\n        var callback = () => {\r\n            this.parentWidth > 0 && this.updateAdaptivityProps()\r\n        };\r\n        resizeCallbacks.add(callback);\r\n        return () => {\r\n            resizeCallbacks.remove(callback)\r\n        }\r\n    }\r\n    effectUpdateChildProps() {\r\n        if (this.parentWidth > 0) {\r\n            this.updateAdaptivityProps()\r\n        }\r\n    }\r\n    get contentAttributes() {\r\n        var {\r\n            className: className,\r\n            displayMode: displayMode,\r\n            gridCompatibility: gridCompatibility,\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            infoText: infoText,\r\n            lightModeEnabled: lightModeEnabled,\r\n            maxPagesCount: maxPagesCount,\r\n            onKeyDown: onKeyDown,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes,\r\n            pagesCountText: pagesCountText,\r\n            pagesNavigatorVisible: pagesNavigatorVisible,\r\n            rtlEnabled: rtlEnabled,\r\n            showInfo: showInfo,\r\n            showNavigationButtons: showNavigationButtons,\r\n            showPageSizes: showPageSizes,\r\n            totalCount: totalCount,\r\n            visible: visible\r\n        } = this.props.pagerProps;\r\n        return _extends({}, this.restAttributes, {\r\n            pageSize: pageSize,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pageSizeChange: pageSizeChange,\r\n            gridCompatibility: gridCompatibility,\r\n            className: className,\r\n            showInfo: showInfo,\r\n            infoText: infoText,\r\n            lightModeEnabled: lightModeEnabled,\r\n            displayMode: displayMode,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pagesCountText: pagesCountText,\r\n            visible: visible,\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            pagesNavigatorVisible: pagesNavigatorVisible,\r\n            showPageSizes: showPageSizes,\r\n            pageSizes: pageSizes,\r\n            rtlEnabled: rtlEnabled,\r\n            showNavigationButtons: showNavigationButtons,\r\n            totalCount: totalCount,\r\n            onKeyDown: onKeyDown\r\n        })\r\n    }\r\n    get parentWidth() {\r\n        return this.parentRef.current ? getElementWidth(this.parentRef.current) : 0\r\n    }\r\n    updateAdaptivityProps() {\r\n        var currentElementsWidth = getElementsWidth({\r\n            parent: this.parentRef.current,\r\n            pageSizes: this.pageSizesRef.current,\r\n            info: this.infoTextRef.current,\r\n            pages: this.pagesRef.current\r\n        });\r\n        if (isDefined(this.actualAdaptivityProps) && (this.actualAdaptivityProps.infoTextVisible !== this.state.infoTextVisible || this.actualAdaptivityProps.isLargeDisplayMode !== this.state.isLargeDisplayMode)) {\r\n            return\r\n        }\r\n        var isEmpty = !isDefined(this.elementsWidth);\r\n        if (isEmpty) {\r\n            this.elementsWidth = {}\r\n        }\r\n        if (isEmpty || this.state.isLargeDisplayMode) {\r\n            this.elementsWidth.pageSizes = currentElementsWidth.pageSizes;\r\n            this.elementsWidth.pages = currentElementsWidth.pages\r\n        }\r\n        if (isEmpty || this.state.infoTextVisible) {\r\n            this.elementsWidth.info = currentElementsWidth.info\r\n        }\r\n        this.actualAdaptivityProps = calculateAdaptivityProps(_extends({\r\n            parent: currentElementsWidth.parent\r\n        }, this.elementsWidth));\r\n        this.setState(__state_argument => ({\r\n            infoTextVisible: this.actualAdaptivityProps.infoTextVisible\r\n        }));\r\n        this.setState(__state_argument => ({\r\n            isLargeDisplayMode: this.actualAdaptivityProps.isLargeDisplayMode\r\n        }))\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                contentTemplate: getTemplate(props.contentTemplate)\r\n            }),\r\n            infoTextVisible: this.state.infoTextVisible,\r\n            isLargeDisplayMode: this.state.isLargeDisplayMode,\r\n            parentRef: this.parentRef,\r\n            pageSizesRef: this.pageSizesRef,\r\n            infoTextRef: this.infoTextRef,\r\n            pagesRef: this.pagesRef,\r\n            contentAttributes: this.contentAttributes,\r\n            parentWidth: this.parentWidth,\r\n            updateAdaptivityProps: this.updateAdaptivityProps,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nResizableContainer.defaultProps = ResizableContainerProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/base_pager_props.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport var BasePagerProps = {\r\n    gridCompatibility: true,\r\n    showInfo: false,\r\n    displayMode: \"adaptive\",\r\n    maxPagesCount: 10,\r\n    pageCount: 10,\r\n    visible: true,\r\n    hasKnownLastPage: true,\r\n    pagesNavigatorVisible: \"auto\",\r\n    showPageSizes: true,\r\n    get pageSizes() {\r\n        return [5, 10]\r\n    },\r\n    showNavigationButtons: false,\r\n    totalCount: 0\r\n};\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/pager_props.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    BasePagerProps\r\n} from \"./base_pager_props\";\r\nexport var PagerProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(BasePagerProps), Object.getOwnPropertyDescriptors({\r\n    defaultPageSize: 5,\r\n    pageSizeChange: () => {},\r\n    defaultPageIndex: 1,\r\n    pageIndexChange: () => {}\r\n})));\r\nexport var InternalPagerProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(BasePagerProps), Object.getOwnPropertyDescriptors({\r\n    pageSize: 5,\r\n    pageIndex: 1\r\n})));\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/info.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"infoText\", \"pageCount\", \"pageIndex\", \"rootElementRef\", \"totalCount\"];\r\nimport {\r\n    createVNode\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    format\r\n} from \"../../../core/utils/string\";\r\nimport messageLocalization from \"../../../localization/message\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"./common/pager_props\";\r\nexport var PAGER_INFO_CLASS = \"dx-info\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: {\r\n            rootElementRef: rootElementRef\r\n        },\r\n        text: text\r\n    } = _ref;\r\n    return createVNode(1, \"div\", PAGER_INFO_CLASS, text, 0, null, null, rootElementRef)\r\n};\r\nexport var InfoTextProps = {};\r\nvar InfoTextPropsType = {\r\n    get pageIndex() {\r\n        return InternalPagerProps.pageIndex\r\n    },\r\n    get pageCount() {\r\n        return InternalPagerProps.pageCount\r\n    },\r\n    get totalCount() {\r\n        return InternalPagerProps.totalCount\r\n    }\r\n};\r\nexport class InfoText extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    get infoText() {\r\n        var _this$props$infoText;\r\n        return (null !== (_this$props$infoText = this.props.infoText) && void 0 !== _this$props$infoText ? _this$props$infoText : \"\") || messageLocalization.getFormatter(\"dxPager-infoText\")()\r\n    }\r\n    get text() {\r\n        var {\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            totalCount: totalCount\r\n        } = this.props;\r\n        return format(this.infoText, (pageIndex + 1).toString(), pageCount.toString(), totalCount.toString())\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            infoText: this.infoText,\r\n            text: this.text,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nInfoText.defaultProps = InfoTextPropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/keyboard_action_context.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    createContext\r\n} from \"@devextreme/runtime/inferno\";\r\nexport var KeyboardActionContext = createContext(void 0);\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/light_button.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"children\", \"className\", \"label\", \"onClick\"];\r\nimport {\r\n    createVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    subscribeToClickEvent\r\n} from \"../../../utils/subscribe_to_event\";\r\nimport {\r\n    KeyboardActionContext\r\n} from \"./keyboard_action_context\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: {\r\n            children: children,\r\n            className: className,\r\n            label: label\r\n        },\r\n        widgetRef: widgetRef\r\n    } = _ref;\r\n    return createVNode(1, \"div\", className, children, 0, {\r\n        tabIndex: 0,\r\n        role: \"button\",\r\n        \"aria-label\": label\r\n    }, null, widgetRef)\r\n};\r\nexport var LightButtonProps = {\r\n    className: \"\",\r\n    label: \"\"\r\n};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class LightButton extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.widgetRef = infernoCreateRef();\r\n        this.keyboardEffect = this.keyboardEffect.bind(this);\r\n        this.subscribeToClick = this.subscribeToClick.bind(this)\r\n    }\r\n    get keyboardContext() {\r\n        if (\"KeyboardActionContext\" in this.context) {\r\n            return this.context.KeyboardActionContext\r\n        }\r\n        return KeyboardActionContext\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.keyboardEffect, [this.keyboardContext, this.props.onClick]), new InfernoEffect(this.subscribeToClick, [this.props.onClick])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$, _this$_effects$2;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.keyboardContext, this.props.onClick]);\r\n        null === (_this$_effects$2 = this._effects[1]) || void 0 === _this$_effects$2 ? void 0 : _this$_effects$2.update([this.props.onClick])\r\n    }\r\n    keyboardEffect() {\r\n        return this.keyboardContext.registerKeyboardAction(this.widgetRef.current, this.props.onClick)\r\n    }\r\n    subscribeToClick() {\r\n        return subscribeToClickEvent(this.widgetRef.current, this.props.onClick)\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            widgetRef: this.widgetRef,\r\n            keyboardContext: this.keyboardContext,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nLightButton.defaultProps = LightButtonProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/consts.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport var PAGER_CLASS = \"dx-pager\";\r\nexport var LIGHT_MODE_CLASS = \"dx-light-mode\";\r\nexport var PAGER_PAGES_CLASS = \"dx-pages\";\r\nexport var PAGER_PAGE_INDEXES_CLASS = \"dx-page-indexes\";\r\nexport var PAGER_PAGE_CLASS = \"dx-page\";\r\nexport var PAGER_SELECTION_CLASS = \"dx-selection\";\r\nexport var PAGER_PAGE_SIZE_CLASS = \"dx-page-size\";\r\nexport var PAGER_PAGE_SIZES_CLASS = \"dx-page-sizes\";\r\nexport var PAGER_SELECTED_PAGE_SIZE_CLASS = \"\".concat(PAGER_PAGE_SIZE_CLASS, \" \").concat(PAGER_SELECTION_CLASS);\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/page.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"className\", \"index\", \"onClick\", \"selected\"];\r\nimport {\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    LightButton\r\n} from \"../common/light_button\";\r\nimport {\r\n    PAGER_PAGE_CLASS,\r\n    PAGER_SELECTION_CLASS\r\n} from \"../common/consts\";\r\nimport {\r\n    combineClasses\r\n} from \"../../../utils/combine_classes\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        className: className,\r\n        label: label,\r\n        props: {\r\n            onClick: onClick\r\n        },\r\n        value: value\r\n    } = _ref;\r\n    return createComponentVNode(2, LightButton, {\r\n        className: className,\r\n        label: label,\r\n        onClick: onClick,\r\n        children: value\r\n    })\r\n};\r\nexport var PageProps = {\r\n    index: 0,\r\n    selected: false,\r\n    className: PAGER_PAGE_CLASS\r\n};\r\nexport class Page extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    get label() {\r\n        return \"Page \".concat(this.value)\r\n    }\r\n    get value() {\r\n        return this.props.index + 1\r\n    }\r\n    get className() {\r\n        var {\r\n            selected: selected\r\n        } = this.props;\r\n        return combineClasses({\r\n            [\"\".concat(this.props.className)]: !!this.props.className,\r\n            [PAGER_SELECTION_CLASS]: !!selected\r\n        })\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            label: this.label,\r\n            value: this.value,\r\n            className: this.className,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPage.defaultProps = PageProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/large.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"pageIndexes\"],\r\n    _excluded2 = [\"maxPagesCount\", \"pageCount\", \"pageIndex\", \"pageIndexChange\"];\r\nimport {\r\n    createVNode,\r\n    createFragment,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    Page\r\n} from \"./page\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nimport {\r\n    ConfigContext\r\n} from \"../../../common/config_context\";\r\nvar PAGER_PAGE_SEPARATOR_CLASS = \"dx-separator\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        pages: pages\r\n    } = _ref;\r\n    var PagesMarkup = pages.map(_ref2 => {\r\n        var {\r\n            key: key,\r\n            pageProps: pageProps\r\n        } = _ref2;\r\n        return pageProps ? createComponentVNode(2, Page, {\r\n            index: pageProps.index,\r\n            selected: pageProps.selected,\r\n            onClick: pageProps.onClick\r\n        }, key) : createVNode(1, \"div\", PAGER_PAGE_SEPARATOR_CLASS, \". . .\", 16, null, key)\r\n    });\r\n    return createFragment(PagesMarkup, 0)\r\n};\r\nvar PAGES_LIMITER = 4;\r\n\r\nfunction getDelimiterType(startIndex, slidingWindowSize, pageCount) {\r\n    if (1 === startIndex) {\r\n        return \"high\"\r\n    }\r\n    if (startIndex + slidingWindowSize === pageCount - 1) {\r\n        return \"low\"\r\n    }\r\n    return \"both\"\r\n}\r\n\r\nfunction createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter) {\r\n    var pageIndexes = [];\r\n    var indexesForReuse = [];\r\n    switch (delimiter) {\r\n        case \"none\":\r\n            pageIndexes = [...slidingWindowIndexes];\r\n            break;\r\n        case \"both\":\r\n            pageIndexes = [0, \"low\", ...slidingWindowIndexes, \"high\", pageCount - 1];\r\n            indexesForReuse = slidingWindowIndexes.slice(1, -1);\r\n            break;\r\n        case \"high\":\r\n            pageIndexes = [0, ...slidingWindowIndexes, \"high\", pageCount - 1];\r\n            indexesForReuse = slidingWindowIndexes.slice(0, -1);\r\n            break;\r\n        case \"low\":\r\n            pageIndexes = [0, \"low\", ...slidingWindowIndexes, pageCount - 1];\r\n            indexesForReuse = slidingWindowIndexes.slice(1)\r\n    }\r\n    return {\r\n        slidingWindowIndexes: slidingWindowIndexes,\r\n        indexesForReuse: indexesForReuse,\r\n        pageIndexes: pageIndexes\r\n    }\r\n}\r\n\r\nfunction createPageIndexes(startIndex, slidingWindowSize, pageCount, delimiter) {\r\n    var slidingWindowIndexes = [];\r\n    for (var i = 0; i < slidingWindowSize; i += 1) {\r\n        slidingWindowIndexes.push(i + startIndex)\r\n    }\r\n    return createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter)\r\n}\r\nvar PagesLargePropsType = {\r\n    get pageIndex() {\r\n        return InternalPagerProps.pageIndex\r\n    },\r\n    get maxPagesCount() {\r\n        return InternalPagerProps.maxPagesCount\r\n    },\r\n    get pageCount() {\r\n        return InternalPagerProps.pageCount\r\n    }\r\n};\r\nexport class PagesLarge extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.canReuseSlidingWindow = this.canReuseSlidingWindow.bind(this);\r\n        this.generatePageIndexes = this.generatePageIndexes.bind(this);\r\n        this.isSlidingWindowMode = this.isSlidingWindowMode.bind(this);\r\n        this.onPageClick = this.onPageClick.bind(this)\r\n    }\r\n    get config() {\r\n        if (\"ConfigContext\" in this.context) {\r\n            return this.context.ConfigContext\r\n        }\r\n        return ConfigContext\r\n    }\r\n    get slidingWindowState() {\r\n        var slidingWindowState = this.slidingWindowStateHolder;\r\n        if (!slidingWindowState) {\r\n            return {\r\n                indexesForReuse: [],\r\n                slidingWindowIndexes: []\r\n            }\r\n        }\r\n        return slidingWindowState\r\n    }\r\n    canReuseSlidingWindow(currentPageCount, pageIndex) {\r\n        var {\r\n            indexesForReuse: indexesForReuse\r\n        } = this.slidingWindowState;\r\n        var currentPageNotExistInIndexes = !indexesForReuse.includes(currentPageCount);\r\n        var pageIndexExistInIndexes = indexesForReuse.includes(pageIndex);\r\n        return currentPageNotExistInIndexes && pageIndexExistInIndexes\r\n    }\r\n    generatePageIndexes() {\r\n        var {\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex\r\n        } = this.props;\r\n        var startIndex = 0;\r\n        var {\r\n            slidingWindowIndexes: slidingWindowIndexes\r\n        } = this.slidingWindowState;\r\n        if (pageIndex === slidingWindowIndexes[0]) {\r\n            startIndex = pageIndex - 1\r\n        } else if (pageIndex === slidingWindowIndexes[slidingWindowIndexes.length - 1]) {\r\n            startIndex = pageIndex + 2 - PAGES_LIMITER\r\n        } else if (pageIndex < PAGES_LIMITER) {\r\n            startIndex = 1\r\n        } else if (pageIndex >= pageCount - PAGES_LIMITER) {\r\n            startIndex = pageCount - PAGES_LIMITER - 1\r\n        } else {\r\n            startIndex = pageIndex - 1\r\n        }\r\n        var slidingWindowSize = PAGES_LIMITER;\r\n        var delimiter = getDelimiterType(startIndex, slidingWindowSize, pageCount);\r\n        var _createPageIndexes = createPageIndexes(startIndex, slidingWindowSize, pageCount, delimiter),\r\n            {\r\n                pageIndexes: pageIndexes\r\n            } = _createPageIndexes,\r\n            slidingWindowState = _objectWithoutPropertiesLoose(_createPageIndexes, _excluded);\r\n        this.slidingWindowStateHolder = slidingWindowState;\r\n        return pageIndexes\r\n    }\r\n    isSlidingWindowMode() {\r\n        var {\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount\r\n        } = this.props;\r\n        return pageCount <= PAGES_LIMITER || pageCount <= maxPagesCount\r\n    }\r\n    onPageClick(pageIndex) {\r\n        this.props.pageIndexChange(pageIndex)\r\n    }\r\n    get pageIndexes() {\r\n        var {\r\n            pageCount: pageCount\r\n        } = this.props;\r\n        if (this.isSlidingWindowMode()) {\r\n            return createPageIndexes(0, pageCount, pageCount, \"none\").pageIndexes\r\n        }\r\n        if (this.canReuseSlidingWindow(pageCount, this.props.pageIndex)) {\r\n            var {\r\n                slidingWindowIndexes: slidingWindowIndexes\r\n            } = this.slidingWindowState;\r\n            var delimiter = getDelimiterType(slidingWindowIndexes[0], PAGES_LIMITER, pageCount);\r\n            return createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter).pageIndexes\r\n        }\r\n        return this.generatePageIndexes()\r\n    }\r\n    get pages() {\r\n        var _this$config;\r\n        var {\r\n            pageIndex: pageIndex\r\n        } = this.props;\r\n        var createPage = index => {\r\n            var pagerProps = \"low\" === index || \"high\" === index ? null : {\r\n                index: index,\r\n                onClick: () => this.onPageClick(index),\r\n                selected: pageIndex === index\r\n            };\r\n            return {\r\n                key: index.toString(),\r\n                pageProps: pagerProps\r\n            }\r\n        };\r\n        var rtlPageIndexes = null !== (_this$config = this.config) && void 0 !== _this$config && _this$config.rtlEnabled ? [...this.pageIndexes].reverse() : this.pageIndexes;\r\n        return rtlPageIndexes.map(index => createPage(index))\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded2);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            config: this.config,\r\n            pageIndexes: this.pageIndexes,\r\n            pages: this.pages,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPagesLarge.defaultProps = PagesLargePropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/editors/number_box.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"accessKey\", \"activeStateEnabled\", \"className\", \"defaultValue\", \"disabled\", \"focusStateEnabled\", \"height\", \"hint\", \"hoverStateEnabled\", \"invalidValueMessage\", \"max\", \"min\", \"mode\", \"onClick\", \"onKeyDown\", \"rtlEnabled\", \"showSpinButtons\", \"step\", \"tabIndex\", \"useLargeSpinButtons\", \"value\", \"valueChange\", \"visible\", \"width\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport LegacyNumberBox from \"../../../ui/number_box\";\r\nimport {\r\n    DomComponentWrapper\r\n} from \"../common/dom_component_wrapper\";\r\nimport {\r\n    BaseWidgetProps\r\n} from \"../common/base_props\";\r\nvar DEFAULT_VALUE = 0;\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: props,\r\n        restAttributes: restAttributes\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, DomComponentWrapper, _extends({\r\n        componentType: LegacyNumberBox,\r\n        componentProps: props,\r\n        templateNames: []\r\n    }, restAttributes)))\r\n};\r\nexport var NumberBoxProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(BaseWidgetProps), Object.getOwnPropertyDescriptors({\r\n    focusStateEnabled: true,\r\n    hoverStateEnabled: true,\r\n    defaultValue: DEFAULT_VALUE,\r\n    isReactComponentWrapper: true\r\n})));\r\nexport class NumberBox extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: void 0 !== this.props.value ? this.props.value : this.props.defaultValue\r\n        }\r\n    }\r\n    get restAttributes() {\r\n        var _this$props$value = _extends({}, this.props, {\r\n                value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n            }),\r\n            restProps = _objectWithoutPropertiesLoose(_this$props$value, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n            }),\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nNumberBox.defaultProps = NumberBoxProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/utils/calculate_values_fitted_width.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport var oneDigitWidth = 10;\r\nexport function calculateValuesFittedWidth(minWidth, values) {\r\n    return minWidth + oneDigitWidth * Math.max(...values).toString().length\r\n}\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/small.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pagesCountText\"];\r\nimport {\r\n    createVNode,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    Page\r\n} from \"./page\";\r\nimport {\r\n    PAGER_INFO_CLASS\r\n} from \"../info\";\r\nimport {\r\n    NumberBox\r\n} from \"../../editors/number_box\";\r\nimport messageLocalization from \"../../../../localization/message\";\r\nimport {\r\n    calculateValuesFittedWidth\r\n} from \"../utils/calculate_values_fitted_width\";\r\nimport {\r\n    getElementMinWidth\r\n} from \"../utils/get_element_width\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nvar PAGER_INFO_TEXT_CLASS = \"\".concat(PAGER_INFO_CLASS, \"  dx-info-text\");\r\nvar PAGER_PAGE_INDEX_CLASS = \"dx-page-index\";\r\nvar LIGHT_PAGES_CLASS = \"dx-light-pages\";\r\nvar PAGER_PAGES_COUNT_CLASS = \"dx-pages-count\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        pageIndexRef: pageIndexRef,\r\n        pagesCountText: pagesCountText,\r\n        props: {\r\n            pageCount: pageCount\r\n        },\r\n        selectLastPageIndex: selectLastPageIndex,\r\n        value: value,\r\n        valueChange: valueChange,\r\n        width: width\r\n    } = _ref;\r\n    return createVNode(1, \"div\", LIGHT_PAGES_CLASS, [createComponentVNode(2, NumberBox, {\r\n        className: PAGER_PAGE_INDEX_CLASS,\r\n        min: 1,\r\n        max: pageCount,\r\n        width: width,\r\n        value: value,\r\n        valueChange: valueChange\r\n    }), createVNode(1, \"span\", PAGER_INFO_TEXT_CLASS, pagesCountText, 0), createComponentVNode(2, Page, {\r\n        className: PAGER_PAGES_COUNT_CLASS,\r\n        selected: false,\r\n        index: pageCount - 1,\r\n        onClick: selectLastPageIndex\r\n    })], 4, null, null, pageIndexRef)\r\n};\r\nvar PagerSmallProps = {\r\n    get pageIndex() {\r\n        return InternalPagerProps.pageIndex\r\n    },\r\n    get pageCount() {\r\n        return InternalPagerProps.pageCount\r\n    }\r\n};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class PagesSmall extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.pageIndexRef = infernoCreateRef();\r\n        this.state = {\r\n            minWidth: 10\r\n        };\r\n        this.updateWidth = this.updateWidth.bind(this);\r\n        this.selectLastPageIndex = this.selectLastPageIndex.bind(this);\r\n        this.valueChange = this.valueChange.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.updateWidth, [this.state.minWidth])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.state.minWidth])\r\n    }\r\n    updateWidth() {\r\n        var _this$pageIndexRef$cu;\r\n        var el = null === (_this$pageIndexRef$cu = this.pageIndexRef.current) || void 0 === _this$pageIndexRef$cu ? void 0 : _this$pageIndexRef$cu.querySelector(\".\".concat(PAGER_PAGE_INDEX_CLASS));\r\n        this.setState(__state_argument => ({\r\n            minWidth: el && getElementMinWidth(el) || __state_argument.minWidth\r\n        }))\r\n    }\r\n    get value() {\r\n        return this.props.pageIndex + 1\r\n    }\r\n    get width() {\r\n        var {\r\n            pageCount: pageCount\r\n        } = this.props;\r\n        return calculateValuesFittedWidth(this.state.minWidth, [pageCount])\r\n    }\r\n    get pagesCountText() {\r\n        var _this$props$pagesCoun;\r\n        return (null !== (_this$props$pagesCoun = this.props.pagesCountText) && void 0 !== _this$props$pagesCoun ? _this$props$pagesCoun : \"\") || messageLocalization.getFormatter(\"dxPager-pagesCountText\")()\r\n    }\r\n    selectLastPageIndex() {\r\n        this.props.pageIndexChange(this.props.pageCount - 1)\r\n    }\r\n    valueChange(value) {\r\n        this.props.pageIndexChange(value - 1)\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            pageIndexRef: this.pageIndexRef,\r\n            value: this.value,\r\n            width: this.width,\r\n            pagesCountText: this.pagesCountText,\r\n            selectLastPageIndex: this.selectLastPageIndex,\r\n            valueChange: this.valueChange,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPagesSmall.defaultProps = PagerSmallProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/page_index_selector.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"hasKnownLastPage\", \"isLargeDisplayMode\", \"maxPagesCount\", \"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pagesCountText\", \"showNavigationButtons\", \"totalCount\"];\r\nimport {\r\n    createFragment,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    LightButton\r\n} from \"../common/light_button\";\r\nimport {\r\n    PagesLarge\r\n} from \"./large\";\r\nimport {\r\n    PagesSmall\r\n} from \"./small\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nimport {\r\n    ConfigContext\r\n} from \"../../../common/config_context\";\r\nvar PAGER_NAVIGATE_BUTTON = \"dx-navigate-button\";\r\nvar PAGER_PREV_BUTTON_CLASS = \"dx-prev-button\";\r\nvar PAGER_NEXT_BUTTON_CLASS = \"dx-next-button\";\r\nexport var PAGER_BUTTON_DISABLE_CLASS = \"dx-button-disable\";\r\nvar nextButtonClassName = \"\".concat(PAGER_NAVIGATE_BUTTON, \" \").concat(PAGER_NEXT_BUTTON_CLASS);\r\nvar prevButtonClassName = \"\".concat(PAGER_NAVIGATE_BUTTON, \" \").concat(PAGER_PREV_BUTTON_CLASS);\r\nvar nextButtonDisabledClassName = \"\".concat(PAGER_BUTTON_DISABLE_CLASS, \" \").concat(PAGER_NAVIGATE_BUTTON, \" \").concat(PAGER_NEXT_BUTTON_CLASS);\r\nvar prevButtonDisabledClassName = \"\".concat(PAGER_BUTTON_DISABLE_CLASS, \" \").concat(PAGER_NAVIGATE_BUTTON, \" \").concat(PAGER_PREV_BUTTON_CLASS);\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        navigateToNextPage: navigateToNextPage,\r\n        navigateToPrevPage: navigateToPrevPage,\r\n        nextClassName: nextClassName,\r\n        pageIndexChange: pageIndexChange,\r\n        prevClassName: prevClassName,\r\n        props: {\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pagesCountText: pagesCountText\r\n        },\r\n        renderNextButton: renderNextButton,\r\n        renderPrevButton: renderPrevButton\r\n    } = _ref;\r\n    return createFragment([renderPrevButton && createComponentVNode(2, LightButton, {\r\n        className: prevClassName,\r\n        label: \"Previous page\",\r\n        onClick: navigateToPrevPage\r\n    }), isLargeDisplayMode && createComponentVNode(2, PagesLarge, {\r\n        maxPagesCount: maxPagesCount,\r\n        pageCount: pageCount,\r\n        pageIndex: pageIndex,\r\n        pageIndexChange: pageIndexChange\r\n    }), !isLargeDisplayMode && createComponentVNode(2, PagesSmall, {\r\n        pageCount: pageCount,\r\n        pageIndex: pageIndex,\r\n        pageIndexChange: pageIndexChange,\r\n        pagesCountText: pagesCountText\r\n    }), renderNextButton && createComponentVNode(2, LightButton, {\r\n        className: nextClassName,\r\n        label: \"Next page\",\r\n        onClick: navigateToNextPage\r\n    })], 0)\r\n};\r\n\r\nfunction getIncrement(direction) {\r\n    return \"next\" === direction ? 1 : -1\r\n}\r\nexport var PageIndexSelectorProps = {\r\n    isLargeDisplayMode: true\r\n};\r\nvar PageIndexSelectorPropsType = {\r\n    get pageIndex() {\r\n        return InternalPagerProps.pageIndex\r\n    },\r\n    get maxPagesCount() {\r\n        return InternalPagerProps.maxPagesCount\r\n    },\r\n    get pageCount() {\r\n        return InternalPagerProps.pageCount\r\n    },\r\n    get hasKnownLastPage() {\r\n        return InternalPagerProps.hasKnownLastPage\r\n    },\r\n    get showNavigationButtons() {\r\n        return InternalPagerProps.showNavigationButtons\r\n    },\r\n    get totalCount() {\r\n        return InternalPagerProps.totalCount\r\n    },\r\n    get isLargeDisplayMode() {\r\n        return PageIndexSelectorProps.isLargeDisplayMode\r\n    }\r\n};\r\nexport class PageIndexSelector extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.pageIndexChange = this.pageIndexChange.bind(this);\r\n        this.navigateToNextPage = this.navigateToNextPage.bind(this);\r\n        this.navigateToPrevPage = this.navigateToPrevPage.bind(this);\r\n        this.getNextDirection = this.getNextDirection.bind(this);\r\n        this.getPrevDirection = this.getPrevDirection.bind(this);\r\n        this.canNavigateToPage = this.canNavigateToPage.bind(this);\r\n        this.getNextPageIndex = this.getNextPageIndex.bind(this);\r\n        this.canNavigateTo = this.canNavigateTo.bind(this);\r\n        this.navigateToPage = this.navigateToPage.bind(this)\r\n    }\r\n    get config() {\r\n        if (\"ConfigContext\" in this.context) {\r\n            return this.context.ConfigContext\r\n        }\r\n        return ConfigContext\r\n    }\r\n    pageIndexChange(pageIndex) {\r\n        if (this.canNavigateToPage(pageIndex)) {\r\n            this.props.pageIndexChange(pageIndex)\r\n        }\r\n    }\r\n    navigateToNextPage() {\r\n        this.navigateToPage(this.getNextDirection())\r\n    }\r\n    navigateToPrevPage() {\r\n        this.navigateToPage(this.getPrevDirection())\r\n    }\r\n    getNextDirection() {\r\n        var _this$config;\r\n        return !(null !== (_this$config = this.config) && void 0 !== _this$config && _this$config.rtlEnabled) ? \"next\" : \"prev\"\r\n    }\r\n    getPrevDirection() {\r\n        var _this$config2;\r\n        return !(null !== (_this$config2 = this.config) && void 0 !== _this$config2 && _this$config2.rtlEnabled) ? \"prev\" : \"next\"\r\n    }\r\n    canNavigateToPage(pageIndex) {\r\n        if (!this.props.hasKnownLastPage) {\r\n            return pageIndex >= 0\r\n        }\r\n        return pageIndex >= 0 && pageIndex <= this.props.pageCount - 1\r\n    }\r\n    getNextPageIndex(direction) {\r\n        return this.props.pageIndex + getIncrement(direction)\r\n    }\r\n    canNavigateTo(direction) {\r\n        return this.canNavigateToPage(this.getNextPageIndex(direction))\r\n    }\r\n    navigateToPage(direction) {\r\n        this.pageIndexChange(this.getNextPageIndex(direction))\r\n    }\r\n    get renderPrevButton() {\r\n        var {\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            showNavigationButtons: showNavigationButtons\r\n        } = this.props;\r\n        return !isLargeDisplayMode || showNavigationButtons\r\n    }\r\n    get renderNextButton() {\r\n        return this.renderPrevButton || !this.props.hasKnownLastPage\r\n    }\r\n    get nextClassName() {\r\n        var direction = this.getNextDirection();\r\n        var canNavigate = this.canNavigateTo(direction);\r\n        return canNavigate ? nextButtonClassName : nextButtonDisabledClassName\r\n    }\r\n    get prevClassName() {\r\n        var direction = this.getPrevDirection();\r\n        var canNavigate = this.canNavigateTo(direction);\r\n        return canNavigate ? prevButtonClassName : prevButtonDisabledClassName\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            config: this.config,\r\n            pageIndexChange: this.pageIndexChange,\r\n            navigateToNextPage: this.navigateToNextPage,\r\n            navigateToPrevPage: this.navigateToPrevPage,\r\n            renderPrevButton: this.renderPrevButton,\r\n            renderNextButton: this.renderNextButton,\r\n            nextClassName: this.nextClassName,\r\n            prevClassName: this.prevClassName,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPageIndexSelector.defaultProps = PageIndexSelectorPropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/editors/drop_down_editors/select_box.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"accessKey\", \"activeStateEnabled\", \"className\", \"dataSource\", \"defaultValue\", \"disabled\", \"displayExpr\", \"focusStateEnabled\", \"height\", \"hint\", \"hoverStateEnabled\", \"onClick\", \"onKeyDown\", \"rtlEnabled\", \"tabIndex\", \"value\", \"valueChange\", \"valueExpr\", \"visible\", \"width\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport LegacySelectBox from \"../../../../ui/select_box\";\r\nimport {\r\n    DomComponentWrapper\r\n} from \"../../common/dom_component_wrapper\";\r\nimport {\r\n    BaseWidgetProps\r\n} from \"../../common/base_props\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: props,\r\n        restAttributes: restAttributes\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, DomComponentWrapper, _extends({\r\n        componentType: LegacySelectBox,\r\n        componentProps: props,\r\n        templateNames: [\"dropDownButtonTemplate\", \"groupTemplate\", \"itemTemplate\"]\r\n    }, restAttributes)))\r\n};\r\nexport var SelectBoxProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(BaseWidgetProps), Object.getOwnPropertyDescriptors({\r\n    focusStateEnabled: true,\r\n    hoverStateEnabled: true,\r\n    defaultValue: null,\r\n    isReactComponentWrapper: true\r\n})));\r\nexport class SelectBox extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: void 0 !== this.props.value ? this.props.value : this.props.defaultValue\r\n        }\r\n    }\r\n    get restAttributes() {\r\n        var _this$props$value = _extends({}, this.props, {\r\n                value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n            }),\r\n            restProps = _objectWithoutPropertiesLoose(_this$props$value, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n            }),\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nSelectBox.defaultProps = SelectBoxProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/page_size/small.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"pageSize\", \"pageSizeChange\", \"pageSizes\", \"parentRef\"];\r\nimport {\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    SelectBox\r\n} from \"../../editors/drop_down_editors/select_box\";\r\nimport {\r\n    calculateValuesFittedWidth\r\n} from \"../utils/calculate_values_fitted_width\";\r\nimport {\r\n    getElementMinWidth\r\n} from \"../utils/get_element_width\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: {\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes\r\n        },\r\n        width: width\r\n    } = _ref;\r\n    return createComponentVNode(2, SelectBox, {\r\n        displayExpr: \"text\",\r\n        valueExpr: \"value\",\r\n        dataSource: pageSizes,\r\n        value: pageSize,\r\n        valueChange: pageSizeChange,\r\n        width: width\r\n    })\r\n};\r\nexport var PageSizeSmallProps = {};\r\nvar PageSizeSmallPropsType = {\r\n    get pageSize() {\r\n        return InternalPagerProps.pageSize\r\n    }\r\n};\r\nexport class PageSizeSmall extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            minWidth: 10\r\n        };\r\n        this.updateWidth = this.updateWidth.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.updateWidth, [this.props, this.state.minWidth, this.props.pageSize, this.props.pageSizeChange, this.props.pageSizes])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props, this.state.minWidth, this.props.pageSize, this.props.pageSizeChange, this.props.pageSizes])\r\n    }\r\n    updateWidth() {\r\n        this.setState(__state_argument => ({\r\n            minWidth: getElementMinWidth(this.props.parentRef.current) || __state_argument.minWidth\r\n        }))\r\n    }\r\n    get width() {\r\n        return calculateValuesFittedWidth(this.state.minWidth, this.props.pageSizes.map(p => p.value))\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            width: this.width,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPageSizeSmall.defaultProps = PageSizeSmallPropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/page_size/large.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"pageSize\", \"pageSizeChange\", \"pageSizes\"];\r\nimport {\r\n    createFragment,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    LightButton\r\n} from \"../common/light_button\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nimport {\r\n    PAGER_SELECTED_PAGE_SIZE_CLASS,\r\n    PAGER_PAGE_SIZE_CLASS\r\n} from \"../common/consts\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        pageSizesText: pageSizesText\r\n    } = _ref;\r\n    return createFragment(pageSizesText.map(_ref2 => {\r\n        var {\r\n            className: className,\r\n            click: click,\r\n            label: label,\r\n            text: text\r\n        } = _ref2;\r\n        return createComponentVNode(2, LightButton, {\r\n            className: className,\r\n            label: label,\r\n            onClick: click,\r\n            children: text\r\n        }, text)\r\n    }), 0)\r\n};\r\nexport var PageSizeLargeProps = {};\r\nvar PageSizeLargePropsType = {\r\n    get pageSize() {\r\n        return InternalPagerProps.pageSize\r\n    }\r\n};\r\nexport class PageSizeLarge extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.__getterCache = {};\r\n        this.onPageSizeChange = this.onPageSizeChange.bind(this)\r\n    }\r\n    get pageSizesText() {\r\n        if (void 0 !== this.__getterCache.pageSizesText) {\r\n            return this.__getterCache.pageSizesText\r\n        }\r\n        return this.__getterCache.pageSizesText = (() => {\r\n            var {\r\n                pageSize: pageSize,\r\n                pageSizes: pageSizes\r\n            } = this.props;\r\n            return pageSizes.map(_ref3 => {\r\n                var {\r\n                    text: text,\r\n                    value: processedPageSize\r\n                } = _ref3;\r\n                var selected = processedPageSize === pageSize;\r\n                var className = selected ? PAGER_SELECTED_PAGE_SIZE_CLASS : PAGER_PAGE_SIZE_CLASS;\r\n                return {\r\n                    className: className,\r\n                    click: this.onPageSizeChange(processedPageSize),\r\n                    label: \"Display \".concat(processedPageSize, \" items on page\"),\r\n                    text: text\r\n                }\r\n            })\r\n        })()\r\n    }\r\n    onPageSizeChange(processedPageSize) {\r\n        return () => {\r\n            this.props.pageSizeChange(processedPageSize);\r\n            return this.props.pageSize\r\n        }\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        if (this.props.pageSize !== nextProps.pageSize || this.props.pageSizes !== nextProps.pageSizes || this.props.pageSizeChange !== nextProps.pageSizeChange) {\r\n            this.__getterCache.pageSizesText = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            pageSizesText: this.pageSizesText,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPageSizeLarge.defaultProps = PageSizeLargePropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/page_size/selector.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"isLargeDisplayMode\", \"pageSize\", \"pageSizeChange\", \"pageSizes\", \"rootElementRef\"];\r\nimport {\r\n    createVNode,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    PageSizeSmall\r\n} from \"./small\";\r\nimport {\r\n    PageSizeLarge\r\n} from \"./large\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nimport messageLocalization from \"../../../../localization/message\";\r\nimport {\r\n    PAGER_PAGE_SIZES_CLASS\r\n} from \"../common/consts\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        htmlRef: htmlRef,\r\n        normalizedPageSizes: normalizedPageSizes,\r\n        props: {\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange\r\n        }\r\n    } = _ref;\r\n    return createVNode(1, \"div\", PAGER_PAGE_SIZES_CLASS, [isLargeDisplayMode && createComponentVNode(2, PageSizeLarge, {\r\n        pageSizes: normalizedPageSizes,\r\n        pageSize: pageSize,\r\n        pageSizeChange: pageSizeChange\r\n    }), !isLargeDisplayMode && createComponentVNode(2, PageSizeSmall, {\r\n        parentRef: htmlRef,\r\n        pageSizes: normalizedPageSizes,\r\n        pageSize: pageSize,\r\n        pageSizeChange: pageSizeChange\r\n    })], 0, null, null, htmlRef)\r\n};\r\n\r\nfunction getAllText() {\r\n    return messageLocalization.getFormatter(\"dxPager-pageSizesAllText\")()\r\n}\r\nvar PageSizeSelectorProps = {\r\n    isLargeDisplayMode: true\r\n};\r\nvar PageSizeSelectorPropsType = {\r\n    get pageSize() {\r\n        return InternalPagerProps.pageSize\r\n    },\r\n    get pageSizes() {\r\n        return InternalPagerProps.pageSizes\r\n    },\r\n    get isLargeDisplayMode() {\r\n        return PageSizeSelectorProps.isLargeDisplayMode\r\n    }\r\n};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class PageSizeSelector extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.htmlRef = infernoCreateRef();\r\n        this.__getterCache = {};\r\n        this.setRootElementRef = this.setRootElementRef.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.setRootElementRef, [])]\r\n    }\r\n    setRootElementRef() {\r\n        var {\r\n            rootElementRef: rootElementRef\r\n        } = this.props;\r\n        if (rootElementRef) {\r\n            rootElementRef.current = this.htmlRef.current\r\n        }\r\n    }\r\n    get normalizedPageSizes() {\r\n        if (void 0 !== this.__getterCache.normalizedPageSizes) {\r\n            return this.__getterCache.normalizedPageSizes\r\n        }\r\n        return this.__getterCache.normalizedPageSizes = (() => {\r\n            var {\r\n                pageSizes: pageSizes\r\n            } = this.props;\r\n            return pageSizes.map(p => \"all\" === p || 0 === p ? {\r\n                text: getAllText(),\r\n                value: 0\r\n            } : {\r\n                text: String(p),\r\n                value: p\r\n            })\r\n        })()\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        super.componentWillUpdate();\r\n        if (this.props.pageSizes !== nextProps.pageSizes) {\r\n            this.__getterCache.normalizedPageSizes = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            htmlRef: this.htmlRef,\r\n            normalizedPageSizes: this.normalizedPageSizes,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPageSizeSelector.defaultProps = PageSizeSelectorPropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/content.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"className\", \"displayMode\", \"gridCompatibility\", \"hasKnownLastPage\", \"infoText\", \"infoTextRef\", \"infoTextVisible\", \"isLargeDisplayMode\", \"lightModeEnabled\", \"maxPagesCount\", \"onKeyDown\", \"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pageSize\", \"pageSizeChange\", \"pageSizes\", \"pageSizesRef\", \"pagesCountText\", \"pagesNavigatorVisible\", \"pagesRef\", \"rootElementRef\", \"rtlEnabled\", \"showInfo\", \"showNavigationButtons\", \"showPageSizes\", \"totalCount\", \"visible\"];\r\nimport {\r\n    createVNode,\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent,\r\n    normalizeStyles\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    InfoText\r\n} from \"./info\";\r\nimport {\r\n    PageIndexSelector\r\n} from \"./pages/page_index_selector\";\r\nimport {\r\n    PageSizeSelector\r\n} from \"./page_size/selector\";\r\nimport {\r\n    PAGER_PAGES_CLASS,\r\n    PAGER_PAGE_INDEXES_CLASS,\r\n    LIGHT_MODE_CLASS,\r\n    PAGER_CLASS\r\n} from \"./common/consts\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"./common/pager_props\";\r\nimport {\r\n    combineClasses\r\n} from \"../../utils/combine_classes\";\r\nimport {\r\n    Widget\r\n} from \"../common/widget\";\r\nimport {\r\n    registerKeyboardAction as _registerKeyboardAction\r\n} from \"../../../ui/shared/accessibility\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        classes: classes,\r\n        infoVisible: infoVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode,\r\n        pageIndexSelectorVisible: pageIndexSelectorVisible,\r\n        pagesContainerVisibility: pagesContainerVisibility,\r\n        pagesContainerVisible: pagesContainerVisible,\r\n        props: {\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            infoText: infoText,\r\n            infoTextRef: infoTextRef,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes,\r\n            pageSizesRef: pageSizesRef,\r\n            pagesCountText: pagesCountText,\r\n            pagesRef: pagesRef,\r\n            rtlEnabled: rtlEnabled,\r\n            showNavigationButtons: showNavigationButtons,\r\n            showPageSizes: showPageSizes,\r\n            totalCount: totalCount,\r\n            visible: visible\r\n        },\r\n        restAttributes: restAttributes,\r\n        widgetRootElementRef: widgetRootElementRef\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, Widget, _extends({\r\n        rootElementRef: widgetRootElementRef,\r\n        rtlEnabled: rtlEnabled,\r\n        classes: classes,\r\n        visible: visible\r\n    }, restAttributes, {\r\n        children: [showPageSizes && createComponentVNode(2, PageSizeSelector, {\r\n            rootElementRef: pageSizesRef,\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes\r\n        }), pagesContainerVisible && createVNode(1, \"div\", PAGER_PAGES_CLASS, [infoVisible && createComponentVNode(2, InfoText, {\r\n            rootElementRef: infoTextRef,\r\n            infoText: infoText,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            totalCount: totalCount\r\n        }), pageIndexSelectorVisible && createVNode(1, \"div\", PAGER_PAGE_INDEXES_CLASS, createComponentVNode(2, PageIndexSelector, {\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pagesCountText: pagesCountText,\r\n            showNavigationButtons: showNavigationButtons,\r\n            totalCount: totalCount\r\n        }), 2, null, null, pagesRef)], 0, {\r\n            style: normalizeStyles({\r\n                visibility: pagesContainerVisibility\r\n            })\r\n        })]\r\n    })))\r\n};\r\nexport var PagerContentProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(InternalPagerProps), Object.getOwnPropertyDescriptors({\r\n    infoTextVisible: true,\r\n    isLargeDisplayMode: true\r\n})));\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class PagerContent extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.widgetRootElementRef = infernoCreateRef();\r\n        this.__getterCache = {};\r\n        this.setRootElementRef = this.setRootElementRef.bind(this);\r\n        this.createFakeInstance = this.createFakeInstance.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.setRootElementRef, [])]\r\n    }\r\n    getChildContext() {\r\n        return _extends({}, this.context, {\r\n            KeyboardActionContext: this.keyboardAction\r\n        })\r\n    }\r\n    setRootElementRef() {\r\n        var {\r\n            rootElementRef: rootElementRef\r\n        } = this.props;\r\n        if (rootElementRef) {\r\n            rootElementRef.current = this.widgetRootElementRef.current\r\n        }\r\n    }\r\n    createFakeInstance() {\r\n        return {\r\n            option: () => false,\r\n            element: () => this.widgetRootElementRef.current,\r\n            _createActionByOption: () => e => {\r\n                var _this$props$onKeyDown, _this$props;\r\n                null === (_this$props$onKeyDown = (_this$props = this.props).onKeyDown) || void 0 === _this$props$onKeyDown ? void 0 : _this$props$onKeyDown.call(_this$props, e)\r\n            }\r\n        }\r\n    }\r\n    get keyboardAction() {\r\n        if (void 0 !== this.__getterCache.keyboardAction) {\r\n            return this.__getterCache.keyboardAction\r\n        }\r\n        return this.__getterCache.keyboardAction = (() => ({\r\n            registerKeyboardAction: (element, action) => {\r\n                var fakePagerInstance = this.createFakeInstance();\r\n                return _registerKeyboardAction(\"pager\", fakePagerInstance, element, void 0, action)\r\n            }\r\n        }))()\r\n    }\r\n    get infoVisible() {\r\n        var {\r\n            infoTextVisible: infoTextVisible,\r\n            showInfo: showInfo\r\n        } = this.props;\r\n        return showInfo && infoTextVisible && this.isLargeDisplayMode\r\n    }\r\n    get pageIndexSelectorVisible() {\r\n        return 0 !== this.props.pageSize\r\n    }\r\n    get normalizedDisplayMode() {\r\n        var {\r\n            displayMode: displayMode,\r\n            lightModeEnabled: lightModeEnabled\r\n        } = this.props;\r\n        if (\"adaptive\" === displayMode && void 0 !== lightModeEnabled) {\r\n            return lightModeEnabled ? \"compact\" : \"full\"\r\n        }\r\n        return displayMode\r\n    }\r\n    get pagesContainerVisible() {\r\n        return !!this.props.pagesNavigatorVisible && this.props.pageCount > 0\r\n    }\r\n    get pagesContainerVisibility() {\r\n        if (\"auto\" === this.props.pagesNavigatorVisible && 1 === this.props.pageCount && this.props.hasKnownLastPage) {\r\n            return \"hidden\"\r\n        }\r\n        return\r\n    }\r\n    get isLargeDisplayMode() {\r\n        var displayMode = this.normalizedDisplayMode;\r\n        var result = false;\r\n        if (\"adaptive\" === displayMode) {\r\n            result = this.props.isLargeDisplayMode\r\n        } else {\r\n            result = \"full\" === displayMode\r\n        }\r\n        return result\r\n    }\r\n    get classes() {\r\n        var classesMap = {\r\n            [\"\".concat(this.props.className)]: !!this.props.className,\r\n            [PAGER_CLASS]: true,\r\n            [LIGHT_MODE_CLASS]: !this.isLargeDisplayMode\r\n        };\r\n        return combineClasses(classesMap)\r\n    }\r\n    get restAttributes() {\r\n        var _this$props2 = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props2, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        super.componentWillUpdate();\r\n        if (this.props.onKeyDown !== nextProps.onKeyDown) {\r\n            this.__getterCache.keyboardAction = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            widgetRootElementRef: this.widgetRootElementRef,\r\n            keyboardAction: this.keyboardAction,\r\n            infoVisible: this.infoVisible,\r\n            pageIndexSelectorVisible: this.pageIndexSelectorVisible,\r\n            pagesContainerVisible: this.pagesContainerVisible,\r\n            pagesContainerVisibility: this.pagesContainerVisibility,\r\n            isLargeDisplayMode: this.isLargeDisplayMode,\r\n            classes: this.classes,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPagerContent.defaultProps = PagerContentProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"className\", \"defaultPageIndex\", \"defaultPageSize\", \"displayMode\", \"gridCompatibility\", \"hasKnownLastPage\", \"infoText\", \"lightModeEnabled\", \"maxPagesCount\", \"onKeyDown\", \"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pageSize\", \"pageSizeChange\", \"pageSizes\", \"pagesCountText\", \"pagesNavigatorVisible\", \"rtlEnabled\", \"showInfo\", \"showNavigationButtons\", \"showPageSizes\", \"totalCount\", \"visible\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    InfernoWrapperComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    ResizableContainer\r\n} from \"./resizable_container\";\r\nimport {\r\n    PagerProps\r\n} from \"./common/pager_props\";\r\nimport {\r\n    PagerContent\r\n} from \"./content\";\r\nimport {\r\n    combineClasses\r\n} from \"../../utils/combine_classes\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        pagerProps: pagerProps,\r\n        restAttributes: restAttributes\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, ResizableContainer, _extends({\r\n        contentTemplate: PagerContent,\r\n        pagerProps: pagerProps\r\n    }, restAttributes)))\r\n};\r\nimport {\r\n    createReRenderEffect\r\n} from \"@devextreme/runtime/inferno\";\r\nexport class Pager extends InfernoWrapperComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.__getterCache = {};\r\n        this.state = {\r\n            pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.props.defaultPageSize,\r\n            pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.props.defaultPageIndex\r\n        };\r\n        this.pageIndexChange = this.pageIndexChange.bind(this);\r\n        this.pageSizeChange = this.pageSizeChange.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [createReRenderEffect()]\r\n    }\r\n    pageIndexChange(newPageIndex) {\r\n        if (this.props.gridCompatibility) {\r\n            var __newValue;\r\n            this.setState(__state_argument => {\r\n                __newValue = newPageIndex + 1;\r\n                return {\r\n                    pageIndex: __newValue\r\n                }\r\n            });\r\n            this.props.pageIndexChange(__newValue)\r\n        } else {\r\n            var _newValue;\r\n            this.setState(__state_argument => {\r\n                _newValue = newPageIndex;\r\n                return {\r\n                    pageIndex: _newValue\r\n                }\r\n            });\r\n            this.props.pageIndexChange(_newValue)\r\n        }\r\n    }\r\n    get pageIndex() {\r\n        if (this.props.gridCompatibility) {\r\n            return (void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex) - 1\r\n        }\r\n        return void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex\r\n    }\r\n    pageSizeChange(newPageSize) {\r\n        var __newValue;\r\n        this.setState(__state_argument => {\r\n            __newValue = newPageSize;\r\n            return {\r\n                pageSize: __newValue\r\n            }\r\n        });\r\n        this.props.pageSizeChange(__newValue)\r\n    }\r\n    get className() {\r\n        if (this.props.gridCompatibility) {\r\n            return combineClasses({\r\n                \"dx-datagrid-pager\": true,\r\n                [\"\".concat(this.props.className)]: !!this.props.className\r\n            })\r\n        }\r\n        return this.props.className\r\n    }\r\n    get pagerProps() {\r\n        if (void 0 !== this.__getterCache.pagerProps) {\r\n            return this.__getterCache.pagerProps\r\n        }\r\n        return this.__getterCache.pagerProps = (() => _extends({}, _extends({}, this.props, {\r\n            pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.state.pageSize,\r\n            pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex\r\n        }), {\r\n            className: this.className,\r\n            pageIndex: this.pageIndex,\r\n            pageIndexChange: pageIndex => this.pageIndexChange(pageIndex),\r\n            pageSizeChange: pageSize => this.pageSizeChange(pageSize)\r\n        }))()\r\n    }\r\n    get restAttributes() {\r\n        var _this$props$pageSize$ = _extends({}, this.props, {\r\n                pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.state.pageSize,\r\n                pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex\r\n            }),\r\n            restProps = _objectWithoutPropertiesLoose(_this$props$pageSize$, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        super.componentWillUpdate();\r\n        if (this.props !== nextProps || this.props.gridCompatibility !== nextProps.gridCompatibility || this.props.className !== nextProps.className || this.state.pageIndex !== nextState.pageIndex || this.props.pageIndex !== nextProps.pageIndex || this.props.pageIndexChange !== nextProps.pageIndexChange || this.props.pageSizeChange !== nextProps.pageSizeChange) {\r\n            this.__getterCache.pagerProps = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.state.pageSize,\r\n                pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex\r\n            }),\r\n            pageIndexChange: this.pageIndexChange,\r\n            pageIndex: this.pageIndex,\r\n            pageSizeChange: this.pageSizeChange,\r\n            className: this.className,\r\n            pagerProps: this.pagerProps,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPager.defaultProps = PagerProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pager.j.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport {\r\n    GridPagerWrapper\r\n} from \"../../component_wrapper/grid_pager\";\r\nimport {\r\n    Pager as PagerComponent\r\n} from \"./pager\";\r\nexport default class Pager extends GridPagerWrapper {\r\n    getProps() {\r\n        var props = super.getProps();\r\n        props.onKeyDown = this._wrapKeyDownHandler(props.onKeyDown);\r\n        return props\r\n    }\r\n    get _propsInfo() {\r\n        return {\r\n            twoWay: [\r\n                [\"pageSize\", \"defaultPageSize\", \"pageSizeChange\"],\r\n                [\"pageIndex\", \"defaultPageIndex\", \"pageIndexChange\"]\r\n            ],\r\n            allowNull: [],\r\n            elements: [],\r\n            templates: [],\r\n            props: [\"defaultPageSize\", \"pageSizeChange\", \"defaultPageIndex\", \"pageIndexChange\", \"gridCompatibility\", \"className\", \"showInfo\", \"infoText\", \"lightModeEnabled\", \"displayMode\", \"maxPagesCount\", \"pageCount\", \"pagesCountText\", \"visible\", \"hasKnownLastPage\", \"pagesNavigatorVisible\", \"showPageSizes\", \"pageSizes\", \"rtlEnabled\", \"showNavigationButtons\", \"totalCount\", \"onKeyDown\", \"pageSize\", \"pageIndex\"]\r\n        }\r\n    }\r\n    get _viewComponent() {\r\n        return PagerComponent\r\n    }\r\n}\r\nregisterComponent(\"dxPager\", Pager);\r\n","/**\r\n * DevExtreme (esm/ui/pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Widget from \"../renovation/ui/pager/pager.j\";\r\nexport default Widget;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport Pager from \"../pager\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nvar PAGER_CLASS = \"pager\";\r\nvar MAX_PAGES_COUNT = 10;\r\nvar getPageIndex = function(dataController) {\r\n    return 1 + (parseInt(dataController.pageIndex()) || 0)\r\n};\r\nvar PagerView = modules.View.inherit({\r\n    init: function() {\r\n        var dataController = this.getController(\"data\");\r\n        dataController.changed.add(e => {\r\n            if (e && e.repaintChangesOnly) {\r\n                var pager = this._getPager();\r\n                if (pager) {\r\n                    pager.option({\r\n                        pageIndex: getPageIndex(dataController),\r\n                        pageSize: dataController.pageSize(),\r\n                        pageCount: dataController.pageCount(),\r\n                        totalCount: dataController.totalCount(),\r\n                        hasKnownLastPage: dataController.hasKnownLastPage()\r\n                    })\r\n                } else {\r\n                    this.render()\r\n                }\r\n            } else if (!e || \"update\" !== e.changeType && \"updateSelection\" !== e.changeType && \"updateFocusedRow\" !== e.changeType) {\r\n                this.render()\r\n            }\r\n        })\r\n    },\r\n    _getPager: function() {\r\n        var $element = this.element();\r\n        return $element && $element.data(\"dxPager\")\r\n    },\r\n    _renderCore: function() {\r\n        var $element = this.element().addClass(this.addWidgetPrefix(PAGER_CLASS));\r\n        var pagerOptions = this.option(\"pager\") || {};\r\n        var dataController = this.getController(\"data\");\r\n        var keyboardController = this.getController(\"keyboardNavigation\");\r\n        var options = {\r\n            maxPagesCount: MAX_PAGES_COUNT,\r\n            pageIndex: getPageIndex(dataController),\r\n            pageCount: dataController.pageCount(),\r\n            pageSize: dataController.pageSize(),\r\n            showPageSizes: pagerOptions.showPageSizeSelector,\r\n            showInfo: pagerOptions.showInfo,\r\n            displayMode: pagerOptions.displayMode,\r\n            pagesNavigatorVisible: pagerOptions.visible,\r\n            showNavigationButtons: pagerOptions.showNavigationButtons,\r\n            pageSizes: this.getPageSizes(),\r\n            totalCount: dataController.totalCount(),\r\n            hasKnownLastPage: dataController.hasKnownLastPage(),\r\n            pageIndexChanged: function(pageIndex) {\r\n                if (dataController.pageIndex() !== pageIndex - 1) {\r\n                    setTimeout((function() {\r\n                        dataController.pageIndex(pageIndex - 1)\r\n                    }))\r\n                }\r\n            },\r\n            pageSizeChanged: function(pageSize) {\r\n                setTimeout((function() {\r\n                    dataController.pageSize(pageSize)\r\n                }))\r\n            },\r\n            onKeyDown: e => keyboardController && keyboardController.executeAction(\"onKeyDown\", e),\r\n            useLegacyKeyboardNavigation: this.option(\"useLegacyKeyboardNavigation\"),\r\n            useKeyboard: this.option(\"keyboardNavigation.enabled\")\r\n        };\r\n        if (isDefined(pagerOptions.infoText)) {\r\n            options.infoText = pagerOptions.infoText\r\n        }\r\n        if (hasWindow()) {\r\n            this._createComponent($element, Pager, options)\r\n        } else {\r\n            $element.addClass(\"dx-pager\").html('<div class=\"dx-pages\"><div class=\"dx-page\"></div></div>')\r\n        }\r\n    },\r\n    getPageSizes: function() {\r\n        var dataController = this.getController(\"data\");\r\n        var pagerOptions = this.option(\"pager\");\r\n        var allowedPageSizes = pagerOptions && pagerOptions.allowedPageSizes;\r\n        var pageSize = dataController.pageSize();\r\n        if (!isDefined(this._pageSizes) || -1 === inArray(pageSize, this._pageSizes)) {\r\n            this._pageSizes = [];\r\n            if (pagerOptions) {\r\n                if (Array.isArray(allowedPageSizes)) {\r\n                    this._pageSizes = allowedPageSizes\r\n                } else if (allowedPageSizes && pageSize > 1) {\r\n                    this._pageSizes = [Math.floor(pageSize / 2), pageSize, 2 * pageSize]\r\n                }\r\n            }\r\n        }\r\n        return this._pageSizes\r\n    },\r\n    isVisible: function() {\r\n        var dataController = this.getController(\"data\");\r\n        var pagerOptions = this.option(\"pager\");\r\n        var pagerVisible = pagerOptions && pagerOptions.visible;\r\n        var scrolling = this.option(\"scrolling\");\r\n        if (\"auto\" === pagerVisible) {\r\n            if (scrolling && (\"virtual\" === scrolling.mode || \"infinite\" === scrolling.mode)) {\r\n                pagerVisible = false\r\n            } else {\r\n                pagerVisible = dataController.pageCount() > 1 || dataController.isLoaded() && !dataController.hasKnownLastPage()\r\n            }\r\n        }\r\n        return pagerVisible\r\n    },\r\n    getHeight: function() {\r\n        return this.getElementHeight()\r\n    },\r\n    optionChanged: function(args) {\r\n        var name = args.name;\r\n        var isPager = \"pager\" === name;\r\n        var isPaging = \"paging\" === name;\r\n        var isDataSource = \"dataSource\" === name;\r\n        var isScrolling = \"scrolling\" === name;\r\n        var dataController = this.getController(\"data\");\r\n        if (isPager || isPaging || isScrolling || isDataSource) {\r\n            args.handled = true;\r\n            if (dataController.skipProcessingPagingChange(args.fullName)) {\r\n                return\r\n            }\r\n            if (isPager || isPaging) {\r\n                this._pageSizes = null\r\n            }\r\n            if (!isDataSource) {\r\n                this._invalidate();\r\n                if (hasWindow() && isPager && this.component) {\r\n                    this.component.resize()\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\nexport var pagerModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            pager: {\r\n                visible: \"auto\",\r\n                showPageSizeSelector: false,\r\n                allowedPageSizes: \"auto\"\r\n            }\r\n        }\r\n    },\r\n    views: {\r\n        pagerView: PagerView\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    pagerModule\r\n} from \"../grid_core/ui.grid_core.pager\";\r\ngridCore.registerModule(\"pager\", pagerModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_resizing_reordering.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    setHeight as _setHeight,\r\n    getHeight,\r\n    setWidth,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    isDefined,\r\n    isString,\r\n    isObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    addNamespace,\r\n    eventData as getEventData,\r\n    isTouchEvent\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    start as dragEventStart,\r\n    move as dragEventMove,\r\n    end as dragEventEnd\r\n} from \"../../events/drag\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport fx from \"../../animation/fx\";\r\nimport swatchContainer from \"../widget/swatch_container\";\r\nvar COLUMNS_SEPARATOR_CLASS = \"columns-separator\";\r\nvar COLUMNS_SEPARATOR_TRANSPARENT = \"columns-separator-transparent\";\r\nvar DRAGGING_HEADER_CLASS = \"drag-header\";\r\nvar CELL_CONTENT_CLASS = \"text-content\";\r\nvar HEADERS_DRAG_ACTION_CLASS = \"drag-action\";\r\nvar TRACKER_CLASS = \"tracker\";\r\nvar HEADERS_DROP_HIGHLIGHT_CLASS = \"drop-highlight\";\r\nvar BLOCK_SEPARATOR_CLASS = \"dx-block-separator\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar WIDGET_CLASS = \"dx-widget\";\r\nvar DRAGGING_COMMAND_CELL_CLASS = \"dx-drag-command-cell\";\r\nvar MODULE_NAMESPACE = \"dxDataGridResizingReordering\";\r\nvar COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH = 10;\r\nvar DRAGGING_DELTA = 5;\r\nvar COLUMN_OPACITY = .5;\r\nvar allowResizing = function(that) {\r\n    return that.option(\"allowColumnResizing\") || that.getController(\"columns\").isColumnOptionUsed(\"allowResizing\")\r\n};\r\nvar allowReordering = function(that) {\r\n    return that.option(\"allowColumnReordering\") || that.getController(\"columns\").isColumnOptionUsed(\"allowReordering\")\r\n};\r\nvar TrackerView = modules.View.inherit({\r\n    _renderCore: function() {\r\n        this.callBase();\r\n        this.element().addClass(this.addWidgetPrefix(TRACKER_CLASS));\r\n        this.hide()\r\n    },\r\n    _unsubscribeFromCallback: function() {\r\n        if (this._positionChanged) {\r\n            this._tablePositionController.positionChanged.remove(this._positionChanged)\r\n        }\r\n    },\r\n    _subscribeToCallback: function() {\r\n        var that = this;\r\n        that._positionChanged = function(position) {\r\n            var $element = that.element();\r\n            if ($element && $element.hasClass(that.addWidgetPrefix(TRACKER_CLASS))) {\r\n                $element.css({\r\n                    top: position.top\r\n                });\r\n                _setHeight($element, position.height)\r\n            }\r\n        };\r\n        this._tablePositionController.positionChanged.add(that._positionChanged)\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            this._unsubscribeFromCallback();\r\n            if (args.value) {\r\n                this._subscribeToCallback();\r\n                this._invalidate()\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this._tablePositionController = this.getController(\"tablePosition\");\r\n        this._subscribeToCallback()\r\n    },\r\n    isVisible: function() {\r\n        return allowResizing(this)\r\n    },\r\n    show: function() {\r\n        this.element().show()\r\n    },\r\n    hide: function() {\r\n        this.element() && this.element().hide()\r\n    },\r\n    setHeight: function(value) {\r\n        _setHeight(this.element(), value)\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribeFromCallback();\r\n        this.callBase()\r\n    }\r\n});\r\nvar SeparatorView = modules.View.inherit({\r\n    _renderSeparator: function() {},\r\n    _renderCore: function(options) {\r\n        this.callBase(options);\r\n        this._isShown = true;\r\n        this._renderSeparator();\r\n        this.hide()\r\n    },\r\n    show: function() {\r\n        this._isShown = true\r\n    },\r\n    hide: function() {\r\n        this._isShown = false\r\n    },\r\n    height: function(value) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            if (isDefined(value)) {\r\n                _setHeight($element, value)\r\n            } else {\r\n                return getHeight($element)\r\n            }\r\n        }\r\n    },\r\n    width: function(value) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            if (isDefined(value)) {\r\n                setWidth($element, value)\r\n            } else {\r\n                return getWidth($element)\r\n            }\r\n        }\r\n    }\r\n});\r\nvar ColumnsSeparatorView = SeparatorView.inherit({\r\n    _renderSeparator: function() {\r\n        this.callBase();\r\n        var $element = this.element();\r\n        $element.addClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_CLASS))\r\n    },\r\n    _subscribeToCallback: function() {\r\n        var that = this;\r\n        var $element;\r\n        that._positionChanged = function(position) {\r\n            $element = that.element();\r\n            if ($element) {\r\n                $element.css({\r\n                    top: position.top\r\n                });\r\n                _setHeight($element, position.height)\r\n            }\r\n        };\r\n        that._tablePositionController.positionChanged.add(that._positionChanged)\r\n    },\r\n    _unsubscribeFromCallback: function() {\r\n        this._positionChanged && this._tablePositionController.positionChanged.remove(this._positionChanged)\r\n    },\r\n    _init: function() {\r\n        this._isTransparent = allowResizing(this);\r\n        if (this.isVisible()) {\r\n            this._subscribeToCallback()\r\n        }\r\n    },\r\n    isVisible: function() {\r\n        return this.option(\"showColumnHeaders\") && (allowReordering(this) || allowResizing(this))\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            if (args.value) {\r\n                this._init();\r\n                this._invalidate();\r\n                this.hide(true)\r\n            } else {\r\n                this._unsubscribeFromCallback();\r\n                this._isTransparent = allowResizing(this);\r\n                this.hide(true)\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this._tablePositionController = this.getController(\"tablePosition\");\r\n        this._init()\r\n    },\r\n    show: function() {\r\n        var $element = this.element();\r\n        if ($element && !this._isShown) {\r\n            if (this._isTransparent) {\r\n                $element.removeClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT))\r\n            } else {\r\n                $element.show()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    hide: function(force) {\r\n        var $element = this.element();\r\n        var columnsSeparatorTransparent = this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT);\r\n        if ($element && (this._isShown || force)) {\r\n            if (this._isTransparent) {\r\n                $element.addClass(columnsSeparatorTransparent);\r\n                $element.css(\"left\", \"\");\r\n                $element.show()\r\n            } else {\r\n                if ($element.hasClass(columnsSeparatorTransparent)) {\r\n                    $element.removeClass(columnsSeparatorTransparent)\r\n                }\r\n                $element.hide()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    moveByX: function(outerX) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            $element.css(\"left\", null === outerX ? 0 : outerX - this._parentElement().offset().left)\r\n        }\r\n    },\r\n    changeCursor: function(cursorName) {\r\n        cursorName = isDefined(cursorName) ? cursorName : \"\";\r\n        var $element = this.element();\r\n        if ($element) {\r\n            $element.css(\"cursor\", cursorName)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribeFromCallback();\r\n        this.callBase()\r\n    }\r\n});\r\nvar BlockSeparatorView = SeparatorView.inherit({\r\n    init: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        this.getController(\"data\").loadingChanged.add((function(isLoading) {\r\n            if (!isLoading) {\r\n                that.hide()\r\n            }\r\n        }))\r\n    },\r\n    _renderSeparator: function() {\r\n        this.callBase();\r\n        this.element().addClass(BLOCK_SEPARATOR_CLASS).html(\"&nbsp;\")\r\n    },\r\n    hide: function() {\r\n        var $parent = this._parentElement();\r\n        var $element = this.element();\r\n        if ($element && this._isShown) {\r\n            $element.css(\"display\", \"none\")\r\n        }\r\n        if ($parent && !$parent.children(\".\" + BLOCK_SEPARATOR_CLASS).length) {\r\n            $parent.prepend(this.element())\r\n        }\r\n        this.callBase()\r\n    },\r\n    isVisible: function() {\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        var columnChooserOptions = this.option(\"columnChooser\");\r\n        return groupPanelOptions && groupPanelOptions.visible || columnChooserOptions && columnChooserOptions.enabled\r\n    },\r\n    show: function(targetLocation) {\r\n        var $element = this.element();\r\n        var startAnimate = function(toOptions) {\r\n            fx.stop($element, true);\r\n            fx.animate($element, {\r\n                type: \"slide\",\r\n                from: {\r\n                    width: 0,\r\n                    display: toOptions.display\r\n                },\r\n                to: toOptions,\r\n                duration: 300,\r\n                easing: \"swing\"\r\n            })\r\n        };\r\n        if ($element && !this._isShown) {\r\n            switch (targetLocation) {\r\n                case \"group\":\r\n                    startAnimate({\r\n                        width: \"50px\",\r\n                        display: \"inline-block\"\r\n                    });\r\n                    break;\r\n                case \"columnChooser\":\r\n                    startAnimate({\r\n                        width: \"100%\",\r\n                        display: \"block\"\r\n                    });\r\n                    break;\r\n                default:\r\n                    $element.css(\"display\", \"\")\r\n            }\r\n        }\r\n        this.callBase()\r\n    }\r\n});\r\nvar DraggingHeaderView = modules.View.inherit({\r\n    _isDragging: false,\r\n    isDragging: function() {\r\n        return this._isDragging\r\n    },\r\n    _getDraggingPanelByPos: function(pos) {\r\n        var result;\r\n        each(this._dragOptions.draggingPanels, (function(index, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var boundingRect = draggingPanel.getBoundingRect();\r\n                if (boundingRect && (void 0 === boundingRect.bottom || pos.y < boundingRect.bottom) && (void 0 === boundingRect.top || pos.y > boundingRect.top) && (void 0 === boundingRect.left || pos.x > boundingRect.left) && (void 0 === boundingRect.right || pos.x < boundingRect.right)) {\r\n                    result = draggingPanel;\r\n                    return false\r\n                }\r\n            }\r\n        }));\r\n        return result\r\n    },\r\n    _renderCore: function() {\r\n        this.element().addClass(this.addWidgetPrefix(DRAGGING_HEADER_CLASS) + \" \" + this.addWidgetPrefix(CELL_CONTENT_CLASS) + \" \" + WIDGET_CLASS).hide()\r\n    },\r\n    _resetTargetColumnOptions: function() {\r\n        var params = this._dropOptions;\r\n        params.targetColumnIndex = -1;\r\n        delete params.targetColumnElement;\r\n        delete params.isLast;\r\n        delete params.posX;\r\n        delete params.posY\r\n    },\r\n    _getVisibleIndexObject: function(rowIndex, visibleIndex) {\r\n        if (isDefined(rowIndex)) {\r\n            return {\r\n                columnIndex: visibleIndex,\r\n                rowIndex: rowIndex\r\n            }\r\n        }\r\n        return visibleIndex\r\n    },\r\n    dispose: function() {\r\n        var element = this.element();\r\n        this._dragOptions = null;\r\n        element && element.parent().find(\".\" + this.addWidgetPrefix(DRAGGING_HEADER_CLASS)).remove()\r\n    },\r\n    isVisible: function() {\r\n        var columnsController = this.getController(\"columns\");\r\n        var commonColumnSettings = columnsController.getCommonSettings();\r\n        return this.option(\"showColumnHeaders\") && (allowReordering(this) || commonColumnSettings.allowGrouping || commonColumnSettings.allowHiding)\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        this._controller = this.getController(\"draggingHeader\");\r\n        this._columnsResizerViewController = this.getController(\"columnsResizer\");\r\n        this.getController(\"data\").loadingChanged.add((function(isLoading) {\r\n            var element = that.element();\r\n            if (!isLoading && element) {\r\n                element.hide()\r\n            }\r\n        }))\r\n    },\r\n    dragHeader: function(options) {\r\n        var columnElement = options.columnElement;\r\n        var isCommandColumn = !!options.sourceColumn.type;\r\n        this._isDragging = true;\r\n        this._dragOptions = options;\r\n        this._dropOptions = {\r\n            sourceIndex: options.index,\r\n            sourceColumnIndex: this._getVisibleIndexObject(options.rowIndex, options.columnIndex),\r\n            sourceColumnElement: options.columnElement,\r\n            sourceLocation: options.sourceLocation\r\n        };\r\n        var document = domAdapter.getDocument();\r\n        this._onSelectStart = document.onselectstart;\r\n        document.onselectstart = function() {\r\n            return false\r\n        };\r\n        this._controller.drag(this._dropOptions);\r\n        this.element().css({\r\n            textAlign: columnElement && columnElement.css(\"textAlign\"),\r\n            height: columnElement && (isCommandColumn && columnElement.get(0).clientHeight || getHeight(columnElement)),\r\n            width: columnElement && (isCommandColumn && columnElement.get(0).clientWidth || getWidth(columnElement)),\r\n            whiteSpace: columnElement && columnElement.css(\"whiteSpace\")\r\n        }).addClass(this.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS)).toggleClass(DRAGGING_COMMAND_CELL_CLASS, isCommandColumn).text(isCommandColumn ? \"\" : options.sourceColumn.caption);\r\n        this.element().appendTo(swatchContainer.getSwatchContainer(columnElement))\r\n    },\r\n    moveHeader: function(args) {\r\n        var e = args.event;\r\n        var that = e.data.that;\r\n        var eventData = getEventData(e);\r\n        var isResizing = that._columnsResizerViewController ? that._columnsResizerViewController.isResizing() : false;\r\n        var dragOptions = that._dragOptions;\r\n        if (that._isDragging && !isResizing) {\r\n            var $element = that.element();\r\n            var moveDeltaX = Math.abs(eventData.x - dragOptions.columnElement.offset().left - dragOptions.deltaX);\r\n            var moveDeltaY = Math.abs(eventData.y - dragOptions.columnElement.offset().top - dragOptions.deltaY);\r\n            if ($element.is(\":visible\") || moveDeltaX > DRAGGING_DELTA || moveDeltaY > DRAGGING_DELTA) {\r\n                $element.show();\r\n                var newLeft = eventData.x - dragOptions.deltaX;\r\n                var newTop = eventData.y - dragOptions.deltaY;\r\n                $element.css({\r\n                    left: newLeft,\r\n                    top: newTop\r\n                });\r\n                that.dockHeader(eventData)\r\n            }\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    dockHeader: function(eventData) {\r\n        var targetDraggingPanel = this._getDraggingPanelByPos(eventData);\r\n        var controller = this._controller;\r\n        var params = this._dropOptions;\r\n        var dragOptions = this._dragOptions;\r\n        if (targetDraggingPanel) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\");\r\n            var isVerticalOrientation = \"columnChooser\" === targetDraggingPanel.getName();\r\n            var axisName = isVerticalOrientation ? \"y\" : \"x\";\r\n            var targetLocation = targetDraggingPanel.getName();\r\n            var rowIndex = \"headers\" === targetLocation ? dragOptions.rowIndex : void 0;\r\n            var sourceColumn = dragOptions.sourceColumn;\r\n            var columnElements = targetDraggingPanel.getColumnElements(rowIndex, null === sourceColumn || void 0 === sourceColumn ? void 0 : sourceColumn.ownerBand) || [];\r\n            var pointsByTarget = dragOptions.pointsByTarget = dragOptions.pointsByTarget || {};\r\n            var pointsByColumns = \"columnChooser\" === targetLocation ? [] : pointsByTarget[targetLocation] || controller._generatePointsByColumns(extend({}, dragOptions, {\r\n                targetDraggingPanel: targetDraggingPanel,\r\n                columns: targetDraggingPanel.getColumns(rowIndex),\r\n                columnElements: columnElements,\r\n                isVerticalOrientation: isVerticalOrientation,\r\n                startColumnIndex: \"headers\" === targetLocation && $(columnElements[0]).index()\r\n            }));\r\n            pointsByTarget[targetLocation] = pointsByColumns;\r\n            params.targetLocation = targetLocation;\r\n            if (pointsByColumns.length > 0) {\r\n                for (var i = 0; i < pointsByColumns.length; i++) {\r\n                    var centerPosition = pointsByColumns[i + 1] && (pointsByColumns[i][axisName] + pointsByColumns[i + 1][axisName]) / 2;\r\n                    if (void 0 === centerPosition || (rtlEnabled && \"x\" === axisName ? eventData[axisName] > centerPosition : eventData[axisName] < centerPosition)) {\r\n                        params.targetColumnIndex = this._getVisibleIndexObject(rowIndex, pointsByColumns[i].columnIndex);\r\n                        if (columnElements[i]) {\r\n                            params.targetColumnElement = columnElements.eq(i);\r\n                            params.isLast = false\r\n                        } else {\r\n                            params.targetColumnElement = columnElements.last();\r\n                            params.isLast = true\r\n                        }\r\n                        params.posX = pointsByColumns[i].x;\r\n                        params.posY = pointsByColumns[i].y;\r\n                        controller.dock(params);\r\n                        break\r\n                    }\r\n                }\r\n            } else {\r\n                this._resetTargetColumnOptions();\r\n                controller.dock(params)\r\n            }\r\n        }\r\n    },\r\n    dropHeader: function(args) {\r\n        var e = args.event;\r\n        var that = e.data.that;\r\n        var controller = that._controller;\r\n        that.element().hide();\r\n        if (controller && that._isDragging) {\r\n            controller.drop(that._dropOptions)\r\n        }\r\n        that.element().appendTo(that._parentElement());\r\n        that._dragOptions = null;\r\n        that._dropOptions = null;\r\n        that._isDragging = false;\r\n        domAdapter.getDocument().onselectstart = that._onSelectStart || null\r\n    }\r\n});\r\nvar isNextColumnResizingMode = function(that) {\r\n    return \"widget\" !== that.option(\"columnResizingMode\")\r\n};\r\nvar ColumnsResizerViewController = modules.ViewController.inherit({\r\n    _isHeadersRowArea: function(posY) {\r\n        if (this._columnHeadersView) {\r\n            var element = this._columnHeadersView.element();\r\n            if (element) {\r\n                var offsetTop = element.offset().top;\r\n                var headersRowHeight = this._columnHeadersView.getHeadersRowHeight();\r\n                return posY >= offsetTop && posY <= offsetTop + headersRowHeight\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _isRtlParentStyle: function() {\r\n        var _this$_$parentContain;\r\n        return this.option(\"rtlEnabled\") && \"rtl\" === (null === (_this$_$parentContain = this._$parentContainer) || void 0 === _this$_$parentContain ? void 0 : _this$_$parentContain.parent().css(\"direction\"))\r\n    },\r\n    _pointCreated: function(point, cellsLength, columns) {\r\n        var isNextColumnMode = isNextColumnResizingMode(this);\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n        var firstPointColumnIndex = !isNextColumnMode && rtlEnabled && !isRtlParentStyle ? 0 : 1;\r\n        if (point.index >= firstPointColumnIndex && point.index < cellsLength + (!isNextColumnMode && (!rtlEnabled || isRtlParentStyle) ? 1 : 0)) {\r\n            point.columnIndex -= firstPointColumnIndex;\r\n            var currentColumn = columns[point.columnIndex] || {};\r\n            var nextColumn = columns[point.columnIndex + 1] || {};\r\n            return !(isNextColumnMode ? currentColumn.allowResizing && nextColumn.allowResizing : currentColumn.allowResizing)\r\n        }\r\n        return true\r\n    },\r\n    _getTargetPoint: function(pointsByColumns, currentX, deltaX) {\r\n        if (pointsByColumns) {\r\n            for (var i = 0; i < pointsByColumns.length; i++) {\r\n                if (pointsByColumns[i].x === pointsByColumns[0].x && pointsByColumns[i + 1] && pointsByColumns[i].x === pointsByColumns[i + 1].x) {\r\n                    continue\r\n                }\r\n                if (pointsByColumns[i].x - deltaX <= currentX && currentX <= pointsByColumns[i].x + deltaX) {\r\n                    return pointsByColumns[i]\r\n                }\r\n            }\r\n        }\r\n        return null\r\n    },\r\n    _moveSeparator: function(args) {\r\n        var _that$_draggingHeader;\r\n        var e = args.event;\r\n        var that = e.data;\r\n        var columnsSeparatorWidth = that._columnsSeparatorView.width();\r\n        var isNextColumnMode = isNextColumnResizingMode(that);\r\n        var deltaX = columnsSeparatorWidth / 2;\r\n        var parentOffset = that._$parentContainer.offset();\r\n        var parentOffsetLeft = parentOffset.left;\r\n        var eventData = getEventData(e);\r\n        var rtlEnabled = that.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n        var isDragging = null === (_that$_draggingHeader = that._draggingHeaderView) || void 0 === _that$_draggingHeader ? void 0 : _that$_draggingHeader.isDragging();\r\n        if (that._isResizing && that._resizingInfo) {\r\n            if ((parentOffsetLeft <= eventData.x || !isNextColumnMode && isRtlParentStyle) && (!isNextColumnMode || eventData.x <= parentOffsetLeft + getWidth(that._$parentContainer))) {\r\n                if (that._updateColumnsWidthIfNeeded(eventData.x)) {\r\n                    var $cell = that._columnHeadersView.getColumnElements().eq(that._resizingInfo.currentColumnIndex);\r\n                    var cell = $cell[0];\r\n                    if (cell) {\r\n                        var outerWidth = cell.getBoundingClientRect().width;\r\n                        that._columnsSeparatorView.moveByX($cell.offset().left + ((isNextColumnMode || isRtlParentStyle) && rtlEnabled ? 0 : outerWidth));\r\n                        that._tablePositionController.update(that._targetPoint.y);\r\n                        e.preventDefault()\r\n                    }\r\n                }\r\n            }\r\n        } else if (!isDragging) {\r\n            if (that._isHeadersRowArea(eventData.y)) {\r\n                if (that._previousParentOffset) {\r\n                    if (that._previousParentOffset.left !== parentOffset.left || that._previousParentOffset.top !== parentOffset.top) {\r\n                        that.pointsByColumns(null)\r\n                    }\r\n                }\r\n                that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, columnsSeparatorWidth);\r\n                that._previousParentOffset = parentOffset;\r\n                that._isReadyResizing = false;\r\n                if (that._targetPoint) {\r\n                    that._columnsSeparatorView.changeCursor(\"col-resize\");\r\n                    that._columnsSeparatorView.moveByX(that._targetPoint.x - deltaX);\r\n                    that._tablePositionController.update(that._targetPoint.y);\r\n                    that._isReadyResizing = true;\r\n                    e.preventDefault()\r\n                } else {\r\n                    that._columnsSeparatorView.changeCursor();\r\n                    that._columnsSeparatorView.moveByX(null)\r\n                }\r\n            } else {\r\n                that.pointsByColumns(null);\r\n                that._isReadyResizing = false;\r\n                that._columnsSeparatorView.changeCursor();\r\n                that._columnsSeparatorView.moveByX(null)\r\n            }\r\n        }\r\n    },\r\n    _endResizing: function(args) {\r\n        var e = args.event;\r\n        var that = e.data;\r\n        if (that._isResizing) {\r\n            that.pointsByColumns(null);\r\n            that._resizingInfo = null;\r\n            that._columnsSeparatorView.hide();\r\n            that._columnsSeparatorView.changeCursor();\r\n            that._trackerView.hide();\r\n            that._isReadyResizing = false;\r\n            that._isResizing = false\r\n        }\r\n    },\r\n    _getNextColumnIndex: function(currentColumnIndex) {\r\n        return currentColumnIndex + 1\r\n    },\r\n    _setupResizingInfo: function(posX) {\r\n        var currentColumnIndex = this._targetPoint.columnIndex;\r\n        var nextColumnIndex = this._getNextColumnIndex(currentColumnIndex);\r\n        var currentHeader = this._columnHeadersView.getHeaderElement(currentColumnIndex);\r\n        var nextHeader = this._columnHeadersView.getHeaderElement(nextColumnIndex);\r\n        this._resizingInfo = {\r\n            startPosX: posX,\r\n            currentColumnIndex: currentColumnIndex,\r\n            currentColumnWidth: currentHeader && currentHeader.length > 0 ? getBoundingRect(currentHeader[0]).width : 0,\r\n            nextColumnIndex: nextColumnIndex,\r\n            nextColumnWidth: nextHeader && nextHeader.length > 0 ? getBoundingRect(nextHeader[0]).width : 0\r\n        }\r\n    },\r\n    _startResizing: function(args) {\r\n        var e = args.event;\r\n        var that = e.data;\r\n        var eventData = getEventData(e);\r\n        if (isTouchEvent(e)) {\r\n            if (that._isHeadersRowArea(eventData.y)) {\r\n                that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH);\r\n                if (that._targetPoint) {\r\n                    that._columnsSeparatorView.moveByX(that._targetPoint.x - that._columnsSeparatorView.width() / 2);\r\n                    that._isReadyResizing = true\r\n                }\r\n            } else {\r\n                that._isReadyResizing = false\r\n            }\r\n        }\r\n        if (that._isReadyResizing) {\r\n            that._setupResizingInfo(eventData.x);\r\n            that._isResizing = true;\r\n            that._tablePositionController.update(that._targetPoint.y);\r\n            that._columnsSeparatorView.show();\r\n            that._trackerView.show();\r\n            var scrollable = that.component.getScrollable();\r\n            if (scrollable && that._isRtlParentStyle()) {\r\n                that._scrollRight = getWidth(scrollable.$content()) - getWidth(scrollable.container()) - scrollable.scrollLeft()\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation()\r\n        }\r\n        if (this.isResizing()) {\r\n            this.getController(\"editorFactory\").loseFocus()\r\n        }\r\n    },\r\n    _generatePointsByColumns: function() {\r\n        var that = this;\r\n        var columns = that._columnsController ? that._columnsController.getVisibleColumns() : [];\r\n        var cells = that._columnHeadersView.getColumnElements();\r\n        var pointsByColumns = [];\r\n        if (cells && cells.length > 0) {\r\n            pointsByColumns = gridCoreUtils.getPointsByColumns(cells, (function(point) {\r\n                return that._pointCreated(point, cells.length, columns)\r\n            }))\r\n        }\r\n        that._pointsByColumns = pointsByColumns\r\n    },\r\n    _unsubscribeFromEvents: function() {\r\n        this._moveSeparatorHandler && eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.move, MODULE_NAMESPACE), this._moveSeparatorHandler);\r\n        this._startResizingHandler && eventsEngine.off(this._$parentContainer, addNamespace(pointerEvents.down, MODULE_NAMESPACE), this._startResizingHandler);\r\n        if (this._endResizingHandler) {\r\n            eventsEngine.off(this._columnsSeparatorView.element(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this._endResizingHandler);\r\n            eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this._endResizingHandler)\r\n        }\r\n    },\r\n    _subscribeToEvents: function() {\r\n        this._moveSeparatorHandler = this.createAction(this._moveSeparator);\r\n        this._startResizingHandler = this.createAction(this._startResizing);\r\n        this._endResizingHandler = this.createAction(this._endResizing);\r\n        eventsEngine.on(domAdapter.getDocument(), addNamespace(pointerEvents.move, MODULE_NAMESPACE), this, this._moveSeparatorHandler);\r\n        eventsEngine.on(this._$parentContainer, addNamespace(pointerEvents.down, MODULE_NAMESPACE), this, this._startResizingHandler);\r\n        eventsEngine.on(this._columnsSeparatorView.element(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this, this._endResizingHandler);\r\n        eventsEngine.on(domAdapter.getDocument(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this, this._endResizingHandler)\r\n    },\r\n    _updateColumnsWidthIfNeeded: function(posX) {\r\n        var deltaX;\r\n        var needUpdate = false;\r\n        var nextCellWidth;\r\n        var resizingInfo = this._resizingInfo;\r\n        var columnsController = this._columnsController;\r\n        var visibleColumns = columnsController.getVisibleColumns();\r\n        var columnsSeparatorWidth = this._columnsSeparatorView.width();\r\n        var contentWidth = this._rowsView.contentWidth();\r\n        var isNextColumnMode = isNextColumnResizingMode(this);\r\n        var adaptColumnWidthByRatio = isNextColumnMode && this.option(\"adaptColumnWidthByRatio\") && !this.option(\"columnAutoWidth\");\r\n        var minWidth;\r\n        var nextColumn;\r\n        var cellWidth;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n\r\n        function isPercentWidth(width) {\r\n            return isString(width) && \"%\" === width.slice(-1)\r\n        }\r\n\r\n        function setColumnWidth(column, columnWidth, contentWidth, adaptColumnWidthByRatio) {\r\n            if (column) {\r\n                var oldColumnWidth = column.width;\r\n                if (oldColumnWidth) {\r\n                    adaptColumnWidthByRatio = isPercentWidth(oldColumnWidth)\r\n                }\r\n                if (adaptColumnWidthByRatio) {\r\n                    columnsController.columnOption(column.index, \"visibleWidth\", columnWidth);\r\n                    columnsController.columnOption(column.index, \"width\", (columnWidth / contentWidth * 100).toFixed(3) + \"%\")\r\n                } else {\r\n                    columnsController.columnOption(column.index, \"visibleWidth\", null);\r\n                    columnsController.columnOption(column.index, \"width\", columnWidth)\r\n                }\r\n            }\r\n        }\r\n        deltaX = posX - resizingInfo.startPosX;\r\n        if ((isNextColumnMode || isRtlParentStyle) && rtlEnabled) {\r\n            deltaX = -deltaX\r\n        }\r\n        cellWidth = resizingInfo.currentColumnWidth + deltaX;\r\n        var column = visibleColumns[resizingInfo.currentColumnIndex];\r\n        minWidth = column && column.minWidth || columnsSeparatorWidth;\r\n        needUpdate = cellWidth >= minWidth;\r\n        if (isNextColumnMode) {\r\n            nextCellWidth = resizingInfo.nextColumnWidth - deltaX;\r\n            nextColumn = visibleColumns[resizingInfo.nextColumnIndex];\r\n            minWidth = nextColumn && nextColumn.minWidth || columnsSeparatorWidth;\r\n            needUpdate = needUpdate && nextCellWidth >= minWidth\r\n        }\r\n        if (needUpdate) {\r\n            columnsController.beginUpdate();\r\n            cellWidth = Math.floor(cellWidth);\r\n            contentWidth = function(contentWidth, visibleColumns) {\r\n                var allColumnsHaveWidth = visibleColumns.every(column => column.width);\r\n                if (allColumnsHaveWidth) {\r\n                    var totalPercent = visibleColumns.reduce((sum, column) => {\r\n                        if (isPercentWidth(column.width)) {\r\n                            sum += parseFloat(column.width)\r\n                        }\r\n                        return sum\r\n                    }, 0);\r\n                    if (totalPercent > 100) {\r\n                        contentWidth = contentWidth / totalPercent * 100\r\n                    }\r\n                }\r\n                return contentWidth\r\n            }(contentWidth, visibleColumns);\r\n            setColumnWidth(column, cellWidth, contentWidth, adaptColumnWidthByRatio);\r\n            if (isNextColumnMode) {\r\n                nextCellWidth = Math.floor(nextCellWidth);\r\n                setColumnWidth(nextColumn, nextCellWidth, contentWidth, adaptColumnWidthByRatio)\r\n            } else {\r\n                var columnWidths = this._columnHeadersView.getColumnWidths();\r\n                columnWidths[resizingInfo.currentColumnIndex] = cellWidth;\r\n                var hasScroll = columnWidths.reduce((totalWidth, width) => totalWidth + width, 0) > this._rowsView.contentWidth();\r\n                if (!hasScroll) {\r\n                    var lastColumnIndex = gridCoreUtils.getLastResizableColumnIndex(visibleColumns);\r\n                    if (lastColumnIndex >= 0) {\r\n                        columnsController.columnOption(visibleColumns[lastColumnIndex].index, \"visibleWidth\", \"auto\")\r\n                    }\r\n                }\r\n                for (var i = 0; i < columnWidths.length; i++) {\r\n                    if (visibleColumns[i] && visibleColumns[i] !== column && void 0 === visibleColumns[i].width) {\r\n                        columnsController.columnOption(visibleColumns[i].index, \"width\", columnWidths[i])\r\n                    }\r\n                }\r\n            }\r\n            columnsController.endUpdate();\r\n            if (!isNextColumnMode) {\r\n                this.component.updateDimensions();\r\n                var scrollable = this.component.getScrollable();\r\n                if (scrollable && isRtlParentStyle) {\r\n                    var left = getWidth(scrollable.$content()) - getWidth(scrollable.container()) - this._scrollRight;\r\n                    scrollable.scrollTo({\r\n                        left: left\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        return needUpdate\r\n    },\r\n    _subscribeToCallback: function(callback, handler) {\r\n        callback.add(handler);\r\n        this._subscribesToCallbacks.push({\r\n            callback: callback,\r\n            handler: handler\r\n        })\r\n    },\r\n    _unsubscribeFromCallbacks: function() {\r\n        for (var i = 0; i < this._subscribesToCallbacks.length; i++) {\r\n            var subscribe = this._subscribesToCallbacks[i];\r\n            subscribe.callback.remove(subscribe.handler)\r\n        }\r\n        this._subscribesToCallbacks = []\r\n    },\r\n    _unsubscribes: function() {\r\n        this._unsubscribeFromEvents();\r\n        this._unsubscribeFromCallbacks()\r\n    },\r\n    _init: function() {\r\n        var that = this;\r\n        var generatePointsByColumnsHandler = function() {\r\n            if (!that._isResizing) {\r\n                that.pointsByColumns(null)\r\n            }\r\n        };\r\n        var generatePointsByColumnsScrollHandler = function(offset) {\r\n            if (that._scrollLeft !== offset.left) {\r\n                that._scrollLeft = offset.left;\r\n                that.pointsByColumns(null)\r\n            }\r\n        };\r\n        that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\r\n        that._columnHeadersView = that.getView(\"columnHeadersView\");\r\n        that._trackerView = that.getView(\"trackerView\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._tablePositionController = that.getController(\"tablePosition\");\r\n        that._$parentContainer = that.component.$element();\r\n        that._draggingHeaderView = that.component.getView(\"draggingHeaderView\");\r\n        that._subscribeToCallback(that._columnHeadersView.renderCompleted, generatePointsByColumnsHandler);\r\n        that._subscribeToCallback(that._columnHeadersView.resizeCompleted, generatePointsByColumnsHandler);\r\n        that._subscribeToCallback(that._columnsSeparatorView.renderCompleted, (function() {\r\n            that._unsubscribeFromEvents();\r\n            that._subscribeToEvents()\r\n        }));\r\n        that._subscribeToCallback(that._rowsView.renderCompleted, (function() {\r\n            that._rowsView.scrollChanged.remove(generatePointsByColumnsScrollHandler);\r\n            that._rowsView.scrollChanged.add(generatePointsByColumnsScrollHandler)\r\n        }));\r\n        var previousScrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\r\n        var previousTableHeight = 0;\r\n        that._subscribeToCallback(that.getController(\"tablePosition\").positionChanged, (function(e) {\r\n            if (that._isResizing && !that._rowsView.isResizing) {\r\n                var scrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\r\n                if (previousScrollbarVisibility !== scrollbarVisibility || previousTableHeight && previousTableHeight !== e.height) {\r\n                    previousScrollbarVisibility = scrollbarVisibility;\r\n                    previousTableHeight = e.height;\r\n                    that.component.updateDimensions()\r\n                } else {\r\n                    that._rowsView.updateFreeSpaceRowHeight()\r\n                }\r\n            }\r\n            previousTableHeight = e.height\r\n        }))\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            if (args.value) {\r\n                this._init();\r\n                this._subscribeToEvents()\r\n            } else {\r\n                this._unsubscribes()\r\n            }\r\n        }\r\n    },\r\n    isResizing: function() {\r\n        return this._isResizing\r\n    },\r\n    init: function() {\r\n        this._subscribesToCallbacks = [];\r\n        if (allowResizing(this)) {\r\n            this._init()\r\n        }\r\n    },\r\n    pointsByColumns: function(value) {\r\n        if (void 0 !== value) {\r\n            this._pointsByColumns = value\r\n        } else {\r\n            if (!this._pointsByColumns) {\r\n                this._generatePointsByColumns()\r\n            }\r\n            return this._pointsByColumns\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribes();\r\n        this.callBase()\r\n    }\r\n});\r\nvar TablePositionViewController = modules.ViewController.inherit({\r\n    update: function(top) {\r\n        var params = {};\r\n        var $element = this._columnHeadersView.element();\r\n        var offset = $element && $element.offset();\r\n        var offsetTop = offset && offset.top || 0;\r\n        var diffOffsetTop = isDefined(top) ? Math.abs(top - offsetTop) : 0;\r\n        var columnsHeadersHeight = this._columnHeadersView ? this._columnHeadersView.getHeight() : 0;\r\n        var scrollBarWidth = this._rowsView.getScrollbarWidth(true);\r\n        var rowsHeight = this._rowsView ? this._rowsView.height() - scrollBarWidth : 0;\r\n        var columnsResizerController = this.component.getController(\"columnsResizer\");\r\n        var draggingHeaderView = this.component.getView(\"draggingHeaderView\");\r\n        params.height = columnsHeadersHeight;\r\n        var isDraggingOrResizing = false !== columnsResizerController.isResizing() || draggingHeaderView.isDragging();\r\n        if (isDraggingOrResizing) {\r\n            params.height += rowsHeight - diffOffsetTop\r\n        }\r\n        if (null !== top && $element && $element.length) {\r\n            params.top = $element[0].offsetTop + diffOffsetTop\r\n        }\r\n        this.positionChanged.fire(params)\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that.callBase();\r\n        that._columnHeadersView = this.getView(\"columnHeadersView\");\r\n        that._rowsView = this.getView(\"rowsView\");\r\n        that._pagerView = this.getView(\"pagerView\");\r\n        that._rowsView.resizeCompleted.add((function() {\r\n            if (that.option(\"allowColumnResizing\")) {\r\n                var targetPoint = that.getController(\"columnsResizer\")._targetPoint;\r\n                that.update(targetPoint ? targetPoint.y : null)\r\n            }\r\n        }))\r\n    },\r\n    ctor: function(component) {\r\n        this.callBase(component);\r\n        this.positionChanged = Callbacks()\r\n    }\r\n});\r\nvar DraggingHeaderViewController = modules.ViewController.inherit({\r\n    _generatePointsByColumns: function(options) {\r\n        var that = this;\r\n        return gridCoreUtils.getPointsByColumns(options.columnElements, (function(point) {\r\n            return that._pointCreated(point, options.columns, options.targetDraggingPanel.getName(), options.sourceColumn)\r\n        }), options.isVerticalOrientation, options.startColumnIndex)\r\n    },\r\n    _pointCreated: function(point, columns, location, sourceColumn) {\r\n        var targetColumn = columns[point.columnIndex];\r\n        var prevColumn = columns[point.columnIndex - 1];\r\n        switch (location) {\r\n            case \"columnChooser\":\r\n                return true;\r\n            case \"headers\":\r\n                return sourceColumn && !sourceColumn.allowReordering || (!targetColumn || !targetColumn.allowReordering) && (!prevColumn || !prevColumn.allowReordering);\r\n            default:\r\n                return 0 === columns.length\r\n        }\r\n    },\r\n    _subscribeToEvents: function(draggingHeader, draggingPanels) {\r\n        var that = this;\r\n        each(draggingPanels, (function(_, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var columns;\r\n                var rowCount = draggingPanel.getRowCount ? draggingPanel.getRowCount() : 1;\r\n                var nameDraggingPanel = draggingPanel.getName();\r\n                var subscribeToEvents = function(index, columnElement) {\r\n                    if (!columnElement) {\r\n                        return\r\n                    }\r\n                    var $columnElement = $(columnElement);\r\n                    var column = columns[index];\r\n                    if (draggingPanel.allowDragging(column, nameDraggingPanel, draggingPanels)) {\r\n                        $columnElement.addClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventStart, MODULE_NAMESPACE), that.createAction((function(args) {\r\n                            var e = args.event;\r\n                            var eventData = getEventData(e);\r\n                            draggingHeader.dragHeader({\r\n                                deltaX: eventData.x - $(e.currentTarget).offset().left,\r\n                                deltaY: eventData.y - $(e.currentTarget).offset().top,\r\n                                sourceColumn: column,\r\n                                index: column.index,\r\n                                columnIndex: index,\r\n                                columnElement: $columnElement,\r\n                                sourceLocation: nameDraggingPanel,\r\n                                draggingPanels: draggingPanels,\r\n                                rowIndex: that._columnsController.getRowIndex(column.index, true)\r\n                            })\r\n                        })));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventMove, MODULE_NAMESPACE), {\r\n                            that: draggingHeader\r\n                        }, that.createAction(draggingHeader.moveHeader));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventEnd, MODULE_NAMESPACE), {\r\n                            that: draggingHeader\r\n                        }, that.createAction(draggingHeader.dropHeader))\r\n                    }\r\n                };\r\n                for (var i = 0; i < rowCount; i++) {\r\n                    var columnElements = draggingPanel.getColumnElements(i) || [];\r\n                    if (columnElements.length) {\r\n                        columns = draggingPanel.getColumns(i) || [];\r\n                        each(columnElements, subscribeToEvents)\r\n                    }\r\n                }\r\n            }\r\n        }))\r\n    },\r\n    _unsubscribeFromEvents: function(draggingHeader, draggingPanels) {\r\n        var that = this;\r\n        each(draggingPanels, (function(_, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var columnElements = draggingPanel.getColumnElements() || [];\r\n                each(columnElements, (function(index, columnElement) {\r\n                    var $columnElement = $(columnElement);\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventStart, MODULE_NAMESPACE));\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventMove, MODULE_NAMESPACE));\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventEnd, MODULE_NAMESPACE));\r\n                    $columnElement.removeClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS))\r\n                }))\r\n            }\r\n        }))\r\n    },\r\n    _getSeparator: function(targetLocation) {\r\n        return \"headers\" === targetLocation ? this._columnsSeparatorView : this._blockSeparatorView\r\n    },\r\n    hideSeparators: function(type) {\r\n        var blockSeparator = this._blockSeparatorView;\r\n        var columnsSeparator = this._columnsSeparatorView;\r\n        this._animationColumnIndex = null;\r\n        blockSeparator && blockSeparator.hide();\r\n        \"block\" !== type && columnsSeparator && columnsSeparator.hide()\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that.callBase();\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._columnHeadersView = that.getView(\"columnHeadersView\");\r\n        that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\r\n        that._draggingHeaderView = that.getView(\"draggingHeaderView\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._blockSeparatorView = that.getView(\"blockSeparatorView\");\r\n        that._headerPanelView = that.getView(\"headerPanel\");\r\n        that._columnChooserView = that.getView(\"columnChooserView\");\r\n        var subscribeToEvents = function() {\r\n            if (that._draggingHeaderView) {\r\n                var draggingPanels = [that._columnChooserView, that._columnHeadersView, that._headerPanelView];\r\n                that._unsubscribeFromEvents(that._draggingHeaderView, draggingPanels);\r\n                that._subscribeToEvents(that._draggingHeaderView, draggingPanels)\r\n            }\r\n        };\r\n        that._columnHeadersView.renderCompleted.add(subscribeToEvents);\r\n        that._headerPanelView && that._headerPanelView.renderCompleted.add(subscribeToEvents);\r\n        that._columnChooserView && that._columnChooserView.renderCompleted.add(subscribeToEvents)\r\n    },\r\n    allowDrop: function(parameters) {\r\n        return this._columnsController.allowMoveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation)\r\n    },\r\n    drag: function(parameters) {\r\n        var sourceIndex = parameters.sourceIndex;\r\n        var sourceLocation = parameters.sourceLocation;\r\n        var sourceColumnElement = parameters.sourceColumnElement;\r\n        var headersView = this._columnHeadersView;\r\n        var rowsView = this._rowsView;\r\n        if (sourceColumnElement) {\r\n            sourceColumnElement.css({\r\n                opacity: COLUMN_OPACITY\r\n            });\r\n            if (\"headers\" === sourceLocation) {\r\n                headersView && headersView.setRowsOpacity(sourceIndex, COLUMN_OPACITY);\r\n                rowsView && rowsView.setRowsOpacity(sourceIndex, COLUMN_OPACITY)\r\n            }\r\n        }\r\n    },\r\n    dock: function(parameters) {\r\n        var that = this;\r\n        var targetColumnIndex = isObject(parameters.targetColumnIndex) ? parameters.targetColumnIndex.columnIndex : parameters.targetColumnIndex;\r\n        var sourceLocation = parameters.sourceLocation;\r\n        var targetLocation = parameters.targetLocation;\r\n        var separator = that._getSeparator(targetLocation);\r\n        var hasTargetVisibleIndex = targetColumnIndex >= 0;\r\n        that._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).toggleClass(that.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS), \"headers\" !== sourceLocation && \"headers\" === targetLocation && !hasTargetVisibleIndex);\r\n        if (separator) {\r\n            if (that.allowDrop(parameters) && hasTargetVisibleIndex) {\r\n                if (\"group\" === targetLocation || \"columnChooser\" === targetLocation) {\r\n                    ! function() {\r\n                        if (that._animationColumnIndex !== targetColumnIndex) {\r\n                            that.hideSeparators();\r\n                            separator.element()[parameters.isLast ? \"insertAfter\" : \"insertBefore\"](parameters.targetColumnElement);\r\n                            that._animationColumnIndex = targetColumnIndex;\r\n                            separator.show(targetLocation)\r\n                        }\r\n                    }()\r\n                } else {\r\n                    that.hideSeparators(\"block\");\r\n                    that.getController(\"tablePosition\").update(parameters.posY);\r\n                    separator.moveByX(parameters.posX - separator.width());\r\n                    separator.show()\r\n                }\r\n            } else {\r\n                that.hideSeparators()\r\n            }\r\n        }\r\n    },\r\n    drop: function(parameters) {\r\n        var sourceColumnElement = parameters.sourceColumnElement;\r\n        if (sourceColumnElement) {\r\n            sourceColumnElement.css({\r\n                opacity: \"\"\r\n            });\r\n            this._columnHeadersView.setRowsOpacity(parameters.sourceIndex, \"\");\r\n            this._rowsView.setRowsOpacity(parameters.sourceIndex, \"\");\r\n            this._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).removeClass(this.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS))\r\n        }\r\n        if (this.allowDrop(parameters)) {\r\n            var separator = this._getSeparator(parameters.targetLocation);\r\n            if (separator) {\r\n                separator.hide()\r\n            }\r\n            this._columnsController.moveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        if (this._draggingHeaderView) {\r\n            this._unsubscribeFromEvents(this._draggingHeaderView, [this._columnChooserView, this._columnHeadersView, this._headerPanelView])\r\n        }\r\n    }\r\n});\r\nexport var columnsResizingReorderingModule = {\r\n    views: {\r\n        columnsSeparatorView: ColumnsSeparatorView,\r\n        blockSeparatorView: BlockSeparatorView,\r\n        draggingHeaderView: DraggingHeaderView,\r\n        trackerView: TrackerView\r\n    },\r\n    controllers: {\r\n        draggingHeader: DraggingHeaderViewController,\r\n        tablePosition: TablePositionViewController,\r\n        columnsResizer: ColumnsResizerViewController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _needUpdateRowHeight: function(itemCount) {\r\n                    var wordWrapEnabled = this.option(\"wordWrapEnabled\");\r\n                    var columnsResizerController = this.getController(\"columnsResizer\");\r\n                    var isResizing = columnsResizerController.isResizing();\r\n                    return this.callBase.apply(this, arguments) || itemCount > 0 && wordWrapEnabled && isResizing\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            editorFactory: {\r\n                renderFocusOverlay: function() {\r\n                    if (this.getController(\"columnsResizer\").isResizing()) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.columns_resizing_reordering.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnsResizingReorderingModule\r\n} from \"../grid_core/ui.grid_core.columns_resizing_reordering\";\r\nexport var DraggingHeaderView = columnsResizingReorderingModule.views.draggingHeaderView;\r\nexport var DraggingHeaderViewController = columnsResizingReorderingModule.controllers.draggingHeader;\r\nexport var ColumnsSeparatorView = columnsResizingReorderingModule.views.columnsSeparatorView;\r\nexport var TablePositionViewController = columnsResizingReorderingModule.controllers.tablePosition;\r\nexport var ColumnsResizerViewController = columnsResizingReorderingModule.controllers.columnsResizer;\r\nexport var TrackerView = columnsResizingReorderingModule.views.trackerView;\r\ngridCore.registerModule(\"columnsResizingReordering\", columnsResizingReorderingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.keyboard_navigation.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterHeight,\r\n    getHeight,\r\n    getWidth,\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport core from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    isDefined,\r\n    isEmptyObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    focused\r\n} from \"../widget/selectors\";\r\nimport {\r\n    addNamespace,\r\n    createEvent,\r\n    isCommandKeyPressed\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport * as accessibility from \"../shared/accessibility\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    keyboard\r\n} from \"../../events/short\";\r\nimport devices from \"../../core/devices\";\r\nvar ROWS_VIEW_CLASS = \"rowsview\";\r\nvar EDIT_FORM_CLASS = \"edit-form\";\r\nvar GROUP_FOOTER_CLASS = \"group-footer\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar EDIT_FORM_ITEM_CLASS = \"edit-form-item\";\r\nvar MASTER_DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar FREESPACE_ROW_CLASS = \"dx-freespace-row\";\r\nvar VIRTUAL_ROW_CLASS = \"dx-virtual-row\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar DROPDOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar COMMAND_EXPAND_CLASS = \"dx-command-expand\";\r\nvar COMMAND_SELECT_CLASS = \"dx-command-select\";\r\nvar COMMAND_EDIT_CLASS = \"dx-command-edit\";\r\nvar COMMAND_CELL_SELECTOR = \"[class^=dx-command]\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar DATEBOX_WIDGET_NAME = \"dxDateBox\";\r\nvar FOCUS_STATE_CLASS = \"dx-state-focused\";\r\nvar WIDGET_CLASS = \"dx-widget\";\r\nvar REVERT_BUTTON_CLASS = \"dx-revert-button\";\r\nvar FAST_EDITING_DELETE_KEY = \"delete\";\r\nvar INTERACTIVE_ELEMENTS_SELECTOR = \"input:not([type='hidden']), textarea, a, select, button, [tabindex], .dx-checkbox\";\r\nvar NON_FOCUSABLE_ELEMENTS_SELECTOR = \"\".concat(INTERACTIVE_ELEMENTS_SELECTOR, \", .dx-dropdowneditor-icon\");\r\nvar EDIT_MODE_ROW = \"row\";\r\nvar EDIT_MODE_FORM = \"form\";\r\nvar EDIT_MODE_BATCH = \"batch\";\r\nvar EDIT_MODE_CELL = \"cell\";\r\nvar FOCUS_TYPE_ROW = \"row\";\r\nvar FOCUS_TYPE_CELL = \"cell\";\r\nvar COLUMN_HEADERS_VIEW = \"columnHeadersView\";\r\n\r\nfunction isGroupRow($row) {\r\n    return $row && $row.hasClass(GROUP_ROW_CLASS)\r\n}\r\n\r\nfunction isDetailRow($row) {\r\n    return $row && $row.hasClass(MASTER_DETAIL_ROW_CLASS)\r\n}\r\n\r\nfunction isDataRow($row) {\r\n    return $row && !isGroupRow($row) && !isDetailRow($row)\r\n}\r\n\r\nfunction isNotFocusedRow($row) {\r\n    return !$row || $row.hasClass(FREESPACE_ROW_CLASS) || $row.hasClass(VIRTUAL_ROW_CLASS)\r\n}\r\n\r\nfunction isCellElement($element) {\r\n    return $element.length && \"TD\" === $element[0].tagName\r\n}\r\n\r\nfunction isEditorCell(that, $cell) {\r\n    return !that._isRowEditMode() && $cell && !$cell.hasClass(COMMAND_SELECT_CLASS) && $cell.hasClass(EDITOR_CELL_CLASS)\r\n}\r\n\r\nfunction isElementDefined($element) {\r\n    return isDefined($element) && $element.length > 0\r\n}\r\n\r\nfunction isMobile() {\r\n    return \"desktop\" !== devices.current().deviceType\r\n}\r\n\r\nfunction isCellInHeaderRow($cell) {\r\n    return !!$cell.parent(\".\".concat(HEADER_ROW_CLASS)).length\r\n}\r\n\r\nfunction isFixedColumnIndexOffsetRequired(that, column) {\r\n    var rtlEnabled = that.option(\"rtlEnabled\");\r\n    var result = false;\r\n    if (rtlEnabled) {\r\n        result = !(\"right\" === column.fixedPosition || isDefined(column.command) && !isDefined(column.fixedPosition))\r\n    } else {\r\n        result = !(!isDefined(column.fixedPosition) || \"left\" === column.fixedPosition)\r\n    }\r\n    return result\r\n}\r\n\r\nfunction shouldPreventScroll(that) {\r\n    var keyboardController = that.getController(\"keyboardNavigation\");\r\n    return keyboardController._isVirtualScrolling() ? that.option(\"focusedRowIndex\") === keyboardController.getRowIndex() : false\r\n}\r\nvar KeyboardNavigationController = core.ViewController.inherit({\r\n    init: function() {\r\n        this._dataController = this.getController(\"data\");\r\n        this._selectionController = this.getController(\"selection\");\r\n        this._editingController = this.getController(\"editing\");\r\n        this._headerPanel = this.getView(\"headerPanel\");\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._editorFactory = this.getController(\"editorFactory\");\r\n        if (this.isKeyboardEnabled()) {\r\n            accessibility.subscribeVisibilityChange();\r\n            this._updateFocusTimeout = null;\r\n            this._fastEditingStarted = false;\r\n            this._focusedCellPosition = {};\r\n            this._canceledCellPosition = null;\r\n            this._editorFactory.focused.add($element => {\r\n                this.setupFocusedView();\r\n                if (this._isNeedScroll) {\r\n                    if ($element.is(\":visible\") && this._focusedView && this._focusedView.getScrollable) {\r\n                        this._focusedView._scrollToElement($element);\r\n                        this._isNeedScroll = false\r\n                    }\r\n                }\r\n            });\r\n            this._initViewHandlers();\r\n            this._initDocumentHandlers();\r\n            this.createAction(\"onKeyDown\")\r\n        }\r\n    },\r\n    _initViewHandlers: function() {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var rowsViewFocusHandler = event => {\r\n            var $element = $(event.target);\r\n            var isRelatedTargetInRowsView = $(event.relatedTarget).closest(rowsView.element()).length;\r\n            var isCommandButton = $element.hasClass(\"dx-link\");\r\n            if (isCommandButton && !isRelatedTargetInRowsView && this._isEventInCurrentGrid(event)) {\r\n                var $focusedCell = this._getFocusedCell();\r\n                $focusedCell = !isElementDefined($focusedCell) ? rowsView.getCellElements(0).filter(\"[tabindex]\").eq(0) : $focusedCell;\r\n                if (!$element.closest($focusedCell).length) {\r\n                    event.preventDefault();\r\n                    eventsEngine.trigger($focusedCell, \"focus\")\r\n                }\r\n            }\r\n        };\r\n        rowsView.renderCompleted.add(e => {\r\n            var $rowsView = rowsView.element();\r\n            var isFullUpdate = !e || \"refresh\" === e.changeType;\r\n            var isFocusedViewCorrect = this._focusedView && this._focusedView.name === rowsView.name;\r\n            var needUpdateFocus = false;\r\n            var isAppend = e && (\"append\" === e.changeType || \"prepend\" === e.changeType);\r\n            var $focusedElement = $(\":focus\");\r\n            var isFocusedElementCorrect = !$focusedElement.length || $focusedElement.closest($rowsView).length;\r\n            eventsEngine.off($rowsView, \"focusin\", rowsViewFocusHandler);\r\n            eventsEngine.on($rowsView, \"focusin\", rowsViewFocusHandler);\r\n            this._initPointerEventHandler();\r\n            this._initKeyDownHandler();\r\n            this._setRowsViewAttributes();\r\n            if (isFocusedViewCorrect && isFocusedElementCorrect) {\r\n                needUpdateFocus = this._isNeedFocus ? !isAppend : this._isHiddenFocus && isFullUpdate;\r\n                needUpdateFocus && this._updateFocus(true)\r\n            }\r\n        })\r\n    },\r\n    _initDocumentHandlers: function() {\r\n        var document = domAdapter.getDocument();\r\n        this._documentClickHandler = this.createAction(e => {\r\n            var $target = $(e.event.target);\r\n            var isCurrentRowsViewClick = this._isEventInCurrentGrid(e.event) && $target.closest(\".\".concat(this.addWidgetPrefix(ROWS_VIEW_CLASS))).length;\r\n            var isEditorOverlay = $target.closest(\".\".concat(DROPDOWN_EDITOR_OVERLAY_CLASS)).length;\r\n            var columnsResizerController = this.getController(\"columnsResizer\");\r\n            var isColumnResizing = !!columnsResizerController && columnsResizerController.isResizing();\r\n            if (!isCurrentRowsViewClick && !isEditorOverlay && !isColumnResizing) {\r\n                var targetInsideFocusedView = this._focusedView ? $target.parents().filter(this._focusedView.element()).length > 0 : false;\r\n                !targetInsideFocusedView && this._resetFocusedCell(true);\r\n                this._resetFocusedView()\r\n            }\r\n        });\r\n        eventsEngine.on(document, addNamespace(pointerEvents.down, \"dxDataGridKeyboardNavigation\"), this._documentClickHandler)\r\n    },\r\n    _setRowsViewAttributes: function() {\r\n        var $rowsView = this._getRowsViewElement();\r\n        var isGridEmpty = !this._dataController.getVisibleRows().length;\r\n        if (isGridEmpty) {\r\n            this._applyTabIndexToElement($rowsView)\r\n        }\r\n    },\r\n    _initPointerEventHandler: function() {\r\n        var pointerEventName = !isMobile() ? pointerEvents.down : clickEventName;\r\n        var clickSelector = \".\".concat(ROW_CLASS, \" > td, .\").concat(ROW_CLASS);\r\n        var $rowsView = this._getRowsViewElement();\r\n        if (!isDefined(this._pointerEventAction)) {\r\n            this._pointerEventAction = this.createAction(this._pointerEventHandler)\r\n        }\r\n        eventsEngine.off($rowsView, addNamespace(pointerEventName, \"dxDataGridKeyboardNavigation\"), this._pointerEventAction);\r\n        eventsEngine.on($rowsView, addNamespace(pointerEventName, \"dxDataGridKeyboardNavigation\"), clickSelector, this._pointerEventAction)\r\n    },\r\n    _initKeyDownHandler: function() {\r\n        var $rowsView = this._getRowsViewElement();\r\n        keyboard.off(this._keyDownListener);\r\n        this._keyDownListener = keyboard.on($rowsView, null, e => this._keyDownHandler(e))\r\n    },\r\n    dispose: function() {\r\n        this.callBase();\r\n        this._resetFocusedView();\r\n        keyboard.off(this._keyDownListener);\r\n        eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.down, \"dxDataGridKeyboardNavigation\"), this._documentClickHandler);\r\n        clearTimeout(this._updateFocusTimeout);\r\n        accessibility.unsubscribeVisibilityChange()\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"keyboardNavigation\":\r\n            case \"useLegacyKeyboardNavigation\":\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    isRowFocusType: function() {\r\n        return this.focusType === FOCUS_TYPE_ROW\r\n    },\r\n    isCellFocusType: function() {\r\n        return this.focusType === FOCUS_TYPE_CELL\r\n    },\r\n    setRowFocusType: function() {\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            this.focusType = FOCUS_TYPE_ROW\r\n        }\r\n    },\r\n    setCellFocusType: function() {\r\n        this.focusType = FOCUS_TYPE_CELL\r\n    },\r\n    _keyDownHandler: function(e) {\r\n        var needStopPropagation = true;\r\n        var isHandled = this._processOnKeyDown(e);\r\n        var isEditing = this._editingController.isEditing();\r\n        var originalEvent = e.originalEvent;\r\n        if (originalEvent.isDefaultPrevented()) {\r\n            return\r\n        }\r\n        this._isNeedFocus = true;\r\n        this._isNeedScroll = true;\r\n        this._updateFocusedCellPositionByTarget(originalEvent.target);\r\n        if (!isHandled) {\r\n            switch (e.keyName) {\r\n                case \"leftArrow\":\r\n                case \"rightArrow\":\r\n                    this._leftRightKeysHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"upArrow\":\r\n                case \"downArrow\":\r\n                    if (e.ctrl) {\r\n                        accessibility.selectView(\"rowsView\", this, originalEvent)\r\n                    } else {\r\n                        this._upDownKeysHandler(e, isEditing)\r\n                    }\r\n                    isHandled = true;\r\n                    break;\r\n                case \"pageUp\":\r\n                case \"pageDown\":\r\n                    this._pageUpDownKeyHandler(e);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"space\":\r\n                    this._spaceKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"A\":\r\n                    if (isCommandKeyPressed(e.originalEvent)) {\r\n                        this._ctrlAKeyHandler(e, isEditing);\r\n                        isHandled = true\r\n                    } else {\r\n                        isHandled = this._beginFastEditing(e.originalEvent)\r\n                    }\r\n                    break;\r\n                case \"tab\":\r\n                    this._tabKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"enter\":\r\n                    this._enterKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"escape\":\r\n                    this._escapeKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"F\":\r\n                    if (isCommandKeyPressed(e.originalEvent)) {\r\n                        this._ctrlFKeyHandler(e);\r\n                        isHandled = true\r\n                    } else {\r\n                        isHandled = this._beginFastEditing(e.originalEvent)\r\n                    }\r\n                    break;\r\n                case \"F2\":\r\n                    this._f2KeyHandler();\r\n                    isHandled = true;\r\n                    break;\r\n                case \"del\":\r\n                case \"backspace\":\r\n                    if (this._isFastEditingAllowed() && !this._isFastEditingStarted()) {\r\n                        isHandled = this._beginFastEditing(originalEvent, true)\r\n                    }\r\n            }\r\n            if (!isHandled && !this._beginFastEditing(originalEvent)) {\r\n                this._isNeedFocus = false;\r\n                this._isNeedScroll = false;\r\n                needStopPropagation = false\r\n            }\r\n            if (needStopPropagation) {\r\n                originalEvent.stopPropagation()\r\n            }\r\n        }\r\n    },\r\n    _processOnKeyDown: function(eventArgs) {\r\n        var originalEvent = eventArgs.originalEvent;\r\n        var args = {\r\n            handled: false,\r\n            event: originalEvent\r\n        };\r\n        this.executeAction(\"onKeyDown\", args);\r\n        eventArgs.ctrl = originalEvent.ctrlKey;\r\n        eventArgs.alt = originalEvent.altKey;\r\n        eventArgs.shift = originalEvent.shiftKey;\r\n        return !!args.handled\r\n    },\r\n    _closeEditCell: function() {\r\n        setTimeout(() => {\r\n            this._editingController.closeEditCell()\r\n        })\r\n    },\r\n    _leftRightKeysHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $event = eventArgs.originalEvent;\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        var directionCode = this._getDirectionCodeByKey(eventArgs.keyName);\r\n        var isEditingNavigationMode = this._isFastEditingStarted();\r\n        var allowNavigate = (!isEditing || isEditingNavigationMode) && isDataRow($row);\r\n        if (allowNavigate) {\r\n            this.setCellFocusType();\r\n            isEditingNavigationMode && this._closeEditCell();\r\n            if (this._isVirtualColumnRender()) {\r\n                this._processVirtualHorizontalPosition(directionCode)\r\n            }\r\n            var $cell = this._getNextCell(directionCode);\r\n            if (isElementDefined($cell)) {\r\n                this._arrowKeysHandlerFocusCell($event, $cell, directionCode)\r\n            }\r\n            $event && $event.preventDefault()\r\n        }\r\n    },\r\n    _upDownKeysHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this._focusedCellPosition.rowIndex;\r\n        var visibleRowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(visibleRowIndex);\r\n        var $event = eventArgs.originalEvent;\r\n        var isUpArrow = \"upArrow\" === eventArgs.keyName;\r\n        var dataSource = this._dataController.dataSource();\r\n        var isEditingNavigationMode = this._isFastEditingStarted();\r\n        var allowNavigate = (!isEditing || isEditingNavigationMode) && $row && !isDetailRow($row);\r\n        if (allowNavigate) {\r\n            isEditingNavigationMode && this._closeEditCell();\r\n            if (!this._navigateNextCell($event, eventArgs.keyName)) {\r\n                if (this._isVirtualRowRender() && isUpArrow && dataSource && !dataSource.isLoading()) {\r\n                    var rowHeight = getOuterHeight($row);\r\n                    rowIndex = this._focusedCellPosition.rowIndex - 1;\r\n                    this._scrollBy(0, -rowHeight, rowIndex, $event)\r\n                }\r\n            }\r\n            $event && $event.preventDefault()\r\n        }\r\n    },\r\n    _pageUpDownKeyHandler: function(eventArgs) {\r\n        var pageIndex = this._dataController.pageIndex();\r\n        var pageCount = this._dataController.pageCount();\r\n        var pagingEnabled = this.option(\"paging.enabled\");\r\n        var isPageUp = \"pageUp\" === eventArgs.keyName;\r\n        var pageStep = isPageUp ? -1 : 1;\r\n        var scrollable = this.getView(\"rowsView\").getScrollable();\r\n        if (pagingEnabled && !this._isVirtualScrolling()) {\r\n            if ((isPageUp ? pageIndex > 0 : pageIndex < pageCount - 1) && !this._isVirtualScrolling()) {\r\n                this._dataController.pageIndex(pageIndex + pageStep);\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        } else if (scrollable && getHeight(scrollable.container()) < getHeight(scrollable.$content())) {\r\n            this._scrollBy(0, getHeight(scrollable.container()) * pageStep);\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _spaceKeyHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $target = $(eventArgs.originalEvent && eventArgs.originalEvent.target);\r\n        if (this.option(\"selection\") && \"none\" !== this.option(\"selection\").mode && !isEditing) {\r\n            var isFocusedRowElement = \"row\" === this._getElementType($target) && this.isRowFocusType() && isDataRow($target);\r\n            var isFocusedSelectionCell = $target.hasClass(COMMAND_SELECT_CLASS);\r\n            if (isFocusedSelectionCell && \"onClick\" === this.option(\"selection.showCheckBoxesMode\")) {\r\n                this._selectionController.startSelectionWithCheckboxes()\r\n            }\r\n            if (isFocusedRowElement || $target.parent().hasClass(DATA_ROW_CLASS) || $target.hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\r\n                this._selectionController.changeItemSelection(rowIndex, {\r\n                    shift: eventArgs.shift,\r\n                    control: eventArgs.ctrl\r\n                });\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        } else {\r\n            this._beginFastEditing(eventArgs.originalEvent)\r\n        }\r\n    },\r\n    _ctrlAKeyHandler: function(eventArgs, isEditing) {\r\n        if (!isEditing && !eventArgs.alt && \"multiple\" === this.option(\"selection.mode\") && this.option(\"selection.allowSelectAll\")) {\r\n            this._selectionController.selectAll();\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _tabKeyHandler: function(eventArgs, isEditing) {\r\n        var editingOptions = this.option(\"editing\");\r\n        var direction = eventArgs.shift ? \"previous\" : \"next\";\r\n        var isCellPositionDefined = isDefined(this._focusedCellPosition) && !isEmptyObject(this._focusedCellPosition);\r\n        var isOriginalHandlerRequired = !isCellPositionDefined || !eventArgs.shift && this._isLastValidCell(this._focusedCellPosition) || eventArgs.shift && this._isFirstValidCell(this._focusedCellPosition);\r\n        var eventTarget = eventArgs.originalEvent.target;\r\n        var focusedViewElement = this._focusedView && this._focusedView.element();\r\n        if (this._handleTabKeyOnMasterDetailCell(eventTarget, direction)) {\r\n            return\r\n        }\r\n        $(focusedViewElement).addClass(FOCUS_STATE_CLASS);\r\n        if (editingOptions && eventTarget && !isOriginalHandlerRequired) {\r\n            if ($(eventTarget).hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\r\n                this._resetFocusedCell()\r\n            }\r\n            if (this._isVirtualColumnRender()) {\r\n                this._processVirtualHorizontalPosition(direction)\r\n            }\r\n            if (isEditing) {\r\n                if (!this._editingCellTabHandler(eventArgs, direction)) {\r\n                    return\r\n                }\r\n            } else if (this._targetCellTabHandler(eventArgs, direction)) {\r\n                isOriginalHandlerRequired = true\r\n            }\r\n        }\r\n        if (isOriginalHandlerRequired) {\r\n            this._editorFactory.loseFocus();\r\n            if (this._editingController.isEditing() && !this._isRowEditMode()) {\r\n                this._resetFocusedCell(true);\r\n                this._resetFocusedView();\r\n                this._closeEditCell()\r\n            }\r\n        } else {\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _getMaxHorizontalOffset: function() {\r\n        var scrollable = this.component.getScrollable();\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var offset = scrollable ? scrollable.scrollWidth() - getWidth(rowsView.element()) : 0;\r\n        return offset\r\n    },\r\n    _isColumnRendered: function(columnIndex) {\r\n        var allVisibleColumns = this._columnsController.getVisibleColumns(null, true);\r\n        var renderedVisibleColumns = this._columnsController.getVisibleColumns();\r\n        var column = allVisibleColumns[columnIndex];\r\n        var result = false;\r\n        if (column) {\r\n            result = renderedVisibleColumns.indexOf(column) >= 0\r\n        }\r\n        return result\r\n    },\r\n    _isFixedColumn: function(columnIndex) {\r\n        var allVisibleColumns = this._columnsController.getVisibleColumns(null, true);\r\n        var column = allVisibleColumns[columnIndex];\r\n        return !!column && !!column.fixed\r\n    },\r\n    _isColumnVirtual: function(columnIndex) {\r\n        var localColumnIndex = columnIndex - this._columnsController.getColumnIndexOffset();\r\n        var visibleColumns = this._columnsController.getVisibleColumns();\r\n        var column = visibleColumns[localColumnIndex];\r\n        return !!column && \"virtual\" === column.command\r\n    },\r\n    _processVirtualHorizontalPosition: function(direction) {\r\n        var scrollable = this.component.getScrollable();\r\n        var columnIndex = this.getColumnIndex();\r\n        var nextColumnIndex;\r\n        var horizontalScrollPosition = 0;\r\n        var needToScroll = false;\r\n        switch (direction) {\r\n            case \"next\":\r\n            case \"nextInRow\":\r\n                var columnsCount = this._getVisibleColumnCount();\r\n                nextColumnIndex = columnIndex + 1;\r\n                horizontalScrollPosition = this.option(\"rtlEnabled\") ? this._getMaxHorizontalOffset() : 0;\r\n                if (\"next\" === direction) {\r\n                    needToScroll = columnsCount === nextColumnIndex || this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                } else {\r\n                    needToScroll = columnsCount > nextColumnIndex && this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                }\r\n                break;\r\n            case \"previous\":\r\n            case \"previousInRow\":\r\n                nextColumnIndex = columnIndex - 1;\r\n                horizontalScrollPosition = this.option(\"rtlEnabled\") ? 0 : this._getMaxHorizontalOffset();\r\n                if (\"previous\" === direction) {\r\n                    var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n                    var leftEdgePosition = nextColumnIndex < 0 && 0 === columnIndexOffset;\r\n                    needToScroll = leftEdgePosition || this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                } else {\r\n                    needToScroll = nextColumnIndex >= 0 && this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                }\r\n        }\r\n        if (needToScroll) {\r\n            scrollable.scrollTo({\r\n                left: horizontalScrollPosition\r\n            })\r\n        } else if (isDefined(nextColumnIndex) && isDefined(direction) && this._isColumnVirtual(nextColumnIndex)) {\r\n            horizontalScrollPosition = this._getHorizontalScrollPositionOffset(direction);\r\n            0 !== horizontalScrollPosition && scrollable.scrollBy({\r\n                left: horizontalScrollPosition,\r\n                top: 0\r\n            })\r\n        }\r\n    },\r\n    _getHorizontalScrollPositionOffset: function(direction) {\r\n        var positionOffset = 0;\r\n        var $currentCell = this._getCell(this._focusedCellPosition);\r\n        var currentCellWidth = $currentCell && getOuterWidth($currentCell);\r\n        if (currentCellWidth > 0) {\r\n            var rtlMultiplier = this.option(\"rtlEnabled\") ? -1 : 1;\r\n            positionOffset = \"nextInRow\" === direction || \"next\" === direction ? currentCellWidth * rtlMultiplier : currentCellWidth * rtlMultiplier * -1\r\n        }\r\n        return positionOffset\r\n    },\r\n    _editingCellTabHandler: function(eventArgs, direction) {\r\n        var eventTarget = eventArgs.originalEvent.target;\r\n        var $cell = this._getCellElementFromTarget(eventTarget);\r\n        var isEditingAllowed;\r\n        var $event = eventArgs.originalEvent;\r\n        var elementType = this._getElementType(eventTarget);\r\n        if ($cell.is(COMMAND_CELL_SELECTOR)) {\r\n            return !this._targetCellTabHandler(eventArgs, direction)\r\n        }\r\n        this._updateFocusedCellPosition($cell);\r\n        var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\r\n        $cell = nextCellInfo.$cell;\r\n        if (!$cell || this._handleTabKeyOnMasterDetailCell($cell, direction)) {\r\n            return false\r\n        }\r\n        var columnsController = this._columnsController;\r\n        var cellIndex = this.getView(\"rowsView\").getCellIndex($cell);\r\n        var columnIndex = cellIndex + columnsController.getColumnIndexOffset();\r\n        var column = columnsController.getVisibleColumns(null, true)[columnIndex];\r\n        var $row = $cell.parent();\r\n        var rowIndex = this._getRowIndex($row);\r\n        var row = this._dataController.items()[rowIndex];\r\n        var editingController = this._editingController;\r\n        if (column && column.allowEditing) {\r\n            var _isDataRow = !row || \"data\" === row.rowType;\r\n            isEditingAllowed = editingController.allowUpdating({\r\n                row: row\r\n            }) ? _isDataRow : row && row.isNewRow\r\n        }\r\n        if (!isEditingAllowed) {\r\n            this._closeEditCell()\r\n        }\r\n        if (this._focusCell($cell, !nextCellInfo.isHighlighted)) {\r\n            if (!this._isRowEditMode() && isEditingAllowed) {\r\n                this._editFocusedCell()\r\n            } else {\r\n                this._focusInteractiveElement($cell, eventArgs.shift)\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _targetCellTabHandler: function(eventArgs, direction) {\r\n        var $event = eventArgs.originalEvent;\r\n        var eventTarget = $event.target;\r\n        var $cell = this._getCellElementFromTarget(eventTarget);\r\n        var $lastInteractiveElement = this._getInteractiveElement($cell, !eventArgs.shift);\r\n        var isOriginalHandlerRequired = false;\r\n        var elementType;\r\n        if (!isEditorCell(this, $cell) && $lastInteractiveElement.length && eventTarget !== $lastInteractiveElement.get(0)) {\r\n            isOriginalHandlerRequired = true\r\n        } else {\r\n            if (void 0 === this._focusedCellPosition.rowIndex && $(eventTarget).hasClass(ROW_CLASS)) {\r\n                this._updateFocusedCellPosition($cell)\r\n            }\r\n            elementType = this._getElementType(eventTarget);\r\n            if (this.isRowFocusType()) {\r\n                this.setCellFocusType();\r\n                if (\"row\" === elementType && isDataRow($(eventTarget))) {\r\n                    eventTarget = this.getFirstValidCellInRow($(eventTarget));\r\n                    elementType = this._getElementType(eventTarget)\r\n                }\r\n            }\r\n            var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\r\n            $cell = nextCellInfo.$cell;\r\n            if (!$cell) {\r\n                return false\r\n            }\r\n            $cell = this._checkNewLineTransition($event, $cell);\r\n            if (!$cell) {\r\n                return false\r\n            }\r\n            this._focusCell($cell, !nextCellInfo.isHighlighted);\r\n            if (!isEditorCell(this, $cell)) {\r\n                this._focusInteractiveElement($cell, eventArgs.shift)\r\n            }\r\n        }\r\n        return isOriginalHandlerRequired\r\n    },\r\n    _getNextCellByTabKey: function($event, direction, elementType) {\r\n        var $cell = this._getNextCell(direction, elementType);\r\n        var args = $cell && this._fireFocusedCellChanging($event, $cell, true);\r\n        if (!args || args.cancel) {\r\n            return {}\r\n        }\r\n        if (args.$newCellElement) {\r\n            $cell = args.$newCellElement\r\n        }\r\n        return {\r\n            $cell: $cell,\r\n            isHighlighted: args.isHighlighted\r\n        }\r\n    },\r\n    _checkNewLineTransition: function($event, $cell) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = $cell.parent();\r\n        if (rowIndex !== this._getRowIndex($row)) {\r\n            var cellPosition = this._getCellPosition($cell);\r\n            var args = this._fireFocusedRowChanging($event, $row);\r\n            if (args.cancel) {\r\n                return\r\n            }\r\n            if (args.rowIndexChanged) {\r\n                this.setFocusedColumnIndex(cellPosition.columnIndex);\r\n                $cell = this._getFocusedCell()\r\n            }\r\n        }\r\n        return $cell\r\n    },\r\n    _enterKeyHandler: function(eventArgs, isEditing) {\r\n        var $cell = this._getFocusedCell();\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        if (this.option(\"grouping.allowCollapsing\") && isGroupRow($row) || this.option(\"masterDetail.enabled\") && $cell && $cell.hasClass(COMMAND_EXPAND_CLASS)) {\r\n            var key = this._dataController.getKeyByRowIndex(rowIndex);\r\n            var item = this._dataController.items()[rowIndex];\r\n            if (void 0 !== key && item && item.data && !item.data.isContinuation) {\r\n                this._dataController.changeRowExpand(key)\r\n            }\r\n        } else {\r\n            this._processEnterKeyForDataCell(eventArgs, isEditing)\r\n        }\r\n    },\r\n    _processEnterKeyForDataCell: function(eventArgs, isEditing) {\r\n        var direction = this._getEnterKeyDirection(eventArgs);\r\n        var allowEditingOnEnterKey = this._allowEditingOnEnterKey();\r\n        if (isEditing || !allowEditingOnEnterKey && direction) {\r\n            this._handleEnterKeyEditingCell(eventArgs.originalEvent);\r\n            if (\"next\" === direction || \"previous\" === direction) {\r\n                this._targetCellTabHandler(eventArgs, direction)\r\n            } else if (\"upArrow\" === direction || \"downArrow\" === direction) {\r\n                this._navigateNextCell(eventArgs.originalEvent, direction)\r\n            }\r\n        } else if (allowEditingOnEnterKey) {\r\n            this._startEditing(eventArgs)\r\n        }\r\n    },\r\n    _getEnterKeyDirection: function(eventArgs) {\r\n        var enterKeyDirection = this.option(\"keyboardNavigation.enterKeyDirection\");\r\n        var isShift = eventArgs.shift;\r\n        if (\"column\" === enterKeyDirection) {\r\n            return isShift ? \"upArrow\" : \"downArrow\"\r\n        }\r\n        if (\"row\" === enterKeyDirection) {\r\n            return isShift ? \"previous\" : \"next\"\r\n        }\r\n    },\r\n    _handleEnterKeyEditingCell: function(event) {\r\n        var target = event.target;\r\n        var $cell = this._getCellElementFromTarget(target);\r\n        var isRowEditMode = this._isRowEditMode();\r\n        this._updateFocusedCellPosition($cell);\r\n        if (isRowEditMode) {\r\n            this._focusEditFormCell($cell);\r\n            setTimeout(this._editingController.saveEditData.bind(this._editingController))\r\n        } else {\r\n            eventsEngine.trigger($(target), \"change\");\r\n            this._closeEditCell();\r\n            event.preventDefault()\r\n        }\r\n    },\r\n    _escapeKeyHandler: function(eventArgs, isEditing) {\r\n        var $cell = this._getCellElementFromTarget(eventArgs.originalEvent.target);\r\n        if (isEditing) {\r\n            this._updateFocusedCellPosition($cell);\r\n            if (!this._isRowEditMode()) {\r\n                if (\"cell\" === this._editingController.getEditMode()) {\r\n                    this._editingController.cancelEditData()\r\n                } else {\r\n                    this._closeEditCell()\r\n                }\r\n            } else {\r\n                this._focusEditFormCell($cell);\r\n                this._editingController.cancelEditData();\r\n                if (0 === this._dataController.items().length) {\r\n                    this._resetFocusedCell();\r\n                    this._editorFactory.loseFocus()\r\n                }\r\n            }\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _ctrlFKeyHandler: function(eventArgs) {\r\n        if (this.option(\"searchPanel.visible\")) {\r\n            var searchTextEditor = this._headerPanel.getSearchTextEditor();\r\n            if (searchTextEditor) {\r\n                searchTextEditor.focus();\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        }\r\n    },\r\n    _f2KeyHandler: function() {\r\n        var isEditing = this._editingController.isEditing();\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        if (!isEditing && isDataRow($row)) {\r\n            this._startEditing()\r\n        }\r\n    },\r\n    _navigateNextCell: function($event, keyCode) {\r\n        var $cell = this._getNextCell(keyCode);\r\n        var directionCode = this._getDirectionCodeByKey(keyCode);\r\n        var isCellValid = $cell && this._isCellValid($cell);\r\n        var result = isCellValid ? this._arrowKeysHandlerFocusCell($event, $cell, directionCode) : false;\r\n        return result\r\n    },\r\n    _arrowKeysHandlerFocusCell: function($event, $nextCell, direction) {\r\n        var isVerticalDirection = \"prevRow\" === direction || \"nextRow\" === direction;\r\n        var args = this._fireFocusChangingEvents($event, $nextCell, isVerticalDirection, true);\r\n        $nextCell = args.$newCellElement;\r\n        if (!args.cancel && this._isCellValid($nextCell)) {\r\n            this._focus($nextCell, !args.isHighlighted);\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    _beginFastEditing: function(originalEvent, isDeleting) {\r\n        if (!this._isFastEditingAllowed() || originalEvent.altKey || originalEvent.ctrlKey || this._editingController.isEditing()) {\r\n            return false\r\n        }\r\n        if (isDeleting) {\r\n            this._startEditing(originalEvent, FAST_EDITING_DELETE_KEY)\r\n        } else {\r\n            var key = originalEvent.key;\r\n            var keyCode = originalEvent.keyCode || originalEvent.which;\r\n            var fastEditingKey = key || keyCode && String.fromCharCode(keyCode);\r\n            if (fastEditingKey && (1 === fastEditingKey.length || fastEditingKey === FAST_EDITING_DELETE_KEY)) {\r\n                this._startEditing(originalEvent, fastEditingKey)\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _pointerEventHandler: function(e) {\r\n        var event = e.event || e;\r\n        var $target = $(event.currentTarget);\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var focusedViewElement = rowsView && rowsView.element();\r\n        var $parent = $target.parent();\r\n        var isInteractiveElement = $(event.target).is(INTERACTIVE_ELEMENTS_SELECTOR);\r\n        var isRevertButton = !!$(event.target).closest(\".\".concat(REVERT_BUTTON_CLASS)).length;\r\n        var isExpandCommandCell = $target.hasClass(COMMAND_EXPAND_CLASS);\r\n        if (!this._isEventInCurrentGrid(event)) {\r\n            return\r\n        }\r\n        if (!isRevertButton && (this._isCellValid($target, !isInteractiveElement) || isExpandCommandCell)) {\r\n            $target = this._isInsideEditForm($target) ? $(event.target) : $target;\r\n            this._focusView();\r\n            $(focusedViewElement).removeClass(FOCUS_STATE_CLASS);\r\n            if ($parent.hasClass(FREESPACE_ROW_CLASS)) {\r\n                this._updateFocusedCellPosition($target);\r\n                this._applyTabIndexToElement(this._focusedView.element());\r\n                this._focusedView.focus()\r\n            } else if (!this._isMasterDetailCell($target)) {\r\n                this._clickTargetCellHandler(event, $target)\r\n            } else {\r\n                this._updateFocusedCellPosition($target)\r\n            }\r\n        } else if ($target.is(\"td\")) {\r\n            this._resetFocusedCell()\r\n        }\r\n    },\r\n    _clickTargetCellHandler: function(event, $cell) {\r\n        var columnIndex = this.getView(\"rowsView\").getCellIndex($cell);\r\n        var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n        var isCellEditMode = this._isCellEditMode();\r\n        this.setCellFocusType();\r\n        var args = this._fireFocusChangingEvents(event, $cell, true);\r\n        $cell = args.$newCellElement;\r\n        if (!args.cancel) {\r\n            if (args.resetFocusedRow) {\r\n                this.getController(\"focus\")._resetFocusedRow();\r\n                return\r\n            }\r\n            if (args.rowIndexChanged) {\r\n                $cell = this._getFocusedCell()\r\n            }\r\n            if (!args.isHighlighted && !isCellEditMode) {\r\n                this.setRowFocusType()\r\n            }\r\n            this._updateFocusedCellPosition($cell);\r\n            if (this._allowRowUpdating() && isCellEditMode && column && column.allowEditing) {\r\n                this._isNeedFocus = false;\r\n                this._isHiddenFocus = false\r\n            } else {\r\n                var $target = event && $(event.target).closest(NON_FOCUSABLE_ELEMENTS_SELECTOR + \", td\");\r\n                var skipFocusEvent = $target && $target.not($cell).is(NON_FOCUSABLE_ELEMENTS_SELECTOR);\r\n                var isEditor = !!column && !column.command && $cell.hasClass(EDITOR_CELL_CLASS);\r\n                var isDisabled = !isEditor && (!args.isHighlighted || skipFocusEvent);\r\n                this._focus($cell, isDisabled, skipFocusEvent)\r\n            }\r\n        } else {\r\n            this.setRowFocusType();\r\n            this.setFocusedRowIndex(args.prevRowIndex);\r\n            $cell = this._getFocusedCell();\r\n            if (this._editingController.isEditing() && isCellEditMode) {\r\n                this._closeEditCell()\r\n            }\r\n        }\r\n    },\r\n    _allowRowUpdating: function() {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var row = this._dataController.items()[rowIndex];\r\n        return this._editingController.allowUpdating({\r\n            row: row\r\n        }, \"click\")\r\n    },\r\n    focus: function(element) {\r\n        var activeElementSelector;\r\n        var focusedRowEnabled = this.option(\"focusedRowEnabled\");\r\n        var isHighlighted = isCellElement($(element));\r\n        if (!element) {\r\n            activeElementSelector = \".dx-datagrid-rowsview .dx-row[tabindex]\";\r\n            if (!focusedRowEnabled) {\r\n                activeElementSelector += \", .dx-datagrid-rowsview .dx-row > td[tabindex]\"\r\n            }\r\n            element = this.component.$element().find(activeElementSelector).first()\r\n        }\r\n        element && this._focusElement($(element), isHighlighted)\r\n    },\r\n    getFocusedView: function() {\r\n        return this._focusedView\r\n    },\r\n    setupFocusedView: function() {\r\n        if (this.isKeyboardEnabled() && !isDefined(this._focusedView)) {\r\n            this._focusView()\r\n        }\r\n    },\r\n    _focusElement: function($element, isHighlighted) {\r\n        var rowsViewElement = $(this._getRowsViewElement());\r\n        var $focusedView = $element.closest(rowsViewElement);\r\n        var isRowFocusType = this.isRowFocusType();\r\n        var args = {};\r\n        if (!$focusedView.length || isCellElement($element) && !this._isCellValid($element)) {\r\n            return\r\n        }\r\n        this._focusView();\r\n        this._isNeedFocus = true;\r\n        this._isNeedScroll = true;\r\n        if (isCellElement($element) || isGroupRow($element)) {\r\n            this.setCellFocusType();\r\n            args = this._fireFocusChangingEvents(null, $element, false, isHighlighted);\r\n            $element = args.$newCellElement;\r\n            if (isRowFocusType && !args.isHighlighted) {\r\n                this.setRowFocusType()\r\n            }\r\n        }\r\n        if (!args.cancel) {\r\n            this._focus($element, !args.isHighlighted);\r\n            this._focusInteractiveElement($element)\r\n        }\r\n    },\r\n    _getFocusedViewByElement: function($element) {\r\n        var view = this.getFocusedView();\r\n        var $view = view && $(view.element());\r\n        return $element && 0 !== $element.closest($view).length\r\n    },\r\n    _focusView: function() {\r\n        this._focusedView = this.getView(\"rowsView\")\r\n    },\r\n    _resetFocusedView: function() {\r\n        this.setRowFocusType();\r\n        this._focusedView = null\r\n    },\r\n    _focusInteractiveElement: function($cell, isLast) {\r\n        if (!$cell) {\r\n            return\r\n        }\r\n        var $focusedElement = this._getInteractiveElement($cell, isLast);\r\n        gridCoreUtils.focusAndSelectElement(this, $focusedElement)\r\n    },\r\n    _focus: function($cell, disableFocus, skipFocusEvent) {\r\n        var $row = $cell && !$cell.hasClass(ROW_CLASS) ? $cell.closest(\".\".concat(ROW_CLASS)) : $cell;\r\n        if ($row && isNotFocusedRow($row)) {\r\n            return\r\n        }\r\n        var focusedView = this._focusedView;\r\n        var $focusViewElement = focusedView && focusedView.element();\r\n        var $focusElement;\r\n        this._isHiddenFocus = disableFocus;\r\n        var isRowFocus = isGroupRow($row) || this.isRowFocusType();\r\n        if (isRowFocus) {\r\n            $focusElement = $row;\r\n            if (focusedView) {\r\n                this.setFocusedRowIndex(this._getRowIndex($row))\r\n            }\r\n        } else if (isCellElement($cell)) {\r\n            $focusElement = $cell;\r\n            this._updateFocusedCellPosition($cell)\r\n        }\r\n        if ($focusElement) {\r\n            if ($focusViewElement) {\r\n                $focusViewElement.find(\".dx-row[tabindex], .dx-row > td[tabindex]\").not($focusElement).removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabindex\")\r\n            }\r\n            eventsEngine.one($focusElement, \"blur\", e => {\r\n                if (e.relatedTarget) {\r\n                    $focusElement.removeClass(CELL_FOCUS_DISABLED_CLASS)\r\n                }\r\n            });\r\n            if (!skipFocusEvent) {\r\n                this._applyTabIndexToElement($focusElement);\r\n                eventsEngine.trigger($focusElement, \"focus\")\r\n            }\r\n            if (disableFocus) {\r\n                $focusElement.addClass(CELL_FOCUS_DISABLED_CLASS);\r\n                if (isRowFocus) {\r\n                    $cell.addClass(CELL_FOCUS_DISABLED_CLASS)\r\n                }\r\n            } else {\r\n                this._editorFactory.focus($focusElement)\r\n            }\r\n        }\r\n    },\r\n    _updateFocus: function(isRenderView) {\r\n        this._updateFocusTimeout = setTimeout(() => {\r\n            var editingController = this._editingController;\r\n            var isCellEditMode = editingController.getEditMode() === EDIT_MODE_CELL;\r\n            var isBatchEditMode = editingController.getEditMode() === EDIT_MODE_BATCH;\r\n            if (isCellEditMode && editingController.hasChanges() || isBatchEditMode && editingController.isNewRowInEditMode()) {\r\n                editingController._focusEditingCell();\r\n                return\r\n            }\r\n            var $cell = this._getFocusedCell();\r\n            var isEditing = editingController.isEditing();\r\n            if ($cell && !(this._isMasterDetailCell($cell) && !this._isRowEditMode())) {\r\n                if (this._hasSkipRow($cell.parent())) {\r\n                    var direction = this._focusedCellPosition && this._focusedCellPosition.rowIndex > 0 ? \"upArrow\" : \"downArrow\";\r\n                    $cell = this._getNextCell(direction)\r\n                }\r\n                if (isElementDefined($cell)) {\r\n                    if (isRenderView && !isEditing && this._checkCellOverlapped($cell)) {\r\n                        return\r\n                    }\r\n                    if ($cell.is(\"td\") || $cell.hasClass(this.addWidgetPrefix(EDIT_FORM_ITEM_CLASS))) {\r\n                        var isCommandCell = $cell.is(COMMAND_CELL_SELECTOR);\r\n                        var $focusedElementInsideCell = $cell.find(\":focus\");\r\n                        var isFocusedElementDefined = isElementDefined($focusedElementInsideCell);\r\n                        if ((isRenderView || !isCommandCell) && this._editorFactory.focus()) {\r\n                            if (isCommandCell && isFocusedElementDefined) {\r\n                                gridCoreUtils.focusAndSelectElement(this, $focusedElementInsideCell);\r\n                                return\r\n                            }!isFocusedElementDefined && this._focus($cell)\r\n                        } else if (!isFocusedElementDefined && (this._isNeedFocus || this._isHiddenFocus)) {\r\n                            this._focus($cell, this._isHiddenFocus)\r\n                        }\r\n                        if (isEditing) {\r\n                            this._focusInteractiveElement.bind(this)($cell)\r\n                        }\r\n                    } else {\r\n                        eventsEngine.trigger($cell, \"focus\")\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _checkCellOverlapped: function($cell) {\r\n        var cellOffset = $cell.offset();\r\n        var hasScrollable = this.component.getScrollable && this.component.getScrollable();\r\n        var isOverlapped = false;\r\n        if (hasScrollable) {\r\n            if (cellOffset.left < 0) {\r\n                isOverlapped = getWidth($cell) + cellOffset.left <= 0\r\n            } else if (cellOffset.top < 0) {\r\n                isOverlapped = getHeight($cell) + cellOffset.top <= 0\r\n            }\r\n        }\r\n        return isOverlapped\r\n    },\r\n    _getFocusedCell: function() {\r\n        return $(this._getCell(this._focusedCellPosition))\r\n    },\r\n    _updateFocusedCellPositionByTarget: function(target) {\r\n        var _this$_focusedCellPos;\r\n        var elementType = this._getElementType(target);\r\n        if (\"row\" === elementType && isDefined(null === (_this$_focusedCellPos = this._focusedCellPosition) || void 0 === _this$_focusedCellPos ? void 0 : _this$_focusedCellPos.columnIndex)) {\r\n            var $row = $(target);\r\n            this._focusedView && isGroupRow($row) && this.setFocusedRowIndex(this._getRowIndex($row))\r\n        } else {\r\n            this._updateFocusedCellPosition(this._getCellElementFromTarget(target))\r\n        }\r\n    },\r\n    _updateFocusedCellPosition: function($cell, direction) {\r\n        var position = this._getCellPosition($cell, direction);\r\n        if (position) {\r\n            if (!$cell.length || position.rowIndex >= 0 && position.columnIndex >= 0) {\r\n                this.setFocusedCellPosition(position.rowIndex, position.columnIndex)\r\n            }\r\n        }\r\n        return position\r\n    },\r\n    _getFocusedColumnIndexOffset: function(columnIndex) {\r\n        var offset = 0;\r\n        var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n        if (column && column.fixed) {\r\n            offset = this._getFixedColumnIndexOffset(column)\r\n        } else if (columnIndex >= 0) {\r\n            offset = this._columnsController.getColumnIndexOffset()\r\n        }\r\n        return offset\r\n    },\r\n    _getFixedColumnIndexOffset: function(column) {\r\n        var offset = isFixedColumnIndexOffsetRequired(this, column) ? this._getVisibleColumnCount() - this._columnsController.getVisibleColumns().length : 0;\r\n        return offset\r\n    },\r\n    _getCellPosition: function($cell, direction) {\r\n        var columnIndex;\r\n        var $row = isElementDefined($cell) && $cell.closest(\"tr\");\r\n        var rowsView = this.getView(\"rowsView\");\r\n        if (isElementDefined($row)) {\r\n            var rowIndex = this._getRowIndex($row);\r\n            columnIndex = rowsView.getCellIndex($cell, rowIndex);\r\n            columnIndex += this._getFocusedColumnIndexOffset(columnIndex);\r\n            if (direction) {\r\n                columnIndex = \"previous\" === direction ? columnIndex - 1 : columnIndex + 1;\r\n                columnIndex = this._applyColumnIndexBoundaries(columnIndex)\r\n            }\r\n            return {\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            }\r\n        }\r\n    },\r\n    _focusCell: function($cell, isDisabled) {\r\n        if (this._isCellValid($cell)) {\r\n            this._focus($cell, isDisabled);\r\n            return true\r\n        }\r\n    },\r\n    _focusEditFormCell: function($cell) {\r\n        if ($cell.hasClass(MASTER_DETAIL_CELL_CLASS)) {\r\n            this._editorFactory.focus($cell, true)\r\n        }\r\n    },\r\n    _resetFocusedCell: function(preventScroll) {\r\n        var _this$_focusedView;\r\n        var $cell = this._getFocusedCell();\r\n        isElementDefined($cell) && $cell.removeAttr(\"tabindex\");\r\n        this._isNeedFocus = false;\r\n        this._isNeedScroll = false;\r\n        this._focusedCellPosition = {};\r\n        clearTimeout(this._updateFocusTimeout);\r\n        null === (_this$_focusedView = this._focusedView) || void 0 === _this$_focusedView ? void 0 : _this$_focusedView.renderFocusState({\r\n            preventScroll: preventScroll\r\n        })\r\n    },\r\n    restoreFocusableElement: function(rowIndex, $event) {\r\n        var args;\r\n        var $rowElement;\r\n        var isUpArrow = isDefined(rowIndex);\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var $rowsViewElement = rowsView.element();\r\n        var columnIndex = this._focusedCellPosition.columnIndex;\r\n        var rowIndexOffset = this._dataController.getRowIndexOffset();\r\n        rowIndex = isUpArrow ? rowIndex : rowsView.getTopVisibleItemIndex() + rowIndexOffset;\r\n        if (!isUpArrow) {\r\n            this._editorFactory.loseFocus();\r\n            this._applyTabIndexToElement($rowsViewElement);\r\n            eventsEngine.trigger($rowsViewElement, \"focus\")\r\n        } else {\r\n            $rowElement = rowsView.getRow(rowIndex - rowIndexOffset);\r\n            args = this._fireFocusedRowChanging($event, $rowElement);\r\n            if (!args.cancel && args.rowIndexChanged) {\r\n                rowIndex = args.newRowIndex\r\n            }\r\n        }\r\n        if (!isUpArrow || !args.cancel) {\r\n            this.setFocusedCellPosition(rowIndex, columnIndex)\r\n        }\r\n        isUpArrow && this._updateFocus()\r\n    },\r\n    _getNewPositionByCode: function(cellPosition, elementType, code) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var rowIndex = cellPosition.rowIndex;\r\n        var visibleColumnsCount;\r\n        if (void 0 === cellPosition.rowIndex && \"next\" === code) {\r\n            return {\r\n                columnIndex: 0,\r\n                rowIndex: 0\r\n            }\r\n        }\r\n        switch (code) {\r\n            case \"nextInRow\":\r\n            case \"next\":\r\n                visibleColumnsCount = this._getVisibleColumnCount();\r\n                if (columnIndex < visibleColumnsCount - 1 && \"row\" !== elementType && this._hasValidCellAfterPosition({\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })) {\r\n                    columnIndex++\r\n                } else if (!this._isLastRow(rowIndex) && \"next\" === code) {\r\n                    columnIndex = 0;\r\n                    rowIndex++\r\n                }\r\n                break;\r\n            case \"previousInRow\":\r\n            case \"previous\":\r\n                if (columnIndex > 0 && \"row\" !== elementType && this._hasValidCellBeforePosition({\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })) {\r\n                    columnIndex--\r\n                } else if (rowIndex > 0 && \"previous\" === code) {\r\n                    rowIndex--;\r\n                    visibleColumnsCount = this._getVisibleColumnCount();\r\n                    columnIndex = visibleColumnsCount - 1\r\n                }\r\n                break;\r\n            case \"upArrow\":\r\n                rowIndex = rowIndex > 0 ? rowIndex - 1 : rowIndex;\r\n                break;\r\n            case \"downArrow\":\r\n                rowIndex = !this._isLastRow(rowIndex) ? rowIndex + 1 : rowIndex\r\n        }\r\n        return {\r\n            columnIndex: columnIndex,\r\n            rowIndex: rowIndex\r\n        }\r\n    },\r\n    setFocusedCellPosition: function(rowIndex, columnIndex) {\r\n        this.setFocusedRowIndex(rowIndex);\r\n        this.setFocusedColumnIndex(columnIndex)\r\n    },\r\n    setFocusedRowIndex: function(rowIndex) {\r\n        if (!this._focusedCellPosition) {\r\n            this._focusedCellPosition = {}\r\n        }\r\n        this._focusedCellPosition.rowIndex = rowIndex\r\n    },\r\n    setFocusedColumnIndex: function(columnIndex) {\r\n        if (!this._focusedCellPosition) {\r\n            this._focusedCellPosition = {}\r\n        }\r\n        this._focusedCellPosition.columnIndex = columnIndex\r\n    },\r\n    getRowIndex: function() {\r\n        return this._focusedCellPosition ? this._focusedCellPosition.rowIndex : -1\r\n    },\r\n    getColumnIndex: function() {\r\n        return this._focusedCellPosition ? this._focusedCellPosition.columnIndex : -1\r\n    },\r\n    getVisibleRowIndex: function() {\r\n        var rowIndex = this._focusedCellPosition && this._focusedCellPosition.rowIndex;\r\n        if (!isDefined(rowIndex) || rowIndex < 0) {\r\n            return -1\r\n        }\r\n        return rowIndex - this._dataController.getRowIndexOffset()\r\n    },\r\n    getVisibleColumnIndex: function() {\r\n        var columnIndex = this._focusedCellPosition && this._focusedCellPosition.columnIndex;\r\n        if (!isDefined(columnIndex)) {\r\n            return -1\r\n        }\r\n        return columnIndex - this._columnsController.getColumnIndexOffset()\r\n    },\r\n    _applyColumnIndexBoundaries: function(columnIndex) {\r\n        var visibleColumnsCount = this._getVisibleColumnCount();\r\n        if (columnIndex < 0) {\r\n            columnIndex = 0\r\n        } else if (columnIndex >= visibleColumnsCount) {\r\n            columnIndex = visibleColumnsCount - 1\r\n        }\r\n        return columnIndex\r\n    },\r\n    _isCellByPositionValid: function(cellPosition) {\r\n        var $cell = $(this._getCell(cellPosition));\r\n        return this._isCellValid($cell)\r\n    },\r\n    _isLastRow: function(rowIndex) {\r\n        var dataController = this._dataController;\r\n        if (this._isVirtualRowRender()) {\r\n            return rowIndex >= dataController.getMaxRowIndex()\r\n        }\r\n        return rowIndex === dataController.items().length - 1\r\n    },\r\n    _isFirstValidCell: function(cellPosition) {\r\n        var isFirstValidCell = false;\r\n        if (0 === cellPosition.rowIndex && cellPosition.columnIndex >= 0) {\r\n            isFirstValidCell = isFirstValidCell || !this._hasValidCellBeforePosition(cellPosition)\r\n        }\r\n        return isFirstValidCell\r\n    },\r\n    _hasValidCellBeforePosition: function(cellPosition) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var hasValidCells = false;\r\n        while (columnIndex > 0 && !hasValidCells) {\r\n            var checkingPosition = {\r\n                columnIndex: --columnIndex,\r\n                rowIndex: cellPosition.rowIndex\r\n            };\r\n            hasValidCells = this._isCellByPositionValid(checkingPosition)\r\n        }\r\n        return hasValidCells\r\n    },\r\n    _hasValidCellAfterPosition: function(cellPosition) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var hasValidCells = false;\r\n        var visibleColumnCount = this._getVisibleColumnCount();\r\n        while (columnIndex < visibleColumnCount - 1 && !hasValidCells) {\r\n            var checkingPosition = {\r\n                columnIndex: ++columnIndex,\r\n                rowIndex: cellPosition.rowIndex\r\n            };\r\n            hasValidCells = this._isCellByPositionValid(checkingPosition)\r\n        }\r\n        return hasValidCells\r\n    },\r\n    _isLastValidCell: function(cellPosition) {\r\n        var nextColumnIndex = cellPosition.columnIndex >= 0 ? cellPosition.columnIndex + 1 : 0;\r\n        var rowIndex = cellPosition.rowIndex;\r\n        var checkingPosition = {\r\n            columnIndex: nextColumnIndex,\r\n            rowIndex: rowIndex\r\n        };\r\n        var visibleRows = this._dataController.getVisibleRows();\r\n        var row = visibleRows && visibleRows[rowIndex];\r\n        var isLastRow = this._isLastRow(rowIndex);\r\n        if (!isLastRow) {\r\n            return false\r\n        }\r\n        if (row && \"group\" === row.rowType && cellPosition.columnIndex > 0) {\r\n            return true\r\n        }\r\n        if (cellPosition.columnIndex === this._getVisibleColumnCount() - 1) {\r\n            return true\r\n        }\r\n        if (this._isCellByPositionValid(checkingPosition)) {\r\n            return false\r\n        }\r\n        return this._isLastValidCell(checkingPosition)\r\n    },\r\n    _isCellValid: function($cell, isClick) {\r\n        if (isElementDefined($cell)) {\r\n            var rowsView = this.getView(\"rowsView\");\r\n            var $row = $cell.parent();\r\n            var columnsController = this._columnsController;\r\n            var columnIndex = rowsView.getCellIndex($cell) + columnsController.getColumnIndexOffset();\r\n            var column = columnsController.getVisibleColumns(null, true)[columnIndex];\r\n            var visibleColumnCount = this._getVisibleColumnCount();\r\n            var editingController = this._editingController;\r\n            var isMasterDetailRow = isDetailRow($row);\r\n            var isShowWhenGrouped = column && column.showWhenGrouped;\r\n            var isDataCell = column && !$cell.hasClass(COMMAND_EXPAND_CLASS) && isDataRow($row);\r\n            if (this._isMasterDetailCell($cell)) {\r\n                return true\r\n            }\r\n            if (visibleColumnCount > columnIndex && (!isMasterDetailRow && column && (!isDefined(column.groupIndex) || isShowWhenGrouped && isDataCell) || parseInt($cell.attr(\"colspan\")) > 1)) {\r\n                var rowItems = this._dataController.items();\r\n                var visibleRowIndex = rowsView.getRowIndex($row);\r\n                var row = rowItems[visibleRowIndex];\r\n                var isCellEditing = editingController && this._isCellEditMode() && editingController.isEditing();\r\n                var isRowEditingInCurrentRow = editingController && editingController.isEditRow(visibleRowIndex);\r\n                var isEditing = isRowEditingInCurrentRow || isCellEditing;\r\n                if (column.command) {\r\n                    if (this._isLegacyNavigation()) {\r\n                        return !isEditing && \"expand\" === column.command\r\n                    }\r\n                    if (isCellEditing) {\r\n                        return false\r\n                    }\r\n                    if (isRowEditingInCurrentRow) {\r\n                        return \"select\" !== column.command\r\n                    }\r\n                    return !isEditing\r\n                }\r\n                if (isCellEditing && row && \"data\" !== row.rowType) {\r\n                    return false\r\n                }\r\n                return !isEditing || column.allowEditing || isClick\r\n            }\r\n        }\r\n    },\r\n    getFirstValidCellInRow: function($row, columnIndex) {\r\n        var $cells = $row.find(\"> td\");\r\n        var $cell;\r\n        var $result;\r\n        columnIndex = columnIndex || 0;\r\n        for (var i = columnIndex; i < $cells.length; ++i) {\r\n            $cell = $cells.eq(i);\r\n            if (this._isCellValid($cell)) {\r\n                $result = $cell;\r\n                break\r\n            }\r\n        }\r\n        return $result\r\n    },\r\n    _getNextCell: function(keyCode, elementType, cellPosition) {\r\n        var focusedCellPosition = cellPosition || this._focusedCellPosition;\r\n        var isRowFocusType = this.isRowFocusType();\r\n        var includeCommandCells = isRowFocusType || inArray(keyCode, [\"next\", \"previous\"]) > -1;\r\n        var $cell;\r\n        var $row;\r\n        if (this._focusedView && focusedCellPosition) {\r\n            var newFocusedCellPosition = this._getNewPositionByCode(focusedCellPosition, elementType, keyCode);\r\n            $cell = $(this._getCell(newFocusedCellPosition));\r\n            var isLastCellOnDirection = \"previous\" === keyCode ? this._isFirstValidCell(newFocusedCellPosition) : this._isLastValidCell(newFocusedCellPosition);\r\n            if (isElementDefined($cell) && !this._isCellValid($cell) && this._isCellInRow(newFocusedCellPosition, includeCommandCells) && !isLastCellOnDirection) {\r\n                if (isRowFocusType) {\r\n                    $cell = this.getFirstValidCellInRow($cell.parent(), newFocusedCellPosition.columnIndex)\r\n                } else {\r\n                    $cell = this._getNextCell(keyCode, \"cell\", newFocusedCellPosition)\r\n                }\r\n            }\r\n            $row = isElementDefined($cell) && $cell.parent();\r\n            if (this._hasSkipRow($row)) {\r\n                var rowIndex = this._getRowIndex($row);\r\n                if (!this._isLastRow(rowIndex)) {\r\n                    $cell = this._getNextCell(keyCode, \"row\", {\r\n                        columnIndex: focusedCellPosition.columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n            return isElementDefined($cell) ? $cell : null\r\n        }\r\n        return null\r\n    },\r\n    _startEditing: function(eventArgs, fastEditingKey) {\r\n        var focusedCellPosition = this._focusedCellPosition;\r\n        var visibleRowIndex = this.getVisibleRowIndex();\r\n        var visibleColumnIndex = this.getVisibleColumnIndex();\r\n        var row = this._dataController.items()[visibleRowIndex];\r\n        var column = this._columnsController.getVisibleColumns()[visibleColumnIndex];\r\n        if (this._isAllowEditing(row, column)) {\r\n            if (this._isRowEditMode()) {\r\n                this._editingController.editRow(visibleRowIndex)\r\n            } else if (focusedCellPosition) {\r\n                this._startEditCell(eventArgs, fastEditingKey)\r\n            }\r\n        }\r\n    },\r\n    _isAllowEditing: function(row, column) {\r\n        return this._editingController.allowUpdating({\r\n            row: row\r\n        }) && column && column.allowEditing\r\n    },\r\n    _editFocusedCell: function() {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var colIndex = this.getVisibleColumnIndex();\r\n        return this._editingController.editCell(rowIndex, colIndex)\r\n    },\r\n    _startEditCell: function(eventArgs, fastEditingKey) {\r\n        this._fastEditingStarted = isDefined(fastEditingKey);\r\n        var editResult = this._editFocusedCell();\r\n        if (this._isFastEditingStarted()) {\r\n            if (true === editResult) {\r\n                this._editingCellHandler(eventArgs, fastEditingKey)\r\n            } else if (editResult && editResult.done) {\r\n                var editorValue = fastEditingKey !== FAST_EDITING_DELETE_KEY ? fastEditingKey : \"\";\r\n                editResult.done(() => this._editingCellHandler(eventArgs, editorValue))\r\n            }\r\n        }\r\n    },\r\n    _editingCellHandler: function(eventArgs, editorValue) {\r\n        var _$input$get$select, _$input$get;\r\n        var $input = this._getFocusedCell().find(INTERACTIVE_ELEMENTS_SELECTOR).eq(0);\r\n        var keyDownEvent = createEvent(eventArgs, {\r\n            type: \"keydown\",\r\n            target: $input.get(0)\r\n        });\r\n        var keyPressEvent = createEvent(eventArgs, {\r\n            type: \"keypress\",\r\n            target: $input.get(0)\r\n        });\r\n        var inputEvent = createEvent(eventArgs, {\r\n            type: \"input\",\r\n            target: $input.get(0)\r\n        });\r\n        null === (_$input$get$select = (_$input$get = $input.get(0)).select) || void 0 === _$input$get$select ? void 0 : _$input$get$select.call(_$input$get);\r\n        eventsEngine.trigger($input, keyDownEvent);\r\n        if (!keyDownEvent.isDefaultPrevented()) {\r\n            eventsEngine.trigger($input, keyPressEvent);\r\n            if (!keyPressEvent.isDefaultPrevented()) {\r\n                var timeout = browser.mozilla ? 25 : 0;\r\n                setTimeout(() => {\r\n                    $input.val(editorValue);\r\n                    var $widgetContainer = $input.closest(\".\".concat(WIDGET_CLASS));\r\n                    eventsEngine.off($widgetContainer, \"focusout\");\r\n                    eventsEngine.one($widgetContainer, \"focusout\", (function() {\r\n                        eventsEngine.trigger($input, \"change\")\r\n                    }));\r\n                    eventsEngine.trigger($input, inputEvent)\r\n                }, timeout)\r\n            }\r\n        }\r\n    },\r\n    _fireFocusChangingEvents: function($event, $cell, fireRowEvent, isHighlighted) {\r\n        var args = {};\r\n        var cellPosition = this._getCellPosition($cell) || {};\r\n        if (this.isCellFocusType()) {\r\n            args = this._fireFocusedCellChanging($event, $cell, isHighlighted);\r\n            if (!args.cancel) {\r\n                cellPosition.columnIndex = args.newColumnIndex;\r\n                cellPosition.rowIndex = args.newRowIndex;\r\n                isHighlighted = args.isHighlighted;\r\n                $cell = $(this._getCell(cellPosition))\r\n            }\r\n        }\r\n        if (!args.cancel && fireRowEvent && $cell) {\r\n            args = this._fireFocusedRowChanging($event, $cell.parent());\r\n            if (!args.cancel) {\r\n                cellPosition.rowIndex = args.newRowIndex;\r\n                args.isHighlighted = isHighlighted\r\n            }\r\n        }\r\n        args.$newCellElement = $(this._getCell(cellPosition));\r\n        if (!args.$newCellElement.length) {\r\n            args.$newCellElement = $cell\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedCellChanging: function($event, $cellElement, isHighlighted) {\r\n        var prevCellIndex = this.option(\"focusedColumnIndex\");\r\n        var prevRowIndex = this.option(\"focusedRowIndex\");\r\n        var cellPosition = this._getCellPosition($cellElement);\r\n        var columnIndex = cellPosition ? cellPosition.columnIndex : -1;\r\n        var rowIndex = cellPosition ? cellPosition.rowIndex : -1;\r\n        var args = {\r\n            cellElement: $cellElement,\r\n            prevColumnIndex: prevCellIndex,\r\n            prevRowIndex: prevRowIndex,\r\n            newColumnIndex: columnIndex,\r\n            newRowIndex: rowIndex,\r\n            rows: this._dataController.getVisibleRows(),\r\n            columns: this._columnsController.getVisibleColumns(),\r\n            event: $event,\r\n            isHighlighted: isHighlighted || false,\r\n            cancel: false\r\n        };\r\n        this._canceledCellPosition = null;\r\n        this.executeAction(\"onFocusedCellChanging\", args);\r\n        if (args.newColumnIndex !== columnIndex || args.newRowIndex !== rowIndex) {\r\n            args.$newCellElement = $(this._getCell({\r\n                columnIndex: args.newColumnIndex,\r\n                rowIndex: args.newRowIndex\r\n            }))\r\n        }\r\n        if (args.cancel) {\r\n            this._canceledCellPosition = {\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            }\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedCellChanged: function($cellElement, prevCellIndex, prevRowIndex) {\r\n        var dataController = this._dataController;\r\n        var columnIndex = this.getView(\"rowsView\").getCellIndex($cellElement);\r\n        var rowIndex = this._getRowIndex($cellElement && $cellElement.parent());\r\n        var localRowIndex = Math.min(rowIndex - dataController.getRowIndexOffset(), dataController.items().length - 1);\r\n        var isEditingCell = this._editingController.isEditCell(localRowIndex, columnIndex);\r\n        var row = dataController.items()[localRowIndex];\r\n        if (!isEditingCell && (prevCellIndex !== columnIndex || prevRowIndex !== rowIndex)) {\r\n            this.executeAction(\"onFocusedCellChanged\", {\r\n                cellElement: $cellElement,\r\n                columnIndex: columnIndex,\r\n                rowIndex: rowIndex,\r\n                row: row,\r\n                column: this._columnsController.getVisibleColumns()[columnIndex]\r\n            })\r\n        }\r\n    },\r\n    _fireFocusedRowChanging: function(eventArgs, $newFocusedRow) {\r\n        var newRowIndex = this._getRowIndex($newFocusedRow);\r\n        var dataController = this._dataController;\r\n        var prevFocusedRowIndex = this.option(\"focusedRowIndex\");\r\n        var loadingOperationTypes = dataController.loadingOperationTypes();\r\n        var args = {\r\n            rowElement: $newFocusedRow,\r\n            prevRowIndex: prevFocusedRowIndex,\r\n            newRowIndex: newRowIndex,\r\n            event: eventArgs,\r\n            rows: dataController.getVisibleRows(),\r\n            cancel: false\r\n        };\r\n        if (!dataController || dataController.isLoading() && (loadingOperationTypes.reload || loadingOperationTypes.paging)) {\r\n            args.cancel = true;\r\n            return args\r\n        }\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            this.executeAction(\"onFocusedRowChanging\", args);\r\n            if (!args.cancel && args.newRowIndex !== newRowIndex) {\r\n                args.resetFocusedRow = args.newRowIndex < 0;\r\n                if (!args.resetFocusedRow) {\r\n                    this.setFocusedRowIndex(args.newRowIndex)\r\n                }\r\n                args.rowIndexChanged = true\r\n            }\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedRowChanged: function($rowElement) {\r\n        var row;\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        var focusController = this.getController(\"focus\");\r\n        var focusedRowIndex = null === focusController || void 0 === focusController ? void 0 : focusController.getFocusedRowIndexByKey(focusedRowKey);\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            if (focusedRowIndex >= 0) {\r\n                var dataController = this._dataController;\r\n                row = focusedRowIndex >= 0 && dataController.getVisibleRows()[focusedRowIndex - dataController.getRowIndexOffset()]\r\n            }\r\n            this.executeAction(\"onFocusedRowChanged\", {\r\n                rowElement: $rowElement,\r\n                rowIndex: focusedRowIndex,\r\n                row: row\r\n            })\r\n        }\r\n    },\r\n    _isEventInCurrentGrid: function(event) {\r\n        return gridCoreUtils.isElementInCurrentGrid(this, $(event.target))\r\n    },\r\n    _isRowEditMode: function() {\r\n        var editMode = this._editingController.getEditMode();\r\n        return editMode === EDIT_MODE_ROW || editMode === EDIT_MODE_FORM\r\n    },\r\n    _isCellEditMode: function() {\r\n        var editMode = this._editingController.getEditMode();\r\n        return editMode === EDIT_MODE_CELL || editMode === EDIT_MODE_BATCH\r\n    },\r\n    _isFastEditingAllowed: function() {\r\n        return this._isCellEditMode() && this.option(\"keyboardNavigation.editOnKeyPress\")\r\n    },\r\n    _getInteractiveElement: function($cell, isLast) {\r\n        var $focusedElement = $cell.find(INTERACTIVE_ELEMENTS_SELECTOR).filter(\":visible\");\r\n        return isLast ? $focusedElement.last() : $focusedElement.first()\r\n    },\r\n    _applyTabIndexToElement: function($element) {\r\n        var tabIndex = this.option(\"tabIndex\") || 0;\r\n        $element.attr(\"tabindex\", isDefined(tabIndex) ? tabIndex : 0)\r\n    },\r\n    _getCell: function(cellPosition) {\r\n        if (this._focusedView && cellPosition) {\r\n            var rowIndexOffset = this._dataController.getRowIndexOffset();\r\n            var column = this._columnsController.getVisibleColumns(null, true)[cellPosition.columnIndex];\r\n            var columnIndexOffset = column && column.fixed ? this._getFixedColumnIndexOffset(column) : this._columnsController.getColumnIndexOffset();\r\n            var rowIndex = cellPosition.rowIndex >= 0 ? cellPosition.rowIndex - rowIndexOffset : -1;\r\n            var columnIndex = cellPosition.columnIndex >= 0 ? cellPosition.columnIndex - columnIndexOffset : -1;\r\n            return this._focusedView.getCell({\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            })\r\n        }\r\n    },\r\n    _getRowIndex: function($row) {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var rowIndex = rowsView.getRowIndex($row);\r\n        if (rowIndex >= 0) {\r\n            rowIndex += this._dataController.getRowIndexOffset()\r\n        }\r\n        return rowIndex\r\n    },\r\n    _hasSkipRow: function($row) {\r\n        var row = $row && $row.get(0);\r\n        return row && (\"none\" === row.style.display || $row.hasClass(this.addWidgetPrefix(GROUP_FOOTER_CLASS)) || isDetailRow($row) && !$row.hasClass(this.addWidgetPrefix(EDIT_FORM_CLASS)))\r\n    },\r\n    _allowEditingOnEnterKey: function() {\r\n        return \"startEdit\" === this.option(\"keyboardNavigation.enterKeyAction\")\r\n    },\r\n    _isLegacyNavigation: function() {\r\n        return this.option(\"useLegacyKeyboardNavigation\")\r\n    },\r\n    _getDirectionCodeByKey: function(key) {\r\n        var directionCode;\r\n        switch (key) {\r\n            case \"upArrow\":\r\n                directionCode = \"prevRow\";\r\n                break;\r\n            case \"downArrow\":\r\n                directionCode = \"nextRow\";\r\n                break;\r\n            case \"leftArrow\":\r\n                directionCode = this.option(\"rtlEnabled\") ? \"nextInRow\" : \"previousInRow\";\r\n                break;\r\n            case \"rightArrow\":\r\n                directionCode = this.option(\"rtlEnabled\") ? \"previousInRow\" : \"nextInRow\"\r\n        }\r\n        return directionCode\r\n    },\r\n    _isVirtualScrolling: function() {\r\n        var scrollingMode = this.option(\"scrolling.mode\");\r\n        return \"virtual\" === scrollingMode || \"infinite\" === scrollingMode\r\n    },\r\n    _isVirtualRowRender: function() {\r\n        return this._isVirtualScrolling() || gridCoreUtils.isVirtualRowRendering(this)\r\n    },\r\n    _isVirtualColumnRender: function() {\r\n        return \"virtual\" === this.option(\"scrolling.columnRenderingMode\")\r\n    },\r\n    _scrollBy: function(left, top, rowIndex, $event) {\r\n        var that = this;\r\n        var scrollable = this.getView(\"rowsView\").getScrollable();\r\n        if (that._focusedCellPosition) {\r\n            scrollable.on(\"scroll\", (function scrollHandler() {\r\n                scrollable.off(\"scroll\", scrollHandler);\r\n                setTimeout(that.restoreFocusableElement.bind(that, rowIndex, $event))\r\n            }))\r\n        }\r\n        return scrollable.scrollBy({\r\n            left: left,\r\n            top: top\r\n        })\r\n    },\r\n    _isInsideEditForm: function(element) {\r\n        return $(element).closest(\".\" + this.addWidgetPrefix(EDIT_FORM_CLASS)).length > 0\r\n    },\r\n    _isMasterDetailCell: function(element) {\r\n        var $masterDetailCell = $(element).closest(\".\" + MASTER_DETAIL_CELL_CLASS);\r\n        var $masterDetailGrid = $masterDetailCell.closest(\".\" + this.getWidgetContainerClass()).parent();\r\n        return $masterDetailCell.length && $masterDetailGrid.is(this.component.$element())\r\n    },\r\n    _processNextCellInMasterDetail: function($nextCell) {\r\n        if (!this._isInsideEditForm($nextCell) && $nextCell) {\r\n            this._applyTabIndexToElement($nextCell)\r\n        }\r\n    },\r\n    _handleTabKeyOnMasterDetailCell: function(target, direction) {\r\n        if (this._isMasterDetailCell(target)) {\r\n            this._updateFocusedCellPosition($(target), direction);\r\n            var $nextCell = this._getNextCell(direction, \"row\");\r\n            this._processNextCellInMasterDetail($nextCell);\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    _getElementType: function(target) {\r\n        return $(target).is(\"tr\") ? \"row\" : \"cell\"\r\n    },\r\n    _isFastEditingStarted: function() {\r\n        return this._isFastEditingAllowed() && this._fastEditingStarted\r\n    },\r\n    _getVisibleColumnCount: function() {\r\n        return this._columnsController.getVisibleColumns(null, true).length\r\n    },\r\n    _isCellInRow: function(cellPosition, includeCommandCells) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var visibleColumnsCount = this._getVisibleColumnCount();\r\n        return includeCommandCells ? columnIndex >= 0 && columnIndex <= visibleColumnsCount - 1 : columnIndex > 0 && columnIndex < visibleColumnsCount - 1\r\n    },\r\n    _getCellElementFromTarget: function(target) {\r\n        var elementType = this._getElementType(target);\r\n        var $targetElement = $(target);\r\n        var $cell;\r\n        if (\"cell\" === elementType) {\r\n            $cell = $targetElement.closest(\".\".concat(ROW_CLASS, \" > td\"))\r\n        } else {\r\n            $cell = $targetElement.children().not(\".\" + COMMAND_EXPAND_CLASS).first()\r\n        }\r\n        return $cell\r\n    },\r\n    _getRowsViewElement: function() {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        return rowsView && rowsView.element()\r\n    },\r\n    isKeyboardEnabled: function() {\r\n        return this.option(\"keyboardNavigation.enabled\")\r\n    },\r\n    _processCanceledEditCellPosition: function(rowIndex, columnIndex) {\r\n        if (this._canceledCellPosition) {\r\n            var isCanceled = this._canceledCellPosition.rowIndex === rowIndex && this._canceledCellPosition.columnIndex === columnIndex;\r\n            this._canceledCellPosition = null;\r\n            return isCanceled\r\n        }\r\n    },\r\n    updateFocusedRowIndex: function() {\r\n        var dataController = this._dataController;\r\n        var visibleRowIndex = this.getVisibleRowIndex();\r\n        var visibleItems = dataController.items();\r\n        var lastVisibleIndex = visibleItems.length ? visibleItems.length - 1 : -1;\r\n        var rowIndexOffset = dataController.getRowIndexOffset();\r\n        lastVisibleIndex >= 0 && visibleRowIndex > lastVisibleIndex && this.setFocusedRowIndex(lastVisibleIndex + rowIndexOffset)\r\n    }\r\n});\r\nexport var keyboardNavigationModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            useLegacyKeyboardNavigation: false,\r\n            keyboardNavigation: {\r\n                enabled: true,\r\n                enterKeyAction: \"startEdit\",\r\n                enterKeyDirection: \"none\",\r\n                editOnKeyPress: false\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        keyboardNavigation: KeyboardNavigationController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _rowClick: function(e) {\r\n                    var editRowIndex = this.getController(\"editing\").getEditRowIndex();\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    if (editRowIndex === e.rowIndex) {\r\n                        keyboardController.setCellFocusType()\r\n                    }\r\n                    var needTriggerPointerEventHandler = isMobile() && this.option(\"focusedRowEnabled\");\r\n                    if (needTriggerPointerEventHandler) {\r\n                        this._triggerPointerDownEventHandler(e)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _triggerPointerDownEventHandler: function(e) {\r\n                    var originalEvent = e.event.originalEvent;\r\n                    if (originalEvent) {\r\n                        var keyboardController = this.getController(\"keyboardNavigation\");\r\n                        var $cell = $(originalEvent.target);\r\n                        var columnIndex = this.getCellIndex($cell);\r\n                        var column = this.getController(\"columns\").getVisibleColumns()[columnIndex];\r\n                        var row = this.getController(\"data\").items()[e.rowIndex];\r\n                        if (keyboardController._isAllowEditing(row, column)) {\r\n                            var eventArgs = createEvent(originalEvent, {\r\n                                currentTarget: originalEvent.target\r\n                            });\r\n                            keyboardController._pointerEventHandler(eventArgs)\r\n                        }\r\n                    }\r\n                },\r\n                renderFocusState: function(params) {\r\n                    var {\r\n                        preventScroll: preventScroll,\r\n                        pageSizeChanged: pageSizeChanged\r\n                    } = null !== params && void 0 !== params ? params : {};\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var $rowsViewElement = this.element();\r\n                    if ($rowsViewElement && !focused($rowsViewElement)) {\r\n                        $rowsViewElement.attr(\"tabindex\", null)\r\n                    }\r\n                    pageSizeChanged && keyboardController.updateFocusedRowIndex();\r\n                    var rowIndex = keyboardController.getVisibleRowIndex();\r\n                    if (!isDefined(rowIndex) || rowIndex < 0) {\r\n                        rowIndex = 0\r\n                    }\r\n                    var cellElements = this.getCellElements(rowIndex);\r\n                    if (keyboardController.isKeyboardEnabled() && cellElements.length) {\r\n                        this.updateFocusElementTabIndex(cellElements, preventScroll)\r\n                    }\r\n                },\r\n                updateFocusElementTabIndex: function(cellElements) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var $row = cellElements.eq(0).parent();\r\n                    if (isGroupRow($row)) {\r\n                        keyboardController._applyTabIndexToElement($row)\r\n                    } else {\r\n                        var columnIndex = keyboardController.getColumnIndex();\r\n                        if (!isDefined(columnIndex) || columnIndex < 0) {\r\n                            columnIndex = 0\r\n                        }\r\n                        this._updateFocusedCellTabIndex(cellElements, columnIndex)\r\n                    }\r\n                },\r\n                _updateFocusedCellTabIndex: function(cellElements, columnIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var cellElementsLength = cellElements ? cellElements.length : -1;\r\n                    var updateCellTabIndex = function($cell) {\r\n                        var isMasterDetailCell = keyboardController._isMasterDetailCell($cell);\r\n                        var isValidCell = keyboardController._isCellValid($cell);\r\n                        if (!isMasterDetailCell && isValidCell && isCellElement($cell)) {\r\n                            keyboardController._applyTabIndexToElement($cell);\r\n                            keyboardController.setCellFocusType();\r\n                            return true\r\n                        }\r\n                    };\r\n                    var $cell = cellElements.filter(\"[aria-colindex='\".concat(columnIndex + 1, \"']\"));\r\n                    if ($cell.length) {\r\n                        updateCellTabIndex($cell)\r\n                    } else {\r\n                        if (cellElementsLength <= columnIndex) {\r\n                            columnIndex = cellElementsLength - 1\r\n                        }\r\n                        for (var i = columnIndex; i < cellElementsLength; ++i) {\r\n                            if (updateCellTabIndex($(cellElements[i]))) {\r\n                                break\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                renderDelayedTemplates: function(change) {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._renderFocusByChange(change)\r\n                },\r\n                _renderFocusByChange(change) {\r\n                    var {\r\n                        operationTypes: operationTypes,\r\n                        repaintChangesOnly: repaintChangesOnly\r\n                    } = null !== change && void 0 !== change ? change : {};\r\n                    var {\r\n                        fullReload: fullReload,\r\n                        pageSize: pageSize\r\n                    } = null !== operationTypes && void 0 !== operationTypes ? operationTypes : {};\r\n                    if (!change || !repaintChangesOnly || fullReload || pageSize) {\r\n                        var preventScroll = shouldPreventScroll(this);\r\n                        this.renderFocusState({\r\n                            preventScroll: preventScroll,\r\n                            pageSizeChanged: pageSize\r\n                        })\r\n                    }\r\n                },\r\n                _renderCore: function(change) {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._renderFocusByChange(change)\r\n                },\r\n                _editCellPrepared: function($cell) {\r\n                    var editorInstance = this._getEditorInstance($cell);\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var isEditingNavigationMode = keyboardController && keyboardController._isFastEditingStarted();\r\n                    if (editorInstance && isEditingNavigationMode) {\r\n                        this._handleEditingNavigationMode(editorInstance)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _handleEditingNavigationMode: function(editorInstance) {\r\n                    [\"downArrow\", \"upArrow\"].forEach((function(keyName) {\r\n                        var originalKeyHandler = editorInstance._supportedKeys()[keyName];\r\n                        editorInstance.registerKeyHandler(keyName, e => {\r\n                            var isDropDownOpened = \"true\" === editorInstance._input().attr(\"aria-expanded\");\r\n                            if (isDropDownOpened) {\r\n                                return originalKeyHandler && originalKeyHandler.call(editorInstance, e)\r\n                            }\r\n                        })\r\n                    }));\r\n                    editorInstance.registerKeyHandler(\"leftArrow\", noop);\r\n                    editorInstance.registerKeyHandler(\"rightArrow\", noop);\r\n                    var isDateBoxWithMask = editorInstance.NAME === DATEBOX_WIDGET_NAME && editorInstance.option(\"useMaskBehavior\");\r\n                    if (isDateBoxWithMask) {\r\n                        editorInstance.registerKeyHandler(\"enter\", noop)\r\n                    }\r\n                },\r\n                _getEditorInstance: function($cell) {\r\n                    var $editor = $cell.find(\".dx-texteditor\").eq(0);\r\n                    return gridCoreUtils.getWidgetInstance($editor)\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            editing: {\r\n                editCell: function(rowIndex, columnIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    if (keyboardController._processCanceledEditCellPosition(rowIndex, columnIndex)) {\r\n                        return false\r\n                    }\r\n                    var isCellEditing = this.callBase(rowIndex, columnIndex);\r\n                    if (isCellEditing) {\r\n                        keyboardController.setupFocusedView()\r\n                    }\r\n                    return isCellEditing\r\n                },\r\n                editRow: function(rowIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var visibleColumnIndex = keyboardController.getVisibleColumnIndex();\r\n                    var column = this._columnsController.getVisibleColumns()[visibleColumnIndex];\r\n                    if (column && column.type || this.option(\"editing.mode\") === EDIT_MODE_FORM) {\r\n                        keyboardController._resetFocusedCell()\r\n                    }\r\n                    this.callBase(rowIndex)\r\n                },\r\n                addRow: function(parentKey) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    keyboardController.setupFocusedView();\r\n                    keyboardController.setCellFocusType();\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                getFocusedCellInRow: function(rowIndex) {\r\n                    var keyboardNavigationController = this.getController(\"keyboardNavigation\");\r\n                    var $cell = this.callBase(rowIndex);\r\n                    if (keyboardNavigationController.isKeyboardEnabled() && keyboardNavigationController._focusedCellPosition.rowIndex === rowIndex) {\r\n                        var $focusedCell = keyboardNavigationController._getFocusedCell();\r\n                        if (isElementDefined($focusedCell) && !$focusedCell.hasClass(COMMAND_EDIT_CLASS)) {\r\n                            $cell = $focusedCell\r\n                        }\r\n                    }\r\n                    return $cell\r\n                },\r\n                _processCanceledEditingCell: function() {\r\n                    this.closeEditCell().done(() => {\r\n                        var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                        keyboardNavigation._updateFocus()\r\n                    })\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._keyboardNavigationController = this.getController(\"keyboardNavigation\")\r\n                },\r\n                closeEditCell: function() {\r\n                    var keyboardNavigation = this._keyboardNavigationController;\r\n                    keyboardNavigation._fastEditingStarted = false;\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    keyboardNavigation._updateFocus();\r\n                    return result\r\n                },\r\n                _delayedInputFocus: function() {\r\n                    this._keyboardNavigationController._isNeedScroll = true;\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _isEditingStart: function() {\r\n                    var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                    var cancel = this.callBase.apply(this, arguments);\r\n                    if (cancel && !keyboardNavigation._isNeedFocus) {\r\n                        var $cell = keyboardNavigation._getFocusedCell();\r\n                        keyboardNavigation._focus($cell, true)\r\n                    }\r\n                    return cancel\r\n                }\r\n            },\r\n            data: {\r\n                _correctRowIndices: function(getRowIndexCorrection) {\r\n                    var that = this;\r\n                    var keyboardNavigationController = that.getController(\"keyboardNavigation\");\r\n                    var editorFactory = that.getController(\"editorFactory\");\r\n                    var focusedCellPosition = keyboardNavigationController._focusedCellPosition;\r\n                    that.callBase.apply(that, arguments);\r\n                    if (focusedCellPosition && focusedCellPosition.rowIndex >= 0) {\r\n                        var focusedRowIndexCorrection = getRowIndexCorrection(focusedCellPosition.rowIndex);\r\n                        if (focusedRowIndexCorrection) {\r\n                            focusedCellPosition.rowIndex += focusedRowIndexCorrection;\r\n                            editorFactory.refocus()\r\n                        }\r\n                    }\r\n                },\r\n                getMaxRowIndex: function() {\r\n                    var result = this.items().length - 1;\r\n                    var virtualItemsCount = this.virtualItemsCount();\r\n                    if (virtualItemsCount) {\r\n                        result += virtualItemsCount.begin + virtualItemsCount.end\r\n                    }\r\n                    return result\r\n                }\r\n            },\r\n            adaptiveColumns: {\r\n                _showHiddenCellsInView: function(_ref) {\r\n                    var {\r\n                        viewName: viewName,\r\n                        $cells: $cells,\r\n                        isCommandColumn: isCommandColumn\r\n                    } = _ref;\r\n                    this.callBase.apply(this, arguments);\r\n                    viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && $cells.each((_, cellElement) => {\r\n                        var $cell = $(cellElement);\r\n                        isCellInHeaderRow($cell) && $cell.attr(\"tabindex\", 0)\r\n                    })\r\n                },\r\n                _hideVisibleCellInView: function(_ref2) {\r\n                    var {\r\n                        viewName: viewName,\r\n                        $cell: $cell,\r\n                        isCommandColumn: isCommandColumn\r\n                    } = _ref2;\r\n                    this.callBase.apply(this, arguments);\r\n                    if (viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && isCellInHeaderRow($cell)) {\r\n                        $cell.removeAttr(\"tabindex\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/aggregate_calculator.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    errors\r\n} from \"../../data/errors\";\r\nimport {\r\n    aggregators\r\n} from \"../../data/utils\";\r\n\r\nfunction depthFirstSearch(i, depth, root, callback) {\r\n    var j = 0;\r\n    if (i < depth) {\r\n        for (; j < root.items.length; j++) {\r\n            depthFirstSearch(i + 1, depth, root.items[j], callback)\r\n        }\r\n    }\r\n    if (i === depth) {\r\n        callback(root)\r\n    }\r\n}\r\n\r\nfunction map(array, callback) {\r\n    var i;\r\n    if (\"map\" in array) {\r\n        return array.map(callback)\r\n    }\r\n    var result = new Array(array.length);\r\n    for (i in array) {\r\n        result[i] = callback(array[i], i)\r\n    }\r\n    return result\r\n}\r\n\r\nfunction isEmpty(x) {\r\n    return x !== x || \"\" === x || null === x || void 0 === x\r\n}\r\n\r\nfunction isCount(aggregator) {\r\n    return aggregator === aggregators.count\r\n}\r\n\r\nfunction normalizeAggregate(aggregate) {\r\n    var selector = compileGetter(aggregate.selector);\r\n    var skipEmptyValues = \"skipEmptyValues\" in aggregate ? aggregate.skipEmptyValues : true;\r\n    var aggregator = aggregate.aggregator;\r\n    if (\"string\" === typeof aggregator) {\r\n        aggregator = aggregators[aggregator];\r\n        if (!aggregator) {\r\n            throw errors.Error(\"E4001\", aggregate.aggregator)\r\n        }\r\n    }\r\n    return {\r\n        selector: selector,\r\n        aggregator: aggregator,\r\n        skipEmptyValues: skipEmptyValues\r\n    }\r\n}\r\nexport default Class.inherit({\r\n    ctor: function(options) {\r\n        this._data = options.data;\r\n        this._groupLevel = options.groupLevel || 0;\r\n        this._totalAggregates = map(options.totalAggregates || [], normalizeAggregate);\r\n        this._groupAggregates = map(options.groupAggregates || [], normalizeAggregate);\r\n        this._totals = []\r\n    },\r\n    calculate: function() {\r\n        if (this._totalAggregates.length) {\r\n            this._calculateTotals(0, {\r\n                items: this._data\r\n            })\r\n        }\r\n        if (this._groupAggregates.length && this._groupLevel > 0) {\r\n            this._calculateGroups({\r\n                items: this._data\r\n            })\r\n        }\r\n    },\r\n    totalAggregates: function() {\r\n        return this._totals\r\n    },\r\n    _aggregate: function(aggregates, data, container) {\r\n        var length = data.items ? data.items.length : 0;\r\n        for (var i = 0; i < aggregates.length; i++) {\r\n            if (isCount(aggregates[i].aggregator)) {\r\n                container[i] = (container[i] || 0) + length;\r\n                continue\r\n            }\r\n            for (var j = 0; j < length; j++) {\r\n                this._accumulate(i, aggregates[i], container, data.items[j])\r\n            }\r\n        }\r\n    },\r\n    _calculateTotals: function(level, data) {\r\n        if (0 === level) {\r\n            this._totals = this._seed(this._totalAggregates)\r\n        }\r\n        if (level === this._groupLevel) {\r\n            this._aggregate(this._totalAggregates, data, this._totals)\r\n        } else {\r\n            for (var i = 0; i < data.items.length; i++) {\r\n                this._calculateTotals(level + 1, data.items[i])\r\n            }\r\n        }\r\n        if (0 === level) {\r\n            this._totals = this._finalize(this._totalAggregates, this._totals)\r\n        }\r\n    },\r\n    _calculateGroups: function(root) {\r\n        var maxLevel = this._groupLevel;\r\n        var currentLevel = maxLevel + 1;\r\n        var seedFn = this._seed.bind(this, this._groupAggregates);\r\n        var stepFn = this._aggregate.bind(this, this._groupAggregates);\r\n        var finalizeFn = this._finalize.bind(this, this._groupAggregates);\r\n\r\n        function aggregator(node) {\r\n            node.aggregates = seedFn(currentLevel - 1);\r\n            if (currentLevel === maxLevel) {\r\n                stepFn(node, node.aggregates)\r\n            } else {\r\n                depthFirstSearch(currentLevel, maxLevel, node, (function(innerNode) {\r\n                    stepFn(innerNode, node.aggregates)\r\n                }))\r\n            }\r\n            node.aggregates = finalizeFn(node.aggregates)\r\n        }\r\n        while (--currentLevel > 0) {\r\n            depthFirstSearch(0, currentLevel, root, aggregator)\r\n        }\r\n    },\r\n    _seed: function(aggregates, groupIndex) {\r\n        return map(aggregates, (function(aggregate) {\r\n            var aggregator = aggregate.aggregator;\r\n            var seed = \"seed\" in aggregator ? isFunction(aggregator.seed) ? aggregator.seed(groupIndex) : aggregator.seed : NaN;\r\n            return seed\r\n        }))\r\n    },\r\n    _accumulate: function(aggregateIndex, aggregate, results, item) {\r\n        var value = aggregate.selector(item);\r\n        var aggregator = aggregate.aggregator;\r\n        var skipEmptyValues = aggregate.skipEmptyValues;\r\n        if (skipEmptyValues && isEmpty(value)) {\r\n            return\r\n        }\r\n        if (results[aggregateIndex] !== results[aggregateIndex]) {\r\n            results[aggregateIndex] = value\r\n        } else {\r\n            results[aggregateIndex] = aggregator.step(results[aggregateIndex], value)\r\n        }\r\n    },\r\n    _finalize: function(aggregates, results) {\r\n        return map(aggregates, (function(aggregate, index) {\r\n            var fin = aggregate.aggregator.finalize;\r\n            return fin ? fin(results[index]) : results[index]\r\n        }))\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.keyboard_navigation.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    keyboardNavigationModule\r\n} from \"../grid_core/ui.grid_core.keyboard_navigation\";\r\ngridCore.registerModule(\"keyboardNavigation\", keyboardNavigationModule);\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.summary.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    isEmptyObject,\r\n    isString,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport dataSourceAdapter from \"./ui.data_grid.data_source_adapter\";\r\nimport {\r\n    ColumnsView\r\n} from \"../grid_core/ui.grid_core.columns_view\";\r\nimport AggregateCalculator from \"./aggregate_calculator\";\r\nimport dataQuery from \"../../data/query\";\r\nimport storeHelper from \"../../data/store_helper\";\r\nimport {\r\n    normalizeSortingInfo\r\n} from \"../../data/utils\";\r\nvar DATAGRID_TOTAL_FOOTER_CLASS = \"dx-datagrid-total-footer\";\r\nvar DATAGRID_SUMMARY_ITEM_CLASS = \"dx-datagrid-summary-item\";\r\nvar DATAGRID_TEXT_CONTENT_CLASS = \"dx-datagrid-text-content\";\r\nvar DATAGRID_GROUP_FOOTER_CLASS = \"dx-datagrid-group-footer\";\r\nvar DATAGRID_GROUP_TEXT_CONTENT_CLASS = \"dx-datagrid-group-text-content\";\r\nvar DATAGRID_NOWRAP_CLASS = \"dx-datagrid-nowrap\";\r\nvar DATAGRID_GROUP_FOOTER_ROW_TYPE = \"groupFooter\";\r\nexport var renderSummaryCell = function(cell, options) {\r\n    var $cell = $(cell);\r\n    var column = options.column;\r\n    var summaryItems = options.summaryItems;\r\n    var $summaryItems = [];\r\n    if (!column.command && summaryItems) {\r\n        for (var i = 0; i < summaryItems.length; i++) {\r\n            var summaryItem = summaryItems[i];\r\n            $summaryItems.push($(\"<div>\").css(\"textAlign\", summaryItem.alignment || column.alignment).addClass(DATAGRID_SUMMARY_ITEM_CLASS).addClass(DATAGRID_TEXT_CONTENT_CLASS).addClass(summaryItem.cssClass).toggleClass(DATAGRID_GROUP_TEXT_CONTENT_CLASS, \"group\" === options.rowType).text(gridCore.getSummaryText(summaryItem, options.summaryTexts)))\r\n        }\r\n        $cell.append($summaryItems)\r\n    }\r\n};\r\nvar getSummaryCellOptions = function(that, options) {\r\n    var summaryTexts = that.option(\"summary.texts\") || {};\r\n    return {\r\n        totalItem: options.row,\r\n        summaryItems: options.row.summaryCells[options.columnIndex],\r\n        summaryTexts: summaryTexts\r\n    }\r\n};\r\nvar getGroupAggregates = function(data) {\r\n    return data.summary || data.aggregates || []\r\n};\r\nvar recalculateWhileEditing = function(that) {\r\n    return that.option(\"summary.recalculateWhileEditing\")\r\n};\r\nexport var FooterView = ColumnsView.inherit({\r\n    _getRows: function() {\r\n        return this._dataController.footerItems()\r\n    },\r\n    _getCellOptions: function(options) {\r\n        return extend(this.callBase(options), getSummaryCellOptions(this, options))\r\n    },\r\n    _renderCellContent: function($cell, options) {\r\n        renderSummaryCell($cell, options);\r\n        this.callBase($cell, options)\r\n    },\r\n    _renderCore: function(change) {\r\n        var needUpdateScrollLeft = false;\r\n        var totalItem = this._dataController.footerItems()[0];\r\n        if (!change || !change.columnIndices) {\r\n            this.element().empty().addClass(DATAGRID_TOTAL_FOOTER_CLASS).toggleClass(DATAGRID_NOWRAP_CLASS, !this.option(\"wordWrapEnabled\"));\r\n            needUpdateScrollLeft = true\r\n        }\r\n        if (totalItem && totalItem.summaryCells && totalItem.summaryCells.length) {\r\n            this._updateContent(this._renderTable({\r\n                change: change\r\n            }), change);\r\n            needUpdateScrollLeft && this._updateScrollLeftPosition()\r\n        }\r\n    },\r\n    _updateContent: function($newTable, change) {\r\n        if (change && \"update\" === change.changeType && change.columnIndices) {\r\n            var $row = this.getTableElement().find(\".dx-row\");\r\n            var $newRow = $newTable.find(\".dx-row\");\r\n            this._updateCells($row, $newRow, change.columnIndices[0])\r\n        } else {\r\n            return this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _rowClick: function(e) {\r\n        var item = this._dataController.footerItems()[e.rowIndex] || {};\r\n        this.executeAction(\"onRowClick\", extend({}, e, item))\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var optionNames = e.optionNames;\r\n        if (e.changeTypes.grouping) {\r\n            return\r\n        }\r\n        if (optionNames.width || optionNames.visibleWidth) {\r\n            this.callBase(e)\r\n        }\r\n    },\r\n    _handleDataChanged: function(e) {\r\n        var changeType = e.changeType;\r\n        if (\"update\" === e.changeType && e.repaintChangesOnly) {\r\n            if (!e.totalColumnIndices) {\r\n                this.render()\r\n            } else if (e.totalColumnIndices.length) {\r\n                this.render(null, {\r\n                    changeType: \"update\",\r\n                    columnIndices: [e.totalColumnIndices]\r\n                })\r\n            }\r\n        } else if (\"refresh\" === changeType || \"append\" === changeType || \"prepend\" === changeType) {\r\n            this.render()\r\n        }\r\n    },\r\n    getHeight: function() {\r\n        return this.getElementHeight()\r\n    },\r\n    isVisible: function() {\r\n        return !!this._dataController.footerItems().length\r\n    }\r\n});\r\nvar SummaryDataSourceAdapterExtender = {\r\n    init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._totalAggregates = [];\r\n        this._summaryGetter = noop\r\n    },\r\n    summaryGetter: function(_summaryGetter) {\r\n        if (!arguments.length) {\r\n            return this._summaryGetter\r\n        }\r\n        if (isFunction(_summaryGetter)) {\r\n            this._summaryGetter = _summaryGetter\r\n        }\r\n    },\r\n    summary: function(_summary) {\r\n        if (!arguments.length) {\r\n            return this._summaryGetter()\r\n        }\r\n        this._summaryGetter = function() {\r\n            return _summary\r\n        }\r\n    },\r\n    totalAggregates: function() {\r\n        return this._totalAggregates\r\n    },\r\n    isLastLevelGroupItemsPagingLocal: function() {\r\n        var summary = this.summary();\r\n        var sortByGroupsInfo = summary && summary.sortByGroups();\r\n        return sortByGroupsInfo && sortByGroupsInfo.length\r\n    },\r\n    sortLastLevelGroupItems: function(items, groups, paths) {\r\n        var groupedItems = storeHelper.multiLevelGroup(dataQuery(items), groups).toArray();\r\n        var result = [];\r\n        paths.forEach((function(path) {\r\n            ! function forEachGroup(groups, groupCount, callback, path) {\r\n                path = path || [];\r\n                for (var i = 0; i < groups.length; i++) {\r\n                    path.push(groups[i].key);\r\n                    if (1 === groupCount) {\r\n                        callback(path, groups[i].items)\r\n                    } else {\r\n                        forEachGroup(groups[i].items, groupCount - 1, callback, path)\r\n                    }\r\n                    path.pop()\r\n                }\r\n            }(groupedItems, groups.length, (function(itemsPath, items) {\r\n                if (path.toString() === itemsPath.toString()) {\r\n                    result = result.concat(items)\r\n                }\r\n            }))\r\n        }));\r\n        return result\r\n    }\r\n};\r\nvar SummaryDataSourceAdapterClientExtender = function() {\r\n    var calculateAggregates = function(that, summary, data, groupLevel) {\r\n        var calculator;\r\n        if (recalculateWhileEditing(that)) {\r\n            var editingController = that.getController(\"editing\");\r\n            if (editingController) {\r\n                var insertedData = editingController.getInsertedData();\r\n                if (insertedData.length) {\r\n                    data = function applyAddedData(data, insertedData, groupLevel) {\r\n                        if (groupLevel) {\r\n                            return applyAddedData(data, insertedData.map(item => ({\r\n                                items: [item]\r\n                            }), groupLevel - 1))\r\n                        }\r\n                        return data.concat(insertedData)\r\n                    }(data, insertedData, groupLevel)\r\n                }\r\n                var removedData = editingController.getRemovedData();\r\n                if (removedData.length) {\r\n                    data = function applyRemovedData(data, removedData, groupLevel) {\r\n                        if (groupLevel) {\r\n                            return data.map(data => {\r\n                                var updatedData = {};\r\n                                var updatedItems = applyRemovedData(data.items || [], removedData, groupLevel - 1);\r\n                                Object.defineProperty(updatedData, \"aggregates\", {\r\n                                    get: () => data.aggregates,\r\n                                    set: value => {\r\n                                        data.aggregates = value\r\n                                    }\r\n                                });\r\n                                return extend(updatedData, data, {\r\n                                    items: updatedItems\r\n                                })\r\n                            })\r\n                        }\r\n                        return data.filter(data => removedData.indexOf(data) < 0)\r\n                    }(data, removedData, groupLevel)\r\n                }\r\n            }\r\n        }\r\n        if (summary) {\r\n            calculator = new AggregateCalculator({\r\n                totalAggregates: summary.totalAggregates,\r\n                groupAggregates: summary.groupAggregates,\r\n                data: data,\r\n                groupLevel: groupLevel\r\n            });\r\n            calculator.calculate()\r\n        }\r\n        return calculator ? calculator.totalAggregates() : []\r\n    };\r\n    var sortGroupsBySummary = function(data, group, summary) {\r\n        var sortByGroups = summary && summary.sortByGroups && summary.sortByGroups();\r\n        if (sortByGroups && sortByGroups.length) {\r\n            return function sortGroupsBySummaryCore(items, groups, sortByGroups) {\r\n                if (!items || !groups.length) {\r\n                    return items\r\n                }\r\n                var group = groups[0];\r\n                var sorts = sortByGroups[0];\r\n                var query;\r\n                if (group && sorts && sorts.length) {\r\n                    query = dataQuery(items);\r\n                    each(sorts, (function(index) {\r\n                        if (0 === index) {\r\n                            query = query.sortBy(this.selector, this.desc)\r\n                        } else {\r\n                            query = query.thenBy(this.selector, this.desc)\r\n                        }\r\n                    }));\r\n                    query.enumerate().done((function(sortedItems) {\r\n                        items = sortedItems\r\n                    }))\r\n                }\r\n                groups = groups.slice(1);\r\n                sortByGroups = sortByGroups.slice(1);\r\n                if (groups.length && sortByGroups.length) {\r\n                    each(items, (function() {\r\n                        this.items = sortGroupsBySummaryCore(this.items, groups, sortByGroups)\r\n                    }))\r\n                }\r\n                return items\r\n            }(data, group, sortByGroups)\r\n        }\r\n        return data\r\n    };\r\n    return {\r\n        _customizeRemoteOperations: function(options) {\r\n            var summary = this.summary();\r\n            if (summary) {\r\n                if (options.remoteOperations.summary) {\r\n                    if (!options.isCustomLoading || options.storeLoadOptions.isLoadingAll) {\r\n                        if (options.storeLoadOptions.group) {\r\n                            if (options.remoteOperations.grouping) {\r\n                                options.storeLoadOptions.groupSummary = summary.groupAggregates\r\n                            } else if (summary.groupAggregates.length) {\r\n                                options.remoteOperations.paging = false\r\n                            }\r\n                        }\r\n                        options.storeLoadOptions.totalSummary = summary.totalAggregates\r\n                    }\r\n                } else if (summary.totalAggregates.length || summary.groupAggregates.length && options.storeLoadOptions.group) {\r\n                    options.remoteOperations.paging = false\r\n                }\r\n            }\r\n            this.callBase.apply(this, arguments);\r\n            var cachedExtra = options.cachedData.extra;\r\n            if (cachedExtra && cachedExtra.summary && !options.isCustomLoading) {\r\n                options.storeLoadOptions.totalSummary = void 0\r\n            }\r\n        },\r\n        _handleDataLoadedCore: function(options) {\r\n            var groups = normalizeSortingInfo(options.storeLoadOptions.group || options.loadOptions.group || []);\r\n            var remoteOperations = options.remoteOperations || {};\r\n            var summary = this.summaryGetter()(remoteOperations);\r\n            if (!options.isCustomLoading || options.storeLoadOptions.isLoadingAll) {\r\n                if (remoteOperations.summary) {\r\n                    if (!remoteOperations.paging && groups.length && summary) {\r\n                        if (!remoteOperations.grouping) {\r\n                            calculateAggregates(this, {\r\n                                groupAggregates: summary.groupAggregates\r\n                            }, options.data, groups.length)\r\n                        }\r\n                        options.data = sortGroupsBySummary(options.data, groups, summary)\r\n                    }\r\n                } else if (!remoteOperations.paging && summary) {\r\n                    var _options$cachedData, _options$cachedData$e;\r\n                    var operationTypes = options.operationTypes || {};\r\n                    var hasOperations = Object.keys(operationTypes).some(type => operationTypes[type]);\r\n                    if (!hasOperations || !(null !== (_options$cachedData = options.cachedData) && void 0 !== _options$cachedData && null !== (_options$cachedData$e = _options$cachedData.extra) && void 0 !== _options$cachedData$e && _options$cachedData$e.summary) || groups.length && summary.groupAggregates.length) {\r\n                        var totalAggregates = calculateAggregates(this, summary, options.data, groups.length);\r\n                        options.extra = isPlainObject(options.extra) ? options.extra : {};\r\n                        options.extra.summary = totalAggregates;\r\n                        if (options.cachedData) {\r\n                            options.cachedData.extra = options.extra\r\n                        }\r\n                    }\r\n                    options.data = sortGroupsBySummary(options.data, groups, summary)\r\n                }\r\n            }\r\n            if (!options.isCustomLoading) {\r\n                this._totalAggregates = options.extra && options.extra.summary || this._totalAggregates\r\n            }\r\n            this.callBase(options)\r\n        }\r\n    }\r\n}();\r\ndataSourceAdapter.extend(SummaryDataSourceAdapterExtender);\r\ndataSourceAdapter.extend(SummaryDataSourceAdapterClientExtender);\r\ngridCore.registerModule(\"summary\", {\r\n    defaultOptions: function() {\r\n        return {\r\n            summary: {\r\n                groupItems: void 0,\r\n                totalItems: void 0,\r\n                calculateCustomSummary: void 0,\r\n                skipEmptyValues: true,\r\n                recalculateWhileEditing: false,\r\n                texts: {\r\n                    sum: messageLocalization.format(\"dxDataGrid-summarySum\"),\r\n                    sumOtherColumn: messageLocalization.format(\"dxDataGrid-summarySumOtherColumn\"),\r\n                    min: messageLocalization.format(\"dxDataGrid-summaryMin\"),\r\n                    minOtherColumn: messageLocalization.format(\"dxDataGrid-summaryMinOtherColumn\"),\r\n                    max: messageLocalization.format(\"dxDataGrid-summaryMax\"),\r\n                    maxOtherColumn: messageLocalization.format(\"dxDataGrid-summaryMaxOtherColumn\"),\r\n                    avg: messageLocalization.format(\"dxDataGrid-summaryAvg\"),\r\n                    avgOtherColumn: messageLocalization.format(\"dxDataGrid-summaryAvgOtherColumn\"),\r\n                    count: messageLocalization.format(\"dxDataGrid-summaryCount\")\r\n                }\r\n            },\r\n            sortByGroupSummaryInfo: void 0\r\n        }\r\n    },\r\n    views: {\r\n        footerView: FooterView\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                _isDataColumn: function(column) {\r\n                    return column && (!isDefined(column.groupIndex) || column.showWhenGrouped)\r\n                },\r\n                _isGroupFooterVisible: function() {\r\n                    var groupItems = this.option(\"summary.groupItems\") || [];\r\n                    for (var i = 0; i < groupItems.length; i++) {\r\n                        var groupItem = groupItems[i];\r\n                        var column = this._columnsController.columnOption(groupItem.showInColumn || groupItem.column);\r\n                        if (groupItem.showInGroupFooter && this._isDataColumn(column)) {\r\n                            return true\r\n                        }\r\n                    }\r\n                    return false\r\n                },\r\n                _processGroupItems: function(items, groupCount, options) {\r\n                    var data = options && options.data;\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    if (options) {\r\n                        if (void 0 === options.isGroupFooterVisible) {\r\n                            options.isGroupFooterVisible = this._isGroupFooterVisible()\r\n                        }\r\n                        if (data && data.items && options.isGroupFooterVisible && (options.collectContinuationItems || !data.isContinuationOnNextPage)) {\r\n                            result.push({\r\n                                rowType: DATAGRID_GROUP_FOOTER_ROW_TYPE,\r\n                                key: options.path.slice(),\r\n                                data: data,\r\n                                groupIndex: options.path.length - 1,\r\n                                values: []\r\n                            })\r\n                        }\r\n                    }\r\n                    return result\r\n                },\r\n                _processGroupItem: function(groupItem, options) {\r\n                    var that = this;\r\n                    if (!options.summaryGroupItems) {\r\n                        options.summaryGroupItems = that.option(\"summary.groupItems\") || []\r\n                    }\r\n                    if (\"group\" === groupItem.rowType) {\r\n                        var groupColumnIndex = -1;\r\n                        var afterGroupColumnIndex = -1;\r\n                        each(options.visibleColumns, (function(visibleIndex) {\r\n                            var prevColumn = options.visibleColumns[visibleIndex - 1];\r\n                            if (groupItem.groupIndex === this.groupIndex) {\r\n                                groupColumnIndex = this.index\r\n                            }\r\n                            if (visibleIndex > 0 && \"expand\" === prevColumn.command && \"expand\" !== this.command) {\r\n                                afterGroupColumnIndex = this.index\r\n                            }\r\n                        }));\r\n                        groupItem.summaryCells = this._calculateSummaryCells(options.summaryGroupItems, getGroupAggregates(groupItem.data), options.visibleColumns, (function(summaryItem, column) {\r\n                            if (summaryItem.showInGroupFooter) {\r\n                                return -1\r\n                            }\r\n                            if (summaryItem.alignByColumn && column && !isDefined(column.groupIndex) && column.index !== afterGroupColumnIndex) {\r\n                                return column.index\r\n                            } else {\r\n                                return groupColumnIndex\r\n                            }\r\n                        }), true)\r\n                    }\r\n                    if (groupItem.rowType === DATAGRID_GROUP_FOOTER_ROW_TYPE) {\r\n                        groupItem.summaryCells = this._calculateSummaryCells(options.summaryGroupItems, getGroupAggregates(groupItem.data), options.visibleColumns, (function(summaryItem, column) {\r\n                            return summaryItem.showInGroupFooter && that._isDataColumn(column) ? column.index : -1\r\n                        }))\r\n                    }\r\n                    return groupItem\r\n                },\r\n                _calculateSummaryCells: function(summaryItems, aggregates, visibleColumns, calculateTargetColumnIndex, isGroupRow) {\r\n                    var that = this;\r\n                    var summaryCells = [];\r\n                    var summaryCellsByColumns = {};\r\n                    each(summaryItems, (function(summaryIndex, summaryItem) {\r\n                        var column = that._columnsController.columnOption(summaryItem.column);\r\n                        var showInColumn = summaryItem.showInColumn && that._columnsController.columnOption(summaryItem.showInColumn) || column;\r\n                        var columnIndex = calculateTargetColumnIndex(summaryItem, showInColumn);\r\n                        if (columnIndex >= 0) {\r\n                            if (!summaryCellsByColumns[columnIndex]) {\r\n                                summaryCellsByColumns[columnIndex] = []\r\n                            }\r\n                            var aggregate = aggregates[summaryIndex];\r\n                            if (aggregate === aggregate) {\r\n                                var valueFormat;\r\n                                if (isDefined(summaryItem.valueFormat)) {\r\n                                    valueFormat = summaryItem.valueFormat\r\n                                } else if (\"count\" !== summaryItem.summaryType) {\r\n                                    valueFormat = gridCore.getFormatByDataType(column && column.dataType)\r\n                                }\r\n                                summaryCellsByColumns[columnIndex].push(extend({}, summaryItem, {\r\n                                    value: isString(aggregate) && column && column.deserializeValue ? column.deserializeValue(aggregate) : aggregate,\r\n                                    valueFormat: valueFormat,\r\n                                    columnCaption: column && column.index !== columnIndex ? column.caption : void 0\r\n                                }))\r\n                            }\r\n                        }\r\n                    }));\r\n                    if (!isEmptyObject(summaryCellsByColumns)) {\r\n                        visibleColumns.forEach((column, visibleIndex) => {\r\n                            var prevColumn = visibleColumns[visibleIndex - 1];\r\n                            var columnIndex = isGroupRow && (\"expand\" === (null === prevColumn || void 0 === prevColumn ? void 0 : prevColumn.command) || \"expand\" === column.command) ? null === prevColumn || void 0 === prevColumn ? void 0 : prevColumn.index : column.index;\r\n                            summaryCells.push(summaryCellsByColumns[columnIndex] || [])\r\n                        })\r\n                    }\r\n                    return summaryCells\r\n                },\r\n                _getSummaryCells: function(summaryTotalItems, totalAggregates) {\r\n                    var that = this;\r\n                    var columnsController = that._columnsController;\r\n                    return that._calculateSummaryCells(summaryTotalItems, totalAggregates, columnsController.getVisibleColumns(), (function(summaryItem, column) {\r\n                        return that._isDataColumn(column) ? column.index : -1\r\n                    }))\r\n                },\r\n                _updateItemsCore: function(change) {\r\n                    var summaryCells;\r\n                    var dataSource = this._dataSource;\r\n                    var footerItems = this._footerItems;\r\n                    var oldSummaryCells = footerItems && footerItems[0] && footerItems[0].summaryCells;\r\n                    var summaryTotalItems = this.option(\"summary.totalItems\");\r\n                    this._footerItems = [];\r\n                    if (dataSource && summaryTotalItems && summaryTotalItems.length) {\r\n                        var totalAggregates = dataSource.totalAggregates();\r\n                        summaryCells = this._getSummaryCells(summaryTotalItems, totalAggregates);\r\n                        if (change && change.repaintChangesOnly && oldSummaryCells) {\r\n                            change.totalColumnIndices = summaryCells.map((function(summaryCell, index) {\r\n                                if (JSON.stringify(summaryCell) !== JSON.stringify(oldSummaryCells[index])) {\r\n                                    return index\r\n                                }\r\n                                return -1\r\n                            })).filter(index => index >= 0)\r\n                        }\r\n                        if (summaryCells.length) {\r\n                            this._footerItems.push({\r\n                                rowType: \"totalFooter\",\r\n                                summaryCells: summaryCells\r\n                            })\r\n                        }\r\n                    }\r\n                    this.callBase(change)\r\n                },\r\n                _prepareUnsavedDataSelector: function(selector) {\r\n                    if (recalculateWhileEditing(this)) {\r\n                        var editingController = this.getController(\"editing\");\r\n                        if (editingController) {\r\n                            return function(data) {\r\n                                data = editingController.getUpdatedData(data);\r\n                                return selector(data)\r\n                            }\r\n                        }\r\n                    }\r\n                    return selector\r\n                },\r\n                _prepareAggregateSelector: function(selector, aggregator) {\r\n                    selector = this._prepareUnsavedDataSelector(selector);\r\n                    if (\"avg\" === aggregator || \"sum\" === aggregator) {\r\n                        return function(data) {\r\n                            var value = selector(data);\r\n                            return isDefined(value) ? Number(value) : value\r\n                        }\r\n                    }\r\n                    return selector\r\n                },\r\n                _getAggregates: function(summaryItems, remoteOperations) {\r\n                    var that = this;\r\n                    var columnsController = that.getController(\"columns\");\r\n                    var calculateCustomSummary = that.option(\"summary.calculateCustomSummary\");\r\n                    var commonSkipEmptyValues = that.option(\"summary.skipEmptyValues\");\r\n                    return map(summaryItems || [], (function(summaryItem) {\r\n                        var column = columnsController.columnOption(summaryItem.column);\r\n                        var calculateCellValue = column && column.calculateCellValue ? column.calculateCellValue.bind(column) : compileGetter(column ? column.dataField : summaryItem.column);\r\n                        var aggregator = summaryItem.summaryType || \"count\";\r\n                        var selector = summaryItem.column;\r\n                        var skipEmptyValues = isDefined(summaryItem.skipEmptyValues) ? summaryItem.skipEmptyValues : commonSkipEmptyValues;\r\n                        if (remoteOperations) {\r\n                            return {\r\n                                selector: summaryItem.column,\r\n                                summaryType: aggregator\r\n                            }\r\n                        } else {\r\n                            selector = that._prepareAggregateSelector(calculateCellValue, aggregator);\r\n                            if (\"custom\" === aggregator) {\r\n                                if (!calculateCustomSummary) {\r\n                                    errors.log(\"E1026\");\r\n                                    calculateCustomSummary = function() {}\r\n                                }\r\n                                var options = {\r\n                                    component: that.component,\r\n                                    name: summaryItem.name\r\n                                };\r\n                                calculateCustomSummary(options);\r\n                                options.summaryProcess = \"calculate\";\r\n                                aggregator = {\r\n                                    seed: function(groupIndex) {\r\n                                        options.summaryProcess = \"start\";\r\n                                        options.totalValue = void 0;\r\n                                        options.groupIndex = groupIndex;\r\n                                        delete options.value;\r\n                                        calculateCustomSummary(options);\r\n                                        return options.totalValue\r\n                                    },\r\n                                    step: function(totalValue, value) {\r\n                                        options.summaryProcess = \"calculate\";\r\n                                        options.totalValue = totalValue;\r\n                                        options.value = value;\r\n                                        calculateCustomSummary(options);\r\n                                        return options.totalValue\r\n                                    },\r\n                                    finalize: function(totalValue) {\r\n                                        options.summaryProcess = \"finalize\";\r\n                                        options.totalValue = totalValue;\r\n                                        delete options.value;\r\n                                        calculateCustomSummary(options);\r\n                                        return options.totalValue\r\n                                    }\r\n                                }\r\n                            }\r\n                            return {\r\n                                selector: selector,\r\n                                aggregator: aggregator,\r\n                                skipEmptyValues: skipEmptyValues\r\n                            }\r\n                        }\r\n                    }))\r\n                },\r\n                _addSortInfo: function(sortByGroups, groupColumn, selector, sortOrder) {\r\n                    if (groupColumn) {\r\n                        var groupIndex = groupColumn.groupIndex;\r\n                        sortOrder = sortOrder || groupColumn.sortOrder;\r\n                        if (isDefined(groupIndex)) {\r\n                            sortByGroups[groupIndex] = sortByGroups[groupIndex] || [];\r\n                            sortByGroups[groupIndex].push({\r\n                                selector: selector,\r\n                                desc: \"desc\" === sortOrder\r\n                            })\r\n                        }\r\n                    }\r\n                },\r\n                _findSummaryItem: function(summaryItems, name) {\r\n                    var summaryItemIndex = -1;\r\n                    if (isDefined(name)) {\r\n                        each(summaryItems || [], (function(index) {\r\n                            if (this.name === name || index === name || this.summaryType === name || this.column === name || (summaryItem = this, summaryType = summaryItem.summaryType, column = summaryItem.column, summaryType && column && summaryType + \"_\" + column) === name) {\r\n                                summaryItemIndex = index;\r\n                                return false\r\n                            }\r\n                            var summaryItem, summaryType, column\r\n                        }))\r\n                    }\r\n                    return summaryItemIndex\r\n                },\r\n                _getSummarySortByGroups: function(sortByGroupSummaryInfo, groupSummaryItems) {\r\n                    var that = this;\r\n                    var columnsController = that._columnsController;\r\n                    var groupColumns = columnsController.getGroupColumns();\r\n                    var sortByGroups = [];\r\n                    if (!groupSummaryItems || !groupSummaryItems.length) {\r\n                        return\r\n                    }\r\n                    each(sortByGroupSummaryInfo || [], (function() {\r\n                        var sortOrder = this.sortOrder;\r\n                        var groupColumn = this.groupColumn;\r\n                        var summaryItemIndex = that._findSummaryItem(groupSummaryItems, this.summaryItem);\r\n                        if (summaryItemIndex < 0) {\r\n                            return\r\n                        }\r\n                        var selector = function(data) {\r\n                            return getGroupAggregates(data)[summaryItemIndex]\r\n                        };\r\n                        if (isDefined(groupColumn)) {\r\n                            groupColumn = columnsController.columnOption(groupColumn);\r\n                            that._addSortInfo(sortByGroups, groupColumn, selector, sortOrder)\r\n                        } else {\r\n                            each(groupColumns, (function(groupIndex, groupColumn) {\r\n                                that._addSortInfo(sortByGroups, groupColumn, selector, sortOrder)\r\n                            }))\r\n                        }\r\n                    }));\r\n                    return sortByGroups\r\n                },\r\n                _createDataSourceAdapterCore: function(dataSource, remoteOperations) {\r\n                    var that = this;\r\n                    var dataSourceAdapter = this.callBase(dataSource, remoteOperations);\r\n                    dataSourceAdapter.summaryGetter((function(currentRemoteOperations) {\r\n                        return that._getSummaryOptions(currentRemoteOperations || remoteOperations)\r\n                    }));\r\n                    return dataSourceAdapter\r\n                },\r\n                _getSummaryOptions: function(remoteOperations) {\r\n                    var that = this;\r\n                    var groupSummaryItems = that.option(\"summary.groupItems\");\r\n                    var totalSummaryItems = that.option(\"summary.totalItems\");\r\n                    var sortByGroupSummaryInfo = that.option(\"sortByGroupSummaryInfo\");\r\n                    var groupAggregates = that._getAggregates(groupSummaryItems, remoteOperations && remoteOperations.grouping && remoteOperations.summary);\r\n                    var totalAggregates = that._getAggregates(totalSummaryItems, remoteOperations && remoteOperations.summary);\r\n                    if (groupAggregates.length || totalAggregates.length) {\r\n                        return {\r\n                            groupAggregates: groupAggregates,\r\n                            totalAggregates: totalAggregates,\r\n                            sortByGroups: function() {\r\n                                return that._getSummarySortByGroups(sortByGroupSummaryInfo, groupSummaryItems)\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    var methods = this.callBase();\r\n                    methods.push(\"getTotalSummaryValue\");\r\n                    return methods\r\n                },\r\n                getTotalSummaryValue: function(summaryItemName) {\r\n                    var summaryItemIndex = this._findSummaryItem(this.option(\"summary.totalItems\"), summaryItemName);\r\n                    var aggregates = this._dataSource.totalAggregates();\r\n                    if (aggregates.length && summaryItemIndex > -1) {\r\n                        return aggregates[summaryItemIndex]\r\n                    }\r\n                },\r\n                optionChanged: function(args) {\r\n                    if (\"summary\" === args.name || \"sortByGroupSummaryInfo\" === args.name) {\r\n                        args.name = \"dataSource\"\r\n                    }\r\n                    this.callBase(args)\r\n                },\r\n                init: function() {\r\n                    this._footerItems = [];\r\n                    this.callBase()\r\n                },\r\n                footerItems: function() {\r\n                    return this._footerItems\r\n                }\r\n            },\r\n            editing: {\r\n                _refreshSummary: function() {\r\n                    if (recalculateWhileEditing(this) && !this.isSaving()) {\r\n                        this._dataController.refresh({\r\n                            load: true,\r\n                            changesOnly: true\r\n                        })\r\n                    }\r\n                },\r\n                _addChange: function(params) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    if (params.type) {\r\n                        this._refreshSummary()\r\n                    }\r\n                    return result\r\n                },\r\n                _removeChange: function() {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    this._refreshSummary();\r\n                    return result\r\n                },\r\n                cancelEditData: function() {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    this._refreshSummary();\r\n                    return result\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    row && $row.addClass(row.rowType === DATAGRID_GROUP_FOOTER_ROW_TYPE ? DATAGRID_GROUP_FOOTER_CLASS : \"\");\r\n                    return $row\r\n                },\r\n                _renderCells: function($row, options) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (\"group\" === options.row.rowType && options.row.summaryCells && options.row.summaryCells.length) {\r\n                        this._renderGroupSummaryCells($row, options)\r\n                    }\r\n                },\r\n                _hasAlignByColumnSummaryItems: function(columnIndex, options) {\r\n                    return !isDefined(options.columns[columnIndex].groupIndex) && options.row.summaryCells[columnIndex].length\r\n                },\r\n                _getAlignByColumnCellCount: function(groupCellColSpan, options) {\r\n                    var alignByColumnCellCount = 0;\r\n                    for (var i = 1; i < groupCellColSpan; i++) {\r\n                        var columnIndex = options.row.summaryCells.length - i;\r\n                        alignByColumnCellCount = this._hasAlignByColumnSummaryItems(columnIndex, options) ? i : alignByColumnCellCount\r\n                    }\r\n                    return alignByColumnCellCount\r\n                },\r\n                _renderGroupSummaryCells: function($row, options) {\r\n                    var $groupCell = $row.children().last();\r\n                    var groupCellColSpan = Number($groupCell.attr(\"colSpan\")) || 1;\r\n                    var alignByColumnCellCount = this._getAlignByColumnCellCount(groupCellColSpan, options);\r\n                    this._renderGroupSummaryCellsCore($groupCell, options, groupCellColSpan, alignByColumnCellCount)\r\n                },\r\n                _renderGroupSummaryCellsCore: function($groupCell, options, groupCellColSpan, alignByColumnCellCount) {\r\n                    if (alignByColumnCellCount > 0) {\r\n                        $groupCell.attr(\"colSpan\", groupCellColSpan - alignByColumnCellCount);\r\n                        for (var i = 0; i < alignByColumnCellCount; i++) {\r\n                            var columnIndex = options.columns.length - alignByColumnCellCount + i;\r\n                            this._renderCell($groupCell.parent(), extend({\r\n                                column: options.columns[columnIndex],\r\n                                columnIndex: this._getSummaryCellIndex(columnIndex, options.columns)\r\n                            }, options))\r\n                        }\r\n                    }\r\n                },\r\n                _getSummaryCellIndex: function(columnIndex) {\r\n                    return columnIndex\r\n                },\r\n                _getCellTemplate: function(options) {\r\n                    if (!options.column.command && !isDefined(options.column.groupIndex) && options.summaryItems && options.summaryItems.length) {\r\n                        return renderSummaryCell\r\n                    } else {\r\n                        return this.callBase(options)\r\n                    }\r\n                },\r\n                _getCellOptions: function(options) {\r\n                    var parameters = this.callBase(options);\r\n                    if (options.row.summaryCells) {\r\n                        return extend(parameters, getSummaryCellOptions(this, options))\r\n                    } else {\r\n                        return parameters\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_fixing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    name as wheelEventName\r\n} from \"../../events/core/wheel\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    move\r\n} from \"../../animation/translator\";\r\nimport Scrollable from \"../scroll_view/ui.scrollable\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar FIRST_CELL_CLASS = \"dx-first-cell\";\r\nvar LAST_CELL_CLASS = \"dx-last-cell\";\r\nvar HOVER_STATE_CLASS = \"dx-state-hover\";\r\nvar FIXED_COL_CLASS = \"dx-col-fixed\";\r\nvar FIXED_COLUMNS_CLASS = \"dx-fixed-columns\";\r\nvar POINTER_EVENTS_NONE_CLASS = \"dx-pointer-events-none\";\r\nvar COMMAND_TRANSPARENT = \"transparent\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar getTransparentColumnIndex = function(fixedColumns) {\r\n    var transparentColumnIndex = -1;\r\n    each(fixedColumns, (function(index, column) {\r\n        if (column.command === COMMAND_TRANSPARENT) {\r\n            transparentColumnIndex = index;\r\n            return false\r\n        }\r\n    }));\r\n    return transparentColumnIndex\r\n};\r\nvar normalizeColumnWidths = function(fixedColumns, widths, fixedWidths) {\r\n    var fixedColumnIndex = 0;\r\n    if (fixedColumns && widths && fixedWidths) {\r\n        for (var i = 0; i < fixedColumns.length; i++) {\r\n            if (fixedColumns[i].command === COMMAND_TRANSPARENT) {\r\n                fixedColumnIndex += fixedColumns[i].colspan\r\n            } else {\r\n                if (widths[fixedColumnIndex] < fixedWidths[i]) {\r\n                    widths[fixedColumnIndex] = fixedWidths[i]\r\n                }\r\n                fixedColumnIndex++\r\n            }\r\n        }\r\n    }\r\n    return widths\r\n};\r\nvar baseFixedColumns = {\r\n    init: function() {\r\n        this.callBase();\r\n        this._isFixedTableRendering = false;\r\n        this._isFixedColumns = false\r\n    },\r\n    _createCol: function(column) {\r\n        return this.callBase(column).toggleClass(FIXED_COL_CLASS, !!(this._isFixedTableRendering && (column.fixed || column.command && column.command !== COMMAND_TRANSPARENT)))\r\n    },\r\n    _correctColumnIndicesForFixedColumns: function(fixedColumns, change) {\r\n        var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n        var transparentColspan = fixedColumns[transparentColumnIndex].colspan;\r\n        var columnIndices = change && change.columnIndices;\r\n        if (columnIndices) {\r\n            change.columnIndices = columnIndices.map((function(columnIndices) {\r\n                if (columnIndices) {\r\n                    return columnIndices.map((function(columnIndex) {\r\n                        if (columnIndex < transparentColumnIndex) {\r\n                            return columnIndex\r\n                        } else if (columnIndex >= transparentColumnIndex + transparentColspan) {\r\n                            return columnIndex - transparentColspan + 1\r\n                        }\r\n                        return -1\r\n                    })).filter((function(columnIndex) {\r\n                        return columnIndex >= 0\r\n                    }))\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    _partialUpdateFixedTable(fixedColumns) {\r\n        var fixedTableElement = this._fixedTableElement;\r\n        var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n        var transparentColumn = fixedColumns[transparentColumnIndex];\r\n        var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n        var $rows = this._getRowElementsCore(fixedTableElement);\r\n        var $colgroup = fixedTableElement.children(\"colgroup\");\r\n        $colgroup.replaceWith(this._createColGroup(fixedColumns));\r\n        for (var i = 0; i < $rows.length; i++) {\r\n            var cellElements = $rows[i].childNodes;\r\n            var colIndex = columnIndexOffset + 1;\r\n            for (var j = 0; j < cellElements.length; j++) {\r\n                cellElements[j].setAttribute(\"aria-colindex\", colIndex);\r\n                if (j === transparentColumnIndex) {\r\n                    cellElements[j].setAttribute(\"colspan\", transparentColumn.colspan);\r\n                    colIndex += transparentColumn.colspan\r\n                } else {\r\n                    colIndex++\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _renderTable: function(options) {\r\n        var $fixedTable;\r\n        var fixedColumns = this.getFixedColumns();\r\n        this._isFixedColumns = !!fixedColumns.length;\r\n        var $table = this.callBase(options);\r\n        if (this._isFixedColumns) {\r\n            var change = null === options || void 0 === options ? void 0 : options.change;\r\n            this._isFixedTableRendering = true;\r\n            if (null !== change && void 0 !== change && change.virtualColumnsScrolling && true !== this.option(\"scrolling.legacyMode\")) {\r\n                this._partialUpdateFixedTable(fixedColumns)\r\n            } else {\r\n                var columnIndices = null === change || void 0 === change ? void 0 : change.columnIndices;\r\n                this._correctColumnIndicesForFixedColumns(fixedColumns, change);\r\n                $fixedTable = this._createTable(fixedColumns);\r\n                this._renderRows($fixedTable, extend({}, options, {\r\n                    columns: fixedColumns\r\n                }));\r\n                this._updateContent($fixedTable, change);\r\n                if (columnIndices) {\r\n                    change.columnIndices = columnIndices\r\n                }\r\n            }\r\n            this._isFixedTableRendering = false\r\n        } else {\r\n            this._fixedTableElement && this._fixedTableElement.parent().remove();\r\n            this._fixedTableElement = null\r\n        }\r\n        return $table\r\n    },\r\n    _renderRow: function($table, options) {\r\n        var fixedCorrection;\r\n        var cells = options.row.cells;\r\n        this.callBase.apply(this, arguments);\r\n        if (this._isFixedTableRendering && cells && cells.length) {\r\n            fixedCorrection = 0;\r\n            var fixedCells = options.row.cells || [];\r\n            cells = cells.slice();\r\n            options.row.cells = cells;\r\n            for (var i = 0; i < fixedCells.length; i++) {\r\n                if (fixedCells[i].column && fixedCells[i].column.command === COMMAND_TRANSPARENT) {\r\n                    fixedCorrection = (fixedCells[i].column.colspan || 1) - 1;\r\n                    continue\r\n                }\r\n                cells[i + fixedCorrection] = fixedCells[i]\r\n            }\r\n        }\r\n    },\r\n    _createCell: function(options) {\r\n        var that = this;\r\n        var column = options.column;\r\n        var columnCommand = column && column.command;\r\n        var rowType = options.rowType;\r\n        var $cell = that.callBase.apply(that, arguments);\r\n        var fixedColumns;\r\n        var prevFixedColumn;\r\n        var transparentColumnIndex;\r\n        if (that._isFixedTableRendering || \"filter\" === rowType) {\r\n            fixedColumns = that.getFixedColumns();\r\n            transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n            prevFixedColumn = fixedColumns[transparentColumnIndex - 1]\r\n        }\r\n        if (that._isFixedTableRendering) {\r\n            if (columnCommand === COMMAND_TRANSPARENT) {\r\n                $cell.addClass(POINTER_EVENTS_NONE_CLASS).toggleClass(FIRST_CELL_CLASS, 0 === transparentColumnIndex || prevFixedColumn && \"expand\" === prevFixedColumn.command).toggleClass(LAST_CELL_CLASS, fixedColumns.length && transparentColumnIndex === fixedColumns.length - 1);\r\n                if (\"freeSpace\" !== rowType) {\r\n                    gridCoreUtils.setEmptyText($cell)\r\n                }\r\n            }\r\n        } else if (\"filter\" === rowType) {\r\n            $cell.toggleClass(FIRST_CELL_CLASS, options.columnIndex === transparentColumnIndex)\r\n        }\r\n        var isRowAltStyle = that.option(\"rowAlternationEnabled\") && options.isAltRow;\r\n        if (browser.mozilla && options.column.fixed && \"group\" !== options.rowType && !isRowAltStyle) {\r\n            $cell.addClass(FIXED_COL_CLASS)\r\n        }\r\n        return $cell\r\n    },\r\n    _wrapTableInScrollContainer: function() {\r\n        var $scrollContainer = this.callBase.apply(this, arguments);\r\n        if (this._isFixedTableRendering) {\r\n            $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_FIXED_CLASS))\r\n        }\r\n        return $scrollContainer\r\n    },\r\n    _renderCellContent: function($cell, options) {\r\n        var isEmptyCell;\r\n        var column = options.column;\r\n        var isFixedTableRendering = this._isFixedTableRendering;\r\n        var isGroupCell = \"group\" === options.rowType && isDefined(column.groupIndex);\r\n        if (isFixedTableRendering && isGroupCell && !column.command && !column.groupCellTemplate) {\r\n            $cell.css(\"pointerEvents\", \"none\")\r\n        }\r\n        if (!isFixedTableRendering && this._isFixedColumns) {\r\n            isEmptyCell = column.fixed || column.command && false !== column.fixed;\r\n            if (isGroupCell) {\r\n                isEmptyCell = false;\r\n                if (options.row.summaryCells && options.row.summaryCells.length) {\r\n                    var columns = this._columnsController.getVisibleColumns();\r\n                    var alignByFixedColumnCellCount = this._getAlignByColumnCellCount ? this._getAlignByColumnCellCount(column.colspan, {\r\n                        columns: columns,\r\n                        row: options.row,\r\n                        isFixed: true\r\n                    }) : 0;\r\n                    if (alignByFixedColumnCellCount > 0) {\r\n                        var transparentColumnIndex = getTransparentColumnIndex(this._columnsController.getFixedColumns());\r\n                        isEmptyCell = columns.length - alignByFixedColumnCellCount < transparentColumnIndex\r\n                    }\r\n                }\r\n            }\r\n            if (isEmptyCell) {\r\n                if (column.command && \"buttons\" !== column.type || \"group\" === options.rowType) {\r\n                    $cell.html(\"&nbsp;\").addClass(column.cssClass);\r\n                    return\r\n                } else {\r\n                    $cell.addClass(\"dx-hidden-cell\")\r\n                }\r\n            }\r\n        }\r\n        if (column.command !== COMMAND_TRANSPARENT) {\r\n            this.callBase($cell, options)\r\n        }\r\n    },\r\n    _getCellElementsCore: function(rowIndex) {\r\n        var cellElements = this.callBase.apply(this, arguments);\r\n        var isGroupRow = cellElements.parent().hasClass(GROUP_ROW_CLASS);\r\n        var headerRowIndex = \"columnHeadersView\" === this.name ? rowIndex : void 0;\r\n        if (this._fixedTableElement && cellElements) {\r\n            var fixedColumns = this.getFixedColumns(headerRowIndex);\r\n            var fixedCellElements = this._getRowElements(this._fixedTableElement).eq(rowIndex).children(\"td\");\r\n            each(fixedCellElements, (columnIndex, cell) => {\r\n                if (isGroupRow) {\r\n                    if (cellElements[columnIndex] && \"hidden\" !== cell.style.visibility) {\r\n                        cellElements[columnIndex] = cell\r\n                    }\r\n                } else {\r\n                    var fixedColumn = fixedColumns[columnIndex];\r\n                    if (fixedColumn) {\r\n                        if (fixedColumn.command === COMMAND_TRANSPARENT) {\r\n                            if (fixedCellElements.eq(columnIndex).hasClass(MASTER_DETAIL_CELL_CLASS)) {\r\n                                cellElements[columnIndex] = cell || cellElements[columnIndex]\r\n                            }\r\n                        } else {\r\n                            var fixedColumnIndex = this._columnsController.getVisibleIndexByColumn(fixedColumn, headerRowIndex);\r\n                            cellElements[fixedColumnIndex] = cell || cellElements[fixedColumnIndex]\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        return cellElements\r\n    },\r\n    getColumnWidths: function() {\r\n        var fixedWidths;\r\n        var result = this.callBase();\r\n        var fixedColumns = this.getFixedColumns();\r\n        if (this._fixedTableElement && result.length) {\r\n            fixedWidths = this.callBase(this._fixedTableElement)\r\n        }\r\n        return normalizeColumnWidths(fixedColumns, result, fixedWidths)\r\n    },\r\n    getTableElement: function() {\r\n        var tableElement = this._isFixedTableRendering ? this._fixedTableElement : this.callBase();\r\n        return tableElement\r\n    },\r\n    setTableElement: function(tableElement) {\r\n        if (this._isFixedTableRendering) {\r\n            this._fixedTableElement = tableElement.addClass(POINTER_EVENTS_NONE_CLASS)\r\n        } else {\r\n            this.callBase(tableElement)\r\n        }\r\n    },\r\n    getColumns: function(rowIndex, $tableElement) {\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if (this._isFixedTableRendering || $tableElement && $tableElement.closest(\"table\").parent(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).length) {\r\n            return this.getFixedColumns(rowIndex)\r\n        }\r\n        return this.callBase(rowIndex, $tableElement)\r\n    },\r\n    getRowIndex: function($row) {\r\n        var $fixedTable = this._fixedTableElement;\r\n        if ($fixedTable && $fixedTable.find($row).length) {\r\n            return this._getRowElements($fixedTable).index($row)\r\n        }\r\n        return this.callBase($row)\r\n    },\r\n    getTableElements: function() {\r\n        var result = this.callBase.apply(this, arguments);\r\n        if (this._fixedTableElement) {\r\n            result = $([result.get(0), this._fixedTableElement.get(0)])\r\n        }\r\n        return result\r\n    },\r\n    getFixedColumns: function(rowIndex) {\r\n        return this._columnsController.getFixedColumns(rowIndex)\r\n    },\r\n    getFixedColumnsOffset: function() {\r\n        var offset = {\r\n            left: 0,\r\n            right: 0\r\n        };\r\n        var $transparentColumn;\r\n        if (this._fixedTableElement) {\r\n            $transparentColumn = this.getTransparentColumnElement();\r\n            var positionTransparentColumn = $transparentColumn.position();\r\n            offset = {\r\n                left: positionTransparentColumn.left,\r\n                right: getOuterWidth(this.element(), true) - (getOuterWidth($transparentColumn, true) + positionTransparentColumn.left)\r\n            }\r\n        }\r\n        return offset\r\n    },\r\n    getTransparentColumnElement: function() {\r\n        return this._fixedTableElement && this._fixedTableElement.find(\".\" + POINTER_EVENTS_NONE_CLASS).first()\r\n    },\r\n    getFixedTableElement: function() {\r\n        return this._fixedTableElement\r\n    },\r\n    isFixedColumns: function() {\r\n        return this._isFixedColumns\r\n    },\r\n    _resizeCore: function() {\r\n        this.callBase();\r\n        this.synchronizeRows()\r\n    },\r\n    setColumnWidths: function(options) {\r\n        var columns;\r\n        var visibleColumns = this._columnsController.getVisibleColumns();\r\n        var widths = options.widths;\r\n        var isWidthsSynchronized = widths && widths.length && isDefined(visibleColumns[0].visibleWidth);\r\n        var optionNames = options.optionNames;\r\n        var isColumnWidthChanged = optionNames && optionNames.width;\r\n        var useVisibleColumns = false;\r\n        this.callBase.apply(this, arguments);\r\n        if (this._fixedTableElement) {\r\n            var hasAutoWidth = widths && widths.some((function(width) {\r\n                return \"auto\" === width\r\n            }));\r\n            useVisibleColumns = hasAutoWidth && (!isWidthsSynchronized || !this.isScrollbarVisible(true));\r\n            if (useVisibleColumns) {\r\n                columns = visibleColumns\r\n            }\r\n            this.callBase(extend({}, options, {\r\n                $tableElement: this._fixedTableElement,\r\n                columns: columns,\r\n                fixed: true\r\n            }))\r\n        }\r\n        if (isWidthsSynchronized || isColumnWidthChanged && this.option(\"wordWrapEnabled\")) {\r\n            this.synchronizeRows()\r\n        }\r\n    },\r\n    _createColGroup: function(columns) {\r\n        if (this._isFixedTableRendering && !this.option(\"columnAutoWidth\")) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var useVisibleColumns = visibleColumns.filter((function(column) {\r\n                return !column.width\r\n            })).length;\r\n            if (useVisibleColumns) {\r\n                columns = visibleColumns\r\n            }\r\n        }\r\n        return this.callBase(columns)\r\n    },\r\n    _getClientHeight: function(element) {\r\n        var boundingClientRectElement = element.getBoundingClientRect && getBoundingRect(element);\r\n        return boundingClientRectElement && boundingClientRectElement.height ? boundingClientRectElement.height : element.clientHeight\r\n    },\r\n    synchronizeRows: function() {\r\n        var rowHeights = [];\r\n        var fixedRowHeights = [];\r\n        var rowIndex;\r\n        var $rowElements;\r\n        var $fixedRowElements;\r\n        var $contentElement;\r\n        if (this._isFixedColumns && this._tableElement && this._fixedTableElement) {\r\n            var heightTable = this._getClientHeight(this._tableElement.get(0));\r\n            var heightFixedTable = this._getClientHeight(this._fixedTableElement.get(0));\r\n            $rowElements = this._getRowElements(this._tableElement);\r\n            $fixedRowElements = this._getRowElements(this._fixedTableElement);\r\n            $contentElement = this._findContentElement();\r\n            if (heightTable !== heightFixedTable) {\r\n                $contentElement && $contentElement.css(\"height\", heightTable);\r\n                $rowElements.css(\"height\", \"\");\r\n                $fixedRowElements.css(\"height\", \"\");\r\n                for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\r\n                    rowHeights.push(this._getClientHeight($rowElements.get(rowIndex)));\r\n                    fixedRowHeights.push(this._getClientHeight($fixedRowElements.get(rowIndex)))\r\n                }\r\n                for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\r\n                    var rowHeight = rowHeights[rowIndex];\r\n                    var fixedRowHeight = fixedRowHeights[rowIndex];\r\n                    if (rowHeight > fixedRowHeight) {\r\n                        $fixedRowElements.eq(rowIndex).css(\"height\", rowHeight)\r\n                    } else if (rowHeight < fixedRowHeight) {\r\n                        $rowElements.eq(rowIndex).css(\"height\", fixedRowHeight)\r\n                    }\r\n                }\r\n                $contentElement && $contentElement.css(\"height\", \"\")\r\n            }\r\n        }\r\n    },\r\n    setScrollerSpacing: function(width) {\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        this.callBase(width);\r\n        this.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).css({\r\n            paddingLeft: rtlEnabled ? width : \"\",\r\n            paddingRight: !rtlEnabled ? width : \"\"\r\n        })\r\n    }\r\n};\r\nvar ColumnHeadersViewFixedColumnsExtender = extend({}, baseFixedColumns, {\r\n    _getRowVisibleColumns: function(rowIndex) {\r\n        if (this._isFixedTableRendering) {\r\n            return this.getFixedColumns(rowIndex)\r\n        }\r\n        return this.callBase(rowIndex)\r\n    },\r\n    getContextMenuItems: function(options) {\r\n        var column = options.column;\r\n        var columnFixingOptions = this.option(\"columnFixing\");\r\n        var items = this.callBase(options);\r\n        if (options.row && \"header\" === options.row.rowType) {\r\n            if (true === columnFixingOptions.enabled && column && column.allowFixing) {\r\n                var onItemClick = params => {\r\n                    switch (params.itemData.value) {\r\n                        case \"none\":\r\n                            this._columnsController.columnOption(column.index, \"fixed\", false);\r\n                            break;\r\n                        case \"left\":\r\n                            this._columnsController.columnOption(column.index, {\r\n                                fixed: true,\r\n                                fixedPosition: \"left\"\r\n                            });\r\n                            break;\r\n                        case \"right\":\r\n                            this._columnsController.columnOption(column.index, {\r\n                                fixed: true,\r\n                                fixedPosition: \"right\"\r\n                            })\r\n                    }\r\n                };\r\n                items = items || [];\r\n                items.push({\r\n                    text: columnFixingOptions.texts.fix,\r\n                    beginGroup: true,\r\n                    items: [{\r\n                        text: columnFixingOptions.texts.leftPosition,\r\n                        value: \"left\",\r\n                        disabled: column.fixed && (!column.fixedPosition || \"left\" === column.fixedPosition),\r\n                        onItemClick: onItemClick\r\n                    }, {\r\n                        text: columnFixingOptions.texts.rightPosition,\r\n                        value: \"right\",\r\n                        disabled: column.fixed && \"right\" === column.fixedPosition,\r\n                        onItemClick: onItemClick\r\n                    }]\r\n                }, {\r\n                    text: columnFixingOptions.texts.unfix,\r\n                    value: \"none\",\r\n                    disabled: !column.fixed,\r\n                    onItemClick: onItemClick\r\n                })\r\n            }\r\n        }\r\n        return items\r\n    },\r\n    getFixedColumnElements: function(rowIndex) {\r\n        if (isDefined(rowIndex)) {\r\n            return this._fixedTableElement && this._getRowElements(this._fixedTableElement).eq(rowIndex).children()\r\n        }\r\n        var columnElements = this.getColumnElements();\r\n        var $transparentColumnElement = this.getTransparentColumnElement();\r\n        if (columnElements && $transparentColumnElement && $transparentColumnElement.length) {\r\n            var transparentColumnIndex = getTransparentColumnIndex(this.getFixedColumns());\r\n            columnElements.splice(transparentColumnIndex, $transparentColumnElement.get(0).colSpan, $transparentColumnElement.get(0))\r\n        }\r\n        return columnElements\r\n    },\r\n    getColumnWidths: function() {\r\n        var fixedWidths;\r\n        var result = this.callBase();\r\n        var $fixedColumnElements = this.getFixedColumnElements();\r\n        var fixedColumns = this.getFixedColumns();\r\n        if (this._fixedTableElement) {\r\n            if ($fixedColumnElements && $fixedColumnElements.length) {\r\n                fixedWidths = this._getWidths($fixedColumnElements)\r\n            } else {\r\n                fixedWidths = this.callBase(this._fixedTableElement)\r\n            }\r\n        }\r\n        return normalizeColumnWidths(fixedColumns, result, fixedWidths)\r\n    }\r\n});\r\nvar RowsViewFixedColumnsExtender = extend({}, baseFixedColumns, {\r\n    _detachHoverEvents: function() {\r\n        this._fixedTableElement && eventsEngine.off(this._fixedTableElement, \"mouseover mouseout\", \".dx-data-row\");\r\n        this._tableElement && eventsEngine.off(this._tableElement, \"mouseover mouseout\", \".dx-data-row\")\r\n    },\r\n    _attachHoverEvents: function() {\r\n        var that = this;\r\n        var attachHoverEvent = function($table) {\r\n            eventsEngine.on($table, \"mouseover mouseout\", \".dx-data-row\", that.createAction((function(args) {\r\n                var event = args.event;\r\n                var rowIndex = that.getRowIndex($(event.target).closest(\".dx-row\"));\r\n                var isHover = \"mouseover\" === event.type;\r\n                if (rowIndex >= 0) {\r\n                    that._tableElement && that._getRowElements(that._tableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover);\r\n                    that._fixedTableElement && that._getRowElements(that._fixedTableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover)\r\n                }\r\n            })))\r\n        };\r\n        if (that._fixedTableElement && that._tableElement) {\r\n            attachHoverEvent(that._fixedTableElement);\r\n            attachHoverEvent(that._tableElement)\r\n        }\r\n    },\r\n    _findContentElement: function() {\r\n        var that = this;\r\n        var $content;\r\n        var scrollTop;\r\n        var contentClass = that.addWidgetPrefix(CONTENT_CLASS);\r\n        var element = that.element();\r\n        var scrollDelay = browser.mozilla ? 60 : 0;\r\n        if (element && that._isFixedTableRendering) {\r\n            $content = element.children(\".\" + contentClass);\r\n            var scrollable = that.getScrollable();\r\n            if (!$content.length && scrollable) {\r\n                $content = $(\"<div>\").addClass(contentClass);\r\n                eventsEngine.on($content, \"scroll\", (function(e) {\r\n                    clearTimeout(that._fixedScrollTimeout);\r\n                    that._fixedScrollTimeout = setTimeout((function() {\r\n                        scrollTop = $(e.target).scrollTop();\r\n                        scrollable.scrollTo({\r\n                            y: scrollTop\r\n                        })\r\n                    }), scrollDelay)\r\n                }));\r\n                eventsEngine.on($content, wheelEventName, (function(e) {\r\n                    var $nearestScrollable = $(e.target).closest(\".dx-scrollable\");\r\n                    var shouldScroll = false;\r\n                    if (scrollable && scrollable.$element().is($nearestScrollable)) {\r\n                        shouldScroll = true\r\n                    } else {\r\n                        var nearestScrollableInstance = $nearestScrollable.length && Scrollable.getInstance($nearestScrollable.get(0));\r\n                        var nearestScrollableHasVerticalScrollbar = nearestScrollableInstance && nearestScrollableInstance.scrollHeight() - nearestScrollableInstance.clientHeight() > 0;\r\n                        shouldScroll = nearestScrollableInstance && !nearestScrollableHasVerticalScrollbar\r\n                    }\r\n                    if (shouldScroll) {\r\n                        scrollTop = scrollable.scrollTop();\r\n                        scrollable.scrollTo({\r\n                            y: scrollTop - e.delta\r\n                        });\r\n                        if (scrollable.scrollTop() > 0 && scrollable.scrollTop() + scrollable.clientHeight() < scrollable.scrollHeight() + that.getScrollbarWidth()) {\r\n                            return false\r\n                        }\r\n                    }\r\n                }));\r\n                $content.appendTo(element)\r\n            }\r\n            return $content\r\n        }\r\n        return that.callBase()\r\n    },\r\n    _updateScrollable: function() {\r\n        this.callBase();\r\n        var scrollable = this.getScrollable();\r\n        if (null !== scrollable && void 0 !== scrollable && scrollable._disposed) {\r\n            return\r\n        }\r\n        var scrollTop = scrollable && scrollable.scrollOffset().top;\r\n        this._updateFixedTablePosition(scrollTop)\r\n    },\r\n    _renderContent: function(contentElement, tableElement) {\r\n        if (this._isFixedTableRendering) {\r\n            return contentElement.empty().addClass(this.addWidgetPrefix(CONTENT_CLASS) + \" \" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).append(tableElement)\r\n        }\r\n        return this.callBase(contentElement, tableElement)\r\n    },\r\n    _getGroupCellOptions: function(options) {\r\n        if (this._isFixedTableRendering) {\r\n            return this.callBase(extend({}, options, {\r\n                columns: this._columnsController.getVisibleColumns()\r\n            }))\r\n        }\r\n        return this.callBase(options)\r\n    },\r\n    _renderGroupedCells: function($row, options) {\r\n        return this.callBase($row, extend({}, options, {\r\n            columns: this._columnsController.getVisibleColumns()\r\n        }))\r\n    },\r\n    _renderGroupSummaryCells: function($row, options) {\r\n        if (this._isFixedTableRendering) {\r\n            this.callBase($row, extend({}, options, {\r\n                columns: this._columnsController.getVisibleColumns()\r\n            }))\r\n        } else {\r\n            this.callBase($row, options)\r\n        }\r\n    },\r\n    _hasAlignByColumnSummaryItems: function(columnIndex, options) {\r\n        var result = this.callBase.apply(this, arguments);\r\n        var column = options.columns[columnIndex];\r\n        if (options.isFixed) {\r\n            return column.fixed && (result || \"right\" === column.fixedPosition)\r\n        }\r\n        return result && (!this._isFixedColumns || !column.fixed)\r\n    },\r\n    _renderGroupSummaryCellsCore: function($groupCell, options, groupCellColSpan, alignByColumnCellCount) {\r\n        var alignByFixedColumnCellCount;\r\n        if (this._isFixedTableRendering) {\r\n            options.isFixed = true;\r\n            alignByFixedColumnCellCount = this._getAlignByColumnCellCount(groupCellColSpan, options);\r\n            options.isFixed = false;\r\n            var startColumnIndex = options.columns.length - alignByFixedColumnCellCount;\r\n            options = extend({}, options, {\r\n                columns: this.getFixedColumns()\r\n            });\r\n            var transparentColumnIndex = getTransparentColumnIndex(options.columns);\r\n            if (startColumnIndex < transparentColumnIndex) {\r\n                alignByFixedColumnCellCount -= options.columns[transparentColumnIndex].colspan - 1 || 0;\r\n                groupCellColSpan -= options.columns[transparentColumnIndex].colspan - 1 || 0\r\n            } else if (alignByColumnCellCount > 0) {\r\n                $groupCell.css(\"visibility\", \"hidden\")\r\n            }\r\n            alignByColumnCellCount = alignByFixedColumnCellCount\r\n        }\r\n        this.callBase($groupCell, options, groupCellColSpan, alignByColumnCellCount)\r\n    },\r\n    _getSummaryCellIndex: function(columnIndex, columns) {\r\n        if (this._isFixedTableRendering) {\r\n            var transparentColumnIndex = getTransparentColumnIndex(columns);\r\n            if (columnIndex > transparentColumnIndex) {\r\n                columnIndex += columns[transparentColumnIndex].colspan - 1\r\n            }\r\n            return columnIndex\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _renderCore: function(change) {\r\n        this._detachHoverEvents();\r\n        this.callBase(change);\r\n        var isFixedColumns = this._isFixedColumns;\r\n        this.element().toggleClass(FIXED_COLUMNS_CLASS, isFixedColumns);\r\n        if (this.option(\"hoverStateEnabled\") && isFixedColumns) {\r\n            this._attachHoverEvents()\r\n        }\r\n    },\r\n    setRowsOpacity: function(columnIndex, value) {\r\n        this.callBase(columnIndex, value);\r\n        var $rows = this._getRowElements(this._fixedTableElement);\r\n        this._setRowsOpacityCore($rows, this.getFixedColumns(), columnIndex, value)\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        if (\"hoverStateEnabled\" === args.name && this._isFixedColumns) {\r\n            args.value ? this._attachHoverEvents() : this._detachHoverEvents()\r\n        }\r\n    },\r\n    getCellIndex: function($cell) {\r\n        var $fixedTable = this._fixedTableElement;\r\n        var cellIndex = 0;\r\n        if ($fixedTable && $cell.is(\"td\") && $cell.closest($fixedTable).length) {\r\n            var columns = this.getFixedColumns();\r\n            each(columns, (function(index, column) {\r\n                if (index === $cell[0].cellIndex) {\r\n                    return false\r\n                }\r\n                if (column.colspan) {\r\n                    cellIndex += column.colspan;\r\n                    return\r\n                }\r\n                cellIndex++\r\n            }));\r\n            return cellIndex\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _updateFixedTablePosition: function(scrollTop, needFocus) {\r\n        if (this._fixedTableElement && this._tableElement) {\r\n            var $focusedElement;\r\n            var editorFactory = this.getController(\"editorFactory\");\r\n            this._fixedTableElement.parent().scrollTop(scrollTop);\r\n            if (needFocus && editorFactory) {\r\n                $focusedElement = editorFactory.focus();\r\n                $focusedElement && editorFactory.focus($focusedElement)\r\n            }\r\n        }\r\n    },\r\n    setScrollerSpacing: function(vWidth, hWidth) {\r\n        var styles = {\r\n            marginBottom: 0\r\n        };\r\n        var $fixedContent = this.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\r\n        if ($fixedContent.length && this._fixedTableElement) {\r\n            $fixedContent.css(styles);\r\n            this._fixedTableElement.css(styles);\r\n            styles[this.option(\"rtlEnabled\") ? \"marginLeft\" : \"marginRight\"] = vWidth;\r\n            styles.marginBottom = hWidth;\r\n            var useNativeScrolling = this._scrollable && this._scrollable.option(\"useNative\");\r\n            (useNativeScrolling ? $fixedContent : this._fixedTableElement).css(styles)\r\n        }\r\n    },\r\n    _getElasticScrollTop: function(e) {\r\n        var elasticScrollTop = 0;\r\n        var scrollbarWidth = this.getScrollbarWidth(true);\r\n        if (e.scrollOffset.top < 0) {\r\n            elasticScrollTop = -e.scrollOffset.top\r\n        } else if (e.reachedBottom) {\r\n            var scrollableContent = this._findContentElement();\r\n            var $scrollableContainer = $(e.component.container());\r\n            var maxScrollTop = Math.max(getHeight(scrollableContent) + scrollbarWidth - getHeight($scrollableContainer), 0);\r\n            elasticScrollTop = maxScrollTop - e.scrollOffset.top\r\n        }\r\n        return elasticScrollTop\r\n    },\r\n    _applyElasticScrolling: function(e) {\r\n        if (this._fixedTableElement) {\r\n            var elasticScrollTop = this._getElasticScrollTop(e);\r\n            if (0 !== Math.ceil(elasticScrollTop)) {\r\n                move(this._fixedTableElement, {\r\n                    top: elasticScrollTop\r\n                })\r\n            } else {\r\n                this._fixedTableElement.css(\"transform\", \"\")\r\n            }\r\n        }\r\n    },\r\n    _handleScroll: function(e) {\r\n        this._updateFixedTablePosition(e.scrollOffset.top, true);\r\n        this._applyElasticScrolling(e);\r\n        this.callBase(e)\r\n    },\r\n    _updateContentPosition: function(isRender) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!isRender) {\r\n            this._updateFixedTablePosition(this._scrollTop)\r\n        }\r\n    },\r\n    _afterRowPrepared: function(e) {\r\n        if (this._isFixedTableRendering) {\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _scrollToElement: function($element) {\r\n        this.callBase($element, this.getFixedColumnsOffset())\r\n    },\r\n    dispose: function() {\r\n        this.callBase.apply(this, arguments);\r\n        clearTimeout(this._fixedScrollTimeout)\r\n    }\r\n});\r\nvar FooterViewFixedColumnsExtender = baseFixedColumns;\r\nexport var columnFixingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            columnFixing: {\r\n                enabled: false,\r\n                texts: {\r\n                    fix: messageLocalization.format(\"dxDataGrid-columnFixingFix\"),\r\n                    unfix: messageLocalization.format(\"dxDataGrid-columnFixingUnfix\"),\r\n                    leftPosition: messageLocalization.format(\"dxDataGrid-columnFixingLeftPosition\"),\r\n                    rightPosition: messageLocalization.format(\"dxDataGrid-columnFixingRightPosition\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFixedColumnsExtender,\r\n            rowsView: RowsViewFixedColumnsExtender,\r\n            footerView: FooterViewFixedColumnsExtender\r\n        },\r\n        controllers: function() {\r\n            var normalizeColumnIndicesByPoints = function(columns, fixedColumns, pointsByColumns) {\r\n                var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n                var correctIndex = columns.length - fixedColumns.length;\r\n                each(pointsByColumns, (function(_, point) {\r\n                    if (point.index > transparentColumnIndex) {\r\n                        point.columnIndex += correctIndex;\r\n                        point.index += correctIndex\r\n                    }\r\n                }));\r\n                return pointsByColumns\r\n            };\r\n            return {\r\n                draggingHeader: {\r\n                    _generatePointsByColumns: function(options) {\r\n                        var visibleColumns = options.columns;\r\n                        var targetDraggingPanel = options.targetDraggingPanel;\r\n                        if (targetDraggingPanel && \"headers\" === targetDraggingPanel.getName() && targetDraggingPanel.isFixedColumns()) {\r\n                            if (options.sourceColumn.fixed) {\r\n                                if (!options.rowIndex) {\r\n                                    options.columnElements = targetDraggingPanel.getFixedColumnElements(0)\r\n                                }\r\n                                options.columns = targetDraggingPanel.getFixedColumns(options.rowIndex);\r\n                                var pointsByColumns = this.callBase(options);\r\n                                normalizeColumnIndicesByPoints(visibleColumns, options.columns, pointsByColumns);\r\n                                return pointsByColumns\r\n                            }\r\n                        }\r\n                        return this.callBase(options)\r\n                    },\r\n                    _pointCreated: function(point, columns, location, sourceColumn) {\r\n                        var result = this.callBase.apply(this, arguments);\r\n                        var targetColumn = columns[point.columnIndex];\r\n                        var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\r\n                        if (!result && \"headers\" === location && $transparentColumn && $transparentColumn.length) {\r\n                            var boundingRect = getBoundingRect($transparentColumn.get(0));\r\n                            if (sourceColumn && sourceColumn.fixed) {\r\n                                return \"right\" === sourceColumn.fixedPosition ? point.x < boundingRect.right : point.x > boundingRect.left\r\n                            } else {\r\n                                if (targetColumn && targetColumn.fixed && \"right\" !== targetColumn.fixedPosition) {\r\n                                    return true\r\n                                }\r\n                                return point.x < boundingRect.left || point.x > boundingRect.right\r\n                            }\r\n                        }\r\n                        return result\r\n                    }\r\n                },\r\n                columnsResizer: {\r\n                    _generatePointsByColumns: function() {\r\n                        var that = this;\r\n                        var columnsController = that._columnsController;\r\n                        var columns = columnsController && that._columnsController.getVisibleColumns();\r\n                        var fixedColumns = columnsController && that._columnsController.getFixedColumns();\r\n                        var cells = that._columnHeadersView.getFixedColumnElements();\r\n                        var pointsByFixedColumns = [];\r\n                        that.callBase();\r\n                        if (cells && cells.length > 0) {\r\n                            pointsByFixedColumns = gridCoreUtils.getPointsByColumns(cells, (function(point) {\r\n                                return that._pointCreated(point, cells.length, fixedColumns)\r\n                            }));\r\n                            that._pointsByFixedColumns = normalizeColumnIndicesByPoints(columns, fixedColumns, pointsByFixedColumns)\r\n                        }\r\n                    },\r\n                    _pointCreated: function(point, cellsLength, columns) {\r\n                        var isWidgetResizingMode = \"widget\" === this.option(\"columnResizingMode\");\r\n                        if (point.index > 0 && point.index < cellsLength) {\r\n                            var currentColumn = columns[point.columnIndex - 1] || {};\r\n                            var nextColumn = columns[point.columnIndex] || {};\r\n                            if (currentColumn.fixed || nextColumn.fixed) {\r\n                                point.columnIndex -= 1;\r\n                                return !((currentColumn.allowResizing || currentColumn.command === COMMAND_TRANSPARENT) && (isWidgetResizingMode || nextColumn.allowResizing || nextColumn.command === COMMAND_TRANSPARENT))\r\n                            }\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    _getTargetPoint: function(pointsByColumns, currentX, deltaX) {\r\n                        var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\r\n                        if ($transparentColumn && $transparentColumn.length) {\r\n                            var boundingRect = getBoundingRect($transparentColumn.get(0));\r\n                            if (currentX <= boundingRect.left || currentX >= boundingRect.right) {\r\n                                return this.callBase(this._pointsByFixedColumns, currentX, deltaX)\r\n                            }\r\n                        }\r\n                        return this.callBase(pointsByColumns, currentX, deltaX)\r\n                    }\r\n                }\r\n            }\r\n        }()\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.column_fixing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnFixingModule\r\n} from \"../grid_core/ui.grid_core.column_fixing\";\r\ngridCore.registerModule(\"columnFixing\", columnFixingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.adaptivity.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport Guid from \"../../core/guid\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport Form from \"../form\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    isMaterial\r\n} from \"../themes\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport messageLocalization from \"../../localization/message\";\r\nvar COLUMN_HEADERS_VIEW = \"columnHeadersView\";\r\nvar ROWS_VIEW = \"rowsView\";\r\nvar FOOTER_VIEW = \"footerView\";\r\nvar COLUMN_VIEWS = [COLUMN_HEADERS_VIEW, ROWS_VIEW, FOOTER_VIEW];\r\nvar ADAPTIVE_NAMESPACE = \"dxDataGridAdaptivity\";\r\nvar HIDDEN_COLUMNS_WIDTH = \"adaptiveHidden\";\r\nvar ADAPTIVE_ROW_TYPE = \"detailAdaptive\";\r\nvar FORM_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\r\nvar FORM_ITEM_MODIFIED = \"dx-item-modified\";\r\nvar HIDDEN_COLUMN_CLASS = \"hidden-column\";\r\nvar ADAPTIVE_COLUMN_BUTTON_CLASS = \"adaptive-more\";\r\nvar ADAPTIVE_COLUMN_NAME_CLASS = \"dx-command-adaptive\";\r\nvar COMMAND_ADAPTIVE_HIDDEN_CLASS = \"dx-command-adaptive-hidden\";\r\nvar ADAPTIVE_DETAIL_ROW_CLASS = \"dx-adaptive-detail-row\";\r\nvar ADAPTIVE_ITEM_TEXT_CLASS = \"dx-adaptive-item-text\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar LAST_DATA_CELL_CLASS = \"dx-last-data-cell\";\r\nvar ADAPTIVE_COLUMN_NAME = \"adaptive\";\r\nvar EDIT_MODE_BATCH = \"batch\";\r\nvar EDIT_MODE_ROW = \"row\";\r\nvar EDIT_MODE_FORM = \"form\";\r\nvar EDIT_MODE_POPUP = \"popup\";\r\nvar REVERT_TOOLTIP_CLASS = \"revert-tooltip\";\r\nvar GROUP_CELL_CLASS = \"dx-group-cell\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar EXPAND_ARIA_NAME = \"dxDataGrid-ariaAdaptiveExpand\";\r\nvar COLLAPSE_ARIA_NAME = \"dxDataGrid-ariaAdaptiveCollapse\";\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\n\r\nfunction getColumnId(that, column) {\r\n    return that._columnsController.getColumnId(column)\r\n}\r\n\r\nfunction getDataCellElements($row) {\r\n    return $row.find(\"td:not(.dx-datagrid-hidden-column):not([class*='dx-command-'])\")\r\n}\r\n\r\nfunction adaptiveCellTemplate(container, options) {\r\n    var $adaptiveColumnButton;\r\n    var $container = $(container);\r\n    var adaptiveColumnsController = options.component.getController(\"adaptiveColumns\");\r\n    if (\"data\" === options.rowType) {\r\n        $adaptiveColumnButton = $(\"<span>\").addClass(adaptiveColumnsController.addWidgetPrefix(ADAPTIVE_COLUMN_BUTTON_CLASS));\r\n        eventsEngine.on($adaptiveColumnButton, addNamespace(clickEventName, ADAPTIVE_NAMESPACE), adaptiveColumnsController.createAction((function() {\r\n            adaptiveColumnsController.toggleExpandAdaptiveDetailRow(options.key)\r\n        })));\r\n        $adaptiveColumnButton.appendTo($container)\r\n    } else {\r\n        gridCoreUtils.setEmptyText($container)\r\n    }\r\n}\r\nvar AdaptiveColumnsController = modules.ViewController.inherit({\r\n    _isRowEditMode: function() {\r\n        var editMode = this._getEditMode();\r\n        return editMode === EDIT_MODE_ROW\r\n    },\r\n    _isItemModified: function(item, cellOptions) {\r\n        var columnIndex = this._columnsController.getVisibleIndex(item.column.index);\r\n        var rowIndex = this._dataController.getRowIndexByKey(cellOptions.key);\r\n        var row = this._dataController.items()[rowIndex + 1];\r\n        return row && row.modifiedValues && isDefined(row.modifiedValues[columnIndex])\r\n    },\r\n    _renderFormViewTemplate: function(item, cellOptions, $container) {\r\n        var column = item.column;\r\n        var focusAction = this.createAction((function() {\r\n            eventsEngine.trigger($container, clickEventName)\r\n        }));\r\n        var value = column.calculateCellValue(cellOptions.data);\r\n        var displayValue = gridCoreUtils.getDisplayValue(column, value, cellOptions.data, cellOptions.rowType);\r\n        var text = gridCoreUtils.formatValue(displayValue, column);\r\n        var isCellOrBatchEditMode = this._editingController.isCellOrBatchEditMode();\r\n        var rowsView = this._rowsView;\r\n        if (column.allowEditing && this.getController(\"keyboardNavigation\").isKeyboardEnabled()) {\r\n            $container.attr(\"tabIndex\", this.option(\"tabIndex\"));\r\n            if (isCellOrBatchEditMode) {\r\n                eventsEngine.off($container, \"focus\", focusAction);\r\n                eventsEngine.on($container, \"focus\", focusAction)\r\n            }\r\n        }\r\n        if (column.cellTemplate) {\r\n            var templateOptions = extend({}, cellOptions, {\r\n                value: value,\r\n                displayValue: displayValue,\r\n                text: text,\r\n                column: column\r\n            });\r\n            var isDomElement = !!$container.closest(getWindow().document).length;\r\n            rowsView.renderTemplate($container, column.cellTemplate, templateOptions, isDomElement).done(() => {\r\n                rowsView._cellPrepared($container, cellOptions)\r\n            })\r\n        } else {\r\n            var container = $container.get(0);\r\n            if (column.encodeHtml) {\r\n                container.textContent = text\r\n            } else {\r\n                container.innerHTML = text\r\n            }\r\n            $container.addClass(ADAPTIVE_ITEM_TEXT_CLASS);\r\n            if (!isDefined(text) || \"\" === text) {\r\n                $container.html(\"&nbsp;\")\r\n            }\r\n            if (!this._isRowEditMode()) {\r\n                if (this._isItemModified(item, cellOptions)) {\r\n                    $container.addClass(FORM_ITEM_MODIFIED)\r\n                }\r\n            }\r\n            rowsView._cellPrepared($container, cellOptions)\r\n        }\r\n    },\r\n    _getTemplate: function(item, cellOptions) {\r\n        var that = this;\r\n        var column = item.column;\r\n        var editingController = this.getController(\"editing\");\r\n        return function(options, container) {\r\n            var $container = $(container);\r\n            var columnIndex = that._columnsController.getVisibleIndex(column.index);\r\n            var templateOptions = extend({}, cellOptions);\r\n            var renderFormTemplate = function() {\r\n                var isItemEdited = that._isItemEdited(item);\r\n                templateOptions.value = cellOptions.row.values[columnIndex];\r\n                if (isItemEdited || column.showEditorAlways) {\r\n                    editingController.renderFormEditTemplate(templateOptions, item, options, $container, !isItemEdited)\r\n                } else {\r\n                    templateOptions.column = column;\r\n                    templateOptions.columnIndex = columnIndex;\r\n                    that._renderFormViewTemplate(item, templateOptions, $container)\r\n                }\r\n            };\r\n            renderFormTemplate();\r\n            templateOptions.watch && templateOptions.watch((function() {\r\n                return {\r\n                    isItemEdited: that._isItemEdited(item),\r\n                    value: cellOptions.row.values[columnIndex]\r\n                }\r\n            }), (function() {\r\n                $container.contents().remove();\r\n                $container.removeClass(ADAPTIVE_ITEM_TEXT_CLASS);\r\n                renderFormTemplate()\r\n            }))\r\n        }\r\n    },\r\n    _isVisibleColumnsValid: function(visibleColumns) {\r\n        if (visibleColumns < 2) {\r\n            return false\r\n        }\r\n        if (visibleColumns.length - function() {\r\n                var result = 0;\r\n                for (var j = 0; j < visibleColumns.length; j++) {\r\n                    var visibleColumn = visibleColumns[j];\r\n                    if (visibleColumn.command) {\r\n                        result++\r\n                    }\r\n                }\r\n                return result\r\n            }() <= 1) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    _calculatePercentWidths: function(widths, visibleColumns) {\r\n        var that = this;\r\n        var percentWidths = 0;\r\n        visibleColumns.forEach((function(item, index) {\r\n            if (widths[index] !== HIDDEN_COLUMNS_WIDTH) {\r\n                percentWidths += that._getItemPercentWidth(item)\r\n            }\r\n        }));\r\n        return percentWidths\r\n    },\r\n    _isPercentWidth: function(width) {\r\n        return isString(width) && \"%\" === width.slice(-1)\r\n    },\r\n    _isColumnHidden: function(column) {\r\n        return this._hiddenColumns.filter((function(hiddenColumn) {\r\n            return hiddenColumn.index === column.index\r\n        })).length > 0\r\n    },\r\n    _getAverageColumnsWidth: function(containerWidth, columns, columnsCanFit) {\r\n        var that = this;\r\n        var fixedColumnsWidth = 0;\r\n        var columnsWithoutFixedWidthCount = 0;\r\n        columns.forEach((function(column) {\r\n            if (!that._isColumnHidden(column)) {\r\n                var width = column.width;\r\n                if (isDefined(width) && !isNaN(parseFloat(width))) {\r\n                    fixedColumnsWidth += that._isPercentWidth(width) ? that._calculatePercentWidth({\r\n                        visibleIndex: column.visibleIndex,\r\n                        columnsCount: columns.length,\r\n                        columnsCanFit: columnsCanFit,\r\n                        bestFitWidth: column.bestFitWidth,\r\n                        columnWidth: width,\r\n                        containerWidth: containerWidth\r\n                    }) : parseFloat(width)\r\n                } else {\r\n                    columnsWithoutFixedWidthCount++\r\n                }\r\n            }\r\n        }));\r\n        return (containerWidth - fixedColumnsWidth) / columnsWithoutFixedWidthCount\r\n    },\r\n    _calculateColumnWidth: function(column, containerWidth, contentColumns, columnsCanFit) {\r\n        var columnId = getColumnId(this, column);\r\n        var widthOption = this._columnsController.columnOption(columnId, \"width\");\r\n        var bestFitWidth = this._columnsController.columnOption(columnId, \"bestFitWidth\");\r\n        var columnsCount = contentColumns.length;\r\n        var colWidth;\r\n        if (widthOption && \"auto\" !== widthOption) {\r\n            if (this._isPercentWidth(widthOption)) {\r\n                colWidth = this._calculatePercentWidth({\r\n                    visibleIndex: column.visibleIndex,\r\n                    columnsCount: columnsCount,\r\n                    columnsCanFit: columnsCanFit,\r\n                    bestFitWidth: bestFitWidth,\r\n                    columnWidth: widthOption,\r\n                    containerWidth: containerWidth\r\n                })\r\n            } else {\r\n                return parseFloat(widthOption)\r\n            }\r\n        } else {\r\n            var columnAutoWidth = this.option(\"columnAutoWidth\");\r\n            colWidth = columnAutoWidth || !!column.command ? bestFitWidth : this._getAverageColumnsWidth(containerWidth, contentColumns, columnsCanFit)\r\n        }\r\n        return colWidth\r\n    },\r\n    _calculatePercentWidth: function(options) {\r\n        var columnFitted = options.visibleIndex < options.columnsCount - 1 && options.columnsCanFit;\r\n        var partialWidth = options.containerWidth * parseFloat(options.columnWidth) / 100;\r\n        var resultWidth = options.columnsCanFit && partialWidth < options.bestFitWidth ? options.bestFitWidth : partialWidth;\r\n        return columnFitted ? options.containerWidth * parseFloat(options.columnWidth) / 100 : resultWidth\r\n    },\r\n    _getNotTruncatedColumnWidth: function(column, containerWidth, contentColumns, columnsCanFit) {\r\n        var columnId = getColumnId(this, column);\r\n        var widthOption = this._columnsController.columnOption(columnId, \"width\");\r\n        var bestFitWidth = this._columnsController.columnOption(columnId, \"bestFitWidth\");\r\n        if (widthOption && \"auto\" !== widthOption && !this._isPercentWidth(widthOption)) {\r\n            return parseFloat(widthOption)\r\n        }\r\n        var colWidth = this._calculateColumnWidth(column, containerWidth, contentColumns, columnsCanFit);\r\n        return colWidth < bestFitWidth ? null : colWidth\r\n    },\r\n    _getItemPercentWidth: function(item) {\r\n        var result = 0;\r\n        if (item.width && this._isPercentWidth(item.width)) {\r\n            result = parseFloat(item.width)\r\n        }\r\n        return result\r\n    },\r\n    _getCommandColumnsWidth: function() {\r\n        var that = this;\r\n        var columns = that._columnsController.getVisibleColumns();\r\n        var colWidth = 0;\r\n        each(columns, (function(index, column) {\r\n            if (column.index < 0 || column.command) {\r\n                colWidth += that._columnsController.columnOption(getColumnId(that, column), \"bestFitWidth\") || 0\r\n            }\r\n        }));\r\n        return colWidth\r\n    },\r\n    _isItemEdited: function(item) {\r\n        if (this.isFormOrPopupEditMode()) {\r\n            return false\r\n        }\r\n        if (this._isRowEditMode()) {\r\n            var editRowKey = this.option(\"editing.editRowKey\");\r\n            if (equalByValue(editRowKey, this._dataController.adaptiveExpandedKey())) {\r\n                return true\r\n            }\r\n        } else {\r\n            var rowIndex = this._dataController.getRowIndexByKey(this._dataController.adaptiveExpandedKey()) + 1;\r\n            var columnIndex = this._columnsController.getVisibleIndex(item.column.index);\r\n            return this._editingController.isEditCell(rowIndex, columnIndex)\r\n        }\r\n    },\r\n    _getFormItemsByHiddenColumns: function(hiddenColumns) {\r\n        var items = [];\r\n        each(hiddenColumns, (function(_, column) {\r\n            items.push({\r\n                column: column,\r\n                name: column.name,\r\n                dataField: column.dataField,\r\n                visibleIndex: column.visibleIndex\r\n            })\r\n        }));\r\n        return items\r\n    },\r\n    _getAdaptiveColumnVisibleIndex: function(visibleColumns) {\r\n        for (var i = 0; i < visibleColumns.length; i++) {\r\n            var column = visibleColumns[i];\r\n            if (column.command === ADAPTIVE_COLUMN_NAME) {\r\n                return i\r\n            }\r\n        }\r\n    },\r\n    _hideAdaptiveColumn: function(resultWidths, visibleColumns) {\r\n        var visibleIndex = this._getAdaptiveColumnVisibleIndex(visibleColumns);\r\n        if (isDefined(visibleIndex)) {\r\n            resultWidths[visibleIndex] = HIDDEN_COLUMNS_WIDTH;\r\n            this._hideVisibleColumn({\r\n                isCommandColumn: true,\r\n                visibleIndex: visibleIndex\r\n            })\r\n        }\r\n    },\r\n    _showHiddenCellsInView: function(_ref) {\r\n        var {\r\n            $cells: $cells,\r\n            isCommandColumn: isCommandColumn\r\n        } = _ref;\r\n        var cssClassNameToRemove = isCommandColumn ? COMMAND_ADAPTIVE_HIDDEN_CLASS : this.addWidgetPrefix(HIDDEN_COLUMN_CLASS);\r\n        $cells.removeClass(cssClassNameToRemove)\r\n    },\r\n    _showHiddenColumns: function() {\r\n        for (var i = 0; i < COLUMN_VIEWS.length; i++) {\r\n            var view = this.getView(COLUMN_VIEWS[i]);\r\n            if (view && view.isVisible() && view.element()) {\r\n                var viewName = view.name;\r\n                var $hiddenCommandCells = view.element().find(\".\" + COMMAND_ADAPTIVE_HIDDEN_CLASS);\r\n                this._showHiddenCellsInView({\r\n                    viewName: viewName,\r\n                    $cells: $hiddenCommandCells,\r\n                    isCommandColumn: true\r\n                });\r\n                var $hiddenCells = view.element().find(\".\" + this.addWidgetPrefix(HIDDEN_COLUMN_CLASS));\r\n                this._showHiddenCellsInView({\r\n                    viewName: viewName,\r\n                    $cells: $hiddenCells\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _isCellValid: function($cell) {\r\n        return $cell && $cell.length && !$cell.hasClass(MASTER_DETAIL_CELL_CLASS) && !$cell.hasClass(GROUP_CELL_CLASS)\r\n    },\r\n    _hideVisibleColumn: function(_ref2) {\r\n        var {\r\n            isCommandColumn: isCommandColumn,\r\n            visibleIndex: visibleIndex\r\n        } = _ref2;\r\n        var that = this;\r\n        COLUMN_VIEWS.forEach((function(viewName) {\r\n            var view = that.getView(viewName);\r\n            view && that._hideVisibleColumnInView({\r\n                view: view,\r\n                isCommandColumn: isCommandColumn,\r\n                visibleIndex: visibleIndex\r\n            })\r\n        }))\r\n    },\r\n    _hideVisibleColumnInView: function(_ref3) {\r\n        var {\r\n            view: view,\r\n            isCommandColumn: isCommandColumn,\r\n            visibleIndex: visibleIndex\r\n        } = _ref3;\r\n        var viewName = view.name;\r\n        var $cellElement;\r\n        var column = this._columnsController.getVisibleColumns()[visibleIndex];\r\n        var editFormRowIndex = this._editingController && this._editingController.getEditFormRowIndex();\r\n        if (view && view.isVisible() && column) {\r\n            var rowsCount = view.getRowsCount();\r\n            var $rowElements = view._getRowElements();\r\n            for (var rowIndex = 0; rowIndex < rowsCount; rowIndex++) {\r\n                var cancelClassAdding = rowIndex === editFormRowIndex && viewName === ROWS_VIEW && \"popup\" !== this.option(\"editing.mode\");\r\n                if (!cancelClassAdding) {\r\n                    var currentVisibleIndex = viewName === COLUMN_HEADERS_VIEW ? this._columnsController.getVisibleIndex(column.index, rowIndex) : visibleIndex;\r\n                    if (currentVisibleIndex >= 0) {\r\n                        var $rowElement = $rowElements.eq(rowIndex);\r\n                        $cellElement = this._findCellElementInRow($rowElement, currentVisibleIndex);\r\n                        this._isCellValid($cellElement) && this._hideVisibleCellInView({\r\n                            viewName: viewName,\r\n                            isCommandColumn: isCommandColumn,\r\n                            $cell: $cellElement\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _findCellElementInRow($rowElement, visibleColumnIndex) {\r\n        var $rowCells = $rowElement.children();\r\n        var visibleIndex = visibleColumnIndex;\r\n        var cellIsInsideGroup = false;\r\n        if ($rowElement.hasClass(GROUP_ROW_CLASS)) {\r\n            var $groupCell = $rowElement.find(\".\".concat(GROUP_CELL_CLASS));\r\n            var colSpan = $groupCell.attr(\"colspan\");\r\n            if ($groupCell.length && isDefined(colSpan)) {\r\n                var groupCellLength = parseInt(colSpan);\r\n                var endGroupIndex = $groupCell.index() + groupCellLength - 1;\r\n                if (visibleColumnIndex > endGroupIndex) {\r\n                    visibleIndex = visibleColumnIndex - groupCellLength + 1\r\n                } else {\r\n                    cellIsInsideGroup = true\r\n                }\r\n            }\r\n        }\r\n        var $cellElement = !cellIsInsideGroup ? $rowCells.eq(visibleIndex) : void 0;\r\n        return $cellElement\r\n    },\r\n    _hideVisibleCellInView: function(_ref4) {\r\n        var {\r\n            $cell: $cell,\r\n            isCommandColumn: isCommandColumn\r\n        } = _ref4;\r\n        var cssClassNameToAdd = isCommandColumn ? COMMAND_ADAPTIVE_HIDDEN_CLASS : this.addWidgetPrefix(HIDDEN_COLUMN_CLASS);\r\n        $cell.addClass(cssClassNameToAdd)\r\n    },\r\n    _getEditMode: function() {\r\n        return this._editingController.getEditMode()\r\n    },\r\n    isFormOrPopupEditMode: function() {\r\n        var editMode = this._getEditMode();\r\n        return editMode === EDIT_MODE_FORM || editMode === EDIT_MODE_POPUP\r\n    },\r\n    hideRedundantColumns: function(resultWidths, visibleColumns, hiddenQueue) {\r\n        this._hiddenColumns = [];\r\n        if (this._isVisibleColumnsValid(visibleColumns) && hiddenQueue.length) {\r\n            var totalWidth = 0;\r\n            var $rootElement = this.component.$element();\r\n            var rootElementWidth = getWidth($rootElement) - this._getCommandColumnsWidth();\r\n            var getVisibleContentColumns = function() {\r\n                return visibleColumns.filter(item => !item.command && 0 === this._hiddenColumns.filter(i => i.index === item.index).length)\r\n            }.bind(this);\r\n            var visibleContentColumns = getVisibleContentColumns();\r\n            var contentColumnsCount = visibleContentColumns.length;\r\n            var i;\r\n            var hasHiddenColumns;\r\n            var needHideColumn;\r\n            do {\r\n                needHideColumn = false;\r\n                totalWidth = 0;\r\n                var percentWidths = this._calculatePercentWidths(resultWidths, visibleColumns);\r\n                var columnsCanFit = percentWidths < 100 && 0 !== percentWidths;\r\n                for (i = 0; i < visibleColumns.length; i++) {\r\n                    var visibleColumn = visibleColumns[i];\r\n                    var columnWidth = this._getNotTruncatedColumnWidth(visibleColumn, rootElementWidth, visibleContentColumns, columnsCanFit);\r\n                    var columnId = getColumnId(this, visibleColumn);\r\n                    var widthOption = this._columnsController.columnOption(columnId, \"width\");\r\n                    var minWidth = this._columnsController.columnOption(columnId, \"minWidth\");\r\n                    var columnBestFitWidth = this._columnsController.columnOption(columnId, \"bestFitWidth\");\r\n                    if (resultWidths[i] === HIDDEN_COLUMNS_WIDTH) {\r\n                        hasHiddenColumns = true;\r\n                        continue\r\n                    }\r\n                    if (!columnWidth && !visibleColumn.command && !visibleColumn.fixed) {\r\n                        needHideColumn = true;\r\n                        break\r\n                    }\r\n                    if (!widthOption || \"auto\" === widthOption) {\r\n                        columnWidth = Math.max(columnBestFitWidth || 0, minWidth || 0)\r\n                    }\r\n                    if (visibleColumn.command !== ADAPTIVE_COLUMN_NAME || hasHiddenColumns) {\r\n                        totalWidth += columnWidth\r\n                    }\r\n                }\r\n                needHideColumn = needHideColumn || totalWidth > getWidth($rootElement);\r\n                if (needHideColumn) {\r\n                    var column = hiddenQueue.pop();\r\n                    var visibleIndex = this._columnsController.getVisibleIndex(column.index);\r\n                    rootElementWidth += this._calculateColumnWidth(column, rootElementWidth, visibleContentColumns, columnsCanFit);\r\n                    this._hideVisibleColumn({\r\n                        visibleIndex: visibleIndex\r\n                    });\r\n                    resultWidths[visibleIndex] = HIDDEN_COLUMNS_WIDTH;\r\n                    this._hiddenColumns.push(column);\r\n                    visibleContentColumns = getVisibleContentColumns()\r\n                }\r\n            } while (needHideColumn && visibleContentColumns.length > 1 && hiddenQueue.length);\r\n            if (contentColumnsCount === visibleContentColumns.length) {\r\n                this._hideAdaptiveColumn(resultWidths, visibleColumns)\r\n            }\r\n        } else {\r\n            this._hideAdaptiveColumn(resultWidths, visibleColumns)\r\n        }\r\n    },\r\n    getItemContentByColumnIndex: function(visibleColumnIndex) {\r\n        var $itemContent;\r\n        for (var i = 0; i < this._$itemContents.length; i++) {\r\n            $itemContent = this._$itemContents.eq(i);\r\n            var item = $itemContent.data(\"dx-form-item\");\r\n            if (item && item.column && this._columnsController.getVisibleIndex(item.column.index) === visibleColumnIndex) {\r\n                return $itemContent\r\n            }\r\n        }\r\n    },\r\n    toggleExpandAdaptiveDetailRow: function(key, alwaysExpanded) {\r\n        if (!(this.isFormOrPopupEditMode() && this._editingController.isEditing())) {\r\n            this.getController(\"data\").toggleExpandAdaptiveDetailRow(key, alwaysExpanded)\r\n        }\r\n    },\r\n    createFormByHiddenColumns: function(container, options) {\r\n        var that = this;\r\n        var $container = $(container);\r\n        var userFormOptions = {\r\n            items: that._getFormItemsByHiddenColumns(that._hiddenColumns),\r\n            formID: \"dx-\" + new Guid\r\n        };\r\n        var defaultFormOptions = isMaterial() ? {\r\n            colCount: 2\r\n        } : {};\r\n        this.executeAction(\"onAdaptiveDetailRowPreparing\", {\r\n            formOptions: userFormOptions\r\n        });\r\n        that._$itemContents = null;\r\n        that._form = that._createComponent($(\"<div>\").appendTo($container), Form, extend(defaultFormOptions, userFormOptions, {\r\n            customizeItem: function(item) {\r\n                var column = item.column || that._columnsController.columnOption(item.name || item.dataField);\r\n                if (column) {\r\n                    item.label = item.label || {};\r\n                    item.label.text = item.label.text || column.caption;\r\n                    item.column = column;\r\n                    item.template = that._getTemplate(item, options, that.updateForm.bind(that))\r\n                }\r\n                userFormOptions.customizeItem && userFormOptions.customizeItem.call(this, item)\r\n            },\r\n            onContentReady: function(e) {\r\n                userFormOptions.onContentReady && userFormOptions.onContentReady.call(this, e);\r\n                that._$itemContents = $container.find(\".\" + FORM_ITEM_CONTENT_CLASS)\r\n            }\r\n        }))\r\n    },\r\n    hasAdaptiveDetailRowExpanded: function() {\r\n        return isDefined(this._dataController.adaptiveExpandedKey())\r\n    },\r\n    updateForm: function(hiddenColumns) {\r\n        if (this.hasAdaptiveDetailRowExpanded()) {\r\n            if (this._form && isDefined(this._form._contentReadyAction)) {\r\n                if (hiddenColumns && hiddenColumns.length) {\r\n                    this._form.option(\"items\", this._getFormItemsByHiddenColumns(hiddenColumns))\r\n                } else {\r\n                    this._form.repaint()\r\n                }\r\n            }\r\n        }\r\n    },\r\n    updateHidingQueue: function(columns) {\r\n        var hideableColumns = columns.filter((function(column) {\r\n            return column.visible && !column.type && !column.fixed && !(isDefined(column.groupIndex) && column.groupIndex >= 0)\r\n        }));\r\n        var columnsHasHidingPriority;\r\n        var i;\r\n        this._hidingColumnsQueue = [];\r\n        if (this.option(\"allowColumnResizing\") && \"widget\" === this.option(\"columnResizingMode\")) {\r\n            return this._hidingColumnsQueue\r\n        }\r\n        for (i = 0; i < hideableColumns.length; i++) {\r\n            if (isDefined(hideableColumns[i].hidingPriority) && hideableColumns[i].hidingPriority >= 0) {\r\n                columnsHasHidingPriority = true;\r\n                this._hidingColumnsQueue[hideableColumns[i].hidingPriority] = hideableColumns[i]\r\n            }\r\n        }\r\n        if (columnsHasHidingPriority) {\r\n            this._hidingColumnsQueue.reverse()\r\n        } else if (this.option(\"columnHidingEnabled\")) {\r\n            for (i = 0; i < hideableColumns.length; i++) {\r\n                var visibleIndex = this._columnsController.getVisibleIndex(hideableColumns[i].index);\r\n                this._hidingColumnsQueue[visibleIndex] = hideableColumns[i]\r\n            }\r\n        }\r\n        this._hidingColumnsQueue = this._hidingColumnsQueue.filter(Object);\r\n        return this._hidingColumnsQueue\r\n    },\r\n    getHiddenColumns: function() {\r\n        return this._hiddenColumns\r\n    },\r\n    hasHiddenColumns: function() {\r\n        return this._hiddenColumns.length > 0\r\n    },\r\n    getHidingColumnsQueue: function() {\r\n        return this._hidingColumnsQueue\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._dataController = that.getController(\"data\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._columnsController.addCommandColumn({\r\n            type: ADAPTIVE_COLUMN_NAME,\r\n            command: ADAPTIVE_COLUMN_NAME,\r\n            visible: true,\r\n            adaptiveHidden: true,\r\n            cssClass: ADAPTIVE_COLUMN_NAME_CLASS,\r\n            alignment: \"center\",\r\n            width: \"auto\",\r\n            cellTemplate: adaptiveCellTemplate,\r\n            fixedPosition: \"right\"\r\n        });\r\n        that._columnsController.columnsChanged.add((function() {\r\n            var isAdaptiveVisible = !!that.updateHidingQueue(that._columnsController.getColumns()).length;\r\n            that._columnsController.columnOption(\"command:adaptive\", \"adaptiveHidden\", !isAdaptiveVisible, true)\r\n        }));\r\n        that._editingController = that.getController(\"editing\");\r\n        that._hidingColumnsQueue = [];\r\n        that._hiddenColumns = [];\r\n        that.createAction(\"onAdaptiveDetailRowPreparing\");\r\n        that.callBase()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"columnHidingEnabled\" === args.name) {\r\n            this._columnsController.columnOption(\"command:adaptive\", \"adaptiveHidden\", !args.value)\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    publicMethods: function() {\r\n        return [\"isAdaptiveDetailRowExpanded\", \"expandAdaptiveDetailRow\", \"collapseAdaptiveDetailRow\"]\r\n    },\r\n    isAdaptiveDetailRowExpanded: function(key) {\r\n        return this._dataController.adaptiveExpandedKey() && equalByValue(this._dataController.adaptiveExpandedKey(), key)\r\n    },\r\n    expandAdaptiveDetailRow: function(key) {\r\n        if (!this.hasAdaptiveDetailRowExpanded()) {\r\n            this.toggleExpandAdaptiveDetailRow(key)\r\n        }\r\n    },\r\n    collapseAdaptiveDetailRow: function() {\r\n        if (this.hasAdaptiveDetailRowExpanded()) {\r\n            this.toggleExpandAdaptiveDetailRow()\r\n        }\r\n    },\r\n    updateCommandAdaptiveAriaLabel: function(key, label) {\r\n        var rowIndex = this._dataController.getRowIndexByKey(key);\r\n        if (-1 === rowIndex) {\r\n            return\r\n        }\r\n        var $row = $(this.component.getRowElement(rowIndex));\r\n        this.setCommandAdaptiveAriaLabel($row, label)\r\n    },\r\n    setCommandAdaptiveAriaLabel: function($row, labelName) {\r\n        var $adaptiveCommand = $row.find(\".dx-command-adaptive\");\r\n        $adaptiveCommand.attr(\"aria-label\", messageLocalization.format(labelName))\r\n    }\r\n});\r\nexport var adaptivityModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            columnHidingEnabled: false,\r\n            onAdaptiveDetailRowPreparing: null\r\n        }\r\n    },\r\n    controllers: {\r\n        adaptiveColumns: AdaptiveColumnsController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _getCellTemplate: function(options) {\r\n                    var that = this;\r\n                    var column = options.column;\r\n                    if (options.rowType === ADAPTIVE_ROW_TYPE && \"detail\" === column.command) {\r\n                        return function(container, options) {\r\n                            that._adaptiveColumnsController.createFormByHiddenColumns($(container), options)\r\n                        }\r\n                    }\r\n                    return that.callBase(options)\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row && row.rowType === ADAPTIVE_ROW_TYPE && row.key === this._dataController.adaptiveExpandedKey()) {\r\n                        $row.addClass(ADAPTIVE_DETAIL_ROW_CLASS)\r\n                    }\r\n                    return $row\r\n                },\r\n                _renderCells: function($row, options) {\r\n                    this.callBase($row, options);\r\n                    var adaptiveColumnsController = this._adaptiveColumnsController;\r\n                    var hidingColumnsQueueLength = adaptiveColumnsController.getHidingColumnsQueue().length;\r\n                    var hiddenColumnsLength = adaptiveColumnsController.getHiddenColumns().length;\r\n                    if (hidingColumnsQueueLength && !hiddenColumnsLength) {\r\n                        getDataCellElements($row).last().addClass(LAST_DATA_CELL_CLASS)\r\n                    }\r\n                    if (\"data\" === options.row.rowType) {\r\n                        adaptiveColumnsController.setCommandAdaptiveAriaLabel($row, EXPAND_ARIA_NAME)\r\n                    }\r\n                },\r\n                _getColumnIndexByElementCore: function($element) {\r\n                    var $itemContent = $element.closest(\".\" + FORM_ITEM_CONTENT_CLASS);\r\n                    if ($itemContent.length && $itemContent.closest(this.component.$element()).length) {\r\n                        var formItem = $itemContent.length ? $itemContent.first().data(\"dx-form-item\") : null;\r\n                        return formItem && formItem.column && this._columnsController.getVisibleIndex(formItem.column.index)\r\n                    } else {\r\n                        return this.callBase($element)\r\n                    }\r\n                },\r\n                _cellPrepared: function($cell, options) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (options.row.rowType !== ADAPTIVE_ROW_TYPE && options.column.visibleWidth === HIDDEN_COLUMNS_WIDTH) {\r\n                        $cell.addClass(this.addWidgetPrefix(HIDDEN_COLUMN_CLASS))\r\n                    }\r\n                },\r\n                _getCellElement: function(rowIndex, columnIdentifier) {\r\n                    var item = this._dataController.items()[rowIndex];\r\n                    if (item && item.rowType === ADAPTIVE_ROW_TYPE) {\r\n                        return this._adaptiveColumnsController.getItemContentByColumnIndex(columnIdentifier)\r\n                    } else {\r\n                        return this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                getContextMenuItems: function(options) {\r\n                    if (options.row && \"detailAdaptive\" === options.row.rowType) {\r\n                        var view = this.component.getView(\"columnHeadersView\");\r\n                        var formItem = $(options.targetElement).closest(\".dx-field-item-label\").next().data(\"dx-form-item\");\r\n                        options.column = formItem ? formItem.column : options.column;\r\n                        return view.getContextMenuItems && view.getContextMenuItems(options)\r\n                    }\r\n                    return this.callBase && this.callBase(options)\r\n                },\r\n                isClickableElement: function($target) {\r\n                    var isClickable = this.callBase ? this.callBase($target) : false;\r\n                    return isClickable || !!$target.closest(\".\" + ADAPTIVE_COLUMN_NAME_CLASS).length\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveColumnsController = this.getController(\"adaptiveColumns\")\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            export: {\r\n                _updateColumnWidth: function(column, width) {\r\n                    this.callBase(column, column.visibleWidth === HIDDEN_COLUMNS_WIDTH ? column.bestFitWidth : width)\r\n                }\r\n            },\r\n            columnsResizer: {\r\n                _pointCreated: function(point, cellsLength, columns) {\r\n                    var result = this.callBase(point, cellsLength, columns);\r\n                    var currentColumn = columns[point.columnIndex] || {};\r\n                    var nextColumnIndex = this._getNextColumnIndex(point.columnIndex);\r\n                    var nextColumn = columns[nextColumnIndex] || {};\r\n                    var hasHiddenColumnsOnly = nextColumnIndex !== point.columnIndex + 1 && nextColumn.command;\r\n                    var hasAdaptiveHiddenWidth = currentColumn.visibleWidth === HIDDEN_COLUMNS_WIDTH || hasHiddenColumnsOnly;\r\n                    return result || hasAdaptiveHiddenWidth\r\n                },\r\n                _getNextColumnIndex: function(currentColumnIndex) {\r\n                    var visibleColumns = this._columnsController.getVisibleColumns();\r\n                    var index = this.callBase(currentColumnIndex);\r\n                    while (visibleColumns[index] && visibleColumns[index].visibleWidth === HIDDEN_COLUMNS_WIDTH) {\r\n                        index++\r\n                    }\r\n                    return index\r\n                }\r\n            },\r\n            draggingHeader: {\r\n                _pointCreated: function(point, columns, location, sourceColumn) {\r\n                    var result = this.callBase(point, columns, location, sourceColumn);\r\n                    var column = columns[point.columnIndex - 1] || {};\r\n                    var hasAdaptiveHiddenWidth = column.visibleWidth === HIDDEN_COLUMNS_WIDTH;\r\n                    return result || hasAdaptiveHiddenWidth\r\n                }\r\n            },\r\n            editing: {\r\n                _isRowEditMode: function() {\r\n                    return this.getEditMode() === EDIT_MODE_ROW\r\n                },\r\n                _getFormEditItemTemplate: function(cellOptions, column) {\r\n                    if (this.getEditMode() !== EDIT_MODE_ROW && \"detailAdaptive\" === cellOptions.rowType) {\r\n                        cellOptions.columnIndex = this._columnsController.getVisibleIndex(column.index);\r\n                        return this.getColumnTemplate(cellOptions)\r\n                    }\r\n                    return this.callBase(cellOptions, column)\r\n                },\r\n                _closeEditItem: function($targetElement) {\r\n                    var $itemContents = $targetElement.closest(\".\" + FORM_ITEM_CONTENT_CLASS);\r\n                    var rowIndex = this._dataController.getRowIndexByKey(this._dataController.adaptiveExpandedKey()) + 1;\r\n                    var formItem = $itemContents.length ? $itemContents.first().data(\"dx-form-item\") : null;\r\n                    var columnIndex = formItem && formItem.column && this._columnsController.getVisibleIndex(formItem.column.index);\r\n                    if (!this.isEditCell(rowIndex, columnIndex)) {\r\n                        this.callBase($targetElement)\r\n                    }\r\n                },\r\n                _beforeUpdateItems: function(rowIndices, rowIndex) {\r\n                    if (!this._adaptiveController.isFormOrPopupEditMode() && this._adaptiveController.hasHiddenColumns()) {\r\n                        var items = this._dataController.items();\r\n                        var item = items[rowIndex];\r\n                        var oldExpandRowIndex = gridCoreUtils.getIndexByKey(this._dataController.adaptiveExpandedKey(), items);\r\n                        this._isForceRowAdaptiveExpand = !this._adaptiveController.hasAdaptiveDetailRowExpanded();\r\n                        if (oldExpandRowIndex >= 0) {\r\n                            rowIndices.push(oldExpandRowIndex + 1)\r\n                        }\r\n                        rowIndices.push(rowIndex + 1);\r\n                        this._dataController.adaptiveExpandedKey(item.key)\r\n                    }\r\n                },\r\n                _afterInsertRow: function(key) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this._adaptiveController.hasHiddenColumns()) {\r\n                        this._adaptiveController.toggleExpandAdaptiveDetailRow(key, this.isRowEditMode());\r\n                        this._isForceRowAdaptiveExpand = true\r\n                    }\r\n                },\r\n                _collapseAdaptiveDetailRow: function() {\r\n                    if (this._isRowEditMode() && this._isForceRowAdaptiveExpand) {\r\n                        this._adaptiveController.collapseAdaptiveDetailRow();\r\n                        this._isForceRowAdaptiveExpand = false\r\n                    }\r\n                },\r\n                _cancelEditAdaptiveDetailRow: function() {\r\n                    if (this._adaptiveController.hasHiddenColumns()) {\r\n                        this._collapseAdaptiveDetailRow()\r\n                    }\r\n                },\r\n                _afterSaveEditData: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    var deferred = new Deferred;\r\n                    if (this._isRowEditMode() && this._adaptiveController.hasHiddenColumns()) {\r\n                        when(this.getController(\"validating\").validate(true)).done(isValid => {\r\n                            if (isValid) {\r\n                                this._cancelEditAdaptiveDetailRow()\r\n                            }\r\n                            deferred.resolve()\r\n                        })\r\n                    } else {\r\n                        deferred.resolve()\r\n                    }\r\n                    return deferred.promise()\r\n                },\r\n                _beforeCancelEditData: function() {\r\n                    this.callBase();\r\n                    this._cancelEditAdaptiveDetailRow()\r\n                },\r\n                _getRowIndicesForCascadeUpdating: function(row) {\r\n                    var rowIndices = this.callBase.apply(this, arguments);\r\n                    if (this._adaptiveController.isAdaptiveDetailRowExpanded(row.key)) {\r\n                        rowIndices.push(row.rowType === ADAPTIVE_ROW_TYPE ? row.rowIndex - 1 : row.rowIndex + 1)\r\n                    }\r\n                    return rowIndices\r\n                },\r\n                _beforeCloseEditCellInBatchMode: function(rowIndices) {\r\n                    var expandedKey = this._dataController._adaptiveExpandedKey;\r\n                    if (expandedKey) {\r\n                        var rowIndex = gridCoreUtils.getIndexByKey(expandedKey, this._dataController.items());\r\n                        if (rowIndex > -1) {\r\n                            rowIndices.unshift(rowIndex)\r\n                        }\r\n                    }\r\n                },\r\n                editRow: function(rowIndex) {\r\n                    if (this._adaptiveController.isFormOrPopupEditMode()) {\r\n                        this._adaptiveController.collapseAdaptiveDetailRow()\r\n                    }\r\n                    this.callBase(rowIndex)\r\n                },\r\n                deleteRow: function(rowIndex) {\r\n                    var rowKey = this._dataController.getKeyByRowIndex(rowIndex);\r\n                    if (this.getEditMode() === EDIT_MODE_BATCH && this._adaptiveController.isAdaptiveDetailRowExpanded(rowKey)) {\r\n                        this._adaptiveController.collapseAdaptiveDetailRow()\r\n                    }\r\n                    this.callBase(rowIndex)\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveController = this.getController(\"adaptiveColumns\")\r\n                }\r\n            },\r\n            resizing: {\r\n                _needBestFit: function() {\r\n                    return this.callBase() || !!this._adaptiveColumnsController.getHidingColumnsQueue().length\r\n                },\r\n                _correctColumnWidths: function(resultWidths, visibleColumns) {\r\n                    var adaptiveController = this._adaptiveColumnsController;\r\n                    var oldHiddenColumns = adaptiveController.getHiddenColumns();\r\n                    var hidingColumnsQueue = adaptiveController.updateHidingQueue(this._columnsController.getColumns());\r\n                    adaptiveController.hideRedundantColumns(resultWidths, visibleColumns, hidingColumnsQueue);\r\n                    var hiddenColumns = adaptiveController.getHiddenColumns();\r\n                    if (adaptiveController.hasAdaptiveDetailRowExpanded()) {\r\n                        if (oldHiddenColumns.length !== hiddenColumns.length) {\r\n                            adaptiveController.updateForm(hiddenColumns)\r\n                        }\r\n                    }!hiddenColumns.length && adaptiveController.collapseAdaptiveDetailRow();\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _toggleBestFitMode: function(isBestFit) {\r\n                    isBestFit && this._adaptiveColumnsController._showHiddenColumns();\r\n                    this.callBase(isBestFit)\r\n                },\r\n                _needStretch: function() {\r\n                    var adaptiveColumnsController = this._adaptiveColumnsController;\r\n                    return this.callBase.apply(this, arguments) || adaptiveColumnsController.getHidingColumnsQueue().length || adaptiveColumnsController.hasHiddenColumns()\r\n                },\r\n                init: function() {\r\n                    this._adaptiveColumnsController = this.getController(\"adaptiveColumns\");\r\n                    this.callBase()\r\n                },\r\n                dispose: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    clearTimeout(this._updateScrollableTimeoutID)\r\n                }\r\n            },\r\n            data: {\r\n                _processItems: function(items, change) {\r\n                    var changeType = change.changeType;\r\n                    items = this.callBase.apply(this, arguments);\r\n                    if (\"loadingAll\" === changeType || !isDefined(this._adaptiveExpandedKey)) {\r\n                        return items\r\n                    }\r\n                    var expandRowIndex = gridCoreUtils.getIndexByKey(this._adaptiveExpandedKey, items);\r\n                    var newMode = false === this.option(LEGACY_SCROLLING_MODE);\r\n                    if (expandRowIndex >= 0) {\r\n                        var item = items[expandRowIndex];\r\n                        items.splice(expandRowIndex + 1, 0, {\r\n                            visible: true,\r\n                            rowType: ADAPTIVE_ROW_TYPE,\r\n                            key: item.key,\r\n                            data: item.data,\r\n                            node: item.node,\r\n                            modifiedValues: item.modifiedValues,\r\n                            isNewRow: item.isNewRow,\r\n                            values: item.values\r\n                        })\r\n                    } else if (\"refresh\" === changeType && !(newMode && change.repaintChangesOnly)) {\r\n                        this._adaptiveExpandedKey = void 0\r\n                    }\r\n                    return items\r\n                },\r\n                _getRowIndicesForExpand: function(key) {\r\n                    var rowIndices = this.callBase.apply(this, arguments);\r\n                    if (this.getController(\"adaptiveColumns\").isAdaptiveDetailRowExpanded(key)) {\r\n                        var lastRowIndex = rowIndices[rowIndices.length - 1];\r\n                        rowIndices.push(lastRowIndex + 1)\r\n                    }\r\n                    return rowIndices\r\n                },\r\n                adaptiveExpandedKey: function(value) {\r\n                    if (isDefined(value)) {\r\n                        this._adaptiveExpandedKey = value\r\n                    } else {\r\n                        return this._adaptiveExpandedKey\r\n                    }\r\n                },\r\n                toggleExpandAdaptiveDetailRow: function(key, alwaysExpanded) {\r\n                    var oldExpandLoadedRowIndex = gridCoreUtils.getIndexByKey(this._adaptiveExpandedKey, this._items);\r\n                    var newExpandLoadedRowIndex = gridCoreUtils.getIndexByKey(key, this._items);\r\n                    if (oldExpandLoadedRowIndex >= 0 && oldExpandLoadedRowIndex === newExpandLoadedRowIndex && !alwaysExpanded) {\r\n                        key = void 0;\r\n                        newExpandLoadedRowIndex = -1\r\n                    }\r\n                    var oldKey = this._adaptiveExpandedKey;\r\n                    this._adaptiveExpandedKey = key;\r\n                    if (oldExpandLoadedRowIndex >= 0) {\r\n                        oldExpandLoadedRowIndex++\r\n                    }\r\n                    if (newExpandLoadedRowIndex >= 0) {\r\n                        newExpandLoadedRowIndex++\r\n                    }\r\n                    var rowIndexDelta = this.getRowIndexDelta();\r\n                    this.updateItems({\r\n                        allowInvisibleRowIndices: true,\r\n                        changeType: \"update\",\r\n                        rowIndices: [oldExpandLoadedRowIndex - rowIndexDelta, newExpandLoadedRowIndex - rowIndexDelta]\r\n                    });\r\n                    var adaptiveColumnsController = this.getController(\"adaptiveColumns\");\r\n                    adaptiveColumnsController.updateCommandAdaptiveAriaLabel(key, COLLAPSE_ARIA_NAME);\r\n                    adaptiveColumnsController.updateCommandAdaptiveAriaLabel(oldKey, EXPAND_ARIA_NAME)\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveExpandedKey = void 0\r\n                }\r\n            },\r\n            editorFactory: {\r\n                _getFocusCellSelector: function() {\r\n                    return this.callBase() + \", .dx-adaptive-detail-row .dx-field-item > .dx-field-item-content\"\r\n                },\r\n                _getTooltipsSelector: function() {\r\n                    return this.callBase() + \", .dx-field-item-content .\" + this.addWidgetPrefix(REVERT_TOOLTIP_CLASS)\r\n                }\r\n            },\r\n            columns: {\r\n                _isColumnVisible: function(column) {\r\n                    return this.callBase(column) && !column.adaptiveHidden\r\n                }\r\n            },\r\n            keyboardNavigation: {\r\n                _isCellValid: function($cell) {\r\n                    return this.callBase.apply(this, arguments) && !$cell.hasClass(this.addWidgetPrefix(HIDDEN_COLUMN_CLASS))\r\n                },\r\n                _processNextCellInMasterDetail: function($nextCell) {\r\n                    this.callBase($nextCell);\r\n                    var isCellOrBatchMode = this._editingController.isCellOrBatchEditMode();\r\n                    if (!this._isInsideEditForm($nextCell) && $nextCell && isCellOrBatchMode) {\r\n                        eventsEngine.on($nextCell, \"focus\", (function focusHandler() {\r\n                            eventsEngine.off($nextCell, \"focus\", focusHandler);\r\n                            eventsEngine.trigger($nextCell, \"dxclick\")\r\n                        }))\r\n                    }\r\n                },\r\n                _handleTabKeyOnMasterDetailCell: function(eventTarget, direction) {\r\n                    var result = this.callBase(eventTarget, direction);\r\n                    var $currentCell = this._getFocusedCell();\r\n                    var $row = $currentCell && $currentCell.parent();\r\n                    if (!result && $row && $row.length) {\r\n                        var $dataCells = getDataCellElements($row);\r\n                        var $targetCell = \"next\" === direction ? $dataCells.last() : $dataCells.first();\r\n                        var rowIndex = $row.get(0).rowIndex;\r\n                        var adaptiveController = this._adaptiveController;\r\n                        var key = this._dataController.getKeyByRowIndex(\"next\" === direction ? rowIndex : rowIndex - 1);\r\n                        var isCellElementsEquals = $currentCell && $targetCell && $currentCell.get(0) === $targetCell.get(0);\r\n                        return adaptiveController.isAdaptiveDetailRowExpanded(key) && isCellElementsEquals\r\n                    }\r\n                    return result\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveController = this.getController(\"adaptiveColumns\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_columns_core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nexport function foreachColumnInfo(info, callback, rowIndex, offsets, columnCount, lastProcessedIndexes) {\r\n    rowIndex = rowIndex || 0;\r\n    offsets = offsets || [];\r\n    lastProcessedIndexes = lastProcessedIndexes || [];\r\n    offsets[rowIndex] = offsets[rowIndex] || 0;\r\n    var row = info[rowIndex];\r\n    var startIndex = lastProcessedIndexes[rowIndex] + 1 || 0;\r\n    var processedColumnCount = 0;\r\n    var colIndex;\r\n    if (!row) {\r\n        return\r\n    }\r\n    for (colIndex = startIndex; colIndex < row.length; colIndex++) {\r\n        var cell = row[colIndex];\r\n        var visibleIndex = colIndex + offsets[rowIndex];\r\n        var colspan = cell.colspan || 1;\r\n        foreachColumnInfo(info, callback, rowIndex + (cell.rowspan || 1), offsets, colspan, lastProcessedIndexes);\r\n        offsets[rowIndex] += colspan - 1;\r\n        processedColumnCount += colspan;\r\n        if (cell.rowspan) {\r\n            for (var i = rowIndex + 1; i < rowIndex + cell.rowspan; i++) {\r\n                offsets[i] = offsets[i] || 0;\r\n                offsets[i] += cell.colspan || 1\r\n            }\r\n        }\r\n        if (false === callback(cell, visibleIndex, rowIndex, colIndex)) {\r\n            break\r\n        }\r\n        if (void 0 !== columnCount && processedColumnCount >= columnCount) {\r\n            break\r\n        }\r\n    }\r\n    lastProcessedIndexes[rowIndex] = colIndex\r\n}\r\nexport function createColumnsInfo(info, startIndex, endIndex) {\r\n    var newInfo = [];\r\n    foreachColumnInfo(info, (function(columnInfo, visibleIndex, rowIndex) {\r\n        var cell = columnInfo;\r\n        var colspan;\r\n        var cellColspan = cell.colspan || 1;\r\n        var isVisible = visibleIndex + cellColspan - 1 >= startIndex && visibleIndex < endIndex;\r\n        newInfo[rowIndex] = newInfo[rowIndex] || [];\r\n        if (isVisible) {\r\n            if (visibleIndex < startIndex) {\r\n                colspan = cellColspan - (startIndex - visibleIndex);\r\n                visibleIndex = startIndex\r\n            } else {\r\n                colspan = cellColspan\r\n            }\r\n            if (visibleIndex + colspan > endIndex) {\r\n                colspan = endIndex - visibleIndex\r\n            }\r\n            if (colspan !== cellColspan) {\r\n                cell = extend({}, cell, {\r\n                    colspan: colspan\r\n                })\r\n            }\r\n            newInfo[rowIndex].push(cell)\r\n        } else if (visibleIndex > endIndex) {\r\n            return false\r\n        }\r\n    }));\r\n    for (var i = 0; i < newInfo.length; i++) {\r\n        newInfo[i] = newInfo[i] || []\r\n    }\r\n    return newInfo\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.adaptivity.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    adaptivityModule\r\n} from \"../grid_core/ui.grid_core.adaptivity\";\r\ngridCore.registerModule(\"adaptivity\", adaptivityModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_columns.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth,\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    createColumnsInfo\r\n} from \"./ui.grid_core.virtual_columns_core\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nvar DEFAULT_COLUMN_WIDTH = 50;\r\nvar VirtualScrollingRowsViewExtender = {\r\n    _resizeCore: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._columnsController.resize()\r\n    },\r\n    _handleScroll: function(e) {\r\n        var that = this;\r\n        var scrollable = this.getScrollable();\r\n        var left = e.scrollOffset.left;\r\n        that.callBase.apply(that, arguments);\r\n        if (that.option(\"rtlEnabled\") && scrollable) {\r\n            left = getWidth(scrollable.$content()) - getWidth(scrollable.$element()) - left\r\n        }\r\n        that._columnsController.setScrollPosition(left)\r\n    }\r\n};\r\nvar HeaderViewExtender = {\r\n    _renderCore: function() {\r\n        this.callBase.apply(this, arguments);\r\n        if (this._columnsController.isVirtualMode()) {\r\n            this._updateScrollLeftPosition()\r\n        }\r\n    }\r\n};\r\nvar ColumnsControllerExtender = function() {\r\n    var getWidths = function(columns) {\r\n        return columns.map(column => column.visibleWidth || parseFloat(column.width) || DEFAULT_COLUMN_WIDTH)\r\n    };\r\n    var members = {\r\n        init: function() {\r\n            this.callBase();\r\n            this._beginPageIndex = 0;\r\n            this._endPageIndex = 0;\r\n            this._position = 0;\r\n            this._virtualVisibleColumns = {}\r\n        },\r\n        resetColumnsCache: function() {\r\n            this.callBase();\r\n            this._virtualVisibleColumns = {}\r\n        },\r\n        getBeginPageIndex: function(position) {\r\n            var visibleColumns = this.getVisibleColumns(void 0, true);\r\n            var widths = getWidths(visibleColumns);\r\n            var currentPosition = 0;\r\n            for (var index = 0; index < widths.length; index++) {\r\n                if (currentPosition >= position) {\r\n                    return Math.floor(index / this.getColumnPageSize())\r\n                }\r\n                currentPosition += widths[index]\r\n            }\r\n            return 0\r\n        },\r\n        getTotalWidth: function() {\r\n            var width = this.option(\"width\");\r\n            if (\"number\" === typeof width) {\r\n                return width\r\n            }\r\n            return this.getController(\"resizing\")._lastWidth || getOuterWidth(this.component.$element())\r\n        },\r\n        getEndPageIndex: function(position) {\r\n            var visibleColumns = this.getVisibleColumns(void 0, true);\r\n            var widths = getWidths(visibleColumns);\r\n            var currentPosition = 0;\r\n            position += this.getTotalWidth();\r\n            for (var index = 0; index < widths.length; index++) {\r\n                if (currentPosition >= position) {\r\n                    return Math.ceil(index / this.getColumnPageSize())\r\n                }\r\n                currentPosition += widths[index]\r\n            }\r\n            return Math.ceil(widths.length / this.getColumnPageSize())\r\n        },\r\n        getColumnPageSize: function() {\r\n            return this.option(\"scrolling.columnPageSize\")\r\n        },\r\n        _fireColumnsChanged: function() {\r\n            var date = new Date;\r\n            this.columnsChanged.fire({\r\n                optionNames: {\r\n                    all: true,\r\n                    length: 1\r\n                },\r\n                changeTypes: {\r\n                    columns: true,\r\n                    virtualColumnsScrolling: true,\r\n                    length: 2\r\n                }\r\n            });\r\n            this._renderTime = new Date - date\r\n        },\r\n        getScrollingTimeout: function() {\r\n            var renderingThreshold = this.option(\"scrolling.columnRenderingThreshold\");\r\n            var renderAsync = this.option(\"scrolling.renderAsync\");\r\n            var scrollingTimeout = 0;\r\n            if (!isDefined(renderAsync) && this._renderTime > renderingThreshold || renderAsync) {\r\n                scrollingTimeout = this.option(\"scrolling.timeout\")\r\n            }\r\n            return scrollingTimeout\r\n        },\r\n        setScrollPosition: function(position) {\r\n            var scrollingTimeout = this.getScrollingTimeout();\r\n            if (scrollingTimeout > 0) {\r\n                clearTimeout(this._changedTimeout);\r\n                this._changedTimeout = setTimeout(() => {\r\n                    this._setScrollPositionCore(position)\r\n                }, scrollingTimeout)\r\n            } else {\r\n                this._setScrollPositionCore(position)\r\n            }\r\n        },\r\n        isVirtualMode: function() {\r\n            return hasWindow() && \"virtual\" === this.option(\"scrolling.columnRenderingMode\")\r\n        },\r\n        resize: function() {\r\n            this._setScrollPositionCore(this._position)\r\n        },\r\n        _setScrollPositionCore: function(position) {\r\n            if (this.isVirtualMode()) {\r\n                var beginPageIndex = this.getBeginPageIndex(position);\r\n                var endPageIndex = this.getEndPageIndex(position);\r\n                var needColumnsChanged = position < this._position ? this._beginPageIndex > beginPageIndex : this._endPageIndex < endPageIndex;\r\n                this._position = position;\r\n                if (needColumnsChanged) {\r\n                    this._beginPageIndex = beginPageIndex;\r\n                    this._endPageIndex = endPageIndex;\r\n                    this._fireColumnsChanged()\r\n                }\r\n            }\r\n        },\r\n        getFixedColumns: function(rowIndex, isBase) {\r\n            var fixedColumns = this.callBase(rowIndex);\r\n            if (this.isVirtualMode() && !isBase && fixedColumns.length) {\r\n                var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\r\n                fixedColumns[transparentColumnIndex].colspan = this.getVisibleColumns().length - this.callBase().length + 1;\r\n                return fixedColumns\r\n            }\r\n            return fixedColumns\r\n        },\r\n        getVisibleColumns: function(rowIndex, isBase) {\r\n            if (isBase || !this.isVirtualMode()) {\r\n                return this.callBase(rowIndex)\r\n            }\r\n            if (!this._beginPageIndex && !this._endPageIndex) {\r\n                this._beginPageIndex = this.getBeginPageIndex(this._position);\r\n                this._endPageIndex = this.getEndPageIndex(this._position)\r\n            }\r\n            var beginPageIndex = this._beginPageIndex;\r\n            var endPageIndex = this._endPageIndex;\r\n            var visibleColumnsHash = rowIndex + \"-\" + beginPageIndex + \"-\" + endPageIndex;\r\n            if (this._virtualVisibleColumns[visibleColumnsHash]) {\r\n                return this._virtualVisibleColumns[visibleColumnsHash]\r\n            }\r\n            var visibleColumns = this.callBase();\r\n            var rowCount = this.getRowCount();\r\n            var pageSize = this.getColumnPageSize();\r\n            var startIndex = beginPageIndex * pageSize;\r\n            var endIndex = endPageIndex * pageSize;\r\n            var fixedColumns = this.getFixedColumns(void 0, true);\r\n            var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\r\n            var beginFixedColumnCount = fixedColumns.length ? transparentColumnIndex : 0;\r\n            var beginFixedColumns = visibleColumns.slice(0, beginFixedColumnCount);\r\n            var beginColumns = visibleColumns.slice(beginFixedColumnCount, startIndex);\r\n            var beginWidth = getWidths(beginColumns).reduce((a, b) => a + b, 0);\r\n            if (!beginWidth) {\r\n                startIndex = 0\r\n            }\r\n            var endFixedColumnCount = fixedColumns.length ? fixedColumns.length - transparentColumnIndex - 1 : 0;\r\n            var endFixedColumns = visibleColumns.slice(visibleColumns.length - endFixedColumnCount);\r\n            var endColumns = visibleColumns.slice(endIndex, visibleColumns.length - endFixedColumnCount);\r\n            var endWidth = getWidths(endColumns).reduce((a, b) => a + b, 0);\r\n            if (!endWidth) {\r\n                endIndex = visibleColumns.length\r\n            }\r\n            if (rowCount > 1 && \"number\" === typeof rowIndex) {\r\n                var columnsInfo = [];\r\n                for (var i = 0; i < rowCount; i++) {\r\n                    columnsInfo.push(this.callBase(i))\r\n                }\r\n                beginFixedColumns = createColumnsInfo(columnsInfo, 0, beginFixedColumns.length)[rowIndex] || [];\r\n                endFixedColumns = createColumnsInfo(columnsInfo, visibleColumns.length - endFixedColumns.length, visibleColumns.length)[rowIndex] || [];\r\n                visibleColumns = createColumnsInfo(columnsInfo, startIndex, endIndex)[rowIndex] || []\r\n            } else {\r\n                visibleColumns = visibleColumns.slice(startIndex, endIndex)\r\n            }\r\n            if (beginWidth) {\r\n                visibleColumns.unshift({\r\n                    command: \"virtual\",\r\n                    width: beginWidth\r\n                });\r\n                visibleColumns = beginFixedColumns.concat(visibleColumns)\r\n            }\r\n            if (endWidth) {\r\n                visibleColumns.push({\r\n                    command: \"virtual\",\r\n                    width: endWidth\r\n                });\r\n                visibleColumns = visibleColumns.concat(endFixedColumns)\r\n            }\r\n            this._virtualVisibleColumns[visibleColumnsHash] = visibleColumns;\r\n            return visibleColumns\r\n        },\r\n        getColumnIndexOffset: function() {\r\n            var offset = 0;\r\n            if (this._beginPageIndex > 0) {\r\n                var fixedColumns = this.getFixedColumns();\r\n                var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\r\n                var leftFixedColumnCount = transparentColumnIndex >= 0 ? transparentColumnIndex : 0;\r\n                offset = this._beginPageIndex * this.getColumnPageSize() - leftFixedColumnCount - 1\r\n            }\r\n            return offset > 0 ? offset : 0\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._changedTimeout);\r\n            this.callBase.apply(this, arguments)\r\n        }\r\n    };\r\n    return members\r\n}();\r\nexport var virtualColumnsModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            scrolling: {\r\n                columnRenderingMode: \"standard\",\r\n                columnPageSize: 5,\r\n                columnRenderingThreshold: 300\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            columns: ColumnsControllerExtender\r\n        },\r\n        views: {\r\n            columnHeadersView: HeaderViewExtender,\r\n            rowsView: VirtualScrollingRowsViewExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.virtual_columns.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    virtualColumnsModule\r\n} from \"../grid_core/ui.grid_core.virtual_columns\";\r\ngridCore.registerModule(\"virtualColumns\", virtualColumnsModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.export_mixin.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nexport default {\r\n    _getEmptyCell: function() {\r\n        return {\r\n            text: \"\",\r\n            value: void 0,\r\n            colspan: 1,\r\n            rowspan: 1\r\n        }\r\n    },\r\n    _defaultSetter: function(value) {\r\n        return !value ? 1 : value\r\n    },\r\n    _cloneItem: function(item) {\r\n        return extend({}, item, this._getEmptyCell())\r\n    },\r\n    _prepareItems: function(items) {\r\n        var that = this;\r\n        var resultItems = [];\r\n        var cols = (items[0] || []).reduce((sum, item) => sum + that._defaultSetter(item.colspan), 0);\r\n        var getItem = function(items) {\r\n            var rowIndex = 0;\r\n            var cellIndex = 0;\r\n            return function() {\r\n                var row = items[rowIndex] || [];\r\n                var item = row[cellIndex++];\r\n                if (cellIndex >= row.length) {\r\n                    rowIndex++;\r\n                    cellIndex = 0\r\n                }\r\n                if (item) {\r\n                    item.colspan = that._defaultSetter(item.colspan);\r\n                    item.rowspan = that._defaultSetter(item.rowspan)\r\n                }\r\n                return item\r\n            }\r\n        }(items);\r\n\r\n        function addItem(rowIndex, cellIndex, item) {\r\n            var row = resultItems[rowIndex] = resultItems[rowIndex] || [];\r\n            row[cellIndex] = item;\r\n            if (item.colspan > 1 || item.rowspan > 1) {\r\n                var clone = that._cloneItem(item);\r\n                for (var c = 1; c < item.colspan; c++) {\r\n                    addItem(rowIndex, cellIndex + c, clone)\r\n                }\r\n                for (var r = 1; r < item.rowspan; r++) {\r\n                    for (var _c = 0; _c < item.colspan; _c++) {\r\n                        addItem(rowIndex + r, cellIndex + _c, clone)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var item = getItem();\r\n        var rowIndex = 0;\r\n        while (item) {\r\n            for (var cellIndex = 0; cellIndex < cols; cellIndex++) {\r\n                if (!item) {\r\n                    break\r\n                }\r\n                if (resultItems[rowIndex] && resultItems[rowIndex][cellIndex]) {\r\n                    continue\r\n                }\r\n                addItem(rowIndex, cellIndex, item);\r\n                cellIndex += item.colspan - 1;\r\n                item = getItem()\r\n            }\r\n            rowIndex++\r\n        }\r\n        return resultItems\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/button_group.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport Widget from \"./widget/ui.widget\";\r\nimport Button from \"./button\";\r\nimport CollectionWidget from \"./collection/ui.collection_widget.edit\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    isDefined,\r\n    isFunction\r\n} from \"../core/utils/type\";\r\nimport {\r\n    BindableTemplate\r\n} from \"../core/templates/bindable_template\";\r\nvar BUTTON_GROUP_CLASS = \"dx-buttongroup\";\r\nvar BUTTON_GROUP_WRAPPER_CLASS = BUTTON_GROUP_CLASS + \"-wrapper\";\r\nvar BUTTON_GROUP_ITEM_CLASS = BUTTON_GROUP_CLASS + \"-item\";\r\nvar BUTTON_GROUP_FIRST_ITEM_CLASS = BUTTON_GROUP_CLASS + \"-first-item\";\r\nvar BUTTON_GROUP_LAST_ITEM_CLASS = BUTTON_GROUP_CLASS + \"-last-item\";\r\nvar BUTTON_GROUP_ITEM_HAS_WIDTH = BUTTON_GROUP_ITEM_CLASS + \"-has-width\";\r\nvar SHAPE_STANDARD_CLASS = \"dx-shape-standard\";\r\nvar ButtonCollection = CollectionWidget.inherit({\r\n    _initTemplates() {\r\n        this.callBase();\r\n        this._templateManager.addDefaultTemplates({\r\n            item: new BindableTemplate(($container, data, model) => {\r\n                this._prepareItemStyles($container);\r\n                var template = this.option(\"buttonTemplate\");\r\n                this._createComponent($container, Button, extend({}, model, data, this._getBasicButtonOptions(), {\r\n                    _templateData: this._hasCustomTemplate(template) ? model : {},\r\n                    template: model.template || template\r\n                }))\r\n            }, [\"text\", \"type\", \"icon\", \"disabled\", \"visible\", \"hint\"], this.option(\"integrationOptions.watchMethod\"))\r\n        })\r\n    },\r\n    _getBasicButtonOptions() {\r\n        return {\r\n            focusStateEnabled: false,\r\n            onClick: null,\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            stylingMode: this.option(\"stylingMode\")\r\n        }\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            itemTemplateProperty: null\r\n        })\r\n    },\r\n    _hasCustomTemplate(template) {\r\n        return isFunction(template) || this.option(\"integrationOptions.templates\")[template]\r\n    },\r\n    _prepareItemStyles($item) {\r\n        var itemIndex = $item.data(\"dxItemIndex\");\r\n        0 === itemIndex && $item.addClass(BUTTON_GROUP_FIRST_ITEM_CLASS);\r\n        var items = this.option(\"items\");\r\n        items && itemIndex === items.length - 1 && $item.addClass(BUTTON_GROUP_LAST_ITEM_CLASS);\r\n        $item.addClass(SHAPE_STANDARD_CLASS)\r\n    },\r\n    _renderItemContent(args) {\r\n        args.container = $(args.container).parent();\r\n        return this.callBase(args)\r\n    },\r\n    _renderItemContentByNode: function(args, $node) {\r\n        args.container = $(args.container.children().first());\r\n        return this.callBase(args, $node)\r\n    },\r\n    _focusTarget() {\r\n        return this.$element().parent()\r\n    },\r\n    _keyboardEventBindingTarget() {\r\n        return this._focusTarget()\r\n    },\r\n    _refreshContent() {\r\n        this._prepareContent();\r\n        this._renderContent()\r\n    },\r\n    _itemClass: () => BUTTON_GROUP_ITEM_CLASS,\r\n    _itemSelectHandler: function(e) {\r\n        if (\"single\" === this.option(\"selectionMode\") && this.isItemSelected(e.currentTarget)) {\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    }\r\n});\r\nvar ButtonGroup = Widget.inherit({\r\n    _getDefaultOptions() {\r\n        return extend(this.callBase(), {\r\n            hoverStateEnabled: true,\r\n            focusStateEnabled: true,\r\n            selectionMode: \"single\",\r\n            selectedItems: [],\r\n            selectedItemKeys: [],\r\n            stylingMode: \"contained\",\r\n            keyExpr: \"text\",\r\n            items: [],\r\n            buttonTemplate: \"content\",\r\n            onSelectionChanged: null,\r\n            onItemClick: null\r\n        })\r\n    },\r\n    _init() {\r\n        this.callBase();\r\n        this._createItemClickAction()\r\n    },\r\n    _createItemClickAction() {\r\n        this._itemClickAction = this._createActionByOption(\"onItemClick\")\r\n    },\r\n    _initMarkup() {\r\n        this.setAria(\"role\", \"group\");\r\n        this.$element().addClass(BUTTON_GROUP_CLASS);\r\n        this._renderButtons();\r\n        this._syncSelectionOptions();\r\n        this.callBase()\r\n    },\r\n    _fireSelectionChangeEvent: function(addedItems, removedItems) {\r\n        this._createActionByOption(\"onSelectionChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })({\r\n            addedItems: addedItems,\r\n            removedItems: removedItems\r\n        })\r\n    },\r\n    _renderButtons() {\r\n        var $buttons = $(\"<div>\").addClass(BUTTON_GROUP_WRAPPER_CLASS).appendTo(this.$element());\r\n        var selectedItems = this.option(\"selectedItems\");\r\n        var options = {\r\n            selectionMode: this.option(\"selectionMode\"),\r\n            items: this.option(\"items\"),\r\n            keyExpr: this.option(\"keyExpr\"),\r\n            buttonTemplate: this.option(\"buttonTemplate\"),\r\n            scrollingEnabled: false,\r\n            selectedItemKeys: this.option(\"selectedItemKeys\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            stylingMode: this.option(\"stylingMode\"),\r\n            accessKey: this.option(\"accessKey\"),\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            noDataText: \"\",\r\n            selectionRequired: false,\r\n            onItemRendered: e => {\r\n                var width = this.option(\"width\");\r\n                isDefined(width) && $(e.itemElement).addClass(BUTTON_GROUP_ITEM_HAS_WIDTH)\r\n            },\r\n            onSelectionChanged: e => {\r\n                this._syncSelectionOptions();\r\n                this._fireSelectionChangeEvent(e.addedItems, e.removedItems)\r\n            },\r\n            onItemClick: e => {\r\n                this._itemClickAction(e)\r\n            }\r\n        };\r\n        if (isDefined(selectedItems) && selectedItems.length) {\r\n            options.selectedItems = selectedItems\r\n        }\r\n        this._buttonsCollection = this._createComponent($buttons, ButtonCollection, options)\r\n    },\r\n    _syncSelectionOptions() {\r\n        this._setOptionWithoutOptionChange(\"selectedItems\", this._buttonsCollection.option(\"selectedItems\"));\r\n        this._setOptionWithoutOptionChange(\"selectedItemKeys\", this._buttonsCollection.option(\"selectedItemKeys\"))\r\n    },\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"stylingMode\":\r\n            case \"selectionMode\":\r\n            case \"keyExpr\":\r\n            case \"buttonTemplate\":\r\n            case \"items\":\r\n            case \"activeStateEnabled\":\r\n            case \"focusStateEnabled\":\r\n            case \"hoverStateEnabled\":\r\n            case \"tabIndex\":\r\n                this._invalidate();\r\n                break;\r\n            case \"selectedItemKeys\":\r\n            case \"selectedItems\":\r\n                this._buttonsCollection.option(args.name, args.value);\r\n                break;\r\n            case \"onItemClick\":\r\n                this._createItemClickAction();\r\n                break;\r\n            case \"onSelectionChanged\":\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._buttonsCollection.itemElements().toggleClass(BUTTON_GROUP_ITEM_HAS_WIDTH, !!args.value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxButtonGroup\", ButtonGroup);\r\nexport default ButtonGroup;\r\n","/**\r\n * DevExtreme (esm/ui/drop_down_button.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport Widget from \"./widget/ui.widget\";\r\nimport {\r\n    FunctionTemplate\r\n} from \"../core/templates/function_template\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport ButtonGroup from \"./button_group\";\r\nimport Popup from \"./popup\";\r\nimport List from \"./list_light\";\r\nimport {\r\n    compileGetter\r\n} from \"../core/utils/data\";\r\nimport {\r\n    getPublicElement\r\n} from \"../core/element\";\r\nimport {\r\n    getImageContainer\r\n} from \"../core/utils/icon\";\r\nimport DataHelperMixin from \"../data_helper\";\r\nimport {\r\n    DataSource\r\n} from \"../data/data_source/data_source\";\r\nimport ArrayStore from \"../data/array_store\";\r\nimport {\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    isPlainObject,\r\n    isDefined\r\n} from \"../core/utils/type\";\r\nimport {\r\n    ensureDefined,\r\n    noop\r\n} from \"../core/utils/common\";\r\nimport Guid from \"../core/guid\";\r\nimport {\r\n    getElementWidth,\r\n    getSizeValue\r\n} from \"./drop_down_editor/utils\";\r\nimport messageLocalization from \"../localization/message\";\r\nvar DROP_DOWN_BUTTON_CLASS = \"dx-dropdownbutton\";\r\nvar DROP_DOWN_BUTTON_CONTENT = \"dx-dropdownbutton-content\";\r\nvar DROP_DOWN_BUTTON_ACTION_CLASS = \"dx-dropdownbutton-action\";\r\nvar DROP_DOWN_BUTTON_TOGGLE_CLASS = \"dx-dropdownbutton-toggle\";\r\nvar DROP_DOWN_BUTTON_HAS_ARROW_CLASS = \"dx-dropdownbutton-has-arrow\";\r\nvar DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS = \"dx-dropdownbutton-popup-wrapper\";\r\nvar DROP_DOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar DX_BUTTON_TEXT_CLASS = \"dx-button-text\";\r\nvar DX_ICON_RIGHT_CLASS = \"dx-icon-right\";\r\nvar DropDownButton = Widget.inherit({\r\n    _getDefaultOptions() {\r\n        return extend(this.callBase(), {\r\n            itemTemplate: \"item\",\r\n            keyExpr: \"this\",\r\n            displayExpr: void 0,\r\n            selectedItem: null,\r\n            selectedItemKey: null,\r\n            stylingMode: \"outlined\",\r\n            deferRendering: true,\r\n            noDataText: messageLocalization.format(\"dxCollectionWidget-noDataText\"),\r\n            useSelectMode: false,\r\n            splitButton: false,\r\n            showArrowIcon: true,\r\n            text: \"\",\r\n            icon: void 0,\r\n            onButtonClick: null,\r\n            onSelectionChanged: null,\r\n            onItemClick: null,\r\n            opened: false,\r\n            items: null,\r\n            dataSource: null,\r\n            focusStateEnabled: true,\r\n            hoverStateEnabled: true,\r\n            dropDownOptions: {},\r\n            dropDownContentTemplate: \"content\",\r\n            wrapItemText: false,\r\n            useItemTextAsTitle: true,\r\n            grouped: false,\r\n            groupTemplate: \"group\",\r\n            buttonGroupOptions: {}\r\n        })\r\n    },\r\n    _setOptionsByReference() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            selectedItem: true\r\n        })\r\n    },\r\n    _init() {\r\n        this.callBase();\r\n        this._createItemClickAction();\r\n        this._createActionClickAction();\r\n        this._createSelectionChangedAction();\r\n        this._initDataSource();\r\n        this._compileKeyGetter();\r\n        this._compileDisplayGetter();\r\n        this._itemsToDataSource(this.option(\"items\"));\r\n        this._options.cache(\"buttonGroupOptions\", this.option(\"buttonGroupOptions\"));\r\n        this._options.cache(\"dropDownOptions\", this.option(\"dropDownOptions\"))\r\n    },\r\n    _initTemplates() {\r\n        this._templateManager.addDefaultTemplates({\r\n            content: new FunctionTemplate(options => {\r\n                var $popupContent = $(options.container);\r\n                var $listContainer = $(\"<div>\").appendTo($popupContent);\r\n                this._list = this._createComponent($listContainer, List, this._listOptions());\r\n                this._list.registerKeyHandler(\"escape\", this._escHandler.bind(this));\r\n                this._list.registerKeyHandler(\"tab\", this._escHandler.bind(this));\r\n                this._list.registerKeyHandler(\"leftArrow\", this._escHandler.bind(this));\r\n                this._list.registerKeyHandler(\"rightArrow\", this._escHandler.bind(this))\r\n            })\r\n        });\r\n        this.callBase()\r\n    },\r\n    _itemsToDataSource: function(value) {\r\n        if (!this._dataSource) {\r\n            this._dataSource = new DataSource({\r\n                store: new ArrayStore({\r\n                    key: this._getKey(),\r\n                    data: value\r\n                }),\r\n                pageSize: 0\r\n            })\r\n        }\r\n    },\r\n    _getKey: function() {\r\n        var _this$_dataSource;\r\n        var keyExpr = this.option(\"keyExpr\");\r\n        var storeKey = null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.key();\r\n        return isDefined(storeKey) && (!isDefined(keyExpr) || \"this\" === keyExpr) ? storeKey : keyExpr\r\n    },\r\n    _compileKeyGetter() {\r\n        this._keyGetter = compileGetter(this._getKey())\r\n    },\r\n    _compileDisplayGetter() {\r\n        this._displayGetter = compileGetter(this.option(\"displayExpr\"))\r\n    },\r\n    _initMarkup() {\r\n        this.callBase();\r\n        this.$element().addClass(DROP_DOWN_BUTTON_CLASS);\r\n        this._renderButtonGroup();\r\n        this._updateArrowClass();\r\n        if (isDefined(this.option(\"selectedItemKey\"))) {\r\n            this._loadSelectedItem().done(this._updateActionButton.bind(this))\r\n        }\r\n    },\r\n    _renderFocusTarget: noop,\r\n    _render() {\r\n        if (!this.option(\"deferRendering\") || this.option(\"opened\")) {\r\n            this._renderPopup()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _renderContentImpl() {\r\n        if (this._popup) {\r\n            this._renderPopupContent()\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _loadSelectedItem() {\r\n        var _this$_loadSingleDefe;\r\n        null === (_this$_loadSingleDefe = this._loadSingleDeferred) || void 0 === _this$_loadSingleDefe ? void 0 : _this$_loadSingleDefe.reject();\r\n        var d = new Deferred;\r\n        if (this._list && void 0 !== this._lastSelectedItemData) {\r\n            var cachedResult = this.option(\"useSelectMode\") ? this._list.option(\"selectedItem\") : this._lastSelectedItemData;\r\n            return d.resolve(cachedResult)\r\n        }\r\n        this._lastSelectedItemData = void 0;\r\n        var selectedItemKey = this.option(\"selectedItemKey\");\r\n        this._loadSingle(this._getKey(), selectedItemKey).done(d.resolve).fail(() => {\r\n            d.resolve(null)\r\n        });\r\n        this._loadSingleDeferred = d;\r\n        return d.promise()\r\n    },\r\n    _createActionClickAction() {\r\n        this._actionClickAction = this._createActionByOption(\"onButtonClick\")\r\n    },\r\n    _createSelectionChangedAction() {\r\n        this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\")\r\n    },\r\n    _createItemClickAction() {\r\n        this._itemClickAction = this._createActionByOption(\"onItemClick\")\r\n    },\r\n    _fireSelectionChangedAction(_ref) {\r\n        var {\r\n            previousValue: previousValue,\r\n            value: value\r\n        } = _ref;\r\n        this._selectionChangedAction({\r\n            item: value,\r\n            previousItem: previousValue\r\n        })\r\n    },\r\n    _fireItemClickAction(_ref2) {\r\n        var {\r\n            event: event,\r\n            itemElement: itemElement,\r\n            itemData: itemData\r\n        } = _ref2;\r\n        return this._itemClickAction({\r\n            event: event,\r\n            itemElement: itemElement,\r\n            itemData: this._actionItem || itemData\r\n        })\r\n    },\r\n    _actionButtonConfig() {\r\n        return {\r\n            text: this.option(\"text\"),\r\n            icon: this.option(\"icon\"),\r\n            elementAttr: {\r\n                class: DROP_DOWN_BUTTON_ACTION_CLASS\r\n            }\r\n        }\r\n    },\r\n    _getButtonGroupItems() {\r\n        var items = [];\r\n        items.push(this._actionButtonConfig());\r\n        if (this.option(\"splitButton\")) {\r\n            items.push({\r\n                icon: \"spindown\",\r\n                elementAttr: {\r\n                    class: DROP_DOWN_BUTTON_TOGGLE_CLASS\r\n                }\r\n            })\r\n        }\r\n        return items\r\n    },\r\n    _buttonGroupItemClick(_ref3) {\r\n        var {\r\n            event: event,\r\n            itemData: itemData\r\n        } = _ref3;\r\n        var isActionButton = itemData.elementAttr.class === DROP_DOWN_BUTTON_ACTION_CLASS;\r\n        var isToggleButton = itemData.elementAttr.class === DROP_DOWN_BUTTON_TOGGLE_CLASS;\r\n        if (isToggleButton) {\r\n            this.toggle()\r\n        } else if (isActionButton) {\r\n            this._actionClickAction({\r\n                event: event,\r\n                selectedItem: this.option(\"selectedItem\")\r\n            });\r\n            if (!this.option(\"splitButton\")) {\r\n                this.toggle()\r\n            }\r\n        }\r\n    },\r\n    _buttonGroupOptions() {\r\n        var buttonTemplate = this.option(\"splitButton\") || !this.option(\"showArrowIcon\") ? \"content\" : (_ref4, buttonContent) => {\r\n            var {\r\n                text: text,\r\n                icon: icon\r\n            } = _ref4;\r\n            var $firstIcon = getImageContainer(icon);\r\n            var $textContainer = text ? $(\"<span>\").text(text).addClass(DX_BUTTON_TEXT_CLASS) : void 0;\r\n            var $secondIcon = getImageContainer(\"spindown\").addClass(DX_ICON_RIGHT_CLASS);\r\n            $(buttonContent).append($firstIcon, $textContainer, $secondIcon)\r\n        };\r\n        return extend({\r\n            items: this._getButtonGroupItems(),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            onItemClick: this._buttonGroupItemClick.bind(this),\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            stylingMode: this.option(\"stylingMode\"),\r\n            selectionMode: \"none\",\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            onKeyboardHandled: e => this._keyboardHandler(e),\r\n            buttonTemplate: buttonTemplate\r\n        }, this._options.cache(\"buttonGroupOptions\"))\r\n    },\r\n    _renderPopupContent() {\r\n        var $content = this._popup.$content();\r\n        var template = this._getTemplateByOption(\"dropDownContentTemplate\");\r\n        $content.empty();\r\n        this._popupContentId = \"dx-\" + new Guid;\r\n        this.setAria(\"id\", this._popupContentId, $content);\r\n        return template.render({\r\n            container: getPublicElement($content),\r\n            model: this.option(\"items\") || this._dataSource\r\n        })\r\n    },\r\n    _popupOptions() {\r\n        var horizontalAlignment = this.option(\"rtlEnabled\") ? \"right\" : \"left\";\r\n        return extend({\r\n            dragEnabled: false,\r\n            focusStateEnabled: false,\r\n            deferRendering: this.option(\"deferRendering\"),\r\n            closeOnOutsideClick: e => {\r\n                var $element = this.$element();\r\n                var $buttonClicked = $(e.target).closest(\".\".concat(DROP_DOWN_BUTTON_CLASS));\r\n                return !$buttonClicked.is($element)\r\n            },\r\n            showTitle: false,\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    duration: 0,\r\n                    from: 0,\r\n                    to: 1\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    duration: 400,\r\n                    from: 1,\r\n                    to: 0\r\n                }\r\n            },\r\n            _ignoreFunctionValueDeprecation: true,\r\n            width: () => getElementWidth(this.$element()),\r\n            height: \"auto\",\r\n            shading: false,\r\n            position: {\r\n                of: this.$element(),\r\n                collision: \"flipfit\",\r\n                my: horizontalAlignment + \" top\",\r\n                at: horizontalAlignment + \" bottom\"\r\n            },\r\n            wrapperAttr: {\r\n                class: DROP_DOWN_EDITOR_OVERLAY_CLASS\r\n            }\r\n        }, this._options.cache(\"dropDownOptions\"), {\r\n            visible: this.option(\"opened\")\r\n        })\r\n    },\r\n    _listOptions() {\r\n        var selectedItemKey = this.option(\"selectedItemKey\");\r\n        var useSelectMode = this.option(\"useSelectMode\");\r\n        return {\r\n            selectionMode: useSelectMode ? \"single\" : \"none\",\r\n            wrapItemText: this.option(\"wrapItemText\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            useItemTextAsTitle: this.option(\"useItemTextAsTitle\"),\r\n            onContentReady: () => this._fireContentReadyAction(),\r\n            selectedItemKeys: isDefined(selectedItemKey) && useSelectMode ? [selectedItemKey] : [],\r\n            grouped: this.option(\"grouped\"),\r\n            groupTemplate: this.option(\"groupTemplate\"),\r\n            keyExpr: this._getKey(),\r\n            noDataText: this.option(\"noDataText\"),\r\n            displayExpr: this.option(\"displayExpr\"),\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            items: this.option(\"items\"),\r\n            dataSource: this._dataSource,\r\n            onItemClick: e => {\r\n                if (!this.option(\"useSelectMode\")) {\r\n                    this._lastSelectedItemData = e.itemData\r\n                }\r\n                this.option(\"selectedItemKey\", this._keyGetter(e.itemData));\r\n                var actionResult = this._fireItemClickAction(e);\r\n                if (false !== actionResult) {\r\n                    this.toggle(false);\r\n                    this._buttonGroup.focus()\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _upDownKeyHandler() {\r\n        if (this._popup && this._popup.option(\"visible\") && this._list) {\r\n            this._list.focus()\r\n        } else {\r\n            this.open()\r\n        }\r\n        return true\r\n    },\r\n    _escHandler() {\r\n        this.close();\r\n        this._buttonGroup.focus();\r\n        return true\r\n    },\r\n    _tabHandler() {\r\n        this.close();\r\n        return true\r\n    },\r\n    _renderPopup() {\r\n        var $popup = $(\"<div>\");\r\n        this.$element().append($popup);\r\n        this._popup = this._createComponent($popup, Popup, this._popupOptions());\r\n        this._popup.$content().addClass(DROP_DOWN_BUTTON_CONTENT);\r\n        this._popup.$wrapper().addClass(DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS);\r\n        this._popup.on(\"hiding\", this._popupHidingHandler.bind(this));\r\n        this._popup.on(\"showing\", this._popupShowingHandler.bind(this));\r\n        this._bindInnerWidgetOptions(this._popup, \"dropDownOptions\")\r\n    },\r\n    _popupHidingHandler() {\r\n        this.option(\"opened\", false);\r\n        this._setAriaExpanded(false)\r\n    },\r\n    _popupOptionChanged: function(args) {\r\n        var options = Widget.getOptionsFromContainer(args);\r\n        this._setPopupOption(options);\r\n        var optionsKeys = Object.keys(options);\r\n        if (-1 !== optionsKeys.indexOf(\"width\") || -1 !== optionsKeys.indexOf(\"height\")) {\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        var popupWidth = getSizeValue(this.option(\"dropDownOptions.width\"));\r\n        if (void 0 === popupWidth) {\r\n            this._setPopupOption(\"width\", () => getElementWidth(this.$element()))\r\n        }\r\n    },\r\n    _setPopupOption: function(optionName, value) {\r\n        this._setWidgetOption(\"_popup\", arguments)\r\n    },\r\n    _popupShowingHandler() {\r\n        this.option(\"opened\", true);\r\n        this._setAriaExpanded(true)\r\n    },\r\n    _setAriaExpanded(value) {\r\n        this._ariaExpandedElements.forEach(ariaElement => {\r\n            this.setAria({\r\n                expanded: value,\r\n                owns: value ? this._popupContentId : void 0\r\n            }, $(ariaElement))\r\n        })\r\n    },\r\n    _renderButtonGroup() {\r\n        var $buttonGroup = this._buttonGroup && this._buttonGroup.$element() || $(\"<div>\");\r\n        if (!this._buttonGroup) {\r\n            this.$element().append($buttonGroup)\r\n        }\r\n        this._buttonGroup = this._createComponent($buttonGroup, ButtonGroup, this._buttonGroupOptions());\r\n        var buttonElements = this._buttonGroup.$element().find(\".dx-button\").toArray();\r\n        this._ariaExpandedElements = [...buttonElements, this.$element()];\r\n        this._buttonGroup.registerKeyHandler(\"downArrow\", this._upDownKeyHandler.bind(this));\r\n        this._buttonGroup.registerKeyHandler(\"tab\", this._tabHandler.bind(this));\r\n        this._buttonGroup.registerKeyHandler(\"upArrow\", this._upDownKeyHandler.bind(this));\r\n        this._buttonGroup.registerKeyHandler(\"escape\", this._escHandler.bind(this));\r\n        this._bindInnerWidgetOptions(this._buttonGroup, \"buttonGroupOptions\");\r\n        this._setAriaExpanded(this.option(\"opened\"))\r\n    },\r\n    _updateArrowClass() {\r\n        var hasArrow = this.option(\"splitButton\") || this.option(\"showArrowIcon\");\r\n        this.$element().toggleClass(DROP_DOWN_BUTTON_HAS_ARROW_CLASS, hasArrow)\r\n    },\r\n    toggle(visible) {\r\n        if (!this._popup) {\r\n            this._renderPopup();\r\n            this._renderContent()\r\n        }\r\n        return this._popup.toggle(visible)\r\n    },\r\n    open() {\r\n        return this.toggle(true)\r\n    },\r\n    close() {\r\n        return this.toggle(false)\r\n    },\r\n    _setListOption(name, value) {\r\n        this._list && this._list.option(name, value)\r\n    },\r\n    _getDisplayValue(item) {\r\n        var isPrimitiveItem = !isPlainObject(item);\r\n        var displayValue = isPrimitiveItem ? item : this._displayGetter(item);\r\n        return !isPlainObject(displayValue) ? String(ensureDefined(displayValue, \"\")) : \"\"\r\n    },\r\n    _updateActionButton(selectedItem) {\r\n        if (this.option(\"useSelectMode\")) {\r\n            this.option({\r\n                text: this._getDisplayValue(selectedItem),\r\n                icon: isPlainObject(selectedItem) ? selectedItem.icon : void 0\r\n            })\r\n        }\r\n        this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem);\r\n        this._setOptionWithoutOptionChange(\"selectedItemKey\", this._keyGetter(selectedItem))\r\n    },\r\n    _clean() {\r\n        this._list && this._list.$element().remove();\r\n        this._popup && this._popup.$element().remove()\r\n    },\r\n    _selectedItemKeyChanged(value) {\r\n        this._setListOption(\"selectedItemKeys\", this.option(\"useSelectMode\") && isDefined(value) ? [value] : []);\r\n        var previousItem = this.option(\"selectedItem\");\r\n        this._loadSelectedItem().done(selectedItem => {\r\n            this._updateActionButton(selectedItem);\r\n            if (this._displayGetter(previousItem) !== this._displayGetter(selectedItem)) {\r\n                this._fireSelectionChangedAction({\r\n                    previousValue: previousItem,\r\n                    value: selectedItem\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _actionButtonOptionChanged(_ref5) {\r\n        var {\r\n            name: name,\r\n            value: value\r\n        } = _ref5;\r\n        var newConfig = {};\r\n        newConfig[name] = value;\r\n        this._buttonGroup.option(\"items[0]\", extend({}, this._actionButtonConfig(), newConfig));\r\n        this._popup && this._popup.repaint()\r\n    },\r\n    _selectModeChanged(value) {\r\n        if (value) {\r\n            this._setListOption(\"selectionMode\", \"single\");\r\n            var selectedItemKey = this.option(\"selectedItemKey\");\r\n            this._setListOption(\"selectedItemKeys\", isDefined(selectedItemKey) ? [selectedItemKey] : []);\r\n            this._selectedItemKeyChanged(this.option(\"selectedItemKey\"))\r\n        } else {\r\n            this._setListOption(\"selectionMode\", \"none\");\r\n            this.option({\r\n                selectedItemKey: void 0,\r\n                selectedItem: void 0\r\n            });\r\n            this._actionButtonOptionChanged({\r\n                text: this.option(\"text\")\r\n            })\r\n        }\r\n    },\r\n    _updateItemCollection(optionName) {\r\n        var selectedItemKey = this.option(\"selectedItemKey\");\r\n        this._setListOption(\"selectedItem\", null);\r\n        this._setWidgetOption(\"_list\", [optionName]);\r\n        if (isDefined(selectedItemKey)) {\r\n            this._loadSelectedItem().done(selectedItem => {\r\n                this._setListOption(\"selectedItemKeys\", [selectedItemKey]);\r\n                this._setListOption(\"selectedItem\", selectedItem)\r\n            }).fail(error => {\r\n                this._setListOption(\"selectedItemKeys\", [])\r\n            }).always(this._updateActionButton.bind(this))\r\n        }\r\n    },\r\n    _updateDataSource: function() {\r\n        var items = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._dataSource.items();\r\n        this._dataSource = void 0;\r\n        this._itemsToDataSource(items);\r\n        this._updateKeyExpr()\r\n    },\r\n    _updateKeyExpr: function() {\r\n        this._compileKeyGetter();\r\n        this._setListOption(\"keyExpr\", this._getKey())\r\n    },\r\n    focus: function() {\r\n        this._buttonGroup.focus()\r\n    },\r\n    _optionChanged(args) {\r\n        var _this$_popup;\r\n        var {\r\n            name: name,\r\n            value: value\r\n        } = args;\r\n        switch (name) {\r\n            case \"useSelectMode\":\r\n                this._selectModeChanged(value);\r\n                break;\r\n            case \"splitButton\":\r\n                this._updateArrowClass();\r\n                this._renderButtonGroup();\r\n                break;\r\n            case \"displayExpr\":\r\n                this._compileDisplayGetter();\r\n                this._setListOption(name, value);\r\n                this._updateActionButton(this.option(\"selectedItem\"));\r\n                break;\r\n            case \"keyExpr\":\r\n                this._updateDataSource();\r\n                break;\r\n            case \"buttonGroupOptions\":\r\n                this._innerWidgetOptionChanged(this._buttonGroup, args);\r\n                break;\r\n            case \"dropDownOptions\":\r\n                if (\"dropDownOptions.visible\" === args.fullName) {\r\n                    break\r\n                }\r\n                if (void 0 !== args.value.visible) {\r\n                    delete args.value.visible\r\n                }\r\n                this._popupOptionChanged(args);\r\n                this._innerWidgetOptionChanged(this._popup, args);\r\n                break;\r\n            case \"opened\":\r\n                this.toggle(value);\r\n                break;\r\n            case \"focusStateEnabled\":\r\n            case \"hoverStateEnabled\":\r\n                this._setListOption(name, value);\r\n                this._buttonGroup.option(name, value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"items\":\r\n                this._updateDataSource(this.option(\"items\"));\r\n                this._updateItemCollection(name);\r\n                break;\r\n            case \"dataSource\":\r\n                if (Array.isArray(value)) {\r\n                    this._updateDataSource(this.option(\"dataSource\"))\r\n                } else {\r\n                    this._initDataSource();\r\n                    this._updateKeyExpr()\r\n                }\r\n                this._updateItemCollection(name);\r\n                break;\r\n            case \"icon\":\r\n            case \"text\":\r\n                this._actionButtonOptionChanged(args);\r\n                break;\r\n            case \"showArrowIcon\":\r\n                this._updateArrowClass();\r\n                this._renderButtonGroup();\r\n                this._popup && this._popup.repaint();\r\n                break;\r\n            case \"width\":\r\n            case \"height\":\r\n                this.callBase(args);\r\n                null === (_this$_popup = this._popup) || void 0 === _this$_popup ? void 0 : _this$_popup.repaint();\r\n                break;\r\n            case \"stylingMode\":\r\n                this._buttonGroup.option(name, value);\r\n                break;\r\n            case \"itemTemplate\":\r\n            case \"grouped\":\r\n            case \"noDataText\":\r\n            case \"groupTemplate\":\r\n            case \"wrapItemText\":\r\n            case \"useItemTextAsTitle\":\r\n                this._setListOption(name, value);\r\n                break;\r\n            case \"dropDownContentTemplate\":\r\n                this._renderContent();\r\n                break;\r\n            case \"selectedItemKey\":\r\n                this._selectedItemKeyChanged(value);\r\n                break;\r\n            case \"selectedItem\":\r\n                break;\r\n            case \"onItemClick\":\r\n                this._createItemClickAction();\r\n                break;\r\n            case \"onButtonClick\":\r\n                this._createActionClickAction();\r\n                break;\r\n            case \"onSelectionChanged\":\r\n                this._createSelectionChangedAction();\r\n                break;\r\n            case \"deferRendering\":\r\n                this.toggle(this.option(\"opened\"));\r\n                break;\r\n            case \"tabIndex\":\r\n                this._buttonGroup.option(name, value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n}).include(DataHelperMixin);\r\nregisterComponent(\"dxDropDownButton\", DropDownButton);\r\nexport default DropDownButton;\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.export.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../../core/renderer\";\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    merge\r\n} from \"../../core/utils/array\";\r\nimport dataGridCore from \"./ui.data_grid.core\";\r\nimport exportMixin from \"../grid_core/ui.grid_core.export_mixin\";\r\nimport {\r\n    export as clientExport,\r\n    excel\r\n} from \"../../exporter\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport \"../button\";\r\nimport \"../drop_down_button\";\r\nimport List from \"../list_light\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar DATAGRID_EXPORT_MENU_CLASS = \"dx-datagrid-export-menu\";\r\nvar DATAGRID_EXPORT_BUTTON_CLASS = \"dx-datagrid-export-button\";\r\nvar DATAGRID_EXPORT_TOOLBAR_BUTTON_NAME = \"exportButton\";\r\nvar DATAGRID_EXPORT_ICON = \"export-to\";\r\nvar DATAGRID_EXPORT_EXCEL_ICON = \"xlsxfile\";\r\nvar DATAGRID_EXPORT_SELECTED_ICON = \"exportselected\";\r\nvar DATAGRID_EXPORT_EXCEL_BUTTON_ICON = \"export-excel-button\";\r\nexport var DataProvider = Class.inherit({\r\n    ctor: function(exportController, initialColumnWidthsByColumnIndex, selectedRowsOnly) {\r\n        this._exportController = exportController;\r\n        this._initialColumnWidthsByColumnIndex = initialColumnWidthsByColumnIndex;\r\n        this._selectedRowsOnly = selectedRowsOnly\r\n    },\r\n    _getGroupValue: function(item) {\r\n        var {\r\n            key: key,\r\n            data: data,\r\n            rowType: rowType,\r\n            groupIndex: groupIndex,\r\n            summaryCells: summaryCells\r\n        } = item;\r\n        var groupColumn = this._options.groupColumns[groupIndex];\r\n        var value = dataGridCore.getDisplayValue(groupColumn, groupColumn.deserializeValue ? groupColumn.deserializeValue(key[groupIndex]) : key[groupIndex], data, rowType);\r\n        var result = groupColumn.caption + \": \" + dataGridCore.formatValue(value, groupColumn);\r\n        if (summaryCells && summaryCells[0] && summaryCells[0].length) {\r\n            result += \" \" + dataGridCore.getGroupRowSummaryText(summaryCells[0], this._options.summaryTexts)\r\n        }\r\n        return result\r\n    },\r\n    _correctCellIndex: function(cellIndex) {\r\n        return cellIndex\r\n    },\r\n    _initOptions: function() {\r\n        var exportController = this._exportController;\r\n        var groupColumns = exportController._columnsController.getGroupColumns();\r\n        var excelWrapTextEnabled = exportController.option(\"export.excelWrapTextEnabled\");\r\n        this._options = {\r\n            columns: exportController._getColumns(this._initialColumnWidthsByColumnIndex),\r\n            groupColumns: groupColumns,\r\n            items: this._selectedRowsOnly || exportController._selectionOnly ? exportController._getSelectedItems() : exportController._getAllItems(),\r\n            getVisibleIndex: exportController._columnsController.getVisibleIndex.bind(exportController._columnsController),\r\n            isHeadersVisible: exportController.option(\"showColumnHeaders\"),\r\n            summaryTexts: exportController.option(\"summary.texts\"),\r\n            customizeExportData: exportController.option(\"customizeExportData\"),\r\n            rtlEnabled: exportController.option(\"rtlEnabled\"),\r\n            wrapTextEnabled: isDefined(excelWrapTextEnabled) ? excelWrapTextEnabled : !!exportController.option(\"wordWrapEnabled\"),\r\n            customizeExcelCell: exportController.option(\"export.customizeExcelCell\")\r\n        }\r\n    },\r\n    hasCustomizeExcelCell: function() {\r\n        return isDefined(this._options.customizeExcelCell)\r\n    },\r\n    customizeExcelCell: function(e, cellSourceData) {\r\n        if (this._options.customizeExcelCell) {\r\n            e.gridCell = cellSourceData;\r\n            if (isDefined(this._exportController) && isDefined(this._exportController.component)) {\r\n                e.component = this._exportController.component\r\n            }\r\n            this._options.customizeExcelCell(e)\r\n        }\r\n    },\r\n    getHeaderStyles: () => [{\r\n        bold: true,\r\n        alignment: \"center\",\r\n        wrapText: true\r\n    }, {\r\n        bold: true,\r\n        alignment: \"left\",\r\n        wrapText: true\r\n    }, {\r\n        bold: true,\r\n        alignment: \"right\",\r\n        wrapText: true\r\n    }],\r\n    getGroupRowStyle() {\r\n        return {\r\n            bold: true,\r\n            wrapText: false,\r\n            alignment: getDefaultAlignment(this._options.rtlEnabled)\r\n        }\r\n    },\r\n    getColumnStyles() {\r\n        var wrapTextEnabled = this._options.wrapTextEnabled;\r\n        var columnStyles = [];\r\n        this.getColumns().forEach(column => {\r\n            columnStyles.push({\r\n                alignment: column.alignment || \"left\",\r\n                format: column.format,\r\n                wrapText: wrapTextEnabled,\r\n                dataType: column.dataType\r\n            })\r\n        });\r\n        return columnStyles\r\n    },\r\n    getStyles: function() {\r\n        return [...this.getHeaderStyles(), ...this.getColumnStyles(), this.getGroupRowStyle()]\r\n    },\r\n    _getTotalCellStyleId: function(cellIndex) {\r\n        var _this$getColumns$cell;\r\n        var alignment = (null === (_this$getColumns$cell = this.getColumns()[cellIndex]) || void 0 === _this$getColumns$cell ? void 0 : _this$getColumns$cell.alignment) || \"right\";\r\n        return this.getHeaderStyles().map(style => style.alignment).indexOf(alignment)\r\n    },\r\n    getStyleId: function(rowIndex, cellIndex) {\r\n        if (rowIndex < this.getHeaderRowCount()) {\r\n            return 0\r\n        } else if (this.isTotalCell(rowIndex - this.getHeaderRowCount(), cellIndex)) {\r\n            return this._getTotalCellStyleId(cellIndex)\r\n        } else if (this.isGroupRow(rowIndex - this.getHeaderRowCount())) {\r\n            return this.getHeaderStyles().length + this.getColumns().length\r\n        } else {\r\n            return cellIndex + this.getHeaderStyles().length\r\n        }\r\n    },\r\n    getColumns: function(getColumnsByAllRows) {\r\n        var {\r\n            columns: columns\r\n        } = this._options;\r\n        return getColumnsByAllRows ? columns : columns[columns.length - 1]\r\n    },\r\n    getColumnsWidths: function() {\r\n        var columns = this.getColumns();\r\n        return isDefined(columns) ? columns.map(c => c.width) : void 0\r\n    },\r\n    getRowsCount: function() {\r\n        return this._options.items.length + this.getHeaderRowCount()\r\n    },\r\n    getHeaderRowCount: function() {\r\n        if (this.isHeadersVisible()) {\r\n            return this._options.columns.length - 1\r\n        }\r\n        return 0\r\n    },\r\n    isGroupRow: function(rowIndex) {\r\n        return rowIndex < this._options.items.length && \"group\" === this._options.items[rowIndex].rowType\r\n    },\r\n    getGroupLevel: function(rowIndex) {\r\n        var item = this._options.items[rowIndex - this.getHeaderRowCount()];\r\n        var groupIndex = item && item.groupIndex;\r\n        if (item && \"totalFooter\" === item.rowType) {\r\n            return 0\r\n        }\r\n        return isDefined(groupIndex) ? groupIndex : this._options.groupColumns.length\r\n    },\r\n    getCellType: function(rowIndex, cellIndex) {\r\n        var columns = this.getColumns();\r\n        if (rowIndex < this.getHeaderRowCount()) {\r\n            return \"string\"\r\n        } else {\r\n            rowIndex -= this.getHeaderRowCount()\r\n        }\r\n        if (cellIndex < columns.length) {\r\n            var item = this._options.items.length && this._options.items[rowIndex];\r\n            var column = columns[cellIndex];\r\n            if (item && \"data\" === item.rowType) {\r\n                if (isFinite(item.values[this._correctCellIndex(cellIndex)]) && !isDefined(column.customizeText)) {\r\n                    return isDefined(column.lookup) ? column.lookup.dataType : column.dataType\r\n                }\r\n            }\r\n            return \"string\"\r\n        }\r\n    },\r\n    ready: function() {\r\n        var that = this;\r\n        that._initOptions();\r\n        var options = that._options;\r\n        return when(options.items).done((function(items) {\r\n            options.customizeExportData && options.customizeExportData(that.getColumns(that.getHeaderRowCount() > 1), items);\r\n            options.items = items\r\n        })).fail((function() {\r\n            options.items = []\r\n        }))\r\n    },\r\n    _convertFromGridGroupSummaryItems: function(gridGroupSummaryItems) {\r\n        if (isDefined(gridGroupSummaryItems) && gridGroupSummaryItems.length > 0) {\r\n            return gridGroupSummaryItems.map((function(item) {\r\n                return {\r\n                    value: item.value,\r\n                    name: item.name\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    getCellData: function(rowIndex, cellIndex, isExcelJS) {\r\n        var value;\r\n        var column;\r\n        var result = {\r\n            cellSourceData: {},\r\n            value: value\r\n        };\r\n        var columns = this.getColumns();\r\n        var correctedCellIndex = this._correctCellIndex(cellIndex);\r\n        if (rowIndex < this.getHeaderRowCount()) {\r\n            var columnsRow = this.getColumns(true)[rowIndex];\r\n            column = columnsRow[cellIndex];\r\n            result.cellSourceData.rowType = \"header\";\r\n            result.cellSourceData.column = column && column.gridColumn;\r\n            result.value = column && column.caption\r\n        } else {\r\n            rowIndex -= this.getHeaderRowCount();\r\n            var item = this._options.items.length && this._options.items[rowIndex];\r\n            if (item) {\r\n                var itemValues = item.values;\r\n                result.cellSourceData.rowType = item.rowType;\r\n                result.cellSourceData.column = columns[cellIndex] && columns[cellIndex].gridColumn;\r\n                switch (item.rowType) {\r\n                    case \"groupFooter\":\r\n                    case \"totalFooter\":\r\n                        if (correctedCellIndex < itemValues.length) {\r\n                            value = itemValues[correctedCellIndex];\r\n                            if (isDefined(value)) {\r\n                                result.cellSourceData.value = value.value;\r\n                                result.cellSourceData.totalSummaryItemName = value.name;\r\n                                result.value = dataGridCore.getSummaryText(value, this._options.summaryTexts)\r\n                            } else {\r\n                                result.cellSourceData.value = void 0\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        result.cellSourceData.groupIndex = item.groupIndex;\r\n                        if (cellIndex < 1) {\r\n                            result.cellSourceData.column = this._options.groupColumns[item.groupIndex];\r\n                            result.cellSourceData.value = item.key[item.groupIndex];\r\n                            result.cellSourceData.groupSummaryItems = this._convertFromGridGroupSummaryItems(item.summaryCells[0]);\r\n                            result.value = this._getGroupValue(item)\r\n                        } else {\r\n                            var summaryItems = item.values[correctedCellIndex];\r\n                            if (Array.isArray(summaryItems)) {\r\n                                result.cellSourceData.groupSummaryItems = this._convertFromGridGroupSummaryItems(summaryItems);\r\n                                value = \"\";\r\n                                for (var i = 0; i < summaryItems.length; i++) {\r\n                                    value += (i > 0 ? isExcelJS ? \"\\n\" : \" \\n \" : \"\") + dataGridCore.getSummaryText(summaryItems[i], this._options.summaryTexts)\r\n                                }\r\n                                result.value = value\r\n                            } else {\r\n                                result.cellSourceData.value = void 0\r\n                            }\r\n                        }\r\n                        break;\r\n                    default:\r\n                        column = columns[cellIndex];\r\n                        if (column) {\r\n                            var _value = itemValues[correctedCellIndex];\r\n                            var displayValue = dataGridCore.getDisplayValue(column, _value, item.data, item.rowType);\r\n                            if (!isFinite(displayValue) || isDefined(column.customizeText)) {\r\n                                if (isExcelJS && isDefined(column.customizeText) && column.customizeText === this._exportController._columnsController.getCustomizeTextByDataType(\"boolean\")) {\r\n                                    result.value = displayValue\r\n                                } else {\r\n                                    result.value = dataGridCore.formatValue(displayValue, column)\r\n                                }\r\n                            } else {\r\n                                result.value = displayValue\r\n                            }\r\n                            result.cellSourceData.value = _value\r\n                        }\r\n                        result.cellSourceData.data = item.data\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    isHeadersVisible: function() {\r\n        return this._options.isHeadersVisible\r\n    },\r\n    isTotalCell: function(rowIndex, cellIndex) {\r\n        var items = this._options.items;\r\n        var item = items[rowIndex];\r\n        var correctCellIndex = this._correctCellIndex(cellIndex);\r\n        var isSummaryAlignByColumn = item.summaryCells && item.summaryCells[correctCellIndex] && item.summaryCells[correctCellIndex].length > 0 && item.summaryCells[correctCellIndex][0].alignByColumn;\r\n        return item && \"groupFooter\" === item.rowType || \"totalFooter\" === item.rowType || isSummaryAlignByColumn\r\n    },\r\n    getCellMerging: function(rowIndex, cellIndex) {\r\n        var columns = this._options.columns;\r\n        var column = columns[rowIndex] && columns[rowIndex][cellIndex];\r\n        return column ? {\r\n            colspan: (column.exportColspan || 1) - 1,\r\n            rowspan: (column.rowspan || 1) - 1\r\n        } : {\r\n            colspan: 0,\r\n            rowspan: 0\r\n        }\r\n    },\r\n    getFrozenArea: function() {\r\n        return {\r\n            x: 0,\r\n            y: this.getHeaderRowCount()\r\n        }\r\n    }\r\n});\r\nexport var ExportController = dataGridCore.ViewController.inherit({}).include(exportMixin).inherit({\r\n    _getEmptyCell: function() {\r\n        return {\r\n            caption: \"\",\r\n            colspan: 1,\r\n            rowspan: 1\r\n        }\r\n    },\r\n    _updateColumnWidth: function(column, width) {\r\n        column.width = width\r\n    },\r\n    _getColumns: function(initialColumnWidthsByColumnIndex) {\r\n        var result = [];\r\n        var i;\r\n        var columns;\r\n        var columnsController = this._columnsController;\r\n        var rowCount = columnsController.getRowCount();\r\n        for (i = 0; i <= rowCount; i++) {\r\n            var currentHeaderRow = [];\r\n            columns = columnsController.getVisibleColumns(i, true);\r\n            var columnWidthsByColumnIndex = void 0;\r\n            if (i === rowCount) {\r\n                if (this._updateLockCount) {\r\n                    columnWidthsByColumnIndex = initialColumnWidthsByColumnIndex\r\n                } else {\r\n                    var columnWidths = this._getColumnWidths(this._headersView, this._rowsView);\r\n                    if (columnWidths && columnWidths.length) {\r\n                        columnWidthsByColumnIndex = {};\r\n                        for (var _i = 0; _i < columns.length; _i++) {\r\n                            columnWidthsByColumnIndex[columns[_i].index] = columnWidths[_i]\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (var j = 0; j < columns.length; j++) {\r\n                var column = extend({}, columns[j], {\r\n                    dataType: \"datetime\" === columns[j].dataType ? \"date\" : columns[j].dataType,\r\n                    gridColumn: columns[j]\r\n                });\r\n                if (this._needColumnExporting(column)) {\r\n                    var currentColspan = this._calculateExportColspan(column);\r\n                    if (isDefined(currentColspan)) {\r\n                        column.exportColspan = currentColspan\r\n                    }\r\n                    if (columnWidthsByColumnIndex) {\r\n                        this._updateColumnWidth(column, columnWidthsByColumnIndex[column.index])\r\n                    }\r\n                    currentHeaderRow.push(column)\r\n                }\r\n            }\r\n            result.push(currentHeaderRow)\r\n        }\r\n        columns = result[rowCount];\r\n        result = this._prepareItems(result.slice(0, -1));\r\n        result.push(columns);\r\n        return result\r\n    },\r\n    _calculateExportColspan: function(column) {\r\n        if (!column.isBand) {\r\n            return\r\n        }\r\n        var childColumns = this._columnsController.getChildrenByBandColumn(column.index, true);\r\n        if (!isDefined(childColumns)) {\r\n            return\r\n        }\r\n        return childColumns.reduce((result, childColumn) => {\r\n            if (this._needColumnExporting(childColumn)) {\r\n                return result + (this._calculateExportColspan(childColumn) || 1)\r\n            } else {\r\n                return result\r\n            }\r\n        }, 0)\r\n    },\r\n    _needColumnExporting: function(column) {\r\n        return !column.command && (column.allowExporting || void 0 === column.allowExporting)\r\n    },\r\n    _getFooterSummaryItems: function(summaryCells, isTotal) {\r\n        var result = [];\r\n        var estimatedItemsCount = 1;\r\n        var i = 0;\r\n        do {\r\n            var values = [];\r\n            for (var j = 0; j < summaryCells.length; j++) {\r\n                var summaryCell = summaryCells[j];\r\n                var itemsLength = summaryCell.length;\r\n                if (estimatedItemsCount < itemsLength) {\r\n                    estimatedItemsCount = itemsLength\r\n                }\r\n                values.push(summaryCell[i])\r\n            }\r\n            result.push({\r\n                values: values,\r\n                rowType: isTotal ? \"totalFooter\" : \"groupFooter\"\r\n            })\r\n        } while (i++ < estimatedItemsCount - 1);\r\n        return result\r\n    },\r\n    _hasSummaryGroupFooters: function() {\r\n        var groupItems = this.option(\"summary.groupItems\");\r\n        if (isDefined(groupItems)) {\r\n            for (var i = 0; i < groupItems.length; i++) {\r\n                if (groupItems[i].showInGroupFooter) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _getItemsWithSummaryGroupFooters: function(sourceItems) {\r\n        var result = [];\r\n        var beforeGroupFooterItems = [];\r\n        var groupFooterItems = [];\r\n        for (var i = 0; i < sourceItems.length; i++) {\r\n            var item = sourceItems[i];\r\n            if (\"groupFooter\" === item.rowType) {\r\n                groupFooterItems = this._getFooterSummaryItems(item.summaryCells);\r\n                result = result.concat(beforeGroupFooterItems, groupFooterItems);\r\n                beforeGroupFooterItems = []\r\n            } else {\r\n                beforeGroupFooterItems.push(item)\r\n            }\r\n        }\r\n        return result.length ? result : beforeGroupFooterItems\r\n    },\r\n    _updateGroupValuesWithSummaryByColumn: function(sourceItems) {\r\n        var summaryValues = [];\r\n        for (var i = 0; i < sourceItems.length; i++) {\r\n            var item = sourceItems[i];\r\n            var summaryCells = item.summaryCells;\r\n            if (\"group\" === item.rowType && summaryCells && summaryCells.length > 1) {\r\n                var groupColumnCount = item.values.length;\r\n                for (var j = 1; j < summaryCells.length; j++) {\r\n                    for (var k = 0; k < summaryCells[j].length; k++) {\r\n                        var summaryItem = summaryCells[j][k];\r\n                        if (summaryItem && summaryItem.alignByColumn) {\r\n                            if (!Array.isArray(summaryValues[j - groupColumnCount])) {\r\n                                summaryValues[j - groupColumnCount] = []\r\n                            }\r\n                            summaryValues[j - groupColumnCount].push(summaryItem)\r\n                        }\r\n                    }\r\n                }\r\n                if (summaryValues.length > 0) {\r\n                    merge(item.values, summaryValues);\r\n                    summaryValues = []\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _processUnExportedItems: function(items) {\r\n        var columns = this._columnsController.getVisibleColumns(null, true);\r\n        var groupColumns = this._columnsController.getGroupColumns();\r\n        var values;\r\n        var summaryCells;\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            var isDetailExpandColumn = false;\r\n            values = [];\r\n            summaryCells = [];\r\n            for (var j = 0; j < columns.length; j++) {\r\n                var column = columns[j];\r\n                isDetailExpandColumn = isDetailExpandColumn || \"detailExpand\" === column.type;\r\n                if (this._needColumnExporting(column)) {\r\n                    if (item.values) {\r\n                        if (\"group\" === item.rowType && !values.length) {\r\n                            values.push(item.key[item.groupIndex])\r\n                        } else {\r\n                            values.push(item.values[j])\r\n                        }\r\n                    }\r\n                    if (item.summaryCells) {\r\n                        if (\"group\" === item.rowType && !summaryCells.length) {\r\n                            var index = j - groupColumns.length + item.groupIndex;\r\n                            summaryCells.push(item.summaryCells[isDetailExpandColumn ? index : index + 1])\r\n                        } else {\r\n                            summaryCells.push(item.summaryCells[j])\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (values.length) {\r\n                item.values = values\r\n            }\r\n            if (summaryCells.length) {\r\n                item.summaryCells = summaryCells\r\n            }\r\n        }\r\n    },\r\n    _getAllItems: function(data) {\r\n        var that = this;\r\n        var d = new Deferred;\r\n        var dataController = this.getController(\"data\");\r\n        var footerItems = dataController.footerItems();\r\n        var totalItem = footerItems.length && footerItems[0];\r\n        var summaryTotalItems = that.option(\"summary.totalItems\");\r\n        var summaryCells;\r\n        when(data).done((function(data) {\r\n            dataController.loadAll(data).done((function(sourceItems, totalAggregates) {\r\n                that._updateGroupValuesWithSummaryByColumn(sourceItems);\r\n                if (that._hasSummaryGroupFooters()) {\r\n                    sourceItems = that._getItemsWithSummaryGroupFooters(sourceItems)\r\n                }\r\n                summaryCells = totalItem && totalItem.summaryCells;\r\n                if (isDefined(totalAggregates) && summaryTotalItems) {\r\n                    summaryCells = that._getSummaryCells(summaryTotalItems, totalAggregates)\r\n                }\r\n                var summaryItems = totalItem && that._getFooterSummaryItems(summaryCells, true);\r\n                if (summaryItems) {\r\n                    sourceItems = sourceItems.concat(summaryItems)\r\n                }\r\n                that._processUnExportedItems(sourceItems);\r\n                d.resolve(sourceItems)\r\n            })).fail(d.reject)\r\n        })).fail(d.reject);\r\n        return d\r\n    },\r\n    _getSummaryCells: function(summaryTotalItems, totalAggregates) {\r\n        var dataController = this.getController(\"data\");\r\n        var columnsController = dataController._columnsController;\r\n        return dataController._calculateSummaryCells(summaryTotalItems, totalAggregates, columnsController.getVisibleColumns(null, true), (function(summaryItem, column) {\r\n            return dataController._isDataColumn(column) ? column.index : -1\r\n        }))\r\n    },\r\n    _getSelectedItems: function() {\r\n        var selectionController = this.getController(\"selection\");\r\n        var selectedRowData = selectionController.getSelectedRowsData();\r\n        return this._getAllItems(selectedRowData)\r\n    },\r\n    _getColumnWidths: function(headersView, rowsView) {\r\n        return headersView && headersView.isVisible() ? headersView.getColumnWidths() : rowsView.getColumnWidths()\r\n    },\r\n    init: function() {\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._rowsView = this.getView(\"rowsView\");\r\n        this._headersView = this.getView(\"columnHeadersView\");\r\n        this.createAction(\"onExporting\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        this.createAction(\"onExported\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        this.createAction(\"onFileSaving\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    callbackNames: function() {\r\n        return [\"selectionOnlyChanged\"]\r\n    },\r\n    getExportFormat: function() {\r\n        return [\"EXCEL\"]\r\n    },\r\n    getDataProvider: function(selectedRowsOnly) {\r\n        var columnWidths = this._getColumnWidths(this._headersView, this._rowsView);\r\n        var initialColumnWidthsByColumnIndex;\r\n        if (columnWidths && columnWidths.length) {\r\n            initialColumnWidthsByColumnIndex = {};\r\n            var columnsLastRowVisibleColumns = this._columnsController.getVisibleColumns(this._columnsController.getRowCount(), true);\r\n            for (var i = 0; i < columnsLastRowVisibleColumns.length; i++) {\r\n                initialColumnWidthsByColumnIndex[columnsLastRowVisibleColumns[i].index] = columnWidths[i]\r\n            }\r\n        }\r\n        return new DataProvider(this, initialColumnWidthsByColumnIndex, selectedRowsOnly)\r\n    },\r\n    exportToExcel: function(selectionOnly) {\r\n        this._selectionOnly = selectionOnly;\r\n        clientExport(this.component.getDataProvider(), {\r\n            fileName: this.option(\"export.fileName\"),\r\n            proxyUrl: this.option(\"export.proxyUrl\"),\r\n            format: \"EXCEL\",\r\n            autoFilterEnabled: !!this.option(\"export.excelFilterEnabled\"),\r\n            rtlEnabled: this.option(\"rtlEnabled\"),\r\n            ignoreErrors: this.option(\"export.ignoreExcelErrors\"),\r\n            exportingAction: this.getAction(\"onExporting\"),\r\n            exportedAction: this.getAction(\"onExported\"),\r\n            fileSavingAction: this.getAction(\"onFileSaving\")\r\n        }, excel.getData)\r\n    },\r\n    publicMethods: function() {\r\n        return [\"getDataProvider\", \"getExportFormat\", \"exportToExcel\"]\r\n    },\r\n    selectionOnly: function(value) {\r\n        if (isDefined(value)) {\r\n            this._isSelectedRows = value;\r\n            this.selectionOnlyChanged.fire()\r\n        } else {\r\n            return this._isSelectedRows\r\n        }\r\n    }\r\n});\r\ndataGridCore.registerModule(\"export\", {\r\n    defaultOptions: function() {\r\n        return {\r\n            export: {\r\n                enabled: false,\r\n                fileName: \"DataGrid\",\r\n                excelFilterEnabled: false,\r\n                excelWrapTextEnabled: void 0,\r\n                proxyUrl: void 0,\r\n                allowExportSelectedData: false,\r\n                ignoreExcelErrors: true,\r\n                texts: {\r\n                    exportTo: messageLocalization.format(\"dxDataGrid-exportTo\"),\r\n                    exportAll: messageLocalization.format(\"dxDataGrid-exportAll\"),\r\n                    exportSelectedRows: messageLocalization.format(\"dxDataGrid-exportSelectedRows\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        export: ExportController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                callbackNames: function() {\r\n                    var callbackList = this.callBase();\r\n                    return isDefined(callbackList) ? callbackList.push(\"editingChanged\") : [\"editingChanged\"]\r\n                },\r\n                _updateEditButtons: function() {\r\n                    this.callBase();\r\n                    this.editingChanged.fire(this.hasChanges())\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    var exportButton = this._getExportToolbarButton();\r\n                    if (exportButton) {\r\n                        items.push(exportButton);\r\n                        this._correctItemsPosition(items)\r\n                    }\r\n                    return items\r\n                },\r\n                _getExportToolbarButton: function() {\r\n                    var items = this._getExportToolbarItems();\r\n                    if (0 === items.length) {\r\n                        return null\r\n                    }\r\n                    var toolbarButtonOptions = {\r\n                        name: DATAGRID_EXPORT_TOOLBAR_BUTTON_NAME,\r\n                        location: \"after\",\r\n                        locateInMenu: \"auto\",\r\n                        sortIndex: 30,\r\n                        options: {\r\n                            items: items\r\n                        }\r\n                    };\r\n                    if (1 === items.length) {\r\n                        var widgetOptions = _extends({}, items[0], {\r\n                            hint: items[0].text,\r\n                            elementAttr: {\r\n                                class: DATAGRID_EXPORT_BUTTON_CLASS\r\n                            }\r\n                        });\r\n                        toolbarButtonOptions.widget = \"dxButton\";\r\n                        toolbarButtonOptions.showText = \"inMenu\";\r\n                        toolbarButtonOptions.options = widgetOptions\r\n                    } else {\r\n                        var _widgetOptions = {\r\n                            icon: DATAGRID_EXPORT_ICON,\r\n                            displayExpr: \"text\",\r\n                            items: items,\r\n                            hint: this.option(\"export.texts.exportTo\"),\r\n                            elementAttr: {\r\n                                class: DATAGRID_EXPORT_BUTTON_CLASS\r\n                            },\r\n                            dropDownOptions: {\r\n                                wrapperAttr: {\r\n                                    class: DATAGRID_EXPORT_MENU_CLASS\r\n                                },\r\n                                width: \"auto\"\r\n                            }\r\n                        };\r\n                        toolbarButtonOptions.options = _widgetOptions;\r\n                        toolbarButtonOptions.widget = \"dxDropDownButton\";\r\n                        toolbarButtonOptions.menuItemTemplate = (_data, _index, container) => {\r\n                            this._createComponent($(container), List, {\r\n                                items: items\r\n                            })\r\n                        }\r\n                    }\r\n                    return toolbarButtonOptions\r\n                },\r\n                _getExportToolbarItems: function() {\r\n                    var exportOptions = this.option(\"export\");\r\n                    var texts = this.option(\"export.texts\");\r\n                    var items = [];\r\n                    if (exportOptions.enabled) {\r\n                        items.push({\r\n                            text: texts.exportAll,\r\n                            icon: DATAGRID_EXPORT_EXCEL_ICON,\r\n                            onClick: () => {\r\n                                this._exportController.exportToExcel()\r\n                            }\r\n                        });\r\n                        if (exportOptions.allowExportSelectedData) {\r\n                            items.push({\r\n                                text: texts.exportSelectedRows,\r\n                                icon: DATAGRID_EXPORT_SELECTED_ICON,\r\n                                onClick: () => {\r\n                                    this._exportController.exportToExcel(true)\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                    return items\r\n                },\r\n                _correctItemsPosition: function(items) {\r\n                    items.sort((function(itemA, itemB) {\r\n                        return itemA.sortIndex - itemB.sortIndex\r\n                    }))\r\n                },\r\n                _isExportButtonVisible: function() {\r\n                    return this.option(\"export.enabled\")\r\n                },\r\n                _getButtonOptions: function(allowExportSelected) {\r\n                    var that = this;\r\n                    var texts = that.option(\"export.texts\");\r\n                    var options;\r\n                    if (allowExportSelected) {\r\n                        options = {\r\n                            hint: texts.exportTo,\r\n                            icon: DATAGRID_EXPORT_ICON\r\n                        }\r\n                    } else {\r\n                        options = {\r\n                            hint: texts.exportAll,\r\n                            icon: DATAGRID_EXPORT_EXCEL_BUTTON_ICON,\r\n                            onClick: function() {\r\n                                that._exportController.exportToExcel()\r\n                            }\r\n                        }\r\n                    }\r\n                    return options\r\n                },\r\n                optionChanged: function(args) {\r\n                    this.callBase(args);\r\n                    if (\"export\" === args.name) {\r\n                        args.handled = true;\r\n                        this._invalidate()\r\n                    }\r\n                },\r\n                init: function() {\r\n                    var that = this;\r\n                    this.callBase();\r\n                    this._exportController = this.getController(\"export\");\r\n                    this._editingController = this.getController(\"editing\");\r\n                    this._editingController.editingChanged.add((function(hasChanges) {\r\n                        that.setToolbarItemDisabled(\"exportButton\", hasChanges)\r\n                    }))\r\n                },\r\n                isVisible: function() {\r\n                    return this.callBase() || this._isExportButtonVisible()\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.focus.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport core from \"./ui.grid_core.modules\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isBoolean\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nvar ROW_FOCUSED_CLASS = \"dx-row-focused\";\r\nvar FOCUSED_ROW_SELECTOR = \".dx-row.\" + ROW_FOCUSED_CLASS;\r\nvar TABLE_POSTFIX_CLASS = \"table\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FocusController = core.ViewController.inherit({\r\n    init: function() {\r\n        this._dataController = this.getController(\"data\");\r\n        this._keyboardController = this.getController(\"keyboardNavigation\");\r\n        this.component._optionsByReference.focusedRowKey = true\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"focusedRowIndex\" === args.name) {\r\n            var focusedRowKey = this.option(\"focusedRowKey\");\r\n            this._focusRowByIndex(args.value);\r\n            this._triggerFocusedRowChangedIfNeed(focusedRowKey, args.value);\r\n            args.handled = true\r\n        } else if (\"focusedRowKey\" === args.name) {\r\n            args.handled = true;\r\n            if (Array.isArray(args.value) && JSON.stringify(args.value) === JSON.stringify(args.previousValue)) {\r\n                return\r\n            }\r\n            var focusedRowIndex = this.option(\"focusedRowIndex\");\r\n            this._focusRowByKey(args.value);\r\n            this._triggerFocusedRowChangedIfNeed(args.value, focusedRowIndex)\r\n        } else if (\"focusedColumnIndex\" === args.name) {\r\n            args.handled = true\r\n        } else if (\"focusedRowEnabled\" === args.name) {\r\n            args.handled = true\r\n        } else if (\"autoNavigateToFocusedRow\" === args.name) {\r\n            args.handled = true\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    },\r\n    _triggerFocusedRowChangedIfNeed: function(focusedRowKey, focusedRowIndex) {\r\n        var focusedRowIndexByKey = this.getFocusedRowIndexByKey(focusedRowKey);\r\n        if (focusedRowIndex === focusedRowIndexByKey) {\r\n            var rowIndex = this._dataController.getRowIndexByKey(focusedRowKey);\r\n            if (rowIndex >= 0) {\r\n                var $rowElement = $(this.getView(\"rowsView\").getRowElement(rowIndex));\r\n                this.getController(\"keyboardNavigation\")._fireFocusedRowChanged($rowElement, focusedRowIndex)\r\n            }\r\n        }\r\n    },\r\n    isAutoNavigateToFocusedRow: function() {\r\n        return \"infinite\" !== this.option(\"scrolling.mode\") && this.option(\"autoNavigateToFocusedRow\")\r\n    },\r\n    _focusRowByIndex: function(index, operationTypes) {\r\n        if (!this.option(\"focusedRowEnabled\")) {\r\n            return\r\n        }\r\n        index = void 0 !== index ? index : this.option(\"focusedRowIndex\");\r\n        if (index < 0) {\r\n            if (this.isAutoNavigateToFocusedRow()) {\r\n                this._resetFocusedRow()\r\n            }\r\n        } else {\r\n            this._focusRowByIndexCore(index, operationTypes)\r\n        }\r\n    },\r\n    _focusRowByIndexCore: function(index, operationTypes) {\r\n        var dataController = this.getController(\"data\");\r\n        var pageSize = dataController.pageSize();\r\n        var setKeyByIndex = () => {\r\n            if (this._isValidFocusedRowIndex(index)) {\r\n                var rowIndex = index - dataController.getRowIndexOffset(true);\r\n                if (!operationTypes || operationTypes.paging && !operationTypes.filtering) {\r\n                    var lastItemIndex = dataController._getLastItemIndex();\r\n                    rowIndex = Math.min(rowIndex, lastItemIndex)\r\n                }\r\n                var focusedRowKey = dataController.getKeyByRowIndex(rowIndex, true);\r\n                if (isDefined(focusedRowKey) && !this.isRowFocused(focusedRowKey)) {\r\n                    this.option(\"focusedRowKey\", focusedRowKey)\r\n                }\r\n            }\r\n        };\r\n        if (pageSize >= 0) {\r\n            if (!this._isLocalRowIndex(index)) {\r\n                var pageIndex = Math.floor(index / dataController.pageSize());\r\n                when(dataController.pageIndex(pageIndex), dataController.waitReady()).done(() => {\r\n                    setKeyByIndex()\r\n                })\r\n            } else {\r\n                setKeyByIndex()\r\n            }\r\n        }\r\n    },\r\n    _isLocalRowIndex(index) {\r\n        var dataController = this.getController(\"data\");\r\n        var isVirtualScrolling = this.getController(\"keyboardNavigation\")._isVirtualScrolling();\r\n        if (isVirtualScrolling) {\r\n            var pageIndex = Math.floor(index / dataController.pageSize());\r\n            var virtualItems = dataController.virtualItemsCount();\r\n            var virtualItemsBegin = virtualItems ? virtualItems.begin : -1;\r\n            var visibleRowsCount = dataController.getVisibleRows().length + dataController.getRowIndexOffset();\r\n            var visiblePagesCount = Math.ceil(visibleRowsCount / dataController.pageSize());\r\n            return virtualItemsBegin <= index && visiblePagesCount > pageIndex\r\n        }\r\n        return true\r\n    },\r\n    _setFocusedRowKeyByIndex: function(index) {\r\n        var dataController = this.getController(\"data\");\r\n        if (this._isValidFocusedRowIndex(index)) {\r\n            var rowIndex = Math.min(index - dataController.getRowIndexOffset(), dataController.items().length - 1);\r\n            var focusedRowKey = dataController.getKeyByRowIndex(rowIndex);\r\n            if (isDefined(focusedRowKey) && !this.isRowFocused(focusedRowKey)) {\r\n                this.option(\"focusedRowKey\", focusedRowKey)\r\n            }\r\n        }\r\n    },\r\n    _focusRowByKey: function(key) {\r\n        if (!isDefined(key)) {\r\n            this._resetFocusedRow()\r\n        } else {\r\n            this._navigateToRow(key, true)\r\n        }\r\n    },\r\n    _resetFocusedRow: function() {\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        var isFocusedRowKeyDefined = isDefined(focusedRowKey);\r\n        if (!isFocusedRowKeyDefined && this.option(\"focusedRowIndex\") < 0) {\r\n            return\r\n        }\r\n        var keyboardController = this.getController(\"keyboardNavigation\");\r\n        if (isFocusedRowKeyDefined) {\r\n            this.option(\"focusedRowKey\", null)\r\n        }\r\n        keyboardController.setFocusedRowIndex(-1);\r\n        this.option(\"focusedRowIndex\", -1);\r\n        this.getController(\"data\").updateItems({\r\n            changeType: \"updateFocusedRow\",\r\n            focusedRowKey: null\r\n        });\r\n        keyboardController._fireFocusedRowChanged(void 0, -1)\r\n    },\r\n    _isValidFocusedRowIndex: function(rowIndex) {\r\n        var dataController = this.getController(\"data\");\r\n        var row = dataController.getVisibleRows()[rowIndex];\r\n        return !row || \"data\" === row.rowType || \"group\" === row.rowType\r\n    },\r\n    publicMethods: function() {\r\n        return [\"navigateToRow\", \"isRowFocused\"]\r\n    },\r\n    navigateToRow: function(key) {\r\n        if (!this.isAutoNavigateToFocusedRow()) {\r\n            this.option(\"focusedRowIndex\", -1)\r\n        }\r\n        return this._navigateToRow(key)\r\n    },\r\n    _navigateToRow: function(key, needFocusRow) {\r\n        var that = this;\r\n        var dataController = that.getController(\"data\");\r\n        var isAutoNavigate = that.isAutoNavigateToFocusedRow();\r\n        var d = new Deferred;\r\n        if (void 0 === key || !dataController.dataSource()) {\r\n            return d.reject().promise()\r\n        }\r\n        var rowIndexByKey = that.getFocusedRowIndexByKey(key);\r\n        if (!isAutoNavigate && needFocusRow || rowIndexByKey >= 0) {\r\n            that._navigateTo(key, d, needFocusRow)\r\n        } else {\r\n            dataController.getPageIndexByKey(key).done((function(pageIndex) {\r\n                if (pageIndex < 0) {\r\n                    d.resolve(-1);\r\n                    return\r\n                }\r\n                if (pageIndex === dataController.pageIndex()) {\r\n                    dataController.reload().done((function() {\r\n                        if (that.isRowFocused(key) && dataController.getRowIndexByKey(key) >= 0) {\r\n                            d.resolve(that.getFocusedRowIndexByKey(key))\r\n                        } else {\r\n                            that._navigateTo(key, d, needFocusRow)\r\n                        }\r\n                    })).fail(d.reject)\r\n                } else {\r\n                    dataController.pageIndex(pageIndex).done((function() {\r\n                        that._navigateTo(key, d, needFocusRow)\r\n                    })).fail(d.reject)\r\n                }\r\n            })).fail(d.reject)\r\n        }\r\n        return d.promise()\r\n    },\r\n    _navigateTo: function(key, deferred, needFocusRow) {\r\n        var visibleRowIndex = this.getController(\"data\").getRowIndexByKey(key);\r\n        var isVirtualRowRenderingMode = gridCoreUtils.isVirtualRowRendering(this);\r\n        var isAutoNavigate = this.isAutoNavigateToFocusedRow();\r\n        if (isAutoNavigate && isVirtualRowRenderingMode && visibleRowIndex < 0) {\r\n            this._navigateToVirtualRow(key, deferred, needFocusRow)\r\n        } else {\r\n            this._navigateToVisibleRow(key, deferred, needFocusRow)\r\n        }\r\n    },\r\n    _navigateToVisibleRow: function(key, deferred, needFocusRow) {\r\n        if (needFocusRow) {\r\n            this._triggerUpdateFocusedRow(key, deferred)\r\n        } else {\r\n            var focusedRowIndex = this.getFocusedRowIndexByKey(key);\r\n            this.getView(\"rowsView\").scrollToRowElement(key, deferred).done((function() {\r\n                deferred.resolve(focusedRowIndex)\r\n            }))\r\n        }\r\n    },\r\n    _navigateToVirtualRow: function(key, deferred, needFocusRow) {\r\n        var that = this;\r\n        var dataController = this.getController(\"data\");\r\n        var rowsScrollController = dataController._rowsScrollController;\r\n        var rowIndex = gridCoreUtils.getIndexByKey(key, dataController.items(true));\r\n        var scrollable = that.getView(\"rowsView\").getScrollable();\r\n        if (rowsScrollController && scrollable && rowIndex >= 0) {\r\n            var focusedRowIndex = rowIndex + dataController.getRowIndexOffset(true);\r\n            var offset = rowsScrollController.getItemOffset(focusedRowIndex);\r\n            that.component.on(\"contentReady\", (function triggerUpdateFocusedRow() {\r\n                that.component.off(\"contentReady\", triggerUpdateFocusedRow);\r\n                if (needFocusRow) {\r\n                    that._triggerUpdateFocusedRow(key, deferred)\r\n                } else {\r\n                    deferred.resolve(focusedRowIndex)\r\n                }\r\n            }));\r\n            this.getView(\"rowsView\").scrollTopPosition(offset)\r\n        } else {\r\n            deferred.resolve(-1)\r\n        }\r\n    },\r\n    _triggerUpdateFocusedRow: function(key, deferred) {\r\n        var dataController = this.getController(\"data\");\r\n        var focusedRowIndex = this.getFocusedRowIndexByKey(key);\r\n        if (this._isValidFocusedRowIndex(focusedRowIndex)) {\r\n            var d;\r\n            if (this.option(\"focusedRowEnabled\")) {\r\n                dataController.updateItems({\r\n                    changeType: \"updateFocusedRow\",\r\n                    focusedRowKey: key\r\n                })\r\n            } else {\r\n                d = this.getView(\"rowsView\").scrollToRowElement(key)\r\n            }\r\n            when(d).done(() => {\r\n                this.getController(\"keyboardNavigation\").setFocusedRowIndex(focusedRowIndex);\r\n                deferred && deferred.resolve(focusedRowIndex)\r\n            })\r\n        } else {\r\n            deferred && deferred.resolve(-1)\r\n        }\r\n    },\r\n    getFocusedRowIndexByKey: function(key) {\r\n        var dataController = this.getController(\"data\");\r\n        var loadedRowIndex = dataController.getRowIndexByKey(key, true);\r\n        return loadedRowIndex >= 0 ? loadedRowIndex + dataController.getRowIndexOffset(true) : -1\r\n    },\r\n    _focusRowByKeyOrIndex: function() {\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        var currentFocusedRowIndex = this.option(\"focusedRowIndex\");\r\n        var keyboardController = this.getController(\"keyboardNavigation\");\r\n        var dataController = this.getController(\"data\");\r\n        if (isDefined(focusedRowKey)) {\r\n            var visibleRowIndex = dataController.getRowIndexByKey(focusedRowKey);\r\n            if (visibleRowIndex >= 0) {\r\n                if (keyboardController._isVirtualScrolling()) {\r\n                    currentFocusedRowIndex = visibleRowIndex + dataController.getRowIndexOffset()\r\n                }\r\n                keyboardController.setFocusedRowIndex(currentFocusedRowIndex);\r\n                this._triggerUpdateFocusedRow(focusedRowKey)\r\n            } else {\r\n                this._navigateToRow(focusedRowKey, true).done(focusedRowIndex => {\r\n                    if (currentFocusedRowIndex >= 0 && focusedRowIndex < 0) {\r\n                        this._focusRowByIndex()\r\n                    } else if (currentFocusedRowIndex < 0 && focusedRowIndex >= 0) {\r\n                        keyboardController.setFocusedRowIndex(focusedRowIndex)\r\n                    }\r\n                })\r\n            }\r\n        } else if (currentFocusedRowIndex >= 0) {\r\n            this.getController(\"focus\")._focusRowByIndex(currentFocusedRowIndex)\r\n        }\r\n    },\r\n    isRowFocused: function(key) {\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        if (isDefined(focusedRowKey)) {\r\n            return equalByValue(key, this.option(\"focusedRowKey\"))\r\n        }\r\n    },\r\n    updateFocusedRow: function(change) {\r\n        var that = this;\r\n        var focusedRowIndex = that._dataController.getRowIndexByKey(change.focusedRowKey);\r\n        var rowsView = that.getView(\"rowsView\");\r\n        var $tableElement;\r\n        each(rowsView.getTableElements(), (function(index, element) {\r\n            var isMainTable = 0 === index;\r\n            $tableElement = $(element);\r\n            that._clearPreviousFocusedRow($tableElement, focusedRowIndex);\r\n            that._prepareFocusedRow({\r\n                changedItem: that._dataController.getVisibleRows()[focusedRowIndex],\r\n                $tableElement: $tableElement,\r\n                focusedRowIndex: focusedRowIndex,\r\n                isMainTable: isMainTable\r\n            })\r\n        }))\r\n    },\r\n    _clearPreviousFocusedRow: function($tableElement, focusedRowIndex) {\r\n        var $prevRowFocusedElement = $tableElement.find(FOCUSED_ROW_SELECTOR).filter((_, focusedRow) => {\r\n            var $focusedRowTable = $(focusedRow).closest(\".\".concat(this.addWidgetPrefix(TABLE_POSTFIX_CLASS)));\r\n            return $tableElement.is($focusedRowTable)\r\n        });\r\n        $prevRowFocusedElement.removeClass(ROW_FOCUSED_CLASS).removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabindex\");\r\n        $prevRowFocusedElement.children(\"td\").removeAttr(\"tabindex\");\r\n        if (0 !== focusedRowIndex) {\r\n            var $firstRow = $(this.getView(\"rowsView\").getRowElement(0));\r\n            $firstRow.removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabIndex\")\r\n        }\r\n    },\r\n    _prepareFocusedRow: function(options) {\r\n        var $row;\r\n        var changedItem = options.changedItem;\r\n        if (changedItem && (\"data\" === changedItem.rowType || \"group\" === changedItem.rowType)) {\r\n            var focusedRowIndex = options.focusedRowIndex;\r\n            var $tableElement = options.$tableElement;\r\n            var isMainTable = options.isMainTable;\r\n            var tabIndex = this.option(\"tabindex\") || 0;\r\n            var rowsView = this.getView(\"rowsView\");\r\n            $row = $(rowsView._getRowElements($tableElement).eq(focusedRowIndex));\r\n            $row.addClass(ROW_FOCUSED_CLASS).attr(\"tabindex\", tabIndex);\r\n            if (isMainTable) {\r\n                rowsView.scrollToElementVertically($row)\r\n            }\r\n        }\r\n        return $row\r\n    }\r\n});\r\nexport var focusModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            focusedRowEnabled: false,\r\n            autoNavigateToFocusedRow: true,\r\n            focusedRowKey: null,\r\n            focusedRowIndex: -1,\r\n            focusedColumnIndex: -1\r\n        }\r\n    },\r\n    controllers: {\r\n        focus: FocusController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            keyboardNavigation: {\r\n                init: function() {\r\n                    var rowIndex = this.option(\"focusedRowIndex\");\r\n                    var columnIndex = this.option(\"focusedColumnIndex\");\r\n                    this.createAction(\"onFocusedRowChanging\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.createAction(\"onFocusedRowChanged\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.createAction(\"onFocusedCellChanging\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.createAction(\"onFocusedCellChanged\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.callBase();\r\n                    this.setRowFocusType();\r\n                    this._focusedCellPosition = {};\r\n                    if (isDefined(rowIndex)) {\r\n                        this._focusedCellPosition.rowIndex = this.option(\"focusedRowIndex\")\r\n                    }\r\n                    if (isDefined(columnIndex)) {\r\n                        this._focusedCellPosition.columnIndex = this.option(\"focusedColumnIndex\")\r\n                    }\r\n                },\r\n                setFocusedRowIndex: function(rowIndex) {\r\n                    var dataController = this.getController(\"data\");\r\n                    this.callBase(rowIndex);\r\n                    var visibleRowIndex = rowIndex - dataController.getRowIndexOffset();\r\n                    var visibleRow = dataController.getVisibleRows()[visibleRowIndex];\r\n                    if (!visibleRow || !visibleRow.isNewRow) {\r\n                        this.option(\"focusedRowIndex\", rowIndex)\r\n                    }\r\n                },\r\n                setFocusedColumnIndex: function(columnIndex) {\r\n                    this.callBase(columnIndex);\r\n                    this.option(\"focusedColumnIndex\", columnIndex)\r\n                },\r\n                _escapeKeyHandler: function(eventArgs, isEditing) {\r\n                    if (isEditing || !this.option(\"focusedRowEnabled\")) {\r\n                        this.callBase(eventArgs, isEditing);\r\n                        return\r\n                    }\r\n                    if (this.isCellFocusType()) {\r\n                        this.setRowFocusType();\r\n                        this._focus(this._getCellElementFromTarget(eventArgs.originalEvent.target), true)\r\n                    }\r\n                },\r\n                _updateFocusedCellPosition: function($cell, direction) {\r\n                    var prevRowIndex = this.option(\"focusedRowIndex\");\r\n                    var prevColumnIndex = this.option(\"focusedColumnIndex\");\r\n                    var position = this.callBase($cell, direction);\r\n                    if (position && position.columnIndex >= 0) {\r\n                        this._fireFocusedCellChanged($cell, prevColumnIndex, prevRowIndex)\r\n                    }\r\n                }\r\n            },\r\n            editorFactory: {\r\n                renderFocusOverlay: function($element, hideBorder) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var focusedRowEnabled = this.option(\"focusedRowEnabled\");\r\n                    var editingController = this.getController(\"editing\");\r\n                    var $cell;\r\n                    if (!focusedRowEnabled || !(null !== keyboardController && void 0 !== keyboardController && keyboardController.isRowFocusType()) || editingController.isEditing()) {\r\n                        this.callBase($element, hideBorder)\r\n                    } else if (focusedRowEnabled) {\r\n                        var isRowElement = \"row\" === keyboardController._getElementType($element);\r\n                        if (isRowElement && !$element.hasClass(ROW_FOCUSED_CLASS)) {\r\n                            $cell = keyboardController.getFirstValidCellInRow($element);\r\n                            keyboardController.focus($cell)\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            columns: {\r\n                getSortDataSourceParameters: function(_, sortByKey) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var dataController = this.getController(\"data\");\r\n                    var dataSource = dataController._dataSource;\r\n                    var store = dataController.store();\r\n                    var key = store && store.key();\r\n                    var remoteOperations = dataSource && dataSource.remoteOperations() || {};\r\n                    var isLocalOperations = Object.keys(remoteOperations).every(operationName => !remoteOperations[operationName]);\r\n                    if (key && (this.option(\"focusedRowEnabled\") && false !== this.getController(\"focus\").isAutoNavigateToFocusedRow() || sortByKey)) {\r\n                        key = Array.isArray(key) ? key : [key];\r\n                        var notSortedKeys = key.filter(key => !this.columnOption(key, \"sortOrder\"));\r\n                        if (notSortedKeys.length) {\r\n                            result = result || [];\r\n                            if (isLocalOperations) {\r\n                                result.push({\r\n                                    selector: dataSource.getDataIndexGetter(),\r\n                                    desc: false\r\n                                })\r\n                            } else {\r\n                                notSortedKeys.forEach(notSortedKey => result.push({\r\n                                    selector: notSortedKey,\r\n                                    desc: false\r\n                                }))\r\n                            }\r\n                        }\r\n                    }\r\n                    return result\r\n                }\r\n            },\r\n            data: {\r\n                _applyChange: function(change) {\r\n                    if (change && \"updateFocusedRow\" === change.changeType) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _fireChanged: function(e) {\r\n                    this.callBase(e);\r\n                    if (this.option(\"focusedRowEnabled\") && this._dataSource) {\r\n                        var isPartialUpdate = \"update\" === e.changeType && e.repaintChangesOnly;\r\n                        var isPartialUpdateWithDeleting = isPartialUpdate && e.changeTypes && e.changeTypes.indexOf(\"remove\") >= 0;\r\n                        if (\"refresh\" === e.changeType && e.items.length || isPartialUpdateWithDeleting) {\r\n                            this._updatePageIndexes();\r\n                            this.processUpdateFocusedRow(e)\r\n                        } else if (\"append\" === e.changeType || \"prepend\" === e.changeType) {\r\n                            this._updatePageIndexes()\r\n                        } else if (\"update\" === e.changeType && e.repaintChangesOnly) {\r\n                            this.processUpdateFocusedRow(e)\r\n                        }\r\n                    }\r\n                },\r\n                _updatePageIndexes: function() {\r\n                    var prevRenderingPageIndex = this._lastRenderingPageIndex || 0;\r\n                    var renderingPageIndex = this._rowsScrollController ? this._rowsScrollController.pageIndex() : 0;\r\n                    this._lastRenderingPageIndex = renderingPageIndex;\r\n                    this._isPagingByRendering = renderingPageIndex !== prevRenderingPageIndex\r\n                },\r\n                isPagingByRendering: function() {\r\n                    return this._isPagingByRendering\r\n                },\r\n                processUpdateFocusedRow: function(e) {\r\n                    var operationTypes = e.operationTypes || {};\r\n                    var focusController = this.getController(\"focus\");\r\n                    var {\r\n                        reload: reload,\r\n                        fullReload: fullReload\r\n                    } = operationTypes;\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var isVirtualScrolling = keyboardController._isVirtualScrolling();\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var isAutoNavigate = focusController.isAutoNavigateToFocusedRow();\r\n                    if (reload && !fullReload && isDefined(focusedRowKey)) {\r\n                        focusController._navigateToRow(focusedRowKey, true).done((function(focusedRowIndex) {\r\n                            if (focusedRowIndex < 0) {\r\n                                focusController._focusRowByIndex(void 0, operationTypes)\r\n                            }\r\n                        }))\r\n                    } else if (operationTypes.paging && !isVirtualScrolling) {\r\n                        if (isAutoNavigate) {\r\n                            var rowIndexByKey = this.getRowIndexByKey(focusedRowKey);\r\n                            var isValidRowIndexByKey = rowIndexByKey >= 0;\r\n                            var focusedRowIndex = this.option(\"focusedRowIndex\");\r\n                            var needFocusRowByIndex = focusedRowIndex >= 0 && (focusedRowIndex === rowIndexByKey || !isValidRowIndexByKey);\r\n                            if (needFocusRowByIndex) {\r\n                                focusController._focusRowByIndex(void 0, operationTypes)\r\n                            }\r\n                        } else if (this.getRowIndexByKey(focusedRowKey) < 0) {\r\n                            this.option(\"focusedRowIndex\", -1)\r\n                        }\r\n                    } else if (operationTypes.fullReload) {\r\n                        focusController._focusRowByKeyOrIndex()\r\n                    }\r\n                },\r\n                getPageIndexByKey: function(key) {\r\n                    var that = this;\r\n                    var d = new Deferred;\r\n                    that.getGlobalRowIndexByKey(key).done((function(globalIndex) {\r\n                        d.resolve(globalIndex >= 0 ? Math.floor(globalIndex / that.pageSize()) : -1)\r\n                    })).fail(d.reject);\r\n                    return d.promise()\r\n                },\r\n                getGlobalRowIndexByKey: function(key) {\r\n                    if (this._dataSource.group()) {\r\n                        return this._calculateGlobalRowIndexByGroupedData(key)\r\n                    }\r\n                    return this._calculateGlobalRowIndexByFlatData(key)\r\n                },\r\n                _calculateGlobalRowIndexByFlatData: function(key, groupFilter, useGroup) {\r\n                    var that = this;\r\n                    var deferred = new Deferred;\r\n                    var dataSource = that._dataSource;\r\n                    if (Array.isArray(key)) {\r\n                        return deferred.resolve(-1).promise()\r\n                    }\r\n                    var filter = that._generateFilterByKey(key);\r\n                    dataSource.load({\r\n                        filter: that._concatWithCombinedFilter(filter),\r\n                        skip: 0,\r\n                        take: 1\r\n                    }).done((function(data) {\r\n                        if (data.length > 0) {\r\n                            filter = that._generateOperationFilterByKey(key, data[0], useGroup);\r\n                            dataSource.load({\r\n                                filter: that._concatWithCombinedFilter(filter, groupFilter),\r\n                                skip: 0,\r\n                                take: 1,\r\n                                requireTotalCount: true\r\n                            }).done((function(_, extra) {\r\n                                deferred.resolve(extra.totalCount)\r\n                            }))\r\n                        } else {\r\n                            deferred.resolve(-1)\r\n                        }\r\n                    }));\r\n                    return deferred.promise()\r\n                },\r\n                _concatWithCombinedFilter: function(filter, groupFilter) {\r\n                    var combinedFilter = this.getCombinedFilter();\r\n                    return gridCoreUtils.combineFilters([filter, combinedFilter, groupFilter])\r\n                },\r\n                _generateBooleanFilter: function(selector, value, sortInfo) {\r\n                    var result;\r\n                    if (false === value) {\r\n                        result = [selector, \"=\", sortInfo.desc ? true : null]\r\n                    } else if (true === value ? !sortInfo.desc : sortInfo.desc) {\r\n                        result = [selector, \"<>\", value]\r\n                    }\r\n                    return result\r\n                },\r\n                _generateOperationFilterByKey: function(key, rowData, useGroup) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var filter = that._generateFilterByKey(key, \"<\");\r\n                    var sort = that._columnsController.getSortDataSourceParameters(!dataSource.remoteOperations().filtering, true);\r\n                    if (useGroup) {\r\n                        var group = that._columnsController.getGroupDataSourceParameters(!dataSource.remoteOperations().filtering);\r\n                        if (group) {\r\n                            sort = sort ? group.concat(sort) : group\r\n                        }\r\n                    }\r\n                    if (sort) {\r\n                        sort.slice().reverse().forEach((function(sortInfo) {\r\n                            var selector = sortInfo.selector;\r\n                            var getter;\r\n                            if (\"function\" === typeof selector) {\r\n                                getter = selector\r\n                            } else {\r\n                                getter = that._columnsController.columnOption(selector, \"selector\")\r\n                            }\r\n                            var value = getter ? getter(rowData) : rowData[selector];\r\n                            filter = [\r\n                                [selector, \"=\", value], \"and\", filter\r\n                            ];\r\n                            if (null === value || isBoolean(value)) {\r\n                                var booleanFilter = that._generateBooleanFilter(selector, value, sortInfo);\r\n                                if (booleanFilter) {\r\n                                    filter = [booleanFilter, \"or\", filter]\r\n                                }\r\n                            } else {\r\n                                var filterOperation = sortInfo.desc ? \">\" : \"<\";\r\n                                var sortFilter = [selector, filterOperation, value];\r\n                                if (!sortInfo.desc) {\r\n                                    sortFilter = [sortFilter, \"or\", [selector, \"=\", null]]\r\n                                }\r\n                                filter = [sortFilter, \"or\", filter]\r\n                            }\r\n                        }))\r\n                    }\r\n                    return filter\r\n                },\r\n                _generateFilterByKey: function(key, operation) {\r\n                    var dataSourceKey = this._dataSource.key();\r\n                    var filter = [];\r\n                    if (!operation) {\r\n                        operation = \"=\"\r\n                    }\r\n                    if (Array.isArray(dataSourceKey)) {\r\n                        for (var i = 0; i < dataSourceKey.length; ++i) {\r\n                            var keyPart = key[dataSourceKey[i]];\r\n                            if (keyPart) {\r\n                                if (filter.length > 0) {\r\n                                    filter.push(\"and\")\r\n                                }\r\n                                filter.push([dataSourceKey[i], operation, keyPart])\r\n                            }\r\n                        }\r\n                    } else {\r\n                        filter = [dataSourceKey, operation, key]\r\n                    }\r\n                    return filter\r\n                },\r\n                _getLastItemIndex: function() {\r\n                    return this.items(true).length - 1\r\n                }\r\n            },\r\n            editing: {\r\n                _deleteRowCore: function(rowIndex) {\r\n                    var deferred = this.callBase.apply(this, arguments);\r\n                    var dataController = this.getController(\"data\");\r\n                    var rowKey = dataController.getKeyByRowIndex(rowIndex);\r\n                    deferred.done(() => {\r\n                        var rowIndex = dataController.getRowIndexByKey(rowKey);\r\n                        var visibleRows = dataController.getVisibleRows();\r\n                        if (-1 === rowIndex && !visibleRows.length) {\r\n                            this.getController(\"focus\")._resetFocusedRow()\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (this.option(\"focusedRowEnabled\") && row) {\r\n                        if (this.getController(\"focus\").isRowFocused(row.key)) {\r\n                            $row.addClass(ROW_FOCUSED_CLASS)\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _checkRowKeys: function(options) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.option(\"focusedRowEnabled\") && this.option(\"dataSource\")) {\r\n                        var store = this._dataController.store();\r\n                        if (store && !store.key()) {\r\n                            this._dataController.fireError(\"E1042\", \"Row focusing\")\r\n                        }\r\n                    }\r\n                },\r\n                _update: function(change) {\r\n                    if (\"updateFocusedRow\" === change.changeType) {\r\n                        if (this.option(\"focusedRowEnabled\")) {\r\n                            this.getController(\"focus\").updateFocusedRow(change)\r\n                        }\r\n                    } else {\r\n                        this.callBase(change)\r\n                    }\r\n                },\r\n                updateFocusElementTabIndex: function($cellElements, preventScroll) {\r\n                    var rowIndex = this.getController(\"keyboardNavigation\").getVisibleRowIndex();\r\n                    var row = this._dataController.getVisibleRows()[rowIndex];\r\n                    if (this.option(\"focusedRowEnabled\") && !(null !== row && void 0 !== row && row.isNewRow)) {\r\n                        this._setFocusedRowElementTabIndex(preventScroll)\r\n                    } else {\r\n                        this.callBase($cellElements)\r\n                    }\r\n                },\r\n                _setFocusedRowElementTabIndex: function(preventScroll) {\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var tabIndex = this.option(\"tabIndex\") || 0;\r\n                    var dataController = this._dataController;\r\n                    var columnsController = this._columnsController;\r\n                    var rowIndex = dataController.getRowIndexByKey(focusedRowKey);\r\n                    var columnIndex = this.option(\"focusedColumnIndex\");\r\n                    var $row = this._findRowElementForTabIndex();\r\n                    if (!isDefined(this._scrollToFocusOnResize)) {\r\n                        this._scrollToFocusOnResize = () => {\r\n                            this.scrollToElementVertically(this._findRowElementForTabIndex());\r\n                            this.resizeCompleted.remove(this._scrollToFocusOnResize)\r\n                        }\r\n                    }\r\n                    $row.attr(\"tabIndex\", tabIndex);\r\n                    if (rowIndex >= 0 && !preventScroll) {\r\n                        if (columnIndex < 0) {\r\n                            columnIndex = 0\r\n                        }\r\n                        rowIndex += dataController.getRowIndexOffset();\r\n                        columnIndex += columnsController.getColumnIndexOffset();\r\n                        this.getController(\"keyboardNavigation\").setFocusedCellPosition(rowIndex, columnIndex);\r\n                        if (this.getController(\"focus\").isAutoNavigateToFocusedRow()) {\r\n                            var dataSource = dataController.dataSource();\r\n                            var operationTypes = dataSource && dataSource.operationTypes();\r\n                            if (operationTypes && !operationTypes.paging && !dataController.isPagingByRendering()) {\r\n                                this.resizeCompleted.remove(this._scrollToFocusOnResize);\r\n                                this.resizeCompleted.add(this._scrollToFocusOnResize)\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _findRowElementForTabIndex: function() {\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var rowIndex = this._dataController.getRowIndexByKey(focusedRowKey);\r\n                    return $(this.getRowElement(rowIndex >= 0 ? rowIndex : 0))\r\n                },\r\n                scrollToRowElement: function(key) {\r\n                    var rowIndex = this.getController(\"data\").getRowIndexByKey(key);\r\n                    var $row = $(this.getRow(rowIndex));\r\n                    return this.scrollToElementVertically($row)\r\n                },\r\n                scrollToElementVertically: function($row) {\r\n                    var scrollable = this.getScrollable();\r\n                    if (scrollable && $row.length) {\r\n                        var position = scrollable.getScrollElementPosition($row, \"vertical\");\r\n                        return this.scrollTopPosition(position)\r\n                    }\r\n                    return (new Deferred).resolve()\r\n                },\r\n                scrollTopPosition: function(scrollTop) {\r\n                    var d = new Deferred;\r\n                    var scrollable = this.getScrollable();\r\n                    if (scrollable) {\r\n                        var currentScrollTop = scrollable.scrollTop();\r\n                        var scrollHandler = () => {\r\n                            scrollable.off(\"scroll\", scrollHandler);\r\n                            d.resolve()\r\n                        };\r\n                        if (scrollTop !== currentScrollTop) {\r\n                            scrollable.on(\"scroll\", scrollHandler);\r\n                            this._dataController.resetFilterApplying();\r\n                            scrollable.scrollTo({\r\n                                top: scrollTop\r\n                            });\r\n                            return d.promise()\r\n                        }\r\n                    }\r\n                    return d.resolve()\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.focus.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    focusModule\r\n} from \"../grid_core/ui.grid_core.focus\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    createGroupFilter\r\n} from \"./ui.data_grid.utils\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\r\ngridCore.registerModule(\"focus\", extend(true, {}, focusModule, {\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                changeRowExpand: function(path, isRowClick) {\r\n                    if (this.option(\"focusedRowEnabled\") && Array.isArray(path) && this.isRowExpanded(path)) {\r\n                        var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                        if ((!isRowClick || !keyboardNavigation.isKeyboardEnabled()) && this._isFocusedRowInsideGroup(path)) {\r\n                            this.option(\"focusedRowKey\", path)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _isFocusedRowInsideGroup: function(path) {\r\n                    var columnsController = this.getController(\"columns\");\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var rowIndex = this.getRowIndexByKey(focusedRowKey);\r\n                    var focusedRow = rowIndex >= 0 && this.getVisibleRows()[rowIndex];\r\n                    var groups = columnsController.getGroupDataSourceParameters(true);\r\n                    if (focusedRow) {\r\n                        for (var i = 0; i < path.length; ++i) {\r\n                            var getter = compileGetter(groups[i] && groups[i].selector);\r\n                            if (getter(focusedRow.data) !== path[i]) {\r\n                                return false\r\n                            }\r\n                        }\r\n                    }\r\n                    return true\r\n                },\r\n                _getGroupPath: function(group) {\r\n                    var groupPath = [group.key];\r\n                    var items = group.items;\r\n                    while (items && items[0]) {\r\n                        var item = items[0];\r\n                        if (void 0 !== item.key) {\r\n                            groupPath.push(item.key)\r\n                        }\r\n                        items = item.items\r\n                    }\r\n                    return groupPath\r\n                },\r\n                _expandGroupByPath: function(that, groupPath, level) {\r\n                    var d = new Deferred;\r\n                    level++;\r\n                    that.expandRow(groupPath.slice(0, level)).done((function() {\r\n                        if (level === groupPath.length) {\r\n                            d.resolve()\r\n                        } else {\r\n                            that._expandGroupByPath(that, groupPath, level).done(d.resolve).fail(d.reject)\r\n                        }\r\n                    })).fail(d.reject);\r\n                    return d.promise()\r\n                },\r\n                _calculateGlobalRowIndexByGroupedData: function(key) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var filter = that._generateFilterByKey(key);\r\n                    var deferred = new Deferred;\r\n                    var isGroupKey = Array.isArray(key);\r\n                    var group = dataSource.group();\r\n                    if (isGroupKey) {\r\n                        return deferred.resolve(-1).promise()\r\n                    }\r\n                    if (!dataSource._grouping._updatePagingOptions) {\r\n                        that._calculateGlobalRowIndexByFlatData(key, null, true).done(deferred.resolve).fail(deferred.reject);\r\n                        return deferred\r\n                    }\r\n                    dataSource.load({\r\n                        filter: that._concatWithCombinedFilter(filter),\r\n                        group: group\r\n                    }).done((function(data) {\r\n                        if (!data || 0 === data.length || !isDefined(data[0].key) || -1 === data[0].key) {\r\n                            return deferred.resolve(-1).promise()\r\n                        }\r\n                        var groupPath = that._getGroupPath(data[0]);\r\n                        that._expandGroupByPath(that, groupPath, 0).done((function() {\r\n                            that._calculateExpandedRowGlobalIndex(deferred, key, groupPath, group)\r\n                        })).fail(deferred.reject)\r\n                    })).fail(deferred.reject);\r\n                    return deferred.promise()\r\n                },\r\n                _calculateExpandedRowGlobalIndex: function(deferred, key, groupPath, group) {\r\n                    var groupFilter = createGroupFilter(groupPath, {\r\n                        group: group\r\n                    });\r\n                    var dataSource = this._dataSource;\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    var isVirtualScrolling = \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\r\n                    var pageSize = dataSource.pageSize();\r\n                    var groupOffset;\r\n                    dataSource._grouping._updatePagingOptions({\r\n                        skip: 0,\r\n                        take: MAX_SAFE_INTEGER\r\n                    }, (function(groupInfo, totalOffset) {\r\n                        if (equalByValue(groupInfo.path, groupPath)) {\r\n                            groupOffset = totalOffset\r\n                        }\r\n                    }));\r\n                    this._calculateGlobalRowIndexByFlatData(key, groupFilter).done((function(dataOffset) {\r\n                        var count;\r\n                        var groupContinuationCount;\r\n                        if (dataOffset < 0) {\r\n                            deferred.resolve(-1);\r\n                            return\r\n                        }\r\n                        var currentPageOffset = groupOffset % pageSize || pageSize;\r\n                        count = currentPageOffset + dataOffset - groupPath.length;\r\n                        if (isVirtualScrolling) {\r\n                            groupContinuationCount = 0\r\n                        } else {\r\n                            groupContinuationCount = Math.floor(count / (pageSize - groupPath.length)) * groupPath.length\r\n                        }\r\n                        count = groupOffset + dataOffset + groupContinuationCount;\r\n                        deferred.resolve(count)\r\n                    })).fail(deferred.reject)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}));\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.row_dragging.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    setWidth,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport Sortable from \"../sortable\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    deferUpdate\r\n} from \"../../core/utils/common\";\r\nvar COMMAND_HANDLE_CLASS = \"dx-command-drag\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar HANDLE_ICON_CLASS = \"drag-icon\";\r\nvar ROWS_VIEW = \"rowsview\";\r\nvar SORTABLE_WITHOUT_HANDLE_CLASS = \"dx-sortable-without-handle\";\r\nvar RowDraggingExtender = {\r\n    init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._updateHandleColumn()\r\n    },\r\n    _allowReordering: function() {\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        return !!(rowDragging && (rowDragging.allowReordering || rowDragging.allowDropInsideItem || rowDragging.group))\r\n    },\r\n    _updateHandleColumn: function() {\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        var allowReordering = this._allowReordering();\r\n        var columnsController = this._columnsController;\r\n        var isHandleColumnVisible = allowReordering && rowDragging.showDragIcons;\r\n        columnsController && columnsController.addCommandColumn({\r\n            type: \"drag\",\r\n            command: \"drag\",\r\n            visibleIndex: -2,\r\n            alignment: \"center\",\r\n            cssClass: COMMAND_HANDLE_CLASS,\r\n            width: \"auto\",\r\n            cellTemplate: this._getHandleTemplate(),\r\n            visible: isHandleColumnVisible\r\n        });\r\n        columnsController.columnOption(\"type:drag\", \"visible\", isHandleColumnVisible)\r\n    },\r\n    _renderContent: function() {\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        var allowReordering = this._allowReordering();\r\n        var $content = this.callBase.apply(this, arguments);\r\n        var isFixedTableRendering = this._isFixedTableRendering;\r\n        var sortableName = \"_sortable\";\r\n        var sortableFixedName = \"_sortableFixed\";\r\n        var currentSortableName = isFixedTableRendering ? sortableFixedName : sortableName;\r\n        var anotherSortableName = isFixedTableRendering ? sortableName : sortableFixedName;\r\n        var togglePointerEventsStyle = toggle => {\r\n            var _this$sortableFixedNa;\r\n            null === (_this$sortableFixedNa = this[sortableFixedName]) || void 0 === _this$sortableFixedNa ? void 0 : _this$sortableFixedNa.$element().css(\"pointerEvents\", toggle ? \"auto\" : \"\")\r\n        };\r\n        var filter = this.option(\"dataRowTemplate\") ? \"> table > tbody.dx-row:not(.dx-freespace-row):not(.dx-virtual-row)\" : \"> table > tbody > .dx-row:not(.dx-freespace-row):not(.dx-virtual-row)\";\r\n        if ((allowReordering || this[currentSortableName]) && $content.length) {\r\n            this[currentSortableName] = this._createComponent($content, Sortable, extend({\r\n                component: this.component,\r\n                contentTemplate: null,\r\n                filter: filter,\r\n                dragTemplate: this._getDraggableRowTemplate(),\r\n                handle: rowDragging.showDragIcons && \".\".concat(COMMAND_HANDLE_CLASS),\r\n                dropFeedbackMode: \"indicate\"\r\n            }, rowDragging, {\r\n                onDragStart: e => {\r\n                    var _this$getController, _rowDragging$onDragSt;\r\n                    null === (_this$getController = this.getController(\"keyboardNavigation\")) || void 0 === _this$getController ? void 0 : _this$getController._resetFocusedCell();\r\n                    var row = e.component.getVisibleRows()[e.fromIndex];\r\n                    e.itemData = row && row.data;\r\n                    var isDataRow = row && \"data\" === row.rowType;\r\n                    e.cancel = !allowReordering || !isDataRow;\r\n                    null === (_rowDragging$onDragSt = rowDragging.onDragStart) || void 0 === _rowDragging$onDragSt ? void 0 : _rowDragging$onDragSt.call(rowDragging, e)\r\n                },\r\n                onDragEnter: () => {\r\n                    togglePointerEventsStyle(true)\r\n                },\r\n                onDragLeave: () => {\r\n                    togglePointerEventsStyle(false)\r\n                },\r\n                onDragEnd: e => {\r\n                    var _rowDragging$onDragEn;\r\n                    togglePointerEventsStyle(false);\r\n                    null === (_rowDragging$onDragEn = rowDragging.onDragEnd) || void 0 === _rowDragging$onDragEn ? void 0 : _rowDragging$onDragEn.call(rowDragging, e)\r\n                },\r\n                onAdd: e => {\r\n                    var _rowDragging$onAdd;\r\n                    togglePointerEventsStyle(false);\r\n                    null === (_rowDragging$onAdd = rowDragging.onAdd) || void 0 === _rowDragging$onAdd ? void 0 : _rowDragging$onAdd.call(rowDragging, e)\r\n                },\r\n                dropFeedbackMode: rowDragging.dropFeedbackMode,\r\n                onOptionChanged: e => {\r\n                    var hasFixedSortable = this[sortableFixedName];\r\n                    if (hasFixedSortable) {\r\n                        if (\"fromIndex\" === e.name || \"toIndex\" === e.name) {\r\n                            this[anotherSortableName].option(e.name, e.value)\r\n                        }\r\n                    }\r\n                }\r\n            }));\r\n            $content.toggleClass(\"dx-scrollable-container\", isFixedTableRendering);\r\n            $content.toggleClass(SORTABLE_WITHOUT_HANDLE_CLASS, allowReordering && !rowDragging.showDragIcons)\r\n        }\r\n        return $content\r\n    },\r\n    _renderCore(e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (e && \"update\" === e.changeType && e.repaintChangesOnly && gridCoreUtils.isVirtualRowRendering(this)) {\r\n            deferUpdate(() => {\r\n                this._updateSortable()\r\n            })\r\n        }\r\n    },\r\n    _updateSortable() {\r\n        var offset = this._dataController.getRowIndexOffset();\r\n        [this._sortable, this._sortableFixed].forEach(sortable => {\r\n            null === sortable || void 0 === sortable ? void 0 : sortable.option(\"offset\", offset);\r\n            null === sortable || void 0 === sortable ? void 0 : sortable.update()\r\n        })\r\n    },\r\n    _resizeCore: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._updateSortable()\r\n    },\r\n    _getDraggableGridOptions: function(options) {\r\n        var gridOptions = this.option();\r\n        var columns = this.getColumns();\r\n        var $rowElement = $(this.getRowElement(options.rowIndex));\r\n        return {\r\n            dataSource: [{\r\n                id: 1,\r\n                parentId: 0\r\n            }],\r\n            showBorders: true,\r\n            showColumnHeaders: false,\r\n            scrolling: {\r\n                useNative: false,\r\n                showScrollbar: \"never\"\r\n            },\r\n            pager: {\r\n                visible: false\r\n            },\r\n            loadingTimeout: null,\r\n            columnFixing: gridOptions.columnFixing,\r\n            columnAutoWidth: gridOptions.columnAutoWidth,\r\n            showColumnLines: gridOptions.showColumnLines,\r\n            columns: columns.map(column => ({\r\n                width: column.width || column.visibleWidth,\r\n                fixed: column.fixed,\r\n                fixedPosition: column.fixedPosition\r\n            })),\r\n            onRowPrepared: e => {\r\n                var rowsView = e.component.getView(\"rowsView\");\r\n                $(e.rowElement).replaceWith($rowElement.eq(rowsView._isFixedTableRendering ? 1 : 0).clone())\r\n            }\r\n        }\r\n    },\r\n    _getDraggableRowTemplate: function() {\r\n        return options => {\r\n            var $rootElement = this.component.$element();\r\n            var $dataGridContainer = $(\"<div>\");\r\n            setWidth($dataGridContainer, getWidth($rootElement));\r\n            var items = this._dataController.items();\r\n            var row = items && items[options.fromIndex];\r\n            var gridOptions = this._getDraggableGridOptions(row);\r\n            this._createComponent($dataGridContainer, this.component.NAME, gridOptions);\r\n            $dataGridContainer.find(\".dx-gridbase-container\").children(\":not(.\".concat(this.addWidgetPrefix(ROWS_VIEW), \")\")).hide();\r\n            return $dataGridContainer\r\n        }\r\n    },\r\n    _getHandleTemplate: function() {\r\n        return (container, options) => {\r\n            if (\"data\" === options.rowType) {\r\n                $(container).addClass(CELL_FOCUS_DISABLED_CLASS);\r\n                return $(\"<span>\").addClass(this.addWidgetPrefix(HANDLE_ICON_CLASS))\r\n            } else {\r\n                gridCoreUtils.setEmptyText($(container))\r\n            }\r\n        }\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"rowDragging\" === args.name) {\r\n            this._updateHandleColumn();\r\n            this._invalidate(true, true);\r\n            args.handled = true\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    }\r\n};\r\nexport var rowDraggingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            rowDragging: {\r\n                showDragIcons: true,\r\n                dropFeedbackMode: \"indicate\",\r\n                allowReordering: false,\r\n                allowDropInsideItem: false\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: RowDraggingExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.row_dragging.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    rowDraggingModule\r\n} from \"../grid_core/ui.grid_core.row_dragging\";\r\ngridCore.registerModule(\"rowDragging\", rowDraggingModule);\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport DataGrid from \"./ui.data_grid.base\";\r\nexport default DataGrid;\r\nimport \"./ui.data_grid.state_storing\";\r\nimport \"./ui.data_grid.selection\";\r\nimport \"./ui.data_grid.column_chooser\";\r\nimport \"./ui.data_grid.grouping\";\r\nimport \"./ui.data_grid.master_detail\";\r\nimport \"./ui.data_grid.editing\";\r\nimport \"./ui.data_grid.editing_row_based\";\r\nimport \"./ui.data_grid.editing_form_based\";\r\nimport \"./ui.data_grid.editing_cell_based\";\r\nimport \"./ui.data_grid.validating\";\r\nimport \"./ui.data_grid.virtual_scrolling\";\r\nimport \"./ui.data_grid.filter_row\";\r\nimport \"./ui.data_grid.header_filter\";\r\nimport \"./ui.data_grid.filter_sync\";\r\nimport \"./ui.data_grid.filter_builder\";\r\nimport \"./ui.data_grid.filter_panel\";\r\nimport \"./ui.data_grid.search\";\r\nimport \"./ui.data_grid.pager\";\r\nimport \"./ui.data_grid.columns_resizing_reordering\";\r\nimport \"./ui.data_grid.keyboard_navigation\";\r\nimport \"./ui.data_grid.summary\";\r\nimport \"./ui.data_grid.column_fixing\";\r\nimport \"./ui.data_grid.adaptivity\";\r\nimport \"./ui.data_grid.virtual_columns\";\r\nimport \"./ui.data_grid.export\";\r\nimport \"./ui.data_grid.focus\";\r\nimport \"./ui.data_grid.row_dragging\";\r\n","/**\r\n * DevExtreme (esm/ui/data_grid.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport DataGrid from \"./data_grid/ui.data_grid\";\r\nexport default DataGrid;\r\n"],"names":["$","target","stat","MAX_SAFE_INTEGER","__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","DxLookup","DxLoadPanel","DxLabel","DxKeyboardNavigation","DxItem","DxHide","DxHeaderFilter","DxGroupPanel","DxGroupOperationDescriptions","DxGroupItem","DxGroupingTexts","DxGrouping","DxFrom","DxFormItem","DxFormat","DxForm","DxFilterRow","DxFilterPanelTexts","DxFilterPanel","DxFilterOperationDescriptions","DxFilterBuilderPopup","DxFilterBuilder","DxFieldLookup","DxField","DxExportTexts","DxExport","DxEmailRule","DxEditingTexts","DxEditing","DxDataGridHeaderFilterTexts","DxDataGridHeaderFilter","DxCustomRule","DxCustomOperation","DxCursorOffset","DxCompareRule","DxColumnLookup","DxColumnHeaderFilter","DxColumnFixingTexts","DxColumnFixing","DxColumnChooser","DxColumn","DxCollision","DxColCountByScreen","DxChange","DxButton","DxBoundaryOffset","DxAt","DxAsyncRule","DxAnimation","DxDataGrid","DxValueFormat","DxValidationRule","DxTotalItem","DxToolbarItem","DxToolbar","DxTo","DxTexts","DxSummaryTexts","DxSummary","DxStringLengthRule","DxStateStoring","DxSorting","DxSortByGroupSummaryInfo","DxShow","DxSelection","DxSearchPanel","DxScrolling","DxRowDragging","DxRequiredRule","DxRemoteOperations","DxRangeRule","DxPosition","DxPopup","DxPatternRule","DxPaging","DxPager","DxOperationDescriptions","DxOffset","DxNumericRule","DxMy","DxMasterDetail","data_grid_1","require","index_1","index_2","createComponent","props","accessKey","String","activeStateEnabled","Boolean","allowColumnReordering","allowColumnResizing","autoNavigateToFocusedRow","cacheEnabled","cellHintEnabled","columnAutoWidth","columnChooser","columnFixing","columnHidingEnabled","columnMinWidth","Number","columnResizingMode","columns","Array","columnWidth","customizeColumns","Function","customizeExportData","dataRowTemplate","dataSource","dateSerializationFormat","disabled","editing","elementAttr","errorRowEnabled","export","filterBuilder","filterBuilderPopup","filterPanel","filterRow","filterSyncEnabled","filterValue","focusedColumnIndex","focusedRowEnabled","focusedRowIndex","focusedRowKey","focusStateEnabled","grouping","groupPanel","headerFilter","height","highlightChanges","hint","hoverStateEnabled","keyboardNavigation","keyExpr","loadPanel","masterDetail","noDataText","onAdaptiveDetailRowPreparing","onCellClick","onCellDblClick","onCellHoverChanged","onCellPrepared","onContentReady","onContextMenuPreparing","onDataErrorOccurred","onDisposing","onEditCanceled","onEditCanceling","onEditingStart","onEditorPrepared","onEditorPreparing","onExported","onExporting","onFileSaving","onFocusedCellChanged","onFocusedCellChanging","onFocusedRowChanged","onFocusedRowChanging","onInitialized","onInitNewRow","onKeyDown","onOptionChanged","onRowClick","onRowCollapsed","onRowCollapsing","onRowDblClick","onRowExpanded","onRowExpanding","onRowInserted","onRowInserting","onRowPrepared","onRowRemoved","onRowRemoving","onRowUpdated","onRowUpdating","onRowValidating","onSaved","onSaving","onSelectionChanged","onToolbarPreparing","pager","paging","remoteOperations","renderAsync","repaintChangesOnly","rowAlternationEnabled","rowDragging","rowTemplate","rtlEnabled","scrolling","searchPanel","selectedRowKeys","selection","selectionFilter","showBorders","showColumnHeaders","showColumnLines","showRowLines","sortByGroupSummaryInfo","sorting","stateStoring","summary","tabIndex","toolbar","twoWayBindingEnabled","visible","width","wordWrapEnabled","emits","computed","instance","$_instance","beforeCreate","$_WidgetClass","default","$_hasAsyncTemplate","$_expectedChildren","column","isCollectionItem","optionName","dataGridHeaderFilter","createConfigurationComponent","hide","show","$_optionName","ignoreEmptyValue","message","reevaluate","type","validationCallback","$_isCollectionItem","$_predefinedProps","x","y","cssClass","icon","name","onClick","template","text","data","insertAfterKey","insertBeforeKey","lg","md","sm","xs","alignment","allowEditing","allowExporting","allowFiltering","allowFixing","allowGrouping","allowHeaderFiltering","allowHiding","allowReordering","allowResizing","allowSearch","allowSorting","autoExpandGroup","buttons","calculateCellValue","calculateDisplayValue","calculateFilterExpression","calculateGroupValue","calculateSortValue","caption","cellTemplate","customizeText","dataField","dataType","editCellTemplate","editorOptions","encodeHtml","falseText","filterOperations","filterType","filterValues","fixed","fixedPosition","format","formItem","groupCellTemplate","grouped","groupIndex","headerCellTemplate","hidingPriority","isBand","lookup","minWidth","ownerBand","resized","selectedFilterOperation","setCellValue","showEditorAlways","showInColumnChooser","showWhenGrouped","sortIndex","sortingMethod","sortOrder","trueText","validationRules","visibleIndex","AsyncRule","button","columnHeaderFilter","columnLookup","CompareRule","CustomRule","EmailRule","NumericRule","PatternRule","RangeRule","RequiredRule","StringLengthRule","validationRule","emptyPanelText","enabled","mode","searchTimeout","title","texts","columnFixingTexts","fix","leftPosition","rightPosition","unfix","groupInterval","searchMode","allowClearing","displayExpr","valueExpr","comparisonTarget","comparisonType","dataTypes","editorTemplate","hasValue","dataGridHeaderFilterTexts","cancel","emptyValue","ok","allowAdding","allowDeleting","allowUpdating","changes","confirmDelete","editColumnName","editRowKey","form","newRowPosition","popup","refreshMode","selectTextOnEditStart","startEditAction","useIcons","change","editingTexts","addRow","cancelAllChanges","cancelRowChanges","confirmDeleteMessage","confirmDeleteTitle","deleteRow","editRow","saveAllChanges","saveRowChanges","undeleteRow","validationCancelChanges","allowExportSelectedData","customizeExcelCell","excelFilterEnabled","excelWrapTextEnabled","fileName","ignoreExcelErrors","proxyUrl","exportTexts","exportAll","exportSelectedRows","exportTo","defaultFilterOperation","fieldLookup","allowHierarchicalFields","bindingOptions","customOperations","fields","filterOperationDescriptions","groupOperationDescriptions","groupOperations","maxGroupLevel","onFocusIn","onFocusOut","onValueChanged","customOperation","field","animation","closeOnOutsideClick","container","contentTemplate","copyRootClassesToWrapper","deferRendering","dragAndResizeArea","dragEnabled","dragOutsideBoundary","fullScreen","hideOnParentScroll","maxHeight","maxWidth","minHeight","onHidden","onHiding","onResize","onResizeEnd","onResizeStart","onShowing","onShown","onTitleRendered","position","resizeEnabled","restorePosition","shading","shadingColor","showCloseButton","showTitle","titleTemplate","toolbarItems","wrapperAttr","between","contains","endsWith","equal","greaterThan","greaterThanOrEqual","isBlank","isNotBlank","lessThan","lessThanOrEqual","notContains","notEqual","startsWith","filterEnabled","filterPanelTexts","clearFilter","createFilter","filterEnabledHint","applyFilter","applyFilterText","betweenEndText","betweenStartText","operationDescriptions","resetOperationText","showAllText","showOperationChooser","alignItemLabels","alignItemLabelsInAllGroups","colCount","colCountByScreen","customizeItem","formData","items","labelLocation","labelMode","minColWidth","onEditorEnterKey","onFieldDataChanged","optionalMark","readOnly","requiredMark","requiredMessage","screenByWidth","scrollingEnabled","showColonAfterLabel","showOptionalMark","showRequiredMark","showValidationSummary","validationGroup","currency","formatter","parser","precision","colSpan","editorType","helpText","isRequired","itemType","label","left","opacity","scale","top","allowCollapsing","autoExpandAll","contextMenuEnabled","expandMode","groupingTexts","groupByThisColumn","groupContinuedMessage","groupContinuesMessage","ungroup","ungroupAll","alignByColumn","displayFormat","showInColumn","showInGroupFooter","skipEmptyValues","summaryType","valueFormat","and","notAnd","notOr","or","allowColumnDragging","complete","delay","direction","duration","easing","from","staggerDelay","start","to","html","locateInMenu","location","menuItemTemplate","options","showText","widget","editOnKeyPress","enterKeyAction","enterKeyDirection","showColon","indicatorSrc","showIndicator","showPane","allowedPageSizes","displayMode","infoText","showInfo","showNavigationButtons","showPageSizeSelector","pageIndex","pageSize","pattern","toolbarItem","at","boundary","boundaryOffset","collision","my","of","offset","max","min","filtering","groupPaging","trim","allowDropInsideItem","autoScroll","cursorOffset","dragDirection","dragTemplate","dropFeedbackMode","filter","group","handle","onAdd","onDragChange","onDragEnd","onDragMove","onDragStart","onRemove","onReorder","scrollSensitivity","scrollSpeed","showDragIcons","columnRenderingMode","preloadEnabled","rowRenderingMode","scrollByContent","scrollByThumb","showScrollbar","useNative","highlightCaseSensitive","highlightSearchText","placeholder","searchVisibleColumnsOnly","allowSelectAll","deferred","maxFilterLengthInRequest","selectAllMode","showCheckBoxesMode","groupColumn","summaryItem","ascendingText","clearText","descendingText","showSortIndexes","customLoad","customSave","savingTimeout","storageKey","calculateCustomSummary","groupItems","recalculateWhileEditing","totalItems","groupItem","summaryTexts","totalItem","avg","avgOtherColumn","count","maxOtherColumn","minOtherColumn","sum","sumOtherColumn","item","DataSource","GUID_REGEX","VERBOSE_DATE_REGEX","ISO8601_DATE_REGEX","JSON_VERBOSE_MIME_TYPE","makeArray","split","hasDot","test","pad","length","right","concat","formatISO8601","date","skipZeroTime","skipTimezone","bag","padLeft2","push","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","join","parseISO8601","isoString","result","Date","getTimezoneOffset","chunks","replace","exec","time","setFullYear","setMonth","setDate","isArray","setHours","setMinutes","setSeconds","fractional","slice","setMilliseconds","isAbsoluteUrl","url","stripParams","index","indexOf","substr","toAbsoluteUrl","basePath","relativePath","part","baseParts","relativeParts","pop","shift","param","params","ajaxOptionsForRequest","protocolVersion","request","_options$beforeSend","arguments","formatPayload","payload","JSON","stringify","key","errors","extend","async","method","headers","timeout","beforeSend","call","jsonp","withCredentials","toLowerCase","isGet","useJsonp","ajaxData","qs","contentType","$format","accepts","json","xhrFields","sendRequest","deserializeDates","fieldTypes","countOnly","isPaged","d","Deferred","ajaxOptions","ajax","always","obj","textStatus","transformOptions","tuple","interpretJsonFormat","error","nextUrl","XHR_ERROR_UNLOAD","reject","isFinite","resolve","fail","done","nextData","extra","totalCount","promise","formatDotNetError","errorObj","_errorObj$message","currentError","innererror","internalexception","errorFromResponse","_response","_response2","_response3","_response4","response","httpStatus","errorData","requestOptions","status","responseText","errorMessageFromXhr","parse","then","errorDetails","customCode","code","Error","isPlainObject","isObject","interpretVerboseJsonFormat","interpretLightJsonFormat","transformTypes","_ref","_data$results","isDefined","results","__next","parseInt","__count","_obj$value","EdmLiteral","Class","ctor","_value","valueOf","each","canBeGuid","_Guid","match","RegExp","$1","$2","serializeDate","serializeString","serializePropName","propName","serializeValueV4","map","serializeValueV2","serializeValue","serializeKey","parts","k","v","keyConverters","Int32","Math","floor","Int64","Guid","Single","Decimal","convertPrimitiveValue","converter","generateSelect","oDataVersion","select","grep","formatCore","hash","selectValue","expandValue","apply","parseCore","exprParts","root","stepper","parseTree","exprs","_","generatorV2","expand","path","generatorV4","node","generateExpand","formatFunctionInvocationUrl","baseUrl","args","stringFormat","escapeServiceOperationParams","version","DEFAULT_PROTOCOL_VERSION","STRING_FUNCTIONS","compileCriteria","forceLowerCase","createBinaryOperationFormatter","op","prop","val","createStringFuncFormatter","reverse","formatters","startswith","endswith","formattersV2","notcontains","formattersV4","compileBinary","criteria","_fieldTypes","normalizeBinaryCriterion","fieldName","fieldType","some","funcName","compileGroup","groupOperator","nextGroupOperator","criterion","compileCore","isConjunctiveOperator","isUnaryOperation","crit","types","filterToLower","config","oDataFilterToLower","createODataQueryAdapter","queryOptions","_select","_skip","_take","_countQuery","_sorting","_criteria","_expand","_oDataVersion","hasSlice","hasFunction","i","isFunction","requestData","$orderby","$skip","$top","$select","$expand","$filter","requireTotalCount","$inlinecount","$count","optimize","tasks","selectIndex","nextTask","multiSort","rules","getter","desc","rule","skipCount","takeCount","expr","queryAdapters","RequestDispatcher","_url","_beforeSend","_jsonp","_version","_withCredentials","_deserializeDates","_filterToLower","ANONYMOUS_KEY_NAME","expandKeyType","keyType","mergeFieldTypesWithKeyType","keyName","ODataStore","Store","callBase","_requestDispatcher","keyTypeIsString","keys","_legacyAnonymousKey","_updateMethod","_customLoadOptions","_byKeyImpl","extraOptions","_byKeyUrl","createQuery","loadOptions","_loadOptions$urlOverr","adapter","errorHandler","_errorHandler","urlOverride","customQueryParams","query","_insertImpl","values","_requireKey","when","serverResponse","useLegacyStoreResult","keyOf","_updateImpl","_removeImpl","_convertKey","convertedKey","encodeURIComponent","DEFAULT_DATE_INTERVAL","DEFAULT_DATETIME_INTERVAL","isDateType","getGroupInterval","dateIntervals","interval","inArray","getFilterSelector","selector","displayField","getFilterExpressionByRange","endFilterValue","startFilterExpression","endFilterExpression","getTime","getFilterExpressionForDate","dateStart","dateEnd","dateInterval","dateValue","isDate","getFilterExpressionForNumber","startFilterValue","condition","defaultCalculateFilterExpression","isSearchByDisplayValue","DATAGRID_SELECTION_DISABLED_CLASS","DATAGRID_GROUP_OPENED_CLASS","DATAGRID_GROUP_CLOSED_CLASS","DATAGRID_EXPAND_CLASS","NO_DATA_CLASS","SCROLLING_MODE_INFINITE","SCROLLING_MODE_VIRTUAL","LEGACY_SCROLLING_MODE","SCROLLING_MODE_OPTION","ROW_RENDERING_MODE_OPTION","DATE_INTERVAL_SELECTORS","year","month","day","quarter","hour","minute","second","getIntervalSelector","nameIntervalSelector","equalSelectors","selector1","selector2","originalCallback","columnIndex","setEmptyText","$container","get","textContent","normalizeSortingInfo","sort","normalizeSortingInfoUtility","isExpanded","formatValue","valueText","formatHelper","toString","formatObject","getDisplayFormat","getSummaryText","columnCaption","getWidgetInstance","$element","editorData","dxComponents","widgetName","equalFilterParameters","filter1","filter2","toComparable","renderNoDataText","element","noDataClass","addWidgetPrefix","noDataElement","find","last","isVisible","_dataController","isEmpty","isLoading","addClass","appendTo","removeClass","_getNoDataText","renderLoadPanel","isLocalStore","loadPanelOptions","_loadPanel","remove","option","_createComponent","LoadPanel","calculateLoadPanelPosition","$window","getWindow","getHeight","getIndexByKey","equalByValue","combineFilters","filters","operation","resultFilter","_filters$i","checkChanges","changeNames","changesWithChangeNamesCount","proxyMethod","methodName","defaultResult","_dataSource","getFormatOptionsByColumn","getDisplayValue","rowType","displayValueMap","getGroupRowSummaryText","summaryItems","getFormatByDataType","getHeaderFilterGroupParameters","remoteGrouping","sharedFiltering","bind","compare","equalSortParameters","sortParameters1","sortParameters2","ignoreIsExpanded","getPointsByColumns","pointCreated","isVertical","startColumnIndex","cellsLength","notCreatePoint","eq","css","point","getBoundingRect","prevItemOffset","getExpandCellTemplate","allowRenderToDetachedContainer","render","isContinuation","row","isNewRow","rowsView","component","getView","setAria","localize","getSelectionRange","focusedElement","selectionStart","selectionEnd","e","setSelectionRange","selectionRange","focusAndSelectElement","isFocused","is","eventsEngine","isSelectTextOnEditingStart","editor","closest","_loadItemDeferred","getLastResizableColumnIndex","resultWidths","lastColumnIndex","hasResizableColumns","command","isElementInCurrentGrid","controller","$grid","getWidgetContainerClass","parent","isVirtualRowRendering","that","isVirtualMode","isAppendMode","getPixelRatio","window","devicePixelRatio","getContentHeightLimit","browser","mozilla","WIDGET_WITH_LEGACY_CONTAINER_NAME","ModuleItem","_endUpdateCore","_updateLockCount","_actions","_actionConfigs","callbackNames","flags","callbackFlags","unique","syncStrategy","Callbacks","init","publicMethods","beginUpdate","endUpdate","optionCache","_optionCache","_silentOption","_setOptionWithoutOptionChange","messageLocalization","on","off","optionChanged","createAction","handled","getAction","actionName","$target","prefix","setAttribute","attr","getController","_controllers","action","_createAction","event","_createActionByOption","executeAction","dispose","empty","className","componentName","NAME","containerName","Controller","ViewController","inherit","_views","getViews","View","_isReady","isReady","_requireReady","_requireRender","_requireResize","_$parent","_invalidate","requireResize","requireReady","hasWindow","_renderCore","_resizeCore","_parentElement","renderCompleted","resizeCompleted","_$element","getElementHeight","marginTop","parseFloat","marginBottom","offsetHeight","getTemplate","_getTemplate","$parent","toggleClass","fire","resize","isResizing","focus","MODULES_ORDER_MAX_INDEX","processModules","componentClass","modules","modulesOrder","controllerTypes","viewTypes","module1","module2","orderIndex1","orderIndex2","controllers","moduleName","views","subclassOf","extenders","extender","createModuleItems","moduleTypes","moduleItems","moduleType","moduleItem","callModuleItemsMethod","registerModule","module","registerModulesOrder","moduleNames","unregisterModule","_extends","gridCoreUtils","COLUMN_INDICATORS_CLASS","GROUP_PANEL_ITEM_CLASS","_applyColumnState","_that$component","columnAlignment","_getColumnAlignment","parameters","isGroupPanelItem","rootElement","hasClass","$indicatorsContainer","_createIndicatorContainer","$span","_getIndicatorClassName","columnsController","indicatorAlignment","getHeaderContentAlignment","indicator","_renderIndicator","noop","getDefaultAlignment","ignoreIndicatorAlignment","_getIndicatorContainer","$cell","_getIndicatorElements","$indicatorContainer","children","$indicator","append","_updateIndicators","indicatorName","getColumns","$cells","getColumnElements","_updateIndicator","rowOptions","cells","SCROLL_CONTAINER_CLASS","SCROLLABLE_SIMULATED_CLASS","GROUP_SPACE_CLASS","CONTENT_CLASS","TABLE_CLASS","TABLE_FIXED_CLASS","CONTENT_FIXED_CLASS","ROW_CLASS","GROUP_ROW_CLASS","DETAIL_ROW_CLASS","FILTER_ROW_CLASS","ERROR_ROW_CLASS","CELL_UPDATED_ANIMATION_CLASS","HIDDEN_COLUMNS_WIDTH","CELL_HINT_VISIBLE","FORM_FIELD_ITEM_CONTENT_CLASS","appendElementTemplate","content","subscribeToRowEvents","$table","touchTarget","touchCurrentTarget","timeoutId","clearTouchTargets","setTimeout","clearTimeout","currentTarget","clickEventName","dblclickEvent","pointerEvents","_isNativeClick","rowIndex","getRowIndex","rowElement","getPublicElement","_rowPointerDown","_rowClick","_rowDblClick","getWidthStyle","isNumeric","setCellWidth","cell","style","copyAttributes","newElement","oldAttributes","attributes","newAttributes","nodeName","hasAttribute","removeAttribute","nodeValue","ColumnsView","columnStateMixin","_createScrollableOptions","scrollingOptions","useNativeScrolling","bounceEnabled","useKeyboard","useSimulatedScrollbar","_updateCell","_cellPrepared","_createCell","domAdapter","textAlign","headerId","colspan","visibleWidth","_createRow","rowObject","tagName","_isAltRow","dataIndex","_createTable","isAppend","_createColGroup","ctrlKey","preventDefault","$row","isDataRow","isHeaderRow","isGroupRow","isMasterDetailRow","isFilterRow","visibleColumns","_columnsController","getVisibleColumns","cellOptions","removeAttr","difference","scrollWidth","clientWidth","getOptions","$fieldItemContent","delegateTarget","resultOptions","cellElement","eventType","formItemOptions","getVisibleIndex","colgroupElement","j","_createCol","col","setWidth","renderDelayedTemplates","delayedTemplates","_delayedTemplates","syncTemplates","asyncTemplates","_renderDelayedTemplatesCore","_renderDelayedTemplatesCoreAsync","templates","isAsync","templateParameters","doc","_processTemplate","renderingTemplate","isRenderer","model","renderedTemplate","nodeType","templateID","isString","_templatesCache","renderTemplate","templateDeferred","templateOptions","onRendered","templateDeferreds","_getBodies","tableElement","not","_wrapRowIfNeed","hasDataRowTemplate","$tBodies","_tableElement","$tbody","_appendRow","appendTemplate","scrollLeft","_scrollLeft","scrollTo","$root","_renderTable","changeType","_renderRows","rows","_getRows","columnIndices","changeTypes","_renderRow","$wrappedRow","_renderCells","_addWatchMethod","_rowPrepared","_needRenderCell","_renderCell","oldValue","oldValues","_updateCells","$rowElement","$newRowElement","$newCells","cellUpdatedClass","forEach","$newCell","replaceWith","_setCellAriaAttributes","columnIndexOffset","getColumnIndexOffset","ariaColIndex","_getCellOptions","_renderCellContent","appendChild","_getCellTemplate","isAltRow","source","watchers","watch","updateValueFunc","updateRowFunc","watcher","newValue","splice","update","keepRow","elementData","_columnOptionChanged","optionNames","widths","iteratorUtils","setColumnWidths","getCellIndex","cellIndex","getTableElements","getTableElement","setTableElement","excludeValidators","category","afterExecute","_afterRowPrepared","columnsChanged","add","changed","_handleDataChanged","_updateScrollLeftPosition","pos","$scrollContainer","_wrapTableInScrollContainer","nativeScrolling","scrollChanged","_updateContent","$newTableElement","_findContentElement","_getWidths","$cellElements","offsetWidth","getBoundingClientRect","clientRect","getColumnWidths","$tableElement","$rows","isRowVisible","display","getVisibleColumnIndex","$cols","classList","querySelector","toFixed","getCellElements","_getCellElementsCore","_getRowElements","_getCellElement","columnIdentifier","columnVisibleIndex","_getVisibleColumnIndex","_getRowElement","$tableElements","getCellElement","getRowElement","elements","columnOption","getCell","cellPosition","getRowsCount","_getRowElementsCore","hasRowTemplate","tBodies","getName","setScrollerSpacing","paddingLeft","paddingRight","isScrollbarVisible","isHorizontal","getOuterWidth","getWidth","getOuterHeight","FOCUS_STATE_CLASS","FOCUS_DISABLED_CLASS","FOCUSED_ROW_SELECTOR","GRID_ROW_SELECTOR","GRID_CELL_SELECTOR","TREELIST_ROW_SELECTOR","TREELIST_CELL_SELECTOR","viewItemSelectorMap","columnHeaders","footer","isMouseDown","isHiddenFocusing","focusedElementInfo","processKeyDown","viewName","$mainElement","executeKeyDown","isHandled","fireKeyDownEvent","originalEvent","normalizeKeyName","saveFocusedElementInfo","selectView","ariaLabel","$activeElements","getActiveAccessibleElements","targetIndex","viewInstance","viewElement","$viewElement","findFocusedViewElement","viewSelectors","$focusViewElement","first","onDocumentVisibilityChange","visibilityState","subscribeVisibilityChange","unsubscribeVisibilityChange","hiddenFocus","registerKeyboardAction","getMainElement","keyDownHandler","mouseDownHandler","focusinHandler","needShowOverlay","restoreFocus","$targetElement","viewNames","viewItemIndex","_viewName","setTabIndex","keyboardController","isKeyboardEnabled","accessibility","CELL_CONTENT_CLASS","HEADERS_CLASS","NOWRAP_CLASS","ROW_CLASS_SELECTOR","HEADER_ROW_CLASS","COLUMN_LINES_CLASS","CONTEXT_MENU_SORT_ASC_ICON","CONTEXT_MENU_SORT_DESC_ICON","CONTEXT_MENU_SORT_NONE_ICON","CELL_FOCUS_DISABLED_CLASS","VISIBILITY_HIDDEN_CLASS","TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX","SORT_INDICATOR_CLASS","SORT_INDEX_INDICATOR_CLASS","HEADER_FILTER_CLASS_SELECTOR","HEADER_FILTER_INDICATOR_CLASS","MULTI_ROW_HEADER_CLASS","columnHeadersModule","defaultOptions","columnHeadersView","createCellContent","$cellContent","addCssClassesToCellContent","contentAlignment","$indicatorElements","$visibleIndicatorElements","indicatorCount","sortIndicatorClassName","sortIndexIndicatorClassName","$sortIndicator","$sortIndexIndicator","shiftKey","_isLegacyKeyboardNavigation","_getDefaultTemplate","$content","_getHeaderTemplate","resultTemplate","_isGroupingChanged","_handleActionKeyDown","_lastActionElement","headerFilterController","$column","getColumnIndexByElement","showHeaderFilterMenu","_processHeaderAction","isLoaded","_hasRowElements","getRowCount","_getRowVisibleColumns","$cellElement","rowspan","rowCount","groupExpanding","_isElementVisible","elementOptions","_alignCaptionByCenter","clone","insertBefore","$indicatorElement","returnAll","_isSortableElement","getHeadersRowHeight","$headerRows","toArray","reduce","headerRow","getHeaderElement","columnElements","bandColumnIndex","getChildrenByBandColumn","$columnElements","allowDragging","sourceLocation","draggingPanels","draggableColumnCount","canHideColumn","allowDrag","isColumnOptionUsed","draggingPanel","getColumnCount","getContextMenuItems","sortingOptions","onItemClick","changeSortOrder","itemData","setRowsOpacity","columnID","setColumnOpacity","gridCore","USER_STATE_FIELD_NAMES_15_1","USER_STATE_FIELD_NAMES","IGNORE_COLUMN_OPTION_NAMES","bestFitWidth","bufferedFilterValue","COMMAND_EXPAND_CLASS","GROUP_COMMAND_COLUMN_NAME","regExp","globalColumnId","columnsControllerModule","commonColumnSettings","adaptColumnWidthByRatio","regenerateColumnsByVisibleItems","DEFAULT_COLUMN_OPTIONS","DATATYPE_OPERATIONS","number","string","datetime","COLUMN_INDEX_OPTIONS","setFilterOperationsAsDefaultValues","defaultFilterOperations","createColumn","columnOptions","userStateColumnOptions","bandColumn","commonColumnOptions","setName","deepExtendArraySafe","getCommonSettings","calculatedColumnOptions","_createCalculatedColumnOptions","createColumnsFromOptions","columnsOptions","_columnsUserState","checkUserStateColumn","hasColumns","getParentBandColumns","columnParentByIndex","unshift","_getChildrenByBandColumn","columnChildrenByIndex","recursive","getColumnFullPath","bandColumnsCache","getBandColumnsCache","callbackFilter","isPlain","_columns","calculateColspan","getValueDataType","getSerializationFormat","dateSerialization","updateSerializers","deserializeValue","serializationFormat","parsedValue","isNaN","customizeTextForBooleanDataType","getCustomizeTextByDataType","updateColumnIndexes","_commandColumns","updateColumnGroupIndexes","currentColumn","normalizeIndexes","getColumnIndexByVisibleIndex","getGroupColumns","getChooserColumns","userStateColumn","applyUserState","userStateColumnIndex","columnsUserState","ignoreColumnOptionNames","_ignoreColumnOptionNames","columnCountById","resultColumns","allColumnsHaveState","userStateColumnIndexes","applyFieldsState","defaultSelectedFilterOperation","findUserStateColumn","id","_hasUserState","initialIndex","hasAddedBands","columnUserState","added","assignColumns","updateIndexes","isSortOrderValid","resetBandColumnsCache","bandColumns","parentBandColumns","resetColumnsCache","updateColumnDataTypes","updateColumnChanges","columnChanges","_columnChanges","fireColumnsChanged","onColumnsChanging","reinitOptionNames","isInitialized","reinit","updateSortOrderWhenGrouping","prevGroupIndex","columnWasGrouped","lastSortOrder","sortMode","sortedByAnotherColumn","fireOptionChanged","prevValue","fullOptionName","fullOptionPath","_skipProcessingColumnsChange","_notifyOptionChanged","columnOptionCore","notFireEvent","initialColumn","optionGetter","compileGetter","functionsAsIs","optionSetter","compileSetter","_checkColumns","getColumnByPath","defaultSetCellValue","dotCount","isCustomCommandColumn","commandColumn","getFixedPosition","processExpandColumns","expandColumns","customColumnIndex","expandColumnsByType","expandColumn","numberToString","digitsCount","str","mergeColumns","commandColumns","needToExtend","commandColumnIndex","isColumnFixing","_isColumnFixing","defaultCommandColumns","getCommandColumnIndex","columnType","isColumnFixed","_bandColumnsCache","findColumn","identifier","identifierOptionName","_getExpandColumnOptions","_getFirstItems","groupsCount","getFirstItemsCore","childItems","collapsedItems","_isColumnsFromOptions","addCommandColumn","_dataSourceApplied","applyDataSource","columnIndexes","needUpdateRequireResize","previousValue","fullName","_updateRequireResize","columnOptionValue","columnOptionName","forceApplying","isDataSourceLoaded","_dataSourceColumnsCount","columnsFromDataSource","firstItems","processedFields","variableWrapper","updateColumns","isAllDataTypesDefined","reset","_visibleColumns","_fixedColumns","_rowCount","getUserState","isDataSourceApplied","groupingOptions","groupPanelOptions","checkSerializers","defaultCalculateCellValue","isBandColumnsUsed","_getVisibleColumnsCore","getFixedColumns","_getFixedColumnsCore","getFilteringColumns","notFixedColumnCount","transparentColumnIndex","lastFixedPosition","transparentColumn","transparentColspan","prevColumn","newColumn","_getExpandColumnsCore","getExpandColumns","firstGroupColumn","isFixedFirstGroupColumn","parentIndex","_isColumnVisible","isParentColumnVisible","isFixedToEnd","rowspanGroupColumns","rowspanExpandColumns","positiveIndexedColumns","negativeIndexedColumns","notGroupedColumnsCount","columnDigitsCount","indexedColumns","orderEach","firstPositiveIndexColumn","columnsByFixing","columnsByVisibleIndex","getDataColumns","bandColumnID","getInvisibleColumns","hiddenColumnsByBand","getAllColumns","columnChooserColumns","sign","column1","column2","caption1","caption2","localeCompare","allowMoveColumn","fromVisibleIndex","toVisibleIndex","targetLocation","sourceColumn","moveColumn","targetGroupIndex","fromIndex","toIndex","groupColumns","targetColumn","sortingMode","needResetSorting","getSortDataSourceParameters","useLocalSelector","sortColumns","sortItem","getGroupDataSourceParameters","refresh","updateNewLookupsOnly","deferreds","valueMap","_updateColumnOptions","calculateCallbackName","calculateCallback","context","isRTL","isColumnDataTypesUpdated","lookupDataType","valueDataType","_customizeColumns","hasOwnerBand","updateSortingGrouping","sortParameters","groupParameters","filterParameters","lastLoadOptions","_updateChanges","dataController","getCombinedFilter","fromDataSource","isColumnsChanged","updateSortGroupParameterIndexes","indexParameterName","columnsGroupParameters","columnsSortParameters","groupingChanged","groupExpandingChanged","updateFilter","remoteFiltering","forceIsoDateParsing","columnCount","clearSorting","clearGrouping","getVisibleIndexByColumn","visibleColumn","addColumn","deleteColumn","childIndexes","handleStateField","setUserState","state","isFilterPanelHidden","usedNames","hasEditableColumnWithoutName","duplicatedNames","_column$columns","isEditable","captionize","skipDeserialization","parseValue","numberLocalization","formattedValue","formattedValueWithDefaultFormat","dateLocalization","filterUtils","createFilterExpression","userDataType","updateValueMap","calculateValue","displayValue","dataSourceOptions","normalizeDataSourceOptions","paginate","load","resizedCallbacks","defaultOptionName","charAt","toUpperCase","parents","invisibleParents","alwaysGetRowIndex","onlyVisibleDirectChildren","isParentBandColumn","getColumnId","cloneItems","groupCount","calculateOperationTypes","isFullReload","operationTypes","reload","fullReload","groupExpand","skip","take","getPageDataFromCache","updatePaging","storeLoadOptions","fillItemsFromCache","cacheItemsFromBegin","cacheItemBeginCount","cacheItemsFromEnd","_options$skip2","_options$take2","cacheItemEndCount","cachedDataPartBegin","cachedDataPartEnd","fromEnd","_options$take","_options$cachedData","cachedItems","cachedData","_ref2","_options$skip","localIndex","cacheItemIndex","cacheItem","getItemFromCache","skips","takes","getGroupItemFromCache","isContinuationOnNextPage","childCacheItem","getCacheItem","loadedItem","globalIndex","childSkips","_remoteOperations","_isLastPage","isLastPage","_hasLastPage","_currentTotalCount","_cachedData","_lastOperationTypes","_eventsStrategy","_totalCountCorrection","_isLoadingAll","loadingChanged","loadError","customizeStoreLoadOptions","changing","pushed","_dataChangedHandler","_customizeStoreLoadOptionsHandler","_handleCustomizeStoreLoadOptions","_dataLoadedHandler","_handleDataLoaded","_loadingChangedHandler","_handleLoadingChanged","_loadErrorHandler","_handleLoadError","_pushHandler","_handlePush","_changingHandler","_handleChanging","store","memberName","member","isSharedDataSource","resetCurrentTotalCount","resetCache","_cachedStoreData","_cachedPagingData","resetPagesCache","_needClearStoreDataCache","_lastLoadOptions","isLocalOperations","every","operationName","fromStore","applyBatch","keyInfo","_applyBatch","getDataIndexGetter","_dataIndexGetter","indexByKey","storeData","isCacheUpdated","getKeyHash","_getKeyInfo","getItemCount","itemsCount","oldItemCount","_items","useInsertIndex","_ref5","_needCleanCacheByOperation","operationType","operationTypesByOrder","operationTypeIndex","currentOperationTypes","_customizeRemoteOperations","cachedStoreData","cachedPagingData","isCustomLoading","_options$data","_handleDataLoading","originalStoreLoadOptions","_isRefreshing","isRefreshing","_loadingOperationTypes","_isRefreshed","_lastOperationId","operationId","_handleDataLoadingCore","cachedExtra","localLoadOptionNames","optionValue","localPaging","needCache","needPageCache","needPagingCache","needStoreCache","mergeStoreLoadData","ArrayStore","_handleDataLoadedCore","_ref3","_options$skip3","_ref4","_options$take3","cacheItems","_loadPageSize","currentTotalCount","isDataLoading","pageCount","_operationTypes","_scheduleCustomLoadCallbacks","_isCustomLoading","loadingOperationTypes","totalCountCorrection","totalItemsCount","ceil","hasKnownLastPage","loadFromStore","dataSourceLoadOptions","loadResult","isLoadingAll","_scheduleLoadCallbacks","executeAsync","fireEvent","full","getCachedStoreData","dataSourceAdapterType","DataSourceAdapter","create","dataControllerModule","loadingTimeout","include","DataHelperMixin","changePaging","_getPagingOptionValue","_skipProcessingPagingChange","pageChanged","members","_cachedProcessedItems","_currentOperationTypes","_columnsChangedHandler","_handleColumnsChanged","_dataPushedHandler","_handleDataPushed","_isLoading","_repaintChangesOnly","_changes","dataErrorOccurred","_refreshDataSource","stopOnFalse","_this$_dataSource","isValueChanged","_array","isParasiteChange","_setPagingOptions","_useSortingGroupingFromColumns","getDataSource","returnDataField","combinedFilter","additionalFilter","_calculateAdditionalFilter","waitReady","_readyDeferred","updateItems","_storeLoadOptions$fil","_columnsUpdating","filterApplied","_applyFilter","_needApplyFilter","updateItemsHandler","virtualColumnsScrolling","isAsyncDataSourceApplying","_isDataSourceApplying","isDelayed","needApplyFilter","_isAllDataTypesDefined","_fireLoadingChanged","fireError","pagingEnabled","scrollingMode","appendMode","virtualMode","isChanged","_getSpecificDataSourceOption","_initDataSource","oldDataSource","setDataSource","_loadDataSource","_beforeProcessItems","getRowIndexDelta","_processItems","rowIndexDelta","visibleItems","lastVisibleItem","_processItem","_generateDataItem","_processDataItem","dataItem","generateDataValues","isModified","_applyChange","_applyChangeUpdate","_applyChangesOnly","_applyChangeFull","_getRowIndices","rowIndices","a","b","correctedRowIndex","allowInvisibleRowIndices","prevIndex","rowIndexCorrection","equalItems","item1","item2","strict","isEditing","oldItem","oldNextItem","newItem","newNextItem","isFullUpdate","_partialUpdateRow","_isCellChanged","oldRow","newRow","visibleRowIndex","isLiveUpdate","isCellModified","modifiedValues","_getChangedColumnIndices","_cell$column","_changedColumnIndices","changedColumnIndices","isCellChanged","_isItemEquals","_item1$data","_item2$data","_item1$data2","_item2$data2","expandedMatch","summaryCellsMatch","summaryCells","continuationMatch","newIndexByKey","getRowKey","currentItems","oldItems","findChanges","_correctRowIndices","oldRowIndexOffset","_rowIndexOffset","rowIndexOffset","getRowIndexOffset","newVisibleRowIndex","_afterProcessItems","_updateItemsCore","cachedProcessedItems","useProcessedItemsCache","loadIndex","getVisibleRows","isDataChanged","needUpdateDimensions","_needUpdateDimensions","_fireChanged","deferRender","_loadingText","_isFilterApplying","resetFilterApplying","filterExpr","prototype","filterName","clearColumnOption","searchByText","_fireDataSourceChanged","changedHandler","dataSourceChanged","_getDataSourceAdapter","_createDataSourceAdapterCore","dataSourceAdapterProvider","dataSourceAdapter","isCustomStore","CustomStore","_createDataSourceAdapter","enabledRemoteOperations","cancelAll","_isSharedDataSource","loadAll","getKeyByRowIndex","byLoaded","getRowIndexByKey","byKey","getDataByKeys","rowKeys","keyData","beginCustomLoading","messageText","endCustomLoading","changesOnly","customizeLoadResult","_disposeDataSource","repaintRows","rowIndexes","skipProcessingPagingChange","searchText","isLastPageLoaded","DataController","SORT_CLASS","SORT_NONE_CLASS","SORTUP_CLASS","SORTDOWN_CLASS","SORT_INDEX_CLASS","SORT_INDEX_ICON_CLASS","HEADERS_ACTION_CLASS","ariaSortState","isSortingAllowed","hasSeveralSortIndexes","prepend","COLUMN_HEADERS_VIEW_NAMESPACE","ColumnHeadersViewSortingExtender","sortingMixin","addNamespace","$cellElementFromEvent","editingController","editingMode","isCellEditing","isCommandKeyPressed","HeaderPanelSortingExtender","_createGroupPanelItem","$rootElement","$item","_processGroupItemAction","groupColumnIndex","sortingModule","headerPanel","ROWS_VIEW_CLASS","GROUP_CELL_CLASS","DATA_ROW_CLASS","FREE_SPACE_CLASS","ROW_LINES_CLASS","ROW_ALTERNATION_CLASS","LAST_ROW_BORDER","EMPTY_CLASS","ROW_INSERTED_ANIMATION_CLASS","LOADPANEL_HIDE_TIMEOUT","getMaxHorizontalScrollOffset","scrollable","round","rowsModule","defaultCellTemplate","isDataTextEmpty","innerHTML","_getDefaultGroupTemplate","_update","isGroup","isRowExpanded","_setAriaRowIndex","isPagerMode","arg","deep","skipImmediate","removeEvent","_renderScrollable","force","_renderLoadPanel","getScrollable","allColumnsHasWidth","_hasHeight","_renderScrollableCore","_handleScroll","isNativeScrolling","_scrollTop","scrollOffset","_scrollRight","dxScrollableOptions","scrollHandler","onScroll","_scrollable","Scrollable","_scrollableContainer","_renderContent","contentElement","newTableElement","executors","rowInsertedClass","$rowsElement","toggle","insertAfter","prependTo","_createEmptyRow","isFixed","_appendEmptyRow","$emptyRow","isTableContainer","$colgroup","_renderFreeSpaceRow","$freeSpaceRowElement","_checkRowKeys","_needUpdateRowHeight","_rowHeight","_getRowsHeight","$rowElements","_updateRowHeight","rowsHeight","_getFreeSpaceRowElements","tableElements","evaluate","_getColumnsCountBeforeGroups","_getGroupCellOptions","columnsCountBeforeGroups","_renderGroupedCells","groupCellOptions","groupColumnAlignment","updateFreeSpaceRowHeight","_renderDataRowByTemplate","resizeCompletedHandler","scrollableInstance","document","_visibilityChanged","_lastColumnWidths","groupingTextsOptions","_setRowsOpacityCore","_getDevicePixelRatio","getCellOptions","getRow","itemCount","freeSpaceRowElements","isFreeSpaceRowVisible","deferUpdate","scrollbarWidth","getScrollbarWidth","elementHeightWithoutScrollbar","contentHeight","showFreeSpaceRow","borderTopWidth","heightCorrection","_getHeightCorrection","resultHeight","_updateLastRowBorder","freeSpaceRowCount","setHeight","isZoomedWebkit","isChromeLatest","hasExtraBorderTop","_fireColumnResizedCallbacks","_editorFactoryController","setLoading","contentWidth","scrollableContainer","clientHeight","lastColumnWidths","columnWidths","_updateScrollable","dxScrollable","_updateHorizontalScrollPosition","maxHorizontalScrollOffset","scrollRight","_height","hasHeight","visibilityOptions","_hideLoadingTimeoutID","groupCellIndex","_getBoundaryVisibleItemIndex","isTop","isFloor","itemIndex","prevOffset","viewportBoundary","$contentElement","contentElementOffsetTop","rowElements","outerHeight","getTopVisibleItemIndex","getBottomVisibleItemIndex","getTopVisibleRowData","_scrollToElement","scrollToElement","_restoreErrorRow","CONTEXT_MENU","footerView","VIEW_NAMES","ContextMenuController","dxEvent","$targetRowElement","$targetCellElement","menuItems","view","_rowOptions$cells","targetElement","_contextMenuPrepared","ContextMenuView","ContextMenu","onPositioning","actionArgs","contextMenuInstance","stopPropagation","contextMenuModule","contextMenu","contextMenuView","treeListCore","ERROR_MESSAGE_CLASS","ERROR_CLOSEBUTTON_CLASS","ACTION_CLASS","ErrorHandlingController","_columnHeadersView","_rowsView","_createErrorRow","$errorRow","$closeButton","$errorMessage","_renderErrorMessage","errorRowIndex","removeErrorRow","fireContentReadyAction","role","$message","renderErrorRow","$popupContent","$errorMessageElement","$firstErrorRow","next","resizingController","$columnHeaders","$rowsViewElement","errorHandlingModule","errorHandling","errorHandlingController","hasChanges","BORDERS_CLASS","IMPORTANT_MARGIN_CLASS","GRIDBASE_CONTAINER_CLASS","isPercentWidth","isPixelWidth","getContainerHeight","paddingTop","paddingBottom","calculateFreeWidth","totalWidth","_getTotalWidth","calculateFreeWidthWithCurrentMinWidth","currentMinWidth","ResizingController","_initPostRenderHandlers","_refreshSizesHandler","_refreshSizes","resizeDeferred","_e$changeTypes","_setScrollerSpacing","_setAriaRowColCount","_fireContentReadyAction","_getBestFitWidths","_widths","_rowsView$getTableEle","headersTableElement","_setVisibleWidths","columnId","_toggleBestFitModeForView","isBestFit","$rowsTables","$viewTables","$tableBody","$rowsTable","$viewTable","_toggleBestFitMode","$rowsFixedTable","_footerView","_toggleContentMinHeight","_needStretch","_synchronizeColumns","resetBestFitMode","needBestFit","_needBestFit","hasMinWidth","isColumnWidthsCorrected","_maxWidth","isFocusOutsideWindow","bottom","_correctColumnWidths","expandColumnWidth","_processStretch","c","_getAverageColumnsWidth","freeWidth","columnCountWithoutWidth","hasPercentWidth","hasAutoWidth","hasWidth","_hasWidth","_loop","isHiddenColumn","averageColumnsWidth","realColumnWidth","_getRealColumnWidth","borderWidth","getInnerWidth","resultSizes","groupSize","tableSize","unusedIndexes","diff","diffElement","onePixelElementsCount","groupWidth","ratio","percentTotalWidth","pixelTotalWidth","freeSpace","percentTotalWidthInPixel","updateSize","$groupElement","importantMarginClass","detach","updateDimensions","checkSize","_checkSize","prevResult","_resizeDeferred","_resetGroupElementHeight","_updateDimensionsCore","groupElement","scrollTop","_lastWidth","_lastHeight","_devicePixelRatio","_setScrollerSpacingCore","vScrollbarWidth","hScrollbarWidth","$testDiv","rootElementHeight","maxHeightHappened","editorFactory","isMaxHeightApplied","scrollHeight","_updateLastSizes","_renderDimensions","SynchronizeScrollingController","_scrollChangedHandler","GridView","_resizingController","_getWidgetAriaLabel","_groupElement","_renderViews","_getTableRoleName","isFirstRender","_rootElement","gridViewModule","resizing","synchronizeScrolling","gridView","HEADER_PANEL_CLASS","TOOLBAR_BUTTON_CLASS","TOOLBAR_ARIA_LABEL","HeaderPanel","_getToolbarItems","_getButtonContainer","_getToolbarButtonClass","specificClass","secondClass","_getToolbarOptions","userToolbarOptions","toolbarOptions","onItemRendered","itemRenderedCallback","userItems","_normalizeToolbarItems","defaultItems","defaultProps","defaultButtonsByNames","normalizedItems","needHideButton","_toolbar","_toolbarOptions","$headerPanel","$toolbar","Toolbar","setToolbarItemDisabled","toolbarInstance","itemOptionPrefix","updateToolbarDimensions","_this$_toolbar","getHeaderPanel","getPathParts","normalizedItem","headerPanelModule","DATAGRID_ROW_SELECTOR","DATAGRID_DEPRECATED_TEMPLATE_WARNING","DataGrid","Widget","_activeStateUnit","_getDefaultOptions","_setDeprecatedOptions","_deprecatedOptions","since","alias","_defaultOptionsRules","device","platform","isMaterial","_device","deviceType","_init","_clean","_optionChanged","_dimensionChanged","_initMarkup","_renderContentImpl","templateName","logger","_dispose","registerComponent","DATE_REGEX","parseDates","UTC","StateStoringController","getStorage","storage","sessionStorage","localStorage","getUniqueStorageKey","_loadState","getItem","_saveState","setItem","isEnabled","_state","_isLoaded","_windowUnloadHandler","_savingTimeoutID","fromPromise","isEmptyObject","save","getDataState","pagerView","getPageSizes","processLoadState","selectionController","exportController","updateState","selectionChanged","_initialPageSize","_initialFilterValue","selectionOnlyChanged","exportSelectionOnly","selectionOnly","DEFAULT_FILTER_VALUE","getFilterValue","filterSyncController","hasFilterState","getFilterValueFromColumns","stateStoringModule","stateLoaded","isStateLoading","applyState","oldState","newState","oldStateHash","newStateHash","isVirtualScrollingMode","stateStoringController","_restoreStateTimeoutID","_fireSelectionChanged","isDeferredSelection","EDITOR_CELL_CLASS","ROW_SELECTION_CLASS","SELECT_CHECKBOX_CLASS","CHECKBOXES_HIDDEN_CLASS","COMMAND_SELECT_CLASS","SELECTION_DISABLED_CLASS","SHOW_CHECKBOXES_MODE","SELECTION_MODE","processLongTap","isSelectionWithCheckboxes","stopSelectionWithCheckboxes","startSelectionWithCheckboxes","changeItemSelection","control","SelectionController","selectionCellTemplate","isRowSelected","renderSelectCheckBoxContainer","selectionHeaderTemplate","_renderSelectAllCheckBox","_attachSelectAllCheckBoxClickEvent","_selectionMode","_isSelectionWithCheckboxes","_selection","_createSelection","_updateSelectColumn","removedKeys","deselectRows","_getSelectionConfig","selectionOptions","virtualPaging","legacyScrollingMode","selectedKeys","ignoreDisabledItems","allowLoadByRange","hasGroupColumns","dataFields","_dataController$dataS","_dataController$dataS2","plainItems","isItemSelected","selected","isSelectableItem","getItemData","oldData","getLoadOptions","loadItemIndex","focusedItemIndex","shiftItemIndex","_dataController$dataS3","_dataController$dataS4","minIndex","maxIndex","_updateSelectedItems","isSelectColumnVisible","Selection","argument","_updateCheckboxesState","isDeferredMode","selectedItemKeys","removedItemKeys","keyIndex","isComplexKey","selectionChangedOptions","changedItemIndexes","getChangedItemIndexes","itemIndexes","addedItemKeys","_selectedItemsInternalChange","selectedRowsData","selectedItems","currentSelectedRowKeys","currentDeselectedRowKeys","isDataItem","isSelected","oldSelectionMode","selectionMode","selectRows","_isOnePageSelectAll","isSelectAll","getSelectAllState","selectAll","deselectAll","clearSelection","preserve","isDeselect","getSelectedRowKeys","getSelectedItemKeys","selectRowsByIndexes","indexes","getSelectedRowsData","getSelectedItems","visibleItemIndex","loadedItemIndex","_focusedItemIndex","selectionModule","hasSelectColumn","currentItem","isUpdateSelection","_updateSelectAllValue","$editor","selectAllValue","hasSelection","dxCheckBox","isEmptyData","createEditor","parentType","setValue","_attachCheckBoxClickEvent","_renderSelectCheckBox","_e$event","_updateCheckboxesClass","touch","holdEvent","isSelectionDisabled","isClickableElement","isCommandSelect","isCheckBoxesHidden","COLUMN_CHOOSER_CLASS","COLUMN_CHOOSER_BUTTON_CLASS","NOTOUCH_ACTION_CLASS","COLUMN_CHOOSER_LIST_CLASS","COLUMN_CHOOSER_PLAIN_CLASS","COLUMN_CHOOSER_DRAG_CLASS","COLUMN_CHOOSER_SELECT_CLASS","COLUMN_CHOOSER_ICON_NAME","COLUMN_CHOOSER_ITEM_CLASS","TREEVIEW_NODE_SELECTOR","CHECKBOX_SELECTOR","CLICK_TIMEOUT","processItems","chooserColumns","isSelectMode","expanded","disableCheckBox","parentId","ColumnChooserController","renderShowColumnChooserButton","$columnChooserButton","columnChooserButtonClass","columnChooserEnabled","$showColumnChooserButton","Button","showColumnChooser","integrationOptions","getPosition","ColumnChooserView","_isWinDevice","devices","win","_updateList","_popupContainer","columnChooserList","_columnChooserList","selectItem","unselectItem","$wrapper","_renderTreeView","_initializePopupContainer","columnChooserOptions","themeName","current","isGenericTheme","isGeneric","isMaterialTheme","dxPopupOptions","_ignoreCopyRootClassesToWrapperDeprecation","shortcut","Popup","treeViewConfig","dataStructure","itemTemplate","rootValue","searchEnabled","$checkBox","$treeViewNode","itemElement","checkBoxInstance","_prepareSelectModeConfig","_prepareDragModeConfig","searchValue","TreeView","selectNodesRecursive","onItemSelectionChanged","isLastColumnUnselected","needPartialRender","needFullRender","all","$node","$nodes","columnVisible","isColumnChooserVisible","$overlayContent","hideColumnChooser","popupContainer","columnChooserModule","columnChooserView","_appendColumnChooserItem","hintText","columnChooserMode","isMoveColumnDisallowed","createOffsetFilter","lastLevelOnly","groups","filterElement","currentFilter","GroupingHelper","findGroupInfoByKey","groupsInfo","getGroupInfoIndexByOffset","leftIndex","rightIndex","middleIndex","_groupsInfo","updateTotalItemsCount","isGroupItemCountable","_isVirtualPaging","calculateItemsCount","foreachGroups","callback","childrenAtFirst","foreachCollapsedGroups","updateOffsets","updateParentOffsets","foreachGroupsCore","callbackResults","executeCallback","callbackResult","currentParents","_updateGroupInfoOffsets","groupInfo","findGroupInfo","pathIndex","addGroupInfo","groupInfoData","allowCollapseAll","oldGroups","_group","cleanGroupsInfo","handleDataLoading","handleDataLoaded","handleDataLoadedCore","createGroupFilter","loadTotalCount","GroupingHelperCore","correctSkipLoadOption","skipCorrection","resultSkip","pathEquals","path1","path2","keysEqual","updateGroupOffsets","additionalGroupInfo","getGroupCount","collapsedGroups","collapsedItemsCount","skipFirstItem","dataGridCore","sorts","storeHelper","appendCollapsedPath","collapsedGroup","keyValue","pathValue","dataQuery","enumerate","groupedData","processGroupItems","removeLastItemsCount","needRemoveFirstItem","offsetInfo","itemsCountCorrection","changeRowExpand","groupCountQuery","beginPageIndex","dataSourceItems","groupOffsetQuery","getContinuationGroupCount","groupOffset","pageOffset","foreachExpandedGroups","updateGroups","expandedInfo","isLastGroupExpanded","paths","lastCount","updateGroupInfoItem","isLastGroupLevel","_isGroupExpanded","updateGroupInfos","loadedGroupCount","remotePaging","isGroupExpanded","getTotalOffset","groupInfos","totalOffset","childrenTotalCount","applyContinuationToGroupItem","groupLevel","expandedItemIndex","isLastExpandedItem","isFirstExpandedItem","lastExpandedItemSkip","isItemsTruncatedByTake","isDataDeferred","makeDataDeferred","loadGroupItems","currentGroupCount","currentGroupIndex","currentGroup","requireGroupCount","groupSummary","expandedFilters","expandedPath","isPagingLocal","isLastLevelGroupItemsPagingLocal","sortLastLevelGroupItems","expandedItems","loadGroupTotalCount","isGrouping","dataErrors","isVirtualPaging","_updatePagingOptions","skipChildrenTotalCount","takeCorrection","parentTakeCorrection","continuationGroupCount","skipContinuationGroupCount","groupInfoCount","childrenGroupInfoCount","remoteGroupPaging","isLastGroup","_processPaging","_processSkips","firstItem","_processTakes","lastItem","maxTakeCount","handleGroup","DATAGRID_GROUP_PANEL_CLASS","DATAGRID_GROUP_PANEL_MESSAGE_CLASS","DATAGRID_GROUP_PANEL_ITEM_CLASS","DATAGRID_GROUP_PANEL_LABEL_CLASS","DATAGRID_GROUP_ROW_CLASS","GroupingDataSourceAdapterExtender","_initGroupingHelper","_grouping","isAutoExpandAll","isFocusedRowEnabled","isODataRemoteOperations","ExpandedGroupingHelper","CollapsedGroupingHelper","collapseAll","_collapseExpandAll","expandAll","isExpand","beginLoading","_changeRowExpandCore","endLoading","_hasGroupLevelsExpandState","GroupingDataControllerExtender","_processGroupItems","_processGroupItem","groupedColumns","collectContinuationItems","resultItems","expandRow","collapseRow","onGroupingMenuItemClick","GroupingHeaderPanelExtender","_appendGroupingItem","_isGroupPanelVisible","isRendered","$groupPanel","_updateGroupPanelContent","_renderGroupPanelItems","$groupPanelItem","$toolbarElement","$groupedColumnElement","isGroupingAllowed","isColumnGrouped","GroupingRowsViewExtender","isGroupRowStateChanged","isExpandButtonClicked","_changeGroupRowState","columnHeadersViewExtender","beginGroup","_isProcessedItem","MASTER_DETAIL_CELL_CLASS","MASTER_DETAIL_ROW_CLASS","masterDetailModule","initMasterDetail","_expandedItems","_isExpandAll","expandIndex","_getRowIndicesForExpand","detailColumnIndex","isEnabledChanged","isAutoExpandAllChanged","_updateParentDataGrids","$masterDetailRow","_updateMasterDataGrid","$detailElement","masterRowOptions","masterDataGrid","isFixedColumns","_updateFixedMasterDetailGrids","masterRowIndex","$tables","rowsNotEqual","tablesNotEqual","detailElementWidth","isDetailHorizontalScrollCanBeShown","isDetailGridWidthChanged","isEditRow","_isDetailRow","$detailCell","isWrapped","CHECKBOX_SIZE_CLASS","EDITOR_INLINE_BLOCK","EditorFactoryMixin","getResultConfig","inputAttr","checkEnterBug","ios","getTextEditorConfig","isEnterBug","sharedData","needDelayedUpdate","isInputOrKeyUpEvent","updateValue","valueChangeTimeout","updateValueTimeout","_input","valueChangeEvent","prepareBooleanEditor","prepareSelectBox","editorName","displayGetter","postProcess","selectBox","stopWatch","searchExpr","showClearButton","editorElement","blur","isSearching","isOnForm","showValidationMark","$editorElement","dateBox","dxDateBox","defaultEnterKeyHandler","_supportedKeys","enter","registerKeyHandler","dxTextArea","FOCUS_OVERLAY_CLASS","FOCUSED_ELEMENT_CLASS","MODULE_NAMESPACE","UPDATE_FOCUS_EVENTS","DX_HIDDEN","EditorFactory","_getFocusedElement","$dataGridElement","rowSelector","focusedElementSelector","_getFocusCellSelector","_updateFocusCore","$focusCell","hideBorders","$focus","_$focusedElement","loseFocus","_updateFocus","isFocusOverlay","_isFocusOverlay","_updateFocusTimeoutID","_updateFocusOverlaySize","positionUtils","h","oversize","setOuterWidth","setOuterHeight","hideBorder","_focusTimeoutID","renderFocusOverlay","focused","refocus","_$focusOverlay","align","elemCoord","focusOverlayPosition","precise","$focusedElement","_updateFocusHandler","_attachContainerEventHandlers","editorFactoryModule","DEFAULT_BUTTON","DX_DIALOG_CLASSNAME","DX_DIALOG_WRAPPER_CLASSNAME","DX_DIALOG_ROOT_CLASSNAME","DX_DIALOG_CONTENT_CLASSNAME","DX_DIALOG_MESSAGE_CLASSNAME","DX_DIALOG_BUTTONS_CLASSNAME","DX_DIALOG_BUTTON_CLASSNAME","DX_BUTTON_CLASSNAME","FakeDialogComponent","Component","custom","_options$title","getViewport","isMessageDefined","isMessageHtmlDefined","messageHtml","popupToolbarItems","Action","popupInstance","android","execute","ensureDefined","ignoreChildEvents","bottomToolbar","resetActiveElement","$firstButton","popupOptions","isPortrait","confirm","ROW_SELECTED_CLASS","EDIT_FORM_CLASS","DATA_EDIT_DATA_INSERT_TYPE","DATA_EDIT_DATA_REMOVE_TYPE","EDITING_POPUP_OPTION_NAME","EDITING_FORM_OPTION_NAME","EDITING_EDITROWKEY_OPTION_NAME","EDITING_EDITCOLUMNNAME_OPTION_NAME","TARGET_COMPONENT_NAME","EDITORS_INPUT_SELECTOR","FOCUSABLE_ELEMENT_SELECTOR","EDIT_MODE_BATCH","EDIT_MODE_ROW","EDIT_MODE_CELL","EDIT_MODE_FORM","EDIT_MODE_POPUP","FIRST_NEW_ROW_POSITION","LAST_NEW_ROW_POSITION","PAGE_BOTTOM_NEW_ROW_POSITION","PAGE_TOP_NEW_ROW_POSITION","VIEWPORT_BOTTOM_NEW_ROW_POSITION","VIEWPORT_TOP_NEW_ROW_POSITION","EDIT_MODES","ROW_BASED_MODES","MODES_WITH_DELAYED_FOCUS","READONLY_CLASS","LINK_CLASS","ROW_SELECTED","EDIT_BUTTON_CLASS","COMMAND_EDIT_CLASS","COMMAND_EDIT_WITH_ICONS_CLASS","INSERT_INDEX","ROW_INSERTED","ROW_MODIFIED","CELL_MODIFIED","EDITING_NAMESPACE","DATA_EDIT_DATA_UPDATE_TYPE","DEFAULT_START_EDIT_ACTION","EDIT_LINK_CLASS","edit","undelete","delete","EDIT_ICON_CLASS","METHOD_NAMES","ACTION_OPTION_NAMES","BUTTON_NAMES","EDITING_CHANGES_OPTION_NAME","createFailureHandler","isEditingCell","isEditingOrShowEditorAlwaysDataCell","isCommandCell","isEditorCell","EditingController","getButtonIndex","getButtonName","_lastOperation","_deferreds","_saveEditorHandler","_updateEditColumn","_updateEditButtons","_internalState","_optionsByReference","getEditMode","editMode","_getDefaultEditorTemplate","_getNewRowPosition","getChanges","getInsertRowCount","resetChanges","needReset","_getInternalData","_addInternalData","internalData","_getOldData","_this$_getInternalDat","getUpdatedData","editIndex","createObjectWithChanges","getInsertedData","getRemovedData","_fireDataErrorOccurred","getPopupContent","_needToCloseEditableCell","_closeEditItem","_isDefaultButtonVisible","_isButtonVisible","_isButtonDisabled","_getButtonConfig","buttonName","addRowToNode","editingOptions","allowAction","_getEditingButtons","buttonIndex","haveCustomButtons","_renderEditingButtons","_createButton","_getEditCommandCellTemplate","isRowBasedEditMode","getFirstEditableColumnIndex","getFirstEditableCellInRow","getFocusedCellInRow","_inputFocusTimeoutID","_pointerUpEditorHandler","_pointerDownEditorHandler","_handleEditRowKeyChange","_handleChangesChange","_resetEditColumnName","_resetEditRowKey","oldRowIndexCorrection","_getEditRowIndexCorrection","oldRowIndex","_editRowFromOptionChanged","cancelEditData","_processInsertChanges","_addInsertInfo","isPageChanged","_pageIndex","_refreshCore","isEditRowKeyDefined","_setEditRowKey","silent","_setEditRowKeyByIndex","getEditRowIndex","_getVisibleEditRowIndex","getEditFormRowIndex","_isEditRowByIndex","isKeyEqual","isEditCell","_getVisibleEditColumnIndex","_getInsertRowIndex","isProcessedItems","_getInsertAfterOrBeforeKey","isProcessedItem","nextItem","_generateNewItem","_this$_getInternalDat2","insertInfo","_getLoadedRowIndex","loadedRowIndex","insertAfterOrBeforeKey","_this$_getInternalDat3","isInsert","processDataItem","_processDataItemCore","modified","removed","_initNewRow","_createInsertInfo","_getInsertIndex","parentKey","_this$_getInternalDat4","_setInsertAfterOrBeforeKey","allItems","isViewportBottom","insertKey","maxInsertIndex","editItem","_this$_getInternalDat5","insertChange","_insertChange$insertA","_getPageIndexToInsertRow","lastPageIndex","_addRow","oldEditRowIndex","_allowRowAdding","__KEY__","_addRowCore","_navigateToNewRow","insertIndex","initialOldEditRowIndex","editRowIndex","_addChange","_editRowIndex","_change","focusController","pageIndexToInsertRow","navigateToRowByKey","navigateToRow","_showAddedRow","_afterInsertRow","_focusFirstEditableCellInRow","_beforeFocusElementInRow","$firstCell","_editCellInProgress","_delayedInputFocus","_isEditingStart","_beforeUpdateItems","_setEditColumnNameByIndex","_visibleColumns$index","_setEditColumnName","_getEditColumn","_getColumnByName","editColumn","columnName","isColumnHidden","_resetEditIndices","_item$oldData","_editRowFromOptionChangedCore","_needFocusEditor","_focusEditorIfNeed","_showEditPopup","_repaintEditPopup","_getEditPopupHiddenHandler","_getPopupEditFormTemplate","_getSaveButtonConfig","saveEditData","_getCancelButtonConfig","_removeInternalData","_updateInsertAfterOrBeforeKeys","removeChange","_removeChange","executeOperation","func","waitForDeferredOperations","_processCanceledEditingCell","_repaintEditCell","oldColumn","beforeFocusCallback","callBeforeFocusCallbackAlways","inputFocus","$focusableElement","_beforeFocusCallback","_focusEditingCell","$editCell","editColumnIndex","_checkAndDeleteRow","showDialogTitle","confirmResult","_deleteRowCore","_afterDeleteRow","_fireOnSaving","onSavingParams","_executeEditingAction","_disposed","_processChanges","dataChanges","changeCopy","_beforeSaveEditData","insert","newData","doneDeferred","_processRemoveIfError","_processRemove","_processRemoveCore","_processSaveEditDataResult","hasSavedData","changesLength","isError","_fireSaveEditDataEvents","isSaving","_resolveAfterSave","_saving","_saveEditDataInner","needFocusEditCell","_afterSaveEditData","_endSaving","_cancelSaving","_beforeEndSaving","_refreshDataAfterSave","isFullRefresh","isEditColumnVisible","_isEditColumnVisible","_isEditButtonDisabled","isEditRowDefined","isButtonDisabled","_applyModified","_beforeCloseEditCellInBatchMode","_cancelEditDataCore","_beforeCancelEditData","_afterCancelEditData","_hideEditPopup","hasEditData","_getRowIndicesForCascadeUpdating","skipCurrentRow","addDeferred","_prepareChange","_options$row","rowKey","setCellValueResult","_updateRowValues","updateFieldValue","forceUpdateRow","_focusPreviousEditingCellIfNeed","_updateEditRow","_needUpdateRow","isCustomSetCellValue","isCustomCalculateCellValue","changeOptions","_applyChangeCore","_updateEditRowCore","_updateRowImmediately","_updateRowWithDelay","_validateEditFormAfterUpdate","$focusedItem","changeParams","_this$getChanges","_getFormEditItemTemplate","getColumnTemplate","editingStartOptions","isRowMode","isRowEditing","getEditFormTemplate","useLegacyColumnButtonTemplate","$button","iconType","iconUtils","localizationName","getButtonLocalizationNames","_button$onClick","prepareButtonItem","titleButtonTextByClassNames","revert","prepareEditButtons","buttonItems","highlightDataCell","cellModified","shouldHighlight","_allowEditAction","allowEditAction","eventName","needCallback","isNewRowInEditMode","visibleEditRowIndex","editingModule","_editingController","_this$_updateEditItem","_updateEditItem","isRowRemoved","isRowInserted","isRowModified","_getColumnIndexByElement","_getColumnIndexByElementCore","_editCellByClick","isEditedCell","editCell","withoutSaveEditData","closeEditCell","_pointerDownTimeout","isEditForm","isEditableCell","_editCellPrepared","_formItemPrepared","cellValue","editButtonItems","excludedOptions","shouldInvalidate","EDIT_ROW","editingRowBasedModule","isRowEditMode","isVisibleInRowEditMode","$editingCell","EDIT_FORM_ITEM_CLASS","EDIT_POPUP_CLASS","SCROLLABLE_CONTAINER_CLASS","EDIT_POPUP_FORM_CLASS","BUTTON_CLASS","FORM_BUTTONS_CONTAINER_CLASS","getEditorType","_column$formItem","isCustomEditorType","forEachFormItems","callBack","tabs","editingFormBasedModule","_editForm","_updateEditFormDeferred","isFormOrPopupEditMode","isPopupEditMode","isFormEditMode","firstFormItem","_firstFormItem","$editFormElements","_getEditFormEditorVisibleIndex","editForm","_this$_editPopup","popupVisible","_editPopup","_$popupContent","_row$update","repaint","repaintForm","isMobileDevice","$popupContainer","_this$_editForm","formTemplate","isPopupForm","_this$_editPopup2","defaultAnimation","_this$_editPopup3","_handleFormOptionChange","_handlePopupOptionChange","_this$_editPopup4","editPopup","popupOptionName","renderFormEditTemplate","detailCellOptions","formTemplateOptions","isReadOnly","rowData","labelMark","getItemID","getFormEditorTemplate","_cellOptions$row$watc","_cellOptions$row","_validator","validator","validatorOptions","contents","dxValidator","dataGetter","getEditFormOptions","detailOptions","_this$_getValidationG","editFormOptions","_getValidationGroupsInForm","userCustomizeItem","editFormItemClass","itemId","formID","itemVisible","baseEditFormOptions","$formContainer","Form","$buttonsContainer","_this$_editPopup5","getEditForm","_this$_updateEditForm","_this$_editPopup6","editFormRowIndex","_isFormItem","isDetailRow","isPopupEditing","ADD_ROW_BUTTON_CLASS","DROPDOWN_EDITOR_OVERLAY_CLASS","CELL_MODIFIED_CLASS","ROW_REMOVED","$pointerDownTarget","needCreateHandlers","_this$getController","targetComponent","isCellOrBatchEditMode","isEditorPopup","checkEditorPopup","isDomElement","isAnotherComponent","isAddRowButton","isCellEditMode","isBatchEditMode","isCurrentComponentElement","$targetCell","_this$_rowsView","isEditColumnNameDefined","_handleEditColumnNameChange","oldColumnIndex","_editCellFromOptionChanged","_deferred","_editCell","coreResult","_editCellCore","isEditByOptionChanged","_getNormalizedEditCellOptions","_beforeEditCell","_prepareEditCell","_closeEditCellCore","_resetModifiedClassCells","columnsCount","_this$_editCellFromOp","needResetIndexes","isBatchMode","_isRowDeleteAllowed","_changes$","_deferred2","isUpdateInCellMode","focusPreviousEditingCell","processIfBatch","editingCellBasedModule","INVALIDATE_CLASS","REVERT_TOOLTIP_CLASS","INVALID_MESSAGE_CLASS","WIDGET_INVALID_MESSAGE_CLASS","INVALID_MESSAGE_ALWAYS_CLASS","REVERT_BUTTON_CLASS","VALIDATOR_CLASS","PENDING_INDICATOR_CLASS","VALIDATION_PENDING_CLASS","PADDING_BETWEEN_TOOLTIPS","FORM_BASED_MODES","COMMAND_TRANSPARENT","VALIDATION_STATUS","valid","invalid","pending","EDIT_DATA_INSERT_TYPE","EDIT_DATA_REMOVE_TYPE","VALIDATION_CANCELLED","validationResultIsValid","cellValueShouldBeValidated","ValidatingController","_validationState","initValidationState","_validationStateCache","_rowIsValidated","validationData","_getValidationData","validated","keyHash","isObjectKeyHash","isValid","_getBrokenRules","validationResults","brokenRules","brokenRule","_rowValidating","getChangeByKey","errorText","getHiddenValidatorsErrorText","brokenRulesMessages","isGroupExpandColumn","isVisibleColumn","validate","isFull","completeList","_isValidationInProgress","validationResult","validateGroup","_currentCellValidator","_findGroup","_validationResult","ValidationEngine","validators","resetRowValidationResults","isRowDataModified","updateValidationState","setDisableApplyValidationResults","groupConfig","setValidator","renderCellPendingIndicator","LoadIndicator","disposeCellPendingIndicator","validationStatusChanged","updateCellValidationResult","validatorInitialized","validatorDisposing","getCellValidationResult","cancelCellValidationResult","applyValidationResult","requestIsDisabled","disabledPendingId","_disableApplyValidationResults","getEditorInstance","_syncInternalEditingData","_parameters$row","oldDataFromState","createValidator","needCreateValidator","_parameters$row$oldDa","_parameters$row2","isCellOrBatchEditingAllowed","getValue","useDefaultValidator","Validator","applyValidationResults","validationRequestsCallbacks","flag","getDisableApplyValidationResults","isCurrentValidatorProcessing","validateCell","cellParams","stateRestored","_validationData$valid","removeCellValidationResult","_ref6","isInvalidCell","_ref7","getCellValidator","_ref8","setCellValidationStatus","validationStatus","validatingModule","validating","validatingController","_updateRowAndPageIndices","startInsertIndex","_ref9","isNotCanceled","addInValidItem","isInserted","_createInvisibleColumnValidators","invisibleColumns","invisibleColumnValidators","isCellVisible","disposeValidators","isFullValid","_showErrorRow","shouldResetValidationState","columnsWithValidatingEditors","_col$validationRules","validationState","resetRowAndPageIndices","currentValidator","isValidated","needValidation","isCellInvalid","_showRevertButton","$tooltipElement","$overlayContainer","tooltipOptions","propagateOutsideClick","$buttonElement","buttonOptions","onPositioned","_positionedHandler","Overlay","_hideFixedGroupCell","overlayOptions","$nextFixedRowElement","$groupCellElement","nextRowOptions","visibility","isOverlayVisible","__skipPositionProcessing","isRevertButton","needRepaint","normalizedPosition","_normalizeValidationMessagePositionAndMaxWidth","_showValidationMessage","messages","revertTooltip","editorPopup","myPosition","atPosition","errorMessageText","invalidMessageClass","$overlayElement","_shiftValidationMessageIfNeed","fixedColumns","visibleTableWidth","w1","w2","$overlayContentElement","validationMessageWidth","needMaxWidth","boundaryNonFixedColumnsInfo","firstNonFixedColumnIndex","lastNonFixedColumnIndex","endColumnIndex","$revertContent","contentOffset","revertContentOffset","_getTooltipsSelector","revertTooltipClass","skipValidator","updateCellState","_change$data","showValidationMessage","errorMessages","$tooltips","_oldRow$cells","_cell$column$validati","oldValidationStatus","newValidationStatus","rowIsModified","cellIsMarkedAsInvalid","editingChanged","hasValidationRules","$freeSpaceRowElements","$tooltipContent","isEditorDisposed","contentTable","needTwoPagesLoading","_controller","isVirtual","getViewportItemIndex","getBeginPageIndex","_cache","getEndPageIndex","fireChanged","_isChangedFiring","processDelayChanged","_isDelayChanged","getViewportPageCount","_dataOptions","preventPreload","realViewportSize","viewportSize","viewportItemSize","getContentOffset","getViewportPosition","virtualItemsCount","begin","itemSize","getItemSizes","getPreloadPageCount","previous","getPageIndexForLoad","dataOptions","needToLoadPageBeforeLast","needToLoadPrevPage","needToLoadNextPage","_loadingPageIndexes","loadCore","processChanged","isDelayChanged","removeCacheItem","isPrepend","viewportItems","removeCount","correctCount","removeItemCount","itemsLength","updateLoading","_lastPageIndex","VirtualDataLoader","newPageIndex","lastPageSize","maxPageIndex","defaultPageIndex","endPageIndex","pageIndexForLoad","delayDeferred","_delayDeferred","onChanged","_setViewportPositionCore","removeInvisiblePages","lastCacheLength","isBase","beginItemsCount","endItemsCount","end","_isVirtualMode","_isVirtual","_isAppendMode","subscribeToExternalScrollers","scrollChangedHandler","$scrollElement","scrollableArray","scrollToArray","disposeArray","getElementOffset","$scrollableElement","scrollableOffset","widgetScrollStrategy","handler","subscribeToScrollEvents","isDocument","eventsStrategy","topOffset","scrollMethod","VirtualScrollController","_viewportSize","_viewportItemSize","_viewportItemIndex","_position","_isScrollingBack","_contentSize","_itemSizes","_sizeRatio","positionChanged","_dataLoader","viewportParams","getViewportParams","loadedOffset","loadedItemCount","getScrollingTimeout","scrollingTimeout","_this$option","changingDuration","setViewportPosition","_scrollTimeoutID","getItemIndexByPosition","defaultItemSize","getItemSize","itemOffset","itemOffsetsWithSize","itemOffsetWithSize","itemOffsetDiff","isScrollingBack","prevPosition","setViewportItemIndex","setContentItemSizes","sizes","size","virtualContentSize","contentHeightLimit","getItemOffset","isEnd","currentItemIndex","getVirtualContentSize","viewportItemIndexChanged","viewportHeight","isRefresh","subscribeToWindowScrollEvents","_windowScroll","_this$option2","topIndex","bottomIndex","maxGap","minGap","topMinGap","bottomMinGap","remainedItems","BOTTOM_LOAD_PANEL_CLASS","TABLE_CONTENT_CLASS","FREESPACE_CLASS","VIRTUAL_ROW_CLASS","LOAD_TIMEOUT","VISIBLE_PAGE_INDEX","_correctCount","isItemCountableFunc","isItemCountableByDataSource","updateItemIndices","VirtualScrollingDataSourceAdapterExtender","_updateLoading","_virtualScrollController","_loadPageCount","_getVirtualScrollDataOptions","_renderTime","_startLoadTime","handleDataChanged","newMode","virtualScrollController","r","getDelayDeferred","loadPageCount","takeIsDefined","VirtualScrollingRowsViewExtender","removeEmptyRows","$emptyRows","_dataController$state","scrollToPage","_scrollToCurrentPageOnResize","resizeHandler","scrollPosition","itemSizes","_updateContentPosition","startRenderTime","_removeRowsElements","_updateBottomLoading","_addVirtualRow","$virtualRow","_getRowHeights","rowHeights","_correctRowHeights","correctedRowHeights","visibleRows","firstCountableItem","lastLoadIndex","isRender","rowHeight","$virtualRows","_isFixedTableRendering","_isTableLinesDisplaysCorrect","table","hasColumnLines","_isColumnElementsEqual","$columns","$virtualColumns","_getCellClasses","classes","isExpandColumn","_findBottomLoadPanel","$bottomLoadPanel","showBottomLoading","bottomLoadPanelElement","zeroTopPosition","updateViewport","hasBottomLoadPanel","isViewportChanging","scrollPos","loadIfNeed","_dataController$loadI","virtualScrollingModule","updateTimeout","minTimeout","renderingThreshold","rowPageSize","prerenderedRowChunkSize","loadTwoPagesOnStart","legacyMode","prerenderedRowCount","baseResult","initVirtualRows","_rowsScrollController","_this$getLoadPagePara","getLoadPageParams","getRowPageSize","rowsScrollController","isSortingOperation","allowedTopOffset","virtualRowsRendering","_allItems","_loadViewportParams","_visibleItems","_rowPageIndex","_viewportChanging","_needUpdateViewportAfterLoading","_getRowsScrollDataOptions","_this$_dataSource2","loadViewport","_updateLoadViewportParams","isItemCountable","_that$_dataSource","_itemCount","isNextAfterLast","countableOnly","delta","cancelEmptyChanges","newItems","_dataSource$lastLoadO","prevCountable","prevRowType","isPrevRowNew","currentIndex","wasCountableItem","itemCountable","isNextGroupItem","isNextDataItem","isPrevNewRowFirst","skipForCurrentPage","it","isNewRowOnStart","isNewRowInEmptyData","isLoadIndexGreaterStart","isLoadIndexLessEnd","byLoadedRows","firstLoadIndex","_dataSource$lastLoadO2","_this$_rowsScrollCont","getPreloadedRowCount","preloadCount","byLoadedPage","_this$_dataSource3","_this$_dataSource4","loadedPageIndex","loadedTake","topPreloadCount","bottomPreloadCount","skipWithPreload","loadingTake","_updateVisiblePageIndex","currentPageIndex","viewPortItemIndex","_getChangedLoadParams","loadedPageParams","_loadItems","checkLoading","_dataSourceAdapter$lo","_dataSourceAdapter$pa","changedParams","currentLoadPageCount","lastRequiredItemCount","pageIndexNotChanged","allLoadedInAppendMode","viewportChanging","checkLoadedParamsOnly","loadingItemsStarted","_this$_loadViewportPa","_this$_loadViewportPa2","viewportIsNotFilled","currentTake","newTake","topItemIndex","_this$_loadViewportPa3","bottomItemIndex","_resizeTimeout","_lastTime","WINDOW_HEIGHT_PERCENT","getElementMaxHeightByWindow","startLocation","actualOffset","elementOffset","getInnerHeight","offsetTop","offsetBottom","DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS","DX_SUBMENU_CLASS","Submenu","orientation","onHoverStart","_dataAdapter","_renderContextMenuOverlay","getNodeByKey","_renderItems","_getChildNodes","_renderDelimiter","$contentDelimiter","_itemContainer","_overlayPositionedActionHandler","_showDelimiter","_toggleFocusClass","hoverStartAction","$rootItem","rootItem","submenu","$submenu","containerOffset","vLocation","hLocation","rootOffset","offsetLeft","rootWidth","rootHeight","submenuWidth","submenuHeight","_isMenuHorizontal","animationPosition","_overlay","DX_MENU_CLASS","DX_MENU_VERTICAL_CLASS","DX_MENU_HORIZONTAL_CLASS","DX_MENU_ITEM_CLASS","DX_MENU_ITEMS_CONTAINER_CLASS","DX_MENU_ITEM_EXPANDED_CLASS","DX_CONTEXT_MENU_CLASS","DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS","DX_STATE_DISABLED_CLASS","DX_STATE_HOVER_CLASS","DX_STATE_ACTIVE_CLASS","DX_ADAPTIVE_MODE_CLASS","DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS","DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS","FOCUS_UP","FOCUS_DOWN","FOCUS_LEFT","FOCUS_RIGHT","SHOW_SUBMENU_OPERATION","NEXTITEM_OPERATION","PREVITEM_OPERATION","DEFAULT_DELAY","ACTIONS","Menu","submenuDirection","showFirstSubmenuMode","hideSubmenuOnMouseLeave","onSubmenuShowing","onSubmenuShown","onSubmenuHiding","onSubmenuHidden","adaptivityEnabled","selectedItem","rootMenuElements","submenuElements","_submenuItemElements","itemSelector","currentSubmenu","_submenus","itemsContainer","navigationAction","$newTarget","$items","_getAvailableItems","isMenuHorizontal","$activeItem","_getActiveItem","_getItemsNavigationOperation","_getKeyboardNavigationAction","navOperation","_showSubmenu","_nextItem","_prevItem","_resizeEventTimer","_menuItemsWidth","_updateItemsWidthCache","$menuItems","_getSummaryItemsWidth","_isAdaptivityEnabled","containerWidth","_toggleAdaptiveMode","_visibleSubmenu","_initAdaptivity","_hamburger","_toggleTreeView","_toggleHamburgerActiveState","$menuItemsContainer","$adaptiveElements","_hideVisibleSubmenu","_treeView","_$adaptiveContainer","rtl","_ignoreFunctionValueDeprecation","menuOptions","animationEnabled","_treeviewItemClickHandler","onItemExpanded","onItemCollapsed","selectByClick","expandEvent","$hamburger","_renderHamburgerButton","_getTreeViewOptions","_getAdaptiveOverlayOptions","delayType","$itemFrame","_createSubmenu","_renderBorderElement","$submenuContainer","_getSubmenuOptions","_parentKey","internalFields","_clearTimeouts","getSubmenuPosition","_attachSubmenuHandlers","$submenuTarget","showSubmenuMode","disabledExpr","selectedExpr","itemsExpr","onFocusedItemChanged","_nestedItemOnSelectionChangedHandler","_nestedItemOnItemClickHandler","_nestedItemOnItemRenderedHandler","onLeftFirstItem","_moveMainMenuFocus","onLeftLastItem","onCloseRootSubmenu","onExpandLastSubmenu","_isDesktopDevice","$currentItem","_hideSubmenu","$newItem","addedItems","_clearSelectionInSubmenus","_clearRootSelection","targetSubmenu","cleanAllSubmenus","isOtherItem","$selectedItem","_selectedItemClass","selectedItemData","_getItemData","_clearSelectedItems","$prevSelectedItem","prevSelectedItemData","$submenuOverlayContent","getOverlayContent","submenus","submenuMouseLeaveName","hoverEventEnd","_submenuOnShowingHandler","_submenuOnShownHandler","_submenuOnHidingHandler","_submenuOnHiddenHandler","_submenuMouseLeaveHandler","$border","eventArgs","relatedTarget","_getSubmenuByRootElement","_hideSubmenuAfterTimeout","_getDelay","isRootItemHovered","isSubmenuItemHovered","hoveredElementFromSubMenu","isHorizontalMenu","submenuPosition","$closestItem","_itemElements","mouseMoveEventName","_getItemElementByEventArgs","getNodeByItem","isSelectionActive","which","_isItemDisabled","_hasChildren","_getShowFirstSubmenuMode","_getSubmenuByElement","_itemMouseMoveHandler","_showSubmenuTimer","eventArg","_hideSubmenuTimer","$itemElement","_hoveredRootItem","pointers","_renderSubmenuItems","_disabledGetter","_updateSelectedItemOnClick","_initActions","_changeSubmenusOption","_removeAdaptivity","MenuBase","OPERATION_ICONS","OPERATION_DESCRIPTORS","FILTERING_TIMEOUT","CORRECT_FILTER_RANGE_OVERLAY_WIDTH","FILTER_RANGE_OVERLAY_CLASS","FILTER_RANGE_START_CLASS","FILTER_RANGE_END_CLASS","MENU_CLASS","EDITOR_WITH_MENU_CLASS","EDITOR_CONTAINER_CLASS","FILTER_MENU","APPLY_BUTTON_CLASS","HIGHLIGHT_OUTLINE_CLASS","FOCUSED_CLASS","FILTER_RANGE_CONTENT_CLASS","FILTER_MODIFIED_CLASS","BETWEEN_OPERATION_DATA_TYPES","isOnClickApplyFilterMode","ColumnHeadersViewFilterRowExtender","$editorContainer","componentNames","Editor","getRangeTextByFilterValue","rangeEnd","getColumnFilterValue","formatOptions","getColumnSelectedFilterOperation","bufferedSelectedFilterOperation","isFilterRange","isRangeStart","updateFilterValue","_applyFilterViewController","setHighLight","normalizedValue","columnFilterValue","isBetween","_updateEditorValue","$editorRangeElements","$menu","overlayInstance","_updateFilterRangeContent","_updateFilterOperationChooser","_renderFilterRangeContent","_renderEditor","_getEditorOptions","_hideFilterRange","_filterRangeOverlayInstance","isFilterRowVisible","_initFilterRangeOverlay","$overlay","$prevElement","prev","_updateFilterRangeOverlay","_showFilterRange","getFilterRangeOverlayInstance","_renderFilterCell","_renderFilterOperationChooser","accessibilityOptions","_getFilterInputAccessibilityAttributes","columnAriaLabel","$filterRangeContent","isCellWasFocused","menu","_focusEditor","selectable","_getFilterOperationMenuItems","properties","columnSelectedFilterOperation","notFocusEditor","isOnClickMode","_isEditorFocused","filterRowOptions","availableFilterOperations","descriptionName","DataControllerFilterRowExtender","skipCalculateColumnFilters","ApplyFilterViewController","_getHeaderPanel","_headerPanel","enableApplyButton","removeHighLights","columnHeadersViewElement","filterRowModule","columnsResizer","_startResizing","_targetPoint","_endResizing","filterItem","_prepareFilterItem","_isShowApplyFilterButton","core","HEADER_FILTER_CLASS","HEADER_FILTER_MENU_CLASS","DEFAULT_SEARCH_EXPRESSION","resetChildrenItemSelection","updateSelectAllState","selectAllCheckBox","isSearchEnabled","updateHeaderFilterItemSelectionState","filterValuesMatch","isExcludeFilter","HeaderFilterView","getPopupContainer","getListContainer","_listContainer","applyHeaderFilter","list","isFilterBuilder","fillSelectedItemKeys","isExclude","_getNode","hasChildren","hasChildrenWithSelection","hideHeaderFilterMenu","$columnElement","updatePopup","headerFilterMenu","_cleanPopupContent","_getSearchExpr","useDefaultSearchExpr","headerFilterDataSource","headerFilterOptions","_initializeListContainer","widgetOptions","List","pageLoadMode","showSelectionControls","_selectedItemsUpdating","oldSelected","filterValueIndex","headerFilterMixin","$headerFilterIndicator","_isHeaderFilterEmpty","DATE_INTERVAL_FORMATS","ungroupUTCDates","dateParts","dates","isMonthPart","convertDataFromUTCToLocal","isUTCFormat","HeaderFilterController","_headerFilterView","_updateSelectedState","_normalizeGroupItem","currentLevel","valueSelector","displaySelector","getHeaderItemText","firstValueText","secondValue","secondValueText","level","_column$headerFilter","isLookup","lookupDataSourceOptions","cutoffLevel","_currentColumn","useDefaultSearch","convertUTCDates","origPostProcess","getCurrentColumn","isGroupPanel","showHeaderFilterMenuBase","columnElement","dxResizableInstance","dxResizable","headerFilterByColumn","ColumnHeadersViewHeaderFilterExtender","_subscribeToIndicatorEvent","_updateHeaderFilterIndicators","_needUpdateFilterIndicators","HeaderPanelHeaderFilterExtender","headerFilterModule","headerFilterView","FILTER_BUILDER_RANGE_CLASS","FILTER_BUILDER_RANGE_START_CLASS","FILTER_BUILDER_RANGE_END_CLASS","FILTER_BUILDER_RANGE_SEPARATOR_CLASS","SEPARATOR","conditionInfo","$editorStart","$editorEnd","getStartValue","getEndValue","_editorFactory","getConfig","valueSeparator","notForLookup","isblank","isnotblank","OPERATION_NAME","getIconByFilterOperation","filterOperation","getNameByFilterOperation","DEFAULT_DATA_TYPE","EMPTY_MENU_ICON","AND_GROUP_OPERATION","EQUAL_OPERATION","NOT_EQUAL_OPERATION","boolean","object","DEFAULT_FORMAT","LOOKUP_OPERATIONS","AVAILABLE_FIELD_PROPERTIES","FILTER_BUILDER_CLASS","FILTER_BUILDER_ITEM_TEXT_CLASS","FILTER_BUILDER_ITEM_TEXT_PART_CLASS","FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS","FILTER_BUILDER_ITEM_TEXT_SEPARATOR_EMPTY_CLASS","getFormattedValueText","fieldFormat","isNegationGroup","isCondition","getGroupCriteria","setGroupCriteria","convertGroupToNewStructure","setGroupValue","substring","getGroupMenuItem","availableGroups","groupValue","getGroupValue","getCriteriaOperation","getDefaultFilterOperations","containItems","entity","getFilterOperations","getCaptionByOperation","filterOperationsDictionary","getOperationFromAvailable","availableOperations","getCustomOperation","filteredOperations","getAvailableOperations","isLookupField","isOperationForbidden","isCustom","getDefaultOperation","createCondition","updateConditionByOperation","removeItem","createEmptyGroup","isNegation","isNegationGroupOperation","groupOperation","getGroupOperationFromNegationOperation","addItem","getField","extendedFields","getItems","convertToInnerGroup","defaultGroupOperation","innerGroup","convertToInnerStructure","appendGroupOperationToGroup","convertToInnerCondition","conditionHasCustomOperation","appendGroupOperationToCriteria","getNormalizedFields","normalizedField","getConditionFilterExpression","filterExpression","getFilterExpression","_filterExpression","getNormalizedFilter","itemsForRemove","normalizedGroupValue","isValidCondition","getCurrentLookupValueText","lookupDataSource","loadSingle","getPrimitiveValueText","getArrayValueText","checkDefaultValue","getCurrentValueText","_len","_key","itemExists","pushItemAndCheckParent","originalItems","hasParent","getParentIdFromItemDataField","generateCaptionByDataField","lastIndexOf","arr","getCaptionWithParents","getOperationValue","getMergedOperations","betweenCaption","betweenIndex","isMatchedCondition","addedFilterDataField","removeFieldConditionsFromFilter","hasMatchedCondition","syncConditionIntoGroup","addedFilter","canPush","syncFilters","getMatchedConditions","filterHasField","renderValueText","lastItemIndex","t","baseOperation","grid","getFullText","itemText","parentText","lastIndex","div","closeEditor","fieldInfo","itemsDeferred","_values","getSelectedItemsTexts","selectedItemsTexts","anyOf","noneOf","baseOp","baseFilter","FILTER_ROW_OPERATIONS","FILTER_TYPES_INCLUDE","FILTER_TYPES_EXCLUDE","getColumnIdentifier","checkForErrors","FilterSyncController","getEmptyFilterValues","canSyncHeaderFilterWithFilterRow","getConditionFromFilterRow","getConditionFromHeaderFilter","selectedOperation","updateHeaderFilterCondition","headerFilterCondition","hasArrayValue","updateFilterRowCondition","syncFilterValue","_skipSyncColumnOptions","filterConditions","filterCondition","_initSync","filteringColumns","isFilterSyncActive","_getSyncFilterRow","_getSyncHeaderFilter","syncFilterRow","syncHeaderFilter","getCustomFilterOperations","filterBuilderCustomOperations","DataControllerFilterSyncExtender","filterSyncEnabledValue","calculatedFilterValue","_parseColumnPropertyName","matched","propertyName","ColumnHeadersViewFilterSyncExtender","filterSyncModule","filterSync","FILTER_BUILDER_GROUP_CLASS","FILTER_BUILDER_GROUP_ITEM_CLASS","FILTER_BUILDER_GROUP_CONTENT_CLASS","FILTER_BUILDER_GROUP_OPERATIONS_CLASS","FILTER_BUILDER_GROUP_OPERATION_CLASS","FILTER_BUILDER_ACTION_CLASS","FILTER_BUILDER_IMAGE_CLASS","FILTER_BUILDER_IMAGE_ADD_CLASS","FILTER_BUILDER_IMAGE_REMOVE_CLASS","FILTER_BUILDER_ITEM_FIELD_CLASS","FILTER_BUILDER_ITEM_OPERATION_CLASS","FILTER_BUILDER_ITEM_VALUE_CLASS","FILTER_BUILDER_ITEM_VALUE_TEXT_CLASS","FILTER_BUILDER_OVERLAY_CLASS","FILTER_BUILDER_FILTER_OPERATIONS_CLASS","FILTER_BUILDER_FIELDS_CLASS","FILTER_BUILDER_ADD_CONDITION_CLASS","ACTIVE_CLASS","FILTER_BUILDER_MENU_CUSTOM_OPERATION_CLASS","SOURCE","DISABLED_STATE_CLASS","TAB_KEY","ENTER_KEY","ESCAPE_KEY","OPERATORS","FilterBuilder","closePopupOnTargetScroll","_initCustomOperations","disableInvalidateForValue","_disableInvalidateForValue","_initModel","_getNormalizedFields","_model","_getFilterExpression","_customOperations","_updateFilter","_getModel","_initEditorFactory","_getDefaultGroupOperation","_this$option$","actionConfig","_createGroupElementByCriteria","_createConditionElement","_createConditionItem","$group","_createGroupElement","$groupContent","groupCriteria","innerCriteria","$groupItem","_createRemoveButton","_createGroupOperationButton","_createAddButton","newGroup","newCondition","_getGroupOperations","groupMenuItem","$operationButton","_createButtonWithMenu","removeMenu","info","treeViewElement","treeView","dxTreeView","_subscribeOnClickAndEnterKey","_createPopupWithTreeView","_hasValueButton","_createOperationButtonWithMenu","currentOperation","$valueButton","siblings","_createValueButton","_createOperationAndValueButtons","_createFieldButtonWithMenu","getFullCaption","$fieldButton","isSingleChild","$removeButton","addGroupHandler","addConditionHandler","click","_createValueText","$text","_createValueEditorWithEvents","_updateConditionValue","areValuesDifferent","_addDocumentKeyUp","isComposing","hasCompositionJustEnded","documentKeyUpHandler","input","_documentKeyUpHandler","_addDocumentClick","closeEditorFunc","documentClickHandler","_isFocusOnEditorParts","_documentClickHandler","activeElement","_removeEvents","createValueText","_createValueEditor","$popup","class","$menuContainer","FilterBuilderView","_updatePopupOptions","_initPopup","_filterBuilderPopup","_disposePopup","_filterBuilder","_getPopupContentTemplate","_getPopupToolbarItems","$filterBuilderContainer","ScrollView","filterBuilderModule","filterBuilderView","FILTER_PANEL_CLASS","FILTER_PANEL_TEXT_CLASS","FILTER_PANEL_CHECKBOX_CLASS","FILTER_PANEL_CLEAR_FILTER_CLASS","FILTER_PANEL_LEFT_CONTAINER","FILTER_PANEL_TARGET","FilterPanelView","$leftContainer","_filterValueBuffer","_getCheckElement","_getFilterElement","_getTextElement","_getRemoveButtonElement","CheckBox","_showFilterBuilder","_addTabIndexToElement","filterText","$textElement","getFilterText","customText","clearFilterValue","tabindex","_getConditionText","fieldText","operationText","_getValueMaskedText","_getValueText","hasCustomOperation","gridUtils","getConditionText","getGroupText","isInnerGroup","textParts","groupText","filterPanelModule","filterPanelView","SEARCH_PANEL_CLASS","SEARCH_TEXT_CLASS","searchModule","searchFilter","onQueryDone","valueGetter","_i","getSearchPanelOptions","_prepareSearchItem","searchPanelOptions","$search","getSearchTextEditor","$searchPanel","dxTextBox","_searchParams","_getFormattedSearchText","_getStringNormalizer","isCaseSensitive","_findHighlightingTextNodes","_$items","stringNormalizer","normalizedSearchText","resultTextNodes","$contents","normalizedText","_highlightSearchTextCore","$textNode","$searchTextSpan","firstContentElement","after","_highlightSearchText","isEquals","textNodes","textNode","_highlightTimer","GridPagerWrapper","pageIndexChanged","pageSizeChanged","toNumber","attribute","getElementStyle","_getElementComputedSt","computedStyle","getElementComputedStyle","getElementWidth","getElementMinWidth","_excluded","viewFunction","contentAttributes","infoTextRef","infoTextVisible","isLargeDisplayMode","pageSizesRef","pagesRef","parentRef","Content","rootElementRef","calculateAdaptivityProps","infoWidth","pageSizesWidth","pageSizes","pagesWidth","pages","parentWidth","minimalWidth","getElementsWidth","pagesHtmlWidth","ResizableContainerProps","TemplateProp","normalizeProps","createComponentVNode","ResizableContainer","infernoCreateRef","subscribeToResize","effectUpdateChildProps","updateAdaptivityProps","InfernoEffect","pagerProps","_this$_effects$","_this$_effects$2","_effects","resizeCallbacks","gridCompatibility","lightModeEnabled","maxPagesCount","pageIndexChange","pageSizeChange","pagesCountText","pagesNavigatorVisible","showPageSizes","restAttributes","currentElementsWidth","actualAdaptivityProps","elementsWidth","setState","__state_argument","_this$props","restProps","_objectWithoutPropertiesLoose","InfernoComponent","BasePagerProps","PagerProps","getOwnPropertyDescriptors","defaultPageSize","InternalPagerProps","PAGER_INFO_CLASS","createVNode","InfoTextPropsType","InfoText","_this$props$infoText","BaseInfernoComponent","KeyboardActionContext","createContext","widgetRef","LightButtonProps","LightButton","keyboardEffect","subscribeToClick","keyboardContext","subscribeToClickEvent","PAGER_CLASS","LIGHT_MODE_CLASS","PAGER_PAGES_CLASS","PAGER_PAGE_INDEXES_CLASS","PAGER_PAGE_CLASS","PAGER_SELECTION_CLASS","PAGER_PAGE_SIZE_CLASS","PAGER_PAGE_SIZES_CLASS","PAGER_SELECTED_PAGE_SIZE_CLASS","PageProps","Page","combineClasses","_excluded2","PAGER_PAGE_SEPARATOR_CLASS","PagesMarkup","pageProps","createFragment","PAGES_LIMITER","getDelimiterType","startIndex","slidingWindowSize","createPageIndexesBySlidingWindowIndexes","slidingWindowIndexes","delimiter","pageIndexes","indexesForReuse","createPageIndexes","PagesLargePropsType","PagesLarge","canReuseSlidingWindow","generatePageIndexes","isSlidingWindowMode","onPageClick","ConfigContext","slidingWindowState","slidingWindowStateHolder","currentPageCount","currentPageNotExistInIndexes","includes","pageIndexExistInIndexes","_createPageIndexes","_this$config","createPage","rtlPageIndexes","DEFAULT_VALUE","DomComponentWrapper","componentType","LegacyNumberBox","componentProps","templateNames","NumberBoxProps","BaseWidgetProps","defaultValue","isReactComponentWrapper","NumberBox","_this$props$value","oneDigitWidth","calculateValuesFittedWidth","PAGER_INFO_TEXT_CLASS","PAGER_PAGE_INDEX_CLASS","LIGHT_PAGES_CLASS","PAGER_PAGES_COUNT_CLASS","pageIndexRef","selectLastPageIndex","valueChange","PagerSmallProps","PagesSmall","updateWidth","_this$pageIndexRef$cu","el","_this$props$pagesCoun","PAGER_NAVIGATE_BUTTON","PAGER_PREV_BUTTON_CLASS","PAGER_NEXT_BUTTON_CLASS","PAGER_BUTTON_DISABLE_CLASS","nextButtonClassName","prevButtonClassName","nextButtonDisabledClassName","prevButtonDisabledClassName","navigateToNextPage","navigateToPrevPage","nextClassName","prevClassName","renderNextButton","renderPrevButton","getIncrement","PageIndexSelectorProps","PageIndexSelectorPropsType","PageIndexSelector","getNextDirection","getPrevDirection","canNavigateToPage","getNextPageIndex","canNavigateTo","navigateToPage","_this$config2","canNavigate","LegacySelectBox","SelectBoxProps","SelectBox","PageSizeSmallPropsType","PageSizeSmall","p","pageSizesText","PageSizeLargePropsType","PageSizeLarge","__getterCache","onPageSizeChange","processedPageSize","nextProps","nextState","htmlRef","normalizedPageSizes","getAllText","PageSizeSelectorProps","PageSizeSelectorPropsType","PageSizeSelector","setRootElementRef","infoVisible","pageIndexSelectorVisible","pagesContainerVisibility","pagesContainerVisible","widgetRootElementRef","normalizeStyles","PagerContentProps","PagerContent","createFakeInstance","keyboardAction","_this$props$onKeyDown","fakePagerInstance","_registerKeyboardAction","normalizedDisplayMode","classesMap","_this$props2","Pager","createReRenderEffect","__newValue","_newValue","newPageSize","_this$props$pageSize$","InfernoWrapperComponent","_wrapKeyDownHandler","twoWay","allowNull","PagerComponent","MAX_PAGES_COUNT","getPageIndex","PagerView","_getPager","pagerOptions","useLegacyKeyboardNavigation","_pageSizes","pagerVisible","isPager","isPaging","isDataSource","isScrolling","pagerModule","COLUMNS_SEPARATOR_CLASS","COLUMNS_SEPARATOR_TRANSPARENT","DRAGGING_HEADER_CLASS","HEADERS_DRAG_ACTION_CLASS","TRACKER_CLASS","HEADERS_DROP_HIGHLIGHT_CLASS","BLOCK_SEPARATOR_CLASS","WIDGET_CLASS","DRAGGING_COMMAND_CELL_CLASS","COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH","DRAGGING_DELTA","COLUMN_OPACITY","TrackerView","_unsubscribeFromCallback","_positionChanged","_tablePositionController","_subscribeToCallback","_setHeight","SeparatorView","_renderSeparator","_isShown","ColumnsSeparatorView","_isTransparent","columnsSeparatorTransparent","moveByX","outerX","changeCursor","cursorName","BlockSeparatorView","startAnimate","toOptions","fx","DraggingHeaderView","_isDragging","isDragging","_getDraggingPanelByPos","_dragOptions","boundingRect","_resetTargetColumnOptions","_dropOptions","targetColumnIndex","targetColumnElement","isLast","posX","posY","_getVisibleIndexObject","_columnsResizerViewController","dragHeader","isCommandColumn","sourceIndex","sourceColumnIndex","sourceColumnElement","_onSelectStart","onselectstart","drag","whiteSpace","swatchContainer","moveHeader","eventData","getEventData","dragOptions","moveDeltaX","abs","deltaX","moveDeltaY","deltaY","newLeft","newTop","dockHeader","targetDraggingPanel","isVerticalOrientation","axisName","pointsByTarget","pointsByColumns","_generatePointsByColumns","centerPosition","dock","dropHeader","drop","isNextColumnResizingMode","ColumnsResizerViewController","_isHeadersRowArea","headersRowHeight","_isRtlParentStyle","_this$_$parentContain","_$parentContainer","_pointCreated","isNextColumnMode","isRtlParentStyle","firstPointColumnIndex","nextColumn","_getTargetPoint","currentX","_moveSeparator","_that$_draggingHeader","columnsSeparatorWidth","_columnsSeparatorView","parentOffset","parentOffsetLeft","_draggingHeaderView","_isResizing","_resizingInfo","_updateColumnsWidthIfNeeded","currentColumnIndex","outerWidth","_previousParentOffset","_isReadyResizing","_trackerView","_getNextColumnIndex","_setupResizingInfo","nextColumnIndex","currentHeader","nextHeader","startPosX","currentColumnWidth","nextColumnWidth","isTouchEvent","_pointsByColumns","_unsubscribeFromEvents","_moveSeparatorHandler","_startResizingHandler","_endResizingHandler","_subscribeToEvents","nextCellWidth","cellWidth","needUpdate","resizingInfo","setColumnWidth","oldColumnWidth","allColumnsHaveWidth","totalPercent","hasScroll","_subscribesToCallbacks","_unsubscribeFromCallbacks","subscribe","_unsubscribes","generatePointsByColumnsHandler","generatePointsByColumnsScrollHandler","previousScrollbarVisibility","previousTableHeight","scrollbarVisibility","TablePositionViewController","diffOffsetTop","columnsHeadersHeight","scrollBarWidth","columnsResizerController","draggingHeaderView","isDraggingOrResizing","_pagerView","targetPoint","DraggingHeaderViewController","draggingHeader","nameDraggingPanel","subscribeToEvents","dragEventStart","dragEventMove","dragEventEnd","_getSeparator","_blockSeparatorView","hideSeparators","blockSeparator","columnsSeparator","_animationColumnIndex","_headerPanelView","_columnChooserView","allowDrop","headersView","separator","hasTargetVisibleIndex","columnsResizingReorderingModule","columnsSeparatorView","blockSeparatorView","trackerView","tablePosition","GROUP_FOOTER_CLASS","FREESPACE_ROW_CLASS","COMMAND_CELL_SELECTOR","DATEBOX_WIDGET_NAME","FAST_EDITING_DELETE_KEY","INTERACTIVE_ELEMENTS_SELECTOR","NON_FOCUSABLE_ELEMENTS_SELECTOR","FOCUS_TYPE_ROW","FOCUS_TYPE_CELL","COLUMN_HEADERS_VIEW","isNotFocusedRow","isCellElement","_isRowEditMode","isElementDefined","isMobile","isCellInHeaderRow","isFixedColumnIndexOffsetRequired","shouldPreventScroll","_isVirtualScrolling","KeyboardNavigationController","_selectionController","_updateFocusTimeout","_fastEditingStarted","_focusedCellPosition","_canceledCellPosition","setupFocusedView","_isNeedScroll","_focusedView","_initViewHandlers","_initDocumentHandlers","rowsViewFocusHandler","isRelatedTargetInRowsView","isCommandButton","_isEventInCurrentGrid","$focusedCell","_getFocusedCell","$rowsView","isFocusedViewCorrect","needUpdateFocus","isFocusedElementCorrect","_initPointerEventHandler","_initKeyDownHandler","_setRowsViewAttributes","_isNeedFocus","_isHiddenFocus","isCurrentRowsViewClick","isEditorOverlay","isColumnResizing","targetInsideFocusedView","_resetFocusedCell","_resetFocusedView","_getRowsViewElement","isGridEmpty","_applyTabIndexToElement","pointerEventName","clickSelector","_pointerEventAction","_pointerEventHandler","keyboard","_keyDownListener","_keyDownHandler","isRowFocusType","focusType","isCellFocusType","setRowFocusType","setCellFocusType","needStopPropagation","_processOnKeyDown","isDefaultPrevented","_updateFocusedCellPositionByTarget","_leftRightKeysHandler","ctrl","_upDownKeysHandler","_pageUpDownKeyHandler","_spaceKeyHandler","_ctrlAKeyHandler","_beginFastEditing","_tabKeyHandler","_enterKeyHandler","_escapeKeyHandler","_ctrlFKeyHandler","_f2KeyHandler","_isFastEditingAllowed","_isFastEditingStarted","alt","altKey","_closeEditCell","getVisibleRowIndex","$event","directionCode","_getDirectionCodeByKey","isEditingNavigationMode","allowNavigate","_isVirtualColumnRender","_processVirtualHorizontalPosition","_getNextCell","_arrowKeysHandlerFocusCell","isUpArrow","_navigateNextCell","_isVirtualRowRender","_scrollBy","isPageUp","pageStep","isFocusedRowElement","_getElementType","isFocusedSelectionCell","isCellPositionDefined","isOriginalHandlerRequired","_isLastValidCell","_isFirstValidCell","eventTarget","focusedViewElement","_handleTabKeyOnMasterDetailCell","_editingCellTabHandler","_targetCellTabHandler","_getMaxHorizontalOffset","_isColumnRendered","allVisibleColumns","renderedVisibleColumns","_isFixedColumn","_isColumnVirtual","localColumnIndex","getColumnIndex","horizontalScrollPosition","needToScroll","_getVisibleColumnCount","leftEdgePosition","_getHorizontalScrollPositionOffset","scrollBy","positionOffset","$currentCell","_getCell","currentCellWidth","rtlMultiplier","isEditingAllowed","_getCellElementFromTarget","elementType","_updateFocusedCellPosition","nextCellInfo","_getNextCellByTabKey","_getRowIndex","_isDataRow","_focusCell","isHighlighted","_editFocusedCell","_focusInteractiveElement","$lastInteractiveElement","_getInteractiveElement","getFirstValidCellInRow","_checkNewLineTransition","_fireFocusedCellChanging","$newCellElement","_getCellPosition","_fireFocusedRowChanging","rowIndexChanged","setFocusedColumnIndex","_processEnterKeyForDataCell","_getEnterKeyDirection","allowEditingOnEnterKey","_allowEditingOnEnterKey","_handleEnterKeyEditingCell","_startEditing","isShift","_focusEditFormCell","searchTextEditor","keyCode","isCellValid","_isCellValid","$nextCell","isVerticalDirection","_fireFocusChangingEvents","_focus","isDeleting","fastEditingKey","fromCharCode","isInteractiveElement","isExpandCommandCell","_isInsideEditForm","_focusView","_isMasterDetailCell","_clickTargetCellHandler","_isCellEditMode","setFocusedRowIndex","prevRowIndex","resetFocusedRow","_resetFocusedRow","_allowRowUpdating","skipFocusEvent","isEditor","isDisabled","activeElementSelector","_focusElement","getFocusedView","rowsViewElement","$focusedView","_getFocusedViewByElement","$view","disableFocus","$focusElement","focusedView","isRowFocus","isRenderView","_hasSkipRow","_checkCellOverlapped","$focusedElementInsideCell","isFocusedElementDefined","cellOffset","hasScrollable","isOverlapped","_this$_focusedCellPos","setFocusedCellPosition","_getFocusedColumnIndexOffset","_getFixedColumnIndexOffset","_applyColumnIndexBoundaries","preventScroll","_this$_focusedView","renderFocusState","restoreFocusableElement","newRowIndex","_getNewPositionByCode","visibleColumnsCount","_hasValidCellAfterPosition","_isLastRow","_hasValidCellBeforePosition","_isCellByPositionValid","getMaxRowIndex","isFirstValidCell","hasValidCells","checkingPosition","visibleColumnCount","isLastRow","isClick","isShowWhenGrouped","isDataCell","rowItems","isRowEditingInCurrentRow","_isLegacyNavigation","$result","focusedCellPosition","includeCommandCells","newFocusedCellPosition","isLastCellOnDirection","_isCellInRow","visibleColumnIndex","_isAllowEditing","_startEditCell","colIndex","editResult","_editingCellHandler","editorValue","_$input$get$select","_$input$get","$input","keyDownEvent","createEvent","keyPressEvent","inputEvent","$widgetContainer","fireRowEvent","newColumnIndex","prevCellIndex","prevColumnIndex","_fireFocusedCellChanged","localRowIndex","$newFocusedRow","prevFocusedRowIndex","_fireFocusedRowChanged","getFocusedRowIndexByKey","$masterDetailCell","$masterDetailGrid","_processNextCellInMasterDetail","_processCanceledEditCellPosition","isCanceled","updateFocusedRowIndex","lastVisibleIndex","keyboardNavigationModule","needTriggerPointerEventHandler","_triggerPointerDownEventHandler","cellElements","updateFocusElementTabIndex","_updateFocusedCellTabIndex","cellElementsLength","updateCellTabIndex","isMasterDetailCell","isValidCell","_renderFocusByChange","editorInstance","_getEditorInstance","_handleEditingNavigationMode","originalKeyHandler","isDropDownOpened","isDateBoxWithMask","keyboardNavigationController","_keyboardNavigationController","getRowIndexCorrection","focusedRowIndexCorrection","adaptiveColumns","_showHiddenCellsInView","_hideVisibleCellInView","depthFirstSearch","depth","array","isCount","aggregator","aggregators","normalizeAggregate","aggregate","_data","_groupLevel","_totalAggregates","totalAggregates","_groupAggregates","groupAggregates","_totals","calculate","_calculateTotals","_calculateGroups","_aggregate","aggregates","_accumulate","_seed","_finalize","maxLevel","seedFn","stepFn","finalizeFn","innerNode","seed","NaN","aggregateIndex","step","fin","finalize","DATAGRID_TOTAL_FOOTER_CLASS","DATAGRID_SUMMARY_ITEM_CLASS","DATAGRID_TEXT_CONTENT_CLASS","DATAGRID_GROUP_FOOTER_CLASS","DATAGRID_GROUP_TEXT_CONTENT_CLASS","DATAGRID_NOWRAP_CLASS","DATAGRID_GROUP_FOOTER_ROW_TYPE","renderSummaryCell","$summaryItems","getSummaryCellOptions","getGroupAggregates","FooterView","footerItems","needUpdateScrollLeft","$newTable","$newRow","totalColumnIndices","SummaryDataSourceAdapterExtender","_summaryGetter","summaryGetter","_summary","sortByGroupsInfo","sortByGroups","groupedItems","forEachGroup","itemsPath","SummaryDataSourceAdapterClientExtender","calculateAggregates","calculator","insertedData","applyAddedData","removedData","applyRemovedData","updatedData","updatedItems","set","AggregateCalculator","sortGroupsBySummary","sortGroupsBySummaryCore","sortBy","thenBy","sortedItems","totalSummary","_options$cachedData$e","hasOperations","_isDataColumn","_isGroupFooterVisible","isGroupFooterVisible","summaryGroupItems","afterGroupColumnIndex","_calculateSummaryCells","calculateTargetColumnIndex","summaryCellsByColumns","summaryIndex","_getSummaryCells","summaryTotalItems","_footerItems","oldSummaryCells","summaryCell","_prepareUnsavedDataSelector","_prepareAggregateSelector","_getAggregates","commonSkipEmptyValues","summaryProcess","totalValue","_addSortInfo","_findSummaryItem","summaryItemIndex","_getSummarySortByGroups","groupSummaryItems","currentRemoteOperations","_getSummaryOptions","totalSummaryItems","methods","getTotalSummaryValue","summaryItemName","_refreshSummary","_renderGroupSummaryCells","_hasAlignByColumnSummaryItems","_getAlignByColumnCellCount","groupCellColSpan","alignByColumnCellCount","$groupCell","_renderGroupSummaryCellsCore","_getSummaryCellIndex","FIRST_CELL_CLASS","LAST_CELL_CLASS","HOVER_STATE_CLASS","FIXED_COL_CLASS","FIXED_COLUMNS_CLASS","POINTER_EVENTS_NONE_CLASS","getTransparentColumnIndex","normalizeColumnWidths","fixedWidths","fixedColumnIndex","baseFixedColumns","_isFixedColumns","_correctColumnIndicesForFixedColumns","_partialUpdateFixedTable","fixedTableElement","_fixedTableElement","childNodes","$fixedTable","fixedCorrection","fixedCells","prevFixedColumn","columnCommand","isRowAltStyle","isEmptyCell","isFixedTableRendering","isGroupCell","alignByFixedColumnCellCount","headerRowIndex","fixedCellElements","fixedColumn","getFixedColumnsOffset","$transparentColumn","getTransparentColumnElement","positionTransparentColumn","getFixedTableElement","synchronizeRows","isWidthsSynchronized","isColumnWidthChanged","useVisibleColumns","_getClientHeight","boundingClientRectElement","$fixedRowElements","fixedRowHeights","heightTable","heightFixedTable","fixedRowHeight","ColumnHeadersViewFixedColumnsExtender","columnFixingOptions","getFixedColumnElements","$transparentColumnElement","$fixedColumnElements","RowsViewFixedColumnsExtender","_detachHoverEvents","_attachHoverEvents","attachHoverEvent","isHover","contentClass","scrollDelay","_fixedScrollTimeout","wheelEventName","$nearestScrollable","shouldScroll","nearestScrollableInstance","nearestScrollableHasVerticalScrollbar","_updateFixedTablePosition","needFocus","vWidth","hWidth","styles","$fixedContent","_getElasticScrollTop","elasticScrollTop","reachedBottom","scrollableContent","$scrollableContainer","maxScrollTop","_applyElasticScrolling","move","FooterViewFixedColumnsExtender","columnFixingModule","normalizeColumnIndicesByPoints","correctIndex","pointsByFixedColumns","_pointsByFixedColumns","isWidgetResizingMode","ROWS_VIEW","FOOTER_VIEW","COLUMN_VIEWS","ADAPTIVE_NAMESPACE","ADAPTIVE_ROW_TYPE","FORM_ITEM_CONTENT_CLASS","FORM_ITEM_MODIFIED","HIDDEN_COLUMN_CLASS","ADAPTIVE_COLUMN_BUTTON_CLASS","ADAPTIVE_COLUMN_NAME_CLASS","COMMAND_ADAPTIVE_HIDDEN_CLASS","ADAPTIVE_DETAIL_ROW_CLASS","ADAPTIVE_ITEM_TEXT_CLASS","LAST_DATA_CELL_CLASS","ADAPTIVE_COLUMN_NAME","EXPAND_ARIA_NAME","COLLAPSE_ARIA_NAME","getDataCellElements","adaptiveCellTemplate","$adaptiveColumnButton","adaptiveColumnsController","toggleExpandAdaptiveDetailRow","AdaptiveColumnsController","_getEditMode","_isItemModified","_renderFormViewTemplate","focusAction","renderFormTemplate","isItemEdited","_isItemEdited","_isVisibleColumnsValid","_calculatePercentWidths","percentWidths","_getItemPercentWidth","_isPercentWidth","_isColumnHidden","_hiddenColumns","hiddenColumn","columnsCanFit","fixedColumnsWidth","columnsWithoutFixedWidthCount","_calculatePercentWidth","_calculateColumnWidth","contentColumns","colWidth","widthOption","columnFitted","partialWidth","resultWidth","_getNotTruncatedColumnWidth","_getCommandColumnsWidth","adaptiveExpandedKey","_getFormItemsByHiddenColumns","hiddenColumns","_getAdaptiveColumnVisibleIndex","_hideAdaptiveColumn","_hideVisibleColumn","cssClassNameToRemove","_showHiddenColumns","$hiddenCommandCells","$hiddenCells","_hideVisibleColumnInView","rowsCount","cancelClassAdding","currentVisibleIndex","_findCellElementInRow","$rowCells","cellIsInsideGroup","groupCellLength","endGroupIndex","cssClassNameToAdd","hideRedundantColumns","hiddenQueue","hasHiddenColumns","needHideColumn","rootElementWidth","getVisibleContentColumns","visibleContentColumns","contentColumnsCount","columnBestFitWidth","getItemContentByColumnIndex","$itemContent","_$itemContents","alwaysExpanded","createFormByHiddenColumns","userFormOptions","defaultFormOptions","formOptions","_form","updateForm","hasAdaptiveDetailRowExpanded","_contentReadyAction","updateHidingQueue","columnsHasHidingPriority","hideableColumns","_hidingColumnsQueue","getHiddenColumns","getHidingColumnsQueue","adaptiveHidden","isAdaptiveVisible","isAdaptiveDetailRowExpanded","expandAdaptiveDetailRow","collapseAdaptiveDetailRow","updateCommandAdaptiveAriaLabel","setCommandAdaptiveAriaLabel","labelName","$adaptiveCommand","adaptivityModule","_adaptiveColumnsController","hidingColumnsQueueLength","hiddenColumnsLength","isClickable","_updateColumnWidth","hasHiddenColumnsOnly","hasAdaptiveHiddenWidth","$itemContents","_adaptiveController","oldExpandRowIndex","_isForceRowAdaptiveExpand","_collapseAdaptiveDetailRow","_cancelEditAdaptiveDetailRow","expandedKey","_adaptiveExpandedKey","adaptiveController","oldHiddenColumns","hidingColumnsQueue","_updateScrollableTimeoutID","expandRowIndex","lastRowIndex","oldExpandLoadedRowIndex","newExpandLoadedRowIndex","oldKey","isCellOrBatchMode","focusHandler","$dataCells","isCellElementsEquals","foreachColumnInfo","offsets","lastProcessedIndexes","processedColumnCount","createColumnsInfo","endIndex","newInfo","columnInfo","cellColspan","DEFAULT_COLUMN_WIDTH","setScrollPosition","HeaderViewExtender","ColumnsControllerExtender","getWidths","_beginPageIndex","_endPageIndex","_virtualVisibleColumns","currentPosition","getColumnPageSize","getTotalWidth","_fireColumnsChanged","_changedTimeout","_setScrollPositionCore","needColumnsChanged","visibleColumnsHash","beginFixedColumnCount","beginFixedColumns","beginColumns","beginWidth","endFixedColumnCount","endFixedColumns","endColumns","endWidth","columnsInfo","leftFixedColumnCount","virtualColumnsModule","columnPageSize","columnRenderingThreshold","_getEmptyCell","_defaultSetter","_cloneItem","_prepareItems","cols","_c","BUTTON_GROUP_CLASS","BUTTON_GROUP_WRAPPER_CLASS","BUTTON_GROUP_ITEM_CLASS","BUTTON_GROUP_FIRST_ITEM_CLASS","BUTTON_GROUP_LAST_ITEM_CLASS","BUTTON_GROUP_ITEM_HAS_WIDTH","SHAPE_STANDARD_CLASS","ButtonCollection","CollectionWidget","_initTemplates","_templateManager","addDefaultTemplates","BindableTemplate","_prepareItemStyles","_getBasicButtonOptions","_templateData","_hasCustomTemplate","stylingMode","itemTemplateProperty","_renderItemContent","_renderItemContentByNode","_focusTarget","_keyboardEventBindingTarget","_refreshContent","_prepareContent","_itemClass","_itemSelectHandler","ButtonGroup","buttonTemplate","_createItemClickAction","_itemClickAction","_renderButtons","_syncSelectionOptions","_fireSelectionChangeEvent","removedItems","$buttons","selectionRequired","_buttonsCollection","itemElements","DROP_DOWN_BUTTON_CLASS","DROP_DOWN_BUTTON_CONTENT","DROP_DOWN_BUTTON_ACTION_CLASS","DROP_DOWN_BUTTON_TOGGLE_CLASS","DROP_DOWN_BUTTON_HAS_ARROW_CLASS","DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS","DROP_DOWN_EDITOR_OVERLAY_CLASS","DX_BUTTON_TEXT_CLASS","DX_ICON_RIGHT_CLASS","DropDownButton","selectedItemKey","useSelectMode","splitButton","showArrowIcon","onButtonClick","opened","dropDownOptions","dropDownContentTemplate","wrapItemText","useItemTextAsTitle","groupTemplate","buttonGroupOptions","_setOptionsByReference","_createActionClickAction","_createSelectionChangedAction","_compileKeyGetter","_compileDisplayGetter","_itemsToDataSource","_options","cache","FunctionTemplate","$listContainer","_list","_listOptions","_escHandler","_getKey","storeKey","_keyGetter","_displayGetter","_renderButtonGroup","_updateArrowClass","_loadSelectedItem","_updateActionButton","_renderFocusTarget","_render","_renderPopup","_popup","_renderPopupContent","_this$_loadSingleDefe","_loadSingleDeferred","_lastSelectedItemData","cachedResult","_loadSingle","_actionClickAction","_selectionChangedAction","_fireSelectionChangedAction","previousItem","_fireItemClickAction","_actionItem","_actionButtonConfig","_getButtonGroupItems","_buttonGroupItemClick","isActionButton","isToggleButton","_buttonGroupOptions","buttonContent","$firstIcon","getImageContainer","$textContainer","$secondIcon","onKeyboardHandled","_keyboardHandler","_getTemplateByOption","_popupContentId","_popupOptions","horizontalAlignment","$buttonClicked","actionResult","_buttonGroup","_upDownKeyHandler","open","close","_tabHandler","_popupHidingHandler","_popupShowingHandler","_bindInnerWidgetOptions","_setAriaExpanded","_popupOptionChanged","_setPopupOption","optionsKeys","popupWidth","getSizeValue","_setWidgetOption","_ariaExpandedElements","ariaElement","owns","$buttonGroup","buttonElements","hasArrow","_setListOption","_getDisplayValue","isPrimitiveItem","_selectedItemKeyChanged","_actionButtonOptionChanged","newConfig","_selectModeChanged","_updateItemCollection","_updateDataSource","_updateKeyExpr","_this$_popup","_innerWidgetOptionChanged","DATAGRID_EXPORT_MENU_CLASS","DATAGRID_EXPORT_BUTTON_CLASS","DATAGRID_EXPORT_TOOLBAR_BUTTON_NAME","DATAGRID_EXPORT_ICON","DATAGRID_EXPORT_EXCEL_ICON","DATAGRID_EXPORT_SELECTED_ICON","DATAGRID_EXPORT_EXCEL_BUTTON_ICON","DataProvider","initialColumnWidthsByColumnIndex","selectedRowsOnly","_exportController","_initialColumnWidthsByColumnIndex","_selectedRowsOnly","_getGroupValue","_correctCellIndex","_initOptions","_getColumns","_selectionOnly","_getSelectedItems","_getAllItems","isHeadersVisible","wrapTextEnabled","hasCustomizeExcelCell","cellSourceData","gridCell","getHeaderStyles","bold","wrapText","getGroupRowStyle","getColumnStyles","columnStyles","getStyles","_getTotalCellStyleId","_this$getColumns$cell","getStyleId","getHeaderRowCount","isTotalCell","getColumnsByAllRows","getColumnsWidths","getGroupLevel","getCellType","ready","_convertFromGridGroupSummaryItems","gridGroupSummaryItems","getCellData","isExcelJS","correctedCellIndex","columnsRow","gridColumn","itemValues","totalSummaryItemName","correctCellIndex","isSummaryAlignByColumn","getCellMerging","exportColspan","getFrozenArea","ExportController","exportMixin","currentHeaderRow","columnWidthsByColumnIndex","_getColumnWidths","_headersView","_needColumnExporting","currentColspan","_calculateExportColspan","childColumns","childColumn","_getFooterSummaryItems","isTotal","estimatedItemsCount","_hasSummaryGroupFooters","_getItemsWithSummaryGroupFooters","sourceItems","beforeGroupFooterItems","groupFooterItems","_updateGroupValuesWithSummaryByColumn","summaryValues","groupColumnCount","merge","_processUnExportedItems","isDetailExpandColumn","selectedRowData","getExportFormat","getDataProvider","columnsLastRowVisibleColumns","exportToExcel","clientExport","autoFilterEnabled","ignoreErrors","exportingAction","exportedAction","fileSavingAction","excel","_isSelectedRows","callbackList","exportButton","_getExportToolbarButton","_correctItemsPosition","_getExportToolbarItems","toolbarButtonOptions","_widgetOptions","_index","exportOptions","itemA","itemB","_isExportButtonVisible","_getButtonOptions","allowExportSelected","ROW_FOCUSED_CLASS","TABLE_POSTFIX_CLASS","FocusController","_keyboardController","_focusRowByIndex","_triggerFocusedRowChangedIfNeed","_focusRowByKey","focusedRowIndexByKey","isAutoNavigateToFocusedRow","_focusRowByIndexCore","setKeyByIndex","_isValidFocusedRowIndex","_getLastItemIndex","isRowFocused","_isLocalRowIndex","isVirtualScrolling","virtualItems","virtualItemsBegin","visibleRowsCount","visiblePagesCount","_setFocusedRowKeyByIndex","_navigateToRow","isFocusedRowKeyDefined","needFocusRow","isAutoNavigate","rowIndexByKey","_navigateTo","getPageIndexByKey","isVirtualRowRenderingMode","_navigateToVirtualRow","_navigateToVisibleRow","_triggerUpdateFocusedRow","scrollToRowElement","triggerUpdateFocusedRow","scrollTopPosition","_focusRowByKeyOrIndex","currentFocusedRowIndex","updateFocusedRow","isMainTable","_clearPreviousFocusedRow","_prepareFocusedRow","changedItem","$prevRowFocusedElement","focusedRow","$focusedRowTable","$firstRow","scrollToElementVertically","focusModule","visibleRow","isRowElement","sortByKey","notSortedKeys","notSortedKey","isPartialUpdate","isPartialUpdateWithDeleting","_updatePageIndexes","processUpdateFocusedRow","prevRenderingPageIndex","_lastRenderingPageIndex","renderingPageIndex","_isPagingByRendering","isPagingByRendering","isValidRowIndexByKey","needFocusRowByIndex","getGlobalRowIndexByKey","_calculateGlobalRowIndexByGroupedData","_calculateGlobalRowIndexByFlatData","groupFilter","useGroup","_generateFilterByKey","_concatWithCombinedFilter","_generateOperationFilterByKey","_generateBooleanFilter","sortInfo","isBoolean","booleanFilter","sortFilter","dataSourceKey","keyPart","_setFocusedRowElementTabIndex","_findRowElementForTabIndex","_scrollToFocusOnResize","getScrollElementPosition","currentScrollTop","isRowClick","_isFocusedRowInsideGroup","_getGroupPath","groupPath","_expandGroupByPath","isGroupKey","_calculateExpandedRowGlobalIndex","dataOffset","groupContinuationCount","currentPageOffset","COMMAND_HANDLE_CLASS","HANDLE_ICON_CLASS","SORTABLE_WITHOUT_HANDLE_CLASS","RowDraggingExtender","_updateHandleColumn","_allowReordering","isHandleColumnVisible","_getHandleTemplate","sortableName","sortableFixedName","currentSortableName","anotherSortableName","togglePointerEventsStyle","_this$sortableFixedNa","Sortable","_getDraggableRowTemplate","_rowDragging$onDragSt","onDragEnter","onDragLeave","_rowDragging$onDragEn","_rowDragging$onAdd","hasFixedSortable","_updateSortable","_sortable","_sortableFixed","sortable","_getDraggableGridOptions","gridOptions","$dataGridContainer","rowDraggingModule"],"sourceRoot":""}