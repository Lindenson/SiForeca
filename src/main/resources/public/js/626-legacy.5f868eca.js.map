{"version":3,"file":"js/626-legacy.5f868eca.js","mappings":"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","sources":["webpack://siforeca/./node_modules/core-js/modules/es.number.max-safe-integer.js","webpack://siforeca/./node_modules/devextreme-vue/data-grid.js","webpack://siforeca/./node_modules/devextreme/esm/ui/shared/filtering.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.utils.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.modules.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.column_state_mixin.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.columns_view.js","webpack://siforeca/./node_modules/devextreme/esm/ui/shared/accessibility.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.accessibility.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.column_headers.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.column_headers.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.columns_controller.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.columns_controller.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.data_source_adapter.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.data_source_adapter.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.data_controller.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.data_controller.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.sorting_mixin.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.sorting.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.sorting.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.rows.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.rows.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.context_menu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.context_menu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.error_handling.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.error_handling.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.grid_view.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grid_view.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.header_panel.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.header_panel.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.base.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.state_storing_core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.state_storing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.state_storing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.selection.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.selection.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.column_chooser.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.column_chooser.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grouping.core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.utils.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grouping.expanded.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grouping.collapsed.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.grouping.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.master_detail.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.master_detail.js","webpack://siforeca/./node_modules/devextreme/esm/ui/shared/ui.editor_factory_mixin.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editor_factory.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editor_factory.js","webpack://siforeca/./node_modules/devextreme/esm/ui/dialog.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing_constants.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing_row_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editing_row_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing_form_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editing_form_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.editing_cell_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.editing_cell_based.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.validating.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.validating.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid.core.virtual_data_loader.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_scrolling_core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_scrolling.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.virtual_scrolling.js","webpack://siforeca/./node_modules/devextreme/esm/ui/overlay/utils.js","webpack://siforeca/./node_modules/devextreme/esm/ui/menu/ui.submenu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/menu/ui.menu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/menu.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_row.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.filter_row.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.header_filter_core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.header_filter.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.header_filter.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder/between.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder/ui.filter_operations_dictionary.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder/utils.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_custom_operations.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_sync.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.filter_sync.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder/filter_builder.js","webpack://siforeca/./node_modules/devextreme/esm/ui/filter_builder.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_builder.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.filter_builder.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.filter_panel.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.filter_panel.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.search.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.search.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/component_wrapper/grid_pager.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/utils/type_conversion.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/utils/get_element_width.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/resizable_container.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/base_pager_props.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/pager_props.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/info.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/keyboard_action_context.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/light_button.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/common/consts.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pages/page.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pages/large.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/editors/number_box.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/utils/calculate_values_fitted_width.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pages/small.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pages/page_index_selector.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/editors/drop_down_editors/select_box.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/page_size/small.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/page_size/large.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/page_size/selector.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/content.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pager.js","webpack://siforeca/./node_modules/devextreme/esm/renovation/ui/pager/pager.j.js","webpack://siforeca/./node_modules/devextreme/esm/ui/pager.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.pager.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.pager.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.columns_resizing_reordering.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.columns_resizing_reordering.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.keyboard_navigation.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/aggregate_calculator.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.keyboard_navigation.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.summary.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.column_fixing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.column_fixing.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.adaptivity.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_columns_core.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.adaptivity.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_columns.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.virtual_columns.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.export_mixin.js","webpack://siforeca/./node_modules/devextreme/esm/ui/button_group.js","webpack://siforeca/./node_modules/devextreme/esm/ui/drop_down_button.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.export.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.focus.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.focus.js","webpack://siforeca/./node_modules/devextreme/esm/ui/grid_core/ui.grid_core.row_dragging.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.row_dragging.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid/ui.data_grid.js","webpack://siforeca/./node_modules/devextreme/esm/ui/data_grid.js"],"sourcesContent":["var $ = require('../internals/export');\n\n// `Number.MAX_SAFE_INTEGER` constant\n// https://tc39.es/ecma262/#sec-number.max_safe_integer\n$({ target: 'Number', stat: true }, {\n  MAX_SAFE_INTEGER: 0x1FFFFFFFFFFFFF\n});\n","/*!\n * devextreme-vue\n * Version: 21.2.6\n * Build date: Tue Mar 01 2022\n *\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-vue\n */\n\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DxLookup = exports.DxLoadPanel = exports.DxLabel = exports.DxKeyboardNavigation = exports.DxItem = exports.DxHide = exports.DxHeaderFilter = exports.DxGroupPanel = exports.DxGroupOperationDescriptions = exports.DxGroupItem = exports.DxGroupingTexts = exports.DxGrouping = exports.DxFrom = exports.DxFormItem = exports.DxFormat = exports.DxForm = exports.DxFilterRow = exports.DxFilterPanelTexts = exports.DxFilterPanel = exports.DxFilterOperationDescriptions = exports.DxFilterBuilderPopup = exports.DxFilterBuilder = exports.DxFieldLookup = exports.DxField = exports.DxExportTexts = exports.DxExport = exports.DxEmailRule = exports.DxEditingTexts = exports.DxEditing = exports.DxDataGridHeaderFilterTexts = exports.DxDataGridHeaderFilter = exports.DxCustomRule = exports.DxCustomOperation = exports.DxCursorOffset = exports.DxCompareRule = exports.DxColumnLookup = exports.DxColumnHeaderFilter = exports.DxColumnFixingTexts = exports.DxColumnFixing = exports.DxColumnChooser = exports.DxColumn = exports.DxCollision = exports.DxColCountByScreen = exports.DxChange = exports.DxButton = exports.DxBoundaryOffset = exports.DxAt = exports.DxAsyncRule = exports.DxAnimation = exports.DxDataGrid = void 0;\nexports.DxValueFormat = exports.DxValidationRule = exports.DxTotalItem = exports.DxToolbarItem = exports.DxToolbar = exports.DxTo = exports.DxTexts = exports.DxSummaryTexts = exports.DxSummary = exports.DxStringLengthRule = exports.DxStateStoring = exports.DxSorting = exports.DxSortByGroupSummaryInfo = exports.DxShow = exports.DxSelection = exports.DxSearchPanel = exports.DxScrolling = exports.DxRowDragging = exports.DxRequiredRule = exports.DxRemoteOperations = exports.DxRangeRule = exports.DxPosition = exports.DxPopup = exports.DxPatternRule = exports.DxPaging = exports.DxPager = exports.DxOperationDescriptions = exports.DxOffset = exports.DxNumericRule = exports.DxMy = exports.DxMasterDetail = void 0;\nvar data_grid_1 = __importDefault(require(\"devextreme/ui/data_grid\"));\nvar index_1 = require(\"./core/index\");\nvar index_2 = require(\"./core/index\");\nvar DxDataGrid = index_1.createComponent({\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        allowColumnReordering: Boolean,\n        allowColumnResizing: Boolean,\n        autoNavigateToFocusedRow: Boolean,\n        cacheEnabled: Boolean,\n        cellHintEnabled: Boolean,\n        columnAutoWidth: Boolean,\n        columnChooser: Object,\n        columnFixing: Object,\n        columnHidingEnabled: Boolean,\n        columnMinWidth: Number,\n        columnResizingMode: String,\n        columns: Array,\n        columnWidth: [Number, String],\n        customizeColumns: Function,\n        customizeExportData: Function,\n        dataRowTemplate: {},\n        dataSource: [Array, Object, String],\n        dateSerializationFormat: String,\n        disabled: Boolean,\n        editing: Object,\n        elementAttr: Object,\n        errorRowEnabled: Boolean,\n        export: Object,\n        filterBuilder: Object,\n        filterBuilderPopup: Object,\n        filterPanel: Object,\n        filterRow: Object,\n        filterSyncEnabled: [Boolean, String],\n        filterValue: [Array, Function, String],\n        focusedColumnIndex: Number,\n        focusedRowEnabled: Boolean,\n        focusedRowIndex: Number,\n        focusedRowKey: {},\n        focusStateEnabled: Boolean,\n        grouping: Object,\n        groupPanel: Object,\n        headerFilter: Object,\n        height: [Function, Number, String],\n        highlightChanges: Boolean,\n        hint: String,\n        hoverStateEnabled: Boolean,\n        keyboardNavigation: Object,\n        keyExpr: [Array, String],\n        loadPanel: Object,\n        masterDetail: Object,\n        noDataText: String,\n        onAdaptiveDetailRowPreparing: Function,\n        onCellClick: Function,\n        onCellDblClick: Function,\n        onCellHoverChanged: Function,\n        onCellPrepared: Function,\n        onContentReady: Function,\n        onContextMenuPreparing: Function,\n        onDataErrorOccurred: Function,\n        onDisposing: Function,\n        onEditCanceled: Function,\n        onEditCanceling: Function,\n        onEditingStart: Function,\n        onEditorPrepared: Function,\n        onEditorPreparing: Function,\n        onExported: Function,\n        onExporting: Function,\n        onFileSaving: Function,\n        onFocusedCellChanged: Function,\n        onFocusedCellChanging: Function,\n        onFocusedRowChanged: Function,\n        onFocusedRowChanging: Function,\n        onInitialized: Function,\n        onInitNewRow: Function,\n        onKeyDown: Function,\n        onOptionChanged: Function,\n        onRowClick: Function,\n        onRowCollapsed: Function,\n        onRowCollapsing: Function,\n        onRowDblClick: Function,\n        onRowExpanded: Function,\n        onRowExpanding: Function,\n        onRowInserted: Function,\n        onRowInserting: Function,\n        onRowPrepared: Function,\n        onRowRemoved: Function,\n        onRowRemoving: Function,\n        onRowUpdated: Function,\n        onRowUpdating: Function,\n        onRowValidating: Function,\n        onSaved: Function,\n        onSaving: Function,\n        onSelectionChanged: Function,\n        onToolbarPreparing: Function,\n        pager: Object,\n        paging: Object,\n        remoteOperations: [Boolean, Object, String],\n        renderAsync: Boolean,\n        repaintChangesOnly: Boolean,\n        rowAlternationEnabled: Boolean,\n        rowDragging: Object,\n        rowTemplate: {},\n        rtlEnabled: Boolean,\n        scrolling: Object,\n        searchPanel: Object,\n        selectedRowKeys: Array,\n        selection: Object,\n        selectionFilter: [Array, Function, String],\n        showBorders: Boolean,\n        showColumnHeaders: Boolean,\n        showColumnLines: Boolean,\n        showRowLines: Boolean,\n        sortByGroupSummaryInfo: Array,\n        sorting: Object,\n        stateStoring: Object,\n        summary: Object,\n        tabIndex: Number,\n        toolbar: Object,\n        twoWayBindingEnabled: Boolean,\n        visible: Boolean,\n        width: [Function, Number, String],\n        wordWrapEnabled: Boolean\n    },\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:allowColumnReordering\": null,\n        \"update:allowColumnResizing\": null,\n        \"update:autoNavigateToFocusedRow\": null,\n        \"update:cacheEnabled\": null,\n        \"update:cellHintEnabled\": null,\n        \"update:columnAutoWidth\": null,\n        \"update:columnChooser\": null,\n        \"update:columnFixing\": null,\n        \"update:columnHidingEnabled\": null,\n        \"update:columnMinWidth\": null,\n        \"update:columnResizingMode\": null,\n        \"update:columns\": null,\n        \"update:columnWidth\": null,\n        \"update:customizeColumns\": null,\n        \"update:customizeExportData\": null,\n        \"update:dataRowTemplate\": null,\n        \"update:dataSource\": null,\n        \"update:dateSerializationFormat\": null,\n        \"update:disabled\": null,\n        \"update:editing\": null,\n        \"update:elementAttr\": null,\n        \"update:errorRowEnabled\": null,\n        \"update:export\": null,\n        \"update:filterBuilder\": null,\n        \"update:filterBuilderPopup\": null,\n        \"update:filterPanel\": null,\n        \"update:filterRow\": null,\n        \"update:filterSyncEnabled\": null,\n        \"update:filterValue\": null,\n        \"update:focusedColumnIndex\": null,\n        \"update:focusedRowEnabled\": null,\n        \"update:focusedRowIndex\": null,\n        \"update:focusedRowKey\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:grouping\": null,\n        \"update:groupPanel\": null,\n        \"update:headerFilter\": null,\n        \"update:height\": null,\n        \"update:highlightChanges\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:keyboardNavigation\": null,\n        \"update:keyExpr\": null,\n        \"update:loadPanel\": null,\n        \"update:masterDetail\": null,\n        \"update:noDataText\": null,\n        \"update:onAdaptiveDetailRowPreparing\": null,\n        \"update:onCellClick\": null,\n        \"update:onCellDblClick\": null,\n        \"update:onCellHoverChanged\": null,\n        \"update:onCellPrepared\": null,\n        \"update:onContentReady\": null,\n        \"update:onContextMenuPreparing\": null,\n        \"update:onDataErrorOccurred\": null,\n        \"update:onDisposing\": null,\n        \"update:onEditCanceled\": null,\n        \"update:onEditCanceling\": null,\n        \"update:onEditingStart\": null,\n        \"update:onEditorPrepared\": null,\n        \"update:onEditorPreparing\": null,\n        \"update:onExported\": null,\n        \"update:onExporting\": null,\n        \"update:onFileSaving\": null,\n        \"update:onFocusedCellChanged\": null,\n        \"update:onFocusedCellChanging\": null,\n        \"update:onFocusedRowChanged\": null,\n        \"update:onFocusedRowChanging\": null,\n        \"update:onInitialized\": null,\n        \"update:onInitNewRow\": null,\n        \"update:onKeyDown\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onRowClick\": null,\n        \"update:onRowCollapsed\": null,\n        \"update:onRowCollapsing\": null,\n        \"update:onRowDblClick\": null,\n        \"update:onRowExpanded\": null,\n        \"update:onRowExpanding\": null,\n        \"update:onRowInserted\": null,\n        \"update:onRowInserting\": null,\n        \"update:onRowPrepared\": null,\n        \"update:onRowRemoved\": null,\n        \"update:onRowRemoving\": null,\n        \"update:onRowUpdated\": null,\n        \"update:onRowUpdating\": null,\n        \"update:onRowValidating\": null,\n        \"update:onSaved\": null,\n        \"update:onSaving\": null,\n        \"update:onSelectionChanged\": null,\n        \"update:onToolbarPreparing\": null,\n        \"update:pager\": null,\n        \"update:paging\": null,\n        \"update:remoteOperations\": null,\n        \"update:renderAsync\": null,\n        \"update:repaintChangesOnly\": null,\n        \"update:rowAlternationEnabled\": null,\n        \"update:rowDragging\": null,\n        \"update:rowTemplate\": null,\n        \"update:rtlEnabled\": null,\n        \"update:scrolling\": null,\n        \"update:searchPanel\": null,\n        \"update:selectedRowKeys\": null,\n        \"update:selection\": null,\n        \"update:selectionFilter\": null,\n        \"update:showBorders\": null,\n        \"update:showColumnHeaders\": null,\n        \"update:showColumnLines\": null,\n        \"update:showRowLines\": null,\n        \"update:sortByGroupSummaryInfo\": null,\n        \"update:sorting\": null,\n        \"update:stateStoring\": null,\n        \"update:summary\": null,\n        \"update:tabIndex\": null,\n        \"update:toolbar\": null,\n        \"update:twoWayBindingEnabled\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n        \"update:wordWrapEnabled\": null,\n    },\n    computed: {\n        instance: function () {\n            return this.$_instance;\n        }\n    },\n    beforeCreate: function () {\n        this.$_WidgetClass = data_grid_1.default;\n        this.$_hasAsyncTemplate = true;\n        this.$_expectedChildren = {\n            column: { isCollectionItem: true, optionName: \"columns\" },\n            columnChooser: { isCollectionItem: false, optionName: \"columnChooser\" },\n            columnFixing: { isCollectionItem: false, optionName: \"columnFixing\" },\n            dataGridHeaderFilter: { isCollectionItem: false, optionName: \"headerFilter\" },\n            editing: { isCollectionItem: false, optionName: \"editing\" },\n            export: { isCollectionItem: false, optionName: \"export\" },\n            filterBuilder: { isCollectionItem: false, optionName: \"filterBuilder\" },\n            filterBuilderPopup: { isCollectionItem: false, optionName: \"filterBuilderPopup\" },\n            filterPanel: { isCollectionItem: false, optionName: \"filterPanel\" },\n            filterRow: { isCollectionItem: false, optionName: \"filterRow\" },\n            grouping: { isCollectionItem: false, optionName: \"grouping\" },\n            groupPanel: { isCollectionItem: false, optionName: \"groupPanel\" },\n            headerFilter: { isCollectionItem: false, optionName: \"headerFilter\" },\n            keyboardNavigation: { isCollectionItem: false, optionName: \"keyboardNavigation\" },\n            loadPanel: { isCollectionItem: false, optionName: \"loadPanel\" },\n            masterDetail: { isCollectionItem: false, optionName: \"masterDetail\" },\n            pager: { isCollectionItem: false, optionName: \"pager\" },\n            paging: { isCollectionItem: false, optionName: \"paging\" },\n            remoteOperations: { isCollectionItem: false, optionName: \"remoteOperations\" },\n            rowDragging: { isCollectionItem: false, optionName: \"rowDragging\" },\n            scrolling: { isCollectionItem: false, optionName: \"scrolling\" },\n            searchPanel: { isCollectionItem: false, optionName: \"searchPanel\" },\n            selection: { isCollectionItem: false, optionName: \"selection\" },\n            sortByGroupSummaryInfo: { isCollectionItem: true, optionName: \"sortByGroupSummaryInfo\" },\n            sorting: { isCollectionItem: false, optionName: \"sorting\" },\n            stateStoring: { isCollectionItem: false, optionName: \"stateStoring\" },\n            summary: { isCollectionItem: false, optionName: \"summary\" },\n            toolbar: { isCollectionItem: false, optionName: \"toolbar\" }\n        };\n    }\n});\nexports.DxDataGrid = DxDataGrid;\nvar DxAnimation = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:hide\": null,\n        \"update:show\": null,\n    },\n    props: {\n        hide: [Object, Number, String],\n        show: [Object, Number, String]\n    }\n});\nexports.DxAnimation = DxAnimation;\nDxAnimation.$_optionName = \"animation\";\nDxAnimation.$_expectedChildren = {\n    hide: { isCollectionItem: false, optionName: \"hide\" },\n    show: { isCollectionItem: false, optionName: \"show\" }\n};\nvar DxAsyncRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:reevaluate\": null,\n        \"update:type\": null,\n        \"update:validationCallback\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        reevaluate: Boolean,\n        type: String,\n        validationCallback: Function\n    }\n});\nexports.DxAsyncRule = DxAsyncRule;\nDxAsyncRule.$_optionName = \"validationRules\";\nDxAsyncRule.$_isCollectionItem = true;\nDxAsyncRule.$_predefinedProps = {\n    type: \"async\"\n};\nvar DxAt = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: String,\n        y: String\n    }\n});\nexports.DxAt = DxAt;\nDxAt.$_optionName = \"at\";\nvar DxBoundaryOffset = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: Number,\n        y: Number\n    }\n});\nexports.DxBoundaryOffset = DxBoundaryOffset;\nDxBoundaryOffset.$_optionName = \"boundaryOffset\";\nvar DxButton = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:cssClass\": null,\n        \"update:disabled\": null,\n        \"update:hint\": null,\n        \"update:icon\": null,\n        \"update:name\": null,\n        \"update:onClick\": null,\n        \"update:template\": null,\n        \"update:text\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        cssClass: String,\n        disabled: [Boolean, Function],\n        hint: String,\n        icon: String,\n        name: String,\n        onClick: Function,\n        template: {},\n        text: String,\n        visible: [Boolean, Function]\n    }\n});\nexports.DxButton = DxButton;\nDxButton.$_optionName = \"buttons\";\nDxButton.$_isCollectionItem = true;\nvar DxChange = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:data\": null,\n        \"update:insertAfterKey\": null,\n        \"update:insertBeforeKey\": null,\n        \"update:type\": null,\n    },\n    props: {\n        data: {},\n        insertAfterKey: {},\n        insertBeforeKey: {},\n        type: String\n    }\n});\nexports.DxChange = DxChange;\nDxChange.$_optionName = \"changes\";\nDxChange.$_isCollectionItem = true;\nvar DxColCountByScreen = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:lg\": null,\n        \"update:md\": null,\n        \"update:sm\": null,\n        \"update:xs\": null,\n    },\n    props: {\n        lg: Number,\n        md: Number,\n        sm: Number,\n        xs: Number\n    }\n});\nexports.DxColCountByScreen = DxColCountByScreen;\nDxColCountByScreen.$_optionName = \"colCountByScreen\";\nvar DxCollision = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: String,\n        y: String\n    }\n});\nexports.DxCollision = DxCollision;\nDxCollision.$_optionName = \"collision\";\nvar DxColumn = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignment\": null,\n        \"update:allowEditing\": null,\n        \"update:allowExporting\": null,\n        \"update:allowFiltering\": null,\n        \"update:allowFixing\": null,\n        \"update:allowGrouping\": null,\n        \"update:allowHeaderFiltering\": null,\n        \"update:allowHiding\": null,\n        \"update:allowReordering\": null,\n        \"update:allowResizing\": null,\n        \"update:allowSearch\": null,\n        \"update:allowSorting\": null,\n        \"update:autoExpandGroup\": null,\n        \"update:buttons\": null,\n        \"update:calculateCellValue\": null,\n        \"update:calculateDisplayValue\": null,\n        \"update:calculateFilterExpression\": null,\n        \"update:calculateGroupValue\": null,\n        \"update:calculateSortValue\": null,\n        \"update:caption\": null,\n        \"update:cellTemplate\": null,\n        \"update:columns\": null,\n        \"update:cssClass\": null,\n        \"update:customizeText\": null,\n        \"update:dataField\": null,\n        \"update:dataType\": null,\n        \"update:editCellTemplate\": null,\n        \"update:editorOptions\": null,\n        \"update:encodeHtml\": null,\n        \"update:falseText\": null,\n        \"update:filterOperations\": null,\n        \"update:filterType\": null,\n        \"update:filterValue\": null,\n        \"update:filterValues\": null,\n        \"update:fixed\": null,\n        \"update:fixedPosition\": null,\n        \"update:format\": null,\n        \"update:formItem\": null,\n        \"update:groupCellTemplate\": null,\n        \"update:grouped\": null,\n        \"update:groupIndex\": null,\n        \"update:headerCellTemplate\": null,\n        \"update:headerFilter\": null,\n        \"update:hidingPriority\": null,\n        \"update:isBand\": null,\n        \"update:lookup\": null,\n        \"update:minWidth\": null,\n        \"update:name\": null,\n        \"update:ownerBand\": null,\n        \"update:renderAsync\": null,\n        \"update:resized\": null,\n        \"update:selectedFilterOperation\": null,\n        \"update:setCellValue\": null,\n        \"update:showEditorAlways\": null,\n        \"update:showInColumnChooser\": null,\n        \"update:showWhenGrouped\": null,\n        \"update:sortIndex\": null,\n        \"update:sortingMethod\": null,\n        \"update:sortOrder\": null,\n        \"update:trueText\": null,\n        \"update:type\": null,\n        \"update:validationRules\": null,\n        \"update:visible\": null,\n        \"update:visibleIndex\": null,\n        \"update:width\": null,\n    },\n    props: {\n        alignment: String,\n        allowEditing: Boolean,\n        allowExporting: Boolean,\n        allowFiltering: Boolean,\n        allowFixing: Boolean,\n        allowGrouping: Boolean,\n        allowHeaderFiltering: Boolean,\n        allowHiding: Boolean,\n        allowReordering: Boolean,\n        allowResizing: Boolean,\n        allowSearch: Boolean,\n        allowSorting: Boolean,\n        autoExpandGroup: Boolean,\n        buttons: Array,\n        calculateCellValue: Function,\n        calculateDisplayValue: [Function, String],\n        calculateFilterExpression: Function,\n        calculateGroupValue: [Function, String],\n        calculateSortValue: [Function, String],\n        caption: String,\n        cellTemplate: {},\n        columns: Array,\n        cssClass: String,\n        customizeText: Function,\n        dataField: String,\n        dataType: String,\n        editCellTemplate: {},\n        editorOptions: {},\n        encodeHtml: Boolean,\n        falseText: String,\n        filterOperations: Array,\n        filterType: String,\n        filterValue: {},\n        filterValues: Array,\n        fixed: Boolean,\n        fixedPosition: String,\n        format: [Object, Function, String],\n        formItem: Object,\n        groupCellTemplate: {},\n        grouped: Boolean,\n        groupIndex: Number,\n        headerCellTemplate: {},\n        headerFilter: Object,\n        hidingPriority: Number,\n        isBand: Boolean,\n        lookup: Object,\n        minWidth: Number,\n        name: String,\n        ownerBand: Number,\n        renderAsync: Boolean,\n        resized: Function,\n        selectedFilterOperation: String,\n        setCellValue: Function,\n        showEditorAlways: Boolean,\n        showInColumnChooser: Boolean,\n        showWhenGrouped: Boolean,\n        sortIndex: Number,\n        sortingMethod: Function,\n        sortOrder: String,\n        trueText: String,\n        type: String,\n        validationRules: Array,\n        visible: Boolean,\n        visibleIndex: Number,\n        width: [Number, String]\n    }\n});\nexports.DxColumn = DxColumn;\nDxColumn.$_optionName = \"columns\";\nDxColumn.$_isCollectionItem = true;\nDxColumn.$_expectedChildren = {\n    AsyncRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    button: { isCollectionItem: true, optionName: \"buttons\" },\n    columnHeaderFilter: { isCollectionItem: false, optionName: \"headerFilter\" },\n    columnLookup: { isCollectionItem: false, optionName: \"lookup\" },\n    CompareRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    CustomRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    EmailRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    format: { isCollectionItem: false, optionName: \"format\" },\n    formItem: { isCollectionItem: false, optionName: \"formItem\" },\n    headerFilter: { isCollectionItem: false, optionName: \"headerFilter\" },\n    lookup: { isCollectionItem: false, optionName: \"lookup\" },\n    NumericRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    PatternRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    RangeRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    RequiredRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    StringLengthRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    validationRule: { isCollectionItem: true, optionName: \"validationRules\" }\n};\nvar DxColumnChooser = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSearch\": null,\n        \"update:emptyPanelText\": null,\n        \"update:enabled\": null,\n        \"update:height\": null,\n        \"update:mode\": null,\n        \"update:searchTimeout\": null,\n        \"update:sortOrder\": null,\n        \"update:title\": null,\n        \"update:width\": null,\n    },\n    props: {\n        allowSearch: Boolean,\n        emptyPanelText: String,\n        enabled: Boolean,\n        height: Number,\n        mode: String,\n        searchTimeout: Number,\n        sortOrder: String,\n        title: String,\n        width: Number\n    }\n});\nexports.DxColumnChooser = DxColumnChooser;\nDxColumnChooser.$_optionName = \"columnChooser\";\nvar DxColumnFixing = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:enabled\": null,\n        \"update:texts\": null,\n    },\n    props: {\n        enabled: Boolean,\n        texts: Object\n    }\n});\nexports.DxColumnFixing = DxColumnFixing;\nDxColumnFixing.$_optionName = \"columnFixing\";\nDxColumnFixing.$_expectedChildren = {\n    columnFixingTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxColumnFixingTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:fix\": null,\n        \"update:leftPosition\": null,\n        \"update:rightPosition\": null,\n        \"update:unfix\": null,\n    },\n    props: {\n        fix: String,\n        leftPosition: String,\n        rightPosition: String,\n        unfix: String\n    }\n});\nexports.DxColumnFixingTexts = DxColumnFixingTexts;\nDxColumnFixingTexts.$_optionName = \"texts\";\nvar DxColumnHeaderFilter = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSearch\": null,\n        \"update:dataSource\": null,\n        \"update:groupInterval\": null,\n        \"update:height\": null,\n        \"update:searchMode\": null,\n        \"update:width\": null,\n    },\n    props: {\n        allowSearch: Boolean,\n        dataSource: [Array, Object, Function],\n        groupInterval: [Number, String],\n        height: Number,\n        searchMode: String,\n        width: Number\n    }\n});\nexports.DxColumnHeaderFilter = DxColumnHeaderFilter;\nDxColumnHeaderFilter.$_optionName = \"headerFilter\";\nvar DxColumnLookup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowClearing\": null,\n        \"update:calculateCellValue\": null,\n        \"update:dataSource\": null,\n        \"update:displayExpr\": null,\n        \"update:valueExpr\": null,\n    },\n    props: {\n        allowClearing: Boolean,\n        calculateCellValue: Function,\n        dataSource: [Array, Object, Function],\n        displayExpr: [Function, String],\n        valueExpr: String\n    }\n});\nexports.DxColumnLookup = DxColumnLookup;\nDxColumnLookup.$_optionName = \"lookup\";\nvar DxCompareRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:comparisonTarget\": null,\n        \"update:comparisonType\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:type\": null,\n    },\n    props: {\n        comparisonTarget: Function,\n        comparisonType: String,\n        ignoreEmptyValue: Boolean,\n        message: String,\n        type: String\n    }\n});\nexports.DxCompareRule = DxCompareRule;\nDxCompareRule.$_optionName = \"validationRules\";\nDxCompareRule.$_isCollectionItem = true;\nDxCompareRule.$_predefinedProps = {\n    type: \"compare\"\n};\nvar DxCursorOffset = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: Number,\n        y: Number\n    }\n});\nexports.DxCursorOffset = DxCursorOffset;\nDxCursorOffset.$_optionName = \"cursorOffset\";\nvar DxCustomOperation = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:calculateFilterExpression\": null,\n        \"update:caption\": null,\n        \"update:customizeText\": null,\n        \"update:dataTypes\": null,\n        \"update:editorTemplate\": null,\n        \"update:hasValue\": null,\n        \"update:icon\": null,\n        \"update:name\": null,\n    },\n    props: {\n        calculateFilterExpression: Function,\n        caption: String,\n        customizeText: Function,\n        dataTypes: Array,\n        editorTemplate: {},\n        hasValue: Boolean,\n        icon: String,\n        name: String\n    }\n});\nexports.DxCustomOperation = DxCustomOperation;\nDxCustomOperation.$_optionName = \"customOperations\";\nDxCustomOperation.$_isCollectionItem = true;\nvar DxCustomRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:reevaluate\": null,\n        \"update:type\": null,\n        \"update:validationCallback\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        reevaluate: Boolean,\n        type: String,\n        validationCallback: Function\n    }\n});\nexports.DxCustomRule = DxCustomRule;\nDxCustomRule.$_optionName = \"validationRules\";\nDxCustomRule.$_isCollectionItem = true;\nDxCustomRule.$_predefinedProps = {\n    type: \"custom\"\n};\nvar DxDataGridHeaderFilter = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSearch\": null,\n        \"update:height\": null,\n        \"update:searchTimeout\": null,\n        \"update:texts\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        allowSearch: Boolean,\n        height: Number,\n        searchTimeout: Number,\n        texts: Object,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxDataGridHeaderFilter = DxDataGridHeaderFilter;\nDxDataGridHeaderFilter.$_optionName = \"headerFilter\";\nDxDataGridHeaderFilter.$_expectedChildren = {\n    dataGridHeaderFilterTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxDataGridHeaderFilterTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:cancel\": null,\n        \"update:emptyValue\": null,\n        \"update:ok\": null,\n    },\n    props: {\n        cancel: String,\n        emptyValue: String,\n        ok: String\n    }\n});\nexports.DxDataGridHeaderFilterTexts = DxDataGridHeaderFilterTexts;\nDxDataGridHeaderFilterTexts.$_optionName = \"texts\";\nvar DxEditing = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowAdding\": null,\n        \"update:allowDeleting\": null,\n        \"update:allowUpdating\": null,\n        \"update:changes\": null,\n        \"update:confirmDelete\": null,\n        \"update:editColumnName\": null,\n        \"update:editRowKey\": null,\n        \"update:form\": null,\n        \"update:mode\": null,\n        \"update:newRowPosition\": null,\n        \"update:popup\": null,\n        \"update:refreshMode\": null,\n        \"update:selectTextOnEditStart\": null,\n        \"update:startEditAction\": null,\n        \"update:texts\": null,\n        \"update:useIcons\": null,\n    },\n    props: {\n        allowAdding: Boolean,\n        allowDeleting: [Boolean, Function],\n        allowUpdating: [Boolean, Function],\n        changes: Array,\n        confirmDelete: Boolean,\n        editColumnName: String,\n        editRowKey: {},\n        form: Object,\n        mode: String,\n        newRowPosition: String,\n        popup: Object,\n        refreshMode: String,\n        selectTextOnEditStart: Boolean,\n        startEditAction: String,\n        texts: {},\n        useIcons: Boolean\n    }\n});\nexports.DxEditing = DxEditing;\nDxEditing.$_optionName = \"editing\";\nDxEditing.$_expectedChildren = {\n    change: { isCollectionItem: true, optionName: \"changes\" },\n    editingTexts: { isCollectionItem: false, optionName: \"texts\" },\n    form: { isCollectionItem: false, optionName: \"form\" },\n    popup: { isCollectionItem: false, optionName: \"popup\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxEditingTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:addRow\": null,\n        \"update:cancelAllChanges\": null,\n        \"update:cancelRowChanges\": null,\n        \"update:confirmDeleteMessage\": null,\n        \"update:confirmDeleteTitle\": null,\n        \"update:deleteRow\": null,\n        \"update:editRow\": null,\n        \"update:saveAllChanges\": null,\n        \"update:saveRowChanges\": null,\n        \"update:undeleteRow\": null,\n        \"update:validationCancelChanges\": null,\n    },\n    props: {\n        addRow: String,\n        cancelAllChanges: String,\n        cancelRowChanges: String,\n        confirmDeleteMessage: String,\n        confirmDeleteTitle: String,\n        deleteRow: String,\n        editRow: String,\n        saveAllChanges: String,\n        saveRowChanges: String,\n        undeleteRow: String,\n        validationCancelChanges: String\n    }\n});\nexports.DxEditingTexts = DxEditingTexts;\nDxEditingTexts.$_optionName = \"texts\";\nvar DxEmailRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        type: String\n    }\n});\nexports.DxEmailRule = DxEmailRule;\nDxEmailRule.$_optionName = \"validationRules\";\nDxEmailRule.$_isCollectionItem = true;\nDxEmailRule.$_predefinedProps = {\n    type: \"email\"\n};\nvar DxExport = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowExportSelectedData\": null,\n        \"update:customizeExcelCell\": null,\n        \"update:enabled\": null,\n        \"update:excelFilterEnabled\": null,\n        \"update:excelWrapTextEnabled\": null,\n        \"update:fileName\": null,\n        \"update:ignoreExcelErrors\": null,\n        \"update:proxyUrl\": null,\n        \"update:texts\": null,\n    },\n    props: {\n        allowExportSelectedData: Boolean,\n        customizeExcelCell: Function,\n        enabled: Boolean,\n        excelFilterEnabled: Boolean,\n        excelWrapTextEnabled: Boolean,\n        fileName: String,\n        ignoreExcelErrors: Boolean,\n        proxyUrl: String,\n        texts: Object\n    }\n});\nexports.DxExport = DxExport;\nDxExport.$_optionName = \"export\";\nDxExport.$_expectedChildren = {\n    exportTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxExportTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:exportAll\": null,\n        \"update:exportSelectedRows\": null,\n        \"update:exportTo\": null,\n    },\n    props: {\n        exportAll: String,\n        exportSelectedRows: String,\n        exportTo: String\n    }\n});\nexports.DxExportTexts = DxExportTexts;\nDxExportTexts.$_optionName = \"texts\";\nvar DxField = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:calculateFilterExpression\": null,\n        \"update:caption\": null,\n        \"update:customizeText\": null,\n        \"update:dataField\": null,\n        \"update:dataType\": null,\n        \"update:defaultFilterOperation\": null,\n        \"update:editorOptions\": null,\n        \"update:editorTemplate\": null,\n        \"update:falseText\": null,\n        \"update:filterOperations\": null,\n        \"update:format\": null,\n        \"update:lookup\": null,\n        \"update:name\": null,\n        \"update:trueText\": null,\n    },\n    props: {\n        calculateFilterExpression: Function,\n        caption: String,\n        customizeText: Function,\n        dataField: String,\n        dataType: String,\n        defaultFilterOperation: String,\n        editorOptions: {},\n        editorTemplate: {},\n        falseText: String,\n        filterOperations: Array,\n        format: [Object, Function, String],\n        lookup: Object,\n        name: String,\n        trueText: String\n    }\n});\nexports.DxField = DxField;\nDxField.$_optionName = \"fields\";\nDxField.$_isCollectionItem = true;\nDxField.$_expectedChildren = {\n    fieldLookup: { isCollectionItem: false, optionName: \"lookup\" },\n    format: { isCollectionItem: false, optionName: \"format\" },\n    lookup: { isCollectionItem: false, optionName: \"lookup\" }\n};\nvar DxFieldLookup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowClearing\": null,\n        \"update:dataSource\": null,\n        \"update:displayExpr\": null,\n        \"update:valueExpr\": null,\n    },\n    props: {\n        allowClearing: Boolean,\n        dataSource: [Array, Object],\n        displayExpr: [Function, String],\n        valueExpr: [Function, String]\n    }\n});\nexports.DxFieldLookup = DxFieldLookup;\nDxFieldLookup.$_optionName = \"lookup\";\nvar DxFilterBuilder = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:allowHierarchicalFields\": null,\n        \"update:bindingOptions\": null,\n        \"update:customOperations\": null,\n        \"update:disabled\": null,\n        \"update:elementAttr\": null,\n        \"update:fields\": null,\n        \"update:filterOperationDescriptions\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:groupOperationDescriptions\": null,\n        \"update:groupOperations\": null,\n        \"update:height\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:maxGroupLevel\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onEditorPrepared\": null,\n        \"update:onEditorPreparing\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onValueChanged\": null,\n        \"update:rtlEnabled\": null,\n        \"update:tabIndex\": null,\n        \"update:value\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        allowHierarchicalFields: Boolean,\n        bindingOptions: Object,\n        customOperations: Array,\n        disabled: Boolean,\n        elementAttr: Object,\n        fields: Array,\n        filterOperationDescriptions: Object,\n        focusStateEnabled: Boolean,\n        groupOperationDescriptions: Object,\n        groupOperations: Array,\n        height: [Function, Number, String],\n        hint: String,\n        hoverStateEnabled: Boolean,\n        maxGroupLevel: Number,\n        onContentReady: Function,\n        onDisposing: Function,\n        onEditorPrepared: Function,\n        onEditorPreparing: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        onValueChanged: Function,\n        rtlEnabled: Boolean,\n        tabIndex: Number,\n        value: [Array, Function, String],\n        visible: Boolean,\n        width: [Function, Number, String]\n    }\n});\nexports.DxFilterBuilder = DxFilterBuilder;\nDxFilterBuilder.$_optionName = \"filterBuilder\";\nDxFilterBuilder.$_expectedChildren = {\n    customOperation: { isCollectionItem: true, optionName: \"customOperations\" },\n    field: { isCollectionItem: true, optionName: \"fields\" },\n    filterOperationDescriptions: { isCollectionItem: false, optionName: \"filterOperationDescriptions\" },\n    groupOperationDescriptions: { isCollectionItem: false, optionName: \"groupOperationDescriptions\" }\n};\nvar DxFilterBuilderPopup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:animation\": null,\n        \"update:bindingOptions\": null,\n        \"update:closeOnOutsideClick\": null,\n        \"update:container\": null,\n        \"update:contentTemplate\": null,\n        \"update:copyRootClassesToWrapper\": null,\n        \"update:deferRendering\": null,\n        \"update:disabled\": null,\n        \"update:dragAndResizeArea\": null,\n        \"update:dragEnabled\": null,\n        \"update:dragOutsideBoundary\": null,\n        \"update:elementAttr\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:fullScreen\": null,\n        \"update:height\": null,\n        \"update:hideOnParentScroll\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:maxHeight\": null,\n        \"update:maxWidth\": null,\n        \"update:minHeight\": null,\n        \"update:minWidth\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onHidden\": null,\n        \"update:onHiding\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onResize\": null,\n        \"update:onResizeEnd\": null,\n        \"update:onResizeStart\": null,\n        \"update:onShowing\": null,\n        \"update:onShown\": null,\n        \"update:onTitleRendered\": null,\n        \"update:position\": null,\n        \"update:resizeEnabled\": null,\n        \"update:restorePosition\": null,\n        \"update:rtlEnabled\": null,\n        \"update:shading\": null,\n        \"update:shadingColor\": null,\n        \"update:showCloseButton\": null,\n        \"update:showTitle\": null,\n        \"update:tabIndex\": null,\n        \"update:title\": null,\n        \"update:titleTemplate\": null,\n        \"update:toolbarItems\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n        \"update:wrapperAttr\": null,\n    },\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        animation: Object,\n        bindingOptions: Object,\n        closeOnOutsideClick: [Boolean, Function],\n        container: {},\n        contentTemplate: {},\n        copyRootClassesToWrapper: Boolean,\n        deferRendering: Boolean,\n        disabled: Boolean,\n        dragAndResizeArea: {},\n        dragEnabled: Boolean,\n        dragOutsideBoundary: Boolean,\n        elementAttr: {},\n        focusStateEnabled: Boolean,\n        fullScreen: Boolean,\n        height: [Function, Number, String],\n        hideOnParentScroll: Boolean,\n        hint: String,\n        hoverStateEnabled: Boolean,\n        maxHeight: [Function, Number, String],\n        maxWidth: [Function, Number, String],\n        minHeight: [Function, Number, String],\n        minWidth: [Function, Number, String],\n        onContentReady: Function,\n        onDisposing: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onHidden: Function,\n        onHiding: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        onResize: Function,\n        onResizeEnd: Function,\n        onResizeStart: Function,\n        onShowing: Function,\n        onShown: Function,\n        onTitleRendered: Function,\n        position: [Function, Object, String],\n        resizeEnabled: Boolean,\n        restorePosition: Boolean,\n        rtlEnabled: Boolean,\n        shading: Boolean,\n        shadingColor: String,\n        showCloseButton: Boolean,\n        showTitle: Boolean,\n        tabIndex: Number,\n        title: String,\n        titleTemplate: {},\n        toolbarItems: Array,\n        visible: Boolean,\n        width: [Function, Number, String],\n        wrapperAttr: {}\n    }\n});\nexports.DxFilterBuilderPopup = DxFilterBuilderPopup;\nDxFilterBuilderPopup.$_optionName = \"filterBuilderPopup\";\nvar DxFilterOperationDescriptions = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:between\": null,\n        \"update:contains\": null,\n        \"update:endsWith\": null,\n        \"update:equal\": null,\n        \"update:greaterThan\": null,\n        \"update:greaterThanOrEqual\": null,\n        \"update:isBlank\": null,\n        \"update:isNotBlank\": null,\n        \"update:lessThan\": null,\n        \"update:lessThanOrEqual\": null,\n        \"update:notContains\": null,\n        \"update:notEqual\": null,\n        \"update:startsWith\": null,\n    },\n    props: {\n        between: String,\n        contains: String,\n        endsWith: String,\n        equal: String,\n        greaterThan: String,\n        greaterThanOrEqual: String,\n        isBlank: String,\n        isNotBlank: String,\n        lessThan: String,\n        lessThanOrEqual: String,\n        notContains: String,\n        notEqual: String,\n        startsWith: String\n    }\n});\nexports.DxFilterOperationDescriptions = DxFilterOperationDescriptions;\nDxFilterOperationDescriptions.$_optionName = \"filterOperationDescriptions\";\nvar DxFilterPanel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:customizeText\": null,\n        \"update:filterEnabled\": null,\n        \"update:texts\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        customizeText: Function,\n        filterEnabled: Boolean,\n        texts: Object,\n        visible: Boolean\n    }\n});\nexports.DxFilterPanel = DxFilterPanel;\nDxFilterPanel.$_optionName = \"filterPanel\";\nDxFilterPanel.$_expectedChildren = {\n    filterPanelTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxFilterPanelTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:clearFilter\": null,\n        \"update:createFilter\": null,\n        \"update:filterEnabledHint\": null,\n    },\n    props: {\n        clearFilter: String,\n        createFilter: String,\n        filterEnabledHint: String\n    }\n});\nexports.DxFilterPanelTexts = DxFilterPanelTexts;\nDxFilterPanelTexts.$_optionName = \"texts\";\nvar DxFilterRow = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:applyFilter\": null,\n        \"update:applyFilterText\": null,\n        \"update:betweenEndText\": null,\n        \"update:betweenStartText\": null,\n        \"update:operationDescriptions\": null,\n        \"update:resetOperationText\": null,\n        \"update:showAllText\": null,\n        \"update:showOperationChooser\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        applyFilter: String,\n        applyFilterText: String,\n        betweenEndText: String,\n        betweenStartText: String,\n        operationDescriptions: Object,\n        resetOperationText: String,\n        showAllText: String,\n        showOperationChooser: Boolean,\n        visible: Boolean\n    }\n});\nexports.DxFilterRow = DxFilterRow;\nDxFilterRow.$_optionName = \"filterRow\";\nDxFilterRow.$_expectedChildren = {\n    operationDescriptions: { isCollectionItem: false, optionName: \"operationDescriptions\" }\n};\nvar DxForm = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:alignItemLabels\": null,\n        \"update:alignItemLabelsInAllGroups\": null,\n        \"update:bindingOptions\": null,\n        \"update:colCount\": null,\n        \"update:colCountByScreen\": null,\n        \"update:customizeItem\": null,\n        \"update:disabled\": null,\n        \"update:elementAttr\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:formData\": null,\n        \"update:height\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:items\": null,\n        \"update:labelLocation\": null,\n        \"update:labelMode\": null,\n        \"update:minColWidth\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onEditorEnterKey\": null,\n        \"update:onFieldDataChanged\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:optionalMark\": null,\n        \"update:readOnly\": null,\n        \"update:requiredMark\": null,\n        \"update:requiredMessage\": null,\n        \"update:rtlEnabled\": null,\n        \"update:screenByWidth\": null,\n        \"update:scrollingEnabled\": null,\n        \"update:showColonAfterLabel\": null,\n        \"update:showOptionalMark\": null,\n        \"update:showRequiredMark\": null,\n        \"update:showValidationSummary\": null,\n        \"update:tabIndex\": null,\n        \"update:validationGroup\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        alignItemLabels: Boolean,\n        alignItemLabelsInAllGroups: Boolean,\n        bindingOptions: Object,\n        colCount: [Number, String],\n        colCountByScreen: Object,\n        customizeItem: Function,\n        disabled: Boolean,\n        elementAttr: Object,\n        focusStateEnabled: Boolean,\n        formData: {},\n        height: [Function, Number, String],\n        hint: String,\n        hoverStateEnabled: Boolean,\n        items: Array,\n        labelLocation: String,\n        labelMode: String,\n        minColWidth: Number,\n        onContentReady: Function,\n        onDisposing: Function,\n        onEditorEnterKey: Function,\n        onFieldDataChanged: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        optionalMark: String,\n        readOnly: Boolean,\n        requiredMark: String,\n        requiredMessage: String,\n        rtlEnabled: Boolean,\n        screenByWidth: Function,\n        scrollingEnabled: Boolean,\n        showColonAfterLabel: Boolean,\n        showOptionalMark: Boolean,\n        showRequiredMark: Boolean,\n        showValidationSummary: Boolean,\n        tabIndex: Number,\n        validationGroup: String,\n        visible: Boolean,\n        width: [Function, Number, String]\n    }\n});\nexports.DxForm = DxForm;\nDxForm.$_optionName = \"form\";\nDxForm.$_expectedChildren = {\n    colCountByScreen: { isCollectionItem: false, optionName: \"colCountByScreen\" }\n};\nvar DxFormat = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:currency\": null,\n        \"update:formatter\": null,\n        \"update:parser\": null,\n        \"update:precision\": null,\n        \"update:type\": null,\n    },\n    props: {\n        currency: String,\n        formatter: Function,\n        parser: Function,\n        precision: Number,\n        type: String\n    }\n});\nexports.DxFormat = DxFormat;\nDxFormat.$_optionName = \"format\";\nvar DxFormItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:colSpan\": null,\n        \"update:cssClass\": null,\n        \"update:dataField\": null,\n        \"update:editorOptions\": null,\n        \"update:editorType\": null,\n        \"update:helpText\": null,\n        \"update:isRequired\": null,\n        \"update:itemType\": null,\n        \"update:label\": null,\n        \"update:name\": null,\n        \"update:template\": null,\n        \"update:validationRules\": null,\n        \"update:visible\": null,\n        \"update:visibleIndex\": null,\n    },\n    props: {\n        colSpan: Number,\n        cssClass: String,\n        dataField: String,\n        editorOptions: {},\n        editorType: String,\n        helpText: String,\n        isRequired: Boolean,\n        itemType: String,\n        label: Object,\n        name: String,\n        template: {},\n        validationRules: Array,\n        visible: Boolean,\n        visibleIndex: Number\n    }\n});\nexports.DxFormItem = DxFormItem;\nDxFormItem.$_optionName = \"formItem\";\nDxFormItem.$_expectedChildren = {\n    AsyncRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    CompareRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    CustomRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    EmailRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    label: { isCollectionItem: false, optionName: \"label\" },\n    NumericRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    PatternRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    RangeRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    RequiredRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    StringLengthRule: { isCollectionItem: true, optionName: \"validationRules\" },\n    validationRule: { isCollectionItem: true, optionName: \"validationRules\" }\n};\nvar DxFrom = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:left\": null,\n        \"update:opacity\": null,\n        \"update:position\": null,\n        \"update:scale\": null,\n        \"update:top\": null,\n    },\n    props: {\n        left: Number,\n        opacity: Number,\n        position: Object,\n        scale: Number,\n        top: Number\n    }\n});\nexports.DxFrom = DxFrom;\nDxFrom.$_optionName = \"from\";\nDxFrom.$_expectedChildren = {\n    position: { isCollectionItem: false, optionName: \"position\" }\n};\nvar DxGrouping = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowCollapsing\": null,\n        \"update:autoExpandAll\": null,\n        \"update:contextMenuEnabled\": null,\n        \"update:expandMode\": null,\n        \"update:texts\": null,\n    },\n    props: {\n        allowCollapsing: Boolean,\n        autoExpandAll: Boolean,\n        contextMenuEnabled: Boolean,\n        expandMode: String,\n        texts: Object\n    }\n});\nexports.DxGrouping = DxGrouping;\nDxGrouping.$_optionName = \"grouping\";\nDxGrouping.$_expectedChildren = {\n    groupingTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" }\n};\nvar DxGroupingTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:groupByThisColumn\": null,\n        \"update:groupContinuedMessage\": null,\n        \"update:groupContinuesMessage\": null,\n        \"update:ungroup\": null,\n        \"update:ungroupAll\": null,\n    },\n    props: {\n        groupByThisColumn: String,\n        groupContinuedMessage: String,\n        groupContinuesMessage: String,\n        ungroup: String,\n        ungroupAll: String\n    }\n});\nexports.DxGroupingTexts = DxGroupingTexts;\nDxGroupingTexts.$_optionName = \"texts\";\nvar DxGroupItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignByColumn\": null,\n        \"update:column\": null,\n        \"update:customizeText\": null,\n        \"update:displayFormat\": null,\n        \"update:name\": null,\n        \"update:showInColumn\": null,\n        \"update:showInGroupFooter\": null,\n        \"update:skipEmptyValues\": null,\n        \"update:summaryType\": null,\n        \"update:valueFormat\": null,\n    },\n    props: {\n        alignByColumn: Boolean,\n        column: String,\n        customizeText: Function,\n        displayFormat: String,\n        name: String,\n        showInColumn: String,\n        showInGroupFooter: Boolean,\n        skipEmptyValues: Boolean,\n        summaryType: String,\n        valueFormat: [Object, Function, String]\n    }\n});\nexports.DxGroupItem = DxGroupItem;\nDxGroupItem.$_optionName = \"groupItems\";\nDxGroupItem.$_isCollectionItem = true;\nDxGroupItem.$_expectedChildren = {\n    valueFormat: { isCollectionItem: false, optionName: \"valueFormat\" }\n};\nvar DxGroupOperationDescriptions = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:and\": null,\n        \"update:notAnd\": null,\n        \"update:notOr\": null,\n        \"update:or\": null,\n    },\n    props: {\n        and: String,\n        notAnd: String,\n        notOr: String,\n        or: String\n    }\n});\nexports.DxGroupOperationDescriptions = DxGroupOperationDescriptions;\nDxGroupOperationDescriptions.$_optionName = \"groupOperationDescriptions\";\nvar DxGroupPanel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowColumnDragging\": null,\n        \"update:emptyPanelText\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        allowColumnDragging: Boolean,\n        emptyPanelText: String,\n        visible: [Boolean, String]\n    }\n});\nexports.DxGroupPanel = DxGroupPanel;\nDxGroupPanel.$_optionName = \"groupPanel\";\nvar DxHeaderFilter = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSearch\": null,\n        \"update:dataSource\": null,\n        \"update:groupInterval\": null,\n        \"update:height\": null,\n        \"update:searchMode\": null,\n        \"update:searchTimeout\": null,\n        \"update:texts\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        allowSearch: Boolean,\n        dataSource: [Array, Object, Function],\n        groupInterval: [Number, String],\n        height: Number,\n        searchMode: String,\n        searchTimeout: Number,\n        texts: Object,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxHeaderFilter = DxHeaderFilter;\nDxHeaderFilter.$_optionName = \"headerFilter\";\nvar DxHide = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:complete\": null,\n        \"update:delay\": null,\n        \"update:direction\": null,\n        \"update:duration\": null,\n        \"update:easing\": null,\n        \"update:from\": null,\n        \"update:staggerDelay\": null,\n        \"update:start\": null,\n        \"update:to\": null,\n        \"update:type\": null,\n    },\n    props: {\n        complete: Function,\n        delay: Number,\n        direction: String,\n        duration: Number,\n        easing: String,\n        from: Object,\n        staggerDelay: Number,\n        start: Function,\n        to: Object,\n        type: String\n    }\n});\nexports.DxHide = DxHide;\nDxHide.$_optionName = \"hide\";\nDxHide.$_expectedChildren = {\n    from: { isCollectionItem: false, optionName: \"from\" },\n    to: { isCollectionItem: false, optionName: \"to\" }\n};\nvar DxItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:cssClass\": null,\n        \"update:disabled\": null,\n        \"update:html\": null,\n        \"update:locateInMenu\": null,\n        \"update:location\": null,\n        \"update:menuItemTemplate\": null,\n        \"update:name\": null,\n        \"update:options\": null,\n        \"update:showText\": null,\n        \"update:template\": null,\n        \"update:text\": null,\n        \"update:visible\": null,\n        \"update:widget\": null,\n    },\n    props: {\n        cssClass: String,\n        disabled: Boolean,\n        html: String,\n        locateInMenu: String,\n        location: String,\n        menuItemTemplate: {},\n        name: String,\n        options: {},\n        showText: String,\n        template: {},\n        text: String,\n        visible: Boolean,\n        widget: String\n    }\n});\nexports.DxItem = DxItem;\nDxItem.$_optionName = \"items\";\nDxItem.$_isCollectionItem = true;\nvar DxKeyboardNavigation = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:editOnKeyPress\": null,\n        \"update:enabled\": null,\n        \"update:enterKeyAction\": null,\n        \"update:enterKeyDirection\": null,\n    },\n    props: {\n        editOnKeyPress: Boolean,\n        enabled: Boolean,\n        enterKeyAction: String,\n        enterKeyDirection: String\n    }\n});\nexports.DxKeyboardNavigation = DxKeyboardNavigation;\nDxKeyboardNavigation.$_optionName = \"keyboardNavigation\";\nvar DxLabel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignment\": null,\n        \"update:location\": null,\n        \"update:showColon\": null,\n        \"update:text\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        alignment: String,\n        location: String,\n        showColon: Boolean,\n        text: String,\n        visible: Boolean\n    }\n});\nexports.DxLabel = DxLabel;\nDxLabel.$_optionName = \"label\";\nvar DxLoadPanel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:enabled\": null,\n        \"update:height\": null,\n        \"update:indicatorSrc\": null,\n        \"update:shading\": null,\n        \"update:shadingColor\": null,\n        \"update:showIndicator\": null,\n        \"update:showPane\": null,\n        \"update:text\": null,\n        \"update:width\": null,\n    },\n    props: {\n        enabled: [Boolean, String],\n        height: Number,\n        indicatorSrc: String,\n        shading: Boolean,\n        shadingColor: String,\n        showIndicator: Boolean,\n        showPane: Boolean,\n        text: String,\n        width: Number\n    }\n});\nexports.DxLoadPanel = DxLoadPanel;\nDxLoadPanel.$_optionName = \"loadPanel\";\nvar DxLookup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowClearing\": null,\n        \"update:calculateCellValue\": null,\n        \"update:dataSource\": null,\n        \"update:displayExpr\": null,\n        \"update:valueExpr\": null,\n    },\n    props: {\n        allowClearing: Boolean,\n        calculateCellValue: Function,\n        dataSource: [Array, Object, Function],\n        displayExpr: [Function, String],\n        valueExpr: String\n    }\n});\nexports.DxLookup = DxLookup;\nDxLookup.$_optionName = \"lookup\";\nvar DxMasterDetail = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:autoExpandAll\": null,\n        \"update:enabled\": null,\n        \"update:template\": null,\n    },\n    props: {\n        autoExpandAll: Boolean,\n        enabled: Boolean,\n        template: {}\n    }\n});\nexports.DxMasterDetail = DxMasterDetail;\nDxMasterDetail.$_optionName = \"masterDetail\";\nvar DxMy = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: String,\n        y: String\n    }\n});\nexports.DxMy = DxMy;\nDxMy.$_optionName = \"my\";\nvar DxNumericRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        type: String\n    }\n});\nexports.DxNumericRule = DxNumericRule;\nDxNumericRule.$_optionName = \"validationRules\";\nDxNumericRule.$_isCollectionItem = true;\nDxNumericRule.$_predefinedProps = {\n    type: \"numeric\"\n};\nvar DxOffset = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:x\": null,\n        \"update:y\": null,\n    },\n    props: {\n        x: Number,\n        y: Number\n    }\n});\nexports.DxOffset = DxOffset;\nDxOffset.$_optionName = \"offset\";\nvar DxOperationDescriptions = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:between\": null,\n        \"update:contains\": null,\n        \"update:endsWith\": null,\n        \"update:equal\": null,\n        \"update:greaterThan\": null,\n        \"update:greaterThanOrEqual\": null,\n        \"update:lessThan\": null,\n        \"update:lessThanOrEqual\": null,\n        \"update:notContains\": null,\n        \"update:notEqual\": null,\n        \"update:startsWith\": null,\n    },\n    props: {\n        between: String,\n        contains: String,\n        endsWith: String,\n        equal: String,\n        greaterThan: String,\n        greaterThanOrEqual: String,\n        lessThan: String,\n        lessThanOrEqual: String,\n        notContains: String,\n        notEqual: String,\n        startsWith: String\n    }\n});\nexports.DxOperationDescriptions = DxOperationDescriptions;\nDxOperationDescriptions.$_optionName = \"operationDescriptions\";\nvar DxPager = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowedPageSizes\": null,\n        \"update:displayMode\": null,\n        \"update:infoText\": null,\n        \"update:showInfo\": null,\n        \"update:showNavigationButtons\": null,\n        \"update:showPageSizeSelector\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        allowedPageSizes: [Array, String],\n        displayMode: String,\n        infoText: String,\n        showInfo: Boolean,\n        showNavigationButtons: Boolean,\n        showPageSizeSelector: Boolean,\n        visible: [Boolean, String]\n    }\n});\nexports.DxPager = DxPager;\nDxPager.$_optionName = \"pager\";\nvar DxPaging = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:enabled\": null,\n        \"update:pageIndex\": null,\n        \"update:pageSize\": null,\n    },\n    props: {\n        enabled: Boolean,\n        pageIndex: Number,\n        pageSize: Number\n    }\n});\nexports.DxPaging = DxPaging;\nDxPaging.$_optionName = \"paging\";\nvar DxPatternRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:message\": null,\n        \"update:pattern\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        message: String,\n        pattern: {},\n        type: String\n    }\n});\nexports.DxPatternRule = DxPatternRule;\nDxPatternRule.$_optionName = \"validationRules\";\nDxPatternRule.$_isCollectionItem = true;\nDxPatternRule.$_predefinedProps = {\n    type: \"pattern\"\n};\nvar DxPopup = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:accessKey\": null,\n        \"update:activeStateEnabled\": null,\n        \"update:animation\": null,\n        \"update:bindingOptions\": null,\n        \"update:closeOnOutsideClick\": null,\n        \"update:container\": null,\n        \"update:contentTemplate\": null,\n        \"update:copyRootClassesToWrapper\": null,\n        \"update:deferRendering\": null,\n        \"update:disabled\": null,\n        \"update:dragAndResizeArea\": null,\n        \"update:dragEnabled\": null,\n        \"update:dragOutsideBoundary\": null,\n        \"update:elementAttr\": null,\n        \"update:focusStateEnabled\": null,\n        \"update:fullScreen\": null,\n        \"update:height\": null,\n        \"update:hideOnParentScroll\": null,\n        \"update:hint\": null,\n        \"update:hoverStateEnabled\": null,\n        \"update:maxHeight\": null,\n        \"update:maxWidth\": null,\n        \"update:minHeight\": null,\n        \"update:minWidth\": null,\n        \"update:onContentReady\": null,\n        \"update:onDisposing\": null,\n        \"update:onFocusIn\": null,\n        \"update:onFocusOut\": null,\n        \"update:onHidden\": null,\n        \"update:onHiding\": null,\n        \"update:onInitialized\": null,\n        \"update:onOptionChanged\": null,\n        \"update:onResize\": null,\n        \"update:onResizeEnd\": null,\n        \"update:onResizeStart\": null,\n        \"update:onShowing\": null,\n        \"update:onShown\": null,\n        \"update:onTitleRendered\": null,\n        \"update:position\": null,\n        \"update:resizeEnabled\": null,\n        \"update:restorePosition\": null,\n        \"update:rtlEnabled\": null,\n        \"update:shading\": null,\n        \"update:shadingColor\": null,\n        \"update:showCloseButton\": null,\n        \"update:showTitle\": null,\n        \"update:tabIndex\": null,\n        \"update:title\": null,\n        \"update:titleTemplate\": null,\n        \"update:toolbarItems\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n        \"update:wrapperAttr\": null,\n    },\n    props: {\n        accessKey: String,\n        activeStateEnabled: Boolean,\n        animation: Object,\n        bindingOptions: Object,\n        closeOnOutsideClick: [Boolean, Function],\n        container: {},\n        contentTemplate: {},\n        copyRootClassesToWrapper: Boolean,\n        deferRendering: Boolean,\n        disabled: Boolean,\n        dragAndResizeArea: {},\n        dragEnabled: Boolean,\n        dragOutsideBoundary: Boolean,\n        elementAttr: {},\n        focusStateEnabled: Boolean,\n        fullScreen: Boolean,\n        height: [Function, Number, String],\n        hideOnParentScroll: Boolean,\n        hint: String,\n        hoverStateEnabled: Boolean,\n        maxHeight: [Function, Number, String],\n        maxWidth: [Function, Number, String],\n        minHeight: [Function, Number, String],\n        minWidth: [Function, Number, String],\n        onContentReady: Function,\n        onDisposing: Function,\n        onFocusIn: Function,\n        onFocusOut: Function,\n        onHidden: Function,\n        onHiding: Function,\n        onInitialized: Function,\n        onOptionChanged: Function,\n        onResize: Function,\n        onResizeEnd: Function,\n        onResizeStart: Function,\n        onShowing: Function,\n        onShown: Function,\n        onTitleRendered: Function,\n        position: [Function, Object, String],\n        resizeEnabled: Boolean,\n        restorePosition: Boolean,\n        rtlEnabled: Boolean,\n        shading: Boolean,\n        shadingColor: String,\n        showCloseButton: Boolean,\n        showTitle: Boolean,\n        tabIndex: Number,\n        title: String,\n        titleTemplate: {},\n        toolbarItems: Array,\n        visible: Boolean,\n        width: [Function, Number, String],\n        wrapperAttr: {}\n    }\n});\nexports.DxPopup = DxPopup;\nDxPopup.$_optionName = \"popup\";\nDxPopup.$_expectedChildren = {\n    animation: { isCollectionItem: false, optionName: \"animation\" },\n    position: { isCollectionItem: false, optionName: \"position\" },\n    toolbarItem: { isCollectionItem: true, optionName: \"toolbarItems\" }\n};\nvar DxPosition = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:at\": null,\n        \"update:boundary\": null,\n        \"update:boundaryOffset\": null,\n        \"update:collision\": null,\n        \"update:my\": null,\n        \"update:of\": null,\n        \"update:offset\": null,\n    },\n    props: {\n        at: [Object, String],\n        boundary: {},\n        boundaryOffset: [Object, String],\n        collision: [Object, String],\n        my: [Object, String],\n        of: {},\n        offset: [Object, String]\n    }\n});\nexports.DxPosition = DxPosition;\nDxPosition.$_optionName = \"position\";\nvar DxRangeRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:max\": null,\n        \"update:message\": null,\n        \"update:min\": null,\n        \"update:reevaluate\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        max: {},\n        message: String,\n        min: {},\n        reevaluate: Boolean,\n        type: String\n    }\n});\nexports.DxRangeRule = DxRangeRule;\nDxRangeRule.$_optionName = \"validationRules\";\nDxRangeRule.$_isCollectionItem = true;\nDxRangeRule.$_predefinedProps = {\n    type: \"range\"\n};\nvar DxRemoteOperations = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:filtering\": null,\n        \"update:grouping\": null,\n        \"update:groupPaging\": null,\n        \"update:paging\": null,\n        \"update:sorting\": null,\n        \"update:summary\": null,\n    },\n    props: {\n        filtering: Boolean,\n        grouping: Boolean,\n        groupPaging: Boolean,\n        paging: Boolean,\n        sorting: Boolean,\n        summary: Boolean\n    }\n});\nexports.DxRemoteOperations = DxRemoteOperations;\nDxRemoteOperations.$_optionName = \"remoteOperations\";\nvar DxRequiredRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:message\": null,\n        \"update:trim\": null,\n        \"update:type\": null,\n    },\n    props: {\n        message: String,\n        trim: Boolean,\n        type: String\n    }\n});\nexports.DxRequiredRule = DxRequiredRule;\nDxRequiredRule.$_optionName = \"validationRules\";\nDxRequiredRule.$_isCollectionItem = true;\nDxRequiredRule.$_predefinedProps = {\n    type: \"required\"\n};\nvar DxRowDragging = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowDropInsideItem\": null,\n        \"update:allowReordering\": null,\n        \"update:autoScroll\": null,\n        \"update:boundary\": null,\n        \"update:container\": null,\n        \"update:cursorOffset\": null,\n        \"update:data\": null,\n        \"update:dragDirection\": null,\n        \"update:dragTemplate\": null,\n        \"update:dropFeedbackMode\": null,\n        \"update:filter\": null,\n        \"update:group\": null,\n        \"update:handle\": null,\n        \"update:onAdd\": null,\n        \"update:onDragChange\": null,\n        \"update:onDragEnd\": null,\n        \"update:onDragMove\": null,\n        \"update:onDragStart\": null,\n        \"update:onRemove\": null,\n        \"update:onReorder\": null,\n        \"update:scrollSensitivity\": null,\n        \"update:scrollSpeed\": null,\n        \"update:showDragIcons\": null,\n    },\n    props: {\n        allowDropInsideItem: Boolean,\n        allowReordering: Boolean,\n        autoScroll: Boolean,\n        boundary: {},\n        container: {},\n        cursorOffset: [Object, String],\n        data: {},\n        dragDirection: String,\n        dragTemplate: {},\n        dropFeedbackMode: String,\n        filter: String,\n        group: String,\n        handle: String,\n        onAdd: Function,\n        onDragChange: Function,\n        onDragEnd: Function,\n        onDragMove: Function,\n        onDragStart: Function,\n        onRemove: Function,\n        onReorder: Function,\n        scrollSensitivity: Number,\n        scrollSpeed: Number,\n        showDragIcons: Boolean\n    }\n});\nexports.DxRowDragging = DxRowDragging;\nDxRowDragging.$_optionName = \"rowDragging\";\nDxRowDragging.$_expectedChildren = {\n    cursorOffset: { isCollectionItem: false, optionName: \"cursorOffset\" }\n};\nvar DxScrolling = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:columnRenderingMode\": null,\n        \"update:mode\": null,\n        \"update:preloadEnabled\": null,\n        \"update:renderAsync\": null,\n        \"update:rowRenderingMode\": null,\n        \"update:scrollByContent\": null,\n        \"update:scrollByThumb\": null,\n        \"update:showScrollbar\": null,\n        \"update:useNative\": null,\n    },\n    props: {\n        columnRenderingMode: String,\n        mode: String,\n        preloadEnabled: Boolean,\n        renderAsync: Boolean,\n        rowRenderingMode: String,\n        scrollByContent: Boolean,\n        scrollByThumb: Boolean,\n        showScrollbar: String,\n        useNative: [Boolean, String]\n    }\n});\nexports.DxScrolling = DxScrolling;\nDxScrolling.$_optionName = \"scrolling\";\nvar DxSearchPanel = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:highlightCaseSensitive\": null,\n        \"update:highlightSearchText\": null,\n        \"update:placeholder\": null,\n        \"update:searchVisibleColumnsOnly\": null,\n        \"update:text\": null,\n        \"update:visible\": null,\n        \"update:width\": null,\n    },\n    props: {\n        highlightCaseSensitive: Boolean,\n        highlightSearchText: Boolean,\n        placeholder: String,\n        searchVisibleColumnsOnly: Boolean,\n        text: String,\n        visible: Boolean,\n        width: Number\n    }\n});\nexports.DxSearchPanel = DxSearchPanel;\nDxSearchPanel.$_optionName = \"searchPanel\";\nvar DxSelection = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:allowSelectAll\": null,\n        \"update:deferred\": null,\n        \"update:maxFilterLengthInRequest\": null,\n        \"update:mode\": null,\n        \"update:selectAllMode\": null,\n        \"update:showCheckBoxesMode\": null,\n    },\n    props: {\n        allowSelectAll: Boolean,\n        deferred: Boolean,\n        maxFilterLengthInRequest: Number,\n        mode: String,\n        selectAllMode: String,\n        showCheckBoxesMode: String\n    }\n});\nexports.DxSelection = DxSelection;\nDxSelection.$_optionName = \"selection\";\nvar DxShow = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:complete\": null,\n        \"update:delay\": null,\n        \"update:direction\": null,\n        \"update:duration\": null,\n        \"update:easing\": null,\n        \"update:from\": null,\n        \"update:staggerDelay\": null,\n        \"update:start\": null,\n        \"update:to\": null,\n        \"update:type\": null,\n    },\n    props: {\n        complete: Function,\n        delay: Number,\n        direction: String,\n        duration: Number,\n        easing: String,\n        from: Object,\n        staggerDelay: Number,\n        start: Function,\n        to: Object,\n        type: String\n    }\n});\nexports.DxShow = DxShow;\nDxShow.$_optionName = \"show\";\nvar DxSortByGroupSummaryInfo = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:groupColumn\": null,\n        \"update:sortOrder\": null,\n        \"update:summaryItem\": null,\n    },\n    props: {\n        groupColumn: String,\n        sortOrder: String,\n        summaryItem: [Number, String]\n    }\n});\nexports.DxSortByGroupSummaryInfo = DxSortByGroupSummaryInfo;\nDxSortByGroupSummaryInfo.$_optionName = \"sortByGroupSummaryInfo\";\nDxSortByGroupSummaryInfo.$_isCollectionItem = true;\nvar DxSorting = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ascendingText\": null,\n        \"update:clearText\": null,\n        \"update:descendingText\": null,\n        \"update:mode\": null,\n        \"update:showSortIndexes\": null,\n    },\n    props: {\n        ascendingText: String,\n        clearText: String,\n        descendingText: String,\n        mode: String,\n        showSortIndexes: Boolean\n    }\n});\nexports.DxSorting = DxSorting;\nDxSorting.$_optionName = \"sorting\";\nvar DxStateStoring = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:customLoad\": null,\n        \"update:customSave\": null,\n        \"update:enabled\": null,\n        \"update:savingTimeout\": null,\n        \"update:storageKey\": null,\n        \"update:type\": null,\n    },\n    props: {\n        customLoad: Function,\n        customSave: Function,\n        enabled: Boolean,\n        savingTimeout: Number,\n        storageKey: String,\n        type: String\n    }\n});\nexports.DxStateStoring = DxStateStoring;\nDxStateStoring.$_optionName = \"stateStoring\";\nvar DxStringLengthRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:max\": null,\n        \"update:message\": null,\n        \"update:min\": null,\n        \"update:trim\": null,\n        \"update:type\": null,\n    },\n    props: {\n        ignoreEmptyValue: Boolean,\n        max: Number,\n        message: String,\n        min: Number,\n        trim: Boolean,\n        type: String\n    }\n});\nexports.DxStringLengthRule = DxStringLengthRule;\nDxStringLengthRule.$_optionName = \"validationRules\";\nDxStringLengthRule.$_isCollectionItem = true;\nDxStringLengthRule.$_predefinedProps = {\n    type: \"stringLength\"\n};\nvar DxSummary = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:calculateCustomSummary\": null,\n        \"update:groupItems\": null,\n        \"update:recalculateWhileEditing\": null,\n        \"update:skipEmptyValues\": null,\n        \"update:texts\": null,\n        \"update:totalItems\": null,\n    },\n    props: {\n        calculateCustomSummary: Function,\n        groupItems: Array,\n        recalculateWhileEditing: Boolean,\n        skipEmptyValues: Boolean,\n        texts: Object,\n        totalItems: Array\n    }\n});\nexports.DxSummary = DxSummary;\nDxSummary.$_optionName = \"summary\";\nDxSummary.$_expectedChildren = {\n    groupItem: { isCollectionItem: true, optionName: \"groupItems\" },\n    summaryTexts: { isCollectionItem: false, optionName: \"texts\" },\n    texts: { isCollectionItem: false, optionName: \"texts\" },\n    totalItem: { isCollectionItem: true, optionName: \"totalItems\" }\n};\nvar DxSummaryTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:avg\": null,\n        \"update:avgOtherColumn\": null,\n        \"update:count\": null,\n        \"update:max\": null,\n        \"update:maxOtherColumn\": null,\n        \"update:min\": null,\n        \"update:minOtherColumn\": null,\n        \"update:sum\": null,\n        \"update:sumOtherColumn\": null,\n    },\n    props: {\n        avg: String,\n        avgOtherColumn: String,\n        count: String,\n        max: String,\n        maxOtherColumn: String,\n        min: String,\n        minOtherColumn: String,\n        sum: String,\n        sumOtherColumn: String\n    }\n});\nexports.DxSummaryTexts = DxSummaryTexts;\nDxSummaryTexts.$_optionName = \"texts\";\nvar DxTexts = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:addRow\": null,\n        \"update:avg\": null,\n        \"update:avgOtherColumn\": null,\n        \"update:cancel\": null,\n        \"update:cancelAllChanges\": null,\n        \"update:cancelRowChanges\": null,\n        \"update:clearFilter\": null,\n        \"update:confirmDeleteMessage\": null,\n        \"update:confirmDeleteTitle\": null,\n        \"update:count\": null,\n        \"update:createFilter\": null,\n        \"update:deleteRow\": null,\n        \"update:editRow\": null,\n        \"update:emptyValue\": null,\n        \"update:exportAll\": null,\n        \"update:exportSelectedRows\": null,\n        \"update:exportTo\": null,\n        \"update:filterEnabledHint\": null,\n        \"update:fix\": null,\n        \"update:groupByThisColumn\": null,\n        \"update:groupContinuedMessage\": null,\n        \"update:groupContinuesMessage\": null,\n        \"update:leftPosition\": null,\n        \"update:max\": null,\n        \"update:maxOtherColumn\": null,\n        \"update:min\": null,\n        \"update:minOtherColumn\": null,\n        \"update:ok\": null,\n        \"update:rightPosition\": null,\n        \"update:saveAllChanges\": null,\n        \"update:saveRowChanges\": null,\n        \"update:sum\": null,\n        \"update:sumOtherColumn\": null,\n        \"update:undeleteRow\": null,\n        \"update:unfix\": null,\n        \"update:ungroup\": null,\n        \"update:ungroupAll\": null,\n        \"update:validationCancelChanges\": null,\n    },\n    props: {\n        addRow: String,\n        avg: String,\n        avgOtherColumn: String,\n        cancel: String,\n        cancelAllChanges: String,\n        cancelRowChanges: String,\n        clearFilter: String,\n        confirmDeleteMessage: String,\n        confirmDeleteTitle: String,\n        count: String,\n        createFilter: String,\n        deleteRow: String,\n        editRow: String,\n        emptyValue: String,\n        exportAll: String,\n        exportSelectedRows: String,\n        exportTo: String,\n        filterEnabledHint: String,\n        fix: String,\n        groupByThisColumn: String,\n        groupContinuedMessage: String,\n        groupContinuesMessage: String,\n        leftPosition: String,\n        max: String,\n        maxOtherColumn: String,\n        min: String,\n        minOtherColumn: String,\n        ok: String,\n        rightPosition: String,\n        saveAllChanges: String,\n        saveRowChanges: String,\n        sum: String,\n        sumOtherColumn: String,\n        undeleteRow: String,\n        unfix: String,\n        ungroup: String,\n        ungroupAll: String,\n        validationCancelChanges: String\n    }\n});\nexports.DxTexts = DxTexts;\nDxTexts.$_optionName = \"texts\";\nvar DxTo = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:left\": null,\n        \"update:opacity\": null,\n        \"update:position\": null,\n        \"update:scale\": null,\n        \"update:top\": null,\n    },\n    props: {\n        left: Number,\n        opacity: Number,\n        position: Object,\n        scale: Number,\n        top: Number\n    }\n});\nexports.DxTo = DxTo;\nDxTo.$_optionName = \"to\";\nvar DxToolbar = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:disabled\": null,\n        \"update:items\": null,\n        \"update:visible\": null,\n    },\n    props: {\n        disabled: Boolean,\n        items: Array,\n        visible: Boolean\n    }\n});\nexports.DxToolbar = DxToolbar;\nDxToolbar.$_optionName = \"toolbar\";\nDxToolbar.$_expectedChildren = {\n    item: { isCollectionItem: true, optionName: \"items\" }\n};\nvar DxToolbarItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:disabled\": null,\n        \"update:html\": null,\n        \"update:location\": null,\n        \"update:options\": null,\n        \"update:template\": null,\n        \"update:text\": null,\n        \"update:toolbar\": null,\n        \"update:visible\": null,\n        \"update:widget\": null,\n    },\n    props: {\n        disabled: Boolean,\n        html: String,\n        location: String,\n        options: {},\n        template: {},\n        text: String,\n        toolbar: String,\n        visible: Boolean,\n        widget: String\n    }\n});\nexports.DxToolbarItem = DxToolbarItem;\nDxToolbarItem.$_optionName = \"toolbarItems\";\nDxToolbarItem.$_isCollectionItem = true;\nvar DxTotalItem = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:alignment\": null,\n        \"update:column\": null,\n        \"update:cssClass\": null,\n        \"update:customizeText\": null,\n        \"update:displayFormat\": null,\n        \"update:name\": null,\n        \"update:showInColumn\": null,\n        \"update:skipEmptyValues\": null,\n        \"update:summaryType\": null,\n        \"update:valueFormat\": null,\n    },\n    props: {\n        alignment: String,\n        column: String,\n        cssClass: String,\n        customizeText: Function,\n        displayFormat: String,\n        name: String,\n        showInColumn: String,\n        skipEmptyValues: Boolean,\n        summaryType: String,\n        valueFormat: [Object, Function, String]\n    }\n});\nexports.DxTotalItem = DxTotalItem;\nDxTotalItem.$_optionName = \"totalItems\";\nDxTotalItem.$_isCollectionItem = true;\nDxTotalItem.$_expectedChildren = {\n    valueFormat: { isCollectionItem: false, optionName: \"valueFormat\" }\n};\nvar DxValidationRule = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:comparisonTarget\": null,\n        \"update:comparisonType\": null,\n        \"update:ignoreEmptyValue\": null,\n        \"update:max\": null,\n        \"update:message\": null,\n        \"update:min\": null,\n        \"update:pattern\": null,\n        \"update:reevaluate\": null,\n        \"update:trim\": null,\n        \"update:type\": null,\n        \"update:validationCallback\": null,\n    },\n    props: {\n        comparisonTarget: Function,\n        comparisonType: String,\n        ignoreEmptyValue: Boolean,\n        max: {},\n        message: String,\n        min: {},\n        pattern: {},\n        reevaluate: Boolean,\n        trim: Boolean,\n        type: String,\n        validationCallback: Function\n    }\n});\nexports.DxValidationRule = DxValidationRule;\nDxValidationRule.$_optionName = \"validationRules\";\nDxValidationRule.$_isCollectionItem = true;\nDxValidationRule.$_predefinedProps = {\n    type: \"required\"\n};\nvar DxValueFormat = index_2.createConfigurationComponent({\n    emits: {\n        \"update:isActive\": null,\n        \"update:hoveredElement\": null,\n        \"update:currency\": null,\n        \"update:formatter\": null,\n        \"update:parser\": null,\n        \"update:precision\": null,\n        \"update:type\": null,\n    },\n    props: {\n        currency: String,\n        formatter: Function,\n        parser: Function,\n        precision: Number,\n        type: String\n    }\n});\nexports.DxValueFormat = DxValueFormat;\nDxValueFormat.$_optionName = \"valueFormat\";\nexports.default = DxDataGrid;\n","/**\r\n * DevExtreme (esm/ui/shared/filtering.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDate,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nvar DEFAULT_DATE_INTERVAL = [\"year\", \"month\", \"day\"];\r\nvar DEFAULT_DATETIME_INTERVAL = [\"year\", \"month\", \"day\", \"hour\", \"minute\"];\r\nvar isDateType = function(dataType) {\r\n    return \"date\" === dataType || \"datetime\" === dataType\r\n};\r\nvar getGroupInterval = function(column) {\r\n    var index;\r\n    var result = [];\r\n    var dateIntervals = [\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\"];\r\n    var groupInterval = column.headerFilter && column.headerFilter.groupInterval;\r\n    var interval = \"quarter\" === groupInterval ? \"month\" : groupInterval;\r\n    if (isDateType(column.dataType) && null !== groupInterval) {\r\n        result = \"datetime\" === column.dataType ? DEFAULT_DATETIME_INTERVAL : DEFAULT_DATE_INTERVAL;\r\n        index = inArray(interval, dateIntervals);\r\n        if (index >= 0) {\r\n            result = dateIntervals.slice(0, index);\r\n            result.push(groupInterval);\r\n            return result\r\n        }\r\n        return result\r\n    } else if (isDefined(groupInterval)) {\r\n        return Array.isArray(groupInterval) ? groupInterval : [groupInterval]\r\n    }\r\n};\r\nexport default (function() {\r\n    var getFilterSelector = function(column, target) {\r\n        var selector = column.dataField || column.selector;\r\n        if (\"search\" === target) {\r\n            selector = column.displayField || column.calculateDisplayValue || selector\r\n        }\r\n        return selector\r\n    };\r\n    var getFilterExpressionByRange = function(filterValue, target) {\r\n        var endFilterValue;\r\n        var startFilterExpression;\r\n        var endFilterExpression;\r\n        var selector = getFilterSelector(this, target);\r\n        if (Array.isArray(filterValue) && isDefined(filterValue[0]) && isDefined(filterValue[1])) {\r\n            startFilterExpression = [selector, \">=\", filterValue[0]];\r\n            endFilterExpression = [selector, \"<=\", filterValue[1]];\r\n            if (isDateType(this.dataType) && (date = filterValue[1], date.getHours() + date.getMinutes() + date.getSeconds() + date.getMilliseconds() < 1)) {\r\n                endFilterValue = new Date(filterValue[1].getTime());\r\n                if (\"date\" === this.dataType) {\r\n                    endFilterValue.setDate(filterValue[1].getDate() + 1)\r\n                }\r\n                endFilterExpression = [selector, \"<\", endFilterValue]\r\n            }\r\n            return [startFilterExpression, \"and\", endFilterExpression]\r\n        }\r\n        var date\r\n    };\r\n    var getFilterExpressionForDate = function(filterValue, selectedFilterOperation, target) {\r\n        var dateStart;\r\n        var dateEnd;\r\n        var dateInterval;\r\n        var values = function(dateValue) {\r\n            if (isDate(dateValue)) {\r\n                return [dateValue.getFullYear(), dateValue.getMonth(), dateValue.getDate(), dateValue.getHours(), dateValue.getMinutes(), dateValue.getSeconds()]\r\n            }\r\n            return map((\"\" + dateValue).split(\"/\"), (function(value, index) {\r\n                return 1 === index ? Number(value) - 1 : Number(value)\r\n            }))\r\n        }(filterValue);\r\n        var selector = getFilterSelector(this, target);\r\n        if (\"headerFilter\" === target) {\r\n            dateInterval = getGroupInterval(this)[values.length - 1]\r\n        } else if (\"datetime\" === this.dataType) {\r\n            dateInterval = \"minute\"\r\n        }\r\n        switch (dateInterval) {\r\n            case \"year\":\r\n                dateStart = new Date(values[0], 0, 1);\r\n                dateEnd = new Date(values[0] + 1, 0, 1);\r\n                break;\r\n            case \"month\":\r\n                dateStart = new Date(values[0], values[1], 1);\r\n                dateEnd = new Date(values[0], values[1] + 1, 1);\r\n                break;\r\n            case \"quarter\":\r\n                dateStart = new Date(values[0], 3 * values[1], 1);\r\n                dateEnd = new Date(values[0], 3 * values[1] + 3, 1);\r\n                break;\r\n            case \"hour\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3] + 1);\r\n                break;\r\n            case \"minute\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3], values[4]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3], values[4] + 1);\r\n                break;\r\n            case \"second\":\r\n                dateStart = new Date(values[0], values[1], values[2], values[3], values[4], values[5]);\r\n                dateEnd = new Date(values[0], values[1], values[2], values[3], values[4], values[5] + 1);\r\n                break;\r\n            default:\r\n                dateStart = new Date(values[0], values[1], values[2]);\r\n                dateEnd = new Date(values[0], values[1], values[2] + 1)\r\n        }\r\n        switch (selectedFilterOperation) {\r\n            case \"<\":\r\n                return [selector, \"<\", dateStart];\r\n            case \"<=\":\r\n                return [selector, \"<\", dateEnd];\r\n            case \">\":\r\n                return [selector, \">=\", dateEnd];\r\n            case \">=\":\r\n                return [selector, \">=\", dateStart];\r\n            case \"<>\":\r\n                return [\r\n                    [selector, \"<\", dateStart], \"or\", [selector, \">=\", dateEnd]\r\n                ];\r\n            default:\r\n                return [\r\n                    [selector, \">=\", dateStart], \"and\", [selector, \"<\", dateEnd]\r\n                ]\r\n        }\r\n    };\r\n    var getFilterExpressionForNumber = function(filterValue, selectedFilterOperation, target) {\r\n        var selector = getFilterSelector(this, target);\r\n        var groupInterval = getGroupInterval(this);\r\n        if (\"headerFilter\" === target && groupInterval && isDefined(filterValue)) {\r\n            var values = (\"\" + filterValue).split(\"/\");\r\n            var value = Number(values[values.length - 1]);\r\n            var interval = groupInterval[values.length - 1];\r\n            var startFilterValue = [selector, \">=\", value];\r\n            var endFilterValue = [selector, \"<\", value + interval];\r\n            var condition = [startFilterValue, \"and\", endFilterValue];\r\n            return condition\r\n        }\r\n        return [selector, selectedFilterOperation || \"=\", filterValue]\r\n    };\r\n    return {\r\n        defaultCalculateFilterExpression: function(filterValue, selectedFilterOperation, target) {\r\n            var column = this;\r\n            var selector = getFilterSelector(column, target);\r\n            var isSearchByDisplayValue = column.calculateDisplayValue && \"search\" === target;\r\n            var dataType = isSearchByDisplayValue && column.lookup && column.lookup.dataType || column.dataType;\r\n            var filter = null;\r\n            if ((\"headerFilter\" === target || \"filterBuilder\" === target) && null === filterValue) {\r\n                filter = [selector, selectedFilterOperation || \"=\", null];\r\n                if (\"string\" === dataType) {\r\n                    filter = [filter, \"=\" === selectedFilterOperation ? \"or\" : \"and\", [selector, selectedFilterOperation || \"=\", \"\"]]\r\n                }\r\n            } else if (\"string\" === dataType && (!column.lookup || isSearchByDisplayValue)) {\r\n                filter = [selector, selectedFilterOperation || \"contains\", filterValue]\r\n            } else if (\"between\" === selectedFilterOperation) {\r\n                return getFilterExpressionByRange.apply(column, [filterValue, target])\r\n            } else if (isDateType(dataType) && isDefined(filterValue)) {\r\n                return getFilterExpressionForDate.apply(column, arguments)\r\n            } else if (\"number\" === dataType) {\r\n                return getFilterExpressionForNumber.apply(column, arguments)\r\n            } else if (\"object\" !== dataType) {\r\n                filter = [selector, selectedFilterOperation || \"=\", filterValue]\r\n            }\r\n            return filter\r\n        },\r\n        getGroupInterval: getGroupInterval\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    isDefined,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport sharedFiltering from \"../shared/filtering\";\r\nimport {\r\n    format\r\n} from \"../../core/utils/string\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    toComparable\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport LoadPanel from \"../load_panel\";\r\nimport {\r\n    normalizeSortingInfo as normalizeSortingInfoUtility\r\n} from \"../../data/utils\";\r\nimport formatHelper from \"../../format_helper\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nvar DATAGRID_SELECTION_DISABLED_CLASS = \"dx-selection-disabled\";\r\nvar DATAGRID_GROUP_OPENED_CLASS = \"dx-datagrid-group-opened\";\r\nvar DATAGRID_GROUP_CLOSED_CLASS = \"dx-datagrid-group-closed\";\r\nvar DATAGRID_EXPAND_CLASS = \"dx-datagrid-expand\";\r\nvar NO_DATA_CLASS = \"nodata\";\r\nvar SCROLLING_MODE_INFINITE = \"infinite\";\r\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\nvar SCROLLING_MODE_OPTION = \"scrolling.mode\";\r\nvar ROW_RENDERING_MODE_OPTION = \"scrolling.rowRenderingMode\";\r\nvar DATE_INTERVAL_SELECTORS = {\r\n    year: function(value) {\r\n        return value && value.getFullYear()\r\n    },\r\n    month: function(value) {\r\n        return value && value.getMonth() + 1\r\n    },\r\n    day: function(value) {\r\n        return value && value.getDate()\r\n    },\r\n    quarter: function(value) {\r\n        return value && Math.floor(value.getMonth() / 3) + 1\r\n    },\r\n    hour: function(value) {\r\n        return value && value.getHours()\r\n    },\r\n    minute: function(value) {\r\n        return value && value.getMinutes()\r\n    },\r\n    second: function(value) {\r\n        return value && value.getSeconds()\r\n    }\r\n};\r\nvar getIntervalSelector = function() {\r\n    var data = arguments[1];\r\n    var value = this.calculateCellValue(data);\r\n    if (!isDefined(value)) {\r\n        return null\r\n    } else if (isDateType(this.dataType)) {\r\n        var nameIntervalSelector = arguments[0];\r\n        return DATE_INTERVAL_SELECTORS[nameIntervalSelector](value)\r\n    } else if (\"number\" === this.dataType) {\r\n        var groupInterval = arguments[0];\r\n        return Math.floor(Number(value) / groupInterval) * groupInterval\r\n    }\r\n};\r\nvar equalSelectors = function(selector1, selector2) {\r\n    if (isFunction(selector1) && isFunction(selector2)) {\r\n        if (selector1.originalCallback && selector2.originalCallback) {\r\n            return selector1.originalCallback === selector2.originalCallback && selector1.columnIndex === selector2.columnIndex\r\n        }\r\n    }\r\n    return selector1 === selector2\r\n};\r\n\r\nfunction isDateType(dataType) {\r\n    return \"date\" === dataType || \"datetime\" === dataType\r\n}\r\nvar setEmptyText = function($container) {\r\n    $container.get(0).textContent = \"\\xa0\"\r\n};\r\nvar normalizeSortingInfo = function(sort) {\r\n    sort = sort || [];\r\n    var result = normalizeSortingInfoUtility(sort);\r\n    for (var i = 0; i < sort.length; i++) {\r\n        if (sort && sort[i] && void 0 !== sort[i].isExpanded) {\r\n            result[i].isExpanded = sort[i].isExpanded\r\n        }\r\n        if (sort && sort[i] && void 0 !== sort[i].groupInterval) {\r\n            result[i].groupInterval = sort[i].groupInterval\r\n        }\r\n    }\r\n    return result\r\n};\r\nvar formatValue = function(value, options) {\r\n    var valueText = formatHelper.format(value, options.format) || value && value.toString() || \"\";\r\n    var formatObject = {\r\n        value: value,\r\n        valueText: options.getDisplayFormat ? options.getDisplayFormat(valueText) : valueText,\r\n        target: options.target || \"row\",\r\n        groupInterval: options.groupInterval\r\n    };\r\n    return options.customizeText ? options.customizeText.call(options, formatObject) : formatObject.valueText\r\n};\r\nvar getSummaryText = function(summaryItem, summaryTexts) {\r\n    var displayFormat = summaryItem.displayFormat || summaryItem.columnCaption && summaryTexts[summaryItem.summaryType + \"OtherColumn\"] || summaryTexts[summaryItem.summaryType];\r\n    return formatValue(summaryItem.value, {\r\n        format: summaryItem.valueFormat,\r\n        getDisplayFormat: function(valueText) {\r\n            return displayFormat ? format(displayFormat, valueText, summaryItem.columnCaption) : valueText\r\n        },\r\n        customizeText: summaryItem.customizeText\r\n    })\r\n};\r\nvar getWidgetInstance = function($element) {\r\n    var editorData = $element.data && $element.data();\r\n    var dxComponents = editorData && editorData.dxComponents;\r\n    var widgetName = dxComponents && dxComponents[0];\r\n    return widgetName && editorData[widgetName]\r\n};\r\nvar equalFilterParameters = function equalFilterParameters(filter1, filter2) {\r\n    if (Array.isArray(filter1) && Array.isArray(filter2)) {\r\n        if (filter1.length !== filter2.length) {\r\n            return false\r\n        } else {\r\n            for (var i = 0; i < filter1.length; i++) {\r\n                if (!equalFilterParameters(filter1[i], filter2[i])) {\r\n                    return false\r\n                }\r\n            }\r\n        }\r\n        return true\r\n    } else if (isFunction(filter1) && filter1.columnIndex >= 0 && isFunction(filter2) && filter2.columnIndex >= 0) {\r\n        return filter1.columnIndex === filter2.columnIndex && toComparable(filter1.filterValue) === toComparable(filter2.filterValue)\r\n    } else {\r\n        return toComparable(filter1) == toComparable(filter2)\r\n    }\r\n};\r\nexport default {\r\n    renderNoDataText: function($element) {\r\n        $element = $element || this.element();\r\n        if (!$element) {\r\n            return\r\n        }\r\n        var noDataClass = this.addWidgetPrefix(NO_DATA_CLASS);\r\n        var noDataElement = $element.find(\".\" + noDataClass).last();\r\n        var isVisible = this._dataController.isEmpty();\r\n        var isLoading = this._dataController.isLoading();\r\n        if (!noDataElement.length) {\r\n            noDataElement = $(\"<span>\").addClass(noDataClass).appendTo($element)\r\n        }\r\n        if (isVisible && !isLoading) {\r\n            noDataElement.removeClass(\"dx-hidden\").text(this._getNoDataText())\r\n        } else {\r\n            noDataElement.addClass(\"dx-hidden\")\r\n        }\r\n    },\r\n    renderLoadPanel: function($element, $container, isLocalStore) {\r\n        var loadPanelOptions;\r\n        this._loadPanel && this._loadPanel.$element().remove();\r\n        loadPanelOptions = this.option(\"loadPanel\");\r\n        if (loadPanelOptions && (\"auto\" === loadPanelOptions.enabled ? !isLocalStore : loadPanelOptions.enabled)) {\r\n            loadPanelOptions = extend({\r\n                shading: false,\r\n                message: loadPanelOptions.text,\r\n                container: $container\r\n            }, loadPanelOptions);\r\n            this._loadPanel = this._createComponent($(\"<div>\").appendTo($container), LoadPanel, loadPanelOptions)\r\n        } else {\r\n            this._loadPanel = null\r\n        }\r\n    },\r\n    calculateLoadPanelPosition($element) {\r\n        var $window = $(getWindow());\r\n        if (getHeight($element) > getHeight($window)) {\r\n            return {\r\n                of: $window,\r\n                boundary: $element,\r\n                collision: \"fit\"\r\n            }\r\n        }\r\n        return {\r\n            of: $element\r\n        }\r\n    },\r\n    getIndexByKey: function(key, items, keyName) {\r\n        var index = -1;\r\n        if (void 0 !== key && Array.isArray(items)) {\r\n            keyName = arguments.length <= 2 ? \"key\" : keyName;\r\n            for (var i = 0; i < items.length; i++) {\r\n                var item = isDefined(keyName) ? items[i][keyName] : items[i];\r\n                if (equalByValue(key, item)) {\r\n                    index = i;\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        return index\r\n    },\r\n    combineFilters: function(filters, operation) {\r\n        var resultFilter = [];\r\n        operation = operation || \"and\";\r\n        for (var i = 0; i < filters.length; i++) {\r\n            var _filters$i;\r\n            if (!filters[i]) {\r\n                continue\r\n            }\r\n            if (1 === (null === (_filters$i = filters[i]) || void 0 === _filters$i ? void 0 : _filters$i.length) && \"!\" === filters[i][0]) {\r\n                if (\"and\" === operation) {\r\n                    return [\"!\"]\r\n                } else if (\"or\" === operation) {\r\n                    continue\r\n                }\r\n            }\r\n            if (resultFilter.length) {\r\n                resultFilter.push(operation)\r\n            }\r\n            resultFilter.push(filters[i])\r\n        }\r\n        if (1 === resultFilter.length) {\r\n            resultFilter = resultFilter[0]\r\n        }\r\n        if (resultFilter.length) {\r\n            return resultFilter\r\n        }\r\n    },\r\n    checkChanges: function(changes, changeNames) {\r\n        var changesWithChangeNamesCount = 0;\r\n        for (var i = 0; i < changeNames.length; i++) {\r\n            if (changes[changeNames[i]]) {\r\n                changesWithChangeNamesCount++\r\n            }\r\n        }\r\n        return changes.length && changes.length === changesWithChangeNamesCount\r\n    },\r\n    equalFilterParameters: equalFilterParameters,\r\n    proxyMethod: function(instance, methodName, defaultResult) {\r\n        if (!instance[methodName]) {\r\n            instance[methodName] = function() {\r\n                var dataSource = this._dataSource;\r\n                return dataSource ? dataSource[methodName].apply(dataSource, arguments) : defaultResult\r\n            }\r\n        }\r\n    },\r\n    formatValue: formatValue,\r\n    getFormatOptionsByColumn: function(column, target) {\r\n        return {\r\n            format: column.format,\r\n            getDisplayFormat: column.getDisplayFormat,\r\n            customizeText: column.customizeText,\r\n            target: target,\r\n            trueText: column.trueText,\r\n            falseText: column.falseText\r\n        }\r\n    },\r\n    getDisplayValue: function(column, value, data, rowType) {\r\n        if (column.displayValueMap && void 0 !== column.displayValueMap[value]) {\r\n            return column.displayValueMap[value]\r\n        } else if (column.calculateDisplayValue && data && \"group\" !== rowType) {\r\n            return column.calculateDisplayValue(data)\r\n        } else if (column.lookup && !(\"group\" === rowType && (column.calculateGroupValue || column.calculateDisplayValue))) {\r\n            return column.lookup.calculateCellValue(value)\r\n        }\r\n        return value\r\n    },\r\n    getGroupRowSummaryText: function(summaryItems, summaryTexts) {\r\n        var result = \"(\";\r\n        for (var i = 0; i < summaryItems.length; i++) {\r\n            var summaryItem = summaryItems[i];\r\n            result += (i > 0 ? \", \" : \"\") + getSummaryText(summaryItem, summaryTexts)\r\n        }\r\n        return result + \")\"\r\n    },\r\n    getSummaryText: getSummaryText,\r\n    normalizeSortingInfo: normalizeSortingInfo,\r\n    getFormatByDataType: function(dataType) {\r\n        switch (dataType) {\r\n            case \"date\":\r\n                return \"shortDate\";\r\n            case \"datetime\":\r\n                return \"shortDateShortTime\"\r\n        }\r\n    },\r\n    getHeaderFilterGroupParameters: function(column, remoteGrouping) {\r\n        var result = [];\r\n        var dataField = column.dataField || column.name;\r\n        var groupInterval = sharedFiltering.getGroupInterval(column);\r\n        if (groupInterval) {\r\n            each(groupInterval, (function(index, interval) {\r\n                result.push(remoteGrouping ? {\r\n                    selector: dataField,\r\n                    groupInterval: interval,\r\n                    isExpanded: index < groupInterval.length - 1\r\n                } : getIntervalSelector.bind(column, interval))\r\n            }));\r\n            return result\r\n        }\r\n        if (remoteGrouping) {\r\n            result = [{\r\n                selector: dataField,\r\n                isExpanded: false\r\n            }]\r\n        } else {\r\n            result = function(data) {\r\n                var result = column.calculateCellValue(data);\r\n                if (void 0 === result || \"\" === result) {\r\n                    result = null\r\n                }\r\n                return result\r\n            };\r\n            if (column.sortingMethod) {\r\n                result = [{\r\n                    selector: result,\r\n                    compare: column.sortingMethod.bind(column)\r\n                }]\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    equalSortParameters(sortParameters1, sortParameters2, ignoreIsExpanded) {\r\n        sortParameters1 = normalizeSortingInfo(sortParameters1);\r\n        sortParameters2 = normalizeSortingInfo(sortParameters2);\r\n        if (Array.isArray(sortParameters1) && Array.isArray(sortParameters2)) {\r\n            if (sortParameters1.length !== sortParameters2.length) {\r\n                return false\r\n            } else {\r\n                for (var i = 0; i < sortParameters1.length; i++) {\r\n                    if (!equalSelectors(sortParameters1[i].selector, sortParameters2[i].selector) || sortParameters1[i].desc !== sortParameters2[i].desc || sortParameters1[i].groupInterval !== sortParameters2[i].groupInterval || !ignoreIsExpanded && Boolean(sortParameters1[i].isExpanded) !== Boolean(sortParameters2[i].isExpanded)) {\r\n                        return false\r\n                    }\r\n                }\r\n            }\r\n            return true\r\n        } else {\r\n            return (!sortParameters1 || !sortParameters1.length) === (!sortParameters2 || !sortParameters2.length)\r\n        }\r\n    },\r\n    getPointsByColumns: function(items, pointCreated, isVertical, startColumnIndex) {\r\n        var cellsLength = items.length;\r\n        var notCreatePoint = false;\r\n        var item;\r\n        var offset;\r\n        var columnIndex = startColumnIndex || 0;\r\n        var result = [];\r\n        var rtlEnabled;\r\n        for (var i = 0; i <= cellsLength; i++) {\r\n            if (i < cellsLength) {\r\n                item = items.eq(i);\r\n                offset = item.offset();\r\n                rtlEnabled = \"rtl\" === item.css(\"direction\")\r\n            }\r\n            var point = {\r\n                index: columnIndex,\r\n                x: offset ? offset.left + (!isVertical && rtlEnabled ^ i === cellsLength ? getBoundingRect(item[0]).width : 0) : 0,\r\n                y: offset ? offset.top + (isVertical && i === cellsLength ? getBoundingRect(item[0]).height : 0) : 0,\r\n                columnIndex: columnIndex\r\n            };\r\n            if (!isVertical && i > 0) {\r\n                var prevItemOffset = items.eq(i - 1).offset();\r\n                if (prevItemOffset.top < point.y) {\r\n                    point.y = prevItemOffset.top\r\n                }\r\n            }\r\n            if (pointCreated) {\r\n                notCreatePoint = pointCreated(point)\r\n            }\r\n            if (!notCreatePoint) {\r\n                result.push(point)\r\n            }\r\n            columnIndex++\r\n        }\r\n        return result\r\n    },\r\n    getExpandCellTemplate: function() {\r\n        return {\r\n            allowRenderToDetachedContainer: true,\r\n            render: function(container, options) {\r\n                var $container = $(container);\r\n                if (isDefined(options.value) && !(options.data && options.data.isContinuation) && !options.row.isNewRow) {\r\n                    var rowsView = options.component.getView(\"rowsView\");\r\n                    $container.addClass(DATAGRID_EXPAND_CLASS).addClass(DATAGRID_SELECTION_DISABLED_CLASS);\r\n                    $(\"<div>\").addClass(options.value ? DATAGRID_GROUP_OPENED_CLASS : DATAGRID_GROUP_CLOSED_CLASS).appendTo($container);\r\n                    rowsView.setAria(\"label\", options.value ? rowsView.localize(\"dxDataGrid-ariaCollapse\") : rowsView.localize(\"dxDataGrid-ariaExpand\"), $container)\r\n                } else {\r\n                    setEmptyText($container)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    setEmptyText: setEmptyText,\r\n    isDateType: isDateType,\r\n    getSelectionRange: function(focusedElement) {\r\n        try {\r\n            if (focusedElement) {\r\n                return {\r\n                    selectionStart: focusedElement.selectionStart,\r\n                    selectionEnd: focusedElement.selectionEnd\r\n                }\r\n            }\r\n        } catch (e) {}\r\n        return {}\r\n    },\r\n    setSelectionRange: function(focusedElement, selectionRange) {\r\n        try {\r\n            if (focusedElement && focusedElement.setSelectionRange) {\r\n                focusedElement.setSelectionRange(selectionRange.selectionStart, selectionRange.selectionEnd)\r\n            }\r\n        } catch (e) {}\r\n    },\r\n    focusAndSelectElement: function(component, $element) {\r\n        var isFocused = $element.is(\":focus\");\r\n        eventsEngine.trigger($element, \"focus\");\r\n        var isSelectTextOnEditingStart = component.option(\"editing.selectTextOnEditStart\");\r\n        var element = $element.get(0);\r\n        if (!isFocused && isSelectTextOnEditingStart && $element.is(\".dx-texteditor-input\") && !$element.is(\"[readonly]\")) {\r\n            var editor = getWidgetInstance($element.closest(\".dx-texteditor\"));\r\n            when(editor && editor._loadItemDeferred).done((function() {\r\n                element.select()\r\n            }))\r\n        }\r\n    },\r\n    getWidgetInstance: getWidgetInstance,\r\n    getLastResizableColumnIndex: function(columns, resultWidths) {\r\n        var hasResizableColumns = columns.some(column => column && !column.command && !column.fixed && false !== column.allowResizing);\r\n        var lastColumnIndex;\r\n        for (lastColumnIndex = columns.length - 1; columns[lastColumnIndex]; lastColumnIndex--) {\r\n            var column = columns[lastColumnIndex];\r\n            var width = resultWidths && resultWidths[lastColumnIndex];\r\n            var allowResizing = !hasResizableColumns || false !== column.allowResizing;\r\n            if (!column.command && !column.fixed && \"adaptiveHidden\" !== width && allowResizing) {\r\n                break\r\n            }\r\n        }\r\n        return lastColumnIndex\r\n    },\r\n    isElementInCurrentGrid: function(controller, $element) {\r\n        if ($element && $element.length) {\r\n            var $grid = $element.closest(\".\" + controller.getWidgetContainerClass()).parent();\r\n            return $grid.is(controller.component.$element())\r\n        }\r\n        return false\r\n    },\r\n    isVirtualRowRendering: function(that) {\r\n        var rowRenderingMode = that.option(ROW_RENDERING_MODE_OPTION);\r\n        var isVirtualMode = that.option(SCROLLING_MODE_OPTION) === SCROLLING_MODE_VIRTUAL;\r\n        var isAppendMode = that.option(SCROLLING_MODE_OPTION) === SCROLLING_MODE_INFINITE;\r\n        if (false === that.option(LEGACY_SCROLLING_MODE) && (isVirtualMode || isAppendMode)) {\r\n            return true\r\n        }\r\n        return rowRenderingMode === SCROLLING_MODE_VIRTUAL\r\n    },\r\n    getPixelRatio: function(window) {\r\n        return window.devicePixelRatio || 1\r\n    },\r\n    getContentHeightLimit(browser) {\r\n        if (browser.mozilla) {\r\n            return 8e6\r\n        }\r\n        return 15e6 / this.getPixelRatio(getWindow())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.modules.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Class from \"../../core/class\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    grep\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nvar WIDGET_WITH_LEGACY_CONTAINER_NAME = \"dxDataGrid\";\r\nvar ModuleItem = Class.inherit({\r\n    _endUpdateCore: function() {},\r\n    ctor: function(component) {\r\n        var that = this;\r\n        that._updateLockCount = 0;\r\n        that.component = component;\r\n        that._actions = {};\r\n        that._actionConfigs = {};\r\n        each(this.callbackNames() || [], (function(index, name) {\r\n            var flags = that.callbackFlags(name) || {};\r\n            flags.unique = true, flags.syncStrategy = true;\r\n            that[this] = Callbacks(flags)\r\n        }))\r\n    },\r\n    init: function() {},\r\n    callbackNames: function() {},\r\n    callbackFlags: function() {},\r\n    publicMethods: function() {},\r\n    beginUpdate: function() {\r\n        this._updateLockCount++\r\n    },\r\n    endUpdate: function() {\r\n        if (this._updateLockCount > 0) {\r\n            this._updateLockCount--;\r\n            if (!this._updateLockCount) {\r\n                this._endUpdateCore()\r\n            }\r\n        }\r\n    },\r\n    option: function(name) {\r\n        var component = this.component;\r\n        var optionCache = component._optionCache;\r\n        if (1 === arguments.length && optionCache) {\r\n            if (!(name in optionCache)) {\r\n                optionCache[name] = component.option(name)\r\n            }\r\n            return optionCache[name]\r\n        }\r\n        return component.option.apply(component, arguments)\r\n    },\r\n    _silentOption: function(name, value) {\r\n        var component = this.component;\r\n        var optionCache = component._optionCache;\r\n        if (optionCache) {\r\n            optionCache[name] = value\r\n        }\r\n        return component._setOptionWithoutOptionChange(name, value)\r\n    },\r\n    localize: function(name) {\r\n        var optionCache = this.component._optionCache;\r\n        if (optionCache) {\r\n            if (!(name in optionCache)) {\r\n                optionCache[name] = messageLocalization.format(name)\r\n            }\r\n            return optionCache[name]\r\n        }\r\n        return messageLocalization.format(name)\r\n    },\r\n    on: function() {\r\n        return this.component.on.apply(this.component, arguments)\r\n    },\r\n    off: function() {\r\n        return this.component.off.apply(this.component, arguments)\r\n    },\r\n    optionChanged: function(args) {\r\n        if (args.name in this._actions) {\r\n            this.createAction(args.name, this._actionConfigs[args.name]);\r\n            args.handled = true\r\n        }\r\n    },\r\n    getAction: function(actionName) {\r\n        return this._actions[actionName]\r\n    },\r\n    setAria: function(name, value, $target) {\r\n        var target = $target.get(0);\r\n        var prefix = \"role\" !== name && \"id\" !== name ? \"aria-\" : \"\";\r\n        if (target.setAttribute) {\r\n            target.setAttribute(prefix + name, value)\r\n        } else {\r\n            $target.attr(prefix + name, value)\r\n        }\r\n    },\r\n    _createComponent: function() {\r\n        return this.component._createComponent.apply(this.component, arguments)\r\n    },\r\n    getController: function(name) {\r\n        return this.component._controllers[name]\r\n    },\r\n    createAction: function(actionName, config) {\r\n        if (isFunction(actionName)) {\r\n            var action = this.component._createAction(actionName.bind(this), config);\r\n            return function(e) {\r\n                action({\r\n                    event: e\r\n                })\r\n            }\r\n        } else {\r\n            this._actions[actionName] = this.component._createActionByOption(actionName, config);\r\n            this._actionConfigs[actionName] = config\r\n        }\r\n    },\r\n    executeAction: function(actionName, options) {\r\n        var action = this._actions[actionName];\r\n        return action && action(options)\r\n    },\r\n    dispose: function() {\r\n        var that = this;\r\n        each(that.callbackNames() || [], (function() {\r\n            that[this].empty()\r\n        }))\r\n    },\r\n    addWidgetPrefix: function(className) {\r\n        var componentName = this.component.NAME;\r\n        return \"dx-\" + componentName.slice(2).toLowerCase() + (className ? \"-\" + className : \"\")\r\n    },\r\n    getWidgetContainerClass: function() {\r\n        var containerName = this.component.NAME === WIDGET_WITH_LEGACY_CONTAINER_NAME ? null : \"container\";\r\n        return this.addWidgetPrefix(containerName)\r\n    }\r\n});\r\nvar Controller = ModuleItem;\r\nvar ViewController = Controller.inherit({\r\n    getView: function(name) {\r\n        return this.component._views[name]\r\n    },\r\n    getViews: function() {\r\n        return this.component._views\r\n    }\r\n});\r\nvar View = ModuleItem.inherit({\r\n    _isReady: function() {\r\n        return this.component.isReady()\r\n    },\r\n    _endUpdateCore: function() {\r\n        this.callBase();\r\n        if (!this._isReady() && this._requireReady) {\r\n            this._requireRender = false;\r\n            this.component._requireResize = false\r\n        }\r\n        if (this._requireRender) {\r\n            this._requireRender = false;\r\n            this.render(this._$parent)\r\n        }\r\n    },\r\n    _invalidate: function(requireResize, requireReady) {\r\n        this._requireRender = true;\r\n        this.component._requireResize = hasWindow() && (this.component._requireResize || requireResize);\r\n        this._requireReady = this._requireReady || requireReady\r\n    },\r\n    _renderCore: function() {},\r\n    _resizeCore: function() {},\r\n    _parentElement: function() {\r\n        return this._$parent\r\n    },\r\n    ctor: function(component) {\r\n        this.callBase(component);\r\n        this.renderCompleted = Callbacks();\r\n        this.resizeCompleted = Callbacks()\r\n    },\r\n    element: function() {\r\n        return this._$element\r\n    },\r\n    getElementHeight: function() {\r\n        var $element = this.element();\r\n        if (!$element) {\r\n            return 0\r\n        }\r\n        var marginTop = parseFloat($element.css(\"marginTop\")) || 0;\r\n        var marginBottom = parseFloat($element.css(\"marginBottom\")) || 0;\r\n        var offsetHeight = $element.get(0).offsetHeight;\r\n        return offsetHeight + marginTop + marginBottom\r\n    },\r\n    isVisible: function() {\r\n        return true\r\n    },\r\n    getTemplate: function(name) {\r\n        return this.component._getTemplate(name)\r\n    },\r\n    render: function($parent, options) {\r\n        var $element = this._$element;\r\n        var isVisible = this.isVisible();\r\n        if (!$element && !$parent) {\r\n            return\r\n        }\r\n        this._requireReady = false;\r\n        if (!$element) {\r\n            $element = this._$element = $(\"<div>\").appendTo($parent);\r\n            this._$parent = $parent\r\n        }\r\n        $element.toggleClass(\"dx-hidden\", !isVisible);\r\n        if (isVisible) {\r\n            this.component._optionCache = {};\r\n            this._renderCore(options);\r\n            this.component._optionCache = void 0;\r\n            this.renderCompleted.fire(options)\r\n        }\r\n    },\r\n    resize: function() {\r\n        this.isResizing = true;\r\n        this._resizeCore();\r\n        this.resizeCompleted.fire();\r\n        this.isResizing = false\r\n    },\r\n    focus: function() {\r\n        eventsEngine.trigger(this.element(), \"focus\")\r\n    }\r\n});\r\nvar MODULES_ORDER_MAX_INDEX = 1e6;\r\nvar processModules = function(that, componentClass) {\r\n    var modules = componentClass.modules;\r\n    var modulesOrder = componentClass.modulesOrder;\r\n    var controllerTypes = componentClass.controllerTypes || {};\r\n    var viewTypes = componentClass.viewTypes || {};\r\n    if (!componentClass.controllerTypes) {\r\n        if (modulesOrder) {\r\n            modules.sort((function(module1, module2) {\r\n                var orderIndex1 = inArray(module1.name, modulesOrder);\r\n                var orderIndex2 = inArray(module2.name, modulesOrder);\r\n                if (orderIndex1 < 0) {\r\n                    orderIndex1 = MODULES_ORDER_MAX_INDEX\r\n                }\r\n                if (orderIndex2 < 0) {\r\n                    orderIndex2 = MODULES_ORDER_MAX_INDEX\r\n                }\r\n                return orderIndex1 - orderIndex2\r\n            }))\r\n        }\r\n        each(modules, (function() {\r\n            var controllers = this.controllers;\r\n            var moduleName = this.name;\r\n            var views = this.views;\r\n            controllers && each(controllers, (function(name, type) {\r\n                if (controllerTypes[name]) {\r\n                    throw errors.Error(\"E1001\", moduleName, name)\r\n                } else if (!(type && type.subclassOf && type.subclassOf(Controller))) {\r\n                    type.subclassOf(Controller);\r\n                    throw errors.Error(\"E1002\", moduleName, name)\r\n                }\r\n                controllerTypes[name] = type\r\n            }));\r\n            views && each(views, (function(name, type) {\r\n                if (viewTypes[name]) {\r\n                    throw errors.Error(\"E1003\", moduleName, name)\r\n                } else if (!(type && type.subclassOf && type.subclassOf(View))) {\r\n                    throw errors.Error(\"E1004\", moduleName, name)\r\n                }\r\n                viewTypes[name] = type\r\n            }))\r\n        }));\r\n        each(modules, (function() {\r\n            var extenders = this.extenders;\r\n            if (extenders) {\r\n                extenders.controllers && each(extenders.controllers, (function(name, extender) {\r\n                    if (controllerTypes[name]) {\r\n                        controllerTypes[name] = controllerTypes[name].inherit(extender)\r\n                    }\r\n                }));\r\n                extenders.views && each(extenders.views, (function(name, extender) {\r\n                    if (viewTypes[name]) {\r\n                        viewTypes[name] = viewTypes[name].inherit(extender)\r\n                    }\r\n                }))\r\n            }\r\n        }));\r\n        componentClass.controllerTypes = controllerTypes;\r\n        componentClass.viewTypes = viewTypes\r\n    }\r\n    var createModuleItems = function(moduleTypes) {\r\n        var moduleItems = {};\r\n        each(moduleTypes, (function(name, moduleType) {\r\n            var moduleItem = new moduleType(that);\r\n            moduleItem.name = name;\r\n            ! function(that, name, moduleItem) {\r\n                var publicMethods = moduleItem.publicMethods();\r\n                if (publicMethods) {\r\n                    each(publicMethods, (function(index, methodName) {\r\n                        if (moduleItem[methodName]) {\r\n                            if (!that[methodName]) {\r\n                                that[methodName] = function() {\r\n                                    return moduleItem[methodName].apply(moduleItem, arguments)\r\n                                }\r\n                            } else {\r\n                                throw errors.Error(\"E1005\", methodName)\r\n                            }\r\n                        } else {\r\n                            throw errors.Error(\"E1006\", name, methodName)\r\n                        }\r\n                    }))\r\n                }\r\n            }(that, name, moduleItem);\r\n            moduleItems[name] = moduleItem\r\n        }));\r\n        return moduleItems\r\n    };\r\n    that._controllers = createModuleItems(controllerTypes);\r\n    that._views = createModuleItems(viewTypes)\r\n};\r\nvar callModuleItemsMethod = function(that, methodName, args) {\r\n    args = args || [];\r\n    if (that._controllers) {\r\n        each(that._controllers, (function() {\r\n            this[methodName] && this[methodName].apply(this, args)\r\n        }))\r\n    }\r\n    if (that._views) {\r\n        each(that._views, (function() {\r\n            this[methodName] && this[methodName].apply(this, args)\r\n        }))\r\n    }\r\n};\r\nexport default {\r\n    modules: [],\r\n    View: View,\r\n    ViewController: ViewController,\r\n    Controller: Controller,\r\n    registerModule: function(name, module) {\r\n        var modules = this.modules;\r\n        for (var i = 0; i < modules.length; i++) {\r\n            if (modules[i].name === name) {\r\n                return\r\n            }\r\n        }\r\n        module.name = name;\r\n        modules.push(module);\r\n        delete this.controllerTypes;\r\n        delete this.viewTypes\r\n    },\r\n    registerModulesOrder: function(moduleNames) {\r\n        this.modulesOrder = moduleNames\r\n    },\r\n    unregisterModule: function(name) {\r\n        this.modules = grep(this.modules, (function(module) {\r\n            return module.name !== name\r\n        }));\r\n        delete this.controllerTypes;\r\n        delete this.viewTypes\r\n    },\r\n    processModules: processModules,\r\n    callModuleItemsMethod: callModuleItemsMethod\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\r\nimport modules from \"../grid_core/ui.grid_core.modules\";\r\nexport default _extends({}, modules, gridCoreUtils, {\r\n    modules: []\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_state_mixin.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nvar COLUMN_INDICATORS_CLASS = \"dx-column-indicators\";\r\nvar GROUP_PANEL_ITEM_CLASS = \"dx-group-panel-item\";\r\nexport default {\r\n    _applyColumnState: function(options) {\r\n        var _that$component;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var columnAlignment = this._getColumnAlignment(options.column.alignment, rtlEnabled);\r\n        var parameters = extend(true, {\r\n            columnAlignment: columnAlignment\r\n        }, options);\r\n        var isGroupPanelItem = parameters.rootElement.hasClass(GROUP_PANEL_ITEM_CLASS);\r\n        var $indicatorsContainer = this._createIndicatorContainer(parameters, isGroupPanelItem);\r\n        var $span = $(\"<span>\").addClass(this._getIndicatorClassName(options.name));\r\n        var columnsController = null === (_that$component = this.component) || void 0 === _that$component ? void 0 : _that$component.getController(\"columns\");\r\n        var indicatorAlignment = (null === columnsController || void 0 === columnsController ? void 0 : columnsController.getHeaderContentAlignment(columnAlignment)) || columnAlignment;\r\n        parameters.container = $indicatorsContainer;\r\n        parameters.indicator = $span;\r\n        this._renderIndicator(parameters);\r\n        $indicatorsContainer[(isGroupPanelItem || !options.showColumnLines) && \"left\" === indicatorAlignment ? \"appendTo\" : \"prependTo\"](options.rootElement);\r\n        return $span\r\n    },\r\n    _getIndicatorClassName: noop,\r\n    _getColumnAlignment: function(alignment, rtlEnabled) {\r\n        rtlEnabled = rtlEnabled || this.option(\"rtlEnabled\");\r\n        return alignment && \"center\" !== alignment ? alignment : getDefaultAlignment(rtlEnabled)\r\n    },\r\n    _createIndicatorContainer: function(options, ignoreIndicatorAlignment) {\r\n        var $indicatorsContainer = this._getIndicatorContainer(options.rootElement);\r\n        var indicatorAlignment = \"left\" === options.columnAlignment ? \"right\" : \"left\";\r\n        if (!$indicatorsContainer.length) {\r\n            $indicatorsContainer = $(\"<div>\").addClass(COLUMN_INDICATORS_CLASS)\r\n        }\r\n        this.setAria(\"role\", \"presentation\", $indicatorsContainer);\r\n        return $indicatorsContainer.css(\"float\", options.showColumnLines && !ignoreIndicatorAlignment ? indicatorAlignment : null)\r\n    },\r\n    _getIndicatorContainer: function($cell) {\r\n        return $cell && $cell.find(\".\" + COLUMN_INDICATORS_CLASS)\r\n    },\r\n    _getIndicatorElements: function($cell) {\r\n        var $indicatorContainer = this._getIndicatorContainer($cell);\r\n        return $indicatorContainer && $indicatorContainer.children()\r\n    },\r\n    _renderIndicator: function(options) {\r\n        var $container = options.container;\r\n        var $indicator = options.indicator;\r\n        $container && $indicator && $container.append($indicator)\r\n    },\r\n    _updateIndicators: function(indicatorName) {\r\n        var columns = this.getColumns();\r\n        var $cells = this.getColumnElements();\r\n        var $cell;\r\n        if (!$cells || columns.length !== $cells.length) {\r\n            return\r\n        }\r\n        for (var i = 0; i < columns.length; i++) {\r\n            $cell = $cells.eq(i);\r\n            this._updateIndicator($cell, columns[i], indicatorName);\r\n            var rowOptions = $cell.parent().data(\"options\");\r\n            if (rowOptions && rowOptions.cells) {\r\n                rowOptions.cells[$cell.index()].column = columns[i]\r\n            }\r\n        }\r\n    },\r\n    _updateIndicator: function($cell, column, indicatorName) {\r\n        if (!column.command) {\r\n            return this._applyColumnState({\r\n                name: indicatorName,\r\n                rootElement: $cell,\r\n                column: column,\r\n                showColumnLines: this.option(\"showColumnLines\")\r\n            })\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_view.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getWidth,\r\n    getOuterHeight,\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    data as elementData\r\n} from \"../../core/element_data\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    name as dblclickEvent\r\n} from \"../../events/double_click\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    setWidth\r\n} from \"../../core/utils/style\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    isRenderer,\r\n    isFunction,\r\n    isString,\r\n    isDefined,\r\n    isNumeric\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getBoundingRect,\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport * as iteratorUtils from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport columnStateMixin from \"./ui.grid_core.column_state_mixin\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    nativeScrolling\r\n} from \"../../core/utils/support\";\r\nvar SCROLL_CONTAINER_CLASS = \"scroll-container\";\r\nvar SCROLLABLE_SIMULATED_CLASS = \"scrollable-simulated\";\r\nvar GROUP_SPACE_CLASS = \"group-space\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar TABLE_CLASS = \"table\";\r\nvar TABLE_FIXED_CLASS = \"table-fixed\";\r\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar FILTER_ROW_CLASS = \"filter-row\";\r\nvar ERROR_ROW_CLASS = \"dx-error-row\";\r\nvar CELL_UPDATED_ANIMATION_CLASS = \"cell-updated-animation\";\r\nvar HIDDEN_COLUMNS_WIDTH = \"0.0001px\";\r\nvar CELL_HINT_VISIBLE = \"dxCellHintVisible\";\r\nvar FORM_FIELD_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\r\nvar appendElementTemplate = {\r\n    render: function(options) {\r\n        options.container.append(options.content)\r\n    }\r\n};\r\nvar subscribeToRowEvents = function(that, $table) {\r\n    var touchTarget;\r\n    var touchCurrentTarget;\r\n    var timeoutId;\r\n\r\n    function clearTouchTargets(timeout) {\r\n        return setTimeout((function() {\r\n            touchTarget = touchCurrentTarget = null\r\n        }), timeout)\r\n    }\r\n    eventsEngine.on($table, \"touchstart touchend\", \".dx-row\", (function(e) {\r\n        clearTimeout(timeoutId);\r\n        if (\"touchstart\" === e.type) {\r\n            touchTarget = e.target;\r\n            touchCurrentTarget = e.currentTarget;\r\n            timeoutId = clearTouchTargets(1e3)\r\n        } else {\r\n            timeoutId = clearTouchTargets()\r\n        }\r\n    }));\r\n    eventsEngine.on($table, [clickEventName, dblclickEvent, pointerEvents.down].join(\" \"), \".dx-row\", {\r\n        useNative: that._isNativeClick()\r\n    }, that.createAction((function(e) {\r\n        var event = e.event;\r\n        if (touchTarget) {\r\n            event.target = touchTarget;\r\n            event.currentTarget = touchCurrentTarget\r\n        }\r\n        if (!$(event.target).closest(\"a\").length) {\r\n            e.rowIndex = that.getRowIndex(event.currentTarget);\r\n            if (e.rowIndex >= 0) {\r\n                e.rowElement = getPublicElement($(event.currentTarget));\r\n                e.columns = that.getColumns();\r\n                if (event.type === pointerEvents.down) {\r\n                    that._rowPointerDown(e)\r\n                } else if (event.type === clickEventName) {\r\n                    that._rowClick(e)\r\n                } else {\r\n                    that._rowDblClick(e)\r\n                }\r\n            }\r\n        }\r\n    })))\r\n};\r\nvar getWidthStyle = function(width) {\r\n    if (\"auto\" === width) {\r\n        return \"\"\r\n    }\r\n    return isNumeric(width) ? width + \"px\" : width\r\n};\r\nvar setCellWidth = function(cell, column, width) {\r\n    cell.style.width = cell.style.maxWidth = \"auto\" === column.width ? \"\" : width\r\n};\r\nvar copyAttributes = function(element, newElement) {\r\n    if (!element || !newElement) {\r\n        return\r\n    }\r\n    var oldAttributes = element.attributes;\r\n    var newAttributes = newElement.attributes;\r\n    var i;\r\n    for (i = 0; i < oldAttributes.length; i++) {\r\n        var name = oldAttributes[i].nodeName;\r\n        if (!newElement.hasAttribute(name)) {\r\n            element.removeAttribute(name)\r\n        }\r\n    }\r\n    for (i = 0; i < newAttributes.length; i++) {\r\n        element.setAttribute(newAttributes[i].nodeName, newAttributes[i].nodeValue)\r\n    }\r\n};\r\nexport var ColumnsView = modules.View.inherit(columnStateMixin).inherit({\r\n    _createScrollableOptions: function() {\r\n        var scrollingOptions = this.option(\"scrolling\");\r\n        var useNativeScrolling = this.option(\"scrolling.useNative\");\r\n        var options = extend({}, scrollingOptions, {\r\n            direction: \"both\",\r\n            bounceEnabled: false,\r\n            useKeyboard: false\r\n        });\r\n        if (void 0 === useNativeScrolling) {\r\n            useNativeScrolling = true\r\n        }\r\n        if (\"auto\" === useNativeScrolling) {\r\n            delete options.useNative;\r\n            delete options.useSimulatedScrollbar\r\n        } else {\r\n            options.useNative = !!useNativeScrolling;\r\n            options.useSimulatedScrollbar = !useNativeScrolling\r\n        }\r\n        return options\r\n    },\r\n    _updateCell: function($cell, parameters) {\r\n        if (parameters.rowType) {\r\n            this._cellPrepared($cell, parameters)\r\n        }\r\n    },\r\n    _createCell: function(options) {\r\n        var column = options.column;\r\n        var alignment = column.alignment || getDefaultAlignment(this.option(\"rtlEnabled\"));\r\n        var cell = domAdapter.createElement(\"td\");\r\n        cell.style.textAlign = alignment;\r\n        var $cell = $(cell);\r\n        if (\"data\" === options.rowType && column.headerId && !column.type) {\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                this.setAria(\"describedby\", column.headerId, $cell)\r\n            }\r\n        }\r\n        if (column.cssClass) {\r\n            $cell.addClass(column.cssClass)\r\n        }\r\n        if (\"expand\" === column.command) {\r\n            $cell.addClass(column.cssClass);\r\n            $cell.addClass(this.addWidgetPrefix(GROUP_SPACE_CLASS))\r\n        }\r\n        if (column.colspan > 1) {\r\n            $cell.attr(\"colSpan\", column.colspan)\r\n        } else if (!column.isBand && \"auto\" !== column.visibleWidth && this.option(\"columnAutoWidth\")) {\r\n            if (column.width || column.minWidth) {\r\n                cell.style.minWidth = getWidthStyle(column.minWidth || column.width)\r\n            }\r\n            if (column.width) {\r\n                setCellWidth(cell, column, getWidthStyle(column.width))\r\n            }\r\n        }\r\n        return $cell\r\n    },\r\n    _createRow: function(rowObject, tagName) {\r\n        tagName = tagName || \"tr\";\r\n        var $element = $(\"<\".concat(tagName, \">\")).addClass(ROW_CLASS);\r\n        this.setAria(\"role\", \"row\", $element);\r\n        return $element\r\n    },\r\n    _isAltRow: function(row) {\r\n        return row && row.dataIndex % 2 === 1\r\n    },\r\n    _createTable: function(columns, isAppend) {\r\n        var that = this;\r\n        var $table = $(\"<table>\").addClass(that.addWidgetPrefix(TABLE_CLASS)).addClass(that.addWidgetPrefix(TABLE_FIXED_CLASS));\r\n        if (columns && !isAppend) {\r\n            $table.append(that._createColGroup(columns));\r\n            if (browser.safari) {\r\n                $table.append($(\"<thead>\").append(\"<tr>\"))\r\n            }\r\n            that.setAria(\"role\", \"presentation\", $table)\r\n        } else {\r\n            that.setAria(\"hidden\", true, $table)\r\n        }\r\n        this.setAria(\"role\", \"presentation\", $(\"<tbody>\").appendTo($table));\r\n        if (isAppend) {\r\n            return $table\r\n        }\r\n        if (browser.mozilla) {\r\n            eventsEngine.on($table, \"mousedown\", \"td\", (function(e) {\r\n                if (e.ctrlKey) {\r\n                    e.preventDefault()\r\n                }\r\n            }))\r\n        }\r\n        if (that.option(\"cellHintEnabled\")) {\r\n            eventsEngine.on($table, \"mousemove\", \".dx-row > td\", this.createAction((function(args) {\r\n                var e = args.event;\r\n                var $element = $(e.target);\r\n                var $cell = $(e.currentTarget);\r\n                var $row = $cell.parent();\r\n                var isDataRow = $row.hasClass(\"dx-data-row\");\r\n                var isHeaderRow = $row.hasClass(\"dx-header-row\");\r\n                var isGroupRow = $row.hasClass(GROUP_ROW_CLASS);\r\n                var isMasterDetailRow = $row.hasClass(DETAIL_ROW_CLASS);\r\n                var isFilterRow = $row.hasClass(that.addWidgetPrefix(FILTER_ROW_CLASS));\r\n                var visibleColumns = that._columnsController.getVisibleColumns();\r\n                var rowOptions = $row.data(\"options\");\r\n                var columnIndex = $cell.index();\r\n                var cellOptions = rowOptions && rowOptions.cells && rowOptions.cells[columnIndex];\r\n                var column = cellOptions ? cellOptions.column : visibleColumns[columnIndex];\r\n                if (!isMasterDetailRow && !isFilterRow && (!isDataRow || isDataRow && column && !column.cellTemplate) && (!isHeaderRow || isHeaderRow && column && !column.headerCellTemplate) && (!isGroupRow || isGroupRow && column && (void 0 === column.groupIndex || !column.groupCellTemplate))) {\r\n                    if ($element.data(CELL_HINT_VISIBLE)) {\r\n                        $element.removeAttr(\"title\");\r\n                        $element.data(CELL_HINT_VISIBLE, false)\r\n                    }\r\n                    var difference = $element[0].scrollWidth - $element[0].clientWidth;\r\n                    if (difference > 0 && !isDefined($element.attr(\"title\"))) {\r\n                        $element.attr(\"title\", $element.text());\r\n                        $element.data(CELL_HINT_VISIBLE, true)\r\n                    }\r\n                }\r\n            })))\r\n        }\r\n        var getOptions = function(event) {\r\n            var $cell = $(event.currentTarget);\r\n            var $fieldItemContent = $(event.target).closest(\".\" + FORM_FIELD_ITEM_CONTENT_CLASS);\r\n            var $row = $cell.parent();\r\n            var rowOptions = $row.data(\"options\");\r\n            var options = rowOptions && rowOptions.cells && rowOptions.cells[$cell.index()];\r\n            if (!$cell.closest(\"table\").is(event.delegateTarget)) {\r\n                return\r\n            }\r\n            var resultOptions = extend({}, options, {\r\n                cellElement: getPublicElement($cell),\r\n                event: event,\r\n                eventType: event.type\r\n            });\r\n            resultOptions.rowIndex = that.getRowIndex($row);\r\n            if ($fieldItemContent.length) {\r\n                var formItemOptions = $fieldItemContent.data(\"dx-form-item\");\r\n                if (formItemOptions.column) {\r\n                    resultOptions.column = formItemOptions.column;\r\n                    resultOptions.columnIndex = that._columnsController.getVisibleIndex(resultOptions.column.index)\r\n                }\r\n            }\r\n            return resultOptions\r\n        };\r\n        eventsEngine.on($table, \"mouseover\", \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellHoverChanged\", options)\r\n        }));\r\n        eventsEngine.on($table, \"mouseout\", \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellHoverChanged\", options)\r\n        }));\r\n        eventsEngine.on($table, clickEventName, \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellClick\", options)\r\n        }));\r\n        eventsEngine.on($table, dblclickEvent, \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellDblClick\", options)\r\n        }));\r\n        subscribeToRowEvents(that, $table);\r\n        return $table\r\n    },\r\n    _isNativeClick: noop,\r\n    _rowPointerDown: noop,\r\n    _rowClick: noop,\r\n    _rowDblClick: noop,\r\n    _createColGroup: function(columns) {\r\n        var colgroupElement = $(\"<colgroup>\");\r\n        for (var i = 0; i < columns.length; i++) {\r\n            var colspan = columns[i].colspan || 1;\r\n            for (var j = 0; j < colspan; j++) {\r\n                colgroupElement.append(this._createCol(columns[i]))\r\n            }\r\n        }\r\n        return colgroupElement\r\n    },\r\n    _createCol: function(column) {\r\n        var width = column.visibleWidth || column.width;\r\n        if (\"adaptiveHidden\" === width) {\r\n            width = HIDDEN_COLUMNS_WIDTH\r\n        }\r\n        var col = $(\"<col>\");\r\n        setWidth(col, width);\r\n        return col\r\n    },\r\n    renderDelayedTemplates: function(change) {\r\n        var delayedTemplates = this._delayedTemplates;\r\n        var syncTemplates = delayedTemplates.filter(template => !template.async);\r\n        var asyncTemplates = delayedTemplates.filter(template => template.async);\r\n        this._delayedTemplates = [];\r\n        this._renderDelayedTemplatesCore(syncTemplates, false, change);\r\n        this._renderDelayedTemplatesCoreAsync(asyncTemplates)\r\n    },\r\n    _renderDelayedTemplatesCoreAsync: function(templates) {\r\n        var that = this;\r\n        if (templates.length) {\r\n            getWindow().setTimeout((function() {\r\n                that._renderDelayedTemplatesCore(templates, true)\r\n            }))\r\n        }\r\n    },\r\n    _renderDelayedTemplatesCore: function(templates, isAsync, change) {\r\n        var date = new Date;\r\n        while (templates.length) {\r\n            var templateParameters = templates.shift();\r\n            var options = templateParameters.options;\r\n            var doc = domAdapter.getDocument();\r\n            if (!isAsync || $(options.container).closest(doc).length) {\r\n                if (change) {\r\n                    options.change = change\r\n                }\r\n                templateParameters.template.render(options)\r\n            }\r\n            if (isAsync && new Date - date > 30) {\r\n                this._renderDelayedTemplatesCoreAsync(templates);\r\n                break\r\n            }\r\n        }\r\n        if (!templates.length && this._delayedTemplates.length) {\r\n            this.renderDelayedTemplates()\r\n        }\r\n    },\r\n    _processTemplate: function(template) {\r\n        var renderingTemplate;\r\n        if (template && template.render && !isRenderer(template)) {\r\n            renderingTemplate = {\r\n                allowRenderToDetachedContainer: template.allowRenderToDetachedContainer,\r\n                render: function(options) {\r\n                    template.render(options.container, options.model, options.change);\r\n                    options.deferred && options.deferred.resolve()\r\n                }\r\n            }\r\n        } else if (isFunction(template)) {\r\n            renderingTemplate = {\r\n                render: function(options) {\r\n                    var renderedTemplate = template(getPublicElement(options.container), options.model, options.change);\r\n                    if (renderedTemplate && (renderedTemplate.nodeType || isRenderer(renderedTemplate))) {\r\n                        options.container.append(renderedTemplate)\r\n                    }\r\n                    options.deferred && options.deferred.resolve()\r\n                }\r\n            }\r\n        } else {\r\n            var templateID = isString(template) ? template : $(template).attr(\"id\");\r\n            if (!templateID) {\r\n                renderingTemplate = this.getTemplate(template)\r\n            } else {\r\n                if (!this._templatesCache[templateID]) {\r\n                    this._templatesCache[templateID] = this.getTemplate(template)\r\n                }\r\n                renderingTemplate = this._templatesCache[templateID]\r\n            }\r\n        }\r\n        return renderingTemplate\r\n    },\r\n    renderTemplate: function(container, template, options, allowRenderToDetachedContainer, change) {\r\n        var renderingTemplate = this._processTemplate(template, options);\r\n        var column = options.column;\r\n        var isDataRow = \"data\" === options.rowType;\r\n        var templateDeferred = new Deferred;\r\n        var templateOptions = {\r\n            container: container,\r\n            model: options,\r\n            deferred: templateDeferred,\r\n            onRendered: () => {\r\n                templateDeferred.resolve()\r\n            }\r\n        };\r\n        if (renderingTemplate) {\r\n            options.component = this.component;\r\n            var async = column && (column.renderAsync && isDataRow || this.option(\"renderAsync\") && (false !== column.renderAsync && (column.command || column.showEditorAlways) && isDataRow || \"filter\" === options.rowType));\r\n            if ((renderingTemplate.allowRenderToDetachedContainer || allowRenderToDetachedContainer) && !async) {\r\n                renderingTemplate.render(templateOptions)\r\n            } else {\r\n                this._delayedTemplates.push({\r\n                    template: renderingTemplate,\r\n                    options: templateOptions,\r\n                    async: async\r\n                })\r\n            }\r\n            if (change) {\r\n                change.templateDeferreds = change.templateDeferreds || [];\r\n                change.templateDeferreds.push(templateDeferred)\r\n            }\r\n        } else {\r\n            templateDeferred.reject()\r\n        }\r\n        return templateDeferred.promise()\r\n    },\r\n    _getBodies: function(tableElement) {\r\n        return $(tableElement).children(\"tbody\").not(\".dx-header\").not(\".dx-footer\")\r\n    },\r\n    _wrapRowIfNeed: function($table, $row) {\r\n        var hasDataRowTemplate = this.option().rowTemplate || this.option(\"dataRowTemplate\");\r\n        var $tBodies = hasDataRowTemplate && this._getBodies(this._tableElement || $table);\r\n        if ($tBodies && $tBodies.filter(\".\" + ROW_CLASS).length) {\r\n            var $tbody = $(\"<tbody>\").addClass($row.attr(\"class\"));\r\n            this.setAria(\"role\", \"presentation\", $tbody);\r\n            return $tbody.append($row)\r\n        }\r\n        return $row\r\n    },\r\n    _appendRow: function($table, $row, appendTemplate) {\r\n        appendTemplate = appendTemplate || appendElementTemplate;\r\n        appendTemplate.render({\r\n            content: $row,\r\n            container: $table\r\n        })\r\n    },\r\n    _resizeCore: function() {\r\n        var scrollLeft = this._scrollLeft;\r\n        if (scrollLeft >= 0) {\r\n            this._scrollLeft = 0;\r\n            this.scrollTo({\r\n                left: scrollLeft\r\n            })\r\n        }\r\n    },\r\n    _renderCore: function(e) {\r\n        var $root = this.element().parent();\r\n        if (!$root || $root.parent().length) {\r\n            this.renderDelayedTemplates(e)\r\n        }\r\n    },\r\n    _renderTable: function(options) {\r\n        options = options || {};\r\n        options.columns = this._columnsController.getVisibleColumns();\r\n        var changeType = options.change && options.change.changeType;\r\n        var $table = this._createTable(options.columns, \"append\" === changeType || \"prepend\" === changeType || \"update\" === changeType);\r\n        this._renderRows($table, options);\r\n        return $table\r\n    },\r\n    _renderRows: function($table, options) {\r\n        var rows = this._getRows(options.change);\r\n        var columnIndices = options.change && options.change.columnIndices || [];\r\n        var changeTypes = options.change && options.change.changeTypes || [];\r\n        for (var i = 0; i < rows.length; i++) {\r\n            this._renderRow($table, extend({\r\n                row: rows[i],\r\n                columnIndices: columnIndices[i],\r\n                changeType: changeTypes[i]\r\n            }, options))\r\n        }\r\n    },\r\n    _renderRow: function($table, options) {\r\n        if (!options.columnIndices) {\r\n            options.row.cells = []\r\n        }\r\n        var $row = this._createRow(options.row);\r\n        var $wrappedRow = this._wrapRowIfNeed($table, $row);\r\n        if (\"remove\" !== options.changeType) {\r\n            this._renderCells($row, options)\r\n        }\r\n        this._appendRow($table, $wrappedRow);\r\n        var rowOptions = extend({\r\n            columns: options.columns\r\n        }, options.row);\r\n        this._addWatchMethod(rowOptions, options.row);\r\n        this._rowPrepared($wrappedRow, rowOptions, options.row)\r\n    },\r\n    _needRenderCell: function(columnIndex, columnIndices) {\r\n        return !columnIndices || columnIndices.indexOf(columnIndex) >= 0\r\n    },\r\n    _renderCells: function($row, options) {\r\n        var columnIndex = 0;\r\n        var row = options.row;\r\n        var columns = options.columns;\r\n        for (var i = 0; i < columns.length; i++) {\r\n            if (this._needRenderCell(i, options.columnIndices)) {\r\n                this._renderCell($row, extend({\r\n                    column: columns[i],\r\n                    columnIndex: columnIndex,\r\n                    value: row.values && row.values[columnIndex],\r\n                    oldValue: row.oldValues && row.oldValues[columnIndex]\r\n                }, options))\r\n            }\r\n            if (columns[i].colspan > 1) {\r\n                columnIndex += columns[i].colspan\r\n            } else {\r\n                columnIndex++\r\n            }\r\n        }\r\n    },\r\n    _updateCells: function($rowElement, $newRowElement, columnIndices) {\r\n        var $cells = $rowElement.children();\r\n        var $newCells = $newRowElement.children();\r\n        var highlightChanges = this.option(\"highlightChanges\");\r\n        var cellUpdatedClass = this.addWidgetPrefix(CELL_UPDATED_ANIMATION_CLASS);\r\n        columnIndices.forEach((function(columnIndex, index) {\r\n            var $cell = $cells.eq(columnIndex);\r\n            var $newCell = $newCells.eq(index);\r\n            $cell.replaceWith($newCell);\r\n            if (highlightChanges && !$newCell.hasClass(\"dx-command-expand\")) {\r\n                $newCell.addClass(cellUpdatedClass)\r\n            }\r\n        }));\r\n        copyAttributes($rowElement.get(0), $newRowElement.get(0))\r\n    },\r\n    _setCellAriaAttributes: function($cell, cellOptions) {\r\n        if (\"freeSpace\" !== cellOptions.rowType) {\r\n            this.setAria(\"selected\", false, $cell);\r\n            this.setAria(\"role\", \"gridcell\", $cell);\r\n            var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n            var ariaColIndex = cellOptions.columnIndex + columnIndexOffset + 1;\r\n            this.setAria(\"colindex\", ariaColIndex, $cell)\r\n        }\r\n    },\r\n    _renderCell: function($row, options) {\r\n        var cellOptions = this._getCellOptions(options);\r\n        if (options.columnIndices) {\r\n            if (options.row.cells) {\r\n                options.row.cells[cellOptions.columnIndex] = cellOptions\r\n            }\r\n        } else {\r\n            options.row.cells.push(cellOptions)\r\n        }\r\n        var $cell = this._createCell(cellOptions);\r\n        this._setCellAriaAttributes($cell, cellOptions);\r\n        this._renderCellContent($cell, cellOptions);\r\n        $row.get(0).appendChild($cell.get(0));\r\n        return $cell\r\n    },\r\n    _renderCellContent: function($cell, options) {\r\n        var template = this._getCellTemplate(options);\r\n        when(!template || this.renderTemplate($cell, template, options)).done(() => {\r\n            this._updateCell($cell, options)\r\n        })\r\n    },\r\n    _getCellTemplate: function() {},\r\n    _getRows: function() {\r\n        return []\r\n    },\r\n    _getCellOptions: function(options) {\r\n        var cellOptions = {\r\n            column: options.column,\r\n            columnIndex: options.columnIndex,\r\n            rowType: options.row.rowType,\r\n            isAltRow: this._isAltRow(options.row)\r\n        };\r\n        this._addWatchMethod(cellOptions);\r\n        return cellOptions\r\n    },\r\n    _addWatchMethod: function(options, source) {\r\n        if (!this.option(\"repaintChangesOnly\")) {\r\n            return\r\n        }\r\n        var watchers = [];\r\n        source = source || options;\r\n        source.watch = source.watch || function(getter, updateValueFunc, updateRowFunc) {\r\n            var oldValue = getter(source.data);\r\n            var watcher = function(row) {\r\n                if (row && updateRowFunc) {\r\n                    updateRowFunc(row)\r\n                }\r\n                var newValue = getter(source.data);\r\n                if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\r\n                    if (row) {\r\n                        updateValueFunc(newValue)\r\n                    }\r\n                    oldValue = newValue\r\n                }\r\n            };\r\n            watchers.push(watcher);\r\n            return function() {\r\n                var index = watchers.indexOf(watcher);\r\n                if (index >= 0) {\r\n                    watchers.splice(index, 1)\r\n                }\r\n            }\r\n        };\r\n        source.update = source.update || function(row, keepRow) {\r\n            if (row) {\r\n                this.data = options.data = row.data;\r\n                this.rowIndex = options.rowIndex = row.rowIndex;\r\n                this.dataIndex = options.dataIndex = row.dataIndex;\r\n                this.isExpanded = options.isExpanded = row.isExpanded;\r\n                if (options.row && !keepRow) {\r\n                    options.row = row\r\n                }\r\n            }\r\n            watchers.forEach((function(watcher) {\r\n                watcher(row)\r\n            }))\r\n        };\r\n        if (source !== options) {\r\n            options.watch = source.watch.bind(source)\r\n        }\r\n        return options\r\n    },\r\n    _cellPrepared: function(cell, options) {\r\n        options.cellElement = getPublicElement($(cell));\r\n        this.executeAction(\"onCellPrepared\", options)\r\n    },\r\n    _rowPrepared: function($row, options) {\r\n        elementData($row.get(0), \"options\", options);\r\n        options.rowElement = getPublicElement($row);\r\n        this.executeAction(\"onRowPrepared\", options)\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var optionNames = e.optionNames;\r\n        if (gridCoreUtils.checkChanges(optionNames, [\"width\", \"visibleWidth\"])) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var widths = iteratorUtils.map(visibleColumns, (function(column) {\r\n                var width = column.visibleWidth || column.width;\r\n                return isDefined(width) ? width : \"auto\"\r\n            }));\r\n            this.setColumnWidths({\r\n                widths: widths,\r\n                optionNames: optionNames\r\n            });\r\n            return\r\n        }\r\n        if (!this._requireReady) {\r\n            this.render()\r\n        }\r\n    },\r\n    getCellIndex: function($cell) {\r\n        var cellIndex = $cell.length ? $cell[0].cellIndex : -1;\r\n        return cellIndex\r\n    },\r\n    getTableElements: function() {\r\n        return this._tableElement || $()\r\n    },\r\n    getTableElement: function() {\r\n        return this._tableElement\r\n    },\r\n    setTableElement: function(tableElement) {\r\n        this._tableElement = tableElement\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        switch (args.name) {\r\n            case \"cellHintEnabled\":\r\n            case \"onCellPrepared\":\r\n            case \"onRowPrepared\":\r\n            case \"onCellHoverChanged\":\r\n                this._invalidate(true, true);\r\n                args.handled = true\r\n        }\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that._scrollLeft = -1;\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._dataController = that.getController(\"data\");\r\n        that._delayedTemplates = [];\r\n        that._templatesCache = {};\r\n        that.createAction(\"onCellClick\");\r\n        that.createAction(\"onRowClick\");\r\n        that.createAction(\"onCellDblClick\");\r\n        that.createAction(\"onRowDblClick\");\r\n        that.createAction(\"onCellHoverChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        that.createAction(\"onCellPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        that.createAction(\"onRowPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\",\r\n            afterExecute: function(e) {\r\n                that._afterRowPrepared(e)\r\n            }\r\n        });\r\n        that._columnsController.columnsChanged.add(that._columnOptionChanged.bind(that));\r\n        that._dataController && that._dataController.changed.add(that._handleDataChanged.bind(that))\r\n    },\r\n    _afterRowPrepared: noop,\r\n    _handleDataChanged: function() {},\r\n    callbackNames: function() {\r\n        return [\"scrollChanged\"]\r\n    },\r\n    _updateScrollLeftPosition: function() {\r\n        var scrollLeft = this._scrollLeft;\r\n        if (scrollLeft >= 0) {\r\n            this._scrollLeft = 0;\r\n            this.scrollTo({\r\n                left: scrollLeft\r\n            })\r\n        }\r\n    },\r\n    scrollTo: function(pos) {\r\n        var $element = this.element();\r\n        var $scrollContainer = $element && $element.children(\".\" + this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).not(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\r\n        if (isDefined(pos) && isDefined(pos.left) && this._scrollLeft !== pos.left) {\r\n            this._scrollLeft = pos.left;\r\n            $scrollContainer && $scrollContainer.scrollLeft(pos.left)\r\n        }\r\n    },\r\n    _wrapTableInScrollContainer: function($table) {\r\n        var $scrollContainer = $(\"<div>\");\r\n        var useNative = this.option(\"scrolling.useNative\");\r\n        if (false === useNative || \"auto\" === useNative && !nativeScrolling) {\r\n            $scrollContainer.addClass(this.addWidgetPrefix(SCROLLABLE_SIMULATED_CLASS))\r\n        }\r\n        eventsEngine.on($scrollContainer, \"scroll\", () => {\r\n            var scrollLeft = $scrollContainer.scrollLeft();\r\n            if (scrollLeft !== this._scrollLeft) {\r\n                this.scrollChanged.fire({\r\n                    left: scrollLeft\r\n                }, this.name)\r\n            }\r\n        });\r\n        $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_CLASS)).addClass(this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).append($table).appendTo(this.element());\r\n        this.setAria(\"role\", \"presentation\", $scrollContainer);\r\n        return $scrollContainer\r\n    },\r\n    _updateContent: function($newTableElement) {\r\n        this.setTableElement($newTableElement);\r\n        this._wrapTableInScrollContainer($newTableElement)\r\n    },\r\n    _findContentElement: noop,\r\n    _getWidths: function($cellElements) {\r\n        var result = [];\r\n        var width;\r\n        if ($cellElements) {\r\n            iteratorUtils.each($cellElements, (function(index, item) {\r\n                width = item.offsetWidth;\r\n                if (item.getBoundingClientRect) {\r\n                    var clientRect = getBoundingRect(item);\r\n                    if (clientRect.width > width - 1) {\r\n                        width = clientRect.width\r\n                    }\r\n                }\r\n                result.push(width)\r\n            }))\r\n        }\r\n        return result\r\n    },\r\n    getColumnWidths: function($tableElement) {\r\n        var result = [];\r\n        var $rows;\r\n        var $cells;\r\n        (this.option(\"forceApplyBindings\") || noop)();\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if ($tableElement) {\r\n            $rows = $tableElement.children(\"tbody:not(.dx-header)\").children();\r\n            for (var i = 0; i < $rows.length; i++) {\r\n                var $row = $rows.eq(i);\r\n                var isRowVisible = \"none\" !== $row.get(0).style.display && !$row.hasClass(\"dx-state-invisible\");\r\n                if (!$row.is(\".\" + GROUP_ROW_CLASS) && !$row.is(\".\" + DETAIL_ROW_CLASS) && !$row.is(\".\" + ERROR_ROW_CLASS) && isRowVisible) {\r\n                    $cells = $row.children(\"td\");\r\n                    break\r\n                }\r\n            }\r\n            result = this._getWidths($cells)\r\n        }\r\n        return result\r\n    },\r\n    getVisibleColumnIndex: function(columnIndex, rowIndex) {\r\n        return columnIndex\r\n    },\r\n    setColumnWidths: function(_ref) {\r\n        var {\r\n            widths: widths,\r\n            $tableElement: $tableElement,\r\n            columns: columns,\r\n            fixed: fixed\r\n        } = _ref;\r\n        var $cols;\r\n        var width;\r\n        var minWidth;\r\n        var columnIndex;\r\n        var columnAutoWidth = this.option(\"columnAutoWidth\");\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if ($tableElement && $tableElement.length && widths) {\r\n            columnIndex = 0;\r\n            $cols = $tableElement.children(\"colgroup\").children(\"col\");\r\n            setWidth($cols, \"auto\");\r\n            columns = columns || this.getColumns(null, $tableElement);\r\n            for (var i = 0; i < columns.length; i++) {\r\n                if (columnAutoWidth && !fixed) {\r\n                    width = columns[i].width;\r\n                    if (width && !columns[i].command) {\r\n                        width = columns[i].visibleWidth || width;\r\n                        width = getWidthStyle(width);\r\n                        minWidth = getWidthStyle(columns[i].minWidth || width);\r\n                        var $rows = $rows || $tableElement.children().children(\".dx-row\").not(\".\" + DETAIL_ROW_CLASS);\r\n                        for (var rowIndex = 0; rowIndex < $rows.length; rowIndex++) {\r\n                            var row = $rows[rowIndex];\r\n                            var cell = void 0;\r\n                            var visibleIndex = this.getVisibleColumnIndex(i, rowIndex);\r\n                            if (row.classList.contains(GROUP_ROW_CLASS)) {\r\n                                if (1 !== visibleIndex) {\r\n                                    cell = row.querySelector(\"td[aria-colindex='\".concat(visibleIndex + 1, \"']\"))\r\n                                }\r\n                            } else {\r\n                                cell = row.cells[visibleIndex]\r\n                            }\r\n                            if (cell) {\r\n                                setCellWidth(cell, columns[i], width);\r\n                                cell.style.minWidth = minWidth\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (columns[i].colspan) {\r\n                    columnIndex += columns[i].colspan;\r\n                    continue\r\n                }\r\n                width = widths[columnIndex];\r\n                if (\"adaptiveHidden\" === width) {\r\n                    width = HIDDEN_COLUMNS_WIDTH\r\n                }\r\n                if (\"number\" === typeof width) {\r\n                    width = width.toFixed(3) + \"px\"\r\n                }\r\n                setWidth($cols.eq(columnIndex), isDefined(width) ? width : \"auto\");\r\n                columnIndex++\r\n            }\r\n        }\r\n    },\r\n    getCellElements: function(rowIndex) {\r\n        return this._getCellElementsCore(rowIndex)\r\n    },\r\n    _getCellElementsCore: function(rowIndex) {\r\n        var $row = this._getRowElements().eq(rowIndex);\r\n        return $row.children()\r\n    },\r\n    _getCellElement: function(rowIndex, columnIdentifier) {\r\n        var $cell;\r\n        var $cells = this.getCellElements(rowIndex);\r\n        var columnVisibleIndex = this._getVisibleColumnIndex($cells, rowIndex, columnIdentifier);\r\n        if ($cells.length && columnVisibleIndex >= 0) {\r\n            $cell = $cells.eq(columnVisibleIndex)\r\n        }\r\n        if ($cell && $cell.length) {\r\n            return $cell\r\n        }\r\n    },\r\n    _getRowElement: function(rowIndex) {\r\n        var that = this;\r\n        var $rowElement = $();\r\n        var $tableElements = that.getTableElements();\r\n        iteratorUtils.each($tableElements, (function(_, tableElement) {\r\n            $rowElement = $rowElement.add(that._getRowElements($(tableElement)).eq(rowIndex))\r\n        }));\r\n        if ($rowElement.length) {\r\n            return $rowElement\r\n        }\r\n    },\r\n    getCellElement: function(rowIndex, columnIdentifier) {\r\n        return getPublicElement(this._getCellElement(rowIndex, columnIdentifier))\r\n    },\r\n    getRowElement: function(rowIndex) {\r\n        var $rows = this._getRowElement(rowIndex);\r\n        var elements = [];\r\n        if ($rows && !getPublicElement($rows).get) {\r\n            for (var i = 0; i < $rows.length; i++) {\r\n                elements.push($rows[i])\r\n            }\r\n        } else {\r\n            elements = $rows\r\n        }\r\n        return elements\r\n    },\r\n    _getVisibleColumnIndex: function($cells, rowIndex, columnIdentifier) {\r\n        if (isString(columnIdentifier)) {\r\n            var columnIndex = this._columnsController.columnOption(columnIdentifier, \"index\");\r\n            return this._columnsController.getVisibleIndex(columnIndex)\r\n        }\r\n        return columnIdentifier\r\n    },\r\n    getColumnElements: function() {},\r\n    getColumns: function(rowIndex) {\r\n        return this._columnsController.getVisibleColumns(rowIndex)\r\n    },\r\n    getCell: function(cellPosition, rows) {\r\n        var $rows = rows || this._getRowElements();\r\n        var $cells;\r\n        if ($rows.length > 0 && cellPosition.rowIndex >= 0) {\r\n            if (\"virtual\" !== this.option(\"scrolling.mode\") && \"virtual\" !== this.option(\"scrolling.rowRenderingMode\")) {\r\n                cellPosition.rowIndex = cellPosition.rowIndex < $rows.length ? cellPosition.rowIndex : $rows.length - 1\r\n            }\r\n            $cells = this.getCellElements(cellPosition.rowIndex);\r\n            if ($cells && $cells.length > 0) {\r\n                return $cells.eq($cells.length > cellPosition.columnIndex ? cellPosition.columnIndex : $cells.length - 1)\r\n            }\r\n        }\r\n    },\r\n    getRowsCount: function() {\r\n        var tableElement = this.getTableElement();\r\n        if (tableElement && 1 === tableElement.length) {\r\n            return tableElement[0].rows.length\r\n        }\r\n        return 0\r\n    },\r\n    _getRowElementsCore: function(tableElement) {\r\n        tableElement = tableElement || this.getTableElement();\r\n        if (tableElement) {\r\n            var hasRowTemplate = this.option().rowTemplate || this.option(\"dataRowTemplate\");\r\n            var tBodies = hasRowTemplate && tableElement.find(\"> tbody.\" + ROW_CLASS);\r\n            return tBodies && tBodies.length ? tBodies : tableElement.find(\"> tbody > .\" + ROW_CLASS + \", > .\" + ROW_CLASS)\r\n        }\r\n        return $()\r\n    },\r\n    _getRowElements: function(tableElement) {\r\n        return this._getRowElementsCore(tableElement)\r\n    },\r\n    getRowIndex: function($row) {\r\n        return this._getRowElements().index($row)\r\n    },\r\n    getBoundingRect: function() {},\r\n    getName: function() {},\r\n    setScrollerSpacing: function(width) {\r\n        var $element = this.element();\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        $element && $element.css({\r\n            paddingLeft: rtlEnabled ? width : \"\",\r\n            paddingRight: !rtlEnabled ? width : \"\"\r\n        })\r\n    },\r\n    isScrollbarVisible: function(isHorizontal) {\r\n        var $element = this.element();\r\n        var $tableElement = this._tableElement;\r\n        if ($element && $tableElement) {\r\n            return isHorizontal ? getOuterWidth($tableElement) - getWidth($element) > 0 : getOuterHeight($tableElement) - getHeight($element) > 0\r\n        }\r\n        return false\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/shared/accessibility.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nvar FOCUS_STATE_CLASS = \"dx-state-focused\";\r\nvar FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FOCUSED_ROW_SELECTOR = \".dx-row-focused\";\r\nvar GRID_ROW_SELECTOR = \".dx-datagrid-rowsview .dx-row\";\r\nvar GRID_CELL_SELECTOR = \"\".concat(GRID_ROW_SELECTOR, \" > td\");\r\nvar TREELIST_ROW_SELECTOR = \".dx-treelist-rowsview .dx-row\";\r\nvar TREELIST_CELL_SELECTOR = \"\".concat(TREELIST_ROW_SELECTOR, \" > td\");\r\nvar viewItemSelectorMap = {\r\n    groupPanel: [\".dx-datagrid-group-panel .dx-group-panel-item[tabindex]\"],\r\n    columnHeaders: [\".dx-datagrid-headers .dx-header-row > td.dx-datagrid-action\", \".dx-treelist-headers .dx-header-row > td.dx-treelist-action\"],\r\n    filterRow: [\".dx-datagrid-headers .dx-datagrid-filter-row .dx-editor-cell .dx-texteditor-input\", \".dx-treelist-headers .dx-treelist-filter-row .dx-editor-cell .dx-texteditor-input\"],\r\n    rowsView: [\"\".concat(FOCUSED_ROW_SELECTOR), \"\".concat(GRID_ROW_SELECTOR, \"[tabindex]\"), \"\".concat(GRID_CELL_SELECTOR, \"[tabindex]\"), \"\".concat(GRID_CELL_SELECTOR), \"\".concat(TREELIST_ROW_SELECTOR, \"[tabindex]\"), \"\".concat(TREELIST_CELL_SELECTOR, \"[tabindex]\"), \"\".concat(TREELIST_CELL_SELECTOR)],\r\n    footer: [\".dx-datagrid-total-footer .dx-datagrid-summary-item\", \".dx-treelist-total-footer .dx-treelist-summary-item\"],\r\n    filterPanel: [\".dx-datagrid-filter-panel .dx-icon-filter\", \".dx-treelist-filter-panel .dx-icon-filter\"],\r\n    pager: [\".dx-datagrid-pager [tabindex]\", \".dx-treelist-pager [tabindex]\"]\r\n};\r\nvar isMouseDown = false;\r\nvar isHiddenFocusing = false;\r\nvar focusedElementInfo = null;\r\n\r\nfunction processKeyDown(viewName, instance, event, action, $mainElement, executeKeyDown) {\r\n    var isHandled = fireKeyDownEvent(instance, event.originalEvent, executeKeyDown);\r\n    if (isHandled) {\r\n        return\r\n    }\r\n    var keyName = normalizeKeyName(event);\r\n    if (\"enter\" === keyName || \"space\" === keyName) {\r\n        saveFocusedElementInfo(event.target, instance);\r\n        action && action({\r\n            event: event\r\n        })\r\n    } else if (\"tab\" === keyName) {\r\n        $mainElement.addClass(FOCUS_STATE_CLASS)\r\n    } else {\r\n        selectView(viewName, instance, event)\r\n    }\r\n}\r\n\r\nfunction saveFocusedElementInfo(target, instance) {\r\n    var $target = $(target);\r\n    var ariaLabel = $target.attr(\"aria-label\");\r\n    var $activeElements = getActiveAccessibleElements(ariaLabel, instance.element());\r\n    var targetIndex = $activeElements.index($target);\r\n    focusedElementInfo = extend({}, {\r\n        ariaLabel: ariaLabel,\r\n        index: targetIndex\r\n    }, {\r\n        viewInstance: instance\r\n    })\r\n}\r\n\r\nfunction getActiveAccessibleElements(ariaLabel, viewElement) {\r\n    var $viewElement = $(viewElement);\r\n    var $activeElements;\r\n    if (ariaLabel) {\r\n        $activeElements = $viewElement.find('[aria-label=\"'.concat(ariaLabel, '\"][tabindex]'))\r\n    } else {\r\n        $activeElements = $viewElement.find(\"[tabindex]\")\r\n    }\r\n    return $activeElements\r\n}\r\n\r\nfunction findFocusedViewElement(viewSelectors) {\r\n    for (var index in viewSelectors) {\r\n        var selector = viewSelectors[index];\r\n        var $focusViewElement = $(selector).first();\r\n        if ($focusViewElement.length) {\r\n            return $focusViewElement\r\n        }\r\n    }\r\n}\r\n\r\nfunction fireKeyDownEvent(instance, event, executeAction) {\r\n    var args = {\r\n        event: event,\r\n        handled: false\r\n    };\r\n    if (executeAction) {\r\n        executeAction(args)\r\n    } else {\r\n        instance._createActionByOption(\"onKeyDown\")(args)\r\n    }\r\n    return args.handled\r\n}\r\n\r\nfunction onDocumentVisibilityChange() {\r\n    isHiddenFocusing = \"visible\" === domAdapter.getDocument().visibilityState\r\n}\r\nexport function subscribeVisibilityChange() {\r\n    eventsEngine.on(domAdapter.getDocument(), \"visibilitychange\", onDocumentVisibilityChange)\r\n}\r\nexport function unsubscribeVisibilityChange() {\r\n    eventsEngine.off(domAdapter.getDocument(), \"visibilitychange\", onDocumentVisibilityChange)\r\n}\r\nexport function hiddenFocus(element) {\r\n    isHiddenFocusing = true;\r\n    element.focus();\r\n    isHiddenFocusing = false\r\n}\r\nexport function registerKeyboardAction(viewName, instance, $element, selector, action, executeKeyDown) {\r\n    if (instance.option(\"useLegacyKeyboardNavigation\")) {\r\n        return noop\r\n    }\r\n    var getMainElement = () => $(instance.element());\r\n    var keyDownHandler = e => processKeyDown(viewName, instance, e, action, getMainElement(), executeKeyDown);\r\n    var mouseDownHandler = () => {\r\n        isMouseDown = true;\r\n        getMainElement().removeClass(FOCUS_STATE_CLASS)\r\n    };\r\n    var focusinHandler = () => {\r\n        var needShowOverlay = !isMouseDown && !isHiddenFocusing;\r\n        if (needShowOverlay) {\r\n            getMainElement().addClass(FOCUS_STATE_CLASS)\r\n        }\r\n        isMouseDown = false\r\n    };\r\n    eventsEngine.on($element, \"keydown\", selector, keyDownHandler);\r\n    eventsEngine.on($element, \"mousedown\", selector, mouseDownHandler);\r\n    eventsEngine.on($element, \"focusin\", selector, focusinHandler);\r\n    return () => {\r\n        eventsEngine.off($element, \"keydown\", selector, keyDownHandler);\r\n        eventsEngine.off($element, \"mousedown\", selector, mouseDownHandler);\r\n        eventsEngine.off($element, \"focusin\", selector, focusinHandler)\r\n    }\r\n}\r\nexport function restoreFocus(instance) {\r\n    if (!instance.option(\"useLegacyKeyboardNavigation\") && focusedElementInfo) {\r\n        var viewInstance = focusedElementInfo.viewInstance;\r\n        if (viewInstance) {\r\n            var $activeElements = getActiveAccessibleElements(focusedElementInfo.ariaLabel, viewInstance.element());\r\n            var $targetElement = $activeElements.eq(focusedElementInfo.index);\r\n            focusedElementInfo = null;\r\n            eventsEngine.trigger($targetElement, \"focus\")\r\n        }\r\n    }\r\n}\r\nexport function selectView(viewName, instance, event) {\r\n    var keyName = normalizeKeyName(event);\r\n    if (event.ctrlKey && (\"upArrow\" === keyName || \"downArrow\" === keyName)) {\r\n        var viewNames = Object.keys(viewItemSelectorMap);\r\n        var viewItemIndex = viewNames.indexOf(viewName);\r\n        while (viewItemIndex >= 0 && viewItemIndex < viewNames.length) {\r\n            viewItemIndex = \"upArrow\" === keyName ? --viewItemIndex : ++viewItemIndex;\r\n            var _viewName = viewNames[viewItemIndex];\r\n            var viewSelectors = viewItemSelectorMap[_viewName];\r\n            var $focusViewElement = findFocusedViewElement(viewSelectors);\r\n            if ($focusViewElement && $focusViewElement.length) {\r\n                $focusViewElement.attr(\"tabindex\", instance.option(\"tabindex\") || 0);\r\n                eventsEngine.trigger($focusViewElement, \"focus\");\r\n                $focusViewElement.removeClass(FOCUS_DISABLED_CLASS);\r\n                break\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function setTabIndex(instance, $element) {\r\n    if (!instance.option(\"useLegacyKeyboardnavigation\")) {\r\n        $element.attr(\"tabindex\", instance.option(\"tabindex\") || 0)\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.accessibility.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport * as accessibility from \"../../ui/shared/accessibility\";\r\nexport var registerKeyboardAction = function(viewName, instance, $element, selector, action) {\r\n    var keyboardController = instance.getController(\"keyboardNavigation\");\r\n    if (instance.option(\"useLegacyKeyboardNavigation\") || keyboardController && !keyboardController.isKeyboardEnabled()) {\r\n        return\r\n    }\r\n    instance.createAction(\"onKeyDown\");\r\n    accessibility.registerKeyboardAction(viewName, instance, $element, selector, action, args => {\r\n        instance.executeAction(\"onKeyDown\", args)\r\n    })\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_headers.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    ColumnsView\r\n} from \"./ui.grid_core.columns_view\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    registerKeyboardAction\r\n} from \"./ui.grid_core.accessibility\";\r\nvar CELL_CONTENT_CLASS = \"text-content\";\r\nvar HEADERS_CLASS = \"headers\";\r\nvar NOWRAP_CLASS = \"nowrap\";\r\nvar ROW_CLASS_SELECTOR = \".dx-row\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar COLUMN_LINES_CLASS = \"dx-column-lines\";\r\nvar CONTEXT_MENU_SORT_ASC_ICON = \"context-menu-sort-asc\";\r\nvar CONTEXT_MENU_SORT_DESC_ICON = \"context-menu-sort-desc\";\r\nvar CONTEXT_MENU_SORT_NONE_ICON = \"context-menu-sort-none\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar VISIBILITY_HIDDEN_CLASS = \"dx-visibility-hidden\";\r\nvar TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX = \"dx-text-content-alignment-\";\r\nvar SORT_INDICATOR_CLASS = \"dx-sort-indicator\";\r\nvar SORT_INDEX_INDICATOR_CLASS = \"dx-sort-index-indicator\";\r\nvar HEADER_FILTER_CLASS_SELECTOR = \".dx-header-filter\";\r\nvar HEADER_FILTER_INDICATOR_CLASS = \"dx-header-filter-indicator\";\r\nvar MULTI_ROW_HEADER_CLASS = \"dx-header-multi-row\";\r\nexport var columnHeadersModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            showColumnHeaders: true,\r\n            cellHintEnabled: true\r\n        }\r\n    },\r\n    views: {\r\n        columnHeadersView: ColumnsView.inherit(function() {\r\n            var createCellContent = function(that, $cell, options) {\r\n                var $cellContent = $(\"<div>\").addClass(that.addWidgetPrefix(CELL_CONTENT_CLASS));\r\n                that.setAria(\"role\", \"presentation\", $cellContent);\r\n                addCssClassesToCellContent(that, $cell, options.column, $cellContent);\r\n                var showColumnLines = that.option(\"showColumnLines\");\r\n                var contentAlignment = that.getController(\"columns\").getHeaderContentAlignment(options.column.alignment);\r\n                return $cellContent[showColumnLines || \"right\" === contentAlignment ? \"appendTo\" : \"prependTo\"]($cell)\r\n            };\r\n\r\n            function addCssClassesToCellContent(that, $cell, column, $cellContent) {\r\n                var $indicatorElements = that._getIndicatorElements($cell, true);\r\n                var $visibleIndicatorElements = that._getIndicatorElements($cell);\r\n                var indicatorCount = $indicatorElements && $indicatorElements.length;\r\n                var columnAlignment = that._getColumnAlignment(column.alignment);\r\n                var sortIndicatorClassName = \".\".concat(that._getIndicatorClassName(\"sort\"));\r\n                var sortIndexIndicatorClassName = \".\".concat(that._getIndicatorClassName(\"sortIndex\"));\r\n                var $sortIndicator = $visibleIndicatorElements.filter(sortIndicatorClassName);\r\n                var $sortIndexIndicator = $visibleIndicatorElements.children().filter(sortIndexIndicatorClassName);\r\n                $cellContent = $cellContent || $cell.children(\".\" + that.addWidgetPrefix(CELL_CONTENT_CLASS));\r\n                $cellContent.toggleClass(TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX + columnAlignment, indicatorCount > 0).toggleClass(TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX + (\"left\" === columnAlignment ? \"right\" : \"left\"), indicatorCount > 0 && \"center\" === column.alignment).toggleClass(SORT_INDICATOR_CLASS, !!$sortIndicator.length).toggleClass(SORT_INDEX_INDICATOR_CLASS, !!$sortIndexIndicator.length).toggleClass(HEADER_FILTER_INDICATOR_CLASS, !!$visibleIndicatorElements.filter(\".\" + that._getIndicatorClassName(\"headerFilter\")).length)\r\n            }\r\n            return {\r\n                _createTable: function() {\r\n                    var $table = this.callBase.apply(this, arguments);\r\n                    eventsEngine.on($table, \"mousedown selectstart\", this.createAction((function(e) {\r\n                        var event = e.event;\r\n                        if (event.shiftKey) {\r\n                            event.preventDefault()\r\n                        }\r\n                    })));\r\n                    return $table\r\n                },\r\n                _isLegacyKeyboardNavigation() {\r\n                    return this.option(\"useLegacyKeyboardNavigation\")\r\n                },\r\n                _getDefaultTemplate: function(column) {\r\n                    var that = this;\r\n                    return function($container, options) {\r\n                        var $content = column.command ? $container : createCellContent(that, $container, options);\r\n                        var caption = \"expand\" !== column.command && column.caption;\r\n                        if (caption) {\r\n                            $content.text(caption)\r\n                        } else if (column.command) {\r\n                            $container.html(\"&nbsp;\")\r\n                        }\r\n                    }\r\n                },\r\n                _getHeaderTemplate: function(column) {\r\n                    return column.headerCellTemplate || {\r\n                        allowRenderToDetachedContainer: true,\r\n                        render: this._getDefaultTemplate(column)\r\n                    }\r\n                },\r\n                _processTemplate: function(template, options) {\r\n                    var that = this;\r\n                    var resultTemplate;\r\n                    var column = options.column;\r\n                    var renderingTemplate = that.callBase(template);\r\n                    if (\"header\" === options.rowType && renderingTemplate && column.headerCellTemplate && !column.command) {\r\n                        resultTemplate = {\r\n                            render: function(options) {\r\n                                var $content = createCellContent(that, options.container, options.model);\r\n                                renderingTemplate.render(extend({}, options, {\r\n                                    container: $content\r\n                                }))\r\n                            }\r\n                        }\r\n                    } else {\r\n                        resultTemplate = renderingTemplate\r\n                    }\r\n                    return resultTemplate\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    if (\"refresh\" !== e.changeType) {\r\n                        return\r\n                    }\r\n                    if (this._isGroupingChanged || this._requireReady) {\r\n                        this._isGroupingChanged = false;\r\n                        this.render()\r\n                    }\r\n                },\r\n                _renderCell: function($row, options) {\r\n                    var $cell = this.callBase($row, options);\r\n                    if (\"header\" === options.row.rowType) {\r\n                        $cell.addClass(CELL_FOCUS_DISABLED_CLASS);\r\n                        if (!this._isLegacyKeyboardNavigation()) {\r\n                            if (options.column && !options.column.type) {\r\n                                $cell.attr(\"tabindex\", this.option(\"tabindex\") || 0)\r\n                            }\r\n                        }\r\n                    }\r\n                    return $cell\r\n                },\r\n                _setCellAriaAttributes: function($cell, cellOptions) {\r\n                    this.callBase($cell, cellOptions);\r\n                    if (\"header\" === cellOptions.rowType) {\r\n                        this.setAria(\"role\", \"columnheader\", $cell);\r\n                        if (cellOptions.column && !cellOptions.column.command && !cellOptions.column.isBand) {\r\n                            $cell.attr(\"id\", cellOptions.column.headerId);\r\n                            this.setAria(\"label\", messageLocalization.format(\"dxDataGrid-ariaColumn\") + \" \" + cellOptions.column.caption, $cell)\r\n                        }\r\n                    }\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    $row.toggleClass(COLUMN_LINES_CLASS, this.option(\"showColumnLines\"));\r\n                    if (\"header\" === row.rowType) {\r\n                        $row.addClass(HEADER_ROW_CLASS);\r\n                        if (!this._isLegacyKeyboardNavigation()) {\r\n                            registerKeyboardAction(\"columnHeaders\", this, $row, \"td\", this._handleActionKeyDown.bind(this))\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _handleActionKeyDown: function(args) {\r\n                    var event = args.event;\r\n                    var $target = $(event.target);\r\n                    this._lastActionElement = event.target;\r\n                    if ($target.is(HEADER_FILTER_CLASS_SELECTOR)) {\r\n                        var headerFilterController = this.getController(\"headerFilter\");\r\n                        var $column = $target.closest(\"td\");\r\n                        var columnIndex = this.getColumnIndexByElement($column);\r\n                        if (columnIndex >= 0) {\r\n                            headerFilterController.showHeaderFilterMenu(columnIndex, false)\r\n                        }\r\n                    } else {\r\n                        var $row = $target.closest(ROW_CLASS_SELECTOR);\r\n                        this._processHeaderAction(event, $row)\r\n                    }\r\n                    event.preventDefault()\r\n                },\r\n                _renderCore: function() {\r\n                    var that = this;\r\n                    var $container = that.element();\r\n                    if (that._tableElement && !that._dataController.isLoaded() && !that._hasRowElements) {\r\n                        return\r\n                    }\r\n                    $container.addClass(that.addWidgetPrefix(HEADERS_CLASS)).toggleClass(that.addWidgetPrefix(NOWRAP_CLASS), !that.option(\"wordWrapEnabled\")).empty();\r\n                    that.setAria(\"role\", \"presentation\", $container);\r\n                    that._updateContent(that._renderTable());\r\n                    if (that.getRowCount() > 1) {\r\n                        $container.addClass(MULTI_ROW_HEADER_CLASS)\r\n                    }\r\n                    that.callBase.apply(that, arguments)\r\n                },\r\n                _renderRows: function() {\r\n                    var that = this;\r\n                    if (that._dataController.isLoaded() || that._hasRowElements) {\r\n                        that.callBase.apply(that, arguments);\r\n                        that._hasRowElements = true\r\n                    }\r\n                },\r\n                _getRowVisibleColumns: function(rowIndex) {\r\n                    return this._columnsController.getVisibleColumns(rowIndex)\r\n                },\r\n                _renderRow: function($table, options) {\r\n                    options.columns = this._getRowVisibleColumns(options.row.rowIndex);\r\n                    this.callBase($table, options)\r\n                },\r\n                _createCell: function(options) {\r\n                    var column = options.column;\r\n                    var $cellElement = this.callBase.apply(this, arguments);\r\n                    column.rowspan > 1 && \"header\" === options.rowType && $cellElement.attr(\"rowSpan\", column.rowspan);\r\n                    return $cellElement\r\n                },\r\n                _getRows: function() {\r\n                    var result = [];\r\n                    var rowCount = this.getRowCount();\r\n                    if (this.option(\"showColumnHeaders\")) {\r\n                        for (var i = 0; i < rowCount; i++) {\r\n                            result.push({\r\n                                rowType: \"header\",\r\n                                rowIndex: i\r\n                            })\r\n                        }\r\n                    }\r\n                    return result\r\n                },\r\n                _getCellTemplate: function(options) {\r\n                    if (\"header\" === options.rowType) {\r\n                        return this._getHeaderTemplate(options.column)\r\n                    }\r\n                },\r\n                _columnOptionChanged: function(e) {\r\n                    var changeTypes = e.changeTypes;\r\n                    var optionNames = e.optionNames;\r\n                    if (changeTypes.grouping || changeTypes.groupExpanding) {\r\n                        if (changeTypes.grouping) {\r\n                            this._isGroupingChanged = true\r\n                        }\r\n                        return\r\n                    }\r\n                    this.callBase(e);\r\n                    if (optionNames.width || optionNames.visible) {\r\n                        this.resizeCompleted.fire()\r\n                    }\r\n                },\r\n                _isElementVisible: function(elementOptions) {\r\n                    return elementOptions && elementOptions.visible\r\n                },\r\n                _alignCaptionByCenter: function($cell) {\r\n                    var $indicatorsContainer = this._getIndicatorContainer($cell, true);\r\n                    if ($indicatorsContainer && $indicatorsContainer.length) {\r\n                        $indicatorsContainer.filter(\".\" + VISIBILITY_HIDDEN_CLASS).remove();\r\n                        $indicatorsContainer = this._getIndicatorContainer($cell);\r\n                        $indicatorsContainer.clone().addClass(VISIBILITY_HIDDEN_CLASS).css(\"float\", \"\").insertBefore($cell.children(\".\" + this.addWidgetPrefix(CELL_CONTENT_CLASS)))\r\n                    }\r\n                },\r\n                _updateCell: function($cell, options) {\r\n                    if (\"header\" === options.rowType && \"center\" === options.column.alignment) {\r\n                        this._alignCaptionByCenter($cell)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _updateIndicator: function($cell, column, indicatorName) {\r\n                    var $indicatorElement = this.callBase.apply(this, arguments);\r\n                    if (\"center\" === column.alignment) {\r\n                        this._alignCaptionByCenter($cell)\r\n                    }\r\n                    addCssClassesToCellContent(this, $cell, column);\r\n                    return $indicatorElement\r\n                },\r\n                _getIndicatorContainer: function($cell, returnAll) {\r\n                    var $indicatorsContainer = this.callBase($cell);\r\n                    return returnAll ? $indicatorsContainer : $indicatorsContainer.filter(\":not(.\" + VISIBILITY_HIDDEN_CLASS + \")\")\r\n                },\r\n                _isSortableElement: function() {\r\n                    return true\r\n                },\r\n                getHeadersRowHeight: function() {\r\n                    var $tableElement = this.getTableElement();\r\n                    var $headerRows = $tableElement && $tableElement.find(\".\" + HEADER_ROW_CLASS);\r\n                    return $headerRows && $headerRows.toArray().reduce((function(sum, headerRow) {\r\n                        return sum + getHeight(headerRow)\r\n                    }), 0) || 0\r\n                },\r\n                getHeaderElement: function(index) {\r\n                    var columnElements = this.getColumnElements();\r\n                    return columnElements && columnElements.eq(index)\r\n                },\r\n                getColumnElements: function(index, bandColumnIndex) {\r\n                    var that = this;\r\n                    var $cellElement;\r\n                    var columnsController = that._columnsController;\r\n                    var rowCount = that.getRowCount();\r\n                    if (that.option(\"showColumnHeaders\")) {\r\n                        if (rowCount > 1 && (!isDefined(index) || isDefined(bandColumnIndex))) {\r\n                            var result = [];\r\n                            var visibleColumns = isDefined(bandColumnIndex) ? columnsController.getChildrenByBandColumn(bandColumnIndex, true) : columnsController.getVisibleColumns();\r\n                            each(visibleColumns, (function(_, column) {\r\n                                var rowIndex = isDefined(index) ? index : columnsController.getRowIndex(column.index);\r\n                                $cellElement = that._getCellElement(rowIndex, columnsController.getVisibleIndex(column.index, rowIndex));\r\n                                $cellElement && result.push($cellElement.get(0))\r\n                            }));\r\n                            return $(result)\r\n                        } else if (!index || index < rowCount) {\r\n                            return that.getCellElements(index || 0)\r\n                        }\r\n                    }\r\n                },\r\n                getColumnIndexByElement: function($cell) {\r\n                    var cellIndex = this.getCellIndex($cell);\r\n                    var $row = $cell.closest(\".dx-row\");\r\n                    var rowIndex = $row[0].rowIndex;\r\n                    var column = this.getColumns(rowIndex)[cellIndex];\r\n                    return column ? column.index : -1\r\n                },\r\n                getVisibleColumnIndex: function(columnIndex, rowIndex) {\r\n                    var column = this.getColumns()[columnIndex];\r\n                    return column ? this._columnsController.getVisibleIndex(column.index, rowIndex) : -1\r\n                },\r\n                getColumnWidths: function() {\r\n                    var $columnElements = this.getColumnElements();\r\n                    if ($columnElements && $columnElements.length) {\r\n                        return this._getWidths($columnElements)\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                allowDragging: function(column, sourceLocation, draggingPanels) {\r\n                    var i;\r\n                    var draggableColumnCount = 0;\r\n                    var rowIndex = column && this._columnsController.getRowIndex(column.index);\r\n                    var columns = this.getColumns(0 === rowIndex ? 0 : null);\r\n                    var canHideColumn = (null === column || void 0 === column ? void 0 : column.allowHiding) && columns.length > 1;\r\n                    var allowDrag = function(column) {\r\n                        return column.allowReordering || column.allowGrouping || column.allowHiding\r\n                    };\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        if (allowDrag(columns[i])) {\r\n                            draggableColumnCount++\r\n                        }\r\n                    }\r\n                    if (draggableColumnCount <= 1 && !canHideColumn) {\r\n                        return false\r\n                    } else if (!draggingPanels) {\r\n                        return (this.option(\"allowColumnReordering\") || this._columnsController.isColumnOptionUsed(\"allowReordering\")) && column && column.allowReordering\r\n                    }\r\n                    for (i = 0; i < draggingPanels.length; i++) {\r\n                        var draggingPanel = draggingPanels[i];\r\n                        if (draggingPanel && draggingPanel.allowDragging(column, sourceLocation)) {\r\n                            return true\r\n                        }\r\n                    }\r\n                    return false\r\n                },\r\n                getBoundingRect: function() {\r\n                    var $columnElements = this.getColumnElements();\r\n                    if ($columnElements && $columnElements.length) {\r\n                        var offset = this.getTableElement().offset();\r\n                        return {\r\n                            top: offset.top\r\n                        }\r\n                    }\r\n                    return null\r\n                },\r\n                getName: function() {\r\n                    return \"headers\"\r\n                },\r\n                getColumnCount: function() {\r\n                    var $columnElements = this.getColumnElements();\r\n                    return $columnElements ? $columnElements.length : 0\r\n                },\r\n                isVisible: function() {\r\n                    return this.option(\"showColumnHeaders\")\r\n                },\r\n                optionChanged: function(args) {\r\n                    switch (args.name) {\r\n                        case \"showColumnHeaders\":\r\n                        case \"wordWrapEnabled\":\r\n                        case \"showColumnLines\":\r\n                            this._invalidate(true, true);\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                getHeight: function() {\r\n                    return this.getElementHeight()\r\n                },\r\n                getContextMenuItems: function(options) {\r\n                    var that = this;\r\n                    var column = options.column;\r\n                    if (options.row && (\"header\" === options.row.rowType || \"detailAdaptive\" === options.row.rowType)) {\r\n                        var sortingOptions = that.option(\"sorting\");\r\n                        if (sortingOptions && \"none\" !== sortingOptions.mode && column && column.allowSorting) {\r\n                            var onItemClick = function(params) {\r\n                                setTimeout((function() {\r\n                                    that._columnsController.changeSortOrder(column.index, params.itemData.value)\r\n                                }))\r\n                            };\r\n                            return [{\r\n                                text: sortingOptions.ascendingText,\r\n                                value: \"asc\",\r\n                                disabled: \"asc\" === column.sortOrder,\r\n                                icon: CONTEXT_MENU_SORT_ASC_ICON,\r\n                                onItemClick: onItemClick\r\n                            }, {\r\n                                text: sortingOptions.descendingText,\r\n                                value: \"desc\",\r\n                                disabled: \"desc\" === column.sortOrder,\r\n                                icon: CONTEXT_MENU_SORT_DESC_ICON,\r\n                                onItemClick: onItemClick\r\n                            }, {\r\n                                text: sortingOptions.clearText,\r\n                                value: \"none\",\r\n                                disabled: !column.sortOrder,\r\n                                icon: CONTEXT_MENU_SORT_NONE_ICON,\r\n                                onItemClick: onItemClick\r\n                            }]\r\n                        }\r\n                    }\r\n                },\r\n                getRowCount: function() {\r\n                    return this._columnsController && this._columnsController.getRowCount()\r\n                },\r\n                setRowsOpacity: function(columnIndex, value, rowIndex) {\r\n                    var that = this;\r\n                    var i;\r\n                    var columnElements;\r\n                    var rowCount = that.getRowCount();\r\n                    var columns = that._columnsController.getColumns();\r\n                    var column = columns && columns[columnIndex];\r\n                    var columnID = column && column.isBand && column.index;\r\n                    var setColumnOpacity = function(index, column) {\r\n                        if (column.ownerBand === columnID) {\r\n                            columnElements.eq(index).css({\r\n                                opacity: value\r\n                            });\r\n                            if (column.isBand) {\r\n                                that.setRowsOpacity(column.index, value, i + 1)\r\n                            }\r\n                        }\r\n                    };\r\n                    if (isDefined(columnID)) {\r\n                        rowIndex = rowIndex || 0;\r\n                        for (i = rowIndex; i < rowCount; i++) {\r\n                            columnElements = that.getCellElements(i);\r\n                            each(that.getColumns(i), setColumnOpacity)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.column_headers.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnHeadersModule\r\n} from \"../grid_core/ui.grid_core.column_headers\";\r\nexport var ColumnHeadersView = columnHeadersModule.views.columnHeadersView;\r\ngridCore.registerModule(\"columnHeaders\", columnHeadersModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_controller.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../../core/renderer\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\r\nimport {\r\n    compileGetter,\r\n    compileSetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    isDefined,\r\n    isString,\r\n    isNumeric,\r\n    isFunction,\r\n    isObject,\r\n    isPlainObject,\r\n    type\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    inArray,\r\n    normalizeIndexes\r\n} from \"../../core/utils/array\";\r\nimport config from \"../../core/config\";\r\nimport {\r\n    orderEach,\r\n    deepExtendArraySafe\r\n} from \"../../core/utils/object\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    captionize\r\n} from \"../../core/utils/inflector\";\r\nimport dateSerialization from \"../../core/utils/date_serialization\";\r\nimport numberLocalization from \"../../localization/number\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport Store from \"../../data/abstract_store\";\r\nimport {\r\n    DataSource\r\n} from \"../../data/data_source/data_source\";\r\nimport {\r\n    normalizeDataSourceOptions\r\n} from \"../../data/data_source/utils\";\r\nimport filterUtils from \"../shared/filtering\";\r\nvar USER_STATE_FIELD_NAMES_15_1 = [\"filterValues\", \"filterType\", \"fixed\", \"fixedPosition\"];\r\nvar USER_STATE_FIELD_NAMES = [\"visibleIndex\", \"dataField\", \"name\", \"dataType\", \"width\", \"visible\", \"sortOrder\", \"lastSortOrder\", \"sortIndex\", \"groupIndex\", \"filterValue\", \"selectedFilterOperation\", \"added\"].concat(USER_STATE_FIELD_NAMES_15_1);\r\nvar IGNORE_COLUMN_OPTION_NAMES = {\r\n    visibleWidth: true,\r\n    bestFitWidth: true,\r\n    bufferedFilterValue: true\r\n};\r\nvar COMMAND_EXPAND_CLASS = \"dx-command-expand\";\r\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\r\nvar GROUP_COMMAND_COLUMN_NAME = \"groupExpand\";\r\nvar regExp = /columns\\[(\\d+)\\]\\.?/gi;\r\nvar globalColumnId = 1;\r\nexport var columnsControllerModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            commonColumnSettings: {\r\n                allowFiltering: true,\r\n                allowHiding: true,\r\n                allowSorting: true,\r\n                allowEditing: true,\r\n                encodeHtml: true,\r\n                trueText: messageLocalization.format(\"dxDataGrid-trueText\"),\r\n                falseText: messageLocalization.format(\"dxDataGrid-falseText\")\r\n            },\r\n            allowColumnReordering: false,\r\n            allowColumnResizing: false,\r\n            columnResizingMode: \"nextColumn\",\r\n            columnMinWidth: void 0,\r\n            columnWidth: void 0,\r\n            adaptColumnWidthByRatio: true,\r\n            columns: void 0,\r\n            regenerateColumnsByVisibleItems: false,\r\n            customizeColumns: null,\r\n            dateSerializationFormat: void 0\r\n        }\r\n    },\r\n    controllers: {\r\n        columns: modules.Controller.inherit(function() {\r\n            var DEFAULT_COLUMN_OPTIONS = {\r\n                visible: true,\r\n                showInColumnChooser: true\r\n            };\r\n            var DATATYPE_OPERATIONS = {\r\n                number: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"between\"],\r\n                string: [\"contains\", \"notcontains\", \"startswith\", \"endswith\", \"=\", \"<>\"],\r\n                date: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"between\"],\r\n                datetime: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"between\"]\r\n            };\r\n            var COLUMN_INDEX_OPTIONS = {\r\n                visibleIndex: true,\r\n                groupIndex: true,\r\n                grouped: true,\r\n                sortIndex: true,\r\n                sortOrder: true\r\n            };\r\n            var setFilterOperationsAsDefaultValues = function(column) {\r\n                column.filterOperations = column.defaultFilterOperations\r\n            };\r\n            var createColumn = function(that, columnOptions, userStateColumnOptions, bandColumn) {\r\n                var commonColumnOptions = {};\r\n                if (columnOptions) {\r\n                    if (isString(columnOptions)) {\r\n                        columnOptions = {\r\n                            dataField: columnOptions\r\n                        }\r\n                    }\r\n                    that.setName(columnOptions);\r\n                    var result = {};\r\n                    if (columnOptions.command) {\r\n                        result = deepExtendArraySafe(commonColumnOptions, columnOptions)\r\n                    } else {\r\n                        commonColumnOptions = that.getCommonSettings(columnOptions);\r\n                        if (userStateColumnOptions && userStateColumnOptions.name && userStateColumnOptions.dataField) {\r\n                            columnOptions = extend({}, columnOptions, {\r\n                                dataField: userStateColumnOptions.dataField\r\n                            })\r\n                        }\r\n                        var calculatedColumnOptions = that._createCalculatedColumnOptions(columnOptions, bandColumn);\r\n                        if (!columnOptions.type) {\r\n                            result = {\r\n                                headerId: \"dx-col-\".concat(globalColumnId++)\r\n                            }\r\n                        }\r\n                        result = deepExtendArraySafe(result, DEFAULT_COLUMN_OPTIONS);\r\n                        deepExtendArraySafe(result, commonColumnOptions);\r\n                        deepExtendArraySafe(result, calculatedColumnOptions);\r\n                        deepExtendArraySafe(result, columnOptions);\r\n                        deepExtendArraySafe(result, {\r\n                            selector: null\r\n                        })\r\n                    }\r\n                    if (columnOptions.filterOperations === columnOptions.defaultFilterOperations) {\r\n                        setFilterOperationsAsDefaultValues(result)\r\n                    }\r\n                    return result\r\n                }\r\n            };\r\n            var createColumnsFromOptions = function createColumnsFromOptions(that, columnsOptions, bandColumn) {\r\n                var result = [];\r\n                if (columnsOptions) {\r\n                    each(columnsOptions, (function(index, columnOptions) {\r\n                        var userStateColumnOptions = that._columnsUserState && checkUserStateColumn(columnOptions, that._columnsUserState[index]) && that._columnsUserState[index];\r\n                        var column = createColumn(that, columnOptions, userStateColumnOptions, bandColumn);\r\n                        if (column) {\r\n                            if (bandColumn) {\r\n                                column.ownerBand = bandColumn\r\n                            }\r\n                            result.push(column);\r\n                            if (column.columns) {\r\n                                result = result.concat(createColumnsFromOptions(that, column.columns, column));\r\n                                delete column.columns;\r\n                                column.hasColumns = true\r\n                            }\r\n                        }\r\n                    }))\r\n                }\r\n                return result\r\n            };\r\n            var getParentBandColumns = function(columnIndex, columnParentByIndex) {\r\n                var result = [];\r\n                var parent = columnParentByIndex[columnIndex];\r\n                while (parent) {\r\n                    result.unshift(parent);\r\n                    columnIndex = parent.index;\r\n                    parent = columnParentByIndex[columnIndex]\r\n                }\r\n                return result\r\n            };\r\n            var _getChildrenByBandColumn = function(columnIndex, columnChildrenByIndex, recursive) {\r\n                var result = [];\r\n                var children = columnChildrenByIndex[columnIndex];\r\n                if (children) {\r\n                    for (var i = 0; i < children.length; i++) {\r\n                        var column = children[i];\r\n                        if (!isDefined(column.groupIndex) || column.showWhenGrouped) {\r\n                            result.push(column);\r\n                            if (recursive && column.isBand) {\r\n                                result = result.concat(_getChildrenByBandColumn(column.index, columnChildrenByIndex, recursive))\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return result\r\n            };\r\n            var getColumnFullPath = function(that, column) {\r\n                var result = [];\r\n                var columns;\r\n                var bandColumnsCache = that.getBandColumnsCache();\r\n                var callbackFilter = function(item) {\r\n                    return item.ownerBand === column.ownerBand\r\n                };\r\n                if (bandColumnsCache.isPlain) {\r\n                    var columnIndex = that._columns.indexOf(column);\r\n                    if (columnIndex >= 0) {\r\n                        result = [\"columns[\".concat(columnIndex, \"]\")]\r\n                    }\r\n                } else {\r\n                    columns = that._columns.filter(callbackFilter);\r\n                    while (columns.length && -1 !== columns.indexOf(column)) {\r\n                        result.unshift(\"columns[\".concat(columns.indexOf(column), \"]\"));\r\n                        column = bandColumnsCache.columnParentByIndex[column.index];\r\n                        columns = column ? that._columns.filter(callbackFilter) : []\r\n                    }\r\n                }\r\n                return result.join(\".\")\r\n            };\r\n            var calculateColspan = function calculateColspan(that, columnID) {\r\n                var colspan = 0;\r\n                var columns = that.getChildrenByBandColumn(columnID, true);\r\n                each(columns, (function(_, column) {\r\n                    if (column.isBand) {\r\n                        column.colspan = column.colspan || calculateColspan(that, column.index);\r\n                        colspan += column.colspan || 1\r\n                    } else {\r\n                        colspan += 1\r\n                    }\r\n                }));\r\n                return colspan\r\n            };\r\n            var getValueDataType = function(value) {\r\n                var dataType = type(value);\r\n                if (\"string\" !== dataType && \"boolean\" !== dataType && \"number\" !== dataType && \"date\" !== dataType && \"object\" !== dataType) {\r\n                    dataType = void 0\r\n                }\r\n                return dataType\r\n            };\r\n            var getSerializationFormat = function(dataType, value) {\r\n                switch (dataType) {\r\n                    case \"date\":\r\n                    case \"datetime\":\r\n                        return dateSerialization.getDateSerializationFormat(value);\r\n                    case \"number\":\r\n                        if (isString(value)) {\r\n                            return \"string\"\r\n                        }\r\n                        if (isNumeric(value)) {\r\n                            return null\r\n                        }\r\n                }\r\n            };\r\n            var updateSerializers = function(options, dataType) {\r\n                if (!options.deserializeValue) {\r\n                    if (gridCoreUtils.isDateType(dataType)) {\r\n                        options.deserializeValue = function(value) {\r\n                            return dateSerialization.deserializeDate(value)\r\n                        };\r\n                        options.serializeValue = function(value) {\r\n                            return isString(value) ? value : dateSerialization.serializeDate(value, this.serializationFormat)\r\n                        }\r\n                    }\r\n                    if (\"number\" === dataType) {\r\n                        options.deserializeValue = function(value) {\r\n                            var parsedValue = parseFloat(value);\r\n                            return isNaN(parsedValue) ? value : parsedValue\r\n                        };\r\n                        options.serializeValue = function(value, target) {\r\n                            if (\"filter\" === target) {\r\n                                return value\r\n                            }\r\n                            return isDefined(value) && \"string\" === this.serializationFormat ? value.toString() : value\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            var customizeTextForBooleanDataType = function(e) {\r\n                if (true === e.value) {\r\n                    return this.trueText || \"true\"\r\n                } else if (false === e.value) {\r\n                    return this.falseText || \"false\"\r\n                } else {\r\n                    return e.valueText || \"\"\r\n                }\r\n            };\r\n            var getCustomizeTextByDataType = function(dataType) {\r\n                if (\"boolean\" === dataType) {\r\n                    return customizeTextForBooleanDataType\r\n                }\r\n            };\r\n            var updateColumnIndexes = function(that) {\r\n                each(that._columns, (function(index, column) {\r\n                    column.index = index\r\n                }));\r\n                each(that._columns, (function(index, column) {\r\n                    if (isObject(column.ownerBand)) {\r\n                        column.ownerBand = column.ownerBand.index\r\n                    }\r\n                }));\r\n                each(that._commandColumns, (function(index, column) {\r\n                    column.index = -(index + 1)\r\n                }))\r\n            };\r\n            var updateColumnGroupIndexes = function(that, currentColumn) {\r\n                normalizeIndexes(that._columns, \"groupIndex\", currentColumn, (function(column) {\r\n                    var grouped = column.grouped;\r\n                    delete column.grouped;\r\n                    return grouped\r\n                }))\r\n            };\r\n            var getColumnIndexByVisibleIndex = function(that, visibleIndex, location) {\r\n                var rowIndex = isObject(visibleIndex) ? visibleIndex.rowIndex : null;\r\n                var columns = \"group\" === location ? that.getGroupColumns() : \"columnChooser\" === location ? that.getChooserColumns() : that.getVisibleColumns(rowIndex);\r\n                var column;\r\n                visibleIndex = isObject(visibleIndex) ? visibleIndex.columnIndex : visibleIndex;\r\n                column = columns[visibleIndex];\r\n                if (column && column.type === GROUP_COMMAND_COLUMN_NAME) {\r\n                    column = that._columns.filter(col => column.type === col.type)[0] || column\r\n                }\r\n                return column && isDefined(column.index) ? column.index : -1\r\n            };\r\n\r\n            function checkUserStateColumn(column, userStateColumn) {\r\n                return column && userStateColumn && userStateColumn.name === (column.name || column.dataField) && (userStateColumn.dataField === column.dataField || column.name)\r\n            }\r\n            var applyUserState = function(that) {\r\n                var columnsUserState = that._columnsUserState;\r\n                var ignoreColumnOptionNames = that._ignoreColumnOptionNames || [];\r\n                var columns = that._columns;\r\n                var columnCountById = {};\r\n                var resultColumns = [];\r\n                var allColumnsHaveState = true;\r\n                var userStateColumnIndexes = [];\r\n                var column;\r\n                var userStateColumnIndex;\r\n                var i;\r\n\r\n                function applyFieldsState(column, userStateColumn) {\r\n                    if (!userStateColumn) {\r\n                        return\r\n                    }\r\n                    for (var index = 0; index < USER_STATE_FIELD_NAMES.length; index++) {\r\n                        var fieldName = USER_STATE_FIELD_NAMES[index];\r\n                        if (inArray(fieldName, ignoreColumnOptionNames) >= 0) {\r\n                            continue\r\n                        }\r\n                        if (\"dataType\" === fieldName) {\r\n                            column[fieldName] = column[fieldName] || userStateColumn[fieldName]\r\n                        } else if (inArray(fieldName, USER_STATE_FIELD_NAMES_15_1) >= 0) {\r\n                            if (fieldName in userStateColumn) {\r\n                                column[fieldName] = userStateColumn[fieldName]\r\n                            }\r\n                        } else {\r\n                            if (\"selectedFilterOperation\" === fieldName && userStateColumn[fieldName]) {\r\n                                column.defaultSelectedFilterOperation = column[fieldName] || null\r\n                            }\r\n                            column[fieldName] = userStateColumn[fieldName]\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function findUserStateColumn(columnsUserState, column) {\r\n                    var id = column.name || column.dataField;\r\n                    var count = columnCountById[id] || 0;\r\n                    for (var j = 0; j < columnsUserState.length; j++) {\r\n                        if (checkUserStateColumn(column, columnsUserState[j])) {\r\n                            if (count) {\r\n                                count--\r\n                            } else {\r\n                                columnCountById[id] = columnCountById[id] || 0;\r\n                                columnCountById[id]++;\r\n                                return j\r\n                            }\r\n                        }\r\n                    }\r\n                    return -1\r\n                }\r\n                if (columnsUserState) {\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        userStateColumnIndex = findUserStateColumn(columnsUserState, columns[i]);\r\n                        allColumnsHaveState = allColumnsHaveState && userStateColumnIndex >= 0;\r\n                        userStateColumnIndexes.push(userStateColumnIndex)\r\n                    }\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        column = columns[i];\r\n                        userStateColumnIndex = userStateColumnIndexes[i];\r\n                        if (that._hasUserState || allColumnsHaveState) {\r\n                            applyFieldsState(column, columnsUserState[userStateColumnIndex])\r\n                        }\r\n                        if (userStateColumnIndex >= 0 && isDefined(columnsUserState[userStateColumnIndex].initialIndex)) {\r\n                            resultColumns[userStateColumnIndex] = column\r\n                        } else {\r\n                            resultColumns.push(column)\r\n                        }\r\n                    }\r\n                    var hasAddedBands = false;\r\n                    for (i = 0; i < columnsUserState.length; i++) {\r\n                        var columnUserState = columnsUserState[i];\r\n                        if (columnUserState.added && findUserStateColumn(columns, columnUserState) < 0) {\r\n                            column = createColumn(that, columnUserState.added);\r\n                            applyFieldsState(column, columnUserState);\r\n                            resultColumns.push(column);\r\n                            if (columnUserState.added.columns) {\r\n                                hasAddedBands = true\r\n                            }\r\n                        }\r\n                    }\r\n                    if (hasAddedBands) {\r\n                        updateColumnIndexes(that);\r\n                        resultColumns = createColumnsFromOptions(that, resultColumns)\r\n                    }\r\n                    assignColumns(that, resultColumns)\r\n                }\r\n            };\r\n            var updateIndexes = function(that, column) {\r\n                updateColumnIndexes(that);\r\n                updateColumnGroupIndexes(that, column);\r\n                ! function(that, currentColumn) {\r\n                    each(that._columns, (function(index, column) {\r\n                        if (isDefined(column.sortIndex) && !isSortOrderValid(column.sortOrder)) {\r\n                            delete column.sortIndex\r\n                        }\r\n                    }));\r\n                    normalizeIndexes(that._columns, \"sortIndex\", currentColumn, (function(column) {\r\n                        return !isDefined(column.groupIndex) && isSortOrderValid(column.sortOrder)\r\n                    }))\r\n                }(that, column);\r\n                resetBandColumnsCache(that);\r\n                ! function(that, currentColumn) {\r\n                    var key;\r\n                    var column;\r\n                    var bandColumns = {};\r\n                    var result = [];\r\n                    var bandColumnsCache = that.getBandColumnsCache();\r\n                    var columns = that._columns.filter(column => !column.command);\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        column = columns[i];\r\n                        var parentBandColumns = getParentBandColumns(i, bandColumnsCache.columnParentByIndex);\r\n                        if (parentBandColumns.length) {\r\n                            var bandColumnIndex = parentBandColumns[parentBandColumns.length - 1].index;\r\n                            bandColumns[bandColumnIndex] = bandColumns[bandColumnIndex] || [];\r\n                            bandColumns[bandColumnIndex].push(column)\r\n                        } else {\r\n                            result.push(column)\r\n                        }\r\n                    }\r\n                    for (key in bandColumns) {\r\n                        normalizeIndexes(bandColumns[key], \"visibleIndex\", currentColumn)\r\n                    }\r\n                    normalizeIndexes(result, \"visibleIndex\", currentColumn)\r\n                }(that, column)\r\n            };\r\n            var resetColumnsCache = function(that) {\r\n                that.resetColumnsCache()\r\n            };\r\n\r\n            function assignColumns(that, columns) {\r\n                that._columns = columns;\r\n                resetColumnsCache(that);\r\n                that.updateColumnDataTypes()\r\n            }\r\n            var updateColumnChanges = function(that, changeType, optionName, columnIndex) {\r\n                var columnChanges = that._columnChanges || {\r\n                    optionNames: {\r\n                        length: 0\r\n                    },\r\n                    changeTypes: {\r\n                        length: 0\r\n                    },\r\n                    columnIndex: columnIndex\r\n                };\r\n                optionName = optionName || \"all\";\r\n                optionName = optionName.split(\".\")[0];\r\n                var changeTypes = columnChanges.changeTypes;\r\n                if (changeType && !changeTypes[changeType]) {\r\n                    changeTypes[changeType] = true;\r\n                    changeTypes.length++\r\n                }\r\n                var optionNames = columnChanges.optionNames;\r\n                if (optionName && !optionNames[optionName]) {\r\n                    optionNames[optionName] = true;\r\n                    optionNames.length++\r\n                }\r\n                if (void 0 === columnIndex || columnIndex !== columnChanges.columnIndex) {\r\n                    delete columnChanges.columnIndex\r\n                }\r\n                that._columnChanges = columnChanges;\r\n                resetColumnsCache(that)\r\n            };\r\n            var fireColumnsChanged = function(that) {\r\n                var onColumnsChanging = that.option(\"onColumnsChanging\");\r\n                var columnChanges = that._columnChanges;\r\n                var reinitOptionNames = [\"dataField\", \"lookup\", \"dataType\", \"columns\"];\r\n                if (that.isInitialized() && !that._updateLockCount && columnChanges) {\r\n                    if (onColumnsChanging) {\r\n                        that._updateLockCount++;\r\n                        onColumnsChanging(extend({\r\n                            component: that.component\r\n                        }, columnChanges));\r\n                        that._updateLockCount--\r\n                    }\r\n                    that._columnChanges = void 0;\r\n                    if (options = columnChanges.optionNames, options && reinitOptionNames.some(name => options[name])) {\r\n                        that.reinit()\r\n                    } else {\r\n                        that.columnsChanged.fire(columnChanges)\r\n                    }\r\n                }\r\n                var options\r\n            };\r\n            var updateSortOrderWhenGrouping = function(that, column, groupIndex, prevGroupIndex) {\r\n                var columnWasGrouped = prevGroupIndex >= 0;\r\n                if (groupIndex >= 0) {\r\n                    if (!columnWasGrouped) {\r\n                        column.lastSortOrder = column.sortOrder\r\n                    }\r\n                } else {\r\n                    var sortMode = that.option(\"sorting.mode\");\r\n                    var sortOrder = column.lastSortOrder;\r\n                    if (\"single\" === sortMode) {\r\n                        var sortedByAnotherColumn = that._columns.some(col => col !== column && isDefined(col.sortIndex));\r\n                        if (sortedByAnotherColumn) {\r\n                            sortOrder = void 0\r\n                        }\r\n                    }\r\n                    column.sortOrder = sortOrder\r\n                }\r\n            };\r\n            var fireOptionChanged = function(that, options) {\r\n                var value = options.value;\r\n                var optionName = options.optionName;\r\n                var prevValue = options.prevValue;\r\n                var fullOptionName = options.fullOptionName;\r\n                var fullOptionPath = \"\".concat(fullOptionName, \".\").concat(optionName);\r\n                if (!IGNORE_COLUMN_OPTION_NAMES[optionName] && that._skipProcessingColumnsChange !== fullOptionPath) {\r\n                    that._skipProcessingColumnsChange = fullOptionPath;\r\n                    that.component._notifyOptionChanged(fullOptionPath, value, prevValue);\r\n                    that._skipProcessingColumnsChange = false\r\n                }\r\n            };\r\n            var columnOptionCore = function(that, column, optionName, value, notFireEvent) {\r\n                var optionGetter = compileGetter(optionName);\r\n                var columnIndex = column.index;\r\n                var columns;\r\n                var changeType;\r\n                var initialColumn;\r\n                if (3 === arguments.length) {\r\n                    return optionGetter(column, {\r\n                        functionsAsIs: true\r\n                    })\r\n                }\r\n                var prevValue = optionGetter(column, {\r\n                    functionsAsIs: true\r\n                });\r\n                if (prevValue !== value) {\r\n                    if (\"groupIndex\" === optionName || \"calculateGroupValue\" === optionName) {\r\n                        changeType = \"grouping\";\r\n                        updateSortOrderWhenGrouping(that, column, value, prevValue)\r\n                    } else if (\"sortIndex\" === optionName || \"sortOrder\" === optionName || \"calculateSortValue\" === optionName) {\r\n                        changeType = \"sorting\"\r\n                    } else {\r\n                        changeType = \"columns\"\r\n                    }\r\n                    var optionSetter = compileSetter(optionName);\r\n                    optionSetter(column, value, {\r\n                        functionsAsIs: true\r\n                    });\r\n                    var fullOptionName = getColumnFullPath(that, column);\r\n                    if (COLUMN_INDEX_OPTIONS[optionName]) {\r\n                        updateIndexes(that, column);\r\n                        value = optionGetter(column)\r\n                    }\r\n                    if (\"name\" === optionName || \"allowEditing\" === optionName) {\r\n                        that._checkColumns()\r\n                    }\r\n                    fullOptionName && fireOptionChanged(that, {\r\n                        fullOptionName: fullOptionName,\r\n                        optionName: optionName,\r\n                        value: value,\r\n                        prevValue: prevValue\r\n                    });\r\n                    if (!isDefined(prevValue) && !isDefined(value) && 0 !== optionName.indexOf(\"buffer\")) {\r\n                        notFireEvent = true\r\n                    }\r\n                    if (!notFireEvent) {\r\n                        if (inArray(optionName, USER_STATE_FIELD_NAMES) < 0 && \"visibleWidth\" !== optionName) {\r\n                            columns = that.option(\"columns\");\r\n                            initialColumn = that.getColumnByPath(fullOptionName, columns);\r\n                            if (isString(initialColumn)) {\r\n                                initialColumn = columns[columnIndex] = {\r\n                                    dataField: initialColumn\r\n                                }\r\n                            }\r\n                            if (initialColumn && checkUserStateColumn(initialColumn, column)) {\r\n                                optionSetter(initialColumn, value, {\r\n                                    functionsAsIs: true\r\n                                })\r\n                            }\r\n                        }\r\n                        updateColumnChanges(that, changeType, optionName, columnIndex)\r\n                    } else {\r\n                        resetColumnsCache(that)\r\n                    }\r\n                }\r\n            };\r\n\r\n            function isSortOrderValid(sortOrder) {\r\n                return \"asc\" === sortOrder || \"desc\" === sortOrder\r\n            }\r\n            var defaultSetCellValue = function(data, value) {\r\n                var path = this.dataField.split(\".\");\r\n                var dotCount = path.length - 1;\r\n                if (this.serializeValue) {\r\n                    value = this.serializeValue(value)\r\n                }\r\n                for (var i = 0; i < dotCount; i++) {\r\n                    var name = path[i];\r\n                    data = data[name] = data[name] || {}\r\n                }\r\n                data[path[dotCount]] = value\r\n            };\r\n            var isCustomCommandColumn = (that, commandColumn) => !!that._columns.filter(column => column.type === commandColumn.type).length;\r\n            var getFixedPosition = function(that, column) {\r\n                var rtlEnabled = that.option(\"rtlEnabled\");\r\n                if (column.command && !isCustomCommandColumn(that, column) || !column.fixedPosition) {\r\n                    return rtlEnabled ? \"right\" : \"left\"\r\n                }\r\n                return column.fixedPosition\r\n            };\r\n            var processExpandColumns = function(columns, expandColumns, type, columnIndex) {\r\n                var customColumnIndex;\r\n                var rowCount = this.getRowCount();\r\n                var rowspan = columns[columnIndex] && columns[columnIndex].rowspan;\r\n                var expandColumnsByType = expandColumns.filter(column => column.type === type);\r\n                columns.forEach((column, index) => {\r\n                    if (column.type === type) {\r\n                        customColumnIndex = index;\r\n                        rowspan = columns[index + 1] ? columns[index + 1].rowspan : rowCount\r\n                    }\r\n                });\r\n                if (rowspan > 1) {\r\n                    expandColumnsByType = map(expandColumnsByType, (function(expandColumn) {\r\n                        return extend({}, expandColumn, {\r\n                            rowspan: rowspan\r\n                        })\r\n                    }))\r\n                }\r\n                expandColumnsByType.unshift.apply(expandColumnsByType, isDefined(customColumnIndex) ? [customColumnIndex, 1] : [columnIndex, 0]);\r\n                columns.splice.apply(columns, expandColumnsByType);\r\n                return rowspan || 1\r\n            };\r\n            var numberToString = function(number, digitsCount) {\r\n                var str = number ? number.toString() : \"0\";\r\n                while (str.length < digitsCount) {\r\n                    str = \"0\" + str\r\n                }\r\n                return str\r\n            };\r\n            var mergeColumns = (that, columns, commandColumns, needToExtend) => {\r\n                var column;\r\n                var commandColumnIndex;\r\n                var result = columns.slice().map(column => extend({}, column));\r\n                var isColumnFixing = that._isColumnFixing();\r\n                var defaultCommandColumns = commandColumns.slice().map(column => extend({\r\n                    fixed: isColumnFixing\r\n                }, column));\r\n                var getCommandColumnIndex = column => commandColumns.reduce((result, commandColumn, index) => {\r\n                    var columnType = needToExtend && column.type === GROUP_COMMAND_COLUMN_NAME ? \"expand\" : column.type;\r\n                    return commandColumn.type === columnType || commandColumn.command === column.command ? index : result\r\n                }, -1);\r\n                var callbackFilter = commandColumn => commandColumn.command !== commandColumns[commandColumnIndex].command;\r\n                for (var i = 0; i < columns.length; i++) {\r\n                    column = columns[i];\r\n                    commandColumnIndex = column && (column.type || column.command) ? getCommandColumnIndex(column) : -1;\r\n                    if (commandColumnIndex >= 0) {\r\n                        if (needToExtend) {\r\n                            result[i] = extend({\r\n                                fixed: isColumnFixing\r\n                            }, commandColumns[commandColumnIndex], column);\r\n                            if (column.type !== GROUP_COMMAND_COLUMN_NAME) {\r\n                                defaultCommandColumns = defaultCommandColumns.filter(callbackFilter)\r\n                            }\r\n                        } else {\r\n                            var columnOptions = {\r\n                                visibleIndex: column.visibleIndex,\r\n                                index: column.index,\r\n                                headerId: column.headerId,\r\n                                allowFixing: 0 === column.groupIndex,\r\n                                allowReordering: 0 === column.groupIndex,\r\n                                groupIndex: column.groupIndex\r\n                            };\r\n                            result[i] = extend({}, column, commandColumns[commandColumnIndex], column.type === GROUP_COMMAND_COLUMN_NAME && columnOptions)\r\n                        }\r\n                    }\r\n                }\r\n                if (columns.length && needToExtend && defaultCommandColumns.length) {\r\n                    result = result.concat(defaultCommandColumns)\r\n                }\r\n                return result\r\n            };\r\n            var isColumnFixed = (that, column) => isDefined(column.fixed) || !column.type ? column.fixed : that._isColumnFixing();\r\n            var resetBandColumnsCache = that => {\r\n                that._bandColumnsCache = void 0\r\n            };\r\n            var findColumn = (columns, identifier) => {\r\n                var identifierOptionName = isString(identifier) && identifier.substr(0, identifier.indexOf(\":\"));\r\n                var column;\r\n                if (void 0 === identifier) {\r\n                    return\r\n                }\r\n                if (identifierOptionName) {\r\n                    identifier = identifier.substr(identifierOptionName.length + 1)\r\n                }\r\n                if (identifierOptionName) {\r\n                    column = columns.filter(column => \"\" + column[identifierOptionName] === identifier)[0]\r\n                } else {\r\n                    [\"index\", \"name\", \"dataField\", \"caption\"].some(optionName => {\r\n                        column = columns.filter(column => column[optionName] === identifier)[0];\r\n                        return !!column\r\n                    })\r\n                }\r\n                return column\r\n            };\r\n            return {\r\n                _getExpandColumnOptions: function() {\r\n                    return {\r\n                        type: \"expand\",\r\n                        command: \"expand\",\r\n                        width: \"auto\",\r\n                        cssClass: COMMAND_EXPAND_CLASS,\r\n                        allowEditing: false,\r\n                        allowGrouping: false,\r\n                        allowSorting: false,\r\n                        allowResizing: false,\r\n                        allowReordering: false,\r\n                        allowHiding: false\r\n                    }\r\n                },\r\n                _getFirstItems: function(dataSource) {\r\n                    var groupsCount;\r\n                    var items = [];\r\n                    if (dataSource && dataSource.items().length > 0) {\r\n                        groupsCount = gridCoreUtils.normalizeSortingInfo(dataSource.group()).length;\r\n                        items = function getFirstItemsCore(items, groupsCount) {\r\n                            if (!items || !groupsCount) {\r\n                                return items\r\n                            }\r\n                            for (var i = 0; i < items.length; i++) {\r\n                                var childItems = getFirstItemsCore(items[i].items || items[i].collapsedItems, groupsCount - 1);\r\n                                if (childItems && childItems.length) {\r\n                                    return childItems\r\n                                }\r\n                            }\r\n                        }(dataSource.items(), groupsCount) || []\r\n                    }\r\n                    return items\r\n                },\r\n                _endUpdateCore: function() {\r\n                    !this._skipProcessingColumnsChange && fireColumnsChanged(this)\r\n                },\r\n                init: function() {\r\n                    var columns = this.option(\"columns\");\r\n                    this._commandColumns = this._commandColumns || [];\r\n                    this._columns = this._columns || [];\r\n                    this._isColumnsFromOptions = !!columns;\r\n                    if (this._isColumnsFromOptions) {\r\n                        assignColumns(this, columns ? createColumnsFromOptions(this, columns) : []);\r\n                        applyUserState(this)\r\n                    } else {\r\n                        assignColumns(this, this._columnsUserState ? createColumnsFromOptions(this, this._columnsUserState) : this._columns)\r\n                    }! function(that) {\r\n                        var options = that._getExpandColumnOptions();\r\n                        that.addCommandColumn(options)\r\n                    }(this);\r\n                    if (this._dataSourceApplied) {\r\n                        this.applyDataSource(this._dataSource, true)\r\n                    } else {\r\n                        updateIndexes(this)\r\n                    }\r\n                    this._checkColumns()\r\n                },\r\n                callbackNames: function() {\r\n                    return [\"columnsChanged\"]\r\n                },\r\n                getColumnByPath: function(path, columns) {\r\n                    var column;\r\n                    var columnIndexes = [];\r\n                    path.replace(regExp, (function(_, columnIndex) {\r\n                        columnIndexes.push(parseInt(columnIndex));\r\n                        return \"\"\r\n                    }));\r\n                    if (columnIndexes.length) {\r\n                        if (columns) {\r\n                            column = columnIndexes.reduce((function(column, index) {\r\n                                return column && column.columns && column.columns[index]\r\n                            }), {\r\n                                columns: columns\r\n                            })\r\n                        } else {\r\n                            column = function(that, columnIndexes) {\r\n                                var result;\r\n                                var columns;\r\n                                var bandColumnsCache = that.getBandColumnsCache();\r\n                                var callbackFilter = function(column) {\r\n                                    var ownerBand = result ? result.index : void 0;\r\n                                    return column.ownerBand === ownerBand\r\n                                };\r\n                                if (bandColumnsCache.isPlain) {\r\n                                    result = that._columns[columnIndexes[0]]\r\n                                } else {\r\n                                    columns = that._columns.filter(callbackFilter);\r\n                                    for (var i = 0; i < columnIndexes.length; i++) {\r\n                                        result = columns[columnIndexes[i]];\r\n                                        if (result) {\r\n                                            columns = that._columns.filter(callbackFilter)\r\n                                        }\r\n                                    }\r\n                                }\r\n                                return result\r\n                            }(this, columnIndexes)\r\n                        }\r\n                    }\r\n                    return column\r\n                },\r\n                optionChanged: function(args) {\r\n                    var needUpdateRequireResize;\r\n                    switch (args.name) {\r\n                        case \"adaptColumnWidthByRatio\":\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"dataSource\":\r\n                            if (args.value !== args.previousValue && !this.option(\"columns\") && (!Array.isArray(args.value) || !Array.isArray(args.previousValue))) {\r\n                                this._columns = []\r\n                            }\r\n                            break;\r\n                        case \"columns\":\r\n                            needUpdateRequireResize = this._skipProcessingColumnsChange;\r\n                            args.handled = true;\r\n                            if (!this._skipProcessingColumnsChange) {\r\n                                if (args.name === args.fullName) {\r\n                                    this._columnsUserState = null;\r\n                                    this._ignoreColumnOptionNames = null;\r\n                                    this.init()\r\n                                } else {\r\n                                    this._columnOptionChanged(args);\r\n                                    needUpdateRequireResize = true\r\n                                }\r\n                            }\r\n                            if (needUpdateRequireResize) {\r\n                                this._updateRequireResize(args)\r\n                            }\r\n                            break;\r\n                        case \"commonColumnSettings\":\r\n                        case \"columnAutoWidth\":\r\n                        case \"allowColumnResizing\":\r\n                        case \"allowColumnReordering\":\r\n                        case \"columnFixing\":\r\n                        case \"grouping\":\r\n                        case \"groupPanel\":\r\n                        case \"regenerateColumnsByVisibleItems\":\r\n                        case \"customizeColumns\":\r\n                        case \"columnHidingEnabled\":\r\n                        case \"dateSerializationFormat\":\r\n                        case \"columnResizingMode\":\r\n                        case \"columnMinWidth\":\r\n                        case \"columnWidth\":\r\n                            args.handled = true;\r\n                            var ignoreColumnOptionNames = \"columnWidth\" === args.fullName && [\"width\"];\r\n                            this.reinit(ignoreColumnOptionNames);\r\n                            break;\r\n                        case \"rtlEnabled\":\r\n                            this.reinit();\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                _columnOptionChanged: function(args) {\r\n                    var columnOptionValue = {};\r\n                    var column = this.getColumnByPath(args.fullName);\r\n                    var columnOptionName = args.fullName.replace(regExp, \"\");\r\n                    if (column) {\r\n                        if (columnOptionName) {\r\n                            columnOptionValue[columnOptionName] = args.value\r\n                        } else {\r\n                            columnOptionValue = args.value\r\n                        }\r\n                        this._skipProcessingColumnsChange = args.fullName;\r\n                        this.columnOption(column.index, columnOptionValue);\r\n                        this._skipProcessingColumnsChange = false\r\n                    }\r\n                },\r\n                _updateRequireResize: function(args) {\r\n                    var component = this.component;\r\n                    if (\"width\" === args.fullName.replace(regExp, \"\") && component._updateLockCount) {\r\n                        component._requireResize = true\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    return [\"addColumn\", \"deleteColumn\", \"columnOption\", \"columnCount\", \"clearSorting\", \"clearGrouping\", \"getVisibleColumns\", \"getVisibleColumnIndex\"]\r\n                },\r\n                applyDataSource: function(dataSource, forceApplying) {\r\n                    var isDataSourceLoaded = dataSource && dataSource.isLoaded();\r\n                    this._dataSource = dataSource;\r\n                    if (!this._dataSourceApplied || 0 === this._dataSourceColumnsCount || forceApplying || this.option(\"regenerateColumnsByVisibleItems\")) {\r\n                        if (isDataSourceLoaded) {\r\n                            if (!this._isColumnsFromOptions) {\r\n                                var columnsFromDataSource = function(that, dataSource) {\r\n                                    var firstItems = that._getFirstItems(dataSource);\r\n                                    var fieldName;\r\n                                    var processedFields = {};\r\n                                    var result = [];\r\n                                    for (var i = 0; i < firstItems.length; i++) {\r\n                                        if (firstItems[i]) {\r\n                                            for (fieldName in firstItems[i]) {\r\n                                                if (!isFunction(firstItems[i][fieldName]) || variableWrapper.isWrapped(firstItems[i][fieldName])) {\r\n                                                    processedFields[fieldName] = true\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    for (fieldName in processedFields) {\r\n                                        if (0 !== fieldName.indexOf(\"__\")) {\r\n                                            var column = createColumn(that, fieldName);\r\n                                            result.push(column)\r\n                                        }\r\n                                    }\r\n                                    return result\r\n                                }(this, dataSource);\r\n                                if (columnsFromDataSource.length) {\r\n                                    assignColumns(this, columnsFromDataSource);\r\n                                    this._dataSourceColumnsCount = this._columns.length;\r\n                                    applyUserState(this)\r\n                                }\r\n                            }\r\n                            return this.updateColumns(dataSource, forceApplying)\r\n                        } else {\r\n                            this._dataSourceApplied = false\r\n                        }\r\n                    } else if (isDataSourceLoaded && !this.isAllDataTypesDefined(true) && this.updateColumnDataTypes(dataSource)) {\r\n                        updateColumnChanges(this, \"columns\");\r\n                        fireColumnsChanged(this);\r\n                        return (new Deferred).reject().promise()\r\n                    }\r\n                },\r\n                reset: function() {\r\n                    this._dataSource = null;\r\n                    this._dataSourceApplied = false;\r\n                    this._dataSourceColumnsCount = void 0;\r\n                    this.reinit()\r\n                },\r\n                resetColumnsCache: function() {\r\n                    this._visibleColumns = void 0;\r\n                    this._fixedColumns = void 0;\r\n                    this._rowCount = void 0;\r\n                    resetBandColumnsCache(this)\r\n                },\r\n                reinit: function(ignoreColumnOptionNames) {\r\n                    this._columnsUserState = this.getUserState();\r\n                    this._ignoreColumnOptionNames = ignoreColumnOptionNames || null;\r\n                    this.init();\r\n                    if (ignoreColumnOptionNames) {\r\n                        this._ignoreColumnOptionNames = null\r\n                    }\r\n                },\r\n                isInitialized: function() {\r\n                    return !!this._columns.length || !!this.option(\"columns\")\r\n                },\r\n                isDataSourceApplied: function() {\r\n                    return this._dataSourceApplied\r\n                },\r\n                getCommonSettings: function(column) {\r\n                    var commonColumnSettings = (!column || !column.type) && this.option(\"commonColumnSettings\") || {};\r\n                    var groupingOptions = this.option(\"grouping\") || {};\r\n                    var groupPanelOptions = this.option(\"groupPanel\") || {};\r\n                    return extend({\r\n                        allowFixing: this.option(\"columnFixing.enabled\"),\r\n                        allowResizing: this.option(\"allowColumnResizing\") || void 0,\r\n                        allowReordering: this.option(\"allowColumnReordering\"),\r\n                        minWidth: this.option(\"columnMinWidth\"),\r\n                        width: this.option(\"columnWidth\"),\r\n                        autoExpandGroup: groupingOptions.autoExpandAll,\r\n                        allowCollapsing: groupingOptions.allowCollapsing,\r\n                        allowGrouping: groupPanelOptions.allowColumnDragging && groupPanelOptions.visible || groupingOptions.contextMenuEnabled\r\n                    }, commonColumnSettings)\r\n                },\r\n                isColumnOptionUsed: function(optionName) {\r\n                    for (var i = 0; i < this._columns.length; i++) {\r\n                        if (this._columns[i][optionName]) {\r\n                            return true\r\n                        }\r\n                    }\r\n                },\r\n                isAllDataTypesDefined: function(checkSerializers) {\r\n                    var columns = this._columns;\r\n                    if (!columns.length) {\r\n                        return false\r\n                    }\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        if (!columns[i].dataField && columns[i].calculateCellValue === columns[i].defaultCalculateCellValue) {\r\n                            continue\r\n                        }\r\n                        if (!columns[i].dataType || checkSerializers && columns[i].deserializeValue && void 0 === columns[i].serializationFormat) {\r\n                            return false\r\n                        }\r\n                    }\r\n                    return true\r\n                },\r\n                getColumns: function() {\r\n                    return this._columns\r\n                },\r\n                isBandColumnsUsed: function() {\r\n                    return this.getColumns().some((function(column) {\r\n                        return column.isBand\r\n                    }))\r\n                },\r\n                getGroupColumns: function() {\r\n                    var result = [];\r\n                    each(this._columns, (function() {\r\n                        if (isDefined(this.groupIndex)) {\r\n                            result[this.groupIndex] = this\r\n                        }\r\n                    }));\r\n                    return result\r\n                },\r\n                getVisibleColumns: function(rowIndex) {\r\n                    this._visibleColumns = this._visibleColumns || this._getVisibleColumnsCore();\r\n                    rowIndex = isDefined(rowIndex) ? rowIndex : this._visibleColumns.length - 1;\r\n                    return this._visibleColumns[rowIndex] || []\r\n                },\r\n                getFixedColumns: function(rowIndex) {\r\n                    this._fixedColumns = this._fixedColumns || this._getFixedColumnsCore();\r\n                    rowIndex = isDefined(rowIndex) ? rowIndex : this._fixedColumns.length - 1;\r\n                    return this._fixedColumns[rowIndex] || []\r\n                },\r\n                getFilteringColumns: function() {\r\n                    return this.getColumns().filter(item => (item.dataField || item.name) && (item.allowFiltering || item.allowHeaderFiltering)).map(item => {\r\n                        var field = extend(true, {}, item);\r\n                        if (!isDefined(field.dataField)) {\r\n                            field.dataField = field.name\r\n                        }\r\n                        field.filterOperations = item.filterOperations !== item.defaultFilterOperations ? field.filterOperations : null;\r\n                        return field\r\n                    })\r\n                },\r\n                getColumnIndexOffset: function() {\r\n                    return 0\r\n                },\r\n                _getFixedColumnsCore: function() {\r\n                    var result = [];\r\n                    var rowCount = this.getRowCount();\r\n                    var isColumnFixing = this._isColumnFixing();\r\n                    var transparentColumn = {\r\n                        command: \"transparent\"\r\n                    };\r\n                    var transparentColspan = 0;\r\n                    var notFixedColumnCount;\r\n                    var transparentColumnIndex;\r\n                    var lastFixedPosition;\r\n                    if (isColumnFixing) {\r\n                        for (var i = 0; i <= rowCount; i++) {\r\n                            notFixedColumnCount = 0;\r\n                            lastFixedPosition = null;\r\n                            transparentColumnIndex = null;\r\n                            var visibleColumns = this.getVisibleColumns(i, true);\r\n                            for (var j = 0; j < visibleColumns.length; j++) {\r\n                                var prevColumn = visibleColumns[j - 1];\r\n                                var column = visibleColumns[j];\r\n                                if (!column.fixed) {\r\n                                    if (0 === i) {\r\n                                        if (column.isBand && column.colspan) {\r\n                                            transparentColspan += column.colspan\r\n                                        } else {\r\n                                            transparentColspan++\r\n                                        }\r\n                                    }\r\n                                    notFixedColumnCount++;\r\n                                    if (!isDefined(transparentColumnIndex)) {\r\n                                        transparentColumnIndex = j\r\n                                    }\r\n                                } else if (prevColumn && prevColumn.fixed && getFixedPosition(this, prevColumn) !== getFixedPosition(this, column)) {\r\n                                    if (!isDefined(transparentColumnIndex)) {\r\n                                        transparentColumnIndex = j\r\n                                    }\r\n                                } else {\r\n                                    lastFixedPosition = column.fixedPosition\r\n                                }\r\n                            }\r\n                            if (0 === i && (0 === notFixedColumnCount || notFixedColumnCount >= visibleColumns.length)) {\r\n                                return []\r\n                            }\r\n                            if (!isDefined(transparentColumnIndex)) {\r\n                                transparentColumnIndex = \"right\" === lastFixedPosition ? 0 : visibleColumns.length\r\n                            }\r\n                            result[i] = visibleColumns.slice(0);\r\n                            if (!transparentColumn.colspan) {\r\n                                transparentColumn.colspan = transparentColspan\r\n                            }\r\n                            result[i].splice(transparentColumnIndex, notFixedColumnCount, transparentColumn)\r\n                        }\r\n                    }\r\n                    return result.map(columns => columns.map(column => {\r\n                        var newColumn = _extends({}, column);\r\n                        if (newColumn.headerId) {\r\n                            newColumn.headerId += \"-fixed\"\r\n                        }\r\n                        return newColumn\r\n                    }))\r\n                },\r\n                _isColumnFixing: function() {\r\n                    var isColumnFixing = this.option(\"columnFixing.enabled\");\r\n                    !isColumnFixing && each(this._columns, (function(_, column) {\r\n                        if (column.fixed) {\r\n                            isColumnFixing = true;\r\n                            return false\r\n                        }\r\n                    }));\r\n                    return isColumnFixing\r\n                },\r\n                _getExpandColumnsCore: function() {\r\n                    return this.getGroupColumns()\r\n                },\r\n                getExpandColumns: function() {\r\n                    var expandColumns = this._getExpandColumnsCore();\r\n                    var expandColumn;\r\n                    var firstGroupColumn = expandColumns.filter(column => 0 === column.groupIndex)[0];\r\n                    var isFixedFirstGroupColumn = firstGroupColumn && firstGroupColumn.fixed;\r\n                    var isColumnFixing = this._isColumnFixing();\r\n                    if (expandColumns.length) {\r\n                        expandColumn = this.columnOption(\"command:expand\")\r\n                    }\r\n                    expandColumns = map(expandColumns, column => extend({}, column, {\r\n                        visibleWidth: null,\r\n                        minWidth: null,\r\n                        cellTemplate: !isDefined(column.groupIndex) ? column.cellTemplate : null,\r\n                        headerCellTemplate: null,\r\n                        fixed: !isDefined(column.groupIndex) || !isFixedFirstGroupColumn ? isColumnFixing : true\r\n                    }, expandColumn, {\r\n                        index: column.index,\r\n                        type: column.type || GROUP_COMMAND_COLUMN_NAME\r\n                    }));\r\n                    return expandColumns\r\n                },\r\n                getBandColumnsCache: function() {\r\n                    if (!this._bandColumnsCache) {\r\n                        var columns = this._columns;\r\n                        var columnChildrenByIndex = {};\r\n                        var columnParentByIndex = {};\r\n                        var isPlain = true;\r\n                        columns.forEach((function(column) {\r\n                            var ownerBand = column.ownerBand;\r\n                            var parentIndex = isObject(ownerBand) ? ownerBand.index : ownerBand;\r\n                            var parent = columns[parentIndex];\r\n                            if (column.hasColumns) {\r\n                                isPlain = false\r\n                            }\r\n                            if (column.colspan) {\r\n                                column.colspan = void 0\r\n                            }\r\n                            if (column.rowspan) {\r\n                                column.rowspan = void 0\r\n                            }\r\n                            if (parent) {\r\n                                columnParentByIndex[column.index] = parent\r\n                            } else {\r\n                                parentIndex = -1\r\n                            }\r\n                            columnChildrenByIndex[parentIndex] = columnChildrenByIndex[parentIndex] || [];\r\n                            columnChildrenByIndex[parentIndex].push(column)\r\n                        }));\r\n                        this._bandColumnsCache = {\r\n                            isPlain: isPlain,\r\n                            columnChildrenByIndex: columnChildrenByIndex,\r\n                            columnParentByIndex: columnParentByIndex\r\n                        }\r\n                    }\r\n                    return this._bandColumnsCache\r\n                },\r\n                _isColumnVisible: function(column) {\r\n                    return column.visible && this.isParentColumnVisible(column.index)\r\n                },\r\n                _getVisibleColumnsCore: function() {\r\n                    var that = this;\r\n                    var i;\r\n                    var result = [];\r\n                    var rowspanGroupColumns = 0;\r\n                    var rowspanExpandColumns = 0;\r\n                    var rowCount = that.getRowCount();\r\n                    var positiveIndexedColumns = [];\r\n                    var negativeIndexedColumns = [];\r\n                    var notGroupedColumnsCount = 0;\r\n                    var isFixedToEnd;\r\n                    var rtlEnabled = that.option(\"rtlEnabled\");\r\n                    var bandColumnsCache = that.getBandColumnsCache();\r\n                    var expandColumns = mergeColumns(that, that.getExpandColumns(), that._columns);\r\n                    var columns = mergeColumns(that, that._columns, that._commandColumns, true);\r\n                    var columnDigitsCount = function(number) {\r\n                        var i;\r\n                        for (i = 0; number > 1; i++) {\r\n                            number /= 10\r\n                        }\r\n                        return i\r\n                    }(columns.length);\r\n                    ! function(that, columns, bandColumnsCache) {\r\n                        var rowspan;\r\n                        for (var i = 0; i < columns.length; i++) {\r\n                            var column = columns[i];\r\n                            if (column.visible || column.command) {\r\n                                if (column.isBand) {\r\n                                    column.colspan = column.colspan || calculateColspan(that, column.index)\r\n                                }\r\n                                if (!column.isBand || !column.colspan) {\r\n                                    rowspan = that.getRowCount();\r\n                                    if (!column.command && (!isDefined(column.groupIndex) || column.showWhenGrouped)) {\r\n                                        rowspan -= getParentBandColumns(column.index, bandColumnsCache.columnParentByIndex).length\r\n                                    }\r\n                                    if (rowspan > 1) {\r\n                                        column.rowspan = rowspan\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }(that, columns, bandColumnsCache);\r\n                    for (i = 0; i < rowCount; i++) {\r\n                        result[i] = [];\r\n                        negativeIndexedColumns[i] = [{}];\r\n                        positiveIndexedColumns[i] = [{}, {}, {}]\r\n                    }\r\n                    each(columns, (function() {\r\n                        var visibleIndex = this.visibleIndex;\r\n                        var indexedColumns;\r\n                        var parentBandColumns = getParentBandColumns(this.index, bandColumnsCache.columnParentByIndex);\r\n                        var visible = that._isColumnVisible(this);\r\n                        if (visible && (!isDefined(this.groupIndex) || this.showWhenGrouped)) {\r\n                            var rowIndex = parentBandColumns.length;\r\n                            if (visibleIndex < 0) {\r\n                                visibleIndex = -visibleIndex;\r\n                                indexedColumns = negativeIndexedColumns[rowIndex]\r\n                            } else {\r\n                                this.fixed = parentBandColumns.length ? parentBandColumns[0].fixed : this.fixed;\r\n                                this.fixedPosition = parentBandColumns.length ? parentBandColumns[0].fixedPosition : this.fixedPosition;\r\n                                if (this.fixed) {\r\n                                    isFixedToEnd = \"right\" === this.fixedPosition;\r\n                                    if (rtlEnabled && (!this.command || isCustomCommandColumn(that, this))) {\r\n                                        isFixedToEnd = !isFixedToEnd\r\n                                    }\r\n                                    if (isFixedToEnd) {\r\n                                        indexedColumns = positiveIndexedColumns[rowIndex][2]\r\n                                    } else {\r\n                                        indexedColumns = positiveIndexedColumns[rowIndex][0]\r\n                                    }\r\n                                } else {\r\n                                    indexedColumns = positiveIndexedColumns[rowIndex][1]\r\n                                }\r\n                            }\r\n                            if (parentBandColumns.length) {\r\n                                visibleIndex = numberToString(visibleIndex, columnDigitsCount);\r\n                                for (i = parentBandColumns.length - 1; i >= 0; i--) {\r\n                                    visibleIndex = numberToString(parentBandColumns[i].visibleIndex, columnDigitsCount) + visibleIndex\r\n                                }\r\n                            }\r\n                            indexedColumns[visibleIndex] = indexedColumns[visibleIndex] || [];\r\n                            indexedColumns[visibleIndex].push(this);\r\n                            notGroupedColumnsCount++\r\n                        }\r\n                    }));\r\n                    each(result, (function(rowIndex) {\r\n                        orderEach(negativeIndexedColumns[rowIndex], (function(_, columns) {\r\n                            result[rowIndex].unshift.apply(result[rowIndex], columns)\r\n                        }));\r\n                        var firstPositiveIndexColumn = result[rowIndex].length;\r\n                        each(positiveIndexedColumns[rowIndex], (function(index, columnsByFixing) {\r\n                            orderEach(columnsByFixing, (function(_, columnsByVisibleIndex) {\r\n                                result[rowIndex].push.apply(result[rowIndex], columnsByVisibleIndex)\r\n                            }))\r\n                        }));\r\n                        if (rowspanExpandColumns < rowIndex + 1) {\r\n                            rowspanExpandColumns += processExpandColumns.call(that, result[rowIndex], expandColumns, \"detailExpand\", firstPositiveIndexColumn)\r\n                        }\r\n                        if (rowspanGroupColumns < rowIndex + 1) {\r\n                            rowspanGroupColumns += processExpandColumns.call(that, result[rowIndex], expandColumns, GROUP_COMMAND_COLUMN_NAME, firstPositiveIndexColumn)\r\n                        }\r\n                    }));\r\n                    result.push(function getDataColumns(columns, rowIndex, bandColumnID) {\r\n                        var result = [];\r\n                        rowIndex = rowIndex || 0;\r\n                        columns[rowIndex] && each(columns[rowIndex], (function(_, column) {\r\n                            if (column.ownerBand === bandColumnID || column.type === GROUP_COMMAND_COLUMN_NAME) {\r\n                                if (!column.isBand || !column.colspan) {\r\n                                    if (!column.command || rowIndex < 1) {\r\n                                        result.push(column)\r\n                                    }\r\n                                } else {\r\n                                    result.push.apply(result, getDataColumns(columns, rowIndex + 1, column.index))\r\n                                }\r\n                            }\r\n                        }));\r\n                        return result\r\n                    }(result));\r\n                    if (!notGroupedColumnsCount && that._columns.length) {\r\n                        result[rowCount].push({\r\n                            command: \"empty\"\r\n                        })\r\n                    }\r\n                    return result\r\n                },\r\n                getInvisibleColumns: function(columns, bandColumnIndex) {\r\n                    var that = this;\r\n                    var result = [];\r\n                    var hiddenColumnsByBand;\r\n                    columns = columns || that._columns;\r\n                    each(columns, (function(_, column) {\r\n                        if (column.ownerBand !== bandColumnIndex) {\r\n                            return\r\n                        }\r\n                        if (column.isBand) {\r\n                            if (!column.visible) {\r\n                                hiddenColumnsByBand = that.getChildrenByBandColumn(column.index)\r\n                            } else {\r\n                                hiddenColumnsByBand = that.getInvisibleColumns(that.getChildrenByBandColumn(column.index), column.index)\r\n                            }\r\n                            if (hiddenColumnsByBand.length) {\r\n                                result.push(column);\r\n                                result = result.concat(hiddenColumnsByBand)\r\n                            }\r\n                            return\r\n                        }\r\n                        if (!column.visible) {\r\n                            result.push(column)\r\n                        }\r\n                    }));\r\n                    return result\r\n                },\r\n                getChooserColumns: function(getAllColumns) {\r\n                    var columns = getAllColumns ? this.getColumns() : this.getInvisibleColumns();\r\n                    var columnChooserColumns = columns.filter(column => column.showInColumnChooser);\r\n                    var sortOrder = this.option(\"columnChooser.sortOrder\");\r\n                    return ((columns, sortOrder) => {\r\n                        if (\"asc\" !== sortOrder && \"desc\" !== sortOrder) {\r\n                            return columns\r\n                        }\r\n                        var sign = \"asc\" === sortOrder ? 1 : -1;\r\n                        columns.sort((function(column1, column2) {\r\n                            var caption1 = column1.caption || \"\";\r\n                            var caption2 = column2.caption || \"\";\r\n                            return sign * caption1.localeCompare(caption2)\r\n                        }));\r\n                        return columns\r\n                    })(columnChooserColumns, sortOrder)\r\n                },\r\n                allowMoveColumn: function(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation) {\r\n                    var columnIndex = getColumnIndexByVisibleIndex(this, fromVisibleIndex, sourceLocation);\r\n                    var sourceColumn = this._columns[columnIndex];\r\n                    if (sourceColumn && (sourceColumn.allowReordering || sourceColumn.allowGrouping || sourceColumn.allowHiding)) {\r\n                        if (sourceLocation === targetLocation) {\r\n                            if (\"columnChooser\" === sourceLocation) {\r\n                                return false\r\n                            }\r\n                            fromVisibleIndex = isObject(fromVisibleIndex) ? fromVisibleIndex.columnIndex : fromVisibleIndex;\r\n                            toVisibleIndex = isObject(toVisibleIndex) ? toVisibleIndex.columnIndex : toVisibleIndex;\r\n                            return fromVisibleIndex !== toVisibleIndex && fromVisibleIndex + 1 !== toVisibleIndex\r\n                        } else if (\"group\" === sourceLocation && \"columnChooser\" !== targetLocation || \"group\" === targetLocation) {\r\n                            return sourceColumn && sourceColumn.allowGrouping\r\n                        } else if (\"columnChooser\" === sourceLocation || \"columnChooser\" === targetLocation) {\r\n                            return sourceColumn && sourceColumn.allowHiding\r\n                        }\r\n                        return true\r\n                    }\r\n                    return false\r\n                },\r\n                moveColumn: function(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation) {\r\n                    var options = {};\r\n                    var prevGroupIndex;\r\n                    var fromIndex = getColumnIndexByVisibleIndex(this, fromVisibleIndex, sourceLocation);\r\n                    var toIndex = getColumnIndexByVisibleIndex(this, toVisibleIndex, targetLocation);\r\n                    var targetGroupIndex;\r\n                    if (fromIndex >= 0) {\r\n                        var column = this._columns[fromIndex];\r\n                        toVisibleIndex = isObject(toVisibleIndex) ? toVisibleIndex.columnIndex : toVisibleIndex;\r\n                        targetGroupIndex = toIndex >= 0 ? this._columns[toIndex].groupIndex : -1;\r\n                        if (isDefined(column.groupIndex) && \"group\" === sourceLocation) {\r\n                            if (targetGroupIndex > column.groupIndex) {\r\n                                targetGroupIndex--\r\n                            }\r\n                            if (\"group\" !== targetLocation) {\r\n                                options.groupIndex = void 0\r\n                            } else {\r\n                                prevGroupIndex = column.groupIndex;\r\n                                delete column.groupIndex;\r\n                                updateColumnGroupIndexes(this)\r\n                            }\r\n                        }\r\n                        if (\"group\" === targetLocation) {\r\n                            options.groupIndex = function(that, column, groupIndex) {\r\n                                var groupColumns = that.getGroupColumns();\r\n                                var i;\r\n                                if (groupIndex >= 0) {\r\n                                    for (i = 0; i < groupColumns.length; i++) {\r\n                                        if (groupColumns[i].groupIndex >= groupIndex) {\r\n                                            groupColumns[i].groupIndex++\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    groupIndex = 0;\r\n                                    for (i = 0; i < groupColumns.length; i++) {\r\n                                        groupIndex = Math.max(groupIndex, groupColumns[i].groupIndex + 1)\r\n                                    }\r\n                                }\r\n                                return groupIndex\r\n                            }(this, 0, targetGroupIndex);\r\n                            column.groupIndex = prevGroupIndex\r\n                        } else if (toVisibleIndex >= 0) {\r\n                            var targetColumn = this._columns[toIndex];\r\n                            if (!targetColumn || column.ownerBand !== targetColumn.ownerBand) {\r\n                                options.visibleIndex = MAX_SAFE_INTEGER\r\n                            } else if (isColumnFixed(this, column) ^ isColumnFixed(this, targetColumn)) {\r\n                                options.visibleIndex = MAX_SAFE_INTEGER\r\n                            } else {\r\n                                options.visibleIndex = targetColumn.visibleIndex\r\n                            }\r\n                        }\r\n                        var isVisible = \"columnChooser\" !== targetLocation;\r\n                        if (column.visible !== isVisible) {\r\n                            options.visible = isVisible\r\n                        }\r\n                        this.columnOption(column.index, options)\r\n                    }\r\n                },\r\n                changeSortOrder: function(columnIndex, sortOrder) {\r\n                    var options = {};\r\n                    var sortingOptions = this.option(\"sorting\");\r\n                    var sortingMode = sortingOptions && sortingOptions.mode;\r\n                    var needResetSorting = \"single\" === sortingMode || !sortOrder;\r\n                    var allowSorting = \"single\" === sortingMode || \"multiple\" === sortingMode;\r\n                    var column = this._columns[columnIndex];\r\n                    if (allowSorting && column && column.allowSorting) {\r\n                        if (needResetSorting && !isDefined(column.groupIndex)) {\r\n                            each(this._columns, (function(index) {\r\n                                if (index !== columnIndex && this.sortOrder) {\r\n                                    if (!isDefined(this.groupIndex)) {\r\n                                        delete this.sortOrder\r\n                                    }\r\n                                    delete this.sortIndex\r\n                                }\r\n                            }))\r\n                        }\r\n                        if (isSortOrderValid(sortOrder)) {\r\n                            if (column.sortOrder !== sortOrder) {\r\n                                options.sortOrder = sortOrder\r\n                            }\r\n                        } else if (\"none\" === sortOrder) {\r\n                            if (column.sortOrder) {\r\n                                options.sortIndex = void 0;\r\n                                options.sortOrder = void 0\r\n                            }\r\n                        } else {\r\n                            ! function(column) {\r\n                                if (\"ctrl\" === sortOrder) {\r\n                                    if (!(\"sortOrder\" in column && \"sortIndex\" in column)) {\r\n                                        return false\r\n                                    }\r\n                                    options.sortOrder = void 0;\r\n                                    options.sortIndex = void 0\r\n                                } else if (isDefined(column.groupIndex) || isDefined(column.sortIndex)) {\r\n                                    options.sortOrder = \"desc\" === column.sortOrder ? \"asc\" : \"desc\"\r\n                                } else {\r\n                                    options.sortOrder = \"asc\"\r\n                                }\r\n                                return true\r\n                            }(column)\r\n                        }\r\n                    }\r\n                    this.columnOption(column.index, options)\r\n                },\r\n                getSortDataSourceParameters: function(useLocalSelector) {\r\n                    var sortColumns = [];\r\n                    var sort = [];\r\n                    each(this._columns, (function() {\r\n                        if ((this.dataField || this.selector || this.calculateCellValue) && isDefined(this.sortIndex) && !isDefined(this.groupIndex)) {\r\n                            sortColumns[this.sortIndex] = this\r\n                        }\r\n                    }));\r\n                    each(sortColumns, (function() {\r\n                        var sortOrder = this && this.sortOrder;\r\n                        if (isSortOrderValid(sortOrder)) {\r\n                            var sortItem = {\r\n                                selector: this.calculateSortValue || this.displayField || this.calculateDisplayValue || useLocalSelector && this.selector || this.dataField || this.calculateCellValue,\r\n                                desc: \"desc\" === this.sortOrder\r\n                            };\r\n                            if (this.sortingMethod) {\r\n                                sortItem.compare = this.sortingMethod.bind(this)\r\n                            }\r\n                            sort.push(sortItem)\r\n                        }\r\n                    }));\r\n                    return sort.length > 0 ? sort : null\r\n                },\r\n                getGroupDataSourceParameters: function(useLocalSelector) {\r\n                    var group = [];\r\n                    each(this.getGroupColumns(), (function() {\r\n                        var selector = this.calculateGroupValue || this.displayField || this.calculateDisplayValue || useLocalSelector && this.selector || this.dataField || this.calculateCellValue;\r\n                        if (selector) {\r\n                            var groupItem = {\r\n                                selector: selector,\r\n                                desc: \"desc\" === this.sortOrder,\r\n                                isExpanded: !!this.autoExpandGroup\r\n                            };\r\n                            if (this.sortingMethod) {\r\n                                groupItem.compare = this.sortingMethod.bind(this)\r\n                            }\r\n                            group.push(groupItem)\r\n                        }\r\n                    }));\r\n                    return group.length > 0 ? group : null\r\n                },\r\n                refresh: function(updateNewLookupsOnly) {\r\n                    var deferreds = [];\r\n                    each(this._columns, (function() {\r\n                        var lookup = this.lookup;\r\n                        if (lookup && !this.calculateDisplayValue) {\r\n                            if (updateNewLookupsOnly && lookup.valueMap) {\r\n                                return\r\n                            }\r\n                            if (lookup.update) {\r\n                                deferreds.push(lookup.update())\r\n                            }\r\n                        }\r\n                    }));\r\n                    return when.apply($, deferreds).done(resetColumnsCache.bind(null, this))\r\n                },\r\n                _updateColumnOptions: function(column, columnIndex) {\r\n                    column.selector = column.selector || function(data) {\r\n                        return column.calculateCellValue(data)\r\n                    };\r\n                    each([\"calculateSortValue\", \"calculateGroupValue\", \"calculateDisplayValue\"], (function(_, calculateCallbackName) {\r\n                        var calculateCallback = column[calculateCallbackName];\r\n                        if (isFunction(calculateCallback)) {\r\n                            if (!calculateCallback.originalCallback) {\r\n                                var context = {\r\n                                    column: column\r\n                                };\r\n                                column[calculateCallbackName] = function(data) {\r\n                                    return calculateCallback.call(context.column, data)\r\n                                };\r\n                                column[calculateCallbackName].originalCallback = calculateCallback;\r\n                                column[calculateCallbackName].columnIndex = columnIndex;\r\n                                column[calculateCallbackName].context = context\r\n                            } else {\r\n                                column[calculateCallbackName].context.column = column\r\n                            }\r\n                        }\r\n                    }));\r\n                    if (isString(column.calculateDisplayValue)) {\r\n                        column.displayField = column.calculateDisplayValue;\r\n                        column.calculateDisplayValue = compileGetter(column.displayField)\r\n                    }\r\n                    if (column.calculateDisplayValue) {\r\n                        column.displayValueMap = column.displayValueMap || {}\r\n                    }\r\n                    updateSerializers(column, column.dataType);\r\n                    var lookup = column.lookup;\r\n                    if (lookup) {\r\n                        updateSerializers(lookup, lookup.dataType)\r\n                    }\r\n                    var dataType = lookup ? lookup.dataType : column.dataType;\r\n                    if (dataType) {\r\n                        column.alignment = column.alignment || function(dataType, isRTL) {\r\n                            switch (dataType) {\r\n                                case \"number\":\r\n                                    return \"right\";\r\n                                case \"boolean\":\r\n                                    return \"center\";\r\n                                default:\r\n                                    return getDefaultAlignment(isRTL)\r\n                            }\r\n                        }(dataType, this.option(\"rtlEnabled\"));\r\n                        column.format = column.format || gridCoreUtils.getFormatByDataType(dataType);\r\n                        column.customizeText = column.customizeText || getCustomizeTextByDataType(dataType);\r\n                        column.defaultFilterOperations = column.defaultFilterOperations || !lookup && DATATYPE_OPERATIONS[dataType] || [];\r\n                        if (!isDefined(column.filterOperations)) {\r\n                            setFilterOperationsAsDefaultValues(column)\r\n                        }\r\n                        column.defaultFilterOperation = column.filterOperations && column.filterOperations[0] || \"=\";\r\n                        column.showEditorAlways = isDefined(column.showEditorAlways) ? column.showEditorAlways : \"boolean\" === dataType && !column.cellTemplate && !column.lookup\r\n                    }\r\n                },\r\n                updateColumnDataTypes: function(dataSource) {\r\n                    var that = this;\r\n                    var dateSerializationFormat = that.option(\"dateSerializationFormat\");\r\n                    var firstItems = that._getFirstItems(dataSource);\r\n                    var isColumnDataTypesUpdated = false;\r\n                    each(that._columns, (function(index, column) {\r\n                        var i;\r\n                        var value;\r\n                        var dataType;\r\n                        var lookupDataType;\r\n                        var valueDataType;\r\n                        var lookup = column.lookup;\r\n                        if (gridCoreUtils.isDateType(column.dataType) && void 0 === column.serializationFormat) {\r\n                            column.serializationFormat = dateSerializationFormat\r\n                        }\r\n                        if (lookup && gridCoreUtils.isDateType(lookup.dataType) && void 0 === column.serializationFormat) {\r\n                            lookup.serializationFormat = dateSerializationFormat\r\n                        }\r\n                        if (column.calculateCellValue && firstItems.length) {\r\n                            if (!column.dataType || lookup && !lookup.dataType) {\r\n                                for (i = 0; i < firstItems.length; i++) {\r\n                                    value = column.calculateCellValue(firstItems[i]);\r\n                                    if (!column.dataType) {\r\n                                        valueDataType = getValueDataType(value);\r\n                                        dataType = dataType || valueDataType;\r\n                                        if (dataType && valueDataType && dataType !== valueDataType) {\r\n                                            dataType = \"string\"\r\n                                        }\r\n                                    }\r\n                                    if (lookup && !lookup.dataType) {\r\n                                        valueDataType = getValueDataType(gridCoreUtils.getDisplayValue(column, value, firstItems[i]));\r\n                                        lookupDataType = lookupDataType || valueDataType;\r\n                                        if (lookupDataType && valueDataType && lookupDataType !== valueDataType) {\r\n                                            lookupDataType = \"string\"\r\n                                        }\r\n                                    }\r\n                                }\r\n                                if (dataType || lookupDataType) {\r\n                                    if (dataType) {\r\n                                        column.dataType = dataType\r\n                                    }\r\n                                    if (lookup && lookupDataType) {\r\n                                        lookup.dataType = lookupDataType\r\n                                    }\r\n                                    isColumnDataTypesUpdated = true\r\n                                }\r\n                            }\r\n                            if (void 0 === column.serializationFormat || lookup && void 0 === lookup.serializationFormat) {\r\n                                for (i = 0; i < firstItems.length; i++) {\r\n                                    value = column.calculateCellValue(firstItems[i], true);\r\n                                    if (void 0 === column.serializationFormat) {\r\n                                        column.serializationFormat = getSerializationFormat(column.dataType, value)\r\n                                    }\r\n                                    if (lookup && void 0 === lookup.serializationFormat) {\r\n                                        lookup.serializationFormat = getSerializationFormat(lookup.dataType, lookup.calculateCellValue(value, true))\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        that._updateColumnOptions(column, index)\r\n                    }));\r\n                    return isColumnDataTypesUpdated\r\n                },\r\n                _customizeColumns: function(columns) {\r\n                    var customizeColumns = this.option(\"customizeColumns\");\r\n                    if (customizeColumns) {\r\n                        var hasOwnerBand = columns.some((function(column) {\r\n                            return isObject(column.ownerBand)\r\n                        }));\r\n                        if (hasOwnerBand) {\r\n                            updateIndexes(this)\r\n                        }\r\n                        customizeColumns(columns);\r\n                        assignColumns(this, createColumnsFromOptions(this, columns))\r\n                    }\r\n                },\r\n                updateColumns: function(dataSource, forceApplying) {\r\n                    if (!forceApplying) {\r\n                        this.updateSortingGrouping(dataSource)\r\n                    }\r\n                    if (!dataSource || dataSource.isLoaded()) {\r\n                        var sortParameters = dataSource ? dataSource.sort() || [] : this.getSortDataSourceParameters();\r\n                        var groupParameters = dataSource ? dataSource.group() || [] : this.getGroupDataSourceParameters();\r\n                        var filterParameters = null === dataSource || void 0 === dataSource ? void 0 : dataSource.lastLoadOptions().filter;\r\n                        this._customizeColumns(this._columns);\r\n                        updateIndexes(this);\r\n                        var columns = this._columns;\r\n                        return when(this.refresh(true)).always(() => {\r\n                            if (this._columns !== columns) {\r\n                                return\r\n                            }\r\n                            this._updateChanges(dataSource, {\r\n                                sorting: sortParameters,\r\n                                grouping: groupParameters,\r\n                                filtering: filterParameters\r\n                            });\r\n                            fireColumnsChanged(this)\r\n                        })\r\n                    }\r\n                },\r\n                _updateChanges: function(dataSource, parameters) {\r\n                    if (dataSource) {\r\n                        this.updateColumnDataTypes(dataSource);\r\n                        this._dataSourceApplied = true\r\n                    }\r\n                    if (!gridCoreUtils.equalSortParameters(parameters.sorting, this.getSortDataSourceParameters())) {\r\n                        updateColumnChanges(this, \"sorting\")\r\n                    }\r\n                    if (!gridCoreUtils.equalSortParameters(parameters.grouping, this.getGroupDataSourceParameters())) {\r\n                        updateColumnChanges(this, \"grouping\")\r\n                    }\r\n                    var dataController = this.getController(\"data\");\r\n                    if (dataController && !gridCoreUtils.equalFilterParameters(parameters.filtering, dataController.getCombinedFilter())) {\r\n                        updateColumnChanges(this, \"filtering\")\r\n                    }\r\n                    updateColumnChanges(this, \"columns\")\r\n                },\r\n                updateSortingGrouping: function(dataSource, fromDataSource) {\r\n                    var that = this;\r\n                    var sortParameters;\r\n                    var isColumnsChanged;\r\n                    var updateSortGroupParameterIndexes = function(columns, sortParameters, indexParameterName) {\r\n                        each(columns, (function(index, column) {\r\n                            delete column[indexParameterName];\r\n                            if (sortParameters) {\r\n                                for (var i = 0; i < sortParameters.length; i++) {\r\n                                    var selector = sortParameters[i].selector;\r\n                                    var isExpanded = sortParameters[i].isExpanded;\r\n                                    if (selector === column.dataField || selector === column.name || selector === column.selector || selector === column.calculateCellValue || selector === column.calculateGroupValue || selector === column.calculateDisplayValue) {\r\n                                        column.sortOrder = column.sortOrder || (sortParameters[i].desc ? \"desc\" : \"asc\");\r\n                                        if (void 0 !== isExpanded) {\r\n                                            column.autoExpandGroup = isExpanded\r\n                                        }\r\n                                        column[indexParameterName] = i;\r\n                                        break\r\n                                    }\r\n                                }\r\n                            }\r\n                        }))\r\n                    };\r\n                    if (dataSource) {\r\n                        sortParameters = gridCoreUtils.normalizeSortingInfo(dataSource.sort());\r\n                        var groupParameters = gridCoreUtils.normalizeSortingInfo(dataSource.group());\r\n                        var columnsGroupParameters = that.getGroupDataSourceParameters();\r\n                        var columnsSortParameters = that.getSortDataSourceParameters();\r\n                        var groupingChanged = !gridCoreUtils.equalSortParameters(groupParameters, columnsGroupParameters, true);\r\n                        var groupExpandingChanged = !groupingChanged && !gridCoreUtils.equalSortParameters(groupParameters, columnsGroupParameters);\r\n                        if (!that._columns.length) {\r\n                            each(groupParameters, (function(index, group) {\r\n                                that._columns.push(group.selector)\r\n                            }));\r\n                            each(sortParameters, (function(index, sort) {\r\n                                that._columns.push(sort.selector)\r\n                            }));\r\n                            assignColumns(that, createColumnsFromOptions(that, that._columns))\r\n                        }\r\n                        if ((fromDataSource || !columnsGroupParameters && !that._hasUserState) && (groupingChanged || groupExpandingChanged)) {\r\n                            updateSortGroupParameterIndexes(that._columns, groupParameters, \"groupIndex\");\r\n                            if (fromDataSource) {\r\n                                groupingChanged && updateColumnChanges(that, \"grouping\");\r\n                                groupExpandingChanged && updateColumnChanges(that, \"groupExpanding\");\r\n                                isColumnsChanged = true\r\n                            }\r\n                        }\r\n                        if ((fromDataSource || !columnsSortParameters && !that._hasUserState) && !gridCoreUtils.equalSortParameters(sortParameters, columnsSortParameters)) {\r\n                            updateSortGroupParameterIndexes(that._columns, sortParameters, \"sortIndex\");\r\n                            if (fromDataSource) {\r\n                                updateColumnChanges(that, \"sorting\");\r\n                                isColumnsChanged = true\r\n                            }\r\n                        }\r\n                        if (isColumnsChanged) {\r\n                            fireColumnsChanged(that)\r\n                        }\r\n                    }\r\n                },\r\n                updateFilter: function(filter, remoteFiltering, columnIndex, filterValue) {\r\n                    if (!Array.isArray(filter)) {\r\n                        return filter\r\n                    }\r\n                    filter = extend([], filter);\r\n                    columnIndex = void 0 !== filter.columnIndex ? filter.columnIndex : columnIndex;\r\n                    filterValue = void 0 !== filter.filterValue ? filter.filterValue : filterValue;\r\n                    if (isString(filter[0]) && \"!\" !== filter[0]) {\r\n                        var column = this.columnOption(filter[0]);\r\n                        if (remoteFiltering) {\r\n                            if (config().forceIsoDateParsing && column && column.serializeValue && filter.length > 1) {\r\n                                filter[filter.length - 1] = column.serializeValue(filter[filter.length - 1], \"filter\")\r\n                            }\r\n                        } else if (column && column.selector) {\r\n                            filter[0] = column.selector;\r\n                            filter[0].columnIndex = column.index\r\n                        }\r\n                    } else if (isFunction(filter[0])) {\r\n                        filter[0].columnIndex = columnIndex;\r\n                        filter[0].filterValue = filterValue\r\n                    }\r\n                    for (var i = 0; i < filter.length; i++) {\r\n                        filter[i] = this.updateFilter(filter[i], remoteFiltering, columnIndex, filterValue)\r\n                    }\r\n                    return filter\r\n                },\r\n                columnCount: function() {\r\n                    return this._columns ? this._columns.length : 0\r\n                },\r\n                columnOption: function(identifier, option, value, notFireEvent) {\r\n                    var that = this;\r\n                    var columns = that._columns.concat(that._commandColumns);\r\n                    var column = findColumn(columns, identifier);\r\n                    if (column) {\r\n                        if (1 === arguments.length) {\r\n                            return extend({}, column)\r\n                        }\r\n                        if (isString(option)) {\r\n                            if (2 === arguments.length) {\r\n                                return columnOptionCore(that, column, option)\r\n                            } else {\r\n                                columnOptionCore(that, column, option, value, notFireEvent)\r\n                            }\r\n                        } else if (isObject(option)) {\r\n                            each(option, (function(optionName, value) {\r\n                                columnOptionCore(that, column, optionName, value, notFireEvent)\r\n                            }))\r\n                        }\r\n                        fireColumnsChanged(that)\r\n                    }\r\n                },\r\n                clearSorting: function() {\r\n                    var columnCount = this.columnCount();\r\n                    this.beginUpdate();\r\n                    for (var i = 0; i < columnCount; i++) {\r\n                        this.columnOption(i, \"sortOrder\", void 0)\r\n                    }\r\n                    this.endUpdate()\r\n                },\r\n                clearGrouping: function() {\r\n                    var columnCount = this.columnCount();\r\n                    this.beginUpdate();\r\n                    for (var i = 0; i < columnCount; i++) {\r\n                        this.columnOption(i, \"groupIndex\", void 0)\r\n                    }\r\n                    this.endUpdate()\r\n                },\r\n                getVisibleIndex: function(index, rowIndex) {\r\n                    var columns = this.getVisibleColumns(rowIndex);\r\n                    for (var i = columns.length - 1; i >= 0; i--) {\r\n                        if (columns[i].index === index) {\r\n                            return i\r\n                        }\r\n                    }\r\n                    return -1\r\n                },\r\n                getVisibleIndexByColumn: function(column, rowIndex) {\r\n                    var visibleColumns = this.getVisibleColumns(rowIndex);\r\n                    var visibleColumn = visibleColumns.filter(col => col.index === column.index && col.command === column.command)[0];\r\n                    return visibleColumns.indexOf(visibleColumn)\r\n                },\r\n                getVisibleColumnIndex: function(id, rowIndex) {\r\n                    var index = this.columnOption(id, \"index\");\r\n                    return this.getVisibleIndex(index, rowIndex)\r\n                },\r\n                addColumn: function(options) {\r\n                    var column = createColumn(this, options);\r\n                    var index = this._columns.length;\r\n                    this._columns.push(column);\r\n                    if (column.isBand) {\r\n                        this._columns = createColumnsFromOptions(this, this._columns);\r\n                        column = this._columns[index]\r\n                    }\r\n                    column.added = options;\r\n                    updateIndexes(this, column);\r\n                    this.updateColumns(this._dataSource);\r\n                    this._checkColumns()\r\n                },\r\n                deleteColumn: function(id) {\r\n                    var column = this.columnOption(id);\r\n                    if (column && column.index >= 0) {\r\n                        columns = this._columns, void columns.forEach(column => {\r\n                            if (isDefined(column.ownerBand)) {\r\n                                column.ownerBand = columns[column.ownerBand]\r\n                            }\r\n                        });\r\n                        this._columns.splice(column.index, 1);\r\n                        if (column.isBand) {\r\n                            var childIndexes = this.getChildrenByBandColumn(column.index).map(column => column.index);\r\n                            this._columns = this._columns.filter(column => childIndexes.indexOf(column.index) < 0)\r\n                        }\r\n                        updateIndexes(this);\r\n                        this.updateColumns(this._dataSource)\r\n                    }\r\n                    var columns\r\n                },\r\n                addCommandColumn: function(options) {\r\n                    var commandColumn = this._commandColumns.filter(column => column.command === options.command)[0];\r\n                    if (!commandColumn) {\r\n                        commandColumn = options;\r\n                        this._commandColumns.push(commandColumn)\r\n                    }\r\n                },\r\n                getUserState: function() {\r\n                    var columns = this._columns;\r\n                    var result = [];\r\n                    var i;\r\n\r\n                    function handleStateField(index, value) {\r\n                        if (void 0 !== columns[i][value]) {\r\n                            result[i][value] = columns[i][value]\r\n                        }\r\n                    }\r\n                    for (i = 0; i < columns.length; i++) {\r\n                        result[i] = {};\r\n                        each(USER_STATE_FIELD_NAMES, handleStateField)\r\n                    }\r\n                    return result\r\n                },\r\n                setName: function(column) {\r\n                    column.name = column.name || column.dataField || column.type\r\n                },\r\n                setUserState: function(state) {\r\n                    var dataSource = this._dataSource;\r\n                    var ignoreColumnOptionNames = this.option(\"stateStoring.ignoreColumnOptionNames\");\r\n                    null === state || void 0 === state ? void 0 : state.forEach(this.setName);\r\n                    if (!ignoreColumnOptionNames) {\r\n                        ignoreColumnOptionNames = [];\r\n                        var commonColumnSettings = this.getCommonSettings();\r\n                        if (!this.option(\"columnChooser.enabled\")) {\r\n                            ignoreColumnOptionNames.push(\"visible\")\r\n                        }\r\n                        if (\"none\" === this.option(\"sorting.mode\")) {\r\n                            ignoreColumnOptionNames.push(\"sortIndex\", \"sortOrder\")\r\n                        }\r\n                        if (!commonColumnSettings.allowGrouping) {\r\n                            ignoreColumnOptionNames.push(\"groupIndex\")\r\n                        }\r\n                        if (!commonColumnSettings.allowFixing) {\r\n                            ignoreColumnOptionNames.push(\"fixed\", \"fixedPosition\")\r\n                        }\r\n                        if (!commonColumnSettings.allowResizing) {\r\n                            ignoreColumnOptionNames.push(\"width\", \"visibleWidth\")\r\n                        }\r\n                        var isFilterPanelHidden = !this.option(\"filterPanel.visible\");\r\n                        if (!this.option(\"filterRow.visible\") && isFilterPanelHidden) {\r\n                            ignoreColumnOptionNames.push(\"filterValue\", \"selectedFilterOperation\")\r\n                        }\r\n                        if (!this.option(\"headerFilter.visible\") && isFilterPanelHidden) {\r\n                            ignoreColumnOptionNames.push(\"filterValues\", \"filterType\")\r\n                        }\r\n                    }\r\n                    this._columnsUserState = state;\r\n                    this._ignoreColumnOptionNames = ignoreColumnOptionNames;\r\n                    this._hasUserState = !!state;\r\n                    updateColumnChanges(this, \"filtering\");\r\n                    this.init();\r\n                    if (dataSource) {\r\n                        dataSource.sort(this.getSortDataSourceParameters());\r\n                        dataSource.group(this.getGroupDataSourceParameters())\r\n                    }\r\n                },\r\n                _checkColumns: function() {\r\n                    var usedNames = {};\r\n                    var hasEditableColumnWithoutName = false;\r\n                    var duplicatedNames = [];\r\n                    this._columns.forEach(column => {\r\n                        var _column$columns;\r\n                        var name = column.name;\r\n                        var isBand = null === (_column$columns = column.columns) || void 0 === _column$columns ? void 0 : _column$columns.length;\r\n                        var isEditable = column.allowEditing && (column.dataField || column.setCellValue) && !isBand;\r\n                        if (name) {\r\n                            if (usedNames[name]) {\r\n                                duplicatedNames.push('\"'.concat(name, '\"'))\r\n                            }\r\n                            usedNames[name] = true\r\n                        } else if (isEditable) {\r\n                            hasEditableColumnWithoutName = true\r\n                        }\r\n                    });\r\n                    if (duplicatedNames.length) {\r\n                        errors.log(\"E1059\", duplicatedNames.join(\", \"))\r\n                    }\r\n                    if (hasEditableColumnWithoutName) {\r\n                        errors.log(\"E1060\")\r\n                    }\r\n                },\r\n                _createCalculatedColumnOptions: function(columnOptions, bandColumn) {\r\n                    var calculatedColumnOptions = {};\r\n                    var dataField = columnOptions.dataField;\r\n                    if (Array.isArray(columnOptions.columns) && columnOptions.columns.length || columnOptions.isBand) {\r\n                        calculatedColumnOptions.isBand = true;\r\n                        dataField = null\r\n                    }\r\n                    if (dataField) {\r\n                        if (isString(dataField)) {\r\n                            var getter = compileGetter(dataField);\r\n                            calculatedColumnOptions = {\r\n                                caption: captionize(dataField),\r\n                                calculateCellValue: function(data, skipDeserialization) {\r\n                                    var value = getter(data);\r\n                                    return this.deserializeValue && !skipDeserialization ? this.deserializeValue(value) : value\r\n                                },\r\n                                setCellValue: defaultSetCellValue,\r\n                                parseValue: function(text) {\r\n                                    var result;\r\n                                    var parsedValue;\r\n                                    if (\"number\" === this.dataType) {\r\n                                        if (isString(text) && this.format) {\r\n                                            result = function(text, format) {\r\n                                                var parsedValue = numberLocalization.parse(text, format);\r\n                                                if (isNumeric(parsedValue)) {\r\n                                                    var formattedValue = numberLocalization.format(parsedValue, format);\r\n                                                    var formattedValueWithDefaultFormat = numberLocalization.format(parsedValue, \"decimal\");\r\n                                                    if (formattedValue === text || formattedValueWithDefaultFormat === text) {\r\n                                                        return parsedValue\r\n                                                    }\r\n                                                }\r\n                                            }(text.trim(), this.format)\r\n                                        } else if (isDefined(text) && isNumeric(text)) {\r\n                                            result = Number(text)\r\n                                        }\r\n                                    } else if (\"boolean\" === this.dataType) {\r\n                                        if (text === this.trueText) {\r\n                                            result = true\r\n                                        } else if (text === this.falseText) {\r\n                                            result = false\r\n                                        }\r\n                                    } else if (gridCoreUtils.isDateType(this.dataType)) {\r\n                                        parsedValue = dateLocalization.parse(text, this.format);\r\n                                        if (parsedValue) {\r\n                                            result = parsedValue\r\n                                        }\r\n                                    } else {\r\n                                        result = text\r\n                                    }\r\n                                    return result\r\n                                }\r\n                            }\r\n                        }\r\n                        calculatedColumnOptions.allowFiltering = true\r\n                    } else {\r\n                        calculatedColumnOptions.allowFiltering = !!columnOptions.calculateFilterExpression\r\n                    }\r\n                    calculatedColumnOptions.calculateFilterExpression = function() {\r\n                        return filterUtils.defaultCalculateFilterExpression.apply(this, arguments)\r\n                    };\r\n                    calculatedColumnOptions.createFilterExpression = function(filterValue) {\r\n                        var result;\r\n                        if (this.calculateFilterExpression) {\r\n                            result = this.calculateFilterExpression.apply(this, arguments)\r\n                        }\r\n                        if (isFunction(result)) {\r\n                            result = [result, \"=\", true]\r\n                        }\r\n                        if (result) {\r\n                            result.columnIndex = this.index;\r\n                            result.filterValue = filterValue\r\n                        }\r\n                        return result\r\n                    };\r\n                    if (!dataField || !isString(dataField)) {\r\n                        extend(true, calculatedColumnOptions, {\r\n                            allowSorting: false,\r\n                            allowGrouping: false,\r\n                            calculateCellValue: function() {\r\n                                return null\r\n                            }\r\n                        })\r\n                    }\r\n                    if (bandColumn) {\r\n                        calculatedColumnOptions.allowFixing = false\r\n                    }\r\n                    if (columnOptions.dataType) {\r\n                        calculatedColumnOptions.userDataType = columnOptions.dataType\r\n                    }\r\n                    if (columnOptions.selectedFilterOperation && !(\"defaultSelectedFilterOperation\" in calculatedColumnOptions)) {\r\n                        calculatedColumnOptions.defaultSelectedFilterOperation = columnOptions.selectedFilterOperation\r\n                    }\r\n                    if (columnOptions.lookup) {\r\n                        calculatedColumnOptions.lookup = {\r\n                            calculateCellValue: function(value, skipDeserialization) {\r\n                                if (this.valueExpr) {\r\n                                    value = this.valueMap && this.valueMap[value]\r\n                                }\r\n                                return this.deserializeValue && !skipDeserialization ? this.deserializeValue(value) : value\r\n                            },\r\n                            updateValueMap: function() {\r\n                                this.valueMap = {};\r\n                                if (this.items) {\r\n                                    var calculateValue = compileGetter(this.valueExpr);\r\n                                    var calculateDisplayValue = compileGetter(this.displayExpr);\r\n                                    for (var i = 0; i < this.items.length; i++) {\r\n                                        var item = this.items[i];\r\n                                        var displayValue = calculateDisplayValue(item);\r\n                                        this.valueMap[calculateValue(item)] = displayValue;\r\n                                        this.dataType = this.dataType || getValueDataType(displayValue)\r\n                                    }\r\n                                }\r\n                            },\r\n                            update: function() {\r\n                                var that = this;\r\n                                var dataSource = that.dataSource;\r\n                                if (dataSource) {\r\n                                    if (isFunction(dataSource) && !variableWrapper.isWrapped(dataSource)) {\r\n                                        dataSource = dataSource({})\r\n                                    }\r\n                                    if (isPlainObject(dataSource) || dataSource instanceof Store || Array.isArray(dataSource)) {\r\n                                        if (that.valueExpr) {\r\n                                            var dataSourceOptions = normalizeDataSourceOptions(dataSource);\r\n                                            dataSourceOptions.paginate = false;\r\n                                            dataSource = new DataSource(dataSourceOptions);\r\n                                            return dataSource.load().done((function(data) {\r\n                                                that.items = data;\r\n                                                that.updateValueMap && that.updateValueMap()\r\n                                            }))\r\n                                        }\r\n                                    } else {\r\n                                        errors.log(\"E1016\")\r\n                                    }\r\n                                } else {\r\n                                    that.updateValueMap && that.updateValueMap()\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    calculatedColumnOptions.resizedCallbacks = Callbacks();\r\n                    if (columnOptions.resized) {\r\n                        calculatedColumnOptions.resizedCallbacks.add(columnOptions.resized.bind(columnOptions))\r\n                    }\r\n                    each(calculatedColumnOptions, (function(optionName) {\r\n                        if (isFunction(calculatedColumnOptions[optionName]) && 0 !== optionName.indexOf(\"default\")) {\r\n                            var defaultOptionName = \"default\" + optionName.charAt(0).toUpperCase() + optionName.substr(1);\r\n                            calculatedColumnOptions[defaultOptionName] = calculatedColumnOptions[optionName]\r\n                        }\r\n                    }));\r\n                    return calculatedColumnOptions\r\n                },\r\n                getRowCount: function() {\r\n                    this._rowCount = this._rowCount || function(that) {\r\n                        var rowCount = 1;\r\n                        var bandColumnsCache = that.getBandColumnsCache();\r\n                        var columnParentByIndex = bandColumnsCache.columnParentByIndex;\r\n                        that._columns.forEach((function(column) {\r\n                            var parents = getParentBandColumns(column.index, columnParentByIndex);\r\n                            var invisibleParents = parents.filter((function(column) {\r\n                                return !column.visible\r\n                            }));\r\n                            if (column.visible && !invisibleParents.length) {\r\n                                rowCount = Math.max(rowCount, parents.length + 1)\r\n                            }\r\n                        }));\r\n                        return rowCount\r\n                    }(this);\r\n                    return this._rowCount\r\n                },\r\n                getRowIndex: function(columnIndex, alwaysGetRowIndex) {\r\n                    var column = this._columns[columnIndex];\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    return column && (alwaysGetRowIndex || column.visible && !(column.command || isDefined(column.groupIndex))) ? getParentBandColumns(columnIndex, bandColumnsCache.columnParentByIndex).length : 0\r\n                },\r\n                getChildrenByBandColumn: function(bandColumnIndex, onlyVisibleDirectChildren) {\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    var result = _getChildrenByBandColumn(bandColumnIndex, bandColumnsCache.columnChildrenByIndex, !onlyVisibleDirectChildren);\r\n                    if (onlyVisibleDirectChildren) {\r\n                        return result.filter((function(column) {\r\n                            return column.visible && !column.command\r\n                        })).sort((function(column1, column2) {\r\n                            return column1.visibleIndex - column2.visibleIndex\r\n                        }))\r\n                    }\r\n                    return result\r\n                },\r\n                isParentBandColumn: function(columnIndex, bandColumnIndex) {\r\n                    var result = false;\r\n                    var column = this._columns[columnIndex];\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    var parentBandColumns = column && getParentBandColumns(columnIndex, bandColumnsCache.columnParentByIndex);\r\n                    if (parentBandColumns) {\r\n                        each(parentBandColumns, (function(_, bandColumn) {\r\n                            if (bandColumn.index === bandColumnIndex) {\r\n                                result = true;\r\n                                return false\r\n                            }\r\n                        }))\r\n                    }\r\n                    return result\r\n                },\r\n                isParentColumnVisible: function(columnIndex) {\r\n                    var result = true;\r\n                    var bandColumnsCache = this.getBandColumnsCache();\r\n                    var bandColumns = columnIndex >= 0 && getParentBandColumns(columnIndex, bandColumnsCache.columnParentByIndex);\r\n                    bandColumns && each(bandColumns, (function(_, bandColumn) {\r\n                        result = result && bandColumn.visible;\r\n                        return result\r\n                    }));\r\n                    return result\r\n                },\r\n                getColumnId: function(column) {\r\n                    if (column.command && column.type === GROUP_COMMAND_COLUMN_NAME) {\r\n                        if (isCustomCommandColumn(this, column)) {\r\n                            return \"type:\" + column.type\r\n                        }\r\n                        return \"command:\" + column.command\r\n                    }\r\n                    return column.index\r\n                },\r\n                getCustomizeTextByDataType: getCustomizeTextByDataType,\r\n                getHeaderContentAlignment: function(columnAlignment) {\r\n                    var rtlEnabled = this.option(\"rtlEnabled\");\r\n                    if (rtlEnabled) {\r\n                        return \"left\" === columnAlignment ? \"right\" : \"left\"\r\n                    }\r\n                    return columnAlignment\r\n                }\r\n            }\r\n        }())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.columns_controller.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnsControllerModule\r\n} from \"../grid_core/ui.grid_core.columns_controller\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\ngridCore.registerModule(\"columns\", {\r\n    defaultOptions: function() {\r\n        return extend(true, {}, columnsControllerModule.defaultOptions(), {\r\n            commonColumnSettings: {\r\n                allowExporting: true\r\n            }\r\n        })\r\n    },\r\n    controllers: columnsControllerModule.controllers\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.data_source_adapter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport gridCore from \"../data_grid/ui.data_grid.core\";\r\nimport {\r\n    executeAsync,\r\n    getKeyHash\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport ArrayStore from \"../../data/array_store\";\r\nimport {\r\n    applyBatch\r\n} from \"../../data/array_utils\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nexport default gridCore.Controller.inherit(function() {\r\n    function cloneItems(items, groupCount) {\r\n        if (items) {\r\n            items = items.slice(0);\r\n            if (groupCount) {\r\n                for (var i = 0; i < items.length; i++) {\r\n                    items[i] = extend({\r\n                        key: items[i].key\r\n                    }, items[i]);\r\n                    items[i].items = cloneItems(items[i].items, groupCount - 1)\r\n                }\r\n            }\r\n        }\r\n        return items\r\n    }\r\n\r\n    function calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload) {\r\n        var operationTypes = {\r\n            reload: true,\r\n            fullReload: true\r\n        };\r\n        if (lastLoadOptions) {\r\n            operationTypes = {\r\n                sorting: !gridCore.equalSortParameters(loadOptions.sort, lastLoadOptions.sort),\r\n                grouping: !gridCore.equalSortParameters(loadOptions.group, lastLoadOptions.group, true),\r\n                groupExpanding: !gridCore.equalSortParameters(loadOptions.group, lastLoadOptions.group) || lastLoadOptions.groupExpand,\r\n                filtering: !gridCore.equalFilterParameters(loadOptions.filter, lastLoadOptions.filter),\r\n                pageIndex: loadOptions.pageIndex !== lastLoadOptions.pageIndex,\r\n                skip: loadOptions.skip !== lastLoadOptions.skip,\r\n                take: loadOptions.take !== lastLoadOptions.take,\r\n                pageSize: loadOptions.pageSize !== lastLoadOptions.pageSize,\r\n                fullReload: isFullReload\r\n            };\r\n            operationTypes.reload = isFullReload || operationTypes.sorting || operationTypes.grouping || operationTypes.filtering;\r\n            operationTypes.paging = operationTypes.pageIndex || operationTypes.pageSize || operationTypes.take\r\n        }\r\n        return operationTypes\r\n    }\r\n\r\n    function getPageDataFromCache(options, updatePaging) {\r\n        var groupCount = gridCore.normalizeSortingInfo(options.group || options.storeLoadOptions.group || options.loadOptions.group).length;\r\n        var items = [];\r\n        if (fillItemsFromCache(items, options, groupCount)) {\r\n            return items\r\n        } else if (updatePaging) {\r\n            ! function(cacheItemsFromBegin, options, groupCount) {\r\n                var cacheItemBeginCount = cacheItemsFromBegin.length;\r\n                var {\r\n                    storeLoadOptions: storeLoadOptions\r\n                } = options;\r\n                if (void 0 !== storeLoadOptions.skip && storeLoadOptions.take && !groupCount) {\r\n                    var cacheItemsFromEnd = [];\r\n                    fillItemsFromCache(cacheItemsFromEnd, options, groupCount, true);\r\n                    var cacheItemEndCount = cacheItemsFromEnd.length;\r\n                    if (cacheItemBeginCount || cacheItemEndCount) {\r\n                        var _options$skip2, _options$take2;\r\n                        options.skip = null !== (_options$skip2 = options.skip) && void 0 !== _options$skip2 ? _options$skip2 : storeLoadOptions.skip;\r\n                        options.take = null !== (_options$take2 = options.take) && void 0 !== _options$take2 ? _options$take2 : storeLoadOptions.take\r\n                    }\r\n                    if (cacheItemBeginCount) {\r\n                        storeLoadOptions.skip += cacheItemBeginCount;\r\n                        storeLoadOptions.take -= cacheItemBeginCount;\r\n                        options.cachedDataPartBegin = cacheItemsFromBegin\r\n                    }\r\n                    if (cacheItemEndCount) {\r\n                        storeLoadOptions.take -= cacheItemEndCount;\r\n                        options.cachedDataPartEnd = cacheItemsFromEnd.reverse()\r\n                    }\r\n                }\r\n            }(items, options, groupCount)\r\n        }\r\n    }\r\n\r\n    function fillItemsFromCache(items, options, groupCount, fromEnd) {\r\n        var _ref, _options$take, _options$cachedData;\r\n        var {\r\n            storeLoadOptions: storeLoadOptions\r\n        } = options;\r\n        var take = null !== (_ref = null !== (_options$take = options.take) && void 0 !== _options$take ? _options$take : storeLoadOptions.take) && void 0 !== _ref ? _ref : 0;\r\n        var cachedItems = null === (_options$cachedData = options.cachedData) || void 0 === _options$cachedData ? void 0 : _options$cachedData.items;\r\n        if (take && cachedItems) {\r\n            var _ref2, _options$skip;\r\n            var skip = null !== (_ref2 = null !== (_options$skip = options.skip) && void 0 !== _options$skip ? _options$skip : storeLoadOptions.skip) && void 0 !== _ref2 ? _ref2 : 0;\r\n            for (var i = 0; i < take; i++) {\r\n                var localIndex = fromEnd ? take - 1 - i : i;\r\n                var cacheItemIndex = localIndex + skip;\r\n                var cacheItem = cachedItems[cacheItemIndex];\r\n                if (void 0 === cacheItem && cacheItemIndex in cachedItems) {\r\n                    return true\r\n                }\r\n                var item = getItemFromCache(options, cacheItem, groupCount, localIndex, take);\r\n                if (item) {\r\n                    items.push(item)\r\n                } else {\r\n                    return false\r\n                }\r\n            }\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    function getItemFromCache(options, cacheItem, groupCount, index, take) {\r\n        if (groupCount && cacheItem) {\r\n            var skips = 0 === index && options.skips || [];\r\n            var takes = index === take - 1 && options.takes || [];\r\n            return function getGroupItemFromCache(cacheItem, groupCount, skips, takes) {\r\n                if (groupCount && cacheItem) {\r\n                    var result = _extends({}, cacheItem);\r\n                    var skip = skips[0] || 0;\r\n                    var take = takes[0];\r\n                    var items = cacheItem.items;\r\n                    if (items) {\r\n                        if (void 0 === take && !items[skip]) {\r\n                            return\r\n                        }\r\n                        result.items = [];\r\n                        if (skips.length) {\r\n                            result.isContinuation = true\r\n                        }\r\n                        if (takes.length) {\r\n                            result.isContinuationOnNextPage = true\r\n                        }\r\n                        for (var i = 0; void 0 === take ? items[i + skip] : i < take; i++) {\r\n                            var childCacheItem = items[i + skip];\r\n                            var item = getGroupItemFromCache(childCacheItem, groupCount - 1, skips.slice(1), takes.slice(1));\r\n                            if (void 0 !== item) {\r\n                                result.items.push(item)\r\n                            } else {\r\n                                return\r\n                            }\r\n                        }\r\n                    }\r\n                    return result\r\n                }\r\n                return cacheItem\r\n            }(cacheItem, groupCount, skips, takes)\r\n        } else {\r\n            return cacheItem\r\n        }\r\n    }\r\n\r\n    function getCacheItem(cacheItem, loadedItem, groupCount, skips) {\r\n        if (groupCount && loadedItem) {\r\n            var result = _extends({}, loadedItem);\r\n            delete result.isContinuation;\r\n            delete result.isContinuationOnNextPage;\r\n            var skip = skips[0] || 0;\r\n            if (loadedItem.items) {\r\n                result.items = (null === cacheItem || void 0 === cacheItem ? void 0 : cacheItem.items) || {};\r\n                loadedItem.items.forEach((item, index) => {\r\n                    var globalIndex = index + skip;\r\n                    var childSkips = 0 === index ? skips.slice(1) : [];\r\n                    result.items[globalIndex] = getCacheItem(result.items[globalIndex], item, groupCount - 1, childSkips)\r\n                })\r\n            }\r\n            return result\r\n        }\r\n        return loadedItem\r\n    }\r\n    return {\r\n        init: function(dataSource, remoteOperations) {\r\n            var that = this;\r\n            that._dataSource = dataSource;\r\n            that._remoteOperations = remoteOperations || {};\r\n            that._isLastPage = !dataSource.isLastPage();\r\n            that._hasLastPage = false;\r\n            that._currentTotalCount = 0;\r\n            that._cachedData = {\r\n                items: {}\r\n            };\r\n            that._lastOperationTypes = {};\r\n            that._eventsStrategy = dataSource._eventsStrategy;\r\n            that._totalCountCorrection = 0;\r\n            that._isLoadingAll = false;\r\n            that.changed = Callbacks();\r\n            that.loadingChanged = Callbacks();\r\n            that.loadError = Callbacks();\r\n            that.customizeStoreLoadOptions = Callbacks();\r\n            that.changing = Callbacks();\r\n            that.pushed = Callbacks();\r\n            that._dataChangedHandler = that._handleDataChanged.bind(that);\r\n            that._customizeStoreLoadOptionsHandler = that._handleCustomizeStoreLoadOptions.bind(that);\r\n            that._dataLoadedHandler = that._handleDataLoaded.bind(that);\r\n            that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\r\n            that._loadErrorHandler = that._handleLoadError.bind(that);\r\n            that._pushHandler = that._handlePush.bind(that);\r\n            that._changingHandler = that._handleChanging.bind(that);\r\n            dataSource.on(\"changed\", that._dataChangedHandler);\r\n            dataSource.on(\"customizeStoreLoadOptions\", that._customizeStoreLoadOptionsHandler);\r\n            dataSource.on(\"customizeLoadResult\", that._dataLoadedHandler);\r\n            dataSource.on(\"loadingChanged\", that._loadingChangedHandler);\r\n            dataSource.on(\"loadError\", that._loadErrorHandler);\r\n            dataSource.on(\"changing\", that._changingHandler);\r\n            dataSource.store().on(\"beforePush\", that._pushHandler);\r\n            each(dataSource, (function(memberName, member) {\r\n                if (!that[memberName] && isFunction(member)) {\r\n                    that[memberName] = function() {\r\n                        return this._dataSource[memberName].apply(this._dataSource, arguments)\r\n                    }\r\n                }\r\n            }))\r\n        },\r\n        remoteOperations: function() {\r\n            return this._remoteOperations\r\n        },\r\n        dispose: function(isSharedDataSource) {\r\n            var dataSource = this._dataSource;\r\n            var store = dataSource.store();\r\n            dataSource.off(\"changed\", this._dataChangedHandler);\r\n            dataSource.off(\"customizeStoreLoadOptions\", this._customizeStoreLoadOptionsHandler);\r\n            dataSource.off(\"customizeLoadResult\", this._dataLoadedHandler);\r\n            dataSource.off(\"loadingChanged\", this._loadingChangedHandler);\r\n            dataSource.off(\"loadError\", this._loadErrorHandler);\r\n            dataSource.off(\"changing\", this._changingHandler);\r\n            store && store.off(\"beforePush\", this._pushHandler);\r\n            if (!isSharedDataSource) {\r\n                dataSource.dispose()\r\n            }\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            var dataSource = this._dataSource;\r\n            if (operationTypes.reload) {\r\n                this.resetCurrentTotalCount();\r\n                this._isLastPage = !dataSource.paginate();\r\n                this._hasLastPage = this._isLastPage\r\n            }\r\n        },\r\n        resetCurrentTotalCount: function() {\r\n            this._currentTotalCount = 0;\r\n            this._totalCountCorrection = 0\r\n        },\r\n        resetCache: function() {\r\n            this._cachedStoreData = void 0;\r\n            this._cachedPagingData = void 0\r\n        },\r\n        resetPagesCache: function() {\r\n            this._cachedData = {\r\n                items: {}\r\n            }\r\n        },\r\n        _needClearStoreDataCache: function() {\r\n            var remoteOperations = this.remoteOperations();\r\n            var operationTypes = calculateOperationTypes(this._lastLoadOptions || {}, {});\r\n            var isLocalOperations = Object.keys(remoteOperations).every(operationName => !operationTypes[operationName] || !remoteOperations[operationName]);\r\n            return !isLocalOperations\r\n        },\r\n        push: function(changes, fromStore) {\r\n            var store = this.store();\r\n            if (this._needClearStoreDataCache()) {\r\n                this._cachedStoreData = void 0\r\n            }\r\n            this._cachedPagingData = void 0;\r\n            this.resetPagesCache(true);\r\n            if (this._cachedStoreData) {\r\n                applyBatch({\r\n                    keyInfo: store,\r\n                    data: this._cachedStoreData,\r\n                    changes: changes\r\n                })\r\n            }\r\n            if (!fromStore) {\r\n                this._applyBatch(changes)\r\n            }\r\n            this.pushed.fire(changes)\r\n        },\r\n        getDataIndexGetter: function() {\r\n            if (!this._dataIndexGetter) {\r\n                var indexByKey;\r\n                var storeData;\r\n                var store = this.store();\r\n                this._dataIndexGetter = data => {\r\n                    var isCacheUpdated = storeData && storeData !== this._cachedStoreData;\r\n                    if (!indexByKey || isCacheUpdated) {\r\n                        storeData = this._cachedStoreData || [];\r\n                        indexByKey = {};\r\n                        for (var i = 0; i < storeData.length; i++) {\r\n                            indexByKey[getKeyHash(store.keyOf(storeData[i]))] = i\r\n                        }\r\n                    }\r\n                    return indexByKey[getKeyHash(store.keyOf(data))]\r\n                }\r\n            }\r\n            return this._dataIndexGetter\r\n        },\r\n        _getKeyInfo: function() {\r\n            return this.store()\r\n        },\r\n        _applyBatch: function(changes) {\r\n            var keyInfo = this._getKeyInfo();\r\n            var dataSource = this._dataSource;\r\n            var groupCount = gridCore.normalizeSortingInfo(this.group()).length;\r\n            var totalCount = this.totalCount();\r\n            var isVirtualMode = \"virtual\" === this.option(\"scrolling.mode\");\r\n            changes = changes.filter((function(change) {\r\n                return !dataSource.paginate() || \"insert\" !== change.type || void 0 !== change.index\r\n            }));\r\n            var getItemCount = () => groupCount ? this.itemsCount() : this.items().length;\r\n            var oldItemCount = getItemCount();\r\n            applyBatch({\r\n                keyInfo: keyInfo,\r\n                data: this._items,\r\n                changes: changes,\r\n                groupCount: groupCount,\r\n                useInsertIndex: true\r\n            });\r\n            applyBatch({\r\n                keyInfo: keyInfo,\r\n                data: dataSource.items(),\r\n                changes: changes,\r\n                groupCount: groupCount,\r\n                useInsertIndex: true\r\n            });\r\n            if (this._currentTotalCount > 0 || isVirtualMode && totalCount === oldItemCount) {\r\n                this._totalCountCorrection += getItemCount() - oldItemCount\r\n            }\r\n            changes.splice(0, changes.length)\r\n        },\r\n        _handlePush: function(_ref5) {\r\n            var {\r\n                changes: changes\r\n            } = _ref5;\r\n            this.push(changes, true)\r\n        },\r\n        _handleChanging: function(e) {\r\n            this.changing.fire(e);\r\n            this._applyBatch(e.changes)\r\n        },\r\n        _needCleanCacheByOperation: function(operationType, remoteOperations) {\r\n            var operationTypesByOrder = [\"filtering\", \"sorting\", \"paging\"];\r\n            var operationTypeIndex = operationTypesByOrder.indexOf(operationType);\r\n            var currentOperationTypes = operationTypeIndex >= 0 ? operationTypesByOrder.slice(operationTypeIndex) : [operationType];\r\n            return currentOperationTypes.some(operationType => remoteOperations[operationType])\r\n        },\r\n        _customizeRemoteOperations: function(options, operationTypes) {\r\n            var cachedStoreData = this._cachedStoreData;\r\n            var cachedPagingData = this._cachedPagingData;\r\n            var cachedData = this._cachedData;\r\n            if (options.storeLoadOptions.filter && !options.remoteOperations.filtering || options.storeLoadOptions.sort && !options.remoteOperations.sorting) {\r\n                options.remoteOperations = {\r\n                    filtering: options.remoteOperations.filtering\r\n                }\r\n            }\r\n            if (operationTypes.fullReload) {\r\n                cachedStoreData = void 0;\r\n                cachedPagingData = void 0;\r\n                cachedData = {\r\n                    items: {}\r\n                }\r\n            } else {\r\n                if (operationTypes.reload) {\r\n                    cachedPagingData = void 0;\r\n                    cachedData = {\r\n                        items: {}\r\n                    }\r\n                } else if (operationTypes.groupExpanding) {\r\n                    cachedData = {\r\n                        items: {}\r\n                    }\r\n                }\r\n                each(operationTypes, (operationType, value) => {\r\n                    if (value && this._needCleanCacheByOperation(operationType, options.remoteOperations)) {\r\n                        cachedStoreData = void 0;\r\n                        cachedPagingData = void 0\r\n                    }\r\n                })\r\n            }\r\n            if (cachedPagingData) {\r\n                options.remoteOperations.paging = false\r\n            }\r\n            options.cachedStoreData = cachedStoreData;\r\n            options.cachedPagingData = cachedPagingData;\r\n            options.cachedData = cachedData;\r\n            if (!options.isCustomLoading) {\r\n                this._cachedStoreData = cachedStoreData;\r\n                this._cachedPagingData = cachedPagingData;\r\n                this._cachedData = cachedData\r\n            }\r\n        },\r\n        _handleCustomizeStoreLoadOptions(options) {\r\n            var _options$data;\r\n            this._handleDataLoading(options);\r\n            if (!(0 === (null === (_options$data = options.data) || void 0 === _options$data ? void 0 : _options$data.length))) {\r\n                options.data = getPageDataFromCache(options, true) || options.cachedStoreData\r\n            }\r\n        },\r\n        _handleDataLoading: function(options) {\r\n            var dataSource = this._dataSource;\r\n            var lastLoadOptions = this._lastLoadOptions;\r\n            this.customizeStoreLoadOptions.fire(options);\r\n            options.delay = this.option(\"loadingTimeout\");\r\n            options.originalStoreLoadOptions = options.storeLoadOptions;\r\n            options.remoteOperations = extend({}, this.remoteOperations());\r\n            var isFullReload = !this.isLoaded() && !this._isRefreshing;\r\n            if (this.option(\"integrationOptions.renderedOnServer\") && !this.isLoaded()) {\r\n                options.delay = void 0\r\n            }\r\n            var loadOptions = extend({\r\n                pageIndex: this.pageIndex(),\r\n                pageSize: this.pageSize()\r\n            }, options.storeLoadOptions);\r\n            var operationTypes = calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload);\r\n            this._customizeRemoteOperations(options, operationTypes);\r\n            if (!options.isCustomLoading) {\r\n                var isRefreshing = this._isRefreshing;\r\n                options.pageIndex = dataSource.pageIndex();\r\n                options.lastLoadOptions = loadOptions;\r\n                options.operationTypes = operationTypes;\r\n                this._loadingOperationTypes = operationTypes;\r\n                this._isRefreshing = true;\r\n                when(isRefreshing || this._isRefreshed || this.refresh(options, operationTypes)).done(() => {\r\n                    if (this._lastOperationId === options.operationId) {\r\n                        this._isRefreshed = true;\r\n                        this.load().always(() => {\r\n                            this._isRefreshed = false\r\n                        })\r\n                    }\r\n                }).fail(() => {\r\n                    dataSource.cancel(options.operationId)\r\n                }).always(() => {\r\n                    this._isRefreshing = false\r\n                });\r\n                dataSource.cancel(this._lastOperationId);\r\n                this._lastOperationId = options.operationId;\r\n                if (this._isRefreshing) {\r\n                    dataSource.cancel(this._lastOperationId)\r\n                }\r\n            }\r\n            this._handleDataLoadingCore(options)\r\n        },\r\n        _handleDataLoadingCore: function(options) {\r\n            var remoteOperations = options.remoteOperations;\r\n            options.loadOptions = {};\r\n            var cachedExtra = options.cachedData.extra;\r\n            var localLoadOptionNames = {\r\n                filter: !remoteOperations.filtering,\r\n                sort: !remoteOperations.sorting,\r\n                group: !remoteOperations.grouping,\r\n                summary: !remoteOperations.summary,\r\n                skip: !remoteOperations.paging,\r\n                take: !remoteOperations.paging,\r\n                requireTotalCount: cachedExtra && \"totalCount\" in cachedExtra || !remoteOperations.paging\r\n            };\r\n            each(options.storeLoadOptions, (function(optionName, optionValue) {\r\n                if (localLoadOptionNames[optionName]) {\r\n                    options.loadOptions[optionName] = optionValue;\r\n                    delete options.storeLoadOptions[optionName]\r\n                }\r\n            }));\r\n            if (cachedExtra) {\r\n                options.extra = cachedExtra\r\n            }\r\n        },\r\n        _handleDataLoaded: function(options) {\r\n            var loadOptions = options.loadOptions;\r\n            var localPaging = options.remoteOperations && !options.remoteOperations.paging;\r\n            var cachedData = options.cachedData;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var needCache = false !== this.option(\"cacheEnabled\") && storeLoadOptions;\r\n            var needPageCache = needCache && !options.isCustomLoading && cachedData && (!localPaging || storeLoadOptions.group);\r\n            var needPagingCache = needCache && localPaging;\r\n            var needStoreCache = needPagingCache && !options.isCustomLoading;\r\n            if (!loadOptions) {\r\n                this._dataSource.cancel(options.operationId);\r\n                return\r\n            }\r\n            if (localPaging) {\r\n                options.skip = loadOptions.skip;\r\n                options.take = loadOptions.take;\r\n                delete loadOptions.skip;\r\n                delete loadOptions.take\r\n            }\r\n            if (loadOptions.group) {\r\n                loadOptions.group = options.group || loadOptions.group\r\n            }\r\n            var groupCount = gridCore.normalizeSortingInfo(options.group || storeLoadOptions.group || loadOptions.group).length;\r\n            if (options.cachedDataPartBegin) {\r\n                options.data = options.cachedDataPartBegin.concat(options.data)\r\n            }\r\n            if (options.cachedDataPartEnd) {\r\n                options.data = options.data.concat(options.cachedDataPartEnd)\r\n            }\r\n            if (!needPageCache || !getPageDataFromCache(options)) {\r\n                if (needPagingCache && options.cachedPagingData) {\r\n                    options.data = cloneItems(options.cachedPagingData, groupCount)\r\n                } else {\r\n                    if (needStoreCache) {\r\n                        if (!this._cachedStoreData) {\r\n                            this._cachedStoreData = cloneItems(options.data, gridCore.normalizeSortingInfo(storeLoadOptions.group).length)\r\n                        } else if (options.mergeStoreLoadData) {\r\n                            options.data = this._cachedStoreData = this._cachedStoreData.concat(options.data)\r\n                        }\r\n                    }\r\n                    new ArrayStore(options.data).load(loadOptions).done(data => {\r\n                        options.data = data;\r\n                        if (needStoreCache) {\r\n                            this._cachedPagingData = cloneItems(options.data, groupCount)\r\n                        }\r\n                    }).fail(error => {\r\n                        options.data = (new Deferred).reject(error)\r\n                    })\r\n                }\r\n                if (loadOptions.requireTotalCount && localPaging) {\r\n                    options.extra = isPlainObject(options.extra) ? options.extra : {};\r\n                    options.extra.totalCount = options.data.length\r\n                }\r\n                if (options.extra && options.extra.totalCount >= 0 && (false === storeLoadOptions.requireTotalCount || false === loadOptions.requireTotalCount)) {\r\n                    options.extra.totalCount = -1\r\n                }\r\n                this._handleDataLoadedCore(options);\r\n                if (needPageCache) {\r\n                    cachedData.extra = cachedData.extra || extend({}, options.extra);\r\n                    when(options.data).done(data => {\r\n                        ! function(options, data, groupCount) {\r\n                            var _ref3, _options$skip3, _ref4, _options$take3;\r\n                            var {\r\n                                storeLoadOptions: storeLoadOptions\r\n                            } = options;\r\n                            var skip = null !== (_ref3 = null !== (_options$skip3 = options.skip) && void 0 !== _options$skip3 ? _options$skip3 : storeLoadOptions.skip) && void 0 !== _ref3 ? _ref3 : 0;\r\n                            var take = null !== (_ref4 = null !== (_options$take3 = options.take) && void 0 !== _options$take3 ? _options$take3 : storeLoadOptions.take) && void 0 !== _ref4 ? _ref4 : 0;\r\n                            for (var i = 0; i < take; i++) {\r\n                                var globalIndex = i + skip;\r\n                                var cacheItems = options.cachedData.items;\r\n                                var skips = 0 === i && options.skips || [];\r\n                                cacheItems[globalIndex] = getCacheItem(cacheItems[globalIndex], data[i], groupCount, skips)\r\n                            }\r\n                        }(options, data, groupCount)\r\n                    })\r\n                }\r\n            }\r\n            when(options.data).done(() => {\r\n                if (options.lastLoadOptions) {\r\n                    this._lastLoadOptions = options.lastLoadOptions;\r\n                    Object.keys(options.operationTypes).forEach(operationType => {\r\n                        this._lastOperationTypes[operationType] = this._lastOperationTypes[operationType] || options.operationTypes[operationType]\r\n                    })\r\n                }\r\n            });\r\n            options.storeLoadOptions = options.originalStoreLoadOptions\r\n        },\r\n        _handleDataLoadedCore: function(options) {\r\n            if (options.remoteOperations && !options.remoteOperations.paging && Array.isArray(options.data)) {\r\n                if (void 0 !== options.skip) {\r\n                    options.data = options.data.slice(options.skip)\r\n                }\r\n                if (void 0 !== options.take) {\r\n                    options.data = options.data.slice(0, options.take)\r\n                }\r\n            }\r\n        },\r\n        _handleLoadingChanged: function(isLoading) {\r\n            this.loadingChanged.fire(isLoading)\r\n        },\r\n        _handleLoadError: function(error) {\r\n            this.loadError.fire(error);\r\n            this.changed.fire({\r\n                changeType: \"loadError\",\r\n                error: error\r\n            })\r\n        },\r\n        _loadPageSize: function() {\r\n            return this.pageSize()\r\n        },\r\n        _handleDataChanged: function(args) {\r\n            var currentTotalCount;\r\n            var dataSource = this._dataSource;\r\n            var isLoading = false;\r\n            var isDataLoading = !args || isDefined(args.changeType);\r\n            var itemsCount = this.itemsCount();\r\n            if (isDataLoading) {\r\n                this._isLastPage = !itemsCount || !this._loadPageSize() || itemsCount < this._loadPageSize();\r\n                if (this._isLastPage) {\r\n                    this._hasLastPage = true\r\n                }\r\n            }\r\n            if (dataSource.totalCount() >= 0) {\r\n                if (dataSource.pageIndex() >= this.pageCount()) {\r\n                    dataSource.pageIndex(this.pageCount() - 1);\r\n                    this.pageIndex(dataSource.pageIndex());\r\n                    this.resetPagesCache();\r\n                    dataSource.load();\r\n                    isLoading = true\r\n                }\r\n            } else if (isDataLoading) {\r\n                currentTotalCount = dataSource.pageIndex() * this.pageSize() + itemsCount;\r\n                if (currentTotalCount > this._currentTotalCount) {\r\n                    this._currentTotalCount = currentTotalCount;\r\n                    if (0 === dataSource.pageIndex() || !this.option(\"scrolling.legacyMode\")) {\r\n                        this._totalCountCorrection = 0\r\n                    }\r\n                }\r\n                if (0 === itemsCount && dataSource.pageIndex() >= this.pageCount()) {\r\n                    dataSource.pageIndex(this.pageCount() - 1);\r\n                    if (\"infinite\" !== this.option(\"scrolling.mode\")) {\r\n                        dataSource.load();\r\n                        isLoading = true\r\n                    }\r\n                }\r\n            }\r\n            if (!isLoading) {\r\n                this._operationTypes = this._lastOperationTypes;\r\n                this._lastOperationTypes = {};\r\n                this.component._optionCache = {};\r\n                this.changed.fire(args);\r\n                this.component._optionCache = void 0\r\n            }\r\n        },\r\n        _scheduleCustomLoadCallbacks: function(deferred) {\r\n            var that = this;\r\n            that._isCustomLoading = true;\r\n            deferred.always((function() {\r\n                that._isCustomLoading = false\r\n            }))\r\n        },\r\n        loadingOperationTypes: function() {\r\n            return this._loadingOperationTypes\r\n        },\r\n        operationTypes: function() {\r\n            return this._operationTypes\r\n        },\r\n        lastLoadOptions: function() {\r\n            return this._lastLoadOptions || {}\r\n        },\r\n        isLastPage: function() {\r\n            return this._isLastPage\r\n        },\r\n        totalCount: function() {\r\n            return parseInt((this._currentTotalCount || this._dataSource.totalCount()) + this._totalCountCorrection)\r\n        },\r\n        totalCountCorrection: function() {\r\n            return this._totalCountCorrection\r\n        },\r\n        itemsCount: function() {\r\n            return this._dataSource.items().length\r\n        },\r\n        totalItemsCount: function() {\r\n            return this.totalCount()\r\n        },\r\n        pageSize: function() {\r\n            var dataSource = this._dataSource;\r\n            if (!arguments.length && !dataSource.paginate()) {\r\n                return 0\r\n            }\r\n            return dataSource.pageSize.apply(dataSource, arguments)\r\n        },\r\n        pageCount: function() {\r\n            var count = this.totalItemsCount() - this._totalCountCorrection;\r\n            var pageSize = this.pageSize();\r\n            if (pageSize && count > 0) {\r\n                return Math.max(1, Math.ceil(count / pageSize))\r\n            }\r\n            return 1\r\n        },\r\n        hasKnownLastPage: function() {\r\n            return this._hasLastPage || this._dataSource.totalCount() >= 0\r\n        },\r\n        loadFromStore: function(loadOptions, store) {\r\n            var dataSource = this._dataSource;\r\n            var d = new Deferred;\r\n            if (!dataSource) {\r\n                return\r\n            }\r\n            store = store || dataSource.store();\r\n            store.load(loadOptions).done((function(data, extra) {\r\n                if (data && !Array.isArray(data) && Array.isArray(data.data)) {\r\n                    extra = data;\r\n                    data = data.data\r\n                }\r\n                d.resolve(data, extra)\r\n            })).fail(d.reject);\r\n            return d\r\n        },\r\n        isCustomLoading: function() {\r\n            return !!this._isCustomLoading\r\n        },\r\n        load: function(options) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var d = new Deferred;\r\n            if (options) {\r\n                var store = dataSource.store();\r\n                var dataSourceLoadOptions = dataSource.loadOptions();\r\n                var loadResult = {\r\n                    storeLoadOptions: options,\r\n                    isCustomLoading: true\r\n                };\r\n                each(store._customLoadOptions() || [], (function(_, optionName) {\r\n                    if (!(optionName in loadResult.storeLoadOptions)) {\r\n                        loadResult.storeLoadOptions[optionName] = dataSourceLoadOptions[optionName]\r\n                    }\r\n                }));\r\n                this._isLoadingAll = options.isLoadingAll;\r\n                that._scheduleCustomLoadCallbacks(d);\r\n                dataSource._scheduleLoadCallbacks(d);\r\n                that._handleCustomizeStoreLoadOptions(loadResult);\r\n                ! function(action, timeout) {\r\n                    if (isDefined(timeout)) {\r\n                        executeAsync(action, timeout)\r\n                    } else {\r\n                        action()\r\n                    }\r\n                }((function() {\r\n                    if (!dataSource.store()) {\r\n                        return d.reject(\"canceled\")\r\n                    }\r\n                    when(loadResult.data || that.loadFromStore(loadResult.storeLoadOptions)).done((function(data, extra) {\r\n                        loadResult.data = data;\r\n                        loadResult.extra = extra || {};\r\n                        that._handleDataLoaded(loadResult);\r\n                        if (options.requireTotalCount && void 0 === loadResult.extra.totalCount) {\r\n                            loadResult.extra.totalCount = store.totalCount(loadResult.storeLoadOptions)\r\n                        }\r\n                        when(loadResult.data, loadResult.extra.totalCount).done((function(data, totalCount) {\r\n                            loadResult.extra.totalCount = totalCount;\r\n                            d.resolve(data, loadResult.extra)\r\n                        })).fail(d.reject)\r\n                    })).fail(d.reject)\r\n                }), that.option(\"loadingTimeout\"));\r\n                return d.fail((function() {\r\n                    that._eventsStrategy.fireEvent(\"loadError\", arguments)\r\n                })).always(() => {\r\n                    this._isLoadingAll = false\r\n                }).promise()\r\n            } else {\r\n                return dataSource.load()\r\n            }\r\n        },\r\n        reload: function(full) {\r\n            return full ? this._dataSource.reload() : this._dataSource.load()\r\n        },\r\n        getCachedStoreData: function() {\r\n            return this._cachedStoreData\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.data_source_adapter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport DataSourceAdapter from \"../grid_core/ui.grid_core.data_source_adapter\";\r\nvar dataSourceAdapterType = DataSourceAdapter;\r\nexport default {\r\n    extend: function(extender) {\r\n        dataSourceAdapterType = dataSourceAdapterType.inherit(extender)\r\n    },\r\n    create: function(component) {\r\n        return new dataSourceAdapterType(component)\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.data_controller.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport ArrayStore from \"../../data/array_store\";\r\nimport CustomStore from \"../../data/custom_store\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    noop,\r\n    deferRender,\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport DataHelperMixin from \"../../data_helper\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    findChanges\r\n} from \"../../core/utils/array_compare\";\r\nexport var dataControllerModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            loadingTimeout: 0,\r\n            dataSource: null,\r\n            cacheEnabled: true,\r\n            repaintChangesOnly: false,\r\n            highlightChanges: false,\r\n            onDataErrorOccurred: null,\r\n            remoteOperations: \"auto\",\r\n            paging: {\r\n                enabled: true,\r\n                pageSize: void 0,\r\n                pageIndex: void 0\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        data: modules.Controller.inherit({}).include(DataHelperMixin).inherit(function() {\r\n            var changePaging = function(that, optionName, value) {\r\n                var dataSource = that._dataSource;\r\n                if (dataSource) {\r\n                    if (void 0 !== value) {\r\n                        var oldValue = that._getPagingOptionValue(optionName);\r\n                        if (oldValue !== value) {\r\n                            if (\"pageSize\" === optionName) {\r\n                                dataSource.pageIndex(0)\r\n                            }\r\n                            dataSource[optionName](value);\r\n                            that._skipProcessingPagingChange = true;\r\n                            that.option(\"paging.\" + optionName, value);\r\n                            that._skipProcessingPagingChange = false;\r\n                            var pageIndex = dataSource.pageIndex();\r\n                            return dataSource[\"pageIndex\" === optionName ? \"load\" : \"reload\"]().done(() => that.pageChanged.fire(pageIndex))\r\n                        }\r\n                        return Deferred().resolve().promise()\r\n                    }\r\n                    return dataSource[optionName]()\r\n                }\r\n                return 0\r\n            };\r\n            var members = {\r\n                init: function() {\r\n                    var that = this;\r\n                    that._items = [];\r\n                    that._cachedProcessedItems = null;\r\n                    that._columnsController = that.getController(\"columns\");\r\n                    that._currentOperationTypes = null;\r\n                    that._dataChangedHandler = e => {\r\n                        that._currentOperationTypes = this._dataSource.operationTypes();\r\n                        that._handleDataChanged(e);\r\n                        that._currentOperationTypes = null\r\n                    };\r\n                    that._columnsChangedHandler = that._handleColumnsChanged.bind(that);\r\n                    that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\r\n                    that._loadErrorHandler = that._handleLoadError.bind(that);\r\n                    that._customizeStoreLoadOptionsHandler = that._handleCustomizeStoreLoadOptions.bind(that);\r\n                    that._changingHandler = that._handleChanging.bind(that);\r\n                    that._dataPushedHandler = that._handleDataPushed.bind(that);\r\n                    that._columnsController.columnsChanged.add(that._columnsChangedHandler);\r\n                    that._isLoading = false;\r\n                    that._isCustomLoading = false;\r\n                    that._repaintChangesOnly = void 0;\r\n                    that._changes = [];\r\n                    that.createAction(\"onDataErrorOccurred\");\r\n                    that.dataErrorOccurred.add((function(error) {\r\n                        return that.executeAction(\"onDataErrorOccurred\", {\r\n                            error: error\r\n                        })\r\n                    }));\r\n                    that._refreshDataSource()\r\n                },\r\n                _getPagingOptionValue: function(optionName) {\r\n                    return this._dataSource[optionName]()\r\n                },\r\n                callbackNames: function() {\r\n                    return [\"changed\", \"loadingChanged\", \"dataErrorOccurred\", \"pageChanged\", \"dataSourceChanged\", \"pushed\"]\r\n                },\r\n                callbackFlags: function(name) {\r\n                    if (\"dataErrorOccurred\" === name) {\r\n                        return {\r\n                            stopOnFalse: true\r\n                        }\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    return [\"beginCustomLoading\", \"endCustomLoading\", \"refresh\", \"filter\", \"clearFilter\", \"getCombinedFilter\", \"keyOf\", \"byKey\", \"getDataByKeys\", \"pageIndex\", \"pageSize\", \"pageCount\", \"totalCount\", \"_disposeDataSource\", \"getKeyByRowIndex\", \"getRowIndexByKey\", \"getDataSource\", \"getVisibleRows\", \"repaintRows\"]\r\n                },\r\n                reset: function() {\r\n                    this._columnsController.reset();\r\n                    this._items = [];\r\n                    this._refreshDataSource()\r\n                },\r\n                optionChanged: function(args) {\r\n                    var that = this;\r\n                    var dataSource;\r\n\r\n                    function handled() {\r\n                        args.handled = true\r\n                    }\r\n                    if (\"dataSource\" === args.name && args.name === args.fullName && (args.value === args.previousValue || that.option(\"columns\") && Array.isArray(args.value) && Array.isArray(args.previousValue))) {\r\n                        var _this$_dataSource;\r\n                        var isValueChanged = args.value !== args.previousValue;\r\n                        if (isValueChanged) {\r\n                            var store = that.store();\r\n                            if (store) {\r\n                                store._array = args.value\r\n                            }\r\n                        }\r\n                        handled();\r\n                        var isParasiteChange = Array.isArray(args.value) && !isValueChanged && (null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.isLoading());\r\n                        if (!isParasiteChange) {\r\n                            that.refresh(that.option(\"repaintChangesOnly\"))\r\n                        }\r\n                        return\r\n                    }\r\n                    switch (args.name) {\r\n                        case \"cacheEnabled\":\r\n                        case \"repaintChangesOnly\":\r\n                        case \"highlightChanges\":\r\n                        case \"loadingTimeout\":\r\n                            handled();\r\n                            break;\r\n                        case \"remoteOperations\":\r\n                        case \"keyExpr\":\r\n                        case \"dataSource\":\r\n                        case \"scrolling\":\r\n                            handled();\r\n                            that.reset();\r\n                            break;\r\n                        case \"paging\":\r\n                            dataSource = that.dataSource();\r\n                            if (dataSource && that._setPagingOptions(dataSource)) {\r\n                                var pageIndex = dataSource.pageIndex();\r\n                                dataSource.load().done(() => that.pageChanged.fire(pageIndex))\r\n                            }\r\n                            handled();\r\n                            break;\r\n                        case \"rtlEnabled\":\r\n                            that.reset();\r\n                            break;\r\n                        case \"columns\":\r\n                            dataSource = that.dataSource();\r\n                            if (dataSource && dataSource.isLoading() && args.name === args.fullName) {\r\n                                this._useSortingGroupingFromColumns = true;\r\n                                dataSource.load()\r\n                            }\r\n                            break;\r\n                        default:\r\n                            that.callBase(args)\r\n                    }\r\n                },\r\n                isReady: function() {\r\n                    return !this._isLoading\r\n                },\r\n                getDataSource: function() {\r\n                    return this._dataSource && this._dataSource._dataSource\r\n                },\r\n                getCombinedFilter: function(returnDataField) {\r\n                    return this.combinedFilter(void 0, returnDataField)\r\n                },\r\n                combinedFilter: function(filter, returnDataField) {\r\n                    var dataSource = this._dataSource;\r\n                    var columnsController = this._columnsController;\r\n                    if (dataSource) {\r\n                        if (void 0 === filter) {\r\n                            filter = dataSource.filter()\r\n                        }\r\n                        var additionalFilter = this._calculateAdditionalFilter();\r\n                        if (additionalFilter) {\r\n                            if (columnsController.isDataSourceApplied() || columnsController.isAllDataTypesDefined()) {\r\n                                filter = gridCoreUtils.combineFilters([additionalFilter, filter])\r\n                            }\r\n                        }\r\n                        filter = columnsController.updateFilter(filter, returnDataField || dataSource.remoteOperations().filtering)\r\n                    }\r\n                    return filter\r\n                },\r\n                waitReady: function() {\r\n                    if (this._updateLockCount) {\r\n                        this._readyDeferred = new Deferred;\r\n                        return this._readyDeferred\r\n                    }\r\n                    return when()\r\n                },\r\n                _endUpdateCore: function() {\r\n                    var changes = this._changes;\r\n                    if (changes.length) {\r\n                        this._changes = [];\r\n                        var repaintChangesOnly = changes.every(change => change.repaintChangesOnly);\r\n                        this.updateItems(1 === changes.length ? changes[0] : {\r\n                            repaintChangesOnly: repaintChangesOnly\r\n                        })\r\n                    }\r\n                    if (this._readyDeferred) {\r\n                        this._readyDeferred.resolve();\r\n                        this._readyDeferred = null\r\n                    }\r\n                },\r\n                _handleCustomizeStoreLoadOptions: function(e) {\r\n                    var _storeLoadOptions$fil;\r\n                    var columnsController = this._columnsController;\r\n                    var dataSource = this._dataSource;\r\n                    var storeLoadOptions = e.storeLoadOptions;\r\n                    if (e.isCustomLoading && !storeLoadOptions.isLoadingAll) {\r\n                        return\r\n                    }\r\n                    storeLoadOptions.filter = this.combinedFilter(storeLoadOptions.filter);\r\n                    if (1 === (null === (_storeLoadOptions$fil = storeLoadOptions.filter) || void 0 === _storeLoadOptions$fil ? void 0 : _storeLoadOptions$fil.length) && \"!\" === storeLoadOptions.filter[0]) {\r\n                        e.data = [];\r\n                        e.extra = e.extra || {};\r\n                        e.extra.totalCount = 0\r\n                    }\r\n                    if (!columnsController.isDataSourceApplied()) {\r\n                        columnsController.updateColumnDataTypes(dataSource)\r\n                    }\r\n                    this._columnsUpdating = true;\r\n                    columnsController.updateSortingGrouping(dataSource, !this._useSortingGroupingFromColumns);\r\n                    this._columnsUpdating = false;\r\n                    storeLoadOptions.sort = columnsController.getSortDataSourceParameters();\r\n                    storeLoadOptions.group = columnsController.getGroupDataSourceParameters();\r\n                    dataSource.sort(storeLoadOptions.sort);\r\n                    dataSource.group(storeLoadOptions.group);\r\n                    storeLoadOptions.sort = columnsController.getSortDataSourceParameters(!dataSource.remoteOperations().sorting);\r\n                    e.group = columnsController.getGroupDataSourceParameters(!dataSource.remoteOperations().grouping)\r\n                },\r\n                _handleColumnsChanged: function(e) {\r\n                    var that = this;\r\n                    var changeTypes = e.changeTypes;\r\n                    var optionNames = e.optionNames;\r\n                    var filterValue;\r\n                    var filterValues;\r\n                    var filterApplied;\r\n                    if (changeTypes.sorting || changeTypes.grouping) {\r\n                        if (that._dataSource && !that._columnsUpdating) {\r\n                            that._dataSource.group(that._columnsController.getGroupDataSourceParameters());\r\n                            that._dataSource.sort(that._columnsController.getSortDataSourceParameters());\r\n                            that.reload()\r\n                        }\r\n                    } else if (changeTypes.columns) {\r\n                        filterValues = that._columnsController.columnOption(e.columnIndex, \"filterValues\");\r\n                        if (optionNames.filterValues || optionNames.filterType && Array.isArray(filterValues) || optionNames.filterValue || optionNames.selectedFilterOperation || optionNames.allowFiltering) {\r\n                            filterValue = that._columnsController.columnOption(e.columnIndex, \"filterValue\");\r\n                            if (Array.isArray(filterValues) || void 0 === e.columnIndex || isDefined(filterValue) || !optionNames.selectedFilterOperation || optionNames.filterValue) {\r\n                                that._applyFilter();\r\n                                filterApplied = true\r\n                            }\r\n                        }\r\n                        if (!that._needApplyFilter && !gridCoreUtils.checkChanges(optionNames, [\"width\", \"visibleWidth\", \"filterValue\", \"bufferedFilterValue\", \"selectedFilterOperation\", \"filterValues\", \"filterType\"])) {\r\n                            that._columnsController.columnsChanged.add((function updateItemsHandler() {\r\n                                that._columnsController.columnsChanged.remove(updateItemsHandler);\r\n                                that.updateItems({\r\n                                    virtualColumnsScrolling: e.changeTypes.virtualColumnsScrolling\r\n                                })\r\n                            }))\r\n                        }\r\n                        if (isDefined(optionNames.visible)) {\r\n                            var column = that._columnsController.columnOption(e.columnIndex);\r\n                            if (column && (isDefined(column.filterValue) || isDefined(column.filterValues))) {\r\n                                that._applyFilter();\r\n                                filterApplied = true\r\n                            }\r\n                        }\r\n                    }\r\n                    if (!filterApplied && changeTypes.filtering) {\r\n                        that.reload()\r\n                    }\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var columnsController = that._columnsController;\r\n                    var isAsyncDataSourceApplying = false;\r\n                    this._useSortingGroupingFromColumns = false;\r\n                    if (dataSource && !that._isDataSourceApplying) {\r\n                        that._isDataSourceApplying = true;\r\n                        when(that._columnsController.applyDataSource(dataSource)).done((function() {\r\n                            if (that._isLoading) {\r\n                                that._handleLoadingChanged(false)\r\n                            }\r\n                            if (isAsyncDataSourceApplying && e && e.isDelayed) {\r\n                                e.isDelayed = false\r\n                            }\r\n                            that._isDataSourceApplying = false;\r\n                            var needApplyFilter = that._needApplyFilter;\r\n                            that._needApplyFilter = false;\r\n                            if (needApplyFilter && !that._isAllDataTypesDefined && (additionalFilter = that._calculateAdditionalFilter(), additionalFilter && additionalFilter.length)) {\r\n                                errors.log(\"W1005\", that.component.NAME);\r\n                                that._applyFilter()\r\n                            } else {\r\n                                that.updateItems(e, true)\r\n                            }\r\n                            var additionalFilter\r\n                        })).fail((function() {\r\n                            that._isDataSourceApplying = false\r\n                        }));\r\n                        if (that._isDataSourceApplying) {\r\n                            isAsyncDataSourceApplying = true;\r\n                            that._handleLoadingChanged(true)\r\n                        }\r\n                        that._needApplyFilter = !that._columnsController.isDataSourceApplied();\r\n                        that._isAllDataTypesDefined = columnsController.isAllDataTypesDefined()\r\n                    }\r\n                },\r\n                _handleLoadingChanged: function(isLoading) {\r\n                    this._isLoading = isLoading;\r\n                    this._fireLoadingChanged()\r\n                },\r\n                _handleLoadError: function(e) {\r\n                    this.dataErrorOccurred.fire(e)\r\n                },\r\n                _handleDataPushed: function(changes) {\r\n                    this.pushed.fire(changes)\r\n                },\r\n                fireError: function() {\r\n                    this.dataErrorOccurred.fire(errors.Error.apply(errors, arguments))\r\n                },\r\n                _setPagingOptions: function(dataSource) {\r\n                    var pageIndex = this.option(\"paging.pageIndex\");\r\n                    var pageSize = this.option(\"paging.pageSize\");\r\n                    var pagingEnabled = this.option(\"paging.enabled\");\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    var appendMode = \"infinite\" === scrollingMode;\r\n                    var virtualMode = \"virtual\" === scrollingMode;\r\n                    var paginate = pagingEnabled || virtualMode || appendMode;\r\n                    var isChanged = false;\r\n                    dataSource.requireTotalCount(!appendMode);\r\n                    if (void 0 !== pagingEnabled && dataSource.paginate() !== paginate) {\r\n                        dataSource.paginate(paginate);\r\n                        isChanged = true\r\n                    }\r\n                    if (void 0 !== pageSize && dataSource.pageSize() !== pageSize) {\r\n                        dataSource.pageSize(pageSize);\r\n                        isChanged = true\r\n                    }\r\n                    if (void 0 !== pageIndex && dataSource.pageIndex() !== pageIndex) {\r\n                        dataSource.pageIndex(pageIndex);\r\n                        isChanged = true\r\n                    }\r\n                    return isChanged\r\n                },\r\n                _getSpecificDataSourceOption: function() {\r\n                    var dataSource = this.option(\"dataSource\");\r\n                    if (Array.isArray(dataSource)) {\r\n                        return {\r\n                            store: {\r\n                                type: \"array\",\r\n                                data: dataSource,\r\n                                key: this.option(\"keyExpr\")\r\n                            }\r\n                        }\r\n                    }\r\n                    return dataSource\r\n                },\r\n                _initDataSource: function() {\r\n                    var dataSource = this.option(\"dataSource\");\r\n                    var oldDataSource = this._dataSource;\r\n                    this.callBase();\r\n                    dataSource = this._dataSource;\r\n                    this._useSortingGroupingFromColumns = true;\r\n                    this._cachedProcessedItems = null;\r\n                    if (dataSource) {\r\n                        this._setPagingOptions(dataSource);\r\n                        this.setDataSource(dataSource)\r\n                    } else if (oldDataSource) {\r\n                        this.updateItems()\r\n                    }\r\n                },\r\n                _loadDataSource: function() {\r\n                    var dataSource = this._dataSource;\r\n                    var result = new Deferred;\r\n                    when(this._columnsController.refresh(true)).always((function() {\r\n                        if (dataSource) {\r\n                            dataSource.load().done(result.resolve).fail(result.reject)\r\n                        } else {\r\n                            result.resolve()\r\n                        }\r\n                    }));\r\n                    return result.promise()\r\n                },\r\n                _beforeProcessItems: function(items) {\r\n                    return items.slice(0)\r\n                },\r\n                getRowIndexDelta: function() {\r\n                    return 0\r\n                },\r\n                _processItems: function(items, change) {\r\n                    var that = this;\r\n                    var rowIndexDelta = that.getRowIndexDelta();\r\n                    var changeType = change.changeType;\r\n                    var visibleColumns = that._columnsController.getVisibleColumns(null, \"loadingAll\" === changeType);\r\n                    var visibleItems = that._items;\r\n                    var lastVisibleItem = \"append\" === changeType && visibleItems.length > 0 ? visibleItems[visibleItems.length - 1] : null;\r\n                    var dataIndex = isDefined(null === lastVisibleItem || void 0 === lastVisibleItem ? void 0 : lastVisibleItem.dataIndex) ? lastVisibleItem.dataIndex + 1 : 0;\r\n                    var options = {\r\n                        visibleColumns: visibleColumns,\r\n                        dataIndex: dataIndex\r\n                    };\r\n                    var result = [];\r\n                    each(items, (function(index, item) {\r\n                        if (isDefined(item)) {\r\n                            options.rowIndex = index - rowIndexDelta;\r\n                            item = that._processItem(item, options);\r\n                            result.push(item)\r\n                        }\r\n                    }));\r\n                    return result\r\n                },\r\n                _processItem: function(item, options) {\r\n                    item = this._generateDataItem(item, options);\r\n                    item = this._processDataItem(item, options);\r\n                    item.dataIndex = options.dataIndex++;\r\n                    return item\r\n                },\r\n                _generateDataItem: function(data) {\r\n                    return {\r\n                        rowType: \"data\",\r\n                        data: data,\r\n                        key: this.keyOf(data)\r\n                    }\r\n                },\r\n                _processDataItem: function(dataItem, options) {\r\n                    dataItem.values = this.generateDataValues(dataItem.data, options.visibleColumns);\r\n                    return dataItem\r\n                },\r\n                generateDataValues: function(data, columns, isModified) {\r\n                    var values = [];\r\n                    var value;\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        var column = columns[i];\r\n                        value = isModified ? void 0 : null;\r\n                        if (!column.command) {\r\n                            if (column.calculateCellValue) {\r\n                                value = column.calculateCellValue(data)\r\n                            } else if (column.dataField) {\r\n                                value = data[column.dataField]\r\n                            }\r\n                        }\r\n                        values.push(value)\r\n                    }\r\n                    return values\r\n                },\r\n                _applyChange: function(change) {\r\n                    if (\"update\" === change.changeType) {\r\n                        this._applyChangeUpdate(change)\r\n                    } else if (this.items().length && change.repaintChangesOnly && \"refresh\" === change.changeType) {\r\n                        this._applyChangesOnly(change)\r\n                    } else if (\"refresh\" === change.changeType) {\r\n                        this._applyChangeFull(change)\r\n                    }\r\n                },\r\n                _applyChangeFull: function(change) {\r\n                    this._items = change.items.slice(0)\r\n                },\r\n                _getRowIndices: function(change) {\r\n                    var rowIndices = change.rowIndices.slice(0);\r\n                    var rowIndexDelta = this.getRowIndexDelta();\r\n                    rowIndices.sort((function(a, b) {\r\n                        return a - b\r\n                    }));\r\n                    for (var i = 0; i < rowIndices.length; i++) {\r\n                        var correctedRowIndex = rowIndices[i];\r\n                        if (change.allowInvisibleRowIndices) {\r\n                            correctedRowIndex += rowIndexDelta\r\n                        }\r\n                        if (correctedRowIndex < 0) {\r\n                            rowIndices.splice(i, 1);\r\n                            i--\r\n                        }\r\n                    }\r\n                    return rowIndices\r\n                },\r\n                _applyChangeUpdate: function(change) {\r\n                    var that = this;\r\n                    var items = change.items;\r\n                    var rowIndices = that._getRowIndices(change);\r\n                    var rowIndexDelta = that.getRowIndexDelta();\r\n                    var repaintChangesOnly = that.option(\"repaintChangesOnly\");\r\n                    var prevIndex = -1;\r\n                    var rowIndexCorrection = 0;\r\n                    var changeType;\r\n                    change.items = [];\r\n                    change.rowIndices = [];\r\n                    change.columnIndices = [];\r\n                    change.changeTypes = [];\r\n                    var equalItems = function(item1, item2, strict) {\r\n                        var result = item1 && item2 && equalByValue(item1.key, item2.key);\r\n                        if (result && strict) {\r\n                            result = item1.rowType === item2.rowType && (\"detail\" !== item2.rowType || item1.isEditing === item2.isEditing)\r\n                        }\r\n                        return result\r\n                    };\r\n                    each(rowIndices, (function(index, rowIndex) {\r\n                        var columnIndices;\r\n                        rowIndex += rowIndexCorrection + rowIndexDelta;\r\n                        if (prevIndex === rowIndex) {\r\n                            return\r\n                        }\r\n                        prevIndex = rowIndex;\r\n                        var oldItem = that._items[rowIndex];\r\n                        var oldNextItem = that._items[rowIndex + 1];\r\n                        var newItem = items[rowIndex];\r\n                        var newNextItem = items[rowIndex + 1];\r\n                        var strict = equalItems(oldItem, oldNextItem) || equalItems(newItem, newNextItem);\r\n                        if (newItem) {\r\n                            newItem.rowIndex = rowIndex;\r\n                            change.items.push(newItem)\r\n                        }\r\n                        if (oldItem && newItem && equalItems(oldItem, newItem, strict)) {\r\n                            changeType = \"update\";\r\n                            that._items[rowIndex] = newItem;\r\n                            if (oldItem.visible !== newItem.visible) {\r\n                                change.items.splice(-1, 1, {\r\n                                    visible: newItem.visible\r\n                                })\r\n                            } else if (repaintChangesOnly && !change.isFullUpdate) {\r\n                                columnIndices = that._partialUpdateRow(oldItem, newItem, rowIndex - rowIndexDelta)\r\n                            }\r\n                        } else if (newItem && !oldItem || newNextItem && equalItems(oldItem, newNextItem, strict)) {\r\n                            changeType = \"insert\";\r\n                            that._items.splice(rowIndex, 0, newItem);\r\n                            rowIndexCorrection++\r\n                        } else if (oldItem && !newItem || oldNextItem && equalItems(newItem, oldNextItem, strict)) {\r\n                            changeType = \"remove\";\r\n                            that._items.splice(rowIndex, 1);\r\n                            rowIndexCorrection--;\r\n                            prevIndex = -1\r\n                        } else if (newItem) {\r\n                            changeType = \"update\";\r\n                            that._items[rowIndex] = newItem\r\n                        } else {\r\n                            return\r\n                        }\r\n                        change.rowIndices.push(rowIndex - rowIndexDelta);\r\n                        change.changeTypes.push(changeType);\r\n                        change.columnIndices.push(columnIndices)\r\n                    }))\r\n                },\r\n                _isCellChanged: function(oldRow, newRow, visibleRowIndex, columnIndex, isLiveUpdate) {\r\n                    if (JSON.stringify(oldRow.values[columnIndex]) !== JSON.stringify(newRow.values[columnIndex])) {\r\n                        return true\r\n                    }\r\n\r\n                    function isCellModified(row, columnIndex) {\r\n                        return row.modifiedValues ? void 0 !== row.modifiedValues[columnIndex] : false\r\n                    }\r\n                    if (isCellModified(oldRow, columnIndex) !== isCellModified(newRow, columnIndex)) {\r\n                        return true\r\n                    }\r\n                    return false\r\n                },\r\n                _getChangedColumnIndices: function(oldItem, newItem, visibleRowIndex, isLiveUpdate) {\r\n                    var columnIndices;\r\n                    if (oldItem.rowType === newItem.rowType) {\r\n                        if (\"group\" !== newItem.rowType && \"groupFooter\" !== newItem.rowType) {\r\n                            columnIndices = [];\r\n                            if (\"detail\" !== newItem.rowType) {\r\n                                for (var columnIndex = 0; columnIndex < oldItem.values.length; columnIndex++) {\r\n                                    if (this._isCellChanged(oldItem, newItem, visibleRowIndex, columnIndex, isLiveUpdate)) {\r\n                                        columnIndices.push(columnIndex)\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        if (\"group\" === newItem.rowType && newItem.isExpanded === oldItem.isExpanded && oldItem.cells) {\r\n                            columnIndices = oldItem.cells.map((cell, index) => {\r\n                                var _cell$column;\r\n                                return \"groupExpand\" !== (null === (_cell$column = cell.column) || void 0 === _cell$column ? void 0 : _cell$column.type) ? index : -1\r\n                            }).filter(index => index >= 0)\r\n                        }\r\n                    }\r\n                    return columnIndices\r\n                },\r\n                _partialUpdateRow: function(oldItem, newItem, visibleRowIndex, isLiveUpdate) {\r\n                    var _changedColumnIndices;\r\n                    var changedColumnIndices = this._getChangedColumnIndices(oldItem, newItem, visibleRowIndex, isLiveUpdate);\r\n                    if (null !== (_changedColumnIndices = changedColumnIndices) && void 0 !== _changedColumnIndices && _changedColumnIndices.length && this.option(\"dataRowTemplate\")) {\r\n                        changedColumnIndices = void 0\r\n                    }\r\n                    if (changedColumnIndices) {\r\n                        oldItem.cells && oldItem.cells.forEach((function(cell, columnIndex) {\r\n                            var isCellChanged = changedColumnIndices.indexOf(columnIndex) >= 0;\r\n                            if (!isCellChanged && cell && cell.update) {\r\n                                cell.update(newItem)\r\n                            }\r\n                        }));\r\n                        newItem.update = oldItem.update;\r\n                        newItem.watch = oldItem.watch;\r\n                        newItem.cells = oldItem.cells;\r\n                        if (isLiveUpdate) {\r\n                            newItem.oldValues = oldItem.values\r\n                        }\r\n                        oldItem.update && oldItem.update(newItem)\r\n                    }\r\n                    return changedColumnIndices\r\n                },\r\n                _isItemEquals: function(item1, item2) {\r\n                    if (JSON.stringify(item1.values) !== JSON.stringify(item2.values)) {\r\n                        return false\r\n                    }\r\n                    if ([\"modified\", \"isNewRow\", \"removed\", \"isEditing\"].some(field => item1[field] !== item2[field])) {\r\n                        return false\r\n                    }\r\n                    if (\"group\" === item1.rowType || \"groupFooter\" === item1.rowType) {\r\n                        var _item1$data, _item2$data, _item1$data2, _item2$data2;\r\n                        var expandedMatch = item1.isExpanded === item2.isExpanded;\r\n                        var summaryCellsMatch = JSON.stringify(item1.summaryCells) === JSON.stringify(item2.summaryCells);\r\n                        var continuationMatch = (null === (_item1$data = item1.data) || void 0 === _item1$data ? void 0 : _item1$data.isContinuation) === (null === (_item2$data = item2.data) || void 0 === _item2$data ? void 0 : _item2$data.isContinuation) && (null === (_item1$data2 = item1.data) || void 0 === _item1$data2 ? void 0 : _item1$data2.isContinuationOnNextPage) === (null === (_item2$data2 = item2.data) || void 0 === _item2$data2 ? void 0 : _item2$data2.isContinuationOnNextPage);\r\n                        if (!expandedMatch || !summaryCellsMatch || !continuationMatch) {\r\n                            return false\r\n                        }\r\n                    }\r\n                    return true\r\n                },\r\n                _applyChangesOnly: function(change) {\r\n                    var rowIndices = [];\r\n                    var columnIndices = [];\r\n                    var changeTypes = [];\r\n                    var items = [];\r\n                    var newIndexByKey = {};\r\n\r\n                    function getRowKey(row) {\r\n                        if (row) {\r\n                            return row.rowType + \",\" + JSON.stringify(row.key)\r\n                        }\r\n                    }\r\n                    var currentItems = this._items;\r\n                    var oldItems = currentItems.slice();\r\n                    change.items.forEach((function(item, index) {\r\n                        var key = getRowKey(item);\r\n                        newIndexByKey[key] = index;\r\n                        item.rowIndex = index\r\n                    }));\r\n                    var result = findChanges(oldItems, change.items, getRowKey, (item1, item2) => {\r\n                        if (!this._isItemEquals(item1, item2)) {\r\n                            return false\r\n                        }\r\n                        if (item1.cells) {\r\n                            item1.update && item1.update(item2);\r\n                            item1.cells.forEach((function(cell) {\r\n                                if (cell && cell.update) {\r\n                                    cell.update(item2, true)\r\n                                }\r\n                            }))\r\n                        }\r\n                        return true\r\n                    });\r\n                    if (!result) {\r\n                        this._applyChangeFull(change);\r\n                        return\r\n                    }\r\n                    result.forEach(change => {\r\n                        switch (change.type) {\r\n                            case \"update\":\r\n                                var index = change.index;\r\n                                var newItem = change.data;\r\n                                var oldItem = change.oldItem;\r\n                                var changedColumnIndices = this._partialUpdateRow(oldItem, newItem, index, true);\r\n                                rowIndices.push(index);\r\n                                changeTypes.push(\"update\");\r\n                                items.push(newItem);\r\n                                currentItems[index] = newItem;\r\n                                columnIndices.push(changedColumnIndices);\r\n                                break;\r\n                            case \"insert\":\r\n                                rowIndices.push(change.index);\r\n                                changeTypes.push(\"insert\");\r\n                                items.push(change.data);\r\n                                columnIndices.push(void 0);\r\n                                currentItems.splice(change.index, 0, change.data);\r\n                                break;\r\n                            case \"remove\":\r\n                                rowIndices.push(change.index);\r\n                                changeTypes.push(\"remove\");\r\n                                currentItems.splice(change.index, 1);\r\n                                items.push(change.oldItem);\r\n                                columnIndices.push(void 0)\r\n                        }\r\n                    });\r\n                    change.repaintChangesOnly = true;\r\n                    change.changeType = \"update\";\r\n                    change.rowIndices = rowIndices;\r\n                    change.columnIndices = columnIndices;\r\n                    change.changeTypes = changeTypes;\r\n                    change.items = items;\r\n                    if (oldItems.length) {\r\n                        change.isLiveUpdate = true\r\n                    }\r\n                    this._correctRowIndices(rowIndex => {\r\n                        var oldRowIndexOffset = this._rowIndexOffset || 0;\r\n                        var rowIndexOffset = this.getRowIndexOffset();\r\n                        var oldItem = oldItems[rowIndex - oldRowIndexOffset];\r\n                        var key = getRowKey(oldItem);\r\n                        var newVisibleRowIndex = newIndexByKey[key];\r\n                        return newVisibleRowIndex >= 0 ? newVisibleRowIndex + rowIndexOffset - rowIndex : 0\r\n                    })\r\n                },\r\n                _correctRowIndices: noop,\r\n                _afterProcessItems: function(items) {\r\n                    return items\r\n                },\r\n                _updateItemsCore: function(change) {\r\n                    var items;\r\n                    var dataSource = this._dataSource;\r\n                    var changeType = change.changeType || \"refresh\";\r\n                    change.changeType = changeType;\r\n                    if (dataSource) {\r\n                        var cachedProcessedItems = this._cachedProcessedItems;\r\n                        if (change.useProcessedItemsCache && cachedProcessedItems) {\r\n                            items = cachedProcessedItems\r\n                        } else {\r\n                            items = change.items || dataSource.items();\r\n                            items = this._beforeProcessItems(items);\r\n                            items = this._processItems(items, change);\r\n                            this._cachedProcessedItems = items\r\n                        }\r\n                        items = this._afterProcessItems(items, change);\r\n                        change.items = items;\r\n                        var oldItems = this._items.length === items.length && this._items;\r\n                        this._applyChange(change);\r\n                        var rowIndexDelta = this.getRowIndexDelta();\r\n                        each(this._items, (index, item) => {\r\n                            item.rowIndex = index - rowIndexDelta;\r\n                            if (oldItems) {\r\n                                item.cells = oldItems[index].cells || []\r\n                            }\r\n                            var newItem = items[index];\r\n                            if (newItem) {\r\n                                item.loadIndex = newItem.loadIndex\r\n                            }\r\n                        });\r\n                        this._rowIndexOffset = this.getRowIndexOffset()\r\n                    } else {\r\n                        this._items = []\r\n                    }\r\n                },\r\n                _handleChanging: function(e) {\r\n                    var rows = this.getVisibleRows();\r\n                    var dataSource = this.dataSource();\r\n                    if (dataSource) {\r\n                        e.changes.forEach((function(change) {\r\n                            if (\"insert\" === change.type && change.index >= 0) {\r\n                                var dataIndex = 0;\r\n                                for (var i = 0; i < change.index; i++) {\r\n                                    var row = rows[i];\r\n                                    if (row && (\"data\" === row.rowType || \"group\" === row.rowType)) {\r\n                                        dataIndex++\r\n                                    }\r\n                                }\r\n                                change.index = dataIndex\r\n                            }\r\n                        }))\r\n                    }\r\n                },\r\n                updateItems: function(change, isDataChanged) {\r\n                    change = change || {};\r\n                    if (void 0 !== this._repaintChangesOnly) {\r\n                        change.repaintChangesOnly = change.repaintChangesOnly || this._repaintChangesOnly;\r\n                        change.needUpdateDimensions = change.needUpdateDimensions || this._needUpdateDimensions\r\n                    } else if (change.changes) {\r\n                        change.repaintChangesOnly = this.option(\"repaintChangesOnly\")\r\n                    } else if (isDataChanged) {\r\n                        var operationTypes = this.dataSource().operationTypes();\r\n                        change.repaintChangesOnly = operationTypes && !operationTypes.grouping && !operationTypes.filtering && this.option(\"repaintChangesOnly\");\r\n                        change.isDataChanged = true;\r\n                        if (operationTypes && (operationTypes.reload || operationTypes.paging || operationTypes.groupExpanding)) {\r\n                            change.needUpdateDimensions = true\r\n                        }\r\n                    }\r\n                    if (this._updateLockCount) {\r\n                        this._changes.push(change);\r\n                        return\r\n                    }\r\n                    this._updateItemsCore(change);\r\n                    if (change.cancel) {\r\n                        return\r\n                    }\r\n                    this._fireChanged(change)\r\n                },\r\n                loadingOperationTypes: function() {\r\n                    var dataSource = this.dataSource();\r\n                    return dataSource && dataSource.loadingOperationTypes() || {}\r\n                },\r\n                _fireChanged: function(change) {\r\n                    if (this._currentOperationTypes) {\r\n                        change.operationTypes = this._currentOperationTypes;\r\n                        this._currentOperationTypes = null\r\n                    }\r\n                    deferRender(() => {\r\n                        this.changed.fire(change)\r\n                    })\r\n                },\r\n                isLoading: function() {\r\n                    return this._isLoading || this._isCustomLoading\r\n                },\r\n                _fireLoadingChanged: function() {\r\n                    this.loadingChanged.fire(this.isLoading(), this._loadingText)\r\n                },\r\n                _calculateAdditionalFilter: function() {\r\n                    return null\r\n                },\r\n                _applyFilter: function() {\r\n                    var dataSource = this._dataSource;\r\n                    if (dataSource) {\r\n                        dataSource.pageIndex(0);\r\n                        this._isFilterApplying = true;\r\n                        return this.reload().done(() => {\r\n                            if (this._isFilterApplying) {\r\n                                this.pageChanged.fire()\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                resetFilterApplying: function() {\r\n                    this._isFilterApplying = false\r\n                },\r\n                filter: function(filterExpr) {\r\n                    var dataSource = this._dataSource;\r\n                    var filter = dataSource && dataSource.filter();\r\n                    if (0 === arguments.length) {\r\n                        return filter\r\n                    }\r\n                    filterExpr = arguments.length > 1 ? Array.prototype.slice.call(arguments, 0) : filterExpr;\r\n                    if (gridCoreUtils.equalFilterParameters(filter, filterExpr)) {\r\n                        return\r\n                    }\r\n                    if (dataSource) {\r\n                        dataSource.filter(filterExpr)\r\n                    }\r\n                    this._applyFilter()\r\n                },\r\n                clearFilter: function(filterName) {\r\n                    var that = this;\r\n                    var columnsController = that._columnsController;\r\n                    var clearColumnOption = function(optionName) {\r\n                        var columnCount = columnsController.columnCount();\r\n                        for (var index = 0; index < columnCount; index++) {\r\n                            columnsController.columnOption(index, optionName, void 0)\r\n                        }\r\n                    };\r\n                    that.component.beginUpdate();\r\n                    if (arguments.length > 0) {\r\n                        switch (filterName) {\r\n                            case \"dataSource\":\r\n                                that.filter(null);\r\n                                break;\r\n                            case \"search\":\r\n                                that.searchByText(\"\");\r\n                                break;\r\n                            case \"header\":\r\n                                clearColumnOption(\"filterValues\");\r\n                                break;\r\n                            case \"row\":\r\n                                clearColumnOption(\"filterValue\")\r\n                        }\r\n                    } else {\r\n                        that.filter(null);\r\n                        that.searchByText(\"\");\r\n                        clearColumnOption(\"filterValue\");\r\n                        clearColumnOption(\"bufferedFilterValue\");\r\n                        clearColumnOption(\"filterValues\")\r\n                    }\r\n                    that.component.endUpdate()\r\n                },\r\n                _fireDataSourceChanged: function() {\r\n                    var that = this;\r\n                    that.changed.add((function changedHandler() {\r\n                        that.changed.remove(changedHandler);\r\n                        that.dataSourceChanged.fire()\r\n                    }))\r\n                },\r\n                _getDataSourceAdapter: noop,\r\n                _createDataSourceAdapterCore: function(dataSource, remoteOperations) {\r\n                    var dataSourceAdapterProvider = this._getDataSourceAdapter();\r\n                    var dataSourceAdapter = dataSourceAdapterProvider.create(this.component);\r\n                    dataSourceAdapter.init(dataSource, remoteOperations);\r\n                    return dataSourceAdapter\r\n                },\r\n                isLocalStore: function(store) {\r\n                    store = store || this.store();\r\n                    return store instanceof ArrayStore\r\n                },\r\n                isCustomStore: function(store) {\r\n                    store = store || this.store();\r\n                    return store instanceof CustomStore\r\n                },\r\n                _createDataSourceAdapter: function(dataSource) {\r\n                    var remoteOperations = this.option(\"remoteOperations\");\r\n                    var store = dataSource.store();\r\n                    var enabledRemoteOperations = {\r\n                        filtering: true,\r\n                        sorting: true,\r\n                        paging: true,\r\n                        grouping: true,\r\n                        summary: true\r\n                    };\r\n                    if (remoteOperations && remoteOperations.groupPaging) {\r\n                        remoteOperations = extend({}, enabledRemoteOperations, remoteOperations)\r\n                    }\r\n                    if (\"auto\" === remoteOperations) {\r\n                        remoteOperations = this.isLocalStore(store) || this.isCustomStore(store) ? {} : {\r\n                            filtering: true,\r\n                            sorting: true,\r\n                            paging: true\r\n                        }\r\n                    }\r\n                    if (true === remoteOperations) {\r\n                        remoteOperations = enabledRemoteOperations\r\n                    }\r\n                    return this._createDataSourceAdapterCore(dataSource, remoteOperations)\r\n                },\r\n                setDataSource: function(dataSource) {\r\n                    var oldDataSource = this._dataSource;\r\n                    if (!dataSource && oldDataSource) {\r\n                        oldDataSource.cancelAll();\r\n                        oldDataSource.changed.remove(this._dataChangedHandler);\r\n                        oldDataSource.loadingChanged.remove(this._loadingChangedHandler);\r\n                        oldDataSource.loadError.remove(this._loadErrorHandler);\r\n                        oldDataSource.customizeStoreLoadOptions.remove(this._customizeStoreLoadOptionsHandler);\r\n                        oldDataSource.changing.remove(this._changingHandler);\r\n                        oldDataSource.pushed.remove(this._dataPushedHandler);\r\n                        oldDataSource.dispose(this._isSharedDataSource)\r\n                    }\r\n                    if (dataSource) {\r\n                        dataSource = this._createDataSourceAdapter(dataSource)\r\n                    }\r\n                    this._dataSource = dataSource;\r\n                    if (dataSource) {\r\n                        this._fireDataSourceChanged();\r\n                        this._isLoading = !dataSource.isLoaded();\r\n                        this._needApplyFilter = true;\r\n                        this._isAllDataTypesDefined = this._columnsController.isAllDataTypesDefined();\r\n                        dataSource.changed.add(this._dataChangedHandler);\r\n                        dataSource.loadingChanged.add(this._loadingChangedHandler);\r\n                        dataSource.loadError.add(this._loadErrorHandler);\r\n                        dataSource.customizeStoreLoadOptions.add(this._customizeStoreLoadOptionsHandler);\r\n                        dataSource.changing.add(this._changingHandler);\r\n                        dataSource.pushed.add(this._dataPushedHandler)\r\n                    }\r\n                },\r\n                items: function() {\r\n                    return this._items\r\n                },\r\n                isEmpty: function() {\r\n                    return !this.items().length\r\n                },\r\n                pageCount: function() {\r\n                    return this._dataSource ? this._dataSource.pageCount() : 1\r\n                },\r\n                dataSource: function() {\r\n                    return this._dataSource\r\n                },\r\n                store: function() {\r\n                    var dataSource = this._dataSource;\r\n                    return dataSource && dataSource.store()\r\n                },\r\n                loadAll: function(data) {\r\n                    var that = this;\r\n                    var d = new Deferred;\r\n                    var dataSource = that._dataSource;\r\n                    if (dataSource) {\r\n                        if (data) {\r\n                            var options = {\r\n                                data: data,\r\n                                isCustomLoading: true,\r\n                                storeLoadOptions: {\r\n                                    isLoadingAll: true\r\n                                },\r\n                                loadOptions: {\r\n                                    filter: that.getCombinedFilter(),\r\n                                    group: dataSource.group(),\r\n                                    sort: dataSource.sort()\r\n                                }\r\n                            };\r\n                            dataSource._handleDataLoaded(options);\r\n                            when(options.data).done((function(data) {\r\n                                data = that._beforeProcessItems(data);\r\n                                d.resolve(that._processItems(data, {\r\n                                    changeType: \"loadingAll\"\r\n                                }), options.extra && options.extra.summary)\r\n                            })).fail(d.reject)\r\n                        } else if (!dataSource.isLoading()) {\r\n                            var loadOptions = extend({}, dataSource.loadOptions(), {\r\n                                isLoadingAll: true,\r\n                                requireTotalCount: false\r\n                            });\r\n                            dataSource.load(loadOptions).done((function(items, extra) {\r\n                                items = that._beforeProcessItems(items);\r\n                                items = that._processItems(items, {\r\n                                    changeType: \"loadingAll\"\r\n                                });\r\n                                d.resolve(items, extra && extra.summary)\r\n                            })).fail(d.reject)\r\n                        } else {\r\n                            d.reject()\r\n                        }\r\n                    } else {\r\n                        d.resolve([])\r\n                    }\r\n                    return d\r\n                },\r\n                getKeyByRowIndex: function(rowIndex, byLoaded) {\r\n                    var item = this.items(byLoaded)[rowIndex];\r\n                    if (item) {\r\n                        return item.key\r\n                    }\r\n                },\r\n                getRowIndexByKey: function(key, byLoaded) {\r\n                    return gridCoreUtils.getIndexByKey(key, this.items(byLoaded))\r\n                },\r\n                keyOf: function(data) {\r\n                    var store = this.store();\r\n                    if (store) {\r\n                        return store.keyOf(data)\r\n                    }\r\n                },\r\n                byKey: function(key) {\r\n                    var store = this.store();\r\n                    var rowIndex = this.getRowIndexByKey(key);\r\n                    var result;\r\n                    if (!store) {\r\n                        return\r\n                    }\r\n                    if (rowIndex >= 0) {\r\n                        result = (new Deferred).resolve(this.items()[rowIndex].data)\r\n                    }\r\n                    return result || store.byKey(key)\r\n                },\r\n                key: function() {\r\n                    var store = this.store();\r\n                    if (store) {\r\n                        return store.key()\r\n                    }\r\n                },\r\n                getRowIndexOffset: function() {\r\n                    return 0\r\n                },\r\n                getDataByKeys: function(rowKeys) {\r\n                    var that = this;\r\n                    var result = new Deferred;\r\n                    var deferreds = [];\r\n                    var data = [];\r\n                    each(rowKeys, (function(index, key) {\r\n                        deferreds.push(that.byKey(key).done((function(keyData) {\r\n                            data[index] = keyData\r\n                        })))\r\n                    }));\r\n                    when.apply($, deferreds).always((function() {\r\n                        result.resolve(data)\r\n                    }));\r\n                    return result\r\n                },\r\n                pageIndex: function(value) {\r\n                    return changePaging(this, \"pageIndex\", value)\r\n                },\r\n                pageSize: function(value) {\r\n                    return changePaging(this, \"pageSize\", value)\r\n                },\r\n                beginCustomLoading: function(messageText) {\r\n                    this._isCustomLoading = true;\r\n                    this._loadingText = messageText || \"\";\r\n                    this._fireLoadingChanged()\r\n                },\r\n                endCustomLoading: function() {\r\n                    this._isCustomLoading = false;\r\n                    this._loadingText = void 0;\r\n                    this._fireLoadingChanged()\r\n                },\r\n                refresh: function(options) {\r\n                    if (true === options) {\r\n                        options = {\r\n                            reload: true,\r\n                            changesOnly: true\r\n                        }\r\n                    } else if (!options) {\r\n                        options = {\r\n                            lookup: true,\r\n                            selection: true,\r\n                            reload: true\r\n                        }\r\n                    }\r\n                    var that = this;\r\n                    var dataSource = that.getDataSource();\r\n                    var changesOnly = options.changesOnly;\r\n                    var d = new Deferred;\r\n                    var customizeLoadResult = function() {\r\n                        that._repaintChangesOnly = !!changesOnly\r\n                    };\r\n                    when(!options.lookup || that._columnsController.refresh()).always((function() {\r\n                        if (options.load || options.reload) {\r\n                            dataSource && dataSource.on(\"customizeLoadResult\", customizeLoadResult);\r\n                            when(that.reload(options.reload, changesOnly)).always((function() {\r\n                                dataSource && dataSource.off(\"customizeLoadResult\", customizeLoadResult);\r\n                                that._repaintChangesOnly = void 0\r\n                            })).done(d.resolve).fail(d.reject)\r\n                        } else {\r\n                            that.updateItems({\r\n                                repaintChangesOnly: options.changesOnly\r\n                            });\r\n                            d.resolve()\r\n                        }\r\n                    }));\r\n                    return d.promise()\r\n                },\r\n                getVisibleRows: function() {\r\n                    return this.items()\r\n                },\r\n                _disposeDataSource: function() {\r\n                    this.setDataSource(null)\r\n                },\r\n                dispose: function() {\r\n                    this._disposeDataSource();\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                repaintRows: function(rowIndexes, changesOnly) {\r\n                    rowIndexes = Array.isArray(rowIndexes) ? rowIndexes : [rowIndexes];\r\n                    if (rowIndexes.length > 1 || isDefined(rowIndexes[0])) {\r\n                        this.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: rowIndexes,\r\n                            isFullUpdate: !changesOnly\r\n                        })\r\n                    }\r\n                },\r\n                skipProcessingPagingChange: function(fullName) {\r\n                    return this._skipProcessingPagingChange && (\"paging.pageIndex\" === fullName || \"paging.pageSize\" === fullName)\r\n                },\r\n                getUserState: function() {\r\n                    return {\r\n                        searchText: this.option(\"searchPanel.text\"),\r\n                        pageIndex: this.pageIndex(),\r\n                        pageSize: this.pageSize()\r\n                    }\r\n                },\r\n                getCachedStoreData: function() {\r\n                    return this._dataSource && this._dataSource.getCachedStoreData()\r\n                },\r\n                isLastPageLoaded: function() {\r\n                    var pageIndex = this.pageIndex();\r\n                    var pageCount = this.pageCount();\r\n                    return pageIndex === pageCount - 1\r\n                }\r\n            };\r\n            gridCoreUtils.proxyMethod(members, \"load\");\r\n            gridCoreUtils.proxyMethod(members, \"reload\");\r\n            gridCoreUtils.proxyMethod(members, \"push\");\r\n            gridCoreUtils.proxyMethod(members, \"itemsCount\", 0);\r\n            gridCoreUtils.proxyMethod(members, \"totalItemsCount\", 0);\r\n            gridCoreUtils.proxyMethod(members, \"hasKnownLastPage\", true);\r\n            gridCoreUtils.proxyMethod(members, \"isLoaded\", true);\r\n            gridCoreUtils.proxyMethod(members, \"totalCount\", 0);\r\n            return members\r\n        }())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.data_controller.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport dataSourceAdapterProvider from \"./ui.data_grid.data_source_adapter\";\r\nimport {\r\n    dataControllerModule\r\n} from \"../grid_core/ui.grid_core.data_controller\";\r\nexport var DataController = dataControllerModule.controllers.data.inherit({\r\n    _getDataSourceAdapter: function() {\r\n        return dataSourceAdapterProvider\r\n    },\r\n    _getSpecificDataSourceOption: function() {\r\n        var dataSource = this.option(\"dataSource\");\r\n        if (dataSource && !Array.isArray(dataSource) && this.option(\"keyExpr\")) {\r\n            errors.log(\"W1011\")\r\n        }\r\n        return this.callBase()\r\n    }\r\n});\r\ngridCore.registerModule(\"data\", {\r\n    defaultOptions: dataControllerModule.defaultOptions,\r\n    controllers: {\r\n        data: DataController\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.sorting_mixin.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport $ from \"../../core/renderer\";\r\nvar SORT_CLASS = \"dx-sort\";\r\nvar SORT_NONE_CLASS = \"dx-sort-none\";\r\nvar SORTUP_CLASS = \"dx-sort-up\";\r\nvar SORTDOWN_CLASS = \"dx-sort-down\";\r\nvar SORT_INDEX_CLASS = \"dx-sort-index\";\r\nvar SORT_INDEX_ICON_CLASS = \"dx-sort-index-icon\";\r\nvar HEADERS_ACTION_CLASS = \"action\";\r\nexport default {\r\n    _applyColumnState: function(options) {\r\n        var ariaSortState;\r\n        var $sortIndicator;\r\n        var sortingMode = this.option(\"sorting.mode\");\r\n        var rootElement = options.rootElement;\r\n        var column = options.column;\r\n        var $indicatorsContainer = this._getIndicatorContainer(rootElement);\r\n        if (\"sort\" === options.name) {\r\n            rootElement.find(\".\" + SORT_CLASS).remove();\r\n            !$indicatorsContainer.children().length && $indicatorsContainer.remove();\r\n            var isSortingAllowed = \"none\" !== sortingMode && column.allowSorting;\r\n            if (!isDefined(column.groupIndex) && (isSortingAllowed || isDefined(column.sortOrder))) {\r\n                ariaSortState = \"asc\" === column.sortOrder ? \"ascending\" : \"descending\";\r\n                $sortIndicator = this.callBase(options).toggleClass(SORTUP_CLASS, \"asc\" === column.sortOrder).toggleClass(SORTDOWN_CLASS, \"desc\" === column.sortOrder);\r\n                var hasSeveralSortIndexes = this.getController && !!this.getController(\"columns\").columnOption(\"sortIndex:1\");\r\n                if (hasSeveralSortIndexes && this.option(\"sorting.showSortIndexes\") && column.sortIndex >= 0) {\r\n                    $(\"<span>\").addClass(SORT_INDEX_ICON_CLASS).text(column.sortIndex + 1).appendTo($sortIndicator);\r\n                    $sortIndicator.addClass(SORT_INDEX_CLASS)\r\n                }\r\n                if (isSortingAllowed) {\r\n                    options.rootElement.addClass(this.addWidgetPrefix(HEADERS_ACTION_CLASS))\r\n                }\r\n            }\r\n            if (!isDefined(column.sortOrder)) {\r\n                this.setAria(\"sort\", \"none\", rootElement)\r\n            } else {\r\n                this.setAria(\"sort\", ariaSortState, rootElement)\r\n            }\r\n            return $sortIndicator\r\n        } else {\r\n            return this.callBase(options)\r\n        }\r\n    },\r\n    _getIndicatorClassName: function(name) {\r\n        if (\"sort\" === name) {\r\n            return SORT_CLASS\r\n        } else if (\"sortIndex\" === name) {\r\n            return SORT_INDEX_ICON_CLASS\r\n        }\r\n        return this.callBase(name)\r\n    },\r\n    _renderIndicator: function(options) {\r\n        var column = options.column;\r\n        var $container = options.container;\r\n        var $indicator = options.indicator;\r\n        if (\"sort\" === options.name) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\");\r\n            if (!isDefined(column.sortOrder)) {\r\n                $indicator && $indicator.addClass(SORT_NONE_CLASS)\r\n            }\r\n            if ($container.children().length && (!rtlEnabled && \"left\" === options.columnAlignment || rtlEnabled && \"right\" === options.columnAlignment)) {\r\n                $container.prepend($indicator);\r\n                return\r\n            }\r\n        }\r\n        this.callBase(options)\r\n    },\r\n    _updateIndicator: function($cell, column, indicatorName) {\r\n        if (\"sort\" === indicatorName && isDefined(column.groupIndex)) {\r\n            return\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _getIndicatorElements: function($cell, returnAll) {\r\n        var $indicatorElements = this.callBase($cell);\r\n        return returnAll ? $indicatorElements : $indicatorElements && $indicatorElements.not(\".\" + SORT_NONE_CLASS)\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.sorting.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport sortingMixin from \"../grid_core/ui.grid_core.sorting_mixin\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    addNamespace,\r\n    isCommandKeyPressed\r\n} from \"../../events/utils/index\";\r\nvar COLUMN_HEADERS_VIEW_NAMESPACE = \"dxDataGridColumnHeadersView\";\r\nvar ColumnHeadersViewSortingExtender = extend({}, sortingMixin, {\r\n    _createRow(row) {\r\n        var $row = this.callBase(row);\r\n        if (\"header\" === row.rowType) {\r\n            eventsEngine.on($row, addNamespace(clickEventName, COLUMN_HEADERS_VIEW_NAMESPACE), \"td\", this.createAction(e => {\r\n                this._processHeaderAction(e.event, $row)\r\n            }))\r\n        }\r\n        return $row\r\n    },\r\n    _processHeaderAction: function(event, $row) {\r\n        if ($(event.currentTarget).parent().get(0) !== $row.get(0)) {\r\n            return\r\n        }\r\n        var that = this;\r\n        var keyName = null;\r\n        var $cellElementFromEvent = $(event.currentTarget);\r\n        var rowIndex = $cellElementFromEvent.parent().index();\r\n        var columnIndex = -1;\r\n        [].slice.call(that.getCellElements(rowIndex)).some(($cellElement, index) => {\r\n            if ($cellElement === $cellElementFromEvent.get(0)) {\r\n                columnIndex = index;\r\n                return true\r\n            }\r\n        });\r\n        var visibleColumns = that._columnsController.getVisibleColumns(rowIndex);\r\n        var column = visibleColumns[columnIndex];\r\n        var editingController = that.getController(\"editing\");\r\n        var editingMode = that.option(\"editing.mode\");\r\n        var isCellEditing = editingController && editingController.isEditing() && (\"batch\" === editingMode || \"cell\" === editingMode);\r\n        if (isCellEditing || !that._isSortableElement($(event.target))) {\r\n            return\r\n        }\r\n        if (column && !isDefined(column.groupIndex) && !column.command) {\r\n            if (event.shiftKey) {\r\n                keyName = \"shift\"\r\n            } else if (isCommandKeyPressed(event)) {\r\n                keyName = \"ctrl\"\r\n            }\r\n            setTimeout(() => {\r\n                that._columnsController.changeSortOrder(column.index, keyName)\r\n            })\r\n        }\r\n    },\r\n    _renderCellContent($cell, options) {\r\n        var column = options.column;\r\n        if (!column.command && \"header\" === options.rowType) {\r\n            this._applyColumnState({\r\n                name: \"sort\",\r\n                rootElement: $cell,\r\n                column: column,\r\n                showColumnLines: this.option(\"showColumnLines\")\r\n            })\r\n        }\r\n        this.callBase($cell, options)\r\n    },\r\n    _columnOptionChanged(e) {\r\n        var changeTypes = e.changeTypes;\r\n        if (1 === changeTypes.length && changeTypes.sorting) {\r\n            this._updateIndicators(\"sort\");\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"sorting\":\r\n                this._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nvar HeaderPanelSortingExtender = extend({}, sortingMixin, {\r\n    _createGroupPanelItem($rootElement, groupColumn) {\r\n        var that = this;\r\n        var $item = that.callBase(...arguments);\r\n        eventsEngine.on($item, addNamespace(clickEventName, \"dxDataGridHeaderPanel\"), that.createAction(() => {\r\n            that._processGroupItemAction(groupColumn.index)\r\n        }));\r\n        that._applyColumnState({\r\n            name: \"sort\",\r\n            rootElement: $item,\r\n            column: {\r\n                alignment: that.option(\"rtlEnabled\") ? \"right\" : \"left\",\r\n                allowSorting: groupColumn.allowSorting,\r\n                sortOrder: \"desc\" === groupColumn.sortOrder ? \"desc\" : \"asc\"\r\n            },\r\n            showColumnLines: true\r\n        });\r\n        return $item\r\n    },\r\n    _processGroupItemAction(groupColumnIndex) {\r\n        setTimeout(() => this.getController(\"columns\").changeSortOrder(groupColumnIndex))\r\n    },\r\n    optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"sorting\":\r\n                this._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nexport var sortingModule = {\r\n    defaultOptions: () => ({\r\n        sorting: {\r\n            mode: \"single\",\r\n            ascendingText: messageLocalization.format(\"dxDataGrid-sortingAscendingText\"),\r\n            descendingText: messageLocalization.format(\"dxDataGrid-sortingDescendingText\"),\r\n            clearText: messageLocalization.format(\"dxDataGrid-sortingClearText\"),\r\n            showSortIndexes: true\r\n        }\r\n    }),\r\n    extenders: {\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewSortingExtender,\r\n            headerPanel: HeaderPanelSortingExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.sorting.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    sortingModule\r\n} from \"../grid_core/ui.grid_core.sorting\";\r\ngridCore.registerModule(\"sorting\", sortingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.rows.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    getHeight,\r\n    getOuterHeight,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow,\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    deferRender,\r\n    deferUpdate\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    setHeight\r\n} from \"../../core/utils/style\";\r\nimport {\r\n    isDefined,\r\n    isNumeric,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect,\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    isEmpty\r\n} from \"../../core/utils/string\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    ColumnsView\r\n} from \"./ui.grid_core.columns_view\";\r\nimport Scrollable from \"../scroll_view/ui.scrollable\";\r\nimport {\r\n    removeEvent\r\n} from \"../../events/remove\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport browser from \"../../core/utils/browser\";\r\nvar ROWS_VIEW_CLASS = \"rowsview\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar NOWRAP_CLASS = \"nowrap\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar GROUP_CELL_CLASS = \"dx-group-cell\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar FREE_SPACE_CLASS = \"dx-freespace-row\";\r\nvar ROW_LINES_CLASS = \"dx-row-lines\";\r\nvar COLUMN_LINES_CLASS = \"dx-column-lines\";\r\nvar ROW_ALTERNATION_CLASS = \"dx-row-alt\";\r\nvar LAST_ROW_BORDER = \"dx-last-row-border\";\r\nvar EMPTY_CLASS = \"dx-empty\";\r\nvar ROW_INSERTED_ANIMATION_CLASS = \"row-inserted-animation\";\r\nvar LOADPANEL_HIDE_TIMEOUT = 200;\r\n\r\nfunction getMaxHorizontalScrollOffset(scrollable) {\r\n    return scrollable ? Math.round(scrollable.scrollWidth() - scrollable.clientWidth()) : 0\r\n}\r\nexport var rowsModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            hoverStateEnabled: false,\r\n            scrolling: {\r\n                useNative: \"auto\"\r\n            },\r\n            loadPanel: {\r\n                enabled: \"auto\",\r\n                text: messageLocalization.format(\"Loading\"),\r\n                width: 200,\r\n                height: 90,\r\n                showIndicator: true,\r\n                indicatorSrc: \"\",\r\n                showPane: true\r\n            },\r\n            dataRowTemplate: null,\r\n            columnAutoWidth: false,\r\n            noDataText: messageLocalization.format(\"dxDataGrid-noDataText\"),\r\n            wordWrapEnabled: false,\r\n            showColumnLines: true,\r\n            showRowLines: false,\r\n            rowAlternationEnabled: false,\r\n            activeStateEnabled: false,\r\n            twoWayBindingEnabled: true\r\n        }\r\n    },\r\n    views: {\r\n        rowsView: ColumnsView.inherit(function() {\r\n            var defaultCellTemplate = function($container, options) {\r\n                var isDataTextEmpty = isEmpty(options.text) && \"data\" === options.rowType;\r\n                var text = options.text;\r\n                var container = $container.get(0);\r\n                if (isDataTextEmpty) {\r\n                    gridCoreUtils.setEmptyText($container)\r\n                } else if (options.column.encodeHtml) {\r\n                    container.textContent = text\r\n                } else {\r\n                    container.innerHTML = text\r\n                }\r\n            };\r\n            return {\r\n                _getDefaultTemplate: function(column) {\r\n                    switch (column.command) {\r\n                        case \"empty\":\r\n                            return function(container) {\r\n                                container.html(\"&nbsp;\")\r\n                            };\r\n                        default:\r\n                            return defaultCellTemplate\r\n                    }\r\n                },\r\n                _getDefaultGroupTemplate: function(column) {\r\n                    var summaryTexts = this.option(\"summary.texts\");\r\n                    return function($container, options) {\r\n                        var data = options.data;\r\n                        var text = options.column.caption + \": \" + options.text;\r\n                        var container = $container.get(0);\r\n                        if (options.summaryItems && options.summaryItems.length) {\r\n                            text += \" \" + gridCoreUtils.getGroupRowSummaryText(options.summaryItems, summaryTexts)\r\n                        }\r\n                        if (data) {\r\n                            if (options.groupContinuedMessage && options.groupContinuesMessage) {\r\n                                text += \" (\" + options.groupContinuedMessage + \". \" + options.groupContinuesMessage + \")\"\r\n                            } else if (options.groupContinuesMessage) {\r\n                                text += \" (\" + options.groupContinuesMessage + \")\"\r\n                            } else if (options.groupContinuedMessage) {\r\n                                text += \" (\" + options.groupContinuedMessage + \")\"\r\n                            }\r\n                        }\r\n                        $container.addClass(GROUP_CELL_CLASS);\r\n                        if (column.encodeHtml) {\r\n                            container.textContent = text\r\n                        } else {\r\n                            container.innerHTML = text\r\n                        }\r\n                    }\r\n                },\r\n                _update: function() {},\r\n                _getCellTemplate: function(options) {\r\n                    var column = options.column;\r\n                    var template;\r\n                    if (\"group\" === options.rowType && isDefined(column.groupIndex) && !column.showWhenGrouped && !column.command) {\r\n                        template = column.groupCellTemplate || {\r\n                            allowRenderToDetachedContainer: true,\r\n                            render: this._getDefaultGroupTemplate(column)\r\n                        }\r\n                    } else if ((\"data\" === options.rowType || column.command) && column.cellTemplate) {\r\n                        template = column.cellTemplate\r\n                    } else {\r\n                        template = {\r\n                            allowRenderToDetachedContainer: true,\r\n                            render: this._getDefaultTemplate(column)\r\n                        }\r\n                    }\r\n                    return template\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var isGroup = \"group\" === row.rowType;\r\n                        var isDataRow = \"data\" === row.rowType;\r\n                        isDataRow && $row.addClass(DATA_ROW_CLASS);\r\n                        isDataRow && this.option(\"showRowLines\") && $row.addClass(ROW_LINES_CLASS);\r\n                        this.option(\"showColumnLines\") && $row.addClass(COLUMN_LINES_CLASS);\r\n                        if (false === row.visible) {\r\n                            $row.hide()\r\n                        }\r\n                        if (isGroup) {\r\n                            $row.addClass(GROUP_ROW_CLASS);\r\n                            var isRowExpanded = row.isExpanded;\r\n                            this.setAria(\"role\", \"row\", $row);\r\n                            this.setAria(\"expanded\", isDefined(isRowExpanded) && isRowExpanded.toString(), $row)\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _rowPrepared: function($row, rowOptions, row) {\r\n                    if (\"data\" === rowOptions.rowType) {\r\n                        if (this.option(\"rowAlternationEnabled\")) {\r\n                            this._isAltRow(row) && $row.addClass(ROW_ALTERNATION_CLASS);\r\n                            rowOptions.watch && rowOptions.watch(() => this._isAltRow(row), value => {\r\n                                $row.toggleClass(ROW_ALTERNATION_CLASS, value)\r\n                            })\r\n                        }\r\n                        this._setAriaRowIndex(rowOptions, $row);\r\n                        rowOptions.watch && rowOptions.watch(() => rowOptions.rowIndex, () => this._setAriaRowIndex(rowOptions, $row))\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _setAriaRowIndex: function(row, $row) {\r\n                    var component = this.component;\r\n                    var isPagerMode = \"standard\" === component.option(\"scrolling.mode\") && !gridCoreUtils.isVirtualRowRendering(component);\r\n                    var rowIndex = row.rowIndex + 1;\r\n                    if (isPagerMode) {\r\n                        rowIndex = component.pageIndex() * component.pageSize() + rowIndex\r\n                    } else {\r\n                        rowIndex += this._dataController.getRowIndexOffset()\r\n                    }\r\n                    this.setAria(\"rowindex\", rowIndex, $row)\r\n                },\r\n                _afterRowPrepared: function(e) {\r\n                    var arg = e.args[0];\r\n                    var dataController = this._dataController;\r\n                    var row = dataController.getVisibleRows()[arg.rowIndex];\r\n                    var watch = this.option(\"integrationOptions.watchMethod\");\r\n                    if (!arg.data || \"data\" !== arg.rowType || arg.isNewRow || !this.option(\"twoWayBindingEnabled\") || !watch || !row) {\r\n                        return\r\n                    }\r\n                    var dispose = watch(() => dataController.generateDataValues(arg.data, arg.columns), () => {\r\n                        dataController.repaintRows([row.rowIndex], this.option(\"repaintChangesOnly\"))\r\n                    }, {\r\n                        deep: true,\r\n                        skipImmediate: true\r\n                    });\r\n                    eventsEngine.on(arg.rowElement, removeEvent, dispose)\r\n                },\r\n                _renderScrollable: function(force) {\r\n                    var $element = this.element();\r\n                    if (!$element.children().length) {\r\n                        $element.append(\"<div>\")\r\n                    }\r\n                    if (force || !this._loadPanel) {\r\n                        this._renderLoadPanel($element, $element.parent(), this._dataController.isLocalStore())\r\n                    }\r\n                    if ((force || !this.getScrollable()) && this._dataController.isLoaded()) {\r\n                        var columns = this.getColumns();\r\n                        var allColumnsHasWidth = true;\r\n                        for (var i = 0; i < columns.length; i++) {\r\n                            if (!columns[i].width && !columns[i].minWidth) {\r\n                                allColumnsHasWidth = false;\r\n                                break\r\n                            }\r\n                        }\r\n                        if (this.option(\"columnAutoWidth\") || this._hasHeight || allColumnsHasWidth || this._columnsController._isColumnFixing()) {\r\n                            this._renderScrollableCore($element)\r\n                        }\r\n                    }\r\n                },\r\n                _handleScroll: function(e) {\r\n                    var rtlEnabled = this.option(\"rtlEnabled\");\r\n                    var isNativeScrolling = e.component.option(\"useNative\");\r\n                    this._scrollTop = e.scrollOffset.top;\r\n                    this._scrollLeft = e.scrollOffset.left;\r\n                    var scrollLeft = e.scrollOffset.left;\r\n                    if (rtlEnabled) {\r\n                        this._scrollRight = getMaxHorizontalScrollOffset(e.component) - this._scrollLeft;\r\n                        if (isNativeScrolling) {\r\n                            scrollLeft = -this._scrollRight\r\n                        }\r\n                        if (!this.isScrollbarVisible(true)) {\r\n                            this._scrollLeft = -1\r\n                        }\r\n                    }\r\n                    this.scrollChanged.fire(_extends({}, e.scrollOffset, {\r\n                        left: scrollLeft\r\n                    }), this.name)\r\n                },\r\n                _renderScrollableCore: function($element) {\r\n                    var dxScrollableOptions = this._createScrollableOptions();\r\n                    var scrollHandler = this._handleScroll.bind(this);\r\n                    dxScrollableOptions.onScroll = scrollHandler;\r\n                    this._scrollable = this._createComponent($element, Scrollable, dxScrollableOptions);\r\n                    this._scrollableContainer = this._scrollable && $(this._scrollable.container())\r\n                },\r\n                _renderLoadPanel: gridCoreUtils.renderLoadPanel,\r\n                _renderContent: function(contentElement, tableElement) {\r\n                    contentElement.empty().append(tableElement);\r\n                    return this._findContentElement()\r\n                },\r\n                _updateContent: function(newTableElement, change) {\r\n                    var that = this;\r\n                    var tableElement = that.getTableElement();\r\n                    var contentElement = that._findContentElement();\r\n                    var changeType = change && change.changeType;\r\n                    var executors = [];\r\n                    var highlightChanges = this.option(\"highlightChanges\");\r\n                    var rowInsertedClass = this.addWidgetPrefix(ROW_INSERTED_ANIMATION_CLASS);\r\n                    switch (changeType) {\r\n                        case \"update\":\r\n                            each(change.rowIndices, (function(index, rowIndex) {\r\n                                var $newRowElement = that._getRowElements(newTableElement).eq(index);\r\n                                var changeType = change.changeTypes && change.changeTypes[index];\r\n                                var item = change.items && change.items[index];\r\n                                executors.push((function() {\r\n                                    var $rowsElement = that._getRowElements();\r\n                                    var $rowElement = $rowsElement.eq(rowIndex);\r\n                                    switch (changeType) {\r\n                                        case \"update\":\r\n                                            if (item) {\r\n                                                var columnIndices = change.columnIndices && change.columnIndices[index];\r\n                                                if (isDefined(item.visible) && item.visible !== $rowElement.is(\":visible\")) {\r\n                                                    $rowElement.toggle(item.visible)\r\n                                                } else if (columnIndices) {\r\n                                                    that._updateCells($rowElement, $newRowElement, columnIndices)\r\n                                                } else {\r\n                                                    $rowElement.replaceWith($newRowElement)\r\n                                                }\r\n                                            }\r\n                                            break;\r\n                                        case \"insert\":\r\n                                            if (!$rowsElement.length) {\r\n                                                if (tableElement) {\r\n                                                    var target = $newRowElement.is(\"tbody\") ? tableElement : tableElement.children(\"tbody\");\r\n                                                    $newRowElement.prependTo(target)\r\n                                                }\r\n                                            } else if ($rowElement.length) {\r\n                                                $newRowElement.insertBefore($rowElement)\r\n                                            } else {\r\n                                                $newRowElement.insertAfter($rowsElement.last())\r\n                                            }\r\n                                            if (highlightChanges && change.isLiveUpdate) {\r\n                                                $newRowElement.addClass(rowInsertedClass)\r\n                                            }\r\n                                            break;\r\n                                        case \"remove\":\r\n                                            $rowElement.remove()\r\n                                    }\r\n                                }))\r\n                            }));\r\n                            each(executors, (function() {\r\n                                this()\r\n                            }));\r\n                            newTableElement.remove();\r\n                            break;\r\n                        default:\r\n                            that.setTableElement(newTableElement);\r\n                            contentElement.addClass(that.addWidgetPrefix(CONTENT_CLASS));\r\n                            that._renderContent(contentElement, newTableElement)\r\n                    }\r\n                },\r\n                _createEmptyRow: function(className, isFixed, height) {\r\n                    var $cell;\r\n                    var $row = this._createRow();\r\n                    var columns = isFixed ? this.getFixedColumns() : this.getColumns();\r\n                    $row.addClass(className).toggleClass(COLUMN_LINES_CLASS, this.option(\"showColumnLines\"));\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        $cell = this._createCell({\r\n                            column: columns[i],\r\n                            rowType: \"freeSpace\",\r\n                            columnIndex: i,\r\n                            columns: columns\r\n                        });\r\n                        isNumeric(height) && $cell.css(\"height\", height);\r\n                        $row.append($cell)\r\n                    }\r\n                    this.setAria(\"role\", \"presentation\", $row);\r\n                    return $row\r\n                },\r\n                _appendEmptyRow: function($table, $emptyRow, location) {\r\n                    var $tBodies = this._getBodies($table);\r\n                    var isTableContainer = !$tBodies.length || $emptyRow.is(\"tbody\");\r\n                    var $container = isTableContainer ? $table : $tBodies;\r\n                    if (\"top\" === location) {\r\n                        $container.first().prepend($emptyRow);\r\n                        if (isTableContainer) {\r\n                            var $colgroup = $container.children(\"colgroup\");\r\n                            $container.prepend($colgroup)\r\n                        }\r\n                    } else {\r\n                        $container.last().append($emptyRow)\r\n                    }\r\n                },\r\n                _renderFreeSpaceRow: function($tableElement) {\r\n                    var $freeSpaceRowElement = this._createEmptyRow(FREE_SPACE_CLASS);\r\n                    $freeSpaceRowElement = this._wrapRowIfNeed($tableElement, $freeSpaceRowElement);\r\n                    this._appendEmptyRow($tableElement, $freeSpaceRowElement)\r\n                },\r\n                _checkRowKeys: function(options) {\r\n                    var that = this;\r\n                    var rows = that._getRows(options);\r\n                    var keyExpr = that._dataController.store() && that._dataController.store().key();\r\n                    keyExpr && rows.some((function(row) {\r\n                        if (\"data\" === row.rowType && void 0 === row.key) {\r\n                            that._dataController.fireError(\"E1046\", keyExpr);\r\n                            return true\r\n                        }\r\n                    }))\r\n                },\r\n                _needUpdateRowHeight: function(itemsCount) {\r\n                    return itemsCount > 0 && !this._rowHeight\r\n                },\r\n                _getRowsHeight: function($tableElement) {\r\n                    var $rowElements = $tableElement.children(\"tbody\").children().not(\".dx-virtual-row\").not(\".\" + FREE_SPACE_CLASS);\r\n                    return $rowElements.toArray().reduce((function(sum, row) {\r\n                        return sum + getBoundingRect(row).height\r\n                    }), 0)\r\n                },\r\n                _updateRowHeight: function() {\r\n                    var $tableElement = this.getTableElement();\r\n                    var itemsCount = this._dataController.items().length;\r\n                    if ($tableElement && this._needUpdateRowHeight(itemsCount)) {\r\n                        var rowsHeight = this._getRowsHeight($tableElement);\r\n                        this._rowHeight = rowsHeight / itemsCount\r\n                    }\r\n                },\r\n                _findContentElement: function() {\r\n                    var $content = this.element();\r\n                    var scrollable = this.getScrollable();\r\n                    if ($content) {\r\n                        if (scrollable) {\r\n                            $content = $(scrollable.content())\r\n                        }\r\n                        return $content.children().first()\r\n                    }\r\n                },\r\n                _getRowElements: function(tableElement) {\r\n                    var $rows = this.callBase(tableElement);\r\n                    return $rows && $rows.not(\".\" + FREE_SPACE_CLASS)\r\n                },\r\n                _getFreeSpaceRowElements: function($table) {\r\n                    var tableElements = $table || this.getTableElements();\r\n                    return tableElements && tableElements.children(\"tbody\").children(\".\" + FREE_SPACE_CLASS)\r\n                },\r\n                _getNoDataText: function() {\r\n                    return this.option(\"noDataText\")\r\n                },\r\n                _rowClick: function(e) {\r\n                    var item = this._dataController.items()[e.rowIndex] || {};\r\n                    this.executeAction(\"onRowClick\", extend({\r\n                        evaluate: function(expr) {\r\n                            var getter = compileGetter(expr);\r\n                            return getter(item.data)\r\n                        }\r\n                    }, e, item))\r\n                },\r\n                _rowDblClick: function(e) {\r\n                    var item = this._dataController.items()[e.rowIndex] || {};\r\n                    this.executeAction(\"onRowDblClick\", extend({}, e, item))\r\n                },\r\n                _getColumnsCountBeforeGroups: function(columns) {\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        if (\"groupExpand\" === columns[i].type) {\r\n                            return i\r\n                        }\r\n                    }\r\n                    return 0\r\n                },\r\n                _getGroupCellOptions: function(options) {\r\n                    var columnsCountBeforeGroups = this._getColumnsCountBeforeGroups(options.columns);\r\n                    var columnIndex = (options.row.groupIndex || 0) + columnsCountBeforeGroups;\r\n                    return {\r\n                        columnIndex: columnIndex,\r\n                        colspan: options.columns.length - columnIndex - 1\r\n                    }\r\n                },\r\n                _renderCells: function($row, options) {\r\n                    if (\"group\" === options.row.rowType) {\r\n                        this._renderGroupedCells($row, options)\r\n                    } else if (options.row.values) {\r\n                        this.callBase($row, options)\r\n                    }\r\n                },\r\n                _renderGroupedCells: function($row, options) {\r\n                    var row = options.row;\r\n                    var expandColumn;\r\n                    var columns = options.columns;\r\n                    var rowIndex = row.rowIndex;\r\n                    var isExpanded;\r\n                    var groupCellOptions = this._getGroupCellOptions(options);\r\n                    for (var i = 0; i <= groupCellOptions.columnIndex; i++) {\r\n                        if (i === groupCellOptions.columnIndex && columns[i].allowCollapsing && \"infinite\" !== options.scrollingMode) {\r\n                            isExpanded = !!row.isExpanded;\r\n                            expandColumn = columns[i]\r\n                        } else {\r\n                            isExpanded = null;\r\n                            expandColumn = {\r\n                                command: \"expand\",\r\n                                cssClass: columns[i].cssClass\r\n                            }\r\n                        }\r\n                        if (this._needRenderCell(i, options.columnIndices)) {\r\n                            this._renderCell($row, {\r\n                                value: isExpanded,\r\n                                row: row,\r\n                                rowIndex: rowIndex,\r\n                                column: expandColumn,\r\n                                columnIndex: i,\r\n                                columnIndices: options.columnIndices\r\n                            })\r\n                        }\r\n                    }\r\n                    var groupColumnAlignment = getDefaultAlignment(this.option(\"rtlEnabled\"));\r\n                    var groupColumn = extend({}, columns[groupCellOptions.columnIndex], {\r\n                        command: null,\r\n                        type: null,\r\n                        cssClass: null,\r\n                        width: null,\r\n                        showWhenGrouped: false,\r\n                        alignment: groupColumnAlignment\r\n                    });\r\n                    if (groupCellOptions.colspan > 1) {\r\n                        groupColumn.colspan = groupCellOptions.colspan\r\n                    }\r\n                    if (this._needRenderCell(groupCellOptions.columnIndex + 1, options.columnIndices)) {\r\n                        this._renderCell($row, {\r\n                            value: row.values[row.groupIndex],\r\n                            row: row,\r\n                            rowIndex: rowIndex,\r\n                            column: groupColumn,\r\n                            columnIndex: groupCellOptions.columnIndex + 1,\r\n                            columnIndices: options.columnIndices\r\n                        })\r\n                    }\r\n                },\r\n                _renderRows: function($table, options) {\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    this.callBase($table, extend({\r\n                        scrollingMode: scrollingMode\r\n                    }, options));\r\n                    this._checkRowKeys(options.change);\r\n                    this._renderFreeSpaceRow($table);\r\n                    if (!this._hasHeight) {\r\n                        this.updateFreeSpaceRowHeight($table)\r\n                    }\r\n                },\r\n                _renderDataRowByTemplate($table, options, dataRowTemplate) {\r\n                    var row = options.row;\r\n                    var rowOptions = extend({\r\n                        columns: options.columns\r\n                    }, row);\r\n                    var $tbody = this._createRow(row, \"tbody\");\r\n                    $tbody.appendTo($table);\r\n                    this.renderTemplate($tbody, dataRowTemplate, rowOptions, true, options.change);\r\n                    this._rowPrepared($tbody, rowOptions, options.row)\r\n                },\r\n                _renderRow: function($table, options) {\r\n                    var row = options.row;\r\n                    var rowTemplate = this.option().rowTemplate;\r\n                    var dataRowTemplate = this.option(\"dataRowTemplate\");\r\n                    if (\"data\" === row.rowType && dataRowTemplate) {\r\n                        this._renderDataRowByTemplate($table, options, dataRowTemplate)\r\n                    } else if ((\"data\" === row.rowType || \"group\" === row.rowType) && !isDefined(row.groupIndex) && rowTemplate) {\r\n                        this.renderTemplate($table, rowTemplate, extend({\r\n                            columns: options.columns\r\n                        }, row), true)\r\n                    } else {\r\n                        this.callBase($table, options)\r\n                    }\r\n                },\r\n                _renderTable: function(options) {\r\n                    var that = this;\r\n                    var $table = that.callBase(options);\r\n                    if (!isDefined(that.getTableElement())) {\r\n                        that.setTableElement($table);\r\n                        that._renderScrollable(true);\r\n                        that.resizeCompleted.add((function resizeCompletedHandler() {\r\n                            var scrollableInstance = that.getScrollable();\r\n                            if (scrollableInstance && that.element().closest(getWindow().document).length) {\r\n                                that.resizeCompleted.remove(resizeCompletedHandler);\r\n                                scrollableInstance._visibilityChanged(true)\r\n                            }\r\n                        }))\r\n                    } else {\r\n                        that._renderScrollable()\r\n                    }\r\n                    return $table\r\n                },\r\n                _createTable: function() {\r\n                    var $table = this.callBase.apply(this, arguments);\r\n                    if (this.option().rowTemplate || this.option().dataRowTemplate) {\r\n                        $table.appendTo(this.component.$element())\r\n                    }\r\n                    return $table\r\n                },\r\n                _renderCore: function(change) {\r\n                    var $element = this.element();\r\n                    $element.addClass(this.addWidgetPrefix(ROWS_VIEW_CLASS)).toggleClass(this.addWidgetPrefix(NOWRAP_CLASS), !this.option(\"wordWrapEnabled\"));\r\n                    $element.toggleClass(EMPTY_CLASS, this._dataController.isEmpty());\r\n                    this.setAria(\"role\", \"presentation\", $element);\r\n                    var $table = this._renderTable({\r\n                        change: change\r\n                    });\r\n                    this._updateContent($table, change);\r\n                    this.callBase(change);\r\n                    this._lastColumnWidths = null\r\n                },\r\n                _getRows: function(change) {\r\n                    return change && change.items || this._dataController.items()\r\n                },\r\n                _getCellOptions: function(options) {\r\n                    var column = options.column;\r\n                    var row = options.row;\r\n                    var data = row.data;\r\n                    var summaryCells = row && row.summaryCells;\r\n                    var value = options.value;\r\n                    var displayValue = gridCoreUtils.getDisplayValue(column, value, data, row.rowType);\r\n                    var parameters = this.callBase(options);\r\n                    parameters.value = value;\r\n                    parameters.oldValue = options.oldValue;\r\n                    parameters.displayValue = displayValue;\r\n                    parameters.row = row;\r\n                    parameters.key = row.key;\r\n                    parameters.data = data;\r\n                    parameters.rowType = row.rowType;\r\n                    parameters.values = row.values;\r\n                    parameters.text = !column.command ? gridCoreUtils.formatValue(displayValue, column) : \"\";\r\n                    parameters.rowIndex = row.rowIndex;\r\n                    parameters.summaryItems = summaryCells && summaryCells[options.columnIndex];\r\n                    parameters.resized = column.resizedCallbacks;\r\n                    if (isDefined(column.groupIndex) && !column.command) {\r\n                        var groupingTextsOptions = this.option(\"grouping.texts\");\r\n                        var scrollingMode = this.option(\"scrolling.mode\");\r\n                        if (\"virtual\" !== scrollingMode && \"infinite\" !== scrollingMode) {\r\n                            parameters.groupContinuesMessage = data && data.isContinuationOnNextPage && groupingTextsOptions && groupingTextsOptions.groupContinuesMessage;\r\n                            parameters.groupContinuedMessage = data && data.isContinuation && groupingTextsOptions && groupingTextsOptions.groupContinuedMessage\r\n                        }\r\n                    }\r\n                    return parameters\r\n                },\r\n                _setRowsOpacityCore: function($rows, visibleColumns, columnIndex, value) {\r\n                    var columnsController = this._columnsController;\r\n                    var columns = columnsController.getColumns();\r\n                    var column = columns && columns[columnIndex];\r\n                    var columnID = column && column.isBand && column.index;\r\n                    each($rows, (function(rowIndex, row) {\r\n                        if (!$(row).hasClass(GROUP_ROW_CLASS)) {\r\n                            for (var i = 0; i < visibleColumns.length; i++) {\r\n                                if (isNumeric(columnID) && columnsController.isParentBandColumn(visibleColumns[i].index, columnID) || visibleColumns[i].index === columnIndex) {\r\n                                    $rows.eq(rowIndex).children().eq(i).css({\r\n                                        opacity: value\r\n                                    });\r\n                                    if (!isNumeric(columnID)) {\r\n                                        break\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }))\r\n                },\r\n                _getDevicePixelRatio: function() {\r\n                    return getWindow().devicePixelRatio\r\n                },\r\n                renderNoDataText: gridCoreUtils.renderNoDataText,\r\n                getCellOptions: function(rowIndex, columnIdentifier) {\r\n                    var rowOptions = this._dataController.items()[rowIndex];\r\n                    var cellOptions;\r\n                    var column;\r\n                    if (rowOptions) {\r\n                        if (isString(columnIdentifier)) {\r\n                            column = this._columnsController.columnOption(columnIdentifier)\r\n                        } else {\r\n                            column = this._columnsController.getVisibleColumns()[columnIdentifier]\r\n                        }\r\n                        if (column) {\r\n                            cellOptions = this._getCellOptions({\r\n                                value: column.calculateCellValue(rowOptions.data),\r\n                                rowIndex: rowOptions.rowIndex,\r\n                                row: rowOptions,\r\n                                column: column\r\n                            })\r\n                        }\r\n                    }\r\n                    return cellOptions\r\n                },\r\n                getRow: function(index) {\r\n                    if (index >= 0) {\r\n                        var rows = this._getRowElements();\r\n                        if (rows.length > index) {\r\n                            return $(rows[index])\r\n                        }\r\n                    }\r\n                },\r\n                updateFreeSpaceRowHeight: function($table) {\r\n                    var dataController = this._dataController;\r\n                    var itemCount = dataController.items(true).length;\r\n                    var contentElement = this._findContentElement();\r\n                    var freeSpaceRowElements = this._getFreeSpaceRowElements($table);\r\n                    if (freeSpaceRowElements && contentElement && dataController.totalCount() >= 0) {\r\n                        var isFreeSpaceRowVisible = false;\r\n                        if (itemCount > 0) {\r\n                            if (!this._hasHeight) {\r\n                                var freeSpaceRowCount = dataController.pageSize() - itemCount;\r\n                                var scrollingMode = this.option(\"scrolling.mode\");\r\n                                if (freeSpaceRowCount > 0 && dataController.pageCount() > 1 && \"virtual\" !== scrollingMode && \"infinite\" !== scrollingMode) {\r\n                                    setHeight(freeSpaceRowElements, freeSpaceRowCount * this._rowHeight);\r\n                                    isFreeSpaceRowVisible = true\r\n                                }\r\n                                if (!isFreeSpaceRowVisible && $table) {\r\n                                    setHeight(freeSpaceRowElements, 0)\r\n                                } else {\r\n                                    freeSpaceRowElements.toggle(isFreeSpaceRowVisible)\r\n                                }\r\n                                this._updateLastRowBorder(isFreeSpaceRowVisible)\r\n                            } else {\r\n                                freeSpaceRowElements.hide();\r\n                                deferUpdate(() => {\r\n                                    var scrollbarWidth = this.getScrollbarWidth(true);\r\n                                    var elementHeightWithoutScrollbar = getHeight(this.element()) - scrollbarWidth;\r\n                                    var contentHeight = getOuterHeight(contentElement);\r\n                                    var showFreeSpaceRow = elementHeightWithoutScrollbar - contentHeight > 0;\r\n                                    var rowsHeight = this._getRowsHeight(contentElement.children().first());\r\n                                    var $tableElement = $table || this.getTableElements();\r\n                                    var borderTopWidth = Math.ceil(parseFloat($tableElement.css(\"borderTopWidth\")));\r\n                                    var heightCorrection = this._getHeightCorrection();\r\n                                    var resultHeight = elementHeightWithoutScrollbar - rowsHeight - borderTopWidth - heightCorrection;\r\n                                    if (showFreeSpaceRow) {\r\n                                        deferRender(() => {\r\n                                            freeSpaceRowElements.css(\"height\", resultHeight);\r\n                                            isFreeSpaceRowVisible = true;\r\n                                            freeSpaceRowElements.show()\r\n                                        })\r\n                                    }\r\n                                    deferRender(() => this._updateLastRowBorder(isFreeSpaceRowVisible))\r\n                                })\r\n                            }\r\n                        } else {\r\n                            freeSpaceRowElements.css(\"height\", 0);\r\n                            freeSpaceRowElements.show();\r\n                            this._updateLastRowBorder(true)\r\n                        }\r\n                    }\r\n                },\r\n                _getHeightCorrection: function() {\r\n                    var isZoomedWebkit = browser.webkit && this._getDevicePixelRatio() >= 2;\r\n                    var isChromeLatest = browser.chrome && browser.version >= 91;\r\n                    var hasExtraBorderTop = browser.mozilla && browser.version >= 70 && !this.option(\"showRowLines\");\r\n                    return isZoomedWebkit || hasExtraBorderTop || isChromeLatest ? 1 : 0\r\n                },\r\n                _columnOptionChanged: function(e) {\r\n                    var optionNames = e.optionNames;\r\n                    if (e.changeTypes.grouping) {\r\n                        return\r\n                    }\r\n                    if (optionNames.width || optionNames.visibleWidth) {\r\n                        this.callBase(e);\r\n                        this._fireColumnResizedCallbacks()\r\n                    }\r\n                },\r\n                getScrollable: function() {\r\n                    return this._scrollable\r\n                },\r\n                init: function() {\r\n                    var that = this;\r\n                    var dataController = that.getController(\"data\");\r\n                    that.callBase();\r\n                    that._editorFactoryController = that.getController(\"editorFactory\");\r\n                    that._rowHeight = 0;\r\n                    that._scrollTop = 0;\r\n                    that._scrollLeft = -1;\r\n                    that._scrollRight = 0;\r\n                    that._hasHeight = false;\r\n                    dataController.loadingChanged.add((function(isLoading, messageText) {\r\n                        that.setLoading(isLoading, messageText)\r\n                    }));\r\n                    dataController.dataSourceChanged.add((function() {\r\n                        if (that._scrollLeft >= 0) {\r\n                            that._handleScroll({\r\n                                component: that.getScrollable(),\r\n                                scrollOffset: {\r\n                                    top: that._scrollTop,\r\n                                    left: that._scrollLeft\r\n                                }\r\n                            })\r\n                        }\r\n                    }))\r\n                },\r\n                _handleDataChanged: function(change) {\r\n                    switch (change.changeType) {\r\n                        case \"refresh\":\r\n                        case \"prepend\":\r\n                        case \"append\":\r\n                        case \"update\":\r\n                            this.render(null, change);\r\n                            break;\r\n                        default:\r\n                            this._update(change)\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    return [\"isScrollbarVisible\", \"getTopVisibleRowData\", \"getScrollbarWidth\", \"getCellElement\", \"getRowElement\", \"getScrollable\"]\r\n                },\r\n                contentWidth: function() {\r\n                    return getWidth(this.element()) - this.getScrollbarWidth()\r\n                },\r\n                getScrollbarWidth: function(isHorizontal) {\r\n                    var scrollableContainer = this._scrollableContainer && this._scrollableContainer.get(0);\r\n                    var scrollbarWidth = 0;\r\n                    if (scrollableContainer) {\r\n                        if (!isHorizontal) {\r\n                            scrollbarWidth = scrollableContainer.clientWidth ? scrollableContainer.offsetWidth - scrollableContainer.clientWidth : 0\r\n                        } else {\r\n                            scrollbarWidth = scrollableContainer.clientHeight ? scrollableContainer.offsetHeight - scrollableContainer.clientHeight : 0;\r\n                            scrollbarWidth += (that = this, scrollable = that.getScrollable(), scrollable ? Math.ceil(parseFloat($(scrollable.content()).css(\"paddingBottom\"))) : 0)\r\n                        }\r\n                    }\r\n                    var that, scrollable;\r\n                    return scrollbarWidth > 0 ? scrollbarWidth : 0\r\n                },\r\n                _fireColumnResizedCallbacks: function() {\r\n                    var lastColumnWidths = this._lastColumnWidths || [];\r\n                    var columnWidths = [];\r\n                    var columns = this.getColumns();\r\n                    for (var i = 0; i < columns.length; i++) {\r\n                        columnWidths[i] = columns[i].visibleWidth;\r\n                        if (columns[i].resizedCallbacks && !isDefined(columns[i].groupIndex) && lastColumnWidths[i] !== columnWidths[i]) {\r\n                            columns[i].resizedCallbacks.fire(columnWidths[i])\r\n                        }\r\n                    }\r\n                    this._lastColumnWidths = columnWidths\r\n                },\r\n                _updateLastRowBorder: function(isFreeSpaceRowVisible) {\r\n                    if (this.option(\"showBorders\") && this.option(\"showRowLines\") && !isFreeSpaceRowVisible) {\r\n                        this.element().addClass(LAST_ROW_BORDER)\r\n                    } else {\r\n                        this.element().removeClass(LAST_ROW_BORDER)\r\n                    }\r\n                },\r\n                _updateScrollable: function() {\r\n                    var dxScrollable = Scrollable.getInstance(this.element());\r\n                    if (dxScrollable) {\r\n                        dxScrollable.update();\r\n                        this._updateHorizontalScrollPosition()\r\n                    }\r\n                },\r\n                _updateHorizontalScrollPosition: function() {\r\n                    var scrollable = this.getScrollable();\r\n                    var scrollLeft = scrollable && scrollable.scrollOffset().left;\r\n                    var rtlEnabled = this.option(\"rtlEnabled\");\r\n                    if (rtlEnabled) {\r\n                        var maxHorizontalScrollOffset = getMaxHorizontalScrollOffset(scrollable);\r\n                        var scrollRight = maxHorizontalScrollOffset - scrollLeft;\r\n                        if (scrollRight !== this._scrollRight) {\r\n                            this._scrollLeft = maxHorizontalScrollOffset - this._scrollRight\r\n                        }\r\n                    }\r\n                    if (this._scrollLeft >= 0 && scrollLeft !== this._scrollLeft) {\r\n                        scrollable.scrollTo({\r\n                            x: this._scrollLeft\r\n                        })\r\n                    }\r\n                },\r\n                _resizeCore: function() {\r\n                    var that = this;\r\n                    that._fireColumnResizedCallbacks();\r\n                    that._updateRowHeight();\r\n                    deferRender((function() {\r\n                        that._renderScrollable();\r\n                        that.renderNoDataText();\r\n                        that.updateFreeSpaceRowHeight();\r\n                        deferUpdate((function() {\r\n                            that._updateScrollable()\r\n                        }))\r\n                    }))\r\n                },\r\n                scrollTo: function(location) {\r\n                    var $element = this.element();\r\n                    var dxScrollable = $element && Scrollable.getInstance($element);\r\n                    if (dxScrollable) {\r\n                        dxScrollable.scrollTo(location)\r\n                    }\r\n                },\r\n                height: function(_height, hasHeight) {\r\n                    var that = this;\r\n                    var $element = this.element();\r\n                    if (0 === arguments.length) {\r\n                        return $element ? getOuterHeight($element, true) : 0\r\n                    }\r\n                    that._hasHeight = void 0 === hasHeight ? \"auto\" !== _height : hasHeight;\r\n                    if (isDefined(_height) && $element) {\r\n                        setHeight($element, _height)\r\n                    }\r\n                },\r\n                setLoading: function(isLoading, messageText) {\r\n                    var loadPanel = this._loadPanel;\r\n                    var dataController = this._dataController;\r\n                    var loadPanelOptions = this.option(\"loadPanel\") || {};\r\n                    var animation = dataController.isLoaded() ? loadPanelOptions.animation : null;\r\n                    var $element = this.element();\r\n                    if (!hasWindow()) {\r\n                        return\r\n                    }\r\n                    if (!loadPanel && void 0 !== messageText && dataController.isLocalStore() && \"auto\" === loadPanelOptions.enabled && $element) {\r\n                        this._renderLoadPanel($element, $element.parent());\r\n                        loadPanel = this._loadPanel\r\n                    }\r\n                    if (loadPanel) {\r\n                        var visibilityOptions = {\r\n                            message: messageText || loadPanelOptions.text,\r\n                            animation: animation,\r\n                            visible: isLoading\r\n                        };\r\n                        if (isLoading) {\r\n                            visibilityOptions.position = gridCoreUtils.calculateLoadPanelPosition($element)\r\n                        }\r\n                        clearTimeout(this._hideLoadingTimeoutID);\r\n                        if (loadPanel.option(\"visible\") && !isLoading) {\r\n                            this._hideLoadingTimeoutID = setTimeout((function() {\r\n                                loadPanel.option(visibilityOptions)\r\n                            }), LOADPANEL_HIDE_TIMEOUT)\r\n                        } else {\r\n                            loadPanel.option(visibilityOptions)\r\n                        }\r\n                    }\r\n                },\r\n                setRowsOpacity: function(columnIndex, value) {\r\n                    var $rows = this._getRowElements().not(\".\" + GROUP_ROW_CLASS) || [];\r\n                    this._setRowsOpacityCore($rows, this.getColumns(), columnIndex, value)\r\n                },\r\n                _getCellElementsCore: function(rowIndex) {\r\n                    var $cells = this.callBase.apply(this, arguments);\r\n                    if ($cells) {\r\n                        var groupCellIndex = $cells.filter(\".\" + GROUP_CELL_CLASS).index();\r\n                        if (groupCellIndex >= 0 && $cells.length > groupCellIndex + 1) {\r\n                            return $cells.slice(0, groupCellIndex + 1)\r\n                        }\r\n                    }\r\n                    return $cells\r\n                },\r\n                _getBoundaryVisibleItemIndex: function(isTop, isFloor) {\r\n                    var itemIndex = 0;\r\n                    var prevOffset = 0;\r\n                    var offset = 0;\r\n                    var viewportBoundary = this._scrollTop;\r\n                    var $contentElement = this._findContentElement();\r\n                    var contentElementOffsetTop = $contentElement && $contentElement.offset().top;\r\n                    var dataController = this.getController(\"data\");\r\n                    var items = dataController.items();\r\n                    var tableElement = this.getTableElement();\r\n                    if (items.length && tableElement) {\r\n                        var rowElements = this._getRowElements(tableElement).filter(\":visible\");\r\n                        if (!isTop) {\r\n                            var height = this._hasHeight ? getOuterHeight(this.element()) : $(getWindow()).outerHeight();\r\n                            viewportBoundary += height\r\n                        }\r\n                        for (itemIndex = 0; itemIndex < items.length; itemIndex++) {\r\n                            prevOffset = offset;\r\n                            var $rowElement = $(rowElements).eq(itemIndex);\r\n                            if ($rowElement.length) {\r\n                                offset = $rowElement.offset();\r\n                                offset = (isTop ? offset.top : offset.top + getOuterHeight($rowElement)) - contentElementOffsetTop;\r\n                                if (offset > viewportBoundary) {\r\n                                    if (itemIndex) {\r\n                                        if (isFloor || 2 * viewportBoundary < Math.round(offset + prevOffset)) {\r\n                                            itemIndex--\r\n                                        }\r\n                                    }\r\n                                    break\r\n                                }\r\n                            }\r\n                        }\r\n                        if (itemIndex && itemIndex === items.length) {\r\n                            itemIndex--\r\n                        }\r\n                    }\r\n                    return itemIndex\r\n                },\r\n                getTopVisibleItemIndex: function(isFloor) {\r\n                    return this._getBoundaryVisibleItemIndex(true, isFloor)\r\n                },\r\n                getBottomVisibleItemIndex: function(isFloor) {\r\n                    return this._getBoundaryVisibleItemIndex(false, isFloor)\r\n                },\r\n                getTopVisibleRowData: function() {\r\n                    var itemIndex = this.getTopVisibleItemIndex();\r\n                    var items = this._dataController.items();\r\n                    if (items[itemIndex]) {\r\n                        return items[itemIndex].data\r\n                    }\r\n                },\r\n                _scrollToElement: function($element, offset) {\r\n                    var scrollable = this.getScrollable();\r\n                    scrollable && scrollable.scrollToElement($element, offset)\r\n                },\r\n                optionChanged: function(args) {\r\n                    this.callBase(args);\r\n                    switch (args.name) {\r\n                        case \"wordWrapEnabled\":\r\n                        case \"showColumnLines\":\r\n                        case \"showRowLines\":\r\n                        case \"rowAlternationEnabled\":\r\n                        case \"rowTemplate\":\r\n                        case \"dataRowTemplate\":\r\n                        case \"twoWayBindingEnabled\":\r\n                            this._invalidate(true, true);\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"scrolling\":\r\n                            this._rowHeight = null;\r\n                            this._tableElement = null;\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"rtlEnabled\":\r\n                            this._rowHeight = null;\r\n                            this._tableElement = null;\r\n                            break;\r\n                        case \"loadPanel\":\r\n                            this._tableElement = null;\r\n                            this._invalidate(true, \"loadPanel.enabled\" !== args.fullName);\r\n                            args.handled = true;\r\n                            break;\r\n                        case \"noDataText\":\r\n                            this.renderNoDataText();\r\n                            args.handled = true\r\n                    }\r\n                },\r\n                dispose: function() {\r\n                    clearTimeout(this._hideLoadingTimeoutID);\r\n                    this._scrollable && this._scrollable.dispose()\r\n                },\r\n                setScrollerSpacing: function() {},\r\n                _restoreErrorRow: function() {}\r\n            }\r\n        }())\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.rows.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    rowsModule\r\n} from \"../grid_core/ui.grid_core.rows\";\r\nexport var RowsView = rowsModule.views.rowsView;\r\ngridCore.registerModule(\"rows\", rowsModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.context_menu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport ContextMenu from \"../context_menu\";\r\nvar CONTEXT_MENU = \"dx-context-menu\";\r\nvar viewName = {\r\n    columnHeadersView: \"header\",\r\n    rowsView: \"content\",\r\n    footerView: \"footer\",\r\n    headerPanel: \"headerPanel\"\r\n};\r\nvar VIEW_NAMES = [\"columnHeadersView\", \"rowsView\", \"footerView\", \"headerPanel\"];\r\nvar ContextMenuController = modules.ViewController.inherit({\r\n    init: function() {\r\n        this.createAction(\"onContextMenuPreparing\")\r\n    },\r\n    getContextMenuItems: function(dxEvent) {\r\n        if (!dxEvent) {\r\n            return false\r\n        }\r\n        var that = this;\r\n        var $targetElement = $(dxEvent.target);\r\n        var $element;\r\n        var $targetRowElement;\r\n        var $targetCellElement;\r\n        var menuItems;\r\n        each(VIEW_NAMES, (function() {\r\n            var view = that.getView(this);\r\n            $element = view && view.element();\r\n            if ($element && ($element.is($targetElement) || $element.find($targetElement).length)) {\r\n                var _rowOptions$cells;\r\n                $targetCellElement = $targetElement.closest(\".dx-row > td, .dx-row > tr\");\r\n                $targetRowElement = $targetCellElement.parent();\r\n                var rowIndex = view.getRowIndex($targetRowElement);\r\n                var columnIndex = $targetCellElement[0] && $targetCellElement[0].cellIndex;\r\n                var rowOptions = $targetRowElement.data(\"options\");\r\n                var options = {\r\n                    event: dxEvent,\r\n                    targetElement: getPublicElement($targetElement),\r\n                    target: viewName[this],\r\n                    rowIndex: rowIndex,\r\n                    row: view._getRows()[rowIndex],\r\n                    columnIndex: columnIndex,\r\n                    column: null === rowOptions || void 0 === rowOptions ? void 0 : null === (_rowOptions$cells = rowOptions.cells) || void 0 === _rowOptions$cells ? void 0 : _rowOptions$cells[columnIndex].column\r\n                };\r\n                options.items = view.getContextMenuItems && view.getContextMenuItems(options);\r\n                that.executeAction(\"onContextMenuPreparing\", options);\r\n                that._contextMenuPrepared(options);\r\n                menuItems = options.items;\r\n                if (menuItems) {\r\n                    return false\r\n                }\r\n            }\r\n        }));\r\n        return menuItems\r\n    },\r\n    _contextMenuPrepared: noop\r\n});\r\nvar ContextMenuView = modules.View.inherit({\r\n    _renderCore: function() {\r\n        var that = this;\r\n        var $element = that.element().addClass(CONTEXT_MENU);\r\n        this.setAria(\"role\", \"presentation\", $element);\r\n        this._createComponent($element, ContextMenu, {\r\n            onPositioning: function(actionArgs) {\r\n                var event = actionArgs.event;\r\n                var contextMenuInstance = actionArgs.component;\r\n                var items = that.getController(\"contextMenu\").getContextMenuItems(event);\r\n                if (items) {\r\n                    contextMenuInstance.option(\"items\", items);\r\n                    event.stopPropagation()\r\n                } else {\r\n                    actionArgs.cancel = true\r\n                }\r\n            },\r\n            onItemClick: function(params) {\r\n                params.itemData.onItemClick && params.itemData.onItemClick(params)\r\n            },\r\n            cssClass: that.getWidgetContainerClass(),\r\n            target: that.component.$element()\r\n        })\r\n    }\r\n});\r\nexport var contextMenuModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            onContextMenuPreparing: null\r\n        }\r\n    },\r\n    controllers: {\r\n        contextMenu: ContextMenuController\r\n    },\r\n    views: {\r\n        contextMenuView: ContextMenuView\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.context_menu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport treeListCore from \"./ui.data_grid.core\";\r\nimport {\r\n    contextMenuModule\r\n} from \"../grid_core/ui.grid_core.context_menu\";\r\ntreeListCore.registerModule(\"contextMenu\", contextMenuModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.error_handling.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nvar ERROR_ROW_CLASS = \"dx-error-row\";\r\nvar ERROR_MESSAGE_CLASS = \"dx-error-message\";\r\nvar ERROR_CLOSEBUTTON_CLASS = \"dx-closebutton\";\r\nvar ACTION_CLASS = \"action\";\r\nvar ErrorHandlingController = modules.ViewController.inherit({\r\n    init: function() {\r\n        this._columnHeadersView = this.getView(\"columnHeadersView\");\r\n        this._rowsView = this.getView(\"rowsView\")\r\n    },\r\n    _createErrorRow: function(error, $tableElements) {\r\n        var that = this;\r\n        var $errorRow;\r\n        var $closeButton;\r\n        var $errorMessage = this._renderErrorMessage(error);\r\n        if ($tableElements) {\r\n            $errorRow = $(\"<tr>\").addClass(ERROR_ROW_CLASS);\r\n            $closeButton = $(\"<div>\").addClass(ERROR_CLOSEBUTTON_CLASS).addClass(that.addWidgetPrefix(ACTION_CLASS));\r\n            eventsEngine.on($closeButton, clickEventName, that.createAction((function(args) {\r\n                var e = args.event;\r\n                var $errorRow;\r\n                var errorRowIndex = $(e.currentTarget).closest(\".\" + ERROR_ROW_CLASS).index();\r\n                e.stopPropagation();\r\n                each($tableElements, (function(_, tableElement) {\r\n                    $errorRow = $(tableElement).children(\"tbody\").children(\"tr\").eq(errorRowIndex);\r\n                    that.removeErrorRow($errorRow)\r\n                }));\r\n                that.getController(\"resizing\") && that.getController(\"resizing\").fireContentReadyAction()\r\n            })));\r\n            $(\"<td>\").attr({\r\n                colSpan: that.getController(\"columns\").getVisibleColumns().length,\r\n                role: \"presentation\"\r\n            }).prepend($closeButton).append($errorMessage).appendTo($errorRow);\r\n            return $errorRow\r\n        }\r\n        return $errorMessage\r\n    },\r\n    _renderErrorMessage: function(error) {\r\n        var message = error.url ? error.message.replace(error.url, \"\") : error.message || error;\r\n        var $message = $(\"<div>\").addClass(ERROR_MESSAGE_CLASS).text(message);\r\n        if (error.url) {\r\n            $(\"<a>\").attr(\"href\", error.url).text(error.url).appendTo($message)\r\n        }\r\n        return $message\r\n    },\r\n    renderErrorRow: function(error, rowIndex, $popupContent) {\r\n        var that = this;\r\n        var $errorMessageElement;\r\n        var $firstErrorRow;\r\n        if ($popupContent) {\r\n            $popupContent.find(\".\" + ERROR_MESSAGE_CLASS).remove();\r\n            $errorMessageElement = that._createErrorRow(error);\r\n            $popupContent.prepend($errorMessageElement);\r\n            return $errorMessageElement\r\n        }\r\n        var viewElement = rowIndex >= 0 || !that._columnHeadersView.isVisible() ? that._rowsView : that._columnHeadersView;\r\n        var $tableElements = viewElement.getTableElements();\r\n        each($tableElements, (function(_, tableElement) {\r\n            $errorMessageElement = that._createErrorRow(error, $tableElements);\r\n            $firstErrorRow = $firstErrorRow || $errorMessageElement;\r\n            if (rowIndex >= 0) {\r\n                var $row = viewElement._getRowElements($(tableElement)).eq(rowIndex);\r\n                that.removeErrorRow($row.next());\r\n                $errorMessageElement.insertAfter($row)\r\n            } else {\r\n                var $tbody = $(tableElement).children(\"tbody\");\r\n                var rowElements = $tbody.children(\"tr\");\r\n                if (that._columnHeadersView.isVisible()) {\r\n                    that.removeErrorRow(rowElements.last());\r\n                    $(tableElement).append($errorMessageElement)\r\n                } else {\r\n                    that.removeErrorRow(rowElements.first());\r\n                    $tbody.first().prepend($errorMessageElement)\r\n                }\r\n            }\r\n        }));\r\n        var resizingController = that.getController(\"resizing\");\r\n        resizingController && resizingController.fireContentReadyAction();\r\n        return $firstErrorRow\r\n    },\r\n    removeErrorRow: function($row) {\r\n        if (!$row) {\r\n            var $columnHeaders = this._columnHeadersView && this._columnHeadersView.element();\r\n            $row = $columnHeaders && $columnHeaders.find(\".\" + ERROR_ROW_CLASS);\r\n            if (!$row || !$row.length) {\r\n                var $rowsViewElement = this._rowsView.element();\r\n                $row = $rowsViewElement && $rowsViewElement.find(\".\" + ERROR_ROW_CLASS)\r\n            }\r\n        }\r\n        $row && $row.hasClass(ERROR_ROW_CLASS) && $row.remove()\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"errorRowEnabled\":\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nexport var errorHandlingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            errorRowEnabled: true\r\n        }\r\n    },\r\n    controllers: {\r\n        errorHandling: ErrorHandlingController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                init: function() {\r\n                    var that = this;\r\n                    var errorHandlingController = that.getController(\"errorHandling\");\r\n                    that.callBase();\r\n                    that.dataErrorOccurred.add((function(error, $popupContent) {\r\n                        if (that.option(\"errorRowEnabled\")) {\r\n                            errorHandlingController.renderErrorRow(error, void 0, $popupContent)\r\n                        }\r\n                    }));\r\n                    that.changed.add((function(e) {\r\n                        if (e && \"loadError\" === e.changeType) {\r\n                            return\r\n                        }\r\n                        var errorHandlingController = that.getController(\"errorHandling\");\r\n                        var editingController = that.getController(\"editing\");\r\n                        if (editingController && !editingController.hasChanges()) {\r\n                            errorHandlingController && errorHandlingController.removeErrorRow()\r\n                        }\r\n                    }))\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.error_handling.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    errorHandlingModule\r\n} from \"../grid_core/ui.grid_core.error_handling\";\r\ngridCore.registerModule(\"errorHandling\", errorHandlingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.grid_view.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getInnerWidth,\r\n    getWidth,\r\n    getHeight,\r\n    setHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    deferRender,\r\n    deferUpdate\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    hasWindow,\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isString,\r\n    isDefined,\r\n    isNumeric\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport * as accessibility from \"../shared/accessibility\";\r\nimport browser from \"../../core/utils/browser\";\r\nvar BORDERS_CLASS = \"borders\";\r\nvar TABLE_FIXED_CLASS = \"table-fixed\";\r\nvar IMPORTANT_MARGIN_CLASS = \"important-margin\";\r\nvar GRIDBASE_CONTAINER_CLASS = \"dx-gridbase-container\";\r\nvar HIDDEN_COLUMNS_WIDTH = \"adaptiveHidden\";\r\nvar VIEW_NAMES = [\"columnsSeparatorView\", \"blockSeparatorView\", \"trackerView\", \"headerPanel\", \"columnHeadersView\", \"rowsView\", \"footerView\", \"columnChooserView\", \"filterPanelView\", \"pagerView\", \"draggingHeaderView\", \"contextMenuView\", \"errorView\", \"headerFilterView\", \"filterBuilderView\"];\r\nvar isPercentWidth = function(width) {\r\n    return isString(width) && \"%\" === width.slice(-1)\r\n};\r\nvar isPixelWidth = function(width) {\r\n    return isString(width) && \"px\" === width.slice(-2)\r\n};\r\nvar getContainerHeight = function($container) {\r\n    var clientHeight = $container.get(0).clientHeight;\r\n    var paddingTop = parseFloat($container.css(\"paddingTop\"));\r\n    var paddingBottom = parseFloat($container.css(\"paddingBottom\"));\r\n    return clientHeight - paddingTop - paddingBottom\r\n};\r\nvar calculateFreeWidth = function(that, widths) {\r\n    var contentWidth = that._rowsView.contentWidth();\r\n    var totalWidth = that._getTotalWidth(widths, contentWidth);\r\n    return contentWidth - totalWidth\r\n};\r\nvar calculateFreeWidthWithCurrentMinWidth = function(that, columnIndex, currentMinWidth, widths) {\r\n    return calculateFreeWidth(that, widths.map((function(width, index) {\r\n        return index === columnIndex ? currentMinWidth : width\r\n    })))\r\n};\r\nvar restoreFocus = function(focusedElement, selectionRange) {\r\n    accessibility.hiddenFocus(focusedElement);\r\n    gridCoreUtils.setSelectionRange(focusedElement, selectionRange)\r\n};\r\nvar ResizingController = modules.ViewController.inherit({\r\n    _initPostRenderHandlers: function() {\r\n        var dataController = this._dataController;\r\n        if (!this._refreshSizesHandler) {\r\n            this._refreshSizesHandler = e => {\r\n                dataController.changed.remove(this._refreshSizesHandler);\r\n                var templateDeferreds = e && e.templateDeferreds || [];\r\n                when.apply(this, templateDeferreds).done(() => {\r\n                    this._refreshSizes(e)\r\n                })\r\n            };\r\n            dataController.changed.add(() => {\r\n                dataController.changed.add(this._refreshSizesHandler)\r\n            })\r\n        }\r\n    },\r\n    _refreshSizes: function(e) {\r\n        var resizeDeferred;\r\n        var that = this;\r\n        var changeType = e && e.changeType;\r\n        var isDelayed = e && e.isDelayed;\r\n        var items = that._dataController.items();\r\n        if (!e || \"refresh\" === changeType || \"prepend\" === changeType || \"append\" === changeType) {\r\n            if (!isDelayed) {\r\n                resizeDeferred = that.resize()\r\n            }\r\n        } else if (\"update\" === changeType) {\r\n            var _e$changeTypes;\r\n            if (0 === (null === (_e$changeTypes = e.changeTypes) || void 0 === _e$changeTypes ? void 0 : _e$changeTypes.length)) {\r\n                return\r\n            }\r\n            if ((items.length > 1 || \"insert\" !== e.changeTypes[0]) && !(0 === items.length && \"remove\" === e.changeTypes[0]) && !e.needUpdateDimensions) {\r\n                deferUpdate(() => deferRender(() => deferUpdate(() => {\r\n                    that._setScrollerSpacing(that._hasHeight);\r\n                    that._rowsView.resize()\r\n                })))\r\n            } else {\r\n                resizeDeferred = that.resize()\r\n            }\r\n        }\r\n        if (changeType && \"updateSelection\" !== changeType && \"updateFocusedRow\" !== changeType && \"pageIndex\" !== changeType && !isDelayed) {\r\n            when(resizeDeferred).done((function() {\r\n                that._setAriaRowColCount();\r\n                that.fireContentReadyAction()\r\n            }))\r\n        }\r\n    },\r\n    fireContentReadyAction: function() {\r\n        this.component._fireContentReadyAction()\r\n    },\r\n    _setAriaRowColCount: function() {\r\n        var component = this.component;\r\n        component.setAria({\r\n            rowCount: this._dataController.totalItemsCount(),\r\n            colCount: component.columnCount()\r\n        }, component.$element().children(\".\" + GRIDBASE_CONTAINER_CLASS))\r\n    },\r\n    _getBestFitWidths: function() {\r\n        var _widths;\r\n        var rowsView = this._rowsView;\r\n        var columnHeadersView = this._columnHeadersView;\r\n        var widths = rowsView.getColumnWidths();\r\n        if (!(null !== (_widths = widths) && void 0 !== _widths && _widths.length)) {\r\n            var _rowsView$getTableEle;\r\n            var headersTableElement = columnHeadersView.getTableElement();\r\n            columnHeadersView.setTableElement(null === (_rowsView$getTableEle = rowsView.getTableElement()) || void 0 === _rowsView$getTableEle ? void 0 : _rowsView$getTableEle.children(\".dx-header\"));\r\n            widths = columnHeadersView.getColumnWidths();\r\n            columnHeadersView.setTableElement(headersTableElement)\r\n        }\r\n        return widths\r\n    },\r\n    _setVisibleWidths: function(visibleColumns, widths) {\r\n        var columnsController = this._columnsController;\r\n        columnsController.beginUpdate();\r\n        each(visibleColumns, (function(index, column) {\r\n            var columnId = columnsController.getColumnId(column);\r\n            columnsController.columnOption(columnId, \"visibleWidth\", widths[index])\r\n        }));\r\n        columnsController.endUpdate()\r\n    },\r\n    _toggleBestFitModeForView: function(view, className, isBestFit) {\r\n        if (!view || !view.isVisible()) {\r\n            return\r\n        }\r\n        var $rowsTables = this._rowsView.getTableElements();\r\n        var $viewTables = view.getTableElements();\r\n        each($rowsTables, (index, tableElement) => {\r\n            var $tableBody;\r\n            var $rowsTable = $(tableElement);\r\n            var $viewTable = $viewTables.eq(index);\r\n            if ($viewTable && $viewTable.length) {\r\n                if (isBestFit) {\r\n                    $tableBody = $viewTable.children(\"tbody\").appendTo($rowsTable)\r\n                } else {\r\n                    $tableBody = $rowsTable.children(\".\" + className).appendTo($viewTable)\r\n                }\r\n                $tableBody.toggleClass(className, isBestFit);\r\n                $tableBody.toggleClass(this.addWidgetPrefix(\"best-fit\"), isBestFit)\r\n            }\r\n        })\r\n    },\r\n    _toggleBestFitMode: function(isBestFit) {\r\n        var $rowsTable = this._rowsView.getTableElement();\r\n        var $rowsFixedTable = this._rowsView.getTableElements().eq(1);\r\n        if (!$rowsTable) {\r\n            return\r\n        }\r\n        $rowsTable.css(\"tableLayout\", isBestFit ? \"auto\" : \"fixed\");\r\n        $rowsTable.children(\"colgroup\").css(\"display\", isBestFit ? \"none\" : \"\");\r\n        $rowsFixedTable.toggleClass(this.addWidgetPrefix(TABLE_FIXED_CLASS), !isBestFit);\r\n        this._toggleBestFitModeForView(this._columnHeadersView, \"dx-header\", isBestFit);\r\n        this._toggleBestFitModeForView(this._footerView, \"dx-footer\", isBestFit);\r\n        this._toggleContentMinHeight(isBestFit);\r\n        if (this._needStretch()) {\r\n            $rowsTable.get(0).style.width = isBestFit ? \"auto\" : \"\"\r\n        }\r\n    },\r\n    _toggleContentMinHeight: function(isBestFit) {\r\n        if (this.option(\"wordWrapEnabled\")) {\r\n            var scrollable = this._rowsView.getScrollable();\r\n            var $contentElement = this._rowsView._findContentElement();\r\n            if (false === (null === scrollable || void 0 === scrollable ? void 0 : scrollable.option(\"useNative\"))) {\r\n                $contentElement.css({\r\n                    minHeight: isBestFit ? gridCoreUtils.getContentHeightLimit(browser) : \"\"\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _synchronizeColumns: function() {\r\n        var columnsController = this._columnsController;\r\n        var visibleColumns = columnsController.getVisibleColumns();\r\n        var columnAutoWidth = this.option(\"columnAutoWidth\");\r\n        var needBestFit = this._needBestFit();\r\n        var hasMinWidth = false;\r\n        var resetBestFitMode;\r\n        var isColumnWidthsCorrected = false;\r\n        var resultWidths = [];\r\n        var focusedElement;\r\n        var selectionRange;\r\n        !needBestFit && each(visibleColumns, (function(index, column) {\r\n            if (\"auto\" === column.width) {\r\n                needBestFit = true;\r\n                return false\r\n            }\r\n        }));\r\n        each(visibleColumns, (function(index, column) {\r\n            if (column.minWidth) {\r\n                hasMinWidth = true;\r\n                return false\r\n            }\r\n        }));\r\n        this._setVisibleWidths(visibleColumns, []);\r\n        if (needBestFit) {\r\n            focusedElement = domAdapter.getActiveElement();\r\n            selectionRange = gridCoreUtils.getSelectionRange(focusedElement);\r\n            this._toggleBestFitMode(true);\r\n            resetBestFitMode = true\r\n        }\r\n        var $element = this.component.$element();\r\n        if ($element && $element[0] && this._maxWidth) {\r\n            delete this._maxWidth;\r\n            $element[0].style.maxWidth = \"\"\r\n        }\r\n        deferUpdate(() => {\r\n            if (needBestFit) {\r\n                resultWidths = this._getBestFitWidths();\r\n                each(visibleColumns, (function(index, column) {\r\n                    var columnId = columnsController.getColumnId(column);\r\n                    columnsController.columnOption(columnId, \"bestFitWidth\", resultWidths[index], true)\r\n                }))\r\n            } else if (hasMinWidth) {\r\n                resultWidths = this._getBestFitWidths()\r\n            }\r\n            each(visibleColumns, (function(index) {\r\n                var width = this.width;\r\n                if (\"auto\" !== width) {\r\n                    if (isDefined(width)) {\r\n                        resultWidths[index] = isNumeric(width) || isPixelWidth(width) ? parseFloat(width) : width\r\n                    } else if (!columnAutoWidth) {\r\n                        resultWidths[index] = void 0\r\n                    }\r\n                }\r\n            }));\r\n            if (resetBestFitMode) {\r\n                this._toggleBestFitMode(false);\r\n                resetBestFitMode = false;\r\n                if (focusedElement && focusedElement !== domAdapter.getActiveElement()) {\r\n                    var isFocusOutsideWindow = getBoundingRect(focusedElement).bottom < 0;\r\n                    if (!isFocusOutsideWindow) {\r\n                        restoreFocus(focusedElement, selectionRange)\r\n                    }\r\n                }\r\n            }\r\n            isColumnWidthsCorrected = this._correctColumnWidths(resultWidths, visibleColumns);\r\n            if (columnAutoWidth) {\r\n                ! function() {\r\n                    var expandColumnWidth;\r\n                    each(visibleColumns, (function(index, column) {\r\n                        if (\"groupExpand\" === column.type) {\r\n                            expandColumnWidth = resultWidths[index]\r\n                        }\r\n                    }));\r\n                    each(visibleColumns, (function(index, column) {\r\n                        if (\"groupExpand\" === column.type && expandColumnWidth) {\r\n                            resultWidths[index] = expandColumnWidth\r\n                        }\r\n                    }))\r\n                }();\r\n                if (this._needStretch()) {\r\n                    this._processStretch(resultWidths, visibleColumns)\r\n                }\r\n            }\r\n            deferRender(() => {\r\n                if (needBestFit || isColumnWidthsCorrected) {\r\n                    this._setVisibleWidths(visibleColumns, resultWidths)\r\n                }\r\n            })\r\n        })\r\n    },\r\n    _needBestFit: function() {\r\n        return this.option(\"columnAutoWidth\")\r\n    },\r\n    _needStretch: function() {\r\n        return this._columnsController.getVisibleColumns().some(c => \"auto\" === c.width && !c.command)\r\n    },\r\n    _getAverageColumnsWidth: function(resultWidths) {\r\n        var freeWidth = calculateFreeWidth(this, resultWidths);\r\n        var columnCountWithoutWidth = resultWidths.filter((function(width) {\r\n            return void 0 === width\r\n        })).length;\r\n        return freeWidth / columnCountWithoutWidth\r\n    },\r\n    _correctColumnWidths: function(resultWidths, visibleColumns) {\r\n        var that = this;\r\n        var i;\r\n        var hasPercentWidth = false;\r\n        var hasAutoWidth = false;\r\n        var isColumnWidthsCorrected = false;\r\n        var $element = that.component.$element();\r\n        var hasWidth = that._hasWidth;\r\n        var _loop = function() {\r\n            var index = i;\r\n            var column = visibleColumns[index];\r\n            var isHiddenColumn = resultWidths[index] === HIDDEN_COLUMNS_WIDTH;\r\n            var width = resultWidths[index];\r\n            var minWidth = column.minWidth;\r\n            if (minWidth) {\r\n                if (void 0 === width) {\r\n                    var averageColumnsWidth = that._getAverageColumnsWidth(resultWidths);\r\n                    width = averageColumnsWidth\r\n                } else if (isPercentWidth(width)) {\r\n                    var freeWidth = calculateFreeWidthWithCurrentMinWidth(that, index, minWidth, resultWidths);\r\n                    if (freeWidth < 0) {\r\n                        width = -1\r\n                    }\r\n                }\r\n            }\r\n            var realColumnWidth = that._getRealColumnWidth(index, resultWidths.map((function(columnWidth, columnIndex) {\r\n                return index === columnIndex ? width : columnWidth\r\n            })));\r\n            if (minWidth && !isHiddenColumn && realColumnWidth < minWidth) {\r\n                resultWidths[index] = minWidth;\r\n                isColumnWidthsCorrected = true;\r\n                i = -1\r\n            }\r\n            if (!isDefined(column.width)) {\r\n                hasAutoWidth = true\r\n            }\r\n            if (isPercentWidth(column.width)) {\r\n                hasPercentWidth = true\r\n            }\r\n        };\r\n        for (i = 0; i < visibleColumns.length; i++) {\r\n            _loop()\r\n        }\r\n        if (!hasAutoWidth && resultWidths.length) {\r\n            var $rowsViewElement = that._rowsView.element();\r\n            var contentWidth = that._rowsView.contentWidth();\r\n            var scrollbarWidth = that._rowsView.getScrollbarWidth();\r\n            var totalWidth = that._getTotalWidth(resultWidths, contentWidth);\r\n            if (totalWidth < contentWidth) {\r\n                var lastColumnIndex = gridCoreUtils.getLastResizableColumnIndex(visibleColumns, resultWidths);\r\n                if (lastColumnIndex >= 0) {\r\n                    resultWidths[lastColumnIndex] = \"auto\";\r\n                    isColumnWidthsCorrected = true;\r\n                    if (false === hasWidth && !hasPercentWidth) {\r\n                        var borderWidth = that.option(\"showBorders\") ? Math.ceil(getOuterWidth($rowsViewElement) - getInnerWidth($rowsViewElement)) : 0;\r\n                        that._maxWidth = totalWidth + scrollbarWidth + borderWidth;\r\n                        $element.css(\"maxWidth\", that._maxWidth)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return isColumnWidthsCorrected\r\n    },\r\n    _processStretch: function(resultSizes, visibleColumns) {\r\n        var groupSize = this._rowsView.contentWidth();\r\n        var tableSize = this._getTotalWidth(resultSizes, groupSize);\r\n        var unusedIndexes = {\r\n            length: 0\r\n        };\r\n        if (!resultSizes.length) {\r\n            return\r\n        }\r\n        each(visibleColumns, (function(index) {\r\n            if (this.width || resultSizes[index] === HIDDEN_COLUMNS_WIDTH) {\r\n                unusedIndexes[index] = true;\r\n                unusedIndexes.length++\r\n            }\r\n        }));\r\n        var diff = groupSize - tableSize;\r\n        var diffElement = Math.floor(diff / (resultSizes.length - unusedIndexes.length));\r\n        var onePixelElementsCount = diff - diffElement * (resultSizes.length - unusedIndexes.length);\r\n        if (diff >= 0) {\r\n            for (var i = 0; i < resultSizes.length; i++) {\r\n                if (unusedIndexes[i]) {\r\n                    continue\r\n                }\r\n                resultSizes[i] += diffElement;\r\n                if (onePixelElementsCount > 0) {\r\n                    if (onePixelElementsCount < 1) {\r\n                        resultSizes[i] += onePixelElementsCount;\r\n                        onePixelElementsCount = 0\r\n                    } else {\r\n                        resultSizes[i]++;\r\n                        onePixelElementsCount--\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _getRealColumnWidth: function(columnIndex, columnWidths, groupWidth) {\r\n        var ratio = 1;\r\n        var width = columnWidths[columnIndex];\r\n        if (!isPercentWidth(width)) {\r\n            return parseFloat(width)\r\n        }\r\n        var percentTotalWidth = columnWidths.reduce((sum, width, index) => {\r\n            if (!isPercentWidth(width)) {\r\n                return sum\r\n            }\r\n            return sum + parseFloat(width)\r\n        }, 0);\r\n        var pixelTotalWidth = columnWidths.reduce((sum, width) => {\r\n            if (!width || width === HIDDEN_COLUMNS_WIDTH || isPercentWidth(width)) {\r\n                return sum\r\n            }\r\n            return sum + parseFloat(width)\r\n        }, 0);\r\n        groupWidth = groupWidth || this._rowsView.contentWidth();\r\n        var freeSpace = groupWidth - pixelTotalWidth;\r\n        var percentTotalWidthInPixel = percentTotalWidth * groupWidth / 100;\r\n        if (pixelTotalWidth > 0 && percentTotalWidthInPixel + pixelTotalWidth >= groupWidth) {\r\n            ratio = percentTotalWidthInPixel > freeSpace ? freeSpace / percentTotalWidthInPixel : 1\r\n        }\r\n        return parseFloat(width) * groupWidth * ratio / 100\r\n    },\r\n    _getTotalWidth: function(widths, groupWidth) {\r\n        var result = 0;\r\n        for (var i = 0; i < widths.length; i++) {\r\n            var width = widths[i];\r\n            if (width && width !== HIDDEN_COLUMNS_WIDTH) {\r\n                result += this._getRealColumnWidth(i, widths, groupWidth)\r\n            }\r\n        }\r\n        return Math.ceil(result)\r\n    },\r\n    updateSize: function(rootElement) {\r\n        var $groupElement;\r\n        var width;\r\n        var $rootElement = $(rootElement);\r\n        var importantMarginClass = this.addWidgetPrefix(IMPORTANT_MARGIN_CLASS);\r\n        if (void 0 === this._hasHeight && $rootElement && $rootElement.is(\":visible\") && getWidth($rootElement)) {\r\n            $groupElement = $rootElement.children(\".\" + this.getWidgetContainerClass());\r\n            if ($groupElement.length) {\r\n                $groupElement.detach()\r\n            }\r\n            this._hasHeight = !!getContainerHeight($rootElement);\r\n            width = getWidth($rootElement);\r\n            $rootElement.addClass(importantMarginClass);\r\n            this._hasWidth = getWidth($rootElement) === width;\r\n            $rootElement.removeClass(importantMarginClass);\r\n            if ($groupElement.length) {\r\n                $groupElement.appendTo($rootElement)\r\n            }\r\n        }\r\n    },\r\n    publicMethods: function() {\r\n        return [\"resize\", \"updateDimensions\"]\r\n    },\r\n    resize: function() {\r\n        return !this.component._requireResize && this.updateDimensions()\r\n    },\r\n    updateDimensions: function(checkSize) {\r\n        var that = this;\r\n        that._initPostRenderHandlers();\r\n        if (!that._checkSize(checkSize)) {\r\n            return\r\n        }\r\n        var prevResult = that._resizeDeferred;\r\n        var result = that._resizeDeferred = new Deferred;\r\n        when(prevResult).always((function() {\r\n            deferRender((function() {\r\n                if (that._dataController.isLoaded()) {\r\n                    that._synchronizeColumns()\r\n                }\r\n                that._resetGroupElementHeight();\r\n                deferUpdate((function() {\r\n                    deferRender((function() {\r\n                        deferUpdate((function() {\r\n                            that._updateDimensionsCore()\r\n                        }))\r\n                    }))\r\n                }))\r\n            })).done(result.resolve).fail(result.reject)\r\n        }));\r\n        return result.promise()\r\n    },\r\n    _resetGroupElementHeight: function() {\r\n        var groupElement = this.component.$element().children().get(0);\r\n        var scrollable = this._rowsView.getScrollable();\r\n        if (groupElement && groupElement.style.height && (!scrollable || !scrollable.scrollTop())) {\r\n            groupElement.style.height = \"\"\r\n        }\r\n    },\r\n    _checkSize: function(checkSize) {\r\n        var $rootElement = this.component.$element();\r\n        if (checkSize && (this._lastWidth === getWidth($rootElement) && this._lastHeight === getHeight($rootElement) && this._devicePixelRatio === getWindow().devicePixelRatio || !$rootElement.is(\":visible\"))) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    _setScrollerSpacingCore: function(hasHeight) {\r\n        var that = this;\r\n        var vScrollbarWidth = hasHeight ? that._rowsView.getScrollbarWidth() : 0;\r\n        var hScrollbarWidth = that._rowsView.getScrollbarWidth(true);\r\n        deferRender((function() {\r\n            that._columnHeadersView && that._columnHeadersView.setScrollerSpacing(vScrollbarWidth);\r\n            that._footerView && that._footerView.setScrollerSpacing(vScrollbarWidth);\r\n            that._rowsView.setScrollerSpacing(vScrollbarWidth, hScrollbarWidth)\r\n        }))\r\n    },\r\n    _setScrollerSpacing: function(hasHeight) {\r\n        if (true === this.option(\"scrolling.useNative\")) {\r\n            deferRender(() => {\r\n                deferUpdate(() => {\r\n                    this._setScrollerSpacingCore(hasHeight)\r\n                })\r\n            })\r\n        } else {\r\n            this._setScrollerSpacingCore(hasHeight)\r\n        }\r\n    },\r\n    _updateDimensionsCore: function() {\r\n        var that = this;\r\n        var dataController = that._dataController;\r\n        var rowsView = that._rowsView;\r\n        var $rootElement = that.component.$element();\r\n        var groupElement = $rootElement.children().get(0);\r\n        var rootElementHeight = $rootElement && ($rootElement.get(0).clientHeight || getHeight($rootElement));\r\n        var maxHeight = parseInt($rootElement.css(\"maxHeight\"));\r\n        var maxHeightHappened = maxHeight && rootElementHeight >= maxHeight;\r\n        var height = that.option(\"height\") || $rootElement.get(0).style.height;\r\n        var editorFactory = that.getController(\"editorFactory\");\r\n        var isMaxHeightApplied = maxHeightHappened && groupElement.scrollHeight === groupElement.offsetHeight;\r\n        var $testDiv;\r\n        that.updateSize($rootElement);\r\n        var hasHeight = that._hasHeight || maxHeightHappened;\r\n        if (height && that._hasHeight ^ \"auto\" !== height) {\r\n            $testDiv = $(\"<div>\");\r\n            setHeight($testDiv, height);\r\n            $testDiv.appendTo($rootElement);\r\n            that._hasHeight = !!getHeight($testDiv);\r\n            $testDiv.remove()\r\n        }\r\n        deferRender((function() {\r\n            rowsView.height(null, hasHeight);\r\n            if (maxHeightHappened && !isMaxHeightApplied) {\r\n                $(groupElement).css(\"height\", maxHeight)\r\n            }\r\n            if (!dataController.isLoaded()) {\r\n                rowsView.setLoading(dataController.isLoading());\r\n                return\r\n            }\r\n            deferUpdate((function() {\r\n                that._updateLastSizes($rootElement);\r\n                that._setScrollerSpacing(hasHeight);\r\n                each(VIEW_NAMES, (function(index, viewName) {\r\n                    var view = that.getView(viewName);\r\n                    if (view) {\r\n                        view.resize()\r\n                    }\r\n                }));\r\n                editorFactory && editorFactory.resize()\r\n            }))\r\n        }))\r\n    },\r\n    _updateLastSizes: function($rootElement) {\r\n        this._lastWidth = getWidth($rootElement);\r\n        this._lastHeight = getHeight($rootElement);\r\n        this._devicePixelRatio = getWindow().devicePixelRatio\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"width\":\r\n            case \"height\":\r\n                this.component._renderDimensions();\r\n                this.resize();\r\n            case \"renderAsync\":\r\n                args.handled = true;\r\n                return;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    init: function() {\r\n        this._dataController = this.getController(\"data\");\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._columnHeadersView = this.getView(\"columnHeadersView\");\r\n        this._footerView = this.getView(\"footerView\");\r\n        this._rowsView = this.getView(\"rowsView\")\r\n    }\r\n});\r\nvar SynchronizeScrollingController = modules.ViewController.inherit({\r\n    _scrollChangedHandler: function(views, pos, viewName) {\r\n        for (var j = 0; j < views.length; j++) {\r\n            if (views[j] && views[j].name !== viewName) {\r\n                views[j].scrollTo({\r\n                    left: pos.left,\r\n                    top: pos.top\r\n                })\r\n            }\r\n        }\r\n    },\r\n    init: function() {\r\n        var views = [this.getView(\"columnHeadersView\"), this.getView(\"footerView\"), this.getView(\"rowsView\")];\r\n        for (var i = 0; i < views.length; i++) {\r\n            var view = views[i];\r\n            if (view) {\r\n                view.scrollChanged.add(this._scrollChangedHandler.bind(this, views))\r\n            }\r\n        }\r\n    }\r\n});\r\nvar GridView = modules.View.inherit({\r\n    _endUpdateCore: function() {\r\n        if (this.component._requireResize) {\r\n            this.component._requireResize = false;\r\n            this._resizingController.resize()\r\n        }\r\n    },\r\n    _getWidgetAriaLabel: function() {\r\n        return \"dxDataGrid-ariaDataGrid\"\r\n    },\r\n    init: function() {\r\n        this._resizingController = this.getController(\"resizing\");\r\n        this._dataController = this.getController(\"data\")\r\n    },\r\n    getView: function(name) {\r\n        return this.component._views[name]\r\n    },\r\n    element: function() {\r\n        return this._groupElement\r\n    },\r\n    optionChanged: function(args) {\r\n        if (isDefined(this._groupElement) && \"showBorders\" === args.name) {\r\n            this._groupElement.toggleClass(this.addWidgetPrefix(BORDERS_CLASS), !!args.value);\r\n            args.handled = true\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    },\r\n    _renderViews: function($groupElement) {\r\n        var that = this;\r\n        each(VIEW_NAMES, (function(index, viewName) {\r\n            var view = that.getView(viewName);\r\n            if (view) {\r\n                view.render($groupElement)\r\n            }\r\n        }))\r\n    },\r\n    _getTableRoleName: function() {\r\n        return \"grid\"\r\n    },\r\n    render: function($rootElement) {\r\n        var isFirstRender = !this._groupElement;\r\n        var $groupElement = this._groupElement || $(\"<div>\").addClass(this.getWidgetContainerClass());\r\n        $groupElement.addClass(GRIDBASE_CONTAINER_CLASS);\r\n        $groupElement.toggleClass(this.addWidgetPrefix(BORDERS_CLASS), !!this.option(\"showBorders\"));\r\n        this.setAria(\"role\", \"presentation\", $rootElement);\r\n        this.component.setAria({\r\n            role: this._getTableRoleName(),\r\n            label: messageLocalization.format(this._getWidgetAriaLabel())\r\n        }, $groupElement);\r\n        this._rootElement = $rootElement || this._rootElement;\r\n        if (isFirstRender) {\r\n            this._groupElement = $groupElement;\r\n            hasWindow() && this.getController(\"resizing\").updateSize($rootElement);\r\n            $groupElement.appendTo($rootElement)\r\n        }\r\n        this._renderViews($groupElement)\r\n    },\r\n    update: function() {\r\n        var $rootElement = this._rootElement;\r\n        var $groupElement = this._groupElement;\r\n        var resizingController = this.getController(\"resizing\");\r\n        if ($rootElement && $groupElement) {\r\n            resizingController.resize();\r\n            if (this._dataController.isLoaded()) {\r\n                this._resizingController.fireContentReadyAction()\r\n            }\r\n        }\r\n    }\r\n});\r\nexport var gridViewModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            showBorders: false,\r\n            renderAsync: false\r\n        }\r\n    },\r\n    controllers: {\r\n        resizing: ResizingController,\r\n        synchronizeScrolling: SynchronizeScrollingController\r\n    },\r\n    views: {\r\n        gridView: GridView\r\n    },\r\n    VIEW_NAMES: VIEW_NAMES\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grid_view.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    gridViewModule\r\n} from \"../grid_core/ui.grid_core.grid_view\";\r\ngridCore.registerModule(\"gridView\", gridViewModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.header_panel.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport Toolbar from \"../toolbar\";\r\nimport {\r\n    ColumnsView\r\n} from \"./ui.grid_core.columns_view\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport \"../drop_down_menu\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getPathParts\r\n} from \"../../core/utils/data\";\r\nvar HEADER_PANEL_CLASS = \"header-panel\";\r\nvar TOOLBAR_BUTTON_CLASS = \"toolbar-button\";\r\nvar TOOLBAR_ARIA_LABEL = \"-ariaToolbar\";\r\nvar HeaderPanel = ColumnsView.inherit({\r\n    _getToolbarItems: function() {\r\n        return []\r\n    },\r\n    _getButtonContainer: function() {\r\n        return $(\"<div>\").addClass(this.addWidgetPrefix(TOOLBAR_BUTTON_CLASS))\r\n    },\r\n    _getToolbarButtonClass: function(specificClass) {\r\n        var secondClass = specificClass ? \" \" + specificClass : \"\";\r\n        return this.addWidgetPrefix(TOOLBAR_BUTTON_CLASS) + secondClass\r\n    },\r\n    _getToolbarOptions: function() {\r\n        var userToolbarOptions = this.option(\"toolbar\");\r\n        var options = {\r\n            toolbarOptions: {\r\n                items: this._getToolbarItems(),\r\n                visible: null === userToolbarOptions || void 0 === userToolbarOptions ? void 0 : userToolbarOptions.visible,\r\n                disabled: null === userToolbarOptions || void 0 === userToolbarOptions ? void 0 : userToolbarOptions.disabled,\r\n                onItemRendered: function(e) {\r\n                    var itemRenderedCallback = e.itemData.onItemRendered;\r\n                    if (itemRenderedCallback) {\r\n                        itemRenderedCallback(e)\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        var userItems = null === userToolbarOptions || void 0 === userToolbarOptions ? void 0 : userToolbarOptions.items;\r\n        options.toolbarOptions.items = this._normalizeToolbarItems(options.toolbarOptions.items, userItems);\r\n        this.executeAction(\"onToolbarPreparing\", options);\r\n        if (options.toolbarOptions && !isDefined(options.toolbarOptions.visible)) {\r\n            var toolbarItems = options.toolbarOptions.items;\r\n            options.toolbarOptions.visible = !!(null !== toolbarItems && void 0 !== toolbarItems && toolbarItems.length)\r\n        }\r\n        return options.toolbarOptions\r\n    },\r\n    _normalizeToolbarItems(defaultItems, userItems) {\r\n        var defaultProps = {\r\n            location: \"after\"\r\n        };\r\n        var isArray = Array.isArray(userItems);\r\n        if (!isDefined(userItems)) {\r\n            return defaultItems\r\n        }\r\n        if (!isArray) {\r\n            userItems = [userItems]\r\n        }\r\n        var defaultButtonsByNames = {};\r\n        defaultItems.forEach(button => {\r\n            defaultButtonsByNames[button.name] = button\r\n        });\r\n        var normalizedItems = userItems.map(button => {\r\n            var needHideButton = false;\r\n            if (isString(button)) {\r\n                button = {\r\n                    name: button\r\n                };\r\n                needHideButton = true\r\n            }\r\n            if (isDefined(button.name)) {\r\n                if (isDefined(defaultButtonsByNames[button.name])) {\r\n                    button = extend(true, {}, defaultButtonsByNames[button.name], button)\r\n                } else if (needHideButton) {\r\n                    button.visible = false\r\n                }\r\n            }\r\n            return extend(true, {}, defaultProps, button)\r\n        });\r\n        return isArray ? normalizedItems : normalizedItems[0]\r\n    },\r\n    _renderCore: function() {\r\n        if (!this._toolbar) {\r\n            var $headerPanel = this.element();\r\n            $headerPanel.addClass(this.addWidgetPrefix(HEADER_PANEL_CLASS));\r\n            var label = messageLocalization.format(this.component.NAME + TOOLBAR_ARIA_LABEL);\r\n            var $toolbar = $(\"<div>\").attr(\"aria-label\", label).appendTo($headerPanel);\r\n            this._toolbar = this._createComponent($toolbar, Toolbar, this._toolbarOptions)\r\n        } else {\r\n            this._toolbar.option(this._toolbarOptions)\r\n        }\r\n    },\r\n    _columnOptionChanged: noop,\r\n    _handleDataChanged: function() {\r\n        if (this._requireReady) {\r\n            this.render()\r\n        }\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this.createAction(\"onToolbarPreparing\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    render: function() {\r\n        this._toolbarOptions = this._getToolbarOptions();\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    setToolbarItemDisabled: function(name, optionValue) {\r\n        var toolbarInstance = this._toolbar;\r\n        if (toolbarInstance) {\r\n            var items = toolbarInstance.option(\"items\") || [];\r\n            var itemIndex = items.indexOf(items.filter((function(item) {\r\n                return item.name === name\r\n            }))[0]);\r\n            if (itemIndex >= 0) {\r\n                var itemOptionPrefix = \"items[\" + itemIndex + \"]\";\r\n                if (toolbarInstance.option(itemOptionPrefix + \".options\")) {\r\n                    toolbarInstance.option(itemOptionPrefix + \".options.disabled\", optionValue)\r\n                } else {\r\n                    toolbarInstance.option(itemOptionPrefix + \".disabled\", optionValue)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    updateToolbarDimensions: function() {\r\n        var _this$_toolbar;\r\n        null === (_this$_toolbar = this._toolbar) || void 0 === _this$_toolbar ? void 0 : _this$_toolbar.updateDimensions()\r\n    },\r\n    getHeaderPanel: function() {\r\n        return this.element()\r\n    },\r\n    getHeight: function() {\r\n        return this.getElementHeight()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"onToolbarPreparing\" === args.name) {\r\n            this._invalidate();\r\n            args.handled = true\r\n        }\r\n        if (\"toolbar\" === args.name) {\r\n            args.handled = true;\r\n            if (this._toolbar) {\r\n                var parts = getPathParts(args.fullName);\r\n                var optionName = args.fullName.replace(/^toolbar\\./, \"\");\r\n                if (1 === parts.length) {\r\n                    var toolbarOptions = this._getToolbarOptions();\r\n                    this._toolbar.option(toolbarOptions)\r\n                } else if (\"items\" === parts[1]) {\r\n                    if (2 === parts.length) {\r\n                        var _toolbarOptions = this._getToolbarOptions();\r\n                        this._toolbar.option(\"items\", _toolbarOptions.items)\r\n                    } else if (3 === parts.length) {\r\n                        var normalizedItem = this._normalizeToolbarItems(this._getToolbarItems(), args.value);\r\n                        this._toolbar.option(optionName, normalizedItem)\r\n                    } else if (parts.length >= 4) {\r\n                        this._toolbar.option(optionName, args.value)\r\n                    }\r\n                } else {\r\n                    this._toolbar.option(optionName, args.value)\r\n                }\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    isVisible: function() {\r\n        return this._toolbarOptions && this._toolbarOptions.visible\r\n    },\r\n    allowDragging: noop\r\n});\r\nexport var headerPanelModule = {\r\n    defaultOptions: function() {\r\n        return {}\r\n    },\r\n    views: {\r\n        headerPanel: HeaderPanel\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            resizing: {\r\n                _updateDimensionsCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this.getView(\"headerPanel\").updateToolbarDimensions()\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.header_panel.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    headerPanelModule\r\n} from \"../grid_core/ui.grid_core.header_panel\";\r\nexport var HeaderPanel = headerPanelModule.views.headerPanel;\r\ngridCore.registerModule(\"headerPanel\", headerPanelModule);\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.base.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    deferRender,\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isFunction,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    logger\r\n} from \"../../core/utils/console\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    isMaterial\r\n} from \"../themes\";\r\nvar DATAGRID_ROW_SELECTOR = \".dx-row\";\r\nvar DATAGRID_DEPRECATED_TEMPLATE_WARNING = \"Specifying grid templates with the jQuery selector name is now deprecated. Use the DOM Node or the jQuery object that references this selector instead.\";\r\nimport \"./ui.data_grid.column_headers\";\r\nimport \"./ui.data_grid.columns_controller\";\r\nimport \"./ui.data_grid.data_controller\";\r\nimport \"./ui.data_grid.sorting\";\r\nimport \"./ui.data_grid.rows\";\r\nimport \"./ui.data_grid.context_menu\";\r\nimport \"./ui.data_grid.error_handling\";\r\nimport \"./ui.data_grid.grid_view\";\r\nimport \"./ui.data_grid.header_panel\";\r\ngridCore.registerModulesOrder([\"stateStoring\", \"columns\", \"selection\", \"editorFactory\", \"columnChooser\", \"grouping\", \"editing\", \"editingRowBased\", \"editingFormBased\", \"editingCellBased\", \"masterDetail\", \"validating\", \"adaptivity\", \"data\", \"virtualScrolling\", \"columnHeaders\", \"filterRow\", \"headerPanel\", \"headerFilter\", \"sorting\", \"search\", \"rows\", \"pager\", \"columnsResizingReordering\", \"contextMenu\", \"keyboardNavigation\", \"errorHandling\", \"summary\", \"columnFixing\", \"export\", \"gridView\"]);\r\nvar DataGrid = Widget.inherit({\r\n    _activeStateUnit: DATAGRID_ROW_SELECTOR,\r\n    _getDefaultOptions: function() {\r\n        var result = this.callBase();\r\n        each(gridCore.modules, (function() {\r\n            if (isFunction(this.defaultOptions)) {\r\n                extend(true, result, this.defaultOptions())\r\n            }\r\n        }));\r\n        return result\r\n    },\r\n    _setDeprecatedOptions: function() {\r\n        this.callBase();\r\n        extend(this._deprecatedOptions, {\r\n            useKeyboard: {\r\n                since: \"19.2\",\r\n                alias: \"keyboardNavigation.enabled\"\r\n            },\r\n            rowTemplate: {\r\n                since: \"21.2\",\r\n                message: 'Use the \"dataRowTemplate\" option instead'\r\n            },\r\n            onToolbarPreparing: {\r\n                since: \"21.2\",\r\n                message: 'Use the \"toolbar\" option instead'\r\n            }\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                showRowLines: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return isMaterial()\r\n            },\r\n            options: {\r\n                showRowLines: true,\r\n                showColumnLines: false,\r\n                headerFilter: {\r\n                    height: 315\r\n                },\r\n                editing: {\r\n                    useIcons: true\r\n                },\r\n                selection: {\r\n                    showCheckBoxesMode: \"always\"\r\n                }\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return browser.webkit\r\n            },\r\n            options: {\r\n                loadingTimeout: 30,\r\n                loadPanel: {\r\n                    animation: {\r\n                        show: {\r\n                            easing: \"cubic-bezier(1, 0, 1, 0)\",\r\n                            duration: 500,\r\n                            from: {\r\n                                opacity: 0\r\n                            },\r\n                            to: {\r\n                                opacity: 1\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }, {\r\n            device: function(_device) {\r\n                return \"desktop\" !== _device.deviceType\r\n            },\r\n            options: {\r\n                grouping: {\r\n                    expandMode: \"rowClick\"\r\n                }\r\n            }\r\n        }])\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        gridCore.processModules(this, gridCore);\r\n        gridCore.callModuleItemsMethod(this, \"init\")\r\n    },\r\n    _clean: noop,\r\n    _optionChanged: function(args) {\r\n        gridCore.callModuleItemsMethod(this, \"optionChanged\", [args]);\r\n        if (!args.handled) {\r\n            this.callBase(args)\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        this.updateDimensions(true)\r\n    },\r\n    _visibilityChanged: function(visible) {\r\n        if (visible) {\r\n            this.updateDimensions()\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this.getView(\"gridView\").render(this.$element())\r\n    },\r\n    _renderContentImpl: function() {\r\n        this.getView(\"gridView\").update()\r\n    },\r\n    _renderContent: function() {\r\n        var that = this;\r\n        deferRender((function() {\r\n            that._renderContentImpl()\r\n        }))\r\n    },\r\n    _getTemplate: function(templateName) {\r\n        var template = templateName;\r\n        if (isString(template) && \"#\" === template[0]) {\r\n            template = $(templateName);\r\n            logger.warn(DATAGRID_DEPRECATED_TEMPLATE_WARNING)\r\n        }\r\n        return this.callBase(template)\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        gridCore.callModuleItemsMethod(this, \"dispose\")\r\n    },\r\n    isReady: function() {\r\n        return this.getController(\"data\").isReady()\r\n    },\r\n    beginUpdate: function() {\r\n        this.callBase();\r\n        gridCore.callModuleItemsMethod(this, \"beginUpdate\")\r\n    },\r\n    endUpdate: function() {\r\n        gridCore.callModuleItemsMethod(this, \"endUpdate\");\r\n        this.callBase()\r\n    },\r\n    getController: function(name) {\r\n        return this._controllers[name]\r\n    },\r\n    getView: function(name) {\r\n        return this._views[name]\r\n    },\r\n    focus: function(element) {\r\n        this.getController(\"keyboardNavigation\").focus(element)\r\n    }\r\n});\r\nDataGrid.registerModule = gridCore.registerModule.bind(gridCore);\r\nregisterComponent(\"dxDataGrid\", DataGrid);\r\nexport default DataGrid;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.state_storing_core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    sessionStorage\r\n} from \"../../core/utils/storage\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    isEmptyObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    fromPromise\r\n} from \"../../core/utils/deferred\";\r\nvar DATE_REGEX = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/;\r\nvar parseDates = function parseDates(state) {\r\n    if (!state) {\r\n        return\r\n    }\r\n    each(state, (function(key, value) {\r\n        if (isPlainObject(value) || Array.isArray(value)) {\r\n            parseDates(value)\r\n        } else if (\"string\" === typeof value) {\r\n            var date = DATE_REGEX.exec(value);\r\n            if (date) {\r\n                state[key] = new Date(Date.UTC(+date[1], +date[2] - 1, +date[3], +date[4], +date[5], +date[6]))\r\n            }\r\n        }\r\n    }))\r\n};\r\nexport var StateStoringController = modules.ViewController.inherit(function() {\r\n    var getStorage = function(options) {\r\n        var storage = \"sessionStorage\" === options.type ? sessionStorage() : getWindow().localStorage;\r\n        if (!storage) {\r\n            throw new Error(\"E1007\")\r\n        }\r\n        return storage\r\n    };\r\n    var getUniqueStorageKey = function(options) {\r\n        return isDefined(options.storageKey) ? options.storageKey : \"storage\"\r\n    };\r\n    return {\r\n        _loadState: function() {\r\n            var options = this.option(\"stateStoring\");\r\n            if (\"custom\" === options.type) {\r\n                return options.customLoad && options.customLoad()\r\n            }\r\n            try {\r\n                return JSON.parse(getStorage(options).getItem(getUniqueStorageKey(options)))\r\n            } catch (e) {\r\n                errors.log(e.message)\r\n            }\r\n        },\r\n        _saveState: function(state) {\r\n            var options = this.option(\"stateStoring\");\r\n            if (\"custom\" === options.type) {\r\n                options.customSave && options.customSave(state);\r\n                return\r\n            }\r\n            try {\r\n                getStorage(options).setItem(getUniqueStorageKey(options), JSON.stringify(state))\r\n            } catch (e) {\r\n                errors.log(e.message)\r\n            }\r\n        },\r\n        publicMethods: function() {\r\n            return [\"state\"]\r\n        },\r\n        isEnabled: function() {\r\n            return this.option(\"stateStoring.enabled\")\r\n        },\r\n        init: function() {\r\n            var that = this;\r\n            that._state = {};\r\n            that._isLoaded = false;\r\n            that._isLoading = false;\r\n            that._windowUnloadHandler = function() {\r\n                if (void 0 !== that._savingTimeoutID) {\r\n                    that._saveState(that.state())\r\n                }\r\n            };\r\n            eventsEngine.on(getWindow(), \"unload\", that._windowUnloadHandler);\r\n            return that\r\n        },\r\n        isLoaded: function() {\r\n            return this._isLoaded\r\n        },\r\n        isLoading: function() {\r\n            return this._isLoading\r\n        },\r\n        load: function() {\r\n            this._isLoading = true;\r\n            var loadResult = fromPromise(this._loadState());\r\n            loadResult.always(() => {\r\n                this._isLoaded = true;\r\n                this._isLoading = false\r\n            }).done(state => {\r\n                if (null !== state && !isEmptyObject(state)) {\r\n                    this.state(state)\r\n                }\r\n            });\r\n            return loadResult\r\n        },\r\n        state: function(_state) {\r\n            var that = this;\r\n            if (!arguments.length) {\r\n                return extend(true, {}, that._state)\r\n            } else {\r\n                that._state = extend({}, _state);\r\n                parseDates(that._state)\r\n            }\r\n        },\r\n        save: function() {\r\n            var that = this;\r\n            clearTimeout(that._savingTimeoutID);\r\n            that._savingTimeoutID = setTimeout((function() {\r\n                that._saveState(that.state());\r\n                that._savingTimeoutID = void 0\r\n            }), that.option(\"stateStoring.savingTimeout\"))\r\n        },\r\n        optionChanged: function(args) {\r\n            switch (args.name) {\r\n                case \"stateStoring\":\r\n                    if (this.isEnabled() && !this.isLoading()) {\r\n                        this.load()\r\n                    }\r\n                    args.handled = true;\r\n                    break;\r\n                default:\r\n                    this.callBase(args)\r\n            }\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._savingTimeoutID);\r\n            eventsEngine.off(getWindow(), \"unload\", this._windowUnloadHandler)\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.state_storing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getKeyHash,\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    StateStoringController\r\n} from \"./ui.grid_core.state_storing_core\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar getDataState = that => {\r\n    var pagerView = that.getView(\"pagerView\");\r\n    var dataController = that.getController(\"data\");\r\n    var state = {\r\n        allowedPageSizes: pagerView ? pagerView.getPageSizes() : void 0,\r\n        filterPanel: {\r\n            filterEnabled: that.option(\"filterPanel.filterEnabled\")\r\n        },\r\n        filterValue: that.option(\"filterValue\"),\r\n        focusedRowKey: that.option(\"focusedRowEnabled\") ? that.option(\"focusedRowKey\") : void 0\r\n    };\r\n    return extend(state, dataController.getUserState())\r\n};\r\nvar processLoadState = that => {\r\n    var columnsController = that.getController(\"columns\");\r\n    var selectionController = that.getController(\"selection\");\r\n    var exportController = that.getController(\"export\");\r\n    var dataController = that.getController(\"data\");\r\n    if (columnsController) {\r\n        columnsController.columnsChanged.add((function() {\r\n            that.updateState({\r\n                columns: columnsController.getUserState()\r\n            })\r\n        }))\r\n    }\r\n    if (selectionController) {\r\n        selectionController.selectionChanged.add((function(e) {\r\n            that.updateState({\r\n                selectedRowKeys: e.selectedRowKeys,\r\n                selectionFilter: e.selectionFilter\r\n            })\r\n        }))\r\n    }\r\n    if (dataController) {\r\n        that._initialPageSize = that.option(\"paging.pageSize\");\r\n        that._initialFilterValue = that.option(\"filterValue\");\r\n        dataController.changed.add((function() {\r\n            var state = getDataState(that);\r\n            that.updateState(state)\r\n        }))\r\n    }\r\n    if (exportController) {\r\n        exportController.selectionOnlyChanged.add((function() {\r\n            that.updateState({\r\n                exportSelectionOnly: exportController.selectionOnly()\r\n            })\r\n        }))\r\n    }\r\n};\r\nvar DEFAULT_FILTER_VALUE = null;\r\nvar getFilterValue = (that, state) => {\r\n    var filterSyncController = that.getController(\"filterSync\");\r\n    var columnsController = that.getController(\"columns\");\r\n    var hasFilterState = state.columns || void 0 !== state.filterValue;\r\n    if (filterSyncController) {\r\n        if (hasFilterState) {\r\n            return state.filterValue || filterSyncController.getFilterValueFromColumns(state.columns)\r\n        } else {\r\n            return that._initialFilterValue || filterSyncController.getFilterValueFromColumns(columnsController.getColumns())\r\n        }\r\n    }\r\n    return DEFAULT_FILTER_VALUE\r\n};\r\nexport var stateStoringModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            stateStoring: {\r\n                enabled: false,\r\n                storageKey: null,\r\n                type: \"localStorage\",\r\n                customLoad: null,\r\n                customSave: null,\r\n                savingTimeout: 2e3\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        stateStoring: StateStoringController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                init: function() {\r\n                    var that = this;\r\n                    var dataController = that.getController(\"data\");\r\n                    that.callBase();\r\n                    dataController.stateLoaded.add((function() {\r\n                        if (dataController.isLoaded() && !dataController.getDataSource()) {\r\n                            that.setLoading(false);\r\n                            that.renderNoDataText();\r\n                            var columnHeadersView = that.component.getView(\"columnHeadersView\");\r\n                            columnHeadersView && columnHeadersView.render();\r\n                            that.component._fireContentReadyAction()\r\n                        }\r\n                    }))\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            stateStoring: {\r\n                init: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    processLoadState(this)\r\n                },\r\n                isLoading: function() {\r\n                    return this.callBase() || this.getController(\"data\").isStateLoading()\r\n                },\r\n                state: function(_state) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    if (void 0 !== _state) {\r\n                        this.applyState(extend({}, _state))\r\n                    }\r\n                    return result\r\n                },\r\n                updateState: function(state) {\r\n                    if (this.isEnabled()) {\r\n                        var oldState = this.state();\r\n                        var newState = extend({}, oldState, state);\r\n                        var oldStateHash = getKeyHash(oldState);\r\n                        var newStateHash = getKeyHash(newState);\r\n                        if (!equalByValue(oldStateHash, newStateHash)) {\r\n                            extend(this._state, state);\r\n                            this.save()\r\n                        }\r\n                    } else {\r\n                        extend(this._state, state)\r\n                    }\r\n                },\r\n                applyState: function(state) {\r\n                    var allowedPageSizes = state.allowedPageSizes;\r\n                    var searchText = state.searchText;\r\n                    var selectedRowKeys = state.selectedRowKeys;\r\n                    var selectionFilter = state.selectionFilter;\r\n                    var exportController = this.getController(\"export\");\r\n                    var columnsController = this.getController(\"columns\");\r\n                    var dataController = this.getController(\"data\");\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    var isVirtualScrollingMode = \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\r\n                    var showPageSizeSelector = true === this.option(\"pager.visible\") && this.option(\"pager.showPageSizeSelector\");\r\n                    this.component.beginUpdate();\r\n                    if (columnsController) {\r\n                        columnsController.setUserState(state.columns)\r\n                    }\r\n                    if (exportController) {\r\n                        exportController.selectionOnly(state.exportSelectionOnly)\r\n                    }\r\n                    if (!this.option(\"selection.deferred\")) {\r\n                        this.option(\"selectedRowKeys\", selectedRowKeys || [])\r\n                    }\r\n                    this.option(\"selectionFilter\", selectionFilter);\r\n                    if (allowedPageSizes && \"auto\" === this.option(\"pager.allowedPageSizes\")) {\r\n                        this.option(\"pager\").allowedPageSizes = allowedPageSizes\r\n                    }\r\n                    if (this.option(\"focusedRowEnabled\")) {\r\n                        this.option(\"focusedRowIndex\", -1);\r\n                        this.option(\"focusedRowKey\", state.focusedRowKey || null)\r\n                    }\r\n                    this.component.endUpdate();\r\n                    this.option(\"searchPanel.text\", searchText || \"\");\r\n                    this.option(\"filterValue\", getFilterValue(this, state));\r\n                    this.option(\"filterPanel.filterEnabled\", state.filterPanel ? state.filterPanel.filterEnabled : true);\r\n                    this.option(\"paging.pageIndex\", state.pageIndex || 0);\r\n                    this.option(\"paging.pageSize\", (!isVirtualScrollingMode || showPageSizeSelector) && isDefined(state.pageSize) ? state.pageSize : this._initialPageSize);\r\n                    dataController && dataController.reset()\r\n                }\r\n            },\r\n            columns: {\r\n                getVisibleColumns: function() {\r\n                    var visibleColumns = this.callBase.apply(this, arguments);\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    return stateStoringController.isEnabled() && !stateStoringController.isLoaded() ? [] : visibleColumns\r\n                }\r\n            },\r\n            data: {\r\n                callbackNames: function() {\r\n                    return this.callBase().concat([\"stateLoaded\"])\r\n                },\r\n                _refreshDataSource: function() {\r\n                    var callBase = this.callBase;\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    if (stateStoringController.isEnabled() && !stateStoringController.isLoaded()) {\r\n                        clearTimeout(this._restoreStateTimeoutID);\r\n                        var deferred = new Deferred;\r\n                        this._restoreStateTimeoutID = setTimeout(() => {\r\n                            stateStoringController.load().always(() => {\r\n                                this._restoreStateTimeoutID = null\r\n                            }).done(() => {\r\n                                callBase.call(this);\r\n                                this.stateLoaded.fire();\r\n                                deferred.resolve()\r\n                            }).fail(error => {\r\n                                this.stateLoaded.fire();\r\n                                this._handleLoadError(error || \"Unknown error\");\r\n                                deferred.reject()\r\n                            })\r\n                        });\r\n                        return deferred.promise()\r\n                    } else if (!this.isStateLoading()) {\r\n                        callBase.call(this)\r\n                    }\r\n                },\r\n                isLoading: function() {\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    return this.callBase() || stateStoringController.isLoading()\r\n                },\r\n                isStateLoading: function() {\r\n                    return isDefined(this._restoreStateTimeoutID)\r\n                },\r\n                isLoaded: function() {\r\n                    return this.callBase() && !this.isStateLoading()\r\n                },\r\n                dispose: function() {\r\n                    clearTimeout(this._restoreStateTimeoutID);\r\n                    this.callBase()\r\n                }\r\n            },\r\n            selection: {\r\n                _fireSelectionChanged: function(options) {\r\n                    var stateStoringController = this.getController(\"stateStoring\");\r\n                    var isDeferredSelection = this.option(\"selection.deferred\");\r\n                    if (stateStoringController.isLoading() && isDeferredSelection) {\r\n                        return\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.state_storing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    stateStoringModule\r\n} from \"../grid_core/ui.grid_core.state_storing\";\r\ngridCore.registerModule(\"stateStoring\", stateStoringModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.selection.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport gridCore from \"../data_grid/ui.data_grid.core\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    touch\r\n} from \"../../core/utils/support\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    addNamespace,\r\n    isCommandKeyPressed\r\n} from \"../../events/utils/index\";\r\nimport holdEvent from \"../../events/hold\";\r\nimport Selection from \"../selection/selection\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport errors from \"../widget/ui.errors\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar ROW_SELECTION_CLASS = \"dx-selection\";\r\nvar SELECT_CHECKBOX_CLASS = \"dx-select-checkbox\";\r\nvar CHECKBOXES_HIDDEN_CLASS = \"dx-select-checkboxes-hidden\";\r\nvar COMMAND_SELECT_CLASS = \"dx-command-select\";\r\nvar SELECTION_DISABLED_CLASS = \"dx-selection-disabled\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar SHOW_CHECKBOXES_MODE = \"selection.showCheckBoxesMode\";\r\nvar SELECTION_MODE = \"selection.mode\";\r\nvar processLongTap = function(that, dxEvent) {\r\n    var selectionController = that.getController(\"selection\");\r\n    var rowsView = that.getView(\"rowsView\");\r\n    var $row = $(dxEvent.target).closest(\".\" + DATA_ROW_CLASS);\r\n    var rowIndex = rowsView.getRowIndex($row);\r\n    if (rowIndex < 0) {\r\n        return\r\n    }\r\n    if (\"onLongTap\" === that.option(SHOW_CHECKBOXES_MODE)) {\r\n        if (selectionController.isSelectionWithCheckboxes()) {\r\n            selectionController.stopSelectionWithCheckboxes()\r\n        } else {\r\n            selectionController.startSelectionWithCheckboxes()\r\n        }\r\n    } else {\r\n        if (\"onClick\" === that.option(SHOW_CHECKBOXES_MODE)) {\r\n            selectionController.startSelectionWithCheckboxes()\r\n        }\r\n        if (\"always\" !== that.option(SHOW_CHECKBOXES_MODE)) {\r\n            selectionController.changeItemSelection(rowIndex, {\r\n                control: true\r\n            })\r\n        }\r\n    }\r\n};\r\nvar SelectionController = gridCore.Controller.inherit(function() {\r\n    var selectionCellTemplate = (container, options) => {\r\n        var component = options.component;\r\n        var rowsView = component.getView(\"rowsView\");\r\n        if (component.option(\"renderAsync\") && !component.option(\"selection.deferred\")) {\r\n            options.value = component.isRowSelected(options.row.key)\r\n        }\r\n        rowsView.renderSelectCheckBoxContainer($(container), options)\r\n    };\r\n    var selectionHeaderTemplate = (container, options) => {\r\n        var column = options.column;\r\n        var $cellElement = $(container);\r\n        var columnHeadersView = options.component.getView(\"columnHeadersView\");\r\n        $cellElement.addClass(EDITOR_CELL_CLASS);\r\n        columnHeadersView._renderSelectAllCheckBox($cellElement, column);\r\n        columnHeadersView._attachSelectAllCheckBoxClickEvent($cellElement)\r\n    };\r\n    return {\r\n        init: function() {\r\n            var {\r\n                deferred: deferred,\r\n                selectAllMode: selectAllMode,\r\n                mode: mode\r\n            } = this.option(\"selection\") || {};\r\n            if (\"infinite\" === this.option(\"scrolling.mode\") && !deferred && \"multiple\" === mode && \"allPages\" === selectAllMode) {\r\n                errors.log(\"W1018\")\r\n            }\r\n            this._dataController = this.getController(\"data\");\r\n            this._selectionMode = mode;\r\n            this._isSelectionWithCheckboxes = false;\r\n            this._selection = this._createSelection();\r\n            this._updateSelectColumn();\r\n            this.createAction(\"onSelectionChanged\", {\r\n                excludeValidators: [\"disabled\", \"readOnly\"]\r\n            });\r\n            this._dataController && this._dataController.pushed.add(this._handleDataPushed.bind(this))\r\n        },\r\n        _handleDataPushed: function(changes) {\r\n            var removedKeys = changes.filter(change => \"remove\" === change.type).map(change => change.key);\r\n            removedKeys.length && this.deselectRows(removedKeys)\r\n        },\r\n        _getSelectionConfig: function() {\r\n            var dataController = this._dataController;\r\n            var columnsController = this.getController(\"columns\");\r\n            var selectionOptions = this.option(\"selection\") || {};\r\n            var deferred = selectionOptions.deferred;\r\n            var scrollingMode = this.option(\"scrolling.mode\");\r\n            var virtualPaging = \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\r\n            var allowSelectAll = this.option(\"selection.allowSelectAll\");\r\n            var legacyScrollingMode = this.option(\"scrolling.legacyMode\");\r\n            return {\r\n                selectedKeys: this.option(\"selectedRowKeys\"),\r\n                mode: this._selectionMode,\r\n                deferred: deferred,\r\n                maxFilterLengthInRequest: selectionOptions.maxFilterLengthInRequest,\r\n                selectionFilter: this.option(\"selectionFilter\"),\r\n                ignoreDisabledItems: true,\r\n                allowLoadByRange: function() {\r\n                    var hasGroupColumns = columnsController.getGroupColumns().length > 0;\r\n                    return virtualPaging && !legacyScrollingMode && !hasGroupColumns && allowSelectAll && !deferred\r\n                },\r\n                key: function() {\r\n                    return null === dataController || void 0 === dataController ? void 0 : dataController.key()\r\n                },\r\n                keyOf: function(item) {\r\n                    return null === dataController || void 0 === dataController ? void 0 : dataController.keyOf(item)\r\n                },\r\n                dataFields: function() {\r\n                    var _dataController$dataS;\r\n                    return null === (_dataController$dataS = dataController.dataSource()) || void 0 === _dataController$dataS ? void 0 : _dataController$dataS.select()\r\n                },\r\n                load: function(options) {\r\n                    var _dataController$dataS2;\r\n                    return (null === (_dataController$dataS2 = dataController.dataSource()) || void 0 === _dataController$dataS2 ? void 0 : _dataController$dataS2.load(options)) || (new Deferred).resolve([])\r\n                },\r\n                plainItems: function() {\r\n                    return dataController.items(true)\r\n                },\r\n                isItemSelected: function(item) {\r\n                    return item.selected\r\n                },\r\n                isSelectableItem: function(item) {\r\n                    return \"data\" === (null === item || void 0 === item ? void 0 : item.rowType) && !item.isNewRow\r\n                },\r\n                getItemData: function(item) {\r\n                    return (null === item || void 0 === item ? void 0 : item.oldData) || (null === item || void 0 === item ? void 0 : item.data) || item\r\n                },\r\n                filter: function() {\r\n                    return dataController.getCombinedFilter(deferred)\r\n                },\r\n                totalCount: () => dataController.totalCount(),\r\n                getLoadOptions: function(loadItemIndex, focusedItemIndex, shiftItemIndex) {\r\n                    var _dataController$dataS3, _dataController$dataS4;\r\n                    var {\r\n                        sort: sort,\r\n                        filter: filter\r\n                    } = null !== (_dataController$dataS3 = null === (_dataController$dataS4 = dataController.dataSource()) || void 0 === _dataController$dataS4 ? void 0 : _dataController$dataS4.lastLoadOptions()) && void 0 !== _dataController$dataS3 ? _dataController$dataS3 : {};\r\n                    var minIndex = Math.min(loadItemIndex, focusedItemIndex);\r\n                    var maxIndex = Math.max(loadItemIndex, focusedItemIndex);\r\n                    if (isDefined(shiftItemIndex)) {\r\n                        minIndex = Math.min(shiftItemIndex, minIndex);\r\n                        maxIndex = Math.max(shiftItemIndex, maxIndex)\r\n                    }\r\n                    var take = maxIndex - minIndex + 1;\r\n                    return {\r\n                        skip: minIndex,\r\n                        take: take,\r\n                        filter: filter,\r\n                        sort: sort\r\n                    }\r\n                },\r\n                onSelectionChanged: this._updateSelectedItems.bind(this)\r\n            }\r\n        },\r\n        _updateSelectColumn: function() {\r\n            var columnsController = this.getController(\"columns\");\r\n            var isSelectColumnVisible = this.isSelectColumnVisible();\r\n            columnsController.addCommandColumn({\r\n                type: \"selection\",\r\n                command: \"select\",\r\n                visible: isSelectColumnVisible,\r\n                visibleIndex: -1,\r\n                dataType: \"boolean\",\r\n                alignment: \"center\",\r\n                cssClass: COMMAND_SELECT_CLASS,\r\n                width: \"auto\",\r\n                cellTemplate: selectionCellTemplate,\r\n                headerCellTemplate: selectionHeaderTemplate\r\n            });\r\n            columnsController.columnOption(\"command:select\", \"visible\", isSelectColumnVisible)\r\n        },\r\n        _createSelection: function() {\r\n            var options = this._getSelectionConfig();\r\n            return new Selection(options)\r\n        },\r\n        _fireSelectionChanged: function(options) {\r\n            var argument = this.option(\"selection.deferred\") ? {\r\n                selectionFilter: this.option(\"selectionFilter\")\r\n            } : {\r\n                selectedRowKeys: this.option(\"selectedRowKeys\")\r\n            };\r\n            this.selectionChanged.fire(argument);\r\n            if (options) {\r\n                this.executeAction(\"onSelectionChanged\", options)\r\n            }\r\n        },\r\n        _updateCheckboxesState: function(options) {\r\n            var isDeferredMode = options.isDeferredMode;\r\n            var selectionFilter = options.selectionFilter;\r\n            var selectedItemKeys = options.selectedItemKeys;\r\n            var removedItemKeys = options.removedItemKeys;\r\n            if (\"onClick\" === this.option(SHOW_CHECKBOXES_MODE)) {\r\n                if (isDeferredMode ? selectionFilter && function(that, selectionFilter) {\r\n                        var keyIndex = 0;\r\n                        var store = that._dataController.store();\r\n                        var key = store && store.key();\r\n                        var isComplexKey = Array.isArray(key);\r\n                        if (!selectionFilter.length) {\r\n                            return false\r\n                        }\r\n                        if (isComplexKey && Array.isArray(selectionFilter[0]) && \"and\" === selectionFilter[1]) {\r\n                            for (var i = 0; i < selectionFilter.length; i++) {\r\n                                if (Array.isArray(selectionFilter[i])) {\r\n                                    if (selectionFilter[i][0] !== key[keyIndex] || \"=\" !== selectionFilter[i][1]) {\r\n                                        return true\r\n                                    }\r\n                                    keyIndex++\r\n                                }\r\n                            }\r\n                            return false\r\n                        }\r\n                        return key !== selectionFilter[0]\r\n                    }(this, selectionFilter) : selectedItemKeys.length > 1) {\r\n                    this.startSelectionWithCheckboxes()\r\n                } else if (isDeferredMode ? selectionFilter && !selectionFilter.length : 0 === selectedItemKeys.length && removedItemKeys.length) {\r\n                    this.stopSelectionWithCheckboxes()\r\n                }\r\n            }\r\n        },\r\n        _updateSelectedItems: function(args) {\r\n            var selectionChangedOptions;\r\n            var isDeferredMode = this.option(\"selection.deferred\");\r\n            var selectionFilter = this._selection.selectionFilter();\r\n            var dataController = this._dataController;\r\n            var items = dataController.items();\r\n            if (!items) {\r\n                return\r\n            }\r\n            var isSelectionWithCheckboxes = this.isSelectionWithCheckboxes();\r\n            var changedItemIndexes = this.getChangedItemIndexes(items);\r\n            this._updateCheckboxesState({\r\n                selectedItemKeys: args.selectedItemKeys,\r\n                removedItemKeys: args.removedItemKeys,\r\n                selectionFilter: selectionFilter,\r\n                isDeferredMode: isDeferredMode\r\n            });\r\n            if (changedItemIndexes.length || isSelectionWithCheckboxes !== this.isSelectionWithCheckboxes()) {\r\n                dataController.updateItems({\r\n                    changeType: \"updateSelection\",\r\n                    itemIndexes: changedItemIndexes\r\n                })\r\n            }\r\n            if (isDeferredMode) {\r\n                this.option(\"selectionFilter\", selectionFilter);\r\n                selectionChangedOptions = {}\r\n            } else if (args.addedItemKeys.length || args.removedItemKeys.length) {\r\n                this._selectedItemsInternalChange = true;\r\n                this.option(\"selectedRowKeys\", args.selectedItemKeys.slice(0));\r\n                this._selectedItemsInternalChange = false;\r\n                selectionChangedOptions = {\r\n                    selectedRowsData: args.selectedItems.slice(0),\r\n                    selectedRowKeys: args.selectedItemKeys.slice(0),\r\n                    currentSelectedRowKeys: args.addedItemKeys.slice(0),\r\n                    currentDeselectedRowKeys: args.removedItemKeys.slice(0)\r\n                }\r\n            }\r\n            this._fireSelectionChanged(selectionChangedOptions)\r\n        },\r\n        getChangedItemIndexes: function(items) {\r\n            var itemIndexes = [];\r\n            var isDeferredSelection = this.option(\"selection.deferred\");\r\n            for (var i = 0, length = items.length; i < length; i++) {\r\n                var row = items[i];\r\n                var isItemSelected = this.isRowSelected(isDeferredSelection ? row.data : row.key);\r\n                if (this._selection.isDataItem(row) && row.isSelected !== isItemSelected) {\r\n                    itemIndexes.push(i)\r\n                }\r\n            }\r\n            return itemIndexes\r\n        },\r\n        callbackNames: function() {\r\n            return [\"selectionChanged\"]\r\n        },\r\n        optionChanged: function(args) {\r\n            this.callBase(args);\r\n            switch (args.name) {\r\n                case \"selection\":\r\n                    var oldSelectionMode = this._selectionMode;\r\n                    this.init();\r\n                    if (\"selection.showCheckBoxesMode\" !== args.fullName) {\r\n                        var selectionMode = this._selectionMode;\r\n                        var selectedRowKeys = this.option(\"selectedRowKeys\");\r\n                        if (oldSelectionMode !== selectionMode) {\r\n                            if (\"single\" === selectionMode) {\r\n                                if (selectedRowKeys.length > 1) {\r\n                                    selectedRowKeys = [selectedRowKeys[0]]\r\n                                }\r\n                            } else if (\"multiple\" !== selectionMode) {\r\n                                selectedRowKeys = []\r\n                            }\r\n                        }\r\n                        this.selectRows(selectedRowKeys).always(() => {\r\n                            this._fireSelectionChanged()\r\n                        })\r\n                    }\r\n                    this.getController(\"columns\").updateColumns();\r\n                    args.handled = true;\r\n                    break;\r\n                case \"selectionFilter\":\r\n                    this._selection.selectionFilter(args.value);\r\n                    args.handled = true;\r\n                    break;\r\n                case \"selectedRowKeys\":\r\n                    var value = args.value || [];\r\n                    if (Array.isArray(value) && !this._selectedItemsInternalChange && (this.component.getDataSource() || !value.length)) {\r\n                        this.selectRows(value)\r\n                    }\r\n                    args.handled = true\r\n            }\r\n        },\r\n        publicMethods: function() {\r\n            return [\"selectRows\", \"deselectRows\", \"selectRowsByIndexes\", \"getSelectedRowKeys\", \"getSelectedRowsData\", \"clearSelection\", \"selectAll\", \"deselectAll\", \"startSelectionWithCheckboxes\", \"stopSelectionWithCheckboxes\", \"isRowSelected\"]\r\n        },\r\n        isRowSelected: function(arg) {\r\n            return this._selection.isItemSelected(arg)\r\n        },\r\n        isSelectColumnVisible: function() {\r\n            return \"multiple\" === this.option(SELECTION_MODE) && (\"always\" === this.option(SHOW_CHECKBOXES_MODE) || \"onClick\" === this.option(SHOW_CHECKBOXES_MODE) || this._isSelectionWithCheckboxes)\r\n        },\r\n        _isOnePageSelectAll: function() {\r\n            return \"page\" === this.option(\"selection.selectAllMode\")\r\n        },\r\n        isSelectAll: function() {\r\n            return this._selection.getSelectAllState(this._isOnePageSelectAll())\r\n        },\r\n        selectAll: function() {\r\n            if (\"onClick\" === this.option(SHOW_CHECKBOXES_MODE)) {\r\n                this.startSelectionWithCheckboxes()\r\n            }\r\n            return this._selection.selectAll(this._isOnePageSelectAll())\r\n        },\r\n        deselectAll: function() {\r\n            return this._selection.deselectAll(this._isOnePageSelectAll())\r\n        },\r\n        clearSelection: function() {\r\n            return this.selectedItemKeys([])\r\n        },\r\n        refresh: function() {\r\n            var selectedRowKeys = this.option(\"selectedRowKeys\") || [];\r\n            if (!this.option(\"selection.deferred\") && selectedRowKeys.length) {\r\n                return this.selectedItemKeys(selectedRowKeys)\r\n            }\r\n            return (new Deferred).resolve().promise()\r\n        },\r\n        selectedItemKeys: function(value, preserve, isDeselect, isSelectAll) {\r\n            return this._selection.selectedItemKeys(value, preserve, isDeselect, isSelectAll)\r\n        },\r\n        getSelectedRowKeys: function() {\r\n            return this._selection.getSelectedItemKeys()\r\n        },\r\n        selectRows: function(keys, preserve) {\r\n            return this.selectedItemKeys(keys, preserve)\r\n        },\r\n        deselectRows: function(keys) {\r\n            return this.selectedItemKeys(keys, true, true)\r\n        },\r\n        selectRowsByIndexes: function(indexes) {\r\n            var items = this._dataController.items();\r\n            var keys = [];\r\n            if (!Array.isArray(indexes)) {\r\n                indexes = Array.prototype.slice.call(arguments, 0)\r\n            }\r\n            each(indexes, (function() {\r\n                var item = items[this];\r\n                if (item && \"data\" === item.rowType) {\r\n                    keys.push(item.key)\r\n                }\r\n            }));\r\n            return this.selectRows(keys)\r\n        },\r\n        getSelectedRowsData: function() {\r\n            return this._selection.getSelectedItems()\r\n        },\r\n        changeItemSelection: function(visibleItemIndex, keys) {\r\n            keys = keys || {};\r\n            if (this.isSelectionWithCheckboxes()) {\r\n                keys.control = true\r\n            }\r\n            var loadedItemIndex = visibleItemIndex + this._dataController.getRowIndexOffset() - this._dataController.getRowIndexOffset(true);\r\n            return this._selection.changeItemSelection(loadedItemIndex, keys)\r\n        },\r\n        focusedItemIndex: function(itemIndex) {\r\n            if (isDefined(itemIndex)) {\r\n                this._selection._focusedItemIndex = itemIndex\r\n            } else {\r\n                return this._selection._focusedItemIndex\r\n            }\r\n        },\r\n        isSelectionWithCheckboxes: function() {\r\n            return \"multiple\" === this.option(SELECTION_MODE) && (\"always\" === this.option(SHOW_CHECKBOXES_MODE) || this._isSelectionWithCheckboxes)\r\n        },\r\n        startSelectionWithCheckboxes: function() {\r\n            if (\"multiple\" === this.option(SELECTION_MODE) && !this.isSelectionWithCheckboxes()) {\r\n                this._isSelectionWithCheckboxes = true;\r\n                this._updateSelectColumn();\r\n                return true\r\n            }\r\n            return false\r\n        },\r\n        stopSelectionWithCheckboxes: function() {\r\n            if (this._isSelectionWithCheckboxes) {\r\n                this._isSelectionWithCheckboxes = false;\r\n                this._updateSelectColumn();\r\n                return true\r\n            }\r\n            return false\r\n        }\r\n    }\r\n}());\r\nexport var selectionModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            selection: {\r\n                mode: \"none\",\r\n                showCheckBoxesMode: \"onClick\",\r\n                allowSelectAll: true,\r\n                selectAllMode: \"allPages\",\r\n                maxFilterLengthInRequest: 1500,\r\n                deferred: false\r\n            },\r\n            selectionFilter: [],\r\n            selectedRowKeys: []\r\n        }\r\n    },\r\n    controllers: {\r\n        selection: SelectionController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                init: function() {\r\n                    var selectionController = this.getController(\"selection\");\r\n                    var isDeferredMode = this.option(\"selection.deferred\");\r\n                    this.callBase.apply(this, arguments);\r\n                    if (isDeferredMode) {\r\n                        selectionController._updateCheckboxesState({\r\n                            isDeferredMode: true,\r\n                            selectionFilter: this.option(\"selectionFilter\")\r\n                        })\r\n                    }\r\n                },\r\n                _loadDataSource: function() {\r\n                    var that = this;\r\n                    return that.callBase().done((function() {\r\n                        that.getController(\"selection\").refresh()\r\n                    }))\r\n                },\r\n                _processDataItem: function(item, options) {\r\n                    var that = this;\r\n                    var selectionController = that.getController(\"selection\");\r\n                    var hasSelectColumn = selectionController.isSelectColumnVisible();\r\n                    var isDeferredSelection = options.isDeferredSelection = void 0 === options.isDeferredSelection ? this.option(\"selection.deferred\") : options.isDeferredSelection;\r\n                    var dataItem = this.callBase.apply(this, arguments);\r\n                    dataItem.isSelected = selectionController.isRowSelected(isDeferredSelection ? dataItem.data : dataItem.key);\r\n                    if (hasSelectColumn && dataItem.values) {\r\n                        for (var i = 0; i < options.visibleColumns.length; i++) {\r\n                            if (\"select\" === options.visibleColumns[i].command) {\r\n                                dataItem.values[i] = dataItem.isSelected;\r\n                                break\r\n                            }\r\n                        }\r\n                    }\r\n                    return dataItem\r\n                },\r\n                refresh: function(options) {\r\n                    var that = this;\r\n                    var d = new Deferred;\r\n                    this.callBase.apply(this, arguments).done((function() {\r\n                        if (!options || options.selection) {\r\n                            that.getController(\"selection\").refresh().done(d.resolve).fail(d.reject)\r\n                        } else {\r\n                            d.resolve()\r\n                        }\r\n                    })).fail(d.reject);\r\n                    return d.promise()\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if ((!e || \"refresh\" === e.changeType) && !this._repaintChangesOnly) {\r\n                        this.getController(\"selection\").focusedItemIndex(-1)\r\n                    }\r\n                },\r\n                _applyChange: function(change) {\r\n                    if (change && \"updateSelection\" === change.changeType) {\r\n                        change.items.forEach((item, index) => {\r\n                            var currentItem = this._items[index];\r\n                            if (currentItem) {\r\n                                currentItem.isSelected = item.isSelected;\r\n                                currentItem.values = item.values\r\n                            }\r\n                        });\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _endUpdateCore: function() {\r\n                    var changes = this._changes;\r\n                    var isUpdateSelection = changes.length > 1 && changes.every(change => \"updateSelection\" === change.changeType);\r\n                    if (isUpdateSelection) {\r\n                        var itemIndexes = changes.map(change => change.itemIndexes || []).reduce((a, b) => a.concat(b));\r\n                        this._changes = [{\r\n                            changeType: \"updateSelection\",\r\n                            itemIndexes: itemIndexes\r\n                        }]\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                }\r\n            },\r\n            contextMenu: {\r\n                _contextMenuPrepared: function(options) {\r\n                    var dxEvent = options.event;\r\n                    if (dxEvent.originalEvent && \"dxhold\" !== dxEvent.originalEvent.type || options.items && options.items.length > 0) {\r\n                        return\r\n                    }\r\n                    processLongTap(this, dxEvent)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            columnHeadersView: {\r\n                init: function() {\r\n                    this.callBase();\r\n                    this.getController(\"selection\").selectionChanged.add(this._updateSelectAllValue.bind(this))\r\n                },\r\n                _updateSelectAllValue: function() {\r\n                    var $element = this.element();\r\n                    var $editor = $element && $element.find(\".\" + SELECT_CHECKBOX_CLASS);\r\n                    if ($element && $editor.length && \"multiple\" === this.option(\"selection.mode\")) {\r\n                        var selectAllValue = this.getController(\"selection\").isSelectAll();\r\n                        var hasSelection = false !== selectAllValue;\r\n                        var isVisible = this.option(\"selection.allowSelectAll\") ? !this.getController(\"data\").isEmpty() : hasSelection;\r\n                        $editor.dxCheckBox(\"instance\").option({\r\n                            visible: isVisible,\r\n                            value: selectAllValue\r\n                        })\r\n                    }\r\n                },\r\n                _handleDataChanged: function(e) {\r\n                    this.callBase(e);\r\n                    if (!e || \"refresh\" === e.changeType) {\r\n                        this._updateSelectAllValue()\r\n                    }\r\n                },\r\n                _renderSelectAllCheckBox: function($container, column) {\r\n                    var that = this;\r\n                    var selectionController = that.getController(\"selection\");\r\n                    var isEmptyData = that.getController(\"data\").isEmpty();\r\n                    var groupElement = $(\"<div>\").appendTo($container).addClass(SELECT_CHECKBOX_CLASS);\r\n                    that.setAria(\"label\", messageLocalization.format(\"dxDataGrid-ariaSelectAll\"), $container);\r\n                    that.getController(\"editorFactory\").createEditor(groupElement, extend({}, column, {\r\n                        parentType: \"headerRow\",\r\n                        dataType: \"boolean\",\r\n                        value: selectionController.isSelectAll(),\r\n                        editorOptions: {\r\n                            visible: !isEmptyData && (that.option(\"selection.allowSelectAll\") || false !== selectionController.isSelectAll())\r\n                        },\r\n                        tabIndex: that.option(\"useLegacyKeyboardNavigation\") ? -1 : that.option(\"tabIndex\") || 0,\r\n                        setValue: function(value, e) {\r\n                            var allowSelectAll = that.option(\"selection.allowSelectAll\");\r\n                            e.component.option(\"visible\", allowSelectAll || false !== e.component.option(\"value\"));\r\n                            if (!e.event || selectionController.isSelectAll() === value) {\r\n                                return\r\n                            }\r\n                            if (e.value && !allowSelectAll) {\r\n                                e.component.option(\"value\", false)\r\n                            } else {\r\n                                e.value ? selectionController.selectAll() : selectionController.deselectAll()\r\n                            }\r\n                            e.event.preventDefault()\r\n                        }\r\n                    }));\r\n                    return groupElement\r\n                },\r\n                _attachSelectAllCheckBoxClickEvent: function($element) {\r\n                    eventsEngine.on($element, clickEventName, this.createAction((function(e) {\r\n                        var event = e.event;\r\n                        if (!$(event.target).closest(\".\" + SELECT_CHECKBOX_CLASS).length) {\r\n                            eventsEngine.trigger($(event.currentTarget).children(\".\" + SELECT_CHECKBOX_CLASS), clickEventName)\r\n                        }\r\n                        event.preventDefault()\r\n                    })))\r\n                }\r\n            },\r\n            rowsView: {\r\n                renderSelectCheckBoxContainer: function($container, options) {\r\n                    if (\"data\" === options.rowType && !options.row.isNewRow) {\r\n                        $container.addClass(EDITOR_CELL_CLASS);\r\n                        this._attachCheckBoxClickEvent($container);\r\n                        this.setAria(\"label\", messageLocalization.format(\"dxDataGrid-ariaSelectRow\"), $container);\r\n                        this._renderSelectCheckBox($container, options)\r\n                    } else {\r\n                        gridCoreUtils.setEmptyText($container)\r\n                    }\r\n                },\r\n                _renderSelectCheckBox: function(container, options) {\r\n                    var groupElement = $(\"<div>\").addClass(SELECT_CHECKBOX_CLASS).appendTo(container);\r\n                    this.getController(\"editorFactory\").createEditor(groupElement, extend({}, options.column, {\r\n                        parentType: \"dataRow\",\r\n                        dataType: \"boolean\",\r\n                        lookup: null,\r\n                        value: options.value,\r\n                        setValue: function(value, e) {\r\n                            var _e$event;\r\n                            if (\"keydown\" === (null === e || void 0 === e ? void 0 : null === (_e$event = e.event) || void 0 === _e$event ? void 0 : _e$event.type)) {\r\n                                eventsEngine.trigger(e.element, clickEventName, e)\r\n                            }\r\n                        },\r\n                        row: options.row\r\n                    }));\r\n                    return groupElement\r\n                },\r\n                _attachCheckBoxClickEvent: function($element) {\r\n                    eventsEngine.on($element, clickEventName, this.createAction((function(e) {\r\n                        var selectionController = this.getController(\"selection\");\r\n                        var event = e.event;\r\n                        var rowIndex = this.getRowIndex($(event.currentTarget).closest(\".\" + ROW_CLASS));\r\n                        if (rowIndex >= 0) {\r\n                            selectionController.startSelectionWithCheckboxes();\r\n                            selectionController.changeItemSelection(rowIndex, {\r\n                                shift: event.shiftKey\r\n                            });\r\n                            if ($(event.target).closest(\".\" + SELECT_CHECKBOX_CLASS).length) {\r\n                                this.getController(\"data\").updateItems({\r\n                                    changeType: \"updateSelection\",\r\n                                    itemIndexes: [rowIndex]\r\n                                })\r\n                            }\r\n                        }\r\n                    })))\r\n                },\r\n                _update: function(change) {\r\n                    var that = this;\r\n                    var tableElements = that.getTableElements();\r\n                    if (\"updateSelection\" === change.changeType) {\r\n                        if (tableElements.length > 0) {\r\n                            each(tableElements, (function(_, tableElement) {\r\n                                each(change.itemIndexes || [], (function(_, index) {\r\n                                    var $row;\r\n                                    if (change.items[index]) {\r\n                                        $row = that._getRowElements($(tableElement)).eq(index);\r\n                                        if ($row.length) {\r\n                                            var isSelected = change.items[index].isSelected;\r\n                                            $row.toggleClass(ROW_SELECTION_CLASS, void 0 === isSelected ? false : isSelected).find(\".\" + SELECT_CHECKBOX_CLASS).dxCheckBox(\"option\", \"value\", isSelected);\r\n                                            that.setAria(\"selected\", isSelected, $row)\r\n                                        }\r\n                                    }\r\n                                }))\r\n                            }));\r\n                            that._updateCheckboxesClass()\r\n                        }\r\n                    } else {\r\n                        that.callBase(change)\r\n                    }\r\n                },\r\n                _createTable: function() {\r\n                    var that = this;\r\n                    var selectionMode = that.option(\"selection.mode\");\r\n                    var $table = that.callBase.apply(that, arguments);\r\n                    if (\"none\" !== selectionMode) {\r\n                        if (\"onLongTap\" === that.option(SHOW_CHECKBOXES_MODE) || !touch) {\r\n                            eventsEngine.on($table, addNamespace(holdEvent.name, \"dxDataGridRowsView\"), \".\" + DATA_ROW_CLASS, that.createAction((function(e) {\r\n                                processLongTap(that.component, e.event);\r\n                                e.event.stopPropagation()\r\n                            })))\r\n                        }\r\n                        eventsEngine.on($table, \"mousedown selectstart\", that.createAction((function(e) {\r\n                            var event = e.event;\r\n                            if (event.shiftKey) {\r\n                                event.preventDefault()\r\n                            }\r\n                        })))\r\n                    }\r\n                    return $table\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var isSelected = !!row.isSelected;\r\n                        if (isSelected) {\r\n                            $row.addClass(ROW_SELECTION_CLASS)\r\n                        }\r\n                        this.setAria(\"selected\", isSelected, $row)\r\n                    }\r\n                    return $row\r\n                },\r\n                _rowClick: function(e) {\r\n                    var dxEvent = e.event;\r\n                    var isSelectionDisabled = $(dxEvent.target).closest(\".\" + SELECTION_DISABLED_CLASS).length;\r\n                    if (!this.isClickableElement($(dxEvent.target))) {\r\n                        if (!isSelectionDisabled && (\"multiple\" !== this.option(SELECTION_MODE) || \"always\" !== this.option(SHOW_CHECKBOXES_MODE))) {\r\n                            if (this.getController(\"selection\").changeItemSelection(e.rowIndex, {\r\n                                    control: isCommandKeyPressed(dxEvent),\r\n                                    shift: dxEvent.shiftKey\r\n                                })) {\r\n                                dxEvent.preventDefault();\r\n                                e.handled = true\r\n                            }\r\n                        }\r\n                        this.callBase(e)\r\n                    }\r\n                },\r\n                isClickableElement: function($target) {\r\n                    var isCommandSelect = $target.closest(\".\" + COMMAND_SELECT_CLASS).length;\r\n                    return !!isCommandSelect\r\n                },\r\n                _renderCore: function(change) {\r\n                    this.callBase(change);\r\n                    this._updateCheckboxesClass()\r\n                },\r\n                _updateCheckboxesClass: function() {\r\n                    var tableElements = this.getTableElements();\r\n                    var selectionController = this.getController(\"selection\");\r\n                    var isCheckBoxesHidden = selectionController.isSelectColumnVisible() && !selectionController.isSelectionWithCheckboxes();\r\n                    each(tableElements, (function(_, tableElement) {\r\n                        $(tableElement).toggleClass(CHECKBOXES_HIDDEN_CLASS, isCheckBoxesHidden)\r\n                    }))\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.selection.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    selectionModule\r\n} from \"../grid_core/ui.grid_core.selection\";\r\ngridCore.registerModule(\"selection\", selectionModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_chooser.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    deferUpdate,\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    ColumnsView\r\n} from \"./ui.grid_core.columns_view\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    isMaterial as isMaterialTheme,\r\n    isGeneric,\r\n    current\r\n} from \"../themes\";\r\nimport Button from \"../button\";\r\nimport TreeView from \"../tree_view\";\r\nimport devices from \"../../core/devices\";\r\nimport Popup from \"../popup\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nvar COLUMN_CHOOSER_CLASS = \"column-chooser\";\r\nvar COLUMN_CHOOSER_BUTTON_CLASS = \"column-chooser-button\";\r\nvar NOTOUCH_ACTION_CLASS = \"notouch-action\";\r\nvar COLUMN_CHOOSER_LIST_CLASS = \"column-chooser-list\";\r\nvar COLUMN_CHOOSER_PLAIN_CLASS = \"column-chooser-plain\";\r\nvar COLUMN_CHOOSER_DRAG_CLASS = \"column-chooser-mode-drag\";\r\nvar COLUMN_CHOOSER_SELECT_CLASS = \"column-chooser-mode-select\";\r\nvar COLUMN_CHOOSER_ICON_NAME = \"column-chooser\";\r\nvar COLUMN_CHOOSER_ITEM_CLASS = \"dx-column-chooser-item\";\r\nvar TREEVIEW_NODE_SELECTOR = \".dx-treeview-node\";\r\nvar CHECKBOX_SELECTOR = \".dx-checkbox\";\r\nvar CLICK_TIMEOUT = 300;\r\nvar processItems = function(that, chooserColumns) {\r\n    var items = [];\r\n    var isSelectMode = \"select\" === that.option(\"columnChooser.mode\");\r\n    if (chooserColumns.length) {\r\n        each(chooserColumns, (function(index, column) {\r\n            var item = {\r\n                text: column.caption,\r\n                cssClass: column.cssClass,\r\n                allowHiding: column.allowHiding,\r\n                expanded: true,\r\n                id: column.index,\r\n                disabled: false,\r\n                disableCheckBox: false === column.allowHiding,\r\n                parentId: isDefined(column.ownerBand) ? column.ownerBand : null\r\n            };\r\n            if (isSelectMode) {\r\n                item.selected = column.visible\r\n            }\r\n            items.push(item)\r\n        }))\r\n    }\r\n    return items\r\n};\r\nvar ColumnChooserController = modules.ViewController.inherit({\r\n    renderShowColumnChooserButton: function($element) {\r\n        var that = this;\r\n        var columnChooserButtonClass = that.addWidgetPrefix(COLUMN_CHOOSER_BUTTON_CLASS);\r\n        var columnChooserEnabled = that.option(\"columnChooser.enabled\");\r\n        var $showColumnChooserButton = $element.find(\".\" + columnChooserButtonClass);\r\n        var $columnChooserButton;\r\n        if (columnChooserEnabled) {\r\n            if (!$showColumnChooserButton.length) {\r\n                $columnChooserButton = $(\"<div>\").addClass(columnChooserButtonClass).appendTo($element);\r\n                that._createComponent($columnChooserButton, Button, {\r\n                    icon: COLUMN_CHOOSER_ICON_NAME,\r\n                    onClick: function() {\r\n                        that.getView(\"columnChooserView\").showColumnChooser()\r\n                    },\r\n                    hint: that.option(\"columnChooser.title\"),\r\n                    integrationOptions: {}\r\n                })\r\n            } else {\r\n                $showColumnChooserButton.show()\r\n            }\r\n        } else {\r\n            $showColumnChooserButton.hide()\r\n        }\r\n    },\r\n    getPosition: function() {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        return {\r\n            my: \"right bottom\",\r\n            at: \"right bottom\",\r\n            of: rowsView && rowsView.element(),\r\n            collision: \"fit\",\r\n            offset: \"-2 -2\",\r\n            boundaryOffset: \"2 2\"\r\n        }\r\n    }\r\n});\r\nvar ColumnChooserView = ColumnsView.inherit({\r\n    _resizeCore: noop,\r\n    _isWinDevice: function() {\r\n        return !!devices.real().win\r\n    },\r\n    _updateList: function(change) {\r\n        var items;\r\n        var $popupContent = this._popupContainer.$content();\r\n        var isSelectMode = \"select\" === this.option(\"columnChooser.mode\");\r\n        var columnChooserList = this._columnChooserList;\r\n        var chooserColumns = this._columnsController.getChooserColumns(isSelectMode);\r\n        if (isSelectMode && columnChooserList && change && \"selection\" === change.changeType) {\r\n            items = processItems(this, chooserColumns);\r\n            for (var i = 0; i < items.length; i++) {\r\n                var selected = items[i].selected;\r\n                var id = items[i].id;\r\n                if (id === change.columnIndex) {\r\n                    if (selected) {\r\n                        columnChooserList.selectItem(id, selected)\r\n                    } else {\r\n                        columnChooserList.unselectItem(id, selected)\r\n                    }\r\n                }\r\n            }\r\n        } else if (!isSelectMode || !columnChooserList || \"full\" === change) {\r\n            this._popupContainer.$wrapper().toggleClass(this.addWidgetPrefix(COLUMN_CHOOSER_DRAG_CLASS), !isSelectMode).toggleClass(this.addWidgetPrefix(COLUMN_CHOOSER_SELECT_CLASS), isSelectMode);\r\n            items = processItems(this, chooserColumns);\r\n            this._renderTreeView($popupContent, items)\r\n        }\r\n    },\r\n    _initializePopupContainer: function() {\r\n        var that = this;\r\n        var $element = that.element().addClass(that.addWidgetPrefix(COLUMN_CHOOSER_CLASS));\r\n        var columnChooserOptions = that.option(\"columnChooser\");\r\n        var themeName = current();\r\n        var isGenericTheme = isGeneric(themeName);\r\n        var isMaterial = isMaterialTheme(themeName);\r\n        var dxPopupOptions = {\r\n            visible: false,\r\n            shading: false,\r\n            showCloseButton: false,\r\n            dragEnabled: true,\r\n            resizeEnabled: true,\r\n            copyRootClassesToWrapper: true,\r\n            _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n            toolbarItems: [{\r\n                text: columnChooserOptions.title,\r\n                toolbar: \"top\",\r\n                location: isGenericTheme || isMaterial ? \"before\" : \"center\"\r\n            }],\r\n            position: that.getController(\"columnChooser\").getPosition(),\r\n            width: columnChooserOptions.width,\r\n            height: columnChooserOptions.height,\r\n            rtlEnabled: that.option(\"rtlEnabled\"),\r\n            onHidden: function() {\r\n                if (that._isWinDevice()) {\r\n                    $(\"body\").removeClass(that.addWidgetPrefix(NOTOUCH_ACTION_CLASS))\r\n                }\r\n            },\r\n            container: columnChooserOptions.container\r\n        };\r\n        if (isGenericTheme || isMaterial) {\r\n            extend(dxPopupOptions, {\r\n                showCloseButton: true\r\n            })\r\n        } else {\r\n            dxPopupOptions.toolbarItems[dxPopupOptions.toolbarItems.length] = {\r\n                shortcut: \"cancel\"\r\n            }\r\n        }\r\n        if (!isDefined(this._popupContainer)) {\r\n            that._popupContainer = that._createComponent($element, Popup, dxPopupOptions);\r\n            that._popupContainer.on(\"optionChanged\", (function(args) {\r\n                if (\"visible\" === args.name) {\r\n                    that.renderCompleted.fire()\r\n                }\r\n            }))\r\n        } else {\r\n            this._popupContainer.option(dxPopupOptions)\r\n        }\r\n    },\r\n    _renderCore: function(change) {\r\n        if (this._popupContainer) {\r\n            this._updateList(change)\r\n        }\r\n    },\r\n    _renderTreeView: function($container, items) {\r\n        var that = this;\r\n        var columnChooser = this.option(\"columnChooser\");\r\n        var isSelectMode = \"select\" === columnChooser.mode;\r\n        var treeViewConfig = {\r\n            items: items,\r\n            dataStructure: \"plain\",\r\n            activeStateEnabled: true,\r\n            focusStateEnabled: true,\r\n            hoverStateEnabled: true,\r\n            itemTemplate: \"item\",\r\n            showCheckBoxesMode: \"none\",\r\n            rootValue: null,\r\n            searchEnabled: columnChooser.allowSearch,\r\n            searchTimeout: columnChooser.searchTimeout,\r\n            onItemRendered: function(e) {\r\n                if (e.itemData.disableCheckBox) {\r\n                    var $treeViewNode = $(e.itemElement).closest(TREEVIEW_NODE_SELECTOR);\r\n                    var $checkBox;\r\n                    if ($treeViewNode.length) {\r\n                        $checkBox = $treeViewNode.find(CHECKBOX_SELECTOR);\r\n                        if ($checkBox.length) {\r\n                            var checkBoxInstance = $checkBox.data(\"dxCheckBox\");\r\n                            checkBoxInstance && checkBoxInstance.option(\"disabled\", true)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        var scrollableInstance = $container.find(\".dx-scrollable\").data(\"dxScrollable\");\r\n        var scrollTop = scrollableInstance && scrollableInstance.scrollTop();\r\n        if (isSelectMode && !this._columnsController.isBandColumnsUsed()) {\r\n            $container.addClass(this.addWidgetPrefix(COLUMN_CHOOSER_PLAIN_CLASS))\r\n        }\r\n        treeViewConfig.onContentReady = function(e) {\r\n            deferUpdate((function() {\r\n                if (scrollTop) {\r\n                    var scrollable = $(e.element).find(\".dx-scrollable\").data(\"dxScrollable\");\r\n                    scrollable && scrollable.scrollTo({\r\n                        y: scrollTop\r\n                    })\r\n                }\r\n                that.renderCompleted.fire()\r\n            }))\r\n        };\r\n        if (this._isWinDevice()) {\r\n            treeViewConfig.useNativeScrolling = false\r\n        }\r\n        extend(treeViewConfig, isSelectMode ? this._prepareSelectModeConfig() : this._prepareDragModeConfig());\r\n        if (this._columnChooserList) {\r\n            if (!treeViewConfig.searchEnabled) {\r\n                treeViewConfig.searchValue = \"\"\r\n            }\r\n            this._columnChooserList.option(treeViewConfig)\r\n        } else {\r\n            this._columnChooserList = this._createComponent($container, TreeView, treeViewConfig);\r\n            $container.addClass(this.addWidgetPrefix(COLUMN_CHOOSER_LIST_CLASS))\r\n        }\r\n    },\r\n    _prepareDragModeConfig: function() {\r\n        var columnChooserOptions = this.option(\"columnChooser\");\r\n        return {\r\n            noDataText: columnChooserOptions.emptyPanelText,\r\n            activeStateEnabled: false,\r\n            focusStateEnabled: false,\r\n            hoverStateEnabled: false,\r\n            itemTemplate: function(data, index, item) {\r\n                $(item).text(data.text).parent().addClass(data.cssClass).addClass(COLUMN_CHOOSER_ITEM_CLASS)\r\n            }\r\n        }\r\n    },\r\n    _prepareSelectModeConfig: function() {\r\n        var that = this;\r\n        return {\r\n            selectNodesRecursive: false,\r\n            showCheckBoxesMode: \"normal\",\r\n            onItemSelectionChanged: function(e) {\r\n                var visibleColumns = that._columnsController.getVisibleColumns().filter((function(item) {\r\n                    return !item.command\r\n                }));\r\n                var isLastColumnUnselected = 1 === visibleColumns.length && !e.itemData.selected;\r\n                if (isLastColumnUnselected) {\r\n                    e.component.selectItem(e.itemElement)\r\n                } else {\r\n                    setTimeout((function() {\r\n                        that._columnsController.columnOption(e.itemData.id, \"visible\", e.itemData.selected)\r\n                    }), CLICK_TIMEOUT)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var changeTypes = e.changeTypes;\r\n        var optionNames = e.optionNames;\r\n        var isSelectMode = \"select\" === this.option(\"columnChooser.mode\");\r\n        this.callBase(e);\r\n        if (isSelectMode) {\r\n            var needPartialRender = optionNames.visible && 1 === optionNames.length && void 0 !== e.columnIndex;\r\n            var needFullRender = optionNames.showInColumnChooser || optionNames.caption || optionNames.visible || changeTypes.columns && optionNames.all;\r\n            if (needPartialRender) {\r\n                this.render(null, {\r\n                    changeType: \"selection\",\r\n                    columnIndex: e.columnIndex\r\n                })\r\n            } else if (needFullRender) {\r\n                this.render(null, \"full\")\r\n            }\r\n        }\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"columnChooser\":\r\n                this._initializePopupContainer();\r\n                this.render(null, \"full\");\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    getColumnElements: function() {\r\n        var result = [];\r\n        var $node;\r\n        var isSelectMode = \"select\" === this.option(\"columnChooser.mode\");\r\n        var chooserColumns = this._columnsController.getChooserColumns(isSelectMode);\r\n        var $content = this._popupContainer && this._popupContainer.$content();\r\n        var $nodes = $content && $content.find(\".dx-treeview-node\");\r\n        if ($nodes) {\r\n            chooserColumns.forEach((function(column) {\r\n                $node = $nodes.filter(\"[data-item-id = '\" + column.index + \"']\");\r\n                var item = $node.length ? $node.children(\".\" + COLUMN_CHOOSER_ITEM_CLASS).get(0) : null;\r\n                result.push(item)\r\n            }))\r\n        }\r\n        return $(result)\r\n    },\r\n    getName: function() {\r\n        return \"columnChooser\"\r\n    },\r\n    getColumns: function() {\r\n        return this._columnsController.getChooserColumns()\r\n    },\r\n    allowDragging: function(column, sourceLocation) {\r\n        var columnVisible = column && column.allowHiding && (\"columnChooser\" !== sourceLocation || !column.visible && this._columnsController.isParentColumnVisible(column.index));\r\n        return this.isColumnChooserVisible() && columnVisible\r\n    },\r\n    getBoundingRect: function() {\r\n        var container = this._popupContainer && this._popupContainer.$overlayContent();\r\n        if (container && container.is(\":visible\")) {\r\n            var offset = container.offset();\r\n            return {\r\n                left: offset.left,\r\n                top: offset.top,\r\n                right: offset.left + getOuterWidth(container),\r\n                bottom: offset.top + getOuterHeight(container)\r\n            }\r\n        }\r\n        return null\r\n    },\r\n    showColumnChooser: function() {\r\n        if (!this._popupContainer) {\r\n            this._initializePopupContainer();\r\n            this.render()\r\n        }\r\n        this._popupContainer.show();\r\n        if (this._isWinDevice()) {\r\n            $(\"body\").addClass(this.addWidgetPrefix(NOTOUCH_ACTION_CLASS))\r\n        }\r\n    },\r\n    hideColumnChooser: function() {\r\n        if (this._popupContainer) {\r\n            this._popupContainer.hide()\r\n        }\r\n    },\r\n    isColumnChooserVisible: function() {\r\n        var popupContainer = this._popupContainer;\r\n        return popupContainer && popupContainer.option(\"visible\")\r\n    },\r\n    publicMethods: function() {\r\n        return [\"showColumnChooser\", \"hideColumnChooser\"]\r\n    }\r\n});\r\nexport var columnChooserModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            columnChooser: {\r\n                enabled: false,\r\n                allowSearch: false,\r\n                searchTimeout: 500,\r\n                mode: \"dragAndDrop\",\r\n                width: 250,\r\n                height: 260,\r\n                title: messageLocalization.format(\"dxDataGrid-columnChooserTitle\"),\r\n                emptyPanelText: messageLocalization.format(\"dxDataGrid-columnChooserEmptyText\"),\r\n                container: void 0\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        columnChooser: ColumnChooserController\r\n    },\r\n    views: {\r\n        columnChooserView: ColumnChooserView\r\n    },\r\n    extenders: {\r\n        views: {\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    return this._appendColumnChooserItem(items)\r\n                },\r\n                _appendColumnChooserItem: function(items) {\r\n                    var that = this;\r\n                    var columnChooserEnabled = that.option(\"columnChooser.enabled\");\r\n                    if (columnChooserEnabled) {\r\n                        var hintText = that.option(\"columnChooser.title\");\r\n                        var toolbarItem = {\r\n                            widget: \"dxButton\",\r\n                            options: {\r\n                                icon: COLUMN_CHOOSER_ICON_NAME,\r\n                                onClick: function() {\r\n                                    that.component.getView(\"columnChooserView\").showColumnChooser()\r\n                                },\r\n                                hint: hintText,\r\n                                text: hintText,\r\n                                onInitialized: function(e) {\r\n                                    $(e.element).addClass(that._getToolbarButtonClass(that.addWidgetPrefix(COLUMN_CHOOSER_BUTTON_CLASS)))\r\n                                }\r\n                            },\r\n                            showText: \"inMenu\",\r\n                            location: \"after\",\r\n                            name: \"columnChooserButton\",\r\n                            locateInMenu: \"auto\",\r\n                            sortIndex: 40\r\n                        };\r\n                        items.push(toolbarItem)\r\n                    }\r\n                    return items\r\n                },\r\n                optionChanged: function(args) {\r\n                    switch (args.name) {\r\n                        case \"columnChooser\":\r\n                            this._invalidate();\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                isVisible: function() {\r\n                    var columnChooserEnabled = this.option(\"columnChooser.enabled\");\r\n                    return this.callBase() || columnChooserEnabled\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            columns: {\r\n                allowMoveColumn: function(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation) {\r\n                    var columnChooserMode = this.option(\"columnChooser.mode\");\r\n                    var isMoveColumnDisallowed = \"select\" === columnChooserMode && \"columnChooser\" === targetLocation;\r\n                    return isMoveColumnDisallowed ? false : this.callBase(fromVisibleIndex, toVisibleIndex, sourceLocation, targetLocation)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.column_chooser.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnChooserModule\r\n} from \"../grid_core/ui.grid_core.column_chooser\";\r\nexport var ColumnChooserController = columnChooserModule.controllers.columnChooser;\r\nexport var ColumnChooserView = columnChooserModule.views.columnChooserView;\r\ngridCore.registerModule(\"columnChooser\", columnChooserModule);\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grouping.core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport Class from \"../../core/class\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    normalizeSortingInfo\r\n} from \"../../data/utils\";\r\nimport {\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nexport function createOffsetFilter(path, storeLoadOptions, lastLevelOnly) {\r\n    var groups = normalizeSortingInfo(storeLoadOptions.group);\r\n    var filter = [];\r\n    for (var i = lastLevelOnly ? path.length - 1 : 0; i < path.length; i++) {\r\n        var filterElement = [];\r\n        for (var j = 0; j <= i; j++) {\r\n            var selector = groups[j].selector;\r\n            if (i === j && (null === path[j] || false === path[j] || true === path[j])) {\r\n                if (false === path[j]) {\r\n                    filterElement.push([selector, \"=\", groups[j].desc ? true : null])\r\n                } else if (path[j] ? !groups[j].desc : groups[j].desc) {\r\n                    filterElement.push([selector, \"<>\", path[j]])\r\n                } else {\r\n                    filterElement.push([selector, \"<>\", null]);\r\n                    filterElement.push([selector, \"=\", null])\r\n                }\r\n            } else {\r\n                var currentFilter = [selector, i === j ? groups[j].desc ? \">\" : \"<\" : \"=\", path[j]];\r\n                if (\"<\" === currentFilter[1]) {\r\n                    filterElement.push([currentFilter, \"or\", [selector, \"=\", null]])\r\n                } else {\r\n                    filterElement.push(currentFilter)\r\n                }\r\n            }\r\n        }\r\n        filter.push(gridCore.combineFilters(filterElement))\r\n    }\r\n    filter = gridCore.combineFilters(filter, \"or\");\r\n    return gridCore.combineFilters([filter, storeLoadOptions.filter])\r\n}\r\nexport var GroupingHelper = Class.inherit(function() {\r\n    var findGroupInfoByKey = function(groupsInfo, key) {\r\n        var hash = groupsInfo.hash;\r\n        return hash && hash[JSON.stringify(key)]\r\n    };\r\n    var getGroupInfoIndexByOffset = function(groupsInfo, offset) {\r\n        var leftIndex = 0;\r\n        var rightIndex = groupsInfo.length - 1;\r\n        if (!groupsInfo.length) {\r\n            return 0\r\n        }\r\n        do {\r\n            var middleIndex = rightIndex + leftIndex >> 1;\r\n            if (groupsInfo[middleIndex].offset > offset) {\r\n                rightIndex = middleIndex\r\n            } else {\r\n                leftIndex = middleIndex\r\n            }\r\n        } while (rightIndex - leftIndex > 1);\r\n        var index;\r\n        for (index = leftIndex; index <= rightIndex; index++) {\r\n            if (groupsInfo[index].offset > offset) {\r\n                break\r\n            }\r\n        }\r\n        return index\r\n    };\r\n    return {\r\n        ctor: function(dataSourceAdapter) {\r\n            this._dataSource = dataSourceAdapter;\r\n            this.reset()\r\n        },\r\n        reset: function() {\r\n            this._groupsInfo = [];\r\n            this._totalCountCorrection = 0\r\n        },\r\n        totalCountCorrection: function() {\r\n            return this._totalCountCorrection\r\n        },\r\n        updateTotalItemsCount: function(totalCountCorrection) {\r\n            this._totalCountCorrection = totalCountCorrection || 0\r\n        },\r\n        isGroupItemCountable: function(item) {\r\n            return !this._isVirtualPaging() || !item.isContinuation\r\n        },\r\n        _isVirtualPaging: function() {\r\n            var scrollingMode = this._dataSource.option(\"scrolling.mode\");\r\n            return \"virtual\" === scrollingMode || \"infinite\" === scrollingMode\r\n        },\r\n        itemsCount: function() {\r\n            var dataSourceAdapter = this._dataSource;\r\n            var dataSource = dataSourceAdapter._dataSource;\r\n            var groupCount = gridCore.normalizeSortingInfo(dataSource.group() || []).length;\r\n            var itemsCount = function calculateItemsCount(that, items, groupsCount) {\r\n                var result = 0;\r\n                if (items) {\r\n                    if (!groupsCount) {\r\n                        result = items.length\r\n                    } else {\r\n                        for (var i = 0; i < items.length; i++) {\r\n                            if (that.isGroupItemCountable(items[i])) {\r\n                                result++\r\n                            }\r\n                            result += calculateItemsCount(that, items[i].items, groupsCount - 1)\r\n                        }\r\n                    }\r\n                }\r\n                return result\r\n            }(this, dataSource.items(), groupCount);\r\n            return itemsCount\r\n        },\r\n        foreachGroups: function(callback, childrenAtFirst, foreachCollapsedGroups, updateOffsets, updateParentOffsets) {\r\n            var that = this;\r\n            return function foreachGroupsCore(groupsInfo, callback, childrenAtFirst, parents) {\r\n                var callbackResults = [];\r\n\r\n                function executeCallback(callback, data, parents, callbackResults) {\r\n                    var callbackResult = data && callback(data, parents);\r\n                    callbackResult && callbackResults.push(callbackResult);\r\n                    return callbackResult\r\n                }\r\n                for (var i = 0; i < groupsInfo.length; i++) {\r\n                    parents.push(groupsInfo[i].data);\r\n                    if (!childrenAtFirst && false === executeCallback(callback, groupsInfo[i].data, parents, callbackResults)) {\r\n                        return false\r\n                    }\r\n                    if (!groupsInfo[i].data || groupsInfo[i].data.isExpanded || foreachCollapsedGroups) {\r\n                        var children = groupsInfo[i].children;\r\n                        var callbackResult = children.length && foreachGroupsCore(children, callback, childrenAtFirst, parents);\r\n                        callbackResult && callbackResults.push(callbackResult);\r\n                        if (false === callbackResult) {\r\n                            return false\r\n                        }\r\n                    }\r\n                    if (childrenAtFirst && false === executeCallback(callback, groupsInfo[i].data, parents, callbackResults)) {\r\n                        return false\r\n                    }\r\n                    if (!groupsInfo[i].data || groupsInfo[i].data.offset !== groupsInfo[i].offset) {\r\n                        updateOffsets = true\r\n                    }\r\n                    parents.pop()\r\n                }\r\n                var currentParents = updateParentOffsets && parents.slice(0);\r\n                return updateOffsets && when.apply($, callbackResults).always((function() {\r\n                    that._updateGroupInfoOffsets(groupsInfo, currentParents)\r\n                }))\r\n            }(that._groupsInfo, callback, childrenAtFirst, [])\r\n        },\r\n        _updateGroupInfoOffsets: function(groupsInfo, parents) {\r\n            parents = parents || [];\r\n            for (var index = 0; index < groupsInfo.length; index++) {\r\n                var groupInfo = groupsInfo[index];\r\n                if (groupInfo.data && groupInfo.data.offset !== groupInfo.offset) {\r\n                    groupInfo.offset = groupInfo.data.offset;\r\n                    for (var parentIndex = 0; parentIndex < parents.length; parentIndex++) {\r\n                        parents[parentIndex].offset = groupInfo.offset\r\n                    }\r\n                }\r\n            }\r\n            groupsInfo.sort((function(a, b) {\r\n                return a.offset - b.offset\r\n            }))\r\n        },\r\n        findGroupInfo: function(path) {\r\n            var groupInfo;\r\n            var groupsInfo = this._groupsInfo;\r\n            for (var pathIndex = 0; groupsInfo && pathIndex < path.length; pathIndex++) {\r\n                groupInfo = findGroupInfoByKey(groupsInfo, path[pathIndex]);\r\n                groupsInfo = groupInfo && groupInfo.children\r\n            }\r\n            return groupInfo && groupInfo.data\r\n        },\r\n        addGroupInfo: function(groupInfoData) {\r\n            var groupInfo;\r\n            var path = groupInfoData.path;\r\n            var groupsInfo = this._groupsInfo;\r\n            for (var pathIndex = 0; pathIndex < path.length; pathIndex++) {\r\n                groupInfo = findGroupInfoByKey(groupsInfo, path[pathIndex]);\r\n                if (!groupInfo) {\r\n                    groupInfo = {\r\n                        key: path[pathIndex],\r\n                        offset: groupInfoData.offset,\r\n                        data: {\r\n                            offset: groupInfoData.offset,\r\n                            isExpanded: true,\r\n                            path: path.slice(0, pathIndex + 1)\r\n                        },\r\n                        children: []\r\n                    };\r\n                    var index = getGroupInfoIndexByOffset(groupsInfo, groupInfoData.offset);\r\n                    groupsInfo.splice(index, 0, groupInfo);\r\n                    groupsInfo.hash = groupsInfo.hash || {};\r\n                    groupsInfo.hash[JSON.stringify(groupInfo.key)] = groupInfo\r\n                }\r\n                if (pathIndex === path.length - 1) {\r\n                    groupInfo.data = groupInfoData;\r\n                    if (groupInfo.offset !== groupInfoData.offset) {\r\n                        this._updateGroupInfoOffsets(groupsInfo)\r\n                    }\r\n                }\r\n                groupsInfo = groupInfo.children\r\n            }\r\n        },\r\n        allowCollapseAll: function() {\r\n            return true\r\n        },\r\n        refresh: function(options) {\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var groups = normalizeSortingInfo(storeLoadOptions.group || []);\r\n            var oldGroups = \"_group\" in this ? normalizeSortingInfo(this._group || []) : groups;\r\n            var groupsCount = Math.min(oldGroups.length, groups.length);\r\n            this._group = storeLoadOptions.group;\r\n            for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\r\n                if (oldGroups[groupIndex].selector !== groups[groupIndex].selector) {\r\n                    groupsCount = groupIndex;\r\n                    break\r\n                }\r\n            }\r\n            if (!groupsCount) {\r\n                this.reset()\r\n            } else {\r\n                ! function cleanGroupsInfo(groupsInfo, groupIndex, groupsCount) {\r\n                    for (var i = 0; i < groupsInfo.length; i++) {\r\n                        if (groupIndex + 1 >= groupsCount) {\r\n                            groupsInfo[i].children = []\r\n                        } else {\r\n                            cleanGroupsInfo(groupsInfo[i].children, groupIndex + 1, groupsCount)\r\n                        }\r\n                    }\r\n                }(this._groupsInfo, 0, groupsCount)\r\n            }\r\n        },\r\n        handleDataLoading: function() {},\r\n        handleDataLoaded: function(options, callBase) {\r\n            callBase(options)\r\n        },\r\n        handleDataLoadedCore: function(options, callBase) {\r\n            callBase(options)\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\r\nimport {\r\n    normalizeSortingInfo\r\n} from \"../../data/utils\";\r\nexport function createGroupFilter(path, storeLoadOptions) {\r\n    var groups = normalizeSortingInfo(storeLoadOptions.group);\r\n    var filter = [];\r\n    for (var i = 0; i < path.length; i++) {\r\n        filter.push([groups[i].selector, \"=\", path[i]])\r\n    }\r\n    if (storeLoadOptions.filter) {\r\n        filter.push(storeLoadOptions.filter)\r\n    }\r\n    return gridCoreUtils.combineFilters(filter)\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grouping.expanded.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    toComparable\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    keysEqual\r\n} from \"../../data/utils\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport storeHelper from \"../../data/store_helper\";\r\nimport dataGridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    GroupingHelper as GroupingHelperCore,\r\n    createOffsetFilter\r\n} from \"./ui.data_grid.grouping.core\";\r\nimport {\r\n    createGroupFilter\r\n} from \"./ui.data_grid.utils\";\r\nimport dataQuery from \"../../data/query\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar loadTotalCount = function(dataSource, options) {\r\n    var d = new Deferred;\r\n    var loadOptions = extend({\r\n        skip: 0,\r\n        take: 1,\r\n        requireTotalCount: true\r\n    }, options);\r\n    dataSource.load(loadOptions).done((function(data, extra) {\r\n        d.resolve(extra && extra.totalCount)\r\n    })).fail(d.reject.bind(d));\r\n    return d\r\n};\r\nexport var GroupingHelper = GroupingHelperCore.inherit(function() {\r\n    var foreachCollapsedGroups = function(that, callback, updateOffsets) {\r\n        return that.foreachGroups((function(groupInfo) {\r\n            if (!groupInfo.isExpanded) {\r\n                return callback(groupInfo)\r\n            }\r\n        }), false, false, updateOffsets, true)\r\n    };\r\n    var correctSkipLoadOption = function(that, skip) {\r\n        var skipCorrection = 0;\r\n        var resultSkip = skip || 0;\r\n        if (skip) {\r\n            foreachCollapsedGroups(that, (function(groupInfo) {\r\n                if (groupInfo.offset - skipCorrection >= skip) {\r\n                    return false\r\n                }\r\n                skipCorrection += groupInfo.count - 1\r\n            }));\r\n            resultSkip += skipCorrection\r\n        }\r\n        return resultSkip\r\n    };\r\n    var pathEquals = function(path1, path2) {\r\n        if (path1.length !== path2.length) {\r\n            return false\r\n        }\r\n        for (var i = 0; i < path1.length; i++) {\r\n            if (!keysEqual(null, path1[i], path2[i])) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    };\r\n    var updateGroupOffsets = function updateGroupOffsets(that, items, path, offset, additionalGroupInfo) {\r\n        if (!items) {\r\n            return\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (\"key\" in item && void 0 !== item.items) {\r\n                path.push(item.key);\r\n                if (additionalGroupInfo && pathEquals(additionalGroupInfo.path, path) && !item.isContinuation) {\r\n                    additionalGroupInfo.offset = offset\r\n                }\r\n                var groupInfo = that.findGroupInfo(path);\r\n                if (groupInfo && !item.isContinuation) {\r\n                    groupInfo.offset = offset\r\n                }\r\n                if (groupInfo && !groupInfo.isExpanded) {\r\n                    offset += groupInfo.count\r\n                } else {\r\n                    offset = updateGroupOffsets(that, item.items, path, offset, additionalGroupInfo)\r\n                }\r\n                path.pop()\r\n            } else {\r\n                offset++\r\n            }\r\n        }\r\n        return offset\r\n    };\r\n    var getGroupCount = function getGroupCount(item, groupCount) {\r\n        var count = item.count || item.items.length;\r\n        if (!item.count && groupCount > 1) {\r\n            count = 0;\r\n            for (var i = 0; i < item.items.length; i++) {\r\n                count += getGroupCount(item.items[i], groupCount - 1)\r\n            }\r\n        }\r\n        return count\r\n    };\r\n    return {\r\n        handleDataLoading: function(options) {\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var collapsedGroups = [];\r\n            var collapsedItemsCount = 0;\r\n            var skipFirstItem = false;\r\n            var take;\r\n            var group = options.loadOptions.group;\r\n            var skipCorrection = 0;\r\n            ! function(storeLoadOptions, loadOptions) {\r\n                if (loadOptions.group) {\r\n                    var groups = dataGridCore.normalizeSortingInfo(loadOptions.group);\r\n                    var sorts = dataGridCore.normalizeSortingInfo(storeLoadOptions.sort);\r\n                    storeLoadOptions.sort = storeHelper.arrangeSortingInfo(groups, sorts);\r\n                    delete loadOptions.group\r\n                }\r\n            }(storeLoadOptions, options.loadOptions);\r\n            options.group = options.group || group;\r\n            if (options.isCustomLoading) {\r\n                return\r\n            }\r\n            var loadOptions = extend({}, storeLoadOptions);\r\n            loadOptions.skip = correctSkipLoadOption(this, storeLoadOptions.skip);\r\n            if (loadOptions.skip && loadOptions.take && group) {\r\n                loadOptions.skip--;\r\n                loadOptions.take++;\r\n                skipFirstItem = true\r\n            }\r\n            if (loadOptions.take && group) {\r\n                take = loadOptions.take;\r\n                loadOptions.take++\r\n            }\r\n            foreachCollapsedGroups(this, (function(groupInfo) {\r\n                if (groupInfo.offset >= loadOptions.skip + loadOptions.take + skipCorrection) {\r\n                    return false\r\n                } else if (groupInfo.offset >= loadOptions.skip + skipCorrection && groupInfo.count) {\r\n                    skipCorrection += groupInfo.count - 1;\r\n                    collapsedGroups.push(groupInfo);\r\n                    collapsedItemsCount += groupInfo.count\r\n                }\r\n            }));\r\n            each(collapsedGroups, (function() {\r\n                loadOptions.filter = function(path, storeLoadOptions, group) {\r\n                    var groups = dataGridCore.normalizeSortingInfo(group || storeLoadOptions.group);\r\n                    var filter = [];\r\n                    for (var i = 0; i < path.length; i++) {\r\n                        var filterElement = [];\r\n                        for (var j = 0; j <= i; j++) {\r\n                            filterElement.push([groups[j].selector, i === j ? \"<>\" : \"=\", path[j]])\r\n                        }\r\n                        filter.push(dataGridCore.combineFilters(filterElement))\r\n                    }\r\n                    filter = dataGridCore.combineFilters(filter, \"or\");\r\n                    return dataGridCore.combineFilters([filter, storeLoadOptions.filter])\r\n                }(this.path, loadOptions, group)\r\n            }));\r\n            options.storeLoadOptions = loadOptions;\r\n            options.collapsedGroups = collapsedGroups;\r\n            options.collapsedItemsCount = collapsedItemsCount;\r\n            options.skip = loadOptions.skip || 0;\r\n            options.skipFirstItem = skipFirstItem;\r\n            options.take = take\r\n        },\r\n        handleDataLoaded: function(options, callBase) {\r\n            var collapsedGroups = options.collapsedGroups;\r\n            var groups = dataGridCore.normalizeSortingInfo(options.group);\r\n            var groupCount = groups.length;\r\n\r\n            function appendCollapsedPath(data, path, groups, collapsedGroup, offset) {\r\n                if (!data || !path.length || !groups.length) {\r\n                    return\r\n                }\r\n                var keyValue;\r\n                var i;\r\n                var pathValue = toComparable(path[0], true);\r\n                for (i = 0; i < data.length; i++) {\r\n                    keyValue = toComparable(data[i].key, true);\r\n                    if (offset >= collapsedGroup.offset || pathValue === keyValue) {\r\n                        break\r\n                    } else {\r\n                        offset += getGroupCount(data[i], groups.length)\r\n                    }\r\n                }\r\n                if (!data.length || pathValue !== keyValue) {\r\n                    data.splice(i, 0, {\r\n                        key: path[0],\r\n                        items: [],\r\n                        count: 1 === path.length ? collapsedGroup.count : void 0\r\n                    })\r\n                }\r\n                appendCollapsedPath(data[i].items, path.slice(1), groups.slice(1), collapsedGroup, offset)\r\n            }\r\n            if (options.collapsedItemsCount && options.extra && options.extra.totalCount >= 0) {\r\n                options.extra.totalCount += options.collapsedItemsCount\r\n            }\r\n            callBase(options);\r\n            if (groupCount) {\r\n                var data = options.data;\r\n                var query = dataQuery(data);\r\n                storeHelper.multiLevelGroup(query, groups).enumerate().done((function(groupedData) {\r\n                    data = groupedData\r\n                }));\r\n                if (collapsedGroups) {\r\n                    for (var pathIndex = 0; pathIndex < collapsedGroups.length; pathIndex++) {\r\n                        appendCollapsedPath(data, collapsedGroups[pathIndex].path, groups, collapsedGroups[pathIndex], options.skip)\r\n                    }\r\n                }\r\n                if (!options.isCustomLoading) {\r\n                    ! function processGroupItems(that, items, path, offset, skipFirstItem, take) {\r\n                        var removeLastItemsCount = 0;\r\n                        var needRemoveFirstItem = false;\r\n                        for (var i = 0; i < items.length; i++) {\r\n                            var item = items[i];\r\n                            if (void 0 !== item.items) {\r\n                                path.push(item.key);\r\n                                var groupInfo = that.findGroupInfo(path);\r\n                                if (groupInfo && !groupInfo.isExpanded) {\r\n                                    item.collapsedItems = item.items;\r\n                                    item.items = null;\r\n                                    offset += groupInfo.count;\r\n                                    take--;\r\n                                    if (take < 0) {\r\n                                        removeLastItemsCount++\r\n                                    }\r\n                                    if (skipFirstItem) {\r\n                                        needRemoveFirstItem = true\r\n                                    }\r\n                                } else if (item.items) {\r\n                                    var offsetInfo = processGroupItems(that, item.items, path, offset, skipFirstItem, take);\r\n                                    if (skipFirstItem) {\r\n                                        if (offsetInfo.offset - offset > 1) {\r\n                                            item.isContinuation = true\r\n                                        } else {\r\n                                            needRemoveFirstItem = true\r\n                                        }\r\n                                    }\r\n                                    offset = offsetInfo.offset;\r\n                                    take = offsetInfo.take;\r\n                                    if (take < 0) {\r\n                                        if (item.items.length) {\r\n                                            item.isContinuationOnNextPage = true\r\n                                        } else {\r\n                                            removeLastItemsCount++\r\n                                        }\r\n                                    }\r\n                                }\r\n                                path.pop()\r\n                            } else {\r\n                                if (skipFirstItem) {\r\n                                    needRemoveFirstItem = true\r\n                                }\r\n                                offset++;\r\n                                take--;\r\n                                if (take < 0) {\r\n                                    removeLastItemsCount++\r\n                                }\r\n                            }\r\n                            skipFirstItem = false\r\n                        }\r\n                        if (needRemoveFirstItem) {\r\n                            items.splice(0, 1)\r\n                        }\r\n                        if (removeLastItemsCount) {\r\n                            items.splice(-removeLastItemsCount, removeLastItemsCount)\r\n                        }\r\n                        return {\r\n                            offset: offset,\r\n                            take: take\r\n                        }\r\n                    }(this, data, [], options.skip, options.skipFirstItem, options.take)\r\n                }\r\n                options.data = data\r\n            }\r\n        },\r\n        isGroupItemCountable: function(item) {\r\n            return null === item.items\r\n        },\r\n        updateTotalItemsCount: function() {\r\n            var itemsCountCorrection = 0;\r\n            foreachCollapsedGroups(this, (function(groupInfo) {\r\n                if (groupInfo.count) {\r\n                    itemsCountCorrection -= groupInfo.count - 1\r\n                }\r\n            }));\r\n            this.callBase(itemsCountCorrection)\r\n        },\r\n        changeRowExpand: function(path) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var beginPageIndex = dataSource.beginPageIndex ? dataSource.beginPageIndex() : dataSource.pageIndex();\r\n            var dataSourceItems = dataSource.items();\r\n            var offset = correctSkipLoadOption(that, beginPageIndex * dataSource.pageSize());\r\n            var groupInfo = that.findGroupInfo(path);\r\n            var groupCountQuery;\r\n            if (groupInfo && !groupInfo.isExpanded) {\r\n                groupCountQuery = (new Deferred).resolve(groupInfo.count)\r\n            } else {\r\n                groupCountQuery = loadTotalCount(dataSource, {\r\n                    filter: createGroupFilter(path, {\r\n                        filter: dataSource.filter(),\r\n                        group: dataSource.group()\r\n                    })\r\n                })\r\n            }\r\n            return when(groupCountQuery).done((function(count) {\r\n                count = parseInt(count.length ? count[0] : count);\r\n                if (groupInfo) {\r\n                    updateGroupOffsets(that, dataSourceItems, [], offset);\r\n                    groupInfo.isExpanded = !groupInfo.isExpanded;\r\n                    groupInfo.count = count\r\n                } else {\r\n                    groupInfo = {\r\n                        offset: -1,\r\n                        count: count,\r\n                        path: path,\r\n                        isExpanded: false\r\n                    };\r\n                    updateGroupOffsets(that, dataSourceItems, [], offset, groupInfo);\r\n                    if (groupInfo.offset >= 0) {\r\n                        that.addGroupInfo(groupInfo)\r\n                    }\r\n                }\r\n                that.updateTotalItemsCount()\r\n            })).fail((function() {\r\n                dataSource._eventsStrategy.fireEvent(\"loadError\", arguments)\r\n            }))\r\n        },\r\n        allowCollapseAll: function() {\r\n            return false\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            var that = this;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var dataSource = that._dataSource;\r\n            this.callBase.apply(this, arguments);\r\n            if (operationTypes.reload) {\r\n                return foreachCollapsedGroups(that, (function(groupInfo) {\r\n                    var groupCountQuery = loadTotalCount(dataSource, {\r\n                        filter: createGroupFilter(groupInfo.path, storeLoadOptions)\r\n                    });\r\n                    var groupOffsetQuery = loadTotalCount(dataSource, {\r\n                        filter: createOffsetFilter(groupInfo.path, storeLoadOptions)\r\n                    });\r\n                    return when(groupOffsetQuery, groupCountQuery).done((function(offset, count) {\r\n                        offset = parseInt(offset.length ? offset[0] : offset);\r\n                        count = parseInt(count.length ? count[0] : count);\r\n                        groupInfo.offset = offset;\r\n                        if (groupInfo.count !== count) {\r\n                            groupInfo.count = count;\r\n                            that.updateTotalItemsCount()\r\n                        }\r\n                    }))\r\n                }), true)\r\n            }\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grouping.collapsed.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport dataGridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    GroupingHelper as GroupingHelperCore,\r\n    createOffsetFilter\r\n} from \"./ui.data_grid.grouping.core\";\r\nimport {\r\n    createGroupFilter\r\n} from \"./ui.data_grid.utils\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    errors as dataErrors\r\n} from \"../../data/errors\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\n\r\nfunction getContinuationGroupCount(groupOffset, pageSize, groupSize, groupIndex) {\r\n    groupIndex = groupIndex || 0;\r\n    if (pageSize > 1 && groupSize > 0) {\r\n        var pageOffset = groupOffset - Math.floor(groupOffset / pageSize) * pageSize || pageSize;\r\n        pageOffset += groupSize - groupIndex - 2;\r\n        if (pageOffset < 0) {\r\n            pageOffset += pageSize\r\n        }\r\n        return Math.floor(pageOffset / (pageSize - groupIndex - 1))\r\n    }\r\n    return 0\r\n}\r\nexport var GroupingHelper = GroupingHelperCore.inherit(function() {\r\n    var foreachExpandedGroups = function(that, callback, updateGroups) {\r\n        return that.foreachGroups((function(groupInfo, parents) {\r\n            if (groupInfo.isExpanded) {\r\n                return callback(groupInfo, parents)\r\n            }\r\n        }), true, false, updateGroups, updateGroups)\r\n    };\r\n    var processGroupItems = function processGroupItems(that, items, groupsCount, expandedInfo, path, isCustomLoading, isLastGroupExpanded) {\r\n        var isExpanded;\r\n        expandedInfo.items = expandedInfo.items || [];\r\n        expandedInfo.paths = expandedInfo.paths || [];\r\n        expandedInfo.count = expandedInfo.count || 0;\r\n        expandedInfo.lastCount = expandedInfo.lastCount || 0;\r\n        if (!groupsCount) {\r\n            return\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (void 0 !== item.items) {\r\n                path.push(item.key);\r\n                if (isCustomLoading) {\r\n                    isExpanded = true\r\n                } else {\r\n                    var groupInfo = that.findGroupInfo(path);\r\n                    isExpanded = groupInfo && groupInfo.isExpanded\r\n                }\r\n                if (!isExpanded) {\r\n                    item.collapsedItems = item.items;\r\n                    item.items = null\r\n                } else if (item.items) {\r\n                    processGroupItems(that, item.items, groupsCount - 1, expandedInfo, path, isCustomLoading, isLastGroupExpanded)\r\n                } else if (1 === groupsCount && item.count && (!isCustomLoading || isLastGroupExpanded)) {\r\n                    expandedInfo.items.push(item);\r\n                    expandedInfo.paths.push(path.slice(0));\r\n                    expandedInfo.count += expandedInfo.lastCount;\r\n                    expandedInfo.lastCount = item.count\r\n                }\r\n                path.pop()\r\n            }\r\n        }\r\n    };\r\n    var updateGroupInfoItem = function(that, item, isLastGroupLevel, path, offset) {\r\n        var groupInfo = that.findGroupInfo(path);\r\n        var count;\r\n        if (!groupInfo) {\r\n            if (isLastGroupLevel) {\r\n                count = item.count > 0 ? item.count : item.items.length\r\n            }\r\n            that.addGroupInfo({\r\n                isExpanded: that._isGroupExpanded(path.length - 1),\r\n                path: path.slice(0),\r\n                offset: offset,\r\n                count: count || 0\r\n            })\r\n        } else {\r\n            if (isLastGroupLevel) {\r\n                groupInfo.count = item.count > 0 ? item.count : item.items && item.items.length || 0\r\n            } else {\r\n                item.count = groupInfo.count || item.count\r\n            }\r\n            groupInfo.offset = offset\r\n        }\r\n    };\r\n    var updateGroupInfos = function updateGroupInfos(that, options, items, loadedGroupCount, groupIndex, path, parentIndex) {\r\n        var groupCount = options.group ? options.group.length : 0;\r\n        var isLastGroupLevel = groupCount === loadedGroupCount;\r\n        var remotePaging = options.remoteOperations.paging;\r\n        var offset = 0;\r\n        var totalCount = 0;\r\n        var count;\r\n        groupIndex = groupIndex || 0;\r\n        path = path || [];\r\n        if (remotePaging && !parentIndex) {\r\n            offset = 0 === groupIndex ? options.skip || 0 : options.skips[groupIndex - 1] || 0\r\n        }\r\n        if (groupIndex >= loadedGroupCount) {\r\n            return items.length\r\n        }\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (item) {\r\n                path.push(item.key);\r\n                if (!item.count && !item.items || void 0 === item.items) {\r\n                    return -1\r\n                }\r\n                updateGroupInfoItem(that, item, isLastGroupLevel, path, offset + i);\r\n                count = item.items ? updateGroupInfos(that, options, item.items, loadedGroupCount, groupIndex + 1, path, i) : item.count || -1;\r\n                if (count < 0) {\r\n                    return -1\r\n                }\r\n                totalCount += count;\r\n                path.pop()\r\n            }\r\n        }\r\n        return totalCount\r\n    };\r\n    var isGroupExpanded = function(groups, groupIndex) {\r\n        return groups && groups.length && groups[groupIndex] && !!groups[groupIndex].isExpanded\r\n    };\r\n    var getTotalOffset = function(groupInfos, pageSize, offset) {\r\n        var groupSize;\r\n        var totalOffset = offset;\r\n        for (var groupIndex = 0; groupIndex < groupInfos.length; groupIndex++) {\r\n            groupSize = groupInfos[groupIndex].offset + 1;\r\n            if (groupIndex > 0) {\r\n                groupSize += groupInfos[groupIndex - 1].childrenTotalCount;\r\n                if (pageSize) {\r\n                    groupSize += getContinuationGroupCount(totalOffset, pageSize, groupSize, groupIndex - 1) * groupIndex\r\n                }\r\n            }\r\n            totalOffset += groupSize\r\n        }\r\n        return totalOffset\r\n    };\r\n\r\n    function applyContinuationToGroupItem(options, expandedInfo, groupLevel, expandedItemIndex) {\r\n        var item = expandedInfo.items[expandedItemIndex];\r\n        var skip = options.skips && options.skips[groupLevel];\r\n        var take = options.takes && options.takes[groupLevel];\r\n        var isLastExpandedItem = expandedItemIndex === expandedInfo.items.length - 1;\r\n        var isFirstExpandedItem = 0 === expandedItemIndex;\r\n        var lastExpandedItemSkip = isFirstExpandedItem && skip || 0;\r\n        var isItemsTruncatedByTake = item.count > take + lastExpandedItemSkip;\r\n        if (isFirstExpandedItem && void 0 !== skip) {\r\n            item.isContinuation = true\r\n        }\r\n        if (isLastExpandedItem && void 0 !== take && isItemsTruncatedByTake) {\r\n            item.isContinuationOnNextPage = true\r\n        }\r\n    }\r\n\r\n    function isDataDeferred(data) {\r\n        return !Array.isArray(data)\r\n    }\r\n\r\n    function makeDataDeferred(options) {\r\n        if (!isDataDeferred(options.data)) {\r\n            options.data = new Deferred\r\n        }\r\n    }\r\n\r\n    function loadGroupItems(that, options, loadedGroupCount, expandedInfo, groupLevel, data) {\r\n        if (!options.isCustomLoading) {\r\n            expandedInfo = {};\r\n            processGroupItems(that, data, loadedGroupCount, expandedInfo, []);\r\n            ! function(options, expandedInfo, currentGroupCount) {\r\n                var currentGroupIndex = currentGroupCount - 1;\r\n                var groupCount = options.group ? options.group.length : 0;\r\n                expandedInfo.skip = options.skips && options.skips[currentGroupIndex];\r\n                if (options.takes && void 0 !== options.takes[currentGroupIndex]) {\r\n                    if (groupCount === currentGroupCount) {\r\n                        expandedInfo.take = expandedInfo.count ? expandedInfo.count - (expandedInfo.skip || 0) : 0\r\n                    } else {\r\n                        expandedInfo.take = 0\r\n                    }\r\n                    expandedInfo.take += options.takes[currentGroupIndex]\r\n                }\r\n            }(options, expandedInfo, loadedGroupCount)\r\n        }\r\n        var groupCount = options.group ? options.group.length : 0;\r\n        if (expandedInfo.paths.length && groupCount - loadedGroupCount > 0) {\r\n            makeDataDeferred(options);\r\n            ! function(that, options, expandedInfo, loadedGroupCount, groupLevel, data) {\r\n                var groups = options.group || [];\r\n                var currentGroup = groups[groupLevel + 1];\r\n                var deferreds = [];\r\n                each(expandedInfo.paths, (function(expandedItemIndex) {\r\n                    var loadOptions = {\r\n                        requireTotalCount: false,\r\n                        requireGroupCount: true,\r\n                        group: [currentGroup],\r\n                        groupSummary: options.storeLoadOptions.groupSummary,\r\n                        filter: createGroupFilter(expandedInfo.paths[expandedItemIndex], {\r\n                            filter: options.storeLoadOptions.filter,\r\n                            group: groups\r\n                        }),\r\n                        select: options.storeLoadOptions.select\r\n                    };\r\n                    if (0 === expandedItemIndex) {\r\n                        loadOptions.skip = expandedInfo.skip || 0\r\n                    }\r\n                    if (expandedItemIndex === expandedInfo.paths.length - 1) {\r\n                        loadOptions.take = expandedInfo.take\r\n                    }\r\n                    var loadResult = 0 === loadOptions.take ? [] : that._dataSource.loadFromStore(loadOptions);\r\n                    when(loadResult).done((function(data) {\r\n                        var item = expandedInfo.items[expandedItemIndex];\r\n                        applyContinuationToGroupItem(options, expandedInfo, groupLevel, expandedItemIndex);\r\n                        item.items = data\r\n                    }));\r\n                    deferreds.push(loadResult)\r\n                }));\r\n                when.apply(null, deferreds).done((function() {\r\n                    updateGroupInfos(that, options, data, loadedGroupCount + 1);\r\n                    loadGroupItems(that, options, loadedGroupCount + 1, expandedInfo, groupLevel + 1, data)\r\n                }))\r\n            }(that, options, expandedInfo, loadedGroupCount, groupLevel, data)\r\n        } else if (expandedInfo.paths.length && options.storeLoadOptions.group) {\r\n            makeDataDeferred(options);\r\n            ! function(that, options, expandedInfo, data) {\r\n                var expandedFilters = [];\r\n                var groups = options.group || [];\r\n                each(expandedInfo.paths, (function(_, expandedPath) {\r\n                    expandedFilters.push(createGroupFilter(expandedPath, {\r\n                        group: options.isCustomLoading ? options.storeLoadOptions.group : groups\r\n                    }))\r\n                }));\r\n                var filter = options.storeLoadOptions.filter;\r\n                if (!options.storeLoadOptions.isLoadingAll) {\r\n                    filter = dataGridCore.combineFilters([filter, dataGridCore.combineFilters(expandedFilters, \"or\")])\r\n                }\r\n                var loadOptions = extend({}, options.storeLoadOptions, {\r\n                    requireTotalCount: false,\r\n                    requireGroupCount: false,\r\n                    group: null,\r\n                    sort: groups.concat(dataGridCore.normalizeSortingInfo(options.storeLoadOptions.sort || [])),\r\n                    filter: filter\r\n                });\r\n                var isPagingLocal = that._dataSource.isLastLevelGroupItemsPagingLocal();\r\n                if (!isPagingLocal) {\r\n                    loadOptions.skip = expandedInfo.skip;\r\n                    loadOptions.take = expandedInfo.take\r\n                }\r\n                when(0 === expandedInfo.take ? [] : that._dataSource.loadFromStore(loadOptions)).done((function(items, extra) {\r\n                    if (isPagingLocal) {\r\n                        items = that._dataSource.sortLastLevelGroupItems(items, groups, expandedInfo.paths);\r\n                        items = expandedInfo.skip ? items.slice(expandedInfo.skip) : items;\r\n                        items = expandedInfo.take ? items.slice(0, expandedInfo.take) : items\r\n                    }\r\n                    each(expandedInfo.items, (function(index, item) {\r\n                        var itemCount = item.count - (0 === index && expandedInfo.skip || 0);\r\n                        var expandedItems = items.splice(0, itemCount);\r\n                        applyContinuationToGroupItem(options, expandedInfo, groups.length - 1, index);\r\n                        item.items = expandedItems\r\n                    }));\r\n                    options.data.resolve(data)\r\n                })).fail(options.data.reject)\r\n            }(that, options, expandedInfo, data)\r\n        } else if (isDataDeferred(options.data)) {\r\n            options.data.resolve(data)\r\n        }\r\n    }\r\n    var loadGroupTotalCount = function(dataSource, options) {\r\n        var d = new Deferred;\r\n        var isGrouping = !!(options.group && options.group.length);\r\n        var loadOptions = extend({\r\n            skip: 0,\r\n            take: 1,\r\n            requireGroupCount: isGrouping,\r\n            requireTotalCount: !isGrouping\r\n        }, options, {\r\n            group: isGrouping ? options.group : null\r\n        });\r\n        dataSource.load(loadOptions).done((function(data, extra) {\r\n            var count = extra && (isGrouping ? extra.groupCount : extra.totalCount);\r\n            if (!isFinite(count)) {\r\n                d.reject(dataErrors.Error(isGrouping ? \"E4022\" : \"E4021\"));\r\n                return\r\n            }\r\n            d.resolve(count)\r\n        })).fail(d.reject.bind(d));\r\n        return d\r\n    };\r\n    return {\r\n        updateTotalItemsCount: function(options) {\r\n            var totalItemsCount = 0;\r\n            var totalCount = options.extra && options.extra.totalCount || 0;\r\n            var groupCount = options.extra && options.extra.groupCount || 0;\r\n            var pageSize = this._dataSource.pageSize();\r\n            var isVirtualPaging = this._isVirtualPaging();\r\n            foreachExpandedGroups(this, (function(groupInfo) {\r\n                groupInfo.childrenTotalCount = 0\r\n            }));\r\n            foreachExpandedGroups(this, (function(groupInfo, parents) {\r\n                var totalOffset = getTotalOffset(parents, isVirtualPaging ? 0 : pageSize, totalItemsCount);\r\n                var count = groupInfo.count + groupInfo.childrenTotalCount;\r\n                if (!isVirtualPaging) {\r\n                    count += getContinuationGroupCount(totalOffset, pageSize, count, parents.length - 1)\r\n                }\r\n                if (parents[parents.length - 2]) {\r\n                    parents[parents.length - 2].childrenTotalCount += count\r\n                } else {\r\n                    totalItemsCount += count\r\n                }\r\n            }));\r\n            this.callBase(totalItemsCount - totalCount + groupCount)\r\n        },\r\n        _isGroupExpanded: function(groupIndex) {\r\n            var groups = this._dataSource.group();\r\n            return isGroupExpanded(groups, groupIndex)\r\n        },\r\n        _updatePagingOptions: function(options, callback) {\r\n            var isVirtualPaging = this._isVirtualPaging();\r\n            var pageSize = this._dataSource.pageSize();\r\n            var skips = [];\r\n            var takes = [];\r\n            var skipChildrenTotalCount = 0;\r\n            var childrenTotalCount = 0;\r\n            if (options.take) {\r\n                foreachExpandedGroups(this, (function(groupInfo) {\r\n                    groupInfo.childrenTotalCount = 0;\r\n                    groupInfo.skipChildrenTotalCount = 0\r\n                }));\r\n                foreachExpandedGroups(this, (function(groupInfo, parents) {\r\n                    var take;\r\n                    var takeCorrection = 0;\r\n                    var parentTakeCorrection = 0;\r\n                    var totalOffset = getTotalOffset(parents, isVirtualPaging ? 0 : pageSize, childrenTotalCount);\r\n                    var continuationGroupCount = 0;\r\n                    var skipContinuationGroupCount = 0;\r\n                    var groupInfoCount = groupInfo.count + groupInfo.childrenTotalCount;\r\n                    var childrenGroupInfoCount = groupInfoCount;\r\n                    callback && callback(groupInfo, totalOffset);\r\n                    var skip = options.skip - totalOffset;\r\n                    if (totalOffset <= options.skip + options.take && groupInfoCount) {\r\n                        take = options.take;\r\n                        if (!isVirtualPaging) {\r\n                            continuationGroupCount = getContinuationGroupCount(totalOffset, pageSize, groupInfoCount, parents.length - 1);\r\n                            groupInfoCount += continuationGroupCount * parents.length;\r\n                            childrenGroupInfoCount += continuationGroupCount;\r\n                            if (pageSize && skip >= 0) {\r\n                                takeCorrection = parents.length;\r\n                                parentTakeCorrection = parents.length - 1;\r\n                                skipContinuationGroupCount = Math.floor(skip / pageSize)\r\n                            }\r\n                        }\r\n                        if (skip >= 0) {\r\n                            if (totalOffset + groupInfoCount > options.skip) {\r\n                                skips.unshift(skip - skipContinuationGroupCount * takeCorrection - groupInfo.skipChildrenTotalCount)\r\n                            }\r\n                            if (totalOffset + groupInfoCount >= options.skip + take) {\r\n                                takes.unshift(take - takeCorrection - groupInfo.childrenTotalCount + groupInfo.skipChildrenTotalCount)\r\n                            }\r\n                        } else if (totalOffset + groupInfoCount >= options.skip + take) {\r\n                            takes.unshift(take + skip - groupInfo.childrenTotalCount)\r\n                        }\r\n                    }\r\n                    if (totalOffset <= options.skip) {\r\n                        if (parents[parents.length - 2]) {\r\n                            parents[parents.length - 2].skipChildrenTotalCount += Math.min(childrenGroupInfoCount, skip + 1 - skipContinuationGroupCount * parentTakeCorrection)\r\n                        } else {\r\n                            skipChildrenTotalCount += Math.min(childrenGroupInfoCount, skip + 1)\r\n                        }\r\n                    }\r\n                    if (totalOffset <= options.skip + take) {\r\n                        groupInfoCount = Math.min(childrenGroupInfoCount, skip + take - (skipContinuationGroupCount + 1) * parentTakeCorrection);\r\n                        if (parents[parents.length - 2]) {\r\n                            parents[parents.length - 2].childrenTotalCount += groupInfoCount\r\n                        } else {\r\n                            childrenTotalCount += groupInfoCount\r\n                        }\r\n                    }\r\n                }));\r\n                options.skip -= skipChildrenTotalCount;\r\n                options.take -= childrenTotalCount - skipChildrenTotalCount\r\n            }\r\n            options.skips = skips;\r\n            options.takes = takes\r\n        },\r\n        changeRowExpand: function(path) {\r\n            var groupInfo = this.findGroupInfo(path);\r\n            var dataSource = this._dataSource;\r\n            var remoteGroupPaging = dataSource.remoteOperations().groupPaging;\r\n            var groups = dataGridCore.normalizeSortingInfo(dataSource.group());\r\n            if (groupInfo) {\r\n                groupInfo.isExpanded = !groupInfo.isExpanded;\r\n                if (remoteGroupPaging && groupInfo.isExpanded && path.length < groups.length) {\r\n                    return loadGroupTotalCount(dataSource, {\r\n                        filter: createGroupFilter(path, {\r\n                            filter: dataSource.lastLoadOptions().filter,\r\n                            group: dataSource.group()\r\n                        }),\r\n                        group: [groups[path.length]],\r\n                        select: dataSource.select()\r\n                    }).done((function(groupCount) {\r\n                        groupInfo.count = groupCount\r\n                    }))\r\n                }\r\n                return (new Deferred).resolve()\r\n            }\r\n            return (new Deferred).reject()\r\n        },\r\n        handleDataLoading: function(options) {\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var groups = dataGridCore.normalizeSortingInfo(storeLoadOptions.group || options.loadOptions.group);\r\n            if (options.isCustomLoading || !groups.length) {\r\n                return\r\n            }\r\n            if (options.remoteOperations.grouping) {\r\n                var remotePaging = this._dataSource.remoteOperations().paging;\r\n                storeLoadOptions.group = dataGridCore.normalizeSortingInfo(storeLoadOptions.group);\r\n                storeLoadOptions.group.forEach((function(group, index) {\r\n                    var isLastGroup = index === storeLoadOptions.group.length - 1;\r\n                    group.isExpanded = !remotePaging || !isLastGroup\r\n                }))\r\n            }\r\n            options.group = options.group || groups;\r\n            if (options.remoteOperations.paging) {\r\n                options.skip = storeLoadOptions.skip;\r\n                options.take = storeLoadOptions.take;\r\n                storeLoadOptions.requireGroupCount = true;\r\n                storeLoadOptions.group = groups.slice(0, 1);\r\n                this._updatePagingOptions(options);\r\n                storeLoadOptions.skip = options.skip;\r\n                storeLoadOptions.take = options.take\r\n            } else {\r\n                options.skip = options.loadOptions.skip;\r\n                options.take = options.loadOptions.take;\r\n                this._updatePagingOptions(options)\r\n            }\r\n        },\r\n        handleDataLoadedCore: function(options, callBase) {\r\n            var loadedGroupCount = dataGridCore.normalizeSortingInfo(options.storeLoadOptions.group || options.loadOptions.group).length;\r\n            var groupCount = options.group ? options.group.length : 0;\r\n            var totalCount;\r\n            var expandedInfo = {};\r\n            if (options.isCustomLoading) {\r\n                callBase(options);\r\n                processGroupItems(this, options.data, loadedGroupCount, expandedInfo, [], options.isCustomLoading, options.storeLoadOptions.isLoadingAll)\r\n            } else {\r\n                if (!options.remoteOperations.paging) {\r\n                    this.foreachGroups((function(groupInfo) {\r\n                        groupInfo.count = 0\r\n                    }))\r\n                }\r\n                totalCount = updateGroupInfos(this, options, options.data, loadedGroupCount);\r\n                if (totalCount < 0) {\r\n                    options.data = (new Deferred).reject(errors.Error(\"E1037\"));\r\n                    return\r\n                }\r\n                if (!options.remoteOperations.paging) {\r\n                    if (loadedGroupCount && options.extra && options.loadOptions.requireTotalCount) {\r\n                        options.extra.totalCount = totalCount;\r\n                        options.extra.groupCount = options.data.length\r\n                    }\r\n                }\r\n                if (groupCount && options.storeLoadOptions.requireGroupCount && !isFinite(options.extra.groupCount)) {\r\n                    options.data = (new Deferred).reject(dataErrors.Error(\"E4022\"));\r\n                    return\r\n                }\r\n                this.updateTotalItemsCount(options);\r\n                if (!options.remoteOperations.paging) {\r\n                    this._updatePagingOptions(options)\r\n                }\r\n                callBase(options);\r\n                if (!options.remoteOperations.paging) {\r\n                    this._processPaging(options, loadedGroupCount)\r\n                }\r\n            }\r\n            loadGroupItems(this, options, loadedGroupCount, expandedInfo, 0, options.data)\r\n        },\r\n        _processSkips: function(items, skips, groupCount) {\r\n            if (!groupCount) {\r\n                return\r\n            }\r\n            var firstItem = items[0];\r\n            var skip = skips[0];\r\n            var children = firstItem && firstItem.items;\r\n            if (void 0 !== skip) {\r\n                firstItem.isContinuation = true;\r\n                if (children) {\r\n                    firstItem.items = children.slice(skip);\r\n                    this._processSkips(firstItem.items, skips.slice(1), groupCount - 1)\r\n                }\r\n            }\r\n        },\r\n        _processTakes: function(items, skips, takes, groupCount, parents) {\r\n            if (!groupCount || !items) {\r\n                return\r\n            }\r\n            parents = parents || [];\r\n            var lastItem = items[items.length - 1];\r\n            var children = lastItem && lastItem.items;\r\n            var take = takes[0];\r\n            var skip = skips[0];\r\n            if (lastItem) {\r\n                var maxTakeCount = lastItem.count - (lastItem.isContinuation && skip || 0) || children.length;\r\n                if (void 0 !== take && maxTakeCount > take) {\r\n                    lastItem.isContinuationOnNextPage = true;\r\n                    parents.forEach((function(parent) {\r\n                        parent.isContinuationOnNextPage = true\r\n                    }));\r\n                    if (children) {\r\n                        children = children.slice(0, take);\r\n                        lastItem.items = children\r\n                    }\r\n                }\r\n                parents.push(lastItem);\r\n                this._processTakes(children, skips.slice(1), takes.slice(1), groupCount - 1, parents)\r\n            }\r\n        },\r\n        _processPaging: function(options, groupCount) {\r\n            this._processSkips(options.data, options.skips, groupCount);\r\n            this._processTakes(options.data, options.skips, options.takes, groupCount)\r\n        },\r\n        isLastLevelGroupItemsPagingLocal: function() {\r\n            return false\r\n        },\r\n        sortLastLevelGroupItems: function(items) {\r\n            return items\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var group = options.group || options.storeLoadOptions.group;\r\n            var oldGroups = dataGridCore.normalizeSortingInfo(that._group);\r\n            var isExpanded;\r\n            var groupIndex;\r\n\r\n            function handleGroup(groupInfo, parents) {\r\n                if (parents.length === groupIndex + 1) {\r\n                    groupInfo.isExpanded = isExpanded\r\n                }\r\n            }\r\n            for (groupIndex = 0; groupIndex < oldGroups.length; groupIndex++) {\r\n                isExpanded = isGroupExpanded(group, groupIndex);\r\n                if (isGroupExpanded(that._group, groupIndex) !== isExpanded) {\r\n                    that.foreachGroups(handleGroup)\r\n                }\r\n            }\r\n            that.callBase.apply(this, arguments);\r\n            if (group && options.remoteOperations.paging && operationTypes.reload) {\r\n                return foreachExpandedGroups(that, (function(groupInfo) {\r\n                    var groupCountQuery = loadGroupTotalCount(dataSource, {\r\n                        filter: createGroupFilter(groupInfo.path, {\r\n                            filter: storeLoadOptions.filter,\r\n                            group: group\r\n                        }),\r\n                        group: group.slice(groupInfo.path.length),\r\n                        select: storeLoadOptions.select\r\n                    });\r\n                    var groupOffsetQuery = loadGroupTotalCount(dataSource, {\r\n                        filter: createOffsetFilter(groupInfo.path, {\r\n                            filter: storeLoadOptions.filter,\r\n                            group: group\r\n                        }, true),\r\n                        group: group.slice(groupInfo.path.length - 1, groupInfo.path.length),\r\n                        select: storeLoadOptions.select\r\n                    });\r\n                    return when(groupOffsetQuery, groupCountQuery).done((function(offset, count) {\r\n                        offset = parseInt(offset.length ? offset[0] : offset);\r\n                        count = parseInt(count.length ? count[0] : count);\r\n                        groupInfo.offset = offset;\r\n                        if (groupInfo.count !== count) {\r\n                            groupInfo.count = count;\r\n                            that.updateTotalItemsCount(options)\r\n                        }\r\n                    }))\r\n                }), true)\r\n            }\r\n        }\r\n    }\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.grouping.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    GroupingHelper as ExpandedGroupingHelper\r\n} from \"./ui.data_grid.grouping.expanded\";\r\nimport {\r\n    GroupingHelper as CollapsedGroupingHelper\r\n} from \"./ui.data_grid.grouping.collapsed\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport dataSourceAdapter from \"./ui.data_grid.data_source_adapter\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport devices from \"../../core/devices\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    registerKeyboardAction\r\n} from \"../grid_core/ui.grid_core.accessibility\";\r\nimport {\r\n    setTabIndex,\r\n    restoreFocus\r\n} from \"../shared/accessibility\";\r\nvar DATAGRID_GROUP_PANEL_CLASS = \"dx-datagrid-group-panel\";\r\nvar DATAGRID_GROUP_PANEL_MESSAGE_CLASS = \"dx-group-panel-message\";\r\nvar DATAGRID_GROUP_PANEL_ITEM_CLASS = \"dx-group-panel-item\";\r\nvar DATAGRID_GROUP_PANEL_LABEL_CLASS = \"dx-toolbar-label\";\r\nvar DATAGRID_EXPAND_CLASS = \"dx-datagrid-expand\";\r\nvar DATAGRID_GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar HEADER_FILTER_CLASS_SELECTOR = \".dx-header-filter\";\r\nvar GroupingDataSourceAdapterExtender = {\r\n    init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._initGroupingHelper()\r\n    },\r\n    _initGroupingHelper: function(options) {\r\n        var grouping = this._grouping;\r\n        var isAutoExpandAll = this.option(\"grouping.autoExpandAll\");\r\n        var isFocusedRowEnabled = this.option(\"focusedRowEnabled\");\r\n        var remoteOperations = options ? options.remoteOperations : this.remoteOperations();\r\n        var isODataRemoteOperations = remoteOperations.filtering && remoteOperations.sorting && remoteOperations.paging;\r\n        if (isODataRemoteOperations && !remoteOperations.grouping && (isAutoExpandAll || !isFocusedRowEnabled)) {\r\n            if (!grouping || grouping instanceof CollapsedGroupingHelper) {\r\n                this._grouping = new ExpandedGroupingHelper(this)\r\n            }\r\n        } else if (!grouping || grouping instanceof ExpandedGroupingHelper) {\r\n            this._grouping = new CollapsedGroupingHelper(this)\r\n        }\r\n    },\r\n    totalItemsCount: function() {\r\n        var totalCount = this.callBase();\r\n        return totalCount > 0 && this._dataSource.group() && this._dataSource.requireTotalCount() ? totalCount + this._grouping.totalCountCorrection() : totalCount\r\n    },\r\n    itemsCount: function() {\r\n        return this._dataSource.group() ? this._grouping.itemsCount() || 0 : this.callBase.apply(this, arguments)\r\n    },\r\n    allowCollapseAll: function() {\r\n        return this._grouping.allowCollapseAll()\r\n    },\r\n    isGroupItemCountable: function(item) {\r\n        return this._grouping.isGroupItemCountable(item)\r\n    },\r\n    isRowExpanded: function(key) {\r\n        var groupInfo = this._grouping.findGroupInfo(key);\r\n        return groupInfo ? groupInfo.isExpanded : !this._grouping.allowCollapseAll()\r\n    },\r\n    collapseAll: function(groupIndex) {\r\n        return this._collapseExpandAll(groupIndex, false)\r\n    },\r\n    expandAll: function(groupIndex) {\r\n        return this._collapseExpandAll(groupIndex, true)\r\n    },\r\n    _collapseExpandAll: function(groupIndex, isExpand) {\r\n        var dataSource = this._dataSource;\r\n        var group = dataSource.group();\r\n        var groups = gridCore.normalizeSortingInfo(group || []);\r\n        if (groups.length) {\r\n            for (var i = 0; i < groups.length; i++) {\r\n                if (void 0 === groupIndex || groupIndex === i) {\r\n                    groups[i].isExpanded = isExpand\r\n                } else if (group && group[i]) {\r\n                    groups[i].isExpanded = group[i].isExpanded\r\n                }\r\n            }\r\n            dataSource.group(groups);\r\n            this._grouping.foreachGroups((function(groupInfo, parents) {\r\n                if (void 0 === groupIndex || groupIndex === parents.length - 1) {\r\n                    groupInfo.isExpanded = isExpand\r\n                }\r\n            }), false, true);\r\n            this.resetPagesCache()\r\n        }\r\n        return true\r\n    },\r\n    refresh: function() {\r\n        this.callBase.apply(this, arguments);\r\n        return this._grouping.refresh.apply(this._grouping, arguments)\r\n    },\r\n    changeRowExpand: function(path) {\r\n        var dataSource = this._dataSource;\r\n        if (dataSource.group()) {\r\n            dataSource.beginLoading();\r\n            if (this._lastLoadOptions) {\r\n                this._lastLoadOptions.groupExpand = true\r\n            }\r\n            return this._changeRowExpandCore(path).always((function() {\r\n                dataSource.endLoading()\r\n            }))\r\n        }\r\n    },\r\n    _changeRowExpandCore: function(path) {\r\n        return this._grouping.changeRowExpand(path)\r\n    },\r\n    _hasGroupLevelsExpandState: function(group, isExpanded) {\r\n        if (group && Array.isArray(group)) {\r\n            for (var i = 0; i < group.length; i++) {\r\n                if (group[i].isExpanded === isExpanded) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _customizeRemoteOperations: function(options, operationTypes) {\r\n        var remoteOperations = options.remoteOperations;\r\n        if (options.storeLoadOptions.group) {\r\n            if (remoteOperations.grouping && !options.isCustomLoading) {\r\n                if (!remoteOperations.groupPaging || this._hasGroupLevelsExpandState(options.storeLoadOptions.group, true)) {\r\n                    remoteOperations.paging = false\r\n                }\r\n            }\r\n            if (!remoteOperations.grouping && (!remoteOperations.sorting || !remoteOperations.filtering || options.isCustomLoading || this._hasGroupLevelsExpandState(options.storeLoadOptions.group, false))) {\r\n                remoteOperations.paging = false\r\n            }\r\n        } else if (!options.isCustomLoading && remoteOperations.paging && operationTypes.grouping) {\r\n            this.resetCache()\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _handleDataLoading: function(options) {\r\n        this.callBase(options);\r\n        this._initGroupingHelper(options);\r\n        return this._grouping.handleDataLoading(options)\r\n    },\r\n    _handleDataLoaded: function(options) {\r\n        return this._grouping.handleDataLoaded(options, this.callBase.bind(this))\r\n    },\r\n    _handleDataLoadedCore: function(options) {\r\n        return this._grouping.handleDataLoadedCore(options, this.callBase.bind(this))\r\n    }\r\n};\r\ndataSourceAdapter.extend(GroupingDataSourceAdapterExtender);\r\nvar GroupingDataControllerExtender = {\r\n    init: function() {\r\n        this.callBase();\r\n        this.createAction(\"onRowExpanding\");\r\n        this.createAction(\"onRowExpanded\");\r\n        this.createAction(\"onRowCollapsing\");\r\n        this.createAction(\"onRowCollapsed\")\r\n    },\r\n    _beforeProcessItems: function(items) {\r\n        var groupColumns = this._columnsController.getGroupColumns();\r\n        items = this.callBase(items);\r\n        if (items.length && groupColumns.length) {\r\n            items = this._processGroupItems(items, groupColumns.length)\r\n        }\r\n        return items\r\n    },\r\n    _processItem: function(item, options) {\r\n        if (isDefined(item.groupIndex) && isString(item.rowType) && 0 === item.rowType.indexOf(\"group\")) {\r\n            item = this._processGroupItem(item, options);\r\n            options.dataIndex = 0\r\n        } else {\r\n            item = this.callBase.apply(this, arguments)\r\n        }\r\n        return item\r\n    },\r\n    _processGroupItem: function(item) {\r\n        return item\r\n    },\r\n    _processGroupItems: function(items, groupsCount, options) {\r\n        var groupedColumns = this._columnsController.getGroupColumns();\r\n        var column = groupedColumns[groupedColumns.length - groupsCount];\r\n        if (!options) {\r\n            var scrollingMode = this.option(\"scrolling.mode\");\r\n            options = {\r\n                collectContinuationItems: \"virtual\" !== scrollingMode && \"infinite\" !== scrollingMode,\r\n                resultItems: [],\r\n                path: [],\r\n                values: []\r\n            }\r\n        }\r\n        var resultItems = options.resultItems;\r\n        if (options.data) {\r\n            if (options.collectContinuationItems || !options.data.isContinuation) {\r\n                resultItems.push({\r\n                    rowType: \"group\",\r\n                    data: options.data,\r\n                    groupIndex: options.path.length - 1,\r\n                    isExpanded: !!options.data.items,\r\n                    key: options.path.slice(0),\r\n                    values: options.values.slice(0)\r\n                })\r\n            }\r\n        }\r\n        if (items) {\r\n            if (0 === groupsCount) {\r\n                resultItems.push.apply(resultItems, items)\r\n            } else {\r\n                for (var i = 0; i < items.length; i++) {\r\n                    var item = items[i];\r\n                    if (item && \"items\" in item) {\r\n                        options.data = item;\r\n                        options.path.push(item.key);\r\n                        options.values.push(column && column.deserializeValue && !column.calculateDisplayValue ? column.deserializeValue(item.key) : item.key);\r\n                        this._processGroupItems(item.items, groupsCount - 1, options);\r\n                        options.data = void 0;\r\n                        options.path.pop();\r\n                        options.values.pop()\r\n                    } else {\r\n                        resultItems.push(item)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return resultItems\r\n    },\r\n    publicMethods: function() {\r\n        return this.callBase().concat([\"collapseAll\", \"expandAll\", \"isRowExpanded\", \"expandRow\", \"collapseRow\"])\r\n    },\r\n    collapseAll: function(groupIndex) {\r\n        var dataSource = this._dataSource;\r\n        if (dataSource && dataSource.collapseAll(groupIndex)) {\r\n            dataSource.pageIndex(0);\r\n            dataSource.reload()\r\n        }\r\n    },\r\n    expandAll: function(groupIndex) {\r\n        var dataSource = this._dataSource;\r\n        if (dataSource && dataSource.expandAll(groupIndex)) {\r\n            dataSource.pageIndex(0);\r\n            dataSource.reload()\r\n        }\r\n    },\r\n    changeRowExpand: function(key) {\r\n        var that = this;\r\n        var expanded = that.isRowExpanded(key);\r\n        var args = {\r\n            key: key,\r\n            expanded: expanded\r\n        };\r\n        that.executeAction(expanded ? \"onRowCollapsing\" : \"onRowExpanding\", args);\r\n        if (!args.cancel) {\r\n            return when(that._changeRowExpandCore(key)).done((function() {\r\n                args.expanded = !expanded;\r\n                that.executeAction(expanded ? \"onRowCollapsed\" : \"onRowExpanded\", args)\r\n            }))\r\n        }\r\n        return (new Deferred).resolve()\r\n    },\r\n    _changeRowExpandCore: function(key) {\r\n        var that = this;\r\n        var dataSource = this._dataSource;\r\n        var d = new Deferred;\r\n        if (!dataSource) {\r\n            d.resolve()\r\n        } else {\r\n            when(dataSource.changeRowExpand(key)).done((function() {\r\n                that.load().done(d.resolve).fail(d.reject)\r\n            })).fail(d.reject)\r\n        }\r\n        return d\r\n    },\r\n    isRowExpanded: function(key) {\r\n        var dataSource = this._dataSource;\r\n        return dataSource && dataSource.isRowExpanded(key)\r\n    },\r\n    expandRow: function(key) {\r\n        if (!this.isRowExpanded(key)) {\r\n            return this.changeRowExpand(key)\r\n        }\r\n        return (new Deferred).resolve()\r\n    },\r\n    collapseRow: function(key) {\r\n        if (this.isRowExpanded(key)) {\r\n            return this.changeRowExpand(key)\r\n        }\r\n        return (new Deferred).resolve()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"grouping\" === args.name) {\r\n            args.name = \"dataSource\"\r\n        }\r\n        this.callBase(args)\r\n    }\r\n};\r\nvar onGroupingMenuItemClick = function(column, params) {\r\n    var columnsController = this._columnsController;\r\n    switch (params.itemData.value) {\r\n        case \"group\":\r\n            var groups = columnsController._dataSource.group() || [];\r\n            columnsController.columnOption(column.dataField, \"groupIndex\", groups.length);\r\n            break;\r\n        case \"ungroup\":\r\n            columnsController.columnOption(column.dataField, \"groupIndex\", -1);\r\n            break;\r\n        case \"ungroupAll\":\r\n            this.component.clearGrouping()\r\n    }\r\n};\r\nexport var GroupingHeaderPanelExtender = {\r\n    _getToolbarItems: function() {\r\n        var items = this.callBase();\r\n        return this._appendGroupingItem(items)\r\n    },\r\n    _appendGroupingItem: function(items) {\r\n        if (this._isGroupPanelVisible()) {\r\n            var isRendered = false;\r\n            var toolbarItem = {\r\n                template: () => {\r\n                    var $groupPanel = $(\"<div>\").addClass(DATAGRID_GROUP_PANEL_CLASS);\r\n                    this._updateGroupPanelContent($groupPanel);\r\n                    registerKeyboardAction(\"groupPanel\", this, $groupPanel, void 0, this._handleActionKeyDown.bind(this));\r\n                    return $groupPanel\r\n                },\r\n                name: \"groupPanel\",\r\n                onItemRendered: () => {\r\n                    isRendered && this.renderCompleted.fire();\r\n                    isRendered = true\r\n                },\r\n                location: \"before\",\r\n                locateInMenu: \"never\",\r\n                sortIndex: 1\r\n            };\r\n            items.push(toolbarItem)\r\n        }\r\n        return items\r\n    },\r\n    _handleActionKeyDown: function(args) {\r\n        var event = args.event;\r\n        var $target = $(event.target);\r\n        var groupColumnIndex = $target.closest(\".\".concat(DATAGRID_GROUP_PANEL_ITEM_CLASS)).index();\r\n        var column = this._columnsController.getGroupColumns()[groupColumnIndex];\r\n        var columnIndex = column && column.index;\r\n        if ($target.is(HEADER_FILTER_CLASS_SELECTOR)) {\r\n            this.getController(\"headerFilter\").showHeaderFilterMenu(columnIndex, true)\r\n        } else {\r\n            this._processGroupItemAction(columnIndex)\r\n        }\r\n        event.preventDefault()\r\n    },\r\n    _isGroupPanelVisible: function() {\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        var isVisible;\r\n        if (groupPanelOptions) {\r\n            isVisible = groupPanelOptions.visible;\r\n            if (\"auto\" === isVisible) {\r\n                isVisible = \"desktop\" === devices.current().deviceType ? true : false\r\n            }\r\n        }\r\n        return isVisible\r\n    },\r\n    _renderGroupPanelItems: function($groupPanel, groupColumns) {\r\n        var that = this;\r\n        $groupPanel.empty();\r\n        each(groupColumns, (function(index, groupColumn) {\r\n            that._createGroupPanelItem($groupPanel, groupColumn)\r\n        }));\r\n        restoreFocus(this)\r\n    },\r\n    _createGroupPanelItem: function($rootElement, groupColumn) {\r\n        var $groupPanelItem = $(\"<div>\").addClass(groupColumn.cssClass).addClass(DATAGRID_GROUP_PANEL_ITEM_CLASS).data(\"columnData\", groupColumn).appendTo($rootElement).text(groupColumn.caption);\r\n        setTabIndex(this, $groupPanelItem);\r\n        return $groupPanelItem\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        if (!this._requireReady && !gridCore.checkChanges(e.optionNames, [\"width\", \"visibleWidth\"])) {\r\n            var $toolbarElement = this.element();\r\n            var $groupPanel = $toolbarElement && $toolbarElement.find(\".\" + DATAGRID_GROUP_PANEL_CLASS);\r\n            if ($groupPanel && $groupPanel.length) {\r\n                this._updateGroupPanelContent($groupPanel);\r\n                this.renderCompleted.fire()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    _updateGroupPanelContent: function($groupPanel) {\r\n        var groupColumns = this.getController(\"columns\").getGroupColumns();\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        this._renderGroupPanelItems($groupPanel, groupColumns);\r\n        if (groupPanelOptions.allowColumnDragging && !groupColumns.length) {\r\n            $(\"<div>\").addClass(DATAGRID_GROUP_PANEL_MESSAGE_CLASS).text(groupPanelOptions.emptyPanelText).appendTo($groupPanel);\r\n            $groupPanel.closest(\".\" + DATAGRID_GROUP_PANEL_LABEL_CLASS).css(\"maxWidth\", \"none\");\r\n            this.updateToolbarDimensions()\r\n        }\r\n    },\r\n    allowDragging: function(column) {\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        return this._isGroupPanelVisible() && groupPanelOptions.allowColumnDragging && column && column.allowGrouping\r\n    },\r\n    getColumnElements: function() {\r\n        var $element = this.element();\r\n        return $element && $element.find(\".\" + DATAGRID_GROUP_PANEL_ITEM_CLASS)\r\n    },\r\n    getColumns: function() {\r\n        return this.getController(\"columns\").getGroupColumns()\r\n    },\r\n    getBoundingRect: function() {\r\n        var $element = this.element();\r\n        if ($element && $element.find(\".\" + DATAGRID_GROUP_PANEL_CLASS).length) {\r\n            var offset = $element.offset();\r\n            return {\r\n                top: offset.top,\r\n                bottom: offset.top + getHeight($element)\r\n            }\r\n        }\r\n        return null\r\n    },\r\n    getName: function() {\r\n        return \"group\"\r\n    },\r\n    getContextMenuItems: function(options) {\r\n        var contextMenuEnabled = this.option(\"grouping.contextMenuEnabled\");\r\n        var $groupedColumnElement = $(options.targetElement).closest(\".\" + DATAGRID_GROUP_PANEL_ITEM_CLASS);\r\n        var items;\r\n        if ($groupedColumnElement.length) {\r\n            options.column = $groupedColumnElement.data(\"columnData\")\r\n        }\r\n        if (contextMenuEnabled && options.column) {\r\n            var column = options.column;\r\n            var isGroupingAllowed = isDefined(column.allowGrouping) ? column.allowGrouping : true;\r\n            if (isGroupingAllowed) {\r\n                var isColumnGrouped = isDefined(column.groupIndex) && column.groupIndex > -1;\r\n                var groupingTexts = this.option(\"grouping.texts\");\r\n                var onItemClick = onGroupingMenuItemClick.bind(this, column);\r\n                items = [{\r\n                    text: groupingTexts.ungroup,\r\n                    value: \"ungroup\",\r\n                    disabled: !isColumnGrouped,\r\n                    onItemClick: onItemClick\r\n                }, {\r\n                    text: groupingTexts.ungroupAll,\r\n                    value: \"ungroupAll\",\r\n                    onItemClick: onItemClick\r\n                }]\r\n            }\r\n        }\r\n        return items\r\n    },\r\n    isVisible: function() {\r\n        return this.callBase() || this._isGroupPanelVisible()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"groupPanel\" === args.name) {\r\n            this._invalidate();\r\n            args.handled = true\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    }\r\n};\r\nvar GroupingRowsViewExtender = {\r\n    getContextMenuItems: function(options) {\r\n        var contextMenuEnabled = this.option(\"grouping.contextMenuEnabled\");\r\n        var items;\r\n        if (contextMenuEnabled && options.row && \"group\" === options.row.rowType) {\r\n            var columnsController = this._columnsController;\r\n            var column = columnsController.columnOption(\"groupIndex:\" + options.row.groupIndex);\r\n            if (column && column.allowGrouping) {\r\n                var groupingTexts = this.option(\"grouping.texts\");\r\n                var onItemClick = onGroupingMenuItemClick.bind(this, column);\r\n                items = [];\r\n                items.push({\r\n                    text: groupingTexts.ungroup,\r\n                    value: \"ungroup\",\r\n                    onItemClick: onItemClick\r\n                }, {\r\n                    text: groupingTexts.ungroupAll,\r\n                    value: \"ungroupAll\",\r\n                    onItemClick: onItemClick\r\n                })\r\n            }\r\n        }\r\n        return items\r\n    },\r\n    _rowClick: function(e) {\r\n        var expandMode = this.option(\"grouping.expandMode\");\r\n        var scrollingMode = this.option(\"scrolling.mode\");\r\n        var isGroupRowStateChanged = \"infinite\" !== scrollingMode && \"rowClick\" === expandMode && $(e.event.target).closest(\".\" + DATAGRID_GROUP_ROW_CLASS).length;\r\n        var isExpandButtonClicked = $(e.event.target).closest(\".\" + DATAGRID_EXPAND_CLASS).length;\r\n        if (isGroupRowStateChanged || isExpandButtonClicked) {\r\n            this._changeGroupRowState(e)\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _changeGroupRowState: function(e) {\r\n        var dataController = this.getController(\"data\");\r\n        var row = dataController.items()[e.rowIndex];\r\n        var allowCollapsing = this._columnsController.columnOption(\"groupIndex:\" + row.groupIndex, \"allowCollapsing\");\r\n        if (\"data\" === row.rowType || \"group\" === row.rowType && false !== allowCollapsing) {\r\n            dataController.changeRowExpand(row.key, true);\r\n            e.event.preventDefault();\r\n            e.handled = true\r\n        }\r\n    }\r\n};\r\nvar columnHeadersViewExtender = {\r\n    getContextMenuItems: function(options) {\r\n        var contextMenuEnabled = this.option(\"grouping.contextMenuEnabled\");\r\n        var items = this.callBase(options);\r\n        if (contextMenuEnabled && options.row && (\"header\" === options.row.rowType || \"detailAdaptive\" === options.row.rowType)) {\r\n            var column = options.column;\r\n            if (!column.command && (!isDefined(column.allowGrouping) || column.allowGrouping)) {\r\n                var groupingTexts = this.option(\"grouping.texts\");\r\n                var isColumnGrouped = isDefined(column.groupIndex) && column.groupIndex > -1;\r\n                var onItemClick = onGroupingMenuItemClick.bind(this, column);\r\n                items = items || [];\r\n                items.push({\r\n                    text: groupingTexts.groupByThisColumn,\r\n                    value: \"group\",\r\n                    beginGroup: true,\r\n                    disabled: isColumnGrouped,\r\n                    onItemClick: onItemClick\r\n                });\r\n                if (column.showWhenGrouped) {\r\n                    items.push({\r\n                        text: groupingTexts.ungroup,\r\n                        value: \"ungroup\",\r\n                        disabled: !isColumnGrouped,\r\n                        onItemClick: onItemClick\r\n                    })\r\n                }\r\n                items.push({\r\n                    text: groupingTexts.ungroupAll,\r\n                    value: \"ungroupAll\",\r\n                    onItemClick: onItemClick\r\n                })\r\n            }\r\n        }\r\n        return items\r\n    }\r\n};\r\ngridCore.registerModule(\"grouping\", {\r\n    defaultOptions: function() {\r\n        return {\r\n            grouping: {\r\n                autoExpandAll: true,\r\n                allowCollapsing: true,\r\n                contextMenuEnabled: false,\r\n                expandMode: \"buttonClick\",\r\n                texts: {\r\n                    groupContinuesMessage: messageLocalization.format(\"dxDataGrid-groupContinuesMessage\"),\r\n                    groupContinuedMessage: messageLocalization.format(\"dxDataGrid-groupContinuedMessage\"),\r\n                    groupByThisColumn: messageLocalization.format(\"dxDataGrid-groupHeaderText\"),\r\n                    ungroup: messageLocalization.format(\"dxDataGrid-ungroupHeaderText\"),\r\n                    ungroupAll: messageLocalization.format(\"dxDataGrid-ungroupAllText\")\r\n                }\r\n            },\r\n            groupPanel: {\r\n                visible: false,\r\n                emptyPanelText: messageLocalization.format(\"dxDataGrid-groupPanelEmptyText\"),\r\n                allowColumnDragging: true\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: GroupingDataControllerExtender,\r\n            columns: {\r\n                _getExpandColumnOptions: function() {\r\n                    var options = this.callBase.apply(this, arguments);\r\n                    options.cellTemplate = gridCore.getExpandCellTemplate();\r\n                    return options\r\n                }\r\n            },\r\n            editing: {\r\n                _isProcessedItem: function(item) {\r\n                    return isDefined(item.groupIndex) && isString(item.rowType) && 0 === item.rowType.indexOf(\"group\")\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            headerPanel: GroupingHeaderPanelExtender,\r\n            rowsView: GroupingRowsViewExtender,\r\n            columnHeadersView: columnHeadersViewExtender\r\n        }\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.master_detail.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    grep\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar MASTER_DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar ROW_LINES_CLASS = \"dx-row-lines\";\r\nexport var masterDetailModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            masterDetail: {\r\n                enabled: false,\r\n                autoExpandAll: false,\r\n                template: null\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            columns: {\r\n                _getExpandColumnsCore: function() {\r\n                    var expandColumns = this.callBase();\r\n                    if (this.option(\"masterDetail.enabled\")) {\r\n                        expandColumns.push({\r\n                            type: \"detailExpand\",\r\n                            cellTemplate: gridCoreUtils.getExpandCellTemplate()\r\n                        })\r\n                    }\r\n                    return expandColumns\r\n                }\r\n            },\r\n            data: function() {\r\n                var initMasterDetail = function(that) {\r\n                    that._expandedItems = [];\r\n                    that._isExpandAll = that.option(\"masterDetail.autoExpandAll\")\r\n                };\r\n                return {\r\n                    init: function() {\r\n                        initMasterDetail(this);\r\n                        this.callBase()\r\n                    },\r\n                    expandAll: function(groupIndex) {\r\n                        var that = this;\r\n                        if (groupIndex < 0) {\r\n                            that._isExpandAll = true;\r\n                            that._expandedItems = [];\r\n                            that.updateItems()\r\n                        } else {\r\n                            that.callBase.apply(that, arguments)\r\n                        }\r\n                    },\r\n                    collapseAll: function(groupIndex) {\r\n                        var that = this;\r\n                        if (groupIndex < 0) {\r\n                            that._isExpandAll = false;\r\n                            that._expandedItems = [];\r\n                            that.updateItems()\r\n                        } else {\r\n                            that.callBase.apply(that, arguments)\r\n                        }\r\n                    },\r\n                    isRowExpanded: function(key) {\r\n                        var that = this;\r\n                        var expandIndex = gridCoreUtils.getIndexByKey(key, that._expandedItems);\r\n                        if (Array.isArray(key)) {\r\n                            return that.callBase.apply(that, arguments)\r\n                        } else {\r\n                            return !!(that._isExpandAll ^ (expandIndex >= 0 && that._expandedItems[expandIndex].visible))\r\n                        }\r\n                    },\r\n                    _getRowIndicesForExpand: function(key) {\r\n                        var rowIndex = this.getRowIndexByKey(key);\r\n                        return [rowIndex, rowIndex + 1]\r\n                    },\r\n                    _changeRowExpandCore: function(key) {\r\n                        var that = this;\r\n                        var result;\r\n                        if (Array.isArray(key)) {\r\n                            result = that.callBase.apply(that, arguments)\r\n                        } else {\r\n                            var expandIndex = gridCoreUtils.getIndexByKey(key, that._expandedItems);\r\n                            if (expandIndex >= 0) {\r\n                                var visible = that._expandedItems[expandIndex].visible;\r\n                                that._expandedItems[expandIndex].visible = !visible\r\n                            } else {\r\n                                that._expandedItems.push({\r\n                                    key: key,\r\n                                    visible: true\r\n                                })\r\n                            }\r\n                            that.updateItems({\r\n                                changeType: \"update\",\r\n                                rowIndices: that._getRowIndicesForExpand(key)\r\n                            });\r\n                            result = (new Deferred).resolve()\r\n                        }\r\n                        return result\r\n                    },\r\n                    _processDataItem: function(data, options) {\r\n                        var that = this;\r\n                        var dataItem = that.callBase.apply(that, arguments);\r\n                        dataItem.isExpanded = that.isRowExpanded(dataItem.key);\r\n                        if (void 0 === options.detailColumnIndex) {\r\n                            options.detailColumnIndex = -1;\r\n                            each(options.visibleColumns, (function(index, column) {\r\n                                if (\"expand\" === column.command && !isDefined(column.groupIndex)) {\r\n                                    options.detailColumnIndex = index;\r\n                                    return false\r\n                                }\r\n                            }))\r\n                        }\r\n                        if (options.detailColumnIndex >= 0) {\r\n                            dataItem.values[options.detailColumnIndex] = dataItem.isExpanded\r\n                        }\r\n                        return dataItem\r\n                    },\r\n                    _processItems: function(items, change) {\r\n                        var that = this;\r\n                        var changeType = change.changeType;\r\n                        var result = [];\r\n                        items = that.callBase.apply(that, arguments);\r\n                        if (\"loadingAll\" === changeType) {\r\n                            return items\r\n                        }\r\n                        if (\"refresh\" === changeType) {\r\n                            that._expandedItems = grep(that._expandedItems, (function(item) {\r\n                                return item.visible\r\n                            }))\r\n                        }\r\n                        each(items, (function(index, item) {\r\n                            result.push(item);\r\n                            var expandIndex = gridCoreUtils.getIndexByKey(item.key, that._expandedItems);\r\n                            if (\"data\" === item.rowType && (item.isExpanded || expandIndex >= 0) && !item.isNewRow) {\r\n                                result.push({\r\n                                    visible: item.isExpanded,\r\n                                    rowType: \"detail\",\r\n                                    key: item.key,\r\n                                    data: item.data,\r\n                                    values: []\r\n                                })\r\n                            }\r\n                        }));\r\n                        return result\r\n                    },\r\n                    optionChanged: function(args) {\r\n                        var isEnabledChanged;\r\n                        var isAutoExpandAllChanged;\r\n                        if (\"masterDetail\" === args.name) {\r\n                            args.name = \"dataSource\";\r\n                            switch (args.fullName) {\r\n                                case \"masterDetail\":\r\n                                    var value = args.value || {};\r\n                                    var previousValue = args.previousValue || {};\r\n                                    isEnabledChanged = value.enabled !== previousValue.enabled;\r\n                                    isAutoExpandAllChanged = value.autoExpandAll !== previousValue.autoExpandAll;\r\n                                    break;\r\n                                case \"masterDetail.template\":\r\n                                    initMasterDetail(this);\r\n                                    break;\r\n                                case \"masterDetail.enabled\":\r\n                                    isEnabledChanged = true;\r\n                                    break;\r\n                                case \"masterDetail.autoExpandAll\":\r\n                                    isAutoExpandAllChanged = true\r\n                            }\r\n                            if (isEnabledChanged || isAutoExpandAllChanged) {\r\n                                initMasterDetail(this)\r\n                            }\r\n                        }\r\n                        this.callBase(args)\r\n                    }\r\n                }\r\n            }(),\r\n            resizing: {\r\n                fireContentReadyAction: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._updateParentDataGrids(this.component.$element())\r\n                },\r\n                _updateParentDataGrids: function($element) {\r\n                    var $masterDetailRow = $element.closest(\".\" + MASTER_DETAIL_ROW_CLASS);\r\n                    if ($masterDetailRow.length) {\r\n                        when(this._updateMasterDataGrid($masterDetailRow, $element)).done(() => {\r\n                            this._updateParentDataGrids($masterDetailRow.parent())\r\n                        })\r\n                    }\r\n                },\r\n                _updateMasterDataGrid: function($masterDetailRow, $detailElement) {\r\n                    var masterRowOptions = $($masterDetailRow).data(\"options\");\r\n                    var masterDataGrid = $($masterDetailRow).closest(\".\" + this.getWidgetContainerClass()).parent().data(\"dxDataGrid\");\r\n                    if (masterRowOptions && masterDataGrid) {\r\n                        if (masterDataGrid.getView(\"rowsView\").isFixedColumns()) {\r\n                            return this._updateFixedMasterDetailGrids(masterDataGrid, masterRowOptions.rowIndex, $detailElement)\r\n                        } else {\r\n                            if (true === masterDataGrid.option(\"scrolling.useNative\")) {\r\n                                return masterDataGrid.updateDimensions()\r\n                            }\r\n                            var scrollable = masterDataGrid.getScrollable();\r\n                            return null === scrollable || void 0 === scrollable ? void 0 : scrollable.update()\r\n                        }\r\n                    }\r\n                },\r\n                _updateFixedMasterDetailGrids: function(masterDataGrid, masterRowIndex, $detailElement) {\r\n                    var $rows = $(masterDataGrid.getRowElement(masterRowIndex));\r\n                    var $tables = $(masterDataGrid.getView(\"rowsView\").getTableElements());\r\n                    var rowsNotEqual = 2 === (null === $rows || void 0 === $rows ? void 0 : $rows.length) && getHeight($rows.eq(0)) !== getHeight($rows.eq(1));\r\n                    var tablesNotEqual = 2 === (null === $tables || void 0 === $tables ? void 0 : $tables.length) && getHeight($tables.eq(0)) !== getHeight($tables.eq(1));\r\n                    if (rowsNotEqual || tablesNotEqual) {\r\n                        var detailElementWidth = getWidth($detailElement);\r\n                        return masterDataGrid.updateDimensions().done(() => {\r\n                            var isDetailHorizontalScrollCanBeShown = this.option(\"columnAutoWidth\") && true === masterDataGrid.option(\"scrolling.useNative\");\r\n                            var isDetailGridWidthChanged = isDetailHorizontalScrollCanBeShown && detailElementWidth !== getWidth($detailElement);\r\n                            if (isDetailHorizontalScrollCanBeShown && isDetailGridWidthChanged) {\r\n                                this.updateDimensions()\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                _toggleBestFitMode: function(isBestFit) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.option(\"masterDetail.template\")) {\r\n                        var $rowsTable = this._rowsView.getTableElement();\r\n                        if ($rowsTable) {\r\n                            $rowsTable.find(\".dx-master-detail-cell\").css(\"maxWidth\", isBestFit ? 0 : \"\")\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _getCellTemplate: function(options) {\r\n                    var that = this;\r\n                    var column = options.column;\r\n                    var editingController = that.getController(\"editing\");\r\n                    var isEditRow = editingController && editingController.isEditRow(options.rowIndex);\r\n                    var template;\r\n                    if (\"detail\" === column.command && !isEditRow) {\r\n                        template = that.option(\"masterDetail.template\") || {\r\n                            allowRenderToDetachedContainer: false,\r\n                            render: that._getDefaultTemplate(column)\r\n                        }\r\n                    } else {\r\n                        template = that.callBase.apply(that, arguments)\r\n                    }\r\n                    return template\r\n                },\r\n                _isDetailRow: function(row) {\r\n                    return row && row.rowType && 0 === row.rowType.indexOf(\"detail\")\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row && this._isDetailRow(row)) {\r\n                        this.option(\"showRowLines\") && $row.addClass(ROW_LINES_CLASS);\r\n                        $row.addClass(MASTER_DETAIL_ROW_CLASS);\r\n                        if (isDefined(row.visible)) {\r\n                            $row.toggle(row.visible)\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _renderCells: function($row, options) {\r\n                    var row = options.row;\r\n                    var $detailCell;\r\n                    var visibleColumns = this._columnsController.getVisibleColumns();\r\n                    if (row.rowType && this._isDetailRow(row)) {\r\n                        if (this._needRenderCell(0, options.columnIndices)) {\r\n                            $detailCell = this._renderCell($row, {\r\n                                value: null,\r\n                                row: row,\r\n                                rowIndex: row.rowIndex,\r\n                                column: {\r\n                                    command: \"detail\"\r\n                                },\r\n                                columnIndex: 0\r\n                            });\r\n                            $detailCell.addClass(CELL_FOCUS_DISABLED_CLASS).addClass(MASTER_DETAIL_CELL_CLASS).attr(\"colSpan\", visibleColumns.length)\r\n                        }\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.master_detail.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    masterDetailModule\r\n} from \"../grid_core/ui.grid_core.master_detail\";\r\ngridCore.registerModule(\"masterDetail\", masterDetailModule);\r\n","/**\r\n * DevExtreme (esm/ui/shared/ui.editor_factory_mixin.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDefined,\r\n    isObject,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport devices from \"../../core/devices\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    normalizeDataSourceOptions\r\n} from \"../../data/data_source/utils\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nvar {\r\n    isWrapped: isWrapped\r\n} = variableWrapper;\r\nimport \"../text_box\";\r\nimport \"../number_box\";\r\nimport \"../check_box\";\r\nimport \"../select_box\";\r\nimport \"../date_box\";\r\nvar CHECKBOX_SIZE_CLASS = \"checkbox-size\";\r\nvar EDITOR_INLINE_BLOCK = \"dx-editor-inline-block\";\r\nvar EditorFactoryMixin = function() {\r\n    var getResultConfig = function(config, options) {\r\n        return extend(config, {\r\n            readOnly: options.readOnly,\r\n            placeholder: options.placeholder,\r\n            inputAttr: {\r\n                id: options.id\r\n            },\r\n            tabIndex: options.tabIndex\r\n        }, options.editorOptions)\r\n    };\r\n    var checkEnterBug = function() {\r\n        return browser.mozilla || devices.real().ios\r\n    };\r\n    var getTextEditorConfig = function(options) {\r\n        var data = {};\r\n        var isEnterBug = checkEnterBug();\r\n        var sharedData = options.sharedData || data;\r\n        return getResultConfig({\r\n            placeholder: options.placeholder,\r\n            width: options.width,\r\n            value: options.value,\r\n            onValueChanged: function(e) {\r\n                var needDelayedUpdate = \"filterRow\" === options.parentType || \"searchPanel\" === options.parentType;\r\n                var isInputOrKeyUpEvent = e.event && (\"input\" === e.event.type || \"keyup\" === e.event.type);\r\n                var updateValue = function(e, notFireEvent) {\r\n                    options && options.setValue(e.value, notFireEvent)\r\n                };\r\n                clearTimeout(data.valueChangeTimeout);\r\n                if (isInputOrKeyUpEvent && needDelayedUpdate) {\r\n                    sharedData.valueChangeTimeout = data.valueChangeTimeout = setTimeout((function() {\r\n                        updateValue(e, data.valueChangeTimeout !== sharedData.valueChangeTimeout)\r\n                    }), isDefined(options.updateValueTimeout) ? options.updateValueTimeout : 0)\r\n                } else {\r\n                    updateValue(e)\r\n                }\r\n            },\r\n            onKeyDown: function(e) {\r\n                if (isEnterBug && \"enter\" === normalizeKeyName(e.event)) {\r\n                    eventsEngine.trigger($(e.component._input()), \"change\")\r\n                }\r\n            },\r\n            valueChangeEvent: \"change\" + (\"filterRow\" === options.parentType ? \" keyup input\" : \"\")\r\n        }, options)\r\n    };\r\n    var prepareBooleanEditor = function(options) {\r\n        if (\"filterRow\" === options.parentType || \"filterBuilder\" === options.parentType) {\r\n            prepareSelectBox(extend(options, {\r\n                lookup: {\r\n                    displayExpr: function(data) {\r\n                        if (true === data) {\r\n                            return options.trueText || \"true\"\r\n                        } else if (false === data) {\r\n                            return options.falseText || \"false\"\r\n                        }\r\n                    },\r\n                    dataSource: [true, false]\r\n                }\r\n            }))\r\n        } else {\r\n            ! function(options) {\r\n                options.editorName = \"dxCheckBox\";\r\n                options.editorOptions = getResultConfig({\r\n                    elementAttr: {\r\n                        id: options.id\r\n                    },\r\n                    value: isDefined(options.value) ? options.value : void 0,\r\n                    hoverStateEnabled: !options.readOnly,\r\n                    focusStateEnabled: !options.readOnly,\r\n                    activeStateEnabled: false,\r\n                    onValueChanged: function(e) {\r\n                        options.setValue && options.setValue(e.value, e)\r\n                    }\r\n                }, options)\r\n            }(options)\r\n        }\r\n    };\r\n\r\n    function prepareSelectBox(options) {\r\n        var lookup = options.lookup;\r\n        var displayGetter;\r\n        var dataSource;\r\n        var postProcess;\r\n        var isFilterRow = \"filterRow\" === options.parentType;\r\n        if (lookup) {\r\n            displayGetter = compileGetter(lookup.displayExpr);\r\n            dataSource = lookup.dataSource;\r\n            if (isFunction(dataSource) && !isWrapped(dataSource)) {\r\n                dataSource = dataSource(options.row || {});\r\n                ! function(options) {\r\n                    if (options.row && options.row.watch && \"dataRow\" === options.parentType) {\r\n                        var editorOptions = options.editorOptions || {};\r\n                        options.editorOptions = editorOptions;\r\n                        var selectBox;\r\n                        var onInitialized = editorOptions.onInitialized;\r\n                        editorOptions.onInitialized = function(e) {\r\n                            onInitialized && onInitialized.apply(this, arguments);\r\n                            selectBox = e.component;\r\n                            selectBox.on(\"disposing\", stopWatch)\r\n                        };\r\n                        var dataSource;\r\n                        var stopWatch = options.row.watch(() => {\r\n                            dataSource = options.lookup.dataSource(options.row);\r\n                            return dataSource && dataSource.filter\r\n                        }, () => {\r\n                            selectBox.option(\"dataSource\", dataSource)\r\n                        }, row => {\r\n                            options.row = row\r\n                        })\r\n                    }\r\n                }(options)\r\n            }\r\n            if (isObject(dataSource) || Array.isArray(dataSource)) {\r\n                dataSource = normalizeDataSourceOptions(dataSource);\r\n                if (isFilterRow) {\r\n                    postProcess = dataSource.postProcess;\r\n                    dataSource.postProcess = function(items) {\r\n                        if (0 === this.pageIndex()) {\r\n                            items = items.slice(0);\r\n                            items.unshift(null)\r\n                        }\r\n                        if (postProcess) {\r\n                            return postProcess.call(this, items)\r\n                        }\r\n                        return items\r\n                    }\r\n                }\r\n            }\r\n            var allowClearing = Boolean(lookup.allowClearing && !isFilterRow);\r\n            options.editorName = \"dxSelectBox\";\r\n            options.editorOptions = getResultConfig({\r\n                searchEnabled: true,\r\n                value: options.value,\r\n                valueExpr: options.lookup.valueExpr,\r\n                searchExpr: options.lookup.searchExpr || options.lookup.displayExpr,\r\n                allowClearing: allowClearing,\r\n                showClearButton: allowClearing,\r\n                displayExpr: function(data) {\r\n                    if (null === data) {\r\n                        return options.showAllText\r\n                    }\r\n                    return displayGetter(data)\r\n                },\r\n                dataSource: dataSource,\r\n                onValueChanged: function(e) {\r\n                    var params = [e.value];\r\n                    !isFilterRow && params.push(e.component.option(\"text\"));\r\n                    options.setValue.apply(this, params)\r\n                }\r\n            }, options)\r\n        }\r\n    }\r\n    return {\r\n        createEditor: function($container, options) {\r\n            options.cancel = false;\r\n            options.editorElement = getPublicElement($container);\r\n            if (!isDefined(options.tabIndex)) {\r\n                options.tabIndex = this.option(\"tabIndex\")\r\n            }\r\n            if (options.lookup) {\r\n                prepareSelectBox(options)\r\n            } else {\r\n                switch (options.dataType) {\r\n                    case \"date\":\r\n                    case \"datetime\":\r\n                        ! function(options) {\r\n                            options.editorName = \"dxDateBox\";\r\n                            options.editorOptions = getResultConfig({\r\n                                value: options.value,\r\n                                onValueChanged: function(args) {\r\n                                    options.setValue(args.value)\r\n                                },\r\n                                onKeyDown: function(e) {\r\n                                    if (checkEnterBug() && \"enter\" === normalizeKeyName(e.event)) {\r\n                                        e.component.blur();\r\n                                        e.component.focus()\r\n                                    }\r\n                                },\r\n                                displayFormat: options.format,\r\n                                type: options.dataType,\r\n                                dateSerializationFormat: null,\r\n                                width: \"filterBuilder\" === options.parentType ? void 0 : \"auto\"\r\n                            }, options)\r\n                        }(options);\r\n                        break;\r\n                    case \"boolean\":\r\n                        prepareBooleanEditor(options);\r\n                        break;\r\n                    case \"number\":\r\n                        ! function(options) {\r\n                            var config = getTextEditorConfig(options);\r\n                            config.value = isDefined(options.value) ? options.value : null;\r\n                            options.editorName = \"dxNumberBox\";\r\n                            options.editorOptions = config\r\n                        }(options);\r\n                        break;\r\n                    default:\r\n                        ! function(options) {\r\n                            var config = getTextEditorConfig(options);\r\n                            var isSearching = \"searchPanel\" === options.parentType;\r\n                            if (options.editorType && \"dxTextBox\" !== options.editorType) {\r\n                                config.value = options.value\r\n                            } else {\r\n                                config.value = (value = options.value, isDefined(value) ? value.toString() : \"\")\r\n                            }\r\n                            var value;\r\n                            config.valueChangeEvent += isSearching ? \" keyup input search\" : \"\";\r\n                            config.mode = config.mode || (isSearching ? \"search\" : \"text\");\r\n                            options.editorName = \"dxTextBox\";\r\n                            options.editorOptions = config\r\n                        }(options)\r\n                }\r\n            }\r\n            if (\"dataRow\" === options.parentType && options.editorType) {\r\n                options.editorName = options.editorType\r\n            }\r\n            this.executeAction(\"onEditorPreparing\", options);\r\n            if (options.cancel) {\r\n                return\r\n            }\r\n            if (\"dataRow\" === options.parentType && !options.isOnForm && !isDefined(options.editorOptions.showValidationMark)) {\r\n                options.editorOptions.showValidationMark = false\r\n            }! function(that, options) {\r\n                var $editorElement = $(options.editorElement);\r\n                if (options.editorName && options.editorOptions && $editorElement[options.editorName]) {\r\n                    if (\"dxCheckBox\" === options.editorName || \"dxSwitch\" === options.editorName) {\r\n                        if (!options.isOnForm) {\r\n                            $editorElement.addClass(that.addWidgetPrefix(CHECKBOX_SIZE_CLASS));\r\n                            $editorElement.parent().addClass(EDITOR_INLINE_BLOCK)\r\n                        }\r\n                    }\r\n                    that._createComponent($editorElement, options.editorName, options.editorOptions);\r\n                    if (\"dxDateBox\" === options.editorName) {\r\n                        var dateBox = $editorElement.dxDateBox(\"instance\");\r\n                        var defaultEnterKeyHandler = dateBox._supportedKeys().enter;\r\n                        dateBox.registerKeyHandler(\"enter\", e => {\r\n                            if (dateBox.option(\"opened\")) {\r\n                                defaultEnterKeyHandler(e)\r\n                            }\r\n                            return true\r\n                        })\r\n                    }\r\n                    if (\"dxTextArea\" === options.editorName) {\r\n                        $editorElement.dxTextArea(\"instance\").registerKeyHandler(\"enter\", (function(event) {\r\n                            if (\"enter\" === normalizeKeyName(event) && !event.ctrlKey && !event.shiftKey) {\r\n                                event.stopPropagation()\r\n                            }\r\n                        }))\r\n                    }\r\n                }\r\n            }(this, options);\r\n            this.executeAction(\"onEditorPrepared\", options)\r\n        }\r\n    }\r\n}();\r\nexport default EditorFactoryMixin;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editor_factory.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    setOuterWidth,\r\n    getOuterWidth,\r\n    setOuterHeight,\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport positionUtils from \"../../animation/position\";\r\nimport {\r\n    addNamespace,\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport EditorFactoryMixin from \"../shared/ui.editor_factory_mixin\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nvar EDITOR_INLINE_BLOCK = \"dx-editor-inline-block\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FOCUS_OVERLAY_CLASS = \"focus-overlay\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar FOCUSED_ELEMENT_CLASS = \"dx-focused\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar MODULE_NAMESPACE = \"dxDataGridEditorFactory\";\r\nvar UPDATE_FOCUS_EVENTS = addNamespace([pointerEvents.down, \"focusin\", clickEventName].join(\" \"), MODULE_NAMESPACE);\r\nvar DX_HIDDEN = \"dx-hidden\";\r\nvar EditorFactory = modules.ViewController.inherit({\r\n    _getFocusedElement: function($dataGridElement) {\r\n        var rowSelector = this.option(\"focusedRowEnabled\") ? \"tr[tabindex]:focus\" : \"tr[tabindex]:not(.dx-data-row):focus\";\r\n        var focusedElementSelector = \"td[tabindex]:focus, \".concat(rowSelector, \", input:focus, textarea:focus, .dx-lookup-field:focus, .dx-checkbox:focus, .dx-switch:focus, .dx-dropdownbutton .dx-buttongroup:focus\");\r\n        return $dataGridElement.find(focusedElementSelector)\r\n    },\r\n    _getFocusCellSelector: function() {\r\n        return \".dx-row > td\"\r\n    },\r\n    _updateFocusCore: function() {\r\n        var $focus = this._$focusedElement;\r\n        var $dataGridElement = this.component && this.component.$element();\r\n        var $focusCell;\r\n        var hideBorders;\r\n        if ($dataGridElement) {\r\n            $focus = this._getFocusedElement($dataGridElement);\r\n            if ($focus.length) {\r\n                if (!$focus.hasClass(CELL_FOCUS_DISABLED_CLASS) && !$focus.hasClass(ROW_CLASS)) {\r\n                    $focusCell = $focus.closest(this._getFocusCellSelector() + \", .\" + CELL_FOCUS_DISABLED_CLASS);\r\n                    hideBorders = $focusCell.get(0) !== $focus.get(0) && $focusCell.hasClass(EDITOR_INLINE_BLOCK);\r\n                    $focus = $focusCell\r\n                }\r\n                if ($focus.length && !$focus.hasClass(CELL_FOCUS_DISABLED_CLASS)) {\r\n                    this.focus($focus, hideBorders);\r\n                    return\r\n                }\r\n            }\r\n        }\r\n        this.loseFocus()\r\n    },\r\n    _updateFocus: function(e) {\r\n        var that = this;\r\n        var isFocusOverlay = e && e.event && $(e.event.target).hasClass(that.addWidgetPrefix(FOCUS_OVERLAY_CLASS));\r\n        that._isFocusOverlay = that._isFocusOverlay || isFocusOverlay;\r\n        clearTimeout(that._updateFocusTimeoutID);\r\n        that._updateFocusTimeoutID = setTimeout((function() {\r\n            delete that._updateFocusTimeoutID;\r\n            if (!that._isFocusOverlay) {\r\n                that._updateFocusCore()\r\n            }\r\n            that._isFocusOverlay = false\r\n        }))\r\n    },\r\n    _updateFocusOverlaySize: function($element, position) {\r\n        $element.hide();\r\n        var location = positionUtils.calculate($element, extend({\r\n            collision: \"fit\"\r\n        }, position));\r\n        if (location.h.oversize > 0) {\r\n            setOuterWidth($element, getOuterWidth($element) - location.h.oversize)\r\n        }\r\n        if (location.v.oversize > 0) {\r\n            setOuterHeight($element, getOuterHeight($element) - location.v.oversize)\r\n        }\r\n        $element.show()\r\n    },\r\n    callbackNames: function() {\r\n        return [\"focused\"]\r\n    },\r\n    focus: function($element, hideBorder) {\r\n        var that = this;\r\n        if (void 0 === $element) {\r\n            return that._$focusedElement\r\n        } else if ($element) {\r\n            if (!$element.is(that._$focusedElement)) {\r\n                that._$focusedElement && that._$focusedElement.removeClass(FOCUSED_ELEMENT_CLASS)\r\n            }\r\n            that._$focusedElement = $element;\r\n            clearTimeout(that._focusTimeoutID);\r\n            that._focusTimeoutID = setTimeout((function() {\r\n                delete that._focusTimeoutID;\r\n                that.renderFocusOverlay($element, hideBorder);\r\n                $element.addClass(FOCUSED_ELEMENT_CLASS);\r\n                that.focused.fire($element)\r\n            }))\r\n        }\r\n    },\r\n    refocus: function() {\r\n        var $focus = this.focus();\r\n        this.focus($focus)\r\n    },\r\n    renderFocusOverlay: function($element, hideBorder) {\r\n        if (!gridCoreUtils.isElementInCurrentGrid(this, $element)) {\r\n            return\r\n        }\r\n        if (!this._$focusOverlay) {\r\n            this._$focusOverlay = $(\"<div>\").addClass(this.addWidgetPrefix(FOCUS_OVERLAY_CLASS))\r\n        }\r\n        if (hideBorder) {\r\n            this._$focusOverlay.addClass(DX_HIDDEN)\r\n        } else if ($element.length) {\r\n            var align = browser.mozilla ? \"right bottom\" : \"left top\";\r\n            var $content = $element.closest(\".\" + this.addWidgetPrefix(CONTENT_CLASS));\r\n            var elemCoord = getBoundingRect($element.get(0));\r\n            this._$focusOverlay.removeClass(DX_HIDDEN).appendTo($content);\r\n            setOuterHeight(this._$focusOverlay, elemCoord.bottom - elemCoord.top + 1);\r\n            setOuterWidth(this._$focusOverlay, elemCoord.right - elemCoord.left + 1);\r\n            var focusOverlayPosition = {\r\n                precise: true,\r\n                my: align,\r\n                at: align,\r\n                of: $element,\r\n                boundary: $content.length && $content\r\n            };\r\n            this._updateFocusOverlaySize(this._$focusOverlay, focusOverlayPosition);\r\n            positionUtils.setup(this._$focusOverlay, focusOverlayPosition);\r\n            this._$focusOverlay.css(\"visibility\", \"visible\")\r\n        }\r\n    },\r\n    resize: function() {\r\n        var $focusedElement = this._$focusedElement;\r\n        if ($focusedElement) {\r\n            this.focus($focusedElement)\r\n        }\r\n    },\r\n    loseFocus: function() {\r\n        this._$focusedElement && this._$focusedElement.removeClass(FOCUSED_ELEMENT_CLASS);\r\n        this._$focusedElement = null;\r\n        this._$focusOverlay && this._$focusOverlay.addClass(DX_HIDDEN)\r\n    },\r\n    init: function() {\r\n        this.createAction(\"onEditorPreparing\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        this.createAction(\"onEditorPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        this._updateFocusHandler = this._updateFocusHandler || this.createAction(this._updateFocus.bind(this));\r\n        eventsEngine.on(domAdapter.getDocument(), UPDATE_FOCUS_EVENTS, this._updateFocusHandler);\r\n        this._attachContainerEventHandlers()\r\n    },\r\n    _attachContainerEventHandlers: function() {\r\n        var that = this;\r\n        var $container = that.component && that.component.$element();\r\n        if ($container) {\r\n            eventsEngine.on($container, addNamespace(\"keydown\", MODULE_NAMESPACE), (function(e) {\r\n                if (\"tab\" === normalizeKeyName(e)) {\r\n                    that._updateFocusHandler(e)\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    dispose: function() {\r\n        clearTimeout(this._focusTimeoutID);\r\n        clearTimeout(this._updateFocusTimeoutID);\r\n        eventsEngine.off(domAdapter.getDocument(), UPDATE_FOCUS_EVENTS, this._updateFocusHandler)\r\n    }\r\n}).include(EditorFactoryMixin);\r\nexport var editorFactoryModule = {\r\n    defaultOptions: function() {\r\n        return {}\r\n    },\r\n    controllers: {\r\n        editorFactory: EditorFactory\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editor_factory.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    editorFactoryModule\r\n} from \"../grid_core/ui.grid_core.editor_factory\";\r\ngridCore.registerModule(\"editorFactory\", editorFactoryModule);\r\n","/**\r\n * DevExtreme (esm/ui/dialog.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight,\r\n    getWidth\r\n} from \"../core/utils/size\";\r\nimport $ from \"../core/renderer\";\r\nimport {\r\n    Component\r\n} from \"../core/component\";\r\nimport Action from \"../core/action\";\r\nimport devices from \"../core/devices\";\r\nimport config from \"../core/config\";\r\nimport {\r\n    resetActiveElement\r\n} from \"../core/utils/dom\";\r\nimport {\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nimport {\r\n    isPlainObject\r\n} from \"../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    getWindow\r\n} from \"../core/utils/window\";\r\nimport eventsEngine from \"../events/core/events_engine\";\r\nimport {\r\n    value as getViewport\r\n} from \"../core/utils/view_port\";\r\nimport messageLocalization from \"../localization/message\";\r\nimport errors from \"./widget/ui.errors\";\r\nimport Popup from \"./popup\";\r\nimport {\r\n    ensureDefined\r\n} from \"../core/utils/common\";\r\nvar window = getWindow();\r\nvar DEFAULT_BUTTON = {\r\n    text: \"OK\",\r\n    onClick: function() {\r\n        return true\r\n    }\r\n};\r\nvar DX_DIALOG_CLASSNAME = \"dx-dialog\";\r\nvar DX_DIALOG_WRAPPER_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-wrapper\");\r\nvar DX_DIALOG_ROOT_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-root\");\r\nvar DX_DIALOG_CONTENT_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-content\");\r\nvar DX_DIALOG_MESSAGE_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-message\");\r\nvar DX_DIALOG_BUTTONS_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-buttons\");\r\nvar DX_DIALOG_BUTTON_CLASSNAME = \"\".concat(DX_DIALOG_CLASSNAME, \"-button\");\r\nvar DX_BUTTON_CLASSNAME = \"dx-button\";\r\nexport var FakeDialogComponent = Component.inherit({\r\n    ctor: function(element, options) {\r\n        this.callBase(options)\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: {\r\n                platform: \"ios\"\r\n            },\r\n            options: {\r\n                width: 276\r\n            }\r\n        }])\r\n    }\r\n});\r\nexport var custom = function(options) {\r\n    var _options$title;\r\n    var deferred = new Deferred;\r\n    var defaultOptions = (new FakeDialogComponent).option();\r\n    options = extend(defaultOptions, options);\r\n    var $element = $(\"<div>\").addClass(DX_DIALOG_CLASSNAME).appendTo(getViewport());\r\n    var isMessageDefined = \"message\" in options;\r\n    var isMessageHtmlDefined = \"messageHtml\" in options;\r\n    if (isMessageDefined) {\r\n        errors.log(\"W1013\")\r\n    }\r\n    var messageHtml = String(isMessageHtmlDefined ? options.messageHtml : options.message);\r\n    var $message = $(\"<div>\").addClass(DX_DIALOG_MESSAGE_CLASSNAME).html(messageHtml);\r\n    var popupToolbarItems = [];\r\n    each(options.buttons || [DEFAULT_BUTTON], (function() {\r\n        var action = new Action(this.onClick, {\r\n            context: popupInstance\r\n        });\r\n        popupToolbarItems.push({\r\n            toolbar: \"bottom\",\r\n            location: devices.current().android ? \"after\" : \"center\",\r\n            widget: \"dxButton\",\r\n            options: extend({}, this, {\r\n                onClick: function() {\r\n                    var result = action.execute(...arguments);\r\n                    hide(result)\r\n                }\r\n            })\r\n        })\r\n    }));\r\n    var popupInstance = new Popup($element, extend({\r\n        title: null !== (_options$title = options.title) && void 0 !== _options$title ? _options$title : \"\",\r\n        showTitle: ensureDefined(options.showTitle, true),\r\n        dragEnabled: ensureDefined(options.dragEnabled, true),\r\n        height: \"auto\",\r\n        width: options.width,\r\n        showCloseButton: options.showCloseButton || false,\r\n        ignoreChildEvents: false,\r\n        onContentReady: function(args) {\r\n            args.component.$content().addClass(DX_DIALOG_CONTENT_CLASSNAME).append($message)\r\n        },\r\n        onShowing: function(e) {\r\n            e.component.bottomToolbar().addClass(DX_DIALOG_BUTTONS_CLASSNAME).find(\".\".concat(DX_BUTTON_CLASSNAME)).addClass(DX_DIALOG_BUTTON_CLASSNAME);\r\n            resetActiveElement()\r\n        },\r\n        onShown: function(e) {\r\n            var $firstButton = e.component.bottomToolbar().find(\".\".concat(DX_BUTTON_CLASSNAME)).first();\r\n            eventsEngine.trigger($firstButton, \"focus\")\r\n        },\r\n        onHiding: function() {\r\n            deferred.reject()\r\n        },\r\n        toolbarItems: popupToolbarItems,\r\n        animation: {\r\n            show: {\r\n                type: \"pop\",\r\n                duration: 400\r\n            },\r\n            hide: {\r\n                type: \"pop\",\r\n                duration: 400,\r\n                to: {\r\n                    opacity: 0,\r\n                    scale: 0\r\n                },\r\n                from: {\r\n                    opacity: 1,\r\n                    scale: 1\r\n                }\r\n            }\r\n        },\r\n        rtlEnabled: config().rtlEnabled,\r\n        position: {\r\n            boundaryOffset: {\r\n                h: 10,\r\n                v: 0\r\n            }\r\n        }\r\n    }, options.popupOptions));\r\n    popupInstance.$wrapper().addClass(DX_DIALOG_WRAPPER_CLASSNAME);\r\n    if (options.position) {\r\n        popupInstance.option(\"position\", options.position)\r\n    }\r\n    popupInstance.$wrapper().addClass(DX_DIALOG_ROOT_CLASSNAME);\r\n\r\n    function hide(value) {\r\n        deferred.resolve(value);\r\n        popupInstance.hide().done((function() {\r\n            popupInstance.$element().remove()\r\n        }))\r\n    }\r\n    return {\r\n        show: function() {\r\n            if (\"android\" === devices.real().platform) {\r\n                var isPortrait = getHeight(window) > getWidth(window);\r\n                var width = isPortrait ? \"80%\" : \"60%\";\r\n                popupInstance.option({\r\n                    width: width\r\n                })\r\n            }\r\n            popupInstance.show();\r\n            return deferred.promise()\r\n        },\r\n        hide: hide\r\n    }\r\n};\r\nexport var alert = function(messageHtml) {\r\n    var title = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"\";\r\n    var showTitle = arguments.length > 2 ? arguments[2] : void 0;\r\n    var options = isPlainObject(messageHtml) ? messageHtml : {\r\n        title: title,\r\n        messageHtml: messageHtml,\r\n        showTitle: showTitle,\r\n        dragEnabled: showTitle\r\n    };\r\n    return custom(options).show()\r\n};\r\nexport var confirm = function(messageHtml) {\r\n    var title = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : \"\";\r\n    var showTitle = arguments.length > 2 ? arguments[2] : void 0;\r\n    var options = isPlainObject(messageHtml) ? messageHtml : {\r\n        title: title,\r\n        messageHtml: messageHtml,\r\n        showTitle: showTitle,\r\n        buttons: [{\r\n            text: messageLocalization.format(\"Yes\"),\r\n            onClick: function() {\r\n                return true\r\n            }\r\n        }, {\r\n            text: messageLocalization.format(\"No\"),\r\n            onClick: function() {\r\n                return false\r\n            }\r\n        }],\r\n        dragEnabled: showTitle\r\n    };\r\n    return custom(options).show()\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing_constants.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport var EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nexport var ROW_CLASS = \"dx-row\";\r\nexport var CELL_MODIFIED_CLASS = \"dx-cell-modified\";\r\nexport var ROW_SELECTED_CLASS = \"dx-selection\";\r\nexport var EDIT_FORM_CLASS = \"edit-form\";\r\nexport var DATA_EDIT_DATA_INSERT_TYPE = \"insert\";\r\nexport var DATA_EDIT_DATA_REMOVE_TYPE = \"remove\";\r\nexport var EDITING_POPUP_OPTION_NAME = \"editing.popup\";\r\nexport var EDITING_FORM_OPTION_NAME = \"editing.form\";\r\nexport var EDITING_EDITROWKEY_OPTION_NAME = \"editing.editRowKey\";\r\nexport var EDITING_EDITCOLUMNNAME_OPTION_NAME = \"editing.editColumnName\";\r\nexport var TARGET_COMPONENT_NAME = \"targetComponent\";\r\nexport var EDITORS_INPUT_SELECTOR = \"input:not([type='hidden'])\";\r\nexport var FOCUSABLE_ELEMENT_SELECTOR = \"[tabindex], \" + EDITORS_INPUT_SELECTOR;\r\nexport var EDIT_MODE_BATCH = \"batch\";\r\nexport var EDIT_MODE_ROW = \"row\";\r\nexport var EDIT_MODE_CELL = \"cell\";\r\nexport var EDIT_MODE_FORM = \"form\";\r\nexport var EDIT_MODE_POPUP = \"popup\";\r\nexport var FIRST_NEW_ROW_POSITION = \"first\";\r\nexport var LAST_NEW_ROW_POSITION = \"last\";\r\nexport var PAGE_BOTTOM_NEW_ROW_POSITION = \"pageBottom\";\r\nexport var PAGE_TOP_NEW_ROW_POSITION = \"pageTop\";\r\nexport var VIEWPORT_BOTTOM_NEW_ROW_POSITION = \"viewportBottom\";\r\nexport var VIEWPORT_TOP_NEW_ROW_POSITION = \"viewportTop\";\r\nexport var EDIT_MODES = [EDIT_MODE_BATCH, EDIT_MODE_ROW, EDIT_MODE_CELL, EDIT_MODE_FORM, EDIT_MODE_POPUP];\r\nexport var ROW_BASED_MODES = [EDIT_MODE_ROW, EDIT_MODE_FORM, EDIT_MODE_POPUP];\r\nexport var MODES_WITH_DELAYED_FOCUS = [EDIT_MODE_ROW, EDIT_MODE_FORM];\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Guid from \"../../core/guid\";\r\nimport {\r\n    resetActiveElement\r\n} from \"../../core/utils/dom\";\r\nimport {\r\n    isDefined,\r\n    isObject,\r\n    isFunction,\r\n    isEmptyObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    createObjectWithChanges\r\n} from \"../../data/array_utils\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    confirm\r\n} from \"../dialog\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport devices from \"../../core/devices\";\r\nimport {\r\n    when,\r\n    Deferred,\r\n    fromPromise\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    equalByValue,\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport * as iconUtils from \"../../core/utils/icon\";\r\nimport {\r\n    EDITOR_CELL_CLASS,\r\n    ROW_CLASS,\r\n    EDIT_FORM_CLASS,\r\n    DATA_EDIT_DATA_INSERT_TYPE,\r\n    DATA_EDIT_DATA_REMOVE_TYPE,\r\n    EDITING_POPUP_OPTION_NAME,\r\n    EDITING_EDITROWKEY_OPTION_NAME,\r\n    EDITING_EDITCOLUMNNAME_OPTION_NAME,\r\n    TARGET_COMPONENT_NAME,\r\n    EDITORS_INPUT_SELECTOR,\r\n    FOCUSABLE_ELEMENT_SELECTOR,\r\n    EDIT_MODE_ROW,\r\n    EDIT_MODES,\r\n    ROW_BASED_MODES,\r\n    FIRST_NEW_ROW_POSITION,\r\n    LAST_NEW_ROW_POSITION,\r\n    PAGE_BOTTOM_NEW_ROW_POSITION,\r\n    PAGE_TOP_NEW_ROW_POSITION,\r\n    VIEWPORT_BOTTOM_NEW_ROW_POSITION,\r\n    VIEWPORT_TOP_NEW_ROW_POSITION\r\n} from \"./ui.grid_core.editing_constants\";\r\nvar READONLY_CLASS = \"readonly\";\r\nvar LINK_CLASS = \"dx-link\";\r\nvar ROW_SELECTED = \"dx-selection\";\r\nvar EDIT_BUTTON_CLASS = \"dx-edit-button\";\r\nvar COMMAND_EDIT_CLASS = \"dx-command-edit\";\r\nvar COMMAND_EDIT_WITH_ICONS_CLASS = COMMAND_EDIT_CLASS + \"-with-icons\";\r\nvar INSERT_INDEX = \"__DX_INSERT_INDEX__\";\r\nvar ROW_INSERTED = \"dx-row-inserted\";\r\nvar ROW_MODIFIED = \"dx-row-modified\";\r\nvar CELL_MODIFIED = \"dx-cell-modified\";\r\nvar EDITING_NAMESPACE = \"dxDataGridEditing\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar DATA_EDIT_DATA_UPDATE_TYPE = \"update\";\r\nvar DEFAULT_START_EDIT_ACTION = \"click\";\r\nvar EDIT_LINK_CLASS = {\r\n    save: \"dx-link-save\",\r\n    cancel: \"dx-link-cancel\",\r\n    edit: \"dx-link-edit\",\r\n    undelete: \"dx-link-undelete\",\r\n    delete: \"dx-link-delete\",\r\n    add: \"dx-link-add\"\r\n};\r\nvar EDIT_ICON_CLASS = {\r\n    save: \"save\",\r\n    cancel: \"revert\",\r\n    edit: \"edit\",\r\n    undelete: \"revert\",\r\n    delete: \"trash\",\r\n    add: \"add\"\r\n};\r\nvar METHOD_NAMES = {\r\n    edit: \"editRow\",\r\n    delete: \"deleteRow\",\r\n    undelete: \"undeleteRow\",\r\n    save: \"saveEditData\",\r\n    cancel: \"cancelEditData\",\r\n    add: \"addRowByRowIndex\"\r\n};\r\nvar ACTION_OPTION_NAMES = {\r\n    add: \"allowAdding\",\r\n    edit: \"allowUpdating\",\r\n    delete: \"allowDeleting\"\r\n};\r\nvar BUTTON_NAMES = [\"edit\", \"save\", \"cancel\", \"delete\", \"undelete\"];\r\nvar EDITING_CHANGES_OPTION_NAME = \"editing.changes\";\r\nvar createFailureHandler = function(deferred) {\r\n    return function(arg) {\r\n        var error = arg instanceof Error ? arg : new Error(arg && String(arg) || \"Unknown error\");\r\n        deferred.reject(error)\r\n    }\r\n};\r\nvar isEditingCell = function(isEditRow, cellOptions) {\r\n    return cellOptions.isEditing || isEditRow && cellOptions.column.allowEditing\r\n};\r\nvar isEditingOrShowEditorAlwaysDataCell = function(isEditRow, cellOptions) {\r\n    var isCommandCell = !!cellOptions.column.command;\r\n    var isEditing = isEditingCell(isEditRow, cellOptions);\r\n    var isEditorCell = !isCommandCell && (isEditing || cellOptions.column.showEditorAlways);\r\n    return \"data\" === cellOptions.rowType && isEditorCell\r\n};\r\nvar EditingController = modules.ViewController.inherit(function() {\r\n    var getButtonIndex = (buttons, name) => {\r\n        var result = -1;\r\n        buttons.some((button, index) => {\r\n            if (getButtonName(button) === name) {\r\n                result = index;\r\n                return true\r\n            }\r\n        });\r\n        return result\r\n    };\r\n\r\n    function getButtonName(button) {\r\n        return isObject(button) ? button.name : button\r\n    }\r\n    return {\r\n        init: function() {\r\n            this._columnsController = this.getController(\"columns\");\r\n            this._dataController = this.getController(\"data\");\r\n            this._rowsView = this.getView(\"rowsView\");\r\n            this._lastOperation = null;\r\n            if (this._deferreds) {\r\n                this._deferreds.forEach(d => d.reject(\"cancel\"))\r\n            }\r\n            this._deferreds = [];\r\n            if (!this._dataChangedHandler) {\r\n                this._dataChangedHandler = this._handleDataChanged.bind(this);\r\n                this._dataController.changed.add(this._dataChangedHandler)\r\n            }\r\n            if (!this._saveEditorHandler) {\r\n                this.createAction(\"onInitNewRow\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowInserting\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowInserted\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onEditingStart\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowUpdating\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowUpdated\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowRemoving\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onRowRemoved\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onSaved\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onSaving\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onEditCanceling\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                });\r\n                this.createAction(\"onEditCanceled\", {\r\n                    excludeValidators: [\"disabled\", \"readOnly\"]\r\n                })\r\n            }\r\n            this._updateEditColumn();\r\n            this._updateEditButtons();\r\n            if (!this._internalState) {\r\n                this._internalState = []\r\n            }\r\n            this.component._optionsByReference[EDITING_EDITROWKEY_OPTION_NAME] = true;\r\n            this.component._optionsByReference[EDITING_CHANGES_OPTION_NAME] = true\r\n        },\r\n        getEditMode: function() {\r\n            var editMode = this.option(\"editing.mode\");\r\n            if (-1 !== EDIT_MODES.indexOf(editMode)) {\r\n                return editMode\r\n            }\r\n            return EDIT_MODE_ROW\r\n        },\r\n        _getDefaultEditorTemplate: function() {\r\n            return (container, options) => {\r\n                var $editor = $(\"<div>\").appendTo(container);\r\n                this.getController(\"editorFactory\").createEditor($editor, extend({}, options.column, {\r\n                    value: options.value,\r\n                    setValue: options.setValue,\r\n                    row: options.row,\r\n                    parentType: \"dataRow\",\r\n                    width: null,\r\n                    readOnly: !options.setValue,\r\n                    isOnForm: options.isOnForm,\r\n                    id: options.id\r\n                }))\r\n            }\r\n        },\r\n        _getNewRowPosition: function() {\r\n            var newRowPosition = this.option(\"editing.newRowPosition\");\r\n            var scrollingMode = this.option(\"scrolling.mode\");\r\n            if (\"virtual\" === scrollingMode) {\r\n                switch (newRowPosition) {\r\n                    case PAGE_TOP_NEW_ROW_POSITION:\r\n                        return VIEWPORT_TOP_NEW_ROW_POSITION;\r\n                    case PAGE_BOTTOM_NEW_ROW_POSITION:\r\n                        return VIEWPORT_BOTTOM_NEW_ROW_POSITION;\r\n                    default:\r\n                        return newRowPosition\r\n                }\r\n            }\r\n            return newRowPosition\r\n        },\r\n        getChanges: function() {\r\n            return this.option(EDITING_CHANGES_OPTION_NAME)\r\n        },\r\n        getInsertRowCount: function() {\r\n            var changes = this.option(EDITING_CHANGES_OPTION_NAME);\r\n            return changes.filter(change => \"insert\" === change.type).length\r\n        },\r\n        resetChanges: function() {\r\n            var changes = this.getChanges();\r\n            var needReset = null === changes || void 0 === changes ? void 0 : changes.length;\r\n            if (needReset) {\r\n                this._silentOption(EDITING_CHANGES_OPTION_NAME, [])\r\n            }\r\n        },\r\n        _getInternalData: function(key) {\r\n            return this._internalState.filter(item => equalByValue(item.key, key))[0]\r\n        },\r\n        _addInternalData: function(params) {\r\n            var internalData = this._getInternalData(params.key);\r\n            if (internalData) {\r\n                return extend(internalData, params)\r\n            }\r\n            this._internalState.push(params);\r\n            return params\r\n        },\r\n        _getOldData: function(key) {\r\n            var _this$_getInternalDat;\r\n            return null === (_this$_getInternalDat = this._getInternalData(key)) || void 0 === _this$_getInternalDat ? void 0 : _this$_getInternalDat.oldData\r\n        },\r\n        getUpdatedData: function(data) {\r\n            var key = this._dataController.keyOf(data);\r\n            var changes = this.getChanges();\r\n            var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n            if (changes[editIndex]) {\r\n                return createObjectWithChanges(data, changes[editIndex].data)\r\n            }\r\n            return data\r\n        },\r\n        getInsertedData: function() {\r\n            return this.getChanges().filter(change => change.data && change.type === DATA_EDIT_DATA_INSERT_TYPE).map(change => change.data)\r\n        },\r\n        getRemovedData: function() {\r\n            return this.getChanges().filter(change => this._getOldData(change.key) && change.type === DATA_EDIT_DATA_REMOVE_TYPE).map(change => this._getOldData(change.key))\r\n        },\r\n        _fireDataErrorOccurred: function(arg) {\r\n            if (\"cancel\" === arg) {\r\n                return\r\n            }\r\n            var $popupContent = this.getPopupContent();\r\n            this._dataController.dataErrorOccurred.fire(arg, $popupContent)\r\n        },\r\n        _needToCloseEditableCell: noop,\r\n        _closeEditItem: noop,\r\n        _handleDataChanged: noop,\r\n        _isDefaultButtonVisible: function(button, options) {\r\n            var result = true;\r\n            switch (button.name) {\r\n                case \"delete\":\r\n                    result = this.allowDeleting(options);\r\n                    break;\r\n                case \"undelete\":\r\n                    result = false\r\n            }\r\n            return result\r\n        },\r\n        _isButtonVisible: function(button, options) {\r\n            var visible = button.visible;\r\n            if (!isDefined(visible)) {\r\n                return this._isDefaultButtonVisible(button, options)\r\n            }\r\n            return isFunction(visible) ? visible.call(button, {\r\n                component: options.component,\r\n                row: options.row,\r\n                column: options.column\r\n            }) : visible\r\n        },\r\n        _isButtonDisabled: function(button, options) {\r\n            var disabled = button.disabled;\r\n            return isFunction(disabled) ? disabled.call(button, {\r\n                component: options.component,\r\n                row: options.row,\r\n                column: options.column\r\n            }) : !!disabled\r\n        },\r\n        _getButtonConfig: function(button, options) {\r\n            var config = isObject(button) ? button : {};\r\n            var buttonName = getButtonName(button);\r\n            var editingTexts = (options => {\r\n                var editingTexts = options.component.option(\"editing.texts\") || {};\r\n                return {\r\n                    save: editingTexts.saveRowChanges,\r\n                    cancel: editingTexts.cancelRowChanges,\r\n                    edit: editingTexts.editRow,\r\n                    undelete: editingTexts.undeleteRow,\r\n                    delete: editingTexts.deleteRow,\r\n                    add: editingTexts.addRowToNode\r\n                }\r\n            })(options);\r\n            var methodName = METHOD_NAMES[buttonName];\r\n            var editingOptions = this.option(\"editing\");\r\n            var actionName = ACTION_OPTION_NAMES[buttonName];\r\n            var allowAction = actionName ? editingOptions[actionName] : true;\r\n            return extend({\r\n                name: buttonName,\r\n                text: editingTexts[buttonName],\r\n                cssClass: EDIT_LINK_CLASS[buttonName]\r\n            }, {\r\n                onClick: methodName && (e => {\r\n                    var event = e.event;\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    setTimeout(() => {\r\n                        options.row && allowAction && this[methodName] && this[methodName](options.row.rowIndex)\r\n                    })\r\n                })\r\n            }, config)\r\n        },\r\n        _getEditingButtons: function(options) {\r\n            var buttonIndex;\r\n            var haveCustomButtons = !!options.column.buttons;\r\n            var buttons = (options.column.buttons || []).slice();\r\n            if (haveCustomButtons) {\r\n                buttonIndex = getButtonIndex(buttons, \"edit\");\r\n                if (buttonIndex >= 0) {\r\n                    if (getButtonIndex(buttons, \"save\") < 0) {\r\n                        buttons.splice(buttonIndex + 1, 0, \"save\")\r\n                    }\r\n                    if (getButtonIndex(buttons, \"cancel\") < 0) {\r\n                        buttons.splice(getButtonIndex(buttons, \"save\") + 1, 0, \"cancel\")\r\n                    }\r\n                }\r\n                buttonIndex = getButtonIndex(buttons, \"delete\");\r\n                if (buttonIndex >= 0 && getButtonIndex(buttons, \"undelete\") < 0) {\r\n                    buttons.splice(buttonIndex + 1, 0, \"undelete\")\r\n                }\r\n            } else {\r\n                buttons = BUTTON_NAMES.slice()\r\n            }\r\n            return buttons.map(button => this._getButtonConfig(button, options))\r\n        },\r\n        _renderEditingButtons: function($container, buttons, options, change) {\r\n            buttons.forEach(button => {\r\n                if (this._isButtonVisible(button, options)) {\r\n                    this._createButton($container, button, options, change)\r\n                }\r\n            })\r\n        },\r\n        _getEditCommandCellTemplate: function() {\r\n            return (container, options, change) => {\r\n                var $container = $(container);\r\n                if (\"data\" === options.rowType) {\r\n                    var buttons = this._getEditingButtons(options);\r\n                    this._renderEditingButtons($container, buttons, options, change);\r\n                    options.watch && options.watch(() => buttons.map(button => this._isButtonVisible(button, options)), () => {\r\n                        $container.empty();\r\n                        this._renderEditingButtons($container, buttons, options)\r\n                    })\r\n                } else {\r\n                    gridCoreUtils.setEmptyText($container)\r\n                }\r\n            }\r\n        },\r\n        isRowBasedEditMode: function() {\r\n            var editMode = this.getEditMode();\r\n            return -1 !== ROW_BASED_MODES.indexOf(editMode)\r\n        },\r\n        getFirstEditableColumnIndex: function() {\r\n            var columnsController = this.getController(\"columns\");\r\n            var columnIndex;\r\n            var visibleColumns = columnsController.getVisibleColumns();\r\n            each(visibleColumns, (function(index, column) {\r\n                if (column.allowEditing) {\r\n                    columnIndex = index;\r\n                    return false\r\n                }\r\n            }));\r\n            return columnIndex\r\n        },\r\n        getFirstEditableCellInRow: function(rowIndex) {\r\n            var rowsView = this.getView(\"rowsView\");\r\n            return rowsView && rowsView._getCellElement(rowIndex ? rowIndex : 0, this.getFirstEditableColumnIndex())\r\n        },\r\n        getFocusedCellInRow: function(rowIndex) {\r\n            return this.getFirstEditableCellInRow(rowIndex)\r\n        },\r\n        getIndexByKey: function(key, items) {\r\n            return gridCoreUtils.getIndexByKey(key, items)\r\n        },\r\n        hasChanges: function(rowIndex) {\r\n            var changes = this.getChanges();\r\n            var result = false;\r\n            for (var i = 0; i < (null === changes || void 0 === changes ? void 0 : changes.length); i++) {\r\n                if (changes[i].type && (!isDefined(rowIndex) || this._dataController.getRowIndexByKey(changes[i].key) === rowIndex)) {\r\n                    result = true;\r\n                    break\r\n                }\r\n            }\r\n            return result\r\n        },\r\n        dispose: function() {\r\n            this.callBase();\r\n            clearTimeout(this._inputFocusTimeoutID);\r\n            eventsEngine.off(domAdapter.getDocument(), pointerEvents.up, this._pointerUpEditorHandler);\r\n            eventsEngine.off(domAdapter.getDocument(), pointerEvents.down, this._pointerDownEditorHandler);\r\n            eventsEngine.off(domAdapter.getDocument(), clickEventName, this._saveEditorHandler)\r\n        },\r\n        optionChanged: function(args) {\r\n            if (\"editing\" === args.name) {\r\n                var fullName = args.fullName;\r\n                if (fullName === EDITING_EDITROWKEY_OPTION_NAME) {\r\n                    this._handleEditRowKeyChange(args)\r\n                } else if (fullName === EDITING_CHANGES_OPTION_NAME) {\r\n                    this._handleChangesChange(args)\r\n                } else if (!args.handled) {\r\n                    this._columnsController.reinit();\r\n                    this.init();\r\n                    this.resetChanges();\r\n                    this._resetEditColumnName();\r\n                    this._resetEditRowKey()\r\n                }\r\n                args.handled = true\r\n            } else {\r\n                this.callBase(args)\r\n            }\r\n        },\r\n        _handleEditRowKeyChange: function(args) {\r\n            var rowIndex = this._dataController.getRowIndexByKey(args.value);\r\n            var oldRowIndexCorrection = this._getEditRowIndexCorrection();\r\n            var oldRowIndex = this._dataController.getRowIndexByKey(args.previousValue) + oldRowIndexCorrection;\r\n            if (isDefined(args.value)) {\r\n                if (args.value !== args.previousValue) {\r\n                    this._editRowFromOptionChanged(rowIndex, oldRowIndex)\r\n                }\r\n            } else {\r\n                this.cancelEditData()\r\n            }\r\n        },\r\n        _handleChangesChange: function(args) {\r\n            var dataController = this._dataController;\r\n            if (!args.value.length && !args.previousValue.length) {\r\n                return\r\n            }\r\n            this._processInsertChanges(args.value);\r\n            dataController.updateItems({\r\n                repaintChangesOnly: true\r\n            })\r\n        },\r\n        _processInsertChanges: function(changes) {\r\n            changes.forEach(change => {\r\n                if (\"insert\" === change.type) {\r\n                    this._addInsertInfo(change)\r\n                }\r\n            })\r\n        },\r\n        publicMethods: function() {\r\n            return [\"addRow\", \"deleteRow\", \"undeleteRow\", \"editRow\", \"saveEditData\", \"cancelEditData\", \"hasEditData\"]\r\n        },\r\n        refresh: function(isPageChanged) {\r\n            if (!isDefined(this._pageIndex)) {\r\n                return\r\n            }\r\n            this._refreshCore(isPageChanged)\r\n        },\r\n        _refreshCore: noop,\r\n        isEditing: function() {\r\n            var isEditRowKeyDefined = isDefined(this.option(EDITING_EDITROWKEY_OPTION_NAME));\r\n            return isEditRowKeyDefined\r\n        },\r\n        isEditRow: function() {\r\n            return false\r\n        },\r\n        _setEditRowKey: function(value, silent) {\r\n            if (silent) {\r\n                this._silentOption(EDITING_EDITROWKEY_OPTION_NAME, value)\r\n            } else {\r\n                this.option(EDITING_EDITROWKEY_OPTION_NAME, value)\r\n            }\r\n        },\r\n        _setEditRowKeyByIndex: function(rowIndex, silent) {\r\n            var key = this._dataController.getKeyByRowIndex(rowIndex);\r\n            if (void 0 === key) {\r\n                this._dataController.fireError(\"E1043\");\r\n                return\r\n            }\r\n            this._setEditRowKey(key, silent)\r\n        },\r\n        getEditRowIndex: function() {\r\n            return this._getVisibleEditRowIndex()\r\n        },\r\n        getEditFormRowIndex: function() {\r\n            return -1\r\n        },\r\n        _isEditRowByIndex(rowIndex) {\r\n            var key = this._dataController.getKeyByRowIndex(rowIndex);\r\n            var isKeyEqual = isDefined(key) && equalByValue(this.option(EDITING_EDITROWKEY_OPTION_NAME), key);\r\n            if (isKeyEqual) {\r\n                return this._getVisibleEditRowIndex() === rowIndex\r\n            }\r\n            return isKeyEqual\r\n        },\r\n        isEditCell: function(visibleRowIndex, columnIndex) {\r\n            return this._isEditRowByIndex(visibleRowIndex) && this._getVisibleEditColumnIndex() === columnIndex\r\n        },\r\n        getPopupContent: noop,\r\n        _isProcessedItem: function(item) {\r\n            return false\r\n        },\r\n        _getInsertRowIndex: function(items, change, isProcessedItems) {\r\n            var result = -1;\r\n            var dataController = this._dataController;\r\n            var key = this._getInsertAfterOrBeforeKey(change);\r\n            if (!isDefined(key) && 0 === items.length) {\r\n                result = 0\r\n            } else if (isDefined(key)) {\r\n                items.some((item, index) => {\r\n                    var isProcessedItem = isProcessedItems || this._isProcessedItem(item);\r\n                    if (isObject(item)) {\r\n                        if (isProcessedItem || isDefined(item[INSERT_INDEX])) {\r\n                            if (equalByValue(item.key, key)) {\r\n                                result = index\r\n                            }\r\n                        } else if (equalByValue(dataController.keyOf(item), key)) {\r\n                            result = index\r\n                        }\r\n                    }\r\n                    if (result >= 0) {\r\n                        var nextItem = items[result + 1];\r\n                        if (nextItem && (\"detail\" === nextItem.rowType || \"detailAdaptive\" === nextItem.rowType) && isDefined(change.insertAfterKey)) {\r\n                            return\r\n                        }\r\n                        if (isDefined(change.insertAfterKey)) {\r\n                            result += 1\r\n                        }\r\n                        return true\r\n                    }\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        _generateNewItem: function(key) {\r\n            var _this$_getInternalDat2;\r\n            var item = {\r\n                key: key\r\n            };\r\n            var insertInfo = null === (_this$_getInternalDat2 = this._getInternalData(key)) || void 0 === _this$_getInternalDat2 ? void 0 : _this$_getInternalDat2.insertInfo;\r\n            if (null !== insertInfo && void 0 !== insertInfo && insertInfo[INSERT_INDEX]) {\r\n                item[INSERT_INDEX] = insertInfo[INSERT_INDEX]\r\n            }\r\n            return item\r\n        },\r\n        _getLoadedRowIndex: function(items, change, isProcessedItems) {\r\n            var loadedRowIndex = this._getInsertRowIndex(items, change, isProcessedItems);\r\n            var dataController = this._dataController;\r\n            if (loadedRowIndex < 0) {\r\n                var newRowPosition = this._getNewRowPosition();\r\n                var pageIndex = dataController.pageIndex();\r\n                var insertAfterOrBeforeKey = this._getInsertAfterOrBeforeKey(change);\r\n                if (newRowPosition !== LAST_NEW_ROW_POSITION && 0 === pageIndex && !isDefined(insertAfterOrBeforeKey)) {\r\n                    loadedRowIndex = 0\r\n                } else if (newRowPosition === LAST_NEW_ROW_POSITION && dataController.isLastPageLoaded()) {\r\n                    loadedRowIndex = items.length\r\n                }\r\n            }\r\n            return loadedRowIndex\r\n        },\r\n        processItems: function(items, e) {\r\n            var changeType = e.changeType;\r\n            this.update(changeType);\r\n            var changes = this.getChanges();\r\n            changes.forEach(change => {\r\n                var _this$_getInternalDat3;\r\n                var isInsert = change.type === DATA_EDIT_DATA_INSERT_TYPE;\r\n                if (!isInsert) {\r\n                    return\r\n                }\r\n                var key = change.key;\r\n                var insertInfo = null === (_this$_getInternalDat3 = this._getInternalData(key)) || void 0 === _this$_getInternalDat3 ? void 0 : _this$_getInternalDat3.insertInfo;\r\n                if (!isDefined(key) || !isDefined(insertInfo)) {\r\n                    insertInfo = this._addInsertInfo(change);\r\n                    key = insertInfo.key\r\n                }\r\n                var loadedRowIndex = this._getLoadedRowIndex(items, change);\r\n                var item = this._generateNewItem(key);\r\n                if (loadedRowIndex >= 0) {\r\n                    items.splice(loadedRowIndex, 0, item)\r\n                }\r\n            });\r\n            return items\r\n        },\r\n        processDataItem: function(item, options, generateDataValues) {\r\n            var columns = options.visibleColumns;\r\n            var key = item.data[INSERT_INDEX] ? item.data.key : item.key;\r\n            var changes = this.getChanges();\r\n            var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n            item.isEditing = false;\r\n            if (editIndex >= 0) {\r\n                this._processDataItemCore(item, changes[editIndex], key, columns, generateDataValues)\r\n            }\r\n        },\r\n        _processDataItemCore: function(item, change, key, columns, generateDataValues) {\r\n            var {\r\n                data: data,\r\n                type: type\r\n            } = change;\r\n            switch (type) {\r\n                case DATA_EDIT_DATA_INSERT_TYPE:\r\n                    item.isNewRow = true;\r\n                    item.key = key;\r\n                    item.data = data;\r\n                    break;\r\n                case DATA_EDIT_DATA_UPDATE_TYPE:\r\n                    item.modified = true;\r\n                    item.oldData = item.data;\r\n                    item.data = createObjectWithChanges(item.data, data);\r\n                    item.modifiedValues = generateDataValues(data, columns, true);\r\n                    break;\r\n                case DATA_EDIT_DATA_REMOVE_TYPE:\r\n                    item.removed = true\r\n            }\r\n        },\r\n        _initNewRow: function(options) {\r\n            this.executeAction(\"onInitNewRow\", options);\r\n            if (options.promise) {\r\n                var deferred = new Deferred;\r\n                when(fromPromise(options.promise)).done(deferred.resolve).fail(createFailureHandler(deferred)).fail(arg => this._fireDataErrorOccurred(arg));\r\n                return deferred\r\n            }\r\n        },\r\n        _createInsertInfo: function() {\r\n            var insertInfo = {};\r\n            insertInfo[INSERT_INDEX] = this._getInsertIndex();\r\n            return insertInfo\r\n        },\r\n        _addInsertInfo: function(change, parentKey) {\r\n            var _this$_getInternalDat4;\r\n            var insertInfo;\r\n            var {\r\n                key: key\r\n            } = change;\r\n            if (!isDefined(key)) {\r\n                key = String(new Guid);\r\n                change.key = key\r\n            }\r\n            insertInfo = null === (_this$_getInternalDat4 = this._getInternalData(key)) || void 0 === _this$_getInternalDat4 ? void 0 : _this$_getInternalDat4.insertInfo;\r\n            if (!isDefined(insertInfo)) {\r\n                var insertAfterOrBeforeKey = this._getInsertAfterOrBeforeKey(change);\r\n                insertInfo = this._createInsertInfo();\r\n                if (!isDefined(insertAfterOrBeforeKey)) {\r\n                    this._setInsertAfterOrBeforeKey(change, parentKey)\r\n                }\r\n            }\r\n            this._addInternalData({\r\n                insertInfo: insertInfo,\r\n                key: key\r\n            });\r\n            return {\r\n                insertInfo: insertInfo,\r\n                key: key\r\n            }\r\n        },\r\n        _setInsertAfterOrBeforeKey: function(change, parentKey) {\r\n            var dataController = this._dataController;\r\n            var allItems = dataController.items(true);\r\n            var rowsView = this.getView(\"rowsView\");\r\n            var newRowPosition = this._getNewRowPosition();\r\n            switch (newRowPosition) {\r\n                case FIRST_NEW_ROW_POSITION:\r\n                case LAST_NEW_ROW_POSITION:\r\n                    break;\r\n                case PAGE_TOP_NEW_ROW_POSITION:\r\n                case PAGE_BOTTOM_NEW_ROW_POSITION:\r\n                    if (allItems.length) {\r\n                        var itemIndex = newRowPosition === PAGE_TOP_NEW_ROW_POSITION ? 0 : allItems.length - 1;\r\n                        change[0 === itemIndex ? \"insertBeforeKey\" : \"insertAfterKey\"] = allItems[itemIndex].key\r\n                    }\r\n                    break;\r\n                default:\r\n                    var isViewportBottom = newRowPosition === VIEWPORT_BOTTOM_NEW_ROW_POSITION;\r\n                    var visibleItemIndex = isViewportBottom ? null === rowsView || void 0 === rowsView ? void 0 : rowsView.getBottomVisibleItemIndex() : null === rowsView || void 0 === rowsView ? void 0 : rowsView.getTopVisibleItemIndex();\r\n                    var row = dataController.getVisibleRows()[visibleItemIndex];\r\n                    if (row && (!row.isEditing && \"detail\" === row.rowType || \"detailAdaptive\" === row.rowType)) {\r\n                        visibleItemIndex++\r\n                    }\r\n                    var insertKey = dataController.getKeyByRowIndex(visibleItemIndex);\r\n                    if (isDefined(insertKey)) {\r\n                        change.insertBeforeKey = insertKey\r\n                    }\r\n            }\r\n        },\r\n        _getInsertIndex: function() {\r\n            var maxInsertIndex = 0;\r\n            this.getChanges().forEach(editItem => {\r\n                var _this$_getInternalDat5;\r\n                var insertInfo = null === (_this$_getInternalDat5 = this._getInternalData(editItem.key)) || void 0 === _this$_getInternalDat5 ? void 0 : _this$_getInternalDat5.insertInfo;\r\n                if (isDefined(insertInfo) && editItem.type === DATA_EDIT_DATA_INSERT_TYPE && insertInfo[INSERT_INDEX] > maxInsertIndex) {\r\n                    maxInsertIndex = insertInfo[INSERT_INDEX]\r\n                }\r\n            });\r\n            return maxInsertIndex + 1\r\n        },\r\n        _getInsertAfterOrBeforeKey: function(insertChange) {\r\n            var _insertChange$insertA;\r\n            return null !== (_insertChange$insertA = insertChange.insertAfterKey) && void 0 !== _insertChange$insertA ? _insertChange$insertA : insertChange.insertBeforeKey\r\n        },\r\n        _getPageIndexToInsertRow: function() {\r\n            var newRowPosition = this._getNewRowPosition();\r\n            var dataController = this._dataController;\r\n            var pageIndex = dataController.pageIndex();\r\n            var lastPageIndex = dataController.pageCount() - 1;\r\n            if (newRowPosition === FIRST_NEW_ROW_POSITION && 0 !== pageIndex) {\r\n                return 0\r\n            } else if (newRowPosition === LAST_NEW_ROW_POSITION && pageIndex !== lastPageIndex) {\r\n                return lastPageIndex\r\n            }\r\n            return -1\r\n        },\r\n        addRow: function(parentKey) {\r\n            var dataController = this._dataController;\r\n            var store = dataController.store();\r\n            if (!store) {\r\n                dataController.fireError(\"E1052\", this.component.NAME);\r\n                return (new Deferred).reject()\r\n            }\r\n            return this._addRow(parentKey)\r\n        },\r\n        _addRow: function(parentKey) {\r\n            var dataController = this._dataController;\r\n            var store = dataController.store();\r\n            var key = store && store.key();\r\n            var param = {\r\n                data: {}\r\n            };\r\n            var oldEditRowIndex = this._getVisibleEditRowIndex();\r\n            var deferred = new Deferred;\r\n            this.refresh();\r\n            if (!this._allowRowAdding()) {\r\n                when(this._navigateToNewRow(oldEditRowIndex)).done(deferred.resolve).fail(deferred.reject);\r\n                return deferred.promise()\r\n            }\r\n            if (!key) {\r\n                param.data.__KEY__ = String(new Guid)\r\n            }\r\n            when(this._initNewRow(param, parentKey)).done(() => {\r\n                if (this._allowRowAdding()) {\r\n                    when(this._addRowCore(param.data, parentKey, oldEditRowIndex)).done(deferred.resolve).fail(deferred.reject)\r\n                } else {\r\n                    deferred.reject(\"cancel\")\r\n                }\r\n            }).fail(deferred.reject);\r\n            return deferred.promise()\r\n        },\r\n        _allowRowAdding: function() {\r\n            var insertIndex = this._getInsertIndex();\r\n            if (insertIndex > 1) {\r\n                return false\r\n            }\r\n            return true\r\n        },\r\n        _addRowCore: function(data, parentKey, initialOldEditRowIndex) {\r\n            var change = {\r\n                data: data,\r\n                type: DATA_EDIT_DATA_INSERT_TYPE\r\n            };\r\n            var editRowIndex = this._getVisibleEditRowIndex();\r\n            var insertInfo = this._addInsertInfo(change, parentKey);\r\n            var key = insertInfo.key;\r\n            this._setEditRowKey(key, true);\r\n            this._addChange(change);\r\n            return this._navigateToNewRow(initialOldEditRowIndex, change, editRowIndex)\r\n        },\r\n        _navigateToNewRow: function(oldEditRowIndex, change, editRowIndex) {\r\n            var _editRowIndex, _change;\r\n            var d = new Deferred;\r\n            var dataController = this._dataController;\r\n            var focusController = this.getController(\"focus\");\r\n            editRowIndex = null !== (_editRowIndex = editRowIndex) && void 0 !== _editRowIndex ? _editRowIndex : -1;\r\n            change = null !== (_change = change) && void 0 !== _change ? _change : this.getChanges().filter(c => c.type === DATA_EDIT_DATA_INSERT_TYPE)[0];\r\n            if (!change) {\r\n                return d.reject(\"cancel\").promise()\r\n            }\r\n            var pageIndexToInsertRow = this._getPageIndexToInsertRow();\r\n            var rowIndex = this._getLoadedRowIndex(dataController.items(), change, true);\r\n            var navigateToRowByKey = key => {\r\n                when(null === focusController || void 0 === focusController ? void 0 : focusController.navigateToRow(key)).done(() => {\r\n                    rowIndex = dataController.getRowIndexByKey(change.key);\r\n                    d.resolve()\r\n                })\r\n            };\r\n            var insertAfterOrBeforeKey = this._getInsertAfterOrBeforeKey(change);\r\n            if (pageIndexToInsertRow >= 0) {\r\n                dataController.pageIndex(pageIndexToInsertRow).done(() => {\r\n                    navigateToRowByKey(change.key)\r\n                }).fail(d.reject)\r\n            } else if (rowIndex < 0 && isDefined(insertAfterOrBeforeKey)) {\r\n                navigateToRowByKey(insertAfterOrBeforeKey)\r\n            } else {\r\n                dataController.updateItems({\r\n                    changeType: \"update\",\r\n                    rowIndices: [oldEditRowIndex, editRowIndex, rowIndex]\r\n                });\r\n                rowIndex = dataController.getRowIndexByKey(change.key);\r\n                if (rowIndex < 0) {\r\n                    navigateToRowByKey(change.key)\r\n                } else {\r\n                    d.resolve()\r\n                }\r\n            }\r\n            d.done(() => {\r\n                this._showAddedRow(rowIndex);\r\n                this._afterInsertRow(change.key)\r\n            });\r\n            return d.promise()\r\n        },\r\n        _showAddedRow: function(rowIndex) {\r\n            this._focusFirstEditableCellInRow(rowIndex)\r\n        },\r\n        _beforeFocusElementInRow: noop,\r\n        _focusFirstEditableCellInRow: function(rowIndex) {\r\n            var dataController = this._dataController;\r\n            var key = dataController.getKeyByRowIndex(rowIndex);\r\n            var $firstCell = this.getFirstEditableCellInRow(rowIndex);\r\n            this._editCellInProgress = true;\r\n            this._delayedInputFocus($firstCell, () => {\r\n                rowIndex = dataController.getRowIndexByKey(key);\r\n                this._editCellInProgress = false;\r\n                this._beforeFocusElementInRow(rowIndex)\r\n            })\r\n        },\r\n        _isEditingStart: function(options) {\r\n            this.executeAction(\"onEditingStart\", options);\r\n            return options.cancel\r\n        },\r\n        _beforeUpdateItems: noop,\r\n        _getVisibleEditColumnIndex: function() {\r\n            var editColumnName = this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME);\r\n            if (!isDefined(editColumnName)) {\r\n                return -1\r\n            }\r\n            return this._columnsController.getVisibleColumnIndex(editColumnName)\r\n        },\r\n        _setEditColumnNameByIndex: function(index, silent) {\r\n            var _visibleColumns$index;\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            this._setEditColumnName(null === (_visibleColumns$index = visibleColumns[index]) || void 0 === _visibleColumns$index ? void 0 : _visibleColumns$index.name, silent)\r\n        },\r\n        _setEditColumnName: function(name, silent) {\r\n            if (silent) {\r\n                this._silentOption(EDITING_EDITCOLUMNNAME_OPTION_NAME, name)\r\n            } else {\r\n                this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME, name)\r\n            }\r\n        },\r\n        _resetEditColumnName: function() {\r\n            this._setEditColumnName(null, true)\r\n        },\r\n        _getEditColumn: function() {\r\n            var editColumnName = this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME);\r\n            return this._getColumnByName(editColumnName)\r\n        },\r\n        _getColumnByName: function(name) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var editColumn;\r\n            isDefined(name) && visibleColumns.some(column => {\r\n                if (column.name === name) {\r\n                    editColumn = column;\r\n                    return true\r\n                }\r\n            });\r\n            return editColumn\r\n        },\r\n        _getVisibleEditRowIndex: function(columnName) {\r\n            var dataController = this._dataController;\r\n            var editRowKey = this.option(EDITING_EDITROWKEY_OPTION_NAME);\r\n            var rowIndex = dataController.getRowIndexByKey(editRowKey);\r\n            if (-1 === rowIndex) {\r\n                return rowIndex\r\n            }\r\n            return rowIndex + this._getEditRowIndexCorrection(columnName)\r\n        },\r\n        _getEditRowIndexCorrection: function(columnName) {\r\n            var editColumn = columnName ? this._getColumnByName(columnName) : this._getEditColumn();\r\n            var isColumnHidden = \"adaptiveHidden\" === (null === editColumn || void 0 === editColumn ? void 0 : editColumn.visibleWidth);\r\n            return isColumnHidden ? 1 : 0\r\n        },\r\n        _resetEditRowKey: function() {\r\n            this._setEditRowKey(null, true)\r\n        },\r\n        _resetEditIndices: function() {\r\n            this._resetEditColumnName();\r\n            this._resetEditRowKey()\r\n        },\r\n        editRow: function(rowIndex) {\r\n            var _item$oldData;\r\n            var dataController = this._dataController;\r\n            var items = dataController.items();\r\n            var item = items[rowIndex];\r\n            var params = {\r\n                data: item && item.data,\r\n                cancel: false\r\n            };\r\n            var oldRowIndex = this._getVisibleEditRowIndex();\r\n            if (!item) {\r\n                return\r\n            }\r\n            if (rowIndex === oldRowIndex) {\r\n                return true\r\n            }\r\n            if (void 0 === item.key) {\r\n                this._dataController.fireError(\"E1043\");\r\n                return\r\n            }\r\n            if (!item.isNewRow) {\r\n                params.key = item.key\r\n            }\r\n            if (this._isEditingStart(params)) {\r\n                return\r\n            }\r\n            this.resetChanges();\r\n            this.init();\r\n            this._resetEditColumnName();\r\n            this._pageIndex = dataController.pageIndex();\r\n            this._addInternalData({\r\n                key: item.key,\r\n                oldData: null !== (_item$oldData = item.oldData) && void 0 !== _item$oldData ? _item$oldData : item.data\r\n            });\r\n            this._setEditRowKey(item.key)\r\n        },\r\n        _editRowFromOptionChanged: function(rowIndex, oldRowIndex) {\r\n            var rowIndices = [oldRowIndex, rowIndex];\r\n            this._beforeUpdateItems(rowIndices, rowIndex, oldRowIndex);\r\n            this._editRowFromOptionChangedCore(rowIndices, rowIndex, oldRowIndex)\r\n        },\r\n        _editRowFromOptionChangedCore: function(rowIndices, rowIndex, oldRowIndex) {\r\n            this._needFocusEditor = true;\r\n            this._dataController.updateItems({\r\n                changeType: \"update\",\r\n                rowIndices: rowIndices\r\n            })\r\n        },\r\n        _focusEditorIfNeed: noop,\r\n        _showEditPopup: noop,\r\n        _repaintEditPopup: noop,\r\n        _getEditPopupHiddenHandler: function() {\r\n            return e => {\r\n                if (this.isEditing()) {\r\n                    this.cancelEditData()\r\n                }\r\n            }\r\n        },\r\n        _getPopupEditFormTemplate: noop,\r\n        _getSaveButtonConfig: function() {\r\n            return {\r\n                text: this.option(\"editing.texts.saveRowChanges\"),\r\n                onClick: this.saveEditData.bind(this)\r\n            }\r\n        },\r\n        _getCancelButtonConfig: function() {\r\n            return {\r\n                text: this.option(\"editing.texts.cancelRowChanges\"),\r\n                onClick: this.cancelEditData.bind(this)\r\n            }\r\n        },\r\n        _removeInternalData: function(key) {\r\n            var internalData = this._getInternalData(key);\r\n            var index = this._internalState.indexOf(internalData);\r\n            if (index > -1) {\r\n                this._internalState.splice(index, 1)\r\n            }\r\n        },\r\n        _updateInsertAfterOrBeforeKeys: function(changes, index) {\r\n            var removeChange = changes[index];\r\n            changes.forEach(change => {\r\n                var insertAfterOrBeforeKey = this._getInsertAfterOrBeforeKey(change);\r\n                if (equalByValue(insertAfterOrBeforeKey, removeChange.key)) {\r\n                    change[isDefined(change.insertAfterKey) ? \"insertAfterKey\" : \"insertBeforeKey\"] = this._getInsertAfterOrBeforeKey(removeChange)\r\n                }\r\n            })\r\n        },\r\n        _removeChange: function(index) {\r\n            if (index >= 0) {\r\n                var changes = [...this.getChanges()];\r\n                var key = changes[index].key;\r\n                this._removeInternalData(key);\r\n                this._updateInsertAfterOrBeforeKeys(changes, index);\r\n                changes.splice(index, 1);\r\n                this._silentOption(EDITING_CHANGES_OPTION_NAME, changes);\r\n                if (equalByValue(this.option(EDITING_EDITROWKEY_OPTION_NAME), key)) {\r\n                    this._resetEditIndices()\r\n                }\r\n            }\r\n        },\r\n        executeOperation: function(deferred, func) {\r\n            this._lastOperation && this._lastOperation.reject();\r\n            this._lastOperation = deferred;\r\n            this.waitForDeferredOperations().done(() => {\r\n                if (\"rejected\" === deferred.state()) {\r\n                    return\r\n                }\r\n                func();\r\n                this._lastOperation = null\r\n            }).fail(() => {\r\n                deferred.reject();\r\n                this._lastOperation = null\r\n            })\r\n        },\r\n        waitForDeferredOperations: function() {\r\n            return when(...this._deferreds)\r\n        },\r\n        _processCanceledEditingCell: noop,\r\n        _repaintEditCell: function(column, oldColumn, oldEditRowIndex) {\r\n            this._needFocusEditor = true;\r\n            if (!column || !column.showEditorAlways || oldColumn && !oldColumn.showEditorAlways) {\r\n                this._editCellInProgress = true;\r\n                this.getController(\"editorFactory\").loseFocus();\r\n                this._dataController.updateItems({\r\n                    changeType: \"update\",\r\n                    rowIndices: [oldEditRowIndex, this._getVisibleEditRowIndex()]\r\n                })\r\n            } else if (column !== oldColumn) {\r\n                this._dataController.updateItems({\r\n                    changeType: \"update\",\r\n                    rowIndices: []\r\n                })\r\n            }\r\n        },\r\n        _delayedInputFocus: function($cell, beforeFocusCallback, callBeforeFocusCallbackAlways) {\r\n            var inputFocus = () => {\r\n                if (beforeFocusCallback) {\r\n                    beforeFocusCallback()\r\n                }\r\n                if ($cell) {\r\n                    var $focusableElement = $cell.find(FOCUSABLE_ELEMENT_SELECTOR).first();\r\n                    gridCoreUtils.focusAndSelectElement(this, $focusableElement)\r\n                }\r\n                this._beforeFocusCallback = null\r\n            };\r\n            if (devices.real().ios || devices.real().android) {\r\n                inputFocus()\r\n            } else {\r\n                if (this._beforeFocusCallback) {\r\n                    this._beforeFocusCallback()\r\n                }\r\n                clearTimeout(this._inputFocusTimeoutID);\r\n                if (callBeforeFocusCallbackAlways) {\r\n                    this._beforeFocusCallback = beforeFocusCallback\r\n                }\r\n                this._inputFocusTimeoutID = setTimeout(inputFocus)\r\n            }\r\n        },\r\n        _focusEditingCell: function(beforeFocusCallback, $editCell, callBeforeFocusCallbackAlways) {\r\n            var rowsView = this.getView(\"rowsView\");\r\n            var editColumnIndex = this._getVisibleEditColumnIndex();\r\n            $editCell = $editCell || rowsView && rowsView._getCellElement(this._getVisibleEditRowIndex(), editColumnIndex);\r\n            if ($editCell) {\r\n                this._delayedInputFocus($editCell, beforeFocusCallback, callBeforeFocusCallbackAlways)\r\n            }\r\n        },\r\n        deleteRow: function(rowIndex) {\r\n            this._checkAndDeleteRow(rowIndex)\r\n        },\r\n        _checkAndDeleteRow: function(rowIndex) {\r\n            var editingOptions = this.option(\"editing\");\r\n            var editingTexts = null === editingOptions || void 0 === editingOptions ? void 0 : editingOptions.texts;\r\n            var confirmDelete = null === editingOptions || void 0 === editingOptions ? void 0 : editingOptions.confirmDelete;\r\n            var confirmDeleteMessage = null === editingTexts || void 0 === editingTexts ? void 0 : editingTexts.confirmDeleteMessage;\r\n            var item = this._dataController.items()[rowIndex];\r\n            var allowDeleting = !this.isEditing() || item.isNewRow;\r\n            if (item && allowDeleting) {\r\n                if (!confirmDelete || !confirmDeleteMessage) {\r\n                    this._deleteRowCore(rowIndex)\r\n                } else {\r\n                    var confirmDeleteTitle = editingTexts && editingTexts.confirmDeleteTitle;\r\n                    var showDialogTitle = isDefined(confirmDeleteTitle) && confirmDeleteTitle.length > 0;\r\n                    confirm(confirmDeleteMessage, confirmDeleteTitle, showDialogTitle).done(confirmResult => {\r\n                        if (confirmResult) {\r\n                            this._deleteRowCore(rowIndex)\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        _deleteRowCore: function(rowIndex) {\r\n            var dataController = this._dataController;\r\n            var item = dataController.items()[rowIndex];\r\n            var key = item && item.key;\r\n            var oldEditRowIndex = this._getVisibleEditRowIndex();\r\n            this.refresh();\r\n            var changes = this.getChanges();\r\n            var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n            if (editIndex >= 0) {\r\n                if (changes[editIndex].type === DATA_EDIT_DATA_INSERT_TYPE) {\r\n                    this._removeChange(editIndex)\r\n                } else {\r\n                    this._addChange({\r\n                        key: key,\r\n                        type: DATA_EDIT_DATA_REMOVE_TYPE\r\n                    })\r\n                }\r\n            } else {\r\n                this._addChange({\r\n                    key: key,\r\n                    oldData: item.data,\r\n                    type: DATA_EDIT_DATA_REMOVE_TYPE\r\n                })\r\n            }\r\n            return this._afterDeleteRow(rowIndex, oldEditRowIndex)\r\n        },\r\n        _afterDeleteRow: function(rowIndex, oldEditRowIndex) {\r\n            return this.saveEditData()\r\n        },\r\n        undeleteRow: function(rowIndex) {\r\n            var dataController = this._dataController;\r\n            var item = dataController.items()[rowIndex];\r\n            var oldEditRowIndex = this._getVisibleEditRowIndex();\r\n            var key = item && item.key;\r\n            var changes = this.getChanges();\r\n            if (item) {\r\n                var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n                if (editIndex >= 0) {\r\n                    var {\r\n                        data: data\r\n                    } = changes[editIndex];\r\n                    if (isEmptyObject(data)) {\r\n                        this._removeChange(editIndex)\r\n                    } else {\r\n                        this._addChange({\r\n                            key: key,\r\n                            type: DATA_EDIT_DATA_UPDATE_TYPE\r\n                        })\r\n                    }\r\n                    dataController.updateItems({\r\n                        changeType: \"update\",\r\n                        rowIndices: [oldEditRowIndex, rowIndex]\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        _fireOnSaving: function() {\r\n            var onSavingParams = {\r\n                cancel: false,\r\n                promise: null,\r\n                changes: [...this.getChanges()]\r\n            };\r\n            this.executeAction(\"onSaving\", onSavingParams);\r\n            var d = new Deferred;\r\n            when(fromPromise(onSavingParams.promise)).done(() => {\r\n                d.resolve(onSavingParams)\r\n            }).fail(arg => {\r\n                createFailureHandler(d);\r\n                this._fireDataErrorOccurred(arg);\r\n                d.resolve({\r\n                    cancel: true\r\n                })\r\n            });\r\n            return d\r\n        },\r\n        _executeEditingAction: function(actionName, params, func) {\r\n            if (this.component._disposed) {\r\n                return null\r\n            }\r\n            var deferred = new Deferred;\r\n            this.executeAction(actionName, params);\r\n            when(fromPromise(params.cancel)).done((function(cancel) {\r\n                if (cancel) {\r\n                    setTimeout((function() {\r\n                        deferred.resolve(\"cancel\")\r\n                    }))\r\n                } else {\r\n                    func(params).done(deferred.resolve).fail(createFailureHandler(deferred))\r\n                }\r\n            })).fail(createFailureHandler(deferred));\r\n            return deferred\r\n        },\r\n        _processChanges: function(deferreds, results, dataChanges, changes) {\r\n            var store = this._dataController.store();\r\n            each(changes, (index, change) => {\r\n                var oldData = this._getOldData(change.key);\r\n                var {\r\n                    data: data,\r\n                    type: type\r\n                } = change;\r\n                var changeCopy = _extends({}, change);\r\n                var deferred;\r\n                var params;\r\n                if (this._beforeSaveEditData(change, index)) {\r\n                    return\r\n                }\r\n                switch (type) {\r\n                    case DATA_EDIT_DATA_REMOVE_TYPE:\r\n                        params = {\r\n                            data: oldData,\r\n                            key: change.key,\r\n                            cancel: false\r\n                        };\r\n                        deferred = this._executeEditingAction(\"onRowRemoving\", params, (function() {\r\n                            return store.remove(change.key).done((function(key) {\r\n                                dataChanges.push({\r\n                                    type: \"remove\",\r\n                                    key: key\r\n                                })\r\n                            }))\r\n                        }));\r\n                        break;\r\n                    case DATA_EDIT_DATA_INSERT_TYPE:\r\n                        params = {\r\n                            data: data,\r\n                            cancel: false\r\n                        };\r\n                        deferred = this._executeEditingAction(\"onRowInserting\", params, (function() {\r\n                            return store.insert(params.data).done((function(data, key) {\r\n                                if (isDefined(key)) {\r\n                                    changeCopy.key = key\r\n                                }\r\n                                if (data && isObject(data) && data !== params.data) {\r\n                                    changeCopy.data = data\r\n                                }\r\n                                dataChanges.push({\r\n                                    type: \"insert\",\r\n                                    data: data,\r\n                                    index: 0\r\n                                })\r\n                            }))\r\n                        }));\r\n                        break;\r\n                    case DATA_EDIT_DATA_UPDATE_TYPE:\r\n                        params = {\r\n                            newData: data,\r\n                            oldData: oldData,\r\n                            key: change.key,\r\n                            cancel: false\r\n                        };\r\n                        deferred = this._executeEditingAction(\"onRowUpdating\", params, (function() {\r\n                            return store.update(change.key, params.newData).done((function(data, key) {\r\n                                if (data && isObject(data) && data !== params.newData) {\r\n                                    changeCopy.data = data\r\n                                }\r\n                                dataChanges.push({\r\n                                    type: \"update\",\r\n                                    key: key,\r\n                                    data: data\r\n                                })\r\n                            }))\r\n                        }))\r\n                }\r\n                changes[index] = changeCopy;\r\n                if (deferred) {\r\n                    var doneDeferred = new Deferred;\r\n                    deferred.always((function(data) {\r\n                        results.push({\r\n                            key: change.key,\r\n                            result: data\r\n                        })\r\n                    })).always(doneDeferred.resolve);\r\n                    deferreds.push(doneDeferred.promise())\r\n                }\r\n            })\r\n        },\r\n        _processRemoveIfError: function(changes, editIndex) {\r\n            var change = changes[editIndex];\r\n            if ((null === change || void 0 === change ? void 0 : change.type) === DATA_EDIT_DATA_REMOVE_TYPE) {\r\n                if (editIndex >= 0) {\r\n                    changes.splice(editIndex, 1)\r\n                }\r\n            }\r\n            return true\r\n        },\r\n        _processRemove: function(changes, editIndex, cancel) {\r\n            var change = changes[editIndex];\r\n            if (!cancel || !change || change.type === DATA_EDIT_DATA_REMOVE_TYPE) {\r\n                return this._processRemoveCore(changes, editIndex, !cancel || !change)\r\n            }\r\n        },\r\n        _processRemoveCore: function(changes, editIndex) {\r\n            if (editIndex >= 0) {\r\n                changes.splice(editIndex, 1)\r\n            }\r\n            return true\r\n        },\r\n        _processSaveEditDataResult: function(results) {\r\n            var hasSavedData = false;\r\n            var changes = [...this.getChanges()];\r\n            var changesLength = changes.length;\r\n            for (var i = 0; i < results.length; i++) {\r\n                var arg = results[i].result;\r\n                var cancel = \"cancel\" === arg;\r\n                var editIndex = gridCoreUtils.getIndexByKey(results[i].key, changes);\r\n                var change = changes[editIndex];\r\n                var isError = arg && arg instanceof Error;\r\n                if (isError) {\r\n                    if (change) {\r\n                        this._addInternalData({\r\n                            key: change.key,\r\n                            error: arg\r\n                        })\r\n                    }\r\n                    this._fireDataErrorOccurred(arg);\r\n                    if (this._processRemoveIfError(changes, editIndex)) {\r\n                        break\r\n                    }\r\n                } else if (this._processRemove(changes, editIndex, cancel)) {\r\n                    hasSavedData = !cancel\r\n                }\r\n            }\r\n            if (changes.length < changesLength) {\r\n                this._silentOption(EDITING_CHANGES_OPTION_NAME, changes)\r\n            }\r\n            return hasSavedData\r\n        },\r\n        _fireSaveEditDataEvents: function(changes) {\r\n            each(changes, (_, _ref) => {\r\n                var {\r\n                    data: data,\r\n                    key: key,\r\n                    type: type\r\n                } = _ref;\r\n                var internalData = this._addInternalData({\r\n                    key: key\r\n                });\r\n                var params = {\r\n                    key: key,\r\n                    data: data\r\n                };\r\n                if (internalData.error) {\r\n                    params.error = internalData.error\r\n                }\r\n                switch (type) {\r\n                    case DATA_EDIT_DATA_REMOVE_TYPE:\r\n                        this.executeAction(\"onRowRemoved\", extend({}, params, {\r\n                            data: internalData.oldData\r\n                        }));\r\n                        break;\r\n                    case DATA_EDIT_DATA_INSERT_TYPE:\r\n                        this.executeAction(\"onRowInserted\", params);\r\n                        break;\r\n                    case DATA_EDIT_DATA_UPDATE_TYPE:\r\n                        this.executeAction(\"onRowUpdated\", params)\r\n                }\r\n            });\r\n            this.executeAction(\"onSaved\", {\r\n                changes: changes\r\n            })\r\n        },\r\n        saveEditData: function() {\r\n            var deferred = new Deferred;\r\n            this.waitForDeferredOperations().done(() => {\r\n                if (this.isSaving()) {\r\n                    this._resolveAfterSave(deferred);\r\n                    return\r\n                }\r\n                when(this._beforeSaveEditData()).done(cancel => {\r\n                    if (cancel) {\r\n                        this._resolveAfterSave(deferred, {\r\n                            cancel: cancel\r\n                        });\r\n                        return\r\n                    }\r\n                    this._saving = true;\r\n                    var options = {};\r\n                    this._saveEditDataInner(options).always(() => {\r\n                        this._saving = false;\r\n                        options.needFocusEditCell && this._focusEditingCell()\r\n                    }).done(deferred.resolve).fail(deferred.reject)\r\n                }).fail(deferred.reject)\r\n            }).fail(deferred.reject);\r\n            return deferred.promise()\r\n        },\r\n        _resolveAfterSave: function(deferred) {\r\n            var {\r\n                cancel: cancel,\r\n                error: error\r\n            } = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\r\n            when(this._afterSaveEditData(cancel)).done((function() {\r\n                deferred.resolve(error)\r\n            })).fail(deferred.reject)\r\n        },\r\n        _saveEditDataInner: function(options) {\r\n            var results = [];\r\n            var deferreds = [];\r\n            var dataChanges = [];\r\n            var dataController = this._dataController;\r\n            var dataSource = dataController.dataSource();\r\n            var result = new Deferred;\r\n            when(this._fireOnSaving()).done(_ref2 => {\r\n                var {\r\n                    cancel: cancel,\r\n                    changes: changes\r\n                } = _ref2;\r\n                if (cancel) {\r\n                    return result.resolve().promise()\r\n                }\r\n                this._processChanges(deferreds, results, dataChanges, changes);\r\n                if (deferreds.length) {\r\n                    null === dataSource || void 0 === dataSource ? void 0 : dataSource.beginLoading();\r\n                    when(...deferreds).done(() => {\r\n                        if (this._processSaveEditDataResult(results)) {\r\n                            this._endSaving(dataChanges, changes, result)\r\n                        } else {\r\n                            null === dataSource || void 0 === dataSource ? void 0 : dataSource.endLoading();\r\n                            result.resolve()\r\n                        }\r\n                    }).fail(error => {\r\n                        null === dataSource || void 0 === dataSource ? void 0 : dataSource.endLoading();\r\n                        result.resolve(error)\r\n                    });\r\n                    return result.always(() => {\r\n                        options.needFocusEditCell = true\r\n                    }).promise()\r\n                }\r\n                this._cancelSaving(result)\r\n            }).fail(result.reject);\r\n            return result.promise()\r\n        },\r\n        _beforeEndSaving: function(changes) {\r\n            this._resetEditIndices()\r\n        },\r\n        _endSaving: function(dataChanges, changes, deferred) {\r\n            var dataSource = this._dataController.dataSource();\r\n            this._beforeEndSaving(changes);\r\n            null === dataSource || void 0 === dataSource ? void 0 : dataSource.endLoading();\r\n            this._refreshDataAfterSave(dataChanges, changes, deferred)\r\n        },\r\n        _cancelSaving: function(result) {\r\n            this.executeAction(\"onSaved\", {\r\n                changes: []\r\n            });\r\n            this._resolveAfterSave(result)\r\n        },\r\n        _refreshDataAfterSave: function(dataChanges, changes, deferred) {\r\n            var dataController = this._dataController;\r\n            var refreshMode = this.option(\"editing.refreshMode\");\r\n            var isFullRefresh = \"reshape\" !== refreshMode && \"repaint\" !== refreshMode;\r\n            if (!isFullRefresh) {\r\n                dataController.push(dataChanges)\r\n            }\r\n            when(dataController.refresh({\r\n                selection: isFullRefresh,\r\n                reload: isFullRefresh,\r\n                load: \"reshape\" === refreshMode,\r\n                changesOnly: this.option(\"repaintChangesOnly\")\r\n            })).always(() => {\r\n                this._fireSaveEditDataEvents(changes)\r\n            }).done(() => {\r\n                this._resolveAfterSave(deferred)\r\n            }).fail(error => {\r\n                this._resolveAfterSave(deferred, {\r\n                    error: error\r\n                })\r\n            })\r\n        },\r\n        isSaving: function() {\r\n            return this._saving\r\n        },\r\n        _updateEditColumn: function() {\r\n            var isEditColumnVisible = this._isEditColumnVisible();\r\n            var useIcons = this.option(\"editing.useIcons\");\r\n            var cssClass = COMMAND_EDIT_CLASS + (useIcons ? \" \" + COMMAND_EDIT_WITH_ICONS_CLASS : \"\");\r\n            this._columnsController.addCommandColumn({\r\n                type: \"buttons\",\r\n                command: \"edit\",\r\n                visible: isEditColumnVisible,\r\n                cssClass: cssClass,\r\n                width: \"auto\",\r\n                alignment: \"center\",\r\n                cellTemplate: this._getEditCommandCellTemplate(),\r\n                fixedPosition: \"right\"\r\n            });\r\n            this._columnsController.columnOption(\"command:edit\", {\r\n                visible: isEditColumnVisible,\r\n                cssClass: cssClass\r\n            })\r\n        },\r\n        _isEditColumnVisible: function() {\r\n            var editingOptions = this.option(\"editing\");\r\n            return editingOptions.allowDeleting\r\n        },\r\n        _isEditButtonDisabled: function() {\r\n            var hasChanges = this.hasChanges();\r\n            var isEditRowDefined = isDefined(this.option(\"editing.editRowKey\"));\r\n            return !(isEditRowDefined || hasChanges)\r\n        },\r\n        _updateEditButtons: function() {\r\n            var headerPanel = this.getView(\"headerPanel\");\r\n            var isButtonDisabled = this._isEditButtonDisabled();\r\n            if (headerPanel) {\r\n                headerPanel.setToolbarItemDisabled(\"saveButton\", isButtonDisabled);\r\n                headerPanel.setToolbarItemDisabled(\"revertButton\", isButtonDisabled)\r\n            }\r\n        },\r\n        _applyModified: function($element) {\r\n            $element && $element.addClass(CELL_MODIFIED)\r\n        },\r\n        _beforeCloseEditCellInBatchMode: noop,\r\n        cancelEditData: function() {\r\n            var changes = this.getChanges();\r\n            var params = {\r\n                cancel: false,\r\n                changes: changes\r\n            };\r\n            this.executeAction(\"onEditCanceling\", params);\r\n            if (!params.cancel) {\r\n                this._cancelEditDataCore();\r\n                this.executeAction(\"onEditCanceled\", {\r\n                    changes: changes\r\n                })\r\n            }\r\n        },\r\n        _cancelEditDataCore: function() {\r\n            var rowIndex = this._getVisibleEditRowIndex();\r\n            this._beforeCancelEditData();\r\n            this.init();\r\n            this.resetChanges();\r\n            this._resetEditColumnName();\r\n            this._resetEditRowKey();\r\n            this._afterCancelEditData(rowIndex)\r\n        },\r\n        _afterCancelEditData: function(rowIndex) {\r\n            var dataController = this._dataController;\r\n            dataController.updateItems({\r\n                repaintChangesOnly: this.option(\"repaintChangesOnly\")\r\n            })\r\n        },\r\n        _hideEditPopup: noop,\r\n        hasEditData: function() {\r\n            return this.hasChanges()\r\n        },\r\n        update: function(changeType) {\r\n            var dataController = this._dataController;\r\n            if (dataController && this._pageIndex !== dataController.pageIndex()) {\r\n                if (\"refresh\" === changeType) {\r\n                    this.refresh(true)\r\n                }\r\n                this._pageIndex = dataController.pageIndex()\r\n            }\r\n            this._updateEditButtons()\r\n        },\r\n        _getRowIndicesForCascadeUpdating: function(row, skipCurrentRow) {\r\n            return skipCurrentRow ? [] : [row.rowIndex]\r\n        },\r\n        addDeferred: function(deferred) {\r\n            if (this._deferreds.indexOf(deferred) < 0) {\r\n                this._deferreds.push(deferred);\r\n                deferred.always(() => {\r\n                    var index = this._deferreds.indexOf(deferred);\r\n                    if (index >= 0) {\r\n                        this._deferreds.splice(index, 1)\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        _prepareChange: function(options, value, text) {\r\n            var _options$row;\r\n            var newData = {};\r\n            var oldData = null === (_options$row = options.row) || void 0 === _options$row ? void 0 : _options$row.data;\r\n            var rowKey = options.key;\r\n            var deferred = new Deferred;\r\n            if (void 0 !== rowKey) {\r\n                options.value = value;\r\n                var setCellValueResult = fromPromise(options.column.setCellValue(newData, value, extend(true, {}, oldData), text));\r\n                setCellValueResult.done((function() {\r\n                    deferred.resolve({\r\n                        data: newData,\r\n                        key: rowKey,\r\n                        oldData: oldData,\r\n                        type: DATA_EDIT_DATA_UPDATE_TYPE\r\n                    })\r\n                })).fail(createFailureHandler(deferred)).fail(arg => this._fireDataErrorOccurred(arg));\r\n                if (isDefined(text) && options.column.displayValueMap) {\r\n                    options.column.displayValueMap[value] = text\r\n                }\r\n                this._updateRowValues(options);\r\n                this.addDeferred(deferred)\r\n            }\r\n            return deferred\r\n        },\r\n        _updateRowValues: function(options) {\r\n            if (options.values) {\r\n                var dataController = this._dataController;\r\n                var rowIndex = dataController.getRowIndexByKey(options.key);\r\n                var row = dataController.getVisibleRows()[rowIndex];\r\n                if (row) {\r\n                    options.values = row.values\r\n                }\r\n                options.values[options.columnIndex] = options.value\r\n            }\r\n        },\r\n        updateFieldValue: function(options, value, text, forceUpdateRow) {\r\n            var rowKey = options.key;\r\n            var deferred = new Deferred;\r\n            if (void 0 === rowKey) {\r\n                this._dataController.fireError(\"E1043\")\r\n            }\r\n            if (options.column.setCellValue) {\r\n                this._prepareChange(options, value, text).done(params => {\r\n                    when(this._applyChange(options, params, forceUpdateRow)).always(() => {\r\n                        deferred.resolve()\r\n                    })\r\n                })\r\n            } else {\r\n                deferred.resolve()\r\n            }\r\n            return deferred.promise()\r\n        },\r\n        _focusPreviousEditingCellIfNeed: function(options) {\r\n            if (this.hasEditData() && !this.isEditCell(options.rowIndex, options.columnIndex)) {\r\n                this._focusEditingCell();\r\n                this._updateEditRow(options.row, true);\r\n                return true\r\n            }\r\n        },\r\n        _needUpdateRow: function(column) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            if (!column) {\r\n                column = this._getEditColumn()\r\n            }\r\n            var isCustomSetCellValue = column && column.setCellValue !== column.defaultSetCellValue;\r\n            var isCustomCalculateCellValue = visibleColumns.some(visibleColumn => visibleColumn.calculateCellValue !== visibleColumn.defaultCalculateCellValue);\r\n            return isCustomSetCellValue || isCustomCalculateCellValue\r\n        },\r\n        _applyChange: function(options, params, forceUpdateRow) {\r\n            var changeOptions = _extends({}, options, {\r\n                forceUpdateRow: forceUpdateRow\r\n            });\r\n            this._addChange(params, changeOptions);\r\n            this._updateEditButtons();\r\n            return this._applyChangeCore(options, changeOptions.forceUpdateRow)\r\n        },\r\n        _applyChangeCore: function(options, forceUpdateRow) {\r\n            var isCustomSetCellValue = options.column.setCellValue !== options.column.defaultSetCellValue;\r\n            var row = options.row;\r\n            if (row) {\r\n                if (forceUpdateRow || isCustomSetCellValue) {\r\n                    this._updateEditRow(row, forceUpdateRow, isCustomSetCellValue)\r\n                } else if (row.update) {\r\n                    row.update()\r\n                }\r\n            }\r\n        },\r\n        _updateEditRowCore: function(row, skipCurrentRow, isCustomSetCellValue) {\r\n            this._dataController.updateItems({\r\n                changeType: \"update\",\r\n                rowIndices: this._getRowIndicesForCascadeUpdating(row, skipCurrentRow)\r\n            })\r\n        },\r\n        _updateEditRow: function(row, forceUpdateRow, isCustomSetCellValue) {\r\n            if (forceUpdateRow) {\r\n                this._updateRowImmediately(row, forceUpdateRow, isCustomSetCellValue)\r\n            } else {\r\n                this._updateRowWithDelay(row, isCustomSetCellValue)\r\n            }\r\n        },\r\n        _updateRowImmediately: function(row, forceUpdateRow, isCustomSetCellValue) {\r\n            this._updateEditRowCore(row, !forceUpdateRow, isCustomSetCellValue);\r\n            this._validateEditFormAfterUpdate(row, isCustomSetCellValue);\r\n            if (!forceUpdateRow) {\r\n                this._focusEditingCell()\r\n            }\r\n        },\r\n        _updateRowWithDelay: function(row, isCustomSetCellValue) {\r\n            var deferred = new Deferred;\r\n            this.addDeferred(deferred);\r\n            setTimeout(() => {\r\n                var $focusedElement = $(domAdapter.getActiveElement());\r\n                var columnIndex = this._rowsView.getCellIndex($focusedElement, row.rowIndex);\r\n                var focusedElement = $focusedElement.get(0);\r\n                var selectionRange = gridCoreUtils.getSelectionRange(focusedElement);\r\n                this._updateEditRowCore(row, false, isCustomSetCellValue);\r\n                this._validateEditFormAfterUpdate(row, isCustomSetCellValue);\r\n                if (columnIndex >= 0) {\r\n                    var $focusedItem = this._rowsView._getCellElement(row.rowIndex, columnIndex);\r\n                    this._delayedInputFocus($focusedItem, () => {\r\n                        setTimeout(() => {\r\n                            focusedElement = domAdapter.getActiveElement();\r\n                            if (selectionRange.selectionStart >= 0) {\r\n                                gridCoreUtils.setSelectionRange(focusedElement, selectionRange)\r\n                            }\r\n                        })\r\n                    })\r\n                }\r\n                deferred.resolve()\r\n            })\r\n        },\r\n        _validateEditFormAfterUpdate: noop,\r\n        _addChange: function(changeParams, options) {\r\n            var _this$getChanges;\r\n            var row = null === options || void 0 === options ? void 0 : options.row;\r\n            var changes = [...this.getChanges()];\r\n            var index = gridCoreUtils.getIndexByKey(changeParams.key, changes);\r\n            if (index < 0) {\r\n                index = changes.length;\r\n                this._addInternalData({\r\n                    key: changeParams.key,\r\n                    oldData: changeParams.oldData\r\n                });\r\n                delete changeParams.oldData;\r\n                changes.push(changeParams)\r\n            }\r\n            var change = _extends({}, changes[index]);\r\n            if (change) {\r\n                if (changeParams.data) {\r\n                    change.data = createObjectWithChanges(change.data, changeParams.data)\r\n                }\r\n                if ((!change.type || !changeParams.data) && changeParams.type) {\r\n                    change.type = changeParams.type\r\n                }\r\n                if (row) {\r\n                    row.oldData = this._getOldData(row.key);\r\n                    row.data = createObjectWithChanges(row.data, changeParams.data)\r\n                }\r\n            }\r\n            changes[index] = change;\r\n            this._silentOption(EDITING_CHANGES_OPTION_NAME, changes);\r\n            if (options && change !== (null === (_this$getChanges = this.getChanges()) || void 0 === _this$getChanges ? void 0 : _this$getChanges[index])) {\r\n                options.forceUpdateRow = true\r\n            }\r\n            return change\r\n        },\r\n        _getFormEditItemTemplate: function(cellOptions, column) {\r\n            return column.editCellTemplate || this._getDefaultEditorTemplate()\r\n        },\r\n        getColumnTemplate: function(options) {\r\n            var column = options.column;\r\n            var rowIndex = options.row && options.row.rowIndex;\r\n            var template;\r\n            var isRowMode = this.isRowBasedEditMode();\r\n            var isRowEditing = this.isEditRow(rowIndex);\r\n            var isCellEditing = this.isEditCell(rowIndex, options.columnIndex);\r\n            var editingStartOptions;\r\n            if ((column.showEditorAlways || column.setCellValue && (isRowEditing && column.allowEditing || isCellEditing)) && (\"data\" === options.rowType || \"detailAdaptive\" === options.rowType) && !column.command) {\r\n                var allowUpdating = this.allowUpdating(options);\r\n                if (((allowUpdating || isRowEditing) && column.allowEditing || isCellEditing) && (isRowEditing || !isRowMode)) {\r\n                    if (column.showEditorAlways && !isRowMode) {\r\n                        editingStartOptions = {\r\n                            cancel: false,\r\n                            key: options.row.isNewRow ? void 0 : options.row.key,\r\n                            data: options.row.data,\r\n                            column: column\r\n                        };\r\n                        this._isEditingStart(editingStartOptions)\r\n                    }\r\n                    if (!editingStartOptions || !editingStartOptions.cancel) {\r\n                        options.setValue = (value, text) => {\r\n                            this.updateFieldValue(options, value, text)\r\n                        }\r\n                    }\r\n                }\r\n                template = column.editCellTemplate || this._getDefaultEditorTemplate()\r\n            } else if (\"detail\" === column.command && \"detail\" === options.rowType && isRowEditing) {\r\n                template = null === this || void 0 === this ? void 0 : this.getEditFormTemplate(options)\r\n            }\r\n            return template\r\n        },\r\n        _createButton: function($container, button, options, change) {\r\n            var icon = EDIT_ICON_CLASS[button.name];\r\n            var useIcons = this.option(\"editing.useIcons\");\r\n            var useLegacyColumnButtonTemplate = this.option(\"useLegacyColumnButtonTemplate\");\r\n            var $button = $(\"<a>\").attr(\"href\", \"#\").addClass(LINK_CLASS).addClass(button.cssClass);\r\n            if (button.template && useLegacyColumnButtonTemplate) {\r\n                this._rowsView.renderTemplate($container, button.template, options, true)\r\n            } else {\r\n                if (button.template) {\r\n                    $button = $(\"<span>\").addClass(button.cssClass)\r\n                } else if (useIcons && icon || button.icon) {\r\n                    icon = button.icon || icon;\r\n                    var iconType = iconUtils.getImageSourceType(icon);\r\n                    if (\"image\" === iconType || \"svg\" === iconType) {\r\n                        $button = iconUtils.getImageContainer(icon).addClass(button.cssClass)\r\n                    } else {\r\n                        $button.addClass(\"dx-icon\" + (\"dxIcon\" === iconType ? \"-\" : \" \") + icon).attr(\"title\", button.text)\r\n                    }\r\n                    $button.addClass(\"dx-link-icon\");\r\n                    $container.addClass(COMMAND_EDIT_WITH_ICONS_CLASS);\r\n                    var localizationName = this.getButtonLocalizationNames()[button.name];\r\n                    localizationName && $button.attr(\"aria-label\", messageLocalization.format(localizationName))\r\n                } else {\r\n                    $button.text(button.text)\r\n                }\r\n                if (isDefined(button.hint)) {\r\n                    $button.attr(\"title\", button.hint)\r\n                }\r\n                if (this._isButtonDisabled(button, options)) {\r\n                    $button.addClass(\"dx-state-disabled\")\r\n                } else if (!button.template || button.onClick) {\r\n                    eventsEngine.on($button, addNamespace(\"click\", EDITING_NAMESPACE), this.createAction((function(e) {\r\n                        var _button$onClick;\r\n                        null === (_button$onClick = button.onClick) || void 0 === _button$onClick ? void 0 : _button$onClick.call(button, extend({}, e, {\r\n                            row: options.row,\r\n                            column: options.column\r\n                        }));\r\n                        e.event.preventDefault();\r\n                        e.event.stopPropagation()\r\n                    })))\r\n                }\r\n                $container.append($button, \"&nbsp;\");\r\n                if (button.template) {\r\n                    this._rowsView.renderTemplate($button, button.template, options, true, change)\r\n                }\r\n            }\r\n        },\r\n        getButtonLocalizationNames: () => ({\r\n            edit: \"dxDataGrid-editingEditRow\",\r\n            save: \"dxDataGrid-editingSaveRowChanges\",\r\n            delete: \"dxDataGrid-editingDeleteRow\",\r\n            undelete: \"dxDataGrid-editingUndeleteRow\",\r\n            cancel: \"dxDataGrid-editingCancelRowChanges\"\r\n        }),\r\n        prepareButtonItem: function(headerPanel, name, methodName, sortIndex) {\r\n            var editingTexts = this.option(\"editing.texts\") || {};\r\n            var titleButtonTextByClassNames = {\r\n                revert: editingTexts.cancelAllChanges,\r\n                save: editingTexts.saveAllChanges,\r\n                addRow: editingTexts.addRow\r\n            };\r\n            var className = {\r\n                revert: \"cancel\",\r\n                save: \"save\",\r\n                addRow: \"addrow\"\r\n            } [name];\r\n            var hintText = titleButtonTextByClassNames[name];\r\n            var isButtonDisabled = (\"save\" === className || \"cancel\" === className) && this._isEditButtonDisabled();\r\n            return {\r\n                widget: \"dxButton\",\r\n                options: {\r\n                    onInitialized: e => {\r\n                        $(e.element).addClass(headerPanel._getToolbarButtonClass(EDIT_BUTTON_CLASS + \" \" + this.addWidgetPrefix(className) + \"-button\"))\r\n                    },\r\n                    icon: \"edit-button-\" + className,\r\n                    disabled: isButtonDisabled,\r\n                    onClick: () => {\r\n                        setTimeout(() => {\r\n                            this[methodName]()\r\n                        })\r\n                    },\r\n                    text: hintText,\r\n                    hint: hintText\r\n                },\r\n                showText: \"inMenu\",\r\n                name: name + \"Button\",\r\n                location: \"after\",\r\n                locateInMenu: \"auto\",\r\n                sortIndex: sortIndex\r\n            }\r\n        },\r\n        prepareEditButtons: function(headerPanel) {\r\n            var editingOptions = this.option(\"editing\") || {};\r\n            var buttonItems = [];\r\n            if (editingOptions.allowAdding) {\r\n                buttonItems.push(this.prepareButtonItem(headerPanel, \"addRow\", \"addRow\", 20))\r\n            }\r\n            return buttonItems\r\n        },\r\n        highlightDataCell: function($cell, parameters) {\r\n            var cellModified = this.isCellModified(parameters);\r\n            var shouldHighlight = cellModified && parameters.column.setCellValue && (this.getEditMode() !== EDIT_MODE_ROW || !parameters.row.isEditing);\r\n            shouldHighlight && $cell.addClass(CELL_MODIFIED)\r\n        },\r\n        _afterInsertRow: noop,\r\n        _beforeSaveEditData: function(change) {\r\n            if (change && !isDefined(change.key) && isDefined(change.type)) {\r\n                return true\r\n            }\r\n        },\r\n        _afterSaveEditData: noop,\r\n        _beforeCancelEditData: noop,\r\n        _allowEditAction: function(actionName, options) {\r\n            var allowEditAction = this.option(\"editing.\" + actionName);\r\n            if (isFunction(allowEditAction)) {\r\n                allowEditAction = allowEditAction({\r\n                    component: this.component,\r\n                    row: options.row\r\n                })\r\n            }\r\n            return allowEditAction\r\n        },\r\n        allowUpdating: function(options, eventName) {\r\n            var startEditAction = this.option(\"editing.startEditAction\") || DEFAULT_START_EDIT_ACTION;\r\n            var needCallback = arguments.length > 1 ? startEditAction === eventName || \"down\" === eventName : true;\r\n            return needCallback && this._allowEditAction(\"allowUpdating\", options)\r\n        },\r\n        allowDeleting: function(options) {\r\n            return this._allowEditAction(\"allowDeleting\", options)\r\n        },\r\n        isCellModified: function(parameters) {\r\n            var columnIndex = parameters.columnIndex;\r\n            var modifiedValues = parameters.row && (parameters.row.isNewRow ? parameters.row.values : parameters.row.modifiedValues);\r\n            return !!modifiedValues && void 0 !== modifiedValues[columnIndex]\r\n        },\r\n        isNewRowInEditMode: function() {\r\n            var visibleEditRowIndex = this._getVisibleEditRowIndex();\r\n            var rows = this._dataController.items();\r\n            return visibleEditRowIndex >= 0 ? rows[visibleEditRowIndex].isNewRow : false\r\n        }\r\n    }\r\n}());\r\nexport var editingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            editing: {\r\n                mode: \"row\",\r\n                refreshMode: \"full\",\r\n                newRowPosition: VIEWPORT_TOP_NEW_ROW_POSITION,\r\n                allowAdding: false,\r\n                allowUpdating: false,\r\n                allowDeleting: false,\r\n                useIcons: false,\r\n                selectTextOnEditStart: false,\r\n                confirmDelete: true,\r\n                texts: {\r\n                    editRow: messageLocalization.format(\"dxDataGrid-editingEditRow\"),\r\n                    saveAllChanges: messageLocalization.format(\"dxDataGrid-editingSaveAllChanges\"),\r\n                    saveRowChanges: messageLocalization.format(\"dxDataGrid-editingSaveRowChanges\"),\r\n                    cancelAllChanges: messageLocalization.format(\"dxDataGrid-editingCancelAllChanges\"),\r\n                    cancelRowChanges: messageLocalization.format(\"dxDataGrid-editingCancelRowChanges\"),\r\n                    addRow: messageLocalization.format(\"dxDataGrid-editingAddRow\"),\r\n                    deleteRow: messageLocalization.format(\"dxDataGrid-editingDeleteRow\"),\r\n                    undeleteRow: messageLocalization.format(\"dxDataGrid-editingUndeleteRow\"),\r\n                    confirmDeleteMessage: messageLocalization.format(\"dxDataGrid-editingConfirmDeleteMessage\"),\r\n                    confirmDeleteTitle: \"\"\r\n                },\r\n                form: {\r\n                    colCount: 2\r\n                },\r\n                popup: {},\r\n                startEditAction: \"click\",\r\n                editRowKey: null,\r\n                editColumnName: null,\r\n                changes: []\r\n            },\r\n            useLegacyColumnButtonTemplate: false\r\n        }\r\n    },\r\n    controllers: {\r\n        editing: EditingController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                init: function() {\r\n                    this._editingController = this.getController(\"editing\");\r\n                    this.callBase()\r\n                },\r\n                reload: function(full, repaintChangesOnly) {\r\n                    !repaintChangesOnly && this._editingController.refresh();\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                repaintRows: function() {\r\n                    if (this.getController(\"editing\").isSaving()) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _updateEditRow: function(items) {\r\n                    var editRowKey = this.option(EDITING_EDITROWKEY_OPTION_NAME);\r\n                    var editRowIndex = gridCoreUtils.getIndexByKey(editRowKey, items);\r\n                    var editItem = items[editRowIndex];\r\n                    if (editItem) {\r\n                        var _this$_updateEditItem;\r\n                        editItem.isEditing = true;\r\n                        null === (_this$_updateEditItem = this._updateEditItem) || void 0 === _this$_updateEditItem ? void 0 : _this$_updateEditItem.call(this, editItem)\r\n                    }\r\n                },\r\n                _updateItemsCore: function(change) {\r\n                    this.callBase(change);\r\n                    this._updateEditRow(this.items(true))\r\n                },\r\n                _applyChangeUpdate: function(change) {\r\n                    this._updateEditRow(change.items);\r\n                    this.callBase(change)\r\n                },\r\n                _applyChangesOnly: function(change) {\r\n                    this._updateEditRow(change.items);\r\n                    this.callBase(change)\r\n                },\r\n                _processItems: function(items, change) {\r\n                    items = this._editingController.processItems(items, change);\r\n                    return this.callBase(items, change)\r\n                },\r\n                _processDataItem: function(dataItem, options) {\r\n                    this._editingController.processDataItem(dataItem, options, this.generateDataValues);\r\n                    return this.callBase(dataItem, options)\r\n                },\r\n                _processItem: function(item, options) {\r\n                    item = this.callBase(item, options);\r\n                    if (item.isNewRow) {\r\n                        options.dataIndex--;\r\n                        delete item.dataIndex\r\n                    }\r\n                    return item\r\n                },\r\n                _getChangedColumnIndices: function(oldItem, newItem, rowIndex, isLiveUpdate) {\r\n                    if (oldItem.isNewRow !== newItem.isNewRow || oldItem.removed !== newItem.removed) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _isCellChanged: function(oldRow, newRow, visibleRowIndex, columnIndex, isLiveUpdate) {\r\n                    var editingController = this.getController(\"editing\");\r\n                    var cell = oldRow.cells && oldRow.cells[columnIndex];\r\n                    var isEditing = editingController && editingController.isEditCell(visibleRowIndex, columnIndex);\r\n                    if (isLiveUpdate && isEditing) {\r\n                        return false\r\n                    }\r\n                    if (cell && cell.column && !cell.column.showEditorAlways && cell.isEditing !== isEditing) {\r\n                        return true\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._editingController = this.getController(\"editing\")\r\n                },\r\n                getCellIndex: function($cell, rowIndex) {\r\n                    if (!$cell.is(\"td\") && rowIndex >= 0) {\r\n                        var $cellElements = this.getCellElements(rowIndex);\r\n                        var cellIndex = -1;\r\n                        each($cellElements, (function(index, cellElement) {\r\n                            if ($(cellElement).find($cell).length) {\r\n                                cellIndex = index\r\n                            }\r\n                        }));\r\n                        return cellIndex\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                publicMethods: function() {\r\n                    return this.callBase().concat([\"cellValue\"])\r\n                },\r\n                _getCellTemplate: function(options) {\r\n                    var template = this._editingController.getColumnTemplate(options);\r\n                    return template || this.callBase(options)\r\n                },\r\n                _isNativeClick: function() {\r\n                    return (devices.real().ios || devices.real().android) && this.option(\"editing.allowUpdating\")\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var isRowRemoved = !!row.removed;\r\n                        var isRowInserted = !!row.isNewRow;\r\n                        var isRowModified = !!row.modified;\r\n                        isRowInserted && $row.addClass(ROW_INSERTED);\r\n                        isRowModified && $row.addClass(ROW_MODIFIED);\r\n                        if (isRowInserted || isRowRemoved) {\r\n                            $row.removeClass(ROW_SELECTED)\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _getColumnIndexByElement: function($element) {\r\n                    var $tableElement = $element.closest(\"table\");\r\n                    var $tableElements = this.getTableElements();\r\n                    while ($tableElement.length && !$tableElements.filter($tableElement).length) {\r\n                        $element = $tableElement.closest(\"td\");\r\n                        $tableElement = $element.closest(\"table\")\r\n                    }\r\n                    return this._getColumnIndexByElementCore($element)\r\n                },\r\n                _getColumnIndexByElementCore: function($element) {\r\n                    var $targetElement = $element.closest(\".\" + ROW_CLASS + \"> td:not(.dx-master-detail-cell)\");\r\n                    return this.getCellIndex($targetElement)\r\n                },\r\n                _editCellByClick: function(e, eventName) {\r\n                    var editingController = this._editingController;\r\n                    var $targetElement = $(e.event.target);\r\n                    var columnIndex = this._getColumnIndexByElement($targetElement);\r\n                    var row = this._dataController.items()[e.rowIndex];\r\n                    var allowUpdating = editingController.allowUpdating({\r\n                        row: row\r\n                    }, eventName) || row && row.isNewRow;\r\n                    var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n                    var isEditedCell = editingController.isEditCell(e.rowIndex, columnIndex);\r\n                    var allowEditing = allowUpdating && column && (column.allowEditing || isEditedCell);\r\n                    var startEditAction = this.option(\"editing.startEditAction\") || \"click\";\r\n                    if (\"down\" === eventName) {\r\n                        if ((devices.real().ios || devices.real().android) && !isEditedCell) {\r\n                            resetActiveElement()\r\n                        }\r\n                        return column && column.showEditorAlways && allowEditing && editingController.editCell(e.rowIndex, columnIndex)\r\n                    }\r\n                    if (\"click\" === eventName && \"dblClick\" === startEditAction && !isEditedCell) {\r\n                        var withoutSaveEditData = null === row || void 0 === row ? void 0 : row.isNewRow;\r\n                        editingController.closeEditCell(false, withoutSaveEditData)\r\n                    }\r\n                    if (allowEditing && eventName === startEditAction) {\r\n                        return editingController.editCell(e.rowIndex, columnIndex) || editingController.isEditRow(e.rowIndex)\r\n                    }\r\n                },\r\n                _rowPointerDown: function(e) {\r\n                    this._pointerDownTimeout = setTimeout(() => {\r\n                        this._editCellByClick(e, \"down\")\r\n                    })\r\n                },\r\n                _rowClick: function(e) {\r\n                    var isEditForm = $(e.rowElement).hasClass(this.addWidgetPrefix(EDIT_FORM_CLASS));\r\n                    e.event[TARGET_COMPONENT_NAME] = this.component;\r\n                    if (!this._editCellByClick(e, \"click\") && !isEditForm) {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _rowDblClick: function(e) {\r\n                    if (!this._editCellByClick(e, \"dblClick\")) {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _cellPrepared: function($cell, parameters) {\r\n                    var editingController = this._editingController;\r\n                    var isCommandCell = !!parameters.column.command;\r\n                    var isEditableCell = parameters.setValue;\r\n                    var isEditRow = editingController.isEditRow(parameters.rowIndex);\r\n                    var isEditing = isEditingCell(isEditRow, parameters);\r\n                    if (isEditingOrShowEditorAlwaysDataCell(isEditRow, parameters)) {\r\n                        var alignment = parameters.column.alignment;\r\n                        $cell.toggleClass(this.addWidgetPrefix(READONLY_CLASS), !isEditableCell).toggleClass(CELL_FOCUS_DISABLED_CLASS, !isEditableCell);\r\n                        if (alignment) {\r\n                            $cell.find(EDITORS_INPUT_SELECTOR).first().css(\"textAlign\", alignment)\r\n                        }\r\n                    }\r\n                    if (isEditing) {\r\n                        this._editCellPrepared($cell)\r\n                    }\r\n                    if (parameters.column && !isCommandCell) {\r\n                        editingController.highlightDataCell($cell, parameters)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _editCellPrepared: noop,\r\n                _formItemPrepared: noop,\r\n                _getCellOptions: function(options) {\r\n                    var cellOptions = this.callBase(options);\r\n                    cellOptions.isEditing = this._editingController.isEditCell(cellOptions.rowIndex, cellOptions.columnIndex);\r\n                    return cellOptions\r\n                },\r\n                _createCell: function(options) {\r\n                    var $cell = this.callBase(options);\r\n                    var isEditRow = this._editingController.isEditRow(options.rowIndex);\r\n                    isEditingOrShowEditorAlwaysDataCell(isEditRow, options) && $cell.addClass(EDITOR_CELL_CLASS);\r\n                    return $cell\r\n                },\r\n                cellValue: function(rowIndex, columnIdentifier, value, text) {\r\n                    var cellOptions = this.getCellOptions(rowIndex, columnIdentifier);\r\n                    if (cellOptions) {\r\n                        if (void 0 === value) {\r\n                            return cellOptions.value\r\n                        } else {\r\n                            this._editingController.updateFieldValue(cellOptions, value, text, true)\r\n                        }\r\n                    }\r\n                },\r\n                dispose: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    clearTimeout(this._pointerDownTimeout)\r\n                },\r\n                _renderCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._editingController._focusEditorIfNeed()\r\n                }\r\n            },\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    var editButtonItems = this.getController(\"editing\").prepareEditButtons(this);\r\n                    return editButtonItems.concat(items)\r\n                },\r\n                optionChanged: function(args) {\r\n                    var fullName = args.fullName;\r\n                    switch (args.name) {\r\n                        case \"editing\":\r\n                            var excludedOptions = [EDITING_POPUP_OPTION_NAME, EDITING_CHANGES_OPTION_NAME, EDITING_EDITCOLUMNNAME_OPTION_NAME, EDITING_EDITROWKEY_OPTION_NAME];\r\n                            var shouldInvalidate = fullName && !excludedOptions.some(optionName => optionName === fullName);\r\n                            shouldInvalidate && this._invalidate();\r\n                            this.callBase(args);\r\n                            break;\r\n                        case \"useLegacyColumnButtonTemplate\":\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                },\r\n                isVisible: function() {\r\n                    var editingOptions = this.getController(\"editing\").option(\"editing\");\r\n                    return this.callBase() || (null === editingOptions || void 0 === editingOptions ? void 0 : editingOptions.allowAdding)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport \"./ui.data_grid.editor_factory\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    editingModule\r\n} from \"../grid_core/ui.grid_core.editing\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\ngridCore.registerModule(\"editing\", extend(true, {}, editingModule, {\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                _changeRowExpandCore: function(key) {\r\n                    var editingController = this._editingController;\r\n                    if (Array.isArray(key)) {\r\n                        editingController && editingController.refresh()\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}));\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing_row_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    EDIT_MODE_ROW,\r\n    MODES_WITH_DELAYED_FOCUS,\r\n    ROW_SELECTED_CLASS,\r\n    EDIT_FORM_CLASS\r\n} from \"./ui.grid_core.editing_constants\";\r\nvar EDIT_ROW = \"dx-edit-row\";\r\nexport var editingRowBasedModule = {\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                isRowEditMode: function() {\r\n                    return this.getEditMode() === EDIT_MODE_ROW\r\n                },\r\n                _afterCancelEditData: function(rowIndex) {\r\n                    var dataController = this._dataController;\r\n                    if (this.isRowBasedEditMode() && rowIndex >= 0) {\r\n                        dataController.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: [rowIndex, rowIndex + 1]\r\n                        })\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _isDefaultButtonVisible: function(button, options) {\r\n                    var isRowMode = this.isRowBasedEditMode();\r\n                    var isEditRow = options.row && options.row.rowIndex === this._getVisibleEditRowIndex();\r\n                    if (isRowMode) {\r\n                        switch (button.name) {\r\n                            case \"edit\":\r\n                                return !isEditRow && this.allowUpdating(options);\r\n                            case \"delete\":\r\n                                return this.callBase.apply(this, arguments) && !isEditRow;\r\n                            case \"save\":\r\n                            case \"cancel\":\r\n                                return isEditRow;\r\n                            default:\r\n                                return this.callBase.apply(this, arguments)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                isEditRow: function(rowIndex) {\r\n                    return this.isRowBasedEditMode() && this._isEditRowByIndex(rowIndex)\r\n                },\r\n                _cancelSaving: function() {\r\n                    if (this.isRowBasedEditMode()) {\r\n                        if (!this.hasChanges()) {\r\n                            this._cancelEditDataCore()\r\n                        }\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _refreshCore: function() {\r\n                    if (this.isRowBasedEditMode()) {\r\n                        this.init()\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _isEditColumnVisible: function() {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var editingOptions = this.option(\"editing\");\r\n                    var isRowEditMode = this.isRowEditMode();\r\n                    var isVisibleInRowEditMode = editingOptions.allowUpdating || editingOptions.allowAdding;\r\n                    return result || isRowEditMode && isVisibleInRowEditMode\r\n                },\r\n                _focusEditorIfNeed: function() {\r\n                    var editMode = this.getEditMode();\r\n                    if (this._needFocusEditor) {\r\n                        if (-1 !== MODES_WITH_DELAYED_FOCUS.indexOf(editMode)) {\r\n                            var $editingCell = this.getFocusedCellInRow(this._getVisibleEditRowIndex());\r\n                            this._delayedInputFocus($editingCell, () => {\r\n                                $editingCell && this.component.focus($editingCell)\r\n                            })\r\n                        }\r\n                        this._needFocusEditor = false\r\n                    }\r\n                }\r\n            },\r\n            data: {\r\n                _getChangedColumnIndices: function(oldItem, newItem, rowIndex, isLiveUpdate) {\r\n                    var editingController = this.getController(\"editing\");\r\n                    if (editingController.isRowBasedEditMode() && oldItem.isEditing !== newItem.isEditing) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var editingController = this._editingController;\r\n                        var isEditRow = editingController.isEditRow(row.rowIndex);\r\n                        if (isEditRow) {\r\n                            $row.addClass(EDIT_ROW);\r\n                            $row.removeClass(ROW_SELECTED_CLASS);\r\n                            if (\"detail\" === row.rowType) {\r\n                                $row.addClass(this.addWidgetPrefix(EDIT_FORM_CLASS))\r\n                            }\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _update: function(change) {\r\n                    this.callBase(change);\r\n                    if (\"updateSelection\" === change.changeType) {\r\n                        this.getTableElements().children(\"tbody\").children(\".\" + EDIT_ROW).removeClass(ROW_SELECTED_CLASS)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editing_row_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    editingRowBasedModule\r\n} from \"../grid_core/ui.grid_core.editing_row_based\";\r\ngridCore.registerModule(\"editingRowBased\", editingRowBasedModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing_form_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Guid from \"../../core/guid\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport Button from \"../button\";\r\nimport devices from \"../../core/devices\";\r\nimport Form from \"../form\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport Scrollable from \"../scroll_view/ui.scrollable\";\r\nimport Popup from \"../popup\";\r\nimport {\r\n    EDIT_MODE_FORM,\r\n    EDIT_MODE_POPUP,\r\n    FOCUSABLE_ELEMENT_SELECTOR,\r\n    EDITING_EDITROWKEY_OPTION_NAME,\r\n    EDITING_POPUP_OPTION_NAME,\r\n    DATA_EDIT_DATA_INSERT_TYPE,\r\n    EDITING_FORM_OPTION_NAME\r\n} from \"./ui.grid_core.editing_constants\";\r\nvar EDIT_FORM_ITEM_CLASS = \"edit-form-item\";\r\nvar EDIT_POPUP_CLASS = \"edit-popup\";\r\nvar SCROLLABLE_CONTAINER_CLASS = \"dx-scrollable-container\";\r\nvar EDIT_POPUP_FORM_CLASS = \"edit-popup-form\";\r\nvar BUTTON_CLASS = \"dx-button\";\r\nvar FORM_BUTTONS_CONTAINER_CLASS = \"form-buttons-container\";\r\nvar getEditorType = item => {\r\n    var _column$formItem;\r\n    var column = item.column;\r\n    return item.isCustomEditorType ? item.editorType : null === (_column$formItem = column.formItem) || void 0 === _column$formItem ? void 0 : _column$formItem.editorType\r\n};\r\nvar forEachFormItems = (items, callBack) => {\r\n    items.forEach(item => {\r\n        if (item.items || item.tabs) {\r\n            forEachFormItems(item.items || item.tabs, callBack)\r\n        } else {\r\n            callBack(item)\r\n        }\r\n    })\r\n};\r\nexport var editingFormBasedModule = {\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                init: function() {\r\n                    this._editForm = null;\r\n                    this._updateEditFormDeferred = null;\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                isFormOrPopupEditMode: function() {\r\n                    return this.isPopupEditMode() || this.isFormEditMode()\r\n                },\r\n                isPopupEditMode: function() {\r\n                    var editMode = this.option(\"editing.mode\");\r\n                    return editMode === EDIT_MODE_POPUP\r\n                },\r\n                isFormEditMode: function() {\r\n                    var editMode = this.option(\"editing.mode\");\r\n                    return editMode === EDIT_MODE_FORM\r\n                },\r\n                getFirstEditableColumnIndex: function() {\r\n                    var firstFormItem = this._firstFormItem;\r\n                    if (this.isFormEditMode() && firstFormItem) {\r\n                        var editRowKey = this.option(EDITING_EDITROWKEY_OPTION_NAME);\r\n                        var editRowIndex = this._dataController.getRowIndexByKey(editRowKey);\r\n                        var $editFormElements = this._rowsView.getCellElements(editRowIndex);\r\n                        return this._rowsView._getEditFormEditorVisibleIndex($editFormElements, firstFormItem.column)\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                getEditFormRowIndex: function() {\r\n                    return this.isFormOrPopupEditMode() ? this._getVisibleEditRowIndex() : this.callBase.apply(this, arguments)\r\n                },\r\n                _isEditColumnVisible: function() {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var editingOptions = this.option(\"editing\");\r\n                    return this.isFormOrPopupEditMode() ? editingOptions.allowUpdating || result : result\r\n                },\r\n                _handleDataChanged: function(args) {\r\n                    var editForm = this._editForm;\r\n                    if (\"refresh\" === args.changeType && this.isPopupEditMode() && null !== editForm && void 0 !== editForm && editForm.option(\"visible\")) {\r\n                        this._repaintEditPopup()\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                getPopupContent: function() {\r\n                    var _this$_editPopup;\r\n                    var popupVisible = null === (_this$_editPopup = this._editPopup) || void 0 === _this$_editPopup ? void 0 : _this$_editPopup.option(\"visible\");\r\n                    if (this.isPopupEditMode() && popupVisible) {\r\n                        return this._$popupContent\r\n                    }\r\n                },\r\n                _showAddedRow: function(rowIndex) {\r\n                    if (this.isPopupEditMode()) {\r\n                        this._showEditPopup(rowIndex)\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _cancelEditDataCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.isPopupEditMode()) {\r\n                        this._hideEditPopup()\r\n                    }\r\n                },\r\n                _updateEditRowCore: function(row, skipCurrentRow, isCustomSetCellValue) {\r\n                    var editForm = this._editForm;\r\n                    if (this.isPopupEditMode()) {\r\n                        if (this.option(\"repaintChangesOnly\")) {\r\n                            var _row$update;\r\n                            null === (_row$update = row.update) || void 0 === _row$update ? void 0 : _row$update.call(row, row)\r\n                        } else if (editForm) {\r\n                            this._updateEditFormDeferred = (new Deferred).done(() => editForm.repaint());\r\n                            if (!this._updateLockCount) {\r\n                                this._updateEditFormDeferred.resolve()\r\n                            }\r\n                        }\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _showEditPopup: function(rowIndex, repaintForm) {\r\n                    var isMobileDevice = \"desktop\" !== devices.current().deviceType;\r\n                    var popupOptions = extend({\r\n                        showTitle: false,\r\n                        fullScreen: isMobileDevice,\r\n                        copyRootClassesToWrapper: true,\r\n                        _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n                        toolbarItems: [{\r\n                            toolbar: \"bottom\",\r\n                            location: \"after\",\r\n                            widget: \"dxButton\",\r\n                            options: this._getSaveButtonConfig()\r\n                        }, {\r\n                            toolbar: \"bottom\",\r\n                            location: \"after\",\r\n                            widget: \"dxButton\",\r\n                            options: this._getCancelButtonConfig()\r\n                        }],\r\n                        contentTemplate: this._getPopupEditFormTemplate(rowIndex)\r\n                    }, this.option(EDITING_POPUP_OPTION_NAME));\r\n                    if (!this._editPopup) {\r\n                        var $popupContainer = $(\"<div>\").appendTo(this.component.$element()).addClass(this.addWidgetPrefix(EDIT_POPUP_CLASS));\r\n                        this._editPopup = this._createComponent($popupContainer, Popup, {\r\n                            copyRootClassesToWrapper: true,\r\n                            _ignoreCopyRootClassesToWrapperDeprecation: true\r\n                        });\r\n                        this._editPopup.on(\"hiding\", this._getEditPopupHiddenHandler());\r\n                        this._editPopup.on(\"shown\", e => {\r\n                            eventsEngine.trigger(e.component.$content().find(FOCUSABLE_ELEMENT_SELECTOR).not(\".\" + SCROLLABLE_CONTAINER_CLASS).first(), \"focus\");\r\n                            if (repaintForm) {\r\n                                var _this$_editForm;\r\n                                null === (_this$_editForm = this._editForm) || void 0 === _this$_editForm ? void 0 : _this$_editForm.repaint()\r\n                            }\r\n                        })\r\n                    }\r\n                    this._editPopup.option(popupOptions);\r\n                    this._editPopup.show();\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _getPopupEditFormTemplate: function(rowIndex) {\r\n                    var row = this.component.getVisibleRows()[rowIndex];\r\n                    var templateOptions = {\r\n                        row: row,\r\n                        rowType: row.rowType,\r\n                        key: row.key,\r\n                        rowIndex: rowIndex\r\n                    };\r\n                    this._rowsView._addWatchMethod(templateOptions, row);\r\n                    return container => {\r\n                        var formTemplate = this.getEditFormTemplate();\r\n                        var scrollable = this._createComponent($(\"<div>\").appendTo(container), Scrollable);\r\n                        this._$popupContent = scrollable.$content();\r\n                        formTemplate(this._$popupContent, templateOptions, {\r\n                            isPopupForm: true\r\n                        });\r\n                        this._rowsView.renderDelayedTemplates()\r\n                    }\r\n                },\r\n                _repaintEditPopup: function() {\r\n                    var _this$_editPopup2;\r\n                    var rowIndex = this._getVisibleEditRowIndex();\r\n                    if (null !== (_this$_editPopup2 = this._editPopup) && void 0 !== _this$_editPopup2 && _this$_editPopup2.option(\"visible\") && rowIndex >= 0) {\r\n                        var defaultAnimation = this._editPopup.option(\"animation\");\r\n                        this._editPopup.option(\"animation\", null);\r\n                        this._showEditPopup(rowIndex, true);\r\n                        this._editPopup.option(\"animation\", defaultAnimation)\r\n                    }\r\n                },\r\n                _hideEditPopup: function() {\r\n                    var _this$_editPopup3;\r\n                    null === (_this$_editPopup3 = this._editPopup) || void 0 === _this$_editPopup3 ? void 0 : _this$_editPopup3.option(\"visible\", false)\r\n                },\r\n                optionChanged: function(args) {\r\n                    if (\"editing\" === args.name && this.isFormOrPopupEditMode()) {\r\n                        var fullName = args.fullName;\r\n                        if (0 === fullName.indexOf(EDITING_FORM_OPTION_NAME)) {\r\n                            this._handleFormOptionChange(args);\r\n                            args.handled = true\r\n                        } else if (0 === fullName.indexOf(EDITING_POPUP_OPTION_NAME)) {\r\n                            this._handlePopupOptionChange(args);\r\n                            args.handled = true\r\n                        }\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _handleFormOptionChange: function(args) {\r\n                    var _this$_editPopup4;\r\n                    if (this.isFormEditMode()) {\r\n                        var editRowIndex = this._getVisibleEditRowIndex();\r\n                        if (editRowIndex >= 0) {\r\n                            this._dataController.updateItems({\r\n                                changeType: \"update\",\r\n                                rowIndices: [editRowIndex]\r\n                            })\r\n                        }\r\n                    } else if (null !== (_this$_editPopup4 = this._editPopup) && void 0 !== _this$_editPopup4 && _this$_editPopup4.option(\"visible\") && 0 === args.fullName.indexOf(EDITING_FORM_OPTION_NAME)) {\r\n                        this._repaintEditPopup()\r\n                    }\r\n                },\r\n                _handlePopupOptionChange: function(args) {\r\n                    var editPopup = this._editPopup;\r\n                    if (editPopup) {\r\n                        var popupOptionName = args.fullName.slice(EDITING_POPUP_OPTION_NAME.length + 1);\r\n                        if (popupOptionName) {\r\n                            editPopup.option(popupOptionName, args.value)\r\n                        } else {\r\n                            editPopup.option(args.value)\r\n                        }\r\n                    }\r\n                },\r\n                renderFormEditTemplate: function(detailCellOptions, item, formTemplateOptions, container, isReadOnly) {\r\n                    var that = this;\r\n                    var $container = $(container);\r\n                    var column = item.column;\r\n                    var editorType = getEditorType(item);\r\n                    var rowData = null === detailCellOptions || void 0 === detailCellOptions ? void 0 : detailCellOptions.row.data;\r\n                    var form = formTemplateOptions.component;\r\n                    var {\r\n                        label: label,\r\n                        labelMark: labelMark,\r\n                        labelMode: labelMode\r\n                    } = formTemplateOptions.editorOptions || {};\r\n                    var cellOptions = extend({}, detailCellOptions, {\r\n                        data: rowData,\r\n                        cellElement: null,\r\n                        isOnForm: true,\r\n                        item: item,\r\n                        id: form.getItemID(item.name || item.dataField),\r\n                        column: extend({}, column, {\r\n                            editorType: editorType,\r\n                            editorOptions: extend({\r\n                                label: label,\r\n                                labelMark: labelMark,\r\n                                labelMode: labelMode\r\n                            }, column.editorOptions, item.editorOptions)\r\n                        }),\r\n                        columnIndex: column.index,\r\n                        setValue: !isReadOnly && column.allowEditing && function(value) {\r\n                            that.updateFieldValue(cellOptions, value)\r\n                        }\r\n                    });\r\n                    cellOptions.value = column.calculateCellValue(rowData);\r\n                    var template = this._getFormEditItemTemplate.bind(this)(cellOptions, column);\r\n                    this._rowsView.renderTemplate($container, template, cellOptions, !!$container.closest(getWindow().document).length).done(() => {\r\n                        this._rowsView._updateCell($container, cellOptions)\r\n                    });\r\n                    return cellOptions\r\n                },\r\n                getFormEditorTemplate: function(cellOptions, item) {\r\n                    var column = this.component.columnOption(item.dataField);\r\n                    return (options, container) => {\r\n                        var _cellOptions$row$watc, _cellOptions$row;\r\n                        var $container = $(container);\r\n                        null === (_cellOptions$row$watc = (_cellOptions$row = cellOptions.row).watch) || void 0 === _cellOptions$row$watc ? void 0 : _cellOptions$row$watc.call(_cellOptions$row, (function() {\r\n                            return column.selector(cellOptions.row.data)\r\n                        }), () => {\r\n                            var _validator;\r\n                            var $editorElement = $container.find(\".dx-widget\").first();\r\n                            var validator = $editorElement.data(\"dxValidator\");\r\n                            var validatorOptions = null === (_validator = validator) || void 0 === _validator ? void 0 : _validator.option();\r\n                            $container.contents().remove();\r\n                            cellOptions = this.renderFormEditTemplate.bind(this)(cellOptions, item, options, $container);\r\n                            $editorElement = $container.find(\".dx-widget\").first();\r\n                            validator = $editorElement.data(\"dxValidator\");\r\n                            if (validatorOptions && !validator) {\r\n                                $editorElement.dxValidator({\r\n                                    validationRules: validatorOptions.validationRules,\r\n                                    validationGroup: validatorOptions.validationGroup,\r\n                                    dataGetter: validatorOptions.dataGetter\r\n                                })\r\n                            }\r\n                        });\r\n                        cellOptions = this.renderFormEditTemplate.bind(this)(cellOptions, item, options, $container)\r\n                    }\r\n                },\r\n                getEditFormOptions: function(detailOptions) {\r\n                    var _this$_getValidationG;\r\n                    var editFormOptions = null === (_this$_getValidationG = this._getValidationGroupsInForm) || void 0 === _this$_getValidationG ? void 0 : _this$_getValidationG.call(this, detailOptions);\r\n                    var userCustomizeItem = this.option(\"editing.form.customizeItem\");\r\n                    var editFormItemClass = this.addWidgetPrefix(EDIT_FORM_ITEM_CLASS);\r\n                    var items = this.option(\"editing.form.items\");\r\n                    var isCustomEditorType = {};\r\n                    if (!items) {\r\n                        var columns = this.getController(\"columns\").getColumns();\r\n                        items = [];\r\n                        each(columns, (function(_, column) {\r\n                            if (!column.isBand && !column.type) {\r\n                                items.push({\r\n                                    column: column,\r\n                                    name: column.name,\r\n                                    dataField: column.dataField\r\n                                })\r\n                            }\r\n                        }))\r\n                    } else {\r\n                        forEachFormItems(items, item => {\r\n                            var itemId = (null === item || void 0 === item ? void 0 : item.name) || (null === item || void 0 === item ? void 0 : item.dataField);\r\n                            if (itemId) {\r\n                                isCustomEditorType[itemId] = !!item.editorType\r\n                            }\r\n                        })\r\n                    }\r\n                    return extend({}, editFormOptions, {\r\n                        items: items,\r\n                        formID: \"dx-\" + new Guid,\r\n                        customizeItem: item => {\r\n                            var column;\r\n                            var itemId = item.name || item.dataField;\r\n                            if (item.column || itemId) {\r\n                                column = item.column || this._columnsController.columnOption(item.name ? \"name:\" + item.name : \"dataField:\" + item.dataField)\r\n                            }\r\n                            if (column) {\r\n                                item.label = item.label || {};\r\n                                item.label.text = item.label.text || column.caption;\r\n                                if (\"boolean\" === column.dataType && void 0 === item.label.visible) {\r\n                                    var labelMode = this.option(\"editing.form.labelMode\");\r\n                                    if (\"floating\" === labelMode || \"static\" === labelMode) {\r\n                                        item.label.visible = true\r\n                                    }\r\n                                }\r\n                                item.template = item.template || this.getFormEditorTemplate(detailOptions, item);\r\n                                item.column = column;\r\n                                item.isCustomEditorType = isCustomEditorType[itemId];\r\n                                if (column.formItem) {\r\n                                    extend(item, column.formItem)\r\n                                }\r\n                                if (void 0 === item.isRequired && column.validationRules) {\r\n                                    item.isRequired = column.validationRules.some((function(rule) {\r\n                                        return \"required\" === rule.type\r\n                                    }));\r\n                                    item.validationRules = []\r\n                                }\r\n                                var itemVisible = isDefined(item.visible) ? item.visible : true;\r\n                                if (!this._firstFormItem && itemVisible) {\r\n                                    this._firstFormItem = item\r\n                                }\r\n                            }\r\n                            null === userCustomizeItem || void 0 === userCustomizeItem ? void 0 : userCustomizeItem.call(this, item);\r\n                            item.cssClass = isString(item.cssClass) ? item.cssClass + \" \" + editFormItemClass : editFormItemClass\r\n                        }\r\n                    })\r\n                },\r\n                getEditFormTemplate: function() {\r\n                    return ($container, detailOptions, options) => {\r\n                        var editFormOptions = this.option(EDITING_FORM_OPTION_NAME);\r\n                        var baseEditFormOptions = this.getEditFormOptions(detailOptions);\r\n                        var $formContainer = $(\"<div>\").appendTo($container);\r\n                        var isPopupForm = null === options || void 0 === options ? void 0 : options.isPopupForm;\r\n                        this._firstFormItem = void 0;\r\n                        if (isPopupForm) {\r\n                            $formContainer.addClass(this.addWidgetPrefix(EDIT_POPUP_FORM_CLASS))\r\n                        }\r\n                        this._editForm = this._createComponent($formContainer, Form, extend({}, editFormOptions, baseEditFormOptions));\r\n                        if (!isPopupForm) {\r\n                            var $buttonsContainer = $(\"<div>\").addClass(this.addWidgetPrefix(FORM_BUTTONS_CONTAINER_CLASS)).appendTo($container);\r\n                            this._createComponent($(\"<div>\").appendTo($buttonsContainer), Button, this._getSaveButtonConfig());\r\n                            this._createComponent($(\"<div>\").appendTo($buttonsContainer), Button, this._getCancelButtonConfig())\r\n                        }\r\n                        this._editForm.on(\"contentReady\", () => {\r\n                            var _this$_editPopup5;\r\n                            null === (_this$_editPopup5 = this._editPopup) || void 0 === _this$_editPopup5 ? void 0 : _this$_editPopup5.repaint()\r\n                        })\r\n                    }\r\n                },\r\n                getEditForm: function() {\r\n                    return this._editForm\r\n                },\r\n                _endUpdateCore: function() {\r\n                    var _this$_updateEditForm;\r\n                    null === (_this$_updateEditForm = this._updateEditFormDeferred) || void 0 === _this$_updateEditForm ? void 0 : _this$_updateEditForm.resolve()\r\n                },\r\n                _beforeEndSaving: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.isPopupEditMode()) {\r\n                        var _this$_editPopup6;\r\n                        null === (_this$_editPopup6 = this._editPopup) || void 0 === _this$_editPopup6 ? void 0 : _this$_editPopup6.hide()\r\n                    }\r\n                },\r\n                _processDataItemCore: function(item, _ref) {\r\n                    var {\r\n                        type: type\r\n                    } = _ref;\r\n                    if (this.isPopupEditMode() && type === DATA_EDIT_DATA_INSERT_TYPE) {\r\n                        item.visible = false\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _editRowFromOptionChangedCore: function(rowIndices, rowIndex, oldRowIndex) {\r\n                    if (this.isPopupEditMode()) {\r\n                        this._showEditPopup(rowIndex)\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                }\r\n            },\r\n            data: {\r\n                _updateEditItem: function(item) {\r\n                    if (this._editingController.isFormEditMode()) {\r\n                        item.rowType = \"detail\"\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _renderCellContent: function($cell, options) {\r\n                    if (\"data\" === options.rowType && this._editingController.isPopupEditMode() && false === options.row.visible) {\r\n                        return\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                getCellElements: function(rowIndex) {\r\n                    var $cellElements = this.callBase(rowIndex);\r\n                    var editingController = this._editingController;\r\n                    var editForm = editingController.getEditForm();\r\n                    var editFormRowIndex = editingController.getEditFormRowIndex();\r\n                    if (editFormRowIndex === rowIndex && $cellElements && editForm) {\r\n                        return editForm.$element().find(\".\" + this.addWidgetPrefix(EDIT_FORM_ITEM_CLASS) + \", .\" + BUTTON_CLASS)\r\n                    }\r\n                    return $cellElements\r\n                },\r\n                _getVisibleColumnIndex: function($cells, rowIndex, columnIdentifier) {\r\n                    var editFormRowIndex = this._editingController.getEditFormRowIndex();\r\n                    if (editFormRowIndex === rowIndex && isString(columnIdentifier)) {\r\n                        var column = this._columnsController.columnOption(columnIdentifier);\r\n                        return this._getEditFormEditorVisibleIndex($cells, column)\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _getEditFormEditorVisibleIndex: function($cells, column) {\r\n                    var visibleIndex = -1;\r\n                    each($cells, (function(index, cellElement) {\r\n                        var item = $(cellElement).find(\".dx-field-item-content\").data(\"dx-form-item\");\r\n                        if (null !== item && void 0 !== item && item.column && column && item.column.index === column.index) {\r\n                            visibleIndex = index;\r\n                            return false\r\n                        }\r\n                    }));\r\n                    return visibleIndex\r\n                },\r\n                _isFormItem: function(parameters) {\r\n                    var isDetailRow = \"detail\" === parameters.rowType || \"detailAdaptive\" === parameters.rowType;\r\n                    var isPopupEditing = \"data\" === parameters.rowType && this._editingController.isPopupEditMode();\r\n                    return (isDetailRow || isPopupEditing) && parameters.item\r\n                },\r\n                _updateCell: function($cell, parameters) {\r\n                    if (this._isFormItem(parameters)) {\r\n                        this._formItemPrepared(parameters, $cell)\r\n                    } else {\r\n                        this.callBase($cell, parameters)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editing_form_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    editingFormBasedModule\r\n} from \"../grid_core/ui.grid_core.editing_form_based\";\r\ngridCore.registerModule(\"editingFormBased\", editingFormBasedModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.editing_cell_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport holdEvent from \"../../events/hold\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    deferRender\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    createObjectWithChanges\r\n} from \"../../data/array_utils\";\r\nimport {\r\n    EDIT_MODE_BATCH,\r\n    EDIT_MODE_CELL,\r\n    TARGET_COMPONENT_NAME\r\n} from \"./ui.grid_core.editing_constants\";\r\nvar FOCUS_OVERLAY_CLASS = \"focus-overlay\";\r\nvar ADD_ROW_BUTTON_CLASS = \"addrow-button\";\r\nvar DROPDOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar CELL_MODIFIED_CLASS = \"dx-cell-modified\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar ROW_REMOVED = \"dx-row-removed\";\r\nvar EDITING_EDITROWKEY_OPTION_NAME = \"editing.editRowKey\";\r\nvar EDITING_EDITCOLUMNNAME_OPTION_NAME = \"editing.editColumnName\";\r\nvar DATA_EDIT_DATA_REMOVE_TYPE = \"remove\";\r\nexport default {\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                init: function() {\r\n                    var needCreateHandlers = !this._saveEditorHandler;\r\n                    this.callBase.apply(this, arguments);\r\n                    if (needCreateHandlers) {\r\n                        var $pointerDownTarget;\r\n                        var isResizing;\r\n                        this._pointerUpEditorHandler = () => {\r\n                            var _this$getController;\r\n                            isResizing = null === (_this$getController = this.getController(\"columnsResizer\")) || void 0 === _this$getController ? void 0 : _this$getController.isResizing()\r\n                        };\r\n                        this._pointerDownEditorHandler = e => $pointerDownTarget = $(e.target);\r\n                        this._saveEditorHandler = this.createAction((function(e) {\r\n                            var event = e.event;\r\n                            var $target = $(event.target);\r\n                            var targetComponent = event[TARGET_COMPONENT_NAME];\r\n                            if ($pointerDownTarget && $pointerDownTarget.is(\"input\") && !$pointerDownTarget.is($target)) {\r\n                                return\r\n                            }\r\n\r\n                            function checkEditorPopup($element) {\r\n                                return $element && !!$element.closest(\".\".concat(DROPDOWN_EDITOR_OVERLAY_CLASS)).length\r\n                            }\r\n                            if (this.isCellOrBatchEditMode() && !this._editCellInProgress) {\r\n                                var isEditorPopup = checkEditorPopup($target) || checkEditorPopup(null === targetComponent || void 0 === targetComponent ? void 0 : targetComponent.$element());\r\n                                var isDomElement = !!$target.closest(getWindow().document).length;\r\n                                var isAnotherComponent = targetComponent && !targetComponent._disposed && targetComponent !== this.component;\r\n                                var isAddRowButton = !!$target.closest(\".\".concat(this.addWidgetPrefix(ADD_ROW_BUTTON_CLASS))).length;\r\n                                var isFocusOverlay = $target.hasClass(this.addWidgetPrefix(FOCUS_OVERLAY_CLASS));\r\n                                var isCellEditMode = this.isCellEditMode();\r\n                                if (!isResizing && !isEditorPopup && !isFocusOverlay && !(isAddRowButton && isCellEditMode && this.isEditing()) && (isDomElement || isAnotherComponent)) {\r\n                                    this._closeEditItem.bind(this)($target)\r\n                                }\r\n                            }\r\n                        }));\r\n                        eventsEngine.on(domAdapter.getDocument(), pointerEvents.up, this._pointerUpEditorHandler);\r\n                        eventsEngine.on(domAdapter.getDocument(), pointerEvents.down, this._pointerDownEditorHandler);\r\n                        eventsEngine.on(domAdapter.getDocument(), clickEventName, this._saveEditorHandler)\r\n                    }\r\n                },\r\n                isCellEditMode: function() {\r\n                    return this.option(\"editing.mode\") === EDIT_MODE_CELL\r\n                },\r\n                isBatchEditMode: function() {\r\n                    return this.option(\"editing.mode\") === EDIT_MODE_BATCH\r\n                },\r\n                isCellOrBatchEditMode: function() {\r\n                    return this.isCellEditMode() || this.isBatchEditMode()\r\n                },\r\n                _needToCloseEditableCell: function($targetElement) {\r\n                    var $element = this.component.$element();\r\n                    var result = this.isEditing();\r\n                    var isCurrentComponentElement = !$element || !!$targetElement.closest($element).length;\r\n                    if (isCurrentComponentElement) {\r\n                        var isDataRow = $targetElement.closest(\".\" + DATA_ROW_CLASS).length;\r\n                        if (isDataRow) {\r\n                            var rowsView = this.getView(\"rowsView\");\r\n                            var $targetCell = $targetElement.closest(\".\" + ROW_CLASS + \"> td\");\r\n                            var rowIndex = rowsView.getRowIndex($targetCell.parent());\r\n                            var columnIndex = rowsView.getCellElements(rowIndex).index($targetCell);\r\n                            var visibleColumns = this._columnsController.getVisibleColumns();\r\n                            var allowEditing = visibleColumns[columnIndex] && visibleColumns[columnIndex].allowEditing;\r\n                            result = result && !allowEditing && !this.isEditCell(rowIndex, columnIndex)\r\n                        }\r\n                    }\r\n                    return result || this.callBase.apply(this, arguments)\r\n                },\r\n                _closeEditItem: function($targetElement) {\r\n                    if (this._needToCloseEditableCell($targetElement)) {\r\n                        this.closeEditCell()\r\n                    }\r\n                },\r\n                _focusEditorIfNeed: function() {\r\n                    if (this._needFocusEditor && this.isCellOrBatchEditMode()) {\r\n                        var _this$_rowsView;\r\n                        var editColumnIndex = this._getVisibleEditColumnIndex();\r\n                        var $cell = null === (_this$_rowsView = this._rowsView) || void 0 === _this$_rowsView ? void 0 : _this$_rowsView._getCellElement(this._getVisibleEditRowIndex(), editColumnIndex);\r\n                        if ($cell && !$cell.find(\":focus\").length) {\r\n                            this._focusEditingCell(() => {\r\n                                this._editCellInProgress = false\r\n                            }, $cell, true)\r\n                        } else {\r\n                            this._editCellInProgress = false\r\n                        }\r\n                        this._needFocusEditor = false\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                isEditing: function() {\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        var isEditRowKeyDefined = isDefined(this.option(EDITING_EDITROWKEY_OPTION_NAME));\r\n                        var isEditColumnNameDefined = isDefined(this.option(EDITING_EDITCOLUMNNAME_OPTION_NAME));\r\n                        return isEditRowKeyDefined && isEditColumnNameDefined\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _handleEditColumnNameChange: function(args) {\r\n                    var oldRowIndex = this._getVisibleEditRowIndex(args.previousValue);\r\n                    if (this.isCellOrBatchEditMode() && -1 !== oldRowIndex && isDefined(args.value) && args.value !== args.previousValue) {\r\n                        var columnIndex = this._columnsController.getVisibleColumnIndex(args.value);\r\n                        var oldColumnIndex = this._columnsController.getVisibleColumnIndex(args.previousValue);\r\n                        this._editCellFromOptionChanged(columnIndex, oldColumnIndex, oldRowIndex)\r\n                    }\r\n                },\r\n                _addRow: function(parentKey, deferred) {\r\n                    if (this.isCellEditMode() && this.hasChanges()) {\r\n                        var _deferred = new Deferred;\r\n                        this.saveEditData().done(() => {\r\n                            if (!this.hasChanges()) {\r\n                                this.addRow(parentKey).done(_deferred.resolve).fail(_deferred.reject)\r\n                            } else {\r\n                                _deferred.reject(\"cancel\")\r\n                            }\r\n                        });\r\n                        return _deferred.promise()\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                editCell: function(rowIndex, columnIndex) {\r\n                    return this._editCell({\r\n                        rowIndex: rowIndex,\r\n                        columnIndex: columnIndex\r\n                    })\r\n                },\r\n                _editCell: function(options) {\r\n                    var d = new Deferred;\r\n                    var coreResult;\r\n                    this.executeOperation(d, () => {\r\n                        coreResult = this._editCellCore(options);\r\n                        when(coreResult).done(d.resolve).fail(d.reject)\r\n                    });\r\n                    return void 0 !== coreResult ? coreResult : d.promise()\r\n                },\r\n                _editCellCore: function(options) {\r\n                    var dataController = this._dataController;\r\n                    var isEditByOptionChanged = isDefined(options.oldColumnIndex) || isDefined(options.oldRowIndex);\r\n                    var {\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex,\r\n                        column: column,\r\n                        item: item\r\n                    } = this._getNormalizedEditCellOptions(options);\r\n                    var params = {\r\n                        data: null === item || void 0 === item ? void 0 : item.data,\r\n                        cancel: false,\r\n                        column: column\r\n                    };\r\n                    if (void 0 === item.key) {\r\n                        this._dataController.fireError(\"E1043\");\r\n                        return\r\n                    }\r\n                    if (column && (\"data\" === item.rowType || \"detailAdaptive\" === item.rowType) && !item.removed && this.isCellOrBatchEditMode()) {\r\n                        if (!isEditByOptionChanged && this.isEditCell(rowIndex, columnIndex)) {\r\n                            return true\r\n                        }\r\n                        var editRowIndex = rowIndex + dataController.getRowIndexOffset();\r\n                        return when(this._beforeEditCell(rowIndex, columnIndex, item)).done(cancel => {\r\n                            if (cancel) {\r\n                                return\r\n                            }\r\n                            if (!this._prepareEditCell(params, item, columnIndex, editRowIndex)) {\r\n                                this._processCanceledEditingCell()\r\n                            }\r\n                        })\r\n                    }\r\n                    return false\r\n                },\r\n                _beforeEditCell: function(rowIndex, columnIndex, item) {\r\n                    if (this.isCellEditMode() && !item.isNewRow && this.hasChanges()) {\r\n                        var d = new Deferred;\r\n                        this.saveEditData().always(() => {\r\n                            d.resolve(this.hasChanges())\r\n                        });\r\n                        return d\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    var publicMethods = this.callBase.apply(this, arguments);\r\n                    return publicMethods.concat([\"editCell\", \"closeEditCell\"])\r\n                },\r\n                _getNormalizedEditCellOptions: function(_ref) {\r\n                    var {\r\n                        oldColumnIndex: oldColumnIndex,\r\n                        oldRowIndex: oldRowIndex,\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    } = _ref;\r\n                    var columnsController = this._columnsController;\r\n                    var visibleColumns = columnsController.getVisibleColumns();\r\n                    var items = this._dataController.items();\r\n                    var item = items[rowIndex];\r\n                    var oldColumn;\r\n                    if (isDefined(oldColumnIndex)) {\r\n                        oldColumn = visibleColumns[oldColumnIndex]\r\n                    } else {\r\n                        oldColumn = this._getEditColumn()\r\n                    }\r\n                    if (!isDefined(oldRowIndex)) {\r\n                        oldRowIndex = this._getVisibleEditRowIndex()\r\n                    }\r\n                    if (isString(columnIndex)) {\r\n                        columnIndex = columnsController.columnOption(columnIndex, \"index\");\r\n                        columnIndex = columnsController.getVisibleIndex(columnIndex)\r\n                    }\r\n                    var column = visibleColumns[columnIndex];\r\n                    return {\r\n                        oldColumn: oldColumn,\r\n                        columnIndex: columnIndex,\r\n                        oldRowIndex: oldRowIndex,\r\n                        rowIndex: rowIndex,\r\n                        column: column,\r\n                        item: item\r\n                    }\r\n                },\r\n                _prepareEditCell: function(params, item, editColumnIndex, editRowIndex) {\r\n                    if (!item.isNewRow) {\r\n                        params.key = item.key\r\n                    }\r\n                    if (this._isEditingStart(params)) {\r\n                        return false\r\n                    }\r\n                    this._pageIndex = this._dataController.pageIndex();\r\n                    this._setEditRowKey(item.key);\r\n                    this._setEditColumnNameByIndex(editColumnIndex);\r\n                    if (!params.column.showEditorAlways) {\r\n                        var _item$oldData;\r\n                        this._addInternalData({\r\n                            key: item.key,\r\n                            oldData: null !== (_item$oldData = item.oldData) && void 0 !== _item$oldData ? _item$oldData : item.data\r\n                        })\r\n                    }\r\n                    return true\r\n                },\r\n                closeEditCell: function(isError, withoutSaveEditData) {\r\n                    var result = when();\r\n                    var oldEditRowIndex = this._getVisibleEditRowIndex();\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        var deferred = new Deferred;\r\n                        result = new Deferred;\r\n                        this.executeOperation(deferred, () => {\r\n                            this._closeEditCellCore(isError, oldEditRowIndex, withoutSaveEditData).always(result.resolve)\r\n                        })\r\n                    }\r\n                    return result.promise()\r\n                },\r\n                _closeEditCellCore: function(isError, oldEditRowIndex, withoutSaveEditData) {\r\n                    var dataController = this._dataController;\r\n                    var deferred = new Deferred;\r\n                    var promise = deferred.promise();\r\n                    if (this.isCellEditMode() && this.hasChanges()) {\r\n                        if (!withoutSaveEditData) {\r\n                            this.saveEditData().done(error => {\r\n                                if (!this.hasChanges()) {\r\n                                    this.closeEditCell(!!error).always(deferred.resolve);\r\n                                    return\r\n                                }\r\n                                deferred.resolve()\r\n                            });\r\n                            return promise\r\n                        }\r\n                    } else {\r\n                        this._resetEditRowKey();\r\n                        this._resetEditColumnName();\r\n                        if (oldEditRowIndex >= 0) {\r\n                            var rowIndices = [oldEditRowIndex];\r\n                            this._beforeCloseEditCellInBatchMode(rowIndices);\r\n                            if (!isError) {\r\n                                dataController.updateItems({\r\n                                    changeType: \"update\",\r\n                                    rowIndices: rowIndices\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                    deferred.resolve();\r\n                    return promise\r\n                },\r\n                _resetModifiedClassCells: function(changes) {\r\n                    if (this.isBatchEditMode()) {\r\n                        var columnsCount = this._columnsController.getVisibleColumns().length;\r\n                        changes.forEach(_ref2 => {\r\n                            var {\r\n                                key: key\r\n                            } = _ref2;\r\n                            var rowIndex = this._dataController.getRowIndexByKey(key);\r\n                            if (-1 !== rowIndex) {\r\n                                for (var columnIndex = 0; columnIndex < columnsCount; columnIndex++) {\r\n                                    this._rowsView._getCellElement(rowIndex, columnIndex).removeClass(CELL_MODIFIED_CLASS)\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                _prepareChange: function(options, value, text) {\r\n                    var $cellElement = $(options.cellElement);\r\n                    if (this.isBatchEditMode() && void 0 !== options.key) {\r\n                        this._applyModified($cellElement, options)\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _cancelSaving: function() {\r\n                    var dataController = this._dataController;\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        if (this.isBatchEditMode()) {\r\n                            this._resetEditIndices()\r\n                        }\r\n                        dataController.updateItems()\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                optionChanged: function(args) {\r\n                    var fullName = args.fullName;\r\n                    if (\"editing\" === args.name && fullName === EDITING_EDITCOLUMNNAME_OPTION_NAME) {\r\n                        this._handleEditColumnNameChange(args);\r\n                        args.handled = true\r\n                    } else {\r\n                        this.callBase(args)\r\n                    }\r\n                },\r\n                _editCellFromOptionChanged: function(columnIndex, oldColumnIndex, oldRowIndex) {\r\n                    var columns = this._columnsController.getVisibleColumns();\r\n                    if (columnIndex > -1) {\r\n                        deferRender(() => {\r\n                            this._repaintEditCell(columns[columnIndex], columns[oldColumnIndex], oldRowIndex)\r\n                        })\r\n                    }\r\n                },\r\n                _handleEditRowKeyChange: function(args) {\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        var columnIndex = this._getVisibleEditColumnIndex();\r\n                        var oldRowIndexCorrection = this._getEditRowIndexCorrection();\r\n                        var oldRowIndex = this._dataController.getRowIndexByKey(args.previousValue) + oldRowIndexCorrection;\r\n                        if (isDefined(args.value) && args.value !== args.previousValue) {\r\n                            var _this$_editCellFromOp;\r\n                            null === (_this$_editCellFromOp = this._editCellFromOptionChanged) || void 0 === _this$_editCellFromOp ? void 0 : _this$_editCellFromOp.call(this, columnIndex, columnIndex, oldRowIndex)\r\n                        }\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                deleteRow: function(rowIndex) {\r\n                    if (this.isCellEditMode() && this.isEditing()) {\r\n                        var isNewRow = this._dataController.items()[rowIndex].isNewRow;\r\n                        var rowKey = this._dataController.getKeyByRowIndex(rowIndex);\r\n                        this.closeEditCell(null, isNewRow).always(() => {\r\n                            rowIndex = this._dataController.getRowIndexByKey(rowKey);\r\n                            this._checkAndDeleteRow(rowIndex)\r\n                        })\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _checkAndDeleteRow: function(rowIndex) {\r\n                    if (this.isBatchEditMode()) {\r\n                        this._deleteRowCore(rowIndex)\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _refreshCore: function(isPageChanged) {\r\n                    var needResetIndexes = this.isBatchEditMode() || isPageChanged && \"virtual\" !== this.option(\"scrolling.mode\");\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        if (needResetIndexes) {\r\n                            this._resetEditColumnName();\r\n                            this._resetEditRowKey()\r\n                        }\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _allowRowAdding: function(params) {\r\n                    if (this.isBatchEditMode()) {\r\n                        return true\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _afterDeleteRow: function(rowIndex, oldEditRowIndex) {\r\n                    var dataController = this._dataController;\r\n                    if (this.isBatchEditMode()) {\r\n                        dataController.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: [oldEditRowIndex, rowIndex]\r\n                        });\r\n                        return (new Deferred).resolve()\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _updateEditRow: function(row, forceUpdateRow, isCustomSetCellValue) {\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        this._updateRowImmediately(row, forceUpdateRow, isCustomSetCellValue)\r\n                    } else {\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                _isDefaultButtonVisible: function(button, options) {\r\n                    if (this.isCellOrBatchEditMode()) {\r\n                        var isBatchMode = this.isBatchEditMode();\r\n                        switch (button.name) {\r\n                            case \"save\":\r\n                            case \"cancel\":\r\n                            case \"edit\":\r\n                                return false;\r\n                            case \"delete\":\r\n                                return this.callBase.apply(this, arguments) && (!isBatchMode || !options.row.removed);\r\n                            case \"undelete\":\r\n                                return isBatchMode && this.allowDeleting(options) && options.row.removed;\r\n                            default:\r\n                                return this.callBase.apply(this, arguments)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _isRowDeleteAllowed: function() {\r\n                    var callBase = this.callBase.apply(this, arguments);\r\n                    return callBase || this.isBatchEditMode()\r\n                },\r\n                _beforeEndSaving: function(changes) {\r\n                    if (this.isCellEditMode()) {\r\n                        var _changes$;\r\n                        if (\"update\" !== (null === (_changes$ = changes[0]) || void 0 === _changes$ ? void 0 : _changes$.type)) {\r\n                            this.callBase.apply(this, arguments)\r\n                        }\r\n                    } else {\r\n                        if (this.isBatchEditMode()) {\r\n                            this._resetModifiedClassCells(changes)\r\n                        }\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                prepareEditButtons: function(headerPanel) {\r\n                    var editingOptions = this.option(\"editing\") || {};\r\n                    var buttonItems = this.callBase.apply(this, arguments);\r\n                    if ((editingOptions.allowUpdating || editingOptions.allowAdding || editingOptions.allowDeleting) && this.isBatchEditMode()) {\r\n                        buttonItems.push(this.prepareButtonItem(headerPanel, \"save\", \"saveEditData\", 21));\r\n                        buttonItems.push(this.prepareButtonItem(headerPanel, \"revert\", \"cancelEditData\", 22))\r\n                    }\r\n                    return buttonItems\r\n                },\r\n                _saveEditDataInner: function() {\r\n                    var _deferred2;\r\n                    var editRow = this._dataController.getVisibleRows()[this.getEditRowIndex()];\r\n                    var editColumn = this._getEditColumn();\r\n                    var showEditorAlways = null === editColumn || void 0 === editColumn ? void 0 : editColumn.showEditorAlways;\r\n                    var isUpdateInCellMode = this.isCellEditMode() && !(null !== editRow && void 0 !== editRow && editRow.isNewRow);\r\n                    var deferred;\r\n                    if (isUpdateInCellMode && showEditorAlways) {\r\n                        deferred = new Deferred;\r\n                        this.addDeferred(deferred)\r\n                    }\r\n                    return this.callBase.apply(this, arguments).always(null === (_deferred2 = deferred) || void 0 === _deferred2 ? void 0 : _deferred2.resolve)\r\n                },\r\n                _applyChange: function(options, params, forceUpdateRow) {\r\n                    var isUpdateInCellMode = this.isCellEditMode() && options.row && !options.row.isNewRow;\r\n                    var showEditorAlways = options.column.showEditorAlways;\r\n                    var isCustomSetCellValue = options.column.setCellValue !== options.column.defaultSetCellValue;\r\n                    var focusPreviousEditingCell = showEditorAlways && !forceUpdateRow && isUpdateInCellMode && this.hasEditData() && !this.isEditCell(options.rowIndex, options.columnIndex);\r\n                    if (focusPreviousEditingCell) {\r\n                        this._focusEditingCell();\r\n                        this._updateEditRow(options.row, true, isCustomSetCellValue);\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _applyChangeCore: function(options, forceUpdateRow) {\r\n                    var showEditorAlways = options.column.showEditorAlways;\r\n                    var isUpdateInCellMode = this.isCellEditMode() && options.row && !options.row.isNewRow;\r\n                    if (showEditorAlways && !forceUpdateRow) {\r\n                        if (isUpdateInCellMode) {\r\n                            this._setEditRowKey(options.row.key, true);\r\n                            this._setEditColumnNameByIndex(options.columnIndex, true);\r\n                            return this.saveEditData()\r\n                        } else if (this.isBatchEditMode()) {\r\n                            forceUpdateRow = this._needUpdateRow(options.column);\r\n                            return this.callBase(options, forceUpdateRow)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _processDataItemCore: function(item, _ref3) {\r\n                    var {\r\n                        data: data,\r\n                        type: type\r\n                    } = _ref3;\r\n                    if (this.isBatchEditMode() && type === DATA_EDIT_DATA_REMOVE_TYPE) {\r\n                        item.data = createObjectWithChanges(item.data, data)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _processRemoveCore: function(changes, editIndex, processIfBatch) {\r\n                    if (this.isBatchEditMode() && !processIfBatch) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _processRemoveIfError: function() {\r\n                    if (this.isBatchEditMode()) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _beforeFocusElementInRow: function(rowIndex) {\r\n                    this.callBase.apply(this, arguments);\r\n                    var editRowIndex = rowIndex >= 0 ? rowIndex : 0;\r\n                    var columnIndex = this.getFirstEditableColumnIndex();\r\n                    columnIndex >= 0 && this.editCell(editRowIndex, columnIndex)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _createTable: function() {\r\n                    var $table = this.callBase.apply(this, arguments);\r\n                    var editingController = this._editingController;\r\n                    if (editingController.isCellOrBatchEditMode() && this.option(\"editing.allowUpdating\")) {\r\n                        eventsEngine.on($table, addNamespace(holdEvent.name, \"dxDataGridRowsView\"), \"td:not(.\" + EDITOR_CELL_CLASS + \")\", this.createAction(() => {\r\n                            if (editingController.isEditing()) {\r\n                                editingController.closeEditCell()\r\n                            }\r\n                        }))\r\n                    }\r\n                    return $table\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row) {\r\n                        var editingController = this._editingController;\r\n                        var isRowRemoved = !!row.removed;\r\n                        if (editingController.isBatchEditMode()) {\r\n                            isRowRemoved && $row.addClass(ROW_REMOVED)\r\n                        }\r\n                    }\r\n                    return $row\r\n                }\r\n            },\r\n            headerPanel: {\r\n                isVisible: function() {\r\n                    var editingOptions = this.getController(\"editing\").option(\"editing\");\r\n                    return this.callBase() || editingOptions && (editingOptions.allowUpdating || editingOptions.allowDeleting) && editingOptions.mode === EDIT_MODE_BATCH\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.editing_cell_based.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport editingCellBasedModule from \"../grid_core/ui.grid_core.editing_cell_based\";\r\ngridCore.registerModule(\"editingCellBased\", editingCellBasedModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.validating.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getWidth,\r\n    getOuterHeight,\r\n    setHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    createObjectWithChanges\r\n} from \"../../data/array_utils\";\r\nimport {\r\n    deferUpdate,\r\n    equalByValue,\r\n    getKeyHash\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined,\r\n    isEmptyObject,\r\n    isObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    focused\r\n} from \"../widget/selectors\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport Button from \"../button\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport ValidationEngine from \"../validation_engine\";\r\nimport Validator from \"../validator\";\r\nimport Overlay from \"../overlay/ui.overlay\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport {\r\n    Deferred,\r\n    when,\r\n    fromPromise\r\n} from \"../../core/utils/deferred\";\r\nimport LoadIndicator from \"../load_indicator\";\r\nimport {\r\n    encodeHtml\r\n} from \"../../core/utils/string\";\r\nimport browser from \"../../core/utils/browser\";\r\nvar INVALIDATE_CLASS = \"invalid\";\r\nvar REVERT_TOOLTIP_CLASS = \"revert-tooltip\";\r\nvar ROWS_VIEW_CLASS = \"rowsview\";\r\nvar INVALID_MESSAGE_CLASS = \"dx-invalid-message\";\r\nvar WIDGET_INVALID_MESSAGE_CLASS = \"invalid-message\";\r\nvar INVALID_MESSAGE_ALWAYS_CLASS = \"dx-invalid-message-always\";\r\nvar REVERT_BUTTON_CLASS = \"dx-revert-button\";\r\nvar VALIDATOR_CLASS = \"validator\";\r\nvar PENDING_INDICATOR_CLASS = \"dx-pending-indicator\";\r\nvar VALIDATION_PENDING_CLASS = \"dx-validation-pending\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar INSERT_INDEX = \"__DX_INSERT_INDEX__\";\r\nvar PADDING_BETWEEN_TOOLTIPS = 2;\r\nvar EDIT_MODE_ROW = \"row\";\r\nvar EDIT_MODE_FORM = \"form\";\r\nvar EDIT_MODE_BATCH = \"batch\";\r\nvar EDIT_MODE_CELL = \"cell\";\r\nvar EDIT_MODE_POPUP = \"popup\";\r\nvar GROUP_CELL_CLASS = \"dx-group-cell\";\r\nvar FORM_BASED_MODES = [EDIT_MODE_POPUP, EDIT_MODE_FORM];\r\nvar COMMAND_TRANSPARENT = \"transparent\";\r\nvar VALIDATION_STATUS = {\r\n    valid: \"valid\",\r\n    invalid: \"invalid\",\r\n    pending: \"pending\"\r\n};\r\nvar EDIT_DATA_INSERT_TYPE = \"insert\";\r\nvar EDIT_DATA_REMOVE_TYPE = \"remove\";\r\nvar VALIDATION_CANCELLED = \"cancel\";\r\nvar validationResultIsValid = function(result) {\r\n    return isDefined(result) && result !== VALIDATION_CANCELLED\r\n};\r\nvar cellValueShouldBeValidated = function(value, rowOptions) {\r\n    return void 0 !== value || void 0 === value && rowOptions && !rowOptions.isNewRow\r\n};\r\nvar ValidatingController = modules.Controller.inherit({\r\n    init: function() {\r\n        this._editingController = this.getController(\"editing\");\r\n        this.createAction(\"onRowValidating\");\r\n        if (!this._validationState) {\r\n            this.initValidationState()\r\n        }\r\n    },\r\n    initValidationState() {\r\n        this._validationState = [];\r\n        this._validationStateCache = {}\r\n    },\r\n    _rowIsValidated: function(change) {\r\n        var validationData = this._getValidationData(null === change || void 0 === change ? void 0 : change.key);\r\n        return !!validationData && !!validationData.validated\r\n    },\r\n    _getValidationData: function(key, create) {\r\n        var keyHash = getKeyHash(key);\r\n        var isObjectKeyHash = isObject(keyHash);\r\n        var validationData;\r\n        if (isObjectKeyHash) {\r\n            validationData = this._validationState.filter(data => equalByValue(data.key, key))[0]\r\n        } else {\r\n            validationData = this._validationStateCache[keyHash]\r\n        }\r\n        if (!validationData && create) {\r\n            validationData = {\r\n                key: key,\r\n                isValid: true\r\n            };\r\n            this._validationState.push(validationData);\r\n            if (!isObjectKeyHash) {\r\n                this._validationStateCache[keyHash] = validationData\r\n            }\r\n        }\r\n        return validationData\r\n    },\r\n    _getBrokenRules: function(validationData, validationResults) {\r\n        var brokenRules;\r\n        if (validationResults) {\r\n            brokenRules = validationResults.brokenRules || validationResults.brokenRule && [validationResults.brokenRule]\r\n        } else {\r\n            brokenRules = validationData.brokenRules || []\r\n        }\r\n        return brokenRules\r\n    },\r\n    _rowValidating: function(validationData, validationResults) {\r\n        var deferred = new Deferred;\r\n        var change = this._editingController.getChangeByKey(null === validationData || void 0 === validationData ? void 0 : validationData.key);\r\n        var brokenRules = this._getBrokenRules(validationData, validationResults);\r\n        var isValid = validationResults ? validationResults.isValid : validationData.isValid;\r\n        var parameters = {\r\n            brokenRules: brokenRules,\r\n            isValid: isValid,\r\n            key: change.key,\r\n            newData: change.data,\r\n            oldData: this._editingController._getOldData(change.key),\r\n            promise: null,\r\n            errorText: this.getHiddenValidatorsErrorText(brokenRules)\r\n        };\r\n        this.executeAction(\"onRowValidating\", parameters);\r\n        when(fromPromise(parameters.promise)).always((function() {\r\n            validationData.isValid = parameters.isValid;\r\n            validationData.errorText = parameters.errorText;\r\n            deferred.resolve(parameters)\r\n        }));\r\n        return deferred.promise()\r\n    },\r\n    getHiddenValidatorsErrorText: function(brokenRules) {\r\n        var brokenRulesMessages = [];\r\n        each(brokenRules, (function(_, brokenRule) {\r\n            var column = brokenRule.column;\r\n            var isGroupExpandColumn = column && void 0 !== column.groupIndex && !column.showWhenGrouped;\r\n            var isVisibleColumn = column && column.visible;\r\n            if (!brokenRule.validator.$element().parent().length && (!isVisibleColumn || isGroupExpandColumn)) {\r\n                brokenRulesMessages.push(brokenRule.message)\r\n            }\r\n        }));\r\n        return brokenRulesMessages.join(\", \")\r\n    },\r\n    validate: function(isFull) {\r\n        var isValid = true;\r\n        var editingController = this._editingController;\r\n        var deferred = new Deferred;\r\n        var completeList = [];\r\n        var editMode = editingController.getEditMode();\r\n        isFull = isFull || editMode === EDIT_MODE_ROW;\r\n        if (this._isValidationInProgress) {\r\n            return deferred.resolve(false).promise()\r\n        }\r\n        this._isValidationInProgress = true;\r\n        if (isFull) {\r\n            editingController.addDeferred(deferred);\r\n            var changes = editingController.getChanges();\r\n            each(changes, (index, _ref) => {\r\n                var {\r\n                    type: type,\r\n                    key: key\r\n                } = _ref;\r\n                if (\"remove\" !== type) {\r\n                    var validationData = this._getValidationData(key, true);\r\n                    var validationResult = this.validateGroup(validationData);\r\n                    completeList.push(validationResult);\r\n                    validationResult.done(validationResult => {\r\n                        validationData.validated = true;\r\n                        isValid = isValid && validationResult.isValid\r\n                    })\r\n                }\r\n            })\r\n        } else if (this._currentCellValidator) {\r\n            var validationResult = this.validateGroup(this._currentCellValidator._findGroup());\r\n            completeList.push(validationResult);\r\n            validationResult.done(validationResult => {\r\n                isValid = validationResult.isValid\r\n            })\r\n        }\r\n        when(...completeList).done(() => {\r\n            this._isValidationInProgress = false;\r\n            deferred.resolve(isValid)\r\n        });\r\n        return deferred.promise()\r\n    },\r\n    validateGroup: function(validationData) {\r\n        var _validationResult;\r\n        var result = new Deferred;\r\n        var validateGroup = validationData && ValidationEngine.getGroupConfig(validationData);\r\n        var validationResult;\r\n        if (null !== validateGroup && void 0 !== validateGroup && validateGroup.validators.length) {\r\n            this.resetRowValidationResults(validationData);\r\n            validationResult = ValidationEngine.validateGroup(validationData)\r\n        }\r\n        when((null === (_validationResult = validationResult) || void 0 === _validationResult ? void 0 : _validationResult.complete) || validationResult).done(validationResult => {\r\n            when(this._rowValidating(validationData, validationResult)).done(result.resolve)\r\n        });\r\n        return result.promise()\r\n    },\r\n    isRowDataModified: change => !isEmptyObject(change.data),\r\n    updateValidationState: function(change) {\r\n        var editMode = this._editingController.getEditMode();\r\n        var key = change.key;\r\n        var validationData = this._getValidationData(key, true);\r\n        if (-1 === FORM_BASED_MODES.indexOf(editMode)) {\r\n            if (change.type === EDIT_DATA_INSERT_TYPE && !this.isRowDataModified(change)) {\r\n                validationData.isValid = true;\r\n                return\r\n            }\r\n            this.setDisableApplyValidationResults(true);\r\n            var groupConfig = ValidationEngine.getGroupConfig(validationData);\r\n            if (groupConfig) {\r\n                var validationResult = ValidationEngine.validateGroup(validationData);\r\n                when(validationResult.complete || validationResult).done(validationResult => {\r\n                    validationData.isValid = validationResult.isValid;\r\n                    validationData.brokenRules = validationResult.brokenRules\r\n                })\r\n            } else if (!validationData.brokenRules || !validationData.brokenRules.length) {\r\n                validationData.isValid = true\r\n            }\r\n            this.setDisableApplyValidationResults(false)\r\n        } else {\r\n            validationData.isValid = true\r\n        }\r\n    },\r\n    setValidator: function(validator) {\r\n        this._currentCellValidator = validator\r\n    },\r\n    renderCellPendingIndicator: function($container) {\r\n        var $indicator = $container.find(\".\" + PENDING_INDICATOR_CLASS);\r\n        if (!$indicator.length) {\r\n            var $indicatorContainer = $container;\r\n            $indicator = $(\"<div>\").appendTo($indicatorContainer).addClass(PENDING_INDICATOR_CLASS);\r\n            this._createComponent($indicator, LoadIndicator);\r\n            $container.addClass(VALIDATION_PENDING_CLASS)\r\n        }\r\n    },\r\n    disposeCellPendingIndicator: function($container) {\r\n        var $indicator = $container.find(\".\" + PENDING_INDICATOR_CLASS);\r\n        if ($indicator.length) {\r\n            var indicator = LoadIndicator.getInstance($indicator);\r\n            if (indicator) {\r\n                indicator.dispose();\r\n                indicator.$element().remove()\r\n            }\r\n            $container.removeClass(VALIDATION_PENDING_CLASS)\r\n        }\r\n    },\r\n    validationStatusChanged: function(result) {\r\n        var validator = result.validator;\r\n        var validationGroup = validator.option(\"validationGroup\");\r\n        var column = validator.option(\"dataGetter\")().column;\r\n        this.updateCellValidationResult({\r\n            rowKey: validationGroup.key,\r\n            columnIndex: column.index,\r\n            validationResult: result\r\n        })\r\n    },\r\n    validatorInitialized: function(arg) {\r\n        arg.component.on(\"validating\", this.validationStatusChanged.bind(this));\r\n        arg.component.on(\"validated\", this.validationStatusChanged.bind(this))\r\n    },\r\n    validatorDisposing: function(arg) {\r\n        var validator = arg.component;\r\n        var validationGroup = validator.option(\"validationGroup\");\r\n        var column = validator.option(\"dataGetter\")().column;\r\n        var result = this.getCellValidationResult({\r\n            rowKey: null === validationGroup || void 0 === validationGroup ? void 0 : validationGroup.key,\r\n            columnIndex: column.index\r\n        });\r\n        if (validationResultIsValid(result) && result.status === VALIDATION_STATUS.pending) {\r\n            this.cancelCellValidationResult({\r\n                change: validationGroup,\r\n                columnIndex: column.index\r\n            })\r\n        }\r\n    },\r\n    applyValidationResult: function($container, result) {\r\n        var validator = result.validator;\r\n        var validationGroup = validator.option(\"validationGroup\");\r\n        var column = validator.option(\"dataGetter\")().column;\r\n        result.brokenRules && result.brokenRules.forEach(rule => {\r\n            rule.columnIndex = column.index;\r\n            rule.column = column\r\n        });\r\n        if ($container) {\r\n            var validationResult = this.getCellValidationResult({\r\n                rowKey: validationGroup.key,\r\n                columnIndex: column.index\r\n            });\r\n            var requestIsDisabled = validationResultIsValid(validationResult) && validationResult.disabledPendingId === result.id;\r\n            if (this._disableApplyValidationResults || requestIsDisabled) {\r\n                return\r\n            }\r\n            if (result.status === VALIDATION_STATUS.invalid) {\r\n                var $focus = $container.find(\":focus\");\r\n                if (!focused($focus)) {\r\n                    eventsEngine.trigger($focus, \"focus\");\r\n                    eventsEngine.trigger($focus, pointerEvents.down)\r\n                }\r\n            }\r\n            var editor = !column.editCellTemplate && this.getController(\"editorFactory\").getEditorInstance($container);\r\n            if (result.status === VALIDATION_STATUS.pending) {\r\n                if (editor) {\r\n                    editor.option(\"validationStatus\", VALIDATION_STATUS.pending)\r\n                } else {\r\n                    this.renderCellPendingIndicator($container)\r\n                }\r\n            } else if (editor) {\r\n                editor.option(\"validationStatus\", VALIDATION_STATUS.valid)\r\n            } else {\r\n                this.disposeCellPendingIndicator($container)\r\n            }\r\n            $container.toggleClass(this.addWidgetPrefix(INVALIDATE_CLASS), result.status === VALIDATION_STATUS.invalid)\r\n        }\r\n    },\r\n    _syncInternalEditingData: function(parameters) {\r\n        var _parameters$row;\r\n        var editingController = this._editingController;\r\n        var change = editingController.getChangeByKey(parameters.key);\r\n        var oldDataFromState = editingController._getOldData(parameters.key);\r\n        var oldData = null === (_parameters$row = parameters.row) || void 0 === _parameters$row ? void 0 : _parameters$row.oldData;\r\n        if (change && oldData && !oldDataFromState) {\r\n            editingController._addInternalData({\r\n                key: parameters.key,\r\n                oldData: oldData\r\n            })\r\n        }\r\n    },\r\n    createValidator: function(parameters, $container) {\r\n        var editingController = this._editingController;\r\n        var column = parameters.column;\r\n        var showEditorAlways = column.showEditorAlways;\r\n        if (isDefined(column.command) || !column.validationRules || !Array.isArray(column.validationRules) || !column.validationRules.length) {\r\n            return\r\n        }\r\n        var editIndex = editingController.getIndexByKey(parameters.key, editingController.getChanges());\r\n        var needCreateValidator = editIndex > -1;\r\n        if (!needCreateValidator) {\r\n            if (!showEditorAlways) {\r\n                var columnsController = this.getController(\"columns\");\r\n                var visibleColumns = (null === columnsController || void 0 === columnsController ? void 0 : columnsController.getVisibleColumns()) || [];\r\n                showEditorAlways = visibleColumns.some((function(column) {\r\n                    return column.showEditorAlways\r\n                }))\r\n            }\r\n            var isEditRow = equalByValue(this.option(\"editing.editRowKey\"), parameters.key);\r\n            var isCellOrBatchEditingAllowed = editingController.isCellOrBatchEditMode() && editingController.allowUpdating({\r\n                row: parameters.row\r\n            });\r\n            needCreateValidator = isEditRow || isCellOrBatchEditingAllowed && showEditorAlways;\r\n            if (isCellOrBatchEditingAllowed && showEditorAlways) {\r\n                var _parameters$row$oldDa, _parameters$row2;\r\n                editingController._addInternalData({\r\n                    key: parameters.key,\r\n                    oldData: null !== (_parameters$row$oldDa = null === (_parameters$row2 = parameters.row) || void 0 === _parameters$row2 ? void 0 : _parameters$row2.oldData) && void 0 !== _parameters$row$oldDa ? _parameters$row$oldDa : parameters.data\r\n                })\r\n            }\r\n        }\r\n        if (needCreateValidator) {\r\n            if ($container && !$container.length) {\r\n                errors.log(\"E1050\");\r\n                return\r\n            }\r\n            this._syncInternalEditingData(parameters);\r\n            var validationData = this._getValidationData(parameters.key, true);\r\n            var getValue = () => {\r\n                var change = editingController.getChangeByKey(null === validationData || void 0 === validationData ? void 0 : validationData.key);\r\n                var value = column.calculateCellValue((null === change || void 0 === change ? void 0 : change.data) || {});\r\n                return void 0 !== value ? value : parameters.value\r\n            };\r\n            var useDefaultValidator = $container && $container.hasClass(\"dx-widget\");\r\n            $container && $container.addClass(this.addWidgetPrefix(VALIDATOR_CLASS));\r\n            var validator = new Validator($container || $(\"<div>\"), {\r\n                name: column.caption,\r\n                validationRules: extend(true, [], column.validationRules),\r\n                validationGroup: validationData,\r\n                adapter: useDefaultValidator ? null : {\r\n                    getValue: getValue,\r\n                    applyValidationResults: result => {\r\n                        this.applyValidationResult($container, result)\r\n                    }\r\n                },\r\n                dataGetter: function() {\r\n                    var key = null === validationData || void 0 === validationData ? void 0 : validationData.key;\r\n                    var change = editingController.getChangeByKey(key);\r\n                    var oldData = editingController._getOldData(key);\r\n                    return {\r\n                        data: createObjectWithChanges(oldData, null === change || void 0 === change ? void 0 : change.data),\r\n                        column: column\r\n                    }\r\n                },\r\n                onInitialized: this.validatorInitialized.bind(this),\r\n                onDisposing: this.validatorDisposing.bind(this)\r\n            });\r\n            if (useDefaultValidator) {\r\n                var adapter = validator.option(\"adapter\");\r\n                if (adapter) {\r\n                    adapter.getValue = getValue;\r\n                    adapter.validationRequestsCallbacks = []\r\n                }\r\n            }\r\n            return validator\r\n        }\r\n    },\r\n    setDisableApplyValidationResults: function(flag) {\r\n        this._disableApplyValidationResults = flag\r\n    },\r\n    getDisableApplyValidationResults: function() {\r\n        return this._disableApplyValidationResults\r\n    },\r\n    isCurrentValidatorProcessing: function(_ref2) {\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        } = _ref2;\r\n        return this._currentCellValidator && equalByValue(this._currentCellValidator.option(\"validationGroup\").key, rowKey) && this._currentCellValidator.option(\"dataGetter\")().column.index === columnIndex\r\n    },\r\n    validateCell: function(validator) {\r\n        var cellParams = {\r\n            rowKey: validator.option(\"validationGroup\").key,\r\n            columnIndex: validator.option(\"dataGetter\")().column.index\r\n        };\r\n        var validationResult = this.getCellValidationResult(cellParams);\r\n        var stateRestored = validationResultIsValid(validationResult);\r\n        if (!stateRestored) {\r\n            validationResult = validator.validate()\r\n        }\r\n        var deferred = new Deferred;\r\n        var adapter = validator.option(\"adapter\");\r\n        if (stateRestored && validationResult.status === VALIDATION_STATUS.pending) {\r\n            this.updateCellValidationResult(cellParams);\r\n            adapter.applyValidationResults(validationResult)\r\n        }\r\n        when(validationResult.complete || validationResult).done(validationResult => {\r\n            stateRestored && adapter.applyValidationResults(validationResult);\r\n            deferred.resolve(validationResult)\r\n        });\r\n        return deferred.promise()\r\n    },\r\n    updateCellValidationResult: function(_ref3) {\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex,\r\n            validationResult: validationResult\r\n        } = _ref3;\r\n        var validationData = this._getValidationData(rowKey);\r\n        if (!validationData) {\r\n            return\r\n        }\r\n        if (!validationData.validationResults) {\r\n            validationData.validationResults = {}\r\n        }\r\n        var result;\r\n        if (validationResult) {\r\n            result = extend({}, validationResult);\r\n            validationData.validationResults[columnIndex] = result;\r\n            if (validationResult.status === VALIDATION_STATUS.pending) {\r\n                if (this._editingController.getEditMode() === EDIT_MODE_CELL) {\r\n                    result.deferred = new Deferred;\r\n                    result.complete.always(() => {\r\n                        result.deferred.resolve()\r\n                    });\r\n                    this._editingController.addDeferred(result.deferred)\r\n                }\r\n                if (this._disableApplyValidationResults) {\r\n                    result.disabledPendingId = validationResult.id;\r\n                    return\r\n                }\r\n            }\r\n        } else {\r\n            result = validationData.validationResults[columnIndex]\r\n        }\r\n        if (result && result.disabledPendingId) {\r\n            delete result.disabledPendingId\r\n        }\r\n    },\r\n    getCellValidationResult: function(_ref4) {\r\n        var _validationData$valid;\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        } = _ref4;\r\n        var validationData = this._getValidationData(rowKey, true);\r\n        return null === validationData || void 0 === validationData ? void 0 : null === (_validationData$valid = validationData.validationResults) || void 0 === _validationData$valid ? void 0 : _validationData$valid[columnIndex]\r\n    },\r\n    removeCellValidationResult: function(_ref5) {\r\n        var {\r\n            change: change,\r\n            columnIndex: columnIndex\r\n        } = _ref5;\r\n        var validationData = this._getValidationData(null === change || void 0 === change ? void 0 : change.key);\r\n        if (validationData && validationData.validationResults) {\r\n            this.cancelCellValidationResult({\r\n                change: change,\r\n                columnIndex: columnIndex\r\n            });\r\n            delete validationData.validationResults[columnIndex]\r\n        }\r\n    },\r\n    cancelCellValidationResult: function(_ref6) {\r\n        var {\r\n            change: change,\r\n            columnIndex: columnIndex\r\n        } = _ref6;\r\n        var validationData = this._getValidationData(change.key);\r\n        if (change && validationData.validationResults) {\r\n            var result = validationData.validationResults[columnIndex];\r\n            if (result) {\r\n                result.deferred && result.deferred.reject(VALIDATION_CANCELLED);\r\n                validationData.validationResults[columnIndex] = VALIDATION_CANCELLED\r\n            }\r\n        }\r\n    },\r\n    resetRowValidationResults: function(validationData) {\r\n        if (validationData) {\r\n            validationData.validationResults && delete validationData.validationResults;\r\n            delete validationData.validated\r\n        }\r\n    },\r\n    isInvalidCell: function(_ref7) {\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        } = _ref7;\r\n        var result = this.getCellValidationResult({\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        });\r\n        return validationResultIsValid(result) && result.status === VALIDATION_STATUS.invalid\r\n    },\r\n    getCellValidator: function(_ref8) {\r\n        var {\r\n            rowKey: rowKey,\r\n            columnIndex: columnIndex\r\n        } = _ref8;\r\n        var validationData = this._getValidationData(rowKey);\r\n        var groupConfig = validationData && ValidationEngine.getGroupConfig(validationData);\r\n        var validators = groupConfig && groupConfig.validators;\r\n        return validators && validators.filter(v => {\r\n            var column = v.option(\"dataGetter\")().column;\r\n            return column ? column.index === columnIndex : false\r\n        })[0]\r\n    },\r\n    setCellValidationStatus: function(cellOptions) {\r\n        var validationResult = this.getCellValidationResult({\r\n            rowKey: cellOptions.key,\r\n            columnIndex: cellOptions.column.index\r\n        });\r\n        if (isDefined(validationResult)) {\r\n            cellOptions.validationStatus = validationResult !== VALIDATION_CANCELLED ? validationResult.status : VALIDATION_CANCELLED\r\n        } else {\r\n            delete cellOptions.validationStatus\r\n        }\r\n    }\r\n});\r\nexport var validatingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            editing: {\r\n                texts: {\r\n                    validationCancelChanges: messageLocalization.format(\"dxDataGrid-validationCancelChanges\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        validating: ValidatingController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                _addChange: function(changeParams) {\r\n                    var change = this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    if (change && changeParams.type !== EDIT_DATA_REMOVE_TYPE) {\r\n                        validatingController.updateValidationState(change)\r\n                    }\r\n                    return change\r\n                },\r\n                _handleChangesChange: function(args) {\r\n                    this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    args.value.forEach(change => {\r\n                        if (void 0 === validatingController._getValidationData(change.key)) {\r\n                            validatingController.updateValidationState(change)\r\n                        }\r\n                    })\r\n                },\r\n                _updateRowAndPageIndices: function() {\r\n                    var that = this;\r\n                    var startInsertIndex = that.getView(\"rowsView\").getTopVisibleItemIndex();\r\n                    var rowIndex = startInsertIndex;\r\n                    each(that.getChanges(), (_, _ref9) => {\r\n                        var {\r\n                            key: key,\r\n                            type: type\r\n                        } = _ref9;\r\n                        var validationData = this.getController(\"validating\")._getValidationData(key);\r\n                        if (validationData && !validationData.isValid && validationData.pageIndex !== that._pageIndex) {\r\n                            validationData.pageIndex = that._pageIndex;\r\n                            if (type === EDIT_DATA_INSERT_TYPE) {\r\n                                validationData.rowIndex = startInsertIndex\r\n                            } else {\r\n                                validationData.rowIndex = rowIndex\r\n                            }\r\n                            rowIndex++\r\n                        }\r\n                    })\r\n                },\r\n                _getValidationGroupsInForm: function(detailOptions) {\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var validationData = validatingController._getValidationData(detailOptions.key, true);\r\n                    return {\r\n                        validationGroup: validationData\r\n                    }\r\n                },\r\n                _validateEditFormAfterUpdate: function(row, isCustomSetCellValue) {\r\n                    if (isCustomSetCellValue && this._editForm && !row.isNewRow) {\r\n                        this._editForm.validate()\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _prepareEditCell: function(params) {\r\n                    var isNotCanceled = this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    if (isNotCanceled && params.column.showEditorAlways) {\r\n                        validatingController.updateValidationState({\r\n                            key: params.key\r\n                        })\r\n                    }\r\n                    return isNotCanceled\r\n                },\r\n                processItems: function(items, changeType) {\r\n                    var changes = this.getChanges();\r\n                    var dataController = this.getController(\"data\");\r\n                    var validatingController = this.getController(\"validating\");\r\n                    items = this.callBase(items, changeType);\r\n                    var itemsCount = items.length;\r\n                    var addInValidItem = function(change, validationData) {\r\n                        var data = {\r\n                            key: change.key\r\n                        };\r\n                        var index = function(change, items) {\r\n                            var index = -1;\r\n                            var isInsert = change.type === EDIT_DATA_INSERT_TYPE;\r\n                            var key = change.key;\r\n                            each(items, (function(i, item) {\r\n                                if (equalByValue(key, isInsert ? item.key : dataController.keyOf(item))) {\r\n                                    index = i;\r\n                                    return false\r\n                                }\r\n                            }));\r\n                            return index\r\n                        }(change, items);\r\n                        if (index >= 0) {\r\n                            return\r\n                        }\r\n                        validationData.rowIndex = validationData.rowIndex > itemsCount ? validationData.rowIndex % itemsCount : validationData.rowIndex;\r\n                        var rowIndex = validationData.rowIndex;\r\n                        data[INSERT_INDEX] = 1;\r\n                        items.splice(rowIndex, 0, data)\r\n                    };\r\n                    if (this.getEditMode() === EDIT_MODE_BATCH && \"prepend\" !== changeType && \"append\" !== changeType) {\r\n                        changes.forEach(change => {\r\n                            var key = change.key;\r\n                            var validationData = validatingController._getValidationData(key);\r\n                            if (validationData && change.type && validationData.pageIndex === this._pageIndex && (null === change || void 0 === change ? void 0 : change.pageIndex) !== this._pageIndex) {\r\n                                addInValidItem(change, validationData)\r\n                            }\r\n                        })\r\n                    }\r\n                    return items\r\n                },\r\n                processDataItem: function(item) {\r\n                    var isInserted = item.data[INSERT_INDEX];\r\n                    var key = isInserted ? item.data.key : item.key;\r\n                    var editMode = this.getEditMode();\r\n                    if (editMode === EDIT_MODE_BATCH && isInserted && key) {\r\n                        var changes = this.getChanges();\r\n                        var editIndex = gridCoreUtils.getIndexByKey(key, changes);\r\n                        if (editIndex >= 0) {\r\n                            var change = changes[editIndex];\r\n                            if (change.type !== EDIT_DATA_INSERT_TYPE) {\r\n                                var oldData = this._getOldData(change.key);\r\n                                item.data = extend(true, {}, oldData, change.data);\r\n                                item.key = key\r\n                            }\r\n                        }\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _createInvisibleColumnValidators: function(changes) {\r\n                    var that = this;\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var columnsController = this.getController(\"columns\");\r\n                    var columns = columnsController.getColumns();\r\n                    var invisibleColumns = columnsController.getInvisibleColumns().filter(column => !column.isBand);\r\n                    var groupColumns = columnsController.getGroupColumns().filter(column => !column.showWhenGrouped && -1 === invisibleColumns.indexOf(column));\r\n                    var invisibleColumnValidators = [];\r\n                    var isCellVisible = (column, rowKey) => this._dataController.getRowIndexByKey(rowKey) >= 0 && invisibleColumns.indexOf(column) < 0;\r\n                    invisibleColumns.push(...groupColumns);\r\n                    if (-1 === FORM_BASED_MODES.indexOf(this.getEditMode())) {\r\n                        each(columns, (function(_, column) {\r\n                            changes.forEach((function(change) {\r\n                                var data;\r\n                                if (isCellVisible(column, change.key)) {\r\n                                    return\r\n                                }\r\n                                if (change.type === EDIT_DATA_INSERT_TYPE) {\r\n                                    data = change.data\r\n                                } else if (\"update\" === change.type) {\r\n                                    var oldData = that._getOldData(change.key);\r\n                                    data = createObjectWithChanges(oldData, change.data)\r\n                                }\r\n                                if (data) {\r\n                                    var validator = validatingController.createValidator({\r\n                                        column: column,\r\n                                        key: change.key,\r\n                                        value: column.calculateCellValue(data)\r\n                                    });\r\n                                    if (validator) {\r\n                                        invisibleColumnValidators.push(validator)\r\n                                    }\r\n                                }\r\n                            }))\r\n                        }))\r\n                    }\r\n                    return function() {\r\n                        invisibleColumnValidators.forEach((function(validator) {\r\n                            validator.dispose()\r\n                        }))\r\n                    }\r\n                },\r\n                _beforeSaveEditData: function(change, editIndex) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var validationData = validatingController._getValidationData(null === change || void 0 === change ? void 0 : change.key);\r\n                    if (change) {\r\n                        var isValid = \"remove\" === change.type || validationData.isValid;\r\n                        result = result || !isValid\r\n                    } else {\r\n                        var disposeValidators = this._createInvisibleColumnValidators(this.getChanges());\r\n                        result = new Deferred;\r\n                        this.executeOperation(result, () => {\r\n                            validatingController.validate(true).done(isFullValid => {\r\n                                disposeValidators();\r\n                                this._updateRowAndPageIndices();\r\n                                switch (this.getEditMode()) {\r\n                                    case EDIT_MODE_CELL:\r\n                                        if (!isFullValid) {\r\n                                            this._focusEditingCell()\r\n                                        }\r\n                                        break;\r\n                                    case EDIT_MODE_BATCH:\r\n                                        if (!isFullValid) {\r\n                                            this._resetEditRowKey();\r\n                                            this._resetEditColumnName();\r\n                                            this.getController(\"data\").updateItems()\r\n                                        }\r\n                                }\r\n                                result.resolve(!isFullValid)\r\n                            })\r\n                        })\r\n                    }\r\n                    return result.promise ? result.promise() : result\r\n                },\r\n                _beforeEditCell: function(rowIndex, columnIndex, item) {\r\n                    var result = this.callBase(rowIndex, columnIndex, item);\r\n                    if (this.getEditMode() === EDIT_MODE_CELL) {\r\n                        var $cell = this._rowsView._getCellElement(rowIndex, columnIndex);\r\n                        var validator = $cell && $cell.data(\"dxValidator\");\r\n                        var rowOptions = $cell && $cell.closest(\".dx-row\").data(\"options\");\r\n                        var value = validator && validator.option(\"adapter\").getValue();\r\n                        if (validator && cellValueShouldBeValidated(value, rowOptions)) {\r\n                            var validatingController = this.getController(\"validating\");\r\n                            var deferred = new Deferred;\r\n                            when(validatingController.validateCell(validator), result).done((validationResult, result) => {\r\n                                deferred.resolve(validationResult.status === VALIDATION_STATUS.valid && result)\r\n                            });\r\n                            return deferred.promise()\r\n                        } else if (!validator) {\r\n                            return result\r\n                        }\r\n                    }\r\n                },\r\n                _afterSaveEditData: function(cancel) {\r\n                    var $firstErrorRow;\r\n                    var isCellEditMode = this.getEditMode() === EDIT_MODE_CELL;\r\n                    each(this.getChanges(), (_, change) => {\r\n                        var $errorRow = this._showErrorRow(change);\r\n                        $firstErrorRow = $firstErrorRow || $errorRow\r\n                    });\r\n                    if ($firstErrorRow) {\r\n                        var scrollable = this._rowsView.getScrollable();\r\n                        if (scrollable) {\r\n                            scrollable.update();\r\n                            scrollable.scrollToElement($firstErrorRow)\r\n                        }\r\n                    }\r\n                    if (cancel && isCellEditMode && this._needUpdateRow()) {\r\n                        var editRowIndex = this.getEditRowIndex();\r\n                        this._dataController.updateItems({\r\n                            changeType: \"update\",\r\n                            rowIndices: [editRowIndex]\r\n                        });\r\n                        this._focusEditingCell()\r\n                    } else if (!cancel) {\r\n                        var shouldResetValidationState = true;\r\n                        if (isCellEditMode) {\r\n                            var columns = this.getController(\"columns\").getColumns();\r\n                            var columnsWithValidatingEditors = columns.filter(col => {\r\n                                var _col$validationRules;\r\n                                return col.showEditorAlways && (null === (_col$validationRules = col.validationRules) || void 0 === _col$validationRules ? void 0 : _col$validationRules.length) > 0\r\n                            }).length > 0;\r\n                            shouldResetValidationState = !columnsWithValidatingEditors\r\n                        }\r\n                        if (shouldResetValidationState) {\r\n                            this.getController(\"validating\").initValidationState()\r\n                        }\r\n                    }\r\n                },\r\n                _handleDataChanged: function(args) {\r\n                    var validationState = this.getController(\"validating\")._validationState;\r\n                    if (\"standard\" === this.option(\"scrolling.mode\")) {\r\n                        this.resetRowAndPageIndices()\r\n                    }\r\n                    if (\"prepend\" === args.changeType) {\r\n                        each(validationState, (function(_, validationData) {\r\n                            validationData.rowIndex += args.items.length\r\n                        }))\r\n                    }\r\n                    this.callBase(args)\r\n                },\r\n                resetRowAndPageIndices: function() {\r\n                    var validationState = this.getController(\"validating\")._validationState;\r\n                    each(validationState, (_, validationData) => {\r\n                        if (validationData.pageIndex !== this._pageIndex) {\r\n                            delete validationData.pageIndex;\r\n                            delete validationData.rowIndex\r\n                        }\r\n                    })\r\n                },\r\n                _beforeCancelEditData: function() {\r\n                    this.getController(\"validating\").initValidationState();\r\n                    this.callBase()\r\n                },\r\n                _showErrorRow: function(change) {\r\n                    var $popupContent;\r\n                    var errorHandling = this.getController(\"errorHandling\");\r\n                    var items = this.getController(\"data\").items();\r\n                    var rowIndex = this.getIndexByKey(change.key, items);\r\n                    var validationData = this.getController(\"validating\")._getValidationData(change.key);\r\n                    if (!(null !== validationData && void 0 !== validationData && validationData.isValid) && null !== validationData && void 0 !== validationData && validationData.errorText && rowIndex >= 0) {\r\n                        $popupContent = this.getPopupContent();\r\n                        return errorHandling && errorHandling.renderErrorRow(null === validationData || void 0 === validationData ? void 0 : validationData.errorText, rowIndex, $popupContent)\r\n                    }\r\n                },\r\n                updateFieldValue: function(e) {\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var deferred = new Deferred;\r\n                    validatingController.removeCellValidationResult({\r\n                        change: this.getChangeByKey(e.key),\r\n                        columnIndex: e.column.index\r\n                    });\r\n                    this.callBase.apply(this, arguments).done(() => {\r\n                        var currentValidator = validatingController.getCellValidator({\r\n                            rowKey: e.key,\r\n                            columnIndex: e.column.index\r\n                        });\r\n                        when(currentValidator && validatingController.validateCell(currentValidator)).done(validationResult => {\r\n                            this.getController(\"editorFactory\").refocus();\r\n                            deferred.resolve(validationResult)\r\n                        })\r\n                    });\r\n                    return deferred.promise()\r\n                },\r\n                highlightDataCell: function($cell, parameters) {\r\n                    this.callBase.apply(this, arguments);\r\n                    var validatingController = this.getController(\"validating\");\r\n                    validatingController.setCellValidationStatus(parameters);\r\n                    var isEditableCell = !!parameters.setValue;\r\n                    var cellModified = this.isCellModified(parameters);\r\n                    var isValidated = isDefined(parameters.validationStatus);\r\n                    var needValidation = cellModified && parameters.column.setCellValue || isEditableCell && !cellModified && !(parameters.row.isNewRow || !isValidated);\r\n                    if (needValidation) {\r\n                        var validator = $cell.data(\"dxValidator\");\r\n                        if (validator) {\r\n                            when(this.getController(\"validating\").validateCell(validator)).done(() => {\r\n                                validatingController.setCellValidationStatus(parameters)\r\n                            })\r\n                        }\r\n                    }\r\n                },\r\n                getChangeByKey: function(key) {\r\n                    var changes = this.getChanges();\r\n                    return changes[gridCoreUtils.getIndexByKey(key, changes)]\r\n                },\r\n                isCellModified: function(parameters) {\r\n                    var cellModified = this.callBase(parameters);\r\n                    var change = this.getChangeByKey(parameters.key);\r\n                    var isCellInvalid = !!parameters.row && this.getController(\"validating\").isInvalidCell({\r\n                        rowKey: parameters.key,\r\n                        columnIndex: parameters.column.index\r\n                    });\r\n                    return cellModified || this.getController(\"validating\")._rowIsValidated(change) && isCellInvalid\r\n                }\r\n            },\r\n            editorFactory: {\r\n                _showRevertButton: function($container) {\r\n                    if (!$container || !$container.length) {\r\n                        return\r\n                    }\r\n                    var $tooltipElement = this._rowsView.element().find(\".\" + this.addWidgetPrefix(REVERT_TOOLTIP_CLASS));\r\n                    var $overlayContainer = $container.closest(\".\".concat(this.addWidgetPrefix(CONTENT_CLASS)));\r\n                    $tooltipElement && $tooltipElement.remove();\r\n                    $tooltipElement = $(\"<div>\").addClass(this.addWidgetPrefix(REVERT_TOOLTIP_CLASS)).appendTo($container);\r\n                    var tooltipOptions = {\r\n                        animation: null,\r\n                        visible: true,\r\n                        width: \"auto\",\r\n                        height: \"auto\",\r\n                        target: $container,\r\n                        shading: false,\r\n                        container: $overlayContainer,\r\n                        propagateOutsideClick: true,\r\n                        closeOnOutsideClick: false,\r\n                        copyRootClassesToWrapper: true,\r\n                        _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n                        contentTemplate: () => {\r\n                            var $buttonElement = $(\"<div>\").addClass(REVERT_BUTTON_CLASS);\r\n                            var buttonOptions = {\r\n                                icon: \"revert\",\r\n                                hint: this.option(\"editing.texts.validationCancelChanges\"),\r\n                                onClick: () => {\r\n                                    this._editingController.cancelEditData()\r\n                                }\r\n                            };\r\n                            return new Button($buttonElement, buttonOptions).$element()\r\n                        },\r\n                        position: {\r\n                            my: \"left top\",\r\n                            at: \"right top\",\r\n                            offset: \"1 0\",\r\n                            collision: \"flip\",\r\n                            boundaryOffset: \"0 0\",\r\n                            boundary: this._rowsView.element()\r\n                        },\r\n                        onPositioned: this._positionedHandler.bind(this)\r\n                    };\r\n                    return new Overlay($tooltipElement, tooltipOptions)\r\n                },\r\n                _hideFixedGroupCell: function($cell, overlayOptions) {\r\n                    var $nextFixedRowElement;\r\n                    var $groupCellElement;\r\n                    var isFixedColumns = this._rowsView.isFixedColumns();\r\n                    var isFormOrPopupEditMode = this._editingController.isFormOrPopupEditMode();\r\n                    if (isFixedColumns && !isFormOrPopupEditMode) {\r\n                        var nextRowOptions = $cell.closest(\".dx-row\").next().data(\"options\");\r\n                        if (nextRowOptions && \"group\" === nextRowOptions.rowType) {\r\n                            $nextFixedRowElement = $(this._rowsView.getRowElement(nextRowOptions.rowIndex)).last();\r\n                            $groupCellElement = $nextFixedRowElement.find(\".\" + GROUP_CELL_CLASS);\r\n                            if ($groupCellElement.length && \"hidden\" !== $groupCellElement.get(0).style.visibility) {\r\n                                $groupCellElement.css(\"visibility\", \"hidden\");\r\n                                overlayOptions.onDisposing = function() {\r\n                                    $groupCellElement.css(\"visibility\", \"\")\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _positionedHandler: function(e, isOverlayVisible) {\r\n                    if (!e.component.__skipPositionProcessing) {\r\n                        var isRevertButton = $(e.element).hasClass(this.addWidgetPrefix(REVERT_TOOLTIP_CLASS));\r\n                        var needRepaint = !isRevertButton && this._rowsView.updateFreeSpaceRowHeight();\r\n                        var normalizedPosition = this._normalizeValidationMessagePositionAndMaxWidth(e, isRevertButton, isOverlayVisible);\r\n                        e.component.__skipPositionProcessing = !!(needRepaint || normalizedPosition);\r\n                        if (normalizedPosition) {\r\n                            e.component.option(normalizedPosition)\r\n                        } else if (needRepaint) {\r\n                            e.component.repaint()\r\n                        }\r\n                    }\r\n                },\r\n                _showValidationMessage: function($cell, messages, alignment, revertTooltip) {\r\n                    var editorPopup = $cell.find(\".dx-dropdowneditor-overlay\").data(\"dxPopup\");\r\n                    var isOverlayVisible = editorPopup && editorPopup.option(\"visible\");\r\n                    var myPosition = isOverlayVisible ? \"top right\" : \"top \" + alignment;\r\n                    var atPosition = isOverlayVisible ? \"top left\" : \"bottom \" + alignment;\r\n                    var $overlayContainer = $cell.closest(\".\".concat(this.addWidgetPrefix(CONTENT_CLASS)));\r\n                    var errorMessageText = \"\";\r\n                    messages && messages.forEach((function(message) {\r\n                        errorMessageText += (errorMessageText.length ? \"<br/>\" : \"\") + encodeHtml(message)\r\n                    }));\r\n                    var invalidMessageClass = this.addWidgetPrefix(WIDGET_INVALID_MESSAGE_CLASS);\r\n                    this._rowsView.element().find(\".\" + invalidMessageClass).remove();\r\n                    var $overlayElement = $(\"<div>\").addClass(INVALID_MESSAGE_CLASS).addClass(INVALID_MESSAGE_ALWAYS_CLASS).addClass(invalidMessageClass).html(errorMessageText).appendTo($cell);\r\n                    var overlayOptions = {\r\n                        target: $cell,\r\n                        container: $overlayContainer,\r\n                        shading: false,\r\n                        width: \"auto\",\r\n                        height: \"auto\",\r\n                        visible: true,\r\n                        animation: false,\r\n                        propagateOutsideClick: true,\r\n                        closeOnOutsideClick: false,\r\n                        copyRootClassesToWrapper: true,\r\n                        _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n                        position: {\r\n                            collision: \"flip\",\r\n                            boundary: this._rowsView.element(),\r\n                            boundaryOffset: \"0 0\",\r\n                            offset: {\r\n                                x: 0,\r\n                                y: !isOverlayVisible && browser.mozilla ? -1 : 0\r\n                            },\r\n                            my: myPosition,\r\n                            at: atPosition\r\n                        },\r\n                        onPositioned: e => {\r\n                            this._positionedHandler(e, isOverlayVisible);\r\n                            this._shiftValidationMessageIfNeed(e.component.$content(), revertTooltip && revertTooltip.$content(), $cell)\r\n                        }\r\n                    };\r\n                    this._hideFixedGroupCell($cell, overlayOptions);\r\n                    new Overlay($overlayElement, overlayOptions)\r\n                },\r\n                _normalizeValidationMessagePositionAndMaxWidth: function(options, isRevertButton, isOverlayVisible) {\r\n                    var fixedColumns = this._columnsController.getFixedColumns();\r\n                    if (!fixedColumns || !fixedColumns.length) {\r\n                        return\r\n                    }\r\n                    var position;\r\n                    var visibleTableWidth = !isRevertButton && (that = this, element = options.element, rowIndex = $(element).closest(\"tr\").index(), $cellElements = $(that._rowsView.getRowElement(rowIndex)).first().children().filter(\":not(.dx-hidden-cell)\"), that._rowsView._getWidths($cellElements).reduce((w1, w2) => w1 + w2, 0));\r\n                    var that, element, rowIndex, $cellElements;\r\n                    var $overlayContentElement = options.component.$content();\r\n                    var validationMessageWidth = getOuterWidth($overlayContentElement, true);\r\n                    var needMaxWidth = !isRevertButton && validationMessageWidth > visibleTableWidth;\r\n                    var columnIndex = this._rowsView.getCellIndex($(options.element).closest(\"td\"));\r\n                    var boundaryNonFixedColumnsInfo = function(fixedColumns) {\r\n                        var firstNonFixedColumnIndex;\r\n                        var lastNonFixedColumnIndex;\r\n                        fixedColumns.some((column, index) => {\r\n                            if (column.command === COMMAND_TRANSPARENT) {\r\n                                firstNonFixedColumnIndex = 0 === index ? -1 : index;\r\n                                lastNonFixedColumnIndex = index === fixedColumns.length - 1 ? -1 : index + column.colspan - 1;\r\n                                return true\r\n                            }\r\n                        });\r\n                        return {\r\n                            startColumnIndex: firstNonFixedColumnIndex,\r\n                            endColumnIndex: lastNonFixedColumnIndex\r\n                        }\r\n                    }(fixedColumns);\r\n                    if (!isRevertButton && (columnIndex === boundaryNonFixedColumnsInfo.startColumnIndex || needMaxWidth)) {\r\n                        position = {\r\n                            collision: \"none flip\",\r\n                            my: \"top left\",\r\n                            at: isOverlayVisible ? \"top right\" : \"bottom left\"\r\n                        }\r\n                    } else if (columnIndex === boundaryNonFixedColumnsInfo.endColumnIndex) {\r\n                        position = {\r\n                            collision: \"none flip\",\r\n                            my: \"top right\",\r\n                            at: isRevertButton || isOverlayVisible ? \"top left\" : \"bottom right\"\r\n                        };\r\n                        if (isRevertButton) {\r\n                            position.offset = \"-1 0\"\r\n                        }\r\n                    }\r\n                    return position && {\r\n                        position: position,\r\n                        maxWidth: needMaxWidth ? visibleTableWidth - 2 : void 0\r\n                    }\r\n                },\r\n                _shiftValidationMessageIfNeed: function($content, $revertContent, $cell) {\r\n                    if (!$revertContent) {\r\n                        return\r\n                    }\r\n                    var contentOffset = $content.offset();\r\n                    var revertContentOffset = $revertContent.offset();\r\n                    if (contentOffset.top === revertContentOffset.top && contentOffset.left + getWidth($content) > revertContentOffset.left) {\r\n                        var left = getWidth($revertContent) + PADDING_BETWEEN_TOOLTIPS;\r\n                        $content.css(\"left\", revertContentOffset.left < $cell.offset().left ? -left : left)\r\n                    }\r\n                },\r\n                _getTooltipsSelector: function() {\r\n                    var invalidMessageClass = this.addWidgetPrefix(WIDGET_INVALID_MESSAGE_CLASS);\r\n                    var revertTooltipClass = this.addWidgetPrefix(REVERT_TOOLTIP_CLASS);\r\n                    return \".dx-editor-cell .\" + revertTooltipClass + \", .dx-editor-cell .\" + invalidMessageClass + \", .dx-cell-modified .\" + invalidMessageClass\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._editingController = this.getController(\"editing\");\r\n                    this._columnsController = this.getController(\"columns\");\r\n                    this._rowsView = this.getView(\"rowsView\")\r\n                },\r\n                loseFocus: function(skipValidator) {\r\n                    if (!skipValidator) {\r\n                        this.getController(\"validating\").setValidator(null)\r\n                    }\r\n                    this.callBase()\r\n                },\r\n                updateCellState: function($element, validationResult, hideBorder) {\r\n                    var _change$data;\r\n                    var $focus = null === $element || void 0 === $element ? void 0 : $element.closest(this._getFocusCellSelector());\r\n                    var $cell = null !== $focus && void 0 !== $focus && $focus.is(\"td\") ? $focus : null;\r\n                    var rowOptions = null === $focus || void 0 === $focus ? void 0 : $focus.closest(\".dx-row\").data(\"options\");\r\n                    var change = rowOptions ? this.getController(\"editing\").getChangeByKey(rowOptions.key) : null;\r\n                    var column = $cell && this.getController(\"columns\").getVisibleColumns()[$cell.index()];\r\n                    var isCellModified = void 0 !== (null === change || void 0 === change ? void 0 : null === (_change$data = change.data) || void 0 === _change$data ? void 0 : _change$data[null === column || void 0 === column ? void 0 : column.name]) && !this._editingController.isSaving();\r\n                    var revertTooltip;\r\n                    if ((null === validationResult || void 0 === validationResult ? void 0 : validationResult.status) === VALIDATION_STATUS.invalid || isCellModified) {\r\n                        if (this._editingController.getEditMode() === EDIT_MODE_CELL) {\r\n                            revertTooltip = this._showRevertButton($focus)\r\n                        }\r\n                    }\r\n                    var showValidationMessage = validationResult && validationResult.status === VALIDATION_STATUS.invalid;\r\n                    if (showValidationMessage && $cell && column && validationResult && validationResult.brokenRules) {\r\n                        var errorMessages = [];\r\n                        validationResult.brokenRules.forEach((function(rule) {\r\n                            errorMessages.push(rule.message)\r\n                        }));\r\n                        this._showValidationMessage($focus, errorMessages, column.alignment || \"left\", revertTooltip)\r\n                    }!hideBorder && this._rowsView.element() && this._rowsView.updateFreeSpaceRowHeight()\r\n                },\r\n                focus: function($element, hideBorder) {\r\n                    if (!arguments.length) {\r\n                        return this.callBase()\r\n                    }\r\n                    var $tooltips = $element && $element.closest(\".\" + this.addWidgetPrefix(ROWS_VIEW_CLASS)).find(this._getTooltipsSelector());\r\n                    $tooltips && $tooltips.remove();\r\n                    if (null !== $element && void 0 !== $element && $element.hasClass(\"dx-row\")) {\r\n                        return this.callBase($element, hideBorder)\r\n                    }\r\n                    var $focus = null === $element || void 0 === $element ? void 0 : $element.closest(this._getFocusCellSelector());\r\n                    var callBase = this.callBase;\r\n                    var validator = $focus && ($focus.data(\"dxValidator\") || $element.find(\".\" + this.addWidgetPrefix(VALIDATOR_CLASS)).eq(0).data(\"dxValidator\"));\r\n                    var rowOptions = $focus && $focus.closest(\".dx-row\").data(\"options\");\r\n                    var editingController = this.getController(\"editing\");\r\n                    var change = rowOptions ? editingController.getChangeByKey(rowOptions.key) : null;\r\n                    var validationResult;\r\n                    var validatingController = this.getController(\"validating\");\r\n                    if (validator) {\r\n                        validatingController.setValidator(validator);\r\n                        var value = validator.option(\"adapter\").getValue();\r\n                        if (cellValueShouldBeValidated(value, rowOptions) || validatingController._rowIsValidated(change)) {\r\n                            editingController.waitForDeferredOperations().done(() => {\r\n                                when(validatingController.validateCell(validator)).done(result => {\r\n                                    validationResult = result;\r\n                                    var column = validationResult.validator.option(\"dataGetter\")().column;\r\n                                    if (change && column && !validatingController.isCurrentValidatorProcessing({\r\n                                            rowKey: change.key,\r\n                                            columnIndex: column.index\r\n                                        })) {\r\n                                        return\r\n                                    }\r\n                                    if (validationResult.status === VALIDATION_STATUS.invalid) {\r\n                                        hideBorder = true\r\n                                    }\r\n                                    this.updateCellState($element, validationResult, hideBorder);\r\n                                    callBase.call(this, $element, hideBorder)\r\n                                })\r\n                            });\r\n                            return this.callBase($element, hideBorder)\r\n                        }\r\n                    }\r\n                    this.updateCellState($element, validationResult, hideBorder);\r\n                    return this.callBase($element, hideBorder)\r\n                },\r\n                getEditorInstance: function($container) {\r\n                    var $editor = $container.find(\".dx-texteditor\").eq(0);\r\n                    return gridCoreUtils.getWidgetInstance($editor)\r\n                }\r\n            },\r\n            data: {\r\n                _isCellChanged: function(oldRow, newRow, visibleRowIndex, columnIndex, isLiveUpdate) {\r\n                    var _oldRow$cells, _cell$column$validati;\r\n                    var cell = null === (_oldRow$cells = oldRow.cells) || void 0 === _oldRow$cells ? void 0 : _oldRow$cells[columnIndex];\r\n                    var oldValidationStatus = cell && cell.validationStatus;\r\n                    var validatingController = this.getController(\"validating\");\r\n                    var validationResult = validatingController.getCellValidationResult({\r\n                        rowKey: oldRow.key,\r\n                        columnIndex: columnIndex\r\n                    });\r\n                    var validationData = validatingController._getValidationData(oldRow.key);\r\n                    var newValidationStatus = validationResultIsValid(validationResult) ? validationResult.status : validationResult;\r\n                    var rowIsModified = JSON.stringify(newRow.modifiedValues) !== JSON.stringify(oldRow.modifiedValues);\r\n                    var cellIsMarkedAsInvalid = $(null === cell || void 0 === cell ? void 0 : cell.cellElement).hasClass(this.addWidgetPrefix(INVALIDATE_CLASS));\r\n                    var editingChanged = oldRow.isEditing !== newRow.isEditing;\r\n                    var hasValidationRules = null === cell || void 0 === cell ? void 0 : null === (_cell$column$validati = cell.column.validationRules) || void 0 === _cell$column$validati ? void 0 : _cell$column$validati.length;\r\n                    if (editingChanged && hasValidationRules || oldValidationStatus !== newValidationStatus && rowIsModified || validationData.isValid && cellIsMarkedAsInvalid) {\r\n                        return true\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                updateFreeSpaceRowHeight: function($table) {\r\n                    var $rowElements;\r\n                    var $freeSpaceRowElement;\r\n                    var $freeSpaceRowElements;\r\n                    var $element = this.element();\r\n                    var $tooltipContent = $element && $element.find(\".\" + this.addWidgetPrefix(WIDGET_INVALID_MESSAGE_CLASS) + \" .dx-overlay-content\");\r\n                    this.callBase($table);\r\n                    if ($tooltipContent && $tooltipContent.length) {\r\n                        $rowElements = this._getRowElements();\r\n                        $freeSpaceRowElements = this._getFreeSpaceRowElements($table);\r\n                        $freeSpaceRowElement = $freeSpaceRowElements.first();\r\n                        if ($freeSpaceRowElement && 1 === $rowElements.length && (!$freeSpaceRowElement.is(\":visible\") || getOuterHeight($tooltipContent) > getOuterHeight($freeSpaceRowElement))) {\r\n                            $freeSpaceRowElements.show();\r\n                            setHeight($freeSpaceRowElements, getOuterHeight($tooltipContent));\r\n                            return true\r\n                        }\r\n                    }\r\n                },\r\n                _formItemPrepared: function(cellOptions, $container) {\r\n                    this.callBase.apply(this, arguments);\r\n                    deferUpdate(() => {\r\n                        var $editor = $container.find(\".dx-widget\").first();\r\n                        var isEditorDisposed = $editor.length && !$editor.children().length;\r\n                        if (!isEditorDisposed) {\r\n                            this.getController(\"validating\").createValidator(cellOptions, $editor)\r\n                        }\r\n                    })\r\n                },\r\n                _cellPrepared: function($cell, parameters) {\r\n                    if (!this.getController(\"editing\").isFormOrPopupEditMode()) {\r\n                        this.getController(\"validating\").createValidator(parameters, $cell)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _restoreErrorRow: function(contentTable) {\r\n                    var editingController = this.getController(\"editing\");\r\n                    editingController && editingController.hasChanges() && this._getRowElements(contentTable).each((_, item) => {\r\n                        var rowOptions = $(item).data(\"options\");\r\n                        if (rowOptions) {\r\n                            var change = editingController.getChangeByKey(rowOptions.key);\r\n                            change && editingController._showErrorRow(change)\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.validating.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    validatingModule\r\n} from \"../grid_core/ui.grid_core.validating\";\r\ngridCore.registerModule(\"validating\", validatingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid.core.virtual_data_loader.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isObject,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\nvar needTwoPagesLoading = that => that.option(\"scrolling.loadTwoPagesOnStart\") || that._controller.isVirtual() || that._controller.getViewportItemIndex() > 0;\r\nvar getBeginPageIndex = that => that._cache.length ? that._cache[0].pageIndex : -1;\r\nvar getEndPageIndex = that => that._cache.length ? that._cache[that._cache.length - 1].pageIndex : -1;\r\nvar fireChanged = (that, changed, args) => {\r\n    that._isChangedFiring = true;\r\n    changed(args);\r\n    that._isChangedFiring = false\r\n};\r\nvar processDelayChanged = (that, changed, args) => {\r\n    if (that._isDelayChanged) {\r\n        that._isDelayChanged = false;\r\n        fireChanged(that, changed, args);\r\n        return true\r\n    }\r\n};\r\nvar getViewportPageCount = that => {\r\n    var pageSize = that._dataOptions.pageSize();\r\n    var preventPreload = that.option(\"scrolling.preventPreload\");\r\n    if (preventPreload) {\r\n        return 0\r\n    }\r\n    var realViewportSize = that._controller.viewportSize();\r\n    if (that._controller.isVirtualMode() && that.option(\"scrolling.removeInvisiblePages\")) {\r\n        realViewportSize = 0;\r\n        var viewportSize = that._controller.viewportSize() * that._controller.viewportItemSize();\r\n        var offset = that._controller.getContentOffset();\r\n        var position = that._controller.getViewportPosition();\r\n        var virtualItemsCount = that._controller.virtualItemsCount();\r\n        var totalItemsCount = that._dataOptions.totalItemsCount();\r\n        for (var itemIndex = virtualItemsCount.begin; itemIndex < totalItemsCount; itemIndex++) {\r\n            if (offset >= position + viewportSize) {\r\n                break\r\n            }\r\n            var itemSize = that._controller.getItemSizes()[itemIndex] || that._controller.viewportItemSize();\r\n            offset += itemSize;\r\n            if (offset >= position) {\r\n                realViewportSize++\r\n            }\r\n        }\r\n    }\r\n    return pageSize && realViewportSize > 0 ? Math.ceil(realViewportSize / pageSize) : 1\r\n};\r\nvar getPreloadPageCount = (that, previous) => {\r\n    var preloadEnabled = that.option(\"scrolling.preloadEnabled\");\r\n    var pageCount = getViewportPageCount(that);\r\n    var isAppendMode = that._controller.isAppendMode();\r\n    if (pageCount) {\r\n        if (previous) {\r\n            pageCount = preloadEnabled ? 1 : 0\r\n        } else {\r\n            if (preloadEnabled) {\r\n                pageCount++\r\n            }\r\n            if (isAppendMode || !needTwoPagesLoading(that)) {\r\n                pageCount--\r\n            }\r\n        }\r\n    }\r\n    return pageCount\r\n};\r\nvar getPageIndexForLoad = that => {\r\n    var result = -1;\r\n    var beginPageIndex = getBeginPageIndex(that);\r\n    var dataOptions = that._dataOptions;\r\n    if (beginPageIndex < 0) {\r\n        result = that._pageIndex\r\n    } else if (!that._cache[that._pageIndex - beginPageIndex]) {\r\n        result = that._pageIndex\r\n    } else if (beginPageIndex >= 0 && that._controller.viewportSize() >= 0) {\r\n        if (beginPageIndex > 0) {\r\n            var needToLoadPageBeforeLast = getEndPageIndex(that) + 1 === dataOptions.pageCount() && that._cache.length < getPreloadPageCount(that) + 1;\r\n            var needToLoadPrevPage = needToLoadPageBeforeLast || that._pageIndex === beginPageIndex && getPreloadPageCount(that, true);\r\n            if (needToLoadPrevPage) {\r\n                result = beginPageIndex - 1\r\n            }\r\n        }\r\n        if (result < 0) {\r\n            var needToLoadNextPage = beginPageIndex + that._cache.length <= that._pageIndex + getPreloadPageCount(that);\r\n            if (needToLoadNextPage) {\r\n                result = beginPageIndex + that._cache.length\r\n            }\r\n        }\r\n    }\r\n    if (that._loadingPageIndexes[result]) {\r\n        result = -1\r\n    }\r\n    return result\r\n};\r\nvar loadCore = (that, pageIndex) => {\r\n    var dataOptions = that._dataOptions;\r\n    if (pageIndex === that.pageIndex() || !dataOptions.isLoading() && pageIndex < dataOptions.pageCount() || !dataOptions.hasKnownLastPage() && pageIndex === dataOptions.pageCount()) {\r\n        dataOptions.pageIndex(pageIndex);\r\n        that._loadingPageIndexes[pageIndex] = true;\r\n        return when(dataOptions.load()).always(() => {\r\n            that._loadingPageIndexes[pageIndex] = false\r\n        })\r\n    }\r\n};\r\nvar processChanged = (that, changed, changeType, isDelayChanged, removeCacheItem) => {\r\n    var dataOptions = that._dataOptions;\r\n    var items = dataOptions.items().slice();\r\n    var change = isObject(changeType) ? changeType : void 0;\r\n    var isPrepend = \"prepend\" === changeType;\r\n    var viewportItems = dataOptions.viewportItems();\r\n    if (changeType && isString(changeType) && !that._isDelayChanged) {\r\n        change = {\r\n            changeType: changeType,\r\n            items: items\r\n        };\r\n        if (removeCacheItem) {\r\n            change.removeCount = removeCacheItem.itemsCount;\r\n            if (change.removeCount && dataOptions.correctCount) {\r\n                change.removeCount = dataOptions.correctCount(viewportItems, change.removeCount, isPrepend)\r\n            }\r\n        }\r\n    }\r\n    var removeItemCount = removeCacheItem ? removeCacheItem.itemsLength : 0;\r\n    if (removeItemCount && dataOptions.correctCount) {\r\n        removeItemCount = dataOptions.correctCount(viewportItems, removeItemCount, isPrepend)\r\n    }\r\n    if (\"append\" === changeType) {\r\n        viewportItems.push.apply(viewportItems, items);\r\n        if (removeCacheItem) {\r\n            viewportItems.splice(0, removeItemCount)\r\n        }\r\n    } else if (isPrepend) {\r\n        viewportItems.unshift.apply(viewportItems, items);\r\n        if (removeCacheItem) {\r\n            viewportItems.splice(-removeItemCount)\r\n        }\r\n    } else {\r\n        that._dataOptions.viewportItems(items)\r\n    }\r\n    dataOptions.updateLoading();\r\n    that._lastPageIndex = that.pageIndex();\r\n    that._isDelayChanged = isDelayChanged;\r\n    if (!isDelayChanged) {\r\n        fireChanged(that, changed, change)\r\n    }\r\n};\r\nexport class VirtualDataLoader {\r\n    constructor(controller, dataOptions) {\r\n        this._controller = controller;\r\n        this._dataOptions = dataOptions;\r\n        this._pageIndex = this._lastPageIndex = dataOptions.pageIndex();\r\n        this._cache = [];\r\n        this._loadingPageIndexes = {}\r\n    }\r\n    option() {\r\n        return this._controller.option.apply(this._controller, arguments)\r\n    }\r\n    viewportItemIndexChanged(itemIndex) {\r\n        var pageSize = this._dataOptions.pageSize();\r\n        var pageCount = this._dataOptions.pageCount();\r\n        var virtualMode = this._controller.isVirtualMode();\r\n        var appendMode = this._controller.isAppendMode();\r\n        var totalItemsCount = this._dataOptions.totalItemsCount();\r\n        var newPageIndex;\r\n        if (pageSize && (virtualMode || appendMode) && totalItemsCount >= 0) {\r\n            var viewportSize = this._controller.viewportSize();\r\n            if (viewportSize && itemIndex + viewportSize >= totalItemsCount && !this._controller.isVirtual()) {\r\n                if (this._dataOptions.hasKnownLastPage()) {\r\n                    newPageIndex = pageCount - 1;\r\n                    var lastPageSize = totalItemsCount % pageSize;\r\n                    if (newPageIndex > 0 && lastPageSize > 0 && lastPageSize < viewportSize) {\r\n                        newPageIndex--\r\n                    }\r\n                } else {\r\n                    newPageIndex = pageCount\r\n                }\r\n            } else {\r\n                newPageIndex = Math.floor(itemIndex / pageSize);\r\n                var maxPageIndex = pageCount - 1;\r\n                newPageIndex = Math.max(newPageIndex, 0);\r\n                newPageIndex = Math.min(newPageIndex, maxPageIndex)\r\n            }\r\n            this.pageIndex(newPageIndex);\r\n            return this.load()\r\n        }\r\n    }\r\n    pageIndex(pageIndex) {\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        var isAppendMode = this._controller.isAppendMode();\r\n        if (false !== this.option(LEGACY_SCROLLING_MODE) && (isVirtualMode || isAppendMode)) {\r\n            if (void 0 !== pageIndex) {\r\n                this._pageIndex = pageIndex\r\n            }\r\n            return this._pageIndex\r\n        } else {\r\n            return this._dataOptions.pageIndex(pageIndex)\r\n        }\r\n    }\r\n    beginPageIndex(defaultPageIndex) {\r\n        var beginPageIndex = getBeginPageIndex(this);\r\n        if (beginPageIndex < 0) {\r\n            beginPageIndex = void 0 !== defaultPageIndex ? defaultPageIndex : this.pageIndex()\r\n        }\r\n        return beginPageIndex\r\n    }\r\n    endPageIndex() {\r\n        var endPageIndex = getEndPageIndex(this);\r\n        return endPageIndex > 0 ? endPageIndex : this._lastPageIndex\r\n    }\r\n    pageSize() {\r\n        return this._dataOptions.pageSize()\r\n    }\r\n    load() {\r\n        var dataOptions = this._dataOptions;\r\n        var result;\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        var isAppendMode = this._controller.isAppendMode();\r\n        if (false !== this.option(LEGACY_SCROLLING_MODE) && (isVirtualMode || isAppendMode)) {\r\n            var pageIndexForLoad = getPageIndexForLoad(this);\r\n            if (pageIndexForLoad >= 0) {\r\n                var loadResult = loadCore(this, pageIndexForLoad);\r\n                if (loadResult) {\r\n                    result = new Deferred;\r\n                    loadResult.done(() => {\r\n                        var delayDeferred = this._delayDeferred;\r\n                        if (delayDeferred) {\r\n                            delayDeferred.done(result.resolve).fail(result.reject)\r\n                        } else {\r\n                            result.resolve()\r\n                        }\r\n                    }).fail(result.reject);\r\n                    dataOptions.updateLoading()\r\n                }\r\n            }\r\n        } else {\r\n            result = dataOptions.load()\r\n        }\r\n        if (!result && this._lastPageIndex !== this.pageIndex()) {\r\n            this._dataOptions.onChanged({\r\n                changeType: \"pageIndex\"\r\n            })\r\n        }\r\n        return result || (new Deferred).resolve()\r\n    }\r\n    loadIfNeed() {\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        var isAppendMode = this._controller.isAppendMode();\r\n        if ((isVirtualMode || isAppendMode) && !this._dataOptions.isLoading() && (!this._isChangedFiring || this._controller.isVirtual())) {\r\n            var position = this._controller.getViewportPosition();\r\n            if (position > 0) {\r\n                this._controller._setViewportPositionCore(position)\r\n            } else {\r\n                this.load()\r\n            }\r\n        }\r\n    }\r\n    handleDataChanged(callBase, e) {\r\n        var dataOptions = this._dataOptions;\r\n        var lastCacheLength = this._cache.length;\r\n        var changeType;\r\n        var removeInvisiblePages;\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        var isAppendMode = this._controller.isAppendMode();\r\n        if (e && e.changes) {\r\n            fireChanged(this, callBase, e)\r\n        } else if (false !== this.option(LEGACY_SCROLLING_MODE) && (isVirtualMode || isAppendMode)) {\r\n            var beginPageIndex = getBeginPageIndex(this);\r\n            if (beginPageIndex >= 0) {\r\n                if (isVirtualMode && beginPageIndex + this._cache.length !== dataOptions.pageIndex() && beginPageIndex - 1 !== dataOptions.pageIndex()) {\r\n                    lastCacheLength = 0;\r\n                    this._cache = []\r\n                }\r\n                if (isAppendMode) {\r\n                    if (0 === dataOptions.pageIndex()) {\r\n                        this._cache = []\r\n                    } else if (dataOptions.pageIndex() < getEndPageIndex(this)) {\r\n                        fireChanged(this, callBase, {\r\n                            changeType: \"append\",\r\n                            items: []\r\n                        });\r\n                        return\r\n                    }\r\n                }\r\n            }\r\n            var cacheItem = {\r\n                pageIndex: dataOptions.pageIndex(),\r\n                itemsLength: dataOptions.items(true).length,\r\n                itemsCount: this.itemsCount(true)\r\n            };\r\n            if (this.option(\"scrolling.removeInvisiblePages\") && isVirtualMode) {\r\n                removeInvisiblePages = this._cache.length > Math.max(getPreloadPageCount(this) + (this.option(\"scrolling.preloadEnabled\") ? 1 : 0), 2)\r\n            } else {\r\n                processDelayChanged(this, callBase, {\r\n                    isDelayed: true\r\n                })\r\n            }\r\n            var removeCacheItem;\r\n            if (beginPageIndex === dataOptions.pageIndex() + 1) {\r\n                if (removeInvisiblePages) {\r\n                    removeCacheItem = this._cache.pop()\r\n                }\r\n                changeType = \"prepend\";\r\n                this._cache.unshift(cacheItem)\r\n            } else {\r\n                if (removeInvisiblePages) {\r\n                    removeCacheItem = this._cache.shift()\r\n                }\r\n                changeType = \"append\";\r\n                this._cache.push(cacheItem)\r\n            }\r\n            var isDelayChanged = isVirtualMode && 0 === lastCacheLength && needTwoPagesLoading(this);\r\n            processChanged(this, callBase, this._cache.length > 1 ? changeType : void 0, isDelayChanged, removeCacheItem);\r\n            this._delayDeferred = this.load().done(() => {\r\n                if (processDelayChanged(this, callBase)) {\r\n                    this.load()\r\n                }\r\n            })\r\n        } else {\r\n            processChanged(this, callBase, e)\r\n        }\r\n    }\r\n    getDelayDeferred() {\r\n        return this._delayDeferred\r\n    }\r\n    itemsCount(isBase) {\r\n        var itemsCount = 0;\r\n        var isVirtualMode = this._controller.isVirtualMode();\r\n        if (!isBase && isVirtualMode) {\r\n            this._cache.forEach(cacheItem => {\r\n                itemsCount += cacheItem.itemsCount\r\n            })\r\n        } else {\r\n            itemsCount = this._dataOptions.itemsCount()\r\n        }\r\n        return itemsCount\r\n    }\r\n    virtualItemsCount() {\r\n        var pageIndex = getBeginPageIndex(this);\r\n        if (pageIndex < 0) {\r\n            pageIndex = this._dataOptions.pageIndex()\r\n        }\r\n        var beginItemsCount = pageIndex * this._dataOptions.pageSize();\r\n        var itemsCount = this._cache.length * this._dataOptions.pageSize();\r\n        var endItemsCount = Math.max(0, this._dataOptions.totalItemsCount() - itemsCount - beginItemsCount);\r\n        return {\r\n            begin: beginItemsCount,\r\n            end: endItemsCount\r\n        }\r\n    }\r\n    reset() {\r\n        this._loadingPageIndexes = {};\r\n        this._cache = []\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_scrolling_core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport positionUtils from \"../../animation/position\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    VirtualDataLoader\r\n} from \"./ui.grid.core.virtual_data_loader\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nvar SCROLLING_MODE_INFINITE = \"infinite\";\r\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\nvar _isVirtualMode = that => that.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL || that._isVirtual;\r\nvar _isAppendMode = that => that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE && !that._isVirtual;\r\nexport function subscribeToExternalScrollers($element, scrollChangedHandler, $targetElement) {\r\n    var $scrollElement;\r\n    var scrollableArray = [];\r\n    var scrollToArray = [];\r\n    var disposeArray = [];\r\n    $targetElement = $targetElement || $element;\r\n\r\n    function getElementOffset(scrollable) {\r\n        var $scrollableElement = scrollable.element ? scrollable.$element() : scrollable;\r\n        var scrollableOffset = positionUtils.offset($scrollableElement);\r\n        if (!scrollableOffset) {\r\n            return $element.offset().top\r\n        }\r\n        return scrollable.scrollTop() - (scrollableOffset.top - $element.offset().top)\r\n    }\r\n    var widgetScrollStrategy = {\r\n        on: function(scrollable, eventName, handler) {\r\n            scrollable.on(\"scroll\", handler)\r\n        },\r\n        off: function(scrollable, eventName, handler) {\r\n            scrollable.off(\"scroll\", handler)\r\n        }\r\n    };\r\n\r\n    function subscribeToScrollEvents($scrollElement) {\r\n        var isDocument = \"#document\" === $scrollElement.get(0).nodeName;\r\n        var scrollable = $scrollElement.data(\"dxScrollable\");\r\n        var eventsStrategy = widgetScrollStrategy;\r\n        if (!scrollable) {\r\n            scrollable = isDocument && $(getWindow()) || \"auto\" === $scrollElement.css(\"overflowY\") && $scrollElement;\r\n            eventsStrategy = eventsEngine;\r\n            if (!scrollable) {\r\n                return\r\n            }\r\n        }\r\n        var handler = function(scrollable) {\r\n            return function() {\r\n                var scrollTop = scrollable.scrollTop() - getElementOffset(scrollable);\r\n                scrollTop = scrollTop > 0 ? scrollTop : 0;\r\n                scrollChangedHandler(scrollTop)\r\n            }\r\n        }(scrollable);\r\n        eventsStrategy.on(scrollable, \"scroll\", handler);\r\n        scrollToArray.push((function(pos) {\r\n            var topOffset = getElementOffset(scrollable);\r\n            var scrollMethod = scrollable.scrollTo ? \"scrollTo\" : \"scrollTop\";\r\n            if (pos - topOffset >= 0) {\r\n                scrollable[scrollMethod](pos + topOffset)\r\n            }\r\n        }));\r\n        scrollableArray.push(scrollable);\r\n        disposeArray.push((function() {\r\n            eventsStrategy.off(scrollable, \"scroll\", handler)\r\n        }))\r\n    }\r\n    for ($scrollElement = $targetElement.parent(); $scrollElement.length; $scrollElement = $scrollElement.parent()) {\r\n        subscribeToScrollEvents($scrollElement)\r\n    }\r\n    return {\r\n        scrollTo: function(pos) {\r\n            each(scrollToArray, (function(_, scrollTo) {\r\n                scrollTo(pos)\r\n            }))\r\n        },\r\n        dispose: function() {\r\n            each(disposeArray, (function(_, dispose) {\r\n                dispose()\r\n            }))\r\n        }\r\n    }\r\n}\r\nexport var VirtualScrollController = Class.inherit(function() {\r\n    var members = {\r\n        ctor: function(component, dataOptions, isVirtual) {\r\n            this._dataOptions = dataOptions;\r\n            this.component = component;\r\n            this._viewportSize = false === component.option(LEGACY_SCROLLING_MODE) ? 15 : 0;\r\n            this._viewportItemSize = 20;\r\n            this._viewportItemIndex = 0;\r\n            this._position = 0;\r\n            this._isScrollingBack = false;\r\n            this._contentSize = 0;\r\n            this._itemSizes = {};\r\n            this._sizeRatio = 1;\r\n            this._isVirtual = isVirtual;\r\n            this.positionChanged = Callbacks();\r\n            this._dataLoader = new VirtualDataLoader(this, this._dataOptions)\r\n        },\r\n        getItemSizes: function() {\r\n            return this._itemSizes\r\n        },\r\n        option: function() {\r\n            return this.component.option.apply(this.component, arguments)\r\n        },\r\n        isVirtual: function() {\r\n            return this._isVirtual\r\n        },\r\n        virtualItemsCount: function() {\r\n            if (_isVirtualMode(this)) {\r\n                var dataOptions = this._dataOptions;\r\n                var totalItemsCount = dataOptions.totalItemsCount();\r\n                if (false === this.option(LEGACY_SCROLLING_MODE) && -1 !== totalItemsCount) {\r\n                    var viewportParams = this.getViewportParams();\r\n                    var loadedOffset = dataOptions.loadedOffset();\r\n                    var loadedItemCount = dataOptions.loadedItemCount();\r\n                    var skip = Math.max(viewportParams.skip, loadedOffset);\r\n                    var take = Math.min(viewportParams.take, loadedItemCount);\r\n                    var endItemsCount = Math.max(totalItemsCount - (skip + take), 0);\r\n                    return {\r\n                        begin: skip,\r\n                        end: endItemsCount\r\n                    }\r\n                }\r\n                return this._dataLoader.virtualItemsCount.apply(this._dataLoader, arguments)\r\n            }\r\n        },\r\n        getScrollingTimeout: function() {\r\n            var renderAsync = this.option(\"scrolling.renderAsync\");\r\n            var scrollingTimeout = 0;\r\n            if (!isDefined(renderAsync)) {\r\n                scrollingTimeout = Math.min(this.option(\"scrolling.timeout\") || 0, this._dataOptions.changingDuration());\r\n                if (scrollingTimeout < this.option(\"scrolling.renderingThreshold\")) {\r\n                    scrollingTimeout = this.option(\"scrolling.minTimeout\") || 0\r\n                }\r\n            } else if (renderAsync) {\r\n                var _this$option;\r\n                scrollingTimeout = null !== (_this$option = this.option(\"scrolling.timeout\")) && void 0 !== _this$option ? _this$option : 0\r\n            }\r\n            return scrollingTimeout\r\n        },\r\n        setViewportPosition: function(position) {\r\n            var result = new Deferred;\r\n            var scrollingTimeout = this.getScrollingTimeout();\r\n            clearTimeout(this._scrollTimeoutID);\r\n            if (scrollingTimeout > 0) {\r\n                this._scrollTimeoutID = setTimeout(() => {\r\n                    this._setViewportPositionCore(position);\r\n                    result.resolve()\r\n                }, scrollingTimeout)\r\n            } else {\r\n                this._setViewportPositionCore(position);\r\n                result.resolve()\r\n            }\r\n            return result.promise()\r\n        },\r\n        getViewportPosition: function() {\r\n            return this._position\r\n        },\r\n        getItemIndexByPosition: function(position) {\r\n            var _position;\r\n            position = null !== (_position = position) && void 0 !== _position ? _position : this._position;\r\n            var defaultItemSize = this.getItemSize();\r\n            var offset = 0;\r\n            var itemOffset = 0;\r\n            var itemOffsetsWithSize = Object.keys(this._itemSizes).concat(-1);\r\n            for (var i = 0; i < itemOffsetsWithSize.length && offset < position; i++) {\r\n                var itemOffsetWithSize = parseInt(itemOffsetsWithSize[i]);\r\n                var itemOffsetDiff = (position - offset) / defaultItemSize;\r\n                if (itemOffsetWithSize < 0 || itemOffset + itemOffsetDiff < itemOffsetWithSize) {\r\n                    itemOffset += itemOffsetDiff;\r\n                    break\r\n                } else {\r\n                    itemOffsetDiff = itemOffsetWithSize - itemOffset;\r\n                    offset += itemOffsetDiff * defaultItemSize;\r\n                    itemOffset += itemOffsetDiff\r\n                }\r\n                var itemSize = this._itemSizes[itemOffsetWithSize];\r\n                offset += itemSize;\r\n                itemOffset += offset < position ? 1 : (position - offset + itemSize) / itemSize\r\n            }\r\n            return Math.round(50 * itemOffset) / 50\r\n        },\r\n        isScrollingBack: function() {\r\n            return this._isScrollingBack\r\n        },\r\n        _setViewportPositionCore: function(position) {\r\n            var prevPosition = this._position || 0;\r\n            this._position = position;\r\n            if (prevPosition !== this._position) {\r\n                this._isScrollingBack = this._position < prevPosition\r\n            }\r\n            var itemIndex = this.getItemIndexByPosition();\r\n            var result = this.setViewportItemIndex(itemIndex);\r\n            this.positionChanged.fire();\r\n            return result\r\n        },\r\n        setContentItemSizes: function(sizes) {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            this._contentSize = sizes.reduce((a, b) => a + b, 0);\r\n            if (virtualItemsCount) {\r\n                sizes.forEach((size, index) => {\r\n                    this._itemSizes[virtualItemsCount.begin + index] = size\r\n                });\r\n                var virtualContentSize = (virtualItemsCount.begin + virtualItemsCount.end + this.itemsCount()) * this._viewportItemSize;\r\n                var contentHeightLimit = gridCoreUtils.getContentHeightLimit(browser);\r\n                if (virtualContentSize > contentHeightLimit) {\r\n                    this._sizeRatio = contentHeightLimit / virtualContentSize\r\n                } else {\r\n                    this._sizeRatio = 1\r\n                }\r\n            }\r\n        },\r\n        getItemSize: function() {\r\n            return this._viewportItemSize * this._sizeRatio\r\n        },\r\n        getItemOffset: function(itemIndex, isEnd) {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            var itemCount = itemIndex;\r\n            if (!virtualItemsCount) {\r\n                return 0\r\n            }\r\n            var offset = 0;\r\n            var totalItemsCount = this._dataOptions.totalItemsCount();\r\n            Object.keys(this._itemSizes).forEach(currentItemIndex => {\r\n                if (!itemCount) {\r\n                    return\r\n                }\r\n                if (isEnd ? currentItemIndex >= totalItemsCount - itemIndex : currentItemIndex < itemIndex) {\r\n                    offset += this._itemSizes[currentItemIndex];\r\n                    itemCount--\r\n                }\r\n            });\r\n            return Math.floor(offset + itemCount * this._viewportItemSize * this._sizeRatio)\r\n        },\r\n        getContentOffset: function(type) {\r\n            var isEnd = \"end\" === type;\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            if (!virtualItemsCount) {\r\n                return 0\r\n            }\r\n            return this.getItemOffset(isEnd ? virtualItemsCount.end : virtualItemsCount.begin, isEnd)\r\n        },\r\n        getVirtualContentSize: function() {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            return virtualItemsCount ? this.getContentOffset(\"begin\") + this.getContentOffset(\"end\") + this._contentSize : 0\r\n        },\r\n        getViewportItemIndex: function() {\r\n            return this._viewportItemIndex\r\n        },\r\n        setViewportItemIndex: function(itemIndex) {\r\n            this._viewportItemIndex = itemIndex;\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                return\r\n            }\r\n            return this._dataLoader.viewportItemIndexChanged.apply(this._dataLoader, arguments)\r\n        },\r\n        viewportItemSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._viewportItemSize = size\r\n            }\r\n            return this._viewportItemSize\r\n        },\r\n        viewportSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._viewportSize = size\r\n            }\r\n            return this._viewportSize\r\n        },\r\n        viewportHeight: function(height) {\r\n            var begin = this.getItemIndexByPosition();\r\n            var end = this.getItemIndexByPosition(this._position + height);\r\n            this.viewportSize(Math.ceil(end - begin));\r\n            if (this._viewportItemIndex !== begin) {\r\n                this._setViewportPositionCore(this._position)\r\n            }\r\n        },\r\n        reset: function(isRefresh) {\r\n            this._dataLoader.reset();\r\n            if (!isRefresh) {\r\n                this._itemSizes = {}\r\n            }\r\n        },\r\n        subscribeToWindowScrollEvents: function($element) {\r\n            this._windowScroll = this._windowScroll || subscribeToExternalScrollers($element, scrollTop => {\r\n                if (this.viewportItemSize()) {\r\n                    this.setViewportPosition(scrollTop)\r\n                }\r\n            })\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._scrollTimeoutID);\r\n            this._windowScroll && this._windowScroll.dispose();\r\n            this._windowScroll = null\r\n        },\r\n        scrollTo: function(pos) {\r\n            this._windowScroll && this._windowScroll.scrollTo(pos)\r\n        },\r\n        isVirtualMode: function() {\r\n            return _isVirtualMode(this)\r\n        },\r\n        isAppendMode: function() {\r\n            return _isAppendMode(this)\r\n        },\r\n        getViewportParams: function() {\r\n            var _this$option2;\r\n            var virtualMode = this.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL;\r\n            var totalItemsCount = this._dataOptions.totalItemsCount();\r\n            var topIndex = this._viewportItemIndex;\r\n            var bottomIndex = this._viewportSize + topIndex;\r\n            var maxGap = this.option(\"scrolling.prerenderedRowChunkSize\") || 1;\r\n            var isScrollingBack = this.isScrollingBack();\r\n            var minGap = null !== (_this$option2 = this.option(\"scrolling.prerenderedRowCount\")) && void 0 !== _this$option2 ? _this$option2 : 1;\r\n            var topMinGap = isScrollingBack ? minGap : 0;\r\n            var bottomMinGap = isScrollingBack ? 0 : minGap;\r\n            var skip = Math.floor(Math.max(0, topIndex - topMinGap) / maxGap) * maxGap;\r\n            var take = Math.ceil((bottomIndex + bottomMinGap - skip) / maxGap) * maxGap;\r\n            if (virtualMode) {\r\n                var remainedItems = Math.max(0, totalItemsCount - skip);\r\n                take = Math.min(take, remainedItems)\r\n            }\r\n            return {\r\n                skip: skip,\r\n                take: take\r\n            }\r\n        },\r\n        itemsCount: function() {\r\n            var result = 0;\r\n            if (this.option(LEGACY_SCROLLING_MODE)) {\r\n                result = this._dataLoader.itemsCount.apply(this._dataLoader, arguments)\r\n            } else {\r\n                result = this._dataOptions.itemsCount()\r\n            }\r\n            return result\r\n        }\r\n    };\r\n    [\"pageIndex\", \"beginPageIndex\", \"endPageIndex\", \"pageSize\", \"load\", \"loadIfNeed\", \"handleDataChanged\", \"getDelayDeferred\"].forEach((function(name) {\r\n        members[name] = function() {\r\n            return this._dataLoader[name].apply(this._dataLoader, arguments)\r\n        }\r\n    }));\r\n    return members\r\n}());\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_scrolling.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    VirtualScrollController,\r\n    subscribeToExternalScrollers\r\n} from \"./ui.grid_core.virtual_scrolling_core\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport LoadIndicator from \"../load_indicator\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nvar BOTTOM_LOAD_PANEL_CLASS = \"bottom-load-panel\";\r\nvar TABLE_CONTENT_CLASS = \"table-content\";\r\nvar GROUP_SPACE_CLASS = \"group-space\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar FREESPACE_CLASS = \"dx-freespace-row\";\r\nvar COLUMN_LINES_CLASS = \"dx-column-lines\";\r\nvar VIRTUAL_ROW_CLASS = \"dx-virtual-row\";\r\nvar SCROLLING_MODE_INFINITE = \"infinite\";\r\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\r\nvar LOAD_TIMEOUT = 300;\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\nvar VISIBLE_PAGE_INDEX = \"paging.pageIndex\";\r\nvar isVirtualMode = function(that) {\r\n    return that.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL\r\n};\r\nvar isAppendMode = function(that) {\r\n    return that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE\r\n};\r\nvar isVirtualPaging = function(that) {\r\n    return isVirtualMode(that) || isAppendMode(that)\r\n};\r\nvar _correctCount = function(items, count, fromEnd, isItemCountableFunc) {\r\n    for (var i = 0; i < count + 1; i++) {\r\n        var item = items[fromEnd ? items.length - 1 - i : i];\r\n        if (item && !isItemCountableFunc(item, i === count, fromEnd)) {\r\n            count++\r\n        }\r\n    }\r\n    return count\r\n};\r\nvar isItemCountableByDataSource = function(item, dataSource) {\r\n    return \"data\" === item.rowType && !item.isNewRow || \"group\" === item.rowType && dataSource.isGroupItemCountable(item.data)\r\n};\r\nvar updateItemIndices = function(items) {\r\n    items.forEach((function(item, index) {\r\n        item.rowIndex = index\r\n    }));\r\n    return items\r\n};\r\nvar VirtualScrollingDataSourceAdapterExtender = function() {\r\n    var _updateLoading = function(that) {\r\n        var beginPageIndex = that._virtualScrollController.beginPageIndex(-1);\r\n        if (isVirtualMode(that)) {\r\n            if (beginPageIndex < 0 || that.viewportSize() >= 0 && that.getViewportItemIndex() >= 0 && (beginPageIndex * that.pageSize() > that.getViewportItemIndex() || beginPageIndex * that.pageSize() + that.itemsCount() < that.getViewportItemIndex() + that.viewportSize()) && that._dataSource.isLoading()) {\r\n                if (!that._isLoading) {\r\n                    that._isLoading = true;\r\n                    that.loadingChanged.fire(true)\r\n                }\r\n            } else if (that._isLoading) {\r\n                that._isLoading = false;\r\n                that.loadingChanged.fire(false)\r\n            }\r\n        }\r\n    };\r\n    var result = {\r\n        init: function() {\r\n            this.callBase.apply(this, arguments);\r\n            this._items = [];\r\n            this._isLoaded = true;\r\n            this._loadPageCount = 1;\r\n            this._virtualScrollController = new VirtualScrollController(this.component, this._getVirtualScrollDataOptions())\r\n        },\r\n        _getVirtualScrollDataOptions: function() {\r\n            var that = this;\r\n            return {\r\n                pageSize: function() {\r\n                    return that.pageSize()\r\n                },\r\n                totalItemsCount: function() {\r\n                    return that.totalItemsCount()\r\n                },\r\n                hasKnownLastPage: function() {\r\n                    return that.hasKnownLastPage()\r\n                },\r\n                pageIndex: function(index) {\r\n                    return that._dataSource.pageIndex(index)\r\n                },\r\n                isLoading: function() {\r\n                    return that._dataSource.isLoading() && !that.isCustomLoading()\r\n                },\r\n                pageCount: function() {\r\n                    return that.pageCount()\r\n                },\r\n                load: function() {\r\n                    return that._dataSource.load()\r\n                },\r\n                updateLoading: function() {\r\n                    _updateLoading(that)\r\n                },\r\n                itemsCount: function() {\r\n                    return that.itemsCount(true)\r\n                },\r\n                items: function() {\r\n                    return that._dataSource.items()\r\n                },\r\n                viewportItems: function(items) {\r\n                    if (items) {\r\n                        that._items = items\r\n                    }\r\n                    return that._items\r\n                },\r\n                onChanged: function(e) {\r\n                    that.changed.fire(e)\r\n                },\r\n                changingDuration: function(e) {\r\n                    if (that.isLoading()) {\r\n                        return LOAD_TIMEOUT\r\n                    }\r\n                    return that._renderTime || 0\r\n                }\r\n            }\r\n        },\r\n        _handleLoadingChanged: function(isLoading) {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                this.callBase.apply(this, arguments);\r\n                return\r\n            }\r\n            if (!isVirtualMode(this) || this._isLoadingAll) {\r\n                this._isLoading = isLoading;\r\n                this.callBase.apply(this, arguments)\r\n            }\r\n            if (isLoading) {\r\n                this._startLoadTime = new Date\r\n            } else {\r\n                this._startLoadTime = void 0\r\n            }\r\n        },\r\n        _handleLoadError: function() {\r\n            if (false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                this._isLoading = false;\r\n                this.loadingChanged.fire(false)\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _handleDataChanged: function(e) {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                this._items = this._dataSource.items().slice();\r\n                this.callBase.apply(this, arguments);\r\n                return\r\n            }\r\n            var callBase = this.callBase.bind(this);\r\n            this._virtualScrollController.handleDataChanged(callBase, e)\r\n        },\r\n        _customizeRemoteOperations: function(options, operationTypes) {\r\n            var newMode = false === this.option(LEGACY_SCROLLING_MODE);\r\n            var renderAsync = this.option(\"scrolling.renderAsync\");\r\n            if (!isDefined(renderAsync)) {\r\n                renderAsync = this._renderTime >= this.option(\"scrolling.renderingThreshold\")\r\n            }\r\n            if ((isVirtualMode(this) || isAppendMode(this) && newMode) && !operationTypes.reload && (operationTypes.skip || newMode) && !renderAsync) {\r\n                options.delay = void 0\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        items: function() {\r\n            return this._items\r\n        },\r\n        itemsCount: function(isBase) {\r\n            if (isBase || false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                return this.callBase()\r\n            }\r\n            return this._virtualScrollController.itemsCount()\r\n        },\r\n        load: function(loadOptions) {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE) || loadOptions) {\r\n                return this.callBase(loadOptions)\r\n            }\r\n            return this._virtualScrollController.load()\r\n        },\r\n        isLoading: function() {\r\n            return false === this.option(LEGACY_SCROLLING_MODE) ? this._dataSource.isLoading() : this._isLoading\r\n        },\r\n        isLoaded: function() {\r\n            return this._dataSource.isLoaded() && this._isLoaded\r\n        },\r\n        resetPagesCache: function(isLiveUpdate) {\r\n            if (!isLiveUpdate) {\r\n                this._virtualScrollController.reset(true)\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _changeRowExpandCore: function() {\r\n            var result = this.callBase.apply(this, arguments);\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                return result\r\n            }\r\n            this.resetPagesCache();\r\n            _updateLoading(this);\r\n            return result\r\n        },\r\n        reload: function() {\r\n            this._dataSource.pageIndex(this.pageIndex());\r\n            var virtualScrollController = this._virtualScrollController;\r\n            if (false !== this.option(LEGACY_SCROLLING_MODE) && virtualScrollController) {\r\n                var d = new Deferred;\r\n                this.callBase.apply(this, arguments).done((function(r) {\r\n                    var delayDeferred = virtualScrollController.getDelayDeferred();\r\n                    if (delayDeferred) {\r\n                        delayDeferred.done(d.resolve).fail(d.reject)\r\n                    } else {\r\n                        d.resolve(r)\r\n                    }\r\n                })).fail(d.reject);\r\n                return d\r\n            } else {\r\n                return this.callBase.apply(this, arguments)\r\n            }\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            if (false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                var storeLoadOptions = options.storeLoadOptions;\r\n                var dataSource = this._dataSource;\r\n                if (operationTypes.reload) {\r\n                    this._virtualScrollController.reset();\r\n                    dataSource.items().length = 0;\r\n                    this._isLoaded = false;\r\n                    _updateLoading(this);\r\n                    this._isLoaded = true;\r\n                    if (isAppendMode(this)) {\r\n                        this.pageIndex(0);\r\n                        dataSource.pageIndex(0);\r\n                        storeLoadOptions.pageIndex = 0;\r\n                        options.pageIndex = 0;\r\n                        storeLoadOptions.skip = 0\r\n                    } else {\r\n                        dataSource.pageIndex(this.pageIndex());\r\n                        if (dataSource.paginate()) {\r\n                            options.pageIndex = this.pageIndex();\r\n                            storeLoadOptions.skip = this.pageIndex() * this.pageSize()\r\n                        }\r\n                    }\r\n                } else if (isAppendMode(this) && storeLoadOptions.skip && this._totalCountCorrection < 0) {\r\n                    storeLoadOptions.skip += this._totalCountCorrection\r\n                }\r\n            }\r\n            return this.callBase.apply(this, arguments)\r\n        },\r\n        dispose: function() {\r\n            this._virtualScrollController.dispose();\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        loadPageCount: function(count) {\r\n            if (!isDefined(count)) {\r\n                return this._loadPageCount\r\n            }\r\n            this._loadPageCount = count\r\n        },\r\n        _handleDataLoading: function(options) {\r\n            var loadPageCount = this.loadPageCount();\r\n            var pageSize = this.pageSize();\r\n            var newMode = false === this.option(LEGACY_SCROLLING_MODE);\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var takeIsDefined = isDefined(storeLoadOptions.take);\r\n            options.loadPageCount = loadPageCount;\r\n            if (!options.isCustomLoading && newMode && takeIsDefined && loadPageCount > 1 && pageSize > 0) {\r\n                storeLoadOptions.take = loadPageCount * pageSize\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _loadPageSize: function() {\r\n            return this.callBase.apply(this, arguments) * this.loadPageCount()\r\n        }\r\n    };\r\n    [\"beginPageIndex\", \"endPageIndex\", \"pageIndex\"].forEach((function(name) {\r\n        result[name] = function() {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                var dataSource = this._dataSource;\r\n                return dataSource.pageIndex.apply(dataSource, arguments)\r\n            }\r\n            var virtualScrollController = this._virtualScrollController;\r\n            return virtualScrollController[name].apply(virtualScrollController, arguments)\r\n        }\r\n    }));\r\n    [\"virtualItemsCount\", \"getContentOffset\", \"getVirtualContentSize\", \"setContentItemSizes\", \"setViewportPosition\", \"getViewportItemIndex\", \"setViewportItemIndex\", \"getItemIndexByPosition\", \"viewportSize\", \"viewportItemSize\", \"getItemSize\", \"getItemSizes\", \"loadIfNeed\"].forEach((function(name) {\r\n        result[name] = function() {\r\n            var virtualScrollController = this._virtualScrollController;\r\n            return virtualScrollController[name].apply(virtualScrollController, arguments)\r\n        }\r\n    }));\r\n    return result\r\n}();\r\nvar VirtualScrollingRowsViewExtender = function() {\r\n    var removeEmptyRows = function($emptyRows, className) {\r\n        var tBodies = $emptyRows.toArray().map(row => $(row).parent(\".\" + className).get(0)).filter(row => row);\r\n        if (tBodies.length) {\r\n            $emptyRows = $(tBodies)\r\n        }\r\n        var rowCount = className === FREESPACE_CLASS ? $emptyRows.length - 1 : $emptyRows.length;\r\n        for (var i = 0; i < rowCount; i++) {\r\n            $emptyRows.eq(i).remove()\r\n        }\r\n    };\r\n    return {\r\n        init: function() {\r\n            var _dataController$state;\r\n            var dataController = this.getController(\"data\");\r\n            this.callBase();\r\n            dataController.pageChanged.add(pageIndex => {\r\n                this.scrollToPage(null !== pageIndex && void 0 !== pageIndex ? pageIndex : dataController.pageIndex())\r\n            });\r\n            dataController.dataSourceChanged.add(() => {\r\n                !this._scrollTop && this._scrollToCurrentPageOnResize()\r\n            });\r\n            null === (_dataController$state = dataController.stateLoaded) || void 0 === _dataController$state ? void 0 : _dataController$state.add(() => {\r\n                this._scrollToCurrentPageOnResize()\r\n            });\r\n            this._scrollToCurrentPageOnResize()\r\n        },\r\n        _scrollToCurrentPageOnResize: function() {\r\n            var dataController = this.getController(\"data\");\r\n            if (dataController.pageIndex() > 0) {\r\n                var resizeHandler = () => {\r\n                    this.resizeCompleted.remove(resizeHandler);\r\n                    this.scrollToPage(dataController.pageIndex())\r\n                };\r\n                this.resizeCompleted.add(resizeHandler)\r\n            }\r\n        },\r\n        scrollToPage: function(pageIndex) {\r\n            var dataController = this._dataController;\r\n            var pageSize = dataController ? dataController.pageSize() : 0;\r\n            var scrollPosition;\r\n            if (isVirtualMode(this) || isAppendMode(this)) {\r\n                var itemSize = dataController.getItemSize();\r\n                var itemSizes = dataController.getItemSizes();\r\n                var itemIndex = pageIndex * pageSize;\r\n                scrollPosition = itemIndex * itemSize;\r\n                for (var index in itemSizes) {\r\n                    if (index < itemIndex) {\r\n                        scrollPosition += itemSizes[index] - itemSize\r\n                    }\r\n                }\r\n            } else {\r\n                scrollPosition = 0\r\n            }\r\n            this.scrollTo({\r\n                y: scrollPosition,\r\n                x: this._scrollLeft\r\n            })\r\n        },\r\n        renderDelayedTemplates: function(e) {\r\n            this._updateContentPosition(true);\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _renderCore: function(e) {\r\n            var startRenderTime = new Date;\r\n            this.callBase.apply(this, arguments);\r\n            var dataSource = this._dataController._dataSource;\r\n            if (dataSource && e) {\r\n                var itemCount = e.items ? e.items.length : 20;\r\n                var viewportSize = this._dataController.viewportSize() || 20;\r\n                if (gridCoreUtils.isVirtualRowRendering(this) && itemCount > 0 && false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                    dataSource._renderTime = (new Date - startRenderTime) * viewportSize / itemCount\r\n                } else {\r\n                    dataSource._renderTime = new Date - startRenderTime\r\n                }\r\n            }\r\n        },\r\n        _getRowElements: function(tableElement) {\r\n            var $rows = this.callBase(tableElement);\r\n            return $rows && $rows.not(\".\" + VIRTUAL_ROW_CLASS)\r\n        },\r\n        _removeRowsElements: function(contentTable, removeCount, changeType) {\r\n            var rowElements = this._getRowElements(contentTable).toArray();\r\n            if (\"append\" === changeType) {\r\n                rowElements = rowElements.slice(0, removeCount)\r\n            } else {\r\n                rowElements = rowElements.slice(-removeCount)\r\n            }\r\n            var errorHandlingController = this.getController(\"errorHandling\");\r\n            rowElements.map(rowElement => {\r\n                var $rowElement = $(rowElement);\r\n                errorHandlingController && errorHandlingController.removeErrorRow($rowElement.next());\r\n                $rowElement.remove()\r\n            })\r\n        },\r\n        _updateContent: function(tableElement, change) {\r\n            var $freeSpaceRowElements;\r\n            var contentElement = this._findContentElement();\r\n            var changeType = change && change.changeType;\r\n            var contentTable = contentElement.children().first();\r\n            if (\"append\" === changeType || \"prepend\" === changeType) {\r\n                var $tBodies = this._getBodies(tableElement);\r\n                if (1 === $tBodies.length) {\r\n                    this._getBodies(contentTable)[\"append\" === changeType ? \"append\" : \"prepend\"]($tBodies.children())\r\n                } else {\r\n                    $tBodies[\"append\" === changeType ? \"appendTo\" : \"prependTo\"](contentTable)\r\n                }\r\n                tableElement.remove();\r\n                $freeSpaceRowElements = this._getFreeSpaceRowElements(contentTable);\r\n                removeEmptyRows($freeSpaceRowElements, FREESPACE_CLASS);\r\n                if (change.removeCount) {\r\n                    this._removeRowsElements(contentTable, change.removeCount, changeType)\r\n                }\r\n                this._restoreErrorRow(contentTable)\r\n            } else {\r\n                this.callBase.apply(this, arguments);\r\n                if (\"update\" === changeType) {\r\n                    this._restoreErrorRow(contentTable)\r\n                }\r\n            }\r\n            this._updateBottomLoading()\r\n        },\r\n        _addVirtualRow: function($table, isFixed, location, position) {\r\n            if (!position) {\r\n                return\r\n            }\r\n            var $virtualRow = this._createEmptyRow(VIRTUAL_ROW_CLASS, isFixed, position);\r\n            $virtualRow = this._wrapRowIfNeed($table, $virtualRow);\r\n            this._appendEmptyRow($table, $virtualRow, location)\r\n        },\r\n        _getRowHeights: function() {\r\n            var rowHeights = this._getRowElements(this._tableElement).toArray().map((function(row) {\r\n                return getBoundingRect(row).height\r\n            }));\r\n            return rowHeights\r\n        },\r\n        _correctRowHeights: function(rowHeights) {\r\n            var dataController = this._dataController;\r\n            var dataSource = dataController._dataSource;\r\n            var correctedRowHeights = [];\r\n            var visibleRows = dataController.getVisibleRows();\r\n            var itemSize = 0;\r\n            var firstCountableItem = true;\r\n            var lastLoadIndex = -1;\r\n            for (var i = 0; i < rowHeights.length; i++) {\r\n                var currentItem = visibleRows[i];\r\n                if (!isDefined(currentItem)) {\r\n                    continue\r\n                }\r\n                if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                    if (lastLoadIndex >= 0 && lastLoadIndex !== currentItem.loadIndex) {\r\n                        correctedRowHeights.push(itemSize);\r\n                        itemSize = 0\r\n                    }\r\n                    lastLoadIndex = currentItem.loadIndex\r\n                } else if (isItemCountableByDataSource(currentItem, dataSource)) {\r\n                    if (firstCountableItem) {\r\n                        firstCountableItem = false\r\n                    } else {\r\n                        correctedRowHeights.push(itemSize);\r\n                        itemSize = 0\r\n                    }\r\n                }\r\n                itemSize += rowHeights[i]\r\n            }\r\n            itemSize > 0 && correctedRowHeights.push(itemSize);\r\n            return correctedRowHeights\r\n        },\r\n        _updateContentPosition: function(isRender) {\r\n            var dataController = this._dataController;\r\n            var rowHeight = this._rowHeight || 20;\r\n            dataController.viewportItemSize(rowHeight);\r\n            if (isVirtualMode(this) || gridCoreUtils.isVirtualRowRendering(this)) {\r\n                if (!isRender) {\r\n                    var rowHeights = this._getRowHeights();\r\n                    var correctedRowHeights = this._correctRowHeights(rowHeights);\r\n                    dataController.setContentItemSizes(correctedRowHeights)\r\n                }\r\n                var top = dataController.getContentOffset(\"begin\");\r\n                var bottom = dataController.getContentOffset(\"end\");\r\n                var $tables = this.getTableElements();\r\n                var $virtualRows = $tables.children(\"tbody\").children(\".\" + VIRTUAL_ROW_CLASS);\r\n                removeEmptyRows($virtualRows, VIRTUAL_ROW_CLASS);\r\n                $tables.each((index, element) => {\r\n                    var isFixed = index > 0;\r\n                    this._isFixedTableRendering = isFixed;\r\n                    this._addVirtualRow($(element), isFixed, \"top\", top);\r\n                    this._addVirtualRow($(element), isFixed, \"bottom\", bottom);\r\n                    this._isFixedTableRendering = false\r\n                })\r\n            }\r\n        },\r\n        _isTableLinesDisplaysCorrect: function(table) {\r\n            var hasColumnLines = table.find(\".\" + COLUMN_LINES_CLASS).length > 0;\r\n            return hasColumnLines === this.option(\"showColumnLines\")\r\n        },\r\n        _isColumnElementsEqual: function($columns, $virtualColumns) {\r\n            var result = $columns.length === $virtualColumns.length;\r\n            if (result) {\r\n                each($columns, (function(index, element) {\r\n                    if (element.style.width !== $virtualColumns[index].style.width) {\r\n                        result = false;\r\n                        return result\r\n                    }\r\n                }))\r\n            }\r\n            return result\r\n        },\r\n        _getCellClasses: function(column) {\r\n            var classes = [];\r\n            var cssClass = column.cssClass;\r\n            var isExpandColumn = \"expand\" === column.command;\r\n            cssClass && classes.push(cssClass);\r\n            isExpandColumn && classes.push(this.addWidgetPrefix(GROUP_SPACE_CLASS));\r\n            return classes\r\n        },\r\n        _findBottomLoadPanel: function($contentElement) {\r\n            var $element = $contentElement || this.element();\r\n            var $bottomLoadPanel = $element && $element.find(\".\" + this.addWidgetPrefix(BOTTOM_LOAD_PANEL_CLASS));\r\n            if ($bottomLoadPanel && $bottomLoadPanel.length) {\r\n                return $bottomLoadPanel\r\n            }\r\n        },\r\n        _updateBottomLoading: function() {\r\n            var virtualMode = isVirtualMode(this);\r\n            var appendMode = isAppendMode(this);\r\n            var showBottomLoading = !this._dataController.hasKnownLastPage() && this._dataController.isLoaded() && (virtualMode || appendMode);\r\n            var $contentElement = this._findContentElement();\r\n            var bottomLoadPanelElement = this._findBottomLoadPanel($contentElement);\r\n            if (showBottomLoading) {\r\n                if (!bottomLoadPanelElement) {\r\n                    $(\"<div>\").addClass(this.addWidgetPrefix(BOTTOM_LOAD_PANEL_CLASS)).append(this._createComponent($(\"<div>\"), LoadIndicator).$element()).appendTo($contentElement)\r\n                }\r\n            } else if (bottomLoadPanelElement) {\r\n                bottomLoadPanelElement.remove()\r\n            }\r\n        },\r\n        _handleScroll: function(e) {\r\n            var legacyScrollingMode = true === this.option(LEGACY_SCROLLING_MODE);\r\n            var zeroTopPosition = 0 === e.scrollOffset.top;\r\n            if ((this._hasHeight || !legacyScrollingMode && zeroTopPosition) && this._rowHeight) {\r\n                this._dataController.setViewportPosition(e.scrollOffset.top)\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _needUpdateRowHeight: function(itemsCount) {\r\n            return this.callBase.apply(this, arguments) || itemsCount > 0 && isAppendMode(this) && !gridCoreUtils.isVirtualRowRendering(this)\r\n        },\r\n        _updateRowHeight: function() {\r\n            this.callBase.apply(this, arguments);\r\n            if (this._rowHeight) {\r\n                this._updateContentPosition();\r\n                var viewportHeight = this._hasHeight ? getOuterHeight(this.element()) : getOuterHeight(getWindow());\r\n                var dataController = this._dataController;\r\n                if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                    dataController.viewportHeight(viewportHeight);\r\n                    dataController.updateViewport()\r\n                } else {\r\n                    dataController.viewportSize(Math.ceil(viewportHeight / this._rowHeight))\r\n                }\r\n            }\r\n        },\r\n        updateFreeSpaceRowHeight: function() {\r\n            var result = this.callBase.apply(this, arguments);\r\n            if (result) {\r\n                this._updateContentPosition()\r\n            }\r\n            return result\r\n        },\r\n        setLoading: function(isLoading, messageText) {\r\n            var dataController = this._dataController;\r\n            var hasBottomLoadPanel = dataController.pageIndex() > 0 && dataController.isLoaded() && !!this._findBottomLoadPanel();\r\n            if (false === this.option(LEGACY_SCROLLING_MODE) && isLoading && dataController.isViewportChanging()) {\r\n                return\r\n            }\r\n            if (hasBottomLoadPanel) {\r\n                isLoading = false\r\n            }\r\n            this.callBase.call(this, isLoading, messageText)\r\n        },\r\n        _resizeCore: function() {\r\n            var that = this;\r\n            var $element = that.element();\r\n            that.callBase();\r\n            if (that.component.$element() && !that._windowScroll && $element.closest(getWindow().document).length) {\r\n                that._windowScroll = subscribeToExternalScrollers($element, (function(scrollPos) {\r\n                    if (!that._hasHeight && that._rowHeight) {\r\n                        that._dataController.setViewportPosition(scrollPos)\r\n                    }\r\n                }), that.component.$element());\r\n                that.on(\"disposing\", (function() {\r\n                    that._windowScroll.dispose()\r\n                }))\r\n            }\r\n            if (false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                that.loadIfNeed()\r\n            }\r\n        },\r\n        loadIfNeed: function() {\r\n            var _dataController$loadI;\r\n            var dataController = this._dataController;\r\n            null === dataController || void 0 === dataController ? void 0 : null === (_dataController$loadI = dataController.loadIfNeed) || void 0 === _dataController$loadI ? void 0 : _dataController$loadI.call(dataController)\r\n        },\r\n        setColumnWidths: function(widths) {\r\n            var scrollable = this.getScrollable();\r\n            var $content;\r\n            this.callBase.apply(this, arguments);\r\n            if (\"virtual\" === this.option(\"scrolling.mode\")) {\r\n                $content = scrollable ? $(scrollable.content()) : this.element();\r\n                this.callBase(widths, $content.children(\".\" + this.addWidgetPrefix(CONTENT_CLASS)).children(\":not(.\" + this.addWidgetPrefix(TABLE_CONTENT_CLASS) + \")\"))\r\n            }\r\n        },\r\n        _restoreErrorRow: function() {\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                var errorHandling = this.getController(\"errorHandling\");\r\n                null === errorHandling || void 0 === errorHandling ? void 0 : errorHandling.removeErrorRow()\r\n            }\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._scrollTimeoutID);\r\n            this.callBase()\r\n        }\r\n    }\r\n}();\r\nexport var virtualScrollingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            scrolling: {\r\n                timeout: 300,\r\n                updateTimeout: 300,\r\n                minTimeout: 0,\r\n                renderingThreshold: 100,\r\n                removeInvisiblePages: true,\r\n                rowPageSize: 5,\r\n                prerenderedRowChunkSize: 1,\r\n                mode: \"standard\",\r\n                preloadEnabled: false,\r\n                rowRenderingMode: \"standard\",\r\n                loadTwoPagesOnStart: false,\r\n                legacyMode: false,\r\n                prerenderedRowCount: 1\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        dataSourceAdapter: VirtualScrollingDataSourceAdapterExtender,\r\n        controllers: {\r\n            data: function() {\r\n                var members = {\r\n                    _refreshDataSource: function() {\r\n                        var baseResult = this.callBase.apply(this, arguments) || (new Deferred).resolve().promise();\r\n                        baseResult.done(this.initVirtualRows.bind(this));\r\n                        return baseResult\r\n                    },\r\n                    _loadDataSource: function() {\r\n                        if (this._rowsScrollController) {\r\n                            var _this$getLoadPagePara, _this$_dataSource;\r\n                            var {\r\n                                loadPageCount: loadPageCount\r\n                            } = null !== (_this$getLoadPagePara = this.getLoadPageParams()) && void 0 !== _this$getLoadPagePara ? _this$getLoadPagePara : {};\r\n                            loadPageCount >= 1 && (null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.loadPageCount(loadPageCount))\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    getRowPageSize: function() {\r\n                        var rowPageSize = this.option(\"scrolling.rowPageSize\");\r\n                        var pageSize = this.pageSize();\r\n                        return pageSize && pageSize < rowPageSize ? pageSize : rowPageSize\r\n                    },\r\n                    reload: function() {\r\n                        var rowsScrollController = this._rowsScrollController || this._dataSource;\r\n                        var itemIndex = rowsScrollController && rowsScrollController.getItemIndexByPosition();\r\n                        var result = this.callBase.apply(this, arguments);\r\n                        return result && result.done(() => {\r\n                            if (isVirtualMode(this) || gridCoreUtils.isVirtualRowRendering(this)) {\r\n                                var rowIndexOffset = this.getRowIndexOffset();\r\n                                var rowIndex = Math.floor(itemIndex) - rowIndexOffset;\r\n                                var component = this.component;\r\n                                var scrollable = component.getScrollable && component.getScrollable();\r\n                                var isSortingOperation = this.dataSource().operationTypes().sorting;\r\n                                if (scrollable && !isSortingOperation) {\r\n                                    var rowElement = component.getRowElement(rowIndex);\r\n                                    var $rowElement = rowElement && rowElement[0] && $(rowElement[0]);\r\n                                    var top = $rowElement && $rowElement.position().top;\r\n                                    var isChromeLatest = browser.chrome && browser.version >= 91;\r\n                                    var allowedTopOffset = browser.mozilla || isChromeLatest ? 1 : 0;\r\n                                    if (top > allowedTopOffset) {\r\n                                        top = Math.round(top + getOuterHeight($rowElement) * (itemIndex % 1));\r\n                                        scrollable.scrollTo({\r\n                                            y: top\r\n                                        })\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                    },\r\n                    initVirtualRows: function() {\r\n                        var virtualRowsRendering = gridCoreUtils.isVirtualRowRendering(this);\r\n                        this._allItems = null;\r\n                        this._loadViewportParams = null;\r\n                        if (\"virtual\" !== this.option(\"scrolling.mode\") && true !== virtualRowsRendering || false === virtualRowsRendering || false !== this.option(LEGACY_SCROLLING_MODE) && !this.option(\"scrolling.rowPageSize\")) {\r\n                            this._visibleItems = null;\r\n                            this._rowsScrollController = null;\r\n                            return\r\n                        }\r\n                        var pageIndex = !isVirtualMode(this) && this.pageIndex() >= this.pageCount() ? this.pageCount() - 1 : this.pageIndex();\r\n                        this._rowPageIndex = Math.ceil(pageIndex * this.pageSize() / this.getRowPageSize());\r\n                        this._visibleItems = false === this.option(LEGACY_SCROLLING_MODE) ? null : [];\r\n                        this._viewportChanging = false;\r\n                        this._needUpdateViewportAfterLoading = false;\r\n                        if (!this._rowsScrollController) {\r\n                            this._rowsScrollController = new VirtualScrollController(this.component, this._getRowsScrollDataOptions(), true);\r\n                            this._rowsScrollController.positionChanged.add(() => {\r\n                                var _this$_dataSource2;\r\n                                if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                                    this._viewportChanging = true;\r\n                                    this.loadViewport();\r\n                                    this._viewportChanging = false;\r\n                                    return\r\n                                }\r\n                                null === (_this$_dataSource2 = this._dataSource) || void 0 === _this$_dataSource2 ? void 0 : _this$_dataSource2.setViewportItemIndex(this._rowsScrollController.getViewportItemIndex())\r\n                            })\r\n                        }\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            this._updateLoadViewportParams()\r\n                        }\r\n                        if (this.isLoaded() && false !== this.option(LEGACY_SCROLLING_MODE)) {\r\n                            this._rowsScrollController.load()\r\n                        }\r\n                    },\r\n                    isViewportChanging: function() {\r\n                        return this._viewportChanging\r\n                    },\r\n                    _getRowsScrollDataOptions: function() {\r\n                        var that = this;\r\n                        var isItemCountable = function(item) {\r\n                            return isItemCountableByDataSource(item, that._dataSource)\r\n                        };\r\n                        return {\r\n                            pageSize: function() {\r\n                                return that.getRowPageSize()\r\n                            },\r\n                            loadedOffset: function() {\r\n                                var _that$_dataSource;\r\n                                return isVirtualMode(that) && (null === (_that$_dataSource = that._dataSource) || void 0 === _that$_dataSource ? void 0 : _that$_dataSource.lastLoadOptions().skip) || 0\r\n                            },\r\n                            loadedItemCount: function() {\r\n                                return that._itemCount\r\n                            },\r\n                            totalItemsCount: function() {\r\n                                if (isVirtualPaging(that)) {\r\n                                    return that.totalItemsCount()\r\n                                }\r\n                                return false === that.option(LEGACY_SCROLLING_MODE) ? that._itemCount : that._items.filter(isItemCountable).length\r\n                            },\r\n                            hasKnownLastPage: function() {\r\n                                return true\r\n                            },\r\n                            pageIndex: function(index) {\r\n                                if (void 0 !== index) {\r\n                                    that._rowPageIndex = index\r\n                                }\r\n                                return that._rowPageIndex\r\n                            },\r\n                            isLoading: function() {\r\n                                return that.isLoading()\r\n                            },\r\n                            pageCount: function() {\r\n                                var pageCount = Math.ceil(this.totalItemsCount() / this.pageSize());\r\n                                return pageCount ? pageCount : 1\r\n                            },\r\n                            load: function() {\r\n                                if (that._rowsScrollController.pageIndex() >= this.pageCount()) {\r\n                                    that._rowPageIndex = this.pageCount() - 1;\r\n                                    that._rowsScrollController.pageIndex(that._rowPageIndex)\r\n                                }\r\n                                if (!this.items().length && this.totalItemsCount()) {\r\n                                    return\r\n                                }\r\n                                that._rowsScrollController.handleDataChanged(change => {\r\n                                    change = change || {};\r\n                                    change.changeType = change.changeType || \"refresh\";\r\n                                    change.items = change.items || that._visibleItems;\r\n                                    that._visibleItems.forEach((item, index) => {\r\n                                        item.rowIndex = index\r\n                                    });\r\n                                    that._fireChanged(change)\r\n                                })\r\n                            },\r\n                            updateLoading: function() {},\r\n                            itemsCount: function() {\r\n                                return this.items(true).length\r\n                            },\r\n                            correctCount: function(items, count, fromEnd) {\r\n                                return _correctCount(items, count, fromEnd, (item, isNextAfterLast, fromEnd) => {\r\n                                    if (item.isNewRow) {\r\n                                        return isNextAfterLast && !fromEnd\r\n                                    }\r\n                                    if (isNextAfterLast && fromEnd) {\r\n                                        return !item.isNewRow\r\n                                    }\r\n                                    return isItemCountable(item)\r\n                                })\r\n                            },\r\n                            items: function(countableOnly) {\r\n                                var result = that._items;\r\n                                if (that.option(LEGACY_SCROLLING_MODE)) {\r\n                                    var dataSource = that.dataSource();\r\n                                    var virtualItemsCount = null === dataSource || void 0 === dataSource ? void 0 : dataSource.virtualItemsCount();\r\n                                    var begin = virtualItemsCount ? virtualItemsCount.begin : 0;\r\n                                    var rowPageSize = that.getRowPageSize();\r\n                                    var skip = that._rowPageIndex * rowPageSize - begin;\r\n                                    var take = rowPageSize;\r\n                                    if (skip < 0) {\r\n                                        return []\r\n                                    }\r\n                                    if (skip) {\r\n                                        skip = this.correctCount(result, skip);\r\n                                        result = result.slice(skip)\r\n                                    }\r\n                                    if (take) {\r\n                                        take = this.correctCount(result, take);\r\n                                        result = result.slice(0, take)\r\n                                    }\r\n                                }\r\n                                return countableOnly ? result.filter(isItemCountable) : result\r\n                            },\r\n                            viewportItems: function(items) {\r\n                                if (items && false !== that.option(LEGACY_SCROLLING_MODE)) {\r\n                                    that._visibleItems = items\r\n                                }\r\n                                return that._visibleItems\r\n                            },\r\n                            onChanged: function() {},\r\n                            changingDuration: function(e) {\r\n                                var dataSource = that.dataSource();\r\n                                if (null !== dataSource && void 0 !== dataSource && dataSource.isLoading() && false !== that.option(LEGACY_SCROLLING_MODE)) {\r\n                                    return LOAD_TIMEOUT\r\n                                }\r\n                                return (null === dataSource || void 0 === dataSource ? void 0 : dataSource._renderTime) || 0\r\n                            }\r\n                        }\r\n                    },\r\n                    _updateItemsCore: function(change) {\r\n                        var delta = this.getRowIndexDelta();\r\n                        this.callBase.apply(this, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && gridCoreUtils.isVirtualRowRendering(this)) {\r\n                            if (\"update\" === change.changeType && 0 === change.rowIndices.length && change.cancelEmptyChanges) {\r\n                                change.cancel = true\r\n                            }\r\n                            return\r\n                        }\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            var visibleItems = this._visibleItems;\r\n                            var isRefresh = \"refresh\" === change.changeType || change.isLiveUpdate;\r\n                            if (\"append\" === change.changeType && change.items && !change.items.length) {\r\n                                return\r\n                            }\r\n                            if (isRefresh || \"append\" === change.changeType || \"prepend\" === change.changeType) {\r\n                                change.cancel = true;\r\n                                isRefresh && rowsScrollController.reset(true);\r\n                                rowsScrollController.load()\r\n                            } else {\r\n                                if (\"update\" === change.changeType) {\r\n                                    change.rowIndices.forEach((rowIndex, index) => {\r\n                                        var changeType = change.changeTypes[index];\r\n                                        var newItem = change.items[index];\r\n                                        if (\"update\" === changeType) {\r\n                                            visibleItems[rowIndex] = newItem\r\n                                        } else if (\"insert\" === changeType) {\r\n                                            visibleItems.splice(rowIndex, 0, newItem)\r\n                                        } else if (\"remove\" === changeType) {\r\n                                            visibleItems.splice(rowIndex, 1)\r\n                                        }\r\n                                    })\r\n                                } else {\r\n                                    visibleItems.forEach((item, index) => {\r\n                                        visibleItems[index] = this._items[index + delta] || visibleItems[index]\r\n                                    });\r\n                                    change.items = visibleItems\r\n                                }\r\n                                updateItemIndices(visibleItems)\r\n                            }\r\n                        }\r\n                    },\r\n                    _updateLoadViewportParams: function() {\r\n                        var viewportParams = this._rowsScrollController.getViewportParams();\r\n                        var pageSize = this.pageSize();\r\n                        if (viewportParams && !isVirtualPaging(this) && pageSize > 0) {\r\n                            var pageOffset = this.pageIndex() * pageSize;\r\n                            viewportParams.skip += pageOffset\r\n                        }\r\n                        this._loadViewportParams = viewportParams\r\n                    },\r\n                    _processItems: function(items) {\r\n                        var newItems = this.callBase.apply(this, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            var _dataSource$lastLoadO;\r\n                            var dataSource = this._dataSource;\r\n                            var currentIndex = null !== (_dataSource$lastLoadO = null === dataSource || void 0 === dataSource ? void 0 : dataSource.lastLoadOptions().skip) && void 0 !== _dataSource$lastLoadO ? _dataSource$lastLoadO : 0;\r\n                            var prevCountable;\r\n                            var prevRowType;\r\n                            var isPrevRowNew;\r\n                            var wasCountableItem = false;\r\n                            newItems.forEach(item => {\r\n                                var rowType = item.rowType;\r\n                                var itemCountable = isItemCountableByDataSource(item, dataSource);\r\n                                if (!item.isNewRow && isDefined(prevCountable)) {\r\n                                    var isNextGroupItem = \"group\" === rowType && (prevCountable || itemCountable || \"group\" !== prevRowType && currentIndex > 0);\r\n                                    var isNextDataItem = \"data\" === rowType && itemCountable && (prevCountable || \"group\" !== prevRowType);\r\n                                    var isPrevNewRowFirst = isPrevRowNew && !wasCountableItem;\r\n                                    if (isNextGroupItem || isNextDataItem) {\r\n                                        wasCountableItem = true;\r\n                                        if (!isPrevNewRowFirst) {\r\n                                            currentIndex++\r\n                                        }\r\n                                    }\r\n                                }\r\n                                item.loadIndex = currentIndex;\r\n                                prevCountable = itemCountable;\r\n                                prevRowType = rowType;\r\n                                isPrevRowNew = item.isNewRow\r\n                            })\r\n                        }\r\n                        return newItems\r\n                    },\r\n                    _afterProcessItems: function(items) {\r\n                        this._itemCount = items.filter(item => isItemCountableByDataSource(item, this._dataSource)).length;\r\n                        if (isDefined(this._loadViewportParams)) {\r\n                            this._updateLoadViewportParams();\r\n                            var result = items;\r\n                            this._allItems = items;\r\n                            if (items.length) {\r\n                                var {\r\n                                    skipForCurrentPage: skipForCurrentPage\r\n                                } = this.getLoadPageParams(true);\r\n                                var skip = items[0].loadIndex + skipForCurrentPage;\r\n                                var take = this._loadViewportParams.take;\r\n                                result = items.filter(it => {\r\n                                    var isNewRowOnStart = it.isNewRow && it.loadIndex >= skip - 1;\r\n                                    var isNewRowInEmptyData = it.isNewRow && it.loadIndex === skip && 0 === take;\r\n                                    var isLoadIndexGreaterStart = it.loadIndex >= skip || isNewRowOnStart;\r\n                                    var isLoadIndexLessEnd = it.loadIndex < skip + take || isNewRowInEmptyData;\r\n                                    return isLoadIndexGreaterStart && isLoadIndexLessEnd\r\n                                })\r\n                            }\r\n                            return result\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    _applyChange: function(change) {\r\n                        var that = this;\r\n                        var items = change.items;\r\n                        var changeType = change.changeType;\r\n                        var removeCount = change.removeCount;\r\n                        if (removeCount) {\r\n                            var fromEnd = \"prepend\" === changeType;\r\n                            removeCount = _correctCount(that._items, removeCount, fromEnd, (function(item, isNextAfterLast) {\r\n                                return \"data\" === item.rowType && !item.isNewRow || \"group\" === item.rowType && (that._dataSource.isGroupItemCountable(item.data) || isNextAfterLast)\r\n                            }));\r\n                            change.removeCount = removeCount\r\n                        }\r\n                        switch (changeType) {\r\n                            case \"prepend\":\r\n                                that._items.unshift.apply(that._items, items);\r\n                                if (removeCount) {\r\n                                    that._items.splice(-removeCount)\r\n                                }\r\n                                break;\r\n                            case \"append\":\r\n                                that._items.push.apply(that._items, items);\r\n                                if (removeCount) {\r\n                                    that._items.splice(0, removeCount)\r\n                                }\r\n                                break;\r\n                            default:\r\n                                that.callBase(change)\r\n                        }\r\n                    },\r\n                    items: function(allItems) {\r\n                        return allItems ? this._allItems || this._items : this._visibleItems || this._items\r\n                    },\r\n                    getRowIndexDelta: function() {\r\n                        var delta = 0;\r\n                        if (this.option(LEGACY_SCROLLING_MODE)) {\r\n                            var visibleItems = this._visibleItems;\r\n                            if (visibleItems && visibleItems[0]) {\r\n                                delta = this._items.indexOf(visibleItems[0])\r\n                            }\r\n                        }\r\n                        return delta < 0 ? 0 : delta\r\n                    },\r\n                    getRowIndexOffset: function(byLoadedRows) {\r\n                        var offset = 0;\r\n                        var dataSource = this.dataSource();\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var newMode = false === this.option(LEGACY_SCROLLING_MODE);\r\n                        var virtualPaging = isVirtualPaging(this);\r\n                        if (rowsScrollController && !byLoadedRows) {\r\n                            if (newMode && isDefined(this._loadViewportParams)) {\r\n                                var {\r\n                                    skipForCurrentPage: skipForCurrentPage,\r\n                                    pageIndex: pageIndex\r\n                                } = this.getLoadPageParams(true);\r\n                                var items = this.items(true);\r\n                                offset = virtualPaging ? pageIndex * this.pageSize() : 0;\r\n                                if (items.length) {\r\n                                    var firstLoadIndex = items[0].loadIndex;\r\n                                    offset += items.filter(item => item.loadIndex < firstLoadIndex + skipForCurrentPage).length\r\n                                }\r\n                            } else {\r\n                                offset = rowsScrollController.beginPageIndex() * rowsScrollController.pageSize()\r\n                            }\r\n                        } else if (virtualPaging && newMode && dataSource) {\r\n                            var _dataSource$lastLoadO2;\r\n                            offset = null !== (_dataSource$lastLoadO2 = dataSource.lastLoadOptions().skip) && void 0 !== _dataSource$lastLoadO2 ? _dataSource$lastLoadO2 : 0\r\n                        } else if (isVirtualMode(this) && dataSource) {\r\n                            offset = dataSource.beginPageIndex() * dataSource.pageSize()\r\n                        }\r\n                        return offset\r\n                    },\r\n                    viewportSize: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var dataSource = this._dataSource;\r\n                        var result = null === rowsScrollController || void 0 === rowsScrollController ? void 0 : rowsScrollController.viewportSize.apply(rowsScrollController, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            return result\r\n                        }\r\n                        return null === dataSource || void 0 === dataSource ? void 0 : dataSource.viewportSize.apply(dataSource, arguments)\r\n                    },\r\n                    viewportHeight: function(height) {\r\n                        var _this$_rowsScrollCont;\r\n                        null === (_this$_rowsScrollCont = this._rowsScrollController) || void 0 === _this$_rowsScrollCont ? void 0 : _this$_rowsScrollCont.viewportHeight(height)\r\n                    },\r\n                    viewportItemSize: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var dataSource = this._dataSource;\r\n                        var result = null === rowsScrollController || void 0 === rowsScrollController ? void 0 : rowsScrollController.viewportItemSize.apply(rowsScrollController, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            return result\r\n                        }\r\n                        return null === dataSource || void 0 === dataSource ? void 0 : dataSource.viewportItemSize.apply(dataSource, arguments)\r\n                    },\r\n                    setViewportPosition: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var dataSource = this._dataSource;\r\n                        if (rowsScrollController) {\r\n                            rowsScrollController.setViewportPosition.apply(rowsScrollController, arguments)\r\n                        } else {\r\n                            null === dataSource || void 0 === dataSource ? void 0 : dataSource.setViewportPosition.apply(dataSource, arguments)\r\n                        }\r\n                    },\r\n                    setContentItemSizes: function(sizes) {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var dataSource = this._dataSource;\r\n                        var result = null === rowsScrollController || void 0 === rowsScrollController ? void 0 : rowsScrollController.setContentItemSizes(sizes);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            return result\r\n                        }\r\n                        return null === dataSource || void 0 === dataSource ? void 0 : dataSource.setContentItemSizes(sizes)\r\n                    },\r\n                    getPreloadedRowCount: function() {\r\n                        var preloadCount = this.option(\"scrolling.preloadedRowCount\");\r\n                        var preloadEnabled = this.option(\"scrolling.preloadEnabled\");\r\n                        if (isDefined(preloadCount)) {\r\n                            return preloadCount\r\n                        }\r\n                        var viewportSize = this.viewportSize();\r\n                        return preloadEnabled ? 2 * viewportSize : viewportSize\r\n                    },\r\n                    getLoadPageParams: function(byLoadedPage) {\r\n                        var _this$_dataSource3, _this$_dataSource4;\r\n                        var pageSize = this.pageSize();\r\n                        var viewportParams = this._loadViewportParams;\r\n                        var lastLoadOptions = null === (_this$_dataSource3 = this._dataSource) || void 0 === _this$_dataSource3 ? void 0 : _this$_dataSource3.lastLoadOptions();\r\n                        var loadedPageIndex = (null === lastLoadOptions || void 0 === lastLoadOptions ? void 0 : lastLoadOptions.pageIndex) || 0;\r\n                        var loadedTake = (null === lastLoadOptions || void 0 === lastLoadOptions ? void 0 : lastLoadOptions.take) || 0;\r\n                        var isScrollingBack = this._rowsScrollController.isScrollingBack();\r\n                        var topPreloadCount = isScrollingBack ? this.getPreloadedRowCount() : 0;\r\n                        var bottomPreloadCount = isScrollingBack ? 0 : this.getPreloadedRowCount();\r\n                        var totalCountCorrection = (null === (_this$_dataSource4 = this._dataSource) || void 0 === _this$_dataSource4 ? void 0 : _this$_dataSource4.totalCountCorrection()) || 0;\r\n                        var skipWithPreload = Math.max(0, viewportParams.skip - topPreloadCount);\r\n                        var pageIndex = byLoadedPage ? loadedPageIndex : Math.floor(pageSize ? skipWithPreload / pageSize : 0);\r\n                        var pageOffset = pageIndex * pageSize;\r\n                        var skipForCurrentPage = viewportParams.skip - pageOffset;\r\n                        var loadingTake = viewportParams.take + skipForCurrentPage + bottomPreloadCount - totalCountCorrection;\r\n                        var take = byLoadedPage ? loadedTake : loadingTake;\r\n                        var loadPageCount = Math.ceil(pageSize ? take / pageSize : 0);\r\n                        return {\r\n                            pageIndex: pageIndex,\r\n                            loadPageCount: Math.max(1, loadPageCount),\r\n                            skipForCurrentPage: Math.max(0, skipForCurrentPage)\r\n                        }\r\n                    },\r\n                    _updateVisiblePageIndex: function(currentPageIndex) {\r\n                        if (!this._rowsScrollController) {\r\n                            return\r\n                        }\r\n                        if (isDefined(currentPageIndex)) {\r\n                            this._silentOption(VISIBLE_PAGE_INDEX, currentPageIndex);\r\n                            this.pageChanged.fire();\r\n                            return\r\n                        }\r\n                        var viewPortItemIndex = this._rowsScrollController.getViewportItemIndex();\r\n                        var newPageIndex = Math.floor(viewPortItemIndex / this.pageSize());\r\n                        if (this.pageIndex() !== newPageIndex) {\r\n                            this._silentOption(VISIBLE_PAGE_INDEX, newPageIndex);\r\n                            this.updateItems({\r\n                                changeType: \"pageIndex\"\r\n                            })\r\n                        }\r\n                    },\r\n                    _getChangedLoadParams: function() {\r\n                        var loadedPageParams = this.getLoadPageParams(true);\r\n                        var {\r\n                            pageIndex: pageIndex,\r\n                            loadPageCount: loadPageCount\r\n                        } = this.getLoadPageParams();\r\n                        var result = null;\r\n                        if (!this._isLoading && (pageIndex !== loadedPageParams.pageIndex || loadPageCount !== loadedPageParams.loadPageCount)) {\r\n                            result = {\r\n                                pageIndex: pageIndex,\r\n                                loadPageCount: loadPageCount\r\n                            }\r\n                        }\r\n                        return result\r\n                    },\r\n                    _loadItems: function(checkLoading) {\r\n                        var _dataSourceAdapter$lo, _dataSourceAdapter$pa;\r\n                        var virtualPaging = isVirtualPaging(this);\r\n                        var dataSourceAdapter = this._dataSource;\r\n                        var changedParams = this._getChangedLoadParams();\r\n                        var currentLoadPageCount = null !== (_dataSourceAdapter$lo = null === dataSourceAdapter || void 0 === dataSourceAdapter ? void 0 : dataSourceAdapter.loadPageCount()) && void 0 !== _dataSourceAdapter$lo ? _dataSourceAdapter$lo : 0;\r\n                        var lastRequiredItemCount = this.pageSize() * currentLoadPageCount;\r\n                        var currentPageIndex = null !== (_dataSourceAdapter$pa = null === dataSourceAdapter || void 0 === dataSourceAdapter ? void 0 : dataSourceAdapter.pageIndex()) && void 0 !== _dataSourceAdapter$pa ? _dataSourceAdapter$pa : 0;\r\n                        var pageIndexNotChanged = (null === changedParams || void 0 === changedParams ? void 0 : changedParams.pageIndex) === currentPageIndex;\r\n                        var allLoadedInAppendMode = isAppendMode(this) && this.totalItemsCount() < lastRequiredItemCount;\r\n                        var result = false;\r\n                        if (!dataSourceAdapter || virtualPaging && checkLoading && ((null === changedParams || void 0 === changedParams ? void 0 : changedParams.pageIndex) > currentPageIndex || pageIndexNotChanged && allLoadedInAppendMode)) {\r\n                            return result\r\n                        }\r\n                        if (virtualPaging && this._isLoading) {\r\n                            this._needUpdateViewportAfterLoading = true\r\n                        }\r\n                        if (virtualPaging && changedParams) {\r\n                            result = true;\r\n                            dataSourceAdapter.pageIndex(changedParams.pageIndex);\r\n                            dataSourceAdapter.loadPageCount(changedParams.loadPageCount);\r\n                            this._repaintChangesOnly = true;\r\n                            this._needUpdateDimensions = true;\r\n                            var viewportChanging = this._viewportChanging;\r\n                            this.load().always(() => {\r\n                                this._repaintChangesOnly = void 0;\r\n                                this._needUpdateDimensions = void 0\r\n                            }).done(() => {\r\n                                var isLastPage = this.pageCount() > 0 && this.pageIndex() === this.pageCount() - 1;\r\n                                (viewportChanging || isLastPage) && this._updateVisiblePageIndex();\r\n                                if (this._needUpdateViewportAfterLoading) {\r\n                                    this._needUpdateViewportAfterLoading = false;\r\n                                    this.loadViewport({\r\n                                        checkLoadedParamsOnly: true\r\n                                    })\r\n                                }\r\n                            })\r\n                        }\r\n                        return result\r\n                    },\r\n                    loadViewport: function(params) {\r\n                        var {\r\n                            checkLoadedParamsOnly: checkLoadedParamsOnly,\r\n                            checkLoading: checkLoading\r\n                        } = null !== params && void 0 !== params ? params : {};\r\n                        var virtualPaging = isVirtualPaging(this);\r\n                        if (virtualPaging || gridCoreUtils.isVirtualRowRendering(this)) {\r\n                            this._updateLoadViewportParams();\r\n                            var loadingItemsStarted = this._loadItems(checkLoading);\r\n                            if (!loadingItemsStarted && !(this._isLoading && checkLoading) && !checkLoadedParamsOnly) {\r\n                                this.updateItems({\r\n                                    repaintChangesOnly: true,\r\n                                    needUpdateDimensions: true,\r\n                                    useProcessedItemsCache: true,\r\n                                    cancelEmptyChanges: true\r\n                                })\r\n                            }\r\n                        }\r\n                    },\r\n                    updateViewport: function() {\r\n                        var _this$_loadViewportPa, _this$_loadViewportPa2;\r\n                        var viewportSize = this.viewportSize();\r\n                        var itemCount = this.items().length;\r\n                        var viewportIsNotFilled = viewportSize > itemCount;\r\n                        var currentTake = null !== (_this$_loadViewportPa = null === (_this$_loadViewportPa2 = this._loadViewportParams) || void 0 === _this$_loadViewportPa2 ? void 0 : _this$_loadViewportPa2.take) && void 0 !== _this$_loadViewportPa ? _this$_loadViewportPa : 0;\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        var newTake = null === rowsScrollController || void 0 === rowsScrollController ? void 0 : rowsScrollController.getViewportParams().take;\r\n                        (viewportIsNotFilled || currentTake < newTake) && itemCount && this.loadViewport({\r\n                            checkLoading: true\r\n                        })\r\n                    },\r\n                    loadIfNeed: function() {\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                            return\r\n                        }\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        rowsScrollController && rowsScrollController.loadIfNeed();\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.loadIfNeed()\r\n                    },\r\n                    getItemSize: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.getItemSize.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.getItemSize.apply(dataSource, arguments)\r\n                    },\r\n                    getItemSizes: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.getItemSizes.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.getItemSizes.apply(dataSource, arguments)\r\n                    },\r\n                    getContentOffset: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.getContentOffset.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return dataSource && dataSource.getContentOffset.apply(dataSource, arguments)\r\n                    },\r\n                    refresh: function(options) {\r\n                        var dataSource = this._dataSource;\r\n                        if (dataSource && options && options.load && isAppendMode(this)) {\r\n                            dataSource.resetCurrentTotalCount()\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    dispose: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        rowsScrollController && rowsScrollController.dispose();\r\n                        this.callBase.apply(this, arguments)\r\n                    },\r\n                    topItemIndex: function() {\r\n                        var _this$_loadViewportPa3;\r\n                        return null === (_this$_loadViewportPa3 = this._loadViewportParams) || void 0 === _this$_loadViewportPa3 ? void 0 : _this$_loadViewportPa3.skip\r\n                    },\r\n                    bottomItemIndex: function() {\r\n                        var viewportParams = this._loadViewportParams;\r\n                        return viewportParams && viewportParams.skip + viewportParams.take\r\n                    },\r\n                    virtualItemsCount: function() {\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (rowsScrollController) {\r\n                            return rowsScrollController.virtualItemsCount.apply(rowsScrollController, arguments)\r\n                        }\r\n                        var dataSource = this._dataSource;\r\n                        return null === dataSource || void 0 === dataSource ? void 0 : dataSource.virtualItemsCount.apply(dataSource, arguments)\r\n                    },\r\n                    pageIndex: function(_pageIndex) {\r\n                        var virtualPaging = isVirtualPaging(this);\r\n                        var rowsScrollController = this._rowsScrollController;\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && virtualPaging && rowsScrollController) {\r\n                            if (void 0 === _pageIndex) {\r\n                                var _this$option;\r\n                                return null !== (_this$option = this.option(VISIBLE_PAGE_INDEX)) && void 0 !== _this$option ? _this$option : 0\r\n                            }\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    _fireChanged: function(e) {\r\n                        this.callBase.apply(this, arguments);\r\n                        var {\r\n                            operationTypes: operationTypes\r\n                        } = e;\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && isVirtualPaging(this) && operationTypes) {\r\n                            var {\r\n                                fullReload: fullReload,\r\n                                pageIndex: pageIndex\r\n                            } = operationTypes;\r\n                            if (e.isDataChanged && !fullReload && pageIndex) {\r\n                                this._updateVisiblePageIndex(this._dataSource.pageIndex())\r\n                            }\r\n                        }\r\n                    },\r\n                    _getPagingOptionValue: function(optionName) {\r\n                        var result = this.callBase.apply(this, arguments);\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && isVirtualPaging(this)) {\r\n                            result = this[optionName]()\r\n                        }\r\n                        return result\r\n                    },\r\n                    isEmpty: function() {\r\n                        return false === this.option(LEGACY_SCROLLING_MODE) ? !this.items(true).length : this.callBase(this, arguments)\r\n                    },\r\n                    isLastPageLoaded: function() {\r\n                        var result = false;\r\n                        if (false === this.option(LEGACY_SCROLLING_MODE) && isVirtualPaging(this)) {\r\n                            var {\r\n                                pageIndex: pageIndex,\r\n                                loadPageCount: loadPageCount\r\n                            } = this.getLoadPageParams(true);\r\n                            var pageCount = this.pageCount();\r\n                            result = pageIndex + loadPageCount >= pageCount\r\n                        } else {\r\n                            result = this.callBase.apply(this, arguments)\r\n                        }\r\n                        return result\r\n                    },\r\n                    reset: function() {\r\n                        this._itemCount = 0;\r\n                        this._allItems = null;\r\n                        this.callBase.apply(this, arguments)\r\n                    }\r\n                };\r\n                gridCoreUtils.proxyMethod(members, \"getVirtualContentSize\");\r\n                gridCoreUtils.proxyMethod(members, \"setViewportItemIndex\");\r\n                return members\r\n            }(),\r\n            resizing: {\r\n                resize: function() {\r\n                    var that = this;\r\n                    var callBase = that.callBase;\r\n                    var result;\r\n                    if (isVirtualMode(that) || gridCoreUtils.isVirtualRowRendering(that)) {\r\n                        clearTimeout(that._resizeTimeout);\r\n                        var diff = new Date - that._lastTime;\r\n                        var updateTimeout = that.option(\"scrolling.updateTimeout\");\r\n                        if (that._lastTime && diff < updateTimeout) {\r\n                            result = new Deferred;\r\n                            that._resizeTimeout = setTimeout((function() {\r\n                                callBase.apply(that).done(result.resolve).fail(result.reject);\r\n                                that._lastTime = new Date\r\n                            }), updateTimeout);\r\n                            that._lastTime = new Date\r\n                        } else {\r\n                            result = callBase.apply(that);\r\n                            if (that._dataController.isLoaded()) {\r\n                                that._lastTime = new Date\r\n                            }\r\n                        }\r\n                    } else {\r\n                        result = callBase.apply(that)\r\n                    }\r\n                    return result\r\n                },\r\n                dispose: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    clearTimeout(this._resizeTimeout)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: VirtualScrollingRowsViewExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.virtual_scrolling.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport dataSourceAdapter from \"./ui.data_grid.data_source_adapter\";\r\nimport {\r\n    virtualScrollingModule\r\n} from \"../grid_core/ui.grid_core.virtual_scrolling\";\r\ngridCore.registerModule(\"virtualScrolling\", virtualScrollingModule);\r\ndataSourceAdapter.extend(virtualScrollingModule.extenders.dataSourceAdapter);\r\n","/**\r\n * DevExtreme (esm/ui/overlay/utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getInnerHeight,\r\n    getOuterHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    isNumeric\r\n} from \"../../core/utils/type\";\r\nvar WINDOW_HEIGHT_PERCENT = .9;\r\nexport var getElementMaxHeightByWindow = ($element, startLocation) => {\r\n    var $window = $(getWindow());\r\n    var {\r\n        top: elementOffset\r\n    } = $element.offset();\r\n    var actualOffset;\r\n    if (isNumeric(startLocation)) {\r\n        if (startLocation < elementOffset) {\r\n            return elementOffset - startLocation\r\n        } else {\r\n            actualOffset = getInnerHeight($window) - startLocation + $window.scrollTop()\r\n        }\r\n    } else {\r\n        var offsetTop = elementOffset - $window.scrollTop();\r\n        var offsetBottom = getInnerHeight($window) - offsetTop - getOuterHeight($element);\r\n        actualOffset = Math.max(offsetTop, offsetBottom)\r\n    }\r\n    return actualOffset * WINDOW_HEIGHT_PERCENT\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/menu/ui.submenu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth,\r\n    getHeight,\r\n    setWidth,\r\n    setHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport animationPosition from \"../../animation/position\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport ContextMenu from \"../context_menu\";\r\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\";\r\nvar DX_SUBMENU_CLASS = \"dx-submenu\";\r\nclass Submenu extends ContextMenu {\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            orientation: \"horizontal\",\r\n            tabIndex: null,\r\n            onHoverStart: noop\r\n        })\r\n    }\r\n    _initDataAdapter() {\r\n        this._dataAdapter = this.option(\"_dataAdapter\");\r\n        if (!this._dataAdapter) {\r\n            super._initDataAdapter()\r\n        }\r\n    }\r\n    _renderContentImpl() {\r\n        this._renderContextMenuOverlay();\r\n        super._renderContentImpl();\r\n        var node = this._dataAdapter.getNodeByKey(this.option(\"_parentKey\"));\r\n        node && this._renderItems(this._getChildNodes(node));\r\n        this._renderDelimiter()\r\n    }\r\n    _renderDelimiter() {\r\n        this.$contentDelimiter = $(\"<div>\").appendTo(this._itemContainer()).addClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)\r\n    }\r\n    _getOverlayOptions() {\r\n        return extend(super._getOverlayOptions(), {\r\n            onPositioned: this._overlayPositionedActionHandler.bind(this)\r\n        })\r\n    }\r\n    _overlayPositionedActionHandler(arg) {\r\n        this._showDelimiter(arg)\r\n    }\r\n    _hoverEndHandler(e) {\r\n        super._hoverEndHandler(e);\r\n        this._toggleFocusClass(false, e.currentTarget)\r\n    }\r\n    _isMenuHorizontal() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    }\r\n    _hoverStartHandler(e) {\r\n        var hoverStartAction = this.option(\"onHoverStart\");\r\n        hoverStartAction(e);\r\n        super._hoverStartHandler(e);\r\n        this._toggleFocusClass(true, e.currentTarget)\r\n    }\r\n    _drawSubmenu($rootItem) {\r\n        this._actions.onShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        });\r\n        super._drawSubmenu($rootItem);\r\n        this._actions.onShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        })\r\n    }\r\n    _hideSubmenu($rootItem) {\r\n        this._actions.onHiding({\r\n            cancel: true,\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        });\r\n        super._hideSubmenu($rootItem);\r\n        this._actions.onHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: this\r\n        })\r\n    }\r\n    _showDelimiter(arg) {\r\n        if (!this.$contentDelimiter) {\r\n            return\r\n        }\r\n        var $submenu = this._itemContainer().children(\".\".concat(DX_SUBMENU_CLASS)).eq(0);\r\n        var $rootItem = this.option(\"position\").of;\r\n        var position = {\r\n            of: $submenu\r\n        };\r\n        var containerOffset = arg.position;\r\n        var vLocation = containerOffset.v.location;\r\n        var hLocation = containerOffset.h.location;\r\n        var rootOffset = $rootItem.offset();\r\n        var offsetLeft = Math.round(rootOffset.left);\r\n        var offsetTop = Math.round(rootOffset.top);\r\n        var rootWidth = getWidth($rootItem);\r\n        var rootHeight = getHeight($rootItem);\r\n        var submenuWidth = getWidth($submenu);\r\n        var submenuHeight = getHeight($submenu);\r\n        this.$contentDelimiter.css(\"display\", \"block\");\r\n        setWidth(this.$contentDelimiter, this._isMenuHorizontal() ? rootWidth < submenuWidth ? rootWidth - 2 : submenuWidth : 2);\r\n        setHeight(this.$contentDelimiter, this._isMenuHorizontal() ? 2 : rootHeight < submenuHeight ? rootHeight - 2 : submenuHeight);\r\n        if (this._isMenuHorizontal()) {\r\n            if (vLocation > offsetTop) {\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 -1\";\r\n                    position.at = position.my = \"left top\"\r\n                } else {\r\n                    position.offset = \"-1 -1\";\r\n                    position.at = position.my = \"right top\"\r\n                }\r\n            } else {\r\n                setHeight(this.$contentDelimiter, 5);\r\n                if (Math.round(hLocation) === offsetLeft) {\r\n                    position.offset = \"1 4\";\r\n                    position.at = position.my = \"left bottom\"\r\n                } else {\r\n                    position.offset = \"-1 2\";\r\n                    position.at = position.my = \"right bottom\"\r\n                }\r\n            }\r\n        } else if (hLocation > offsetLeft) {\r\n            if (Math.round(vLocation) === offsetTop) {\r\n                position.offset = \"-1 1\";\r\n                position.at = position.my = \"left top\"\r\n            } else {\r\n                position.offset = \"-1 -1\";\r\n                position.at = position.my = \"left bottom\"\r\n            }\r\n        } else if (Math.round(vLocation) === offsetTop) {\r\n            position.offset = \"1 1\";\r\n            position.at = position.my = \"right top\"\r\n        } else {\r\n            position.offset = \"1 -1\";\r\n            position.at = position.my = \"right bottom\"\r\n        }\r\n        animationPosition.setup(this.$contentDelimiter, position)\r\n    }\r\n    _getContextMenuPosition() {\r\n        return this.option(\"position\")\r\n    }\r\n    isOverlayVisible() {\r\n        return this._overlay.option(\"visible\")\r\n    }\r\n    getOverlayContent() {\r\n        return this._overlay.$content()\r\n    }\r\n}\r\nexport default Submenu;\r\n","/**\r\n * DevExtreme (esm/ui/menu/ui.menu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isPlainObject,\r\n    isObject,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getElementMaxHeightByWindow\r\n} from \"../overlay/utils\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    end as hoverEventEnd\r\n} from \"../../events/hover\";\r\nimport MenuBase from \"../context_menu/ui.menu_base\";\r\nimport Overlay from \"../overlay/ui.overlay\";\r\nimport Submenu from \"./ui.submenu\";\r\nimport Button from \"../button\";\r\nimport TreeView from \"../tree_view\";\r\nvar DX_MENU_CLASS = \"dx-menu\";\r\nvar DX_MENU_VERTICAL_CLASS = DX_MENU_CLASS + \"-vertical\";\r\nvar DX_MENU_HORIZONTAL_CLASS = DX_MENU_CLASS + \"-horizontal\";\r\nvar DX_MENU_ITEM_CLASS = DX_MENU_CLASS + \"-item\";\r\nvar DX_MENU_ITEMS_CONTAINER_CLASS = DX_MENU_CLASS + \"-items-container\";\r\nvar DX_MENU_ITEM_EXPANDED_CLASS = DX_MENU_ITEM_CLASS + \"-expanded\";\r\nvar DX_CONTEXT_MENU_CLASS = \"dx-context-menu\";\r\nvar DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS = DX_CONTEXT_MENU_CLASS + \"-container-border\";\r\nvar DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\";\r\nvar DX_SUBMENU_CLASS = \"dx-submenu\";\r\nvar DX_STATE_DISABLED_CLASS = \"dx-state-disabled\";\r\nvar DX_STATE_HOVER_CLASS = \"dx-state-hover\";\r\nvar DX_STATE_ACTIVE_CLASS = \"dx-state-active\";\r\nvar DX_ADAPTIVE_MODE_CLASS = DX_MENU_CLASS + \"-adaptive-mode\";\r\nvar DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS = DX_MENU_CLASS + \"-hamburger-button\";\r\nvar DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS = DX_ADAPTIVE_MODE_CLASS + \"-overlay-wrapper\";\r\nvar FOCUS_UP = \"up\";\r\nvar FOCUS_DOWN = \"down\";\r\nvar FOCUS_LEFT = \"left\";\r\nvar FOCUS_RIGHT = \"right\";\r\nvar SHOW_SUBMENU_OPERATION = \"showSubmenu\";\r\nvar NEXTITEM_OPERATION = \"nextItem\";\r\nvar PREVITEM_OPERATION = \"prevItem\";\r\nvar DEFAULT_DELAY = {\r\n    show: 50,\r\n    hide: 300\r\n};\r\nvar ACTIONS = [\"onSubmenuShowing\", \"onSubmenuShown\", \"onSubmenuHiding\", \"onSubmenuHidden\", \"onItemContextMenu\", \"onItemClick\", \"onSelectionChanged\", \"onItemRendered\"];\r\nclass Menu extends MenuBase {\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            orientation: \"horizontal\",\r\n            submenuDirection: \"auto\",\r\n            showFirstSubmenuMode: {\r\n                name: \"onClick\",\r\n                delay: {\r\n                    show: 50,\r\n                    hide: 300\r\n                }\r\n            },\r\n            hideSubmenuOnMouseLeave: false,\r\n            onSubmenuShowing: null,\r\n            onSubmenuShown: null,\r\n            onSubmenuHiding: null,\r\n            onSubmenuHidden: null,\r\n            adaptivityEnabled: false\r\n        })\r\n    }\r\n    _setOptionsByReference() {\r\n        super._setOptionsByReference();\r\n        extend(this._optionsByReference, {\r\n            animation: true,\r\n            selectedItem: true\r\n        })\r\n    }\r\n    _itemElements() {\r\n        var rootMenuElements = super._itemElements();\r\n        var submenuElements = this._submenuItemElements();\r\n        return rootMenuElements.add(submenuElements)\r\n    }\r\n    _submenuItemElements() {\r\n        var elements = [];\r\n        var itemSelector = \".\".concat(DX_MENU_ITEM_CLASS);\r\n        var currentSubmenu = this._submenus.length && this._submenus[0];\r\n        if (currentSubmenu && currentSubmenu.itemsContainer()) {\r\n            elements = currentSubmenu.itemsContainer().find(itemSelector)\r\n        }\r\n        return elements\r\n    }\r\n    _focusTarget() {\r\n        return this.$element()\r\n    }\r\n    _isMenuHorizontal() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    }\r\n    _moveFocus(location) {\r\n        var $items = this._getAvailableItems();\r\n        var isMenuHorizontal = this._isMenuHorizontal();\r\n        var $activeItem = this._getActiveItem(true);\r\n        var argument;\r\n        var operation;\r\n        var navigationAction;\r\n        var $newTarget;\r\n        switch (location) {\r\n            case FOCUS_UP:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(PREVITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_DOWN:\r\n                operation = isMenuHorizontal ? SHOW_SUBMENU_OPERATION : this._getItemsNavigationOperation(NEXTITEM_OPERATION);\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_RIGHT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(NEXTITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case FOCUS_LEFT:\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(PREVITEM_OPERATION) : SHOW_SUBMENU_OPERATION;\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            default:\r\n                return super._moveFocus(location)\r\n        }\r\n        if ($newTarget && 0 !== $newTarget.length) {\r\n            this.option(\"focusedElement\", getPublicElement($newTarget))\r\n        }\r\n    }\r\n    _getItemsNavigationOperation(operation) {\r\n        var navOperation = operation;\r\n        if (this.option(\"rtlEnabled\")) {\r\n            navOperation = operation === PREVITEM_OPERATION ? NEXTITEM_OPERATION : PREVITEM_OPERATION\r\n        }\r\n        return navOperation\r\n    }\r\n    _getKeyboardNavigationAction(operation, argument) {\r\n        var action = noop;\r\n        switch (operation) {\r\n            case SHOW_SUBMENU_OPERATION:\r\n                if (!argument.hasClass(DX_STATE_DISABLED_CLASS)) {\r\n                    action = this._showSubmenu.bind(this, argument)\r\n                }\r\n                break;\r\n            case NEXTITEM_OPERATION:\r\n                action = this._nextItem.bind(this, argument);\r\n                break;\r\n            case PREVITEM_OPERATION:\r\n                action = this._prevItem.bind(this, argument)\r\n        }\r\n        return action\r\n    }\r\n    _clean() {\r\n        super._clean();\r\n        this.option(\"templatesRenderAsynchronously\") && clearTimeout(this._resizeEventTimer)\r\n    }\r\n    _visibilityChanged(visible) {\r\n        if (visible) {\r\n            if (!this._menuItemsWidth) {\r\n                this._updateItemsWidthCache()\r\n            }\r\n            this._dimensionChanged()\r\n        }\r\n    }\r\n    _isAdaptivityEnabled() {\r\n        return this.option(\"adaptivityEnabled\") && \"horizontal\" === this.option(\"orientation\")\r\n    }\r\n    _updateItemsWidthCache() {\r\n        var $menuItems = this.$element().find(\"ul\").first().children(\"li\").children(\".\".concat(DX_MENU_ITEM_CLASS));\r\n        this._menuItemsWidth = this._getSummaryItemsWidth($menuItems, true)\r\n    }\r\n    _dimensionChanged() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        var containerWidth = getOuterWidth(this.$element());\r\n        this._toggleAdaptiveMode(this._menuItemsWidth > containerWidth)\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this._submenus = []\r\n    }\r\n    _initActions() {\r\n        this._actions = {};\r\n        each(ACTIONS, (index, action) => {\r\n            this._actions[action] = this._createActionByOption(action)\r\n        })\r\n    }\r\n    _initMarkup() {\r\n        this._visibleSubmenu = null;\r\n        this.$element().addClass(DX_MENU_CLASS);\r\n        super._initMarkup();\r\n        this.setAria(\"role\", \"menubar\")\r\n    }\r\n    _render() {\r\n        super._render();\r\n        this._initAdaptivity()\r\n    }\r\n    _renderHamburgerButton() {\r\n        this._hamburger = new Button($(\"<div>\").addClass(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS), {\r\n            icon: \"menu\",\r\n            activeStateEnabled: false,\r\n            onClick: this._toggleTreeView.bind(this)\r\n        });\r\n        return this._hamburger.$element()\r\n    }\r\n    _toggleTreeView(state) {\r\n        if (isPlainObject(state)) {\r\n            state = !this._overlay.option(\"visible\")\r\n        }\r\n        this._overlay.option(\"visible\", state);\r\n        this._toggleHamburgerActiveState(state)\r\n    }\r\n    _toggleHamburgerActiveState(state) {\r\n        this._hamburger && this._hamburger.$element().toggleClass(DX_STATE_ACTIVE_CLASS, state)\r\n    }\r\n    _toggleAdaptiveMode(state) {\r\n        var $menuItemsContainer = this.$element().find(\".\".concat(DX_MENU_HORIZONTAL_CLASS));\r\n        var $adaptiveElements = this.$element().find(\".\".concat(DX_ADAPTIVE_MODE_CLASS));\r\n        if (state) {\r\n            this._hideVisibleSubmenu()\r\n        } else {\r\n            this._treeView && this._treeView.collapseAll();\r\n            this._overlay && this._toggleTreeView(state)\r\n        }\r\n        $menuItemsContainer.toggle(!state);\r\n        $adaptiveElements.toggle(state)\r\n    }\r\n    _removeAdaptivity() {\r\n        if (!this._$adaptiveContainer) {\r\n            return\r\n        }\r\n        this._toggleAdaptiveMode(false);\r\n        this._$adaptiveContainer.remove();\r\n        this._$adaptiveContainer = null;\r\n        this._treeView = null;\r\n        this._hamburger = null;\r\n        this._overlay = null\r\n    }\r\n    _treeviewItemClickHandler(e) {\r\n        this._actions.onItemClick(e);\r\n        if (!e.node.children.length) {\r\n            this._toggleTreeView(false)\r\n        }\r\n    }\r\n    _getAdaptiveOverlayOptions() {\r\n        var rtl = this.option(\"rtlEnabled\");\r\n        var position = rtl ? \"right\" : \"left\";\r\n        return {\r\n            _ignoreFunctionValueDeprecation: true,\r\n            maxHeight: () => getElementMaxHeightByWindow(this.$element()),\r\n            deferRendering: false,\r\n            shading: false,\r\n            animation: false,\r\n            hideOnParentScroll: true,\r\n            onHidden: () => {\r\n                this._toggleHamburgerActiveState(false)\r\n            },\r\n            height: \"auto\",\r\n            closeOnOutsideClick: e => !$(e.target).closest(\".\".concat(DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS)).length,\r\n            position: {\r\n                collision: \"flipfit\",\r\n                at: \"bottom \" + position,\r\n                my: \"top \" + position,\r\n                of: this._hamburger.$element()\r\n            }\r\n        }\r\n    }\r\n    _getTreeViewOptions() {\r\n        var menuOptions = {};\r\n        each([\"rtlEnabled\", \"width\", \"accessKey\", \"activeStateEnabled\", \"animation\", \"dataSource\", \"disabled\", \"displayExpr\", \"displayExpr\", \"focusStateEnabled\", \"hint\", \"hoverStateEnabled\", \"itemsExpr\", \"items\", \"itemTemplate\", \"selectedExpr\", \"selectionMode\", \"tabIndex\", \"visible\"], (_, option) => {\r\n            menuOptions[option] = this.option(option)\r\n        });\r\n        each([\"onItemContextMenu\", \"onSelectionChanged\"], (_, actionName) => {\r\n            menuOptions[actionName] = e => {\r\n                this._actions[actionName](e)\r\n            }\r\n        });\r\n        return extend(menuOptions, {\r\n            dataSource: this.getDataSource(),\r\n            animationEnabled: !!this.option(\"animation\"),\r\n            onItemClick: this._treeviewItemClickHandler.bind(this),\r\n            onItemExpanded: e => {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuShown(e)\r\n            },\r\n            onItemCollapsed: e => {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuHidden(e)\r\n            },\r\n            selectNodesRecursive: false,\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            expandEvent: \"click\"\r\n        })\r\n    }\r\n    _initAdaptivity() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        this._$adaptiveContainer = $(\"<div>\").addClass(DX_ADAPTIVE_MODE_CLASS);\r\n        var $hamburger = this._renderHamburgerButton();\r\n        this._treeView = this._createComponent($(\"<div>\"), TreeView, this._getTreeViewOptions());\r\n        this._overlay = this._createComponent($(\"<div>\"), Overlay, this._getAdaptiveOverlayOptions());\r\n        this._overlay.$content().append(this._treeView.$element()).addClass(DX_ADAPTIVE_MODE_CLASS).addClass(this.option(\"cssClass\"));\r\n        this._overlay.$wrapper().addClass(DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS);\r\n        this._$adaptiveContainer.append($hamburger);\r\n        this._$adaptiveContainer.append(this._overlay.$element());\r\n        this.$element().append(this._$adaptiveContainer);\r\n        this._updateItemsWidthCache();\r\n        this._dimensionChanged()\r\n    }\r\n    _getDelay(delayType) {\r\n        var delay = this.option(\"showFirstSubmenuMode\").delay;\r\n        if (!isDefined(delay)) {\r\n            return DEFAULT_DELAY[delayType]\r\n        } else {\r\n            return isObject(delay) ? delay[delayType] : delay\r\n        }\r\n    }\r\n    _keyboardHandler(e) {\r\n        return super._keyboardHandler(e, !!this._visibleSubmenu)\r\n    }\r\n    _renderContainer() {\r\n        var $wrapper = $(\"<div>\");\r\n        $wrapper.appendTo(this.$element()).addClass(this._isMenuHorizontal() ? DX_MENU_HORIZONTAL_CLASS : DX_MENU_VERTICAL_CLASS);\r\n        return super._renderContainer($wrapper)\r\n    }\r\n    _renderSubmenuItems(node, $itemFrame) {\r\n        var submenu = this._createSubmenu(node, $itemFrame);\r\n        this._submenus.push(submenu);\r\n        this._renderBorderElement($itemFrame);\r\n        return submenu\r\n    }\r\n    _getKeyboardListeners() {\r\n        return super._getKeyboardListeners().concat(this._visibleSubmenu)\r\n    }\r\n    _createSubmenu(node, $rootItem) {\r\n        var $submenuContainer = $(\"<div>\").addClass(DX_CONTEXT_MENU_CLASS).appendTo($rootItem);\r\n        var items = this._getChildNodes(node);\r\n        var result = this._createComponent($submenuContainer, Submenu, extend(this._getSubmenuOptions(), {\r\n            _dataAdapter: this._dataAdapter,\r\n            _parentKey: node.internalFields.key,\r\n            items: items,\r\n            onHoverStart: this._clearTimeouts.bind(this),\r\n            position: this.getSubmenuPosition($rootItem)\r\n        }));\r\n        this._attachSubmenuHandlers($rootItem, result);\r\n        return result\r\n    }\r\n    _getSubmenuOptions() {\r\n        var $submenuTarget = $(\"<div>\");\r\n        var isMenuHorizontal = this._isMenuHorizontal();\r\n        return {\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            target: $submenuTarget,\r\n            orientation: this.option(\"orientation\"),\r\n            selectionMode: this.option(\"selectionMode\"),\r\n            cssClass: this.option(\"cssClass\"),\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            animation: this.option(\"animation\"),\r\n            showSubmenuMode: this.option(\"showSubmenuMode\"),\r\n            displayExpr: this.option(\"displayExpr\"),\r\n            disabledExpr: this.option(\"disabledExpr\"),\r\n            selectedExpr: this.option(\"selectedExpr\"),\r\n            itemsExpr: this.option(\"itemsExpr\"),\r\n            onFocusedItemChanged: e => {\r\n                if (!e.component.option(\"visible\")) {\r\n                    return\r\n                }\r\n                this.option(\"focusedElement\", e.component.option(\"focusedElement\"))\r\n            },\r\n            onSelectionChanged: this._nestedItemOnSelectionChangedHandler.bind(this),\r\n            onItemClick: this._nestedItemOnItemClickHandler.bind(this),\r\n            onItemRendered: this._nestedItemOnItemRenderedHandler.bind(this),\r\n            onLeftFirstItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, PREVITEM_OPERATION),\r\n            onLeftLastItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION),\r\n            onCloseRootSubmenu: this._moveMainMenuFocus.bind(this, isMenuHorizontal ? PREVITEM_OPERATION : null),\r\n            onExpandLastSubmenu: isMenuHorizontal ? this._moveMainMenuFocus.bind(this, NEXTITEM_OPERATION) : null\r\n        }\r\n    }\r\n    _getShowFirstSubmenuMode() {\r\n        if (!this._isDesktopDevice()) {\r\n            return \"onClick\"\r\n        }\r\n        var optionValue = this.option(\"showFirstSubmenuMode\");\r\n        return isObject(optionValue) ? optionValue.name : optionValue\r\n    }\r\n    _moveMainMenuFocus(direction) {\r\n        var $items = this._getAvailableItems();\r\n        var itemCount = $items.length;\r\n        var $currentItem = $items.filter(\".\".concat(DX_MENU_ITEM_EXPANDED_CLASS)).eq(0);\r\n        var itemIndex = $items.index($currentItem);\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        itemIndex += direction === PREVITEM_OPERATION ? -1 : 1;\r\n        if (itemIndex >= itemCount) {\r\n            itemIndex = 0\r\n        } else if (itemIndex < 0) {\r\n            itemIndex = itemCount - 1\r\n        }\r\n        var $newItem = $items.eq(itemIndex);\r\n        this.option(\"focusedElement\", getPublicElement($newItem))\r\n    }\r\n    _nestedItemOnSelectionChangedHandler(args) {\r\n        var selectedItem = args.addedItems.length && args.addedItems[0];\r\n        var submenu = Submenu.getInstance(args.element);\r\n        var onSelectionChanged = this._actions.onSelectionChanged;\r\n        onSelectionChanged(args);\r\n        selectedItem && this._clearSelectionInSubmenus(selectedItem[0], submenu);\r\n        this._clearRootSelection();\r\n        this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem)\r\n    }\r\n    _clearSelectionInSubmenus(item, targetSubmenu) {\r\n        var cleanAllSubmenus = !arguments.length;\r\n        each(this._submenus, (index, submenu) => {\r\n            var $submenu = submenu._itemContainer();\r\n            var isOtherItem = !$submenu.is(targetSubmenu && targetSubmenu._itemContainer());\r\n            var $selectedItem = $submenu.find(\".\".concat(this._selectedItemClass()));\r\n            if (isOtherItem && $selectedItem.length || cleanAllSubmenus) {\r\n                $selectedItem.removeClass(this._selectedItemClass());\r\n                var selectedItemData = this._getItemData($selectedItem);\r\n                if (selectedItemData) {\r\n                    selectedItemData.selected = false\r\n                }\r\n                submenu._clearSelectedItems()\r\n            }\r\n        })\r\n    }\r\n    _clearRootSelection() {\r\n        var $prevSelectedItem = this.$element().find(\".\".concat(DX_MENU_ITEMS_CONTAINER_CLASS)).first().children().children().filter(\".\".concat(this._selectedItemClass()));\r\n        if ($prevSelectedItem.length) {\r\n            var prevSelectedItemData = this._getItemData($prevSelectedItem);\r\n            prevSelectedItemData.selected = false;\r\n            $prevSelectedItem.removeClass(this._selectedItemClass())\r\n        }\r\n    }\r\n    _nestedItemOnItemClickHandler(e) {\r\n        this._actions.onItemClick(e)\r\n    }\r\n    _nestedItemOnItemRenderedHandler(e) {\r\n        this._actions.onItemRendered(e)\r\n    }\r\n    _attachSubmenuHandlers($rootItem, submenu) {\r\n        var $submenuOverlayContent = submenu.getOverlayContent();\r\n        var submenus = $submenuOverlayContent.find(\".\".concat(DX_SUBMENU_CLASS));\r\n        var submenuMouseLeaveName = addNamespace(hoverEventEnd, this.NAME + \"_submenu\");\r\n        submenu.option({\r\n            onShowing: this._submenuOnShowingHandler.bind(this, $rootItem, submenu),\r\n            onShown: this._submenuOnShownHandler.bind(this, $rootItem, submenu),\r\n            onHiding: this._submenuOnHidingHandler.bind(this, $rootItem, submenu),\r\n            onHidden: this._submenuOnHiddenHandler.bind(this, $rootItem, submenu)\r\n        });\r\n        each(submenus, (index, submenu) => {\r\n            eventsEngine.off(submenu, submenuMouseLeaveName);\r\n            eventsEngine.on(submenu, submenuMouseLeaveName, null, this._submenuMouseLeaveHandler.bind(this, $rootItem))\r\n        })\r\n    }\r\n    _submenuOnShowingHandler($rootItem, submenu) {\r\n        var $border = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS));\r\n        this._actions.onSubmenuShowing({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        });\r\n        $border.show();\r\n        $rootItem.addClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n    }\r\n    _submenuOnShownHandler($rootItem, submenu) {\r\n        this._actions.onSubmenuShown({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    }\r\n    _submenuOnHidingHandler($rootItem, submenu, eventArgs) {\r\n        var $border = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS));\r\n        var args = eventArgs;\r\n        args.rootItem = getPublicElement($rootItem);\r\n        args.submenu = submenu;\r\n        this._actions.onSubmenuHiding(args);\r\n        eventArgs = args;\r\n        if (!eventArgs.cancel) {\r\n            if (this._visibleSubmenu === submenu) {\r\n                this._visibleSubmenu = null\r\n            }\r\n            $border.hide();\r\n            $rootItem.removeClass(DX_MENU_ITEM_EXPANDED_CLASS)\r\n        }\r\n    }\r\n    _submenuOnHiddenHandler($rootItem, submenu) {\r\n        this._actions.onSubmenuHidden({\r\n            rootItem: getPublicElement($rootItem),\r\n            submenu: submenu\r\n        })\r\n    }\r\n    _submenuMouseLeaveHandler($rootItem, eventArgs) {\r\n        var target = $(eventArgs.relatedTarget).parents(\".\".concat(DX_CONTEXT_MENU_CLASS))[0];\r\n        var contextMenu = this._getSubmenuByRootElement($rootItem).getOverlayContent()[0];\r\n        if (this.option(\"hideSubmenuOnMouseLeave\") && target !== contextMenu) {\r\n            this._clearTimeouts();\r\n            setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"))\r\n        }\r\n    }\r\n    _hideSubmenuAfterTimeout() {\r\n        if (!this._visibleSubmenu) {\r\n            return\r\n        }\r\n        var isRootItemHovered = $(this._visibleSubmenu.$element().context).hasClass(DX_STATE_HOVER_CLASS);\r\n        var isSubmenuItemHovered = this._visibleSubmenu.getOverlayContent().find(\".\".concat(DX_STATE_HOVER_CLASS)).length;\r\n        var hoveredElementFromSubMenu = this._visibleSubmenu.getOverlayContent().get(0).querySelector(\":hover\");\r\n        if (!hoveredElementFromSubMenu && !isSubmenuItemHovered && !isRootItemHovered) {\r\n            this._visibleSubmenu.hide()\r\n        }\r\n    }\r\n    _getSubmenuByRootElement($rootItem) {\r\n        if (!$rootItem) {\r\n            return false\r\n        }\r\n        var $submenu = $rootItem.children(\".\".concat(DX_CONTEXT_MENU_CLASS));\r\n        return $submenu.length && Submenu.getInstance($submenu)\r\n    }\r\n    getSubmenuPosition($rootItem) {\r\n        var isHorizontalMenu = this._isMenuHorizontal();\r\n        var submenuDirection = this.option(\"submenuDirection\").toLowerCase();\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var submenuPosition = {\r\n            collision: \"flip\",\r\n            of: $rootItem\r\n        };\r\n        switch (submenuDirection) {\r\n            case \"leftortop\":\r\n                submenuPosition.at = \"left top\";\r\n                submenuPosition.my = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                break;\r\n            case \"rightorbottom\":\r\n                submenuPosition.at = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                submenuPosition.my = \"left top\";\r\n                break;\r\n            default:\r\n                if (isHorizontalMenu) {\r\n                    submenuPosition.at = rtlEnabled ? \"right bottom\" : \"left bottom\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                } else {\r\n                    submenuPosition.at = rtlEnabled ? \"left top\" : \"right top\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                }\r\n        }\r\n        return submenuPosition\r\n    }\r\n    _renderBorderElement($item) {\r\n        $(\"<div>\").appendTo($item).addClass(DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS).hide()\r\n    }\r\n    _itemPointerDownHandler(e) {\r\n        var $target = $(e.target);\r\n        var $closestItem = $target.closest(this._itemElements());\r\n        if ($closestItem.hasClass(\"dx-menu-item-has-submenu\")) {\r\n            this.option(\"focusedElement\", null);\r\n            return\r\n        }\r\n        super._itemPointerDownHandler(e)\r\n    }\r\n    _hoverStartHandler(e) {\r\n        var mouseMoveEventName = addNamespace(pointerEvents.move, this.NAME);\r\n        var $item = this._getItemElementByEventArgs(e);\r\n        var node = this._dataAdapter.getNodeByItem(this._getItemData($item));\r\n        var isSelectionActive = isDefined(e.buttons) && 1 === e.buttons || !isDefined(e.buttons) && 1 === e.which;\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        eventsEngine.off($item, mouseMoveEventName);\r\n        if (!this._hasChildren(node)) {\r\n            this._showSubmenuTimer = setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"));\r\n            return\r\n        }\r\n        if (\"onHover\" === this._getShowFirstSubmenuMode() && !isSelectionActive) {\r\n            var submenu = this._getSubmenuByElement($item);\r\n            this._clearTimeouts();\r\n            if (!submenu.isOverlayVisible()) {\r\n                eventsEngine.on($item, mouseMoveEventName, this._itemMouseMoveHandler.bind(this));\r\n                this._showSubmenuTimer = this._getDelay(\"hide\")\r\n            }\r\n        }\r\n    }\r\n    _hoverEndHandler(eventArg) {\r\n        var $item = this._getItemElementByEventArgs(eventArg);\r\n        var relatedTarget = $(eventArg.relatedTarget);\r\n        super._hoverEndHandler(eventArg);\r\n        this._clearTimeouts();\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        if (relatedTarget.hasClass(DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS)) {\r\n            return\r\n        }\r\n        if (this.option(\"hideSubmenuOnMouseLeave\") && !relatedTarget.hasClass(DX_MENU_ITEMS_CONTAINER_CLASS)) {\r\n            this._hideSubmenuTimer = setTimeout(() => {\r\n                this._hideSubmenuAfterTimeout()\r\n            }, this._getDelay(\"hide\"))\r\n        }\r\n    }\r\n    _hideVisibleSubmenu() {\r\n        if (!this._visibleSubmenu) {\r\n            return false\r\n        }\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        return true\r\n    }\r\n    _showSubmenu($itemElement) {\r\n        var submenu = this._getSubmenuByElement($itemElement);\r\n        if (this._visibleSubmenu !== submenu) {\r\n            this._hideVisibleSubmenu()\r\n        }\r\n        if (submenu) {\r\n            this._clearTimeouts();\r\n            submenu.show();\r\n            this.option(\"focusedElement\", submenu.option(\"focusedElement\"))\r\n        }\r\n        this._visibleSubmenu = submenu;\r\n        this._hoveredRootItem = $itemElement\r\n    }\r\n    _hideSubmenu(submenu) {\r\n        submenu && submenu.hide();\r\n        if (this._visibleSubmenu === submenu) {\r\n            this._visibleSubmenu = null\r\n        }\r\n        this._hoveredRootItem = null\r\n    }\r\n    _itemMouseMoveHandler(e) {\r\n        if (e.pointers && e.pointers.length) {\r\n            return\r\n        }\r\n        var $item = $(e.currentTarget);\r\n        if (!isDefined(this._showSubmenuTimer)) {\r\n            return\r\n        }\r\n        this._clearTimeouts();\r\n        this._showSubmenuTimer = setTimeout(() => {\r\n            var submenu = this._getSubmenuByElement($item);\r\n            if (submenu && !submenu.isOverlayVisible()) {\r\n                this._showSubmenu($item)\r\n            }\r\n        }, this._getDelay(\"show\"))\r\n    }\r\n    _clearTimeouts() {\r\n        clearTimeout(this._hideSubmenuTimer);\r\n        clearTimeout(this._showSubmenuTimer)\r\n    }\r\n    _getSubmenuByElement($itemElement, itemData) {\r\n        var submenu = this._getSubmenuByRootElement($itemElement);\r\n        if (submenu) {\r\n            return submenu\r\n        } else {\r\n            itemData = itemData || this._getItemData($itemElement);\r\n            var node = this._dataAdapter.getNodeByItem(itemData);\r\n            return this._hasChildren(node) && this._renderSubmenuItems(node, $itemElement)\r\n        }\r\n    }\r\n    _updateSubmenuVisibilityOnClick(actionArgs) {\r\n        var args = actionArgs.args.length && actionArgs.args[0];\r\n        if (!args || this._disabledGetter(args.itemData)) {\r\n            return\r\n        }\r\n        var $itemElement = $(args.itemElement);\r\n        var currentSubmenu = this._getSubmenuByElement($itemElement, args.itemData);\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (this._visibleSubmenu) {\r\n            if (this._visibleSubmenu === currentSubmenu) {\r\n                if (\"onClick\" === this.option(\"showFirstSubmenuMode\")) {\r\n                    this._hideSubmenu(this._visibleSubmenu)\r\n                }\r\n                return\r\n            } else {\r\n                this._hideSubmenu(this._visibleSubmenu)\r\n            }\r\n        }\r\n        if (!currentSubmenu) {\r\n            return\r\n        }\r\n        if (!currentSubmenu.isOverlayVisible()) {\r\n            this._showSubmenu($itemElement);\r\n            return\r\n        }\r\n    }\r\n    _optionChanged(args) {\r\n        if (ACTIONS.indexOf(args.name) >= 0) {\r\n            this._initActions();\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"orientation\":\r\n            case \"submenuDirection\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showFirstSubmenuMode\":\r\n            case \"hideSubmenuOnMouseLeave\":\r\n                break;\r\n            case \"showSubmenuMode\":\r\n                this._changeSubmenusOption(args.name, args.value);\r\n                break;\r\n            case \"adaptivityEnabled\":\r\n                args.value ? this._initAdaptivity() : this._removeAdaptivity();\r\n                break;\r\n            case \"width\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(args.name, args.value);\r\n                    this._overlay.option(args.name, args.value)\r\n                }\r\n                super._optionChanged(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"animation\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(\"animationEnabled\", !!args.value)\r\n                }\r\n                super._optionChanged(args);\r\n                break;\r\n            default:\r\n                if (this._isAdaptivityEnabled() && (args.name === args.fullName || \"items\" === args.name)) {\r\n                    this._treeView.option(args.fullName, args.value)\r\n                }\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _changeSubmenusOption(name, value) {\r\n        each(this._submenus, (index, submenu) => {\r\n            submenu.option(name, value)\r\n        })\r\n    }\r\n    selectItem(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        super.selectItem(itemElement)\r\n    }\r\n    unselectItem(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        super.selectItem(itemElement)\r\n    }\r\n}\r\nregisterComponent(\"dxMenu\", Menu);\r\nexport default Menu;\r\n","/**\r\n * DevExtreme (esm/ui/menu.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Menu from \"./menu/ui.menu\";\r\nexport default Menu;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_row.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport Editor from \"../editor/editor\";\r\nimport Overlay from \"../overlay/ui.overlay\";\r\nimport Menu from \"../menu\";\r\nimport {\r\n    selectView\r\n} from \"../shared/accessibility\";\r\nvar OPERATION_ICONS = {\r\n    \"=\": \"filter-operation-equals\",\r\n    \"<>\": \"filter-operation-not-equals\",\r\n    \"<\": \"filter-operation-less\",\r\n    \"<=\": \"filter-operation-less-equal\",\r\n    \">\": \"filter-operation-greater\",\r\n    \">=\": \"filter-operation-greater-equal\",\r\n    default: \"filter-operation-default\",\r\n    notcontains: \"filter-operation-not-contains\",\r\n    contains: \"filter-operation-contains\",\r\n    startswith: \"filter-operation-starts-with\",\r\n    endswith: \"filter-operation-ends-with\",\r\n    between: \"filter-operation-between\"\r\n};\r\nvar OPERATION_DESCRIPTORS = {\r\n    \"=\": \"equal\",\r\n    \"<>\": \"notEqual\",\r\n    \"<\": \"lessThan\",\r\n    \"<=\": \"lessThanOrEqual\",\r\n    \">\": \"greaterThan\",\r\n    \">=\": \"greaterThanOrEqual\",\r\n    startswith: \"startsWith\",\r\n    contains: \"contains\",\r\n    notcontains: \"notContains\",\r\n    endswith: \"endsWith\",\r\n    between: \"between\"\r\n};\r\nvar FILTERING_TIMEOUT = 700;\r\nvar CORRECT_FILTER_RANGE_OVERLAY_WIDTH = 1;\r\nvar FILTER_ROW_CLASS = \"filter-row\";\r\nvar FILTER_RANGE_OVERLAY_CLASS = \"filter-range-overlay\";\r\nvar FILTER_RANGE_START_CLASS = \"filter-range-start\";\r\nvar FILTER_RANGE_END_CLASS = \"filter-range-end\";\r\nvar MENU_CLASS = \"dx-menu\";\r\nvar EDITOR_WITH_MENU_CLASS = \"dx-editor-with-menu\";\r\nvar EDITOR_CONTAINER_CLASS = \"dx-editor-container\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar FILTER_MENU = \"dx-filter-menu\";\r\nvar APPLY_BUTTON_CLASS = \"dx-apply-button\";\r\nvar HIGHLIGHT_OUTLINE_CLASS = \"dx-highlight-outline\";\r\nvar FOCUSED_CLASS = \"dx-focused\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FILTER_RANGE_CONTENT_CLASS = \"dx-filter-range-content\";\r\nvar FILTER_MODIFIED_CLASS = \"dx-filter-modified\";\r\nvar EDITORS_INPUT_SELECTOR = \"input:not([type='hidden'])\";\r\nvar BETWEEN_OPERATION_DATA_TYPES = [\"date\", \"datetime\", \"number\"];\r\n\r\nfunction isOnClickApplyFilterMode(that) {\r\n    return \"onClick\" === that.option(\"filterRow.applyFilter\")\r\n}\r\nvar ColumnHeadersViewFilterRowExtender = function() {\r\n    var getEditorInstance = function($editorContainer) {\r\n        var $editor = $editorContainer && $editorContainer.children();\r\n        var componentNames = $editor && $editor.data(\"dxComponents\");\r\n        var editor = componentNames && componentNames.length && $editor.data(componentNames[0]);\r\n        if (editor instanceof Editor) {\r\n            return editor\r\n        }\r\n    };\r\n    var getRangeTextByFilterValue = function(that, column) {\r\n        var result = \"\";\r\n        var rangeEnd = \"\";\r\n        var filterValue = getColumnFilterValue(that, column);\r\n        var formatOptions = gridCoreUtils.getFormatOptionsByColumn(column, \"filterRow\");\r\n        if (Array.isArray(filterValue)) {\r\n            result = gridCoreUtils.formatValue(filterValue[0], formatOptions);\r\n            rangeEnd = gridCoreUtils.formatValue(filterValue[1], formatOptions);\r\n            if (\"\" !== rangeEnd) {\r\n                result += \" - \" + rangeEnd\r\n            }\r\n        } else if (isDefined(filterValue)) {\r\n            result = gridCoreUtils.formatValue(filterValue, formatOptions)\r\n        }\r\n        return result\r\n    };\r\n\r\n    function getColumnFilterValue(that, column) {\r\n        if (column) {\r\n            return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedFilterValue ? column.bufferedFilterValue : column.filterValue\r\n        }\r\n    }\r\n    var getColumnSelectedFilterOperation = function(that, column) {\r\n        if (column) {\r\n            return isOnClickApplyFilterMode(that) && void 0 !== column.bufferedSelectedFilterOperation ? column.bufferedSelectedFilterOperation : column.selectedFilterOperation\r\n        }\r\n    };\r\n    var getFilterValue = function(that, columnIndex, $editorContainer) {\r\n        var column = that._columnsController.columnOption(columnIndex);\r\n        var filterValue = getColumnFilterValue(that, column);\r\n        var isFilterRange = $editorContainer.closest(\".\" + that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).length;\r\n        var isRangeStart = $editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS));\r\n        if (filterValue && Array.isArray(filterValue) && \"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n            if (isRangeStart) {\r\n                return filterValue[0]\r\n            } else {\r\n                return filterValue[1]\r\n            }\r\n        }\r\n        return !isFilterRange && function(filterValue, column) {\r\n            if (column && BETWEEN_OPERATION_DATA_TYPES.indexOf(column.dataType) >= 0 && Array.isArray(filterValue)) {\r\n                return false\r\n            }\r\n            return void 0 !== filterValue\r\n        }(filterValue, column) ? filterValue : null\r\n    };\r\n    var updateFilterValue = function(that, options) {\r\n        var value = \"\" === options.value ? null : options.value;\r\n        var $editorContainer = options.container;\r\n        var column = that._columnsController.columnOption(options.column.index);\r\n        var filterValue = getFilterValue(that, column.index, $editorContainer);\r\n        if (!isDefined(filterValue) && !isDefined(value)) {\r\n            return\r\n        }\r\n        that._applyFilterViewController.setHighLight($editorContainer, filterValue !== value);\r\n        var columnOptionName = isOnClickApplyFilterMode(that) ? \"bufferedFilterValue\" : \"filterValue\";\r\n        var normalizedValue = function(that, filterValue, column, $editorContainer) {\r\n            if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                var columnFilterValue = getColumnFilterValue(that, column);\r\n                if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\r\n                    return [filterValue, Array.isArray(columnFilterValue) ? columnFilterValue[1] : void 0]\r\n                } else {\r\n                    return [Array.isArray(columnFilterValue) ? columnFilterValue[0] : columnFilterValue, filterValue]\r\n                }\r\n            }\r\n            return filterValue\r\n        }(that, value, column, $editorContainer);\r\n        var isBetween = \"between\" === getColumnSelectedFilterOperation(that, column);\r\n        var notFireEvent = options.notFireEvent || isBetween && Array.isArray(normalizedValue) && normalizedValue.indexOf(void 0) >= 0;\r\n        that._columnsController.columnOption(column.index, columnOptionName, normalizedValue, notFireEvent)\r\n    };\r\n    return {\r\n        _updateEditorValue: function(column, $editorContainer) {\r\n            var editor = getEditorInstance($editorContainer);\r\n            editor && editor.option(\"value\", getFilterValue(this, column.index, $editorContainer))\r\n        },\r\n        _columnOptionChanged: function(e) {\r\n            var optionNames = e.optionNames;\r\n            var $cell;\r\n            var $editorContainer;\r\n            var $editorRangeElements;\r\n            var $menu;\r\n            if (gridCoreUtils.checkChanges(optionNames, [\"filterValue\", \"bufferedFilterValue\", \"selectedFilterOperation\", \"bufferedSelectedFilterOperation\"]) && void 0 !== e.columnIndex) {\r\n                var visibleIndex = this._columnsController.getVisibleIndex(e.columnIndex);\r\n                var column = this._columnsController.columnOption(e.columnIndex);\r\n                $cell = this._getCellElement(this.element().find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS)).index(), visibleIndex) || $();\r\n                $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n                if (optionNames.filterValue || optionNames.bufferedFilterValue) {\r\n                    this._updateEditorValue(column, $editorContainer);\r\n                    var overlayInstance = $cell.find(\".\" + this.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).data(\"dxOverlay\");\r\n                    if (overlayInstance) {\r\n                        $editorRangeElements = overlayInstance.$content().find(\".\" + EDITOR_CONTAINER_CLASS);\r\n                        this._updateEditorValue(column, $editorRangeElements.first());\r\n                        this._updateEditorValue(column, $editorRangeElements.last())\r\n                    }\r\n                    if (!overlayInstance || !overlayInstance.option(\"visible\")) {\r\n                        this._updateFilterRangeContent($cell, getRangeTextByFilterValue(this, column))\r\n                    }\r\n                }\r\n                if (optionNames.selectedFilterOperation || optionNames.bufferedSelectedFilterOperation) {\r\n                    if (visibleIndex >= 0 && column) {\r\n                        $menu = $cell.find(\".\" + MENU_CLASS);\r\n                        if ($menu.length) {\r\n                            this._updateFilterOperationChooser($menu, column, $editorContainer);\r\n                            if (\"between\" === getColumnSelectedFilterOperation(this, column)) {\r\n                                this._renderFilterRangeContent($cell, column)\r\n                            } else if ($editorContainer.find(\".\" + FILTER_RANGE_CONTENT_CLASS).length) {\r\n                                this._renderEditor($editorContainer, this._getEditorOptions($editorContainer, column));\r\n                                this._hideFilterRange()\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return\r\n            }\r\n            this.callBase(e)\r\n        },\r\n        _renderCore: function() {\r\n            this._filterRangeOverlayInstance = null;\r\n            this.callBase.apply(this, arguments)\r\n        },\r\n        _resizeCore: function() {\r\n            this.callBase.apply(this, arguments);\r\n            this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.repaint()\r\n        },\r\n        isFilterRowVisible: function() {\r\n            return this._isElementVisible(this.option(\"filterRow\"))\r\n        },\r\n        isVisible: function() {\r\n            return this.callBase() || this.isFilterRowVisible()\r\n        },\r\n        init: function() {\r\n            this.callBase();\r\n            this._applyFilterViewController = this.getController(\"applyFilter\")\r\n        },\r\n        _initFilterRangeOverlay: function($cell, column) {\r\n            var that = this;\r\n            var sharedData = {};\r\n            var $editorContainer = $cell.find(\".dx-editor-container\");\r\n            var $overlay = $(\"<div>\").addClass(that.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS)).appendTo($cell);\r\n            return that._createComponent($overlay, Overlay, {\r\n                height: \"auto\",\r\n                shading: false,\r\n                showTitle: false,\r\n                focusStateEnabled: false,\r\n                closeOnOutsideClick: true,\r\n                copyRootClassesToWrapper: true,\r\n                _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n                animation: false,\r\n                position: {\r\n                    my: \"top\",\r\n                    at: \"top\",\r\n                    of: $editorContainer.length && $editorContainer || $cell,\r\n                    offset: \"0 -1\"\r\n                },\r\n                contentTemplate: function(contentElement) {\r\n                    var editorOptions;\r\n                    var $editor = $(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_START_CLASS)).appendTo(contentElement);\r\n                    column = that._columnsController.columnOption(column.index);\r\n                    editorOptions = that._getEditorOptions($editor, column);\r\n                    editorOptions.sharedData = sharedData;\r\n                    that._renderEditor($editor, editorOptions);\r\n                    eventsEngine.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", (function(e) {\r\n                        var $prevElement = $cell.find(\"[tabindex]\").not(e.target).first();\r\n                        if (\"tab\" === normalizeKeyName(e) && e.shiftKey) {\r\n                            e.preventDefault();\r\n                            that._hideFilterRange();\r\n                            if (!$prevElement.length) {\r\n                                $prevElement = $cell.prev().find(\"[tabindex]\").last()\r\n                            }\r\n                            eventsEngine.trigger($prevElement, \"focus\")\r\n                        }\r\n                    }));\r\n                    $editor = $(\"<div>\").addClass(EDITOR_CONTAINER_CLASS + \" \" + that.addWidgetPrefix(FILTER_RANGE_END_CLASS)).appendTo(contentElement);\r\n                    editorOptions = that._getEditorOptions($editor, column);\r\n                    editorOptions.sharedData = sharedData;\r\n                    that._renderEditor($editor, editorOptions);\r\n                    eventsEngine.on($editor.find(EDITORS_INPUT_SELECTOR), \"keydown\", (function(e) {\r\n                        if (\"tab\" === normalizeKeyName(e) && !e.shiftKey) {\r\n                            e.preventDefault();\r\n                            that._hideFilterRange();\r\n                            eventsEngine.trigger($cell.next().find(\"[tabindex]\").first(), \"focus\")\r\n                        }\r\n                    }));\r\n                    return $(contentElement).addClass(that.getWidgetContainerClass())\r\n                },\r\n                onShown: function(e) {\r\n                    var $editor = e.component.$content().find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n                    eventsEngine.trigger($editor.find(EDITORS_INPUT_SELECTOR), \"focus\")\r\n                },\r\n                onHidden: function() {\r\n                    column = that._columnsController.columnOption(column.index);\r\n                    $cell.find(\".\" + MENU_CLASS).parent().addClass(EDITOR_WITH_MENU_CLASS);\r\n                    if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                        that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column));\r\n                        that.component.updateDimensions()\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        _updateFilterRangeOverlay: function(options) {\r\n            var overlayInstance = this._filterRangeOverlayInstance;\r\n            overlayInstance && overlayInstance.option(options)\r\n        },\r\n        _showFilterRange: function($cell, column) {\r\n            var $overlay = $cell.children(\".\" + this.addWidgetPrefix(FILTER_RANGE_OVERLAY_CLASS));\r\n            var overlayInstance = $overlay.length && $overlay.data(\"dxOverlay\");\r\n            if (!overlayInstance && column) {\r\n                overlayInstance = this._initFilterRangeOverlay($cell, column)\r\n            }\r\n            if (!overlayInstance.option(\"visible\")) {\r\n                this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.hide();\r\n                this._filterRangeOverlayInstance = overlayInstance;\r\n                this._updateFilterRangeOverlay({\r\n                    width: getOuterWidth($cell, true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\r\n                });\r\n                this._filterRangeOverlayInstance && this._filterRangeOverlayInstance.show()\r\n            }\r\n        },\r\n        _hideFilterRange: function() {\r\n            var overlayInstance = this._filterRangeOverlayInstance;\r\n            overlayInstance && overlayInstance.hide()\r\n        },\r\n        getFilterRangeOverlayInstance: function() {\r\n            return this._filterRangeOverlayInstance\r\n        },\r\n        _createRow: function(row) {\r\n            var $row = this.callBase(row);\r\n            if (\"filter\" === row.rowType) {\r\n                $row.addClass(this.addWidgetPrefix(FILTER_ROW_CLASS));\r\n                if (!this.option(\"useLegacyKeyboardNavigation\")) {\r\n                    eventsEngine.on($row, \"keydown\", event => selectView(\"filterRow\", this, event))\r\n                }\r\n            }\r\n            return $row\r\n        },\r\n        _getRows: function() {\r\n            var result = this.callBase();\r\n            if (this.isFilterRowVisible()) {\r\n                result.push({\r\n                    rowType: \"filter\"\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        _renderFilterCell: function(cell, options) {\r\n            var column = options.column;\r\n            var $cell = $(cell);\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                this.setAria(\"describedby\", column.headerId, $cell)\r\n            }\r\n            this.setAria(\"label\", messageLocalization.format(\"dxDataGrid-ariaFilterCell\"), $cell);\r\n            $cell.addClass(EDITOR_CELL_CLASS);\r\n            var $container = $(\"<div>\").appendTo($cell);\r\n            var $editorContainer = $(\"<div>\").addClass(EDITOR_CONTAINER_CLASS).appendTo($container);\r\n            if (\"between\" === getColumnSelectedFilterOperation(this, column)) {\r\n                this._renderFilterRangeContent($cell, column)\r\n            } else {\r\n                var editorOptions = this._getEditorOptions($editorContainer, column);\r\n                this._renderEditor($editorContainer, editorOptions)\r\n            }\r\n            var alignment = column.alignment;\r\n            if (alignment && \"center\" !== alignment) {\r\n                $cell.find(EDITORS_INPUT_SELECTOR).first().css(\"textAlign\", column.alignment)\r\n            }\r\n            if (column.filterOperations && column.filterOperations.length) {\r\n                this._renderFilterOperationChooser($container, column, $editorContainer)\r\n            }\r\n        },\r\n        _renderCellContent: function($cell, options) {\r\n            var that = this;\r\n            var column = options.column;\r\n            if (\"filter\" === options.rowType) {\r\n                if (column.command) {\r\n                    $cell.html(\"&nbsp;\")\r\n                } else if (column.allowFiltering) {\r\n                    that.renderTemplate($cell, that._renderFilterCell.bind(that), options).done(() => {\r\n                        that._updateCell($cell, options)\r\n                    });\r\n                    return\r\n                }\r\n            }\r\n            that.callBase($cell, options)\r\n        },\r\n        _getEditorOptions: function($editorContainer, column) {\r\n            var that = this;\r\n            var accessibilityOptions = {\r\n                editorOptions: {\r\n                    inputAttr: that._getFilterInputAccessibilityAttributes(column)\r\n                }\r\n            };\r\n            var result = extend(accessibilityOptions, column, {\r\n                value: getFilterValue(that, column.index, $editorContainer),\r\n                parentType: \"filterRow\",\r\n                showAllText: that.option(\"filterRow.showAllText\"),\r\n                updateValueTimeout: \"onClick\" === that.option(\"filterRow.applyFilter\") ? 0 : FILTERING_TIMEOUT,\r\n                width: null,\r\n                setValue: function(value, notFireEvent) {\r\n                    updateFilterValue(that, {\r\n                        column: column,\r\n                        value: value,\r\n                        container: $editorContainer,\r\n                        notFireEvent: notFireEvent\r\n                    })\r\n                }\r\n            });\r\n            if (\"between\" === getColumnSelectedFilterOperation(that, column)) {\r\n                if ($editorContainer.hasClass(that.addWidgetPrefix(FILTER_RANGE_START_CLASS))) {\r\n                    result.placeholder = that.option(\"filterRow.betweenStartText\")\r\n                } else {\r\n                    result.placeholder = that.option(\"filterRow.betweenEndText\")\r\n                }\r\n            }\r\n            return result\r\n        },\r\n        _getFilterInputAccessibilityAttributes: function(column) {\r\n            var columnAriaLabel = messageLocalization.format(\"dxDataGrid-ariaFilterCell\");\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                return {\r\n                    \"aria-label\": columnAriaLabel,\r\n                    \"aria-describedby\": column.headerId\r\n                }\r\n            }\r\n            return {\r\n                \"aria-label\": columnAriaLabel\r\n            }\r\n        },\r\n        _renderEditor: function($editorContainer, options) {\r\n            $editorContainer.empty();\r\n            return this.getController(\"editorFactory\").createEditor($(\"<div>\").appendTo($editorContainer), options)\r\n        },\r\n        _renderFilterRangeContent: function($cell, column) {\r\n            var that = this;\r\n            var $editorContainer = $cell.find(\".\" + EDITOR_CONTAINER_CLASS).first();\r\n            $editorContainer.empty();\r\n            var $filterRangeContent = $(\"<div>\").addClass(FILTER_RANGE_CONTENT_CLASS).attr(\"tabindex\", this.option(\"tabIndex\"));\r\n            eventsEngine.on($filterRangeContent, \"focusin\", (function() {\r\n                that._showFilterRange($cell, column)\r\n            }));\r\n            $filterRangeContent.appendTo($editorContainer);\r\n            that._updateFilterRangeContent($cell, getRangeTextByFilterValue(that, column))\r\n        },\r\n        _updateFilterRangeContent: function($cell, value) {\r\n            var $filterRangeContent = $cell.find(\".\" + FILTER_RANGE_CONTENT_CLASS);\r\n            if ($filterRangeContent.length) {\r\n                if (\"\" === value) {\r\n                    $filterRangeContent.html(\"&nbsp;\")\r\n                } else {\r\n                    $filterRangeContent.text(value)\r\n                }\r\n            }\r\n        },\r\n        _updateFilterOperationChooser: function($menu, column, $editorContainer) {\r\n            var that = this;\r\n            var isCellWasFocused;\r\n            var restoreFocus = function() {\r\n                var menu = Menu.getInstance($menu);\r\n                menu && menu.option(\"focusedElement\", null);\r\n                isCellWasFocused && that._focusEditor($editorContainer)\r\n            };\r\n            that._createComponent($menu, Menu, {\r\n                integrationOptions: {},\r\n                activeStateEnabled: false,\r\n                selectionMode: \"single\",\r\n                cssClass: that.getWidgetContainerClass() + \" \" + CELL_FOCUS_DISABLED_CLASS + \" \" + FILTER_MENU,\r\n                showFirstSubmenuMode: \"onHover\",\r\n                hideSubmenuOnMouseLeave: true,\r\n                items: [{\r\n                    disabled: column.filterOperations && column.filterOperations.length ? false : true,\r\n                    icon: OPERATION_ICONS[getColumnSelectedFilterOperation(that, column) || \"default\"],\r\n                    selectable: false,\r\n                    items: that._getFilterOperationMenuItems(column)\r\n                }],\r\n                onItemClick: function(properties) {\r\n                    var selectedFilterOperation = properties.itemData.name;\r\n                    var columnSelectedFilterOperation = getColumnSelectedFilterOperation(that, column);\r\n                    var notFocusEditor = false;\r\n                    var isOnClickMode = isOnClickApplyFilterMode(that);\r\n                    var options = {};\r\n                    if (properties.itemData.items || selectedFilterOperation && selectedFilterOperation === columnSelectedFilterOperation) {\r\n                        return\r\n                    }\r\n                    if (selectedFilterOperation) {\r\n                        options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = selectedFilterOperation;\r\n                        if (\"between\" === selectedFilterOperation || \"between\" === columnSelectedFilterOperation) {\r\n                            notFocusEditor = \"between\" === selectedFilterOperation;\r\n                            options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null\r\n                        }\r\n                    } else {\r\n                        options[isOnClickMode ? \"bufferedFilterValue\" : \"filterValue\"] = null;\r\n                        options[isOnClickMode ? \"bufferedSelectedFilterOperation\" : \"selectedFilterOperation\"] = column.defaultSelectedFilterOperation || null\r\n                    }\r\n                    that._columnsController.columnOption(column.index, options);\r\n                    that._applyFilterViewController.setHighLight($editorContainer, true);\r\n                    if (!selectedFilterOperation) {\r\n                        var editor = getEditorInstance($editorContainer);\r\n                        if (editor && \"dxDateBox\" === editor.NAME && !editor.option(\"isValid\")) {\r\n                            editor.reset();\r\n                            editor.option(\"isValid\", true)\r\n                        }\r\n                    }\r\n                    if (!notFocusEditor) {\r\n                        that._focusEditor($editorContainer)\r\n                    } else {\r\n                        that._showFilterRange($editorContainer.closest(\".\" + EDITOR_CELL_CLASS), column)\r\n                    }\r\n                },\r\n                onSubmenuShown: function() {\r\n                    isCellWasFocused = that._isEditorFocused($editorContainer);\r\n                    that.getController(\"editorFactory\").loseFocus()\r\n                },\r\n                onSubmenuHiding: function() {\r\n                    eventsEngine.trigger($menu, \"blur\");\r\n                    restoreFocus()\r\n                },\r\n                onContentReady: function(e) {\r\n                    eventsEngine.on($menu, \"blur\", () => {\r\n                        var menu = e.component;\r\n                        menu._hideSubmenu(menu._visibleSubmenu);\r\n                        restoreFocus()\r\n                    })\r\n                },\r\n                rtlEnabled: that.option(\"rtlEnabled\")\r\n            })\r\n        },\r\n        _isEditorFocused: function($container) {\r\n            return $container.hasClass(FOCUSED_CLASS) || $container.parents(\".\" + FOCUSED_CLASS).length\r\n        },\r\n        _focusEditor: function($container) {\r\n            this.getController(\"editorFactory\").focus($container);\r\n            eventsEngine.trigger($container.find(EDITORS_INPUT_SELECTOR), \"focus\")\r\n        },\r\n        _renderFilterOperationChooser: function($container, column, $editorContainer) {\r\n            var $menu;\r\n            if (this.option(\"filterRow.showOperationChooser\")) {\r\n                $container.addClass(EDITOR_WITH_MENU_CLASS);\r\n                $menu = $(\"<div>\").prependTo($container);\r\n                this._updateFilterOperationChooser($menu, column, $editorContainer)\r\n            }\r\n        },\r\n        _getFilterOperationMenuItems: function(column) {\r\n            var that = this;\r\n            var result = [{}];\r\n            var filterRowOptions = that.option(\"filterRow\");\r\n            var operationDescriptions = filterRowOptions && filterRowOptions.operationDescriptions || {};\r\n            if (column.filterOperations && column.filterOperations.length) {\r\n                var availableFilterOperations = column.filterOperations.filter((function(value) {\r\n                    return isDefined(OPERATION_DESCRIPTORS[value])\r\n                }));\r\n                result = map(availableFilterOperations, (function(value) {\r\n                    var descriptionName = OPERATION_DESCRIPTORS[value];\r\n                    return {\r\n                        name: value,\r\n                        selected: (getColumnSelectedFilterOperation(that, column) || column.defaultFilterOperation) === value,\r\n                        text: operationDescriptions[descriptionName],\r\n                        icon: OPERATION_ICONS[value]\r\n                    }\r\n                }));\r\n                result.push({\r\n                    name: null,\r\n                    text: filterRowOptions && filterRowOptions.resetOperationText,\r\n                    icon: OPERATION_ICONS.default\r\n                })\r\n            }\r\n            return result\r\n        },\r\n        optionChanged: function(args) {\r\n            switch (args.name) {\r\n                case \"filterRow\":\r\n                case \"showColumnLines\":\r\n                    this._invalidate(true, true);\r\n                    args.handled = true;\r\n                    break;\r\n                default:\r\n                    this.callBase(args)\r\n            }\r\n        }\r\n    }\r\n}();\r\nvar DataControllerFilterRowExtender = {\r\n    skipCalculateColumnFilters: function() {\r\n        return false\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        if (this.skipCalculateColumnFilters()) {\r\n            return this.callBase()\r\n        }\r\n        var filters = [this.callBase()];\r\n        var columns = this._columnsController.getVisibleColumns(null, true);\r\n        each(columns, (function() {\r\n            if (this.allowFiltering && this.calculateFilterExpression && isDefined(this.filterValue)) {\r\n                var filter = this.createFilterExpression(this.filterValue, this.selectedFilterOperation || this.defaultFilterOperation, \"filterRow\");\r\n                filters.push(filter)\r\n            }\r\n        }));\r\n        return gridCoreUtils.combineFilters(filters)\r\n    }\r\n};\r\nvar ApplyFilterViewController = modules.ViewController.inherit({\r\n    _getHeaderPanel: function() {\r\n        if (!this._headerPanel) {\r\n            this._headerPanel = this.getView(\"headerPanel\")\r\n        }\r\n        return this._headerPanel\r\n    },\r\n    setHighLight: function($element, value) {\r\n        if (isOnClickApplyFilterMode(this)) {\r\n            $element && $element.toggleClass(HIGHLIGHT_OUTLINE_CLASS, value) && $element.closest(\".\" + EDITOR_CELL_CLASS).toggleClass(FILTER_MODIFIED_CLASS, value);\r\n            this._getHeaderPanel().enableApplyButton(value)\r\n        }\r\n    },\r\n    applyFilter: function() {\r\n        var columnsController = this.getController(\"columns\");\r\n        var columns = columnsController.getColumns();\r\n        columnsController.beginUpdate();\r\n        for (var i = 0; i < columns.length; i++) {\r\n            var column = columns[i];\r\n            if (void 0 !== column.bufferedFilterValue) {\r\n                columnsController.columnOption(i, \"filterValue\", column.bufferedFilterValue);\r\n                column.bufferedFilterValue = void 0\r\n            }\r\n            if (void 0 !== column.bufferedSelectedFilterOperation) {\r\n                columnsController.columnOption(i, \"selectedFilterOperation\", column.bufferedSelectedFilterOperation);\r\n                column.bufferedSelectedFilterOperation = void 0\r\n            }\r\n        }\r\n        columnsController.endUpdate();\r\n        this.removeHighLights()\r\n    },\r\n    removeHighLights: function() {\r\n        if (isOnClickApplyFilterMode(this)) {\r\n            var columnHeadersViewElement = this.getView(\"columnHeadersView\").element();\r\n            columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + HIGHLIGHT_OUTLINE_CLASS).removeClass(HIGHLIGHT_OUTLINE_CLASS);\r\n            columnHeadersViewElement.find(\".\" + this.addWidgetPrefix(FILTER_ROW_CLASS) + \" .\" + FILTER_MODIFIED_CLASS).removeClass(FILTER_MODIFIED_CLASS);\r\n            this._getHeaderPanel().enableApplyButton(false)\r\n        }\r\n    }\r\n});\r\nexport var filterRowModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterRow: {\r\n                visible: false,\r\n                showOperationChooser: true,\r\n                showAllText: messageLocalization.format(\"dxDataGrid-filterRowShowAllText\"),\r\n                resetOperationText: messageLocalization.format(\"dxDataGrid-filterRowResetOperationText\"),\r\n                applyFilter: \"auto\",\r\n                applyFilterText: messageLocalization.format(\"dxDataGrid-applyFilterText\"),\r\n                operationDescriptions: {\r\n                    equal: messageLocalization.format(\"dxDataGrid-filterRowOperationEquals\"),\r\n                    notEqual: messageLocalization.format(\"dxDataGrid-filterRowOperationNotEquals\"),\r\n                    lessThan: messageLocalization.format(\"dxDataGrid-filterRowOperationLess\"),\r\n                    lessThanOrEqual: messageLocalization.format(\"dxDataGrid-filterRowOperationLessOrEquals\"),\r\n                    greaterThan: messageLocalization.format(\"dxDataGrid-filterRowOperationGreater\"),\r\n                    greaterThanOrEqual: messageLocalization.format(\"dxDataGrid-filterRowOperationGreaterOrEquals\"),\r\n                    startsWith: messageLocalization.format(\"dxDataGrid-filterRowOperationStartsWith\"),\r\n                    contains: messageLocalization.format(\"dxDataGrid-filterRowOperationContains\"),\r\n                    notContains: messageLocalization.format(\"dxDataGrid-filterRowOperationNotContains\"),\r\n                    endsWith: messageLocalization.format(\"dxDataGrid-filterRowOperationEndsWith\"),\r\n                    between: messageLocalization.format(\"dxDataGrid-filterRowOperationBetween\"),\r\n                    isBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsBlank\"),\r\n                    isNotBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\r\n                },\r\n                betweenStartText: messageLocalization.format(\"dxDataGrid-filterRowOperationBetweenStartText\"),\r\n                betweenEndText: messageLocalization.format(\"dxDataGrid-filterRowOperationBetweenEndText\")\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        applyFilter: ApplyFilterViewController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterRowExtender,\r\n            columnsResizer: {\r\n                _startResizing: function() {\r\n                    var that = this;\r\n                    that.callBase.apply(that, arguments);\r\n                    if (that.isResizing()) {\r\n                        var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\r\n                        if (overlayInstance) {\r\n                            var cellIndex = overlayInstance.$element().closest(\"td\").index();\r\n                            if (cellIndex === that._targetPoint.columnIndex || cellIndex === that._targetPoint.columnIndex + 1) {\r\n                                overlayInstance.$content().hide()\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _endResizing: function() {\r\n                    var that = this;\r\n                    var $cell;\r\n                    if (that.isResizing()) {\r\n                        var overlayInstance = that._columnHeadersView.getFilterRangeOverlayInstance();\r\n                        if (overlayInstance) {\r\n                            $cell = overlayInstance.$element().closest(\"td\");\r\n                            that._columnHeadersView._updateFilterRangeOverlay({\r\n                                width: getOuterWidth($cell, true) + CORRECT_FILTER_RANGE_OVERLAY_WIDTH\r\n                            });\r\n                            overlayInstance.$content().show()\r\n                        }\r\n                    }\r\n                    that.callBase.apply(that, arguments)\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFilterRowExtender,\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    var filterItem = this._prepareFilterItem(items);\r\n                    return filterItem.concat(items)\r\n                },\r\n                _prepareFilterItem: function() {\r\n                    var that = this;\r\n                    var filterItem = [];\r\n                    if (that._isShowApplyFilterButton()) {\r\n                        var hintText = that.option(\"filterRow.applyFilterText\");\r\n                        var columns = that._columnsController.getColumns();\r\n                        var disabled = !columns.filter((function(column) {\r\n                            return void 0 !== column.bufferedFilterValue\r\n                        })).length;\r\n                        var toolbarItem = {\r\n                            widget: \"dxButton\",\r\n                            options: {\r\n                                icon: \"apply-filter\",\r\n                                disabled: disabled,\r\n                                onClick: function() {\r\n                                    that._applyFilterViewController.applyFilter()\r\n                                },\r\n                                hint: hintText,\r\n                                text: hintText,\r\n                                onInitialized: function(e) {\r\n                                    $(e.element).addClass(that._getToolbarButtonClass(APPLY_BUTTON_CLASS))\r\n                                }\r\n                            },\r\n                            showText: \"inMenu\",\r\n                            name: \"applyFilterButton\",\r\n                            location: \"after\",\r\n                            locateInMenu: \"auto\",\r\n                            sortIndex: 10\r\n                        };\r\n                        filterItem.push(toolbarItem)\r\n                    }\r\n                    return filterItem\r\n                },\r\n                _isShowApplyFilterButton: function() {\r\n                    var filterRowOptions = this.option(\"filterRow\");\r\n                    return filterRowOptions && filterRowOptions.visible && \"onClick\" === filterRowOptions.applyFilter\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._dataController = this.getController(\"data\");\r\n                    this._applyFilterViewController = this.getController(\"applyFilter\")\r\n                },\r\n                enableApplyButton: function(value) {\r\n                    this.setToolbarItemDisabled(\"applyFilterButton\", !value)\r\n                },\r\n                isVisible: function() {\r\n                    return this.callBase() || this._isShowApplyFilterButton()\r\n                },\r\n                optionChanged: function(args) {\r\n                    if (\"filterRow\" === args.name) {\r\n                        this._invalidate();\r\n                        args.handled = true\r\n                    } else {\r\n                        this.callBase(args)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.filter_row.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    filterRowModule\r\n} from \"../grid_core/ui.grid_core.filter_row\";\r\ncore.registerModule(\"filterRow\", filterRowModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.header_filter_core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    isDefined,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport Popup from \"../popup\";\r\nimport TreeView from \"../tree_view\";\r\nimport List from \"../list_light\";\r\nimport \"../list/modules/search\";\r\nimport \"../list/modules/selection\";\r\nvar HEADER_FILTER_CLASS = \"dx-header-filter\";\r\nvar HEADER_FILTER_MENU_CLASS = \"dx-header-filter-menu\";\r\nvar DEFAULT_SEARCH_EXPRESSION = \"text\";\r\n\r\nfunction resetChildrenItemSelection(items) {\r\n    items = items || [];\r\n    for (var i = 0; i < items.length; i++) {\r\n        items[i].selected = false;\r\n        resetChildrenItemSelection(items[i].items)\r\n    }\r\n}\r\n\r\nfunction updateSelectAllState(e, filterValues) {\r\n    if (e.component.option(\"searchValue\")) {\r\n        return\r\n    }\r\n    var selectAllCheckBox = $(e.element).find(\".dx-list-select-all-checkbox\").data(\"dxCheckBox\");\r\n    if (selectAllCheckBox && filterValues && filterValues.length) {\r\n        selectAllCheckBox.option(\"value\", void 0)\r\n    }\r\n}\r\n\r\nfunction isSearchEnabled(that, options) {\r\n    var headerFilter = options.headerFilter;\r\n    if (headerFilter && isDefined(headerFilter.allowSearch)) {\r\n        return headerFilter.allowSearch\r\n    }\r\n    return that.option(\"headerFilter.allowSearch\")\r\n}\r\nexport function updateHeaderFilterItemSelectionState(item, filterValuesMatch, isExcludeFilter) {\r\n    if (filterValuesMatch ^ isExcludeFilter) {\r\n        item.selected = true;\r\n        if (isExcludeFilter && item.items) {\r\n            for (var j = 0; j < item.items.length; j++) {\r\n                if (!item.items[j].selected) {\r\n                    item.selected = void 0;\r\n                    break\r\n                }\r\n            }\r\n        }\r\n    } else if (isExcludeFilter || item.selected) {\r\n        item.selected = false;\r\n        resetChildrenItemSelection(item.items)\r\n    }\r\n}\r\nexport var HeaderFilterView = modules.View.inherit({\r\n    getPopupContainer: function() {\r\n        return this._popupContainer\r\n    },\r\n    getListContainer: function() {\r\n        return this._listContainer\r\n    },\r\n    applyHeaderFilter: function(options) {\r\n        var list = this.getListContainer();\r\n        var searchValue = list.option(\"searchValue\");\r\n        var isSelectAll = !searchValue && !options.isFilterBuilder && list.$element().find(\".dx-checkbox\").eq(0).hasClass(\"dx-checkbox-checked\");\r\n        var filterValues = [];\r\n        if (!isSelectAll) {\r\n            if (\"tree\" === options.type) {\r\n                if (options.filterType) {\r\n                    options.filterType = \"include\"\r\n                }! function fillSelectedItemKeys(filterValues, items, isExclude) {\r\n                    each(items, (function(_, item) {\r\n                        if (void 0 !== item.selected && !!item.selected ^ isExclude) {\r\n                            var node = list._getNode(item);\r\n                            var hasChildren = list._hasChildren(node);\r\n                            var hasChildrenWithSelection = hasChildren && item.items && item.items.some(item => item.selected);\r\n                            if (!searchValue || !hasChildrenWithSelection) {\r\n                                filterValues.push(item.value);\r\n                                return\r\n                            }\r\n                        }\r\n                        if (item.items && item.items.length) {\r\n                            fillSelectedItemKeys(filterValues, item.items, isExclude)\r\n                        }\r\n                    }))\r\n                }(filterValues, list.option(\"items\"), false);\r\n                options.filterValues = filterValues\r\n            }\r\n        } else {\r\n            if (\"tree\" === options.type) {\r\n                options.filterType = \"exclude\"\r\n            }\r\n            if (Array.isArray(options.filterValues)) {\r\n                options.filterValues = []\r\n            }\r\n        }\r\n        if (options.filterValues && !options.filterValues.length) {\r\n            options.filterValues = null\r\n        }\r\n        options.apply();\r\n        this.hideHeaderFilterMenu()\r\n    },\r\n    showHeaderFilterMenu: function($columnElement, options) {\r\n        if (options) {\r\n            this._initializePopupContainer(options);\r\n            var popupContainer = this.getPopupContainer();\r\n            this.hideHeaderFilterMenu();\r\n            this.updatePopup($columnElement, options);\r\n            popupContainer.show()\r\n        }\r\n    },\r\n    hideHeaderFilterMenu: function() {\r\n        var headerFilterMenu = this.getPopupContainer();\r\n        headerFilterMenu && headerFilterMenu.hide()\r\n    },\r\n    updatePopup: function($element, options) {\r\n        var showColumnLines = this.option(\"showColumnLines\");\r\n        var alignment = \"right\" === options.alignment ^ !showColumnLines ? \"left\" : \"right\";\r\n        if (this._popupContainer) {\r\n            this._cleanPopupContent();\r\n            this._popupContainer.option(\"position\", {\r\n                my: alignment + \" top\",\r\n                at: alignment + \" bottom\",\r\n                of: $element,\r\n                collision: \"flip fit\"\r\n            })\r\n        }\r\n    },\r\n    _getSearchExpr: function(options) {\r\n        var lookup = options.lookup;\r\n        var useDefaultSearchExpr = options.useDefaultSearchExpr;\r\n        var headerFilterDataSource = options.headerFilter && options.headerFilter.dataSource;\r\n        if (useDefaultSearchExpr || isDefined(headerFilterDataSource) && !isFunction(headerFilterDataSource)) {\r\n            return DEFAULT_SEARCH_EXPRESSION\r\n        }\r\n        if (lookup) {\r\n            return lookup.displayExpr || \"this\"\r\n        }\r\n        if (options.dataSource) {\r\n            var group = options.dataSource.group;\r\n            if (Array.isArray(group) && group.length > 0) {\r\n                return group[0].selector\r\n            } else if (isFunction(group) && !options.remoteFiltering) {\r\n                return group\r\n            }\r\n        }\r\n        return options.dataField || options.selector\r\n    },\r\n    _cleanPopupContent: function() {\r\n        this._popupContainer && this._popupContainer.$content().empty()\r\n    },\r\n    _initializePopupContainer: function(options) {\r\n        var that = this;\r\n        var $element = that.element();\r\n        var headerFilterOptions = that.option(\"headerFilter\");\r\n        var width = options.headerFilter && options.headerFilter.width || headerFilterOptions && headerFilterOptions.width;\r\n        var height = options.headerFilter && options.headerFilter.height || headerFilterOptions && headerFilterOptions.height;\r\n        var dxPopupOptions = {\r\n            width: width,\r\n            height: height,\r\n            visible: false,\r\n            shading: false,\r\n            showTitle: false,\r\n            showCloseButton: false,\r\n            hideOnParentScroll: false,\r\n            dragEnabled: false,\r\n            closeOnOutsideClick: true,\r\n            focusStateEnabled: false,\r\n            copyRootClassesToWrapper: true,\r\n            _ignoreCopyRootClassesToWrapperDeprecation: true,\r\n            toolbarItems: [{\r\n                toolbar: \"bottom\",\r\n                location: \"after\",\r\n                widget: \"dxButton\",\r\n                options: {\r\n                    text: headerFilterOptions.texts.ok,\r\n                    onClick: function() {\r\n                        that.applyHeaderFilter(options)\r\n                    }\r\n                }\r\n            }, {\r\n                toolbar: \"bottom\",\r\n                location: \"after\",\r\n                widget: \"dxButton\",\r\n                options: {\r\n                    text: headerFilterOptions.texts.cancel,\r\n                    onClick: function() {\r\n                        that.hideHeaderFilterMenu()\r\n                    }\r\n                }\r\n            }],\r\n            resizeEnabled: true,\r\n            onShowing: function(e) {\r\n                e.component.$content().parent().addClass(\"dx-dropdowneditor-overlay\");\r\n                that._initializeListContainer(options);\r\n                options.onShowing && options.onShowing(e)\r\n            },\r\n            onShown: function() {\r\n                that.getListContainer().focus()\r\n            },\r\n            onHidden: options.onHidden,\r\n            onInitialized: function(e) {\r\n                var component = e.component;\r\n                component.option(\"animation\", component._getDefaultOptions().animation)\r\n            }\r\n        };\r\n        if (!isDefined(that._popupContainer)) {\r\n            that._popupContainer = that._createComponent($element, Popup, dxPopupOptions)\r\n        } else {\r\n            that._popupContainer.option(dxPopupOptions)\r\n        }\r\n    },\r\n    _initializeListContainer: function(options) {\r\n        var that = this;\r\n        var $content = that._popupContainer.$content();\r\n        var widgetOptions = {\r\n            searchEnabled: isSearchEnabled(that, options),\r\n            searchTimeout: that.option(\"headerFilter.searchTimeout\"),\r\n            searchMode: options.headerFilter && options.headerFilter.searchMode || \"\",\r\n            dataSource: options.dataSource,\r\n            onContentReady: function() {\r\n                that.renderCompleted.fire()\r\n            },\r\n            itemTemplate: function(data, _, element) {\r\n                var $element = $(element);\r\n                if (options.encodeHtml) {\r\n                    return $element.text(data.text)\r\n                }\r\n                return $element.html(data.text)\r\n            }\r\n        };\r\n\r\n        function onOptionChanged(e) {\r\n            if (\"searchValue\" === e.fullName && !options.isFilterBuilder && false !== that.option(\"headerFilter.hideSelectAllOnSearch\")) {\r\n                if (\"tree\" === options.type) {\r\n                    e.component.option(\"showCheckBoxesMode\", e.value ? \"normal\" : \"selectAll\")\r\n                } else {\r\n                    e.component.option(\"selectionMode\", e.value ? \"multiple\" : \"all\")\r\n                }\r\n            }\r\n        }\r\n        if (\"tree\" === options.type) {\r\n            that._listContainer = that._createComponent($(\"<div>\").appendTo($content), TreeView, extend(widgetOptions, {\r\n                showCheckBoxesMode: options.isFilterBuilder ? \"normal\" : \"selectAll\",\r\n                onOptionChanged: onOptionChanged,\r\n                keyExpr: \"id\"\r\n            }))\r\n        } else {\r\n            that._listContainer = that._createComponent($(\"<div>\").appendTo($content), List, extend(widgetOptions, {\r\n                searchExpr: that._getSearchExpr(options),\r\n                pageLoadMode: \"scrollBottom\",\r\n                showSelectionControls: true,\r\n                selectionMode: options.isFilterBuilder ? \"multiple\" : \"all\",\r\n                onOptionChanged: onOptionChanged,\r\n                onSelectionChanged: function(e) {\r\n                    var items = e.component.option(\"items\");\r\n                    var selectedItems = e.component.option(\"selectedItems\");\r\n                    if (!e.component._selectedItemsUpdating && !e.component.option(\"searchValue\") && !options.isFilterBuilder) {\r\n                        var filterValues = options.filterValues || [];\r\n                        var isExclude = \"exclude\" === options.filterType;\r\n                        if (0 === selectedItems.length && items.length && (filterValues.length <= 1 || isExclude && filterValues.length === items.length - 1)) {\r\n                            options.filterType = \"include\";\r\n                            options.filterValues = []\r\n                        } else if (selectedItems.length === items.length) {\r\n                            options.filterType = \"exclude\";\r\n                            options.filterValues = []\r\n                        }\r\n                    }\r\n                    each(items, (function(index, item) {\r\n                        var selected = gridCoreUtils.getIndexByKey(item, selectedItems, null) >= 0;\r\n                        var oldSelected = !!item.selected;\r\n                        if (oldSelected !== selected) {\r\n                            item.selected = selected;\r\n                            options.filterValues = options.filterValues || [];\r\n                            var filterValueIndex = gridCoreUtils.getIndexByKey(item.value, options.filterValues, null);\r\n                            if (filterValueIndex >= 0) {\r\n                                options.filterValues.splice(filterValueIndex, 1)\r\n                            }\r\n                            if (selected ^ \"exclude\" === options.filterType) {\r\n                                options.filterValues.push(item.value)\r\n                            }\r\n                        }\r\n                    }));\r\n                    updateSelectAllState(e, options.filterValues)\r\n                },\r\n                onContentReady: function(e) {\r\n                    var component = e.component;\r\n                    var items = component.option(\"items\");\r\n                    var selectedItems = [];\r\n                    each(items, (function() {\r\n                        if (this.selected) {\r\n                            selectedItems.push(this)\r\n                        }\r\n                    }));\r\n                    component._selectedItemsUpdating = true;\r\n                    component.option(\"selectedItems\", selectedItems);\r\n                    component._selectedItemsUpdating = false;\r\n                    updateSelectAllState(e, options.filterValues)\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    _renderCore: function() {\r\n        this.element().addClass(HEADER_FILTER_MENU_CLASS)\r\n    }\r\n});\r\nexport var allowHeaderFiltering = function(column) {\r\n    return isDefined(column.allowHeaderFiltering) ? column.allowHeaderFiltering : column.allowFiltering\r\n};\r\nexport var headerFilterMixin = {\r\n    _applyColumnState: function(options) {\r\n        var $headerFilterIndicator;\r\n        var rootElement = options.rootElement;\r\n        var column = options.column;\r\n        if (\"headerFilter\" === options.name) {\r\n            rootElement.find(\".\" + HEADER_FILTER_CLASS).remove();\r\n            if (allowHeaderFiltering(column)) {\r\n                $headerFilterIndicator = this.callBase(options).toggleClass(\"dx-header-filter-empty\", this._isHeaderFilterEmpty(column));\r\n                if (!this.option(\"useLegacyKeyboardNavigation\")) {\r\n                    $headerFilterIndicator.attr(\"tabindex\", this.option(\"tabindex\") || 0)\r\n                }\r\n            }\r\n            return $headerFilterIndicator\r\n        }\r\n        return this.callBase(options)\r\n    },\r\n    _isHeaderFilterEmpty: function(column) {\r\n        return !column.filterValues || !column.filterValues.length\r\n    },\r\n    _getIndicatorClassName: function(name) {\r\n        if (\"headerFilter\" === name) {\r\n            return HEADER_FILTER_CLASS\r\n        }\r\n        return this.callBase(name)\r\n    },\r\n    _renderIndicator: function(options) {\r\n        var $container = options.container;\r\n        var $indicator = options.indicator;\r\n        if (\"headerFilter\" === options.name) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\");\r\n            if ($container.children().length && (!rtlEnabled && \"right\" === options.columnAlignment || rtlEnabled && \"left\" === options.columnAlignment)) {\r\n                $container.prepend($indicator);\r\n                return\r\n            }\r\n        }\r\n        this.callBase(options)\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"headerFilter\" === args.name) {\r\n            var requireReady = \"columnHeadersView\" === this.name;\r\n            this._invalidate(requireReady, requireReady);\r\n            args.handled = true\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.header_filter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport filterUtils from \"../shared/filtering\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    headerFilterMixin,\r\n    HeaderFilterView,\r\n    updateHeaderFilterItemSelectionState,\r\n    allowHeaderFiltering\r\n} from \"./ui.grid_core.header_filter_core\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined,\r\n    isObject,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    normalizeDataSourceOptions\r\n} from \"../../data/data_source/utils\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    restoreFocus\r\n} from \"../shared/accessibility\";\r\nimport dataQuery from \"../../data/query\";\r\nimport storeHelper from \"../../data/store_helper\";\r\nvar DATE_INTERVAL_FORMATS = {\r\n    month: function(value) {\r\n        return dateLocalization.getMonthNames()[value - 1]\r\n    },\r\n    quarter: function(value) {\r\n        return dateLocalization.format(new Date(2e3, 3 * value - 1), \"quarter\")\r\n    }\r\n};\r\n\r\nfunction ungroupUTCDates(items, dateParts, dates) {\r\n    dateParts = dateParts || [];\r\n    dates = dates || [];\r\n    items.forEach(item => {\r\n        if (isDefined(item.key)) {\r\n            var isMonthPart = 1 === dateParts.length;\r\n            dateParts.push(isMonthPart ? item.key - 1 : item.key);\r\n            if (item.items) {\r\n                ungroupUTCDates(item.items, dateParts, dates)\r\n            } else {\r\n                var date = new Date(Date.UTC.apply(Date, dateParts));\r\n                dates.push(date)\r\n            }\r\n            dateParts.pop()\r\n        } else {\r\n            dates.push(null)\r\n        }\r\n    });\r\n    return dates\r\n}\r\n\r\nfunction convertDataFromUTCToLocal(data, column) {\r\n    var dates = ungroupUTCDates(data);\r\n    var query = dataQuery(dates);\r\n    var group = gridCoreUtils.getHeaderFilterGroupParameters(_extends({}, column, {\r\n        calculateCellValue: date => date\r\n    }));\r\n    return storeHelper.queryByOptions(query, {\r\n        group: group\r\n    }).toArray()\r\n}\r\n\r\nfunction isUTCFormat(format) {\r\n    return \"Z\" === (null === format || void 0 === format ? void 0 : format.slice(-1)) || \"'Z'\" === (null === format || void 0 === format ? void 0 : format.slice(-3))\r\n}\r\nvar HeaderFilterController = modules.ViewController.inherit({\r\n    init: function() {\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._dataController = this.getController(\"data\");\r\n        this._headerFilterView = this.getView(\"headerFilterView\")\r\n    },\r\n    _updateSelectedState: function(items, column) {\r\n        var i = items.length;\r\n        var isExclude = \"exclude\" === column.filterType;\r\n        while (i--) {\r\n            var item = items[i];\r\n            if (\"items\" in items[i]) {\r\n                this._updateSelectedState(items[i].items, column)\r\n            }\r\n            updateHeaderFilterItemSelectionState(item, gridCoreUtils.getIndexByKey(items[i].value, column.filterValues, null) > -1, isExclude)\r\n        }\r\n    },\r\n    _normalizeGroupItem: function(item, currentLevel, options) {\r\n        var value;\r\n        var displayValue;\r\n        var path = options.path;\r\n        var valueSelector = options.valueSelector;\r\n        var displaySelector = options.displaySelector;\r\n        var column = options.column;\r\n        if (valueSelector && displaySelector) {\r\n            value = valueSelector(item);\r\n            displayValue = displaySelector(item)\r\n        } else {\r\n            value = item.key;\r\n            displayValue = value\r\n        }\r\n        if (!isObject(item)) {\r\n            item = {}\r\n        } else {\r\n            item = extend({}, item)\r\n        }\r\n        path.push(value);\r\n        if (1 === path.length) {\r\n            item.value = path[0]\r\n        } else {\r\n            item.value = path.join(\"/\")\r\n        }\r\n        item.text = this.getHeaderItemText(displayValue, column, currentLevel, options.headerFilterOptions);\r\n        return item\r\n    },\r\n    getHeaderItemText: function(displayValue, column, currentLevel, headerFilterOptions) {\r\n        var text = gridCoreUtils.formatValue(displayValue, function(value, column, currentLevel) {\r\n            var groupInterval = filterUtils.getGroupInterval(column);\r\n            var result = gridCoreUtils.getFormatOptionsByColumn(column, \"headerFilter\");\r\n            if (groupInterval) {\r\n                result.groupInterval = groupInterval[currentLevel];\r\n                if (gridCoreUtils.isDateType(column.dataType)) {\r\n                    result.format = DATE_INTERVAL_FORMATS[groupInterval[currentLevel]]\r\n                } else if (\"number\" === column.dataType) {\r\n                    result.getDisplayFormat = function() {\r\n                        var formatOptions = {\r\n                            format: column.format,\r\n                            target: \"headerFilter\"\r\n                        };\r\n                        var firstValueText = gridCoreUtils.formatValue(value, formatOptions);\r\n                        var secondValue = value + groupInterval[currentLevel];\r\n                        var secondValueText = gridCoreUtils.formatValue(secondValue, formatOptions);\r\n                        return firstValueText && secondValueText ? firstValueText + \" - \" + secondValueText : \"\"\r\n                    }\r\n                }\r\n            }\r\n            return result\r\n        }(displayValue, column, currentLevel));\r\n        if (!text) {\r\n            text = headerFilterOptions.texts.emptyValue\r\n        }\r\n        return text\r\n    },\r\n    _processGroupItems: function(groupItems, currentLevel, path, options) {\r\n        var displaySelector;\r\n        var valueSelector;\r\n        var column = options.column;\r\n        var lookup = column.lookup;\r\n        var level = options.level;\r\n        path = path || [];\r\n        currentLevel = currentLevel || 0;\r\n        if (lookup) {\r\n            displaySelector = compileGetter(lookup.displayExpr);\r\n            valueSelector = compileGetter(lookup.valueExpr)\r\n        }\r\n        for (var i = 0; i < groupItems.length; i++) {\r\n            groupItems[i] = this._normalizeGroupItem(groupItems[i], currentLevel, {\r\n                column: options.column,\r\n                headerFilterOptions: options.headerFilterOptions,\r\n                displaySelector: displaySelector,\r\n                valueSelector: valueSelector,\r\n                path: path\r\n            });\r\n            if (\"items\" in groupItems[i]) {\r\n                if (currentLevel === level || !isDefined(groupItems[i].value)) {\r\n                    delete groupItems[i].items\r\n                } else {\r\n                    this._processGroupItems(groupItems[i].items, currentLevel + 1, path, options)\r\n                }\r\n            }\r\n            path.pop()\r\n        }\r\n    },\r\n    getDataSource: function(column) {\r\n        var _column$headerFilter;\r\n        var that = this;\r\n        var dataSource = that._dataController.dataSource();\r\n        var remoteGrouping = null === dataSource || void 0 === dataSource ? void 0 : dataSource.remoteOperations().grouping;\r\n        var group = gridCoreUtils.getHeaderFilterGroupParameters(column, remoteGrouping);\r\n        var headerFilterDataSource = null === (_column$headerFilter = column.headerFilter) || void 0 === _column$headerFilter ? void 0 : _column$headerFilter.dataSource;\r\n        var headerFilterOptions = that.option(\"headerFilter\");\r\n        var isLookup = false;\r\n        var options = {\r\n            component: that.component\r\n        };\r\n        if (!dataSource) {\r\n            return\r\n        }\r\n        if (isDefined(headerFilterDataSource) && !isFunction(headerFilterDataSource)) {\r\n            options.dataSource = normalizeDataSourceOptions(headerFilterDataSource)\r\n        } else if (column.lookup) {\r\n            isLookup = true;\r\n            var lookupDataSourceOptions;\r\n            if (column.lookup.items) {\r\n                lookupDataSourceOptions = column.lookup.items\r\n            } else {\r\n                lookupDataSourceOptions = column.lookup.dataSource;\r\n                if (isFunction(lookupDataSourceOptions) && !variableWrapper.isWrapped(lookupDataSourceOptions)) {\r\n                    lookupDataSourceOptions = lookupDataSourceOptions({})\r\n                }\r\n            }\r\n            options.dataSource = normalizeDataSourceOptions(lookupDataSourceOptions)\r\n        } else {\r\n            var cutoffLevel = Array.isArray(group) ? group.length - 1 : 0;\r\n            that._currentColumn = column;\r\n            var filter = that._dataController.getCombinedFilter();\r\n            that._currentColumn = null;\r\n            options.dataSource = {\r\n                filter: filter,\r\n                group: group,\r\n                useDefaultSearch: true,\r\n                load: function(options) {\r\n                    var d = new Deferred;\r\n                    options.dataField = column.dataField || column.name;\r\n                    dataSource.load(options).done((function(data) {\r\n                        var convertUTCDates = remoteGrouping && isUTCFormat(column.serializationFormat) && cutoffLevel > 3;\r\n                        if (convertUTCDates) {\r\n                            data = convertDataFromUTCToLocal(data, column)\r\n                        }\r\n                        that._processGroupItems(data, null, null, {\r\n                            level: cutoffLevel,\r\n                            column: column,\r\n                            headerFilterOptions: headerFilterOptions\r\n                        });\r\n                        d.resolve(data)\r\n                    })).fail(d.reject);\r\n                    return d\r\n                }\r\n            }\r\n        }\r\n        if (isFunction(headerFilterDataSource)) {\r\n            headerFilterDataSource.call(column, options)\r\n        }\r\n        var origPostProcess = options.dataSource.postProcess;\r\n        options.dataSource.postProcess = function(data) {\r\n            var items = data;\r\n            if (isLookup) {\r\n                if (0 === this.pageIndex() && !this.searchValue()) {\r\n                    items = items.slice(0);\r\n                    items.unshift(null)\r\n                }\r\n                that._processGroupItems(items, null, null, {\r\n                    level: 0,\r\n                    column: column,\r\n                    headerFilterOptions: headerFilterOptions\r\n                })\r\n            }\r\n            items = origPostProcess && origPostProcess.call(this, items) || items;\r\n            that._updateSelectedState(items, column);\r\n            return items\r\n        };\r\n        return options.dataSource\r\n    },\r\n    getCurrentColumn: function() {\r\n        return this._currentColumn\r\n    },\r\n    showHeaderFilterMenu: function(columnIndex, isGroupPanel) {\r\n        var columnsController = this._columnsController;\r\n        var column = extend(true, {}, this._columnsController.getColumns()[columnIndex]);\r\n        if (column) {\r\n            var visibleIndex = columnsController.getVisibleIndex(columnIndex);\r\n            var view = isGroupPanel ? this.getView(\"headerPanel\") : this.getView(\"columnHeadersView\");\r\n            var $columnElement = $columnElement || view.getColumnElements().eq(isGroupPanel ? column.groupIndex : visibleIndex);\r\n            this.showHeaderFilterMenuBase({\r\n                columnElement: $columnElement,\r\n                column: column,\r\n                applyFilter: true,\r\n                apply: function() {\r\n                    columnsController.columnOption(columnIndex, {\r\n                        filterValues: this.filterValues,\r\n                        filterType: this.filterType\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    },\r\n    showHeaderFilterMenuBase: function(options) {\r\n        var that = this;\r\n        var column = options.column;\r\n        if (column) {\r\n            var groupInterval = filterUtils.getGroupInterval(column);\r\n            var dataSource = that._dataController.dataSource();\r\n            var remoteFiltering = dataSource && dataSource.remoteOperations().filtering;\r\n            extend(options, column, {\r\n                type: groupInterval && groupInterval.length > 1 ? \"tree\" : \"list\",\r\n                remoteFiltering: remoteFiltering,\r\n                onShowing: function(e) {\r\n                    var dxResizableInstance = e.component.$overlayContent().dxResizable(\"instance\");\r\n                    dxResizableInstance && dxResizableInstance.option(\"onResizeEnd\", (function(e) {\r\n                        var columnsController = that.getController(\"columns\");\r\n                        var headerFilterByColumn = columnsController.columnOption(options.dataField, \"headerFilter\");\r\n                        headerFilterByColumn = headerFilterByColumn || {};\r\n                        headerFilterByColumn.width = e.width;\r\n                        headerFilterByColumn.height = e.height;\r\n                        columnsController.columnOption(options.dataField, \"headerFilter\", headerFilterByColumn, true)\r\n                    }))\r\n                },\r\n                onHidden: () => restoreFocus(this)\r\n            });\r\n            options.dataSource = that.getDataSource(options);\r\n            if (options.isFilterBuilder) {\r\n                options.dataSource.filter = null;\r\n                options.alignment = \"right\"\r\n            }\r\n            that._headerFilterView.showHeaderFilterMenu(options.columnElement, options)\r\n        }\r\n    },\r\n    hideHeaderFilterMenu: function() {\r\n        this._headerFilterView.hideHeaderFilterMenu()\r\n    }\r\n});\r\nvar ColumnHeadersViewHeaderFilterExtender = extend({}, headerFilterMixin, {\r\n    _renderCellContent: function($cell, options) {\r\n        var $headerFilterIndicator;\r\n        var column = options.column;\r\n        if (!column.command && allowHeaderFiltering(column) && this.option(\"headerFilter.visible\") && \"header\" === options.rowType) {\r\n            $headerFilterIndicator = this._applyColumnState({\r\n                name: \"headerFilter\",\r\n                rootElement: $cell,\r\n                column: column,\r\n                showColumnLines: this.option(\"showColumnLines\")\r\n            });\r\n            $headerFilterIndicator && this._subscribeToIndicatorEvent($headerFilterIndicator, column, \"headerFilter\")\r\n        }\r\n        this.callBase($cell, options)\r\n    },\r\n    _subscribeToIndicatorEvent: function($indicator, column, indicatorName) {\r\n        var that = this;\r\n        if (\"headerFilter\" === indicatorName) {\r\n            eventsEngine.on($indicator, clickEventName, that.createAction((function(e) {\r\n                e.event.stopPropagation();\r\n                that.getController(\"headerFilter\").showHeaderFilterMenu(column.index, false)\r\n            })))\r\n        }\r\n    },\r\n    _updateIndicator: function($cell, column, indicatorName) {\r\n        var $indicator = this.callBase($cell, column, indicatorName);\r\n        $indicator && this._subscribeToIndicatorEvent($indicator, column, indicatorName)\r\n    },\r\n    _updateHeaderFilterIndicators: function() {\r\n        if (this.option(\"headerFilter.visible\")) {\r\n            this._updateIndicators(\"headerFilter\")\r\n        }\r\n    },\r\n    _needUpdateFilterIndicators: function() {\r\n        return true\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var optionNames = e.optionNames;\r\n        if (gridCoreUtils.checkChanges(optionNames, [\"filterValues\", \"filterType\"])) {\r\n            if (this._needUpdateFilterIndicators()) {\r\n                this._updateHeaderFilterIndicators()\r\n            }\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    }\r\n});\r\nvar HeaderPanelHeaderFilterExtender = extend({}, headerFilterMixin, {\r\n    _createGroupPanelItem: function($rootElement, groupColumn) {\r\n        var that = this;\r\n        var $item = that.callBase.apply(that, arguments);\r\n        var $headerFilterIndicator;\r\n        if (!groupColumn.command && allowHeaderFiltering(groupColumn) && that.option(\"headerFilter.visible\")) {\r\n            $headerFilterIndicator = that._applyColumnState({\r\n                name: \"headerFilter\",\r\n                rootElement: $item,\r\n                column: {\r\n                    alignment: getDefaultAlignment(that.option(\"rtlEnabled\")),\r\n                    filterValues: groupColumn.filterValues,\r\n                    allowHeaderFiltering: true\r\n                },\r\n                showColumnLines: true\r\n            });\r\n            $headerFilterIndicator && eventsEngine.on($headerFilterIndicator, clickEventName, that.createAction((function(e) {\r\n                var event = e.event;\r\n                event.stopPropagation();\r\n                that.getController(\"headerFilter\").showHeaderFilterMenu(groupColumn.index, true)\r\n            })))\r\n        }\r\n        return $item\r\n    }\r\n});\r\nexport function invertFilterExpression(filter) {\r\n    return [\"!\", filter]\r\n}\r\nvar DataControllerFilterRowExtender = {\r\n    skipCalculateColumnFilters: function() {\r\n        return false\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        if (this.skipCalculateColumnFilters()) {\r\n            return this.callBase()\r\n        }\r\n        var filters = [this.callBase()];\r\n        var columns = this._columnsController.getVisibleColumns(null, true);\r\n        var headerFilterController = this.getController(\"headerFilter\");\r\n        var currentColumn = headerFilterController.getCurrentColumn();\r\n        each(columns, (function(_, column) {\r\n            var filter;\r\n            if (currentColumn && currentColumn.index === column.index) {\r\n                return\r\n            }\r\n            if (allowHeaderFiltering(column) && column.calculateFilterExpression && Array.isArray(column.filterValues) && column.filterValues.length) {\r\n                var filterValues = [];\r\n                each(column.filterValues, (function(_, filterValue) {\r\n                    if (Array.isArray(filterValue)) {\r\n                        filter = filterValue\r\n                    } else {\r\n                        if (column.deserializeValue && !gridCoreUtils.isDateType(column.dataType) && \"number\" !== column.dataType) {\r\n                            filterValue = column.deserializeValue(filterValue)\r\n                        }\r\n                        filter = column.createFilterExpression(filterValue, \"=\", \"headerFilter\")\r\n                    }\r\n                    if (filter) {\r\n                        filter.columnIndex = column.index\r\n                    }\r\n                    filterValues.push(filter)\r\n                }));\r\n                filterValues = gridCoreUtils.combineFilters(filterValues, \"or\");\r\n                filters.push(\"exclude\" === column.filterType ? [\"!\", filterValues] : filterValues)\r\n            }\r\n        }));\r\n        return gridCoreUtils.combineFilters(filters)\r\n    }\r\n};\r\nexport var headerFilterModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            headerFilter: {\r\n                visible: false,\r\n                width: 252,\r\n                height: 325,\r\n                allowSearch: false,\r\n                searchTimeout: 500,\r\n                texts: {\r\n                    emptyValue: messageLocalization.format(\"dxDataGrid-headerFilterEmptyValue\"),\r\n                    ok: messageLocalization.format(\"dxDataGrid-headerFilterOK\"),\r\n                    cancel: messageLocalization.format(\"dxDataGrid-headerFilterCancel\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        headerFilter: HeaderFilterController\r\n    },\r\n    views: {\r\n        headerFilterView: HeaderFilterView\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterRowExtender\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewHeaderFilterExtender,\r\n            headerPanel: HeaderPanelHeaderFilterExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.header_filter.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    headerFilterModule\r\n} from \"../grid_core/ui.grid_core.header_filter\";\r\ncore.registerModule(\"headerFilter\", headerFilterModule);\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder/between.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nvar FILTER_BUILDER_RANGE_CLASS = \"dx-filterbuilder-range\";\r\nvar FILTER_BUILDER_RANGE_START_CLASS = FILTER_BUILDER_RANGE_CLASS + \"-start\";\r\nvar FILTER_BUILDER_RANGE_END_CLASS = FILTER_BUILDER_RANGE_CLASS + \"-end\";\r\nvar FILTER_BUILDER_RANGE_SEPARATOR_CLASS = FILTER_BUILDER_RANGE_CLASS + \"-separator\";\r\nvar SEPARATOR = \"\\u2013\";\r\n\r\nfunction editorTemplate(conditionInfo, container) {\r\n    var $editorStart = $(\"<div>\").addClass(FILTER_BUILDER_RANGE_START_CLASS);\r\n    var $editorEnd = $(\"<div>\").addClass(FILTER_BUILDER_RANGE_END_CLASS);\r\n    var values = conditionInfo.value || [];\r\n    var getStartValue = function(values) {\r\n        return values && values.length > 0 ? values[0] : null\r\n    };\r\n    var getEndValue = function(values) {\r\n        return values && 2 === values.length ? values[1] : null\r\n    };\r\n    container.append($editorStart);\r\n    container.append($(\"<span>\").addClass(FILTER_BUILDER_RANGE_SEPARATOR_CLASS).text(SEPARATOR));\r\n    container.append($editorEnd);\r\n    container.addClass(FILTER_BUILDER_RANGE_CLASS);\r\n    this._editorFactory.createEditor.call(this, $editorStart, extend({}, conditionInfo.field, conditionInfo, {\r\n        value: getStartValue(values),\r\n        parentType: \"filterBuilder\",\r\n        setValue: function(value) {\r\n            values = [value, getEndValue(values)];\r\n            conditionInfo.setValue(values)\r\n        }\r\n    }));\r\n    this._editorFactory.createEditor.call(this, $editorEnd, extend({}, conditionInfo.field, conditionInfo, {\r\n        value: getEndValue(values),\r\n        parentType: \"filterBuilder\",\r\n        setValue: function(value) {\r\n            values = [getStartValue(values), value];\r\n            conditionInfo.setValue(values)\r\n        }\r\n    }))\r\n}\r\nexport function getConfig(caption, context) {\r\n    return {\r\n        name: \"between\",\r\n        caption: caption,\r\n        icon: \"range\",\r\n        valueSeparator: SEPARATOR,\r\n        dataTypes: [\"number\", \"date\", \"datetime\"],\r\n        editorTemplate: editorTemplate.bind(context),\r\n        notForLookup: true\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder/ui.filter_operations_dictionary.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nvar OPERATION_ICONS = {\r\n    \"=\": \"equal\",\r\n    \"<>\": \"notequal\",\r\n    \"<\": \"less\",\r\n    \"<=\": \"lessorequal\",\r\n    \">\": \"greater\",\r\n    \">=\": \"greaterorequal\",\r\n    notcontains: \"doesnotcontain\",\r\n    contains: \"contains\",\r\n    startswith: \"startswith\",\r\n    endswith: \"endswith\",\r\n    isblank: \"isblank\",\r\n    isnotblank: \"isnotblank\"\r\n};\r\nvar OPERATION_NAME = {\r\n    \"=\": \"equal\",\r\n    \"<>\": \"notEqual\",\r\n    \"<\": \"lessThan\",\r\n    \"<=\": \"lessThanOrEqual\",\r\n    \">\": \"greaterThan\",\r\n    \">=\": \"greaterThanOrEqual\",\r\n    startswith: \"startsWith\",\r\n    contains: \"contains\",\r\n    notcontains: \"notContains\",\r\n    endswith: \"endsWith\",\r\n    isblank: \"isBlank\",\r\n    isnotblank: \"isNotBlank\",\r\n    between: \"between\"\r\n};\r\nexport default {\r\n    getIconByFilterOperation: function(filterOperation) {\r\n        return OPERATION_ICONS[filterOperation]\r\n    },\r\n    getNameByFilterOperation: function(filterOperation) {\r\n        return OPERATION_NAME[filterOperation]\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder/utils.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    errors as dataErrors\r\n} from \"../../data/errors\";\r\nimport {\r\n    isDefined,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport filterUtils from \"../shared/filtering\";\r\nimport formatHelper from \"../../format_helper\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    captionize\r\n} from \"../../core/utils/inflector\";\r\nimport {\r\n    getConfig\r\n} from \"./between\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    DataSource\r\n} from \"../../data/data_source/data_source\";\r\nimport filterOperationsDictionary from \"./ui.filter_operations_dictionary\";\r\nvar DEFAULT_DATA_TYPE = \"string\";\r\nvar EMPTY_MENU_ICON = \"icon-none\";\r\nvar AND_GROUP_OPERATION = \"and\";\r\nvar EQUAL_OPERATION = \"=\";\r\nvar NOT_EQUAL_OPERATION = \"<>\";\r\nvar DATATYPE_OPERATIONS = {\r\n    number: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"isblank\", \"isnotblank\"],\r\n    string: [\"contains\", \"notcontains\", \"startswith\", \"endswith\", \"=\", \"<>\", \"isblank\", \"isnotblank\"],\r\n    date: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"isblank\", \"isnotblank\"],\r\n    datetime: [\"=\", \"<>\", \"<\", \">\", \"<=\", \">=\", \"isblank\", \"isnotblank\"],\r\n    boolean: [\"=\", \"<>\", \"isblank\", \"isnotblank\"],\r\n    object: [\"isblank\", \"isnotblank\"]\r\n};\r\nvar DEFAULT_FORMAT = {\r\n    date: \"shortDate\",\r\n    datetime: \"shortDateShortTime\"\r\n};\r\nvar LOOKUP_OPERATIONS = [\"=\", \"<>\", \"isblank\", \"isnotblank\"];\r\nvar AVAILABLE_FIELD_PROPERTIES = [\"caption\", \"customizeText\", \"dataField\", \"dataType\", \"editorTemplate\", \"falseText\", \"editorOptions\", \"filterOperations\", \"format\", \"lookup\", \"trueText\", \"calculateFilterExpression\", \"name\"];\r\nvar FILTER_BUILDER_CLASS = \"dx-filterbuilder\";\r\nvar FILTER_BUILDER_ITEM_TEXT_CLASS = FILTER_BUILDER_CLASS + \"-text\";\r\nvar FILTER_BUILDER_ITEM_TEXT_PART_CLASS = FILTER_BUILDER_ITEM_TEXT_CLASS + \"-part\";\r\nvar FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS = FILTER_BUILDER_ITEM_TEXT_CLASS + \"-separator\";\r\nvar FILTER_BUILDER_ITEM_TEXT_SEPARATOR_EMPTY_CLASS = FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS + \"-empty\";\r\n\r\nfunction getFormattedValueText(field, value) {\r\n    var fieldFormat = field.format || DEFAULT_FORMAT[field.dataType];\r\n    return formatHelper.format(value, fieldFormat)\r\n}\r\n\r\nfunction isNegationGroup(group) {\r\n    return group && group.length > 1 && \"!\" === group[0] && !isCondition(group)\r\n}\r\nexport function getGroupCriteria(group) {\r\n    return isNegationGroup(group) ? group[1] : group\r\n}\r\n\r\nfunction setGroupCriteria(group, criteria) {\r\n    if (isNegationGroup(group)) {\r\n        group[1] = criteria\r\n    } else {\r\n        group = criteria\r\n    }\r\n    return group\r\n}\r\n\r\nfunction convertGroupToNewStructure(group, value) {\r\n    if (function(value) {\r\n            return -1 !== value.indexOf(\"!\")\r\n        }(value)) {\r\n        if (!isNegationGroup(group)) {\r\n            ! function(group) {\r\n                var criteria = group.slice(0);\r\n                group.length = 0;\r\n                group.push(\"!\", criteria)\r\n            }(group)\r\n        }\r\n    } else if (isNegationGroup(group)) {\r\n        ! function(group) {\r\n            var criteria = getGroupCriteria(group);\r\n            group.length = 0;\r\n            [].push.apply(group, criteria)\r\n        }(group)\r\n    }\r\n}\r\nexport function setGroupValue(group, value) {\r\n    convertGroupToNewStructure(group, value);\r\n    var criteria = getGroupCriteria(group);\r\n    var i;\r\n    value = function(value) {\r\n        return -1 === value.indexOf(\"!\") ? value : value.substring(1)\r\n    }(value);\r\n    ! function(criteria, value) {\r\n        for (i = 0; i < criteria.length; i++) {\r\n            if (!Array.isArray(criteria[i])) {\r\n                criteria[i] = value\r\n            }\r\n        }\r\n    }(criteria, value);\r\n    return group\r\n}\r\nexport function getGroupMenuItem(group, availableGroups) {\r\n    var groupValue = getGroupValue(group);\r\n    return availableGroups.filter((function(item) {\r\n        return item.value === groupValue\r\n    }))[0]\r\n}\r\n\r\nfunction getCriteriaOperation(criteria) {\r\n    if (isCondition(criteria)) {\r\n        return AND_GROUP_OPERATION\r\n    }\r\n    var value = \"\";\r\n    for (var i = 0; i < criteria.length; i++) {\r\n        var item = criteria[i];\r\n        if (!Array.isArray(item)) {\r\n            if (value && value !== item) {\r\n                throw new dataErrors.Error(\"E4019\")\r\n            }\r\n            if (\"!\" !== item) {\r\n                value = item\r\n            }\r\n        }\r\n    }\r\n    return value\r\n}\r\nexport function getGroupValue(group) {\r\n    var criteria = getGroupCriteria(group);\r\n    var value = getCriteriaOperation(criteria);\r\n    if (!value) {\r\n        value = AND_GROUP_OPERATION\r\n    }\r\n    if (criteria !== group) {\r\n        value = \"!\" + value\r\n    }\r\n    return value\r\n}\r\n\r\nfunction getDefaultFilterOperations(field) {\r\n    return field.lookup && LOOKUP_OPERATIONS || DATATYPE_OPERATIONS[field.dataType || DEFAULT_DATA_TYPE]\r\n}\r\n\r\nfunction containItems(entity) {\r\n    return Array.isArray(entity) && entity.length\r\n}\r\nexport function getFilterOperations(field) {\r\n    var result = containItems(field.filterOperations) ? field.filterOperations : getDefaultFilterOperations(field);\r\n    return extend([], result)\r\n}\r\nexport function getCaptionByOperation(operation, filterOperationDescriptions) {\r\n    var operationName = filterOperationsDictionary.getNameByFilterOperation(operation);\r\n    return filterOperationDescriptions && filterOperationDescriptions[operationName] ? filterOperationDescriptions[operationName] : operationName\r\n}\r\nexport function getOperationFromAvailable(operation, availableOperations) {\r\n    for (var i = 0; i < availableOperations.length; i++) {\r\n        if (availableOperations[i].value === operation) {\r\n            return availableOperations[i]\r\n        }\r\n    }\r\n    throw new errors.Error(\"E1048\", operation)\r\n}\r\nexport function getCustomOperation(customOperations, name) {\r\n    var filteredOperations = customOperations.filter((function(item) {\r\n        return item.name === name\r\n    }));\r\n    return filteredOperations.length ? filteredOperations[0] : null\r\n}\r\nexport function getAvailableOperations(field, filterOperationDescriptions, customOperations) {\r\n    var filterOperations = getFilterOperations(field);\r\n    var isLookupField = !!field.lookup;\r\n    customOperations.forEach((function(customOperation) {\r\n        if (!field.filterOperations && -1 === filterOperations.indexOf(customOperation.name)) {\r\n            var dataTypes = customOperation && customOperation.dataTypes;\r\n            var isOperationForbidden = isLookupField ? !!customOperation.notForLookup : false;\r\n            if (!isOperationForbidden && dataTypes && dataTypes.indexOf(field.dataType || DEFAULT_DATA_TYPE) >= 0) {\r\n                filterOperations.push(customOperation.name)\r\n            }\r\n        }\r\n    }));\r\n    return filterOperations.map((function(operation) {\r\n        var customOperation = getCustomOperation(customOperations, operation);\r\n        if (customOperation) {\r\n            return {\r\n                icon: customOperation.icon || EMPTY_MENU_ICON,\r\n                text: customOperation.caption || captionize(customOperation.name),\r\n                value: customOperation.name,\r\n                isCustom: true\r\n            }\r\n        } else {\r\n            return {\r\n                icon: filterOperationsDictionary.getIconByFilterOperation(operation) || EMPTY_MENU_ICON,\r\n                text: getCaptionByOperation(operation, filterOperationDescriptions),\r\n                value: operation\r\n            }\r\n        }\r\n    }))\r\n}\r\nexport function getDefaultOperation(field) {\r\n    return field.defaultFilterOperation || getFilterOperations(field)[0]\r\n}\r\nexport function createCondition(field, customOperations) {\r\n    var condition = [field.dataField, \"\", \"\"];\r\n    var filterOperation = getDefaultOperation(field);\r\n    updateConditionByOperation(condition, filterOperation, customOperations);\r\n    return condition\r\n}\r\nexport function removeItem(group, item) {\r\n    var criteria = getGroupCriteria(group);\r\n    var index = criteria.indexOf(item);\r\n    criteria.splice(index, 1);\r\n    if (1 !== criteria.length) {\r\n        criteria.splice(index, 1)\r\n    }\r\n    return group\r\n}\r\nexport function createEmptyGroup(value) {\r\n    var isNegation = isNegationGroupOperation(value);\r\n    var groupOperation = isNegation ? getGroupOperationFromNegationOperation(value) : value;\r\n    return isNegation ? [\"!\", [groupOperation]] : [groupOperation]\r\n}\r\nexport function isEmptyGroup(group) {\r\n    var criteria = getGroupCriteria(group);\r\n    if (isCondition(criteria)) {\r\n        return false\r\n    }\r\n    var hasConditions = criteria.some((function(item) {\r\n        return isCondition(item)\r\n    }));\r\n    return !hasConditions\r\n}\r\nexport function addItem(item, group) {\r\n    var criteria = getGroupCriteria(group);\r\n    var groupValue = getGroupValue(criteria);\r\n    1 === criteria.length ? criteria.unshift(item) : criteria.push(item, groupValue);\r\n    return group\r\n}\r\nexport function getField(dataField, fields) {\r\n    for (var i = 0; i < fields.length; i++) {\r\n        if (fields[i].name === dataField) {\r\n            return fields[i]\r\n        }\r\n        if (fields[i].dataField.toLowerCase() === dataField.toLowerCase()) {\r\n            return fields[i]\r\n        }\r\n    }\r\n    var extendedFields = getItems(fields, true).filter((function(item) {\r\n        return item.dataField.toLowerCase() === dataField.toLowerCase()\r\n    }));\r\n    if (extendedFields.length > 0) {\r\n        return extendedFields[0]\r\n    }\r\n    throw new errors.Error(\"E1047\", dataField)\r\n}\r\nexport function isGroup(criteria) {\r\n    if (!Array.isArray(criteria)) {\r\n        return false\r\n    }\r\n    return criteria.length < 2 || Array.isArray(criteria[0]) || Array.isArray(criteria[1])\r\n}\r\nexport function isCondition(criteria) {\r\n    if (!Array.isArray(criteria)) {\r\n        return false\r\n    }\r\n    return criteria.length > 1 && !Array.isArray(criteria[0]) && !Array.isArray(criteria[1])\r\n}\r\n\r\nfunction convertToInnerGroup(group, customOperations, defaultGroupOperation) {\r\n    defaultGroupOperation = defaultGroupOperation || AND_GROUP_OPERATION;\r\n    var groupOperation = getCriteriaOperation(group).toLowerCase() || defaultGroupOperation;\r\n    var innerGroup = [];\r\n    for (var i = 0; i < group.length; i++) {\r\n        if (isGroup(group[i])) {\r\n            innerGroup.push(convertToInnerStructure(group[i], customOperations, defaultGroupOperation));\r\n            innerGroup = appendGroupOperationToGroup(innerGroup, groupOperation)\r\n        } else if (isCondition(group[i])) {\r\n            innerGroup.push(convertToInnerCondition(group[i], customOperations));\r\n            innerGroup = appendGroupOperationToGroup(innerGroup, groupOperation)\r\n        }\r\n    }\r\n    if (0 === innerGroup.length) {\r\n        innerGroup = appendGroupOperationToGroup(innerGroup, groupOperation)\r\n    }\r\n    return innerGroup\r\n}\r\n\r\nfunction conditionHasCustomOperation(condition, customOperations) {\r\n    var customOperation = getCustomOperation(customOperations, condition[1]);\r\n    return customOperation && customOperation.name === condition[1]\r\n}\r\n\r\nfunction convertToInnerCondition(condition, customOperations) {\r\n    if (conditionHasCustomOperation(condition, customOperations)) {\r\n        return condition\r\n    }\r\n    if (condition.length < 3) {\r\n        condition[2] = condition[1];\r\n        condition[1] = EQUAL_OPERATION\r\n    }\r\n    return condition\r\n}\r\n\r\nfunction isNegationGroupOperation(operation) {\r\n    return -1 !== operation.indexOf(\"not\")\r\n}\r\n\r\nfunction getGroupOperationFromNegationOperation(operation) {\r\n    return operation.substring(3).toLowerCase()\r\n}\r\n\r\nfunction appendGroupOperationToCriteria(criteria, groupOperation) {\r\n    var isNegation = isNegationGroupOperation(groupOperation);\r\n    groupOperation = isNegation ? getGroupOperationFromNegationOperation(groupOperation) : groupOperation;\r\n    return isNegation ? [\"!\", criteria, groupOperation] : [criteria, groupOperation]\r\n}\r\n\r\nfunction appendGroupOperationToGroup(group, groupOperation) {\r\n    var isNegation = isNegationGroupOperation(groupOperation);\r\n    groupOperation = isNegation ? getGroupOperationFromNegationOperation(groupOperation) : groupOperation;\r\n    group.push(groupOperation);\r\n    var result = group;\r\n    if (isNegation) {\r\n        result = [\"!\", result]\r\n    }\r\n    return result\r\n}\r\nexport function convertToInnerStructure(value, customOperations, defaultGroupOperation) {\r\n    defaultGroupOperation = defaultGroupOperation || AND_GROUP_OPERATION;\r\n    if (!value) {\r\n        return createEmptyGroup(defaultGroupOperation)\r\n    }\r\n    value = extend(true, [], value);\r\n    if (isCondition(value)) {\r\n        return appendGroupOperationToCriteria(convertToInnerCondition(value, customOperations), defaultGroupOperation)\r\n    }\r\n    if (isNegationGroup(value)) {\r\n        return [\"!\", isCondition(value[1]) ? appendGroupOperationToCriteria(convertToInnerCondition(value[1], customOperations), defaultGroupOperation) : isNegationGroup(value[1]) ? appendGroupOperationToCriteria(convertToInnerStructure(value[1], customOperations), defaultGroupOperation) : convertToInnerGroup(value[1], customOperations, defaultGroupOperation)]\r\n    }\r\n    return convertToInnerGroup(value, customOperations, defaultGroupOperation)\r\n}\r\nexport function getNormalizedFields(fields) {\r\n    return fields.reduce((function(result, field) {\r\n        if (isDefined(field.dataField)) {\r\n            var normalizedField = {};\r\n            for (var key in field) {\r\n                if (field[key] && AVAILABLE_FIELD_PROPERTIES.indexOf(key) > -1) {\r\n                    normalizedField[key] = field[key]\r\n                }\r\n            }\r\n            normalizedField.defaultCalculateFilterExpression = filterUtils.defaultCalculateFilterExpression;\r\n            if (!isDefined(normalizedField.dataType)) {\r\n                normalizedField.dataType = DEFAULT_DATA_TYPE\r\n            }\r\n            if (!isDefined(normalizedField.trueText)) {\r\n                normalizedField.trueText = messageLocalization.format(\"dxDataGrid-trueText\")\r\n            }\r\n            if (!isDefined(normalizedField.falseText)) {\r\n                normalizedField.falseText = messageLocalization.format(\"dxDataGrid-falseText\")\r\n            }\r\n            result.push(normalizedField)\r\n        }\r\n        return result\r\n    }), [])\r\n}\r\n\r\nfunction getConditionFilterExpression(condition, fields, customOperations, target) {\r\n    var field = getField(condition[0], fields);\r\n    var filterExpression = convertToInnerCondition(condition, customOperations);\r\n    var customOperation = customOperations.length && getCustomOperation(customOperations, filterExpression[1]);\r\n    if (customOperation && customOperation.calculateFilterExpression) {\r\n        return customOperation.calculateFilterExpression.apply(customOperation, [filterExpression[2], field, fields])\r\n    } else if (field.createFilterExpression) {\r\n        return field.createFilterExpression.apply(field, [filterExpression[2], filterExpression[1], target])\r\n    } else if (field.calculateFilterExpression) {\r\n        return field.calculateFilterExpression.apply(field, [filterExpression[2], filterExpression[1], target])\r\n    } else {\r\n        return field.defaultCalculateFilterExpression.apply(field, [filterExpression[2], filterExpression[1], target])\r\n    }\r\n}\r\nexport function getFilterExpression(value, fields, customOperations, target) {\r\n    if (!isDefined(value)) {\r\n        return null\r\n    }\r\n    if (isNegationGroup(value)) {\r\n        var filterExpression = getFilterExpression(value[1], fields, customOperations, target);\r\n        return [\"!\", filterExpression]\r\n    }\r\n    var criteria = getGroupCriteria(value);\r\n    if (isCondition(criteria)) {\r\n        return getConditionFilterExpression(criteria, fields, customOperations, target) || null\r\n    } else {\r\n        var result = [];\r\n        var _filterExpression;\r\n        var groupValue = getGroupValue(criteria);\r\n        for (var i = 0; i < criteria.length; i++) {\r\n            if (isGroup(criteria[i])) {\r\n                _filterExpression = getFilterExpression(criteria[i], fields, customOperations, target);\r\n                if (_filterExpression) {\r\n                    i && result.push(groupValue);\r\n                    result.push(_filterExpression)\r\n                }\r\n            } else if (isCondition(criteria[i])) {\r\n                _filterExpression = getConditionFilterExpression(criteria[i], fields, customOperations, target);\r\n                if (_filterExpression) {\r\n                    result.length && result.push(groupValue);\r\n                    result.push(_filterExpression)\r\n                }\r\n            }\r\n        }\r\n        if (1 === result.length) {\r\n            result = result[0]\r\n        }\r\n        return result.length ? result : null\r\n    }\r\n}\r\nexport function getNormalizedFilter(group) {\r\n    var criteria = getGroupCriteria(group);\r\n    var i;\r\n    if (0 === criteria.length) {\r\n        return null\r\n    }\r\n    var itemsForRemove = [];\r\n    for (i = 0; i < criteria.length; i++) {\r\n        if (isGroup(criteria[i])) {\r\n            var normalizedGroupValue = getNormalizedFilter(criteria[i]);\r\n            if (normalizedGroupValue) {\r\n                criteria[i] = normalizedGroupValue\r\n            } else {\r\n                itemsForRemove.push(criteria[i])\r\n            }\r\n        } else if (isCondition(criteria[i])) {\r\n            if (!isValidCondition(criteria[i])) {\r\n                itemsForRemove.push(criteria[i])\r\n            }\r\n        }\r\n    }\r\n    for (i = 0; i < itemsForRemove.length; i++) {\r\n        removeItem(criteria, itemsForRemove[i])\r\n    }\r\n    if (1 === criteria.length) {\r\n        return null\r\n    }\r\n    criteria.splice(criteria.length - 1, 1);\r\n    if (1 === criteria.length) {\r\n        group = setGroupCriteria(group, criteria[0])\r\n    }\r\n    if (0 === group.length) {\r\n        return null\r\n    }\r\n    return group\r\n}\r\nexport function getCurrentLookupValueText(field, value, handler) {\r\n    if (\"\" === value) {\r\n        handler(\"\");\r\n        return\r\n    }\r\n    var lookup = field.lookup;\r\n    if (lookup.items) {\r\n        handler(lookup.calculateCellValue(value) || \"\")\r\n    } else {\r\n        var lookupDataSource = isFunction(lookup.dataSource) ? lookup.dataSource({}) : lookup.dataSource;\r\n        var dataSource = new DataSource(lookupDataSource);\r\n        dataSource.loadSingle(lookup.valueExpr, value).done((function(result) {\r\n            var valueText = \"\";\r\n            if (result) {\r\n                valueText = lookup.displayExpr ? compileGetter(lookup.displayExpr)(result) : result\r\n            }\r\n            if (field.customizeText) {\r\n                valueText = field.customizeText({\r\n                    value: value,\r\n                    valueText: valueText\r\n                })\r\n            }\r\n            handler(valueText)\r\n        })).fail((function() {\r\n            handler(\"\")\r\n        }))\r\n    }\r\n}\r\n\r\nfunction getPrimitiveValueText(field, value, customOperation, target, options) {\r\n    var valueText;\r\n    if (true === value) {\r\n        valueText = field.trueText || messageLocalization.format(\"dxDataGrid-trueText\")\r\n    } else if (false === value) {\r\n        valueText = field.falseText || messageLocalization.format(\"dxDataGrid-falseText\")\r\n    } else {\r\n        valueText = getFormattedValueText(field, value)\r\n    }\r\n    if (field.customizeText) {\r\n        valueText = field.customizeText.call(field, {\r\n            value: value,\r\n            valueText: valueText,\r\n            target: target\r\n        })\r\n    }\r\n    if (customOperation && customOperation.customizeText) {\r\n        valueText = customOperation.customizeText.call(customOperation, {\r\n            value: value,\r\n            valueText: valueText,\r\n            field: field,\r\n            target: target\r\n        }, options)\r\n    }\r\n    return valueText\r\n}\r\n\r\nfunction getArrayValueText(field, value, customOperation, target) {\r\n    var options = {\r\n        values: value\r\n    };\r\n    return value.map(v => getPrimitiveValueText(field, v, customOperation, target, options))\r\n}\r\n\r\nfunction checkDefaultValue(value) {\r\n    return \"\" === value || null === value\r\n}\r\nexport function getCurrentValueText(field, value, customOperation) {\r\n    var target = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : \"filterBuilder\";\r\n    if (checkDefaultValue(value)) {\r\n        return \"\"\r\n    }\r\n    if (Array.isArray(value)) {\r\n        var result = new Deferred;\r\n        when.apply(this, getArrayValueText(field, value, customOperation, target)).done((function() {\r\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n                args[_key] = arguments[_key]\r\n            }\r\n            var text = args.some(item => !checkDefaultValue(item)) ? args.map(item => !checkDefaultValue(item) ? item : \"?\") : \"\";\r\n            result.resolve(text)\r\n        }));\r\n        return result\r\n    } else {\r\n        return getPrimitiveValueText(field, value, customOperation, target)\r\n    }\r\n}\r\n\r\nfunction itemExists(plainItems, parentId) {\r\n    return plainItems.some((function(item) {\r\n        return item.dataField === parentId\r\n    }))\r\n}\r\n\r\nfunction pushItemAndCheckParent(originalItems, plainItems, item) {\r\n    var dataField = item.dataField;\r\n    if (hasParent(dataField)) {\r\n        item.parentId = getParentIdFromItemDataField(dataField);\r\n        if (!itemExists(plainItems, item.parentId) && !itemExists(originalItems, item.parentId)) {\r\n            pushItemAndCheckParent(originalItems, plainItems, {\r\n                id: item.parentId,\r\n                dataType: \"object\",\r\n                dataField: item.parentId,\r\n                caption: generateCaptionByDataField(item.parentId, true),\r\n                filterOperations: [\"isblank\", \"isnotblank\"]\r\n            })\r\n        }\r\n    }\r\n    plainItems.push(item)\r\n}\r\n\r\nfunction generateCaptionByDataField(dataField, allowHierarchicalFields) {\r\n    var caption = \"\";\r\n    if (allowHierarchicalFields) {\r\n        dataField = dataField.substring(dataField.lastIndexOf(\".\") + 1)\r\n    } else if (hasParent(dataField)) {\r\n        dataField.split(\".\").forEach((function(field, index, arr) {\r\n            caption += captionize(field);\r\n            if (index !== arr.length - 1) {\r\n                caption += \".\"\r\n            }\r\n        }));\r\n        return caption\r\n    }\r\n    return captionize(dataField)\r\n}\r\nexport function getItems(fields, allowHierarchicalFields) {\r\n    var items = [];\r\n    for (var i = 0; i < fields.length; i++) {\r\n        var item = extend(true, {\r\n            caption: generateCaptionByDataField(fields[i].dataField, allowHierarchicalFields)\r\n        }, fields[i]);\r\n        item.id = item.name || item.dataField;\r\n        if (allowHierarchicalFields) {\r\n            pushItemAndCheckParent(fields, items, item)\r\n        } else {\r\n            items.push(item)\r\n        }\r\n    }\r\n    return items\r\n}\r\n\r\nfunction hasParent(dataField) {\r\n    return -1 !== dataField.lastIndexOf(\".\")\r\n}\r\n\r\nfunction getParentIdFromItemDataField(dataField) {\r\n    return dataField.substring(0, dataField.lastIndexOf(\".\"))\r\n}\r\nexport function getCaptionWithParents(item, plainItems) {\r\n    if (hasParent(item.dataField)) {\r\n        var parentId = getParentIdFromItemDataField(item.dataField);\r\n        for (var i = 0; i < plainItems.length; i++) {\r\n            if (plainItems[i].dataField === parentId) {\r\n                return getCaptionWithParents(plainItems[i], plainItems) + \".\" + item.caption\r\n            }\r\n        }\r\n    }\r\n    return item.caption\r\n}\r\nexport function updateConditionByOperation(condition, operation, customOperations) {\r\n    var customOperation = getCustomOperation(customOperations, operation);\r\n    if (customOperation) {\r\n        if (false === customOperation.hasValue) {\r\n            condition[1] = operation;\r\n            condition.length = 2\r\n        } else {\r\n            condition[1] = operation;\r\n            condition[2] = \"\"\r\n        }\r\n        return condition\r\n    }\r\n    if (\"isblank\" === operation) {\r\n        condition[1] = EQUAL_OPERATION;\r\n        condition[2] = null\r\n    } else if (\"isnotblank\" === operation) {\r\n        condition[1] = NOT_EQUAL_OPERATION;\r\n        condition[2] = null\r\n    } else {\r\n        customOperation = getCustomOperation(customOperations, condition[1]);\r\n        if (customOperation || 2 === condition.length || null === condition[2]) {\r\n            condition[2] = \"\"\r\n        }\r\n        condition[1] = operation\r\n    }\r\n    return condition\r\n}\r\nexport function getOperationValue(condition) {\r\n    var caption;\r\n    if (null === condition[2]) {\r\n        if (condition[1] === EQUAL_OPERATION) {\r\n            caption = \"isblank\"\r\n        } else {\r\n            caption = \"isnotblank\"\r\n        }\r\n    } else {\r\n        caption = condition[1]\r\n    }\r\n    return caption\r\n}\r\nexport function isValidCondition(condition) {\r\n    return \"\" !== condition[2]\r\n}\r\nexport function getMergedOperations(customOperations, betweenCaption, context) {\r\n    var result = extend(true, [], customOperations);\r\n    var betweenIndex = -1;\r\n    result.some((function(customOperation, index) {\r\n        if (\"between\" === customOperation.name) {\r\n            betweenIndex = index;\r\n            return true\r\n        }\r\n    }));\r\n    if (-1 !== betweenIndex) {\r\n        result[betweenIndex] = extend(getConfig(betweenCaption, context), result[betweenIndex])\r\n    } else {\r\n        result.unshift(getConfig(betweenCaption, context))\r\n    }\r\n    return result\r\n}\r\n\r\nfunction isMatchedCondition(filter, addedFilterDataField) {\r\n    return filter[0] === addedFilterDataField\r\n}\r\nexport function removeFieldConditionsFromFilter(filter, dataField) {\r\n    if (!filter || 0 === filter.length) {\r\n        return null\r\n    }\r\n    if (isCondition(filter)) {\r\n        var hasMatchedCondition = isMatchedCondition(filter, dataField);\r\n        return !hasMatchedCondition ? filter : null\r\n    } else {\r\n        return syncConditionIntoGroup(filter, [dataField], false)\r\n    }\r\n}\r\n\r\nfunction syncConditionIntoGroup(filter, addedFilter, canPush) {\r\n    var result = [];\r\n    filter.forEach((function(item) {\r\n        if (isCondition(item)) {\r\n            if (isMatchedCondition(item, addedFilter[0])) {\r\n                if (canPush) {\r\n                    result.push(addedFilter);\r\n                    canPush = false\r\n                } else {\r\n                    result.splice(result.length - 1, 1)\r\n                }\r\n            } else {\r\n                result.push(item)\r\n            }\r\n        } else {\r\n            (result.length || isGroup(item)) && result.push(item)\r\n        }\r\n    }));\r\n    if (0 === result.length) {\r\n        return null\r\n    }\r\n    if (canPush) {\r\n        result.push(AND_GROUP_OPERATION);\r\n        result.push(addedFilter)\r\n    }\r\n    return 1 === result.length ? result[0] : result\r\n}\r\nexport function syncFilters(filter, addedFilter) {\r\n    if (null === filter || 0 === filter.length) {\r\n        return addedFilter\r\n    }\r\n    if (isCondition(filter)) {\r\n        if (isMatchedCondition(filter, addedFilter[0])) {\r\n            return addedFilter\r\n        } else {\r\n            return [filter, AND_GROUP_OPERATION, addedFilter]\r\n        }\r\n    }\r\n    var groupValue = getGroupValue(filter);\r\n    if (groupValue !== AND_GROUP_OPERATION) {\r\n        return [addedFilter, \"and\", filter]\r\n    }\r\n    return syncConditionIntoGroup(filter, addedFilter, true)\r\n}\r\nexport function getMatchedConditions(filter, dataField) {\r\n    if (null === filter || 0 === filter.length) {\r\n        return []\r\n    }\r\n    if (isCondition(filter)) {\r\n        if (isMatchedCondition(filter, dataField)) {\r\n            return [filter]\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n    var groupValue = getGroupValue(filter);\r\n    if (groupValue !== AND_GROUP_OPERATION) {\r\n        return []\r\n    }\r\n    var result = filter.filter((function(item) {\r\n        return isCondition(item) && isMatchedCondition(item, dataField)\r\n    }));\r\n    return result\r\n}\r\nexport function filterHasField(filter, dataField) {\r\n    if (null === filter || 0 === filter.length) {\r\n        return false\r\n    }\r\n    if (isCondition(filter)) {\r\n        return filter[0] === dataField\r\n    }\r\n    return filter.some((function(item) {\r\n        return (isCondition(item) || isGroup(item)) && filterHasField(item, dataField)\r\n    }))\r\n}\r\nexport var renderValueText = function($container, value, customOperation) {\r\n    if (Array.isArray(value)) {\r\n        var lastItemIndex = value.length - 1;\r\n        $container.empty();\r\n        value.forEach((t, i) => {\r\n            $(\"<span>\").addClass(FILTER_BUILDER_ITEM_TEXT_PART_CLASS).text(t).appendTo($container);\r\n            if (i !== lastItemIndex) {\r\n                $(\"<span>\").addClass(FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS).text(customOperation && customOperation.valueSeparator ? customOperation.valueSeparator : \"|\").addClass(FILTER_BUILDER_ITEM_TEXT_SEPARATOR_EMPTY_CLASS).appendTo($container)\r\n            }\r\n        })\r\n    } else if (value) {\r\n        $container.text(value)\r\n    } else {\r\n        $container.text(messageLocalization.format(\"dxFilterBuilder-enterValueText\"))\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_custom_operations.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    DataSource\r\n} from \"../../data/data_source/data_source\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isGroup,\r\n    isCondition,\r\n    getFilterExpression,\r\n    renderValueText\r\n} from \"../filter_builder/utils\";\r\nimport errors from \"../widget/ui.errors\";\r\n\r\nfunction baseOperation(grid) {\r\n    var getFullText = function(itemText, parentText) {\r\n        return parentText ? parentText + \"/\" + itemText : itemText\r\n    };\r\n    var headerFilterController = grid && grid.getController(\"headerFilter\");\r\n    return {\r\n        dataTypes: [\"string\", \"date\", \"datetime\", \"number\", \"boolean\", \"object\"],\r\n        calculateFilterExpression: function(filterValue, field, fields) {\r\n            var result = [];\r\n            var lastIndex = filterValue.length - 1;\r\n            filterValue && filterValue.forEach((function(value, index) {\r\n                if (isCondition(value) || isGroup(value)) {\r\n                    var filterExpression = getFilterExpression(value, fields, [], \"headerFilter\");\r\n                    result.push(filterExpression)\r\n                } else {\r\n                    result.push(getFilterExpression([field.dataField, \"=\", value], fields, [], \"headerFilter\"))\r\n                }\r\n                index !== lastIndex && result.push(\"or\")\r\n            }));\r\n            if (1 === result.length) {\r\n                result = result[0]\r\n            }\r\n            return result\r\n        },\r\n        editorTemplate: function(conditionInfo, container) {\r\n            var div = $(\"<div>\").addClass(\"dx-filterbuilder-item-value-text\").appendTo(container);\r\n            var column = extend(true, {}, grid.columnOption(conditionInfo.field.dataField));\r\n            renderValueText(div, conditionInfo.text && conditionInfo.text.split(\"|\"));\r\n            column.filterType = \"include\";\r\n            column.filterValues = conditionInfo.value ? conditionInfo.value.slice() : [];\r\n            headerFilterController.showHeaderFilterMenuBase({\r\n                columnElement: div,\r\n                column: column,\r\n                apply: function() {\r\n                    value = this.filterValues, void conditionInfo.setValue(value);\r\n                    var value;\r\n                    headerFilterController.hideHeaderFilterMenu();\r\n                    conditionInfo.closeEditor()\r\n                },\r\n                onHidden: function() {\r\n                    conditionInfo.closeEditor()\r\n                },\r\n                isFilterBuilder: true\r\n            });\r\n            return container\r\n        },\r\n        customizeText: function(fieldInfo, options) {\r\n            options = options || {};\r\n            var value = fieldInfo.value;\r\n            var column = grid.columnOption(fieldInfo.field.dataField);\r\n            var headerFilter = column && column.headerFilter;\r\n            var lookup = column && column.lookup;\r\n            var values = options.values || [value];\r\n            if (headerFilter && headerFilter.dataSource || lookup && lookup.dataSource) {\r\n                var result = new Deferred;\r\n                var itemsDeferred = options.items || new Deferred;\r\n                if (!options.items) {\r\n                    column = extend({}, column, {\r\n                        filterType: \"include\",\r\n                        filterValues: values\r\n                    });\r\n                    var dataSourceOptions = headerFilterController.getDataSource(column);\r\n                    dataSourceOptions.paginate = false;\r\n                    var dataSource = new DataSource(dataSourceOptions);\r\n                    var key = dataSource.store().key();\r\n                    if (key) {\r\n                        var {\r\n                            values: _values\r\n                        } = options;\r\n                        if (_values && _values.length > 1) {\r\n                            var filter = _values.reduce((result, value) => {\r\n                                if (result.length) {\r\n                                    result.push(\"or\")\r\n                                }\r\n                                result.push([key, \"=\", value]);\r\n                                return result\r\n                            }, []);\r\n                            dataSource.filter(filter)\r\n                        } else {\r\n                            dataSource.filter([key, \"=\", fieldInfo.value])\r\n                        }\r\n                    } else if (fieldInfo.field.calculateDisplayValue) {\r\n                        errors.log(\"W1017\")\r\n                    }\r\n                    options.items = itemsDeferred;\r\n                    dataSource.load().done(itemsDeferred.resolve)\r\n                }\r\n                itemsDeferred.done(items => {\r\n                    var index = values.indexOf(fieldInfo.value);\r\n                    result.resolve(function getSelectedItemsTexts(items, parentText) {\r\n                        var result = [];\r\n                        items.forEach((function(item) {\r\n                            if (item.items) {\r\n                                var selectedItemsTexts = getSelectedItemsTexts(item.items, getFullText(item.text, parentText));\r\n                                result = result.concat(selectedItemsTexts)\r\n                            }\r\n                            item.selected && result.push(getFullText(item.text, parentText))\r\n                        }));\r\n                        return result\r\n                    }(items)[index])\r\n                });\r\n                return result\r\n            } else {\r\n                var text = headerFilterController.getHeaderItemText(value, column, 0, grid.option(\"headerFilter\"));\r\n                return text\r\n            }\r\n        }\r\n    }\r\n}\r\nexport function anyOf(grid) {\r\n    return extend(baseOperation(grid), {\r\n        name: \"anyof\",\r\n        icon: \"selectall\",\r\n        caption: messageLocalization.format(\"dxFilterBuilder-filterOperationAnyOf\")\r\n    })\r\n}\r\nexport function noneOf(grid) {\r\n    var baseOp = baseOperation(grid);\r\n    return extend({}, baseOp, {\r\n        calculateFilterExpression: function(filterValue, field, fields) {\r\n            var baseFilter = baseOp.calculateFilterExpression(filterValue, field, fields);\r\n            if (!baseFilter || 0 === baseFilter.length) {\r\n                return null\r\n            }\r\n            return \"!\" === baseFilter[0] ? baseFilter : [\"!\", baseFilter]\r\n        },\r\n        name: \"noneof\",\r\n        icon: \"unselectall\",\r\n        caption: messageLocalization.format(\"dxFilterBuilder-filterOperationNoneOf\")\r\n    })\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_sync.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    getDefaultOperation,\r\n    getMatchedConditions,\r\n    syncFilters,\r\n    removeFieldConditionsFromFilter,\r\n    addItem,\r\n    getNormalizedFilter,\r\n    getFilterExpression,\r\n    filterHasField\r\n} from \"../filter_builder/utils\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport filterUtils from \"../shared/filtering\";\r\nimport {\r\n    anyOf,\r\n    noneOf\r\n} from \"./ui.grid_core.filter_custom_operations\";\r\nvar FILTER_ROW_OPERATIONS = [\"=\", \"<>\", \"<\", \"<=\", \">\", \">=\", \"notcontains\", \"contains\", \"startswith\", \"endswith\", \"between\"];\r\nvar FILTER_TYPES_INCLUDE = \"include\";\r\nvar FILTER_TYPES_EXCLUDE = \"exclude\";\r\n\r\nfunction getColumnIdentifier(column) {\r\n    return column.name || column.dataField\r\n}\r\n\r\nfunction checkForErrors(columns) {\r\n    columns.forEach(column => {\r\n        var identifier = getColumnIdentifier(column);\r\n        if (!isDefined(identifier) && column.allowFiltering) {\r\n            throw new errors.Error(\"E1049\", column.caption)\r\n        }\r\n    })\r\n}\r\nvar FilterSyncController = modules.Controller.inherit(function() {\r\n    var getEmptyFilterValues = function() {\r\n        return {\r\n            filterType: FILTER_TYPES_INCLUDE,\r\n            filterValues: void 0\r\n        }\r\n    };\r\n    var canSyncHeaderFilterWithFilterRow = function(column) {\r\n        var filterValues = column.filterValues || [];\r\n        return !filterUtils.getGroupInterval(column) && !(column.headerFilter && column.headerFilter.dataSource) || 1 === filterValues.length && null === filterValues[0]\r\n    };\r\n    var getConditionFromFilterRow = function(column) {\r\n        var value = column.filterValue;\r\n        if (isDefined(value)) {\r\n            var operation = column.selectedFilterOperation || column.defaultFilterOperation || getDefaultOperation(column);\r\n            var filter = [getColumnIdentifier(column), operation, column.filterValue];\r\n            return filter\r\n        } else {\r\n            return null\r\n        }\r\n    };\r\n    var getConditionFromHeaderFilter = function(column) {\r\n        var selectedOperation;\r\n        var value;\r\n        var filterValues = column.filterValues;\r\n        if (!filterValues) {\r\n            return null\r\n        }\r\n        if (1 === filterValues.length && canSyncHeaderFilterWithFilterRow(column) && !Array.isArray(filterValues[0])) {\r\n            column.filterType === FILTER_TYPES_EXCLUDE ? selectedOperation = \"<>\" : selectedOperation = \"=\";\r\n            value = filterValues[0]\r\n        } else {\r\n            column.filterType === FILTER_TYPES_EXCLUDE ? selectedOperation = \"noneof\" : selectedOperation = \"anyof\";\r\n            value = filterValues\r\n        }\r\n        return [getColumnIdentifier(column), selectedOperation, value]\r\n    };\r\n    var updateHeaderFilterCondition = function(columnsController, column, headerFilterCondition) {\r\n        var headerFilter = function(headerFilterCondition, column) {\r\n            if (!headerFilterCondition) {\r\n                return getEmptyFilterValues()\r\n            }\r\n            var filterType;\r\n            var selectedFilterOperation = headerFilterCondition[1];\r\n            var value = headerFilterCondition[2];\r\n            var hasArrayValue = Array.isArray(value);\r\n            if (!hasArrayValue) {\r\n                if (!canSyncHeaderFilterWithFilterRow(column)) {\r\n                    return getEmptyFilterValues()\r\n                }\r\n            }\r\n            switch (selectedFilterOperation) {\r\n                case \"anyof\":\r\n                case \"=\":\r\n                    filterType = FILTER_TYPES_INCLUDE;\r\n                    break;\r\n                case \"noneof\":\r\n                case \"<>\":\r\n                    filterType = FILTER_TYPES_EXCLUDE;\r\n                    break;\r\n                default:\r\n                    return getEmptyFilterValues()\r\n            }\r\n            return {\r\n                filterType: filterType,\r\n                filterValues: hasArrayValue ? value : [value]\r\n            }\r\n        }(headerFilterCondition, column);\r\n        columnsController.columnOption(getColumnIdentifier(column), headerFilter)\r\n    };\r\n    var updateFilterRowCondition = function(columnsController, column, condition) {\r\n        var filterRowOptions;\r\n        var selectedFilterOperation = null === condition || void 0 === condition ? void 0 : condition[1];\r\n        var filterValue = null === condition || void 0 === condition ? void 0 : condition[2];\r\n        var filterOperations = column.filterOperations || column.defaultFilterOperations;\r\n        if ((!filterOperations || filterOperations.indexOf(selectedFilterOperation) >= 0 || selectedFilterOperation === column.defaultFilterOperation) && FILTER_ROW_OPERATIONS.indexOf(selectedFilterOperation) >= 0 && null !== filterValue) {\r\n            if (selectedFilterOperation === column.defaultFilterOperation && !isDefined(column.selectedFilterOperation)) {\r\n                selectedFilterOperation = column.selectedFilterOperation\r\n            }\r\n            filterRowOptions = {\r\n                filterValue: filterValue,\r\n                selectedFilterOperation: selectedFilterOperation\r\n            }\r\n        } else {\r\n            filterRowOptions = {\r\n                filterValue: void 0,\r\n                selectedFilterOperation: void 0\r\n            }\r\n        }\r\n        columnsController.columnOption(getColumnIdentifier(column), filterRowOptions)\r\n    };\r\n    return {\r\n        syncFilterValue: function() {\r\n            var that = this;\r\n            var columnsController = that.getController(\"columns\");\r\n            var columns = columnsController.getFilteringColumns();\r\n            this._skipSyncColumnOptions = true;\r\n            columns.forEach((function(column) {\r\n                var filterConditions = getMatchedConditions(that.option(\"filterValue\"), getColumnIdentifier(column));\r\n                if (1 === filterConditions.length) {\r\n                    var filterCondition = filterConditions[0];\r\n                    updateHeaderFilterCondition(columnsController, column, filterCondition);\r\n                    updateFilterRowCondition(columnsController, column, filterCondition)\r\n                } else {\r\n                    isDefined(column.filterValues) && updateHeaderFilterCondition(columnsController, column);\r\n                    isDefined(column.filterValue) && updateFilterRowCondition(columnsController, column)\r\n                }\r\n            }));\r\n            this._skipSyncColumnOptions = false\r\n        },\r\n        _initSync: function() {\r\n            var columns = this.getController(\"columns\").getColumns();\r\n            var dataController = this.getController(\"data\");\r\n            var pageIndex = dataController.pageIndex();\r\n            checkForErrors(columns);\r\n            if (!this.option(\"filterValue\")) {\r\n                var filteringColumns = this.getController(\"columns\").getFilteringColumns();\r\n                var filterValue = this.getFilterValueFromColumns(filteringColumns);\r\n                this.option(\"filterValue\", filterValue)\r\n            }\r\n            this.syncFilterValue();\r\n            dataController.pageIndex(pageIndex)\r\n        },\r\n        init: function() {\r\n            var dataController = this.getController(\"data\");\r\n            if (dataController.isFilterSyncActive()) {\r\n                if (this.getController(\"columns\").isAllDataTypesDefined()) {\r\n                    this._initSync()\r\n                } else {\r\n                    dataController.dataSourceChanged.add(() => this._initSync())\r\n                }\r\n            }\r\n        },\r\n        _getSyncFilterRow: function(filterValue, column) {\r\n            var filter = getConditionFromFilterRow(column);\r\n            if (isDefined(filter)) {\r\n                return syncFilters(filterValue, filter)\r\n            } else {\r\n                return removeFieldConditionsFromFilter(filterValue, getColumnIdentifier(column))\r\n            }\r\n        },\r\n        _getSyncHeaderFilter: function(filterValue, column) {\r\n            var filter = getConditionFromHeaderFilter(column);\r\n            if (filter) {\r\n                return syncFilters(filterValue, filter)\r\n            } else {\r\n                return removeFieldConditionsFromFilter(filterValue, getColumnIdentifier(column))\r\n            }\r\n        },\r\n        getFilterValueFromColumns: function(columns) {\r\n            if (!this.getController(\"data\").isFilterSyncActive()) {\r\n                return null\r\n            }\r\n            var filterValue = [\"and\"];\r\n            columns && columns.forEach(column => {\r\n                var headerFilter = getConditionFromHeaderFilter(column);\r\n                var filterRow = getConditionFromFilterRow(column);\r\n                headerFilter && addItem(headerFilter, filterValue);\r\n                filterRow && addItem(filterRow, filterValue)\r\n            });\r\n            return getNormalizedFilter(filterValue)\r\n        },\r\n        syncFilterRow: function(column, value) {\r\n            this.option(\"filterValue\", this._getSyncFilterRow(this.option(\"filterValue\"), column))\r\n        },\r\n        syncHeaderFilter: function(column) {\r\n            this.option(\"filterValue\", this._getSyncHeaderFilter(this.option(\"filterValue\"), column))\r\n        },\r\n        getCustomFilterOperations: function() {\r\n            var filterBuilderCustomOperations = this.option(\"filterBuilder.customOperations\") || [];\r\n            return [anyOf(this.component), noneOf(this.component)].concat(filterBuilderCustomOperations)\r\n        },\r\n        publicMethods: function() {\r\n            return [\"getCustomFilterOperations\"]\r\n        }\r\n    }\r\n}());\r\nvar DataControllerFilterSyncExtender = {\r\n    isFilterSyncActive: function() {\r\n        var filterSyncEnabledValue = this.option(\"filterSyncEnabled\");\r\n        return \"auto\" === filterSyncEnabledValue ? this.option(\"filterPanel.visible\") : filterSyncEnabledValue\r\n    },\r\n    skipCalculateColumnFilters: function() {\r\n        return isDefined(this.option(\"filterValue\")) && this.isFilterSyncActive()\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        if (false === this.option(\"filterPanel.filterEnabled\")) {\r\n            return this.callBase()\r\n        }\r\n        var filters = [this.callBase()];\r\n        var columns = this.getController(\"columns\").getFilteringColumns();\r\n        var filterValue = this.option(\"filterValue\");\r\n        if (this.isFilterSyncActive()) {\r\n            var currentColumn = this.getController(\"headerFilter\").getCurrentColumn();\r\n            if (currentColumn && filterValue) {\r\n                filterValue = removeFieldConditionsFromFilter(filterValue, getColumnIdentifier(currentColumn))\r\n            }\r\n        }\r\n        var customOperations = this.getController(\"filterSync\").getCustomFilterOperations();\r\n        var calculatedFilterValue = getFilterExpression(filterValue, columns, customOperations, \"filterBuilder\");\r\n        if (calculatedFilterValue) {\r\n            filters.push(calculatedFilterValue)\r\n        }\r\n        return gridCoreUtils.combineFilters(filters)\r\n    },\r\n    _parseColumnPropertyName: function(fullName) {\r\n        var matched = fullName.match(/.*\\.(.*)/);\r\n        if (matched) {\r\n            return matched[1]\r\n        } else {\r\n            return null\r\n        }\r\n    },\r\n    clearFilter: function(filterName) {\r\n        this.component.beginUpdate();\r\n        if (arguments.length > 0) {\r\n            if (\"filterValue\" === filterName) {\r\n                this.option(\"filterValue\", null)\r\n            }\r\n            this.callBase(filterName)\r\n        } else {\r\n            this.option(\"filterValue\", null);\r\n            this.callBase()\r\n        }\r\n        this.component.endUpdate()\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"filterValue\":\r\n                this._applyFilter();\r\n                this.isFilterSyncActive() && this.getController(\"filterSync\").syncFilterValue();\r\n                args.handled = true;\r\n                break;\r\n            case \"filterSyncEnabled\":\r\n                args.handled = true;\r\n                break;\r\n            case \"columns\":\r\n                if (this.isFilterSyncActive()) {\r\n                    var column = this.getController(\"columns\").getColumnByPath(args.fullName);\r\n                    var filterSyncController = this.getController(\"filterSync\");\r\n                    if (column && !filterSyncController._skipSyncColumnOptions) {\r\n                        var propertyName = this._parseColumnPropertyName(args.fullName);\r\n                        filterSyncController._skipSyncColumnOptions = true;\r\n                        if (\"filterType\" === propertyName) {\r\n                            if (FILTER_TYPES_EXCLUDE === args.value || FILTER_TYPES_EXCLUDE === args.previousValue) {\r\n                                filterSyncController.syncHeaderFilter(column)\r\n                            }\r\n                        } else if (\"filterValues\" === propertyName) {\r\n                            filterSyncController.syncHeaderFilter(column)\r\n                        } else if ([\"filterValue\", \"selectedFilterOperation\"].indexOf(propertyName) > -1) {\r\n                            filterSyncController.syncFilterRow(column, column.filterValue)\r\n                        }\r\n                        filterSyncController._skipSyncColumnOptions = false\r\n                    }\r\n                }\r\n                this.callBase(args);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n};\r\nvar ColumnHeadersViewFilterSyncExtender = {\r\n    _isHeaderFilterEmpty: function(column) {\r\n        if (this.getController(\"data\").isFilterSyncActive()) {\r\n            return !filterHasField(this.option(\"filterValue\"), getColumnIdentifier(column))\r\n        }\r\n        return this.callBase(column)\r\n    },\r\n    _needUpdateFilterIndicators: function() {\r\n        return !this.getController(\"data\").isFilterSyncActive()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"filterValue\" === args.name) {\r\n            this._updateHeaderFilterIndicators()\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    }\r\n};\r\nexport var filterSyncModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterValue: null,\r\n            filterSyncEnabled: \"auto\"\r\n        }\r\n    },\r\n    controllers: {\r\n        filterSync: FilterSyncController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterSyncExtender\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFilterSyncExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.filter_sync.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    filterSyncModule\r\n} from \"../grid_core/ui.grid_core.filter_sync\";\r\ncore.registerModule(\"filterSync\", filterSyncModule);\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder/filter_builder.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport Class from \"../../core/class\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport TreeView from \"../tree_view\";\r\nimport Popup from \"../popup\";\r\nimport {\r\n    getElementMaxHeightByWindow\r\n} from \"../overlay/utils\";\r\nimport EditorFactoryMixin from \"../shared/ui.editor_factory_mixin\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    renderValueText,\r\n    getFilterExpression as _getFilterExpression,\r\n    getNormalizedFilter,\r\n    getNormalizedFields,\r\n    getMergedOperations,\r\n    convertToInnerStructure,\r\n    getGroupCriteria,\r\n    isGroup,\r\n    isCondition,\r\n    removeItem,\r\n    createEmptyGroup,\r\n    addItem,\r\n    createCondition,\r\n    getGroupMenuItem,\r\n    setGroupValue,\r\n    getCustomOperation,\r\n    getAvailableOperations,\r\n    getOperationFromAvailable,\r\n    getOperationValue,\r\n    updateConditionByOperation,\r\n    getItems,\r\n    getField,\r\n    getCaptionWithParents,\r\n    getDefaultOperation,\r\n    getGroupValue,\r\n    getCurrentLookupValueText,\r\n    getCurrentValueText\r\n} from \"./utils\";\r\nvar FILTER_BUILDER_CLASS = \"dx-filterbuilder\";\r\nvar FILTER_BUILDER_GROUP_CLASS = FILTER_BUILDER_CLASS + \"-group\";\r\nvar FILTER_BUILDER_GROUP_ITEM_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-item\";\r\nvar FILTER_BUILDER_GROUP_CONTENT_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-content\";\r\nvar FILTER_BUILDER_GROUP_OPERATIONS_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-operations\";\r\nvar FILTER_BUILDER_GROUP_OPERATION_CLASS = FILTER_BUILDER_GROUP_CLASS + \"-operation\";\r\nvar FILTER_BUILDER_ACTION_CLASS = FILTER_BUILDER_CLASS + \"-action\";\r\nvar FILTER_BUILDER_IMAGE_CLASS = FILTER_BUILDER_ACTION_CLASS + \"-icon\";\r\nvar FILTER_BUILDER_IMAGE_ADD_CLASS = \"dx-icon-plus\";\r\nvar FILTER_BUILDER_IMAGE_REMOVE_CLASS = \"dx-icon-remove\";\r\nvar FILTER_BUILDER_ITEM_TEXT_CLASS = FILTER_BUILDER_CLASS + \"-text\";\r\nvar FILTER_BUILDER_ITEM_FIELD_CLASS = FILTER_BUILDER_CLASS + \"-item-field\";\r\nvar FILTER_BUILDER_ITEM_OPERATION_CLASS = FILTER_BUILDER_CLASS + \"-item-operation\";\r\nvar FILTER_BUILDER_ITEM_VALUE_CLASS = FILTER_BUILDER_CLASS + \"-item-value\";\r\nvar FILTER_BUILDER_ITEM_VALUE_TEXT_CLASS = FILTER_BUILDER_CLASS + \"-item-value-text\";\r\nvar FILTER_BUILDER_OVERLAY_CLASS = FILTER_BUILDER_CLASS + \"-overlay\";\r\nvar FILTER_BUILDER_FILTER_OPERATIONS_CLASS = FILTER_BUILDER_CLASS + \"-operations\";\r\nvar FILTER_BUILDER_FIELDS_CLASS = FILTER_BUILDER_CLASS + \"-fields\";\r\nvar FILTER_BUILDER_ADD_CONDITION_CLASS = FILTER_BUILDER_CLASS + \"-add-condition\";\r\nvar ACTIVE_CLASS = \"dx-state-active\";\r\nvar FILTER_BUILDER_MENU_CUSTOM_OPERATION_CLASS = FILTER_BUILDER_CLASS + \"-menu-custom-operation\";\r\nvar SOURCE = \"filterBuilder\";\r\nvar DISABLED_STATE_CLASS = \"dx-state-disabled\";\r\nvar TAB_KEY = \"tab\";\r\nvar ENTER_KEY = \"enter\";\r\nvar ESCAPE_KEY = \"escape\";\r\nvar ACTIONS = [{\r\n    name: \"onEditorPreparing\",\r\n    config: {\r\n        excludeValidators: [\"disabled\", \"readOnly\"],\r\n        category: \"rendering\"\r\n    }\r\n}, {\r\n    name: \"onEditorPrepared\",\r\n    config: {\r\n        excludeValidators: [\"disabled\", \"readOnly\"],\r\n        category: \"rendering\"\r\n    }\r\n}, {\r\n    name: \"onValueChanged\",\r\n    config: {\r\n        excludeValidators: [\"disabled\", \"readOnly\"]\r\n    }\r\n}];\r\nvar OPERATORS = {\r\n    and: \"and\",\r\n    or: \"or\",\r\n    notAnd: \"!and\",\r\n    notOr: \"!or\"\r\n};\r\nvar EditorFactory = Class.inherit(EditorFactoryMixin);\r\nvar FilterBuilder = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            onEditorPreparing: null,\r\n            onEditorPrepared: null,\r\n            onValueChanged: null,\r\n            fields: [],\r\n            groupOperations: [\"and\", \"or\", \"notAnd\", \"notOr\"],\r\n            maxGroupLevel: void 0,\r\n            value: null,\r\n            allowHierarchicalFields: false,\r\n            groupOperationDescriptions: {\r\n                and: messageLocalization.format(\"dxFilterBuilder-and\"),\r\n                or: messageLocalization.format(\"dxFilterBuilder-or\"),\r\n                notAnd: messageLocalization.format(\"dxFilterBuilder-notAnd\"),\r\n                notOr: messageLocalization.format(\"dxFilterBuilder-notOr\")\r\n            },\r\n            customOperations: [],\r\n            closePopupOnTargetScroll: true,\r\n            filterOperationDescriptions: {\r\n                between: messageLocalization.format(\"dxFilterBuilder-filterOperationBetween\"),\r\n                equal: messageLocalization.format(\"dxFilterBuilder-filterOperationEquals\"),\r\n                notEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationNotEquals\"),\r\n                lessThan: messageLocalization.format(\"dxFilterBuilder-filterOperationLess\"),\r\n                lessThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationLessOrEquals\"),\r\n                greaterThan: messageLocalization.format(\"dxFilterBuilder-filterOperationGreater\"),\r\n                greaterThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationGreaterOrEquals\"),\r\n                startsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationStartsWith\"),\r\n                contains: messageLocalization.format(\"dxFilterBuilder-filterOperationContains\"),\r\n                notContains: messageLocalization.format(\"dxFilterBuilder-filterOperationNotContains\"),\r\n                endsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationEndsWith\"),\r\n                isBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsBlank\"),\r\n                isNotBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\r\n            }\r\n        })\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"closePopupOnTargetScroll\":\r\n                break;\r\n            case \"onEditorPreparing\":\r\n            case \"onEditorPrepared\":\r\n            case \"onValueChanged\":\r\n                this._initActions();\r\n                break;\r\n            case \"customOperations\":\r\n                this._initCustomOperations();\r\n                this._invalidate();\r\n                break;\r\n            case \"fields\":\r\n            case \"maxGroupLevel\":\r\n            case \"groupOperations\":\r\n            case \"allowHierarchicalFields\":\r\n            case \"groupOperationDescriptions\":\r\n            case \"filterOperationDescriptions\":\r\n                this._invalidate();\r\n                break;\r\n            case \"value\":\r\n                if (args.value !== args.previousValue) {\r\n                    var disableInvalidateForValue = this._disableInvalidateForValue;\r\n                    if (!disableInvalidateForValue) {\r\n                        this._initModel();\r\n                        this._invalidate()\r\n                    }\r\n                    this._disableInvalidateForValue = false;\r\n                    this.executeAction(\"onValueChanged\", {\r\n                        value: args.value,\r\n                        previousValue: args.previousValue\r\n                    });\r\n                    this._disableInvalidateForValue = disableInvalidateForValue\r\n                }\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    getFilterExpression: function() {\r\n        var fields = this._getNormalizedFields();\r\n        var value = extend(true, [], this._model);\r\n        return _getFilterExpression(getNormalizedFilter(value), fields, this._customOperations, SOURCE)\r\n    },\r\n    _getNormalizedFields: function() {\r\n        return getNormalizedFields(this.option(\"fields\"))\r\n    },\r\n    _updateFilter: function() {\r\n        this._disableInvalidateForValue = true;\r\n        var value = extend(true, [], this._model);\r\n        var normalizedValue = getNormalizedFilter(value);\r\n        var oldValue = getNormalizedFilter(this._getModel(this.option(\"value\")));\r\n        if (JSON.stringify(oldValue) !== JSON.stringify(normalizedValue)) {\r\n            this.option(\"value\", normalizedValue)\r\n        }\r\n        this._disableInvalidateForValue = false;\r\n        this._fireContentReadyAction()\r\n    },\r\n    _init: function() {\r\n        this._initCustomOperations();\r\n        this._initModel();\r\n        this._initEditorFactory();\r\n        this._initActions();\r\n        this.callBase()\r\n    },\r\n    _initEditorFactory: function() {\r\n        this._editorFactory = new EditorFactory\r\n    },\r\n    _initCustomOperations: function() {\r\n        this._customOperations = getMergedOperations(this.option(\"customOperations\"), this.option(\"filterOperationDescriptions.between\"), this)\r\n    },\r\n    _getDefaultGroupOperation: function() {\r\n        var _this$option$, _this$option;\r\n        return null !== (_this$option$ = null === (_this$option = this.option(\"groupOperations\")) || void 0 === _this$option ? void 0 : _this$option[0]) && void 0 !== _this$option$ ? _this$option$ : OPERATORS.and\r\n    },\r\n    _getModel: function(value) {\r\n        return convertToInnerStructure(value, this._customOperations, this._getDefaultGroupOperation())\r\n    },\r\n    _initModel: function() {\r\n        this._model = this._getModel(this.option(\"value\"))\r\n    },\r\n    _initActions: function() {\r\n        var that = this;\r\n        that._actions = {};\r\n        ACTIONS.forEach((function(action) {\r\n            var actionConfig = extend({}, action.config);\r\n            that._actions[action.name] = that._createActionByOption(action.name, actionConfig)\r\n        }))\r\n    },\r\n    executeAction: function(actionName, options) {\r\n        var action = this._actions[actionName];\r\n        return action && action(options)\r\n    },\r\n    _initMarkup: function() {\r\n        this.$element().addClass(FILTER_BUILDER_CLASS);\r\n        this.callBase();\r\n        this._createGroupElementByCriteria(this._model).appendTo(this.$element())\r\n    },\r\n    _createConditionElement: function(condition, parent) {\r\n        return $(\"<div>\").addClass(FILTER_BUILDER_GROUP_CLASS).append(this._createConditionItem(condition, parent))\r\n    },\r\n    _createGroupElementByCriteria: function(criteria, parent) {\r\n        var groupLevel = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;\r\n        var $group = this._createGroupElement(criteria, parent, groupLevel);\r\n        var $groupContent = $group.find(\".\" + FILTER_BUILDER_GROUP_CONTENT_CLASS);\r\n        var groupCriteria = getGroupCriteria(criteria);\r\n        for (var i = 0; i < groupCriteria.length; i++) {\r\n            var innerCriteria = groupCriteria[i];\r\n            if (isGroup(innerCriteria)) {\r\n                this._createGroupElementByCriteria(innerCriteria, criteria, groupLevel + 1).appendTo($groupContent)\r\n            } else if (isCondition(innerCriteria)) {\r\n                this._createConditionElement(innerCriteria, criteria).appendTo($groupContent)\r\n            }\r\n        }\r\n        return $group\r\n    },\r\n    _createGroupElement: function(criteria, parent, groupLevel) {\r\n        var $groupItem = $(\"<div>\").addClass(FILTER_BUILDER_GROUP_ITEM_CLASS);\r\n        var $groupContent = $(\"<div>\").addClass(FILTER_BUILDER_GROUP_CONTENT_CLASS);\r\n        var $group = $(\"<div>\").addClass(FILTER_BUILDER_GROUP_CLASS).append($groupItem).append($groupContent);\r\n        if (null != parent) {\r\n            this._createRemoveButton(() => {\r\n                removeItem(parent, criteria);\r\n                $group.remove();\r\n                this._updateFilter()\r\n            }).appendTo($groupItem)\r\n        }\r\n        this._createGroupOperationButton(criteria).appendTo($groupItem);\r\n        this._createAddButton(() => {\r\n            var newGroup = createEmptyGroup(this._getDefaultGroupOperation());\r\n            addItem(newGroup, criteria);\r\n            this._createGroupElement(newGroup, criteria, groupLevel + 1).appendTo($groupContent);\r\n            this._updateFilter()\r\n        }, () => {\r\n            var field = this.option(\"fields\")[0];\r\n            var newCondition = createCondition(field, this._customOperations);\r\n            addItem(newCondition, criteria);\r\n            this._createConditionElement(newCondition, criteria).appendTo($groupContent);\r\n            this._updateFilter()\r\n        }, groupLevel).appendTo($groupItem);\r\n        return $group\r\n    },\r\n    _createButton: function(caption) {\r\n        return $(\"<div>\").text(caption)\r\n    },\r\n    _createGroupOperationButton: function(criteria) {\r\n        var groupOperations = this._getGroupOperations(criteria);\r\n        var groupMenuItem = getGroupMenuItem(criteria, groupOperations);\r\n        var caption = groupMenuItem.text;\r\n        var $operationButton = groupOperations && groupOperations.length < 2 ? this._createButton(caption).addClass(DISABLED_STATE_CLASS) : this._createButtonWithMenu({\r\n            caption: caption,\r\n            menu: {\r\n                items: groupOperations,\r\n                displayExpr: \"text\",\r\n                keyExpr: \"value\",\r\n                onItemClick: e => {\r\n                    if (groupMenuItem !== e.itemData) {\r\n                        setGroupValue(criteria, e.itemData.value);\r\n                        $operationButton.text(e.itemData.text);\r\n                        groupMenuItem = e.itemData;\r\n                        this._updateFilter()\r\n                    }\r\n                },\r\n                onContentReady: function(e) {\r\n                    e.component.selectItem(groupMenuItem)\r\n                },\r\n                cssClass: FILTER_BUILDER_GROUP_OPERATIONS_CLASS\r\n            }\r\n        });\r\n        return $operationButton.addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_GROUP_OPERATION_CLASS).attr(\"tabindex\", 0)\r\n    },\r\n    _createButtonWithMenu: function(options) {\r\n        var that = this;\r\n        var removeMenu = function() {\r\n            that.$element().find(\".\" + ACTIVE_CLASS).removeClass(ACTIVE_CLASS);\r\n            that.$element().find(\".dx-overlay .dx-treeview\").remove();\r\n            that.$element().find(\".dx-overlay\").remove()\r\n        };\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var position = rtlEnabled ? \"right\" : \"left\";\r\n        var $button = this._createButton(options.caption);\r\n        extend(options.menu, {\r\n            focusStateEnabled: true,\r\n            selectionMode: \"single\",\r\n            onItemClick: (handler = options.menu.onItemClick, function(e) {\r\n                handler(e);\r\n                if (\"dxclick\" === e.event.type) {\r\n                    removeMenu()\r\n                }\r\n            }),\r\n            onHiding: function(e) {\r\n                $button.removeClass(ACTIVE_CLASS)\r\n            },\r\n            position: {\r\n                my: position + \" top\",\r\n                at: position + \" bottom\",\r\n                offset: \"0 1\",\r\n                of: $button,\r\n                collision: \"flip\"\r\n            },\r\n            animation: null,\r\n            onHidden: function() {\r\n                removeMenu()\r\n            },\r\n            cssClass: FILTER_BUILDER_OVERLAY_CLASS + \" \" + options.menu.cssClass,\r\n            rtlEnabled: rtlEnabled\r\n        });\r\n        var handler;\r\n        options.popup = {\r\n            onShown: function(info) {\r\n                var treeViewElement = $(info.component.content()).find(\".dx-treeview\");\r\n                var treeView = treeViewElement.dxTreeView(\"instance\");\r\n                eventsEngine.on(treeViewElement, \"keyup keydown\", (function(e) {\r\n                    var keyName = normalizeKeyName(e);\r\n                    if (\"keydown\" === e.type && keyName === TAB_KEY || \"keyup\" === e.type && (keyName === ESCAPE_KEY || keyName === ENTER_KEY)) {\r\n                        info.component.hide();\r\n                        eventsEngine.trigger(options.menu.position.of, \"focus\")\r\n                    }\r\n                }));\r\n                treeView.focus();\r\n                treeView.option(\"focusedElement\", null)\r\n            }\r\n        };\r\n        this._subscribeOnClickAndEnterKey($button, (function() {\r\n            removeMenu();\r\n            that._createPopupWithTreeView(options, that.$element());\r\n            $button.addClass(ACTIVE_CLASS)\r\n        }));\r\n        return $button\r\n    },\r\n    _hasValueButton: function(condition) {\r\n        var customOperation = getCustomOperation(this._customOperations, condition[1]);\r\n        return customOperation ? false !== customOperation.hasValue : null !== condition[2]\r\n    },\r\n    _createOperationButtonWithMenu: function(condition, field) {\r\n        var that = this;\r\n        var availableOperations = getAvailableOperations(field, this.option(\"filterOperationDescriptions\"), this._customOperations);\r\n        var currentOperation = getOperationFromAvailable(getOperationValue(condition), availableOperations);\r\n        var $operationButton = this._createButtonWithMenu({\r\n            caption: currentOperation.text,\r\n            menu: {\r\n                items: availableOperations,\r\n                displayExpr: \"text\",\r\n                onItemRendered: function(e) {\r\n                    e.itemData.isCustom && $(e.itemElement).addClass(FILTER_BUILDER_MENU_CUSTOM_OPERATION_CLASS)\r\n                },\r\n                onContentReady: function(e) {\r\n                    e.component.selectItem(currentOperation)\r\n                },\r\n                onItemClick: e => {\r\n                    if (currentOperation !== e.itemData) {\r\n                        currentOperation = e.itemData;\r\n                        updateConditionByOperation(condition, currentOperation.value, that._customOperations);\r\n                        var $valueButton = $operationButton.siblings().filter(\".\" + FILTER_BUILDER_ITEM_VALUE_CLASS);\r\n                        if (that._hasValueButton(condition)) {\r\n                            if (0 !== $valueButton.length) {\r\n                                $valueButton.remove()\r\n                            }\r\n                            that._createValueButton(condition, field).appendTo($operationButton.parent())\r\n                        } else {\r\n                            $valueButton.remove()\r\n                        }\r\n                        $operationButton.html(currentOperation.text);\r\n                        this._updateFilter()\r\n                    }\r\n                },\r\n                cssClass: FILTER_BUILDER_FILTER_OPERATIONS_CLASS\r\n            }\r\n        }).addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_ITEM_OPERATION_CLASS).attr(\"tabindex\", 0);\r\n        return $operationButton\r\n    },\r\n    _createOperationAndValueButtons: function(condition, field, $item) {\r\n        this._createOperationButtonWithMenu(condition, field).appendTo($item);\r\n        if (this._hasValueButton(condition)) {\r\n            this._createValueButton(condition, field).appendTo($item)\r\n        }\r\n    },\r\n    _createFieldButtonWithMenu: function(fields, condition, field) {\r\n        var that = this;\r\n        var allowHierarchicalFields = this.option(\"allowHierarchicalFields\");\r\n        var items = getItems(fields, allowHierarchicalFields);\r\n        var item = getField(field.name || field.dataField, items);\r\n        var getFullCaption = function(item, items) {\r\n            return allowHierarchicalFields ? getCaptionWithParents(item, items) : item.caption\r\n        };\r\n        var $fieldButton = this._createButtonWithMenu({\r\n            caption: getFullCaption(item, items),\r\n            menu: {\r\n                items: items,\r\n                dataStructure: \"plain\",\r\n                keyExpr: \"id\",\r\n                parentId: \"parentId\",\r\n                displayExpr: \"caption\",\r\n                onItemClick: e => {\r\n                    if (item !== e.itemData) {\r\n                        item = e.itemData;\r\n                        condition[0] = item.name || item.dataField;\r\n                        condition[2] = \"object\" === item.dataType ? null : \"\";\r\n                        updateConditionByOperation(condition, getDefaultOperation(item), that._customOperations);\r\n                        $fieldButton.siblings().filter(\".\" + FILTER_BUILDER_ITEM_TEXT_CLASS).remove();\r\n                        that._createOperationAndValueButtons(condition, item, $fieldButton.parent());\r\n                        var caption = getFullCaption(item, e.component.option(\"items\"));\r\n                        $fieldButton.html(caption);\r\n                        this._updateFilter()\r\n                    }\r\n                },\r\n                onContentReady: function(e) {\r\n                    e.component.selectItem(item)\r\n                },\r\n                cssClass: FILTER_BUILDER_FIELDS_CLASS\r\n            }\r\n        }).addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_ITEM_FIELD_CLASS).attr(\"tabindex\", 0);\r\n        return $fieldButton\r\n    },\r\n    _createConditionItem: function(condition, parent) {\r\n        var $item = $(\"<div>\").addClass(FILTER_BUILDER_GROUP_ITEM_CLASS);\r\n        var fields = this._getNormalizedFields();\r\n        var field = getField(condition[0], fields);\r\n        this._createRemoveButton(() => {\r\n            removeItem(parent, condition);\r\n            var isSingleChild = 1 === $item.parent().children().length;\r\n            if (isSingleChild) {\r\n                $item.parent().remove()\r\n            } else {\r\n                $item.remove()\r\n            }\r\n            this._updateFilter()\r\n        }).appendTo($item);\r\n        this._createFieldButtonWithMenu(fields, condition, field).appendTo($item);\r\n        this._createOperationAndValueButtons(condition, field, $item);\r\n        return $item\r\n    },\r\n    _getGroupOperations: function(criteria) {\r\n        var groupOperations = this.option(\"groupOperations\");\r\n        var groupOperationDescriptions = this.option(\"groupOperationDescriptions\");\r\n        if (!groupOperations || !groupOperations.length) {\r\n            groupOperations = [getGroupValue(criteria).replace(\"!\", \"not\")]\r\n        }\r\n        return groupOperations.map(operation => ({\r\n            text: groupOperationDescriptions[operation],\r\n            value: OPERATORS[operation]\r\n        }))\r\n    },\r\n    _createRemoveButton: function(handler) {\r\n        var $removeButton = $(\"<div>\").addClass(FILTER_BUILDER_IMAGE_CLASS).addClass(FILTER_BUILDER_IMAGE_REMOVE_CLASS).addClass(FILTER_BUILDER_ACTION_CLASS).attr(\"tabindex\", 0);\r\n        this._subscribeOnClickAndEnterKey($removeButton, handler);\r\n        return $removeButton\r\n    },\r\n    _createAddButton: function(addGroupHandler, addConditionHandler, groupLevel) {\r\n        var $button;\r\n        var maxGroupLevel = this.option(\"maxGroupLevel\");\r\n        if (isDefined(maxGroupLevel) && groupLevel >= maxGroupLevel) {\r\n            $button = this._createButton();\r\n            this._subscribeOnClickAndEnterKey($button, addConditionHandler)\r\n        } else {\r\n            $button = this._createButtonWithMenu({\r\n                menu: {\r\n                    items: [{\r\n                        caption: messageLocalization.format(\"dxFilterBuilder-addCondition\"),\r\n                        click: addConditionHandler\r\n                    }, {\r\n                        caption: messageLocalization.format(\"dxFilterBuilder-addGroup\"),\r\n                        click: addGroupHandler\r\n                    }],\r\n                    displayExpr: \"caption\",\r\n                    onItemClick: function(e) {\r\n                        e.itemData.click()\r\n                    },\r\n                    cssClass: FILTER_BUILDER_ADD_CONDITION_CLASS\r\n                }\r\n            })\r\n        }\r\n        return $button.addClass(FILTER_BUILDER_IMAGE_CLASS).addClass(FILTER_BUILDER_IMAGE_ADD_CLASS).addClass(FILTER_BUILDER_ACTION_CLASS).attr(\"tabindex\", 0)\r\n    },\r\n    _createValueText: function(item, field, $container) {\r\n        var that = this;\r\n        var $text = $(\"<div>\").html(\"&nbsp;\").addClass(FILTER_BUILDER_ITEM_VALUE_TEXT_CLASS).attr(\"tabindex\", 0).appendTo($container);\r\n        var value = item[2];\r\n        var customOperation = getCustomOperation(that._customOperations, item[1]);\r\n        if (!customOperation && field.lookup) {\r\n            getCurrentLookupValueText(field, value, (function(result) {\r\n                renderValueText($text, result)\r\n            }))\r\n        } else {\r\n            when(getCurrentValueText(field, value, customOperation)).done(result => {\r\n                renderValueText($text, result, customOperation)\r\n            })\r\n        }\r\n        that._subscribeOnClickAndEnterKey($text, (function(e) {\r\n            if (\"keyup\" === e.type) {\r\n                e.stopPropagation()\r\n            }\r\n            that._createValueEditorWithEvents(item, field, $container)\r\n        }));\r\n        return $text\r\n    },\r\n    _updateConditionValue: function(item, value, callback) {\r\n        var areValuesDifferent = item[2] !== value;\r\n        if (areValuesDifferent) {\r\n            item[2] = value\r\n        }\r\n        callback();\r\n        this._updateFilter()\r\n    },\r\n    _addDocumentKeyUp: function($editor, handler) {\r\n        var isComposing = false;\r\n        var hasCompositionJustEnded = false;\r\n        var document = domAdapter.getDocument();\r\n        var documentKeyUpHandler = e => {\r\n            if (isComposing || hasCompositionJustEnded) {\r\n                hasCompositionJustEnded = false;\r\n                return\r\n            }\r\n            handler(e)\r\n        };\r\n        eventsEngine.on(document, \"keyup\", documentKeyUpHandler);\r\n        var input = $editor.find(\"input\");\r\n        eventsEngine.on(input, \"compositionstart\", () => {\r\n            isComposing = true\r\n        });\r\n        eventsEngine.on(input, \"compositionend\", () => {\r\n            isComposing = false;\r\n            hasCompositionJustEnded = true\r\n        });\r\n        eventsEngine.on(input, \"keydown\", event => {\r\n            if (229 !== event.which) {\r\n                hasCompositionJustEnded = false\r\n            }\r\n        });\r\n        this._documentKeyUpHandler = documentKeyUpHandler\r\n    },\r\n    _addDocumentClick: function($editor, closeEditorFunc) {\r\n        var document = domAdapter.getDocument();\r\n        var documentClickHandler = e => {\r\n            if (!this._isFocusOnEditorParts($editor, e.target)) {\r\n                eventsEngine.trigger($editor.find(\"input\"), \"change\");\r\n                closeEditorFunc()\r\n            }\r\n        };\r\n        eventsEngine.on(document, \"dxpointerdown\", documentClickHandler);\r\n        this._documentClickHandler = documentClickHandler\r\n    },\r\n    _isFocusOnEditorParts: function($editor, target) {\r\n        var activeElement = target || domAdapter.getActiveElement();\r\n        return $(activeElement).closest($editor.children()).length || $(activeElement).closest(\".dx-dropdowneditor-overlay\").length\r\n    },\r\n    _removeEvents: function() {\r\n        var document = domAdapter.getDocument();\r\n        isDefined(this._documentKeyUpHandler) && eventsEngine.off(document, \"keyup\", this._documentKeyUpHandler);\r\n        isDefined(this._documentClickHandler) && eventsEngine.off(document, \"dxpointerdown\", this._documentClickHandler)\r\n    },\r\n    _dispose: function() {\r\n        this._removeEvents();\r\n        this.callBase()\r\n    },\r\n    _createValueEditorWithEvents: function(item, field, $container) {\r\n        var value = item[2];\r\n        var createValueText = () => {\r\n            $container.empty();\r\n            this._removeEvents();\r\n            return this._createValueText(item, field, $container)\r\n        };\r\n        var closeEditor = () => {\r\n            this._updateConditionValue(item, value, (function() {\r\n                createValueText()\r\n            }))\r\n        };\r\n        var options = {\r\n            value: \"\" === value ? null : value,\r\n            filterOperation: getOperationValue(item),\r\n            setValue: function(data) {\r\n                value = null === data ? \"\" : data\r\n            },\r\n            closeEditor: closeEditor,\r\n            text: $container.text()\r\n        };\r\n        $container.empty();\r\n        var $editor = this._createValueEditor($container, field, options);\r\n        eventsEngine.trigger($editor.find(\"input\").not(\":hidden\").eq(0), \"focus\");\r\n        this._removeEvents();\r\n        this._addDocumentClick($editor, closeEditor);\r\n        this._addDocumentKeyUp($editor, e => {\r\n            var keyName = normalizeKeyName(e);\r\n            if (keyName === TAB_KEY) {\r\n                if (this._isFocusOnEditorParts($editor)) {\r\n                    return\r\n                }\r\n                this._updateConditionValue(item, value, (function() {\r\n                    createValueText();\r\n                    if (e.shiftKey) {\r\n                        eventsEngine.trigger($container.prev(), \"focus\")\r\n                    }\r\n                }))\r\n            }\r\n            if (keyName === ESCAPE_KEY) {\r\n                eventsEngine.trigger(createValueText(), \"focus\")\r\n            }\r\n            if (keyName === ENTER_KEY) {\r\n                this._updateConditionValue(item, value, (function() {\r\n                    eventsEngine.trigger(createValueText(), \"focus\")\r\n                }))\r\n            }\r\n        });\r\n        this._fireContentReadyAction()\r\n    },\r\n    _createValueButton: function(item, field) {\r\n        var $valueButton = $(\"<div>\").addClass(FILTER_BUILDER_ITEM_TEXT_CLASS).addClass(FILTER_BUILDER_ITEM_VALUE_CLASS);\r\n        this._createValueText(item, field, $valueButton);\r\n        return $valueButton\r\n    },\r\n    _createValueEditor: function($container, field, options) {\r\n        var $editor = $(\"<div>\").attr(\"tabindex\", 0).appendTo($container);\r\n        var customOperation = getCustomOperation(this._customOperations, options.filterOperation);\r\n        var editorTemplate = customOperation && customOperation.editorTemplate ? customOperation.editorTemplate : field.editorTemplate;\r\n        if (editorTemplate) {\r\n            var template = this._getTemplate(editorTemplate);\r\n            template.render({\r\n                model: extend({\r\n                    field: field\r\n                }, options),\r\n                container: $editor\r\n            })\r\n        } else {\r\n            this._editorFactory.createEditor.call(this, $editor, extend({}, field, options, {\r\n                parentType: SOURCE\r\n            }))\r\n        }\r\n        return $editor\r\n    },\r\n    _createPopupWithTreeView: function(options, $container) {\r\n        var that = this;\r\n        var $popup = $(\"<div>\").addClass(options.menu.cssClass).appendTo($container);\r\n        this._createComponent($popup, Popup, {\r\n            wrapperAttr: {\r\n                class: options.menu.cssClass\r\n            },\r\n            onHiding: options.menu.onHiding,\r\n            onHidden: options.menu.onHidden,\r\n            rtlEnabled: options.menu.rtlEnabled,\r\n            position: options.menu.position,\r\n            animation: options.menu.animation,\r\n            contentTemplate: function(contentElement) {\r\n                var $menuContainer = $(\"<div>\").appendTo(contentElement);\r\n                that._createComponent($menuContainer, TreeView, options.menu);\r\n                this.repaint()\r\n            },\r\n            _ignoreFunctionValueDeprecation: true,\r\n            maxHeight: function() {\r\n                return getElementMaxHeightByWindow(options.menu.position.of)\r\n            },\r\n            visible: true,\r\n            focusStateEnabled: false,\r\n            hideOnParentScroll: this.option(\"closePopupOnTargetScroll\"),\r\n            closeOnOutsideClick: true,\r\n            onShown: options.popup.onShown,\r\n            shading: false,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            showTitle: false\r\n        })\r\n    },\r\n    _subscribeOnClickAndEnterKey: function($button, handler) {\r\n        eventsEngine.on($button, \"dxclick\", handler);\r\n        eventsEngine.on($button, \"keyup\", (function(e) {\r\n            if (normalizeKeyName(e) === ENTER_KEY) {\r\n                handler(e)\r\n            }\r\n        }))\r\n    }\r\n});\r\nregisterComponent(\"dxFilterBuilder\", FilterBuilder);\r\nexport default FilterBuilder;\r\n","/**\r\n * DevExtreme (esm/ui/filter_builder.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport FilterBuilder from \"./filter_builder/filter_builder\";\r\nexport default FilterBuilder;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_builder.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport FilterBuilder from \"./../filter_builder\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport ScrollView from \"./../scroll_view\";\r\nimport Popup from \"./../popup\";\r\nimport {\r\n    restoreFocus\r\n} from \"../shared/accessibility\";\r\nvar FilterBuilderView = modules.View.inherit({\r\n    _renderCore: function() {\r\n        this._updatePopupOptions()\r\n    },\r\n    _updatePopupOptions: function() {\r\n        if (this.option(\"filterBuilderPopup.visible\")) {\r\n            this._initPopup()\r\n        } else if (this._filterBuilderPopup) {\r\n            this._filterBuilderPopup.hide()\r\n        }\r\n    },\r\n    _disposePopup: function() {\r\n        if (this._filterBuilderPopup) {\r\n            this._filterBuilderPopup.dispose();\r\n            this._filterBuilderPopup = void 0\r\n        }\r\n        if (this._filterBuilder) {\r\n            this._filterBuilder.dispose();\r\n            this._filterBuilder = void 0\r\n        }\r\n    },\r\n    _initPopup: function() {\r\n        var that = this;\r\n        that._disposePopup();\r\n        that._filterBuilderPopup = that._createComponent(that.element(), Popup, extend({\r\n            title: messageLocalization.format(\"dxDataGrid-filterBuilderPopupTitle\"),\r\n            contentTemplate: function($contentElement) {\r\n                return that._getPopupContentTemplate($contentElement)\r\n            },\r\n            onOptionChanged: function(args) {\r\n                if (\"visible\" === args.name) {\r\n                    that.option(\"filterBuilderPopup.visible\", args.value)\r\n                }\r\n            },\r\n            toolbarItems: that._getPopupToolbarItems()\r\n        }, that.option(\"filterBuilderPopup\"), {\r\n            onHidden: function(e) {\r\n                restoreFocus(that);\r\n                that._disposePopup()\r\n            }\r\n        }))\r\n    },\r\n    _getPopupContentTemplate: function(contentElement) {\r\n        var $contentElement = $(contentElement);\r\n        var $filterBuilderContainer = $(\"<div>\").appendTo($(contentElement));\r\n        this._filterBuilder = this._createComponent($filterBuilderContainer, FilterBuilder, extend({\r\n            value: this.option(\"filterValue\"),\r\n            fields: this.getController(\"columns\").getFilteringColumns()\r\n        }, this.option(\"filterBuilder\"), {\r\n            customOperations: this.getController(\"filterSync\").getCustomFilterOperations()\r\n        }));\r\n        this._createComponent($contentElement, ScrollView, {\r\n            direction: \"both\"\r\n        })\r\n    },\r\n    _getPopupToolbarItems: function() {\r\n        var that = this;\r\n        return [{\r\n            toolbar: \"bottom\",\r\n            location: \"after\",\r\n            widget: \"dxButton\",\r\n            options: {\r\n                text: messageLocalization.format(\"OK\"),\r\n                onClick: function(e) {\r\n                    var filter = that._filterBuilder.option(\"value\");\r\n                    that.option(\"filterValue\", filter);\r\n                    that._filterBuilderPopup.hide()\r\n                }\r\n            }\r\n        }, {\r\n            toolbar: \"bottom\",\r\n            location: \"after\",\r\n            widget: \"dxButton\",\r\n            options: {\r\n                text: messageLocalization.format(\"Cancel\"),\r\n                onClick: function(e) {\r\n                    that._filterBuilderPopup.hide()\r\n                }\r\n            }\r\n        }]\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"filterBuilder\":\r\n            case \"filterBuilderPopup\":\r\n                this._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nexport var filterBuilderModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterBuilder: {\r\n                groupOperationDescriptions: {\r\n                    and: messageLocalization.format(\"dxFilterBuilder-and\"),\r\n                    or: messageLocalization.format(\"dxFilterBuilder-or\"),\r\n                    notAnd: messageLocalization.format(\"dxFilterBuilder-notAnd\"),\r\n                    notOr: messageLocalization.format(\"dxFilterBuilder-notOr\")\r\n                },\r\n                filterOperationDescriptions: {\r\n                    between: messageLocalization.format(\"dxFilterBuilder-filterOperationBetween\"),\r\n                    equal: messageLocalization.format(\"dxFilterBuilder-filterOperationEquals\"),\r\n                    notEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationNotEquals\"),\r\n                    lessThan: messageLocalization.format(\"dxFilterBuilder-filterOperationLess\"),\r\n                    lessThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationLessOrEquals\"),\r\n                    greaterThan: messageLocalization.format(\"dxFilterBuilder-filterOperationGreater\"),\r\n                    greaterThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationGreaterOrEquals\"),\r\n                    startsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationStartsWith\"),\r\n                    contains: messageLocalization.format(\"dxFilterBuilder-filterOperationContains\"),\r\n                    notContains: messageLocalization.format(\"dxFilterBuilder-filterOperationNotContains\"),\r\n                    endsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationEndsWith\"),\r\n                    isBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsBlank\"),\r\n                    isNotBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\r\n                }\r\n            },\r\n            filterBuilderPopup: {}\r\n        }\r\n    },\r\n    views: {\r\n        filterBuilderView: FilterBuilderView\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.filter_builder.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    filterBuilderModule\r\n} from \"../grid_core/ui.grid_core.filter_builder\";\r\ncore.registerModule(\"filterBuilder\", filterBuilderModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.filter_panel.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridUtils from \"./ui.grid_core.utils\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport CheckBox from \"../check_box\";\r\nimport {\r\n    getCurrentLookupValueText,\r\n    getCustomOperation,\r\n    getCurrentValueText,\r\n    getField,\r\n    getCaptionByOperation,\r\n    getGroupValue,\r\n    isCondition,\r\n    isGroup\r\n} from \"../filter_builder/utils\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    captionize\r\n} from \"../../core/utils/inflector\";\r\nimport {\r\n    registerKeyboardAction\r\n} from \"./ui.grid_core.accessibility\";\r\nvar FILTER_PANEL_CLASS = \"filter-panel\";\r\nvar FILTER_PANEL_TEXT_CLASS = FILTER_PANEL_CLASS + \"-text\";\r\nvar FILTER_PANEL_CHECKBOX_CLASS = FILTER_PANEL_CLASS + \"-checkbox\";\r\nvar FILTER_PANEL_CLEAR_FILTER_CLASS = FILTER_PANEL_CLASS + \"-clear-filter\";\r\nvar FILTER_PANEL_LEFT_CONTAINER = FILTER_PANEL_CLASS + \"-left\";\r\nvar FILTER_PANEL_TARGET = \"filterPanel\";\r\nvar FilterPanelView = modules.View.inherit({\r\n    isVisible: function() {\r\n        return this.option(\"filterPanel.visible\") && this.getController(\"data\").dataSource()\r\n    },\r\n    init: function() {\r\n        this.getController(\"data\").dataSourceChanged.add(() => this.render())\r\n    },\r\n    _renderCore: function() {\r\n        var $element = this.element();\r\n        $element.empty().addClass(this.addWidgetPrefix(FILTER_PANEL_CLASS));\r\n        var $leftContainer = $(\"<div>\").addClass(this.addWidgetPrefix(FILTER_PANEL_LEFT_CONTAINER)).appendTo($element);\r\n        if (this.option(\"filterValue\") || this._filterValueBuffer) {\r\n            $leftContainer.append(this._getCheckElement()).append(this._getFilterElement()).append(this._getTextElement());\r\n            $element.append(this._getRemoveButtonElement())\r\n        } else {\r\n            $leftContainer.append(this._getFilterElement()).append(this._getTextElement())\r\n        }\r\n    },\r\n    _getCheckElement: function() {\r\n        var that = this;\r\n        var $element = $(\"<div>\").addClass(this.addWidgetPrefix(FILTER_PANEL_CHECKBOX_CLASS));\r\n        that._createComponent($element, CheckBox, {\r\n            value: that.option(\"filterPanel.filterEnabled\"),\r\n            onValueChanged: function(e) {\r\n                that.option(\"filterPanel.filterEnabled\", e.value)\r\n            }\r\n        });\r\n        $element.attr(\"title\", this.option(\"filterPanel.texts.filterEnabledHint\"));\r\n        return $element\r\n    },\r\n    _getFilterElement: function() {\r\n        var that = this;\r\n        var $element = $(\"<div>\").addClass(\"dx-icon-filter\");\r\n        eventsEngine.on($element, \"click\", () => that._showFilterBuilder());\r\n        registerKeyboardAction(\"filterPanel\", that, $element, void 0, () => that._showFilterBuilder());\r\n        that._addTabIndexToElement($element);\r\n        return $element\r\n    },\r\n    _getTextElement: function() {\r\n        var that = this;\r\n        var $textElement = $(\"<div>\").addClass(that.addWidgetPrefix(FILTER_PANEL_TEXT_CLASS));\r\n        var filterText;\r\n        var filterValue = that.option(\"filterValue\");\r\n        if (filterValue) {\r\n            when(that.getFilterText(filterValue, that.getController(\"filterSync\").getCustomFilterOperations())).done((function(filterText) {\r\n                var customizeText = that.option(\"filterPanel.customizeText\");\r\n                if (customizeText) {\r\n                    var customText = customizeText({\r\n                        component: that.component,\r\n                        filterValue: filterValue,\r\n                        text: filterText\r\n                    });\r\n                    if (\"string\" === typeof customText) {\r\n                        filterText = customText\r\n                    }\r\n                }\r\n                $textElement.text(filterText)\r\n            }))\r\n        } else {\r\n            filterText = that.option(\"filterPanel.texts.createFilter\");\r\n            $textElement.text(filterText)\r\n        }\r\n        eventsEngine.on($textElement, \"click\", () => that._showFilterBuilder());\r\n        registerKeyboardAction(\"filterPanel\", that, $textElement, void 0, () => that._showFilterBuilder());\r\n        that._addTabIndexToElement($textElement);\r\n        return $textElement\r\n    },\r\n    _showFilterBuilder: function() {\r\n        this.option(\"filterBuilderPopup.visible\", true)\r\n    },\r\n    _getRemoveButtonElement: function() {\r\n        var that = this;\r\n        var clearFilterValue = () => that.option(\"filterValue\", null);\r\n        var $element = $(\"<div>\").addClass(that.addWidgetPrefix(FILTER_PANEL_CLEAR_FILTER_CLASS)).text(that.option(\"filterPanel.texts.clearFilter\"));\r\n        eventsEngine.on($element, \"click\", clearFilterValue);\r\n        registerKeyboardAction(\"filterPanel\", this, $element, void 0, clearFilterValue);\r\n        that._addTabIndexToElement($element);\r\n        return $element\r\n    },\r\n    _addTabIndexToElement: function($element) {\r\n        if (!this.option(\"useLegacyKeyboardNavigation\")) {\r\n            var tabindex = this.option(\"tabindex\") || 0;\r\n            $element.attr(\"tabindex\", tabindex)\r\n        }\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"filterValue\":\r\n                this._invalidate();\r\n                this.option(\"filterPanel.filterEnabled\", true);\r\n                args.handled = true;\r\n                break;\r\n            case \"filterPanel\":\r\n                this._invalidate();\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _getConditionText: function(fieldText, operationText, valueText) {\r\n        var result = \"[\".concat(fieldText, \"] \").concat(operationText);\r\n        if (isDefined(valueText)) {\r\n            result += valueText\r\n        }\r\n        return result\r\n    },\r\n    _getValueMaskedText: function(value) {\r\n        return Array.isArray(value) ? \"('\".concat(value.join(\"', '\"), \"')\") : \" '\".concat(value, \"'\")\r\n    },\r\n    _getValueText: function(field, customOperation, value) {\r\n        var deferred = new Deferred;\r\n        var hasCustomOperation = customOperation && customOperation.customizeText;\r\n        if (isDefined(value) || hasCustomOperation) {\r\n            if (!hasCustomOperation && field.lookup) {\r\n                getCurrentLookupValueText(field, value, data => {\r\n                    deferred.resolve(this._getValueMaskedText(data))\r\n                })\r\n            } else {\r\n                var displayValue = Array.isArray(value) ? value : gridUtils.getDisplayValue(field, value);\r\n                when(getCurrentValueText(field, displayValue, customOperation, FILTER_PANEL_TARGET)).done(data => {\r\n                    deferred.resolve(this._getValueMaskedText(data))\r\n                })\r\n            }\r\n        } else {\r\n            deferred.resolve(\"\")\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    getConditionText: function(filterValue, options) {\r\n        var that = this;\r\n        var operation = filterValue[1];\r\n        var deferred = new Deferred;\r\n        var customOperation = getCustomOperation(options.customOperations, operation);\r\n        var operationText;\r\n        var field = getField(filterValue[0], options.columns);\r\n        var fieldText = field.caption || \"\";\r\n        var value = filterValue[2];\r\n        if (customOperation) {\r\n            operationText = customOperation.caption || captionize(customOperation.name)\r\n        } else if (null === value) {\r\n            operationText = getCaptionByOperation(\"=\" === operation ? \"isblank\" : \"isnotblank\", options.filterOperationDescriptions)\r\n        } else {\r\n            operationText = getCaptionByOperation(operation, options.filterOperationDescriptions)\r\n        }\r\n        this._getValueText(field, customOperation, value).done(valueText => {\r\n            deferred.resolve(that._getConditionText(fieldText, operationText, valueText))\r\n        });\r\n        return deferred\r\n    },\r\n    getGroupText: function(filterValue, options, isInnerGroup) {\r\n        var that = this;\r\n        var result = new Deferred;\r\n        var textParts = [];\r\n        var groupValue = getGroupValue(filterValue);\r\n        filterValue.forEach(item => {\r\n            if (isCondition(item)) {\r\n                textParts.push(that.getConditionText(item, options))\r\n            } else if (isGroup(item)) {\r\n                textParts.push(that.getGroupText(item, options, true))\r\n            }\r\n        });\r\n        when.apply(this, textParts).done((function() {\r\n            var text;\r\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n                args[_key] = arguments[_key]\r\n            }\r\n            if (\"!\" === groupValue[0]) {\r\n                var groupText = options.groupOperationDescriptions[\"not\" + groupValue.substring(1, 2).toUpperCase() + groupValue.substring(2)].split(\" \");\r\n                text = \"\".concat(groupText[0], \" \").concat(args[0])\r\n            } else {\r\n                text = args.join(\" \".concat(options.groupOperationDescriptions[groupValue], \" \"))\r\n            }\r\n            if (isInnerGroup) {\r\n                text = \"(\".concat(text, \")\")\r\n            }\r\n            result.resolve(text)\r\n        }));\r\n        return result\r\n    },\r\n    getFilterText: function(filterValue, customOperations) {\r\n        var options = {\r\n            customOperations: customOperations,\r\n            columns: this.getController(\"columns\").getFilteringColumns(),\r\n            filterOperationDescriptions: this.option(\"filterBuilder.filterOperationDescriptions\"),\r\n            groupOperationDescriptions: this.option(\"filterBuilder.groupOperationDescriptions\")\r\n        };\r\n        return isCondition(filterValue) ? this.getConditionText(filterValue, options) : this.getGroupText(filterValue, options)\r\n    }\r\n});\r\nexport var filterPanelModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            filterPanel: {\r\n                visible: false,\r\n                filterEnabled: true,\r\n                texts: {\r\n                    createFilter: messageLocalization.format(\"dxDataGrid-filterPanelCreateFilter\"),\r\n                    clearFilter: messageLocalization.format(\"dxDataGrid-filterPanelClearFilter\"),\r\n                    filterEnabledHint: messageLocalization.format(\"dxDataGrid-filterPanelFilterEnabledHint\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    views: {\r\n        filterPanelView: FilterPanelView\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                optionChanged: function(args) {\r\n                    switch (args.name) {\r\n                        case \"filterPanel\":\r\n                            this._applyFilter();\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.filter_panel.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport core from \"./ui.data_grid.core\";\r\nimport {\r\n    filterPanelModule\r\n} from \"../grid_core/ui.grid_core.filter_panel\";\r\ncore.registerModule(\"filterPanel\", filterPanelModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.search.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport dataQuery from \"../../data/query\";\r\nvar SEARCH_PANEL_CLASS = \"search-panel\";\r\nvar SEARCH_TEXT_CLASS = \"search-text\";\r\nvar HEADER_PANEL_CLASS = \"header-panel\";\r\nvar FILTERING_TIMEOUT = 700;\r\n\r\nfunction allowSearch(column) {\r\n    return isDefined(column.allowSearch) ? column.allowSearch : column.allowFiltering\r\n}\r\n\r\nfunction parseValue(column, text) {\r\n    var lookup = column.lookup;\r\n    if (!column.parseValue) {\r\n        return text\r\n    }\r\n    if (lookup) {\r\n        return column.parseValue.call(lookup, text)\r\n    }\r\n    return column.parseValue(text)\r\n}\r\nexport var searchModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            searchPanel: {\r\n                visible: false,\r\n                width: 160,\r\n                placeholder: messageLocalization.format(\"dxDataGrid-searchPanelPlaceholder\"),\r\n                highlightSearchText: true,\r\n                highlightCaseSensitive: false,\r\n                text: \"\",\r\n                searchVisibleColumnsOnly: false\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                publicMethods: function() {\r\n                    return this.callBase().concat([\"searchByText\"])\r\n                },\r\n                _calculateAdditionalFilter: function() {\r\n                    var filter = this.callBase();\r\n                    var searchFilter = function(that, text) {\r\n                        var i;\r\n                        var column;\r\n                        var columns = that._columnsController.getColumns();\r\n                        var searchVisibleColumnsOnly = that.option(\"searchPanel.searchVisibleColumnsOnly\");\r\n                        var lookup;\r\n                        var filters = [];\r\n                        if (!text) {\r\n                            return null\r\n                        }\r\n\r\n                        function onQueryDone(items) {\r\n                            var valueGetter = compileGetter(lookup.valueExpr);\r\n                            for (var _i = 0; _i < items.length; _i++) {\r\n                                var value = valueGetter(items[_i]);\r\n                                filters.push(column.createFilterExpression(value, null, \"search\"))\r\n                            }\r\n                        }\r\n                        for (i = 0; i < columns.length; i++) {\r\n                            column = columns[i];\r\n                            if (searchVisibleColumnsOnly && !column.visible) {\r\n                                continue\r\n                            }\r\n                            if (allowSearch(column) && column.calculateFilterExpression) {\r\n                                lookup = column.lookup;\r\n                                var filterValue = parseValue(column, text);\r\n                                if (lookup && lookup.items) {\r\n                                    dataQuery(lookup.items).filter(column.createFilterExpression.call({\r\n                                        dataField: lookup.displayExpr,\r\n                                        dataType: lookup.dataType,\r\n                                        calculateFilterExpression: column.calculateFilterExpression\r\n                                    }, filterValue, null, \"search\")).enumerate().done(onQueryDone)\r\n                                } else if (void 0 !== filterValue) {\r\n                                    filters.push(column.createFilterExpression(filterValue, null, \"search\"))\r\n                                }\r\n                            }\r\n                        }\r\n                        if (0 === filters.length) {\r\n                            return [\"!\"]\r\n                        }\r\n                        return gridCoreUtils.combineFilters(filters, \"or\")\r\n                    }(this, this.option(\"searchPanel.text\"));\r\n                    return gridCoreUtils.combineFilters([filter, searchFilter])\r\n                },\r\n                searchByText: function(text) {\r\n                    this.option(\"searchPanel.text\", text)\r\n                },\r\n                optionChanged: function(args) {\r\n                    switch (args.fullName) {\r\n                        case \"searchPanel.text\":\r\n                        case \"searchPanel\":\r\n                            this._applyFilter();\r\n                            args.handled = true;\r\n                            break;\r\n                        default:\r\n                            this.callBase(args)\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            headerPanel: function() {\r\n                var getSearchPanelOptions = function(that) {\r\n                    return that.option(\"searchPanel\")\r\n                };\r\n                return {\r\n                    _getToolbarItems: function() {\r\n                        var items = this.callBase();\r\n                        return this._prepareSearchItem(items)\r\n                    },\r\n                    _prepareSearchItem: function(items) {\r\n                        var that = this;\r\n                        var dataController = that.getController(\"data\");\r\n                        var searchPanelOptions = getSearchPanelOptions(that);\r\n                        if (searchPanelOptions && searchPanelOptions.visible) {\r\n                            var toolbarItem = {\r\n                                template: function(data, index, container) {\r\n                                    var $search = $(\"<div>\").addClass(that.addWidgetPrefix(SEARCH_PANEL_CLASS)).appendTo(container);\r\n                                    that.getController(\"editorFactory\").createEditor($search, {\r\n                                        width: searchPanelOptions.width,\r\n                                        placeholder: searchPanelOptions.placeholder,\r\n                                        parentType: \"searchPanel\",\r\n                                        value: that.option(\"searchPanel.text\"),\r\n                                        updateValueTimeout: FILTERING_TIMEOUT,\r\n                                        setValue: function(value) {\r\n                                            dataController.searchByText(value)\r\n                                        },\r\n                                        editorOptions: {\r\n                                            inputAttr: {\r\n                                                \"aria-label\": messageLocalization.format(\"\".concat(that.component.NAME, \"-ariaSearchInGrid\"))\r\n                                            }\r\n                                        }\r\n                                    });\r\n                                    that.resize()\r\n                                },\r\n                                name: \"searchPanel\",\r\n                                location: \"after\",\r\n                                locateInMenu: \"never\",\r\n                                sortIndex: 40\r\n                            };\r\n                            items.push(toolbarItem)\r\n                        }\r\n                        return items\r\n                    },\r\n                    getSearchTextEditor: function() {\r\n                        var that = this;\r\n                        var $element = that.element();\r\n                        var $searchPanel = $element.find(\".\" + that.addWidgetPrefix(SEARCH_PANEL_CLASS)).filter((function() {\r\n                            return $(this).closest(\".\" + that.addWidgetPrefix(HEADER_PANEL_CLASS)).is($element)\r\n                        }));\r\n                        if ($searchPanel.length) {\r\n                            return $searchPanel.dxTextBox(\"instance\")\r\n                        }\r\n                        return null\r\n                    },\r\n                    isVisible: function() {\r\n                        var searchPanelOptions = getSearchPanelOptions(this);\r\n                        return this.callBase() || searchPanelOptions && searchPanelOptions.visible\r\n                    },\r\n                    optionChanged: function(args) {\r\n                        if (\"searchPanel\" === args.name) {\r\n                            if (\"searchPanel.text\" === args.fullName) {\r\n                                var editor = this.getSearchTextEditor();\r\n                                if (editor) {\r\n                                    editor.option(\"value\", args.value)\r\n                                }\r\n                            } else {\r\n                                this._invalidate()\r\n                            }\r\n                            args.handled = true\r\n                        } else {\r\n                            this.callBase(args)\r\n                        }\r\n                    }\r\n                }\r\n            }(),\r\n            rowsView: {\r\n                init: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._searchParams = []\r\n                },\r\n                _getFormattedSearchText: function(column, searchText) {\r\n                    var value = parseValue(column, searchText);\r\n                    var formatOptions = gridCoreUtils.getFormatOptionsByColumn(column, \"search\");\r\n                    return gridCoreUtils.formatValue(value, formatOptions)\r\n                },\r\n                _getStringNormalizer: function() {\r\n                    var isCaseSensitive = this.option(\"searchPanel.highlightCaseSensitive\");\r\n                    return function(str) {\r\n                        return isCaseSensitive ? str : str.toLowerCase()\r\n                    }\r\n                },\r\n                _findHighlightingTextNodes: function(column, cellElement, searchText) {\r\n                    var _$items;\r\n                    var $parent = cellElement.parent();\r\n                    var $items;\r\n                    var stringNormalizer = this._getStringNormalizer();\r\n                    var normalizedSearchText = stringNormalizer(searchText);\r\n                    var resultTextNodes = [];\r\n                    if (!$parent.length) {\r\n                        $parent = $(\"<div>\").append(cellElement)\r\n                    } else if (column) {\r\n                        if (column.groupIndex >= 0 && !column.showWhenGrouped) {\r\n                            $items = cellElement\r\n                        } else {\r\n                            var columnIndex = this._columnsController.getVisibleIndex(column.index);\r\n                            $items = $parent.children(\"td\").eq(columnIndex).find(\"*\")\r\n                        }\r\n                    }\r\n                    $items = null !== (_$items = $items) && void 0 !== _$items && _$items.length ? $items : $parent.find(\"*\");\r\n                    $items.each((function(_, element) {\r\n                        var $contents = $(element).contents();\r\n                        for (var i = 0; i < $contents.length; i++) {\r\n                            var node = $contents.get(i);\r\n                            if (3 === node.nodeType) {\r\n                                var normalizedText = stringNormalizer(node.textContent || node.nodeValue);\r\n                                if (normalizedText.indexOf(normalizedSearchText) > -1) {\r\n                                    resultTextNodes.push(node)\r\n                                }\r\n                            }\r\n                        }\r\n                    }));\r\n                    return resultTextNodes\r\n                },\r\n                _highlightSearchTextCore: function($textNode, searchText) {\r\n                    var $searchTextSpan = $(\"<span>\").addClass(this.addWidgetPrefix(SEARCH_TEXT_CLASS));\r\n                    var text = $textNode.text();\r\n                    var firstContentElement = $textNode[0];\r\n                    var stringNormalizer = this._getStringNormalizer();\r\n                    var index = stringNormalizer(text).indexOf(stringNormalizer(searchText));\r\n                    if (index >= 0) {\r\n                        if (firstContentElement.textContent) {\r\n                            firstContentElement.textContent = text.substr(0, index)\r\n                        } else {\r\n                            firstContentElement.nodeValue = text.substr(0, index)\r\n                        }\r\n                        $textNode.after($searchTextSpan.text(text.substr(index, searchText.length)));\r\n                        $textNode = $(domAdapter.createTextNode(text.substr(index + searchText.length))).insertAfter($searchTextSpan);\r\n                        return this._highlightSearchTextCore($textNode, searchText)\r\n                    }\r\n                },\r\n                _highlightSearchText: function(cellElement, isEquals, column) {\r\n                    var that = this;\r\n                    var stringNormalizer = this._getStringNormalizer();\r\n                    var searchText = that.option(\"searchPanel.text\");\r\n                    if (isEquals && column) {\r\n                        searchText = searchText && that._getFormattedSearchText(column, searchText)\r\n                    }\r\n                    if (searchText && that.option(\"searchPanel.highlightSearchText\")) {\r\n                        var textNodes = that._findHighlightingTextNodes(column, cellElement, searchText);\r\n                        textNodes.forEach(textNode => {\r\n                            if (isEquals) {\r\n                                if (stringNormalizer($(textNode).text()) === stringNormalizer(searchText)) {\r\n                                    $(textNode).replaceWith($(\"<span>\").addClass(that.addWidgetPrefix(SEARCH_TEXT_CLASS)).text($(textNode).text()))\r\n                                }\r\n                            } else {\r\n                                that._highlightSearchTextCore($(textNode), searchText)\r\n                            }\r\n                        })\r\n                    }\r\n                },\r\n                _renderCore: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.option().rowTemplate || this.option(\"dataRowTemplate\")) {\r\n                        if (this.option(\"templatesRenderAsynchronously\")) {\r\n                            clearTimeout(this._highlightTimer);\r\n                            this._highlightTimer = setTimeout(function() {\r\n                                this._highlightSearchText(this.getTableElement())\r\n                            }.bind(this))\r\n                        } else {\r\n                            this._highlightSearchText(this.getTableElement())\r\n                        }\r\n                    }\r\n                },\r\n                _updateCell: function($cell, parameters) {\r\n                    var column = parameters.column;\r\n                    var dataType = column.lookup && column.lookup.dataType || column.dataType;\r\n                    var isEquals = \"string\" !== dataType;\r\n                    if (allowSearch(column) && !parameters.isOnForm) {\r\n                        if (this.option(\"templatesRenderAsynchronously\")) {\r\n                            if (!this._searchParams.length) {\r\n                                clearTimeout(this._highlightTimer);\r\n                                this._highlightTimer = setTimeout(function() {\r\n                                    this._searchParams.forEach(function(params) {\r\n                                        this._highlightSearchText.apply(this, params)\r\n                                    }.bind(this));\r\n                                    this._searchParams = []\r\n                                }.bind(this))\r\n                            }\r\n                            this._searchParams.push([$cell, isEquals, column])\r\n                        } else {\r\n                            this._highlightSearchText($cell, isEquals, column)\r\n                        }\r\n                    }\r\n                    this.callBase($cell, parameters)\r\n                },\r\n                dispose: function() {\r\n                    clearTimeout(this._highlightTimer);\r\n                    this.callBase()\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.search.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    searchModule\r\n} from \"../grid_core/ui.grid_core.search\";\r\ngridCore.registerModule(\"search\", searchModule);\r\n","/**\r\n * DevExtreme (esm/renovation/component_wrapper/grid_pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Component from \"./common/component\";\r\nexport class GridPagerWrapper extends Component {\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"pageIndex\":\r\n                var pageIndexChanged = this.option(\"pageIndexChanged\");\r\n                if (pageIndexChanged) {\r\n                    pageIndexChanged(args.value)\r\n                }\r\n                break;\r\n            case \"pageSize\":\r\n                var pageSizeChanged = this.option(\"pageSizeChanged\");\r\n                if (pageSizeChanged) {\r\n                    pageSizeChanged(args.value)\r\n                }\r\n        }\r\n        super._optionChanged(args)\r\n    }\r\n}\r\n","/**\r\n * DevExtreme (esm/renovation/utils/type_conversion.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport function toNumber(attribute) {\r\n    return attribute ? Number(attribute.replace(\"px\", \"\")) : 0\r\n}\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/utils/get_element_width.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport getElementComputedStyle from \"../../../utils/get_computed_style\";\r\nimport {\r\n    toNumber\r\n} from \"../../../utils/type_conversion\";\r\nexport function getElementStyle(name, element) {\r\n    var _getElementComputedSt;\r\n    var computedStyle = null !== (_getElementComputedSt = getElementComputedStyle(element)) && void 0 !== _getElementComputedSt ? _getElementComputedSt : {};\r\n    return toNumber(computedStyle[name])\r\n}\r\nexport function getElementWidth(element) {\r\n    return getElementStyle(\"width\", element)\r\n}\r\nexport function getElementMinWidth(element) {\r\n    return getElementStyle(\"minWidth\", element)\r\n}\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/resizable_container.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"contentTemplate\", \"pagerProps\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport resizeCallbacks from \"../../../core/utils/resize_callbacks\";\r\nimport {\r\n    getElementWidth,\r\n    getElementStyle\r\n} from \"./utils/get_element_width\";\r\nimport {\r\n    isDefined\r\n} from \"../../../core/utils/type\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        contentAttributes: contentAttributes,\r\n        infoTextRef: infoTextRef,\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode,\r\n        pageSizesRef: pageSizesRef,\r\n        pagesRef: pagesRef,\r\n        parentRef: parentRef,\r\n        props: {\r\n            contentTemplate: Content\r\n        }\r\n    } = _ref;\r\n    return Content(_extends({\r\n        rootElementRef: parentRef,\r\n        pageSizesRef: pageSizesRef,\r\n        infoTextRef: infoTextRef,\r\n        pagesRef: pagesRef,\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode\r\n    }, contentAttributes))\r\n};\r\nexport function calculateAdaptivityProps(_ref2) {\r\n    var {\r\n        info: infoWidth,\r\n        pageSizes: pageSizesWidth,\r\n        pages: pagesWidth,\r\n        parent: parentWidth\r\n    } = _ref2;\r\n    var minimalWidth = pageSizesWidth + pagesWidth + infoWidth;\r\n    var infoTextVisible = parentWidth - minimalWidth > 0;\r\n    var isLargeDisplayMode = parentWidth - (pageSizesWidth + pagesWidth) > 0;\r\n    return {\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode\r\n    }\r\n}\r\n\r\nfunction getElementsWidth(_ref3) {\r\n    var {\r\n        info: info,\r\n        pageSizes: pageSizes,\r\n        pages: pages,\r\n        parent: parent\r\n    } = _ref3;\r\n    var parentWidth = getElementWidth(parent);\r\n    var pageSizesWidth = getElementWidth(pageSizes);\r\n    var infoWidth = getElementWidth(info);\r\n    var pagesHtmlWidth = getElementWidth(pages);\r\n    return {\r\n        parent: parentWidth,\r\n        pageSizes: pageSizesWidth,\r\n        info: infoWidth + getElementStyle(\"marginLeft\", info) + getElementStyle(\"marginRight\", info),\r\n        pages: pagesHtmlWidth\r\n    }\r\n}\r\nexport var ResizableContainerProps = {};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\r\nexport class ResizableContainer extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.parentRef = infernoCreateRef();\r\n        this.pageSizesRef = infernoCreateRef();\r\n        this.infoTextRef = infernoCreateRef();\r\n        this.pagesRef = infernoCreateRef();\r\n        this.state = {\r\n            infoTextVisible: true,\r\n            isLargeDisplayMode: true\r\n        };\r\n        this.subscribeToResize = this.subscribeToResize.bind(this);\r\n        this.effectUpdateChildProps = this.effectUpdateChildProps.bind(this);\r\n        this.updateAdaptivityProps = this.updateAdaptivityProps.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.subscribeToResize, [this.state.infoTextVisible, this.state.isLargeDisplayMode]), new InfernoEffect(this.effectUpdateChildProps, [this.props, this.state.infoTextVisible, this.state.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$, _this$_effects$2;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.state.infoTextVisible, this.state.isLargeDisplayMode]);\r\n        null === (_this$_effects$2 = this._effects[1]) || void 0 === _this$_effects$2 ? void 0 : _this$_effects$2.update([this.props, this.state.infoTextVisible, this.state.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate])\r\n    }\r\n    subscribeToResize() {\r\n        var callback = () => {\r\n            this.parentWidth > 0 && this.updateAdaptivityProps()\r\n        };\r\n        resizeCallbacks.add(callback);\r\n        return () => {\r\n            resizeCallbacks.remove(callback)\r\n        }\r\n    }\r\n    effectUpdateChildProps() {\r\n        if (this.parentWidth > 0) {\r\n            this.updateAdaptivityProps()\r\n        }\r\n    }\r\n    get contentAttributes() {\r\n        var {\r\n            className: className,\r\n            displayMode: displayMode,\r\n            gridCompatibility: gridCompatibility,\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            infoText: infoText,\r\n            lightModeEnabled: lightModeEnabled,\r\n            maxPagesCount: maxPagesCount,\r\n            onKeyDown: onKeyDown,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes,\r\n            pagesCountText: pagesCountText,\r\n            pagesNavigatorVisible: pagesNavigatorVisible,\r\n            rtlEnabled: rtlEnabled,\r\n            showInfo: showInfo,\r\n            showNavigationButtons: showNavigationButtons,\r\n            showPageSizes: showPageSizes,\r\n            totalCount: totalCount,\r\n            visible: visible\r\n        } = this.props.pagerProps;\r\n        return _extends({}, this.restAttributes, {\r\n            pageSize: pageSize,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pageSizeChange: pageSizeChange,\r\n            gridCompatibility: gridCompatibility,\r\n            className: className,\r\n            showInfo: showInfo,\r\n            infoText: infoText,\r\n            lightModeEnabled: lightModeEnabled,\r\n            displayMode: displayMode,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pagesCountText: pagesCountText,\r\n            visible: visible,\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            pagesNavigatorVisible: pagesNavigatorVisible,\r\n            showPageSizes: showPageSizes,\r\n            pageSizes: pageSizes,\r\n            rtlEnabled: rtlEnabled,\r\n            showNavigationButtons: showNavigationButtons,\r\n            totalCount: totalCount,\r\n            onKeyDown: onKeyDown\r\n        })\r\n    }\r\n    get parentWidth() {\r\n        return this.parentRef.current ? getElementWidth(this.parentRef.current) : 0\r\n    }\r\n    updateAdaptivityProps() {\r\n        var currentElementsWidth = getElementsWidth({\r\n            parent: this.parentRef.current,\r\n            pageSizes: this.pageSizesRef.current,\r\n            info: this.infoTextRef.current,\r\n            pages: this.pagesRef.current\r\n        });\r\n        if (isDefined(this.actualAdaptivityProps) && (this.actualAdaptivityProps.infoTextVisible !== this.state.infoTextVisible || this.actualAdaptivityProps.isLargeDisplayMode !== this.state.isLargeDisplayMode)) {\r\n            return\r\n        }\r\n        var isEmpty = !isDefined(this.elementsWidth);\r\n        if (isEmpty) {\r\n            this.elementsWidth = {}\r\n        }\r\n        if (isEmpty || this.state.isLargeDisplayMode) {\r\n            this.elementsWidth.pageSizes = currentElementsWidth.pageSizes;\r\n            this.elementsWidth.pages = currentElementsWidth.pages\r\n        }\r\n        if (isEmpty || this.state.infoTextVisible) {\r\n            this.elementsWidth.info = currentElementsWidth.info\r\n        }\r\n        this.actualAdaptivityProps = calculateAdaptivityProps(_extends({\r\n            parent: currentElementsWidth.parent\r\n        }, this.elementsWidth));\r\n        this.setState(__state_argument => ({\r\n            infoTextVisible: this.actualAdaptivityProps.infoTextVisible\r\n        }));\r\n        this.setState(__state_argument => ({\r\n            isLargeDisplayMode: this.actualAdaptivityProps.isLargeDisplayMode\r\n        }))\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                contentTemplate: getTemplate(props.contentTemplate)\r\n            }),\r\n            infoTextVisible: this.state.infoTextVisible,\r\n            isLargeDisplayMode: this.state.isLargeDisplayMode,\r\n            parentRef: this.parentRef,\r\n            pageSizesRef: this.pageSizesRef,\r\n            infoTextRef: this.infoTextRef,\r\n            pagesRef: this.pagesRef,\r\n            contentAttributes: this.contentAttributes,\r\n            parentWidth: this.parentWidth,\r\n            updateAdaptivityProps: this.updateAdaptivityProps,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nResizableContainer.defaultProps = ResizableContainerProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/base_pager_props.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport var BasePagerProps = {\r\n    gridCompatibility: true,\r\n    showInfo: false,\r\n    displayMode: \"adaptive\",\r\n    maxPagesCount: 10,\r\n    pageCount: 10,\r\n    visible: true,\r\n    hasKnownLastPage: true,\r\n    pagesNavigatorVisible: \"auto\",\r\n    showPageSizes: true,\r\n    get pageSizes() {\r\n        return [5, 10]\r\n    },\r\n    showNavigationButtons: false,\r\n    totalCount: 0\r\n};\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/pager_props.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    BasePagerProps\r\n} from \"./base_pager_props\";\r\nexport var PagerProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(BasePagerProps), Object.getOwnPropertyDescriptors({\r\n    defaultPageSize: 5,\r\n    pageSizeChange: () => {},\r\n    defaultPageIndex: 1,\r\n    pageIndexChange: () => {}\r\n})));\r\nexport var InternalPagerProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(BasePagerProps), Object.getOwnPropertyDescriptors({\r\n    pageSize: 5,\r\n    pageIndex: 1\r\n})));\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/info.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"infoText\", \"pageCount\", \"pageIndex\", \"rootElementRef\", \"totalCount\"];\r\nimport {\r\n    createVNode\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    format\r\n} from \"../../../core/utils/string\";\r\nimport messageLocalization from \"../../../localization/message\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"./common/pager_props\";\r\nexport var PAGER_INFO_CLASS = \"dx-info\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: {\r\n            rootElementRef: rootElementRef\r\n        },\r\n        text: text\r\n    } = _ref;\r\n    return createVNode(1, \"div\", PAGER_INFO_CLASS, text, 0, null, null, rootElementRef)\r\n};\r\nexport var InfoTextProps = {};\r\nvar InfoTextPropsType = {\r\n    get pageIndex() {\r\n        return InternalPagerProps.pageIndex\r\n    },\r\n    get pageCount() {\r\n        return InternalPagerProps.pageCount\r\n    },\r\n    get totalCount() {\r\n        return InternalPagerProps.totalCount\r\n    }\r\n};\r\nexport class InfoText extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    get infoText() {\r\n        var _this$props$infoText;\r\n        return (null !== (_this$props$infoText = this.props.infoText) && void 0 !== _this$props$infoText ? _this$props$infoText : \"\") || messageLocalization.getFormatter(\"dxPager-infoText\")()\r\n    }\r\n    get text() {\r\n        var {\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            totalCount: totalCount\r\n        } = this.props;\r\n        return format(this.infoText, (pageIndex + 1).toString(), pageCount.toString(), totalCount.toString())\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            infoText: this.infoText,\r\n            text: this.text,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nInfoText.defaultProps = InfoTextPropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/keyboard_action_context.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    createContext\r\n} from \"@devextreme/runtime/inferno\";\r\nexport var KeyboardActionContext = createContext(void 0);\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/light_button.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"children\", \"className\", \"label\", \"onClick\"];\r\nimport {\r\n    createVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    subscribeToClickEvent\r\n} from \"../../../utils/subscribe_to_event\";\r\nimport {\r\n    KeyboardActionContext\r\n} from \"./keyboard_action_context\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: {\r\n            children: children,\r\n            className: className,\r\n            label: label\r\n        },\r\n        widgetRef: widgetRef\r\n    } = _ref;\r\n    return createVNode(1, \"div\", className, children, 0, {\r\n        tabIndex: 0,\r\n        role: \"button\",\r\n        \"aria-label\": label\r\n    }, null, widgetRef)\r\n};\r\nexport var LightButtonProps = {\r\n    className: \"\",\r\n    label: \"\"\r\n};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class LightButton extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.widgetRef = infernoCreateRef();\r\n        this.keyboardEffect = this.keyboardEffect.bind(this);\r\n        this.subscribeToClick = this.subscribeToClick.bind(this)\r\n    }\r\n    get keyboardContext() {\r\n        if (\"KeyboardActionContext\" in this.context) {\r\n            return this.context.KeyboardActionContext\r\n        }\r\n        return KeyboardActionContext\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.keyboardEffect, [this.keyboardContext, this.props.onClick]), new InfernoEffect(this.subscribeToClick, [this.props.onClick])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$, _this$_effects$2;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.keyboardContext, this.props.onClick]);\r\n        null === (_this$_effects$2 = this._effects[1]) || void 0 === _this$_effects$2 ? void 0 : _this$_effects$2.update([this.props.onClick])\r\n    }\r\n    keyboardEffect() {\r\n        return this.keyboardContext.registerKeyboardAction(this.widgetRef.current, this.props.onClick)\r\n    }\r\n    subscribeToClick() {\r\n        return subscribeToClickEvent(this.widgetRef.current, this.props.onClick)\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            widgetRef: this.widgetRef,\r\n            keyboardContext: this.keyboardContext,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nLightButton.defaultProps = LightButtonProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/common/consts.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport var PAGER_CLASS = \"dx-pager\";\r\nexport var LIGHT_MODE_CLASS = \"dx-light-mode\";\r\nexport var PAGER_PAGES_CLASS = \"dx-pages\";\r\nexport var PAGER_PAGE_INDEXES_CLASS = \"dx-page-indexes\";\r\nexport var PAGER_PAGE_CLASS = \"dx-page\";\r\nexport var PAGER_SELECTION_CLASS = \"dx-selection\";\r\nexport var PAGER_PAGE_SIZE_CLASS = \"dx-page-size\";\r\nexport var PAGER_PAGE_SIZES_CLASS = \"dx-page-sizes\";\r\nexport var PAGER_SELECTED_PAGE_SIZE_CLASS = \"\".concat(PAGER_PAGE_SIZE_CLASS, \" \").concat(PAGER_SELECTION_CLASS);\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/page.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"className\", \"index\", \"onClick\", \"selected\"];\r\nimport {\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    LightButton\r\n} from \"../common/light_button\";\r\nimport {\r\n    PAGER_PAGE_CLASS,\r\n    PAGER_SELECTION_CLASS\r\n} from \"../common/consts\";\r\nimport {\r\n    combineClasses\r\n} from \"../../../utils/combine_classes\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        className: className,\r\n        label: label,\r\n        props: {\r\n            onClick: onClick\r\n        },\r\n        value: value\r\n    } = _ref;\r\n    return createComponentVNode(2, LightButton, {\r\n        className: className,\r\n        label: label,\r\n        onClick: onClick,\r\n        children: value\r\n    })\r\n};\r\nexport var PageProps = {\r\n    index: 0,\r\n    selected: false,\r\n    className: PAGER_PAGE_CLASS\r\n};\r\nexport class Page extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    get label() {\r\n        return \"Page \".concat(this.value)\r\n    }\r\n    get value() {\r\n        return this.props.index + 1\r\n    }\r\n    get className() {\r\n        var {\r\n            selected: selected\r\n        } = this.props;\r\n        return combineClasses({\r\n            [\"\".concat(this.props.className)]: !!this.props.className,\r\n            [PAGER_SELECTION_CLASS]: !!selected\r\n        })\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            label: this.label,\r\n            value: this.value,\r\n            className: this.className,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPage.defaultProps = PageProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/large.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"pageIndexes\"],\r\n    _excluded2 = [\"maxPagesCount\", \"pageCount\", \"pageIndex\", \"pageIndexChange\"];\r\nimport {\r\n    createVNode,\r\n    createFragment,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    Page\r\n} from \"./page\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nimport {\r\n    ConfigContext\r\n} from \"../../../common/config_context\";\r\nvar PAGER_PAGE_SEPARATOR_CLASS = \"dx-separator\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        pages: pages\r\n    } = _ref;\r\n    var PagesMarkup = pages.map(_ref2 => {\r\n        var {\r\n            key: key,\r\n            pageProps: pageProps\r\n        } = _ref2;\r\n        return pageProps ? createComponentVNode(2, Page, {\r\n            index: pageProps.index,\r\n            selected: pageProps.selected,\r\n            onClick: pageProps.onClick\r\n        }, key) : createVNode(1, \"div\", PAGER_PAGE_SEPARATOR_CLASS, \". . .\", 16, null, key)\r\n    });\r\n    return createFragment(PagesMarkup, 0)\r\n};\r\nvar PAGES_LIMITER = 4;\r\n\r\nfunction getDelimiterType(startIndex, slidingWindowSize, pageCount) {\r\n    if (1 === startIndex) {\r\n        return \"high\"\r\n    }\r\n    if (startIndex + slidingWindowSize === pageCount - 1) {\r\n        return \"low\"\r\n    }\r\n    return \"both\"\r\n}\r\n\r\nfunction createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter) {\r\n    var pageIndexes = [];\r\n    var indexesForReuse = [];\r\n    switch (delimiter) {\r\n        case \"none\":\r\n            pageIndexes = [...slidingWindowIndexes];\r\n            break;\r\n        case \"both\":\r\n            pageIndexes = [0, \"low\", ...slidingWindowIndexes, \"high\", pageCount - 1];\r\n            indexesForReuse = slidingWindowIndexes.slice(1, -1);\r\n            break;\r\n        case \"high\":\r\n            pageIndexes = [0, ...slidingWindowIndexes, \"high\", pageCount - 1];\r\n            indexesForReuse = slidingWindowIndexes.slice(0, -1);\r\n            break;\r\n        case \"low\":\r\n            pageIndexes = [0, \"low\", ...slidingWindowIndexes, pageCount - 1];\r\n            indexesForReuse = slidingWindowIndexes.slice(1)\r\n    }\r\n    return {\r\n        slidingWindowIndexes: slidingWindowIndexes,\r\n        indexesForReuse: indexesForReuse,\r\n        pageIndexes: pageIndexes\r\n    }\r\n}\r\n\r\nfunction createPageIndexes(startIndex, slidingWindowSize, pageCount, delimiter) {\r\n    var slidingWindowIndexes = [];\r\n    for (var i = 0; i < slidingWindowSize; i += 1) {\r\n        slidingWindowIndexes.push(i + startIndex)\r\n    }\r\n    return createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter)\r\n}\r\nvar PagesLargePropsType = {\r\n    get pageIndex() {\r\n        return InternalPagerProps.pageIndex\r\n    },\r\n    get maxPagesCount() {\r\n        return InternalPagerProps.maxPagesCount\r\n    },\r\n    get pageCount() {\r\n        return InternalPagerProps.pageCount\r\n    }\r\n};\r\nexport class PagesLarge extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.canReuseSlidingWindow = this.canReuseSlidingWindow.bind(this);\r\n        this.generatePageIndexes = this.generatePageIndexes.bind(this);\r\n        this.isSlidingWindowMode = this.isSlidingWindowMode.bind(this);\r\n        this.onPageClick = this.onPageClick.bind(this)\r\n    }\r\n    get config() {\r\n        if (\"ConfigContext\" in this.context) {\r\n            return this.context.ConfigContext\r\n        }\r\n        return ConfigContext\r\n    }\r\n    get slidingWindowState() {\r\n        var slidingWindowState = this.slidingWindowStateHolder;\r\n        if (!slidingWindowState) {\r\n            return {\r\n                indexesForReuse: [],\r\n                slidingWindowIndexes: []\r\n            }\r\n        }\r\n        return slidingWindowState\r\n    }\r\n    canReuseSlidingWindow(currentPageCount, pageIndex) {\r\n        var {\r\n            indexesForReuse: indexesForReuse\r\n        } = this.slidingWindowState;\r\n        var currentPageNotExistInIndexes = !indexesForReuse.includes(currentPageCount);\r\n        var pageIndexExistInIndexes = indexesForReuse.includes(pageIndex);\r\n        return currentPageNotExistInIndexes && pageIndexExistInIndexes\r\n    }\r\n    generatePageIndexes() {\r\n        var {\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex\r\n        } = this.props;\r\n        var startIndex = 0;\r\n        var {\r\n            slidingWindowIndexes: slidingWindowIndexes\r\n        } = this.slidingWindowState;\r\n        if (pageIndex === slidingWindowIndexes[0]) {\r\n            startIndex = pageIndex - 1\r\n        } else if (pageIndex === slidingWindowIndexes[slidingWindowIndexes.length - 1]) {\r\n            startIndex = pageIndex + 2 - PAGES_LIMITER\r\n        } else if (pageIndex < PAGES_LIMITER) {\r\n            startIndex = 1\r\n        } else if (pageIndex >= pageCount - PAGES_LIMITER) {\r\n            startIndex = pageCount - PAGES_LIMITER - 1\r\n        } else {\r\n            startIndex = pageIndex - 1\r\n        }\r\n        var slidingWindowSize = PAGES_LIMITER;\r\n        var delimiter = getDelimiterType(startIndex, slidingWindowSize, pageCount);\r\n        var _createPageIndexes = createPageIndexes(startIndex, slidingWindowSize, pageCount, delimiter),\r\n            {\r\n                pageIndexes: pageIndexes\r\n            } = _createPageIndexes,\r\n            slidingWindowState = _objectWithoutPropertiesLoose(_createPageIndexes, _excluded);\r\n        this.slidingWindowStateHolder = slidingWindowState;\r\n        return pageIndexes\r\n    }\r\n    isSlidingWindowMode() {\r\n        var {\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount\r\n        } = this.props;\r\n        return pageCount <= PAGES_LIMITER || pageCount <= maxPagesCount\r\n    }\r\n    onPageClick(pageIndex) {\r\n        this.props.pageIndexChange(pageIndex)\r\n    }\r\n    get pageIndexes() {\r\n        var {\r\n            pageCount: pageCount\r\n        } = this.props;\r\n        if (this.isSlidingWindowMode()) {\r\n            return createPageIndexes(0, pageCount, pageCount, \"none\").pageIndexes\r\n        }\r\n        if (this.canReuseSlidingWindow(pageCount, this.props.pageIndex)) {\r\n            var {\r\n                slidingWindowIndexes: slidingWindowIndexes\r\n            } = this.slidingWindowState;\r\n            var delimiter = getDelimiterType(slidingWindowIndexes[0], PAGES_LIMITER, pageCount);\r\n            return createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter).pageIndexes\r\n        }\r\n        return this.generatePageIndexes()\r\n    }\r\n    get pages() {\r\n        var _this$config;\r\n        var {\r\n            pageIndex: pageIndex\r\n        } = this.props;\r\n        var createPage = index => {\r\n            var pagerProps = \"low\" === index || \"high\" === index ? null : {\r\n                index: index,\r\n                onClick: () => this.onPageClick(index),\r\n                selected: pageIndex === index\r\n            };\r\n            return {\r\n                key: index.toString(),\r\n                pageProps: pagerProps\r\n            }\r\n        };\r\n        var rtlPageIndexes = null !== (_this$config = this.config) && void 0 !== _this$config && _this$config.rtlEnabled ? [...this.pageIndexes].reverse() : this.pageIndexes;\r\n        return rtlPageIndexes.map(index => createPage(index))\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded2);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            config: this.config,\r\n            pageIndexes: this.pageIndexes,\r\n            pages: this.pages,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPagesLarge.defaultProps = PagesLargePropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/editors/number_box.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"accessKey\", \"activeStateEnabled\", \"className\", \"defaultValue\", \"disabled\", \"focusStateEnabled\", \"height\", \"hint\", \"hoverStateEnabled\", \"invalidValueMessage\", \"max\", \"min\", \"mode\", \"onClick\", \"onKeyDown\", \"rtlEnabled\", \"showSpinButtons\", \"step\", \"tabIndex\", \"useLargeSpinButtons\", \"value\", \"valueChange\", \"visible\", \"width\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport LegacyNumberBox from \"../../../ui/number_box\";\r\nimport {\r\n    DomComponentWrapper\r\n} from \"../common/dom_component_wrapper\";\r\nimport {\r\n    BaseWidgetProps\r\n} from \"../common/base_props\";\r\nvar DEFAULT_VALUE = 0;\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: props,\r\n        restAttributes: restAttributes\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, DomComponentWrapper, _extends({\r\n        componentType: LegacyNumberBox,\r\n        componentProps: props,\r\n        templateNames: []\r\n    }, restAttributes)))\r\n};\r\nexport var NumberBoxProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(BaseWidgetProps), Object.getOwnPropertyDescriptors({\r\n    focusStateEnabled: true,\r\n    hoverStateEnabled: true,\r\n    defaultValue: DEFAULT_VALUE,\r\n    isReactComponentWrapper: true\r\n})));\r\nexport class NumberBox extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: void 0 !== this.props.value ? this.props.value : this.props.defaultValue\r\n        }\r\n    }\r\n    get restAttributes() {\r\n        var _this$props$value = _extends({}, this.props, {\r\n                value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n            }),\r\n            restProps = _objectWithoutPropertiesLoose(_this$props$value, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n            }),\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nNumberBox.defaultProps = NumberBoxProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/utils/calculate_values_fitted_width.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nexport var oneDigitWidth = 10;\r\nexport function calculateValuesFittedWidth(minWidth, values) {\r\n    return minWidth + oneDigitWidth * Math.max(...values).toString().length\r\n}\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/small.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pagesCountText\"];\r\nimport {\r\n    createVNode,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    Page\r\n} from \"./page\";\r\nimport {\r\n    PAGER_INFO_CLASS\r\n} from \"../info\";\r\nimport {\r\n    NumberBox\r\n} from \"../../editors/number_box\";\r\nimport messageLocalization from \"../../../../localization/message\";\r\nimport {\r\n    calculateValuesFittedWidth\r\n} from \"../utils/calculate_values_fitted_width\";\r\nimport {\r\n    getElementMinWidth\r\n} from \"../utils/get_element_width\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nvar PAGER_INFO_TEXT_CLASS = \"\".concat(PAGER_INFO_CLASS, \"  dx-info-text\");\r\nvar PAGER_PAGE_INDEX_CLASS = \"dx-page-index\";\r\nvar LIGHT_PAGES_CLASS = \"dx-light-pages\";\r\nvar PAGER_PAGES_COUNT_CLASS = \"dx-pages-count\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        pageIndexRef: pageIndexRef,\r\n        pagesCountText: pagesCountText,\r\n        props: {\r\n            pageCount: pageCount\r\n        },\r\n        selectLastPageIndex: selectLastPageIndex,\r\n        value: value,\r\n        valueChange: valueChange,\r\n        width: width\r\n    } = _ref;\r\n    return createVNode(1, \"div\", LIGHT_PAGES_CLASS, [createComponentVNode(2, NumberBox, {\r\n        className: PAGER_PAGE_INDEX_CLASS,\r\n        min: 1,\r\n        max: pageCount,\r\n        width: width,\r\n        value: value,\r\n        valueChange: valueChange\r\n    }), createVNode(1, \"span\", PAGER_INFO_TEXT_CLASS, pagesCountText, 0), createComponentVNode(2, Page, {\r\n        className: PAGER_PAGES_COUNT_CLASS,\r\n        selected: false,\r\n        index: pageCount - 1,\r\n        onClick: selectLastPageIndex\r\n    })], 4, null, null, pageIndexRef)\r\n};\r\nvar PagerSmallProps = {\r\n    get pageIndex() {\r\n        return InternalPagerProps.pageIndex\r\n    },\r\n    get pageCount() {\r\n        return InternalPagerProps.pageCount\r\n    }\r\n};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class PagesSmall extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.pageIndexRef = infernoCreateRef();\r\n        this.state = {\r\n            minWidth: 10\r\n        };\r\n        this.updateWidth = this.updateWidth.bind(this);\r\n        this.selectLastPageIndex = this.selectLastPageIndex.bind(this);\r\n        this.valueChange = this.valueChange.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.updateWidth, [this.state.minWidth])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.state.minWidth])\r\n    }\r\n    updateWidth() {\r\n        var _this$pageIndexRef$cu;\r\n        var el = null === (_this$pageIndexRef$cu = this.pageIndexRef.current) || void 0 === _this$pageIndexRef$cu ? void 0 : _this$pageIndexRef$cu.querySelector(\".\".concat(PAGER_PAGE_INDEX_CLASS));\r\n        this.setState(__state_argument => ({\r\n            minWidth: el && getElementMinWidth(el) || __state_argument.minWidth\r\n        }))\r\n    }\r\n    get value() {\r\n        return this.props.pageIndex + 1\r\n    }\r\n    get width() {\r\n        var {\r\n            pageCount: pageCount\r\n        } = this.props;\r\n        return calculateValuesFittedWidth(this.state.minWidth, [pageCount])\r\n    }\r\n    get pagesCountText() {\r\n        var _this$props$pagesCoun;\r\n        return (null !== (_this$props$pagesCoun = this.props.pagesCountText) && void 0 !== _this$props$pagesCoun ? _this$props$pagesCoun : \"\") || messageLocalization.getFormatter(\"dxPager-pagesCountText\")()\r\n    }\r\n    selectLastPageIndex() {\r\n        this.props.pageIndexChange(this.props.pageCount - 1)\r\n    }\r\n    valueChange(value) {\r\n        this.props.pageIndexChange(value - 1)\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            pageIndexRef: this.pageIndexRef,\r\n            value: this.value,\r\n            width: this.width,\r\n            pagesCountText: this.pagesCountText,\r\n            selectLastPageIndex: this.selectLastPageIndex,\r\n            valueChange: this.valueChange,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPagesSmall.defaultProps = PagerSmallProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pages/page_index_selector.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"hasKnownLastPage\", \"isLargeDisplayMode\", \"maxPagesCount\", \"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pagesCountText\", \"showNavigationButtons\", \"totalCount\"];\r\nimport {\r\n    createFragment,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    LightButton\r\n} from \"../common/light_button\";\r\nimport {\r\n    PagesLarge\r\n} from \"./large\";\r\nimport {\r\n    PagesSmall\r\n} from \"./small\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nimport {\r\n    ConfigContext\r\n} from \"../../../common/config_context\";\r\nvar PAGER_NAVIGATE_BUTTON = \"dx-navigate-button\";\r\nvar PAGER_PREV_BUTTON_CLASS = \"dx-prev-button\";\r\nvar PAGER_NEXT_BUTTON_CLASS = \"dx-next-button\";\r\nexport var PAGER_BUTTON_DISABLE_CLASS = \"dx-button-disable\";\r\nvar nextButtonClassName = \"\".concat(PAGER_NAVIGATE_BUTTON, \" \").concat(PAGER_NEXT_BUTTON_CLASS);\r\nvar prevButtonClassName = \"\".concat(PAGER_NAVIGATE_BUTTON, \" \").concat(PAGER_PREV_BUTTON_CLASS);\r\nvar nextButtonDisabledClassName = \"\".concat(PAGER_BUTTON_DISABLE_CLASS, \" \").concat(PAGER_NAVIGATE_BUTTON, \" \").concat(PAGER_NEXT_BUTTON_CLASS);\r\nvar prevButtonDisabledClassName = \"\".concat(PAGER_BUTTON_DISABLE_CLASS, \" \").concat(PAGER_NAVIGATE_BUTTON, \" \").concat(PAGER_PREV_BUTTON_CLASS);\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        navigateToNextPage: navigateToNextPage,\r\n        navigateToPrevPage: navigateToPrevPage,\r\n        nextClassName: nextClassName,\r\n        pageIndexChange: pageIndexChange,\r\n        prevClassName: prevClassName,\r\n        props: {\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pagesCountText: pagesCountText\r\n        },\r\n        renderNextButton: renderNextButton,\r\n        renderPrevButton: renderPrevButton\r\n    } = _ref;\r\n    return createFragment([renderPrevButton && createComponentVNode(2, LightButton, {\r\n        className: prevClassName,\r\n        label: \"Previous page\",\r\n        onClick: navigateToPrevPage\r\n    }), isLargeDisplayMode && createComponentVNode(2, PagesLarge, {\r\n        maxPagesCount: maxPagesCount,\r\n        pageCount: pageCount,\r\n        pageIndex: pageIndex,\r\n        pageIndexChange: pageIndexChange\r\n    }), !isLargeDisplayMode && createComponentVNode(2, PagesSmall, {\r\n        pageCount: pageCount,\r\n        pageIndex: pageIndex,\r\n        pageIndexChange: pageIndexChange,\r\n        pagesCountText: pagesCountText\r\n    }), renderNextButton && createComponentVNode(2, LightButton, {\r\n        className: nextClassName,\r\n        label: \"Next page\",\r\n        onClick: navigateToNextPage\r\n    })], 0)\r\n};\r\n\r\nfunction getIncrement(direction) {\r\n    return \"next\" === direction ? 1 : -1\r\n}\r\nexport var PageIndexSelectorProps = {\r\n    isLargeDisplayMode: true\r\n};\r\nvar PageIndexSelectorPropsType = {\r\n    get pageIndex() {\r\n        return InternalPagerProps.pageIndex\r\n    },\r\n    get maxPagesCount() {\r\n        return InternalPagerProps.maxPagesCount\r\n    },\r\n    get pageCount() {\r\n        return InternalPagerProps.pageCount\r\n    },\r\n    get hasKnownLastPage() {\r\n        return InternalPagerProps.hasKnownLastPage\r\n    },\r\n    get showNavigationButtons() {\r\n        return InternalPagerProps.showNavigationButtons\r\n    },\r\n    get totalCount() {\r\n        return InternalPagerProps.totalCount\r\n    },\r\n    get isLargeDisplayMode() {\r\n        return PageIndexSelectorProps.isLargeDisplayMode\r\n    }\r\n};\r\nexport class PageIndexSelector extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.pageIndexChange = this.pageIndexChange.bind(this);\r\n        this.navigateToNextPage = this.navigateToNextPage.bind(this);\r\n        this.navigateToPrevPage = this.navigateToPrevPage.bind(this);\r\n        this.getNextDirection = this.getNextDirection.bind(this);\r\n        this.getPrevDirection = this.getPrevDirection.bind(this);\r\n        this.canNavigateToPage = this.canNavigateToPage.bind(this);\r\n        this.getNextPageIndex = this.getNextPageIndex.bind(this);\r\n        this.canNavigateTo = this.canNavigateTo.bind(this);\r\n        this.navigateToPage = this.navigateToPage.bind(this)\r\n    }\r\n    get config() {\r\n        if (\"ConfigContext\" in this.context) {\r\n            return this.context.ConfigContext\r\n        }\r\n        return ConfigContext\r\n    }\r\n    pageIndexChange(pageIndex) {\r\n        if (this.canNavigateToPage(pageIndex)) {\r\n            this.props.pageIndexChange(pageIndex)\r\n        }\r\n    }\r\n    navigateToNextPage() {\r\n        this.navigateToPage(this.getNextDirection())\r\n    }\r\n    navigateToPrevPage() {\r\n        this.navigateToPage(this.getPrevDirection())\r\n    }\r\n    getNextDirection() {\r\n        var _this$config;\r\n        return !(null !== (_this$config = this.config) && void 0 !== _this$config && _this$config.rtlEnabled) ? \"next\" : \"prev\"\r\n    }\r\n    getPrevDirection() {\r\n        var _this$config2;\r\n        return !(null !== (_this$config2 = this.config) && void 0 !== _this$config2 && _this$config2.rtlEnabled) ? \"prev\" : \"next\"\r\n    }\r\n    canNavigateToPage(pageIndex) {\r\n        if (!this.props.hasKnownLastPage) {\r\n            return pageIndex >= 0\r\n        }\r\n        return pageIndex >= 0 && pageIndex <= this.props.pageCount - 1\r\n    }\r\n    getNextPageIndex(direction) {\r\n        return this.props.pageIndex + getIncrement(direction)\r\n    }\r\n    canNavigateTo(direction) {\r\n        return this.canNavigateToPage(this.getNextPageIndex(direction))\r\n    }\r\n    navigateToPage(direction) {\r\n        this.pageIndexChange(this.getNextPageIndex(direction))\r\n    }\r\n    get renderPrevButton() {\r\n        var {\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            showNavigationButtons: showNavigationButtons\r\n        } = this.props;\r\n        return !isLargeDisplayMode || showNavigationButtons\r\n    }\r\n    get renderNextButton() {\r\n        return this.renderPrevButton || !this.props.hasKnownLastPage\r\n    }\r\n    get nextClassName() {\r\n        var direction = this.getNextDirection();\r\n        var canNavigate = this.canNavigateTo(direction);\r\n        return canNavigate ? nextButtonClassName : nextButtonDisabledClassName\r\n    }\r\n    get prevClassName() {\r\n        var direction = this.getPrevDirection();\r\n        var canNavigate = this.canNavigateTo(direction);\r\n        return canNavigate ? prevButtonClassName : prevButtonDisabledClassName\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            config: this.config,\r\n            pageIndexChange: this.pageIndexChange,\r\n            navigateToNextPage: this.navigateToNextPage,\r\n            navigateToPrevPage: this.navigateToPrevPage,\r\n            renderPrevButton: this.renderPrevButton,\r\n            renderNextButton: this.renderNextButton,\r\n            nextClassName: this.nextClassName,\r\n            prevClassName: this.prevClassName,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPageIndexSelector.defaultProps = PageIndexSelectorPropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/editors/drop_down_editors/select_box.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"accessKey\", \"activeStateEnabled\", \"className\", \"dataSource\", \"defaultValue\", \"disabled\", \"displayExpr\", \"focusStateEnabled\", \"height\", \"hint\", \"hoverStateEnabled\", \"onClick\", \"onKeyDown\", \"rtlEnabled\", \"tabIndex\", \"value\", \"valueChange\", \"valueExpr\", \"visible\", \"width\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport LegacySelectBox from \"../../../../ui/select_box\";\r\nimport {\r\n    DomComponentWrapper\r\n} from \"../../common/dom_component_wrapper\";\r\nimport {\r\n    BaseWidgetProps\r\n} from \"../../common/base_props\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: props,\r\n        restAttributes: restAttributes\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, DomComponentWrapper, _extends({\r\n        componentType: LegacySelectBox,\r\n        componentProps: props,\r\n        templateNames: [\"dropDownButtonTemplate\", \"groupTemplate\", \"itemTemplate\"]\r\n    }, restAttributes)))\r\n};\r\nexport var SelectBoxProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(BaseWidgetProps), Object.getOwnPropertyDescriptors({\r\n    focusStateEnabled: true,\r\n    hoverStateEnabled: true,\r\n    defaultValue: null,\r\n    isReactComponentWrapper: true\r\n})));\r\nexport class SelectBox extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: void 0 !== this.props.value ? this.props.value : this.props.defaultValue\r\n        }\r\n    }\r\n    get restAttributes() {\r\n        var _this$props$value = _extends({}, this.props, {\r\n                value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n            }),\r\n            restProps = _objectWithoutPropertiesLoose(_this$props$value, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                value: void 0 !== this.props.value ? this.props.value : this.state.value\r\n            }),\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nSelectBox.defaultProps = SelectBoxProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/page_size/small.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"pageSize\", \"pageSizeChange\", \"pageSizes\", \"parentRef\"];\r\nimport {\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    SelectBox\r\n} from \"../../editors/drop_down_editors/select_box\";\r\nimport {\r\n    calculateValuesFittedWidth\r\n} from \"../utils/calculate_values_fitted_width\";\r\nimport {\r\n    getElementMinWidth\r\n} from \"../utils/get_element_width\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        props: {\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes\r\n        },\r\n        width: width\r\n    } = _ref;\r\n    return createComponentVNode(2, SelectBox, {\r\n        displayExpr: \"text\",\r\n        valueExpr: \"value\",\r\n        dataSource: pageSizes,\r\n        value: pageSize,\r\n        valueChange: pageSizeChange,\r\n        width: width\r\n    })\r\n};\r\nexport var PageSizeSmallProps = {};\r\nvar PageSizeSmallPropsType = {\r\n    get pageSize() {\r\n        return InternalPagerProps.pageSize\r\n    }\r\n};\r\nexport class PageSizeSmall extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            minWidth: 10\r\n        };\r\n        this.updateWidth = this.updateWidth.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.updateWidth, [this.props, this.state.minWidth, this.props.pageSize, this.props.pageSizeChange, this.props.pageSizes])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props, this.state.minWidth, this.props.pageSize, this.props.pageSizeChange, this.props.pageSizes])\r\n    }\r\n    updateWidth() {\r\n        this.setState(__state_argument => ({\r\n            minWidth: getElementMinWidth(this.props.parentRef.current) || __state_argument.minWidth\r\n        }))\r\n    }\r\n    get width() {\r\n        return calculateValuesFittedWidth(this.state.minWidth, this.props.pageSizes.map(p => p.value))\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            width: this.width,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPageSizeSmall.defaultProps = PageSizeSmallPropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/page_size/large.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"pageSize\", \"pageSizeChange\", \"pageSizes\"];\r\nimport {\r\n    createFragment,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    LightButton\r\n} from \"../common/light_button\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nimport {\r\n    PAGER_SELECTED_PAGE_SIZE_CLASS,\r\n    PAGER_PAGE_SIZE_CLASS\r\n} from \"../common/consts\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        pageSizesText: pageSizesText\r\n    } = _ref;\r\n    return createFragment(pageSizesText.map(_ref2 => {\r\n        var {\r\n            className: className,\r\n            click: click,\r\n            label: label,\r\n            text: text\r\n        } = _ref2;\r\n        return createComponentVNode(2, LightButton, {\r\n            className: className,\r\n            label: label,\r\n            onClick: click,\r\n            children: text\r\n        }, text)\r\n    }), 0)\r\n};\r\nexport var PageSizeLargeProps = {};\r\nvar PageSizeLargePropsType = {\r\n    get pageSize() {\r\n        return InternalPagerProps.pageSize\r\n    }\r\n};\r\nexport class PageSizeLarge extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.__getterCache = {};\r\n        this.onPageSizeChange = this.onPageSizeChange.bind(this)\r\n    }\r\n    get pageSizesText() {\r\n        if (void 0 !== this.__getterCache.pageSizesText) {\r\n            return this.__getterCache.pageSizesText\r\n        }\r\n        return this.__getterCache.pageSizesText = (() => {\r\n            var {\r\n                pageSize: pageSize,\r\n                pageSizes: pageSizes\r\n            } = this.props;\r\n            return pageSizes.map(_ref3 => {\r\n                var {\r\n                    text: text,\r\n                    value: processedPageSize\r\n                } = _ref3;\r\n                var selected = processedPageSize === pageSize;\r\n                var className = selected ? PAGER_SELECTED_PAGE_SIZE_CLASS : PAGER_PAGE_SIZE_CLASS;\r\n                return {\r\n                    className: className,\r\n                    click: this.onPageSizeChange(processedPageSize),\r\n                    label: \"Display \".concat(processedPageSize, \" items on page\"),\r\n                    text: text\r\n                }\r\n            })\r\n        })()\r\n    }\r\n    onPageSizeChange(processedPageSize) {\r\n        return () => {\r\n            this.props.pageSizeChange(processedPageSize);\r\n            return this.props.pageSize\r\n        }\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        if (this.props.pageSize !== nextProps.pageSize || this.props.pageSizes !== nextProps.pageSizes || this.props.pageSizeChange !== nextProps.pageSizeChange) {\r\n            this.__getterCache.pageSizesText = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            pageSizesText: this.pageSizesText,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPageSizeLarge.defaultProps = PageSizeLargePropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/page_size/selector.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"isLargeDisplayMode\", \"pageSize\", \"pageSizeChange\", \"pageSizes\", \"rootElementRef\"];\r\nimport {\r\n    createVNode,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    PageSizeSmall\r\n} from \"./small\";\r\nimport {\r\n    PageSizeLarge\r\n} from \"./large\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"../common/pager_props\";\r\nimport messageLocalization from \"../../../../localization/message\";\r\nimport {\r\n    PAGER_PAGE_SIZES_CLASS\r\n} from \"../common/consts\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        htmlRef: htmlRef,\r\n        normalizedPageSizes: normalizedPageSizes,\r\n        props: {\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange\r\n        }\r\n    } = _ref;\r\n    return createVNode(1, \"div\", PAGER_PAGE_SIZES_CLASS, [isLargeDisplayMode && createComponentVNode(2, PageSizeLarge, {\r\n        pageSizes: normalizedPageSizes,\r\n        pageSize: pageSize,\r\n        pageSizeChange: pageSizeChange\r\n    }), !isLargeDisplayMode && createComponentVNode(2, PageSizeSmall, {\r\n        parentRef: htmlRef,\r\n        pageSizes: normalizedPageSizes,\r\n        pageSize: pageSize,\r\n        pageSizeChange: pageSizeChange\r\n    })], 0, null, null, htmlRef)\r\n};\r\n\r\nfunction getAllText() {\r\n    return messageLocalization.getFormatter(\"dxPager-pageSizesAllText\")()\r\n}\r\nvar PageSizeSelectorProps = {\r\n    isLargeDisplayMode: true\r\n};\r\nvar PageSizeSelectorPropsType = {\r\n    get pageSize() {\r\n        return InternalPagerProps.pageSize\r\n    },\r\n    get pageSizes() {\r\n        return InternalPagerProps.pageSizes\r\n    },\r\n    get isLargeDisplayMode() {\r\n        return PageSizeSelectorProps.isLargeDisplayMode\r\n    }\r\n};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class PageSizeSelector extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.htmlRef = infernoCreateRef();\r\n        this.__getterCache = {};\r\n        this.setRootElementRef = this.setRootElementRef.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.setRootElementRef, [])]\r\n    }\r\n    setRootElementRef() {\r\n        var {\r\n            rootElementRef: rootElementRef\r\n        } = this.props;\r\n        if (rootElementRef) {\r\n            rootElementRef.current = this.htmlRef.current\r\n        }\r\n    }\r\n    get normalizedPageSizes() {\r\n        if (void 0 !== this.__getterCache.normalizedPageSizes) {\r\n            return this.__getterCache.normalizedPageSizes\r\n        }\r\n        return this.__getterCache.normalizedPageSizes = (() => {\r\n            var {\r\n                pageSizes: pageSizes\r\n            } = this.props;\r\n            return pageSizes.map(p => \"all\" === p || 0 === p ? {\r\n                text: getAllText(),\r\n                value: 0\r\n            } : {\r\n                text: String(p),\r\n                value: p\r\n            })\r\n        })()\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        super.componentWillUpdate();\r\n        if (this.props.pageSizes !== nextProps.pageSizes) {\r\n            this.__getterCache.normalizedPageSizes = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            htmlRef: this.htmlRef,\r\n            normalizedPageSizes: this.normalizedPageSizes,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPageSizeSelector.defaultProps = PageSizeSelectorPropsType;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/content.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"className\", \"displayMode\", \"gridCompatibility\", \"hasKnownLastPage\", \"infoText\", \"infoTextRef\", \"infoTextVisible\", \"isLargeDisplayMode\", \"lightModeEnabled\", \"maxPagesCount\", \"onKeyDown\", \"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pageSize\", \"pageSizeChange\", \"pageSizes\", \"pageSizesRef\", \"pagesCountText\", \"pagesNavigatorVisible\", \"pagesRef\", \"rootElementRef\", \"rtlEnabled\", \"showInfo\", \"showNavigationButtons\", \"showPageSizes\", \"totalCount\", \"visible\"];\r\nimport {\r\n    createVNode,\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent,\r\n    normalizeStyles\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    InfoText\r\n} from \"./info\";\r\nimport {\r\n    PageIndexSelector\r\n} from \"./pages/page_index_selector\";\r\nimport {\r\n    PageSizeSelector\r\n} from \"./page_size/selector\";\r\nimport {\r\n    PAGER_PAGES_CLASS,\r\n    PAGER_PAGE_INDEXES_CLASS,\r\n    LIGHT_MODE_CLASS,\r\n    PAGER_CLASS\r\n} from \"./common/consts\";\r\nimport {\r\n    InternalPagerProps\r\n} from \"./common/pager_props\";\r\nimport {\r\n    combineClasses\r\n} from \"../../utils/combine_classes\";\r\nimport {\r\n    Widget\r\n} from \"../common/widget\";\r\nimport {\r\n    registerKeyboardAction as _registerKeyboardAction\r\n} from \"../../../ui/shared/accessibility\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        classes: classes,\r\n        infoVisible: infoVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode,\r\n        pageIndexSelectorVisible: pageIndexSelectorVisible,\r\n        pagesContainerVisibility: pagesContainerVisibility,\r\n        pagesContainerVisible: pagesContainerVisible,\r\n        props: {\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            infoText: infoText,\r\n            infoTextRef: infoTextRef,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes,\r\n            pageSizesRef: pageSizesRef,\r\n            pagesCountText: pagesCountText,\r\n            pagesRef: pagesRef,\r\n            rtlEnabled: rtlEnabled,\r\n            showNavigationButtons: showNavigationButtons,\r\n            showPageSizes: showPageSizes,\r\n            totalCount: totalCount,\r\n            visible: visible\r\n        },\r\n        restAttributes: restAttributes,\r\n        widgetRootElementRef: widgetRootElementRef\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, Widget, _extends({\r\n        rootElementRef: widgetRootElementRef,\r\n        rtlEnabled: rtlEnabled,\r\n        classes: classes,\r\n        visible: visible\r\n    }, restAttributes, {\r\n        children: [showPageSizes && createComponentVNode(2, PageSizeSelector, {\r\n            rootElementRef: pageSizesRef,\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes\r\n        }), pagesContainerVisible && createVNode(1, \"div\", PAGER_PAGES_CLASS, [infoVisible && createComponentVNode(2, InfoText, {\r\n            rootElementRef: infoTextRef,\r\n            infoText: infoText,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            totalCount: totalCount\r\n        }), pageIndexSelectorVisible && createVNode(1, \"div\", PAGER_PAGE_INDEXES_CLASS, createComponentVNode(2, PageIndexSelector, {\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            isLargeDisplayMode: isLargeDisplayMode,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pagesCountText: pagesCountText,\r\n            showNavigationButtons: showNavigationButtons,\r\n            totalCount: totalCount\r\n        }), 2, null, null, pagesRef)], 0, {\r\n            style: normalizeStyles({\r\n                visibility: pagesContainerVisibility\r\n            })\r\n        })]\r\n    })))\r\n};\r\nexport var PagerContentProps = Object.create(Object.prototype, _extends(Object.getOwnPropertyDescriptors(InternalPagerProps), Object.getOwnPropertyDescriptors({\r\n    infoTextVisible: true,\r\n    isLargeDisplayMode: true\r\n})));\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class PagerContent extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.widgetRootElementRef = infernoCreateRef();\r\n        this.__getterCache = {};\r\n        this.setRootElementRef = this.setRootElementRef.bind(this);\r\n        this.createFakeInstance = this.createFakeInstance.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.setRootElementRef, [])]\r\n    }\r\n    getChildContext() {\r\n        return _extends({}, this.context, {\r\n            KeyboardActionContext: this.keyboardAction\r\n        })\r\n    }\r\n    setRootElementRef() {\r\n        var {\r\n            rootElementRef: rootElementRef\r\n        } = this.props;\r\n        if (rootElementRef) {\r\n            rootElementRef.current = this.widgetRootElementRef.current\r\n        }\r\n    }\r\n    createFakeInstance() {\r\n        return {\r\n            option: () => false,\r\n            element: () => this.widgetRootElementRef.current,\r\n            _createActionByOption: () => e => {\r\n                var _this$props$onKeyDown, _this$props;\r\n                null === (_this$props$onKeyDown = (_this$props = this.props).onKeyDown) || void 0 === _this$props$onKeyDown ? void 0 : _this$props$onKeyDown.call(_this$props, e)\r\n            }\r\n        }\r\n    }\r\n    get keyboardAction() {\r\n        if (void 0 !== this.__getterCache.keyboardAction) {\r\n            return this.__getterCache.keyboardAction\r\n        }\r\n        return this.__getterCache.keyboardAction = (() => ({\r\n            registerKeyboardAction: (element, action) => {\r\n                var fakePagerInstance = this.createFakeInstance();\r\n                return _registerKeyboardAction(\"pager\", fakePagerInstance, element, void 0, action)\r\n            }\r\n        }))()\r\n    }\r\n    get infoVisible() {\r\n        var {\r\n            infoTextVisible: infoTextVisible,\r\n            showInfo: showInfo\r\n        } = this.props;\r\n        return showInfo && infoTextVisible && this.isLargeDisplayMode\r\n    }\r\n    get pageIndexSelectorVisible() {\r\n        return 0 !== this.props.pageSize\r\n    }\r\n    get normalizedDisplayMode() {\r\n        var {\r\n            displayMode: displayMode,\r\n            lightModeEnabled: lightModeEnabled\r\n        } = this.props;\r\n        if (\"adaptive\" === displayMode && void 0 !== lightModeEnabled) {\r\n            return lightModeEnabled ? \"compact\" : \"full\"\r\n        }\r\n        return displayMode\r\n    }\r\n    get pagesContainerVisible() {\r\n        return !!this.props.pagesNavigatorVisible && this.props.pageCount > 0\r\n    }\r\n    get pagesContainerVisibility() {\r\n        if (\"auto\" === this.props.pagesNavigatorVisible && 1 === this.props.pageCount && this.props.hasKnownLastPage) {\r\n            return \"hidden\"\r\n        }\r\n        return\r\n    }\r\n    get isLargeDisplayMode() {\r\n        var displayMode = this.normalizedDisplayMode;\r\n        var result = false;\r\n        if (\"adaptive\" === displayMode) {\r\n            result = this.props.isLargeDisplayMode\r\n        } else {\r\n            result = \"full\" === displayMode\r\n        }\r\n        return result\r\n    }\r\n    get classes() {\r\n        var classesMap = {\r\n            [\"\".concat(this.props.className)]: !!this.props.className,\r\n            [PAGER_CLASS]: true,\r\n            [LIGHT_MODE_CLASS]: !this.isLargeDisplayMode\r\n        };\r\n        return combineClasses(classesMap)\r\n    }\r\n    get restAttributes() {\r\n        var _this$props2 = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props2, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        super.componentWillUpdate();\r\n        if (this.props.onKeyDown !== nextProps.onKeyDown) {\r\n            this.__getterCache.keyboardAction = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            widgetRootElementRef: this.widgetRootElementRef,\r\n            keyboardAction: this.keyboardAction,\r\n            infoVisible: this.infoVisible,\r\n            pageIndexSelectorVisible: this.pageIndexSelectorVisible,\r\n            pagesContainerVisible: this.pagesContainerVisible,\r\n            pagesContainerVisibility: this.pagesContainerVisibility,\r\n            isLargeDisplayMode: this.isLargeDisplayMode,\r\n            classes: this.classes,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPagerContent.defaultProps = PagerContentProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"className\", \"defaultPageIndex\", \"defaultPageSize\", \"displayMode\", \"gridCompatibility\", \"hasKnownLastPage\", \"infoText\", \"lightModeEnabled\", \"maxPagesCount\", \"onKeyDown\", \"pageCount\", \"pageIndex\", \"pageIndexChange\", \"pageSize\", \"pageSizeChange\", \"pageSizes\", \"pagesCountText\", \"pagesNavigatorVisible\", \"rtlEnabled\", \"showInfo\", \"showNavigationButtons\", \"showPageSizes\", \"totalCount\", \"visible\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    InfernoWrapperComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    ResizableContainer\r\n} from \"./resizable_container\";\r\nimport {\r\n    PagerProps\r\n} from \"./common/pager_props\";\r\nimport {\r\n    PagerContent\r\n} from \"./content\";\r\nimport {\r\n    combineClasses\r\n} from \"../../utils/combine_classes\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        pagerProps: pagerProps,\r\n        restAttributes: restAttributes\r\n    } = _ref;\r\n    return normalizeProps(createComponentVNode(2, ResizableContainer, _extends({\r\n        contentTemplate: PagerContent,\r\n        pagerProps: pagerProps\r\n    }, restAttributes)))\r\n};\r\nimport {\r\n    createReRenderEffect\r\n} from \"@devextreme/runtime/inferno\";\r\nexport class Pager extends InfernoWrapperComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.__getterCache = {};\r\n        this.state = {\r\n            pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.props.defaultPageSize,\r\n            pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.props.defaultPageIndex\r\n        };\r\n        this.pageIndexChange = this.pageIndexChange.bind(this);\r\n        this.pageSizeChange = this.pageSizeChange.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [createReRenderEffect()]\r\n    }\r\n    pageIndexChange(newPageIndex) {\r\n        if (this.props.gridCompatibility) {\r\n            var __newValue;\r\n            this.setState(__state_argument => {\r\n                __newValue = newPageIndex + 1;\r\n                return {\r\n                    pageIndex: __newValue\r\n                }\r\n            });\r\n            this.props.pageIndexChange(__newValue)\r\n        } else {\r\n            var _newValue;\r\n            this.setState(__state_argument => {\r\n                _newValue = newPageIndex;\r\n                return {\r\n                    pageIndex: _newValue\r\n                }\r\n            });\r\n            this.props.pageIndexChange(_newValue)\r\n        }\r\n    }\r\n    get pageIndex() {\r\n        if (this.props.gridCompatibility) {\r\n            return (void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex) - 1\r\n        }\r\n        return void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex\r\n    }\r\n    pageSizeChange(newPageSize) {\r\n        var __newValue;\r\n        this.setState(__state_argument => {\r\n            __newValue = newPageSize;\r\n            return {\r\n                pageSize: __newValue\r\n            }\r\n        });\r\n        this.props.pageSizeChange(__newValue)\r\n    }\r\n    get className() {\r\n        if (this.props.gridCompatibility) {\r\n            return combineClasses({\r\n                \"dx-datagrid-pager\": true,\r\n                [\"\".concat(this.props.className)]: !!this.props.className\r\n            })\r\n        }\r\n        return this.props.className\r\n    }\r\n    get pagerProps() {\r\n        if (void 0 !== this.__getterCache.pagerProps) {\r\n            return this.__getterCache.pagerProps\r\n        }\r\n        return this.__getterCache.pagerProps = (() => _extends({}, _extends({}, this.props, {\r\n            pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.state.pageSize,\r\n            pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex\r\n        }), {\r\n            className: this.className,\r\n            pageIndex: this.pageIndex,\r\n            pageIndexChange: pageIndex => this.pageIndexChange(pageIndex),\r\n            pageSizeChange: pageSize => this.pageSizeChange(pageSize)\r\n        }))()\r\n    }\r\n    get restAttributes() {\r\n        var _this$props$pageSize$ = _extends({}, this.props, {\r\n                pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.state.pageSize,\r\n                pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex\r\n            }),\r\n            restProps = _objectWithoutPropertiesLoose(_this$props$pageSize$, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        super.componentWillUpdate();\r\n        if (this.props !== nextProps || this.props.gridCompatibility !== nextProps.gridCompatibility || this.props.className !== nextProps.className || this.state.pageIndex !== nextState.pageIndex || this.props.pageIndex !== nextProps.pageIndex || this.props.pageIndexChange !== nextProps.pageIndexChange || this.props.pageSizeChange !== nextProps.pageSizeChange) {\r\n            this.__getterCache.pagerProps = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                pageSize: void 0 !== this.props.pageSize ? this.props.pageSize : this.state.pageSize,\r\n                pageIndex: void 0 !== this.props.pageIndex ? this.props.pageIndex : this.state.pageIndex\r\n            }),\r\n            pageIndexChange: this.pageIndexChange,\r\n            pageIndex: this.pageIndex,\r\n            pageSizeChange: this.pageSizeChange,\r\n            className: this.className,\r\n            pagerProps: this.pagerProps,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nPager.defaultProps = PagerProps;\r\n","/**\r\n * DevExtreme (esm/renovation/ui/pager/pager.j.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport {\r\n    GridPagerWrapper\r\n} from \"../../component_wrapper/grid_pager\";\r\nimport {\r\n    Pager as PagerComponent\r\n} from \"./pager\";\r\nexport default class Pager extends GridPagerWrapper {\r\n    getProps() {\r\n        var props = super.getProps();\r\n        props.onKeyDown = this._wrapKeyDownHandler(props.onKeyDown);\r\n        return props\r\n    }\r\n    get _propsInfo() {\r\n        return {\r\n            twoWay: [\r\n                [\"pageSize\", \"defaultPageSize\", \"pageSizeChange\"],\r\n                [\"pageIndex\", \"defaultPageIndex\", \"pageIndexChange\"]\r\n            ],\r\n            allowNull: [],\r\n            elements: [],\r\n            templates: [],\r\n            props: [\"defaultPageSize\", \"pageSizeChange\", \"defaultPageIndex\", \"pageIndexChange\", \"gridCompatibility\", \"className\", \"showInfo\", \"infoText\", \"lightModeEnabled\", \"displayMode\", \"maxPagesCount\", \"pageCount\", \"pagesCountText\", \"visible\", \"hasKnownLastPage\", \"pagesNavigatorVisible\", \"showPageSizes\", \"pageSizes\", \"rtlEnabled\", \"showNavigationButtons\", \"totalCount\", \"onKeyDown\", \"pageSize\", \"pageIndex\"]\r\n        }\r\n    }\r\n    get _viewComponent() {\r\n        return PagerComponent\r\n    }\r\n}\r\nregisterComponent(\"dxPager\", Pager);\r\n","/**\r\n * DevExtreme (esm/ui/pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Widget from \"../renovation/ui/pager/pager.j\";\r\nexport default Widget;\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport Pager from \"../pager\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nvar PAGER_CLASS = \"pager\";\r\nvar MAX_PAGES_COUNT = 10;\r\nvar getPageIndex = function(dataController) {\r\n    return 1 + (parseInt(dataController.pageIndex()) || 0)\r\n};\r\nvar PagerView = modules.View.inherit({\r\n    init: function() {\r\n        var dataController = this.getController(\"data\");\r\n        dataController.changed.add(e => {\r\n            if (e && e.repaintChangesOnly) {\r\n                var pager = this._getPager();\r\n                if (pager) {\r\n                    pager.option({\r\n                        pageIndex: getPageIndex(dataController),\r\n                        pageSize: dataController.pageSize(),\r\n                        pageCount: dataController.pageCount(),\r\n                        totalCount: dataController.totalCount(),\r\n                        hasKnownLastPage: dataController.hasKnownLastPage()\r\n                    })\r\n                } else {\r\n                    this.render()\r\n                }\r\n            } else if (!e || \"update\" !== e.changeType && \"updateSelection\" !== e.changeType && \"updateFocusedRow\" !== e.changeType) {\r\n                this.render()\r\n            }\r\n        })\r\n    },\r\n    _getPager: function() {\r\n        var $element = this.element();\r\n        return $element && $element.data(\"dxPager\")\r\n    },\r\n    _renderCore: function() {\r\n        var $element = this.element().addClass(this.addWidgetPrefix(PAGER_CLASS));\r\n        var pagerOptions = this.option(\"pager\") || {};\r\n        var dataController = this.getController(\"data\");\r\n        var keyboardController = this.getController(\"keyboardNavigation\");\r\n        var options = {\r\n            maxPagesCount: MAX_PAGES_COUNT,\r\n            pageIndex: getPageIndex(dataController),\r\n            pageCount: dataController.pageCount(),\r\n            pageSize: dataController.pageSize(),\r\n            showPageSizes: pagerOptions.showPageSizeSelector,\r\n            showInfo: pagerOptions.showInfo,\r\n            displayMode: pagerOptions.displayMode,\r\n            pagesNavigatorVisible: pagerOptions.visible,\r\n            showNavigationButtons: pagerOptions.showNavigationButtons,\r\n            pageSizes: this.getPageSizes(),\r\n            totalCount: dataController.totalCount(),\r\n            hasKnownLastPage: dataController.hasKnownLastPage(),\r\n            pageIndexChanged: function(pageIndex) {\r\n                if (dataController.pageIndex() !== pageIndex - 1) {\r\n                    setTimeout((function() {\r\n                        dataController.pageIndex(pageIndex - 1)\r\n                    }))\r\n                }\r\n            },\r\n            pageSizeChanged: function(pageSize) {\r\n                setTimeout((function() {\r\n                    dataController.pageSize(pageSize)\r\n                }))\r\n            },\r\n            onKeyDown: e => keyboardController && keyboardController.executeAction(\"onKeyDown\", e),\r\n            useLegacyKeyboardNavigation: this.option(\"useLegacyKeyboardNavigation\"),\r\n            useKeyboard: this.option(\"keyboardNavigation.enabled\")\r\n        };\r\n        if (isDefined(pagerOptions.infoText)) {\r\n            options.infoText = pagerOptions.infoText\r\n        }\r\n        if (hasWindow()) {\r\n            this._createComponent($element, Pager, options)\r\n        } else {\r\n            $element.addClass(\"dx-pager\").html('<div class=\"dx-pages\"><div class=\"dx-page\"></div></div>')\r\n        }\r\n    },\r\n    getPageSizes: function() {\r\n        var dataController = this.getController(\"data\");\r\n        var pagerOptions = this.option(\"pager\");\r\n        var allowedPageSizes = pagerOptions && pagerOptions.allowedPageSizes;\r\n        var pageSize = dataController.pageSize();\r\n        if (!isDefined(this._pageSizes) || -1 === inArray(pageSize, this._pageSizes)) {\r\n            this._pageSizes = [];\r\n            if (pagerOptions) {\r\n                if (Array.isArray(allowedPageSizes)) {\r\n                    this._pageSizes = allowedPageSizes\r\n                } else if (allowedPageSizes && pageSize > 1) {\r\n                    this._pageSizes = [Math.floor(pageSize / 2), pageSize, 2 * pageSize]\r\n                }\r\n            }\r\n        }\r\n        return this._pageSizes\r\n    },\r\n    isVisible: function() {\r\n        var dataController = this.getController(\"data\");\r\n        var pagerOptions = this.option(\"pager\");\r\n        var pagerVisible = pagerOptions && pagerOptions.visible;\r\n        var scrolling = this.option(\"scrolling\");\r\n        if (\"auto\" === pagerVisible) {\r\n            if (scrolling && (\"virtual\" === scrolling.mode || \"infinite\" === scrolling.mode)) {\r\n                pagerVisible = false\r\n            } else {\r\n                pagerVisible = dataController.pageCount() > 1 || dataController.isLoaded() && !dataController.hasKnownLastPage()\r\n            }\r\n        }\r\n        return pagerVisible\r\n    },\r\n    getHeight: function() {\r\n        return this.getElementHeight()\r\n    },\r\n    optionChanged: function(args) {\r\n        var name = args.name;\r\n        var isPager = \"pager\" === name;\r\n        var isPaging = \"paging\" === name;\r\n        var isDataSource = \"dataSource\" === name;\r\n        var isScrolling = \"scrolling\" === name;\r\n        var dataController = this.getController(\"data\");\r\n        if (isPager || isPaging || isScrolling || isDataSource) {\r\n            args.handled = true;\r\n            if (dataController.skipProcessingPagingChange(args.fullName)) {\r\n                return\r\n            }\r\n            if (isPager || isPaging) {\r\n                this._pageSizes = null\r\n            }\r\n            if (!isDataSource) {\r\n                this._invalidate();\r\n                if (hasWindow() && isPager && this.component) {\r\n                    this.component.resize()\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\nexport var pagerModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            pager: {\r\n                visible: \"auto\",\r\n                showPageSizeSelector: false,\r\n                allowedPageSizes: \"auto\"\r\n            }\r\n        }\r\n    },\r\n    views: {\r\n        pagerView: PagerView\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.pager.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    pagerModule\r\n} from \"../grid_core/ui.grid_core.pager\";\r\ngridCore.registerModule(\"pager\", pagerModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_resizing_reordering.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    setHeight as _setHeight,\r\n    getHeight,\r\n    setWidth,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    isDefined,\r\n    isString,\r\n    isObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    addNamespace,\r\n    eventData as getEventData,\r\n    isTouchEvent\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    start as dragEventStart,\r\n    move as dragEventMove,\r\n    end as dragEventEnd\r\n} from \"../../events/drag\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport fx from \"../../animation/fx\";\r\nimport swatchContainer from \"../widget/swatch_container\";\r\nvar COLUMNS_SEPARATOR_CLASS = \"columns-separator\";\r\nvar COLUMNS_SEPARATOR_TRANSPARENT = \"columns-separator-transparent\";\r\nvar DRAGGING_HEADER_CLASS = \"drag-header\";\r\nvar CELL_CONTENT_CLASS = \"text-content\";\r\nvar HEADERS_DRAG_ACTION_CLASS = \"drag-action\";\r\nvar TRACKER_CLASS = \"tracker\";\r\nvar HEADERS_DROP_HIGHLIGHT_CLASS = \"drop-highlight\";\r\nvar BLOCK_SEPARATOR_CLASS = \"dx-block-separator\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar WIDGET_CLASS = \"dx-widget\";\r\nvar DRAGGING_COMMAND_CELL_CLASS = \"dx-drag-command-cell\";\r\nvar MODULE_NAMESPACE = \"dxDataGridResizingReordering\";\r\nvar COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH = 10;\r\nvar DRAGGING_DELTA = 5;\r\nvar COLUMN_OPACITY = .5;\r\nvar allowResizing = function(that) {\r\n    return that.option(\"allowColumnResizing\") || that.getController(\"columns\").isColumnOptionUsed(\"allowResizing\")\r\n};\r\nvar allowReordering = function(that) {\r\n    return that.option(\"allowColumnReordering\") || that.getController(\"columns\").isColumnOptionUsed(\"allowReordering\")\r\n};\r\nvar TrackerView = modules.View.inherit({\r\n    _renderCore: function() {\r\n        this.callBase();\r\n        this.element().addClass(this.addWidgetPrefix(TRACKER_CLASS));\r\n        this.hide()\r\n    },\r\n    _unsubscribeFromCallback: function() {\r\n        if (this._positionChanged) {\r\n            this._tablePositionController.positionChanged.remove(this._positionChanged)\r\n        }\r\n    },\r\n    _subscribeToCallback: function() {\r\n        var that = this;\r\n        that._positionChanged = function(position) {\r\n            var $element = that.element();\r\n            if ($element && $element.hasClass(that.addWidgetPrefix(TRACKER_CLASS))) {\r\n                $element.css({\r\n                    top: position.top\r\n                });\r\n                _setHeight($element, position.height)\r\n            }\r\n        };\r\n        this._tablePositionController.positionChanged.add(that._positionChanged)\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            this._unsubscribeFromCallback();\r\n            if (args.value) {\r\n                this._subscribeToCallback();\r\n                this._invalidate()\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this._tablePositionController = this.getController(\"tablePosition\");\r\n        this._subscribeToCallback()\r\n    },\r\n    isVisible: function() {\r\n        return allowResizing(this)\r\n    },\r\n    show: function() {\r\n        this.element().show()\r\n    },\r\n    hide: function() {\r\n        this.element() && this.element().hide()\r\n    },\r\n    setHeight: function(value) {\r\n        _setHeight(this.element(), value)\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribeFromCallback();\r\n        this.callBase()\r\n    }\r\n});\r\nvar SeparatorView = modules.View.inherit({\r\n    _renderSeparator: function() {},\r\n    _renderCore: function(options) {\r\n        this.callBase(options);\r\n        this._isShown = true;\r\n        this._renderSeparator();\r\n        this.hide()\r\n    },\r\n    show: function() {\r\n        this._isShown = true\r\n    },\r\n    hide: function() {\r\n        this._isShown = false\r\n    },\r\n    height: function(value) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            if (isDefined(value)) {\r\n                _setHeight($element, value)\r\n            } else {\r\n                return getHeight($element)\r\n            }\r\n        }\r\n    },\r\n    width: function(value) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            if (isDefined(value)) {\r\n                setWidth($element, value)\r\n            } else {\r\n                return getWidth($element)\r\n            }\r\n        }\r\n    }\r\n});\r\nvar ColumnsSeparatorView = SeparatorView.inherit({\r\n    _renderSeparator: function() {\r\n        this.callBase();\r\n        var $element = this.element();\r\n        $element.addClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_CLASS))\r\n    },\r\n    _subscribeToCallback: function() {\r\n        var that = this;\r\n        var $element;\r\n        that._positionChanged = function(position) {\r\n            $element = that.element();\r\n            if ($element) {\r\n                $element.css({\r\n                    top: position.top\r\n                });\r\n                _setHeight($element, position.height)\r\n            }\r\n        };\r\n        that._tablePositionController.positionChanged.add(that._positionChanged)\r\n    },\r\n    _unsubscribeFromCallback: function() {\r\n        this._positionChanged && this._tablePositionController.positionChanged.remove(this._positionChanged)\r\n    },\r\n    _init: function() {\r\n        this._isTransparent = allowResizing(this);\r\n        if (this.isVisible()) {\r\n            this._subscribeToCallback()\r\n        }\r\n    },\r\n    isVisible: function() {\r\n        return this.option(\"showColumnHeaders\") && (allowReordering(this) || allowResizing(this))\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            if (args.value) {\r\n                this._init();\r\n                this._invalidate();\r\n                this.hide(true)\r\n            } else {\r\n                this._unsubscribeFromCallback();\r\n                this._isTransparent = allowResizing(this);\r\n                this.hide(true)\r\n            }\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    init: function() {\r\n        this.callBase();\r\n        this._tablePositionController = this.getController(\"tablePosition\");\r\n        this._init()\r\n    },\r\n    show: function() {\r\n        var $element = this.element();\r\n        if ($element && !this._isShown) {\r\n            if (this._isTransparent) {\r\n                $element.removeClass(this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT))\r\n            } else {\r\n                $element.show()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    hide: function(force) {\r\n        var $element = this.element();\r\n        var columnsSeparatorTransparent = this.addWidgetPrefix(COLUMNS_SEPARATOR_TRANSPARENT);\r\n        if ($element && (this._isShown || force)) {\r\n            if (this._isTransparent) {\r\n                $element.addClass(columnsSeparatorTransparent);\r\n                $element.css(\"left\", \"\");\r\n                $element.show()\r\n            } else {\r\n                if ($element.hasClass(columnsSeparatorTransparent)) {\r\n                    $element.removeClass(columnsSeparatorTransparent)\r\n                }\r\n                $element.hide()\r\n            }\r\n        }\r\n        this.callBase()\r\n    },\r\n    moveByX: function(outerX) {\r\n        var $element = this.element();\r\n        if ($element) {\r\n            $element.css(\"left\", null === outerX ? 0 : outerX - this._parentElement().offset().left)\r\n        }\r\n    },\r\n    changeCursor: function(cursorName) {\r\n        cursorName = isDefined(cursorName) ? cursorName : \"\";\r\n        var $element = this.element();\r\n        if ($element) {\r\n            $element.css(\"cursor\", cursorName)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribeFromCallback();\r\n        this.callBase()\r\n    }\r\n});\r\nvar BlockSeparatorView = SeparatorView.inherit({\r\n    init: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        this.getController(\"data\").loadingChanged.add((function(isLoading) {\r\n            if (!isLoading) {\r\n                that.hide()\r\n            }\r\n        }))\r\n    },\r\n    _renderSeparator: function() {\r\n        this.callBase();\r\n        this.element().addClass(BLOCK_SEPARATOR_CLASS).html(\"&nbsp;\")\r\n    },\r\n    hide: function() {\r\n        var $parent = this._parentElement();\r\n        var $element = this.element();\r\n        if ($element && this._isShown) {\r\n            $element.css(\"display\", \"none\")\r\n        }\r\n        if ($parent && !$parent.children(\".\" + BLOCK_SEPARATOR_CLASS).length) {\r\n            $parent.prepend(this.element())\r\n        }\r\n        this.callBase()\r\n    },\r\n    isVisible: function() {\r\n        var groupPanelOptions = this.option(\"groupPanel\");\r\n        var columnChooserOptions = this.option(\"columnChooser\");\r\n        return groupPanelOptions && groupPanelOptions.visible || columnChooserOptions && columnChooserOptions.enabled\r\n    },\r\n    show: function(targetLocation) {\r\n        var $element = this.element();\r\n        var startAnimate = function(toOptions) {\r\n            fx.stop($element, true);\r\n            fx.animate($element, {\r\n                type: \"slide\",\r\n                from: {\r\n                    width: 0,\r\n                    display: toOptions.display\r\n                },\r\n                to: toOptions,\r\n                duration: 300,\r\n                easing: \"swing\"\r\n            })\r\n        };\r\n        if ($element && !this._isShown) {\r\n            switch (targetLocation) {\r\n                case \"group\":\r\n                    startAnimate({\r\n                        width: \"50px\",\r\n                        display: \"inline-block\"\r\n                    });\r\n                    break;\r\n                case \"columnChooser\":\r\n                    startAnimate({\r\n                        width: \"100%\",\r\n                        display: \"block\"\r\n                    });\r\n                    break;\r\n                default:\r\n                    $element.css(\"display\", \"\")\r\n            }\r\n        }\r\n        this.callBase()\r\n    }\r\n});\r\nvar DraggingHeaderView = modules.View.inherit({\r\n    _isDragging: false,\r\n    isDragging: function() {\r\n        return this._isDragging\r\n    },\r\n    _getDraggingPanelByPos: function(pos) {\r\n        var result;\r\n        each(this._dragOptions.draggingPanels, (function(index, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var boundingRect = draggingPanel.getBoundingRect();\r\n                if (boundingRect && (void 0 === boundingRect.bottom || pos.y < boundingRect.bottom) && (void 0 === boundingRect.top || pos.y > boundingRect.top) && (void 0 === boundingRect.left || pos.x > boundingRect.left) && (void 0 === boundingRect.right || pos.x < boundingRect.right)) {\r\n                    result = draggingPanel;\r\n                    return false\r\n                }\r\n            }\r\n        }));\r\n        return result\r\n    },\r\n    _renderCore: function() {\r\n        this.element().addClass(this.addWidgetPrefix(DRAGGING_HEADER_CLASS) + \" \" + this.addWidgetPrefix(CELL_CONTENT_CLASS) + \" \" + WIDGET_CLASS).hide()\r\n    },\r\n    _resetTargetColumnOptions: function() {\r\n        var params = this._dropOptions;\r\n        params.targetColumnIndex = -1;\r\n        delete params.targetColumnElement;\r\n        delete params.isLast;\r\n        delete params.posX;\r\n        delete params.posY\r\n    },\r\n    _getVisibleIndexObject: function(rowIndex, visibleIndex) {\r\n        if (isDefined(rowIndex)) {\r\n            return {\r\n                columnIndex: visibleIndex,\r\n                rowIndex: rowIndex\r\n            }\r\n        }\r\n        return visibleIndex\r\n    },\r\n    dispose: function() {\r\n        var element = this.element();\r\n        this._dragOptions = null;\r\n        element && element.parent().find(\".\" + this.addWidgetPrefix(DRAGGING_HEADER_CLASS)).remove()\r\n    },\r\n    isVisible: function() {\r\n        var columnsController = this.getController(\"columns\");\r\n        var commonColumnSettings = columnsController.getCommonSettings();\r\n        return this.option(\"showColumnHeaders\") && (allowReordering(this) || commonColumnSettings.allowGrouping || commonColumnSettings.allowHiding)\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        this.callBase();\r\n        this._controller = this.getController(\"draggingHeader\");\r\n        this._columnsResizerViewController = this.getController(\"columnsResizer\");\r\n        this.getController(\"data\").loadingChanged.add((function(isLoading) {\r\n            var element = that.element();\r\n            if (!isLoading && element) {\r\n                element.hide()\r\n            }\r\n        }))\r\n    },\r\n    dragHeader: function(options) {\r\n        var columnElement = options.columnElement;\r\n        var isCommandColumn = !!options.sourceColumn.type;\r\n        this._isDragging = true;\r\n        this._dragOptions = options;\r\n        this._dropOptions = {\r\n            sourceIndex: options.index,\r\n            sourceColumnIndex: this._getVisibleIndexObject(options.rowIndex, options.columnIndex),\r\n            sourceColumnElement: options.columnElement,\r\n            sourceLocation: options.sourceLocation\r\n        };\r\n        var document = domAdapter.getDocument();\r\n        this._onSelectStart = document.onselectstart;\r\n        document.onselectstart = function() {\r\n            return false\r\n        };\r\n        this._controller.drag(this._dropOptions);\r\n        this.element().css({\r\n            textAlign: columnElement && columnElement.css(\"textAlign\"),\r\n            height: columnElement && (isCommandColumn && columnElement.get(0).clientHeight || getHeight(columnElement)),\r\n            width: columnElement && (isCommandColumn && columnElement.get(0).clientWidth || getWidth(columnElement)),\r\n            whiteSpace: columnElement && columnElement.css(\"whiteSpace\")\r\n        }).addClass(this.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS)).toggleClass(DRAGGING_COMMAND_CELL_CLASS, isCommandColumn).text(isCommandColumn ? \"\" : options.sourceColumn.caption);\r\n        this.element().appendTo(swatchContainer.getSwatchContainer(columnElement))\r\n    },\r\n    moveHeader: function(args) {\r\n        var e = args.event;\r\n        var that = e.data.that;\r\n        var eventData = getEventData(e);\r\n        var isResizing = that._columnsResizerViewController ? that._columnsResizerViewController.isResizing() : false;\r\n        var dragOptions = that._dragOptions;\r\n        if (that._isDragging && !isResizing) {\r\n            var $element = that.element();\r\n            var moveDeltaX = Math.abs(eventData.x - dragOptions.columnElement.offset().left - dragOptions.deltaX);\r\n            var moveDeltaY = Math.abs(eventData.y - dragOptions.columnElement.offset().top - dragOptions.deltaY);\r\n            if ($element.is(\":visible\") || moveDeltaX > DRAGGING_DELTA || moveDeltaY > DRAGGING_DELTA) {\r\n                $element.show();\r\n                var newLeft = eventData.x - dragOptions.deltaX;\r\n                var newTop = eventData.y - dragOptions.deltaY;\r\n                $element.css({\r\n                    left: newLeft,\r\n                    top: newTop\r\n                });\r\n                that.dockHeader(eventData)\r\n            }\r\n            e.preventDefault()\r\n        }\r\n    },\r\n    dockHeader: function(eventData) {\r\n        var targetDraggingPanel = this._getDraggingPanelByPos(eventData);\r\n        var controller = this._controller;\r\n        var params = this._dropOptions;\r\n        var dragOptions = this._dragOptions;\r\n        if (targetDraggingPanel) {\r\n            var rtlEnabled = this.option(\"rtlEnabled\");\r\n            var isVerticalOrientation = \"columnChooser\" === targetDraggingPanel.getName();\r\n            var axisName = isVerticalOrientation ? \"y\" : \"x\";\r\n            var targetLocation = targetDraggingPanel.getName();\r\n            var rowIndex = \"headers\" === targetLocation ? dragOptions.rowIndex : void 0;\r\n            var sourceColumn = dragOptions.sourceColumn;\r\n            var columnElements = targetDraggingPanel.getColumnElements(rowIndex, null === sourceColumn || void 0 === sourceColumn ? void 0 : sourceColumn.ownerBand) || [];\r\n            var pointsByTarget = dragOptions.pointsByTarget = dragOptions.pointsByTarget || {};\r\n            var pointsByColumns = \"columnChooser\" === targetLocation ? [] : pointsByTarget[targetLocation] || controller._generatePointsByColumns(extend({}, dragOptions, {\r\n                targetDraggingPanel: targetDraggingPanel,\r\n                columns: targetDraggingPanel.getColumns(rowIndex),\r\n                columnElements: columnElements,\r\n                isVerticalOrientation: isVerticalOrientation,\r\n                startColumnIndex: \"headers\" === targetLocation && $(columnElements[0]).index()\r\n            }));\r\n            pointsByTarget[targetLocation] = pointsByColumns;\r\n            params.targetLocation = targetLocation;\r\n            if (pointsByColumns.length > 0) {\r\n                for (var i = 0; i < pointsByColumns.length; i++) {\r\n                    var centerPosition = pointsByColumns[i + 1] && (pointsByColumns[i][axisName] + pointsByColumns[i + 1][axisName]) / 2;\r\n                    if (void 0 === centerPosition || (rtlEnabled && \"x\" === axisName ? eventData[axisName] > centerPosition : eventData[axisName] < centerPosition)) {\r\n                        params.targetColumnIndex = this._getVisibleIndexObject(rowIndex, pointsByColumns[i].columnIndex);\r\n                        if (columnElements[i]) {\r\n                            params.targetColumnElement = columnElements.eq(i);\r\n                            params.isLast = false\r\n                        } else {\r\n                            params.targetColumnElement = columnElements.last();\r\n                            params.isLast = true\r\n                        }\r\n                        params.posX = pointsByColumns[i].x;\r\n                        params.posY = pointsByColumns[i].y;\r\n                        controller.dock(params);\r\n                        break\r\n                    }\r\n                }\r\n            } else {\r\n                this._resetTargetColumnOptions();\r\n                controller.dock(params)\r\n            }\r\n        }\r\n    },\r\n    dropHeader: function(args) {\r\n        var e = args.event;\r\n        var that = e.data.that;\r\n        var controller = that._controller;\r\n        that.element().hide();\r\n        if (controller && that._isDragging) {\r\n            controller.drop(that._dropOptions)\r\n        }\r\n        that.element().appendTo(that._parentElement());\r\n        that._dragOptions = null;\r\n        that._dropOptions = null;\r\n        that._isDragging = false;\r\n        domAdapter.getDocument().onselectstart = that._onSelectStart || null\r\n    }\r\n});\r\nvar isNextColumnResizingMode = function(that) {\r\n    return \"widget\" !== that.option(\"columnResizingMode\")\r\n};\r\nvar ColumnsResizerViewController = modules.ViewController.inherit({\r\n    _isHeadersRowArea: function(posY) {\r\n        if (this._columnHeadersView) {\r\n            var element = this._columnHeadersView.element();\r\n            if (element) {\r\n                var offsetTop = element.offset().top;\r\n                var headersRowHeight = this._columnHeadersView.getHeadersRowHeight();\r\n                return posY >= offsetTop && posY <= offsetTop + headersRowHeight\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _isRtlParentStyle: function() {\r\n        var _this$_$parentContain;\r\n        return this.option(\"rtlEnabled\") && \"rtl\" === (null === (_this$_$parentContain = this._$parentContainer) || void 0 === _this$_$parentContain ? void 0 : _this$_$parentContain.parent().css(\"direction\"))\r\n    },\r\n    _pointCreated: function(point, cellsLength, columns) {\r\n        var isNextColumnMode = isNextColumnResizingMode(this);\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n        var firstPointColumnIndex = !isNextColumnMode && rtlEnabled && !isRtlParentStyle ? 0 : 1;\r\n        if (point.index >= firstPointColumnIndex && point.index < cellsLength + (!isNextColumnMode && (!rtlEnabled || isRtlParentStyle) ? 1 : 0)) {\r\n            point.columnIndex -= firstPointColumnIndex;\r\n            var currentColumn = columns[point.columnIndex] || {};\r\n            var nextColumn = columns[point.columnIndex + 1] || {};\r\n            return !(isNextColumnMode ? currentColumn.allowResizing && nextColumn.allowResizing : currentColumn.allowResizing)\r\n        }\r\n        return true\r\n    },\r\n    _getTargetPoint: function(pointsByColumns, currentX, deltaX) {\r\n        if (pointsByColumns) {\r\n            for (var i = 0; i < pointsByColumns.length; i++) {\r\n                if (pointsByColumns[i].x === pointsByColumns[0].x && pointsByColumns[i + 1] && pointsByColumns[i].x === pointsByColumns[i + 1].x) {\r\n                    continue\r\n                }\r\n                if (pointsByColumns[i].x - deltaX <= currentX && currentX <= pointsByColumns[i].x + deltaX) {\r\n                    return pointsByColumns[i]\r\n                }\r\n            }\r\n        }\r\n        return null\r\n    },\r\n    _moveSeparator: function(args) {\r\n        var _that$_draggingHeader;\r\n        var e = args.event;\r\n        var that = e.data;\r\n        var columnsSeparatorWidth = that._columnsSeparatorView.width();\r\n        var isNextColumnMode = isNextColumnResizingMode(that);\r\n        var deltaX = columnsSeparatorWidth / 2;\r\n        var parentOffset = that._$parentContainer.offset();\r\n        var parentOffsetLeft = parentOffset.left;\r\n        var eventData = getEventData(e);\r\n        var rtlEnabled = that.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n        var isDragging = null === (_that$_draggingHeader = that._draggingHeaderView) || void 0 === _that$_draggingHeader ? void 0 : _that$_draggingHeader.isDragging();\r\n        if (that._isResizing && that._resizingInfo) {\r\n            if ((parentOffsetLeft <= eventData.x || !isNextColumnMode && isRtlParentStyle) && (!isNextColumnMode || eventData.x <= parentOffsetLeft + getWidth(that._$parentContainer))) {\r\n                if (that._updateColumnsWidthIfNeeded(eventData.x)) {\r\n                    var $cell = that._columnHeadersView.getColumnElements().eq(that._resizingInfo.currentColumnIndex);\r\n                    var cell = $cell[0];\r\n                    if (cell) {\r\n                        var outerWidth = cell.getBoundingClientRect().width;\r\n                        that._columnsSeparatorView.moveByX($cell.offset().left + ((isNextColumnMode || isRtlParentStyle) && rtlEnabled ? 0 : outerWidth));\r\n                        that._tablePositionController.update(that._targetPoint.y);\r\n                        e.preventDefault()\r\n                    }\r\n                }\r\n            }\r\n        } else if (!isDragging) {\r\n            if (that._isHeadersRowArea(eventData.y)) {\r\n                if (that._previousParentOffset) {\r\n                    if (that._previousParentOffset.left !== parentOffset.left || that._previousParentOffset.top !== parentOffset.top) {\r\n                        that.pointsByColumns(null)\r\n                    }\r\n                }\r\n                that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, columnsSeparatorWidth);\r\n                that._previousParentOffset = parentOffset;\r\n                that._isReadyResizing = false;\r\n                if (that._targetPoint) {\r\n                    that._columnsSeparatorView.changeCursor(\"col-resize\");\r\n                    that._columnsSeparatorView.moveByX(that._targetPoint.x - deltaX);\r\n                    that._tablePositionController.update(that._targetPoint.y);\r\n                    that._isReadyResizing = true;\r\n                    e.preventDefault()\r\n                } else {\r\n                    that._columnsSeparatorView.changeCursor();\r\n                    that._columnsSeparatorView.moveByX(null)\r\n                }\r\n            } else {\r\n                that.pointsByColumns(null);\r\n                that._isReadyResizing = false;\r\n                that._columnsSeparatorView.changeCursor();\r\n                that._columnsSeparatorView.moveByX(null)\r\n            }\r\n        }\r\n    },\r\n    _endResizing: function(args) {\r\n        var e = args.event;\r\n        var that = e.data;\r\n        if (that._isResizing) {\r\n            that.pointsByColumns(null);\r\n            that._resizingInfo = null;\r\n            that._columnsSeparatorView.hide();\r\n            that._columnsSeparatorView.changeCursor();\r\n            that._trackerView.hide();\r\n            that._isReadyResizing = false;\r\n            that._isResizing = false\r\n        }\r\n    },\r\n    _getNextColumnIndex: function(currentColumnIndex) {\r\n        return currentColumnIndex + 1\r\n    },\r\n    _setupResizingInfo: function(posX) {\r\n        var currentColumnIndex = this._targetPoint.columnIndex;\r\n        var nextColumnIndex = this._getNextColumnIndex(currentColumnIndex);\r\n        var currentHeader = this._columnHeadersView.getHeaderElement(currentColumnIndex);\r\n        var nextHeader = this._columnHeadersView.getHeaderElement(nextColumnIndex);\r\n        this._resizingInfo = {\r\n            startPosX: posX,\r\n            currentColumnIndex: currentColumnIndex,\r\n            currentColumnWidth: currentHeader && currentHeader.length > 0 ? getBoundingRect(currentHeader[0]).width : 0,\r\n            nextColumnIndex: nextColumnIndex,\r\n            nextColumnWidth: nextHeader && nextHeader.length > 0 ? getBoundingRect(nextHeader[0]).width : 0\r\n        }\r\n    },\r\n    _startResizing: function(args) {\r\n        var e = args.event;\r\n        var that = e.data;\r\n        var eventData = getEventData(e);\r\n        if (isTouchEvent(e)) {\r\n            if (that._isHeadersRowArea(eventData.y)) {\r\n                that._targetPoint = that._getTargetPoint(that.pointsByColumns(), eventData.x, COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH);\r\n                if (that._targetPoint) {\r\n                    that._columnsSeparatorView.moveByX(that._targetPoint.x - that._columnsSeparatorView.width() / 2);\r\n                    that._isReadyResizing = true\r\n                }\r\n            } else {\r\n                that._isReadyResizing = false\r\n            }\r\n        }\r\n        if (that._isReadyResizing) {\r\n            that._setupResizingInfo(eventData.x);\r\n            that._isResizing = true;\r\n            that._tablePositionController.update(that._targetPoint.y);\r\n            that._columnsSeparatorView.show();\r\n            that._trackerView.show();\r\n            var scrollable = that.component.getScrollable();\r\n            if (scrollable && that._isRtlParentStyle()) {\r\n                that._scrollRight = getWidth(scrollable.$content()) - getWidth(scrollable.container()) - scrollable.scrollLeft()\r\n            }\r\n            e.preventDefault();\r\n            e.stopPropagation()\r\n        }\r\n        if (this.isResizing()) {\r\n            this.getController(\"editorFactory\").loseFocus()\r\n        }\r\n    },\r\n    _generatePointsByColumns: function() {\r\n        var that = this;\r\n        var columns = that._columnsController ? that._columnsController.getVisibleColumns() : [];\r\n        var cells = that._columnHeadersView.getColumnElements();\r\n        var pointsByColumns = [];\r\n        if (cells && cells.length > 0) {\r\n            pointsByColumns = gridCoreUtils.getPointsByColumns(cells, (function(point) {\r\n                return that._pointCreated(point, cells.length, columns)\r\n            }))\r\n        }\r\n        that._pointsByColumns = pointsByColumns\r\n    },\r\n    _unsubscribeFromEvents: function() {\r\n        this._moveSeparatorHandler && eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.move, MODULE_NAMESPACE), this._moveSeparatorHandler);\r\n        this._startResizingHandler && eventsEngine.off(this._$parentContainer, addNamespace(pointerEvents.down, MODULE_NAMESPACE), this._startResizingHandler);\r\n        if (this._endResizingHandler) {\r\n            eventsEngine.off(this._columnsSeparatorView.element(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this._endResizingHandler);\r\n            eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this._endResizingHandler)\r\n        }\r\n    },\r\n    _subscribeToEvents: function() {\r\n        this._moveSeparatorHandler = this.createAction(this._moveSeparator);\r\n        this._startResizingHandler = this.createAction(this._startResizing);\r\n        this._endResizingHandler = this.createAction(this._endResizing);\r\n        eventsEngine.on(domAdapter.getDocument(), addNamespace(pointerEvents.move, MODULE_NAMESPACE), this, this._moveSeparatorHandler);\r\n        eventsEngine.on(this._$parentContainer, addNamespace(pointerEvents.down, MODULE_NAMESPACE), this, this._startResizingHandler);\r\n        eventsEngine.on(this._columnsSeparatorView.element(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this, this._endResizingHandler);\r\n        eventsEngine.on(domAdapter.getDocument(), addNamespace(pointerEvents.up, MODULE_NAMESPACE), this, this._endResizingHandler)\r\n    },\r\n    _updateColumnsWidthIfNeeded: function(posX) {\r\n        var deltaX;\r\n        var needUpdate = false;\r\n        var nextCellWidth;\r\n        var resizingInfo = this._resizingInfo;\r\n        var columnsController = this._columnsController;\r\n        var visibleColumns = columnsController.getVisibleColumns();\r\n        var columnsSeparatorWidth = this._columnsSeparatorView.width();\r\n        var contentWidth = this._rowsView.contentWidth();\r\n        var isNextColumnMode = isNextColumnResizingMode(this);\r\n        var adaptColumnWidthByRatio = isNextColumnMode && this.option(\"adaptColumnWidthByRatio\") && !this.option(\"columnAutoWidth\");\r\n        var minWidth;\r\n        var nextColumn;\r\n        var cellWidth;\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        var isRtlParentStyle = this._isRtlParentStyle();\r\n\r\n        function isPercentWidth(width) {\r\n            return isString(width) && \"%\" === width.slice(-1)\r\n        }\r\n\r\n        function setColumnWidth(column, columnWidth, contentWidth, adaptColumnWidthByRatio) {\r\n            if (column) {\r\n                var oldColumnWidth = column.width;\r\n                if (oldColumnWidth) {\r\n                    adaptColumnWidthByRatio = isPercentWidth(oldColumnWidth)\r\n                }\r\n                if (adaptColumnWidthByRatio) {\r\n                    columnsController.columnOption(column.index, \"visibleWidth\", columnWidth);\r\n                    columnsController.columnOption(column.index, \"width\", (columnWidth / contentWidth * 100).toFixed(3) + \"%\")\r\n                } else {\r\n                    columnsController.columnOption(column.index, \"visibleWidth\", null);\r\n                    columnsController.columnOption(column.index, \"width\", columnWidth)\r\n                }\r\n            }\r\n        }\r\n        deltaX = posX - resizingInfo.startPosX;\r\n        if ((isNextColumnMode || isRtlParentStyle) && rtlEnabled) {\r\n            deltaX = -deltaX\r\n        }\r\n        cellWidth = resizingInfo.currentColumnWidth + deltaX;\r\n        var column = visibleColumns[resizingInfo.currentColumnIndex];\r\n        minWidth = column && column.minWidth || columnsSeparatorWidth;\r\n        needUpdate = cellWidth >= minWidth;\r\n        if (isNextColumnMode) {\r\n            nextCellWidth = resizingInfo.nextColumnWidth - deltaX;\r\n            nextColumn = visibleColumns[resizingInfo.nextColumnIndex];\r\n            minWidth = nextColumn && nextColumn.minWidth || columnsSeparatorWidth;\r\n            needUpdate = needUpdate && nextCellWidth >= minWidth\r\n        }\r\n        if (needUpdate) {\r\n            columnsController.beginUpdate();\r\n            cellWidth = Math.floor(cellWidth);\r\n            contentWidth = function(contentWidth, visibleColumns) {\r\n                var allColumnsHaveWidth = visibleColumns.every(column => column.width);\r\n                if (allColumnsHaveWidth) {\r\n                    var totalPercent = visibleColumns.reduce((sum, column) => {\r\n                        if (isPercentWidth(column.width)) {\r\n                            sum += parseFloat(column.width)\r\n                        }\r\n                        return sum\r\n                    }, 0);\r\n                    if (totalPercent > 100) {\r\n                        contentWidth = contentWidth / totalPercent * 100\r\n                    }\r\n                }\r\n                return contentWidth\r\n            }(contentWidth, visibleColumns);\r\n            setColumnWidth(column, cellWidth, contentWidth, adaptColumnWidthByRatio);\r\n            if (isNextColumnMode) {\r\n                nextCellWidth = Math.floor(nextCellWidth);\r\n                setColumnWidth(nextColumn, nextCellWidth, contentWidth, adaptColumnWidthByRatio)\r\n            } else {\r\n                var columnWidths = this._columnHeadersView.getColumnWidths();\r\n                columnWidths[resizingInfo.currentColumnIndex] = cellWidth;\r\n                var hasScroll = columnWidths.reduce((totalWidth, width) => totalWidth + width, 0) > this._rowsView.contentWidth();\r\n                if (!hasScroll) {\r\n                    var lastColumnIndex = gridCoreUtils.getLastResizableColumnIndex(visibleColumns);\r\n                    if (lastColumnIndex >= 0) {\r\n                        columnsController.columnOption(visibleColumns[lastColumnIndex].index, \"visibleWidth\", \"auto\")\r\n                    }\r\n                }\r\n                for (var i = 0; i < columnWidths.length; i++) {\r\n                    if (visibleColumns[i] && visibleColumns[i] !== column && void 0 === visibleColumns[i].width) {\r\n                        columnsController.columnOption(visibleColumns[i].index, \"width\", columnWidths[i])\r\n                    }\r\n                }\r\n            }\r\n            columnsController.endUpdate();\r\n            if (!isNextColumnMode) {\r\n                this.component.updateDimensions();\r\n                var scrollable = this.component.getScrollable();\r\n                if (scrollable && isRtlParentStyle) {\r\n                    var left = getWidth(scrollable.$content()) - getWidth(scrollable.container()) - this._scrollRight;\r\n                    scrollable.scrollTo({\r\n                        left: left\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        return needUpdate\r\n    },\r\n    _subscribeToCallback: function(callback, handler) {\r\n        callback.add(handler);\r\n        this._subscribesToCallbacks.push({\r\n            callback: callback,\r\n            handler: handler\r\n        })\r\n    },\r\n    _unsubscribeFromCallbacks: function() {\r\n        for (var i = 0; i < this._subscribesToCallbacks.length; i++) {\r\n            var subscribe = this._subscribesToCallbacks[i];\r\n            subscribe.callback.remove(subscribe.handler)\r\n        }\r\n        this._subscribesToCallbacks = []\r\n    },\r\n    _unsubscribes: function() {\r\n        this._unsubscribeFromEvents();\r\n        this._unsubscribeFromCallbacks()\r\n    },\r\n    _init: function() {\r\n        var that = this;\r\n        var generatePointsByColumnsHandler = function() {\r\n            if (!that._isResizing) {\r\n                that.pointsByColumns(null)\r\n            }\r\n        };\r\n        var generatePointsByColumnsScrollHandler = function(offset) {\r\n            if (that._scrollLeft !== offset.left) {\r\n                that._scrollLeft = offset.left;\r\n                that.pointsByColumns(null)\r\n            }\r\n        };\r\n        that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\r\n        that._columnHeadersView = that.getView(\"columnHeadersView\");\r\n        that._trackerView = that.getView(\"trackerView\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._tablePositionController = that.getController(\"tablePosition\");\r\n        that._$parentContainer = that.component.$element();\r\n        that._draggingHeaderView = that.component.getView(\"draggingHeaderView\");\r\n        that._subscribeToCallback(that._columnHeadersView.renderCompleted, generatePointsByColumnsHandler);\r\n        that._subscribeToCallback(that._columnHeadersView.resizeCompleted, generatePointsByColumnsHandler);\r\n        that._subscribeToCallback(that._columnsSeparatorView.renderCompleted, (function() {\r\n            that._unsubscribeFromEvents();\r\n            that._subscribeToEvents()\r\n        }));\r\n        that._subscribeToCallback(that._rowsView.renderCompleted, (function() {\r\n            that._rowsView.scrollChanged.remove(generatePointsByColumnsScrollHandler);\r\n            that._rowsView.scrollChanged.add(generatePointsByColumnsScrollHandler)\r\n        }));\r\n        var previousScrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\r\n        var previousTableHeight = 0;\r\n        that._subscribeToCallback(that.getController(\"tablePosition\").positionChanged, (function(e) {\r\n            if (that._isResizing && !that._rowsView.isResizing) {\r\n                var scrollbarVisibility = 0 !== that._rowsView.getScrollbarWidth();\r\n                if (previousScrollbarVisibility !== scrollbarVisibility || previousTableHeight && previousTableHeight !== e.height) {\r\n                    previousScrollbarVisibility = scrollbarVisibility;\r\n                    previousTableHeight = e.height;\r\n                    that.component.updateDimensions()\r\n                } else {\r\n                    that._rowsView.updateFreeSpaceRowHeight()\r\n                }\r\n            }\r\n            previousTableHeight = e.height\r\n        }))\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        if (\"allowColumnResizing\" === args.name) {\r\n            if (args.value) {\r\n                this._init();\r\n                this._subscribeToEvents()\r\n            } else {\r\n                this._unsubscribes()\r\n            }\r\n        }\r\n    },\r\n    isResizing: function() {\r\n        return this._isResizing\r\n    },\r\n    init: function() {\r\n        this._subscribesToCallbacks = [];\r\n        if (allowResizing(this)) {\r\n            this._init()\r\n        }\r\n    },\r\n    pointsByColumns: function(value) {\r\n        if (void 0 !== value) {\r\n            this._pointsByColumns = value\r\n        } else {\r\n            if (!this._pointsByColumns) {\r\n                this._generatePointsByColumns()\r\n            }\r\n            return this._pointsByColumns\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this._unsubscribes();\r\n        this.callBase()\r\n    }\r\n});\r\nvar TablePositionViewController = modules.ViewController.inherit({\r\n    update: function(top) {\r\n        var params = {};\r\n        var $element = this._columnHeadersView.element();\r\n        var offset = $element && $element.offset();\r\n        var offsetTop = offset && offset.top || 0;\r\n        var diffOffsetTop = isDefined(top) ? Math.abs(top - offsetTop) : 0;\r\n        var columnsHeadersHeight = this._columnHeadersView ? this._columnHeadersView.getHeight() : 0;\r\n        var scrollBarWidth = this._rowsView.getScrollbarWidth(true);\r\n        var rowsHeight = this._rowsView ? this._rowsView.height() - scrollBarWidth : 0;\r\n        var columnsResizerController = this.component.getController(\"columnsResizer\");\r\n        var draggingHeaderView = this.component.getView(\"draggingHeaderView\");\r\n        params.height = columnsHeadersHeight;\r\n        var isDraggingOrResizing = false !== columnsResizerController.isResizing() || draggingHeaderView.isDragging();\r\n        if (isDraggingOrResizing) {\r\n            params.height += rowsHeight - diffOffsetTop\r\n        }\r\n        if (null !== top && $element && $element.length) {\r\n            params.top = $element[0].offsetTop + diffOffsetTop\r\n        }\r\n        this.positionChanged.fire(params)\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that.callBase();\r\n        that._columnHeadersView = this.getView(\"columnHeadersView\");\r\n        that._rowsView = this.getView(\"rowsView\");\r\n        that._pagerView = this.getView(\"pagerView\");\r\n        that._rowsView.resizeCompleted.add((function() {\r\n            if (that.option(\"allowColumnResizing\")) {\r\n                var targetPoint = that.getController(\"columnsResizer\")._targetPoint;\r\n                that.update(targetPoint ? targetPoint.y : null)\r\n            }\r\n        }))\r\n    },\r\n    ctor: function(component) {\r\n        this.callBase(component);\r\n        this.positionChanged = Callbacks()\r\n    }\r\n});\r\nvar DraggingHeaderViewController = modules.ViewController.inherit({\r\n    _generatePointsByColumns: function(options) {\r\n        var that = this;\r\n        return gridCoreUtils.getPointsByColumns(options.columnElements, (function(point) {\r\n            return that._pointCreated(point, options.columns, options.targetDraggingPanel.getName(), options.sourceColumn)\r\n        }), options.isVerticalOrientation, options.startColumnIndex)\r\n    },\r\n    _pointCreated: function(point, columns, location, sourceColumn) {\r\n        var targetColumn = columns[point.columnIndex];\r\n        var prevColumn = columns[point.columnIndex - 1];\r\n        switch (location) {\r\n            case \"columnChooser\":\r\n                return true;\r\n            case \"headers\":\r\n                return sourceColumn && !sourceColumn.allowReordering || (!targetColumn || !targetColumn.allowReordering) && (!prevColumn || !prevColumn.allowReordering);\r\n            default:\r\n                return 0 === columns.length\r\n        }\r\n    },\r\n    _subscribeToEvents: function(draggingHeader, draggingPanels) {\r\n        var that = this;\r\n        each(draggingPanels, (function(_, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var columns;\r\n                var rowCount = draggingPanel.getRowCount ? draggingPanel.getRowCount() : 1;\r\n                var nameDraggingPanel = draggingPanel.getName();\r\n                var subscribeToEvents = function(index, columnElement) {\r\n                    if (!columnElement) {\r\n                        return\r\n                    }\r\n                    var $columnElement = $(columnElement);\r\n                    var column = columns[index];\r\n                    if (draggingPanel.allowDragging(column, nameDraggingPanel, draggingPanels)) {\r\n                        $columnElement.addClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventStart, MODULE_NAMESPACE), that.createAction((function(args) {\r\n                            var e = args.event;\r\n                            var eventData = getEventData(e);\r\n                            draggingHeader.dragHeader({\r\n                                deltaX: eventData.x - $(e.currentTarget).offset().left,\r\n                                deltaY: eventData.y - $(e.currentTarget).offset().top,\r\n                                sourceColumn: column,\r\n                                index: column.index,\r\n                                columnIndex: index,\r\n                                columnElement: $columnElement,\r\n                                sourceLocation: nameDraggingPanel,\r\n                                draggingPanels: draggingPanels,\r\n                                rowIndex: that._columnsController.getRowIndex(column.index, true)\r\n                            })\r\n                        })));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventMove, MODULE_NAMESPACE), {\r\n                            that: draggingHeader\r\n                        }, that.createAction(draggingHeader.moveHeader));\r\n                        eventsEngine.on($columnElement, addNamespace(dragEventEnd, MODULE_NAMESPACE), {\r\n                            that: draggingHeader\r\n                        }, that.createAction(draggingHeader.dropHeader))\r\n                    }\r\n                };\r\n                for (var i = 0; i < rowCount; i++) {\r\n                    var columnElements = draggingPanel.getColumnElements(i) || [];\r\n                    if (columnElements.length) {\r\n                        columns = draggingPanel.getColumns(i) || [];\r\n                        each(columnElements, subscribeToEvents)\r\n                    }\r\n                }\r\n            }\r\n        }))\r\n    },\r\n    _unsubscribeFromEvents: function(draggingHeader, draggingPanels) {\r\n        var that = this;\r\n        each(draggingPanels, (function(_, draggingPanel) {\r\n            if (draggingPanel) {\r\n                var columnElements = draggingPanel.getColumnElements() || [];\r\n                each(columnElements, (function(index, columnElement) {\r\n                    var $columnElement = $(columnElement);\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventStart, MODULE_NAMESPACE));\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventMove, MODULE_NAMESPACE));\r\n                    eventsEngine.off($columnElement, addNamespace(dragEventEnd, MODULE_NAMESPACE));\r\n                    $columnElement.removeClass(that.addWidgetPrefix(HEADERS_DRAG_ACTION_CLASS))\r\n                }))\r\n            }\r\n        }))\r\n    },\r\n    _getSeparator: function(targetLocation) {\r\n        return \"headers\" === targetLocation ? this._columnsSeparatorView : this._blockSeparatorView\r\n    },\r\n    hideSeparators: function(type) {\r\n        var blockSeparator = this._blockSeparatorView;\r\n        var columnsSeparator = this._columnsSeparatorView;\r\n        this._animationColumnIndex = null;\r\n        blockSeparator && blockSeparator.hide();\r\n        \"block\" !== type && columnsSeparator && columnsSeparator.hide()\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that.callBase();\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._columnHeadersView = that.getView(\"columnHeadersView\");\r\n        that._columnsSeparatorView = that.getView(\"columnsSeparatorView\");\r\n        that._draggingHeaderView = that.getView(\"draggingHeaderView\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._blockSeparatorView = that.getView(\"blockSeparatorView\");\r\n        that._headerPanelView = that.getView(\"headerPanel\");\r\n        that._columnChooserView = that.getView(\"columnChooserView\");\r\n        var subscribeToEvents = function() {\r\n            if (that._draggingHeaderView) {\r\n                var draggingPanels = [that._columnChooserView, that._columnHeadersView, that._headerPanelView];\r\n                that._unsubscribeFromEvents(that._draggingHeaderView, draggingPanels);\r\n                that._subscribeToEvents(that._draggingHeaderView, draggingPanels)\r\n            }\r\n        };\r\n        that._columnHeadersView.renderCompleted.add(subscribeToEvents);\r\n        that._headerPanelView && that._headerPanelView.renderCompleted.add(subscribeToEvents);\r\n        that._columnChooserView && that._columnChooserView.renderCompleted.add(subscribeToEvents)\r\n    },\r\n    allowDrop: function(parameters) {\r\n        return this._columnsController.allowMoveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation)\r\n    },\r\n    drag: function(parameters) {\r\n        var sourceIndex = parameters.sourceIndex;\r\n        var sourceLocation = parameters.sourceLocation;\r\n        var sourceColumnElement = parameters.sourceColumnElement;\r\n        var headersView = this._columnHeadersView;\r\n        var rowsView = this._rowsView;\r\n        if (sourceColumnElement) {\r\n            sourceColumnElement.css({\r\n                opacity: COLUMN_OPACITY\r\n            });\r\n            if (\"headers\" === sourceLocation) {\r\n                headersView && headersView.setRowsOpacity(sourceIndex, COLUMN_OPACITY);\r\n                rowsView && rowsView.setRowsOpacity(sourceIndex, COLUMN_OPACITY)\r\n            }\r\n        }\r\n    },\r\n    dock: function(parameters) {\r\n        var that = this;\r\n        var targetColumnIndex = isObject(parameters.targetColumnIndex) ? parameters.targetColumnIndex.columnIndex : parameters.targetColumnIndex;\r\n        var sourceLocation = parameters.sourceLocation;\r\n        var targetLocation = parameters.targetLocation;\r\n        var separator = that._getSeparator(targetLocation);\r\n        var hasTargetVisibleIndex = targetColumnIndex >= 0;\r\n        that._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).toggleClass(that.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS), \"headers\" !== sourceLocation && \"headers\" === targetLocation && !hasTargetVisibleIndex);\r\n        if (separator) {\r\n            if (that.allowDrop(parameters) && hasTargetVisibleIndex) {\r\n                if (\"group\" === targetLocation || \"columnChooser\" === targetLocation) {\r\n                    ! function() {\r\n                        if (that._animationColumnIndex !== targetColumnIndex) {\r\n                            that.hideSeparators();\r\n                            separator.element()[parameters.isLast ? \"insertAfter\" : \"insertBefore\"](parameters.targetColumnElement);\r\n                            that._animationColumnIndex = targetColumnIndex;\r\n                            separator.show(targetLocation)\r\n                        }\r\n                    }()\r\n                } else {\r\n                    that.hideSeparators(\"block\");\r\n                    that.getController(\"tablePosition\").update(parameters.posY);\r\n                    separator.moveByX(parameters.posX - separator.width());\r\n                    separator.show()\r\n                }\r\n            } else {\r\n                that.hideSeparators()\r\n            }\r\n        }\r\n    },\r\n    drop: function(parameters) {\r\n        var sourceColumnElement = parameters.sourceColumnElement;\r\n        if (sourceColumnElement) {\r\n            sourceColumnElement.css({\r\n                opacity: \"\"\r\n            });\r\n            this._columnHeadersView.setRowsOpacity(parameters.sourceIndex, \"\");\r\n            this._rowsView.setRowsOpacity(parameters.sourceIndex, \"\");\r\n            this._columnHeadersView.element().find(\".\" + HEADER_ROW_CLASS).removeClass(this.addWidgetPrefix(HEADERS_DROP_HIGHLIGHT_CLASS))\r\n        }\r\n        if (this.allowDrop(parameters)) {\r\n            var separator = this._getSeparator(parameters.targetLocation);\r\n            if (separator) {\r\n                separator.hide()\r\n            }\r\n            this._columnsController.moveColumn(parameters.sourceColumnIndex, parameters.targetColumnIndex, parameters.sourceLocation, parameters.targetLocation)\r\n        }\r\n    },\r\n    dispose: function() {\r\n        if (this._draggingHeaderView) {\r\n            this._unsubscribeFromEvents(this._draggingHeaderView, [this._columnChooserView, this._columnHeadersView, this._headerPanelView])\r\n        }\r\n    }\r\n});\r\nexport var columnsResizingReorderingModule = {\r\n    views: {\r\n        columnsSeparatorView: ColumnsSeparatorView,\r\n        blockSeparatorView: BlockSeparatorView,\r\n        draggingHeaderView: DraggingHeaderView,\r\n        trackerView: TrackerView\r\n    },\r\n    controllers: {\r\n        draggingHeader: DraggingHeaderViewController,\r\n        tablePosition: TablePositionViewController,\r\n        columnsResizer: ColumnsResizerViewController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _needUpdateRowHeight: function(itemCount) {\r\n                    var wordWrapEnabled = this.option(\"wordWrapEnabled\");\r\n                    var columnsResizerController = this.getController(\"columnsResizer\");\r\n                    var isResizing = columnsResizerController.isResizing();\r\n                    return this.callBase.apply(this, arguments) || itemCount > 0 && wordWrapEnabled && isResizing\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            editorFactory: {\r\n                renderFocusOverlay: function() {\r\n                    if (this.getController(\"columnsResizer\").isResizing()) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.columns_resizing_reordering.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnsResizingReorderingModule\r\n} from \"../grid_core/ui.grid_core.columns_resizing_reordering\";\r\nexport var DraggingHeaderView = columnsResizingReorderingModule.views.draggingHeaderView;\r\nexport var DraggingHeaderViewController = columnsResizingReorderingModule.controllers.draggingHeader;\r\nexport var ColumnsSeparatorView = columnsResizingReorderingModule.views.columnsSeparatorView;\r\nexport var TablePositionViewController = columnsResizingReorderingModule.controllers.tablePosition;\r\nexport var ColumnsResizerViewController = columnsResizingReorderingModule.controllers.columnsResizer;\r\nexport var TrackerView = columnsResizingReorderingModule.views.trackerView;\r\ngridCore.registerModule(\"columnsResizingReordering\", columnsResizingReorderingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.keyboard_navigation.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterHeight,\r\n    getHeight,\r\n    getWidth,\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport core from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    isDefined,\r\n    isEmptyObject\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    focused\r\n} from \"../widget/selectors\";\r\nimport {\r\n    addNamespace,\r\n    createEvent,\r\n    isCommandKeyPressed\r\n} from \"../../events/utils/index\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport * as accessibility from \"../shared/accessibility\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    keyboard\r\n} from \"../../events/short\";\r\nimport devices from \"../../core/devices\";\r\nvar ROWS_VIEW_CLASS = \"rowsview\";\r\nvar EDIT_FORM_CLASS = \"edit-form\";\r\nvar GROUP_FOOTER_CLASS = \"group-footer\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar DATA_ROW_CLASS = \"dx-data-row\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar HEADER_ROW_CLASS = \"dx-header-row\";\r\nvar EDIT_FORM_ITEM_CLASS = \"edit-form-item\";\r\nvar MASTER_DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar FREESPACE_ROW_CLASS = \"dx-freespace-row\";\r\nvar VIRTUAL_ROW_CLASS = \"dx-virtual-row\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar EDITOR_CELL_CLASS = \"dx-editor-cell\";\r\nvar DROPDOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar COMMAND_EXPAND_CLASS = \"dx-command-expand\";\r\nvar COMMAND_SELECT_CLASS = \"dx-command-select\";\r\nvar COMMAND_EDIT_CLASS = \"dx-command-edit\";\r\nvar COMMAND_CELL_SELECTOR = \"[class^=dx-command]\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar DATEBOX_WIDGET_NAME = \"dxDateBox\";\r\nvar FOCUS_STATE_CLASS = \"dx-state-focused\";\r\nvar WIDGET_CLASS = \"dx-widget\";\r\nvar REVERT_BUTTON_CLASS = \"dx-revert-button\";\r\nvar FAST_EDITING_DELETE_KEY = \"delete\";\r\nvar INTERACTIVE_ELEMENTS_SELECTOR = \"input:not([type='hidden']), textarea, a, select, button, [tabindex], .dx-checkbox\";\r\nvar NON_FOCUSABLE_ELEMENTS_SELECTOR = \"\".concat(INTERACTIVE_ELEMENTS_SELECTOR, \", .dx-dropdowneditor-icon\");\r\nvar EDIT_MODE_ROW = \"row\";\r\nvar EDIT_MODE_FORM = \"form\";\r\nvar EDIT_MODE_BATCH = \"batch\";\r\nvar EDIT_MODE_CELL = \"cell\";\r\nvar FOCUS_TYPE_ROW = \"row\";\r\nvar FOCUS_TYPE_CELL = \"cell\";\r\nvar COLUMN_HEADERS_VIEW = \"columnHeadersView\";\r\n\r\nfunction isGroupRow($row) {\r\n    return $row && $row.hasClass(GROUP_ROW_CLASS)\r\n}\r\n\r\nfunction isDetailRow($row) {\r\n    return $row && $row.hasClass(MASTER_DETAIL_ROW_CLASS)\r\n}\r\n\r\nfunction isDataRow($row) {\r\n    return $row && !isGroupRow($row) && !isDetailRow($row)\r\n}\r\n\r\nfunction isNotFocusedRow($row) {\r\n    return !$row || $row.hasClass(FREESPACE_ROW_CLASS) || $row.hasClass(VIRTUAL_ROW_CLASS)\r\n}\r\n\r\nfunction isCellElement($element) {\r\n    return $element.length && \"TD\" === $element[0].tagName\r\n}\r\n\r\nfunction isEditorCell(that, $cell) {\r\n    return !that._isRowEditMode() && $cell && !$cell.hasClass(COMMAND_SELECT_CLASS) && $cell.hasClass(EDITOR_CELL_CLASS)\r\n}\r\n\r\nfunction isElementDefined($element) {\r\n    return isDefined($element) && $element.length > 0\r\n}\r\n\r\nfunction isMobile() {\r\n    return \"desktop\" !== devices.current().deviceType\r\n}\r\n\r\nfunction isCellInHeaderRow($cell) {\r\n    return !!$cell.parent(\".\".concat(HEADER_ROW_CLASS)).length\r\n}\r\n\r\nfunction isFixedColumnIndexOffsetRequired(that, column) {\r\n    var rtlEnabled = that.option(\"rtlEnabled\");\r\n    var result = false;\r\n    if (rtlEnabled) {\r\n        result = !(\"right\" === column.fixedPosition || isDefined(column.command) && !isDefined(column.fixedPosition))\r\n    } else {\r\n        result = !(!isDefined(column.fixedPosition) || \"left\" === column.fixedPosition)\r\n    }\r\n    return result\r\n}\r\n\r\nfunction shouldPreventScroll(that) {\r\n    var keyboardController = that.getController(\"keyboardNavigation\");\r\n    return keyboardController._isVirtualScrolling() ? that.option(\"focusedRowIndex\") === keyboardController.getRowIndex() : false\r\n}\r\nvar KeyboardNavigationController = core.ViewController.inherit({\r\n    init: function() {\r\n        this._dataController = this.getController(\"data\");\r\n        this._selectionController = this.getController(\"selection\");\r\n        this._editingController = this.getController(\"editing\");\r\n        this._headerPanel = this.getView(\"headerPanel\");\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._editorFactory = this.getController(\"editorFactory\");\r\n        if (this.isKeyboardEnabled()) {\r\n            accessibility.subscribeVisibilityChange();\r\n            this._updateFocusTimeout = null;\r\n            this._fastEditingStarted = false;\r\n            this._focusedCellPosition = {};\r\n            this._canceledCellPosition = null;\r\n            this._editorFactory.focused.add($element => {\r\n                this.setupFocusedView();\r\n                if (this._isNeedScroll) {\r\n                    if ($element.is(\":visible\") && this._focusedView && this._focusedView.getScrollable) {\r\n                        this._focusedView._scrollToElement($element);\r\n                        this._isNeedScroll = false\r\n                    }\r\n                }\r\n            });\r\n            this._initViewHandlers();\r\n            this._initDocumentHandlers();\r\n            this.createAction(\"onKeyDown\")\r\n        }\r\n    },\r\n    _initViewHandlers: function() {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var rowsViewFocusHandler = event => {\r\n            var $element = $(event.target);\r\n            var isRelatedTargetInRowsView = $(event.relatedTarget).closest(rowsView.element()).length;\r\n            var isCommandButton = $element.hasClass(\"dx-link\");\r\n            if (isCommandButton && !isRelatedTargetInRowsView && this._isEventInCurrentGrid(event)) {\r\n                var $focusedCell = this._getFocusedCell();\r\n                $focusedCell = !isElementDefined($focusedCell) ? rowsView.getCellElements(0).filter(\"[tabindex]\").eq(0) : $focusedCell;\r\n                if (!$element.closest($focusedCell).length) {\r\n                    event.preventDefault();\r\n                    eventsEngine.trigger($focusedCell, \"focus\")\r\n                }\r\n            }\r\n        };\r\n        rowsView.renderCompleted.add(e => {\r\n            var $rowsView = rowsView.element();\r\n            var isFullUpdate = !e || \"refresh\" === e.changeType;\r\n            var isFocusedViewCorrect = this._focusedView && this._focusedView.name === rowsView.name;\r\n            var needUpdateFocus = false;\r\n            var isAppend = e && (\"append\" === e.changeType || \"prepend\" === e.changeType);\r\n            var $focusedElement = $(\":focus\");\r\n            var isFocusedElementCorrect = !$focusedElement.length || $focusedElement.closest($rowsView).length;\r\n            eventsEngine.off($rowsView, \"focusin\", rowsViewFocusHandler);\r\n            eventsEngine.on($rowsView, \"focusin\", rowsViewFocusHandler);\r\n            this._initPointerEventHandler();\r\n            this._initKeyDownHandler();\r\n            this._setRowsViewAttributes();\r\n            if (isFocusedViewCorrect && isFocusedElementCorrect) {\r\n                needUpdateFocus = this._isNeedFocus ? !isAppend : this._isHiddenFocus && isFullUpdate;\r\n                needUpdateFocus && this._updateFocus(true)\r\n            }\r\n        })\r\n    },\r\n    _initDocumentHandlers: function() {\r\n        var document = domAdapter.getDocument();\r\n        this._documentClickHandler = this.createAction(e => {\r\n            var $target = $(e.event.target);\r\n            var isCurrentRowsViewClick = this._isEventInCurrentGrid(e.event) && $target.closest(\".\".concat(this.addWidgetPrefix(ROWS_VIEW_CLASS))).length;\r\n            var isEditorOverlay = $target.closest(\".\".concat(DROPDOWN_EDITOR_OVERLAY_CLASS)).length;\r\n            var columnsResizerController = this.getController(\"columnsResizer\");\r\n            var isColumnResizing = !!columnsResizerController && columnsResizerController.isResizing();\r\n            if (!isCurrentRowsViewClick && !isEditorOverlay && !isColumnResizing) {\r\n                var targetInsideFocusedView = this._focusedView ? $target.parents().filter(this._focusedView.element()).length > 0 : false;\r\n                !targetInsideFocusedView && this._resetFocusedCell(true);\r\n                this._resetFocusedView()\r\n            }\r\n        });\r\n        eventsEngine.on(document, addNamespace(pointerEvents.down, \"dxDataGridKeyboardNavigation\"), this._documentClickHandler)\r\n    },\r\n    _setRowsViewAttributes: function() {\r\n        var $rowsView = this._getRowsViewElement();\r\n        var isGridEmpty = !this._dataController.getVisibleRows().length;\r\n        if (isGridEmpty) {\r\n            this._applyTabIndexToElement($rowsView)\r\n        }\r\n    },\r\n    _initPointerEventHandler: function() {\r\n        var pointerEventName = !isMobile() ? pointerEvents.down : clickEventName;\r\n        var clickSelector = \".\".concat(ROW_CLASS, \" > td, .\").concat(ROW_CLASS);\r\n        var $rowsView = this._getRowsViewElement();\r\n        if (!isDefined(this._pointerEventAction)) {\r\n            this._pointerEventAction = this.createAction(this._pointerEventHandler)\r\n        }\r\n        eventsEngine.off($rowsView, addNamespace(pointerEventName, \"dxDataGridKeyboardNavigation\"), this._pointerEventAction);\r\n        eventsEngine.on($rowsView, addNamespace(pointerEventName, \"dxDataGridKeyboardNavigation\"), clickSelector, this._pointerEventAction)\r\n    },\r\n    _initKeyDownHandler: function() {\r\n        var $rowsView = this._getRowsViewElement();\r\n        keyboard.off(this._keyDownListener);\r\n        this._keyDownListener = keyboard.on($rowsView, null, e => this._keyDownHandler(e))\r\n    },\r\n    dispose: function() {\r\n        this.callBase();\r\n        this._resetFocusedView();\r\n        keyboard.off(this._keyDownListener);\r\n        eventsEngine.off(domAdapter.getDocument(), addNamespace(pointerEvents.down, \"dxDataGridKeyboardNavigation\"), this._documentClickHandler);\r\n        clearTimeout(this._updateFocusTimeout);\r\n        accessibility.unsubscribeVisibilityChange()\r\n    },\r\n    optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"keyboardNavigation\":\r\n            case \"useLegacyKeyboardNavigation\":\r\n                args.handled = true;\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    isRowFocusType: function() {\r\n        return this.focusType === FOCUS_TYPE_ROW\r\n    },\r\n    isCellFocusType: function() {\r\n        return this.focusType === FOCUS_TYPE_CELL\r\n    },\r\n    setRowFocusType: function() {\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            this.focusType = FOCUS_TYPE_ROW\r\n        }\r\n    },\r\n    setCellFocusType: function() {\r\n        this.focusType = FOCUS_TYPE_CELL\r\n    },\r\n    _keyDownHandler: function(e) {\r\n        var needStopPropagation = true;\r\n        var isHandled = this._processOnKeyDown(e);\r\n        var isEditing = this._editingController.isEditing();\r\n        var originalEvent = e.originalEvent;\r\n        if (originalEvent.isDefaultPrevented()) {\r\n            return\r\n        }\r\n        this._isNeedFocus = true;\r\n        this._isNeedScroll = true;\r\n        this._updateFocusedCellPositionByTarget(originalEvent.target);\r\n        if (!isHandled) {\r\n            switch (e.keyName) {\r\n                case \"leftArrow\":\r\n                case \"rightArrow\":\r\n                    this._leftRightKeysHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"upArrow\":\r\n                case \"downArrow\":\r\n                    if (e.ctrl) {\r\n                        accessibility.selectView(\"rowsView\", this, originalEvent)\r\n                    } else {\r\n                        this._upDownKeysHandler(e, isEditing)\r\n                    }\r\n                    isHandled = true;\r\n                    break;\r\n                case \"pageUp\":\r\n                case \"pageDown\":\r\n                    this._pageUpDownKeyHandler(e);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"space\":\r\n                    this._spaceKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"A\":\r\n                    if (isCommandKeyPressed(e.originalEvent)) {\r\n                        this._ctrlAKeyHandler(e, isEditing);\r\n                        isHandled = true\r\n                    } else {\r\n                        isHandled = this._beginFastEditing(e.originalEvent)\r\n                    }\r\n                    break;\r\n                case \"tab\":\r\n                    this._tabKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"enter\":\r\n                    this._enterKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"escape\":\r\n                    this._escapeKeyHandler(e, isEditing);\r\n                    isHandled = true;\r\n                    break;\r\n                case \"F\":\r\n                    if (isCommandKeyPressed(e.originalEvent)) {\r\n                        this._ctrlFKeyHandler(e);\r\n                        isHandled = true\r\n                    } else {\r\n                        isHandled = this._beginFastEditing(e.originalEvent)\r\n                    }\r\n                    break;\r\n                case \"F2\":\r\n                    this._f2KeyHandler();\r\n                    isHandled = true;\r\n                    break;\r\n                case \"del\":\r\n                case \"backspace\":\r\n                    if (this._isFastEditingAllowed() && !this._isFastEditingStarted()) {\r\n                        isHandled = this._beginFastEditing(originalEvent, true)\r\n                    }\r\n            }\r\n            if (!isHandled && !this._beginFastEditing(originalEvent)) {\r\n                this._isNeedFocus = false;\r\n                this._isNeedScroll = false;\r\n                needStopPropagation = false\r\n            }\r\n            if (needStopPropagation) {\r\n                originalEvent.stopPropagation()\r\n            }\r\n        }\r\n    },\r\n    _processOnKeyDown: function(eventArgs) {\r\n        var originalEvent = eventArgs.originalEvent;\r\n        var args = {\r\n            handled: false,\r\n            event: originalEvent\r\n        };\r\n        this.executeAction(\"onKeyDown\", args);\r\n        eventArgs.ctrl = originalEvent.ctrlKey;\r\n        eventArgs.alt = originalEvent.altKey;\r\n        eventArgs.shift = originalEvent.shiftKey;\r\n        return !!args.handled\r\n    },\r\n    _closeEditCell: function() {\r\n        setTimeout(() => {\r\n            this._editingController.closeEditCell()\r\n        })\r\n    },\r\n    _leftRightKeysHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $event = eventArgs.originalEvent;\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        var directionCode = this._getDirectionCodeByKey(eventArgs.keyName);\r\n        var isEditingNavigationMode = this._isFastEditingStarted();\r\n        var allowNavigate = (!isEditing || isEditingNavigationMode) && isDataRow($row);\r\n        if (allowNavigate) {\r\n            this.setCellFocusType();\r\n            isEditingNavigationMode && this._closeEditCell();\r\n            if (this._isVirtualColumnRender()) {\r\n                this._processVirtualHorizontalPosition(directionCode)\r\n            }\r\n            var $cell = this._getNextCell(directionCode);\r\n            if (isElementDefined($cell)) {\r\n                this._arrowKeysHandlerFocusCell($event, $cell, directionCode)\r\n            }\r\n            $event && $event.preventDefault()\r\n        }\r\n    },\r\n    _upDownKeysHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this._focusedCellPosition.rowIndex;\r\n        var visibleRowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(visibleRowIndex);\r\n        var $event = eventArgs.originalEvent;\r\n        var isUpArrow = \"upArrow\" === eventArgs.keyName;\r\n        var dataSource = this._dataController.dataSource();\r\n        var isEditingNavigationMode = this._isFastEditingStarted();\r\n        var allowNavigate = (!isEditing || isEditingNavigationMode) && $row && !isDetailRow($row);\r\n        if (allowNavigate) {\r\n            isEditingNavigationMode && this._closeEditCell();\r\n            if (!this._navigateNextCell($event, eventArgs.keyName)) {\r\n                if (this._isVirtualRowRender() && isUpArrow && dataSource && !dataSource.isLoading()) {\r\n                    var rowHeight = getOuterHeight($row);\r\n                    rowIndex = this._focusedCellPosition.rowIndex - 1;\r\n                    this._scrollBy(0, -rowHeight, rowIndex, $event)\r\n                }\r\n            }\r\n            $event && $event.preventDefault()\r\n        }\r\n    },\r\n    _pageUpDownKeyHandler: function(eventArgs) {\r\n        var pageIndex = this._dataController.pageIndex();\r\n        var pageCount = this._dataController.pageCount();\r\n        var pagingEnabled = this.option(\"paging.enabled\");\r\n        var isPageUp = \"pageUp\" === eventArgs.keyName;\r\n        var pageStep = isPageUp ? -1 : 1;\r\n        var scrollable = this.getView(\"rowsView\").getScrollable();\r\n        if (pagingEnabled && !this._isVirtualScrolling()) {\r\n            if ((isPageUp ? pageIndex > 0 : pageIndex < pageCount - 1) && !this._isVirtualScrolling()) {\r\n                this._dataController.pageIndex(pageIndex + pageStep);\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        } else if (scrollable && getHeight(scrollable.container()) < getHeight(scrollable.$content())) {\r\n            this._scrollBy(0, getHeight(scrollable.container()) * pageStep);\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _spaceKeyHandler: function(eventArgs, isEditing) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $target = $(eventArgs.originalEvent && eventArgs.originalEvent.target);\r\n        if (this.option(\"selection\") && \"none\" !== this.option(\"selection\").mode && !isEditing) {\r\n            var isFocusedRowElement = \"row\" === this._getElementType($target) && this.isRowFocusType() && isDataRow($target);\r\n            var isFocusedSelectionCell = $target.hasClass(COMMAND_SELECT_CLASS);\r\n            if (isFocusedSelectionCell && \"onClick\" === this.option(\"selection.showCheckBoxesMode\")) {\r\n                this._selectionController.startSelectionWithCheckboxes()\r\n            }\r\n            if (isFocusedRowElement || $target.parent().hasClass(DATA_ROW_CLASS) || $target.hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\r\n                this._selectionController.changeItemSelection(rowIndex, {\r\n                    shift: eventArgs.shift,\r\n                    control: eventArgs.ctrl\r\n                });\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        } else {\r\n            this._beginFastEditing(eventArgs.originalEvent)\r\n        }\r\n    },\r\n    _ctrlAKeyHandler: function(eventArgs, isEditing) {\r\n        if (!isEditing && !eventArgs.alt && \"multiple\" === this.option(\"selection.mode\") && this.option(\"selection.allowSelectAll\")) {\r\n            this._selectionController.selectAll();\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _tabKeyHandler: function(eventArgs, isEditing) {\r\n        var editingOptions = this.option(\"editing\");\r\n        var direction = eventArgs.shift ? \"previous\" : \"next\";\r\n        var isCellPositionDefined = isDefined(this._focusedCellPosition) && !isEmptyObject(this._focusedCellPosition);\r\n        var isOriginalHandlerRequired = !isCellPositionDefined || !eventArgs.shift && this._isLastValidCell(this._focusedCellPosition) || eventArgs.shift && this._isFirstValidCell(this._focusedCellPosition);\r\n        var eventTarget = eventArgs.originalEvent.target;\r\n        var focusedViewElement = this._focusedView && this._focusedView.element();\r\n        if (this._handleTabKeyOnMasterDetailCell(eventTarget, direction)) {\r\n            return\r\n        }\r\n        $(focusedViewElement).addClass(FOCUS_STATE_CLASS);\r\n        if (editingOptions && eventTarget && !isOriginalHandlerRequired) {\r\n            if ($(eventTarget).hasClass(this.addWidgetPrefix(ROWS_VIEW_CLASS))) {\r\n                this._resetFocusedCell()\r\n            }\r\n            if (this._isVirtualColumnRender()) {\r\n                this._processVirtualHorizontalPosition(direction)\r\n            }\r\n            if (isEditing) {\r\n                if (!this._editingCellTabHandler(eventArgs, direction)) {\r\n                    return\r\n                }\r\n            } else if (this._targetCellTabHandler(eventArgs, direction)) {\r\n                isOriginalHandlerRequired = true\r\n            }\r\n        }\r\n        if (isOriginalHandlerRequired) {\r\n            this._editorFactory.loseFocus();\r\n            if (this._editingController.isEditing() && !this._isRowEditMode()) {\r\n                this._resetFocusedCell(true);\r\n                this._resetFocusedView();\r\n                this._closeEditCell()\r\n            }\r\n        } else {\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _getMaxHorizontalOffset: function() {\r\n        var scrollable = this.component.getScrollable();\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var offset = scrollable ? scrollable.scrollWidth() - getWidth(rowsView.element()) : 0;\r\n        return offset\r\n    },\r\n    _isColumnRendered: function(columnIndex) {\r\n        var allVisibleColumns = this._columnsController.getVisibleColumns(null, true);\r\n        var renderedVisibleColumns = this._columnsController.getVisibleColumns();\r\n        var column = allVisibleColumns[columnIndex];\r\n        var result = false;\r\n        if (column) {\r\n            result = renderedVisibleColumns.indexOf(column) >= 0\r\n        }\r\n        return result\r\n    },\r\n    _isFixedColumn: function(columnIndex) {\r\n        var allVisibleColumns = this._columnsController.getVisibleColumns(null, true);\r\n        var column = allVisibleColumns[columnIndex];\r\n        return !!column && !!column.fixed\r\n    },\r\n    _isColumnVirtual: function(columnIndex) {\r\n        var localColumnIndex = columnIndex - this._columnsController.getColumnIndexOffset();\r\n        var visibleColumns = this._columnsController.getVisibleColumns();\r\n        var column = visibleColumns[localColumnIndex];\r\n        return !!column && \"virtual\" === column.command\r\n    },\r\n    _processVirtualHorizontalPosition: function(direction) {\r\n        var scrollable = this.component.getScrollable();\r\n        var columnIndex = this.getColumnIndex();\r\n        var nextColumnIndex;\r\n        var horizontalScrollPosition = 0;\r\n        var needToScroll = false;\r\n        switch (direction) {\r\n            case \"next\":\r\n            case \"nextInRow\":\r\n                var columnsCount = this._getVisibleColumnCount();\r\n                nextColumnIndex = columnIndex + 1;\r\n                horizontalScrollPosition = this.option(\"rtlEnabled\") ? this._getMaxHorizontalOffset() : 0;\r\n                if (\"next\" === direction) {\r\n                    needToScroll = columnsCount === nextColumnIndex || this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                } else {\r\n                    needToScroll = columnsCount > nextColumnIndex && this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                }\r\n                break;\r\n            case \"previous\":\r\n            case \"previousInRow\":\r\n                nextColumnIndex = columnIndex - 1;\r\n                horizontalScrollPosition = this.option(\"rtlEnabled\") ? 0 : this._getMaxHorizontalOffset();\r\n                if (\"previous\" === direction) {\r\n                    var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n                    var leftEdgePosition = nextColumnIndex < 0 && 0 === columnIndexOffset;\r\n                    needToScroll = leftEdgePosition || this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                } else {\r\n                    needToScroll = nextColumnIndex >= 0 && this._isFixedColumn(columnIndex) && !this._isColumnRendered(nextColumnIndex)\r\n                }\r\n        }\r\n        if (needToScroll) {\r\n            scrollable.scrollTo({\r\n                left: horizontalScrollPosition\r\n            })\r\n        } else if (isDefined(nextColumnIndex) && isDefined(direction) && this._isColumnVirtual(nextColumnIndex)) {\r\n            horizontalScrollPosition = this._getHorizontalScrollPositionOffset(direction);\r\n            0 !== horizontalScrollPosition && scrollable.scrollBy({\r\n                left: horizontalScrollPosition,\r\n                top: 0\r\n            })\r\n        }\r\n    },\r\n    _getHorizontalScrollPositionOffset: function(direction) {\r\n        var positionOffset = 0;\r\n        var $currentCell = this._getCell(this._focusedCellPosition);\r\n        var currentCellWidth = $currentCell && getOuterWidth($currentCell);\r\n        if (currentCellWidth > 0) {\r\n            var rtlMultiplier = this.option(\"rtlEnabled\") ? -1 : 1;\r\n            positionOffset = \"nextInRow\" === direction || \"next\" === direction ? currentCellWidth * rtlMultiplier : currentCellWidth * rtlMultiplier * -1\r\n        }\r\n        return positionOffset\r\n    },\r\n    _editingCellTabHandler: function(eventArgs, direction) {\r\n        var eventTarget = eventArgs.originalEvent.target;\r\n        var $cell = this._getCellElementFromTarget(eventTarget);\r\n        var isEditingAllowed;\r\n        var $event = eventArgs.originalEvent;\r\n        var elementType = this._getElementType(eventTarget);\r\n        if ($cell.is(COMMAND_CELL_SELECTOR)) {\r\n            return !this._targetCellTabHandler(eventArgs, direction)\r\n        }\r\n        this._updateFocusedCellPosition($cell);\r\n        var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\r\n        $cell = nextCellInfo.$cell;\r\n        if (!$cell || this._handleTabKeyOnMasterDetailCell($cell, direction)) {\r\n            return false\r\n        }\r\n        var columnsController = this._columnsController;\r\n        var cellIndex = this.getView(\"rowsView\").getCellIndex($cell);\r\n        var columnIndex = cellIndex + columnsController.getColumnIndexOffset();\r\n        var column = columnsController.getVisibleColumns(null, true)[columnIndex];\r\n        var $row = $cell.parent();\r\n        var rowIndex = this._getRowIndex($row);\r\n        var row = this._dataController.items()[rowIndex];\r\n        var editingController = this._editingController;\r\n        if (column && column.allowEditing) {\r\n            var _isDataRow = !row || \"data\" === row.rowType;\r\n            isEditingAllowed = editingController.allowUpdating({\r\n                row: row\r\n            }) ? _isDataRow : row && row.isNewRow\r\n        }\r\n        if (!isEditingAllowed) {\r\n            this._closeEditCell()\r\n        }\r\n        if (this._focusCell($cell, !nextCellInfo.isHighlighted)) {\r\n            if (!this._isRowEditMode() && isEditingAllowed) {\r\n                this._editFocusedCell()\r\n            } else {\r\n                this._focusInteractiveElement($cell, eventArgs.shift)\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _targetCellTabHandler: function(eventArgs, direction) {\r\n        var $event = eventArgs.originalEvent;\r\n        var eventTarget = $event.target;\r\n        var $cell = this._getCellElementFromTarget(eventTarget);\r\n        var $lastInteractiveElement = this._getInteractiveElement($cell, !eventArgs.shift);\r\n        var isOriginalHandlerRequired = false;\r\n        var elementType;\r\n        if (!isEditorCell(this, $cell) && $lastInteractiveElement.length && eventTarget !== $lastInteractiveElement.get(0)) {\r\n            isOriginalHandlerRequired = true\r\n        } else {\r\n            if (void 0 === this._focusedCellPosition.rowIndex && $(eventTarget).hasClass(ROW_CLASS)) {\r\n                this._updateFocusedCellPosition($cell)\r\n            }\r\n            elementType = this._getElementType(eventTarget);\r\n            if (this.isRowFocusType()) {\r\n                this.setCellFocusType();\r\n                if (\"row\" === elementType && isDataRow($(eventTarget))) {\r\n                    eventTarget = this.getFirstValidCellInRow($(eventTarget));\r\n                    elementType = this._getElementType(eventTarget)\r\n                }\r\n            }\r\n            var nextCellInfo = this._getNextCellByTabKey($event, direction, elementType);\r\n            $cell = nextCellInfo.$cell;\r\n            if (!$cell) {\r\n                return false\r\n            }\r\n            $cell = this._checkNewLineTransition($event, $cell);\r\n            if (!$cell) {\r\n                return false\r\n            }\r\n            this._focusCell($cell, !nextCellInfo.isHighlighted);\r\n            if (!isEditorCell(this, $cell)) {\r\n                this._focusInteractiveElement($cell, eventArgs.shift)\r\n            }\r\n        }\r\n        return isOriginalHandlerRequired\r\n    },\r\n    _getNextCellByTabKey: function($event, direction, elementType) {\r\n        var $cell = this._getNextCell(direction, elementType);\r\n        var args = $cell && this._fireFocusedCellChanging($event, $cell, true);\r\n        if (!args || args.cancel) {\r\n            return {}\r\n        }\r\n        if (args.$newCellElement) {\r\n            $cell = args.$newCellElement\r\n        }\r\n        return {\r\n            $cell: $cell,\r\n            isHighlighted: args.isHighlighted\r\n        }\r\n    },\r\n    _checkNewLineTransition: function($event, $cell) {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = $cell.parent();\r\n        if (rowIndex !== this._getRowIndex($row)) {\r\n            var cellPosition = this._getCellPosition($cell);\r\n            var args = this._fireFocusedRowChanging($event, $row);\r\n            if (args.cancel) {\r\n                return\r\n            }\r\n            if (args.rowIndexChanged) {\r\n                this.setFocusedColumnIndex(cellPosition.columnIndex);\r\n                $cell = this._getFocusedCell()\r\n            }\r\n        }\r\n        return $cell\r\n    },\r\n    _enterKeyHandler: function(eventArgs, isEditing) {\r\n        var $cell = this._getFocusedCell();\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        if (this.option(\"grouping.allowCollapsing\") && isGroupRow($row) || this.option(\"masterDetail.enabled\") && $cell && $cell.hasClass(COMMAND_EXPAND_CLASS)) {\r\n            var key = this._dataController.getKeyByRowIndex(rowIndex);\r\n            var item = this._dataController.items()[rowIndex];\r\n            if (void 0 !== key && item && item.data && !item.data.isContinuation) {\r\n                this._dataController.changeRowExpand(key)\r\n            }\r\n        } else {\r\n            this._processEnterKeyForDataCell(eventArgs, isEditing)\r\n        }\r\n    },\r\n    _processEnterKeyForDataCell: function(eventArgs, isEditing) {\r\n        var direction = this._getEnterKeyDirection(eventArgs);\r\n        var allowEditingOnEnterKey = this._allowEditingOnEnterKey();\r\n        if (isEditing || !allowEditingOnEnterKey && direction) {\r\n            this._handleEnterKeyEditingCell(eventArgs.originalEvent);\r\n            if (\"next\" === direction || \"previous\" === direction) {\r\n                this._targetCellTabHandler(eventArgs, direction)\r\n            } else if (\"upArrow\" === direction || \"downArrow\" === direction) {\r\n                this._navigateNextCell(eventArgs.originalEvent, direction)\r\n            }\r\n        } else if (allowEditingOnEnterKey) {\r\n            this._startEditing(eventArgs)\r\n        }\r\n    },\r\n    _getEnterKeyDirection: function(eventArgs) {\r\n        var enterKeyDirection = this.option(\"keyboardNavigation.enterKeyDirection\");\r\n        var isShift = eventArgs.shift;\r\n        if (\"column\" === enterKeyDirection) {\r\n            return isShift ? \"upArrow\" : \"downArrow\"\r\n        }\r\n        if (\"row\" === enterKeyDirection) {\r\n            return isShift ? \"previous\" : \"next\"\r\n        }\r\n    },\r\n    _handleEnterKeyEditingCell: function(event) {\r\n        var target = event.target;\r\n        var $cell = this._getCellElementFromTarget(target);\r\n        var isRowEditMode = this._isRowEditMode();\r\n        this._updateFocusedCellPosition($cell);\r\n        if (isRowEditMode) {\r\n            this._focusEditFormCell($cell);\r\n            setTimeout(this._editingController.saveEditData.bind(this._editingController))\r\n        } else {\r\n            eventsEngine.trigger($(target), \"change\");\r\n            this._closeEditCell();\r\n            event.preventDefault()\r\n        }\r\n    },\r\n    _escapeKeyHandler: function(eventArgs, isEditing) {\r\n        var $cell = this._getCellElementFromTarget(eventArgs.originalEvent.target);\r\n        if (isEditing) {\r\n            this._updateFocusedCellPosition($cell);\r\n            if (!this._isRowEditMode()) {\r\n                if (\"cell\" === this._editingController.getEditMode()) {\r\n                    this._editingController.cancelEditData()\r\n                } else {\r\n                    this._closeEditCell()\r\n                }\r\n            } else {\r\n                this._focusEditFormCell($cell);\r\n                this._editingController.cancelEditData();\r\n                if (0 === this._dataController.items().length) {\r\n                    this._resetFocusedCell();\r\n                    this._editorFactory.loseFocus()\r\n                }\r\n            }\r\n            eventArgs.originalEvent.preventDefault()\r\n        }\r\n    },\r\n    _ctrlFKeyHandler: function(eventArgs) {\r\n        if (this.option(\"searchPanel.visible\")) {\r\n            var searchTextEditor = this._headerPanel.getSearchTextEditor();\r\n            if (searchTextEditor) {\r\n                searchTextEditor.focus();\r\n                eventArgs.originalEvent.preventDefault()\r\n            }\r\n        }\r\n    },\r\n    _f2KeyHandler: function() {\r\n        var isEditing = this._editingController.isEditing();\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var $row = this._focusedView && this._focusedView.getRow(rowIndex);\r\n        if (!isEditing && isDataRow($row)) {\r\n            this._startEditing()\r\n        }\r\n    },\r\n    _navigateNextCell: function($event, keyCode) {\r\n        var $cell = this._getNextCell(keyCode);\r\n        var directionCode = this._getDirectionCodeByKey(keyCode);\r\n        var isCellValid = $cell && this._isCellValid($cell);\r\n        var result = isCellValid ? this._arrowKeysHandlerFocusCell($event, $cell, directionCode) : false;\r\n        return result\r\n    },\r\n    _arrowKeysHandlerFocusCell: function($event, $nextCell, direction) {\r\n        var isVerticalDirection = \"prevRow\" === direction || \"nextRow\" === direction;\r\n        var args = this._fireFocusChangingEvents($event, $nextCell, isVerticalDirection, true);\r\n        $nextCell = args.$newCellElement;\r\n        if (!args.cancel && this._isCellValid($nextCell)) {\r\n            this._focus($nextCell, !args.isHighlighted);\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    _beginFastEditing: function(originalEvent, isDeleting) {\r\n        if (!this._isFastEditingAllowed() || originalEvent.altKey || originalEvent.ctrlKey || this._editingController.isEditing()) {\r\n            return false\r\n        }\r\n        if (isDeleting) {\r\n            this._startEditing(originalEvent, FAST_EDITING_DELETE_KEY)\r\n        } else {\r\n            var key = originalEvent.key;\r\n            var keyCode = originalEvent.keyCode || originalEvent.which;\r\n            var fastEditingKey = key || keyCode && String.fromCharCode(keyCode);\r\n            if (fastEditingKey && (1 === fastEditingKey.length || fastEditingKey === FAST_EDITING_DELETE_KEY)) {\r\n                this._startEditing(originalEvent, fastEditingKey)\r\n            }\r\n        }\r\n        return true\r\n    },\r\n    _pointerEventHandler: function(e) {\r\n        var event = e.event || e;\r\n        var $target = $(event.currentTarget);\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var focusedViewElement = rowsView && rowsView.element();\r\n        var $parent = $target.parent();\r\n        var isInteractiveElement = $(event.target).is(INTERACTIVE_ELEMENTS_SELECTOR);\r\n        var isRevertButton = !!$(event.target).closest(\".\".concat(REVERT_BUTTON_CLASS)).length;\r\n        var isExpandCommandCell = $target.hasClass(COMMAND_EXPAND_CLASS);\r\n        if (!this._isEventInCurrentGrid(event)) {\r\n            return\r\n        }\r\n        if (!isRevertButton && (this._isCellValid($target, !isInteractiveElement) || isExpandCommandCell)) {\r\n            $target = this._isInsideEditForm($target) ? $(event.target) : $target;\r\n            this._focusView();\r\n            $(focusedViewElement).removeClass(FOCUS_STATE_CLASS);\r\n            if ($parent.hasClass(FREESPACE_ROW_CLASS)) {\r\n                this._updateFocusedCellPosition($target);\r\n                this._applyTabIndexToElement(this._focusedView.element());\r\n                this._focusedView.focus()\r\n            } else if (!this._isMasterDetailCell($target)) {\r\n                this._clickTargetCellHandler(event, $target)\r\n            } else {\r\n                this._updateFocusedCellPosition($target)\r\n            }\r\n        } else if ($target.is(\"td\")) {\r\n            this._resetFocusedCell()\r\n        }\r\n    },\r\n    _clickTargetCellHandler: function(event, $cell) {\r\n        var columnIndex = this.getView(\"rowsView\").getCellIndex($cell);\r\n        var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n        var isCellEditMode = this._isCellEditMode();\r\n        this.setCellFocusType();\r\n        var args = this._fireFocusChangingEvents(event, $cell, true);\r\n        $cell = args.$newCellElement;\r\n        if (!args.cancel) {\r\n            if (args.resetFocusedRow) {\r\n                this.getController(\"focus\")._resetFocusedRow();\r\n                return\r\n            }\r\n            if (args.rowIndexChanged) {\r\n                $cell = this._getFocusedCell()\r\n            }\r\n            if (!args.isHighlighted && !isCellEditMode) {\r\n                this.setRowFocusType()\r\n            }\r\n            this._updateFocusedCellPosition($cell);\r\n            if (this._allowRowUpdating() && isCellEditMode && column && column.allowEditing) {\r\n                this._isNeedFocus = false;\r\n                this._isHiddenFocus = false\r\n            } else {\r\n                var $target = event && $(event.target).closest(NON_FOCUSABLE_ELEMENTS_SELECTOR + \", td\");\r\n                var skipFocusEvent = $target && $target.not($cell).is(NON_FOCUSABLE_ELEMENTS_SELECTOR);\r\n                var isEditor = !!column && !column.command && $cell.hasClass(EDITOR_CELL_CLASS);\r\n                var isDisabled = !isEditor && (!args.isHighlighted || skipFocusEvent);\r\n                this._focus($cell, isDisabled, skipFocusEvent)\r\n            }\r\n        } else {\r\n            this.setRowFocusType();\r\n            this.setFocusedRowIndex(args.prevRowIndex);\r\n            $cell = this._getFocusedCell();\r\n            if (this._editingController.isEditing() && isCellEditMode) {\r\n                this._closeEditCell()\r\n            }\r\n        }\r\n    },\r\n    _allowRowUpdating: function() {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var row = this._dataController.items()[rowIndex];\r\n        return this._editingController.allowUpdating({\r\n            row: row\r\n        }, \"click\")\r\n    },\r\n    focus: function(element) {\r\n        var activeElementSelector;\r\n        var focusedRowEnabled = this.option(\"focusedRowEnabled\");\r\n        var isHighlighted = isCellElement($(element));\r\n        if (!element) {\r\n            activeElementSelector = \".dx-datagrid-rowsview .dx-row[tabindex]\";\r\n            if (!focusedRowEnabled) {\r\n                activeElementSelector += \", .dx-datagrid-rowsview .dx-row > td[tabindex]\"\r\n            }\r\n            element = this.component.$element().find(activeElementSelector).first()\r\n        }\r\n        element && this._focusElement($(element), isHighlighted)\r\n    },\r\n    getFocusedView: function() {\r\n        return this._focusedView\r\n    },\r\n    setupFocusedView: function() {\r\n        if (this.isKeyboardEnabled() && !isDefined(this._focusedView)) {\r\n            this._focusView()\r\n        }\r\n    },\r\n    _focusElement: function($element, isHighlighted) {\r\n        var rowsViewElement = $(this._getRowsViewElement());\r\n        var $focusedView = $element.closest(rowsViewElement);\r\n        var isRowFocusType = this.isRowFocusType();\r\n        var args = {};\r\n        if (!$focusedView.length || isCellElement($element) && !this._isCellValid($element)) {\r\n            return\r\n        }\r\n        this._focusView();\r\n        this._isNeedFocus = true;\r\n        this._isNeedScroll = true;\r\n        if (isCellElement($element) || isGroupRow($element)) {\r\n            this.setCellFocusType();\r\n            args = this._fireFocusChangingEvents(null, $element, false, isHighlighted);\r\n            $element = args.$newCellElement;\r\n            if (isRowFocusType && !args.isHighlighted) {\r\n                this.setRowFocusType()\r\n            }\r\n        }\r\n        if (!args.cancel) {\r\n            this._focus($element, !args.isHighlighted);\r\n            this._focusInteractiveElement($element)\r\n        }\r\n    },\r\n    _getFocusedViewByElement: function($element) {\r\n        var view = this.getFocusedView();\r\n        var $view = view && $(view.element());\r\n        return $element && 0 !== $element.closest($view).length\r\n    },\r\n    _focusView: function() {\r\n        this._focusedView = this.getView(\"rowsView\")\r\n    },\r\n    _resetFocusedView: function() {\r\n        this.setRowFocusType();\r\n        this._focusedView = null\r\n    },\r\n    _focusInteractiveElement: function($cell, isLast) {\r\n        if (!$cell) {\r\n            return\r\n        }\r\n        var $focusedElement = this._getInteractiveElement($cell, isLast);\r\n        gridCoreUtils.focusAndSelectElement(this, $focusedElement)\r\n    },\r\n    _focus: function($cell, disableFocus, skipFocusEvent) {\r\n        var $row = $cell && !$cell.hasClass(ROW_CLASS) ? $cell.closest(\".\".concat(ROW_CLASS)) : $cell;\r\n        if ($row && isNotFocusedRow($row)) {\r\n            return\r\n        }\r\n        var focusedView = this._focusedView;\r\n        var $focusViewElement = focusedView && focusedView.element();\r\n        var $focusElement;\r\n        this._isHiddenFocus = disableFocus;\r\n        var isRowFocus = isGroupRow($row) || this.isRowFocusType();\r\n        if (isRowFocus) {\r\n            $focusElement = $row;\r\n            if (focusedView) {\r\n                this.setFocusedRowIndex(this._getRowIndex($row))\r\n            }\r\n        } else if (isCellElement($cell)) {\r\n            $focusElement = $cell;\r\n            this._updateFocusedCellPosition($cell)\r\n        }\r\n        if ($focusElement) {\r\n            if ($focusViewElement) {\r\n                $focusViewElement.find(\".dx-row[tabindex], .dx-row > td[tabindex]\").not($focusElement).removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabindex\")\r\n            }\r\n            eventsEngine.one($focusElement, \"blur\", e => {\r\n                if (e.relatedTarget) {\r\n                    $focusElement.removeClass(CELL_FOCUS_DISABLED_CLASS)\r\n                }\r\n            });\r\n            if (!skipFocusEvent) {\r\n                this._applyTabIndexToElement($focusElement);\r\n                eventsEngine.trigger($focusElement, \"focus\")\r\n            }\r\n            if (disableFocus) {\r\n                $focusElement.addClass(CELL_FOCUS_DISABLED_CLASS);\r\n                if (isRowFocus) {\r\n                    $cell.addClass(CELL_FOCUS_DISABLED_CLASS)\r\n                }\r\n            } else {\r\n                this._editorFactory.focus($focusElement)\r\n            }\r\n        }\r\n    },\r\n    _updateFocus: function(isRenderView) {\r\n        this._updateFocusTimeout = setTimeout(() => {\r\n            var editingController = this._editingController;\r\n            var isCellEditMode = editingController.getEditMode() === EDIT_MODE_CELL;\r\n            var isBatchEditMode = editingController.getEditMode() === EDIT_MODE_BATCH;\r\n            if (isCellEditMode && editingController.hasChanges() || isBatchEditMode && editingController.isNewRowInEditMode()) {\r\n                editingController._focusEditingCell();\r\n                return\r\n            }\r\n            var $cell = this._getFocusedCell();\r\n            var isEditing = editingController.isEditing();\r\n            if ($cell && !(this._isMasterDetailCell($cell) && !this._isRowEditMode())) {\r\n                if (this._hasSkipRow($cell.parent())) {\r\n                    var direction = this._focusedCellPosition && this._focusedCellPosition.rowIndex > 0 ? \"upArrow\" : \"downArrow\";\r\n                    $cell = this._getNextCell(direction)\r\n                }\r\n                if (isElementDefined($cell)) {\r\n                    if (isRenderView && !isEditing && this._checkCellOverlapped($cell)) {\r\n                        return\r\n                    }\r\n                    if ($cell.is(\"td\") || $cell.hasClass(this.addWidgetPrefix(EDIT_FORM_ITEM_CLASS))) {\r\n                        var isCommandCell = $cell.is(COMMAND_CELL_SELECTOR);\r\n                        var $focusedElementInsideCell = $cell.find(\":focus\");\r\n                        var isFocusedElementDefined = isElementDefined($focusedElementInsideCell);\r\n                        if ((isRenderView || !isCommandCell) && this._editorFactory.focus()) {\r\n                            if (isCommandCell && isFocusedElementDefined) {\r\n                                gridCoreUtils.focusAndSelectElement(this, $focusedElementInsideCell);\r\n                                return\r\n                            }!isFocusedElementDefined && this._focus($cell)\r\n                        } else if (!isFocusedElementDefined && (this._isNeedFocus || this._isHiddenFocus)) {\r\n                            this._focus($cell, this._isHiddenFocus)\r\n                        }\r\n                        if (isEditing) {\r\n                            this._focusInteractiveElement.bind(this)($cell)\r\n                        }\r\n                    } else {\r\n                        eventsEngine.trigger($cell, \"focus\")\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    },\r\n    _checkCellOverlapped: function($cell) {\r\n        var cellOffset = $cell.offset();\r\n        var hasScrollable = this.component.getScrollable && this.component.getScrollable();\r\n        var isOverlapped = false;\r\n        if (hasScrollable) {\r\n            if (cellOffset.left < 0) {\r\n                isOverlapped = getWidth($cell) + cellOffset.left <= 0\r\n            } else if (cellOffset.top < 0) {\r\n                isOverlapped = getHeight($cell) + cellOffset.top <= 0\r\n            }\r\n        }\r\n        return isOverlapped\r\n    },\r\n    _getFocusedCell: function() {\r\n        return $(this._getCell(this._focusedCellPosition))\r\n    },\r\n    _updateFocusedCellPositionByTarget: function(target) {\r\n        var _this$_focusedCellPos;\r\n        var elementType = this._getElementType(target);\r\n        if (\"row\" === elementType && isDefined(null === (_this$_focusedCellPos = this._focusedCellPosition) || void 0 === _this$_focusedCellPos ? void 0 : _this$_focusedCellPos.columnIndex)) {\r\n            var $row = $(target);\r\n            this._focusedView && isGroupRow($row) && this.setFocusedRowIndex(this._getRowIndex($row))\r\n        } else {\r\n            this._updateFocusedCellPosition(this._getCellElementFromTarget(target))\r\n        }\r\n    },\r\n    _updateFocusedCellPosition: function($cell, direction) {\r\n        var position = this._getCellPosition($cell, direction);\r\n        if (position) {\r\n            if (!$cell.length || position.rowIndex >= 0 && position.columnIndex >= 0) {\r\n                this.setFocusedCellPosition(position.rowIndex, position.columnIndex)\r\n            }\r\n        }\r\n        return position\r\n    },\r\n    _getFocusedColumnIndexOffset: function(columnIndex) {\r\n        var offset = 0;\r\n        var column = this._columnsController.getVisibleColumns()[columnIndex];\r\n        if (column && column.fixed) {\r\n            offset = this._getFixedColumnIndexOffset(column)\r\n        } else if (columnIndex >= 0) {\r\n            offset = this._columnsController.getColumnIndexOffset()\r\n        }\r\n        return offset\r\n    },\r\n    _getFixedColumnIndexOffset: function(column) {\r\n        var offset = isFixedColumnIndexOffsetRequired(this, column) ? this._getVisibleColumnCount() - this._columnsController.getVisibleColumns().length : 0;\r\n        return offset\r\n    },\r\n    _getCellPosition: function($cell, direction) {\r\n        var columnIndex;\r\n        var $row = isElementDefined($cell) && $cell.closest(\"tr\");\r\n        var rowsView = this.getView(\"rowsView\");\r\n        if (isElementDefined($row)) {\r\n            var rowIndex = this._getRowIndex($row);\r\n            columnIndex = rowsView.getCellIndex($cell, rowIndex);\r\n            columnIndex += this._getFocusedColumnIndexOffset(columnIndex);\r\n            if (direction) {\r\n                columnIndex = \"previous\" === direction ? columnIndex - 1 : columnIndex + 1;\r\n                columnIndex = this._applyColumnIndexBoundaries(columnIndex)\r\n            }\r\n            return {\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            }\r\n        }\r\n    },\r\n    _focusCell: function($cell, isDisabled) {\r\n        if (this._isCellValid($cell)) {\r\n            this._focus($cell, isDisabled);\r\n            return true\r\n        }\r\n    },\r\n    _focusEditFormCell: function($cell) {\r\n        if ($cell.hasClass(MASTER_DETAIL_CELL_CLASS)) {\r\n            this._editorFactory.focus($cell, true)\r\n        }\r\n    },\r\n    _resetFocusedCell: function(preventScroll) {\r\n        var _this$_focusedView;\r\n        var $cell = this._getFocusedCell();\r\n        isElementDefined($cell) && $cell.removeAttr(\"tabindex\");\r\n        this._isNeedFocus = false;\r\n        this._isNeedScroll = false;\r\n        this._focusedCellPosition = {};\r\n        clearTimeout(this._updateFocusTimeout);\r\n        null === (_this$_focusedView = this._focusedView) || void 0 === _this$_focusedView ? void 0 : _this$_focusedView.renderFocusState({\r\n            preventScroll: preventScroll\r\n        })\r\n    },\r\n    restoreFocusableElement: function(rowIndex, $event) {\r\n        var args;\r\n        var $rowElement;\r\n        var isUpArrow = isDefined(rowIndex);\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var $rowsViewElement = rowsView.element();\r\n        var columnIndex = this._focusedCellPosition.columnIndex;\r\n        var rowIndexOffset = this._dataController.getRowIndexOffset();\r\n        rowIndex = isUpArrow ? rowIndex : rowsView.getTopVisibleItemIndex() + rowIndexOffset;\r\n        if (!isUpArrow) {\r\n            this._editorFactory.loseFocus();\r\n            this._applyTabIndexToElement($rowsViewElement);\r\n            eventsEngine.trigger($rowsViewElement, \"focus\")\r\n        } else {\r\n            $rowElement = rowsView.getRow(rowIndex - rowIndexOffset);\r\n            args = this._fireFocusedRowChanging($event, $rowElement);\r\n            if (!args.cancel && args.rowIndexChanged) {\r\n                rowIndex = args.newRowIndex\r\n            }\r\n        }\r\n        if (!isUpArrow || !args.cancel) {\r\n            this.setFocusedCellPosition(rowIndex, columnIndex)\r\n        }\r\n        isUpArrow && this._updateFocus()\r\n    },\r\n    _getNewPositionByCode: function(cellPosition, elementType, code) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var rowIndex = cellPosition.rowIndex;\r\n        var visibleColumnsCount;\r\n        if (void 0 === cellPosition.rowIndex && \"next\" === code) {\r\n            return {\r\n                columnIndex: 0,\r\n                rowIndex: 0\r\n            }\r\n        }\r\n        switch (code) {\r\n            case \"nextInRow\":\r\n            case \"next\":\r\n                visibleColumnsCount = this._getVisibleColumnCount();\r\n                if (columnIndex < visibleColumnsCount - 1 && \"row\" !== elementType && this._hasValidCellAfterPosition({\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })) {\r\n                    columnIndex++\r\n                } else if (!this._isLastRow(rowIndex) && \"next\" === code) {\r\n                    columnIndex = 0;\r\n                    rowIndex++\r\n                }\r\n                break;\r\n            case \"previousInRow\":\r\n            case \"previous\":\r\n                if (columnIndex > 0 && \"row\" !== elementType && this._hasValidCellBeforePosition({\r\n                        columnIndex: columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })) {\r\n                    columnIndex--\r\n                } else if (rowIndex > 0 && \"previous\" === code) {\r\n                    rowIndex--;\r\n                    visibleColumnsCount = this._getVisibleColumnCount();\r\n                    columnIndex = visibleColumnsCount - 1\r\n                }\r\n                break;\r\n            case \"upArrow\":\r\n                rowIndex = rowIndex > 0 ? rowIndex - 1 : rowIndex;\r\n                break;\r\n            case \"downArrow\":\r\n                rowIndex = !this._isLastRow(rowIndex) ? rowIndex + 1 : rowIndex\r\n        }\r\n        return {\r\n            columnIndex: columnIndex,\r\n            rowIndex: rowIndex\r\n        }\r\n    },\r\n    setFocusedCellPosition: function(rowIndex, columnIndex) {\r\n        this.setFocusedRowIndex(rowIndex);\r\n        this.setFocusedColumnIndex(columnIndex)\r\n    },\r\n    setFocusedRowIndex: function(rowIndex) {\r\n        if (!this._focusedCellPosition) {\r\n            this._focusedCellPosition = {}\r\n        }\r\n        this._focusedCellPosition.rowIndex = rowIndex\r\n    },\r\n    setFocusedColumnIndex: function(columnIndex) {\r\n        if (!this._focusedCellPosition) {\r\n            this._focusedCellPosition = {}\r\n        }\r\n        this._focusedCellPosition.columnIndex = columnIndex\r\n    },\r\n    getRowIndex: function() {\r\n        return this._focusedCellPosition ? this._focusedCellPosition.rowIndex : -1\r\n    },\r\n    getColumnIndex: function() {\r\n        return this._focusedCellPosition ? this._focusedCellPosition.columnIndex : -1\r\n    },\r\n    getVisibleRowIndex: function() {\r\n        var rowIndex = this._focusedCellPosition && this._focusedCellPosition.rowIndex;\r\n        if (!isDefined(rowIndex) || rowIndex < 0) {\r\n            return -1\r\n        }\r\n        return rowIndex - this._dataController.getRowIndexOffset()\r\n    },\r\n    getVisibleColumnIndex: function() {\r\n        var columnIndex = this._focusedCellPosition && this._focusedCellPosition.columnIndex;\r\n        if (!isDefined(columnIndex)) {\r\n            return -1\r\n        }\r\n        return columnIndex - this._columnsController.getColumnIndexOffset()\r\n    },\r\n    _applyColumnIndexBoundaries: function(columnIndex) {\r\n        var visibleColumnsCount = this._getVisibleColumnCount();\r\n        if (columnIndex < 0) {\r\n            columnIndex = 0\r\n        } else if (columnIndex >= visibleColumnsCount) {\r\n            columnIndex = visibleColumnsCount - 1\r\n        }\r\n        return columnIndex\r\n    },\r\n    _isCellByPositionValid: function(cellPosition) {\r\n        var $cell = $(this._getCell(cellPosition));\r\n        return this._isCellValid($cell)\r\n    },\r\n    _isLastRow: function(rowIndex) {\r\n        var dataController = this._dataController;\r\n        if (this._isVirtualRowRender()) {\r\n            return rowIndex >= dataController.getMaxRowIndex()\r\n        }\r\n        return rowIndex === dataController.items().length - 1\r\n    },\r\n    _isFirstValidCell: function(cellPosition) {\r\n        var isFirstValidCell = false;\r\n        if (0 === cellPosition.rowIndex && cellPosition.columnIndex >= 0) {\r\n            isFirstValidCell = isFirstValidCell || !this._hasValidCellBeforePosition(cellPosition)\r\n        }\r\n        return isFirstValidCell\r\n    },\r\n    _hasValidCellBeforePosition: function(cellPosition) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var hasValidCells = false;\r\n        while (columnIndex > 0 && !hasValidCells) {\r\n            var checkingPosition = {\r\n                columnIndex: --columnIndex,\r\n                rowIndex: cellPosition.rowIndex\r\n            };\r\n            hasValidCells = this._isCellByPositionValid(checkingPosition)\r\n        }\r\n        return hasValidCells\r\n    },\r\n    _hasValidCellAfterPosition: function(cellPosition) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var hasValidCells = false;\r\n        var visibleColumnCount = this._getVisibleColumnCount();\r\n        while (columnIndex < visibleColumnCount - 1 && !hasValidCells) {\r\n            var checkingPosition = {\r\n                columnIndex: ++columnIndex,\r\n                rowIndex: cellPosition.rowIndex\r\n            };\r\n            hasValidCells = this._isCellByPositionValid(checkingPosition)\r\n        }\r\n        return hasValidCells\r\n    },\r\n    _isLastValidCell: function(cellPosition) {\r\n        var nextColumnIndex = cellPosition.columnIndex >= 0 ? cellPosition.columnIndex + 1 : 0;\r\n        var rowIndex = cellPosition.rowIndex;\r\n        var checkingPosition = {\r\n            columnIndex: nextColumnIndex,\r\n            rowIndex: rowIndex\r\n        };\r\n        var visibleRows = this._dataController.getVisibleRows();\r\n        var row = visibleRows && visibleRows[rowIndex];\r\n        var isLastRow = this._isLastRow(rowIndex);\r\n        if (!isLastRow) {\r\n            return false\r\n        }\r\n        if (row && \"group\" === row.rowType && cellPosition.columnIndex > 0) {\r\n            return true\r\n        }\r\n        if (cellPosition.columnIndex === this._getVisibleColumnCount() - 1) {\r\n            return true\r\n        }\r\n        if (this._isCellByPositionValid(checkingPosition)) {\r\n            return false\r\n        }\r\n        return this._isLastValidCell(checkingPosition)\r\n    },\r\n    _isCellValid: function($cell, isClick) {\r\n        if (isElementDefined($cell)) {\r\n            var rowsView = this.getView(\"rowsView\");\r\n            var $row = $cell.parent();\r\n            var columnsController = this._columnsController;\r\n            var columnIndex = rowsView.getCellIndex($cell) + columnsController.getColumnIndexOffset();\r\n            var column = columnsController.getVisibleColumns(null, true)[columnIndex];\r\n            var visibleColumnCount = this._getVisibleColumnCount();\r\n            var editingController = this._editingController;\r\n            var isMasterDetailRow = isDetailRow($row);\r\n            var isShowWhenGrouped = column && column.showWhenGrouped;\r\n            var isDataCell = column && !$cell.hasClass(COMMAND_EXPAND_CLASS) && isDataRow($row);\r\n            if (this._isMasterDetailCell($cell)) {\r\n                return true\r\n            }\r\n            if (visibleColumnCount > columnIndex && (!isMasterDetailRow && column && (!isDefined(column.groupIndex) || isShowWhenGrouped && isDataCell) || parseInt($cell.attr(\"colspan\")) > 1)) {\r\n                var rowItems = this._dataController.items();\r\n                var visibleRowIndex = rowsView.getRowIndex($row);\r\n                var row = rowItems[visibleRowIndex];\r\n                var isCellEditing = editingController && this._isCellEditMode() && editingController.isEditing();\r\n                var isRowEditingInCurrentRow = editingController && editingController.isEditRow(visibleRowIndex);\r\n                var isEditing = isRowEditingInCurrentRow || isCellEditing;\r\n                if (column.command) {\r\n                    if (this._isLegacyNavigation()) {\r\n                        return !isEditing && \"expand\" === column.command\r\n                    }\r\n                    if (isCellEditing) {\r\n                        return false\r\n                    }\r\n                    if (isRowEditingInCurrentRow) {\r\n                        return \"select\" !== column.command\r\n                    }\r\n                    return !isEditing\r\n                }\r\n                if (isCellEditing && row && \"data\" !== row.rowType) {\r\n                    return false\r\n                }\r\n                return !isEditing || column.allowEditing || isClick\r\n            }\r\n        }\r\n    },\r\n    getFirstValidCellInRow: function($row, columnIndex) {\r\n        var $cells = $row.find(\"> td\");\r\n        var $cell;\r\n        var $result;\r\n        columnIndex = columnIndex || 0;\r\n        for (var i = columnIndex; i < $cells.length; ++i) {\r\n            $cell = $cells.eq(i);\r\n            if (this._isCellValid($cell)) {\r\n                $result = $cell;\r\n                break\r\n            }\r\n        }\r\n        return $result\r\n    },\r\n    _getNextCell: function(keyCode, elementType, cellPosition) {\r\n        var focusedCellPosition = cellPosition || this._focusedCellPosition;\r\n        var isRowFocusType = this.isRowFocusType();\r\n        var includeCommandCells = isRowFocusType || inArray(keyCode, [\"next\", \"previous\"]) > -1;\r\n        var $cell;\r\n        var $row;\r\n        if (this._focusedView && focusedCellPosition) {\r\n            var newFocusedCellPosition = this._getNewPositionByCode(focusedCellPosition, elementType, keyCode);\r\n            $cell = $(this._getCell(newFocusedCellPosition));\r\n            var isLastCellOnDirection = \"previous\" === keyCode ? this._isFirstValidCell(newFocusedCellPosition) : this._isLastValidCell(newFocusedCellPosition);\r\n            if (isElementDefined($cell) && !this._isCellValid($cell) && this._isCellInRow(newFocusedCellPosition, includeCommandCells) && !isLastCellOnDirection) {\r\n                if (isRowFocusType) {\r\n                    $cell = this.getFirstValidCellInRow($cell.parent(), newFocusedCellPosition.columnIndex)\r\n                } else {\r\n                    $cell = this._getNextCell(keyCode, \"cell\", newFocusedCellPosition)\r\n                }\r\n            }\r\n            $row = isElementDefined($cell) && $cell.parent();\r\n            if (this._hasSkipRow($row)) {\r\n                var rowIndex = this._getRowIndex($row);\r\n                if (!this._isLastRow(rowIndex)) {\r\n                    $cell = this._getNextCell(keyCode, \"row\", {\r\n                        columnIndex: focusedCellPosition.columnIndex,\r\n                        rowIndex: rowIndex\r\n                    })\r\n                } else {\r\n                    return null\r\n                }\r\n            }\r\n            return isElementDefined($cell) ? $cell : null\r\n        }\r\n        return null\r\n    },\r\n    _startEditing: function(eventArgs, fastEditingKey) {\r\n        var focusedCellPosition = this._focusedCellPosition;\r\n        var visibleRowIndex = this.getVisibleRowIndex();\r\n        var visibleColumnIndex = this.getVisibleColumnIndex();\r\n        var row = this._dataController.items()[visibleRowIndex];\r\n        var column = this._columnsController.getVisibleColumns()[visibleColumnIndex];\r\n        if (this._isAllowEditing(row, column)) {\r\n            if (this._isRowEditMode()) {\r\n                this._editingController.editRow(visibleRowIndex)\r\n            } else if (focusedCellPosition) {\r\n                this._startEditCell(eventArgs, fastEditingKey)\r\n            }\r\n        }\r\n    },\r\n    _isAllowEditing: function(row, column) {\r\n        return this._editingController.allowUpdating({\r\n            row: row\r\n        }) && column && column.allowEditing\r\n    },\r\n    _editFocusedCell: function() {\r\n        var rowIndex = this.getVisibleRowIndex();\r\n        var colIndex = this.getVisibleColumnIndex();\r\n        return this._editingController.editCell(rowIndex, colIndex)\r\n    },\r\n    _startEditCell: function(eventArgs, fastEditingKey) {\r\n        this._fastEditingStarted = isDefined(fastEditingKey);\r\n        var editResult = this._editFocusedCell();\r\n        if (this._isFastEditingStarted()) {\r\n            if (true === editResult) {\r\n                this._editingCellHandler(eventArgs, fastEditingKey)\r\n            } else if (editResult && editResult.done) {\r\n                var editorValue = fastEditingKey !== FAST_EDITING_DELETE_KEY ? fastEditingKey : \"\";\r\n                editResult.done(() => this._editingCellHandler(eventArgs, editorValue))\r\n            }\r\n        }\r\n    },\r\n    _editingCellHandler: function(eventArgs, editorValue) {\r\n        var _$input$get$select, _$input$get;\r\n        var $input = this._getFocusedCell().find(INTERACTIVE_ELEMENTS_SELECTOR).eq(0);\r\n        var keyDownEvent = createEvent(eventArgs, {\r\n            type: \"keydown\",\r\n            target: $input.get(0)\r\n        });\r\n        var keyPressEvent = createEvent(eventArgs, {\r\n            type: \"keypress\",\r\n            target: $input.get(0)\r\n        });\r\n        var inputEvent = createEvent(eventArgs, {\r\n            type: \"input\",\r\n            target: $input.get(0)\r\n        });\r\n        null === (_$input$get$select = (_$input$get = $input.get(0)).select) || void 0 === _$input$get$select ? void 0 : _$input$get$select.call(_$input$get);\r\n        eventsEngine.trigger($input, keyDownEvent);\r\n        if (!keyDownEvent.isDefaultPrevented()) {\r\n            eventsEngine.trigger($input, keyPressEvent);\r\n            if (!keyPressEvent.isDefaultPrevented()) {\r\n                var timeout = browser.mozilla ? 25 : 0;\r\n                setTimeout(() => {\r\n                    $input.val(editorValue);\r\n                    var $widgetContainer = $input.closest(\".\".concat(WIDGET_CLASS));\r\n                    eventsEngine.off($widgetContainer, \"focusout\");\r\n                    eventsEngine.one($widgetContainer, \"focusout\", (function() {\r\n                        eventsEngine.trigger($input, \"change\")\r\n                    }));\r\n                    eventsEngine.trigger($input, inputEvent)\r\n                }, timeout)\r\n            }\r\n        }\r\n    },\r\n    _fireFocusChangingEvents: function($event, $cell, fireRowEvent, isHighlighted) {\r\n        var args = {};\r\n        var cellPosition = this._getCellPosition($cell) || {};\r\n        if (this.isCellFocusType()) {\r\n            args = this._fireFocusedCellChanging($event, $cell, isHighlighted);\r\n            if (!args.cancel) {\r\n                cellPosition.columnIndex = args.newColumnIndex;\r\n                cellPosition.rowIndex = args.newRowIndex;\r\n                isHighlighted = args.isHighlighted;\r\n                $cell = $(this._getCell(cellPosition))\r\n            }\r\n        }\r\n        if (!args.cancel && fireRowEvent && $cell) {\r\n            args = this._fireFocusedRowChanging($event, $cell.parent());\r\n            if (!args.cancel) {\r\n                cellPosition.rowIndex = args.newRowIndex;\r\n                args.isHighlighted = isHighlighted\r\n            }\r\n        }\r\n        args.$newCellElement = $(this._getCell(cellPosition));\r\n        if (!args.$newCellElement.length) {\r\n            args.$newCellElement = $cell\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedCellChanging: function($event, $cellElement, isHighlighted) {\r\n        var prevCellIndex = this.option(\"focusedColumnIndex\");\r\n        var prevRowIndex = this.option(\"focusedRowIndex\");\r\n        var cellPosition = this._getCellPosition($cellElement);\r\n        var columnIndex = cellPosition ? cellPosition.columnIndex : -1;\r\n        var rowIndex = cellPosition ? cellPosition.rowIndex : -1;\r\n        var args = {\r\n            cellElement: $cellElement,\r\n            prevColumnIndex: prevCellIndex,\r\n            prevRowIndex: prevRowIndex,\r\n            newColumnIndex: columnIndex,\r\n            newRowIndex: rowIndex,\r\n            rows: this._dataController.getVisibleRows(),\r\n            columns: this._columnsController.getVisibleColumns(),\r\n            event: $event,\r\n            isHighlighted: isHighlighted || false,\r\n            cancel: false\r\n        };\r\n        this._canceledCellPosition = null;\r\n        this.executeAction(\"onFocusedCellChanging\", args);\r\n        if (args.newColumnIndex !== columnIndex || args.newRowIndex !== rowIndex) {\r\n            args.$newCellElement = $(this._getCell({\r\n                columnIndex: args.newColumnIndex,\r\n                rowIndex: args.newRowIndex\r\n            }))\r\n        }\r\n        if (args.cancel) {\r\n            this._canceledCellPosition = {\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            }\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedCellChanged: function($cellElement, prevCellIndex, prevRowIndex) {\r\n        var dataController = this._dataController;\r\n        var columnIndex = this.getView(\"rowsView\").getCellIndex($cellElement);\r\n        var rowIndex = this._getRowIndex($cellElement && $cellElement.parent());\r\n        var localRowIndex = Math.min(rowIndex - dataController.getRowIndexOffset(), dataController.items().length - 1);\r\n        var isEditingCell = this._editingController.isEditCell(localRowIndex, columnIndex);\r\n        var row = dataController.items()[localRowIndex];\r\n        if (!isEditingCell && (prevCellIndex !== columnIndex || prevRowIndex !== rowIndex)) {\r\n            this.executeAction(\"onFocusedCellChanged\", {\r\n                cellElement: $cellElement,\r\n                columnIndex: columnIndex,\r\n                rowIndex: rowIndex,\r\n                row: row,\r\n                column: this._columnsController.getVisibleColumns()[columnIndex]\r\n            })\r\n        }\r\n    },\r\n    _fireFocusedRowChanging: function(eventArgs, $newFocusedRow) {\r\n        var newRowIndex = this._getRowIndex($newFocusedRow);\r\n        var dataController = this._dataController;\r\n        var prevFocusedRowIndex = this.option(\"focusedRowIndex\");\r\n        var loadingOperationTypes = dataController.loadingOperationTypes();\r\n        var args = {\r\n            rowElement: $newFocusedRow,\r\n            prevRowIndex: prevFocusedRowIndex,\r\n            newRowIndex: newRowIndex,\r\n            event: eventArgs,\r\n            rows: dataController.getVisibleRows(),\r\n            cancel: false\r\n        };\r\n        if (!dataController || dataController.isLoading() && (loadingOperationTypes.reload || loadingOperationTypes.paging)) {\r\n            args.cancel = true;\r\n            return args\r\n        }\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            this.executeAction(\"onFocusedRowChanging\", args);\r\n            if (!args.cancel && args.newRowIndex !== newRowIndex) {\r\n                args.resetFocusedRow = args.newRowIndex < 0;\r\n                if (!args.resetFocusedRow) {\r\n                    this.setFocusedRowIndex(args.newRowIndex)\r\n                }\r\n                args.rowIndexChanged = true\r\n            }\r\n        }\r\n        return args\r\n    },\r\n    _fireFocusedRowChanged: function($rowElement) {\r\n        var row;\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        var focusController = this.getController(\"focus\");\r\n        var focusedRowIndex = null === focusController || void 0 === focusController ? void 0 : focusController.getFocusedRowIndexByKey(focusedRowKey);\r\n        if (this.option(\"focusedRowEnabled\")) {\r\n            if (focusedRowIndex >= 0) {\r\n                var dataController = this._dataController;\r\n                row = focusedRowIndex >= 0 && dataController.getVisibleRows()[focusedRowIndex - dataController.getRowIndexOffset()]\r\n            }\r\n            this.executeAction(\"onFocusedRowChanged\", {\r\n                rowElement: $rowElement,\r\n                rowIndex: focusedRowIndex,\r\n                row: row\r\n            })\r\n        }\r\n    },\r\n    _isEventInCurrentGrid: function(event) {\r\n        return gridCoreUtils.isElementInCurrentGrid(this, $(event.target))\r\n    },\r\n    _isRowEditMode: function() {\r\n        var editMode = this._editingController.getEditMode();\r\n        return editMode === EDIT_MODE_ROW || editMode === EDIT_MODE_FORM\r\n    },\r\n    _isCellEditMode: function() {\r\n        var editMode = this._editingController.getEditMode();\r\n        return editMode === EDIT_MODE_CELL || editMode === EDIT_MODE_BATCH\r\n    },\r\n    _isFastEditingAllowed: function() {\r\n        return this._isCellEditMode() && this.option(\"keyboardNavigation.editOnKeyPress\")\r\n    },\r\n    _getInteractiveElement: function($cell, isLast) {\r\n        var $focusedElement = $cell.find(INTERACTIVE_ELEMENTS_SELECTOR).filter(\":visible\");\r\n        return isLast ? $focusedElement.last() : $focusedElement.first()\r\n    },\r\n    _applyTabIndexToElement: function($element) {\r\n        var tabIndex = this.option(\"tabIndex\") || 0;\r\n        $element.attr(\"tabindex\", isDefined(tabIndex) ? tabIndex : 0)\r\n    },\r\n    _getCell: function(cellPosition) {\r\n        if (this._focusedView && cellPosition) {\r\n            var rowIndexOffset = this._dataController.getRowIndexOffset();\r\n            var column = this._columnsController.getVisibleColumns(null, true)[cellPosition.columnIndex];\r\n            var columnIndexOffset = column && column.fixed ? this._getFixedColumnIndexOffset(column) : this._columnsController.getColumnIndexOffset();\r\n            var rowIndex = cellPosition.rowIndex >= 0 ? cellPosition.rowIndex - rowIndexOffset : -1;\r\n            var columnIndex = cellPosition.columnIndex >= 0 ? cellPosition.columnIndex - columnIndexOffset : -1;\r\n            return this._focusedView.getCell({\r\n                rowIndex: rowIndex,\r\n                columnIndex: columnIndex\r\n            })\r\n        }\r\n    },\r\n    _getRowIndex: function($row) {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        var rowIndex = rowsView.getRowIndex($row);\r\n        if (rowIndex >= 0) {\r\n            rowIndex += this._dataController.getRowIndexOffset()\r\n        }\r\n        return rowIndex\r\n    },\r\n    _hasSkipRow: function($row) {\r\n        var row = $row && $row.get(0);\r\n        return row && (\"none\" === row.style.display || $row.hasClass(this.addWidgetPrefix(GROUP_FOOTER_CLASS)) || isDetailRow($row) && !$row.hasClass(this.addWidgetPrefix(EDIT_FORM_CLASS)))\r\n    },\r\n    _allowEditingOnEnterKey: function() {\r\n        return \"startEdit\" === this.option(\"keyboardNavigation.enterKeyAction\")\r\n    },\r\n    _isLegacyNavigation: function() {\r\n        return this.option(\"useLegacyKeyboardNavigation\")\r\n    },\r\n    _getDirectionCodeByKey: function(key) {\r\n        var directionCode;\r\n        switch (key) {\r\n            case \"upArrow\":\r\n                directionCode = \"prevRow\";\r\n                break;\r\n            case \"downArrow\":\r\n                directionCode = \"nextRow\";\r\n                break;\r\n            case \"leftArrow\":\r\n                directionCode = this.option(\"rtlEnabled\") ? \"nextInRow\" : \"previousInRow\";\r\n                break;\r\n            case \"rightArrow\":\r\n                directionCode = this.option(\"rtlEnabled\") ? \"previousInRow\" : \"nextInRow\"\r\n        }\r\n        return directionCode\r\n    },\r\n    _isVirtualScrolling: function() {\r\n        var scrollingMode = this.option(\"scrolling.mode\");\r\n        return \"virtual\" === scrollingMode || \"infinite\" === scrollingMode\r\n    },\r\n    _isVirtualRowRender: function() {\r\n        return this._isVirtualScrolling() || gridCoreUtils.isVirtualRowRendering(this)\r\n    },\r\n    _isVirtualColumnRender: function() {\r\n        return \"virtual\" === this.option(\"scrolling.columnRenderingMode\")\r\n    },\r\n    _scrollBy: function(left, top, rowIndex, $event) {\r\n        var that = this;\r\n        var scrollable = this.getView(\"rowsView\").getScrollable();\r\n        if (that._focusedCellPosition) {\r\n            scrollable.on(\"scroll\", (function scrollHandler() {\r\n                scrollable.off(\"scroll\", scrollHandler);\r\n                setTimeout(that.restoreFocusableElement.bind(that, rowIndex, $event))\r\n            }))\r\n        }\r\n        return scrollable.scrollBy({\r\n            left: left,\r\n            top: top\r\n        })\r\n    },\r\n    _isInsideEditForm: function(element) {\r\n        return $(element).closest(\".\" + this.addWidgetPrefix(EDIT_FORM_CLASS)).length > 0\r\n    },\r\n    _isMasterDetailCell: function(element) {\r\n        var $masterDetailCell = $(element).closest(\".\" + MASTER_DETAIL_CELL_CLASS);\r\n        var $masterDetailGrid = $masterDetailCell.closest(\".\" + this.getWidgetContainerClass()).parent();\r\n        return $masterDetailCell.length && $masterDetailGrid.is(this.component.$element())\r\n    },\r\n    _processNextCellInMasterDetail: function($nextCell) {\r\n        if (!this._isInsideEditForm($nextCell) && $nextCell) {\r\n            this._applyTabIndexToElement($nextCell)\r\n        }\r\n    },\r\n    _handleTabKeyOnMasterDetailCell: function(target, direction) {\r\n        if (this._isMasterDetailCell(target)) {\r\n            this._updateFocusedCellPosition($(target), direction);\r\n            var $nextCell = this._getNextCell(direction, \"row\");\r\n            this._processNextCellInMasterDetail($nextCell);\r\n            return true\r\n        }\r\n        return false\r\n    },\r\n    _getElementType: function(target) {\r\n        return $(target).is(\"tr\") ? \"row\" : \"cell\"\r\n    },\r\n    _isFastEditingStarted: function() {\r\n        return this._isFastEditingAllowed() && this._fastEditingStarted\r\n    },\r\n    _getVisibleColumnCount: function() {\r\n        return this._columnsController.getVisibleColumns(null, true).length\r\n    },\r\n    _isCellInRow: function(cellPosition, includeCommandCells) {\r\n        var columnIndex = cellPosition.columnIndex;\r\n        var visibleColumnsCount = this._getVisibleColumnCount();\r\n        return includeCommandCells ? columnIndex >= 0 && columnIndex <= visibleColumnsCount - 1 : columnIndex > 0 && columnIndex < visibleColumnsCount - 1\r\n    },\r\n    _getCellElementFromTarget: function(target) {\r\n        var elementType = this._getElementType(target);\r\n        var $targetElement = $(target);\r\n        var $cell;\r\n        if (\"cell\" === elementType) {\r\n            $cell = $targetElement.closest(\".\".concat(ROW_CLASS, \" > td\"))\r\n        } else {\r\n            $cell = $targetElement.children().not(\".\" + COMMAND_EXPAND_CLASS).first()\r\n        }\r\n        return $cell\r\n    },\r\n    _getRowsViewElement: function() {\r\n        var rowsView = this.getView(\"rowsView\");\r\n        return rowsView && rowsView.element()\r\n    },\r\n    isKeyboardEnabled: function() {\r\n        return this.option(\"keyboardNavigation.enabled\")\r\n    },\r\n    _processCanceledEditCellPosition: function(rowIndex, columnIndex) {\r\n        if (this._canceledCellPosition) {\r\n            var isCanceled = this._canceledCellPosition.rowIndex === rowIndex && this._canceledCellPosition.columnIndex === columnIndex;\r\n            this._canceledCellPosition = null;\r\n            return isCanceled\r\n        }\r\n    },\r\n    updateFocusedRowIndex: function() {\r\n        var dataController = this._dataController;\r\n        var visibleRowIndex = this.getVisibleRowIndex();\r\n        var visibleItems = dataController.items();\r\n        var lastVisibleIndex = visibleItems.length ? visibleItems.length - 1 : -1;\r\n        var rowIndexOffset = dataController.getRowIndexOffset();\r\n        lastVisibleIndex >= 0 && visibleRowIndex > lastVisibleIndex && this.setFocusedRowIndex(lastVisibleIndex + rowIndexOffset)\r\n    }\r\n});\r\nexport var keyboardNavigationModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            useLegacyKeyboardNavigation: false,\r\n            keyboardNavigation: {\r\n                enabled: true,\r\n                enterKeyAction: \"startEdit\",\r\n                enterKeyDirection: \"none\",\r\n                editOnKeyPress: false\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        keyboardNavigation: KeyboardNavigationController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _rowClick: function(e) {\r\n                    var editRowIndex = this.getController(\"editing\").getEditRowIndex();\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    if (editRowIndex === e.rowIndex) {\r\n                        keyboardController.setCellFocusType()\r\n                    }\r\n                    var needTriggerPointerEventHandler = isMobile() && this.option(\"focusedRowEnabled\");\r\n                    if (needTriggerPointerEventHandler) {\r\n                        this._triggerPointerDownEventHandler(e)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _triggerPointerDownEventHandler: function(e) {\r\n                    var originalEvent = e.event.originalEvent;\r\n                    if (originalEvent) {\r\n                        var keyboardController = this.getController(\"keyboardNavigation\");\r\n                        var $cell = $(originalEvent.target);\r\n                        var columnIndex = this.getCellIndex($cell);\r\n                        var column = this.getController(\"columns\").getVisibleColumns()[columnIndex];\r\n                        var row = this.getController(\"data\").items()[e.rowIndex];\r\n                        if (keyboardController._isAllowEditing(row, column)) {\r\n                            var eventArgs = createEvent(originalEvent, {\r\n                                currentTarget: originalEvent.target\r\n                            });\r\n                            keyboardController._pointerEventHandler(eventArgs)\r\n                        }\r\n                    }\r\n                },\r\n                renderFocusState: function(params) {\r\n                    var {\r\n                        preventScroll: preventScroll,\r\n                        pageSizeChanged: pageSizeChanged\r\n                    } = null !== params && void 0 !== params ? params : {};\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var $rowsViewElement = this.element();\r\n                    if ($rowsViewElement && !focused($rowsViewElement)) {\r\n                        $rowsViewElement.attr(\"tabindex\", null)\r\n                    }\r\n                    pageSizeChanged && keyboardController.updateFocusedRowIndex();\r\n                    var rowIndex = keyboardController.getVisibleRowIndex();\r\n                    if (!isDefined(rowIndex) || rowIndex < 0) {\r\n                        rowIndex = 0\r\n                    }\r\n                    var cellElements = this.getCellElements(rowIndex);\r\n                    if (keyboardController.isKeyboardEnabled() && cellElements.length) {\r\n                        this.updateFocusElementTabIndex(cellElements, preventScroll)\r\n                    }\r\n                },\r\n                updateFocusElementTabIndex: function(cellElements) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var $row = cellElements.eq(0).parent();\r\n                    if (isGroupRow($row)) {\r\n                        keyboardController._applyTabIndexToElement($row)\r\n                    } else {\r\n                        var columnIndex = keyboardController.getColumnIndex();\r\n                        if (!isDefined(columnIndex) || columnIndex < 0) {\r\n                            columnIndex = 0\r\n                        }\r\n                        this._updateFocusedCellTabIndex(cellElements, columnIndex)\r\n                    }\r\n                },\r\n                _updateFocusedCellTabIndex: function(cellElements, columnIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var cellElementsLength = cellElements ? cellElements.length : -1;\r\n                    var updateCellTabIndex = function($cell) {\r\n                        var isMasterDetailCell = keyboardController._isMasterDetailCell($cell);\r\n                        var isValidCell = keyboardController._isCellValid($cell);\r\n                        if (!isMasterDetailCell && isValidCell && isCellElement($cell)) {\r\n                            keyboardController._applyTabIndexToElement($cell);\r\n                            keyboardController.setCellFocusType();\r\n                            return true\r\n                        }\r\n                    };\r\n                    var $cell = cellElements.filter(\"[aria-colindex='\".concat(columnIndex + 1, \"']\"));\r\n                    if ($cell.length) {\r\n                        updateCellTabIndex($cell)\r\n                    } else {\r\n                        if (cellElementsLength <= columnIndex) {\r\n                            columnIndex = cellElementsLength - 1\r\n                        }\r\n                        for (var i = columnIndex; i < cellElementsLength; ++i) {\r\n                            if (updateCellTabIndex($(cellElements[i]))) {\r\n                                break\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                renderDelayedTemplates: function(change) {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._renderFocusByChange(change)\r\n                },\r\n                _renderFocusByChange(change) {\r\n                    var {\r\n                        operationTypes: operationTypes,\r\n                        repaintChangesOnly: repaintChangesOnly\r\n                    } = null !== change && void 0 !== change ? change : {};\r\n                    var {\r\n                        fullReload: fullReload,\r\n                        pageSize: pageSize\r\n                    } = null !== operationTypes && void 0 !== operationTypes ? operationTypes : {};\r\n                    if (!change || !repaintChangesOnly || fullReload || pageSize) {\r\n                        var preventScroll = shouldPreventScroll(this);\r\n                        this.renderFocusState({\r\n                            preventScroll: preventScroll,\r\n                            pageSizeChanged: pageSize\r\n                        })\r\n                    }\r\n                },\r\n                _renderCore: function(change) {\r\n                    this.callBase.apply(this, arguments);\r\n                    this._renderFocusByChange(change)\r\n                },\r\n                _editCellPrepared: function($cell) {\r\n                    var editorInstance = this._getEditorInstance($cell);\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var isEditingNavigationMode = keyboardController && keyboardController._isFastEditingStarted();\r\n                    if (editorInstance && isEditingNavigationMode) {\r\n                        this._handleEditingNavigationMode(editorInstance)\r\n                    }\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _handleEditingNavigationMode: function(editorInstance) {\r\n                    [\"downArrow\", \"upArrow\"].forEach((function(keyName) {\r\n                        var originalKeyHandler = editorInstance._supportedKeys()[keyName];\r\n                        editorInstance.registerKeyHandler(keyName, e => {\r\n                            var isDropDownOpened = \"true\" === editorInstance._input().attr(\"aria-expanded\");\r\n                            if (isDropDownOpened) {\r\n                                return originalKeyHandler && originalKeyHandler.call(editorInstance, e)\r\n                            }\r\n                        })\r\n                    }));\r\n                    editorInstance.registerKeyHandler(\"leftArrow\", noop);\r\n                    editorInstance.registerKeyHandler(\"rightArrow\", noop);\r\n                    var isDateBoxWithMask = editorInstance.NAME === DATEBOX_WIDGET_NAME && editorInstance.option(\"useMaskBehavior\");\r\n                    if (isDateBoxWithMask) {\r\n                        editorInstance.registerKeyHandler(\"enter\", noop)\r\n                    }\r\n                },\r\n                _getEditorInstance: function($cell) {\r\n                    var $editor = $cell.find(\".dx-texteditor\").eq(0);\r\n                    return gridCoreUtils.getWidgetInstance($editor)\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            editing: {\r\n                editCell: function(rowIndex, columnIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    if (keyboardController._processCanceledEditCellPosition(rowIndex, columnIndex)) {\r\n                        return false\r\n                    }\r\n                    var isCellEditing = this.callBase(rowIndex, columnIndex);\r\n                    if (isCellEditing) {\r\n                        keyboardController.setupFocusedView()\r\n                    }\r\n                    return isCellEditing\r\n                },\r\n                editRow: function(rowIndex) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var visibleColumnIndex = keyboardController.getVisibleColumnIndex();\r\n                    var column = this._columnsController.getVisibleColumns()[visibleColumnIndex];\r\n                    if (column && column.type || this.option(\"editing.mode\") === EDIT_MODE_FORM) {\r\n                        keyboardController._resetFocusedCell()\r\n                    }\r\n                    this.callBase(rowIndex)\r\n                },\r\n                addRow: function(parentKey) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    keyboardController.setupFocusedView();\r\n                    keyboardController.setCellFocusType();\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                getFocusedCellInRow: function(rowIndex) {\r\n                    var keyboardNavigationController = this.getController(\"keyboardNavigation\");\r\n                    var $cell = this.callBase(rowIndex);\r\n                    if (keyboardNavigationController.isKeyboardEnabled() && keyboardNavigationController._focusedCellPosition.rowIndex === rowIndex) {\r\n                        var $focusedCell = keyboardNavigationController._getFocusedCell();\r\n                        if (isElementDefined($focusedCell) && !$focusedCell.hasClass(COMMAND_EDIT_CLASS)) {\r\n                            $cell = $focusedCell\r\n                        }\r\n                    }\r\n                    return $cell\r\n                },\r\n                _processCanceledEditingCell: function() {\r\n                    this.closeEditCell().done(() => {\r\n                        var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                        keyboardNavigation._updateFocus()\r\n                    })\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._keyboardNavigationController = this.getController(\"keyboardNavigation\")\r\n                },\r\n                closeEditCell: function() {\r\n                    var keyboardNavigation = this._keyboardNavigationController;\r\n                    keyboardNavigation._fastEditingStarted = false;\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    keyboardNavigation._updateFocus();\r\n                    return result\r\n                },\r\n                _delayedInputFocus: function() {\r\n                    this._keyboardNavigationController._isNeedScroll = true;\r\n                    this.callBase.apply(this, arguments)\r\n                },\r\n                _isEditingStart: function() {\r\n                    var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                    var cancel = this.callBase.apply(this, arguments);\r\n                    if (cancel && !keyboardNavigation._isNeedFocus) {\r\n                        var $cell = keyboardNavigation._getFocusedCell();\r\n                        keyboardNavigation._focus($cell, true)\r\n                    }\r\n                    return cancel\r\n                }\r\n            },\r\n            data: {\r\n                _correctRowIndices: function(getRowIndexCorrection) {\r\n                    var that = this;\r\n                    var keyboardNavigationController = that.getController(\"keyboardNavigation\");\r\n                    var editorFactory = that.getController(\"editorFactory\");\r\n                    var focusedCellPosition = keyboardNavigationController._focusedCellPosition;\r\n                    that.callBase.apply(that, arguments);\r\n                    if (focusedCellPosition && focusedCellPosition.rowIndex >= 0) {\r\n                        var focusedRowIndexCorrection = getRowIndexCorrection(focusedCellPosition.rowIndex);\r\n                        if (focusedRowIndexCorrection) {\r\n                            focusedCellPosition.rowIndex += focusedRowIndexCorrection;\r\n                            editorFactory.refocus()\r\n                        }\r\n                    }\r\n                },\r\n                getMaxRowIndex: function() {\r\n                    var result = this.items().length - 1;\r\n                    var virtualItemsCount = this.virtualItemsCount();\r\n                    if (virtualItemsCount) {\r\n                        result += virtualItemsCount.begin + virtualItemsCount.end\r\n                    }\r\n                    return result\r\n                }\r\n            },\r\n            adaptiveColumns: {\r\n                _showHiddenCellsInView: function(_ref) {\r\n                    var {\r\n                        viewName: viewName,\r\n                        $cells: $cells,\r\n                        isCommandColumn: isCommandColumn\r\n                    } = _ref;\r\n                    this.callBase.apply(this, arguments);\r\n                    viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && $cells.each((_, cellElement) => {\r\n                        var $cell = $(cellElement);\r\n                        isCellInHeaderRow($cell) && $cell.attr(\"tabindex\", 0)\r\n                    })\r\n                },\r\n                _hideVisibleCellInView: function(_ref2) {\r\n                    var {\r\n                        viewName: viewName,\r\n                        $cell: $cell,\r\n                        isCommandColumn: isCommandColumn\r\n                    } = _ref2;\r\n                    this.callBase.apply(this, arguments);\r\n                    if (viewName === COLUMN_HEADERS_VIEW && !isCommandColumn && isCellInHeaderRow($cell)) {\r\n                        $cell.removeAttr(\"tabindex\")\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/aggregate_calculator.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    errors\r\n} from \"../../data/errors\";\r\nimport {\r\n    aggregators\r\n} from \"../../data/utils\";\r\n\r\nfunction depthFirstSearch(i, depth, root, callback) {\r\n    var j = 0;\r\n    if (i < depth) {\r\n        for (; j < root.items.length; j++) {\r\n            depthFirstSearch(i + 1, depth, root.items[j], callback)\r\n        }\r\n    }\r\n    if (i === depth) {\r\n        callback(root)\r\n    }\r\n}\r\n\r\nfunction map(array, callback) {\r\n    var i;\r\n    if (\"map\" in array) {\r\n        return array.map(callback)\r\n    }\r\n    var result = new Array(array.length);\r\n    for (i in array) {\r\n        result[i] = callback(array[i], i)\r\n    }\r\n    return result\r\n}\r\n\r\nfunction isEmpty(x) {\r\n    return x !== x || \"\" === x || null === x || void 0 === x\r\n}\r\n\r\nfunction isCount(aggregator) {\r\n    return aggregator === aggregators.count\r\n}\r\n\r\nfunction normalizeAggregate(aggregate) {\r\n    var selector = compileGetter(aggregate.selector);\r\n    var skipEmptyValues = \"skipEmptyValues\" in aggregate ? aggregate.skipEmptyValues : true;\r\n    var aggregator = aggregate.aggregator;\r\n    if (\"string\" === typeof aggregator) {\r\n        aggregator = aggregators[aggregator];\r\n        if (!aggregator) {\r\n            throw errors.Error(\"E4001\", aggregate.aggregator)\r\n        }\r\n    }\r\n    return {\r\n        selector: selector,\r\n        aggregator: aggregator,\r\n        skipEmptyValues: skipEmptyValues\r\n    }\r\n}\r\nexport default Class.inherit({\r\n    ctor: function(options) {\r\n        this._data = options.data;\r\n        this._groupLevel = options.groupLevel || 0;\r\n        this._totalAggregates = map(options.totalAggregates || [], normalizeAggregate);\r\n        this._groupAggregates = map(options.groupAggregates || [], normalizeAggregate);\r\n        this._totals = []\r\n    },\r\n    calculate: function() {\r\n        if (this._totalAggregates.length) {\r\n            this._calculateTotals(0, {\r\n                items: this._data\r\n            })\r\n        }\r\n        if (this._groupAggregates.length && this._groupLevel > 0) {\r\n            this._calculateGroups({\r\n                items: this._data\r\n            })\r\n        }\r\n    },\r\n    totalAggregates: function() {\r\n        return this._totals\r\n    },\r\n    _aggregate: function(aggregates, data, container) {\r\n        var length = data.items ? data.items.length : 0;\r\n        for (var i = 0; i < aggregates.length; i++) {\r\n            if (isCount(aggregates[i].aggregator)) {\r\n                container[i] = (container[i] || 0) + length;\r\n                continue\r\n            }\r\n            for (var j = 0; j < length; j++) {\r\n                this._accumulate(i, aggregates[i], container, data.items[j])\r\n            }\r\n        }\r\n    },\r\n    _calculateTotals: function(level, data) {\r\n        if (0 === level) {\r\n            this._totals = this._seed(this._totalAggregates)\r\n        }\r\n        if (level === this._groupLevel) {\r\n            this._aggregate(this._totalAggregates, data, this._totals)\r\n        } else {\r\n            for (var i = 0; i < data.items.length; i++) {\r\n                this._calculateTotals(level + 1, data.items[i])\r\n            }\r\n        }\r\n        if (0 === level) {\r\n            this._totals = this._finalize(this._totalAggregates, this._totals)\r\n        }\r\n    },\r\n    _calculateGroups: function(root) {\r\n        var maxLevel = this._groupLevel;\r\n        var currentLevel = maxLevel + 1;\r\n        var seedFn = this._seed.bind(this, this._groupAggregates);\r\n        var stepFn = this._aggregate.bind(this, this._groupAggregates);\r\n        var finalizeFn = this._finalize.bind(this, this._groupAggregates);\r\n\r\n        function aggregator(node) {\r\n            node.aggregates = seedFn(currentLevel - 1);\r\n            if (currentLevel === maxLevel) {\r\n                stepFn(node, node.aggregates)\r\n            } else {\r\n                depthFirstSearch(currentLevel, maxLevel, node, (function(innerNode) {\r\n                    stepFn(innerNode, node.aggregates)\r\n                }))\r\n            }\r\n            node.aggregates = finalizeFn(node.aggregates)\r\n        }\r\n        while (--currentLevel > 0) {\r\n            depthFirstSearch(0, currentLevel, root, aggregator)\r\n        }\r\n    },\r\n    _seed: function(aggregates, groupIndex) {\r\n        return map(aggregates, (function(aggregate) {\r\n            var aggregator = aggregate.aggregator;\r\n            var seed = \"seed\" in aggregator ? isFunction(aggregator.seed) ? aggregator.seed(groupIndex) : aggregator.seed : NaN;\r\n            return seed\r\n        }))\r\n    },\r\n    _accumulate: function(aggregateIndex, aggregate, results, item) {\r\n        var value = aggregate.selector(item);\r\n        var aggregator = aggregate.aggregator;\r\n        var skipEmptyValues = aggregate.skipEmptyValues;\r\n        if (skipEmptyValues && isEmpty(value)) {\r\n            return\r\n        }\r\n        if (results[aggregateIndex] !== results[aggregateIndex]) {\r\n            results[aggregateIndex] = value\r\n        } else {\r\n            results[aggregateIndex] = aggregator.step(results[aggregateIndex], value)\r\n        }\r\n    },\r\n    _finalize: function(aggregates, results) {\r\n        return map(aggregates, (function(aggregate, index) {\r\n            var fin = aggregate.aggregator.finalize;\r\n            return fin ? fin(results[index]) : results[index]\r\n        }))\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.keyboard_navigation.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    keyboardNavigationModule\r\n} from \"../grid_core/ui.grid_core.keyboard_navigation\";\r\ngridCore.registerModule(\"keyboardNavigation\", keyboardNavigationModule);\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.summary.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    isEmptyObject,\r\n    isString,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport dataSourceAdapter from \"./ui.data_grid.data_source_adapter\";\r\nimport {\r\n    ColumnsView\r\n} from \"../grid_core/ui.grid_core.columns_view\";\r\nimport AggregateCalculator from \"./aggregate_calculator\";\r\nimport dataQuery from \"../../data/query\";\r\nimport storeHelper from \"../../data/store_helper\";\r\nimport {\r\n    normalizeSortingInfo\r\n} from \"../../data/utils\";\r\nvar DATAGRID_TOTAL_FOOTER_CLASS = \"dx-datagrid-total-footer\";\r\nvar DATAGRID_SUMMARY_ITEM_CLASS = \"dx-datagrid-summary-item\";\r\nvar DATAGRID_TEXT_CONTENT_CLASS = \"dx-datagrid-text-content\";\r\nvar DATAGRID_GROUP_FOOTER_CLASS = \"dx-datagrid-group-footer\";\r\nvar DATAGRID_GROUP_TEXT_CONTENT_CLASS = \"dx-datagrid-group-text-content\";\r\nvar DATAGRID_NOWRAP_CLASS = \"dx-datagrid-nowrap\";\r\nvar DATAGRID_GROUP_FOOTER_ROW_TYPE = \"groupFooter\";\r\nexport var renderSummaryCell = function(cell, options) {\r\n    var $cell = $(cell);\r\n    var column = options.column;\r\n    var summaryItems = options.summaryItems;\r\n    var $summaryItems = [];\r\n    if (!column.command && summaryItems) {\r\n        for (var i = 0; i < summaryItems.length; i++) {\r\n            var summaryItem = summaryItems[i];\r\n            $summaryItems.push($(\"<div>\").css(\"textAlign\", summaryItem.alignment || column.alignment).addClass(DATAGRID_SUMMARY_ITEM_CLASS).addClass(DATAGRID_TEXT_CONTENT_CLASS).addClass(summaryItem.cssClass).toggleClass(DATAGRID_GROUP_TEXT_CONTENT_CLASS, \"group\" === options.rowType).text(gridCore.getSummaryText(summaryItem, options.summaryTexts)))\r\n        }\r\n        $cell.append($summaryItems)\r\n    }\r\n};\r\nvar getSummaryCellOptions = function(that, options) {\r\n    var summaryTexts = that.option(\"summary.texts\") || {};\r\n    return {\r\n        totalItem: options.row,\r\n        summaryItems: options.row.summaryCells[options.columnIndex],\r\n        summaryTexts: summaryTexts\r\n    }\r\n};\r\nvar getGroupAggregates = function(data) {\r\n    return data.summary || data.aggregates || []\r\n};\r\nvar recalculateWhileEditing = function(that) {\r\n    return that.option(\"summary.recalculateWhileEditing\")\r\n};\r\nexport var FooterView = ColumnsView.inherit({\r\n    _getRows: function() {\r\n        return this._dataController.footerItems()\r\n    },\r\n    _getCellOptions: function(options) {\r\n        return extend(this.callBase(options), getSummaryCellOptions(this, options))\r\n    },\r\n    _renderCellContent: function($cell, options) {\r\n        renderSummaryCell($cell, options);\r\n        this.callBase($cell, options)\r\n    },\r\n    _renderCore: function(change) {\r\n        var needUpdateScrollLeft = false;\r\n        var totalItem = this._dataController.footerItems()[0];\r\n        if (!change || !change.columnIndices) {\r\n            this.element().empty().addClass(DATAGRID_TOTAL_FOOTER_CLASS).toggleClass(DATAGRID_NOWRAP_CLASS, !this.option(\"wordWrapEnabled\"));\r\n            needUpdateScrollLeft = true\r\n        }\r\n        if (totalItem && totalItem.summaryCells && totalItem.summaryCells.length) {\r\n            this._updateContent(this._renderTable({\r\n                change: change\r\n            }), change);\r\n            needUpdateScrollLeft && this._updateScrollLeftPosition()\r\n        }\r\n    },\r\n    _updateContent: function($newTable, change) {\r\n        if (change && \"update\" === change.changeType && change.columnIndices) {\r\n            var $row = this.getTableElement().find(\".dx-row\");\r\n            var $newRow = $newTable.find(\".dx-row\");\r\n            this._updateCells($row, $newRow, change.columnIndices[0])\r\n        } else {\r\n            return this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _rowClick: function(e) {\r\n        var item = this._dataController.footerItems()[e.rowIndex] || {};\r\n        this.executeAction(\"onRowClick\", extend({}, e, item))\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var optionNames = e.optionNames;\r\n        if (e.changeTypes.grouping) {\r\n            return\r\n        }\r\n        if (optionNames.width || optionNames.visibleWidth) {\r\n            this.callBase(e)\r\n        }\r\n    },\r\n    _handleDataChanged: function(e) {\r\n        var changeType = e.changeType;\r\n        if (\"update\" === e.changeType && e.repaintChangesOnly) {\r\n            if (!e.totalColumnIndices) {\r\n                this.render()\r\n            } else if (e.totalColumnIndices.length) {\r\n                this.render(null, {\r\n                    changeType: \"update\",\r\n                    columnIndices: [e.totalColumnIndices]\r\n                })\r\n            }\r\n        } else if (\"refresh\" === changeType || \"append\" === changeType || \"prepend\" === changeType) {\r\n            this.render()\r\n        }\r\n    },\r\n    getHeight: function() {\r\n        return this.getElementHeight()\r\n    },\r\n    isVisible: function() {\r\n        return !!this._dataController.footerItems().length\r\n    }\r\n});\r\nvar SummaryDataSourceAdapterExtender = {\r\n    init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._totalAggregates = [];\r\n        this._summaryGetter = noop\r\n    },\r\n    summaryGetter: function(_summaryGetter) {\r\n        if (!arguments.length) {\r\n            return this._summaryGetter\r\n        }\r\n        if (isFunction(_summaryGetter)) {\r\n            this._summaryGetter = _summaryGetter\r\n        }\r\n    },\r\n    summary: function(_summary) {\r\n        if (!arguments.length) {\r\n            return this._summaryGetter()\r\n        }\r\n        this._summaryGetter = function() {\r\n            return _summary\r\n        }\r\n    },\r\n    totalAggregates: function() {\r\n        return this._totalAggregates\r\n    },\r\n    isLastLevelGroupItemsPagingLocal: function() {\r\n        var summary = this.summary();\r\n        var sortByGroupsInfo = summary && summary.sortByGroups();\r\n        return sortByGroupsInfo && sortByGroupsInfo.length\r\n    },\r\n    sortLastLevelGroupItems: function(items, groups, paths) {\r\n        var groupedItems = storeHelper.multiLevelGroup(dataQuery(items), groups).toArray();\r\n        var result = [];\r\n        paths.forEach((function(path) {\r\n            ! function forEachGroup(groups, groupCount, callback, path) {\r\n                path = path || [];\r\n                for (var i = 0; i < groups.length; i++) {\r\n                    path.push(groups[i].key);\r\n                    if (1 === groupCount) {\r\n                        callback(path, groups[i].items)\r\n                    } else {\r\n                        forEachGroup(groups[i].items, groupCount - 1, callback, path)\r\n                    }\r\n                    path.pop()\r\n                }\r\n            }(groupedItems, groups.length, (function(itemsPath, items) {\r\n                if (path.toString() === itemsPath.toString()) {\r\n                    result = result.concat(items)\r\n                }\r\n            }))\r\n        }));\r\n        return result\r\n    }\r\n};\r\nvar SummaryDataSourceAdapterClientExtender = function() {\r\n    var calculateAggregates = function(that, summary, data, groupLevel) {\r\n        var calculator;\r\n        if (recalculateWhileEditing(that)) {\r\n            var editingController = that.getController(\"editing\");\r\n            if (editingController) {\r\n                var insertedData = editingController.getInsertedData();\r\n                if (insertedData.length) {\r\n                    data = function applyAddedData(data, insertedData, groupLevel) {\r\n                        if (groupLevel) {\r\n                            return applyAddedData(data, insertedData.map(item => ({\r\n                                items: [item]\r\n                            }), groupLevel - 1))\r\n                        }\r\n                        return data.concat(insertedData)\r\n                    }(data, insertedData, groupLevel)\r\n                }\r\n                var removedData = editingController.getRemovedData();\r\n                if (removedData.length) {\r\n                    data = function applyRemovedData(data, removedData, groupLevel) {\r\n                        if (groupLevel) {\r\n                            return data.map(data => {\r\n                                var updatedData = {};\r\n                                var updatedItems = applyRemovedData(data.items || [], removedData, groupLevel - 1);\r\n                                Object.defineProperty(updatedData, \"aggregates\", {\r\n                                    get: () => data.aggregates,\r\n                                    set: value => {\r\n                                        data.aggregates = value\r\n                                    }\r\n                                });\r\n                                return extend(updatedData, data, {\r\n                                    items: updatedItems\r\n                                })\r\n                            })\r\n                        }\r\n                        return data.filter(data => removedData.indexOf(data) < 0)\r\n                    }(data, removedData, groupLevel)\r\n                }\r\n            }\r\n        }\r\n        if (summary) {\r\n            calculator = new AggregateCalculator({\r\n                totalAggregates: summary.totalAggregates,\r\n                groupAggregates: summary.groupAggregates,\r\n                data: data,\r\n                groupLevel: groupLevel\r\n            });\r\n            calculator.calculate()\r\n        }\r\n        return calculator ? calculator.totalAggregates() : []\r\n    };\r\n    var sortGroupsBySummary = function(data, group, summary) {\r\n        var sortByGroups = summary && summary.sortByGroups && summary.sortByGroups();\r\n        if (sortByGroups && sortByGroups.length) {\r\n            return function sortGroupsBySummaryCore(items, groups, sortByGroups) {\r\n                if (!items || !groups.length) {\r\n                    return items\r\n                }\r\n                var group = groups[0];\r\n                var sorts = sortByGroups[0];\r\n                var query;\r\n                if (group && sorts && sorts.length) {\r\n                    query = dataQuery(items);\r\n                    each(sorts, (function(index) {\r\n                        if (0 === index) {\r\n                            query = query.sortBy(this.selector, this.desc)\r\n                        } else {\r\n                            query = query.thenBy(this.selector, this.desc)\r\n                        }\r\n                    }));\r\n                    query.enumerate().done((function(sortedItems) {\r\n                        items = sortedItems\r\n                    }))\r\n                }\r\n                groups = groups.slice(1);\r\n                sortByGroups = sortByGroups.slice(1);\r\n                if (groups.length && sortByGroups.length) {\r\n                    each(items, (function() {\r\n                        this.items = sortGroupsBySummaryCore(this.items, groups, sortByGroups)\r\n                    }))\r\n                }\r\n                return items\r\n            }(data, group, sortByGroups)\r\n        }\r\n        return data\r\n    };\r\n    return {\r\n        _customizeRemoteOperations: function(options) {\r\n            var summary = this.summary();\r\n            if (summary) {\r\n                if (options.remoteOperations.summary) {\r\n                    if (!options.isCustomLoading || options.storeLoadOptions.isLoadingAll) {\r\n                        if (options.storeLoadOptions.group) {\r\n                            if (options.remoteOperations.grouping) {\r\n                                options.storeLoadOptions.groupSummary = summary.groupAggregates\r\n                            } else if (summary.groupAggregates.length) {\r\n                                options.remoteOperations.paging = false\r\n                            }\r\n                        }\r\n                        options.storeLoadOptions.totalSummary = summary.totalAggregates\r\n                    }\r\n                } else if (summary.totalAggregates.length || summary.groupAggregates.length && options.storeLoadOptions.group) {\r\n                    options.remoteOperations.paging = false\r\n                }\r\n            }\r\n            this.callBase.apply(this, arguments);\r\n            var cachedExtra = options.cachedData.extra;\r\n            if (cachedExtra && cachedExtra.summary && !options.isCustomLoading) {\r\n                options.storeLoadOptions.totalSummary = void 0\r\n            }\r\n        },\r\n        _handleDataLoadedCore: function(options) {\r\n            var groups = normalizeSortingInfo(options.storeLoadOptions.group || options.loadOptions.group || []);\r\n            var remoteOperations = options.remoteOperations || {};\r\n            var summary = this.summaryGetter()(remoteOperations);\r\n            if (!options.isCustomLoading || options.storeLoadOptions.isLoadingAll) {\r\n                if (remoteOperations.summary) {\r\n                    if (!remoteOperations.paging && groups.length && summary) {\r\n                        if (!remoteOperations.grouping) {\r\n                            calculateAggregates(this, {\r\n                                groupAggregates: summary.groupAggregates\r\n                            }, options.data, groups.length)\r\n                        }\r\n                        options.data = sortGroupsBySummary(options.data, groups, summary)\r\n                    }\r\n                } else if (!remoteOperations.paging && summary) {\r\n                    var _options$cachedData, _options$cachedData$e;\r\n                    var operationTypes = options.operationTypes || {};\r\n                    var hasOperations = Object.keys(operationTypes).some(type => operationTypes[type]);\r\n                    if (!hasOperations || !(null !== (_options$cachedData = options.cachedData) && void 0 !== _options$cachedData && null !== (_options$cachedData$e = _options$cachedData.extra) && void 0 !== _options$cachedData$e && _options$cachedData$e.summary) || groups.length && summary.groupAggregates.length) {\r\n                        var totalAggregates = calculateAggregates(this, summary, options.data, groups.length);\r\n                        options.extra = isPlainObject(options.extra) ? options.extra : {};\r\n                        options.extra.summary = totalAggregates;\r\n                        if (options.cachedData) {\r\n                            options.cachedData.extra = options.extra\r\n                        }\r\n                    }\r\n                    options.data = sortGroupsBySummary(options.data, groups, summary)\r\n                }\r\n            }\r\n            if (!options.isCustomLoading) {\r\n                this._totalAggregates = options.extra && options.extra.summary || this._totalAggregates\r\n            }\r\n            this.callBase(options)\r\n        }\r\n    }\r\n}();\r\ndataSourceAdapter.extend(SummaryDataSourceAdapterExtender);\r\ndataSourceAdapter.extend(SummaryDataSourceAdapterClientExtender);\r\ngridCore.registerModule(\"summary\", {\r\n    defaultOptions: function() {\r\n        return {\r\n            summary: {\r\n                groupItems: void 0,\r\n                totalItems: void 0,\r\n                calculateCustomSummary: void 0,\r\n                skipEmptyValues: true,\r\n                recalculateWhileEditing: false,\r\n                texts: {\r\n                    sum: messageLocalization.format(\"dxDataGrid-summarySum\"),\r\n                    sumOtherColumn: messageLocalization.format(\"dxDataGrid-summarySumOtherColumn\"),\r\n                    min: messageLocalization.format(\"dxDataGrid-summaryMin\"),\r\n                    minOtherColumn: messageLocalization.format(\"dxDataGrid-summaryMinOtherColumn\"),\r\n                    max: messageLocalization.format(\"dxDataGrid-summaryMax\"),\r\n                    maxOtherColumn: messageLocalization.format(\"dxDataGrid-summaryMaxOtherColumn\"),\r\n                    avg: messageLocalization.format(\"dxDataGrid-summaryAvg\"),\r\n                    avgOtherColumn: messageLocalization.format(\"dxDataGrid-summaryAvgOtherColumn\"),\r\n                    count: messageLocalization.format(\"dxDataGrid-summaryCount\")\r\n                }\r\n            },\r\n            sortByGroupSummaryInfo: void 0\r\n        }\r\n    },\r\n    views: {\r\n        footerView: FooterView\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                _isDataColumn: function(column) {\r\n                    return column && (!isDefined(column.groupIndex) || column.showWhenGrouped)\r\n                },\r\n                _isGroupFooterVisible: function() {\r\n                    var groupItems = this.option(\"summary.groupItems\") || [];\r\n                    for (var i = 0; i < groupItems.length; i++) {\r\n                        var groupItem = groupItems[i];\r\n                        var column = this._columnsController.columnOption(groupItem.showInColumn || groupItem.column);\r\n                        if (groupItem.showInGroupFooter && this._isDataColumn(column)) {\r\n                            return true\r\n                        }\r\n                    }\r\n                    return false\r\n                },\r\n                _processGroupItems: function(items, groupCount, options) {\r\n                    var data = options && options.data;\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    if (options) {\r\n                        if (void 0 === options.isGroupFooterVisible) {\r\n                            options.isGroupFooterVisible = this._isGroupFooterVisible()\r\n                        }\r\n                        if (data && data.items && options.isGroupFooterVisible && (options.collectContinuationItems || !data.isContinuationOnNextPage)) {\r\n                            result.push({\r\n                                rowType: DATAGRID_GROUP_FOOTER_ROW_TYPE,\r\n                                key: options.path.slice(),\r\n                                data: data,\r\n                                groupIndex: options.path.length - 1,\r\n                                values: []\r\n                            })\r\n                        }\r\n                    }\r\n                    return result\r\n                },\r\n                _processGroupItem: function(groupItem, options) {\r\n                    var that = this;\r\n                    if (!options.summaryGroupItems) {\r\n                        options.summaryGroupItems = that.option(\"summary.groupItems\") || []\r\n                    }\r\n                    if (\"group\" === groupItem.rowType) {\r\n                        var groupColumnIndex = -1;\r\n                        var afterGroupColumnIndex = -1;\r\n                        each(options.visibleColumns, (function(visibleIndex) {\r\n                            var prevColumn = options.visibleColumns[visibleIndex - 1];\r\n                            if (groupItem.groupIndex === this.groupIndex) {\r\n                                groupColumnIndex = this.index\r\n                            }\r\n                            if (visibleIndex > 0 && \"expand\" === prevColumn.command && \"expand\" !== this.command) {\r\n                                afterGroupColumnIndex = this.index\r\n                            }\r\n                        }));\r\n                        groupItem.summaryCells = this._calculateSummaryCells(options.summaryGroupItems, getGroupAggregates(groupItem.data), options.visibleColumns, (function(summaryItem, column) {\r\n                            if (summaryItem.showInGroupFooter) {\r\n                                return -1\r\n                            }\r\n                            if (summaryItem.alignByColumn && column && !isDefined(column.groupIndex) && column.index !== afterGroupColumnIndex) {\r\n                                return column.index\r\n                            } else {\r\n                                return groupColumnIndex\r\n                            }\r\n                        }), true)\r\n                    }\r\n                    if (groupItem.rowType === DATAGRID_GROUP_FOOTER_ROW_TYPE) {\r\n                        groupItem.summaryCells = this._calculateSummaryCells(options.summaryGroupItems, getGroupAggregates(groupItem.data), options.visibleColumns, (function(summaryItem, column) {\r\n                            return summaryItem.showInGroupFooter && that._isDataColumn(column) ? column.index : -1\r\n                        }))\r\n                    }\r\n                    return groupItem\r\n                },\r\n                _calculateSummaryCells: function(summaryItems, aggregates, visibleColumns, calculateTargetColumnIndex, isGroupRow) {\r\n                    var that = this;\r\n                    var summaryCells = [];\r\n                    var summaryCellsByColumns = {};\r\n                    each(summaryItems, (function(summaryIndex, summaryItem) {\r\n                        var column = that._columnsController.columnOption(summaryItem.column);\r\n                        var showInColumn = summaryItem.showInColumn && that._columnsController.columnOption(summaryItem.showInColumn) || column;\r\n                        var columnIndex = calculateTargetColumnIndex(summaryItem, showInColumn);\r\n                        if (columnIndex >= 0) {\r\n                            if (!summaryCellsByColumns[columnIndex]) {\r\n                                summaryCellsByColumns[columnIndex] = []\r\n                            }\r\n                            var aggregate = aggregates[summaryIndex];\r\n                            if (aggregate === aggregate) {\r\n                                var valueFormat;\r\n                                if (isDefined(summaryItem.valueFormat)) {\r\n                                    valueFormat = summaryItem.valueFormat\r\n                                } else if (\"count\" !== summaryItem.summaryType) {\r\n                                    valueFormat = gridCore.getFormatByDataType(column && column.dataType)\r\n                                }\r\n                                summaryCellsByColumns[columnIndex].push(extend({}, summaryItem, {\r\n                                    value: isString(aggregate) && column && column.deserializeValue ? column.deserializeValue(aggregate) : aggregate,\r\n                                    valueFormat: valueFormat,\r\n                                    columnCaption: column && column.index !== columnIndex ? column.caption : void 0\r\n                                }))\r\n                            }\r\n                        }\r\n                    }));\r\n                    if (!isEmptyObject(summaryCellsByColumns)) {\r\n                        visibleColumns.forEach((column, visibleIndex) => {\r\n                            var prevColumn = visibleColumns[visibleIndex - 1];\r\n                            var columnIndex = isGroupRow && (\"expand\" === (null === prevColumn || void 0 === prevColumn ? void 0 : prevColumn.command) || \"expand\" === column.command) ? null === prevColumn || void 0 === prevColumn ? void 0 : prevColumn.index : column.index;\r\n                            summaryCells.push(summaryCellsByColumns[columnIndex] || [])\r\n                        })\r\n                    }\r\n                    return summaryCells\r\n                },\r\n                _getSummaryCells: function(summaryTotalItems, totalAggregates) {\r\n                    var that = this;\r\n                    var columnsController = that._columnsController;\r\n                    return that._calculateSummaryCells(summaryTotalItems, totalAggregates, columnsController.getVisibleColumns(), (function(summaryItem, column) {\r\n                        return that._isDataColumn(column) ? column.index : -1\r\n                    }))\r\n                },\r\n                _updateItemsCore: function(change) {\r\n                    var summaryCells;\r\n                    var dataSource = this._dataSource;\r\n                    var footerItems = this._footerItems;\r\n                    var oldSummaryCells = footerItems && footerItems[0] && footerItems[0].summaryCells;\r\n                    var summaryTotalItems = this.option(\"summary.totalItems\");\r\n                    this._footerItems = [];\r\n                    if (dataSource && summaryTotalItems && summaryTotalItems.length) {\r\n                        var totalAggregates = dataSource.totalAggregates();\r\n                        summaryCells = this._getSummaryCells(summaryTotalItems, totalAggregates);\r\n                        if (change && change.repaintChangesOnly && oldSummaryCells) {\r\n                            change.totalColumnIndices = summaryCells.map((function(summaryCell, index) {\r\n                                if (JSON.stringify(summaryCell) !== JSON.stringify(oldSummaryCells[index])) {\r\n                                    return index\r\n                                }\r\n                                return -1\r\n                            })).filter(index => index >= 0)\r\n                        }\r\n                        if (summaryCells.length) {\r\n                            this._footerItems.push({\r\n                                rowType: \"totalFooter\",\r\n                                summaryCells: summaryCells\r\n                            })\r\n                        }\r\n                    }\r\n                    this.callBase(change)\r\n                },\r\n                _prepareUnsavedDataSelector: function(selector) {\r\n                    if (recalculateWhileEditing(this)) {\r\n                        var editingController = this.getController(\"editing\");\r\n                        if (editingController) {\r\n                            return function(data) {\r\n                                data = editingController.getUpdatedData(data);\r\n                                return selector(data)\r\n                            }\r\n                        }\r\n                    }\r\n                    return selector\r\n                },\r\n                _prepareAggregateSelector: function(selector, aggregator) {\r\n                    selector = this._prepareUnsavedDataSelector(selector);\r\n                    if (\"avg\" === aggregator || \"sum\" === aggregator) {\r\n                        return function(data) {\r\n                            var value = selector(data);\r\n                            return isDefined(value) ? Number(value) : value\r\n                        }\r\n                    }\r\n                    return selector\r\n                },\r\n                _getAggregates: function(summaryItems, remoteOperations) {\r\n                    var that = this;\r\n                    var columnsController = that.getController(\"columns\");\r\n                    var calculateCustomSummary = that.option(\"summary.calculateCustomSummary\");\r\n                    var commonSkipEmptyValues = that.option(\"summary.skipEmptyValues\");\r\n                    return map(summaryItems || [], (function(summaryItem) {\r\n                        var column = columnsController.columnOption(summaryItem.column);\r\n                        var calculateCellValue = column && column.calculateCellValue ? column.calculateCellValue.bind(column) : compileGetter(column ? column.dataField : summaryItem.column);\r\n                        var aggregator = summaryItem.summaryType || \"count\";\r\n                        var selector = summaryItem.column;\r\n                        var skipEmptyValues = isDefined(summaryItem.skipEmptyValues) ? summaryItem.skipEmptyValues : commonSkipEmptyValues;\r\n                        if (remoteOperations) {\r\n                            return {\r\n                                selector: summaryItem.column,\r\n                                summaryType: aggregator\r\n                            }\r\n                        } else {\r\n                            selector = that._prepareAggregateSelector(calculateCellValue, aggregator);\r\n                            if (\"custom\" === aggregator) {\r\n                                if (!calculateCustomSummary) {\r\n                                    errors.log(\"E1026\");\r\n                                    calculateCustomSummary = function() {}\r\n                                }\r\n                                var options = {\r\n                                    component: that.component,\r\n                                    name: summaryItem.name\r\n                                };\r\n                                calculateCustomSummary(options);\r\n                                options.summaryProcess = \"calculate\";\r\n                                aggregator = {\r\n                                    seed: function(groupIndex) {\r\n                                        options.summaryProcess = \"start\";\r\n                                        options.totalValue = void 0;\r\n                                        options.groupIndex = groupIndex;\r\n                                        delete options.value;\r\n                                        calculateCustomSummary(options);\r\n                                        return options.totalValue\r\n                                    },\r\n                                    step: function(totalValue, value) {\r\n                                        options.summaryProcess = \"calculate\";\r\n                                        options.totalValue = totalValue;\r\n                                        options.value = value;\r\n                                        calculateCustomSummary(options);\r\n                                        return options.totalValue\r\n                                    },\r\n                                    finalize: function(totalValue) {\r\n                                        options.summaryProcess = \"finalize\";\r\n                                        options.totalValue = totalValue;\r\n                                        delete options.value;\r\n                                        calculateCustomSummary(options);\r\n                                        return options.totalValue\r\n                                    }\r\n                                }\r\n                            }\r\n                            return {\r\n                                selector: selector,\r\n                                aggregator: aggregator,\r\n                                skipEmptyValues: skipEmptyValues\r\n                            }\r\n                        }\r\n                    }))\r\n                },\r\n                _addSortInfo: function(sortByGroups, groupColumn, selector, sortOrder) {\r\n                    if (groupColumn) {\r\n                        var groupIndex = groupColumn.groupIndex;\r\n                        sortOrder = sortOrder || groupColumn.sortOrder;\r\n                        if (isDefined(groupIndex)) {\r\n                            sortByGroups[groupIndex] = sortByGroups[groupIndex] || [];\r\n                            sortByGroups[groupIndex].push({\r\n                                selector: selector,\r\n                                desc: \"desc\" === sortOrder\r\n                            })\r\n                        }\r\n                    }\r\n                },\r\n                _findSummaryItem: function(summaryItems, name) {\r\n                    var summaryItemIndex = -1;\r\n                    if (isDefined(name)) {\r\n                        each(summaryItems || [], (function(index) {\r\n                            if (this.name === name || index === name || this.summaryType === name || this.column === name || (summaryItem = this, summaryType = summaryItem.summaryType, column = summaryItem.column, summaryType && column && summaryType + \"_\" + column) === name) {\r\n                                summaryItemIndex = index;\r\n                                return false\r\n                            }\r\n                            var summaryItem, summaryType, column\r\n                        }))\r\n                    }\r\n                    return summaryItemIndex\r\n                },\r\n                _getSummarySortByGroups: function(sortByGroupSummaryInfo, groupSummaryItems) {\r\n                    var that = this;\r\n                    var columnsController = that._columnsController;\r\n                    var groupColumns = columnsController.getGroupColumns();\r\n                    var sortByGroups = [];\r\n                    if (!groupSummaryItems || !groupSummaryItems.length) {\r\n                        return\r\n                    }\r\n                    each(sortByGroupSummaryInfo || [], (function() {\r\n                        var sortOrder = this.sortOrder;\r\n                        var groupColumn = this.groupColumn;\r\n                        var summaryItemIndex = that._findSummaryItem(groupSummaryItems, this.summaryItem);\r\n                        if (summaryItemIndex < 0) {\r\n                            return\r\n                        }\r\n                        var selector = function(data) {\r\n                            return getGroupAggregates(data)[summaryItemIndex]\r\n                        };\r\n                        if (isDefined(groupColumn)) {\r\n                            groupColumn = columnsController.columnOption(groupColumn);\r\n                            that._addSortInfo(sortByGroups, groupColumn, selector, sortOrder)\r\n                        } else {\r\n                            each(groupColumns, (function(groupIndex, groupColumn) {\r\n                                that._addSortInfo(sortByGroups, groupColumn, selector, sortOrder)\r\n                            }))\r\n                        }\r\n                    }));\r\n                    return sortByGroups\r\n                },\r\n                _createDataSourceAdapterCore: function(dataSource, remoteOperations) {\r\n                    var that = this;\r\n                    var dataSourceAdapter = this.callBase(dataSource, remoteOperations);\r\n                    dataSourceAdapter.summaryGetter((function(currentRemoteOperations) {\r\n                        return that._getSummaryOptions(currentRemoteOperations || remoteOperations)\r\n                    }));\r\n                    return dataSourceAdapter\r\n                },\r\n                _getSummaryOptions: function(remoteOperations) {\r\n                    var that = this;\r\n                    var groupSummaryItems = that.option(\"summary.groupItems\");\r\n                    var totalSummaryItems = that.option(\"summary.totalItems\");\r\n                    var sortByGroupSummaryInfo = that.option(\"sortByGroupSummaryInfo\");\r\n                    var groupAggregates = that._getAggregates(groupSummaryItems, remoteOperations && remoteOperations.grouping && remoteOperations.summary);\r\n                    var totalAggregates = that._getAggregates(totalSummaryItems, remoteOperations && remoteOperations.summary);\r\n                    if (groupAggregates.length || totalAggregates.length) {\r\n                        return {\r\n                            groupAggregates: groupAggregates,\r\n                            totalAggregates: totalAggregates,\r\n                            sortByGroups: function() {\r\n                                return that._getSummarySortByGroups(sortByGroupSummaryInfo, groupSummaryItems)\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                publicMethods: function() {\r\n                    var methods = this.callBase();\r\n                    methods.push(\"getTotalSummaryValue\");\r\n                    return methods\r\n                },\r\n                getTotalSummaryValue: function(summaryItemName) {\r\n                    var summaryItemIndex = this._findSummaryItem(this.option(\"summary.totalItems\"), summaryItemName);\r\n                    var aggregates = this._dataSource.totalAggregates();\r\n                    if (aggregates.length && summaryItemIndex > -1) {\r\n                        return aggregates[summaryItemIndex]\r\n                    }\r\n                },\r\n                optionChanged: function(args) {\r\n                    if (\"summary\" === args.name || \"sortByGroupSummaryInfo\" === args.name) {\r\n                        args.name = \"dataSource\"\r\n                    }\r\n                    this.callBase(args)\r\n                },\r\n                init: function() {\r\n                    this._footerItems = [];\r\n                    this.callBase()\r\n                },\r\n                footerItems: function() {\r\n                    return this._footerItems\r\n                }\r\n            },\r\n            editing: {\r\n                _refreshSummary: function() {\r\n                    if (recalculateWhileEditing(this) && !this.isSaving()) {\r\n                        this._dataController.refresh({\r\n                            load: true,\r\n                            changesOnly: true\r\n                        })\r\n                    }\r\n                },\r\n                _addChange: function(params) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    if (params.type) {\r\n                        this._refreshSummary()\r\n                    }\r\n                    return result\r\n                },\r\n                _removeChange: function() {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    this._refreshSummary();\r\n                    return result\r\n                },\r\n                cancelEditData: function() {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    this._refreshSummary();\r\n                    return result\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    row && $row.addClass(row.rowType === DATAGRID_GROUP_FOOTER_ROW_TYPE ? DATAGRID_GROUP_FOOTER_CLASS : \"\");\r\n                    return $row\r\n                },\r\n                _renderCells: function($row, options) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (\"group\" === options.row.rowType && options.row.summaryCells && options.row.summaryCells.length) {\r\n                        this._renderGroupSummaryCells($row, options)\r\n                    }\r\n                },\r\n                _hasAlignByColumnSummaryItems: function(columnIndex, options) {\r\n                    return !isDefined(options.columns[columnIndex].groupIndex) && options.row.summaryCells[columnIndex].length\r\n                },\r\n                _getAlignByColumnCellCount: function(groupCellColSpan, options) {\r\n                    var alignByColumnCellCount = 0;\r\n                    for (var i = 1; i < groupCellColSpan; i++) {\r\n                        var columnIndex = options.row.summaryCells.length - i;\r\n                        alignByColumnCellCount = this._hasAlignByColumnSummaryItems(columnIndex, options) ? i : alignByColumnCellCount\r\n                    }\r\n                    return alignByColumnCellCount\r\n                },\r\n                _renderGroupSummaryCells: function($row, options) {\r\n                    var $groupCell = $row.children().last();\r\n                    var groupCellColSpan = Number($groupCell.attr(\"colSpan\")) || 1;\r\n                    var alignByColumnCellCount = this._getAlignByColumnCellCount(groupCellColSpan, options);\r\n                    this._renderGroupSummaryCellsCore($groupCell, options, groupCellColSpan, alignByColumnCellCount)\r\n                },\r\n                _renderGroupSummaryCellsCore: function($groupCell, options, groupCellColSpan, alignByColumnCellCount) {\r\n                    if (alignByColumnCellCount > 0) {\r\n                        $groupCell.attr(\"colSpan\", groupCellColSpan - alignByColumnCellCount);\r\n                        for (var i = 0; i < alignByColumnCellCount; i++) {\r\n                            var columnIndex = options.columns.length - alignByColumnCellCount + i;\r\n                            this._renderCell($groupCell.parent(), extend({\r\n                                column: options.columns[columnIndex],\r\n                                columnIndex: this._getSummaryCellIndex(columnIndex, options.columns)\r\n                            }, options))\r\n                        }\r\n                    }\r\n                },\r\n                _getSummaryCellIndex: function(columnIndex) {\r\n                    return columnIndex\r\n                },\r\n                _getCellTemplate: function(options) {\r\n                    if (!options.column.command && !isDefined(options.column.groupIndex) && options.summaryItems && options.summaryItems.length) {\r\n                        return renderSummaryCell\r\n                    } else {\r\n                        return this.callBase(options)\r\n                    }\r\n                },\r\n                _getCellOptions: function(options) {\r\n                    var parameters = this.callBase(options);\r\n                    if (options.row.summaryCells) {\r\n                        return extend(parameters, getSummaryCellOptions(this, options))\r\n                    } else {\r\n                        return parameters\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_fixing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    name as wheelEventName\r\n} from \"../../events/core/wheel\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    move\r\n} from \"../../animation/translator\";\r\nimport Scrollable from \"../scroll_view/ui.scrollable\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar FIRST_CELL_CLASS = \"dx-first-cell\";\r\nvar LAST_CELL_CLASS = \"dx-last-cell\";\r\nvar HOVER_STATE_CLASS = \"dx-state-hover\";\r\nvar FIXED_COL_CLASS = \"dx-col-fixed\";\r\nvar FIXED_COLUMNS_CLASS = \"dx-fixed-columns\";\r\nvar POINTER_EVENTS_NONE_CLASS = \"dx-pointer-events-none\";\r\nvar COMMAND_TRANSPARENT = \"transparent\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar getTransparentColumnIndex = function(fixedColumns) {\r\n    var transparentColumnIndex = -1;\r\n    each(fixedColumns, (function(index, column) {\r\n        if (column.command === COMMAND_TRANSPARENT) {\r\n            transparentColumnIndex = index;\r\n            return false\r\n        }\r\n    }));\r\n    return transparentColumnIndex\r\n};\r\nvar normalizeColumnWidths = function(fixedColumns, widths, fixedWidths) {\r\n    var fixedColumnIndex = 0;\r\n    if (fixedColumns && widths && fixedWidths) {\r\n        for (var i = 0; i < fixedColumns.length; i++) {\r\n            if (fixedColumns[i].command === COMMAND_TRANSPARENT) {\r\n                fixedColumnIndex += fixedColumns[i].colspan\r\n            } else {\r\n                if (widths[fixedColumnIndex] < fixedWidths[i]) {\r\n                    widths[fixedColumnIndex] = fixedWidths[i]\r\n                }\r\n                fixedColumnIndex++\r\n            }\r\n        }\r\n    }\r\n    return widths\r\n};\r\nvar baseFixedColumns = {\r\n    init: function() {\r\n        this.callBase();\r\n        this._isFixedTableRendering = false;\r\n        this._isFixedColumns = false\r\n    },\r\n    _createCol: function(column) {\r\n        return this.callBase(column).toggleClass(FIXED_COL_CLASS, !!(this._isFixedTableRendering && (column.fixed || column.command && column.command !== COMMAND_TRANSPARENT)))\r\n    },\r\n    _correctColumnIndicesForFixedColumns: function(fixedColumns, change) {\r\n        var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n        var transparentColspan = fixedColumns[transparentColumnIndex].colspan;\r\n        var columnIndices = change && change.columnIndices;\r\n        if (columnIndices) {\r\n            change.columnIndices = columnIndices.map((function(columnIndices) {\r\n                if (columnIndices) {\r\n                    return columnIndices.map((function(columnIndex) {\r\n                        if (columnIndex < transparentColumnIndex) {\r\n                            return columnIndex\r\n                        } else if (columnIndex >= transparentColumnIndex + transparentColspan) {\r\n                            return columnIndex - transparentColspan + 1\r\n                        }\r\n                        return -1\r\n                    })).filter((function(columnIndex) {\r\n                        return columnIndex >= 0\r\n                    }))\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    _partialUpdateFixedTable(fixedColumns) {\r\n        var fixedTableElement = this._fixedTableElement;\r\n        var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n        var transparentColumn = fixedColumns[transparentColumnIndex];\r\n        var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n        var $rows = this._getRowElementsCore(fixedTableElement);\r\n        var $colgroup = fixedTableElement.children(\"colgroup\");\r\n        $colgroup.replaceWith(this._createColGroup(fixedColumns));\r\n        for (var i = 0; i < $rows.length; i++) {\r\n            var cellElements = $rows[i].childNodes;\r\n            var colIndex = columnIndexOffset + 1;\r\n            for (var j = 0; j < cellElements.length; j++) {\r\n                cellElements[j].setAttribute(\"aria-colindex\", colIndex);\r\n                if (j === transparentColumnIndex) {\r\n                    cellElements[j].setAttribute(\"colspan\", transparentColumn.colspan);\r\n                    colIndex += transparentColumn.colspan\r\n                } else {\r\n                    colIndex++\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _renderTable: function(options) {\r\n        var $fixedTable;\r\n        var fixedColumns = this.getFixedColumns();\r\n        this._isFixedColumns = !!fixedColumns.length;\r\n        var $table = this.callBase(options);\r\n        if (this._isFixedColumns) {\r\n            var change = null === options || void 0 === options ? void 0 : options.change;\r\n            this._isFixedTableRendering = true;\r\n            if (null !== change && void 0 !== change && change.virtualColumnsScrolling && true !== this.option(\"scrolling.legacyMode\")) {\r\n                this._partialUpdateFixedTable(fixedColumns)\r\n            } else {\r\n                var columnIndices = null === change || void 0 === change ? void 0 : change.columnIndices;\r\n                this._correctColumnIndicesForFixedColumns(fixedColumns, change);\r\n                $fixedTable = this._createTable(fixedColumns);\r\n                this._renderRows($fixedTable, extend({}, options, {\r\n                    columns: fixedColumns\r\n                }));\r\n                this._updateContent($fixedTable, change);\r\n                if (columnIndices) {\r\n                    change.columnIndices = columnIndices\r\n                }\r\n            }\r\n            this._isFixedTableRendering = false\r\n        } else {\r\n            this._fixedTableElement && this._fixedTableElement.parent().remove();\r\n            this._fixedTableElement = null\r\n        }\r\n        return $table\r\n    },\r\n    _renderRow: function($table, options) {\r\n        var fixedCorrection;\r\n        var cells = options.row.cells;\r\n        this.callBase.apply(this, arguments);\r\n        if (this._isFixedTableRendering && cells && cells.length) {\r\n            fixedCorrection = 0;\r\n            var fixedCells = options.row.cells || [];\r\n            cells = cells.slice();\r\n            options.row.cells = cells;\r\n            for (var i = 0; i < fixedCells.length; i++) {\r\n                if (fixedCells[i].column && fixedCells[i].column.command === COMMAND_TRANSPARENT) {\r\n                    fixedCorrection = (fixedCells[i].column.colspan || 1) - 1;\r\n                    continue\r\n                }\r\n                cells[i + fixedCorrection] = fixedCells[i]\r\n            }\r\n        }\r\n    },\r\n    _createCell: function(options) {\r\n        var that = this;\r\n        var column = options.column;\r\n        var columnCommand = column && column.command;\r\n        var rowType = options.rowType;\r\n        var $cell = that.callBase.apply(that, arguments);\r\n        var fixedColumns;\r\n        var prevFixedColumn;\r\n        var transparentColumnIndex;\r\n        if (that._isFixedTableRendering || \"filter\" === rowType) {\r\n            fixedColumns = that.getFixedColumns();\r\n            transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n            prevFixedColumn = fixedColumns[transparentColumnIndex - 1]\r\n        }\r\n        if (that._isFixedTableRendering) {\r\n            if (columnCommand === COMMAND_TRANSPARENT) {\r\n                $cell.addClass(POINTER_EVENTS_NONE_CLASS).toggleClass(FIRST_CELL_CLASS, 0 === transparentColumnIndex || prevFixedColumn && \"expand\" === prevFixedColumn.command).toggleClass(LAST_CELL_CLASS, fixedColumns.length && transparentColumnIndex === fixedColumns.length - 1);\r\n                if (\"freeSpace\" !== rowType) {\r\n                    gridCoreUtils.setEmptyText($cell)\r\n                }\r\n            }\r\n        } else if (\"filter\" === rowType) {\r\n            $cell.toggleClass(FIRST_CELL_CLASS, options.columnIndex === transparentColumnIndex)\r\n        }\r\n        var isRowAltStyle = that.option(\"rowAlternationEnabled\") && options.isAltRow;\r\n        if (browser.mozilla && options.column.fixed && \"group\" !== options.rowType && !isRowAltStyle) {\r\n            $cell.addClass(FIXED_COL_CLASS)\r\n        }\r\n        return $cell\r\n    },\r\n    _wrapTableInScrollContainer: function() {\r\n        var $scrollContainer = this.callBase.apply(this, arguments);\r\n        if (this._isFixedTableRendering) {\r\n            $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_FIXED_CLASS))\r\n        }\r\n        return $scrollContainer\r\n    },\r\n    _renderCellContent: function($cell, options) {\r\n        var isEmptyCell;\r\n        var column = options.column;\r\n        var isFixedTableRendering = this._isFixedTableRendering;\r\n        var isGroupCell = \"group\" === options.rowType && isDefined(column.groupIndex);\r\n        if (isFixedTableRendering && isGroupCell && !column.command && !column.groupCellTemplate) {\r\n            $cell.css(\"pointerEvents\", \"none\")\r\n        }\r\n        if (!isFixedTableRendering && this._isFixedColumns) {\r\n            isEmptyCell = column.fixed || column.command && false !== column.fixed;\r\n            if (isGroupCell) {\r\n                isEmptyCell = false;\r\n                if (options.row.summaryCells && options.row.summaryCells.length) {\r\n                    var columns = this._columnsController.getVisibleColumns();\r\n                    var alignByFixedColumnCellCount = this._getAlignByColumnCellCount ? this._getAlignByColumnCellCount(column.colspan, {\r\n                        columns: columns,\r\n                        row: options.row,\r\n                        isFixed: true\r\n                    }) : 0;\r\n                    if (alignByFixedColumnCellCount > 0) {\r\n                        var transparentColumnIndex = getTransparentColumnIndex(this._columnsController.getFixedColumns());\r\n                        isEmptyCell = columns.length - alignByFixedColumnCellCount < transparentColumnIndex\r\n                    }\r\n                }\r\n            }\r\n            if (isEmptyCell) {\r\n                if (column.command && \"buttons\" !== column.type || \"group\" === options.rowType) {\r\n                    $cell.html(\"&nbsp;\").addClass(column.cssClass);\r\n                    return\r\n                } else {\r\n                    $cell.addClass(\"dx-hidden-cell\")\r\n                }\r\n            }\r\n        }\r\n        if (column.command !== COMMAND_TRANSPARENT) {\r\n            this.callBase($cell, options)\r\n        }\r\n    },\r\n    _getCellElementsCore: function(rowIndex) {\r\n        var cellElements = this.callBase.apply(this, arguments);\r\n        var isGroupRow = cellElements.parent().hasClass(GROUP_ROW_CLASS);\r\n        var headerRowIndex = \"columnHeadersView\" === this.name ? rowIndex : void 0;\r\n        if (this._fixedTableElement && cellElements) {\r\n            var fixedColumns = this.getFixedColumns(headerRowIndex);\r\n            var fixedCellElements = this._getRowElements(this._fixedTableElement).eq(rowIndex).children(\"td\");\r\n            each(fixedCellElements, (columnIndex, cell) => {\r\n                if (isGroupRow) {\r\n                    if (cellElements[columnIndex] && \"hidden\" !== cell.style.visibility) {\r\n                        cellElements[columnIndex] = cell\r\n                    }\r\n                } else {\r\n                    var fixedColumn = fixedColumns[columnIndex];\r\n                    if (fixedColumn) {\r\n                        if (fixedColumn.command === COMMAND_TRANSPARENT) {\r\n                            if (fixedCellElements.eq(columnIndex).hasClass(MASTER_DETAIL_CELL_CLASS)) {\r\n                                cellElements[columnIndex] = cell || cellElements[columnIndex]\r\n                            }\r\n                        } else {\r\n                            var fixedColumnIndex = this._columnsController.getVisibleIndexByColumn(fixedColumn, headerRowIndex);\r\n                            cellElements[fixedColumnIndex] = cell || cellElements[fixedColumnIndex]\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        return cellElements\r\n    },\r\n    getColumnWidths: function() {\r\n        var fixedWidths;\r\n        var result = this.callBase();\r\n        var fixedColumns = this.getFixedColumns();\r\n        if (this._fixedTableElement && result.length) {\r\n            fixedWidths = this.callBase(this._fixedTableElement)\r\n        }\r\n        return normalizeColumnWidths(fixedColumns, result, fixedWidths)\r\n    },\r\n    getTableElement: function() {\r\n        var tableElement = this._isFixedTableRendering ? this._fixedTableElement : this.callBase();\r\n        return tableElement\r\n    },\r\n    setTableElement: function(tableElement) {\r\n        if (this._isFixedTableRendering) {\r\n            this._fixedTableElement = tableElement.addClass(POINTER_EVENTS_NONE_CLASS)\r\n        } else {\r\n            this.callBase(tableElement)\r\n        }\r\n    },\r\n    getColumns: function(rowIndex, $tableElement) {\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if (this._isFixedTableRendering || $tableElement && $tableElement.closest(\"table\").parent(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).length) {\r\n            return this.getFixedColumns(rowIndex)\r\n        }\r\n        return this.callBase(rowIndex, $tableElement)\r\n    },\r\n    getRowIndex: function($row) {\r\n        var $fixedTable = this._fixedTableElement;\r\n        if ($fixedTable && $fixedTable.find($row).length) {\r\n            return this._getRowElements($fixedTable).index($row)\r\n        }\r\n        return this.callBase($row)\r\n    },\r\n    getTableElements: function() {\r\n        var result = this.callBase.apply(this, arguments);\r\n        if (this._fixedTableElement) {\r\n            result = $([result.get(0), this._fixedTableElement.get(0)])\r\n        }\r\n        return result\r\n    },\r\n    getFixedColumns: function(rowIndex) {\r\n        return this._columnsController.getFixedColumns(rowIndex)\r\n    },\r\n    getFixedColumnsOffset: function() {\r\n        var offset = {\r\n            left: 0,\r\n            right: 0\r\n        };\r\n        var $transparentColumn;\r\n        if (this._fixedTableElement) {\r\n            $transparentColumn = this.getTransparentColumnElement();\r\n            var positionTransparentColumn = $transparentColumn.position();\r\n            offset = {\r\n                left: positionTransparentColumn.left,\r\n                right: getOuterWidth(this.element(), true) - (getOuterWidth($transparentColumn, true) + positionTransparentColumn.left)\r\n            }\r\n        }\r\n        return offset\r\n    },\r\n    getTransparentColumnElement: function() {\r\n        return this._fixedTableElement && this._fixedTableElement.find(\".\" + POINTER_EVENTS_NONE_CLASS).first()\r\n    },\r\n    getFixedTableElement: function() {\r\n        return this._fixedTableElement\r\n    },\r\n    isFixedColumns: function() {\r\n        return this._isFixedColumns\r\n    },\r\n    _resizeCore: function() {\r\n        this.callBase();\r\n        this.synchronizeRows()\r\n    },\r\n    setColumnWidths: function(options) {\r\n        var columns;\r\n        var visibleColumns = this._columnsController.getVisibleColumns();\r\n        var widths = options.widths;\r\n        var isWidthsSynchronized = widths && widths.length && isDefined(visibleColumns[0].visibleWidth);\r\n        var optionNames = options.optionNames;\r\n        var isColumnWidthChanged = optionNames && optionNames.width;\r\n        var useVisibleColumns = false;\r\n        this.callBase.apply(this, arguments);\r\n        if (this._fixedTableElement) {\r\n            var hasAutoWidth = widths && widths.some((function(width) {\r\n                return \"auto\" === width\r\n            }));\r\n            useVisibleColumns = hasAutoWidth && (!isWidthsSynchronized || !this.isScrollbarVisible(true));\r\n            if (useVisibleColumns) {\r\n                columns = visibleColumns\r\n            }\r\n            this.callBase(extend({}, options, {\r\n                $tableElement: this._fixedTableElement,\r\n                columns: columns,\r\n                fixed: true\r\n            }))\r\n        }\r\n        if (isWidthsSynchronized || isColumnWidthChanged && this.option(\"wordWrapEnabled\")) {\r\n            this.synchronizeRows()\r\n        }\r\n    },\r\n    _createColGroup: function(columns) {\r\n        if (this._isFixedTableRendering && !this.option(\"columnAutoWidth\")) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var useVisibleColumns = visibleColumns.filter((function(column) {\r\n                return !column.width\r\n            })).length;\r\n            if (useVisibleColumns) {\r\n                columns = visibleColumns\r\n            }\r\n        }\r\n        return this.callBase(columns)\r\n    },\r\n    _getClientHeight: function(element) {\r\n        var boundingClientRectElement = element.getBoundingClientRect && getBoundingRect(element);\r\n        return boundingClientRectElement && boundingClientRectElement.height ? boundingClientRectElement.height : element.clientHeight\r\n    },\r\n    synchronizeRows: function() {\r\n        var rowHeights = [];\r\n        var fixedRowHeights = [];\r\n        var rowIndex;\r\n        var $rowElements;\r\n        var $fixedRowElements;\r\n        var $contentElement;\r\n        if (this._isFixedColumns && this._tableElement && this._fixedTableElement) {\r\n            var heightTable = this._getClientHeight(this._tableElement.get(0));\r\n            var heightFixedTable = this._getClientHeight(this._fixedTableElement.get(0));\r\n            $rowElements = this._getRowElements(this._tableElement);\r\n            $fixedRowElements = this._getRowElements(this._fixedTableElement);\r\n            $contentElement = this._findContentElement();\r\n            if (heightTable !== heightFixedTable) {\r\n                $contentElement && $contentElement.css(\"height\", heightTable);\r\n                $rowElements.css(\"height\", \"\");\r\n                $fixedRowElements.css(\"height\", \"\");\r\n                for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\r\n                    rowHeights.push(this._getClientHeight($rowElements.get(rowIndex)));\r\n                    fixedRowHeights.push(this._getClientHeight($fixedRowElements.get(rowIndex)))\r\n                }\r\n                for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\r\n                    var rowHeight = rowHeights[rowIndex];\r\n                    var fixedRowHeight = fixedRowHeights[rowIndex];\r\n                    if (rowHeight > fixedRowHeight) {\r\n                        $fixedRowElements.eq(rowIndex).css(\"height\", rowHeight)\r\n                    } else if (rowHeight < fixedRowHeight) {\r\n                        $rowElements.eq(rowIndex).css(\"height\", fixedRowHeight)\r\n                    }\r\n                }\r\n                $contentElement && $contentElement.css(\"height\", \"\")\r\n            }\r\n        }\r\n    },\r\n    setScrollerSpacing: function(width) {\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        this.callBase(width);\r\n        this.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).css({\r\n            paddingLeft: rtlEnabled ? width : \"\",\r\n            paddingRight: !rtlEnabled ? width : \"\"\r\n        })\r\n    }\r\n};\r\nvar ColumnHeadersViewFixedColumnsExtender = extend({}, baseFixedColumns, {\r\n    _getRowVisibleColumns: function(rowIndex) {\r\n        if (this._isFixedTableRendering) {\r\n            return this.getFixedColumns(rowIndex)\r\n        }\r\n        return this.callBase(rowIndex)\r\n    },\r\n    getContextMenuItems: function(options) {\r\n        var column = options.column;\r\n        var columnFixingOptions = this.option(\"columnFixing\");\r\n        var items = this.callBase(options);\r\n        if (options.row && \"header\" === options.row.rowType) {\r\n            if (true === columnFixingOptions.enabled && column && column.allowFixing) {\r\n                var onItemClick = params => {\r\n                    switch (params.itemData.value) {\r\n                        case \"none\":\r\n                            this._columnsController.columnOption(column.index, \"fixed\", false);\r\n                            break;\r\n                        case \"left\":\r\n                            this._columnsController.columnOption(column.index, {\r\n                                fixed: true,\r\n                                fixedPosition: \"left\"\r\n                            });\r\n                            break;\r\n                        case \"right\":\r\n                            this._columnsController.columnOption(column.index, {\r\n                                fixed: true,\r\n                                fixedPosition: \"right\"\r\n                            })\r\n                    }\r\n                };\r\n                items = items || [];\r\n                items.push({\r\n                    text: columnFixingOptions.texts.fix,\r\n                    beginGroup: true,\r\n                    items: [{\r\n                        text: columnFixingOptions.texts.leftPosition,\r\n                        value: \"left\",\r\n                        disabled: column.fixed && (!column.fixedPosition || \"left\" === column.fixedPosition),\r\n                        onItemClick: onItemClick\r\n                    }, {\r\n                        text: columnFixingOptions.texts.rightPosition,\r\n                        value: \"right\",\r\n                        disabled: column.fixed && \"right\" === column.fixedPosition,\r\n                        onItemClick: onItemClick\r\n                    }]\r\n                }, {\r\n                    text: columnFixingOptions.texts.unfix,\r\n                    value: \"none\",\r\n                    disabled: !column.fixed,\r\n                    onItemClick: onItemClick\r\n                })\r\n            }\r\n        }\r\n        return items\r\n    },\r\n    getFixedColumnElements: function(rowIndex) {\r\n        if (isDefined(rowIndex)) {\r\n            return this._fixedTableElement && this._getRowElements(this._fixedTableElement).eq(rowIndex).children()\r\n        }\r\n        var columnElements = this.getColumnElements();\r\n        var $transparentColumnElement = this.getTransparentColumnElement();\r\n        if (columnElements && $transparentColumnElement && $transparentColumnElement.length) {\r\n            var transparentColumnIndex = getTransparentColumnIndex(this.getFixedColumns());\r\n            columnElements.splice(transparentColumnIndex, $transparentColumnElement.get(0).colSpan, $transparentColumnElement.get(0))\r\n        }\r\n        return columnElements\r\n    },\r\n    getColumnWidths: function() {\r\n        var fixedWidths;\r\n        var result = this.callBase();\r\n        var $fixedColumnElements = this.getFixedColumnElements();\r\n        var fixedColumns = this.getFixedColumns();\r\n        if (this._fixedTableElement) {\r\n            if ($fixedColumnElements && $fixedColumnElements.length) {\r\n                fixedWidths = this._getWidths($fixedColumnElements)\r\n            } else {\r\n                fixedWidths = this.callBase(this._fixedTableElement)\r\n            }\r\n        }\r\n        return normalizeColumnWidths(fixedColumns, result, fixedWidths)\r\n    }\r\n});\r\nvar RowsViewFixedColumnsExtender = extend({}, baseFixedColumns, {\r\n    _detachHoverEvents: function() {\r\n        this._fixedTableElement && eventsEngine.off(this._fixedTableElement, \"mouseover mouseout\", \".dx-data-row\");\r\n        this._tableElement && eventsEngine.off(this._tableElement, \"mouseover mouseout\", \".dx-data-row\")\r\n    },\r\n    _attachHoverEvents: function() {\r\n        var that = this;\r\n        var attachHoverEvent = function($table) {\r\n            eventsEngine.on($table, \"mouseover mouseout\", \".dx-data-row\", that.createAction((function(args) {\r\n                var event = args.event;\r\n                var rowIndex = that.getRowIndex($(event.target).closest(\".dx-row\"));\r\n                var isHover = \"mouseover\" === event.type;\r\n                if (rowIndex >= 0) {\r\n                    that._tableElement && that._getRowElements(that._tableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover);\r\n                    that._fixedTableElement && that._getRowElements(that._fixedTableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover)\r\n                }\r\n            })))\r\n        };\r\n        if (that._fixedTableElement && that._tableElement) {\r\n            attachHoverEvent(that._fixedTableElement);\r\n            attachHoverEvent(that._tableElement)\r\n        }\r\n    },\r\n    _findContentElement: function() {\r\n        var that = this;\r\n        var $content;\r\n        var scrollTop;\r\n        var contentClass = that.addWidgetPrefix(CONTENT_CLASS);\r\n        var element = that.element();\r\n        var scrollDelay = browser.mozilla ? 60 : 0;\r\n        if (element && that._isFixedTableRendering) {\r\n            $content = element.children(\".\" + contentClass);\r\n            var scrollable = that.getScrollable();\r\n            if (!$content.length && scrollable) {\r\n                $content = $(\"<div>\").addClass(contentClass);\r\n                eventsEngine.on($content, \"scroll\", (function(e) {\r\n                    clearTimeout(that._fixedScrollTimeout);\r\n                    that._fixedScrollTimeout = setTimeout((function() {\r\n                        scrollTop = $(e.target).scrollTop();\r\n                        scrollable.scrollTo({\r\n                            y: scrollTop\r\n                        })\r\n                    }), scrollDelay)\r\n                }));\r\n                eventsEngine.on($content, wheelEventName, (function(e) {\r\n                    var $nearestScrollable = $(e.target).closest(\".dx-scrollable\");\r\n                    var shouldScroll = false;\r\n                    if (scrollable && scrollable.$element().is($nearestScrollable)) {\r\n                        shouldScroll = true\r\n                    } else {\r\n                        var nearestScrollableInstance = $nearestScrollable.length && Scrollable.getInstance($nearestScrollable.get(0));\r\n                        var nearestScrollableHasVerticalScrollbar = nearestScrollableInstance && nearestScrollableInstance.scrollHeight() - nearestScrollableInstance.clientHeight() > 0;\r\n                        shouldScroll = nearestScrollableInstance && !nearestScrollableHasVerticalScrollbar\r\n                    }\r\n                    if (shouldScroll) {\r\n                        scrollTop = scrollable.scrollTop();\r\n                        scrollable.scrollTo({\r\n                            y: scrollTop - e.delta\r\n                        });\r\n                        if (scrollable.scrollTop() > 0 && scrollable.scrollTop() + scrollable.clientHeight() < scrollable.scrollHeight() + that.getScrollbarWidth()) {\r\n                            return false\r\n                        }\r\n                    }\r\n                }));\r\n                $content.appendTo(element)\r\n            }\r\n            return $content\r\n        }\r\n        return that.callBase()\r\n    },\r\n    _updateScrollable: function() {\r\n        this.callBase();\r\n        var scrollable = this.getScrollable();\r\n        if (null !== scrollable && void 0 !== scrollable && scrollable._disposed) {\r\n            return\r\n        }\r\n        var scrollTop = scrollable && scrollable.scrollOffset().top;\r\n        this._updateFixedTablePosition(scrollTop)\r\n    },\r\n    _renderContent: function(contentElement, tableElement) {\r\n        if (this._isFixedTableRendering) {\r\n            return contentElement.empty().addClass(this.addWidgetPrefix(CONTENT_CLASS) + \" \" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).append(tableElement)\r\n        }\r\n        return this.callBase(contentElement, tableElement)\r\n    },\r\n    _getGroupCellOptions: function(options) {\r\n        if (this._isFixedTableRendering) {\r\n            return this.callBase(extend({}, options, {\r\n                columns: this._columnsController.getVisibleColumns()\r\n            }))\r\n        }\r\n        return this.callBase(options)\r\n    },\r\n    _renderGroupedCells: function($row, options) {\r\n        return this.callBase($row, extend({}, options, {\r\n            columns: this._columnsController.getVisibleColumns()\r\n        }))\r\n    },\r\n    _renderGroupSummaryCells: function($row, options) {\r\n        if (this._isFixedTableRendering) {\r\n            this.callBase($row, extend({}, options, {\r\n                columns: this._columnsController.getVisibleColumns()\r\n            }))\r\n        } else {\r\n            this.callBase($row, options)\r\n        }\r\n    },\r\n    _hasAlignByColumnSummaryItems: function(columnIndex, options) {\r\n        var result = this.callBase.apply(this, arguments);\r\n        var column = options.columns[columnIndex];\r\n        if (options.isFixed) {\r\n            return column.fixed && (result || \"right\" === column.fixedPosition)\r\n        }\r\n        return result && (!this._isFixedColumns || !column.fixed)\r\n    },\r\n    _renderGroupSummaryCellsCore: function($groupCell, options, groupCellColSpan, alignByColumnCellCount) {\r\n        var alignByFixedColumnCellCount;\r\n        if (this._isFixedTableRendering) {\r\n            options.isFixed = true;\r\n            alignByFixedColumnCellCount = this._getAlignByColumnCellCount(groupCellColSpan, options);\r\n            options.isFixed = false;\r\n            var startColumnIndex = options.columns.length - alignByFixedColumnCellCount;\r\n            options = extend({}, options, {\r\n                columns: this.getFixedColumns()\r\n            });\r\n            var transparentColumnIndex = getTransparentColumnIndex(options.columns);\r\n            if (startColumnIndex < transparentColumnIndex) {\r\n                alignByFixedColumnCellCount -= options.columns[transparentColumnIndex].colspan - 1 || 0;\r\n                groupCellColSpan -= options.columns[transparentColumnIndex].colspan - 1 || 0\r\n            } else if (alignByColumnCellCount > 0) {\r\n                $groupCell.css(\"visibility\", \"hidden\")\r\n            }\r\n            alignByColumnCellCount = alignByFixedColumnCellCount\r\n        }\r\n        this.callBase($groupCell, options, groupCellColSpan, alignByColumnCellCount)\r\n    },\r\n    _getSummaryCellIndex: function(columnIndex, columns) {\r\n        if (this._isFixedTableRendering) {\r\n            var transparentColumnIndex = getTransparentColumnIndex(columns);\r\n            if (columnIndex > transparentColumnIndex) {\r\n                columnIndex += columns[transparentColumnIndex].colspan - 1\r\n            }\r\n            return columnIndex\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _renderCore: function(change) {\r\n        this._detachHoverEvents();\r\n        this.callBase(change);\r\n        var isFixedColumns = this._isFixedColumns;\r\n        this.element().toggleClass(FIXED_COLUMNS_CLASS, isFixedColumns);\r\n        if (this.option(\"hoverStateEnabled\") && isFixedColumns) {\r\n            this._attachHoverEvents()\r\n        }\r\n    },\r\n    setRowsOpacity: function(columnIndex, value) {\r\n        this.callBase(columnIndex, value);\r\n        var $rows = this._getRowElements(this._fixedTableElement);\r\n        this._setRowsOpacityCore($rows, this.getFixedColumns(), columnIndex, value)\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        if (\"hoverStateEnabled\" === args.name && this._isFixedColumns) {\r\n            args.value ? this._attachHoverEvents() : this._detachHoverEvents()\r\n        }\r\n    },\r\n    getCellIndex: function($cell) {\r\n        var $fixedTable = this._fixedTableElement;\r\n        var cellIndex = 0;\r\n        if ($fixedTable && $cell.is(\"td\") && $cell.closest($fixedTable).length) {\r\n            var columns = this.getFixedColumns();\r\n            each(columns, (function(index, column) {\r\n                if (index === $cell[0].cellIndex) {\r\n                    return false\r\n                }\r\n                if (column.colspan) {\r\n                    cellIndex += column.colspan;\r\n                    return\r\n                }\r\n                cellIndex++\r\n            }));\r\n            return cellIndex\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _updateFixedTablePosition: function(scrollTop, needFocus) {\r\n        if (this._fixedTableElement && this._tableElement) {\r\n            var $focusedElement;\r\n            var editorFactory = this.getController(\"editorFactory\");\r\n            this._fixedTableElement.parent().scrollTop(scrollTop);\r\n            if (needFocus && editorFactory) {\r\n                $focusedElement = editorFactory.focus();\r\n                $focusedElement && editorFactory.focus($focusedElement)\r\n            }\r\n        }\r\n    },\r\n    setScrollerSpacing: function(vWidth, hWidth) {\r\n        var styles = {\r\n            marginBottom: 0\r\n        };\r\n        var $fixedContent = this.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\r\n        if ($fixedContent.length && this._fixedTableElement) {\r\n            $fixedContent.css(styles);\r\n            this._fixedTableElement.css(styles);\r\n            styles[this.option(\"rtlEnabled\") ? \"marginLeft\" : \"marginRight\"] = vWidth;\r\n            styles.marginBottom = hWidth;\r\n            var useNativeScrolling = this._scrollable && this._scrollable.option(\"useNative\");\r\n            (useNativeScrolling ? $fixedContent : this._fixedTableElement).css(styles)\r\n        }\r\n    },\r\n    _getElasticScrollTop: function(e) {\r\n        var elasticScrollTop = 0;\r\n        var scrollbarWidth = this.getScrollbarWidth(true);\r\n        if (e.scrollOffset.top < 0) {\r\n            elasticScrollTop = -e.scrollOffset.top\r\n        } else if (e.reachedBottom) {\r\n            var scrollableContent = this._findContentElement();\r\n            var $scrollableContainer = $(e.component.container());\r\n            var maxScrollTop = Math.max(getHeight(scrollableContent) + scrollbarWidth - getHeight($scrollableContainer), 0);\r\n            elasticScrollTop = maxScrollTop - e.scrollOffset.top\r\n        }\r\n        return elasticScrollTop\r\n    },\r\n    _applyElasticScrolling: function(e) {\r\n        if (this._fixedTableElement) {\r\n            var elasticScrollTop = this._getElasticScrollTop(e);\r\n            if (0 !== Math.ceil(elasticScrollTop)) {\r\n                move(this._fixedTableElement, {\r\n                    top: elasticScrollTop\r\n                })\r\n            } else {\r\n                this._fixedTableElement.css(\"transform\", \"\")\r\n            }\r\n        }\r\n    },\r\n    _handleScroll: function(e) {\r\n        this._updateFixedTablePosition(e.scrollOffset.top, true);\r\n        this._applyElasticScrolling(e);\r\n        this.callBase(e)\r\n    },\r\n    _updateContentPosition: function(isRender) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!isRender) {\r\n            this._updateFixedTablePosition(this._scrollTop)\r\n        }\r\n    },\r\n    _afterRowPrepared: function(e) {\r\n        if (this._isFixedTableRendering) {\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _scrollToElement: function($element) {\r\n        this.callBase($element, this.getFixedColumnsOffset())\r\n    },\r\n    dispose: function() {\r\n        this.callBase.apply(this, arguments);\r\n        clearTimeout(this._fixedScrollTimeout)\r\n    }\r\n});\r\nvar FooterViewFixedColumnsExtender = baseFixedColumns;\r\nexport var columnFixingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            columnFixing: {\r\n                enabled: false,\r\n                texts: {\r\n                    fix: messageLocalization.format(\"dxDataGrid-columnFixingFix\"),\r\n                    unfix: messageLocalization.format(\"dxDataGrid-columnFixingUnfix\"),\r\n                    leftPosition: messageLocalization.format(\"dxDataGrid-columnFixingLeftPosition\"),\r\n                    rightPosition: messageLocalization.format(\"dxDataGrid-columnFixingRightPosition\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFixedColumnsExtender,\r\n            rowsView: RowsViewFixedColumnsExtender,\r\n            footerView: FooterViewFixedColumnsExtender\r\n        },\r\n        controllers: function() {\r\n            var normalizeColumnIndicesByPoints = function(columns, fixedColumns, pointsByColumns) {\r\n                var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n                var correctIndex = columns.length - fixedColumns.length;\r\n                each(pointsByColumns, (function(_, point) {\r\n                    if (point.index > transparentColumnIndex) {\r\n                        point.columnIndex += correctIndex;\r\n                        point.index += correctIndex\r\n                    }\r\n                }));\r\n                return pointsByColumns\r\n            };\r\n            return {\r\n                draggingHeader: {\r\n                    _generatePointsByColumns: function(options) {\r\n                        var visibleColumns = options.columns;\r\n                        var targetDraggingPanel = options.targetDraggingPanel;\r\n                        if (targetDraggingPanel && \"headers\" === targetDraggingPanel.getName() && targetDraggingPanel.isFixedColumns()) {\r\n                            if (options.sourceColumn.fixed) {\r\n                                if (!options.rowIndex) {\r\n                                    options.columnElements = targetDraggingPanel.getFixedColumnElements(0)\r\n                                }\r\n                                options.columns = targetDraggingPanel.getFixedColumns(options.rowIndex);\r\n                                var pointsByColumns = this.callBase(options);\r\n                                normalizeColumnIndicesByPoints(visibleColumns, options.columns, pointsByColumns);\r\n                                return pointsByColumns\r\n                            }\r\n                        }\r\n                        return this.callBase(options)\r\n                    },\r\n                    _pointCreated: function(point, columns, location, sourceColumn) {\r\n                        var result = this.callBase.apply(this, arguments);\r\n                        var targetColumn = columns[point.columnIndex];\r\n                        var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\r\n                        if (!result && \"headers\" === location && $transparentColumn && $transparentColumn.length) {\r\n                            var boundingRect = getBoundingRect($transparentColumn.get(0));\r\n                            if (sourceColumn && sourceColumn.fixed) {\r\n                                return \"right\" === sourceColumn.fixedPosition ? point.x < boundingRect.right : point.x > boundingRect.left\r\n                            } else {\r\n                                if (targetColumn && targetColumn.fixed && \"right\" !== targetColumn.fixedPosition) {\r\n                                    return true\r\n                                }\r\n                                return point.x < boundingRect.left || point.x > boundingRect.right\r\n                            }\r\n                        }\r\n                        return result\r\n                    }\r\n                },\r\n                columnsResizer: {\r\n                    _generatePointsByColumns: function() {\r\n                        var that = this;\r\n                        var columnsController = that._columnsController;\r\n                        var columns = columnsController && that._columnsController.getVisibleColumns();\r\n                        var fixedColumns = columnsController && that._columnsController.getFixedColumns();\r\n                        var cells = that._columnHeadersView.getFixedColumnElements();\r\n                        var pointsByFixedColumns = [];\r\n                        that.callBase();\r\n                        if (cells && cells.length > 0) {\r\n                            pointsByFixedColumns = gridCoreUtils.getPointsByColumns(cells, (function(point) {\r\n                                return that._pointCreated(point, cells.length, fixedColumns)\r\n                            }));\r\n                            that._pointsByFixedColumns = normalizeColumnIndicesByPoints(columns, fixedColumns, pointsByFixedColumns)\r\n                        }\r\n                    },\r\n                    _pointCreated: function(point, cellsLength, columns) {\r\n                        var isWidgetResizingMode = \"widget\" === this.option(\"columnResizingMode\");\r\n                        if (point.index > 0 && point.index < cellsLength) {\r\n                            var currentColumn = columns[point.columnIndex - 1] || {};\r\n                            var nextColumn = columns[point.columnIndex] || {};\r\n                            if (currentColumn.fixed || nextColumn.fixed) {\r\n                                point.columnIndex -= 1;\r\n                                return !((currentColumn.allowResizing || currentColumn.command === COMMAND_TRANSPARENT) && (isWidgetResizingMode || nextColumn.allowResizing || nextColumn.command === COMMAND_TRANSPARENT))\r\n                            }\r\n                        }\r\n                        return this.callBase.apply(this, arguments)\r\n                    },\r\n                    _getTargetPoint: function(pointsByColumns, currentX, deltaX) {\r\n                        var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\r\n                        if ($transparentColumn && $transparentColumn.length) {\r\n                            var boundingRect = getBoundingRect($transparentColumn.get(0));\r\n                            if (currentX <= boundingRect.left || currentX >= boundingRect.right) {\r\n                                return this.callBase(this._pointsByFixedColumns, currentX, deltaX)\r\n                            }\r\n                        }\r\n                        return this.callBase(pointsByColumns, currentX, deltaX)\r\n                    }\r\n                }\r\n            }\r\n        }()\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.column_fixing.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    columnFixingModule\r\n} from \"../grid_core/ui.grid_core.column_fixing\";\r\ngridCore.registerModule(\"columnFixing\", columnFixingModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.adaptivity.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    addNamespace\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    isDefined,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport Guid from \"../../core/guid\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport Form from \"../form\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    isMaterial\r\n} from \"../themes\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport messageLocalization from \"../../localization/message\";\r\nvar COLUMN_HEADERS_VIEW = \"columnHeadersView\";\r\nvar ROWS_VIEW = \"rowsView\";\r\nvar FOOTER_VIEW = \"footerView\";\r\nvar COLUMN_VIEWS = [COLUMN_HEADERS_VIEW, ROWS_VIEW, FOOTER_VIEW];\r\nvar ADAPTIVE_NAMESPACE = \"dxDataGridAdaptivity\";\r\nvar HIDDEN_COLUMNS_WIDTH = \"adaptiveHidden\";\r\nvar ADAPTIVE_ROW_TYPE = \"detailAdaptive\";\r\nvar FORM_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\r\nvar FORM_ITEM_MODIFIED = \"dx-item-modified\";\r\nvar HIDDEN_COLUMN_CLASS = \"hidden-column\";\r\nvar ADAPTIVE_COLUMN_BUTTON_CLASS = \"adaptive-more\";\r\nvar ADAPTIVE_COLUMN_NAME_CLASS = \"dx-command-adaptive\";\r\nvar COMMAND_ADAPTIVE_HIDDEN_CLASS = \"dx-command-adaptive-hidden\";\r\nvar ADAPTIVE_DETAIL_ROW_CLASS = \"dx-adaptive-detail-row\";\r\nvar ADAPTIVE_ITEM_TEXT_CLASS = \"dx-adaptive-item-text\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar LAST_DATA_CELL_CLASS = \"dx-last-data-cell\";\r\nvar ADAPTIVE_COLUMN_NAME = \"adaptive\";\r\nvar EDIT_MODE_BATCH = \"batch\";\r\nvar EDIT_MODE_ROW = \"row\";\r\nvar EDIT_MODE_FORM = \"form\";\r\nvar EDIT_MODE_POPUP = \"popup\";\r\nvar REVERT_TOOLTIP_CLASS = \"revert-tooltip\";\r\nvar GROUP_CELL_CLASS = \"dx-group-cell\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar EXPAND_ARIA_NAME = \"dxDataGrid-ariaAdaptiveExpand\";\r\nvar COLLAPSE_ARIA_NAME = \"dxDataGrid-ariaAdaptiveCollapse\";\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\n\r\nfunction getColumnId(that, column) {\r\n    return that._columnsController.getColumnId(column)\r\n}\r\n\r\nfunction getDataCellElements($row) {\r\n    return $row.find(\"td:not(.dx-datagrid-hidden-column):not([class*='dx-command-'])\")\r\n}\r\n\r\nfunction adaptiveCellTemplate(container, options) {\r\n    var $adaptiveColumnButton;\r\n    var $container = $(container);\r\n    var adaptiveColumnsController = options.component.getController(\"adaptiveColumns\");\r\n    if (\"data\" === options.rowType) {\r\n        $adaptiveColumnButton = $(\"<span>\").addClass(adaptiveColumnsController.addWidgetPrefix(ADAPTIVE_COLUMN_BUTTON_CLASS));\r\n        eventsEngine.on($adaptiveColumnButton, addNamespace(clickEventName, ADAPTIVE_NAMESPACE), adaptiveColumnsController.createAction((function() {\r\n            adaptiveColumnsController.toggleExpandAdaptiveDetailRow(options.key)\r\n        })));\r\n        $adaptiveColumnButton.appendTo($container)\r\n    } else {\r\n        gridCoreUtils.setEmptyText($container)\r\n    }\r\n}\r\nvar AdaptiveColumnsController = modules.ViewController.inherit({\r\n    _isRowEditMode: function() {\r\n        var editMode = this._getEditMode();\r\n        return editMode === EDIT_MODE_ROW\r\n    },\r\n    _isItemModified: function(item, cellOptions) {\r\n        var columnIndex = this._columnsController.getVisibleIndex(item.column.index);\r\n        var rowIndex = this._dataController.getRowIndexByKey(cellOptions.key);\r\n        var row = this._dataController.items()[rowIndex + 1];\r\n        return row && row.modifiedValues && isDefined(row.modifiedValues[columnIndex])\r\n    },\r\n    _renderFormViewTemplate: function(item, cellOptions, $container) {\r\n        var column = item.column;\r\n        var focusAction = this.createAction((function() {\r\n            eventsEngine.trigger($container, clickEventName)\r\n        }));\r\n        var value = column.calculateCellValue(cellOptions.data);\r\n        var displayValue = gridCoreUtils.getDisplayValue(column, value, cellOptions.data, cellOptions.rowType);\r\n        var text = gridCoreUtils.formatValue(displayValue, column);\r\n        var isCellOrBatchEditMode = this._editingController.isCellOrBatchEditMode();\r\n        var rowsView = this._rowsView;\r\n        if (column.allowEditing && this.getController(\"keyboardNavigation\").isKeyboardEnabled()) {\r\n            $container.attr(\"tabIndex\", this.option(\"tabIndex\"));\r\n            if (isCellOrBatchEditMode) {\r\n                eventsEngine.off($container, \"focus\", focusAction);\r\n                eventsEngine.on($container, \"focus\", focusAction)\r\n            }\r\n        }\r\n        if (column.cellTemplate) {\r\n            var templateOptions = extend({}, cellOptions, {\r\n                value: value,\r\n                displayValue: displayValue,\r\n                text: text,\r\n                column: column\r\n            });\r\n            var isDomElement = !!$container.closest(getWindow().document).length;\r\n            rowsView.renderTemplate($container, column.cellTemplate, templateOptions, isDomElement).done(() => {\r\n                rowsView._cellPrepared($container, cellOptions)\r\n            })\r\n        } else {\r\n            var container = $container.get(0);\r\n            if (column.encodeHtml) {\r\n                container.textContent = text\r\n            } else {\r\n                container.innerHTML = text\r\n            }\r\n            $container.addClass(ADAPTIVE_ITEM_TEXT_CLASS);\r\n            if (!isDefined(text) || \"\" === text) {\r\n                $container.html(\"&nbsp;\")\r\n            }\r\n            if (!this._isRowEditMode()) {\r\n                if (this._isItemModified(item, cellOptions)) {\r\n                    $container.addClass(FORM_ITEM_MODIFIED)\r\n                }\r\n            }\r\n            rowsView._cellPrepared($container, cellOptions)\r\n        }\r\n    },\r\n    _getTemplate: function(item, cellOptions) {\r\n        var that = this;\r\n        var column = item.column;\r\n        var editingController = this.getController(\"editing\");\r\n        return function(options, container) {\r\n            var $container = $(container);\r\n            var columnIndex = that._columnsController.getVisibleIndex(column.index);\r\n            var templateOptions = extend({}, cellOptions);\r\n            var renderFormTemplate = function() {\r\n                var isItemEdited = that._isItemEdited(item);\r\n                templateOptions.value = cellOptions.row.values[columnIndex];\r\n                if (isItemEdited || column.showEditorAlways) {\r\n                    editingController.renderFormEditTemplate(templateOptions, item, options, $container, !isItemEdited)\r\n                } else {\r\n                    templateOptions.column = column;\r\n                    templateOptions.columnIndex = columnIndex;\r\n                    that._renderFormViewTemplate(item, templateOptions, $container)\r\n                }\r\n            };\r\n            renderFormTemplate();\r\n            templateOptions.watch && templateOptions.watch((function() {\r\n                return {\r\n                    isItemEdited: that._isItemEdited(item),\r\n                    value: cellOptions.row.values[columnIndex]\r\n                }\r\n            }), (function() {\r\n                $container.contents().remove();\r\n                $container.removeClass(ADAPTIVE_ITEM_TEXT_CLASS);\r\n                renderFormTemplate()\r\n            }))\r\n        }\r\n    },\r\n    _isVisibleColumnsValid: function(visibleColumns) {\r\n        if (visibleColumns < 2) {\r\n            return false\r\n        }\r\n        if (visibleColumns.length - function() {\r\n                var result = 0;\r\n                for (var j = 0; j < visibleColumns.length; j++) {\r\n                    var visibleColumn = visibleColumns[j];\r\n                    if (visibleColumn.command) {\r\n                        result++\r\n                    }\r\n                }\r\n                return result\r\n            }() <= 1) {\r\n            return false\r\n        }\r\n        return true\r\n    },\r\n    _calculatePercentWidths: function(widths, visibleColumns) {\r\n        var that = this;\r\n        var percentWidths = 0;\r\n        visibleColumns.forEach((function(item, index) {\r\n            if (widths[index] !== HIDDEN_COLUMNS_WIDTH) {\r\n                percentWidths += that._getItemPercentWidth(item)\r\n            }\r\n        }));\r\n        return percentWidths\r\n    },\r\n    _isPercentWidth: function(width) {\r\n        return isString(width) && \"%\" === width.slice(-1)\r\n    },\r\n    _isColumnHidden: function(column) {\r\n        return this._hiddenColumns.filter((function(hiddenColumn) {\r\n            return hiddenColumn.index === column.index\r\n        })).length > 0\r\n    },\r\n    _getAverageColumnsWidth: function(containerWidth, columns, columnsCanFit) {\r\n        var that = this;\r\n        var fixedColumnsWidth = 0;\r\n        var columnsWithoutFixedWidthCount = 0;\r\n        columns.forEach((function(column) {\r\n            if (!that._isColumnHidden(column)) {\r\n                var width = column.width;\r\n                if (isDefined(width) && !isNaN(parseFloat(width))) {\r\n                    fixedColumnsWidth += that._isPercentWidth(width) ? that._calculatePercentWidth({\r\n                        visibleIndex: column.visibleIndex,\r\n                        columnsCount: columns.length,\r\n                        columnsCanFit: columnsCanFit,\r\n                        bestFitWidth: column.bestFitWidth,\r\n                        columnWidth: width,\r\n                        containerWidth: containerWidth\r\n                    }) : parseFloat(width)\r\n                } else {\r\n                    columnsWithoutFixedWidthCount++\r\n                }\r\n            }\r\n        }));\r\n        return (containerWidth - fixedColumnsWidth) / columnsWithoutFixedWidthCount\r\n    },\r\n    _calculateColumnWidth: function(column, containerWidth, contentColumns, columnsCanFit) {\r\n        var columnId = getColumnId(this, column);\r\n        var widthOption = this._columnsController.columnOption(columnId, \"width\");\r\n        var bestFitWidth = this._columnsController.columnOption(columnId, \"bestFitWidth\");\r\n        var columnsCount = contentColumns.length;\r\n        var colWidth;\r\n        if (widthOption && \"auto\" !== widthOption) {\r\n            if (this._isPercentWidth(widthOption)) {\r\n                colWidth = this._calculatePercentWidth({\r\n                    visibleIndex: column.visibleIndex,\r\n                    columnsCount: columnsCount,\r\n                    columnsCanFit: columnsCanFit,\r\n                    bestFitWidth: bestFitWidth,\r\n                    columnWidth: widthOption,\r\n                    containerWidth: containerWidth\r\n                })\r\n            } else {\r\n                return parseFloat(widthOption)\r\n            }\r\n        } else {\r\n            var columnAutoWidth = this.option(\"columnAutoWidth\");\r\n            colWidth = columnAutoWidth || !!column.command ? bestFitWidth : this._getAverageColumnsWidth(containerWidth, contentColumns, columnsCanFit)\r\n        }\r\n        return colWidth\r\n    },\r\n    _calculatePercentWidth: function(options) {\r\n        var columnFitted = options.visibleIndex < options.columnsCount - 1 && options.columnsCanFit;\r\n        var partialWidth = options.containerWidth * parseFloat(options.columnWidth) / 100;\r\n        var resultWidth = options.columnsCanFit && partialWidth < options.bestFitWidth ? options.bestFitWidth : partialWidth;\r\n        return columnFitted ? options.containerWidth * parseFloat(options.columnWidth) / 100 : resultWidth\r\n    },\r\n    _getNotTruncatedColumnWidth: function(column, containerWidth, contentColumns, columnsCanFit) {\r\n        var columnId = getColumnId(this, column);\r\n        var widthOption = this._columnsController.columnOption(columnId, \"width\");\r\n        var bestFitWidth = this._columnsController.columnOption(columnId, \"bestFitWidth\");\r\n        if (widthOption && \"auto\" !== widthOption && !this._isPercentWidth(widthOption)) {\r\n            return parseFloat(widthOption)\r\n        }\r\n        var colWidth = this._calculateColumnWidth(column, containerWidth, contentColumns, columnsCanFit);\r\n        return colWidth < bestFitWidth ? null : colWidth\r\n    },\r\n    _getItemPercentWidth: function(item) {\r\n        var result = 0;\r\n        if (item.width && this._isPercentWidth(item.width)) {\r\n            result = parseFloat(item.width)\r\n        }\r\n        return result\r\n    },\r\n    _getCommandColumnsWidth: function() {\r\n        var that = this;\r\n        var columns = that._columnsController.getVisibleColumns();\r\n        var colWidth = 0;\r\n        each(columns, (function(index, column) {\r\n            if (column.index < 0 || column.command) {\r\n                colWidth += that._columnsController.columnOption(getColumnId(that, column), \"bestFitWidth\") || 0\r\n            }\r\n        }));\r\n        return colWidth\r\n    },\r\n    _isItemEdited: function(item) {\r\n        if (this.isFormOrPopupEditMode()) {\r\n            return false\r\n        }\r\n        if (this._isRowEditMode()) {\r\n            var editRowKey = this.option(\"editing.editRowKey\");\r\n            if (equalByValue(editRowKey, this._dataController.adaptiveExpandedKey())) {\r\n                return true\r\n            }\r\n        } else {\r\n            var rowIndex = this._dataController.getRowIndexByKey(this._dataController.adaptiveExpandedKey()) + 1;\r\n            var columnIndex = this._columnsController.getVisibleIndex(item.column.index);\r\n            return this._editingController.isEditCell(rowIndex, columnIndex)\r\n        }\r\n    },\r\n    _getFormItemsByHiddenColumns: function(hiddenColumns) {\r\n        var items = [];\r\n        each(hiddenColumns, (function(_, column) {\r\n            items.push({\r\n                column: column,\r\n                name: column.name,\r\n                dataField: column.dataField,\r\n                visibleIndex: column.visibleIndex\r\n            })\r\n        }));\r\n        return items\r\n    },\r\n    _getAdaptiveColumnVisibleIndex: function(visibleColumns) {\r\n        for (var i = 0; i < visibleColumns.length; i++) {\r\n            var column = visibleColumns[i];\r\n            if (column.command === ADAPTIVE_COLUMN_NAME) {\r\n                return i\r\n            }\r\n        }\r\n    },\r\n    _hideAdaptiveColumn: function(resultWidths, visibleColumns) {\r\n        var visibleIndex = this._getAdaptiveColumnVisibleIndex(visibleColumns);\r\n        if (isDefined(visibleIndex)) {\r\n            resultWidths[visibleIndex] = HIDDEN_COLUMNS_WIDTH;\r\n            this._hideVisibleColumn({\r\n                isCommandColumn: true,\r\n                visibleIndex: visibleIndex\r\n            })\r\n        }\r\n    },\r\n    _showHiddenCellsInView: function(_ref) {\r\n        var {\r\n            $cells: $cells,\r\n            isCommandColumn: isCommandColumn\r\n        } = _ref;\r\n        var cssClassNameToRemove = isCommandColumn ? COMMAND_ADAPTIVE_HIDDEN_CLASS : this.addWidgetPrefix(HIDDEN_COLUMN_CLASS);\r\n        $cells.removeClass(cssClassNameToRemove)\r\n    },\r\n    _showHiddenColumns: function() {\r\n        for (var i = 0; i < COLUMN_VIEWS.length; i++) {\r\n            var view = this.getView(COLUMN_VIEWS[i]);\r\n            if (view && view.isVisible() && view.element()) {\r\n                var viewName = view.name;\r\n                var $hiddenCommandCells = view.element().find(\".\" + COMMAND_ADAPTIVE_HIDDEN_CLASS);\r\n                this._showHiddenCellsInView({\r\n                    viewName: viewName,\r\n                    $cells: $hiddenCommandCells,\r\n                    isCommandColumn: true\r\n                });\r\n                var $hiddenCells = view.element().find(\".\" + this.addWidgetPrefix(HIDDEN_COLUMN_CLASS));\r\n                this._showHiddenCellsInView({\r\n                    viewName: viewName,\r\n                    $cells: $hiddenCells\r\n                })\r\n            }\r\n        }\r\n    },\r\n    _isCellValid: function($cell) {\r\n        return $cell && $cell.length && !$cell.hasClass(MASTER_DETAIL_CELL_CLASS) && !$cell.hasClass(GROUP_CELL_CLASS)\r\n    },\r\n    _hideVisibleColumn: function(_ref2) {\r\n        var {\r\n            isCommandColumn: isCommandColumn,\r\n            visibleIndex: visibleIndex\r\n        } = _ref2;\r\n        var that = this;\r\n        COLUMN_VIEWS.forEach((function(viewName) {\r\n            var view = that.getView(viewName);\r\n            view && that._hideVisibleColumnInView({\r\n                view: view,\r\n                isCommandColumn: isCommandColumn,\r\n                visibleIndex: visibleIndex\r\n            })\r\n        }))\r\n    },\r\n    _hideVisibleColumnInView: function(_ref3) {\r\n        var {\r\n            view: view,\r\n            isCommandColumn: isCommandColumn,\r\n            visibleIndex: visibleIndex\r\n        } = _ref3;\r\n        var viewName = view.name;\r\n        var $cellElement;\r\n        var column = this._columnsController.getVisibleColumns()[visibleIndex];\r\n        var editFormRowIndex = this._editingController && this._editingController.getEditFormRowIndex();\r\n        if (view && view.isVisible() && column) {\r\n            var rowsCount = view.getRowsCount();\r\n            var $rowElements = view._getRowElements();\r\n            for (var rowIndex = 0; rowIndex < rowsCount; rowIndex++) {\r\n                var cancelClassAdding = rowIndex === editFormRowIndex && viewName === ROWS_VIEW && \"popup\" !== this.option(\"editing.mode\");\r\n                if (!cancelClassAdding) {\r\n                    var currentVisibleIndex = viewName === COLUMN_HEADERS_VIEW ? this._columnsController.getVisibleIndex(column.index, rowIndex) : visibleIndex;\r\n                    if (currentVisibleIndex >= 0) {\r\n                        var $rowElement = $rowElements.eq(rowIndex);\r\n                        $cellElement = this._findCellElementInRow($rowElement, currentVisibleIndex);\r\n                        this._isCellValid($cellElement) && this._hideVisibleCellInView({\r\n                            viewName: viewName,\r\n                            isCommandColumn: isCommandColumn,\r\n                            $cell: $cellElement\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _findCellElementInRow($rowElement, visibleColumnIndex) {\r\n        var $rowCells = $rowElement.children();\r\n        var visibleIndex = visibleColumnIndex;\r\n        var cellIsInsideGroup = false;\r\n        if ($rowElement.hasClass(GROUP_ROW_CLASS)) {\r\n            var $groupCell = $rowElement.find(\".\".concat(GROUP_CELL_CLASS));\r\n            var colSpan = $groupCell.attr(\"colspan\");\r\n            if ($groupCell.length && isDefined(colSpan)) {\r\n                var groupCellLength = parseInt(colSpan);\r\n                var endGroupIndex = $groupCell.index() + groupCellLength - 1;\r\n                if (visibleColumnIndex > endGroupIndex) {\r\n                    visibleIndex = visibleColumnIndex - groupCellLength + 1\r\n                } else {\r\n                    cellIsInsideGroup = true\r\n                }\r\n            }\r\n        }\r\n        var $cellElement = !cellIsInsideGroup ? $rowCells.eq(visibleIndex) : void 0;\r\n        return $cellElement\r\n    },\r\n    _hideVisibleCellInView: function(_ref4) {\r\n        var {\r\n            $cell: $cell,\r\n            isCommandColumn: isCommandColumn\r\n        } = _ref4;\r\n        var cssClassNameToAdd = isCommandColumn ? COMMAND_ADAPTIVE_HIDDEN_CLASS : this.addWidgetPrefix(HIDDEN_COLUMN_CLASS);\r\n        $cell.addClass(cssClassNameToAdd)\r\n    },\r\n    _getEditMode: function() {\r\n        return this._editingController.getEditMode()\r\n    },\r\n    isFormOrPopupEditMode: function() {\r\n        var editMode = this._getEditMode();\r\n        return editMode === EDIT_MODE_FORM || editMode === EDIT_MODE_POPUP\r\n    },\r\n    hideRedundantColumns: function(resultWidths, visibleColumns, hiddenQueue) {\r\n        this._hiddenColumns = [];\r\n        if (this._isVisibleColumnsValid(visibleColumns) && hiddenQueue.length) {\r\n            var totalWidth = 0;\r\n            var $rootElement = this.component.$element();\r\n            var rootElementWidth = getWidth($rootElement) - this._getCommandColumnsWidth();\r\n            var getVisibleContentColumns = function() {\r\n                return visibleColumns.filter(item => !item.command && 0 === this._hiddenColumns.filter(i => i.index === item.index).length)\r\n            }.bind(this);\r\n            var visibleContentColumns = getVisibleContentColumns();\r\n            var contentColumnsCount = visibleContentColumns.length;\r\n            var i;\r\n            var hasHiddenColumns;\r\n            var needHideColumn;\r\n            do {\r\n                needHideColumn = false;\r\n                totalWidth = 0;\r\n                var percentWidths = this._calculatePercentWidths(resultWidths, visibleColumns);\r\n                var columnsCanFit = percentWidths < 100 && 0 !== percentWidths;\r\n                for (i = 0; i < visibleColumns.length; i++) {\r\n                    var visibleColumn = visibleColumns[i];\r\n                    var columnWidth = this._getNotTruncatedColumnWidth(visibleColumn, rootElementWidth, visibleContentColumns, columnsCanFit);\r\n                    var columnId = getColumnId(this, visibleColumn);\r\n                    var widthOption = this._columnsController.columnOption(columnId, \"width\");\r\n                    var minWidth = this._columnsController.columnOption(columnId, \"minWidth\");\r\n                    var columnBestFitWidth = this._columnsController.columnOption(columnId, \"bestFitWidth\");\r\n                    if (resultWidths[i] === HIDDEN_COLUMNS_WIDTH) {\r\n                        hasHiddenColumns = true;\r\n                        continue\r\n                    }\r\n                    if (!columnWidth && !visibleColumn.command && !visibleColumn.fixed) {\r\n                        needHideColumn = true;\r\n                        break\r\n                    }\r\n                    if (!widthOption || \"auto\" === widthOption) {\r\n                        columnWidth = Math.max(columnBestFitWidth || 0, minWidth || 0)\r\n                    }\r\n                    if (visibleColumn.command !== ADAPTIVE_COLUMN_NAME || hasHiddenColumns) {\r\n                        totalWidth += columnWidth\r\n                    }\r\n                }\r\n                needHideColumn = needHideColumn || totalWidth > getWidth($rootElement);\r\n                if (needHideColumn) {\r\n                    var column = hiddenQueue.pop();\r\n                    var visibleIndex = this._columnsController.getVisibleIndex(column.index);\r\n                    rootElementWidth += this._calculateColumnWidth(column, rootElementWidth, visibleContentColumns, columnsCanFit);\r\n                    this._hideVisibleColumn({\r\n                        visibleIndex: visibleIndex\r\n                    });\r\n                    resultWidths[visibleIndex] = HIDDEN_COLUMNS_WIDTH;\r\n                    this._hiddenColumns.push(column);\r\n                    visibleContentColumns = getVisibleContentColumns()\r\n                }\r\n            } while (needHideColumn && visibleContentColumns.length > 1 && hiddenQueue.length);\r\n            if (contentColumnsCount === visibleContentColumns.length) {\r\n                this._hideAdaptiveColumn(resultWidths, visibleColumns)\r\n            }\r\n        } else {\r\n            this._hideAdaptiveColumn(resultWidths, visibleColumns)\r\n        }\r\n    },\r\n    getItemContentByColumnIndex: function(visibleColumnIndex) {\r\n        var $itemContent;\r\n        for (var i = 0; i < this._$itemContents.length; i++) {\r\n            $itemContent = this._$itemContents.eq(i);\r\n            var item = $itemContent.data(\"dx-form-item\");\r\n            if (item && item.column && this._columnsController.getVisibleIndex(item.column.index) === visibleColumnIndex) {\r\n                return $itemContent\r\n            }\r\n        }\r\n    },\r\n    toggleExpandAdaptiveDetailRow: function(key, alwaysExpanded) {\r\n        if (!(this.isFormOrPopupEditMode() && this._editingController.isEditing())) {\r\n            this.getController(\"data\").toggleExpandAdaptiveDetailRow(key, alwaysExpanded)\r\n        }\r\n    },\r\n    createFormByHiddenColumns: function(container, options) {\r\n        var that = this;\r\n        var $container = $(container);\r\n        var userFormOptions = {\r\n            items: that._getFormItemsByHiddenColumns(that._hiddenColumns),\r\n            formID: \"dx-\" + new Guid\r\n        };\r\n        var defaultFormOptions = isMaterial() ? {\r\n            colCount: 2\r\n        } : {};\r\n        this.executeAction(\"onAdaptiveDetailRowPreparing\", {\r\n            formOptions: userFormOptions\r\n        });\r\n        that._$itemContents = null;\r\n        that._form = that._createComponent($(\"<div>\").appendTo($container), Form, extend(defaultFormOptions, userFormOptions, {\r\n            customizeItem: function(item) {\r\n                var column = item.column || that._columnsController.columnOption(item.name || item.dataField);\r\n                if (column) {\r\n                    item.label = item.label || {};\r\n                    item.label.text = item.label.text || column.caption;\r\n                    item.column = column;\r\n                    item.template = that._getTemplate(item, options, that.updateForm.bind(that))\r\n                }\r\n                userFormOptions.customizeItem && userFormOptions.customizeItem.call(this, item)\r\n            },\r\n            onContentReady: function(e) {\r\n                userFormOptions.onContentReady && userFormOptions.onContentReady.call(this, e);\r\n                that._$itemContents = $container.find(\".\" + FORM_ITEM_CONTENT_CLASS)\r\n            }\r\n        }))\r\n    },\r\n    hasAdaptiveDetailRowExpanded: function() {\r\n        return isDefined(this._dataController.adaptiveExpandedKey())\r\n    },\r\n    updateForm: function(hiddenColumns) {\r\n        if (this.hasAdaptiveDetailRowExpanded()) {\r\n            if (this._form && isDefined(this._form._contentReadyAction)) {\r\n                if (hiddenColumns && hiddenColumns.length) {\r\n                    this._form.option(\"items\", this._getFormItemsByHiddenColumns(hiddenColumns))\r\n                } else {\r\n                    this._form.repaint()\r\n                }\r\n            }\r\n        }\r\n    },\r\n    updateHidingQueue: function(columns) {\r\n        var hideableColumns = columns.filter((function(column) {\r\n            return column.visible && !column.type && !column.fixed && !(isDefined(column.groupIndex) && column.groupIndex >= 0)\r\n        }));\r\n        var columnsHasHidingPriority;\r\n        var i;\r\n        this._hidingColumnsQueue = [];\r\n        if (this.option(\"allowColumnResizing\") && \"widget\" === this.option(\"columnResizingMode\")) {\r\n            return this._hidingColumnsQueue\r\n        }\r\n        for (i = 0; i < hideableColumns.length; i++) {\r\n            if (isDefined(hideableColumns[i].hidingPriority) && hideableColumns[i].hidingPriority >= 0) {\r\n                columnsHasHidingPriority = true;\r\n                this._hidingColumnsQueue[hideableColumns[i].hidingPriority] = hideableColumns[i]\r\n            }\r\n        }\r\n        if (columnsHasHidingPriority) {\r\n            this._hidingColumnsQueue.reverse()\r\n        } else if (this.option(\"columnHidingEnabled\")) {\r\n            for (i = 0; i < hideableColumns.length; i++) {\r\n                var visibleIndex = this._columnsController.getVisibleIndex(hideableColumns[i].index);\r\n                this._hidingColumnsQueue[visibleIndex] = hideableColumns[i]\r\n            }\r\n        }\r\n        this._hidingColumnsQueue = this._hidingColumnsQueue.filter(Object);\r\n        return this._hidingColumnsQueue\r\n    },\r\n    getHiddenColumns: function() {\r\n        return this._hiddenColumns\r\n    },\r\n    hasHiddenColumns: function() {\r\n        return this._hiddenColumns.length > 0\r\n    },\r\n    getHidingColumnsQueue: function() {\r\n        return this._hidingColumnsQueue\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._dataController = that.getController(\"data\");\r\n        that._rowsView = that.getView(\"rowsView\");\r\n        that._columnsController.addCommandColumn({\r\n            type: ADAPTIVE_COLUMN_NAME,\r\n            command: ADAPTIVE_COLUMN_NAME,\r\n            visible: true,\r\n            adaptiveHidden: true,\r\n            cssClass: ADAPTIVE_COLUMN_NAME_CLASS,\r\n            alignment: \"center\",\r\n            width: \"auto\",\r\n            cellTemplate: adaptiveCellTemplate,\r\n            fixedPosition: \"right\"\r\n        });\r\n        that._columnsController.columnsChanged.add((function() {\r\n            var isAdaptiveVisible = !!that.updateHidingQueue(that._columnsController.getColumns()).length;\r\n            that._columnsController.columnOption(\"command:adaptive\", \"adaptiveHidden\", !isAdaptiveVisible, true)\r\n        }));\r\n        that._editingController = that.getController(\"editing\");\r\n        that._hidingColumnsQueue = [];\r\n        that._hiddenColumns = [];\r\n        that.createAction(\"onAdaptiveDetailRowPreparing\");\r\n        that.callBase()\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"columnHidingEnabled\" === args.name) {\r\n            this._columnsController.columnOption(\"command:adaptive\", \"adaptiveHidden\", !args.value)\r\n        }\r\n        this.callBase(args)\r\n    },\r\n    publicMethods: function() {\r\n        return [\"isAdaptiveDetailRowExpanded\", \"expandAdaptiveDetailRow\", \"collapseAdaptiveDetailRow\"]\r\n    },\r\n    isAdaptiveDetailRowExpanded: function(key) {\r\n        return this._dataController.adaptiveExpandedKey() && equalByValue(this._dataController.adaptiveExpandedKey(), key)\r\n    },\r\n    expandAdaptiveDetailRow: function(key) {\r\n        if (!this.hasAdaptiveDetailRowExpanded()) {\r\n            this.toggleExpandAdaptiveDetailRow(key)\r\n        }\r\n    },\r\n    collapseAdaptiveDetailRow: function() {\r\n        if (this.hasAdaptiveDetailRowExpanded()) {\r\n            this.toggleExpandAdaptiveDetailRow()\r\n        }\r\n    },\r\n    updateCommandAdaptiveAriaLabel: function(key, label) {\r\n        var rowIndex = this._dataController.getRowIndexByKey(key);\r\n        if (-1 === rowIndex) {\r\n            return\r\n        }\r\n        var $row = $(this.component.getRowElement(rowIndex));\r\n        this.setCommandAdaptiveAriaLabel($row, label)\r\n    },\r\n    setCommandAdaptiveAriaLabel: function($row, labelName) {\r\n        var $adaptiveCommand = $row.find(\".dx-command-adaptive\");\r\n        $adaptiveCommand.attr(\"aria-label\", messageLocalization.format(labelName))\r\n    }\r\n});\r\nexport var adaptivityModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            columnHidingEnabled: false,\r\n            onAdaptiveDetailRowPreparing: null\r\n        }\r\n    },\r\n    controllers: {\r\n        adaptiveColumns: AdaptiveColumnsController\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: {\r\n                _getCellTemplate: function(options) {\r\n                    var that = this;\r\n                    var column = options.column;\r\n                    if (options.rowType === ADAPTIVE_ROW_TYPE && \"detail\" === column.command) {\r\n                        return function(container, options) {\r\n                            that._adaptiveColumnsController.createFormByHiddenColumns($(container), options)\r\n                        }\r\n                    }\r\n                    return that.callBase(options)\r\n                },\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (row && row.rowType === ADAPTIVE_ROW_TYPE && row.key === this._dataController.adaptiveExpandedKey()) {\r\n                        $row.addClass(ADAPTIVE_DETAIL_ROW_CLASS)\r\n                    }\r\n                    return $row\r\n                },\r\n                _renderCells: function($row, options) {\r\n                    this.callBase($row, options);\r\n                    var adaptiveColumnsController = this._adaptiveColumnsController;\r\n                    var hidingColumnsQueueLength = adaptiveColumnsController.getHidingColumnsQueue().length;\r\n                    var hiddenColumnsLength = adaptiveColumnsController.getHiddenColumns().length;\r\n                    if (hidingColumnsQueueLength && !hiddenColumnsLength) {\r\n                        getDataCellElements($row).last().addClass(LAST_DATA_CELL_CLASS)\r\n                    }\r\n                    if (\"data\" === options.row.rowType) {\r\n                        adaptiveColumnsController.setCommandAdaptiveAriaLabel($row, EXPAND_ARIA_NAME)\r\n                    }\r\n                },\r\n                _getColumnIndexByElementCore: function($element) {\r\n                    var $itemContent = $element.closest(\".\" + FORM_ITEM_CONTENT_CLASS);\r\n                    if ($itemContent.length && $itemContent.closest(this.component.$element()).length) {\r\n                        var formItem = $itemContent.length ? $itemContent.first().data(\"dx-form-item\") : null;\r\n                        return formItem && formItem.column && this._columnsController.getVisibleIndex(formItem.column.index)\r\n                    } else {\r\n                        return this.callBase($element)\r\n                    }\r\n                },\r\n                _cellPrepared: function($cell, options) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (options.row.rowType !== ADAPTIVE_ROW_TYPE && options.column.visibleWidth === HIDDEN_COLUMNS_WIDTH) {\r\n                        $cell.addClass(this.addWidgetPrefix(HIDDEN_COLUMN_CLASS))\r\n                    }\r\n                },\r\n                _getCellElement: function(rowIndex, columnIdentifier) {\r\n                    var item = this._dataController.items()[rowIndex];\r\n                    if (item && item.rowType === ADAPTIVE_ROW_TYPE) {\r\n                        return this._adaptiveColumnsController.getItemContentByColumnIndex(columnIdentifier)\r\n                    } else {\r\n                        return this.callBase.apply(this, arguments)\r\n                    }\r\n                },\r\n                getContextMenuItems: function(options) {\r\n                    if (options.row && \"detailAdaptive\" === options.row.rowType) {\r\n                        var view = this.component.getView(\"columnHeadersView\");\r\n                        var formItem = $(options.targetElement).closest(\".dx-field-item-label\").next().data(\"dx-form-item\");\r\n                        options.column = formItem ? formItem.column : options.column;\r\n                        return view.getContextMenuItems && view.getContextMenuItems(options)\r\n                    }\r\n                    return this.callBase && this.callBase(options)\r\n                },\r\n                isClickableElement: function($target) {\r\n                    var isClickable = this.callBase ? this.callBase($target) : false;\r\n                    return isClickable || !!$target.closest(\".\" + ADAPTIVE_COLUMN_NAME_CLASS).length\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveColumnsController = this.getController(\"adaptiveColumns\")\r\n                }\r\n            }\r\n        },\r\n        controllers: {\r\n            export: {\r\n                _updateColumnWidth: function(column, width) {\r\n                    this.callBase(column, column.visibleWidth === HIDDEN_COLUMNS_WIDTH ? column.bestFitWidth : width)\r\n                }\r\n            },\r\n            columnsResizer: {\r\n                _pointCreated: function(point, cellsLength, columns) {\r\n                    var result = this.callBase(point, cellsLength, columns);\r\n                    var currentColumn = columns[point.columnIndex] || {};\r\n                    var nextColumnIndex = this._getNextColumnIndex(point.columnIndex);\r\n                    var nextColumn = columns[nextColumnIndex] || {};\r\n                    var hasHiddenColumnsOnly = nextColumnIndex !== point.columnIndex + 1 && nextColumn.command;\r\n                    var hasAdaptiveHiddenWidth = currentColumn.visibleWidth === HIDDEN_COLUMNS_WIDTH || hasHiddenColumnsOnly;\r\n                    return result || hasAdaptiveHiddenWidth\r\n                },\r\n                _getNextColumnIndex: function(currentColumnIndex) {\r\n                    var visibleColumns = this._columnsController.getVisibleColumns();\r\n                    var index = this.callBase(currentColumnIndex);\r\n                    while (visibleColumns[index] && visibleColumns[index].visibleWidth === HIDDEN_COLUMNS_WIDTH) {\r\n                        index++\r\n                    }\r\n                    return index\r\n                }\r\n            },\r\n            draggingHeader: {\r\n                _pointCreated: function(point, columns, location, sourceColumn) {\r\n                    var result = this.callBase(point, columns, location, sourceColumn);\r\n                    var column = columns[point.columnIndex - 1] || {};\r\n                    var hasAdaptiveHiddenWidth = column.visibleWidth === HIDDEN_COLUMNS_WIDTH;\r\n                    return result || hasAdaptiveHiddenWidth\r\n                }\r\n            },\r\n            editing: {\r\n                _isRowEditMode: function() {\r\n                    return this.getEditMode() === EDIT_MODE_ROW\r\n                },\r\n                _getFormEditItemTemplate: function(cellOptions, column) {\r\n                    if (this.getEditMode() !== EDIT_MODE_ROW && \"detailAdaptive\" === cellOptions.rowType) {\r\n                        cellOptions.columnIndex = this._columnsController.getVisibleIndex(column.index);\r\n                        return this.getColumnTemplate(cellOptions)\r\n                    }\r\n                    return this.callBase(cellOptions, column)\r\n                },\r\n                _closeEditItem: function($targetElement) {\r\n                    var $itemContents = $targetElement.closest(\".\" + FORM_ITEM_CONTENT_CLASS);\r\n                    var rowIndex = this._dataController.getRowIndexByKey(this._dataController.adaptiveExpandedKey()) + 1;\r\n                    var formItem = $itemContents.length ? $itemContents.first().data(\"dx-form-item\") : null;\r\n                    var columnIndex = formItem && formItem.column && this._columnsController.getVisibleIndex(formItem.column.index);\r\n                    if (!this.isEditCell(rowIndex, columnIndex)) {\r\n                        this.callBase($targetElement)\r\n                    }\r\n                },\r\n                _beforeUpdateItems: function(rowIndices, rowIndex) {\r\n                    if (!this._adaptiveController.isFormOrPopupEditMode() && this._adaptiveController.hasHiddenColumns()) {\r\n                        var items = this._dataController.items();\r\n                        var item = items[rowIndex];\r\n                        var oldExpandRowIndex = gridCoreUtils.getIndexByKey(this._dataController.adaptiveExpandedKey(), items);\r\n                        this._isForceRowAdaptiveExpand = !this._adaptiveController.hasAdaptiveDetailRowExpanded();\r\n                        if (oldExpandRowIndex >= 0) {\r\n                            rowIndices.push(oldExpandRowIndex + 1)\r\n                        }\r\n                        rowIndices.push(rowIndex + 1);\r\n                        this._dataController.adaptiveExpandedKey(item.key)\r\n                    }\r\n                },\r\n                _afterInsertRow: function(key) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this._adaptiveController.hasHiddenColumns()) {\r\n                        this._adaptiveController.toggleExpandAdaptiveDetailRow(key, this.isRowEditMode());\r\n                        this._isForceRowAdaptiveExpand = true\r\n                    }\r\n                },\r\n                _collapseAdaptiveDetailRow: function() {\r\n                    if (this._isRowEditMode() && this._isForceRowAdaptiveExpand) {\r\n                        this._adaptiveController.collapseAdaptiveDetailRow();\r\n                        this._isForceRowAdaptiveExpand = false\r\n                    }\r\n                },\r\n                _cancelEditAdaptiveDetailRow: function() {\r\n                    if (this._adaptiveController.hasHiddenColumns()) {\r\n                        this._collapseAdaptiveDetailRow()\r\n                    }\r\n                },\r\n                _afterSaveEditData: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    var deferred = new Deferred;\r\n                    if (this._isRowEditMode() && this._adaptiveController.hasHiddenColumns()) {\r\n                        when(this.getController(\"validating\").validate(true)).done(isValid => {\r\n                            if (isValid) {\r\n                                this._cancelEditAdaptiveDetailRow()\r\n                            }\r\n                            deferred.resolve()\r\n                        })\r\n                    } else {\r\n                        deferred.resolve()\r\n                    }\r\n                    return deferred.promise()\r\n                },\r\n                _beforeCancelEditData: function() {\r\n                    this.callBase();\r\n                    this._cancelEditAdaptiveDetailRow()\r\n                },\r\n                _getRowIndicesForCascadeUpdating: function(row) {\r\n                    var rowIndices = this.callBase.apply(this, arguments);\r\n                    if (this._adaptiveController.isAdaptiveDetailRowExpanded(row.key)) {\r\n                        rowIndices.push(row.rowType === ADAPTIVE_ROW_TYPE ? row.rowIndex - 1 : row.rowIndex + 1)\r\n                    }\r\n                    return rowIndices\r\n                },\r\n                _beforeCloseEditCellInBatchMode: function(rowIndices) {\r\n                    var expandedKey = this._dataController._adaptiveExpandedKey;\r\n                    if (expandedKey) {\r\n                        var rowIndex = gridCoreUtils.getIndexByKey(expandedKey, this._dataController.items());\r\n                        if (rowIndex > -1) {\r\n                            rowIndices.unshift(rowIndex)\r\n                        }\r\n                    }\r\n                },\r\n                editRow: function(rowIndex) {\r\n                    if (this._adaptiveController.isFormOrPopupEditMode()) {\r\n                        this._adaptiveController.collapseAdaptiveDetailRow()\r\n                    }\r\n                    this.callBase(rowIndex)\r\n                },\r\n                deleteRow: function(rowIndex) {\r\n                    var rowKey = this._dataController.getKeyByRowIndex(rowIndex);\r\n                    if (this.getEditMode() === EDIT_MODE_BATCH && this._adaptiveController.isAdaptiveDetailRowExpanded(rowKey)) {\r\n                        this._adaptiveController.collapseAdaptiveDetailRow()\r\n                    }\r\n                    this.callBase(rowIndex)\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveController = this.getController(\"adaptiveColumns\")\r\n                }\r\n            },\r\n            resizing: {\r\n                _needBestFit: function() {\r\n                    return this.callBase() || !!this._adaptiveColumnsController.getHidingColumnsQueue().length\r\n                },\r\n                _correctColumnWidths: function(resultWidths, visibleColumns) {\r\n                    var adaptiveController = this._adaptiveColumnsController;\r\n                    var oldHiddenColumns = adaptiveController.getHiddenColumns();\r\n                    var hidingColumnsQueue = adaptiveController.updateHidingQueue(this._columnsController.getColumns());\r\n                    adaptiveController.hideRedundantColumns(resultWidths, visibleColumns, hidingColumnsQueue);\r\n                    var hiddenColumns = adaptiveController.getHiddenColumns();\r\n                    if (adaptiveController.hasAdaptiveDetailRowExpanded()) {\r\n                        if (oldHiddenColumns.length !== hiddenColumns.length) {\r\n                            adaptiveController.updateForm(hiddenColumns)\r\n                        }\r\n                    }!hiddenColumns.length && adaptiveController.collapseAdaptiveDetailRow();\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _toggleBestFitMode: function(isBestFit) {\r\n                    isBestFit && this._adaptiveColumnsController._showHiddenColumns();\r\n                    this.callBase(isBestFit)\r\n                },\r\n                _needStretch: function() {\r\n                    var adaptiveColumnsController = this._adaptiveColumnsController;\r\n                    return this.callBase.apply(this, arguments) || adaptiveColumnsController.getHidingColumnsQueue().length || adaptiveColumnsController.hasHiddenColumns()\r\n                },\r\n                init: function() {\r\n                    this._adaptiveColumnsController = this.getController(\"adaptiveColumns\");\r\n                    this.callBase()\r\n                },\r\n                dispose: function() {\r\n                    this.callBase.apply(this, arguments);\r\n                    clearTimeout(this._updateScrollableTimeoutID)\r\n                }\r\n            },\r\n            data: {\r\n                _processItems: function(items, change) {\r\n                    var changeType = change.changeType;\r\n                    items = this.callBase.apply(this, arguments);\r\n                    if (\"loadingAll\" === changeType || !isDefined(this._adaptiveExpandedKey)) {\r\n                        return items\r\n                    }\r\n                    var expandRowIndex = gridCoreUtils.getIndexByKey(this._adaptiveExpandedKey, items);\r\n                    var newMode = false === this.option(LEGACY_SCROLLING_MODE);\r\n                    if (expandRowIndex >= 0) {\r\n                        var item = items[expandRowIndex];\r\n                        items.splice(expandRowIndex + 1, 0, {\r\n                            visible: true,\r\n                            rowType: ADAPTIVE_ROW_TYPE,\r\n                            key: item.key,\r\n                            data: item.data,\r\n                            node: item.node,\r\n                            modifiedValues: item.modifiedValues,\r\n                            isNewRow: item.isNewRow,\r\n                            values: item.values\r\n                        })\r\n                    } else if (\"refresh\" === changeType && !(newMode && change.repaintChangesOnly)) {\r\n                        this._adaptiveExpandedKey = void 0\r\n                    }\r\n                    return items\r\n                },\r\n                _getRowIndicesForExpand: function(key) {\r\n                    var rowIndices = this.callBase.apply(this, arguments);\r\n                    if (this.getController(\"adaptiveColumns\").isAdaptiveDetailRowExpanded(key)) {\r\n                        var lastRowIndex = rowIndices[rowIndices.length - 1];\r\n                        rowIndices.push(lastRowIndex + 1)\r\n                    }\r\n                    return rowIndices\r\n                },\r\n                adaptiveExpandedKey: function(value) {\r\n                    if (isDefined(value)) {\r\n                        this._adaptiveExpandedKey = value\r\n                    } else {\r\n                        return this._adaptiveExpandedKey\r\n                    }\r\n                },\r\n                toggleExpandAdaptiveDetailRow: function(key, alwaysExpanded) {\r\n                    var oldExpandLoadedRowIndex = gridCoreUtils.getIndexByKey(this._adaptiveExpandedKey, this._items);\r\n                    var newExpandLoadedRowIndex = gridCoreUtils.getIndexByKey(key, this._items);\r\n                    if (oldExpandLoadedRowIndex >= 0 && oldExpandLoadedRowIndex === newExpandLoadedRowIndex && !alwaysExpanded) {\r\n                        key = void 0;\r\n                        newExpandLoadedRowIndex = -1\r\n                    }\r\n                    var oldKey = this._adaptiveExpandedKey;\r\n                    this._adaptiveExpandedKey = key;\r\n                    if (oldExpandLoadedRowIndex >= 0) {\r\n                        oldExpandLoadedRowIndex++\r\n                    }\r\n                    if (newExpandLoadedRowIndex >= 0) {\r\n                        newExpandLoadedRowIndex++\r\n                    }\r\n                    var rowIndexDelta = this.getRowIndexDelta();\r\n                    this.updateItems({\r\n                        allowInvisibleRowIndices: true,\r\n                        changeType: \"update\",\r\n                        rowIndices: [oldExpandLoadedRowIndex - rowIndexDelta, newExpandLoadedRowIndex - rowIndexDelta]\r\n                    });\r\n                    var adaptiveColumnsController = this.getController(\"adaptiveColumns\");\r\n                    adaptiveColumnsController.updateCommandAdaptiveAriaLabel(key, COLLAPSE_ARIA_NAME);\r\n                    adaptiveColumnsController.updateCommandAdaptiveAriaLabel(oldKey, EXPAND_ARIA_NAME)\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveExpandedKey = void 0\r\n                }\r\n            },\r\n            editorFactory: {\r\n                _getFocusCellSelector: function() {\r\n                    return this.callBase() + \", .dx-adaptive-detail-row .dx-field-item > .dx-field-item-content\"\r\n                },\r\n                _getTooltipsSelector: function() {\r\n                    return this.callBase() + \", .dx-field-item-content .\" + this.addWidgetPrefix(REVERT_TOOLTIP_CLASS)\r\n                }\r\n            },\r\n            columns: {\r\n                _isColumnVisible: function(column) {\r\n                    return this.callBase(column) && !column.adaptiveHidden\r\n                }\r\n            },\r\n            keyboardNavigation: {\r\n                _isCellValid: function($cell) {\r\n                    return this.callBase.apply(this, arguments) && !$cell.hasClass(this.addWidgetPrefix(HIDDEN_COLUMN_CLASS))\r\n                },\r\n                _processNextCellInMasterDetail: function($nextCell) {\r\n                    this.callBase($nextCell);\r\n                    var isCellOrBatchMode = this._editingController.isCellOrBatchEditMode();\r\n                    if (!this._isInsideEditForm($nextCell) && $nextCell && isCellOrBatchMode) {\r\n                        eventsEngine.on($nextCell, \"focus\", (function focusHandler() {\r\n                            eventsEngine.off($nextCell, \"focus\", focusHandler);\r\n                            eventsEngine.trigger($nextCell, \"dxclick\")\r\n                        }))\r\n                    }\r\n                },\r\n                _handleTabKeyOnMasterDetailCell: function(eventTarget, direction) {\r\n                    var result = this.callBase(eventTarget, direction);\r\n                    var $currentCell = this._getFocusedCell();\r\n                    var $row = $currentCell && $currentCell.parent();\r\n                    if (!result && $row && $row.length) {\r\n                        var $dataCells = getDataCellElements($row);\r\n                        var $targetCell = \"next\" === direction ? $dataCells.last() : $dataCells.first();\r\n                        var rowIndex = $row.get(0).rowIndex;\r\n                        var adaptiveController = this._adaptiveController;\r\n                        var key = this._dataController.getKeyByRowIndex(\"next\" === direction ? rowIndex : rowIndex - 1);\r\n                        var isCellElementsEquals = $currentCell && $targetCell && $currentCell.get(0) === $targetCell.get(0);\r\n                        return adaptiveController.isAdaptiveDetailRowExpanded(key) && isCellElementsEquals\r\n                    }\r\n                    return result\r\n                },\r\n                init: function() {\r\n                    this.callBase();\r\n                    this._adaptiveController = this.getController(\"adaptiveColumns\")\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_columns_core.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nexport function foreachColumnInfo(info, callback, rowIndex, offsets, columnCount, lastProcessedIndexes) {\r\n    rowIndex = rowIndex || 0;\r\n    offsets = offsets || [];\r\n    lastProcessedIndexes = lastProcessedIndexes || [];\r\n    offsets[rowIndex] = offsets[rowIndex] || 0;\r\n    var row = info[rowIndex];\r\n    var startIndex = lastProcessedIndexes[rowIndex] + 1 || 0;\r\n    var processedColumnCount = 0;\r\n    var colIndex;\r\n    if (!row) {\r\n        return\r\n    }\r\n    for (colIndex = startIndex; colIndex < row.length; colIndex++) {\r\n        var cell = row[colIndex];\r\n        var visibleIndex = colIndex + offsets[rowIndex];\r\n        var colspan = cell.colspan || 1;\r\n        foreachColumnInfo(info, callback, rowIndex + (cell.rowspan || 1), offsets, colspan, lastProcessedIndexes);\r\n        offsets[rowIndex] += colspan - 1;\r\n        processedColumnCount += colspan;\r\n        if (cell.rowspan) {\r\n            for (var i = rowIndex + 1; i < rowIndex + cell.rowspan; i++) {\r\n                offsets[i] = offsets[i] || 0;\r\n                offsets[i] += cell.colspan || 1\r\n            }\r\n        }\r\n        if (false === callback(cell, visibleIndex, rowIndex, colIndex)) {\r\n            break\r\n        }\r\n        if (void 0 !== columnCount && processedColumnCount >= columnCount) {\r\n            break\r\n        }\r\n    }\r\n    lastProcessedIndexes[rowIndex] = colIndex\r\n}\r\nexport function createColumnsInfo(info, startIndex, endIndex) {\r\n    var newInfo = [];\r\n    foreachColumnInfo(info, (function(columnInfo, visibleIndex, rowIndex) {\r\n        var cell = columnInfo;\r\n        var colspan;\r\n        var cellColspan = cell.colspan || 1;\r\n        var isVisible = visibleIndex + cellColspan - 1 >= startIndex && visibleIndex < endIndex;\r\n        newInfo[rowIndex] = newInfo[rowIndex] || [];\r\n        if (isVisible) {\r\n            if (visibleIndex < startIndex) {\r\n                colspan = cellColspan - (startIndex - visibleIndex);\r\n                visibleIndex = startIndex\r\n            } else {\r\n                colspan = cellColspan\r\n            }\r\n            if (visibleIndex + colspan > endIndex) {\r\n                colspan = endIndex - visibleIndex\r\n            }\r\n            if (colspan !== cellColspan) {\r\n                cell = extend({}, cell, {\r\n                    colspan: colspan\r\n                })\r\n            }\r\n            newInfo[rowIndex].push(cell)\r\n        } else if (visibleIndex > endIndex) {\r\n            return false\r\n        }\r\n    }));\r\n    for (var i = 0; i < newInfo.length; i++) {\r\n        newInfo[i] = newInfo[i] || []\r\n    }\r\n    return newInfo\r\n}\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.adaptivity.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    adaptivityModule\r\n} from \"../grid_core/ui.grid_core.adaptivity\";\r\ngridCore.registerModule(\"adaptivity\", adaptivityModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_columns.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth,\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    createColumnsInfo\r\n} from \"./ui.grid_core.virtual_columns_core\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nvar DEFAULT_COLUMN_WIDTH = 50;\r\nvar VirtualScrollingRowsViewExtender = {\r\n    _resizeCore: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._columnsController.resize()\r\n    },\r\n    _handleScroll: function(e) {\r\n        var that = this;\r\n        var scrollable = this.getScrollable();\r\n        var left = e.scrollOffset.left;\r\n        that.callBase.apply(that, arguments);\r\n        if (that.option(\"rtlEnabled\") && scrollable) {\r\n            left = getWidth(scrollable.$content()) - getWidth(scrollable.$element()) - left\r\n        }\r\n        that._columnsController.setScrollPosition(left)\r\n    }\r\n};\r\nvar HeaderViewExtender = {\r\n    _renderCore: function() {\r\n        this.callBase.apply(this, arguments);\r\n        if (this._columnsController.isVirtualMode()) {\r\n            this._updateScrollLeftPosition()\r\n        }\r\n    }\r\n};\r\nvar ColumnsControllerExtender = function() {\r\n    var getWidths = function(columns) {\r\n        return columns.map(column => column.visibleWidth || parseFloat(column.width) || DEFAULT_COLUMN_WIDTH)\r\n    };\r\n    var members = {\r\n        init: function() {\r\n            this.callBase();\r\n            this._beginPageIndex = 0;\r\n            this._endPageIndex = 0;\r\n            this._position = 0;\r\n            this._virtualVisibleColumns = {}\r\n        },\r\n        resetColumnsCache: function() {\r\n            this.callBase();\r\n            this._virtualVisibleColumns = {}\r\n        },\r\n        getBeginPageIndex: function(position) {\r\n            var visibleColumns = this.getVisibleColumns(void 0, true);\r\n            var widths = getWidths(visibleColumns);\r\n            var currentPosition = 0;\r\n            for (var index = 0; index < widths.length; index++) {\r\n                if (currentPosition >= position) {\r\n                    return Math.floor(index / this.getColumnPageSize())\r\n                }\r\n                currentPosition += widths[index]\r\n            }\r\n            return 0\r\n        },\r\n        getTotalWidth: function() {\r\n            var width = this.option(\"width\");\r\n            if (\"number\" === typeof width) {\r\n                return width\r\n            }\r\n            return this.getController(\"resizing\")._lastWidth || getOuterWidth(this.component.$element())\r\n        },\r\n        getEndPageIndex: function(position) {\r\n            var visibleColumns = this.getVisibleColumns(void 0, true);\r\n            var widths = getWidths(visibleColumns);\r\n            var currentPosition = 0;\r\n            position += this.getTotalWidth();\r\n            for (var index = 0; index < widths.length; index++) {\r\n                if (currentPosition >= position) {\r\n                    return Math.ceil(index / this.getColumnPageSize())\r\n                }\r\n                currentPosition += widths[index]\r\n            }\r\n            return Math.ceil(widths.length / this.getColumnPageSize())\r\n        },\r\n        getColumnPageSize: function() {\r\n            return this.option(\"scrolling.columnPageSize\")\r\n        },\r\n        _fireColumnsChanged: function() {\r\n            var date = new Date;\r\n            this.columnsChanged.fire({\r\n                optionNames: {\r\n                    all: true,\r\n                    length: 1\r\n                },\r\n                changeTypes: {\r\n                    columns: true,\r\n                    virtualColumnsScrolling: true,\r\n                    length: 2\r\n                }\r\n            });\r\n            this._renderTime = new Date - date\r\n        },\r\n        getScrollingTimeout: function() {\r\n            var renderingThreshold = this.option(\"scrolling.columnRenderingThreshold\");\r\n            var renderAsync = this.option(\"scrolling.renderAsync\");\r\n            var scrollingTimeout = 0;\r\n            if (!isDefined(renderAsync) && this._renderTime > renderingThreshold || renderAsync) {\r\n                scrollingTimeout = this.option(\"scrolling.timeout\")\r\n            }\r\n            return scrollingTimeout\r\n        },\r\n        setScrollPosition: function(position) {\r\n            var scrollingTimeout = this.getScrollingTimeout();\r\n            if (scrollingTimeout > 0) {\r\n                clearTimeout(this._changedTimeout);\r\n                this._changedTimeout = setTimeout(() => {\r\n                    this._setScrollPositionCore(position)\r\n                }, scrollingTimeout)\r\n            } else {\r\n                this._setScrollPositionCore(position)\r\n            }\r\n        },\r\n        isVirtualMode: function() {\r\n            return hasWindow() && \"virtual\" === this.option(\"scrolling.columnRenderingMode\")\r\n        },\r\n        resize: function() {\r\n            this._setScrollPositionCore(this._position)\r\n        },\r\n        _setScrollPositionCore: function(position) {\r\n            if (this.isVirtualMode()) {\r\n                var beginPageIndex = this.getBeginPageIndex(position);\r\n                var endPageIndex = this.getEndPageIndex(position);\r\n                var needColumnsChanged = position < this._position ? this._beginPageIndex > beginPageIndex : this._endPageIndex < endPageIndex;\r\n                this._position = position;\r\n                if (needColumnsChanged) {\r\n                    this._beginPageIndex = beginPageIndex;\r\n                    this._endPageIndex = endPageIndex;\r\n                    this._fireColumnsChanged()\r\n                }\r\n            }\r\n        },\r\n        getFixedColumns: function(rowIndex, isBase) {\r\n            var fixedColumns = this.callBase(rowIndex);\r\n            if (this.isVirtualMode() && !isBase && fixedColumns.length) {\r\n                var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\r\n                fixedColumns[transparentColumnIndex].colspan = this.getVisibleColumns().length - this.callBase().length + 1;\r\n                return fixedColumns\r\n            }\r\n            return fixedColumns\r\n        },\r\n        getVisibleColumns: function(rowIndex, isBase) {\r\n            if (isBase || !this.isVirtualMode()) {\r\n                return this.callBase(rowIndex)\r\n            }\r\n            if (!this._beginPageIndex && !this._endPageIndex) {\r\n                this._beginPageIndex = this.getBeginPageIndex(this._position);\r\n                this._endPageIndex = this.getEndPageIndex(this._position)\r\n            }\r\n            var beginPageIndex = this._beginPageIndex;\r\n            var endPageIndex = this._endPageIndex;\r\n            var visibleColumnsHash = rowIndex + \"-\" + beginPageIndex + \"-\" + endPageIndex;\r\n            if (this._virtualVisibleColumns[visibleColumnsHash]) {\r\n                return this._virtualVisibleColumns[visibleColumnsHash]\r\n            }\r\n            var visibleColumns = this.callBase();\r\n            var rowCount = this.getRowCount();\r\n            var pageSize = this.getColumnPageSize();\r\n            var startIndex = beginPageIndex * pageSize;\r\n            var endIndex = endPageIndex * pageSize;\r\n            var fixedColumns = this.getFixedColumns(void 0, true);\r\n            var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\r\n            var beginFixedColumnCount = fixedColumns.length ? transparentColumnIndex : 0;\r\n            var beginFixedColumns = visibleColumns.slice(0, beginFixedColumnCount);\r\n            var beginColumns = visibleColumns.slice(beginFixedColumnCount, startIndex);\r\n            var beginWidth = getWidths(beginColumns).reduce((a, b) => a + b, 0);\r\n            if (!beginWidth) {\r\n                startIndex = 0\r\n            }\r\n            var endFixedColumnCount = fixedColumns.length ? fixedColumns.length - transparentColumnIndex - 1 : 0;\r\n            var endFixedColumns = visibleColumns.slice(visibleColumns.length - endFixedColumnCount);\r\n            var endColumns = visibleColumns.slice(endIndex, visibleColumns.length - endFixedColumnCount);\r\n            var endWidth = getWidths(endColumns).reduce((a, b) => a + b, 0);\r\n            if (!endWidth) {\r\n                endIndex = visibleColumns.length\r\n            }\r\n            if (rowCount > 1 && \"number\" === typeof rowIndex) {\r\n                var columnsInfo = [];\r\n                for (var i = 0; i < rowCount; i++) {\r\n                    columnsInfo.push(this.callBase(i))\r\n                }\r\n                beginFixedColumns = createColumnsInfo(columnsInfo, 0, beginFixedColumns.length)[rowIndex] || [];\r\n                endFixedColumns = createColumnsInfo(columnsInfo, visibleColumns.length - endFixedColumns.length, visibleColumns.length)[rowIndex] || [];\r\n                visibleColumns = createColumnsInfo(columnsInfo, startIndex, endIndex)[rowIndex] || []\r\n            } else {\r\n                visibleColumns = visibleColumns.slice(startIndex, endIndex)\r\n            }\r\n            if (beginWidth) {\r\n                visibleColumns.unshift({\r\n                    command: \"virtual\",\r\n                    width: beginWidth\r\n                });\r\n                visibleColumns = beginFixedColumns.concat(visibleColumns)\r\n            }\r\n            if (endWidth) {\r\n                visibleColumns.push({\r\n                    command: \"virtual\",\r\n                    width: endWidth\r\n                });\r\n                visibleColumns = visibleColumns.concat(endFixedColumns)\r\n            }\r\n            this._virtualVisibleColumns[visibleColumnsHash] = visibleColumns;\r\n            return visibleColumns\r\n        },\r\n        getColumnIndexOffset: function() {\r\n            var offset = 0;\r\n            if (this._beginPageIndex > 0) {\r\n                var fixedColumns = this.getFixedColumns();\r\n                var transparentColumnIndex = fixedColumns.map(c => c.command).indexOf(\"transparent\");\r\n                var leftFixedColumnCount = transparentColumnIndex >= 0 ? transparentColumnIndex : 0;\r\n                offset = this._beginPageIndex * this.getColumnPageSize() - leftFixedColumnCount - 1\r\n            }\r\n            return offset > 0 ? offset : 0\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._changedTimeout);\r\n            this.callBase.apply(this, arguments)\r\n        }\r\n    };\r\n    return members\r\n}();\r\nexport var virtualColumnsModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            scrolling: {\r\n                columnRenderingMode: \"standard\",\r\n                columnPageSize: 5,\r\n                columnRenderingThreshold: 300\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            columns: ColumnsControllerExtender\r\n        },\r\n        views: {\r\n            columnHeadersView: HeaderViewExtender,\r\n            rowsView: VirtualScrollingRowsViewExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.virtual_columns.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    virtualColumnsModule\r\n} from \"../grid_core/ui.grid_core.virtual_columns\";\r\ngridCore.registerModule(\"virtualColumns\", virtualColumnsModule);\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.export_mixin.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nexport default {\r\n    _getEmptyCell: function() {\r\n        return {\r\n            text: \"\",\r\n            value: void 0,\r\n            colspan: 1,\r\n            rowspan: 1\r\n        }\r\n    },\r\n    _defaultSetter: function(value) {\r\n        return !value ? 1 : value\r\n    },\r\n    _cloneItem: function(item) {\r\n        return extend({}, item, this._getEmptyCell())\r\n    },\r\n    _prepareItems: function(items) {\r\n        var that = this;\r\n        var resultItems = [];\r\n        var cols = (items[0] || []).reduce((sum, item) => sum + that._defaultSetter(item.colspan), 0);\r\n        var getItem = function(items) {\r\n            var rowIndex = 0;\r\n            var cellIndex = 0;\r\n            return function() {\r\n                var row = items[rowIndex] || [];\r\n                var item = row[cellIndex++];\r\n                if (cellIndex >= row.length) {\r\n                    rowIndex++;\r\n                    cellIndex = 0\r\n                }\r\n                if (item) {\r\n                    item.colspan = that._defaultSetter(item.colspan);\r\n                    item.rowspan = that._defaultSetter(item.rowspan)\r\n                }\r\n                return item\r\n            }\r\n        }(items);\r\n\r\n        function addItem(rowIndex, cellIndex, item) {\r\n            var row = resultItems[rowIndex] = resultItems[rowIndex] || [];\r\n            row[cellIndex] = item;\r\n            if (item.colspan > 1 || item.rowspan > 1) {\r\n                var clone = that._cloneItem(item);\r\n                for (var c = 1; c < item.colspan; c++) {\r\n                    addItem(rowIndex, cellIndex + c, clone)\r\n                }\r\n                for (var r = 1; r < item.rowspan; r++) {\r\n                    for (var _c = 0; _c < item.colspan; _c++) {\r\n                        addItem(rowIndex + r, cellIndex + _c, clone)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        var item = getItem();\r\n        var rowIndex = 0;\r\n        while (item) {\r\n            for (var cellIndex = 0; cellIndex < cols; cellIndex++) {\r\n                if (!item) {\r\n                    break\r\n                }\r\n                if (resultItems[rowIndex] && resultItems[rowIndex][cellIndex]) {\r\n                    continue\r\n                }\r\n                addItem(rowIndex, cellIndex, item);\r\n                cellIndex += item.colspan - 1;\r\n                item = getItem()\r\n            }\r\n            rowIndex++\r\n        }\r\n        return resultItems\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/button_group.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport Widget from \"./widget/ui.widget\";\r\nimport Button from \"./button\";\r\nimport CollectionWidget from \"./collection/ui.collection_widget.edit\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    isDefined,\r\n    isFunction\r\n} from \"../core/utils/type\";\r\nimport {\r\n    BindableTemplate\r\n} from \"../core/templates/bindable_template\";\r\nvar BUTTON_GROUP_CLASS = \"dx-buttongroup\";\r\nvar BUTTON_GROUP_WRAPPER_CLASS = BUTTON_GROUP_CLASS + \"-wrapper\";\r\nvar BUTTON_GROUP_ITEM_CLASS = BUTTON_GROUP_CLASS + \"-item\";\r\nvar BUTTON_GROUP_FIRST_ITEM_CLASS = BUTTON_GROUP_CLASS + \"-first-item\";\r\nvar BUTTON_GROUP_LAST_ITEM_CLASS = BUTTON_GROUP_CLASS + \"-last-item\";\r\nvar BUTTON_GROUP_ITEM_HAS_WIDTH = BUTTON_GROUP_ITEM_CLASS + \"-has-width\";\r\nvar SHAPE_STANDARD_CLASS = \"dx-shape-standard\";\r\nvar ButtonCollection = CollectionWidget.inherit({\r\n    _initTemplates() {\r\n        this.callBase();\r\n        this._templateManager.addDefaultTemplates({\r\n            item: new BindableTemplate(($container, data, model) => {\r\n                this._prepareItemStyles($container);\r\n                var template = this.option(\"buttonTemplate\");\r\n                this._createComponent($container, Button, extend({}, model, data, this._getBasicButtonOptions(), {\r\n                    _templateData: this._hasCustomTemplate(template) ? model : {},\r\n                    template: model.template || template\r\n                }))\r\n            }, [\"text\", \"type\", \"icon\", \"disabled\", \"visible\", \"hint\"], this.option(\"integrationOptions.watchMethod\"))\r\n        })\r\n    },\r\n    _getBasicButtonOptions() {\r\n        return {\r\n            focusStateEnabled: false,\r\n            onClick: null,\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            stylingMode: this.option(\"stylingMode\")\r\n        }\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            itemTemplateProperty: null\r\n        })\r\n    },\r\n    _hasCustomTemplate(template) {\r\n        return isFunction(template) || this.option(\"integrationOptions.templates\")[template]\r\n    },\r\n    _prepareItemStyles($item) {\r\n        var itemIndex = $item.data(\"dxItemIndex\");\r\n        0 === itemIndex && $item.addClass(BUTTON_GROUP_FIRST_ITEM_CLASS);\r\n        var items = this.option(\"items\");\r\n        items && itemIndex === items.length - 1 && $item.addClass(BUTTON_GROUP_LAST_ITEM_CLASS);\r\n        $item.addClass(SHAPE_STANDARD_CLASS)\r\n    },\r\n    _renderItemContent(args) {\r\n        args.container = $(args.container).parent();\r\n        return this.callBase(args)\r\n    },\r\n    _renderItemContentByNode: function(args, $node) {\r\n        args.container = $(args.container.children().first());\r\n        return this.callBase(args, $node)\r\n    },\r\n    _focusTarget() {\r\n        return this.$element().parent()\r\n    },\r\n    _keyboardEventBindingTarget() {\r\n        return this._focusTarget()\r\n    },\r\n    _refreshContent() {\r\n        this._prepareContent();\r\n        this._renderContent()\r\n    },\r\n    _itemClass: () => BUTTON_GROUP_ITEM_CLASS,\r\n    _itemSelectHandler: function(e) {\r\n        if (\"single\" === this.option(\"selectionMode\") && this.isItemSelected(e.currentTarget)) {\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    }\r\n});\r\nvar ButtonGroup = Widget.inherit({\r\n    _getDefaultOptions() {\r\n        return extend(this.callBase(), {\r\n            hoverStateEnabled: true,\r\n            focusStateEnabled: true,\r\n            selectionMode: \"single\",\r\n            selectedItems: [],\r\n            selectedItemKeys: [],\r\n            stylingMode: \"contained\",\r\n            keyExpr: \"text\",\r\n            items: [],\r\n            buttonTemplate: \"content\",\r\n            onSelectionChanged: null,\r\n            onItemClick: null\r\n        })\r\n    },\r\n    _init() {\r\n        this.callBase();\r\n        this._createItemClickAction()\r\n    },\r\n    _createItemClickAction() {\r\n        this._itemClickAction = this._createActionByOption(\"onItemClick\")\r\n    },\r\n    _initMarkup() {\r\n        this.setAria(\"role\", \"group\");\r\n        this.$element().addClass(BUTTON_GROUP_CLASS);\r\n        this._renderButtons();\r\n        this._syncSelectionOptions();\r\n        this.callBase()\r\n    },\r\n    _fireSelectionChangeEvent: function(addedItems, removedItems) {\r\n        this._createActionByOption(\"onSelectionChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })({\r\n            addedItems: addedItems,\r\n            removedItems: removedItems\r\n        })\r\n    },\r\n    _renderButtons() {\r\n        var $buttons = $(\"<div>\").addClass(BUTTON_GROUP_WRAPPER_CLASS).appendTo(this.$element());\r\n        var selectedItems = this.option(\"selectedItems\");\r\n        var options = {\r\n            selectionMode: this.option(\"selectionMode\"),\r\n            items: this.option(\"items\"),\r\n            keyExpr: this.option(\"keyExpr\"),\r\n            buttonTemplate: this.option(\"buttonTemplate\"),\r\n            scrollingEnabled: false,\r\n            selectedItemKeys: this.option(\"selectedItemKeys\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            stylingMode: this.option(\"stylingMode\"),\r\n            accessKey: this.option(\"accessKey\"),\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            noDataText: \"\",\r\n            selectionRequired: false,\r\n            onItemRendered: e => {\r\n                var width = this.option(\"width\");\r\n                isDefined(width) && $(e.itemElement).addClass(BUTTON_GROUP_ITEM_HAS_WIDTH)\r\n            },\r\n            onSelectionChanged: e => {\r\n                this._syncSelectionOptions();\r\n                this._fireSelectionChangeEvent(e.addedItems, e.removedItems)\r\n            },\r\n            onItemClick: e => {\r\n                this._itemClickAction(e)\r\n            }\r\n        };\r\n        if (isDefined(selectedItems) && selectedItems.length) {\r\n            options.selectedItems = selectedItems\r\n        }\r\n        this._buttonsCollection = this._createComponent($buttons, ButtonCollection, options)\r\n    },\r\n    _syncSelectionOptions() {\r\n        this._setOptionWithoutOptionChange(\"selectedItems\", this._buttonsCollection.option(\"selectedItems\"));\r\n        this._setOptionWithoutOptionChange(\"selectedItemKeys\", this._buttonsCollection.option(\"selectedItemKeys\"))\r\n    },\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"stylingMode\":\r\n            case \"selectionMode\":\r\n            case \"keyExpr\":\r\n            case \"buttonTemplate\":\r\n            case \"items\":\r\n            case \"activeStateEnabled\":\r\n            case \"focusStateEnabled\":\r\n            case \"hoverStateEnabled\":\r\n            case \"tabIndex\":\r\n                this._invalidate();\r\n                break;\r\n            case \"selectedItemKeys\":\r\n            case \"selectedItems\":\r\n                this._buttonsCollection.option(args.name, args.value);\r\n                break;\r\n            case \"onItemClick\":\r\n                this._createItemClickAction();\r\n                break;\r\n            case \"onSelectionChanged\":\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._buttonsCollection.itemElements().toggleClass(BUTTON_GROUP_ITEM_HAS_WIDTH, !!args.value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n});\r\nregisterComponent(\"dxButtonGroup\", ButtonGroup);\r\nexport default ButtonGroup;\r\n","/**\r\n * DevExtreme (esm/ui/drop_down_button.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../core/renderer\";\r\nimport Widget from \"./widget/ui.widget\";\r\nimport {\r\n    FunctionTemplate\r\n} from \"../core/templates/function_template\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport ButtonGroup from \"./button_group\";\r\nimport Popup from \"./popup\";\r\nimport List from \"./list_light\";\r\nimport {\r\n    compileGetter\r\n} from \"../core/utils/data\";\r\nimport {\r\n    getPublicElement\r\n} from \"../core/element\";\r\nimport {\r\n    getImageContainer\r\n} from \"../core/utils/icon\";\r\nimport DataHelperMixin from \"../data_helper\";\r\nimport {\r\n    DataSource\r\n} from \"../data/data_source/data_source\";\r\nimport ArrayStore from \"../data/array_store\";\r\nimport {\r\n    Deferred\r\n} from \"../core/utils/deferred\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport {\r\n    isPlainObject,\r\n    isDefined\r\n} from \"../core/utils/type\";\r\nimport {\r\n    ensureDefined,\r\n    noop\r\n} from \"../core/utils/common\";\r\nimport Guid from \"../core/guid\";\r\nimport {\r\n    getElementWidth,\r\n    getSizeValue\r\n} from \"./drop_down_editor/utils\";\r\nimport messageLocalization from \"../localization/message\";\r\nvar DROP_DOWN_BUTTON_CLASS = \"dx-dropdownbutton\";\r\nvar DROP_DOWN_BUTTON_CONTENT = \"dx-dropdownbutton-content\";\r\nvar DROP_DOWN_BUTTON_ACTION_CLASS = \"dx-dropdownbutton-action\";\r\nvar DROP_DOWN_BUTTON_TOGGLE_CLASS = \"dx-dropdownbutton-toggle\";\r\nvar DROP_DOWN_BUTTON_HAS_ARROW_CLASS = \"dx-dropdownbutton-has-arrow\";\r\nvar DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS = \"dx-dropdownbutton-popup-wrapper\";\r\nvar DROP_DOWN_EDITOR_OVERLAY_CLASS = \"dx-dropdowneditor-overlay\";\r\nvar DX_BUTTON_TEXT_CLASS = \"dx-button-text\";\r\nvar DX_ICON_RIGHT_CLASS = \"dx-icon-right\";\r\nvar DropDownButton = Widget.inherit({\r\n    _getDefaultOptions() {\r\n        return extend(this.callBase(), {\r\n            itemTemplate: \"item\",\r\n            keyExpr: \"this\",\r\n            displayExpr: void 0,\r\n            selectedItem: null,\r\n            selectedItemKey: null,\r\n            stylingMode: \"outlined\",\r\n            deferRendering: true,\r\n            noDataText: messageLocalization.format(\"dxCollectionWidget-noDataText\"),\r\n            useSelectMode: false,\r\n            splitButton: false,\r\n            showArrowIcon: true,\r\n            text: \"\",\r\n            icon: void 0,\r\n            onButtonClick: null,\r\n            onSelectionChanged: null,\r\n            onItemClick: null,\r\n            opened: false,\r\n            items: null,\r\n            dataSource: null,\r\n            focusStateEnabled: true,\r\n            hoverStateEnabled: true,\r\n            dropDownOptions: {},\r\n            dropDownContentTemplate: \"content\",\r\n            wrapItemText: false,\r\n            useItemTextAsTitle: true,\r\n            grouped: false,\r\n            groupTemplate: \"group\",\r\n            buttonGroupOptions: {}\r\n        })\r\n    },\r\n    _setOptionsByReference() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            selectedItem: true\r\n        })\r\n    },\r\n    _init() {\r\n        this.callBase();\r\n        this._createItemClickAction();\r\n        this._createActionClickAction();\r\n        this._createSelectionChangedAction();\r\n        this._initDataSource();\r\n        this._compileKeyGetter();\r\n        this._compileDisplayGetter();\r\n        this._itemsToDataSource(this.option(\"items\"));\r\n        this._options.cache(\"buttonGroupOptions\", this.option(\"buttonGroupOptions\"));\r\n        this._options.cache(\"dropDownOptions\", this.option(\"dropDownOptions\"))\r\n    },\r\n    _initTemplates() {\r\n        this._templateManager.addDefaultTemplates({\r\n            content: new FunctionTemplate(options => {\r\n                var $popupContent = $(options.container);\r\n                var $listContainer = $(\"<div>\").appendTo($popupContent);\r\n                this._list = this._createComponent($listContainer, List, this._listOptions());\r\n                this._list.registerKeyHandler(\"escape\", this._escHandler.bind(this));\r\n                this._list.registerKeyHandler(\"tab\", this._escHandler.bind(this));\r\n                this._list.registerKeyHandler(\"leftArrow\", this._escHandler.bind(this));\r\n                this._list.registerKeyHandler(\"rightArrow\", this._escHandler.bind(this))\r\n            })\r\n        });\r\n        this.callBase()\r\n    },\r\n    _itemsToDataSource: function(value) {\r\n        if (!this._dataSource) {\r\n            this._dataSource = new DataSource({\r\n                store: new ArrayStore({\r\n                    key: this._getKey(),\r\n                    data: value\r\n                }),\r\n                pageSize: 0\r\n            })\r\n        }\r\n    },\r\n    _getKey: function() {\r\n        var _this$_dataSource;\r\n        var keyExpr = this.option(\"keyExpr\");\r\n        var storeKey = null === (_this$_dataSource = this._dataSource) || void 0 === _this$_dataSource ? void 0 : _this$_dataSource.key();\r\n        return isDefined(storeKey) && (!isDefined(keyExpr) || \"this\" === keyExpr) ? storeKey : keyExpr\r\n    },\r\n    _compileKeyGetter() {\r\n        this._keyGetter = compileGetter(this._getKey())\r\n    },\r\n    _compileDisplayGetter() {\r\n        this._displayGetter = compileGetter(this.option(\"displayExpr\"))\r\n    },\r\n    _initMarkup() {\r\n        this.callBase();\r\n        this.$element().addClass(DROP_DOWN_BUTTON_CLASS);\r\n        this._renderButtonGroup();\r\n        this._updateArrowClass();\r\n        if (isDefined(this.option(\"selectedItemKey\"))) {\r\n            this._loadSelectedItem().done(this._updateActionButton.bind(this))\r\n        }\r\n    },\r\n    _renderFocusTarget: noop,\r\n    _render() {\r\n        if (!this.option(\"deferRendering\") || this.option(\"opened\")) {\r\n            this._renderPopup()\r\n        }\r\n        this.callBase()\r\n    },\r\n    _renderContentImpl() {\r\n        if (this._popup) {\r\n            this._renderPopupContent()\r\n        }\r\n        return this.callBase()\r\n    },\r\n    _loadSelectedItem() {\r\n        var _this$_loadSingleDefe;\r\n        null === (_this$_loadSingleDefe = this._loadSingleDeferred) || void 0 === _this$_loadSingleDefe ? void 0 : _this$_loadSingleDefe.reject();\r\n        var d = new Deferred;\r\n        if (this._list && void 0 !== this._lastSelectedItemData) {\r\n            var cachedResult = this.option(\"useSelectMode\") ? this._list.option(\"selectedItem\") : this._lastSelectedItemData;\r\n            return d.resolve(cachedResult)\r\n        }\r\n        this._lastSelectedItemData = void 0;\r\n        var selectedItemKey = this.option(\"selectedItemKey\");\r\n        this._loadSingle(this._getKey(), selectedItemKey).done(d.resolve).fail(() => {\r\n            d.resolve(null)\r\n        });\r\n        this._loadSingleDeferred = d;\r\n        return d.promise()\r\n    },\r\n    _createActionClickAction() {\r\n        this._actionClickAction = this._createActionByOption(\"onButtonClick\")\r\n    },\r\n    _createSelectionChangedAction() {\r\n        this._selectionChangedAction = this._createActionByOption(\"onSelectionChanged\")\r\n    },\r\n    _createItemClickAction() {\r\n        this._itemClickAction = this._createActionByOption(\"onItemClick\")\r\n    },\r\n    _fireSelectionChangedAction(_ref) {\r\n        var {\r\n            previousValue: previousValue,\r\n            value: value\r\n        } = _ref;\r\n        this._selectionChangedAction({\r\n            item: value,\r\n            previousItem: previousValue\r\n        })\r\n    },\r\n    _fireItemClickAction(_ref2) {\r\n        var {\r\n            event: event,\r\n            itemElement: itemElement,\r\n            itemData: itemData\r\n        } = _ref2;\r\n        return this._itemClickAction({\r\n            event: event,\r\n            itemElement: itemElement,\r\n            itemData: this._actionItem || itemData\r\n        })\r\n    },\r\n    _actionButtonConfig() {\r\n        return {\r\n            text: this.option(\"text\"),\r\n            icon: this.option(\"icon\"),\r\n            elementAttr: {\r\n                class: DROP_DOWN_BUTTON_ACTION_CLASS\r\n            }\r\n        }\r\n    },\r\n    _getButtonGroupItems() {\r\n        var items = [];\r\n        items.push(this._actionButtonConfig());\r\n        if (this.option(\"splitButton\")) {\r\n            items.push({\r\n                icon: \"spindown\",\r\n                elementAttr: {\r\n                    class: DROP_DOWN_BUTTON_TOGGLE_CLASS\r\n                }\r\n            })\r\n        }\r\n        return items\r\n    },\r\n    _buttonGroupItemClick(_ref3) {\r\n        var {\r\n            event: event,\r\n            itemData: itemData\r\n        } = _ref3;\r\n        var isActionButton = itemData.elementAttr.class === DROP_DOWN_BUTTON_ACTION_CLASS;\r\n        var isToggleButton = itemData.elementAttr.class === DROP_DOWN_BUTTON_TOGGLE_CLASS;\r\n        if (isToggleButton) {\r\n            this.toggle()\r\n        } else if (isActionButton) {\r\n            this._actionClickAction({\r\n                event: event,\r\n                selectedItem: this.option(\"selectedItem\")\r\n            });\r\n            if (!this.option(\"splitButton\")) {\r\n                this.toggle()\r\n            }\r\n        }\r\n    },\r\n    _buttonGroupOptions() {\r\n        var buttonTemplate = this.option(\"splitButton\") || !this.option(\"showArrowIcon\") ? \"content\" : (_ref4, buttonContent) => {\r\n            var {\r\n                text: text,\r\n                icon: icon\r\n            } = _ref4;\r\n            var $firstIcon = getImageContainer(icon);\r\n            var $textContainer = text ? $(\"<span>\").text(text).addClass(DX_BUTTON_TEXT_CLASS) : void 0;\r\n            var $secondIcon = getImageContainer(\"spindown\").addClass(DX_ICON_RIGHT_CLASS);\r\n            $(buttonContent).append($firstIcon, $textContainer, $secondIcon)\r\n        };\r\n        return extend({\r\n            items: this._getButtonGroupItems(),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            onItemClick: this._buttonGroupItemClick.bind(this),\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            stylingMode: this.option(\"stylingMode\"),\r\n            selectionMode: \"none\",\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            onKeyboardHandled: e => this._keyboardHandler(e),\r\n            buttonTemplate: buttonTemplate\r\n        }, this._options.cache(\"buttonGroupOptions\"))\r\n    },\r\n    _renderPopupContent() {\r\n        var $content = this._popup.$content();\r\n        var template = this._getTemplateByOption(\"dropDownContentTemplate\");\r\n        $content.empty();\r\n        this._popupContentId = \"dx-\" + new Guid;\r\n        this.setAria(\"id\", this._popupContentId, $content);\r\n        return template.render({\r\n            container: getPublicElement($content),\r\n            model: this.option(\"items\") || this._dataSource\r\n        })\r\n    },\r\n    _popupOptions() {\r\n        var horizontalAlignment = this.option(\"rtlEnabled\") ? \"right\" : \"left\";\r\n        return extend({\r\n            dragEnabled: false,\r\n            focusStateEnabled: false,\r\n            deferRendering: this.option(\"deferRendering\"),\r\n            closeOnOutsideClick: e => {\r\n                var $element = this.$element();\r\n                var $buttonClicked = $(e.target).closest(\".\".concat(DROP_DOWN_BUTTON_CLASS));\r\n                return !$buttonClicked.is($element)\r\n            },\r\n            showTitle: false,\r\n            animation: {\r\n                show: {\r\n                    type: \"fade\",\r\n                    duration: 0,\r\n                    from: 0,\r\n                    to: 1\r\n                },\r\n                hide: {\r\n                    type: \"fade\",\r\n                    duration: 400,\r\n                    from: 1,\r\n                    to: 0\r\n                }\r\n            },\r\n            _ignoreFunctionValueDeprecation: true,\r\n            width: () => getElementWidth(this.$element()),\r\n            height: \"auto\",\r\n            shading: false,\r\n            position: {\r\n                of: this.$element(),\r\n                collision: \"flipfit\",\r\n                my: horizontalAlignment + \" top\",\r\n                at: horizontalAlignment + \" bottom\"\r\n            },\r\n            wrapperAttr: {\r\n                class: DROP_DOWN_EDITOR_OVERLAY_CLASS\r\n            }\r\n        }, this._options.cache(\"dropDownOptions\"), {\r\n            visible: this.option(\"opened\")\r\n        })\r\n    },\r\n    _listOptions() {\r\n        var selectedItemKey = this.option(\"selectedItemKey\");\r\n        var useSelectMode = this.option(\"useSelectMode\");\r\n        return {\r\n            selectionMode: useSelectMode ? \"single\" : \"none\",\r\n            wrapItemText: this.option(\"wrapItemText\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            useItemTextAsTitle: this.option(\"useItemTextAsTitle\"),\r\n            onContentReady: () => this._fireContentReadyAction(),\r\n            selectedItemKeys: isDefined(selectedItemKey) && useSelectMode ? [selectedItemKey] : [],\r\n            grouped: this.option(\"grouped\"),\r\n            groupTemplate: this.option(\"groupTemplate\"),\r\n            keyExpr: this._getKey(),\r\n            noDataText: this.option(\"noDataText\"),\r\n            displayExpr: this.option(\"displayExpr\"),\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            items: this.option(\"items\"),\r\n            dataSource: this._dataSource,\r\n            onItemClick: e => {\r\n                if (!this.option(\"useSelectMode\")) {\r\n                    this._lastSelectedItemData = e.itemData\r\n                }\r\n                this.option(\"selectedItemKey\", this._keyGetter(e.itemData));\r\n                var actionResult = this._fireItemClickAction(e);\r\n                if (false !== actionResult) {\r\n                    this.toggle(false);\r\n                    this._buttonGroup.focus()\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _upDownKeyHandler() {\r\n        if (this._popup && this._popup.option(\"visible\") && this._list) {\r\n            this._list.focus()\r\n        } else {\r\n            this.open()\r\n        }\r\n        return true\r\n    },\r\n    _escHandler() {\r\n        this.close();\r\n        this._buttonGroup.focus();\r\n        return true\r\n    },\r\n    _tabHandler() {\r\n        this.close();\r\n        return true\r\n    },\r\n    _renderPopup() {\r\n        var $popup = $(\"<div>\");\r\n        this.$element().append($popup);\r\n        this._popup = this._createComponent($popup, Popup, this._popupOptions());\r\n        this._popup.$content().addClass(DROP_DOWN_BUTTON_CONTENT);\r\n        this._popup.$wrapper().addClass(DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS);\r\n        this._popup.on(\"hiding\", this._popupHidingHandler.bind(this));\r\n        this._popup.on(\"showing\", this._popupShowingHandler.bind(this));\r\n        this._bindInnerWidgetOptions(this._popup, \"dropDownOptions\")\r\n    },\r\n    _popupHidingHandler() {\r\n        this.option(\"opened\", false);\r\n        this._setAriaExpanded(false)\r\n    },\r\n    _popupOptionChanged: function(args) {\r\n        var options = Widget.getOptionsFromContainer(args);\r\n        this._setPopupOption(options);\r\n        var optionsKeys = Object.keys(options);\r\n        if (-1 !== optionsKeys.indexOf(\"width\") || -1 !== optionsKeys.indexOf(\"height\")) {\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        var popupWidth = getSizeValue(this.option(\"dropDownOptions.width\"));\r\n        if (void 0 === popupWidth) {\r\n            this._setPopupOption(\"width\", () => getElementWidth(this.$element()))\r\n        }\r\n    },\r\n    _setPopupOption: function(optionName, value) {\r\n        this._setWidgetOption(\"_popup\", arguments)\r\n    },\r\n    _popupShowingHandler() {\r\n        this.option(\"opened\", true);\r\n        this._setAriaExpanded(true)\r\n    },\r\n    _setAriaExpanded(value) {\r\n        this._ariaExpandedElements.forEach(ariaElement => {\r\n            this.setAria({\r\n                expanded: value,\r\n                owns: value ? this._popupContentId : void 0\r\n            }, $(ariaElement))\r\n        })\r\n    },\r\n    _renderButtonGroup() {\r\n        var $buttonGroup = this._buttonGroup && this._buttonGroup.$element() || $(\"<div>\");\r\n        if (!this._buttonGroup) {\r\n            this.$element().append($buttonGroup)\r\n        }\r\n        this._buttonGroup = this._createComponent($buttonGroup, ButtonGroup, this._buttonGroupOptions());\r\n        var buttonElements = this._buttonGroup.$element().find(\".dx-button\").toArray();\r\n        this._ariaExpandedElements = [...buttonElements, this.$element()];\r\n        this._buttonGroup.registerKeyHandler(\"downArrow\", this._upDownKeyHandler.bind(this));\r\n        this._buttonGroup.registerKeyHandler(\"tab\", this._tabHandler.bind(this));\r\n        this._buttonGroup.registerKeyHandler(\"upArrow\", this._upDownKeyHandler.bind(this));\r\n        this._buttonGroup.registerKeyHandler(\"escape\", this._escHandler.bind(this));\r\n        this._bindInnerWidgetOptions(this._buttonGroup, \"buttonGroupOptions\");\r\n        this._setAriaExpanded(this.option(\"opened\"))\r\n    },\r\n    _updateArrowClass() {\r\n        var hasArrow = this.option(\"splitButton\") || this.option(\"showArrowIcon\");\r\n        this.$element().toggleClass(DROP_DOWN_BUTTON_HAS_ARROW_CLASS, hasArrow)\r\n    },\r\n    toggle(visible) {\r\n        if (!this._popup) {\r\n            this._renderPopup();\r\n            this._renderContent()\r\n        }\r\n        return this._popup.toggle(visible)\r\n    },\r\n    open() {\r\n        return this.toggle(true)\r\n    },\r\n    close() {\r\n        return this.toggle(false)\r\n    },\r\n    _setListOption(name, value) {\r\n        this._list && this._list.option(name, value)\r\n    },\r\n    _getDisplayValue(item) {\r\n        var isPrimitiveItem = !isPlainObject(item);\r\n        var displayValue = isPrimitiveItem ? item : this._displayGetter(item);\r\n        return !isPlainObject(displayValue) ? String(ensureDefined(displayValue, \"\")) : \"\"\r\n    },\r\n    _updateActionButton(selectedItem) {\r\n        if (this.option(\"useSelectMode\")) {\r\n            this.option({\r\n                text: this._getDisplayValue(selectedItem),\r\n                icon: isPlainObject(selectedItem) ? selectedItem.icon : void 0\r\n            })\r\n        }\r\n        this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem);\r\n        this._setOptionWithoutOptionChange(\"selectedItemKey\", this._keyGetter(selectedItem))\r\n    },\r\n    _clean() {\r\n        this._list && this._list.$element().remove();\r\n        this._popup && this._popup.$element().remove()\r\n    },\r\n    _selectedItemKeyChanged(value) {\r\n        this._setListOption(\"selectedItemKeys\", this.option(\"useSelectMode\") && isDefined(value) ? [value] : []);\r\n        var previousItem = this.option(\"selectedItem\");\r\n        this._loadSelectedItem().done(selectedItem => {\r\n            this._updateActionButton(selectedItem);\r\n            if (this._displayGetter(previousItem) !== this._displayGetter(selectedItem)) {\r\n                this._fireSelectionChangedAction({\r\n                    previousValue: previousItem,\r\n                    value: selectedItem\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _actionButtonOptionChanged(_ref5) {\r\n        var {\r\n            name: name,\r\n            value: value\r\n        } = _ref5;\r\n        var newConfig = {};\r\n        newConfig[name] = value;\r\n        this._buttonGroup.option(\"items[0]\", extend({}, this._actionButtonConfig(), newConfig));\r\n        this._popup && this._popup.repaint()\r\n    },\r\n    _selectModeChanged(value) {\r\n        if (value) {\r\n            this._setListOption(\"selectionMode\", \"single\");\r\n            var selectedItemKey = this.option(\"selectedItemKey\");\r\n            this._setListOption(\"selectedItemKeys\", isDefined(selectedItemKey) ? [selectedItemKey] : []);\r\n            this._selectedItemKeyChanged(this.option(\"selectedItemKey\"))\r\n        } else {\r\n            this._setListOption(\"selectionMode\", \"none\");\r\n            this.option({\r\n                selectedItemKey: void 0,\r\n                selectedItem: void 0\r\n            });\r\n            this._actionButtonOptionChanged({\r\n                text: this.option(\"text\")\r\n            })\r\n        }\r\n    },\r\n    _updateItemCollection(optionName) {\r\n        var selectedItemKey = this.option(\"selectedItemKey\");\r\n        this._setListOption(\"selectedItem\", null);\r\n        this._setWidgetOption(\"_list\", [optionName]);\r\n        if (isDefined(selectedItemKey)) {\r\n            this._loadSelectedItem().done(selectedItem => {\r\n                this._setListOption(\"selectedItemKeys\", [selectedItemKey]);\r\n                this._setListOption(\"selectedItem\", selectedItem)\r\n            }).fail(error => {\r\n                this._setListOption(\"selectedItemKeys\", [])\r\n            }).always(this._updateActionButton.bind(this))\r\n        }\r\n    },\r\n    _updateDataSource: function() {\r\n        var items = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._dataSource.items();\r\n        this._dataSource = void 0;\r\n        this._itemsToDataSource(items);\r\n        this._updateKeyExpr()\r\n    },\r\n    _updateKeyExpr: function() {\r\n        this._compileKeyGetter();\r\n        this._setListOption(\"keyExpr\", this._getKey())\r\n    },\r\n    focus: function() {\r\n        this._buttonGroup.focus()\r\n    },\r\n    _optionChanged(args) {\r\n        var _this$_popup;\r\n        var {\r\n            name: name,\r\n            value: value\r\n        } = args;\r\n        switch (name) {\r\n            case \"useSelectMode\":\r\n                this._selectModeChanged(value);\r\n                break;\r\n            case \"splitButton\":\r\n                this._updateArrowClass();\r\n                this._renderButtonGroup();\r\n                break;\r\n            case \"displayExpr\":\r\n                this._compileDisplayGetter();\r\n                this._setListOption(name, value);\r\n                this._updateActionButton(this.option(\"selectedItem\"));\r\n                break;\r\n            case \"keyExpr\":\r\n                this._updateDataSource();\r\n                break;\r\n            case \"buttonGroupOptions\":\r\n                this._innerWidgetOptionChanged(this._buttonGroup, args);\r\n                break;\r\n            case \"dropDownOptions\":\r\n                if (\"dropDownOptions.visible\" === args.fullName) {\r\n                    break\r\n                }\r\n                if (void 0 !== args.value.visible) {\r\n                    delete args.value.visible\r\n                }\r\n                this._popupOptionChanged(args);\r\n                this._innerWidgetOptionChanged(this._popup, args);\r\n                break;\r\n            case \"opened\":\r\n                this.toggle(value);\r\n                break;\r\n            case \"focusStateEnabled\":\r\n            case \"hoverStateEnabled\":\r\n                this._setListOption(name, value);\r\n                this._buttonGroup.option(name, value);\r\n                this.callBase(args);\r\n                break;\r\n            case \"items\":\r\n                this._updateDataSource(this.option(\"items\"));\r\n                this._updateItemCollection(name);\r\n                break;\r\n            case \"dataSource\":\r\n                if (Array.isArray(value)) {\r\n                    this._updateDataSource(this.option(\"dataSource\"))\r\n                } else {\r\n                    this._initDataSource();\r\n                    this._updateKeyExpr()\r\n                }\r\n                this._updateItemCollection(name);\r\n                break;\r\n            case \"icon\":\r\n            case \"text\":\r\n                this._actionButtonOptionChanged(args);\r\n                break;\r\n            case \"showArrowIcon\":\r\n                this._updateArrowClass();\r\n                this._renderButtonGroup();\r\n                this._popup && this._popup.repaint();\r\n                break;\r\n            case \"width\":\r\n            case \"height\":\r\n                this.callBase(args);\r\n                null === (_this$_popup = this._popup) || void 0 === _this$_popup ? void 0 : _this$_popup.repaint();\r\n                break;\r\n            case \"stylingMode\":\r\n                this._buttonGroup.option(name, value);\r\n                break;\r\n            case \"itemTemplate\":\r\n            case \"grouped\":\r\n            case \"noDataText\":\r\n            case \"groupTemplate\":\r\n            case \"wrapItemText\":\r\n            case \"useItemTextAsTitle\":\r\n                this._setListOption(name, value);\r\n                break;\r\n            case \"dropDownContentTemplate\":\r\n                this._renderContent();\r\n                break;\r\n            case \"selectedItemKey\":\r\n                this._selectedItemKeyChanged(value);\r\n                break;\r\n            case \"selectedItem\":\r\n                break;\r\n            case \"onItemClick\":\r\n                this._createItemClickAction();\r\n                break;\r\n            case \"onButtonClick\":\r\n                this._createActionClickAction();\r\n                break;\r\n            case \"onSelectionChanged\":\r\n                this._createSelectionChangedAction();\r\n                break;\r\n            case \"deferRendering\":\r\n                this.toggle(this.option(\"opened\"));\r\n                break;\r\n            case \"tabIndex\":\r\n                this._buttonGroup.option(name, value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    }\r\n}).include(DataHelperMixin);\r\nregisterComponent(\"dxDropDownButton\", DropDownButton);\r\nexport default DropDownButton;\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.export.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../../core/renderer\";\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    merge\r\n} from \"../../core/utils/array\";\r\nimport dataGridCore from \"./ui.data_grid.core\";\r\nimport exportMixin from \"../grid_core/ui.grid_core.export_mixin\";\r\nimport {\r\n    export as clientExport,\r\n    excel\r\n} from \"../../exporter\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport \"../button\";\r\nimport \"../drop_down_button\";\r\nimport List from \"../list_light\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nvar DATAGRID_EXPORT_MENU_CLASS = \"dx-datagrid-export-menu\";\r\nvar DATAGRID_EXPORT_BUTTON_CLASS = \"dx-datagrid-export-button\";\r\nvar DATAGRID_EXPORT_TOOLBAR_BUTTON_NAME = \"exportButton\";\r\nvar DATAGRID_EXPORT_ICON = \"export-to\";\r\nvar DATAGRID_EXPORT_EXCEL_ICON = \"xlsxfile\";\r\nvar DATAGRID_EXPORT_SELECTED_ICON = \"exportselected\";\r\nvar DATAGRID_EXPORT_EXCEL_BUTTON_ICON = \"export-excel-button\";\r\nexport var DataProvider = Class.inherit({\r\n    ctor: function(exportController, initialColumnWidthsByColumnIndex, selectedRowsOnly) {\r\n        this._exportController = exportController;\r\n        this._initialColumnWidthsByColumnIndex = initialColumnWidthsByColumnIndex;\r\n        this._selectedRowsOnly = selectedRowsOnly\r\n    },\r\n    _getGroupValue: function(item) {\r\n        var {\r\n            key: key,\r\n            data: data,\r\n            rowType: rowType,\r\n            groupIndex: groupIndex,\r\n            summaryCells: summaryCells\r\n        } = item;\r\n        var groupColumn = this._options.groupColumns[groupIndex];\r\n        var value = dataGridCore.getDisplayValue(groupColumn, groupColumn.deserializeValue ? groupColumn.deserializeValue(key[groupIndex]) : key[groupIndex], data, rowType);\r\n        var result = groupColumn.caption + \": \" + dataGridCore.formatValue(value, groupColumn);\r\n        if (summaryCells && summaryCells[0] && summaryCells[0].length) {\r\n            result += \" \" + dataGridCore.getGroupRowSummaryText(summaryCells[0], this._options.summaryTexts)\r\n        }\r\n        return result\r\n    },\r\n    _correctCellIndex: function(cellIndex) {\r\n        return cellIndex\r\n    },\r\n    _initOptions: function() {\r\n        var exportController = this._exportController;\r\n        var groupColumns = exportController._columnsController.getGroupColumns();\r\n        var excelWrapTextEnabled = exportController.option(\"export.excelWrapTextEnabled\");\r\n        this._options = {\r\n            columns: exportController._getColumns(this._initialColumnWidthsByColumnIndex),\r\n            groupColumns: groupColumns,\r\n            items: this._selectedRowsOnly || exportController._selectionOnly ? exportController._getSelectedItems() : exportController._getAllItems(),\r\n            getVisibleIndex: exportController._columnsController.getVisibleIndex.bind(exportController._columnsController),\r\n            isHeadersVisible: exportController.option(\"showColumnHeaders\"),\r\n            summaryTexts: exportController.option(\"summary.texts\"),\r\n            customizeExportData: exportController.option(\"customizeExportData\"),\r\n            rtlEnabled: exportController.option(\"rtlEnabled\"),\r\n            wrapTextEnabled: isDefined(excelWrapTextEnabled) ? excelWrapTextEnabled : !!exportController.option(\"wordWrapEnabled\"),\r\n            customizeExcelCell: exportController.option(\"export.customizeExcelCell\")\r\n        }\r\n    },\r\n    hasCustomizeExcelCell: function() {\r\n        return isDefined(this._options.customizeExcelCell)\r\n    },\r\n    customizeExcelCell: function(e, cellSourceData) {\r\n        if (this._options.customizeExcelCell) {\r\n            e.gridCell = cellSourceData;\r\n            if (isDefined(this._exportController) && isDefined(this._exportController.component)) {\r\n                e.component = this._exportController.component\r\n            }\r\n            this._options.customizeExcelCell(e)\r\n        }\r\n    },\r\n    getHeaderStyles: () => [{\r\n        bold: true,\r\n        alignment: \"center\",\r\n        wrapText: true\r\n    }, {\r\n        bold: true,\r\n        alignment: \"left\",\r\n        wrapText: true\r\n    }, {\r\n        bold: true,\r\n        alignment: \"right\",\r\n        wrapText: true\r\n    }],\r\n    getGroupRowStyle() {\r\n        return {\r\n            bold: true,\r\n            wrapText: false,\r\n            alignment: getDefaultAlignment(this._options.rtlEnabled)\r\n        }\r\n    },\r\n    getColumnStyles() {\r\n        var wrapTextEnabled = this._options.wrapTextEnabled;\r\n        var columnStyles = [];\r\n        this.getColumns().forEach(column => {\r\n            columnStyles.push({\r\n                alignment: column.alignment || \"left\",\r\n                format: column.format,\r\n                wrapText: wrapTextEnabled,\r\n                dataType: column.dataType\r\n            })\r\n        });\r\n        return columnStyles\r\n    },\r\n    getStyles: function() {\r\n        return [...this.getHeaderStyles(), ...this.getColumnStyles(), this.getGroupRowStyle()]\r\n    },\r\n    _getTotalCellStyleId: function(cellIndex) {\r\n        var _this$getColumns$cell;\r\n        var alignment = (null === (_this$getColumns$cell = this.getColumns()[cellIndex]) || void 0 === _this$getColumns$cell ? void 0 : _this$getColumns$cell.alignment) || \"right\";\r\n        return this.getHeaderStyles().map(style => style.alignment).indexOf(alignment)\r\n    },\r\n    getStyleId: function(rowIndex, cellIndex) {\r\n        if (rowIndex < this.getHeaderRowCount()) {\r\n            return 0\r\n        } else if (this.isTotalCell(rowIndex - this.getHeaderRowCount(), cellIndex)) {\r\n            return this._getTotalCellStyleId(cellIndex)\r\n        } else if (this.isGroupRow(rowIndex - this.getHeaderRowCount())) {\r\n            return this.getHeaderStyles().length + this.getColumns().length\r\n        } else {\r\n            return cellIndex + this.getHeaderStyles().length\r\n        }\r\n    },\r\n    getColumns: function(getColumnsByAllRows) {\r\n        var {\r\n            columns: columns\r\n        } = this._options;\r\n        return getColumnsByAllRows ? columns : columns[columns.length - 1]\r\n    },\r\n    getColumnsWidths: function() {\r\n        var columns = this.getColumns();\r\n        return isDefined(columns) ? columns.map(c => c.width) : void 0\r\n    },\r\n    getRowsCount: function() {\r\n        return this._options.items.length + this.getHeaderRowCount()\r\n    },\r\n    getHeaderRowCount: function() {\r\n        if (this.isHeadersVisible()) {\r\n            return this._options.columns.length - 1\r\n        }\r\n        return 0\r\n    },\r\n    isGroupRow: function(rowIndex) {\r\n        return rowIndex < this._options.items.length && \"group\" === this._options.items[rowIndex].rowType\r\n    },\r\n    getGroupLevel: function(rowIndex) {\r\n        var item = this._options.items[rowIndex - this.getHeaderRowCount()];\r\n        var groupIndex = item && item.groupIndex;\r\n        if (item && \"totalFooter\" === item.rowType) {\r\n            return 0\r\n        }\r\n        return isDefined(groupIndex) ? groupIndex : this._options.groupColumns.length\r\n    },\r\n    getCellType: function(rowIndex, cellIndex) {\r\n        var columns = this.getColumns();\r\n        if (rowIndex < this.getHeaderRowCount()) {\r\n            return \"string\"\r\n        } else {\r\n            rowIndex -= this.getHeaderRowCount()\r\n        }\r\n        if (cellIndex < columns.length) {\r\n            var item = this._options.items.length && this._options.items[rowIndex];\r\n            var column = columns[cellIndex];\r\n            if (item && \"data\" === item.rowType) {\r\n                if (isFinite(item.values[this._correctCellIndex(cellIndex)]) && !isDefined(column.customizeText)) {\r\n                    return isDefined(column.lookup) ? column.lookup.dataType : column.dataType\r\n                }\r\n            }\r\n            return \"string\"\r\n        }\r\n    },\r\n    ready: function() {\r\n        var that = this;\r\n        that._initOptions();\r\n        var options = that._options;\r\n        return when(options.items).done((function(items) {\r\n            options.customizeExportData && options.customizeExportData(that.getColumns(that.getHeaderRowCount() > 1), items);\r\n            options.items = items\r\n        })).fail((function() {\r\n            options.items = []\r\n        }))\r\n    },\r\n    _convertFromGridGroupSummaryItems: function(gridGroupSummaryItems) {\r\n        if (isDefined(gridGroupSummaryItems) && gridGroupSummaryItems.length > 0) {\r\n            return gridGroupSummaryItems.map((function(item) {\r\n                return {\r\n                    value: item.value,\r\n                    name: item.name\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    getCellData: function(rowIndex, cellIndex, isExcelJS) {\r\n        var value;\r\n        var column;\r\n        var result = {\r\n            cellSourceData: {},\r\n            value: value\r\n        };\r\n        var columns = this.getColumns();\r\n        var correctedCellIndex = this._correctCellIndex(cellIndex);\r\n        if (rowIndex < this.getHeaderRowCount()) {\r\n            var columnsRow = this.getColumns(true)[rowIndex];\r\n            column = columnsRow[cellIndex];\r\n            result.cellSourceData.rowType = \"header\";\r\n            result.cellSourceData.column = column && column.gridColumn;\r\n            result.value = column && column.caption\r\n        } else {\r\n            rowIndex -= this.getHeaderRowCount();\r\n            var item = this._options.items.length && this._options.items[rowIndex];\r\n            if (item) {\r\n                var itemValues = item.values;\r\n                result.cellSourceData.rowType = item.rowType;\r\n                result.cellSourceData.column = columns[cellIndex] && columns[cellIndex].gridColumn;\r\n                switch (item.rowType) {\r\n                    case \"groupFooter\":\r\n                    case \"totalFooter\":\r\n                        if (correctedCellIndex < itemValues.length) {\r\n                            value = itemValues[correctedCellIndex];\r\n                            if (isDefined(value)) {\r\n                                result.cellSourceData.value = value.value;\r\n                                result.cellSourceData.totalSummaryItemName = value.name;\r\n                                result.value = dataGridCore.getSummaryText(value, this._options.summaryTexts)\r\n                            } else {\r\n                                result.cellSourceData.value = void 0\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"group\":\r\n                        result.cellSourceData.groupIndex = item.groupIndex;\r\n                        if (cellIndex < 1) {\r\n                            result.cellSourceData.column = this._options.groupColumns[item.groupIndex];\r\n                            result.cellSourceData.value = item.key[item.groupIndex];\r\n                            result.cellSourceData.groupSummaryItems = this._convertFromGridGroupSummaryItems(item.summaryCells[0]);\r\n                            result.value = this._getGroupValue(item)\r\n                        } else {\r\n                            var summaryItems = item.values[correctedCellIndex];\r\n                            if (Array.isArray(summaryItems)) {\r\n                                result.cellSourceData.groupSummaryItems = this._convertFromGridGroupSummaryItems(summaryItems);\r\n                                value = \"\";\r\n                                for (var i = 0; i < summaryItems.length; i++) {\r\n                                    value += (i > 0 ? isExcelJS ? \"\\n\" : \" \\n \" : \"\") + dataGridCore.getSummaryText(summaryItems[i], this._options.summaryTexts)\r\n                                }\r\n                                result.value = value\r\n                            } else {\r\n                                result.cellSourceData.value = void 0\r\n                            }\r\n                        }\r\n                        break;\r\n                    default:\r\n                        column = columns[cellIndex];\r\n                        if (column) {\r\n                            var _value = itemValues[correctedCellIndex];\r\n                            var displayValue = dataGridCore.getDisplayValue(column, _value, item.data, item.rowType);\r\n                            if (!isFinite(displayValue) || isDefined(column.customizeText)) {\r\n                                if (isExcelJS && isDefined(column.customizeText) && column.customizeText === this._exportController._columnsController.getCustomizeTextByDataType(\"boolean\")) {\r\n                                    result.value = displayValue\r\n                                } else {\r\n                                    result.value = dataGridCore.formatValue(displayValue, column)\r\n                                }\r\n                            } else {\r\n                                result.value = displayValue\r\n                            }\r\n                            result.cellSourceData.value = _value\r\n                        }\r\n                        result.cellSourceData.data = item.data\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    isHeadersVisible: function() {\r\n        return this._options.isHeadersVisible\r\n    },\r\n    isTotalCell: function(rowIndex, cellIndex) {\r\n        var items = this._options.items;\r\n        var item = items[rowIndex];\r\n        var correctCellIndex = this._correctCellIndex(cellIndex);\r\n        var isSummaryAlignByColumn = item.summaryCells && item.summaryCells[correctCellIndex] && item.summaryCells[correctCellIndex].length > 0 && item.summaryCells[correctCellIndex][0].alignByColumn;\r\n        return item && \"groupFooter\" === item.rowType || \"totalFooter\" === item.rowType || isSummaryAlignByColumn\r\n    },\r\n    getCellMerging: function(rowIndex, cellIndex) {\r\n        var columns = this._options.columns;\r\n        var column = columns[rowIndex] && columns[rowIndex][cellIndex];\r\n        return column ? {\r\n            colspan: (column.exportColspan || 1) - 1,\r\n            rowspan: (column.rowspan || 1) - 1\r\n        } : {\r\n            colspan: 0,\r\n            rowspan: 0\r\n        }\r\n    },\r\n    getFrozenArea: function() {\r\n        return {\r\n            x: 0,\r\n            y: this.getHeaderRowCount()\r\n        }\r\n    }\r\n});\r\nexport var ExportController = dataGridCore.ViewController.inherit({}).include(exportMixin).inherit({\r\n    _getEmptyCell: function() {\r\n        return {\r\n            caption: \"\",\r\n            colspan: 1,\r\n            rowspan: 1\r\n        }\r\n    },\r\n    _updateColumnWidth: function(column, width) {\r\n        column.width = width\r\n    },\r\n    _getColumns: function(initialColumnWidthsByColumnIndex) {\r\n        var result = [];\r\n        var i;\r\n        var columns;\r\n        var columnsController = this._columnsController;\r\n        var rowCount = columnsController.getRowCount();\r\n        for (i = 0; i <= rowCount; i++) {\r\n            var currentHeaderRow = [];\r\n            columns = columnsController.getVisibleColumns(i, true);\r\n            var columnWidthsByColumnIndex = void 0;\r\n            if (i === rowCount) {\r\n                if (this._updateLockCount) {\r\n                    columnWidthsByColumnIndex = initialColumnWidthsByColumnIndex\r\n                } else {\r\n                    var columnWidths = this._getColumnWidths(this._headersView, this._rowsView);\r\n                    if (columnWidths && columnWidths.length) {\r\n                        columnWidthsByColumnIndex = {};\r\n                        for (var _i = 0; _i < columns.length; _i++) {\r\n                            columnWidthsByColumnIndex[columns[_i].index] = columnWidths[_i]\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            for (var j = 0; j < columns.length; j++) {\r\n                var column = extend({}, columns[j], {\r\n                    dataType: \"datetime\" === columns[j].dataType ? \"date\" : columns[j].dataType,\r\n                    gridColumn: columns[j]\r\n                });\r\n                if (this._needColumnExporting(column)) {\r\n                    var currentColspan = this._calculateExportColspan(column);\r\n                    if (isDefined(currentColspan)) {\r\n                        column.exportColspan = currentColspan\r\n                    }\r\n                    if (columnWidthsByColumnIndex) {\r\n                        this._updateColumnWidth(column, columnWidthsByColumnIndex[column.index])\r\n                    }\r\n                    currentHeaderRow.push(column)\r\n                }\r\n            }\r\n            result.push(currentHeaderRow)\r\n        }\r\n        columns = result[rowCount];\r\n        result = this._prepareItems(result.slice(0, -1));\r\n        result.push(columns);\r\n        return result\r\n    },\r\n    _calculateExportColspan: function(column) {\r\n        if (!column.isBand) {\r\n            return\r\n        }\r\n        var childColumns = this._columnsController.getChildrenByBandColumn(column.index, true);\r\n        if (!isDefined(childColumns)) {\r\n            return\r\n        }\r\n        return childColumns.reduce((result, childColumn) => {\r\n            if (this._needColumnExporting(childColumn)) {\r\n                return result + (this._calculateExportColspan(childColumn) || 1)\r\n            } else {\r\n                return result\r\n            }\r\n        }, 0)\r\n    },\r\n    _needColumnExporting: function(column) {\r\n        return !column.command && (column.allowExporting || void 0 === column.allowExporting)\r\n    },\r\n    _getFooterSummaryItems: function(summaryCells, isTotal) {\r\n        var result = [];\r\n        var estimatedItemsCount = 1;\r\n        var i = 0;\r\n        do {\r\n            var values = [];\r\n            for (var j = 0; j < summaryCells.length; j++) {\r\n                var summaryCell = summaryCells[j];\r\n                var itemsLength = summaryCell.length;\r\n                if (estimatedItemsCount < itemsLength) {\r\n                    estimatedItemsCount = itemsLength\r\n                }\r\n                values.push(summaryCell[i])\r\n            }\r\n            result.push({\r\n                values: values,\r\n                rowType: isTotal ? \"totalFooter\" : \"groupFooter\"\r\n            })\r\n        } while (i++ < estimatedItemsCount - 1);\r\n        return result\r\n    },\r\n    _hasSummaryGroupFooters: function() {\r\n        var groupItems = this.option(\"summary.groupItems\");\r\n        if (isDefined(groupItems)) {\r\n            for (var i = 0; i < groupItems.length; i++) {\r\n                if (groupItems[i].showInGroupFooter) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _getItemsWithSummaryGroupFooters: function(sourceItems) {\r\n        var result = [];\r\n        var beforeGroupFooterItems = [];\r\n        var groupFooterItems = [];\r\n        for (var i = 0; i < sourceItems.length; i++) {\r\n            var item = sourceItems[i];\r\n            if (\"groupFooter\" === item.rowType) {\r\n                groupFooterItems = this._getFooterSummaryItems(item.summaryCells);\r\n                result = result.concat(beforeGroupFooterItems, groupFooterItems);\r\n                beforeGroupFooterItems = []\r\n            } else {\r\n                beforeGroupFooterItems.push(item)\r\n            }\r\n        }\r\n        return result.length ? result : beforeGroupFooterItems\r\n    },\r\n    _updateGroupValuesWithSummaryByColumn: function(sourceItems) {\r\n        var summaryValues = [];\r\n        for (var i = 0; i < sourceItems.length; i++) {\r\n            var item = sourceItems[i];\r\n            var summaryCells = item.summaryCells;\r\n            if (\"group\" === item.rowType && summaryCells && summaryCells.length > 1) {\r\n                var groupColumnCount = item.values.length;\r\n                for (var j = 1; j < summaryCells.length; j++) {\r\n                    for (var k = 0; k < summaryCells[j].length; k++) {\r\n                        var summaryItem = summaryCells[j][k];\r\n                        if (summaryItem && summaryItem.alignByColumn) {\r\n                            if (!Array.isArray(summaryValues[j - groupColumnCount])) {\r\n                                summaryValues[j - groupColumnCount] = []\r\n                            }\r\n                            summaryValues[j - groupColumnCount].push(summaryItem)\r\n                        }\r\n                    }\r\n                }\r\n                if (summaryValues.length > 0) {\r\n                    merge(item.values, summaryValues);\r\n                    summaryValues = []\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _processUnExportedItems: function(items) {\r\n        var columns = this._columnsController.getVisibleColumns(null, true);\r\n        var groupColumns = this._columnsController.getGroupColumns();\r\n        var values;\r\n        var summaryCells;\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            var isDetailExpandColumn = false;\r\n            values = [];\r\n            summaryCells = [];\r\n            for (var j = 0; j < columns.length; j++) {\r\n                var column = columns[j];\r\n                isDetailExpandColumn = isDetailExpandColumn || \"detailExpand\" === column.type;\r\n                if (this._needColumnExporting(column)) {\r\n                    if (item.values) {\r\n                        if (\"group\" === item.rowType && !values.length) {\r\n                            values.push(item.key[item.groupIndex])\r\n                        } else {\r\n                            values.push(item.values[j])\r\n                        }\r\n                    }\r\n                    if (item.summaryCells) {\r\n                        if (\"group\" === item.rowType && !summaryCells.length) {\r\n                            var index = j - groupColumns.length + item.groupIndex;\r\n                            summaryCells.push(item.summaryCells[isDetailExpandColumn ? index : index + 1])\r\n                        } else {\r\n                            summaryCells.push(item.summaryCells[j])\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (values.length) {\r\n                item.values = values\r\n            }\r\n            if (summaryCells.length) {\r\n                item.summaryCells = summaryCells\r\n            }\r\n        }\r\n    },\r\n    _getAllItems: function(data) {\r\n        var that = this;\r\n        var d = new Deferred;\r\n        var dataController = this.getController(\"data\");\r\n        var footerItems = dataController.footerItems();\r\n        var totalItem = footerItems.length && footerItems[0];\r\n        var summaryTotalItems = that.option(\"summary.totalItems\");\r\n        var summaryCells;\r\n        when(data).done((function(data) {\r\n            dataController.loadAll(data).done((function(sourceItems, totalAggregates) {\r\n                that._updateGroupValuesWithSummaryByColumn(sourceItems);\r\n                if (that._hasSummaryGroupFooters()) {\r\n                    sourceItems = that._getItemsWithSummaryGroupFooters(sourceItems)\r\n                }\r\n                summaryCells = totalItem && totalItem.summaryCells;\r\n                if (isDefined(totalAggregates) && summaryTotalItems) {\r\n                    summaryCells = that._getSummaryCells(summaryTotalItems, totalAggregates)\r\n                }\r\n                var summaryItems = totalItem && that._getFooterSummaryItems(summaryCells, true);\r\n                if (summaryItems) {\r\n                    sourceItems = sourceItems.concat(summaryItems)\r\n                }\r\n                that._processUnExportedItems(sourceItems);\r\n                d.resolve(sourceItems)\r\n            })).fail(d.reject)\r\n        })).fail(d.reject);\r\n        return d\r\n    },\r\n    _getSummaryCells: function(summaryTotalItems, totalAggregates) {\r\n        var dataController = this.getController(\"data\");\r\n        var columnsController = dataController._columnsController;\r\n        return dataController._calculateSummaryCells(summaryTotalItems, totalAggregates, columnsController.getVisibleColumns(null, true), (function(summaryItem, column) {\r\n            return dataController._isDataColumn(column) ? column.index : -1\r\n        }))\r\n    },\r\n    _getSelectedItems: function() {\r\n        var selectionController = this.getController(\"selection\");\r\n        var selectedRowData = selectionController.getSelectedRowsData();\r\n        return this._getAllItems(selectedRowData)\r\n    },\r\n    _getColumnWidths: function(headersView, rowsView) {\r\n        return headersView && headersView.isVisible() ? headersView.getColumnWidths() : rowsView.getColumnWidths()\r\n    },\r\n    init: function() {\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._rowsView = this.getView(\"rowsView\");\r\n        this._headersView = this.getView(\"columnHeadersView\");\r\n        this.createAction(\"onExporting\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        this.createAction(\"onExported\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        this.createAction(\"onFileSaving\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    callbackNames: function() {\r\n        return [\"selectionOnlyChanged\"]\r\n    },\r\n    getExportFormat: function() {\r\n        return [\"EXCEL\"]\r\n    },\r\n    getDataProvider: function(selectedRowsOnly) {\r\n        var columnWidths = this._getColumnWidths(this._headersView, this._rowsView);\r\n        var initialColumnWidthsByColumnIndex;\r\n        if (columnWidths && columnWidths.length) {\r\n            initialColumnWidthsByColumnIndex = {};\r\n            var columnsLastRowVisibleColumns = this._columnsController.getVisibleColumns(this._columnsController.getRowCount(), true);\r\n            for (var i = 0; i < columnsLastRowVisibleColumns.length; i++) {\r\n                initialColumnWidthsByColumnIndex[columnsLastRowVisibleColumns[i].index] = columnWidths[i]\r\n            }\r\n        }\r\n        return new DataProvider(this, initialColumnWidthsByColumnIndex, selectedRowsOnly)\r\n    },\r\n    exportToExcel: function(selectionOnly) {\r\n        this._selectionOnly = selectionOnly;\r\n        clientExport(this.component.getDataProvider(), {\r\n            fileName: this.option(\"export.fileName\"),\r\n            proxyUrl: this.option(\"export.proxyUrl\"),\r\n            format: \"EXCEL\",\r\n            autoFilterEnabled: !!this.option(\"export.excelFilterEnabled\"),\r\n            rtlEnabled: this.option(\"rtlEnabled\"),\r\n            ignoreErrors: this.option(\"export.ignoreExcelErrors\"),\r\n            exportingAction: this.getAction(\"onExporting\"),\r\n            exportedAction: this.getAction(\"onExported\"),\r\n            fileSavingAction: this.getAction(\"onFileSaving\")\r\n        }, excel.getData)\r\n    },\r\n    publicMethods: function() {\r\n        return [\"getDataProvider\", \"getExportFormat\", \"exportToExcel\"]\r\n    },\r\n    selectionOnly: function(value) {\r\n        if (isDefined(value)) {\r\n            this._isSelectedRows = value;\r\n            this.selectionOnlyChanged.fire()\r\n        } else {\r\n            return this._isSelectedRows\r\n        }\r\n    }\r\n});\r\ndataGridCore.registerModule(\"export\", {\r\n    defaultOptions: function() {\r\n        return {\r\n            export: {\r\n                enabled: false,\r\n                fileName: \"DataGrid\",\r\n                excelFilterEnabled: false,\r\n                excelWrapTextEnabled: void 0,\r\n                proxyUrl: void 0,\r\n                allowExportSelectedData: false,\r\n                ignoreExcelErrors: true,\r\n                texts: {\r\n                    exportTo: messageLocalization.format(\"dxDataGrid-exportTo\"),\r\n                    exportAll: messageLocalization.format(\"dxDataGrid-exportAll\"),\r\n                    exportSelectedRows: messageLocalization.format(\"dxDataGrid-exportSelectedRows\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        export: ExportController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            editing: {\r\n                callbackNames: function() {\r\n                    var callbackList = this.callBase();\r\n                    return isDefined(callbackList) ? callbackList.push(\"editingChanged\") : [\"editingChanged\"]\r\n                },\r\n                _updateEditButtons: function() {\r\n                    this.callBase();\r\n                    this.editingChanged.fire(this.hasChanges())\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            headerPanel: {\r\n                _getToolbarItems: function() {\r\n                    var items = this.callBase();\r\n                    var exportButton = this._getExportToolbarButton();\r\n                    if (exportButton) {\r\n                        items.push(exportButton);\r\n                        this._correctItemsPosition(items)\r\n                    }\r\n                    return items\r\n                },\r\n                _getExportToolbarButton: function() {\r\n                    var items = this._getExportToolbarItems();\r\n                    if (0 === items.length) {\r\n                        return null\r\n                    }\r\n                    var toolbarButtonOptions = {\r\n                        name: DATAGRID_EXPORT_TOOLBAR_BUTTON_NAME,\r\n                        location: \"after\",\r\n                        locateInMenu: \"auto\",\r\n                        sortIndex: 30,\r\n                        options: {\r\n                            items: items\r\n                        }\r\n                    };\r\n                    if (1 === items.length) {\r\n                        var widgetOptions = _extends({}, items[0], {\r\n                            hint: items[0].text,\r\n                            elementAttr: {\r\n                                class: DATAGRID_EXPORT_BUTTON_CLASS\r\n                            }\r\n                        });\r\n                        toolbarButtonOptions.widget = \"dxButton\";\r\n                        toolbarButtonOptions.showText = \"inMenu\";\r\n                        toolbarButtonOptions.options = widgetOptions\r\n                    } else {\r\n                        var _widgetOptions = {\r\n                            icon: DATAGRID_EXPORT_ICON,\r\n                            displayExpr: \"text\",\r\n                            items: items,\r\n                            hint: this.option(\"export.texts.exportTo\"),\r\n                            elementAttr: {\r\n                                class: DATAGRID_EXPORT_BUTTON_CLASS\r\n                            },\r\n                            dropDownOptions: {\r\n                                wrapperAttr: {\r\n                                    class: DATAGRID_EXPORT_MENU_CLASS\r\n                                },\r\n                                width: \"auto\"\r\n                            }\r\n                        };\r\n                        toolbarButtonOptions.options = _widgetOptions;\r\n                        toolbarButtonOptions.widget = \"dxDropDownButton\";\r\n                        toolbarButtonOptions.menuItemTemplate = (_data, _index, container) => {\r\n                            this._createComponent($(container), List, {\r\n                                items: items\r\n                            })\r\n                        }\r\n                    }\r\n                    return toolbarButtonOptions\r\n                },\r\n                _getExportToolbarItems: function() {\r\n                    var exportOptions = this.option(\"export\");\r\n                    var texts = this.option(\"export.texts\");\r\n                    var items = [];\r\n                    if (exportOptions.enabled) {\r\n                        items.push({\r\n                            text: texts.exportAll,\r\n                            icon: DATAGRID_EXPORT_EXCEL_ICON,\r\n                            onClick: () => {\r\n                                this._exportController.exportToExcel()\r\n                            }\r\n                        });\r\n                        if (exportOptions.allowExportSelectedData) {\r\n                            items.push({\r\n                                text: texts.exportSelectedRows,\r\n                                icon: DATAGRID_EXPORT_SELECTED_ICON,\r\n                                onClick: () => {\r\n                                    this._exportController.exportToExcel(true)\r\n                                }\r\n                            })\r\n                        }\r\n                    }\r\n                    return items\r\n                },\r\n                _correctItemsPosition: function(items) {\r\n                    items.sort((function(itemA, itemB) {\r\n                        return itemA.sortIndex - itemB.sortIndex\r\n                    }))\r\n                },\r\n                _isExportButtonVisible: function() {\r\n                    return this.option(\"export.enabled\")\r\n                },\r\n                _getButtonOptions: function(allowExportSelected) {\r\n                    var that = this;\r\n                    var texts = that.option(\"export.texts\");\r\n                    var options;\r\n                    if (allowExportSelected) {\r\n                        options = {\r\n                            hint: texts.exportTo,\r\n                            icon: DATAGRID_EXPORT_ICON\r\n                        }\r\n                    } else {\r\n                        options = {\r\n                            hint: texts.exportAll,\r\n                            icon: DATAGRID_EXPORT_EXCEL_BUTTON_ICON,\r\n                            onClick: function() {\r\n                                that._exportController.exportToExcel()\r\n                            }\r\n                        }\r\n                    }\r\n                    return options\r\n                },\r\n                optionChanged: function(args) {\r\n                    this.callBase(args);\r\n                    if (\"export\" === args.name) {\r\n                        args.handled = true;\r\n                        this._invalidate()\r\n                    }\r\n                },\r\n                init: function() {\r\n                    var that = this;\r\n                    this.callBase();\r\n                    this._exportController = this.getController(\"export\");\r\n                    this._editingController = this.getController(\"editing\");\r\n                    this._editingController.editingChanged.add((function(hasChanges) {\r\n                        that.setToolbarItemDisabled(\"exportButton\", hasChanges)\r\n                    }))\r\n                },\r\n                isVisible: function() {\r\n                    return this.callBase() || this._isExportButtonVisible()\r\n                }\r\n            }\r\n        }\r\n    }\r\n});\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.focus.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport core from \"./ui.grid_core.modules\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isBoolean\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nvar ROW_FOCUSED_CLASS = \"dx-row-focused\";\r\nvar FOCUSED_ROW_SELECTOR = \".dx-row.\" + ROW_FOCUSED_CLASS;\r\nvar TABLE_POSTFIX_CLASS = \"table\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar FocusController = core.ViewController.inherit({\r\n    init: function() {\r\n        this._dataController = this.getController(\"data\");\r\n        this._keyboardController = this.getController(\"keyboardNavigation\");\r\n        this.component._optionsByReference.focusedRowKey = true\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"focusedRowIndex\" === args.name) {\r\n            var focusedRowKey = this.option(\"focusedRowKey\");\r\n            this._focusRowByIndex(args.value);\r\n            this._triggerFocusedRowChangedIfNeed(focusedRowKey, args.value);\r\n            args.handled = true\r\n        } else if (\"focusedRowKey\" === args.name) {\r\n            args.handled = true;\r\n            if (Array.isArray(args.value) && JSON.stringify(args.value) === JSON.stringify(args.previousValue)) {\r\n                return\r\n            }\r\n            var focusedRowIndex = this.option(\"focusedRowIndex\");\r\n            this._focusRowByKey(args.value);\r\n            this._triggerFocusedRowChangedIfNeed(args.value, focusedRowIndex)\r\n        } else if (\"focusedColumnIndex\" === args.name) {\r\n            args.handled = true\r\n        } else if (\"focusedRowEnabled\" === args.name) {\r\n            args.handled = true\r\n        } else if (\"autoNavigateToFocusedRow\" === args.name) {\r\n            args.handled = true\r\n        } else {\r\n            this.callBase(args)\r\n        }\r\n    },\r\n    _triggerFocusedRowChangedIfNeed: function(focusedRowKey, focusedRowIndex) {\r\n        var focusedRowIndexByKey = this.getFocusedRowIndexByKey(focusedRowKey);\r\n        if (focusedRowIndex === focusedRowIndexByKey) {\r\n            var rowIndex = this._dataController.getRowIndexByKey(focusedRowKey);\r\n            if (rowIndex >= 0) {\r\n                var $rowElement = $(this.getView(\"rowsView\").getRowElement(rowIndex));\r\n                this.getController(\"keyboardNavigation\")._fireFocusedRowChanged($rowElement, focusedRowIndex)\r\n            }\r\n        }\r\n    },\r\n    isAutoNavigateToFocusedRow: function() {\r\n        return \"infinite\" !== this.option(\"scrolling.mode\") && this.option(\"autoNavigateToFocusedRow\")\r\n    },\r\n    _focusRowByIndex: function(index, operationTypes) {\r\n        if (!this.option(\"focusedRowEnabled\")) {\r\n            return\r\n        }\r\n        index = void 0 !== index ? index : this.option(\"focusedRowIndex\");\r\n        if (index < 0) {\r\n            if (this.isAutoNavigateToFocusedRow()) {\r\n                this._resetFocusedRow()\r\n            }\r\n        } else {\r\n            this._focusRowByIndexCore(index, operationTypes)\r\n        }\r\n    },\r\n    _focusRowByIndexCore: function(index, operationTypes) {\r\n        var dataController = this.getController(\"data\");\r\n        var pageSize = dataController.pageSize();\r\n        var setKeyByIndex = () => {\r\n            if (this._isValidFocusedRowIndex(index)) {\r\n                var rowIndex = index - dataController.getRowIndexOffset(true);\r\n                if (!operationTypes || operationTypes.paging && !operationTypes.filtering) {\r\n                    var lastItemIndex = dataController._getLastItemIndex();\r\n                    rowIndex = Math.min(rowIndex, lastItemIndex)\r\n                }\r\n                var focusedRowKey = dataController.getKeyByRowIndex(rowIndex, true);\r\n                if (isDefined(focusedRowKey) && !this.isRowFocused(focusedRowKey)) {\r\n                    this.option(\"focusedRowKey\", focusedRowKey)\r\n                }\r\n            }\r\n        };\r\n        if (pageSize >= 0) {\r\n            if (!this._isLocalRowIndex(index)) {\r\n                var pageIndex = Math.floor(index / dataController.pageSize());\r\n                when(dataController.pageIndex(pageIndex), dataController.waitReady()).done(() => {\r\n                    setKeyByIndex()\r\n                })\r\n            } else {\r\n                setKeyByIndex()\r\n            }\r\n        }\r\n    },\r\n    _isLocalRowIndex(index) {\r\n        var dataController = this.getController(\"data\");\r\n        var isVirtualScrolling = this.getController(\"keyboardNavigation\")._isVirtualScrolling();\r\n        if (isVirtualScrolling) {\r\n            var pageIndex = Math.floor(index / dataController.pageSize());\r\n            var virtualItems = dataController.virtualItemsCount();\r\n            var virtualItemsBegin = virtualItems ? virtualItems.begin : -1;\r\n            var visibleRowsCount = dataController.getVisibleRows().length + dataController.getRowIndexOffset();\r\n            var visiblePagesCount = Math.ceil(visibleRowsCount / dataController.pageSize());\r\n            return virtualItemsBegin <= index && visiblePagesCount > pageIndex\r\n        }\r\n        return true\r\n    },\r\n    _setFocusedRowKeyByIndex: function(index) {\r\n        var dataController = this.getController(\"data\");\r\n        if (this._isValidFocusedRowIndex(index)) {\r\n            var rowIndex = Math.min(index - dataController.getRowIndexOffset(), dataController.items().length - 1);\r\n            var focusedRowKey = dataController.getKeyByRowIndex(rowIndex);\r\n            if (isDefined(focusedRowKey) && !this.isRowFocused(focusedRowKey)) {\r\n                this.option(\"focusedRowKey\", focusedRowKey)\r\n            }\r\n        }\r\n    },\r\n    _focusRowByKey: function(key) {\r\n        if (!isDefined(key)) {\r\n            this._resetFocusedRow()\r\n        } else {\r\n            this._navigateToRow(key, true)\r\n        }\r\n    },\r\n    _resetFocusedRow: function() {\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        var isFocusedRowKeyDefined = isDefined(focusedRowKey);\r\n        if (!isFocusedRowKeyDefined && this.option(\"focusedRowIndex\") < 0) {\r\n            return\r\n        }\r\n        var keyboardController = this.getController(\"keyboardNavigation\");\r\n        if (isFocusedRowKeyDefined) {\r\n            this.option(\"focusedRowKey\", null)\r\n        }\r\n        keyboardController.setFocusedRowIndex(-1);\r\n        this.option(\"focusedRowIndex\", -1);\r\n        this.getController(\"data\").updateItems({\r\n            changeType: \"updateFocusedRow\",\r\n            focusedRowKey: null\r\n        });\r\n        keyboardController._fireFocusedRowChanged(void 0, -1)\r\n    },\r\n    _isValidFocusedRowIndex: function(rowIndex) {\r\n        var dataController = this.getController(\"data\");\r\n        var row = dataController.getVisibleRows()[rowIndex];\r\n        return !row || \"data\" === row.rowType || \"group\" === row.rowType\r\n    },\r\n    publicMethods: function() {\r\n        return [\"navigateToRow\", \"isRowFocused\"]\r\n    },\r\n    navigateToRow: function(key) {\r\n        if (!this.isAutoNavigateToFocusedRow()) {\r\n            this.option(\"focusedRowIndex\", -1)\r\n        }\r\n        return this._navigateToRow(key)\r\n    },\r\n    _navigateToRow: function(key, needFocusRow) {\r\n        var that = this;\r\n        var dataController = that.getController(\"data\");\r\n        var isAutoNavigate = that.isAutoNavigateToFocusedRow();\r\n        var d = new Deferred;\r\n        if (void 0 === key || !dataController.dataSource()) {\r\n            return d.reject().promise()\r\n        }\r\n        var rowIndexByKey = that.getFocusedRowIndexByKey(key);\r\n        if (!isAutoNavigate && needFocusRow || rowIndexByKey >= 0) {\r\n            that._navigateTo(key, d, needFocusRow)\r\n        } else {\r\n            dataController.getPageIndexByKey(key).done((function(pageIndex) {\r\n                if (pageIndex < 0) {\r\n                    d.resolve(-1);\r\n                    return\r\n                }\r\n                if (pageIndex === dataController.pageIndex()) {\r\n                    dataController.reload().done((function() {\r\n                        if (that.isRowFocused(key) && dataController.getRowIndexByKey(key) >= 0) {\r\n                            d.resolve(that.getFocusedRowIndexByKey(key))\r\n                        } else {\r\n                            that._navigateTo(key, d, needFocusRow)\r\n                        }\r\n                    })).fail(d.reject)\r\n                } else {\r\n                    dataController.pageIndex(pageIndex).done((function() {\r\n                        that._navigateTo(key, d, needFocusRow)\r\n                    })).fail(d.reject)\r\n                }\r\n            })).fail(d.reject)\r\n        }\r\n        return d.promise()\r\n    },\r\n    _navigateTo: function(key, deferred, needFocusRow) {\r\n        var visibleRowIndex = this.getController(\"data\").getRowIndexByKey(key);\r\n        var isVirtualRowRenderingMode = gridCoreUtils.isVirtualRowRendering(this);\r\n        var isAutoNavigate = this.isAutoNavigateToFocusedRow();\r\n        if (isAutoNavigate && isVirtualRowRenderingMode && visibleRowIndex < 0) {\r\n            this._navigateToVirtualRow(key, deferred, needFocusRow)\r\n        } else {\r\n            this._navigateToVisibleRow(key, deferred, needFocusRow)\r\n        }\r\n    },\r\n    _navigateToVisibleRow: function(key, deferred, needFocusRow) {\r\n        if (needFocusRow) {\r\n            this._triggerUpdateFocusedRow(key, deferred)\r\n        } else {\r\n            var focusedRowIndex = this.getFocusedRowIndexByKey(key);\r\n            this.getView(\"rowsView\").scrollToRowElement(key, deferred).done((function() {\r\n                deferred.resolve(focusedRowIndex)\r\n            }))\r\n        }\r\n    },\r\n    _navigateToVirtualRow: function(key, deferred, needFocusRow) {\r\n        var that = this;\r\n        var dataController = this.getController(\"data\");\r\n        var rowsScrollController = dataController._rowsScrollController;\r\n        var rowIndex = gridCoreUtils.getIndexByKey(key, dataController.items(true));\r\n        var scrollable = that.getView(\"rowsView\").getScrollable();\r\n        if (rowsScrollController && scrollable && rowIndex >= 0) {\r\n            var focusedRowIndex = rowIndex + dataController.getRowIndexOffset(true);\r\n            var offset = rowsScrollController.getItemOffset(focusedRowIndex);\r\n            that.component.on(\"contentReady\", (function triggerUpdateFocusedRow() {\r\n                that.component.off(\"contentReady\", triggerUpdateFocusedRow);\r\n                if (needFocusRow) {\r\n                    that._triggerUpdateFocusedRow(key, deferred)\r\n                } else {\r\n                    deferred.resolve(focusedRowIndex)\r\n                }\r\n            }));\r\n            this.getView(\"rowsView\").scrollTopPosition(offset)\r\n        } else {\r\n            deferred.resolve(-1)\r\n        }\r\n    },\r\n    _triggerUpdateFocusedRow: function(key, deferred) {\r\n        var dataController = this.getController(\"data\");\r\n        var focusedRowIndex = this.getFocusedRowIndexByKey(key);\r\n        if (this._isValidFocusedRowIndex(focusedRowIndex)) {\r\n            var d;\r\n            if (this.option(\"focusedRowEnabled\")) {\r\n                dataController.updateItems({\r\n                    changeType: \"updateFocusedRow\",\r\n                    focusedRowKey: key\r\n                })\r\n            } else {\r\n                d = this.getView(\"rowsView\").scrollToRowElement(key)\r\n            }\r\n            when(d).done(() => {\r\n                this.getController(\"keyboardNavigation\").setFocusedRowIndex(focusedRowIndex);\r\n                deferred && deferred.resolve(focusedRowIndex)\r\n            })\r\n        } else {\r\n            deferred && deferred.resolve(-1)\r\n        }\r\n    },\r\n    getFocusedRowIndexByKey: function(key) {\r\n        var dataController = this.getController(\"data\");\r\n        var loadedRowIndex = dataController.getRowIndexByKey(key, true);\r\n        return loadedRowIndex >= 0 ? loadedRowIndex + dataController.getRowIndexOffset(true) : -1\r\n    },\r\n    _focusRowByKeyOrIndex: function() {\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        var currentFocusedRowIndex = this.option(\"focusedRowIndex\");\r\n        var keyboardController = this.getController(\"keyboardNavigation\");\r\n        var dataController = this.getController(\"data\");\r\n        if (isDefined(focusedRowKey)) {\r\n            var visibleRowIndex = dataController.getRowIndexByKey(focusedRowKey);\r\n            if (visibleRowIndex >= 0) {\r\n                if (keyboardController._isVirtualScrolling()) {\r\n                    currentFocusedRowIndex = visibleRowIndex + dataController.getRowIndexOffset()\r\n                }\r\n                keyboardController.setFocusedRowIndex(currentFocusedRowIndex);\r\n                this._triggerUpdateFocusedRow(focusedRowKey)\r\n            } else {\r\n                this._navigateToRow(focusedRowKey, true).done(focusedRowIndex => {\r\n                    if (currentFocusedRowIndex >= 0 && focusedRowIndex < 0) {\r\n                        this._focusRowByIndex()\r\n                    } else if (currentFocusedRowIndex < 0 && focusedRowIndex >= 0) {\r\n                        keyboardController.setFocusedRowIndex(focusedRowIndex)\r\n                    }\r\n                })\r\n            }\r\n        } else if (currentFocusedRowIndex >= 0) {\r\n            this.getController(\"focus\")._focusRowByIndex(currentFocusedRowIndex)\r\n        }\r\n    },\r\n    isRowFocused: function(key) {\r\n        var focusedRowKey = this.option(\"focusedRowKey\");\r\n        if (isDefined(focusedRowKey)) {\r\n            return equalByValue(key, this.option(\"focusedRowKey\"))\r\n        }\r\n    },\r\n    updateFocusedRow: function(change) {\r\n        var that = this;\r\n        var focusedRowIndex = that._dataController.getRowIndexByKey(change.focusedRowKey);\r\n        var rowsView = that.getView(\"rowsView\");\r\n        var $tableElement;\r\n        each(rowsView.getTableElements(), (function(index, element) {\r\n            var isMainTable = 0 === index;\r\n            $tableElement = $(element);\r\n            that._clearPreviousFocusedRow($tableElement, focusedRowIndex);\r\n            that._prepareFocusedRow({\r\n                changedItem: that._dataController.getVisibleRows()[focusedRowIndex],\r\n                $tableElement: $tableElement,\r\n                focusedRowIndex: focusedRowIndex,\r\n                isMainTable: isMainTable\r\n            })\r\n        }))\r\n    },\r\n    _clearPreviousFocusedRow: function($tableElement, focusedRowIndex) {\r\n        var $prevRowFocusedElement = $tableElement.find(FOCUSED_ROW_SELECTOR).filter((_, focusedRow) => {\r\n            var $focusedRowTable = $(focusedRow).closest(\".\".concat(this.addWidgetPrefix(TABLE_POSTFIX_CLASS)));\r\n            return $tableElement.is($focusedRowTable)\r\n        });\r\n        $prevRowFocusedElement.removeClass(ROW_FOCUSED_CLASS).removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabindex\");\r\n        $prevRowFocusedElement.children(\"td\").removeAttr(\"tabindex\");\r\n        if (0 !== focusedRowIndex) {\r\n            var $firstRow = $(this.getView(\"rowsView\").getRowElement(0));\r\n            $firstRow.removeClass(CELL_FOCUS_DISABLED_CLASS).removeAttr(\"tabIndex\")\r\n        }\r\n    },\r\n    _prepareFocusedRow: function(options) {\r\n        var $row;\r\n        var changedItem = options.changedItem;\r\n        if (changedItem && (\"data\" === changedItem.rowType || \"group\" === changedItem.rowType)) {\r\n            var focusedRowIndex = options.focusedRowIndex;\r\n            var $tableElement = options.$tableElement;\r\n            var isMainTable = options.isMainTable;\r\n            var tabIndex = this.option(\"tabindex\") || 0;\r\n            var rowsView = this.getView(\"rowsView\");\r\n            $row = $(rowsView._getRowElements($tableElement).eq(focusedRowIndex));\r\n            $row.addClass(ROW_FOCUSED_CLASS).attr(\"tabindex\", tabIndex);\r\n            if (isMainTable) {\r\n                rowsView.scrollToElementVertically($row)\r\n            }\r\n        }\r\n        return $row\r\n    }\r\n});\r\nexport var focusModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            focusedRowEnabled: false,\r\n            autoNavigateToFocusedRow: true,\r\n            focusedRowKey: null,\r\n            focusedRowIndex: -1,\r\n            focusedColumnIndex: -1\r\n        }\r\n    },\r\n    controllers: {\r\n        focus: FocusController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            keyboardNavigation: {\r\n                init: function() {\r\n                    var rowIndex = this.option(\"focusedRowIndex\");\r\n                    var columnIndex = this.option(\"focusedColumnIndex\");\r\n                    this.createAction(\"onFocusedRowChanging\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.createAction(\"onFocusedRowChanged\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.createAction(\"onFocusedCellChanging\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.createAction(\"onFocusedCellChanged\", {\r\n                        excludeValidators: [\"disabled\", \"readOnly\"]\r\n                    });\r\n                    this.callBase();\r\n                    this.setRowFocusType();\r\n                    this._focusedCellPosition = {};\r\n                    if (isDefined(rowIndex)) {\r\n                        this._focusedCellPosition.rowIndex = this.option(\"focusedRowIndex\")\r\n                    }\r\n                    if (isDefined(columnIndex)) {\r\n                        this._focusedCellPosition.columnIndex = this.option(\"focusedColumnIndex\")\r\n                    }\r\n                },\r\n                setFocusedRowIndex: function(rowIndex) {\r\n                    var dataController = this.getController(\"data\");\r\n                    this.callBase(rowIndex);\r\n                    var visibleRowIndex = rowIndex - dataController.getRowIndexOffset();\r\n                    var visibleRow = dataController.getVisibleRows()[visibleRowIndex];\r\n                    if (!visibleRow || !visibleRow.isNewRow) {\r\n                        this.option(\"focusedRowIndex\", rowIndex)\r\n                    }\r\n                },\r\n                setFocusedColumnIndex: function(columnIndex) {\r\n                    this.callBase(columnIndex);\r\n                    this.option(\"focusedColumnIndex\", columnIndex)\r\n                },\r\n                _escapeKeyHandler: function(eventArgs, isEditing) {\r\n                    if (isEditing || !this.option(\"focusedRowEnabled\")) {\r\n                        this.callBase(eventArgs, isEditing);\r\n                        return\r\n                    }\r\n                    if (this.isCellFocusType()) {\r\n                        this.setRowFocusType();\r\n                        this._focus(this._getCellElementFromTarget(eventArgs.originalEvent.target), true)\r\n                    }\r\n                },\r\n                _updateFocusedCellPosition: function($cell, direction) {\r\n                    var prevRowIndex = this.option(\"focusedRowIndex\");\r\n                    var prevColumnIndex = this.option(\"focusedColumnIndex\");\r\n                    var position = this.callBase($cell, direction);\r\n                    if (position && position.columnIndex >= 0) {\r\n                        this._fireFocusedCellChanged($cell, prevColumnIndex, prevRowIndex)\r\n                    }\r\n                }\r\n            },\r\n            editorFactory: {\r\n                renderFocusOverlay: function($element, hideBorder) {\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var focusedRowEnabled = this.option(\"focusedRowEnabled\");\r\n                    var editingController = this.getController(\"editing\");\r\n                    var $cell;\r\n                    if (!focusedRowEnabled || !(null !== keyboardController && void 0 !== keyboardController && keyboardController.isRowFocusType()) || editingController.isEditing()) {\r\n                        this.callBase($element, hideBorder)\r\n                    } else if (focusedRowEnabled) {\r\n                        var isRowElement = \"row\" === keyboardController._getElementType($element);\r\n                        if (isRowElement && !$element.hasClass(ROW_FOCUSED_CLASS)) {\r\n                            $cell = keyboardController.getFirstValidCellInRow($element);\r\n                            keyboardController.focus($cell)\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            columns: {\r\n                getSortDataSourceParameters: function(_, sortByKey) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var dataController = this.getController(\"data\");\r\n                    var dataSource = dataController._dataSource;\r\n                    var store = dataController.store();\r\n                    var key = store && store.key();\r\n                    var remoteOperations = dataSource && dataSource.remoteOperations() || {};\r\n                    var isLocalOperations = Object.keys(remoteOperations).every(operationName => !remoteOperations[operationName]);\r\n                    if (key && (this.option(\"focusedRowEnabled\") && false !== this.getController(\"focus\").isAutoNavigateToFocusedRow() || sortByKey)) {\r\n                        key = Array.isArray(key) ? key : [key];\r\n                        var notSortedKeys = key.filter(key => !this.columnOption(key, \"sortOrder\"));\r\n                        if (notSortedKeys.length) {\r\n                            result = result || [];\r\n                            if (isLocalOperations) {\r\n                                result.push({\r\n                                    selector: dataSource.getDataIndexGetter(),\r\n                                    desc: false\r\n                                })\r\n                            } else {\r\n                                notSortedKeys.forEach(notSortedKey => result.push({\r\n                                    selector: notSortedKey,\r\n                                    desc: false\r\n                                }))\r\n                            }\r\n                        }\r\n                    }\r\n                    return result\r\n                }\r\n            },\r\n            data: {\r\n                _applyChange: function(change) {\r\n                    if (change && \"updateFocusedRow\" === change.changeType) {\r\n                        return\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _fireChanged: function(e) {\r\n                    this.callBase(e);\r\n                    if (this.option(\"focusedRowEnabled\") && this._dataSource) {\r\n                        var isPartialUpdate = \"update\" === e.changeType && e.repaintChangesOnly;\r\n                        var isPartialUpdateWithDeleting = isPartialUpdate && e.changeTypes && e.changeTypes.indexOf(\"remove\") >= 0;\r\n                        if (\"refresh\" === e.changeType && e.items.length || isPartialUpdateWithDeleting) {\r\n                            this._updatePageIndexes();\r\n                            this.processUpdateFocusedRow(e)\r\n                        } else if (\"append\" === e.changeType || \"prepend\" === e.changeType) {\r\n                            this._updatePageIndexes()\r\n                        } else if (\"update\" === e.changeType && e.repaintChangesOnly) {\r\n                            this.processUpdateFocusedRow(e)\r\n                        }\r\n                    }\r\n                },\r\n                _updatePageIndexes: function() {\r\n                    var prevRenderingPageIndex = this._lastRenderingPageIndex || 0;\r\n                    var renderingPageIndex = this._rowsScrollController ? this._rowsScrollController.pageIndex() : 0;\r\n                    this._lastRenderingPageIndex = renderingPageIndex;\r\n                    this._isPagingByRendering = renderingPageIndex !== prevRenderingPageIndex\r\n                },\r\n                isPagingByRendering: function() {\r\n                    return this._isPagingByRendering\r\n                },\r\n                processUpdateFocusedRow: function(e) {\r\n                    var operationTypes = e.operationTypes || {};\r\n                    var focusController = this.getController(\"focus\");\r\n                    var {\r\n                        reload: reload,\r\n                        fullReload: fullReload\r\n                    } = operationTypes;\r\n                    var keyboardController = this.getController(\"keyboardNavigation\");\r\n                    var isVirtualScrolling = keyboardController._isVirtualScrolling();\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var isAutoNavigate = focusController.isAutoNavigateToFocusedRow();\r\n                    if (reload && !fullReload && isDefined(focusedRowKey)) {\r\n                        focusController._navigateToRow(focusedRowKey, true).done((function(focusedRowIndex) {\r\n                            if (focusedRowIndex < 0) {\r\n                                focusController._focusRowByIndex(void 0, operationTypes)\r\n                            }\r\n                        }))\r\n                    } else if (operationTypes.paging && !isVirtualScrolling) {\r\n                        if (isAutoNavigate) {\r\n                            var rowIndexByKey = this.getRowIndexByKey(focusedRowKey);\r\n                            var isValidRowIndexByKey = rowIndexByKey >= 0;\r\n                            var focusedRowIndex = this.option(\"focusedRowIndex\");\r\n                            var needFocusRowByIndex = focusedRowIndex >= 0 && (focusedRowIndex === rowIndexByKey || !isValidRowIndexByKey);\r\n                            if (needFocusRowByIndex) {\r\n                                focusController._focusRowByIndex(void 0, operationTypes)\r\n                            }\r\n                        } else if (this.getRowIndexByKey(focusedRowKey) < 0) {\r\n                            this.option(\"focusedRowIndex\", -1)\r\n                        }\r\n                    } else if (operationTypes.fullReload) {\r\n                        focusController._focusRowByKeyOrIndex()\r\n                    }\r\n                },\r\n                getPageIndexByKey: function(key) {\r\n                    var that = this;\r\n                    var d = new Deferred;\r\n                    that.getGlobalRowIndexByKey(key).done((function(globalIndex) {\r\n                        d.resolve(globalIndex >= 0 ? Math.floor(globalIndex / that.pageSize()) : -1)\r\n                    })).fail(d.reject);\r\n                    return d.promise()\r\n                },\r\n                getGlobalRowIndexByKey: function(key) {\r\n                    if (this._dataSource.group()) {\r\n                        return this._calculateGlobalRowIndexByGroupedData(key)\r\n                    }\r\n                    return this._calculateGlobalRowIndexByFlatData(key)\r\n                },\r\n                _calculateGlobalRowIndexByFlatData: function(key, groupFilter, useGroup) {\r\n                    var that = this;\r\n                    var deferred = new Deferred;\r\n                    var dataSource = that._dataSource;\r\n                    if (Array.isArray(key)) {\r\n                        return deferred.resolve(-1).promise()\r\n                    }\r\n                    var filter = that._generateFilterByKey(key);\r\n                    dataSource.load({\r\n                        filter: that._concatWithCombinedFilter(filter),\r\n                        skip: 0,\r\n                        take: 1\r\n                    }).done((function(data) {\r\n                        if (data.length > 0) {\r\n                            filter = that._generateOperationFilterByKey(key, data[0], useGroup);\r\n                            dataSource.load({\r\n                                filter: that._concatWithCombinedFilter(filter, groupFilter),\r\n                                skip: 0,\r\n                                take: 1,\r\n                                requireTotalCount: true\r\n                            }).done((function(_, extra) {\r\n                                deferred.resolve(extra.totalCount)\r\n                            }))\r\n                        } else {\r\n                            deferred.resolve(-1)\r\n                        }\r\n                    }));\r\n                    return deferred.promise()\r\n                },\r\n                _concatWithCombinedFilter: function(filter, groupFilter) {\r\n                    var combinedFilter = this.getCombinedFilter();\r\n                    return gridCoreUtils.combineFilters([filter, combinedFilter, groupFilter])\r\n                },\r\n                _generateBooleanFilter: function(selector, value, sortInfo) {\r\n                    var result;\r\n                    if (false === value) {\r\n                        result = [selector, \"=\", sortInfo.desc ? true : null]\r\n                    } else if (true === value ? !sortInfo.desc : sortInfo.desc) {\r\n                        result = [selector, \"<>\", value]\r\n                    }\r\n                    return result\r\n                },\r\n                _generateOperationFilterByKey: function(key, rowData, useGroup) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var filter = that._generateFilterByKey(key, \"<\");\r\n                    var sort = that._columnsController.getSortDataSourceParameters(!dataSource.remoteOperations().filtering, true);\r\n                    if (useGroup) {\r\n                        var group = that._columnsController.getGroupDataSourceParameters(!dataSource.remoteOperations().filtering);\r\n                        if (group) {\r\n                            sort = sort ? group.concat(sort) : group\r\n                        }\r\n                    }\r\n                    if (sort) {\r\n                        sort.slice().reverse().forEach((function(sortInfo) {\r\n                            var selector = sortInfo.selector;\r\n                            var getter;\r\n                            if (\"function\" === typeof selector) {\r\n                                getter = selector\r\n                            } else {\r\n                                getter = that._columnsController.columnOption(selector, \"selector\")\r\n                            }\r\n                            var value = getter ? getter(rowData) : rowData[selector];\r\n                            filter = [\r\n                                [selector, \"=\", value], \"and\", filter\r\n                            ];\r\n                            if (null === value || isBoolean(value)) {\r\n                                var booleanFilter = that._generateBooleanFilter(selector, value, sortInfo);\r\n                                if (booleanFilter) {\r\n                                    filter = [booleanFilter, \"or\", filter]\r\n                                }\r\n                            } else {\r\n                                var filterOperation = sortInfo.desc ? \">\" : \"<\";\r\n                                var sortFilter = [selector, filterOperation, value];\r\n                                if (!sortInfo.desc) {\r\n                                    sortFilter = [sortFilter, \"or\", [selector, \"=\", null]]\r\n                                }\r\n                                filter = [sortFilter, \"or\", filter]\r\n                            }\r\n                        }))\r\n                    }\r\n                    return filter\r\n                },\r\n                _generateFilterByKey: function(key, operation) {\r\n                    var dataSourceKey = this._dataSource.key();\r\n                    var filter = [];\r\n                    if (!operation) {\r\n                        operation = \"=\"\r\n                    }\r\n                    if (Array.isArray(dataSourceKey)) {\r\n                        for (var i = 0; i < dataSourceKey.length; ++i) {\r\n                            var keyPart = key[dataSourceKey[i]];\r\n                            if (keyPart) {\r\n                                if (filter.length > 0) {\r\n                                    filter.push(\"and\")\r\n                                }\r\n                                filter.push([dataSourceKey[i], operation, keyPart])\r\n                            }\r\n                        }\r\n                    } else {\r\n                        filter = [dataSourceKey, operation, key]\r\n                    }\r\n                    return filter\r\n                },\r\n                _getLastItemIndex: function() {\r\n                    return this.items(true).length - 1\r\n                }\r\n            },\r\n            editing: {\r\n                _deleteRowCore: function(rowIndex) {\r\n                    var deferred = this.callBase.apply(this, arguments);\r\n                    var dataController = this.getController(\"data\");\r\n                    var rowKey = dataController.getKeyByRowIndex(rowIndex);\r\n                    deferred.done(() => {\r\n                        var rowIndex = dataController.getRowIndexByKey(rowKey);\r\n                        var visibleRows = dataController.getVisibleRows();\r\n                        if (-1 === rowIndex && !visibleRows.length) {\r\n                            this.getController(\"focus\")._resetFocusedRow()\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        },\r\n        views: {\r\n            rowsView: {\r\n                _createRow: function(row) {\r\n                    var $row = this.callBase.apply(this, arguments);\r\n                    if (this.option(\"focusedRowEnabled\") && row) {\r\n                        if (this.getController(\"focus\").isRowFocused(row.key)) {\r\n                            $row.addClass(ROW_FOCUSED_CLASS)\r\n                        }\r\n                    }\r\n                    return $row\r\n                },\r\n                _checkRowKeys: function(options) {\r\n                    this.callBase.apply(this, arguments);\r\n                    if (this.option(\"focusedRowEnabled\") && this.option(\"dataSource\")) {\r\n                        var store = this._dataController.store();\r\n                        if (store && !store.key()) {\r\n                            this._dataController.fireError(\"E1042\", \"Row focusing\")\r\n                        }\r\n                    }\r\n                },\r\n                _update: function(change) {\r\n                    if (\"updateFocusedRow\" === change.changeType) {\r\n                        if (this.option(\"focusedRowEnabled\")) {\r\n                            this.getController(\"focus\").updateFocusedRow(change)\r\n                        }\r\n                    } else {\r\n                        this.callBase(change)\r\n                    }\r\n                },\r\n                updateFocusElementTabIndex: function($cellElements, preventScroll) {\r\n                    var rowIndex = this.getController(\"keyboardNavigation\").getVisibleRowIndex();\r\n                    var row = this._dataController.getVisibleRows()[rowIndex];\r\n                    if (this.option(\"focusedRowEnabled\") && !(null !== row && void 0 !== row && row.isNewRow)) {\r\n                        this._setFocusedRowElementTabIndex(preventScroll)\r\n                    } else {\r\n                        this.callBase($cellElements)\r\n                    }\r\n                },\r\n                _setFocusedRowElementTabIndex: function(preventScroll) {\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var tabIndex = this.option(\"tabIndex\") || 0;\r\n                    var dataController = this._dataController;\r\n                    var columnsController = this._columnsController;\r\n                    var rowIndex = dataController.getRowIndexByKey(focusedRowKey);\r\n                    var columnIndex = this.option(\"focusedColumnIndex\");\r\n                    var $row = this._findRowElementForTabIndex();\r\n                    if (!isDefined(this._scrollToFocusOnResize)) {\r\n                        this._scrollToFocusOnResize = () => {\r\n                            this.scrollToElementVertically(this._findRowElementForTabIndex());\r\n                            this.resizeCompleted.remove(this._scrollToFocusOnResize)\r\n                        }\r\n                    }\r\n                    $row.attr(\"tabIndex\", tabIndex);\r\n                    if (rowIndex >= 0 && !preventScroll) {\r\n                        if (columnIndex < 0) {\r\n                            columnIndex = 0\r\n                        }\r\n                        rowIndex += dataController.getRowIndexOffset();\r\n                        columnIndex += columnsController.getColumnIndexOffset();\r\n                        this.getController(\"keyboardNavigation\").setFocusedCellPosition(rowIndex, columnIndex);\r\n                        if (this.getController(\"focus\").isAutoNavigateToFocusedRow()) {\r\n                            var dataSource = dataController.dataSource();\r\n                            var operationTypes = dataSource && dataSource.operationTypes();\r\n                            if (operationTypes && !operationTypes.paging && !dataController.isPagingByRendering()) {\r\n                                this.resizeCompleted.remove(this._scrollToFocusOnResize);\r\n                                this.resizeCompleted.add(this._scrollToFocusOnResize)\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                _findRowElementForTabIndex: function() {\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var rowIndex = this._dataController.getRowIndexByKey(focusedRowKey);\r\n                    return $(this.getRowElement(rowIndex >= 0 ? rowIndex : 0))\r\n                },\r\n                scrollToRowElement: function(key) {\r\n                    var rowIndex = this.getController(\"data\").getRowIndexByKey(key);\r\n                    var $row = $(this.getRow(rowIndex));\r\n                    return this.scrollToElementVertically($row)\r\n                },\r\n                scrollToElementVertically: function($row) {\r\n                    var scrollable = this.getScrollable();\r\n                    if (scrollable && $row.length) {\r\n                        var position = scrollable.getScrollElementPosition($row, \"vertical\");\r\n                        return this.scrollTopPosition(position)\r\n                    }\r\n                    return (new Deferred).resolve()\r\n                },\r\n                scrollTopPosition: function(scrollTop) {\r\n                    var d = new Deferred;\r\n                    var scrollable = this.getScrollable();\r\n                    if (scrollable) {\r\n                        var currentScrollTop = scrollable.scrollTop();\r\n                        var scrollHandler = () => {\r\n                            scrollable.off(\"scroll\", scrollHandler);\r\n                            d.resolve()\r\n                        };\r\n                        if (scrollTop !== currentScrollTop) {\r\n                            scrollable.on(\"scroll\", scrollHandler);\r\n                            this._dataController.resetFilterApplying();\r\n                            scrollable.scrollTo({\r\n                                top: scrollTop\r\n                            });\r\n                            return d.promise()\r\n                        }\r\n                    }\r\n                    return d.resolve()\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.focus.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    focusModule\r\n} from \"../grid_core/ui.grid_core.focus\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    createGroupFilter\r\n} from \"./ui.data_grid.utils\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\r\ngridCore.registerModule(\"focus\", extend(true, {}, focusModule, {\r\n    extenders: {\r\n        controllers: {\r\n            data: {\r\n                changeRowExpand: function(path, isRowClick) {\r\n                    if (this.option(\"focusedRowEnabled\") && Array.isArray(path) && this.isRowExpanded(path)) {\r\n                        var keyboardNavigation = this.getController(\"keyboardNavigation\");\r\n                        if ((!isRowClick || !keyboardNavigation.isKeyboardEnabled()) && this._isFocusedRowInsideGroup(path)) {\r\n                            this.option(\"focusedRowKey\", path)\r\n                        }\r\n                    }\r\n                    return this.callBase.apply(this, arguments)\r\n                },\r\n                _isFocusedRowInsideGroup: function(path) {\r\n                    var columnsController = this.getController(\"columns\");\r\n                    var focusedRowKey = this.option(\"focusedRowKey\");\r\n                    var rowIndex = this.getRowIndexByKey(focusedRowKey);\r\n                    var focusedRow = rowIndex >= 0 && this.getVisibleRows()[rowIndex];\r\n                    var groups = columnsController.getGroupDataSourceParameters(true);\r\n                    if (focusedRow) {\r\n                        for (var i = 0; i < path.length; ++i) {\r\n                            var getter = compileGetter(groups[i] && groups[i].selector);\r\n                            if (getter(focusedRow.data) !== path[i]) {\r\n                                return false\r\n                            }\r\n                        }\r\n                    }\r\n                    return true\r\n                },\r\n                _getGroupPath: function(group) {\r\n                    var groupPath = [group.key];\r\n                    var items = group.items;\r\n                    while (items && items[0]) {\r\n                        var item = items[0];\r\n                        if (void 0 !== item.key) {\r\n                            groupPath.push(item.key)\r\n                        }\r\n                        items = item.items\r\n                    }\r\n                    return groupPath\r\n                },\r\n                _expandGroupByPath: function(that, groupPath, level) {\r\n                    var d = new Deferred;\r\n                    level++;\r\n                    that.expandRow(groupPath.slice(0, level)).done((function() {\r\n                        if (level === groupPath.length) {\r\n                            d.resolve()\r\n                        } else {\r\n                            that._expandGroupByPath(that, groupPath, level).done(d.resolve).fail(d.reject)\r\n                        }\r\n                    })).fail(d.reject);\r\n                    return d.promise()\r\n                },\r\n                _calculateGlobalRowIndexByGroupedData: function(key) {\r\n                    var that = this;\r\n                    var dataSource = that._dataSource;\r\n                    var filter = that._generateFilterByKey(key);\r\n                    var deferred = new Deferred;\r\n                    var isGroupKey = Array.isArray(key);\r\n                    var group = dataSource.group();\r\n                    if (isGroupKey) {\r\n                        return deferred.resolve(-1).promise()\r\n                    }\r\n                    if (!dataSource._grouping._updatePagingOptions) {\r\n                        that._calculateGlobalRowIndexByFlatData(key, null, true).done(deferred.resolve).fail(deferred.reject);\r\n                        return deferred\r\n                    }\r\n                    dataSource.load({\r\n                        filter: that._concatWithCombinedFilter(filter),\r\n                        group: group\r\n                    }).done((function(data) {\r\n                        if (!data || 0 === data.length || !isDefined(data[0].key) || -1 === data[0].key) {\r\n                            return deferred.resolve(-1).promise()\r\n                        }\r\n                        var groupPath = that._getGroupPath(data[0]);\r\n                        that._expandGroupByPath(that, groupPath, 0).done((function() {\r\n                            that._calculateExpandedRowGlobalIndex(deferred, key, groupPath, group)\r\n                        })).fail(deferred.reject)\r\n                    })).fail(deferred.reject);\r\n                    return deferred.promise()\r\n                },\r\n                _calculateExpandedRowGlobalIndex: function(deferred, key, groupPath, group) {\r\n                    var groupFilter = createGroupFilter(groupPath, {\r\n                        group: group\r\n                    });\r\n                    var dataSource = this._dataSource;\r\n                    var scrollingMode = this.option(\"scrolling.mode\");\r\n                    var isVirtualScrolling = \"virtual\" === scrollingMode || \"infinite\" === scrollingMode;\r\n                    var pageSize = dataSource.pageSize();\r\n                    var groupOffset;\r\n                    dataSource._grouping._updatePagingOptions({\r\n                        skip: 0,\r\n                        take: MAX_SAFE_INTEGER\r\n                    }, (function(groupInfo, totalOffset) {\r\n                        if (equalByValue(groupInfo.path, groupPath)) {\r\n                            groupOffset = totalOffset\r\n                        }\r\n                    }));\r\n                    this._calculateGlobalRowIndexByFlatData(key, groupFilter).done((function(dataOffset) {\r\n                        var count;\r\n                        var groupContinuationCount;\r\n                        if (dataOffset < 0) {\r\n                            deferred.resolve(-1);\r\n                            return\r\n                        }\r\n                        var currentPageOffset = groupOffset % pageSize || pageSize;\r\n                        count = currentPageOffset + dataOffset - groupPath.length;\r\n                        if (isVirtualScrolling) {\r\n                            groupContinuationCount = 0\r\n                        } else {\r\n                            groupContinuationCount = Math.floor(count / (pageSize - groupPath.length)) * groupPath.length\r\n                        }\r\n                        count = groupOffset + dataOffset + groupContinuationCount;\r\n                        deferred.resolve(count)\r\n                    })).fail(deferred.reject)\r\n                }\r\n            }\r\n        }\r\n    }\r\n}));\r\n","/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.row_dragging.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    setWidth,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport Sortable from \"../sortable\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    deferUpdate\r\n} from \"../../core/utils/common\";\r\nvar COMMAND_HANDLE_CLASS = \"dx-command-drag\";\r\nvar CELL_FOCUS_DISABLED_CLASS = \"dx-cell-focus-disabled\";\r\nvar HANDLE_ICON_CLASS = \"drag-icon\";\r\nvar ROWS_VIEW = \"rowsview\";\r\nvar SORTABLE_WITHOUT_HANDLE_CLASS = \"dx-sortable-without-handle\";\r\nvar RowDraggingExtender = {\r\n    init: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._updateHandleColumn()\r\n    },\r\n    _allowReordering: function() {\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        return !!(rowDragging && (rowDragging.allowReordering || rowDragging.allowDropInsideItem || rowDragging.group))\r\n    },\r\n    _updateHandleColumn: function() {\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        var allowReordering = this._allowReordering();\r\n        var columnsController = this._columnsController;\r\n        var isHandleColumnVisible = allowReordering && rowDragging.showDragIcons;\r\n        columnsController && columnsController.addCommandColumn({\r\n            type: \"drag\",\r\n            command: \"drag\",\r\n            visibleIndex: -2,\r\n            alignment: \"center\",\r\n            cssClass: COMMAND_HANDLE_CLASS,\r\n            width: \"auto\",\r\n            cellTemplate: this._getHandleTemplate(),\r\n            visible: isHandleColumnVisible\r\n        });\r\n        columnsController.columnOption(\"type:drag\", \"visible\", isHandleColumnVisible)\r\n    },\r\n    _renderContent: function() {\r\n        var rowDragging = this.option(\"rowDragging\");\r\n        var allowReordering = this._allowReordering();\r\n        var $content = this.callBase.apply(this, arguments);\r\n        var isFixedTableRendering = this._isFixedTableRendering;\r\n        var sortableName = \"_sortable\";\r\n        var sortableFixedName = \"_sortableFixed\";\r\n        var currentSortableName = isFixedTableRendering ? sortableFixedName : sortableName;\r\n        var anotherSortableName = isFixedTableRendering ? sortableName : sortableFixedName;\r\n        var togglePointerEventsStyle = toggle => {\r\n            var _this$sortableFixedNa;\r\n            null === (_this$sortableFixedNa = this[sortableFixedName]) || void 0 === _this$sortableFixedNa ? void 0 : _this$sortableFixedNa.$element().css(\"pointerEvents\", toggle ? \"auto\" : \"\")\r\n        };\r\n        var filter = this.option(\"dataRowTemplate\") ? \"> table > tbody.dx-row:not(.dx-freespace-row):not(.dx-virtual-row)\" : \"> table > tbody > .dx-row:not(.dx-freespace-row):not(.dx-virtual-row)\";\r\n        if ((allowReordering || this[currentSortableName]) && $content.length) {\r\n            this[currentSortableName] = this._createComponent($content, Sortable, extend({\r\n                component: this.component,\r\n                contentTemplate: null,\r\n                filter: filter,\r\n                dragTemplate: this._getDraggableRowTemplate(),\r\n                handle: rowDragging.showDragIcons && \".\".concat(COMMAND_HANDLE_CLASS),\r\n                dropFeedbackMode: \"indicate\"\r\n            }, rowDragging, {\r\n                onDragStart: e => {\r\n                    var _this$getController, _rowDragging$onDragSt;\r\n                    null === (_this$getController = this.getController(\"keyboardNavigation\")) || void 0 === _this$getController ? void 0 : _this$getController._resetFocusedCell();\r\n                    var row = e.component.getVisibleRows()[e.fromIndex];\r\n                    e.itemData = row && row.data;\r\n                    var isDataRow = row && \"data\" === row.rowType;\r\n                    e.cancel = !allowReordering || !isDataRow;\r\n                    null === (_rowDragging$onDragSt = rowDragging.onDragStart) || void 0 === _rowDragging$onDragSt ? void 0 : _rowDragging$onDragSt.call(rowDragging, e)\r\n                },\r\n                onDragEnter: () => {\r\n                    togglePointerEventsStyle(true)\r\n                },\r\n                onDragLeave: () => {\r\n                    togglePointerEventsStyle(false)\r\n                },\r\n                onDragEnd: e => {\r\n                    var _rowDragging$onDragEn;\r\n                    togglePointerEventsStyle(false);\r\n                    null === (_rowDragging$onDragEn = rowDragging.onDragEnd) || void 0 === _rowDragging$onDragEn ? void 0 : _rowDragging$onDragEn.call(rowDragging, e)\r\n                },\r\n                onAdd: e => {\r\n                    var _rowDragging$onAdd;\r\n                    togglePointerEventsStyle(false);\r\n                    null === (_rowDragging$onAdd = rowDragging.onAdd) || void 0 === _rowDragging$onAdd ? void 0 : _rowDragging$onAdd.call(rowDragging, e)\r\n                },\r\n                dropFeedbackMode: rowDragging.dropFeedbackMode,\r\n                onOptionChanged: e => {\r\n                    var hasFixedSortable = this[sortableFixedName];\r\n                    if (hasFixedSortable) {\r\n                        if (\"fromIndex\" === e.name || \"toIndex\" === e.name) {\r\n                            this[anotherSortableName].option(e.name, e.value)\r\n                        }\r\n                    }\r\n                }\r\n            }));\r\n            $content.toggleClass(\"dx-scrollable-container\", isFixedTableRendering);\r\n            $content.toggleClass(SORTABLE_WITHOUT_HANDLE_CLASS, allowReordering && !rowDragging.showDragIcons)\r\n        }\r\n        return $content\r\n    },\r\n    _renderCore(e) {\r\n        this.callBase.apply(this, arguments);\r\n        if (e && \"update\" === e.changeType && e.repaintChangesOnly && gridCoreUtils.isVirtualRowRendering(this)) {\r\n            deferUpdate(() => {\r\n                this._updateSortable()\r\n            })\r\n        }\r\n    },\r\n    _updateSortable() {\r\n        var offset = this._dataController.getRowIndexOffset();\r\n        [this._sortable, this._sortableFixed].forEach(sortable => {\r\n            null === sortable || void 0 === sortable ? void 0 : sortable.option(\"offset\", offset);\r\n            null === sortable || void 0 === sortable ? void 0 : sortable.update()\r\n        })\r\n    },\r\n    _resizeCore: function() {\r\n        this.callBase.apply(this, arguments);\r\n        this._updateSortable()\r\n    },\r\n    _getDraggableGridOptions: function(options) {\r\n        var gridOptions = this.option();\r\n        var columns = this.getColumns();\r\n        var $rowElement = $(this.getRowElement(options.rowIndex));\r\n        return {\r\n            dataSource: [{\r\n                id: 1,\r\n                parentId: 0\r\n            }],\r\n            showBorders: true,\r\n            showColumnHeaders: false,\r\n            scrolling: {\r\n                useNative: false,\r\n                showScrollbar: \"never\"\r\n            },\r\n            pager: {\r\n                visible: false\r\n            },\r\n            loadingTimeout: null,\r\n            columnFixing: gridOptions.columnFixing,\r\n            columnAutoWidth: gridOptions.columnAutoWidth,\r\n            showColumnLines: gridOptions.showColumnLines,\r\n            columns: columns.map(column => ({\r\n                width: column.width || column.visibleWidth,\r\n                fixed: column.fixed,\r\n                fixedPosition: column.fixedPosition\r\n            })),\r\n            onRowPrepared: e => {\r\n                var rowsView = e.component.getView(\"rowsView\");\r\n                $(e.rowElement).replaceWith($rowElement.eq(rowsView._isFixedTableRendering ? 1 : 0).clone())\r\n            }\r\n        }\r\n    },\r\n    _getDraggableRowTemplate: function() {\r\n        return options => {\r\n            var $rootElement = this.component.$element();\r\n            var $dataGridContainer = $(\"<div>\");\r\n            setWidth($dataGridContainer, getWidth($rootElement));\r\n            var items = this._dataController.items();\r\n            var row = items && items[options.fromIndex];\r\n            var gridOptions = this._getDraggableGridOptions(row);\r\n            this._createComponent($dataGridContainer, this.component.NAME, gridOptions);\r\n            $dataGridContainer.find(\".dx-gridbase-container\").children(\":not(.\".concat(this.addWidgetPrefix(ROWS_VIEW), \")\")).hide();\r\n            return $dataGridContainer\r\n        }\r\n    },\r\n    _getHandleTemplate: function() {\r\n        return (container, options) => {\r\n            if (\"data\" === options.rowType) {\r\n                $(container).addClass(CELL_FOCUS_DISABLED_CLASS);\r\n                return $(\"<span>\").addClass(this.addWidgetPrefix(HANDLE_ICON_CLASS))\r\n            } else {\r\n                gridCoreUtils.setEmptyText($(container))\r\n            }\r\n        }\r\n    },\r\n    optionChanged: function(args) {\r\n        if (\"rowDragging\" === args.name) {\r\n            this._updateHandleColumn();\r\n            this._invalidate(true, true);\r\n            args.handled = true\r\n        }\r\n        this.callBase.apply(this, arguments)\r\n    }\r\n};\r\nexport var rowDraggingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            rowDragging: {\r\n                showDragIcons: true,\r\n                dropFeedbackMode: \"indicate\",\r\n                allowReordering: false,\r\n                allowDropInsideItem: false\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        views: {\r\n            rowsView: RowDraggingExtender\r\n        }\r\n    }\r\n};\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.row_dragging.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport gridCore from \"./ui.data_grid.core\";\r\nimport {\r\n    rowDraggingModule\r\n} from \"../grid_core/ui.grid_core.row_dragging\";\r\ngridCore.registerModule(\"rowDragging\", rowDraggingModule);\r\n","/**\r\n * DevExtreme (esm/ui/data_grid/ui.data_grid.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport DataGrid from \"./ui.data_grid.base\";\r\nexport default DataGrid;\r\nimport \"./ui.data_grid.state_storing\";\r\nimport \"./ui.data_grid.selection\";\r\nimport \"./ui.data_grid.column_chooser\";\r\nimport \"./ui.data_grid.grouping\";\r\nimport \"./ui.data_grid.master_detail\";\r\nimport \"./ui.data_grid.editing\";\r\nimport \"./ui.data_grid.editing_row_based\";\r\nimport \"./ui.data_grid.editing_form_based\";\r\nimport \"./ui.data_grid.editing_cell_based\";\r\nimport \"./ui.data_grid.validating\";\r\nimport \"./ui.data_grid.virtual_scrolling\";\r\nimport \"./ui.data_grid.filter_row\";\r\nimport \"./ui.data_grid.header_filter\";\r\nimport \"./ui.data_grid.filter_sync\";\r\nimport \"./ui.data_grid.filter_builder\";\r\nimport \"./ui.data_grid.filter_panel\";\r\nimport \"./ui.data_grid.search\";\r\nimport \"./ui.data_grid.pager\";\r\nimport \"./ui.data_grid.columns_resizing_reordering\";\r\nimport \"./ui.data_grid.keyboard_navigation\";\r\nimport \"./ui.data_grid.summary\";\r\nimport \"./ui.data_grid.column_fixing\";\r\nimport \"./ui.data_grid.adaptivity\";\r\nimport \"./ui.data_grid.virtual_columns\";\r\nimport \"./ui.data_grid.export\";\r\nimport \"./ui.data_grid.focus\";\r\nimport \"./ui.data_grid.row_dragging\";\r\n","/**\r\n * DevExtreme (esm/ui/data_grid.js)\r\n * Version: 21.2.6\r\n * Build date: Tue Mar 01 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport DataGrid from \"./data_grid/ui.data_grid\";\r\nexport default DataGrid;\r\n"],"names":["$","target","stat","MAX_SAFE_INTEGER","__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","DxLookup","DxLoadPanel","DxLabel","DxKeyboardNavigation","DxItem","DxHide","DxHeaderFilter","DxGroupPanel","DxGroupOperationDescriptions","DxGroupItem","DxGroupingTexts","DxGrouping","DxFrom","DxFormItem","DxFormat","DxForm","DxFilterRow","DxFilterPanelTexts","DxFilterPanel","DxFilterOperationDescriptions","DxFilterBuilderPopup","DxFilterBuilder","DxFieldLookup","DxField","DxExportTexts","DxExport","DxEmailRule","DxEditingTexts","DxEditing","DxDataGridHeaderFilterTexts","DxDataGridHeaderFilter","DxCustomRule","DxCustomOperation","DxCursorOffset","DxCompareRule","DxColumnLookup","DxColumnHeaderFilter","DxColumnFixingTexts","DxColumnFixing","DxColumnChooser","DxColumn","DxCollision","DxColCountByScreen","DxChange","DxButton","DxBoundaryOffset","DxAt","DxAsyncRule","DxAnimation","DxDataGrid","DxValueFormat","DxValidationRule","DxTotalItem","DxToolbarItem","DxToolbar","DxTo","DxTexts","DxSummaryTexts","DxSummary","DxStringLengthRule","DxStateStoring","DxSorting","DxSortByGroupSummaryInfo","DxShow","DxSelection","DxSearchPanel","DxScrolling","DxRowDragging","DxRequiredRule","DxRemoteOperations","DxRangeRule","DxPosition","DxPopup","DxPatternRule","DxPaging","DxPager","DxOperationDescriptions","DxOffset","DxNumericRule","DxMy","DxMasterDetail","data_grid_1","require","index_1","index_2","createComponent","props","accessKey","String","activeStateEnabled","Boolean","allowColumnReordering","allowColumnResizing","autoNavigateToFocusedRow","cacheEnabled","cellHintEnabled","columnAutoWidth","columnChooser","columnFixing","columnHidingEnabled","columnMinWidth","Number","columnResizingMode","columns","Array","columnWidth","customizeColumns","Function","customizeExportData","dataRowTemplate","dataSource","dateSerializationFormat","disabled","editing","elementAttr","errorRowEnabled","export","filterBuilder","filterBuilderPopup","filterPanel","filterRow","filterSyncEnabled","filterValue","focusedColumnIndex","focusedRowEnabled","focusedRowIndex","focusedRowKey","focusStateEnabled","grouping","groupPanel","headerFilter","height","highlightChanges","hint","hoverStateEnabled","keyboardNavigation","keyExpr","loadPanel","masterDetail","noDataText","onAdaptiveDetailRowPreparing","onCellClick","onCellDblClick","onCellHoverChanged","onCellPrepared","onContentReady","onContextMenuPreparing","onDataErrorOccurred","onDisposing","onEditCanceled","onEditCanceling","onEditingStart","onEditorPrepared","onEditorPreparing","onExported","onExporting","onFileSaving","onFocusedCellChanged","onFocusedCellChanging","onFocusedRowChanged","onFocusedRowChanging","onInitialized","onInitNewRow","onKeyDown","onOptionChanged","onRowClick","onRowCollapsed","onRowCollapsing","onRowDblClick","onRowExpanded","onRowExpanding","onRowInserted","onRowInserting","onRowPrepared","onRowRemoved","onRowRemoving","onRowUpdated","onRowUpdating","onRowValidating","onSaved","onSaving","onSelectionChanged","onToolbarPreparing","pager","paging","remoteOperations","renderAsync","repaintChangesOnly","rowAlternationEnabled","rowDragging","rowTemplate","rtlEnabled","scrolling","searchPanel","selectedRowKeys","selection","selectionFilter","showBorders","showColumnHeaders","showColumnLines","showRowLines","sortByGroupSummaryInfo","sorting","stateStoring","summary","tabIndex","toolbar","twoWayBindingEnabled","visible","width","wordWrapEnabled","emits","computed","instance","$_instance","beforeCreate","$_WidgetClass","default","$_hasAsyncTemplate","$_expectedChildren","column","isCollectionItem","optionName","dataGridHeaderFilter","createConfigurationComponent","hide","show","$_optionName","ignoreEmptyValue","message","reevaluate","type","validationCallback","$_isCollectionItem","$_predefinedProps","x","y","cssClass","icon","name","onClick","template","text","data","insertAfterKey","insertBeforeKey","lg","md","sm","xs","alignment","allowEditing","allowExporting","allowFiltering","allowFixing","allowGrouping","allowHeaderFiltering","allowHiding","allowReordering","allowResizing","allowSearch","allowSorting","autoExpandGroup","buttons","calculateCellValue","calculateDisplayValue","calculateFilterExpression","calculateGroupValue","calculateSortValue","caption","cellTemplate","customizeText","dataField","dataType","editCellTemplate","editorOptions","encodeHtml","falseText","filterOperations","filterType","filterValues","fixed","fixedPosition","format","formItem","groupCellTemplate","grouped","groupIndex","headerCellTemplate","hidingPriority","isBand","lookup","minWidth","ownerBand","resized","selectedFilterOperation","setCellValue","showEditorAlways","showInColumnChooser","showWhenGrouped","sortIndex","sortingMethod","sortOrder","trueText","validationRules","visibleIndex","AsyncRule","button","columnHeaderFilter","columnLookup","CompareRule","CustomRule","EmailRule","NumericRule","PatternRule","RangeRule","RequiredRule","StringLengthRule","validationRule","emptyPanelText","enabled","mode","searchTimeout","title","texts","columnFixingTexts","fix","leftPosition","rightPosition","unfix","groupInterval","searchMode","allowClearing","displayExpr","valueExpr","comparisonTarget","comparisonType","dataTypes","editorTemplate","hasValue","dataGridHeaderFilterTexts","cancel","emptyValue","ok","allowAdding","allowDeleting","allowUpdating","changes","confirmDelete","editColumnName","editRowKey","form","newRowPosition","popup","refreshMode","selectTextOnEditStart","startEditAction","useIcons","change","editingTexts","addRow","cancelAllChanges","cancelRowChanges","confirmDeleteMessage","confirmDeleteTitle","deleteRow","editRow","saveAllChanges","saveRowChanges","undeleteRow","validationCancelChanges","allowExportSelectedData","customizeExcelCell","excelFilterEnabled","excelWrapTextEnabled","fileName","ignoreExcelErrors","proxyUrl","exportTexts","exportAll","exportSelectedRows","exportTo","defaultFilterOperation","fieldLookup","allowHierarchicalFields","bindingOptions","customOperations","fields","filterOperationDescriptions","groupOperationDescriptions","groupOperations","maxGroupLevel","onFocusIn","onFocusOut","onValueChanged","customOperation","field","animation","closeOnOutsideClick","container","contentTemplate","copyRootClassesToWrapper","deferRendering","dragAndResizeArea","dragEnabled","dragOutsideBoundary","fullScreen","hideOnParentScroll","maxHeight","maxWidth","minHeight","onHidden","onHiding","onResize","onResizeEnd","onResizeStart","onShowing","onShown","onTitleRendered","position","resizeEnabled","restorePosition","shading","shadingColor","showCloseButton","showTitle","titleTemplate","toolbarItems","wrapperAttr","between","contains","endsWith","equal","greaterThan","greaterThanOrEqual","isBlank","isNotBlank","lessThan","lessThanOrEqual","notContains","notEqual","startsWith","filterEnabled","filterPanelTexts","clearFilter","createFilter","filterEnabledHint","applyFilter","applyFilterText","betweenEndText","betweenStartText","operationDescriptions","resetOperationText","showAllText","showOperationChooser","alignItemLabels","alignItemLabelsInAllGroups","colCount","colCountByScreen","customizeItem","formData","items","labelLocation","labelMode","minColWidth","onEditorEnterKey","onFieldDataChanged","optionalMark","readOnly","requiredMark","requiredMessage","screenByWidth","scrollingEnabled","showColonAfterLabel","showOptionalMark","showRequiredMark","showValidationSummary","validationGroup","currency","formatter","parser","precision","colSpan","editorType","helpText","isRequired","itemType","label","left","opacity","scale","top","allowCollapsing","autoExpandAll","contextMenuEnabled","expandMode","groupingTexts","groupByThisColumn","groupContinuedMessage","groupContinuesMessage","ungroup","ungroupAll","alignByColumn","displayFormat","showInColumn","showInGroupFooter","skipEmptyValues","summaryType","valueFormat","and","notAnd","notOr","or","allowColumnDragging","complete","delay","direction","duration","easing","from","staggerDelay","start","to","html","locateInMenu","location","menuItemTemplate","options","showText","widget","editOnKeyPress","enterKeyAction","enterKeyDirection","showColon","indicatorSrc","showIndicator","showPane","allowedPageSizes","displayMode","infoText","showInfo","showNavigationButtons","showPageSizeSelector","pageIndex","pageSize","pattern","toolbarItem","at","boundary","boundaryOffset","collision","my","of","offset","max","min","filtering","groupPaging","trim","allowDropInsideItem","autoScroll","cursorOffset","dragDirection","dragTemplate","dropFeedbackMode","filter","group","handle","onAdd","onDragChange","onDragEnd","onDragMove","onDragStart","onRemove","onReorder","scrollSensitivity","scrollSpeed","showDragIcons","columnRenderingMode","preloadEnabled","rowRenderingMode","scrollByContent","scrollByThumb","showScrollbar","useNative","highlightCaseSensitive","highlightSearchText","placeholder","searchVisibleColumnsOnly","allowSelectAll","deferred","maxFilterLengthInRequest","selectAllMode","showCheckBoxesMode","groupColumn","summaryItem","ascendingText","clearText","descendingText","showSortIndexes","customLoad","customSave","savingTimeout","storageKey","calculateCustomSummary","groupItems","recalculateWhileEditing","totalItems","groupItem","summaryTexts","totalItem","avg","avgOtherColumn","count","maxOtherColumn","minOtherColumn","sum","sumOtherColumn","item","DEFAULT_DATE_INTERVAL","DEFAULT_DATETIME_INTERVAL","isDateType","getGroupInterval","index","result","dateIntervals","interval","inArray","slice","push","isDefined","isArray","getFilterSelector","selector","displayField","getFilterExpressionByRange","endFilterValue","startFilterExpression","endFilterExpression","date","getHours","getMinutes","getSeconds","getMilliseconds","Date","getTime","setDate","getDate","getFilterExpressionForDate","dateStart","dateEnd","dateInterval","values","dateValue","isDate","getFullYear","getMonth","map","split","length","getFilterExpressionForNumber","startFilterValue","condition","defaultCalculateFilterExpression","isSearchByDisplayValue","apply","arguments","DATAGRID_SELECTION_DISABLED_CLASS","DATAGRID_GROUP_OPENED_CLASS","DATAGRID_GROUP_CLOSED_CLASS","DATAGRID_EXPAND_CLASS","NO_DATA_CLASS","SCROLLING_MODE_INFINITE","SCROLLING_MODE_VIRTUAL","LEGACY_SCROLLING_MODE","SCROLLING_MODE_OPTION","ROW_RENDERING_MODE_OPTION","DATE_INTERVAL_SELECTORS","year","month","day","quarter","Math","floor","hour","minute","second","getIntervalSelector","nameIntervalSelector","equalSelectors","selector1","selector2","isFunction","originalCallback","columnIndex","setEmptyText","$container","get","textContent","normalizeSortingInfo","sort","normalizeSortingInfoUtility","i","isExpanded","formatValue","valueText","formatHelper","toString","formatObject","getDisplayFormat","call","getSummaryText","columnCaption","getWidgetInstance","$element","editorData","dxComponents","widgetName","equalFilterParameters","filter1","filter2","toComparable","renderNoDataText","element","noDataClass","addWidgetPrefix","noDataElement","find","last","isVisible","_dataController","isEmpty","isLoading","addClass","appendTo","removeClass","_getNoDataText","renderLoadPanel","isLocalStore","loadPanelOptions","_loadPanel","remove","option","extend","_createComponent","LoadPanel","calculateLoadPanelPosition","$window","getWindow","getHeight","getIndexByKey","key","keyName","equalByValue","combineFilters","filters","operation","resultFilter","_filters$i","checkChanges","changeNames","changesWithChangeNamesCount","proxyMethod","methodName","defaultResult","_dataSource","getFormatOptionsByColumn","getDisplayValue","rowType","displayValueMap","getGroupRowSummaryText","summaryItems","getFormatByDataType","getHeaderFilterGroupParameters","remoteGrouping","sharedFiltering","each","bind","compare","equalSortParameters","sortParameters1","sortParameters2","ignoreIsExpanded","desc","getPointsByColumns","pointCreated","isVertical","startColumnIndex","cellsLength","notCreatePoint","eq","css","point","getBoundingRect","prevItemOffset","getExpandCellTemplate","allowRenderToDetachedContainer","render","isContinuation","row","isNewRow","rowsView","component","getView","setAria","localize","getSelectionRange","focusedElement","selectionStart","selectionEnd","e","setSelectionRange","selectionRange","focusAndSelectElement","isFocused","is","eventsEngine","isSelectTextOnEditingStart","editor","closest","when","_loadItemDeferred","done","select","getLastResizableColumnIndex","resultWidths","lastColumnIndex","hasResizableColumns","some","command","isElementInCurrentGrid","controller","$grid","getWidgetContainerClass","parent","isVirtualRowRendering","that","isVirtualMode","isAppendMode","getPixelRatio","window","devicePixelRatio","getContentHeightLimit","browser","mozilla","WIDGET_WITH_LEGACY_CONTAINER_NAME","ModuleItem","Class","_endUpdateCore","ctor","_updateLockCount","_actions","_actionConfigs","callbackNames","flags","callbackFlags","unique","syncStrategy","Callbacks","init","publicMethods","beginUpdate","endUpdate","optionCache","_optionCache","_silentOption","_setOptionWithoutOptionChange","messageLocalization","on","off","optionChanged","args","createAction","handled","getAction","actionName","$target","prefix","setAttribute","attr","getController","_controllers","config","action","_createAction","event","_createActionByOption","executeAction","dispose","empty","className","componentName","NAME","toLowerCase","containerName","Controller","ViewController","inherit","_views","getViews","View","_isReady","isReady","callBase","_requireReady","_requireRender","_requireResize","_$parent","_invalidate","requireResize","requireReady","hasWindow","_renderCore","_resizeCore","_parentElement","renderCompleted","resizeCompleted","_$element","getElementHeight","marginTop","parseFloat","marginBottom","offsetHeight","getTemplate","_getTemplate","$parent","toggleClass","fire","resize","isResizing","focus","MODULES_ORDER_MAX_INDEX","processModules","componentClass","modules","modulesOrder","controllerTypes","viewTypes","module1","module2","orderIndex1","orderIndex2","controllers","moduleName","views","errors","subclassOf","extenders","extender","createModuleItems","moduleTypes","moduleItems","moduleType","moduleItem","callModuleItemsMethod","registerModule","module","registerModulesOrder","moduleNames","unregisterModule","grep","_extends","gridCoreUtils","COLUMN_INDICATORS_CLASS","GROUP_PANEL_ITEM_CLASS","_applyColumnState","_that$component","columnAlignment","_getColumnAlignment","parameters","isGroupPanelItem","rootElement","hasClass","$indicatorsContainer","_createIndicatorContainer","$span","_getIndicatorClassName","columnsController","indicatorAlignment","getHeaderContentAlignment","indicator","_renderIndicator","noop","getDefaultAlignment","ignoreIndicatorAlignment","_getIndicatorContainer","$cell","_getIndicatorElements","$indicatorContainer","children","$indicator","append","_updateIndicators","indicatorName","getColumns","$cells","getColumnElements","_updateIndicator","rowOptions","cells","SCROLL_CONTAINER_CLASS","SCROLLABLE_SIMULATED_CLASS","GROUP_SPACE_CLASS","CONTENT_CLASS","TABLE_CLASS","TABLE_FIXED_CLASS","CONTENT_FIXED_CLASS","ROW_CLASS","GROUP_ROW_CLASS","DETAIL_ROW_CLASS","FILTER_ROW_CLASS","ERROR_ROW_CLASS","CELL_UPDATED_ANIMATION_CLASS","HIDDEN_COLUMNS_WIDTH","CELL_HINT_VISIBLE","FORM_FIELD_ITEM_CONTENT_CLASS","appendElementTemplate","content","subscribeToRowEvents","$table","touchTarget","touchCurrentTarget","timeoutId","clearTouchTargets","timeout","setTimeout","clearTimeout","currentTarget","clickEventName","dblclickEvent","pointerEvents","join","_isNativeClick","rowIndex","getRowIndex","rowElement","getPublicElement","_rowPointerDown","_rowClick","_rowDblClick","getWidthStyle","isNumeric","setCellWidth","cell","style","copyAttributes","newElement","oldAttributes","attributes","newAttributes","nodeName","hasAttribute","removeAttribute","nodeValue","ColumnsView","columnStateMixin","_createScrollableOptions","scrollingOptions","useNativeScrolling","bounceEnabled","useKeyboard","useSimulatedScrollbar","_updateCell","_cellPrepared","_createCell","domAdapter","textAlign","headerId","colspan","visibleWidth","_createRow","rowObject","tagName","concat","_isAltRow","dataIndex","_createTable","isAppend","_createColGroup","ctrlKey","preventDefault","$row","isDataRow","isHeaderRow","isGroupRow","isMasterDetailRow","isFilterRow","visibleColumns","_columnsController","getVisibleColumns","cellOptions","removeAttr","difference","scrollWidth","clientWidth","getOptions","$fieldItemContent","delegateTarget","resultOptions","cellElement","eventType","formItemOptions","getVisibleIndex","colgroupElement","j","_createCol","col","setWidth","renderDelayedTemplates","delayedTemplates","_delayedTemplates","syncTemplates","async","asyncTemplates","_renderDelayedTemplatesCore","_renderDelayedTemplatesCoreAsync","templates","isAsync","templateParameters","shift","doc","_processTemplate","renderingTemplate","isRenderer","model","resolve","renderedTemplate","nodeType","templateID","isString","_templatesCache","renderTemplate","templateDeferred","Deferred","templateOptions","onRendered","templateDeferreds","reject","promise","_getBodies","tableElement","not","_wrapRowIfNeed","hasDataRowTemplate","$tBodies","_tableElement","$tbody","_appendRow","appendTemplate","scrollLeft","_scrollLeft","scrollTo","$root","_renderTable","changeType","_renderRows","rows","_getRows","columnIndices","changeTypes","_renderRow","$wrappedRow","_renderCells","_addWatchMethod","_rowPrepared","_needRenderCell","indexOf","_renderCell","oldValue","oldValues","_updateCells","$rowElement","$newRowElement","$newCells","cellUpdatedClass","forEach","$newCell","replaceWith","_setCellAriaAttributes","columnIndexOffset","getColumnIndexOffset","ariaColIndex","_getCellOptions","_renderCellContent","appendChild","_getCellTemplate","isAltRow","source","watchers","watch","getter","updateValueFunc","updateRowFunc","watcher","newValue","JSON","stringify","splice","update","keepRow","elementData","_columnOptionChanged","optionNames","widths","iteratorUtils","setColumnWidths","getCellIndex","cellIndex","getTableElements","getTableElement","setTableElement","excludeValidators","category","afterExecute","_afterRowPrepared","columnsChanged","add","changed","_handleDataChanged","_updateScrollLeftPosition","pos","$scrollContainer","_wrapTableInScrollContainer","nativeScrolling","scrollChanged","_updateContent","$newTableElement","_findContentElement","_getWidths","$cellElements","offsetWidth","getBoundingClientRect","clientRect","getColumnWidths","$tableElement","$rows","isRowVisible","display","getVisibleColumnIndex","_ref","$cols","classList","querySelector","toFixed","getCellElements","_getCellElementsCore","_getRowElements","_getCellElement","columnIdentifier","columnVisibleIndex","_getVisibleColumnIndex","_getRowElement","$tableElements","_","getCellElement","getRowElement","elements","columnOption","getCell","cellPosition","getRowsCount","_getRowElementsCore","hasRowTemplate","tBodies","getName","setScrollerSpacing","paddingLeft","paddingRight","isScrollbarVisible","isHorizontal","getOuterWidth","getWidth","getOuterHeight","FOCUS_STATE_CLASS","FOCUS_DISABLED_CLASS","FOCUSED_ROW_SELECTOR","GRID_ROW_SELECTOR","GRID_CELL_SELECTOR","TREELIST_ROW_SELECTOR","TREELIST_CELL_SELECTOR","viewItemSelectorMap","columnHeaders","footer","isMouseDown","isHiddenFocusing","focusedElementInfo","processKeyDown","viewName","$mainElement","executeKeyDown","isHandled","fireKeyDownEvent","originalEvent","normalizeKeyName","saveFocusedElementInfo","selectView","ariaLabel","$activeElements","getActiveAccessibleElements","targetIndex","viewInstance","viewElement","$viewElement","findFocusedViewElement","viewSelectors","$focusViewElement","first","onDocumentVisibilityChange","visibilityState","subscribeVisibilityChange","unsubscribeVisibilityChange","hiddenFocus","registerKeyboardAction","getMainElement","keyDownHandler","mouseDownHandler","focusinHandler","needShowOverlay","restoreFocus","$targetElement","viewNames","keys","viewItemIndex","_viewName","setTabIndex","keyboardController","isKeyboardEnabled","accessibility","CELL_CONTENT_CLASS","HEADERS_CLASS","NOWRAP_CLASS","ROW_CLASS_SELECTOR","HEADER_ROW_CLASS","COLUMN_LINES_CLASS","CONTEXT_MENU_SORT_ASC_ICON","CONTEXT_MENU_SORT_DESC_ICON","CONTEXT_MENU_SORT_NONE_ICON","CELL_FOCUS_DISABLED_CLASS","VISIBILITY_HIDDEN_CLASS","TEXT_CONTENT_ALIGNMENT_CLASS_PREFIX","SORT_INDICATOR_CLASS","SORT_INDEX_INDICATOR_CLASS","HEADER_FILTER_CLASS_SELECTOR","HEADER_FILTER_INDICATOR_CLASS","MULTI_ROW_HEADER_CLASS","columnHeadersModule","defaultOptions","columnHeadersView","createCellContent","$cellContent","addCssClassesToCellContent","contentAlignment","$indicatorElements","$visibleIndicatorElements","indicatorCount","sortIndicatorClassName","sortIndexIndicatorClassName","$sortIndicator","$sortIndexIndicator","shiftKey","_isLegacyKeyboardNavigation","_getDefaultTemplate","$content","_getHeaderTemplate","resultTemplate","_isGroupingChanged","_handleActionKeyDown","_lastActionElement","headerFilterController","$column","getColumnIndexByElement","showHeaderFilterMenu","_processHeaderAction","isLoaded","_hasRowElements","getRowCount","_getRowVisibleColumns","$cellElement","rowspan","rowCount","groupExpanding","_isElementVisible","elementOptions","_alignCaptionByCenter","clone","insertBefore","$indicatorElement","returnAll","_isSortableElement","getHeadersRowHeight","$headerRows","toArray","reduce","headerRow","getHeaderElement","columnElements","bandColumnIndex","getChildrenByBandColumn","$columnElements","allowDragging","sourceLocation","draggingPanels","draggableColumnCount","canHideColumn","allowDrag","isColumnOptionUsed","draggingPanel","getColumnCount","getContextMenuItems","sortingOptions","onItemClick","params","changeSortOrder","itemData","setRowsOpacity","columnID","setColumnOpacity","gridCore","USER_STATE_FIELD_NAMES_15_1","USER_STATE_FIELD_NAMES","IGNORE_COLUMN_OPTION_NAMES","bestFitWidth","bufferedFilterValue","COMMAND_EXPAND_CLASS","GROUP_COMMAND_COLUMN_NAME","regExp","globalColumnId","columnsControllerModule","commonColumnSettings","adaptColumnWidthByRatio","regenerateColumnsByVisibleItems","DEFAULT_COLUMN_OPTIONS","DATATYPE_OPERATIONS","number","string","datetime","COLUMN_INDEX_OPTIONS","setFilterOperationsAsDefaultValues","defaultFilterOperations","createColumn","columnOptions","userStateColumnOptions","bandColumn","commonColumnOptions","setName","deepExtendArraySafe","getCommonSettings","calculatedColumnOptions","_createCalculatedColumnOptions","createColumnsFromOptions","columnsOptions","_columnsUserState","checkUserStateColumn","hasColumns","getParentBandColumns","columnParentByIndex","unshift","_getChildrenByBandColumn","columnChildrenByIndex","recursive","getColumnFullPath","bandColumnsCache","getBandColumnsCache","callbackFilter","isPlain","_columns","calculateColspan","getValueDataType","getSerializationFormat","dateSerialization","updateSerializers","deserializeValue","serializeValue","serializationFormat","parsedValue","isNaN","customizeTextForBooleanDataType","getCustomizeTextByDataType","updateColumnIndexes","isObject","_commandColumns","updateColumnGroupIndexes","currentColumn","normalizeIndexes","getColumnIndexByVisibleIndex","getGroupColumns","getChooserColumns","userStateColumn","applyUserState","userStateColumnIndex","columnsUserState","ignoreColumnOptionNames","_ignoreColumnOptionNames","columnCountById","resultColumns","allColumnsHaveState","userStateColumnIndexes","applyFieldsState","fieldName","defaultSelectedFilterOperation","findUserStateColumn","id","_hasUserState","initialIndex","hasAddedBands","columnUserState","added","assignColumns","updateIndexes","isSortOrderValid","resetBandColumnsCache","bandColumns","parentBandColumns","resetColumnsCache","updateColumnDataTypes","updateColumnChanges","columnChanges","_columnChanges","fireColumnsChanged","onColumnsChanging","reinitOptionNames","isInitialized","reinit","updateSortOrderWhenGrouping","prevGroupIndex","columnWasGrouped","lastSortOrder","sortMode","sortedByAnotherColumn","fireOptionChanged","prevValue","fullOptionName","fullOptionPath","_skipProcessingColumnsChange","_notifyOptionChanged","columnOptionCore","notFireEvent","initialColumn","optionGetter","compileGetter","functionsAsIs","optionSetter","compileSetter","_checkColumns","getColumnByPath","defaultSetCellValue","path","dotCount","isCustomCommandColumn","commandColumn","getFixedPosition","processExpandColumns","expandColumns","customColumnIndex","expandColumnsByType","expandColumn","numberToString","digitsCount","str","mergeColumns","commandColumns","needToExtend","commandColumnIndex","isColumnFixing","_isColumnFixing","defaultCommandColumns","getCommandColumnIndex","columnType","isColumnFixed","_bandColumnsCache","findColumn","identifier","identifierOptionName","substr","_getExpandColumnOptions","_getFirstItems","groupsCount","getFirstItemsCore","childItems","collapsedItems","_isColumnsFromOptions","addCommandColumn","_dataSourceApplied","applyDataSource","columnIndexes","replace","parseInt","needUpdateRequireResize","previousValue","fullName","_updateRequireResize","columnOptionValue","columnOptionName","forceApplying","isDataSourceLoaded","_dataSourceColumnsCount","columnsFromDataSource","firstItems","processedFields","variableWrapper","updateColumns","isAllDataTypesDefined","reset","_visibleColumns","_fixedColumns","_rowCount","getUserState","isDataSourceApplied","groupingOptions","groupPanelOptions","checkSerializers","defaultCalculateCellValue","isBandColumnsUsed","_getVisibleColumnsCore","getFixedColumns","_getFixedColumnsCore","getFilteringColumns","notFixedColumnCount","transparentColumnIndex","lastFixedPosition","transparentColumn","transparentColspan","prevColumn","newColumn","_getExpandColumnsCore","getExpandColumns","firstGroupColumn","isFixedFirstGroupColumn","parentIndex","_isColumnVisible","isParentColumnVisible","isFixedToEnd","rowspanGroupColumns","rowspanExpandColumns","positiveIndexedColumns","negativeIndexedColumns","notGroupedColumnsCount","columnDigitsCount","indexedColumns","orderEach","firstPositiveIndexColumn","columnsByFixing","columnsByVisibleIndex","getDataColumns","bandColumnID","getInvisibleColumns","hiddenColumnsByBand","getAllColumns","columnChooserColumns","sign","column1","column2","caption1","caption2","localeCompare","allowMoveColumn","fromVisibleIndex","toVisibleIndex","targetLocation","sourceColumn","moveColumn","targetGroupIndex","fromIndex","toIndex","groupColumns","targetColumn","sortingMode","needResetSorting","getSortDataSourceParameters","useLocalSelector","sortColumns","sortItem","getGroupDataSourceParameters","refresh","updateNewLookupsOnly","deferreds","valueMap","_updateColumnOptions","calculateCallbackName","calculateCallback","context","isRTL","isColumnDataTypesUpdated","lookupDataType","valueDataType","_customizeColumns","hasOwnerBand","updateSortingGrouping","sortParameters","groupParameters","filterParameters","lastLoadOptions","always","_updateChanges","dataController","getCombinedFilter","fromDataSource","isColumnsChanged","updateSortGroupParameterIndexes","indexParameterName","columnsGroupParameters","columnsSortParameters","groupingChanged","groupExpandingChanged","updateFilter","remoteFiltering","forceIsoDateParsing","columnCount","clearSorting","clearGrouping","getVisibleIndexByColumn","visibleColumn","addColumn","deleteColumn","childIndexes","handleStateField","setUserState","state","isFilterPanelHidden","usedNames","hasEditableColumnWithoutName","duplicatedNames","_column$columns","isEditable","captionize","skipDeserialization","parseValue","numberLocalization","formattedValue","formattedValueWithDefaultFormat","dateLocalization","filterUtils","createFilterExpression","userDataType","updateValueMap","calculateValue","displayValue","isPlainObject","Store","dataSourceOptions","normalizeDataSourceOptions","paginate","DataSource","load","resizedCallbacks","defaultOptionName","charAt","toUpperCase","parents","invisibleParents","alwaysGetRowIndex","onlyVisibleDirectChildren","isParentBandColumn","getColumnId","cloneItems","groupCount","calculateOperationTypes","loadOptions","isFullReload","operationTypes","reload","fullReload","groupExpand","skip","take","getPageDataFromCache","updatePaging","storeLoadOptions","fillItemsFromCache","cacheItemsFromBegin","cacheItemBeginCount","cacheItemsFromEnd","_options$skip2","_options$take2","cacheItemEndCount","cachedDataPartBegin","cachedDataPartEnd","reverse","fromEnd","_options$take","_options$cachedData","cachedItems","cachedData","_ref2","_options$skip","localIndex","cacheItemIndex","cacheItem","getItemFromCache","skips","takes","getGroupItemFromCache","isContinuationOnNextPage","childCacheItem","getCacheItem","loadedItem","globalIndex","childSkips","_remoteOperations","_isLastPage","isLastPage","_hasLastPage","_currentTotalCount","_cachedData","_lastOperationTypes","_eventsStrategy","_totalCountCorrection","_isLoadingAll","loadingChanged","loadError","customizeStoreLoadOptions","changing","pushed","_dataChangedHandler","_customizeStoreLoadOptionsHandler","_handleCustomizeStoreLoadOptions","_dataLoadedHandler","_handleDataLoaded","_loadingChangedHandler","_handleLoadingChanged","_loadErrorHandler","_handleLoadError","_pushHandler","_handlePush","_changingHandler","_handleChanging","store","memberName","member","isSharedDataSource","resetCurrentTotalCount","resetCache","_cachedStoreData","_cachedPagingData","resetPagesCache","_needClearStoreDataCache","_lastLoadOptions","isLocalOperations","every","operationName","fromStore","applyBatch","keyInfo","_applyBatch","getDataIndexGetter","_dataIndexGetter","indexByKey","storeData","isCacheUpdated","getKeyHash","keyOf","_getKeyInfo","totalCount","getItemCount","itemsCount","oldItemCount","_items","useInsertIndex","_ref5","_needCleanCacheByOperation","operationType","operationTypesByOrder","operationTypeIndex","currentOperationTypes","_customizeRemoteOperations","cachedStoreData","cachedPagingData","isCustomLoading","_options$data","_handleDataLoading","originalStoreLoadOptions","_isRefreshing","isRefreshing","_loadingOperationTypes","_isRefreshed","_lastOperationId","operationId","fail","_handleDataLoadingCore","cachedExtra","extra","localLoadOptionNames","requireTotalCount","optionValue","localPaging","needCache","needPageCache","needPagingCache","needStoreCache","mergeStoreLoadData","ArrayStore","error","_handleDataLoadedCore","_ref3","_options$skip3","_ref4","_options$take3","cacheItems","_loadPageSize","currentTotalCount","isDataLoading","pageCount","_operationTypes","_scheduleCustomLoadCallbacks","_isCustomLoading","loadingOperationTypes","totalCountCorrection","totalItemsCount","ceil","hasKnownLastPage","loadFromStore","d","dataSourceLoadOptions","loadResult","_customLoadOptions","isLoadingAll","_scheduleLoadCallbacks","executeAsync","fireEvent","full","getCachedStoreData","dataSourceAdapterType","DataSourceAdapter","create","dataControllerModule","loadingTimeout","include","DataHelperMixin","changePaging","_getPagingOptionValue","_skipProcessingPagingChange","pageChanged","members","_cachedProcessedItems","_currentOperationTypes","_columnsChangedHandler","_handleColumnsChanged","_dataPushedHandler","_handleDataPushed","_isLoading","_repaintChangesOnly","_changes","dataErrorOccurred","_refreshDataSource","stopOnFalse","_this$_dataSource","isValueChanged","_array","isParasiteChange","_setPagingOptions","_useSortingGroupingFromColumns","getDataSource","returnDataField","combinedFilter","additionalFilter","_calculateAdditionalFilter","waitReady","_readyDeferred","updateItems","_storeLoadOptions$fil","_columnsUpdating","filterApplied","_applyFilter","_needApplyFilter","updateItemsHandler","virtualColumnsScrolling","isAsyncDataSourceApplying","_isDataSourceApplying","isDelayed","needApplyFilter","_isAllDataTypesDefined","_fireLoadingChanged","fireError","pagingEnabled","scrollingMode","appendMode","virtualMode","isChanged","_getSpecificDataSourceOption","_initDataSource","oldDataSource","setDataSource","_loadDataSource","_beforeProcessItems","getRowIndexDelta","_processItems","rowIndexDelta","visibleItems","lastVisibleItem","_processItem","_generateDataItem","_processDataItem","dataItem","generateDataValues","isModified","_applyChange","_applyChangeUpdate","_applyChangesOnly","_applyChangeFull","_getRowIndices","rowIndices","a","b","correctedRowIndex","allowInvisibleRowIndices","prevIndex","rowIndexCorrection","equalItems","item1","item2","strict","isEditing","oldItem","oldNextItem","newItem","newNextItem","isFullUpdate","_partialUpdateRow","_isCellChanged","oldRow","newRow","visibleRowIndex","isLiveUpdate","isCellModified","modifiedValues","_getChangedColumnIndices","_cell$column","_changedColumnIndices","changedColumnIndices","isCellChanged","_isItemEquals","_item1$data","_item2$data","_item1$data2","_item2$data2","expandedMatch","summaryCellsMatch","summaryCells","continuationMatch","newIndexByKey","getRowKey","currentItems","oldItems","findChanges","_correctRowIndices","oldRowIndexOffset","_rowIndexOffset","rowIndexOffset","getRowIndexOffset","newVisibleRowIndex","_afterProcessItems","_updateItemsCore","cachedProcessedItems","useProcessedItemsCache","loadIndex","getVisibleRows","isDataChanged","needUpdateDimensions","_needUpdateDimensions","_fireChanged","deferRender","_loadingText","_isFilterApplying","resetFilterApplying","filterExpr","prototype","filterName","clearColumnOption","searchByText","_fireDataSourceChanged","changedHandler","dataSourceChanged","_getDataSourceAdapter","_createDataSourceAdapterCore","dataSourceAdapterProvider","dataSourceAdapter","isCustomStore","CustomStore","_createDataSourceAdapter","enabledRemoteOperations","cancelAll","_isSharedDataSource","loadAll","getKeyByRowIndex","byLoaded","getRowIndexByKey","byKey","getDataByKeys","rowKeys","keyData","beginCustomLoading","messageText","endCustomLoading","changesOnly","customizeLoadResult","_disposeDataSource","repaintRows","rowIndexes","skipProcessingPagingChange","searchText","isLastPageLoaded","DataController","SORT_CLASS","SORT_NONE_CLASS","SORTUP_CLASS","SORTDOWN_CLASS","SORT_INDEX_CLASS","SORT_INDEX_ICON_CLASS","HEADERS_ACTION_CLASS","ariaSortState","isSortingAllowed","hasSeveralSortIndexes","prepend","COLUMN_HEADERS_VIEW_NAMESPACE","ColumnHeadersViewSortingExtender","sortingMixin","addNamespace","$cellElementFromEvent","editingController","editingMode","isCellEditing","isCommandKeyPressed","HeaderPanelSortingExtender","_createGroupPanelItem","$rootElement","$item","_processGroupItemAction","groupColumnIndex","sortingModule","headerPanel","ROWS_VIEW_CLASS","GROUP_CELL_CLASS","DATA_ROW_CLASS","FREE_SPACE_CLASS","ROW_LINES_CLASS","ROW_ALTERNATION_CLASS","LAST_ROW_BORDER","EMPTY_CLASS","ROW_INSERTED_ANIMATION_CLASS","LOADPANEL_HIDE_TIMEOUT","getMaxHorizontalScrollOffset","scrollable","round","rowsModule","defaultCellTemplate","isDataTextEmpty","innerHTML","_getDefaultGroupTemplate","_update","isGroup","isRowExpanded","_setAriaRowIndex","isPagerMode","arg","deep","skipImmediate","removeEvent","_renderScrollable","force","_renderLoadPanel","getScrollable","allColumnsHasWidth","_hasHeight","_renderScrollableCore","_handleScroll","isNativeScrolling","_scrollTop","scrollOffset","_scrollRight","dxScrollableOptions","scrollHandler","onScroll","_scrollable","Scrollable","_scrollableContainer","_renderContent","contentElement","newTableElement","executors","rowInsertedClass","$rowsElement","toggle","insertAfter","prependTo","_createEmptyRow","isFixed","_appendEmptyRow","$emptyRow","isTableContainer","$colgroup","_renderFreeSpaceRow","$freeSpaceRowElement","_checkRowKeys","_needUpdateRowHeight","_rowHeight","_getRowsHeight","$rowElements","_updateRowHeight","rowsHeight","_getFreeSpaceRowElements","tableElements","evaluate","expr","_getColumnsCountBeforeGroups","_getGroupCellOptions","columnsCountBeforeGroups","_renderGroupedCells","groupCellOptions","groupColumnAlignment","updateFreeSpaceRowHeight","_renderDataRowByTemplate","resizeCompletedHandler","scrollableInstance","document","_visibilityChanged","_lastColumnWidths","groupingTextsOptions","_setRowsOpacityCore","_getDevicePixelRatio","getCellOptions","getRow","itemCount","freeSpaceRowElements","isFreeSpaceRowVisible","deferUpdate","scrollbarWidth","getScrollbarWidth","elementHeightWithoutScrollbar","contentHeight","showFreeSpaceRow","borderTopWidth","heightCorrection","_getHeightCorrection","resultHeight","_updateLastRowBorder","freeSpaceRowCount","setHeight","isZoomedWebkit","isChromeLatest","hasExtraBorderTop","_fireColumnResizedCallbacks","_editorFactoryController","setLoading","contentWidth","scrollableContainer","clientHeight","lastColumnWidths","columnWidths","_updateScrollable","dxScrollable","_updateHorizontalScrollPosition","maxHorizontalScrollOffset","scrollRight","_height","hasHeight","visibilityOptions","_hideLoadingTimeoutID","groupCellIndex","_getBoundaryVisibleItemIndex","isTop","isFloor","itemIndex","prevOffset","viewportBoundary","$contentElement","contentElementOffsetTop","rowElements","outerHeight","getTopVisibleItemIndex","getBottomVisibleItemIndex","getTopVisibleRowData","_scrollToElement","scrollToElement","_restoreErrorRow","CONTEXT_MENU","footerView","VIEW_NAMES","ContextMenuController","dxEvent","$targetRowElement","$targetCellElement","menuItems","view","_rowOptions$cells","targetElement","_contextMenuPrepared","ContextMenuView","ContextMenu","onPositioning","actionArgs","contextMenuInstance","stopPropagation","contextMenuModule","contextMenu","contextMenuView","treeListCore","ERROR_MESSAGE_CLASS","ERROR_CLOSEBUTTON_CLASS","ACTION_CLASS","ErrorHandlingController","_columnHeadersView","_rowsView","_createErrorRow","$errorRow","$closeButton","$errorMessage","_renderErrorMessage","errorRowIndex","removeErrorRow","fireContentReadyAction","role","url","$message","renderErrorRow","$popupContent","$errorMessageElement","$firstErrorRow","next","resizingController","$columnHeaders","$rowsViewElement","errorHandlingModule","errorHandling","errorHandlingController","hasChanges","BORDERS_CLASS","IMPORTANT_MARGIN_CLASS","GRIDBASE_CONTAINER_CLASS","isPercentWidth","isPixelWidth","getContainerHeight","paddingTop","paddingBottom","calculateFreeWidth","totalWidth","_getTotalWidth","calculateFreeWidthWithCurrentMinWidth","currentMinWidth","ResizingController","_initPostRenderHandlers","_refreshSizesHandler","_refreshSizes","resizeDeferred","_e$changeTypes","_setScrollerSpacing","_setAriaRowColCount","_fireContentReadyAction","_getBestFitWidths","_widths","_rowsView$getTableEle","headersTableElement","_setVisibleWidths","columnId","_toggleBestFitModeForView","isBestFit","$rowsTables","$viewTables","$tableBody","$rowsTable","$viewTable","_toggleBestFitMode","$rowsFixedTable","_footerView","_toggleContentMinHeight","_needStretch","_synchronizeColumns","resetBestFitMode","needBestFit","_needBestFit","hasMinWidth","isColumnWidthsCorrected","_maxWidth","isFocusOutsideWindow","bottom","_correctColumnWidths","expandColumnWidth","_processStretch","c","_getAverageColumnsWidth","freeWidth","columnCountWithoutWidth","hasPercentWidth","hasAutoWidth","hasWidth","_hasWidth","_loop","isHiddenColumn","averageColumnsWidth","realColumnWidth","_getRealColumnWidth","borderWidth","getInnerWidth","resultSizes","groupSize","tableSize","unusedIndexes","diff","diffElement","onePixelElementsCount","groupWidth","ratio","percentTotalWidth","pixelTotalWidth","freeSpace","percentTotalWidthInPixel","updateSize","$groupElement","importantMarginClass","detach","updateDimensions","checkSize","_checkSize","prevResult","_resizeDeferred","_resetGroupElementHeight","_updateDimensionsCore","groupElement","scrollTop","_lastWidth","_lastHeight","_devicePixelRatio","_setScrollerSpacingCore","vScrollbarWidth","hScrollbarWidth","$testDiv","rootElementHeight","maxHeightHappened","editorFactory","isMaxHeightApplied","scrollHeight","_updateLastSizes","_renderDimensions","SynchronizeScrollingController","_scrollChangedHandler","GridView","_resizingController","_getWidgetAriaLabel","_groupElement","_renderViews","_getTableRoleName","isFirstRender","_rootElement","gridViewModule","resizing","synchronizeScrolling","gridView","HEADER_PANEL_CLASS","TOOLBAR_BUTTON_CLASS","TOOLBAR_ARIA_LABEL","HeaderPanel","_getToolbarItems","_getButtonContainer","_getToolbarButtonClass","specificClass","secondClass","_getToolbarOptions","userToolbarOptions","toolbarOptions","onItemRendered","itemRenderedCallback","userItems","_normalizeToolbarItems","defaultItems","defaultProps","defaultButtonsByNames","normalizedItems","needHideButton","_toolbar","_toolbarOptions","$headerPanel","$toolbar","Toolbar","setToolbarItemDisabled","toolbarInstance","itemOptionPrefix","updateToolbarDimensions","_this$_toolbar","getHeaderPanel","parts","getPathParts","normalizedItem","headerPanelModule","DATAGRID_ROW_SELECTOR","DATAGRID_DEPRECATED_TEMPLATE_WARNING","DataGrid","Widget","_activeStateUnit","_getDefaultOptions","_setDeprecatedOptions","_deprecatedOptions","since","alias","_defaultOptionsRules","device","platform","isMaterial","_device","deviceType","_init","_clean","_optionChanged","_dimensionChanged","_initMarkup","_renderContentImpl","templateName","logger","_dispose","registerComponent","DATE_REGEX","parseDates","exec","UTC","StateStoringController","getStorage","storage","sessionStorage","localStorage","Error","getUniqueStorageKey","_loadState","parse","getItem","_saveState","setItem","isEnabled","_state","_isLoaded","_windowUnloadHandler","_savingTimeoutID","fromPromise","isEmptyObject","save","getDataState","pagerView","getPageSizes","processLoadState","selectionController","exportController","updateState","selectionChanged","_initialPageSize","_initialFilterValue","selectionOnlyChanged","exportSelectionOnly","selectionOnly","DEFAULT_FILTER_VALUE","getFilterValue","filterSyncController","hasFilterState","getFilterValueFromColumns","stateStoringModule","stateLoaded","isStateLoading","applyState","oldState","newState","oldStateHash","newStateHash","isVirtualScrollingMode","stateStoringController","_restoreStateTimeoutID","_fireSelectionChanged","isDeferredSelection","EDITOR_CELL_CLASS","ROW_SELECTION_CLASS","SELECT_CHECKBOX_CLASS","CHECKBOXES_HIDDEN_CLASS","COMMAND_SELECT_CLASS","SELECTION_DISABLED_CLASS","SHOW_CHECKBOXES_MODE","SELECTION_MODE","processLongTap","isSelectionWithCheckboxes","stopSelectionWithCheckboxes","startSelectionWithCheckboxes","changeItemSelection","control","SelectionController","selectionCellTemplate","isRowSelected","renderSelectCheckBoxContainer","selectionHeaderTemplate","_renderSelectAllCheckBox","_attachSelectAllCheckBoxClickEvent","_selectionMode","_isSelectionWithCheckboxes","_selection","_createSelection","_updateSelectColumn","removedKeys","deselectRows","_getSelectionConfig","selectionOptions","virtualPaging","legacyScrollingMode","selectedKeys","ignoreDisabledItems","allowLoadByRange","hasGroupColumns","dataFields","_dataController$dataS","_dataController$dataS2","plainItems","isItemSelected","selected","isSelectableItem","getItemData","oldData","getLoadOptions","loadItemIndex","focusedItemIndex","shiftItemIndex","_dataController$dataS3","_dataController$dataS4","minIndex","maxIndex","_updateSelectedItems","isSelectColumnVisible","Selection","argument","_updateCheckboxesState","isDeferredMode","selectedItemKeys","removedItemKeys","keyIndex","isComplexKey","selectionChangedOptions","changedItemIndexes","getChangedItemIndexes","itemIndexes","addedItemKeys","_selectedItemsInternalChange","selectedRowsData","selectedItems","currentSelectedRowKeys","currentDeselectedRowKeys","isDataItem","isSelected","oldSelectionMode","selectionMode","selectRows","_isOnePageSelectAll","isSelectAll","getSelectAllState","selectAll","deselectAll","clearSelection","preserve","isDeselect","getSelectedRowKeys","getSelectedItemKeys","selectRowsByIndexes","indexes","getSelectedRowsData","getSelectedItems","visibleItemIndex","loadedItemIndex","_focusedItemIndex","selectionModule","hasSelectColumn","currentItem","isUpdateSelection","_updateSelectAllValue","$editor","selectAllValue","hasSelection","dxCheckBox","isEmptyData","createEditor","parentType","setValue","_attachCheckBoxClickEvent","_renderSelectCheckBox","_e$event","_updateCheckboxesClass","touch","holdEvent","isSelectionDisabled","isClickableElement","isCommandSelect","isCheckBoxesHidden","COLUMN_CHOOSER_CLASS","COLUMN_CHOOSER_BUTTON_CLASS","NOTOUCH_ACTION_CLASS","COLUMN_CHOOSER_LIST_CLASS","COLUMN_CHOOSER_PLAIN_CLASS","COLUMN_CHOOSER_DRAG_CLASS","COLUMN_CHOOSER_SELECT_CLASS","COLUMN_CHOOSER_ICON_NAME","COLUMN_CHOOSER_ITEM_CLASS","TREEVIEW_NODE_SELECTOR","CHECKBOX_SELECTOR","CLICK_TIMEOUT","processItems","chooserColumns","isSelectMode","expanded","disableCheckBox","parentId","ColumnChooserController","renderShowColumnChooserButton","$columnChooserButton","columnChooserButtonClass","columnChooserEnabled","$showColumnChooserButton","Button","showColumnChooser","integrationOptions","getPosition","ColumnChooserView","_isWinDevice","devices","win","_updateList","_popupContainer","columnChooserList","_columnChooserList","selectItem","unselectItem","$wrapper","_renderTreeView","_initializePopupContainer","columnChooserOptions","themeName","current","isGenericTheme","isGeneric","isMaterialTheme","dxPopupOptions","_ignoreCopyRootClassesToWrapperDeprecation","shortcut","Popup","treeViewConfig","dataStructure","itemTemplate","rootValue","searchEnabled","$checkBox","$treeViewNode","itemElement","checkBoxInstance","_prepareSelectModeConfig","_prepareDragModeConfig","searchValue","TreeView","selectNodesRecursive","onItemSelectionChanged","isLastColumnUnselected","needPartialRender","needFullRender","all","$node","$nodes","columnVisible","isColumnChooserVisible","$overlayContent","right","hideColumnChooser","popupContainer","columnChooserModule","columnChooserView","_appendColumnChooserItem","hintText","columnChooserMode","isMoveColumnDisallowed","createOffsetFilter","lastLevelOnly","groups","filterElement","currentFilter","GroupingHelper","findGroupInfoByKey","groupsInfo","hash","getGroupInfoIndexByOffset","leftIndex","rightIndex","middleIndex","_groupsInfo","updateTotalItemsCount","isGroupItemCountable","_isVirtualPaging","calculateItemsCount","foreachGroups","callback","childrenAtFirst","foreachCollapsedGroups","updateOffsets","updateParentOffsets","foreachGroupsCore","callbackResults","executeCallback","callbackResult","pop","currentParents","_updateGroupInfoOffsets","groupInfo","findGroupInfo","pathIndex","addGroupInfo","groupInfoData","allowCollapseAll","oldGroups","_group","cleanGroupsInfo","handleDataLoading","handleDataLoaded","handleDataLoadedCore","createGroupFilter","loadTotalCount","GroupingHelperCore","correctSkipLoadOption","skipCorrection","resultSkip","pathEquals","path1","path2","keysEqual","updateGroupOffsets","additionalGroupInfo","getGroupCount","collapsedGroups","collapsedItemsCount","skipFirstItem","dataGridCore","sorts","storeHelper","appendCollapsedPath","collapsedGroup","keyValue","pathValue","query","dataQuery","enumerate","groupedData","processGroupItems","removeLastItemsCount","needRemoveFirstItem","offsetInfo","itemsCountCorrection","changeRowExpand","groupCountQuery","beginPageIndex","dataSourceItems","groupOffsetQuery","getContinuationGroupCount","groupOffset","pageOffset","foreachExpandedGroups","updateGroups","expandedInfo","isLastGroupExpanded","paths","lastCount","updateGroupInfoItem","isLastGroupLevel","_isGroupExpanded","updateGroupInfos","loadedGroupCount","remotePaging","isGroupExpanded","getTotalOffset","groupInfos","totalOffset","childrenTotalCount","applyContinuationToGroupItem","groupLevel","expandedItemIndex","isLastExpandedItem","isFirstExpandedItem","lastExpandedItemSkip","isItemsTruncatedByTake","isDataDeferred","makeDataDeferred","loadGroupItems","currentGroupCount","currentGroupIndex","currentGroup","requireGroupCount","groupSummary","expandedFilters","expandedPath","isPagingLocal","isLastLevelGroupItemsPagingLocal","sortLastLevelGroupItems","expandedItems","loadGroupTotalCount","isGrouping","isFinite","dataErrors","isVirtualPaging","_updatePagingOptions","skipChildrenTotalCount","takeCorrection","parentTakeCorrection","continuationGroupCount","skipContinuationGroupCount","groupInfoCount","childrenGroupInfoCount","remoteGroupPaging","isLastGroup","_processPaging","_processSkips","firstItem","_processTakes","lastItem","maxTakeCount","handleGroup","DATAGRID_GROUP_PANEL_CLASS","DATAGRID_GROUP_PANEL_MESSAGE_CLASS","DATAGRID_GROUP_PANEL_ITEM_CLASS","DATAGRID_GROUP_PANEL_LABEL_CLASS","DATAGRID_GROUP_ROW_CLASS","GroupingDataSourceAdapterExtender","_initGroupingHelper","_grouping","isAutoExpandAll","isFocusedRowEnabled","isODataRemoteOperations","ExpandedGroupingHelper","CollapsedGroupingHelper","collapseAll","_collapseExpandAll","expandAll","isExpand","beginLoading","_changeRowExpandCore","endLoading","_hasGroupLevelsExpandState","GroupingDataControllerExtender","_processGroupItems","_processGroupItem","groupedColumns","collectContinuationItems","resultItems","expandRow","collapseRow","onGroupingMenuItemClick","GroupingHeaderPanelExtender","_appendGroupingItem","_isGroupPanelVisible","isRendered","$groupPanel","_updateGroupPanelContent","_renderGroupPanelItems","$groupPanelItem","$toolbarElement","$groupedColumnElement","isGroupingAllowed","isColumnGrouped","GroupingRowsViewExtender","isGroupRowStateChanged","isExpandButtonClicked","_changeGroupRowState","columnHeadersViewExtender","beginGroup","_isProcessedItem","MASTER_DETAIL_CELL_CLASS","MASTER_DETAIL_ROW_CLASS","masterDetailModule","initMasterDetail","_expandedItems","_isExpandAll","expandIndex","_getRowIndicesForExpand","detailColumnIndex","isEnabledChanged","isAutoExpandAllChanged","_updateParentDataGrids","$masterDetailRow","_updateMasterDataGrid","$detailElement","masterRowOptions","masterDataGrid","isFixedColumns","_updateFixedMasterDetailGrids","masterRowIndex","$tables","rowsNotEqual","tablesNotEqual","detailElementWidth","isDetailHorizontalScrollCanBeShown","isDetailGridWidthChanged","isEditRow","_isDetailRow","$detailCell","isWrapped","CHECKBOX_SIZE_CLASS","EDITOR_INLINE_BLOCK","EditorFactoryMixin","getResultConfig","inputAttr","checkEnterBug","ios","getTextEditorConfig","isEnterBug","sharedData","needDelayedUpdate","isInputOrKeyUpEvent","updateValue","valueChangeTimeout","updateValueTimeout","_input","valueChangeEvent","prepareBooleanEditor","prepareSelectBox","editorName","displayGetter","postProcess","selectBox","stopWatch","searchExpr","showClearButton","editorElement","blur","isSearching","isOnForm","showValidationMark","$editorElement","dateBox","dxDateBox","defaultEnterKeyHandler","_supportedKeys","enter","registerKeyHandler","dxTextArea","FOCUS_OVERLAY_CLASS","FOCUSED_ELEMENT_CLASS","MODULE_NAMESPACE","UPDATE_FOCUS_EVENTS","DX_HIDDEN","EditorFactory","_getFocusedElement","$dataGridElement","rowSelector","focusedElementSelector","_getFocusCellSelector","_updateFocusCore","$focusCell","hideBorders","$focus","_$focusedElement","loseFocus","_updateFocus","isFocusOverlay","_isFocusOverlay","_updateFocusTimeoutID","_updateFocusOverlaySize","positionUtils","h","oversize","setOuterWidth","v","setOuterHeight","hideBorder","_focusTimeoutID","renderFocusOverlay","focused","refocus","_$focusOverlay","align","elemCoord","focusOverlayPosition","precise","$focusedElement","_updateFocusHandler","_attachContainerEventHandlers","editorFactoryModule","DEFAULT_BUTTON","DX_DIALOG_CLASSNAME","DX_DIALOG_WRAPPER_CLASSNAME","DX_DIALOG_ROOT_CLASSNAME","DX_DIALOG_CONTENT_CLASSNAME","DX_DIALOG_MESSAGE_CLASSNAME","DX_DIALOG_BUTTONS_CLASSNAME","DX_DIALOG_BUTTON_CLASSNAME","DX_BUTTON_CLASSNAME","FakeDialogComponent","Component","custom","_options$title","getViewport","isMessageDefined","isMessageHtmlDefined","messageHtml","popupToolbarItems","Action","popupInstance","android","execute","ensureDefined","ignoreChildEvents","bottomToolbar","resetActiveElement","$firstButton","popupOptions","isPortrait","confirm","ROW_SELECTED_CLASS","EDIT_FORM_CLASS","DATA_EDIT_DATA_INSERT_TYPE","DATA_EDIT_DATA_REMOVE_TYPE","EDITING_POPUP_OPTION_NAME","EDITING_FORM_OPTION_NAME","EDITING_EDITROWKEY_OPTION_NAME","EDITING_EDITCOLUMNNAME_OPTION_NAME","TARGET_COMPONENT_NAME","EDITORS_INPUT_SELECTOR","FOCUSABLE_ELEMENT_SELECTOR","EDIT_MODE_BATCH","EDIT_MODE_ROW","EDIT_MODE_CELL","EDIT_MODE_FORM","EDIT_MODE_POPUP","FIRST_NEW_ROW_POSITION","LAST_NEW_ROW_POSITION","PAGE_BOTTOM_NEW_ROW_POSITION","PAGE_TOP_NEW_ROW_POSITION","VIEWPORT_BOTTOM_NEW_ROW_POSITION","VIEWPORT_TOP_NEW_ROW_POSITION","EDIT_MODES","ROW_BASED_MODES","MODES_WITH_DELAYED_FOCUS","READONLY_CLASS","LINK_CLASS","ROW_SELECTED","EDIT_BUTTON_CLASS","COMMAND_EDIT_CLASS","COMMAND_EDIT_WITH_ICONS_CLASS","INSERT_INDEX","ROW_INSERTED","ROW_MODIFIED","CELL_MODIFIED","EDITING_NAMESPACE","DATA_EDIT_DATA_UPDATE_TYPE","DEFAULT_START_EDIT_ACTION","EDIT_LINK_CLASS","edit","undelete","delete","EDIT_ICON_CLASS","METHOD_NAMES","ACTION_OPTION_NAMES","BUTTON_NAMES","EDITING_CHANGES_OPTION_NAME","createFailureHandler","isEditingCell","isEditingOrShowEditorAlwaysDataCell","isCommandCell","isEditorCell","EditingController","getButtonIndex","getButtonName","_lastOperation","_deferreds","_saveEditorHandler","_updateEditColumn","_updateEditButtons","_internalState","_optionsByReference","getEditMode","editMode","_getDefaultEditorTemplate","_getNewRowPosition","getChanges","getInsertRowCount","resetChanges","needReset","_getInternalData","_addInternalData","internalData","_getOldData","_this$_getInternalDat","getUpdatedData","editIndex","createObjectWithChanges","getInsertedData","getRemovedData","_fireDataErrorOccurred","getPopupContent","_needToCloseEditableCell","_closeEditItem","_isDefaultButtonVisible","_isButtonVisible","_isButtonDisabled","_getButtonConfig","buttonName","addRowToNode","editingOptions","allowAction","_getEditingButtons","buttonIndex","haveCustomButtons","_renderEditingButtons","_createButton","_getEditCommandCellTemplate","isRowBasedEditMode","getFirstEditableColumnIndex","getFirstEditableCellInRow","getFocusedCellInRow","_inputFocusTimeoutID","_pointerUpEditorHandler","_pointerDownEditorHandler","_handleEditRowKeyChange","_handleChangesChange","_resetEditColumnName","_resetEditRowKey","oldRowIndexCorrection","_getEditRowIndexCorrection","oldRowIndex","_editRowFromOptionChanged","cancelEditData","_processInsertChanges","_addInsertInfo","isPageChanged","_pageIndex","_refreshCore","isEditRowKeyDefined","_setEditRowKey","silent","_setEditRowKeyByIndex","getEditRowIndex","_getVisibleEditRowIndex","getEditFormRowIndex","_isEditRowByIndex","isKeyEqual","isEditCell","_getVisibleEditColumnIndex","_getInsertRowIndex","isProcessedItems","_getInsertAfterOrBeforeKey","isProcessedItem","nextItem","_generateNewItem","_this$_getInternalDat2","insertInfo","_getLoadedRowIndex","loadedRowIndex","insertAfterOrBeforeKey","_this$_getInternalDat3","isInsert","processDataItem","_processDataItemCore","modified","removed","_initNewRow","_createInsertInfo","_getInsertIndex","parentKey","_this$_getInternalDat4","Guid","_setInsertAfterOrBeforeKey","allItems","isViewportBottom","insertKey","maxInsertIndex","editItem","_this$_getInternalDat5","insertChange","_insertChange$insertA","_getPageIndexToInsertRow","lastPageIndex","_addRow","param","oldEditRowIndex","_allowRowAdding","__KEY__","_addRowCore","_navigateToNewRow","insertIndex","initialOldEditRowIndex","editRowIndex","_addChange","_editRowIndex","_change","focusController","pageIndexToInsertRow","navigateToRowByKey","navigateToRow","_showAddedRow","_afterInsertRow","_focusFirstEditableCellInRow","_beforeFocusElementInRow","$firstCell","_editCellInProgress","_delayedInputFocus","_isEditingStart","_beforeUpdateItems","_setEditColumnNameByIndex","_visibleColumns$index","_setEditColumnName","_getEditColumn","_getColumnByName","editColumn","columnName","isColumnHidden","_resetEditIndices","_item$oldData","_editRowFromOptionChangedCore","_needFocusEditor","_focusEditorIfNeed","_showEditPopup","_repaintEditPopup","_getEditPopupHiddenHandler","_getPopupEditFormTemplate","_getSaveButtonConfig","saveEditData","_getCancelButtonConfig","_removeInternalData","_updateInsertAfterOrBeforeKeys","removeChange","_removeChange","executeOperation","func","waitForDeferredOperations","_processCanceledEditingCell","_repaintEditCell","oldColumn","beforeFocusCallback","callBeforeFocusCallbackAlways","inputFocus","$focusableElement","_beforeFocusCallback","_focusEditingCell","$editCell","editColumnIndex","_checkAndDeleteRow","showDialogTitle","confirmResult","_deleteRowCore","_afterDeleteRow","_fireOnSaving","onSavingParams","_executeEditingAction","_disposed","_processChanges","results","dataChanges","changeCopy","_beforeSaveEditData","insert","newData","doneDeferred","_processRemoveIfError","_processRemove","_processRemoveCore","_processSaveEditDataResult","hasSavedData","changesLength","isError","_fireSaveEditDataEvents","isSaving","_resolveAfterSave","_saving","_saveEditDataInner","needFocusEditCell","_afterSaveEditData","_endSaving","_cancelSaving","_beforeEndSaving","_refreshDataAfterSave","isFullRefresh","isEditColumnVisible","_isEditColumnVisible","_isEditButtonDisabled","isEditRowDefined","isButtonDisabled","_applyModified","_beforeCloseEditCellInBatchMode","_cancelEditDataCore","_beforeCancelEditData","_afterCancelEditData","_hideEditPopup","hasEditData","_getRowIndicesForCascadeUpdating","skipCurrentRow","addDeferred","_prepareChange","_options$row","rowKey","setCellValueResult","_updateRowValues","updateFieldValue","forceUpdateRow","_focusPreviousEditingCellIfNeed","_updateEditRow","_needUpdateRow","isCustomSetCellValue","isCustomCalculateCellValue","changeOptions","_applyChangeCore","_updateEditRowCore","_updateRowImmediately","_updateRowWithDelay","_validateEditFormAfterUpdate","$focusedItem","changeParams","_this$getChanges","_getFormEditItemTemplate","getColumnTemplate","editingStartOptions","isRowMode","isRowEditing","getEditFormTemplate","useLegacyColumnButtonTemplate","$button","iconType","iconUtils","localizationName","getButtonLocalizationNames","_button$onClick","prepareButtonItem","titleButtonTextByClassNames","revert","prepareEditButtons","buttonItems","highlightDataCell","cellModified","shouldHighlight","_allowEditAction","allowEditAction","eventName","needCallback","isNewRowInEditMode","visibleEditRowIndex","editingModule","_editingController","_this$_updateEditItem","_updateEditItem","isRowRemoved","isRowInserted","isRowModified","_getColumnIndexByElement","_getColumnIndexByElementCore","_editCellByClick","isEditedCell","editCell","withoutSaveEditData","closeEditCell","_pointerDownTimeout","isEditForm","isEditableCell","_editCellPrepared","_formItemPrepared","cellValue","editButtonItems","excludedOptions","shouldInvalidate","EDIT_ROW","editingRowBasedModule","isRowEditMode","isVisibleInRowEditMode","$editingCell","EDIT_FORM_ITEM_CLASS","EDIT_POPUP_CLASS","SCROLLABLE_CONTAINER_CLASS","EDIT_POPUP_FORM_CLASS","BUTTON_CLASS","FORM_BUTTONS_CONTAINER_CLASS","getEditorType","_column$formItem","isCustomEditorType","forEachFormItems","callBack","tabs","editingFormBasedModule","_editForm","_updateEditFormDeferred","isFormOrPopupEditMode","isPopupEditMode","isFormEditMode","firstFormItem","_firstFormItem","$editFormElements","_getEditFormEditorVisibleIndex","editForm","_this$_editPopup","popupVisible","_editPopup","_$popupContent","_row$update","repaint","repaintForm","isMobileDevice","$popupContainer","_this$_editForm","formTemplate","isPopupForm","_this$_editPopup2","defaultAnimation","_this$_editPopup3","_handleFormOptionChange","_handlePopupOptionChange","_this$_editPopup4","editPopup","popupOptionName","renderFormEditTemplate","detailCellOptions","formTemplateOptions","isReadOnly","rowData","labelMark","getItemID","getFormEditorTemplate","_cellOptions$row$watc","_cellOptions$row","_validator","validator","validatorOptions","contents","dxValidator","dataGetter","getEditFormOptions","detailOptions","_this$_getValidationG","editFormOptions","_getValidationGroupsInForm","userCustomizeItem","editFormItemClass","itemId","formID","rule","itemVisible","baseEditFormOptions","$formContainer","Form","$buttonsContainer","_this$_editPopup5","getEditForm","_this$_updateEditForm","_this$_editPopup6","editFormRowIndex","_isFormItem","isDetailRow","isPopupEditing","ADD_ROW_BUTTON_CLASS","DROPDOWN_EDITOR_OVERLAY_CLASS","CELL_MODIFIED_CLASS","ROW_REMOVED","$pointerDownTarget","needCreateHandlers","_this$getController","targetComponent","isCellOrBatchEditMode","isEditorPopup","checkEditorPopup","isDomElement","isAnotherComponent","isAddRowButton","isCellEditMode","isBatchEditMode","isCurrentComponentElement","$targetCell","_this$_rowsView","isEditColumnNameDefined","_handleEditColumnNameChange","oldColumnIndex","_editCellFromOptionChanged","_deferred","_editCell","coreResult","_editCellCore","isEditByOptionChanged","_getNormalizedEditCellOptions","_beforeEditCell","_prepareEditCell","_closeEditCellCore","_resetModifiedClassCells","columnsCount","_this$_editCellFromOp","needResetIndexes","isBatchMode","_isRowDeleteAllowed","_changes$","_deferred2","isUpdateInCellMode","focusPreviousEditingCell","processIfBatch","editingCellBasedModule","INVALIDATE_CLASS","REVERT_TOOLTIP_CLASS","INVALID_MESSAGE_CLASS","WIDGET_INVALID_MESSAGE_CLASS","INVALID_MESSAGE_ALWAYS_CLASS","REVERT_BUTTON_CLASS","VALIDATOR_CLASS","PENDING_INDICATOR_CLASS","VALIDATION_PENDING_CLASS","PADDING_BETWEEN_TOOLTIPS","FORM_BASED_MODES","COMMAND_TRANSPARENT","VALIDATION_STATUS","valid","invalid","pending","EDIT_DATA_INSERT_TYPE","EDIT_DATA_REMOVE_TYPE","VALIDATION_CANCELLED","validationResultIsValid","cellValueShouldBeValidated","ValidatingController","_validationState","initValidationState","_validationStateCache","_rowIsValidated","validationData","_getValidationData","validated","keyHash","isObjectKeyHash","isValid","_getBrokenRules","validationResults","brokenRules","brokenRule","_rowValidating","getChangeByKey","errorText","getHiddenValidatorsErrorText","brokenRulesMessages","isGroupExpandColumn","isVisibleColumn","validate","isFull","completeList","_isValidationInProgress","validationResult","validateGroup","_currentCellValidator","_findGroup","_validationResult","ValidationEngine","validators","resetRowValidationResults","isRowDataModified","updateValidationState","setDisableApplyValidationResults","groupConfig","setValidator","renderCellPendingIndicator","LoadIndicator","disposeCellPendingIndicator","validationStatusChanged","updateCellValidationResult","validatorInitialized","validatorDisposing","getCellValidationResult","status","cancelCellValidationResult","applyValidationResult","requestIsDisabled","disabledPendingId","_disableApplyValidationResults","getEditorInstance","_syncInternalEditingData","_parameters$row","oldDataFromState","createValidator","needCreateValidator","_parameters$row$oldDa","_parameters$row2","isCellOrBatchEditingAllowed","getValue","useDefaultValidator","Validator","adapter","applyValidationResults","validationRequestsCallbacks","flag","getDisableApplyValidationResults","isCurrentValidatorProcessing","validateCell","cellParams","stateRestored","_validationData$valid","removeCellValidationResult","_ref6","isInvalidCell","_ref7","getCellValidator","_ref8","setCellValidationStatus","validationStatus","validatingModule","validating","validatingController","_updateRowAndPageIndices","startInsertIndex","_ref9","isNotCanceled","addInValidItem","isInserted","_createInvisibleColumnValidators","invisibleColumns","invisibleColumnValidators","isCellVisible","disposeValidators","isFullValid","_showErrorRow","shouldResetValidationState","columnsWithValidatingEditors","_col$validationRules","validationState","resetRowAndPageIndices","currentValidator","isValidated","needValidation","isCellInvalid","_showRevertButton","$tooltipElement","$overlayContainer","tooltipOptions","propagateOutsideClick","$buttonElement","buttonOptions","onPositioned","_positionedHandler","Overlay","_hideFixedGroupCell","overlayOptions","$nextFixedRowElement","$groupCellElement","nextRowOptions","visibility","isOverlayVisible","__skipPositionProcessing","isRevertButton","needRepaint","normalizedPosition","_normalizeValidationMessagePositionAndMaxWidth","_showValidationMessage","messages","revertTooltip","editorPopup","myPosition","atPosition","errorMessageText","invalidMessageClass","$overlayElement","_shiftValidationMessageIfNeed","fixedColumns","visibleTableWidth","w1","w2","$overlayContentElement","validationMessageWidth","needMaxWidth","boundaryNonFixedColumnsInfo","firstNonFixedColumnIndex","lastNonFixedColumnIndex","endColumnIndex","$revertContent","contentOffset","revertContentOffset","_getTooltipsSelector","revertTooltipClass","skipValidator","updateCellState","_change$data","showValidationMessage","errorMessages","$tooltips","_oldRow$cells","_cell$column$validati","oldValidationStatus","newValidationStatus","rowIsModified","cellIsMarkedAsInvalid","editingChanged","hasValidationRules","$freeSpaceRowElements","$tooltipContent","isEditorDisposed","contentTable","needTwoPagesLoading","_controller","isVirtual","getViewportItemIndex","getBeginPageIndex","_cache","getEndPageIndex","fireChanged","_isChangedFiring","processDelayChanged","_isDelayChanged","getViewportPageCount","_dataOptions","preventPreload","realViewportSize","viewportSize","viewportItemSize","getContentOffset","getViewportPosition","virtualItemsCount","begin","itemSize","getItemSizes","getPreloadPageCount","previous","getPageIndexForLoad","dataOptions","needToLoadPageBeforeLast","needToLoadPrevPage","needToLoadNextPage","_loadingPageIndexes","loadCore","processChanged","isDelayChanged","removeCacheItem","isPrepend","viewportItems","removeCount","correctCount","removeItemCount","itemsLength","updateLoading","_lastPageIndex","VirtualDataLoader","newPageIndex","lastPageSize","maxPageIndex","defaultPageIndex","endPageIndex","pageIndexForLoad","delayDeferred","_delayDeferred","onChanged","_setViewportPositionCore","removeInvisiblePages","lastCacheLength","isBase","beginItemsCount","endItemsCount","end","_isVirtualMode","_isVirtual","_isAppendMode","subscribeToExternalScrollers","scrollChangedHandler","$scrollElement","scrollableArray","scrollToArray","disposeArray","getElementOffset","$scrollableElement","scrollableOffset","widgetScrollStrategy","handler","subscribeToScrollEvents","isDocument","eventsStrategy","topOffset","scrollMethod","VirtualScrollController","_viewportSize","_viewportItemSize","_viewportItemIndex","_position","_isScrollingBack","_contentSize","_itemSizes","_sizeRatio","positionChanged","_dataLoader","viewportParams","getViewportParams","loadedOffset","loadedItemCount","getScrollingTimeout","scrollingTimeout","_this$option","changingDuration","setViewportPosition","_scrollTimeoutID","getItemIndexByPosition","defaultItemSize","getItemSize","itemOffset","itemOffsetsWithSize","itemOffsetWithSize","itemOffsetDiff","isScrollingBack","prevPosition","setViewportItemIndex","setContentItemSizes","sizes","size","virtualContentSize","contentHeightLimit","getItemOffset","isEnd","currentItemIndex","getVirtualContentSize","viewportItemIndexChanged","viewportHeight","isRefresh","subscribeToWindowScrollEvents","_windowScroll","_this$option2","topIndex","bottomIndex","maxGap","minGap","topMinGap","bottomMinGap","remainedItems","BOTTOM_LOAD_PANEL_CLASS","TABLE_CONTENT_CLASS","FREESPACE_CLASS","VIRTUAL_ROW_CLASS","LOAD_TIMEOUT","VISIBLE_PAGE_INDEX","_correctCount","isItemCountableFunc","isItemCountableByDataSource","updateItemIndices","VirtualScrollingDataSourceAdapterExtender","_updateLoading","_virtualScrollController","_loadPageCount","_getVirtualScrollDataOptions","_renderTime","_startLoadTime","handleDataChanged","newMode","virtualScrollController","r","getDelayDeferred","loadPageCount","takeIsDefined","VirtualScrollingRowsViewExtender","removeEmptyRows","$emptyRows","_dataController$state","scrollToPage","_scrollToCurrentPageOnResize","resizeHandler","scrollPosition","itemSizes","_updateContentPosition","startRenderTime","_removeRowsElements","_updateBottomLoading","_addVirtualRow","$virtualRow","_getRowHeights","rowHeights","_correctRowHeights","correctedRowHeights","visibleRows","firstCountableItem","lastLoadIndex","isRender","rowHeight","$virtualRows","_isFixedTableRendering","_isTableLinesDisplaysCorrect","table","hasColumnLines","_isColumnElementsEqual","$columns","$virtualColumns","_getCellClasses","classes","isExpandColumn","_findBottomLoadPanel","$bottomLoadPanel","showBottomLoading","bottomLoadPanelElement","zeroTopPosition","updateViewport","hasBottomLoadPanel","isViewportChanging","scrollPos","loadIfNeed","_dataController$loadI","virtualScrollingModule","updateTimeout","minTimeout","renderingThreshold","rowPageSize","prerenderedRowChunkSize","loadTwoPagesOnStart","legacyMode","prerenderedRowCount","baseResult","initVirtualRows","_rowsScrollController","_this$getLoadPagePara","getLoadPageParams","getRowPageSize","rowsScrollController","isSortingOperation","allowedTopOffset","virtualRowsRendering","_allItems","_loadViewportParams","_visibleItems","_rowPageIndex","_viewportChanging","_needUpdateViewportAfterLoading","_getRowsScrollDataOptions","_this$_dataSource2","loadViewport","_updateLoadViewportParams","isItemCountable","_that$_dataSource","_itemCount","isNextAfterLast","countableOnly","delta","cancelEmptyChanges","newItems","_dataSource$lastLoadO","prevCountable","prevRowType","isPrevRowNew","currentIndex","wasCountableItem","itemCountable","isNextGroupItem","isNextDataItem","isPrevNewRowFirst","skipForCurrentPage","it","isNewRowOnStart","isNewRowInEmptyData","isLoadIndexGreaterStart","isLoadIndexLessEnd","byLoadedRows","firstLoadIndex","_dataSource$lastLoadO2","_this$_rowsScrollCont","getPreloadedRowCount","preloadCount","byLoadedPage","_this$_dataSource3","_this$_dataSource4","loadedPageIndex","loadedTake","topPreloadCount","bottomPreloadCount","skipWithPreload","loadingTake","_updateVisiblePageIndex","currentPageIndex","viewPortItemIndex","_getChangedLoadParams","loadedPageParams","_loadItems","checkLoading","_dataSourceAdapter$lo","_dataSourceAdapter$pa","changedParams","currentLoadPageCount","lastRequiredItemCount","pageIndexNotChanged","allLoadedInAppendMode","viewportChanging","checkLoadedParamsOnly","loadingItemsStarted","_this$_loadViewportPa","_this$_loadViewportPa2","viewportIsNotFilled","currentTake","newTake","topItemIndex","_this$_loadViewportPa3","bottomItemIndex","_resizeTimeout","_lastTime","WINDOW_HEIGHT_PERCENT","getElementMaxHeightByWindow","startLocation","actualOffset","elementOffset","getInnerHeight","offsetTop","offsetBottom","DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS","DX_SUBMENU_CLASS","Submenu","orientation","onHoverStart","_dataAdapter","_renderContextMenuOverlay","node","getNodeByKey","_renderItems","_getChildNodes","_renderDelimiter","$contentDelimiter","_itemContainer","_overlayPositionedActionHandler","_showDelimiter","_toggleFocusClass","hoverStartAction","$rootItem","rootItem","submenu","$submenu","containerOffset","vLocation","hLocation","rootOffset","offsetLeft","rootWidth","rootHeight","submenuWidth","submenuHeight","_isMenuHorizontal","animationPosition","_overlay","DX_MENU_CLASS","DX_MENU_VERTICAL_CLASS","DX_MENU_HORIZONTAL_CLASS","DX_MENU_ITEM_CLASS","DX_MENU_ITEMS_CONTAINER_CLASS","DX_MENU_ITEM_EXPANDED_CLASS","DX_CONTEXT_MENU_CLASS","DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS","DX_STATE_DISABLED_CLASS","DX_STATE_HOVER_CLASS","DX_STATE_ACTIVE_CLASS","DX_ADAPTIVE_MODE_CLASS","DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS","DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS","FOCUS_UP","FOCUS_DOWN","FOCUS_LEFT","FOCUS_RIGHT","SHOW_SUBMENU_OPERATION","NEXTITEM_OPERATION","PREVITEM_OPERATION","DEFAULT_DELAY","ACTIONS","Menu","submenuDirection","showFirstSubmenuMode","hideSubmenuOnMouseLeave","onSubmenuShowing","onSubmenuShown","onSubmenuHiding","onSubmenuHidden","adaptivityEnabled","selectedItem","rootMenuElements","submenuElements","_submenuItemElements","itemSelector","currentSubmenu","_submenus","itemsContainer","navigationAction","$newTarget","$items","_getAvailableItems","isMenuHorizontal","$activeItem","_getActiveItem","_getItemsNavigationOperation","_getKeyboardNavigationAction","navOperation","_showSubmenu","_nextItem","_prevItem","_resizeEventTimer","_menuItemsWidth","_updateItemsWidthCache","$menuItems","_getSummaryItemsWidth","_isAdaptivityEnabled","containerWidth","_toggleAdaptiveMode","_visibleSubmenu","_initAdaptivity","_hamburger","_toggleTreeView","_toggleHamburgerActiveState","$menuItemsContainer","$adaptiveElements","_hideVisibleSubmenu","_treeView","_$adaptiveContainer","rtl","_ignoreFunctionValueDeprecation","menuOptions","animationEnabled","_treeviewItemClickHandler","onItemExpanded","onItemCollapsed","selectByClick","expandEvent","$hamburger","_renderHamburgerButton","_getTreeViewOptions","_getAdaptiveOverlayOptions","delayType","$itemFrame","_createSubmenu","_renderBorderElement","$submenuContainer","_getSubmenuOptions","_parentKey","internalFields","_clearTimeouts","getSubmenuPosition","_attachSubmenuHandlers","$submenuTarget","showSubmenuMode","disabledExpr","selectedExpr","itemsExpr","onFocusedItemChanged","_nestedItemOnSelectionChangedHandler","_nestedItemOnItemClickHandler","_nestedItemOnItemRenderedHandler","onLeftFirstItem","_moveMainMenuFocus","onLeftLastItem","onCloseRootSubmenu","onExpandLastSubmenu","_isDesktopDevice","$currentItem","_hideSubmenu","$newItem","addedItems","_clearSelectionInSubmenus","_clearRootSelection","targetSubmenu","cleanAllSubmenus","isOtherItem","$selectedItem","_selectedItemClass","selectedItemData","_getItemData","_clearSelectedItems","$prevSelectedItem","prevSelectedItemData","$submenuOverlayContent","getOverlayContent","submenus","submenuMouseLeaveName","hoverEventEnd","_submenuOnShowingHandler","_submenuOnShownHandler","_submenuOnHidingHandler","_submenuOnHiddenHandler","_submenuMouseLeaveHandler","$border","eventArgs","relatedTarget","_getSubmenuByRootElement","_hideSubmenuAfterTimeout","_getDelay","isRootItemHovered","isSubmenuItemHovered","hoveredElementFromSubMenu","isHorizontalMenu","submenuPosition","$closestItem","_itemElements","mouseMoveEventName","_getItemElementByEventArgs","getNodeByItem","isSelectionActive","which","_isItemDisabled","_hasChildren","_getShowFirstSubmenuMode","_getSubmenuByElement","_itemMouseMoveHandler","_showSubmenuTimer","eventArg","_hideSubmenuTimer","$itemElement","_hoveredRootItem","pointers","_renderSubmenuItems","_disabledGetter","_updateSelectedItemOnClick","_initActions","_changeSubmenusOption","_removeAdaptivity","MenuBase","OPERATION_ICONS","notcontains","startswith","endswith","OPERATION_DESCRIPTORS","FILTERING_TIMEOUT","CORRECT_FILTER_RANGE_OVERLAY_WIDTH","FILTER_RANGE_OVERLAY_CLASS","FILTER_RANGE_START_CLASS","FILTER_RANGE_END_CLASS","MENU_CLASS","EDITOR_WITH_MENU_CLASS","EDITOR_CONTAINER_CLASS","FILTER_MENU","APPLY_BUTTON_CLASS","HIGHLIGHT_OUTLINE_CLASS","FOCUSED_CLASS","FILTER_RANGE_CONTENT_CLASS","FILTER_MODIFIED_CLASS","BETWEEN_OPERATION_DATA_TYPES","isOnClickApplyFilterMode","ColumnHeadersViewFilterRowExtender","$editorContainer","componentNames","Editor","getRangeTextByFilterValue","rangeEnd","getColumnFilterValue","formatOptions","getColumnSelectedFilterOperation","bufferedSelectedFilterOperation","isFilterRange","isRangeStart","updateFilterValue","_applyFilterViewController","setHighLight","normalizedValue","columnFilterValue","isBetween","_updateEditorValue","$editorRangeElements","$menu","overlayInstance","_updateFilterRangeContent","_updateFilterOperationChooser","_renderFilterRangeContent","_renderEditor","_getEditorOptions","_hideFilterRange","_filterRangeOverlayInstance","isFilterRowVisible","_initFilterRangeOverlay","$overlay","$prevElement","prev","_updateFilterRangeOverlay","_showFilterRange","getFilterRangeOverlayInstance","_renderFilterCell","_renderFilterOperationChooser","accessibilityOptions","_getFilterInputAccessibilityAttributes","columnAriaLabel","$filterRangeContent","isCellWasFocused","menu","_focusEditor","selectable","_getFilterOperationMenuItems","properties","columnSelectedFilterOperation","notFocusEditor","isOnClickMode","_isEditorFocused","filterRowOptions","availableFilterOperations","descriptionName","DataControllerFilterRowExtender","skipCalculateColumnFilters","ApplyFilterViewController","_getHeaderPanel","_headerPanel","enableApplyButton","removeHighLights","columnHeadersViewElement","filterRowModule","columnsResizer","_startResizing","_targetPoint","_endResizing","filterItem","_prepareFilterItem","_isShowApplyFilterButton","core","HEADER_FILTER_CLASS","HEADER_FILTER_MENU_CLASS","DEFAULT_SEARCH_EXPRESSION","resetChildrenItemSelection","updateSelectAllState","selectAllCheckBox","isSearchEnabled","updateHeaderFilterItemSelectionState","filterValuesMatch","isExcludeFilter","HeaderFilterView","getPopupContainer","getListContainer","_listContainer","applyHeaderFilter","list","isFilterBuilder","fillSelectedItemKeys","isExclude","_getNode","hasChildren","hasChildrenWithSelection","hideHeaderFilterMenu","$columnElement","updatePopup","headerFilterMenu","_cleanPopupContent","_getSearchExpr","useDefaultSearchExpr","headerFilterDataSource","headerFilterOptions","_initializeListContainer","widgetOptions","List","pageLoadMode","showSelectionControls","_selectedItemsUpdating","oldSelected","filterValueIndex","headerFilterMixin","$headerFilterIndicator","_isHeaderFilterEmpty","DATE_INTERVAL_FORMATS","ungroupUTCDates","dateParts","dates","isMonthPart","convertDataFromUTCToLocal","isUTCFormat","HeaderFilterController","_headerFilterView","_updateSelectedState","_normalizeGroupItem","currentLevel","valueSelector","displaySelector","getHeaderItemText","firstValueText","secondValue","secondValueText","level","_column$headerFilter","isLookup","lookupDataSourceOptions","cutoffLevel","_currentColumn","useDefaultSearch","convertUTCDates","origPostProcess","getCurrentColumn","isGroupPanel","showHeaderFilterMenuBase","columnElement","dxResizableInstance","dxResizable","headerFilterByColumn","ColumnHeadersViewHeaderFilterExtender","_subscribeToIndicatorEvent","_updateHeaderFilterIndicators","_needUpdateFilterIndicators","HeaderPanelHeaderFilterExtender","headerFilterModule","headerFilterView","FILTER_BUILDER_RANGE_CLASS","FILTER_BUILDER_RANGE_START_CLASS","FILTER_BUILDER_RANGE_END_CLASS","FILTER_BUILDER_RANGE_SEPARATOR_CLASS","SEPARATOR","conditionInfo","$editorStart","$editorEnd","getStartValue","getEndValue","_editorFactory","getConfig","valueSeparator","notForLookup","isblank","isnotblank","OPERATION_NAME","getIconByFilterOperation","filterOperation","getNameByFilterOperation","DEFAULT_DATA_TYPE","EMPTY_MENU_ICON","AND_GROUP_OPERATION","EQUAL_OPERATION","NOT_EQUAL_OPERATION","boolean","object","DEFAULT_FORMAT","LOOKUP_OPERATIONS","AVAILABLE_FIELD_PROPERTIES","FILTER_BUILDER_CLASS","FILTER_BUILDER_ITEM_TEXT_CLASS","FILTER_BUILDER_ITEM_TEXT_PART_CLASS","FILTER_BUILDER_ITEM_TEXT_SEPARATOR_CLASS","FILTER_BUILDER_ITEM_TEXT_SEPARATOR_EMPTY_CLASS","getFormattedValueText","fieldFormat","isNegationGroup","isCondition","getGroupCriteria","setGroupCriteria","criteria","convertGroupToNewStructure","setGroupValue","substring","getGroupMenuItem","availableGroups","groupValue","getGroupValue","getCriteriaOperation","getDefaultFilterOperations","containItems","entity","getFilterOperations","getCaptionByOperation","filterOperationsDictionary","getOperationFromAvailable","availableOperations","getCustomOperation","filteredOperations","getAvailableOperations","isLookupField","isOperationForbidden","isCustom","getDefaultOperation","createCondition","updateConditionByOperation","removeItem","createEmptyGroup","isNegation","isNegationGroupOperation","groupOperation","getGroupOperationFromNegationOperation","addItem","getField","extendedFields","getItems","convertToInnerGroup","defaultGroupOperation","innerGroup","convertToInnerStructure","appendGroupOperationToGroup","convertToInnerCondition","conditionHasCustomOperation","appendGroupOperationToCriteria","getNormalizedFields","normalizedField","getConditionFilterExpression","filterExpression","getFilterExpression","_filterExpression","getNormalizedFilter","itemsForRemove","normalizedGroupValue","isValidCondition","getCurrentLookupValueText","lookupDataSource","loadSingle","getPrimitiveValueText","getArrayValueText","checkDefaultValue","getCurrentValueText","_len","_key","itemExists","pushItemAndCheckParent","originalItems","hasParent","getParentIdFromItemDataField","generateCaptionByDataField","lastIndexOf","arr","getCaptionWithParents","getOperationValue","getMergedOperations","betweenCaption","betweenIndex","isMatchedCondition","addedFilterDataField","removeFieldConditionsFromFilter","hasMatchedCondition","syncConditionIntoGroup","addedFilter","canPush","syncFilters","getMatchedConditions","filterHasField","renderValueText","lastItemIndex","t","baseOperation","grid","getFullText","itemText","parentText","lastIndex","div","closeEditor","fieldInfo","itemsDeferred","_values","getSelectedItemsTexts","selectedItemsTexts","anyOf","noneOf","baseOp","baseFilter","FILTER_ROW_OPERATIONS","FILTER_TYPES_INCLUDE","FILTER_TYPES_EXCLUDE","getColumnIdentifier","checkForErrors","FilterSyncController","getEmptyFilterValues","canSyncHeaderFilterWithFilterRow","getConditionFromFilterRow","getConditionFromHeaderFilter","selectedOperation","updateHeaderFilterCondition","headerFilterCondition","hasArrayValue","updateFilterRowCondition","syncFilterValue","_skipSyncColumnOptions","filterConditions","filterCondition","_initSync","filteringColumns","isFilterSyncActive","_getSyncFilterRow","_getSyncHeaderFilter","syncFilterRow","syncHeaderFilter","getCustomFilterOperations","filterBuilderCustomOperations","DataControllerFilterSyncExtender","filterSyncEnabledValue","calculatedFilterValue","_parseColumnPropertyName","matched","match","propertyName","ColumnHeadersViewFilterSyncExtender","filterSyncModule","filterSync","FILTER_BUILDER_GROUP_CLASS","FILTER_BUILDER_GROUP_ITEM_CLASS","FILTER_BUILDER_GROUP_CONTENT_CLASS","FILTER_BUILDER_GROUP_OPERATIONS_CLASS","FILTER_BUILDER_GROUP_OPERATION_CLASS","FILTER_BUILDER_ACTION_CLASS","FILTER_BUILDER_IMAGE_CLASS","FILTER_BUILDER_IMAGE_ADD_CLASS","FILTER_BUILDER_IMAGE_REMOVE_CLASS","FILTER_BUILDER_ITEM_FIELD_CLASS","FILTER_BUILDER_ITEM_OPERATION_CLASS","FILTER_BUILDER_ITEM_VALUE_CLASS","FILTER_BUILDER_ITEM_VALUE_TEXT_CLASS","FILTER_BUILDER_OVERLAY_CLASS","FILTER_BUILDER_FILTER_OPERATIONS_CLASS","FILTER_BUILDER_FIELDS_CLASS","FILTER_BUILDER_ADD_CONDITION_CLASS","ACTIVE_CLASS","FILTER_BUILDER_MENU_CUSTOM_OPERATION_CLASS","SOURCE","DISABLED_STATE_CLASS","TAB_KEY","ENTER_KEY","ESCAPE_KEY","OPERATORS","FilterBuilder","closePopupOnTargetScroll","_initCustomOperations","disableInvalidateForValue","_disableInvalidateForValue","_initModel","_getNormalizedFields","_model","_getFilterExpression","_customOperations","_updateFilter","_getModel","_initEditorFactory","_getDefaultGroupOperation","_this$option$","actionConfig","_createGroupElementByCriteria","_createConditionElement","_createConditionItem","$group","_createGroupElement","$groupContent","groupCriteria","innerCriteria","$groupItem","_createRemoveButton","_createGroupOperationButton","_createAddButton","newGroup","newCondition","_getGroupOperations","groupMenuItem","$operationButton","_createButtonWithMenu","removeMenu","info","treeViewElement","treeView","dxTreeView","_subscribeOnClickAndEnterKey","_createPopupWithTreeView","_hasValueButton","_createOperationButtonWithMenu","currentOperation","$valueButton","siblings","_createValueButton","_createOperationAndValueButtons","_createFieldButtonWithMenu","getFullCaption","$fieldButton","isSingleChild","$removeButton","addGroupHandler","addConditionHandler","click","_createValueText","$text","_createValueEditorWithEvents","_updateConditionValue","areValuesDifferent","_addDocumentKeyUp","isComposing","hasCompositionJustEnded","documentKeyUpHandler","input","_documentKeyUpHandler","_addDocumentClick","closeEditorFunc","documentClickHandler","_isFocusOnEditorParts","_documentClickHandler","activeElement","_removeEvents","createValueText","_createValueEditor","$popup","class","$menuContainer","FilterBuilderView","_updatePopupOptions","_initPopup","_filterBuilderPopup","_disposePopup","_filterBuilder","_getPopupContentTemplate","_getPopupToolbarItems","$filterBuilderContainer","ScrollView","filterBuilderModule","filterBuilderView","FILTER_PANEL_CLASS","FILTER_PANEL_TEXT_CLASS","FILTER_PANEL_CHECKBOX_CLASS","FILTER_PANEL_CLEAR_FILTER_CLASS","FILTER_PANEL_LEFT_CONTAINER","FILTER_PANEL_TARGET","FilterPanelView","$leftContainer","_filterValueBuffer","_getCheckElement","_getFilterElement","_getTextElement","_getRemoveButtonElement","CheckBox","_showFilterBuilder","_addTabIndexToElement","filterText","$textElement","getFilterText","customText","clearFilterValue","tabindex","_getConditionText","fieldText","operationText","_getValueMaskedText","_getValueText","hasCustomOperation","gridUtils","getConditionText","getGroupText","isInnerGroup","textParts","groupText","filterPanelModule","filterPanelView","SEARCH_PANEL_CLASS","SEARCH_TEXT_CLASS","searchModule","searchFilter","onQueryDone","valueGetter","_i","getSearchPanelOptions","_prepareSearchItem","searchPanelOptions","$search","getSearchTextEditor","$searchPanel","dxTextBox","_searchParams","_getFormattedSearchText","_getStringNormalizer","isCaseSensitive","_findHighlightingTextNodes","_$items","stringNormalizer","normalizedSearchText","resultTextNodes","$contents","normalizedText","_highlightSearchTextCore","$textNode","$searchTextSpan","firstContentElement","after","_highlightSearchText","isEquals","textNodes","textNode","_highlightTimer","GridPagerWrapper","pageIndexChanged","pageSizeChanged","toNumber","attribute","getElementStyle","_getElementComputedSt","computedStyle","getElementComputedStyle","getElementWidth","getElementMinWidth","_excluded","viewFunction","contentAttributes","infoTextRef","infoTextVisible","isLargeDisplayMode","pageSizesRef","pagesRef","parentRef","Content","rootElementRef","calculateAdaptivityProps","infoWidth","pageSizesWidth","pageSizes","pagesWidth","pages","parentWidth","minimalWidth","getElementsWidth","pagesHtmlWidth","ResizableContainerProps","TemplateProp","normalizeProps","createComponentVNode","ResizableContainer","infernoCreateRef","subscribeToResize","effectUpdateChildProps","updateAdaptivityProps","InfernoEffect","pagerProps","_this$_effects$","_this$_effects$2","_effects","resizeCallbacks","gridCompatibility","lightModeEnabled","maxPagesCount","pageIndexChange","pageSizeChange","pagesCountText","pagesNavigatorVisible","showPageSizes","restAttributes","currentElementsWidth","actualAdaptivityProps","elementsWidth","setState","__state_argument","_this$props","restProps","_objectWithoutPropertiesLoose","InfernoComponent","BasePagerProps","PagerProps","getOwnPropertyDescriptors","defaultPageSize","InternalPagerProps","PAGER_INFO_CLASS","createVNode","InfoTextPropsType","InfoText","_this$props$infoText","BaseInfernoComponent","KeyboardActionContext","createContext","widgetRef","LightButtonProps","LightButton","keyboardEffect","subscribeToClick","keyboardContext","subscribeToClickEvent","PAGER_CLASS","LIGHT_MODE_CLASS","PAGER_PAGES_CLASS","PAGER_PAGE_INDEXES_CLASS","PAGER_PAGE_CLASS","PAGER_SELECTION_CLASS","PAGER_PAGE_SIZE_CLASS","PAGER_PAGE_SIZES_CLASS","PAGER_SELECTED_PAGE_SIZE_CLASS","PageProps","Page","combineClasses","_excluded2","PAGER_PAGE_SEPARATOR_CLASS","PagesMarkup","pageProps","createFragment","PAGES_LIMITER","getDelimiterType","startIndex","slidingWindowSize","createPageIndexesBySlidingWindowIndexes","slidingWindowIndexes","delimiter","pageIndexes","indexesForReuse","createPageIndexes","PagesLargePropsType","PagesLarge","canReuseSlidingWindow","generatePageIndexes","isSlidingWindowMode","onPageClick","ConfigContext","slidingWindowState","slidingWindowStateHolder","currentPageCount","currentPageNotExistInIndexes","includes","pageIndexExistInIndexes","_createPageIndexes","_this$config","createPage","rtlPageIndexes","DEFAULT_VALUE","DomComponentWrapper","componentType","LegacyNumberBox","componentProps","templateNames","NumberBoxProps","BaseWidgetProps","defaultValue","isReactComponentWrapper","NumberBox","_this$props$value","oneDigitWidth","calculateValuesFittedWidth","PAGER_INFO_TEXT_CLASS","PAGER_PAGE_INDEX_CLASS","LIGHT_PAGES_CLASS","PAGER_PAGES_COUNT_CLASS","pageIndexRef","selectLastPageIndex","valueChange","PagerSmallProps","PagesSmall","updateWidth","_this$pageIndexRef$cu","el","_this$props$pagesCoun","PAGER_NAVIGATE_BUTTON","PAGER_PREV_BUTTON_CLASS","PAGER_NEXT_BUTTON_CLASS","PAGER_BUTTON_DISABLE_CLASS","nextButtonClassName","prevButtonClassName","nextButtonDisabledClassName","prevButtonDisabledClassName","navigateToNextPage","navigateToPrevPage","nextClassName","prevClassName","renderNextButton","renderPrevButton","getIncrement","PageIndexSelectorProps","PageIndexSelectorPropsType","PageIndexSelector","getNextDirection","getPrevDirection","canNavigateToPage","getNextPageIndex","canNavigateTo","navigateToPage","_this$config2","canNavigate","LegacySelectBox","SelectBoxProps","SelectBox","PageSizeSmallPropsType","PageSizeSmall","p","pageSizesText","PageSizeLargePropsType","PageSizeLarge","__getterCache","onPageSizeChange","processedPageSize","nextProps","nextState","htmlRef","normalizedPageSizes","getAllText","PageSizeSelectorProps","PageSizeSelectorPropsType","PageSizeSelector","setRootElementRef","infoVisible","pageIndexSelectorVisible","pagesContainerVisibility","pagesContainerVisible","widgetRootElementRef","normalizeStyles","PagerContentProps","PagerContent","createFakeInstance","keyboardAction","_this$props$onKeyDown","fakePagerInstance","_registerKeyboardAction","normalizedDisplayMode","classesMap","_this$props2","Pager","createReRenderEffect","__newValue","_newValue","newPageSize","_this$props$pageSize$","InfernoWrapperComponent","_wrapKeyDownHandler","twoWay","allowNull","PagerComponent","MAX_PAGES_COUNT","getPageIndex","PagerView","_getPager","pagerOptions","useLegacyKeyboardNavigation","_pageSizes","pagerVisible","isPager","isPaging","isDataSource","isScrolling","pagerModule","COLUMNS_SEPARATOR_CLASS","COLUMNS_SEPARATOR_TRANSPARENT","DRAGGING_HEADER_CLASS","HEADERS_DRAG_ACTION_CLASS","TRACKER_CLASS","HEADERS_DROP_HIGHLIGHT_CLASS","BLOCK_SEPARATOR_CLASS","WIDGET_CLASS","DRAGGING_COMMAND_CELL_CLASS","COLUMNS_SEPARATOR_TOUCH_TRACKER_WIDTH","DRAGGING_DELTA","COLUMN_OPACITY","TrackerView","_unsubscribeFromCallback","_positionChanged","_tablePositionController","_subscribeToCallback","_setHeight","SeparatorView","_renderSeparator","_isShown","ColumnsSeparatorView","_isTransparent","columnsSeparatorTransparent","moveByX","outerX","changeCursor","cursorName","BlockSeparatorView","startAnimate","toOptions","fx","DraggingHeaderView","_isDragging","isDragging","_getDraggingPanelByPos","_dragOptions","boundingRect","_resetTargetColumnOptions","_dropOptions","targetColumnIndex","targetColumnElement","isLast","posX","posY","_getVisibleIndexObject","_columnsResizerViewController","dragHeader","isCommandColumn","sourceIndex","sourceColumnIndex","sourceColumnElement","_onSelectStart","onselectstart","drag","whiteSpace","swatchContainer","moveHeader","eventData","getEventData","dragOptions","moveDeltaX","abs","deltaX","moveDeltaY","deltaY","newLeft","newTop","dockHeader","targetDraggingPanel","isVerticalOrientation","axisName","pointsByTarget","pointsByColumns","_generatePointsByColumns","centerPosition","dock","dropHeader","drop","isNextColumnResizingMode","ColumnsResizerViewController","_isHeadersRowArea","headersRowHeight","_isRtlParentStyle","_this$_$parentContain","_$parentContainer","_pointCreated","isNextColumnMode","isRtlParentStyle","firstPointColumnIndex","nextColumn","_getTargetPoint","currentX","_moveSeparator","_that$_draggingHeader","columnsSeparatorWidth","_columnsSeparatorView","parentOffset","parentOffsetLeft","_draggingHeaderView","_isResizing","_resizingInfo","_updateColumnsWidthIfNeeded","currentColumnIndex","outerWidth","_previousParentOffset","_isReadyResizing","_trackerView","_getNextColumnIndex","_setupResizingInfo","nextColumnIndex","currentHeader","nextHeader","startPosX","currentColumnWidth","nextColumnWidth","isTouchEvent","_pointsByColumns","_unsubscribeFromEvents","_moveSeparatorHandler","_startResizingHandler","_endResizingHandler","_subscribeToEvents","nextCellWidth","cellWidth","needUpdate","resizingInfo","setColumnWidth","oldColumnWidth","allColumnsHaveWidth","totalPercent","hasScroll","_subscribesToCallbacks","_unsubscribeFromCallbacks","subscribe","_unsubscribes","generatePointsByColumnsHandler","generatePointsByColumnsScrollHandler","previousScrollbarVisibility","previousTableHeight","scrollbarVisibility","TablePositionViewController","diffOffsetTop","columnsHeadersHeight","scrollBarWidth","columnsResizerController","draggingHeaderView","isDraggingOrResizing","_pagerView","targetPoint","DraggingHeaderViewController","draggingHeader","nameDraggingPanel","subscribeToEvents","dragEventStart","dragEventMove","dragEventEnd","_getSeparator","_blockSeparatorView","hideSeparators","blockSeparator","columnsSeparator","_animationColumnIndex","_headerPanelView","_columnChooserView","allowDrop","headersView","separator","hasTargetVisibleIndex","columnsResizingReorderingModule","columnsSeparatorView","blockSeparatorView","trackerView","tablePosition","GROUP_FOOTER_CLASS","FREESPACE_ROW_CLASS","COMMAND_CELL_SELECTOR","DATEBOX_WIDGET_NAME","FAST_EDITING_DELETE_KEY","INTERACTIVE_ELEMENTS_SELECTOR","NON_FOCUSABLE_ELEMENTS_SELECTOR","FOCUS_TYPE_ROW","FOCUS_TYPE_CELL","COLUMN_HEADERS_VIEW","isNotFocusedRow","isCellElement","_isRowEditMode","isElementDefined","isMobile","isCellInHeaderRow","isFixedColumnIndexOffsetRequired","shouldPreventScroll","_isVirtualScrolling","KeyboardNavigationController","_selectionController","_updateFocusTimeout","_fastEditingStarted","_focusedCellPosition","_canceledCellPosition","setupFocusedView","_isNeedScroll","_focusedView","_initViewHandlers","_initDocumentHandlers","rowsViewFocusHandler","isRelatedTargetInRowsView","isCommandButton","_isEventInCurrentGrid","$focusedCell","_getFocusedCell","$rowsView","isFocusedViewCorrect","needUpdateFocus","isFocusedElementCorrect","_initPointerEventHandler","_initKeyDownHandler","_setRowsViewAttributes","_isNeedFocus","_isHiddenFocus","isCurrentRowsViewClick","isEditorOverlay","isColumnResizing","targetInsideFocusedView","_resetFocusedCell","_resetFocusedView","_getRowsViewElement","isGridEmpty","_applyTabIndexToElement","pointerEventName","clickSelector","_pointerEventAction","_pointerEventHandler","keyboard","_keyDownListener","_keyDownHandler","isRowFocusType","focusType","isCellFocusType","setRowFocusType","setCellFocusType","needStopPropagation","_processOnKeyDown","isDefaultPrevented","_updateFocusedCellPositionByTarget","_leftRightKeysHandler","ctrl","_upDownKeysHandler","_pageUpDownKeyHandler","_spaceKeyHandler","_ctrlAKeyHandler","_beginFastEditing","_tabKeyHandler","_enterKeyHandler","_escapeKeyHandler","_ctrlFKeyHandler","_f2KeyHandler","_isFastEditingAllowed","_isFastEditingStarted","alt","altKey","_closeEditCell","getVisibleRowIndex","$event","directionCode","_getDirectionCodeByKey","isEditingNavigationMode","allowNavigate","_isVirtualColumnRender","_processVirtualHorizontalPosition","_getNextCell","_arrowKeysHandlerFocusCell","isUpArrow","_navigateNextCell","_isVirtualRowRender","_scrollBy","isPageUp","pageStep","isFocusedRowElement","_getElementType","isFocusedSelectionCell","isCellPositionDefined","isOriginalHandlerRequired","_isLastValidCell","_isFirstValidCell","eventTarget","focusedViewElement","_handleTabKeyOnMasterDetailCell","_editingCellTabHandler","_targetCellTabHandler","_getMaxHorizontalOffset","_isColumnRendered","allVisibleColumns","renderedVisibleColumns","_isFixedColumn","_isColumnVirtual","localColumnIndex","getColumnIndex","horizontalScrollPosition","needToScroll","_getVisibleColumnCount","leftEdgePosition","_getHorizontalScrollPositionOffset","scrollBy","positionOffset","$currentCell","_getCell","currentCellWidth","rtlMultiplier","isEditingAllowed","_getCellElementFromTarget","elementType","_updateFocusedCellPosition","nextCellInfo","_getNextCellByTabKey","_getRowIndex","_isDataRow","_focusCell","isHighlighted","_editFocusedCell","_focusInteractiveElement","$lastInteractiveElement","_getInteractiveElement","getFirstValidCellInRow","_checkNewLineTransition","_fireFocusedCellChanging","$newCellElement","_getCellPosition","_fireFocusedRowChanging","rowIndexChanged","setFocusedColumnIndex","_processEnterKeyForDataCell","_getEnterKeyDirection","allowEditingOnEnterKey","_allowEditingOnEnterKey","_handleEnterKeyEditingCell","_startEditing","isShift","_focusEditFormCell","searchTextEditor","keyCode","isCellValid","_isCellValid","$nextCell","isVerticalDirection","_fireFocusChangingEvents","_focus","isDeleting","fastEditingKey","fromCharCode","isInteractiveElement","isExpandCommandCell","_isInsideEditForm","_focusView","_isMasterDetailCell","_clickTargetCellHandler","_isCellEditMode","setFocusedRowIndex","prevRowIndex","resetFocusedRow","_resetFocusedRow","_allowRowUpdating","skipFocusEvent","isEditor","isDisabled","activeElementSelector","_focusElement","getFocusedView","rowsViewElement","$focusedView","_getFocusedViewByElement","$view","disableFocus","$focusElement","focusedView","isRowFocus","isRenderView","_hasSkipRow","_checkCellOverlapped","$focusedElementInsideCell","isFocusedElementDefined","cellOffset","hasScrollable","isOverlapped","_this$_focusedCellPos","setFocusedCellPosition","_getFocusedColumnIndexOffset","_getFixedColumnIndexOffset","_applyColumnIndexBoundaries","preventScroll","_this$_focusedView","renderFocusState","restoreFocusableElement","newRowIndex","_getNewPositionByCode","code","visibleColumnsCount","_hasValidCellAfterPosition","_isLastRow","_hasValidCellBeforePosition","_isCellByPositionValid","getMaxRowIndex","isFirstValidCell","hasValidCells","checkingPosition","visibleColumnCount","isLastRow","isClick","isShowWhenGrouped","isDataCell","rowItems","isRowEditingInCurrentRow","_isLegacyNavigation","$result","focusedCellPosition","includeCommandCells","newFocusedCellPosition","isLastCellOnDirection","_isCellInRow","visibleColumnIndex","_isAllowEditing","_startEditCell","colIndex","editResult","_editingCellHandler","editorValue","_$input$get$select","_$input$get","$input","keyDownEvent","createEvent","keyPressEvent","inputEvent","val","$widgetContainer","fireRowEvent","newColumnIndex","prevCellIndex","prevColumnIndex","_fireFocusedCellChanged","localRowIndex","$newFocusedRow","prevFocusedRowIndex","_fireFocusedRowChanged","getFocusedRowIndexByKey","$masterDetailCell","$masterDetailGrid","_processNextCellInMasterDetail","_processCanceledEditCellPosition","isCanceled","updateFocusedRowIndex","lastVisibleIndex","keyboardNavigationModule","needTriggerPointerEventHandler","_triggerPointerDownEventHandler","cellElements","updateFocusElementTabIndex","_updateFocusedCellTabIndex","cellElementsLength","updateCellTabIndex","isMasterDetailCell","isValidCell","_renderFocusByChange","editorInstance","_getEditorInstance","_handleEditingNavigationMode","originalKeyHandler","isDropDownOpened","isDateBoxWithMask","keyboardNavigationController","_keyboardNavigationController","getRowIndexCorrection","focusedRowIndexCorrection","adaptiveColumns","_showHiddenCellsInView","_hideVisibleCellInView","depthFirstSearch","depth","root","array","isCount","aggregator","aggregators","normalizeAggregate","aggregate","_data","_groupLevel","_totalAggregates","totalAggregates","_groupAggregates","groupAggregates","_totals","calculate","_calculateTotals","_calculateGroups","_aggregate","aggregates","_accumulate","_seed","_finalize","maxLevel","seedFn","stepFn","finalizeFn","innerNode","seed","NaN","aggregateIndex","step","fin","finalize","DATAGRID_TOTAL_FOOTER_CLASS","DATAGRID_SUMMARY_ITEM_CLASS","DATAGRID_TEXT_CONTENT_CLASS","DATAGRID_GROUP_FOOTER_CLASS","DATAGRID_GROUP_TEXT_CONTENT_CLASS","DATAGRID_NOWRAP_CLASS","DATAGRID_GROUP_FOOTER_ROW_TYPE","renderSummaryCell","$summaryItems","getSummaryCellOptions","getGroupAggregates","FooterView","footerItems","needUpdateScrollLeft","$newTable","$newRow","totalColumnIndices","SummaryDataSourceAdapterExtender","_summaryGetter","summaryGetter","_summary","sortByGroupsInfo","sortByGroups","groupedItems","forEachGroup","itemsPath","SummaryDataSourceAdapterClientExtender","calculateAggregates","calculator","insertedData","applyAddedData","removedData","applyRemovedData","updatedData","updatedItems","set","AggregateCalculator","sortGroupsBySummary","sortGroupsBySummaryCore","sortBy","thenBy","sortedItems","totalSummary","_options$cachedData$e","hasOperations","_isDataColumn","_isGroupFooterVisible","isGroupFooterVisible","summaryGroupItems","afterGroupColumnIndex","_calculateSummaryCells","calculateTargetColumnIndex","summaryCellsByColumns","summaryIndex","_getSummaryCells","summaryTotalItems","_footerItems","oldSummaryCells","summaryCell","_prepareUnsavedDataSelector","_prepareAggregateSelector","_getAggregates","commonSkipEmptyValues","summaryProcess","totalValue","_addSortInfo","_findSummaryItem","summaryItemIndex","_getSummarySortByGroups","groupSummaryItems","currentRemoteOperations","_getSummaryOptions","totalSummaryItems","methods","getTotalSummaryValue","summaryItemName","_refreshSummary","_renderGroupSummaryCells","_hasAlignByColumnSummaryItems","_getAlignByColumnCellCount","groupCellColSpan","alignByColumnCellCount","$groupCell","_renderGroupSummaryCellsCore","_getSummaryCellIndex","FIRST_CELL_CLASS","LAST_CELL_CLASS","HOVER_STATE_CLASS","FIXED_COL_CLASS","FIXED_COLUMNS_CLASS","POINTER_EVENTS_NONE_CLASS","getTransparentColumnIndex","normalizeColumnWidths","fixedWidths","fixedColumnIndex","baseFixedColumns","_isFixedColumns","_correctColumnIndicesForFixedColumns","_partialUpdateFixedTable","fixedTableElement","_fixedTableElement","childNodes","$fixedTable","fixedCorrection","fixedCells","prevFixedColumn","columnCommand","isRowAltStyle","isEmptyCell","isFixedTableRendering","isGroupCell","alignByFixedColumnCellCount","headerRowIndex","fixedCellElements","fixedColumn","getFixedColumnsOffset","$transparentColumn","getTransparentColumnElement","positionTransparentColumn","getFixedTableElement","synchronizeRows","isWidthsSynchronized","isColumnWidthChanged","useVisibleColumns","_getClientHeight","boundingClientRectElement","$fixedRowElements","fixedRowHeights","heightTable","heightFixedTable","fixedRowHeight","ColumnHeadersViewFixedColumnsExtender","columnFixingOptions","getFixedColumnElements","$transparentColumnElement","$fixedColumnElements","RowsViewFixedColumnsExtender","_detachHoverEvents","_attachHoverEvents","attachHoverEvent","isHover","contentClass","scrollDelay","_fixedScrollTimeout","wheelEventName","$nearestScrollable","shouldScroll","nearestScrollableInstance","nearestScrollableHasVerticalScrollbar","_updateFixedTablePosition","needFocus","vWidth","hWidth","styles","$fixedContent","_getElasticScrollTop","elasticScrollTop","reachedBottom","scrollableContent","$scrollableContainer","maxScrollTop","_applyElasticScrolling","move","FooterViewFixedColumnsExtender","columnFixingModule","normalizeColumnIndicesByPoints","correctIndex","pointsByFixedColumns","_pointsByFixedColumns","isWidgetResizingMode","ROWS_VIEW","FOOTER_VIEW","COLUMN_VIEWS","ADAPTIVE_NAMESPACE","ADAPTIVE_ROW_TYPE","FORM_ITEM_CONTENT_CLASS","FORM_ITEM_MODIFIED","HIDDEN_COLUMN_CLASS","ADAPTIVE_COLUMN_BUTTON_CLASS","ADAPTIVE_COLUMN_NAME_CLASS","COMMAND_ADAPTIVE_HIDDEN_CLASS","ADAPTIVE_DETAIL_ROW_CLASS","ADAPTIVE_ITEM_TEXT_CLASS","LAST_DATA_CELL_CLASS","ADAPTIVE_COLUMN_NAME","EXPAND_ARIA_NAME","COLLAPSE_ARIA_NAME","getDataCellElements","adaptiveCellTemplate","$adaptiveColumnButton","adaptiveColumnsController","toggleExpandAdaptiveDetailRow","AdaptiveColumnsController","_getEditMode","_isItemModified","_renderFormViewTemplate","focusAction","renderFormTemplate","isItemEdited","_isItemEdited","_isVisibleColumnsValid","_calculatePercentWidths","percentWidths","_getItemPercentWidth","_isPercentWidth","_isColumnHidden","_hiddenColumns","hiddenColumn","columnsCanFit","fixedColumnsWidth","columnsWithoutFixedWidthCount","_calculatePercentWidth","_calculateColumnWidth","contentColumns","colWidth","widthOption","columnFitted","partialWidth","resultWidth","_getNotTruncatedColumnWidth","_getCommandColumnsWidth","adaptiveExpandedKey","_getFormItemsByHiddenColumns","hiddenColumns","_getAdaptiveColumnVisibleIndex","_hideAdaptiveColumn","_hideVisibleColumn","cssClassNameToRemove","_showHiddenColumns","$hiddenCommandCells","$hiddenCells","_hideVisibleColumnInView","rowsCount","cancelClassAdding","currentVisibleIndex","_findCellElementInRow","$rowCells","cellIsInsideGroup","groupCellLength","endGroupIndex","cssClassNameToAdd","hideRedundantColumns","hiddenQueue","hasHiddenColumns","needHideColumn","rootElementWidth","getVisibleContentColumns","visibleContentColumns","contentColumnsCount","columnBestFitWidth","getItemContentByColumnIndex","$itemContent","_$itemContents","alwaysExpanded","createFormByHiddenColumns","userFormOptions","defaultFormOptions","formOptions","_form","updateForm","hasAdaptiveDetailRowExpanded","_contentReadyAction","updateHidingQueue","columnsHasHidingPriority","hideableColumns","_hidingColumnsQueue","getHiddenColumns","getHidingColumnsQueue","adaptiveHidden","isAdaptiveVisible","isAdaptiveDetailRowExpanded","expandAdaptiveDetailRow","collapseAdaptiveDetailRow","updateCommandAdaptiveAriaLabel","setCommandAdaptiveAriaLabel","labelName","$adaptiveCommand","adaptivityModule","_adaptiveColumnsController","hidingColumnsQueueLength","hiddenColumnsLength","isClickable","_updateColumnWidth","hasHiddenColumnsOnly","hasAdaptiveHiddenWidth","$itemContents","_adaptiveController","oldExpandRowIndex","_isForceRowAdaptiveExpand","_collapseAdaptiveDetailRow","_cancelEditAdaptiveDetailRow","expandedKey","_adaptiveExpandedKey","adaptiveController","oldHiddenColumns","hidingColumnsQueue","_updateScrollableTimeoutID","expandRowIndex","lastRowIndex","oldExpandLoadedRowIndex","newExpandLoadedRowIndex","oldKey","isCellOrBatchMode","focusHandler","$dataCells","isCellElementsEquals","foreachColumnInfo","offsets","lastProcessedIndexes","processedColumnCount","createColumnsInfo","endIndex","newInfo","columnInfo","cellColspan","DEFAULT_COLUMN_WIDTH","setScrollPosition","HeaderViewExtender","ColumnsControllerExtender","getWidths","_beginPageIndex","_endPageIndex","_virtualVisibleColumns","currentPosition","getColumnPageSize","getTotalWidth","_fireColumnsChanged","_changedTimeout","_setScrollPositionCore","needColumnsChanged","visibleColumnsHash","beginFixedColumnCount","beginFixedColumns","beginColumns","beginWidth","endFixedColumnCount","endFixedColumns","endColumns","endWidth","columnsInfo","leftFixedColumnCount","virtualColumnsModule","columnPageSize","columnRenderingThreshold","_getEmptyCell","_defaultSetter","_cloneItem","_prepareItems","cols","_c","BUTTON_GROUP_CLASS","BUTTON_GROUP_WRAPPER_CLASS","BUTTON_GROUP_ITEM_CLASS","BUTTON_GROUP_FIRST_ITEM_CLASS","BUTTON_GROUP_LAST_ITEM_CLASS","BUTTON_GROUP_ITEM_HAS_WIDTH","SHAPE_STANDARD_CLASS","ButtonCollection","CollectionWidget","_initTemplates","_templateManager","addDefaultTemplates","BindableTemplate","_prepareItemStyles","_getBasicButtonOptions","_templateData","_hasCustomTemplate","stylingMode","itemTemplateProperty","_renderItemContent","_renderItemContentByNode","_focusTarget","_keyboardEventBindingTarget","_refreshContent","_prepareContent","_itemClass","_itemSelectHandler","ButtonGroup","buttonTemplate","_createItemClickAction","_itemClickAction","_renderButtons","_syncSelectionOptions","_fireSelectionChangeEvent","removedItems","$buttons","selectionRequired","_buttonsCollection","itemElements","DROP_DOWN_BUTTON_CLASS","DROP_DOWN_BUTTON_CONTENT","DROP_DOWN_BUTTON_ACTION_CLASS","DROP_DOWN_BUTTON_TOGGLE_CLASS","DROP_DOWN_BUTTON_HAS_ARROW_CLASS","DROP_DOWN_BUTTON_POPUP_WRAPPER_CLASS","DROP_DOWN_EDITOR_OVERLAY_CLASS","DX_BUTTON_TEXT_CLASS","DX_ICON_RIGHT_CLASS","DropDownButton","selectedItemKey","useSelectMode","splitButton","showArrowIcon","onButtonClick","opened","dropDownOptions","dropDownContentTemplate","wrapItemText","useItemTextAsTitle","groupTemplate","buttonGroupOptions","_setOptionsByReference","_createActionClickAction","_createSelectionChangedAction","_compileKeyGetter","_compileDisplayGetter","_itemsToDataSource","_options","cache","FunctionTemplate","$listContainer","_list","_listOptions","_escHandler","_getKey","storeKey","_keyGetter","_displayGetter","_renderButtonGroup","_updateArrowClass","_loadSelectedItem","_updateActionButton","_renderFocusTarget","_render","_renderPopup","_popup","_renderPopupContent","_this$_loadSingleDefe","_loadSingleDeferred","_lastSelectedItemData","cachedResult","_loadSingle","_actionClickAction","_selectionChangedAction","_fireSelectionChangedAction","previousItem","_fireItemClickAction","_actionItem","_actionButtonConfig","_getButtonGroupItems","_buttonGroupItemClick","isActionButton","isToggleButton","_buttonGroupOptions","buttonContent","$firstIcon","getImageContainer","$textContainer","$secondIcon","onKeyboardHandled","_keyboardHandler","_getTemplateByOption","_popupContentId","_popupOptions","horizontalAlignment","$buttonClicked","actionResult","_buttonGroup","_upDownKeyHandler","open","close","_tabHandler","_popupHidingHandler","_popupShowingHandler","_bindInnerWidgetOptions","_setAriaExpanded","_popupOptionChanged","_setPopupOption","optionsKeys","popupWidth","getSizeValue","_setWidgetOption","_ariaExpandedElements","ariaElement","owns","$buttonGroup","buttonElements","hasArrow","_setListOption","_getDisplayValue","isPrimitiveItem","_selectedItemKeyChanged","_actionButtonOptionChanged","newConfig","_selectModeChanged","_updateItemCollection","_updateDataSource","_updateKeyExpr","_this$_popup","_innerWidgetOptionChanged","DATAGRID_EXPORT_MENU_CLASS","DATAGRID_EXPORT_BUTTON_CLASS","DATAGRID_EXPORT_TOOLBAR_BUTTON_NAME","DATAGRID_EXPORT_ICON","DATAGRID_EXPORT_EXCEL_ICON","DATAGRID_EXPORT_SELECTED_ICON","DATAGRID_EXPORT_EXCEL_BUTTON_ICON","DataProvider","initialColumnWidthsByColumnIndex","selectedRowsOnly","_exportController","_initialColumnWidthsByColumnIndex","_selectedRowsOnly","_getGroupValue","_correctCellIndex","_initOptions","_getColumns","_selectionOnly","_getSelectedItems","_getAllItems","isHeadersVisible","wrapTextEnabled","hasCustomizeExcelCell","cellSourceData","gridCell","getHeaderStyles","bold","wrapText","getGroupRowStyle","getColumnStyles","columnStyles","getStyles","_getTotalCellStyleId","_this$getColumns$cell","getStyleId","getHeaderRowCount","isTotalCell","getColumnsByAllRows","getColumnsWidths","getGroupLevel","getCellType","ready","_convertFromGridGroupSummaryItems","gridGroupSummaryItems","getCellData","isExcelJS","correctedCellIndex","columnsRow","gridColumn","itemValues","totalSummaryItemName","_value","correctCellIndex","isSummaryAlignByColumn","getCellMerging","exportColspan","getFrozenArea","ExportController","exportMixin","currentHeaderRow","columnWidthsByColumnIndex","_getColumnWidths","_headersView","_needColumnExporting","currentColspan","_calculateExportColspan","childColumns","childColumn","_getFooterSummaryItems","isTotal","estimatedItemsCount","_hasSummaryGroupFooters","_getItemsWithSummaryGroupFooters","sourceItems","beforeGroupFooterItems","groupFooterItems","_updateGroupValuesWithSummaryByColumn","summaryValues","groupColumnCount","k","merge","_processUnExportedItems","isDetailExpandColumn","selectedRowData","getExportFormat","getDataProvider","columnsLastRowVisibleColumns","exportToExcel","clientExport","autoFilterEnabled","ignoreErrors","exportingAction","exportedAction","fileSavingAction","excel","_isSelectedRows","callbackList","exportButton","_getExportToolbarButton","_correctItemsPosition","_getExportToolbarItems","toolbarButtonOptions","_widgetOptions","_index","exportOptions","itemA","itemB","_isExportButtonVisible","_getButtonOptions","allowExportSelected","ROW_FOCUSED_CLASS","TABLE_POSTFIX_CLASS","FocusController","_keyboardController","_focusRowByIndex","_triggerFocusedRowChangedIfNeed","_focusRowByKey","focusedRowIndexByKey","isAutoNavigateToFocusedRow","_focusRowByIndexCore","setKeyByIndex","_isValidFocusedRowIndex","_getLastItemIndex","isRowFocused","_isLocalRowIndex","isVirtualScrolling","virtualItems","virtualItemsBegin","visibleRowsCount","visiblePagesCount","_setFocusedRowKeyByIndex","_navigateToRow","isFocusedRowKeyDefined","needFocusRow","isAutoNavigate","rowIndexByKey","_navigateTo","getPageIndexByKey","isVirtualRowRenderingMode","_navigateToVirtualRow","_navigateToVisibleRow","_triggerUpdateFocusedRow","scrollToRowElement","triggerUpdateFocusedRow","scrollTopPosition","_focusRowByKeyOrIndex","currentFocusedRowIndex","updateFocusedRow","isMainTable","_clearPreviousFocusedRow","_prepareFocusedRow","changedItem","$prevRowFocusedElement","focusedRow","$focusedRowTable","$firstRow","scrollToElementVertically","focusModule","visibleRow","isRowElement","sortByKey","notSortedKeys","notSortedKey","isPartialUpdate","isPartialUpdateWithDeleting","_updatePageIndexes","processUpdateFocusedRow","prevRenderingPageIndex","_lastRenderingPageIndex","renderingPageIndex","_isPagingByRendering","isPagingByRendering","isValidRowIndexByKey","needFocusRowByIndex","getGlobalRowIndexByKey","_calculateGlobalRowIndexByGroupedData","_calculateGlobalRowIndexByFlatData","groupFilter","useGroup","_generateFilterByKey","_concatWithCombinedFilter","_generateOperationFilterByKey","_generateBooleanFilter","sortInfo","isBoolean","booleanFilter","sortFilter","dataSourceKey","keyPart","_setFocusedRowElementTabIndex","_findRowElementForTabIndex","_scrollToFocusOnResize","getScrollElementPosition","currentScrollTop","isRowClick","_isFocusedRowInsideGroup","_getGroupPath","groupPath","_expandGroupByPath","isGroupKey","_calculateExpandedRowGlobalIndex","dataOffset","groupContinuationCount","currentPageOffset","COMMAND_HANDLE_CLASS","HANDLE_ICON_CLASS","SORTABLE_WITHOUT_HANDLE_CLASS","RowDraggingExtender","_updateHandleColumn","_allowReordering","isHandleColumnVisible","_getHandleTemplate","sortableName","sortableFixedName","currentSortableName","anotherSortableName","togglePointerEventsStyle","_this$sortableFixedNa","Sortable","_getDraggableRowTemplate","_rowDragging$onDragSt","onDragEnter","onDragLeave","_rowDragging$onDragEn","_rowDragging$onAdd","hasFixedSortable","_updateSortable","_sortable","_sortableFixed","sortable","_getDraggableGridOptions","gridOptions","$dataGridContainer","rowDraggingModule"],"sourceRoot":""}